//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: UNKNOWN
// Driver 
// Based on LLVM 3.4svn
//

.version 6.2
.target sm_61, texmode_independent
.address_size 64

	// .globl	gpu_memset
.const .align 4 .b8 c_append_helper[4096] = {255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255};
.const .align 8 .b8 k_sha512[640] = {34, 174, 40, 215, 152, 47, 138, 66, 205, 101, 239, 35, 145, 68, 55, 113, 47, 59, 77, 236, 207, 251, 192, 181, 188, 219, 137, 129, 165, 219, 181, 233, 56, 181, 72, 243, 91, 194, 86, 57, 25, 208, 5, 182, 241, 17, 241, 89, 155, 79, 25, 175, 164, 130, 63, 146, 24, 129, 109, 218, 213, 94, 28, 171, 66, 2, 3, 163, 152, 170, 7, 216, 190, 111, 112, 69, 1, 91, 131, 18, 140, 178, 228, 78, 190, 133, 49, 36, 226, 180, 255, 213, 195, 125, 12, 85, 111, 137, 123, 242, 116, 93, 190, 114, 177, 150, 22, 59, 254, 177, 222, 128, 53, 18, 199, 37, 167, 6, 220, 155, 148, 38, 105, 207, 116, 241, 155, 193, 210, 74, 241, 158, 193, 105, 155, 228, 227, 37, 79, 56, 134, 71, 190, 239, 181, 213, 140, 139, 198, 157, 193, 15, 101, 156, 172, 119, 204, 161, 12, 36, 117, 2, 43, 89, 111, 44, 233, 45, 131, 228, 166, 110, 170, 132, 116, 74, 212, 251, 65, 189, 220, 169, 176, 92, 181, 83, 17, 131, 218, 136, 249, 118, 171, 223, 102, 238, 82, 81, 62, 152, 16, 50, 180, 45, 109, 198, 49, 168, 63, 33, 251, 152, 200, 39, 3, 176, 228, 14, 239, 190, 199, 127, 89, 191, 194, 143, 168, 61, 243, 11, 224, 198, 37, 167, 10, 147, 71, 145, 167, 213, 111, 130, 3, 224, 81, 99, 202, 6, 112, 110, 14, 10, 103, 41, 41, 20, 252, 47, 210, 70, 133, 10, 183, 39, 38, 201, 38, 92, 56, 33, 27, 46, 237, 42, 196, 90, 252, 109, 44, 77, 223, 179, 149, 157, 19, 13, 56, 83, 222, 99, 175, 139, 84, 115, 10, 101, 168, 178, 119, 60, 187, 10, 106, 118, 230, 174, 237, 71, 46, 201, 194, 129, 59, 53, 130, 20, 133, 44, 114, 146, 100, 3, 241, 76, 161, 232, 191, 162, 1, 48, 66, 188, 75, 102, 26, 168, 145, 151, 248, 208, 112, 139, 75, 194, 48, 190, 84, 6, 163, 81, 108, 199, 24, 82, 239, 214, 25, 232, 146, 209, 16, 169, 101, 85, 36, 6, 153, 214, 42, 32, 113, 87, 133, 53, 14, 244, 184, 209, 187, 50, 112, 160, 106, 16, 200, 208, 210, 184, 22, 193, 164, 25, 83, 171, 65, 81, 8, 108, 55, 30, 153, 235, 142, 223, 76, 119, 72, 39, 168, 72, 155, 225, 181, 188, 176, 52, 99, 90, 201, 197, 179, 12, 28, 57, 203, 138, 65, 227, 74, 170, 216, 78, 115, 227, 99, 119, 79, 202, 156, 91, 163, 184, 178, 214, 243, 111, 46, 104, 252, 178, 239, 93, 238, 130, 143, 116, 96, 47, 23, 67, 111, 99, 165, 120, 114, 171, 240, 161, 20, 120, 200, 132, 236, 57, 100, 26, 8, 2, 199, 140, 40, 30, 99, 35, 250, 255, 190, 144, 233, 189, 130, 222, 235, 108, 80, 164, 21, 121, 198, 178, 247, 163, 249, 190, 43, 83, 114, 227, 242, 120, 113, 198, 156, 97, 38, 234, 206, 62, 39, 202, 7, 194, 192, 33, 199, 184, 134, 209, 30, 235, 224, 205, 214, 125, 218, 234, 120, 209, 110, 238, 127, 79, 125, 245, 186, 111, 23, 114, 170, 103, 240, 6, 166, 152, 200, 162, 197, 125, 99, 10, 174, 13, 249, 190, 4, 152, 63, 17, 27, 71, 28, 19, 53, 11, 113, 27, 132, 125, 4, 35, 245, 119, 219, 40, 147, 36, 199, 64, 123, 171, 202, 50, 188, 190, 201, 21, 10, 190, 158, 60, 76, 13, 16, 156, 196, 103, 29, 67, 182, 66, 62, 203, 190, 212, 197, 76, 42, 126, 101, 252, 156, 41, 127, 89, 236, 250, 214, 58, 171, 111, 203, 95, 23, 88, 71, 74, 140, 25, 68, 108};
.const .align 8 .b8 te0[1024] = {165, 99, 99, 198, 132, 124, 124, 248, 153, 119, 119, 238, 141, 123, 123, 246, 13, 242, 242, 255, 189, 107, 107, 214, 177, 111, 111, 222, 84, 197, 197, 145, 80, 48, 48, 96, 3, 1, 1, 2, 169, 103, 103, 206, 125, 43, 43, 86, 25, 254, 254, 231, 98, 215, 215, 181, 230, 171, 171, 77, 154, 118, 118, 236, 69, 202, 202, 143, 157, 130, 130, 31, 64, 201, 201, 137, 135, 125, 125, 250, 21, 250, 250, 239, 235, 89, 89, 178, 201, 71, 71, 142, 11, 240, 240, 251, 236, 173, 173, 65, 103, 212, 212, 179, 253, 162, 162, 95, 234, 175, 175, 69, 191, 156, 156, 35, 247, 164, 164, 83, 150, 114, 114, 228, 91, 192, 192, 155, 194, 183, 183, 117, 28, 253, 253, 225, 174, 147, 147, 61, 106, 38, 38, 76, 90, 54, 54, 108, 65, 63, 63, 126, 2, 247, 247, 245, 79, 204, 204, 131, 92, 52, 52, 104, 244, 165, 165, 81, 52, 229, 229, 209, 8, 241, 241, 249, 147, 113, 113, 226, 115, 216, 216, 171, 83, 49, 49, 98, 63, 21, 21, 42, 12, 4, 4, 8, 82, 199, 199, 149, 101, 35, 35, 70, 94, 195, 195, 157, 40, 24, 24, 48, 161, 150, 150, 55, 15, 5, 5, 10, 181, 154, 154, 47, 9, 7, 7, 14, 54, 18, 18, 36, 155, 128, 128, 27, 61, 226, 226, 223, 38, 235, 235, 205, 105, 39, 39, 78, 205, 178, 178, 127, 159, 117, 117, 234, 27, 9, 9, 18, 158, 131, 131, 29, 116, 44, 44, 88, 46, 26, 26, 52, 45, 27, 27, 54, 178, 110, 110, 220, 238, 90, 90, 180, 251, 160, 160, 91, 246, 82, 82, 164, 77, 59, 59, 118, 97, 214, 214, 183, 206, 179, 179, 125, 123, 41, 41, 82, 62, 227, 227, 221, 113, 47, 47, 94, 151, 132, 132, 19, 245, 83, 83, 166, 104, 209, 209, 185, 0, 0, 0, 0, 44, 237, 237, 193, 96, 32, 32, 64, 31, 252, 252, 227, 200, 177, 177, 121, 237, 91, 91, 182, 190, 106, 106, 212, 70, 203, 203, 141, 217, 190, 190, 103, 75, 57, 57, 114, 222, 74, 74, 148, 212, 76, 76, 152, 232, 88, 88, 176, 74, 207, 207, 133, 107, 208, 208, 187, 42, 239, 239, 197, 229, 170, 170, 79, 22, 251, 251, 237, 197, 67, 67, 134, 215, 77, 77, 154, 85, 51, 51, 102, 148, 133, 133, 17, 207, 69, 69, 138, 16, 249, 249, 233, 6, 2, 2, 4, 129, 127, 127, 254, 240, 80, 80, 160, 68, 60, 60, 120, 186, 159, 159, 37, 227, 168, 168, 75, 243, 81, 81, 162, 254, 163, 163, 93, 192, 64, 64, 128, 138, 143, 143, 5, 173, 146, 146, 63, 188, 157, 157, 33, 72, 56, 56, 112, 4, 245, 245, 241, 223, 188, 188, 99, 193, 182, 182, 119, 117, 218, 218, 175, 99, 33, 33, 66, 48, 16, 16, 32, 26, 255, 255, 229, 14, 243, 243, 253, 109, 210, 210, 191, 76, 205, 205, 129, 20, 12, 12, 24, 53, 19, 19, 38, 47, 236, 236, 195, 225, 95, 95, 190, 162, 151, 151, 53, 204, 68, 68, 136, 57, 23, 23, 46, 87, 196, 196, 147, 242, 167, 167, 85, 130, 126, 126, 252, 71, 61, 61, 122, 172, 100, 100, 200, 231, 93, 93, 186, 43, 25, 25, 50, 149, 115, 115, 230, 160, 96, 96, 192, 152, 129, 129, 25, 209, 79, 79, 158, 127, 220, 220, 163, 102, 34, 34, 68, 126, 42, 42, 84, 171, 144, 144, 59, 131, 136, 136, 11, 202, 70, 70, 140, 41, 238, 238, 199, 211, 184, 184, 107, 60, 20, 20, 40, 121, 222, 222, 167, 226, 94, 94, 188, 29, 11, 11, 22, 118, 219, 219, 173, 59, 224, 224, 219, 86, 50, 50, 100, 78, 58, 58, 116, 30, 10, 10, 20, 219, 73, 73, 146, 10, 6, 6, 12, 108, 36, 36, 72, 228, 92, 92, 184, 93, 194, 194, 159, 110, 211, 211, 189, 239, 172, 172, 67, 166, 98, 98, 196, 168, 145, 145, 57, 164, 149, 149, 49, 55, 228, 228, 211, 139, 121, 121, 242, 50, 231, 231, 213, 67, 200, 200, 139, 89, 55, 55, 110, 183, 109, 109, 218, 140, 141, 141, 1, 100, 213, 213, 177, 210, 78, 78, 156, 224, 169, 169, 73, 180, 108, 108, 216, 250, 86, 86, 172, 7, 244, 244, 243, 37, 234, 234, 207, 175, 101, 101, 202, 142, 122, 122, 244, 233, 174, 174, 71, 24, 8, 8, 16, 213, 186, 186, 111, 136, 120, 120, 240, 111, 37, 37, 74, 114, 46, 46, 92, 36, 28, 28, 56, 241, 166, 166, 87, 199, 180, 180, 115, 81, 198, 198, 151, 35, 232, 232, 203, 124, 221, 221, 161, 156, 116, 116, 232, 33, 31, 31, 62, 221, 75, 75, 150, 220, 189, 189, 97, 134, 139, 139, 13, 133, 138, 138, 15, 144, 112, 112, 224, 66, 62, 62, 124, 196, 181, 181, 113, 170, 102, 102, 204, 216, 72, 72, 144, 5, 3, 3, 6, 1, 246, 246, 247, 18, 14, 14, 28, 163, 97, 97, 194, 95, 53, 53, 106, 249, 87, 87, 174, 208, 185, 185, 105, 145, 134, 134, 23, 88, 193, 193, 153, 39, 29, 29, 58, 185, 158, 158, 39, 56, 225, 225, 217, 19, 248, 248, 235, 179, 152, 152, 43, 51, 17, 17, 34, 187, 105, 105, 210, 112, 217, 217, 169, 137, 142, 142, 7, 167, 148, 148, 51, 182, 155, 155, 45, 34, 30, 30, 60, 146, 135, 135, 21, 32, 233, 233, 201, 73, 206, 206, 135, 255, 85, 85, 170, 120, 40, 40, 80, 122, 223, 223, 165, 143, 140, 140, 3, 248, 161, 161, 89, 128, 137, 137, 9, 23, 13, 13, 26, 218, 191, 191, 101, 49, 230, 230, 215, 198, 66, 66, 132, 184, 104, 104, 208, 195, 65, 65, 130, 176, 153, 153, 41, 119, 45, 45, 90, 17, 15, 15, 30, 203, 176, 176, 123, 252, 84, 84, 168, 214, 187, 187, 109, 58, 22, 22, 44};
.const .align 8 .b8 te1[1024] = {99, 99, 198, 165, 124, 124, 248, 132, 119, 119, 238, 153, 123, 123, 246, 141, 242, 242, 255, 13, 107, 107, 214, 189, 111, 111, 222, 177, 197, 197, 145, 84, 48, 48, 96, 80, 1, 1, 2, 3, 103, 103, 206, 169, 43, 43, 86, 125, 254, 254, 231, 25, 215, 215, 181, 98, 171, 171, 77, 230, 118, 118, 236, 154, 202, 202, 143, 69, 130, 130, 31, 157, 201, 201, 137, 64, 125, 125, 250, 135, 250, 250, 239, 21, 89, 89, 178, 235, 71, 71, 142, 201, 240, 240, 251, 11, 173, 173, 65, 236, 212, 212, 179, 103, 162, 162, 95, 253, 175, 175, 69, 234, 156, 156, 35, 191, 164, 164, 83, 247, 114, 114, 228, 150, 192, 192, 155, 91, 183, 183, 117, 194, 253, 253, 225, 28, 147, 147, 61, 174, 38, 38, 76, 106, 54, 54, 108, 90, 63, 63, 126, 65, 247, 247, 245, 2, 204, 204, 131, 79, 52, 52, 104, 92, 165, 165, 81, 244, 229, 229, 209, 52, 241, 241, 249, 8, 113, 113, 226, 147, 216, 216, 171, 115, 49, 49, 98, 83, 21, 21, 42, 63, 4, 4, 8, 12, 199, 199, 149, 82, 35, 35, 70, 101, 195, 195, 157, 94, 24, 24, 48, 40, 150, 150, 55, 161, 5, 5, 10, 15, 154, 154, 47, 181, 7, 7, 14, 9, 18, 18, 36, 54, 128, 128, 27, 155, 226, 226, 223, 61, 235, 235, 205, 38, 39, 39, 78, 105, 178, 178, 127, 205, 117, 117, 234, 159, 9, 9, 18, 27, 131, 131, 29, 158, 44, 44, 88, 116, 26, 26, 52, 46, 27, 27, 54, 45, 110, 110, 220, 178, 90, 90, 180, 238, 160, 160, 91, 251, 82, 82, 164, 246, 59, 59, 118, 77, 214, 214, 183, 97, 179, 179, 125, 206, 41, 41, 82, 123, 227, 227, 221, 62, 47, 47, 94, 113, 132, 132, 19, 151, 83, 83, 166, 245, 209, 209, 185, 104, 0, 0, 0, 0, 237, 237, 193, 44, 32, 32, 64, 96, 252, 252, 227, 31, 177, 177, 121, 200, 91, 91, 182, 237, 106, 106, 212, 190, 203, 203, 141, 70, 190, 190, 103, 217, 57, 57, 114, 75, 74, 74, 148, 222, 76, 76, 152, 212, 88, 88, 176, 232, 207, 207, 133, 74, 208, 208, 187, 107, 239, 239, 197, 42, 170, 170, 79, 229, 251, 251, 237, 22, 67, 67, 134, 197, 77, 77, 154, 215, 51, 51, 102, 85, 133, 133, 17, 148, 69, 69, 138, 207, 249, 249, 233, 16, 2, 2, 4, 6, 127, 127, 254, 129, 80, 80, 160, 240, 60, 60, 120, 68, 159, 159, 37, 186, 168, 168, 75, 227, 81, 81, 162, 243, 163, 163, 93, 254, 64, 64, 128, 192, 143, 143, 5, 138, 146, 146, 63, 173, 157, 157, 33, 188, 56, 56, 112, 72, 245, 245, 241, 4, 188, 188, 99, 223, 182, 182, 119, 193, 218, 218, 175, 117, 33, 33, 66, 99, 16, 16, 32, 48, 255, 255, 229, 26, 243, 243, 253, 14, 210, 210, 191, 109, 205, 205, 129, 76, 12, 12, 24, 20, 19, 19, 38, 53, 236, 236, 195, 47, 95, 95, 190, 225, 151, 151, 53, 162, 68, 68, 136, 204, 23, 23, 46, 57, 196, 196, 147, 87, 167, 167, 85, 242, 126, 126, 252, 130, 61, 61, 122, 71, 100, 100, 200, 172, 93, 93, 186, 231, 25, 25, 50, 43, 115, 115, 230, 149, 96, 96, 192, 160, 129, 129, 25, 152, 79, 79, 158, 209, 220, 220, 163, 127, 34, 34, 68, 102, 42, 42, 84, 126, 144, 144, 59, 171, 136, 136, 11, 131, 70, 70, 140, 202, 238, 238, 199, 41, 184, 184, 107, 211, 20, 20, 40, 60, 222, 222, 167, 121, 94, 94, 188, 226, 11, 11, 22, 29, 219, 219, 173, 118, 224, 224, 219, 59, 50, 50, 100, 86, 58, 58, 116, 78, 10, 10, 20, 30, 73, 73, 146, 219, 6, 6, 12, 10, 36, 36, 72, 108, 92, 92, 184, 228, 194, 194, 159, 93, 211, 211, 189, 110, 172, 172, 67, 239, 98, 98, 196, 166, 145, 145, 57, 168, 149, 149, 49, 164, 228, 228, 211, 55, 121, 121, 242, 139, 231, 231, 213, 50, 200, 200, 139, 67, 55, 55, 110, 89, 109, 109, 218, 183, 141, 141, 1, 140, 213, 213, 177, 100, 78, 78, 156, 210, 169, 169, 73, 224, 108, 108, 216, 180, 86, 86, 172, 250, 244, 244, 243, 7, 234, 234, 207, 37, 101, 101, 202, 175, 122, 122, 244, 142, 174, 174, 71, 233, 8, 8, 16, 24, 186, 186, 111, 213, 120, 120, 240, 136, 37, 37, 74, 111, 46, 46, 92, 114, 28, 28, 56, 36, 166, 166, 87, 241, 180, 180, 115, 199, 198, 198, 151, 81, 232, 232, 203, 35, 221, 221, 161, 124, 116, 116, 232, 156, 31, 31, 62, 33, 75, 75, 150, 221, 189, 189, 97, 220, 139, 139, 13, 134, 138, 138, 15, 133, 112, 112, 224, 144, 62, 62, 124, 66, 181, 181, 113, 196, 102, 102, 204, 170, 72, 72, 144, 216, 3, 3, 6, 5, 246, 246, 247, 1, 14, 14, 28, 18, 97, 97, 194, 163, 53, 53, 106, 95, 87, 87, 174, 249, 185, 185, 105, 208, 134, 134, 23, 145, 193, 193, 153, 88, 29, 29, 58, 39, 158, 158, 39, 185, 225, 225, 217, 56, 248, 248, 235, 19, 152, 152, 43, 179, 17, 17, 34, 51, 105, 105, 210, 187, 217, 217, 169, 112, 142, 142, 7, 137, 148, 148, 51, 167, 155, 155, 45, 182, 30, 30, 60, 34, 135, 135, 21, 146, 233, 233, 201, 32, 206, 206, 135, 73, 85, 85, 170, 255, 40, 40, 80, 120, 223, 223, 165, 122, 140, 140, 3, 143, 161, 161, 89, 248, 137, 137, 9, 128, 13, 13, 26, 23, 191, 191, 101, 218, 230, 230, 215, 49, 66, 66, 132, 198, 104, 104, 208, 184, 65, 65, 130, 195, 153, 153, 41, 176, 45, 45, 90, 119, 15, 15, 30, 17, 176, 176, 123, 203, 84, 84, 168, 252, 187, 187, 109, 214, 22, 22, 44, 58};
.const .align 8 .b8 te2[1024] = {99, 198, 165, 99, 124, 248, 132, 124, 119, 238, 153, 119, 123, 246, 141, 123, 242, 255, 13, 242, 107, 214, 189, 107, 111, 222, 177, 111, 197, 145, 84, 197, 48, 96, 80, 48, 1, 2, 3, 1, 103, 206, 169, 103, 43, 86, 125, 43, 254, 231, 25, 254, 215, 181, 98, 215, 171, 77, 230, 171, 118, 236, 154, 118, 202, 143, 69, 202, 130, 31, 157, 130, 201, 137, 64, 201, 125, 250, 135, 125, 250, 239, 21, 250, 89, 178, 235, 89, 71, 142, 201, 71, 240, 251, 11, 240, 173, 65, 236, 173, 212, 179, 103, 212, 162, 95, 253, 162, 175, 69, 234, 175, 156, 35, 191, 156, 164, 83, 247, 164, 114, 228, 150, 114, 192, 155, 91, 192, 183, 117, 194, 183, 253, 225, 28, 253, 147, 61, 174, 147, 38, 76, 106, 38, 54, 108, 90, 54, 63, 126, 65, 63, 247, 245, 2, 247, 204, 131, 79, 204, 52, 104, 92, 52, 165, 81, 244, 165, 229, 209, 52, 229, 241, 249, 8, 241, 113, 226, 147, 113, 216, 171, 115, 216, 49, 98, 83, 49, 21, 42, 63, 21, 4, 8, 12, 4, 199, 149, 82, 199, 35, 70, 101, 35, 195, 157, 94, 195, 24, 48, 40, 24, 150, 55, 161, 150, 5, 10, 15, 5, 154, 47, 181, 154, 7, 14, 9, 7, 18, 36, 54, 18, 128, 27, 155, 128, 226, 223, 61, 226, 235, 205, 38, 235, 39, 78, 105, 39, 178, 127, 205, 178, 117, 234, 159, 117, 9, 18, 27, 9, 131, 29, 158, 131, 44, 88, 116, 44, 26, 52, 46, 26, 27, 54, 45, 27, 110, 220, 178, 110, 90, 180, 238, 90, 160, 91, 251, 160, 82, 164, 246, 82, 59, 118, 77, 59, 214, 183, 97, 214, 179, 125, 206, 179, 41, 82, 123, 41, 227, 221, 62, 227, 47, 94, 113, 47, 132, 19, 151, 132, 83, 166, 245, 83, 209, 185, 104, 209, 0, 0, 0, 0, 237, 193, 44, 237, 32, 64, 96, 32, 252, 227, 31, 252, 177, 121, 200, 177, 91, 182, 237, 91, 106, 212, 190, 106, 203, 141, 70, 203, 190, 103, 217, 190, 57, 114, 75, 57, 74, 148, 222, 74, 76, 152, 212, 76, 88, 176, 232, 88, 207, 133, 74, 207, 208, 187, 107, 208, 239, 197, 42, 239, 170, 79, 229, 170, 251, 237, 22, 251, 67, 134, 197, 67, 77, 154, 215, 77, 51, 102, 85, 51, 133, 17, 148, 133, 69, 138, 207, 69, 249, 233, 16, 249, 2, 4, 6, 2, 127, 254, 129, 127, 80, 160, 240, 80, 60, 120, 68, 60, 159, 37, 186, 159, 168, 75, 227, 168, 81, 162, 243, 81, 163, 93, 254, 163, 64, 128, 192, 64, 143, 5, 138, 143, 146, 63, 173, 146, 157, 33, 188, 157, 56, 112, 72, 56, 245, 241, 4, 245, 188, 99, 223, 188, 182, 119, 193, 182, 218, 175, 117, 218, 33, 66, 99, 33, 16, 32, 48, 16, 255, 229, 26, 255, 243, 253, 14, 243, 210, 191, 109, 210, 205, 129, 76, 205, 12, 24, 20, 12, 19, 38, 53, 19, 236, 195, 47, 236, 95, 190, 225, 95, 151, 53, 162, 151, 68, 136, 204, 68, 23, 46, 57, 23, 196, 147, 87, 196, 167, 85, 242, 167, 126, 252, 130, 126, 61, 122, 71, 61, 100, 200, 172, 100, 93, 186, 231, 93, 25, 50, 43, 25, 115, 230, 149, 115, 96, 192, 160, 96, 129, 25, 152, 129, 79, 158, 209, 79, 220, 163, 127, 220, 34, 68, 102, 34, 42, 84, 126, 42, 144, 59, 171, 144, 136, 11, 131, 136, 70, 140, 202, 70, 238, 199, 41, 238, 184, 107, 211, 184, 20, 40, 60, 20, 222, 167, 121, 222, 94, 188, 226, 94, 11, 22, 29, 11, 219, 173, 118, 219, 224, 219, 59, 224, 50, 100, 86, 50, 58, 116, 78, 58, 10, 20, 30, 10, 73, 146, 219, 73, 6, 12, 10, 6, 36, 72, 108, 36, 92, 184, 228, 92, 194, 159, 93, 194, 211, 189, 110, 211, 172, 67, 239, 172, 98, 196, 166, 98, 145, 57, 168, 145, 149, 49, 164, 149, 228, 211, 55, 228, 121, 242, 139, 121, 231, 213, 50, 231, 200, 139, 67, 200, 55, 110, 89, 55, 109, 218, 183, 109, 141, 1, 140, 141, 213, 177, 100, 213, 78, 156, 210, 78, 169, 73, 224, 169, 108, 216, 180, 108, 86, 172, 250, 86, 244, 243, 7, 244, 234, 207, 37, 234, 101, 202, 175, 101, 122, 244, 142, 122, 174, 71, 233, 174, 8, 16, 24, 8, 186, 111, 213, 186, 120, 240, 136, 120, 37, 74, 111, 37, 46, 92, 114, 46, 28, 56, 36, 28, 166, 87, 241, 166, 180, 115, 199, 180, 198, 151, 81, 198, 232, 203, 35, 232, 221, 161, 124, 221, 116, 232, 156, 116, 31, 62, 33, 31, 75, 150, 221, 75, 189, 97, 220, 189, 139, 13, 134, 139, 138, 15, 133, 138, 112, 224, 144, 112, 62, 124, 66, 62, 181, 113, 196, 181, 102, 204, 170, 102, 72, 144, 216, 72, 3, 6, 5, 3, 246, 247, 1, 246, 14, 28, 18, 14, 97, 194, 163, 97, 53, 106, 95, 53, 87, 174, 249, 87, 185, 105, 208, 185, 134, 23, 145, 134, 193, 153, 88, 193, 29, 58, 39, 29, 158, 39, 185, 158, 225, 217, 56, 225, 248, 235, 19, 248, 152, 43, 179, 152, 17, 34, 51, 17, 105, 210, 187, 105, 217, 169, 112, 217, 142, 7, 137, 142, 148, 51, 167, 148, 155, 45, 182, 155, 30, 60, 34, 30, 135, 21, 146, 135, 233, 201, 32, 233, 206, 135, 73, 206, 85, 170, 255, 85, 40, 80, 120, 40, 223, 165, 122, 223, 140, 3, 143, 140, 161, 89, 248, 161, 137, 9, 128, 137, 13, 26, 23, 13, 191, 101, 218, 191, 230, 215, 49, 230, 66, 132, 198, 66, 104, 208, 184, 104, 65, 130, 195, 65, 153, 41, 176, 153, 45, 90, 119, 45, 15, 30, 17, 15, 176, 123, 203, 176, 84, 168, 252, 84, 187, 109, 214, 187, 22, 44, 58, 22};
.const .align 8 .b8 te3[1024] = {198, 165, 99, 99, 248, 132, 124, 124, 238, 153, 119, 119, 246, 141, 123, 123, 255, 13, 242, 242, 214, 189, 107, 107, 222, 177, 111, 111, 145, 84, 197, 197, 96, 80, 48, 48, 2, 3, 1, 1, 206, 169, 103, 103, 86, 125, 43, 43, 231, 25, 254, 254, 181, 98, 215, 215, 77, 230, 171, 171, 236, 154, 118, 118, 143, 69, 202, 202, 31, 157, 130, 130, 137, 64, 201, 201, 250, 135, 125, 125, 239, 21, 250, 250, 178, 235, 89, 89, 142, 201, 71, 71, 251, 11, 240, 240, 65, 236, 173, 173, 179, 103, 212, 212, 95, 253, 162, 162, 69, 234, 175, 175, 35, 191, 156, 156, 83, 247, 164, 164, 228, 150, 114, 114, 155, 91, 192, 192, 117, 194, 183, 183, 225, 28, 253, 253, 61, 174, 147, 147, 76, 106, 38, 38, 108, 90, 54, 54, 126, 65, 63, 63, 245, 2, 247, 247, 131, 79, 204, 204, 104, 92, 52, 52, 81, 244, 165, 165, 209, 52, 229, 229, 249, 8, 241, 241, 226, 147, 113, 113, 171, 115, 216, 216, 98, 83, 49, 49, 42, 63, 21, 21, 8, 12, 4, 4, 149, 82, 199, 199, 70, 101, 35, 35, 157, 94, 195, 195, 48, 40, 24, 24, 55, 161, 150, 150, 10, 15, 5, 5, 47, 181, 154, 154, 14, 9, 7, 7, 36, 54, 18, 18, 27, 155, 128, 128, 223, 61, 226, 226, 205, 38, 235, 235, 78, 105, 39, 39, 127, 205, 178, 178, 234, 159, 117, 117, 18, 27, 9, 9, 29, 158, 131, 131, 88, 116, 44, 44, 52, 46, 26, 26, 54, 45, 27, 27, 220, 178, 110, 110, 180, 238, 90, 90, 91, 251, 160, 160, 164, 246, 82, 82, 118, 77, 59, 59, 183, 97, 214, 214, 125, 206, 179, 179, 82, 123, 41, 41, 221, 62, 227, 227, 94, 113, 47, 47, 19, 151, 132, 132, 166, 245, 83, 83, 185, 104, 209, 209, 0, 0, 0, 0, 193, 44, 237, 237, 64, 96, 32, 32, 227, 31, 252, 252, 121, 200, 177, 177, 182, 237, 91, 91, 212, 190, 106, 106, 141, 70, 203, 203, 103, 217, 190, 190, 114, 75, 57, 57, 148, 222, 74, 74, 152, 212, 76, 76, 176, 232, 88, 88, 133, 74, 207, 207, 187, 107, 208, 208, 197, 42, 239, 239, 79, 229, 170, 170, 237, 22, 251, 251, 134, 197, 67, 67, 154, 215, 77, 77, 102, 85, 51, 51, 17, 148, 133, 133, 138, 207, 69, 69, 233, 16, 249, 249, 4, 6, 2, 2, 254, 129, 127, 127, 160, 240, 80, 80, 120, 68, 60, 60, 37, 186, 159, 159, 75, 227, 168, 168, 162, 243, 81, 81, 93, 254, 163, 163, 128, 192, 64, 64, 5, 138, 143, 143, 63, 173, 146, 146, 33, 188, 157, 157, 112, 72, 56, 56, 241, 4, 245, 245, 99, 223, 188, 188, 119, 193, 182, 182, 175, 117, 218, 218, 66, 99, 33, 33, 32, 48, 16, 16, 229, 26, 255, 255, 253, 14, 243, 243, 191, 109, 210, 210, 129, 76, 205, 205, 24, 20, 12, 12, 38, 53, 19, 19, 195, 47, 236, 236, 190, 225, 95, 95, 53, 162, 151, 151, 136, 204, 68, 68, 46, 57, 23, 23, 147, 87, 196, 196, 85, 242, 167, 167, 252, 130, 126, 126, 122, 71, 61, 61, 200, 172, 100, 100, 186, 231, 93, 93, 50, 43, 25, 25, 230, 149, 115, 115, 192, 160, 96, 96, 25, 152, 129, 129, 158, 209, 79, 79, 163, 127, 220, 220, 68, 102, 34, 34, 84, 126, 42, 42, 59, 171, 144, 144, 11, 131, 136, 136, 140, 202, 70, 70, 199, 41, 238, 238, 107, 211, 184, 184, 40, 60, 20, 20, 167, 121, 222, 222, 188, 226, 94, 94, 22, 29, 11, 11, 173, 118, 219, 219, 219, 59, 224, 224, 100, 86, 50, 50, 116, 78, 58, 58, 20, 30, 10, 10, 146, 219, 73, 73, 12, 10, 6, 6, 72, 108, 36, 36, 184, 228, 92, 92, 159, 93, 194, 194, 189, 110, 211, 211, 67, 239, 172, 172, 196, 166, 98, 98, 57, 168, 145, 145, 49, 164, 149, 149, 211, 55, 228, 228, 242, 139, 121, 121, 213, 50, 231, 231, 139, 67, 200, 200, 110, 89, 55, 55, 218, 183, 109, 109, 1, 140, 141, 141, 177, 100, 213, 213, 156, 210, 78, 78, 73, 224, 169, 169, 216, 180, 108, 108, 172, 250, 86, 86, 243, 7, 244, 244, 207, 37, 234, 234, 202, 175, 101, 101, 244, 142, 122, 122, 71, 233, 174, 174, 16, 24, 8, 8, 111, 213, 186, 186, 240, 136, 120, 120, 74, 111, 37, 37, 92, 114, 46, 46, 56, 36, 28, 28, 87, 241, 166, 166, 115, 199, 180, 180, 151, 81, 198, 198, 203, 35, 232, 232, 161, 124, 221, 221, 232, 156, 116, 116, 62, 33, 31, 31, 150, 221, 75, 75, 97, 220, 189, 189, 13, 134, 139, 139, 15, 133, 138, 138, 224, 144, 112, 112, 124, 66, 62, 62, 113, 196, 181, 181, 204, 170, 102, 102, 144, 216, 72, 72, 6, 5, 3, 3, 247, 1, 246, 246, 28, 18, 14, 14, 194, 163, 97, 97, 106, 95, 53, 53, 174, 249, 87, 87, 105, 208, 185, 185, 23, 145, 134, 134, 153, 88, 193, 193, 58, 39, 29, 29, 39, 185, 158, 158, 217, 56, 225, 225, 235, 19, 248, 248, 43, 179, 152, 152, 34, 51, 17, 17, 210, 187, 105, 105, 169, 112, 217, 217, 7, 137, 142, 142, 51, 167, 148, 148, 45, 182, 155, 155, 60, 34, 30, 30, 21, 146, 135, 135, 201, 32, 233, 233, 135, 73, 206, 206, 170, 255, 85, 85, 80, 120, 40, 40, 165, 122, 223, 223, 3, 143, 140, 140, 89, 248, 161, 161, 9, 128, 137, 137, 26, 23, 13, 13, 101, 218, 191, 191, 215, 49, 230, 230, 132, 198, 66, 66, 208, 184, 104, 104, 130, 195, 65, 65, 41, 176, 153, 153, 90, 119, 45, 45, 30, 17, 15, 15, 123, 203, 176, 176, 168, 252, 84, 84, 109, 214, 187, 187, 44, 58, 22, 22};
.const .align 8 .b8 te4[1024] = {99, 99, 99, 99, 124, 124, 124, 124, 119, 119, 119, 119, 123, 123, 123, 123, 242, 242, 242, 242, 107, 107, 107, 107, 111, 111, 111, 111, 197, 197, 197, 197, 48, 48, 48, 48, 1, 1, 1, 1, 103, 103, 103, 103, 43, 43, 43, 43, 254, 254, 254, 254, 215, 215, 215, 215, 171, 171, 171, 171, 118, 118, 118, 118, 202, 202, 202, 202, 130, 130, 130, 130, 201, 201, 201, 201, 125, 125, 125, 125, 250, 250, 250, 250, 89, 89, 89, 89, 71, 71, 71, 71, 240, 240, 240, 240, 173, 173, 173, 173, 212, 212, 212, 212, 162, 162, 162, 162, 175, 175, 175, 175, 156, 156, 156, 156, 164, 164, 164, 164, 114, 114, 114, 114, 192, 192, 192, 192, 183, 183, 183, 183, 253, 253, 253, 253, 147, 147, 147, 147, 38, 38, 38, 38, 54, 54, 54, 54, 63, 63, 63, 63, 247, 247, 247, 247, 204, 204, 204, 204, 52, 52, 52, 52, 165, 165, 165, 165, 229, 229, 229, 229, 241, 241, 241, 241, 113, 113, 113, 113, 216, 216, 216, 216, 49, 49, 49, 49, 21, 21, 21, 21, 4, 4, 4, 4, 199, 199, 199, 199, 35, 35, 35, 35, 195, 195, 195, 195, 24, 24, 24, 24, 150, 150, 150, 150, 5, 5, 5, 5, 154, 154, 154, 154, 7, 7, 7, 7, 18, 18, 18, 18, 128, 128, 128, 128, 226, 226, 226, 226, 235, 235, 235, 235, 39, 39, 39, 39, 178, 178, 178, 178, 117, 117, 117, 117, 9, 9, 9, 9, 131, 131, 131, 131, 44, 44, 44, 44, 26, 26, 26, 26, 27, 27, 27, 27, 110, 110, 110, 110, 90, 90, 90, 90, 160, 160, 160, 160, 82, 82, 82, 82, 59, 59, 59, 59, 214, 214, 214, 214, 179, 179, 179, 179, 41, 41, 41, 41, 227, 227, 227, 227, 47, 47, 47, 47, 132, 132, 132, 132, 83, 83, 83, 83, 209, 209, 209, 209, 0, 0, 0, 0, 237, 237, 237, 237, 32, 32, 32, 32, 252, 252, 252, 252, 177, 177, 177, 177, 91, 91, 91, 91, 106, 106, 106, 106, 203, 203, 203, 203, 190, 190, 190, 190, 57, 57, 57, 57, 74, 74, 74, 74, 76, 76, 76, 76, 88, 88, 88, 88, 207, 207, 207, 207, 208, 208, 208, 208, 239, 239, 239, 239, 170, 170, 170, 170, 251, 251, 251, 251, 67, 67, 67, 67, 77, 77, 77, 77, 51, 51, 51, 51, 133, 133, 133, 133, 69, 69, 69, 69, 249, 249, 249, 249, 2, 2, 2, 2, 127, 127, 127, 127, 80, 80, 80, 80, 60, 60, 60, 60, 159, 159, 159, 159, 168, 168, 168, 168, 81, 81, 81, 81, 163, 163, 163, 163, 64, 64, 64, 64, 143, 143, 143, 143, 146, 146, 146, 146, 157, 157, 157, 157, 56, 56, 56, 56, 245, 245, 245, 245, 188, 188, 188, 188, 182, 182, 182, 182, 218, 218, 218, 218, 33, 33, 33, 33, 16, 16, 16, 16, 255, 255, 255, 255, 243, 243, 243, 243, 210, 210, 210, 210, 205, 205, 205, 205, 12, 12, 12, 12, 19, 19, 19, 19, 236, 236, 236, 236, 95, 95, 95, 95, 151, 151, 151, 151, 68, 68, 68, 68, 23, 23, 23, 23, 196, 196, 196, 196, 167, 167, 167, 167, 126, 126, 126, 126, 61, 61, 61, 61, 100, 100, 100, 100, 93, 93, 93, 93, 25, 25, 25, 25, 115, 115, 115, 115, 96, 96, 96, 96, 129, 129, 129, 129, 79, 79, 79, 79, 220, 220, 220, 220, 34, 34, 34, 34, 42, 42, 42, 42, 144, 144, 144, 144, 136, 136, 136, 136, 70, 70, 70, 70, 238, 238, 238, 238, 184, 184, 184, 184, 20, 20, 20, 20, 222, 222, 222, 222, 94, 94, 94, 94, 11, 11, 11, 11, 219, 219, 219, 219, 224, 224, 224, 224, 50, 50, 50, 50, 58, 58, 58, 58, 10, 10, 10, 10, 73, 73, 73, 73, 6, 6, 6, 6, 36, 36, 36, 36, 92, 92, 92, 92, 194, 194, 194, 194, 211, 211, 211, 211, 172, 172, 172, 172, 98, 98, 98, 98, 145, 145, 145, 145, 149, 149, 149, 149, 228, 228, 228, 228, 121, 121, 121, 121, 231, 231, 231, 231, 200, 200, 200, 200, 55, 55, 55, 55, 109, 109, 109, 109, 141, 141, 141, 141, 213, 213, 213, 213, 78, 78, 78, 78, 169, 169, 169, 169, 108, 108, 108, 108, 86, 86, 86, 86, 244, 244, 244, 244, 234, 234, 234, 234, 101, 101, 101, 101, 122, 122, 122, 122, 174, 174, 174, 174, 8, 8, 8, 8, 186, 186, 186, 186, 120, 120, 120, 120, 37, 37, 37, 37, 46, 46, 46, 46, 28, 28, 28, 28, 166, 166, 166, 166, 180, 180, 180, 180, 198, 198, 198, 198, 232, 232, 232, 232, 221, 221, 221, 221, 116, 116, 116, 116, 31, 31, 31, 31, 75, 75, 75, 75, 189, 189, 189, 189, 139, 139, 139, 139, 138, 138, 138, 138, 112, 112, 112, 112, 62, 62, 62, 62, 181, 181, 181, 181, 102, 102, 102, 102, 72, 72, 72, 72, 3, 3, 3, 3, 246, 246, 246, 246, 14, 14, 14, 14, 97, 97, 97, 97, 53, 53, 53, 53, 87, 87, 87, 87, 185, 185, 185, 185, 134, 134, 134, 134, 193, 193, 193, 193, 29, 29, 29, 29, 158, 158, 158, 158, 225, 225, 225, 225, 248, 248, 248, 248, 152, 152, 152, 152, 17, 17, 17, 17, 105, 105, 105, 105, 217, 217, 217, 217, 142, 142, 142, 142, 148, 148, 148, 148, 155, 155, 155, 155, 30, 30, 30, 30, 135, 135, 135, 135, 233, 233, 233, 233, 206, 206, 206, 206, 85, 85, 85, 85, 40, 40, 40, 40, 223, 223, 223, 223, 140, 140, 140, 140, 161, 161, 161, 161, 137, 137, 137, 137, 13, 13, 13, 13, 191, 191, 191, 191, 230, 230, 230, 230, 66, 66, 66, 66, 104, 104, 104, 104, 65, 65, 65, 65, 153, 153, 153, 153, 45, 45, 45, 45, 15, 15, 15, 15, 176, 176, 176, 176, 84, 84, 84, 84, 187, 187, 187, 187, 22, 22, 22, 22};
.const .align 8 .b8 td0[1024] = {80, 167, 244, 81, 83, 101, 65, 126, 195, 164, 23, 26, 150, 94, 39, 58, 203, 107, 171, 59, 241, 69, 157, 31, 171, 88, 250, 172, 147, 3, 227, 75, 85, 250, 48, 32, 246, 109, 118, 173, 145, 118, 204, 136, 37, 76, 2, 245, 252, 215, 229, 79, 215, 203, 42, 197, 128, 68, 53, 38, 143, 163, 98, 181, 73, 90, 177, 222, 103, 27, 186, 37, 152, 14, 234, 69, 225, 192, 254, 93, 2, 117, 47, 195, 18, 240, 76, 129, 163, 151, 70, 141, 198, 249, 211, 107, 231, 95, 143, 3, 149, 156, 146, 21, 235, 122, 109, 191, 218, 89, 82, 149, 45, 131, 190, 212, 211, 33, 116, 88, 41, 105, 224, 73, 68, 200, 201, 142, 106, 137, 194, 117, 120, 121, 142, 244, 107, 62, 88, 153, 221, 113, 185, 39, 182, 79, 225, 190, 23, 173, 136, 240, 102, 172, 32, 201, 180, 58, 206, 125, 24, 74, 223, 99, 130, 49, 26, 229, 96, 51, 81, 151, 69, 127, 83, 98, 224, 119, 100, 177, 132, 174, 107, 187, 28, 160, 129, 254, 148, 43, 8, 249, 88, 104, 72, 112, 25, 253, 69, 143, 135, 108, 222, 148, 183, 248, 123, 82, 35, 211, 115, 171, 226, 2, 75, 114, 87, 143, 31, 227, 42, 171, 85, 102, 7, 40, 235, 178, 3, 194, 181, 47, 154, 123, 197, 134, 165, 8, 55, 211, 242, 135, 40, 48, 178, 165, 191, 35, 186, 106, 3, 2, 92, 130, 22, 237, 43, 28, 207, 138, 146, 180, 121, 167, 240, 242, 7, 243, 161, 226, 105, 78, 205, 244, 218, 101, 213, 190, 5, 6, 31, 98, 52, 209, 138, 254, 166, 196, 157, 83, 46, 52, 160, 85, 243, 162, 50, 225, 138, 5, 117, 235, 246, 164, 57, 236, 131, 11, 170, 239, 96, 64, 6, 159, 113, 94, 81, 16, 110, 189, 249, 138, 33, 62, 61, 6, 221, 150, 174, 5, 62, 221, 70, 189, 230, 77, 181, 141, 84, 145, 5, 93, 196, 113, 111, 212, 6, 4, 255, 21, 80, 96, 36, 251, 152, 25, 151, 233, 189, 214, 204, 67, 64, 137, 119, 158, 217, 103, 189, 66, 232, 176, 136, 139, 137, 7, 56, 91, 25, 231, 219, 238, 200, 121, 71, 10, 124, 161, 233, 15, 66, 124, 201, 30, 132, 248, 0, 0, 0, 0, 131, 134, 128, 9, 72, 237, 43, 50, 172, 112, 17, 30, 78, 114, 90, 108, 251, 255, 14, 253, 86, 56, 133, 15, 30, 213, 174, 61, 39, 57, 45, 54, 100, 217, 15, 10, 33, 166, 92, 104, 209, 84, 91, 155, 58, 46, 54, 36, 177, 103, 10, 12, 15, 231, 87, 147, 210, 150, 238, 180, 158, 145, 155, 27, 79, 197, 192, 128, 162, 32, 220, 97, 105, 75, 119, 90, 22, 26, 18, 28, 10, 186, 147, 226, 229, 42, 160, 192, 67, 224, 34, 60, 29, 23, 27, 18, 11, 13, 9, 14, 173, 199, 139, 242, 185, 168, 182, 45, 200, 169, 30, 20, 133, 25, 241, 87, 76, 7, 117, 175, 187, 221, 153, 238, 253, 96, 127, 163, 159, 38, 1, 247, 188, 245, 114, 92, 197, 59, 102, 68, 52, 126, 251, 91, 118, 41, 67, 139, 220, 198, 35, 203, 104, 252, 237, 182, 99, 241, 228, 184, 202, 220, 49, 215, 16, 133, 99, 66, 64, 34, 151, 19, 32, 17, 198, 132, 125, 36, 74, 133, 248, 61, 187, 210, 17, 50, 249, 174, 109, 161, 41, 199, 75, 47, 158, 29, 243, 48, 178, 220, 236, 82, 134, 13, 208, 227, 193, 119, 108, 22, 179, 43, 153, 185, 112, 169, 250, 72, 148, 17, 34, 100, 233, 71, 196, 140, 252, 168, 26, 63, 240, 160, 216, 44, 125, 86, 239, 144, 51, 34, 199, 78, 73, 135, 193, 209, 56, 217, 254, 162, 202, 140, 54, 11, 212, 152, 207, 129, 245, 166, 40, 222, 122, 165, 38, 142, 183, 218, 164, 191, 173, 63, 228, 157, 58, 44, 13, 146, 120, 80, 155, 204, 95, 106, 98, 70, 126, 84, 194, 19, 141, 246, 232, 184, 216, 144, 94, 247, 57, 46, 245, 175, 195, 130, 190, 128, 93, 159, 124, 147, 208, 105, 169, 45, 213, 111, 179, 18, 37, 207, 59, 153, 172, 200, 167, 125, 24, 16, 110, 99, 156, 232, 123, 187, 59, 219, 9, 120, 38, 205, 244, 24, 89, 110, 1, 183, 154, 236, 168, 154, 79, 131, 101, 110, 149, 230, 126, 230, 255, 170, 8, 207, 188, 33, 230, 232, 21, 239, 217, 155, 231, 186, 206, 54, 111, 74, 212, 9, 159, 234, 214, 124, 176, 41, 175, 178, 164, 49, 49, 35, 63, 42, 48, 148, 165, 198, 192, 102, 162, 53, 55, 188, 78, 116, 166, 202, 130, 252, 176, 208, 144, 224, 21, 216, 167, 51, 74, 152, 4, 241, 247, 218, 236, 65, 14, 80, 205, 127, 47, 246, 145, 23, 141, 214, 77, 118, 77, 176, 239, 67, 84, 77, 170, 204, 223, 4, 150, 228, 227, 181, 209, 158, 27, 136, 106, 76, 184, 31, 44, 193, 127, 81, 101, 70, 4, 234, 94, 157, 93, 53, 140, 1, 115, 116, 135, 250, 46, 65, 11, 251, 90, 29, 103, 179, 82, 210, 219, 146, 51, 86, 16, 233, 19, 71, 214, 109, 140, 97, 215, 154, 122, 12, 161, 55, 142, 20, 248, 89, 137, 60, 19, 235, 238, 39, 169, 206, 53, 201, 97, 183, 237, 229, 28, 225, 60, 177, 71, 122, 89, 223, 210, 156, 63, 115, 242, 85, 121, 206, 20, 24, 191, 55, 199, 115, 234, 205, 247, 83, 91, 170, 253, 95, 20, 111, 61, 223, 134, 219, 68, 120, 129, 243, 175, 202, 62, 196, 104, 185, 44, 52, 36, 56, 95, 64, 163, 194, 114, 195, 29, 22, 12, 37, 226, 188, 139, 73, 60, 40, 65, 149, 13, 255, 113, 1, 168, 57, 222, 179, 12, 8, 156, 228, 180, 216, 144, 193, 86, 100, 97, 132, 203, 123, 112, 182, 50, 213, 116, 92, 108, 72, 66, 87, 184, 208};
.const .align 8 .b8 td1[1024] = {167, 244, 81, 80, 101, 65, 126, 83, 164, 23, 26, 195, 94, 39, 58, 150, 107, 171, 59, 203, 69, 157, 31, 241, 88, 250, 172, 171, 3, 227, 75, 147, 250, 48, 32, 85, 109, 118, 173, 246, 118, 204, 136, 145, 76, 2, 245, 37, 215, 229, 79, 252, 203, 42, 197, 215, 68, 53, 38, 128, 163, 98, 181, 143, 90, 177, 222, 73, 27, 186, 37, 103, 14, 234, 69, 152, 192, 254, 93, 225, 117, 47, 195, 2, 240, 76, 129, 18, 151, 70, 141, 163, 249, 211, 107, 198, 95, 143, 3, 231, 156, 146, 21, 149, 122, 109, 191, 235, 89, 82, 149, 218, 131, 190, 212, 45, 33, 116, 88, 211, 105, 224, 73, 41, 200, 201, 142, 68, 137, 194, 117, 106, 121, 142, 244, 120, 62, 88, 153, 107, 113, 185, 39, 221, 79, 225, 190, 182, 173, 136, 240, 23, 172, 32, 201, 102, 58, 206, 125, 180, 74, 223, 99, 24, 49, 26, 229, 130, 51, 81, 151, 96, 127, 83, 98, 69, 119, 100, 177, 224, 174, 107, 187, 132, 160, 129, 254, 28, 43, 8, 249, 148, 104, 72, 112, 88, 253, 69, 143, 25, 108, 222, 148, 135, 248, 123, 82, 183, 211, 115, 171, 35, 2, 75, 114, 226, 143, 31, 227, 87, 171, 85, 102, 42, 40, 235, 178, 7, 194, 181, 47, 3, 123, 197, 134, 154, 8, 55, 211, 165, 135, 40, 48, 242, 165, 191, 35, 178, 106, 3, 2, 186, 130, 22, 237, 92, 28, 207, 138, 43, 180, 121, 167, 146, 242, 7, 243, 240, 226, 105, 78, 161, 244, 218, 101, 205, 190, 5, 6, 213, 98, 52, 209, 31, 254, 166, 196, 138, 83, 46, 52, 157, 85, 243, 162, 160, 225, 138, 5, 50, 235, 246, 164, 117, 236, 131, 11, 57, 239, 96, 64, 170, 159, 113, 94, 6, 16, 110, 189, 81, 138, 33, 62, 249, 6, 221, 150, 61, 5, 62, 221, 174, 189, 230, 77, 70, 141, 84, 145, 181, 93, 196, 113, 5, 212, 6, 4, 111, 21, 80, 96, 255, 251, 152, 25, 36, 233, 189, 214, 151, 67, 64, 137, 204, 158, 217, 103, 119, 66, 232, 176, 189, 139, 137, 7, 136, 91, 25, 231, 56, 238, 200, 121, 219, 10, 124, 161, 71, 15, 66, 124, 233, 30, 132, 248, 201, 0, 0, 0, 0, 134, 128, 9, 131, 237, 43, 50, 72, 112, 17, 30, 172, 114, 90, 108, 78, 255, 14, 253, 251, 56, 133, 15, 86, 213, 174, 61, 30, 57, 45, 54, 39, 217, 15, 10, 100, 166, 92, 104, 33, 84, 91, 155, 209, 46, 54, 36, 58, 103, 10, 12, 177, 231, 87, 147, 15, 150, 238, 180, 210, 145, 155, 27, 158, 197, 192, 128, 79, 32, 220, 97, 162, 75, 119, 90, 105, 26, 18, 28, 22, 186, 147, 226, 10, 42, 160, 192, 229, 224, 34, 60, 67, 23, 27, 18, 29, 13, 9, 14, 11, 199, 139, 242, 173, 168, 182, 45, 185, 169, 30, 20, 200, 25, 241, 87, 133, 7, 117, 175, 76, 221, 153, 238, 187, 96, 127, 163, 253, 38, 1, 247, 159, 245, 114, 92, 188, 59, 102, 68, 197, 126, 251, 91, 52, 41, 67, 139, 118, 198, 35, 203, 220, 252, 237, 182, 104, 241, 228, 184, 99, 220, 49, 215, 202, 133, 99, 66, 16, 34, 151, 19, 64, 17, 198, 132, 32, 36, 74, 133, 125, 61, 187, 210, 248, 50, 249, 174, 17, 161, 41, 199, 109, 47, 158, 29, 75, 48, 178, 220, 243, 82, 134, 13, 236, 227, 193, 119, 208, 22, 179, 43, 108, 185, 112, 169, 153, 72, 148, 17, 250, 100, 233, 71, 34, 140, 252, 168, 196, 63, 240, 160, 26, 44, 125, 86, 216, 144, 51, 34, 239, 78, 73, 135, 199, 209, 56, 217, 193, 162, 202, 140, 254, 11, 212, 152, 54, 129, 245, 166, 207, 222, 122, 165, 40, 142, 183, 218, 38, 191, 173, 63, 164, 157, 58, 44, 228, 146, 120, 80, 13, 204, 95, 106, 155, 70, 126, 84, 98, 19, 141, 246, 194, 184, 216, 144, 232, 247, 57, 46, 94, 175, 195, 130, 245, 128, 93, 159, 190, 147, 208, 105, 124, 45, 213, 111, 169, 18, 37, 207, 179, 153, 172, 200, 59, 125, 24, 16, 167, 99, 156, 232, 110, 187, 59, 219, 123, 120, 38, 205, 9, 24, 89, 110, 244, 183, 154, 236, 1, 154, 79, 131, 168, 110, 149, 230, 101, 230, 255, 170, 126, 207, 188, 33, 8, 232, 21, 239, 230, 155, 231, 186, 217, 54, 111, 74, 206, 9, 159, 234, 212, 124, 176, 41, 214, 178, 164, 49, 175, 35, 63, 42, 49, 148, 165, 198, 48, 102, 162, 53, 192, 188, 78, 116, 55, 202, 130, 252, 166, 208, 144, 224, 176, 216, 167, 51, 21, 152, 4, 241, 74, 218, 236, 65, 247, 80, 205, 127, 14, 246, 145, 23, 47, 214, 77, 118, 141, 176, 239, 67, 77, 77, 170, 204, 84, 4, 150, 228, 223, 181, 209, 158, 227, 136, 106, 76, 27, 31, 44, 193, 184, 81, 101, 70, 127, 234, 94, 157, 4, 53, 140, 1, 93, 116, 135, 250, 115, 65, 11, 251, 46, 29, 103, 179, 90, 210, 219, 146, 82, 86, 16, 233, 51, 71, 214, 109, 19, 97, 215, 154, 140, 12, 161, 55, 122, 20, 248, 89, 142, 60, 19, 235, 137, 39, 169, 206, 238, 201, 97, 183, 53, 229, 28, 225, 237, 177, 71, 122, 60, 223, 210, 156, 89, 115, 242, 85, 63, 206, 20, 24, 121, 55, 199, 115, 191, 205, 247, 83, 234, 170, 253, 95, 91, 111, 61, 223, 20, 219, 68, 120, 134, 243, 175, 202, 129, 196, 104, 185, 62, 52, 36, 56, 44, 64, 163, 194, 95, 195, 29, 22, 114, 37, 226, 188, 12, 73, 60, 40, 139, 149, 13, 255, 65, 1, 168, 57, 113, 179, 12, 8, 222, 228, 180, 216, 156, 193, 86, 100, 144, 132, 203, 123, 97, 182, 50, 213, 112, 92, 108, 72, 116, 87, 184, 208, 66};
.const .align 8 .b8 td2[1024] = {244, 81, 80, 167, 65, 126, 83, 101, 23, 26, 195, 164, 39, 58, 150, 94, 171, 59, 203, 107, 157, 31, 241, 69, 250, 172, 171, 88, 227, 75, 147, 3, 48, 32, 85, 250, 118, 173, 246, 109, 204, 136, 145, 118, 2, 245, 37, 76, 229, 79, 252, 215, 42, 197, 215, 203, 53, 38, 128, 68, 98, 181, 143, 163, 177, 222, 73, 90, 186, 37, 103, 27, 234, 69, 152, 14, 254, 93, 225, 192, 47, 195, 2, 117, 76, 129, 18, 240, 70, 141, 163, 151, 211, 107, 198, 249, 143, 3, 231, 95, 146, 21, 149, 156, 109, 191, 235, 122, 82, 149, 218, 89, 190, 212, 45, 131, 116, 88, 211, 33, 224, 73, 41, 105, 201, 142, 68, 200, 194, 117, 106, 137, 142, 244, 120, 121, 88, 153, 107, 62, 185, 39, 221, 113, 225, 190, 182, 79, 136, 240, 23, 173, 32, 201, 102, 172, 206, 125, 180, 58, 223, 99, 24, 74, 26, 229, 130, 49, 81, 151, 96, 51, 83, 98, 69, 127, 100, 177, 224, 119, 107, 187, 132, 174, 129, 254, 28, 160, 8, 249, 148, 43, 72, 112, 88, 104, 69, 143, 25, 253, 222, 148, 135, 108, 123, 82, 183, 248, 115, 171, 35, 211, 75, 114, 226, 2, 31, 227, 87, 143, 85, 102, 42, 171, 235, 178, 7, 40, 181, 47, 3, 194, 197, 134, 154, 123, 55, 211, 165, 8, 40, 48, 242, 135, 191, 35, 178, 165, 3, 2, 186, 106, 22, 237, 92, 130, 207, 138, 43, 28, 121, 167, 146, 180, 7, 243, 240, 242, 105, 78, 161, 226, 218, 101, 205, 244, 5, 6, 213, 190, 52, 209, 31, 98, 166, 196, 138, 254, 46, 52, 157, 83, 243, 162, 160, 85, 138, 5, 50, 225, 246, 164, 117, 235, 131, 11, 57, 236, 96, 64, 170, 239, 113, 94, 6, 159, 110, 189, 81, 16, 33, 62, 249, 138, 221, 150, 61, 6, 62, 221, 174, 5, 230, 77, 70, 189, 84, 145, 181, 141, 196, 113, 5, 93, 6, 4, 111, 212, 80, 96, 255, 21, 152, 25, 36, 251, 189, 214, 151, 233, 64, 137, 204, 67, 217, 103, 119, 158, 232, 176, 189, 66, 137, 7, 136, 139, 25, 231, 56, 91, 200, 121, 219, 238, 124, 161, 71, 10, 66, 124, 233, 15, 132, 248, 201, 30, 0, 0, 0, 0, 128, 9, 131, 134, 43, 50, 72, 237, 17, 30, 172, 112, 90, 108, 78, 114, 14, 253, 251, 255, 133, 15, 86, 56, 174, 61, 30, 213, 45, 54, 39, 57, 15, 10, 100, 217, 92, 104, 33, 166, 91, 155, 209, 84, 54, 36, 58, 46, 10, 12, 177, 103, 87, 147, 15, 231, 238, 180, 210, 150, 155, 27, 158, 145, 192, 128, 79, 197, 220, 97, 162, 32, 119, 90, 105, 75, 18, 28, 22, 26, 147, 226, 10, 186, 160, 192, 229, 42, 34, 60, 67, 224, 27, 18, 29, 23, 9, 14, 11, 13, 139, 242, 173, 199, 182, 45, 185, 168, 30, 20, 200, 169, 241, 87, 133, 25, 117, 175, 76, 7, 153, 238, 187, 221, 127, 163, 253, 96, 1, 247, 159, 38, 114, 92, 188, 245, 102, 68, 197, 59, 251, 91, 52, 126, 67, 139, 118, 41, 35, 203, 220, 198, 237, 182, 104, 252, 228, 184, 99, 241, 49, 215, 202, 220, 99, 66, 16, 133, 151, 19, 64, 34, 198, 132, 32, 17, 74, 133, 125, 36, 187, 210, 248, 61, 249, 174, 17, 50, 41, 199, 109, 161, 158, 29, 75, 47, 178, 220, 243, 48, 134, 13, 236, 82, 193, 119, 208, 227, 179, 43, 108, 22, 112, 169, 153, 185, 148, 17, 250, 72, 233, 71, 34, 100, 252, 168, 196, 140, 240, 160, 26, 63, 125, 86, 216, 44, 51, 34, 239, 144, 73, 135, 199, 78, 56, 217, 193, 209, 202, 140, 254, 162, 212, 152, 54, 11, 245, 166, 207, 129, 122, 165, 40, 222, 183, 218, 38, 142, 173, 63, 164, 191, 58, 44, 228, 157, 120, 80, 13, 146, 95, 106, 155, 204, 126, 84, 98, 70, 141, 246, 194, 19, 216, 144, 232, 184, 57, 46, 94, 247, 195, 130, 245, 175, 93, 159, 190, 128, 208, 105, 124, 147, 213, 111, 169, 45, 37, 207, 179, 18, 172, 200, 59, 153, 24, 16, 167, 125, 156, 232, 110, 99, 59, 219, 123, 187, 38, 205, 9, 120, 89, 110, 244, 24, 154, 236, 1, 183, 79, 131, 168, 154, 149, 230, 101, 110, 255, 170, 126, 230, 188, 33, 8, 207, 21, 239, 230, 232, 231, 186, 217, 155, 111, 74, 206, 54, 159, 234, 212, 9, 176, 41, 214, 124, 164, 49, 175, 178, 63, 42, 49, 35, 165, 198, 48, 148, 162, 53, 192, 102, 78, 116, 55, 188, 130, 252, 166, 202, 144, 224, 176, 208, 167, 51, 21, 216, 4, 241, 74, 152, 236, 65, 247, 218, 205, 127, 14, 80, 145, 23, 47, 246, 77, 118, 141, 214, 239, 67, 77, 176, 170, 204, 84, 77, 150, 228, 223, 4, 209, 158, 227, 181, 106, 76, 27, 136, 44, 193, 184, 31, 101, 70, 127, 81, 94, 157, 4, 234, 140, 1, 93, 53, 135, 250, 115, 116, 11, 251, 46, 65, 103, 179, 90, 29, 219, 146, 82, 210, 16, 233, 51, 86, 214, 109, 19, 71, 215, 154, 140, 97, 161, 55, 122, 12, 248, 89, 142, 20, 19, 235, 137, 60, 169, 206, 238, 39, 97, 183, 53, 201, 28, 225, 237, 229, 71, 122, 60, 177, 210, 156, 89, 223, 242, 85, 63, 115, 20, 24, 121, 206, 199, 115, 191, 55, 247, 83, 234, 205, 253, 95, 91, 170, 61, 223, 20, 111, 68, 120, 134, 219, 175, 202, 129, 243, 104, 185, 62, 196, 36, 56, 44, 52, 163, 194, 95, 64, 29, 22, 114, 195, 226, 188, 12, 37, 60, 40, 139, 73, 13, 255, 65, 149, 168, 57, 113, 1, 12, 8, 222, 179, 180, 216, 156, 228, 86, 100, 144, 193, 203, 123, 97, 132, 50, 213, 112, 182, 108, 72, 116, 92, 184, 208, 66, 87};
.const .align 8 .b8 td3[1024] = {81, 80, 167, 244, 126, 83, 101, 65, 26, 195, 164, 23, 58, 150, 94, 39, 59, 203, 107, 171, 31, 241, 69, 157, 172, 171, 88, 250, 75, 147, 3, 227, 32, 85, 250, 48, 173, 246, 109, 118, 136, 145, 118, 204, 245, 37, 76, 2, 79, 252, 215, 229, 197, 215, 203, 42, 38, 128, 68, 53, 181, 143, 163, 98, 222, 73, 90, 177, 37, 103, 27, 186, 69, 152, 14, 234, 93, 225, 192, 254, 195, 2, 117, 47, 129, 18, 240, 76, 141, 163, 151, 70, 107, 198, 249, 211, 3, 231, 95, 143, 21, 149, 156, 146, 191, 235, 122, 109, 149, 218, 89, 82, 212, 45, 131, 190, 88, 211, 33, 116, 73, 41, 105, 224, 142, 68, 200, 201, 117, 106, 137, 194, 244, 120, 121, 142, 153, 107, 62, 88, 39, 221, 113, 185, 190, 182, 79, 225, 240, 23, 173, 136, 201, 102, 172, 32, 125, 180, 58, 206, 99, 24, 74, 223, 229, 130, 49, 26, 151, 96, 51, 81, 98, 69, 127, 83, 177, 224, 119, 100, 187, 132, 174, 107, 254, 28, 160, 129, 249, 148, 43, 8, 112, 88, 104, 72, 143, 25, 253, 69, 148, 135, 108, 222, 82, 183, 248, 123, 171, 35, 211, 115, 114, 226, 2, 75, 227, 87, 143, 31, 102, 42, 171, 85, 178, 7, 40, 235, 47, 3, 194, 181, 134, 154, 123, 197, 211, 165, 8, 55, 48, 242, 135, 40, 35, 178, 165, 191, 2, 186, 106, 3, 237, 92, 130, 22, 138, 43, 28, 207, 167, 146, 180, 121, 243, 240, 242, 7, 78, 161, 226, 105, 101, 205, 244, 218, 6, 213, 190, 5, 209, 31, 98, 52, 196, 138, 254, 166, 52, 157, 83, 46, 162, 160, 85, 243, 5, 50, 225, 138, 164, 117, 235, 246, 11, 57, 236, 131, 64, 170, 239, 96, 94, 6, 159, 113, 189, 81, 16, 110, 62, 249, 138, 33, 150, 61, 6, 221, 221, 174, 5, 62, 77, 70, 189, 230, 145, 181, 141, 84, 113, 5, 93, 196, 4, 111, 212, 6, 96, 255, 21, 80, 25, 36, 251, 152, 214, 151, 233, 189, 137, 204, 67, 64, 103, 119, 158, 217, 176, 189, 66, 232, 7, 136, 139, 137, 231, 56, 91, 25, 121, 219, 238, 200, 161, 71, 10, 124, 124, 233, 15, 66, 248, 201, 30, 132, 0, 0, 0, 0, 9, 131, 134, 128, 50, 72, 237, 43, 30, 172, 112, 17, 108, 78, 114, 90, 253, 251, 255, 14, 15, 86, 56, 133, 61, 30, 213, 174, 54, 39, 57, 45, 10, 100, 217, 15, 104, 33, 166, 92, 155, 209, 84, 91, 36, 58, 46, 54, 12, 177, 103, 10, 147, 15, 231, 87, 180, 210, 150, 238, 27, 158, 145, 155, 128, 79, 197, 192, 97, 162, 32, 220, 90, 105, 75, 119, 28, 22, 26, 18, 226, 10, 186, 147, 192, 229, 42, 160, 60, 67, 224, 34, 18, 29, 23, 27, 14, 11, 13, 9, 242, 173, 199, 139, 45, 185, 168, 182, 20, 200, 169, 30, 87, 133, 25, 241, 175, 76, 7, 117, 238, 187, 221, 153, 163, 253, 96, 127, 247, 159, 38, 1, 92, 188, 245, 114, 68, 197, 59, 102, 91, 52, 126, 251, 139, 118, 41, 67, 203, 220, 198, 35, 182, 104, 252, 237, 184, 99, 241, 228, 215, 202, 220, 49, 66, 16, 133, 99, 19, 64, 34, 151, 132, 32, 17, 198, 133, 125, 36, 74, 210, 248, 61, 187, 174, 17, 50, 249, 199, 109, 161, 41, 29, 75, 47, 158, 220, 243, 48, 178, 13, 236, 82, 134, 119, 208, 227, 193, 43, 108, 22, 179, 169, 153, 185, 112, 17, 250, 72, 148, 71, 34, 100, 233, 168, 196, 140, 252, 160, 26, 63, 240, 86, 216, 44, 125, 34, 239, 144, 51, 135, 199, 78, 73, 217, 193, 209, 56, 140, 254, 162, 202, 152, 54, 11, 212, 166, 207, 129, 245, 165, 40, 222, 122, 218, 38, 142, 183, 63, 164, 191, 173, 44, 228, 157, 58, 80, 13, 146, 120, 106, 155, 204, 95, 84, 98, 70, 126, 246, 194, 19, 141, 144, 232, 184, 216, 46, 94, 247, 57, 130, 245, 175, 195, 159, 190, 128, 93, 105, 124, 147, 208, 111, 169, 45, 213, 207, 179, 18, 37, 200, 59, 153, 172, 16, 167, 125, 24, 232, 110, 99, 156, 219, 123, 187, 59, 205, 9, 120, 38, 110, 244, 24, 89, 236, 1, 183, 154, 131, 168, 154, 79, 230, 101, 110, 149, 170, 126, 230, 255, 33, 8, 207, 188, 239, 230, 232, 21, 186, 217, 155, 231, 74, 206, 54, 111, 234, 212, 9, 159, 41, 214, 124, 176, 49, 175, 178, 164, 42, 49, 35, 63, 198, 48, 148, 165, 53, 192, 102, 162, 116, 55, 188, 78, 252, 166, 202, 130, 224, 176, 208, 144, 51, 21, 216, 167, 241, 74, 152, 4, 65, 247, 218, 236, 127, 14, 80, 205, 23, 47, 246, 145, 118, 141, 214, 77, 67, 77, 176, 239, 204, 84, 77, 170, 228, 223, 4, 150, 158, 227, 181, 209, 76, 27, 136, 106, 193, 184, 31, 44, 70, 127, 81, 101, 157, 4, 234, 94, 1, 93, 53, 140, 250, 115, 116, 135, 251, 46, 65, 11, 179, 90, 29, 103, 146, 82, 210, 219, 233, 51, 86, 16, 109, 19, 71, 214, 154, 140, 97, 215, 55, 122, 12, 161, 89, 142, 20, 248, 235, 137, 60, 19, 206, 238, 39, 169, 183, 53, 201, 97, 225, 237, 229, 28, 122, 60, 177, 71, 156, 89, 223, 210, 85, 63, 115, 242, 24, 121, 206, 20, 115, 191, 55, 199, 83, 234, 205, 247, 95, 91, 170, 253, 223, 20, 111, 61, 120, 134, 219, 68, 202, 129, 243, 175, 185, 62, 196, 104, 56, 44, 52, 36, 194, 95, 64, 163, 22, 114, 195, 29, 188, 12, 37, 226, 40, 139, 73, 60, 255, 65, 149, 13, 57, 113, 1, 168, 8, 222, 179, 12, 216, 156, 228, 180, 100, 144, 193, 86, 123, 97, 132, 203, 213, 112, 182, 50, 72, 116, 92, 108, 208, 66, 87, 184};
.const .align 8 .b8 td4[1024] = {82, 82, 82, 82, 9, 9, 9, 9, 106, 106, 106, 106, 213, 213, 213, 213, 48, 48, 48, 48, 54, 54, 54, 54, 165, 165, 165, 165, 56, 56, 56, 56, 191, 191, 191, 191, 64, 64, 64, 64, 163, 163, 163, 163, 158, 158, 158, 158, 129, 129, 129, 129, 243, 243, 243, 243, 215, 215, 215, 215, 251, 251, 251, 251, 124, 124, 124, 124, 227, 227, 227, 227, 57, 57, 57, 57, 130, 130, 130, 130, 155, 155, 155, 155, 47, 47, 47, 47, 255, 255, 255, 255, 135, 135, 135, 135, 52, 52, 52, 52, 142, 142, 142, 142, 67, 67, 67, 67, 68, 68, 68, 68, 196, 196, 196, 196, 222, 222, 222, 222, 233, 233, 233, 233, 203, 203, 203, 203, 84, 84, 84, 84, 123, 123, 123, 123, 148, 148, 148, 148, 50, 50, 50, 50, 166, 166, 166, 166, 194, 194, 194, 194, 35, 35, 35, 35, 61, 61, 61, 61, 238, 238, 238, 238, 76, 76, 76, 76, 149, 149, 149, 149, 11, 11, 11, 11, 66, 66, 66, 66, 250, 250, 250, 250, 195, 195, 195, 195, 78, 78, 78, 78, 8, 8, 8, 8, 46, 46, 46, 46, 161, 161, 161, 161, 102, 102, 102, 102, 40, 40, 40, 40, 217, 217, 217, 217, 36, 36, 36, 36, 178, 178, 178, 178, 118, 118, 118, 118, 91, 91, 91, 91, 162, 162, 162, 162, 73, 73, 73, 73, 109, 109, 109, 109, 139, 139, 139, 139, 209, 209, 209, 209, 37, 37, 37, 37, 114, 114, 114, 114, 248, 248, 248, 248, 246, 246, 246, 246, 100, 100, 100, 100, 134, 134, 134, 134, 104, 104, 104, 104, 152, 152, 152, 152, 22, 22, 22, 22, 212, 212, 212, 212, 164, 164, 164, 164, 92, 92, 92, 92, 204, 204, 204, 204, 93, 93, 93, 93, 101, 101, 101, 101, 182, 182, 182, 182, 146, 146, 146, 146, 108, 108, 108, 108, 112, 112, 112, 112, 72, 72, 72, 72, 80, 80, 80, 80, 253, 253, 253, 253, 237, 237, 237, 237, 185, 185, 185, 185, 218, 218, 218, 218, 94, 94, 94, 94, 21, 21, 21, 21, 70, 70, 70, 70, 87, 87, 87, 87, 167, 167, 167, 167, 141, 141, 141, 141, 157, 157, 157, 157, 132, 132, 132, 132, 144, 144, 144, 144, 216, 216, 216, 216, 171, 171, 171, 171, 0, 0, 0, 0, 140, 140, 140, 140, 188, 188, 188, 188, 211, 211, 211, 211, 10, 10, 10, 10, 247, 247, 247, 247, 228, 228, 228, 228, 88, 88, 88, 88, 5, 5, 5, 5, 184, 184, 184, 184, 179, 179, 179, 179, 69, 69, 69, 69, 6, 6, 6, 6, 208, 208, 208, 208, 44, 44, 44, 44, 30, 30, 30, 30, 143, 143, 143, 143, 202, 202, 202, 202, 63, 63, 63, 63, 15, 15, 15, 15, 2, 2, 2, 2, 193, 193, 193, 193, 175, 175, 175, 175, 189, 189, 189, 189, 3, 3, 3, 3, 1, 1, 1, 1, 19, 19, 19, 19, 138, 138, 138, 138, 107, 107, 107, 107, 58, 58, 58, 58, 145, 145, 145, 145, 17, 17, 17, 17, 65, 65, 65, 65, 79, 79, 79, 79, 103, 103, 103, 103, 220, 220, 220, 220, 234, 234, 234, 234, 151, 151, 151, 151, 242, 242, 242, 242, 207, 207, 207, 207, 206, 206, 206, 206, 240, 240, 240, 240, 180, 180, 180, 180, 230, 230, 230, 230, 115, 115, 115, 115, 150, 150, 150, 150, 172, 172, 172, 172, 116, 116, 116, 116, 34, 34, 34, 34, 231, 231, 231, 231, 173, 173, 173, 173, 53, 53, 53, 53, 133, 133, 133, 133, 226, 226, 226, 226, 249, 249, 249, 249, 55, 55, 55, 55, 232, 232, 232, 232, 28, 28, 28, 28, 117, 117, 117, 117, 223, 223, 223, 223, 110, 110, 110, 110, 71, 71, 71, 71, 241, 241, 241, 241, 26, 26, 26, 26, 113, 113, 113, 113, 29, 29, 29, 29, 41, 41, 41, 41, 197, 197, 197, 197, 137, 137, 137, 137, 111, 111, 111, 111, 183, 183, 183, 183, 98, 98, 98, 98, 14, 14, 14, 14, 170, 170, 170, 170, 24, 24, 24, 24, 190, 190, 190, 190, 27, 27, 27, 27, 252, 252, 252, 252, 86, 86, 86, 86, 62, 62, 62, 62, 75, 75, 75, 75, 198, 198, 198, 198, 210, 210, 210, 210, 121, 121, 121, 121, 32, 32, 32, 32, 154, 154, 154, 154, 219, 219, 219, 219, 192, 192, 192, 192, 254, 254, 254, 254, 120, 120, 120, 120, 205, 205, 205, 205, 90, 90, 90, 90, 244, 244, 244, 244, 31, 31, 31, 31, 221, 221, 221, 221, 168, 168, 168, 168, 51, 51, 51, 51, 136, 136, 136, 136, 7, 7, 7, 7, 199, 199, 199, 199, 49, 49, 49, 49, 177, 177, 177, 177, 18, 18, 18, 18, 16, 16, 16, 16, 89, 89, 89, 89, 39, 39, 39, 39, 128, 128, 128, 128, 236, 236, 236, 236, 95, 95, 95, 95, 96, 96, 96, 96, 81, 81, 81, 81, 127, 127, 127, 127, 169, 169, 169, 169, 25, 25, 25, 25, 181, 181, 181, 181, 74, 74, 74, 74, 13, 13, 13, 13, 45, 45, 45, 45, 229, 229, 229, 229, 122, 122, 122, 122, 159, 159, 159, 159, 147, 147, 147, 147, 201, 201, 201, 201, 156, 156, 156, 156, 239, 239, 239, 239, 160, 160, 160, 160, 224, 224, 224, 224, 59, 59, 59, 59, 77, 77, 77, 77, 174, 174, 174, 174, 42, 42, 42, 42, 245, 245, 245, 245, 176, 176, 176, 176, 200, 200, 200, 200, 235, 235, 235, 235, 187, 187, 187, 187, 60, 60, 60, 60, 131, 131, 131, 131, 83, 83, 83, 83, 153, 153, 153, 153, 97, 97, 97, 97, 23, 23, 23, 23, 43, 43, 43, 43, 4, 4, 4, 4, 126, 126, 126, 126, 186, 186, 186, 186, 119, 119, 119, 119, 214, 214, 214, 214, 38, 38, 38, 38, 225, 225, 225, 225, 105, 105, 105, 105, 20, 20, 20, 20, 99, 99, 99, 99, 85, 85, 85, 85, 33, 33, 33, 33, 12, 12, 12, 12, 125, 125, 125, 125};
.const .align 8 .b8 rcon[40] = {0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 4, 0, 0, 0, 8, 0, 0, 0, 16, 0, 0, 0, 32, 0, 0, 0, 64, 0, 0, 0, 128, 0, 0, 0, 27, 0, 0, 0, 54};
// m09600_comp$s_td0 has been demoted
// m09600_comp$s_td1 has been demoted
// m09600_comp$s_td2 has been demoted
// m09600_comp$s_td3 has been demoted
// m09600_comp$s_td4 has been demoted
// m09600_comp$s_te0 has been demoted
// m09600_comp$s_te1 has been demoted
// m09600_comp$s_te2 has been demoted
// m09600_comp$s_te3 has been demoted
// m09600_comp$s_te4 has been demoted

.entry gpu_memset(
	.param .u64 .ptr .global .align 16 gpu_memset_param_0,
	.param .u32 gpu_memset_param_1,
	.param .u64 gpu_memset_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<8>;
	.reg .b64 	%rd<6>;


	ld.param.u64 	%rd1, [gpu_memset_param_0];
	ld.param.u32 	%r2, [gpu_memset_param_1];
	ld.param.u64 	%rd2, [gpu_memset_param_2];
	mov.b32	%r3, %envreg3;
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %ntid.x;
	mad.lo.s32 	%r6, %r4, %r5, %r3;
	mov.u32 	%r7, %tid.x;
	add.s32 	%r1, %r6, %r7;
	cvt.s64.s32	%rd3, %r1;
	setp.ge.u64	%p1, %rd3, %rd2;
	@%p1 bra 	BB0_2;

	mul.wide.s32 	%rd4, %r1, 16;
	add.s64 	%rd5, %rd1, %rd4;
	st.global.v4.u32 	[%rd5], {%r2, %r2, %r2, %r2};

BB0_2:
	ret;
}

.func sha512_update_128(
	.param .b64 sha512_update_128_param_0,
	.param .b64 sha512_update_128_param_1,
	.param .b64 sha512_update_128_param_2,
	.param .b64 sha512_update_128_param_3,
	.param .b64 sha512_update_128_param_4,
	.param .b64 sha512_update_128_param_5,
	.param .b64 sha512_update_128_param_6,
	.param .b64 sha512_update_128_param_7,
	.param .b64 sha512_update_128_param_8,
	.param .b32 sha512_update_128_param_9
)
{
	.reg .pred 	%p<96>;
	.reg .b32 	%r<9706>;
	.reg .b64 	%rd<2947>;


	ld.param.u64 	%rd22, [sha512_update_128_param_0];
	ld.param.u64 	%rd14, [sha512_update_128_param_1];
	ld.param.u64 	%rd15, [sha512_update_128_param_2];
	ld.param.u64 	%rd16, [sha512_update_128_param_3];
	ld.param.u64 	%rd17, [sha512_update_128_param_4];
	ld.param.u64 	%rd18, [sha512_update_128_param_5];
	ld.param.u64 	%rd19, [sha512_update_128_param_6];
	ld.param.u64 	%rd20, [sha512_update_128_param_7];
	ld.param.u64 	%rd21, [sha512_update_128_param_8];
	ld.param.u32 	%r569, [sha512_update_128_param_9];
	add.s64 	%rd1, %rd22, 192;
	ld.u32 	%r570, [%rd22+192];
	and.b32  	%r571, %r570, 127;
	add.s32 	%r572, %r570, %r569;
	st.u32 	[%rd22+192], %r572;
	add.s32 	%r573, %r571, %r569;
	setp.lt.s32	%p1, %r573, 128;
	bfe.u32 	%r1, %r570, 2, 5;
	and.b32  	%r574, %r570, 3;
	shl.b32 	%r575, %r574, 2;
	mov.u32 	%r576, 1985229328;
	shr.u32 	%r577, %r576, %r575;
	and.b32  	%r2, %r577, 65535;
	@%p1 bra 	BB1_90;
	bra.uni 	BB1_1;

BB1_90:
	setp.gt.s32	%p49, %r1, 15;
	@%p49 bra 	BB1_122;

	setp.gt.s32	%p73, %r1, 7;
	@%p73 bra 	BB1_107;

	setp.gt.s32	%p85, %r1, 3;
	@%p85 bra 	BB1_100;

	setp.gt.s32	%p91, %r1, 1;
	@%p91 bra 	BB1_97;

	setp.eq.s32	%p94, %r1, 0;
	@%p94 bra 	BB1_168;
	bra.uni 	BB1_95;

BB1_168:
	ld.u32 	%r9450, [%rd21+12];
	ld.u32 	%r9451, [%rd21+8];
	// inline asm
	prmt.b32 %r9449, %r9450, %r9451, %r2;
	// inline asm
	st.u32 	[%rd21+12], %r9449;
	ld.u32 	%r9454, [%rd21+8];
	ld.u32 	%r9455, [%rd21+4];
	// inline asm
	prmt.b32 %r9453, %r9454, %r9455, %r2;
	// inline asm
	st.u32 	[%rd21+8], %r9453;
	ld.u32 	%r9458, [%rd21+4];
	ld.u32 	%r9459, [%rd21];
	// inline asm
	prmt.b32 %r9457, %r9458, %r9459, %r2;
	// inline asm
	st.u32 	[%rd21+4], %r9457;
	ld.u32 	%r9462, [%rd21];
	ld.u32 	%r9463, [%rd20+12];
	// inline asm
	prmt.b32 %r9461, %r9462, %r9463, %r2;
	// inline asm
	st.u32 	[%rd21], %r9461;
	ld.u32 	%r9466, [%rd20+12];
	ld.u32 	%r9467, [%rd20+8];
	// inline asm
	prmt.b32 %r9465, %r9466, %r9467, %r2;
	// inline asm
	st.u32 	[%rd20+12], %r9465;
	ld.u32 	%r9470, [%rd20+8];
	ld.u32 	%r9471, [%rd20+4];
	// inline asm
	prmt.b32 %r9469, %r9470, %r9471, %r2;
	// inline asm
	st.u32 	[%rd20+8], %r9469;
	ld.u32 	%r9474, [%rd20+4];
	ld.u32 	%r9475, [%rd20];
	// inline asm
	prmt.b32 %r9473, %r9474, %r9475, %r2;
	// inline asm
	st.u32 	[%rd20+4], %r9473;
	ld.u32 	%r9478, [%rd20];
	ld.u32 	%r9479, [%rd19+12];
	// inline asm
	prmt.b32 %r9477, %r9478, %r9479, %r2;
	// inline asm
	st.u32 	[%rd20], %r9477;
	ld.u32 	%r9482, [%rd19+12];
	ld.u32 	%r9483, [%rd19+8];
	// inline asm
	prmt.b32 %r9481, %r9482, %r9483, %r2;
	// inline asm
	st.u32 	[%rd19+12], %r9481;
	ld.u32 	%r9486, [%rd19+8];
	ld.u32 	%r9487, [%rd19+4];
	// inline asm
	prmt.b32 %r9485, %r9486, %r9487, %r2;
	// inline asm
	st.u32 	[%rd19+8], %r9485;
	ld.u32 	%r9490, [%rd19+4];
	ld.u32 	%r9491, [%rd19];
	// inline asm
	prmt.b32 %r9489, %r9490, %r9491, %r2;
	// inline asm
	st.u32 	[%rd19+4], %r9489;
	ld.u32 	%r9494, [%rd19];
	ld.u32 	%r9495, [%rd18+12];
	// inline asm
	prmt.b32 %r9493, %r9494, %r9495, %r2;
	// inline asm
	st.u32 	[%rd19], %r9493;
	ld.u32 	%r9498, [%rd18+12];
	ld.u32 	%r9499, [%rd18+8];
	// inline asm
	prmt.b32 %r9497, %r9498, %r9499, %r2;
	// inline asm
	st.u32 	[%rd18+12], %r9497;
	ld.u32 	%r9502, [%rd18+8];
	ld.u32 	%r9503, [%rd18+4];
	// inline asm
	prmt.b32 %r9501, %r9502, %r9503, %r2;
	// inline asm
	st.u32 	[%rd18+8], %r9501;
	ld.u32 	%r9506, [%rd18+4];
	ld.u32 	%r9507, [%rd18];
	// inline asm
	prmt.b32 %r9505, %r9506, %r9507, %r2;
	// inline asm
	st.u32 	[%rd18+4], %r9505;
	ld.u32 	%r9510, [%rd18];
	ld.u32 	%r9511, [%rd17+12];
	// inline asm
	prmt.b32 %r9509, %r9510, %r9511, %r2;
	// inline asm
	st.u32 	[%rd18], %r9509;
	ld.u32 	%r9514, [%rd17+12];
	ld.u32 	%r9515, [%rd17+8];
	// inline asm
	prmt.b32 %r9513, %r9514, %r9515, %r2;
	// inline asm
	st.u32 	[%rd17+12], %r9513;
	ld.u32 	%r9518, [%rd17+8];
	ld.u32 	%r9519, [%rd17+4];
	// inline asm
	prmt.b32 %r9517, %r9518, %r9519, %r2;
	// inline asm
	st.u32 	[%rd17+8], %r9517;
	ld.u32 	%r9522, [%rd17+4];
	ld.u32 	%r9523, [%rd17];
	// inline asm
	prmt.b32 %r9521, %r9522, %r9523, %r2;
	// inline asm
	st.u32 	[%rd17+4], %r9521;
	ld.u32 	%r9526, [%rd17];
	ld.u32 	%r9527, [%rd16+12];
	// inline asm
	prmt.b32 %r9525, %r9526, %r9527, %r2;
	// inline asm
	st.u32 	[%rd17], %r9525;
	ld.u32 	%r9530, [%rd16+12];
	ld.u32 	%r9531, [%rd16+8];
	// inline asm
	prmt.b32 %r9529, %r9530, %r9531, %r2;
	// inline asm
	st.u32 	[%rd16+12], %r9529;
	ld.u32 	%r9534, [%rd16+8];
	ld.u32 	%r9535, [%rd16+4];
	// inline asm
	prmt.b32 %r9533, %r9534, %r9535, %r2;
	// inline asm
	st.u32 	[%rd16+8], %r9533;
	ld.u32 	%r9538, [%rd16+4];
	ld.u32 	%r9539, [%rd16];
	// inline asm
	prmt.b32 %r9537, %r9538, %r9539, %r2;
	// inline asm
	st.u32 	[%rd16+4], %r9537;
	ld.u32 	%r9542, [%rd16];
	ld.u32 	%r9543, [%rd15+12];
	// inline asm
	prmt.b32 %r9541, %r9542, %r9543, %r2;
	// inline asm
	st.u32 	[%rd16], %r9541;
	ld.u32 	%r9546, [%rd15+12];
	ld.u32 	%r9547, [%rd15+8];
	// inline asm
	prmt.b32 %r9545, %r9546, %r9547, %r2;
	// inline asm
	st.u32 	[%rd15+12], %r9545;
	ld.u32 	%r9550, [%rd15+8];
	ld.u32 	%r9551, [%rd15+4];
	// inline asm
	prmt.b32 %r9549, %r9550, %r9551, %r2;
	// inline asm
	st.u32 	[%rd15+8], %r9549;
	ld.u32 	%r9554, [%rd15+4];
	ld.u32 	%r9555, [%rd15];
	// inline asm
	prmt.b32 %r9553, %r9554, %r9555, %r2;
	// inline asm
	st.u32 	[%rd15+4], %r9553;
	ld.u32 	%r9558, [%rd15];
	ld.u32 	%r9559, [%rd14+12];
	// inline asm
	prmt.b32 %r9557, %r9558, %r9559, %r2;
	// inline asm
	st.u32 	[%rd15], %r9557;
	ld.u32 	%r9562, [%rd14+12];
	ld.u32 	%r9563, [%rd14+8];
	// inline asm
	prmt.b32 %r9561, %r9562, %r9563, %r2;
	// inline asm
	st.u32 	[%rd14+12], %r9561;
	ld.u32 	%r9566, [%rd14+8];
	ld.u32 	%r9567, [%rd14+4];
	// inline asm
	prmt.b32 %r9565, %r9566, %r9567, %r2;
	// inline asm
	st.u32 	[%rd14+8], %r9565;
	ld.u32 	%r9570, [%rd14+4];
	ld.u32 	%r9571, [%rd14];
	// inline asm
	prmt.b32 %r9569, %r9570, %r9571, %r2;
	// inline asm
	st.u32 	[%rd14+4], %r9569;
	ld.u32 	%r9574, [%rd14];
	mov.u32 	%r9575, 0;
	// inline asm
	prmt.b32 %r9705, %r9574, %r9575, %r2;
	// inline asm
	st.u32 	[%rd14], %r9705;
	bra.uni 	BB1_170;

BB1_1:
	setp.gt.s32	%p2, %r1, 15;
	@%p2 bra 	BB1_34;

	setp.gt.s32	%p26, %r1, 7;
	@%p26 bra 	BB1_19;

	setp.gt.s32	%p38, %r1, 3;
	@%p38 bra 	BB1_12;

	setp.gt.s32	%p44, %r1, 1;
	@%p44 bra 	BB1_8;

	setp.eq.s32	%p47, %r1, 0;
	@%p47 bra 	BB1_86;
	bra.uni 	BB1_6;

BB1_86:
	ld.u32 	%r5168, [%rd21+12];
	mov.u32 	%r9673, 0;
	// inline asm
	prmt.b32 %r9676, %r9673, %r5168, %r2;
	// inline asm
	ld.u32 	%r5171, [%rd21+12];
	ld.u32 	%r5172, [%rd21+8];
	// inline asm
	prmt.b32 %r5170, %r5171, %r5172, %r2;
	// inline asm
	st.u32 	[%rd21+12], %r5170;
	ld.u32 	%r5175, [%rd21+8];
	ld.u32 	%r5176, [%rd21+4];
	// inline asm
	prmt.b32 %r5174, %r5175, %r5176, %r2;
	// inline asm
	st.u32 	[%rd21+8], %r5174;
	ld.u32 	%r5179, [%rd21+4];
	ld.u32 	%r5180, [%rd21];
	// inline asm
	prmt.b32 %r5178, %r5179, %r5180, %r2;
	// inline asm
	st.u32 	[%rd21+4], %r5178;
	ld.u32 	%r5183, [%rd21];
	ld.u32 	%r5184, [%rd20+12];
	// inline asm
	prmt.b32 %r5182, %r5183, %r5184, %r2;
	// inline asm
	st.u32 	[%rd21], %r5182;
	ld.u32 	%r5187, [%rd20+12];
	ld.u32 	%r5188, [%rd20+8];
	// inline asm
	prmt.b32 %r5186, %r5187, %r5188, %r2;
	// inline asm
	st.u32 	[%rd20+12], %r5186;
	ld.u32 	%r5191, [%rd20+8];
	ld.u32 	%r5192, [%rd20+4];
	// inline asm
	prmt.b32 %r5190, %r5191, %r5192, %r2;
	// inline asm
	st.u32 	[%rd20+8], %r5190;
	ld.u32 	%r5195, [%rd20+4];
	ld.u32 	%r5196, [%rd20];
	// inline asm
	prmt.b32 %r5194, %r5195, %r5196, %r2;
	// inline asm
	st.u32 	[%rd20+4], %r5194;
	ld.u32 	%r5199, [%rd20];
	ld.u32 	%r5200, [%rd19+12];
	// inline asm
	prmt.b32 %r5198, %r5199, %r5200, %r2;
	// inline asm
	st.u32 	[%rd20], %r5198;
	ld.u32 	%r5203, [%rd19+12];
	ld.u32 	%r5204, [%rd19+8];
	// inline asm
	prmt.b32 %r5202, %r5203, %r5204, %r2;
	// inline asm
	st.u32 	[%rd19+12], %r5202;
	ld.u32 	%r5207, [%rd19+8];
	ld.u32 	%r5208, [%rd19+4];
	// inline asm
	prmt.b32 %r5206, %r5207, %r5208, %r2;
	// inline asm
	st.u32 	[%rd19+8], %r5206;
	ld.u32 	%r5211, [%rd19+4];
	ld.u32 	%r5212, [%rd19];
	// inline asm
	prmt.b32 %r5210, %r5211, %r5212, %r2;
	// inline asm
	st.u32 	[%rd19+4], %r5210;
	ld.u32 	%r5215, [%rd19];
	ld.u32 	%r5216, [%rd18+12];
	// inline asm
	prmt.b32 %r5214, %r5215, %r5216, %r2;
	// inline asm
	st.u32 	[%rd19], %r5214;
	ld.u32 	%r5219, [%rd18+12];
	ld.u32 	%r5220, [%rd18+8];
	// inline asm
	prmt.b32 %r5218, %r5219, %r5220, %r2;
	// inline asm
	st.u32 	[%rd18+12], %r5218;
	ld.u32 	%r5223, [%rd18+8];
	ld.u32 	%r5224, [%rd18+4];
	// inline asm
	prmt.b32 %r5222, %r5223, %r5224, %r2;
	// inline asm
	st.u32 	[%rd18+8], %r5222;
	ld.u32 	%r5227, [%rd18+4];
	ld.u32 	%r5228, [%rd18];
	// inline asm
	prmt.b32 %r5226, %r5227, %r5228, %r2;
	// inline asm
	st.u32 	[%rd18+4], %r5226;
	ld.u32 	%r5231, [%rd18];
	ld.u32 	%r5232, [%rd17+12];
	// inline asm
	prmt.b32 %r5230, %r5231, %r5232, %r2;
	// inline asm
	st.u32 	[%rd18], %r5230;
	ld.u32 	%r5235, [%rd17+12];
	ld.u32 	%r5236, [%rd17+8];
	// inline asm
	prmt.b32 %r5234, %r5235, %r5236, %r2;
	// inline asm
	st.u32 	[%rd17+12], %r5234;
	ld.u32 	%r5239, [%rd17+8];
	ld.u32 	%r5240, [%rd17+4];
	// inline asm
	prmt.b32 %r5238, %r5239, %r5240, %r2;
	// inline asm
	st.u32 	[%rd17+8], %r5238;
	ld.u32 	%r5243, [%rd17+4];
	ld.u32 	%r5244, [%rd17];
	// inline asm
	prmt.b32 %r5242, %r5243, %r5244, %r2;
	// inline asm
	st.u32 	[%rd17+4], %r5242;
	ld.u32 	%r5247, [%rd17];
	ld.u32 	%r5248, [%rd16+12];
	// inline asm
	prmt.b32 %r5246, %r5247, %r5248, %r2;
	// inline asm
	st.u32 	[%rd17], %r5246;
	ld.u32 	%r5251, [%rd16+12];
	ld.u32 	%r5252, [%rd16+8];
	// inline asm
	prmt.b32 %r5250, %r5251, %r5252, %r2;
	// inline asm
	st.u32 	[%rd16+12], %r5250;
	ld.u32 	%r5255, [%rd16+8];
	ld.u32 	%r5256, [%rd16+4];
	// inline asm
	prmt.b32 %r5254, %r5255, %r5256, %r2;
	// inline asm
	st.u32 	[%rd16+8], %r5254;
	ld.u32 	%r5259, [%rd16+4];
	ld.u32 	%r5260, [%rd16];
	// inline asm
	prmt.b32 %r5258, %r5259, %r5260, %r2;
	// inline asm
	st.u32 	[%rd16+4], %r5258;
	ld.u32 	%r5263, [%rd16];
	ld.u32 	%r5264, [%rd15+12];
	// inline asm
	prmt.b32 %r5262, %r5263, %r5264, %r2;
	// inline asm
	st.u32 	[%rd16], %r5262;
	ld.u32 	%r5267, [%rd15+12];
	ld.u32 	%r5268, [%rd15+8];
	// inline asm
	prmt.b32 %r5266, %r5267, %r5268, %r2;
	// inline asm
	st.u32 	[%rd15+12], %r5266;
	ld.u32 	%r5271, [%rd15+8];
	ld.u32 	%r5272, [%rd15+4];
	// inline asm
	prmt.b32 %r5270, %r5271, %r5272, %r2;
	// inline asm
	st.u32 	[%rd15+8], %r5270;
	ld.u32 	%r5275, [%rd15+4];
	ld.u32 	%r5276, [%rd15];
	// inline asm
	prmt.b32 %r5274, %r5275, %r5276, %r2;
	// inline asm
	st.u32 	[%rd15+4], %r5274;
	ld.u32 	%r5279, [%rd15];
	ld.u32 	%r5280, [%rd14+12];
	// inline asm
	prmt.b32 %r5278, %r5279, %r5280, %r2;
	// inline asm
	st.u32 	[%rd15], %r5278;
	ld.u32 	%r5283, [%rd14+12];
	ld.u32 	%r5284, [%rd14+8];
	// inline asm
	prmt.b32 %r5282, %r5283, %r5284, %r2;
	// inline asm
	st.u32 	[%rd14+12], %r5282;
	ld.u32 	%r5287, [%rd14+8];
	ld.u32 	%r5288, [%rd14+4];
	// inline asm
	prmt.b32 %r5286, %r5287, %r5288, %r2;
	// inline asm
	st.u32 	[%rd14+8], %r5286;
	ld.u32 	%r5291, [%rd14+4];
	ld.u32 	%r5292, [%rd14];
	// inline asm
	prmt.b32 %r5290, %r5291, %r5292, %r2;
	// inline asm
	st.u32 	[%rd14+4], %r5290;
	ld.u32 	%r5295, [%rd14];
	// inline asm
	prmt.b32 %r9672, %r5295, %r9673, %r2;
	// inline asm
	st.u32 	[%rd14], %r9672;
	mov.u32 	%r9674, %r9673;
	mov.u32 	%r9675, %r9673;
	bra.uni 	BB1_88;

BB1_122:
	setp.gt.s32	%p50, %r1, 23;
	@%p50 bra 	BB1_138;

	setp.gt.s32	%p62, %r1, 19;
	@%p62 bra 	BB1_131;

	setp.gt.s32	%p68, %r1, 17;
	@%p68 bra 	BB1_128;

	setp.eq.s32	%p71, %r1, 16;
	@%p71 bra 	BB1_160;
	bra.uni 	BB1_126;

BB1_160:
	ld.u32 	%r7930, [%rd17+12];
	ld.u32 	%r7931, [%rd17+8];
	// inline asm
	prmt.b32 %r7929, %r7930, %r7931, %r2;
	// inline asm
	st.u32 	[%rd21+12], %r7929;
	ld.u32 	%r7934, [%rd17+8];
	ld.u32 	%r7935, [%rd17+4];
	// inline asm
	prmt.b32 %r7933, %r7934, %r7935, %r2;
	// inline asm
	st.u32 	[%rd21+8], %r7933;
	ld.u32 	%r7938, [%rd17+4];
	ld.u32 	%r7939, [%rd17];
	// inline asm
	prmt.b32 %r7937, %r7938, %r7939, %r2;
	// inline asm
	st.u32 	[%rd21+4], %r7937;
	ld.u32 	%r7942, [%rd17];
	ld.u32 	%r7943, [%rd16+12];
	// inline asm
	prmt.b32 %r7941, %r7942, %r7943, %r2;
	// inline asm
	st.u32 	[%rd21], %r7941;
	ld.u32 	%r7946, [%rd16+12];
	ld.u32 	%r7947, [%rd16+8];
	// inline asm
	prmt.b32 %r7945, %r7946, %r7947, %r2;
	// inline asm
	st.u32 	[%rd20+12], %r7945;
	ld.u32 	%r7950, [%rd16+8];
	ld.u32 	%r7951, [%rd16+4];
	// inline asm
	prmt.b32 %r7949, %r7950, %r7951, %r2;
	// inline asm
	st.u32 	[%rd20+8], %r7949;
	ld.u32 	%r7954, [%rd16+4];
	ld.u32 	%r7955, [%rd16];
	// inline asm
	prmt.b32 %r7953, %r7954, %r7955, %r2;
	// inline asm
	st.u32 	[%rd20+4], %r7953;
	ld.u32 	%r7958, [%rd16];
	ld.u32 	%r7959, [%rd15+12];
	// inline asm
	prmt.b32 %r7957, %r7958, %r7959, %r2;
	// inline asm
	st.u32 	[%rd20], %r7957;
	ld.u32 	%r7962, [%rd15+12];
	ld.u32 	%r7963, [%rd15+8];
	// inline asm
	prmt.b32 %r7961, %r7962, %r7963, %r2;
	// inline asm
	st.u32 	[%rd19+12], %r7961;
	ld.u32 	%r7966, [%rd15+8];
	ld.u32 	%r7967, [%rd15+4];
	// inline asm
	prmt.b32 %r7965, %r7966, %r7967, %r2;
	// inline asm
	st.u32 	[%rd19+8], %r7965;
	ld.u32 	%r7970, [%rd15+4];
	ld.u32 	%r7971, [%rd15];
	// inline asm
	prmt.b32 %r7969, %r7970, %r7971, %r2;
	// inline asm
	st.u32 	[%rd19+4], %r7969;
	ld.u32 	%r7974, [%rd15];
	ld.u32 	%r7975, [%rd14+12];
	// inline asm
	prmt.b32 %r7973, %r7974, %r7975, %r2;
	// inline asm
	st.u32 	[%rd19], %r7973;
	ld.u32 	%r7978, [%rd14+12];
	ld.u32 	%r7979, [%rd14+8];
	// inline asm
	prmt.b32 %r7977, %r7978, %r7979, %r2;
	// inline asm
	st.u32 	[%rd18+12], %r7977;
	ld.u32 	%r7982, [%rd14+8];
	ld.u32 	%r7983, [%rd14+4];
	// inline asm
	prmt.b32 %r7981, %r7982, %r7983, %r2;
	// inline asm
	st.u32 	[%rd18+8], %r7981;
	ld.u32 	%r7986, [%rd14+4];
	ld.u32 	%r7987, [%rd14];
	// inline asm
	prmt.b32 %r7985, %r7986, %r7987, %r2;
	// inline asm
	st.u32 	[%rd18+4], %r7985;
	ld.u32 	%r7990, [%rd14];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r7989, %r7990, %r9705, %r2;
	// inline asm
	st.u32 	[%rd18], %r7989;
	st.u32 	[%rd17+12], %r9705;
	st.u32 	[%rd17+8], %r9705;
	st.u32 	[%rd17+4], %r9705;
	st.u32 	[%rd17], %r9705;
	st.u32 	[%rd16+12], %r9705;
	st.u32 	[%rd16+8], %r9705;
	st.u32 	[%rd16+4], %r9705;
	st.u32 	[%rd16], %r9705;
	st.u32 	[%rd15+12], %r9705;
	st.u32 	[%rd15+8], %r9705;
	st.u32 	[%rd15+4], %r9705;
	st.u32 	[%rd15], %r9705;
	st.u32 	[%rd14+12], %r9705;
	st.u32 	[%rd14+8], %r9705;
	mov.u64 	%rd2932, 0;
	st.u32 	[%rd14+4], %rd2932;
	st.u32 	[%rd14], %rd2932;
	bra.uni 	BB1_170;

BB1_34:
	setp.gt.s32	%p3, %r1, 23;
	@%p3 bra 	BB1_50;

	setp.gt.s32	%p15, %r1, 19;
	@%p15 bra 	BB1_43;

	setp.gt.s32	%p21, %r1, 17;
	@%p21 bra 	BB1_40;

	setp.eq.s32	%p24, %r1, 16;
	@%p24 bra 	BB1_72;
	bra.uni 	BB1_38;

BB1_72:
	ld.u32 	%r2680, [%rd21+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9692, %r9672, %r2680, %r2;
	// inline asm
	ld.u32 	%r2683, [%rd21+12];
	ld.u32 	%r2684, [%rd21+8];
	// inline asm
	prmt.b32 %r9685, %r2683, %r2684, %r2;
	// inline asm
	ld.u32 	%r2687, [%rd21+8];
	ld.u32 	%r2688, [%rd21+4];
	// inline asm
	prmt.b32 %r9686, %r2687, %r2688, %r2;
	// inline asm
	ld.u32 	%r2691, [%rd21+4];
	ld.u32 	%r2692, [%rd21];
	// inline asm
	prmt.b32 %r9687, %r2691, %r2692, %r2;
	// inline asm
	ld.u32 	%r2695, [%rd21];
	ld.u32 	%r2696, [%rd20+12];
	// inline asm
	prmt.b32 %r9688, %r2695, %r2696, %r2;
	// inline asm
	ld.u32 	%r2699, [%rd20+12];
	ld.u32 	%r2700, [%rd20+8];
	// inline asm
	prmt.b32 %r9681, %r2699, %r2700, %r2;
	// inline asm
	ld.u32 	%r2703, [%rd20+8];
	ld.u32 	%r2704, [%rd20+4];
	// inline asm
	prmt.b32 %r9682, %r2703, %r2704, %r2;
	// inline asm
	ld.u32 	%r2707, [%rd20+4];
	ld.u32 	%r2708, [%rd20];
	// inline asm
	prmt.b32 %r9683, %r2707, %r2708, %r2;
	// inline asm
	ld.u32 	%r2711, [%rd20];
	ld.u32 	%r2712, [%rd19+12];
	// inline asm
	prmt.b32 %r9684, %r2711, %r2712, %r2;
	// inline asm
	ld.u32 	%r2715, [%rd19+12];
	ld.u32 	%r2716, [%rd19+8];
	// inline asm
	prmt.b32 %r9677, %r2715, %r2716, %r2;
	// inline asm
	ld.u32 	%r2719, [%rd19+8];
	ld.u32 	%r2720, [%rd19+4];
	// inline asm
	prmt.b32 %r9678, %r2719, %r2720, %r2;
	// inline asm
	ld.u32 	%r2723, [%rd19+4];
	ld.u32 	%r2724, [%rd19];
	// inline asm
	prmt.b32 %r9679, %r2723, %r2724, %r2;
	// inline asm
	ld.u32 	%r2727, [%rd19];
	ld.u32 	%r2728, [%rd18+12];
	// inline asm
	prmt.b32 %r9680, %r2727, %r2728, %r2;
	// inline asm
	ld.u32 	%r2731, [%rd18+12];
	ld.u32 	%r2732, [%rd18+8];
	// inline asm
	prmt.b32 %r9673, %r2731, %r2732, %r2;
	// inline asm
	ld.u32 	%r2735, [%rd18+8];
	ld.u32 	%r2736, [%rd18+4];
	// inline asm
	prmt.b32 %r9674, %r2735, %r2736, %r2;
	// inline asm
	ld.u32 	%r2739, [%rd18+4];
	ld.u32 	%r2740, [%rd18];
	// inline asm
	prmt.b32 %r9675, %r2739, %r2740, %r2;
	// inline asm
	ld.u32 	%r2743, [%rd18];
	ld.u32 	%r2744, [%rd17+12];
	// inline asm
	prmt.b32 %r9676, %r2743, %r2744, %r2;
	// inline asm
	ld.u32 	%r2747, [%rd17+12];
	ld.u32 	%r2748, [%rd17+8];
	// inline asm
	prmt.b32 %r2746, %r2747, %r2748, %r2;
	// inline asm
	st.u32 	[%rd21+12], %r2746;
	ld.u32 	%r2751, [%rd17+8];
	ld.u32 	%r2752, [%rd17+4];
	// inline asm
	prmt.b32 %r2750, %r2751, %r2752, %r2;
	// inline asm
	st.u32 	[%rd21+8], %r2750;
	ld.u32 	%r2755, [%rd17+4];
	ld.u32 	%r2756, [%rd17];
	// inline asm
	prmt.b32 %r2754, %r2755, %r2756, %r2;
	// inline asm
	st.u32 	[%rd21+4], %r2754;
	ld.u32 	%r2759, [%rd17];
	ld.u32 	%r2760, [%rd16+12];
	// inline asm
	prmt.b32 %r2758, %r2759, %r2760, %r2;
	// inline asm
	st.u32 	[%rd21], %r2758;
	ld.u32 	%r2763, [%rd16+12];
	ld.u32 	%r2764, [%rd16+8];
	// inline asm
	prmt.b32 %r2762, %r2763, %r2764, %r2;
	// inline asm
	st.u32 	[%rd20+12], %r2762;
	ld.u32 	%r2767, [%rd16+8];
	ld.u32 	%r2768, [%rd16+4];
	// inline asm
	prmt.b32 %r2766, %r2767, %r2768, %r2;
	// inline asm
	st.u32 	[%rd20+8], %r2766;
	ld.u32 	%r2771, [%rd16+4];
	ld.u32 	%r2772, [%rd16];
	// inline asm
	prmt.b32 %r2770, %r2771, %r2772, %r2;
	// inline asm
	st.u32 	[%rd20+4], %r2770;
	ld.u32 	%r2775, [%rd16];
	ld.u32 	%r2776, [%rd15+12];
	// inline asm
	prmt.b32 %r2774, %r2775, %r2776, %r2;
	// inline asm
	st.u32 	[%rd20], %r2774;
	ld.u32 	%r2779, [%rd15+12];
	ld.u32 	%r2780, [%rd15+8];
	// inline asm
	prmt.b32 %r2778, %r2779, %r2780, %r2;
	// inline asm
	st.u32 	[%rd19+12], %r2778;
	ld.u32 	%r2783, [%rd15+8];
	ld.u32 	%r2784, [%rd15+4];
	// inline asm
	prmt.b32 %r2782, %r2783, %r2784, %r2;
	// inline asm
	st.u32 	[%rd19+8], %r2782;
	ld.u32 	%r2787, [%rd15+4];
	ld.u32 	%r2788, [%rd15];
	// inline asm
	prmt.b32 %r2786, %r2787, %r2788, %r2;
	// inline asm
	st.u32 	[%rd19+4], %r2786;
	ld.u32 	%r2791, [%rd15];
	ld.u32 	%r2792, [%rd14+12];
	// inline asm
	prmt.b32 %r2790, %r2791, %r2792, %r2;
	// inline asm
	st.u32 	[%rd19], %r2790;
	ld.u32 	%r2795, [%rd14+12];
	ld.u32 	%r2796, [%rd14+8];
	// inline asm
	prmt.b32 %r2794, %r2795, %r2796, %r2;
	// inline asm
	st.u32 	[%rd18+12], %r2794;
	ld.u32 	%r2799, [%rd14+8];
	ld.u32 	%r2800, [%rd14+4];
	// inline asm
	prmt.b32 %r2798, %r2799, %r2800, %r2;
	// inline asm
	st.u32 	[%rd18+8], %r2798;
	ld.u32 	%r2803, [%rd14+4];
	ld.u32 	%r2804, [%rd14];
	// inline asm
	prmt.b32 %r2802, %r2803, %r2804, %r2;
	// inline asm
	st.u32 	[%rd18+4], %r2802;
	ld.u32 	%r2807, [%rd14];
	// inline asm
	prmt.b32 %r2806, %r2807, %r9672, %r2;
	// inline asm
	st.u32 	[%rd18], %r2806;
	st.u32 	[%rd17+12], %r9672;
	st.u32 	[%rd17+8], %r9672;
	st.u32 	[%rd17+4], %r9672;
	st.u32 	[%rd17], %r9672;
	st.u32 	[%rd16+12], %r9672;
	st.u32 	[%rd16+8], %r9672;
	st.u32 	[%rd16+4], %r9672;
	st.u32 	[%rd16], %r9672;
	st.u32 	[%rd15+12], %r9672;
	st.u32 	[%rd15+8], %r9672;
	st.u32 	[%rd15+4], %r9672;
	st.u32 	[%rd15], %r9672;
	st.u32 	[%rd14+12], %r9672;
	st.u32 	[%rd14+8], %r9672;
	mov.u64 	%rd38, 0;
	st.u32 	[%rd14+4], %rd38;
	st.u32 	[%rd14], %rd38;
	mov.u32 	%r9689, %r9672;
	mov.u32 	%r9690, %r9672;
	mov.u32 	%r9691, %r9672;
	bra.uni 	BB1_82;

BB1_107:
	setp.gt.s32	%p74, %r1, 11;
	@%p74 bra 	BB1_115;

	setp.gt.s32	%p80, %r1, 9;
	@%p80 bra 	BB1_112;

	setp.eq.s32	%p83, %r1, 8;
	@%p83 bra 	BB1_164;
	bra.uni 	BB1_110;

BB1_164:
	ld.u32 	%r8562, [%rd19+12];
	ld.u32 	%r8563, [%rd19+8];
	// inline asm
	prmt.b32 %r8561, %r8562, %r8563, %r2;
	// inline asm
	st.u32 	[%rd21+12], %r8561;
	ld.u32 	%r8566, [%rd19+8];
	ld.u32 	%r8567, [%rd19+4];
	// inline asm
	prmt.b32 %r8565, %r8566, %r8567, %r2;
	// inline asm
	st.u32 	[%rd21+8], %r8565;
	ld.u32 	%r8570, [%rd19+4];
	ld.u32 	%r8571, [%rd19];
	// inline asm
	prmt.b32 %r8569, %r8570, %r8571, %r2;
	// inline asm
	st.u32 	[%rd21+4], %r8569;
	ld.u32 	%r8574, [%rd19];
	ld.u32 	%r8575, [%rd18+12];
	// inline asm
	prmt.b32 %r8573, %r8574, %r8575, %r2;
	// inline asm
	st.u32 	[%rd21], %r8573;
	ld.u32 	%r8578, [%rd18+12];
	ld.u32 	%r8579, [%rd18+8];
	// inline asm
	prmt.b32 %r8577, %r8578, %r8579, %r2;
	// inline asm
	st.u32 	[%rd20+12], %r8577;
	ld.u32 	%r8582, [%rd18+8];
	ld.u32 	%r8583, [%rd18+4];
	// inline asm
	prmt.b32 %r8581, %r8582, %r8583, %r2;
	// inline asm
	st.u32 	[%rd20+8], %r8581;
	ld.u32 	%r8586, [%rd18+4];
	ld.u32 	%r8587, [%rd18];
	// inline asm
	prmt.b32 %r8585, %r8586, %r8587, %r2;
	// inline asm
	st.u32 	[%rd20+4], %r8585;
	ld.u32 	%r8590, [%rd18];
	ld.u32 	%r8591, [%rd17+12];
	// inline asm
	prmt.b32 %r8589, %r8590, %r8591, %r2;
	// inline asm
	st.u32 	[%rd20], %r8589;
	ld.u32 	%r8594, [%rd17+12];
	ld.u32 	%r8595, [%rd17+8];
	// inline asm
	prmt.b32 %r8593, %r8594, %r8595, %r2;
	// inline asm
	st.u32 	[%rd19+12], %r8593;
	ld.u32 	%r8598, [%rd17+8];
	ld.u32 	%r8599, [%rd17+4];
	// inline asm
	prmt.b32 %r8597, %r8598, %r8599, %r2;
	// inline asm
	st.u32 	[%rd19+8], %r8597;
	ld.u32 	%r8602, [%rd17+4];
	ld.u32 	%r8603, [%rd17];
	// inline asm
	prmt.b32 %r8601, %r8602, %r8603, %r2;
	// inline asm
	st.u32 	[%rd19+4], %r8601;
	ld.u32 	%r8606, [%rd17];
	ld.u32 	%r8607, [%rd16+12];
	// inline asm
	prmt.b32 %r8605, %r8606, %r8607, %r2;
	// inline asm
	st.u32 	[%rd19], %r8605;
	ld.u32 	%r8610, [%rd16+12];
	ld.u32 	%r8611, [%rd16+8];
	// inline asm
	prmt.b32 %r8609, %r8610, %r8611, %r2;
	// inline asm
	st.u32 	[%rd18+12], %r8609;
	ld.u32 	%r8614, [%rd16+8];
	ld.u32 	%r8615, [%rd16+4];
	// inline asm
	prmt.b32 %r8613, %r8614, %r8615, %r2;
	// inline asm
	st.u32 	[%rd18+8], %r8613;
	ld.u32 	%r8618, [%rd16+4];
	ld.u32 	%r8619, [%rd16];
	// inline asm
	prmt.b32 %r8617, %r8618, %r8619, %r2;
	// inline asm
	st.u32 	[%rd18+4], %r8617;
	ld.u32 	%r8622, [%rd16];
	ld.u32 	%r8623, [%rd15+12];
	// inline asm
	prmt.b32 %r8621, %r8622, %r8623, %r2;
	// inline asm
	st.u32 	[%rd18], %r8621;
	ld.u32 	%r8626, [%rd15+12];
	ld.u32 	%r8627, [%rd15+8];
	// inline asm
	prmt.b32 %r8625, %r8626, %r8627, %r2;
	// inline asm
	st.u32 	[%rd17+12], %r8625;
	ld.u32 	%r8630, [%rd15+8];
	ld.u32 	%r8631, [%rd15+4];
	// inline asm
	prmt.b32 %r8629, %r8630, %r8631, %r2;
	// inline asm
	st.u32 	[%rd17+8], %r8629;
	ld.u32 	%r8634, [%rd15+4];
	ld.u32 	%r8635, [%rd15];
	// inline asm
	prmt.b32 %r8633, %r8634, %r8635, %r2;
	// inline asm
	st.u32 	[%rd17+4], %r8633;
	ld.u32 	%r8638, [%rd15];
	ld.u32 	%r8639, [%rd14+12];
	// inline asm
	prmt.b32 %r8637, %r8638, %r8639, %r2;
	// inline asm
	st.u32 	[%rd17], %r8637;
	ld.u32 	%r8642, [%rd14+12];
	ld.u32 	%r8643, [%rd14+8];
	// inline asm
	prmt.b32 %r8641, %r8642, %r8643, %r2;
	// inline asm
	st.u32 	[%rd16+12], %r8641;
	ld.u32 	%r8646, [%rd14+8];
	ld.u32 	%r8647, [%rd14+4];
	// inline asm
	prmt.b32 %r8645, %r8646, %r8647, %r2;
	// inline asm
	st.u32 	[%rd16+8], %r8645;
	ld.u32 	%r8650, [%rd14+4];
	ld.u32 	%r8651, [%rd14];
	// inline asm
	prmt.b32 %r8649, %r8650, %r8651, %r2;
	// inline asm
	st.u32 	[%rd16+4], %r8649;
	ld.u32 	%r8654, [%rd14];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r8653, %r8654, %r9705, %r2;
	// inline asm
	st.u32 	[%rd16], %r8653;
	st.u32 	[%rd15+12], %r9705;
	st.u32 	[%rd15+8], %r9705;
	st.u32 	[%rd15+4], %r9705;
	st.u32 	[%rd15], %r9705;
	st.u32 	[%rd14+12], %r9705;
	st.u32 	[%rd14+8], %r9705;
	mov.u64 	%rd2940, 0;
	st.u32 	[%rd14+4], %rd2940;
	st.u32 	[%rd14], %rd2940;
	bra.uni 	BB1_170;

BB1_19:
	setp.gt.s32	%p27, %r1, 11;
	@%p27 bra 	BB1_27;

	setp.gt.s32	%p33, %r1, 9;
	@%p33 bra 	BB1_24;

	setp.eq.s32	%p36, %r1, 8;
	@%p36 bra 	BB1_76;
	bra.uni 	BB1_22;

BB1_76:
	ld.u32 	%r3892, [%rd21+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9684, %r9672, %r3892, %r2;
	// inline asm
	ld.u32 	%r3895, [%rd21+12];
	ld.u32 	%r3896, [%rd21+8];
	// inline asm
	prmt.b32 %r9677, %r3895, %r3896, %r2;
	// inline asm
	ld.u32 	%r3899, [%rd21+8];
	ld.u32 	%r3900, [%rd21+4];
	// inline asm
	prmt.b32 %r9678, %r3899, %r3900, %r2;
	// inline asm
	ld.u32 	%r3903, [%rd21+4];
	ld.u32 	%r3904, [%rd21];
	// inline asm
	prmt.b32 %r9679, %r3903, %r3904, %r2;
	// inline asm
	ld.u32 	%r3907, [%rd21];
	ld.u32 	%r3908, [%rd20+12];
	// inline asm
	prmt.b32 %r9680, %r3907, %r3908, %r2;
	// inline asm
	ld.u32 	%r3911, [%rd20+12];
	ld.u32 	%r3912, [%rd20+8];
	// inline asm
	prmt.b32 %r9673, %r3911, %r3912, %r2;
	// inline asm
	ld.u32 	%r3915, [%rd20+8];
	ld.u32 	%r3916, [%rd20+4];
	// inline asm
	prmt.b32 %r9674, %r3915, %r3916, %r2;
	// inline asm
	ld.u32 	%r3919, [%rd20+4];
	ld.u32 	%r3920, [%rd20];
	// inline asm
	prmt.b32 %r9675, %r3919, %r3920, %r2;
	// inline asm
	ld.u32 	%r3923, [%rd20];
	ld.u32 	%r3924, [%rd19+12];
	// inline asm
	prmt.b32 %r9676, %r3923, %r3924, %r2;
	// inline asm
	ld.u32 	%r3927, [%rd19+12];
	ld.u32 	%r3928, [%rd19+8];
	// inline asm
	prmt.b32 %r3926, %r3927, %r3928, %r2;
	// inline asm
	st.u32 	[%rd21+12], %r3926;
	ld.u32 	%r3931, [%rd19+8];
	ld.u32 	%r3932, [%rd19+4];
	// inline asm
	prmt.b32 %r3930, %r3931, %r3932, %r2;
	// inline asm
	st.u32 	[%rd21+8], %r3930;
	ld.u32 	%r3935, [%rd19+4];
	ld.u32 	%r3936, [%rd19];
	// inline asm
	prmt.b32 %r3934, %r3935, %r3936, %r2;
	// inline asm
	st.u32 	[%rd21+4], %r3934;
	ld.u32 	%r3939, [%rd19];
	ld.u32 	%r3940, [%rd18+12];
	// inline asm
	prmt.b32 %r3938, %r3939, %r3940, %r2;
	// inline asm
	st.u32 	[%rd21], %r3938;
	ld.u32 	%r3943, [%rd18+12];
	ld.u32 	%r3944, [%rd18+8];
	// inline asm
	prmt.b32 %r3942, %r3943, %r3944, %r2;
	// inline asm
	st.u32 	[%rd20+12], %r3942;
	ld.u32 	%r3947, [%rd18+8];
	ld.u32 	%r3948, [%rd18+4];
	// inline asm
	prmt.b32 %r3946, %r3947, %r3948, %r2;
	// inline asm
	st.u32 	[%rd20+8], %r3946;
	ld.u32 	%r3951, [%rd18+4];
	ld.u32 	%r3952, [%rd18];
	// inline asm
	prmt.b32 %r3950, %r3951, %r3952, %r2;
	// inline asm
	st.u32 	[%rd20+4], %r3950;
	ld.u32 	%r3955, [%rd18];
	ld.u32 	%r3956, [%rd17+12];
	// inline asm
	prmt.b32 %r3954, %r3955, %r3956, %r2;
	// inline asm
	st.u32 	[%rd20], %r3954;
	ld.u32 	%r3959, [%rd17+12];
	ld.u32 	%r3960, [%rd17+8];
	// inline asm
	prmt.b32 %r3958, %r3959, %r3960, %r2;
	// inline asm
	st.u32 	[%rd19+12], %r3958;
	ld.u32 	%r3963, [%rd17+8];
	ld.u32 	%r3964, [%rd17+4];
	// inline asm
	prmt.b32 %r3962, %r3963, %r3964, %r2;
	// inline asm
	st.u32 	[%rd19+8], %r3962;
	ld.u32 	%r3967, [%rd17+4];
	ld.u32 	%r3968, [%rd17];
	// inline asm
	prmt.b32 %r3966, %r3967, %r3968, %r2;
	// inline asm
	st.u32 	[%rd19+4], %r3966;
	ld.u32 	%r3971, [%rd17];
	ld.u32 	%r3972, [%rd16+12];
	// inline asm
	prmt.b32 %r3970, %r3971, %r3972, %r2;
	// inline asm
	st.u32 	[%rd19], %r3970;
	ld.u32 	%r3975, [%rd16+12];
	ld.u32 	%r3976, [%rd16+8];
	// inline asm
	prmt.b32 %r3974, %r3975, %r3976, %r2;
	// inline asm
	st.u32 	[%rd18+12], %r3974;
	ld.u32 	%r3979, [%rd16+8];
	ld.u32 	%r3980, [%rd16+4];
	// inline asm
	prmt.b32 %r3978, %r3979, %r3980, %r2;
	// inline asm
	st.u32 	[%rd18+8], %r3978;
	ld.u32 	%r3983, [%rd16+4];
	ld.u32 	%r3984, [%rd16];
	// inline asm
	prmt.b32 %r3982, %r3983, %r3984, %r2;
	// inline asm
	st.u32 	[%rd18+4], %r3982;
	ld.u32 	%r3987, [%rd16];
	ld.u32 	%r3988, [%rd15+12];
	// inline asm
	prmt.b32 %r3986, %r3987, %r3988, %r2;
	// inline asm
	st.u32 	[%rd18], %r3986;
	ld.u32 	%r3991, [%rd15+12];
	ld.u32 	%r3992, [%rd15+8];
	// inline asm
	prmt.b32 %r3990, %r3991, %r3992, %r2;
	// inline asm
	st.u32 	[%rd17+12], %r3990;
	ld.u32 	%r3995, [%rd15+8];
	ld.u32 	%r3996, [%rd15+4];
	// inline asm
	prmt.b32 %r3994, %r3995, %r3996, %r2;
	// inline asm
	st.u32 	[%rd17+8], %r3994;
	ld.u32 	%r3999, [%rd15+4];
	ld.u32 	%r4000, [%rd15];
	// inline asm
	prmt.b32 %r3998, %r3999, %r4000, %r2;
	// inline asm
	st.u32 	[%rd17+4], %r3998;
	ld.u32 	%r4003, [%rd15];
	ld.u32 	%r4004, [%rd14+12];
	// inline asm
	prmt.b32 %r4002, %r4003, %r4004, %r2;
	// inline asm
	st.u32 	[%rd17], %r4002;
	ld.u32 	%r4007, [%rd14+12];
	ld.u32 	%r4008, [%rd14+8];
	// inline asm
	prmt.b32 %r4006, %r4007, %r4008, %r2;
	// inline asm
	st.u32 	[%rd16+12], %r4006;
	ld.u32 	%r4011, [%rd14+8];
	ld.u32 	%r4012, [%rd14+4];
	// inline asm
	prmt.b32 %r4010, %r4011, %r4012, %r2;
	// inline asm
	st.u32 	[%rd16+8], %r4010;
	ld.u32 	%r4015, [%rd14+4];
	ld.u32 	%r4016, [%rd14];
	// inline asm
	prmt.b32 %r4014, %r4015, %r4016, %r2;
	// inline asm
	st.u32 	[%rd16+4], %r4014;
	ld.u32 	%r4019, [%rd14];
	// inline asm
	prmt.b32 %r4018, %r4019, %r9672, %r2;
	// inline asm
	st.u32 	[%rd16], %r4018;
	st.u32 	[%rd15+12], %r9672;
	st.u32 	[%rd15+8], %r9672;
	st.u32 	[%rd15+4], %r9672;
	st.u32 	[%rd15], %r9672;
	st.u32 	[%rd14+12], %r9672;
	st.u32 	[%rd14+8], %r9672;
	mov.u64 	%rd46, 0;
	st.u32 	[%rd14+4], %rd46;
	st.u32 	[%rd14], %rd46;
	mov.u32 	%r9681, %r9672;
	mov.u32 	%r9682, %r9672;
	mov.u32 	%r9683, %r9672;
	bra.uni 	BB1_80;

BB1_138:
	setp.gt.s32	%p51, %r1, 27;
	@%p51 bra 	BB1_146;

	setp.gt.s32	%p57, %r1, 25;
	@%p57 bra 	BB1_143;

	setp.eq.s32	%p60, %r1, 24;
	@%p60 bra 	BB1_156;
	bra.uni 	BB1_141;

BB1_156:
	ld.u32 	%r7554, [%rd15+12];
	ld.u32 	%r7555, [%rd15+8];
	// inline asm
	prmt.b32 %r7553, %r7554, %r7555, %r2;
	// inline asm
	st.u32 	[%rd21+12], %r7553;
	ld.u32 	%r7558, [%rd15+8];
	ld.u32 	%r7559, [%rd15+4];
	// inline asm
	prmt.b32 %r7557, %r7558, %r7559, %r2;
	// inline asm
	st.u32 	[%rd21+8], %r7557;
	ld.u32 	%r7562, [%rd15+4];
	ld.u32 	%r7563, [%rd15];
	// inline asm
	prmt.b32 %r7561, %r7562, %r7563, %r2;
	// inline asm
	st.u32 	[%rd21+4], %r7561;
	ld.u32 	%r7566, [%rd15];
	ld.u32 	%r7567, [%rd14+12];
	// inline asm
	prmt.b32 %r7565, %r7566, %r7567, %r2;
	// inline asm
	st.u32 	[%rd21], %r7565;
	ld.u32 	%r7570, [%rd14+12];
	ld.u32 	%r7571, [%rd14+8];
	// inline asm
	prmt.b32 %r7569, %r7570, %r7571, %r2;
	// inline asm
	st.u32 	[%rd20+12], %r7569;
	ld.u32 	%r7574, [%rd14+8];
	ld.u32 	%r7575, [%rd14+4];
	// inline asm
	prmt.b32 %r7573, %r7574, %r7575, %r2;
	// inline asm
	st.u32 	[%rd20+8], %r7573;
	ld.u32 	%r7578, [%rd14+4];
	ld.u32 	%r7579, [%rd14];
	// inline asm
	prmt.b32 %r7577, %r7578, %r7579, %r2;
	// inline asm
	st.u32 	[%rd20+4], %r7577;
	ld.u32 	%r7582, [%rd14];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r7581, %r7582, %r9705, %r2;
	// inline asm
	st.u32 	[%rd20], %r7581;
	st.u32 	[%rd19+12], %r9705;
	st.u32 	[%rd19+8], %r9705;
	st.u32 	[%rd19+4], %r9705;
	st.u32 	[%rd19], %r9705;
	st.u32 	[%rd18+12], %r9705;
	st.u32 	[%rd18+8], %r9705;
	st.u32 	[%rd18+4], %r9705;
	st.u32 	[%rd18], %r9705;
	st.u32 	[%rd17+12], %r9705;
	st.u32 	[%rd17+8], %r9705;
	st.u32 	[%rd17+4], %r9705;
	st.u32 	[%rd17], %r9705;
	st.u32 	[%rd16+12], %r9705;
	st.u32 	[%rd16+8], %r9705;
	st.u32 	[%rd16+4], %r9705;
	st.u32 	[%rd16], %r9705;
	st.u32 	[%rd15+12], %r9705;
	st.u32 	[%rd15+8], %r9705;
	st.u32 	[%rd15+4], %r9705;
	st.u32 	[%rd15], %r9705;
	st.u32 	[%rd14+12], %r9705;
	st.u32 	[%rd14+8], %r9705;
	mov.u64 	%rd2924, 0;
	st.u32 	[%rd14+4], %rd2924;
	st.u32 	[%rd14], %rd2924;
	bra.uni 	BB1_170;

BB1_50:
	setp.gt.s32	%p4, %r1, 27;
	@%p4 bra 	BB1_58;

	setp.gt.s32	%p10, %r1, 25;
	@%p10 bra 	BB1_55;

	setp.eq.s32	%p13, %r1, 24;
	@%p13 bra 	BB1_68;
	bra.uni 	BB1_53;

BB1_68:
	ld.u32 	%r1532, [%rd21+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9700, %r9672, %r1532, %r2;
	// inline asm
	ld.u32 	%r1535, [%rd21+12];
	ld.u32 	%r1536, [%rd21+8];
	// inline asm
	prmt.b32 %r9693, %r1535, %r1536, %r2;
	// inline asm
	ld.u32 	%r1539, [%rd21+8];
	ld.u32 	%r1540, [%rd21+4];
	// inline asm
	prmt.b32 %r9694, %r1539, %r1540, %r2;
	// inline asm
	ld.u32 	%r1543, [%rd21+4];
	ld.u32 	%r1544, [%rd21];
	// inline asm
	prmt.b32 %r9695, %r1543, %r1544, %r2;
	// inline asm
	ld.u32 	%r1547, [%rd21];
	ld.u32 	%r1548, [%rd20+12];
	// inline asm
	prmt.b32 %r9696, %r1547, %r1548, %r2;
	// inline asm
	ld.u32 	%r1551, [%rd20+12];
	ld.u32 	%r1552, [%rd20+8];
	// inline asm
	prmt.b32 %r9689, %r1551, %r1552, %r2;
	// inline asm
	ld.u32 	%r1555, [%rd20+8];
	ld.u32 	%r1556, [%rd20+4];
	// inline asm
	prmt.b32 %r9690, %r1555, %r1556, %r2;
	// inline asm
	ld.u32 	%r1559, [%rd20+4];
	ld.u32 	%r1560, [%rd20];
	// inline asm
	prmt.b32 %r9691, %r1559, %r1560, %r2;
	// inline asm
	ld.u32 	%r1563, [%rd20];
	ld.u32 	%r1564, [%rd19+12];
	// inline asm
	prmt.b32 %r9692, %r1563, %r1564, %r2;
	// inline asm
	ld.u32 	%r1567, [%rd19+12];
	ld.u32 	%r1568, [%rd19+8];
	// inline asm
	prmt.b32 %r9685, %r1567, %r1568, %r2;
	// inline asm
	ld.u32 	%r1571, [%rd19+8];
	ld.u32 	%r1572, [%rd19+4];
	// inline asm
	prmt.b32 %r9686, %r1571, %r1572, %r2;
	// inline asm
	ld.u32 	%r1575, [%rd19+4];
	ld.u32 	%r1576, [%rd19];
	// inline asm
	prmt.b32 %r9687, %r1575, %r1576, %r2;
	// inline asm
	ld.u32 	%r1579, [%rd19];
	ld.u32 	%r1580, [%rd18+12];
	// inline asm
	prmt.b32 %r9688, %r1579, %r1580, %r2;
	// inline asm
	ld.u32 	%r1583, [%rd18+12];
	ld.u32 	%r1584, [%rd18+8];
	// inline asm
	prmt.b32 %r9681, %r1583, %r1584, %r2;
	// inline asm
	ld.u32 	%r1587, [%rd18+8];
	ld.u32 	%r1588, [%rd18+4];
	// inline asm
	prmt.b32 %r9682, %r1587, %r1588, %r2;
	// inline asm
	ld.u32 	%r1591, [%rd18+4];
	ld.u32 	%r1592, [%rd18];
	// inline asm
	prmt.b32 %r9683, %r1591, %r1592, %r2;
	// inline asm
	ld.u32 	%r1595, [%rd18];
	ld.u32 	%r1596, [%rd17+12];
	// inline asm
	prmt.b32 %r9684, %r1595, %r1596, %r2;
	// inline asm
	ld.u32 	%r1599, [%rd17+12];
	ld.u32 	%r1600, [%rd17+8];
	// inline asm
	prmt.b32 %r9677, %r1599, %r1600, %r2;
	// inline asm
	ld.u32 	%r1603, [%rd17+8];
	ld.u32 	%r1604, [%rd17+4];
	// inline asm
	prmt.b32 %r9678, %r1603, %r1604, %r2;
	// inline asm
	ld.u32 	%r1607, [%rd17+4];
	ld.u32 	%r1608, [%rd17];
	// inline asm
	prmt.b32 %r9679, %r1607, %r1608, %r2;
	// inline asm
	ld.u32 	%r1611, [%rd17];
	ld.u32 	%r1612, [%rd16+12];
	// inline asm
	prmt.b32 %r9680, %r1611, %r1612, %r2;
	// inline asm
	ld.u32 	%r1615, [%rd16+12];
	ld.u32 	%r1616, [%rd16+8];
	// inline asm
	prmt.b32 %r9673, %r1615, %r1616, %r2;
	// inline asm
	ld.u32 	%r1619, [%rd16+8];
	ld.u32 	%r1620, [%rd16+4];
	// inline asm
	prmt.b32 %r9674, %r1619, %r1620, %r2;
	// inline asm
	ld.u32 	%r1623, [%rd16+4];
	ld.u32 	%r1624, [%rd16];
	// inline asm
	prmt.b32 %r9675, %r1623, %r1624, %r2;
	// inline asm
	ld.u32 	%r1627, [%rd16];
	ld.u32 	%r1628, [%rd15+12];
	// inline asm
	prmt.b32 %r9676, %r1627, %r1628, %r2;
	// inline asm
	ld.u32 	%r1631, [%rd15+12];
	ld.u32 	%r1632, [%rd15+8];
	// inline asm
	prmt.b32 %r1630, %r1631, %r1632, %r2;
	// inline asm
	st.u32 	[%rd21+12], %r1630;
	ld.u32 	%r1635, [%rd15+8];
	ld.u32 	%r1636, [%rd15+4];
	// inline asm
	prmt.b32 %r1634, %r1635, %r1636, %r2;
	// inline asm
	st.u32 	[%rd21+8], %r1634;
	ld.u32 	%r1639, [%rd15+4];
	ld.u32 	%r1640, [%rd15];
	// inline asm
	prmt.b32 %r1638, %r1639, %r1640, %r2;
	// inline asm
	st.u32 	[%rd21+4], %r1638;
	ld.u32 	%r1643, [%rd15];
	ld.u32 	%r1644, [%rd14+12];
	// inline asm
	prmt.b32 %r1642, %r1643, %r1644, %r2;
	// inline asm
	st.u32 	[%rd21], %r1642;
	ld.u32 	%r1647, [%rd14+12];
	ld.u32 	%r1648, [%rd14+8];
	// inline asm
	prmt.b32 %r1646, %r1647, %r1648, %r2;
	// inline asm
	st.u32 	[%rd20+12], %r1646;
	ld.u32 	%r1651, [%rd14+8];
	ld.u32 	%r1652, [%rd14+4];
	// inline asm
	prmt.b32 %r1650, %r1651, %r1652, %r2;
	// inline asm
	st.u32 	[%rd20+8], %r1650;
	ld.u32 	%r1655, [%rd14+4];
	ld.u32 	%r1656, [%rd14];
	// inline asm
	prmt.b32 %r1654, %r1655, %r1656, %r2;
	// inline asm
	st.u32 	[%rd20+4], %r1654;
	ld.u32 	%r1659, [%rd14];
	// inline asm
	prmt.b32 %r1658, %r1659, %r9672, %r2;
	// inline asm
	st.u32 	[%rd20], %r1658;
	st.u32 	[%rd19+12], %r9672;
	st.u32 	[%rd19+8], %r9672;
	st.u32 	[%rd19+4], %r9672;
	st.u32 	[%rd19], %r9672;
	st.u32 	[%rd18+12], %r9672;
	st.u32 	[%rd18+8], %r9672;
	st.u32 	[%rd18+4], %r9672;
	st.u32 	[%rd18], %r9672;
	st.u32 	[%rd17+12], %r9672;
	st.u32 	[%rd17+8], %r9672;
	st.u32 	[%rd17+4], %r9672;
	st.u32 	[%rd17], %r9672;
	st.u32 	[%rd16+12], %r9672;
	st.u32 	[%rd16+8], %r9672;
	st.u32 	[%rd16+4], %r9672;
	st.u32 	[%rd16], %r9672;
	st.u32 	[%rd15+12], %r9672;
	st.u32 	[%rd15+8], %r9672;
	st.u32 	[%rd15+4], %r9672;
	st.u32 	[%rd15], %r9672;
	st.u32 	[%rd14+12], %r9672;
	st.u32 	[%rd14+8], %r9672;
	mov.u64 	%rd30, 0;
	st.u32 	[%rd14+4], %rd30;
	st.u32 	[%rd14], %rd30;
	mov.u32 	%r9697, %r9672;
	mov.u32 	%r9698, %r9672;
	mov.u32 	%r9699, %r9672;
	bra.uni 	BB1_84;

BB1_100:
	setp.gt.s32	%p86, %r1, 5;
	@%p86 bra 	BB1_104;

	setp.eq.s32	%p89, %r1, 4;
	@%p89 bra 	BB1_166;
	bra.uni 	BB1_102;

BB1_166:
	ld.u32 	%r8974, [%rd20+12];
	ld.u32 	%r8975, [%rd20+8];
	// inline asm
	prmt.b32 %r8973, %r8974, %r8975, %r2;
	// inline asm
	st.u32 	[%rd21+12], %r8973;
	ld.u32 	%r8978, [%rd20+8];
	ld.u32 	%r8979, [%rd20+4];
	// inline asm
	prmt.b32 %r8977, %r8978, %r8979, %r2;
	// inline asm
	st.u32 	[%rd21+8], %r8977;
	ld.u32 	%r8982, [%rd20+4];
	ld.u32 	%r8983, [%rd20];
	// inline asm
	prmt.b32 %r8981, %r8982, %r8983, %r2;
	// inline asm
	st.u32 	[%rd21+4], %r8981;
	ld.u32 	%r8986, [%rd20];
	ld.u32 	%r8987, [%rd19+12];
	// inline asm
	prmt.b32 %r8985, %r8986, %r8987, %r2;
	// inline asm
	st.u32 	[%rd21], %r8985;
	ld.u32 	%r8990, [%rd19+12];
	ld.u32 	%r8991, [%rd19+8];
	// inline asm
	prmt.b32 %r8989, %r8990, %r8991, %r2;
	// inline asm
	st.u32 	[%rd20+12], %r8989;
	ld.u32 	%r8994, [%rd19+8];
	ld.u32 	%r8995, [%rd19+4];
	// inline asm
	prmt.b32 %r8993, %r8994, %r8995, %r2;
	// inline asm
	st.u32 	[%rd20+8], %r8993;
	ld.u32 	%r8998, [%rd19+4];
	ld.u32 	%r8999, [%rd19];
	// inline asm
	prmt.b32 %r8997, %r8998, %r8999, %r2;
	// inline asm
	st.u32 	[%rd20+4], %r8997;
	ld.u32 	%r9002, [%rd19];
	ld.u32 	%r9003, [%rd18+12];
	// inline asm
	prmt.b32 %r9001, %r9002, %r9003, %r2;
	// inline asm
	st.u32 	[%rd20], %r9001;
	ld.u32 	%r9006, [%rd18+12];
	ld.u32 	%r9007, [%rd18+8];
	// inline asm
	prmt.b32 %r9005, %r9006, %r9007, %r2;
	// inline asm
	st.u32 	[%rd19+12], %r9005;
	ld.u32 	%r9010, [%rd18+8];
	ld.u32 	%r9011, [%rd18+4];
	// inline asm
	prmt.b32 %r9009, %r9010, %r9011, %r2;
	// inline asm
	st.u32 	[%rd19+8], %r9009;
	ld.u32 	%r9014, [%rd18+4];
	ld.u32 	%r9015, [%rd18];
	// inline asm
	prmt.b32 %r9013, %r9014, %r9015, %r2;
	// inline asm
	st.u32 	[%rd19+4], %r9013;
	ld.u32 	%r9018, [%rd18];
	ld.u32 	%r9019, [%rd17+12];
	// inline asm
	prmt.b32 %r9017, %r9018, %r9019, %r2;
	// inline asm
	st.u32 	[%rd19], %r9017;
	ld.u32 	%r9022, [%rd17+12];
	ld.u32 	%r9023, [%rd17+8];
	// inline asm
	prmt.b32 %r9021, %r9022, %r9023, %r2;
	// inline asm
	st.u32 	[%rd18+12], %r9021;
	ld.u32 	%r9026, [%rd17+8];
	ld.u32 	%r9027, [%rd17+4];
	// inline asm
	prmt.b32 %r9025, %r9026, %r9027, %r2;
	// inline asm
	st.u32 	[%rd18+8], %r9025;
	ld.u32 	%r9030, [%rd17+4];
	ld.u32 	%r9031, [%rd17];
	// inline asm
	prmt.b32 %r9029, %r9030, %r9031, %r2;
	// inline asm
	st.u32 	[%rd18+4], %r9029;
	ld.u32 	%r9034, [%rd17];
	ld.u32 	%r9035, [%rd16+12];
	// inline asm
	prmt.b32 %r9033, %r9034, %r9035, %r2;
	// inline asm
	st.u32 	[%rd18], %r9033;
	ld.u32 	%r9038, [%rd16+12];
	ld.u32 	%r9039, [%rd16+8];
	// inline asm
	prmt.b32 %r9037, %r9038, %r9039, %r2;
	// inline asm
	st.u32 	[%rd17+12], %r9037;
	ld.u32 	%r9042, [%rd16+8];
	ld.u32 	%r9043, [%rd16+4];
	// inline asm
	prmt.b32 %r9041, %r9042, %r9043, %r2;
	// inline asm
	st.u32 	[%rd17+8], %r9041;
	ld.u32 	%r9046, [%rd16+4];
	ld.u32 	%r9047, [%rd16];
	// inline asm
	prmt.b32 %r9045, %r9046, %r9047, %r2;
	// inline asm
	st.u32 	[%rd17+4], %r9045;
	ld.u32 	%r9050, [%rd16];
	ld.u32 	%r9051, [%rd15+12];
	// inline asm
	prmt.b32 %r9049, %r9050, %r9051, %r2;
	// inline asm
	st.u32 	[%rd17], %r9049;
	ld.u32 	%r9054, [%rd15+12];
	ld.u32 	%r9055, [%rd15+8];
	// inline asm
	prmt.b32 %r9053, %r9054, %r9055, %r2;
	// inline asm
	st.u32 	[%rd16+12], %r9053;
	ld.u32 	%r9058, [%rd15+8];
	ld.u32 	%r9059, [%rd15+4];
	// inline asm
	prmt.b32 %r9057, %r9058, %r9059, %r2;
	// inline asm
	st.u32 	[%rd16+8], %r9057;
	ld.u32 	%r9062, [%rd15+4];
	ld.u32 	%r9063, [%rd15];
	// inline asm
	prmt.b32 %r9061, %r9062, %r9063, %r2;
	// inline asm
	st.u32 	[%rd16+4], %r9061;
	ld.u32 	%r9066, [%rd15];
	ld.u32 	%r9067, [%rd14+12];
	// inline asm
	prmt.b32 %r9065, %r9066, %r9067, %r2;
	// inline asm
	st.u32 	[%rd16], %r9065;
	ld.u32 	%r9070, [%rd14+12];
	ld.u32 	%r9071, [%rd14+8];
	// inline asm
	prmt.b32 %r9069, %r9070, %r9071, %r2;
	// inline asm
	st.u32 	[%rd15+12], %r9069;
	ld.u32 	%r9074, [%rd14+8];
	ld.u32 	%r9075, [%rd14+4];
	// inline asm
	prmt.b32 %r9073, %r9074, %r9075, %r2;
	// inline asm
	st.u32 	[%rd15+8], %r9073;
	ld.u32 	%r9078, [%rd14+4];
	ld.u32 	%r9079, [%rd14];
	// inline asm
	prmt.b32 %r9077, %r9078, %r9079, %r2;
	// inline asm
	st.u32 	[%rd15+4], %r9077;
	ld.u32 	%r9082, [%rd14];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r9081, %r9082, %r9705, %r2;
	// inline asm
	st.u32 	[%rd15], %r9081;
	st.u32 	[%rd14+12], %r9705;
	st.u32 	[%rd14+8], %r9705;
	mov.u64 	%rd2944, 0;
	st.u32 	[%rd14+4], %rd2944;
	st.u32 	[%rd14], %rd2944;
	bra.uni 	BB1_170;

BB1_12:
	setp.gt.s32	%p39, %r1, 5;
	@%p39 bra 	BB1_16;

	setp.eq.s32	%p42, %r1, 4;
	@%p42 bra 	BB1_78;
	bra.uni 	BB1_14;

BB1_78:
	ld.u32 	%r4522, [%rd21+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9680, %r9672, %r4522, %r2;
	// inline asm
	ld.u32 	%r4525, [%rd21+12];
	ld.u32 	%r4526, [%rd21+8];
	// inline asm
	prmt.b32 %r9673, %r4525, %r4526, %r2;
	// inline asm
	ld.u32 	%r4529, [%rd21+8];
	ld.u32 	%r4530, [%rd21+4];
	// inline asm
	prmt.b32 %r9674, %r4529, %r4530, %r2;
	// inline asm
	ld.u32 	%r4533, [%rd21+4];
	ld.u32 	%r4534, [%rd21];
	// inline asm
	prmt.b32 %r9675, %r4533, %r4534, %r2;
	// inline asm
	ld.u32 	%r4537, [%rd21];
	ld.u32 	%r4538, [%rd20+12];
	// inline asm
	prmt.b32 %r9676, %r4537, %r4538, %r2;
	// inline asm
	ld.u32 	%r4541, [%rd20+12];
	ld.u32 	%r4542, [%rd20+8];
	// inline asm
	prmt.b32 %r4540, %r4541, %r4542, %r2;
	// inline asm
	st.u32 	[%rd21+12], %r4540;
	ld.u32 	%r4545, [%rd20+8];
	ld.u32 	%r4546, [%rd20+4];
	// inline asm
	prmt.b32 %r4544, %r4545, %r4546, %r2;
	// inline asm
	st.u32 	[%rd21+8], %r4544;
	ld.u32 	%r4549, [%rd20+4];
	ld.u32 	%r4550, [%rd20];
	// inline asm
	prmt.b32 %r4548, %r4549, %r4550, %r2;
	// inline asm
	st.u32 	[%rd21+4], %r4548;
	ld.u32 	%r4553, [%rd20];
	ld.u32 	%r4554, [%rd19+12];
	// inline asm
	prmt.b32 %r4552, %r4553, %r4554, %r2;
	// inline asm
	st.u32 	[%rd21], %r4552;
	ld.u32 	%r4557, [%rd19+12];
	ld.u32 	%r4558, [%rd19+8];
	// inline asm
	prmt.b32 %r4556, %r4557, %r4558, %r2;
	// inline asm
	st.u32 	[%rd20+12], %r4556;
	ld.u32 	%r4561, [%rd19+8];
	ld.u32 	%r4562, [%rd19+4];
	// inline asm
	prmt.b32 %r4560, %r4561, %r4562, %r2;
	// inline asm
	st.u32 	[%rd20+8], %r4560;
	ld.u32 	%r4565, [%rd19+4];
	ld.u32 	%r4566, [%rd19];
	// inline asm
	prmt.b32 %r4564, %r4565, %r4566, %r2;
	// inline asm
	st.u32 	[%rd20+4], %r4564;
	ld.u32 	%r4569, [%rd19];
	ld.u32 	%r4570, [%rd18+12];
	// inline asm
	prmt.b32 %r4568, %r4569, %r4570, %r2;
	// inline asm
	st.u32 	[%rd20], %r4568;
	ld.u32 	%r4573, [%rd18+12];
	ld.u32 	%r4574, [%rd18+8];
	// inline asm
	prmt.b32 %r4572, %r4573, %r4574, %r2;
	// inline asm
	st.u32 	[%rd19+12], %r4572;
	ld.u32 	%r4577, [%rd18+8];
	ld.u32 	%r4578, [%rd18+4];
	// inline asm
	prmt.b32 %r4576, %r4577, %r4578, %r2;
	// inline asm
	st.u32 	[%rd19+8], %r4576;
	ld.u32 	%r4581, [%rd18+4];
	ld.u32 	%r4582, [%rd18];
	// inline asm
	prmt.b32 %r4580, %r4581, %r4582, %r2;
	// inline asm
	st.u32 	[%rd19+4], %r4580;
	ld.u32 	%r4585, [%rd18];
	ld.u32 	%r4586, [%rd17+12];
	// inline asm
	prmt.b32 %r4584, %r4585, %r4586, %r2;
	// inline asm
	st.u32 	[%rd19], %r4584;
	ld.u32 	%r4589, [%rd17+12];
	ld.u32 	%r4590, [%rd17+8];
	// inline asm
	prmt.b32 %r4588, %r4589, %r4590, %r2;
	// inline asm
	st.u32 	[%rd18+12], %r4588;
	ld.u32 	%r4593, [%rd17+8];
	ld.u32 	%r4594, [%rd17+4];
	// inline asm
	prmt.b32 %r4592, %r4593, %r4594, %r2;
	// inline asm
	st.u32 	[%rd18+8], %r4592;
	ld.u32 	%r4597, [%rd17+4];
	ld.u32 	%r4598, [%rd17];
	// inline asm
	prmt.b32 %r4596, %r4597, %r4598, %r2;
	// inline asm
	st.u32 	[%rd18+4], %r4596;
	ld.u32 	%r4601, [%rd17];
	ld.u32 	%r4602, [%rd16+12];
	// inline asm
	prmt.b32 %r4600, %r4601, %r4602, %r2;
	// inline asm
	st.u32 	[%rd18], %r4600;
	ld.u32 	%r4605, [%rd16+12];
	ld.u32 	%r4606, [%rd16+8];
	// inline asm
	prmt.b32 %r4604, %r4605, %r4606, %r2;
	// inline asm
	st.u32 	[%rd17+12], %r4604;
	ld.u32 	%r4609, [%rd16+8];
	ld.u32 	%r4610, [%rd16+4];
	// inline asm
	prmt.b32 %r4608, %r4609, %r4610, %r2;
	// inline asm
	st.u32 	[%rd17+8], %r4608;
	ld.u32 	%r4613, [%rd16+4];
	ld.u32 	%r4614, [%rd16];
	// inline asm
	prmt.b32 %r4612, %r4613, %r4614, %r2;
	// inline asm
	st.u32 	[%rd17+4], %r4612;
	ld.u32 	%r4617, [%rd16];
	ld.u32 	%r4618, [%rd15+12];
	// inline asm
	prmt.b32 %r4616, %r4617, %r4618, %r2;
	// inline asm
	st.u32 	[%rd17], %r4616;
	ld.u32 	%r4621, [%rd15+12];
	ld.u32 	%r4622, [%rd15+8];
	// inline asm
	prmt.b32 %r4620, %r4621, %r4622, %r2;
	// inline asm
	st.u32 	[%rd16+12], %r4620;
	ld.u32 	%r4625, [%rd15+8];
	ld.u32 	%r4626, [%rd15+4];
	// inline asm
	prmt.b32 %r4624, %r4625, %r4626, %r2;
	// inline asm
	st.u32 	[%rd16+8], %r4624;
	ld.u32 	%r4629, [%rd15+4];
	ld.u32 	%r4630, [%rd15];
	// inline asm
	prmt.b32 %r4628, %r4629, %r4630, %r2;
	// inline asm
	st.u32 	[%rd16+4], %r4628;
	ld.u32 	%r4633, [%rd15];
	ld.u32 	%r4634, [%rd14+12];
	// inline asm
	prmt.b32 %r4632, %r4633, %r4634, %r2;
	// inline asm
	st.u32 	[%rd16], %r4632;
	ld.u32 	%r4637, [%rd14+12];
	ld.u32 	%r4638, [%rd14+8];
	// inline asm
	prmt.b32 %r4636, %r4637, %r4638, %r2;
	// inline asm
	st.u32 	[%rd15+12], %r4636;
	ld.u32 	%r4641, [%rd14+8];
	ld.u32 	%r4642, [%rd14+4];
	// inline asm
	prmt.b32 %r4640, %r4641, %r4642, %r2;
	// inline asm
	st.u32 	[%rd15+8], %r4640;
	ld.u32 	%r4645, [%rd14+4];
	ld.u32 	%r4646, [%rd14];
	// inline asm
	prmt.b32 %r4644, %r4645, %r4646, %r2;
	// inline asm
	st.u32 	[%rd15+4], %r4644;
	ld.u32 	%r4649, [%rd14];
	// inline asm
	prmt.b32 %r4648, %r4649, %r9672, %r2;
	// inline asm
	st.u32 	[%rd15], %r4648;
	st.u32 	[%rd14+12], %r9672;
	st.u32 	[%rd14+8], %r9672;
	mov.u64 	%rd50, 0;
	st.u32 	[%rd14+4], %rd50;
	st.u32 	[%rd14], %rd50;
	mov.u32 	%r9677, %r9672;
	mov.u32 	%r9678, %r9672;
	mov.u32 	%r9679, %r9672;
	bra.uni 	BB1_79;

BB1_131:
	setp.gt.s32	%p63, %r1, 21;
	@%p63 bra 	BB1_135;

	setp.eq.s32	%p66, %r1, 20;
	@%p66 bra 	BB1_158;
	bra.uni 	BB1_133;

BB1_158:
	ld.u32 	%r7710, [%rd16+12];
	ld.u32 	%r7711, [%rd16+8];
	// inline asm
	prmt.b32 %r7709, %r7710, %r7711, %r2;
	// inline asm
	st.u32 	[%rd21+12], %r7709;
	ld.u32 	%r7714, [%rd16+8];
	ld.u32 	%r7715, [%rd16+4];
	// inline asm
	prmt.b32 %r7713, %r7714, %r7715, %r2;
	// inline asm
	st.u32 	[%rd21+8], %r7713;
	ld.u32 	%r7718, [%rd16+4];
	ld.u32 	%r7719, [%rd16];
	// inline asm
	prmt.b32 %r7717, %r7718, %r7719, %r2;
	// inline asm
	st.u32 	[%rd21+4], %r7717;
	ld.u32 	%r7722, [%rd16];
	ld.u32 	%r7723, [%rd15+12];
	// inline asm
	prmt.b32 %r7721, %r7722, %r7723, %r2;
	// inline asm
	st.u32 	[%rd21], %r7721;
	ld.u32 	%r7726, [%rd15+12];
	ld.u32 	%r7727, [%rd15+8];
	// inline asm
	prmt.b32 %r7725, %r7726, %r7727, %r2;
	// inline asm
	st.u32 	[%rd20+12], %r7725;
	ld.u32 	%r7730, [%rd15+8];
	ld.u32 	%r7731, [%rd15+4];
	// inline asm
	prmt.b32 %r7729, %r7730, %r7731, %r2;
	// inline asm
	st.u32 	[%rd20+8], %r7729;
	ld.u32 	%r7734, [%rd15+4];
	ld.u32 	%r7735, [%rd15];
	// inline asm
	prmt.b32 %r7733, %r7734, %r7735, %r2;
	// inline asm
	st.u32 	[%rd20+4], %r7733;
	ld.u32 	%r7738, [%rd15];
	ld.u32 	%r7739, [%rd14+12];
	// inline asm
	prmt.b32 %r7737, %r7738, %r7739, %r2;
	// inline asm
	st.u32 	[%rd20], %r7737;
	ld.u32 	%r7742, [%rd14+12];
	ld.u32 	%r7743, [%rd14+8];
	// inline asm
	prmt.b32 %r7741, %r7742, %r7743, %r2;
	// inline asm
	st.u32 	[%rd19+12], %r7741;
	ld.u32 	%r7746, [%rd14+8];
	ld.u32 	%r7747, [%rd14+4];
	// inline asm
	prmt.b32 %r7745, %r7746, %r7747, %r2;
	// inline asm
	st.u32 	[%rd19+8], %r7745;
	ld.u32 	%r7750, [%rd14+4];
	ld.u32 	%r7751, [%rd14];
	// inline asm
	prmt.b32 %r7749, %r7750, %r7751, %r2;
	// inline asm
	st.u32 	[%rd19+4], %r7749;
	ld.u32 	%r7754, [%rd14];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r7753, %r7754, %r9705, %r2;
	// inline asm
	st.u32 	[%rd19], %r7753;
	st.u32 	[%rd18+12], %r9705;
	st.u32 	[%rd18+8], %r9705;
	st.u32 	[%rd18+4], %r9705;
	st.u32 	[%rd18], %r9705;
	st.u32 	[%rd17+12], %r9705;
	st.u32 	[%rd17+8], %r9705;
	st.u32 	[%rd17+4], %r9705;
	st.u32 	[%rd17], %r9705;
	st.u32 	[%rd16+12], %r9705;
	st.u32 	[%rd16+8], %r9705;
	st.u32 	[%rd16+4], %r9705;
	st.u32 	[%rd16], %r9705;
	st.u32 	[%rd15+12], %r9705;
	st.u32 	[%rd15+8], %r9705;
	st.u32 	[%rd15+4], %r9705;
	st.u32 	[%rd15], %r9705;
	st.u32 	[%rd14+12], %r9705;
	st.u32 	[%rd14+8], %r9705;
	mov.u64 	%rd2928, 0;
	st.u32 	[%rd14+4], %rd2928;
	st.u32 	[%rd14], %rd2928;
	bra.uni 	BB1_170;

BB1_43:
	setp.gt.s32	%p16, %r1, 21;
	@%p16 bra 	BB1_47;

	setp.eq.s32	%p19, %r1, 20;
	@%p19 bra 	BB1_70;
	bra.uni 	BB1_45;

BB1_70:
	ld.u32 	%r2098, [%rd21+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9696, %r9672, %r2098, %r2;
	// inline asm
	ld.u32 	%r2101, [%rd21+12];
	ld.u32 	%r2102, [%rd21+8];
	// inline asm
	prmt.b32 %r9689, %r2101, %r2102, %r2;
	// inline asm
	ld.u32 	%r2105, [%rd21+8];
	ld.u32 	%r2106, [%rd21+4];
	// inline asm
	prmt.b32 %r9690, %r2105, %r2106, %r2;
	// inline asm
	ld.u32 	%r2109, [%rd21+4];
	ld.u32 	%r2110, [%rd21];
	// inline asm
	prmt.b32 %r9691, %r2109, %r2110, %r2;
	// inline asm
	ld.u32 	%r2113, [%rd21];
	ld.u32 	%r2114, [%rd20+12];
	// inline asm
	prmt.b32 %r9692, %r2113, %r2114, %r2;
	// inline asm
	ld.u32 	%r2117, [%rd20+12];
	ld.u32 	%r2118, [%rd20+8];
	// inline asm
	prmt.b32 %r9685, %r2117, %r2118, %r2;
	// inline asm
	ld.u32 	%r2121, [%rd20+8];
	ld.u32 	%r2122, [%rd20+4];
	// inline asm
	prmt.b32 %r9686, %r2121, %r2122, %r2;
	// inline asm
	ld.u32 	%r2125, [%rd20+4];
	ld.u32 	%r2126, [%rd20];
	// inline asm
	prmt.b32 %r9687, %r2125, %r2126, %r2;
	// inline asm
	ld.u32 	%r2129, [%rd20];
	ld.u32 	%r2130, [%rd19+12];
	// inline asm
	prmt.b32 %r9688, %r2129, %r2130, %r2;
	// inline asm
	ld.u32 	%r2133, [%rd19+12];
	ld.u32 	%r2134, [%rd19+8];
	// inline asm
	prmt.b32 %r9681, %r2133, %r2134, %r2;
	// inline asm
	ld.u32 	%r2137, [%rd19+8];
	ld.u32 	%r2138, [%rd19+4];
	// inline asm
	prmt.b32 %r9682, %r2137, %r2138, %r2;
	// inline asm
	ld.u32 	%r2141, [%rd19+4];
	ld.u32 	%r2142, [%rd19];
	// inline asm
	prmt.b32 %r9683, %r2141, %r2142, %r2;
	// inline asm
	ld.u32 	%r2145, [%rd19];
	ld.u32 	%r2146, [%rd18+12];
	// inline asm
	prmt.b32 %r9684, %r2145, %r2146, %r2;
	// inline asm
	ld.u32 	%r2149, [%rd18+12];
	ld.u32 	%r2150, [%rd18+8];
	// inline asm
	prmt.b32 %r9677, %r2149, %r2150, %r2;
	// inline asm
	ld.u32 	%r2153, [%rd18+8];
	ld.u32 	%r2154, [%rd18+4];
	// inline asm
	prmt.b32 %r9678, %r2153, %r2154, %r2;
	// inline asm
	ld.u32 	%r2157, [%rd18+4];
	ld.u32 	%r2158, [%rd18];
	// inline asm
	prmt.b32 %r9679, %r2157, %r2158, %r2;
	// inline asm
	ld.u32 	%r2161, [%rd18];
	ld.u32 	%r2162, [%rd17+12];
	// inline asm
	prmt.b32 %r9680, %r2161, %r2162, %r2;
	// inline asm
	ld.u32 	%r2165, [%rd17+12];
	ld.u32 	%r2166, [%rd17+8];
	// inline asm
	prmt.b32 %r9673, %r2165, %r2166, %r2;
	// inline asm
	ld.u32 	%r2169, [%rd17+8];
	ld.u32 	%r2170, [%rd17+4];
	// inline asm
	prmt.b32 %r9674, %r2169, %r2170, %r2;
	// inline asm
	ld.u32 	%r2173, [%rd17+4];
	ld.u32 	%r2174, [%rd17];
	// inline asm
	prmt.b32 %r9675, %r2173, %r2174, %r2;
	// inline asm
	ld.u32 	%r2177, [%rd17];
	ld.u32 	%r2178, [%rd16+12];
	// inline asm
	prmt.b32 %r9676, %r2177, %r2178, %r2;
	// inline asm
	ld.u32 	%r2181, [%rd16+12];
	ld.u32 	%r2182, [%rd16+8];
	// inline asm
	prmt.b32 %r2180, %r2181, %r2182, %r2;
	// inline asm
	st.u32 	[%rd21+12], %r2180;
	ld.u32 	%r2185, [%rd16+8];
	ld.u32 	%r2186, [%rd16+4];
	// inline asm
	prmt.b32 %r2184, %r2185, %r2186, %r2;
	// inline asm
	st.u32 	[%rd21+8], %r2184;
	ld.u32 	%r2189, [%rd16+4];
	ld.u32 	%r2190, [%rd16];
	// inline asm
	prmt.b32 %r2188, %r2189, %r2190, %r2;
	// inline asm
	st.u32 	[%rd21+4], %r2188;
	ld.u32 	%r2193, [%rd16];
	ld.u32 	%r2194, [%rd15+12];
	// inline asm
	prmt.b32 %r2192, %r2193, %r2194, %r2;
	// inline asm
	st.u32 	[%rd21], %r2192;
	ld.u32 	%r2197, [%rd15+12];
	ld.u32 	%r2198, [%rd15+8];
	// inline asm
	prmt.b32 %r2196, %r2197, %r2198, %r2;
	// inline asm
	st.u32 	[%rd20+12], %r2196;
	ld.u32 	%r2201, [%rd15+8];
	ld.u32 	%r2202, [%rd15+4];
	// inline asm
	prmt.b32 %r2200, %r2201, %r2202, %r2;
	// inline asm
	st.u32 	[%rd20+8], %r2200;
	ld.u32 	%r2205, [%rd15+4];
	ld.u32 	%r2206, [%rd15];
	// inline asm
	prmt.b32 %r2204, %r2205, %r2206, %r2;
	// inline asm
	st.u32 	[%rd20+4], %r2204;
	ld.u32 	%r2209, [%rd15];
	ld.u32 	%r2210, [%rd14+12];
	// inline asm
	prmt.b32 %r2208, %r2209, %r2210, %r2;
	// inline asm
	st.u32 	[%rd20], %r2208;
	ld.u32 	%r2213, [%rd14+12];
	ld.u32 	%r2214, [%rd14+8];
	// inline asm
	prmt.b32 %r2212, %r2213, %r2214, %r2;
	// inline asm
	st.u32 	[%rd19+12], %r2212;
	ld.u32 	%r2217, [%rd14+8];
	ld.u32 	%r2218, [%rd14+4];
	// inline asm
	prmt.b32 %r2216, %r2217, %r2218, %r2;
	// inline asm
	st.u32 	[%rd19+8], %r2216;
	ld.u32 	%r2221, [%rd14+4];
	ld.u32 	%r2222, [%rd14];
	// inline asm
	prmt.b32 %r2220, %r2221, %r2222, %r2;
	// inline asm
	st.u32 	[%rd19+4], %r2220;
	ld.u32 	%r2225, [%rd14];
	// inline asm
	prmt.b32 %r2224, %r2225, %r9672, %r2;
	// inline asm
	st.u32 	[%rd19], %r2224;
	st.u32 	[%rd18+12], %r9672;
	st.u32 	[%rd18+8], %r9672;
	st.u32 	[%rd18+4], %r9672;
	st.u32 	[%rd18], %r9672;
	st.u32 	[%rd17+12], %r9672;
	st.u32 	[%rd17+8], %r9672;
	st.u32 	[%rd17+4], %r9672;
	st.u32 	[%rd17], %r9672;
	st.u32 	[%rd16+12], %r9672;
	st.u32 	[%rd16+8], %r9672;
	st.u32 	[%rd16+4], %r9672;
	st.u32 	[%rd16], %r9672;
	st.u32 	[%rd15+12], %r9672;
	st.u32 	[%rd15+8], %r9672;
	st.u32 	[%rd15+4], %r9672;
	st.u32 	[%rd15], %r9672;
	st.u32 	[%rd14+12], %r9672;
	st.u32 	[%rd14+8], %r9672;
	mov.u64 	%rd34, 0;
	st.u32 	[%rd14+4], %rd34;
	st.u32 	[%rd14], %rd34;
	mov.u32 	%r9693, %r9672;
	mov.u32 	%r9694, %r9672;
	mov.u32 	%r9695, %r9672;
	bra.uni 	BB1_83;

BB1_115:
	setp.gt.s32	%p75, %r1, 13;
	@%p75 bra 	BB1_119;

	setp.eq.s32	%p78, %r1, 12;
	@%p78 bra 	BB1_162;
	bra.uni 	BB1_117;

BB1_162:
	ld.u32 	%r8214, [%rd18+12];
	ld.u32 	%r8215, [%rd18+8];
	// inline asm
	prmt.b32 %r8213, %r8214, %r8215, %r2;
	// inline asm
	st.u32 	[%rd21+12], %r8213;
	ld.u32 	%r8218, [%rd18+8];
	ld.u32 	%r8219, [%rd18+4];
	// inline asm
	prmt.b32 %r8217, %r8218, %r8219, %r2;
	// inline asm
	st.u32 	[%rd21+8], %r8217;
	ld.u32 	%r8222, [%rd18+4];
	ld.u32 	%r8223, [%rd18];
	// inline asm
	prmt.b32 %r8221, %r8222, %r8223, %r2;
	// inline asm
	st.u32 	[%rd21+4], %r8221;
	ld.u32 	%r8226, [%rd18];
	ld.u32 	%r8227, [%rd17+12];
	// inline asm
	prmt.b32 %r8225, %r8226, %r8227, %r2;
	// inline asm
	st.u32 	[%rd21], %r8225;
	ld.u32 	%r8230, [%rd17+12];
	ld.u32 	%r8231, [%rd17+8];
	// inline asm
	prmt.b32 %r8229, %r8230, %r8231, %r2;
	// inline asm
	st.u32 	[%rd20+12], %r8229;
	ld.u32 	%r8234, [%rd17+8];
	ld.u32 	%r8235, [%rd17+4];
	// inline asm
	prmt.b32 %r8233, %r8234, %r8235, %r2;
	// inline asm
	st.u32 	[%rd20+8], %r8233;
	ld.u32 	%r8238, [%rd17+4];
	ld.u32 	%r8239, [%rd17];
	// inline asm
	prmt.b32 %r8237, %r8238, %r8239, %r2;
	// inline asm
	st.u32 	[%rd20+4], %r8237;
	ld.u32 	%r8242, [%rd17];
	ld.u32 	%r8243, [%rd16+12];
	// inline asm
	prmt.b32 %r8241, %r8242, %r8243, %r2;
	// inline asm
	st.u32 	[%rd20], %r8241;
	ld.u32 	%r8246, [%rd16+12];
	ld.u32 	%r8247, [%rd16+8];
	// inline asm
	prmt.b32 %r8245, %r8246, %r8247, %r2;
	// inline asm
	st.u32 	[%rd19+12], %r8245;
	ld.u32 	%r8250, [%rd16+8];
	ld.u32 	%r8251, [%rd16+4];
	// inline asm
	prmt.b32 %r8249, %r8250, %r8251, %r2;
	// inline asm
	st.u32 	[%rd19+8], %r8249;
	ld.u32 	%r8254, [%rd16+4];
	ld.u32 	%r8255, [%rd16];
	// inline asm
	prmt.b32 %r8253, %r8254, %r8255, %r2;
	// inline asm
	st.u32 	[%rd19+4], %r8253;
	ld.u32 	%r8258, [%rd16];
	ld.u32 	%r8259, [%rd15+12];
	// inline asm
	prmt.b32 %r8257, %r8258, %r8259, %r2;
	// inline asm
	st.u32 	[%rd19], %r8257;
	ld.u32 	%r8262, [%rd15+12];
	ld.u32 	%r8263, [%rd15+8];
	// inline asm
	prmt.b32 %r8261, %r8262, %r8263, %r2;
	// inline asm
	st.u32 	[%rd18+12], %r8261;
	ld.u32 	%r8266, [%rd15+8];
	ld.u32 	%r8267, [%rd15+4];
	// inline asm
	prmt.b32 %r8265, %r8266, %r8267, %r2;
	// inline asm
	st.u32 	[%rd18+8], %r8265;
	ld.u32 	%r8270, [%rd15+4];
	ld.u32 	%r8271, [%rd15];
	// inline asm
	prmt.b32 %r8269, %r8270, %r8271, %r2;
	// inline asm
	st.u32 	[%rd18+4], %r8269;
	ld.u32 	%r8274, [%rd15];
	ld.u32 	%r8275, [%rd14+12];
	// inline asm
	prmt.b32 %r8273, %r8274, %r8275, %r2;
	// inline asm
	st.u32 	[%rd18], %r8273;
	ld.u32 	%r8278, [%rd14+12];
	ld.u32 	%r8279, [%rd14+8];
	// inline asm
	prmt.b32 %r8277, %r8278, %r8279, %r2;
	// inline asm
	st.u32 	[%rd17+12], %r8277;
	ld.u32 	%r8282, [%rd14+8];
	ld.u32 	%r8283, [%rd14+4];
	// inline asm
	prmt.b32 %r8281, %r8282, %r8283, %r2;
	// inline asm
	st.u32 	[%rd17+8], %r8281;
	ld.u32 	%r8286, [%rd14+4];
	ld.u32 	%r8287, [%rd14];
	// inline asm
	prmt.b32 %r8285, %r8286, %r8287, %r2;
	// inline asm
	st.u32 	[%rd17+4], %r8285;
	ld.u32 	%r8290, [%rd14];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r8289, %r8290, %r9705, %r2;
	// inline asm
	st.u32 	[%rd17], %r8289;
	st.u32 	[%rd16+12], %r9705;
	st.u32 	[%rd16+8], %r9705;
	st.u32 	[%rd16+4], %r9705;
	st.u32 	[%rd16], %r9705;
	st.u32 	[%rd15+12], %r9705;
	st.u32 	[%rd15+8], %r9705;
	st.u32 	[%rd15+4], %r9705;
	st.u32 	[%rd15], %r9705;
	st.u32 	[%rd14+12], %r9705;
	st.u32 	[%rd14+8], %r9705;
	mov.u64 	%rd2936, 0;
	st.u32 	[%rd14+4], %rd2936;
	st.u32 	[%rd14], %rd2936;
	bra.uni 	BB1_170;

BB1_27:
	setp.gt.s32	%p28, %r1, 13;
	@%p28 bra 	BB1_31;

	setp.eq.s32	%p31, %r1, 12;
	@%p31 bra 	BB1_74;
	bra.uni 	BB1_29;

BB1_74:
	ld.u32 	%r3278, [%rd21+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9688, %r9672, %r3278, %r2;
	// inline asm
	ld.u32 	%r3281, [%rd21+12];
	ld.u32 	%r3282, [%rd21+8];
	// inline asm
	prmt.b32 %r9681, %r3281, %r3282, %r2;
	// inline asm
	ld.u32 	%r3285, [%rd21+8];
	ld.u32 	%r3286, [%rd21+4];
	// inline asm
	prmt.b32 %r9682, %r3285, %r3286, %r2;
	// inline asm
	ld.u32 	%r3289, [%rd21+4];
	ld.u32 	%r3290, [%rd21];
	// inline asm
	prmt.b32 %r9683, %r3289, %r3290, %r2;
	// inline asm
	ld.u32 	%r3293, [%rd21];
	ld.u32 	%r3294, [%rd20+12];
	// inline asm
	prmt.b32 %r9684, %r3293, %r3294, %r2;
	// inline asm
	ld.u32 	%r3297, [%rd20+12];
	ld.u32 	%r3298, [%rd20+8];
	// inline asm
	prmt.b32 %r9677, %r3297, %r3298, %r2;
	// inline asm
	ld.u32 	%r3301, [%rd20+8];
	ld.u32 	%r3302, [%rd20+4];
	// inline asm
	prmt.b32 %r9678, %r3301, %r3302, %r2;
	// inline asm
	ld.u32 	%r3305, [%rd20+4];
	ld.u32 	%r3306, [%rd20];
	// inline asm
	prmt.b32 %r9679, %r3305, %r3306, %r2;
	// inline asm
	ld.u32 	%r3309, [%rd20];
	ld.u32 	%r3310, [%rd19+12];
	// inline asm
	prmt.b32 %r9680, %r3309, %r3310, %r2;
	// inline asm
	ld.u32 	%r3313, [%rd19+12];
	ld.u32 	%r3314, [%rd19+8];
	// inline asm
	prmt.b32 %r9673, %r3313, %r3314, %r2;
	// inline asm
	ld.u32 	%r3317, [%rd19+8];
	ld.u32 	%r3318, [%rd19+4];
	// inline asm
	prmt.b32 %r9674, %r3317, %r3318, %r2;
	// inline asm
	ld.u32 	%r3321, [%rd19+4];
	ld.u32 	%r3322, [%rd19];
	// inline asm
	prmt.b32 %r9675, %r3321, %r3322, %r2;
	// inline asm
	ld.u32 	%r3325, [%rd19];
	ld.u32 	%r3326, [%rd18+12];
	// inline asm
	prmt.b32 %r9676, %r3325, %r3326, %r2;
	// inline asm
	ld.u32 	%r3329, [%rd18+12];
	ld.u32 	%r3330, [%rd18+8];
	// inline asm
	prmt.b32 %r3328, %r3329, %r3330, %r2;
	// inline asm
	st.u32 	[%rd21+12], %r3328;
	ld.u32 	%r3333, [%rd18+8];
	ld.u32 	%r3334, [%rd18+4];
	// inline asm
	prmt.b32 %r3332, %r3333, %r3334, %r2;
	// inline asm
	st.u32 	[%rd21+8], %r3332;
	ld.u32 	%r3337, [%rd18+4];
	ld.u32 	%r3338, [%rd18];
	// inline asm
	prmt.b32 %r3336, %r3337, %r3338, %r2;
	// inline asm
	st.u32 	[%rd21+4], %r3336;
	ld.u32 	%r3341, [%rd18];
	ld.u32 	%r3342, [%rd17+12];
	// inline asm
	prmt.b32 %r3340, %r3341, %r3342, %r2;
	// inline asm
	st.u32 	[%rd21], %r3340;
	ld.u32 	%r3345, [%rd17+12];
	ld.u32 	%r3346, [%rd17+8];
	// inline asm
	prmt.b32 %r3344, %r3345, %r3346, %r2;
	// inline asm
	st.u32 	[%rd20+12], %r3344;
	ld.u32 	%r3349, [%rd17+8];
	ld.u32 	%r3350, [%rd17+4];
	// inline asm
	prmt.b32 %r3348, %r3349, %r3350, %r2;
	// inline asm
	st.u32 	[%rd20+8], %r3348;
	ld.u32 	%r3353, [%rd17+4];
	ld.u32 	%r3354, [%rd17];
	// inline asm
	prmt.b32 %r3352, %r3353, %r3354, %r2;
	// inline asm
	st.u32 	[%rd20+4], %r3352;
	ld.u32 	%r3357, [%rd17];
	ld.u32 	%r3358, [%rd16+12];
	// inline asm
	prmt.b32 %r3356, %r3357, %r3358, %r2;
	// inline asm
	st.u32 	[%rd20], %r3356;
	ld.u32 	%r3361, [%rd16+12];
	ld.u32 	%r3362, [%rd16+8];
	// inline asm
	prmt.b32 %r3360, %r3361, %r3362, %r2;
	// inline asm
	st.u32 	[%rd19+12], %r3360;
	ld.u32 	%r3365, [%rd16+8];
	ld.u32 	%r3366, [%rd16+4];
	// inline asm
	prmt.b32 %r3364, %r3365, %r3366, %r2;
	// inline asm
	st.u32 	[%rd19+8], %r3364;
	ld.u32 	%r3369, [%rd16+4];
	ld.u32 	%r3370, [%rd16];
	// inline asm
	prmt.b32 %r3368, %r3369, %r3370, %r2;
	// inline asm
	st.u32 	[%rd19+4], %r3368;
	ld.u32 	%r3373, [%rd16];
	ld.u32 	%r3374, [%rd15+12];
	// inline asm
	prmt.b32 %r3372, %r3373, %r3374, %r2;
	// inline asm
	st.u32 	[%rd19], %r3372;
	ld.u32 	%r3377, [%rd15+12];
	ld.u32 	%r3378, [%rd15+8];
	// inline asm
	prmt.b32 %r3376, %r3377, %r3378, %r2;
	// inline asm
	st.u32 	[%rd18+12], %r3376;
	ld.u32 	%r3381, [%rd15+8];
	ld.u32 	%r3382, [%rd15+4];
	// inline asm
	prmt.b32 %r3380, %r3381, %r3382, %r2;
	// inline asm
	st.u32 	[%rd18+8], %r3380;
	ld.u32 	%r3385, [%rd15+4];
	ld.u32 	%r3386, [%rd15];
	// inline asm
	prmt.b32 %r3384, %r3385, %r3386, %r2;
	// inline asm
	st.u32 	[%rd18+4], %r3384;
	ld.u32 	%r3389, [%rd15];
	ld.u32 	%r3390, [%rd14+12];
	// inline asm
	prmt.b32 %r3388, %r3389, %r3390, %r2;
	// inline asm
	st.u32 	[%rd18], %r3388;
	ld.u32 	%r3393, [%rd14+12];
	ld.u32 	%r3394, [%rd14+8];
	// inline asm
	prmt.b32 %r3392, %r3393, %r3394, %r2;
	// inline asm
	st.u32 	[%rd17+12], %r3392;
	ld.u32 	%r3397, [%rd14+8];
	ld.u32 	%r3398, [%rd14+4];
	// inline asm
	prmt.b32 %r3396, %r3397, %r3398, %r2;
	// inline asm
	st.u32 	[%rd17+8], %r3396;
	ld.u32 	%r3401, [%rd14+4];
	ld.u32 	%r3402, [%rd14];
	// inline asm
	prmt.b32 %r3400, %r3401, %r3402, %r2;
	// inline asm
	st.u32 	[%rd17+4], %r3400;
	ld.u32 	%r3405, [%rd14];
	// inline asm
	prmt.b32 %r3404, %r3405, %r9672, %r2;
	// inline asm
	st.u32 	[%rd17], %r3404;
	st.u32 	[%rd16+12], %r9672;
	st.u32 	[%rd16+8], %r9672;
	st.u32 	[%rd16+4], %r9672;
	st.u32 	[%rd16], %r9672;
	st.u32 	[%rd15+12], %r9672;
	st.u32 	[%rd15+8], %r9672;
	st.u32 	[%rd15+4], %r9672;
	st.u32 	[%rd15], %r9672;
	st.u32 	[%rd14+12], %r9672;
	st.u32 	[%rd14+8], %r9672;
	mov.u64 	%rd42, 0;
	st.u32 	[%rd14+4], %rd42;
	st.u32 	[%rd14], %rd42;
	mov.u32 	%r9685, %r9672;
	mov.u32 	%r9686, %r9672;
	mov.u32 	%r9687, %r9672;
	bra.uni 	BB1_81;

BB1_146:
	setp.gt.s32	%p52, %r1, 29;
	@%p52 bra 	BB1_150;

	setp.eq.s32	%p55, %r1, 28;
	@%p55 bra 	BB1_154;
	bra.uni 	BB1_148;

BB1_154:
	ld.u32 	%r7462, [%rd14+12];
	ld.u32 	%r7463, [%rd14+8];
	// inline asm
	prmt.b32 %r7461, %r7462, %r7463, %r2;
	// inline asm
	st.u32 	[%rd21+12], %r7461;
	ld.u32 	%r7466, [%rd14+8];
	ld.u32 	%r7467, [%rd14+4];
	// inline asm
	prmt.b32 %r7465, %r7466, %r7467, %r2;
	// inline asm
	st.u32 	[%rd21+8], %r7465;
	ld.u32 	%r7470, [%rd14+4];
	ld.u32 	%r7471, [%rd14];
	// inline asm
	prmt.b32 %r7469, %r7470, %r7471, %r2;
	// inline asm
	st.u32 	[%rd21+4], %r7469;
	ld.u32 	%r7474, [%rd14];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r7473, %r7474, %r9705, %r2;
	// inline asm
	st.u32 	[%rd21], %r7473;
	st.u32 	[%rd20+12], %r9705;
	st.u32 	[%rd20+8], %r9705;
	st.u32 	[%rd20+4], %r9705;
	st.u32 	[%rd20], %r9705;
	st.u32 	[%rd19+12], %r9705;
	st.u32 	[%rd19+8], %r9705;
	st.u32 	[%rd19+4], %r9705;
	st.u32 	[%rd19], %r9705;
	st.u32 	[%rd18+12], %r9705;
	st.u32 	[%rd18+8], %r9705;
	st.u32 	[%rd18+4], %r9705;
	st.u32 	[%rd18], %r9705;
	st.u32 	[%rd17+12], %r9705;
	st.u32 	[%rd17+8], %r9705;
	st.u32 	[%rd17+4], %r9705;
	st.u32 	[%rd17], %r9705;
	st.u32 	[%rd16+12], %r9705;
	st.u32 	[%rd16+8], %r9705;
	st.u32 	[%rd16+4], %r9705;
	st.u32 	[%rd16], %r9705;
	st.u32 	[%rd15+12], %r9705;
	st.u32 	[%rd15+8], %r9705;
	st.u32 	[%rd15+4], %r9705;
	st.u32 	[%rd15], %r9705;
	st.u32 	[%rd14+12], %r9705;
	st.u32 	[%rd14+8], %r9705;
	mov.u64 	%rd2920, 0;
	st.u32 	[%rd14+4], %rd2920;
	st.u32 	[%rd14], %rd2920;
	bra.uni 	BB1_170;

BB1_58:
	setp.gt.s32	%p5, %r1, 29;
	@%p5 bra 	BB1_62;

	setp.eq.s32	%p8, %r1, 28;
	@%p8 bra 	BB1_66;
	bra.uni 	BB1_60;

BB1_66:
	ld.u32 	%r982, [%rd21+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9704, %r9672, %r982, %r2;
	// inline asm
	ld.u32 	%r985, [%rd21+12];
	ld.u32 	%r986, [%rd21+8];
	// inline asm
	prmt.b32 %r9697, %r985, %r986, %r2;
	// inline asm
	ld.u32 	%r989, [%rd21+8];
	ld.u32 	%r990, [%rd21+4];
	// inline asm
	prmt.b32 %r9698, %r989, %r990, %r2;
	// inline asm
	ld.u32 	%r993, [%rd21+4];
	ld.u32 	%r994, [%rd21];
	// inline asm
	prmt.b32 %r9699, %r993, %r994, %r2;
	// inline asm
	ld.u32 	%r997, [%rd21];
	ld.u32 	%r998, [%rd20+12];
	// inline asm
	prmt.b32 %r9700, %r997, %r998, %r2;
	// inline asm
	ld.u32 	%r1001, [%rd20+12];
	ld.u32 	%r1002, [%rd20+8];
	// inline asm
	prmt.b32 %r9693, %r1001, %r1002, %r2;
	// inline asm
	ld.u32 	%r1005, [%rd20+8];
	ld.u32 	%r1006, [%rd20+4];
	// inline asm
	prmt.b32 %r9694, %r1005, %r1006, %r2;
	// inline asm
	ld.u32 	%r1009, [%rd20+4];
	ld.u32 	%r1010, [%rd20];
	// inline asm
	prmt.b32 %r9695, %r1009, %r1010, %r2;
	// inline asm
	ld.u32 	%r1013, [%rd20];
	ld.u32 	%r1014, [%rd19+12];
	// inline asm
	prmt.b32 %r9696, %r1013, %r1014, %r2;
	// inline asm
	ld.u32 	%r1017, [%rd19+12];
	ld.u32 	%r1018, [%rd19+8];
	// inline asm
	prmt.b32 %r9689, %r1017, %r1018, %r2;
	// inline asm
	ld.u32 	%r1021, [%rd19+8];
	ld.u32 	%r1022, [%rd19+4];
	// inline asm
	prmt.b32 %r9690, %r1021, %r1022, %r2;
	// inline asm
	ld.u32 	%r1025, [%rd19+4];
	ld.u32 	%r1026, [%rd19];
	// inline asm
	prmt.b32 %r9691, %r1025, %r1026, %r2;
	// inline asm
	ld.u32 	%r1029, [%rd19];
	ld.u32 	%r1030, [%rd18+12];
	// inline asm
	prmt.b32 %r9692, %r1029, %r1030, %r2;
	// inline asm
	ld.u32 	%r1033, [%rd18+12];
	ld.u32 	%r1034, [%rd18+8];
	// inline asm
	prmt.b32 %r9685, %r1033, %r1034, %r2;
	// inline asm
	ld.u32 	%r1037, [%rd18+8];
	ld.u32 	%r1038, [%rd18+4];
	// inline asm
	prmt.b32 %r9686, %r1037, %r1038, %r2;
	// inline asm
	ld.u32 	%r1041, [%rd18+4];
	ld.u32 	%r1042, [%rd18];
	// inline asm
	prmt.b32 %r9687, %r1041, %r1042, %r2;
	// inline asm
	ld.u32 	%r1045, [%rd18];
	ld.u32 	%r1046, [%rd17+12];
	// inline asm
	prmt.b32 %r9688, %r1045, %r1046, %r2;
	// inline asm
	ld.u32 	%r1049, [%rd17+12];
	ld.u32 	%r1050, [%rd17+8];
	// inline asm
	prmt.b32 %r9681, %r1049, %r1050, %r2;
	// inline asm
	ld.u32 	%r1053, [%rd17+8];
	ld.u32 	%r1054, [%rd17+4];
	// inline asm
	prmt.b32 %r9682, %r1053, %r1054, %r2;
	// inline asm
	ld.u32 	%r1057, [%rd17+4];
	ld.u32 	%r1058, [%rd17];
	// inline asm
	prmt.b32 %r9683, %r1057, %r1058, %r2;
	// inline asm
	ld.u32 	%r1061, [%rd17];
	ld.u32 	%r1062, [%rd16+12];
	// inline asm
	prmt.b32 %r9684, %r1061, %r1062, %r2;
	// inline asm
	ld.u32 	%r1065, [%rd16+12];
	ld.u32 	%r1066, [%rd16+8];
	// inline asm
	prmt.b32 %r9677, %r1065, %r1066, %r2;
	// inline asm
	ld.u32 	%r1069, [%rd16+8];
	ld.u32 	%r1070, [%rd16+4];
	// inline asm
	prmt.b32 %r9678, %r1069, %r1070, %r2;
	// inline asm
	ld.u32 	%r1073, [%rd16+4];
	ld.u32 	%r1074, [%rd16];
	// inline asm
	prmt.b32 %r9679, %r1073, %r1074, %r2;
	// inline asm
	ld.u32 	%r1077, [%rd16];
	ld.u32 	%r1078, [%rd15+12];
	// inline asm
	prmt.b32 %r9680, %r1077, %r1078, %r2;
	// inline asm
	ld.u32 	%r1081, [%rd15+12];
	ld.u32 	%r1082, [%rd15+8];
	// inline asm
	prmt.b32 %r9673, %r1081, %r1082, %r2;
	// inline asm
	ld.u32 	%r1085, [%rd15+8];
	ld.u32 	%r1086, [%rd15+4];
	// inline asm
	prmt.b32 %r9674, %r1085, %r1086, %r2;
	// inline asm
	ld.u32 	%r1089, [%rd15+4];
	ld.u32 	%r1090, [%rd15];
	// inline asm
	prmt.b32 %r9675, %r1089, %r1090, %r2;
	// inline asm
	ld.u32 	%r1093, [%rd15];
	ld.u32 	%r1094, [%rd14+12];
	// inline asm
	prmt.b32 %r9676, %r1093, %r1094, %r2;
	// inline asm
	ld.u32 	%r1097, [%rd14+12];
	ld.u32 	%r1098, [%rd14+8];
	// inline asm
	prmt.b32 %r1096, %r1097, %r1098, %r2;
	// inline asm
	st.u32 	[%rd21+12], %r1096;
	ld.u32 	%r1101, [%rd14+8];
	ld.u32 	%r1102, [%rd14+4];
	// inline asm
	prmt.b32 %r1100, %r1101, %r1102, %r2;
	// inline asm
	st.u32 	[%rd21+8], %r1100;
	ld.u32 	%r1105, [%rd14+4];
	ld.u32 	%r1106, [%rd14];
	// inline asm
	prmt.b32 %r1104, %r1105, %r1106, %r2;
	// inline asm
	st.u32 	[%rd21+4], %r1104;
	ld.u32 	%r1109, [%rd14];
	// inline asm
	prmt.b32 %r1108, %r1109, %r9672, %r2;
	// inline asm
	st.u32 	[%rd21], %r1108;
	st.u32 	[%rd20+12], %r9672;
	st.u32 	[%rd20+8], %r9672;
	st.u32 	[%rd20+4], %r9672;
	st.u32 	[%rd20], %r9672;
	st.u32 	[%rd19+12], %r9672;
	st.u32 	[%rd19+8], %r9672;
	st.u32 	[%rd19+4], %r9672;
	st.u32 	[%rd19], %r9672;
	st.u32 	[%rd18+12], %r9672;
	st.u32 	[%rd18+8], %r9672;
	st.u32 	[%rd18+4], %r9672;
	st.u32 	[%rd18], %r9672;
	st.u32 	[%rd17+12], %r9672;
	st.u32 	[%rd17+8], %r9672;
	st.u32 	[%rd17+4], %r9672;
	st.u32 	[%rd17], %r9672;
	st.u32 	[%rd16+12], %r9672;
	st.u32 	[%rd16+8], %r9672;
	st.u32 	[%rd16+4], %r9672;
	st.u32 	[%rd16], %r9672;
	st.u32 	[%rd15+12], %r9672;
	st.u32 	[%rd15+8], %r9672;
	st.u32 	[%rd15+4], %r9672;
	st.u32 	[%rd15], %r9672;
	st.u32 	[%rd14+12], %r9672;
	st.u32 	[%rd14+8], %r9672;
	mov.u64 	%rd26, 0;
	st.u32 	[%rd14+4], %rd26;
	st.u32 	[%rd14], %rd26;
	mov.u32 	%r9701, %r9672;
	mov.u32 	%r9702, %r9672;
	mov.u32 	%r9703, %r9672;
	bra.uni 	BB1_89;

BB1_97:
	setp.eq.s32	%p92, %r1, 2;
	@%p92 bra 	BB1_167;
	bra.uni 	BB1_98;

BB1_167:
	ld.u32 	%r9204, [%rd21+4];
	ld.u32 	%r9205, [%rd21];
	// inline asm
	prmt.b32 %r9203, %r9204, %r9205, %r2;
	// inline asm
	st.u32 	[%rd21+12], %r9203;
	ld.u32 	%r9208, [%rd21];
	ld.u32 	%r9209, [%rd20+12];
	// inline asm
	prmt.b32 %r9207, %r9208, %r9209, %r2;
	// inline asm
	st.u32 	[%rd21+8], %r9207;
	ld.u32 	%r9212, [%rd20+12];
	ld.u32 	%r9213, [%rd20+8];
	// inline asm
	prmt.b32 %r9211, %r9212, %r9213, %r2;
	// inline asm
	st.u32 	[%rd21+4], %r9211;
	ld.u32 	%r9216, [%rd20+8];
	ld.u32 	%r9217, [%rd20+4];
	// inline asm
	prmt.b32 %r9215, %r9216, %r9217, %r2;
	// inline asm
	st.u32 	[%rd21], %r9215;
	ld.u32 	%r9220, [%rd20+4];
	ld.u32 	%r9221, [%rd20];
	// inline asm
	prmt.b32 %r9219, %r9220, %r9221, %r2;
	// inline asm
	st.u32 	[%rd20+12], %r9219;
	ld.u32 	%r9224, [%rd20];
	ld.u32 	%r9225, [%rd19+12];
	// inline asm
	prmt.b32 %r9223, %r9224, %r9225, %r2;
	// inline asm
	st.u32 	[%rd20+8], %r9223;
	ld.u32 	%r9228, [%rd19+12];
	ld.u32 	%r9229, [%rd19+8];
	// inline asm
	prmt.b32 %r9227, %r9228, %r9229, %r2;
	// inline asm
	st.u32 	[%rd20+4], %r9227;
	ld.u32 	%r9232, [%rd19+8];
	ld.u32 	%r9233, [%rd19+4];
	// inline asm
	prmt.b32 %r9231, %r9232, %r9233, %r2;
	// inline asm
	st.u32 	[%rd20], %r9231;
	ld.u32 	%r9236, [%rd19+4];
	ld.u32 	%r9237, [%rd19];
	// inline asm
	prmt.b32 %r9235, %r9236, %r9237, %r2;
	// inline asm
	st.u32 	[%rd19+12], %r9235;
	ld.u32 	%r9240, [%rd19];
	ld.u32 	%r9241, [%rd18+12];
	// inline asm
	prmt.b32 %r9239, %r9240, %r9241, %r2;
	// inline asm
	st.u32 	[%rd19+8], %r9239;
	ld.u32 	%r9244, [%rd18+12];
	ld.u32 	%r9245, [%rd18+8];
	// inline asm
	prmt.b32 %r9243, %r9244, %r9245, %r2;
	// inline asm
	st.u32 	[%rd19+4], %r9243;
	ld.u32 	%r9248, [%rd18+8];
	ld.u32 	%r9249, [%rd18+4];
	// inline asm
	prmt.b32 %r9247, %r9248, %r9249, %r2;
	// inline asm
	st.u32 	[%rd19], %r9247;
	ld.u32 	%r9252, [%rd18+4];
	ld.u32 	%r9253, [%rd18];
	// inline asm
	prmt.b32 %r9251, %r9252, %r9253, %r2;
	// inline asm
	st.u32 	[%rd18+12], %r9251;
	ld.u32 	%r9256, [%rd18];
	ld.u32 	%r9257, [%rd17+12];
	// inline asm
	prmt.b32 %r9255, %r9256, %r9257, %r2;
	// inline asm
	st.u32 	[%rd18+8], %r9255;
	ld.u32 	%r9260, [%rd17+12];
	ld.u32 	%r9261, [%rd17+8];
	// inline asm
	prmt.b32 %r9259, %r9260, %r9261, %r2;
	// inline asm
	st.u32 	[%rd18+4], %r9259;
	ld.u32 	%r9264, [%rd17+8];
	ld.u32 	%r9265, [%rd17+4];
	// inline asm
	prmt.b32 %r9263, %r9264, %r9265, %r2;
	// inline asm
	st.u32 	[%rd18], %r9263;
	ld.u32 	%r9268, [%rd17+4];
	ld.u32 	%r9269, [%rd17];
	// inline asm
	prmt.b32 %r9267, %r9268, %r9269, %r2;
	// inline asm
	st.u32 	[%rd17+12], %r9267;
	ld.u32 	%r9272, [%rd17];
	ld.u32 	%r9273, [%rd16+12];
	// inline asm
	prmt.b32 %r9271, %r9272, %r9273, %r2;
	// inline asm
	st.u32 	[%rd17+8], %r9271;
	ld.u32 	%r9276, [%rd16+12];
	ld.u32 	%r9277, [%rd16+8];
	// inline asm
	prmt.b32 %r9275, %r9276, %r9277, %r2;
	// inline asm
	st.u32 	[%rd17+4], %r9275;
	ld.u32 	%r9280, [%rd16+8];
	ld.u32 	%r9281, [%rd16+4];
	// inline asm
	prmt.b32 %r9279, %r9280, %r9281, %r2;
	// inline asm
	st.u32 	[%rd17], %r9279;
	ld.u32 	%r9284, [%rd16+4];
	ld.u32 	%r9285, [%rd16];
	// inline asm
	prmt.b32 %r9283, %r9284, %r9285, %r2;
	// inline asm
	st.u32 	[%rd16+12], %r9283;
	ld.u32 	%r9288, [%rd16];
	ld.u32 	%r9289, [%rd15+12];
	// inline asm
	prmt.b32 %r9287, %r9288, %r9289, %r2;
	// inline asm
	st.u32 	[%rd16+8], %r9287;
	ld.u32 	%r9292, [%rd15+12];
	ld.u32 	%r9293, [%rd15+8];
	// inline asm
	prmt.b32 %r9291, %r9292, %r9293, %r2;
	// inline asm
	st.u32 	[%rd16+4], %r9291;
	ld.u32 	%r9296, [%rd15+8];
	ld.u32 	%r9297, [%rd15+4];
	// inline asm
	prmt.b32 %r9295, %r9296, %r9297, %r2;
	// inline asm
	st.u32 	[%rd16], %r9295;
	ld.u32 	%r9300, [%rd15+4];
	ld.u32 	%r9301, [%rd15];
	// inline asm
	prmt.b32 %r9299, %r9300, %r9301, %r2;
	// inline asm
	st.u32 	[%rd15+12], %r9299;
	ld.u32 	%r9304, [%rd15];
	ld.u32 	%r9305, [%rd14+12];
	// inline asm
	prmt.b32 %r9303, %r9304, %r9305, %r2;
	// inline asm
	st.u32 	[%rd15+8], %r9303;
	ld.u32 	%r9308, [%rd14+12];
	ld.u32 	%r9309, [%rd14+8];
	// inline asm
	prmt.b32 %r9307, %r9308, %r9309, %r2;
	// inline asm
	st.u32 	[%rd15+4], %r9307;
	ld.u32 	%r9312, [%rd14+8];
	ld.u32 	%r9313, [%rd14+4];
	// inline asm
	prmt.b32 %r9311, %r9312, %r9313, %r2;
	// inline asm
	st.u32 	[%rd15], %r9311;
	ld.u32 	%r9316, [%rd14+4];
	ld.u32 	%r9317, [%rd14];
	// inline asm
	prmt.b32 %r9315, %r9316, %r9317, %r2;
	// inline asm
	st.u32 	[%rd14+12], %r9315;
	ld.u32 	%r9320, [%rd14];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r9319, %r9320, %r9705, %r2;
	// inline asm
	st.u32 	[%rd14+8], %r9319;
	mov.u64 	%rd2946, 0;
	st.u32 	[%rd14+4], %rd2946;
	st.u32 	[%rd14], %rd2946;
	bra.uni 	BB1_170;

BB1_8:
	setp.eq.s32	%p45, %r1, 2;
	@%p45 bra 	BB1_85;
	bra.uni 	BB1_9;

BB1_85:
	ld.u32 	%r4843, [%rd21+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9674, %r9672, %r4843, %r2;
	// inline asm
	ld.u32 	%r4846, [%rd21+12];
	ld.u32 	%r4847, [%rd21+8];
	// inline asm
	prmt.b32 %r9675, %r4846, %r4847, %r2;
	// inline asm
	ld.u32 	%r4850, [%rd21+8];
	ld.u32 	%r4851, [%rd21+4];
	// inline asm
	prmt.b32 %r9676, %r4850, %r4851, %r2;
	// inline asm
	ld.u32 	%r4854, [%rd21+4];
	ld.u32 	%r4855, [%rd21];
	// inline asm
	prmt.b32 %r4853, %r4854, %r4855, %r2;
	// inline asm
	st.u32 	[%rd21+12], %r4853;
	ld.u32 	%r4858, [%rd21];
	ld.u32 	%r4859, [%rd20+12];
	// inline asm
	prmt.b32 %r4857, %r4858, %r4859, %r2;
	// inline asm
	st.u32 	[%rd21+8], %r4857;
	ld.u32 	%r4862, [%rd20+12];
	ld.u32 	%r4863, [%rd20+8];
	// inline asm
	prmt.b32 %r4861, %r4862, %r4863, %r2;
	// inline asm
	st.u32 	[%rd21+4], %r4861;
	ld.u32 	%r4866, [%rd20+8];
	ld.u32 	%r4867, [%rd20+4];
	// inline asm
	prmt.b32 %r4865, %r4866, %r4867, %r2;
	// inline asm
	st.u32 	[%rd21], %r4865;
	ld.u32 	%r4870, [%rd20+4];
	ld.u32 	%r4871, [%rd20];
	// inline asm
	prmt.b32 %r4869, %r4870, %r4871, %r2;
	// inline asm
	st.u32 	[%rd20+12], %r4869;
	ld.u32 	%r4874, [%rd20];
	ld.u32 	%r4875, [%rd19+12];
	// inline asm
	prmt.b32 %r4873, %r4874, %r4875, %r2;
	// inline asm
	st.u32 	[%rd20+8], %r4873;
	ld.u32 	%r4878, [%rd19+12];
	ld.u32 	%r4879, [%rd19+8];
	// inline asm
	prmt.b32 %r4877, %r4878, %r4879, %r2;
	// inline asm
	st.u32 	[%rd20+4], %r4877;
	ld.u32 	%r4882, [%rd19+8];
	ld.u32 	%r4883, [%rd19+4];
	// inline asm
	prmt.b32 %r4881, %r4882, %r4883, %r2;
	// inline asm
	st.u32 	[%rd20], %r4881;
	ld.u32 	%r4886, [%rd19+4];
	ld.u32 	%r4887, [%rd19];
	// inline asm
	prmt.b32 %r4885, %r4886, %r4887, %r2;
	// inline asm
	st.u32 	[%rd19+12], %r4885;
	ld.u32 	%r4890, [%rd19];
	ld.u32 	%r4891, [%rd18+12];
	// inline asm
	prmt.b32 %r4889, %r4890, %r4891, %r2;
	// inline asm
	st.u32 	[%rd19+8], %r4889;
	ld.u32 	%r4894, [%rd18+12];
	ld.u32 	%r4895, [%rd18+8];
	// inline asm
	prmt.b32 %r4893, %r4894, %r4895, %r2;
	// inline asm
	st.u32 	[%rd19+4], %r4893;
	ld.u32 	%r4898, [%rd18+8];
	ld.u32 	%r4899, [%rd18+4];
	// inline asm
	prmt.b32 %r4897, %r4898, %r4899, %r2;
	// inline asm
	st.u32 	[%rd19], %r4897;
	ld.u32 	%r4902, [%rd18+4];
	ld.u32 	%r4903, [%rd18];
	// inline asm
	prmt.b32 %r4901, %r4902, %r4903, %r2;
	// inline asm
	st.u32 	[%rd18+12], %r4901;
	ld.u32 	%r4906, [%rd18];
	ld.u32 	%r4907, [%rd17+12];
	// inline asm
	prmt.b32 %r4905, %r4906, %r4907, %r2;
	// inline asm
	st.u32 	[%rd18+8], %r4905;
	ld.u32 	%r4910, [%rd17+12];
	ld.u32 	%r4911, [%rd17+8];
	// inline asm
	prmt.b32 %r4909, %r4910, %r4911, %r2;
	// inline asm
	st.u32 	[%rd18+4], %r4909;
	ld.u32 	%r4914, [%rd17+8];
	ld.u32 	%r4915, [%rd17+4];
	// inline asm
	prmt.b32 %r4913, %r4914, %r4915, %r2;
	// inline asm
	st.u32 	[%rd18], %r4913;
	ld.u32 	%r4918, [%rd17+4];
	ld.u32 	%r4919, [%rd17];
	// inline asm
	prmt.b32 %r4917, %r4918, %r4919, %r2;
	// inline asm
	st.u32 	[%rd17+12], %r4917;
	ld.u32 	%r4922, [%rd17];
	ld.u32 	%r4923, [%rd16+12];
	// inline asm
	prmt.b32 %r4921, %r4922, %r4923, %r2;
	// inline asm
	st.u32 	[%rd17+8], %r4921;
	ld.u32 	%r4926, [%rd16+12];
	ld.u32 	%r4927, [%rd16+8];
	// inline asm
	prmt.b32 %r4925, %r4926, %r4927, %r2;
	// inline asm
	st.u32 	[%rd17+4], %r4925;
	ld.u32 	%r4930, [%rd16+8];
	ld.u32 	%r4931, [%rd16+4];
	// inline asm
	prmt.b32 %r4929, %r4930, %r4931, %r2;
	// inline asm
	st.u32 	[%rd17], %r4929;
	ld.u32 	%r4934, [%rd16+4];
	ld.u32 	%r4935, [%rd16];
	// inline asm
	prmt.b32 %r4933, %r4934, %r4935, %r2;
	// inline asm
	st.u32 	[%rd16+12], %r4933;
	ld.u32 	%r4938, [%rd16];
	ld.u32 	%r4939, [%rd15+12];
	// inline asm
	prmt.b32 %r4937, %r4938, %r4939, %r2;
	// inline asm
	st.u32 	[%rd16+8], %r4937;
	ld.u32 	%r4942, [%rd15+12];
	ld.u32 	%r4943, [%rd15+8];
	// inline asm
	prmt.b32 %r4941, %r4942, %r4943, %r2;
	// inline asm
	st.u32 	[%rd16+4], %r4941;
	ld.u32 	%r4946, [%rd15+8];
	ld.u32 	%r4947, [%rd15+4];
	// inline asm
	prmt.b32 %r4945, %r4946, %r4947, %r2;
	// inline asm
	st.u32 	[%rd16], %r4945;
	ld.u32 	%r4950, [%rd15+4];
	ld.u32 	%r4951, [%rd15];
	// inline asm
	prmt.b32 %r4949, %r4950, %r4951, %r2;
	// inline asm
	st.u32 	[%rd15+12], %r4949;
	ld.u32 	%r4954, [%rd15];
	ld.u32 	%r4955, [%rd14+12];
	// inline asm
	prmt.b32 %r4953, %r4954, %r4955, %r2;
	// inline asm
	st.u32 	[%rd15+8], %r4953;
	ld.u32 	%r4958, [%rd14+12];
	ld.u32 	%r4959, [%rd14+8];
	// inline asm
	prmt.b32 %r4957, %r4958, %r4959, %r2;
	// inline asm
	st.u32 	[%rd15+4], %r4957;
	ld.u32 	%r4962, [%rd14+8];
	ld.u32 	%r4963, [%rd14+4];
	// inline asm
	prmt.b32 %r4961, %r4962, %r4963, %r2;
	// inline asm
	st.u32 	[%rd15], %r4961;
	ld.u32 	%r4966, [%rd14+4];
	ld.u32 	%r4967, [%rd14];
	// inline asm
	prmt.b32 %r4965, %r4966, %r4967, %r2;
	// inline asm
	st.u32 	[%rd14+12], %r4965;
	ld.u32 	%r4970, [%rd14];
	// inline asm
	prmt.b32 %r4969, %r4970, %r9672, %r2;
	// inline asm
	st.u32 	[%rd14+8], %r4969;
	mov.u64 	%rd52, 0;
	st.u32 	[%rd14+4], %rd52;
	st.u32 	[%rd14], %rd52;
	mov.u32 	%r9673, %r9672;
	bra.uni 	BB1_11;

BB1_128:
	setp.eq.s32	%p69, %r1, 18;
	@%p69 bra 	BB1_159;
	bra.uni 	BB1_129;

BB1_159:
	ld.u32 	%r7812, [%rd17+4];
	ld.u32 	%r7813, [%rd17];
	// inline asm
	prmt.b32 %r7811, %r7812, %r7813, %r2;
	// inline asm
	st.u32 	[%rd21+12], %r7811;
	ld.u32 	%r7816, [%rd17];
	ld.u32 	%r7817, [%rd16+12];
	// inline asm
	prmt.b32 %r7815, %r7816, %r7817, %r2;
	// inline asm
	st.u32 	[%rd21+8], %r7815;
	ld.u32 	%r7820, [%rd16+12];
	ld.u32 	%r7821, [%rd16+8];
	// inline asm
	prmt.b32 %r7819, %r7820, %r7821, %r2;
	// inline asm
	st.u32 	[%rd21+4], %r7819;
	ld.u32 	%r7824, [%rd16+8];
	ld.u32 	%r7825, [%rd16+4];
	// inline asm
	prmt.b32 %r7823, %r7824, %r7825, %r2;
	// inline asm
	st.u32 	[%rd21], %r7823;
	ld.u32 	%r7828, [%rd16+4];
	ld.u32 	%r7829, [%rd16];
	// inline asm
	prmt.b32 %r7827, %r7828, %r7829, %r2;
	// inline asm
	st.u32 	[%rd20+12], %r7827;
	ld.u32 	%r7832, [%rd16];
	ld.u32 	%r7833, [%rd15+12];
	// inline asm
	prmt.b32 %r7831, %r7832, %r7833, %r2;
	// inline asm
	st.u32 	[%rd20+8], %r7831;
	ld.u32 	%r7836, [%rd15+12];
	ld.u32 	%r7837, [%rd15+8];
	// inline asm
	prmt.b32 %r7835, %r7836, %r7837, %r2;
	// inline asm
	st.u32 	[%rd20+4], %r7835;
	ld.u32 	%r7840, [%rd15+8];
	ld.u32 	%r7841, [%rd15+4];
	// inline asm
	prmt.b32 %r7839, %r7840, %r7841, %r2;
	// inline asm
	st.u32 	[%rd20], %r7839;
	ld.u32 	%r7844, [%rd15+4];
	ld.u32 	%r7845, [%rd15];
	// inline asm
	prmt.b32 %r7843, %r7844, %r7845, %r2;
	// inline asm
	st.u32 	[%rd19+12], %r7843;
	ld.u32 	%r7848, [%rd15];
	ld.u32 	%r7849, [%rd14+12];
	// inline asm
	prmt.b32 %r7847, %r7848, %r7849, %r2;
	// inline asm
	st.u32 	[%rd19+8], %r7847;
	ld.u32 	%r7852, [%rd14+12];
	ld.u32 	%r7853, [%rd14+8];
	// inline asm
	prmt.b32 %r7851, %r7852, %r7853, %r2;
	// inline asm
	st.u32 	[%rd19+4], %r7851;
	ld.u32 	%r7856, [%rd14+8];
	ld.u32 	%r7857, [%rd14+4];
	// inline asm
	prmt.b32 %r7855, %r7856, %r7857, %r2;
	// inline asm
	st.u32 	[%rd19], %r7855;
	ld.u32 	%r7860, [%rd14+4];
	ld.u32 	%r7861, [%rd14];
	// inline asm
	prmt.b32 %r7859, %r7860, %r7861, %r2;
	// inline asm
	st.u32 	[%rd18+12], %r7859;
	ld.u32 	%r7864, [%rd14];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r7863, %r7864, %r9705, %r2;
	// inline asm
	st.u32 	[%rd18+8], %r7863;
	st.u32 	[%rd18+4], %r9705;
	st.u32 	[%rd18], %r9705;
	st.u32 	[%rd17+12], %r9705;
	st.u32 	[%rd17+8], %r9705;
	st.u32 	[%rd17+4], %r9705;
	st.u32 	[%rd17], %r9705;
	st.u32 	[%rd16+12], %r9705;
	st.u32 	[%rd16+8], %r9705;
	st.u32 	[%rd16+4], %r9705;
	st.u32 	[%rd16], %r9705;
	st.u32 	[%rd15+12], %r9705;
	st.u32 	[%rd15+8], %r9705;
	st.u32 	[%rd15+4], %r9705;
	st.u32 	[%rd15], %r9705;
	st.u32 	[%rd14+12], %r9705;
	st.u32 	[%rd14+8], %r9705;
	mov.u64 	%rd2930, 0;
	st.u32 	[%rd14+4], %rd2930;
	st.u32 	[%rd14], %rd2930;
	bra.uni 	BB1_170;

BB1_40:
	setp.eq.s32	%p22, %r1, 18;
	@%p22 bra 	BB1_71;
	bra.uni 	BB1_41;

BB1_71:
	ld.u32 	%r2387, [%rd21+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9690, %r9672, %r2387, %r2;
	// inline asm
	ld.u32 	%r2390, [%rd21+12];
	ld.u32 	%r2391, [%rd21+8];
	// inline asm
	prmt.b32 %r9691, %r2390, %r2391, %r2;
	// inline asm
	ld.u32 	%r2394, [%rd21+8];
	ld.u32 	%r2395, [%rd21+4];
	// inline asm
	prmt.b32 %r9692, %r2394, %r2395, %r2;
	// inline asm
	ld.u32 	%r2398, [%rd21+4];
	ld.u32 	%r2399, [%rd21];
	// inline asm
	prmt.b32 %r9685, %r2398, %r2399, %r2;
	// inline asm
	ld.u32 	%r2402, [%rd21];
	ld.u32 	%r2403, [%rd20+12];
	// inline asm
	prmt.b32 %r9686, %r2402, %r2403, %r2;
	// inline asm
	ld.u32 	%r2406, [%rd20+12];
	ld.u32 	%r2407, [%rd20+8];
	// inline asm
	prmt.b32 %r9687, %r2406, %r2407, %r2;
	// inline asm
	ld.u32 	%r2410, [%rd20+8];
	ld.u32 	%r2411, [%rd20+4];
	// inline asm
	prmt.b32 %r9688, %r2410, %r2411, %r2;
	// inline asm
	ld.u32 	%r2414, [%rd20+4];
	ld.u32 	%r2415, [%rd20];
	// inline asm
	prmt.b32 %r9681, %r2414, %r2415, %r2;
	// inline asm
	ld.u32 	%r2418, [%rd20];
	ld.u32 	%r2419, [%rd19+12];
	// inline asm
	prmt.b32 %r9682, %r2418, %r2419, %r2;
	// inline asm
	ld.u32 	%r2422, [%rd19+12];
	ld.u32 	%r2423, [%rd19+8];
	// inline asm
	prmt.b32 %r9683, %r2422, %r2423, %r2;
	// inline asm
	ld.u32 	%r2426, [%rd19+8];
	ld.u32 	%r2427, [%rd19+4];
	// inline asm
	prmt.b32 %r9684, %r2426, %r2427, %r2;
	// inline asm
	ld.u32 	%r2430, [%rd19+4];
	ld.u32 	%r2431, [%rd19];
	// inline asm
	prmt.b32 %r9677, %r2430, %r2431, %r2;
	// inline asm
	ld.u32 	%r2434, [%rd19];
	ld.u32 	%r2435, [%rd18+12];
	// inline asm
	prmt.b32 %r9678, %r2434, %r2435, %r2;
	// inline asm
	ld.u32 	%r2438, [%rd18+12];
	ld.u32 	%r2439, [%rd18+8];
	// inline asm
	prmt.b32 %r9679, %r2438, %r2439, %r2;
	// inline asm
	ld.u32 	%r2442, [%rd18+8];
	ld.u32 	%r2443, [%rd18+4];
	// inline asm
	prmt.b32 %r9680, %r2442, %r2443, %r2;
	// inline asm
	ld.u32 	%r2446, [%rd18+4];
	ld.u32 	%r2447, [%rd18];
	// inline asm
	prmt.b32 %r9673, %r2446, %r2447, %r2;
	// inline asm
	ld.u32 	%r2450, [%rd18];
	ld.u32 	%r2451, [%rd17+12];
	// inline asm
	prmt.b32 %r9674, %r2450, %r2451, %r2;
	// inline asm
	ld.u32 	%r2454, [%rd17+12];
	ld.u32 	%r2455, [%rd17+8];
	// inline asm
	prmt.b32 %r9675, %r2454, %r2455, %r2;
	// inline asm
	ld.u32 	%r2458, [%rd17+8];
	ld.u32 	%r2459, [%rd17+4];
	// inline asm
	prmt.b32 %r9676, %r2458, %r2459, %r2;
	// inline asm
	ld.u32 	%r2462, [%rd17+4];
	ld.u32 	%r2463, [%rd17];
	// inline asm
	prmt.b32 %r2461, %r2462, %r2463, %r2;
	// inline asm
	st.u32 	[%rd21+12], %r2461;
	ld.u32 	%r2466, [%rd17];
	ld.u32 	%r2467, [%rd16+12];
	// inline asm
	prmt.b32 %r2465, %r2466, %r2467, %r2;
	// inline asm
	st.u32 	[%rd21+8], %r2465;
	ld.u32 	%r2470, [%rd16+12];
	ld.u32 	%r2471, [%rd16+8];
	// inline asm
	prmt.b32 %r2469, %r2470, %r2471, %r2;
	// inline asm
	st.u32 	[%rd21+4], %r2469;
	ld.u32 	%r2474, [%rd16+8];
	ld.u32 	%r2475, [%rd16+4];
	// inline asm
	prmt.b32 %r2473, %r2474, %r2475, %r2;
	// inline asm
	st.u32 	[%rd21], %r2473;
	ld.u32 	%r2478, [%rd16+4];
	ld.u32 	%r2479, [%rd16];
	// inline asm
	prmt.b32 %r2477, %r2478, %r2479, %r2;
	// inline asm
	st.u32 	[%rd20+12], %r2477;
	ld.u32 	%r2482, [%rd16];
	ld.u32 	%r2483, [%rd15+12];
	// inline asm
	prmt.b32 %r2481, %r2482, %r2483, %r2;
	// inline asm
	st.u32 	[%rd20+8], %r2481;
	ld.u32 	%r2486, [%rd15+12];
	ld.u32 	%r2487, [%rd15+8];
	// inline asm
	prmt.b32 %r2485, %r2486, %r2487, %r2;
	// inline asm
	st.u32 	[%rd20+4], %r2485;
	ld.u32 	%r2490, [%rd15+8];
	ld.u32 	%r2491, [%rd15+4];
	// inline asm
	prmt.b32 %r2489, %r2490, %r2491, %r2;
	// inline asm
	st.u32 	[%rd20], %r2489;
	ld.u32 	%r2494, [%rd15+4];
	ld.u32 	%r2495, [%rd15];
	// inline asm
	prmt.b32 %r2493, %r2494, %r2495, %r2;
	// inline asm
	st.u32 	[%rd19+12], %r2493;
	ld.u32 	%r2498, [%rd15];
	ld.u32 	%r2499, [%rd14+12];
	// inline asm
	prmt.b32 %r2497, %r2498, %r2499, %r2;
	// inline asm
	st.u32 	[%rd19+8], %r2497;
	ld.u32 	%r2502, [%rd14+12];
	ld.u32 	%r2503, [%rd14+8];
	// inline asm
	prmt.b32 %r2501, %r2502, %r2503, %r2;
	// inline asm
	st.u32 	[%rd19+4], %r2501;
	ld.u32 	%r2506, [%rd14+8];
	ld.u32 	%r2507, [%rd14+4];
	// inline asm
	prmt.b32 %r2505, %r2506, %r2507, %r2;
	// inline asm
	st.u32 	[%rd19], %r2505;
	ld.u32 	%r2510, [%rd14+4];
	ld.u32 	%r2511, [%rd14];
	// inline asm
	prmt.b32 %r2509, %r2510, %r2511, %r2;
	// inline asm
	st.u32 	[%rd18+12], %r2509;
	ld.u32 	%r2514, [%rd14];
	// inline asm
	prmt.b32 %r2513, %r2514, %r9672, %r2;
	// inline asm
	st.u32 	[%rd18+8], %r2513;
	st.u32 	[%rd18+4], %r9672;
	st.u32 	[%rd18], %r9672;
	st.u32 	[%rd17+12], %r9672;
	st.u32 	[%rd17+8], %r9672;
	st.u32 	[%rd17+4], %r9672;
	st.u32 	[%rd17], %r9672;
	st.u32 	[%rd16+12], %r9672;
	st.u32 	[%rd16+8], %r9672;
	st.u32 	[%rd16+4], %r9672;
	st.u32 	[%rd16], %r9672;
	st.u32 	[%rd15+12], %r9672;
	st.u32 	[%rd15+8], %r9672;
	st.u32 	[%rd15+4], %r9672;
	st.u32 	[%rd15], %r9672;
	st.u32 	[%rd14+12], %r9672;
	st.u32 	[%rd14+8], %r9672;
	mov.u64 	%rd36, 0;
	st.u32 	[%rd14+4], %rd36;
	st.u32 	[%rd14], %rd36;
	mov.u32 	%r9689, %r9672;
	bra.uni 	BB1_82;

BB1_112:
	setp.eq.s32	%p81, %r1, 10;
	@%p81 bra 	BB1_163;
	bra.uni 	BB1_113;

BB1_163:
	ld.u32 	%r8380, [%rd19+4];
	ld.u32 	%r8381, [%rd19];
	// inline asm
	prmt.b32 %r8379, %r8380, %r8381, %r2;
	// inline asm
	st.u32 	[%rd21+12], %r8379;
	ld.u32 	%r8384, [%rd19];
	ld.u32 	%r8385, [%rd18+12];
	// inline asm
	prmt.b32 %r8383, %r8384, %r8385, %r2;
	// inline asm
	st.u32 	[%rd21+8], %r8383;
	ld.u32 	%r8388, [%rd18+12];
	ld.u32 	%r8389, [%rd18+8];
	// inline asm
	prmt.b32 %r8387, %r8388, %r8389, %r2;
	// inline asm
	st.u32 	[%rd21+4], %r8387;
	ld.u32 	%r8392, [%rd18+8];
	ld.u32 	%r8393, [%rd18+4];
	// inline asm
	prmt.b32 %r8391, %r8392, %r8393, %r2;
	// inline asm
	st.u32 	[%rd21], %r8391;
	ld.u32 	%r8396, [%rd18+4];
	ld.u32 	%r8397, [%rd18];
	// inline asm
	prmt.b32 %r8395, %r8396, %r8397, %r2;
	// inline asm
	st.u32 	[%rd20+12], %r8395;
	ld.u32 	%r8400, [%rd18];
	ld.u32 	%r8401, [%rd17+12];
	// inline asm
	prmt.b32 %r8399, %r8400, %r8401, %r2;
	// inline asm
	st.u32 	[%rd20+8], %r8399;
	ld.u32 	%r8404, [%rd17+12];
	ld.u32 	%r8405, [%rd17+8];
	// inline asm
	prmt.b32 %r8403, %r8404, %r8405, %r2;
	// inline asm
	st.u32 	[%rd20+4], %r8403;
	ld.u32 	%r8408, [%rd17+8];
	ld.u32 	%r8409, [%rd17+4];
	// inline asm
	prmt.b32 %r8407, %r8408, %r8409, %r2;
	// inline asm
	st.u32 	[%rd20], %r8407;
	ld.u32 	%r8412, [%rd17+4];
	ld.u32 	%r8413, [%rd17];
	// inline asm
	prmt.b32 %r8411, %r8412, %r8413, %r2;
	// inline asm
	st.u32 	[%rd19+12], %r8411;
	ld.u32 	%r8416, [%rd17];
	ld.u32 	%r8417, [%rd16+12];
	// inline asm
	prmt.b32 %r8415, %r8416, %r8417, %r2;
	// inline asm
	st.u32 	[%rd19+8], %r8415;
	ld.u32 	%r8420, [%rd16+12];
	ld.u32 	%r8421, [%rd16+8];
	// inline asm
	prmt.b32 %r8419, %r8420, %r8421, %r2;
	// inline asm
	st.u32 	[%rd19+4], %r8419;
	ld.u32 	%r8424, [%rd16+8];
	ld.u32 	%r8425, [%rd16+4];
	// inline asm
	prmt.b32 %r8423, %r8424, %r8425, %r2;
	// inline asm
	st.u32 	[%rd19], %r8423;
	ld.u32 	%r8428, [%rd16+4];
	ld.u32 	%r8429, [%rd16];
	// inline asm
	prmt.b32 %r8427, %r8428, %r8429, %r2;
	// inline asm
	st.u32 	[%rd18+12], %r8427;
	ld.u32 	%r8432, [%rd16];
	ld.u32 	%r8433, [%rd15+12];
	// inline asm
	prmt.b32 %r8431, %r8432, %r8433, %r2;
	// inline asm
	st.u32 	[%rd18+8], %r8431;
	ld.u32 	%r8436, [%rd15+12];
	ld.u32 	%r8437, [%rd15+8];
	// inline asm
	prmt.b32 %r8435, %r8436, %r8437, %r2;
	// inline asm
	st.u32 	[%rd18+4], %r8435;
	ld.u32 	%r8440, [%rd15+8];
	ld.u32 	%r8441, [%rd15+4];
	// inline asm
	prmt.b32 %r8439, %r8440, %r8441, %r2;
	// inline asm
	st.u32 	[%rd18], %r8439;
	ld.u32 	%r8444, [%rd15+4];
	ld.u32 	%r8445, [%rd15];
	// inline asm
	prmt.b32 %r8443, %r8444, %r8445, %r2;
	// inline asm
	st.u32 	[%rd17+12], %r8443;
	ld.u32 	%r8448, [%rd15];
	ld.u32 	%r8449, [%rd14+12];
	// inline asm
	prmt.b32 %r8447, %r8448, %r8449, %r2;
	// inline asm
	st.u32 	[%rd17+8], %r8447;
	ld.u32 	%r8452, [%rd14+12];
	ld.u32 	%r8453, [%rd14+8];
	// inline asm
	prmt.b32 %r8451, %r8452, %r8453, %r2;
	// inline asm
	st.u32 	[%rd17+4], %r8451;
	ld.u32 	%r8456, [%rd14+8];
	ld.u32 	%r8457, [%rd14+4];
	// inline asm
	prmt.b32 %r8455, %r8456, %r8457, %r2;
	// inline asm
	st.u32 	[%rd17], %r8455;
	ld.u32 	%r8460, [%rd14+4];
	ld.u32 	%r8461, [%rd14];
	// inline asm
	prmt.b32 %r8459, %r8460, %r8461, %r2;
	// inline asm
	st.u32 	[%rd16+12], %r8459;
	ld.u32 	%r8464, [%rd14];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r8463, %r8464, %r9705, %r2;
	// inline asm
	st.u32 	[%rd16+8], %r8463;
	st.u32 	[%rd16+4], %r9705;
	st.u32 	[%rd16], %r9705;
	st.u32 	[%rd15+12], %r9705;
	st.u32 	[%rd15+8], %r9705;
	st.u32 	[%rd15+4], %r9705;
	st.u32 	[%rd15], %r9705;
	st.u32 	[%rd14+12], %r9705;
	st.u32 	[%rd14+8], %r9705;
	mov.u64 	%rd2938, 0;
	st.u32 	[%rd14+4], %rd2938;
	st.u32 	[%rd14], %rd2938;
	bra.uni 	BB1_170;

BB1_24:
	setp.eq.s32	%p34, %r1, 10;
	@%p34 bra 	BB1_75;
	bra.uni 	BB1_25;

BB1_75:
	ld.u32 	%r3583, [%rd21+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9682, %r9672, %r3583, %r2;
	// inline asm
	ld.u32 	%r3586, [%rd21+12];
	ld.u32 	%r3587, [%rd21+8];
	// inline asm
	prmt.b32 %r9683, %r3586, %r3587, %r2;
	// inline asm
	ld.u32 	%r3590, [%rd21+8];
	ld.u32 	%r3591, [%rd21+4];
	// inline asm
	prmt.b32 %r9684, %r3590, %r3591, %r2;
	// inline asm
	ld.u32 	%r3594, [%rd21+4];
	ld.u32 	%r3595, [%rd21];
	// inline asm
	prmt.b32 %r9677, %r3594, %r3595, %r2;
	// inline asm
	ld.u32 	%r3598, [%rd21];
	ld.u32 	%r3599, [%rd20+12];
	// inline asm
	prmt.b32 %r9678, %r3598, %r3599, %r2;
	// inline asm
	ld.u32 	%r3602, [%rd20+12];
	ld.u32 	%r3603, [%rd20+8];
	// inline asm
	prmt.b32 %r9679, %r3602, %r3603, %r2;
	// inline asm
	ld.u32 	%r3606, [%rd20+8];
	ld.u32 	%r3607, [%rd20+4];
	// inline asm
	prmt.b32 %r9680, %r3606, %r3607, %r2;
	// inline asm
	ld.u32 	%r3610, [%rd20+4];
	ld.u32 	%r3611, [%rd20];
	// inline asm
	prmt.b32 %r9673, %r3610, %r3611, %r2;
	// inline asm
	ld.u32 	%r3614, [%rd20];
	ld.u32 	%r3615, [%rd19+12];
	// inline asm
	prmt.b32 %r9674, %r3614, %r3615, %r2;
	// inline asm
	ld.u32 	%r3618, [%rd19+12];
	ld.u32 	%r3619, [%rd19+8];
	// inline asm
	prmt.b32 %r9675, %r3618, %r3619, %r2;
	// inline asm
	ld.u32 	%r3622, [%rd19+8];
	ld.u32 	%r3623, [%rd19+4];
	// inline asm
	prmt.b32 %r9676, %r3622, %r3623, %r2;
	// inline asm
	ld.u32 	%r3626, [%rd19+4];
	ld.u32 	%r3627, [%rd19];
	// inline asm
	prmt.b32 %r3625, %r3626, %r3627, %r2;
	// inline asm
	st.u32 	[%rd21+12], %r3625;
	ld.u32 	%r3630, [%rd19];
	ld.u32 	%r3631, [%rd18+12];
	// inline asm
	prmt.b32 %r3629, %r3630, %r3631, %r2;
	// inline asm
	st.u32 	[%rd21+8], %r3629;
	ld.u32 	%r3634, [%rd18+12];
	ld.u32 	%r3635, [%rd18+8];
	// inline asm
	prmt.b32 %r3633, %r3634, %r3635, %r2;
	// inline asm
	st.u32 	[%rd21+4], %r3633;
	ld.u32 	%r3638, [%rd18+8];
	ld.u32 	%r3639, [%rd18+4];
	// inline asm
	prmt.b32 %r3637, %r3638, %r3639, %r2;
	// inline asm
	st.u32 	[%rd21], %r3637;
	ld.u32 	%r3642, [%rd18+4];
	ld.u32 	%r3643, [%rd18];
	// inline asm
	prmt.b32 %r3641, %r3642, %r3643, %r2;
	// inline asm
	st.u32 	[%rd20+12], %r3641;
	ld.u32 	%r3646, [%rd18];
	ld.u32 	%r3647, [%rd17+12];
	// inline asm
	prmt.b32 %r3645, %r3646, %r3647, %r2;
	// inline asm
	st.u32 	[%rd20+8], %r3645;
	ld.u32 	%r3650, [%rd17+12];
	ld.u32 	%r3651, [%rd17+8];
	// inline asm
	prmt.b32 %r3649, %r3650, %r3651, %r2;
	// inline asm
	st.u32 	[%rd20+4], %r3649;
	ld.u32 	%r3654, [%rd17+8];
	ld.u32 	%r3655, [%rd17+4];
	// inline asm
	prmt.b32 %r3653, %r3654, %r3655, %r2;
	// inline asm
	st.u32 	[%rd20], %r3653;
	ld.u32 	%r3658, [%rd17+4];
	ld.u32 	%r3659, [%rd17];
	// inline asm
	prmt.b32 %r3657, %r3658, %r3659, %r2;
	// inline asm
	st.u32 	[%rd19+12], %r3657;
	ld.u32 	%r3662, [%rd17];
	ld.u32 	%r3663, [%rd16+12];
	// inline asm
	prmt.b32 %r3661, %r3662, %r3663, %r2;
	// inline asm
	st.u32 	[%rd19+8], %r3661;
	ld.u32 	%r3666, [%rd16+12];
	ld.u32 	%r3667, [%rd16+8];
	// inline asm
	prmt.b32 %r3665, %r3666, %r3667, %r2;
	// inline asm
	st.u32 	[%rd19+4], %r3665;
	ld.u32 	%r3670, [%rd16+8];
	ld.u32 	%r3671, [%rd16+4];
	// inline asm
	prmt.b32 %r3669, %r3670, %r3671, %r2;
	// inline asm
	st.u32 	[%rd19], %r3669;
	ld.u32 	%r3674, [%rd16+4];
	ld.u32 	%r3675, [%rd16];
	// inline asm
	prmt.b32 %r3673, %r3674, %r3675, %r2;
	// inline asm
	st.u32 	[%rd18+12], %r3673;
	ld.u32 	%r3678, [%rd16];
	ld.u32 	%r3679, [%rd15+12];
	// inline asm
	prmt.b32 %r3677, %r3678, %r3679, %r2;
	// inline asm
	st.u32 	[%rd18+8], %r3677;
	ld.u32 	%r3682, [%rd15+12];
	ld.u32 	%r3683, [%rd15+8];
	// inline asm
	prmt.b32 %r3681, %r3682, %r3683, %r2;
	// inline asm
	st.u32 	[%rd18+4], %r3681;
	ld.u32 	%r3686, [%rd15+8];
	ld.u32 	%r3687, [%rd15+4];
	// inline asm
	prmt.b32 %r3685, %r3686, %r3687, %r2;
	// inline asm
	st.u32 	[%rd18], %r3685;
	ld.u32 	%r3690, [%rd15+4];
	ld.u32 	%r3691, [%rd15];
	// inline asm
	prmt.b32 %r3689, %r3690, %r3691, %r2;
	// inline asm
	st.u32 	[%rd17+12], %r3689;
	ld.u32 	%r3694, [%rd15];
	ld.u32 	%r3695, [%rd14+12];
	// inline asm
	prmt.b32 %r3693, %r3694, %r3695, %r2;
	// inline asm
	st.u32 	[%rd17+8], %r3693;
	ld.u32 	%r3698, [%rd14+12];
	ld.u32 	%r3699, [%rd14+8];
	// inline asm
	prmt.b32 %r3697, %r3698, %r3699, %r2;
	// inline asm
	st.u32 	[%rd17+4], %r3697;
	ld.u32 	%r3702, [%rd14+8];
	ld.u32 	%r3703, [%rd14+4];
	// inline asm
	prmt.b32 %r3701, %r3702, %r3703, %r2;
	// inline asm
	st.u32 	[%rd17], %r3701;
	ld.u32 	%r3706, [%rd14+4];
	ld.u32 	%r3707, [%rd14];
	// inline asm
	prmt.b32 %r3705, %r3706, %r3707, %r2;
	// inline asm
	st.u32 	[%rd16+12], %r3705;
	ld.u32 	%r3710, [%rd14];
	// inline asm
	prmt.b32 %r3709, %r3710, %r9672, %r2;
	// inline asm
	st.u32 	[%rd16+8], %r3709;
	st.u32 	[%rd16+4], %r9672;
	st.u32 	[%rd16], %r9672;
	st.u32 	[%rd15+12], %r9672;
	st.u32 	[%rd15+8], %r9672;
	st.u32 	[%rd15+4], %r9672;
	st.u32 	[%rd15], %r9672;
	st.u32 	[%rd14+12], %r9672;
	st.u32 	[%rd14+8], %r9672;
	mov.u64 	%rd44, 0;
	st.u32 	[%rd14+4], %rd44;
	st.u32 	[%rd14], %rd44;
	mov.u32 	%r9681, %r9672;
	bra.uni 	BB1_80;

BB1_143:
	setp.eq.s32	%p58, %r1, 26;
	@%p58 bra 	BB1_155;
	bra.uni 	BB1_144;

BB1_155:
	ld.u32 	%r7500, [%rd15+4];
	ld.u32 	%r7501, [%rd15];
	// inline asm
	prmt.b32 %r7499, %r7500, %r7501, %r2;
	// inline asm
	st.u32 	[%rd21+12], %r7499;
	ld.u32 	%r7504, [%rd15];
	ld.u32 	%r7505, [%rd14+12];
	// inline asm
	prmt.b32 %r7503, %r7504, %r7505, %r2;
	// inline asm
	st.u32 	[%rd21+8], %r7503;
	ld.u32 	%r7508, [%rd14+12];
	ld.u32 	%r7509, [%rd14+8];
	// inline asm
	prmt.b32 %r7507, %r7508, %r7509, %r2;
	// inline asm
	st.u32 	[%rd21+4], %r7507;
	ld.u32 	%r7512, [%rd14+8];
	ld.u32 	%r7513, [%rd14+4];
	// inline asm
	prmt.b32 %r7511, %r7512, %r7513, %r2;
	// inline asm
	st.u32 	[%rd21], %r7511;
	ld.u32 	%r7516, [%rd14+4];
	ld.u32 	%r7517, [%rd14];
	// inline asm
	prmt.b32 %r7515, %r7516, %r7517, %r2;
	// inline asm
	st.u32 	[%rd20+12], %r7515;
	ld.u32 	%r7520, [%rd14];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r7519, %r7520, %r9705, %r2;
	// inline asm
	st.u32 	[%rd20+8], %r7519;
	st.u32 	[%rd20+4], %r9705;
	st.u32 	[%rd20], %r9705;
	st.u32 	[%rd19+12], %r9705;
	st.u32 	[%rd19+8], %r9705;
	st.u32 	[%rd19+4], %r9705;
	st.u32 	[%rd19], %r9705;
	st.u32 	[%rd18+12], %r9705;
	st.u32 	[%rd18+8], %r9705;
	st.u32 	[%rd18+4], %r9705;
	st.u32 	[%rd18], %r9705;
	st.u32 	[%rd17+12], %r9705;
	st.u32 	[%rd17+8], %r9705;
	st.u32 	[%rd17+4], %r9705;
	st.u32 	[%rd17], %r9705;
	st.u32 	[%rd16+12], %r9705;
	st.u32 	[%rd16+8], %r9705;
	st.u32 	[%rd16+4], %r9705;
	st.u32 	[%rd16], %r9705;
	st.u32 	[%rd15+12], %r9705;
	st.u32 	[%rd15+8], %r9705;
	st.u32 	[%rd15+4], %r9705;
	st.u32 	[%rd15], %r9705;
	st.u32 	[%rd14+12], %r9705;
	st.u32 	[%rd14+8], %r9705;
	mov.u64 	%rd2922, 0;
	st.u32 	[%rd14+4], %rd2922;
	st.u32 	[%rd14], %rd2922;
	bra.uni 	BB1_170;

BB1_55:
	setp.eq.s32	%p11, %r1, 26;
	@%p11 bra 	BB1_67;
	bra.uni 	BB1_56;

BB1_67:
	ld.u32 	%r1255, [%rd21+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9698, %r9672, %r1255, %r2;
	// inline asm
	ld.u32 	%r1258, [%rd21+12];
	ld.u32 	%r1259, [%rd21+8];
	// inline asm
	prmt.b32 %r9699, %r1258, %r1259, %r2;
	// inline asm
	ld.u32 	%r1262, [%rd21+8];
	ld.u32 	%r1263, [%rd21+4];
	// inline asm
	prmt.b32 %r9700, %r1262, %r1263, %r2;
	// inline asm
	ld.u32 	%r1266, [%rd21+4];
	ld.u32 	%r1267, [%rd21];
	// inline asm
	prmt.b32 %r9693, %r1266, %r1267, %r2;
	// inline asm
	ld.u32 	%r1270, [%rd21];
	ld.u32 	%r1271, [%rd20+12];
	// inline asm
	prmt.b32 %r9694, %r1270, %r1271, %r2;
	// inline asm
	ld.u32 	%r1274, [%rd20+12];
	ld.u32 	%r1275, [%rd20+8];
	// inline asm
	prmt.b32 %r9695, %r1274, %r1275, %r2;
	// inline asm
	ld.u32 	%r1278, [%rd20+8];
	ld.u32 	%r1279, [%rd20+4];
	// inline asm
	prmt.b32 %r9696, %r1278, %r1279, %r2;
	// inline asm
	ld.u32 	%r1282, [%rd20+4];
	ld.u32 	%r1283, [%rd20];
	// inline asm
	prmt.b32 %r9689, %r1282, %r1283, %r2;
	// inline asm
	ld.u32 	%r1286, [%rd20];
	ld.u32 	%r1287, [%rd19+12];
	// inline asm
	prmt.b32 %r9690, %r1286, %r1287, %r2;
	// inline asm
	ld.u32 	%r1290, [%rd19+12];
	ld.u32 	%r1291, [%rd19+8];
	// inline asm
	prmt.b32 %r9691, %r1290, %r1291, %r2;
	// inline asm
	ld.u32 	%r1294, [%rd19+8];
	ld.u32 	%r1295, [%rd19+4];
	// inline asm
	prmt.b32 %r9692, %r1294, %r1295, %r2;
	// inline asm
	ld.u32 	%r1298, [%rd19+4];
	ld.u32 	%r1299, [%rd19];
	// inline asm
	prmt.b32 %r9685, %r1298, %r1299, %r2;
	// inline asm
	ld.u32 	%r1302, [%rd19];
	ld.u32 	%r1303, [%rd18+12];
	// inline asm
	prmt.b32 %r9686, %r1302, %r1303, %r2;
	// inline asm
	ld.u32 	%r1306, [%rd18+12];
	ld.u32 	%r1307, [%rd18+8];
	// inline asm
	prmt.b32 %r9687, %r1306, %r1307, %r2;
	// inline asm
	ld.u32 	%r1310, [%rd18+8];
	ld.u32 	%r1311, [%rd18+4];
	// inline asm
	prmt.b32 %r9688, %r1310, %r1311, %r2;
	// inline asm
	ld.u32 	%r1314, [%rd18+4];
	ld.u32 	%r1315, [%rd18];
	// inline asm
	prmt.b32 %r9681, %r1314, %r1315, %r2;
	// inline asm
	ld.u32 	%r1318, [%rd18];
	ld.u32 	%r1319, [%rd17+12];
	// inline asm
	prmt.b32 %r9682, %r1318, %r1319, %r2;
	// inline asm
	ld.u32 	%r1322, [%rd17+12];
	ld.u32 	%r1323, [%rd17+8];
	// inline asm
	prmt.b32 %r9683, %r1322, %r1323, %r2;
	// inline asm
	ld.u32 	%r1326, [%rd17+8];
	ld.u32 	%r1327, [%rd17+4];
	// inline asm
	prmt.b32 %r9684, %r1326, %r1327, %r2;
	// inline asm
	ld.u32 	%r1330, [%rd17+4];
	ld.u32 	%r1331, [%rd17];
	// inline asm
	prmt.b32 %r9677, %r1330, %r1331, %r2;
	// inline asm
	ld.u32 	%r1334, [%rd17];
	ld.u32 	%r1335, [%rd16+12];
	// inline asm
	prmt.b32 %r9678, %r1334, %r1335, %r2;
	// inline asm
	ld.u32 	%r1338, [%rd16+12];
	ld.u32 	%r1339, [%rd16+8];
	// inline asm
	prmt.b32 %r9679, %r1338, %r1339, %r2;
	// inline asm
	ld.u32 	%r1342, [%rd16+8];
	ld.u32 	%r1343, [%rd16+4];
	// inline asm
	prmt.b32 %r9680, %r1342, %r1343, %r2;
	// inline asm
	ld.u32 	%r1346, [%rd16+4];
	ld.u32 	%r1347, [%rd16];
	// inline asm
	prmt.b32 %r9673, %r1346, %r1347, %r2;
	// inline asm
	ld.u32 	%r1350, [%rd16];
	ld.u32 	%r1351, [%rd15+12];
	// inline asm
	prmt.b32 %r9674, %r1350, %r1351, %r2;
	// inline asm
	ld.u32 	%r1354, [%rd15+12];
	ld.u32 	%r1355, [%rd15+8];
	// inline asm
	prmt.b32 %r9675, %r1354, %r1355, %r2;
	// inline asm
	ld.u32 	%r1358, [%rd15+8];
	ld.u32 	%r1359, [%rd15+4];
	// inline asm
	prmt.b32 %r9676, %r1358, %r1359, %r2;
	// inline asm
	ld.u32 	%r1362, [%rd15+4];
	ld.u32 	%r1363, [%rd15];
	// inline asm
	prmt.b32 %r1361, %r1362, %r1363, %r2;
	// inline asm
	st.u32 	[%rd21+12], %r1361;
	ld.u32 	%r1366, [%rd15];
	ld.u32 	%r1367, [%rd14+12];
	// inline asm
	prmt.b32 %r1365, %r1366, %r1367, %r2;
	// inline asm
	st.u32 	[%rd21+8], %r1365;
	ld.u32 	%r1370, [%rd14+12];
	ld.u32 	%r1371, [%rd14+8];
	// inline asm
	prmt.b32 %r1369, %r1370, %r1371, %r2;
	// inline asm
	st.u32 	[%rd21+4], %r1369;
	ld.u32 	%r1374, [%rd14+8];
	ld.u32 	%r1375, [%rd14+4];
	// inline asm
	prmt.b32 %r1373, %r1374, %r1375, %r2;
	// inline asm
	st.u32 	[%rd21], %r1373;
	ld.u32 	%r1378, [%rd14+4];
	ld.u32 	%r1379, [%rd14];
	// inline asm
	prmt.b32 %r1377, %r1378, %r1379, %r2;
	// inline asm
	st.u32 	[%rd20+12], %r1377;
	ld.u32 	%r1382, [%rd14];
	// inline asm
	prmt.b32 %r1381, %r1382, %r9672, %r2;
	// inline asm
	st.u32 	[%rd20+8], %r1381;
	st.u32 	[%rd20+4], %r9672;
	st.u32 	[%rd20], %r9672;
	st.u32 	[%rd19+12], %r9672;
	st.u32 	[%rd19+8], %r9672;
	st.u32 	[%rd19+4], %r9672;
	st.u32 	[%rd19], %r9672;
	st.u32 	[%rd18+12], %r9672;
	st.u32 	[%rd18+8], %r9672;
	st.u32 	[%rd18+4], %r9672;
	st.u32 	[%rd18], %r9672;
	st.u32 	[%rd17+12], %r9672;
	st.u32 	[%rd17+8], %r9672;
	st.u32 	[%rd17+4], %r9672;
	st.u32 	[%rd17], %r9672;
	st.u32 	[%rd16+12], %r9672;
	st.u32 	[%rd16+8], %r9672;
	st.u32 	[%rd16+4], %r9672;
	st.u32 	[%rd16], %r9672;
	st.u32 	[%rd15+12], %r9672;
	st.u32 	[%rd15+8], %r9672;
	st.u32 	[%rd15+4], %r9672;
	st.u32 	[%rd15], %r9672;
	st.u32 	[%rd14+12], %r9672;
	st.u32 	[%rd14+8], %r9672;
	mov.u64 	%rd28, 0;
	st.u32 	[%rd14+4], %rd28;
	st.u32 	[%rd14], %rd28;
	mov.u32 	%r9697, %r9672;
	bra.uni 	BB1_84;

BB1_104:
	setp.eq.s32	%p87, %r1, 6;
	@%p87 bra 	BB1_165;
	bra.uni 	BB1_105;

BB1_165:
	ld.u32 	%r8760, [%rd20+4];
	ld.u32 	%r8761, [%rd20];
	// inline asm
	prmt.b32 %r8759, %r8760, %r8761, %r2;
	// inline asm
	st.u32 	[%rd21+12], %r8759;
	ld.u32 	%r8764, [%rd20];
	ld.u32 	%r8765, [%rd19+12];
	// inline asm
	prmt.b32 %r8763, %r8764, %r8765, %r2;
	// inline asm
	st.u32 	[%rd21+8], %r8763;
	ld.u32 	%r8768, [%rd19+12];
	ld.u32 	%r8769, [%rd19+8];
	// inline asm
	prmt.b32 %r8767, %r8768, %r8769, %r2;
	// inline asm
	st.u32 	[%rd21+4], %r8767;
	ld.u32 	%r8772, [%rd19+8];
	ld.u32 	%r8773, [%rd19+4];
	// inline asm
	prmt.b32 %r8771, %r8772, %r8773, %r2;
	// inline asm
	st.u32 	[%rd21], %r8771;
	ld.u32 	%r8776, [%rd19+4];
	ld.u32 	%r8777, [%rd19];
	// inline asm
	prmt.b32 %r8775, %r8776, %r8777, %r2;
	// inline asm
	st.u32 	[%rd20+12], %r8775;
	ld.u32 	%r8780, [%rd19];
	ld.u32 	%r8781, [%rd18+12];
	// inline asm
	prmt.b32 %r8779, %r8780, %r8781, %r2;
	// inline asm
	st.u32 	[%rd20+8], %r8779;
	ld.u32 	%r8784, [%rd18+12];
	ld.u32 	%r8785, [%rd18+8];
	// inline asm
	prmt.b32 %r8783, %r8784, %r8785, %r2;
	// inline asm
	st.u32 	[%rd20+4], %r8783;
	ld.u32 	%r8788, [%rd18+8];
	ld.u32 	%r8789, [%rd18+4];
	// inline asm
	prmt.b32 %r8787, %r8788, %r8789, %r2;
	// inline asm
	st.u32 	[%rd20], %r8787;
	ld.u32 	%r8792, [%rd18+4];
	ld.u32 	%r8793, [%rd18];
	// inline asm
	prmt.b32 %r8791, %r8792, %r8793, %r2;
	// inline asm
	st.u32 	[%rd19+12], %r8791;
	ld.u32 	%r8796, [%rd18];
	ld.u32 	%r8797, [%rd17+12];
	// inline asm
	prmt.b32 %r8795, %r8796, %r8797, %r2;
	// inline asm
	st.u32 	[%rd19+8], %r8795;
	ld.u32 	%r8800, [%rd17+12];
	ld.u32 	%r8801, [%rd17+8];
	// inline asm
	prmt.b32 %r8799, %r8800, %r8801, %r2;
	// inline asm
	st.u32 	[%rd19+4], %r8799;
	ld.u32 	%r8804, [%rd17+8];
	ld.u32 	%r8805, [%rd17+4];
	// inline asm
	prmt.b32 %r8803, %r8804, %r8805, %r2;
	// inline asm
	st.u32 	[%rd19], %r8803;
	ld.u32 	%r8808, [%rd17+4];
	ld.u32 	%r8809, [%rd17];
	// inline asm
	prmt.b32 %r8807, %r8808, %r8809, %r2;
	// inline asm
	st.u32 	[%rd18+12], %r8807;
	ld.u32 	%r8812, [%rd17];
	ld.u32 	%r8813, [%rd16+12];
	// inline asm
	prmt.b32 %r8811, %r8812, %r8813, %r2;
	// inline asm
	st.u32 	[%rd18+8], %r8811;
	ld.u32 	%r8816, [%rd16+12];
	ld.u32 	%r8817, [%rd16+8];
	// inline asm
	prmt.b32 %r8815, %r8816, %r8817, %r2;
	// inline asm
	st.u32 	[%rd18+4], %r8815;
	ld.u32 	%r8820, [%rd16+8];
	ld.u32 	%r8821, [%rd16+4];
	// inline asm
	prmt.b32 %r8819, %r8820, %r8821, %r2;
	// inline asm
	st.u32 	[%rd18], %r8819;
	ld.u32 	%r8824, [%rd16+4];
	ld.u32 	%r8825, [%rd16];
	// inline asm
	prmt.b32 %r8823, %r8824, %r8825, %r2;
	// inline asm
	st.u32 	[%rd17+12], %r8823;
	ld.u32 	%r8828, [%rd16];
	ld.u32 	%r8829, [%rd15+12];
	// inline asm
	prmt.b32 %r8827, %r8828, %r8829, %r2;
	// inline asm
	st.u32 	[%rd17+8], %r8827;
	ld.u32 	%r8832, [%rd15+12];
	ld.u32 	%r8833, [%rd15+8];
	// inline asm
	prmt.b32 %r8831, %r8832, %r8833, %r2;
	// inline asm
	st.u32 	[%rd17+4], %r8831;
	ld.u32 	%r8836, [%rd15+8];
	ld.u32 	%r8837, [%rd15+4];
	// inline asm
	prmt.b32 %r8835, %r8836, %r8837, %r2;
	// inline asm
	st.u32 	[%rd17], %r8835;
	ld.u32 	%r8840, [%rd15+4];
	ld.u32 	%r8841, [%rd15];
	// inline asm
	prmt.b32 %r8839, %r8840, %r8841, %r2;
	// inline asm
	st.u32 	[%rd16+12], %r8839;
	ld.u32 	%r8844, [%rd15];
	ld.u32 	%r8845, [%rd14+12];
	// inline asm
	prmt.b32 %r8843, %r8844, %r8845, %r2;
	// inline asm
	st.u32 	[%rd16+8], %r8843;
	ld.u32 	%r8848, [%rd14+12];
	ld.u32 	%r8849, [%rd14+8];
	// inline asm
	prmt.b32 %r8847, %r8848, %r8849, %r2;
	// inline asm
	st.u32 	[%rd16+4], %r8847;
	ld.u32 	%r8852, [%rd14+8];
	ld.u32 	%r8853, [%rd14+4];
	// inline asm
	prmt.b32 %r8851, %r8852, %r8853, %r2;
	// inline asm
	st.u32 	[%rd16], %r8851;
	ld.u32 	%r8856, [%rd14+4];
	ld.u32 	%r8857, [%rd14];
	// inline asm
	prmt.b32 %r8855, %r8856, %r8857, %r2;
	// inline asm
	st.u32 	[%rd15+12], %r8855;
	ld.u32 	%r8860, [%rd14];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r8859, %r8860, %r9705, %r2;
	// inline asm
	st.u32 	[%rd15+8], %r8859;
	st.u32 	[%rd15+4], %r9705;
	st.u32 	[%rd15], %r9705;
	st.u32 	[%rd14+12], %r9705;
	st.u32 	[%rd14+8], %r9705;
	mov.u64 	%rd2942, 0;
	st.u32 	[%rd14+4], %rd2942;
	st.u32 	[%rd14], %rd2942;
	bra.uni 	BB1_170;

BB1_16:
	setp.eq.s32	%p40, %r1, 6;
	@%p40 bra 	BB1_77;
	bra.uni 	BB1_17;

BB1_77:
	ld.u32 	%r4205, [%rd21+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9678, %r9672, %r4205, %r2;
	// inline asm
	ld.u32 	%r4208, [%rd21+12];
	ld.u32 	%r4209, [%rd21+8];
	// inline asm
	prmt.b32 %r9679, %r4208, %r4209, %r2;
	// inline asm
	ld.u32 	%r4212, [%rd21+8];
	ld.u32 	%r4213, [%rd21+4];
	// inline asm
	prmt.b32 %r9680, %r4212, %r4213, %r2;
	// inline asm
	ld.u32 	%r4216, [%rd21+4];
	ld.u32 	%r4217, [%rd21];
	// inline asm
	prmt.b32 %r9673, %r4216, %r4217, %r2;
	// inline asm
	ld.u32 	%r4220, [%rd21];
	ld.u32 	%r4221, [%rd20+12];
	// inline asm
	prmt.b32 %r9674, %r4220, %r4221, %r2;
	// inline asm
	ld.u32 	%r4224, [%rd20+12];
	ld.u32 	%r4225, [%rd20+8];
	// inline asm
	prmt.b32 %r9675, %r4224, %r4225, %r2;
	// inline asm
	ld.u32 	%r4228, [%rd20+8];
	ld.u32 	%r4229, [%rd20+4];
	// inline asm
	prmt.b32 %r9676, %r4228, %r4229, %r2;
	// inline asm
	ld.u32 	%r4232, [%rd20+4];
	ld.u32 	%r4233, [%rd20];
	// inline asm
	prmt.b32 %r4231, %r4232, %r4233, %r2;
	// inline asm
	st.u32 	[%rd21+12], %r4231;
	ld.u32 	%r4236, [%rd20];
	ld.u32 	%r4237, [%rd19+12];
	// inline asm
	prmt.b32 %r4235, %r4236, %r4237, %r2;
	// inline asm
	st.u32 	[%rd21+8], %r4235;
	ld.u32 	%r4240, [%rd19+12];
	ld.u32 	%r4241, [%rd19+8];
	// inline asm
	prmt.b32 %r4239, %r4240, %r4241, %r2;
	// inline asm
	st.u32 	[%rd21+4], %r4239;
	ld.u32 	%r4244, [%rd19+8];
	ld.u32 	%r4245, [%rd19+4];
	// inline asm
	prmt.b32 %r4243, %r4244, %r4245, %r2;
	// inline asm
	st.u32 	[%rd21], %r4243;
	ld.u32 	%r4248, [%rd19+4];
	ld.u32 	%r4249, [%rd19];
	// inline asm
	prmt.b32 %r4247, %r4248, %r4249, %r2;
	// inline asm
	st.u32 	[%rd20+12], %r4247;
	ld.u32 	%r4252, [%rd19];
	ld.u32 	%r4253, [%rd18+12];
	// inline asm
	prmt.b32 %r4251, %r4252, %r4253, %r2;
	// inline asm
	st.u32 	[%rd20+8], %r4251;
	ld.u32 	%r4256, [%rd18+12];
	ld.u32 	%r4257, [%rd18+8];
	// inline asm
	prmt.b32 %r4255, %r4256, %r4257, %r2;
	// inline asm
	st.u32 	[%rd20+4], %r4255;
	ld.u32 	%r4260, [%rd18+8];
	ld.u32 	%r4261, [%rd18+4];
	// inline asm
	prmt.b32 %r4259, %r4260, %r4261, %r2;
	// inline asm
	st.u32 	[%rd20], %r4259;
	ld.u32 	%r4264, [%rd18+4];
	ld.u32 	%r4265, [%rd18];
	// inline asm
	prmt.b32 %r4263, %r4264, %r4265, %r2;
	// inline asm
	st.u32 	[%rd19+12], %r4263;
	ld.u32 	%r4268, [%rd18];
	ld.u32 	%r4269, [%rd17+12];
	// inline asm
	prmt.b32 %r4267, %r4268, %r4269, %r2;
	// inline asm
	st.u32 	[%rd19+8], %r4267;
	ld.u32 	%r4272, [%rd17+12];
	ld.u32 	%r4273, [%rd17+8];
	// inline asm
	prmt.b32 %r4271, %r4272, %r4273, %r2;
	// inline asm
	st.u32 	[%rd19+4], %r4271;
	ld.u32 	%r4276, [%rd17+8];
	ld.u32 	%r4277, [%rd17+4];
	// inline asm
	prmt.b32 %r4275, %r4276, %r4277, %r2;
	// inline asm
	st.u32 	[%rd19], %r4275;
	ld.u32 	%r4280, [%rd17+4];
	ld.u32 	%r4281, [%rd17];
	// inline asm
	prmt.b32 %r4279, %r4280, %r4281, %r2;
	// inline asm
	st.u32 	[%rd18+12], %r4279;
	ld.u32 	%r4284, [%rd17];
	ld.u32 	%r4285, [%rd16+12];
	// inline asm
	prmt.b32 %r4283, %r4284, %r4285, %r2;
	// inline asm
	st.u32 	[%rd18+8], %r4283;
	ld.u32 	%r4288, [%rd16+12];
	ld.u32 	%r4289, [%rd16+8];
	// inline asm
	prmt.b32 %r4287, %r4288, %r4289, %r2;
	// inline asm
	st.u32 	[%rd18+4], %r4287;
	ld.u32 	%r4292, [%rd16+8];
	ld.u32 	%r4293, [%rd16+4];
	// inline asm
	prmt.b32 %r4291, %r4292, %r4293, %r2;
	// inline asm
	st.u32 	[%rd18], %r4291;
	ld.u32 	%r4296, [%rd16+4];
	ld.u32 	%r4297, [%rd16];
	// inline asm
	prmt.b32 %r4295, %r4296, %r4297, %r2;
	// inline asm
	st.u32 	[%rd17+12], %r4295;
	ld.u32 	%r4300, [%rd16];
	ld.u32 	%r4301, [%rd15+12];
	// inline asm
	prmt.b32 %r4299, %r4300, %r4301, %r2;
	// inline asm
	st.u32 	[%rd17+8], %r4299;
	ld.u32 	%r4304, [%rd15+12];
	ld.u32 	%r4305, [%rd15+8];
	// inline asm
	prmt.b32 %r4303, %r4304, %r4305, %r2;
	// inline asm
	st.u32 	[%rd17+4], %r4303;
	ld.u32 	%r4308, [%rd15+8];
	ld.u32 	%r4309, [%rd15+4];
	// inline asm
	prmt.b32 %r4307, %r4308, %r4309, %r2;
	// inline asm
	st.u32 	[%rd17], %r4307;
	ld.u32 	%r4312, [%rd15+4];
	ld.u32 	%r4313, [%rd15];
	// inline asm
	prmt.b32 %r4311, %r4312, %r4313, %r2;
	// inline asm
	st.u32 	[%rd16+12], %r4311;
	ld.u32 	%r4316, [%rd15];
	ld.u32 	%r4317, [%rd14+12];
	// inline asm
	prmt.b32 %r4315, %r4316, %r4317, %r2;
	// inline asm
	st.u32 	[%rd16+8], %r4315;
	ld.u32 	%r4320, [%rd14+12];
	ld.u32 	%r4321, [%rd14+8];
	// inline asm
	prmt.b32 %r4319, %r4320, %r4321, %r2;
	// inline asm
	st.u32 	[%rd16+4], %r4319;
	ld.u32 	%r4324, [%rd14+8];
	ld.u32 	%r4325, [%rd14+4];
	// inline asm
	prmt.b32 %r4323, %r4324, %r4325, %r2;
	// inline asm
	st.u32 	[%rd16], %r4323;
	ld.u32 	%r4328, [%rd14+4];
	ld.u32 	%r4329, [%rd14];
	// inline asm
	prmt.b32 %r4327, %r4328, %r4329, %r2;
	// inline asm
	st.u32 	[%rd15+12], %r4327;
	ld.u32 	%r4332, [%rd14];
	// inline asm
	prmt.b32 %r4331, %r4332, %r9672, %r2;
	// inline asm
	st.u32 	[%rd15+8], %r4331;
	st.u32 	[%rd15+4], %r9672;
	st.u32 	[%rd15], %r9672;
	st.u32 	[%rd14+12], %r9672;
	st.u32 	[%rd14+8], %r9672;
	mov.u64 	%rd48, 0;
	st.u32 	[%rd14+4], %rd48;
	st.u32 	[%rd14], %rd48;
	mov.u32 	%r9677, %r9672;
	bra.uni 	BB1_79;

BB1_135:
	setp.eq.s32	%p64, %r1, 22;
	@%p64 bra 	BB1_157;
	bra.uni 	BB1_136;

BB1_157:
	ld.u32 	%r7624, [%rd16+4];
	ld.u32 	%r7625, [%rd16];
	// inline asm
	prmt.b32 %r7623, %r7624, %r7625, %r2;
	// inline asm
	st.u32 	[%rd21+12], %r7623;
	ld.u32 	%r7628, [%rd16];
	ld.u32 	%r7629, [%rd15+12];
	// inline asm
	prmt.b32 %r7627, %r7628, %r7629, %r2;
	// inline asm
	st.u32 	[%rd21+8], %r7627;
	ld.u32 	%r7632, [%rd15+12];
	ld.u32 	%r7633, [%rd15+8];
	// inline asm
	prmt.b32 %r7631, %r7632, %r7633, %r2;
	// inline asm
	st.u32 	[%rd21+4], %r7631;
	ld.u32 	%r7636, [%rd15+8];
	ld.u32 	%r7637, [%rd15+4];
	// inline asm
	prmt.b32 %r7635, %r7636, %r7637, %r2;
	// inline asm
	st.u32 	[%rd21], %r7635;
	ld.u32 	%r7640, [%rd15+4];
	ld.u32 	%r7641, [%rd15];
	// inline asm
	prmt.b32 %r7639, %r7640, %r7641, %r2;
	// inline asm
	st.u32 	[%rd20+12], %r7639;
	ld.u32 	%r7644, [%rd15];
	ld.u32 	%r7645, [%rd14+12];
	// inline asm
	prmt.b32 %r7643, %r7644, %r7645, %r2;
	// inline asm
	st.u32 	[%rd20+8], %r7643;
	ld.u32 	%r7648, [%rd14+12];
	ld.u32 	%r7649, [%rd14+8];
	// inline asm
	prmt.b32 %r7647, %r7648, %r7649, %r2;
	// inline asm
	st.u32 	[%rd20+4], %r7647;
	ld.u32 	%r7652, [%rd14+8];
	ld.u32 	%r7653, [%rd14+4];
	// inline asm
	prmt.b32 %r7651, %r7652, %r7653, %r2;
	// inline asm
	st.u32 	[%rd20], %r7651;
	ld.u32 	%r7656, [%rd14+4];
	ld.u32 	%r7657, [%rd14];
	// inline asm
	prmt.b32 %r7655, %r7656, %r7657, %r2;
	// inline asm
	st.u32 	[%rd19+12], %r7655;
	ld.u32 	%r7660, [%rd14];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r7659, %r7660, %r9705, %r2;
	// inline asm
	st.u32 	[%rd19+8], %r7659;
	st.u32 	[%rd19+4], %r9705;
	st.u32 	[%rd19], %r9705;
	st.u32 	[%rd18+12], %r9705;
	st.u32 	[%rd18+8], %r9705;
	st.u32 	[%rd18+4], %r9705;
	st.u32 	[%rd18], %r9705;
	st.u32 	[%rd17+12], %r9705;
	st.u32 	[%rd17+8], %r9705;
	st.u32 	[%rd17+4], %r9705;
	st.u32 	[%rd17], %r9705;
	st.u32 	[%rd16+12], %r9705;
	st.u32 	[%rd16+8], %r9705;
	st.u32 	[%rd16+4], %r9705;
	st.u32 	[%rd16], %r9705;
	st.u32 	[%rd15+12], %r9705;
	st.u32 	[%rd15+8], %r9705;
	st.u32 	[%rd15+4], %r9705;
	st.u32 	[%rd15], %r9705;
	st.u32 	[%rd14+12], %r9705;
	st.u32 	[%rd14+8], %r9705;
	mov.u64 	%rd2926, 0;
	st.u32 	[%rd14+4], %rd2926;
	st.u32 	[%rd14], %rd2926;
	bra.uni 	BB1_170;

BB1_47:
	setp.eq.s32	%p17, %r1, 22;
	@%p17 bra 	BB1_69;
	bra.uni 	BB1_48;

BB1_69:
	ld.u32 	%r1813, [%rd21+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9694, %r9672, %r1813, %r2;
	// inline asm
	ld.u32 	%r1816, [%rd21+12];
	ld.u32 	%r1817, [%rd21+8];
	// inline asm
	prmt.b32 %r9695, %r1816, %r1817, %r2;
	// inline asm
	ld.u32 	%r1820, [%rd21+8];
	ld.u32 	%r1821, [%rd21+4];
	// inline asm
	prmt.b32 %r9696, %r1820, %r1821, %r2;
	// inline asm
	ld.u32 	%r1824, [%rd21+4];
	ld.u32 	%r1825, [%rd21];
	// inline asm
	prmt.b32 %r9689, %r1824, %r1825, %r2;
	// inline asm
	ld.u32 	%r1828, [%rd21];
	ld.u32 	%r1829, [%rd20+12];
	// inline asm
	prmt.b32 %r9690, %r1828, %r1829, %r2;
	// inline asm
	ld.u32 	%r1832, [%rd20+12];
	ld.u32 	%r1833, [%rd20+8];
	// inline asm
	prmt.b32 %r9691, %r1832, %r1833, %r2;
	// inline asm
	ld.u32 	%r1836, [%rd20+8];
	ld.u32 	%r1837, [%rd20+4];
	// inline asm
	prmt.b32 %r9692, %r1836, %r1837, %r2;
	// inline asm
	ld.u32 	%r1840, [%rd20+4];
	ld.u32 	%r1841, [%rd20];
	// inline asm
	prmt.b32 %r9685, %r1840, %r1841, %r2;
	// inline asm
	ld.u32 	%r1844, [%rd20];
	ld.u32 	%r1845, [%rd19+12];
	// inline asm
	prmt.b32 %r9686, %r1844, %r1845, %r2;
	// inline asm
	ld.u32 	%r1848, [%rd19+12];
	ld.u32 	%r1849, [%rd19+8];
	// inline asm
	prmt.b32 %r9687, %r1848, %r1849, %r2;
	// inline asm
	ld.u32 	%r1852, [%rd19+8];
	ld.u32 	%r1853, [%rd19+4];
	// inline asm
	prmt.b32 %r9688, %r1852, %r1853, %r2;
	// inline asm
	ld.u32 	%r1856, [%rd19+4];
	ld.u32 	%r1857, [%rd19];
	// inline asm
	prmt.b32 %r9681, %r1856, %r1857, %r2;
	// inline asm
	ld.u32 	%r1860, [%rd19];
	ld.u32 	%r1861, [%rd18+12];
	// inline asm
	prmt.b32 %r9682, %r1860, %r1861, %r2;
	// inline asm
	ld.u32 	%r1864, [%rd18+12];
	ld.u32 	%r1865, [%rd18+8];
	// inline asm
	prmt.b32 %r9683, %r1864, %r1865, %r2;
	// inline asm
	ld.u32 	%r1868, [%rd18+8];
	ld.u32 	%r1869, [%rd18+4];
	// inline asm
	prmt.b32 %r9684, %r1868, %r1869, %r2;
	// inline asm
	ld.u32 	%r1872, [%rd18+4];
	ld.u32 	%r1873, [%rd18];
	// inline asm
	prmt.b32 %r9677, %r1872, %r1873, %r2;
	// inline asm
	ld.u32 	%r1876, [%rd18];
	ld.u32 	%r1877, [%rd17+12];
	// inline asm
	prmt.b32 %r9678, %r1876, %r1877, %r2;
	// inline asm
	ld.u32 	%r1880, [%rd17+12];
	ld.u32 	%r1881, [%rd17+8];
	// inline asm
	prmt.b32 %r9679, %r1880, %r1881, %r2;
	// inline asm
	ld.u32 	%r1884, [%rd17+8];
	ld.u32 	%r1885, [%rd17+4];
	// inline asm
	prmt.b32 %r9680, %r1884, %r1885, %r2;
	// inline asm
	ld.u32 	%r1888, [%rd17+4];
	ld.u32 	%r1889, [%rd17];
	// inline asm
	prmt.b32 %r9673, %r1888, %r1889, %r2;
	// inline asm
	ld.u32 	%r1892, [%rd17];
	ld.u32 	%r1893, [%rd16+12];
	// inline asm
	prmt.b32 %r9674, %r1892, %r1893, %r2;
	// inline asm
	ld.u32 	%r1896, [%rd16+12];
	ld.u32 	%r1897, [%rd16+8];
	// inline asm
	prmt.b32 %r9675, %r1896, %r1897, %r2;
	// inline asm
	ld.u32 	%r1900, [%rd16+8];
	ld.u32 	%r1901, [%rd16+4];
	// inline asm
	prmt.b32 %r9676, %r1900, %r1901, %r2;
	// inline asm
	ld.u32 	%r1904, [%rd16+4];
	ld.u32 	%r1905, [%rd16];
	// inline asm
	prmt.b32 %r1903, %r1904, %r1905, %r2;
	// inline asm
	st.u32 	[%rd21+12], %r1903;
	ld.u32 	%r1908, [%rd16];
	ld.u32 	%r1909, [%rd15+12];
	// inline asm
	prmt.b32 %r1907, %r1908, %r1909, %r2;
	// inline asm
	st.u32 	[%rd21+8], %r1907;
	ld.u32 	%r1912, [%rd15+12];
	ld.u32 	%r1913, [%rd15+8];
	// inline asm
	prmt.b32 %r1911, %r1912, %r1913, %r2;
	// inline asm
	st.u32 	[%rd21+4], %r1911;
	ld.u32 	%r1916, [%rd15+8];
	ld.u32 	%r1917, [%rd15+4];
	// inline asm
	prmt.b32 %r1915, %r1916, %r1917, %r2;
	// inline asm
	st.u32 	[%rd21], %r1915;
	ld.u32 	%r1920, [%rd15+4];
	ld.u32 	%r1921, [%rd15];
	// inline asm
	prmt.b32 %r1919, %r1920, %r1921, %r2;
	// inline asm
	st.u32 	[%rd20+12], %r1919;
	ld.u32 	%r1924, [%rd15];
	ld.u32 	%r1925, [%rd14+12];
	// inline asm
	prmt.b32 %r1923, %r1924, %r1925, %r2;
	// inline asm
	st.u32 	[%rd20+8], %r1923;
	ld.u32 	%r1928, [%rd14+12];
	ld.u32 	%r1929, [%rd14+8];
	// inline asm
	prmt.b32 %r1927, %r1928, %r1929, %r2;
	// inline asm
	st.u32 	[%rd20+4], %r1927;
	ld.u32 	%r1932, [%rd14+8];
	ld.u32 	%r1933, [%rd14+4];
	// inline asm
	prmt.b32 %r1931, %r1932, %r1933, %r2;
	// inline asm
	st.u32 	[%rd20], %r1931;
	ld.u32 	%r1936, [%rd14+4];
	ld.u32 	%r1937, [%rd14];
	// inline asm
	prmt.b32 %r1935, %r1936, %r1937, %r2;
	// inline asm
	st.u32 	[%rd19+12], %r1935;
	ld.u32 	%r1940, [%rd14];
	// inline asm
	prmt.b32 %r1939, %r1940, %r9672, %r2;
	// inline asm
	st.u32 	[%rd19+8], %r1939;
	st.u32 	[%rd19+4], %r9672;
	st.u32 	[%rd19], %r9672;
	st.u32 	[%rd18+12], %r9672;
	st.u32 	[%rd18+8], %r9672;
	st.u32 	[%rd18+4], %r9672;
	st.u32 	[%rd18], %r9672;
	st.u32 	[%rd17+12], %r9672;
	st.u32 	[%rd17+8], %r9672;
	st.u32 	[%rd17+4], %r9672;
	st.u32 	[%rd17], %r9672;
	st.u32 	[%rd16+12], %r9672;
	st.u32 	[%rd16+8], %r9672;
	st.u32 	[%rd16+4], %r9672;
	st.u32 	[%rd16], %r9672;
	st.u32 	[%rd15+12], %r9672;
	st.u32 	[%rd15+8], %r9672;
	st.u32 	[%rd15+4], %r9672;
	st.u32 	[%rd15], %r9672;
	st.u32 	[%rd14+12], %r9672;
	st.u32 	[%rd14+8], %r9672;
	mov.u64 	%rd32, 0;
	st.u32 	[%rd14+4], %rd32;
	st.u32 	[%rd14], %rd32;
	mov.u32 	%r9693, %r9672;
	bra.uni 	BB1_83;

BB1_119:
	setp.eq.s32	%p76, %r1, 14;
	@%p76 bra 	BB1_161;
	bra.uni 	BB1_120;

BB1_161:
	ld.u32 	%r8064, [%rd18+4];
	ld.u32 	%r8065, [%rd18];
	// inline asm
	prmt.b32 %r8063, %r8064, %r8065, %r2;
	// inline asm
	st.u32 	[%rd21+12], %r8063;
	ld.u32 	%r8068, [%rd18];
	ld.u32 	%r8069, [%rd17+12];
	// inline asm
	prmt.b32 %r8067, %r8068, %r8069, %r2;
	// inline asm
	st.u32 	[%rd21+8], %r8067;
	ld.u32 	%r8072, [%rd17+12];
	ld.u32 	%r8073, [%rd17+8];
	// inline asm
	prmt.b32 %r8071, %r8072, %r8073, %r2;
	// inline asm
	st.u32 	[%rd21+4], %r8071;
	ld.u32 	%r8076, [%rd17+8];
	ld.u32 	%r8077, [%rd17+4];
	// inline asm
	prmt.b32 %r8075, %r8076, %r8077, %r2;
	// inline asm
	st.u32 	[%rd21], %r8075;
	ld.u32 	%r8080, [%rd17+4];
	ld.u32 	%r8081, [%rd17];
	// inline asm
	prmt.b32 %r8079, %r8080, %r8081, %r2;
	// inline asm
	st.u32 	[%rd20+12], %r8079;
	ld.u32 	%r8084, [%rd17];
	ld.u32 	%r8085, [%rd16+12];
	// inline asm
	prmt.b32 %r8083, %r8084, %r8085, %r2;
	// inline asm
	st.u32 	[%rd20+8], %r8083;
	ld.u32 	%r8088, [%rd16+12];
	ld.u32 	%r8089, [%rd16+8];
	// inline asm
	prmt.b32 %r8087, %r8088, %r8089, %r2;
	// inline asm
	st.u32 	[%rd20+4], %r8087;
	ld.u32 	%r8092, [%rd16+8];
	ld.u32 	%r8093, [%rd16+4];
	// inline asm
	prmt.b32 %r8091, %r8092, %r8093, %r2;
	// inline asm
	st.u32 	[%rd20], %r8091;
	ld.u32 	%r8096, [%rd16+4];
	ld.u32 	%r8097, [%rd16];
	// inline asm
	prmt.b32 %r8095, %r8096, %r8097, %r2;
	// inline asm
	st.u32 	[%rd19+12], %r8095;
	ld.u32 	%r8100, [%rd16];
	ld.u32 	%r8101, [%rd15+12];
	// inline asm
	prmt.b32 %r8099, %r8100, %r8101, %r2;
	// inline asm
	st.u32 	[%rd19+8], %r8099;
	ld.u32 	%r8104, [%rd15+12];
	ld.u32 	%r8105, [%rd15+8];
	// inline asm
	prmt.b32 %r8103, %r8104, %r8105, %r2;
	// inline asm
	st.u32 	[%rd19+4], %r8103;
	ld.u32 	%r8108, [%rd15+8];
	ld.u32 	%r8109, [%rd15+4];
	// inline asm
	prmt.b32 %r8107, %r8108, %r8109, %r2;
	// inline asm
	st.u32 	[%rd19], %r8107;
	ld.u32 	%r8112, [%rd15+4];
	ld.u32 	%r8113, [%rd15];
	// inline asm
	prmt.b32 %r8111, %r8112, %r8113, %r2;
	// inline asm
	st.u32 	[%rd18+12], %r8111;
	ld.u32 	%r8116, [%rd15];
	ld.u32 	%r8117, [%rd14+12];
	// inline asm
	prmt.b32 %r8115, %r8116, %r8117, %r2;
	// inline asm
	st.u32 	[%rd18+8], %r8115;
	ld.u32 	%r8120, [%rd14+12];
	ld.u32 	%r8121, [%rd14+8];
	// inline asm
	prmt.b32 %r8119, %r8120, %r8121, %r2;
	// inline asm
	st.u32 	[%rd18+4], %r8119;
	ld.u32 	%r8124, [%rd14+8];
	ld.u32 	%r8125, [%rd14+4];
	// inline asm
	prmt.b32 %r8123, %r8124, %r8125, %r2;
	// inline asm
	st.u32 	[%rd18], %r8123;
	ld.u32 	%r8128, [%rd14+4];
	ld.u32 	%r8129, [%rd14];
	// inline asm
	prmt.b32 %r8127, %r8128, %r8129, %r2;
	// inline asm
	st.u32 	[%rd17+12], %r8127;
	ld.u32 	%r8132, [%rd14];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r8131, %r8132, %r9705, %r2;
	// inline asm
	st.u32 	[%rd17+8], %r8131;
	st.u32 	[%rd17+4], %r9705;
	st.u32 	[%rd17], %r9705;
	st.u32 	[%rd16+12], %r9705;
	st.u32 	[%rd16+8], %r9705;
	st.u32 	[%rd16+4], %r9705;
	st.u32 	[%rd16], %r9705;
	st.u32 	[%rd15+12], %r9705;
	st.u32 	[%rd15+8], %r9705;
	st.u32 	[%rd15+4], %r9705;
	st.u32 	[%rd15], %r9705;
	st.u32 	[%rd14+12], %r9705;
	st.u32 	[%rd14+8], %r9705;
	mov.u64 	%rd2934, 0;
	st.u32 	[%rd14+4], %rd2934;
	st.u32 	[%rd14], %rd2934;
	bra.uni 	BB1_170;

BB1_31:
	setp.eq.s32	%p29, %r1, 14;
	@%p29 bra 	BB1_73;
	bra.uni 	BB1_32;

BB1_73:
	ld.u32 	%r2977, [%rd21+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9686, %r9672, %r2977, %r2;
	// inline asm
	ld.u32 	%r2980, [%rd21+12];
	ld.u32 	%r2981, [%rd21+8];
	// inline asm
	prmt.b32 %r9687, %r2980, %r2981, %r2;
	// inline asm
	ld.u32 	%r2984, [%rd21+8];
	ld.u32 	%r2985, [%rd21+4];
	// inline asm
	prmt.b32 %r9688, %r2984, %r2985, %r2;
	// inline asm
	ld.u32 	%r2988, [%rd21+4];
	ld.u32 	%r2989, [%rd21];
	// inline asm
	prmt.b32 %r9681, %r2988, %r2989, %r2;
	// inline asm
	ld.u32 	%r2992, [%rd21];
	ld.u32 	%r2993, [%rd20+12];
	// inline asm
	prmt.b32 %r9682, %r2992, %r2993, %r2;
	// inline asm
	ld.u32 	%r2996, [%rd20+12];
	ld.u32 	%r2997, [%rd20+8];
	// inline asm
	prmt.b32 %r9683, %r2996, %r2997, %r2;
	// inline asm
	ld.u32 	%r3000, [%rd20+8];
	ld.u32 	%r3001, [%rd20+4];
	// inline asm
	prmt.b32 %r9684, %r3000, %r3001, %r2;
	// inline asm
	ld.u32 	%r3004, [%rd20+4];
	ld.u32 	%r3005, [%rd20];
	// inline asm
	prmt.b32 %r9677, %r3004, %r3005, %r2;
	// inline asm
	ld.u32 	%r3008, [%rd20];
	ld.u32 	%r3009, [%rd19+12];
	// inline asm
	prmt.b32 %r9678, %r3008, %r3009, %r2;
	// inline asm
	ld.u32 	%r3012, [%rd19+12];
	ld.u32 	%r3013, [%rd19+8];
	// inline asm
	prmt.b32 %r9679, %r3012, %r3013, %r2;
	// inline asm
	ld.u32 	%r3016, [%rd19+8];
	ld.u32 	%r3017, [%rd19+4];
	// inline asm
	prmt.b32 %r9680, %r3016, %r3017, %r2;
	// inline asm
	ld.u32 	%r3020, [%rd19+4];
	ld.u32 	%r3021, [%rd19];
	// inline asm
	prmt.b32 %r9673, %r3020, %r3021, %r2;
	// inline asm
	ld.u32 	%r3024, [%rd19];
	ld.u32 	%r3025, [%rd18+12];
	// inline asm
	prmt.b32 %r9674, %r3024, %r3025, %r2;
	// inline asm
	ld.u32 	%r3028, [%rd18+12];
	ld.u32 	%r3029, [%rd18+8];
	// inline asm
	prmt.b32 %r9675, %r3028, %r3029, %r2;
	// inline asm
	ld.u32 	%r3032, [%rd18+8];
	ld.u32 	%r3033, [%rd18+4];
	// inline asm
	prmt.b32 %r9676, %r3032, %r3033, %r2;
	// inline asm
	ld.u32 	%r3036, [%rd18+4];
	ld.u32 	%r3037, [%rd18];
	// inline asm
	prmt.b32 %r3035, %r3036, %r3037, %r2;
	// inline asm
	st.u32 	[%rd21+12], %r3035;
	ld.u32 	%r3040, [%rd18];
	ld.u32 	%r3041, [%rd17+12];
	// inline asm
	prmt.b32 %r3039, %r3040, %r3041, %r2;
	// inline asm
	st.u32 	[%rd21+8], %r3039;
	ld.u32 	%r3044, [%rd17+12];
	ld.u32 	%r3045, [%rd17+8];
	// inline asm
	prmt.b32 %r3043, %r3044, %r3045, %r2;
	// inline asm
	st.u32 	[%rd21+4], %r3043;
	ld.u32 	%r3048, [%rd17+8];
	ld.u32 	%r3049, [%rd17+4];
	// inline asm
	prmt.b32 %r3047, %r3048, %r3049, %r2;
	// inline asm
	st.u32 	[%rd21], %r3047;
	ld.u32 	%r3052, [%rd17+4];
	ld.u32 	%r3053, [%rd17];
	// inline asm
	prmt.b32 %r3051, %r3052, %r3053, %r2;
	// inline asm
	st.u32 	[%rd20+12], %r3051;
	ld.u32 	%r3056, [%rd17];
	ld.u32 	%r3057, [%rd16+12];
	// inline asm
	prmt.b32 %r3055, %r3056, %r3057, %r2;
	// inline asm
	st.u32 	[%rd20+8], %r3055;
	ld.u32 	%r3060, [%rd16+12];
	ld.u32 	%r3061, [%rd16+8];
	// inline asm
	prmt.b32 %r3059, %r3060, %r3061, %r2;
	// inline asm
	st.u32 	[%rd20+4], %r3059;
	ld.u32 	%r3064, [%rd16+8];
	ld.u32 	%r3065, [%rd16+4];
	// inline asm
	prmt.b32 %r3063, %r3064, %r3065, %r2;
	// inline asm
	st.u32 	[%rd20], %r3063;
	ld.u32 	%r3068, [%rd16+4];
	ld.u32 	%r3069, [%rd16];
	// inline asm
	prmt.b32 %r3067, %r3068, %r3069, %r2;
	// inline asm
	st.u32 	[%rd19+12], %r3067;
	ld.u32 	%r3072, [%rd16];
	ld.u32 	%r3073, [%rd15+12];
	// inline asm
	prmt.b32 %r3071, %r3072, %r3073, %r2;
	// inline asm
	st.u32 	[%rd19+8], %r3071;
	ld.u32 	%r3076, [%rd15+12];
	ld.u32 	%r3077, [%rd15+8];
	// inline asm
	prmt.b32 %r3075, %r3076, %r3077, %r2;
	// inline asm
	st.u32 	[%rd19+4], %r3075;
	ld.u32 	%r3080, [%rd15+8];
	ld.u32 	%r3081, [%rd15+4];
	// inline asm
	prmt.b32 %r3079, %r3080, %r3081, %r2;
	// inline asm
	st.u32 	[%rd19], %r3079;
	ld.u32 	%r3084, [%rd15+4];
	ld.u32 	%r3085, [%rd15];
	// inline asm
	prmt.b32 %r3083, %r3084, %r3085, %r2;
	// inline asm
	st.u32 	[%rd18+12], %r3083;
	ld.u32 	%r3088, [%rd15];
	ld.u32 	%r3089, [%rd14+12];
	// inline asm
	prmt.b32 %r3087, %r3088, %r3089, %r2;
	// inline asm
	st.u32 	[%rd18+8], %r3087;
	ld.u32 	%r3092, [%rd14+12];
	ld.u32 	%r3093, [%rd14+8];
	// inline asm
	prmt.b32 %r3091, %r3092, %r3093, %r2;
	// inline asm
	st.u32 	[%rd18+4], %r3091;
	ld.u32 	%r3096, [%rd14+8];
	ld.u32 	%r3097, [%rd14+4];
	// inline asm
	prmt.b32 %r3095, %r3096, %r3097, %r2;
	// inline asm
	st.u32 	[%rd18], %r3095;
	ld.u32 	%r3100, [%rd14+4];
	ld.u32 	%r3101, [%rd14];
	// inline asm
	prmt.b32 %r3099, %r3100, %r3101, %r2;
	// inline asm
	st.u32 	[%rd17+12], %r3099;
	ld.u32 	%r3104, [%rd14];
	// inline asm
	prmt.b32 %r3103, %r3104, %r9672, %r2;
	// inline asm
	st.u32 	[%rd17+8], %r3103;
	st.u32 	[%rd17+4], %r9672;
	st.u32 	[%rd17], %r9672;
	st.u32 	[%rd16+12], %r9672;
	st.u32 	[%rd16+8], %r9672;
	st.u32 	[%rd16+4], %r9672;
	st.u32 	[%rd16], %r9672;
	st.u32 	[%rd15+12], %r9672;
	st.u32 	[%rd15+8], %r9672;
	st.u32 	[%rd15+4], %r9672;
	st.u32 	[%rd15], %r9672;
	st.u32 	[%rd14+12], %r9672;
	st.u32 	[%rd14+8], %r9672;
	mov.u64 	%rd40, 0;
	st.u32 	[%rd14+4], %rd40;
	st.u32 	[%rd14], %rd40;
	mov.u32 	%r9685, %r9672;
	bra.uni 	BB1_81;

BB1_150:
	setp.eq.s32	%p53, %r1, 30;
	@%p53 bra 	BB1_153;
	bra.uni 	BB1_151;

BB1_153:
	ld.u32 	%r7440, [%rd14+4];
	ld.u32 	%r7441, [%rd14];
	// inline asm
	prmt.b32 %r7439, %r7440, %r7441, %r2;
	// inline asm
	st.u32 	[%rd21+12], %r7439;
	ld.u32 	%r7444, [%rd14];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r7443, %r7444, %r9705, %r2;
	// inline asm
	st.u32 	[%rd21+8], %r7443;
	st.u32 	[%rd21+4], %r9705;
	st.u32 	[%rd21], %r9705;
	st.u32 	[%rd20+12], %r9705;
	st.u32 	[%rd20+8], %r9705;
	st.u32 	[%rd20+4], %r9705;
	st.u32 	[%rd20], %r9705;
	st.u32 	[%rd19+12], %r9705;
	st.u32 	[%rd19+8], %r9705;
	st.u32 	[%rd19+4], %r9705;
	st.u32 	[%rd19], %r9705;
	st.u32 	[%rd18+12], %r9705;
	st.u32 	[%rd18+8], %r9705;
	st.u32 	[%rd18+4], %r9705;
	st.u32 	[%rd18], %r9705;
	st.u32 	[%rd17+12], %r9705;
	st.u32 	[%rd17+8], %r9705;
	st.u32 	[%rd17+4], %r9705;
	st.u32 	[%rd17], %r9705;
	st.u32 	[%rd16+12], %r9705;
	st.u32 	[%rd16+8], %r9705;
	st.u32 	[%rd16+4], %r9705;
	st.u32 	[%rd16], %r9705;
	st.u32 	[%rd15+12], %r9705;
	st.u32 	[%rd15+8], %r9705;
	st.u32 	[%rd15+4], %r9705;
	st.u32 	[%rd15], %r9705;
	st.u32 	[%rd14+12], %r9705;
	st.u32 	[%rd14+8], %r9705;
	mov.u64 	%rd2918, 0;
	st.u32 	[%rd14+4], %rd2918;
	st.u32 	[%rd14], %rd2918;
	bra.uni 	BB1_170;

BB1_62:
	setp.eq.s32	%p6, %r1, 30;
	@%p6 bra 	BB1_65;
	bra.uni 	BB1_63;

BB1_65:
	ld.u32 	%r713, [%rd21+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9702, %r9672, %r713, %r2;
	// inline asm
	ld.u32 	%r716, [%rd21+12];
	ld.u32 	%r717, [%rd21+8];
	// inline asm
	prmt.b32 %r9703, %r716, %r717, %r2;
	// inline asm
	ld.u32 	%r720, [%rd21+8];
	ld.u32 	%r721, [%rd21+4];
	// inline asm
	prmt.b32 %r9704, %r720, %r721, %r2;
	// inline asm
	ld.u32 	%r724, [%rd21+4];
	ld.u32 	%r725, [%rd21];
	// inline asm
	prmt.b32 %r9697, %r724, %r725, %r2;
	// inline asm
	ld.u32 	%r728, [%rd21];
	ld.u32 	%r729, [%rd20+12];
	// inline asm
	prmt.b32 %r9698, %r728, %r729, %r2;
	// inline asm
	ld.u32 	%r732, [%rd20+12];
	ld.u32 	%r733, [%rd20+8];
	// inline asm
	prmt.b32 %r9699, %r732, %r733, %r2;
	// inline asm
	ld.u32 	%r736, [%rd20+8];
	ld.u32 	%r737, [%rd20+4];
	// inline asm
	prmt.b32 %r9700, %r736, %r737, %r2;
	// inline asm
	ld.u32 	%r740, [%rd20+4];
	ld.u32 	%r741, [%rd20];
	// inline asm
	prmt.b32 %r9693, %r740, %r741, %r2;
	// inline asm
	ld.u32 	%r744, [%rd20];
	ld.u32 	%r745, [%rd19+12];
	// inline asm
	prmt.b32 %r9694, %r744, %r745, %r2;
	// inline asm
	ld.u32 	%r748, [%rd19+12];
	ld.u32 	%r749, [%rd19+8];
	// inline asm
	prmt.b32 %r9695, %r748, %r749, %r2;
	// inline asm
	ld.u32 	%r752, [%rd19+8];
	ld.u32 	%r753, [%rd19+4];
	// inline asm
	prmt.b32 %r9696, %r752, %r753, %r2;
	// inline asm
	ld.u32 	%r756, [%rd19+4];
	ld.u32 	%r757, [%rd19];
	// inline asm
	prmt.b32 %r9689, %r756, %r757, %r2;
	// inline asm
	ld.u32 	%r760, [%rd19];
	ld.u32 	%r761, [%rd18+12];
	// inline asm
	prmt.b32 %r9690, %r760, %r761, %r2;
	// inline asm
	ld.u32 	%r764, [%rd18+12];
	ld.u32 	%r765, [%rd18+8];
	// inline asm
	prmt.b32 %r9691, %r764, %r765, %r2;
	// inline asm
	ld.u32 	%r768, [%rd18+8];
	ld.u32 	%r769, [%rd18+4];
	// inline asm
	prmt.b32 %r9692, %r768, %r769, %r2;
	// inline asm
	ld.u32 	%r772, [%rd18+4];
	ld.u32 	%r773, [%rd18];
	// inline asm
	prmt.b32 %r9685, %r772, %r773, %r2;
	// inline asm
	ld.u32 	%r776, [%rd18];
	ld.u32 	%r777, [%rd17+12];
	// inline asm
	prmt.b32 %r9686, %r776, %r777, %r2;
	// inline asm
	ld.u32 	%r780, [%rd17+12];
	ld.u32 	%r781, [%rd17+8];
	// inline asm
	prmt.b32 %r9687, %r780, %r781, %r2;
	// inline asm
	ld.u32 	%r784, [%rd17+8];
	ld.u32 	%r785, [%rd17+4];
	// inline asm
	prmt.b32 %r9688, %r784, %r785, %r2;
	// inline asm
	ld.u32 	%r788, [%rd17+4];
	ld.u32 	%r789, [%rd17];
	// inline asm
	prmt.b32 %r9681, %r788, %r789, %r2;
	// inline asm
	ld.u32 	%r792, [%rd17];
	ld.u32 	%r793, [%rd16+12];
	// inline asm
	prmt.b32 %r9682, %r792, %r793, %r2;
	// inline asm
	ld.u32 	%r796, [%rd16+12];
	ld.u32 	%r797, [%rd16+8];
	// inline asm
	prmt.b32 %r9683, %r796, %r797, %r2;
	// inline asm
	ld.u32 	%r800, [%rd16+8];
	ld.u32 	%r801, [%rd16+4];
	// inline asm
	prmt.b32 %r9684, %r800, %r801, %r2;
	// inline asm
	ld.u32 	%r804, [%rd16+4];
	ld.u32 	%r805, [%rd16];
	// inline asm
	prmt.b32 %r9677, %r804, %r805, %r2;
	// inline asm
	ld.u32 	%r808, [%rd16];
	ld.u32 	%r809, [%rd15+12];
	// inline asm
	prmt.b32 %r9678, %r808, %r809, %r2;
	// inline asm
	ld.u32 	%r812, [%rd15+12];
	ld.u32 	%r813, [%rd15+8];
	// inline asm
	prmt.b32 %r9679, %r812, %r813, %r2;
	// inline asm
	ld.u32 	%r816, [%rd15+8];
	ld.u32 	%r817, [%rd15+4];
	// inline asm
	prmt.b32 %r9680, %r816, %r817, %r2;
	// inline asm
	ld.u32 	%r820, [%rd15+4];
	ld.u32 	%r821, [%rd15];
	// inline asm
	prmt.b32 %r9673, %r820, %r821, %r2;
	// inline asm
	ld.u32 	%r824, [%rd15];
	ld.u32 	%r825, [%rd14+12];
	// inline asm
	prmt.b32 %r9674, %r824, %r825, %r2;
	// inline asm
	ld.u32 	%r828, [%rd14+12];
	ld.u32 	%r829, [%rd14+8];
	// inline asm
	prmt.b32 %r9675, %r828, %r829, %r2;
	// inline asm
	ld.u32 	%r832, [%rd14+8];
	ld.u32 	%r833, [%rd14+4];
	// inline asm
	prmt.b32 %r9676, %r832, %r833, %r2;
	// inline asm
	ld.u32 	%r836, [%rd14+4];
	ld.u32 	%r837, [%rd14];
	// inline asm
	prmt.b32 %r835, %r836, %r837, %r2;
	// inline asm
	st.u32 	[%rd21+12], %r835;
	ld.u32 	%r840, [%rd14];
	// inline asm
	prmt.b32 %r839, %r840, %r9672, %r2;
	// inline asm
	st.u32 	[%rd21+8], %r839;
	st.u32 	[%rd21+4], %r9672;
	st.u32 	[%rd21], %r9672;
	st.u32 	[%rd20+12], %r9672;
	st.u32 	[%rd20+8], %r9672;
	st.u32 	[%rd20+4], %r9672;
	st.u32 	[%rd20], %r9672;
	st.u32 	[%rd19+12], %r9672;
	st.u32 	[%rd19+8], %r9672;
	st.u32 	[%rd19+4], %r9672;
	st.u32 	[%rd19], %r9672;
	st.u32 	[%rd18+12], %r9672;
	st.u32 	[%rd18+8], %r9672;
	st.u32 	[%rd18+4], %r9672;
	st.u32 	[%rd18], %r9672;
	st.u32 	[%rd17+12], %r9672;
	st.u32 	[%rd17+8], %r9672;
	st.u32 	[%rd17+4], %r9672;
	st.u32 	[%rd17], %r9672;
	st.u32 	[%rd16+12], %r9672;
	st.u32 	[%rd16+8], %r9672;
	st.u32 	[%rd16+4], %r9672;
	st.u32 	[%rd16], %r9672;
	st.u32 	[%rd15+12], %r9672;
	st.u32 	[%rd15+8], %r9672;
	st.u32 	[%rd15+4], %r9672;
	st.u32 	[%rd15], %r9672;
	st.u32 	[%rd14+12], %r9672;
	st.u32 	[%rd14+8], %r9672;
	mov.u64 	%rd24, 0;
	st.u32 	[%rd14+4], %rd24;
	st.u32 	[%rd14], %rd24;
	mov.u32 	%r9701, %r9672;
	bra.uni 	BB1_89;

BB1_95:
	setp.eq.s32	%p95, %r1, 1;
	@%p95 bra 	BB1_96;
	bra.uni 	BB1_169;

BB1_96:
	ld.u32 	%r9325, [%rd21+8];
	ld.u32 	%r9326, [%rd21+4];
	// inline asm
	prmt.b32 %r9324, %r9325, %r9326, %r2;
	// inline asm
	st.u32 	[%rd21+12], %r9324;
	ld.u32 	%r9329, [%rd21+4];
	ld.u32 	%r9330, [%rd21];
	// inline asm
	prmt.b32 %r9328, %r9329, %r9330, %r2;
	// inline asm
	st.u32 	[%rd21+8], %r9328;
	ld.u32 	%r9333, [%rd21];
	ld.u32 	%r9334, [%rd20+12];
	// inline asm
	prmt.b32 %r9332, %r9333, %r9334, %r2;
	// inline asm
	st.u32 	[%rd21+4], %r9332;
	ld.u32 	%r9337, [%rd20+12];
	ld.u32 	%r9338, [%rd20+8];
	// inline asm
	prmt.b32 %r9336, %r9337, %r9338, %r2;
	// inline asm
	st.u32 	[%rd21], %r9336;
	ld.u32 	%r9341, [%rd20+8];
	ld.u32 	%r9342, [%rd20+4];
	// inline asm
	prmt.b32 %r9340, %r9341, %r9342, %r2;
	// inline asm
	st.u32 	[%rd20+12], %r9340;
	ld.u32 	%r9345, [%rd20+4];
	ld.u32 	%r9346, [%rd20];
	// inline asm
	prmt.b32 %r9344, %r9345, %r9346, %r2;
	// inline asm
	st.u32 	[%rd20+8], %r9344;
	ld.u32 	%r9349, [%rd20];
	ld.u32 	%r9350, [%rd19+12];
	// inline asm
	prmt.b32 %r9348, %r9349, %r9350, %r2;
	// inline asm
	st.u32 	[%rd20+4], %r9348;
	ld.u32 	%r9353, [%rd19+12];
	ld.u32 	%r9354, [%rd19+8];
	// inline asm
	prmt.b32 %r9352, %r9353, %r9354, %r2;
	// inline asm
	st.u32 	[%rd20], %r9352;
	ld.u32 	%r9357, [%rd19+8];
	ld.u32 	%r9358, [%rd19+4];
	// inline asm
	prmt.b32 %r9356, %r9357, %r9358, %r2;
	// inline asm
	st.u32 	[%rd19+12], %r9356;
	ld.u32 	%r9361, [%rd19+4];
	ld.u32 	%r9362, [%rd19];
	// inline asm
	prmt.b32 %r9360, %r9361, %r9362, %r2;
	// inline asm
	st.u32 	[%rd19+8], %r9360;
	ld.u32 	%r9365, [%rd19];
	ld.u32 	%r9366, [%rd18+12];
	// inline asm
	prmt.b32 %r9364, %r9365, %r9366, %r2;
	// inline asm
	st.u32 	[%rd19+4], %r9364;
	ld.u32 	%r9369, [%rd18+12];
	ld.u32 	%r9370, [%rd18+8];
	// inline asm
	prmt.b32 %r9368, %r9369, %r9370, %r2;
	// inline asm
	st.u32 	[%rd19], %r9368;
	ld.u32 	%r9373, [%rd18+8];
	ld.u32 	%r9374, [%rd18+4];
	// inline asm
	prmt.b32 %r9372, %r9373, %r9374, %r2;
	// inline asm
	st.u32 	[%rd18+12], %r9372;
	ld.u32 	%r9377, [%rd18+4];
	ld.u32 	%r9378, [%rd18];
	// inline asm
	prmt.b32 %r9376, %r9377, %r9378, %r2;
	// inline asm
	st.u32 	[%rd18+8], %r9376;
	ld.u32 	%r9381, [%rd18];
	ld.u32 	%r9382, [%rd17+12];
	// inline asm
	prmt.b32 %r9380, %r9381, %r9382, %r2;
	// inline asm
	st.u32 	[%rd18+4], %r9380;
	ld.u32 	%r9385, [%rd17+12];
	ld.u32 	%r9386, [%rd17+8];
	// inline asm
	prmt.b32 %r9384, %r9385, %r9386, %r2;
	// inline asm
	st.u32 	[%rd18], %r9384;
	ld.u32 	%r9389, [%rd17+8];
	ld.u32 	%r9390, [%rd17+4];
	// inline asm
	prmt.b32 %r9388, %r9389, %r9390, %r2;
	// inline asm
	st.u32 	[%rd17+12], %r9388;
	ld.u32 	%r9393, [%rd17+4];
	ld.u32 	%r9394, [%rd17];
	// inline asm
	prmt.b32 %r9392, %r9393, %r9394, %r2;
	// inline asm
	st.u32 	[%rd17+8], %r9392;
	ld.u32 	%r9397, [%rd17];
	ld.u32 	%r9398, [%rd16+12];
	// inline asm
	prmt.b32 %r9396, %r9397, %r9398, %r2;
	// inline asm
	st.u32 	[%rd17+4], %r9396;
	ld.u32 	%r9401, [%rd16+12];
	ld.u32 	%r9402, [%rd16+8];
	// inline asm
	prmt.b32 %r9400, %r9401, %r9402, %r2;
	// inline asm
	st.u32 	[%rd17], %r9400;
	ld.u32 	%r9405, [%rd16+8];
	ld.u32 	%r9406, [%rd16+4];
	// inline asm
	prmt.b32 %r9404, %r9405, %r9406, %r2;
	// inline asm
	st.u32 	[%rd16+12], %r9404;
	ld.u32 	%r9409, [%rd16+4];
	ld.u32 	%r9410, [%rd16];
	// inline asm
	prmt.b32 %r9408, %r9409, %r9410, %r2;
	// inline asm
	st.u32 	[%rd16+8], %r9408;
	ld.u32 	%r9413, [%rd16];
	ld.u32 	%r9414, [%rd15+12];
	// inline asm
	prmt.b32 %r9412, %r9413, %r9414, %r2;
	// inline asm
	st.u32 	[%rd16+4], %r9412;
	ld.u32 	%r9417, [%rd15+12];
	ld.u32 	%r9418, [%rd15+8];
	// inline asm
	prmt.b32 %r9416, %r9417, %r9418, %r2;
	// inline asm
	st.u32 	[%rd16], %r9416;
	ld.u32 	%r9421, [%rd15+8];
	ld.u32 	%r9422, [%rd15+4];
	// inline asm
	prmt.b32 %r9420, %r9421, %r9422, %r2;
	// inline asm
	st.u32 	[%rd15+12], %r9420;
	ld.u32 	%r9425, [%rd15+4];
	ld.u32 	%r9426, [%rd15];
	// inline asm
	prmt.b32 %r9424, %r9425, %r9426, %r2;
	// inline asm
	st.u32 	[%rd15+8], %r9424;
	ld.u32 	%r9429, [%rd15];
	ld.u32 	%r9430, [%rd14+12];
	// inline asm
	prmt.b32 %r9428, %r9429, %r9430, %r2;
	// inline asm
	st.u32 	[%rd15+4], %r9428;
	ld.u32 	%r9433, [%rd14+12];
	ld.u32 	%r9434, [%rd14+8];
	// inline asm
	prmt.b32 %r9432, %r9433, %r9434, %r2;
	// inline asm
	st.u32 	[%rd15], %r9432;
	ld.u32 	%r9437, [%rd14+8];
	ld.u32 	%r9438, [%rd14+4];
	// inline asm
	prmt.b32 %r9436, %r9437, %r9438, %r2;
	// inline asm
	st.u32 	[%rd14+12], %r9436;
	ld.u32 	%r9441, [%rd14+4];
	ld.u32 	%r9442, [%rd14];
	// inline asm
	prmt.b32 %r9440, %r9441, %r9442, %r2;
	// inline asm
	st.u32 	[%rd14+8], %r9440;
	ld.u32 	%r9445, [%rd14];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r9444, %r9445, %r9705, %r2;
	// inline asm
	st.u32 	[%rd14+4], %r9444;
	st.u32 	[%rd14], %r9705;
	bra.uni 	BB1_170;

BB1_6:
	setp.eq.s32	%p48, %r1, 1;
	@%p48 bra 	BB1_7;
	bra.uni 	BB1_87;

BB1_7:
	ld.u32 	%r5005, [%rd21+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9675, %r9672, %r5005, %r2;
	// inline asm
	ld.u32 	%r5008, [%rd21+12];
	ld.u32 	%r5009, [%rd21+8];
	// inline asm
	prmt.b32 %r9676, %r5008, %r5009, %r2;
	// inline asm
	ld.u32 	%r5012, [%rd21+8];
	ld.u32 	%r5013, [%rd21+4];
	// inline asm
	prmt.b32 %r5011, %r5012, %r5013, %r2;
	// inline asm
	st.u32 	[%rd21+12], %r5011;
	ld.u32 	%r5016, [%rd21+4];
	ld.u32 	%r5017, [%rd21];
	// inline asm
	prmt.b32 %r5015, %r5016, %r5017, %r2;
	// inline asm
	st.u32 	[%rd21+8], %r5015;
	ld.u32 	%r5020, [%rd21];
	ld.u32 	%r5021, [%rd20+12];
	// inline asm
	prmt.b32 %r5019, %r5020, %r5021, %r2;
	// inline asm
	st.u32 	[%rd21+4], %r5019;
	ld.u32 	%r5024, [%rd20+12];
	ld.u32 	%r5025, [%rd20+8];
	// inline asm
	prmt.b32 %r5023, %r5024, %r5025, %r2;
	// inline asm
	st.u32 	[%rd21], %r5023;
	ld.u32 	%r5028, [%rd20+8];
	ld.u32 	%r5029, [%rd20+4];
	// inline asm
	prmt.b32 %r5027, %r5028, %r5029, %r2;
	// inline asm
	st.u32 	[%rd20+12], %r5027;
	ld.u32 	%r5032, [%rd20+4];
	ld.u32 	%r5033, [%rd20];
	// inline asm
	prmt.b32 %r5031, %r5032, %r5033, %r2;
	// inline asm
	st.u32 	[%rd20+8], %r5031;
	ld.u32 	%r5036, [%rd20];
	ld.u32 	%r5037, [%rd19+12];
	// inline asm
	prmt.b32 %r5035, %r5036, %r5037, %r2;
	// inline asm
	st.u32 	[%rd20+4], %r5035;
	ld.u32 	%r5040, [%rd19+12];
	ld.u32 	%r5041, [%rd19+8];
	// inline asm
	prmt.b32 %r5039, %r5040, %r5041, %r2;
	// inline asm
	st.u32 	[%rd20], %r5039;
	ld.u32 	%r5044, [%rd19+8];
	ld.u32 	%r5045, [%rd19+4];
	// inline asm
	prmt.b32 %r5043, %r5044, %r5045, %r2;
	// inline asm
	st.u32 	[%rd19+12], %r5043;
	ld.u32 	%r5048, [%rd19+4];
	ld.u32 	%r5049, [%rd19];
	// inline asm
	prmt.b32 %r5047, %r5048, %r5049, %r2;
	// inline asm
	st.u32 	[%rd19+8], %r5047;
	ld.u32 	%r5052, [%rd19];
	ld.u32 	%r5053, [%rd18+12];
	// inline asm
	prmt.b32 %r5051, %r5052, %r5053, %r2;
	// inline asm
	st.u32 	[%rd19+4], %r5051;
	ld.u32 	%r5056, [%rd18+12];
	ld.u32 	%r5057, [%rd18+8];
	// inline asm
	prmt.b32 %r5055, %r5056, %r5057, %r2;
	// inline asm
	st.u32 	[%rd19], %r5055;
	ld.u32 	%r5060, [%rd18+8];
	ld.u32 	%r5061, [%rd18+4];
	// inline asm
	prmt.b32 %r5059, %r5060, %r5061, %r2;
	// inline asm
	st.u32 	[%rd18+12], %r5059;
	ld.u32 	%r5064, [%rd18+4];
	ld.u32 	%r5065, [%rd18];
	// inline asm
	prmt.b32 %r5063, %r5064, %r5065, %r2;
	// inline asm
	st.u32 	[%rd18+8], %r5063;
	ld.u32 	%r5068, [%rd18];
	ld.u32 	%r5069, [%rd17+12];
	// inline asm
	prmt.b32 %r5067, %r5068, %r5069, %r2;
	// inline asm
	st.u32 	[%rd18+4], %r5067;
	ld.u32 	%r5072, [%rd17+12];
	ld.u32 	%r5073, [%rd17+8];
	// inline asm
	prmt.b32 %r5071, %r5072, %r5073, %r2;
	// inline asm
	st.u32 	[%rd18], %r5071;
	ld.u32 	%r5076, [%rd17+8];
	ld.u32 	%r5077, [%rd17+4];
	// inline asm
	prmt.b32 %r5075, %r5076, %r5077, %r2;
	// inline asm
	st.u32 	[%rd17+12], %r5075;
	ld.u32 	%r5080, [%rd17+4];
	ld.u32 	%r5081, [%rd17];
	// inline asm
	prmt.b32 %r5079, %r5080, %r5081, %r2;
	// inline asm
	st.u32 	[%rd17+8], %r5079;
	ld.u32 	%r5084, [%rd17];
	ld.u32 	%r5085, [%rd16+12];
	// inline asm
	prmt.b32 %r5083, %r5084, %r5085, %r2;
	// inline asm
	st.u32 	[%rd17+4], %r5083;
	ld.u32 	%r5088, [%rd16+12];
	ld.u32 	%r5089, [%rd16+8];
	// inline asm
	prmt.b32 %r5087, %r5088, %r5089, %r2;
	// inline asm
	st.u32 	[%rd17], %r5087;
	ld.u32 	%r5092, [%rd16+8];
	ld.u32 	%r5093, [%rd16+4];
	// inline asm
	prmt.b32 %r5091, %r5092, %r5093, %r2;
	// inline asm
	st.u32 	[%rd16+12], %r5091;
	ld.u32 	%r5096, [%rd16+4];
	ld.u32 	%r5097, [%rd16];
	// inline asm
	prmt.b32 %r5095, %r5096, %r5097, %r2;
	// inline asm
	st.u32 	[%rd16+8], %r5095;
	ld.u32 	%r5100, [%rd16];
	ld.u32 	%r5101, [%rd15+12];
	// inline asm
	prmt.b32 %r5099, %r5100, %r5101, %r2;
	// inline asm
	st.u32 	[%rd16+4], %r5099;
	ld.u32 	%r5104, [%rd15+12];
	ld.u32 	%r5105, [%rd15+8];
	// inline asm
	prmt.b32 %r5103, %r5104, %r5105, %r2;
	// inline asm
	st.u32 	[%rd16], %r5103;
	ld.u32 	%r5108, [%rd15+8];
	ld.u32 	%r5109, [%rd15+4];
	// inline asm
	prmt.b32 %r5107, %r5108, %r5109, %r2;
	// inline asm
	st.u32 	[%rd15+12], %r5107;
	ld.u32 	%r5112, [%rd15+4];
	ld.u32 	%r5113, [%rd15];
	// inline asm
	prmt.b32 %r5111, %r5112, %r5113, %r2;
	// inline asm
	st.u32 	[%rd15+8], %r5111;
	ld.u32 	%r5116, [%rd15];
	ld.u32 	%r5117, [%rd14+12];
	// inline asm
	prmt.b32 %r5115, %r5116, %r5117, %r2;
	// inline asm
	st.u32 	[%rd15+4], %r5115;
	ld.u32 	%r5120, [%rd14+12];
	ld.u32 	%r5121, [%rd14+8];
	// inline asm
	prmt.b32 %r5119, %r5120, %r5121, %r2;
	// inline asm
	st.u32 	[%rd15], %r5119;
	ld.u32 	%r5124, [%rd14+8];
	ld.u32 	%r5125, [%rd14+4];
	// inline asm
	prmt.b32 %r5123, %r5124, %r5125, %r2;
	// inline asm
	st.u32 	[%rd14+12], %r5123;
	ld.u32 	%r5128, [%rd14+4];
	ld.u32 	%r5129, [%rd14];
	// inline asm
	prmt.b32 %r5127, %r5128, %r5129, %r2;
	// inline asm
	st.u32 	[%rd14+8], %r5127;
	ld.u32 	%r5132, [%rd14];
	// inline asm
	prmt.b32 %r5131, %r5132, %r9672, %r2;
	// inline asm
	st.u32 	[%rd14+4], %r5131;
	st.u32 	[%rd14], %r9672;
	mov.u32 	%r9673, %r9672;
	mov.u32 	%r9674, %r9672;
	bra.uni 	BB1_11;

BB1_126:
	setp.eq.s32	%p72, %r1, 17;
	@%p72 bra 	BB1_127;
	bra.uni 	BB1_169;

BB1_127:
	ld.u32 	%r7869, [%rd17+8];
	ld.u32 	%r7870, [%rd17+4];
	// inline asm
	prmt.b32 %r7868, %r7869, %r7870, %r2;
	// inline asm
	st.u32 	[%rd21+12], %r7868;
	ld.u32 	%r7873, [%rd17+4];
	ld.u32 	%r7874, [%rd17];
	// inline asm
	prmt.b32 %r7872, %r7873, %r7874, %r2;
	// inline asm
	st.u32 	[%rd21+8], %r7872;
	ld.u32 	%r7877, [%rd17];
	ld.u32 	%r7878, [%rd16+12];
	// inline asm
	prmt.b32 %r7876, %r7877, %r7878, %r2;
	// inline asm
	st.u32 	[%rd21+4], %r7876;
	ld.u32 	%r7881, [%rd16+12];
	ld.u32 	%r7882, [%rd16+8];
	// inline asm
	prmt.b32 %r7880, %r7881, %r7882, %r2;
	// inline asm
	st.u32 	[%rd21], %r7880;
	ld.u32 	%r7885, [%rd16+8];
	ld.u32 	%r7886, [%rd16+4];
	// inline asm
	prmt.b32 %r7884, %r7885, %r7886, %r2;
	// inline asm
	st.u32 	[%rd20+12], %r7884;
	ld.u32 	%r7889, [%rd16+4];
	ld.u32 	%r7890, [%rd16];
	// inline asm
	prmt.b32 %r7888, %r7889, %r7890, %r2;
	// inline asm
	st.u32 	[%rd20+8], %r7888;
	ld.u32 	%r7893, [%rd16];
	ld.u32 	%r7894, [%rd15+12];
	// inline asm
	prmt.b32 %r7892, %r7893, %r7894, %r2;
	// inline asm
	st.u32 	[%rd20+4], %r7892;
	ld.u32 	%r7897, [%rd15+12];
	ld.u32 	%r7898, [%rd15+8];
	// inline asm
	prmt.b32 %r7896, %r7897, %r7898, %r2;
	// inline asm
	st.u32 	[%rd20], %r7896;
	ld.u32 	%r7901, [%rd15+8];
	ld.u32 	%r7902, [%rd15+4];
	// inline asm
	prmt.b32 %r7900, %r7901, %r7902, %r2;
	// inline asm
	st.u32 	[%rd19+12], %r7900;
	ld.u32 	%r7905, [%rd15+4];
	ld.u32 	%r7906, [%rd15];
	// inline asm
	prmt.b32 %r7904, %r7905, %r7906, %r2;
	// inline asm
	st.u32 	[%rd19+8], %r7904;
	ld.u32 	%r7909, [%rd15];
	ld.u32 	%r7910, [%rd14+12];
	// inline asm
	prmt.b32 %r7908, %r7909, %r7910, %r2;
	// inline asm
	st.u32 	[%rd19+4], %r7908;
	ld.u32 	%r7913, [%rd14+12];
	ld.u32 	%r7914, [%rd14+8];
	// inline asm
	prmt.b32 %r7912, %r7913, %r7914, %r2;
	// inline asm
	st.u32 	[%rd19], %r7912;
	ld.u32 	%r7917, [%rd14+8];
	ld.u32 	%r7918, [%rd14+4];
	// inline asm
	prmt.b32 %r7916, %r7917, %r7918, %r2;
	// inline asm
	st.u32 	[%rd18+12], %r7916;
	ld.u32 	%r7921, [%rd14+4];
	ld.u32 	%r7922, [%rd14];
	// inline asm
	prmt.b32 %r7920, %r7921, %r7922, %r2;
	// inline asm
	st.u32 	[%rd18+8], %r7920;
	ld.u32 	%r7925, [%rd14];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r7924, %r7925, %r9705, %r2;
	// inline asm
	st.u32 	[%rd18+4], %r7924;
	st.u32 	[%rd18], %r9705;
	st.u32 	[%rd17+12], %r9705;
	st.u32 	[%rd17+8], %r9705;
	st.u32 	[%rd17+4], %r9705;
	st.u32 	[%rd17], %r9705;
	st.u32 	[%rd16+12], %r9705;
	st.u32 	[%rd16+8], %r9705;
	st.u32 	[%rd16+4], %r9705;
	st.u32 	[%rd16], %r9705;
	st.u32 	[%rd15+12], %r9705;
	st.u32 	[%rd15+8], %r9705;
	st.u32 	[%rd15+4], %r9705;
	st.u32 	[%rd15], %r9705;
	st.u32 	[%rd14+12], %r9705;
	st.u32 	[%rd14+8], %r9705;
	mov.u64 	%rd2931, 0;
	st.u32 	[%rd14+4], %rd2931;
	st.u32 	[%rd14], %rd2931;
	bra.uni 	BB1_170;

BB1_38:
	setp.eq.s32	%p25, %r1, 17;
	@%p25 bra 	BB1_39;
	bra.uni 	BB1_87;

BB1_39:
	ld.u32 	%r2533, [%rd21+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9691, %r9672, %r2533, %r2;
	// inline asm
	ld.u32 	%r2536, [%rd21+12];
	ld.u32 	%r2537, [%rd21+8];
	// inline asm
	prmt.b32 %r9692, %r2536, %r2537, %r2;
	// inline asm
	ld.u32 	%r2540, [%rd21+8];
	ld.u32 	%r2541, [%rd21+4];
	// inline asm
	prmt.b32 %r9685, %r2540, %r2541, %r2;
	// inline asm
	ld.u32 	%r2544, [%rd21+4];
	ld.u32 	%r2545, [%rd21];
	// inline asm
	prmt.b32 %r9686, %r2544, %r2545, %r2;
	// inline asm
	ld.u32 	%r2548, [%rd21];
	ld.u32 	%r2549, [%rd20+12];
	// inline asm
	prmt.b32 %r9687, %r2548, %r2549, %r2;
	// inline asm
	ld.u32 	%r2552, [%rd20+12];
	ld.u32 	%r2553, [%rd20+8];
	// inline asm
	prmt.b32 %r9688, %r2552, %r2553, %r2;
	// inline asm
	ld.u32 	%r2556, [%rd20+8];
	ld.u32 	%r2557, [%rd20+4];
	// inline asm
	prmt.b32 %r9681, %r2556, %r2557, %r2;
	// inline asm
	ld.u32 	%r2560, [%rd20+4];
	ld.u32 	%r2561, [%rd20];
	// inline asm
	prmt.b32 %r9682, %r2560, %r2561, %r2;
	// inline asm
	ld.u32 	%r2564, [%rd20];
	ld.u32 	%r2565, [%rd19+12];
	// inline asm
	prmt.b32 %r9683, %r2564, %r2565, %r2;
	// inline asm
	ld.u32 	%r2568, [%rd19+12];
	ld.u32 	%r2569, [%rd19+8];
	// inline asm
	prmt.b32 %r9684, %r2568, %r2569, %r2;
	// inline asm
	ld.u32 	%r2572, [%rd19+8];
	ld.u32 	%r2573, [%rd19+4];
	// inline asm
	prmt.b32 %r9677, %r2572, %r2573, %r2;
	// inline asm
	ld.u32 	%r2576, [%rd19+4];
	ld.u32 	%r2577, [%rd19];
	// inline asm
	prmt.b32 %r9678, %r2576, %r2577, %r2;
	// inline asm
	ld.u32 	%r2580, [%rd19];
	ld.u32 	%r2581, [%rd18+12];
	// inline asm
	prmt.b32 %r9679, %r2580, %r2581, %r2;
	// inline asm
	ld.u32 	%r2584, [%rd18+12];
	ld.u32 	%r2585, [%rd18+8];
	// inline asm
	prmt.b32 %r9680, %r2584, %r2585, %r2;
	// inline asm
	ld.u32 	%r2588, [%rd18+8];
	ld.u32 	%r2589, [%rd18+4];
	// inline asm
	prmt.b32 %r9673, %r2588, %r2589, %r2;
	// inline asm
	ld.u32 	%r2592, [%rd18+4];
	ld.u32 	%r2593, [%rd18];
	// inline asm
	prmt.b32 %r9674, %r2592, %r2593, %r2;
	// inline asm
	ld.u32 	%r2596, [%rd18];
	ld.u32 	%r2597, [%rd17+12];
	// inline asm
	prmt.b32 %r9675, %r2596, %r2597, %r2;
	// inline asm
	ld.u32 	%r2600, [%rd17+12];
	ld.u32 	%r2601, [%rd17+8];
	// inline asm
	prmt.b32 %r9676, %r2600, %r2601, %r2;
	// inline asm
	ld.u32 	%r2604, [%rd17+8];
	ld.u32 	%r2605, [%rd17+4];
	// inline asm
	prmt.b32 %r2603, %r2604, %r2605, %r2;
	// inline asm
	st.u32 	[%rd21+12], %r2603;
	ld.u32 	%r2608, [%rd17+4];
	ld.u32 	%r2609, [%rd17];
	// inline asm
	prmt.b32 %r2607, %r2608, %r2609, %r2;
	// inline asm
	st.u32 	[%rd21+8], %r2607;
	ld.u32 	%r2612, [%rd17];
	ld.u32 	%r2613, [%rd16+12];
	// inline asm
	prmt.b32 %r2611, %r2612, %r2613, %r2;
	// inline asm
	st.u32 	[%rd21+4], %r2611;
	ld.u32 	%r2616, [%rd16+12];
	ld.u32 	%r2617, [%rd16+8];
	// inline asm
	prmt.b32 %r2615, %r2616, %r2617, %r2;
	// inline asm
	st.u32 	[%rd21], %r2615;
	ld.u32 	%r2620, [%rd16+8];
	ld.u32 	%r2621, [%rd16+4];
	// inline asm
	prmt.b32 %r2619, %r2620, %r2621, %r2;
	// inline asm
	st.u32 	[%rd20+12], %r2619;
	ld.u32 	%r2624, [%rd16+4];
	ld.u32 	%r2625, [%rd16];
	// inline asm
	prmt.b32 %r2623, %r2624, %r2625, %r2;
	// inline asm
	st.u32 	[%rd20+8], %r2623;
	ld.u32 	%r2628, [%rd16];
	ld.u32 	%r2629, [%rd15+12];
	// inline asm
	prmt.b32 %r2627, %r2628, %r2629, %r2;
	// inline asm
	st.u32 	[%rd20+4], %r2627;
	ld.u32 	%r2632, [%rd15+12];
	ld.u32 	%r2633, [%rd15+8];
	// inline asm
	prmt.b32 %r2631, %r2632, %r2633, %r2;
	// inline asm
	st.u32 	[%rd20], %r2631;
	ld.u32 	%r2636, [%rd15+8];
	ld.u32 	%r2637, [%rd15+4];
	// inline asm
	prmt.b32 %r2635, %r2636, %r2637, %r2;
	// inline asm
	st.u32 	[%rd19+12], %r2635;
	ld.u32 	%r2640, [%rd15+4];
	ld.u32 	%r2641, [%rd15];
	// inline asm
	prmt.b32 %r2639, %r2640, %r2641, %r2;
	// inline asm
	st.u32 	[%rd19+8], %r2639;
	ld.u32 	%r2644, [%rd15];
	ld.u32 	%r2645, [%rd14+12];
	// inline asm
	prmt.b32 %r2643, %r2644, %r2645, %r2;
	// inline asm
	st.u32 	[%rd19+4], %r2643;
	ld.u32 	%r2648, [%rd14+12];
	ld.u32 	%r2649, [%rd14+8];
	// inline asm
	prmt.b32 %r2647, %r2648, %r2649, %r2;
	// inline asm
	st.u32 	[%rd19], %r2647;
	ld.u32 	%r2652, [%rd14+8];
	ld.u32 	%r2653, [%rd14+4];
	// inline asm
	prmt.b32 %r2651, %r2652, %r2653, %r2;
	// inline asm
	st.u32 	[%rd18+12], %r2651;
	ld.u32 	%r2656, [%rd14+4];
	ld.u32 	%r2657, [%rd14];
	// inline asm
	prmt.b32 %r2655, %r2656, %r2657, %r2;
	// inline asm
	st.u32 	[%rd18+8], %r2655;
	ld.u32 	%r2660, [%rd14];
	// inline asm
	prmt.b32 %r2659, %r2660, %r9672, %r2;
	// inline asm
	st.u32 	[%rd18+4], %r2659;
	st.u32 	[%rd18], %r9672;
	st.u32 	[%rd17+12], %r9672;
	st.u32 	[%rd17+8], %r9672;
	st.u32 	[%rd17+4], %r9672;
	st.u32 	[%rd17], %r9672;
	st.u32 	[%rd16+12], %r9672;
	st.u32 	[%rd16+8], %r9672;
	st.u32 	[%rd16+4], %r9672;
	st.u32 	[%rd16], %r9672;
	st.u32 	[%rd15+12], %r9672;
	st.u32 	[%rd15+8], %r9672;
	st.u32 	[%rd15+4], %r9672;
	st.u32 	[%rd15], %r9672;
	st.u32 	[%rd14+12], %r9672;
	st.u32 	[%rd14+8], %r9672;
	mov.u64 	%rd37, 0;
	st.u32 	[%rd14+4], %rd37;
	st.u32 	[%rd14], %rd37;
	mov.u32 	%r9689, %r9672;
	mov.u32 	%r9690, %r9672;
	bra.uni 	BB1_82;

BB1_110:
	setp.eq.s32	%p84, %r1, 9;
	@%p84 bra 	BB1_111;
	bra.uni 	BB1_169;

BB1_111:
	ld.u32 	%r8469, [%rd19+8];
	ld.u32 	%r8470, [%rd19+4];
	// inline asm
	prmt.b32 %r8468, %r8469, %r8470, %r2;
	// inline asm
	st.u32 	[%rd21+12], %r8468;
	ld.u32 	%r8473, [%rd19+4];
	ld.u32 	%r8474, [%rd19];
	// inline asm
	prmt.b32 %r8472, %r8473, %r8474, %r2;
	// inline asm
	st.u32 	[%rd21+8], %r8472;
	ld.u32 	%r8477, [%rd19];
	ld.u32 	%r8478, [%rd18+12];
	// inline asm
	prmt.b32 %r8476, %r8477, %r8478, %r2;
	// inline asm
	st.u32 	[%rd21+4], %r8476;
	ld.u32 	%r8481, [%rd18+12];
	ld.u32 	%r8482, [%rd18+8];
	// inline asm
	prmt.b32 %r8480, %r8481, %r8482, %r2;
	// inline asm
	st.u32 	[%rd21], %r8480;
	ld.u32 	%r8485, [%rd18+8];
	ld.u32 	%r8486, [%rd18+4];
	// inline asm
	prmt.b32 %r8484, %r8485, %r8486, %r2;
	// inline asm
	st.u32 	[%rd20+12], %r8484;
	ld.u32 	%r8489, [%rd18+4];
	ld.u32 	%r8490, [%rd18];
	// inline asm
	prmt.b32 %r8488, %r8489, %r8490, %r2;
	// inline asm
	st.u32 	[%rd20+8], %r8488;
	ld.u32 	%r8493, [%rd18];
	ld.u32 	%r8494, [%rd17+12];
	// inline asm
	prmt.b32 %r8492, %r8493, %r8494, %r2;
	// inline asm
	st.u32 	[%rd20+4], %r8492;
	ld.u32 	%r8497, [%rd17+12];
	ld.u32 	%r8498, [%rd17+8];
	// inline asm
	prmt.b32 %r8496, %r8497, %r8498, %r2;
	// inline asm
	st.u32 	[%rd20], %r8496;
	ld.u32 	%r8501, [%rd17+8];
	ld.u32 	%r8502, [%rd17+4];
	// inline asm
	prmt.b32 %r8500, %r8501, %r8502, %r2;
	// inline asm
	st.u32 	[%rd19+12], %r8500;
	ld.u32 	%r8505, [%rd17+4];
	ld.u32 	%r8506, [%rd17];
	// inline asm
	prmt.b32 %r8504, %r8505, %r8506, %r2;
	// inline asm
	st.u32 	[%rd19+8], %r8504;
	ld.u32 	%r8509, [%rd17];
	ld.u32 	%r8510, [%rd16+12];
	// inline asm
	prmt.b32 %r8508, %r8509, %r8510, %r2;
	// inline asm
	st.u32 	[%rd19+4], %r8508;
	ld.u32 	%r8513, [%rd16+12];
	ld.u32 	%r8514, [%rd16+8];
	// inline asm
	prmt.b32 %r8512, %r8513, %r8514, %r2;
	// inline asm
	st.u32 	[%rd19], %r8512;
	ld.u32 	%r8517, [%rd16+8];
	ld.u32 	%r8518, [%rd16+4];
	// inline asm
	prmt.b32 %r8516, %r8517, %r8518, %r2;
	// inline asm
	st.u32 	[%rd18+12], %r8516;
	ld.u32 	%r8521, [%rd16+4];
	ld.u32 	%r8522, [%rd16];
	// inline asm
	prmt.b32 %r8520, %r8521, %r8522, %r2;
	// inline asm
	st.u32 	[%rd18+8], %r8520;
	ld.u32 	%r8525, [%rd16];
	ld.u32 	%r8526, [%rd15+12];
	// inline asm
	prmt.b32 %r8524, %r8525, %r8526, %r2;
	// inline asm
	st.u32 	[%rd18+4], %r8524;
	ld.u32 	%r8529, [%rd15+12];
	ld.u32 	%r8530, [%rd15+8];
	// inline asm
	prmt.b32 %r8528, %r8529, %r8530, %r2;
	// inline asm
	st.u32 	[%rd18], %r8528;
	ld.u32 	%r8533, [%rd15+8];
	ld.u32 	%r8534, [%rd15+4];
	// inline asm
	prmt.b32 %r8532, %r8533, %r8534, %r2;
	// inline asm
	st.u32 	[%rd17+12], %r8532;
	ld.u32 	%r8537, [%rd15+4];
	ld.u32 	%r8538, [%rd15];
	// inline asm
	prmt.b32 %r8536, %r8537, %r8538, %r2;
	// inline asm
	st.u32 	[%rd17+8], %r8536;
	ld.u32 	%r8541, [%rd15];
	ld.u32 	%r8542, [%rd14+12];
	// inline asm
	prmt.b32 %r8540, %r8541, %r8542, %r2;
	// inline asm
	st.u32 	[%rd17+4], %r8540;
	ld.u32 	%r8545, [%rd14+12];
	ld.u32 	%r8546, [%rd14+8];
	// inline asm
	prmt.b32 %r8544, %r8545, %r8546, %r2;
	// inline asm
	st.u32 	[%rd17], %r8544;
	ld.u32 	%r8549, [%rd14+8];
	ld.u32 	%r8550, [%rd14+4];
	// inline asm
	prmt.b32 %r8548, %r8549, %r8550, %r2;
	// inline asm
	st.u32 	[%rd16+12], %r8548;
	ld.u32 	%r8553, [%rd14+4];
	ld.u32 	%r8554, [%rd14];
	// inline asm
	prmt.b32 %r8552, %r8553, %r8554, %r2;
	// inline asm
	st.u32 	[%rd16+8], %r8552;
	ld.u32 	%r8557, [%rd14];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r8556, %r8557, %r9705, %r2;
	// inline asm
	st.u32 	[%rd16+4], %r8556;
	st.u32 	[%rd16], %r9705;
	st.u32 	[%rd15+12], %r9705;
	st.u32 	[%rd15+8], %r9705;
	st.u32 	[%rd15+4], %r9705;
	st.u32 	[%rd15], %r9705;
	st.u32 	[%rd14+12], %r9705;
	st.u32 	[%rd14+8], %r9705;
	mov.u64 	%rd2939, 0;
	st.u32 	[%rd14+4], %rd2939;
	st.u32 	[%rd14], %rd2939;
	bra.uni 	BB1_170;

BB1_22:
	setp.eq.s32	%p37, %r1, 9;
	@%p37 bra 	BB1_23;
	bra.uni 	BB1_87;

BB1_23:
	ld.u32 	%r3737, [%rd21+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9683, %r9672, %r3737, %r2;
	// inline asm
	ld.u32 	%r3740, [%rd21+12];
	ld.u32 	%r3741, [%rd21+8];
	// inline asm
	prmt.b32 %r9684, %r3740, %r3741, %r2;
	// inline asm
	ld.u32 	%r3744, [%rd21+8];
	ld.u32 	%r3745, [%rd21+4];
	// inline asm
	prmt.b32 %r9677, %r3744, %r3745, %r2;
	// inline asm
	ld.u32 	%r3748, [%rd21+4];
	ld.u32 	%r3749, [%rd21];
	// inline asm
	prmt.b32 %r9678, %r3748, %r3749, %r2;
	// inline asm
	ld.u32 	%r3752, [%rd21];
	ld.u32 	%r3753, [%rd20+12];
	// inline asm
	prmt.b32 %r9679, %r3752, %r3753, %r2;
	// inline asm
	ld.u32 	%r3756, [%rd20+12];
	ld.u32 	%r3757, [%rd20+8];
	// inline asm
	prmt.b32 %r9680, %r3756, %r3757, %r2;
	// inline asm
	ld.u32 	%r3760, [%rd20+8];
	ld.u32 	%r3761, [%rd20+4];
	// inline asm
	prmt.b32 %r9673, %r3760, %r3761, %r2;
	// inline asm
	ld.u32 	%r3764, [%rd20+4];
	ld.u32 	%r3765, [%rd20];
	// inline asm
	prmt.b32 %r9674, %r3764, %r3765, %r2;
	// inline asm
	ld.u32 	%r3768, [%rd20];
	ld.u32 	%r3769, [%rd19+12];
	// inline asm
	prmt.b32 %r9675, %r3768, %r3769, %r2;
	// inline asm
	ld.u32 	%r3772, [%rd19+12];
	ld.u32 	%r3773, [%rd19+8];
	// inline asm
	prmt.b32 %r9676, %r3772, %r3773, %r2;
	// inline asm
	ld.u32 	%r3776, [%rd19+8];
	ld.u32 	%r3777, [%rd19+4];
	// inline asm
	prmt.b32 %r3775, %r3776, %r3777, %r2;
	// inline asm
	st.u32 	[%rd21+12], %r3775;
	ld.u32 	%r3780, [%rd19+4];
	ld.u32 	%r3781, [%rd19];
	// inline asm
	prmt.b32 %r3779, %r3780, %r3781, %r2;
	// inline asm
	st.u32 	[%rd21+8], %r3779;
	ld.u32 	%r3784, [%rd19];
	ld.u32 	%r3785, [%rd18+12];
	// inline asm
	prmt.b32 %r3783, %r3784, %r3785, %r2;
	// inline asm
	st.u32 	[%rd21+4], %r3783;
	ld.u32 	%r3788, [%rd18+12];
	ld.u32 	%r3789, [%rd18+8];
	// inline asm
	prmt.b32 %r3787, %r3788, %r3789, %r2;
	// inline asm
	st.u32 	[%rd21], %r3787;
	ld.u32 	%r3792, [%rd18+8];
	ld.u32 	%r3793, [%rd18+4];
	// inline asm
	prmt.b32 %r3791, %r3792, %r3793, %r2;
	// inline asm
	st.u32 	[%rd20+12], %r3791;
	ld.u32 	%r3796, [%rd18+4];
	ld.u32 	%r3797, [%rd18];
	// inline asm
	prmt.b32 %r3795, %r3796, %r3797, %r2;
	// inline asm
	st.u32 	[%rd20+8], %r3795;
	ld.u32 	%r3800, [%rd18];
	ld.u32 	%r3801, [%rd17+12];
	// inline asm
	prmt.b32 %r3799, %r3800, %r3801, %r2;
	// inline asm
	st.u32 	[%rd20+4], %r3799;
	ld.u32 	%r3804, [%rd17+12];
	ld.u32 	%r3805, [%rd17+8];
	// inline asm
	prmt.b32 %r3803, %r3804, %r3805, %r2;
	// inline asm
	st.u32 	[%rd20], %r3803;
	ld.u32 	%r3808, [%rd17+8];
	ld.u32 	%r3809, [%rd17+4];
	// inline asm
	prmt.b32 %r3807, %r3808, %r3809, %r2;
	// inline asm
	st.u32 	[%rd19+12], %r3807;
	ld.u32 	%r3812, [%rd17+4];
	ld.u32 	%r3813, [%rd17];
	// inline asm
	prmt.b32 %r3811, %r3812, %r3813, %r2;
	// inline asm
	st.u32 	[%rd19+8], %r3811;
	ld.u32 	%r3816, [%rd17];
	ld.u32 	%r3817, [%rd16+12];
	// inline asm
	prmt.b32 %r3815, %r3816, %r3817, %r2;
	// inline asm
	st.u32 	[%rd19+4], %r3815;
	ld.u32 	%r3820, [%rd16+12];
	ld.u32 	%r3821, [%rd16+8];
	// inline asm
	prmt.b32 %r3819, %r3820, %r3821, %r2;
	// inline asm
	st.u32 	[%rd19], %r3819;
	ld.u32 	%r3824, [%rd16+8];
	ld.u32 	%r3825, [%rd16+4];
	// inline asm
	prmt.b32 %r3823, %r3824, %r3825, %r2;
	// inline asm
	st.u32 	[%rd18+12], %r3823;
	ld.u32 	%r3828, [%rd16+4];
	ld.u32 	%r3829, [%rd16];
	// inline asm
	prmt.b32 %r3827, %r3828, %r3829, %r2;
	// inline asm
	st.u32 	[%rd18+8], %r3827;
	ld.u32 	%r3832, [%rd16];
	ld.u32 	%r3833, [%rd15+12];
	// inline asm
	prmt.b32 %r3831, %r3832, %r3833, %r2;
	// inline asm
	st.u32 	[%rd18+4], %r3831;
	ld.u32 	%r3836, [%rd15+12];
	ld.u32 	%r3837, [%rd15+8];
	// inline asm
	prmt.b32 %r3835, %r3836, %r3837, %r2;
	// inline asm
	st.u32 	[%rd18], %r3835;
	ld.u32 	%r3840, [%rd15+8];
	ld.u32 	%r3841, [%rd15+4];
	// inline asm
	prmt.b32 %r3839, %r3840, %r3841, %r2;
	// inline asm
	st.u32 	[%rd17+12], %r3839;
	ld.u32 	%r3844, [%rd15+4];
	ld.u32 	%r3845, [%rd15];
	// inline asm
	prmt.b32 %r3843, %r3844, %r3845, %r2;
	// inline asm
	st.u32 	[%rd17+8], %r3843;
	ld.u32 	%r3848, [%rd15];
	ld.u32 	%r3849, [%rd14+12];
	// inline asm
	prmt.b32 %r3847, %r3848, %r3849, %r2;
	// inline asm
	st.u32 	[%rd17+4], %r3847;
	ld.u32 	%r3852, [%rd14+12];
	ld.u32 	%r3853, [%rd14+8];
	// inline asm
	prmt.b32 %r3851, %r3852, %r3853, %r2;
	// inline asm
	st.u32 	[%rd17], %r3851;
	ld.u32 	%r3856, [%rd14+8];
	ld.u32 	%r3857, [%rd14+4];
	// inline asm
	prmt.b32 %r3855, %r3856, %r3857, %r2;
	// inline asm
	st.u32 	[%rd16+12], %r3855;
	ld.u32 	%r3860, [%rd14+4];
	ld.u32 	%r3861, [%rd14];
	// inline asm
	prmt.b32 %r3859, %r3860, %r3861, %r2;
	// inline asm
	st.u32 	[%rd16+8], %r3859;
	ld.u32 	%r3864, [%rd14];
	// inline asm
	prmt.b32 %r3863, %r3864, %r9672, %r2;
	// inline asm
	st.u32 	[%rd16+4], %r3863;
	st.u32 	[%rd16], %r9672;
	st.u32 	[%rd15+12], %r9672;
	st.u32 	[%rd15+8], %r9672;
	st.u32 	[%rd15+4], %r9672;
	st.u32 	[%rd15], %r9672;
	st.u32 	[%rd14+12], %r9672;
	st.u32 	[%rd14+8], %r9672;
	mov.u64 	%rd45, 0;
	st.u32 	[%rd14+4], %rd45;
	st.u32 	[%rd14], %rd45;
	mov.u32 	%r9681, %r9672;
	mov.u32 	%r9682, %r9672;
	bra.uni 	BB1_80;

BB1_141:
	setp.eq.s32	%p61, %r1, 25;
	@%p61 bra 	BB1_142;
	bra.uni 	BB1_169;

BB1_142:
	ld.u32 	%r7525, [%rd15+8];
	ld.u32 	%r7526, [%rd15+4];
	// inline asm
	prmt.b32 %r7524, %r7525, %r7526, %r2;
	// inline asm
	st.u32 	[%rd21+12], %r7524;
	ld.u32 	%r7529, [%rd15+4];
	ld.u32 	%r7530, [%rd15];
	// inline asm
	prmt.b32 %r7528, %r7529, %r7530, %r2;
	// inline asm
	st.u32 	[%rd21+8], %r7528;
	ld.u32 	%r7533, [%rd15];
	ld.u32 	%r7534, [%rd14+12];
	// inline asm
	prmt.b32 %r7532, %r7533, %r7534, %r2;
	// inline asm
	st.u32 	[%rd21+4], %r7532;
	ld.u32 	%r7537, [%rd14+12];
	ld.u32 	%r7538, [%rd14+8];
	// inline asm
	prmt.b32 %r7536, %r7537, %r7538, %r2;
	// inline asm
	st.u32 	[%rd21], %r7536;
	ld.u32 	%r7541, [%rd14+8];
	ld.u32 	%r7542, [%rd14+4];
	// inline asm
	prmt.b32 %r7540, %r7541, %r7542, %r2;
	// inline asm
	st.u32 	[%rd20+12], %r7540;
	ld.u32 	%r7545, [%rd14+4];
	ld.u32 	%r7546, [%rd14];
	// inline asm
	prmt.b32 %r7544, %r7545, %r7546, %r2;
	// inline asm
	st.u32 	[%rd20+8], %r7544;
	ld.u32 	%r7549, [%rd14];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r7548, %r7549, %r9705, %r2;
	// inline asm
	st.u32 	[%rd20+4], %r7548;
	st.u32 	[%rd20], %r9705;
	st.u32 	[%rd19+12], %r9705;
	st.u32 	[%rd19+8], %r9705;
	st.u32 	[%rd19+4], %r9705;
	st.u32 	[%rd19], %r9705;
	st.u32 	[%rd18+12], %r9705;
	st.u32 	[%rd18+8], %r9705;
	st.u32 	[%rd18+4], %r9705;
	st.u32 	[%rd18], %r9705;
	st.u32 	[%rd17+12], %r9705;
	st.u32 	[%rd17+8], %r9705;
	st.u32 	[%rd17+4], %r9705;
	st.u32 	[%rd17], %r9705;
	st.u32 	[%rd16+12], %r9705;
	st.u32 	[%rd16+8], %r9705;
	st.u32 	[%rd16+4], %r9705;
	st.u32 	[%rd16], %r9705;
	st.u32 	[%rd15+12], %r9705;
	st.u32 	[%rd15+8], %r9705;
	st.u32 	[%rd15+4], %r9705;
	st.u32 	[%rd15], %r9705;
	st.u32 	[%rd14+12], %r9705;
	st.u32 	[%rd14+8], %r9705;
	mov.u64 	%rd2923, 0;
	st.u32 	[%rd14+4], %rd2923;
	st.u32 	[%rd14], %rd2923;
	bra.uni 	BB1_170;

BB1_53:
	setp.eq.s32	%p14, %r1, 25;
	@%p14 bra 	BB1_54;
	bra.uni 	BB1_87;

BB1_54:
	ld.u32 	%r1393, [%rd21+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9699, %r9672, %r1393, %r2;
	// inline asm
	ld.u32 	%r1396, [%rd21+12];
	ld.u32 	%r1397, [%rd21+8];
	// inline asm
	prmt.b32 %r9700, %r1396, %r1397, %r2;
	// inline asm
	ld.u32 	%r1400, [%rd21+8];
	ld.u32 	%r1401, [%rd21+4];
	// inline asm
	prmt.b32 %r9693, %r1400, %r1401, %r2;
	// inline asm
	ld.u32 	%r1404, [%rd21+4];
	ld.u32 	%r1405, [%rd21];
	// inline asm
	prmt.b32 %r9694, %r1404, %r1405, %r2;
	// inline asm
	ld.u32 	%r1408, [%rd21];
	ld.u32 	%r1409, [%rd20+12];
	// inline asm
	prmt.b32 %r9695, %r1408, %r1409, %r2;
	// inline asm
	ld.u32 	%r1412, [%rd20+12];
	ld.u32 	%r1413, [%rd20+8];
	// inline asm
	prmt.b32 %r9696, %r1412, %r1413, %r2;
	// inline asm
	ld.u32 	%r1416, [%rd20+8];
	ld.u32 	%r1417, [%rd20+4];
	// inline asm
	prmt.b32 %r9689, %r1416, %r1417, %r2;
	// inline asm
	ld.u32 	%r1420, [%rd20+4];
	ld.u32 	%r1421, [%rd20];
	// inline asm
	prmt.b32 %r9690, %r1420, %r1421, %r2;
	// inline asm
	ld.u32 	%r1424, [%rd20];
	ld.u32 	%r1425, [%rd19+12];
	// inline asm
	prmt.b32 %r9691, %r1424, %r1425, %r2;
	// inline asm
	ld.u32 	%r1428, [%rd19+12];
	ld.u32 	%r1429, [%rd19+8];
	// inline asm
	prmt.b32 %r9692, %r1428, %r1429, %r2;
	// inline asm
	ld.u32 	%r1432, [%rd19+8];
	ld.u32 	%r1433, [%rd19+4];
	// inline asm
	prmt.b32 %r9685, %r1432, %r1433, %r2;
	// inline asm
	ld.u32 	%r1436, [%rd19+4];
	ld.u32 	%r1437, [%rd19];
	// inline asm
	prmt.b32 %r9686, %r1436, %r1437, %r2;
	// inline asm
	ld.u32 	%r1440, [%rd19];
	ld.u32 	%r1441, [%rd18+12];
	// inline asm
	prmt.b32 %r9687, %r1440, %r1441, %r2;
	// inline asm
	ld.u32 	%r1444, [%rd18+12];
	ld.u32 	%r1445, [%rd18+8];
	// inline asm
	prmt.b32 %r9688, %r1444, %r1445, %r2;
	// inline asm
	ld.u32 	%r1448, [%rd18+8];
	ld.u32 	%r1449, [%rd18+4];
	// inline asm
	prmt.b32 %r9681, %r1448, %r1449, %r2;
	// inline asm
	ld.u32 	%r1452, [%rd18+4];
	ld.u32 	%r1453, [%rd18];
	// inline asm
	prmt.b32 %r9682, %r1452, %r1453, %r2;
	// inline asm
	ld.u32 	%r1456, [%rd18];
	ld.u32 	%r1457, [%rd17+12];
	// inline asm
	prmt.b32 %r9683, %r1456, %r1457, %r2;
	// inline asm
	ld.u32 	%r1460, [%rd17+12];
	ld.u32 	%r1461, [%rd17+8];
	// inline asm
	prmt.b32 %r9684, %r1460, %r1461, %r2;
	// inline asm
	ld.u32 	%r1464, [%rd17+8];
	ld.u32 	%r1465, [%rd17+4];
	// inline asm
	prmt.b32 %r9677, %r1464, %r1465, %r2;
	// inline asm
	ld.u32 	%r1468, [%rd17+4];
	ld.u32 	%r1469, [%rd17];
	// inline asm
	prmt.b32 %r9678, %r1468, %r1469, %r2;
	// inline asm
	ld.u32 	%r1472, [%rd17];
	ld.u32 	%r1473, [%rd16+12];
	// inline asm
	prmt.b32 %r9679, %r1472, %r1473, %r2;
	// inline asm
	ld.u32 	%r1476, [%rd16+12];
	ld.u32 	%r1477, [%rd16+8];
	// inline asm
	prmt.b32 %r9680, %r1476, %r1477, %r2;
	// inline asm
	ld.u32 	%r1480, [%rd16+8];
	ld.u32 	%r1481, [%rd16+4];
	// inline asm
	prmt.b32 %r9673, %r1480, %r1481, %r2;
	// inline asm
	ld.u32 	%r1484, [%rd16+4];
	ld.u32 	%r1485, [%rd16];
	// inline asm
	prmt.b32 %r9674, %r1484, %r1485, %r2;
	// inline asm
	ld.u32 	%r1488, [%rd16];
	ld.u32 	%r1489, [%rd15+12];
	// inline asm
	prmt.b32 %r9675, %r1488, %r1489, %r2;
	// inline asm
	ld.u32 	%r1492, [%rd15+12];
	ld.u32 	%r1493, [%rd15+8];
	// inline asm
	prmt.b32 %r9676, %r1492, %r1493, %r2;
	// inline asm
	ld.u32 	%r1496, [%rd15+8];
	ld.u32 	%r1497, [%rd15+4];
	// inline asm
	prmt.b32 %r1495, %r1496, %r1497, %r2;
	// inline asm
	st.u32 	[%rd21+12], %r1495;
	ld.u32 	%r1500, [%rd15+4];
	ld.u32 	%r1501, [%rd15];
	// inline asm
	prmt.b32 %r1499, %r1500, %r1501, %r2;
	// inline asm
	st.u32 	[%rd21+8], %r1499;
	ld.u32 	%r1504, [%rd15];
	ld.u32 	%r1505, [%rd14+12];
	// inline asm
	prmt.b32 %r1503, %r1504, %r1505, %r2;
	// inline asm
	st.u32 	[%rd21+4], %r1503;
	ld.u32 	%r1508, [%rd14+12];
	ld.u32 	%r1509, [%rd14+8];
	// inline asm
	prmt.b32 %r1507, %r1508, %r1509, %r2;
	// inline asm
	st.u32 	[%rd21], %r1507;
	ld.u32 	%r1512, [%rd14+8];
	ld.u32 	%r1513, [%rd14+4];
	// inline asm
	prmt.b32 %r1511, %r1512, %r1513, %r2;
	// inline asm
	st.u32 	[%rd20+12], %r1511;
	ld.u32 	%r1516, [%rd14+4];
	ld.u32 	%r1517, [%rd14];
	// inline asm
	prmt.b32 %r1515, %r1516, %r1517, %r2;
	// inline asm
	st.u32 	[%rd20+8], %r1515;
	ld.u32 	%r1520, [%rd14];
	// inline asm
	prmt.b32 %r1519, %r1520, %r9672, %r2;
	// inline asm
	st.u32 	[%rd20+4], %r1519;
	st.u32 	[%rd20], %r9672;
	st.u32 	[%rd19+12], %r9672;
	st.u32 	[%rd19+8], %r9672;
	st.u32 	[%rd19+4], %r9672;
	st.u32 	[%rd19], %r9672;
	st.u32 	[%rd18+12], %r9672;
	st.u32 	[%rd18+8], %r9672;
	st.u32 	[%rd18+4], %r9672;
	st.u32 	[%rd18], %r9672;
	st.u32 	[%rd17+12], %r9672;
	st.u32 	[%rd17+8], %r9672;
	st.u32 	[%rd17+4], %r9672;
	st.u32 	[%rd17], %r9672;
	st.u32 	[%rd16+12], %r9672;
	st.u32 	[%rd16+8], %r9672;
	st.u32 	[%rd16+4], %r9672;
	st.u32 	[%rd16], %r9672;
	st.u32 	[%rd15+12], %r9672;
	st.u32 	[%rd15+8], %r9672;
	st.u32 	[%rd15+4], %r9672;
	st.u32 	[%rd15], %r9672;
	st.u32 	[%rd14+12], %r9672;
	st.u32 	[%rd14+8], %r9672;
	mov.u64 	%rd29, 0;
	st.u32 	[%rd14+4], %rd29;
	st.u32 	[%rd14], %rd29;
	mov.u32 	%r9697, %r9672;
	mov.u32 	%r9698, %r9672;
	bra.uni 	BB1_84;

BB1_102:
	setp.eq.s32	%p90, %r1, 5;
	@%p90 bra 	BB1_103;
	bra.uni 	BB1_169;

BB1_103:
	ld.u32 	%r8865, [%rd20+8];
	ld.u32 	%r8866, [%rd20+4];
	// inline asm
	prmt.b32 %r8864, %r8865, %r8866, %r2;
	// inline asm
	st.u32 	[%rd21+12], %r8864;
	ld.u32 	%r8869, [%rd20+4];
	ld.u32 	%r8870, [%rd20];
	// inline asm
	prmt.b32 %r8868, %r8869, %r8870, %r2;
	// inline asm
	st.u32 	[%rd21+8], %r8868;
	ld.u32 	%r8873, [%rd20];
	ld.u32 	%r8874, [%rd19+12];
	// inline asm
	prmt.b32 %r8872, %r8873, %r8874, %r2;
	// inline asm
	st.u32 	[%rd21+4], %r8872;
	ld.u32 	%r8877, [%rd19+12];
	ld.u32 	%r8878, [%rd19+8];
	// inline asm
	prmt.b32 %r8876, %r8877, %r8878, %r2;
	// inline asm
	st.u32 	[%rd21], %r8876;
	ld.u32 	%r8881, [%rd19+8];
	ld.u32 	%r8882, [%rd19+4];
	// inline asm
	prmt.b32 %r8880, %r8881, %r8882, %r2;
	// inline asm
	st.u32 	[%rd20+12], %r8880;
	ld.u32 	%r8885, [%rd19+4];
	ld.u32 	%r8886, [%rd19];
	// inline asm
	prmt.b32 %r8884, %r8885, %r8886, %r2;
	// inline asm
	st.u32 	[%rd20+8], %r8884;
	ld.u32 	%r8889, [%rd19];
	ld.u32 	%r8890, [%rd18+12];
	// inline asm
	prmt.b32 %r8888, %r8889, %r8890, %r2;
	// inline asm
	st.u32 	[%rd20+4], %r8888;
	ld.u32 	%r8893, [%rd18+12];
	ld.u32 	%r8894, [%rd18+8];
	// inline asm
	prmt.b32 %r8892, %r8893, %r8894, %r2;
	// inline asm
	st.u32 	[%rd20], %r8892;
	ld.u32 	%r8897, [%rd18+8];
	ld.u32 	%r8898, [%rd18+4];
	// inline asm
	prmt.b32 %r8896, %r8897, %r8898, %r2;
	// inline asm
	st.u32 	[%rd19+12], %r8896;
	ld.u32 	%r8901, [%rd18+4];
	ld.u32 	%r8902, [%rd18];
	// inline asm
	prmt.b32 %r8900, %r8901, %r8902, %r2;
	// inline asm
	st.u32 	[%rd19+8], %r8900;
	ld.u32 	%r8905, [%rd18];
	ld.u32 	%r8906, [%rd17+12];
	// inline asm
	prmt.b32 %r8904, %r8905, %r8906, %r2;
	// inline asm
	st.u32 	[%rd19+4], %r8904;
	ld.u32 	%r8909, [%rd17+12];
	ld.u32 	%r8910, [%rd17+8];
	// inline asm
	prmt.b32 %r8908, %r8909, %r8910, %r2;
	// inline asm
	st.u32 	[%rd19], %r8908;
	ld.u32 	%r8913, [%rd17+8];
	ld.u32 	%r8914, [%rd17+4];
	// inline asm
	prmt.b32 %r8912, %r8913, %r8914, %r2;
	// inline asm
	st.u32 	[%rd18+12], %r8912;
	ld.u32 	%r8917, [%rd17+4];
	ld.u32 	%r8918, [%rd17];
	// inline asm
	prmt.b32 %r8916, %r8917, %r8918, %r2;
	// inline asm
	st.u32 	[%rd18+8], %r8916;
	ld.u32 	%r8921, [%rd17];
	ld.u32 	%r8922, [%rd16+12];
	// inline asm
	prmt.b32 %r8920, %r8921, %r8922, %r2;
	// inline asm
	st.u32 	[%rd18+4], %r8920;
	ld.u32 	%r8925, [%rd16+12];
	ld.u32 	%r8926, [%rd16+8];
	// inline asm
	prmt.b32 %r8924, %r8925, %r8926, %r2;
	// inline asm
	st.u32 	[%rd18], %r8924;
	ld.u32 	%r8929, [%rd16+8];
	ld.u32 	%r8930, [%rd16+4];
	// inline asm
	prmt.b32 %r8928, %r8929, %r8930, %r2;
	// inline asm
	st.u32 	[%rd17+12], %r8928;
	ld.u32 	%r8933, [%rd16+4];
	ld.u32 	%r8934, [%rd16];
	// inline asm
	prmt.b32 %r8932, %r8933, %r8934, %r2;
	// inline asm
	st.u32 	[%rd17+8], %r8932;
	ld.u32 	%r8937, [%rd16];
	ld.u32 	%r8938, [%rd15+12];
	// inline asm
	prmt.b32 %r8936, %r8937, %r8938, %r2;
	// inline asm
	st.u32 	[%rd17+4], %r8936;
	ld.u32 	%r8941, [%rd15+12];
	ld.u32 	%r8942, [%rd15+8];
	// inline asm
	prmt.b32 %r8940, %r8941, %r8942, %r2;
	// inline asm
	st.u32 	[%rd17], %r8940;
	ld.u32 	%r8945, [%rd15+8];
	ld.u32 	%r8946, [%rd15+4];
	// inline asm
	prmt.b32 %r8944, %r8945, %r8946, %r2;
	// inline asm
	st.u32 	[%rd16+12], %r8944;
	ld.u32 	%r8949, [%rd15+4];
	ld.u32 	%r8950, [%rd15];
	// inline asm
	prmt.b32 %r8948, %r8949, %r8950, %r2;
	// inline asm
	st.u32 	[%rd16+8], %r8948;
	ld.u32 	%r8953, [%rd15];
	ld.u32 	%r8954, [%rd14+12];
	// inline asm
	prmt.b32 %r8952, %r8953, %r8954, %r2;
	// inline asm
	st.u32 	[%rd16+4], %r8952;
	ld.u32 	%r8957, [%rd14+12];
	ld.u32 	%r8958, [%rd14+8];
	// inline asm
	prmt.b32 %r8956, %r8957, %r8958, %r2;
	// inline asm
	st.u32 	[%rd16], %r8956;
	ld.u32 	%r8961, [%rd14+8];
	ld.u32 	%r8962, [%rd14+4];
	// inline asm
	prmt.b32 %r8960, %r8961, %r8962, %r2;
	// inline asm
	st.u32 	[%rd15+12], %r8960;
	ld.u32 	%r8965, [%rd14+4];
	ld.u32 	%r8966, [%rd14];
	// inline asm
	prmt.b32 %r8964, %r8965, %r8966, %r2;
	// inline asm
	st.u32 	[%rd15+8], %r8964;
	ld.u32 	%r8969, [%rd14];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r8968, %r8969, %r9705, %r2;
	// inline asm
	st.u32 	[%rd15+4], %r8968;
	st.u32 	[%rd15], %r9705;
	st.u32 	[%rd14+12], %r9705;
	st.u32 	[%rd14+8], %r9705;
	mov.u64 	%rd2943, 0;
	st.u32 	[%rd14+4], %rd2943;
	st.u32 	[%rd14], %rd2943;
	bra.uni 	BB1_170;

BB1_14:
	setp.eq.s32	%p43, %r1, 5;
	@%p43 bra 	BB1_15;
	bra.uni 	BB1_87;

BB1_15:
	ld.u32 	%r4363, [%rd21+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9679, %r9672, %r4363, %r2;
	// inline asm
	ld.u32 	%r4366, [%rd21+12];
	ld.u32 	%r4367, [%rd21+8];
	// inline asm
	prmt.b32 %r9680, %r4366, %r4367, %r2;
	// inline asm
	ld.u32 	%r4370, [%rd21+8];
	ld.u32 	%r4371, [%rd21+4];
	// inline asm
	prmt.b32 %r9673, %r4370, %r4371, %r2;
	// inline asm
	ld.u32 	%r4374, [%rd21+4];
	ld.u32 	%r4375, [%rd21];
	// inline asm
	prmt.b32 %r9674, %r4374, %r4375, %r2;
	// inline asm
	ld.u32 	%r4378, [%rd21];
	ld.u32 	%r4379, [%rd20+12];
	// inline asm
	prmt.b32 %r9675, %r4378, %r4379, %r2;
	// inline asm
	ld.u32 	%r4382, [%rd20+12];
	ld.u32 	%r4383, [%rd20+8];
	// inline asm
	prmt.b32 %r9676, %r4382, %r4383, %r2;
	// inline asm
	ld.u32 	%r4386, [%rd20+8];
	ld.u32 	%r4387, [%rd20+4];
	// inline asm
	prmt.b32 %r4385, %r4386, %r4387, %r2;
	// inline asm
	st.u32 	[%rd21+12], %r4385;
	ld.u32 	%r4390, [%rd20+4];
	ld.u32 	%r4391, [%rd20];
	// inline asm
	prmt.b32 %r4389, %r4390, %r4391, %r2;
	// inline asm
	st.u32 	[%rd21+8], %r4389;
	ld.u32 	%r4394, [%rd20];
	ld.u32 	%r4395, [%rd19+12];
	// inline asm
	prmt.b32 %r4393, %r4394, %r4395, %r2;
	// inline asm
	st.u32 	[%rd21+4], %r4393;
	ld.u32 	%r4398, [%rd19+12];
	ld.u32 	%r4399, [%rd19+8];
	// inline asm
	prmt.b32 %r4397, %r4398, %r4399, %r2;
	// inline asm
	st.u32 	[%rd21], %r4397;
	ld.u32 	%r4402, [%rd19+8];
	ld.u32 	%r4403, [%rd19+4];
	// inline asm
	prmt.b32 %r4401, %r4402, %r4403, %r2;
	// inline asm
	st.u32 	[%rd20+12], %r4401;
	ld.u32 	%r4406, [%rd19+4];
	ld.u32 	%r4407, [%rd19];
	// inline asm
	prmt.b32 %r4405, %r4406, %r4407, %r2;
	// inline asm
	st.u32 	[%rd20+8], %r4405;
	ld.u32 	%r4410, [%rd19];
	ld.u32 	%r4411, [%rd18+12];
	// inline asm
	prmt.b32 %r4409, %r4410, %r4411, %r2;
	// inline asm
	st.u32 	[%rd20+4], %r4409;
	ld.u32 	%r4414, [%rd18+12];
	ld.u32 	%r4415, [%rd18+8];
	// inline asm
	prmt.b32 %r4413, %r4414, %r4415, %r2;
	// inline asm
	st.u32 	[%rd20], %r4413;
	ld.u32 	%r4418, [%rd18+8];
	ld.u32 	%r4419, [%rd18+4];
	// inline asm
	prmt.b32 %r4417, %r4418, %r4419, %r2;
	// inline asm
	st.u32 	[%rd19+12], %r4417;
	ld.u32 	%r4422, [%rd18+4];
	ld.u32 	%r4423, [%rd18];
	// inline asm
	prmt.b32 %r4421, %r4422, %r4423, %r2;
	// inline asm
	st.u32 	[%rd19+8], %r4421;
	ld.u32 	%r4426, [%rd18];
	ld.u32 	%r4427, [%rd17+12];
	// inline asm
	prmt.b32 %r4425, %r4426, %r4427, %r2;
	// inline asm
	st.u32 	[%rd19+4], %r4425;
	ld.u32 	%r4430, [%rd17+12];
	ld.u32 	%r4431, [%rd17+8];
	// inline asm
	prmt.b32 %r4429, %r4430, %r4431, %r2;
	// inline asm
	st.u32 	[%rd19], %r4429;
	ld.u32 	%r4434, [%rd17+8];
	ld.u32 	%r4435, [%rd17+4];
	// inline asm
	prmt.b32 %r4433, %r4434, %r4435, %r2;
	// inline asm
	st.u32 	[%rd18+12], %r4433;
	ld.u32 	%r4438, [%rd17+4];
	ld.u32 	%r4439, [%rd17];
	// inline asm
	prmt.b32 %r4437, %r4438, %r4439, %r2;
	// inline asm
	st.u32 	[%rd18+8], %r4437;
	ld.u32 	%r4442, [%rd17];
	ld.u32 	%r4443, [%rd16+12];
	// inline asm
	prmt.b32 %r4441, %r4442, %r4443, %r2;
	// inline asm
	st.u32 	[%rd18+4], %r4441;
	ld.u32 	%r4446, [%rd16+12];
	ld.u32 	%r4447, [%rd16+8];
	// inline asm
	prmt.b32 %r4445, %r4446, %r4447, %r2;
	// inline asm
	st.u32 	[%rd18], %r4445;
	ld.u32 	%r4450, [%rd16+8];
	ld.u32 	%r4451, [%rd16+4];
	// inline asm
	prmt.b32 %r4449, %r4450, %r4451, %r2;
	// inline asm
	st.u32 	[%rd17+12], %r4449;
	ld.u32 	%r4454, [%rd16+4];
	ld.u32 	%r4455, [%rd16];
	// inline asm
	prmt.b32 %r4453, %r4454, %r4455, %r2;
	// inline asm
	st.u32 	[%rd17+8], %r4453;
	ld.u32 	%r4458, [%rd16];
	ld.u32 	%r4459, [%rd15+12];
	// inline asm
	prmt.b32 %r4457, %r4458, %r4459, %r2;
	// inline asm
	st.u32 	[%rd17+4], %r4457;
	ld.u32 	%r4462, [%rd15+12];
	ld.u32 	%r4463, [%rd15+8];
	// inline asm
	prmt.b32 %r4461, %r4462, %r4463, %r2;
	// inline asm
	st.u32 	[%rd17], %r4461;
	ld.u32 	%r4466, [%rd15+8];
	ld.u32 	%r4467, [%rd15+4];
	// inline asm
	prmt.b32 %r4465, %r4466, %r4467, %r2;
	// inline asm
	st.u32 	[%rd16+12], %r4465;
	ld.u32 	%r4470, [%rd15+4];
	ld.u32 	%r4471, [%rd15];
	// inline asm
	prmt.b32 %r4469, %r4470, %r4471, %r2;
	// inline asm
	st.u32 	[%rd16+8], %r4469;
	ld.u32 	%r4474, [%rd15];
	ld.u32 	%r4475, [%rd14+12];
	// inline asm
	prmt.b32 %r4473, %r4474, %r4475, %r2;
	// inline asm
	st.u32 	[%rd16+4], %r4473;
	ld.u32 	%r4478, [%rd14+12];
	ld.u32 	%r4479, [%rd14+8];
	// inline asm
	prmt.b32 %r4477, %r4478, %r4479, %r2;
	// inline asm
	st.u32 	[%rd16], %r4477;
	ld.u32 	%r4482, [%rd14+8];
	ld.u32 	%r4483, [%rd14+4];
	// inline asm
	prmt.b32 %r4481, %r4482, %r4483, %r2;
	// inline asm
	st.u32 	[%rd15+12], %r4481;
	ld.u32 	%r4486, [%rd14+4];
	ld.u32 	%r4487, [%rd14];
	// inline asm
	prmt.b32 %r4485, %r4486, %r4487, %r2;
	// inline asm
	st.u32 	[%rd15+8], %r4485;
	ld.u32 	%r4490, [%rd14];
	// inline asm
	prmt.b32 %r4489, %r4490, %r9672, %r2;
	// inline asm
	st.u32 	[%rd15+4], %r4489;
	st.u32 	[%rd15], %r9672;
	st.u32 	[%rd14+12], %r9672;
	st.u32 	[%rd14+8], %r9672;
	mov.u64 	%rd49, 0;
	st.u32 	[%rd14+4], %rd49;
	st.u32 	[%rd14], %rd49;
	mov.u32 	%r9677, %r9672;
	mov.u32 	%r9678, %r9672;
	bra.uni 	BB1_79;

BB1_133:
	setp.eq.s32	%p67, %r1, 21;
	@%p67 bra 	BB1_134;
	bra.uni 	BB1_169;

BB1_134:
	ld.u32 	%r7665, [%rd16+8];
	ld.u32 	%r7666, [%rd16+4];
	// inline asm
	prmt.b32 %r7664, %r7665, %r7666, %r2;
	// inline asm
	st.u32 	[%rd21+12], %r7664;
	ld.u32 	%r7669, [%rd16+4];
	ld.u32 	%r7670, [%rd16];
	// inline asm
	prmt.b32 %r7668, %r7669, %r7670, %r2;
	// inline asm
	st.u32 	[%rd21+8], %r7668;
	ld.u32 	%r7673, [%rd16];
	ld.u32 	%r7674, [%rd15+12];
	// inline asm
	prmt.b32 %r7672, %r7673, %r7674, %r2;
	// inline asm
	st.u32 	[%rd21+4], %r7672;
	ld.u32 	%r7677, [%rd15+12];
	ld.u32 	%r7678, [%rd15+8];
	// inline asm
	prmt.b32 %r7676, %r7677, %r7678, %r2;
	// inline asm
	st.u32 	[%rd21], %r7676;
	ld.u32 	%r7681, [%rd15+8];
	ld.u32 	%r7682, [%rd15+4];
	// inline asm
	prmt.b32 %r7680, %r7681, %r7682, %r2;
	// inline asm
	st.u32 	[%rd20+12], %r7680;
	ld.u32 	%r7685, [%rd15+4];
	ld.u32 	%r7686, [%rd15];
	// inline asm
	prmt.b32 %r7684, %r7685, %r7686, %r2;
	// inline asm
	st.u32 	[%rd20+8], %r7684;
	ld.u32 	%r7689, [%rd15];
	ld.u32 	%r7690, [%rd14+12];
	// inline asm
	prmt.b32 %r7688, %r7689, %r7690, %r2;
	// inline asm
	st.u32 	[%rd20+4], %r7688;
	ld.u32 	%r7693, [%rd14+12];
	ld.u32 	%r7694, [%rd14+8];
	// inline asm
	prmt.b32 %r7692, %r7693, %r7694, %r2;
	// inline asm
	st.u32 	[%rd20], %r7692;
	ld.u32 	%r7697, [%rd14+8];
	ld.u32 	%r7698, [%rd14+4];
	// inline asm
	prmt.b32 %r7696, %r7697, %r7698, %r2;
	// inline asm
	st.u32 	[%rd19+12], %r7696;
	ld.u32 	%r7701, [%rd14+4];
	ld.u32 	%r7702, [%rd14];
	// inline asm
	prmt.b32 %r7700, %r7701, %r7702, %r2;
	// inline asm
	st.u32 	[%rd19+8], %r7700;
	ld.u32 	%r7705, [%rd14];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r7704, %r7705, %r9705, %r2;
	// inline asm
	st.u32 	[%rd19+4], %r7704;
	st.u32 	[%rd19], %r9705;
	st.u32 	[%rd18+12], %r9705;
	st.u32 	[%rd18+8], %r9705;
	st.u32 	[%rd18+4], %r9705;
	st.u32 	[%rd18], %r9705;
	st.u32 	[%rd17+12], %r9705;
	st.u32 	[%rd17+8], %r9705;
	st.u32 	[%rd17+4], %r9705;
	st.u32 	[%rd17], %r9705;
	st.u32 	[%rd16+12], %r9705;
	st.u32 	[%rd16+8], %r9705;
	st.u32 	[%rd16+4], %r9705;
	st.u32 	[%rd16], %r9705;
	st.u32 	[%rd15+12], %r9705;
	st.u32 	[%rd15+8], %r9705;
	st.u32 	[%rd15+4], %r9705;
	st.u32 	[%rd15], %r9705;
	st.u32 	[%rd14+12], %r9705;
	st.u32 	[%rd14+8], %r9705;
	mov.u64 	%rd2927, 0;
	st.u32 	[%rd14+4], %rd2927;
	st.u32 	[%rd14], %rd2927;
	bra.uni 	BB1_170;

BB1_45:
	setp.eq.s32	%p20, %r1, 21;
	@%p20 bra 	BB1_46;
	bra.uni 	BB1_87;

BB1_46:
	ld.u32 	%r1955, [%rd21+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9695, %r9672, %r1955, %r2;
	// inline asm
	ld.u32 	%r1958, [%rd21+12];
	ld.u32 	%r1959, [%rd21+8];
	// inline asm
	prmt.b32 %r9696, %r1958, %r1959, %r2;
	// inline asm
	ld.u32 	%r1962, [%rd21+8];
	ld.u32 	%r1963, [%rd21+4];
	// inline asm
	prmt.b32 %r9689, %r1962, %r1963, %r2;
	// inline asm
	ld.u32 	%r1966, [%rd21+4];
	ld.u32 	%r1967, [%rd21];
	// inline asm
	prmt.b32 %r9690, %r1966, %r1967, %r2;
	// inline asm
	ld.u32 	%r1970, [%rd21];
	ld.u32 	%r1971, [%rd20+12];
	// inline asm
	prmt.b32 %r9691, %r1970, %r1971, %r2;
	// inline asm
	ld.u32 	%r1974, [%rd20+12];
	ld.u32 	%r1975, [%rd20+8];
	// inline asm
	prmt.b32 %r9692, %r1974, %r1975, %r2;
	// inline asm
	ld.u32 	%r1978, [%rd20+8];
	ld.u32 	%r1979, [%rd20+4];
	// inline asm
	prmt.b32 %r9685, %r1978, %r1979, %r2;
	// inline asm
	ld.u32 	%r1982, [%rd20+4];
	ld.u32 	%r1983, [%rd20];
	// inline asm
	prmt.b32 %r9686, %r1982, %r1983, %r2;
	// inline asm
	ld.u32 	%r1986, [%rd20];
	ld.u32 	%r1987, [%rd19+12];
	// inline asm
	prmt.b32 %r9687, %r1986, %r1987, %r2;
	// inline asm
	ld.u32 	%r1990, [%rd19+12];
	ld.u32 	%r1991, [%rd19+8];
	// inline asm
	prmt.b32 %r9688, %r1990, %r1991, %r2;
	// inline asm
	ld.u32 	%r1994, [%rd19+8];
	ld.u32 	%r1995, [%rd19+4];
	// inline asm
	prmt.b32 %r9681, %r1994, %r1995, %r2;
	// inline asm
	ld.u32 	%r1998, [%rd19+4];
	ld.u32 	%r1999, [%rd19];
	// inline asm
	prmt.b32 %r9682, %r1998, %r1999, %r2;
	// inline asm
	ld.u32 	%r2002, [%rd19];
	ld.u32 	%r2003, [%rd18+12];
	// inline asm
	prmt.b32 %r9683, %r2002, %r2003, %r2;
	// inline asm
	ld.u32 	%r2006, [%rd18+12];
	ld.u32 	%r2007, [%rd18+8];
	// inline asm
	prmt.b32 %r9684, %r2006, %r2007, %r2;
	// inline asm
	ld.u32 	%r2010, [%rd18+8];
	ld.u32 	%r2011, [%rd18+4];
	// inline asm
	prmt.b32 %r9677, %r2010, %r2011, %r2;
	// inline asm
	ld.u32 	%r2014, [%rd18+4];
	ld.u32 	%r2015, [%rd18];
	// inline asm
	prmt.b32 %r9678, %r2014, %r2015, %r2;
	// inline asm
	ld.u32 	%r2018, [%rd18];
	ld.u32 	%r2019, [%rd17+12];
	// inline asm
	prmt.b32 %r9679, %r2018, %r2019, %r2;
	// inline asm
	ld.u32 	%r2022, [%rd17+12];
	ld.u32 	%r2023, [%rd17+8];
	// inline asm
	prmt.b32 %r9680, %r2022, %r2023, %r2;
	// inline asm
	ld.u32 	%r2026, [%rd17+8];
	ld.u32 	%r2027, [%rd17+4];
	// inline asm
	prmt.b32 %r9673, %r2026, %r2027, %r2;
	// inline asm
	ld.u32 	%r2030, [%rd17+4];
	ld.u32 	%r2031, [%rd17];
	// inline asm
	prmt.b32 %r9674, %r2030, %r2031, %r2;
	// inline asm
	ld.u32 	%r2034, [%rd17];
	ld.u32 	%r2035, [%rd16+12];
	// inline asm
	prmt.b32 %r9675, %r2034, %r2035, %r2;
	// inline asm
	ld.u32 	%r2038, [%rd16+12];
	ld.u32 	%r2039, [%rd16+8];
	// inline asm
	prmt.b32 %r9676, %r2038, %r2039, %r2;
	// inline asm
	ld.u32 	%r2042, [%rd16+8];
	ld.u32 	%r2043, [%rd16+4];
	// inline asm
	prmt.b32 %r2041, %r2042, %r2043, %r2;
	// inline asm
	st.u32 	[%rd21+12], %r2041;
	ld.u32 	%r2046, [%rd16+4];
	ld.u32 	%r2047, [%rd16];
	// inline asm
	prmt.b32 %r2045, %r2046, %r2047, %r2;
	// inline asm
	st.u32 	[%rd21+8], %r2045;
	ld.u32 	%r2050, [%rd16];
	ld.u32 	%r2051, [%rd15+12];
	// inline asm
	prmt.b32 %r2049, %r2050, %r2051, %r2;
	// inline asm
	st.u32 	[%rd21+4], %r2049;
	ld.u32 	%r2054, [%rd15+12];
	ld.u32 	%r2055, [%rd15+8];
	// inline asm
	prmt.b32 %r2053, %r2054, %r2055, %r2;
	// inline asm
	st.u32 	[%rd21], %r2053;
	ld.u32 	%r2058, [%rd15+8];
	ld.u32 	%r2059, [%rd15+4];
	// inline asm
	prmt.b32 %r2057, %r2058, %r2059, %r2;
	// inline asm
	st.u32 	[%rd20+12], %r2057;
	ld.u32 	%r2062, [%rd15+4];
	ld.u32 	%r2063, [%rd15];
	// inline asm
	prmt.b32 %r2061, %r2062, %r2063, %r2;
	// inline asm
	st.u32 	[%rd20+8], %r2061;
	ld.u32 	%r2066, [%rd15];
	ld.u32 	%r2067, [%rd14+12];
	// inline asm
	prmt.b32 %r2065, %r2066, %r2067, %r2;
	// inline asm
	st.u32 	[%rd20+4], %r2065;
	ld.u32 	%r2070, [%rd14+12];
	ld.u32 	%r2071, [%rd14+8];
	// inline asm
	prmt.b32 %r2069, %r2070, %r2071, %r2;
	// inline asm
	st.u32 	[%rd20], %r2069;
	ld.u32 	%r2074, [%rd14+8];
	ld.u32 	%r2075, [%rd14+4];
	// inline asm
	prmt.b32 %r2073, %r2074, %r2075, %r2;
	// inline asm
	st.u32 	[%rd19+12], %r2073;
	ld.u32 	%r2078, [%rd14+4];
	ld.u32 	%r2079, [%rd14];
	// inline asm
	prmt.b32 %r2077, %r2078, %r2079, %r2;
	// inline asm
	st.u32 	[%rd19+8], %r2077;
	ld.u32 	%r2082, [%rd14];
	// inline asm
	prmt.b32 %r2081, %r2082, %r9672, %r2;
	// inline asm
	st.u32 	[%rd19+4], %r2081;
	st.u32 	[%rd19], %r9672;
	st.u32 	[%rd18+12], %r9672;
	st.u32 	[%rd18+8], %r9672;
	st.u32 	[%rd18+4], %r9672;
	st.u32 	[%rd18], %r9672;
	st.u32 	[%rd17+12], %r9672;
	st.u32 	[%rd17+8], %r9672;
	st.u32 	[%rd17+4], %r9672;
	st.u32 	[%rd17], %r9672;
	st.u32 	[%rd16+12], %r9672;
	st.u32 	[%rd16+8], %r9672;
	st.u32 	[%rd16+4], %r9672;
	st.u32 	[%rd16], %r9672;
	st.u32 	[%rd15+12], %r9672;
	st.u32 	[%rd15+8], %r9672;
	st.u32 	[%rd15+4], %r9672;
	st.u32 	[%rd15], %r9672;
	st.u32 	[%rd14+12], %r9672;
	st.u32 	[%rd14+8], %r9672;
	mov.u64 	%rd33, 0;
	st.u32 	[%rd14+4], %rd33;
	st.u32 	[%rd14], %rd33;
	mov.u32 	%r9693, %r9672;
	mov.u32 	%r9694, %r9672;
	bra.uni 	BB1_83;

BB1_117:
	setp.eq.s32	%p79, %r1, 13;
	@%p79 bra 	BB1_118;
	bra.uni 	BB1_169;

BB1_118:
	ld.u32 	%r8137, [%rd18+8];
	ld.u32 	%r8138, [%rd18+4];
	// inline asm
	prmt.b32 %r8136, %r8137, %r8138, %r2;
	// inline asm
	st.u32 	[%rd21+12], %r8136;
	ld.u32 	%r8141, [%rd18+4];
	ld.u32 	%r8142, [%rd18];
	// inline asm
	prmt.b32 %r8140, %r8141, %r8142, %r2;
	// inline asm
	st.u32 	[%rd21+8], %r8140;
	ld.u32 	%r8145, [%rd18];
	ld.u32 	%r8146, [%rd17+12];
	// inline asm
	prmt.b32 %r8144, %r8145, %r8146, %r2;
	// inline asm
	st.u32 	[%rd21+4], %r8144;
	ld.u32 	%r8149, [%rd17+12];
	ld.u32 	%r8150, [%rd17+8];
	// inline asm
	prmt.b32 %r8148, %r8149, %r8150, %r2;
	// inline asm
	st.u32 	[%rd21], %r8148;
	ld.u32 	%r8153, [%rd17+8];
	ld.u32 	%r8154, [%rd17+4];
	// inline asm
	prmt.b32 %r8152, %r8153, %r8154, %r2;
	// inline asm
	st.u32 	[%rd20+12], %r8152;
	ld.u32 	%r8157, [%rd17+4];
	ld.u32 	%r8158, [%rd17];
	// inline asm
	prmt.b32 %r8156, %r8157, %r8158, %r2;
	// inline asm
	st.u32 	[%rd20+8], %r8156;
	ld.u32 	%r8161, [%rd17];
	ld.u32 	%r8162, [%rd16+12];
	// inline asm
	prmt.b32 %r8160, %r8161, %r8162, %r2;
	// inline asm
	st.u32 	[%rd20+4], %r8160;
	ld.u32 	%r8165, [%rd16+12];
	ld.u32 	%r8166, [%rd16+8];
	// inline asm
	prmt.b32 %r8164, %r8165, %r8166, %r2;
	// inline asm
	st.u32 	[%rd20], %r8164;
	ld.u32 	%r8169, [%rd16+8];
	ld.u32 	%r8170, [%rd16+4];
	// inline asm
	prmt.b32 %r8168, %r8169, %r8170, %r2;
	// inline asm
	st.u32 	[%rd19+12], %r8168;
	ld.u32 	%r8173, [%rd16+4];
	ld.u32 	%r8174, [%rd16];
	// inline asm
	prmt.b32 %r8172, %r8173, %r8174, %r2;
	// inline asm
	st.u32 	[%rd19+8], %r8172;
	ld.u32 	%r8177, [%rd16];
	ld.u32 	%r8178, [%rd15+12];
	// inline asm
	prmt.b32 %r8176, %r8177, %r8178, %r2;
	// inline asm
	st.u32 	[%rd19+4], %r8176;
	ld.u32 	%r8181, [%rd15+12];
	ld.u32 	%r8182, [%rd15+8];
	// inline asm
	prmt.b32 %r8180, %r8181, %r8182, %r2;
	// inline asm
	st.u32 	[%rd19], %r8180;
	ld.u32 	%r8185, [%rd15+8];
	ld.u32 	%r8186, [%rd15+4];
	// inline asm
	prmt.b32 %r8184, %r8185, %r8186, %r2;
	// inline asm
	st.u32 	[%rd18+12], %r8184;
	ld.u32 	%r8189, [%rd15+4];
	ld.u32 	%r8190, [%rd15];
	// inline asm
	prmt.b32 %r8188, %r8189, %r8190, %r2;
	// inline asm
	st.u32 	[%rd18+8], %r8188;
	ld.u32 	%r8193, [%rd15];
	ld.u32 	%r8194, [%rd14+12];
	// inline asm
	prmt.b32 %r8192, %r8193, %r8194, %r2;
	// inline asm
	st.u32 	[%rd18+4], %r8192;
	ld.u32 	%r8197, [%rd14+12];
	ld.u32 	%r8198, [%rd14+8];
	// inline asm
	prmt.b32 %r8196, %r8197, %r8198, %r2;
	// inline asm
	st.u32 	[%rd18], %r8196;
	ld.u32 	%r8201, [%rd14+8];
	ld.u32 	%r8202, [%rd14+4];
	// inline asm
	prmt.b32 %r8200, %r8201, %r8202, %r2;
	// inline asm
	st.u32 	[%rd17+12], %r8200;
	ld.u32 	%r8205, [%rd14+4];
	ld.u32 	%r8206, [%rd14];
	// inline asm
	prmt.b32 %r8204, %r8205, %r8206, %r2;
	// inline asm
	st.u32 	[%rd17+8], %r8204;
	ld.u32 	%r8209, [%rd14];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r8208, %r8209, %r9705, %r2;
	// inline asm
	st.u32 	[%rd17+4], %r8208;
	st.u32 	[%rd17], %r9705;
	st.u32 	[%rd16+12], %r9705;
	st.u32 	[%rd16+8], %r9705;
	st.u32 	[%rd16+4], %r9705;
	st.u32 	[%rd16], %r9705;
	st.u32 	[%rd15+12], %r9705;
	st.u32 	[%rd15+8], %r9705;
	st.u32 	[%rd15+4], %r9705;
	st.u32 	[%rd15], %r9705;
	st.u32 	[%rd14+12], %r9705;
	st.u32 	[%rd14+8], %r9705;
	mov.u64 	%rd2935, 0;
	st.u32 	[%rd14+4], %rd2935;
	st.u32 	[%rd14], %rd2935;
	bra.uni 	BB1_170;

BB1_29:
	setp.eq.s32	%p32, %r1, 13;
	@%p32 bra 	BB1_30;
	bra.uni 	BB1_87;

BB1_30:
	ld.u32 	%r3127, [%rd21+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9687, %r9672, %r3127, %r2;
	// inline asm
	ld.u32 	%r3130, [%rd21+12];
	ld.u32 	%r3131, [%rd21+8];
	// inline asm
	prmt.b32 %r9688, %r3130, %r3131, %r2;
	// inline asm
	ld.u32 	%r3134, [%rd21+8];
	ld.u32 	%r3135, [%rd21+4];
	// inline asm
	prmt.b32 %r9681, %r3134, %r3135, %r2;
	// inline asm
	ld.u32 	%r3138, [%rd21+4];
	ld.u32 	%r3139, [%rd21];
	// inline asm
	prmt.b32 %r9682, %r3138, %r3139, %r2;
	// inline asm
	ld.u32 	%r3142, [%rd21];
	ld.u32 	%r3143, [%rd20+12];
	// inline asm
	prmt.b32 %r9683, %r3142, %r3143, %r2;
	// inline asm
	ld.u32 	%r3146, [%rd20+12];
	ld.u32 	%r3147, [%rd20+8];
	// inline asm
	prmt.b32 %r9684, %r3146, %r3147, %r2;
	// inline asm
	ld.u32 	%r3150, [%rd20+8];
	ld.u32 	%r3151, [%rd20+4];
	// inline asm
	prmt.b32 %r9677, %r3150, %r3151, %r2;
	// inline asm
	ld.u32 	%r3154, [%rd20+4];
	ld.u32 	%r3155, [%rd20];
	// inline asm
	prmt.b32 %r9678, %r3154, %r3155, %r2;
	// inline asm
	ld.u32 	%r3158, [%rd20];
	ld.u32 	%r3159, [%rd19+12];
	// inline asm
	prmt.b32 %r9679, %r3158, %r3159, %r2;
	// inline asm
	ld.u32 	%r3162, [%rd19+12];
	ld.u32 	%r3163, [%rd19+8];
	// inline asm
	prmt.b32 %r9680, %r3162, %r3163, %r2;
	// inline asm
	ld.u32 	%r3166, [%rd19+8];
	ld.u32 	%r3167, [%rd19+4];
	// inline asm
	prmt.b32 %r9673, %r3166, %r3167, %r2;
	// inline asm
	ld.u32 	%r3170, [%rd19+4];
	ld.u32 	%r3171, [%rd19];
	// inline asm
	prmt.b32 %r9674, %r3170, %r3171, %r2;
	// inline asm
	ld.u32 	%r3174, [%rd19];
	ld.u32 	%r3175, [%rd18+12];
	// inline asm
	prmt.b32 %r9675, %r3174, %r3175, %r2;
	// inline asm
	ld.u32 	%r3178, [%rd18+12];
	ld.u32 	%r3179, [%rd18+8];
	// inline asm
	prmt.b32 %r9676, %r3178, %r3179, %r2;
	// inline asm
	ld.u32 	%r3182, [%rd18+8];
	ld.u32 	%r3183, [%rd18+4];
	// inline asm
	prmt.b32 %r3181, %r3182, %r3183, %r2;
	// inline asm
	st.u32 	[%rd21+12], %r3181;
	ld.u32 	%r3186, [%rd18+4];
	ld.u32 	%r3187, [%rd18];
	// inline asm
	prmt.b32 %r3185, %r3186, %r3187, %r2;
	// inline asm
	st.u32 	[%rd21+8], %r3185;
	ld.u32 	%r3190, [%rd18];
	ld.u32 	%r3191, [%rd17+12];
	// inline asm
	prmt.b32 %r3189, %r3190, %r3191, %r2;
	// inline asm
	st.u32 	[%rd21+4], %r3189;
	ld.u32 	%r3194, [%rd17+12];
	ld.u32 	%r3195, [%rd17+8];
	// inline asm
	prmt.b32 %r3193, %r3194, %r3195, %r2;
	// inline asm
	st.u32 	[%rd21], %r3193;
	ld.u32 	%r3198, [%rd17+8];
	ld.u32 	%r3199, [%rd17+4];
	// inline asm
	prmt.b32 %r3197, %r3198, %r3199, %r2;
	// inline asm
	st.u32 	[%rd20+12], %r3197;
	ld.u32 	%r3202, [%rd17+4];
	ld.u32 	%r3203, [%rd17];
	// inline asm
	prmt.b32 %r3201, %r3202, %r3203, %r2;
	// inline asm
	st.u32 	[%rd20+8], %r3201;
	ld.u32 	%r3206, [%rd17];
	ld.u32 	%r3207, [%rd16+12];
	// inline asm
	prmt.b32 %r3205, %r3206, %r3207, %r2;
	// inline asm
	st.u32 	[%rd20+4], %r3205;
	ld.u32 	%r3210, [%rd16+12];
	ld.u32 	%r3211, [%rd16+8];
	// inline asm
	prmt.b32 %r3209, %r3210, %r3211, %r2;
	// inline asm
	st.u32 	[%rd20], %r3209;
	ld.u32 	%r3214, [%rd16+8];
	ld.u32 	%r3215, [%rd16+4];
	// inline asm
	prmt.b32 %r3213, %r3214, %r3215, %r2;
	// inline asm
	st.u32 	[%rd19+12], %r3213;
	ld.u32 	%r3218, [%rd16+4];
	ld.u32 	%r3219, [%rd16];
	// inline asm
	prmt.b32 %r3217, %r3218, %r3219, %r2;
	// inline asm
	st.u32 	[%rd19+8], %r3217;
	ld.u32 	%r3222, [%rd16];
	ld.u32 	%r3223, [%rd15+12];
	// inline asm
	prmt.b32 %r3221, %r3222, %r3223, %r2;
	// inline asm
	st.u32 	[%rd19+4], %r3221;
	ld.u32 	%r3226, [%rd15+12];
	ld.u32 	%r3227, [%rd15+8];
	// inline asm
	prmt.b32 %r3225, %r3226, %r3227, %r2;
	// inline asm
	st.u32 	[%rd19], %r3225;
	ld.u32 	%r3230, [%rd15+8];
	ld.u32 	%r3231, [%rd15+4];
	// inline asm
	prmt.b32 %r3229, %r3230, %r3231, %r2;
	// inline asm
	st.u32 	[%rd18+12], %r3229;
	ld.u32 	%r3234, [%rd15+4];
	ld.u32 	%r3235, [%rd15];
	// inline asm
	prmt.b32 %r3233, %r3234, %r3235, %r2;
	// inline asm
	st.u32 	[%rd18+8], %r3233;
	ld.u32 	%r3238, [%rd15];
	ld.u32 	%r3239, [%rd14+12];
	// inline asm
	prmt.b32 %r3237, %r3238, %r3239, %r2;
	// inline asm
	st.u32 	[%rd18+4], %r3237;
	ld.u32 	%r3242, [%rd14+12];
	ld.u32 	%r3243, [%rd14+8];
	// inline asm
	prmt.b32 %r3241, %r3242, %r3243, %r2;
	// inline asm
	st.u32 	[%rd18], %r3241;
	ld.u32 	%r3246, [%rd14+8];
	ld.u32 	%r3247, [%rd14+4];
	// inline asm
	prmt.b32 %r3245, %r3246, %r3247, %r2;
	// inline asm
	st.u32 	[%rd17+12], %r3245;
	ld.u32 	%r3250, [%rd14+4];
	ld.u32 	%r3251, [%rd14];
	// inline asm
	prmt.b32 %r3249, %r3250, %r3251, %r2;
	// inline asm
	st.u32 	[%rd17+8], %r3249;
	ld.u32 	%r3254, [%rd14];
	// inline asm
	prmt.b32 %r3253, %r3254, %r9672, %r2;
	// inline asm
	st.u32 	[%rd17+4], %r3253;
	st.u32 	[%rd17], %r9672;
	st.u32 	[%rd16+12], %r9672;
	st.u32 	[%rd16+8], %r9672;
	st.u32 	[%rd16+4], %r9672;
	st.u32 	[%rd16], %r9672;
	st.u32 	[%rd15+12], %r9672;
	st.u32 	[%rd15+8], %r9672;
	st.u32 	[%rd15+4], %r9672;
	st.u32 	[%rd15], %r9672;
	st.u32 	[%rd14+12], %r9672;
	st.u32 	[%rd14+8], %r9672;
	mov.u64 	%rd41, 0;
	st.u32 	[%rd14+4], %rd41;
	st.u32 	[%rd14], %rd41;
	mov.u32 	%r9685, %r9672;
	mov.u32 	%r9686, %r9672;
	bra.uni 	BB1_81;

BB1_148:
	setp.eq.s32	%p56, %r1, 29;
	@%p56 bra 	BB1_149;
	bra.uni 	BB1_169;

BB1_149:
	ld.u32 	%r7449, [%rd14+8];
	ld.u32 	%r7450, [%rd14+4];
	// inline asm
	prmt.b32 %r7448, %r7449, %r7450, %r2;
	// inline asm
	st.u32 	[%rd21+12], %r7448;
	ld.u32 	%r7453, [%rd14+4];
	ld.u32 	%r7454, [%rd14];
	// inline asm
	prmt.b32 %r7452, %r7453, %r7454, %r2;
	// inline asm
	st.u32 	[%rd21+8], %r7452;
	ld.u32 	%r7457, [%rd14];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r7456, %r7457, %r9705, %r2;
	// inline asm
	st.u32 	[%rd21+4], %r7456;
	st.u32 	[%rd21], %r9705;
	st.u32 	[%rd20+12], %r9705;
	st.u32 	[%rd20+8], %r9705;
	st.u32 	[%rd20+4], %r9705;
	st.u32 	[%rd20], %r9705;
	st.u32 	[%rd19+12], %r9705;
	st.u32 	[%rd19+8], %r9705;
	st.u32 	[%rd19+4], %r9705;
	st.u32 	[%rd19], %r9705;
	st.u32 	[%rd18+12], %r9705;
	st.u32 	[%rd18+8], %r9705;
	st.u32 	[%rd18+4], %r9705;
	st.u32 	[%rd18], %r9705;
	st.u32 	[%rd17+12], %r9705;
	st.u32 	[%rd17+8], %r9705;
	st.u32 	[%rd17+4], %r9705;
	st.u32 	[%rd17], %r9705;
	st.u32 	[%rd16+12], %r9705;
	st.u32 	[%rd16+8], %r9705;
	st.u32 	[%rd16+4], %r9705;
	st.u32 	[%rd16], %r9705;
	st.u32 	[%rd15+12], %r9705;
	st.u32 	[%rd15+8], %r9705;
	st.u32 	[%rd15+4], %r9705;
	st.u32 	[%rd15], %r9705;
	st.u32 	[%rd14+12], %r9705;
	st.u32 	[%rd14+8], %r9705;
	mov.u64 	%rd2919, 0;
	st.u32 	[%rd14+4], %rd2919;
	st.u32 	[%rd14], %rd2919;
	bra.uni 	BB1_170;

BB1_60:
	setp.eq.s32	%p9, %r1, 29;
	@%p9 bra 	BB1_61;
	bra.uni 	BB1_87;

BB1_61:
	ld.u32 	%r847, [%rd21+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9703, %r9672, %r847, %r2;
	// inline asm
	ld.u32 	%r850, [%rd21+12];
	ld.u32 	%r851, [%rd21+8];
	// inline asm
	prmt.b32 %r9704, %r850, %r851, %r2;
	// inline asm
	ld.u32 	%r854, [%rd21+8];
	ld.u32 	%r855, [%rd21+4];
	// inline asm
	prmt.b32 %r9697, %r854, %r855, %r2;
	// inline asm
	ld.u32 	%r858, [%rd21+4];
	ld.u32 	%r859, [%rd21];
	// inline asm
	prmt.b32 %r9698, %r858, %r859, %r2;
	// inline asm
	ld.u32 	%r862, [%rd21];
	ld.u32 	%r863, [%rd20+12];
	// inline asm
	prmt.b32 %r9699, %r862, %r863, %r2;
	// inline asm
	ld.u32 	%r866, [%rd20+12];
	ld.u32 	%r867, [%rd20+8];
	// inline asm
	prmt.b32 %r9700, %r866, %r867, %r2;
	// inline asm
	ld.u32 	%r870, [%rd20+8];
	ld.u32 	%r871, [%rd20+4];
	// inline asm
	prmt.b32 %r9693, %r870, %r871, %r2;
	// inline asm
	ld.u32 	%r874, [%rd20+4];
	ld.u32 	%r875, [%rd20];
	// inline asm
	prmt.b32 %r9694, %r874, %r875, %r2;
	// inline asm
	ld.u32 	%r878, [%rd20];
	ld.u32 	%r879, [%rd19+12];
	// inline asm
	prmt.b32 %r9695, %r878, %r879, %r2;
	// inline asm
	ld.u32 	%r882, [%rd19+12];
	ld.u32 	%r883, [%rd19+8];
	// inline asm
	prmt.b32 %r9696, %r882, %r883, %r2;
	// inline asm
	ld.u32 	%r886, [%rd19+8];
	ld.u32 	%r887, [%rd19+4];
	// inline asm
	prmt.b32 %r9689, %r886, %r887, %r2;
	// inline asm
	ld.u32 	%r890, [%rd19+4];
	ld.u32 	%r891, [%rd19];
	// inline asm
	prmt.b32 %r9690, %r890, %r891, %r2;
	// inline asm
	ld.u32 	%r894, [%rd19];
	ld.u32 	%r895, [%rd18+12];
	// inline asm
	prmt.b32 %r9691, %r894, %r895, %r2;
	// inline asm
	ld.u32 	%r898, [%rd18+12];
	ld.u32 	%r899, [%rd18+8];
	// inline asm
	prmt.b32 %r9692, %r898, %r899, %r2;
	// inline asm
	ld.u32 	%r902, [%rd18+8];
	ld.u32 	%r903, [%rd18+4];
	// inline asm
	prmt.b32 %r9685, %r902, %r903, %r2;
	// inline asm
	ld.u32 	%r906, [%rd18+4];
	ld.u32 	%r907, [%rd18];
	// inline asm
	prmt.b32 %r9686, %r906, %r907, %r2;
	// inline asm
	ld.u32 	%r910, [%rd18];
	ld.u32 	%r911, [%rd17+12];
	// inline asm
	prmt.b32 %r9687, %r910, %r911, %r2;
	// inline asm
	ld.u32 	%r914, [%rd17+12];
	ld.u32 	%r915, [%rd17+8];
	// inline asm
	prmt.b32 %r9688, %r914, %r915, %r2;
	// inline asm
	ld.u32 	%r918, [%rd17+8];
	ld.u32 	%r919, [%rd17+4];
	// inline asm
	prmt.b32 %r9681, %r918, %r919, %r2;
	// inline asm
	ld.u32 	%r922, [%rd17+4];
	ld.u32 	%r923, [%rd17];
	// inline asm
	prmt.b32 %r9682, %r922, %r923, %r2;
	// inline asm
	ld.u32 	%r926, [%rd17];
	ld.u32 	%r927, [%rd16+12];
	// inline asm
	prmt.b32 %r9683, %r926, %r927, %r2;
	// inline asm
	ld.u32 	%r930, [%rd16+12];
	ld.u32 	%r931, [%rd16+8];
	// inline asm
	prmt.b32 %r9684, %r930, %r931, %r2;
	// inline asm
	ld.u32 	%r934, [%rd16+8];
	ld.u32 	%r935, [%rd16+4];
	// inline asm
	prmt.b32 %r9677, %r934, %r935, %r2;
	// inline asm
	ld.u32 	%r938, [%rd16+4];
	ld.u32 	%r939, [%rd16];
	// inline asm
	prmt.b32 %r9678, %r938, %r939, %r2;
	// inline asm
	ld.u32 	%r942, [%rd16];
	ld.u32 	%r943, [%rd15+12];
	// inline asm
	prmt.b32 %r9679, %r942, %r943, %r2;
	// inline asm
	ld.u32 	%r946, [%rd15+12];
	ld.u32 	%r947, [%rd15+8];
	// inline asm
	prmt.b32 %r9680, %r946, %r947, %r2;
	// inline asm
	ld.u32 	%r950, [%rd15+8];
	ld.u32 	%r951, [%rd15+4];
	// inline asm
	prmt.b32 %r9673, %r950, %r951, %r2;
	// inline asm
	ld.u32 	%r954, [%rd15+4];
	ld.u32 	%r955, [%rd15];
	// inline asm
	prmt.b32 %r9674, %r954, %r955, %r2;
	// inline asm
	ld.u32 	%r958, [%rd15];
	ld.u32 	%r959, [%rd14+12];
	// inline asm
	prmt.b32 %r9675, %r958, %r959, %r2;
	// inline asm
	ld.u32 	%r962, [%rd14+12];
	ld.u32 	%r963, [%rd14+8];
	// inline asm
	prmt.b32 %r9676, %r962, %r963, %r2;
	// inline asm
	ld.u32 	%r966, [%rd14+8];
	ld.u32 	%r967, [%rd14+4];
	// inline asm
	prmt.b32 %r965, %r966, %r967, %r2;
	// inline asm
	st.u32 	[%rd21+12], %r965;
	ld.u32 	%r970, [%rd14+4];
	ld.u32 	%r971, [%rd14];
	// inline asm
	prmt.b32 %r969, %r970, %r971, %r2;
	// inline asm
	st.u32 	[%rd21+8], %r969;
	ld.u32 	%r974, [%rd14];
	// inline asm
	prmt.b32 %r973, %r974, %r9672, %r2;
	// inline asm
	st.u32 	[%rd21+4], %r973;
	st.u32 	[%rd21], %r9672;
	st.u32 	[%rd20+12], %r9672;
	st.u32 	[%rd20+8], %r9672;
	st.u32 	[%rd20+4], %r9672;
	st.u32 	[%rd20], %r9672;
	st.u32 	[%rd19+12], %r9672;
	st.u32 	[%rd19+8], %r9672;
	st.u32 	[%rd19+4], %r9672;
	st.u32 	[%rd19], %r9672;
	st.u32 	[%rd18+12], %r9672;
	st.u32 	[%rd18+8], %r9672;
	st.u32 	[%rd18+4], %r9672;
	st.u32 	[%rd18], %r9672;
	st.u32 	[%rd17+12], %r9672;
	st.u32 	[%rd17+8], %r9672;
	st.u32 	[%rd17+4], %r9672;
	st.u32 	[%rd17], %r9672;
	st.u32 	[%rd16+12], %r9672;
	st.u32 	[%rd16+8], %r9672;
	st.u32 	[%rd16+4], %r9672;
	st.u32 	[%rd16], %r9672;
	st.u32 	[%rd15+12], %r9672;
	st.u32 	[%rd15+8], %r9672;
	st.u32 	[%rd15+4], %r9672;
	st.u32 	[%rd15], %r9672;
	st.u32 	[%rd14+12], %r9672;
	st.u32 	[%rd14+8], %r9672;
	mov.u64 	%rd25, 0;
	st.u32 	[%rd14+4], %rd25;
	st.u32 	[%rd14], %rd25;
	mov.u32 	%r9701, %r9672;
	mov.u32 	%r9702, %r9672;
	bra.uni 	BB1_89;

BB1_98:
	setp.eq.s32	%p93, %r1, 3;
	@%p93 bra 	BB1_99;
	bra.uni 	BB1_169;

BB1_99:
	ld.u32 	%r9087, [%rd21];
	ld.u32 	%r9088, [%rd20+12];
	// inline asm
	prmt.b32 %r9086, %r9087, %r9088, %r2;
	// inline asm
	st.u32 	[%rd21+12], %r9086;
	ld.u32 	%r9091, [%rd20+12];
	ld.u32 	%r9092, [%rd20+8];
	// inline asm
	prmt.b32 %r9090, %r9091, %r9092, %r2;
	// inline asm
	st.u32 	[%rd21+8], %r9090;
	ld.u32 	%r9095, [%rd20+8];
	ld.u32 	%r9096, [%rd20+4];
	// inline asm
	prmt.b32 %r9094, %r9095, %r9096, %r2;
	// inline asm
	st.u32 	[%rd21+4], %r9094;
	ld.u32 	%r9099, [%rd20+4];
	ld.u32 	%r9100, [%rd20];
	// inline asm
	prmt.b32 %r9098, %r9099, %r9100, %r2;
	// inline asm
	st.u32 	[%rd21], %r9098;
	ld.u32 	%r9103, [%rd20];
	ld.u32 	%r9104, [%rd19+12];
	// inline asm
	prmt.b32 %r9102, %r9103, %r9104, %r2;
	// inline asm
	st.u32 	[%rd20+12], %r9102;
	ld.u32 	%r9107, [%rd19+12];
	ld.u32 	%r9108, [%rd19+8];
	// inline asm
	prmt.b32 %r9106, %r9107, %r9108, %r2;
	// inline asm
	st.u32 	[%rd20+8], %r9106;
	ld.u32 	%r9111, [%rd19+8];
	ld.u32 	%r9112, [%rd19+4];
	// inline asm
	prmt.b32 %r9110, %r9111, %r9112, %r2;
	// inline asm
	st.u32 	[%rd20+4], %r9110;
	ld.u32 	%r9115, [%rd19+4];
	ld.u32 	%r9116, [%rd19];
	// inline asm
	prmt.b32 %r9114, %r9115, %r9116, %r2;
	// inline asm
	st.u32 	[%rd20], %r9114;
	ld.u32 	%r9119, [%rd19];
	ld.u32 	%r9120, [%rd18+12];
	// inline asm
	prmt.b32 %r9118, %r9119, %r9120, %r2;
	// inline asm
	st.u32 	[%rd19+12], %r9118;
	ld.u32 	%r9123, [%rd18+12];
	ld.u32 	%r9124, [%rd18+8];
	// inline asm
	prmt.b32 %r9122, %r9123, %r9124, %r2;
	// inline asm
	st.u32 	[%rd19+8], %r9122;
	ld.u32 	%r9127, [%rd18+8];
	ld.u32 	%r9128, [%rd18+4];
	// inline asm
	prmt.b32 %r9126, %r9127, %r9128, %r2;
	// inline asm
	st.u32 	[%rd19+4], %r9126;
	ld.u32 	%r9131, [%rd18+4];
	ld.u32 	%r9132, [%rd18];
	// inline asm
	prmt.b32 %r9130, %r9131, %r9132, %r2;
	// inline asm
	st.u32 	[%rd19], %r9130;
	ld.u32 	%r9135, [%rd18];
	ld.u32 	%r9136, [%rd17+12];
	// inline asm
	prmt.b32 %r9134, %r9135, %r9136, %r2;
	// inline asm
	st.u32 	[%rd18+12], %r9134;
	ld.u32 	%r9139, [%rd17+12];
	ld.u32 	%r9140, [%rd17+8];
	// inline asm
	prmt.b32 %r9138, %r9139, %r9140, %r2;
	// inline asm
	st.u32 	[%rd18+8], %r9138;
	ld.u32 	%r9143, [%rd17+8];
	ld.u32 	%r9144, [%rd17+4];
	// inline asm
	prmt.b32 %r9142, %r9143, %r9144, %r2;
	// inline asm
	st.u32 	[%rd18+4], %r9142;
	ld.u32 	%r9147, [%rd17+4];
	ld.u32 	%r9148, [%rd17];
	// inline asm
	prmt.b32 %r9146, %r9147, %r9148, %r2;
	// inline asm
	st.u32 	[%rd18], %r9146;
	ld.u32 	%r9151, [%rd17];
	ld.u32 	%r9152, [%rd16+12];
	// inline asm
	prmt.b32 %r9150, %r9151, %r9152, %r2;
	// inline asm
	st.u32 	[%rd17+12], %r9150;
	ld.u32 	%r9155, [%rd16+12];
	ld.u32 	%r9156, [%rd16+8];
	// inline asm
	prmt.b32 %r9154, %r9155, %r9156, %r2;
	// inline asm
	st.u32 	[%rd17+8], %r9154;
	ld.u32 	%r9159, [%rd16+8];
	ld.u32 	%r9160, [%rd16+4];
	// inline asm
	prmt.b32 %r9158, %r9159, %r9160, %r2;
	// inline asm
	st.u32 	[%rd17+4], %r9158;
	ld.u32 	%r9163, [%rd16+4];
	ld.u32 	%r9164, [%rd16];
	// inline asm
	prmt.b32 %r9162, %r9163, %r9164, %r2;
	// inline asm
	st.u32 	[%rd17], %r9162;
	ld.u32 	%r9167, [%rd16];
	ld.u32 	%r9168, [%rd15+12];
	// inline asm
	prmt.b32 %r9166, %r9167, %r9168, %r2;
	// inline asm
	st.u32 	[%rd16+12], %r9166;
	ld.u32 	%r9171, [%rd15+12];
	ld.u32 	%r9172, [%rd15+8];
	// inline asm
	prmt.b32 %r9170, %r9171, %r9172, %r2;
	// inline asm
	st.u32 	[%rd16+8], %r9170;
	ld.u32 	%r9175, [%rd15+8];
	ld.u32 	%r9176, [%rd15+4];
	// inline asm
	prmt.b32 %r9174, %r9175, %r9176, %r2;
	// inline asm
	st.u32 	[%rd16+4], %r9174;
	ld.u32 	%r9179, [%rd15+4];
	ld.u32 	%r9180, [%rd15];
	// inline asm
	prmt.b32 %r9178, %r9179, %r9180, %r2;
	// inline asm
	st.u32 	[%rd16], %r9178;
	ld.u32 	%r9183, [%rd15];
	ld.u32 	%r9184, [%rd14+12];
	// inline asm
	prmt.b32 %r9182, %r9183, %r9184, %r2;
	// inline asm
	st.u32 	[%rd15+12], %r9182;
	ld.u32 	%r9187, [%rd14+12];
	ld.u32 	%r9188, [%rd14+8];
	// inline asm
	prmt.b32 %r9186, %r9187, %r9188, %r2;
	// inline asm
	st.u32 	[%rd15+8], %r9186;
	ld.u32 	%r9191, [%rd14+8];
	ld.u32 	%r9192, [%rd14+4];
	// inline asm
	prmt.b32 %r9190, %r9191, %r9192, %r2;
	// inline asm
	st.u32 	[%rd15+4], %r9190;
	ld.u32 	%r9195, [%rd14+4];
	ld.u32 	%r9196, [%rd14];
	// inline asm
	prmt.b32 %r9194, %r9195, %r9196, %r2;
	// inline asm
	st.u32 	[%rd15], %r9194;
	ld.u32 	%r9199, [%rd14];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r9198, %r9199, %r9705, %r2;
	// inline asm
	st.u32 	[%rd14+12], %r9198;
	st.u32 	[%rd14+8], %r9705;
	mov.u64 	%rd2945, 0;
	st.u32 	[%rd14+4], %rd2945;
	st.u32 	[%rd14], %rd2945;
	bra.uni 	BB1_170;

BB1_9:
	setp.eq.s32	%p46, %r1, 3;
	@%p46 bra 	BB1_10;
	bra.uni 	BB1_87;

BB1_10:
	ld.u32 	%r4682, [%rd21+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9673, %r9672, %r4682, %r2;
	// inline asm
	ld.u32 	%r4685, [%rd21+12];
	ld.u32 	%r4686, [%rd21+8];
	// inline asm
	prmt.b32 %r9674, %r4685, %r4686, %r2;
	// inline asm
	ld.u32 	%r4689, [%rd21+8];
	ld.u32 	%r4690, [%rd21+4];
	// inline asm
	prmt.b32 %r9675, %r4689, %r4690, %r2;
	// inline asm
	ld.u32 	%r4693, [%rd21+4];
	ld.u32 	%r4694, [%rd21];
	// inline asm
	prmt.b32 %r9676, %r4693, %r4694, %r2;
	// inline asm
	ld.u32 	%r4697, [%rd21];
	ld.u32 	%r4698, [%rd20+12];
	// inline asm
	prmt.b32 %r4696, %r4697, %r4698, %r2;
	// inline asm
	st.u32 	[%rd21+12], %r4696;
	ld.u32 	%r4701, [%rd20+12];
	ld.u32 	%r4702, [%rd20+8];
	// inline asm
	prmt.b32 %r4700, %r4701, %r4702, %r2;
	// inline asm
	st.u32 	[%rd21+8], %r4700;
	ld.u32 	%r4705, [%rd20+8];
	ld.u32 	%r4706, [%rd20+4];
	// inline asm
	prmt.b32 %r4704, %r4705, %r4706, %r2;
	// inline asm
	st.u32 	[%rd21+4], %r4704;
	ld.u32 	%r4709, [%rd20+4];
	ld.u32 	%r4710, [%rd20];
	// inline asm
	prmt.b32 %r4708, %r4709, %r4710, %r2;
	// inline asm
	st.u32 	[%rd21], %r4708;
	ld.u32 	%r4713, [%rd20];
	ld.u32 	%r4714, [%rd19+12];
	// inline asm
	prmt.b32 %r4712, %r4713, %r4714, %r2;
	// inline asm
	st.u32 	[%rd20+12], %r4712;
	ld.u32 	%r4717, [%rd19+12];
	ld.u32 	%r4718, [%rd19+8];
	// inline asm
	prmt.b32 %r4716, %r4717, %r4718, %r2;
	// inline asm
	st.u32 	[%rd20+8], %r4716;
	ld.u32 	%r4721, [%rd19+8];
	ld.u32 	%r4722, [%rd19+4];
	// inline asm
	prmt.b32 %r4720, %r4721, %r4722, %r2;
	// inline asm
	st.u32 	[%rd20+4], %r4720;
	ld.u32 	%r4725, [%rd19+4];
	ld.u32 	%r4726, [%rd19];
	// inline asm
	prmt.b32 %r4724, %r4725, %r4726, %r2;
	// inline asm
	st.u32 	[%rd20], %r4724;
	ld.u32 	%r4729, [%rd19];
	ld.u32 	%r4730, [%rd18+12];
	// inline asm
	prmt.b32 %r4728, %r4729, %r4730, %r2;
	// inline asm
	st.u32 	[%rd19+12], %r4728;
	ld.u32 	%r4733, [%rd18+12];
	ld.u32 	%r4734, [%rd18+8];
	// inline asm
	prmt.b32 %r4732, %r4733, %r4734, %r2;
	// inline asm
	st.u32 	[%rd19+8], %r4732;
	ld.u32 	%r4737, [%rd18+8];
	ld.u32 	%r4738, [%rd18+4];
	// inline asm
	prmt.b32 %r4736, %r4737, %r4738, %r2;
	// inline asm
	st.u32 	[%rd19+4], %r4736;
	ld.u32 	%r4741, [%rd18+4];
	ld.u32 	%r4742, [%rd18];
	// inline asm
	prmt.b32 %r4740, %r4741, %r4742, %r2;
	// inline asm
	st.u32 	[%rd19], %r4740;
	ld.u32 	%r4745, [%rd18];
	ld.u32 	%r4746, [%rd17+12];
	// inline asm
	prmt.b32 %r4744, %r4745, %r4746, %r2;
	// inline asm
	st.u32 	[%rd18+12], %r4744;
	ld.u32 	%r4749, [%rd17+12];
	ld.u32 	%r4750, [%rd17+8];
	// inline asm
	prmt.b32 %r4748, %r4749, %r4750, %r2;
	// inline asm
	st.u32 	[%rd18+8], %r4748;
	ld.u32 	%r4753, [%rd17+8];
	ld.u32 	%r4754, [%rd17+4];
	// inline asm
	prmt.b32 %r4752, %r4753, %r4754, %r2;
	// inline asm
	st.u32 	[%rd18+4], %r4752;
	ld.u32 	%r4757, [%rd17+4];
	ld.u32 	%r4758, [%rd17];
	// inline asm
	prmt.b32 %r4756, %r4757, %r4758, %r2;
	// inline asm
	st.u32 	[%rd18], %r4756;
	ld.u32 	%r4761, [%rd17];
	ld.u32 	%r4762, [%rd16+12];
	// inline asm
	prmt.b32 %r4760, %r4761, %r4762, %r2;
	// inline asm
	st.u32 	[%rd17+12], %r4760;
	ld.u32 	%r4765, [%rd16+12];
	ld.u32 	%r4766, [%rd16+8];
	// inline asm
	prmt.b32 %r4764, %r4765, %r4766, %r2;
	// inline asm
	st.u32 	[%rd17+8], %r4764;
	ld.u32 	%r4769, [%rd16+8];
	ld.u32 	%r4770, [%rd16+4];
	// inline asm
	prmt.b32 %r4768, %r4769, %r4770, %r2;
	// inline asm
	st.u32 	[%rd17+4], %r4768;
	ld.u32 	%r4773, [%rd16+4];
	ld.u32 	%r4774, [%rd16];
	// inline asm
	prmt.b32 %r4772, %r4773, %r4774, %r2;
	// inline asm
	st.u32 	[%rd17], %r4772;
	ld.u32 	%r4777, [%rd16];
	ld.u32 	%r4778, [%rd15+12];
	// inline asm
	prmt.b32 %r4776, %r4777, %r4778, %r2;
	// inline asm
	st.u32 	[%rd16+12], %r4776;
	ld.u32 	%r4781, [%rd15+12];
	ld.u32 	%r4782, [%rd15+8];
	// inline asm
	prmt.b32 %r4780, %r4781, %r4782, %r2;
	// inline asm
	st.u32 	[%rd16+8], %r4780;
	ld.u32 	%r4785, [%rd15+8];
	ld.u32 	%r4786, [%rd15+4];
	// inline asm
	prmt.b32 %r4784, %r4785, %r4786, %r2;
	// inline asm
	st.u32 	[%rd16+4], %r4784;
	ld.u32 	%r4789, [%rd15+4];
	ld.u32 	%r4790, [%rd15];
	// inline asm
	prmt.b32 %r4788, %r4789, %r4790, %r2;
	// inline asm
	st.u32 	[%rd16], %r4788;
	ld.u32 	%r4793, [%rd15];
	ld.u32 	%r4794, [%rd14+12];
	// inline asm
	prmt.b32 %r4792, %r4793, %r4794, %r2;
	// inline asm
	st.u32 	[%rd15+12], %r4792;
	ld.u32 	%r4797, [%rd14+12];
	ld.u32 	%r4798, [%rd14+8];
	// inline asm
	prmt.b32 %r4796, %r4797, %r4798, %r2;
	// inline asm
	st.u32 	[%rd15+8], %r4796;
	ld.u32 	%r4801, [%rd14+8];
	ld.u32 	%r4802, [%rd14+4];
	// inline asm
	prmt.b32 %r4800, %r4801, %r4802, %r2;
	// inline asm
	st.u32 	[%rd15+4], %r4800;
	ld.u32 	%r4805, [%rd14+4];
	ld.u32 	%r4806, [%rd14];
	// inline asm
	prmt.b32 %r4804, %r4805, %r4806, %r2;
	// inline asm
	st.u32 	[%rd15], %r4804;
	ld.u32 	%r4809, [%rd14];
	// inline asm
	prmt.b32 %r4808, %r4809, %r9672, %r2;
	// inline asm
	st.u32 	[%rd14+12], %r4808;
	st.u32 	[%rd14+8], %r9672;
	mov.u64 	%rd51, 0;
	st.u32 	[%rd14+4], %rd51;
	st.u32 	[%rd14], %rd51;

BB1_11:
	mov.u32 	%r9677, %r9672;
	mov.u32 	%r9678, %r9672;
	mov.u32 	%r9679, %r9672;
	mov.u32 	%r9680, %r9672;
	bra.uni 	BB1_79;

BB1_129:
	setp.eq.s32	%p70, %r1, 19;
	@%p70 bra 	BB1_130;
	bra.uni 	BB1_169;

BB1_130:
	ld.u32 	%r7759, [%rd17];
	ld.u32 	%r7760, [%rd16+12];
	// inline asm
	prmt.b32 %r7758, %r7759, %r7760, %r2;
	// inline asm
	st.u32 	[%rd21+12], %r7758;
	ld.u32 	%r7763, [%rd16+12];
	ld.u32 	%r7764, [%rd16+8];
	// inline asm
	prmt.b32 %r7762, %r7763, %r7764, %r2;
	// inline asm
	st.u32 	[%rd21+8], %r7762;
	ld.u32 	%r7767, [%rd16+8];
	ld.u32 	%r7768, [%rd16+4];
	// inline asm
	prmt.b32 %r7766, %r7767, %r7768, %r2;
	// inline asm
	st.u32 	[%rd21+4], %r7766;
	ld.u32 	%r7771, [%rd16+4];
	ld.u32 	%r7772, [%rd16];
	// inline asm
	prmt.b32 %r7770, %r7771, %r7772, %r2;
	// inline asm
	st.u32 	[%rd21], %r7770;
	ld.u32 	%r7775, [%rd16];
	ld.u32 	%r7776, [%rd15+12];
	// inline asm
	prmt.b32 %r7774, %r7775, %r7776, %r2;
	// inline asm
	st.u32 	[%rd20+12], %r7774;
	ld.u32 	%r7779, [%rd15+12];
	ld.u32 	%r7780, [%rd15+8];
	// inline asm
	prmt.b32 %r7778, %r7779, %r7780, %r2;
	// inline asm
	st.u32 	[%rd20+8], %r7778;
	ld.u32 	%r7783, [%rd15+8];
	ld.u32 	%r7784, [%rd15+4];
	// inline asm
	prmt.b32 %r7782, %r7783, %r7784, %r2;
	// inline asm
	st.u32 	[%rd20+4], %r7782;
	ld.u32 	%r7787, [%rd15+4];
	ld.u32 	%r7788, [%rd15];
	// inline asm
	prmt.b32 %r7786, %r7787, %r7788, %r2;
	// inline asm
	st.u32 	[%rd20], %r7786;
	ld.u32 	%r7791, [%rd15];
	ld.u32 	%r7792, [%rd14+12];
	// inline asm
	prmt.b32 %r7790, %r7791, %r7792, %r2;
	// inline asm
	st.u32 	[%rd19+12], %r7790;
	ld.u32 	%r7795, [%rd14+12];
	ld.u32 	%r7796, [%rd14+8];
	// inline asm
	prmt.b32 %r7794, %r7795, %r7796, %r2;
	// inline asm
	st.u32 	[%rd19+8], %r7794;
	ld.u32 	%r7799, [%rd14+8];
	ld.u32 	%r7800, [%rd14+4];
	// inline asm
	prmt.b32 %r7798, %r7799, %r7800, %r2;
	// inline asm
	st.u32 	[%rd19+4], %r7798;
	ld.u32 	%r7803, [%rd14+4];
	ld.u32 	%r7804, [%rd14];
	// inline asm
	prmt.b32 %r7802, %r7803, %r7804, %r2;
	// inline asm
	st.u32 	[%rd19], %r7802;
	ld.u32 	%r7807, [%rd14];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r7806, %r7807, %r9705, %r2;
	// inline asm
	st.u32 	[%rd18+12], %r7806;
	st.u32 	[%rd18+8], %r9705;
	st.u32 	[%rd18+4], %r9705;
	st.u32 	[%rd18], %r9705;
	st.u32 	[%rd17+12], %r9705;
	st.u32 	[%rd17+8], %r9705;
	st.u32 	[%rd17+4], %r9705;
	st.u32 	[%rd17], %r9705;
	st.u32 	[%rd16+12], %r9705;
	st.u32 	[%rd16+8], %r9705;
	st.u32 	[%rd16+4], %r9705;
	st.u32 	[%rd16], %r9705;
	st.u32 	[%rd15+12], %r9705;
	st.u32 	[%rd15+8], %r9705;
	st.u32 	[%rd15+4], %r9705;
	st.u32 	[%rd15], %r9705;
	st.u32 	[%rd14+12], %r9705;
	st.u32 	[%rd14+8], %r9705;
	mov.u64 	%rd2929, 0;
	st.u32 	[%rd14+4], %rd2929;
	st.u32 	[%rd14], %rd2929;
	bra.uni 	BB1_170;

BB1_41:
	setp.eq.s32	%p23, %r1, 19;
	@%p23 bra 	BB1_42;
	bra.uni 	BB1_87;

BB1_42:
	ld.u32 	%r2242, [%rd21+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9689, %r9672, %r2242, %r2;
	// inline asm
	ld.u32 	%r2245, [%rd21+12];
	ld.u32 	%r2246, [%rd21+8];
	// inline asm
	prmt.b32 %r9690, %r2245, %r2246, %r2;
	// inline asm
	ld.u32 	%r2249, [%rd21+8];
	ld.u32 	%r2250, [%rd21+4];
	// inline asm
	prmt.b32 %r9691, %r2249, %r2250, %r2;
	// inline asm
	ld.u32 	%r2253, [%rd21+4];
	ld.u32 	%r2254, [%rd21];
	// inline asm
	prmt.b32 %r9692, %r2253, %r2254, %r2;
	// inline asm
	ld.u32 	%r2257, [%rd21];
	ld.u32 	%r2258, [%rd20+12];
	// inline asm
	prmt.b32 %r9685, %r2257, %r2258, %r2;
	// inline asm
	ld.u32 	%r2261, [%rd20+12];
	ld.u32 	%r2262, [%rd20+8];
	// inline asm
	prmt.b32 %r9686, %r2261, %r2262, %r2;
	// inline asm
	ld.u32 	%r2265, [%rd20+8];
	ld.u32 	%r2266, [%rd20+4];
	// inline asm
	prmt.b32 %r9687, %r2265, %r2266, %r2;
	// inline asm
	ld.u32 	%r2269, [%rd20+4];
	ld.u32 	%r2270, [%rd20];
	// inline asm
	prmt.b32 %r9688, %r2269, %r2270, %r2;
	// inline asm
	ld.u32 	%r2273, [%rd20];
	ld.u32 	%r2274, [%rd19+12];
	// inline asm
	prmt.b32 %r9681, %r2273, %r2274, %r2;
	// inline asm
	ld.u32 	%r2277, [%rd19+12];
	ld.u32 	%r2278, [%rd19+8];
	// inline asm
	prmt.b32 %r9682, %r2277, %r2278, %r2;
	// inline asm
	ld.u32 	%r2281, [%rd19+8];
	ld.u32 	%r2282, [%rd19+4];
	// inline asm
	prmt.b32 %r9683, %r2281, %r2282, %r2;
	// inline asm
	ld.u32 	%r2285, [%rd19+4];
	ld.u32 	%r2286, [%rd19];
	// inline asm
	prmt.b32 %r9684, %r2285, %r2286, %r2;
	// inline asm
	ld.u32 	%r2289, [%rd19];
	ld.u32 	%r2290, [%rd18+12];
	// inline asm
	prmt.b32 %r9677, %r2289, %r2290, %r2;
	// inline asm
	ld.u32 	%r2293, [%rd18+12];
	ld.u32 	%r2294, [%rd18+8];
	// inline asm
	prmt.b32 %r9678, %r2293, %r2294, %r2;
	// inline asm
	ld.u32 	%r2297, [%rd18+8];
	ld.u32 	%r2298, [%rd18+4];
	// inline asm
	prmt.b32 %r9679, %r2297, %r2298, %r2;
	// inline asm
	ld.u32 	%r2301, [%rd18+4];
	ld.u32 	%r2302, [%rd18];
	// inline asm
	prmt.b32 %r9680, %r2301, %r2302, %r2;
	// inline asm
	ld.u32 	%r2305, [%rd18];
	ld.u32 	%r2306, [%rd17+12];
	// inline asm
	prmt.b32 %r9673, %r2305, %r2306, %r2;
	// inline asm
	ld.u32 	%r2309, [%rd17+12];
	ld.u32 	%r2310, [%rd17+8];
	// inline asm
	prmt.b32 %r9674, %r2309, %r2310, %r2;
	// inline asm
	ld.u32 	%r2313, [%rd17+8];
	ld.u32 	%r2314, [%rd17+4];
	// inline asm
	prmt.b32 %r9675, %r2313, %r2314, %r2;
	// inline asm
	ld.u32 	%r2317, [%rd17+4];
	ld.u32 	%r2318, [%rd17];
	// inline asm
	prmt.b32 %r9676, %r2317, %r2318, %r2;
	// inline asm
	ld.u32 	%r2321, [%rd17];
	ld.u32 	%r2322, [%rd16+12];
	// inline asm
	prmt.b32 %r2320, %r2321, %r2322, %r2;
	// inline asm
	st.u32 	[%rd21+12], %r2320;
	ld.u32 	%r2325, [%rd16+12];
	ld.u32 	%r2326, [%rd16+8];
	// inline asm
	prmt.b32 %r2324, %r2325, %r2326, %r2;
	// inline asm
	st.u32 	[%rd21+8], %r2324;
	ld.u32 	%r2329, [%rd16+8];
	ld.u32 	%r2330, [%rd16+4];
	// inline asm
	prmt.b32 %r2328, %r2329, %r2330, %r2;
	// inline asm
	st.u32 	[%rd21+4], %r2328;
	ld.u32 	%r2333, [%rd16+4];
	ld.u32 	%r2334, [%rd16];
	// inline asm
	prmt.b32 %r2332, %r2333, %r2334, %r2;
	// inline asm
	st.u32 	[%rd21], %r2332;
	ld.u32 	%r2337, [%rd16];
	ld.u32 	%r2338, [%rd15+12];
	// inline asm
	prmt.b32 %r2336, %r2337, %r2338, %r2;
	// inline asm
	st.u32 	[%rd20+12], %r2336;
	ld.u32 	%r2341, [%rd15+12];
	ld.u32 	%r2342, [%rd15+8];
	// inline asm
	prmt.b32 %r2340, %r2341, %r2342, %r2;
	// inline asm
	st.u32 	[%rd20+8], %r2340;
	ld.u32 	%r2345, [%rd15+8];
	ld.u32 	%r2346, [%rd15+4];
	// inline asm
	prmt.b32 %r2344, %r2345, %r2346, %r2;
	// inline asm
	st.u32 	[%rd20+4], %r2344;
	ld.u32 	%r2349, [%rd15+4];
	ld.u32 	%r2350, [%rd15];
	// inline asm
	prmt.b32 %r2348, %r2349, %r2350, %r2;
	// inline asm
	st.u32 	[%rd20], %r2348;
	ld.u32 	%r2353, [%rd15];
	ld.u32 	%r2354, [%rd14+12];
	// inline asm
	prmt.b32 %r2352, %r2353, %r2354, %r2;
	// inline asm
	st.u32 	[%rd19+12], %r2352;
	ld.u32 	%r2357, [%rd14+12];
	ld.u32 	%r2358, [%rd14+8];
	// inline asm
	prmt.b32 %r2356, %r2357, %r2358, %r2;
	// inline asm
	st.u32 	[%rd19+8], %r2356;
	ld.u32 	%r2361, [%rd14+8];
	ld.u32 	%r2362, [%rd14+4];
	// inline asm
	prmt.b32 %r2360, %r2361, %r2362, %r2;
	// inline asm
	st.u32 	[%rd19+4], %r2360;
	ld.u32 	%r2365, [%rd14+4];
	ld.u32 	%r2366, [%rd14];
	// inline asm
	prmt.b32 %r2364, %r2365, %r2366, %r2;
	// inline asm
	st.u32 	[%rd19], %r2364;
	ld.u32 	%r2369, [%rd14];
	// inline asm
	prmt.b32 %r2368, %r2369, %r9672, %r2;
	// inline asm
	st.u32 	[%rd18+12], %r2368;
	st.u32 	[%rd18+8], %r9672;
	st.u32 	[%rd18+4], %r9672;
	st.u32 	[%rd18], %r9672;
	st.u32 	[%rd17+12], %r9672;
	st.u32 	[%rd17+8], %r9672;
	st.u32 	[%rd17+4], %r9672;
	st.u32 	[%rd17], %r9672;
	st.u32 	[%rd16+12], %r9672;
	st.u32 	[%rd16+8], %r9672;
	st.u32 	[%rd16+4], %r9672;
	st.u32 	[%rd16], %r9672;
	st.u32 	[%rd15+12], %r9672;
	st.u32 	[%rd15+8], %r9672;
	st.u32 	[%rd15+4], %r9672;
	st.u32 	[%rd15], %r9672;
	st.u32 	[%rd14+12], %r9672;
	st.u32 	[%rd14+8], %r9672;
	mov.u64 	%rd35, 0;
	st.u32 	[%rd14+4], %rd35;
	st.u32 	[%rd14], %rd35;
	bra.uni 	BB1_82;

BB1_113:
	setp.eq.s32	%p82, %r1, 11;
	@%p82 bra 	BB1_114;
	bra.uni 	BB1_169;

BB1_114:
	ld.u32 	%r8295, [%rd19];
	ld.u32 	%r8296, [%rd18+12];
	// inline asm
	prmt.b32 %r8294, %r8295, %r8296, %r2;
	// inline asm
	st.u32 	[%rd21+12], %r8294;
	ld.u32 	%r8299, [%rd18+12];
	ld.u32 	%r8300, [%rd18+8];
	// inline asm
	prmt.b32 %r8298, %r8299, %r8300, %r2;
	// inline asm
	st.u32 	[%rd21+8], %r8298;
	ld.u32 	%r8303, [%rd18+8];
	ld.u32 	%r8304, [%rd18+4];
	// inline asm
	prmt.b32 %r8302, %r8303, %r8304, %r2;
	// inline asm
	st.u32 	[%rd21+4], %r8302;
	ld.u32 	%r8307, [%rd18+4];
	ld.u32 	%r8308, [%rd18];
	// inline asm
	prmt.b32 %r8306, %r8307, %r8308, %r2;
	// inline asm
	st.u32 	[%rd21], %r8306;
	ld.u32 	%r8311, [%rd18];
	ld.u32 	%r8312, [%rd17+12];
	// inline asm
	prmt.b32 %r8310, %r8311, %r8312, %r2;
	// inline asm
	st.u32 	[%rd20+12], %r8310;
	ld.u32 	%r8315, [%rd17+12];
	ld.u32 	%r8316, [%rd17+8];
	// inline asm
	prmt.b32 %r8314, %r8315, %r8316, %r2;
	// inline asm
	st.u32 	[%rd20+8], %r8314;
	ld.u32 	%r8319, [%rd17+8];
	ld.u32 	%r8320, [%rd17+4];
	// inline asm
	prmt.b32 %r8318, %r8319, %r8320, %r2;
	// inline asm
	st.u32 	[%rd20+4], %r8318;
	ld.u32 	%r8323, [%rd17+4];
	ld.u32 	%r8324, [%rd17];
	// inline asm
	prmt.b32 %r8322, %r8323, %r8324, %r2;
	// inline asm
	st.u32 	[%rd20], %r8322;
	ld.u32 	%r8327, [%rd17];
	ld.u32 	%r8328, [%rd16+12];
	// inline asm
	prmt.b32 %r8326, %r8327, %r8328, %r2;
	// inline asm
	st.u32 	[%rd19+12], %r8326;
	ld.u32 	%r8331, [%rd16+12];
	ld.u32 	%r8332, [%rd16+8];
	// inline asm
	prmt.b32 %r8330, %r8331, %r8332, %r2;
	// inline asm
	st.u32 	[%rd19+8], %r8330;
	ld.u32 	%r8335, [%rd16+8];
	ld.u32 	%r8336, [%rd16+4];
	// inline asm
	prmt.b32 %r8334, %r8335, %r8336, %r2;
	// inline asm
	st.u32 	[%rd19+4], %r8334;
	ld.u32 	%r8339, [%rd16+4];
	ld.u32 	%r8340, [%rd16];
	// inline asm
	prmt.b32 %r8338, %r8339, %r8340, %r2;
	// inline asm
	st.u32 	[%rd19], %r8338;
	ld.u32 	%r8343, [%rd16];
	ld.u32 	%r8344, [%rd15+12];
	// inline asm
	prmt.b32 %r8342, %r8343, %r8344, %r2;
	// inline asm
	st.u32 	[%rd18+12], %r8342;
	ld.u32 	%r8347, [%rd15+12];
	ld.u32 	%r8348, [%rd15+8];
	// inline asm
	prmt.b32 %r8346, %r8347, %r8348, %r2;
	// inline asm
	st.u32 	[%rd18+8], %r8346;
	ld.u32 	%r8351, [%rd15+8];
	ld.u32 	%r8352, [%rd15+4];
	// inline asm
	prmt.b32 %r8350, %r8351, %r8352, %r2;
	// inline asm
	st.u32 	[%rd18+4], %r8350;
	ld.u32 	%r8355, [%rd15+4];
	ld.u32 	%r8356, [%rd15];
	// inline asm
	prmt.b32 %r8354, %r8355, %r8356, %r2;
	// inline asm
	st.u32 	[%rd18], %r8354;
	ld.u32 	%r8359, [%rd15];
	ld.u32 	%r8360, [%rd14+12];
	// inline asm
	prmt.b32 %r8358, %r8359, %r8360, %r2;
	// inline asm
	st.u32 	[%rd17+12], %r8358;
	ld.u32 	%r8363, [%rd14+12];
	ld.u32 	%r8364, [%rd14+8];
	// inline asm
	prmt.b32 %r8362, %r8363, %r8364, %r2;
	// inline asm
	st.u32 	[%rd17+8], %r8362;
	ld.u32 	%r8367, [%rd14+8];
	ld.u32 	%r8368, [%rd14+4];
	// inline asm
	prmt.b32 %r8366, %r8367, %r8368, %r2;
	// inline asm
	st.u32 	[%rd17+4], %r8366;
	ld.u32 	%r8371, [%rd14+4];
	ld.u32 	%r8372, [%rd14];
	// inline asm
	prmt.b32 %r8370, %r8371, %r8372, %r2;
	// inline asm
	st.u32 	[%rd17], %r8370;
	ld.u32 	%r8375, [%rd14];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r8374, %r8375, %r9705, %r2;
	// inline asm
	st.u32 	[%rd16+12], %r8374;
	st.u32 	[%rd16+8], %r9705;
	st.u32 	[%rd16+4], %r9705;
	st.u32 	[%rd16], %r9705;
	st.u32 	[%rd15+12], %r9705;
	st.u32 	[%rd15+8], %r9705;
	st.u32 	[%rd15+4], %r9705;
	st.u32 	[%rd15], %r9705;
	st.u32 	[%rd14+12], %r9705;
	st.u32 	[%rd14+8], %r9705;
	mov.u64 	%rd2937, 0;
	st.u32 	[%rd14+4], %rd2937;
	st.u32 	[%rd14], %rd2937;
	bra.uni 	BB1_170;

BB1_25:
	setp.eq.s32	%p35, %r1, 11;
	@%p35 bra 	BB1_26;
	bra.uni 	BB1_87;

BB1_26:
	ld.u32 	%r3430, [%rd21+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9681, %r9672, %r3430, %r2;
	// inline asm
	ld.u32 	%r3433, [%rd21+12];
	ld.u32 	%r3434, [%rd21+8];
	// inline asm
	prmt.b32 %r9682, %r3433, %r3434, %r2;
	// inline asm
	ld.u32 	%r3437, [%rd21+8];
	ld.u32 	%r3438, [%rd21+4];
	// inline asm
	prmt.b32 %r9683, %r3437, %r3438, %r2;
	// inline asm
	ld.u32 	%r3441, [%rd21+4];
	ld.u32 	%r3442, [%rd21];
	// inline asm
	prmt.b32 %r9684, %r3441, %r3442, %r2;
	// inline asm
	ld.u32 	%r3445, [%rd21];
	ld.u32 	%r3446, [%rd20+12];
	// inline asm
	prmt.b32 %r9677, %r3445, %r3446, %r2;
	// inline asm
	ld.u32 	%r3449, [%rd20+12];
	ld.u32 	%r3450, [%rd20+8];
	// inline asm
	prmt.b32 %r9678, %r3449, %r3450, %r2;
	// inline asm
	ld.u32 	%r3453, [%rd20+8];
	ld.u32 	%r3454, [%rd20+4];
	// inline asm
	prmt.b32 %r9679, %r3453, %r3454, %r2;
	// inline asm
	ld.u32 	%r3457, [%rd20+4];
	ld.u32 	%r3458, [%rd20];
	// inline asm
	prmt.b32 %r9680, %r3457, %r3458, %r2;
	// inline asm
	ld.u32 	%r3461, [%rd20];
	ld.u32 	%r3462, [%rd19+12];
	// inline asm
	prmt.b32 %r9673, %r3461, %r3462, %r2;
	// inline asm
	ld.u32 	%r3465, [%rd19+12];
	ld.u32 	%r3466, [%rd19+8];
	// inline asm
	prmt.b32 %r9674, %r3465, %r3466, %r2;
	// inline asm
	ld.u32 	%r3469, [%rd19+8];
	ld.u32 	%r3470, [%rd19+4];
	// inline asm
	prmt.b32 %r9675, %r3469, %r3470, %r2;
	// inline asm
	ld.u32 	%r3473, [%rd19+4];
	ld.u32 	%r3474, [%rd19];
	// inline asm
	prmt.b32 %r9676, %r3473, %r3474, %r2;
	// inline asm
	ld.u32 	%r3477, [%rd19];
	ld.u32 	%r3478, [%rd18+12];
	// inline asm
	prmt.b32 %r3476, %r3477, %r3478, %r2;
	// inline asm
	st.u32 	[%rd21+12], %r3476;
	ld.u32 	%r3481, [%rd18+12];
	ld.u32 	%r3482, [%rd18+8];
	// inline asm
	prmt.b32 %r3480, %r3481, %r3482, %r2;
	// inline asm
	st.u32 	[%rd21+8], %r3480;
	ld.u32 	%r3485, [%rd18+8];
	ld.u32 	%r3486, [%rd18+4];
	// inline asm
	prmt.b32 %r3484, %r3485, %r3486, %r2;
	// inline asm
	st.u32 	[%rd21+4], %r3484;
	ld.u32 	%r3489, [%rd18+4];
	ld.u32 	%r3490, [%rd18];
	// inline asm
	prmt.b32 %r3488, %r3489, %r3490, %r2;
	// inline asm
	st.u32 	[%rd21], %r3488;
	ld.u32 	%r3493, [%rd18];
	ld.u32 	%r3494, [%rd17+12];
	// inline asm
	prmt.b32 %r3492, %r3493, %r3494, %r2;
	// inline asm
	st.u32 	[%rd20+12], %r3492;
	ld.u32 	%r3497, [%rd17+12];
	ld.u32 	%r3498, [%rd17+8];
	// inline asm
	prmt.b32 %r3496, %r3497, %r3498, %r2;
	// inline asm
	st.u32 	[%rd20+8], %r3496;
	ld.u32 	%r3501, [%rd17+8];
	ld.u32 	%r3502, [%rd17+4];
	// inline asm
	prmt.b32 %r3500, %r3501, %r3502, %r2;
	// inline asm
	st.u32 	[%rd20+4], %r3500;
	ld.u32 	%r3505, [%rd17+4];
	ld.u32 	%r3506, [%rd17];
	// inline asm
	prmt.b32 %r3504, %r3505, %r3506, %r2;
	// inline asm
	st.u32 	[%rd20], %r3504;
	ld.u32 	%r3509, [%rd17];
	ld.u32 	%r3510, [%rd16+12];
	// inline asm
	prmt.b32 %r3508, %r3509, %r3510, %r2;
	// inline asm
	st.u32 	[%rd19+12], %r3508;
	ld.u32 	%r3513, [%rd16+12];
	ld.u32 	%r3514, [%rd16+8];
	// inline asm
	prmt.b32 %r3512, %r3513, %r3514, %r2;
	// inline asm
	st.u32 	[%rd19+8], %r3512;
	ld.u32 	%r3517, [%rd16+8];
	ld.u32 	%r3518, [%rd16+4];
	// inline asm
	prmt.b32 %r3516, %r3517, %r3518, %r2;
	// inline asm
	st.u32 	[%rd19+4], %r3516;
	ld.u32 	%r3521, [%rd16+4];
	ld.u32 	%r3522, [%rd16];
	// inline asm
	prmt.b32 %r3520, %r3521, %r3522, %r2;
	// inline asm
	st.u32 	[%rd19], %r3520;
	ld.u32 	%r3525, [%rd16];
	ld.u32 	%r3526, [%rd15+12];
	// inline asm
	prmt.b32 %r3524, %r3525, %r3526, %r2;
	// inline asm
	st.u32 	[%rd18+12], %r3524;
	ld.u32 	%r3529, [%rd15+12];
	ld.u32 	%r3530, [%rd15+8];
	// inline asm
	prmt.b32 %r3528, %r3529, %r3530, %r2;
	// inline asm
	st.u32 	[%rd18+8], %r3528;
	ld.u32 	%r3533, [%rd15+8];
	ld.u32 	%r3534, [%rd15+4];
	// inline asm
	prmt.b32 %r3532, %r3533, %r3534, %r2;
	// inline asm
	st.u32 	[%rd18+4], %r3532;
	ld.u32 	%r3537, [%rd15+4];
	ld.u32 	%r3538, [%rd15];
	// inline asm
	prmt.b32 %r3536, %r3537, %r3538, %r2;
	// inline asm
	st.u32 	[%rd18], %r3536;
	ld.u32 	%r3541, [%rd15];
	ld.u32 	%r3542, [%rd14+12];
	// inline asm
	prmt.b32 %r3540, %r3541, %r3542, %r2;
	// inline asm
	st.u32 	[%rd17+12], %r3540;
	ld.u32 	%r3545, [%rd14+12];
	ld.u32 	%r3546, [%rd14+8];
	// inline asm
	prmt.b32 %r3544, %r3545, %r3546, %r2;
	// inline asm
	st.u32 	[%rd17+8], %r3544;
	ld.u32 	%r3549, [%rd14+8];
	ld.u32 	%r3550, [%rd14+4];
	// inline asm
	prmt.b32 %r3548, %r3549, %r3550, %r2;
	// inline asm
	st.u32 	[%rd17+4], %r3548;
	ld.u32 	%r3553, [%rd14+4];
	ld.u32 	%r3554, [%rd14];
	// inline asm
	prmt.b32 %r3552, %r3553, %r3554, %r2;
	// inline asm
	st.u32 	[%rd17], %r3552;
	ld.u32 	%r3557, [%rd14];
	// inline asm
	prmt.b32 %r3556, %r3557, %r9672, %r2;
	// inline asm
	st.u32 	[%rd16+12], %r3556;
	st.u32 	[%rd16+8], %r9672;
	st.u32 	[%rd16+4], %r9672;
	st.u32 	[%rd16], %r9672;
	st.u32 	[%rd15+12], %r9672;
	st.u32 	[%rd15+8], %r9672;
	st.u32 	[%rd15+4], %r9672;
	st.u32 	[%rd15], %r9672;
	st.u32 	[%rd14+12], %r9672;
	st.u32 	[%rd14+8], %r9672;
	mov.u64 	%rd43, 0;
	st.u32 	[%rd14+4], %rd43;
	st.u32 	[%rd14], %rd43;
	bra.uni 	BB1_80;

BB1_144:
	setp.eq.s32	%p59, %r1, 27;
	@%p59 bra 	BB1_145;
	bra.uni 	BB1_169;

BB1_145:
	ld.u32 	%r7479, [%rd15];
	ld.u32 	%r7480, [%rd14+12];
	// inline asm
	prmt.b32 %r7478, %r7479, %r7480, %r2;
	// inline asm
	st.u32 	[%rd21+12], %r7478;
	ld.u32 	%r7483, [%rd14+12];
	ld.u32 	%r7484, [%rd14+8];
	// inline asm
	prmt.b32 %r7482, %r7483, %r7484, %r2;
	// inline asm
	st.u32 	[%rd21+8], %r7482;
	ld.u32 	%r7487, [%rd14+8];
	ld.u32 	%r7488, [%rd14+4];
	// inline asm
	prmt.b32 %r7486, %r7487, %r7488, %r2;
	// inline asm
	st.u32 	[%rd21+4], %r7486;
	ld.u32 	%r7491, [%rd14+4];
	ld.u32 	%r7492, [%rd14];
	// inline asm
	prmt.b32 %r7490, %r7491, %r7492, %r2;
	// inline asm
	st.u32 	[%rd21], %r7490;
	ld.u32 	%r7495, [%rd14];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r7494, %r7495, %r9705, %r2;
	// inline asm
	st.u32 	[%rd20+12], %r7494;
	st.u32 	[%rd20+8], %r9705;
	st.u32 	[%rd20+4], %r9705;
	st.u32 	[%rd20], %r9705;
	st.u32 	[%rd19+12], %r9705;
	st.u32 	[%rd19+8], %r9705;
	st.u32 	[%rd19+4], %r9705;
	st.u32 	[%rd19], %r9705;
	st.u32 	[%rd18+12], %r9705;
	st.u32 	[%rd18+8], %r9705;
	st.u32 	[%rd18+4], %r9705;
	st.u32 	[%rd18], %r9705;
	st.u32 	[%rd17+12], %r9705;
	st.u32 	[%rd17+8], %r9705;
	st.u32 	[%rd17+4], %r9705;
	st.u32 	[%rd17], %r9705;
	st.u32 	[%rd16+12], %r9705;
	st.u32 	[%rd16+8], %r9705;
	st.u32 	[%rd16+4], %r9705;
	st.u32 	[%rd16], %r9705;
	st.u32 	[%rd15+12], %r9705;
	st.u32 	[%rd15+8], %r9705;
	st.u32 	[%rd15+4], %r9705;
	st.u32 	[%rd15], %r9705;
	st.u32 	[%rd14+12], %r9705;
	st.u32 	[%rd14+8], %r9705;
	mov.u64 	%rd2921, 0;
	st.u32 	[%rd14+4], %rd2921;
	st.u32 	[%rd14], %rd2921;
	bra.uni 	BB1_170;

BB1_56:
	setp.eq.s32	%p12, %r1, 27;
	@%p12 bra 	BB1_57;
	bra.uni 	BB1_87;

BB1_57:
	ld.u32 	%r1118, [%rd21+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9697, %r9672, %r1118, %r2;
	// inline asm
	ld.u32 	%r1121, [%rd21+12];
	ld.u32 	%r1122, [%rd21+8];
	// inline asm
	prmt.b32 %r9698, %r1121, %r1122, %r2;
	// inline asm
	ld.u32 	%r1125, [%rd21+8];
	ld.u32 	%r1126, [%rd21+4];
	// inline asm
	prmt.b32 %r9699, %r1125, %r1126, %r2;
	// inline asm
	ld.u32 	%r1129, [%rd21+4];
	ld.u32 	%r1130, [%rd21];
	// inline asm
	prmt.b32 %r9700, %r1129, %r1130, %r2;
	// inline asm
	ld.u32 	%r1133, [%rd21];
	ld.u32 	%r1134, [%rd20+12];
	// inline asm
	prmt.b32 %r9693, %r1133, %r1134, %r2;
	// inline asm
	ld.u32 	%r1137, [%rd20+12];
	ld.u32 	%r1138, [%rd20+8];
	// inline asm
	prmt.b32 %r9694, %r1137, %r1138, %r2;
	// inline asm
	ld.u32 	%r1141, [%rd20+8];
	ld.u32 	%r1142, [%rd20+4];
	// inline asm
	prmt.b32 %r9695, %r1141, %r1142, %r2;
	// inline asm
	ld.u32 	%r1145, [%rd20+4];
	ld.u32 	%r1146, [%rd20];
	// inline asm
	prmt.b32 %r9696, %r1145, %r1146, %r2;
	// inline asm
	ld.u32 	%r1149, [%rd20];
	ld.u32 	%r1150, [%rd19+12];
	// inline asm
	prmt.b32 %r9689, %r1149, %r1150, %r2;
	// inline asm
	ld.u32 	%r1153, [%rd19+12];
	ld.u32 	%r1154, [%rd19+8];
	// inline asm
	prmt.b32 %r9690, %r1153, %r1154, %r2;
	// inline asm
	ld.u32 	%r1157, [%rd19+8];
	ld.u32 	%r1158, [%rd19+4];
	// inline asm
	prmt.b32 %r9691, %r1157, %r1158, %r2;
	// inline asm
	ld.u32 	%r1161, [%rd19+4];
	ld.u32 	%r1162, [%rd19];
	// inline asm
	prmt.b32 %r9692, %r1161, %r1162, %r2;
	// inline asm
	ld.u32 	%r1165, [%rd19];
	ld.u32 	%r1166, [%rd18+12];
	// inline asm
	prmt.b32 %r9685, %r1165, %r1166, %r2;
	// inline asm
	ld.u32 	%r1169, [%rd18+12];
	ld.u32 	%r1170, [%rd18+8];
	// inline asm
	prmt.b32 %r9686, %r1169, %r1170, %r2;
	// inline asm
	ld.u32 	%r1173, [%rd18+8];
	ld.u32 	%r1174, [%rd18+4];
	// inline asm
	prmt.b32 %r9687, %r1173, %r1174, %r2;
	// inline asm
	ld.u32 	%r1177, [%rd18+4];
	ld.u32 	%r1178, [%rd18];
	// inline asm
	prmt.b32 %r9688, %r1177, %r1178, %r2;
	// inline asm
	ld.u32 	%r1181, [%rd18];
	ld.u32 	%r1182, [%rd17+12];
	// inline asm
	prmt.b32 %r9681, %r1181, %r1182, %r2;
	// inline asm
	ld.u32 	%r1185, [%rd17+12];
	ld.u32 	%r1186, [%rd17+8];
	// inline asm
	prmt.b32 %r9682, %r1185, %r1186, %r2;
	// inline asm
	ld.u32 	%r1189, [%rd17+8];
	ld.u32 	%r1190, [%rd17+4];
	// inline asm
	prmt.b32 %r9683, %r1189, %r1190, %r2;
	// inline asm
	ld.u32 	%r1193, [%rd17+4];
	ld.u32 	%r1194, [%rd17];
	// inline asm
	prmt.b32 %r9684, %r1193, %r1194, %r2;
	// inline asm
	ld.u32 	%r1197, [%rd17];
	ld.u32 	%r1198, [%rd16+12];
	// inline asm
	prmt.b32 %r9677, %r1197, %r1198, %r2;
	// inline asm
	ld.u32 	%r1201, [%rd16+12];
	ld.u32 	%r1202, [%rd16+8];
	// inline asm
	prmt.b32 %r9678, %r1201, %r1202, %r2;
	// inline asm
	ld.u32 	%r1205, [%rd16+8];
	ld.u32 	%r1206, [%rd16+4];
	// inline asm
	prmt.b32 %r9679, %r1205, %r1206, %r2;
	// inline asm
	ld.u32 	%r1209, [%rd16+4];
	ld.u32 	%r1210, [%rd16];
	// inline asm
	prmt.b32 %r9680, %r1209, %r1210, %r2;
	// inline asm
	ld.u32 	%r1213, [%rd16];
	ld.u32 	%r1214, [%rd15+12];
	// inline asm
	prmt.b32 %r9673, %r1213, %r1214, %r2;
	// inline asm
	ld.u32 	%r1217, [%rd15+12];
	ld.u32 	%r1218, [%rd15+8];
	// inline asm
	prmt.b32 %r9674, %r1217, %r1218, %r2;
	// inline asm
	ld.u32 	%r1221, [%rd15+8];
	ld.u32 	%r1222, [%rd15+4];
	// inline asm
	prmt.b32 %r9675, %r1221, %r1222, %r2;
	// inline asm
	ld.u32 	%r1225, [%rd15+4];
	ld.u32 	%r1226, [%rd15];
	// inline asm
	prmt.b32 %r9676, %r1225, %r1226, %r2;
	// inline asm
	ld.u32 	%r1229, [%rd15];
	ld.u32 	%r1230, [%rd14+12];
	// inline asm
	prmt.b32 %r1228, %r1229, %r1230, %r2;
	// inline asm
	st.u32 	[%rd21+12], %r1228;
	ld.u32 	%r1233, [%rd14+12];
	ld.u32 	%r1234, [%rd14+8];
	// inline asm
	prmt.b32 %r1232, %r1233, %r1234, %r2;
	// inline asm
	st.u32 	[%rd21+8], %r1232;
	ld.u32 	%r1237, [%rd14+8];
	ld.u32 	%r1238, [%rd14+4];
	// inline asm
	prmt.b32 %r1236, %r1237, %r1238, %r2;
	// inline asm
	st.u32 	[%rd21+4], %r1236;
	ld.u32 	%r1241, [%rd14+4];
	ld.u32 	%r1242, [%rd14];
	// inline asm
	prmt.b32 %r1240, %r1241, %r1242, %r2;
	// inline asm
	st.u32 	[%rd21], %r1240;
	ld.u32 	%r1245, [%rd14];
	// inline asm
	prmt.b32 %r1244, %r1245, %r9672, %r2;
	// inline asm
	st.u32 	[%rd20+12], %r1244;
	st.u32 	[%rd20+8], %r9672;
	st.u32 	[%rd20+4], %r9672;
	st.u32 	[%rd20], %r9672;
	st.u32 	[%rd19+12], %r9672;
	st.u32 	[%rd19+8], %r9672;
	st.u32 	[%rd19+4], %r9672;
	st.u32 	[%rd19], %r9672;
	st.u32 	[%rd18+12], %r9672;
	st.u32 	[%rd18+8], %r9672;
	st.u32 	[%rd18+4], %r9672;
	st.u32 	[%rd18], %r9672;
	st.u32 	[%rd17+12], %r9672;
	st.u32 	[%rd17+8], %r9672;
	st.u32 	[%rd17+4], %r9672;
	st.u32 	[%rd17], %r9672;
	st.u32 	[%rd16+12], %r9672;
	st.u32 	[%rd16+8], %r9672;
	st.u32 	[%rd16+4], %r9672;
	st.u32 	[%rd16], %r9672;
	st.u32 	[%rd15+12], %r9672;
	st.u32 	[%rd15+8], %r9672;
	st.u32 	[%rd15+4], %r9672;
	st.u32 	[%rd15], %r9672;
	st.u32 	[%rd14+12], %r9672;
	st.u32 	[%rd14+8], %r9672;
	mov.u64 	%rd27, 0;
	st.u32 	[%rd14+4], %rd27;
	st.u32 	[%rd14], %rd27;
	bra.uni 	BB1_84;

BB1_105:
	setp.eq.s32	%p88, %r1, 7;
	@%p88 bra 	BB1_106;
	bra.uni 	BB1_169;

BB1_106:
	ld.u32 	%r8659, [%rd20];
	ld.u32 	%r8660, [%rd19+12];
	// inline asm
	prmt.b32 %r8658, %r8659, %r8660, %r2;
	// inline asm
	st.u32 	[%rd21+12], %r8658;
	ld.u32 	%r8663, [%rd19+12];
	ld.u32 	%r8664, [%rd19+8];
	// inline asm
	prmt.b32 %r8662, %r8663, %r8664, %r2;
	// inline asm
	st.u32 	[%rd21+8], %r8662;
	ld.u32 	%r8667, [%rd19+8];
	ld.u32 	%r8668, [%rd19+4];
	// inline asm
	prmt.b32 %r8666, %r8667, %r8668, %r2;
	// inline asm
	st.u32 	[%rd21+4], %r8666;
	ld.u32 	%r8671, [%rd19+4];
	ld.u32 	%r8672, [%rd19];
	// inline asm
	prmt.b32 %r8670, %r8671, %r8672, %r2;
	// inline asm
	st.u32 	[%rd21], %r8670;
	ld.u32 	%r8675, [%rd19];
	ld.u32 	%r8676, [%rd18+12];
	// inline asm
	prmt.b32 %r8674, %r8675, %r8676, %r2;
	// inline asm
	st.u32 	[%rd20+12], %r8674;
	ld.u32 	%r8679, [%rd18+12];
	ld.u32 	%r8680, [%rd18+8];
	// inline asm
	prmt.b32 %r8678, %r8679, %r8680, %r2;
	// inline asm
	st.u32 	[%rd20+8], %r8678;
	ld.u32 	%r8683, [%rd18+8];
	ld.u32 	%r8684, [%rd18+4];
	// inline asm
	prmt.b32 %r8682, %r8683, %r8684, %r2;
	// inline asm
	st.u32 	[%rd20+4], %r8682;
	ld.u32 	%r8687, [%rd18+4];
	ld.u32 	%r8688, [%rd18];
	// inline asm
	prmt.b32 %r8686, %r8687, %r8688, %r2;
	// inline asm
	st.u32 	[%rd20], %r8686;
	ld.u32 	%r8691, [%rd18];
	ld.u32 	%r8692, [%rd17+12];
	// inline asm
	prmt.b32 %r8690, %r8691, %r8692, %r2;
	// inline asm
	st.u32 	[%rd19+12], %r8690;
	ld.u32 	%r8695, [%rd17+12];
	ld.u32 	%r8696, [%rd17+8];
	// inline asm
	prmt.b32 %r8694, %r8695, %r8696, %r2;
	// inline asm
	st.u32 	[%rd19+8], %r8694;
	ld.u32 	%r8699, [%rd17+8];
	ld.u32 	%r8700, [%rd17+4];
	// inline asm
	prmt.b32 %r8698, %r8699, %r8700, %r2;
	// inline asm
	st.u32 	[%rd19+4], %r8698;
	ld.u32 	%r8703, [%rd17+4];
	ld.u32 	%r8704, [%rd17];
	// inline asm
	prmt.b32 %r8702, %r8703, %r8704, %r2;
	// inline asm
	st.u32 	[%rd19], %r8702;
	ld.u32 	%r8707, [%rd17];
	ld.u32 	%r8708, [%rd16+12];
	// inline asm
	prmt.b32 %r8706, %r8707, %r8708, %r2;
	// inline asm
	st.u32 	[%rd18+12], %r8706;
	ld.u32 	%r8711, [%rd16+12];
	ld.u32 	%r8712, [%rd16+8];
	// inline asm
	prmt.b32 %r8710, %r8711, %r8712, %r2;
	// inline asm
	st.u32 	[%rd18+8], %r8710;
	ld.u32 	%r8715, [%rd16+8];
	ld.u32 	%r8716, [%rd16+4];
	// inline asm
	prmt.b32 %r8714, %r8715, %r8716, %r2;
	// inline asm
	st.u32 	[%rd18+4], %r8714;
	ld.u32 	%r8719, [%rd16+4];
	ld.u32 	%r8720, [%rd16];
	// inline asm
	prmt.b32 %r8718, %r8719, %r8720, %r2;
	// inline asm
	st.u32 	[%rd18], %r8718;
	ld.u32 	%r8723, [%rd16];
	ld.u32 	%r8724, [%rd15+12];
	// inline asm
	prmt.b32 %r8722, %r8723, %r8724, %r2;
	// inline asm
	st.u32 	[%rd17+12], %r8722;
	ld.u32 	%r8727, [%rd15+12];
	ld.u32 	%r8728, [%rd15+8];
	// inline asm
	prmt.b32 %r8726, %r8727, %r8728, %r2;
	// inline asm
	st.u32 	[%rd17+8], %r8726;
	ld.u32 	%r8731, [%rd15+8];
	ld.u32 	%r8732, [%rd15+4];
	// inline asm
	prmt.b32 %r8730, %r8731, %r8732, %r2;
	// inline asm
	st.u32 	[%rd17+4], %r8730;
	ld.u32 	%r8735, [%rd15+4];
	ld.u32 	%r8736, [%rd15];
	// inline asm
	prmt.b32 %r8734, %r8735, %r8736, %r2;
	// inline asm
	st.u32 	[%rd17], %r8734;
	ld.u32 	%r8739, [%rd15];
	ld.u32 	%r8740, [%rd14+12];
	// inline asm
	prmt.b32 %r8738, %r8739, %r8740, %r2;
	// inline asm
	st.u32 	[%rd16+12], %r8738;
	ld.u32 	%r8743, [%rd14+12];
	ld.u32 	%r8744, [%rd14+8];
	// inline asm
	prmt.b32 %r8742, %r8743, %r8744, %r2;
	// inline asm
	st.u32 	[%rd16+8], %r8742;
	ld.u32 	%r8747, [%rd14+8];
	ld.u32 	%r8748, [%rd14+4];
	// inline asm
	prmt.b32 %r8746, %r8747, %r8748, %r2;
	// inline asm
	st.u32 	[%rd16+4], %r8746;
	ld.u32 	%r8751, [%rd14+4];
	ld.u32 	%r8752, [%rd14];
	// inline asm
	prmt.b32 %r8750, %r8751, %r8752, %r2;
	// inline asm
	st.u32 	[%rd16], %r8750;
	ld.u32 	%r8755, [%rd14];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r8754, %r8755, %r9705, %r2;
	// inline asm
	st.u32 	[%rd15+12], %r8754;
	st.u32 	[%rd15+8], %r9705;
	st.u32 	[%rd15+4], %r9705;
	st.u32 	[%rd15], %r9705;
	st.u32 	[%rd14+12], %r9705;
	st.u32 	[%rd14+8], %r9705;
	mov.u64 	%rd2941, 0;
	st.u32 	[%rd14+4], %rd2941;
	st.u32 	[%rd14], %rd2941;
	bra.uni 	BB1_170;

BB1_17:
	setp.eq.s32	%p41, %r1, 7;
	@%p41 bra 	BB1_18;
	bra.uni 	BB1_87;

BB1_18:
	ld.u32 	%r4048, [%rd21+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9677, %r9672, %r4048, %r2;
	// inline asm
	ld.u32 	%r4051, [%rd21+12];
	ld.u32 	%r4052, [%rd21+8];
	// inline asm
	prmt.b32 %r9678, %r4051, %r4052, %r2;
	// inline asm
	ld.u32 	%r4055, [%rd21+8];
	ld.u32 	%r4056, [%rd21+4];
	// inline asm
	prmt.b32 %r9679, %r4055, %r4056, %r2;
	// inline asm
	ld.u32 	%r4059, [%rd21+4];
	ld.u32 	%r4060, [%rd21];
	// inline asm
	prmt.b32 %r9680, %r4059, %r4060, %r2;
	// inline asm
	ld.u32 	%r4063, [%rd21];
	ld.u32 	%r4064, [%rd20+12];
	// inline asm
	prmt.b32 %r9673, %r4063, %r4064, %r2;
	// inline asm
	ld.u32 	%r4067, [%rd20+12];
	ld.u32 	%r4068, [%rd20+8];
	// inline asm
	prmt.b32 %r9674, %r4067, %r4068, %r2;
	// inline asm
	ld.u32 	%r4071, [%rd20+8];
	ld.u32 	%r4072, [%rd20+4];
	// inline asm
	prmt.b32 %r9675, %r4071, %r4072, %r2;
	// inline asm
	ld.u32 	%r4075, [%rd20+4];
	ld.u32 	%r4076, [%rd20];
	// inline asm
	prmt.b32 %r9676, %r4075, %r4076, %r2;
	// inline asm
	ld.u32 	%r4079, [%rd20];
	ld.u32 	%r4080, [%rd19+12];
	// inline asm
	prmt.b32 %r4078, %r4079, %r4080, %r2;
	// inline asm
	st.u32 	[%rd21+12], %r4078;
	ld.u32 	%r4083, [%rd19+12];
	ld.u32 	%r4084, [%rd19+8];
	// inline asm
	prmt.b32 %r4082, %r4083, %r4084, %r2;
	// inline asm
	st.u32 	[%rd21+8], %r4082;
	ld.u32 	%r4087, [%rd19+8];
	ld.u32 	%r4088, [%rd19+4];
	// inline asm
	prmt.b32 %r4086, %r4087, %r4088, %r2;
	// inline asm
	st.u32 	[%rd21+4], %r4086;
	ld.u32 	%r4091, [%rd19+4];
	ld.u32 	%r4092, [%rd19];
	// inline asm
	prmt.b32 %r4090, %r4091, %r4092, %r2;
	// inline asm
	st.u32 	[%rd21], %r4090;
	ld.u32 	%r4095, [%rd19];
	ld.u32 	%r4096, [%rd18+12];
	// inline asm
	prmt.b32 %r4094, %r4095, %r4096, %r2;
	// inline asm
	st.u32 	[%rd20+12], %r4094;
	ld.u32 	%r4099, [%rd18+12];
	ld.u32 	%r4100, [%rd18+8];
	// inline asm
	prmt.b32 %r4098, %r4099, %r4100, %r2;
	// inline asm
	st.u32 	[%rd20+8], %r4098;
	ld.u32 	%r4103, [%rd18+8];
	ld.u32 	%r4104, [%rd18+4];
	// inline asm
	prmt.b32 %r4102, %r4103, %r4104, %r2;
	// inline asm
	st.u32 	[%rd20+4], %r4102;
	ld.u32 	%r4107, [%rd18+4];
	ld.u32 	%r4108, [%rd18];
	// inline asm
	prmt.b32 %r4106, %r4107, %r4108, %r2;
	// inline asm
	st.u32 	[%rd20], %r4106;
	ld.u32 	%r4111, [%rd18];
	ld.u32 	%r4112, [%rd17+12];
	// inline asm
	prmt.b32 %r4110, %r4111, %r4112, %r2;
	// inline asm
	st.u32 	[%rd19+12], %r4110;
	ld.u32 	%r4115, [%rd17+12];
	ld.u32 	%r4116, [%rd17+8];
	// inline asm
	prmt.b32 %r4114, %r4115, %r4116, %r2;
	// inline asm
	st.u32 	[%rd19+8], %r4114;
	ld.u32 	%r4119, [%rd17+8];
	ld.u32 	%r4120, [%rd17+4];
	// inline asm
	prmt.b32 %r4118, %r4119, %r4120, %r2;
	// inline asm
	st.u32 	[%rd19+4], %r4118;
	ld.u32 	%r4123, [%rd17+4];
	ld.u32 	%r4124, [%rd17];
	// inline asm
	prmt.b32 %r4122, %r4123, %r4124, %r2;
	// inline asm
	st.u32 	[%rd19], %r4122;
	ld.u32 	%r4127, [%rd17];
	ld.u32 	%r4128, [%rd16+12];
	// inline asm
	prmt.b32 %r4126, %r4127, %r4128, %r2;
	// inline asm
	st.u32 	[%rd18+12], %r4126;
	ld.u32 	%r4131, [%rd16+12];
	ld.u32 	%r4132, [%rd16+8];
	// inline asm
	prmt.b32 %r4130, %r4131, %r4132, %r2;
	// inline asm
	st.u32 	[%rd18+8], %r4130;
	ld.u32 	%r4135, [%rd16+8];
	ld.u32 	%r4136, [%rd16+4];
	// inline asm
	prmt.b32 %r4134, %r4135, %r4136, %r2;
	// inline asm
	st.u32 	[%rd18+4], %r4134;
	ld.u32 	%r4139, [%rd16+4];
	ld.u32 	%r4140, [%rd16];
	// inline asm
	prmt.b32 %r4138, %r4139, %r4140, %r2;
	// inline asm
	st.u32 	[%rd18], %r4138;
	ld.u32 	%r4143, [%rd16];
	ld.u32 	%r4144, [%rd15+12];
	// inline asm
	prmt.b32 %r4142, %r4143, %r4144, %r2;
	// inline asm
	st.u32 	[%rd17+12], %r4142;
	ld.u32 	%r4147, [%rd15+12];
	ld.u32 	%r4148, [%rd15+8];
	// inline asm
	prmt.b32 %r4146, %r4147, %r4148, %r2;
	// inline asm
	st.u32 	[%rd17+8], %r4146;
	ld.u32 	%r4151, [%rd15+8];
	ld.u32 	%r4152, [%rd15+4];
	// inline asm
	prmt.b32 %r4150, %r4151, %r4152, %r2;
	// inline asm
	st.u32 	[%rd17+4], %r4150;
	ld.u32 	%r4155, [%rd15+4];
	ld.u32 	%r4156, [%rd15];
	// inline asm
	prmt.b32 %r4154, %r4155, %r4156, %r2;
	// inline asm
	st.u32 	[%rd17], %r4154;
	ld.u32 	%r4159, [%rd15];
	ld.u32 	%r4160, [%rd14+12];
	// inline asm
	prmt.b32 %r4158, %r4159, %r4160, %r2;
	// inline asm
	st.u32 	[%rd16+12], %r4158;
	ld.u32 	%r4163, [%rd14+12];
	ld.u32 	%r4164, [%rd14+8];
	// inline asm
	prmt.b32 %r4162, %r4163, %r4164, %r2;
	// inline asm
	st.u32 	[%rd16+8], %r4162;
	ld.u32 	%r4167, [%rd14+8];
	ld.u32 	%r4168, [%rd14+4];
	// inline asm
	prmt.b32 %r4166, %r4167, %r4168, %r2;
	// inline asm
	st.u32 	[%rd16+4], %r4166;
	ld.u32 	%r4171, [%rd14+4];
	ld.u32 	%r4172, [%rd14];
	// inline asm
	prmt.b32 %r4170, %r4171, %r4172, %r2;
	// inline asm
	st.u32 	[%rd16], %r4170;
	ld.u32 	%r4175, [%rd14];
	// inline asm
	prmt.b32 %r4174, %r4175, %r9672, %r2;
	// inline asm
	st.u32 	[%rd15+12], %r4174;
	st.u32 	[%rd15+8], %r9672;
	st.u32 	[%rd15+4], %r9672;
	st.u32 	[%rd15], %r9672;
	st.u32 	[%rd14+12], %r9672;
	st.u32 	[%rd14+8], %r9672;
	mov.u64 	%rd47, 0;
	st.u32 	[%rd14+4], %rd47;
	st.u32 	[%rd14], %rd47;

BB1_79:
	mov.u32 	%r9681, %r9672;
	mov.u32 	%r9682, %r9672;
	mov.u32 	%r9683, %r9672;
	mov.u32 	%r9684, %r9672;

BB1_80:
	mov.u32 	%r9685, %r9672;
	mov.u32 	%r9686, %r9672;
	mov.u32 	%r9687, %r9672;
	mov.u32 	%r9688, %r9672;

BB1_81:
	mov.u32 	%r9689, %r9672;
	mov.u32 	%r9690, %r9672;
	mov.u32 	%r9691, %r9672;
	mov.u32 	%r9692, %r9672;

BB1_82:
	mov.u32 	%r9693, %r9672;
	mov.u32 	%r9694, %r9672;
	mov.u32 	%r9695, %r9672;
	mov.u32 	%r9696, %r9672;

BB1_83:
	mov.u32 	%r9697, %r9672;
	mov.u32 	%r9698, %r9672;
	mov.u32 	%r9699, %r9672;
	mov.u32 	%r9700, %r9672;

BB1_84:
	mov.u32 	%r9701, %r9672;
	mov.u32 	%r9702, %r9672;
	mov.u32 	%r9703, %r9672;
	mov.u32 	%r9704, %r9672;
	bra.uni 	BB1_89;

BB1_136:
	setp.eq.s32	%p65, %r1, 23;
	@%p65 bra 	BB1_137;
	bra.uni 	BB1_169;

BB1_137:
	ld.u32 	%r7587, [%rd16];
	ld.u32 	%r7588, [%rd15+12];
	// inline asm
	prmt.b32 %r7586, %r7587, %r7588, %r2;
	// inline asm
	st.u32 	[%rd21+12], %r7586;
	ld.u32 	%r7591, [%rd15+12];
	ld.u32 	%r7592, [%rd15+8];
	// inline asm
	prmt.b32 %r7590, %r7591, %r7592, %r2;
	// inline asm
	st.u32 	[%rd21+8], %r7590;
	ld.u32 	%r7595, [%rd15+8];
	ld.u32 	%r7596, [%rd15+4];
	// inline asm
	prmt.b32 %r7594, %r7595, %r7596, %r2;
	// inline asm
	st.u32 	[%rd21+4], %r7594;
	ld.u32 	%r7599, [%rd15+4];
	ld.u32 	%r7600, [%rd15];
	// inline asm
	prmt.b32 %r7598, %r7599, %r7600, %r2;
	// inline asm
	st.u32 	[%rd21], %r7598;
	ld.u32 	%r7603, [%rd15];
	ld.u32 	%r7604, [%rd14+12];
	// inline asm
	prmt.b32 %r7602, %r7603, %r7604, %r2;
	// inline asm
	st.u32 	[%rd20+12], %r7602;
	ld.u32 	%r7607, [%rd14+12];
	ld.u32 	%r7608, [%rd14+8];
	// inline asm
	prmt.b32 %r7606, %r7607, %r7608, %r2;
	// inline asm
	st.u32 	[%rd20+8], %r7606;
	ld.u32 	%r7611, [%rd14+8];
	ld.u32 	%r7612, [%rd14+4];
	// inline asm
	prmt.b32 %r7610, %r7611, %r7612, %r2;
	// inline asm
	st.u32 	[%rd20+4], %r7610;
	ld.u32 	%r7615, [%rd14+4];
	ld.u32 	%r7616, [%rd14];
	// inline asm
	prmt.b32 %r7614, %r7615, %r7616, %r2;
	// inline asm
	st.u32 	[%rd20], %r7614;
	ld.u32 	%r7619, [%rd14];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r7618, %r7619, %r9705, %r2;
	// inline asm
	st.u32 	[%rd19+12], %r7618;
	st.u32 	[%rd19+8], %r9705;
	st.u32 	[%rd19+4], %r9705;
	st.u32 	[%rd19], %r9705;
	st.u32 	[%rd18+12], %r9705;
	st.u32 	[%rd18+8], %r9705;
	st.u32 	[%rd18+4], %r9705;
	st.u32 	[%rd18], %r9705;
	st.u32 	[%rd17+12], %r9705;
	st.u32 	[%rd17+8], %r9705;
	st.u32 	[%rd17+4], %r9705;
	st.u32 	[%rd17], %r9705;
	st.u32 	[%rd16+12], %r9705;
	st.u32 	[%rd16+8], %r9705;
	st.u32 	[%rd16+4], %r9705;
	st.u32 	[%rd16], %r9705;
	st.u32 	[%rd15+12], %r9705;
	st.u32 	[%rd15+8], %r9705;
	st.u32 	[%rd15+4], %r9705;
	st.u32 	[%rd15], %r9705;
	st.u32 	[%rd14+12], %r9705;
	st.u32 	[%rd14+8], %r9705;
	mov.u64 	%rd2925, 0;
	st.u32 	[%rd14+4], %rd2925;
	st.u32 	[%rd14], %rd2925;
	bra.uni 	BB1_170;

BB1_48:
	setp.eq.s32	%p18, %r1, 23;
	@%p18 bra 	BB1_49;
	bra.uni 	BB1_87;

BB1_49:
	ld.u32 	%r1672, [%rd21+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9693, %r9672, %r1672, %r2;
	// inline asm
	ld.u32 	%r1675, [%rd21+12];
	ld.u32 	%r1676, [%rd21+8];
	// inline asm
	prmt.b32 %r9694, %r1675, %r1676, %r2;
	// inline asm
	ld.u32 	%r1679, [%rd21+8];
	ld.u32 	%r1680, [%rd21+4];
	// inline asm
	prmt.b32 %r9695, %r1679, %r1680, %r2;
	// inline asm
	ld.u32 	%r1683, [%rd21+4];
	ld.u32 	%r1684, [%rd21];
	// inline asm
	prmt.b32 %r9696, %r1683, %r1684, %r2;
	// inline asm
	ld.u32 	%r1687, [%rd21];
	ld.u32 	%r1688, [%rd20+12];
	// inline asm
	prmt.b32 %r9689, %r1687, %r1688, %r2;
	// inline asm
	ld.u32 	%r1691, [%rd20+12];
	ld.u32 	%r1692, [%rd20+8];
	// inline asm
	prmt.b32 %r9690, %r1691, %r1692, %r2;
	// inline asm
	ld.u32 	%r1695, [%rd20+8];
	ld.u32 	%r1696, [%rd20+4];
	// inline asm
	prmt.b32 %r9691, %r1695, %r1696, %r2;
	// inline asm
	ld.u32 	%r1699, [%rd20+4];
	ld.u32 	%r1700, [%rd20];
	// inline asm
	prmt.b32 %r9692, %r1699, %r1700, %r2;
	// inline asm
	ld.u32 	%r1703, [%rd20];
	ld.u32 	%r1704, [%rd19+12];
	// inline asm
	prmt.b32 %r9685, %r1703, %r1704, %r2;
	// inline asm
	ld.u32 	%r1707, [%rd19+12];
	ld.u32 	%r1708, [%rd19+8];
	// inline asm
	prmt.b32 %r9686, %r1707, %r1708, %r2;
	// inline asm
	ld.u32 	%r1711, [%rd19+8];
	ld.u32 	%r1712, [%rd19+4];
	// inline asm
	prmt.b32 %r9687, %r1711, %r1712, %r2;
	// inline asm
	ld.u32 	%r1715, [%rd19+4];
	ld.u32 	%r1716, [%rd19];
	// inline asm
	prmt.b32 %r9688, %r1715, %r1716, %r2;
	// inline asm
	ld.u32 	%r1719, [%rd19];
	ld.u32 	%r1720, [%rd18+12];
	// inline asm
	prmt.b32 %r9681, %r1719, %r1720, %r2;
	// inline asm
	ld.u32 	%r1723, [%rd18+12];
	ld.u32 	%r1724, [%rd18+8];
	// inline asm
	prmt.b32 %r9682, %r1723, %r1724, %r2;
	// inline asm
	ld.u32 	%r1727, [%rd18+8];
	ld.u32 	%r1728, [%rd18+4];
	// inline asm
	prmt.b32 %r9683, %r1727, %r1728, %r2;
	// inline asm
	ld.u32 	%r1731, [%rd18+4];
	ld.u32 	%r1732, [%rd18];
	// inline asm
	prmt.b32 %r9684, %r1731, %r1732, %r2;
	// inline asm
	ld.u32 	%r1735, [%rd18];
	ld.u32 	%r1736, [%rd17+12];
	// inline asm
	prmt.b32 %r9677, %r1735, %r1736, %r2;
	// inline asm
	ld.u32 	%r1739, [%rd17+12];
	ld.u32 	%r1740, [%rd17+8];
	// inline asm
	prmt.b32 %r9678, %r1739, %r1740, %r2;
	// inline asm
	ld.u32 	%r1743, [%rd17+8];
	ld.u32 	%r1744, [%rd17+4];
	// inline asm
	prmt.b32 %r9679, %r1743, %r1744, %r2;
	// inline asm
	ld.u32 	%r1747, [%rd17+4];
	ld.u32 	%r1748, [%rd17];
	// inline asm
	prmt.b32 %r9680, %r1747, %r1748, %r2;
	// inline asm
	ld.u32 	%r1751, [%rd17];
	ld.u32 	%r1752, [%rd16+12];
	// inline asm
	prmt.b32 %r9673, %r1751, %r1752, %r2;
	// inline asm
	ld.u32 	%r1755, [%rd16+12];
	ld.u32 	%r1756, [%rd16+8];
	// inline asm
	prmt.b32 %r9674, %r1755, %r1756, %r2;
	// inline asm
	ld.u32 	%r1759, [%rd16+8];
	ld.u32 	%r1760, [%rd16+4];
	// inline asm
	prmt.b32 %r9675, %r1759, %r1760, %r2;
	// inline asm
	ld.u32 	%r1763, [%rd16+4];
	ld.u32 	%r1764, [%rd16];
	// inline asm
	prmt.b32 %r9676, %r1763, %r1764, %r2;
	// inline asm
	ld.u32 	%r1767, [%rd16];
	ld.u32 	%r1768, [%rd15+12];
	// inline asm
	prmt.b32 %r1766, %r1767, %r1768, %r2;
	// inline asm
	st.u32 	[%rd21+12], %r1766;
	ld.u32 	%r1771, [%rd15+12];
	ld.u32 	%r1772, [%rd15+8];
	// inline asm
	prmt.b32 %r1770, %r1771, %r1772, %r2;
	// inline asm
	st.u32 	[%rd21+8], %r1770;
	ld.u32 	%r1775, [%rd15+8];
	ld.u32 	%r1776, [%rd15+4];
	// inline asm
	prmt.b32 %r1774, %r1775, %r1776, %r2;
	// inline asm
	st.u32 	[%rd21+4], %r1774;
	ld.u32 	%r1779, [%rd15+4];
	ld.u32 	%r1780, [%rd15];
	// inline asm
	prmt.b32 %r1778, %r1779, %r1780, %r2;
	// inline asm
	st.u32 	[%rd21], %r1778;
	ld.u32 	%r1783, [%rd15];
	ld.u32 	%r1784, [%rd14+12];
	// inline asm
	prmt.b32 %r1782, %r1783, %r1784, %r2;
	// inline asm
	st.u32 	[%rd20+12], %r1782;
	ld.u32 	%r1787, [%rd14+12];
	ld.u32 	%r1788, [%rd14+8];
	// inline asm
	prmt.b32 %r1786, %r1787, %r1788, %r2;
	// inline asm
	st.u32 	[%rd20+8], %r1786;
	ld.u32 	%r1791, [%rd14+8];
	ld.u32 	%r1792, [%rd14+4];
	// inline asm
	prmt.b32 %r1790, %r1791, %r1792, %r2;
	// inline asm
	st.u32 	[%rd20+4], %r1790;
	ld.u32 	%r1795, [%rd14+4];
	ld.u32 	%r1796, [%rd14];
	// inline asm
	prmt.b32 %r1794, %r1795, %r1796, %r2;
	// inline asm
	st.u32 	[%rd20], %r1794;
	ld.u32 	%r1799, [%rd14];
	// inline asm
	prmt.b32 %r1798, %r1799, %r9672, %r2;
	// inline asm
	st.u32 	[%rd19+12], %r1798;
	st.u32 	[%rd19+8], %r9672;
	st.u32 	[%rd19+4], %r9672;
	st.u32 	[%rd19], %r9672;
	st.u32 	[%rd18+12], %r9672;
	st.u32 	[%rd18+8], %r9672;
	st.u32 	[%rd18+4], %r9672;
	st.u32 	[%rd18], %r9672;
	st.u32 	[%rd17+12], %r9672;
	st.u32 	[%rd17+8], %r9672;
	st.u32 	[%rd17+4], %r9672;
	st.u32 	[%rd17], %r9672;
	st.u32 	[%rd16+12], %r9672;
	st.u32 	[%rd16+8], %r9672;
	st.u32 	[%rd16+4], %r9672;
	st.u32 	[%rd16], %r9672;
	st.u32 	[%rd15+12], %r9672;
	st.u32 	[%rd15+8], %r9672;
	st.u32 	[%rd15+4], %r9672;
	st.u32 	[%rd15], %r9672;
	st.u32 	[%rd14+12], %r9672;
	st.u32 	[%rd14+8], %r9672;
	mov.u64 	%rd31, 0;
	st.u32 	[%rd14+4], %rd31;
	st.u32 	[%rd14], %rd31;
	bra.uni 	BB1_83;

BB1_120:
	setp.eq.s32	%p77, %r1, 15;
	@%p77 bra 	BB1_121;
	bra.uni 	BB1_169;

BB1_121:
	ld.u32 	%r7995, [%rd18];
	ld.u32 	%r7996, [%rd17+12];
	// inline asm
	prmt.b32 %r7994, %r7995, %r7996, %r2;
	// inline asm
	st.u32 	[%rd21+12], %r7994;
	ld.u32 	%r7999, [%rd17+12];
	ld.u32 	%r8000, [%rd17+8];
	// inline asm
	prmt.b32 %r7998, %r7999, %r8000, %r2;
	// inline asm
	st.u32 	[%rd21+8], %r7998;
	ld.u32 	%r8003, [%rd17+8];
	ld.u32 	%r8004, [%rd17+4];
	// inline asm
	prmt.b32 %r8002, %r8003, %r8004, %r2;
	// inline asm
	st.u32 	[%rd21+4], %r8002;
	ld.u32 	%r8007, [%rd17+4];
	ld.u32 	%r8008, [%rd17];
	// inline asm
	prmt.b32 %r8006, %r8007, %r8008, %r2;
	// inline asm
	st.u32 	[%rd21], %r8006;
	ld.u32 	%r8011, [%rd17];
	ld.u32 	%r8012, [%rd16+12];
	// inline asm
	prmt.b32 %r8010, %r8011, %r8012, %r2;
	// inline asm
	st.u32 	[%rd20+12], %r8010;
	ld.u32 	%r8015, [%rd16+12];
	ld.u32 	%r8016, [%rd16+8];
	// inline asm
	prmt.b32 %r8014, %r8015, %r8016, %r2;
	// inline asm
	st.u32 	[%rd20+8], %r8014;
	ld.u32 	%r8019, [%rd16+8];
	ld.u32 	%r8020, [%rd16+4];
	// inline asm
	prmt.b32 %r8018, %r8019, %r8020, %r2;
	// inline asm
	st.u32 	[%rd20+4], %r8018;
	ld.u32 	%r8023, [%rd16+4];
	ld.u32 	%r8024, [%rd16];
	// inline asm
	prmt.b32 %r8022, %r8023, %r8024, %r2;
	// inline asm
	st.u32 	[%rd20], %r8022;
	ld.u32 	%r8027, [%rd16];
	ld.u32 	%r8028, [%rd15+12];
	// inline asm
	prmt.b32 %r8026, %r8027, %r8028, %r2;
	// inline asm
	st.u32 	[%rd19+12], %r8026;
	ld.u32 	%r8031, [%rd15+12];
	ld.u32 	%r8032, [%rd15+8];
	// inline asm
	prmt.b32 %r8030, %r8031, %r8032, %r2;
	// inline asm
	st.u32 	[%rd19+8], %r8030;
	ld.u32 	%r8035, [%rd15+8];
	ld.u32 	%r8036, [%rd15+4];
	// inline asm
	prmt.b32 %r8034, %r8035, %r8036, %r2;
	// inline asm
	st.u32 	[%rd19+4], %r8034;
	ld.u32 	%r8039, [%rd15+4];
	ld.u32 	%r8040, [%rd15];
	// inline asm
	prmt.b32 %r8038, %r8039, %r8040, %r2;
	// inline asm
	st.u32 	[%rd19], %r8038;
	ld.u32 	%r8043, [%rd15];
	ld.u32 	%r8044, [%rd14+12];
	// inline asm
	prmt.b32 %r8042, %r8043, %r8044, %r2;
	// inline asm
	st.u32 	[%rd18+12], %r8042;
	ld.u32 	%r8047, [%rd14+12];
	ld.u32 	%r8048, [%rd14+8];
	// inline asm
	prmt.b32 %r8046, %r8047, %r8048, %r2;
	// inline asm
	st.u32 	[%rd18+8], %r8046;
	ld.u32 	%r8051, [%rd14+8];
	ld.u32 	%r8052, [%rd14+4];
	// inline asm
	prmt.b32 %r8050, %r8051, %r8052, %r2;
	// inline asm
	st.u32 	[%rd18+4], %r8050;
	ld.u32 	%r8055, [%rd14+4];
	ld.u32 	%r8056, [%rd14];
	// inline asm
	prmt.b32 %r8054, %r8055, %r8056, %r2;
	// inline asm
	st.u32 	[%rd18], %r8054;
	ld.u32 	%r8059, [%rd14];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r8058, %r8059, %r9705, %r2;
	// inline asm
	st.u32 	[%rd17+12], %r8058;
	st.u32 	[%rd17+8], %r9705;
	st.u32 	[%rd17+4], %r9705;
	st.u32 	[%rd17], %r9705;
	st.u32 	[%rd16+12], %r9705;
	st.u32 	[%rd16+8], %r9705;
	st.u32 	[%rd16+4], %r9705;
	st.u32 	[%rd16], %r9705;
	st.u32 	[%rd15+12], %r9705;
	st.u32 	[%rd15+8], %r9705;
	st.u32 	[%rd15+4], %r9705;
	st.u32 	[%rd15], %r9705;
	st.u32 	[%rd14+12], %r9705;
	st.u32 	[%rd14+8], %r9705;
	mov.u64 	%rd2933, 0;
	st.u32 	[%rd14+4], %rd2933;
	st.u32 	[%rd14], %rd2933;
	bra.uni 	BB1_170;

BB1_32:
	setp.eq.s32	%p30, %r1, 15;
	@%p30 bra 	BB1_33;
	bra.uni 	BB1_87;

BB1_33:
	ld.u32 	%r2828, [%rd21+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9685, %r9672, %r2828, %r2;
	// inline asm
	ld.u32 	%r2831, [%rd21+12];
	ld.u32 	%r2832, [%rd21+8];
	// inline asm
	prmt.b32 %r9686, %r2831, %r2832, %r2;
	// inline asm
	ld.u32 	%r2835, [%rd21+8];
	ld.u32 	%r2836, [%rd21+4];
	// inline asm
	prmt.b32 %r9687, %r2835, %r2836, %r2;
	// inline asm
	ld.u32 	%r2839, [%rd21+4];
	ld.u32 	%r2840, [%rd21];
	// inline asm
	prmt.b32 %r9688, %r2839, %r2840, %r2;
	// inline asm
	ld.u32 	%r2843, [%rd21];
	ld.u32 	%r2844, [%rd20+12];
	// inline asm
	prmt.b32 %r9681, %r2843, %r2844, %r2;
	// inline asm
	ld.u32 	%r2847, [%rd20+12];
	ld.u32 	%r2848, [%rd20+8];
	// inline asm
	prmt.b32 %r9682, %r2847, %r2848, %r2;
	// inline asm
	ld.u32 	%r2851, [%rd20+8];
	ld.u32 	%r2852, [%rd20+4];
	// inline asm
	prmt.b32 %r9683, %r2851, %r2852, %r2;
	// inline asm
	ld.u32 	%r2855, [%rd20+4];
	ld.u32 	%r2856, [%rd20];
	// inline asm
	prmt.b32 %r9684, %r2855, %r2856, %r2;
	// inline asm
	ld.u32 	%r2859, [%rd20];
	ld.u32 	%r2860, [%rd19+12];
	// inline asm
	prmt.b32 %r9677, %r2859, %r2860, %r2;
	// inline asm
	ld.u32 	%r2863, [%rd19+12];
	ld.u32 	%r2864, [%rd19+8];
	// inline asm
	prmt.b32 %r9678, %r2863, %r2864, %r2;
	// inline asm
	ld.u32 	%r2867, [%rd19+8];
	ld.u32 	%r2868, [%rd19+4];
	// inline asm
	prmt.b32 %r9679, %r2867, %r2868, %r2;
	// inline asm
	ld.u32 	%r2871, [%rd19+4];
	ld.u32 	%r2872, [%rd19];
	// inline asm
	prmt.b32 %r9680, %r2871, %r2872, %r2;
	// inline asm
	ld.u32 	%r2875, [%rd19];
	ld.u32 	%r2876, [%rd18+12];
	// inline asm
	prmt.b32 %r9673, %r2875, %r2876, %r2;
	// inline asm
	ld.u32 	%r2879, [%rd18+12];
	ld.u32 	%r2880, [%rd18+8];
	// inline asm
	prmt.b32 %r9674, %r2879, %r2880, %r2;
	// inline asm
	ld.u32 	%r2883, [%rd18+8];
	ld.u32 	%r2884, [%rd18+4];
	// inline asm
	prmt.b32 %r9675, %r2883, %r2884, %r2;
	// inline asm
	ld.u32 	%r2887, [%rd18+4];
	ld.u32 	%r2888, [%rd18];
	// inline asm
	prmt.b32 %r9676, %r2887, %r2888, %r2;
	// inline asm
	ld.u32 	%r2891, [%rd18];
	ld.u32 	%r2892, [%rd17+12];
	// inline asm
	prmt.b32 %r2890, %r2891, %r2892, %r2;
	// inline asm
	st.u32 	[%rd21+12], %r2890;
	ld.u32 	%r2895, [%rd17+12];
	ld.u32 	%r2896, [%rd17+8];
	// inline asm
	prmt.b32 %r2894, %r2895, %r2896, %r2;
	// inline asm
	st.u32 	[%rd21+8], %r2894;
	ld.u32 	%r2899, [%rd17+8];
	ld.u32 	%r2900, [%rd17+4];
	// inline asm
	prmt.b32 %r2898, %r2899, %r2900, %r2;
	// inline asm
	st.u32 	[%rd21+4], %r2898;
	ld.u32 	%r2903, [%rd17+4];
	ld.u32 	%r2904, [%rd17];
	// inline asm
	prmt.b32 %r2902, %r2903, %r2904, %r2;
	// inline asm
	st.u32 	[%rd21], %r2902;
	ld.u32 	%r2907, [%rd17];
	ld.u32 	%r2908, [%rd16+12];
	// inline asm
	prmt.b32 %r2906, %r2907, %r2908, %r2;
	// inline asm
	st.u32 	[%rd20+12], %r2906;
	ld.u32 	%r2911, [%rd16+12];
	ld.u32 	%r2912, [%rd16+8];
	// inline asm
	prmt.b32 %r2910, %r2911, %r2912, %r2;
	// inline asm
	st.u32 	[%rd20+8], %r2910;
	ld.u32 	%r2915, [%rd16+8];
	ld.u32 	%r2916, [%rd16+4];
	// inline asm
	prmt.b32 %r2914, %r2915, %r2916, %r2;
	// inline asm
	st.u32 	[%rd20+4], %r2914;
	ld.u32 	%r2919, [%rd16+4];
	ld.u32 	%r2920, [%rd16];
	// inline asm
	prmt.b32 %r2918, %r2919, %r2920, %r2;
	// inline asm
	st.u32 	[%rd20], %r2918;
	ld.u32 	%r2923, [%rd16];
	ld.u32 	%r2924, [%rd15+12];
	// inline asm
	prmt.b32 %r2922, %r2923, %r2924, %r2;
	// inline asm
	st.u32 	[%rd19+12], %r2922;
	ld.u32 	%r2927, [%rd15+12];
	ld.u32 	%r2928, [%rd15+8];
	// inline asm
	prmt.b32 %r2926, %r2927, %r2928, %r2;
	// inline asm
	st.u32 	[%rd19+8], %r2926;
	ld.u32 	%r2931, [%rd15+8];
	ld.u32 	%r2932, [%rd15+4];
	// inline asm
	prmt.b32 %r2930, %r2931, %r2932, %r2;
	// inline asm
	st.u32 	[%rd19+4], %r2930;
	ld.u32 	%r2935, [%rd15+4];
	ld.u32 	%r2936, [%rd15];
	// inline asm
	prmt.b32 %r2934, %r2935, %r2936, %r2;
	// inline asm
	st.u32 	[%rd19], %r2934;
	ld.u32 	%r2939, [%rd15];
	ld.u32 	%r2940, [%rd14+12];
	// inline asm
	prmt.b32 %r2938, %r2939, %r2940, %r2;
	// inline asm
	st.u32 	[%rd18+12], %r2938;
	ld.u32 	%r2943, [%rd14+12];
	ld.u32 	%r2944, [%rd14+8];
	// inline asm
	prmt.b32 %r2942, %r2943, %r2944, %r2;
	// inline asm
	st.u32 	[%rd18+8], %r2942;
	ld.u32 	%r2947, [%rd14+8];
	ld.u32 	%r2948, [%rd14+4];
	// inline asm
	prmt.b32 %r2946, %r2947, %r2948, %r2;
	// inline asm
	st.u32 	[%rd18+4], %r2946;
	ld.u32 	%r2951, [%rd14+4];
	ld.u32 	%r2952, [%rd14];
	// inline asm
	prmt.b32 %r2950, %r2951, %r2952, %r2;
	// inline asm
	st.u32 	[%rd18], %r2950;
	ld.u32 	%r2955, [%rd14];
	// inline asm
	prmt.b32 %r2954, %r2955, %r9672, %r2;
	// inline asm
	st.u32 	[%rd17+12], %r2954;
	st.u32 	[%rd17+8], %r9672;
	st.u32 	[%rd17+4], %r9672;
	st.u32 	[%rd17], %r9672;
	st.u32 	[%rd16+12], %r9672;
	st.u32 	[%rd16+8], %r9672;
	st.u32 	[%rd16+4], %r9672;
	st.u32 	[%rd16], %r9672;
	st.u32 	[%rd15+12], %r9672;
	st.u32 	[%rd15+8], %r9672;
	st.u32 	[%rd15+4], %r9672;
	st.u32 	[%rd15], %r9672;
	st.u32 	[%rd14+12], %r9672;
	st.u32 	[%rd14+8], %r9672;
	mov.u64 	%rd39, 0;
	st.u32 	[%rd14+4], %rd39;
	st.u32 	[%rd14], %rd39;
	bra.uni 	BB1_81;

BB1_151:
	setp.ne.s32	%p54, %r1, 31;
	@%p54 bra 	BB1_169;

	ld.u32 	%r7435, [%rd14];
	mov.u32 	%r9705, 0;
	// inline asm
	prmt.b32 %r7434, %r7435, %r9705, %r2;
	// inline asm
	st.u32 	[%rd21+12], %r7434;
	st.u32 	[%rd21+8], %r9705;
	st.u32 	[%rd21+4], %r9705;
	st.u32 	[%rd21], %r9705;
	st.u32 	[%rd20+12], %r9705;
	st.u32 	[%rd20+8], %r9705;
	st.u32 	[%rd20+4], %r9705;
	st.u32 	[%rd20], %r9705;
	st.u32 	[%rd19+12], %r9705;
	st.u32 	[%rd19+8], %r9705;
	st.u32 	[%rd19+4], %r9705;
	st.u32 	[%rd19], %r9705;
	st.u32 	[%rd18+12], %r9705;
	st.u32 	[%rd18+8], %r9705;
	st.u32 	[%rd18+4], %r9705;
	st.u32 	[%rd18], %r9705;
	st.u32 	[%rd17+12], %r9705;
	st.u32 	[%rd17+8], %r9705;
	st.u32 	[%rd17+4], %r9705;
	st.u32 	[%rd17], %r9705;
	st.u32 	[%rd16+12], %r9705;
	st.u32 	[%rd16+8], %r9705;
	st.u32 	[%rd16+4], %r9705;
	st.u32 	[%rd16], %r9705;
	st.u32 	[%rd15+12], %r9705;
	st.u32 	[%rd15+8], %r9705;
	st.u32 	[%rd15+4], %r9705;
	st.u32 	[%rd15], %r9705;
	st.u32 	[%rd14+12], %r9705;
	st.u32 	[%rd14+8], %r9705;
	mov.u64 	%rd2917, 0;
	st.u32 	[%rd14+4], %rd2917;
	st.u32 	[%rd14], %rd2917;
	bra.uni 	BB1_170;

BB1_169:
	ld.u32 	%r9705, [%rd14];

BB1_170:
	ld.u32 	%r9577, [%rd1+-128];
	or.b32  	%r9578, %r9577, %r9705;
	ld.u32 	%r9579, [%rd1+-124];
	ld.u32 	%r9580, [%rd1+-120];
	ld.u32 	%r9581, [%rd1+-116];
	ld.u32 	%r9582, [%rd1+-112];
	ld.u32 	%r9583, [%rd1+-108];
	ld.u32 	%r9584, [%rd1+-104];
	ld.u32 	%r9585, [%rd1+-100];
	ld.u32 	%r9586, [%rd1+-96];
	ld.u32 	%r9587, [%rd1+-92];
	ld.u32 	%r9588, [%rd1+-88];
	ld.u32 	%r9589, [%rd1+-84];
	ld.u32 	%r9590, [%rd1+-80];
	ld.u32 	%r9591, [%rd1+-76];
	ld.u32 	%r9592, [%rd1+-72];
	ld.u32 	%r9593, [%rd1+-68];
	ld.u32 	%r9594, [%rd1+-64];
	ld.u32 	%r9595, [%rd1+-60];
	ld.u32 	%r9596, [%rd1+-56];
	ld.u32 	%r9597, [%rd1+-52];
	ld.u32 	%r9598, [%rd1+-48];
	ld.u32 	%r9599, [%rd1+-44];
	ld.u32 	%r9600, [%rd1+-40];
	ld.u32 	%r9601, [%rd1+-36];
	ld.u32 	%r9602, [%rd1+-32];
	ld.u32 	%r9603, [%rd1+-28];
	ld.u32 	%r9604, [%rd1+-24];
	ld.u32 	%r9605, [%rd1+-20];
	ld.u32 	%r9606, [%rd1+-16];
	ld.u32 	%r9607, [%rd1+-12];
	ld.u32 	%r9608, [%rd1+-8];
	ld.u32 	%r9609, [%rd1+-4];
	st.u32 	[%rd1+-128], %r9578;
	ld.u32 	%r9610, [%rd14+4];
	or.b32  	%r9611, %r9579, %r9610;
	st.u32 	[%rd1+-124], %r9611;
	ld.u32 	%r9612, [%rd14+8];
	or.b32  	%r9613, %r9580, %r9612;
	st.u32 	[%rd1+-120], %r9613;
	ld.u32 	%r9614, [%rd14+12];
	or.b32  	%r9615, %r9581, %r9614;
	st.u32 	[%rd1+-116], %r9615;
	ld.u32 	%r9616, [%rd15];
	or.b32  	%r9617, %r9582, %r9616;
	st.u32 	[%rd1+-112], %r9617;
	ld.u32 	%r9618, [%rd15+4];
	or.b32  	%r9619, %r9583, %r9618;
	st.u32 	[%rd1+-108], %r9619;
	ld.u32 	%r9620, [%rd15+8];
	or.b32  	%r9621, %r9584, %r9620;
	st.u32 	[%rd1+-104], %r9621;
	ld.u32 	%r9622, [%rd15+12];
	or.b32  	%r9623, %r9585, %r9622;
	st.u32 	[%rd1+-100], %r9623;
	ld.u32 	%r9624, [%rd16];
	or.b32  	%r9625, %r9586, %r9624;
	st.u32 	[%rd1+-96], %r9625;
	ld.u32 	%r9626, [%rd16+4];
	or.b32  	%r9627, %r9587, %r9626;
	st.u32 	[%rd1+-92], %r9627;
	ld.u32 	%r9628, [%rd16+8];
	or.b32  	%r9629, %r9588, %r9628;
	st.u32 	[%rd1+-88], %r9629;
	ld.u32 	%r9630, [%rd16+12];
	or.b32  	%r9631, %r9589, %r9630;
	st.u32 	[%rd1+-84], %r9631;
	ld.u32 	%r9632, [%rd17];
	or.b32  	%r9633, %r9590, %r9632;
	st.u32 	[%rd1+-80], %r9633;
	ld.u32 	%r9634, [%rd17+4];
	or.b32  	%r9635, %r9591, %r9634;
	st.u32 	[%rd1+-76], %r9635;
	ld.u32 	%r9636, [%rd17+8];
	or.b32  	%r9637, %r9592, %r9636;
	st.u32 	[%rd1+-72], %r9637;
	ld.u32 	%r9638, [%rd17+12];
	or.b32  	%r9639, %r9593, %r9638;
	st.u32 	[%rd1+-68], %r9639;
	ld.u32 	%r9640, [%rd18];
	or.b32  	%r9641, %r9594, %r9640;
	st.u32 	[%rd1+-64], %r9641;
	ld.u32 	%r9642, [%rd18+4];
	or.b32  	%r9643, %r9595, %r9642;
	st.u32 	[%rd1+-60], %r9643;
	ld.u32 	%r9644, [%rd18+8];
	or.b32  	%r9645, %r9596, %r9644;
	st.u32 	[%rd1+-56], %r9645;
	ld.u32 	%r9646, [%rd18+12];
	or.b32  	%r9647, %r9597, %r9646;
	st.u32 	[%rd1+-52], %r9647;
	ld.u32 	%r9648, [%rd19];
	or.b32  	%r9649, %r9598, %r9648;
	st.u32 	[%rd1+-48], %r9649;
	ld.u32 	%r9650, [%rd19+4];
	or.b32  	%r9651, %r9599, %r9650;
	st.u32 	[%rd1+-44], %r9651;
	ld.u32 	%r9652, [%rd19+8];
	or.b32  	%r9653, %r9600, %r9652;
	st.u32 	[%rd1+-40], %r9653;
	ld.u32 	%r9654, [%rd19+12];
	or.b32  	%r9655, %r9601, %r9654;
	st.u32 	[%rd1+-36], %r9655;
	ld.u32 	%r9656, [%rd20];
	or.b32  	%r9657, %r9602, %r9656;
	st.u32 	[%rd1+-32], %r9657;
	ld.u32 	%r9658, [%rd20+4];
	or.b32  	%r9659, %r9603, %r9658;
	st.u32 	[%rd1+-28], %r9659;
	ld.u32 	%r9660, [%rd20+8];
	or.b32  	%r9661, %r9604, %r9660;
	st.u32 	[%rd1+-24], %r9661;
	ld.u32 	%r9662, [%rd20+12];
	or.b32  	%r9663, %r9605, %r9662;
	st.u32 	[%rd1+-20], %r9663;
	ld.u32 	%r9664, [%rd21];
	or.b32  	%r9665, %r9606, %r9664;
	st.u32 	[%rd1+-16], %r9665;
	ld.u32 	%r9666, [%rd21+4];
	or.b32  	%r9667, %r9607, %r9666;
	st.u32 	[%rd1+-12], %r9667;
	ld.u32 	%r9668, [%rd21+8];
	or.b32  	%r9669, %r9608, %r9668;
	st.u32 	[%rd1+-8], %r9669;
	ld.u32 	%r9670, [%rd21+12];
	or.b32  	%r9671, %r9609, %r9670;
	st.u32 	[%rd1+-4], %r9671;
	bra.uni 	BB1_171;

BB1_63:
	setp.ne.s32	%p7, %r1, 31;
	@%p7 bra 	BB1_87;

	ld.u32 	%r580, [%rd21+12];
	mov.u32 	%r9672, 0;
	// inline asm
	prmt.b32 %r9701, %r9672, %r580, %r2;
	// inline asm
	ld.u32 	%r583, [%rd21+12];
	ld.u32 	%r584, [%rd21+8];
	// inline asm
	prmt.b32 %r9702, %r583, %r584, %r2;
	// inline asm
	ld.u32 	%r587, [%rd21+8];
	ld.u32 	%r588, [%rd21+4];
	// inline asm
	prmt.b32 %r9703, %r587, %r588, %r2;
	// inline asm
	ld.u32 	%r591, [%rd21+4];
	ld.u32 	%r592, [%rd21];
	// inline asm
	prmt.b32 %r9704, %r591, %r592, %r2;
	// inline asm
	ld.u32 	%r595, [%rd21];
	ld.u32 	%r596, [%rd20+12];
	// inline asm
	prmt.b32 %r9697, %r595, %r596, %r2;
	// inline asm
	ld.u32 	%r599, [%rd20+12];
	ld.u32 	%r600, [%rd20+8];
	// inline asm
	prmt.b32 %r9698, %r599, %r600, %r2;
	// inline asm
	ld.u32 	%r603, [%rd20+8];
	ld.u32 	%r604, [%rd20+4];
	// inline asm
	prmt.b32 %r9699, %r603, %r604, %r2;
	// inline asm
	ld.u32 	%r607, [%rd20+4];
	ld.u32 	%r608, [%rd20];
	// inline asm
	prmt.b32 %r9700, %r607, %r608, %r2;
	// inline asm
	ld.u32 	%r611, [%rd20];
	ld.u32 	%r612, [%rd19+12];
	// inline asm
	prmt.b32 %r9693, %r611, %r612, %r2;
	// inline asm
	ld.u32 	%r615, [%rd19+12];
	ld.u32 	%r616, [%rd19+8];
	// inline asm
	prmt.b32 %r9694, %r615, %r616, %r2;
	// inline asm
	ld.u32 	%r619, [%rd19+8];
	ld.u32 	%r620, [%rd19+4];
	// inline asm
	prmt.b32 %r9695, %r619, %r620, %r2;
	// inline asm
	ld.u32 	%r623, [%rd19+4];
	ld.u32 	%r624, [%rd19];
	// inline asm
	prmt.b32 %r9696, %r623, %r624, %r2;
	// inline asm
	ld.u32 	%r627, [%rd19];
	ld.u32 	%r628, [%rd18+12];
	// inline asm
	prmt.b32 %r9689, %r627, %r628, %r2;
	// inline asm
	ld.u32 	%r631, [%rd18+12];
	ld.u32 	%r632, [%rd18+8];
	// inline asm
	prmt.b32 %r9690, %r631, %r632, %r2;
	// inline asm
	ld.u32 	%r635, [%rd18+8];
	ld.u32 	%r636, [%rd18+4];
	// inline asm
	prmt.b32 %r9691, %r635, %r636, %r2;
	// inline asm
	ld.u32 	%r639, [%rd18+4];
	ld.u32 	%r640, [%rd18];
	// inline asm
	prmt.b32 %r9692, %r639, %r640, %r2;
	// inline asm
	ld.u32 	%r643, [%rd18];
	ld.u32 	%r644, [%rd17+12];
	// inline asm
	prmt.b32 %r9685, %r643, %r644, %r2;
	// inline asm
	ld.u32 	%r647, [%rd17+12];
	ld.u32 	%r648, [%rd17+8];
	// inline asm
	prmt.b32 %r9686, %r647, %r648, %r2;
	// inline asm
	ld.u32 	%r651, [%rd17+8];
	ld.u32 	%r652, [%rd17+4];
	// inline asm
	prmt.b32 %r9687, %r651, %r652, %r2;
	// inline asm
	ld.u32 	%r655, [%rd17+4];
	ld.u32 	%r656, [%rd17];
	// inline asm
	prmt.b32 %r9688, %r655, %r656, %r2;
	// inline asm
	ld.u32 	%r659, [%rd17];
	ld.u32 	%r660, [%rd16+12];
	// inline asm
	prmt.b32 %r9681, %r659, %r660, %r2;
	// inline asm
	ld.u32 	%r663, [%rd16+12];
	ld.u32 	%r664, [%rd16+8];
	// inline asm
	prmt.b32 %r9682, %r663, %r664, %r2;
	// inline asm
	ld.u32 	%r667, [%rd16+8];
	ld.u32 	%r668, [%rd16+4];
	// inline asm
	prmt.b32 %r9683, %r667, %r668, %r2;
	// inline asm
	ld.u32 	%r671, [%rd16+4];
	ld.u32 	%r672, [%rd16];
	// inline asm
	prmt.b32 %r9684, %r671, %r672, %r2;
	// inline asm
	ld.u32 	%r675, [%rd16];
	ld.u32 	%r676, [%rd15+12];
	// inline asm
	prmt.b32 %r9677, %r675, %r676, %r2;
	// inline asm
	ld.u32 	%r679, [%rd15+12];
	ld.u32 	%r680, [%rd15+8];
	// inline asm
	prmt.b32 %r9678, %r679, %r680, %r2;
	// inline asm
	ld.u32 	%r683, [%rd15+8];
	ld.u32 	%r684, [%rd15+4];
	// inline asm
	prmt.b32 %r9679, %r683, %r684, %r2;
	// inline asm
	ld.u32 	%r687, [%rd15+4];
	ld.u32 	%r688, [%rd15];
	// inline asm
	prmt.b32 %r9680, %r687, %r688, %r2;
	// inline asm
	ld.u32 	%r691, [%rd15];
	ld.u32 	%r692, [%rd14+12];
	// inline asm
	prmt.b32 %r9673, %r691, %r692, %r2;
	// inline asm
	ld.u32 	%r695, [%rd14+12];
	ld.u32 	%r696, [%rd14+8];
	// inline asm
	prmt.b32 %r9674, %r695, %r696, %r2;
	// inline asm
	ld.u32 	%r699, [%rd14+8];
	ld.u32 	%r700, [%rd14+4];
	// inline asm
	prmt.b32 %r9675, %r699, %r700, %r2;
	// inline asm
	ld.u32 	%r703, [%rd14+4];
	ld.u32 	%r704, [%rd14];
	// inline asm
	prmt.b32 %r9676, %r703, %r704, %r2;
	// inline asm
	ld.u32 	%r707, [%rd14];
	// inline asm
	prmt.b32 %r706, %r707, %r9672, %r2;
	// inline asm
	st.u32 	[%rd21+12], %r706;
	st.u32 	[%rd21+8], %r9672;
	st.u32 	[%rd21+4], %r9672;
	st.u32 	[%rd21], %r9672;
	st.u32 	[%rd20+12], %r9672;
	st.u32 	[%rd20+8], %r9672;
	st.u32 	[%rd20+4], %r9672;
	st.u32 	[%rd20], %r9672;
	st.u32 	[%rd19+12], %r9672;
	st.u32 	[%rd19+8], %r9672;
	st.u32 	[%rd19+4], %r9672;
	st.u32 	[%rd19], %r9672;
	st.u32 	[%rd18+12], %r9672;
	st.u32 	[%rd18+8], %r9672;
	st.u32 	[%rd18+4], %r9672;
	st.u32 	[%rd18], %r9672;
	st.u32 	[%rd17+12], %r9672;
	st.u32 	[%rd17+8], %r9672;
	st.u32 	[%rd17+4], %r9672;
	st.u32 	[%rd17], %r9672;
	st.u32 	[%rd16+12], %r9672;
	st.u32 	[%rd16+8], %r9672;
	st.u32 	[%rd16+4], %r9672;
	st.u32 	[%rd16], %r9672;
	st.u32 	[%rd15+12], %r9672;
	st.u32 	[%rd15+8], %r9672;
	st.u32 	[%rd15+4], %r9672;
	st.u32 	[%rd15], %r9672;
	st.u32 	[%rd14+12], %r9672;
	st.u32 	[%rd14+8], %r9672;
	mov.u64 	%rd23, 0;
	st.u32 	[%rd14+4], %rd23;
	st.u32 	[%rd14], %rd23;
	bra.uni 	BB1_89;

BB1_87:
	ld.u32 	%r9672, [%rd14];
	mov.u32 	%r9673, 0;
	mov.u32 	%r9674, %r9673;
	mov.u32 	%r9675, %r9673;
	mov.u32 	%r9676, %r9673;

BB1_88:
	mov.u32 	%r9677, %r9673;
	mov.u32 	%r9678, %r9673;
	mov.u32 	%r9679, %r9673;
	mov.u32 	%r9680, %r9673;
	mov.u32 	%r9681, %r9673;
	mov.u32 	%r9682, %r9673;
	mov.u32 	%r9683, %r9673;
	mov.u32 	%r9684, %r9673;
	mov.u32 	%r9685, %r9673;
	mov.u32 	%r9686, %r9673;
	mov.u32 	%r9687, %r9673;
	mov.u32 	%r9688, %r9673;
	mov.u32 	%r9689, %r9673;
	mov.u32 	%r9690, %r9673;
	mov.u32 	%r9691, %r9673;
	mov.u32 	%r9692, %r9673;
	mov.u32 	%r9693, %r9673;
	mov.u32 	%r9694, %r9673;
	mov.u32 	%r9695, %r9673;
	mov.u32 	%r9696, %r9673;
	mov.u32 	%r9697, %r9673;
	mov.u32 	%r9698, %r9673;
	mov.u32 	%r9699, %r9673;
	mov.u32 	%r9700, %r9673;
	mov.u32 	%r9701, %r9673;
	mov.u32 	%r9702, %r9673;
	mov.u32 	%r9703, %r9673;
	mov.u32 	%r9704, %r9673;

BB1_89:
	ld.v2.u32 	{%r5361, %r5362}, [%rd1+-128];
	ld.v2.u32 	{%r5364, %r5365}, [%rd1+-120];
	ld.v2.u32 	{%r5366, %r5367}, [%rd1+-112];
	ld.v2.u32 	{%r5368, %r5369}, [%rd1+-104];
	ld.v2.u32 	{%r5370, %r5371}, [%rd1+-96];
	ld.v2.u32 	{%r5372, %r5373}, [%rd1+-88];
	ld.v2.u32 	{%r5374, %r5375}, [%rd1+-80];
	ld.v2.u32 	{%r5376, %r5377}, [%rd1+-72];
	ld.v2.u32 	{%r5378, %r5379}, [%rd1+-64];
	ld.v2.u32 	{%r5380, %r5381}, [%rd1+-56];
	ld.v2.u32 	{%r5382, %r5383}, [%rd1+-48];
	ld.v2.u32 	{%r5384, %r5385}, [%rd1+-40];
	ld.v2.u32 	{%r5386, %r5387}, [%rd1+-32];
	ld.v2.u32 	{%r5388, %r5389}, [%rd1+-24];
	ld.v2.u32 	{%r5390, %r5391}, [%rd1+-16];
	ld.v2.u32 	{%r5392, %r5393}, [%rd1+-8];
	or.b32  	%r5394, %r5361, %r9672;
	st.u32 	[%rd1+-128], %r5394;
	ld.u32 	%r5396, [%rd14+4];
	or.b32  	%r5397, %r5362, %r5396;
	st.u32 	[%rd1+-124], %r5397;
	ld.u32 	%r5398, [%rd14+8];
	or.b32  	%r5400, %r5364, %r5398;
	st.u32 	[%rd1+-120], %r5400;
	ld.u32 	%r5402, [%rd14+12];
	or.b32  	%r5403, %r5365, %r5402;
	st.u32 	[%rd1+-116], %r5403;
	ld.u32 	%r5404, [%rd15];
	or.b32  	%r5406, %r5366, %r5404;
	st.u32 	[%rd1+-112], %r5406;
	ld.u32 	%r5408, [%rd15+4];
	or.b32  	%r5409, %r5367, %r5408;
	st.u32 	[%rd1+-108], %r5409;
	ld.u32 	%r5410, [%rd15+8];
	or.b32  	%r5412, %r5368, %r5410;
	st.u32 	[%rd1+-104], %r5412;
	ld.u32 	%r5414, [%rd15+12];
	or.b32  	%r5415, %r5369, %r5414;
	st.u32 	[%rd1+-100], %r5415;
	ld.u32 	%r5416, [%rd16];
	or.b32  	%r5418, %r5370, %r5416;
	st.u32 	[%rd1+-96], %r5418;
	ld.u32 	%r5420, [%rd16+4];
	or.b32  	%r5421, %r5371, %r5420;
	st.u32 	[%rd1+-92], %r5421;
	ld.u32 	%r5422, [%rd16+8];
	or.b32  	%r5424, %r5372, %r5422;
	st.u32 	[%rd1+-88], %r5424;
	ld.u32 	%r5426, [%rd16+12];
	or.b32  	%r5427, %r5373, %r5426;
	st.u32 	[%rd1+-84], %r5427;
	ld.u32 	%r5428, [%rd17];
	or.b32  	%r5430, %r5374, %r5428;
	st.u32 	[%rd1+-80], %r5430;
	ld.u32 	%r5432, [%rd17+4];
	or.b32  	%r5433, %r5375, %r5432;
	st.u32 	[%rd1+-76], %r5433;
	ld.u32 	%r5434, [%rd17+8];
	or.b32  	%r5436, %r5376, %r5434;
	st.u32 	[%rd1+-72], %r5436;
	ld.u32 	%r5438, [%rd17+12];
	or.b32  	%r5439, %r5377, %r5438;
	st.u32 	[%rd1+-68], %r5439;
	ld.u32 	%r5440, [%rd18];
	or.b32  	%r5442, %r5378, %r5440;
	st.u32 	[%rd1+-64], %r5442;
	ld.u32 	%r5444, [%rd18+4];
	or.b32  	%r5445, %r5379, %r5444;
	st.u32 	[%rd1+-60], %r5445;
	ld.u32 	%r5446, [%rd18+8];
	or.b32  	%r5448, %r5380, %r5446;
	st.u32 	[%rd1+-56], %r5448;
	ld.u32 	%r5450, [%rd18+12];
	or.b32  	%r5451, %r5381, %r5450;
	st.u32 	[%rd1+-52], %r5451;
	ld.u32 	%r5452, [%rd19];
	or.b32  	%r5454, %r5382, %r5452;
	st.u32 	[%rd1+-48], %r5454;
	ld.u32 	%r5456, [%rd19+4];
	or.b32  	%r5457, %r5383, %r5456;
	st.u32 	[%rd1+-44], %r5457;
	ld.u32 	%r5458, [%rd19+8];
	or.b32  	%r5460, %r5384, %r5458;
	st.u32 	[%rd1+-40], %r5460;
	ld.u32 	%r5462, [%rd19+12];
	or.b32  	%r5463, %r5385, %r5462;
	st.u32 	[%rd1+-36], %r5463;
	ld.u32 	%r5464, [%rd20];
	or.b32  	%r5466, %r5386, %r5464;
	st.u32 	[%rd1+-32], %r5466;
	ld.u32 	%r5468, [%rd20+4];
	or.b32  	%r5469, %r5387, %r5468;
	st.u32 	[%rd1+-28], %r5469;
	ld.u32 	%r5470, [%rd20+8];
	or.b32  	%r5472, %r5388, %r5470;
	st.u32 	[%rd1+-24], %r5472;
	ld.u32 	%r5474, [%rd20+12];
	or.b32  	%r5475, %r5389, %r5474;
	st.u32 	[%rd1+-20], %r5475;
	ld.u32 	%r5476, [%rd21];
	or.b32  	%r5478, %r5390, %r5476;
	st.u32 	[%rd1+-16], %r5478;
	ld.u32 	%r5480, [%rd21+4];
	or.b32  	%r5481, %r5391, %r5480;
	st.u32 	[%rd1+-12], %r5481;
	ld.u32 	%r5482, [%rd21+8];
	or.b32  	%r5484, %r5392, %r5482;
	st.u32 	[%rd1+-8], %r5484;
	ld.u32 	%r5486, [%rd21+12];
	mov.b64	%rd53, {%r5397, %r5394};
	mov.b64	%rd54, {%r5403, %r5400};
	mov.b64	%rd55, {%r5409, %r5406};
	mov.b64	%rd56, {%r5415, %r5412};
	mov.b64	%rd57, {%r5421, %r5418};
	mov.b64	%rd58, {%r5427, %r5424};
	mov.b64	%rd59, {%r5433, %r5430};
	mov.b64	%rd60, {%r5439, %r5436};
	mov.b64	%rd61, {%r5445, %r5442};
	mov.b64	%rd62, {%r5451, %r5448};
	mov.b64	%rd63, {%r5457, %r5454};
	mov.b64	%rd64, {%r5463, %r5460};
	mov.b64	%rd65, {%r5469, %r5466};
	mov.b64	%rd66, {%r5475, %r5472};
	mov.b64	%rd67, {%r5481, %r5478};
	or.b32  	%r5487, %r5393, %r5486;
	mov.b64	%rd68, {%r5487, %r5484};
	ld.u64 	%rd69, [%rd1+-160];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5488,%dummy}, %rd69;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5489}, %rd69;
	}
	shf.r.wrap.b32 	%r5490, %r5489, %r5488, 14;
	shf.r.wrap.b32 	%r5491, %r5488, %r5489, 14;
	mov.b64 	%rd70, {%r5491, %r5490};
	shf.r.wrap.b32 	%r5492, %r5489, %r5488, 18;
	shf.r.wrap.b32 	%r5493, %r5488, %r5489, 18;
	mov.b64 	%rd71, {%r5493, %r5492};
	xor.b64  	%rd72, %rd71, %rd70;
	shf.l.wrap.b32 	%r5494, %r5488, %r5489, 23;
	shf.l.wrap.b32 	%r5495, %r5489, %r5488, 23;
	mov.b64 	%rd73, {%r5495, %r5494};
	xor.b64  	%rd74, %rd72, %rd73;
	ld.u64 	%rd75, [%rd1+-144];
	ld.u64 	%rd76, [%rd1+-152];
	xor.b64  	%rd77, %rd75, %rd76;
	and.b64  	%rd78, %rd77, %rd69;
	xor.b64  	%rd79, %rd78, %rd75;
	ld.u64 	%rd80, [%rd1+-136];
	add.s64 	%rd81, %rd79, %rd80;
	add.s64 	%rd82, %rd81, %rd53;
	ld.const.u64 	%rd83, [k_sha512];
	add.s64 	%rd84, %rd82, %rd83;
	add.s64 	%rd85, %rd84, %rd74;
	ld.u64 	%rd86, [%rd1+-168];
	add.s64 	%rd87, %rd85, %rd86;
	ld.u64 	%rd88, [%rd1+-192];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5496,%dummy}, %rd88;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5497}, %rd88;
	}
	shf.r.wrap.b32 	%r5498, %r5497, %r5496, 28;
	shf.r.wrap.b32 	%r5499, %r5496, %r5497, 28;
	mov.b64 	%rd89, {%r5499, %r5498};
	shf.l.wrap.b32 	%r5500, %r5496, %r5497, 30;
	shf.l.wrap.b32 	%r5501, %r5497, %r5496, 30;
	mov.b64 	%rd90, {%r5501, %r5500};
	xor.b64  	%rd91, %rd90, %rd89;
	shf.l.wrap.b32 	%r5502, %r5496, %r5497, 25;
	shf.l.wrap.b32 	%r5503, %r5497, %r5496, 25;
	mov.b64 	%rd92, {%r5503, %r5502};
	xor.b64  	%rd93, %rd91, %rd92;
	ld.u64 	%rd94, [%rd1+-176];
	xor.b64  	%rd95, %rd94, %rd88;
	ld.u64 	%rd96, [%rd1+-184];
	xor.b64  	%rd97, %rd96, %rd88;
	and.b64  	%rd98, %rd95, %rd97;
	xor.b64  	%rd99, %rd98, %rd88;
	add.s64 	%rd100, %rd85, %rd99;
	add.s64 	%rd101, %rd100, %rd93;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5504,%dummy}, %rd87;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5505}, %rd87;
	}
	shf.r.wrap.b32 	%r5506, %r5505, %r5504, 14;
	shf.r.wrap.b32 	%r5507, %r5504, %r5505, 14;
	mov.b64 	%rd102, {%r5507, %r5506};
	shf.r.wrap.b32 	%r5508, %r5505, %r5504, 18;
	shf.r.wrap.b32 	%r5509, %r5504, %r5505, 18;
	mov.b64 	%rd103, {%r5509, %r5508};
	xor.b64  	%rd104, %rd103, %rd102;
	shf.l.wrap.b32 	%r5510, %r5504, %r5505, 23;
	shf.l.wrap.b32 	%r5511, %r5505, %r5504, 23;
	mov.b64 	%rd105, {%r5511, %r5510};
	xor.b64  	%rd106, %rd104, %rd105;
	xor.b64  	%rd107, %rd76, %rd69;
	and.b64  	%rd108, %rd87, %rd107;
	xor.b64  	%rd109, %rd108, %rd76;
	add.s64 	%rd110, %rd54, %rd75;
	ld.const.u64 	%rd111, [k_sha512+8];
	add.s64 	%rd112, %rd110, %rd111;
	add.s64 	%rd113, %rd112, %rd109;
	add.s64 	%rd114, %rd113, %rd106;
	add.s64 	%rd115, %rd114, %rd94;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5512,%dummy}, %rd101;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5513}, %rd101;
	}
	shf.r.wrap.b32 	%r5514, %r5513, %r5512, 28;
	shf.r.wrap.b32 	%r5515, %r5512, %r5513, 28;
	mov.b64 	%rd116, {%r5515, %r5514};
	shf.l.wrap.b32 	%r5516, %r5512, %r5513, 30;
	shf.l.wrap.b32 	%r5517, %r5513, %r5512, 30;
	mov.b64 	%rd117, {%r5517, %r5516};
	xor.b64  	%rd118, %rd117, %rd116;
	shf.l.wrap.b32 	%r5518, %r5512, %r5513, 25;
	shf.l.wrap.b32 	%r5519, %r5513, %r5512, 25;
	mov.b64 	%rd119, {%r5519, %r5518};
	xor.b64  	%rd120, %rd118, %rd119;
	xor.b64  	%rd121, %rd101, %rd96;
	xor.b64  	%rd122, %rd101, %rd88;
	and.b64  	%rd123, %rd122, %rd121;
	xor.b64  	%rd124, %rd123, %rd101;
	add.s64 	%rd125, %rd114, %rd124;
	add.s64 	%rd126, %rd125, %rd120;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5520,%dummy}, %rd115;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5521}, %rd115;
	}
	shf.r.wrap.b32 	%r5522, %r5521, %r5520, 14;
	shf.r.wrap.b32 	%r5523, %r5520, %r5521, 14;
	mov.b64 	%rd127, {%r5523, %r5522};
	shf.r.wrap.b32 	%r5524, %r5521, %r5520, 18;
	shf.r.wrap.b32 	%r5525, %r5520, %r5521, 18;
	mov.b64 	%rd128, {%r5525, %r5524};
	xor.b64  	%rd129, %rd128, %rd127;
	shf.l.wrap.b32 	%r5526, %r5520, %r5521, 23;
	shf.l.wrap.b32 	%r5527, %r5521, %r5520, 23;
	mov.b64 	%rd130, {%r5527, %r5526};
	xor.b64  	%rd131, %rd129, %rd130;
	xor.b64  	%rd132, %rd87, %rd69;
	and.b64  	%rd133, %rd115, %rd132;
	xor.b64  	%rd134, %rd133, %rd69;
	add.s64 	%rd135, %rd55, %rd76;
	ld.const.u64 	%rd136, [k_sha512+16];
	add.s64 	%rd137, %rd135, %rd136;
	add.s64 	%rd138, %rd137, %rd134;
	add.s64 	%rd139, %rd138, %rd131;
	add.s64 	%rd140, %rd139, %rd96;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5528,%dummy}, %rd126;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5529}, %rd126;
	}
	shf.r.wrap.b32 	%r5530, %r5529, %r5528, 28;
	shf.r.wrap.b32 	%r5531, %r5528, %r5529, 28;
	mov.b64 	%rd141, {%r5531, %r5530};
	shf.l.wrap.b32 	%r5532, %r5528, %r5529, 30;
	shf.l.wrap.b32 	%r5533, %r5529, %r5528, 30;
	mov.b64 	%rd142, {%r5533, %r5532};
	xor.b64  	%rd143, %rd142, %rd141;
	shf.l.wrap.b32 	%r5534, %r5528, %r5529, 25;
	shf.l.wrap.b32 	%r5535, %r5529, %r5528, 25;
	mov.b64 	%rd144, {%r5535, %r5534};
	xor.b64  	%rd145, %rd143, %rd144;
	xor.b64  	%rd146, %rd126, %rd88;
	xor.b64  	%rd147, %rd126, %rd101;
	and.b64  	%rd148, %rd147, %rd146;
	xor.b64  	%rd149, %rd148, %rd126;
	add.s64 	%rd150, %rd139, %rd149;
	add.s64 	%rd151, %rd150, %rd145;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5536,%dummy}, %rd140;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5537}, %rd140;
	}
	shf.r.wrap.b32 	%r5538, %r5537, %r5536, 14;
	shf.r.wrap.b32 	%r5539, %r5536, %r5537, 14;
	mov.b64 	%rd152, {%r5539, %r5538};
	shf.r.wrap.b32 	%r5540, %r5537, %r5536, 18;
	shf.r.wrap.b32 	%r5541, %r5536, %r5537, 18;
	mov.b64 	%rd153, {%r5541, %r5540};
	xor.b64  	%rd154, %rd153, %rd152;
	shf.l.wrap.b32 	%r5542, %r5536, %r5537, 23;
	shf.l.wrap.b32 	%r5543, %r5537, %r5536, 23;
	mov.b64 	%rd155, {%r5543, %r5542};
	xor.b64  	%rd156, %rd154, %rd155;
	xor.b64  	%rd157, %rd115, %rd87;
	and.b64  	%rd158, %rd140, %rd157;
	xor.b64  	%rd159, %rd158, %rd87;
	add.s64 	%rd160, %rd56, %rd69;
	ld.const.u64 	%rd161, [k_sha512+24];
	add.s64 	%rd162, %rd160, %rd161;
	add.s64 	%rd163, %rd162, %rd159;
	add.s64 	%rd164, %rd163, %rd156;
	add.s64 	%rd165, %rd164, %rd88;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5544,%dummy}, %rd151;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5545}, %rd151;
	}
	shf.r.wrap.b32 	%r5546, %r5545, %r5544, 28;
	shf.r.wrap.b32 	%r5547, %r5544, %r5545, 28;
	mov.b64 	%rd166, {%r5547, %r5546};
	shf.l.wrap.b32 	%r5548, %r5544, %r5545, 30;
	shf.l.wrap.b32 	%r5549, %r5545, %r5544, 30;
	mov.b64 	%rd167, {%r5549, %r5548};
	xor.b64  	%rd168, %rd167, %rd166;
	shf.l.wrap.b32 	%r5550, %r5544, %r5545, 25;
	shf.l.wrap.b32 	%r5551, %r5545, %r5544, 25;
	mov.b64 	%rd169, {%r5551, %r5550};
	xor.b64  	%rd170, %rd168, %rd169;
	xor.b64  	%rd171, %rd151, %rd101;
	xor.b64  	%rd172, %rd151, %rd126;
	and.b64  	%rd173, %rd172, %rd171;
	xor.b64  	%rd174, %rd173, %rd151;
	add.s64 	%rd175, %rd164, %rd174;
	add.s64 	%rd176, %rd175, %rd170;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5552,%dummy}, %rd165;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5553}, %rd165;
	}
	shf.r.wrap.b32 	%r5554, %r5553, %r5552, 14;
	shf.r.wrap.b32 	%r5555, %r5552, %r5553, 14;
	mov.b64 	%rd177, {%r5555, %r5554};
	shf.r.wrap.b32 	%r5556, %r5553, %r5552, 18;
	shf.r.wrap.b32 	%r5557, %r5552, %r5553, 18;
	mov.b64 	%rd178, {%r5557, %r5556};
	xor.b64  	%rd179, %rd178, %rd177;
	shf.l.wrap.b32 	%r5558, %r5552, %r5553, 23;
	shf.l.wrap.b32 	%r5559, %r5553, %r5552, 23;
	mov.b64 	%rd180, {%r5559, %r5558};
	xor.b64  	%rd181, %rd179, %rd180;
	xor.b64  	%rd182, %rd140, %rd115;
	and.b64  	%rd183, %rd165, %rd182;
	xor.b64  	%rd184, %rd183, %rd115;
	add.s64 	%rd185, %rd87, %rd57;
	ld.const.u64 	%rd186, [k_sha512+32];
	add.s64 	%rd187, %rd185, %rd186;
	add.s64 	%rd188, %rd187, %rd184;
	add.s64 	%rd189, %rd188, %rd181;
	add.s64 	%rd190, %rd189, %rd101;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5560,%dummy}, %rd176;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5561}, %rd176;
	}
	shf.r.wrap.b32 	%r5562, %r5561, %r5560, 28;
	shf.r.wrap.b32 	%r5563, %r5560, %r5561, 28;
	mov.b64 	%rd191, {%r5563, %r5562};
	shf.l.wrap.b32 	%r5564, %r5560, %r5561, 30;
	shf.l.wrap.b32 	%r5565, %r5561, %r5560, 30;
	mov.b64 	%rd192, {%r5565, %r5564};
	xor.b64  	%rd193, %rd192, %rd191;
	shf.l.wrap.b32 	%r5566, %r5560, %r5561, 25;
	shf.l.wrap.b32 	%r5567, %r5561, %r5560, 25;
	mov.b64 	%rd194, {%r5567, %r5566};
	xor.b64  	%rd195, %rd193, %rd194;
	xor.b64  	%rd196, %rd176, %rd126;
	xor.b64  	%rd197, %rd176, %rd151;
	and.b64  	%rd198, %rd197, %rd196;
	xor.b64  	%rd199, %rd198, %rd176;
	add.s64 	%rd200, %rd189, %rd199;
	add.s64 	%rd201, %rd200, %rd195;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5568,%dummy}, %rd190;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5569}, %rd190;
	}
	shf.r.wrap.b32 	%r5570, %r5569, %r5568, 14;
	shf.r.wrap.b32 	%r5571, %r5568, %r5569, 14;
	mov.b64 	%rd202, {%r5571, %r5570};
	shf.r.wrap.b32 	%r5572, %r5569, %r5568, 18;
	shf.r.wrap.b32 	%r5573, %r5568, %r5569, 18;
	mov.b64 	%rd203, {%r5573, %r5572};
	xor.b64  	%rd204, %rd203, %rd202;
	shf.l.wrap.b32 	%r5574, %r5568, %r5569, 23;
	shf.l.wrap.b32 	%r5575, %r5569, %r5568, 23;
	mov.b64 	%rd205, {%r5575, %r5574};
	xor.b64  	%rd206, %rd204, %rd205;
	xor.b64  	%rd207, %rd165, %rd140;
	and.b64  	%rd208, %rd190, %rd207;
	xor.b64  	%rd209, %rd208, %rd140;
	add.s64 	%rd210, %rd115, %rd58;
	ld.const.u64 	%rd211, [k_sha512+40];
	add.s64 	%rd212, %rd210, %rd211;
	add.s64 	%rd213, %rd212, %rd209;
	add.s64 	%rd214, %rd213, %rd206;
	add.s64 	%rd215, %rd214, %rd126;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5576,%dummy}, %rd201;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5577}, %rd201;
	}
	shf.r.wrap.b32 	%r5578, %r5577, %r5576, 28;
	shf.r.wrap.b32 	%r5579, %r5576, %r5577, 28;
	mov.b64 	%rd216, {%r5579, %r5578};
	shf.l.wrap.b32 	%r5580, %r5576, %r5577, 30;
	shf.l.wrap.b32 	%r5581, %r5577, %r5576, 30;
	mov.b64 	%rd217, {%r5581, %r5580};
	xor.b64  	%rd218, %rd217, %rd216;
	shf.l.wrap.b32 	%r5582, %r5576, %r5577, 25;
	shf.l.wrap.b32 	%r5583, %r5577, %r5576, 25;
	mov.b64 	%rd219, {%r5583, %r5582};
	xor.b64  	%rd220, %rd218, %rd219;
	xor.b64  	%rd221, %rd201, %rd151;
	xor.b64  	%rd222, %rd201, %rd176;
	and.b64  	%rd223, %rd222, %rd221;
	xor.b64  	%rd224, %rd223, %rd201;
	add.s64 	%rd225, %rd214, %rd224;
	add.s64 	%rd226, %rd225, %rd220;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5584,%dummy}, %rd215;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5585}, %rd215;
	}
	shf.r.wrap.b32 	%r5586, %r5585, %r5584, 14;
	shf.r.wrap.b32 	%r5587, %r5584, %r5585, 14;
	mov.b64 	%rd227, {%r5587, %r5586};
	shf.r.wrap.b32 	%r5588, %r5585, %r5584, 18;
	shf.r.wrap.b32 	%r5589, %r5584, %r5585, 18;
	mov.b64 	%rd228, {%r5589, %r5588};
	xor.b64  	%rd229, %rd228, %rd227;
	shf.l.wrap.b32 	%r5590, %r5584, %r5585, 23;
	shf.l.wrap.b32 	%r5591, %r5585, %r5584, 23;
	mov.b64 	%rd230, {%r5591, %r5590};
	xor.b64  	%rd231, %rd229, %rd230;
	xor.b64  	%rd232, %rd190, %rd165;
	and.b64  	%rd233, %rd215, %rd232;
	xor.b64  	%rd234, %rd233, %rd165;
	add.s64 	%rd235, %rd140, %rd59;
	ld.const.u64 	%rd236, [k_sha512+48];
	add.s64 	%rd237, %rd235, %rd236;
	add.s64 	%rd238, %rd237, %rd234;
	add.s64 	%rd239, %rd238, %rd231;
	add.s64 	%rd240, %rd239, %rd151;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5592,%dummy}, %rd226;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5593}, %rd226;
	}
	shf.r.wrap.b32 	%r5594, %r5593, %r5592, 28;
	shf.r.wrap.b32 	%r5595, %r5592, %r5593, 28;
	mov.b64 	%rd241, {%r5595, %r5594};
	shf.l.wrap.b32 	%r5596, %r5592, %r5593, 30;
	shf.l.wrap.b32 	%r5597, %r5593, %r5592, 30;
	mov.b64 	%rd242, {%r5597, %r5596};
	xor.b64  	%rd243, %rd242, %rd241;
	shf.l.wrap.b32 	%r5598, %r5592, %r5593, 25;
	shf.l.wrap.b32 	%r5599, %r5593, %r5592, 25;
	mov.b64 	%rd244, {%r5599, %r5598};
	xor.b64  	%rd245, %rd243, %rd244;
	xor.b64  	%rd246, %rd226, %rd176;
	xor.b64  	%rd247, %rd226, %rd201;
	and.b64  	%rd248, %rd247, %rd246;
	xor.b64  	%rd249, %rd248, %rd226;
	add.s64 	%rd250, %rd239, %rd249;
	add.s64 	%rd251, %rd250, %rd245;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5600,%dummy}, %rd240;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5601}, %rd240;
	}
	shf.r.wrap.b32 	%r5602, %r5601, %r5600, 14;
	shf.r.wrap.b32 	%r5603, %r5600, %r5601, 14;
	mov.b64 	%rd252, {%r5603, %r5602};
	shf.r.wrap.b32 	%r5604, %r5601, %r5600, 18;
	shf.r.wrap.b32 	%r5605, %r5600, %r5601, 18;
	mov.b64 	%rd253, {%r5605, %r5604};
	xor.b64  	%rd254, %rd253, %rd252;
	shf.l.wrap.b32 	%r5606, %r5600, %r5601, 23;
	shf.l.wrap.b32 	%r5607, %r5601, %r5600, 23;
	mov.b64 	%rd255, {%r5607, %r5606};
	xor.b64  	%rd256, %rd254, %rd255;
	xor.b64  	%rd257, %rd215, %rd190;
	and.b64  	%rd258, %rd240, %rd257;
	xor.b64  	%rd259, %rd258, %rd190;
	add.s64 	%rd260, %rd165, %rd60;
	ld.const.u64 	%rd261, [k_sha512+56];
	add.s64 	%rd262, %rd260, %rd261;
	add.s64 	%rd263, %rd262, %rd259;
	add.s64 	%rd264, %rd263, %rd256;
	add.s64 	%rd265, %rd264, %rd176;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5608,%dummy}, %rd251;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5609}, %rd251;
	}
	shf.r.wrap.b32 	%r5610, %r5609, %r5608, 28;
	shf.r.wrap.b32 	%r5611, %r5608, %r5609, 28;
	mov.b64 	%rd266, {%r5611, %r5610};
	shf.l.wrap.b32 	%r5612, %r5608, %r5609, 30;
	shf.l.wrap.b32 	%r5613, %r5609, %r5608, 30;
	mov.b64 	%rd267, {%r5613, %r5612};
	xor.b64  	%rd268, %rd267, %rd266;
	shf.l.wrap.b32 	%r5614, %r5608, %r5609, 25;
	shf.l.wrap.b32 	%r5615, %r5609, %r5608, 25;
	mov.b64 	%rd269, {%r5615, %r5614};
	xor.b64  	%rd270, %rd268, %rd269;
	xor.b64  	%rd271, %rd251, %rd201;
	xor.b64  	%rd272, %rd251, %rd226;
	and.b64  	%rd273, %rd272, %rd271;
	xor.b64  	%rd274, %rd273, %rd251;
	add.s64 	%rd275, %rd264, %rd274;
	add.s64 	%rd276, %rd275, %rd270;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5616,%dummy}, %rd265;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5617}, %rd265;
	}
	shf.r.wrap.b32 	%r5618, %r5617, %r5616, 14;
	shf.r.wrap.b32 	%r5619, %r5616, %r5617, 14;
	mov.b64 	%rd277, {%r5619, %r5618};
	shf.r.wrap.b32 	%r5620, %r5617, %r5616, 18;
	shf.r.wrap.b32 	%r5621, %r5616, %r5617, 18;
	mov.b64 	%rd278, {%r5621, %r5620};
	xor.b64  	%rd279, %rd278, %rd277;
	shf.l.wrap.b32 	%r5622, %r5616, %r5617, 23;
	shf.l.wrap.b32 	%r5623, %r5617, %r5616, 23;
	mov.b64 	%rd280, {%r5623, %r5622};
	xor.b64  	%rd281, %rd279, %rd280;
	xor.b64  	%rd282, %rd240, %rd215;
	and.b64  	%rd283, %rd265, %rd282;
	xor.b64  	%rd284, %rd283, %rd215;
	add.s64 	%rd285, %rd190, %rd61;
	ld.const.u64 	%rd286, [k_sha512+64];
	add.s64 	%rd287, %rd285, %rd286;
	add.s64 	%rd288, %rd287, %rd284;
	add.s64 	%rd289, %rd288, %rd281;
	add.s64 	%rd290, %rd289, %rd201;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5624,%dummy}, %rd276;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5625}, %rd276;
	}
	shf.r.wrap.b32 	%r5626, %r5625, %r5624, 28;
	shf.r.wrap.b32 	%r5627, %r5624, %r5625, 28;
	mov.b64 	%rd291, {%r5627, %r5626};
	shf.l.wrap.b32 	%r5628, %r5624, %r5625, 30;
	shf.l.wrap.b32 	%r5629, %r5625, %r5624, 30;
	mov.b64 	%rd292, {%r5629, %r5628};
	xor.b64  	%rd293, %rd292, %rd291;
	shf.l.wrap.b32 	%r5630, %r5624, %r5625, 25;
	shf.l.wrap.b32 	%r5631, %r5625, %r5624, 25;
	mov.b64 	%rd294, {%r5631, %r5630};
	xor.b64  	%rd295, %rd293, %rd294;
	xor.b64  	%rd296, %rd276, %rd226;
	xor.b64  	%rd297, %rd276, %rd251;
	and.b64  	%rd298, %rd297, %rd296;
	xor.b64  	%rd299, %rd298, %rd276;
	add.s64 	%rd300, %rd289, %rd299;
	add.s64 	%rd301, %rd300, %rd295;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5632,%dummy}, %rd290;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5633}, %rd290;
	}
	shf.r.wrap.b32 	%r5634, %r5633, %r5632, 14;
	shf.r.wrap.b32 	%r5635, %r5632, %r5633, 14;
	mov.b64 	%rd302, {%r5635, %r5634};
	shf.r.wrap.b32 	%r5636, %r5633, %r5632, 18;
	shf.r.wrap.b32 	%r5637, %r5632, %r5633, 18;
	mov.b64 	%rd303, {%r5637, %r5636};
	xor.b64  	%rd304, %rd303, %rd302;
	shf.l.wrap.b32 	%r5638, %r5632, %r5633, 23;
	shf.l.wrap.b32 	%r5639, %r5633, %r5632, 23;
	mov.b64 	%rd305, {%r5639, %r5638};
	xor.b64  	%rd306, %rd304, %rd305;
	xor.b64  	%rd307, %rd265, %rd240;
	and.b64  	%rd308, %rd290, %rd307;
	xor.b64  	%rd309, %rd308, %rd240;
	add.s64 	%rd310, %rd215, %rd62;
	ld.const.u64 	%rd311, [k_sha512+72];
	add.s64 	%rd312, %rd310, %rd311;
	add.s64 	%rd313, %rd312, %rd309;
	add.s64 	%rd314, %rd313, %rd306;
	add.s64 	%rd315, %rd314, %rd226;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5640,%dummy}, %rd301;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5641}, %rd301;
	}
	shf.r.wrap.b32 	%r5642, %r5641, %r5640, 28;
	shf.r.wrap.b32 	%r5643, %r5640, %r5641, 28;
	mov.b64 	%rd316, {%r5643, %r5642};
	shf.l.wrap.b32 	%r5644, %r5640, %r5641, 30;
	shf.l.wrap.b32 	%r5645, %r5641, %r5640, 30;
	mov.b64 	%rd317, {%r5645, %r5644};
	xor.b64  	%rd318, %rd317, %rd316;
	shf.l.wrap.b32 	%r5646, %r5640, %r5641, 25;
	shf.l.wrap.b32 	%r5647, %r5641, %r5640, 25;
	mov.b64 	%rd319, {%r5647, %r5646};
	xor.b64  	%rd320, %rd318, %rd319;
	xor.b64  	%rd321, %rd301, %rd251;
	xor.b64  	%rd322, %rd301, %rd276;
	and.b64  	%rd323, %rd322, %rd321;
	xor.b64  	%rd324, %rd323, %rd301;
	add.s64 	%rd325, %rd314, %rd324;
	add.s64 	%rd326, %rd325, %rd320;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5648,%dummy}, %rd315;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5649}, %rd315;
	}
	shf.r.wrap.b32 	%r5650, %r5649, %r5648, 14;
	shf.r.wrap.b32 	%r5651, %r5648, %r5649, 14;
	mov.b64 	%rd327, {%r5651, %r5650};
	shf.r.wrap.b32 	%r5652, %r5649, %r5648, 18;
	shf.r.wrap.b32 	%r5653, %r5648, %r5649, 18;
	mov.b64 	%rd328, {%r5653, %r5652};
	xor.b64  	%rd329, %rd328, %rd327;
	shf.l.wrap.b32 	%r5654, %r5648, %r5649, 23;
	shf.l.wrap.b32 	%r5655, %r5649, %r5648, 23;
	mov.b64 	%rd330, {%r5655, %r5654};
	xor.b64  	%rd331, %rd329, %rd330;
	xor.b64  	%rd332, %rd290, %rd265;
	and.b64  	%rd333, %rd315, %rd332;
	xor.b64  	%rd334, %rd333, %rd265;
	add.s64 	%rd335, %rd240, %rd63;
	ld.const.u64 	%rd336, [k_sha512+80];
	add.s64 	%rd337, %rd335, %rd336;
	add.s64 	%rd338, %rd337, %rd334;
	add.s64 	%rd339, %rd338, %rd331;
	add.s64 	%rd340, %rd339, %rd251;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5656,%dummy}, %rd326;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5657}, %rd326;
	}
	shf.r.wrap.b32 	%r5658, %r5657, %r5656, 28;
	shf.r.wrap.b32 	%r5659, %r5656, %r5657, 28;
	mov.b64 	%rd341, {%r5659, %r5658};
	shf.l.wrap.b32 	%r5660, %r5656, %r5657, 30;
	shf.l.wrap.b32 	%r5661, %r5657, %r5656, 30;
	mov.b64 	%rd342, {%r5661, %r5660};
	xor.b64  	%rd343, %rd342, %rd341;
	shf.l.wrap.b32 	%r5662, %r5656, %r5657, 25;
	shf.l.wrap.b32 	%r5663, %r5657, %r5656, 25;
	mov.b64 	%rd344, {%r5663, %r5662};
	xor.b64  	%rd345, %rd343, %rd344;
	xor.b64  	%rd346, %rd326, %rd276;
	xor.b64  	%rd347, %rd326, %rd301;
	and.b64  	%rd348, %rd347, %rd346;
	xor.b64  	%rd349, %rd348, %rd326;
	add.s64 	%rd350, %rd339, %rd349;
	add.s64 	%rd351, %rd350, %rd345;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5664,%dummy}, %rd340;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5665}, %rd340;
	}
	shf.r.wrap.b32 	%r5666, %r5665, %r5664, 14;
	shf.r.wrap.b32 	%r5667, %r5664, %r5665, 14;
	mov.b64 	%rd352, {%r5667, %r5666};
	shf.r.wrap.b32 	%r5668, %r5665, %r5664, 18;
	shf.r.wrap.b32 	%r5669, %r5664, %r5665, 18;
	mov.b64 	%rd353, {%r5669, %r5668};
	xor.b64  	%rd354, %rd353, %rd352;
	shf.l.wrap.b32 	%r5670, %r5664, %r5665, 23;
	shf.l.wrap.b32 	%r5671, %r5665, %r5664, 23;
	mov.b64 	%rd355, {%r5671, %r5670};
	xor.b64  	%rd356, %rd354, %rd355;
	xor.b64  	%rd357, %rd315, %rd290;
	and.b64  	%rd358, %rd340, %rd357;
	xor.b64  	%rd359, %rd358, %rd290;
	add.s64 	%rd360, %rd265, %rd64;
	ld.const.u64 	%rd361, [k_sha512+88];
	add.s64 	%rd362, %rd360, %rd361;
	add.s64 	%rd363, %rd362, %rd359;
	add.s64 	%rd364, %rd363, %rd356;
	add.s64 	%rd365, %rd364, %rd276;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5672,%dummy}, %rd351;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5673}, %rd351;
	}
	shf.r.wrap.b32 	%r5674, %r5673, %r5672, 28;
	shf.r.wrap.b32 	%r5675, %r5672, %r5673, 28;
	mov.b64 	%rd366, {%r5675, %r5674};
	shf.l.wrap.b32 	%r5676, %r5672, %r5673, 30;
	shf.l.wrap.b32 	%r5677, %r5673, %r5672, 30;
	mov.b64 	%rd367, {%r5677, %r5676};
	xor.b64  	%rd368, %rd367, %rd366;
	shf.l.wrap.b32 	%r5678, %r5672, %r5673, 25;
	shf.l.wrap.b32 	%r5679, %r5673, %r5672, 25;
	mov.b64 	%rd369, {%r5679, %r5678};
	xor.b64  	%rd370, %rd368, %rd369;
	xor.b64  	%rd371, %rd351, %rd301;
	xor.b64  	%rd372, %rd351, %rd326;
	and.b64  	%rd373, %rd372, %rd371;
	xor.b64  	%rd374, %rd373, %rd351;
	add.s64 	%rd375, %rd364, %rd374;
	add.s64 	%rd376, %rd375, %rd370;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5680,%dummy}, %rd365;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5681}, %rd365;
	}
	shf.r.wrap.b32 	%r5682, %r5681, %r5680, 14;
	shf.r.wrap.b32 	%r5683, %r5680, %r5681, 14;
	mov.b64 	%rd377, {%r5683, %r5682};
	shf.r.wrap.b32 	%r5684, %r5681, %r5680, 18;
	shf.r.wrap.b32 	%r5685, %r5680, %r5681, 18;
	mov.b64 	%rd378, {%r5685, %r5684};
	xor.b64  	%rd379, %rd378, %rd377;
	shf.l.wrap.b32 	%r5686, %r5680, %r5681, 23;
	shf.l.wrap.b32 	%r5687, %r5681, %r5680, 23;
	mov.b64 	%rd380, {%r5687, %r5686};
	xor.b64  	%rd381, %rd379, %rd380;
	xor.b64  	%rd382, %rd340, %rd315;
	and.b64  	%rd383, %rd365, %rd382;
	xor.b64  	%rd384, %rd383, %rd315;
	add.s64 	%rd385, %rd290, %rd65;
	ld.const.u64 	%rd386, [k_sha512+96];
	add.s64 	%rd387, %rd385, %rd386;
	add.s64 	%rd388, %rd387, %rd384;
	add.s64 	%rd389, %rd388, %rd381;
	add.s64 	%rd390, %rd389, %rd301;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5688,%dummy}, %rd376;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5689}, %rd376;
	}
	shf.r.wrap.b32 	%r5690, %r5689, %r5688, 28;
	shf.r.wrap.b32 	%r5691, %r5688, %r5689, 28;
	mov.b64 	%rd391, {%r5691, %r5690};
	shf.l.wrap.b32 	%r5692, %r5688, %r5689, 30;
	shf.l.wrap.b32 	%r5693, %r5689, %r5688, 30;
	mov.b64 	%rd392, {%r5693, %r5692};
	xor.b64  	%rd393, %rd392, %rd391;
	shf.l.wrap.b32 	%r5694, %r5688, %r5689, 25;
	shf.l.wrap.b32 	%r5695, %r5689, %r5688, 25;
	mov.b64 	%rd394, {%r5695, %r5694};
	xor.b64  	%rd395, %rd393, %rd394;
	xor.b64  	%rd396, %rd376, %rd326;
	xor.b64  	%rd397, %rd376, %rd351;
	and.b64  	%rd398, %rd397, %rd396;
	xor.b64  	%rd399, %rd398, %rd376;
	add.s64 	%rd400, %rd389, %rd399;
	add.s64 	%rd401, %rd400, %rd395;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5696,%dummy}, %rd390;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5697}, %rd390;
	}
	shf.r.wrap.b32 	%r5698, %r5697, %r5696, 14;
	shf.r.wrap.b32 	%r5699, %r5696, %r5697, 14;
	mov.b64 	%rd402, {%r5699, %r5698};
	shf.r.wrap.b32 	%r5700, %r5697, %r5696, 18;
	shf.r.wrap.b32 	%r5701, %r5696, %r5697, 18;
	mov.b64 	%rd403, {%r5701, %r5700};
	xor.b64  	%rd404, %rd403, %rd402;
	shf.l.wrap.b32 	%r5702, %r5696, %r5697, 23;
	shf.l.wrap.b32 	%r5703, %r5697, %r5696, 23;
	mov.b64 	%rd405, {%r5703, %r5702};
	xor.b64  	%rd406, %rd404, %rd405;
	xor.b64  	%rd407, %rd365, %rd340;
	and.b64  	%rd408, %rd390, %rd407;
	xor.b64  	%rd409, %rd408, %rd340;
	add.s64 	%rd410, %rd315, %rd66;
	ld.const.u64 	%rd411, [k_sha512+104];
	add.s64 	%rd412, %rd410, %rd411;
	add.s64 	%rd413, %rd412, %rd409;
	add.s64 	%rd414, %rd413, %rd406;
	add.s64 	%rd415, %rd414, %rd326;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5704,%dummy}, %rd401;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5705}, %rd401;
	}
	shf.r.wrap.b32 	%r5706, %r5705, %r5704, 28;
	shf.r.wrap.b32 	%r5707, %r5704, %r5705, 28;
	mov.b64 	%rd416, {%r5707, %r5706};
	shf.l.wrap.b32 	%r5708, %r5704, %r5705, 30;
	shf.l.wrap.b32 	%r5709, %r5705, %r5704, 30;
	mov.b64 	%rd417, {%r5709, %r5708};
	xor.b64  	%rd418, %rd417, %rd416;
	shf.l.wrap.b32 	%r5710, %r5704, %r5705, 25;
	shf.l.wrap.b32 	%r5711, %r5705, %r5704, 25;
	mov.b64 	%rd419, {%r5711, %r5710};
	xor.b64  	%rd420, %rd418, %rd419;
	xor.b64  	%rd421, %rd401, %rd351;
	xor.b64  	%rd422, %rd401, %rd376;
	and.b64  	%rd423, %rd422, %rd421;
	xor.b64  	%rd424, %rd423, %rd401;
	add.s64 	%rd425, %rd414, %rd424;
	add.s64 	%rd426, %rd425, %rd420;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5712,%dummy}, %rd415;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5713}, %rd415;
	}
	shf.r.wrap.b32 	%r5714, %r5713, %r5712, 14;
	shf.r.wrap.b32 	%r5715, %r5712, %r5713, 14;
	mov.b64 	%rd427, {%r5715, %r5714};
	shf.r.wrap.b32 	%r5716, %r5713, %r5712, 18;
	shf.r.wrap.b32 	%r5717, %r5712, %r5713, 18;
	mov.b64 	%rd428, {%r5717, %r5716};
	xor.b64  	%rd429, %rd428, %rd427;
	shf.l.wrap.b32 	%r5718, %r5712, %r5713, 23;
	shf.l.wrap.b32 	%r5719, %r5713, %r5712, 23;
	mov.b64 	%rd430, {%r5719, %r5718};
	xor.b64  	%rd431, %rd429, %rd430;
	xor.b64  	%rd432, %rd390, %rd365;
	and.b64  	%rd433, %rd415, %rd432;
	xor.b64  	%rd434, %rd433, %rd365;
	add.s64 	%rd435, %rd340, %rd67;
	ld.const.u64 	%rd436, [k_sha512+112];
	add.s64 	%rd437, %rd435, %rd436;
	add.s64 	%rd438, %rd437, %rd434;
	add.s64 	%rd439, %rd438, %rd431;
	add.s64 	%rd440, %rd439, %rd351;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5720,%dummy}, %rd426;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5721}, %rd426;
	}
	shf.r.wrap.b32 	%r5722, %r5721, %r5720, 28;
	shf.r.wrap.b32 	%r5723, %r5720, %r5721, 28;
	mov.b64 	%rd441, {%r5723, %r5722};
	shf.l.wrap.b32 	%r5724, %r5720, %r5721, 30;
	shf.l.wrap.b32 	%r5725, %r5721, %r5720, 30;
	mov.b64 	%rd442, {%r5725, %r5724};
	xor.b64  	%rd443, %rd442, %rd441;
	shf.l.wrap.b32 	%r5726, %r5720, %r5721, 25;
	shf.l.wrap.b32 	%r5727, %r5721, %r5720, 25;
	mov.b64 	%rd444, {%r5727, %r5726};
	xor.b64  	%rd445, %rd443, %rd444;
	xor.b64  	%rd446, %rd426, %rd376;
	xor.b64  	%rd447, %rd426, %rd401;
	and.b64  	%rd448, %rd447, %rd446;
	xor.b64  	%rd449, %rd448, %rd426;
	add.s64 	%rd450, %rd439, %rd449;
	add.s64 	%rd451, %rd450, %rd445;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5728,%dummy}, %rd440;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5729}, %rd440;
	}
	shf.r.wrap.b32 	%r5730, %r5729, %r5728, 14;
	shf.r.wrap.b32 	%r5731, %r5728, %r5729, 14;
	mov.b64 	%rd452, {%r5731, %r5730};
	shf.r.wrap.b32 	%r5732, %r5729, %r5728, 18;
	shf.r.wrap.b32 	%r5733, %r5728, %r5729, 18;
	mov.b64 	%rd453, {%r5733, %r5732};
	xor.b64  	%rd454, %rd453, %rd452;
	shf.l.wrap.b32 	%r5734, %r5728, %r5729, 23;
	shf.l.wrap.b32 	%r5735, %r5729, %r5728, 23;
	mov.b64 	%rd455, {%r5735, %r5734};
	xor.b64  	%rd456, %rd454, %rd455;
	xor.b64  	%rd457, %rd415, %rd390;
	and.b64  	%rd458, %rd440, %rd457;
	xor.b64  	%rd459, %rd458, %rd390;
	add.s64 	%rd460, %rd365, %rd68;
	ld.const.u64 	%rd461, [k_sha512+120];
	add.s64 	%rd462, %rd460, %rd461;
	add.s64 	%rd463, %rd462, %rd459;
	add.s64 	%rd464, %rd463, %rd456;
	add.s64 	%rd465, %rd464, %rd376;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5736,%dummy}, %rd451;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5737}, %rd451;
	}
	shf.r.wrap.b32 	%r5738, %r5737, %r5736, 28;
	shf.r.wrap.b32 	%r5739, %r5736, %r5737, 28;
	mov.b64 	%rd466, {%r5739, %r5738};
	shf.l.wrap.b32 	%r5740, %r5736, %r5737, 30;
	shf.l.wrap.b32 	%r5741, %r5737, %r5736, 30;
	mov.b64 	%rd467, {%r5741, %r5740};
	xor.b64  	%rd468, %rd467, %rd466;
	shf.l.wrap.b32 	%r5742, %r5736, %r5737, 25;
	shf.l.wrap.b32 	%r5743, %r5737, %r5736, 25;
	mov.b64 	%rd469, {%r5743, %r5742};
	xor.b64  	%rd470, %rd468, %rd469;
	xor.b64  	%rd471, %rd451, %rd401;
	xor.b64  	%rd472, %rd451, %rd426;
	and.b64  	%rd473, %rd472, %rd471;
	xor.b64  	%rd474, %rd473, %rd451;
	add.s64 	%rd475, %rd464, %rd474;
	add.s64 	%rd476, %rd475, %rd470;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5744,%dummy}, %rd67;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5745}, %rd67;
	}
	shf.r.wrap.b32 	%r5746, %r5745, %r5744, 19;
	shf.r.wrap.b32 	%r5747, %r5744, %r5745, 19;
	mov.b64 	%rd477, {%r5747, %r5746};
	shf.l.wrap.b32 	%r5748, %r5744, %r5745, 3;
	shf.l.wrap.b32 	%r5749, %r5745, %r5744, 3;
	mov.b64 	%rd478, {%r5749, %r5748};
	shr.u64 	%rd479, %rd67, 6;
	xor.b64  	%rd480, %rd477, %rd479;
	xor.b64  	%rd481, %rd480, %rd478;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5750,%dummy}, %rd54;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5751}, %rd54;
	}
	shf.r.wrap.b32 	%r5752, %r5751, %r5750, 1;
	shf.r.wrap.b32 	%r5753, %r5750, %r5751, 1;
	mov.b64 	%rd482, {%r5753, %r5752};
	shf.r.wrap.b32 	%r5754, %r5751, %r5750, 8;
	shf.r.wrap.b32 	%r5755, %r5750, %r5751, 8;
	mov.b64 	%rd483, {%r5755, %r5754};
	shr.u64 	%rd484, %rd54, 7;
	xor.b64  	%rd485, %rd482, %rd484;
	xor.b64  	%rd486, %rd485, %rd483;
	add.s64 	%rd487, %rd62, %rd53;
	add.s64 	%rd488, %rd487, %rd481;
	add.s64 	%rd489, %rd488, %rd486;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5756,%dummy}, %rd68;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5757}, %rd68;
	}
	shf.r.wrap.b32 	%r5758, %r5757, %r5756, 19;
	shf.r.wrap.b32 	%r5759, %r5756, %r5757, 19;
	mov.b64 	%rd490, {%r5759, %r5758};
	shf.l.wrap.b32 	%r5760, %r5756, %r5757, 3;
	shf.l.wrap.b32 	%r5761, %r5757, %r5756, 3;
	mov.b64 	%rd491, {%r5761, %r5760};
	shr.u64 	%rd492, %rd68, 6;
	xor.b64  	%rd493, %rd490, %rd492;
	xor.b64  	%rd494, %rd493, %rd491;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5762,%dummy}, %rd55;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5763}, %rd55;
	}
	shf.r.wrap.b32 	%r5764, %r5763, %r5762, 1;
	shf.r.wrap.b32 	%r5765, %r5762, %r5763, 1;
	mov.b64 	%rd495, {%r5765, %r5764};
	shf.r.wrap.b32 	%r5766, %r5763, %r5762, 8;
	shf.r.wrap.b32 	%r5767, %r5762, %r5763, 8;
	mov.b64 	%rd496, {%r5767, %r5766};
	shr.u64 	%rd497, %rd55, 7;
	xor.b64  	%rd498, %rd495, %rd497;
	xor.b64  	%rd499, %rd498, %rd496;
	add.s64 	%rd500, %rd63, %rd54;
	add.s64 	%rd501, %rd500, %rd494;
	add.s64 	%rd502, %rd501, %rd499;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5768,%dummy}, %rd489;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5769}, %rd489;
	}
	shf.r.wrap.b32 	%r5770, %r5769, %r5768, 19;
	shf.r.wrap.b32 	%r5771, %r5768, %r5769, 19;
	mov.b64 	%rd503, {%r5771, %r5770};
	shf.l.wrap.b32 	%r5772, %r5768, %r5769, 3;
	shf.l.wrap.b32 	%r5773, %r5769, %r5768, 3;
	mov.b64 	%rd504, {%r5773, %r5772};
	shr.u64 	%rd505, %rd489, 6;
	xor.b64  	%rd506, %rd503, %rd505;
	xor.b64  	%rd507, %rd506, %rd504;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5774,%dummy}, %rd56;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5775}, %rd56;
	}
	shf.r.wrap.b32 	%r5776, %r5775, %r5774, 1;
	shf.r.wrap.b32 	%r5777, %r5774, %r5775, 1;
	mov.b64 	%rd508, {%r5777, %r5776};
	shf.r.wrap.b32 	%r5778, %r5775, %r5774, 8;
	shf.r.wrap.b32 	%r5779, %r5774, %r5775, 8;
	mov.b64 	%rd509, {%r5779, %r5778};
	shr.u64 	%rd510, %rd56, 7;
	xor.b64  	%rd511, %rd508, %rd510;
	xor.b64  	%rd512, %rd511, %rd509;
	add.s64 	%rd513, %rd64, %rd55;
	add.s64 	%rd514, %rd513, %rd507;
	add.s64 	%rd515, %rd514, %rd512;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5780,%dummy}, %rd502;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5781}, %rd502;
	}
	shf.r.wrap.b32 	%r5782, %r5781, %r5780, 19;
	shf.r.wrap.b32 	%r5783, %r5780, %r5781, 19;
	mov.b64 	%rd516, {%r5783, %r5782};
	shf.l.wrap.b32 	%r5784, %r5780, %r5781, 3;
	shf.l.wrap.b32 	%r5785, %r5781, %r5780, 3;
	mov.b64 	%rd517, {%r5785, %r5784};
	shr.u64 	%rd518, %rd502, 6;
	xor.b64  	%rd519, %rd516, %rd518;
	xor.b64  	%rd520, %rd519, %rd517;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5786,%dummy}, %rd57;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5787}, %rd57;
	}
	shf.r.wrap.b32 	%r5788, %r5787, %r5786, 1;
	shf.r.wrap.b32 	%r5789, %r5786, %r5787, 1;
	mov.b64 	%rd521, {%r5789, %r5788};
	shf.r.wrap.b32 	%r5790, %r5787, %r5786, 8;
	shf.r.wrap.b32 	%r5791, %r5786, %r5787, 8;
	mov.b64 	%rd522, {%r5791, %r5790};
	shr.u64 	%rd523, %rd57, 7;
	xor.b64  	%rd524, %rd521, %rd523;
	xor.b64  	%rd525, %rd524, %rd522;
	add.s64 	%rd526, %rd65, %rd56;
	add.s64 	%rd527, %rd526, %rd520;
	add.s64 	%rd528, %rd527, %rd525;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5792,%dummy}, %rd515;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5793}, %rd515;
	}
	shf.r.wrap.b32 	%r5794, %r5793, %r5792, 19;
	shf.r.wrap.b32 	%r5795, %r5792, %r5793, 19;
	mov.b64 	%rd529, {%r5795, %r5794};
	shf.l.wrap.b32 	%r5796, %r5792, %r5793, 3;
	shf.l.wrap.b32 	%r5797, %r5793, %r5792, 3;
	mov.b64 	%rd530, {%r5797, %r5796};
	shr.u64 	%rd531, %rd515, 6;
	xor.b64  	%rd532, %rd529, %rd531;
	xor.b64  	%rd533, %rd532, %rd530;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5798,%dummy}, %rd58;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5799}, %rd58;
	}
	shf.r.wrap.b32 	%r5800, %r5799, %r5798, 1;
	shf.r.wrap.b32 	%r5801, %r5798, %r5799, 1;
	mov.b64 	%rd534, {%r5801, %r5800};
	shf.r.wrap.b32 	%r5802, %r5799, %r5798, 8;
	shf.r.wrap.b32 	%r5803, %r5798, %r5799, 8;
	mov.b64 	%rd535, {%r5803, %r5802};
	shr.u64 	%rd536, %rd58, 7;
	xor.b64  	%rd537, %rd534, %rd536;
	xor.b64  	%rd538, %rd537, %rd535;
	add.s64 	%rd539, %rd66, %rd57;
	add.s64 	%rd540, %rd539, %rd533;
	add.s64 	%rd541, %rd540, %rd538;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5804,%dummy}, %rd528;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5805}, %rd528;
	}
	shf.r.wrap.b32 	%r5806, %r5805, %r5804, 19;
	shf.r.wrap.b32 	%r5807, %r5804, %r5805, 19;
	mov.b64 	%rd542, {%r5807, %r5806};
	shf.l.wrap.b32 	%r5808, %r5804, %r5805, 3;
	shf.l.wrap.b32 	%r5809, %r5805, %r5804, 3;
	mov.b64 	%rd543, {%r5809, %r5808};
	shr.u64 	%rd544, %rd528, 6;
	xor.b64  	%rd545, %rd542, %rd544;
	xor.b64  	%rd546, %rd545, %rd543;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5810,%dummy}, %rd59;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5811}, %rd59;
	}
	shf.r.wrap.b32 	%r5812, %r5811, %r5810, 1;
	shf.r.wrap.b32 	%r5813, %r5810, %r5811, 1;
	mov.b64 	%rd547, {%r5813, %r5812};
	shf.r.wrap.b32 	%r5814, %r5811, %r5810, 8;
	shf.r.wrap.b32 	%r5815, %r5810, %r5811, 8;
	mov.b64 	%rd548, {%r5815, %r5814};
	shr.u64 	%rd549, %rd59, 7;
	xor.b64  	%rd550, %rd547, %rd549;
	xor.b64  	%rd551, %rd550, %rd548;
	add.s64 	%rd552, %rd67, %rd58;
	add.s64 	%rd553, %rd552, %rd546;
	add.s64 	%rd554, %rd553, %rd551;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5816,%dummy}, %rd541;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5817}, %rd541;
	}
	shf.r.wrap.b32 	%r5818, %r5817, %r5816, 19;
	shf.r.wrap.b32 	%r5819, %r5816, %r5817, 19;
	mov.b64 	%rd555, {%r5819, %r5818};
	shf.l.wrap.b32 	%r5820, %r5816, %r5817, 3;
	shf.l.wrap.b32 	%r5821, %r5817, %r5816, 3;
	mov.b64 	%rd556, {%r5821, %r5820};
	shr.u64 	%rd557, %rd541, 6;
	xor.b64  	%rd558, %rd555, %rd557;
	xor.b64  	%rd559, %rd558, %rd556;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5822,%dummy}, %rd60;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5823}, %rd60;
	}
	shf.r.wrap.b32 	%r5824, %r5823, %r5822, 1;
	shf.r.wrap.b32 	%r5825, %r5822, %r5823, 1;
	mov.b64 	%rd560, {%r5825, %r5824};
	shf.r.wrap.b32 	%r5826, %r5823, %r5822, 8;
	shf.r.wrap.b32 	%r5827, %r5822, %r5823, 8;
	mov.b64 	%rd561, {%r5827, %r5826};
	shr.u64 	%rd562, %rd60, 7;
	xor.b64  	%rd563, %rd560, %rd562;
	xor.b64  	%rd564, %rd563, %rd561;
	add.s64 	%rd565, %rd68, %rd59;
	add.s64 	%rd566, %rd565, %rd559;
	add.s64 	%rd567, %rd566, %rd564;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5828,%dummy}, %rd554;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5829}, %rd554;
	}
	shf.r.wrap.b32 	%r5830, %r5829, %r5828, 19;
	shf.r.wrap.b32 	%r5831, %r5828, %r5829, 19;
	mov.b64 	%rd568, {%r5831, %r5830};
	shf.l.wrap.b32 	%r5832, %r5828, %r5829, 3;
	shf.l.wrap.b32 	%r5833, %r5829, %r5828, 3;
	mov.b64 	%rd569, {%r5833, %r5832};
	shr.u64 	%rd570, %rd554, 6;
	xor.b64  	%rd571, %rd568, %rd570;
	xor.b64  	%rd572, %rd571, %rd569;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5834,%dummy}, %rd61;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5835}, %rd61;
	}
	shf.r.wrap.b32 	%r5836, %r5835, %r5834, 1;
	shf.r.wrap.b32 	%r5837, %r5834, %r5835, 1;
	mov.b64 	%rd573, {%r5837, %r5836};
	shf.r.wrap.b32 	%r5838, %r5835, %r5834, 8;
	shf.r.wrap.b32 	%r5839, %r5834, %r5835, 8;
	mov.b64 	%rd574, {%r5839, %r5838};
	shr.u64 	%rd575, %rd61, 7;
	xor.b64  	%rd576, %rd573, %rd575;
	xor.b64  	%rd577, %rd576, %rd574;
	add.s64 	%rd578, %rd489, %rd60;
	add.s64 	%rd579, %rd578, %rd572;
	add.s64 	%rd580, %rd579, %rd577;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5840,%dummy}, %rd567;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5841}, %rd567;
	}
	shf.r.wrap.b32 	%r5842, %r5841, %r5840, 19;
	shf.r.wrap.b32 	%r5843, %r5840, %r5841, 19;
	mov.b64 	%rd581, {%r5843, %r5842};
	shf.l.wrap.b32 	%r5844, %r5840, %r5841, 3;
	shf.l.wrap.b32 	%r5845, %r5841, %r5840, 3;
	mov.b64 	%rd582, {%r5845, %r5844};
	shr.u64 	%rd583, %rd567, 6;
	xor.b64  	%rd584, %rd581, %rd583;
	xor.b64  	%rd585, %rd584, %rd582;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5846,%dummy}, %rd62;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5847}, %rd62;
	}
	shf.r.wrap.b32 	%r5848, %r5847, %r5846, 1;
	shf.r.wrap.b32 	%r5849, %r5846, %r5847, 1;
	mov.b64 	%rd586, {%r5849, %r5848};
	shf.r.wrap.b32 	%r5850, %r5847, %r5846, 8;
	shf.r.wrap.b32 	%r5851, %r5846, %r5847, 8;
	mov.b64 	%rd587, {%r5851, %r5850};
	shr.u64 	%rd588, %rd62, 7;
	xor.b64  	%rd589, %rd586, %rd588;
	xor.b64  	%rd590, %rd589, %rd587;
	add.s64 	%rd591, %rd502, %rd61;
	add.s64 	%rd592, %rd591, %rd585;
	add.s64 	%rd593, %rd592, %rd590;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5852,%dummy}, %rd580;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5853}, %rd580;
	}
	shf.r.wrap.b32 	%r5854, %r5853, %r5852, 19;
	shf.r.wrap.b32 	%r5855, %r5852, %r5853, 19;
	mov.b64 	%rd594, {%r5855, %r5854};
	shf.l.wrap.b32 	%r5856, %r5852, %r5853, 3;
	shf.l.wrap.b32 	%r5857, %r5853, %r5852, 3;
	mov.b64 	%rd595, {%r5857, %r5856};
	shr.u64 	%rd596, %rd580, 6;
	xor.b64  	%rd597, %rd594, %rd596;
	xor.b64  	%rd598, %rd597, %rd595;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5858,%dummy}, %rd63;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5859}, %rd63;
	}
	shf.r.wrap.b32 	%r5860, %r5859, %r5858, 1;
	shf.r.wrap.b32 	%r5861, %r5858, %r5859, 1;
	mov.b64 	%rd599, {%r5861, %r5860};
	shf.r.wrap.b32 	%r5862, %r5859, %r5858, 8;
	shf.r.wrap.b32 	%r5863, %r5858, %r5859, 8;
	mov.b64 	%rd600, {%r5863, %r5862};
	shr.u64 	%rd601, %rd63, 7;
	xor.b64  	%rd602, %rd599, %rd601;
	xor.b64  	%rd603, %rd602, %rd600;
	add.s64 	%rd604, %rd515, %rd62;
	add.s64 	%rd605, %rd604, %rd598;
	add.s64 	%rd606, %rd605, %rd603;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5864,%dummy}, %rd593;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5865}, %rd593;
	}
	shf.r.wrap.b32 	%r5866, %r5865, %r5864, 19;
	shf.r.wrap.b32 	%r5867, %r5864, %r5865, 19;
	mov.b64 	%rd607, {%r5867, %r5866};
	shf.l.wrap.b32 	%r5868, %r5864, %r5865, 3;
	shf.l.wrap.b32 	%r5869, %r5865, %r5864, 3;
	mov.b64 	%rd608, {%r5869, %r5868};
	shr.u64 	%rd609, %rd593, 6;
	xor.b64  	%rd610, %rd607, %rd609;
	xor.b64  	%rd611, %rd610, %rd608;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5870,%dummy}, %rd64;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5871}, %rd64;
	}
	shf.r.wrap.b32 	%r5872, %r5871, %r5870, 1;
	shf.r.wrap.b32 	%r5873, %r5870, %r5871, 1;
	mov.b64 	%rd612, {%r5873, %r5872};
	shf.r.wrap.b32 	%r5874, %r5871, %r5870, 8;
	shf.r.wrap.b32 	%r5875, %r5870, %r5871, 8;
	mov.b64 	%rd613, {%r5875, %r5874};
	shr.u64 	%rd614, %rd64, 7;
	xor.b64  	%rd615, %rd612, %rd614;
	xor.b64  	%rd616, %rd615, %rd613;
	add.s64 	%rd617, %rd528, %rd63;
	add.s64 	%rd618, %rd617, %rd611;
	add.s64 	%rd619, %rd618, %rd616;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5876,%dummy}, %rd606;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5877}, %rd606;
	}
	shf.r.wrap.b32 	%r5878, %r5877, %r5876, 19;
	shf.r.wrap.b32 	%r5879, %r5876, %r5877, 19;
	mov.b64 	%rd620, {%r5879, %r5878};
	shf.l.wrap.b32 	%r5880, %r5876, %r5877, 3;
	shf.l.wrap.b32 	%r5881, %r5877, %r5876, 3;
	mov.b64 	%rd621, {%r5881, %r5880};
	shr.u64 	%rd622, %rd606, 6;
	xor.b64  	%rd623, %rd620, %rd622;
	xor.b64  	%rd624, %rd623, %rd621;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5882,%dummy}, %rd65;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5883}, %rd65;
	}
	shf.r.wrap.b32 	%r5884, %r5883, %r5882, 1;
	shf.r.wrap.b32 	%r5885, %r5882, %r5883, 1;
	mov.b64 	%rd625, {%r5885, %r5884};
	shf.r.wrap.b32 	%r5886, %r5883, %r5882, 8;
	shf.r.wrap.b32 	%r5887, %r5882, %r5883, 8;
	mov.b64 	%rd626, {%r5887, %r5886};
	shr.u64 	%rd627, %rd65, 7;
	xor.b64  	%rd628, %rd625, %rd627;
	xor.b64  	%rd629, %rd628, %rd626;
	add.s64 	%rd630, %rd541, %rd64;
	add.s64 	%rd631, %rd630, %rd624;
	add.s64 	%rd632, %rd631, %rd629;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5888,%dummy}, %rd619;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5889}, %rd619;
	}
	shf.r.wrap.b32 	%r5890, %r5889, %r5888, 19;
	shf.r.wrap.b32 	%r5891, %r5888, %r5889, 19;
	mov.b64 	%rd633, {%r5891, %r5890};
	shf.l.wrap.b32 	%r5892, %r5888, %r5889, 3;
	shf.l.wrap.b32 	%r5893, %r5889, %r5888, 3;
	mov.b64 	%rd634, {%r5893, %r5892};
	shr.u64 	%rd635, %rd619, 6;
	xor.b64  	%rd636, %rd633, %rd635;
	xor.b64  	%rd637, %rd636, %rd634;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5894,%dummy}, %rd66;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5895}, %rd66;
	}
	shf.r.wrap.b32 	%r5896, %r5895, %r5894, 1;
	shf.r.wrap.b32 	%r5897, %r5894, %r5895, 1;
	mov.b64 	%rd638, {%r5897, %r5896};
	shf.r.wrap.b32 	%r5898, %r5895, %r5894, 8;
	shf.r.wrap.b32 	%r5899, %r5894, %r5895, 8;
	mov.b64 	%rd639, {%r5899, %r5898};
	shr.u64 	%rd640, %rd66, 7;
	xor.b64  	%rd641, %rd638, %rd640;
	xor.b64  	%rd642, %rd641, %rd639;
	add.s64 	%rd643, %rd554, %rd65;
	add.s64 	%rd644, %rd643, %rd637;
	add.s64 	%rd645, %rd644, %rd642;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5900,%dummy}, %rd632;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5901}, %rd632;
	}
	shf.r.wrap.b32 	%r5902, %r5901, %r5900, 19;
	shf.r.wrap.b32 	%r5903, %r5900, %r5901, 19;
	mov.b64 	%rd646, {%r5903, %r5902};
	shf.l.wrap.b32 	%r5904, %r5900, %r5901, 3;
	shf.l.wrap.b32 	%r5905, %r5901, %r5900, 3;
	mov.b64 	%rd647, {%r5905, %r5904};
	shr.u64 	%rd648, %rd632, 6;
	xor.b64  	%rd649, %rd646, %rd648;
	xor.b64  	%rd650, %rd649, %rd647;
	shf.r.wrap.b32 	%r5906, %r5745, %r5744, 1;
	shf.r.wrap.b32 	%r5907, %r5744, %r5745, 1;
	mov.b64 	%rd651, {%r5907, %r5906};
	shf.r.wrap.b32 	%r5908, %r5745, %r5744, 8;
	shf.r.wrap.b32 	%r5909, %r5744, %r5745, 8;
	mov.b64 	%rd652, {%r5909, %r5908};
	shr.u64 	%rd653, %rd67, 7;
	xor.b64  	%rd654, %rd651, %rd653;
	xor.b64  	%rd655, %rd654, %rd652;
	add.s64 	%rd656, %rd567, %rd66;
	add.s64 	%rd657, %rd656, %rd650;
	add.s64 	%rd658, %rd657, %rd655;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5910,%dummy}, %rd645;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5911}, %rd645;
	}
	shf.r.wrap.b32 	%r5912, %r5911, %r5910, 19;
	shf.r.wrap.b32 	%r5913, %r5910, %r5911, 19;
	mov.b64 	%rd659, {%r5913, %r5912};
	shf.l.wrap.b32 	%r5914, %r5910, %r5911, 3;
	shf.l.wrap.b32 	%r5915, %r5911, %r5910, 3;
	mov.b64 	%rd660, {%r5915, %r5914};
	shr.u64 	%rd661, %rd645, 6;
	xor.b64  	%rd662, %rd659, %rd661;
	xor.b64  	%rd663, %rd662, %rd660;
	shf.r.wrap.b32 	%r5916, %r5757, %r5756, 1;
	shf.r.wrap.b32 	%r5917, %r5756, %r5757, 1;
	mov.b64 	%rd664, {%r5917, %r5916};
	shf.r.wrap.b32 	%r5918, %r5757, %r5756, 8;
	shf.r.wrap.b32 	%r5919, %r5756, %r5757, 8;
	mov.b64 	%rd665, {%r5919, %r5918};
	shr.u64 	%rd666, %rd68, 7;
	xor.b64  	%rd667, %rd664, %rd666;
	xor.b64  	%rd668, %rd667, %rd665;
	add.s64 	%rd669, %rd580, %rd67;
	add.s64 	%rd670, %rd669, %rd663;
	add.s64 	%rd671, %rd670, %rd668;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5920,%dummy}, %rd658;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5921}, %rd658;
	}
	shf.r.wrap.b32 	%r5922, %r5921, %r5920, 19;
	shf.r.wrap.b32 	%r5923, %r5920, %r5921, 19;
	mov.b64 	%rd672, {%r5923, %r5922};
	shf.l.wrap.b32 	%r5924, %r5920, %r5921, 3;
	shf.l.wrap.b32 	%r5925, %r5921, %r5920, 3;
	mov.b64 	%rd673, {%r5925, %r5924};
	shr.u64 	%rd674, %rd658, 6;
	xor.b64  	%rd675, %rd672, %rd674;
	xor.b64  	%rd676, %rd675, %rd673;
	shf.r.wrap.b32 	%r5926, %r5769, %r5768, 1;
	shf.r.wrap.b32 	%r5927, %r5768, %r5769, 1;
	mov.b64 	%rd677, {%r5927, %r5926};
	shf.r.wrap.b32 	%r5928, %r5769, %r5768, 8;
	shf.r.wrap.b32 	%r5929, %r5768, %r5769, 8;
	mov.b64 	%rd678, {%r5929, %r5928};
	shr.u64 	%rd679, %rd489, 7;
	xor.b64  	%rd680, %rd677, %rd679;
	xor.b64  	%rd681, %rd680, %rd678;
	add.s64 	%rd682, %rd593, %rd68;
	add.s64 	%rd683, %rd682, %rd676;
	add.s64 	%rd684, %rd683, %rd681;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5930,%dummy}, %rd465;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5931}, %rd465;
	}
	shf.r.wrap.b32 	%r5932, %r5931, %r5930, 14;
	shf.r.wrap.b32 	%r5933, %r5930, %r5931, 14;
	mov.b64 	%rd685, {%r5933, %r5932};
	shf.r.wrap.b32 	%r5934, %r5931, %r5930, 18;
	shf.r.wrap.b32 	%r5935, %r5930, %r5931, 18;
	mov.b64 	%rd686, {%r5935, %r5934};
	xor.b64  	%rd687, %rd686, %rd685;
	shf.l.wrap.b32 	%r5936, %r5930, %r5931, 23;
	shf.l.wrap.b32 	%r5937, %r5931, %r5930, 23;
	mov.b64 	%rd688, {%r5937, %r5936};
	xor.b64  	%rd689, %rd687, %rd688;
	xor.b64  	%rd690, %rd440, %rd415;
	and.b64  	%rd691, %rd690, %rd465;
	xor.b64  	%rd692, %rd691, %rd415;
	add.s64 	%rd693, %rd692, %rd390;
	add.s64 	%rd694, %rd693, %rd489;
	ld.const.u64 	%rd695, [k_sha512+128];
	add.s64 	%rd696, %rd694, %rd695;
	add.s64 	%rd697, %rd696, %rd689;
	add.s64 	%rd698, %rd697, %rd401;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5938,%dummy}, %rd476;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5939}, %rd476;
	}
	shf.r.wrap.b32 	%r5940, %r5939, %r5938, 28;
	shf.r.wrap.b32 	%r5941, %r5938, %r5939, 28;
	mov.b64 	%rd699, {%r5941, %r5940};
	shf.l.wrap.b32 	%r5942, %r5938, %r5939, 30;
	shf.l.wrap.b32 	%r5943, %r5939, %r5938, 30;
	mov.b64 	%rd700, {%r5943, %r5942};
	xor.b64  	%rd701, %rd700, %rd699;
	shf.l.wrap.b32 	%r5944, %r5938, %r5939, 25;
	shf.l.wrap.b32 	%r5945, %r5939, %r5938, 25;
	mov.b64 	%rd702, {%r5945, %r5944};
	xor.b64  	%rd703, %rd701, %rd702;
	xor.b64  	%rd704, %rd476, %rd426;
	xor.b64  	%rd705, %rd476, %rd451;
	and.b64  	%rd706, %rd705, %rd704;
	xor.b64  	%rd707, %rd706, %rd476;
	add.s64 	%rd708, %rd697, %rd707;
	add.s64 	%rd709, %rd708, %rd703;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5946,%dummy}, %rd698;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5947}, %rd698;
	}
	shf.r.wrap.b32 	%r5948, %r5947, %r5946, 14;
	shf.r.wrap.b32 	%r5949, %r5946, %r5947, 14;
	mov.b64 	%rd710, {%r5949, %r5948};
	shf.r.wrap.b32 	%r5950, %r5947, %r5946, 18;
	shf.r.wrap.b32 	%r5951, %r5946, %r5947, 18;
	mov.b64 	%rd711, {%r5951, %r5950};
	xor.b64  	%rd712, %rd711, %rd710;
	shf.l.wrap.b32 	%r5952, %r5946, %r5947, 23;
	shf.l.wrap.b32 	%r5953, %r5947, %r5946, 23;
	mov.b64 	%rd713, {%r5953, %r5952};
	xor.b64  	%rd714, %rd712, %rd713;
	xor.b64  	%rd715, %rd465, %rd440;
	and.b64  	%rd716, %rd698, %rd715;
	xor.b64  	%rd717, %rd716, %rd440;
	add.s64 	%rd718, %rd502, %rd415;
	ld.const.u64 	%rd719, [k_sha512+136];
	add.s64 	%rd720, %rd718, %rd719;
	add.s64 	%rd721, %rd720, %rd717;
	add.s64 	%rd722, %rd721, %rd714;
	add.s64 	%rd723, %rd722, %rd426;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5954,%dummy}, %rd709;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5955}, %rd709;
	}
	shf.r.wrap.b32 	%r5956, %r5955, %r5954, 28;
	shf.r.wrap.b32 	%r5957, %r5954, %r5955, 28;
	mov.b64 	%rd724, {%r5957, %r5956};
	shf.l.wrap.b32 	%r5958, %r5954, %r5955, 30;
	shf.l.wrap.b32 	%r5959, %r5955, %r5954, 30;
	mov.b64 	%rd725, {%r5959, %r5958};
	xor.b64  	%rd726, %rd725, %rd724;
	shf.l.wrap.b32 	%r5960, %r5954, %r5955, 25;
	shf.l.wrap.b32 	%r5961, %r5955, %r5954, 25;
	mov.b64 	%rd727, {%r5961, %r5960};
	xor.b64  	%rd728, %rd726, %rd727;
	xor.b64  	%rd729, %rd709, %rd451;
	xor.b64  	%rd730, %rd709, %rd476;
	and.b64  	%rd731, %rd730, %rd729;
	xor.b64  	%rd732, %rd731, %rd709;
	add.s64 	%rd733, %rd722, %rd732;
	add.s64 	%rd734, %rd733, %rd728;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5962,%dummy}, %rd723;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5963}, %rd723;
	}
	shf.r.wrap.b32 	%r5964, %r5963, %r5962, 14;
	shf.r.wrap.b32 	%r5965, %r5962, %r5963, 14;
	mov.b64 	%rd735, {%r5965, %r5964};
	shf.r.wrap.b32 	%r5966, %r5963, %r5962, 18;
	shf.r.wrap.b32 	%r5967, %r5962, %r5963, 18;
	mov.b64 	%rd736, {%r5967, %r5966};
	xor.b64  	%rd737, %rd736, %rd735;
	shf.l.wrap.b32 	%r5968, %r5962, %r5963, 23;
	shf.l.wrap.b32 	%r5969, %r5963, %r5962, 23;
	mov.b64 	%rd738, {%r5969, %r5968};
	xor.b64  	%rd739, %rd737, %rd738;
	xor.b64  	%rd740, %rd698, %rd465;
	and.b64  	%rd741, %rd723, %rd740;
	xor.b64  	%rd742, %rd741, %rd465;
	add.s64 	%rd743, %rd515, %rd440;
	ld.const.u64 	%rd744, [k_sha512+144];
	add.s64 	%rd745, %rd743, %rd744;
	add.s64 	%rd746, %rd745, %rd742;
	add.s64 	%rd747, %rd746, %rd739;
	add.s64 	%rd748, %rd747, %rd451;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5970,%dummy}, %rd734;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5971}, %rd734;
	}
	shf.r.wrap.b32 	%r5972, %r5971, %r5970, 28;
	shf.r.wrap.b32 	%r5973, %r5970, %r5971, 28;
	mov.b64 	%rd749, {%r5973, %r5972};
	shf.l.wrap.b32 	%r5974, %r5970, %r5971, 30;
	shf.l.wrap.b32 	%r5975, %r5971, %r5970, 30;
	mov.b64 	%rd750, {%r5975, %r5974};
	xor.b64  	%rd751, %rd750, %rd749;
	shf.l.wrap.b32 	%r5976, %r5970, %r5971, 25;
	shf.l.wrap.b32 	%r5977, %r5971, %r5970, 25;
	mov.b64 	%rd752, {%r5977, %r5976};
	xor.b64  	%rd753, %rd751, %rd752;
	xor.b64  	%rd754, %rd734, %rd476;
	xor.b64  	%rd755, %rd734, %rd709;
	and.b64  	%rd756, %rd755, %rd754;
	xor.b64  	%rd757, %rd756, %rd734;
	add.s64 	%rd758, %rd747, %rd757;
	add.s64 	%rd759, %rd758, %rd753;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5978,%dummy}, %rd748;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5979}, %rd748;
	}
	shf.r.wrap.b32 	%r5980, %r5979, %r5978, 14;
	shf.r.wrap.b32 	%r5981, %r5978, %r5979, 14;
	mov.b64 	%rd760, {%r5981, %r5980};
	shf.r.wrap.b32 	%r5982, %r5979, %r5978, 18;
	shf.r.wrap.b32 	%r5983, %r5978, %r5979, 18;
	mov.b64 	%rd761, {%r5983, %r5982};
	xor.b64  	%rd762, %rd761, %rd760;
	shf.l.wrap.b32 	%r5984, %r5978, %r5979, 23;
	shf.l.wrap.b32 	%r5985, %r5979, %r5978, 23;
	mov.b64 	%rd763, {%r5985, %r5984};
	xor.b64  	%rd764, %rd762, %rd763;
	xor.b64  	%rd765, %rd723, %rd698;
	and.b64  	%rd766, %rd748, %rd765;
	xor.b64  	%rd767, %rd766, %rd698;
	add.s64 	%rd768, %rd528, %rd465;
	ld.const.u64 	%rd769, [k_sha512+152];
	add.s64 	%rd770, %rd768, %rd769;
	add.s64 	%rd771, %rd770, %rd767;
	add.s64 	%rd772, %rd771, %rd764;
	add.s64 	%rd773, %rd772, %rd476;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5986,%dummy}, %rd759;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5987}, %rd759;
	}
	shf.r.wrap.b32 	%r5988, %r5987, %r5986, 28;
	shf.r.wrap.b32 	%r5989, %r5986, %r5987, 28;
	mov.b64 	%rd774, {%r5989, %r5988};
	shf.l.wrap.b32 	%r5990, %r5986, %r5987, 30;
	shf.l.wrap.b32 	%r5991, %r5987, %r5986, 30;
	mov.b64 	%rd775, {%r5991, %r5990};
	xor.b64  	%rd776, %rd775, %rd774;
	shf.l.wrap.b32 	%r5992, %r5986, %r5987, 25;
	shf.l.wrap.b32 	%r5993, %r5987, %r5986, 25;
	mov.b64 	%rd777, {%r5993, %r5992};
	xor.b64  	%rd778, %rd776, %rd777;
	xor.b64  	%rd779, %rd759, %rd709;
	xor.b64  	%rd780, %rd759, %rd734;
	and.b64  	%rd781, %rd780, %rd779;
	xor.b64  	%rd782, %rd781, %rd759;
	add.s64 	%rd783, %rd772, %rd782;
	add.s64 	%rd784, %rd783, %rd778;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5994,%dummy}, %rd773;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5995}, %rd773;
	}
	shf.r.wrap.b32 	%r5996, %r5995, %r5994, 14;
	shf.r.wrap.b32 	%r5997, %r5994, %r5995, 14;
	mov.b64 	%rd785, {%r5997, %r5996};
	shf.r.wrap.b32 	%r5998, %r5995, %r5994, 18;
	shf.r.wrap.b32 	%r5999, %r5994, %r5995, 18;
	mov.b64 	%rd786, {%r5999, %r5998};
	xor.b64  	%rd787, %rd786, %rd785;
	shf.l.wrap.b32 	%r6000, %r5994, %r5995, 23;
	shf.l.wrap.b32 	%r6001, %r5995, %r5994, 23;
	mov.b64 	%rd788, {%r6001, %r6000};
	xor.b64  	%rd789, %rd787, %rd788;
	xor.b64  	%rd790, %rd748, %rd723;
	and.b64  	%rd791, %rd773, %rd790;
	xor.b64  	%rd792, %rd791, %rd723;
	add.s64 	%rd793, %rd698, %rd541;
	ld.const.u64 	%rd794, [k_sha512+160];
	add.s64 	%rd795, %rd793, %rd794;
	add.s64 	%rd796, %rd795, %rd792;
	add.s64 	%rd797, %rd796, %rd789;
	add.s64 	%rd798, %rd797, %rd709;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6002,%dummy}, %rd784;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6003}, %rd784;
	}
	shf.r.wrap.b32 	%r6004, %r6003, %r6002, 28;
	shf.r.wrap.b32 	%r6005, %r6002, %r6003, 28;
	mov.b64 	%rd799, {%r6005, %r6004};
	shf.l.wrap.b32 	%r6006, %r6002, %r6003, 30;
	shf.l.wrap.b32 	%r6007, %r6003, %r6002, 30;
	mov.b64 	%rd800, {%r6007, %r6006};
	xor.b64  	%rd801, %rd800, %rd799;
	shf.l.wrap.b32 	%r6008, %r6002, %r6003, 25;
	shf.l.wrap.b32 	%r6009, %r6003, %r6002, 25;
	mov.b64 	%rd802, {%r6009, %r6008};
	xor.b64  	%rd803, %rd801, %rd802;
	xor.b64  	%rd804, %rd784, %rd734;
	xor.b64  	%rd805, %rd784, %rd759;
	and.b64  	%rd806, %rd805, %rd804;
	xor.b64  	%rd807, %rd806, %rd784;
	add.s64 	%rd808, %rd797, %rd807;
	add.s64 	%rd809, %rd808, %rd803;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6010,%dummy}, %rd798;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6011}, %rd798;
	}
	shf.r.wrap.b32 	%r6012, %r6011, %r6010, 14;
	shf.r.wrap.b32 	%r6013, %r6010, %r6011, 14;
	mov.b64 	%rd810, {%r6013, %r6012};
	shf.r.wrap.b32 	%r6014, %r6011, %r6010, 18;
	shf.r.wrap.b32 	%r6015, %r6010, %r6011, 18;
	mov.b64 	%rd811, {%r6015, %r6014};
	xor.b64  	%rd812, %rd811, %rd810;
	shf.l.wrap.b32 	%r6016, %r6010, %r6011, 23;
	shf.l.wrap.b32 	%r6017, %r6011, %r6010, 23;
	mov.b64 	%rd813, {%r6017, %r6016};
	xor.b64  	%rd814, %rd812, %rd813;
	xor.b64  	%rd815, %rd773, %rd748;
	and.b64  	%rd816, %rd798, %rd815;
	xor.b64  	%rd817, %rd816, %rd748;
	add.s64 	%rd818, %rd723, %rd554;
	ld.const.u64 	%rd819, [k_sha512+168];
	add.s64 	%rd820, %rd818, %rd819;
	add.s64 	%rd821, %rd820, %rd817;
	add.s64 	%rd822, %rd821, %rd814;
	add.s64 	%rd823, %rd822, %rd734;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6018,%dummy}, %rd809;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6019}, %rd809;
	}
	shf.r.wrap.b32 	%r6020, %r6019, %r6018, 28;
	shf.r.wrap.b32 	%r6021, %r6018, %r6019, 28;
	mov.b64 	%rd824, {%r6021, %r6020};
	shf.l.wrap.b32 	%r6022, %r6018, %r6019, 30;
	shf.l.wrap.b32 	%r6023, %r6019, %r6018, 30;
	mov.b64 	%rd825, {%r6023, %r6022};
	xor.b64  	%rd826, %rd825, %rd824;
	shf.l.wrap.b32 	%r6024, %r6018, %r6019, 25;
	shf.l.wrap.b32 	%r6025, %r6019, %r6018, 25;
	mov.b64 	%rd827, {%r6025, %r6024};
	xor.b64  	%rd828, %rd826, %rd827;
	xor.b64  	%rd829, %rd809, %rd759;
	xor.b64  	%rd830, %rd809, %rd784;
	and.b64  	%rd831, %rd830, %rd829;
	xor.b64  	%rd832, %rd831, %rd809;
	add.s64 	%rd833, %rd822, %rd832;
	add.s64 	%rd834, %rd833, %rd828;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6026,%dummy}, %rd823;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6027}, %rd823;
	}
	shf.r.wrap.b32 	%r6028, %r6027, %r6026, 14;
	shf.r.wrap.b32 	%r6029, %r6026, %r6027, 14;
	mov.b64 	%rd835, {%r6029, %r6028};
	shf.r.wrap.b32 	%r6030, %r6027, %r6026, 18;
	shf.r.wrap.b32 	%r6031, %r6026, %r6027, 18;
	mov.b64 	%rd836, {%r6031, %r6030};
	xor.b64  	%rd837, %rd836, %rd835;
	shf.l.wrap.b32 	%r6032, %r6026, %r6027, 23;
	shf.l.wrap.b32 	%r6033, %r6027, %r6026, 23;
	mov.b64 	%rd838, {%r6033, %r6032};
	xor.b64  	%rd839, %rd837, %rd838;
	xor.b64  	%rd840, %rd798, %rd773;
	and.b64  	%rd841, %rd823, %rd840;
	xor.b64  	%rd842, %rd841, %rd773;
	add.s64 	%rd843, %rd748, %rd567;
	ld.const.u64 	%rd844, [k_sha512+176];
	add.s64 	%rd845, %rd843, %rd844;
	add.s64 	%rd846, %rd845, %rd842;
	add.s64 	%rd847, %rd846, %rd839;
	add.s64 	%rd848, %rd847, %rd759;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6034,%dummy}, %rd834;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6035}, %rd834;
	}
	shf.r.wrap.b32 	%r6036, %r6035, %r6034, 28;
	shf.r.wrap.b32 	%r6037, %r6034, %r6035, 28;
	mov.b64 	%rd849, {%r6037, %r6036};
	shf.l.wrap.b32 	%r6038, %r6034, %r6035, 30;
	shf.l.wrap.b32 	%r6039, %r6035, %r6034, 30;
	mov.b64 	%rd850, {%r6039, %r6038};
	xor.b64  	%rd851, %rd850, %rd849;
	shf.l.wrap.b32 	%r6040, %r6034, %r6035, 25;
	shf.l.wrap.b32 	%r6041, %r6035, %r6034, 25;
	mov.b64 	%rd852, {%r6041, %r6040};
	xor.b64  	%rd853, %rd851, %rd852;
	xor.b64  	%rd854, %rd834, %rd784;
	xor.b64  	%rd855, %rd834, %rd809;
	and.b64  	%rd856, %rd855, %rd854;
	xor.b64  	%rd857, %rd856, %rd834;
	add.s64 	%rd858, %rd847, %rd857;
	add.s64 	%rd859, %rd858, %rd853;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6042,%dummy}, %rd848;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6043}, %rd848;
	}
	shf.r.wrap.b32 	%r6044, %r6043, %r6042, 14;
	shf.r.wrap.b32 	%r6045, %r6042, %r6043, 14;
	mov.b64 	%rd860, {%r6045, %r6044};
	shf.r.wrap.b32 	%r6046, %r6043, %r6042, 18;
	shf.r.wrap.b32 	%r6047, %r6042, %r6043, 18;
	mov.b64 	%rd861, {%r6047, %r6046};
	xor.b64  	%rd862, %rd861, %rd860;
	shf.l.wrap.b32 	%r6048, %r6042, %r6043, 23;
	shf.l.wrap.b32 	%r6049, %r6043, %r6042, 23;
	mov.b64 	%rd863, {%r6049, %r6048};
	xor.b64  	%rd864, %rd862, %rd863;
	xor.b64  	%rd865, %rd823, %rd798;
	and.b64  	%rd866, %rd848, %rd865;
	xor.b64  	%rd867, %rd866, %rd798;
	add.s64 	%rd868, %rd773, %rd580;
	ld.const.u64 	%rd869, [k_sha512+184];
	add.s64 	%rd870, %rd868, %rd869;
	add.s64 	%rd871, %rd870, %rd867;
	add.s64 	%rd872, %rd871, %rd864;
	add.s64 	%rd873, %rd872, %rd784;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6050,%dummy}, %rd859;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6051}, %rd859;
	}
	shf.r.wrap.b32 	%r6052, %r6051, %r6050, 28;
	shf.r.wrap.b32 	%r6053, %r6050, %r6051, 28;
	mov.b64 	%rd874, {%r6053, %r6052};
	shf.l.wrap.b32 	%r6054, %r6050, %r6051, 30;
	shf.l.wrap.b32 	%r6055, %r6051, %r6050, 30;
	mov.b64 	%rd875, {%r6055, %r6054};
	xor.b64  	%rd876, %rd875, %rd874;
	shf.l.wrap.b32 	%r6056, %r6050, %r6051, 25;
	shf.l.wrap.b32 	%r6057, %r6051, %r6050, 25;
	mov.b64 	%rd877, {%r6057, %r6056};
	xor.b64  	%rd878, %rd876, %rd877;
	xor.b64  	%rd879, %rd859, %rd809;
	xor.b64  	%rd880, %rd859, %rd834;
	and.b64  	%rd881, %rd880, %rd879;
	xor.b64  	%rd882, %rd881, %rd859;
	add.s64 	%rd883, %rd872, %rd882;
	add.s64 	%rd884, %rd883, %rd878;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6058,%dummy}, %rd873;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6059}, %rd873;
	}
	shf.r.wrap.b32 	%r6060, %r6059, %r6058, 14;
	shf.r.wrap.b32 	%r6061, %r6058, %r6059, 14;
	mov.b64 	%rd885, {%r6061, %r6060};
	shf.r.wrap.b32 	%r6062, %r6059, %r6058, 18;
	shf.r.wrap.b32 	%r6063, %r6058, %r6059, 18;
	mov.b64 	%rd886, {%r6063, %r6062};
	xor.b64  	%rd887, %rd886, %rd885;
	shf.l.wrap.b32 	%r6064, %r6058, %r6059, 23;
	shf.l.wrap.b32 	%r6065, %r6059, %r6058, 23;
	mov.b64 	%rd888, {%r6065, %r6064};
	xor.b64  	%rd889, %rd887, %rd888;
	xor.b64  	%rd890, %rd848, %rd823;
	and.b64  	%rd891, %rd873, %rd890;
	xor.b64  	%rd892, %rd891, %rd823;
	add.s64 	%rd893, %rd798, %rd593;
	ld.const.u64 	%rd894, [k_sha512+192];
	add.s64 	%rd895, %rd893, %rd894;
	add.s64 	%rd896, %rd895, %rd892;
	add.s64 	%rd897, %rd896, %rd889;
	add.s64 	%rd898, %rd897, %rd809;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6066,%dummy}, %rd884;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6067}, %rd884;
	}
	shf.r.wrap.b32 	%r6068, %r6067, %r6066, 28;
	shf.r.wrap.b32 	%r6069, %r6066, %r6067, 28;
	mov.b64 	%rd899, {%r6069, %r6068};
	shf.l.wrap.b32 	%r6070, %r6066, %r6067, 30;
	shf.l.wrap.b32 	%r6071, %r6067, %r6066, 30;
	mov.b64 	%rd900, {%r6071, %r6070};
	xor.b64  	%rd901, %rd900, %rd899;
	shf.l.wrap.b32 	%r6072, %r6066, %r6067, 25;
	shf.l.wrap.b32 	%r6073, %r6067, %r6066, 25;
	mov.b64 	%rd902, {%r6073, %r6072};
	xor.b64  	%rd903, %rd901, %rd902;
	xor.b64  	%rd904, %rd884, %rd834;
	xor.b64  	%rd905, %rd884, %rd859;
	and.b64  	%rd906, %rd905, %rd904;
	xor.b64  	%rd907, %rd906, %rd884;
	add.s64 	%rd908, %rd897, %rd907;
	add.s64 	%rd909, %rd908, %rd903;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6074,%dummy}, %rd898;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6075}, %rd898;
	}
	shf.r.wrap.b32 	%r6076, %r6075, %r6074, 14;
	shf.r.wrap.b32 	%r6077, %r6074, %r6075, 14;
	mov.b64 	%rd910, {%r6077, %r6076};
	shf.r.wrap.b32 	%r6078, %r6075, %r6074, 18;
	shf.r.wrap.b32 	%r6079, %r6074, %r6075, 18;
	mov.b64 	%rd911, {%r6079, %r6078};
	xor.b64  	%rd912, %rd911, %rd910;
	shf.l.wrap.b32 	%r6080, %r6074, %r6075, 23;
	shf.l.wrap.b32 	%r6081, %r6075, %r6074, 23;
	mov.b64 	%rd913, {%r6081, %r6080};
	xor.b64  	%rd914, %rd912, %rd913;
	xor.b64  	%rd915, %rd873, %rd848;
	and.b64  	%rd916, %rd898, %rd915;
	xor.b64  	%rd917, %rd916, %rd848;
	add.s64 	%rd918, %rd823, %rd606;
	ld.const.u64 	%rd919, [k_sha512+200];
	add.s64 	%rd920, %rd918, %rd919;
	add.s64 	%rd921, %rd920, %rd917;
	add.s64 	%rd922, %rd921, %rd914;
	add.s64 	%rd923, %rd922, %rd834;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6082,%dummy}, %rd909;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6083}, %rd909;
	}
	shf.r.wrap.b32 	%r6084, %r6083, %r6082, 28;
	shf.r.wrap.b32 	%r6085, %r6082, %r6083, 28;
	mov.b64 	%rd924, {%r6085, %r6084};
	shf.l.wrap.b32 	%r6086, %r6082, %r6083, 30;
	shf.l.wrap.b32 	%r6087, %r6083, %r6082, 30;
	mov.b64 	%rd925, {%r6087, %r6086};
	xor.b64  	%rd926, %rd925, %rd924;
	shf.l.wrap.b32 	%r6088, %r6082, %r6083, 25;
	shf.l.wrap.b32 	%r6089, %r6083, %r6082, 25;
	mov.b64 	%rd927, {%r6089, %r6088};
	xor.b64  	%rd928, %rd926, %rd927;
	xor.b64  	%rd929, %rd909, %rd859;
	xor.b64  	%rd930, %rd909, %rd884;
	and.b64  	%rd931, %rd930, %rd929;
	xor.b64  	%rd932, %rd931, %rd909;
	add.s64 	%rd933, %rd922, %rd932;
	add.s64 	%rd934, %rd933, %rd928;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6090,%dummy}, %rd923;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6091}, %rd923;
	}
	shf.r.wrap.b32 	%r6092, %r6091, %r6090, 14;
	shf.r.wrap.b32 	%r6093, %r6090, %r6091, 14;
	mov.b64 	%rd935, {%r6093, %r6092};
	shf.r.wrap.b32 	%r6094, %r6091, %r6090, 18;
	shf.r.wrap.b32 	%r6095, %r6090, %r6091, 18;
	mov.b64 	%rd936, {%r6095, %r6094};
	xor.b64  	%rd937, %rd936, %rd935;
	shf.l.wrap.b32 	%r6096, %r6090, %r6091, 23;
	shf.l.wrap.b32 	%r6097, %r6091, %r6090, 23;
	mov.b64 	%rd938, {%r6097, %r6096};
	xor.b64  	%rd939, %rd937, %rd938;
	xor.b64  	%rd940, %rd898, %rd873;
	and.b64  	%rd941, %rd923, %rd940;
	xor.b64  	%rd942, %rd941, %rd873;
	add.s64 	%rd943, %rd848, %rd619;
	ld.const.u64 	%rd944, [k_sha512+208];
	add.s64 	%rd945, %rd943, %rd944;
	add.s64 	%rd946, %rd945, %rd942;
	add.s64 	%rd947, %rd946, %rd939;
	add.s64 	%rd948, %rd947, %rd859;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6098,%dummy}, %rd934;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6099}, %rd934;
	}
	shf.r.wrap.b32 	%r6100, %r6099, %r6098, 28;
	shf.r.wrap.b32 	%r6101, %r6098, %r6099, 28;
	mov.b64 	%rd949, {%r6101, %r6100};
	shf.l.wrap.b32 	%r6102, %r6098, %r6099, 30;
	shf.l.wrap.b32 	%r6103, %r6099, %r6098, 30;
	mov.b64 	%rd950, {%r6103, %r6102};
	xor.b64  	%rd951, %rd950, %rd949;
	shf.l.wrap.b32 	%r6104, %r6098, %r6099, 25;
	shf.l.wrap.b32 	%r6105, %r6099, %r6098, 25;
	mov.b64 	%rd952, {%r6105, %r6104};
	xor.b64  	%rd953, %rd951, %rd952;
	xor.b64  	%rd954, %rd934, %rd884;
	xor.b64  	%rd955, %rd934, %rd909;
	and.b64  	%rd956, %rd955, %rd954;
	xor.b64  	%rd957, %rd956, %rd934;
	add.s64 	%rd958, %rd947, %rd957;
	add.s64 	%rd959, %rd958, %rd953;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6106,%dummy}, %rd948;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6107}, %rd948;
	}
	shf.r.wrap.b32 	%r6108, %r6107, %r6106, 14;
	shf.r.wrap.b32 	%r6109, %r6106, %r6107, 14;
	mov.b64 	%rd960, {%r6109, %r6108};
	shf.r.wrap.b32 	%r6110, %r6107, %r6106, 18;
	shf.r.wrap.b32 	%r6111, %r6106, %r6107, 18;
	mov.b64 	%rd961, {%r6111, %r6110};
	xor.b64  	%rd962, %rd961, %rd960;
	shf.l.wrap.b32 	%r6112, %r6106, %r6107, 23;
	shf.l.wrap.b32 	%r6113, %r6107, %r6106, 23;
	mov.b64 	%rd963, {%r6113, %r6112};
	xor.b64  	%rd964, %rd962, %rd963;
	xor.b64  	%rd965, %rd923, %rd898;
	and.b64  	%rd966, %rd948, %rd965;
	xor.b64  	%rd967, %rd966, %rd898;
	add.s64 	%rd968, %rd873, %rd632;
	ld.const.u64 	%rd969, [k_sha512+216];
	add.s64 	%rd970, %rd968, %rd969;
	add.s64 	%rd971, %rd970, %rd967;
	add.s64 	%rd972, %rd971, %rd964;
	add.s64 	%rd973, %rd972, %rd884;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6114,%dummy}, %rd959;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6115}, %rd959;
	}
	shf.r.wrap.b32 	%r6116, %r6115, %r6114, 28;
	shf.r.wrap.b32 	%r6117, %r6114, %r6115, 28;
	mov.b64 	%rd974, {%r6117, %r6116};
	shf.l.wrap.b32 	%r6118, %r6114, %r6115, 30;
	shf.l.wrap.b32 	%r6119, %r6115, %r6114, 30;
	mov.b64 	%rd975, {%r6119, %r6118};
	xor.b64  	%rd976, %rd975, %rd974;
	shf.l.wrap.b32 	%r6120, %r6114, %r6115, 25;
	shf.l.wrap.b32 	%r6121, %r6115, %r6114, 25;
	mov.b64 	%rd977, {%r6121, %r6120};
	xor.b64  	%rd978, %rd976, %rd977;
	xor.b64  	%rd979, %rd959, %rd909;
	xor.b64  	%rd980, %rd959, %rd934;
	and.b64  	%rd981, %rd980, %rd979;
	xor.b64  	%rd982, %rd981, %rd959;
	add.s64 	%rd983, %rd972, %rd982;
	add.s64 	%rd984, %rd983, %rd978;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6122,%dummy}, %rd973;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6123}, %rd973;
	}
	shf.r.wrap.b32 	%r6124, %r6123, %r6122, 14;
	shf.r.wrap.b32 	%r6125, %r6122, %r6123, 14;
	mov.b64 	%rd985, {%r6125, %r6124};
	shf.r.wrap.b32 	%r6126, %r6123, %r6122, 18;
	shf.r.wrap.b32 	%r6127, %r6122, %r6123, 18;
	mov.b64 	%rd986, {%r6127, %r6126};
	xor.b64  	%rd987, %rd986, %rd985;
	shf.l.wrap.b32 	%r6128, %r6122, %r6123, 23;
	shf.l.wrap.b32 	%r6129, %r6123, %r6122, 23;
	mov.b64 	%rd988, {%r6129, %r6128};
	xor.b64  	%rd989, %rd987, %rd988;
	xor.b64  	%rd990, %rd948, %rd923;
	and.b64  	%rd991, %rd973, %rd990;
	xor.b64  	%rd992, %rd991, %rd923;
	add.s64 	%rd993, %rd898, %rd645;
	ld.const.u64 	%rd994, [k_sha512+224];
	add.s64 	%rd995, %rd993, %rd994;
	add.s64 	%rd996, %rd995, %rd992;
	add.s64 	%rd997, %rd996, %rd989;
	add.s64 	%rd998, %rd997, %rd909;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6130,%dummy}, %rd984;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6131}, %rd984;
	}
	shf.r.wrap.b32 	%r6132, %r6131, %r6130, 28;
	shf.r.wrap.b32 	%r6133, %r6130, %r6131, 28;
	mov.b64 	%rd999, {%r6133, %r6132};
	shf.l.wrap.b32 	%r6134, %r6130, %r6131, 30;
	shf.l.wrap.b32 	%r6135, %r6131, %r6130, 30;
	mov.b64 	%rd1000, {%r6135, %r6134};
	xor.b64  	%rd1001, %rd1000, %rd999;
	shf.l.wrap.b32 	%r6136, %r6130, %r6131, 25;
	shf.l.wrap.b32 	%r6137, %r6131, %r6130, 25;
	mov.b64 	%rd1002, {%r6137, %r6136};
	xor.b64  	%rd1003, %rd1001, %rd1002;
	xor.b64  	%rd1004, %rd984, %rd934;
	xor.b64  	%rd1005, %rd984, %rd959;
	and.b64  	%rd1006, %rd1005, %rd1004;
	xor.b64  	%rd1007, %rd1006, %rd984;
	add.s64 	%rd1008, %rd997, %rd1007;
	add.s64 	%rd1009, %rd1008, %rd1003;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6138,%dummy}, %rd998;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6139}, %rd998;
	}
	shf.r.wrap.b32 	%r6140, %r6139, %r6138, 14;
	shf.r.wrap.b32 	%r6141, %r6138, %r6139, 14;
	mov.b64 	%rd1010, {%r6141, %r6140};
	shf.r.wrap.b32 	%r6142, %r6139, %r6138, 18;
	shf.r.wrap.b32 	%r6143, %r6138, %r6139, 18;
	mov.b64 	%rd1011, {%r6143, %r6142};
	xor.b64  	%rd1012, %rd1011, %rd1010;
	shf.l.wrap.b32 	%r6144, %r6138, %r6139, 23;
	shf.l.wrap.b32 	%r6145, %r6139, %r6138, 23;
	mov.b64 	%rd1013, {%r6145, %r6144};
	xor.b64  	%rd1014, %rd1012, %rd1013;
	xor.b64  	%rd1015, %rd973, %rd948;
	and.b64  	%rd1016, %rd998, %rd1015;
	xor.b64  	%rd1017, %rd1016, %rd948;
	add.s64 	%rd1018, %rd923, %rd658;
	ld.const.u64 	%rd1019, [k_sha512+232];
	add.s64 	%rd1020, %rd1018, %rd1019;
	add.s64 	%rd1021, %rd1020, %rd1017;
	add.s64 	%rd1022, %rd1021, %rd1014;
	add.s64 	%rd1023, %rd1022, %rd934;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6146,%dummy}, %rd1009;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6147}, %rd1009;
	}
	shf.r.wrap.b32 	%r6148, %r6147, %r6146, 28;
	shf.r.wrap.b32 	%r6149, %r6146, %r6147, 28;
	mov.b64 	%rd1024, {%r6149, %r6148};
	shf.l.wrap.b32 	%r6150, %r6146, %r6147, 30;
	shf.l.wrap.b32 	%r6151, %r6147, %r6146, 30;
	mov.b64 	%rd1025, {%r6151, %r6150};
	xor.b64  	%rd1026, %rd1025, %rd1024;
	shf.l.wrap.b32 	%r6152, %r6146, %r6147, 25;
	shf.l.wrap.b32 	%r6153, %r6147, %r6146, 25;
	mov.b64 	%rd1027, {%r6153, %r6152};
	xor.b64  	%rd1028, %rd1026, %rd1027;
	xor.b64  	%rd1029, %rd1009, %rd959;
	xor.b64  	%rd1030, %rd1009, %rd984;
	and.b64  	%rd1031, %rd1030, %rd1029;
	xor.b64  	%rd1032, %rd1031, %rd1009;
	add.s64 	%rd1033, %rd1022, %rd1032;
	add.s64 	%rd1034, %rd1033, %rd1028;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6154,%dummy}, %rd1023;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6155}, %rd1023;
	}
	shf.r.wrap.b32 	%r6156, %r6155, %r6154, 14;
	shf.r.wrap.b32 	%r6157, %r6154, %r6155, 14;
	mov.b64 	%rd1035, {%r6157, %r6156};
	shf.r.wrap.b32 	%r6158, %r6155, %r6154, 18;
	shf.r.wrap.b32 	%r6159, %r6154, %r6155, 18;
	mov.b64 	%rd1036, {%r6159, %r6158};
	xor.b64  	%rd1037, %rd1036, %rd1035;
	shf.l.wrap.b32 	%r6160, %r6154, %r6155, 23;
	shf.l.wrap.b32 	%r6161, %r6155, %r6154, 23;
	mov.b64 	%rd1038, {%r6161, %r6160};
	xor.b64  	%rd1039, %rd1037, %rd1038;
	xor.b64  	%rd1040, %rd998, %rd973;
	and.b64  	%rd1041, %rd1023, %rd1040;
	xor.b64  	%rd1042, %rd1041, %rd973;
	add.s64 	%rd1043, %rd948, %rd671;
	ld.const.u64 	%rd1044, [k_sha512+240];
	add.s64 	%rd1045, %rd1043, %rd1044;
	add.s64 	%rd1046, %rd1045, %rd1042;
	add.s64 	%rd1047, %rd1046, %rd1039;
	add.s64 	%rd1048, %rd1047, %rd959;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6162,%dummy}, %rd1034;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6163}, %rd1034;
	}
	shf.r.wrap.b32 	%r6164, %r6163, %r6162, 28;
	shf.r.wrap.b32 	%r6165, %r6162, %r6163, 28;
	mov.b64 	%rd1049, {%r6165, %r6164};
	shf.l.wrap.b32 	%r6166, %r6162, %r6163, 30;
	shf.l.wrap.b32 	%r6167, %r6163, %r6162, 30;
	mov.b64 	%rd1050, {%r6167, %r6166};
	xor.b64  	%rd1051, %rd1050, %rd1049;
	shf.l.wrap.b32 	%r6168, %r6162, %r6163, 25;
	shf.l.wrap.b32 	%r6169, %r6163, %r6162, 25;
	mov.b64 	%rd1052, {%r6169, %r6168};
	xor.b64  	%rd1053, %rd1051, %rd1052;
	xor.b64  	%rd1054, %rd1034, %rd984;
	xor.b64  	%rd1055, %rd1034, %rd1009;
	and.b64  	%rd1056, %rd1055, %rd1054;
	xor.b64  	%rd1057, %rd1056, %rd1034;
	add.s64 	%rd1058, %rd1047, %rd1057;
	add.s64 	%rd1059, %rd1058, %rd1053;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6170,%dummy}, %rd1048;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6171}, %rd1048;
	}
	shf.r.wrap.b32 	%r6172, %r6171, %r6170, 14;
	shf.r.wrap.b32 	%r6173, %r6170, %r6171, 14;
	mov.b64 	%rd1060, {%r6173, %r6172};
	shf.r.wrap.b32 	%r6174, %r6171, %r6170, 18;
	shf.r.wrap.b32 	%r6175, %r6170, %r6171, 18;
	mov.b64 	%rd1061, {%r6175, %r6174};
	xor.b64  	%rd1062, %rd1061, %rd1060;
	shf.l.wrap.b32 	%r6176, %r6170, %r6171, 23;
	shf.l.wrap.b32 	%r6177, %r6171, %r6170, 23;
	mov.b64 	%rd1063, {%r6177, %r6176};
	xor.b64  	%rd1064, %rd1062, %rd1063;
	xor.b64  	%rd1065, %rd1023, %rd998;
	and.b64  	%rd1066, %rd1048, %rd1065;
	xor.b64  	%rd1067, %rd1066, %rd998;
	add.s64 	%rd1068, %rd973, %rd684;
	ld.const.u64 	%rd1069, [k_sha512+248];
	add.s64 	%rd1070, %rd1068, %rd1069;
	add.s64 	%rd1071, %rd1070, %rd1067;
	add.s64 	%rd1072, %rd1071, %rd1064;
	add.s64 	%rd1073, %rd1072, %rd984;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6178,%dummy}, %rd1059;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6179}, %rd1059;
	}
	shf.r.wrap.b32 	%r6180, %r6179, %r6178, 28;
	shf.r.wrap.b32 	%r6181, %r6178, %r6179, 28;
	mov.b64 	%rd1074, {%r6181, %r6180};
	shf.l.wrap.b32 	%r6182, %r6178, %r6179, 30;
	shf.l.wrap.b32 	%r6183, %r6179, %r6178, 30;
	mov.b64 	%rd1075, {%r6183, %r6182};
	xor.b64  	%rd1076, %rd1075, %rd1074;
	shf.l.wrap.b32 	%r6184, %r6178, %r6179, 25;
	shf.l.wrap.b32 	%r6185, %r6179, %r6178, 25;
	mov.b64 	%rd1077, {%r6185, %r6184};
	xor.b64  	%rd1078, %rd1076, %rd1077;
	xor.b64  	%rd1079, %rd1059, %rd1009;
	xor.b64  	%rd1080, %rd1059, %rd1034;
	and.b64  	%rd1081, %rd1080, %rd1079;
	xor.b64  	%rd1082, %rd1081, %rd1059;
	add.s64 	%rd1083, %rd1072, %rd1082;
	add.s64 	%rd1084, %rd1083, %rd1078;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6186,%dummy}, %rd671;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6187}, %rd671;
	}
	shf.r.wrap.b32 	%r6188, %r6187, %r6186, 19;
	shf.r.wrap.b32 	%r6189, %r6186, %r6187, 19;
	mov.b64 	%rd1085, {%r6189, %r6188};
	shf.l.wrap.b32 	%r6190, %r6186, %r6187, 3;
	shf.l.wrap.b32 	%r6191, %r6187, %r6186, 3;
	mov.b64 	%rd1086, {%r6191, %r6190};
	shr.u64 	%rd1087, %rd671, 6;
	xor.b64  	%rd1088, %rd1085, %rd1087;
	xor.b64  	%rd1089, %rd1088, %rd1086;
	shf.r.wrap.b32 	%r6192, %r5781, %r5780, 1;
	shf.r.wrap.b32 	%r6193, %r5780, %r5781, 1;
	mov.b64 	%rd1090, {%r6193, %r6192};
	shf.r.wrap.b32 	%r6194, %r5781, %r5780, 8;
	shf.r.wrap.b32 	%r6195, %r5780, %r5781, 8;
	mov.b64 	%rd1091, {%r6195, %r6194};
	shr.u64 	%rd1092, %rd502, 7;
	xor.b64  	%rd1093, %rd1090, %rd1092;
	xor.b64  	%rd1094, %rd1093, %rd1091;
	add.s64 	%rd1095, %rd606, %rd489;
	add.s64 	%rd1096, %rd1095, %rd1089;
	add.s64 	%rd1097, %rd1096, %rd1094;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6196,%dummy}, %rd684;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6197}, %rd684;
	}
	shf.r.wrap.b32 	%r6198, %r6197, %r6196, 19;
	shf.r.wrap.b32 	%r6199, %r6196, %r6197, 19;
	mov.b64 	%rd1098, {%r6199, %r6198};
	shf.l.wrap.b32 	%r6200, %r6196, %r6197, 3;
	shf.l.wrap.b32 	%r6201, %r6197, %r6196, 3;
	mov.b64 	%rd1099, {%r6201, %r6200};
	shr.u64 	%rd1100, %rd684, 6;
	xor.b64  	%rd1101, %rd1098, %rd1100;
	xor.b64  	%rd1102, %rd1101, %rd1099;
	shf.r.wrap.b32 	%r6202, %r5793, %r5792, 1;
	shf.r.wrap.b32 	%r6203, %r5792, %r5793, 1;
	mov.b64 	%rd1103, {%r6203, %r6202};
	shf.r.wrap.b32 	%r6204, %r5793, %r5792, 8;
	shf.r.wrap.b32 	%r6205, %r5792, %r5793, 8;
	mov.b64 	%rd1104, {%r6205, %r6204};
	shr.u64 	%rd1105, %rd515, 7;
	xor.b64  	%rd1106, %rd1103, %rd1105;
	xor.b64  	%rd1107, %rd1106, %rd1104;
	add.s64 	%rd1108, %rd619, %rd502;
	add.s64 	%rd1109, %rd1108, %rd1102;
	add.s64 	%rd1110, %rd1109, %rd1107;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6206,%dummy}, %rd1097;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6207}, %rd1097;
	}
	shf.r.wrap.b32 	%r6208, %r6207, %r6206, 19;
	shf.r.wrap.b32 	%r6209, %r6206, %r6207, 19;
	mov.b64 	%rd1111, {%r6209, %r6208};
	shf.l.wrap.b32 	%r6210, %r6206, %r6207, 3;
	shf.l.wrap.b32 	%r6211, %r6207, %r6206, 3;
	mov.b64 	%rd1112, {%r6211, %r6210};
	shr.u64 	%rd1113, %rd1097, 6;
	xor.b64  	%rd1114, %rd1111, %rd1113;
	xor.b64  	%rd1115, %rd1114, %rd1112;
	shf.r.wrap.b32 	%r6212, %r5805, %r5804, 1;
	shf.r.wrap.b32 	%r6213, %r5804, %r5805, 1;
	mov.b64 	%rd1116, {%r6213, %r6212};
	shf.r.wrap.b32 	%r6214, %r5805, %r5804, 8;
	shf.r.wrap.b32 	%r6215, %r5804, %r5805, 8;
	mov.b64 	%rd1117, {%r6215, %r6214};
	shr.u64 	%rd1118, %rd528, 7;
	xor.b64  	%rd1119, %rd1116, %rd1118;
	xor.b64  	%rd1120, %rd1119, %rd1117;
	add.s64 	%rd1121, %rd632, %rd515;
	add.s64 	%rd1122, %rd1121, %rd1115;
	add.s64 	%rd1123, %rd1122, %rd1120;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6216,%dummy}, %rd1110;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6217}, %rd1110;
	}
	shf.r.wrap.b32 	%r6218, %r6217, %r6216, 19;
	shf.r.wrap.b32 	%r6219, %r6216, %r6217, 19;
	mov.b64 	%rd1124, {%r6219, %r6218};
	shf.l.wrap.b32 	%r6220, %r6216, %r6217, 3;
	shf.l.wrap.b32 	%r6221, %r6217, %r6216, 3;
	mov.b64 	%rd1125, {%r6221, %r6220};
	shr.u64 	%rd1126, %rd1110, 6;
	xor.b64  	%rd1127, %rd1124, %rd1126;
	xor.b64  	%rd1128, %rd1127, %rd1125;
	shf.r.wrap.b32 	%r6222, %r5817, %r5816, 1;
	shf.r.wrap.b32 	%r6223, %r5816, %r5817, 1;
	mov.b64 	%rd1129, {%r6223, %r6222};
	shf.r.wrap.b32 	%r6224, %r5817, %r5816, 8;
	shf.r.wrap.b32 	%r6225, %r5816, %r5817, 8;
	mov.b64 	%rd1130, {%r6225, %r6224};
	shr.u64 	%rd1131, %rd541, 7;
	xor.b64  	%rd1132, %rd1129, %rd1131;
	xor.b64  	%rd1133, %rd1132, %rd1130;
	add.s64 	%rd1134, %rd645, %rd528;
	add.s64 	%rd1135, %rd1134, %rd1128;
	add.s64 	%rd1136, %rd1135, %rd1133;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6226,%dummy}, %rd1123;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6227}, %rd1123;
	}
	shf.r.wrap.b32 	%r6228, %r6227, %r6226, 19;
	shf.r.wrap.b32 	%r6229, %r6226, %r6227, 19;
	mov.b64 	%rd1137, {%r6229, %r6228};
	shf.l.wrap.b32 	%r6230, %r6226, %r6227, 3;
	shf.l.wrap.b32 	%r6231, %r6227, %r6226, 3;
	mov.b64 	%rd1138, {%r6231, %r6230};
	shr.u64 	%rd1139, %rd1123, 6;
	xor.b64  	%rd1140, %rd1137, %rd1139;
	xor.b64  	%rd1141, %rd1140, %rd1138;
	shf.r.wrap.b32 	%r6232, %r5829, %r5828, 1;
	shf.r.wrap.b32 	%r6233, %r5828, %r5829, 1;
	mov.b64 	%rd1142, {%r6233, %r6232};
	shf.r.wrap.b32 	%r6234, %r5829, %r5828, 8;
	shf.r.wrap.b32 	%r6235, %r5828, %r5829, 8;
	mov.b64 	%rd1143, {%r6235, %r6234};
	shr.u64 	%rd1144, %rd554, 7;
	xor.b64  	%rd1145, %rd1142, %rd1144;
	xor.b64  	%rd1146, %rd1145, %rd1143;
	add.s64 	%rd1147, %rd658, %rd541;
	add.s64 	%rd1148, %rd1147, %rd1141;
	add.s64 	%rd1149, %rd1148, %rd1146;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6236,%dummy}, %rd1136;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6237}, %rd1136;
	}
	shf.r.wrap.b32 	%r6238, %r6237, %r6236, 19;
	shf.r.wrap.b32 	%r6239, %r6236, %r6237, 19;
	mov.b64 	%rd1150, {%r6239, %r6238};
	shf.l.wrap.b32 	%r6240, %r6236, %r6237, 3;
	shf.l.wrap.b32 	%r6241, %r6237, %r6236, 3;
	mov.b64 	%rd1151, {%r6241, %r6240};
	shr.u64 	%rd1152, %rd1136, 6;
	xor.b64  	%rd1153, %rd1150, %rd1152;
	xor.b64  	%rd1154, %rd1153, %rd1151;
	shf.r.wrap.b32 	%r6242, %r5841, %r5840, 1;
	shf.r.wrap.b32 	%r6243, %r5840, %r5841, 1;
	mov.b64 	%rd1155, {%r6243, %r6242};
	shf.r.wrap.b32 	%r6244, %r5841, %r5840, 8;
	shf.r.wrap.b32 	%r6245, %r5840, %r5841, 8;
	mov.b64 	%rd1156, {%r6245, %r6244};
	shr.u64 	%rd1157, %rd567, 7;
	xor.b64  	%rd1158, %rd1155, %rd1157;
	xor.b64  	%rd1159, %rd1158, %rd1156;
	add.s64 	%rd1160, %rd671, %rd554;
	add.s64 	%rd1161, %rd1160, %rd1154;
	add.s64 	%rd1162, %rd1161, %rd1159;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6246,%dummy}, %rd1149;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6247}, %rd1149;
	}
	shf.r.wrap.b32 	%r6248, %r6247, %r6246, 19;
	shf.r.wrap.b32 	%r6249, %r6246, %r6247, 19;
	mov.b64 	%rd1163, {%r6249, %r6248};
	shf.l.wrap.b32 	%r6250, %r6246, %r6247, 3;
	shf.l.wrap.b32 	%r6251, %r6247, %r6246, 3;
	mov.b64 	%rd1164, {%r6251, %r6250};
	shr.u64 	%rd1165, %rd1149, 6;
	xor.b64  	%rd1166, %rd1163, %rd1165;
	xor.b64  	%rd1167, %rd1166, %rd1164;
	shf.r.wrap.b32 	%r6252, %r5853, %r5852, 1;
	shf.r.wrap.b32 	%r6253, %r5852, %r5853, 1;
	mov.b64 	%rd1168, {%r6253, %r6252};
	shf.r.wrap.b32 	%r6254, %r5853, %r5852, 8;
	shf.r.wrap.b32 	%r6255, %r5852, %r5853, 8;
	mov.b64 	%rd1169, {%r6255, %r6254};
	shr.u64 	%rd1170, %rd580, 7;
	xor.b64  	%rd1171, %rd1168, %rd1170;
	xor.b64  	%rd1172, %rd1171, %rd1169;
	add.s64 	%rd1173, %rd684, %rd567;
	add.s64 	%rd1174, %rd1173, %rd1167;
	add.s64 	%rd1175, %rd1174, %rd1172;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6256,%dummy}, %rd1162;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6257}, %rd1162;
	}
	shf.r.wrap.b32 	%r6258, %r6257, %r6256, 19;
	shf.r.wrap.b32 	%r6259, %r6256, %r6257, 19;
	mov.b64 	%rd1176, {%r6259, %r6258};
	shf.l.wrap.b32 	%r6260, %r6256, %r6257, 3;
	shf.l.wrap.b32 	%r6261, %r6257, %r6256, 3;
	mov.b64 	%rd1177, {%r6261, %r6260};
	shr.u64 	%rd1178, %rd1162, 6;
	xor.b64  	%rd1179, %rd1176, %rd1178;
	xor.b64  	%rd1180, %rd1179, %rd1177;
	shf.r.wrap.b32 	%r6262, %r5865, %r5864, 1;
	shf.r.wrap.b32 	%r6263, %r5864, %r5865, 1;
	mov.b64 	%rd1181, {%r6263, %r6262};
	shf.r.wrap.b32 	%r6264, %r5865, %r5864, 8;
	shf.r.wrap.b32 	%r6265, %r5864, %r5865, 8;
	mov.b64 	%rd1182, {%r6265, %r6264};
	shr.u64 	%rd1183, %rd593, 7;
	xor.b64  	%rd1184, %rd1181, %rd1183;
	xor.b64  	%rd1185, %rd1184, %rd1182;
	add.s64 	%rd1186, %rd1097, %rd580;
	add.s64 	%rd1187, %rd1186, %rd1180;
	add.s64 	%rd1188, %rd1187, %rd1185;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6266,%dummy}, %rd1175;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6267}, %rd1175;
	}
	shf.r.wrap.b32 	%r6268, %r6267, %r6266, 19;
	shf.r.wrap.b32 	%r6269, %r6266, %r6267, 19;
	mov.b64 	%rd1189, {%r6269, %r6268};
	shf.l.wrap.b32 	%r6270, %r6266, %r6267, 3;
	shf.l.wrap.b32 	%r6271, %r6267, %r6266, 3;
	mov.b64 	%rd1190, {%r6271, %r6270};
	shr.u64 	%rd1191, %rd1175, 6;
	xor.b64  	%rd1192, %rd1189, %rd1191;
	xor.b64  	%rd1193, %rd1192, %rd1190;
	shf.r.wrap.b32 	%r6272, %r5877, %r5876, 1;
	shf.r.wrap.b32 	%r6273, %r5876, %r5877, 1;
	mov.b64 	%rd1194, {%r6273, %r6272};
	shf.r.wrap.b32 	%r6274, %r5877, %r5876, 8;
	shf.r.wrap.b32 	%r6275, %r5876, %r5877, 8;
	mov.b64 	%rd1195, {%r6275, %r6274};
	shr.u64 	%rd1196, %rd606, 7;
	xor.b64  	%rd1197, %rd1194, %rd1196;
	xor.b64  	%rd1198, %rd1197, %rd1195;
	add.s64 	%rd1199, %rd1110, %rd593;
	add.s64 	%rd1200, %rd1199, %rd1193;
	add.s64 	%rd1201, %rd1200, %rd1198;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6276,%dummy}, %rd1188;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6277}, %rd1188;
	}
	shf.r.wrap.b32 	%r6278, %r6277, %r6276, 19;
	shf.r.wrap.b32 	%r6279, %r6276, %r6277, 19;
	mov.b64 	%rd1202, {%r6279, %r6278};
	shf.l.wrap.b32 	%r6280, %r6276, %r6277, 3;
	shf.l.wrap.b32 	%r6281, %r6277, %r6276, 3;
	mov.b64 	%rd1203, {%r6281, %r6280};
	shr.u64 	%rd1204, %rd1188, 6;
	xor.b64  	%rd1205, %rd1202, %rd1204;
	xor.b64  	%rd1206, %rd1205, %rd1203;
	shf.r.wrap.b32 	%r6282, %r5889, %r5888, 1;
	shf.r.wrap.b32 	%r6283, %r5888, %r5889, 1;
	mov.b64 	%rd1207, {%r6283, %r6282};
	shf.r.wrap.b32 	%r6284, %r5889, %r5888, 8;
	shf.r.wrap.b32 	%r6285, %r5888, %r5889, 8;
	mov.b64 	%rd1208, {%r6285, %r6284};
	shr.u64 	%rd1209, %rd619, 7;
	xor.b64  	%rd1210, %rd1207, %rd1209;
	xor.b64  	%rd1211, %rd1210, %rd1208;
	add.s64 	%rd1212, %rd1123, %rd606;
	add.s64 	%rd1213, %rd1212, %rd1206;
	add.s64 	%rd1214, %rd1213, %rd1211;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6286,%dummy}, %rd1201;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6287}, %rd1201;
	}
	shf.r.wrap.b32 	%r6288, %r6287, %r6286, 19;
	shf.r.wrap.b32 	%r6289, %r6286, %r6287, 19;
	mov.b64 	%rd1215, {%r6289, %r6288};
	shf.l.wrap.b32 	%r6290, %r6286, %r6287, 3;
	shf.l.wrap.b32 	%r6291, %r6287, %r6286, 3;
	mov.b64 	%rd1216, {%r6291, %r6290};
	shr.u64 	%rd1217, %rd1201, 6;
	xor.b64  	%rd1218, %rd1215, %rd1217;
	xor.b64  	%rd1219, %rd1218, %rd1216;
	shf.r.wrap.b32 	%r6292, %r5901, %r5900, 1;
	shf.r.wrap.b32 	%r6293, %r5900, %r5901, 1;
	mov.b64 	%rd1220, {%r6293, %r6292};
	shf.r.wrap.b32 	%r6294, %r5901, %r5900, 8;
	shf.r.wrap.b32 	%r6295, %r5900, %r5901, 8;
	mov.b64 	%rd1221, {%r6295, %r6294};
	shr.u64 	%rd1222, %rd632, 7;
	xor.b64  	%rd1223, %rd1220, %rd1222;
	xor.b64  	%rd1224, %rd1223, %rd1221;
	add.s64 	%rd1225, %rd1136, %rd619;
	add.s64 	%rd1226, %rd1225, %rd1219;
	add.s64 	%rd1227, %rd1226, %rd1224;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6296,%dummy}, %rd1214;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6297}, %rd1214;
	}
	shf.r.wrap.b32 	%r6298, %r6297, %r6296, 19;
	shf.r.wrap.b32 	%r6299, %r6296, %r6297, 19;
	mov.b64 	%rd1228, {%r6299, %r6298};
	shf.l.wrap.b32 	%r6300, %r6296, %r6297, 3;
	shf.l.wrap.b32 	%r6301, %r6297, %r6296, 3;
	mov.b64 	%rd1229, {%r6301, %r6300};
	shr.u64 	%rd1230, %rd1214, 6;
	xor.b64  	%rd1231, %rd1228, %rd1230;
	xor.b64  	%rd1232, %rd1231, %rd1229;
	shf.r.wrap.b32 	%r6302, %r5911, %r5910, 1;
	shf.r.wrap.b32 	%r6303, %r5910, %r5911, 1;
	mov.b64 	%rd1233, {%r6303, %r6302};
	shf.r.wrap.b32 	%r6304, %r5911, %r5910, 8;
	shf.r.wrap.b32 	%r6305, %r5910, %r5911, 8;
	mov.b64 	%rd1234, {%r6305, %r6304};
	shr.u64 	%rd1235, %rd645, 7;
	xor.b64  	%rd1236, %rd1233, %rd1235;
	xor.b64  	%rd1237, %rd1236, %rd1234;
	add.s64 	%rd1238, %rd1149, %rd632;
	add.s64 	%rd1239, %rd1238, %rd1232;
	add.s64 	%rd1240, %rd1239, %rd1237;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6306,%dummy}, %rd1227;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6307}, %rd1227;
	}
	shf.r.wrap.b32 	%r6308, %r6307, %r6306, 19;
	shf.r.wrap.b32 	%r6309, %r6306, %r6307, 19;
	mov.b64 	%rd1241, {%r6309, %r6308};
	shf.l.wrap.b32 	%r6310, %r6306, %r6307, 3;
	shf.l.wrap.b32 	%r6311, %r6307, %r6306, 3;
	mov.b64 	%rd1242, {%r6311, %r6310};
	shr.u64 	%rd1243, %rd1227, 6;
	xor.b64  	%rd1244, %rd1241, %rd1243;
	xor.b64  	%rd1245, %rd1244, %rd1242;
	shf.r.wrap.b32 	%r6312, %r5921, %r5920, 1;
	shf.r.wrap.b32 	%r6313, %r5920, %r5921, 1;
	mov.b64 	%rd1246, {%r6313, %r6312};
	shf.r.wrap.b32 	%r6314, %r5921, %r5920, 8;
	shf.r.wrap.b32 	%r6315, %r5920, %r5921, 8;
	mov.b64 	%rd1247, {%r6315, %r6314};
	shr.u64 	%rd1248, %rd658, 7;
	xor.b64  	%rd1249, %rd1246, %rd1248;
	xor.b64  	%rd1250, %rd1249, %rd1247;
	add.s64 	%rd1251, %rd1162, %rd645;
	add.s64 	%rd1252, %rd1251, %rd1245;
	add.s64 	%rd1253, %rd1252, %rd1250;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6316,%dummy}, %rd1240;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6317}, %rd1240;
	}
	shf.r.wrap.b32 	%r6318, %r6317, %r6316, 19;
	shf.r.wrap.b32 	%r6319, %r6316, %r6317, 19;
	mov.b64 	%rd1254, {%r6319, %r6318};
	shf.l.wrap.b32 	%r6320, %r6316, %r6317, 3;
	shf.l.wrap.b32 	%r6321, %r6317, %r6316, 3;
	mov.b64 	%rd1255, {%r6321, %r6320};
	shr.u64 	%rd1256, %rd1240, 6;
	xor.b64  	%rd1257, %rd1254, %rd1256;
	xor.b64  	%rd1258, %rd1257, %rd1255;
	shf.r.wrap.b32 	%r6322, %r6187, %r6186, 1;
	shf.r.wrap.b32 	%r6323, %r6186, %r6187, 1;
	mov.b64 	%rd1259, {%r6323, %r6322};
	shf.r.wrap.b32 	%r6324, %r6187, %r6186, 8;
	shf.r.wrap.b32 	%r6325, %r6186, %r6187, 8;
	mov.b64 	%rd1260, {%r6325, %r6324};
	shr.u64 	%rd1261, %rd671, 7;
	xor.b64  	%rd1262, %rd1259, %rd1261;
	xor.b64  	%rd1263, %rd1262, %rd1260;
	add.s64 	%rd1264, %rd1175, %rd658;
	add.s64 	%rd1265, %rd1264, %rd1258;
	add.s64 	%rd1266, %rd1265, %rd1263;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6326,%dummy}, %rd1253;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6327}, %rd1253;
	}
	shf.r.wrap.b32 	%r6328, %r6327, %r6326, 19;
	shf.r.wrap.b32 	%r6329, %r6326, %r6327, 19;
	mov.b64 	%rd1267, {%r6329, %r6328};
	shf.l.wrap.b32 	%r6330, %r6326, %r6327, 3;
	shf.l.wrap.b32 	%r6331, %r6327, %r6326, 3;
	mov.b64 	%rd1268, {%r6331, %r6330};
	shr.u64 	%rd1269, %rd1253, 6;
	xor.b64  	%rd1270, %rd1267, %rd1269;
	xor.b64  	%rd1271, %rd1270, %rd1268;
	shf.r.wrap.b32 	%r6332, %r6197, %r6196, 1;
	shf.r.wrap.b32 	%r6333, %r6196, %r6197, 1;
	mov.b64 	%rd1272, {%r6333, %r6332};
	shf.r.wrap.b32 	%r6334, %r6197, %r6196, 8;
	shf.r.wrap.b32 	%r6335, %r6196, %r6197, 8;
	mov.b64 	%rd1273, {%r6335, %r6334};
	shr.u64 	%rd1274, %rd684, 7;
	xor.b64  	%rd1275, %rd1272, %rd1274;
	xor.b64  	%rd1276, %rd1275, %rd1273;
	add.s64 	%rd1277, %rd1188, %rd671;
	add.s64 	%rd1278, %rd1277, %rd1271;
	add.s64 	%rd1279, %rd1278, %rd1276;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6336,%dummy}, %rd1266;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6337}, %rd1266;
	}
	shf.r.wrap.b32 	%r6338, %r6337, %r6336, 19;
	shf.r.wrap.b32 	%r6339, %r6336, %r6337, 19;
	mov.b64 	%rd1280, {%r6339, %r6338};
	shf.l.wrap.b32 	%r6340, %r6336, %r6337, 3;
	shf.l.wrap.b32 	%r6341, %r6337, %r6336, 3;
	mov.b64 	%rd1281, {%r6341, %r6340};
	shr.u64 	%rd1282, %rd1266, 6;
	xor.b64  	%rd1283, %rd1280, %rd1282;
	xor.b64  	%rd1284, %rd1283, %rd1281;
	shf.r.wrap.b32 	%r6342, %r6207, %r6206, 1;
	shf.r.wrap.b32 	%r6343, %r6206, %r6207, 1;
	mov.b64 	%rd1285, {%r6343, %r6342};
	shf.r.wrap.b32 	%r6344, %r6207, %r6206, 8;
	shf.r.wrap.b32 	%r6345, %r6206, %r6207, 8;
	mov.b64 	%rd1286, {%r6345, %r6344};
	shr.u64 	%rd1287, %rd1097, 7;
	xor.b64  	%rd1288, %rd1285, %rd1287;
	xor.b64  	%rd1289, %rd1288, %rd1286;
	add.s64 	%rd1290, %rd1201, %rd684;
	add.s64 	%rd1291, %rd1290, %rd1284;
	add.s64 	%rd1292, %rd1291, %rd1289;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6346,%dummy}, %rd1073;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6347}, %rd1073;
	}
	shf.r.wrap.b32 	%r6348, %r6347, %r6346, 14;
	shf.r.wrap.b32 	%r6349, %r6346, %r6347, 14;
	mov.b64 	%rd1293, {%r6349, %r6348};
	shf.r.wrap.b32 	%r6350, %r6347, %r6346, 18;
	shf.r.wrap.b32 	%r6351, %r6346, %r6347, 18;
	mov.b64 	%rd1294, {%r6351, %r6350};
	xor.b64  	%rd1295, %rd1294, %rd1293;
	shf.l.wrap.b32 	%r6352, %r6346, %r6347, 23;
	shf.l.wrap.b32 	%r6353, %r6347, %r6346, 23;
	mov.b64 	%rd1296, {%r6353, %r6352};
	xor.b64  	%rd1297, %rd1295, %rd1296;
	xor.b64  	%rd1298, %rd1048, %rd1023;
	and.b64  	%rd1299, %rd1298, %rd1073;
	xor.b64  	%rd1300, %rd1299, %rd1023;
	add.s64 	%rd1301, %rd1300, %rd998;
	add.s64 	%rd1302, %rd1301, %rd1097;
	ld.const.u64 	%rd1303, [k_sha512+256];
	add.s64 	%rd1304, %rd1302, %rd1303;
	add.s64 	%rd1305, %rd1304, %rd1297;
	add.s64 	%rd1306, %rd1305, %rd1009;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6354,%dummy}, %rd1084;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6355}, %rd1084;
	}
	shf.r.wrap.b32 	%r6356, %r6355, %r6354, 28;
	shf.r.wrap.b32 	%r6357, %r6354, %r6355, 28;
	mov.b64 	%rd1307, {%r6357, %r6356};
	shf.l.wrap.b32 	%r6358, %r6354, %r6355, 30;
	shf.l.wrap.b32 	%r6359, %r6355, %r6354, 30;
	mov.b64 	%rd1308, {%r6359, %r6358};
	xor.b64  	%rd1309, %rd1308, %rd1307;
	shf.l.wrap.b32 	%r6360, %r6354, %r6355, 25;
	shf.l.wrap.b32 	%r6361, %r6355, %r6354, 25;
	mov.b64 	%rd1310, {%r6361, %r6360};
	xor.b64  	%rd1311, %rd1309, %rd1310;
	xor.b64  	%rd1312, %rd1084, %rd1034;
	xor.b64  	%rd1313, %rd1084, %rd1059;
	and.b64  	%rd1314, %rd1313, %rd1312;
	xor.b64  	%rd1315, %rd1314, %rd1084;
	add.s64 	%rd1316, %rd1305, %rd1315;
	add.s64 	%rd1317, %rd1316, %rd1311;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6362,%dummy}, %rd1306;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6363}, %rd1306;
	}
	shf.r.wrap.b32 	%r6364, %r6363, %r6362, 14;
	shf.r.wrap.b32 	%r6365, %r6362, %r6363, 14;
	mov.b64 	%rd1318, {%r6365, %r6364};
	shf.r.wrap.b32 	%r6366, %r6363, %r6362, 18;
	shf.r.wrap.b32 	%r6367, %r6362, %r6363, 18;
	mov.b64 	%rd1319, {%r6367, %r6366};
	xor.b64  	%rd1320, %rd1319, %rd1318;
	shf.l.wrap.b32 	%r6368, %r6362, %r6363, 23;
	shf.l.wrap.b32 	%r6369, %r6363, %r6362, 23;
	mov.b64 	%rd1321, {%r6369, %r6368};
	xor.b64  	%rd1322, %rd1320, %rd1321;
	xor.b64  	%rd1323, %rd1073, %rd1048;
	and.b64  	%rd1324, %rd1306, %rd1323;
	xor.b64  	%rd1325, %rd1324, %rd1048;
	add.s64 	%rd1326, %rd1110, %rd1023;
	ld.const.u64 	%rd1327, [k_sha512+264];
	add.s64 	%rd1328, %rd1326, %rd1327;
	add.s64 	%rd1329, %rd1328, %rd1325;
	add.s64 	%rd1330, %rd1329, %rd1322;
	add.s64 	%rd1331, %rd1330, %rd1034;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6370,%dummy}, %rd1317;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6371}, %rd1317;
	}
	shf.r.wrap.b32 	%r6372, %r6371, %r6370, 28;
	shf.r.wrap.b32 	%r6373, %r6370, %r6371, 28;
	mov.b64 	%rd1332, {%r6373, %r6372};
	shf.l.wrap.b32 	%r6374, %r6370, %r6371, 30;
	shf.l.wrap.b32 	%r6375, %r6371, %r6370, 30;
	mov.b64 	%rd1333, {%r6375, %r6374};
	xor.b64  	%rd1334, %rd1333, %rd1332;
	shf.l.wrap.b32 	%r6376, %r6370, %r6371, 25;
	shf.l.wrap.b32 	%r6377, %r6371, %r6370, 25;
	mov.b64 	%rd1335, {%r6377, %r6376};
	xor.b64  	%rd1336, %rd1334, %rd1335;
	xor.b64  	%rd1337, %rd1317, %rd1059;
	xor.b64  	%rd1338, %rd1317, %rd1084;
	and.b64  	%rd1339, %rd1338, %rd1337;
	xor.b64  	%rd1340, %rd1339, %rd1317;
	add.s64 	%rd1341, %rd1330, %rd1340;
	add.s64 	%rd1342, %rd1341, %rd1336;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6378,%dummy}, %rd1331;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6379}, %rd1331;
	}
	shf.r.wrap.b32 	%r6380, %r6379, %r6378, 14;
	shf.r.wrap.b32 	%r6381, %r6378, %r6379, 14;
	mov.b64 	%rd1343, {%r6381, %r6380};
	shf.r.wrap.b32 	%r6382, %r6379, %r6378, 18;
	shf.r.wrap.b32 	%r6383, %r6378, %r6379, 18;
	mov.b64 	%rd1344, {%r6383, %r6382};
	xor.b64  	%rd1345, %rd1344, %rd1343;
	shf.l.wrap.b32 	%r6384, %r6378, %r6379, 23;
	shf.l.wrap.b32 	%r6385, %r6379, %r6378, 23;
	mov.b64 	%rd1346, {%r6385, %r6384};
	xor.b64  	%rd1347, %rd1345, %rd1346;
	xor.b64  	%rd1348, %rd1306, %rd1073;
	and.b64  	%rd1349, %rd1331, %rd1348;
	xor.b64  	%rd1350, %rd1349, %rd1073;
	add.s64 	%rd1351, %rd1123, %rd1048;
	ld.const.u64 	%rd1352, [k_sha512+272];
	add.s64 	%rd1353, %rd1351, %rd1352;
	add.s64 	%rd1354, %rd1353, %rd1350;
	add.s64 	%rd1355, %rd1354, %rd1347;
	add.s64 	%rd1356, %rd1355, %rd1059;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6386,%dummy}, %rd1342;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6387}, %rd1342;
	}
	shf.r.wrap.b32 	%r6388, %r6387, %r6386, 28;
	shf.r.wrap.b32 	%r6389, %r6386, %r6387, 28;
	mov.b64 	%rd1357, {%r6389, %r6388};
	shf.l.wrap.b32 	%r6390, %r6386, %r6387, 30;
	shf.l.wrap.b32 	%r6391, %r6387, %r6386, 30;
	mov.b64 	%rd1358, {%r6391, %r6390};
	xor.b64  	%rd1359, %rd1358, %rd1357;
	shf.l.wrap.b32 	%r6392, %r6386, %r6387, 25;
	shf.l.wrap.b32 	%r6393, %r6387, %r6386, 25;
	mov.b64 	%rd1360, {%r6393, %r6392};
	xor.b64  	%rd1361, %rd1359, %rd1360;
	xor.b64  	%rd1362, %rd1342, %rd1084;
	xor.b64  	%rd1363, %rd1342, %rd1317;
	and.b64  	%rd1364, %rd1363, %rd1362;
	xor.b64  	%rd1365, %rd1364, %rd1342;
	add.s64 	%rd1366, %rd1355, %rd1365;
	add.s64 	%rd1367, %rd1366, %rd1361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6394,%dummy}, %rd1356;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6395}, %rd1356;
	}
	shf.r.wrap.b32 	%r6396, %r6395, %r6394, 14;
	shf.r.wrap.b32 	%r6397, %r6394, %r6395, 14;
	mov.b64 	%rd1368, {%r6397, %r6396};
	shf.r.wrap.b32 	%r6398, %r6395, %r6394, 18;
	shf.r.wrap.b32 	%r6399, %r6394, %r6395, 18;
	mov.b64 	%rd1369, {%r6399, %r6398};
	xor.b64  	%rd1370, %rd1369, %rd1368;
	shf.l.wrap.b32 	%r6400, %r6394, %r6395, 23;
	shf.l.wrap.b32 	%r6401, %r6395, %r6394, 23;
	mov.b64 	%rd1371, {%r6401, %r6400};
	xor.b64  	%rd1372, %rd1370, %rd1371;
	xor.b64  	%rd1373, %rd1331, %rd1306;
	and.b64  	%rd1374, %rd1356, %rd1373;
	xor.b64  	%rd1375, %rd1374, %rd1306;
	add.s64 	%rd1376, %rd1136, %rd1073;
	ld.const.u64 	%rd1377, [k_sha512+280];
	add.s64 	%rd1378, %rd1376, %rd1377;
	add.s64 	%rd1379, %rd1378, %rd1375;
	add.s64 	%rd1380, %rd1379, %rd1372;
	add.s64 	%rd1381, %rd1380, %rd1084;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6402,%dummy}, %rd1367;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6403}, %rd1367;
	}
	shf.r.wrap.b32 	%r6404, %r6403, %r6402, 28;
	shf.r.wrap.b32 	%r6405, %r6402, %r6403, 28;
	mov.b64 	%rd1382, {%r6405, %r6404};
	shf.l.wrap.b32 	%r6406, %r6402, %r6403, 30;
	shf.l.wrap.b32 	%r6407, %r6403, %r6402, 30;
	mov.b64 	%rd1383, {%r6407, %r6406};
	xor.b64  	%rd1384, %rd1383, %rd1382;
	shf.l.wrap.b32 	%r6408, %r6402, %r6403, 25;
	shf.l.wrap.b32 	%r6409, %r6403, %r6402, 25;
	mov.b64 	%rd1385, {%r6409, %r6408};
	xor.b64  	%rd1386, %rd1384, %rd1385;
	xor.b64  	%rd1387, %rd1367, %rd1317;
	xor.b64  	%rd1388, %rd1367, %rd1342;
	and.b64  	%rd1389, %rd1388, %rd1387;
	xor.b64  	%rd1390, %rd1389, %rd1367;
	add.s64 	%rd1391, %rd1380, %rd1390;
	add.s64 	%rd1392, %rd1391, %rd1386;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6410,%dummy}, %rd1381;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6411}, %rd1381;
	}
	shf.r.wrap.b32 	%r6412, %r6411, %r6410, 14;
	shf.r.wrap.b32 	%r6413, %r6410, %r6411, 14;
	mov.b64 	%rd1393, {%r6413, %r6412};
	shf.r.wrap.b32 	%r6414, %r6411, %r6410, 18;
	shf.r.wrap.b32 	%r6415, %r6410, %r6411, 18;
	mov.b64 	%rd1394, {%r6415, %r6414};
	xor.b64  	%rd1395, %rd1394, %rd1393;
	shf.l.wrap.b32 	%r6416, %r6410, %r6411, 23;
	shf.l.wrap.b32 	%r6417, %r6411, %r6410, 23;
	mov.b64 	%rd1396, {%r6417, %r6416};
	xor.b64  	%rd1397, %rd1395, %rd1396;
	xor.b64  	%rd1398, %rd1356, %rd1331;
	and.b64  	%rd1399, %rd1381, %rd1398;
	xor.b64  	%rd1400, %rd1399, %rd1331;
	add.s64 	%rd1401, %rd1306, %rd1149;
	ld.const.u64 	%rd1402, [k_sha512+288];
	add.s64 	%rd1403, %rd1401, %rd1402;
	add.s64 	%rd1404, %rd1403, %rd1400;
	add.s64 	%rd1405, %rd1404, %rd1397;
	add.s64 	%rd1406, %rd1405, %rd1317;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6418,%dummy}, %rd1392;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6419}, %rd1392;
	}
	shf.r.wrap.b32 	%r6420, %r6419, %r6418, 28;
	shf.r.wrap.b32 	%r6421, %r6418, %r6419, 28;
	mov.b64 	%rd1407, {%r6421, %r6420};
	shf.l.wrap.b32 	%r6422, %r6418, %r6419, 30;
	shf.l.wrap.b32 	%r6423, %r6419, %r6418, 30;
	mov.b64 	%rd1408, {%r6423, %r6422};
	xor.b64  	%rd1409, %rd1408, %rd1407;
	shf.l.wrap.b32 	%r6424, %r6418, %r6419, 25;
	shf.l.wrap.b32 	%r6425, %r6419, %r6418, 25;
	mov.b64 	%rd1410, {%r6425, %r6424};
	xor.b64  	%rd1411, %rd1409, %rd1410;
	xor.b64  	%rd1412, %rd1392, %rd1342;
	xor.b64  	%rd1413, %rd1392, %rd1367;
	and.b64  	%rd1414, %rd1413, %rd1412;
	xor.b64  	%rd1415, %rd1414, %rd1392;
	add.s64 	%rd1416, %rd1405, %rd1415;
	add.s64 	%rd1417, %rd1416, %rd1411;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6426,%dummy}, %rd1406;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6427}, %rd1406;
	}
	shf.r.wrap.b32 	%r6428, %r6427, %r6426, 14;
	shf.r.wrap.b32 	%r6429, %r6426, %r6427, 14;
	mov.b64 	%rd1418, {%r6429, %r6428};
	shf.r.wrap.b32 	%r6430, %r6427, %r6426, 18;
	shf.r.wrap.b32 	%r6431, %r6426, %r6427, 18;
	mov.b64 	%rd1419, {%r6431, %r6430};
	xor.b64  	%rd1420, %rd1419, %rd1418;
	shf.l.wrap.b32 	%r6432, %r6426, %r6427, 23;
	shf.l.wrap.b32 	%r6433, %r6427, %r6426, 23;
	mov.b64 	%rd1421, {%r6433, %r6432};
	xor.b64  	%rd1422, %rd1420, %rd1421;
	xor.b64  	%rd1423, %rd1381, %rd1356;
	and.b64  	%rd1424, %rd1406, %rd1423;
	xor.b64  	%rd1425, %rd1424, %rd1356;
	add.s64 	%rd1426, %rd1331, %rd1162;
	ld.const.u64 	%rd1427, [k_sha512+296];
	add.s64 	%rd1428, %rd1426, %rd1427;
	add.s64 	%rd1429, %rd1428, %rd1425;
	add.s64 	%rd1430, %rd1429, %rd1422;
	add.s64 	%rd1431, %rd1430, %rd1342;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6434,%dummy}, %rd1417;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6435}, %rd1417;
	}
	shf.r.wrap.b32 	%r6436, %r6435, %r6434, 28;
	shf.r.wrap.b32 	%r6437, %r6434, %r6435, 28;
	mov.b64 	%rd1432, {%r6437, %r6436};
	shf.l.wrap.b32 	%r6438, %r6434, %r6435, 30;
	shf.l.wrap.b32 	%r6439, %r6435, %r6434, 30;
	mov.b64 	%rd1433, {%r6439, %r6438};
	xor.b64  	%rd1434, %rd1433, %rd1432;
	shf.l.wrap.b32 	%r6440, %r6434, %r6435, 25;
	shf.l.wrap.b32 	%r6441, %r6435, %r6434, 25;
	mov.b64 	%rd1435, {%r6441, %r6440};
	xor.b64  	%rd1436, %rd1434, %rd1435;
	xor.b64  	%rd1437, %rd1417, %rd1367;
	xor.b64  	%rd1438, %rd1417, %rd1392;
	and.b64  	%rd1439, %rd1438, %rd1437;
	xor.b64  	%rd1440, %rd1439, %rd1417;
	add.s64 	%rd1441, %rd1430, %rd1440;
	add.s64 	%rd1442, %rd1441, %rd1436;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6442,%dummy}, %rd1431;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6443}, %rd1431;
	}
	shf.r.wrap.b32 	%r6444, %r6443, %r6442, 14;
	shf.r.wrap.b32 	%r6445, %r6442, %r6443, 14;
	mov.b64 	%rd1443, {%r6445, %r6444};
	shf.r.wrap.b32 	%r6446, %r6443, %r6442, 18;
	shf.r.wrap.b32 	%r6447, %r6442, %r6443, 18;
	mov.b64 	%rd1444, {%r6447, %r6446};
	xor.b64  	%rd1445, %rd1444, %rd1443;
	shf.l.wrap.b32 	%r6448, %r6442, %r6443, 23;
	shf.l.wrap.b32 	%r6449, %r6443, %r6442, 23;
	mov.b64 	%rd1446, {%r6449, %r6448};
	xor.b64  	%rd1447, %rd1445, %rd1446;
	xor.b64  	%rd1448, %rd1406, %rd1381;
	and.b64  	%rd1449, %rd1431, %rd1448;
	xor.b64  	%rd1450, %rd1449, %rd1381;
	add.s64 	%rd1451, %rd1356, %rd1175;
	ld.const.u64 	%rd1452, [k_sha512+304];
	add.s64 	%rd1453, %rd1451, %rd1452;
	add.s64 	%rd1454, %rd1453, %rd1450;
	add.s64 	%rd1455, %rd1454, %rd1447;
	add.s64 	%rd1456, %rd1455, %rd1367;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6450,%dummy}, %rd1442;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6451}, %rd1442;
	}
	shf.r.wrap.b32 	%r6452, %r6451, %r6450, 28;
	shf.r.wrap.b32 	%r6453, %r6450, %r6451, 28;
	mov.b64 	%rd1457, {%r6453, %r6452};
	shf.l.wrap.b32 	%r6454, %r6450, %r6451, 30;
	shf.l.wrap.b32 	%r6455, %r6451, %r6450, 30;
	mov.b64 	%rd1458, {%r6455, %r6454};
	xor.b64  	%rd1459, %rd1458, %rd1457;
	shf.l.wrap.b32 	%r6456, %r6450, %r6451, 25;
	shf.l.wrap.b32 	%r6457, %r6451, %r6450, 25;
	mov.b64 	%rd1460, {%r6457, %r6456};
	xor.b64  	%rd1461, %rd1459, %rd1460;
	xor.b64  	%rd1462, %rd1442, %rd1392;
	xor.b64  	%rd1463, %rd1442, %rd1417;
	and.b64  	%rd1464, %rd1463, %rd1462;
	xor.b64  	%rd1465, %rd1464, %rd1442;
	add.s64 	%rd1466, %rd1455, %rd1465;
	add.s64 	%rd1467, %rd1466, %rd1461;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6458,%dummy}, %rd1456;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6459}, %rd1456;
	}
	shf.r.wrap.b32 	%r6460, %r6459, %r6458, 14;
	shf.r.wrap.b32 	%r6461, %r6458, %r6459, 14;
	mov.b64 	%rd1468, {%r6461, %r6460};
	shf.r.wrap.b32 	%r6462, %r6459, %r6458, 18;
	shf.r.wrap.b32 	%r6463, %r6458, %r6459, 18;
	mov.b64 	%rd1469, {%r6463, %r6462};
	xor.b64  	%rd1470, %rd1469, %rd1468;
	shf.l.wrap.b32 	%r6464, %r6458, %r6459, 23;
	shf.l.wrap.b32 	%r6465, %r6459, %r6458, 23;
	mov.b64 	%rd1471, {%r6465, %r6464};
	xor.b64  	%rd1472, %rd1470, %rd1471;
	xor.b64  	%rd1473, %rd1431, %rd1406;
	and.b64  	%rd1474, %rd1456, %rd1473;
	xor.b64  	%rd1475, %rd1474, %rd1406;
	add.s64 	%rd1476, %rd1381, %rd1188;
	ld.const.u64 	%rd1477, [k_sha512+312];
	add.s64 	%rd1478, %rd1476, %rd1477;
	add.s64 	%rd1479, %rd1478, %rd1475;
	add.s64 	%rd1480, %rd1479, %rd1472;
	add.s64 	%rd1481, %rd1480, %rd1392;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6466,%dummy}, %rd1467;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6467}, %rd1467;
	}
	shf.r.wrap.b32 	%r6468, %r6467, %r6466, 28;
	shf.r.wrap.b32 	%r6469, %r6466, %r6467, 28;
	mov.b64 	%rd1482, {%r6469, %r6468};
	shf.l.wrap.b32 	%r6470, %r6466, %r6467, 30;
	shf.l.wrap.b32 	%r6471, %r6467, %r6466, 30;
	mov.b64 	%rd1483, {%r6471, %r6470};
	xor.b64  	%rd1484, %rd1483, %rd1482;
	shf.l.wrap.b32 	%r6472, %r6466, %r6467, 25;
	shf.l.wrap.b32 	%r6473, %r6467, %r6466, 25;
	mov.b64 	%rd1485, {%r6473, %r6472};
	xor.b64  	%rd1486, %rd1484, %rd1485;
	xor.b64  	%rd1487, %rd1467, %rd1417;
	xor.b64  	%rd1488, %rd1467, %rd1442;
	and.b64  	%rd1489, %rd1488, %rd1487;
	xor.b64  	%rd1490, %rd1489, %rd1467;
	add.s64 	%rd1491, %rd1480, %rd1490;
	add.s64 	%rd1492, %rd1491, %rd1486;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6474,%dummy}, %rd1481;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6475}, %rd1481;
	}
	shf.r.wrap.b32 	%r6476, %r6475, %r6474, 14;
	shf.r.wrap.b32 	%r6477, %r6474, %r6475, 14;
	mov.b64 	%rd1493, {%r6477, %r6476};
	shf.r.wrap.b32 	%r6478, %r6475, %r6474, 18;
	shf.r.wrap.b32 	%r6479, %r6474, %r6475, 18;
	mov.b64 	%rd1494, {%r6479, %r6478};
	xor.b64  	%rd1495, %rd1494, %rd1493;
	shf.l.wrap.b32 	%r6480, %r6474, %r6475, 23;
	shf.l.wrap.b32 	%r6481, %r6475, %r6474, 23;
	mov.b64 	%rd1496, {%r6481, %r6480};
	xor.b64  	%rd1497, %rd1495, %rd1496;
	xor.b64  	%rd1498, %rd1456, %rd1431;
	and.b64  	%rd1499, %rd1481, %rd1498;
	xor.b64  	%rd1500, %rd1499, %rd1431;
	add.s64 	%rd1501, %rd1406, %rd1201;
	ld.const.u64 	%rd1502, [k_sha512+320];
	add.s64 	%rd1503, %rd1501, %rd1502;
	add.s64 	%rd1504, %rd1503, %rd1500;
	add.s64 	%rd1505, %rd1504, %rd1497;
	add.s64 	%rd1506, %rd1505, %rd1417;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6482,%dummy}, %rd1492;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6483}, %rd1492;
	}
	shf.r.wrap.b32 	%r6484, %r6483, %r6482, 28;
	shf.r.wrap.b32 	%r6485, %r6482, %r6483, 28;
	mov.b64 	%rd1507, {%r6485, %r6484};
	shf.l.wrap.b32 	%r6486, %r6482, %r6483, 30;
	shf.l.wrap.b32 	%r6487, %r6483, %r6482, 30;
	mov.b64 	%rd1508, {%r6487, %r6486};
	xor.b64  	%rd1509, %rd1508, %rd1507;
	shf.l.wrap.b32 	%r6488, %r6482, %r6483, 25;
	shf.l.wrap.b32 	%r6489, %r6483, %r6482, 25;
	mov.b64 	%rd1510, {%r6489, %r6488};
	xor.b64  	%rd1511, %rd1509, %rd1510;
	xor.b64  	%rd1512, %rd1492, %rd1442;
	xor.b64  	%rd1513, %rd1492, %rd1467;
	and.b64  	%rd1514, %rd1513, %rd1512;
	xor.b64  	%rd1515, %rd1514, %rd1492;
	add.s64 	%rd1516, %rd1505, %rd1515;
	add.s64 	%rd1517, %rd1516, %rd1511;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6490,%dummy}, %rd1506;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6491}, %rd1506;
	}
	shf.r.wrap.b32 	%r6492, %r6491, %r6490, 14;
	shf.r.wrap.b32 	%r6493, %r6490, %r6491, 14;
	mov.b64 	%rd1518, {%r6493, %r6492};
	shf.r.wrap.b32 	%r6494, %r6491, %r6490, 18;
	shf.r.wrap.b32 	%r6495, %r6490, %r6491, 18;
	mov.b64 	%rd1519, {%r6495, %r6494};
	xor.b64  	%rd1520, %rd1519, %rd1518;
	shf.l.wrap.b32 	%r6496, %r6490, %r6491, 23;
	shf.l.wrap.b32 	%r6497, %r6491, %r6490, 23;
	mov.b64 	%rd1521, {%r6497, %r6496};
	xor.b64  	%rd1522, %rd1520, %rd1521;
	xor.b64  	%rd1523, %rd1481, %rd1456;
	and.b64  	%rd1524, %rd1506, %rd1523;
	xor.b64  	%rd1525, %rd1524, %rd1456;
	add.s64 	%rd1526, %rd1431, %rd1214;
	ld.const.u64 	%rd1527, [k_sha512+328];
	add.s64 	%rd1528, %rd1526, %rd1527;
	add.s64 	%rd1529, %rd1528, %rd1525;
	add.s64 	%rd1530, %rd1529, %rd1522;
	add.s64 	%rd1531, %rd1530, %rd1442;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6498,%dummy}, %rd1517;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6499}, %rd1517;
	}
	shf.r.wrap.b32 	%r6500, %r6499, %r6498, 28;
	shf.r.wrap.b32 	%r6501, %r6498, %r6499, 28;
	mov.b64 	%rd1532, {%r6501, %r6500};
	shf.l.wrap.b32 	%r6502, %r6498, %r6499, 30;
	shf.l.wrap.b32 	%r6503, %r6499, %r6498, 30;
	mov.b64 	%rd1533, {%r6503, %r6502};
	xor.b64  	%rd1534, %rd1533, %rd1532;
	shf.l.wrap.b32 	%r6504, %r6498, %r6499, 25;
	shf.l.wrap.b32 	%r6505, %r6499, %r6498, 25;
	mov.b64 	%rd1535, {%r6505, %r6504};
	xor.b64  	%rd1536, %rd1534, %rd1535;
	xor.b64  	%rd1537, %rd1517, %rd1467;
	xor.b64  	%rd1538, %rd1517, %rd1492;
	and.b64  	%rd1539, %rd1538, %rd1537;
	xor.b64  	%rd1540, %rd1539, %rd1517;
	add.s64 	%rd1541, %rd1530, %rd1540;
	add.s64 	%rd1542, %rd1541, %rd1536;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6506,%dummy}, %rd1531;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6507}, %rd1531;
	}
	shf.r.wrap.b32 	%r6508, %r6507, %r6506, 14;
	shf.r.wrap.b32 	%r6509, %r6506, %r6507, 14;
	mov.b64 	%rd1543, {%r6509, %r6508};
	shf.r.wrap.b32 	%r6510, %r6507, %r6506, 18;
	shf.r.wrap.b32 	%r6511, %r6506, %r6507, 18;
	mov.b64 	%rd1544, {%r6511, %r6510};
	xor.b64  	%rd1545, %rd1544, %rd1543;
	shf.l.wrap.b32 	%r6512, %r6506, %r6507, 23;
	shf.l.wrap.b32 	%r6513, %r6507, %r6506, 23;
	mov.b64 	%rd1546, {%r6513, %r6512};
	xor.b64  	%rd1547, %rd1545, %rd1546;
	xor.b64  	%rd1548, %rd1506, %rd1481;
	and.b64  	%rd1549, %rd1531, %rd1548;
	xor.b64  	%rd1550, %rd1549, %rd1481;
	add.s64 	%rd1551, %rd1456, %rd1227;
	ld.const.u64 	%rd1552, [k_sha512+336];
	add.s64 	%rd1553, %rd1551, %rd1552;
	add.s64 	%rd1554, %rd1553, %rd1550;
	add.s64 	%rd1555, %rd1554, %rd1547;
	add.s64 	%rd1556, %rd1555, %rd1467;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6514,%dummy}, %rd1542;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6515}, %rd1542;
	}
	shf.r.wrap.b32 	%r6516, %r6515, %r6514, 28;
	shf.r.wrap.b32 	%r6517, %r6514, %r6515, 28;
	mov.b64 	%rd1557, {%r6517, %r6516};
	shf.l.wrap.b32 	%r6518, %r6514, %r6515, 30;
	shf.l.wrap.b32 	%r6519, %r6515, %r6514, 30;
	mov.b64 	%rd1558, {%r6519, %r6518};
	xor.b64  	%rd1559, %rd1558, %rd1557;
	shf.l.wrap.b32 	%r6520, %r6514, %r6515, 25;
	shf.l.wrap.b32 	%r6521, %r6515, %r6514, 25;
	mov.b64 	%rd1560, {%r6521, %r6520};
	xor.b64  	%rd1561, %rd1559, %rd1560;
	xor.b64  	%rd1562, %rd1542, %rd1492;
	xor.b64  	%rd1563, %rd1542, %rd1517;
	and.b64  	%rd1564, %rd1563, %rd1562;
	xor.b64  	%rd1565, %rd1564, %rd1542;
	add.s64 	%rd1566, %rd1555, %rd1565;
	add.s64 	%rd1567, %rd1566, %rd1561;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6522,%dummy}, %rd1556;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6523}, %rd1556;
	}
	shf.r.wrap.b32 	%r6524, %r6523, %r6522, 14;
	shf.r.wrap.b32 	%r6525, %r6522, %r6523, 14;
	mov.b64 	%rd1568, {%r6525, %r6524};
	shf.r.wrap.b32 	%r6526, %r6523, %r6522, 18;
	shf.r.wrap.b32 	%r6527, %r6522, %r6523, 18;
	mov.b64 	%rd1569, {%r6527, %r6526};
	xor.b64  	%rd1570, %rd1569, %rd1568;
	shf.l.wrap.b32 	%r6528, %r6522, %r6523, 23;
	shf.l.wrap.b32 	%r6529, %r6523, %r6522, 23;
	mov.b64 	%rd1571, {%r6529, %r6528};
	xor.b64  	%rd1572, %rd1570, %rd1571;
	xor.b64  	%rd1573, %rd1531, %rd1506;
	and.b64  	%rd1574, %rd1556, %rd1573;
	xor.b64  	%rd1575, %rd1574, %rd1506;
	add.s64 	%rd1576, %rd1481, %rd1240;
	ld.const.u64 	%rd1577, [k_sha512+344];
	add.s64 	%rd1578, %rd1576, %rd1577;
	add.s64 	%rd1579, %rd1578, %rd1575;
	add.s64 	%rd1580, %rd1579, %rd1572;
	add.s64 	%rd1581, %rd1580, %rd1492;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6530,%dummy}, %rd1567;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6531}, %rd1567;
	}
	shf.r.wrap.b32 	%r6532, %r6531, %r6530, 28;
	shf.r.wrap.b32 	%r6533, %r6530, %r6531, 28;
	mov.b64 	%rd1582, {%r6533, %r6532};
	shf.l.wrap.b32 	%r6534, %r6530, %r6531, 30;
	shf.l.wrap.b32 	%r6535, %r6531, %r6530, 30;
	mov.b64 	%rd1583, {%r6535, %r6534};
	xor.b64  	%rd1584, %rd1583, %rd1582;
	shf.l.wrap.b32 	%r6536, %r6530, %r6531, 25;
	shf.l.wrap.b32 	%r6537, %r6531, %r6530, 25;
	mov.b64 	%rd1585, {%r6537, %r6536};
	xor.b64  	%rd1586, %rd1584, %rd1585;
	xor.b64  	%rd1587, %rd1567, %rd1517;
	xor.b64  	%rd1588, %rd1567, %rd1542;
	and.b64  	%rd1589, %rd1588, %rd1587;
	xor.b64  	%rd1590, %rd1589, %rd1567;
	add.s64 	%rd1591, %rd1580, %rd1590;
	add.s64 	%rd1592, %rd1591, %rd1586;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6538,%dummy}, %rd1581;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6539}, %rd1581;
	}
	shf.r.wrap.b32 	%r6540, %r6539, %r6538, 14;
	shf.r.wrap.b32 	%r6541, %r6538, %r6539, 14;
	mov.b64 	%rd1593, {%r6541, %r6540};
	shf.r.wrap.b32 	%r6542, %r6539, %r6538, 18;
	shf.r.wrap.b32 	%r6543, %r6538, %r6539, 18;
	mov.b64 	%rd1594, {%r6543, %r6542};
	xor.b64  	%rd1595, %rd1594, %rd1593;
	shf.l.wrap.b32 	%r6544, %r6538, %r6539, 23;
	shf.l.wrap.b32 	%r6545, %r6539, %r6538, 23;
	mov.b64 	%rd1596, {%r6545, %r6544};
	xor.b64  	%rd1597, %rd1595, %rd1596;
	xor.b64  	%rd1598, %rd1556, %rd1531;
	and.b64  	%rd1599, %rd1581, %rd1598;
	xor.b64  	%rd1600, %rd1599, %rd1531;
	add.s64 	%rd1601, %rd1506, %rd1253;
	ld.const.u64 	%rd1602, [k_sha512+352];
	add.s64 	%rd1603, %rd1601, %rd1602;
	add.s64 	%rd1604, %rd1603, %rd1600;
	add.s64 	%rd1605, %rd1604, %rd1597;
	add.s64 	%rd1606, %rd1605, %rd1517;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6546,%dummy}, %rd1592;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6547}, %rd1592;
	}
	shf.r.wrap.b32 	%r6548, %r6547, %r6546, 28;
	shf.r.wrap.b32 	%r6549, %r6546, %r6547, 28;
	mov.b64 	%rd1607, {%r6549, %r6548};
	shf.l.wrap.b32 	%r6550, %r6546, %r6547, 30;
	shf.l.wrap.b32 	%r6551, %r6547, %r6546, 30;
	mov.b64 	%rd1608, {%r6551, %r6550};
	xor.b64  	%rd1609, %rd1608, %rd1607;
	shf.l.wrap.b32 	%r6552, %r6546, %r6547, 25;
	shf.l.wrap.b32 	%r6553, %r6547, %r6546, 25;
	mov.b64 	%rd1610, {%r6553, %r6552};
	xor.b64  	%rd1611, %rd1609, %rd1610;
	xor.b64  	%rd1612, %rd1592, %rd1542;
	xor.b64  	%rd1613, %rd1592, %rd1567;
	and.b64  	%rd1614, %rd1613, %rd1612;
	xor.b64  	%rd1615, %rd1614, %rd1592;
	add.s64 	%rd1616, %rd1605, %rd1615;
	add.s64 	%rd1617, %rd1616, %rd1611;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6554,%dummy}, %rd1606;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6555}, %rd1606;
	}
	shf.r.wrap.b32 	%r6556, %r6555, %r6554, 14;
	shf.r.wrap.b32 	%r6557, %r6554, %r6555, 14;
	mov.b64 	%rd1618, {%r6557, %r6556};
	shf.r.wrap.b32 	%r6558, %r6555, %r6554, 18;
	shf.r.wrap.b32 	%r6559, %r6554, %r6555, 18;
	mov.b64 	%rd1619, {%r6559, %r6558};
	xor.b64  	%rd1620, %rd1619, %rd1618;
	shf.l.wrap.b32 	%r6560, %r6554, %r6555, 23;
	shf.l.wrap.b32 	%r6561, %r6555, %r6554, 23;
	mov.b64 	%rd1621, {%r6561, %r6560};
	xor.b64  	%rd1622, %rd1620, %rd1621;
	xor.b64  	%rd1623, %rd1581, %rd1556;
	and.b64  	%rd1624, %rd1606, %rd1623;
	xor.b64  	%rd1625, %rd1624, %rd1556;
	add.s64 	%rd1626, %rd1531, %rd1266;
	ld.const.u64 	%rd1627, [k_sha512+360];
	add.s64 	%rd1628, %rd1626, %rd1627;
	add.s64 	%rd1629, %rd1628, %rd1625;
	add.s64 	%rd1630, %rd1629, %rd1622;
	add.s64 	%rd1631, %rd1630, %rd1542;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6562,%dummy}, %rd1617;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6563}, %rd1617;
	}
	shf.r.wrap.b32 	%r6564, %r6563, %r6562, 28;
	shf.r.wrap.b32 	%r6565, %r6562, %r6563, 28;
	mov.b64 	%rd1632, {%r6565, %r6564};
	shf.l.wrap.b32 	%r6566, %r6562, %r6563, 30;
	shf.l.wrap.b32 	%r6567, %r6563, %r6562, 30;
	mov.b64 	%rd1633, {%r6567, %r6566};
	xor.b64  	%rd1634, %rd1633, %rd1632;
	shf.l.wrap.b32 	%r6568, %r6562, %r6563, 25;
	shf.l.wrap.b32 	%r6569, %r6563, %r6562, 25;
	mov.b64 	%rd1635, {%r6569, %r6568};
	xor.b64  	%rd1636, %rd1634, %rd1635;
	xor.b64  	%rd1637, %rd1617, %rd1567;
	xor.b64  	%rd1638, %rd1617, %rd1592;
	and.b64  	%rd1639, %rd1638, %rd1637;
	xor.b64  	%rd1640, %rd1639, %rd1617;
	add.s64 	%rd1641, %rd1630, %rd1640;
	add.s64 	%rd1642, %rd1641, %rd1636;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6570,%dummy}, %rd1631;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6571}, %rd1631;
	}
	shf.r.wrap.b32 	%r6572, %r6571, %r6570, 14;
	shf.r.wrap.b32 	%r6573, %r6570, %r6571, 14;
	mov.b64 	%rd1643, {%r6573, %r6572};
	shf.r.wrap.b32 	%r6574, %r6571, %r6570, 18;
	shf.r.wrap.b32 	%r6575, %r6570, %r6571, 18;
	mov.b64 	%rd1644, {%r6575, %r6574};
	xor.b64  	%rd1645, %rd1644, %rd1643;
	shf.l.wrap.b32 	%r6576, %r6570, %r6571, 23;
	shf.l.wrap.b32 	%r6577, %r6571, %r6570, 23;
	mov.b64 	%rd1646, {%r6577, %r6576};
	xor.b64  	%rd1647, %rd1645, %rd1646;
	xor.b64  	%rd1648, %rd1606, %rd1581;
	and.b64  	%rd1649, %rd1631, %rd1648;
	xor.b64  	%rd1650, %rd1649, %rd1581;
	add.s64 	%rd1651, %rd1556, %rd1279;
	ld.const.u64 	%rd1652, [k_sha512+368];
	add.s64 	%rd1653, %rd1651, %rd1652;
	add.s64 	%rd1654, %rd1653, %rd1650;
	add.s64 	%rd1655, %rd1654, %rd1647;
	add.s64 	%rd1656, %rd1655, %rd1567;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6578,%dummy}, %rd1642;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6579}, %rd1642;
	}
	shf.r.wrap.b32 	%r6580, %r6579, %r6578, 28;
	shf.r.wrap.b32 	%r6581, %r6578, %r6579, 28;
	mov.b64 	%rd1657, {%r6581, %r6580};
	shf.l.wrap.b32 	%r6582, %r6578, %r6579, 30;
	shf.l.wrap.b32 	%r6583, %r6579, %r6578, 30;
	mov.b64 	%rd1658, {%r6583, %r6582};
	xor.b64  	%rd1659, %rd1658, %rd1657;
	shf.l.wrap.b32 	%r6584, %r6578, %r6579, 25;
	shf.l.wrap.b32 	%r6585, %r6579, %r6578, 25;
	mov.b64 	%rd1660, {%r6585, %r6584};
	xor.b64  	%rd1661, %rd1659, %rd1660;
	xor.b64  	%rd1662, %rd1642, %rd1592;
	xor.b64  	%rd1663, %rd1642, %rd1617;
	and.b64  	%rd1664, %rd1663, %rd1662;
	xor.b64  	%rd1665, %rd1664, %rd1642;
	add.s64 	%rd1666, %rd1655, %rd1665;
	add.s64 	%rd1667, %rd1666, %rd1661;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6586,%dummy}, %rd1656;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6587}, %rd1656;
	}
	shf.r.wrap.b32 	%r6588, %r6587, %r6586, 14;
	shf.r.wrap.b32 	%r6589, %r6586, %r6587, 14;
	mov.b64 	%rd1668, {%r6589, %r6588};
	shf.r.wrap.b32 	%r6590, %r6587, %r6586, 18;
	shf.r.wrap.b32 	%r6591, %r6586, %r6587, 18;
	mov.b64 	%rd1669, {%r6591, %r6590};
	xor.b64  	%rd1670, %rd1669, %rd1668;
	shf.l.wrap.b32 	%r6592, %r6586, %r6587, 23;
	shf.l.wrap.b32 	%r6593, %r6587, %r6586, 23;
	mov.b64 	%rd1671, {%r6593, %r6592};
	xor.b64  	%rd1672, %rd1670, %rd1671;
	xor.b64  	%rd1673, %rd1631, %rd1606;
	and.b64  	%rd1674, %rd1656, %rd1673;
	xor.b64  	%rd1675, %rd1674, %rd1606;
	add.s64 	%rd1676, %rd1581, %rd1292;
	ld.const.u64 	%rd1677, [k_sha512+376];
	add.s64 	%rd1678, %rd1676, %rd1677;
	add.s64 	%rd1679, %rd1678, %rd1675;
	add.s64 	%rd1680, %rd1679, %rd1672;
	add.s64 	%rd1681, %rd1680, %rd1592;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6594,%dummy}, %rd1667;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6595}, %rd1667;
	}
	shf.r.wrap.b32 	%r6596, %r6595, %r6594, 28;
	shf.r.wrap.b32 	%r6597, %r6594, %r6595, 28;
	mov.b64 	%rd1682, {%r6597, %r6596};
	shf.l.wrap.b32 	%r6598, %r6594, %r6595, 30;
	shf.l.wrap.b32 	%r6599, %r6595, %r6594, 30;
	mov.b64 	%rd1683, {%r6599, %r6598};
	xor.b64  	%rd1684, %rd1683, %rd1682;
	shf.l.wrap.b32 	%r6600, %r6594, %r6595, 25;
	shf.l.wrap.b32 	%r6601, %r6595, %r6594, 25;
	mov.b64 	%rd1685, {%r6601, %r6600};
	xor.b64  	%rd1686, %rd1684, %rd1685;
	xor.b64  	%rd1687, %rd1667, %rd1617;
	xor.b64  	%rd1688, %rd1667, %rd1642;
	and.b64  	%rd1689, %rd1688, %rd1687;
	xor.b64  	%rd1690, %rd1689, %rd1667;
	add.s64 	%rd1691, %rd1680, %rd1690;
	add.s64 	%rd1692, %rd1691, %rd1686;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6602,%dummy}, %rd1279;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6603}, %rd1279;
	}
	shf.r.wrap.b32 	%r6604, %r6603, %r6602, 19;
	shf.r.wrap.b32 	%r6605, %r6602, %r6603, 19;
	mov.b64 	%rd1693, {%r6605, %r6604};
	shf.l.wrap.b32 	%r6606, %r6602, %r6603, 3;
	shf.l.wrap.b32 	%r6607, %r6603, %r6602, 3;
	mov.b64 	%rd1694, {%r6607, %r6606};
	shr.u64 	%rd1695, %rd1279, 6;
	xor.b64  	%rd1696, %rd1693, %rd1695;
	xor.b64  	%rd1697, %rd1696, %rd1694;
	shf.r.wrap.b32 	%r6608, %r6217, %r6216, 1;
	shf.r.wrap.b32 	%r6609, %r6216, %r6217, 1;
	mov.b64 	%rd1698, {%r6609, %r6608};
	shf.r.wrap.b32 	%r6610, %r6217, %r6216, 8;
	shf.r.wrap.b32 	%r6611, %r6216, %r6217, 8;
	mov.b64 	%rd1699, {%r6611, %r6610};
	shr.u64 	%rd1700, %rd1110, 7;
	xor.b64  	%rd1701, %rd1698, %rd1700;
	xor.b64  	%rd1702, %rd1701, %rd1699;
	add.s64 	%rd1703, %rd1214, %rd1097;
	add.s64 	%rd1704, %rd1703, %rd1697;
	add.s64 	%rd1705, %rd1704, %rd1702;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6612,%dummy}, %rd1292;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6613}, %rd1292;
	}
	shf.r.wrap.b32 	%r6614, %r6613, %r6612, 19;
	shf.r.wrap.b32 	%r6615, %r6612, %r6613, 19;
	mov.b64 	%rd1706, {%r6615, %r6614};
	shf.l.wrap.b32 	%r6616, %r6612, %r6613, 3;
	shf.l.wrap.b32 	%r6617, %r6613, %r6612, 3;
	mov.b64 	%rd1707, {%r6617, %r6616};
	shr.u64 	%rd1708, %rd1292, 6;
	xor.b64  	%rd1709, %rd1706, %rd1708;
	xor.b64  	%rd1710, %rd1709, %rd1707;
	shf.r.wrap.b32 	%r6618, %r6227, %r6226, 1;
	shf.r.wrap.b32 	%r6619, %r6226, %r6227, 1;
	mov.b64 	%rd1711, {%r6619, %r6618};
	shf.r.wrap.b32 	%r6620, %r6227, %r6226, 8;
	shf.r.wrap.b32 	%r6621, %r6226, %r6227, 8;
	mov.b64 	%rd1712, {%r6621, %r6620};
	shr.u64 	%rd1713, %rd1123, 7;
	xor.b64  	%rd1714, %rd1711, %rd1713;
	xor.b64  	%rd1715, %rd1714, %rd1712;
	add.s64 	%rd1716, %rd1227, %rd1110;
	add.s64 	%rd1717, %rd1716, %rd1710;
	add.s64 	%rd1718, %rd1717, %rd1715;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6622,%dummy}, %rd1705;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6623}, %rd1705;
	}
	shf.r.wrap.b32 	%r6624, %r6623, %r6622, 19;
	shf.r.wrap.b32 	%r6625, %r6622, %r6623, 19;
	mov.b64 	%rd1719, {%r6625, %r6624};
	shf.l.wrap.b32 	%r6626, %r6622, %r6623, 3;
	shf.l.wrap.b32 	%r6627, %r6623, %r6622, 3;
	mov.b64 	%rd1720, {%r6627, %r6626};
	shr.u64 	%rd1721, %rd1705, 6;
	xor.b64  	%rd1722, %rd1719, %rd1721;
	xor.b64  	%rd1723, %rd1722, %rd1720;
	shf.r.wrap.b32 	%r6628, %r6237, %r6236, 1;
	shf.r.wrap.b32 	%r6629, %r6236, %r6237, 1;
	mov.b64 	%rd1724, {%r6629, %r6628};
	shf.r.wrap.b32 	%r6630, %r6237, %r6236, 8;
	shf.r.wrap.b32 	%r6631, %r6236, %r6237, 8;
	mov.b64 	%rd1725, {%r6631, %r6630};
	shr.u64 	%rd1726, %rd1136, 7;
	xor.b64  	%rd1727, %rd1724, %rd1726;
	xor.b64  	%rd1728, %rd1727, %rd1725;
	add.s64 	%rd1729, %rd1240, %rd1123;
	add.s64 	%rd1730, %rd1729, %rd1723;
	add.s64 	%rd1731, %rd1730, %rd1728;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6632,%dummy}, %rd1718;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6633}, %rd1718;
	}
	shf.r.wrap.b32 	%r6634, %r6633, %r6632, 19;
	shf.r.wrap.b32 	%r6635, %r6632, %r6633, 19;
	mov.b64 	%rd1732, {%r6635, %r6634};
	shf.l.wrap.b32 	%r6636, %r6632, %r6633, 3;
	shf.l.wrap.b32 	%r6637, %r6633, %r6632, 3;
	mov.b64 	%rd1733, {%r6637, %r6636};
	shr.u64 	%rd1734, %rd1718, 6;
	xor.b64  	%rd1735, %rd1732, %rd1734;
	xor.b64  	%rd1736, %rd1735, %rd1733;
	shf.r.wrap.b32 	%r6638, %r6247, %r6246, 1;
	shf.r.wrap.b32 	%r6639, %r6246, %r6247, 1;
	mov.b64 	%rd1737, {%r6639, %r6638};
	shf.r.wrap.b32 	%r6640, %r6247, %r6246, 8;
	shf.r.wrap.b32 	%r6641, %r6246, %r6247, 8;
	mov.b64 	%rd1738, {%r6641, %r6640};
	shr.u64 	%rd1739, %rd1149, 7;
	xor.b64  	%rd1740, %rd1737, %rd1739;
	xor.b64  	%rd1741, %rd1740, %rd1738;
	add.s64 	%rd1742, %rd1253, %rd1136;
	add.s64 	%rd1743, %rd1742, %rd1736;
	add.s64 	%rd1744, %rd1743, %rd1741;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6642,%dummy}, %rd1731;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6643}, %rd1731;
	}
	shf.r.wrap.b32 	%r6644, %r6643, %r6642, 19;
	shf.r.wrap.b32 	%r6645, %r6642, %r6643, 19;
	mov.b64 	%rd1745, {%r6645, %r6644};
	shf.l.wrap.b32 	%r6646, %r6642, %r6643, 3;
	shf.l.wrap.b32 	%r6647, %r6643, %r6642, 3;
	mov.b64 	%rd1746, {%r6647, %r6646};
	shr.u64 	%rd1747, %rd1731, 6;
	xor.b64  	%rd1748, %rd1745, %rd1747;
	xor.b64  	%rd1749, %rd1748, %rd1746;
	shf.r.wrap.b32 	%r6648, %r6257, %r6256, 1;
	shf.r.wrap.b32 	%r6649, %r6256, %r6257, 1;
	mov.b64 	%rd1750, {%r6649, %r6648};
	shf.r.wrap.b32 	%r6650, %r6257, %r6256, 8;
	shf.r.wrap.b32 	%r6651, %r6256, %r6257, 8;
	mov.b64 	%rd1751, {%r6651, %r6650};
	shr.u64 	%rd1752, %rd1162, 7;
	xor.b64  	%rd1753, %rd1750, %rd1752;
	xor.b64  	%rd1754, %rd1753, %rd1751;
	add.s64 	%rd1755, %rd1266, %rd1149;
	add.s64 	%rd1756, %rd1755, %rd1749;
	add.s64 	%rd1757, %rd1756, %rd1754;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6652,%dummy}, %rd1744;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6653}, %rd1744;
	}
	shf.r.wrap.b32 	%r6654, %r6653, %r6652, 19;
	shf.r.wrap.b32 	%r6655, %r6652, %r6653, 19;
	mov.b64 	%rd1758, {%r6655, %r6654};
	shf.l.wrap.b32 	%r6656, %r6652, %r6653, 3;
	shf.l.wrap.b32 	%r6657, %r6653, %r6652, 3;
	mov.b64 	%rd1759, {%r6657, %r6656};
	shr.u64 	%rd1760, %rd1744, 6;
	xor.b64  	%rd1761, %rd1758, %rd1760;
	xor.b64  	%rd1762, %rd1761, %rd1759;
	shf.r.wrap.b32 	%r6658, %r6267, %r6266, 1;
	shf.r.wrap.b32 	%r6659, %r6266, %r6267, 1;
	mov.b64 	%rd1763, {%r6659, %r6658};
	shf.r.wrap.b32 	%r6660, %r6267, %r6266, 8;
	shf.r.wrap.b32 	%r6661, %r6266, %r6267, 8;
	mov.b64 	%rd1764, {%r6661, %r6660};
	shr.u64 	%rd1765, %rd1175, 7;
	xor.b64  	%rd1766, %rd1763, %rd1765;
	xor.b64  	%rd1767, %rd1766, %rd1764;
	add.s64 	%rd1768, %rd1279, %rd1162;
	add.s64 	%rd1769, %rd1768, %rd1762;
	add.s64 	%rd1770, %rd1769, %rd1767;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6662,%dummy}, %rd1757;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6663}, %rd1757;
	}
	shf.r.wrap.b32 	%r6664, %r6663, %r6662, 19;
	shf.r.wrap.b32 	%r6665, %r6662, %r6663, 19;
	mov.b64 	%rd1771, {%r6665, %r6664};
	shf.l.wrap.b32 	%r6666, %r6662, %r6663, 3;
	shf.l.wrap.b32 	%r6667, %r6663, %r6662, 3;
	mov.b64 	%rd1772, {%r6667, %r6666};
	shr.u64 	%rd1773, %rd1757, 6;
	xor.b64  	%rd1774, %rd1771, %rd1773;
	xor.b64  	%rd1775, %rd1774, %rd1772;
	shf.r.wrap.b32 	%r6668, %r6277, %r6276, 1;
	shf.r.wrap.b32 	%r6669, %r6276, %r6277, 1;
	mov.b64 	%rd1776, {%r6669, %r6668};
	shf.r.wrap.b32 	%r6670, %r6277, %r6276, 8;
	shf.r.wrap.b32 	%r6671, %r6276, %r6277, 8;
	mov.b64 	%rd1777, {%r6671, %r6670};
	shr.u64 	%rd1778, %rd1188, 7;
	xor.b64  	%rd1779, %rd1776, %rd1778;
	xor.b64  	%rd1780, %rd1779, %rd1777;
	add.s64 	%rd1781, %rd1292, %rd1175;
	add.s64 	%rd1782, %rd1781, %rd1775;
	add.s64 	%rd1783, %rd1782, %rd1780;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6672,%dummy}, %rd1770;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6673}, %rd1770;
	}
	shf.r.wrap.b32 	%r6674, %r6673, %r6672, 19;
	shf.r.wrap.b32 	%r6675, %r6672, %r6673, 19;
	mov.b64 	%rd1784, {%r6675, %r6674};
	shf.l.wrap.b32 	%r6676, %r6672, %r6673, 3;
	shf.l.wrap.b32 	%r6677, %r6673, %r6672, 3;
	mov.b64 	%rd1785, {%r6677, %r6676};
	shr.u64 	%rd1786, %rd1770, 6;
	xor.b64  	%rd1787, %rd1784, %rd1786;
	xor.b64  	%rd1788, %rd1787, %rd1785;
	shf.r.wrap.b32 	%r6678, %r6287, %r6286, 1;
	shf.r.wrap.b32 	%r6679, %r6286, %r6287, 1;
	mov.b64 	%rd1789, {%r6679, %r6678};
	shf.r.wrap.b32 	%r6680, %r6287, %r6286, 8;
	shf.r.wrap.b32 	%r6681, %r6286, %r6287, 8;
	mov.b64 	%rd1790, {%r6681, %r6680};
	shr.u64 	%rd1791, %rd1201, 7;
	xor.b64  	%rd1792, %rd1789, %rd1791;
	xor.b64  	%rd1793, %rd1792, %rd1790;
	add.s64 	%rd1794, %rd1705, %rd1188;
	add.s64 	%rd1795, %rd1794, %rd1788;
	add.s64 	%rd1796, %rd1795, %rd1793;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6682,%dummy}, %rd1783;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6683}, %rd1783;
	}
	shf.r.wrap.b32 	%r6684, %r6683, %r6682, 19;
	shf.r.wrap.b32 	%r6685, %r6682, %r6683, 19;
	mov.b64 	%rd1797, {%r6685, %r6684};
	shf.l.wrap.b32 	%r6686, %r6682, %r6683, 3;
	shf.l.wrap.b32 	%r6687, %r6683, %r6682, 3;
	mov.b64 	%rd1798, {%r6687, %r6686};
	shr.u64 	%rd1799, %rd1783, 6;
	xor.b64  	%rd1800, %rd1797, %rd1799;
	xor.b64  	%rd1801, %rd1800, %rd1798;
	shf.r.wrap.b32 	%r6688, %r6297, %r6296, 1;
	shf.r.wrap.b32 	%r6689, %r6296, %r6297, 1;
	mov.b64 	%rd1802, {%r6689, %r6688};
	shf.r.wrap.b32 	%r6690, %r6297, %r6296, 8;
	shf.r.wrap.b32 	%r6691, %r6296, %r6297, 8;
	mov.b64 	%rd1803, {%r6691, %r6690};
	shr.u64 	%rd1804, %rd1214, 7;
	xor.b64  	%rd1805, %rd1802, %rd1804;
	xor.b64  	%rd1806, %rd1805, %rd1803;
	add.s64 	%rd1807, %rd1718, %rd1201;
	add.s64 	%rd1808, %rd1807, %rd1801;
	add.s64 	%rd1809, %rd1808, %rd1806;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6692,%dummy}, %rd1796;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6693}, %rd1796;
	}
	shf.r.wrap.b32 	%r6694, %r6693, %r6692, 19;
	shf.r.wrap.b32 	%r6695, %r6692, %r6693, 19;
	mov.b64 	%rd1810, {%r6695, %r6694};
	shf.l.wrap.b32 	%r6696, %r6692, %r6693, 3;
	shf.l.wrap.b32 	%r6697, %r6693, %r6692, 3;
	mov.b64 	%rd1811, {%r6697, %r6696};
	shr.u64 	%rd1812, %rd1796, 6;
	xor.b64  	%rd1813, %rd1810, %rd1812;
	xor.b64  	%rd1814, %rd1813, %rd1811;
	shf.r.wrap.b32 	%r6698, %r6307, %r6306, 1;
	shf.r.wrap.b32 	%r6699, %r6306, %r6307, 1;
	mov.b64 	%rd1815, {%r6699, %r6698};
	shf.r.wrap.b32 	%r6700, %r6307, %r6306, 8;
	shf.r.wrap.b32 	%r6701, %r6306, %r6307, 8;
	mov.b64 	%rd1816, {%r6701, %r6700};
	shr.u64 	%rd1817, %rd1227, 7;
	xor.b64  	%rd1818, %rd1815, %rd1817;
	xor.b64  	%rd1819, %rd1818, %rd1816;
	add.s64 	%rd1820, %rd1731, %rd1214;
	add.s64 	%rd1821, %rd1820, %rd1814;
	add.s64 	%rd1822, %rd1821, %rd1819;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6702,%dummy}, %rd1809;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6703}, %rd1809;
	}
	shf.r.wrap.b32 	%r6704, %r6703, %r6702, 19;
	shf.r.wrap.b32 	%r6705, %r6702, %r6703, 19;
	mov.b64 	%rd1823, {%r6705, %r6704};
	shf.l.wrap.b32 	%r6706, %r6702, %r6703, 3;
	shf.l.wrap.b32 	%r6707, %r6703, %r6702, 3;
	mov.b64 	%rd1824, {%r6707, %r6706};
	shr.u64 	%rd1825, %rd1809, 6;
	xor.b64  	%rd1826, %rd1823, %rd1825;
	xor.b64  	%rd1827, %rd1826, %rd1824;
	shf.r.wrap.b32 	%r6708, %r6317, %r6316, 1;
	shf.r.wrap.b32 	%r6709, %r6316, %r6317, 1;
	mov.b64 	%rd1828, {%r6709, %r6708};
	shf.r.wrap.b32 	%r6710, %r6317, %r6316, 8;
	shf.r.wrap.b32 	%r6711, %r6316, %r6317, 8;
	mov.b64 	%rd1829, {%r6711, %r6710};
	shr.u64 	%rd1830, %rd1240, 7;
	xor.b64  	%rd1831, %rd1828, %rd1830;
	xor.b64  	%rd1832, %rd1831, %rd1829;
	add.s64 	%rd1833, %rd1744, %rd1227;
	add.s64 	%rd1834, %rd1833, %rd1827;
	add.s64 	%rd1835, %rd1834, %rd1832;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6712,%dummy}, %rd1822;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6713}, %rd1822;
	}
	shf.r.wrap.b32 	%r6714, %r6713, %r6712, 19;
	shf.r.wrap.b32 	%r6715, %r6712, %r6713, 19;
	mov.b64 	%rd1836, {%r6715, %r6714};
	shf.l.wrap.b32 	%r6716, %r6712, %r6713, 3;
	shf.l.wrap.b32 	%r6717, %r6713, %r6712, 3;
	mov.b64 	%rd1837, {%r6717, %r6716};
	shr.u64 	%rd1838, %rd1822, 6;
	xor.b64  	%rd1839, %rd1836, %rd1838;
	xor.b64  	%rd1840, %rd1839, %rd1837;
	shf.r.wrap.b32 	%r6718, %r6327, %r6326, 1;
	shf.r.wrap.b32 	%r6719, %r6326, %r6327, 1;
	mov.b64 	%rd1841, {%r6719, %r6718};
	shf.r.wrap.b32 	%r6720, %r6327, %r6326, 8;
	shf.r.wrap.b32 	%r6721, %r6326, %r6327, 8;
	mov.b64 	%rd1842, {%r6721, %r6720};
	shr.u64 	%rd1843, %rd1253, 7;
	xor.b64  	%rd1844, %rd1841, %rd1843;
	xor.b64  	%rd1845, %rd1844, %rd1842;
	add.s64 	%rd1846, %rd1757, %rd1240;
	add.s64 	%rd1847, %rd1846, %rd1840;
	add.s64 	%rd1848, %rd1847, %rd1845;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6722,%dummy}, %rd1835;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6723}, %rd1835;
	}
	shf.r.wrap.b32 	%r6724, %r6723, %r6722, 19;
	shf.r.wrap.b32 	%r6725, %r6722, %r6723, 19;
	mov.b64 	%rd1849, {%r6725, %r6724};
	shf.l.wrap.b32 	%r6726, %r6722, %r6723, 3;
	shf.l.wrap.b32 	%r6727, %r6723, %r6722, 3;
	mov.b64 	%rd1850, {%r6727, %r6726};
	shr.u64 	%rd1851, %rd1835, 6;
	xor.b64  	%rd1852, %rd1849, %rd1851;
	xor.b64  	%rd1853, %rd1852, %rd1850;
	shf.r.wrap.b32 	%r6728, %r6337, %r6336, 1;
	shf.r.wrap.b32 	%r6729, %r6336, %r6337, 1;
	mov.b64 	%rd1854, {%r6729, %r6728};
	shf.r.wrap.b32 	%r6730, %r6337, %r6336, 8;
	shf.r.wrap.b32 	%r6731, %r6336, %r6337, 8;
	mov.b64 	%rd1855, {%r6731, %r6730};
	shr.u64 	%rd1856, %rd1266, 7;
	xor.b64  	%rd1857, %rd1854, %rd1856;
	xor.b64  	%rd1858, %rd1857, %rd1855;
	add.s64 	%rd1859, %rd1770, %rd1253;
	add.s64 	%rd1860, %rd1859, %rd1853;
	add.s64 	%rd1861, %rd1860, %rd1858;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6732,%dummy}, %rd1848;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6733}, %rd1848;
	}
	shf.r.wrap.b32 	%r6734, %r6733, %r6732, 19;
	shf.r.wrap.b32 	%r6735, %r6732, %r6733, 19;
	mov.b64 	%rd1862, {%r6735, %r6734};
	shf.l.wrap.b32 	%r6736, %r6732, %r6733, 3;
	shf.l.wrap.b32 	%r6737, %r6733, %r6732, 3;
	mov.b64 	%rd1863, {%r6737, %r6736};
	shr.u64 	%rd1864, %rd1848, 6;
	xor.b64  	%rd1865, %rd1862, %rd1864;
	xor.b64  	%rd1866, %rd1865, %rd1863;
	shf.r.wrap.b32 	%r6738, %r6603, %r6602, 1;
	shf.r.wrap.b32 	%r6739, %r6602, %r6603, 1;
	mov.b64 	%rd1867, {%r6739, %r6738};
	shf.r.wrap.b32 	%r6740, %r6603, %r6602, 8;
	shf.r.wrap.b32 	%r6741, %r6602, %r6603, 8;
	mov.b64 	%rd1868, {%r6741, %r6740};
	shr.u64 	%rd1869, %rd1279, 7;
	xor.b64  	%rd1870, %rd1867, %rd1869;
	xor.b64  	%rd1871, %rd1870, %rd1868;
	add.s64 	%rd1872, %rd1783, %rd1266;
	add.s64 	%rd1873, %rd1872, %rd1866;
	add.s64 	%rd1874, %rd1873, %rd1871;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6742,%dummy}, %rd1861;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6743}, %rd1861;
	}
	shf.r.wrap.b32 	%r6744, %r6743, %r6742, 19;
	shf.r.wrap.b32 	%r6745, %r6742, %r6743, 19;
	mov.b64 	%rd1875, {%r6745, %r6744};
	shf.l.wrap.b32 	%r6746, %r6742, %r6743, 3;
	shf.l.wrap.b32 	%r6747, %r6743, %r6742, 3;
	mov.b64 	%rd1876, {%r6747, %r6746};
	shr.u64 	%rd1877, %rd1861, 6;
	xor.b64  	%rd1878, %rd1875, %rd1877;
	xor.b64  	%rd1879, %rd1878, %rd1876;
	shf.r.wrap.b32 	%r6748, %r6613, %r6612, 1;
	shf.r.wrap.b32 	%r6749, %r6612, %r6613, 1;
	mov.b64 	%rd1880, {%r6749, %r6748};
	shf.r.wrap.b32 	%r6750, %r6613, %r6612, 8;
	shf.r.wrap.b32 	%r6751, %r6612, %r6613, 8;
	mov.b64 	%rd1881, {%r6751, %r6750};
	shr.u64 	%rd1882, %rd1292, 7;
	xor.b64  	%rd1883, %rd1880, %rd1882;
	xor.b64  	%rd1884, %rd1883, %rd1881;
	add.s64 	%rd1885, %rd1796, %rd1279;
	add.s64 	%rd1886, %rd1885, %rd1879;
	add.s64 	%rd1887, %rd1886, %rd1884;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6752,%dummy}, %rd1874;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6753}, %rd1874;
	}
	shf.r.wrap.b32 	%r6754, %r6753, %r6752, 19;
	shf.r.wrap.b32 	%r6755, %r6752, %r6753, 19;
	mov.b64 	%rd1888, {%r6755, %r6754};
	shf.l.wrap.b32 	%r6756, %r6752, %r6753, 3;
	shf.l.wrap.b32 	%r6757, %r6753, %r6752, 3;
	mov.b64 	%rd1889, {%r6757, %r6756};
	shr.u64 	%rd1890, %rd1874, 6;
	xor.b64  	%rd1891, %rd1888, %rd1890;
	xor.b64  	%rd1892, %rd1891, %rd1889;
	shf.r.wrap.b32 	%r6758, %r6623, %r6622, 1;
	shf.r.wrap.b32 	%r6759, %r6622, %r6623, 1;
	mov.b64 	%rd1893, {%r6759, %r6758};
	shf.r.wrap.b32 	%r6760, %r6623, %r6622, 8;
	shf.r.wrap.b32 	%r6761, %r6622, %r6623, 8;
	mov.b64 	%rd1894, {%r6761, %r6760};
	shr.u64 	%rd1895, %rd1705, 7;
	xor.b64  	%rd1896, %rd1893, %rd1895;
	xor.b64  	%rd1897, %rd1896, %rd1894;
	add.s64 	%rd1898, %rd1809, %rd1292;
	add.s64 	%rd1899, %rd1898, %rd1892;
	add.s64 	%rd1900, %rd1899, %rd1897;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6762,%dummy}, %rd1681;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6763}, %rd1681;
	}
	shf.r.wrap.b32 	%r6764, %r6763, %r6762, 14;
	shf.r.wrap.b32 	%r6765, %r6762, %r6763, 14;
	mov.b64 	%rd1901, {%r6765, %r6764};
	shf.r.wrap.b32 	%r6766, %r6763, %r6762, 18;
	shf.r.wrap.b32 	%r6767, %r6762, %r6763, 18;
	mov.b64 	%rd1902, {%r6767, %r6766};
	xor.b64  	%rd1903, %rd1902, %rd1901;
	shf.l.wrap.b32 	%r6768, %r6762, %r6763, 23;
	shf.l.wrap.b32 	%r6769, %r6763, %r6762, 23;
	mov.b64 	%rd1904, {%r6769, %r6768};
	xor.b64  	%rd1905, %rd1903, %rd1904;
	xor.b64  	%rd1906, %rd1656, %rd1631;
	and.b64  	%rd1907, %rd1906, %rd1681;
	xor.b64  	%rd1908, %rd1907, %rd1631;
	add.s64 	%rd1909, %rd1908, %rd1606;
	add.s64 	%rd1910, %rd1909, %rd1705;
	ld.const.u64 	%rd1911, [k_sha512+384];
	add.s64 	%rd1912, %rd1910, %rd1911;
	add.s64 	%rd1913, %rd1912, %rd1905;
	add.s64 	%rd1914, %rd1913, %rd1617;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6770,%dummy}, %rd1692;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6771}, %rd1692;
	}
	shf.r.wrap.b32 	%r6772, %r6771, %r6770, 28;
	shf.r.wrap.b32 	%r6773, %r6770, %r6771, 28;
	mov.b64 	%rd1915, {%r6773, %r6772};
	shf.l.wrap.b32 	%r6774, %r6770, %r6771, 30;
	shf.l.wrap.b32 	%r6775, %r6771, %r6770, 30;
	mov.b64 	%rd1916, {%r6775, %r6774};
	xor.b64  	%rd1917, %rd1916, %rd1915;
	shf.l.wrap.b32 	%r6776, %r6770, %r6771, 25;
	shf.l.wrap.b32 	%r6777, %r6771, %r6770, 25;
	mov.b64 	%rd1918, {%r6777, %r6776};
	xor.b64  	%rd1919, %rd1917, %rd1918;
	xor.b64  	%rd1920, %rd1692, %rd1642;
	xor.b64  	%rd1921, %rd1692, %rd1667;
	and.b64  	%rd1922, %rd1921, %rd1920;
	xor.b64  	%rd1923, %rd1922, %rd1692;
	add.s64 	%rd1924, %rd1913, %rd1923;
	add.s64 	%rd1925, %rd1924, %rd1919;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6778,%dummy}, %rd1914;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6779}, %rd1914;
	}
	shf.r.wrap.b32 	%r6780, %r6779, %r6778, 14;
	shf.r.wrap.b32 	%r6781, %r6778, %r6779, 14;
	mov.b64 	%rd1926, {%r6781, %r6780};
	shf.r.wrap.b32 	%r6782, %r6779, %r6778, 18;
	shf.r.wrap.b32 	%r6783, %r6778, %r6779, 18;
	mov.b64 	%rd1927, {%r6783, %r6782};
	xor.b64  	%rd1928, %rd1927, %rd1926;
	shf.l.wrap.b32 	%r6784, %r6778, %r6779, 23;
	shf.l.wrap.b32 	%r6785, %r6779, %r6778, 23;
	mov.b64 	%rd1929, {%r6785, %r6784};
	xor.b64  	%rd1930, %rd1928, %rd1929;
	xor.b64  	%rd1931, %rd1681, %rd1656;
	and.b64  	%rd1932, %rd1914, %rd1931;
	xor.b64  	%rd1933, %rd1932, %rd1656;
	add.s64 	%rd1934, %rd1718, %rd1631;
	ld.const.u64 	%rd1935, [k_sha512+392];
	add.s64 	%rd1936, %rd1934, %rd1935;
	add.s64 	%rd1937, %rd1936, %rd1933;
	add.s64 	%rd1938, %rd1937, %rd1930;
	add.s64 	%rd1939, %rd1938, %rd1642;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6786,%dummy}, %rd1925;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6787}, %rd1925;
	}
	shf.r.wrap.b32 	%r6788, %r6787, %r6786, 28;
	shf.r.wrap.b32 	%r6789, %r6786, %r6787, 28;
	mov.b64 	%rd1940, {%r6789, %r6788};
	shf.l.wrap.b32 	%r6790, %r6786, %r6787, 30;
	shf.l.wrap.b32 	%r6791, %r6787, %r6786, 30;
	mov.b64 	%rd1941, {%r6791, %r6790};
	xor.b64  	%rd1942, %rd1941, %rd1940;
	shf.l.wrap.b32 	%r6792, %r6786, %r6787, 25;
	shf.l.wrap.b32 	%r6793, %r6787, %r6786, 25;
	mov.b64 	%rd1943, {%r6793, %r6792};
	xor.b64  	%rd1944, %rd1942, %rd1943;
	xor.b64  	%rd1945, %rd1925, %rd1667;
	xor.b64  	%rd1946, %rd1925, %rd1692;
	and.b64  	%rd1947, %rd1946, %rd1945;
	xor.b64  	%rd1948, %rd1947, %rd1925;
	add.s64 	%rd1949, %rd1938, %rd1948;
	add.s64 	%rd1950, %rd1949, %rd1944;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6794,%dummy}, %rd1939;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6795}, %rd1939;
	}
	shf.r.wrap.b32 	%r6796, %r6795, %r6794, 14;
	shf.r.wrap.b32 	%r6797, %r6794, %r6795, 14;
	mov.b64 	%rd1951, {%r6797, %r6796};
	shf.r.wrap.b32 	%r6798, %r6795, %r6794, 18;
	shf.r.wrap.b32 	%r6799, %r6794, %r6795, 18;
	mov.b64 	%rd1952, {%r6799, %r6798};
	xor.b64  	%rd1953, %rd1952, %rd1951;
	shf.l.wrap.b32 	%r6800, %r6794, %r6795, 23;
	shf.l.wrap.b32 	%r6801, %r6795, %r6794, 23;
	mov.b64 	%rd1954, {%r6801, %r6800};
	xor.b64  	%rd1955, %rd1953, %rd1954;
	xor.b64  	%rd1956, %rd1914, %rd1681;
	and.b64  	%rd1957, %rd1939, %rd1956;
	xor.b64  	%rd1958, %rd1957, %rd1681;
	add.s64 	%rd1959, %rd1731, %rd1656;
	ld.const.u64 	%rd1960, [k_sha512+400];
	add.s64 	%rd1961, %rd1959, %rd1960;
	add.s64 	%rd1962, %rd1961, %rd1958;
	add.s64 	%rd1963, %rd1962, %rd1955;
	add.s64 	%rd1964, %rd1963, %rd1667;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6802,%dummy}, %rd1950;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6803}, %rd1950;
	}
	shf.r.wrap.b32 	%r6804, %r6803, %r6802, 28;
	shf.r.wrap.b32 	%r6805, %r6802, %r6803, 28;
	mov.b64 	%rd1965, {%r6805, %r6804};
	shf.l.wrap.b32 	%r6806, %r6802, %r6803, 30;
	shf.l.wrap.b32 	%r6807, %r6803, %r6802, 30;
	mov.b64 	%rd1966, {%r6807, %r6806};
	xor.b64  	%rd1967, %rd1966, %rd1965;
	shf.l.wrap.b32 	%r6808, %r6802, %r6803, 25;
	shf.l.wrap.b32 	%r6809, %r6803, %r6802, 25;
	mov.b64 	%rd1968, {%r6809, %r6808};
	xor.b64  	%rd1969, %rd1967, %rd1968;
	xor.b64  	%rd1970, %rd1950, %rd1692;
	xor.b64  	%rd1971, %rd1950, %rd1925;
	and.b64  	%rd1972, %rd1971, %rd1970;
	xor.b64  	%rd1973, %rd1972, %rd1950;
	add.s64 	%rd1974, %rd1963, %rd1973;
	add.s64 	%rd1975, %rd1974, %rd1969;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6810,%dummy}, %rd1964;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6811}, %rd1964;
	}
	shf.r.wrap.b32 	%r6812, %r6811, %r6810, 14;
	shf.r.wrap.b32 	%r6813, %r6810, %r6811, 14;
	mov.b64 	%rd1976, {%r6813, %r6812};
	shf.r.wrap.b32 	%r6814, %r6811, %r6810, 18;
	shf.r.wrap.b32 	%r6815, %r6810, %r6811, 18;
	mov.b64 	%rd1977, {%r6815, %r6814};
	xor.b64  	%rd1978, %rd1977, %rd1976;
	shf.l.wrap.b32 	%r6816, %r6810, %r6811, 23;
	shf.l.wrap.b32 	%r6817, %r6811, %r6810, 23;
	mov.b64 	%rd1979, {%r6817, %r6816};
	xor.b64  	%rd1980, %rd1978, %rd1979;
	xor.b64  	%rd1981, %rd1939, %rd1914;
	and.b64  	%rd1982, %rd1964, %rd1981;
	xor.b64  	%rd1983, %rd1982, %rd1914;
	add.s64 	%rd1984, %rd1744, %rd1681;
	ld.const.u64 	%rd1985, [k_sha512+408];
	add.s64 	%rd1986, %rd1984, %rd1985;
	add.s64 	%rd1987, %rd1986, %rd1983;
	add.s64 	%rd1988, %rd1987, %rd1980;
	add.s64 	%rd1989, %rd1988, %rd1692;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6818,%dummy}, %rd1975;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6819}, %rd1975;
	}
	shf.r.wrap.b32 	%r6820, %r6819, %r6818, 28;
	shf.r.wrap.b32 	%r6821, %r6818, %r6819, 28;
	mov.b64 	%rd1990, {%r6821, %r6820};
	shf.l.wrap.b32 	%r6822, %r6818, %r6819, 30;
	shf.l.wrap.b32 	%r6823, %r6819, %r6818, 30;
	mov.b64 	%rd1991, {%r6823, %r6822};
	xor.b64  	%rd1992, %rd1991, %rd1990;
	shf.l.wrap.b32 	%r6824, %r6818, %r6819, 25;
	shf.l.wrap.b32 	%r6825, %r6819, %r6818, 25;
	mov.b64 	%rd1993, {%r6825, %r6824};
	xor.b64  	%rd1994, %rd1992, %rd1993;
	xor.b64  	%rd1995, %rd1975, %rd1925;
	xor.b64  	%rd1996, %rd1975, %rd1950;
	and.b64  	%rd1997, %rd1996, %rd1995;
	xor.b64  	%rd1998, %rd1997, %rd1975;
	add.s64 	%rd1999, %rd1988, %rd1998;
	add.s64 	%rd2000, %rd1999, %rd1994;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6826,%dummy}, %rd1989;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6827}, %rd1989;
	}
	shf.r.wrap.b32 	%r6828, %r6827, %r6826, 14;
	shf.r.wrap.b32 	%r6829, %r6826, %r6827, 14;
	mov.b64 	%rd2001, {%r6829, %r6828};
	shf.r.wrap.b32 	%r6830, %r6827, %r6826, 18;
	shf.r.wrap.b32 	%r6831, %r6826, %r6827, 18;
	mov.b64 	%rd2002, {%r6831, %r6830};
	xor.b64  	%rd2003, %rd2002, %rd2001;
	shf.l.wrap.b32 	%r6832, %r6826, %r6827, 23;
	shf.l.wrap.b32 	%r6833, %r6827, %r6826, 23;
	mov.b64 	%rd2004, {%r6833, %r6832};
	xor.b64  	%rd2005, %rd2003, %rd2004;
	xor.b64  	%rd2006, %rd1964, %rd1939;
	and.b64  	%rd2007, %rd1989, %rd2006;
	xor.b64  	%rd2008, %rd2007, %rd1939;
	add.s64 	%rd2009, %rd1914, %rd1757;
	ld.const.u64 	%rd2010, [k_sha512+416];
	add.s64 	%rd2011, %rd2009, %rd2010;
	add.s64 	%rd2012, %rd2011, %rd2008;
	add.s64 	%rd2013, %rd2012, %rd2005;
	add.s64 	%rd2014, %rd2013, %rd1925;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6834,%dummy}, %rd2000;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6835}, %rd2000;
	}
	shf.r.wrap.b32 	%r6836, %r6835, %r6834, 28;
	shf.r.wrap.b32 	%r6837, %r6834, %r6835, 28;
	mov.b64 	%rd2015, {%r6837, %r6836};
	shf.l.wrap.b32 	%r6838, %r6834, %r6835, 30;
	shf.l.wrap.b32 	%r6839, %r6835, %r6834, 30;
	mov.b64 	%rd2016, {%r6839, %r6838};
	xor.b64  	%rd2017, %rd2016, %rd2015;
	shf.l.wrap.b32 	%r6840, %r6834, %r6835, 25;
	shf.l.wrap.b32 	%r6841, %r6835, %r6834, 25;
	mov.b64 	%rd2018, {%r6841, %r6840};
	xor.b64  	%rd2019, %rd2017, %rd2018;
	xor.b64  	%rd2020, %rd2000, %rd1950;
	xor.b64  	%rd2021, %rd2000, %rd1975;
	and.b64  	%rd2022, %rd2021, %rd2020;
	xor.b64  	%rd2023, %rd2022, %rd2000;
	add.s64 	%rd2024, %rd2013, %rd2023;
	add.s64 	%rd2025, %rd2024, %rd2019;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6842,%dummy}, %rd2014;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6843}, %rd2014;
	}
	shf.r.wrap.b32 	%r6844, %r6843, %r6842, 14;
	shf.r.wrap.b32 	%r6845, %r6842, %r6843, 14;
	mov.b64 	%rd2026, {%r6845, %r6844};
	shf.r.wrap.b32 	%r6846, %r6843, %r6842, 18;
	shf.r.wrap.b32 	%r6847, %r6842, %r6843, 18;
	mov.b64 	%rd2027, {%r6847, %r6846};
	xor.b64  	%rd2028, %rd2027, %rd2026;
	shf.l.wrap.b32 	%r6848, %r6842, %r6843, 23;
	shf.l.wrap.b32 	%r6849, %r6843, %r6842, 23;
	mov.b64 	%rd2029, {%r6849, %r6848};
	xor.b64  	%rd2030, %rd2028, %rd2029;
	xor.b64  	%rd2031, %rd1989, %rd1964;
	and.b64  	%rd2032, %rd2014, %rd2031;
	xor.b64  	%rd2033, %rd2032, %rd1964;
	add.s64 	%rd2034, %rd1939, %rd1770;
	ld.const.u64 	%rd2035, [k_sha512+424];
	add.s64 	%rd2036, %rd2034, %rd2035;
	add.s64 	%rd2037, %rd2036, %rd2033;
	add.s64 	%rd2038, %rd2037, %rd2030;
	add.s64 	%rd2039, %rd2038, %rd1950;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6850,%dummy}, %rd2025;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6851}, %rd2025;
	}
	shf.r.wrap.b32 	%r6852, %r6851, %r6850, 28;
	shf.r.wrap.b32 	%r6853, %r6850, %r6851, 28;
	mov.b64 	%rd2040, {%r6853, %r6852};
	shf.l.wrap.b32 	%r6854, %r6850, %r6851, 30;
	shf.l.wrap.b32 	%r6855, %r6851, %r6850, 30;
	mov.b64 	%rd2041, {%r6855, %r6854};
	xor.b64  	%rd2042, %rd2041, %rd2040;
	shf.l.wrap.b32 	%r6856, %r6850, %r6851, 25;
	shf.l.wrap.b32 	%r6857, %r6851, %r6850, 25;
	mov.b64 	%rd2043, {%r6857, %r6856};
	xor.b64  	%rd2044, %rd2042, %rd2043;
	xor.b64  	%rd2045, %rd2025, %rd1975;
	xor.b64  	%rd2046, %rd2025, %rd2000;
	and.b64  	%rd2047, %rd2046, %rd2045;
	xor.b64  	%rd2048, %rd2047, %rd2025;
	add.s64 	%rd2049, %rd2038, %rd2048;
	add.s64 	%rd2050, %rd2049, %rd2044;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6858,%dummy}, %rd2039;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6859}, %rd2039;
	}
	shf.r.wrap.b32 	%r6860, %r6859, %r6858, 14;
	shf.r.wrap.b32 	%r6861, %r6858, %r6859, 14;
	mov.b64 	%rd2051, {%r6861, %r6860};
	shf.r.wrap.b32 	%r6862, %r6859, %r6858, 18;
	shf.r.wrap.b32 	%r6863, %r6858, %r6859, 18;
	mov.b64 	%rd2052, {%r6863, %r6862};
	xor.b64  	%rd2053, %rd2052, %rd2051;
	shf.l.wrap.b32 	%r6864, %r6858, %r6859, 23;
	shf.l.wrap.b32 	%r6865, %r6859, %r6858, 23;
	mov.b64 	%rd2054, {%r6865, %r6864};
	xor.b64  	%rd2055, %rd2053, %rd2054;
	xor.b64  	%rd2056, %rd2014, %rd1989;
	and.b64  	%rd2057, %rd2039, %rd2056;
	xor.b64  	%rd2058, %rd2057, %rd1989;
	add.s64 	%rd2059, %rd1964, %rd1783;
	ld.const.u64 	%rd2060, [k_sha512+432];
	add.s64 	%rd2061, %rd2059, %rd2060;
	add.s64 	%rd2062, %rd2061, %rd2058;
	add.s64 	%rd2063, %rd2062, %rd2055;
	add.s64 	%rd2064, %rd2063, %rd1975;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6866,%dummy}, %rd2050;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6867}, %rd2050;
	}
	shf.r.wrap.b32 	%r6868, %r6867, %r6866, 28;
	shf.r.wrap.b32 	%r6869, %r6866, %r6867, 28;
	mov.b64 	%rd2065, {%r6869, %r6868};
	shf.l.wrap.b32 	%r6870, %r6866, %r6867, 30;
	shf.l.wrap.b32 	%r6871, %r6867, %r6866, 30;
	mov.b64 	%rd2066, {%r6871, %r6870};
	xor.b64  	%rd2067, %rd2066, %rd2065;
	shf.l.wrap.b32 	%r6872, %r6866, %r6867, 25;
	shf.l.wrap.b32 	%r6873, %r6867, %r6866, 25;
	mov.b64 	%rd2068, {%r6873, %r6872};
	xor.b64  	%rd2069, %rd2067, %rd2068;
	xor.b64  	%rd2070, %rd2050, %rd2000;
	xor.b64  	%rd2071, %rd2050, %rd2025;
	and.b64  	%rd2072, %rd2071, %rd2070;
	xor.b64  	%rd2073, %rd2072, %rd2050;
	add.s64 	%rd2074, %rd2063, %rd2073;
	add.s64 	%rd2075, %rd2074, %rd2069;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6874,%dummy}, %rd2064;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6875}, %rd2064;
	}
	shf.r.wrap.b32 	%r6876, %r6875, %r6874, 14;
	shf.r.wrap.b32 	%r6877, %r6874, %r6875, 14;
	mov.b64 	%rd2076, {%r6877, %r6876};
	shf.r.wrap.b32 	%r6878, %r6875, %r6874, 18;
	shf.r.wrap.b32 	%r6879, %r6874, %r6875, 18;
	mov.b64 	%rd2077, {%r6879, %r6878};
	xor.b64  	%rd2078, %rd2077, %rd2076;
	shf.l.wrap.b32 	%r6880, %r6874, %r6875, 23;
	shf.l.wrap.b32 	%r6881, %r6875, %r6874, 23;
	mov.b64 	%rd2079, {%r6881, %r6880};
	xor.b64  	%rd2080, %rd2078, %rd2079;
	xor.b64  	%rd2081, %rd2039, %rd2014;
	and.b64  	%rd2082, %rd2064, %rd2081;
	xor.b64  	%rd2083, %rd2082, %rd2014;
	add.s64 	%rd2084, %rd1989, %rd1796;
	ld.const.u64 	%rd2085, [k_sha512+440];
	add.s64 	%rd2086, %rd2084, %rd2085;
	add.s64 	%rd2087, %rd2086, %rd2083;
	add.s64 	%rd2088, %rd2087, %rd2080;
	add.s64 	%rd2089, %rd2088, %rd2000;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6882,%dummy}, %rd2075;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6883}, %rd2075;
	}
	shf.r.wrap.b32 	%r6884, %r6883, %r6882, 28;
	shf.r.wrap.b32 	%r6885, %r6882, %r6883, 28;
	mov.b64 	%rd2090, {%r6885, %r6884};
	shf.l.wrap.b32 	%r6886, %r6882, %r6883, 30;
	shf.l.wrap.b32 	%r6887, %r6883, %r6882, 30;
	mov.b64 	%rd2091, {%r6887, %r6886};
	xor.b64  	%rd2092, %rd2091, %rd2090;
	shf.l.wrap.b32 	%r6888, %r6882, %r6883, 25;
	shf.l.wrap.b32 	%r6889, %r6883, %r6882, 25;
	mov.b64 	%rd2093, {%r6889, %r6888};
	xor.b64  	%rd2094, %rd2092, %rd2093;
	xor.b64  	%rd2095, %rd2075, %rd2025;
	xor.b64  	%rd2096, %rd2075, %rd2050;
	and.b64  	%rd2097, %rd2096, %rd2095;
	xor.b64  	%rd2098, %rd2097, %rd2075;
	add.s64 	%rd2099, %rd2088, %rd2098;
	add.s64 	%rd2100, %rd2099, %rd2094;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6890,%dummy}, %rd2089;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6891}, %rd2089;
	}
	shf.r.wrap.b32 	%r6892, %r6891, %r6890, 14;
	shf.r.wrap.b32 	%r6893, %r6890, %r6891, 14;
	mov.b64 	%rd2101, {%r6893, %r6892};
	shf.r.wrap.b32 	%r6894, %r6891, %r6890, 18;
	shf.r.wrap.b32 	%r6895, %r6890, %r6891, 18;
	mov.b64 	%rd2102, {%r6895, %r6894};
	xor.b64  	%rd2103, %rd2102, %rd2101;
	shf.l.wrap.b32 	%r6896, %r6890, %r6891, 23;
	shf.l.wrap.b32 	%r6897, %r6891, %r6890, 23;
	mov.b64 	%rd2104, {%r6897, %r6896};
	xor.b64  	%rd2105, %rd2103, %rd2104;
	xor.b64  	%rd2106, %rd2064, %rd2039;
	and.b64  	%rd2107, %rd2089, %rd2106;
	xor.b64  	%rd2108, %rd2107, %rd2039;
	add.s64 	%rd2109, %rd2014, %rd1809;
	ld.const.u64 	%rd2110, [k_sha512+448];
	add.s64 	%rd2111, %rd2109, %rd2110;
	add.s64 	%rd2112, %rd2111, %rd2108;
	add.s64 	%rd2113, %rd2112, %rd2105;
	add.s64 	%rd2114, %rd2113, %rd2025;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6898,%dummy}, %rd2100;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6899}, %rd2100;
	}
	shf.r.wrap.b32 	%r6900, %r6899, %r6898, 28;
	shf.r.wrap.b32 	%r6901, %r6898, %r6899, 28;
	mov.b64 	%rd2115, {%r6901, %r6900};
	shf.l.wrap.b32 	%r6902, %r6898, %r6899, 30;
	shf.l.wrap.b32 	%r6903, %r6899, %r6898, 30;
	mov.b64 	%rd2116, {%r6903, %r6902};
	xor.b64  	%rd2117, %rd2116, %rd2115;
	shf.l.wrap.b32 	%r6904, %r6898, %r6899, 25;
	shf.l.wrap.b32 	%r6905, %r6899, %r6898, 25;
	mov.b64 	%rd2118, {%r6905, %r6904};
	xor.b64  	%rd2119, %rd2117, %rd2118;
	xor.b64  	%rd2120, %rd2100, %rd2050;
	xor.b64  	%rd2121, %rd2100, %rd2075;
	and.b64  	%rd2122, %rd2121, %rd2120;
	xor.b64  	%rd2123, %rd2122, %rd2100;
	add.s64 	%rd2124, %rd2113, %rd2123;
	add.s64 	%rd2125, %rd2124, %rd2119;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6906,%dummy}, %rd2114;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6907}, %rd2114;
	}
	shf.r.wrap.b32 	%r6908, %r6907, %r6906, 14;
	shf.r.wrap.b32 	%r6909, %r6906, %r6907, 14;
	mov.b64 	%rd2126, {%r6909, %r6908};
	shf.r.wrap.b32 	%r6910, %r6907, %r6906, 18;
	shf.r.wrap.b32 	%r6911, %r6906, %r6907, 18;
	mov.b64 	%rd2127, {%r6911, %r6910};
	xor.b64  	%rd2128, %rd2127, %rd2126;
	shf.l.wrap.b32 	%r6912, %r6906, %r6907, 23;
	shf.l.wrap.b32 	%r6913, %r6907, %r6906, 23;
	mov.b64 	%rd2129, {%r6913, %r6912};
	xor.b64  	%rd2130, %rd2128, %rd2129;
	xor.b64  	%rd2131, %rd2089, %rd2064;
	and.b64  	%rd2132, %rd2114, %rd2131;
	xor.b64  	%rd2133, %rd2132, %rd2064;
	add.s64 	%rd2134, %rd2039, %rd1822;
	ld.const.u64 	%rd2135, [k_sha512+456];
	add.s64 	%rd2136, %rd2134, %rd2135;
	add.s64 	%rd2137, %rd2136, %rd2133;
	add.s64 	%rd2138, %rd2137, %rd2130;
	add.s64 	%rd2139, %rd2138, %rd2050;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6914,%dummy}, %rd2125;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6915}, %rd2125;
	}
	shf.r.wrap.b32 	%r6916, %r6915, %r6914, 28;
	shf.r.wrap.b32 	%r6917, %r6914, %r6915, 28;
	mov.b64 	%rd2140, {%r6917, %r6916};
	shf.l.wrap.b32 	%r6918, %r6914, %r6915, 30;
	shf.l.wrap.b32 	%r6919, %r6915, %r6914, 30;
	mov.b64 	%rd2141, {%r6919, %r6918};
	xor.b64  	%rd2142, %rd2141, %rd2140;
	shf.l.wrap.b32 	%r6920, %r6914, %r6915, 25;
	shf.l.wrap.b32 	%r6921, %r6915, %r6914, 25;
	mov.b64 	%rd2143, {%r6921, %r6920};
	xor.b64  	%rd2144, %rd2142, %rd2143;
	xor.b64  	%rd2145, %rd2125, %rd2075;
	xor.b64  	%rd2146, %rd2125, %rd2100;
	and.b64  	%rd2147, %rd2146, %rd2145;
	xor.b64  	%rd2148, %rd2147, %rd2125;
	add.s64 	%rd2149, %rd2138, %rd2148;
	add.s64 	%rd2150, %rd2149, %rd2144;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6922,%dummy}, %rd2139;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6923}, %rd2139;
	}
	shf.r.wrap.b32 	%r6924, %r6923, %r6922, 14;
	shf.r.wrap.b32 	%r6925, %r6922, %r6923, 14;
	mov.b64 	%rd2151, {%r6925, %r6924};
	shf.r.wrap.b32 	%r6926, %r6923, %r6922, 18;
	shf.r.wrap.b32 	%r6927, %r6922, %r6923, 18;
	mov.b64 	%rd2152, {%r6927, %r6926};
	xor.b64  	%rd2153, %rd2152, %rd2151;
	shf.l.wrap.b32 	%r6928, %r6922, %r6923, 23;
	shf.l.wrap.b32 	%r6929, %r6923, %r6922, 23;
	mov.b64 	%rd2154, {%r6929, %r6928};
	xor.b64  	%rd2155, %rd2153, %rd2154;
	xor.b64  	%rd2156, %rd2114, %rd2089;
	and.b64  	%rd2157, %rd2139, %rd2156;
	xor.b64  	%rd2158, %rd2157, %rd2089;
	add.s64 	%rd2159, %rd2064, %rd1835;
	ld.const.u64 	%rd2160, [k_sha512+464];
	add.s64 	%rd2161, %rd2159, %rd2160;
	add.s64 	%rd2162, %rd2161, %rd2158;
	add.s64 	%rd2163, %rd2162, %rd2155;
	add.s64 	%rd2164, %rd2163, %rd2075;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6930,%dummy}, %rd2150;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6931}, %rd2150;
	}
	shf.r.wrap.b32 	%r6932, %r6931, %r6930, 28;
	shf.r.wrap.b32 	%r6933, %r6930, %r6931, 28;
	mov.b64 	%rd2165, {%r6933, %r6932};
	shf.l.wrap.b32 	%r6934, %r6930, %r6931, 30;
	shf.l.wrap.b32 	%r6935, %r6931, %r6930, 30;
	mov.b64 	%rd2166, {%r6935, %r6934};
	xor.b64  	%rd2167, %rd2166, %rd2165;
	shf.l.wrap.b32 	%r6936, %r6930, %r6931, 25;
	shf.l.wrap.b32 	%r6937, %r6931, %r6930, 25;
	mov.b64 	%rd2168, {%r6937, %r6936};
	xor.b64  	%rd2169, %rd2167, %rd2168;
	xor.b64  	%rd2170, %rd2150, %rd2100;
	xor.b64  	%rd2171, %rd2150, %rd2125;
	and.b64  	%rd2172, %rd2171, %rd2170;
	xor.b64  	%rd2173, %rd2172, %rd2150;
	add.s64 	%rd2174, %rd2163, %rd2173;
	add.s64 	%rd2175, %rd2174, %rd2169;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6938,%dummy}, %rd2164;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6939}, %rd2164;
	}
	shf.r.wrap.b32 	%r6940, %r6939, %r6938, 14;
	shf.r.wrap.b32 	%r6941, %r6938, %r6939, 14;
	mov.b64 	%rd2176, {%r6941, %r6940};
	shf.r.wrap.b32 	%r6942, %r6939, %r6938, 18;
	shf.r.wrap.b32 	%r6943, %r6938, %r6939, 18;
	mov.b64 	%rd2177, {%r6943, %r6942};
	xor.b64  	%rd2178, %rd2177, %rd2176;
	shf.l.wrap.b32 	%r6944, %r6938, %r6939, 23;
	shf.l.wrap.b32 	%r6945, %r6939, %r6938, 23;
	mov.b64 	%rd2179, {%r6945, %r6944};
	xor.b64  	%rd2180, %rd2178, %rd2179;
	xor.b64  	%rd2181, %rd2139, %rd2114;
	and.b64  	%rd2182, %rd2164, %rd2181;
	xor.b64  	%rd2183, %rd2182, %rd2114;
	add.s64 	%rd2184, %rd2089, %rd1848;
	ld.const.u64 	%rd2185, [k_sha512+472];
	add.s64 	%rd2186, %rd2184, %rd2185;
	add.s64 	%rd2187, %rd2186, %rd2183;
	add.s64 	%rd2188, %rd2187, %rd2180;
	add.s64 	%rd2189, %rd2188, %rd2100;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6946,%dummy}, %rd2175;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6947}, %rd2175;
	}
	shf.r.wrap.b32 	%r6948, %r6947, %r6946, 28;
	shf.r.wrap.b32 	%r6949, %r6946, %r6947, 28;
	mov.b64 	%rd2190, {%r6949, %r6948};
	shf.l.wrap.b32 	%r6950, %r6946, %r6947, 30;
	shf.l.wrap.b32 	%r6951, %r6947, %r6946, 30;
	mov.b64 	%rd2191, {%r6951, %r6950};
	xor.b64  	%rd2192, %rd2191, %rd2190;
	shf.l.wrap.b32 	%r6952, %r6946, %r6947, 25;
	shf.l.wrap.b32 	%r6953, %r6947, %r6946, 25;
	mov.b64 	%rd2193, {%r6953, %r6952};
	xor.b64  	%rd2194, %rd2192, %rd2193;
	xor.b64  	%rd2195, %rd2175, %rd2125;
	xor.b64  	%rd2196, %rd2175, %rd2150;
	and.b64  	%rd2197, %rd2196, %rd2195;
	xor.b64  	%rd2198, %rd2197, %rd2175;
	add.s64 	%rd2199, %rd2188, %rd2198;
	add.s64 	%rd2200, %rd2199, %rd2194;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6954,%dummy}, %rd2189;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6955}, %rd2189;
	}
	shf.r.wrap.b32 	%r6956, %r6955, %r6954, 14;
	shf.r.wrap.b32 	%r6957, %r6954, %r6955, 14;
	mov.b64 	%rd2201, {%r6957, %r6956};
	shf.r.wrap.b32 	%r6958, %r6955, %r6954, 18;
	shf.r.wrap.b32 	%r6959, %r6954, %r6955, 18;
	mov.b64 	%rd2202, {%r6959, %r6958};
	xor.b64  	%rd2203, %rd2202, %rd2201;
	shf.l.wrap.b32 	%r6960, %r6954, %r6955, 23;
	shf.l.wrap.b32 	%r6961, %r6955, %r6954, 23;
	mov.b64 	%rd2204, {%r6961, %r6960};
	xor.b64  	%rd2205, %rd2203, %rd2204;
	xor.b64  	%rd2206, %rd2164, %rd2139;
	and.b64  	%rd2207, %rd2189, %rd2206;
	xor.b64  	%rd2208, %rd2207, %rd2139;
	add.s64 	%rd2209, %rd2114, %rd1861;
	ld.const.u64 	%rd2210, [k_sha512+480];
	add.s64 	%rd2211, %rd2209, %rd2210;
	add.s64 	%rd2212, %rd2211, %rd2208;
	add.s64 	%rd2213, %rd2212, %rd2205;
	add.s64 	%rd2214, %rd2213, %rd2125;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6962,%dummy}, %rd2200;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6963}, %rd2200;
	}
	shf.r.wrap.b32 	%r6964, %r6963, %r6962, 28;
	shf.r.wrap.b32 	%r6965, %r6962, %r6963, 28;
	mov.b64 	%rd2215, {%r6965, %r6964};
	shf.l.wrap.b32 	%r6966, %r6962, %r6963, 30;
	shf.l.wrap.b32 	%r6967, %r6963, %r6962, 30;
	mov.b64 	%rd2216, {%r6967, %r6966};
	xor.b64  	%rd2217, %rd2216, %rd2215;
	shf.l.wrap.b32 	%r6968, %r6962, %r6963, 25;
	shf.l.wrap.b32 	%r6969, %r6963, %r6962, 25;
	mov.b64 	%rd2218, {%r6969, %r6968};
	xor.b64  	%rd2219, %rd2217, %rd2218;
	xor.b64  	%rd2220, %rd2200, %rd2150;
	xor.b64  	%rd2221, %rd2200, %rd2175;
	and.b64  	%rd2222, %rd2221, %rd2220;
	xor.b64  	%rd2223, %rd2222, %rd2200;
	add.s64 	%rd2224, %rd2213, %rd2223;
	add.s64 	%rd2225, %rd2224, %rd2219;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6970,%dummy}, %rd2214;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6971}, %rd2214;
	}
	shf.r.wrap.b32 	%r6972, %r6971, %r6970, 14;
	shf.r.wrap.b32 	%r6973, %r6970, %r6971, 14;
	mov.b64 	%rd2226, {%r6973, %r6972};
	shf.r.wrap.b32 	%r6974, %r6971, %r6970, 18;
	shf.r.wrap.b32 	%r6975, %r6970, %r6971, 18;
	mov.b64 	%rd2227, {%r6975, %r6974};
	xor.b64  	%rd2228, %rd2227, %rd2226;
	shf.l.wrap.b32 	%r6976, %r6970, %r6971, 23;
	shf.l.wrap.b32 	%r6977, %r6971, %r6970, 23;
	mov.b64 	%rd2229, {%r6977, %r6976};
	xor.b64  	%rd2230, %rd2228, %rd2229;
	xor.b64  	%rd2231, %rd2189, %rd2164;
	and.b64  	%rd2232, %rd2214, %rd2231;
	xor.b64  	%rd2233, %rd2232, %rd2164;
	add.s64 	%rd2234, %rd2139, %rd1874;
	ld.const.u64 	%rd2235, [k_sha512+488];
	add.s64 	%rd2236, %rd2234, %rd2235;
	add.s64 	%rd2237, %rd2236, %rd2233;
	add.s64 	%rd2238, %rd2237, %rd2230;
	add.s64 	%rd2239, %rd2238, %rd2150;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6978,%dummy}, %rd2225;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6979}, %rd2225;
	}
	shf.r.wrap.b32 	%r6980, %r6979, %r6978, 28;
	shf.r.wrap.b32 	%r6981, %r6978, %r6979, 28;
	mov.b64 	%rd2240, {%r6981, %r6980};
	shf.l.wrap.b32 	%r6982, %r6978, %r6979, 30;
	shf.l.wrap.b32 	%r6983, %r6979, %r6978, 30;
	mov.b64 	%rd2241, {%r6983, %r6982};
	xor.b64  	%rd2242, %rd2241, %rd2240;
	shf.l.wrap.b32 	%r6984, %r6978, %r6979, 25;
	shf.l.wrap.b32 	%r6985, %r6979, %r6978, 25;
	mov.b64 	%rd2243, {%r6985, %r6984};
	xor.b64  	%rd2244, %rd2242, %rd2243;
	xor.b64  	%rd2245, %rd2225, %rd2175;
	xor.b64  	%rd2246, %rd2225, %rd2200;
	and.b64  	%rd2247, %rd2246, %rd2245;
	xor.b64  	%rd2248, %rd2247, %rd2225;
	add.s64 	%rd2249, %rd2238, %rd2248;
	add.s64 	%rd2250, %rd2249, %rd2244;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6986,%dummy}, %rd2239;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6987}, %rd2239;
	}
	shf.r.wrap.b32 	%r6988, %r6987, %r6986, 14;
	shf.r.wrap.b32 	%r6989, %r6986, %r6987, 14;
	mov.b64 	%rd2251, {%r6989, %r6988};
	shf.r.wrap.b32 	%r6990, %r6987, %r6986, 18;
	shf.r.wrap.b32 	%r6991, %r6986, %r6987, 18;
	mov.b64 	%rd2252, {%r6991, %r6990};
	xor.b64  	%rd2253, %rd2252, %rd2251;
	shf.l.wrap.b32 	%r6992, %r6986, %r6987, 23;
	shf.l.wrap.b32 	%r6993, %r6987, %r6986, 23;
	mov.b64 	%rd2254, {%r6993, %r6992};
	xor.b64  	%rd2255, %rd2253, %rd2254;
	xor.b64  	%rd2256, %rd2214, %rd2189;
	and.b64  	%rd2257, %rd2239, %rd2256;
	xor.b64  	%rd2258, %rd2257, %rd2189;
	add.s64 	%rd2259, %rd2164, %rd1887;
	ld.const.u64 	%rd2260, [k_sha512+496];
	add.s64 	%rd2261, %rd2259, %rd2260;
	add.s64 	%rd2262, %rd2261, %rd2258;
	add.s64 	%rd2263, %rd2262, %rd2255;
	add.s64 	%rd2264, %rd2263, %rd2175;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6994,%dummy}, %rd2250;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6995}, %rd2250;
	}
	shf.r.wrap.b32 	%r6996, %r6995, %r6994, 28;
	shf.r.wrap.b32 	%r6997, %r6994, %r6995, 28;
	mov.b64 	%rd2265, {%r6997, %r6996};
	shf.l.wrap.b32 	%r6998, %r6994, %r6995, 30;
	shf.l.wrap.b32 	%r6999, %r6995, %r6994, 30;
	mov.b64 	%rd2266, {%r6999, %r6998};
	xor.b64  	%rd2267, %rd2266, %rd2265;
	shf.l.wrap.b32 	%r7000, %r6994, %r6995, 25;
	shf.l.wrap.b32 	%r7001, %r6995, %r6994, 25;
	mov.b64 	%rd2268, {%r7001, %r7000};
	xor.b64  	%rd2269, %rd2267, %rd2268;
	xor.b64  	%rd2270, %rd2250, %rd2200;
	xor.b64  	%rd2271, %rd2250, %rd2225;
	and.b64  	%rd2272, %rd2271, %rd2270;
	xor.b64  	%rd2273, %rd2272, %rd2250;
	add.s64 	%rd2274, %rd2263, %rd2273;
	add.s64 	%rd2275, %rd2274, %rd2269;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7002,%dummy}, %rd2264;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7003}, %rd2264;
	}
	shf.r.wrap.b32 	%r7004, %r7003, %r7002, 14;
	shf.r.wrap.b32 	%r7005, %r7002, %r7003, 14;
	mov.b64 	%rd2276, {%r7005, %r7004};
	shf.r.wrap.b32 	%r7006, %r7003, %r7002, 18;
	shf.r.wrap.b32 	%r7007, %r7002, %r7003, 18;
	mov.b64 	%rd2277, {%r7007, %r7006};
	xor.b64  	%rd2278, %rd2277, %rd2276;
	shf.l.wrap.b32 	%r7008, %r7002, %r7003, 23;
	shf.l.wrap.b32 	%r7009, %r7003, %r7002, 23;
	mov.b64 	%rd2279, {%r7009, %r7008};
	xor.b64  	%rd2280, %rd2278, %rd2279;
	xor.b64  	%rd2281, %rd2239, %rd2214;
	and.b64  	%rd2282, %rd2264, %rd2281;
	xor.b64  	%rd2283, %rd2282, %rd2214;
	add.s64 	%rd2284, %rd2189, %rd1900;
	ld.const.u64 	%rd2285, [k_sha512+504];
	add.s64 	%rd2286, %rd2284, %rd2285;
	add.s64 	%rd2287, %rd2286, %rd2283;
	add.s64 	%rd2288, %rd2287, %rd2280;
	add.s64 	%rd2289, %rd2288, %rd2200;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7010,%dummy}, %rd2275;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7011}, %rd2275;
	}
	shf.r.wrap.b32 	%r7012, %r7011, %r7010, 28;
	shf.r.wrap.b32 	%r7013, %r7010, %r7011, 28;
	mov.b64 	%rd2290, {%r7013, %r7012};
	shf.l.wrap.b32 	%r7014, %r7010, %r7011, 30;
	shf.l.wrap.b32 	%r7015, %r7011, %r7010, 30;
	mov.b64 	%rd2291, {%r7015, %r7014};
	xor.b64  	%rd2292, %rd2291, %rd2290;
	shf.l.wrap.b32 	%r7016, %r7010, %r7011, 25;
	shf.l.wrap.b32 	%r7017, %r7011, %r7010, 25;
	mov.b64 	%rd2293, {%r7017, %r7016};
	xor.b64  	%rd2294, %rd2292, %rd2293;
	xor.b64  	%rd2295, %rd2275, %rd2225;
	xor.b64  	%rd2296, %rd2275, %rd2250;
	and.b64  	%rd2297, %rd2296, %rd2295;
	xor.b64  	%rd2298, %rd2297, %rd2275;
	add.s64 	%rd2299, %rd2288, %rd2298;
	add.s64 	%rd2300, %rd2299, %rd2294;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7018,%dummy}, %rd1887;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7019}, %rd1887;
	}
	shf.r.wrap.b32 	%r7020, %r7019, %r7018, 19;
	shf.r.wrap.b32 	%r7021, %r7018, %r7019, 19;
	mov.b64 	%rd2301, {%r7021, %r7020};
	shf.l.wrap.b32 	%r7022, %r7018, %r7019, 3;
	shf.l.wrap.b32 	%r7023, %r7019, %r7018, 3;
	mov.b64 	%rd2302, {%r7023, %r7022};
	shr.u64 	%rd2303, %rd1887, 6;
	xor.b64  	%rd2304, %rd2301, %rd2303;
	xor.b64  	%rd2305, %rd2304, %rd2302;
	shf.r.wrap.b32 	%r7024, %r6633, %r6632, 1;
	shf.r.wrap.b32 	%r7025, %r6632, %r6633, 1;
	mov.b64 	%rd2306, {%r7025, %r7024};
	shf.r.wrap.b32 	%r7026, %r6633, %r6632, 8;
	shf.r.wrap.b32 	%r7027, %r6632, %r6633, 8;
	mov.b64 	%rd2307, {%r7027, %r7026};
	shr.u64 	%rd2308, %rd1718, 7;
	xor.b64  	%rd2309, %rd2306, %rd2308;
	xor.b64  	%rd2310, %rd2309, %rd2307;
	add.s64 	%rd2311, %rd1822, %rd1705;
	add.s64 	%rd2312, %rd2311, %rd2305;
	add.s64 	%rd2313, %rd2312, %rd2310;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7028,%dummy}, %rd1900;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7029}, %rd1900;
	}
	shf.r.wrap.b32 	%r7030, %r7029, %r7028, 19;
	shf.r.wrap.b32 	%r7031, %r7028, %r7029, 19;
	mov.b64 	%rd2314, {%r7031, %r7030};
	shf.l.wrap.b32 	%r7032, %r7028, %r7029, 3;
	shf.l.wrap.b32 	%r7033, %r7029, %r7028, 3;
	mov.b64 	%rd2315, {%r7033, %r7032};
	shr.u64 	%rd2316, %rd1900, 6;
	xor.b64  	%rd2317, %rd2314, %rd2316;
	xor.b64  	%rd2318, %rd2317, %rd2315;
	shf.r.wrap.b32 	%r7034, %r6643, %r6642, 1;
	shf.r.wrap.b32 	%r7035, %r6642, %r6643, 1;
	mov.b64 	%rd2319, {%r7035, %r7034};
	shf.r.wrap.b32 	%r7036, %r6643, %r6642, 8;
	shf.r.wrap.b32 	%r7037, %r6642, %r6643, 8;
	mov.b64 	%rd2320, {%r7037, %r7036};
	shr.u64 	%rd2321, %rd1731, 7;
	xor.b64  	%rd2322, %rd2319, %rd2321;
	xor.b64  	%rd2323, %rd2322, %rd2320;
	add.s64 	%rd2324, %rd1835, %rd1718;
	add.s64 	%rd2325, %rd2324, %rd2318;
	add.s64 	%rd2326, %rd2325, %rd2323;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7038,%dummy}, %rd2313;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7039}, %rd2313;
	}
	shf.r.wrap.b32 	%r7040, %r7039, %r7038, 19;
	shf.r.wrap.b32 	%r7041, %r7038, %r7039, 19;
	mov.b64 	%rd2327, {%r7041, %r7040};
	shf.l.wrap.b32 	%r7042, %r7038, %r7039, 3;
	shf.l.wrap.b32 	%r7043, %r7039, %r7038, 3;
	mov.b64 	%rd2328, {%r7043, %r7042};
	shr.u64 	%rd2329, %rd2313, 6;
	xor.b64  	%rd2330, %rd2327, %rd2329;
	xor.b64  	%rd2331, %rd2330, %rd2328;
	shf.r.wrap.b32 	%r7044, %r6653, %r6652, 1;
	shf.r.wrap.b32 	%r7045, %r6652, %r6653, 1;
	mov.b64 	%rd2332, {%r7045, %r7044};
	shf.r.wrap.b32 	%r7046, %r6653, %r6652, 8;
	shf.r.wrap.b32 	%r7047, %r6652, %r6653, 8;
	mov.b64 	%rd2333, {%r7047, %r7046};
	shr.u64 	%rd2334, %rd1744, 7;
	xor.b64  	%rd2335, %rd2332, %rd2334;
	xor.b64  	%rd2336, %rd2335, %rd2333;
	add.s64 	%rd2337, %rd1848, %rd1731;
	add.s64 	%rd2338, %rd2337, %rd2331;
	add.s64 	%rd2339, %rd2338, %rd2336;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7048,%dummy}, %rd2326;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7049}, %rd2326;
	}
	shf.r.wrap.b32 	%r7050, %r7049, %r7048, 19;
	shf.r.wrap.b32 	%r7051, %r7048, %r7049, 19;
	mov.b64 	%rd2340, {%r7051, %r7050};
	shf.l.wrap.b32 	%r7052, %r7048, %r7049, 3;
	shf.l.wrap.b32 	%r7053, %r7049, %r7048, 3;
	mov.b64 	%rd2341, {%r7053, %r7052};
	shr.u64 	%rd2342, %rd2326, 6;
	xor.b64  	%rd2343, %rd2340, %rd2342;
	xor.b64  	%rd2344, %rd2343, %rd2341;
	shf.r.wrap.b32 	%r7054, %r6663, %r6662, 1;
	shf.r.wrap.b32 	%r7055, %r6662, %r6663, 1;
	mov.b64 	%rd2345, {%r7055, %r7054};
	shf.r.wrap.b32 	%r7056, %r6663, %r6662, 8;
	shf.r.wrap.b32 	%r7057, %r6662, %r6663, 8;
	mov.b64 	%rd2346, {%r7057, %r7056};
	shr.u64 	%rd2347, %rd1757, 7;
	xor.b64  	%rd2348, %rd2345, %rd2347;
	xor.b64  	%rd2349, %rd2348, %rd2346;
	add.s64 	%rd2350, %rd1861, %rd1744;
	add.s64 	%rd2351, %rd2350, %rd2344;
	add.s64 	%rd2352, %rd2351, %rd2349;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7058,%dummy}, %rd2339;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7059}, %rd2339;
	}
	shf.r.wrap.b32 	%r7060, %r7059, %r7058, 19;
	shf.r.wrap.b32 	%r7061, %r7058, %r7059, 19;
	mov.b64 	%rd2353, {%r7061, %r7060};
	shf.l.wrap.b32 	%r7062, %r7058, %r7059, 3;
	shf.l.wrap.b32 	%r7063, %r7059, %r7058, 3;
	mov.b64 	%rd2354, {%r7063, %r7062};
	shr.u64 	%rd2355, %rd2339, 6;
	xor.b64  	%rd2356, %rd2353, %rd2355;
	xor.b64  	%rd2357, %rd2356, %rd2354;
	shf.r.wrap.b32 	%r7064, %r6673, %r6672, 1;
	shf.r.wrap.b32 	%r7065, %r6672, %r6673, 1;
	mov.b64 	%rd2358, {%r7065, %r7064};
	shf.r.wrap.b32 	%r7066, %r6673, %r6672, 8;
	shf.r.wrap.b32 	%r7067, %r6672, %r6673, 8;
	mov.b64 	%rd2359, {%r7067, %r7066};
	shr.u64 	%rd2360, %rd1770, 7;
	xor.b64  	%rd2361, %rd2358, %rd2360;
	xor.b64  	%rd2362, %rd2361, %rd2359;
	add.s64 	%rd2363, %rd1874, %rd1757;
	add.s64 	%rd2364, %rd2363, %rd2357;
	add.s64 	%rd2365, %rd2364, %rd2362;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7068,%dummy}, %rd2352;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7069}, %rd2352;
	}
	shf.r.wrap.b32 	%r7070, %r7069, %r7068, 19;
	shf.r.wrap.b32 	%r7071, %r7068, %r7069, 19;
	mov.b64 	%rd2366, {%r7071, %r7070};
	shf.l.wrap.b32 	%r7072, %r7068, %r7069, 3;
	shf.l.wrap.b32 	%r7073, %r7069, %r7068, 3;
	mov.b64 	%rd2367, {%r7073, %r7072};
	shr.u64 	%rd2368, %rd2352, 6;
	xor.b64  	%rd2369, %rd2366, %rd2368;
	xor.b64  	%rd2370, %rd2369, %rd2367;
	shf.r.wrap.b32 	%r7074, %r6683, %r6682, 1;
	shf.r.wrap.b32 	%r7075, %r6682, %r6683, 1;
	mov.b64 	%rd2371, {%r7075, %r7074};
	shf.r.wrap.b32 	%r7076, %r6683, %r6682, 8;
	shf.r.wrap.b32 	%r7077, %r6682, %r6683, 8;
	mov.b64 	%rd2372, {%r7077, %r7076};
	shr.u64 	%rd2373, %rd1783, 7;
	xor.b64  	%rd2374, %rd2371, %rd2373;
	xor.b64  	%rd2375, %rd2374, %rd2372;
	add.s64 	%rd2376, %rd1887, %rd1770;
	add.s64 	%rd2377, %rd2376, %rd2370;
	add.s64 	%rd2378, %rd2377, %rd2375;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7078,%dummy}, %rd2365;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7079}, %rd2365;
	}
	shf.r.wrap.b32 	%r7080, %r7079, %r7078, 19;
	shf.r.wrap.b32 	%r7081, %r7078, %r7079, 19;
	mov.b64 	%rd2379, {%r7081, %r7080};
	shf.l.wrap.b32 	%r7082, %r7078, %r7079, 3;
	shf.l.wrap.b32 	%r7083, %r7079, %r7078, 3;
	mov.b64 	%rd2380, {%r7083, %r7082};
	shr.u64 	%rd2381, %rd2365, 6;
	xor.b64  	%rd2382, %rd2379, %rd2381;
	xor.b64  	%rd2383, %rd2382, %rd2380;
	shf.r.wrap.b32 	%r7084, %r6693, %r6692, 1;
	shf.r.wrap.b32 	%r7085, %r6692, %r6693, 1;
	mov.b64 	%rd2384, {%r7085, %r7084};
	shf.r.wrap.b32 	%r7086, %r6693, %r6692, 8;
	shf.r.wrap.b32 	%r7087, %r6692, %r6693, 8;
	mov.b64 	%rd2385, {%r7087, %r7086};
	shr.u64 	%rd2386, %rd1796, 7;
	xor.b64  	%rd2387, %rd2384, %rd2386;
	xor.b64  	%rd2388, %rd2387, %rd2385;
	add.s64 	%rd2389, %rd1900, %rd1783;
	add.s64 	%rd2390, %rd2389, %rd2383;
	add.s64 	%rd2391, %rd2390, %rd2388;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7088,%dummy}, %rd2378;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7089}, %rd2378;
	}
	shf.r.wrap.b32 	%r7090, %r7089, %r7088, 19;
	shf.r.wrap.b32 	%r7091, %r7088, %r7089, 19;
	mov.b64 	%rd2392, {%r7091, %r7090};
	shf.l.wrap.b32 	%r7092, %r7088, %r7089, 3;
	shf.l.wrap.b32 	%r7093, %r7089, %r7088, 3;
	mov.b64 	%rd2393, {%r7093, %r7092};
	shr.u64 	%rd2394, %rd2378, 6;
	xor.b64  	%rd2395, %rd2392, %rd2394;
	xor.b64  	%rd2396, %rd2395, %rd2393;
	shf.r.wrap.b32 	%r7094, %r6703, %r6702, 1;
	shf.r.wrap.b32 	%r7095, %r6702, %r6703, 1;
	mov.b64 	%rd2397, {%r7095, %r7094};
	shf.r.wrap.b32 	%r7096, %r6703, %r6702, 8;
	shf.r.wrap.b32 	%r7097, %r6702, %r6703, 8;
	mov.b64 	%rd2398, {%r7097, %r7096};
	shr.u64 	%rd2399, %rd1809, 7;
	xor.b64  	%rd2400, %rd2397, %rd2399;
	xor.b64  	%rd2401, %rd2400, %rd2398;
	add.s64 	%rd2402, %rd2313, %rd1796;
	add.s64 	%rd2403, %rd2402, %rd2396;
	add.s64 	%rd2404, %rd2403, %rd2401;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7098,%dummy}, %rd2391;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7099}, %rd2391;
	}
	shf.r.wrap.b32 	%r7100, %r7099, %r7098, 19;
	shf.r.wrap.b32 	%r7101, %r7098, %r7099, 19;
	mov.b64 	%rd2405, {%r7101, %r7100};
	shf.l.wrap.b32 	%r7102, %r7098, %r7099, 3;
	shf.l.wrap.b32 	%r7103, %r7099, %r7098, 3;
	mov.b64 	%rd2406, {%r7103, %r7102};
	shr.u64 	%rd2407, %rd2391, 6;
	xor.b64  	%rd2408, %rd2405, %rd2407;
	xor.b64  	%rd2409, %rd2408, %rd2406;
	shf.r.wrap.b32 	%r7104, %r6713, %r6712, 1;
	shf.r.wrap.b32 	%r7105, %r6712, %r6713, 1;
	mov.b64 	%rd2410, {%r7105, %r7104};
	shf.r.wrap.b32 	%r7106, %r6713, %r6712, 8;
	shf.r.wrap.b32 	%r7107, %r6712, %r6713, 8;
	mov.b64 	%rd2411, {%r7107, %r7106};
	shr.u64 	%rd2412, %rd1822, 7;
	xor.b64  	%rd2413, %rd2410, %rd2412;
	xor.b64  	%rd2414, %rd2413, %rd2411;
	add.s64 	%rd2415, %rd2326, %rd1809;
	add.s64 	%rd2416, %rd2415, %rd2409;
	add.s64 	%rd2417, %rd2416, %rd2414;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7108,%dummy}, %rd2404;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7109}, %rd2404;
	}
	shf.r.wrap.b32 	%r7110, %r7109, %r7108, 19;
	shf.r.wrap.b32 	%r7111, %r7108, %r7109, 19;
	mov.b64 	%rd2418, {%r7111, %r7110};
	shf.l.wrap.b32 	%r7112, %r7108, %r7109, 3;
	shf.l.wrap.b32 	%r7113, %r7109, %r7108, 3;
	mov.b64 	%rd2419, {%r7113, %r7112};
	shr.u64 	%rd2420, %rd2404, 6;
	xor.b64  	%rd2421, %rd2418, %rd2420;
	xor.b64  	%rd2422, %rd2421, %rd2419;
	shf.r.wrap.b32 	%r7114, %r6723, %r6722, 1;
	shf.r.wrap.b32 	%r7115, %r6722, %r6723, 1;
	mov.b64 	%rd2423, {%r7115, %r7114};
	shf.r.wrap.b32 	%r7116, %r6723, %r6722, 8;
	shf.r.wrap.b32 	%r7117, %r6722, %r6723, 8;
	mov.b64 	%rd2424, {%r7117, %r7116};
	shr.u64 	%rd2425, %rd1835, 7;
	xor.b64  	%rd2426, %rd2423, %rd2425;
	xor.b64  	%rd2427, %rd2426, %rd2424;
	add.s64 	%rd2428, %rd2339, %rd1822;
	add.s64 	%rd2429, %rd2428, %rd2422;
	add.s64 	%rd2430, %rd2429, %rd2427;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7118,%dummy}, %rd2417;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7119}, %rd2417;
	}
	shf.r.wrap.b32 	%r7120, %r7119, %r7118, 19;
	shf.r.wrap.b32 	%r7121, %r7118, %r7119, 19;
	mov.b64 	%rd2431, {%r7121, %r7120};
	shf.l.wrap.b32 	%r7122, %r7118, %r7119, 3;
	shf.l.wrap.b32 	%r7123, %r7119, %r7118, 3;
	mov.b64 	%rd2432, {%r7123, %r7122};
	shr.u64 	%rd2433, %rd2417, 6;
	xor.b64  	%rd2434, %rd2431, %rd2433;
	xor.b64  	%rd2435, %rd2434, %rd2432;
	shf.r.wrap.b32 	%r7124, %r6733, %r6732, 1;
	shf.r.wrap.b32 	%r7125, %r6732, %r6733, 1;
	mov.b64 	%rd2436, {%r7125, %r7124};
	shf.r.wrap.b32 	%r7126, %r6733, %r6732, 8;
	shf.r.wrap.b32 	%r7127, %r6732, %r6733, 8;
	mov.b64 	%rd2437, {%r7127, %r7126};
	shr.u64 	%rd2438, %rd1848, 7;
	xor.b64  	%rd2439, %rd2436, %rd2438;
	xor.b64  	%rd2440, %rd2439, %rd2437;
	add.s64 	%rd2441, %rd2352, %rd1835;
	add.s64 	%rd2442, %rd2441, %rd2435;
	add.s64 	%rd2443, %rd2442, %rd2440;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7128,%dummy}, %rd2430;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7129}, %rd2430;
	}
	shf.r.wrap.b32 	%r7130, %r7129, %r7128, 19;
	shf.r.wrap.b32 	%r7131, %r7128, %r7129, 19;
	mov.b64 	%rd2444, {%r7131, %r7130};
	shf.l.wrap.b32 	%r7132, %r7128, %r7129, 3;
	shf.l.wrap.b32 	%r7133, %r7129, %r7128, 3;
	mov.b64 	%rd2445, {%r7133, %r7132};
	shr.u64 	%rd2446, %rd2430, 6;
	xor.b64  	%rd2447, %rd2444, %rd2446;
	xor.b64  	%rd2448, %rd2447, %rd2445;
	shf.r.wrap.b32 	%r7134, %r6743, %r6742, 1;
	shf.r.wrap.b32 	%r7135, %r6742, %r6743, 1;
	mov.b64 	%rd2449, {%r7135, %r7134};
	shf.r.wrap.b32 	%r7136, %r6743, %r6742, 8;
	shf.r.wrap.b32 	%r7137, %r6742, %r6743, 8;
	mov.b64 	%rd2450, {%r7137, %r7136};
	shr.u64 	%rd2451, %rd1861, 7;
	xor.b64  	%rd2452, %rd2449, %rd2451;
	xor.b64  	%rd2453, %rd2452, %rd2450;
	add.s64 	%rd2454, %rd2365, %rd1848;
	add.s64 	%rd2455, %rd2454, %rd2448;
	add.s64 	%rd2456, %rd2455, %rd2453;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7138,%dummy}, %rd2443;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7139}, %rd2443;
	}
	shf.r.wrap.b32 	%r7140, %r7139, %r7138, 19;
	shf.r.wrap.b32 	%r7141, %r7138, %r7139, 19;
	mov.b64 	%rd2457, {%r7141, %r7140};
	shf.l.wrap.b32 	%r7142, %r7138, %r7139, 3;
	shf.l.wrap.b32 	%r7143, %r7139, %r7138, 3;
	mov.b64 	%rd2458, {%r7143, %r7142};
	shr.u64 	%rd2459, %rd2443, 6;
	xor.b64  	%rd2460, %rd2457, %rd2459;
	xor.b64  	%rd2461, %rd2460, %rd2458;
	shf.r.wrap.b32 	%r7144, %r6753, %r6752, 1;
	shf.r.wrap.b32 	%r7145, %r6752, %r6753, 1;
	mov.b64 	%rd2462, {%r7145, %r7144};
	shf.r.wrap.b32 	%r7146, %r6753, %r6752, 8;
	shf.r.wrap.b32 	%r7147, %r6752, %r6753, 8;
	mov.b64 	%rd2463, {%r7147, %r7146};
	shr.u64 	%rd2464, %rd1874, 7;
	xor.b64  	%rd2465, %rd2462, %rd2464;
	xor.b64  	%rd2466, %rd2465, %rd2463;
	add.s64 	%rd2467, %rd2378, %rd1861;
	add.s64 	%rd2468, %rd2467, %rd2461;
	add.s64 	%rd2469, %rd2468, %rd2466;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7148,%dummy}, %rd2456;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7149}, %rd2456;
	}
	shf.r.wrap.b32 	%r7150, %r7149, %r7148, 19;
	shf.r.wrap.b32 	%r7151, %r7148, %r7149, 19;
	mov.b64 	%rd2470, {%r7151, %r7150};
	shf.l.wrap.b32 	%r7152, %r7148, %r7149, 3;
	shf.l.wrap.b32 	%r7153, %r7149, %r7148, 3;
	mov.b64 	%rd2471, {%r7153, %r7152};
	shr.u64 	%rd2472, %rd2456, 6;
	xor.b64  	%rd2473, %rd2470, %rd2472;
	xor.b64  	%rd2474, %rd2473, %rd2471;
	shf.r.wrap.b32 	%r7154, %r7019, %r7018, 1;
	shf.r.wrap.b32 	%r7155, %r7018, %r7019, 1;
	mov.b64 	%rd2475, {%r7155, %r7154};
	shf.r.wrap.b32 	%r7156, %r7019, %r7018, 8;
	shf.r.wrap.b32 	%r7157, %r7018, %r7019, 8;
	mov.b64 	%rd2476, {%r7157, %r7156};
	shr.u64 	%rd2477, %rd1887, 7;
	xor.b64  	%rd2478, %rd2475, %rd2477;
	xor.b64  	%rd2479, %rd2478, %rd2476;
	add.s64 	%rd2480, %rd2391, %rd1874;
	add.s64 	%rd2481, %rd2480, %rd2474;
	add.s64 	%rd2482, %rd2481, %rd2479;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7158,%dummy}, %rd2469;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7159}, %rd2469;
	}
	shf.r.wrap.b32 	%r7160, %r7159, %r7158, 19;
	shf.r.wrap.b32 	%r7161, %r7158, %r7159, 19;
	mov.b64 	%rd2483, {%r7161, %r7160};
	shf.l.wrap.b32 	%r7162, %r7158, %r7159, 3;
	shf.l.wrap.b32 	%r7163, %r7159, %r7158, 3;
	mov.b64 	%rd2484, {%r7163, %r7162};
	shr.u64 	%rd2485, %rd2469, 6;
	xor.b64  	%rd2486, %rd2483, %rd2485;
	xor.b64  	%rd2487, %rd2486, %rd2484;
	shf.r.wrap.b32 	%r7164, %r7029, %r7028, 1;
	shf.r.wrap.b32 	%r7165, %r7028, %r7029, 1;
	mov.b64 	%rd2488, {%r7165, %r7164};
	shf.r.wrap.b32 	%r7166, %r7029, %r7028, 8;
	shf.r.wrap.b32 	%r7167, %r7028, %r7029, 8;
	mov.b64 	%rd2489, {%r7167, %r7166};
	shr.u64 	%rd2490, %rd1900, 7;
	xor.b64  	%rd2491, %rd2488, %rd2490;
	xor.b64  	%rd2492, %rd2491, %rd2489;
	add.s64 	%rd2493, %rd2404, %rd1887;
	add.s64 	%rd2494, %rd2493, %rd2487;
	add.s64 	%rd2495, %rd2494, %rd2492;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7168,%dummy}, %rd2482;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7169}, %rd2482;
	}
	shf.r.wrap.b32 	%r7170, %r7169, %r7168, 19;
	shf.r.wrap.b32 	%r7171, %r7168, %r7169, 19;
	mov.b64 	%rd2496, {%r7171, %r7170};
	shf.l.wrap.b32 	%r7172, %r7168, %r7169, 3;
	shf.l.wrap.b32 	%r7173, %r7169, %r7168, 3;
	mov.b64 	%rd2497, {%r7173, %r7172};
	shr.u64 	%rd2498, %rd2482, 6;
	xor.b64  	%rd2499, %rd2496, %rd2498;
	xor.b64  	%rd2500, %rd2499, %rd2497;
	shf.r.wrap.b32 	%r7174, %r7039, %r7038, 1;
	shf.r.wrap.b32 	%r7175, %r7038, %r7039, 1;
	mov.b64 	%rd2501, {%r7175, %r7174};
	shf.r.wrap.b32 	%r7176, %r7039, %r7038, 8;
	shf.r.wrap.b32 	%r7177, %r7038, %r7039, 8;
	mov.b64 	%rd2502, {%r7177, %r7176};
	shr.u64 	%rd2503, %rd2313, 7;
	xor.b64  	%rd2504, %rd2501, %rd2503;
	xor.b64  	%rd2505, %rd2504, %rd2502;
	add.s64 	%rd2506, %rd2417, %rd1900;
	add.s64 	%rd2507, %rd2506, %rd2500;
	add.s64 	%rd2508, %rd2507, %rd2505;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7178,%dummy}, %rd2289;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7179}, %rd2289;
	}
	shf.r.wrap.b32 	%r7180, %r7179, %r7178, 14;
	shf.r.wrap.b32 	%r7181, %r7178, %r7179, 14;
	mov.b64 	%rd2509, {%r7181, %r7180};
	shf.r.wrap.b32 	%r7182, %r7179, %r7178, 18;
	shf.r.wrap.b32 	%r7183, %r7178, %r7179, 18;
	mov.b64 	%rd2510, {%r7183, %r7182};
	xor.b64  	%rd2511, %rd2510, %rd2509;
	shf.l.wrap.b32 	%r7184, %r7178, %r7179, 23;
	shf.l.wrap.b32 	%r7185, %r7179, %r7178, 23;
	mov.b64 	%rd2512, {%r7185, %r7184};
	xor.b64  	%rd2513, %rd2511, %rd2512;
	xor.b64  	%rd2514, %rd2264, %rd2239;
	and.b64  	%rd2515, %rd2514, %rd2289;
	xor.b64  	%rd2516, %rd2515, %rd2239;
	add.s64 	%rd2517, %rd2516, %rd2214;
	add.s64 	%rd2518, %rd2517, %rd2313;
	ld.const.u64 	%rd2519, [k_sha512+512];
	add.s64 	%rd2520, %rd2518, %rd2519;
	add.s64 	%rd2521, %rd2520, %rd2513;
	add.s64 	%rd2522, %rd2521, %rd2225;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7186,%dummy}, %rd2300;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7187}, %rd2300;
	}
	shf.r.wrap.b32 	%r7188, %r7187, %r7186, 28;
	shf.r.wrap.b32 	%r7189, %r7186, %r7187, 28;
	mov.b64 	%rd2523, {%r7189, %r7188};
	shf.l.wrap.b32 	%r7190, %r7186, %r7187, 30;
	shf.l.wrap.b32 	%r7191, %r7187, %r7186, 30;
	mov.b64 	%rd2524, {%r7191, %r7190};
	xor.b64  	%rd2525, %rd2524, %rd2523;
	shf.l.wrap.b32 	%r7192, %r7186, %r7187, 25;
	shf.l.wrap.b32 	%r7193, %r7187, %r7186, 25;
	mov.b64 	%rd2526, {%r7193, %r7192};
	xor.b64  	%rd2527, %rd2525, %rd2526;
	xor.b64  	%rd2528, %rd2300, %rd2250;
	xor.b64  	%rd2529, %rd2300, %rd2275;
	and.b64  	%rd2530, %rd2529, %rd2528;
	xor.b64  	%rd2531, %rd2530, %rd2300;
	add.s64 	%rd2532, %rd2521, %rd2531;
	add.s64 	%rd2533, %rd2532, %rd2527;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7194,%dummy}, %rd2522;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7195}, %rd2522;
	}
	shf.r.wrap.b32 	%r7196, %r7195, %r7194, 14;
	shf.r.wrap.b32 	%r7197, %r7194, %r7195, 14;
	mov.b64 	%rd2534, {%r7197, %r7196};
	shf.r.wrap.b32 	%r7198, %r7195, %r7194, 18;
	shf.r.wrap.b32 	%r7199, %r7194, %r7195, 18;
	mov.b64 	%rd2535, {%r7199, %r7198};
	xor.b64  	%rd2536, %rd2535, %rd2534;
	shf.l.wrap.b32 	%r7200, %r7194, %r7195, 23;
	shf.l.wrap.b32 	%r7201, %r7195, %r7194, 23;
	mov.b64 	%rd2537, {%r7201, %r7200};
	xor.b64  	%rd2538, %rd2536, %rd2537;
	xor.b64  	%rd2539, %rd2289, %rd2264;
	and.b64  	%rd2540, %rd2522, %rd2539;
	xor.b64  	%rd2541, %rd2540, %rd2264;
	add.s64 	%rd2542, %rd2326, %rd2239;
	ld.const.u64 	%rd2543, [k_sha512+520];
	add.s64 	%rd2544, %rd2542, %rd2543;
	add.s64 	%rd2545, %rd2544, %rd2541;
	add.s64 	%rd2546, %rd2545, %rd2538;
	add.s64 	%rd2547, %rd2546, %rd2250;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7202,%dummy}, %rd2533;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7203}, %rd2533;
	}
	shf.r.wrap.b32 	%r7204, %r7203, %r7202, 28;
	shf.r.wrap.b32 	%r7205, %r7202, %r7203, 28;
	mov.b64 	%rd2548, {%r7205, %r7204};
	shf.l.wrap.b32 	%r7206, %r7202, %r7203, 30;
	shf.l.wrap.b32 	%r7207, %r7203, %r7202, 30;
	mov.b64 	%rd2549, {%r7207, %r7206};
	xor.b64  	%rd2550, %rd2549, %rd2548;
	shf.l.wrap.b32 	%r7208, %r7202, %r7203, 25;
	shf.l.wrap.b32 	%r7209, %r7203, %r7202, 25;
	mov.b64 	%rd2551, {%r7209, %r7208};
	xor.b64  	%rd2552, %rd2550, %rd2551;
	xor.b64  	%rd2553, %rd2533, %rd2275;
	xor.b64  	%rd2554, %rd2533, %rd2300;
	and.b64  	%rd2555, %rd2554, %rd2553;
	xor.b64  	%rd2556, %rd2555, %rd2533;
	add.s64 	%rd2557, %rd2546, %rd2556;
	add.s64 	%rd2558, %rd2557, %rd2552;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7210,%dummy}, %rd2547;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7211}, %rd2547;
	}
	shf.r.wrap.b32 	%r7212, %r7211, %r7210, 14;
	shf.r.wrap.b32 	%r7213, %r7210, %r7211, 14;
	mov.b64 	%rd2559, {%r7213, %r7212};
	shf.r.wrap.b32 	%r7214, %r7211, %r7210, 18;
	shf.r.wrap.b32 	%r7215, %r7210, %r7211, 18;
	mov.b64 	%rd2560, {%r7215, %r7214};
	xor.b64  	%rd2561, %rd2560, %rd2559;
	shf.l.wrap.b32 	%r7216, %r7210, %r7211, 23;
	shf.l.wrap.b32 	%r7217, %r7211, %r7210, 23;
	mov.b64 	%rd2562, {%r7217, %r7216};
	xor.b64  	%rd2563, %rd2561, %rd2562;
	xor.b64  	%rd2564, %rd2522, %rd2289;
	and.b64  	%rd2565, %rd2547, %rd2564;
	xor.b64  	%rd2566, %rd2565, %rd2289;
	add.s64 	%rd2567, %rd2339, %rd2264;
	ld.const.u64 	%rd2568, [k_sha512+528];
	add.s64 	%rd2569, %rd2567, %rd2568;
	add.s64 	%rd2570, %rd2569, %rd2566;
	add.s64 	%rd2571, %rd2570, %rd2563;
	add.s64 	%rd2572, %rd2571, %rd2275;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7218,%dummy}, %rd2558;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7219}, %rd2558;
	}
	shf.r.wrap.b32 	%r7220, %r7219, %r7218, 28;
	shf.r.wrap.b32 	%r7221, %r7218, %r7219, 28;
	mov.b64 	%rd2573, {%r7221, %r7220};
	shf.l.wrap.b32 	%r7222, %r7218, %r7219, 30;
	shf.l.wrap.b32 	%r7223, %r7219, %r7218, 30;
	mov.b64 	%rd2574, {%r7223, %r7222};
	xor.b64  	%rd2575, %rd2574, %rd2573;
	shf.l.wrap.b32 	%r7224, %r7218, %r7219, 25;
	shf.l.wrap.b32 	%r7225, %r7219, %r7218, 25;
	mov.b64 	%rd2576, {%r7225, %r7224};
	xor.b64  	%rd2577, %rd2575, %rd2576;
	xor.b64  	%rd2578, %rd2558, %rd2300;
	xor.b64  	%rd2579, %rd2558, %rd2533;
	and.b64  	%rd2580, %rd2579, %rd2578;
	xor.b64  	%rd2581, %rd2580, %rd2558;
	add.s64 	%rd2582, %rd2571, %rd2581;
	add.s64 	%rd2583, %rd2582, %rd2577;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7226,%dummy}, %rd2572;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7227}, %rd2572;
	}
	shf.r.wrap.b32 	%r7228, %r7227, %r7226, 14;
	shf.r.wrap.b32 	%r7229, %r7226, %r7227, 14;
	mov.b64 	%rd2584, {%r7229, %r7228};
	shf.r.wrap.b32 	%r7230, %r7227, %r7226, 18;
	shf.r.wrap.b32 	%r7231, %r7226, %r7227, 18;
	mov.b64 	%rd2585, {%r7231, %r7230};
	xor.b64  	%rd2586, %rd2585, %rd2584;
	shf.l.wrap.b32 	%r7232, %r7226, %r7227, 23;
	shf.l.wrap.b32 	%r7233, %r7227, %r7226, 23;
	mov.b64 	%rd2587, {%r7233, %r7232};
	xor.b64  	%rd2588, %rd2586, %rd2587;
	xor.b64  	%rd2589, %rd2547, %rd2522;
	and.b64  	%rd2590, %rd2572, %rd2589;
	xor.b64  	%rd2591, %rd2590, %rd2522;
	add.s64 	%rd2592, %rd2352, %rd2289;
	ld.const.u64 	%rd2593, [k_sha512+536];
	add.s64 	%rd2594, %rd2592, %rd2593;
	add.s64 	%rd2595, %rd2594, %rd2591;
	add.s64 	%rd2596, %rd2595, %rd2588;
	add.s64 	%rd2597, %rd2596, %rd2300;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7234,%dummy}, %rd2583;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7235}, %rd2583;
	}
	shf.r.wrap.b32 	%r7236, %r7235, %r7234, 28;
	shf.r.wrap.b32 	%r7237, %r7234, %r7235, 28;
	mov.b64 	%rd2598, {%r7237, %r7236};
	shf.l.wrap.b32 	%r7238, %r7234, %r7235, 30;
	shf.l.wrap.b32 	%r7239, %r7235, %r7234, 30;
	mov.b64 	%rd2599, {%r7239, %r7238};
	xor.b64  	%rd2600, %rd2599, %rd2598;
	shf.l.wrap.b32 	%r7240, %r7234, %r7235, 25;
	shf.l.wrap.b32 	%r7241, %r7235, %r7234, 25;
	mov.b64 	%rd2601, {%r7241, %r7240};
	xor.b64  	%rd2602, %rd2600, %rd2601;
	xor.b64  	%rd2603, %rd2583, %rd2533;
	xor.b64  	%rd2604, %rd2583, %rd2558;
	and.b64  	%rd2605, %rd2604, %rd2603;
	xor.b64  	%rd2606, %rd2605, %rd2583;
	add.s64 	%rd2607, %rd2596, %rd2606;
	add.s64 	%rd2608, %rd2607, %rd2602;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7242,%dummy}, %rd2597;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7243}, %rd2597;
	}
	shf.r.wrap.b32 	%r7244, %r7243, %r7242, 14;
	shf.r.wrap.b32 	%r7245, %r7242, %r7243, 14;
	mov.b64 	%rd2609, {%r7245, %r7244};
	shf.r.wrap.b32 	%r7246, %r7243, %r7242, 18;
	shf.r.wrap.b32 	%r7247, %r7242, %r7243, 18;
	mov.b64 	%rd2610, {%r7247, %r7246};
	xor.b64  	%rd2611, %rd2610, %rd2609;
	shf.l.wrap.b32 	%r7248, %r7242, %r7243, 23;
	shf.l.wrap.b32 	%r7249, %r7243, %r7242, 23;
	mov.b64 	%rd2612, {%r7249, %r7248};
	xor.b64  	%rd2613, %rd2611, %rd2612;
	xor.b64  	%rd2614, %rd2572, %rd2547;
	and.b64  	%rd2615, %rd2597, %rd2614;
	xor.b64  	%rd2616, %rd2615, %rd2547;
	add.s64 	%rd2617, %rd2522, %rd2365;
	ld.const.u64 	%rd2618, [k_sha512+544];
	add.s64 	%rd2619, %rd2617, %rd2618;
	add.s64 	%rd2620, %rd2619, %rd2616;
	add.s64 	%rd2621, %rd2620, %rd2613;
	add.s64 	%rd2622, %rd2621, %rd2533;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7250,%dummy}, %rd2608;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7251}, %rd2608;
	}
	shf.r.wrap.b32 	%r7252, %r7251, %r7250, 28;
	shf.r.wrap.b32 	%r7253, %r7250, %r7251, 28;
	mov.b64 	%rd2623, {%r7253, %r7252};
	shf.l.wrap.b32 	%r7254, %r7250, %r7251, 30;
	shf.l.wrap.b32 	%r7255, %r7251, %r7250, 30;
	mov.b64 	%rd2624, {%r7255, %r7254};
	xor.b64  	%rd2625, %rd2624, %rd2623;
	shf.l.wrap.b32 	%r7256, %r7250, %r7251, 25;
	shf.l.wrap.b32 	%r7257, %r7251, %r7250, 25;
	mov.b64 	%rd2626, {%r7257, %r7256};
	xor.b64  	%rd2627, %rd2625, %rd2626;
	xor.b64  	%rd2628, %rd2608, %rd2558;
	xor.b64  	%rd2629, %rd2608, %rd2583;
	and.b64  	%rd2630, %rd2629, %rd2628;
	xor.b64  	%rd2631, %rd2630, %rd2608;
	add.s64 	%rd2632, %rd2621, %rd2631;
	add.s64 	%rd2633, %rd2632, %rd2627;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7258,%dummy}, %rd2622;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7259}, %rd2622;
	}
	shf.r.wrap.b32 	%r7260, %r7259, %r7258, 14;
	shf.r.wrap.b32 	%r7261, %r7258, %r7259, 14;
	mov.b64 	%rd2634, {%r7261, %r7260};
	shf.r.wrap.b32 	%r7262, %r7259, %r7258, 18;
	shf.r.wrap.b32 	%r7263, %r7258, %r7259, 18;
	mov.b64 	%rd2635, {%r7263, %r7262};
	xor.b64  	%rd2636, %rd2635, %rd2634;
	shf.l.wrap.b32 	%r7264, %r7258, %r7259, 23;
	shf.l.wrap.b32 	%r7265, %r7259, %r7258, 23;
	mov.b64 	%rd2637, {%r7265, %r7264};
	xor.b64  	%rd2638, %rd2636, %rd2637;
	xor.b64  	%rd2639, %rd2597, %rd2572;
	and.b64  	%rd2640, %rd2622, %rd2639;
	xor.b64  	%rd2641, %rd2640, %rd2572;
	add.s64 	%rd2642, %rd2547, %rd2378;
	ld.const.u64 	%rd2643, [k_sha512+552];
	add.s64 	%rd2644, %rd2642, %rd2643;
	add.s64 	%rd2645, %rd2644, %rd2641;
	add.s64 	%rd2646, %rd2645, %rd2638;
	add.s64 	%rd2647, %rd2646, %rd2558;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7266,%dummy}, %rd2633;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7267}, %rd2633;
	}
	shf.r.wrap.b32 	%r7268, %r7267, %r7266, 28;
	shf.r.wrap.b32 	%r7269, %r7266, %r7267, 28;
	mov.b64 	%rd2648, {%r7269, %r7268};
	shf.l.wrap.b32 	%r7270, %r7266, %r7267, 30;
	shf.l.wrap.b32 	%r7271, %r7267, %r7266, 30;
	mov.b64 	%rd2649, {%r7271, %r7270};
	xor.b64  	%rd2650, %rd2649, %rd2648;
	shf.l.wrap.b32 	%r7272, %r7266, %r7267, 25;
	shf.l.wrap.b32 	%r7273, %r7267, %r7266, 25;
	mov.b64 	%rd2651, {%r7273, %r7272};
	xor.b64  	%rd2652, %rd2650, %rd2651;
	xor.b64  	%rd2653, %rd2633, %rd2583;
	xor.b64  	%rd2654, %rd2633, %rd2608;
	and.b64  	%rd2655, %rd2654, %rd2653;
	xor.b64  	%rd2656, %rd2655, %rd2633;
	add.s64 	%rd2657, %rd2646, %rd2656;
	add.s64 	%rd2658, %rd2657, %rd2652;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7274,%dummy}, %rd2647;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7275}, %rd2647;
	}
	shf.r.wrap.b32 	%r7276, %r7275, %r7274, 14;
	shf.r.wrap.b32 	%r7277, %r7274, %r7275, 14;
	mov.b64 	%rd2659, {%r7277, %r7276};
	shf.r.wrap.b32 	%r7278, %r7275, %r7274, 18;
	shf.r.wrap.b32 	%r7279, %r7274, %r7275, 18;
	mov.b64 	%rd2660, {%r7279, %r7278};
	xor.b64  	%rd2661, %rd2660, %rd2659;
	shf.l.wrap.b32 	%r7280, %r7274, %r7275, 23;
	shf.l.wrap.b32 	%r7281, %r7275, %r7274, 23;
	mov.b64 	%rd2662, {%r7281, %r7280};
	xor.b64  	%rd2663, %rd2661, %rd2662;
	xor.b64  	%rd2664, %rd2622, %rd2597;
	and.b64  	%rd2665, %rd2647, %rd2664;
	xor.b64  	%rd2666, %rd2665, %rd2597;
	add.s64 	%rd2667, %rd2572, %rd2391;
	ld.const.u64 	%rd2668, [k_sha512+560];
	add.s64 	%rd2669, %rd2667, %rd2668;
	add.s64 	%rd2670, %rd2669, %rd2666;
	add.s64 	%rd2671, %rd2670, %rd2663;
	add.s64 	%rd2672, %rd2671, %rd2583;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7282,%dummy}, %rd2658;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7283}, %rd2658;
	}
	shf.r.wrap.b32 	%r7284, %r7283, %r7282, 28;
	shf.r.wrap.b32 	%r7285, %r7282, %r7283, 28;
	mov.b64 	%rd2673, {%r7285, %r7284};
	shf.l.wrap.b32 	%r7286, %r7282, %r7283, 30;
	shf.l.wrap.b32 	%r7287, %r7283, %r7282, 30;
	mov.b64 	%rd2674, {%r7287, %r7286};
	xor.b64  	%rd2675, %rd2674, %rd2673;
	shf.l.wrap.b32 	%r7288, %r7282, %r7283, 25;
	shf.l.wrap.b32 	%r7289, %r7283, %r7282, 25;
	mov.b64 	%rd2676, {%r7289, %r7288};
	xor.b64  	%rd2677, %rd2675, %rd2676;
	xor.b64  	%rd2678, %rd2658, %rd2608;
	xor.b64  	%rd2679, %rd2658, %rd2633;
	and.b64  	%rd2680, %rd2679, %rd2678;
	xor.b64  	%rd2681, %rd2680, %rd2658;
	add.s64 	%rd2682, %rd2671, %rd2681;
	add.s64 	%rd2683, %rd2682, %rd2677;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7290,%dummy}, %rd2672;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7291}, %rd2672;
	}
	shf.r.wrap.b32 	%r7292, %r7291, %r7290, 14;
	shf.r.wrap.b32 	%r7293, %r7290, %r7291, 14;
	mov.b64 	%rd2684, {%r7293, %r7292};
	shf.r.wrap.b32 	%r7294, %r7291, %r7290, 18;
	shf.r.wrap.b32 	%r7295, %r7290, %r7291, 18;
	mov.b64 	%rd2685, {%r7295, %r7294};
	xor.b64  	%rd2686, %rd2685, %rd2684;
	shf.l.wrap.b32 	%r7296, %r7290, %r7291, 23;
	shf.l.wrap.b32 	%r7297, %r7291, %r7290, 23;
	mov.b64 	%rd2687, {%r7297, %r7296};
	xor.b64  	%rd2688, %rd2686, %rd2687;
	xor.b64  	%rd2689, %rd2647, %rd2622;
	and.b64  	%rd2690, %rd2672, %rd2689;
	xor.b64  	%rd2691, %rd2690, %rd2622;
	add.s64 	%rd2692, %rd2597, %rd2404;
	ld.const.u64 	%rd2693, [k_sha512+568];
	add.s64 	%rd2694, %rd2692, %rd2693;
	add.s64 	%rd2695, %rd2694, %rd2691;
	add.s64 	%rd2696, %rd2695, %rd2688;
	add.s64 	%rd2697, %rd2696, %rd2608;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7298,%dummy}, %rd2683;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7299}, %rd2683;
	}
	shf.r.wrap.b32 	%r7300, %r7299, %r7298, 28;
	shf.r.wrap.b32 	%r7301, %r7298, %r7299, 28;
	mov.b64 	%rd2698, {%r7301, %r7300};
	shf.l.wrap.b32 	%r7302, %r7298, %r7299, 30;
	shf.l.wrap.b32 	%r7303, %r7299, %r7298, 30;
	mov.b64 	%rd2699, {%r7303, %r7302};
	xor.b64  	%rd2700, %rd2699, %rd2698;
	shf.l.wrap.b32 	%r7304, %r7298, %r7299, 25;
	shf.l.wrap.b32 	%r7305, %r7299, %r7298, 25;
	mov.b64 	%rd2701, {%r7305, %r7304};
	xor.b64  	%rd2702, %rd2700, %rd2701;
	xor.b64  	%rd2703, %rd2683, %rd2633;
	xor.b64  	%rd2704, %rd2683, %rd2658;
	and.b64  	%rd2705, %rd2704, %rd2703;
	xor.b64  	%rd2706, %rd2705, %rd2683;
	add.s64 	%rd2707, %rd2696, %rd2706;
	add.s64 	%rd2708, %rd2707, %rd2702;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7306,%dummy}, %rd2697;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7307}, %rd2697;
	}
	shf.r.wrap.b32 	%r7308, %r7307, %r7306, 14;
	shf.r.wrap.b32 	%r7309, %r7306, %r7307, 14;
	mov.b64 	%rd2709, {%r7309, %r7308};
	shf.r.wrap.b32 	%r7310, %r7307, %r7306, 18;
	shf.r.wrap.b32 	%r7311, %r7306, %r7307, 18;
	mov.b64 	%rd2710, {%r7311, %r7310};
	xor.b64  	%rd2711, %rd2710, %rd2709;
	shf.l.wrap.b32 	%r7312, %r7306, %r7307, 23;
	shf.l.wrap.b32 	%r7313, %r7307, %r7306, 23;
	mov.b64 	%rd2712, {%r7313, %r7312};
	xor.b64  	%rd2713, %rd2711, %rd2712;
	xor.b64  	%rd2714, %rd2672, %rd2647;
	and.b64  	%rd2715, %rd2697, %rd2714;
	xor.b64  	%rd2716, %rd2715, %rd2647;
	add.s64 	%rd2717, %rd2622, %rd2417;
	ld.const.u64 	%rd2718, [k_sha512+576];
	add.s64 	%rd2719, %rd2717, %rd2718;
	add.s64 	%rd2720, %rd2719, %rd2716;
	add.s64 	%rd2721, %rd2720, %rd2713;
	add.s64 	%rd2722, %rd2721, %rd2633;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7314,%dummy}, %rd2708;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7315}, %rd2708;
	}
	shf.r.wrap.b32 	%r7316, %r7315, %r7314, 28;
	shf.r.wrap.b32 	%r7317, %r7314, %r7315, 28;
	mov.b64 	%rd2723, {%r7317, %r7316};
	shf.l.wrap.b32 	%r7318, %r7314, %r7315, 30;
	shf.l.wrap.b32 	%r7319, %r7315, %r7314, 30;
	mov.b64 	%rd2724, {%r7319, %r7318};
	xor.b64  	%rd2725, %rd2724, %rd2723;
	shf.l.wrap.b32 	%r7320, %r7314, %r7315, 25;
	shf.l.wrap.b32 	%r7321, %r7315, %r7314, 25;
	mov.b64 	%rd2726, {%r7321, %r7320};
	xor.b64  	%rd2727, %rd2725, %rd2726;
	xor.b64  	%rd2728, %rd2708, %rd2658;
	xor.b64  	%rd2729, %rd2708, %rd2683;
	and.b64  	%rd2730, %rd2729, %rd2728;
	xor.b64  	%rd2731, %rd2730, %rd2708;
	add.s64 	%rd2732, %rd2721, %rd2731;
	add.s64 	%rd2733, %rd2732, %rd2727;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7322,%dummy}, %rd2722;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7323}, %rd2722;
	}
	shf.r.wrap.b32 	%r7324, %r7323, %r7322, 14;
	shf.r.wrap.b32 	%r7325, %r7322, %r7323, 14;
	mov.b64 	%rd2734, {%r7325, %r7324};
	shf.r.wrap.b32 	%r7326, %r7323, %r7322, 18;
	shf.r.wrap.b32 	%r7327, %r7322, %r7323, 18;
	mov.b64 	%rd2735, {%r7327, %r7326};
	xor.b64  	%rd2736, %rd2735, %rd2734;
	shf.l.wrap.b32 	%r7328, %r7322, %r7323, 23;
	shf.l.wrap.b32 	%r7329, %r7323, %r7322, 23;
	mov.b64 	%rd2737, {%r7329, %r7328};
	xor.b64  	%rd2738, %rd2736, %rd2737;
	xor.b64  	%rd2739, %rd2697, %rd2672;
	and.b64  	%rd2740, %rd2722, %rd2739;
	xor.b64  	%rd2741, %rd2740, %rd2672;
	add.s64 	%rd2742, %rd2647, %rd2430;
	ld.const.u64 	%rd2743, [k_sha512+584];
	add.s64 	%rd2744, %rd2742, %rd2743;
	add.s64 	%rd2745, %rd2744, %rd2741;
	add.s64 	%rd2746, %rd2745, %rd2738;
	add.s64 	%rd2747, %rd2746, %rd2658;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7330,%dummy}, %rd2733;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7331}, %rd2733;
	}
	shf.r.wrap.b32 	%r7332, %r7331, %r7330, 28;
	shf.r.wrap.b32 	%r7333, %r7330, %r7331, 28;
	mov.b64 	%rd2748, {%r7333, %r7332};
	shf.l.wrap.b32 	%r7334, %r7330, %r7331, 30;
	shf.l.wrap.b32 	%r7335, %r7331, %r7330, 30;
	mov.b64 	%rd2749, {%r7335, %r7334};
	xor.b64  	%rd2750, %rd2749, %rd2748;
	shf.l.wrap.b32 	%r7336, %r7330, %r7331, 25;
	shf.l.wrap.b32 	%r7337, %r7331, %r7330, 25;
	mov.b64 	%rd2751, {%r7337, %r7336};
	xor.b64  	%rd2752, %rd2750, %rd2751;
	xor.b64  	%rd2753, %rd2733, %rd2683;
	xor.b64  	%rd2754, %rd2733, %rd2708;
	and.b64  	%rd2755, %rd2754, %rd2753;
	xor.b64  	%rd2756, %rd2755, %rd2733;
	add.s64 	%rd2757, %rd2746, %rd2756;
	add.s64 	%rd2758, %rd2757, %rd2752;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7338,%dummy}, %rd2747;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7339}, %rd2747;
	}
	shf.r.wrap.b32 	%r7340, %r7339, %r7338, 14;
	shf.r.wrap.b32 	%r7341, %r7338, %r7339, 14;
	mov.b64 	%rd2759, {%r7341, %r7340};
	shf.r.wrap.b32 	%r7342, %r7339, %r7338, 18;
	shf.r.wrap.b32 	%r7343, %r7338, %r7339, 18;
	mov.b64 	%rd2760, {%r7343, %r7342};
	xor.b64  	%rd2761, %rd2760, %rd2759;
	shf.l.wrap.b32 	%r7344, %r7338, %r7339, 23;
	shf.l.wrap.b32 	%r7345, %r7339, %r7338, 23;
	mov.b64 	%rd2762, {%r7345, %r7344};
	xor.b64  	%rd2763, %rd2761, %rd2762;
	xor.b64  	%rd2764, %rd2722, %rd2697;
	and.b64  	%rd2765, %rd2747, %rd2764;
	xor.b64  	%rd2766, %rd2765, %rd2697;
	add.s64 	%rd2767, %rd2672, %rd2443;
	ld.const.u64 	%rd2768, [k_sha512+592];
	add.s64 	%rd2769, %rd2767, %rd2768;
	add.s64 	%rd2770, %rd2769, %rd2766;
	add.s64 	%rd2771, %rd2770, %rd2763;
	add.s64 	%rd2772, %rd2771, %rd2683;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7346,%dummy}, %rd2758;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7347}, %rd2758;
	}
	shf.r.wrap.b32 	%r7348, %r7347, %r7346, 28;
	shf.r.wrap.b32 	%r7349, %r7346, %r7347, 28;
	mov.b64 	%rd2773, {%r7349, %r7348};
	shf.l.wrap.b32 	%r7350, %r7346, %r7347, 30;
	shf.l.wrap.b32 	%r7351, %r7347, %r7346, 30;
	mov.b64 	%rd2774, {%r7351, %r7350};
	xor.b64  	%rd2775, %rd2774, %rd2773;
	shf.l.wrap.b32 	%r7352, %r7346, %r7347, 25;
	shf.l.wrap.b32 	%r7353, %r7347, %r7346, 25;
	mov.b64 	%rd2776, {%r7353, %r7352};
	xor.b64  	%rd2777, %rd2775, %rd2776;
	xor.b64  	%rd2778, %rd2758, %rd2708;
	xor.b64  	%rd2779, %rd2758, %rd2733;
	and.b64  	%rd2780, %rd2779, %rd2778;
	xor.b64  	%rd2781, %rd2780, %rd2758;
	add.s64 	%rd2782, %rd2771, %rd2781;
	add.s64 	%rd2783, %rd2782, %rd2777;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7354,%dummy}, %rd2772;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7355}, %rd2772;
	}
	shf.r.wrap.b32 	%r7356, %r7355, %r7354, 14;
	shf.r.wrap.b32 	%r7357, %r7354, %r7355, 14;
	mov.b64 	%rd2784, {%r7357, %r7356};
	shf.r.wrap.b32 	%r7358, %r7355, %r7354, 18;
	shf.r.wrap.b32 	%r7359, %r7354, %r7355, 18;
	mov.b64 	%rd2785, {%r7359, %r7358};
	xor.b64  	%rd2786, %rd2785, %rd2784;
	shf.l.wrap.b32 	%r7360, %r7354, %r7355, 23;
	shf.l.wrap.b32 	%r7361, %r7355, %r7354, 23;
	mov.b64 	%rd2787, {%r7361, %r7360};
	xor.b64  	%rd2788, %rd2786, %rd2787;
	xor.b64  	%rd2789, %rd2747, %rd2722;
	and.b64  	%rd2790, %rd2772, %rd2789;
	xor.b64  	%rd2791, %rd2790, %rd2722;
	add.s64 	%rd2792, %rd2697, %rd2456;
	ld.const.u64 	%rd2793, [k_sha512+600];
	add.s64 	%rd2794, %rd2792, %rd2793;
	add.s64 	%rd2795, %rd2794, %rd2791;
	add.s64 	%rd2796, %rd2795, %rd2788;
	add.s64 	%rd2797, %rd2796, %rd2708;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7362,%dummy}, %rd2783;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7363}, %rd2783;
	}
	shf.r.wrap.b32 	%r7364, %r7363, %r7362, 28;
	shf.r.wrap.b32 	%r7365, %r7362, %r7363, 28;
	mov.b64 	%rd2798, {%r7365, %r7364};
	shf.l.wrap.b32 	%r7366, %r7362, %r7363, 30;
	shf.l.wrap.b32 	%r7367, %r7363, %r7362, 30;
	mov.b64 	%rd2799, {%r7367, %r7366};
	xor.b64  	%rd2800, %rd2799, %rd2798;
	shf.l.wrap.b32 	%r7368, %r7362, %r7363, 25;
	shf.l.wrap.b32 	%r7369, %r7363, %r7362, 25;
	mov.b64 	%rd2801, {%r7369, %r7368};
	xor.b64  	%rd2802, %rd2800, %rd2801;
	xor.b64  	%rd2803, %rd2783, %rd2733;
	xor.b64  	%rd2804, %rd2783, %rd2758;
	and.b64  	%rd2805, %rd2804, %rd2803;
	xor.b64  	%rd2806, %rd2805, %rd2783;
	add.s64 	%rd2807, %rd2796, %rd2806;
	add.s64 	%rd2808, %rd2807, %rd2802;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7370,%dummy}, %rd2797;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7371}, %rd2797;
	}
	shf.r.wrap.b32 	%r7372, %r7371, %r7370, 14;
	shf.r.wrap.b32 	%r7373, %r7370, %r7371, 14;
	mov.b64 	%rd2809, {%r7373, %r7372};
	shf.r.wrap.b32 	%r7374, %r7371, %r7370, 18;
	shf.r.wrap.b32 	%r7375, %r7370, %r7371, 18;
	mov.b64 	%rd2810, {%r7375, %r7374};
	xor.b64  	%rd2811, %rd2810, %rd2809;
	shf.l.wrap.b32 	%r7376, %r7370, %r7371, 23;
	shf.l.wrap.b32 	%r7377, %r7371, %r7370, 23;
	mov.b64 	%rd2812, {%r7377, %r7376};
	xor.b64  	%rd2813, %rd2811, %rd2812;
	xor.b64  	%rd2814, %rd2772, %rd2747;
	and.b64  	%rd2815, %rd2797, %rd2814;
	xor.b64  	%rd2816, %rd2815, %rd2747;
	add.s64 	%rd2817, %rd2722, %rd2469;
	ld.const.u64 	%rd2818, [k_sha512+608];
	add.s64 	%rd2819, %rd2817, %rd2818;
	add.s64 	%rd2820, %rd2819, %rd2816;
	add.s64 	%rd2821, %rd2820, %rd2813;
	add.s64 	%rd2822, %rd2821, %rd2733;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7378,%dummy}, %rd2808;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7379}, %rd2808;
	}
	shf.r.wrap.b32 	%r7380, %r7379, %r7378, 28;
	shf.r.wrap.b32 	%r7381, %r7378, %r7379, 28;
	mov.b64 	%rd2823, {%r7381, %r7380};
	shf.l.wrap.b32 	%r7382, %r7378, %r7379, 30;
	shf.l.wrap.b32 	%r7383, %r7379, %r7378, 30;
	mov.b64 	%rd2824, {%r7383, %r7382};
	xor.b64  	%rd2825, %rd2824, %rd2823;
	shf.l.wrap.b32 	%r7384, %r7378, %r7379, 25;
	shf.l.wrap.b32 	%r7385, %r7379, %r7378, 25;
	mov.b64 	%rd2826, {%r7385, %r7384};
	xor.b64  	%rd2827, %rd2825, %rd2826;
	xor.b64  	%rd2828, %rd2808, %rd2758;
	xor.b64  	%rd2829, %rd2808, %rd2783;
	and.b64  	%rd2830, %rd2829, %rd2828;
	xor.b64  	%rd2831, %rd2830, %rd2808;
	add.s64 	%rd2832, %rd2821, %rd2831;
	add.s64 	%rd2833, %rd2832, %rd2827;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7386,%dummy}, %rd2822;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7387}, %rd2822;
	}
	shf.r.wrap.b32 	%r7388, %r7387, %r7386, 14;
	shf.r.wrap.b32 	%r7389, %r7386, %r7387, 14;
	mov.b64 	%rd2834, {%r7389, %r7388};
	shf.r.wrap.b32 	%r7390, %r7387, %r7386, 18;
	shf.r.wrap.b32 	%r7391, %r7386, %r7387, 18;
	mov.b64 	%rd2835, {%r7391, %r7390};
	xor.b64  	%rd2836, %rd2835, %rd2834;
	shf.l.wrap.b32 	%r7392, %r7386, %r7387, 23;
	shf.l.wrap.b32 	%r7393, %r7387, %r7386, 23;
	mov.b64 	%rd2837, {%r7393, %r7392};
	xor.b64  	%rd2838, %rd2836, %rd2837;
	xor.b64  	%rd2839, %rd2797, %rd2772;
	and.b64  	%rd2840, %rd2822, %rd2839;
	xor.b64  	%rd2841, %rd2840, %rd2772;
	add.s64 	%rd2842, %rd2747, %rd2482;
	ld.const.u64 	%rd2843, [k_sha512+616];
	add.s64 	%rd2844, %rd2842, %rd2843;
	add.s64 	%rd2845, %rd2844, %rd2841;
	add.s64 	%rd2846, %rd2845, %rd2838;
	add.s64 	%rd2847, %rd2846, %rd2758;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7394,%dummy}, %rd2833;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7395}, %rd2833;
	}
	shf.r.wrap.b32 	%r7396, %r7395, %r7394, 28;
	shf.r.wrap.b32 	%r7397, %r7394, %r7395, 28;
	mov.b64 	%rd2848, {%r7397, %r7396};
	shf.l.wrap.b32 	%r7398, %r7394, %r7395, 30;
	shf.l.wrap.b32 	%r7399, %r7395, %r7394, 30;
	mov.b64 	%rd2849, {%r7399, %r7398};
	xor.b64  	%rd2850, %rd2849, %rd2848;
	shf.l.wrap.b32 	%r7400, %r7394, %r7395, 25;
	shf.l.wrap.b32 	%r7401, %r7395, %r7394, 25;
	mov.b64 	%rd2851, {%r7401, %r7400};
	xor.b64  	%rd2852, %rd2850, %rd2851;
	xor.b64  	%rd2853, %rd2833, %rd2783;
	xor.b64  	%rd2854, %rd2833, %rd2808;
	and.b64  	%rd2855, %rd2854, %rd2853;
	xor.b64  	%rd2856, %rd2855, %rd2833;
	add.s64 	%rd2857, %rd2846, %rd2856;
	add.s64 	%rd2858, %rd2857, %rd2852;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7402,%dummy}, %rd2847;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7403}, %rd2847;
	}
	shf.r.wrap.b32 	%r7404, %r7403, %r7402, 14;
	shf.r.wrap.b32 	%r7405, %r7402, %r7403, 14;
	mov.b64 	%rd2859, {%r7405, %r7404};
	shf.r.wrap.b32 	%r7406, %r7403, %r7402, 18;
	shf.r.wrap.b32 	%r7407, %r7402, %r7403, 18;
	mov.b64 	%rd2860, {%r7407, %r7406};
	xor.b64  	%rd2861, %rd2860, %rd2859;
	shf.l.wrap.b32 	%r7408, %r7402, %r7403, 23;
	shf.l.wrap.b32 	%r7409, %r7403, %r7402, 23;
	mov.b64 	%rd2862, {%r7409, %r7408};
	xor.b64  	%rd2863, %rd2861, %rd2862;
	xor.b64  	%rd2864, %rd2822, %rd2797;
	and.b64  	%rd2865, %rd2847, %rd2864;
	xor.b64  	%rd2866, %rd2865, %rd2797;
	add.s64 	%rd2867, %rd2772, %rd2495;
	ld.const.u64 	%rd2868, [k_sha512+624];
	add.s64 	%rd2869, %rd2867, %rd2868;
	add.s64 	%rd2870, %rd2869, %rd2866;
	add.s64 	%rd2871, %rd2870, %rd2863;
	add.s64 	%rd2872, %rd2871, %rd2783;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7410,%dummy}, %rd2858;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7411}, %rd2858;
	}
	shf.r.wrap.b32 	%r7412, %r7411, %r7410, 28;
	shf.r.wrap.b32 	%r7413, %r7410, %r7411, 28;
	mov.b64 	%rd2873, {%r7413, %r7412};
	shf.l.wrap.b32 	%r7414, %r7410, %r7411, 30;
	shf.l.wrap.b32 	%r7415, %r7411, %r7410, 30;
	mov.b64 	%rd2874, {%r7415, %r7414};
	xor.b64  	%rd2875, %rd2874, %rd2873;
	shf.l.wrap.b32 	%r7416, %r7410, %r7411, 25;
	shf.l.wrap.b32 	%r7417, %r7411, %r7410, 25;
	mov.b64 	%rd2876, {%r7417, %r7416};
	xor.b64  	%rd2877, %rd2875, %rd2876;
	xor.b64  	%rd2878, %rd2858, %rd2808;
	xor.b64  	%rd2879, %rd2858, %rd2833;
	and.b64  	%rd2880, %rd2879, %rd2878;
	xor.b64  	%rd2881, %rd2880, %rd2858;
	add.s64 	%rd2882, %rd2871, %rd2881;
	add.s64 	%rd2883, %rd2882, %rd2877;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7418,%dummy}, %rd2872;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7419}, %rd2872;
	}
	shf.r.wrap.b32 	%r7420, %r7419, %r7418, 14;
	shf.r.wrap.b32 	%r7421, %r7418, %r7419, 14;
	mov.b64 	%rd2884, {%r7421, %r7420};
	shf.r.wrap.b32 	%r7422, %r7419, %r7418, 18;
	shf.r.wrap.b32 	%r7423, %r7418, %r7419, 18;
	mov.b64 	%rd2885, {%r7423, %r7422};
	xor.b64  	%rd2886, %rd2885, %rd2884;
	shf.l.wrap.b32 	%r7424, %r7418, %r7419, 23;
	shf.l.wrap.b32 	%r7425, %r7419, %r7418, 23;
	mov.b64 	%rd2887, {%r7425, %r7424};
	xor.b64  	%rd2888, %rd2886, %rd2887;
	xor.b64  	%rd2889, %rd2847, %rd2822;
	and.b64  	%rd2890, %rd2872, %rd2889;
	xor.b64  	%rd2891, %rd2890, %rd2822;
	add.s64 	%rd2892, %rd2797, %rd2508;
	ld.const.u64 	%rd2893, [k_sha512+632];
	add.s64 	%rd2894, %rd2892, %rd2893;
	add.s64 	%rd2895, %rd2894, %rd2891;
	add.s64 	%rd2896, %rd2895, %rd2888;
	add.s64 	%rd2897, %rd2896, %rd2808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7426,%dummy}, %rd2883;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7427}, %rd2883;
	}
	shf.r.wrap.b32 	%r7428, %r7427, %r7426, 28;
	shf.r.wrap.b32 	%r7429, %r7426, %r7427, 28;
	mov.b64 	%rd2898, {%r7429, %r7428};
	shf.l.wrap.b32 	%r7430, %r7426, %r7427, 30;
	shf.l.wrap.b32 	%r7431, %r7427, %r7426, 30;
	mov.b64 	%rd2899, {%r7431, %r7430};
	xor.b64  	%rd2900, %rd2899, %rd2898;
	shf.l.wrap.b32 	%r7432, %r7426, %r7427, 25;
	shf.l.wrap.b32 	%r7433, %r7427, %r7426, 25;
	mov.b64 	%rd2901, {%r7433, %r7432};
	xor.b64  	%rd2902, %rd2900, %rd2901;
	xor.b64  	%rd2903, %rd2883, %rd2833;
	xor.b64  	%rd2904, %rd2883, %rd2858;
	and.b64  	%rd2905, %rd2904, %rd2903;
	xor.b64  	%rd2906, %rd2905, %rd2883;
	add.s64 	%rd2907, %rd2896, %rd2906;
	add.s64 	%rd2908, %rd2907, %rd2902;
	add.s64 	%rd2909, %rd88, %rd2908;
	st.u64 	[%rd1+-192], %rd2909;
	add.s64 	%rd2910, %rd96, %rd2883;
	st.u64 	[%rd1+-184], %rd2910;
	add.s64 	%rd2911, %rd94, %rd2858;
	st.u64 	[%rd1+-176], %rd2911;
	add.s64 	%rd2912, %rd86, %rd2833;
	st.u64 	[%rd1+-168], %rd2912;
	add.s64 	%rd2913, %rd69, %rd2897;
	st.u64 	[%rd1+-160], %rd2913;
	add.s64 	%rd2914, %rd76, %rd2872;
	st.u64 	[%rd1+-152], %rd2914;
	add.s64 	%rd2915, %rd75, %rd2847;
	st.u64 	[%rd1+-144], %rd2915;
	add.s64 	%rd2916, %rd80, %rd2822;
	st.u64 	[%rd1+-136], %rd2916;
	st.v2.u32 	[%rd1+-128], {%r9676, %r9675};
	st.v2.u32 	[%rd1+-120], {%r9674, %r9673};
	st.v2.u32 	[%rd1+-112], {%r9680, %r9679};
	st.v2.u32 	[%rd1+-104], {%r9678, %r9677};
	st.v2.u32 	[%rd1+-96], {%r9684, %r9683};
	st.v2.u32 	[%rd1+-88], {%r9682, %r9681};
	st.v2.u32 	[%rd1+-80], {%r9688, %r9687};
	st.v2.u32 	[%rd1+-72], {%r9686, %r9685};
	st.v2.u32 	[%rd1+-64], {%r9692, %r9691};
	st.v2.u32 	[%rd1+-56], {%r9690, %r9689};
	st.v2.u32 	[%rd1+-48], {%r9696, %r9695};
	st.v2.u32 	[%rd1+-40], {%r9694, %r9693};
	st.v2.u32 	[%rd1+-32], {%r9700, %r9699};
	st.v2.u32 	[%rd1+-24], {%r9698, %r9697};
	st.v2.u32 	[%rd1+-16], {%r9704, %r9703};
	st.v2.u32 	[%rd1+-8], {%r9702, %r9701};

BB1_171:
	ret;
}

.func sha512_update_global_utf16le_swap(
	.param .b64 sha512_update_global_utf16le_swap_param_0,
	.param .b64 sha512_update_global_utf16le_swap_param_1,
	.param .b32 sha512_update_global_utf16le_swap_param_2
)
{
	.local .align 16 .b8 	__local_depot2[128];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<49>;
	.reg .b32 	%r<8946>;
	.reg .b64 	%rd<2980>;


	mov.u64 	%SPL, __local_depot2;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd26, [sha512_update_global_utf16le_swap_param_0];
	cvta.to.local.u64 	%rd1, %rd26;
	add.u64 	%rd28, %SP, 0;
	cvta.to.local.u64 	%rd2, %rd28;
	add.u64 	%rd29, %SP, 16;
	cvta.to.local.u64 	%rd3, %rd29;
	add.u64 	%rd30, %SP, 32;
	cvta.to.local.u64 	%rd4, %rd30;
	add.u64 	%rd31, %SP, 48;
	cvta.to.local.u64 	%rd5, %rd31;
	add.u64 	%rd32, %SP, 64;
	cvta.to.local.u64 	%rd6, %rd32;
	add.u64 	%rd33, %SP, 80;
	cvta.to.local.u64 	%rd7, %rd33;
	add.u64 	%rd34, %SP, 96;
	cvta.to.local.u64 	%rd8, %rd34;
	add.u64 	%rd35, %SP, 112;
	cvta.to.local.u64 	%rd9, %rd35;
	mov.u32 	%r8911, 0;
	mov.u32 	%r8912, %r8911;
	bra.uni 	BB2_1;

BB2_91:
	ld.const.u64 	%rd2979, [k_sha512+120];
	ld.const.u64 	%rd2978, [k_sha512+112];
	ld.const.u64 	%rd2977, [k_sha512+104];
	ld.const.u64 	%rd2976, [k_sha512+96];
	ld.const.u64 	%rd2975, [k_sha512+88];
	ld.const.u64 	%rd2974, [k_sha512+80];
	ld.const.u64 	%rd2973, [k_sha512+72];
	ld.const.u64 	%rd2972, [k_sha512+64];
	ld.const.u64 	%rd2971, [k_sha512+56];
	ld.const.u64 	%rd2970, [k_sha512+48];
	ld.const.u64 	%rd2969, [k_sha512+40];
	ld.const.u64 	%rd2968, [k_sha512+32];
	ld.const.u64 	%rd2967, [k_sha512+24];
	ld.const.u64 	%rd2966, [k_sha512+16];
	ld.const.u64 	%rd2965, [k_sha512+8];
	ld.const.u64 	%rd2964, [k_sha512];
	ld.local.v2.u32 	{%r6805, %r6806}, [%rd1+64];
	ld.local.u32 	%r6809, [%rd2+4];
	ld.local.v2.u32 	{%r6810, %r6811}, [%rd1+72];
	ld.local.v2.u32 	{%r6814, %r6815}, [%rd2+8];
	ld.local.v2.u32 	{%r6818, %r6819}, [%rd1+80];
	ld.local.v2.u32 	{%r6822, %r6823}, [%rd1+88];
	ld.local.v4.u32 	{%r6826, %r6827, %r6828, %r6829}, [%rd3];
	ld.local.v2.u32 	{%r6834, %r6835}, [%rd1+96];
	ld.local.v2.u32 	{%r6838, %r6839}, [%rd1+104];
	ld.local.v4.u32 	{%r6842, %r6843, %r6844, %r6845}, [%rd4];
	ld.local.v2.u32 	{%r6850, %r6851}, [%rd1+112];
	ld.local.v2.u32 	{%r6854, %r6855}, [%rd1+120];
	ld.local.v4.u32 	{%r6858, %r6859, %r6860, %r6861}, [%rd5];
	ld.local.v2.u32 	{%r6866, %r6867}, [%rd1+128];
	ld.local.v2.u32 	{%r6870, %r6871}, [%rd1+136];
	ld.local.v4.u32 	{%r6874, %r6875, %r6876, %r6877}, [%rd6];
	ld.local.v2.u32 	{%r6882, %r6883}, [%rd1+144];
	ld.local.v2.u32 	{%r6886, %r6887}, [%rd1+152];
	ld.local.v4.u32 	{%r6890, %r6891, %r6892, %r6893}, [%rd7];
	ld.local.v2.u32 	{%r6898, %r6899}, [%rd1+160];
	ld.local.v2.u32 	{%r6902, %r6903}, [%rd1+168];
	ld.local.v4.u32 	{%r6906, %r6907, %r6908, %r6909}, [%rd8];
	ld.local.v2.u32 	{%r6914, %r6915}, [%rd1+176];
	ld.local.v2.u32 	{%r6918, %r6919}, [%rd1+184];
	ld.local.v4.u32 	{%r6922, %r6923, %r6924, %r6925}, [%rd9];
	or.b32  	%r6930, %r6805, %r8913;
	or.b32  	%r6931, %r6806, %r6809;
	mov.b64	%rd106, {%r6931, %r6930};
	or.b32  	%r6932, %r6810, %r6814;
	or.b32  	%r6933, %r6811, %r6815;
	mov.b64	%rd107, {%r6933, %r6932};
	or.b32  	%r6934, %r6818, %r6826;
	or.b32  	%r6935, %r6819, %r6827;
	mov.b64	%rd108, {%r6935, %r6934};
	or.b32  	%r6936, %r6822, %r6828;
	or.b32  	%r6937, %r6823, %r6829;
	mov.b64	%rd109, {%r6937, %r6936};
	or.b32  	%r6938, %r6834, %r6842;
	or.b32  	%r6939, %r6835, %r6843;
	mov.b64	%rd110, {%r6939, %r6938};
	or.b32  	%r6940, %r6838, %r6844;
	or.b32  	%r6941, %r6839, %r6845;
	mov.b64	%rd111, {%r6941, %r6940};
	or.b32  	%r6942, %r6850, %r6858;
	or.b32  	%r6943, %r6851, %r6859;
	mov.b64	%rd112, {%r6943, %r6942};
	or.b32  	%r6944, %r6854, %r6860;
	or.b32  	%r6945, %r6855, %r6861;
	mov.b64	%rd113, {%r6945, %r6944};
	or.b32  	%r6946, %r6866, %r6874;
	or.b32  	%r6947, %r6867, %r6875;
	mov.b64	%rd114, {%r6947, %r6946};
	or.b32  	%r6948, %r6870, %r6876;
	or.b32  	%r6949, %r6871, %r6877;
	mov.b64	%rd115, {%r6949, %r6948};
	or.b32  	%r6950, %r6882, %r6890;
	or.b32  	%r6951, %r6883, %r6891;
	mov.b64	%rd116, {%r6951, %r6950};
	or.b32  	%r6952, %r6886, %r6892;
	or.b32  	%r6953, %r6887, %r6893;
	mov.b64	%rd117, {%r6953, %r6952};
	or.b32  	%r6954, %r6898, %r6906;
	or.b32  	%r6955, %r6899, %r6907;
	mov.b64	%rd118, {%r6955, %r6954};
	or.b32  	%r6956, %r6902, %r6908;
	or.b32  	%r6957, %r6903, %r6909;
	mov.b64	%rd119, {%r6957, %r6956};
	or.b32  	%r6958, %r6914, %r6922;
	or.b32  	%r6959, %r6915, %r6923;
	mov.b64	%rd120, {%r6959, %r6958};
	or.b32  	%r6960, %r6918, %r6924;
	or.b32  	%r6961, %r6919, %r6925;
	mov.b64	%rd121, {%r6961, %r6960};
	ld.local.u64 	%rd122, [%rd1+32];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6962,%dummy}, %rd122;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6963}, %rd122;
	}
	shf.r.wrap.b32 	%r6964, %r6963, %r6962, 14;
	shf.r.wrap.b32 	%r6965, %r6962, %r6963, 14;
	mov.b64 	%rd123, {%r6965, %r6964};
	shf.r.wrap.b32 	%r6966, %r6963, %r6962, 18;
	shf.r.wrap.b32 	%r6967, %r6962, %r6963, 18;
	mov.b64 	%rd124, {%r6967, %r6966};
	xor.b64  	%rd125, %rd124, %rd123;
	shf.l.wrap.b32 	%r6968, %r6962, %r6963, 23;
	shf.l.wrap.b32 	%r6969, %r6963, %r6962, 23;
	mov.b64 	%rd126, {%r6969, %r6968};
	xor.b64  	%rd127, %rd125, %rd126;
	ld.local.u64 	%rd128, [%rd1+48];
	ld.local.u64 	%rd129, [%rd1+40];
	xor.b64  	%rd130, %rd128, %rd129;
	and.b64  	%rd131, %rd130, %rd122;
	xor.b64  	%rd132, %rd131, %rd128;
	ld.local.u64 	%rd133, [%rd1+56];
	add.s64 	%rd134, %rd132, %rd133;
	add.s64 	%rd135, %rd134, %rd106;
	add.s64 	%rd136, %rd135, %rd2964;
	add.s64 	%rd137, %rd136, %rd127;
	ld.local.u64 	%rd138, [%rd1+24];
	add.s64 	%rd139, %rd137, %rd138;
	ld.local.u64 	%rd140, [%rd1];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6970,%dummy}, %rd140;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6971}, %rd140;
	}
	shf.r.wrap.b32 	%r6972, %r6971, %r6970, 28;
	shf.r.wrap.b32 	%r6973, %r6970, %r6971, 28;
	mov.b64 	%rd141, {%r6973, %r6972};
	shf.l.wrap.b32 	%r6974, %r6970, %r6971, 30;
	shf.l.wrap.b32 	%r6975, %r6971, %r6970, 30;
	mov.b64 	%rd142, {%r6975, %r6974};
	xor.b64  	%rd143, %rd142, %rd141;
	shf.l.wrap.b32 	%r6976, %r6970, %r6971, 25;
	shf.l.wrap.b32 	%r6977, %r6971, %r6970, 25;
	mov.b64 	%rd144, {%r6977, %r6976};
	xor.b64  	%rd145, %rd143, %rd144;
	ld.local.u64 	%rd146, [%rd1+16];
	xor.b64  	%rd147, %rd146, %rd140;
	ld.local.u64 	%rd148, [%rd1+8];
	xor.b64  	%rd149, %rd148, %rd140;
	and.b64  	%rd150, %rd147, %rd149;
	xor.b64  	%rd151, %rd150, %rd140;
	add.s64 	%rd152, %rd137, %rd151;
	add.s64 	%rd153, %rd152, %rd145;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6978,%dummy}, %rd139;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6979}, %rd139;
	}
	shf.r.wrap.b32 	%r6980, %r6979, %r6978, 14;
	shf.r.wrap.b32 	%r6981, %r6978, %r6979, 14;
	mov.b64 	%rd154, {%r6981, %r6980};
	shf.r.wrap.b32 	%r6982, %r6979, %r6978, 18;
	shf.r.wrap.b32 	%r6983, %r6978, %r6979, 18;
	mov.b64 	%rd155, {%r6983, %r6982};
	xor.b64  	%rd156, %rd155, %rd154;
	shf.l.wrap.b32 	%r6984, %r6978, %r6979, 23;
	shf.l.wrap.b32 	%r6985, %r6979, %r6978, 23;
	mov.b64 	%rd157, {%r6985, %r6984};
	xor.b64  	%rd158, %rd156, %rd157;
	xor.b64  	%rd159, %rd129, %rd122;
	and.b64  	%rd160, %rd139, %rd159;
	xor.b64  	%rd161, %rd160, %rd129;
	add.s64 	%rd162, %rd107, %rd128;
	add.s64 	%rd163, %rd162, %rd2965;
	add.s64 	%rd164, %rd163, %rd161;
	add.s64 	%rd165, %rd164, %rd158;
	add.s64 	%rd166, %rd165, %rd146;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6986,%dummy}, %rd153;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6987}, %rd153;
	}
	shf.r.wrap.b32 	%r6988, %r6987, %r6986, 28;
	shf.r.wrap.b32 	%r6989, %r6986, %r6987, 28;
	mov.b64 	%rd167, {%r6989, %r6988};
	shf.l.wrap.b32 	%r6990, %r6986, %r6987, 30;
	shf.l.wrap.b32 	%r6991, %r6987, %r6986, 30;
	mov.b64 	%rd168, {%r6991, %r6990};
	xor.b64  	%rd169, %rd168, %rd167;
	shf.l.wrap.b32 	%r6992, %r6986, %r6987, 25;
	shf.l.wrap.b32 	%r6993, %r6987, %r6986, 25;
	mov.b64 	%rd170, {%r6993, %r6992};
	xor.b64  	%rd171, %rd169, %rd170;
	xor.b64  	%rd172, %rd153, %rd148;
	xor.b64  	%rd173, %rd153, %rd140;
	and.b64  	%rd174, %rd173, %rd172;
	xor.b64  	%rd175, %rd174, %rd153;
	add.s64 	%rd176, %rd165, %rd175;
	add.s64 	%rd177, %rd176, %rd171;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6994,%dummy}, %rd166;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6995}, %rd166;
	}
	shf.r.wrap.b32 	%r6996, %r6995, %r6994, 14;
	shf.r.wrap.b32 	%r6997, %r6994, %r6995, 14;
	mov.b64 	%rd178, {%r6997, %r6996};
	shf.r.wrap.b32 	%r6998, %r6995, %r6994, 18;
	shf.r.wrap.b32 	%r6999, %r6994, %r6995, 18;
	mov.b64 	%rd179, {%r6999, %r6998};
	xor.b64  	%rd180, %rd179, %rd178;
	shf.l.wrap.b32 	%r7000, %r6994, %r6995, 23;
	shf.l.wrap.b32 	%r7001, %r6995, %r6994, 23;
	mov.b64 	%rd181, {%r7001, %r7000};
	xor.b64  	%rd182, %rd180, %rd181;
	xor.b64  	%rd183, %rd139, %rd122;
	and.b64  	%rd184, %rd166, %rd183;
	xor.b64  	%rd185, %rd184, %rd122;
	add.s64 	%rd186, %rd108, %rd129;
	add.s64 	%rd187, %rd186, %rd2966;
	add.s64 	%rd188, %rd187, %rd185;
	add.s64 	%rd189, %rd188, %rd182;
	add.s64 	%rd190, %rd189, %rd148;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7002,%dummy}, %rd177;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7003}, %rd177;
	}
	shf.r.wrap.b32 	%r7004, %r7003, %r7002, 28;
	shf.r.wrap.b32 	%r7005, %r7002, %r7003, 28;
	mov.b64 	%rd191, {%r7005, %r7004};
	shf.l.wrap.b32 	%r7006, %r7002, %r7003, 30;
	shf.l.wrap.b32 	%r7007, %r7003, %r7002, 30;
	mov.b64 	%rd192, {%r7007, %r7006};
	xor.b64  	%rd193, %rd192, %rd191;
	shf.l.wrap.b32 	%r7008, %r7002, %r7003, 25;
	shf.l.wrap.b32 	%r7009, %r7003, %r7002, 25;
	mov.b64 	%rd194, {%r7009, %r7008};
	xor.b64  	%rd195, %rd193, %rd194;
	xor.b64  	%rd196, %rd177, %rd140;
	xor.b64  	%rd197, %rd177, %rd153;
	and.b64  	%rd198, %rd197, %rd196;
	xor.b64  	%rd199, %rd198, %rd177;
	add.s64 	%rd200, %rd189, %rd199;
	add.s64 	%rd201, %rd200, %rd195;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7010,%dummy}, %rd190;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7011}, %rd190;
	}
	shf.r.wrap.b32 	%r7012, %r7011, %r7010, 14;
	shf.r.wrap.b32 	%r7013, %r7010, %r7011, 14;
	mov.b64 	%rd202, {%r7013, %r7012};
	shf.r.wrap.b32 	%r7014, %r7011, %r7010, 18;
	shf.r.wrap.b32 	%r7015, %r7010, %r7011, 18;
	mov.b64 	%rd203, {%r7015, %r7014};
	xor.b64  	%rd204, %rd203, %rd202;
	shf.l.wrap.b32 	%r7016, %r7010, %r7011, 23;
	shf.l.wrap.b32 	%r7017, %r7011, %r7010, 23;
	mov.b64 	%rd205, {%r7017, %r7016};
	xor.b64  	%rd206, %rd204, %rd205;
	xor.b64  	%rd207, %rd166, %rd139;
	and.b64  	%rd208, %rd190, %rd207;
	xor.b64  	%rd209, %rd208, %rd139;
	add.s64 	%rd210, %rd109, %rd122;
	add.s64 	%rd211, %rd210, %rd2967;
	add.s64 	%rd212, %rd211, %rd209;
	add.s64 	%rd213, %rd212, %rd206;
	add.s64 	%rd214, %rd213, %rd140;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7018,%dummy}, %rd201;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7019}, %rd201;
	}
	shf.r.wrap.b32 	%r7020, %r7019, %r7018, 28;
	shf.r.wrap.b32 	%r7021, %r7018, %r7019, 28;
	mov.b64 	%rd215, {%r7021, %r7020};
	shf.l.wrap.b32 	%r7022, %r7018, %r7019, 30;
	shf.l.wrap.b32 	%r7023, %r7019, %r7018, 30;
	mov.b64 	%rd216, {%r7023, %r7022};
	xor.b64  	%rd217, %rd216, %rd215;
	shf.l.wrap.b32 	%r7024, %r7018, %r7019, 25;
	shf.l.wrap.b32 	%r7025, %r7019, %r7018, 25;
	mov.b64 	%rd218, {%r7025, %r7024};
	xor.b64  	%rd219, %rd217, %rd218;
	xor.b64  	%rd220, %rd201, %rd153;
	xor.b64  	%rd221, %rd201, %rd177;
	and.b64  	%rd222, %rd221, %rd220;
	xor.b64  	%rd223, %rd222, %rd201;
	add.s64 	%rd224, %rd213, %rd223;
	add.s64 	%rd225, %rd224, %rd219;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7026,%dummy}, %rd214;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7027}, %rd214;
	}
	shf.r.wrap.b32 	%r7028, %r7027, %r7026, 14;
	shf.r.wrap.b32 	%r7029, %r7026, %r7027, 14;
	mov.b64 	%rd226, {%r7029, %r7028};
	shf.r.wrap.b32 	%r7030, %r7027, %r7026, 18;
	shf.r.wrap.b32 	%r7031, %r7026, %r7027, 18;
	mov.b64 	%rd227, {%r7031, %r7030};
	xor.b64  	%rd228, %rd227, %rd226;
	shf.l.wrap.b32 	%r7032, %r7026, %r7027, 23;
	shf.l.wrap.b32 	%r7033, %r7027, %r7026, 23;
	mov.b64 	%rd229, {%r7033, %r7032};
	xor.b64  	%rd230, %rd228, %rd229;
	xor.b64  	%rd231, %rd190, %rd166;
	and.b64  	%rd232, %rd214, %rd231;
	xor.b64  	%rd233, %rd232, %rd166;
	add.s64 	%rd234, %rd139, %rd110;
	add.s64 	%rd235, %rd234, %rd2968;
	add.s64 	%rd236, %rd235, %rd233;
	add.s64 	%rd237, %rd236, %rd230;
	add.s64 	%rd238, %rd237, %rd153;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7034,%dummy}, %rd225;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7035}, %rd225;
	}
	shf.r.wrap.b32 	%r7036, %r7035, %r7034, 28;
	shf.r.wrap.b32 	%r7037, %r7034, %r7035, 28;
	mov.b64 	%rd239, {%r7037, %r7036};
	shf.l.wrap.b32 	%r7038, %r7034, %r7035, 30;
	shf.l.wrap.b32 	%r7039, %r7035, %r7034, 30;
	mov.b64 	%rd240, {%r7039, %r7038};
	xor.b64  	%rd241, %rd240, %rd239;
	shf.l.wrap.b32 	%r7040, %r7034, %r7035, 25;
	shf.l.wrap.b32 	%r7041, %r7035, %r7034, 25;
	mov.b64 	%rd242, {%r7041, %r7040};
	xor.b64  	%rd243, %rd241, %rd242;
	xor.b64  	%rd244, %rd225, %rd177;
	xor.b64  	%rd245, %rd225, %rd201;
	and.b64  	%rd246, %rd245, %rd244;
	xor.b64  	%rd247, %rd246, %rd225;
	add.s64 	%rd248, %rd237, %rd247;
	add.s64 	%rd249, %rd248, %rd243;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7042,%dummy}, %rd238;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7043}, %rd238;
	}
	shf.r.wrap.b32 	%r7044, %r7043, %r7042, 14;
	shf.r.wrap.b32 	%r7045, %r7042, %r7043, 14;
	mov.b64 	%rd250, {%r7045, %r7044};
	shf.r.wrap.b32 	%r7046, %r7043, %r7042, 18;
	shf.r.wrap.b32 	%r7047, %r7042, %r7043, 18;
	mov.b64 	%rd251, {%r7047, %r7046};
	xor.b64  	%rd252, %rd251, %rd250;
	shf.l.wrap.b32 	%r7048, %r7042, %r7043, 23;
	shf.l.wrap.b32 	%r7049, %r7043, %r7042, 23;
	mov.b64 	%rd253, {%r7049, %r7048};
	xor.b64  	%rd254, %rd252, %rd253;
	xor.b64  	%rd255, %rd214, %rd190;
	and.b64  	%rd256, %rd238, %rd255;
	xor.b64  	%rd257, %rd256, %rd190;
	add.s64 	%rd258, %rd166, %rd111;
	add.s64 	%rd259, %rd258, %rd2969;
	add.s64 	%rd260, %rd259, %rd257;
	add.s64 	%rd261, %rd260, %rd254;
	add.s64 	%rd262, %rd261, %rd177;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7050,%dummy}, %rd249;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7051}, %rd249;
	}
	shf.r.wrap.b32 	%r7052, %r7051, %r7050, 28;
	shf.r.wrap.b32 	%r7053, %r7050, %r7051, 28;
	mov.b64 	%rd263, {%r7053, %r7052};
	shf.l.wrap.b32 	%r7054, %r7050, %r7051, 30;
	shf.l.wrap.b32 	%r7055, %r7051, %r7050, 30;
	mov.b64 	%rd264, {%r7055, %r7054};
	xor.b64  	%rd265, %rd264, %rd263;
	shf.l.wrap.b32 	%r7056, %r7050, %r7051, 25;
	shf.l.wrap.b32 	%r7057, %r7051, %r7050, 25;
	mov.b64 	%rd266, {%r7057, %r7056};
	xor.b64  	%rd267, %rd265, %rd266;
	xor.b64  	%rd268, %rd249, %rd201;
	xor.b64  	%rd269, %rd249, %rd225;
	and.b64  	%rd270, %rd269, %rd268;
	xor.b64  	%rd271, %rd270, %rd249;
	add.s64 	%rd272, %rd261, %rd271;
	add.s64 	%rd273, %rd272, %rd267;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7058,%dummy}, %rd262;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7059}, %rd262;
	}
	shf.r.wrap.b32 	%r7060, %r7059, %r7058, 14;
	shf.r.wrap.b32 	%r7061, %r7058, %r7059, 14;
	mov.b64 	%rd274, {%r7061, %r7060};
	shf.r.wrap.b32 	%r7062, %r7059, %r7058, 18;
	shf.r.wrap.b32 	%r7063, %r7058, %r7059, 18;
	mov.b64 	%rd275, {%r7063, %r7062};
	xor.b64  	%rd276, %rd275, %rd274;
	shf.l.wrap.b32 	%r7064, %r7058, %r7059, 23;
	shf.l.wrap.b32 	%r7065, %r7059, %r7058, 23;
	mov.b64 	%rd277, {%r7065, %r7064};
	xor.b64  	%rd278, %rd276, %rd277;
	xor.b64  	%rd279, %rd238, %rd214;
	and.b64  	%rd280, %rd262, %rd279;
	xor.b64  	%rd281, %rd280, %rd214;
	add.s64 	%rd282, %rd190, %rd112;
	add.s64 	%rd283, %rd282, %rd2970;
	add.s64 	%rd284, %rd283, %rd281;
	add.s64 	%rd285, %rd284, %rd278;
	add.s64 	%rd286, %rd285, %rd201;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7066,%dummy}, %rd273;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7067}, %rd273;
	}
	shf.r.wrap.b32 	%r7068, %r7067, %r7066, 28;
	shf.r.wrap.b32 	%r7069, %r7066, %r7067, 28;
	mov.b64 	%rd287, {%r7069, %r7068};
	shf.l.wrap.b32 	%r7070, %r7066, %r7067, 30;
	shf.l.wrap.b32 	%r7071, %r7067, %r7066, 30;
	mov.b64 	%rd288, {%r7071, %r7070};
	xor.b64  	%rd289, %rd288, %rd287;
	shf.l.wrap.b32 	%r7072, %r7066, %r7067, 25;
	shf.l.wrap.b32 	%r7073, %r7067, %r7066, 25;
	mov.b64 	%rd290, {%r7073, %r7072};
	xor.b64  	%rd291, %rd289, %rd290;
	xor.b64  	%rd292, %rd273, %rd225;
	xor.b64  	%rd293, %rd273, %rd249;
	and.b64  	%rd294, %rd293, %rd292;
	xor.b64  	%rd295, %rd294, %rd273;
	add.s64 	%rd296, %rd285, %rd295;
	add.s64 	%rd297, %rd296, %rd291;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7074,%dummy}, %rd286;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7075}, %rd286;
	}
	shf.r.wrap.b32 	%r7076, %r7075, %r7074, 14;
	shf.r.wrap.b32 	%r7077, %r7074, %r7075, 14;
	mov.b64 	%rd298, {%r7077, %r7076};
	shf.r.wrap.b32 	%r7078, %r7075, %r7074, 18;
	shf.r.wrap.b32 	%r7079, %r7074, %r7075, 18;
	mov.b64 	%rd299, {%r7079, %r7078};
	xor.b64  	%rd300, %rd299, %rd298;
	shf.l.wrap.b32 	%r7080, %r7074, %r7075, 23;
	shf.l.wrap.b32 	%r7081, %r7075, %r7074, 23;
	mov.b64 	%rd301, {%r7081, %r7080};
	xor.b64  	%rd302, %rd300, %rd301;
	xor.b64  	%rd303, %rd262, %rd238;
	and.b64  	%rd304, %rd286, %rd303;
	xor.b64  	%rd305, %rd304, %rd238;
	add.s64 	%rd306, %rd214, %rd113;
	add.s64 	%rd307, %rd306, %rd2971;
	add.s64 	%rd308, %rd307, %rd305;
	add.s64 	%rd309, %rd308, %rd302;
	add.s64 	%rd310, %rd309, %rd225;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7082,%dummy}, %rd297;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7083}, %rd297;
	}
	shf.r.wrap.b32 	%r7084, %r7083, %r7082, 28;
	shf.r.wrap.b32 	%r7085, %r7082, %r7083, 28;
	mov.b64 	%rd311, {%r7085, %r7084};
	shf.l.wrap.b32 	%r7086, %r7082, %r7083, 30;
	shf.l.wrap.b32 	%r7087, %r7083, %r7082, 30;
	mov.b64 	%rd312, {%r7087, %r7086};
	xor.b64  	%rd313, %rd312, %rd311;
	shf.l.wrap.b32 	%r7088, %r7082, %r7083, 25;
	shf.l.wrap.b32 	%r7089, %r7083, %r7082, 25;
	mov.b64 	%rd314, {%r7089, %r7088};
	xor.b64  	%rd315, %rd313, %rd314;
	xor.b64  	%rd316, %rd297, %rd249;
	xor.b64  	%rd317, %rd297, %rd273;
	and.b64  	%rd318, %rd317, %rd316;
	xor.b64  	%rd319, %rd318, %rd297;
	add.s64 	%rd320, %rd309, %rd319;
	add.s64 	%rd321, %rd320, %rd315;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7090,%dummy}, %rd310;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7091}, %rd310;
	}
	shf.r.wrap.b32 	%r7092, %r7091, %r7090, 14;
	shf.r.wrap.b32 	%r7093, %r7090, %r7091, 14;
	mov.b64 	%rd322, {%r7093, %r7092};
	shf.r.wrap.b32 	%r7094, %r7091, %r7090, 18;
	shf.r.wrap.b32 	%r7095, %r7090, %r7091, 18;
	mov.b64 	%rd323, {%r7095, %r7094};
	xor.b64  	%rd324, %rd323, %rd322;
	shf.l.wrap.b32 	%r7096, %r7090, %r7091, 23;
	shf.l.wrap.b32 	%r7097, %r7091, %r7090, 23;
	mov.b64 	%rd325, {%r7097, %r7096};
	xor.b64  	%rd326, %rd324, %rd325;
	xor.b64  	%rd327, %rd286, %rd262;
	and.b64  	%rd328, %rd310, %rd327;
	xor.b64  	%rd329, %rd328, %rd262;
	add.s64 	%rd330, %rd238, %rd114;
	add.s64 	%rd331, %rd330, %rd2972;
	add.s64 	%rd332, %rd331, %rd329;
	add.s64 	%rd333, %rd332, %rd326;
	add.s64 	%rd334, %rd333, %rd249;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7098,%dummy}, %rd321;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7099}, %rd321;
	}
	shf.r.wrap.b32 	%r7100, %r7099, %r7098, 28;
	shf.r.wrap.b32 	%r7101, %r7098, %r7099, 28;
	mov.b64 	%rd335, {%r7101, %r7100};
	shf.l.wrap.b32 	%r7102, %r7098, %r7099, 30;
	shf.l.wrap.b32 	%r7103, %r7099, %r7098, 30;
	mov.b64 	%rd336, {%r7103, %r7102};
	xor.b64  	%rd337, %rd336, %rd335;
	shf.l.wrap.b32 	%r7104, %r7098, %r7099, 25;
	shf.l.wrap.b32 	%r7105, %r7099, %r7098, 25;
	mov.b64 	%rd338, {%r7105, %r7104};
	xor.b64  	%rd339, %rd337, %rd338;
	xor.b64  	%rd340, %rd321, %rd273;
	xor.b64  	%rd341, %rd321, %rd297;
	and.b64  	%rd342, %rd341, %rd340;
	xor.b64  	%rd343, %rd342, %rd321;
	add.s64 	%rd344, %rd333, %rd343;
	add.s64 	%rd345, %rd344, %rd339;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7106,%dummy}, %rd334;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7107}, %rd334;
	}
	shf.r.wrap.b32 	%r7108, %r7107, %r7106, 14;
	shf.r.wrap.b32 	%r7109, %r7106, %r7107, 14;
	mov.b64 	%rd346, {%r7109, %r7108};
	shf.r.wrap.b32 	%r7110, %r7107, %r7106, 18;
	shf.r.wrap.b32 	%r7111, %r7106, %r7107, 18;
	mov.b64 	%rd347, {%r7111, %r7110};
	xor.b64  	%rd348, %rd347, %rd346;
	shf.l.wrap.b32 	%r7112, %r7106, %r7107, 23;
	shf.l.wrap.b32 	%r7113, %r7107, %r7106, 23;
	mov.b64 	%rd349, {%r7113, %r7112};
	xor.b64  	%rd350, %rd348, %rd349;
	xor.b64  	%rd351, %rd310, %rd286;
	and.b64  	%rd352, %rd334, %rd351;
	xor.b64  	%rd353, %rd352, %rd286;
	add.s64 	%rd354, %rd262, %rd115;
	add.s64 	%rd355, %rd354, %rd2973;
	add.s64 	%rd356, %rd355, %rd353;
	add.s64 	%rd357, %rd356, %rd350;
	add.s64 	%rd358, %rd357, %rd273;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7114,%dummy}, %rd345;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7115}, %rd345;
	}
	shf.r.wrap.b32 	%r7116, %r7115, %r7114, 28;
	shf.r.wrap.b32 	%r7117, %r7114, %r7115, 28;
	mov.b64 	%rd359, {%r7117, %r7116};
	shf.l.wrap.b32 	%r7118, %r7114, %r7115, 30;
	shf.l.wrap.b32 	%r7119, %r7115, %r7114, 30;
	mov.b64 	%rd360, {%r7119, %r7118};
	xor.b64  	%rd361, %rd360, %rd359;
	shf.l.wrap.b32 	%r7120, %r7114, %r7115, 25;
	shf.l.wrap.b32 	%r7121, %r7115, %r7114, 25;
	mov.b64 	%rd362, {%r7121, %r7120};
	xor.b64  	%rd363, %rd361, %rd362;
	xor.b64  	%rd364, %rd345, %rd297;
	xor.b64  	%rd365, %rd345, %rd321;
	and.b64  	%rd366, %rd365, %rd364;
	xor.b64  	%rd367, %rd366, %rd345;
	add.s64 	%rd368, %rd357, %rd367;
	add.s64 	%rd369, %rd368, %rd363;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7122,%dummy}, %rd358;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7123}, %rd358;
	}
	shf.r.wrap.b32 	%r7124, %r7123, %r7122, 14;
	shf.r.wrap.b32 	%r7125, %r7122, %r7123, 14;
	mov.b64 	%rd370, {%r7125, %r7124};
	shf.r.wrap.b32 	%r7126, %r7123, %r7122, 18;
	shf.r.wrap.b32 	%r7127, %r7122, %r7123, 18;
	mov.b64 	%rd371, {%r7127, %r7126};
	xor.b64  	%rd372, %rd371, %rd370;
	shf.l.wrap.b32 	%r7128, %r7122, %r7123, 23;
	shf.l.wrap.b32 	%r7129, %r7123, %r7122, 23;
	mov.b64 	%rd373, {%r7129, %r7128};
	xor.b64  	%rd374, %rd372, %rd373;
	xor.b64  	%rd375, %rd334, %rd310;
	and.b64  	%rd376, %rd358, %rd375;
	xor.b64  	%rd377, %rd376, %rd310;
	add.s64 	%rd378, %rd286, %rd116;
	add.s64 	%rd379, %rd378, %rd2974;
	add.s64 	%rd380, %rd379, %rd377;
	add.s64 	%rd381, %rd380, %rd374;
	add.s64 	%rd382, %rd381, %rd297;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7130,%dummy}, %rd369;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7131}, %rd369;
	}
	shf.r.wrap.b32 	%r7132, %r7131, %r7130, 28;
	shf.r.wrap.b32 	%r7133, %r7130, %r7131, 28;
	mov.b64 	%rd383, {%r7133, %r7132};
	shf.l.wrap.b32 	%r7134, %r7130, %r7131, 30;
	shf.l.wrap.b32 	%r7135, %r7131, %r7130, 30;
	mov.b64 	%rd384, {%r7135, %r7134};
	xor.b64  	%rd385, %rd384, %rd383;
	shf.l.wrap.b32 	%r7136, %r7130, %r7131, 25;
	shf.l.wrap.b32 	%r7137, %r7131, %r7130, 25;
	mov.b64 	%rd386, {%r7137, %r7136};
	xor.b64  	%rd387, %rd385, %rd386;
	xor.b64  	%rd388, %rd369, %rd321;
	xor.b64  	%rd389, %rd369, %rd345;
	and.b64  	%rd390, %rd389, %rd388;
	xor.b64  	%rd391, %rd390, %rd369;
	add.s64 	%rd392, %rd381, %rd391;
	add.s64 	%rd393, %rd392, %rd387;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7138,%dummy}, %rd382;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7139}, %rd382;
	}
	shf.r.wrap.b32 	%r7140, %r7139, %r7138, 14;
	shf.r.wrap.b32 	%r7141, %r7138, %r7139, 14;
	mov.b64 	%rd394, {%r7141, %r7140};
	shf.r.wrap.b32 	%r7142, %r7139, %r7138, 18;
	shf.r.wrap.b32 	%r7143, %r7138, %r7139, 18;
	mov.b64 	%rd395, {%r7143, %r7142};
	xor.b64  	%rd396, %rd395, %rd394;
	shf.l.wrap.b32 	%r7144, %r7138, %r7139, 23;
	shf.l.wrap.b32 	%r7145, %r7139, %r7138, 23;
	mov.b64 	%rd397, {%r7145, %r7144};
	xor.b64  	%rd398, %rd396, %rd397;
	xor.b64  	%rd399, %rd358, %rd334;
	and.b64  	%rd400, %rd382, %rd399;
	xor.b64  	%rd401, %rd400, %rd334;
	add.s64 	%rd402, %rd310, %rd117;
	add.s64 	%rd403, %rd402, %rd2975;
	add.s64 	%rd404, %rd403, %rd401;
	add.s64 	%rd405, %rd404, %rd398;
	add.s64 	%rd406, %rd405, %rd321;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7146,%dummy}, %rd393;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7147}, %rd393;
	}
	shf.r.wrap.b32 	%r7148, %r7147, %r7146, 28;
	shf.r.wrap.b32 	%r7149, %r7146, %r7147, 28;
	mov.b64 	%rd407, {%r7149, %r7148};
	shf.l.wrap.b32 	%r7150, %r7146, %r7147, 30;
	shf.l.wrap.b32 	%r7151, %r7147, %r7146, 30;
	mov.b64 	%rd408, {%r7151, %r7150};
	xor.b64  	%rd409, %rd408, %rd407;
	shf.l.wrap.b32 	%r7152, %r7146, %r7147, 25;
	shf.l.wrap.b32 	%r7153, %r7147, %r7146, 25;
	mov.b64 	%rd410, {%r7153, %r7152};
	xor.b64  	%rd411, %rd409, %rd410;
	xor.b64  	%rd412, %rd393, %rd345;
	xor.b64  	%rd413, %rd393, %rd369;
	and.b64  	%rd414, %rd413, %rd412;
	xor.b64  	%rd415, %rd414, %rd393;
	add.s64 	%rd416, %rd405, %rd415;
	add.s64 	%rd417, %rd416, %rd411;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7154,%dummy}, %rd406;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7155}, %rd406;
	}
	shf.r.wrap.b32 	%r7156, %r7155, %r7154, 14;
	shf.r.wrap.b32 	%r7157, %r7154, %r7155, 14;
	mov.b64 	%rd418, {%r7157, %r7156};
	shf.r.wrap.b32 	%r7158, %r7155, %r7154, 18;
	shf.r.wrap.b32 	%r7159, %r7154, %r7155, 18;
	mov.b64 	%rd419, {%r7159, %r7158};
	xor.b64  	%rd420, %rd419, %rd418;
	shf.l.wrap.b32 	%r7160, %r7154, %r7155, 23;
	shf.l.wrap.b32 	%r7161, %r7155, %r7154, 23;
	mov.b64 	%rd421, {%r7161, %r7160};
	xor.b64  	%rd422, %rd420, %rd421;
	xor.b64  	%rd423, %rd382, %rd358;
	and.b64  	%rd424, %rd406, %rd423;
	xor.b64  	%rd425, %rd424, %rd358;
	add.s64 	%rd426, %rd334, %rd118;
	add.s64 	%rd427, %rd426, %rd2976;
	add.s64 	%rd428, %rd427, %rd425;
	add.s64 	%rd429, %rd428, %rd422;
	add.s64 	%rd430, %rd429, %rd345;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7162,%dummy}, %rd417;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7163}, %rd417;
	}
	shf.r.wrap.b32 	%r7164, %r7163, %r7162, 28;
	shf.r.wrap.b32 	%r7165, %r7162, %r7163, 28;
	mov.b64 	%rd431, {%r7165, %r7164};
	shf.l.wrap.b32 	%r7166, %r7162, %r7163, 30;
	shf.l.wrap.b32 	%r7167, %r7163, %r7162, 30;
	mov.b64 	%rd432, {%r7167, %r7166};
	xor.b64  	%rd433, %rd432, %rd431;
	shf.l.wrap.b32 	%r7168, %r7162, %r7163, 25;
	shf.l.wrap.b32 	%r7169, %r7163, %r7162, 25;
	mov.b64 	%rd434, {%r7169, %r7168};
	xor.b64  	%rd435, %rd433, %rd434;
	xor.b64  	%rd436, %rd417, %rd369;
	xor.b64  	%rd437, %rd417, %rd393;
	and.b64  	%rd438, %rd437, %rd436;
	xor.b64  	%rd439, %rd438, %rd417;
	add.s64 	%rd440, %rd429, %rd439;
	add.s64 	%rd441, %rd440, %rd435;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7170,%dummy}, %rd430;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7171}, %rd430;
	}
	shf.r.wrap.b32 	%r7172, %r7171, %r7170, 14;
	shf.r.wrap.b32 	%r7173, %r7170, %r7171, 14;
	mov.b64 	%rd442, {%r7173, %r7172};
	shf.r.wrap.b32 	%r7174, %r7171, %r7170, 18;
	shf.r.wrap.b32 	%r7175, %r7170, %r7171, 18;
	mov.b64 	%rd443, {%r7175, %r7174};
	xor.b64  	%rd444, %rd443, %rd442;
	shf.l.wrap.b32 	%r7176, %r7170, %r7171, 23;
	shf.l.wrap.b32 	%r7177, %r7171, %r7170, 23;
	mov.b64 	%rd445, {%r7177, %r7176};
	xor.b64  	%rd446, %rd444, %rd445;
	xor.b64  	%rd447, %rd406, %rd382;
	and.b64  	%rd448, %rd430, %rd447;
	xor.b64  	%rd449, %rd448, %rd382;
	add.s64 	%rd450, %rd358, %rd119;
	add.s64 	%rd451, %rd450, %rd2977;
	add.s64 	%rd452, %rd451, %rd449;
	add.s64 	%rd453, %rd452, %rd446;
	add.s64 	%rd454, %rd453, %rd369;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7178,%dummy}, %rd441;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7179}, %rd441;
	}
	shf.r.wrap.b32 	%r7180, %r7179, %r7178, 28;
	shf.r.wrap.b32 	%r7181, %r7178, %r7179, 28;
	mov.b64 	%rd455, {%r7181, %r7180};
	shf.l.wrap.b32 	%r7182, %r7178, %r7179, 30;
	shf.l.wrap.b32 	%r7183, %r7179, %r7178, 30;
	mov.b64 	%rd456, {%r7183, %r7182};
	xor.b64  	%rd457, %rd456, %rd455;
	shf.l.wrap.b32 	%r7184, %r7178, %r7179, 25;
	shf.l.wrap.b32 	%r7185, %r7179, %r7178, 25;
	mov.b64 	%rd458, {%r7185, %r7184};
	xor.b64  	%rd459, %rd457, %rd458;
	xor.b64  	%rd460, %rd441, %rd393;
	xor.b64  	%rd461, %rd441, %rd417;
	and.b64  	%rd462, %rd461, %rd460;
	xor.b64  	%rd463, %rd462, %rd441;
	add.s64 	%rd464, %rd453, %rd463;
	add.s64 	%rd465, %rd464, %rd459;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7186,%dummy}, %rd454;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7187}, %rd454;
	}
	shf.r.wrap.b32 	%r7188, %r7187, %r7186, 14;
	shf.r.wrap.b32 	%r7189, %r7186, %r7187, 14;
	mov.b64 	%rd466, {%r7189, %r7188};
	shf.r.wrap.b32 	%r7190, %r7187, %r7186, 18;
	shf.r.wrap.b32 	%r7191, %r7186, %r7187, 18;
	mov.b64 	%rd467, {%r7191, %r7190};
	xor.b64  	%rd468, %rd467, %rd466;
	shf.l.wrap.b32 	%r7192, %r7186, %r7187, 23;
	shf.l.wrap.b32 	%r7193, %r7187, %r7186, 23;
	mov.b64 	%rd469, {%r7193, %r7192};
	xor.b64  	%rd470, %rd468, %rd469;
	xor.b64  	%rd471, %rd430, %rd406;
	and.b64  	%rd472, %rd454, %rd471;
	xor.b64  	%rd473, %rd472, %rd406;
	add.s64 	%rd474, %rd382, %rd120;
	add.s64 	%rd475, %rd474, %rd2978;
	add.s64 	%rd476, %rd475, %rd473;
	add.s64 	%rd477, %rd476, %rd470;
	add.s64 	%rd478, %rd477, %rd393;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7194,%dummy}, %rd465;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7195}, %rd465;
	}
	shf.r.wrap.b32 	%r7196, %r7195, %r7194, 28;
	shf.r.wrap.b32 	%r7197, %r7194, %r7195, 28;
	mov.b64 	%rd479, {%r7197, %r7196};
	shf.l.wrap.b32 	%r7198, %r7194, %r7195, 30;
	shf.l.wrap.b32 	%r7199, %r7195, %r7194, 30;
	mov.b64 	%rd480, {%r7199, %r7198};
	xor.b64  	%rd481, %rd480, %rd479;
	shf.l.wrap.b32 	%r7200, %r7194, %r7195, 25;
	shf.l.wrap.b32 	%r7201, %r7195, %r7194, 25;
	mov.b64 	%rd482, {%r7201, %r7200};
	xor.b64  	%rd483, %rd481, %rd482;
	xor.b64  	%rd484, %rd465, %rd417;
	xor.b64  	%rd485, %rd465, %rd441;
	and.b64  	%rd486, %rd485, %rd484;
	xor.b64  	%rd487, %rd486, %rd465;
	add.s64 	%rd488, %rd477, %rd487;
	add.s64 	%rd489, %rd488, %rd483;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7202,%dummy}, %rd478;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7203}, %rd478;
	}
	shf.r.wrap.b32 	%r7204, %r7203, %r7202, 14;
	shf.r.wrap.b32 	%r7205, %r7202, %r7203, 14;
	mov.b64 	%rd490, {%r7205, %r7204};
	shf.r.wrap.b32 	%r7206, %r7203, %r7202, 18;
	shf.r.wrap.b32 	%r7207, %r7202, %r7203, 18;
	mov.b64 	%rd491, {%r7207, %r7206};
	xor.b64  	%rd492, %rd491, %rd490;
	shf.l.wrap.b32 	%r7208, %r7202, %r7203, 23;
	shf.l.wrap.b32 	%r7209, %r7203, %r7202, 23;
	mov.b64 	%rd493, {%r7209, %r7208};
	xor.b64  	%rd494, %rd492, %rd493;
	xor.b64  	%rd495, %rd454, %rd430;
	and.b64  	%rd496, %rd478, %rd495;
	xor.b64  	%rd497, %rd496, %rd430;
	add.s64 	%rd498, %rd406, %rd121;
	add.s64 	%rd499, %rd498, %rd2979;
	add.s64 	%rd500, %rd499, %rd497;
	add.s64 	%rd501, %rd500, %rd494;
	add.s64 	%rd502, %rd501, %rd417;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7210,%dummy}, %rd489;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7211}, %rd489;
	}
	shf.r.wrap.b32 	%r7212, %r7211, %r7210, 28;
	shf.r.wrap.b32 	%r7213, %r7210, %r7211, 28;
	mov.b64 	%rd503, {%r7213, %r7212};
	shf.l.wrap.b32 	%r7214, %r7210, %r7211, 30;
	shf.l.wrap.b32 	%r7215, %r7211, %r7210, 30;
	mov.b64 	%rd504, {%r7215, %r7214};
	xor.b64  	%rd505, %rd504, %rd503;
	shf.l.wrap.b32 	%r7216, %r7210, %r7211, 25;
	shf.l.wrap.b32 	%r7217, %r7211, %r7210, 25;
	mov.b64 	%rd506, {%r7217, %r7216};
	xor.b64  	%rd507, %rd505, %rd506;
	xor.b64  	%rd508, %rd489, %rd441;
	xor.b64  	%rd509, %rd489, %rd465;
	and.b64  	%rd510, %rd509, %rd508;
	xor.b64  	%rd511, %rd510, %rd489;
	add.s64 	%rd512, %rd501, %rd511;
	add.s64 	%rd513, %rd512, %rd507;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7218,%dummy}, %rd120;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7219}, %rd120;
	}
	shf.r.wrap.b32 	%r7220, %r7219, %r7218, 19;
	shf.r.wrap.b32 	%r7221, %r7218, %r7219, 19;
	mov.b64 	%rd514, {%r7221, %r7220};
	shf.l.wrap.b32 	%r7222, %r7218, %r7219, 3;
	shf.l.wrap.b32 	%r7223, %r7219, %r7218, 3;
	mov.b64 	%rd515, {%r7223, %r7222};
	shr.u64 	%rd516, %rd120, 6;
	xor.b64  	%rd517, %rd514, %rd516;
	xor.b64  	%rd518, %rd517, %rd515;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7224,%dummy}, %rd107;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7225}, %rd107;
	}
	shf.r.wrap.b32 	%r7226, %r7225, %r7224, 1;
	shf.r.wrap.b32 	%r7227, %r7224, %r7225, 1;
	mov.b64 	%rd519, {%r7227, %r7226};
	shf.r.wrap.b32 	%r7228, %r7225, %r7224, 8;
	shf.r.wrap.b32 	%r7229, %r7224, %r7225, 8;
	mov.b64 	%rd520, {%r7229, %r7228};
	shr.u64 	%rd521, %rd107, 7;
	xor.b64  	%rd522, %rd519, %rd521;
	xor.b64  	%rd523, %rd522, %rd520;
	add.s64 	%rd524, %rd115, %rd106;
	add.s64 	%rd525, %rd524, %rd518;
	add.s64 	%rd526, %rd525, %rd523;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7230,%dummy}, %rd121;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7231}, %rd121;
	}
	shf.r.wrap.b32 	%r7232, %r7231, %r7230, 19;
	shf.r.wrap.b32 	%r7233, %r7230, %r7231, 19;
	mov.b64 	%rd527, {%r7233, %r7232};
	shf.l.wrap.b32 	%r7234, %r7230, %r7231, 3;
	shf.l.wrap.b32 	%r7235, %r7231, %r7230, 3;
	mov.b64 	%rd528, {%r7235, %r7234};
	shr.u64 	%rd529, %rd121, 6;
	xor.b64  	%rd530, %rd527, %rd529;
	xor.b64  	%rd531, %rd530, %rd528;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7236,%dummy}, %rd108;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7237}, %rd108;
	}
	shf.r.wrap.b32 	%r7238, %r7237, %r7236, 1;
	shf.r.wrap.b32 	%r7239, %r7236, %r7237, 1;
	mov.b64 	%rd532, {%r7239, %r7238};
	shf.r.wrap.b32 	%r7240, %r7237, %r7236, 8;
	shf.r.wrap.b32 	%r7241, %r7236, %r7237, 8;
	mov.b64 	%rd533, {%r7241, %r7240};
	shr.u64 	%rd534, %rd108, 7;
	xor.b64  	%rd535, %rd532, %rd534;
	xor.b64  	%rd536, %rd535, %rd533;
	add.s64 	%rd537, %rd116, %rd107;
	add.s64 	%rd538, %rd537, %rd531;
	add.s64 	%rd539, %rd538, %rd536;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7242,%dummy}, %rd526;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7243}, %rd526;
	}
	shf.r.wrap.b32 	%r7244, %r7243, %r7242, 19;
	shf.r.wrap.b32 	%r7245, %r7242, %r7243, 19;
	mov.b64 	%rd540, {%r7245, %r7244};
	shf.l.wrap.b32 	%r7246, %r7242, %r7243, 3;
	shf.l.wrap.b32 	%r7247, %r7243, %r7242, 3;
	mov.b64 	%rd541, {%r7247, %r7246};
	shr.u64 	%rd542, %rd526, 6;
	xor.b64  	%rd543, %rd540, %rd542;
	xor.b64  	%rd544, %rd543, %rd541;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7248,%dummy}, %rd109;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7249}, %rd109;
	}
	shf.r.wrap.b32 	%r7250, %r7249, %r7248, 1;
	shf.r.wrap.b32 	%r7251, %r7248, %r7249, 1;
	mov.b64 	%rd545, {%r7251, %r7250};
	shf.r.wrap.b32 	%r7252, %r7249, %r7248, 8;
	shf.r.wrap.b32 	%r7253, %r7248, %r7249, 8;
	mov.b64 	%rd546, {%r7253, %r7252};
	shr.u64 	%rd547, %rd109, 7;
	xor.b64  	%rd548, %rd545, %rd547;
	xor.b64  	%rd549, %rd548, %rd546;
	add.s64 	%rd550, %rd117, %rd108;
	add.s64 	%rd551, %rd550, %rd544;
	add.s64 	%rd552, %rd551, %rd549;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7254,%dummy}, %rd539;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7255}, %rd539;
	}
	shf.r.wrap.b32 	%r7256, %r7255, %r7254, 19;
	shf.r.wrap.b32 	%r7257, %r7254, %r7255, 19;
	mov.b64 	%rd553, {%r7257, %r7256};
	shf.l.wrap.b32 	%r7258, %r7254, %r7255, 3;
	shf.l.wrap.b32 	%r7259, %r7255, %r7254, 3;
	mov.b64 	%rd554, {%r7259, %r7258};
	shr.u64 	%rd555, %rd539, 6;
	xor.b64  	%rd556, %rd553, %rd555;
	xor.b64  	%rd557, %rd556, %rd554;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7260,%dummy}, %rd110;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7261}, %rd110;
	}
	shf.r.wrap.b32 	%r7262, %r7261, %r7260, 1;
	shf.r.wrap.b32 	%r7263, %r7260, %r7261, 1;
	mov.b64 	%rd558, {%r7263, %r7262};
	shf.r.wrap.b32 	%r7264, %r7261, %r7260, 8;
	shf.r.wrap.b32 	%r7265, %r7260, %r7261, 8;
	mov.b64 	%rd559, {%r7265, %r7264};
	shr.u64 	%rd560, %rd110, 7;
	xor.b64  	%rd561, %rd558, %rd560;
	xor.b64  	%rd562, %rd561, %rd559;
	add.s64 	%rd563, %rd118, %rd109;
	add.s64 	%rd564, %rd563, %rd557;
	add.s64 	%rd565, %rd564, %rd562;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7266,%dummy}, %rd552;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7267}, %rd552;
	}
	shf.r.wrap.b32 	%r7268, %r7267, %r7266, 19;
	shf.r.wrap.b32 	%r7269, %r7266, %r7267, 19;
	mov.b64 	%rd566, {%r7269, %r7268};
	shf.l.wrap.b32 	%r7270, %r7266, %r7267, 3;
	shf.l.wrap.b32 	%r7271, %r7267, %r7266, 3;
	mov.b64 	%rd567, {%r7271, %r7270};
	shr.u64 	%rd568, %rd552, 6;
	xor.b64  	%rd569, %rd566, %rd568;
	xor.b64  	%rd570, %rd569, %rd567;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7272,%dummy}, %rd111;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7273}, %rd111;
	}
	shf.r.wrap.b32 	%r7274, %r7273, %r7272, 1;
	shf.r.wrap.b32 	%r7275, %r7272, %r7273, 1;
	mov.b64 	%rd571, {%r7275, %r7274};
	shf.r.wrap.b32 	%r7276, %r7273, %r7272, 8;
	shf.r.wrap.b32 	%r7277, %r7272, %r7273, 8;
	mov.b64 	%rd572, {%r7277, %r7276};
	shr.u64 	%rd573, %rd111, 7;
	xor.b64  	%rd574, %rd571, %rd573;
	xor.b64  	%rd575, %rd574, %rd572;
	add.s64 	%rd576, %rd119, %rd110;
	add.s64 	%rd577, %rd576, %rd570;
	add.s64 	%rd578, %rd577, %rd575;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7278,%dummy}, %rd565;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7279}, %rd565;
	}
	shf.r.wrap.b32 	%r7280, %r7279, %r7278, 19;
	shf.r.wrap.b32 	%r7281, %r7278, %r7279, 19;
	mov.b64 	%rd579, {%r7281, %r7280};
	shf.l.wrap.b32 	%r7282, %r7278, %r7279, 3;
	shf.l.wrap.b32 	%r7283, %r7279, %r7278, 3;
	mov.b64 	%rd580, {%r7283, %r7282};
	shr.u64 	%rd581, %rd565, 6;
	xor.b64  	%rd582, %rd579, %rd581;
	xor.b64  	%rd583, %rd582, %rd580;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7284,%dummy}, %rd112;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7285}, %rd112;
	}
	shf.r.wrap.b32 	%r7286, %r7285, %r7284, 1;
	shf.r.wrap.b32 	%r7287, %r7284, %r7285, 1;
	mov.b64 	%rd584, {%r7287, %r7286};
	shf.r.wrap.b32 	%r7288, %r7285, %r7284, 8;
	shf.r.wrap.b32 	%r7289, %r7284, %r7285, 8;
	mov.b64 	%rd585, {%r7289, %r7288};
	shr.u64 	%rd586, %rd112, 7;
	xor.b64  	%rd587, %rd584, %rd586;
	xor.b64  	%rd588, %rd587, %rd585;
	add.s64 	%rd589, %rd120, %rd111;
	add.s64 	%rd590, %rd589, %rd583;
	add.s64 	%rd591, %rd590, %rd588;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7290,%dummy}, %rd578;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7291}, %rd578;
	}
	shf.r.wrap.b32 	%r7292, %r7291, %r7290, 19;
	shf.r.wrap.b32 	%r7293, %r7290, %r7291, 19;
	mov.b64 	%rd592, {%r7293, %r7292};
	shf.l.wrap.b32 	%r7294, %r7290, %r7291, 3;
	shf.l.wrap.b32 	%r7295, %r7291, %r7290, 3;
	mov.b64 	%rd593, {%r7295, %r7294};
	shr.u64 	%rd594, %rd578, 6;
	xor.b64  	%rd595, %rd592, %rd594;
	xor.b64  	%rd596, %rd595, %rd593;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7296,%dummy}, %rd113;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7297}, %rd113;
	}
	shf.r.wrap.b32 	%r7298, %r7297, %r7296, 1;
	shf.r.wrap.b32 	%r7299, %r7296, %r7297, 1;
	mov.b64 	%rd597, {%r7299, %r7298};
	shf.r.wrap.b32 	%r7300, %r7297, %r7296, 8;
	shf.r.wrap.b32 	%r7301, %r7296, %r7297, 8;
	mov.b64 	%rd598, {%r7301, %r7300};
	shr.u64 	%rd599, %rd113, 7;
	xor.b64  	%rd600, %rd597, %rd599;
	xor.b64  	%rd601, %rd600, %rd598;
	add.s64 	%rd602, %rd121, %rd112;
	add.s64 	%rd603, %rd602, %rd596;
	add.s64 	%rd604, %rd603, %rd601;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7302,%dummy}, %rd591;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7303}, %rd591;
	}
	shf.r.wrap.b32 	%r7304, %r7303, %r7302, 19;
	shf.r.wrap.b32 	%r7305, %r7302, %r7303, 19;
	mov.b64 	%rd605, {%r7305, %r7304};
	shf.l.wrap.b32 	%r7306, %r7302, %r7303, 3;
	shf.l.wrap.b32 	%r7307, %r7303, %r7302, 3;
	mov.b64 	%rd606, {%r7307, %r7306};
	shr.u64 	%rd607, %rd591, 6;
	xor.b64  	%rd608, %rd605, %rd607;
	xor.b64  	%rd609, %rd608, %rd606;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7308,%dummy}, %rd114;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7309}, %rd114;
	}
	shf.r.wrap.b32 	%r7310, %r7309, %r7308, 1;
	shf.r.wrap.b32 	%r7311, %r7308, %r7309, 1;
	mov.b64 	%rd610, {%r7311, %r7310};
	shf.r.wrap.b32 	%r7312, %r7309, %r7308, 8;
	shf.r.wrap.b32 	%r7313, %r7308, %r7309, 8;
	mov.b64 	%rd611, {%r7313, %r7312};
	shr.u64 	%rd612, %rd114, 7;
	xor.b64  	%rd613, %rd610, %rd612;
	xor.b64  	%rd614, %rd613, %rd611;
	add.s64 	%rd615, %rd526, %rd113;
	add.s64 	%rd616, %rd615, %rd609;
	add.s64 	%rd617, %rd616, %rd614;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7314,%dummy}, %rd604;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7315}, %rd604;
	}
	shf.r.wrap.b32 	%r7316, %r7315, %r7314, 19;
	shf.r.wrap.b32 	%r7317, %r7314, %r7315, 19;
	mov.b64 	%rd618, {%r7317, %r7316};
	shf.l.wrap.b32 	%r7318, %r7314, %r7315, 3;
	shf.l.wrap.b32 	%r7319, %r7315, %r7314, 3;
	mov.b64 	%rd619, {%r7319, %r7318};
	shr.u64 	%rd620, %rd604, 6;
	xor.b64  	%rd621, %rd618, %rd620;
	xor.b64  	%rd622, %rd621, %rd619;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7320,%dummy}, %rd115;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7321}, %rd115;
	}
	shf.r.wrap.b32 	%r7322, %r7321, %r7320, 1;
	shf.r.wrap.b32 	%r7323, %r7320, %r7321, 1;
	mov.b64 	%rd623, {%r7323, %r7322};
	shf.r.wrap.b32 	%r7324, %r7321, %r7320, 8;
	shf.r.wrap.b32 	%r7325, %r7320, %r7321, 8;
	mov.b64 	%rd624, {%r7325, %r7324};
	shr.u64 	%rd625, %rd115, 7;
	xor.b64  	%rd626, %rd623, %rd625;
	xor.b64  	%rd627, %rd626, %rd624;
	add.s64 	%rd628, %rd539, %rd114;
	add.s64 	%rd629, %rd628, %rd622;
	add.s64 	%rd630, %rd629, %rd627;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7326,%dummy}, %rd617;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7327}, %rd617;
	}
	shf.r.wrap.b32 	%r7328, %r7327, %r7326, 19;
	shf.r.wrap.b32 	%r7329, %r7326, %r7327, 19;
	mov.b64 	%rd631, {%r7329, %r7328};
	shf.l.wrap.b32 	%r7330, %r7326, %r7327, 3;
	shf.l.wrap.b32 	%r7331, %r7327, %r7326, 3;
	mov.b64 	%rd632, {%r7331, %r7330};
	shr.u64 	%rd633, %rd617, 6;
	xor.b64  	%rd634, %rd631, %rd633;
	xor.b64  	%rd635, %rd634, %rd632;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7332,%dummy}, %rd116;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7333}, %rd116;
	}
	shf.r.wrap.b32 	%r7334, %r7333, %r7332, 1;
	shf.r.wrap.b32 	%r7335, %r7332, %r7333, 1;
	mov.b64 	%rd636, {%r7335, %r7334};
	shf.r.wrap.b32 	%r7336, %r7333, %r7332, 8;
	shf.r.wrap.b32 	%r7337, %r7332, %r7333, 8;
	mov.b64 	%rd637, {%r7337, %r7336};
	shr.u64 	%rd638, %rd116, 7;
	xor.b64  	%rd639, %rd636, %rd638;
	xor.b64  	%rd640, %rd639, %rd637;
	add.s64 	%rd641, %rd552, %rd115;
	add.s64 	%rd642, %rd641, %rd635;
	add.s64 	%rd643, %rd642, %rd640;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7338,%dummy}, %rd630;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7339}, %rd630;
	}
	shf.r.wrap.b32 	%r7340, %r7339, %r7338, 19;
	shf.r.wrap.b32 	%r7341, %r7338, %r7339, 19;
	mov.b64 	%rd644, {%r7341, %r7340};
	shf.l.wrap.b32 	%r7342, %r7338, %r7339, 3;
	shf.l.wrap.b32 	%r7343, %r7339, %r7338, 3;
	mov.b64 	%rd645, {%r7343, %r7342};
	shr.u64 	%rd646, %rd630, 6;
	xor.b64  	%rd647, %rd644, %rd646;
	xor.b64  	%rd648, %rd647, %rd645;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7344,%dummy}, %rd117;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7345}, %rd117;
	}
	shf.r.wrap.b32 	%r7346, %r7345, %r7344, 1;
	shf.r.wrap.b32 	%r7347, %r7344, %r7345, 1;
	mov.b64 	%rd649, {%r7347, %r7346};
	shf.r.wrap.b32 	%r7348, %r7345, %r7344, 8;
	shf.r.wrap.b32 	%r7349, %r7344, %r7345, 8;
	mov.b64 	%rd650, {%r7349, %r7348};
	shr.u64 	%rd651, %rd117, 7;
	xor.b64  	%rd652, %rd649, %rd651;
	xor.b64  	%rd653, %rd652, %rd650;
	add.s64 	%rd654, %rd565, %rd116;
	add.s64 	%rd655, %rd654, %rd648;
	add.s64 	%rd656, %rd655, %rd653;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7350,%dummy}, %rd643;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7351}, %rd643;
	}
	shf.r.wrap.b32 	%r7352, %r7351, %r7350, 19;
	shf.r.wrap.b32 	%r7353, %r7350, %r7351, 19;
	mov.b64 	%rd657, {%r7353, %r7352};
	shf.l.wrap.b32 	%r7354, %r7350, %r7351, 3;
	shf.l.wrap.b32 	%r7355, %r7351, %r7350, 3;
	mov.b64 	%rd658, {%r7355, %r7354};
	shr.u64 	%rd659, %rd643, 6;
	xor.b64  	%rd660, %rd657, %rd659;
	xor.b64  	%rd661, %rd660, %rd658;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7356,%dummy}, %rd118;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7357}, %rd118;
	}
	shf.r.wrap.b32 	%r7358, %r7357, %r7356, 1;
	shf.r.wrap.b32 	%r7359, %r7356, %r7357, 1;
	mov.b64 	%rd662, {%r7359, %r7358};
	shf.r.wrap.b32 	%r7360, %r7357, %r7356, 8;
	shf.r.wrap.b32 	%r7361, %r7356, %r7357, 8;
	mov.b64 	%rd663, {%r7361, %r7360};
	shr.u64 	%rd664, %rd118, 7;
	xor.b64  	%rd665, %rd662, %rd664;
	xor.b64  	%rd666, %rd665, %rd663;
	add.s64 	%rd667, %rd578, %rd117;
	add.s64 	%rd668, %rd667, %rd661;
	add.s64 	%rd669, %rd668, %rd666;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7362,%dummy}, %rd656;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7363}, %rd656;
	}
	shf.r.wrap.b32 	%r7364, %r7363, %r7362, 19;
	shf.r.wrap.b32 	%r7365, %r7362, %r7363, 19;
	mov.b64 	%rd670, {%r7365, %r7364};
	shf.l.wrap.b32 	%r7366, %r7362, %r7363, 3;
	shf.l.wrap.b32 	%r7367, %r7363, %r7362, 3;
	mov.b64 	%rd671, {%r7367, %r7366};
	shr.u64 	%rd672, %rd656, 6;
	xor.b64  	%rd673, %rd670, %rd672;
	xor.b64  	%rd674, %rd673, %rd671;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7368,%dummy}, %rd119;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7369}, %rd119;
	}
	shf.r.wrap.b32 	%r7370, %r7369, %r7368, 1;
	shf.r.wrap.b32 	%r7371, %r7368, %r7369, 1;
	mov.b64 	%rd675, {%r7371, %r7370};
	shf.r.wrap.b32 	%r7372, %r7369, %r7368, 8;
	shf.r.wrap.b32 	%r7373, %r7368, %r7369, 8;
	mov.b64 	%rd676, {%r7373, %r7372};
	shr.u64 	%rd677, %rd119, 7;
	xor.b64  	%rd678, %rd675, %rd677;
	xor.b64  	%rd679, %rd678, %rd676;
	add.s64 	%rd680, %rd591, %rd118;
	add.s64 	%rd681, %rd680, %rd674;
	add.s64 	%rd682, %rd681, %rd679;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7374,%dummy}, %rd669;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7375}, %rd669;
	}
	shf.r.wrap.b32 	%r7376, %r7375, %r7374, 19;
	shf.r.wrap.b32 	%r7377, %r7374, %r7375, 19;
	mov.b64 	%rd683, {%r7377, %r7376};
	shf.l.wrap.b32 	%r7378, %r7374, %r7375, 3;
	shf.l.wrap.b32 	%r7379, %r7375, %r7374, 3;
	mov.b64 	%rd684, {%r7379, %r7378};
	shr.u64 	%rd685, %rd669, 6;
	xor.b64  	%rd686, %rd683, %rd685;
	xor.b64  	%rd687, %rd686, %rd684;
	shf.r.wrap.b32 	%r7380, %r7219, %r7218, 1;
	shf.r.wrap.b32 	%r7381, %r7218, %r7219, 1;
	mov.b64 	%rd688, {%r7381, %r7380};
	shf.r.wrap.b32 	%r7382, %r7219, %r7218, 8;
	shf.r.wrap.b32 	%r7383, %r7218, %r7219, 8;
	mov.b64 	%rd689, {%r7383, %r7382};
	shr.u64 	%rd690, %rd120, 7;
	xor.b64  	%rd691, %rd688, %rd690;
	xor.b64  	%rd692, %rd691, %rd689;
	add.s64 	%rd693, %rd604, %rd119;
	add.s64 	%rd694, %rd693, %rd687;
	add.s64 	%rd695, %rd694, %rd692;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7384,%dummy}, %rd682;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7385}, %rd682;
	}
	shf.r.wrap.b32 	%r7386, %r7385, %r7384, 19;
	shf.r.wrap.b32 	%r7387, %r7384, %r7385, 19;
	mov.b64 	%rd696, {%r7387, %r7386};
	shf.l.wrap.b32 	%r7388, %r7384, %r7385, 3;
	shf.l.wrap.b32 	%r7389, %r7385, %r7384, 3;
	mov.b64 	%rd697, {%r7389, %r7388};
	shr.u64 	%rd698, %rd682, 6;
	xor.b64  	%rd699, %rd696, %rd698;
	xor.b64  	%rd700, %rd699, %rd697;
	shf.r.wrap.b32 	%r7390, %r7231, %r7230, 1;
	shf.r.wrap.b32 	%r7391, %r7230, %r7231, 1;
	mov.b64 	%rd701, {%r7391, %r7390};
	shf.r.wrap.b32 	%r7392, %r7231, %r7230, 8;
	shf.r.wrap.b32 	%r7393, %r7230, %r7231, 8;
	mov.b64 	%rd702, {%r7393, %r7392};
	shr.u64 	%rd703, %rd121, 7;
	xor.b64  	%rd704, %rd701, %rd703;
	xor.b64  	%rd705, %rd704, %rd702;
	add.s64 	%rd706, %rd617, %rd120;
	add.s64 	%rd707, %rd706, %rd700;
	add.s64 	%rd708, %rd707, %rd705;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7394,%dummy}, %rd695;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7395}, %rd695;
	}
	shf.r.wrap.b32 	%r7396, %r7395, %r7394, 19;
	shf.r.wrap.b32 	%r7397, %r7394, %r7395, 19;
	mov.b64 	%rd709, {%r7397, %r7396};
	shf.l.wrap.b32 	%r7398, %r7394, %r7395, 3;
	shf.l.wrap.b32 	%r7399, %r7395, %r7394, 3;
	mov.b64 	%rd710, {%r7399, %r7398};
	shr.u64 	%rd711, %rd695, 6;
	xor.b64  	%rd712, %rd709, %rd711;
	xor.b64  	%rd713, %rd712, %rd710;
	shf.r.wrap.b32 	%r7400, %r7243, %r7242, 1;
	shf.r.wrap.b32 	%r7401, %r7242, %r7243, 1;
	mov.b64 	%rd714, {%r7401, %r7400};
	shf.r.wrap.b32 	%r7402, %r7243, %r7242, 8;
	shf.r.wrap.b32 	%r7403, %r7242, %r7243, 8;
	mov.b64 	%rd715, {%r7403, %r7402};
	shr.u64 	%rd716, %rd526, 7;
	xor.b64  	%rd717, %rd714, %rd716;
	xor.b64  	%rd718, %rd717, %rd715;
	add.s64 	%rd719, %rd630, %rd121;
	add.s64 	%rd720, %rd719, %rd713;
	add.s64 	%rd721, %rd720, %rd718;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7404,%dummy}, %rd502;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7405}, %rd502;
	}
	shf.r.wrap.b32 	%r7406, %r7405, %r7404, 14;
	shf.r.wrap.b32 	%r7407, %r7404, %r7405, 14;
	mov.b64 	%rd722, {%r7407, %r7406};
	shf.r.wrap.b32 	%r7408, %r7405, %r7404, 18;
	shf.r.wrap.b32 	%r7409, %r7404, %r7405, 18;
	mov.b64 	%rd723, {%r7409, %r7408};
	xor.b64  	%rd724, %rd723, %rd722;
	shf.l.wrap.b32 	%r7410, %r7404, %r7405, 23;
	shf.l.wrap.b32 	%r7411, %r7405, %r7404, 23;
	mov.b64 	%rd725, {%r7411, %r7410};
	xor.b64  	%rd726, %rd724, %rd725;
	xor.b64  	%rd727, %rd478, %rd454;
	and.b64  	%rd728, %rd727, %rd502;
	xor.b64  	%rd729, %rd728, %rd454;
	add.s64 	%rd730, %rd729, %rd430;
	add.s64 	%rd731, %rd730, %rd526;
	ld.const.u64 	%rd732, [k_sha512+128];
	add.s64 	%rd733, %rd731, %rd732;
	add.s64 	%rd734, %rd733, %rd726;
	add.s64 	%rd735, %rd734, %rd441;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7412,%dummy}, %rd513;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7413}, %rd513;
	}
	shf.r.wrap.b32 	%r7414, %r7413, %r7412, 28;
	shf.r.wrap.b32 	%r7415, %r7412, %r7413, 28;
	mov.b64 	%rd736, {%r7415, %r7414};
	shf.l.wrap.b32 	%r7416, %r7412, %r7413, 30;
	shf.l.wrap.b32 	%r7417, %r7413, %r7412, 30;
	mov.b64 	%rd737, {%r7417, %r7416};
	xor.b64  	%rd738, %rd737, %rd736;
	shf.l.wrap.b32 	%r7418, %r7412, %r7413, 25;
	shf.l.wrap.b32 	%r7419, %r7413, %r7412, 25;
	mov.b64 	%rd739, {%r7419, %r7418};
	xor.b64  	%rd740, %rd738, %rd739;
	xor.b64  	%rd741, %rd513, %rd465;
	xor.b64  	%rd742, %rd513, %rd489;
	and.b64  	%rd743, %rd742, %rd741;
	xor.b64  	%rd744, %rd743, %rd513;
	add.s64 	%rd745, %rd734, %rd744;
	add.s64 	%rd746, %rd745, %rd740;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7420,%dummy}, %rd735;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7421}, %rd735;
	}
	shf.r.wrap.b32 	%r7422, %r7421, %r7420, 14;
	shf.r.wrap.b32 	%r7423, %r7420, %r7421, 14;
	mov.b64 	%rd747, {%r7423, %r7422};
	shf.r.wrap.b32 	%r7424, %r7421, %r7420, 18;
	shf.r.wrap.b32 	%r7425, %r7420, %r7421, 18;
	mov.b64 	%rd748, {%r7425, %r7424};
	xor.b64  	%rd749, %rd748, %rd747;
	shf.l.wrap.b32 	%r7426, %r7420, %r7421, 23;
	shf.l.wrap.b32 	%r7427, %r7421, %r7420, 23;
	mov.b64 	%rd750, {%r7427, %r7426};
	xor.b64  	%rd751, %rd749, %rd750;
	xor.b64  	%rd752, %rd502, %rd478;
	and.b64  	%rd753, %rd735, %rd752;
	xor.b64  	%rd754, %rd753, %rd478;
	add.s64 	%rd755, %rd539, %rd454;
	ld.const.u64 	%rd756, [k_sha512+136];
	add.s64 	%rd757, %rd755, %rd756;
	add.s64 	%rd758, %rd757, %rd754;
	add.s64 	%rd759, %rd758, %rd751;
	add.s64 	%rd760, %rd759, %rd465;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7428,%dummy}, %rd746;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7429}, %rd746;
	}
	shf.r.wrap.b32 	%r7430, %r7429, %r7428, 28;
	shf.r.wrap.b32 	%r7431, %r7428, %r7429, 28;
	mov.b64 	%rd761, {%r7431, %r7430};
	shf.l.wrap.b32 	%r7432, %r7428, %r7429, 30;
	shf.l.wrap.b32 	%r7433, %r7429, %r7428, 30;
	mov.b64 	%rd762, {%r7433, %r7432};
	xor.b64  	%rd763, %rd762, %rd761;
	shf.l.wrap.b32 	%r7434, %r7428, %r7429, 25;
	shf.l.wrap.b32 	%r7435, %r7429, %r7428, 25;
	mov.b64 	%rd764, {%r7435, %r7434};
	xor.b64  	%rd765, %rd763, %rd764;
	xor.b64  	%rd766, %rd746, %rd489;
	xor.b64  	%rd767, %rd746, %rd513;
	and.b64  	%rd768, %rd767, %rd766;
	xor.b64  	%rd769, %rd768, %rd746;
	add.s64 	%rd770, %rd759, %rd769;
	add.s64 	%rd771, %rd770, %rd765;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7436,%dummy}, %rd760;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7437}, %rd760;
	}
	shf.r.wrap.b32 	%r7438, %r7437, %r7436, 14;
	shf.r.wrap.b32 	%r7439, %r7436, %r7437, 14;
	mov.b64 	%rd772, {%r7439, %r7438};
	shf.r.wrap.b32 	%r7440, %r7437, %r7436, 18;
	shf.r.wrap.b32 	%r7441, %r7436, %r7437, 18;
	mov.b64 	%rd773, {%r7441, %r7440};
	xor.b64  	%rd774, %rd773, %rd772;
	shf.l.wrap.b32 	%r7442, %r7436, %r7437, 23;
	shf.l.wrap.b32 	%r7443, %r7437, %r7436, 23;
	mov.b64 	%rd775, {%r7443, %r7442};
	xor.b64  	%rd776, %rd774, %rd775;
	xor.b64  	%rd777, %rd735, %rd502;
	and.b64  	%rd778, %rd760, %rd777;
	xor.b64  	%rd779, %rd778, %rd502;
	add.s64 	%rd780, %rd552, %rd478;
	ld.const.u64 	%rd781, [k_sha512+144];
	add.s64 	%rd782, %rd780, %rd781;
	add.s64 	%rd783, %rd782, %rd779;
	add.s64 	%rd784, %rd783, %rd776;
	add.s64 	%rd785, %rd784, %rd489;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7444,%dummy}, %rd771;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7445}, %rd771;
	}
	shf.r.wrap.b32 	%r7446, %r7445, %r7444, 28;
	shf.r.wrap.b32 	%r7447, %r7444, %r7445, 28;
	mov.b64 	%rd786, {%r7447, %r7446};
	shf.l.wrap.b32 	%r7448, %r7444, %r7445, 30;
	shf.l.wrap.b32 	%r7449, %r7445, %r7444, 30;
	mov.b64 	%rd787, {%r7449, %r7448};
	xor.b64  	%rd788, %rd787, %rd786;
	shf.l.wrap.b32 	%r7450, %r7444, %r7445, 25;
	shf.l.wrap.b32 	%r7451, %r7445, %r7444, 25;
	mov.b64 	%rd789, {%r7451, %r7450};
	xor.b64  	%rd790, %rd788, %rd789;
	xor.b64  	%rd791, %rd771, %rd513;
	xor.b64  	%rd792, %rd771, %rd746;
	and.b64  	%rd793, %rd792, %rd791;
	xor.b64  	%rd794, %rd793, %rd771;
	add.s64 	%rd795, %rd784, %rd794;
	add.s64 	%rd796, %rd795, %rd790;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7452,%dummy}, %rd785;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7453}, %rd785;
	}
	shf.r.wrap.b32 	%r7454, %r7453, %r7452, 14;
	shf.r.wrap.b32 	%r7455, %r7452, %r7453, 14;
	mov.b64 	%rd797, {%r7455, %r7454};
	shf.r.wrap.b32 	%r7456, %r7453, %r7452, 18;
	shf.r.wrap.b32 	%r7457, %r7452, %r7453, 18;
	mov.b64 	%rd798, {%r7457, %r7456};
	xor.b64  	%rd799, %rd798, %rd797;
	shf.l.wrap.b32 	%r7458, %r7452, %r7453, 23;
	shf.l.wrap.b32 	%r7459, %r7453, %r7452, 23;
	mov.b64 	%rd800, {%r7459, %r7458};
	xor.b64  	%rd801, %rd799, %rd800;
	xor.b64  	%rd802, %rd760, %rd735;
	and.b64  	%rd803, %rd785, %rd802;
	xor.b64  	%rd804, %rd803, %rd735;
	add.s64 	%rd805, %rd565, %rd502;
	ld.const.u64 	%rd806, [k_sha512+152];
	add.s64 	%rd807, %rd805, %rd806;
	add.s64 	%rd808, %rd807, %rd804;
	add.s64 	%rd809, %rd808, %rd801;
	add.s64 	%rd810, %rd809, %rd513;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7460,%dummy}, %rd796;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7461}, %rd796;
	}
	shf.r.wrap.b32 	%r7462, %r7461, %r7460, 28;
	shf.r.wrap.b32 	%r7463, %r7460, %r7461, 28;
	mov.b64 	%rd811, {%r7463, %r7462};
	shf.l.wrap.b32 	%r7464, %r7460, %r7461, 30;
	shf.l.wrap.b32 	%r7465, %r7461, %r7460, 30;
	mov.b64 	%rd812, {%r7465, %r7464};
	xor.b64  	%rd813, %rd812, %rd811;
	shf.l.wrap.b32 	%r7466, %r7460, %r7461, 25;
	shf.l.wrap.b32 	%r7467, %r7461, %r7460, 25;
	mov.b64 	%rd814, {%r7467, %r7466};
	xor.b64  	%rd815, %rd813, %rd814;
	xor.b64  	%rd816, %rd796, %rd746;
	xor.b64  	%rd817, %rd796, %rd771;
	and.b64  	%rd818, %rd817, %rd816;
	xor.b64  	%rd819, %rd818, %rd796;
	add.s64 	%rd820, %rd809, %rd819;
	add.s64 	%rd821, %rd820, %rd815;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7468,%dummy}, %rd810;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7469}, %rd810;
	}
	shf.r.wrap.b32 	%r7470, %r7469, %r7468, 14;
	shf.r.wrap.b32 	%r7471, %r7468, %r7469, 14;
	mov.b64 	%rd822, {%r7471, %r7470};
	shf.r.wrap.b32 	%r7472, %r7469, %r7468, 18;
	shf.r.wrap.b32 	%r7473, %r7468, %r7469, 18;
	mov.b64 	%rd823, {%r7473, %r7472};
	xor.b64  	%rd824, %rd823, %rd822;
	shf.l.wrap.b32 	%r7474, %r7468, %r7469, 23;
	shf.l.wrap.b32 	%r7475, %r7469, %r7468, 23;
	mov.b64 	%rd825, {%r7475, %r7474};
	xor.b64  	%rd826, %rd824, %rd825;
	xor.b64  	%rd827, %rd785, %rd760;
	and.b64  	%rd828, %rd810, %rd827;
	xor.b64  	%rd829, %rd828, %rd760;
	add.s64 	%rd830, %rd735, %rd578;
	ld.const.u64 	%rd831, [k_sha512+160];
	add.s64 	%rd832, %rd830, %rd831;
	add.s64 	%rd833, %rd832, %rd829;
	add.s64 	%rd834, %rd833, %rd826;
	add.s64 	%rd835, %rd834, %rd746;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7476,%dummy}, %rd821;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7477}, %rd821;
	}
	shf.r.wrap.b32 	%r7478, %r7477, %r7476, 28;
	shf.r.wrap.b32 	%r7479, %r7476, %r7477, 28;
	mov.b64 	%rd836, {%r7479, %r7478};
	shf.l.wrap.b32 	%r7480, %r7476, %r7477, 30;
	shf.l.wrap.b32 	%r7481, %r7477, %r7476, 30;
	mov.b64 	%rd837, {%r7481, %r7480};
	xor.b64  	%rd838, %rd837, %rd836;
	shf.l.wrap.b32 	%r7482, %r7476, %r7477, 25;
	shf.l.wrap.b32 	%r7483, %r7477, %r7476, 25;
	mov.b64 	%rd839, {%r7483, %r7482};
	xor.b64  	%rd840, %rd838, %rd839;
	xor.b64  	%rd841, %rd821, %rd771;
	xor.b64  	%rd842, %rd821, %rd796;
	and.b64  	%rd843, %rd842, %rd841;
	xor.b64  	%rd844, %rd843, %rd821;
	add.s64 	%rd845, %rd834, %rd844;
	add.s64 	%rd846, %rd845, %rd840;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7484,%dummy}, %rd835;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7485}, %rd835;
	}
	shf.r.wrap.b32 	%r7486, %r7485, %r7484, 14;
	shf.r.wrap.b32 	%r7487, %r7484, %r7485, 14;
	mov.b64 	%rd847, {%r7487, %r7486};
	shf.r.wrap.b32 	%r7488, %r7485, %r7484, 18;
	shf.r.wrap.b32 	%r7489, %r7484, %r7485, 18;
	mov.b64 	%rd848, {%r7489, %r7488};
	xor.b64  	%rd849, %rd848, %rd847;
	shf.l.wrap.b32 	%r7490, %r7484, %r7485, 23;
	shf.l.wrap.b32 	%r7491, %r7485, %r7484, 23;
	mov.b64 	%rd850, {%r7491, %r7490};
	xor.b64  	%rd851, %rd849, %rd850;
	xor.b64  	%rd852, %rd810, %rd785;
	and.b64  	%rd853, %rd835, %rd852;
	xor.b64  	%rd854, %rd853, %rd785;
	add.s64 	%rd855, %rd760, %rd591;
	ld.const.u64 	%rd856, [k_sha512+168];
	add.s64 	%rd857, %rd855, %rd856;
	add.s64 	%rd858, %rd857, %rd854;
	add.s64 	%rd859, %rd858, %rd851;
	add.s64 	%rd860, %rd859, %rd771;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7492,%dummy}, %rd846;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7493}, %rd846;
	}
	shf.r.wrap.b32 	%r7494, %r7493, %r7492, 28;
	shf.r.wrap.b32 	%r7495, %r7492, %r7493, 28;
	mov.b64 	%rd861, {%r7495, %r7494};
	shf.l.wrap.b32 	%r7496, %r7492, %r7493, 30;
	shf.l.wrap.b32 	%r7497, %r7493, %r7492, 30;
	mov.b64 	%rd862, {%r7497, %r7496};
	xor.b64  	%rd863, %rd862, %rd861;
	shf.l.wrap.b32 	%r7498, %r7492, %r7493, 25;
	shf.l.wrap.b32 	%r7499, %r7493, %r7492, 25;
	mov.b64 	%rd864, {%r7499, %r7498};
	xor.b64  	%rd865, %rd863, %rd864;
	xor.b64  	%rd866, %rd846, %rd796;
	xor.b64  	%rd867, %rd846, %rd821;
	and.b64  	%rd868, %rd867, %rd866;
	xor.b64  	%rd869, %rd868, %rd846;
	add.s64 	%rd870, %rd859, %rd869;
	add.s64 	%rd871, %rd870, %rd865;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7500,%dummy}, %rd860;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7501}, %rd860;
	}
	shf.r.wrap.b32 	%r7502, %r7501, %r7500, 14;
	shf.r.wrap.b32 	%r7503, %r7500, %r7501, 14;
	mov.b64 	%rd872, {%r7503, %r7502};
	shf.r.wrap.b32 	%r7504, %r7501, %r7500, 18;
	shf.r.wrap.b32 	%r7505, %r7500, %r7501, 18;
	mov.b64 	%rd873, {%r7505, %r7504};
	xor.b64  	%rd874, %rd873, %rd872;
	shf.l.wrap.b32 	%r7506, %r7500, %r7501, 23;
	shf.l.wrap.b32 	%r7507, %r7501, %r7500, 23;
	mov.b64 	%rd875, {%r7507, %r7506};
	xor.b64  	%rd876, %rd874, %rd875;
	xor.b64  	%rd877, %rd835, %rd810;
	and.b64  	%rd878, %rd860, %rd877;
	xor.b64  	%rd879, %rd878, %rd810;
	add.s64 	%rd880, %rd785, %rd604;
	ld.const.u64 	%rd881, [k_sha512+176];
	add.s64 	%rd882, %rd880, %rd881;
	add.s64 	%rd883, %rd882, %rd879;
	add.s64 	%rd884, %rd883, %rd876;
	add.s64 	%rd885, %rd884, %rd796;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7508,%dummy}, %rd871;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7509}, %rd871;
	}
	shf.r.wrap.b32 	%r7510, %r7509, %r7508, 28;
	shf.r.wrap.b32 	%r7511, %r7508, %r7509, 28;
	mov.b64 	%rd886, {%r7511, %r7510};
	shf.l.wrap.b32 	%r7512, %r7508, %r7509, 30;
	shf.l.wrap.b32 	%r7513, %r7509, %r7508, 30;
	mov.b64 	%rd887, {%r7513, %r7512};
	xor.b64  	%rd888, %rd887, %rd886;
	shf.l.wrap.b32 	%r7514, %r7508, %r7509, 25;
	shf.l.wrap.b32 	%r7515, %r7509, %r7508, 25;
	mov.b64 	%rd889, {%r7515, %r7514};
	xor.b64  	%rd890, %rd888, %rd889;
	xor.b64  	%rd891, %rd871, %rd821;
	xor.b64  	%rd892, %rd871, %rd846;
	and.b64  	%rd893, %rd892, %rd891;
	xor.b64  	%rd894, %rd893, %rd871;
	add.s64 	%rd895, %rd884, %rd894;
	add.s64 	%rd896, %rd895, %rd890;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7516,%dummy}, %rd885;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7517}, %rd885;
	}
	shf.r.wrap.b32 	%r7518, %r7517, %r7516, 14;
	shf.r.wrap.b32 	%r7519, %r7516, %r7517, 14;
	mov.b64 	%rd897, {%r7519, %r7518};
	shf.r.wrap.b32 	%r7520, %r7517, %r7516, 18;
	shf.r.wrap.b32 	%r7521, %r7516, %r7517, 18;
	mov.b64 	%rd898, {%r7521, %r7520};
	xor.b64  	%rd899, %rd898, %rd897;
	shf.l.wrap.b32 	%r7522, %r7516, %r7517, 23;
	shf.l.wrap.b32 	%r7523, %r7517, %r7516, 23;
	mov.b64 	%rd900, {%r7523, %r7522};
	xor.b64  	%rd901, %rd899, %rd900;
	xor.b64  	%rd902, %rd860, %rd835;
	and.b64  	%rd903, %rd885, %rd902;
	xor.b64  	%rd904, %rd903, %rd835;
	add.s64 	%rd905, %rd810, %rd617;
	ld.const.u64 	%rd906, [k_sha512+184];
	add.s64 	%rd907, %rd905, %rd906;
	add.s64 	%rd908, %rd907, %rd904;
	add.s64 	%rd909, %rd908, %rd901;
	add.s64 	%rd910, %rd909, %rd821;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7524,%dummy}, %rd896;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7525}, %rd896;
	}
	shf.r.wrap.b32 	%r7526, %r7525, %r7524, 28;
	shf.r.wrap.b32 	%r7527, %r7524, %r7525, 28;
	mov.b64 	%rd911, {%r7527, %r7526};
	shf.l.wrap.b32 	%r7528, %r7524, %r7525, 30;
	shf.l.wrap.b32 	%r7529, %r7525, %r7524, 30;
	mov.b64 	%rd912, {%r7529, %r7528};
	xor.b64  	%rd913, %rd912, %rd911;
	shf.l.wrap.b32 	%r7530, %r7524, %r7525, 25;
	shf.l.wrap.b32 	%r7531, %r7525, %r7524, 25;
	mov.b64 	%rd914, {%r7531, %r7530};
	xor.b64  	%rd915, %rd913, %rd914;
	xor.b64  	%rd916, %rd896, %rd846;
	xor.b64  	%rd917, %rd896, %rd871;
	and.b64  	%rd918, %rd917, %rd916;
	xor.b64  	%rd919, %rd918, %rd896;
	add.s64 	%rd920, %rd909, %rd919;
	add.s64 	%rd921, %rd920, %rd915;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7532,%dummy}, %rd910;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7533}, %rd910;
	}
	shf.r.wrap.b32 	%r7534, %r7533, %r7532, 14;
	shf.r.wrap.b32 	%r7535, %r7532, %r7533, 14;
	mov.b64 	%rd922, {%r7535, %r7534};
	shf.r.wrap.b32 	%r7536, %r7533, %r7532, 18;
	shf.r.wrap.b32 	%r7537, %r7532, %r7533, 18;
	mov.b64 	%rd923, {%r7537, %r7536};
	xor.b64  	%rd924, %rd923, %rd922;
	shf.l.wrap.b32 	%r7538, %r7532, %r7533, 23;
	shf.l.wrap.b32 	%r7539, %r7533, %r7532, 23;
	mov.b64 	%rd925, {%r7539, %r7538};
	xor.b64  	%rd926, %rd924, %rd925;
	xor.b64  	%rd927, %rd885, %rd860;
	and.b64  	%rd928, %rd910, %rd927;
	xor.b64  	%rd929, %rd928, %rd860;
	add.s64 	%rd930, %rd835, %rd630;
	ld.const.u64 	%rd931, [k_sha512+192];
	add.s64 	%rd932, %rd930, %rd931;
	add.s64 	%rd933, %rd932, %rd929;
	add.s64 	%rd934, %rd933, %rd926;
	add.s64 	%rd935, %rd934, %rd846;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7540,%dummy}, %rd921;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7541}, %rd921;
	}
	shf.r.wrap.b32 	%r7542, %r7541, %r7540, 28;
	shf.r.wrap.b32 	%r7543, %r7540, %r7541, 28;
	mov.b64 	%rd936, {%r7543, %r7542};
	shf.l.wrap.b32 	%r7544, %r7540, %r7541, 30;
	shf.l.wrap.b32 	%r7545, %r7541, %r7540, 30;
	mov.b64 	%rd937, {%r7545, %r7544};
	xor.b64  	%rd938, %rd937, %rd936;
	shf.l.wrap.b32 	%r7546, %r7540, %r7541, 25;
	shf.l.wrap.b32 	%r7547, %r7541, %r7540, 25;
	mov.b64 	%rd939, {%r7547, %r7546};
	xor.b64  	%rd940, %rd938, %rd939;
	xor.b64  	%rd941, %rd921, %rd871;
	xor.b64  	%rd942, %rd921, %rd896;
	and.b64  	%rd943, %rd942, %rd941;
	xor.b64  	%rd944, %rd943, %rd921;
	add.s64 	%rd945, %rd934, %rd944;
	add.s64 	%rd946, %rd945, %rd940;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7548,%dummy}, %rd935;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7549}, %rd935;
	}
	shf.r.wrap.b32 	%r7550, %r7549, %r7548, 14;
	shf.r.wrap.b32 	%r7551, %r7548, %r7549, 14;
	mov.b64 	%rd947, {%r7551, %r7550};
	shf.r.wrap.b32 	%r7552, %r7549, %r7548, 18;
	shf.r.wrap.b32 	%r7553, %r7548, %r7549, 18;
	mov.b64 	%rd948, {%r7553, %r7552};
	xor.b64  	%rd949, %rd948, %rd947;
	shf.l.wrap.b32 	%r7554, %r7548, %r7549, 23;
	shf.l.wrap.b32 	%r7555, %r7549, %r7548, 23;
	mov.b64 	%rd950, {%r7555, %r7554};
	xor.b64  	%rd951, %rd949, %rd950;
	xor.b64  	%rd952, %rd910, %rd885;
	and.b64  	%rd953, %rd935, %rd952;
	xor.b64  	%rd954, %rd953, %rd885;
	add.s64 	%rd955, %rd860, %rd643;
	ld.const.u64 	%rd956, [k_sha512+200];
	add.s64 	%rd957, %rd955, %rd956;
	add.s64 	%rd958, %rd957, %rd954;
	add.s64 	%rd959, %rd958, %rd951;
	add.s64 	%rd960, %rd959, %rd871;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7556,%dummy}, %rd946;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7557}, %rd946;
	}
	shf.r.wrap.b32 	%r7558, %r7557, %r7556, 28;
	shf.r.wrap.b32 	%r7559, %r7556, %r7557, 28;
	mov.b64 	%rd961, {%r7559, %r7558};
	shf.l.wrap.b32 	%r7560, %r7556, %r7557, 30;
	shf.l.wrap.b32 	%r7561, %r7557, %r7556, 30;
	mov.b64 	%rd962, {%r7561, %r7560};
	xor.b64  	%rd963, %rd962, %rd961;
	shf.l.wrap.b32 	%r7562, %r7556, %r7557, 25;
	shf.l.wrap.b32 	%r7563, %r7557, %r7556, 25;
	mov.b64 	%rd964, {%r7563, %r7562};
	xor.b64  	%rd965, %rd963, %rd964;
	xor.b64  	%rd966, %rd946, %rd896;
	xor.b64  	%rd967, %rd946, %rd921;
	and.b64  	%rd968, %rd967, %rd966;
	xor.b64  	%rd969, %rd968, %rd946;
	add.s64 	%rd970, %rd959, %rd969;
	add.s64 	%rd971, %rd970, %rd965;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7564,%dummy}, %rd960;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7565}, %rd960;
	}
	shf.r.wrap.b32 	%r7566, %r7565, %r7564, 14;
	shf.r.wrap.b32 	%r7567, %r7564, %r7565, 14;
	mov.b64 	%rd972, {%r7567, %r7566};
	shf.r.wrap.b32 	%r7568, %r7565, %r7564, 18;
	shf.r.wrap.b32 	%r7569, %r7564, %r7565, 18;
	mov.b64 	%rd973, {%r7569, %r7568};
	xor.b64  	%rd974, %rd973, %rd972;
	shf.l.wrap.b32 	%r7570, %r7564, %r7565, 23;
	shf.l.wrap.b32 	%r7571, %r7565, %r7564, 23;
	mov.b64 	%rd975, {%r7571, %r7570};
	xor.b64  	%rd976, %rd974, %rd975;
	xor.b64  	%rd977, %rd935, %rd910;
	and.b64  	%rd978, %rd960, %rd977;
	xor.b64  	%rd979, %rd978, %rd910;
	add.s64 	%rd980, %rd885, %rd656;
	ld.const.u64 	%rd981, [k_sha512+208];
	add.s64 	%rd982, %rd980, %rd981;
	add.s64 	%rd983, %rd982, %rd979;
	add.s64 	%rd984, %rd983, %rd976;
	add.s64 	%rd985, %rd984, %rd896;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7572,%dummy}, %rd971;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7573}, %rd971;
	}
	shf.r.wrap.b32 	%r7574, %r7573, %r7572, 28;
	shf.r.wrap.b32 	%r7575, %r7572, %r7573, 28;
	mov.b64 	%rd986, {%r7575, %r7574};
	shf.l.wrap.b32 	%r7576, %r7572, %r7573, 30;
	shf.l.wrap.b32 	%r7577, %r7573, %r7572, 30;
	mov.b64 	%rd987, {%r7577, %r7576};
	xor.b64  	%rd988, %rd987, %rd986;
	shf.l.wrap.b32 	%r7578, %r7572, %r7573, 25;
	shf.l.wrap.b32 	%r7579, %r7573, %r7572, 25;
	mov.b64 	%rd989, {%r7579, %r7578};
	xor.b64  	%rd990, %rd988, %rd989;
	xor.b64  	%rd991, %rd971, %rd921;
	xor.b64  	%rd992, %rd971, %rd946;
	and.b64  	%rd993, %rd992, %rd991;
	xor.b64  	%rd994, %rd993, %rd971;
	add.s64 	%rd995, %rd984, %rd994;
	add.s64 	%rd996, %rd995, %rd990;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7580,%dummy}, %rd985;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7581}, %rd985;
	}
	shf.r.wrap.b32 	%r7582, %r7581, %r7580, 14;
	shf.r.wrap.b32 	%r7583, %r7580, %r7581, 14;
	mov.b64 	%rd997, {%r7583, %r7582};
	shf.r.wrap.b32 	%r7584, %r7581, %r7580, 18;
	shf.r.wrap.b32 	%r7585, %r7580, %r7581, 18;
	mov.b64 	%rd998, {%r7585, %r7584};
	xor.b64  	%rd999, %rd998, %rd997;
	shf.l.wrap.b32 	%r7586, %r7580, %r7581, 23;
	shf.l.wrap.b32 	%r7587, %r7581, %r7580, 23;
	mov.b64 	%rd1000, {%r7587, %r7586};
	xor.b64  	%rd1001, %rd999, %rd1000;
	xor.b64  	%rd1002, %rd960, %rd935;
	and.b64  	%rd1003, %rd985, %rd1002;
	xor.b64  	%rd1004, %rd1003, %rd935;
	add.s64 	%rd1005, %rd910, %rd669;
	ld.const.u64 	%rd1006, [k_sha512+216];
	add.s64 	%rd1007, %rd1005, %rd1006;
	add.s64 	%rd1008, %rd1007, %rd1004;
	add.s64 	%rd1009, %rd1008, %rd1001;
	add.s64 	%rd1010, %rd1009, %rd921;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7588,%dummy}, %rd996;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7589}, %rd996;
	}
	shf.r.wrap.b32 	%r7590, %r7589, %r7588, 28;
	shf.r.wrap.b32 	%r7591, %r7588, %r7589, 28;
	mov.b64 	%rd1011, {%r7591, %r7590};
	shf.l.wrap.b32 	%r7592, %r7588, %r7589, 30;
	shf.l.wrap.b32 	%r7593, %r7589, %r7588, 30;
	mov.b64 	%rd1012, {%r7593, %r7592};
	xor.b64  	%rd1013, %rd1012, %rd1011;
	shf.l.wrap.b32 	%r7594, %r7588, %r7589, 25;
	shf.l.wrap.b32 	%r7595, %r7589, %r7588, 25;
	mov.b64 	%rd1014, {%r7595, %r7594};
	xor.b64  	%rd1015, %rd1013, %rd1014;
	xor.b64  	%rd1016, %rd996, %rd946;
	xor.b64  	%rd1017, %rd996, %rd971;
	and.b64  	%rd1018, %rd1017, %rd1016;
	xor.b64  	%rd1019, %rd1018, %rd996;
	add.s64 	%rd1020, %rd1009, %rd1019;
	add.s64 	%rd1021, %rd1020, %rd1015;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7596,%dummy}, %rd1010;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7597}, %rd1010;
	}
	shf.r.wrap.b32 	%r7598, %r7597, %r7596, 14;
	shf.r.wrap.b32 	%r7599, %r7596, %r7597, 14;
	mov.b64 	%rd1022, {%r7599, %r7598};
	shf.r.wrap.b32 	%r7600, %r7597, %r7596, 18;
	shf.r.wrap.b32 	%r7601, %r7596, %r7597, 18;
	mov.b64 	%rd1023, {%r7601, %r7600};
	xor.b64  	%rd1024, %rd1023, %rd1022;
	shf.l.wrap.b32 	%r7602, %r7596, %r7597, 23;
	shf.l.wrap.b32 	%r7603, %r7597, %r7596, 23;
	mov.b64 	%rd1025, {%r7603, %r7602};
	xor.b64  	%rd1026, %rd1024, %rd1025;
	xor.b64  	%rd1027, %rd985, %rd960;
	and.b64  	%rd1028, %rd1010, %rd1027;
	xor.b64  	%rd1029, %rd1028, %rd960;
	add.s64 	%rd1030, %rd935, %rd682;
	ld.const.u64 	%rd1031, [k_sha512+224];
	add.s64 	%rd1032, %rd1030, %rd1031;
	add.s64 	%rd1033, %rd1032, %rd1029;
	add.s64 	%rd1034, %rd1033, %rd1026;
	add.s64 	%rd1035, %rd1034, %rd946;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7604,%dummy}, %rd1021;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7605}, %rd1021;
	}
	shf.r.wrap.b32 	%r7606, %r7605, %r7604, 28;
	shf.r.wrap.b32 	%r7607, %r7604, %r7605, 28;
	mov.b64 	%rd1036, {%r7607, %r7606};
	shf.l.wrap.b32 	%r7608, %r7604, %r7605, 30;
	shf.l.wrap.b32 	%r7609, %r7605, %r7604, 30;
	mov.b64 	%rd1037, {%r7609, %r7608};
	xor.b64  	%rd1038, %rd1037, %rd1036;
	shf.l.wrap.b32 	%r7610, %r7604, %r7605, 25;
	shf.l.wrap.b32 	%r7611, %r7605, %r7604, 25;
	mov.b64 	%rd1039, {%r7611, %r7610};
	xor.b64  	%rd1040, %rd1038, %rd1039;
	xor.b64  	%rd1041, %rd1021, %rd971;
	xor.b64  	%rd1042, %rd1021, %rd996;
	and.b64  	%rd1043, %rd1042, %rd1041;
	xor.b64  	%rd1044, %rd1043, %rd1021;
	add.s64 	%rd1045, %rd1034, %rd1044;
	add.s64 	%rd1046, %rd1045, %rd1040;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7612,%dummy}, %rd1035;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7613}, %rd1035;
	}
	shf.r.wrap.b32 	%r7614, %r7613, %r7612, 14;
	shf.r.wrap.b32 	%r7615, %r7612, %r7613, 14;
	mov.b64 	%rd1047, {%r7615, %r7614};
	shf.r.wrap.b32 	%r7616, %r7613, %r7612, 18;
	shf.r.wrap.b32 	%r7617, %r7612, %r7613, 18;
	mov.b64 	%rd1048, {%r7617, %r7616};
	xor.b64  	%rd1049, %rd1048, %rd1047;
	shf.l.wrap.b32 	%r7618, %r7612, %r7613, 23;
	shf.l.wrap.b32 	%r7619, %r7613, %r7612, 23;
	mov.b64 	%rd1050, {%r7619, %r7618};
	xor.b64  	%rd1051, %rd1049, %rd1050;
	xor.b64  	%rd1052, %rd1010, %rd985;
	and.b64  	%rd1053, %rd1035, %rd1052;
	xor.b64  	%rd1054, %rd1053, %rd985;
	add.s64 	%rd1055, %rd960, %rd695;
	ld.const.u64 	%rd1056, [k_sha512+232];
	add.s64 	%rd1057, %rd1055, %rd1056;
	add.s64 	%rd1058, %rd1057, %rd1054;
	add.s64 	%rd1059, %rd1058, %rd1051;
	add.s64 	%rd1060, %rd1059, %rd971;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7620,%dummy}, %rd1046;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7621}, %rd1046;
	}
	shf.r.wrap.b32 	%r7622, %r7621, %r7620, 28;
	shf.r.wrap.b32 	%r7623, %r7620, %r7621, 28;
	mov.b64 	%rd1061, {%r7623, %r7622};
	shf.l.wrap.b32 	%r7624, %r7620, %r7621, 30;
	shf.l.wrap.b32 	%r7625, %r7621, %r7620, 30;
	mov.b64 	%rd1062, {%r7625, %r7624};
	xor.b64  	%rd1063, %rd1062, %rd1061;
	shf.l.wrap.b32 	%r7626, %r7620, %r7621, 25;
	shf.l.wrap.b32 	%r7627, %r7621, %r7620, 25;
	mov.b64 	%rd1064, {%r7627, %r7626};
	xor.b64  	%rd1065, %rd1063, %rd1064;
	xor.b64  	%rd1066, %rd1046, %rd996;
	xor.b64  	%rd1067, %rd1046, %rd1021;
	and.b64  	%rd1068, %rd1067, %rd1066;
	xor.b64  	%rd1069, %rd1068, %rd1046;
	add.s64 	%rd1070, %rd1059, %rd1069;
	add.s64 	%rd1071, %rd1070, %rd1065;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7628,%dummy}, %rd1060;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7629}, %rd1060;
	}
	shf.r.wrap.b32 	%r7630, %r7629, %r7628, 14;
	shf.r.wrap.b32 	%r7631, %r7628, %r7629, 14;
	mov.b64 	%rd1072, {%r7631, %r7630};
	shf.r.wrap.b32 	%r7632, %r7629, %r7628, 18;
	shf.r.wrap.b32 	%r7633, %r7628, %r7629, 18;
	mov.b64 	%rd1073, {%r7633, %r7632};
	xor.b64  	%rd1074, %rd1073, %rd1072;
	shf.l.wrap.b32 	%r7634, %r7628, %r7629, 23;
	shf.l.wrap.b32 	%r7635, %r7629, %r7628, 23;
	mov.b64 	%rd1075, {%r7635, %r7634};
	xor.b64  	%rd1076, %rd1074, %rd1075;
	xor.b64  	%rd1077, %rd1035, %rd1010;
	and.b64  	%rd1078, %rd1060, %rd1077;
	xor.b64  	%rd1079, %rd1078, %rd1010;
	add.s64 	%rd1080, %rd985, %rd708;
	ld.const.u64 	%rd1081, [k_sha512+240];
	add.s64 	%rd1082, %rd1080, %rd1081;
	add.s64 	%rd1083, %rd1082, %rd1079;
	add.s64 	%rd1084, %rd1083, %rd1076;
	add.s64 	%rd1085, %rd1084, %rd996;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7636,%dummy}, %rd1071;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7637}, %rd1071;
	}
	shf.r.wrap.b32 	%r7638, %r7637, %r7636, 28;
	shf.r.wrap.b32 	%r7639, %r7636, %r7637, 28;
	mov.b64 	%rd1086, {%r7639, %r7638};
	shf.l.wrap.b32 	%r7640, %r7636, %r7637, 30;
	shf.l.wrap.b32 	%r7641, %r7637, %r7636, 30;
	mov.b64 	%rd1087, {%r7641, %r7640};
	xor.b64  	%rd1088, %rd1087, %rd1086;
	shf.l.wrap.b32 	%r7642, %r7636, %r7637, 25;
	shf.l.wrap.b32 	%r7643, %r7637, %r7636, 25;
	mov.b64 	%rd1089, {%r7643, %r7642};
	xor.b64  	%rd1090, %rd1088, %rd1089;
	xor.b64  	%rd1091, %rd1071, %rd1021;
	xor.b64  	%rd1092, %rd1071, %rd1046;
	and.b64  	%rd1093, %rd1092, %rd1091;
	xor.b64  	%rd1094, %rd1093, %rd1071;
	add.s64 	%rd1095, %rd1084, %rd1094;
	add.s64 	%rd1096, %rd1095, %rd1090;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7644,%dummy}, %rd1085;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7645}, %rd1085;
	}
	shf.r.wrap.b32 	%r7646, %r7645, %r7644, 14;
	shf.r.wrap.b32 	%r7647, %r7644, %r7645, 14;
	mov.b64 	%rd1097, {%r7647, %r7646};
	shf.r.wrap.b32 	%r7648, %r7645, %r7644, 18;
	shf.r.wrap.b32 	%r7649, %r7644, %r7645, 18;
	mov.b64 	%rd1098, {%r7649, %r7648};
	xor.b64  	%rd1099, %rd1098, %rd1097;
	shf.l.wrap.b32 	%r7650, %r7644, %r7645, 23;
	shf.l.wrap.b32 	%r7651, %r7645, %r7644, 23;
	mov.b64 	%rd1100, {%r7651, %r7650};
	xor.b64  	%rd1101, %rd1099, %rd1100;
	xor.b64  	%rd1102, %rd1060, %rd1035;
	and.b64  	%rd1103, %rd1085, %rd1102;
	xor.b64  	%rd1104, %rd1103, %rd1035;
	add.s64 	%rd1105, %rd1010, %rd721;
	ld.const.u64 	%rd1106, [k_sha512+248];
	add.s64 	%rd1107, %rd1105, %rd1106;
	add.s64 	%rd1108, %rd1107, %rd1104;
	add.s64 	%rd1109, %rd1108, %rd1101;
	add.s64 	%rd1110, %rd1109, %rd1021;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7652,%dummy}, %rd1096;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7653}, %rd1096;
	}
	shf.r.wrap.b32 	%r7654, %r7653, %r7652, 28;
	shf.r.wrap.b32 	%r7655, %r7652, %r7653, 28;
	mov.b64 	%rd1111, {%r7655, %r7654};
	shf.l.wrap.b32 	%r7656, %r7652, %r7653, 30;
	shf.l.wrap.b32 	%r7657, %r7653, %r7652, 30;
	mov.b64 	%rd1112, {%r7657, %r7656};
	xor.b64  	%rd1113, %rd1112, %rd1111;
	shf.l.wrap.b32 	%r7658, %r7652, %r7653, 25;
	shf.l.wrap.b32 	%r7659, %r7653, %r7652, 25;
	mov.b64 	%rd1114, {%r7659, %r7658};
	xor.b64  	%rd1115, %rd1113, %rd1114;
	xor.b64  	%rd1116, %rd1096, %rd1046;
	xor.b64  	%rd1117, %rd1096, %rd1071;
	and.b64  	%rd1118, %rd1117, %rd1116;
	xor.b64  	%rd1119, %rd1118, %rd1096;
	add.s64 	%rd1120, %rd1109, %rd1119;
	add.s64 	%rd1121, %rd1120, %rd1115;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7660,%dummy}, %rd708;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7661}, %rd708;
	}
	shf.r.wrap.b32 	%r7662, %r7661, %r7660, 19;
	shf.r.wrap.b32 	%r7663, %r7660, %r7661, 19;
	mov.b64 	%rd1122, {%r7663, %r7662};
	shf.l.wrap.b32 	%r7664, %r7660, %r7661, 3;
	shf.l.wrap.b32 	%r7665, %r7661, %r7660, 3;
	mov.b64 	%rd1123, {%r7665, %r7664};
	shr.u64 	%rd1124, %rd708, 6;
	xor.b64  	%rd1125, %rd1122, %rd1124;
	xor.b64  	%rd1126, %rd1125, %rd1123;
	shf.r.wrap.b32 	%r7666, %r7255, %r7254, 1;
	shf.r.wrap.b32 	%r7667, %r7254, %r7255, 1;
	mov.b64 	%rd1127, {%r7667, %r7666};
	shf.r.wrap.b32 	%r7668, %r7255, %r7254, 8;
	shf.r.wrap.b32 	%r7669, %r7254, %r7255, 8;
	mov.b64 	%rd1128, {%r7669, %r7668};
	shr.u64 	%rd1129, %rd539, 7;
	xor.b64  	%rd1130, %rd1127, %rd1129;
	xor.b64  	%rd1131, %rd1130, %rd1128;
	add.s64 	%rd1132, %rd643, %rd526;
	add.s64 	%rd1133, %rd1132, %rd1126;
	add.s64 	%rd1134, %rd1133, %rd1131;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7670,%dummy}, %rd721;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7671}, %rd721;
	}
	shf.r.wrap.b32 	%r7672, %r7671, %r7670, 19;
	shf.r.wrap.b32 	%r7673, %r7670, %r7671, 19;
	mov.b64 	%rd1135, {%r7673, %r7672};
	shf.l.wrap.b32 	%r7674, %r7670, %r7671, 3;
	shf.l.wrap.b32 	%r7675, %r7671, %r7670, 3;
	mov.b64 	%rd1136, {%r7675, %r7674};
	shr.u64 	%rd1137, %rd721, 6;
	xor.b64  	%rd1138, %rd1135, %rd1137;
	xor.b64  	%rd1139, %rd1138, %rd1136;
	shf.r.wrap.b32 	%r7676, %r7267, %r7266, 1;
	shf.r.wrap.b32 	%r7677, %r7266, %r7267, 1;
	mov.b64 	%rd1140, {%r7677, %r7676};
	shf.r.wrap.b32 	%r7678, %r7267, %r7266, 8;
	shf.r.wrap.b32 	%r7679, %r7266, %r7267, 8;
	mov.b64 	%rd1141, {%r7679, %r7678};
	shr.u64 	%rd1142, %rd552, 7;
	xor.b64  	%rd1143, %rd1140, %rd1142;
	xor.b64  	%rd1144, %rd1143, %rd1141;
	add.s64 	%rd1145, %rd656, %rd539;
	add.s64 	%rd1146, %rd1145, %rd1139;
	add.s64 	%rd1147, %rd1146, %rd1144;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7680,%dummy}, %rd1134;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7681}, %rd1134;
	}
	shf.r.wrap.b32 	%r7682, %r7681, %r7680, 19;
	shf.r.wrap.b32 	%r7683, %r7680, %r7681, 19;
	mov.b64 	%rd1148, {%r7683, %r7682};
	shf.l.wrap.b32 	%r7684, %r7680, %r7681, 3;
	shf.l.wrap.b32 	%r7685, %r7681, %r7680, 3;
	mov.b64 	%rd1149, {%r7685, %r7684};
	shr.u64 	%rd1150, %rd1134, 6;
	xor.b64  	%rd1151, %rd1148, %rd1150;
	xor.b64  	%rd1152, %rd1151, %rd1149;
	shf.r.wrap.b32 	%r7686, %r7279, %r7278, 1;
	shf.r.wrap.b32 	%r7687, %r7278, %r7279, 1;
	mov.b64 	%rd1153, {%r7687, %r7686};
	shf.r.wrap.b32 	%r7688, %r7279, %r7278, 8;
	shf.r.wrap.b32 	%r7689, %r7278, %r7279, 8;
	mov.b64 	%rd1154, {%r7689, %r7688};
	shr.u64 	%rd1155, %rd565, 7;
	xor.b64  	%rd1156, %rd1153, %rd1155;
	xor.b64  	%rd1157, %rd1156, %rd1154;
	add.s64 	%rd1158, %rd669, %rd552;
	add.s64 	%rd1159, %rd1158, %rd1152;
	add.s64 	%rd1160, %rd1159, %rd1157;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7690,%dummy}, %rd1147;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7691}, %rd1147;
	}
	shf.r.wrap.b32 	%r7692, %r7691, %r7690, 19;
	shf.r.wrap.b32 	%r7693, %r7690, %r7691, 19;
	mov.b64 	%rd1161, {%r7693, %r7692};
	shf.l.wrap.b32 	%r7694, %r7690, %r7691, 3;
	shf.l.wrap.b32 	%r7695, %r7691, %r7690, 3;
	mov.b64 	%rd1162, {%r7695, %r7694};
	shr.u64 	%rd1163, %rd1147, 6;
	xor.b64  	%rd1164, %rd1161, %rd1163;
	xor.b64  	%rd1165, %rd1164, %rd1162;
	shf.r.wrap.b32 	%r7696, %r7291, %r7290, 1;
	shf.r.wrap.b32 	%r7697, %r7290, %r7291, 1;
	mov.b64 	%rd1166, {%r7697, %r7696};
	shf.r.wrap.b32 	%r7698, %r7291, %r7290, 8;
	shf.r.wrap.b32 	%r7699, %r7290, %r7291, 8;
	mov.b64 	%rd1167, {%r7699, %r7698};
	shr.u64 	%rd1168, %rd578, 7;
	xor.b64  	%rd1169, %rd1166, %rd1168;
	xor.b64  	%rd1170, %rd1169, %rd1167;
	add.s64 	%rd1171, %rd682, %rd565;
	add.s64 	%rd1172, %rd1171, %rd1165;
	add.s64 	%rd1173, %rd1172, %rd1170;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7700,%dummy}, %rd1160;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7701}, %rd1160;
	}
	shf.r.wrap.b32 	%r7702, %r7701, %r7700, 19;
	shf.r.wrap.b32 	%r7703, %r7700, %r7701, 19;
	mov.b64 	%rd1174, {%r7703, %r7702};
	shf.l.wrap.b32 	%r7704, %r7700, %r7701, 3;
	shf.l.wrap.b32 	%r7705, %r7701, %r7700, 3;
	mov.b64 	%rd1175, {%r7705, %r7704};
	shr.u64 	%rd1176, %rd1160, 6;
	xor.b64  	%rd1177, %rd1174, %rd1176;
	xor.b64  	%rd1178, %rd1177, %rd1175;
	shf.r.wrap.b32 	%r7706, %r7303, %r7302, 1;
	shf.r.wrap.b32 	%r7707, %r7302, %r7303, 1;
	mov.b64 	%rd1179, {%r7707, %r7706};
	shf.r.wrap.b32 	%r7708, %r7303, %r7302, 8;
	shf.r.wrap.b32 	%r7709, %r7302, %r7303, 8;
	mov.b64 	%rd1180, {%r7709, %r7708};
	shr.u64 	%rd1181, %rd591, 7;
	xor.b64  	%rd1182, %rd1179, %rd1181;
	xor.b64  	%rd1183, %rd1182, %rd1180;
	add.s64 	%rd1184, %rd695, %rd578;
	add.s64 	%rd1185, %rd1184, %rd1178;
	add.s64 	%rd1186, %rd1185, %rd1183;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7710,%dummy}, %rd1173;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7711}, %rd1173;
	}
	shf.r.wrap.b32 	%r7712, %r7711, %r7710, 19;
	shf.r.wrap.b32 	%r7713, %r7710, %r7711, 19;
	mov.b64 	%rd1187, {%r7713, %r7712};
	shf.l.wrap.b32 	%r7714, %r7710, %r7711, 3;
	shf.l.wrap.b32 	%r7715, %r7711, %r7710, 3;
	mov.b64 	%rd1188, {%r7715, %r7714};
	shr.u64 	%rd1189, %rd1173, 6;
	xor.b64  	%rd1190, %rd1187, %rd1189;
	xor.b64  	%rd1191, %rd1190, %rd1188;
	shf.r.wrap.b32 	%r7716, %r7315, %r7314, 1;
	shf.r.wrap.b32 	%r7717, %r7314, %r7315, 1;
	mov.b64 	%rd1192, {%r7717, %r7716};
	shf.r.wrap.b32 	%r7718, %r7315, %r7314, 8;
	shf.r.wrap.b32 	%r7719, %r7314, %r7315, 8;
	mov.b64 	%rd1193, {%r7719, %r7718};
	shr.u64 	%rd1194, %rd604, 7;
	xor.b64  	%rd1195, %rd1192, %rd1194;
	xor.b64  	%rd1196, %rd1195, %rd1193;
	add.s64 	%rd1197, %rd708, %rd591;
	add.s64 	%rd1198, %rd1197, %rd1191;
	add.s64 	%rd1199, %rd1198, %rd1196;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7720,%dummy}, %rd1186;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7721}, %rd1186;
	}
	shf.r.wrap.b32 	%r7722, %r7721, %r7720, 19;
	shf.r.wrap.b32 	%r7723, %r7720, %r7721, 19;
	mov.b64 	%rd1200, {%r7723, %r7722};
	shf.l.wrap.b32 	%r7724, %r7720, %r7721, 3;
	shf.l.wrap.b32 	%r7725, %r7721, %r7720, 3;
	mov.b64 	%rd1201, {%r7725, %r7724};
	shr.u64 	%rd1202, %rd1186, 6;
	xor.b64  	%rd1203, %rd1200, %rd1202;
	xor.b64  	%rd1204, %rd1203, %rd1201;
	shf.r.wrap.b32 	%r7726, %r7327, %r7326, 1;
	shf.r.wrap.b32 	%r7727, %r7326, %r7327, 1;
	mov.b64 	%rd1205, {%r7727, %r7726};
	shf.r.wrap.b32 	%r7728, %r7327, %r7326, 8;
	shf.r.wrap.b32 	%r7729, %r7326, %r7327, 8;
	mov.b64 	%rd1206, {%r7729, %r7728};
	shr.u64 	%rd1207, %rd617, 7;
	xor.b64  	%rd1208, %rd1205, %rd1207;
	xor.b64  	%rd1209, %rd1208, %rd1206;
	add.s64 	%rd1210, %rd721, %rd604;
	add.s64 	%rd1211, %rd1210, %rd1204;
	add.s64 	%rd1212, %rd1211, %rd1209;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7730,%dummy}, %rd1199;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7731}, %rd1199;
	}
	shf.r.wrap.b32 	%r7732, %r7731, %r7730, 19;
	shf.r.wrap.b32 	%r7733, %r7730, %r7731, 19;
	mov.b64 	%rd1213, {%r7733, %r7732};
	shf.l.wrap.b32 	%r7734, %r7730, %r7731, 3;
	shf.l.wrap.b32 	%r7735, %r7731, %r7730, 3;
	mov.b64 	%rd1214, {%r7735, %r7734};
	shr.u64 	%rd1215, %rd1199, 6;
	xor.b64  	%rd1216, %rd1213, %rd1215;
	xor.b64  	%rd1217, %rd1216, %rd1214;
	shf.r.wrap.b32 	%r7736, %r7339, %r7338, 1;
	shf.r.wrap.b32 	%r7737, %r7338, %r7339, 1;
	mov.b64 	%rd1218, {%r7737, %r7736};
	shf.r.wrap.b32 	%r7738, %r7339, %r7338, 8;
	shf.r.wrap.b32 	%r7739, %r7338, %r7339, 8;
	mov.b64 	%rd1219, {%r7739, %r7738};
	shr.u64 	%rd1220, %rd630, 7;
	xor.b64  	%rd1221, %rd1218, %rd1220;
	xor.b64  	%rd1222, %rd1221, %rd1219;
	add.s64 	%rd1223, %rd1134, %rd617;
	add.s64 	%rd1224, %rd1223, %rd1217;
	add.s64 	%rd1225, %rd1224, %rd1222;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7740,%dummy}, %rd1212;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7741}, %rd1212;
	}
	shf.r.wrap.b32 	%r7742, %r7741, %r7740, 19;
	shf.r.wrap.b32 	%r7743, %r7740, %r7741, 19;
	mov.b64 	%rd1226, {%r7743, %r7742};
	shf.l.wrap.b32 	%r7744, %r7740, %r7741, 3;
	shf.l.wrap.b32 	%r7745, %r7741, %r7740, 3;
	mov.b64 	%rd1227, {%r7745, %r7744};
	shr.u64 	%rd1228, %rd1212, 6;
	xor.b64  	%rd1229, %rd1226, %rd1228;
	xor.b64  	%rd1230, %rd1229, %rd1227;
	shf.r.wrap.b32 	%r7746, %r7351, %r7350, 1;
	shf.r.wrap.b32 	%r7747, %r7350, %r7351, 1;
	mov.b64 	%rd1231, {%r7747, %r7746};
	shf.r.wrap.b32 	%r7748, %r7351, %r7350, 8;
	shf.r.wrap.b32 	%r7749, %r7350, %r7351, 8;
	mov.b64 	%rd1232, {%r7749, %r7748};
	shr.u64 	%rd1233, %rd643, 7;
	xor.b64  	%rd1234, %rd1231, %rd1233;
	xor.b64  	%rd1235, %rd1234, %rd1232;
	add.s64 	%rd1236, %rd1147, %rd630;
	add.s64 	%rd1237, %rd1236, %rd1230;
	add.s64 	%rd1238, %rd1237, %rd1235;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7750,%dummy}, %rd1225;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7751}, %rd1225;
	}
	shf.r.wrap.b32 	%r7752, %r7751, %r7750, 19;
	shf.r.wrap.b32 	%r7753, %r7750, %r7751, 19;
	mov.b64 	%rd1239, {%r7753, %r7752};
	shf.l.wrap.b32 	%r7754, %r7750, %r7751, 3;
	shf.l.wrap.b32 	%r7755, %r7751, %r7750, 3;
	mov.b64 	%rd1240, {%r7755, %r7754};
	shr.u64 	%rd1241, %rd1225, 6;
	xor.b64  	%rd1242, %rd1239, %rd1241;
	xor.b64  	%rd1243, %rd1242, %rd1240;
	shf.r.wrap.b32 	%r7756, %r7363, %r7362, 1;
	shf.r.wrap.b32 	%r7757, %r7362, %r7363, 1;
	mov.b64 	%rd1244, {%r7757, %r7756};
	shf.r.wrap.b32 	%r7758, %r7363, %r7362, 8;
	shf.r.wrap.b32 	%r7759, %r7362, %r7363, 8;
	mov.b64 	%rd1245, {%r7759, %r7758};
	shr.u64 	%rd1246, %rd656, 7;
	xor.b64  	%rd1247, %rd1244, %rd1246;
	xor.b64  	%rd1248, %rd1247, %rd1245;
	add.s64 	%rd1249, %rd1160, %rd643;
	add.s64 	%rd1250, %rd1249, %rd1243;
	add.s64 	%rd1251, %rd1250, %rd1248;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7760,%dummy}, %rd1238;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7761}, %rd1238;
	}
	shf.r.wrap.b32 	%r7762, %r7761, %r7760, 19;
	shf.r.wrap.b32 	%r7763, %r7760, %r7761, 19;
	mov.b64 	%rd1252, {%r7763, %r7762};
	shf.l.wrap.b32 	%r7764, %r7760, %r7761, 3;
	shf.l.wrap.b32 	%r7765, %r7761, %r7760, 3;
	mov.b64 	%rd1253, {%r7765, %r7764};
	shr.u64 	%rd1254, %rd1238, 6;
	xor.b64  	%rd1255, %rd1252, %rd1254;
	xor.b64  	%rd1256, %rd1255, %rd1253;
	shf.r.wrap.b32 	%r7766, %r7375, %r7374, 1;
	shf.r.wrap.b32 	%r7767, %r7374, %r7375, 1;
	mov.b64 	%rd1257, {%r7767, %r7766};
	shf.r.wrap.b32 	%r7768, %r7375, %r7374, 8;
	shf.r.wrap.b32 	%r7769, %r7374, %r7375, 8;
	mov.b64 	%rd1258, {%r7769, %r7768};
	shr.u64 	%rd1259, %rd669, 7;
	xor.b64  	%rd1260, %rd1257, %rd1259;
	xor.b64  	%rd1261, %rd1260, %rd1258;
	add.s64 	%rd1262, %rd1173, %rd656;
	add.s64 	%rd1263, %rd1262, %rd1256;
	add.s64 	%rd1264, %rd1263, %rd1261;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7770,%dummy}, %rd1251;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7771}, %rd1251;
	}
	shf.r.wrap.b32 	%r7772, %r7771, %r7770, 19;
	shf.r.wrap.b32 	%r7773, %r7770, %r7771, 19;
	mov.b64 	%rd1265, {%r7773, %r7772};
	shf.l.wrap.b32 	%r7774, %r7770, %r7771, 3;
	shf.l.wrap.b32 	%r7775, %r7771, %r7770, 3;
	mov.b64 	%rd1266, {%r7775, %r7774};
	shr.u64 	%rd1267, %rd1251, 6;
	xor.b64  	%rd1268, %rd1265, %rd1267;
	xor.b64  	%rd1269, %rd1268, %rd1266;
	shf.r.wrap.b32 	%r7776, %r7385, %r7384, 1;
	shf.r.wrap.b32 	%r7777, %r7384, %r7385, 1;
	mov.b64 	%rd1270, {%r7777, %r7776};
	shf.r.wrap.b32 	%r7778, %r7385, %r7384, 8;
	shf.r.wrap.b32 	%r7779, %r7384, %r7385, 8;
	mov.b64 	%rd1271, {%r7779, %r7778};
	shr.u64 	%rd1272, %rd682, 7;
	xor.b64  	%rd1273, %rd1270, %rd1272;
	xor.b64  	%rd1274, %rd1273, %rd1271;
	add.s64 	%rd1275, %rd1186, %rd669;
	add.s64 	%rd1276, %rd1275, %rd1269;
	add.s64 	%rd1277, %rd1276, %rd1274;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7780,%dummy}, %rd1264;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7781}, %rd1264;
	}
	shf.r.wrap.b32 	%r7782, %r7781, %r7780, 19;
	shf.r.wrap.b32 	%r7783, %r7780, %r7781, 19;
	mov.b64 	%rd1278, {%r7783, %r7782};
	shf.l.wrap.b32 	%r7784, %r7780, %r7781, 3;
	shf.l.wrap.b32 	%r7785, %r7781, %r7780, 3;
	mov.b64 	%rd1279, {%r7785, %r7784};
	shr.u64 	%rd1280, %rd1264, 6;
	xor.b64  	%rd1281, %rd1278, %rd1280;
	xor.b64  	%rd1282, %rd1281, %rd1279;
	shf.r.wrap.b32 	%r7786, %r7395, %r7394, 1;
	shf.r.wrap.b32 	%r7787, %r7394, %r7395, 1;
	mov.b64 	%rd1283, {%r7787, %r7786};
	shf.r.wrap.b32 	%r7788, %r7395, %r7394, 8;
	shf.r.wrap.b32 	%r7789, %r7394, %r7395, 8;
	mov.b64 	%rd1284, {%r7789, %r7788};
	shr.u64 	%rd1285, %rd695, 7;
	xor.b64  	%rd1286, %rd1283, %rd1285;
	xor.b64  	%rd1287, %rd1286, %rd1284;
	add.s64 	%rd1288, %rd1199, %rd682;
	add.s64 	%rd1289, %rd1288, %rd1282;
	add.s64 	%rd1290, %rd1289, %rd1287;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7790,%dummy}, %rd1277;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7791}, %rd1277;
	}
	shf.r.wrap.b32 	%r7792, %r7791, %r7790, 19;
	shf.r.wrap.b32 	%r7793, %r7790, %r7791, 19;
	mov.b64 	%rd1291, {%r7793, %r7792};
	shf.l.wrap.b32 	%r7794, %r7790, %r7791, 3;
	shf.l.wrap.b32 	%r7795, %r7791, %r7790, 3;
	mov.b64 	%rd1292, {%r7795, %r7794};
	shr.u64 	%rd1293, %rd1277, 6;
	xor.b64  	%rd1294, %rd1291, %rd1293;
	xor.b64  	%rd1295, %rd1294, %rd1292;
	shf.r.wrap.b32 	%r7796, %r7661, %r7660, 1;
	shf.r.wrap.b32 	%r7797, %r7660, %r7661, 1;
	mov.b64 	%rd1296, {%r7797, %r7796};
	shf.r.wrap.b32 	%r7798, %r7661, %r7660, 8;
	shf.r.wrap.b32 	%r7799, %r7660, %r7661, 8;
	mov.b64 	%rd1297, {%r7799, %r7798};
	shr.u64 	%rd1298, %rd708, 7;
	xor.b64  	%rd1299, %rd1296, %rd1298;
	xor.b64  	%rd1300, %rd1299, %rd1297;
	add.s64 	%rd1301, %rd1212, %rd695;
	add.s64 	%rd1302, %rd1301, %rd1295;
	add.s64 	%rd1303, %rd1302, %rd1300;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7800,%dummy}, %rd1290;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7801}, %rd1290;
	}
	shf.r.wrap.b32 	%r7802, %r7801, %r7800, 19;
	shf.r.wrap.b32 	%r7803, %r7800, %r7801, 19;
	mov.b64 	%rd1304, {%r7803, %r7802};
	shf.l.wrap.b32 	%r7804, %r7800, %r7801, 3;
	shf.l.wrap.b32 	%r7805, %r7801, %r7800, 3;
	mov.b64 	%rd1305, {%r7805, %r7804};
	shr.u64 	%rd1306, %rd1290, 6;
	xor.b64  	%rd1307, %rd1304, %rd1306;
	xor.b64  	%rd1308, %rd1307, %rd1305;
	shf.r.wrap.b32 	%r7806, %r7671, %r7670, 1;
	shf.r.wrap.b32 	%r7807, %r7670, %r7671, 1;
	mov.b64 	%rd1309, {%r7807, %r7806};
	shf.r.wrap.b32 	%r7808, %r7671, %r7670, 8;
	shf.r.wrap.b32 	%r7809, %r7670, %r7671, 8;
	mov.b64 	%rd1310, {%r7809, %r7808};
	shr.u64 	%rd1311, %rd721, 7;
	xor.b64  	%rd1312, %rd1309, %rd1311;
	xor.b64  	%rd1313, %rd1312, %rd1310;
	add.s64 	%rd1314, %rd1225, %rd708;
	add.s64 	%rd1315, %rd1314, %rd1308;
	add.s64 	%rd1316, %rd1315, %rd1313;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7810,%dummy}, %rd1303;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7811}, %rd1303;
	}
	shf.r.wrap.b32 	%r7812, %r7811, %r7810, 19;
	shf.r.wrap.b32 	%r7813, %r7810, %r7811, 19;
	mov.b64 	%rd1317, {%r7813, %r7812};
	shf.l.wrap.b32 	%r7814, %r7810, %r7811, 3;
	shf.l.wrap.b32 	%r7815, %r7811, %r7810, 3;
	mov.b64 	%rd1318, {%r7815, %r7814};
	shr.u64 	%rd1319, %rd1303, 6;
	xor.b64  	%rd1320, %rd1317, %rd1319;
	xor.b64  	%rd1321, %rd1320, %rd1318;
	shf.r.wrap.b32 	%r7816, %r7681, %r7680, 1;
	shf.r.wrap.b32 	%r7817, %r7680, %r7681, 1;
	mov.b64 	%rd1322, {%r7817, %r7816};
	shf.r.wrap.b32 	%r7818, %r7681, %r7680, 8;
	shf.r.wrap.b32 	%r7819, %r7680, %r7681, 8;
	mov.b64 	%rd1323, {%r7819, %r7818};
	shr.u64 	%rd1324, %rd1134, 7;
	xor.b64  	%rd1325, %rd1322, %rd1324;
	xor.b64  	%rd1326, %rd1325, %rd1323;
	add.s64 	%rd1327, %rd1238, %rd721;
	add.s64 	%rd1328, %rd1327, %rd1321;
	add.s64 	%rd1329, %rd1328, %rd1326;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7820,%dummy}, %rd1110;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7821}, %rd1110;
	}
	shf.r.wrap.b32 	%r7822, %r7821, %r7820, 14;
	shf.r.wrap.b32 	%r7823, %r7820, %r7821, 14;
	mov.b64 	%rd1330, {%r7823, %r7822};
	shf.r.wrap.b32 	%r7824, %r7821, %r7820, 18;
	shf.r.wrap.b32 	%r7825, %r7820, %r7821, 18;
	mov.b64 	%rd1331, {%r7825, %r7824};
	xor.b64  	%rd1332, %rd1331, %rd1330;
	shf.l.wrap.b32 	%r7826, %r7820, %r7821, 23;
	shf.l.wrap.b32 	%r7827, %r7821, %r7820, 23;
	mov.b64 	%rd1333, {%r7827, %r7826};
	xor.b64  	%rd1334, %rd1332, %rd1333;
	xor.b64  	%rd1335, %rd1085, %rd1060;
	and.b64  	%rd1336, %rd1335, %rd1110;
	xor.b64  	%rd1337, %rd1336, %rd1060;
	add.s64 	%rd1338, %rd1337, %rd1035;
	add.s64 	%rd1339, %rd1338, %rd1134;
	ld.const.u64 	%rd1340, [k_sha512+256];
	add.s64 	%rd1341, %rd1339, %rd1340;
	add.s64 	%rd1342, %rd1341, %rd1334;
	add.s64 	%rd1343, %rd1342, %rd1046;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7828,%dummy}, %rd1121;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7829}, %rd1121;
	}
	shf.r.wrap.b32 	%r7830, %r7829, %r7828, 28;
	shf.r.wrap.b32 	%r7831, %r7828, %r7829, 28;
	mov.b64 	%rd1344, {%r7831, %r7830};
	shf.l.wrap.b32 	%r7832, %r7828, %r7829, 30;
	shf.l.wrap.b32 	%r7833, %r7829, %r7828, 30;
	mov.b64 	%rd1345, {%r7833, %r7832};
	xor.b64  	%rd1346, %rd1345, %rd1344;
	shf.l.wrap.b32 	%r7834, %r7828, %r7829, 25;
	shf.l.wrap.b32 	%r7835, %r7829, %r7828, 25;
	mov.b64 	%rd1347, {%r7835, %r7834};
	xor.b64  	%rd1348, %rd1346, %rd1347;
	xor.b64  	%rd1349, %rd1121, %rd1071;
	xor.b64  	%rd1350, %rd1121, %rd1096;
	and.b64  	%rd1351, %rd1350, %rd1349;
	xor.b64  	%rd1352, %rd1351, %rd1121;
	add.s64 	%rd1353, %rd1342, %rd1352;
	add.s64 	%rd1354, %rd1353, %rd1348;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7836,%dummy}, %rd1343;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7837}, %rd1343;
	}
	shf.r.wrap.b32 	%r7838, %r7837, %r7836, 14;
	shf.r.wrap.b32 	%r7839, %r7836, %r7837, 14;
	mov.b64 	%rd1355, {%r7839, %r7838};
	shf.r.wrap.b32 	%r7840, %r7837, %r7836, 18;
	shf.r.wrap.b32 	%r7841, %r7836, %r7837, 18;
	mov.b64 	%rd1356, {%r7841, %r7840};
	xor.b64  	%rd1357, %rd1356, %rd1355;
	shf.l.wrap.b32 	%r7842, %r7836, %r7837, 23;
	shf.l.wrap.b32 	%r7843, %r7837, %r7836, 23;
	mov.b64 	%rd1358, {%r7843, %r7842};
	xor.b64  	%rd1359, %rd1357, %rd1358;
	xor.b64  	%rd1360, %rd1110, %rd1085;
	and.b64  	%rd1361, %rd1343, %rd1360;
	xor.b64  	%rd1362, %rd1361, %rd1085;
	add.s64 	%rd1363, %rd1147, %rd1060;
	ld.const.u64 	%rd1364, [k_sha512+264];
	add.s64 	%rd1365, %rd1363, %rd1364;
	add.s64 	%rd1366, %rd1365, %rd1362;
	add.s64 	%rd1367, %rd1366, %rd1359;
	add.s64 	%rd1368, %rd1367, %rd1071;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7844,%dummy}, %rd1354;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7845}, %rd1354;
	}
	shf.r.wrap.b32 	%r7846, %r7845, %r7844, 28;
	shf.r.wrap.b32 	%r7847, %r7844, %r7845, 28;
	mov.b64 	%rd1369, {%r7847, %r7846};
	shf.l.wrap.b32 	%r7848, %r7844, %r7845, 30;
	shf.l.wrap.b32 	%r7849, %r7845, %r7844, 30;
	mov.b64 	%rd1370, {%r7849, %r7848};
	xor.b64  	%rd1371, %rd1370, %rd1369;
	shf.l.wrap.b32 	%r7850, %r7844, %r7845, 25;
	shf.l.wrap.b32 	%r7851, %r7845, %r7844, 25;
	mov.b64 	%rd1372, {%r7851, %r7850};
	xor.b64  	%rd1373, %rd1371, %rd1372;
	xor.b64  	%rd1374, %rd1354, %rd1096;
	xor.b64  	%rd1375, %rd1354, %rd1121;
	and.b64  	%rd1376, %rd1375, %rd1374;
	xor.b64  	%rd1377, %rd1376, %rd1354;
	add.s64 	%rd1378, %rd1367, %rd1377;
	add.s64 	%rd1379, %rd1378, %rd1373;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7852,%dummy}, %rd1368;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7853}, %rd1368;
	}
	shf.r.wrap.b32 	%r7854, %r7853, %r7852, 14;
	shf.r.wrap.b32 	%r7855, %r7852, %r7853, 14;
	mov.b64 	%rd1380, {%r7855, %r7854};
	shf.r.wrap.b32 	%r7856, %r7853, %r7852, 18;
	shf.r.wrap.b32 	%r7857, %r7852, %r7853, 18;
	mov.b64 	%rd1381, {%r7857, %r7856};
	xor.b64  	%rd1382, %rd1381, %rd1380;
	shf.l.wrap.b32 	%r7858, %r7852, %r7853, 23;
	shf.l.wrap.b32 	%r7859, %r7853, %r7852, 23;
	mov.b64 	%rd1383, {%r7859, %r7858};
	xor.b64  	%rd1384, %rd1382, %rd1383;
	xor.b64  	%rd1385, %rd1343, %rd1110;
	and.b64  	%rd1386, %rd1368, %rd1385;
	xor.b64  	%rd1387, %rd1386, %rd1110;
	add.s64 	%rd1388, %rd1160, %rd1085;
	ld.const.u64 	%rd1389, [k_sha512+272];
	add.s64 	%rd1390, %rd1388, %rd1389;
	add.s64 	%rd1391, %rd1390, %rd1387;
	add.s64 	%rd1392, %rd1391, %rd1384;
	add.s64 	%rd1393, %rd1392, %rd1096;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7860,%dummy}, %rd1379;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7861}, %rd1379;
	}
	shf.r.wrap.b32 	%r7862, %r7861, %r7860, 28;
	shf.r.wrap.b32 	%r7863, %r7860, %r7861, 28;
	mov.b64 	%rd1394, {%r7863, %r7862};
	shf.l.wrap.b32 	%r7864, %r7860, %r7861, 30;
	shf.l.wrap.b32 	%r7865, %r7861, %r7860, 30;
	mov.b64 	%rd1395, {%r7865, %r7864};
	xor.b64  	%rd1396, %rd1395, %rd1394;
	shf.l.wrap.b32 	%r7866, %r7860, %r7861, 25;
	shf.l.wrap.b32 	%r7867, %r7861, %r7860, 25;
	mov.b64 	%rd1397, {%r7867, %r7866};
	xor.b64  	%rd1398, %rd1396, %rd1397;
	xor.b64  	%rd1399, %rd1379, %rd1121;
	xor.b64  	%rd1400, %rd1379, %rd1354;
	and.b64  	%rd1401, %rd1400, %rd1399;
	xor.b64  	%rd1402, %rd1401, %rd1379;
	add.s64 	%rd1403, %rd1392, %rd1402;
	add.s64 	%rd1404, %rd1403, %rd1398;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7868,%dummy}, %rd1393;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7869}, %rd1393;
	}
	shf.r.wrap.b32 	%r7870, %r7869, %r7868, 14;
	shf.r.wrap.b32 	%r7871, %r7868, %r7869, 14;
	mov.b64 	%rd1405, {%r7871, %r7870};
	shf.r.wrap.b32 	%r7872, %r7869, %r7868, 18;
	shf.r.wrap.b32 	%r7873, %r7868, %r7869, 18;
	mov.b64 	%rd1406, {%r7873, %r7872};
	xor.b64  	%rd1407, %rd1406, %rd1405;
	shf.l.wrap.b32 	%r7874, %r7868, %r7869, 23;
	shf.l.wrap.b32 	%r7875, %r7869, %r7868, 23;
	mov.b64 	%rd1408, {%r7875, %r7874};
	xor.b64  	%rd1409, %rd1407, %rd1408;
	xor.b64  	%rd1410, %rd1368, %rd1343;
	and.b64  	%rd1411, %rd1393, %rd1410;
	xor.b64  	%rd1412, %rd1411, %rd1343;
	add.s64 	%rd1413, %rd1173, %rd1110;
	ld.const.u64 	%rd1414, [k_sha512+280];
	add.s64 	%rd1415, %rd1413, %rd1414;
	add.s64 	%rd1416, %rd1415, %rd1412;
	add.s64 	%rd1417, %rd1416, %rd1409;
	add.s64 	%rd1418, %rd1417, %rd1121;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7876,%dummy}, %rd1404;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7877}, %rd1404;
	}
	shf.r.wrap.b32 	%r7878, %r7877, %r7876, 28;
	shf.r.wrap.b32 	%r7879, %r7876, %r7877, 28;
	mov.b64 	%rd1419, {%r7879, %r7878};
	shf.l.wrap.b32 	%r7880, %r7876, %r7877, 30;
	shf.l.wrap.b32 	%r7881, %r7877, %r7876, 30;
	mov.b64 	%rd1420, {%r7881, %r7880};
	xor.b64  	%rd1421, %rd1420, %rd1419;
	shf.l.wrap.b32 	%r7882, %r7876, %r7877, 25;
	shf.l.wrap.b32 	%r7883, %r7877, %r7876, 25;
	mov.b64 	%rd1422, {%r7883, %r7882};
	xor.b64  	%rd1423, %rd1421, %rd1422;
	xor.b64  	%rd1424, %rd1404, %rd1354;
	xor.b64  	%rd1425, %rd1404, %rd1379;
	and.b64  	%rd1426, %rd1425, %rd1424;
	xor.b64  	%rd1427, %rd1426, %rd1404;
	add.s64 	%rd1428, %rd1417, %rd1427;
	add.s64 	%rd1429, %rd1428, %rd1423;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7884,%dummy}, %rd1418;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7885}, %rd1418;
	}
	shf.r.wrap.b32 	%r7886, %r7885, %r7884, 14;
	shf.r.wrap.b32 	%r7887, %r7884, %r7885, 14;
	mov.b64 	%rd1430, {%r7887, %r7886};
	shf.r.wrap.b32 	%r7888, %r7885, %r7884, 18;
	shf.r.wrap.b32 	%r7889, %r7884, %r7885, 18;
	mov.b64 	%rd1431, {%r7889, %r7888};
	xor.b64  	%rd1432, %rd1431, %rd1430;
	shf.l.wrap.b32 	%r7890, %r7884, %r7885, 23;
	shf.l.wrap.b32 	%r7891, %r7885, %r7884, 23;
	mov.b64 	%rd1433, {%r7891, %r7890};
	xor.b64  	%rd1434, %rd1432, %rd1433;
	xor.b64  	%rd1435, %rd1393, %rd1368;
	and.b64  	%rd1436, %rd1418, %rd1435;
	xor.b64  	%rd1437, %rd1436, %rd1368;
	add.s64 	%rd1438, %rd1343, %rd1186;
	ld.const.u64 	%rd1439, [k_sha512+288];
	add.s64 	%rd1440, %rd1438, %rd1439;
	add.s64 	%rd1441, %rd1440, %rd1437;
	add.s64 	%rd1442, %rd1441, %rd1434;
	add.s64 	%rd1443, %rd1442, %rd1354;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7892,%dummy}, %rd1429;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7893}, %rd1429;
	}
	shf.r.wrap.b32 	%r7894, %r7893, %r7892, 28;
	shf.r.wrap.b32 	%r7895, %r7892, %r7893, 28;
	mov.b64 	%rd1444, {%r7895, %r7894};
	shf.l.wrap.b32 	%r7896, %r7892, %r7893, 30;
	shf.l.wrap.b32 	%r7897, %r7893, %r7892, 30;
	mov.b64 	%rd1445, {%r7897, %r7896};
	xor.b64  	%rd1446, %rd1445, %rd1444;
	shf.l.wrap.b32 	%r7898, %r7892, %r7893, 25;
	shf.l.wrap.b32 	%r7899, %r7893, %r7892, 25;
	mov.b64 	%rd1447, {%r7899, %r7898};
	xor.b64  	%rd1448, %rd1446, %rd1447;
	xor.b64  	%rd1449, %rd1429, %rd1379;
	xor.b64  	%rd1450, %rd1429, %rd1404;
	and.b64  	%rd1451, %rd1450, %rd1449;
	xor.b64  	%rd1452, %rd1451, %rd1429;
	add.s64 	%rd1453, %rd1442, %rd1452;
	add.s64 	%rd1454, %rd1453, %rd1448;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7900,%dummy}, %rd1443;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7901}, %rd1443;
	}
	shf.r.wrap.b32 	%r7902, %r7901, %r7900, 14;
	shf.r.wrap.b32 	%r7903, %r7900, %r7901, 14;
	mov.b64 	%rd1455, {%r7903, %r7902};
	shf.r.wrap.b32 	%r7904, %r7901, %r7900, 18;
	shf.r.wrap.b32 	%r7905, %r7900, %r7901, 18;
	mov.b64 	%rd1456, {%r7905, %r7904};
	xor.b64  	%rd1457, %rd1456, %rd1455;
	shf.l.wrap.b32 	%r7906, %r7900, %r7901, 23;
	shf.l.wrap.b32 	%r7907, %r7901, %r7900, 23;
	mov.b64 	%rd1458, {%r7907, %r7906};
	xor.b64  	%rd1459, %rd1457, %rd1458;
	xor.b64  	%rd1460, %rd1418, %rd1393;
	and.b64  	%rd1461, %rd1443, %rd1460;
	xor.b64  	%rd1462, %rd1461, %rd1393;
	add.s64 	%rd1463, %rd1368, %rd1199;
	ld.const.u64 	%rd1464, [k_sha512+296];
	add.s64 	%rd1465, %rd1463, %rd1464;
	add.s64 	%rd1466, %rd1465, %rd1462;
	add.s64 	%rd1467, %rd1466, %rd1459;
	add.s64 	%rd1468, %rd1467, %rd1379;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7908,%dummy}, %rd1454;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7909}, %rd1454;
	}
	shf.r.wrap.b32 	%r7910, %r7909, %r7908, 28;
	shf.r.wrap.b32 	%r7911, %r7908, %r7909, 28;
	mov.b64 	%rd1469, {%r7911, %r7910};
	shf.l.wrap.b32 	%r7912, %r7908, %r7909, 30;
	shf.l.wrap.b32 	%r7913, %r7909, %r7908, 30;
	mov.b64 	%rd1470, {%r7913, %r7912};
	xor.b64  	%rd1471, %rd1470, %rd1469;
	shf.l.wrap.b32 	%r7914, %r7908, %r7909, 25;
	shf.l.wrap.b32 	%r7915, %r7909, %r7908, 25;
	mov.b64 	%rd1472, {%r7915, %r7914};
	xor.b64  	%rd1473, %rd1471, %rd1472;
	xor.b64  	%rd1474, %rd1454, %rd1404;
	xor.b64  	%rd1475, %rd1454, %rd1429;
	and.b64  	%rd1476, %rd1475, %rd1474;
	xor.b64  	%rd1477, %rd1476, %rd1454;
	add.s64 	%rd1478, %rd1467, %rd1477;
	add.s64 	%rd1479, %rd1478, %rd1473;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7916,%dummy}, %rd1468;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7917}, %rd1468;
	}
	shf.r.wrap.b32 	%r7918, %r7917, %r7916, 14;
	shf.r.wrap.b32 	%r7919, %r7916, %r7917, 14;
	mov.b64 	%rd1480, {%r7919, %r7918};
	shf.r.wrap.b32 	%r7920, %r7917, %r7916, 18;
	shf.r.wrap.b32 	%r7921, %r7916, %r7917, 18;
	mov.b64 	%rd1481, {%r7921, %r7920};
	xor.b64  	%rd1482, %rd1481, %rd1480;
	shf.l.wrap.b32 	%r7922, %r7916, %r7917, 23;
	shf.l.wrap.b32 	%r7923, %r7917, %r7916, 23;
	mov.b64 	%rd1483, {%r7923, %r7922};
	xor.b64  	%rd1484, %rd1482, %rd1483;
	xor.b64  	%rd1485, %rd1443, %rd1418;
	and.b64  	%rd1486, %rd1468, %rd1485;
	xor.b64  	%rd1487, %rd1486, %rd1418;
	add.s64 	%rd1488, %rd1393, %rd1212;
	ld.const.u64 	%rd1489, [k_sha512+304];
	add.s64 	%rd1490, %rd1488, %rd1489;
	add.s64 	%rd1491, %rd1490, %rd1487;
	add.s64 	%rd1492, %rd1491, %rd1484;
	add.s64 	%rd1493, %rd1492, %rd1404;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7924,%dummy}, %rd1479;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7925}, %rd1479;
	}
	shf.r.wrap.b32 	%r7926, %r7925, %r7924, 28;
	shf.r.wrap.b32 	%r7927, %r7924, %r7925, 28;
	mov.b64 	%rd1494, {%r7927, %r7926};
	shf.l.wrap.b32 	%r7928, %r7924, %r7925, 30;
	shf.l.wrap.b32 	%r7929, %r7925, %r7924, 30;
	mov.b64 	%rd1495, {%r7929, %r7928};
	xor.b64  	%rd1496, %rd1495, %rd1494;
	shf.l.wrap.b32 	%r7930, %r7924, %r7925, 25;
	shf.l.wrap.b32 	%r7931, %r7925, %r7924, 25;
	mov.b64 	%rd1497, {%r7931, %r7930};
	xor.b64  	%rd1498, %rd1496, %rd1497;
	xor.b64  	%rd1499, %rd1479, %rd1429;
	xor.b64  	%rd1500, %rd1479, %rd1454;
	and.b64  	%rd1501, %rd1500, %rd1499;
	xor.b64  	%rd1502, %rd1501, %rd1479;
	add.s64 	%rd1503, %rd1492, %rd1502;
	add.s64 	%rd1504, %rd1503, %rd1498;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7932,%dummy}, %rd1493;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7933}, %rd1493;
	}
	shf.r.wrap.b32 	%r7934, %r7933, %r7932, 14;
	shf.r.wrap.b32 	%r7935, %r7932, %r7933, 14;
	mov.b64 	%rd1505, {%r7935, %r7934};
	shf.r.wrap.b32 	%r7936, %r7933, %r7932, 18;
	shf.r.wrap.b32 	%r7937, %r7932, %r7933, 18;
	mov.b64 	%rd1506, {%r7937, %r7936};
	xor.b64  	%rd1507, %rd1506, %rd1505;
	shf.l.wrap.b32 	%r7938, %r7932, %r7933, 23;
	shf.l.wrap.b32 	%r7939, %r7933, %r7932, 23;
	mov.b64 	%rd1508, {%r7939, %r7938};
	xor.b64  	%rd1509, %rd1507, %rd1508;
	xor.b64  	%rd1510, %rd1468, %rd1443;
	and.b64  	%rd1511, %rd1493, %rd1510;
	xor.b64  	%rd1512, %rd1511, %rd1443;
	add.s64 	%rd1513, %rd1418, %rd1225;
	ld.const.u64 	%rd1514, [k_sha512+312];
	add.s64 	%rd1515, %rd1513, %rd1514;
	add.s64 	%rd1516, %rd1515, %rd1512;
	add.s64 	%rd1517, %rd1516, %rd1509;
	add.s64 	%rd1518, %rd1517, %rd1429;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7940,%dummy}, %rd1504;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7941}, %rd1504;
	}
	shf.r.wrap.b32 	%r7942, %r7941, %r7940, 28;
	shf.r.wrap.b32 	%r7943, %r7940, %r7941, 28;
	mov.b64 	%rd1519, {%r7943, %r7942};
	shf.l.wrap.b32 	%r7944, %r7940, %r7941, 30;
	shf.l.wrap.b32 	%r7945, %r7941, %r7940, 30;
	mov.b64 	%rd1520, {%r7945, %r7944};
	xor.b64  	%rd1521, %rd1520, %rd1519;
	shf.l.wrap.b32 	%r7946, %r7940, %r7941, 25;
	shf.l.wrap.b32 	%r7947, %r7941, %r7940, 25;
	mov.b64 	%rd1522, {%r7947, %r7946};
	xor.b64  	%rd1523, %rd1521, %rd1522;
	xor.b64  	%rd1524, %rd1504, %rd1454;
	xor.b64  	%rd1525, %rd1504, %rd1479;
	and.b64  	%rd1526, %rd1525, %rd1524;
	xor.b64  	%rd1527, %rd1526, %rd1504;
	add.s64 	%rd1528, %rd1517, %rd1527;
	add.s64 	%rd1529, %rd1528, %rd1523;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7948,%dummy}, %rd1518;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7949}, %rd1518;
	}
	shf.r.wrap.b32 	%r7950, %r7949, %r7948, 14;
	shf.r.wrap.b32 	%r7951, %r7948, %r7949, 14;
	mov.b64 	%rd1530, {%r7951, %r7950};
	shf.r.wrap.b32 	%r7952, %r7949, %r7948, 18;
	shf.r.wrap.b32 	%r7953, %r7948, %r7949, 18;
	mov.b64 	%rd1531, {%r7953, %r7952};
	xor.b64  	%rd1532, %rd1531, %rd1530;
	shf.l.wrap.b32 	%r7954, %r7948, %r7949, 23;
	shf.l.wrap.b32 	%r7955, %r7949, %r7948, 23;
	mov.b64 	%rd1533, {%r7955, %r7954};
	xor.b64  	%rd1534, %rd1532, %rd1533;
	xor.b64  	%rd1535, %rd1493, %rd1468;
	and.b64  	%rd1536, %rd1518, %rd1535;
	xor.b64  	%rd1537, %rd1536, %rd1468;
	add.s64 	%rd1538, %rd1443, %rd1238;
	ld.const.u64 	%rd1539, [k_sha512+320];
	add.s64 	%rd1540, %rd1538, %rd1539;
	add.s64 	%rd1541, %rd1540, %rd1537;
	add.s64 	%rd1542, %rd1541, %rd1534;
	add.s64 	%rd1543, %rd1542, %rd1454;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7956,%dummy}, %rd1529;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7957}, %rd1529;
	}
	shf.r.wrap.b32 	%r7958, %r7957, %r7956, 28;
	shf.r.wrap.b32 	%r7959, %r7956, %r7957, 28;
	mov.b64 	%rd1544, {%r7959, %r7958};
	shf.l.wrap.b32 	%r7960, %r7956, %r7957, 30;
	shf.l.wrap.b32 	%r7961, %r7957, %r7956, 30;
	mov.b64 	%rd1545, {%r7961, %r7960};
	xor.b64  	%rd1546, %rd1545, %rd1544;
	shf.l.wrap.b32 	%r7962, %r7956, %r7957, 25;
	shf.l.wrap.b32 	%r7963, %r7957, %r7956, 25;
	mov.b64 	%rd1547, {%r7963, %r7962};
	xor.b64  	%rd1548, %rd1546, %rd1547;
	xor.b64  	%rd1549, %rd1529, %rd1479;
	xor.b64  	%rd1550, %rd1529, %rd1504;
	and.b64  	%rd1551, %rd1550, %rd1549;
	xor.b64  	%rd1552, %rd1551, %rd1529;
	add.s64 	%rd1553, %rd1542, %rd1552;
	add.s64 	%rd1554, %rd1553, %rd1548;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7964,%dummy}, %rd1543;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7965}, %rd1543;
	}
	shf.r.wrap.b32 	%r7966, %r7965, %r7964, 14;
	shf.r.wrap.b32 	%r7967, %r7964, %r7965, 14;
	mov.b64 	%rd1555, {%r7967, %r7966};
	shf.r.wrap.b32 	%r7968, %r7965, %r7964, 18;
	shf.r.wrap.b32 	%r7969, %r7964, %r7965, 18;
	mov.b64 	%rd1556, {%r7969, %r7968};
	xor.b64  	%rd1557, %rd1556, %rd1555;
	shf.l.wrap.b32 	%r7970, %r7964, %r7965, 23;
	shf.l.wrap.b32 	%r7971, %r7965, %r7964, 23;
	mov.b64 	%rd1558, {%r7971, %r7970};
	xor.b64  	%rd1559, %rd1557, %rd1558;
	xor.b64  	%rd1560, %rd1518, %rd1493;
	and.b64  	%rd1561, %rd1543, %rd1560;
	xor.b64  	%rd1562, %rd1561, %rd1493;
	add.s64 	%rd1563, %rd1468, %rd1251;
	ld.const.u64 	%rd1564, [k_sha512+328];
	add.s64 	%rd1565, %rd1563, %rd1564;
	add.s64 	%rd1566, %rd1565, %rd1562;
	add.s64 	%rd1567, %rd1566, %rd1559;
	add.s64 	%rd1568, %rd1567, %rd1479;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7972,%dummy}, %rd1554;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7973}, %rd1554;
	}
	shf.r.wrap.b32 	%r7974, %r7973, %r7972, 28;
	shf.r.wrap.b32 	%r7975, %r7972, %r7973, 28;
	mov.b64 	%rd1569, {%r7975, %r7974};
	shf.l.wrap.b32 	%r7976, %r7972, %r7973, 30;
	shf.l.wrap.b32 	%r7977, %r7973, %r7972, 30;
	mov.b64 	%rd1570, {%r7977, %r7976};
	xor.b64  	%rd1571, %rd1570, %rd1569;
	shf.l.wrap.b32 	%r7978, %r7972, %r7973, 25;
	shf.l.wrap.b32 	%r7979, %r7973, %r7972, 25;
	mov.b64 	%rd1572, {%r7979, %r7978};
	xor.b64  	%rd1573, %rd1571, %rd1572;
	xor.b64  	%rd1574, %rd1554, %rd1504;
	xor.b64  	%rd1575, %rd1554, %rd1529;
	and.b64  	%rd1576, %rd1575, %rd1574;
	xor.b64  	%rd1577, %rd1576, %rd1554;
	add.s64 	%rd1578, %rd1567, %rd1577;
	add.s64 	%rd1579, %rd1578, %rd1573;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7980,%dummy}, %rd1568;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7981}, %rd1568;
	}
	shf.r.wrap.b32 	%r7982, %r7981, %r7980, 14;
	shf.r.wrap.b32 	%r7983, %r7980, %r7981, 14;
	mov.b64 	%rd1580, {%r7983, %r7982};
	shf.r.wrap.b32 	%r7984, %r7981, %r7980, 18;
	shf.r.wrap.b32 	%r7985, %r7980, %r7981, 18;
	mov.b64 	%rd1581, {%r7985, %r7984};
	xor.b64  	%rd1582, %rd1581, %rd1580;
	shf.l.wrap.b32 	%r7986, %r7980, %r7981, 23;
	shf.l.wrap.b32 	%r7987, %r7981, %r7980, 23;
	mov.b64 	%rd1583, {%r7987, %r7986};
	xor.b64  	%rd1584, %rd1582, %rd1583;
	xor.b64  	%rd1585, %rd1543, %rd1518;
	and.b64  	%rd1586, %rd1568, %rd1585;
	xor.b64  	%rd1587, %rd1586, %rd1518;
	add.s64 	%rd1588, %rd1493, %rd1264;
	ld.const.u64 	%rd1589, [k_sha512+336];
	add.s64 	%rd1590, %rd1588, %rd1589;
	add.s64 	%rd1591, %rd1590, %rd1587;
	add.s64 	%rd1592, %rd1591, %rd1584;
	add.s64 	%rd1593, %rd1592, %rd1504;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7988,%dummy}, %rd1579;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7989}, %rd1579;
	}
	shf.r.wrap.b32 	%r7990, %r7989, %r7988, 28;
	shf.r.wrap.b32 	%r7991, %r7988, %r7989, 28;
	mov.b64 	%rd1594, {%r7991, %r7990};
	shf.l.wrap.b32 	%r7992, %r7988, %r7989, 30;
	shf.l.wrap.b32 	%r7993, %r7989, %r7988, 30;
	mov.b64 	%rd1595, {%r7993, %r7992};
	xor.b64  	%rd1596, %rd1595, %rd1594;
	shf.l.wrap.b32 	%r7994, %r7988, %r7989, 25;
	shf.l.wrap.b32 	%r7995, %r7989, %r7988, 25;
	mov.b64 	%rd1597, {%r7995, %r7994};
	xor.b64  	%rd1598, %rd1596, %rd1597;
	xor.b64  	%rd1599, %rd1579, %rd1529;
	xor.b64  	%rd1600, %rd1579, %rd1554;
	and.b64  	%rd1601, %rd1600, %rd1599;
	xor.b64  	%rd1602, %rd1601, %rd1579;
	add.s64 	%rd1603, %rd1592, %rd1602;
	add.s64 	%rd1604, %rd1603, %rd1598;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7996,%dummy}, %rd1593;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7997}, %rd1593;
	}
	shf.r.wrap.b32 	%r7998, %r7997, %r7996, 14;
	shf.r.wrap.b32 	%r7999, %r7996, %r7997, 14;
	mov.b64 	%rd1605, {%r7999, %r7998};
	shf.r.wrap.b32 	%r8000, %r7997, %r7996, 18;
	shf.r.wrap.b32 	%r8001, %r7996, %r7997, 18;
	mov.b64 	%rd1606, {%r8001, %r8000};
	xor.b64  	%rd1607, %rd1606, %rd1605;
	shf.l.wrap.b32 	%r8002, %r7996, %r7997, 23;
	shf.l.wrap.b32 	%r8003, %r7997, %r7996, 23;
	mov.b64 	%rd1608, {%r8003, %r8002};
	xor.b64  	%rd1609, %rd1607, %rd1608;
	xor.b64  	%rd1610, %rd1568, %rd1543;
	and.b64  	%rd1611, %rd1593, %rd1610;
	xor.b64  	%rd1612, %rd1611, %rd1543;
	add.s64 	%rd1613, %rd1518, %rd1277;
	ld.const.u64 	%rd1614, [k_sha512+344];
	add.s64 	%rd1615, %rd1613, %rd1614;
	add.s64 	%rd1616, %rd1615, %rd1612;
	add.s64 	%rd1617, %rd1616, %rd1609;
	add.s64 	%rd1618, %rd1617, %rd1529;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8004,%dummy}, %rd1604;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8005}, %rd1604;
	}
	shf.r.wrap.b32 	%r8006, %r8005, %r8004, 28;
	shf.r.wrap.b32 	%r8007, %r8004, %r8005, 28;
	mov.b64 	%rd1619, {%r8007, %r8006};
	shf.l.wrap.b32 	%r8008, %r8004, %r8005, 30;
	shf.l.wrap.b32 	%r8009, %r8005, %r8004, 30;
	mov.b64 	%rd1620, {%r8009, %r8008};
	xor.b64  	%rd1621, %rd1620, %rd1619;
	shf.l.wrap.b32 	%r8010, %r8004, %r8005, 25;
	shf.l.wrap.b32 	%r8011, %r8005, %r8004, 25;
	mov.b64 	%rd1622, {%r8011, %r8010};
	xor.b64  	%rd1623, %rd1621, %rd1622;
	xor.b64  	%rd1624, %rd1604, %rd1554;
	xor.b64  	%rd1625, %rd1604, %rd1579;
	and.b64  	%rd1626, %rd1625, %rd1624;
	xor.b64  	%rd1627, %rd1626, %rd1604;
	add.s64 	%rd1628, %rd1617, %rd1627;
	add.s64 	%rd1629, %rd1628, %rd1623;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8012,%dummy}, %rd1618;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8013}, %rd1618;
	}
	shf.r.wrap.b32 	%r8014, %r8013, %r8012, 14;
	shf.r.wrap.b32 	%r8015, %r8012, %r8013, 14;
	mov.b64 	%rd1630, {%r8015, %r8014};
	shf.r.wrap.b32 	%r8016, %r8013, %r8012, 18;
	shf.r.wrap.b32 	%r8017, %r8012, %r8013, 18;
	mov.b64 	%rd1631, {%r8017, %r8016};
	xor.b64  	%rd1632, %rd1631, %rd1630;
	shf.l.wrap.b32 	%r8018, %r8012, %r8013, 23;
	shf.l.wrap.b32 	%r8019, %r8013, %r8012, 23;
	mov.b64 	%rd1633, {%r8019, %r8018};
	xor.b64  	%rd1634, %rd1632, %rd1633;
	xor.b64  	%rd1635, %rd1593, %rd1568;
	and.b64  	%rd1636, %rd1618, %rd1635;
	xor.b64  	%rd1637, %rd1636, %rd1568;
	add.s64 	%rd1638, %rd1543, %rd1290;
	ld.const.u64 	%rd1639, [k_sha512+352];
	add.s64 	%rd1640, %rd1638, %rd1639;
	add.s64 	%rd1641, %rd1640, %rd1637;
	add.s64 	%rd1642, %rd1641, %rd1634;
	add.s64 	%rd1643, %rd1642, %rd1554;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8020,%dummy}, %rd1629;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8021}, %rd1629;
	}
	shf.r.wrap.b32 	%r8022, %r8021, %r8020, 28;
	shf.r.wrap.b32 	%r8023, %r8020, %r8021, 28;
	mov.b64 	%rd1644, {%r8023, %r8022};
	shf.l.wrap.b32 	%r8024, %r8020, %r8021, 30;
	shf.l.wrap.b32 	%r8025, %r8021, %r8020, 30;
	mov.b64 	%rd1645, {%r8025, %r8024};
	xor.b64  	%rd1646, %rd1645, %rd1644;
	shf.l.wrap.b32 	%r8026, %r8020, %r8021, 25;
	shf.l.wrap.b32 	%r8027, %r8021, %r8020, 25;
	mov.b64 	%rd1647, {%r8027, %r8026};
	xor.b64  	%rd1648, %rd1646, %rd1647;
	xor.b64  	%rd1649, %rd1629, %rd1579;
	xor.b64  	%rd1650, %rd1629, %rd1604;
	and.b64  	%rd1651, %rd1650, %rd1649;
	xor.b64  	%rd1652, %rd1651, %rd1629;
	add.s64 	%rd1653, %rd1642, %rd1652;
	add.s64 	%rd1654, %rd1653, %rd1648;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8028,%dummy}, %rd1643;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8029}, %rd1643;
	}
	shf.r.wrap.b32 	%r8030, %r8029, %r8028, 14;
	shf.r.wrap.b32 	%r8031, %r8028, %r8029, 14;
	mov.b64 	%rd1655, {%r8031, %r8030};
	shf.r.wrap.b32 	%r8032, %r8029, %r8028, 18;
	shf.r.wrap.b32 	%r8033, %r8028, %r8029, 18;
	mov.b64 	%rd1656, {%r8033, %r8032};
	xor.b64  	%rd1657, %rd1656, %rd1655;
	shf.l.wrap.b32 	%r8034, %r8028, %r8029, 23;
	shf.l.wrap.b32 	%r8035, %r8029, %r8028, 23;
	mov.b64 	%rd1658, {%r8035, %r8034};
	xor.b64  	%rd1659, %rd1657, %rd1658;
	xor.b64  	%rd1660, %rd1618, %rd1593;
	and.b64  	%rd1661, %rd1643, %rd1660;
	xor.b64  	%rd1662, %rd1661, %rd1593;
	add.s64 	%rd1663, %rd1568, %rd1303;
	ld.const.u64 	%rd1664, [k_sha512+360];
	add.s64 	%rd1665, %rd1663, %rd1664;
	add.s64 	%rd1666, %rd1665, %rd1662;
	add.s64 	%rd1667, %rd1666, %rd1659;
	add.s64 	%rd1668, %rd1667, %rd1579;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8036,%dummy}, %rd1654;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8037}, %rd1654;
	}
	shf.r.wrap.b32 	%r8038, %r8037, %r8036, 28;
	shf.r.wrap.b32 	%r8039, %r8036, %r8037, 28;
	mov.b64 	%rd1669, {%r8039, %r8038};
	shf.l.wrap.b32 	%r8040, %r8036, %r8037, 30;
	shf.l.wrap.b32 	%r8041, %r8037, %r8036, 30;
	mov.b64 	%rd1670, {%r8041, %r8040};
	xor.b64  	%rd1671, %rd1670, %rd1669;
	shf.l.wrap.b32 	%r8042, %r8036, %r8037, 25;
	shf.l.wrap.b32 	%r8043, %r8037, %r8036, 25;
	mov.b64 	%rd1672, {%r8043, %r8042};
	xor.b64  	%rd1673, %rd1671, %rd1672;
	xor.b64  	%rd1674, %rd1654, %rd1604;
	xor.b64  	%rd1675, %rd1654, %rd1629;
	and.b64  	%rd1676, %rd1675, %rd1674;
	xor.b64  	%rd1677, %rd1676, %rd1654;
	add.s64 	%rd1678, %rd1667, %rd1677;
	add.s64 	%rd1679, %rd1678, %rd1673;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8044,%dummy}, %rd1668;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8045}, %rd1668;
	}
	shf.r.wrap.b32 	%r8046, %r8045, %r8044, 14;
	shf.r.wrap.b32 	%r8047, %r8044, %r8045, 14;
	mov.b64 	%rd1680, {%r8047, %r8046};
	shf.r.wrap.b32 	%r8048, %r8045, %r8044, 18;
	shf.r.wrap.b32 	%r8049, %r8044, %r8045, 18;
	mov.b64 	%rd1681, {%r8049, %r8048};
	xor.b64  	%rd1682, %rd1681, %rd1680;
	shf.l.wrap.b32 	%r8050, %r8044, %r8045, 23;
	shf.l.wrap.b32 	%r8051, %r8045, %r8044, 23;
	mov.b64 	%rd1683, {%r8051, %r8050};
	xor.b64  	%rd1684, %rd1682, %rd1683;
	xor.b64  	%rd1685, %rd1643, %rd1618;
	and.b64  	%rd1686, %rd1668, %rd1685;
	xor.b64  	%rd1687, %rd1686, %rd1618;
	add.s64 	%rd1688, %rd1593, %rd1316;
	ld.const.u64 	%rd1689, [k_sha512+368];
	add.s64 	%rd1690, %rd1688, %rd1689;
	add.s64 	%rd1691, %rd1690, %rd1687;
	add.s64 	%rd1692, %rd1691, %rd1684;
	add.s64 	%rd1693, %rd1692, %rd1604;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8052,%dummy}, %rd1679;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8053}, %rd1679;
	}
	shf.r.wrap.b32 	%r8054, %r8053, %r8052, 28;
	shf.r.wrap.b32 	%r8055, %r8052, %r8053, 28;
	mov.b64 	%rd1694, {%r8055, %r8054};
	shf.l.wrap.b32 	%r8056, %r8052, %r8053, 30;
	shf.l.wrap.b32 	%r8057, %r8053, %r8052, 30;
	mov.b64 	%rd1695, {%r8057, %r8056};
	xor.b64  	%rd1696, %rd1695, %rd1694;
	shf.l.wrap.b32 	%r8058, %r8052, %r8053, 25;
	shf.l.wrap.b32 	%r8059, %r8053, %r8052, 25;
	mov.b64 	%rd1697, {%r8059, %r8058};
	xor.b64  	%rd1698, %rd1696, %rd1697;
	xor.b64  	%rd1699, %rd1679, %rd1629;
	xor.b64  	%rd1700, %rd1679, %rd1654;
	and.b64  	%rd1701, %rd1700, %rd1699;
	xor.b64  	%rd1702, %rd1701, %rd1679;
	add.s64 	%rd1703, %rd1692, %rd1702;
	add.s64 	%rd1704, %rd1703, %rd1698;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8060,%dummy}, %rd1693;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8061}, %rd1693;
	}
	shf.r.wrap.b32 	%r8062, %r8061, %r8060, 14;
	shf.r.wrap.b32 	%r8063, %r8060, %r8061, 14;
	mov.b64 	%rd1705, {%r8063, %r8062};
	shf.r.wrap.b32 	%r8064, %r8061, %r8060, 18;
	shf.r.wrap.b32 	%r8065, %r8060, %r8061, 18;
	mov.b64 	%rd1706, {%r8065, %r8064};
	xor.b64  	%rd1707, %rd1706, %rd1705;
	shf.l.wrap.b32 	%r8066, %r8060, %r8061, 23;
	shf.l.wrap.b32 	%r8067, %r8061, %r8060, 23;
	mov.b64 	%rd1708, {%r8067, %r8066};
	xor.b64  	%rd1709, %rd1707, %rd1708;
	xor.b64  	%rd1710, %rd1668, %rd1643;
	and.b64  	%rd1711, %rd1693, %rd1710;
	xor.b64  	%rd1712, %rd1711, %rd1643;
	add.s64 	%rd1713, %rd1618, %rd1329;
	ld.const.u64 	%rd1714, [k_sha512+376];
	add.s64 	%rd1715, %rd1713, %rd1714;
	add.s64 	%rd1716, %rd1715, %rd1712;
	add.s64 	%rd1717, %rd1716, %rd1709;
	add.s64 	%rd1718, %rd1717, %rd1629;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8068,%dummy}, %rd1704;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8069}, %rd1704;
	}
	shf.r.wrap.b32 	%r8070, %r8069, %r8068, 28;
	shf.r.wrap.b32 	%r8071, %r8068, %r8069, 28;
	mov.b64 	%rd1719, {%r8071, %r8070};
	shf.l.wrap.b32 	%r8072, %r8068, %r8069, 30;
	shf.l.wrap.b32 	%r8073, %r8069, %r8068, 30;
	mov.b64 	%rd1720, {%r8073, %r8072};
	xor.b64  	%rd1721, %rd1720, %rd1719;
	shf.l.wrap.b32 	%r8074, %r8068, %r8069, 25;
	shf.l.wrap.b32 	%r8075, %r8069, %r8068, 25;
	mov.b64 	%rd1722, {%r8075, %r8074};
	xor.b64  	%rd1723, %rd1721, %rd1722;
	xor.b64  	%rd1724, %rd1704, %rd1654;
	xor.b64  	%rd1725, %rd1704, %rd1679;
	and.b64  	%rd1726, %rd1725, %rd1724;
	xor.b64  	%rd1727, %rd1726, %rd1704;
	add.s64 	%rd1728, %rd1717, %rd1727;
	add.s64 	%rd1729, %rd1728, %rd1723;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8076,%dummy}, %rd1316;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8077}, %rd1316;
	}
	shf.r.wrap.b32 	%r8078, %r8077, %r8076, 19;
	shf.r.wrap.b32 	%r8079, %r8076, %r8077, 19;
	mov.b64 	%rd1730, {%r8079, %r8078};
	shf.l.wrap.b32 	%r8080, %r8076, %r8077, 3;
	shf.l.wrap.b32 	%r8081, %r8077, %r8076, 3;
	mov.b64 	%rd1731, {%r8081, %r8080};
	shr.u64 	%rd1732, %rd1316, 6;
	xor.b64  	%rd1733, %rd1730, %rd1732;
	xor.b64  	%rd1734, %rd1733, %rd1731;
	shf.r.wrap.b32 	%r8082, %r7691, %r7690, 1;
	shf.r.wrap.b32 	%r8083, %r7690, %r7691, 1;
	mov.b64 	%rd1735, {%r8083, %r8082};
	shf.r.wrap.b32 	%r8084, %r7691, %r7690, 8;
	shf.r.wrap.b32 	%r8085, %r7690, %r7691, 8;
	mov.b64 	%rd1736, {%r8085, %r8084};
	shr.u64 	%rd1737, %rd1147, 7;
	xor.b64  	%rd1738, %rd1735, %rd1737;
	xor.b64  	%rd1739, %rd1738, %rd1736;
	add.s64 	%rd1740, %rd1251, %rd1134;
	add.s64 	%rd1741, %rd1740, %rd1734;
	add.s64 	%rd1742, %rd1741, %rd1739;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8086,%dummy}, %rd1329;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8087}, %rd1329;
	}
	shf.r.wrap.b32 	%r8088, %r8087, %r8086, 19;
	shf.r.wrap.b32 	%r8089, %r8086, %r8087, 19;
	mov.b64 	%rd1743, {%r8089, %r8088};
	shf.l.wrap.b32 	%r8090, %r8086, %r8087, 3;
	shf.l.wrap.b32 	%r8091, %r8087, %r8086, 3;
	mov.b64 	%rd1744, {%r8091, %r8090};
	shr.u64 	%rd1745, %rd1329, 6;
	xor.b64  	%rd1746, %rd1743, %rd1745;
	xor.b64  	%rd1747, %rd1746, %rd1744;
	shf.r.wrap.b32 	%r8092, %r7701, %r7700, 1;
	shf.r.wrap.b32 	%r8093, %r7700, %r7701, 1;
	mov.b64 	%rd1748, {%r8093, %r8092};
	shf.r.wrap.b32 	%r8094, %r7701, %r7700, 8;
	shf.r.wrap.b32 	%r8095, %r7700, %r7701, 8;
	mov.b64 	%rd1749, {%r8095, %r8094};
	shr.u64 	%rd1750, %rd1160, 7;
	xor.b64  	%rd1751, %rd1748, %rd1750;
	xor.b64  	%rd1752, %rd1751, %rd1749;
	add.s64 	%rd1753, %rd1264, %rd1147;
	add.s64 	%rd1754, %rd1753, %rd1747;
	add.s64 	%rd1755, %rd1754, %rd1752;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8096,%dummy}, %rd1742;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8097}, %rd1742;
	}
	shf.r.wrap.b32 	%r8098, %r8097, %r8096, 19;
	shf.r.wrap.b32 	%r8099, %r8096, %r8097, 19;
	mov.b64 	%rd1756, {%r8099, %r8098};
	shf.l.wrap.b32 	%r8100, %r8096, %r8097, 3;
	shf.l.wrap.b32 	%r8101, %r8097, %r8096, 3;
	mov.b64 	%rd1757, {%r8101, %r8100};
	shr.u64 	%rd1758, %rd1742, 6;
	xor.b64  	%rd1759, %rd1756, %rd1758;
	xor.b64  	%rd1760, %rd1759, %rd1757;
	shf.r.wrap.b32 	%r8102, %r7711, %r7710, 1;
	shf.r.wrap.b32 	%r8103, %r7710, %r7711, 1;
	mov.b64 	%rd1761, {%r8103, %r8102};
	shf.r.wrap.b32 	%r8104, %r7711, %r7710, 8;
	shf.r.wrap.b32 	%r8105, %r7710, %r7711, 8;
	mov.b64 	%rd1762, {%r8105, %r8104};
	shr.u64 	%rd1763, %rd1173, 7;
	xor.b64  	%rd1764, %rd1761, %rd1763;
	xor.b64  	%rd1765, %rd1764, %rd1762;
	add.s64 	%rd1766, %rd1277, %rd1160;
	add.s64 	%rd1767, %rd1766, %rd1760;
	add.s64 	%rd1768, %rd1767, %rd1765;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8106,%dummy}, %rd1755;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8107}, %rd1755;
	}
	shf.r.wrap.b32 	%r8108, %r8107, %r8106, 19;
	shf.r.wrap.b32 	%r8109, %r8106, %r8107, 19;
	mov.b64 	%rd1769, {%r8109, %r8108};
	shf.l.wrap.b32 	%r8110, %r8106, %r8107, 3;
	shf.l.wrap.b32 	%r8111, %r8107, %r8106, 3;
	mov.b64 	%rd1770, {%r8111, %r8110};
	shr.u64 	%rd1771, %rd1755, 6;
	xor.b64  	%rd1772, %rd1769, %rd1771;
	xor.b64  	%rd1773, %rd1772, %rd1770;
	shf.r.wrap.b32 	%r8112, %r7721, %r7720, 1;
	shf.r.wrap.b32 	%r8113, %r7720, %r7721, 1;
	mov.b64 	%rd1774, {%r8113, %r8112};
	shf.r.wrap.b32 	%r8114, %r7721, %r7720, 8;
	shf.r.wrap.b32 	%r8115, %r7720, %r7721, 8;
	mov.b64 	%rd1775, {%r8115, %r8114};
	shr.u64 	%rd1776, %rd1186, 7;
	xor.b64  	%rd1777, %rd1774, %rd1776;
	xor.b64  	%rd1778, %rd1777, %rd1775;
	add.s64 	%rd1779, %rd1290, %rd1173;
	add.s64 	%rd1780, %rd1779, %rd1773;
	add.s64 	%rd1781, %rd1780, %rd1778;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8116,%dummy}, %rd1768;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8117}, %rd1768;
	}
	shf.r.wrap.b32 	%r8118, %r8117, %r8116, 19;
	shf.r.wrap.b32 	%r8119, %r8116, %r8117, 19;
	mov.b64 	%rd1782, {%r8119, %r8118};
	shf.l.wrap.b32 	%r8120, %r8116, %r8117, 3;
	shf.l.wrap.b32 	%r8121, %r8117, %r8116, 3;
	mov.b64 	%rd1783, {%r8121, %r8120};
	shr.u64 	%rd1784, %rd1768, 6;
	xor.b64  	%rd1785, %rd1782, %rd1784;
	xor.b64  	%rd1786, %rd1785, %rd1783;
	shf.r.wrap.b32 	%r8122, %r7731, %r7730, 1;
	shf.r.wrap.b32 	%r8123, %r7730, %r7731, 1;
	mov.b64 	%rd1787, {%r8123, %r8122};
	shf.r.wrap.b32 	%r8124, %r7731, %r7730, 8;
	shf.r.wrap.b32 	%r8125, %r7730, %r7731, 8;
	mov.b64 	%rd1788, {%r8125, %r8124};
	shr.u64 	%rd1789, %rd1199, 7;
	xor.b64  	%rd1790, %rd1787, %rd1789;
	xor.b64  	%rd1791, %rd1790, %rd1788;
	add.s64 	%rd1792, %rd1303, %rd1186;
	add.s64 	%rd1793, %rd1792, %rd1786;
	add.s64 	%rd1794, %rd1793, %rd1791;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8126,%dummy}, %rd1781;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8127}, %rd1781;
	}
	shf.r.wrap.b32 	%r8128, %r8127, %r8126, 19;
	shf.r.wrap.b32 	%r8129, %r8126, %r8127, 19;
	mov.b64 	%rd1795, {%r8129, %r8128};
	shf.l.wrap.b32 	%r8130, %r8126, %r8127, 3;
	shf.l.wrap.b32 	%r8131, %r8127, %r8126, 3;
	mov.b64 	%rd1796, {%r8131, %r8130};
	shr.u64 	%rd1797, %rd1781, 6;
	xor.b64  	%rd1798, %rd1795, %rd1797;
	xor.b64  	%rd1799, %rd1798, %rd1796;
	shf.r.wrap.b32 	%r8132, %r7741, %r7740, 1;
	shf.r.wrap.b32 	%r8133, %r7740, %r7741, 1;
	mov.b64 	%rd1800, {%r8133, %r8132};
	shf.r.wrap.b32 	%r8134, %r7741, %r7740, 8;
	shf.r.wrap.b32 	%r8135, %r7740, %r7741, 8;
	mov.b64 	%rd1801, {%r8135, %r8134};
	shr.u64 	%rd1802, %rd1212, 7;
	xor.b64  	%rd1803, %rd1800, %rd1802;
	xor.b64  	%rd1804, %rd1803, %rd1801;
	add.s64 	%rd1805, %rd1316, %rd1199;
	add.s64 	%rd1806, %rd1805, %rd1799;
	add.s64 	%rd1807, %rd1806, %rd1804;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8136,%dummy}, %rd1794;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8137}, %rd1794;
	}
	shf.r.wrap.b32 	%r8138, %r8137, %r8136, 19;
	shf.r.wrap.b32 	%r8139, %r8136, %r8137, 19;
	mov.b64 	%rd1808, {%r8139, %r8138};
	shf.l.wrap.b32 	%r8140, %r8136, %r8137, 3;
	shf.l.wrap.b32 	%r8141, %r8137, %r8136, 3;
	mov.b64 	%rd1809, {%r8141, %r8140};
	shr.u64 	%rd1810, %rd1794, 6;
	xor.b64  	%rd1811, %rd1808, %rd1810;
	xor.b64  	%rd1812, %rd1811, %rd1809;
	shf.r.wrap.b32 	%r8142, %r7751, %r7750, 1;
	shf.r.wrap.b32 	%r8143, %r7750, %r7751, 1;
	mov.b64 	%rd1813, {%r8143, %r8142};
	shf.r.wrap.b32 	%r8144, %r7751, %r7750, 8;
	shf.r.wrap.b32 	%r8145, %r7750, %r7751, 8;
	mov.b64 	%rd1814, {%r8145, %r8144};
	shr.u64 	%rd1815, %rd1225, 7;
	xor.b64  	%rd1816, %rd1813, %rd1815;
	xor.b64  	%rd1817, %rd1816, %rd1814;
	add.s64 	%rd1818, %rd1329, %rd1212;
	add.s64 	%rd1819, %rd1818, %rd1812;
	add.s64 	%rd1820, %rd1819, %rd1817;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8146,%dummy}, %rd1807;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8147}, %rd1807;
	}
	shf.r.wrap.b32 	%r8148, %r8147, %r8146, 19;
	shf.r.wrap.b32 	%r8149, %r8146, %r8147, 19;
	mov.b64 	%rd1821, {%r8149, %r8148};
	shf.l.wrap.b32 	%r8150, %r8146, %r8147, 3;
	shf.l.wrap.b32 	%r8151, %r8147, %r8146, 3;
	mov.b64 	%rd1822, {%r8151, %r8150};
	shr.u64 	%rd1823, %rd1807, 6;
	xor.b64  	%rd1824, %rd1821, %rd1823;
	xor.b64  	%rd1825, %rd1824, %rd1822;
	shf.r.wrap.b32 	%r8152, %r7761, %r7760, 1;
	shf.r.wrap.b32 	%r8153, %r7760, %r7761, 1;
	mov.b64 	%rd1826, {%r8153, %r8152};
	shf.r.wrap.b32 	%r8154, %r7761, %r7760, 8;
	shf.r.wrap.b32 	%r8155, %r7760, %r7761, 8;
	mov.b64 	%rd1827, {%r8155, %r8154};
	shr.u64 	%rd1828, %rd1238, 7;
	xor.b64  	%rd1829, %rd1826, %rd1828;
	xor.b64  	%rd1830, %rd1829, %rd1827;
	add.s64 	%rd1831, %rd1742, %rd1225;
	add.s64 	%rd1832, %rd1831, %rd1825;
	add.s64 	%rd1833, %rd1832, %rd1830;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8156,%dummy}, %rd1820;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8157}, %rd1820;
	}
	shf.r.wrap.b32 	%r8158, %r8157, %r8156, 19;
	shf.r.wrap.b32 	%r8159, %r8156, %r8157, 19;
	mov.b64 	%rd1834, {%r8159, %r8158};
	shf.l.wrap.b32 	%r8160, %r8156, %r8157, 3;
	shf.l.wrap.b32 	%r8161, %r8157, %r8156, 3;
	mov.b64 	%rd1835, {%r8161, %r8160};
	shr.u64 	%rd1836, %rd1820, 6;
	xor.b64  	%rd1837, %rd1834, %rd1836;
	xor.b64  	%rd1838, %rd1837, %rd1835;
	shf.r.wrap.b32 	%r8162, %r7771, %r7770, 1;
	shf.r.wrap.b32 	%r8163, %r7770, %r7771, 1;
	mov.b64 	%rd1839, {%r8163, %r8162};
	shf.r.wrap.b32 	%r8164, %r7771, %r7770, 8;
	shf.r.wrap.b32 	%r8165, %r7770, %r7771, 8;
	mov.b64 	%rd1840, {%r8165, %r8164};
	shr.u64 	%rd1841, %rd1251, 7;
	xor.b64  	%rd1842, %rd1839, %rd1841;
	xor.b64  	%rd1843, %rd1842, %rd1840;
	add.s64 	%rd1844, %rd1755, %rd1238;
	add.s64 	%rd1845, %rd1844, %rd1838;
	add.s64 	%rd1846, %rd1845, %rd1843;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8166,%dummy}, %rd1833;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8167}, %rd1833;
	}
	shf.r.wrap.b32 	%r8168, %r8167, %r8166, 19;
	shf.r.wrap.b32 	%r8169, %r8166, %r8167, 19;
	mov.b64 	%rd1847, {%r8169, %r8168};
	shf.l.wrap.b32 	%r8170, %r8166, %r8167, 3;
	shf.l.wrap.b32 	%r8171, %r8167, %r8166, 3;
	mov.b64 	%rd1848, {%r8171, %r8170};
	shr.u64 	%rd1849, %rd1833, 6;
	xor.b64  	%rd1850, %rd1847, %rd1849;
	xor.b64  	%rd1851, %rd1850, %rd1848;
	shf.r.wrap.b32 	%r8172, %r7781, %r7780, 1;
	shf.r.wrap.b32 	%r8173, %r7780, %r7781, 1;
	mov.b64 	%rd1852, {%r8173, %r8172};
	shf.r.wrap.b32 	%r8174, %r7781, %r7780, 8;
	shf.r.wrap.b32 	%r8175, %r7780, %r7781, 8;
	mov.b64 	%rd1853, {%r8175, %r8174};
	shr.u64 	%rd1854, %rd1264, 7;
	xor.b64  	%rd1855, %rd1852, %rd1854;
	xor.b64  	%rd1856, %rd1855, %rd1853;
	add.s64 	%rd1857, %rd1768, %rd1251;
	add.s64 	%rd1858, %rd1857, %rd1851;
	add.s64 	%rd1859, %rd1858, %rd1856;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8176,%dummy}, %rd1846;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8177}, %rd1846;
	}
	shf.r.wrap.b32 	%r8178, %r8177, %r8176, 19;
	shf.r.wrap.b32 	%r8179, %r8176, %r8177, 19;
	mov.b64 	%rd1860, {%r8179, %r8178};
	shf.l.wrap.b32 	%r8180, %r8176, %r8177, 3;
	shf.l.wrap.b32 	%r8181, %r8177, %r8176, 3;
	mov.b64 	%rd1861, {%r8181, %r8180};
	shr.u64 	%rd1862, %rd1846, 6;
	xor.b64  	%rd1863, %rd1860, %rd1862;
	xor.b64  	%rd1864, %rd1863, %rd1861;
	shf.r.wrap.b32 	%r8182, %r7791, %r7790, 1;
	shf.r.wrap.b32 	%r8183, %r7790, %r7791, 1;
	mov.b64 	%rd1865, {%r8183, %r8182};
	shf.r.wrap.b32 	%r8184, %r7791, %r7790, 8;
	shf.r.wrap.b32 	%r8185, %r7790, %r7791, 8;
	mov.b64 	%rd1866, {%r8185, %r8184};
	shr.u64 	%rd1867, %rd1277, 7;
	xor.b64  	%rd1868, %rd1865, %rd1867;
	xor.b64  	%rd1869, %rd1868, %rd1866;
	add.s64 	%rd1870, %rd1781, %rd1264;
	add.s64 	%rd1871, %rd1870, %rd1864;
	add.s64 	%rd1872, %rd1871, %rd1869;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8186,%dummy}, %rd1859;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8187}, %rd1859;
	}
	shf.r.wrap.b32 	%r8188, %r8187, %r8186, 19;
	shf.r.wrap.b32 	%r8189, %r8186, %r8187, 19;
	mov.b64 	%rd1873, {%r8189, %r8188};
	shf.l.wrap.b32 	%r8190, %r8186, %r8187, 3;
	shf.l.wrap.b32 	%r8191, %r8187, %r8186, 3;
	mov.b64 	%rd1874, {%r8191, %r8190};
	shr.u64 	%rd1875, %rd1859, 6;
	xor.b64  	%rd1876, %rd1873, %rd1875;
	xor.b64  	%rd1877, %rd1876, %rd1874;
	shf.r.wrap.b32 	%r8192, %r7801, %r7800, 1;
	shf.r.wrap.b32 	%r8193, %r7800, %r7801, 1;
	mov.b64 	%rd1878, {%r8193, %r8192};
	shf.r.wrap.b32 	%r8194, %r7801, %r7800, 8;
	shf.r.wrap.b32 	%r8195, %r7800, %r7801, 8;
	mov.b64 	%rd1879, {%r8195, %r8194};
	shr.u64 	%rd1880, %rd1290, 7;
	xor.b64  	%rd1881, %rd1878, %rd1880;
	xor.b64  	%rd1882, %rd1881, %rd1879;
	add.s64 	%rd1883, %rd1794, %rd1277;
	add.s64 	%rd1884, %rd1883, %rd1877;
	add.s64 	%rd1885, %rd1884, %rd1882;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8196,%dummy}, %rd1872;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8197}, %rd1872;
	}
	shf.r.wrap.b32 	%r8198, %r8197, %r8196, 19;
	shf.r.wrap.b32 	%r8199, %r8196, %r8197, 19;
	mov.b64 	%rd1886, {%r8199, %r8198};
	shf.l.wrap.b32 	%r8200, %r8196, %r8197, 3;
	shf.l.wrap.b32 	%r8201, %r8197, %r8196, 3;
	mov.b64 	%rd1887, {%r8201, %r8200};
	shr.u64 	%rd1888, %rd1872, 6;
	xor.b64  	%rd1889, %rd1886, %rd1888;
	xor.b64  	%rd1890, %rd1889, %rd1887;
	shf.r.wrap.b32 	%r8202, %r7811, %r7810, 1;
	shf.r.wrap.b32 	%r8203, %r7810, %r7811, 1;
	mov.b64 	%rd1891, {%r8203, %r8202};
	shf.r.wrap.b32 	%r8204, %r7811, %r7810, 8;
	shf.r.wrap.b32 	%r8205, %r7810, %r7811, 8;
	mov.b64 	%rd1892, {%r8205, %r8204};
	shr.u64 	%rd1893, %rd1303, 7;
	xor.b64  	%rd1894, %rd1891, %rd1893;
	xor.b64  	%rd1895, %rd1894, %rd1892;
	add.s64 	%rd1896, %rd1807, %rd1290;
	add.s64 	%rd1897, %rd1896, %rd1890;
	add.s64 	%rd1898, %rd1897, %rd1895;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8206,%dummy}, %rd1885;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8207}, %rd1885;
	}
	shf.r.wrap.b32 	%r8208, %r8207, %r8206, 19;
	shf.r.wrap.b32 	%r8209, %r8206, %r8207, 19;
	mov.b64 	%rd1899, {%r8209, %r8208};
	shf.l.wrap.b32 	%r8210, %r8206, %r8207, 3;
	shf.l.wrap.b32 	%r8211, %r8207, %r8206, 3;
	mov.b64 	%rd1900, {%r8211, %r8210};
	shr.u64 	%rd1901, %rd1885, 6;
	xor.b64  	%rd1902, %rd1899, %rd1901;
	xor.b64  	%rd1903, %rd1902, %rd1900;
	shf.r.wrap.b32 	%r8212, %r8077, %r8076, 1;
	shf.r.wrap.b32 	%r8213, %r8076, %r8077, 1;
	mov.b64 	%rd1904, {%r8213, %r8212};
	shf.r.wrap.b32 	%r8214, %r8077, %r8076, 8;
	shf.r.wrap.b32 	%r8215, %r8076, %r8077, 8;
	mov.b64 	%rd1905, {%r8215, %r8214};
	shr.u64 	%rd1906, %rd1316, 7;
	xor.b64  	%rd1907, %rd1904, %rd1906;
	xor.b64  	%rd1908, %rd1907, %rd1905;
	add.s64 	%rd1909, %rd1820, %rd1303;
	add.s64 	%rd1910, %rd1909, %rd1903;
	add.s64 	%rd1911, %rd1910, %rd1908;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8216,%dummy}, %rd1898;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8217}, %rd1898;
	}
	shf.r.wrap.b32 	%r8218, %r8217, %r8216, 19;
	shf.r.wrap.b32 	%r8219, %r8216, %r8217, 19;
	mov.b64 	%rd1912, {%r8219, %r8218};
	shf.l.wrap.b32 	%r8220, %r8216, %r8217, 3;
	shf.l.wrap.b32 	%r8221, %r8217, %r8216, 3;
	mov.b64 	%rd1913, {%r8221, %r8220};
	shr.u64 	%rd1914, %rd1898, 6;
	xor.b64  	%rd1915, %rd1912, %rd1914;
	xor.b64  	%rd1916, %rd1915, %rd1913;
	shf.r.wrap.b32 	%r8222, %r8087, %r8086, 1;
	shf.r.wrap.b32 	%r8223, %r8086, %r8087, 1;
	mov.b64 	%rd1917, {%r8223, %r8222};
	shf.r.wrap.b32 	%r8224, %r8087, %r8086, 8;
	shf.r.wrap.b32 	%r8225, %r8086, %r8087, 8;
	mov.b64 	%rd1918, {%r8225, %r8224};
	shr.u64 	%rd1919, %rd1329, 7;
	xor.b64  	%rd1920, %rd1917, %rd1919;
	xor.b64  	%rd1921, %rd1920, %rd1918;
	add.s64 	%rd1922, %rd1833, %rd1316;
	add.s64 	%rd1923, %rd1922, %rd1916;
	add.s64 	%rd1924, %rd1923, %rd1921;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8226,%dummy}, %rd1911;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8227}, %rd1911;
	}
	shf.r.wrap.b32 	%r8228, %r8227, %r8226, 19;
	shf.r.wrap.b32 	%r8229, %r8226, %r8227, 19;
	mov.b64 	%rd1925, {%r8229, %r8228};
	shf.l.wrap.b32 	%r8230, %r8226, %r8227, 3;
	shf.l.wrap.b32 	%r8231, %r8227, %r8226, 3;
	mov.b64 	%rd1926, {%r8231, %r8230};
	shr.u64 	%rd1927, %rd1911, 6;
	xor.b64  	%rd1928, %rd1925, %rd1927;
	xor.b64  	%rd1929, %rd1928, %rd1926;
	shf.r.wrap.b32 	%r8232, %r8097, %r8096, 1;
	shf.r.wrap.b32 	%r8233, %r8096, %r8097, 1;
	mov.b64 	%rd1930, {%r8233, %r8232};
	shf.r.wrap.b32 	%r8234, %r8097, %r8096, 8;
	shf.r.wrap.b32 	%r8235, %r8096, %r8097, 8;
	mov.b64 	%rd1931, {%r8235, %r8234};
	shr.u64 	%rd1932, %rd1742, 7;
	xor.b64  	%rd1933, %rd1930, %rd1932;
	xor.b64  	%rd1934, %rd1933, %rd1931;
	add.s64 	%rd1935, %rd1846, %rd1329;
	add.s64 	%rd1936, %rd1935, %rd1929;
	add.s64 	%rd1937, %rd1936, %rd1934;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8236,%dummy}, %rd1718;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8237}, %rd1718;
	}
	shf.r.wrap.b32 	%r8238, %r8237, %r8236, 14;
	shf.r.wrap.b32 	%r8239, %r8236, %r8237, 14;
	mov.b64 	%rd1938, {%r8239, %r8238};
	shf.r.wrap.b32 	%r8240, %r8237, %r8236, 18;
	shf.r.wrap.b32 	%r8241, %r8236, %r8237, 18;
	mov.b64 	%rd1939, {%r8241, %r8240};
	xor.b64  	%rd1940, %rd1939, %rd1938;
	shf.l.wrap.b32 	%r8242, %r8236, %r8237, 23;
	shf.l.wrap.b32 	%r8243, %r8237, %r8236, 23;
	mov.b64 	%rd1941, {%r8243, %r8242};
	xor.b64  	%rd1942, %rd1940, %rd1941;
	xor.b64  	%rd1943, %rd1693, %rd1668;
	and.b64  	%rd1944, %rd1943, %rd1718;
	xor.b64  	%rd1945, %rd1944, %rd1668;
	add.s64 	%rd1946, %rd1945, %rd1643;
	add.s64 	%rd1947, %rd1946, %rd1742;
	ld.const.u64 	%rd1948, [k_sha512+384];
	add.s64 	%rd1949, %rd1947, %rd1948;
	add.s64 	%rd1950, %rd1949, %rd1942;
	add.s64 	%rd1951, %rd1950, %rd1654;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8244,%dummy}, %rd1729;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8245}, %rd1729;
	}
	shf.r.wrap.b32 	%r8246, %r8245, %r8244, 28;
	shf.r.wrap.b32 	%r8247, %r8244, %r8245, 28;
	mov.b64 	%rd1952, {%r8247, %r8246};
	shf.l.wrap.b32 	%r8248, %r8244, %r8245, 30;
	shf.l.wrap.b32 	%r8249, %r8245, %r8244, 30;
	mov.b64 	%rd1953, {%r8249, %r8248};
	xor.b64  	%rd1954, %rd1953, %rd1952;
	shf.l.wrap.b32 	%r8250, %r8244, %r8245, 25;
	shf.l.wrap.b32 	%r8251, %r8245, %r8244, 25;
	mov.b64 	%rd1955, {%r8251, %r8250};
	xor.b64  	%rd1956, %rd1954, %rd1955;
	xor.b64  	%rd1957, %rd1729, %rd1679;
	xor.b64  	%rd1958, %rd1729, %rd1704;
	and.b64  	%rd1959, %rd1958, %rd1957;
	xor.b64  	%rd1960, %rd1959, %rd1729;
	add.s64 	%rd1961, %rd1950, %rd1960;
	add.s64 	%rd1962, %rd1961, %rd1956;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8252,%dummy}, %rd1951;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8253}, %rd1951;
	}
	shf.r.wrap.b32 	%r8254, %r8253, %r8252, 14;
	shf.r.wrap.b32 	%r8255, %r8252, %r8253, 14;
	mov.b64 	%rd1963, {%r8255, %r8254};
	shf.r.wrap.b32 	%r8256, %r8253, %r8252, 18;
	shf.r.wrap.b32 	%r8257, %r8252, %r8253, 18;
	mov.b64 	%rd1964, {%r8257, %r8256};
	xor.b64  	%rd1965, %rd1964, %rd1963;
	shf.l.wrap.b32 	%r8258, %r8252, %r8253, 23;
	shf.l.wrap.b32 	%r8259, %r8253, %r8252, 23;
	mov.b64 	%rd1966, {%r8259, %r8258};
	xor.b64  	%rd1967, %rd1965, %rd1966;
	xor.b64  	%rd1968, %rd1718, %rd1693;
	and.b64  	%rd1969, %rd1951, %rd1968;
	xor.b64  	%rd1970, %rd1969, %rd1693;
	add.s64 	%rd1971, %rd1755, %rd1668;
	ld.const.u64 	%rd1972, [k_sha512+392];
	add.s64 	%rd1973, %rd1971, %rd1972;
	add.s64 	%rd1974, %rd1973, %rd1970;
	add.s64 	%rd1975, %rd1974, %rd1967;
	add.s64 	%rd1976, %rd1975, %rd1679;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8260,%dummy}, %rd1962;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8261}, %rd1962;
	}
	shf.r.wrap.b32 	%r8262, %r8261, %r8260, 28;
	shf.r.wrap.b32 	%r8263, %r8260, %r8261, 28;
	mov.b64 	%rd1977, {%r8263, %r8262};
	shf.l.wrap.b32 	%r8264, %r8260, %r8261, 30;
	shf.l.wrap.b32 	%r8265, %r8261, %r8260, 30;
	mov.b64 	%rd1978, {%r8265, %r8264};
	xor.b64  	%rd1979, %rd1978, %rd1977;
	shf.l.wrap.b32 	%r8266, %r8260, %r8261, 25;
	shf.l.wrap.b32 	%r8267, %r8261, %r8260, 25;
	mov.b64 	%rd1980, {%r8267, %r8266};
	xor.b64  	%rd1981, %rd1979, %rd1980;
	xor.b64  	%rd1982, %rd1962, %rd1704;
	xor.b64  	%rd1983, %rd1962, %rd1729;
	and.b64  	%rd1984, %rd1983, %rd1982;
	xor.b64  	%rd1985, %rd1984, %rd1962;
	add.s64 	%rd1986, %rd1975, %rd1985;
	add.s64 	%rd1987, %rd1986, %rd1981;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8268,%dummy}, %rd1976;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8269}, %rd1976;
	}
	shf.r.wrap.b32 	%r8270, %r8269, %r8268, 14;
	shf.r.wrap.b32 	%r8271, %r8268, %r8269, 14;
	mov.b64 	%rd1988, {%r8271, %r8270};
	shf.r.wrap.b32 	%r8272, %r8269, %r8268, 18;
	shf.r.wrap.b32 	%r8273, %r8268, %r8269, 18;
	mov.b64 	%rd1989, {%r8273, %r8272};
	xor.b64  	%rd1990, %rd1989, %rd1988;
	shf.l.wrap.b32 	%r8274, %r8268, %r8269, 23;
	shf.l.wrap.b32 	%r8275, %r8269, %r8268, 23;
	mov.b64 	%rd1991, {%r8275, %r8274};
	xor.b64  	%rd1992, %rd1990, %rd1991;
	xor.b64  	%rd1993, %rd1951, %rd1718;
	and.b64  	%rd1994, %rd1976, %rd1993;
	xor.b64  	%rd1995, %rd1994, %rd1718;
	add.s64 	%rd1996, %rd1768, %rd1693;
	ld.const.u64 	%rd1997, [k_sha512+400];
	add.s64 	%rd1998, %rd1996, %rd1997;
	add.s64 	%rd1999, %rd1998, %rd1995;
	add.s64 	%rd2000, %rd1999, %rd1992;
	add.s64 	%rd2001, %rd2000, %rd1704;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8276,%dummy}, %rd1987;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8277}, %rd1987;
	}
	shf.r.wrap.b32 	%r8278, %r8277, %r8276, 28;
	shf.r.wrap.b32 	%r8279, %r8276, %r8277, 28;
	mov.b64 	%rd2002, {%r8279, %r8278};
	shf.l.wrap.b32 	%r8280, %r8276, %r8277, 30;
	shf.l.wrap.b32 	%r8281, %r8277, %r8276, 30;
	mov.b64 	%rd2003, {%r8281, %r8280};
	xor.b64  	%rd2004, %rd2003, %rd2002;
	shf.l.wrap.b32 	%r8282, %r8276, %r8277, 25;
	shf.l.wrap.b32 	%r8283, %r8277, %r8276, 25;
	mov.b64 	%rd2005, {%r8283, %r8282};
	xor.b64  	%rd2006, %rd2004, %rd2005;
	xor.b64  	%rd2007, %rd1987, %rd1729;
	xor.b64  	%rd2008, %rd1987, %rd1962;
	and.b64  	%rd2009, %rd2008, %rd2007;
	xor.b64  	%rd2010, %rd2009, %rd1987;
	add.s64 	%rd2011, %rd2000, %rd2010;
	add.s64 	%rd2012, %rd2011, %rd2006;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8284,%dummy}, %rd2001;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8285}, %rd2001;
	}
	shf.r.wrap.b32 	%r8286, %r8285, %r8284, 14;
	shf.r.wrap.b32 	%r8287, %r8284, %r8285, 14;
	mov.b64 	%rd2013, {%r8287, %r8286};
	shf.r.wrap.b32 	%r8288, %r8285, %r8284, 18;
	shf.r.wrap.b32 	%r8289, %r8284, %r8285, 18;
	mov.b64 	%rd2014, {%r8289, %r8288};
	xor.b64  	%rd2015, %rd2014, %rd2013;
	shf.l.wrap.b32 	%r8290, %r8284, %r8285, 23;
	shf.l.wrap.b32 	%r8291, %r8285, %r8284, 23;
	mov.b64 	%rd2016, {%r8291, %r8290};
	xor.b64  	%rd2017, %rd2015, %rd2016;
	xor.b64  	%rd2018, %rd1976, %rd1951;
	and.b64  	%rd2019, %rd2001, %rd2018;
	xor.b64  	%rd2020, %rd2019, %rd1951;
	add.s64 	%rd2021, %rd1781, %rd1718;
	ld.const.u64 	%rd2022, [k_sha512+408];
	add.s64 	%rd2023, %rd2021, %rd2022;
	add.s64 	%rd2024, %rd2023, %rd2020;
	add.s64 	%rd2025, %rd2024, %rd2017;
	add.s64 	%rd2026, %rd2025, %rd1729;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8292,%dummy}, %rd2012;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8293}, %rd2012;
	}
	shf.r.wrap.b32 	%r8294, %r8293, %r8292, 28;
	shf.r.wrap.b32 	%r8295, %r8292, %r8293, 28;
	mov.b64 	%rd2027, {%r8295, %r8294};
	shf.l.wrap.b32 	%r8296, %r8292, %r8293, 30;
	shf.l.wrap.b32 	%r8297, %r8293, %r8292, 30;
	mov.b64 	%rd2028, {%r8297, %r8296};
	xor.b64  	%rd2029, %rd2028, %rd2027;
	shf.l.wrap.b32 	%r8298, %r8292, %r8293, 25;
	shf.l.wrap.b32 	%r8299, %r8293, %r8292, 25;
	mov.b64 	%rd2030, {%r8299, %r8298};
	xor.b64  	%rd2031, %rd2029, %rd2030;
	xor.b64  	%rd2032, %rd2012, %rd1962;
	xor.b64  	%rd2033, %rd2012, %rd1987;
	and.b64  	%rd2034, %rd2033, %rd2032;
	xor.b64  	%rd2035, %rd2034, %rd2012;
	add.s64 	%rd2036, %rd2025, %rd2035;
	add.s64 	%rd2037, %rd2036, %rd2031;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8300,%dummy}, %rd2026;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8301}, %rd2026;
	}
	shf.r.wrap.b32 	%r8302, %r8301, %r8300, 14;
	shf.r.wrap.b32 	%r8303, %r8300, %r8301, 14;
	mov.b64 	%rd2038, {%r8303, %r8302};
	shf.r.wrap.b32 	%r8304, %r8301, %r8300, 18;
	shf.r.wrap.b32 	%r8305, %r8300, %r8301, 18;
	mov.b64 	%rd2039, {%r8305, %r8304};
	xor.b64  	%rd2040, %rd2039, %rd2038;
	shf.l.wrap.b32 	%r8306, %r8300, %r8301, 23;
	shf.l.wrap.b32 	%r8307, %r8301, %r8300, 23;
	mov.b64 	%rd2041, {%r8307, %r8306};
	xor.b64  	%rd2042, %rd2040, %rd2041;
	xor.b64  	%rd2043, %rd2001, %rd1976;
	and.b64  	%rd2044, %rd2026, %rd2043;
	xor.b64  	%rd2045, %rd2044, %rd1976;
	add.s64 	%rd2046, %rd1951, %rd1794;
	ld.const.u64 	%rd2047, [k_sha512+416];
	add.s64 	%rd2048, %rd2046, %rd2047;
	add.s64 	%rd2049, %rd2048, %rd2045;
	add.s64 	%rd2050, %rd2049, %rd2042;
	add.s64 	%rd2051, %rd2050, %rd1962;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8308,%dummy}, %rd2037;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8309}, %rd2037;
	}
	shf.r.wrap.b32 	%r8310, %r8309, %r8308, 28;
	shf.r.wrap.b32 	%r8311, %r8308, %r8309, 28;
	mov.b64 	%rd2052, {%r8311, %r8310};
	shf.l.wrap.b32 	%r8312, %r8308, %r8309, 30;
	shf.l.wrap.b32 	%r8313, %r8309, %r8308, 30;
	mov.b64 	%rd2053, {%r8313, %r8312};
	xor.b64  	%rd2054, %rd2053, %rd2052;
	shf.l.wrap.b32 	%r8314, %r8308, %r8309, 25;
	shf.l.wrap.b32 	%r8315, %r8309, %r8308, 25;
	mov.b64 	%rd2055, {%r8315, %r8314};
	xor.b64  	%rd2056, %rd2054, %rd2055;
	xor.b64  	%rd2057, %rd2037, %rd1987;
	xor.b64  	%rd2058, %rd2037, %rd2012;
	and.b64  	%rd2059, %rd2058, %rd2057;
	xor.b64  	%rd2060, %rd2059, %rd2037;
	add.s64 	%rd2061, %rd2050, %rd2060;
	add.s64 	%rd2062, %rd2061, %rd2056;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8316,%dummy}, %rd2051;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8317}, %rd2051;
	}
	shf.r.wrap.b32 	%r8318, %r8317, %r8316, 14;
	shf.r.wrap.b32 	%r8319, %r8316, %r8317, 14;
	mov.b64 	%rd2063, {%r8319, %r8318};
	shf.r.wrap.b32 	%r8320, %r8317, %r8316, 18;
	shf.r.wrap.b32 	%r8321, %r8316, %r8317, 18;
	mov.b64 	%rd2064, {%r8321, %r8320};
	xor.b64  	%rd2065, %rd2064, %rd2063;
	shf.l.wrap.b32 	%r8322, %r8316, %r8317, 23;
	shf.l.wrap.b32 	%r8323, %r8317, %r8316, 23;
	mov.b64 	%rd2066, {%r8323, %r8322};
	xor.b64  	%rd2067, %rd2065, %rd2066;
	xor.b64  	%rd2068, %rd2026, %rd2001;
	and.b64  	%rd2069, %rd2051, %rd2068;
	xor.b64  	%rd2070, %rd2069, %rd2001;
	add.s64 	%rd2071, %rd1976, %rd1807;
	ld.const.u64 	%rd2072, [k_sha512+424];
	add.s64 	%rd2073, %rd2071, %rd2072;
	add.s64 	%rd2074, %rd2073, %rd2070;
	add.s64 	%rd2075, %rd2074, %rd2067;
	add.s64 	%rd2076, %rd2075, %rd1987;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8324,%dummy}, %rd2062;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8325}, %rd2062;
	}
	shf.r.wrap.b32 	%r8326, %r8325, %r8324, 28;
	shf.r.wrap.b32 	%r8327, %r8324, %r8325, 28;
	mov.b64 	%rd2077, {%r8327, %r8326};
	shf.l.wrap.b32 	%r8328, %r8324, %r8325, 30;
	shf.l.wrap.b32 	%r8329, %r8325, %r8324, 30;
	mov.b64 	%rd2078, {%r8329, %r8328};
	xor.b64  	%rd2079, %rd2078, %rd2077;
	shf.l.wrap.b32 	%r8330, %r8324, %r8325, 25;
	shf.l.wrap.b32 	%r8331, %r8325, %r8324, 25;
	mov.b64 	%rd2080, {%r8331, %r8330};
	xor.b64  	%rd2081, %rd2079, %rd2080;
	xor.b64  	%rd2082, %rd2062, %rd2012;
	xor.b64  	%rd2083, %rd2062, %rd2037;
	and.b64  	%rd2084, %rd2083, %rd2082;
	xor.b64  	%rd2085, %rd2084, %rd2062;
	add.s64 	%rd2086, %rd2075, %rd2085;
	add.s64 	%rd2087, %rd2086, %rd2081;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8332,%dummy}, %rd2076;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8333}, %rd2076;
	}
	shf.r.wrap.b32 	%r8334, %r8333, %r8332, 14;
	shf.r.wrap.b32 	%r8335, %r8332, %r8333, 14;
	mov.b64 	%rd2088, {%r8335, %r8334};
	shf.r.wrap.b32 	%r8336, %r8333, %r8332, 18;
	shf.r.wrap.b32 	%r8337, %r8332, %r8333, 18;
	mov.b64 	%rd2089, {%r8337, %r8336};
	xor.b64  	%rd2090, %rd2089, %rd2088;
	shf.l.wrap.b32 	%r8338, %r8332, %r8333, 23;
	shf.l.wrap.b32 	%r8339, %r8333, %r8332, 23;
	mov.b64 	%rd2091, {%r8339, %r8338};
	xor.b64  	%rd2092, %rd2090, %rd2091;
	xor.b64  	%rd2093, %rd2051, %rd2026;
	and.b64  	%rd2094, %rd2076, %rd2093;
	xor.b64  	%rd2095, %rd2094, %rd2026;
	add.s64 	%rd2096, %rd2001, %rd1820;
	ld.const.u64 	%rd2097, [k_sha512+432];
	add.s64 	%rd2098, %rd2096, %rd2097;
	add.s64 	%rd2099, %rd2098, %rd2095;
	add.s64 	%rd2100, %rd2099, %rd2092;
	add.s64 	%rd2101, %rd2100, %rd2012;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8340,%dummy}, %rd2087;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8341}, %rd2087;
	}
	shf.r.wrap.b32 	%r8342, %r8341, %r8340, 28;
	shf.r.wrap.b32 	%r8343, %r8340, %r8341, 28;
	mov.b64 	%rd2102, {%r8343, %r8342};
	shf.l.wrap.b32 	%r8344, %r8340, %r8341, 30;
	shf.l.wrap.b32 	%r8345, %r8341, %r8340, 30;
	mov.b64 	%rd2103, {%r8345, %r8344};
	xor.b64  	%rd2104, %rd2103, %rd2102;
	shf.l.wrap.b32 	%r8346, %r8340, %r8341, 25;
	shf.l.wrap.b32 	%r8347, %r8341, %r8340, 25;
	mov.b64 	%rd2105, {%r8347, %r8346};
	xor.b64  	%rd2106, %rd2104, %rd2105;
	xor.b64  	%rd2107, %rd2087, %rd2037;
	xor.b64  	%rd2108, %rd2087, %rd2062;
	and.b64  	%rd2109, %rd2108, %rd2107;
	xor.b64  	%rd2110, %rd2109, %rd2087;
	add.s64 	%rd2111, %rd2100, %rd2110;
	add.s64 	%rd2112, %rd2111, %rd2106;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8348,%dummy}, %rd2101;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8349}, %rd2101;
	}
	shf.r.wrap.b32 	%r8350, %r8349, %r8348, 14;
	shf.r.wrap.b32 	%r8351, %r8348, %r8349, 14;
	mov.b64 	%rd2113, {%r8351, %r8350};
	shf.r.wrap.b32 	%r8352, %r8349, %r8348, 18;
	shf.r.wrap.b32 	%r8353, %r8348, %r8349, 18;
	mov.b64 	%rd2114, {%r8353, %r8352};
	xor.b64  	%rd2115, %rd2114, %rd2113;
	shf.l.wrap.b32 	%r8354, %r8348, %r8349, 23;
	shf.l.wrap.b32 	%r8355, %r8349, %r8348, 23;
	mov.b64 	%rd2116, {%r8355, %r8354};
	xor.b64  	%rd2117, %rd2115, %rd2116;
	xor.b64  	%rd2118, %rd2076, %rd2051;
	and.b64  	%rd2119, %rd2101, %rd2118;
	xor.b64  	%rd2120, %rd2119, %rd2051;
	add.s64 	%rd2121, %rd2026, %rd1833;
	ld.const.u64 	%rd2122, [k_sha512+440];
	add.s64 	%rd2123, %rd2121, %rd2122;
	add.s64 	%rd2124, %rd2123, %rd2120;
	add.s64 	%rd2125, %rd2124, %rd2117;
	add.s64 	%rd2126, %rd2125, %rd2037;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8356,%dummy}, %rd2112;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8357}, %rd2112;
	}
	shf.r.wrap.b32 	%r8358, %r8357, %r8356, 28;
	shf.r.wrap.b32 	%r8359, %r8356, %r8357, 28;
	mov.b64 	%rd2127, {%r8359, %r8358};
	shf.l.wrap.b32 	%r8360, %r8356, %r8357, 30;
	shf.l.wrap.b32 	%r8361, %r8357, %r8356, 30;
	mov.b64 	%rd2128, {%r8361, %r8360};
	xor.b64  	%rd2129, %rd2128, %rd2127;
	shf.l.wrap.b32 	%r8362, %r8356, %r8357, 25;
	shf.l.wrap.b32 	%r8363, %r8357, %r8356, 25;
	mov.b64 	%rd2130, {%r8363, %r8362};
	xor.b64  	%rd2131, %rd2129, %rd2130;
	xor.b64  	%rd2132, %rd2112, %rd2062;
	xor.b64  	%rd2133, %rd2112, %rd2087;
	and.b64  	%rd2134, %rd2133, %rd2132;
	xor.b64  	%rd2135, %rd2134, %rd2112;
	add.s64 	%rd2136, %rd2125, %rd2135;
	add.s64 	%rd2137, %rd2136, %rd2131;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8364,%dummy}, %rd2126;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8365}, %rd2126;
	}
	shf.r.wrap.b32 	%r8366, %r8365, %r8364, 14;
	shf.r.wrap.b32 	%r8367, %r8364, %r8365, 14;
	mov.b64 	%rd2138, {%r8367, %r8366};
	shf.r.wrap.b32 	%r8368, %r8365, %r8364, 18;
	shf.r.wrap.b32 	%r8369, %r8364, %r8365, 18;
	mov.b64 	%rd2139, {%r8369, %r8368};
	xor.b64  	%rd2140, %rd2139, %rd2138;
	shf.l.wrap.b32 	%r8370, %r8364, %r8365, 23;
	shf.l.wrap.b32 	%r8371, %r8365, %r8364, 23;
	mov.b64 	%rd2141, {%r8371, %r8370};
	xor.b64  	%rd2142, %rd2140, %rd2141;
	xor.b64  	%rd2143, %rd2101, %rd2076;
	and.b64  	%rd2144, %rd2126, %rd2143;
	xor.b64  	%rd2145, %rd2144, %rd2076;
	add.s64 	%rd2146, %rd2051, %rd1846;
	ld.const.u64 	%rd2147, [k_sha512+448];
	add.s64 	%rd2148, %rd2146, %rd2147;
	add.s64 	%rd2149, %rd2148, %rd2145;
	add.s64 	%rd2150, %rd2149, %rd2142;
	add.s64 	%rd2151, %rd2150, %rd2062;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8372,%dummy}, %rd2137;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8373}, %rd2137;
	}
	shf.r.wrap.b32 	%r8374, %r8373, %r8372, 28;
	shf.r.wrap.b32 	%r8375, %r8372, %r8373, 28;
	mov.b64 	%rd2152, {%r8375, %r8374};
	shf.l.wrap.b32 	%r8376, %r8372, %r8373, 30;
	shf.l.wrap.b32 	%r8377, %r8373, %r8372, 30;
	mov.b64 	%rd2153, {%r8377, %r8376};
	xor.b64  	%rd2154, %rd2153, %rd2152;
	shf.l.wrap.b32 	%r8378, %r8372, %r8373, 25;
	shf.l.wrap.b32 	%r8379, %r8373, %r8372, 25;
	mov.b64 	%rd2155, {%r8379, %r8378};
	xor.b64  	%rd2156, %rd2154, %rd2155;
	xor.b64  	%rd2157, %rd2137, %rd2087;
	xor.b64  	%rd2158, %rd2137, %rd2112;
	and.b64  	%rd2159, %rd2158, %rd2157;
	xor.b64  	%rd2160, %rd2159, %rd2137;
	add.s64 	%rd2161, %rd2150, %rd2160;
	add.s64 	%rd2162, %rd2161, %rd2156;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8380,%dummy}, %rd2151;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8381}, %rd2151;
	}
	shf.r.wrap.b32 	%r8382, %r8381, %r8380, 14;
	shf.r.wrap.b32 	%r8383, %r8380, %r8381, 14;
	mov.b64 	%rd2163, {%r8383, %r8382};
	shf.r.wrap.b32 	%r8384, %r8381, %r8380, 18;
	shf.r.wrap.b32 	%r8385, %r8380, %r8381, 18;
	mov.b64 	%rd2164, {%r8385, %r8384};
	xor.b64  	%rd2165, %rd2164, %rd2163;
	shf.l.wrap.b32 	%r8386, %r8380, %r8381, 23;
	shf.l.wrap.b32 	%r8387, %r8381, %r8380, 23;
	mov.b64 	%rd2166, {%r8387, %r8386};
	xor.b64  	%rd2167, %rd2165, %rd2166;
	xor.b64  	%rd2168, %rd2126, %rd2101;
	and.b64  	%rd2169, %rd2151, %rd2168;
	xor.b64  	%rd2170, %rd2169, %rd2101;
	add.s64 	%rd2171, %rd2076, %rd1859;
	ld.const.u64 	%rd2172, [k_sha512+456];
	add.s64 	%rd2173, %rd2171, %rd2172;
	add.s64 	%rd2174, %rd2173, %rd2170;
	add.s64 	%rd2175, %rd2174, %rd2167;
	add.s64 	%rd2176, %rd2175, %rd2087;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8388,%dummy}, %rd2162;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8389}, %rd2162;
	}
	shf.r.wrap.b32 	%r8390, %r8389, %r8388, 28;
	shf.r.wrap.b32 	%r8391, %r8388, %r8389, 28;
	mov.b64 	%rd2177, {%r8391, %r8390};
	shf.l.wrap.b32 	%r8392, %r8388, %r8389, 30;
	shf.l.wrap.b32 	%r8393, %r8389, %r8388, 30;
	mov.b64 	%rd2178, {%r8393, %r8392};
	xor.b64  	%rd2179, %rd2178, %rd2177;
	shf.l.wrap.b32 	%r8394, %r8388, %r8389, 25;
	shf.l.wrap.b32 	%r8395, %r8389, %r8388, 25;
	mov.b64 	%rd2180, {%r8395, %r8394};
	xor.b64  	%rd2181, %rd2179, %rd2180;
	xor.b64  	%rd2182, %rd2162, %rd2112;
	xor.b64  	%rd2183, %rd2162, %rd2137;
	and.b64  	%rd2184, %rd2183, %rd2182;
	xor.b64  	%rd2185, %rd2184, %rd2162;
	add.s64 	%rd2186, %rd2175, %rd2185;
	add.s64 	%rd2187, %rd2186, %rd2181;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8396,%dummy}, %rd2176;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8397}, %rd2176;
	}
	shf.r.wrap.b32 	%r8398, %r8397, %r8396, 14;
	shf.r.wrap.b32 	%r8399, %r8396, %r8397, 14;
	mov.b64 	%rd2188, {%r8399, %r8398};
	shf.r.wrap.b32 	%r8400, %r8397, %r8396, 18;
	shf.r.wrap.b32 	%r8401, %r8396, %r8397, 18;
	mov.b64 	%rd2189, {%r8401, %r8400};
	xor.b64  	%rd2190, %rd2189, %rd2188;
	shf.l.wrap.b32 	%r8402, %r8396, %r8397, 23;
	shf.l.wrap.b32 	%r8403, %r8397, %r8396, 23;
	mov.b64 	%rd2191, {%r8403, %r8402};
	xor.b64  	%rd2192, %rd2190, %rd2191;
	xor.b64  	%rd2193, %rd2151, %rd2126;
	and.b64  	%rd2194, %rd2176, %rd2193;
	xor.b64  	%rd2195, %rd2194, %rd2126;
	add.s64 	%rd2196, %rd2101, %rd1872;
	ld.const.u64 	%rd2197, [k_sha512+464];
	add.s64 	%rd2198, %rd2196, %rd2197;
	add.s64 	%rd2199, %rd2198, %rd2195;
	add.s64 	%rd2200, %rd2199, %rd2192;
	add.s64 	%rd2201, %rd2200, %rd2112;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8404,%dummy}, %rd2187;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8405}, %rd2187;
	}
	shf.r.wrap.b32 	%r8406, %r8405, %r8404, 28;
	shf.r.wrap.b32 	%r8407, %r8404, %r8405, 28;
	mov.b64 	%rd2202, {%r8407, %r8406};
	shf.l.wrap.b32 	%r8408, %r8404, %r8405, 30;
	shf.l.wrap.b32 	%r8409, %r8405, %r8404, 30;
	mov.b64 	%rd2203, {%r8409, %r8408};
	xor.b64  	%rd2204, %rd2203, %rd2202;
	shf.l.wrap.b32 	%r8410, %r8404, %r8405, 25;
	shf.l.wrap.b32 	%r8411, %r8405, %r8404, 25;
	mov.b64 	%rd2205, {%r8411, %r8410};
	xor.b64  	%rd2206, %rd2204, %rd2205;
	xor.b64  	%rd2207, %rd2187, %rd2137;
	xor.b64  	%rd2208, %rd2187, %rd2162;
	and.b64  	%rd2209, %rd2208, %rd2207;
	xor.b64  	%rd2210, %rd2209, %rd2187;
	add.s64 	%rd2211, %rd2200, %rd2210;
	add.s64 	%rd2212, %rd2211, %rd2206;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8412,%dummy}, %rd2201;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8413}, %rd2201;
	}
	shf.r.wrap.b32 	%r8414, %r8413, %r8412, 14;
	shf.r.wrap.b32 	%r8415, %r8412, %r8413, 14;
	mov.b64 	%rd2213, {%r8415, %r8414};
	shf.r.wrap.b32 	%r8416, %r8413, %r8412, 18;
	shf.r.wrap.b32 	%r8417, %r8412, %r8413, 18;
	mov.b64 	%rd2214, {%r8417, %r8416};
	xor.b64  	%rd2215, %rd2214, %rd2213;
	shf.l.wrap.b32 	%r8418, %r8412, %r8413, 23;
	shf.l.wrap.b32 	%r8419, %r8413, %r8412, 23;
	mov.b64 	%rd2216, {%r8419, %r8418};
	xor.b64  	%rd2217, %rd2215, %rd2216;
	xor.b64  	%rd2218, %rd2176, %rd2151;
	and.b64  	%rd2219, %rd2201, %rd2218;
	xor.b64  	%rd2220, %rd2219, %rd2151;
	add.s64 	%rd2221, %rd2126, %rd1885;
	ld.const.u64 	%rd2222, [k_sha512+472];
	add.s64 	%rd2223, %rd2221, %rd2222;
	add.s64 	%rd2224, %rd2223, %rd2220;
	add.s64 	%rd2225, %rd2224, %rd2217;
	add.s64 	%rd2226, %rd2225, %rd2137;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8420,%dummy}, %rd2212;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8421}, %rd2212;
	}
	shf.r.wrap.b32 	%r8422, %r8421, %r8420, 28;
	shf.r.wrap.b32 	%r8423, %r8420, %r8421, 28;
	mov.b64 	%rd2227, {%r8423, %r8422};
	shf.l.wrap.b32 	%r8424, %r8420, %r8421, 30;
	shf.l.wrap.b32 	%r8425, %r8421, %r8420, 30;
	mov.b64 	%rd2228, {%r8425, %r8424};
	xor.b64  	%rd2229, %rd2228, %rd2227;
	shf.l.wrap.b32 	%r8426, %r8420, %r8421, 25;
	shf.l.wrap.b32 	%r8427, %r8421, %r8420, 25;
	mov.b64 	%rd2230, {%r8427, %r8426};
	xor.b64  	%rd2231, %rd2229, %rd2230;
	xor.b64  	%rd2232, %rd2212, %rd2162;
	xor.b64  	%rd2233, %rd2212, %rd2187;
	and.b64  	%rd2234, %rd2233, %rd2232;
	xor.b64  	%rd2235, %rd2234, %rd2212;
	add.s64 	%rd2236, %rd2225, %rd2235;
	add.s64 	%rd2237, %rd2236, %rd2231;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8428,%dummy}, %rd2226;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8429}, %rd2226;
	}
	shf.r.wrap.b32 	%r8430, %r8429, %r8428, 14;
	shf.r.wrap.b32 	%r8431, %r8428, %r8429, 14;
	mov.b64 	%rd2238, {%r8431, %r8430};
	shf.r.wrap.b32 	%r8432, %r8429, %r8428, 18;
	shf.r.wrap.b32 	%r8433, %r8428, %r8429, 18;
	mov.b64 	%rd2239, {%r8433, %r8432};
	xor.b64  	%rd2240, %rd2239, %rd2238;
	shf.l.wrap.b32 	%r8434, %r8428, %r8429, 23;
	shf.l.wrap.b32 	%r8435, %r8429, %r8428, 23;
	mov.b64 	%rd2241, {%r8435, %r8434};
	xor.b64  	%rd2242, %rd2240, %rd2241;
	xor.b64  	%rd2243, %rd2201, %rd2176;
	and.b64  	%rd2244, %rd2226, %rd2243;
	xor.b64  	%rd2245, %rd2244, %rd2176;
	add.s64 	%rd2246, %rd2151, %rd1898;
	ld.const.u64 	%rd2247, [k_sha512+480];
	add.s64 	%rd2248, %rd2246, %rd2247;
	add.s64 	%rd2249, %rd2248, %rd2245;
	add.s64 	%rd2250, %rd2249, %rd2242;
	add.s64 	%rd2251, %rd2250, %rd2162;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8436,%dummy}, %rd2237;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8437}, %rd2237;
	}
	shf.r.wrap.b32 	%r8438, %r8437, %r8436, 28;
	shf.r.wrap.b32 	%r8439, %r8436, %r8437, 28;
	mov.b64 	%rd2252, {%r8439, %r8438};
	shf.l.wrap.b32 	%r8440, %r8436, %r8437, 30;
	shf.l.wrap.b32 	%r8441, %r8437, %r8436, 30;
	mov.b64 	%rd2253, {%r8441, %r8440};
	xor.b64  	%rd2254, %rd2253, %rd2252;
	shf.l.wrap.b32 	%r8442, %r8436, %r8437, 25;
	shf.l.wrap.b32 	%r8443, %r8437, %r8436, 25;
	mov.b64 	%rd2255, {%r8443, %r8442};
	xor.b64  	%rd2256, %rd2254, %rd2255;
	xor.b64  	%rd2257, %rd2237, %rd2187;
	xor.b64  	%rd2258, %rd2237, %rd2212;
	and.b64  	%rd2259, %rd2258, %rd2257;
	xor.b64  	%rd2260, %rd2259, %rd2237;
	add.s64 	%rd2261, %rd2250, %rd2260;
	add.s64 	%rd2262, %rd2261, %rd2256;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8444,%dummy}, %rd2251;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8445}, %rd2251;
	}
	shf.r.wrap.b32 	%r8446, %r8445, %r8444, 14;
	shf.r.wrap.b32 	%r8447, %r8444, %r8445, 14;
	mov.b64 	%rd2263, {%r8447, %r8446};
	shf.r.wrap.b32 	%r8448, %r8445, %r8444, 18;
	shf.r.wrap.b32 	%r8449, %r8444, %r8445, 18;
	mov.b64 	%rd2264, {%r8449, %r8448};
	xor.b64  	%rd2265, %rd2264, %rd2263;
	shf.l.wrap.b32 	%r8450, %r8444, %r8445, 23;
	shf.l.wrap.b32 	%r8451, %r8445, %r8444, 23;
	mov.b64 	%rd2266, {%r8451, %r8450};
	xor.b64  	%rd2267, %rd2265, %rd2266;
	xor.b64  	%rd2268, %rd2226, %rd2201;
	and.b64  	%rd2269, %rd2251, %rd2268;
	xor.b64  	%rd2270, %rd2269, %rd2201;
	add.s64 	%rd2271, %rd2176, %rd1911;
	ld.const.u64 	%rd2272, [k_sha512+488];
	add.s64 	%rd2273, %rd2271, %rd2272;
	add.s64 	%rd2274, %rd2273, %rd2270;
	add.s64 	%rd2275, %rd2274, %rd2267;
	add.s64 	%rd2276, %rd2275, %rd2187;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8452,%dummy}, %rd2262;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8453}, %rd2262;
	}
	shf.r.wrap.b32 	%r8454, %r8453, %r8452, 28;
	shf.r.wrap.b32 	%r8455, %r8452, %r8453, 28;
	mov.b64 	%rd2277, {%r8455, %r8454};
	shf.l.wrap.b32 	%r8456, %r8452, %r8453, 30;
	shf.l.wrap.b32 	%r8457, %r8453, %r8452, 30;
	mov.b64 	%rd2278, {%r8457, %r8456};
	xor.b64  	%rd2279, %rd2278, %rd2277;
	shf.l.wrap.b32 	%r8458, %r8452, %r8453, 25;
	shf.l.wrap.b32 	%r8459, %r8453, %r8452, 25;
	mov.b64 	%rd2280, {%r8459, %r8458};
	xor.b64  	%rd2281, %rd2279, %rd2280;
	xor.b64  	%rd2282, %rd2262, %rd2212;
	xor.b64  	%rd2283, %rd2262, %rd2237;
	and.b64  	%rd2284, %rd2283, %rd2282;
	xor.b64  	%rd2285, %rd2284, %rd2262;
	add.s64 	%rd2286, %rd2275, %rd2285;
	add.s64 	%rd2287, %rd2286, %rd2281;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8460,%dummy}, %rd2276;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8461}, %rd2276;
	}
	shf.r.wrap.b32 	%r8462, %r8461, %r8460, 14;
	shf.r.wrap.b32 	%r8463, %r8460, %r8461, 14;
	mov.b64 	%rd2288, {%r8463, %r8462};
	shf.r.wrap.b32 	%r8464, %r8461, %r8460, 18;
	shf.r.wrap.b32 	%r8465, %r8460, %r8461, 18;
	mov.b64 	%rd2289, {%r8465, %r8464};
	xor.b64  	%rd2290, %rd2289, %rd2288;
	shf.l.wrap.b32 	%r8466, %r8460, %r8461, 23;
	shf.l.wrap.b32 	%r8467, %r8461, %r8460, 23;
	mov.b64 	%rd2291, {%r8467, %r8466};
	xor.b64  	%rd2292, %rd2290, %rd2291;
	xor.b64  	%rd2293, %rd2251, %rd2226;
	and.b64  	%rd2294, %rd2276, %rd2293;
	xor.b64  	%rd2295, %rd2294, %rd2226;
	add.s64 	%rd2296, %rd2201, %rd1924;
	ld.const.u64 	%rd2297, [k_sha512+496];
	add.s64 	%rd2298, %rd2296, %rd2297;
	add.s64 	%rd2299, %rd2298, %rd2295;
	add.s64 	%rd2300, %rd2299, %rd2292;
	add.s64 	%rd2301, %rd2300, %rd2212;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8468,%dummy}, %rd2287;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8469}, %rd2287;
	}
	shf.r.wrap.b32 	%r8470, %r8469, %r8468, 28;
	shf.r.wrap.b32 	%r8471, %r8468, %r8469, 28;
	mov.b64 	%rd2302, {%r8471, %r8470};
	shf.l.wrap.b32 	%r8472, %r8468, %r8469, 30;
	shf.l.wrap.b32 	%r8473, %r8469, %r8468, 30;
	mov.b64 	%rd2303, {%r8473, %r8472};
	xor.b64  	%rd2304, %rd2303, %rd2302;
	shf.l.wrap.b32 	%r8474, %r8468, %r8469, 25;
	shf.l.wrap.b32 	%r8475, %r8469, %r8468, 25;
	mov.b64 	%rd2305, {%r8475, %r8474};
	xor.b64  	%rd2306, %rd2304, %rd2305;
	xor.b64  	%rd2307, %rd2287, %rd2237;
	xor.b64  	%rd2308, %rd2287, %rd2262;
	and.b64  	%rd2309, %rd2308, %rd2307;
	xor.b64  	%rd2310, %rd2309, %rd2287;
	add.s64 	%rd2311, %rd2300, %rd2310;
	add.s64 	%rd2312, %rd2311, %rd2306;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8476,%dummy}, %rd2301;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8477}, %rd2301;
	}
	shf.r.wrap.b32 	%r8478, %r8477, %r8476, 14;
	shf.r.wrap.b32 	%r8479, %r8476, %r8477, 14;
	mov.b64 	%rd2313, {%r8479, %r8478};
	shf.r.wrap.b32 	%r8480, %r8477, %r8476, 18;
	shf.r.wrap.b32 	%r8481, %r8476, %r8477, 18;
	mov.b64 	%rd2314, {%r8481, %r8480};
	xor.b64  	%rd2315, %rd2314, %rd2313;
	shf.l.wrap.b32 	%r8482, %r8476, %r8477, 23;
	shf.l.wrap.b32 	%r8483, %r8477, %r8476, 23;
	mov.b64 	%rd2316, {%r8483, %r8482};
	xor.b64  	%rd2317, %rd2315, %rd2316;
	xor.b64  	%rd2318, %rd2276, %rd2251;
	and.b64  	%rd2319, %rd2301, %rd2318;
	xor.b64  	%rd2320, %rd2319, %rd2251;
	add.s64 	%rd2321, %rd2226, %rd1937;
	ld.const.u64 	%rd2322, [k_sha512+504];
	add.s64 	%rd2323, %rd2321, %rd2322;
	add.s64 	%rd2324, %rd2323, %rd2320;
	add.s64 	%rd2325, %rd2324, %rd2317;
	add.s64 	%rd2326, %rd2325, %rd2237;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8484,%dummy}, %rd2312;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8485}, %rd2312;
	}
	shf.r.wrap.b32 	%r8486, %r8485, %r8484, 28;
	shf.r.wrap.b32 	%r8487, %r8484, %r8485, 28;
	mov.b64 	%rd2327, {%r8487, %r8486};
	shf.l.wrap.b32 	%r8488, %r8484, %r8485, 30;
	shf.l.wrap.b32 	%r8489, %r8485, %r8484, 30;
	mov.b64 	%rd2328, {%r8489, %r8488};
	xor.b64  	%rd2329, %rd2328, %rd2327;
	shf.l.wrap.b32 	%r8490, %r8484, %r8485, 25;
	shf.l.wrap.b32 	%r8491, %r8485, %r8484, 25;
	mov.b64 	%rd2330, {%r8491, %r8490};
	xor.b64  	%rd2331, %rd2329, %rd2330;
	xor.b64  	%rd2332, %rd2312, %rd2262;
	xor.b64  	%rd2333, %rd2312, %rd2287;
	and.b64  	%rd2334, %rd2333, %rd2332;
	xor.b64  	%rd2335, %rd2334, %rd2312;
	add.s64 	%rd2336, %rd2325, %rd2335;
	add.s64 	%rd2337, %rd2336, %rd2331;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8492,%dummy}, %rd1924;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8493}, %rd1924;
	}
	shf.r.wrap.b32 	%r8494, %r8493, %r8492, 19;
	shf.r.wrap.b32 	%r8495, %r8492, %r8493, 19;
	mov.b64 	%rd2338, {%r8495, %r8494};
	shf.l.wrap.b32 	%r8496, %r8492, %r8493, 3;
	shf.l.wrap.b32 	%r8497, %r8493, %r8492, 3;
	mov.b64 	%rd2339, {%r8497, %r8496};
	shr.u64 	%rd2340, %rd1924, 6;
	xor.b64  	%rd2341, %rd2338, %rd2340;
	xor.b64  	%rd2342, %rd2341, %rd2339;
	shf.r.wrap.b32 	%r8498, %r8107, %r8106, 1;
	shf.r.wrap.b32 	%r8499, %r8106, %r8107, 1;
	mov.b64 	%rd2343, {%r8499, %r8498};
	shf.r.wrap.b32 	%r8500, %r8107, %r8106, 8;
	shf.r.wrap.b32 	%r8501, %r8106, %r8107, 8;
	mov.b64 	%rd2344, {%r8501, %r8500};
	shr.u64 	%rd2345, %rd1755, 7;
	xor.b64  	%rd2346, %rd2343, %rd2345;
	xor.b64  	%rd2347, %rd2346, %rd2344;
	add.s64 	%rd2348, %rd1859, %rd1742;
	add.s64 	%rd2349, %rd2348, %rd2342;
	add.s64 	%rd2350, %rd2349, %rd2347;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8502,%dummy}, %rd1937;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8503}, %rd1937;
	}
	shf.r.wrap.b32 	%r8504, %r8503, %r8502, 19;
	shf.r.wrap.b32 	%r8505, %r8502, %r8503, 19;
	mov.b64 	%rd2351, {%r8505, %r8504};
	shf.l.wrap.b32 	%r8506, %r8502, %r8503, 3;
	shf.l.wrap.b32 	%r8507, %r8503, %r8502, 3;
	mov.b64 	%rd2352, {%r8507, %r8506};
	shr.u64 	%rd2353, %rd1937, 6;
	xor.b64  	%rd2354, %rd2351, %rd2353;
	xor.b64  	%rd2355, %rd2354, %rd2352;
	shf.r.wrap.b32 	%r8508, %r8117, %r8116, 1;
	shf.r.wrap.b32 	%r8509, %r8116, %r8117, 1;
	mov.b64 	%rd2356, {%r8509, %r8508};
	shf.r.wrap.b32 	%r8510, %r8117, %r8116, 8;
	shf.r.wrap.b32 	%r8511, %r8116, %r8117, 8;
	mov.b64 	%rd2357, {%r8511, %r8510};
	shr.u64 	%rd2358, %rd1768, 7;
	xor.b64  	%rd2359, %rd2356, %rd2358;
	xor.b64  	%rd2360, %rd2359, %rd2357;
	add.s64 	%rd2361, %rd1872, %rd1755;
	add.s64 	%rd2362, %rd2361, %rd2355;
	add.s64 	%rd2363, %rd2362, %rd2360;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8512,%dummy}, %rd2350;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8513}, %rd2350;
	}
	shf.r.wrap.b32 	%r8514, %r8513, %r8512, 19;
	shf.r.wrap.b32 	%r8515, %r8512, %r8513, 19;
	mov.b64 	%rd2364, {%r8515, %r8514};
	shf.l.wrap.b32 	%r8516, %r8512, %r8513, 3;
	shf.l.wrap.b32 	%r8517, %r8513, %r8512, 3;
	mov.b64 	%rd2365, {%r8517, %r8516};
	shr.u64 	%rd2366, %rd2350, 6;
	xor.b64  	%rd2367, %rd2364, %rd2366;
	xor.b64  	%rd2368, %rd2367, %rd2365;
	shf.r.wrap.b32 	%r8518, %r8127, %r8126, 1;
	shf.r.wrap.b32 	%r8519, %r8126, %r8127, 1;
	mov.b64 	%rd2369, {%r8519, %r8518};
	shf.r.wrap.b32 	%r8520, %r8127, %r8126, 8;
	shf.r.wrap.b32 	%r8521, %r8126, %r8127, 8;
	mov.b64 	%rd2370, {%r8521, %r8520};
	shr.u64 	%rd2371, %rd1781, 7;
	xor.b64  	%rd2372, %rd2369, %rd2371;
	xor.b64  	%rd2373, %rd2372, %rd2370;
	add.s64 	%rd2374, %rd1885, %rd1768;
	add.s64 	%rd2375, %rd2374, %rd2368;
	add.s64 	%rd2376, %rd2375, %rd2373;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8522,%dummy}, %rd2363;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8523}, %rd2363;
	}
	shf.r.wrap.b32 	%r8524, %r8523, %r8522, 19;
	shf.r.wrap.b32 	%r8525, %r8522, %r8523, 19;
	mov.b64 	%rd2377, {%r8525, %r8524};
	shf.l.wrap.b32 	%r8526, %r8522, %r8523, 3;
	shf.l.wrap.b32 	%r8527, %r8523, %r8522, 3;
	mov.b64 	%rd2378, {%r8527, %r8526};
	shr.u64 	%rd2379, %rd2363, 6;
	xor.b64  	%rd2380, %rd2377, %rd2379;
	xor.b64  	%rd2381, %rd2380, %rd2378;
	shf.r.wrap.b32 	%r8528, %r8137, %r8136, 1;
	shf.r.wrap.b32 	%r8529, %r8136, %r8137, 1;
	mov.b64 	%rd2382, {%r8529, %r8528};
	shf.r.wrap.b32 	%r8530, %r8137, %r8136, 8;
	shf.r.wrap.b32 	%r8531, %r8136, %r8137, 8;
	mov.b64 	%rd2383, {%r8531, %r8530};
	shr.u64 	%rd2384, %rd1794, 7;
	xor.b64  	%rd2385, %rd2382, %rd2384;
	xor.b64  	%rd2386, %rd2385, %rd2383;
	add.s64 	%rd2387, %rd1898, %rd1781;
	add.s64 	%rd2388, %rd2387, %rd2381;
	add.s64 	%rd2389, %rd2388, %rd2386;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8532,%dummy}, %rd2376;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8533}, %rd2376;
	}
	shf.r.wrap.b32 	%r8534, %r8533, %r8532, 19;
	shf.r.wrap.b32 	%r8535, %r8532, %r8533, 19;
	mov.b64 	%rd2390, {%r8535, %r8534};
	shf.l.wrap.b32 	%r8536, %r8532, %r8533, 3;
	shf.l.wrap.b32 	%r8537, %r8533, %r8532, 3;
	mov.b64 	%rd2391, {%r8537, %r8536};
	shr.u64 	%rd2392, %rd2376, 6;
	xor.b64  	%rd2393, %rd2390, %rd2392;
	xor.b64  	%rd2394, %rd2393, %rd2391;
	shf.r.wrap.b32 	%r8538, %r8147, %r8146, 1;
	shf.r.wrap.b32 	%r8539, %r8146, %r8147, 1;
	mov.b64 	%rd2395, {%r8539, %r8538};
	shf.r.wrap.b32 	%r8540, %r8147, %r8146, 8;
	shf.r.wrap.b32 	%r8541, %r8146, %r8147, 8;
	mov.b64 	%rd2396, {%r8541, %r8540};
	shr.u64 	%rd2397, %rd1807, 7;
	xor.b64  	%rd2398, %rd2395, %rd2397;
	xor.b64  	%rd2399, %rd2398, %rd2396;
	add.s64 	%rd2400, %rd1911, %rd1794;
	add.s64 	%rd2401, %rd2400, %rd2394;
	add.s64 	%rd2402, %rd2401, %rd2399;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8542,%dummy}, %rd2389;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8543}, %rd2389;
	}
	shf.r.wrap.b32 	%r8544, %r8543, %r8542, 19;
	shf.r.wrap.b32 	%r8545, %r8542, %r8543, 19;
	mov.b64 	%rd2403, {%r8545, %r8544};
	shf.l.wrap.b32 	%r8546, %r8542, %r8543, 3;
	shf.l.wrap.b32 	%r8547, %r8543, %r8542, 3;
	mov.b64 	%rd2404, {%r8547, %r8546};
	shr.u64 	%rd2405, %rd2389, 6;
	xor.b64  	%rd2406, %rd2403, %rd2405;
	xor.b64  	%rd2407, %rd2406, %rd2404;
	shf.r.wrap.b32 	%r8548, %r8157, %r8156, 1;
	shf.r.wrap.b32 	%r8549, %r8156, %r8157, 1;
	mov.b64 	%rd2408, {%r8549, %r8548};
	shf.r.wrap.b32 	%r8550, %r8157, %r8156, 8;
	shf.r.wrap.b32 	%r8551, %r8156, %r8157, 8;
	mov.b64 	%rd2409, {%r8551, %r8550};
	shr.u64 	%rd2410, %rd1820, 7;
	xor.b64  	%rd2411, %rd2408, %rd2410;
	xor.b64  	%rd2412, %rd2411, %rd2409;
	add.s64 	%rd2413, %rd1924, %rd1807;
	add.s64 	%rd2414, %rd2413, %rd2407;
	add.s64 	%rd2415, %rd2414, %rd2412;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8552,%dummy}, %rd2402;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8553}, %rd2402;
	}
	shf.r.wrap.b32 	%r8554, %r8553, %r8552, 19;
	shf.r.wrap.b32 	%r8555, %r8552, %r8553, 19;
	mov.b64 	%rd2416, {%r8555, %r8554};
	shf.l.wrap.b32 	%r8556, %r8552, %r8553, 3;
	shf.l.wrap.b32 	%r8557, %r8553, %r8552, 3;
	mov.b64 	%rd2417, {%r8557, %r8556};
	shr.u64 	%rd2418, %rd2402, 6;
	xor.b64  	%rd2419, %rd2416, %rd2418;
	xor.b64  	%rd2420, %rd2419, %rd2417;
	shf.r.wrap.b32 	%r8558, %r8167, %r8166, 1;
	shf.r.wrap.b32 	%r8559, %r8166, %r8167, 1;
	mov.b64 	%rd2421, {%r8559, %r8558};
	shf.r.wrap.b32 	%r8560, %r8167, %r8166, 8;
	shf.r.wrap.b32 	%r8561, %r8166, %r8167, 8;
	mov.b64 	%rd2422, {%r8561, %r8560};
	shr.u64 	%rd2423, %rd1833, 7;
	xor.b64  	%rd2424, %rd2421, %rd2423;
	xor.b64  	%rd2425, %rd2424, %rd2422;
	add.s64 	%rd2426, %rd1937, %rd1820;
	add.s64 	%rd2427, %rd2426, %rd2420;
	add.s64 	%rd2428, %rd2427, %rd2425;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8562,%dummy}, %rd2415;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8563}, %rd2415;
	}
	shf.r.wrap.b32 	%r8564, %r8563, %r8562, 19;
	shf.r.wrap.b32 	%r8565, %r8562, %r8563, 19;
	mov.b64 	%rd2429, {%r8565, %r8564};
	shf.l.wrap.b32 	%r8566, %r8562, %r8563, 3;
	shf.l.wrap.b32 	%r8567, %r8563, %r8562, 3;
	mov.b64 	%rd2430, {%r8567, %r8566};
	shr.u64 	%rd2431, %rd2415, 6;
	xor.b64  	%rd2432, %rd2429, %rd2431;
	xor.b64  	%rd2433, %rd2432, %rd2430;
	shf.r.wrap.b32 	%r8568, %r8177, %r8176, 1;
	shf.r.wrap.b32 	%r8569, %r8176, %r8177, 1;
	mov.b64 	%rd2434, {%r8569, %r8568};
	shf.r.wrap.b32 	%r8570, %r8177, %r8176, 8;
	shf.r.wrap.b32 	%r8571, %r8176, %r8177, 8;
	mov.b64 	%rd2435, {%r8571, %r8570};
	shr.u64 	%rd2436, %rd1846, 7;
	xor.b64  	%rd2437, %rd2434, %rd2436;
	xor.b64  	%rd2438, %rd2437, %rd2435;
	add.s64 	%rd2439, %rd2350, %rd1833;
	add.s64 	%rd2440, %rd2439, %rd2433;
	add.s64 	%rd2441, %rd2440, %rd2438;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8572,%dummy}, %rd2428;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8573}, %rd2428;
	}
	shf.r.wrap.b32 	%r8574, %r8573, %r8572, 19;
	shf.r.wrap.b32 	%r8575, %r8572, %r8573, 19;
	mov.b64 	%rd2442, {%r8575, %r8574};
	shf.l.wrap.b32 	%r8576, %r8572, %r8573, 3;
	shf.l.wrap.b32 	%r8577, %r8573, %r8572, 3;
	mov.b64 	%rd2443, {%r8577, %r8576};
	shr.u64 	%rd2444, %rd2428, 6;
	xor.b64  	%rd2445, %rd2442, %rd2444;
	xor.b64  	%rd2446, %rd2445, %rd2443;
	shf.r.wrap.b32 	%r8578, %r8187, %r8186, 1;
	shf.r.wrap.b32 	%r8579, %r8186, %r8187, 1;
	mov.b64 	%rd2447, {%r8579, %r8578};
	shf.r.wrap.b32 	%r8580, %r8187, %r8186, 8;
	shf.r.wrap.b32 	%r8581, %r8186, %r8187, 8;
	mov.b64 	%rd2448, {%r8581, %r8580};
	shr.u64 	%rd2449, %rd1859, 7;
	xor.b64  	%rd2450, %rd2447, %rd2449;
	xor.b64  	%rd2451, %rd2450, %rd2448;
	add.s64 	%rd2452, %rd2363, %rd1846;
	add.s64 	%rd2453, %rd2452, %rd2446;
	add.s64 	%rd2454, %rd2453, %rd2451;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8582,%dummy}, %rd2441;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8583}, %rd2441;
	}
	shf.r.wrap.b32 	%r8584, %r8583, %r8582, 19;
	shf.r.wrap.b32 	%r8585, %r8582, %r8583, 19;
	mov.b64 	%rd2455, {%r8585, %r8584};
	shf.l.wrap.b32 	%r8586, %r8582, %r8583, 3;
	shf.l.wrap.b32 	%r8587, %r8583, %r8582, 3;
	mov.b64 	%rd2456, {%r8587, %r8586};
	shr.u64 	%rd2457, %rd2441, 6;
	xor.b64  	%rd2458, %rd2455, %rd2457;
	xor.b64  	%rd2459, %rd2458, %rd2456;
	shf.r.wrap.b32 	%r8588, %r8197, %r8196, 1;
	shf.r.wrap.b32 	%r8589, %r8196, %r8197, 1;
	mov.b64 	%rd2460, {%r8589, %r8588};
	shf.r.wrap.b32 	%r8590, %r8197, %r8196, 8;
	shf.r.wrap.b32 	%r8591, %r8196, %r8197, 8;
	mov.b64 	%rd2461, {%r8591, %r8590};
	shr.u64 	%rd2462, %rd1872, 7;
	xor.b64  	%rd2463, %rd2460, %rd2462;
	xor.b64  	%rd2464, %rd2463, %rd2461;
	add.s64 	%rd2465, %rd2376, %rd1859;
	add.s64 	%rd2466, %rd2465, %rd2459;
	add.s64 	%rd2467, %rd2466, %rd2464;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8592,%dummy}, %rd2454;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8593}, %rd2454;
	}
	shf.r.wrap.b32 	%r8594, %r8593, %r8592, 19;
	shf.r.wrap.b32 	%r8595, %r8592, %r8593, 19;
	mov.b64 	%rd2468, {%r8595, %r8594};
	shf.l.wrap.b32 	%r8596, %r8592, %r8593, 3;
	shf.l.wrap.b32 	%r8597, %r8593, %r8592, 3;
	mov.b64 	%rd2469, {%r8597, %r8596};
	shr.u64 	%rd2470, %rd2454, 6;
	xor.b64  	%rd2471, %rd2468, %rd2470;
	xor.b64  	%rd2472, %rd2471, %rd2469;
	shf.r.wrap.b32 	%r8598, %r8207, %r8206, 1;
	shf.r.wrap.b32 	%r8599, %r8206, %r8207, 1;
	mov.b64 	%rd2473, {%r8599, %r8598};
	shf.r.wrap.b32 	%r8600, %r8207, %r8206, 8;
	shf.r.wrap.b32 	%r8601, %r8206, %r8207, 8;
	mov.b64 	%rd2474, {%r8601, %r8600};
	shr.u64 	%rd2475, %rd1885, 7;
	xor.b64  	%rd2476, %rd2473, %rd2475;
	xor.b64  	%rd2477, %rd2476, %rd2474;
	add.s64 	%rd2478, %rd2389, %rd1872;
	add.s64 	%rd2479, %rd2478, %rd2472;
	add.s64 	%rd2480, %rd2479, %rd2477;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8602,%dummy}, %rd2467;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8603}, %rd2467;
	}
	shf.r.wrap.b32 	%r8604, %r8603, %r8602, 19;
	shf.r.wrap.b32 	%r8605, %r8602, %r8603, 19;
	mov.b64 	%rd2481, {%r8605, %r8604};
	shf.l.wrap.b32 	%r8606, %r8602, %r8603, 3;
	shf.l.wrap.b32 	%r8607, %r8603, %r8602, 3;
	mov.b64 	%rd2482, {%r8607, %r8606};
	shr.u64 	%rd2483, %rd2467, 6;
	xor.b64  	%rd2484, %rd2481, %rd2483;
	xor.b64  	%rd2485, %rd2484, %rd2482;
	shf.r.wrap.b32 	%r8608, %r8217, %r8216, 1;
	shf.r.wrap.b32 	%r8609, %r8216, %r8217, 1;
	mov.b64 	%rd2486, {%r8609, %r8608};
	shf.r.wrap.b32 	%r8610, %r8217, %r8216, 8;
	shf.r.wrap.b32 	%r8611, %r8216, %r8217, 8;
	mov.b64 	%rd2487, {%r8611, %r8610};
	shr.u64 	%rd2488, %rd1898, 7;
	xor.b64  	%rd2489, %rd2486, %rd2488;
	xor.b64  	%rd2490, %rd2489, %rd2487;
	add.s64 	%rd2491, %rd2402, %rd1885;
	add.s64 	%rd2492, %rd2491, %rd2485;
	add.s64 	%rd2493, %rd2492, %rd2490;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8612,%dummy}, %rd2480;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8613}, %rd2480;
	}
	shf.r.wrap.b32 	%r8614, %r8613, %r8612, 19;
	shf.r.wrap.b32 	%r8615, %r8612, %r8613, 19;
	mov.b64 	%rd2494, {%r8615, %r8614};
	shf.l.wrap.b32 	%r8616, %r8612, %r8613, 3;
	shf.l.wrap.b32 	%r8617, %r8613, %r8612, 3;
	mov.b64 	%rd2495, {%r8617, %r8616};
	shr.u64 	%rd2496, %rd2480, 6;
	xor.b64  	%rd2497, %rd2494, %rd2496;
	xor.b64  	%rd2498, %rd2497, %rd2495;
	shf.r.wrap.b32 	%r8618, %r8227, %r8226, 1;
	shf.r.wrap.b32 	%r8619, %r8226, %r8227, 1;
	mov.b64 	%rd2499, {%r8619, %r8618};
	shf.r.wrap.b32 	%r8620, %r8227, %r8226, 8;
	shf.r.wrap.b32 	%r8621, %r8226, %r8227, 8;
	mov.b64 	%rd2500, {%r8621, %r8620};
	shr.u64 	%rd2501, %rd1911, 7;
	xor.b64  	%rd2502, %rd2499, %rd2501;
	xor.b64  	%rd2503, %rd2502, %rd2500;
	add.s64 	%rd2504, %rd2415, %rd1898;
	add.s64 	%rd2505, %rd2504, %rd2498;
	add.s64 	%rd2506, %rd2505, %rd2503;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8622,%dummy}, %rd2493;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8623}, %rd2493;
	}
	shf.r.wrap.b32 	%r8624, %r8623, %r8622, 19;
	shf.r.wrap.b32 	%r8625, %r8622, %r8623, 19;
	mov.b64 	%rd2507, {%r8625, %r8624};
	shf.l.wrap.b32 	%r8626, %r8622, %r8623, 3;
	shf.l.wrap.b32 	%r8627, %r8623, %r8622, 3;
	mov.b64 	%rd2508, {%r8627, %r8626};
	shr.u64 	%rd2509, %rd2493, 6;
	xor.b64  	%rd2510, %rd2507, %rd2509;
	xor.b64  	%rd2511, %rd2510, %rd2508;
	shf.r.wrap.b32 	%r8628, %r8493, %r8492, 1;
	shf.r.wrap.b32 	%r8629, %r8492, %r8493, 1;
	mov.b64 	%rd2512, {%r8629, %r8628};
	shf.r.wrap.b32 	%r8630, %r8493, %r8492, 8;
	shf.r.wrap.b32 	%r8631, %r8492, %r8493, 8;
	mov.b64 	%rd2513, {%r8631, %r8630};
	shr.u64 	%rd2514, %rd1924, 7;
	xor.b64  	%rd2515, %rd2512, %rd2514;
	xor.b64  	%rd2516, %rd2515, %rd2513;
	add.s64 	%rd2517, %rd2428, %rd1911;
	add.s64 	%rd2518, %rd2517, %rd2511;
	add.s64 	%rd2519, %rd2518, %rd2516;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8632,%dummy}, %rd2506;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8633}, %rd2506;
	}
	shf.r.wrap.b32 	%r8634, %r8633, %r8632, 19;
	shf.r.wrap.b32 	%r8635, %r8632, %r8633, 19;
	mov.b64 	%rd2520, {%r8635, %r8634};
	shf.l.wrap.b32 	%r8636, %r8632, %r8633, 3;
	shf.l.wrap.b32 	%r8637, %r8633, %r8632, 3;
	mov.b64 	%rd2521, {%r8637, %r8636};
	shr.u64 	%rd2522, %rd2506, 6;
	xor.b64  	%rd2523, %rd2520, %rd2522;
	xor.b64  	%rd2524, %rd2523, %rd2521;
	shf.r.wrap.b32 	%r8638, %r8503, %r8502, 1;
	shf.r.wrap.b32 	%r8639, %r8502, %r8503, 1;
	mov.b64 	%rd2525, {%r8639, %r8638};
	shf.r.wrap.b32 	%r8640, %r8503, %r8502, 8;
	shf.r.wrap.b32 	%r8641, %r8502, %r8503, 8;
	mov.b64 	%rd2526, {%r8641, %r8640};
	shr.u64 	%rd2527, %rd1937, 7;
	xor.b64  	%rd2528, %rd2525, %rd2527;
	xor.b64  	%rd2529, %rd2528, %rd2526;
	add.s64 	%rd2530, %rd2441, %rd1924;
	add.s64 	%rd2531, %rd2530, %rd2524;
	add.s64 	%rd2532, %rd2531, %rd2529;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8642,%dummy}, %rd2519;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8643}, %rd2519;
	}
	shf.r.wrap.b32 	%r8644, %r8643, %r8642, 19;
	shf.r.wrap.b32 	%r8645, %r8642, %r8643, 19;
	mov.b64 	%rd2533, {%r8645, %r8644};
	shf.l.wrap.b32 	%r8646, %r8642, %r8643, 3;
	shf.l.wrap.b32 	%r8647, %r8643, %r8642, 3;
	mov.b64 	%rd2534, {%r8647, %r8646};
	shr.u64 	%rd2535, %rd2519, 6;
	xor.b64  	%rd2536, %rd2533, %rd2535;
	xor.b64  	%rd2537, %rd2536, %rd2534;
	shf.r.wrap.b32 	%r8648, %r8513, %r8512, 1;
	shf.r.wrap.b32 	%r8649, %r8512, %r8513, 1;
	mov.b64 	%rd2538, {%r8649, %r8648};
	shf.r.wrap.b32 	%r8650, %r8513, %r8512, 8;
	shf.r.wrap.b32 	%r8651, %r8512, %r8513, 8;
	mov.b64 	%rd2539, {%r8651, %r8650};
	shr.u64 	%rd2540, %rd2350, 7;
	xor.b64  	%rd2541, %rd2538, %rd2540;
	xor.b64  	%rd2542, %rd2541, %rd2539;
	add.s64 	%rd2543, %rd2454, %rd1937;
	add.s64 	%rd2544, %rd2543, %rd2537;
	add.s64 	%rd2545, %rd2544, %rd2542;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8652,%dummy}, %rd2326;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8653}, %rd2326;
	}
	shf.r.wrap.b32 	%r8654, %r8653, %r8652, 14;
	shf.r.wrap.b32 	%r8655, %r8652, %r8653, 14;
	mov.b64 	%rd2546, {%r8655, %r8654};
	shf.r.wrap.b32 	%r8656, %r8653, %r8652, 18;
	shf.r.wrap.b32 	%r8657, %r8652, %r8653, 18;
	mov.b64 	%rd2547, {%r8657, %r8656};
	xor.b64  	%rd2548, %rd2547, %rd2546;
	shf.l.wrap.b32 	%r8658, %r8652, %r8653, 23;
	shf.l.wrap.b32 	%r8659, %r8653, %r8652, 23;
	mov.b64 	%rd2549, {%r8659, %r8658};
	xor.b64  	%rd2550, %rd2548, %rd2549;
	xor.b64  	%rd2551, %rd2301, %rd2276;
	and.b64  	%rd2552, %rd2551, %rd2326;
	xor.b64  	%rd2553, %rd2552, %rd2276;
	add.s64 	%rd2554, %rd2553, %rd2251;
	add.s64 	%rd2555, %rd2554, %rd2350;
	ld.const.u64 	%rd2556, [k_sha512+512];
	add.s64 	%rd2557, %rd2555, %rd2556;
	add.s64 	%rd2558, %rd2557, %rd2550;
	add.s64 	%rd2559, %rd2558, %rd2262;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8660,%dummy}, %rd2337;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8661}, %rd2337;
	}
	shf.r.wrap.b32 	%r8662, %r8661, %r8660, 28;
	shf.r.wrap.b32 	%r8663, %r8660, %r8661, 28;
	mov.b64 	%rd2560, {%r8663, %r8662};
	shf.l.wrap.b32 	%r8664, %r8660, %r8661, 30;
	shf.l.wrap.b32 	%r8665, %r8661, %r8660, 30;
	mov.b64 	%rd2561, {%r8665, %r8664};
	xor.b64  	%rd2562, %rd2561, %rd2560;
	shf.l.wrap.b32 	%r8666, %r8660, %r8661, 25;
	shf.l.wrap.b32 	%r8667, %r8661, %r8660, 25;
	mov.b64 	%rd2563, {%r8667, %r8666};
	xor.b64  	%rd2564, %rd2562, %rd2563;
	xor.b64  	%rd2565, %rd2337, %rd2287;
	xor.b64  	%rd2566, %rd2337, %rd2312;
	and.b64  	%rd2567, %rd2566, %rd2565;
	xor.b64  	%rd2568, %rd2567, %rd2337;
	add.s64 	%rd2569, %rd2558, %rd2568;
	add.s64 	%rd2570, %rd2569, %rd2564;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8668,%dummy}, %rd2559;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8669}, %rd2559;
	}
	shf.r.wrap.b32 	%r8670, %r8669, %r8668, 14;
	shf.r.wrap.b32 	%r8671, %r8668, %r8669, 14;
	mov.b64 	%rd2571, {%r8671, %r8670};
	shf.r.wrap.b32 	%r8672, %r8669, %r8668, 18;
	shf.r.wrap.b32 	%r8673, %r8668, %r8669, 18;
	mov.b64 	%rd2572, {%r8673, %r8672};
	xor.b64  	%rd2573, %rd2572, %rd2571;
	shf.l.wrap.b32 	%r8674, %r8668, %r8669, 23;
	shf.l.wrap.b32 	%r8675, %r8669, %r8668, 23;
	mov.b64 	%rd2574, {%r8675, %r8674};
	xor.b64  	%rd2575, %rd2573, %rd2574;
	xor.b64  	%rd2576, %rd2326, %rd2301;
	and.b64  	%rd2577, %rd2559, %rd2576;
	xor.b64  	%rd2578, %rd2577, %rd2301;
	add.s64 	%rd2579, %rd2363, %rd2276;
	ld.const.u64 	%rd2580, [k_sha512+520];
	add.s64 	%rd2581, %rd2579, %rd2580;
	add.s64 	%rd2582, %rd2581, %rd2578;
	add.s64 	%rd2583, %rd2582, %rd2575;
	add.s64 	%rd2584, %rd2583, %rd2287;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8676,%dummy}, %rd2570;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8677}, %rd2570;
	}
	shf.r.wrap.b32 	%r8678, %r8677, %r8676, 28;
	shf.r.wrap.b32 	%r8679, %r8676, %r8677, 28;
	mov.b64 	%rd2585, {%r8679, %r8678};
	shf.l.wrap.b32 	%r8680, %r8676, %r8677, 30;
	shf.l.wrap.b32 	%r8681, %r8677, %r8676, 30;
	mov.b64 	%rd2586, {%r8681, %r8680};
	xor.b64  	%rd2587, %rd2586, %rd2585;
	shf.l.wrap.b32 	%r8682, %r8676, %r8677, 25;
	shf.l.wrap.b32 	%r8683, %r8677, %r8676, 25;
	mov.b64 	%rd2588, {%r8683, %r8682};
	xor.b64  	%rd2589, %rd2587, %rd2588;
	xor.b64  	%rd2590, %rd2570, %rd2312;
	xor.b64  	%rd2591, %rd2570, %rd2337;
	and.b64  	%rd2592, %rd2591, %rd2590;
	xor.b64  	%rd2593, %rd2592, %rd2570;
	add.s64 	%rd2594, %rd2583, %rd2593;
	add.s64 	%rd2595, %rd2594, %rd2589;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8684,%dummy}, %rd2584;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8685}, %rd2584;
	}
	shf.r.wrap.b32 	%r8686, %r8685, %r8684, 14;
	shf.r.wrap.b32 	%r8687, %r8684, %r8685, 14;
	mov.b64 	%rd2596, {%r8687, %r8686};
	shf.r.wrap.b32 	%r8688, %r8685, %r8684, 18;
	shf.r.wrap.b32 	%r8689, %r8684, %r8685, 18;
	mov.b64 	%rd2597, {%r8689, %r8688};
	xor.b64  	%rd2598, %rd2597, %rd2596;
	shf.l.wrap.b32 	%r8690, %r8684, %r8685, 23;
	shf.l.wrap.b32 	%r8691, %r8685, %r8684, 23;
	mov.b64 	%rd2599, {%r8691, %r8690};
	xor.b64  	%rd2600, %rd2598, %rd2599;
	xor.b64  	%rd2601, %rd2559, %rd2326;
	and.b64  	%rd2602, %rd2584, %rd2601;
	xor.b64  	%rd2603, %rd2602, %rd2326;
	add.s64 	%rd2604, %rd2376, %rd2301;
	ld.const.u64 	%rd2605, [k_sha512+528];
	add.s64 	%rd2606, %rd2604, %rd2605;
	add.s64 	%rd2607, %rd2606, %rd2603;
	add.s64 	%rd2608, %rd2607, %rd2600;
	add.s64 	%rd2609, %rd2608, %rd2312;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8692,%dummy}, %rd2595;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8693}, %rd2595;
	}
	shf.r.wrap.b32 	%r8694, %r8693, %r8692, 28;
	shf.r.wrap.b32 	%r8695, %r8692, %r8693, 28;
	mov.b64 	%rd2610, {%r8695, %r8694};
	shf.l.wrap.b32 	%r8696, %r8692, %r8693, 30;
	shf.l.wrap.b32 	%r8697, %r8693, %r8692, 30;
	mov.b64 	%rd2611, {%r8697, %r8696};
	xor.b64  	%rd2612, %rd2611, %rd2610;
	shf.l.wrap.b32 	%r8698, %r8692, %r8693, 25;
	shf.l.wrap.b32 	%r8699, %r8693, %r8692, 25;
	mov.b64 	%rd2613, {%r8699, %r8698};
	xor.b64  	%rd2614, %rd2612, %rd2613;
	xor.b64  	%rd2615, %rd2595, %rd2337;
	xor.b64  	%rd2616, %rd2595, %rd2570;
	and.b64  	%rd2617, %rd2616, %rd2615;
	xor.b64  	%rd2618, %rd2617, %rd2595;
	add.s64 	%rd2619, %rd2608, %rd2618;
	add.s64 	%rd2620, %rd2619, %rd2614;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8700,%dummy}, %rd2609;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8701}, %rd2609;
	}
	shf.r.wrap.b32 	%r8702, %r8701, %r8700, 14;
	shf.r.wrap.b32 	%r8703, %r8700, %r8701, 14;
	mov.b64 	%rd2621, {%r8703, %r8702};
	shf.r.wrap.b32 	%r8704, %r8701, %r8700, 18;
	shf.r.wrap.b32 	%r8705, %r8700, %r8701, 18;
	mov.b64 	%rd2622, {%r8705, %r8704};
	xor.b64  	%rd2623, %rd2622, %rd2621;
	shf.l.wrap.b32 	%r8706, %r8700, %r8701, 23;
	shf.l.wrap.b32 	%r8707, %r8701, %r8700, 23;
	mov.b64 	%rd2624, {%r8707, %r8706};
	xor.b64  	%rd2625, %rd2623, %rd2624;
	xor.b64  	%rd2626, %rd2584, %rd2559;
	and.b64  	%rd2627, %rd2609, %rd2626;
	xor.b64  	%rd2628, %rd2627, %rd2559;
	add.s64 	%rd2629, %rd2389, %rd2326;
	ld.const.u64 	%rd2630, [k_sha512+536];
	add.s64 	%rd2631, %rd2629, %rd2630;
	add.s64 	%rd2632, %rd2631, %rd2628;
	add.s64 	%rd2633, %rd2632, %rd2625;
	add.s64 	%rd2634, %rd2633, %rd2337;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8708,%dummy}, %rd2620;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8709}, %rd2620;
	}
	shf.r.wrap.b32 	%r8710, %r8709, %r8708, 28;
	shf.r.wrap.b32 	%r8711, %r8708, %r8709, 28;
	mov.b64 	%rd2635, {%r8711, %r8710};
	shf.l.wrap.b32 	%r8712, %r8708, %r8709, 30;
	shf.l.wrap.b32 	%r8713, %r8709, %r8708, 30;
	mov.b64 	%rd2636, {%r8713, %r8712};
	xor.b64  	%rd2637, %rd2636, %rd2635;
	shf.l.wrap.b32 	%r8714, %r8708, %r8709, 25;
	shf.l.wrap.b32 	%r8715, %r8709, %r8708, 25;
	mov.b64 	%rd2638, {%r8715, %r8714};
	xor.b64  	%rd2639, %rd2637, %rd2638;
	xor.b64  	%rd2640, %rd2620, %rd2570;
	xor.b64  	%rd2641, %rd2620, %rd2595;
	and.b64  	%rd2642, %rd2641, %rd2640;
	xor.b64  	%rd2643, %rd2642, %rd2620;
	add.s64 	%rd2644, %rd2633, %rd2643;
	add.s64 	%rd2645, %rd2644, %rd2639;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8716,%dummy}, %rd2634;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8717}, %rd2634;
	}
	shf.r.wrap.b32 	%r8718, %r8717, %r8716, 14;
	shf.r.wrap.b32 	%r8719, %r8716, %r8717, 14;
	mov.b64 	%rd2646, {%r8719, %r8718};
	shf.r.wrap.b32 	%r8720, %r8717, %r8716, 18;
	shf.r.wrap.b32 	%r8721, %r8716, %r8717, 18;
	mov.b64 	%rd2647, {%r8721, %r8720};
	xor.b64  	%rd2648, %rd2647, %rd2646;
	shf.l.wrap.b32 	%r8722, %r8716, %r8717, 23;
	shf.l.wrap.b32 	%r8723, %r8717, %r8716, 23;
	mov.b64 	%rd2649, {%r8723, %r8722};
	xor.b64  	%rd2650, %rd2648, %rd2649;
	xor.b64  	%rd2651, %rd2609, %rd2584;
	and.b64  	%rd2652, %rd2634, %rd2651;
	xor.b64  	%rd2653, %rd2652, %rd2584;
	add.s64 	%rd2654, %rd2559, %rd2402;
	ld.const.u64 	%rd2655, [k_sha512+544];
	add.s64 	%rd2656, %rd2654, %rd2655;
	add.s64 	%rd2657, %rd2656, %rd2653;
	add.s64 	%rd2658, %rd2657, %rd2650;
	add.s64 	%rd2659, %rd2658, %rd2570;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8724,%dummy}, %rd2645;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8725}, %rd2645;
	}
	shf.r.wrap.b32 	%r8726, %r8725, %r8724, 28;
	shf.r.wrap.b32 	%r8727, %r8724, %r8725, 28;
	mov.b64 	%rd2660, {%r8727, %r8726};
	shf.l.wrap.b32 	%r8728, %r8724, %r8725, 30;
	shf.l.wrap.b32 	%r8729, %r8725, %r8724, 30;
	mov.b64 	%rd2661, {%r8729, %r8728};
	xor.b64  	%rd2662, %rd2661, %rd2660;
	shf.l.wrap.b32 	%r8730, %r8724, %r8725, 25;
	shf.l.wrap.b32 	%r8731, %r8725, %r8724, 25;
	mov.b64 	%rd2663, {%r8731, %r8730};
	xor.b64  	%rd2664, %rd2662, %rd2663;
	xor.b64  	%rd2665, %rd2645, %rd2595;
	xor.b64  	%rd2666, %rd2645, %rd2620;
	and.b64  	%rd2667, %rd2666, %rd2665;
	xor.b64  	%rd2668, %rd2667, %rd2645;
	add.s64 	%rd2669, %rd2658, %rd2668;
	add.s64 	%rd2670, %rd2669, %rd2664;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8732,%dummy}, %rd2659;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8733}, %rd2659;
	}
	shf.r.wrap.b32 	%r8734, %r8733, %r8732, 14;
	shf.r.wrap.b32 	%r8735, %r8732, %r8733, 14;
	mov.b64 	%rd2671, {%r8735, %r8734};
	shf.r.wrap.b32 	%r8736, %r8733, %r8732, 18;
	shf.r.wrap.b32 	%r8737, %r8732, %r8733, 18;
	mov.b64 	%rd2672, {%r8737, %r8736};
	xor.b64  	%rd2673, %rd2672, %rd2671;
	shf.l.wrap.b32 	%r8738, %r8732, %r8733, 23;
	shf.l.wrap.b32 	%r8739, %r8733, %r8732, 23;
	mov.b64 	%rd2674, {%r8739, %r8738};
	xor.b64  	%rd2675, %rd2673, %rd2674;
	xor.b64  	%rd2676, %rd2634, %rd2609;
	and.b64  	%rd2677, %rd2659, %rd2676;
	xor.b64  	%rd2678, %rd2677, %rd2609;
	add.s64 	%rd2679, %rd2584, %rd2415;
	ld.const.u64 	%rd2680, [k_sha512+552];
	add.s64 	%rd2681, %rd2679, %rd2680;
	add.s64 	%rd2682, %rd2681, %rd2678;
	add.s64 	%rd2683, %rd2682, %rd2675;
	add.s64 	%rd2684, %rd2683, %rd2595;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8740,%dummy}, %rd2670;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8741}, %rd2670;
	}
	shf.r.wrap.b32 	%r8742, %r8741, %r8740, 28;
	shf.r.wrap.b32 	%r8743, %r8740, %r8741, 28;
	mov.b64 	%rd2685, {%r8743, %r8742};
	shf.l.wrap.b32 	%r8744, %r8740, %r8741, 30;
	shf.l.wrap.b32 	%r8745, %r8741, %r8740, 30;
	mov.b64 	%rd2686, {%r8745, %r8744};
	xor.b64  	%rd2687, %rd2686, %rd2685;
	shf.l.wrap.b32 	%r8746, %r8740, %r8741, 25;
	shf.l.wrap.b32 	%r8747, %r8741, %r8740, 25;
	mov.b64 	%rd2688, {%r8747, %r8746};
	xor.b64  	%rd2689, %rd2687, %rd2688;
	xor.b64  	%rd2690, %rd2670, %rd2620;
	xor.b64  	%rd2691, %rd2670, %rd2645;
	and.b64  	%rd2692, %rd2691, %rd2690;
	xor.b64  	%rd2693, %rd2692, %rd2670;
	add.s64 	%rd2694, %rd2683, %rd2693;
	add.s64 	%rd2695, %rd2694, %rd2689;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8748,%dummy}, %rd2684;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8749}, %rd2684;
	}
	shf.r.wrap.b32 	%r8750, %r8749, %r8748, 14;
	shf.r.wrap.b32 	%r8751, %r8748, %r8749, 14;
	mov.b64 	%rd2696, {%r8751, %r8750};
	shf.r.wrap.b32 	%r8752, %r8749, %r8748, 18;
	shf.r.wrap.b32 	%r8753, %r8748, %r8749, 18;
	mov.b64 	%rd2697, {%r8753, %r8752};
	xor.b64  	%rd2698, %rd2697, %rd2696;
	shf.l.wrap.b32 	%r8754, %r8748, %r8749, 23;
	shf.l.wrap.b32 	%r8755, %r8749, %r8748, 23;
	mov.b64 	%rd2699, {%r8755, %r8754};
	xor.b64  	%rd2700, %rd2698, %rd2699;
	xor.b64  	%rd2701, %rd2659, %rd2634;
	and.b64  	%rd2702, %rd2684, %rd2701;
	xor.b64  	%rd2703, %rd2702, %rd2634;
	add.s64 	%rd2704, %rd2609, %rd2428;
	ld.const.u64 	%rd2705, [k_sha512+560];
	add.s64 	%rd2706, %rd2704, %rd2705;
	add.s64 	%rd2707, %rd2706, %rd2703;
	add.s64 	%rd2708, %rd2707, %rd2700;
	add.s64 	%rd2709, %rd2708, %rd2620;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8756,%dummy}, %rd2695;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8757}, %rd2695;
	}
	shf.r.wrap.b32 	%r8758, %r8757, %r8756, 28;
	shf.r.wrap.b32 	%r8759, %r8756, %r8757, 28;
	mov.b64 	%rd2710, {%r8759, %r8758};
	shf.l.wrap.b32 	%r8760, %r8756, %r8757, 30;
	shf.l.wrap.b32 	%r8761, %r8757, %r8756, 30;
	mov.b64 	%rd2711, {%r8761, %r8760};
	xor.b64  	%rd2712, %rd2711, %rd2710;
	shf.l.wrap.b32 	%r8762, %r8756, %r8757, 25;
	shf.l.wrap.b32 	%r8763, %r8757, %r8756, 25;
	mov.b64 	%rd2713, {%r8763, %r8762};
	xor.b64  	%rd2714, %rd2712, %rd2713;
	xor.b64  	%rd2715, %rd2695, %rd2645;
	xor.b64  	%rd2716, %rd2695, %rd2670;
	and.b64  	%rd2717, %rd2716, %rd2715;
	xor.b64  	%rd2718, %rd2717, %rd2695;
	add.s64 	%rd2719, %rd2708, %rd2718;
	add.s64 	%rd2720, %rd2719, %rd2714;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8764,%dummy}, %rd2709;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8765}, %rd2709;
	}
	shf.r.wrap.b32 	%r8766, %r8765, %r8764, 14;
	shf.r.wrap.b32 	%r8767, %r8764, %r8765, 14;
	mov.b64 	%rd2721, {%r8767, %r8766};
	shf.r.wrap.b32 	%r8768, %r8765, %r8764, 18;
	shf.r.wrap.b32 	%r8769, %r8764, %r8765, 18;
	mov.b64 	%rd2722, {%r8769, %r8768};
	xor.b64  	%rd2723, %rd2722, %rd2721;
	shf.l.wrap.b32 	%r8770, %r8764, %r8765, 23;
	shf.l.wrap.b32 	%r8771, %r8765, %r8764, 23;
	mov.b64 	%rd2724, {%r8771, %r8770};
	xor.b64  	%rd2725, %rd2723, %rd2724;
	xor.b64  	%rd2726, %rd2684, %rd2659;
	and.b64  	%rd2727, %rd2709, %rd2726;
	xor.b64  	%rd2728, %rd2727, %rd2659;
	add.s64 	%rd2729, %rd2634, %rd2441;
	ld.const.u64 	%rd2730, [k_sha512+568];
	add.s64 	%rd2731, %rd2729, %rd2730;
	add.s64 	%rd2732, %rd2731, %rd2728;
	add.s64 	%rd2733, %rd2732, %rd2725;
	add.s64 	%rd2734, %rd2733, %rd2645;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8772,%dummy}, %rd2720;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8773}, %rd2720;
	}
	shf.r.wrap.b32 	%r8774, %r8773, %r8772, 28;
	shf.r.wrap.b32 	%r8775, %r8772, %r8773, 28;
	mov.b64 	%rd2735, {%r8775, %r8774};
	shf.l.wrap.b32 	%r8776, %r8772, %r8773, 30;
	shf.l.wrap.b32 	%r8777, %r8773, %r8772, 30;
	mov.b64 	%rd2736, {%r8777, %r8776};
	xor.b64  	%rd2737, %rd2736, %rd2735;
	shf.l.wrap.b32 	%r8778, %r8772, %r8773, 25;
	shf.l.wrap.b32 	%r8779, %r8773, %r8772, 25;
	mov.b64 	%rd2738, {%r8779, %r8778};
	xor.b64  	%rd2739, %rd2737, %rd2738;
	xor.b64  	%rd2740, %rd2720, %rd2670;
	xor.b64  	%rd2741, %rd2720, %rd2695;
	and.b64  	%rd2742, %rd2741, %rd2740;
	xor.b64  	%rd2743, %rd2742, %rd2720;
	add.s64 	%rd2744, %rd2733, %rd2743;
	add.s64 	%rd2745, %rd2744, %rd2739;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8780,%dummy}, %rd2734;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8781}, %rd2734;
	}
	shf.r.wrap.b32 	%r8782, %r8781, %r8780, 14;
	shf.r.wrap.b32 	%r8783, %r8780, %r8781, 14;
	mov.b64 	%rd2746, {%r8783, %r8782};
	shf.r.wrap.b32 	%r8784, %r8781, %r8780, 18;
	shf.r.wrap.b32 	%r8785, %r8780, %r8781, 18;
	mov.b64 	%rd2747, {%r8785, %r8784};
	xor.b64  	%rd2748, %rd2747, %rd2746;
	shf.l.wrap.b32 	%r8786, %r8780, %r8781, 23;
	shf.l.wrap.b32 	%r8787, %r8781, %r8780, 23;
	mov.b64 	%rd2749, {%r8787, %r8786};
	xor.b64  	%rd2750, %rd2748, %rd2749;
	xor.b64  	%rd2751, %rd2709, %rd2684;
	and.b64  	%rd2752, %rd2734, %rd2751;
	xor.b64  	%rd2753, %rd2752, %rd2684;
	add.s64 	%rd2754, %rd2659, %rd2454;
	ld.const.u64 	%rd2755, [k_sha512+576];
	add.s64 	%rd2756, %rd2754, %rd2755;
	add.s64 	%rd2757, %rd2756, %rd2753;
	add.s64 	%rd2758, %rd2757, %rd2750;
	add.s64 	%rd2759, %rd2758, %rd2670;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8788,%dummy}, %rd2745;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8789}, %rd2745;
	}
	shf.r.wrap.b32 	%r8790, %r8789, %r8788, 28;
	shf.r.wrap.b32 	%r8791, %r8788, %r8789, 28;
	mov.b64 	%rd2760, {%r8791, %r8790};
	shf.l.wrap.b32 	%r8792, %r8788, %r8789, 30;
	shf.l.wrap.b32 	%r8793, %r8789, %r8788, 30;
	mov.b64 	%rd2761, {%r8793, %r8792};
	xor.b64  	%rd2762, %rd2761, %rd2760;
	shf.l.wrap.b32 	%r8794, %r8788, %r8789, 25;
	shf.l.wrap.b32 	%r8795, %r8789, %r8788, 25;
	mov.b64 	%rd2763, {%r8795, %r8794};
	xor.b64  	%rd2764, %rd2762, %rd2763;
	xor.b64  	%rd2765, %rd2745, %rd2695;
	xor.b64  	%rd2766, %rd2745, %rd2720;
	and.b64  	%rd2767, %rd2766, %rd2765;
	xor.b64  	%rd2768, %rd2767, %rd2745;
	add.s64 	%rd2769, %rd2758, %rd2768;
	add.s64 	%rd2770, %rd2769, %rd2764;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8796,%dummy}, %rd2759;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8797}, %rd2759;
	}
	shf.r.wrap.b32 	%r8798, %r8797, %r8796, 14;
	shf.r.wrap.b32 	%r8799, %r8796, %r8797, 14;
	mov.b64 	%rd2771, {%r8799, %r8798};
	shf.r.wrap.b32 	%r8800, %r8797, %r8796, 18;
	shf.r.wrap.b32 	%r8801, %r8796, %r8797, 18;
	mov.b64 	%rd2772, {%r8801, %r8800};
	xor.b64  	%rd2773, %rd2772, %rd2771;
	shf.l.wrap.b32 	%r8802, %r8796, %r8797, 23;
	shf.l.wrap.b32 	%r8803, %r8797, %r8796, 23;
	mov.b64 	%rd2774, {%r8803, %r8802};
	xor.b64  	%rd2775, %rd2773, %rd2774;
	xor.b64  	%rd2776, %rd2734, %rd2709;
	and.b64  	%rd2777, %rd2759, %rd2776;
	xor.b64  	%rd2778, %rd2777, %rd2709;
	add.s64 	%rd2779, %rd2684, %rd2467;
	ld.const.u64 	%rd2780, [k_sha512+584];
	add.s64 	%rd2781, %rd2779, %rd2780;
	add.s64 	%rd2782, %rd2781, %rd2778;
	add.s64 	%rd2783, %rd2782, %rd2775;
	add.s64 	%rd2784, %rd2783, %rd2695;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8804,%dummy}, %rd2770;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8805}, %rd2770;
	}
	shf.r.wrap.b32 	%r8806, %r8805, %r8804, 28;
	shf.r.wrap.b32 	%r8807, %r8804, %r8805, 28;
	mov.b64 	%rd2785, {%r8807, %r8806};
	shf.l.wrap.b32 	%r8808, %r8804, %r8805, 30;
	shf.l.wrap.b32 	%r8809, %r8805, %r8804, 30;
	mov.b64 	%rd2786, {%r8809, %r8808};
	xor.b64  	%rd2787, %rd2786, %rd2785;
	shf.l.wrap.b32 	%r8810, %r8804, %r8805, 25;
	shf.l.wrap.b32 	%r8811, %r8805, %r8804, 25;
	mov.b64 	%rd2788, {%r8811, %r8810};
	xor.b64  	%rd2789, %rd2787, %rd2788;
	xor.b64  	%rd2790, %rd2770, %rd2720;
	xor.b64  	%rd2791, %rd2770, %rd2745;
	and.b64  	%rd2792, %rd2791, %rd2790;
	xor.b64  	%rd2793, %rd2792, %rd2770;
	add.s64 	%rd2794, %rd2783, %rd2793;
	add.s64 	%rd2795, %rd2794, %rd2789;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8812,%dummy}, %rd2784;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8813}, %rd2784;
	}
	shf.r.wrap.b32 	%r8814, %r8813, %r8812, 14;
	shf.r.wrap.b32 	%r8815, %r8812, %r8813, 14;
	mov.b64 	%rd2796, {%r8815, %r8814};
	shf.r.wrap.b32 	%r8816, %r8813, %r8812, 18;
	shf.r.wrap.b32 	%r8817, %r8812, %r8813, 18;
	mov.b64 	%rd2797, {%r8817, %r8816};
	xor.b64  	%rd2798, %rd2797, %rd2796;
	shf.l.wrap.b32 	%r8818, %r8812, %r8813, 23;
	shf.l.wrap.b32 	%r8819, %r8813, %r8812, 23;
	mov.b64 	%rd2799, {%r8819, %r8818};
	xor.b64  	%rd2800, %rd2798, %rd2799;
	xor.b64  	%rd2801, %rd2759, %rd2734;
	and.b64  	%rd2802, %rd2784, %rd2801;
	xor.b64  	%rd2803, %rd2802, %rd2734;
	add.s64 	%rd2804, %rd2709, %rd2480;
	ld.const.u64 	%rd2805, [k_sha512+592];
	add.s64 	%rd2806, %rd2804, %rd2805;
	add.s64 	%rd2807, %rd2806, %rd2803;
	add.s64 	%rd2808, %rd2807, %rd2800;
	add.s64 	%rd2809, %rd2808, %rd2720;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8820,%dummy}, %rd2795;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8821}, %rd2795;
	}
	shf.r.wrap.b32 	%r8822, %r8821, %r8820, 28;
	shf.r.wrap.b32 	%r8823, %r8820, %r8821, 28;
	mov.b64 	%rd2810, {%r8823, %r8822};
	shf.l.wrap.b32 	%r8824, %r8820, %r8821, 30;
	shf.l.wrap.b32 	%r8825, %r8821, %r8820, 30;
	mov.b64 	%rd2811, {%r8825, %r8824};
	xor.b64  	%rd2812, %rd2811, %rd2810;
	shf.l.wrap.b32 	%r8826, %r8820, %r8821, 25;
	shf.l.wrap.b32 	%r8827, %r8821, %r8820, 25;
	mov.b64 	%rd2813, {%r8827, %r8826};
	xor.b64  	%rd2814, %rd2812, %rd2813;
	xor.b64  	%rd2815, %rd2795, %rd2745;
	xor.b64  	%rd2816, %rd2795, %rd2770;
	and.b64  	%rd2817, %rd2816, %rd2815;
	xor.b64  	%rd2818, %rd2817, %rd2795;
	add.s64 	%rd2819, %rd2808, %rd2818;
	add.s64 	%rd2820, %rd2819, %rd2814;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8828,%dummy}, %rd2809;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8829}, %rd2809;
	}
	shf.r.wrap.b32 	%r8830, %r8829, %r8828, 14;
	shf.r.wrap.b32 	%r8831, %r8828, %r8829, 14;
	mov.b64 	%rd2821, {%r8831, %r8830};
	shf.r.wrap.b32 	%r8832, %r8829, %r8828, 18;
	shf.r.wrap.b32 	%r8833, %r8828, %r8829, 18;
	mov.b64 	%rd2822, {%r8833, %r8832};
	xor.b64  	%rd2823, %rd2822, %rd2821;
	shf.l.wrap.b32 	%r8834, %r8828, %r8829, 23;
	shf.l.wrap.b32 	%r8835, %r8829, %r8828, 23;
	mov.b64 	%rd2824, {%r8835, %r8834};
	xor.b64  	%rd2825, %rd2823, %rd2824;
	xor.b64  	%rd2826, %rd2784, %rd2759;
	and.b64  	%rd2827, %rd2809, %rd2826;
	xor.b64  	%rd2828, %rd2827, %rd2759;
	add.s64 	%rd2829, %rd2734, %rd2493;
	ld.const.u64 	%rd2830, [k_sha512+600];
	add.s64 	%rd2831, %rd2829, %rd2830;
	add.s64 	%rd2832, %rd2831, %rd2828;
	add.s64 	%rd2833, %rd2832, %rd2825;
	add.s64 	%rd2834, %rd2833, %rd2745;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8836,%dummy}, %rd2820;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8837}, %rd2820;
	}
	shf.r.wrap.b32 	%r8838, %r8837, %r8836, 28;
	shf.r.wrap.b32 	%r8839, %r8836, %r8837, 28;
	mov.b64 	%rd2835, {%r8839, %r8838};
	shf.l.wrap.b32 	%r8840, %r8836, %r8837, 30;
	shf.l.wrap.b32 	%r8841, %r8837, %r8836, 30;
	mov.b64 	%rd2836, {%r8841, %r8840};
	xor.b64  	%rd2837, %rd2836, %rd2835;
	shf.l.wrap.b32 	%r8842, %r8836, %r8837, 25;
	shf.l.wrap.b32 	%r8843, %r8837, %r8836, 25;
	mov.b64 	%rd2838, {%r8843, %r8842};
	xor.b64  	%rd2839, %rd2837, %rd2838;
	xor.b64  	%rd2840, %rd2820, %rd2770;
	xor.b64  	%rd2841, %rd2820, %rd2795;
	and.b64  	%rd2842, %rd2841, %rd2840;
	xor.b64  	%rd2843, %rd2842, %rd2820;
	add.s64 	%rd2844, %rd2833, %rd2843;
	add.s64 	%rd2845, %rd2844, %rd2839;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8844,%dummy}, %rd2834;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8845}, %rd2834;
	}
	shf.r.wrap.b32 	%r8846, %r8845, %r8844, 14;
	shf.r.wrap.b32 	%r8847, %r8844, %r8845, 14;
	mov.b64 	%rd2846, {%r8847, %r8846};
	shf.r.wrap.b32 	%r8848, %r8845, %r8844, 18;
	shf.r.wrap.b32 	%r8849, %r8844, %r8845, 18;
	mov.b64 	%rd2847, {%r8849, %r8848};
	xor.b64  	%rd2848, %rd2847, %rd2846;
	shf.l.wrap.b32 	%r8850, %r8844, %r8845, 23;
	shf.l.wrap.b32 	%r8851, %r8845, %r8844, 23;
	mov.b64 	%rd2849, {%r8851, %r8850};
	xor.b64  	%rd2850, %rd2848, %rd2849;
	xor.b64  	%rd2851, %rd2809, %rd2784;
	and.b64  	%rd2852, %rd2834, %rd2851;
	xor.b64  	%rd2853, %rd2852, %rd2784;
	add.s64 	%rd2854, %rd2759, %rd2506;
	ld.const.u64 	%rd2855, [k_sha512+608];
	add.s64 	%rd2856, %rd2854, %rd2855;
	add.s64 	%rd2857, %rd2856, %rd2853;
	add.s64 	%rd2858, %rd2857, %rd2850;
	add.s64 	%rd2859, %rd2858, %rd2770;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8852,%dummy}, %rd2845;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8853}, %rd2845;
	}
	shf.r.wrap.b32 	%r8854, %r8853, %r8852, 28;
	shf.r.wrap.b32 	%r8855, %r8852, %r8853, 28;
	mov.b64 	%rd2860, {%r8855, %r8854};
	shf.l.wrap.b32 	%r8856, %r8852, %r8853, 30;
	shf.l.wrap.b32 	%r8857, %r8853, %r8852, 30;
	mov.b64 	%rd2861, {%r8857, %r8856};
	xor.b64  	%rd2862, %rd2861, %rd2860;
	shf.l.wrap.b32 	%r8858, %r8852, %r8853, 25;
	shf.l.wrap.b32 	%r8859, %r8853, %r8852, 25;
	mov.b64 	%rd2863, {%r8859, %r8858};
	xor.b64  	%rd2864, %rd2862, %rd2863;
	xor.b64  	%rd2865, %rd2845, %rd2795;
	xor.b64  	%rd2866, %rd2845, %rd2820;
	and.b64  	%rd2867, %rd2866, %rd2865;
	xor.b64  	%rd2868, %rd2867, %rd2845;
	add.s64 	%rd2869, %rd2858, %rd2868;
	add.s64 	%rd2870, %rd2869, %rd2864;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8860,%dummy}, %rd2859;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8861}, %rd2859;
	}
	shf.r.wrap.b32 	%r8862, %r8861, %r8860, 14;
	shf.r.wrap.b32 	%r8863, %r8860, %r8861, 14;
	mov.b64 	%rd2871, {%r8863, %r8862};
	shf.r.wrap.b32 	%r8864, %r8861, %r8860, 18;
	shf.r.wrap.b32 	%r8865, %r8860, %r8861, 18;
	mov.b64 	%rd2872, {%r8865, %r8864};
	xor.b64  	%rd2873, %rd2872, %rd2871;
	shf.l.wrap.b32 	%r8866, %r8860, %r8861, 23;
	shf.l.wrap.b32 	%r8867, %r8861, %r8860, 23;
	mov.b64 	%rd2874, {%r8867, %r8866};
	xor.b64  	%rd2875, %rd2873, %rd2874;
	xor.b64  	%rd2876, %rd2834, %rd2809;
	and.b64  	%rd2877, %rd2859, %rd2876;
	xor.b64  	%rd2878, %rd2877, %rd2809;
	add.s64 	%rd2879, %rd2784, %rd2519;
	ld.const.u64 	%rd2880, [k_sha512+616];
	add.s64 	%rd2881, %rd2879, %rd2880;
	add.s64 	%rd2882, %rd2881, %rd2878;
	add.s64 	%rd2883, %rd2882, %rd2875;
	add.s64 	%rd2884, %rd2883, %rd2795;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8868,%dummy}, %rd2870;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8869}, %rd2870;
	}
	shf.r.wrap.b32 	%r8870, %r8869, %r8868, 28;
	shf.r.wrap.b32 	%r8871, %r8868, %r8869, 28;
	mov.b64 	%rd2885, {%r8871, %r8870};
	shf.l.wrap.b32 	%r8872, %r8868, %r8869, 30;
	shf.l.wrap.b32 	%r8873, %r8869, %r8868, 30;
	mov.b64 	%rd2886, {%r8873, %r8872};
	xor.b64  	%rd2887, %rd2886, %rd2885;
	shf.l.wrap.b32 	%r8874, %r8868, %r8869, 25;
	shf.l.wrap.b32 	%r8875, %r8869, %r8868, 25;
	mov.b64 	%rd2888, {%r8875, %r8874};
	xor.b64  	%rd2889, %rd2887, %rd2888;
	xor.b64  	%rd2890, %rd2870, %rd2820;
	xor.b64  	%rd2891, %rd2870, %rd2845;
	and.b64  	%rd2892, %rd2891, %rd2890;
	xor.b64  	%rd2893, %rd2892, %rd2870;
	add.s64 	%rd2894, %rd2883, %rd2893;
	add.s64 	%rd2895, %rd2894, %rd2889;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8876,%dummy}, %rd2884;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8877}, %rd2884;
	}
	shf.r.wrap.b32 	%r8878, %r8877, %r8876, 14;
	shf.r.wrap.b32 	%r8879, %r8876, %r8877, 14;
	mov.b64 	%rd2896, {%r8879, %r8878};
	shf.r.wrap.b32 	%r8880, %r8877, %r8876, 18;
	shf.r.wrap.b32 	%r8881, %r8876, %r8877, 18;
	mov.b64 	%rd2897, {%r8881, %r8880};
	xor.b64  	%rd2898, %rd2897, %rd2896;
	shf.l.wrap.b32 	%r8882, %r8876, %r8877, 23;
	shf.l.wrap.b32 	%r8883, %r8877, %r8876, 23;
	mov.b64 	%rd2899, {%r8883, %r8882};
	xor.b64  	%rd2900, %rd2898, %rd2899;
	xor.b64  	%rd2901, %rd2859, %rd2834;
	and.b64  	%rd2902, %rd2884, %rd2901;
	xor.b64  	%rd2903, %rd2902, %rd2834;
	add.s64 	%rd2904, %rd2809, %rd2532;
	ld.const.u64 	%rd2905, [k_sha512+624];
	add.s64 	%rd2906, %rd2904, %rd2905;
	add.s64 	%rd2907, %rd2906, %rd2903;
	add.s64 	%rd2908, %rd2907, %rd2900;
	add.s64 	%rd2909, %rd2908, %rd2820;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8884,%dummy}, %rd2895;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8885}, %rd2895;
	}
	shf.r.wrap.b32 	%r8886, %r8885, %r8884, 28;
	shf.r.wrap.b32 	%r8887, %r8884, %r8885, 28;
	mov.b64 	%rd2910, {%r8887, %r8886};
	shf.l.wrap.b32 	%r8888, %r8884, %r8885, 30;
	shf.l.wrap.b32 	%r8889, %r8885, %r8884, 30;
	mov.b64 	%rd2911, {%r8889, %r8888};
	xor.b64  	%rd2912, %rd2911, %rd2910;
	shf.l.wrap.b32 	%r8890, %r8884, %r8885, 25;
	shf.l.wrap.b32 	%r8891, %r8885, %r8884, 25;
	mov.b64 	%rd2913, {%r8891, %r8890};
	xor.b64  	%rd2914, %rd2912, %rd2913;
	xor.b64  	%rd2915, %rd2895, %rd2845;
	xor.b64  	%rd2916, %rd2895, %rd2870;
	and.b64  	%rd2917, %rd2916, %rd2915;
	xor.b64  	%rd2918, %rd2917, %rd2895;
	add.s64 	%rd2919, %rd2908, %rd2918;
	add.s64 	%rd2920, %rd2919, %rd2914;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8892,%dummy}, %rd2909;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8893}, %rd2909;
	}
	shf.r.wrap.b32 	%r8894, %r8893, %r8892, 14;
	shf.r.wrap.b32 	%r8895, %r8892, %r8893, 14;
	mov.b64 	%rd2921, {%r8895, %r8894};
	shf.r.wrap.b32 	%r8896, %r8893, %r8892, 18;
	shf.r.wrap.b32 	%r8897, %r8892, %r8893, 18;
	mov.b64 	%rd2922, {%r8897, %r8896};
	xor.b64  	%rd2923, %rd2922, %rd2921;
	shf.l.wrap.b32 	%r8898, %r8892, %r8893, 23;
	shf.l.wrap.b32 	%r8899, %r8893, %r8892, 23;
	mov.b64 	%rd2924, {%r8899, %r8898};
	xor.b64  	%rd2925, %rd2923, %rd2924;
	xor.b64  	%rd2926, %rd2884, %rd2859;
	and.b64  	%rd2927, %rd2909, %rd2926;
	xor.b64  	%rd2928, %rd2927, %rd2859;
	add.s64 	%rd2929, %rd2834, %rd2545;
	ld.const.u64 	%rd2930, [k_sha512+632];
	add.s64 	%rd2931, %rd2929, %rd2930;
	add.s64 	%rd2932, %rd2931, %rd2928;
	add.s64 	%rd2933, %rd2932, %rd2925;
	add.s64 	%rd2934, %rd2933, %rd2845;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8900,%dummy}, %rd2920;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8901}, %rd2920;
	}
	shf.r.wrap.b32 	%r8902, %r8901, %r8900, 28;
	shf.r.wrap.b32 	%r8903, %r8900, %r8901, 28;
	mov.b64 	%rd2935, {%r8903, %r8902};
	shf.l.wrap.b32 	%r8904, %r8900, %r8901, 30;
	shf.l.wrap.b32 	%r8905, %r8901, %r8900, 30;
	mov.b64 	%rd2936, {%r8905, %r8904};
	xor.b64  	%rd2937, %rd2936, %rd2935;
	shf.l.wrap.b32 	%r8906, %r8900, %r8901, 25;
	shf.l.wrap.b32 	%r8907, %r8901, %r8900, 25;
	mov.b64 	%rd2938, {%r8907, %r8906};
	xor.b64  	%rd2939, %rd2937, %rd2938;
	xor.b64  	%rd2940, %rd2920, %rd2870;
	xor.b64  	%rd2941, %rd2920, %rd2895;
	and.b64  	%rd2942, %rd2941, %rd2940;
	xor.b64  	%rd2943, %rd2942, %rd2920;
	add.s64 	%rd2944, %rd2933, %rd2943;
	add.s64 	%rd2945, %rd2944, %rd2939;
	add.s64 	%rd2946, %rd140, %rd2945;
	st.local.u64 	[%rd1], %rd2946;
	add.s64 	%rd2947, %rd148, %rd2920;
	st.local.u64 	[%rd1+8], %rd2947;
	add.s64 	%rd2948, %rd146, %rd2895;
	st.local.u64 	[%rd1+16], %rd2948;
	add.s64 	%rd2949, %rd138, %rd2870;
	st.local.u64 	[%rd1+24], %rd2949;
	add.s64 	%rd2950, %rd122, %rd2934;
	st.local.u64 	[%rd1+32], %rd2950;
	add.s64 	%rd2951, %rd129, %rd2909;
	st.local.u64 	[%rd1+40], %rd2951;
	add.s64 	%rd2952, %rd128, %rd2884;
	st.local.u64 	[%rd1+48], %rd2952;
	add.s64 	%rd2953, %rd133, %rd2859;
	st.local.u64 	[%rd1+56], %rd2953;
	st.local.v2.u32 	[%rd1+64], {%r8917, %r8916};
	st.local.v2.u32 	[%rd1+72], {%r8915, %r8914};
	st.local.v2.u32 	[%rd1+80], {%r8921, %r8920};
	st.local.v2.u32 	[%rd1+88], {%r8919, %r8918};
	st.local.v2.u32 	[%rd1+96], {%r8925, %r8924};
	st.local.v2.u32 	[%rd1+104], {%r8923, %r8922};
	st.local.v2.u32 	[%rd1+112], {%r8929, %r8928};
	st.local.v2.u32 	[%rd1+120], {%r8927, %r8926};
	st.local.v2.u32 	[%rd1+128], {%r8933, %r8932};
	st.local.v2.u32 	[%rd1+136], {%r8931, %r8930};
	st.local.v2.u32 	[%rd1+144], {%r8937, %r8936};
	st.local.v2.u32 	[%rd1+152], {%r8935, %r8934};
	st.local.v2.u32 	[%rd1+160], {%r8941, %r8940};
	st.local.v2.u32 	[%rd1+168], {%r8939, %r8938};
	st.local.v2.u32 	[%rd1+176], {%r8945, %r8944};
	st.local.v2.u32 	[%rd1+184], {%r8943, %r8942};
	add.s32 	%r8911, %r8911, 64;
	add.s32 	%r8912, %r8912, 16;

BB2_1:
	ld.param.u32 	%r8909, [sha512_update_global_utf16le_swap_param_2];
	add.s32 	%r8908, %r8909, -64;
	ld.param.u64 	%rd2954, [sha512_update_global_utf16le_swap_param_1];
	mul.wide.s32 	%rd36, %r8912, 4;
	add.s64 	%rd37, %rd2954, %rd36;
	ld.global.u32 	%r575, [%rd37];
	st.local.u32 	[%rd2], %r575;
	add.s32 	%r576, %r8912, 1;
	mul.wide.s32 	%rd38, %r576, 4;
	add.s64 	%rd39, %rd2954, %rd38;
	ld.global.u32 	%r577, [%rd39];
	st.local.u32 	[%rd2+4], %r577;
	add.s32 	%r578, %r8912, 2;
	mul.wide.s32 	%rd40, %r578, 4;
	add.s64 	%rd41, %rd2954, %rd40;
	ld.global.u32 	%r579, [%rd41];
	st.local.u32 	[%rd2+8], %r579;
	add.s32 	%r580, %r8912, 3;
	mul.wide.s32 	%rd42, %r580, 4;
	add.s64 	%rd43, %rd2954, %rd42;
	ld.global.u32 	%r581, [%rd43];
	st.local.u32 	[%rd2+12], %r581;
	add.s32 	%r582, %r8912, 4;
	mul.wide.s32 	%rd44, %r582, 4;
	add.s64 	%rd45, %rd2954, %rd44;
	ld.global.u32 	%r583, [%rd45];
	st.local.u32 	[%rd3], %r583;
	add.s32 	%r584, %r8912, 5;
	mul.wide.s32 	%rd46, %r584, 4;
	add.s64 	%rd47, %rd2954, %rd46;
	ld.global.u32 	%r585, [%rd47];
	st.local.u32 	[%rd3+4], %r585;
	add.s32 	%r586, %r8912, 6;
	mul.wide.s32 	%rd48, %r586, 4;
	add.s64 	%rd49, %rd2954, %rd48;
	ld.global.u32 	%r587, [%rd49];
	st.local.u32 	[%rd3+8], %r587;
	add.s32 	%r588, %r8912, 7;
	mul.wide.s32 	%rd50, %r588, 4;
	add.s64 	%rd51, %rd2954, %rd50;
	ld.global.u32 	%r589, [%rd51];
	st.local.u32 	[%rd3+12], %r589;
	add.s32 	%r590, %r8912, 8;
	mul.wide.s32 	%rd52, %r590, 4;
	add.s64 	%rd53, %rd2954, %rd52;
	ld.global.u32 	%r591, [%rd53];
	st.local.u32 	[%rd4], %r591;
	add.s32 	%r592, %r8912, 9;
	mul.wide.s32 	%rd54, %r592, 4;
	add.s64 	%rd55, %rd2954, %rd54;
	ld.global.u32 	%r593, [%rd55];
	st.local.u32 	[%rd4+4], %r593;
	add.s32 	%r594, %r8912, 10;
	mul.wide.s32 	%rd56, %r594, 4;
	add.s64 	%rd57, %rd2954, %rd56;
	ld.global.u32 	%r595, [%rd57];
	st.local.u32 	[%rd4+8], %r595;
	add.s32 	%r596, %r8912, 11;
	mul.wide.s32 	%rd58, %r596, 4;
	add.s64 	%rd59, %rd2954, %rd58;
	ld.global.u32 	%r597, [%rd59];
	st.local.u32 	[%rd4+12], %r597;
	add.s32 	%r598, %r8912, 12;
	mul.wide.s32 	%rd60, %r598, 4;
	add.s64 	%rd61, %rd2954, %rd60;
	ld.global.u32 	%r599, [%rd61];
	st.local.u32 	[%rd5], %r599;
	add.s32 	%r600, %r8912, 13;
	mul.wide.s32 	%rd62, %r600, 4;
	add.s64 	%rd63, %rd2954, %rd62;
	ld.global.u32 	%r601, [%rd63];
	st.local.u32 	[%rd5+4], %r601;
	add.s32 	%r602, %r8912, 14;
	mul.wide.s32 	%rd64, %r602, 4;
	add.s64 	%rd65, %rd2954, %rd64;
	ld.global.u32 	%r603, [%rd65];
	st.local.u32 	[%rd5+8], %r603;
	add.s32 	%r604, %r8912, 15;
	mul.wide.s32 	%rd66, %r604, 4;
	add.s64 	%rd67, %rd2954, %rd66;
	ld.global.u32 	%r4, [%rd67];
	st.local.u32 	[%rd5+12], %r4;
	setp.lt.s32	%p1, %r8911, %r8908;
	@%p1 bra 	BB2_3;
	bra.uni 	BB2_2;

BB2_3:
	mov.u32 	%r8913, 0;
	mov.u32 	%r922, 29554;
	// inline asm
	prmt.b32 %r799, %r4, %r8913, %r922;
	// inline asm
	st.local.u32 	[%rd9+12], %r799;
	ld.local.u32 	%r804, [%rd5+12];
	mov.u32 	%r926, 29040;
	// inline asm
	prmt.b32 %r803, %r804, %r8913, %r926;
	// inline asm
	st.local.u32 	[%rd9+8], %r803;
	ld.local.u32 	%r808, [%rd5+8];
	// inline asm
	prmt.b32 %r807, %r808, %r8913, %r922;
	// inline asm
	st.local.u32 	[%rd9+4], %r807;
	ld.local.u32 	%r812, [%rd5+8];
	// inline asm
	prmt.b32 %r811, %r812, %r8913, %r926;
	// inline asm
	st.local.u32 	[%rd9], %r811;
	ld.local.u32 	%r816, [%rd5+4];
	// inline asm
	prmt.b32 %r815, %r816, %r8913, %r922;
	// inline asm
	st.local.u32 	[%rd8+12], %r815;
	ld.local.u32 	%r820, [%rd5+4];
	// inline asm
	prmt.b32 %r819, %r820, %r8913, %r926;
	// inline asm
	st.local.u32 	[%rd8+8], %r819;
	ld.local.u32 	%r824, [%rd5];
	// inline asm
	prmt.b32 %r823, %r824, %r8913, %r922;
	// inline asm
	st.local.u32 	[%rd8+4], %r823;
	ld.local.u32 	%r828, [%rd5];
	// inline asm
	prmt.b32 %r827, %r828, %r8913, %r926;
	// inline asm
	st.local.u32 	[%rd8], %r827;
	ld.local.u32 	%r832, [%rd4+12];
	// inline asm
	prmt.b32 %r831, %r832, %r8913, %r922;
	// inline asm
	st.local.u32 	[%rd7+12], %r831;
	ld.local.u32 	%r836, [%rd4+12];
	// inline asm
	prmt.b32 %r835, %r836, %r8913, %r926;
	// inline asm
	st.local.u32 	[%rd7+8], %r835;
	ld.local.u32 	%r840, [%rd4+8];
	// inline asm
	prmt.b32 %r839, %r840, %r8913, %r922;
	// inline asm
	st.local.u32 	[%rd7+4], %r839;
	ld.local.u32 	%r844, [%rd4+8];
	// inline asm
	prmt.b32 %r843, %r844, %r8913, %r926;
	// inline asm
	st.local.u32 	[%rd7], %r843;
	ld.local.u32 	%r848, [%rd4+4];
	// inline asm
	prmt.b32 %r847, %r848, %r8913, %r922;
	// inline asm
	st.local.u32 	[%rd6+12], %r847;
	ld.local.u32 	%r852, [%rd4+4];
	// inline asm
	prmt.b32 %r851, %r852, %r8913, %r926;
	// inline asm
	st.local.u32 	[%rd6+8], %r851;
	ld.local.u32 	%r856, [%rd4];
	// inline asm
	prmt.b32 %r855, %r856, %r8913, %r922;
	// inline asm
	st.local.u32 	[%rd6+4], %r855;
	ld.local.u32 	%r860, [%rd4];
	// inline asm
	prmt.b32 %r859, %r860, %r8913, %r926;
	// inline asm
	st.local.u32 	[%rd6], %r859;
	ld.local.u32 	%r864, [%rd3+12];
	// inline asm
	prmt.b32 %r863, %r864, %r8913, %r922;
	// inline asm
	st.local.u32 	[%rd5+12], %r863;
	ld.local.u32 	%r868, [%rd3+12];
	// inline asm
	prmt.b32 %r867, %r868, %r8913, %r926;
	// inline asm
	st.local.u32 	[%rd5+8], %r867;
	ld.local.u32 	%r872, [%rd3+8];
	// inline asm
	prmt.b32 %r871, %r872, %r8913, %r922;
	// inline asm
	st.local.u32 	[%rd5+4], %r871;
	ld.local.u32 	%r876, [%rd3+8];
	// inline asm
	prmt.b32 %r875, %r876, %r8913, %r926;
	// inline asm
	st.local.u32 	[%rd5], %r875;
	ld.local.u32 	%r880, [%rd3+4];
	// inline asm
	prmt.b32 %r879, %r880, %r8913, %r922;
	// inline asm
	st.local.u32 	[%rd4+12], %r879;
	ld.local.u32 	%r884, [%rd3+4];
	// inline asm
	prmt.b32 %r883, %r884, %r8913, %r926;
	// inline asm
	st.local.u32 	[%rd4+8], %r883;
	ld.local.u32 	%r888, [%rd3];
	// inline asm
	prmt.b32 %r887, %r888, %r8913, %r922;
	// inline asm
	st.local.u32 	[%rd4+4], %r887;
	ld.local.u32 	%r892, [%rd3];
	// inline asm
	prmt.b32 %r891, %r892, %r8913, %r926;
	// inline asm
	st.local.u32 	[%rd4], %r891;
	ld.local.u32 	%r896, [%rd2+12];
	// inline asm
	prmt.b32 %r895, %r896, %r8913, %r922;
	// inline asm
	st.local.u32 	[%rd3+12], %r895;
	ld.local.u32 	%r900, [%rd2+12];
	// inline asm
	prmt.b32 %r899, %r900, %r8913, %r926;
	// inline asm
	st.local.u32 	[%rd3+8], %r899;
	ld.local.u32 	%r904, [%rd2+8];
	// inline asm
	prmt.b32 %r903, %r904, %r8913, %r922;
	// inline asm
	st.local.u32 	[%rd3+4], %r903;
	ld.local.u32 	%r908, [%rd2+8];
	// inline asm
	prmt.b32 %r907, %r908, %r8913, %r926;
	// inline asm
	st.local.u32 	[%rd3], %r907;
	ld.local.u32 	%r912, [%rd2+4];
	// inline asm
	prmt.b32 %r911, %r912, %r8913, %r922;
	// inline asm
	st.local.u32 	[%rd2+12], %r911;
	ld.local.u32 	%r916, [%rd2+4];
	// inline asm
	prmt.b32 %r915, %r916, %r8913, %r926;
	// inline asm
	st.local.u32 	[%rd2+8], %r915;
	ld.local.u32 	%r920, [%rd2];
	// inline asm
	prmt.b32 %r919, %r920, %r8913, %r922;
	// inline asm
	st.local.u32 	[%rd2+4], %r919;
	ld.local.u32 	%r924, [%rd2];
	// inline asm
	prmt.b32 %r923, %r924, %r8913, %r926;
	// inline asm
	st.local.u32 	[%rd2], %r923;
	// inline asm
	prmt.b32 %r927, %r923, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd2], %r927;
	ld.local.u32 	%r930, [%rd2+4];
	// inline asm
	prmt.b32 %r929, %r930, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd2+4], %r929;
	ld.local.u32 	%r932, [%rd2+8];
	// inline asm
	prmt.b32 %r931, %r932, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd2+8], %r931;
	ld.local.u32 	%r934, [%rd2+12];
	// inline asm
	prmt.b32 %r933, %r934, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd2+12], %r933;
	ld.local.u32 	%r936, [%rd3];
	// inline asm
	prmt.b32 %r935, %r936, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd3], %r935;
	ld.local.u32 	%r938, [%rd3+4];
	// inline asm
	prmt.b32 %r937, %r938, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd3+4], %r937;
	ld.local.u32 	%r940, [%rd3+8];
	// inline asm
	prmt.b32 %r939, %r940, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd3+8], %r939;
	ld.local.u32 	%r942, [%rd3+12];
	// inline asm
	prmt.b32 %r941, %r942, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd3+12], %r941;
	ld.local.u32 	%r944, [%rd4];
	// inline asm
	prmt.b32 %r943, %r944, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd4], %r943;
	ld.local.u32 	%r946, [%rd4+4];
	// inline asm
	prmt.b32 %r945, %r946, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd4+4], %r945;
	ld.local.u32 	%r948, [%rd4+8];
	// inline asm
	prmt.b32 %r947, %r948, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd4+8], %r947;
	ld.local.u32 	%r950, [%rd4+12];
	// inline asm
	prmt.b32 %r949, %r950, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd4+12], %r949;
	ld.local.u32 	%r952, [%rd5];
	// inline asm
	prmt.b32 %r951, %r952, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd5], %r951;
	ld.local.u32 	%r954, [%rd5+4];
	// inline asm
	prmt.b32 %r953, %r954, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd5+4], %r953;
	ld.local.u32 	%r956, [%rd5+8];
	// inline asm
	prmt.b32 %r955, %r956, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd5+8], %r955;
	ld.local.u32 	%r958, [%rd5+12];
	// inline asm
	prmt.b32 %r957, %r958, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd5+12], %r957;
	ld.local.u32 	%r960, [%rd6];
	// inline asm
	prmt.b32 %r959, %r960, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd6], %r959;
	ld.local.u32 	%r962, [%rd6+4];
	// inline asm
	prmt.b32 %r961, %r962, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd6+4], %r961;
	ld.local.u32 	%r964, [%rd6+8];
	// inline asm
	prmt.b32 %r963, %r964, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd6+8], %r963;
	ld.local.u32 	%r966, [%rd6+12];
	// inline asm
	prmt.b32 %r965, %r966, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd6+12], %r965;
	ld.local.u32 	%r968, [%rd7];
	// inline asm
	prmt.b32 %r967, %r968, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd7], %r967;
	ld.local.u32 	%r970, [%rd7+4];
	// inline asm
	prmt.b32 %r969, %r970, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd7+4], %r969;
	ld.local.u32 	%r972, [%rd7+8];
	// inline asm
	prmt.b32 %r971, %r972, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd7+8], %r971;
	ld.local.u32 	%r974, [%rd7+12];
	// inline asm
	prmt.b32 %r973, %r974, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd7+12], %r973;
	ld.local.u32 	%r976, [%rd8];
	// inline asm
	prmt.b32 %r975, %r976, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd8], %r975;
	ld.local.u32 	%r978, [%rd8+4];
	// inline asm
	prmt.b32 %r977, %r978, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd8+4], %r977;
	ld.local.u32 	%r980, [%rd8+8];
	// inline asm
	prmt.b32 %r979, %r980, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd8+8], %r979;
	ld.local.u32 	%r982, [%rd8+12];
	// inline asm
	prmt.b32 %r981, %r982, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd8+12], %r981;
	ld.local.u32 	%r984, [%rd9];
	// inline asm
	prmt.b32 %r983, %r984, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd9], %r983;
	ld.local.u32 	%r986, [%rd9+4];
	// inline asm
	prmt.b32 %r985, %r986, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd9+4], %r985;
	ld.local.u32 	%r988, [%rd9+8];
	// inline asm
	prmt.b32 %r987, %r988, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd9+8], %r987;
	ld.local.u32 	%r990, [%rd9+12];
	// inline asm
	prmt.b32 %r989, %r990, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd9+12], %r989;
	ld.local.u32 	%r992, [%rd1+192];
	add.s32 	%r993, %r992, 128;
	st.local.u32 	[%rd1+192], %r993;
	bfe.u32 	%r991, %r992, 2, 5;
	and.b32  	%r994, %r992, 3;
	shl.b32 	%r995, %r994, 2;
	mov.u32 	%r996, 1985229328;
	shr.u32 	%r997, %r996, %r995;
	and.b32  	%r6, %r997, 65535;
	setp.gt.s32	%p2, %r991, 15;
	@%p2 bra 	BB2_36;

	setp.gt.s32	%p26, %r991, 7;
	@%p26 bra 	BB2_21;

	setp.gt.s32	%p38, %r991, 3;
	@%p38 bra 	BB2_14;

	setp.gt.s32	%p44, %r991, 1;
	@%p44 bra 	BB2_10;

	setp.eq.s32	%p47, %r991, 0;
	@%p47 bra 	BB2_88;
	bra.uni 	BB2_8;

BB2_88:
	mov.u32 	%r8914, 0;
	// inline asm
	prmt.b32 %r8917, %r8914, %r989, %r6;
	// inline asm
	ld.local.v2.u32 	{%r6741, %r6742}, [%rd9+8];
	// inline asm
	prmt.b32 %r6582, %r6742, %r6741, %r6;
	// inline asm
	st.local.u32 	[%rd9+12], %r6582;
	ld.local.u32 	%r6587, [%rd9+8];
	ld.local.u32 	%r6588, [%rd9+4];
	// inline asm
	prmt.b32 %r6586, %r6587, %r6588, %r6;
	// inline asm
	st.local.u32 	[%rd9+8], %r6586;
	ld.local.v2.u32 	{%r6743, %r6744}, [%rd9];
	// inline asm
	prmt.b32 %r6590, %r6744, %r6743, %r6;
	// inline asm
	st.local.u32 	[%rd9+4], %r6590;
	ld.local.u32 	%r6595, [%rd9];
	ld.local.u32 	%r6596, [%rd8+12];
	// inline asm
	prmt.b32 %r6594, %r6595, %r6596, %r6;
	// inline asm
	st.local.u32 	[%rd9], %r6594;
	ld.local.v2.u32 	{%r6745, %r6746}, [%rd8+8];
	// inline asm
	prmt.b32 %r6598, %r6746, %r6745, %r6;
	// inline asm
	st.local.u32 	[%rd8+12], %r6598;
	ld.local.u32 	%r6603, [%rd8+8];
	ld.local.u32 	%r6604, [%rd8+4];
	// inline asm
	prmt.b32 %r6602, %r6603, %r6604, %r6;
	// inline asm
	st.local.u32 	[%rd8+8], %r6602;
	ld.local.v2.u32 	{%r6747, %r6748}, [%rd8];
	// inline asm
	prmt.b32 %r6606, %r6748, %r6747, %r6;
	// inline asm
	st.local.u32 	[%rd8+4], %r6606;
	ld.local.u32 	%r6611, [%rd8];
	ld.local.u32 	%r6612, [%rd7+12];
	// inline asm
	prmt.b32 %r6610, %r6611, %r6612, %r6;
	// inline asm
	st.local.u32 	[%rd8], %r6610;
	ld.local.v2.u32 	{%r6749, %r6750}, [%rd7+8];
	// inline asm
	prmt.b32 %r6614, %r6750, %r6749, %r6;
	// inline asm
	st.local.u32 	[%rd7+12], %r6614;
	ld.local.u32 	%r6619, [%rd7+8];
	ld.local.u32 	%r6620, [%rd7+4];
	// inline asm
	prmt.b32 %r6618, %r6619, %r6620, %r6;
	// inline asm
	st.local.u32 	[%rd7+8], %r6618;
	ld.local.v2.u32 	{%r6751, %r6752}, [%rd7];
	// inline asm
	prmt.b32 %r6622, %r6752, %r6751, %r6;
	// inline asm
	st.local.u32 	[%rd7+4], %r6622;
	ld.local.u32 	%r6627, [%rd7];
	ld.local.u32 	%r6628, [%rd6+12];
	// inline asm
	prmt.b32 %r6626, %r6627, %r6628, %r6;
	// inline asm
	st.local.u32 	[%rd7], %r6626;
	ld.local.v2.u32 	{%r6753, %r6754}, [%rd6+8];
	// inline asm
	prmt.b32 %r6630, %r6754, %r6753, %r6;
	// inline asm
	st.local.u32 	[%rd6+12], %r6630;
	ld.local.u32 	%r6635, [%rd6+8];
	ld.local.u32 	%r6636, [%rd6+4];
	// inline asm
	prmt.b32 %r6634, %r6635, %r6636, %r6;
	// inline asm
	st.local.u32 	[%rd6+8], %r6634;
	ld.local.v2.u32 	{%r6755, %r6756}, [%rd6];
	// inline asm
	prmt.b32 %r6638, %r6756, %r6755, %r6;
	// inline asm
	st.local.u32 	[%rd6+4], %r6638;
	ld.local.u32 	%r6643, [%rd6];
	ld.local.u32 	%r6644, [%rd5+12];
	// inline asm
	prmt.b32 %r6642, %r6643, %r6644, %r6;
	// inline asm
	st.local.u32 	[%rd6], %r6642;
	ld.local.v2.u32 	{%r6757, %r6758}, [%rd5+8];
	// inline asm
	prmt.b32 %r6646, %r6758, %r6757, %r6;
	// inline asm
	st.local.u32 	[%rd5+12], %r6646;
	ld.local.u32 	%r6651, [%rd5+8];
	ld.local.u32 	%r6652, [%rd5+4];
	// inline asm
	prmt.b32 %r6650, %r6651, %r6652, %r6;
	// inline asm
	st.local.u32 	[%rd5+8], %r6650;
	ld.local.v2.u32 	{%r6759, %r6760}, [%rd5];
	// inline asm
	prmt.b32 %r6654, %r6760, %r6759, %r6;
	// inline asm
	st.local.u32 	[%rd5+4], %r6654;
	ld.local.u32 	%r6659, [%rd5];
	ld.local.u32 	%r6660, [%rd4+12];
	// inline asm
	prmt.b32 %r6658, %r6659, %r6660, %r6;
	// inline asm
	st.local.u32 	[%rd5], %r6658;
	ld.local.v2.u32 	{%r6761, %r6762}, [%rd4+8];
	// inline asm
	prmt.b32 %r6662, %r6762, %r6761, %r6;
	// inline asm
	st.local.u32 	[%rd4+12], %r6662;
	ld.local.u32 	%r6667, [%rd4+8];
	ld.local.u32 	%r6668, [%rd4+4];
	// inline asm
	prmt.b32 %r6666, %r6667, %r6668, %r6;
	// inline asm
	st.local.u32 	[%rd4+8], %r6666;
	ld.local.v2.u32 	{%r6763, %r6764}, [%rd4];
	// inline asm
	prmt.b32 %r6670, %r6764, %r6763, %r6;
	// inline asm
	st.local.u32 	[%rd4+4], %r6670;
	ld.local.u32 	%r6675, [%rd4];
	ld.local.u32 	%r6676, [%rd3+12];
	// inline asm
	prmt.b32 %r6674, %r6675, %r6676, %r6;
	// inline asm
	st.local.u32 	[%rd4], %r6674;
	ld.local.v2.u32 	{%r6765, %r6766}, [%rd3+8];
	// inline asm
	prmt.b32 %r6678, %r6766, %r6765, %r6;
	// inline asm
	st.local.u32 	[%rd3+12], %r6678;
	ld.local.u32 	%r6683, [%rd3+8];
	ld.local.u32 	%r6684, [%rd3+4];
	// inline asm
	prmt.b32 %r6682, %r6683, %r6684, %r6;
	// inline asm
	st.local.u32 	[%rd3+8], %r6682;
	ld.local.v2.u32 	{%r6767, %r6768}, [%rd3];
	// inline asm
	prmt.b32 %r6686, %r6768, %r6767, %r6;
	// inline asm
	st.local.u32 	[%rd3+4], %r6686;
	ld.local.u32 	%r6691, [%rd3];
	ld.local.u32 	%r6692, [%rd2+12];
	// inline asm
	prmt.b32 %r6690, %r6691, %r6692, %r6;
	// inline asm
	st.local.u32 	[%rd3], %r6690;
	ld.local.v2.u32 	{%r6769, %r6770}, [%rd2+8];
	// inline asm
	prmt.b32 %r6694, %r6770, %r6769, %r6;
	// inline asm
	st.local.u32 	[%rd2+12], %r6694;
	ld.local.u32 	%r6699, [%rd2+8];
	ld.local.u32 	%r6700, [%rd2+4];
	// inline asm
	prmt.b32 %r6698, %r6699, %r6700, %r6;
	// inline asm
	st.local.u32 	[%rd2+8], %r6698;
	ld.local.v2.u32 	{%r6771, %r6772}, [%rd2];
	// inline asm
	prmt.b32 %r6702, %r6772, %r6771, %r6;
	// inline asm
	st.local.u32 	[%rd2+4], %r6702;
	ld.local.u32 	%r6707, [%rd2];
	// inline asm
	prmt.b32 %r8913, %r6707, %r8914, %r6;
	// inline asm
	st.local.u32 	[%rd2], %r8913;
	mov.u32 	%r8915, %r8914;
	mov.u32 	%r8916, %r8914;
	bra.uni 	BB2_90;

BB2_36:
	setp.gt.s32	%p3, %r991, 23;
	@%p3 bra 	BB2_52;

	setp.gt.s32	%p15, %r991, 19;
	@%p15 bra 	BB2_45;

	setp.gt.s32	%p21, %r991, 17;
	@%p21 bra 	BB2_42;

	setp.eq.s32	%p24, %r991, 16;
	@%p24 bra 	BB2_74;
	bra.uni 	BB2_40;

BB2_74:
	mov.u32 	%r8913, 0;
	// inline asm
	prmt.b32 %r8933, %r8913, %r989, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3726, %r3727}, [%rd9+8];
	// inline asm
	prmt.b32 %r8926, %r3727, %r3726, %r6;
	// inline asm
	ld.local.u32 	%r3587, [%rd9+8];
	ld.local.u32 	%r3588, [%rd9+4];
	// inline asm
	prmt.b32 %r8927, %r3587, %r3588, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3728, %r3729}, [%rd9];
	// inline asm
	prmt.b32 %r8928, %r3729, %r3728, %r6;
	// inline asm
	ld.local.u32 	%r3595, [%rd9];
	ld.local.u32 	%r3596, [%rd8+12];
	// inline asm
	prmt.b32 %r8929, %r3595, %r3596, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3730, %r3731}, [%rd8+8];
	// inline asm
	prmt.b32 %r8922, %r3731, %r3730, %r6;
	// inline asm
	ld.local.u32 	%r3603, [%rd8+8];
	ld.local.u32 	%r3604, [%rd8+4];
	// inline asm
	prmt.b32 %r8923, %r3603, %r3604, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3732, %r3733}, [%rd8];
	// inline asm
	prmt.b32 %r8924, %r3733, %r3732, %r6;
	// inline asm
	ld.local.u32 	%r3611, [%rd8];
	ld.local.u32 	%r3612, [%rd7+12];
	// inline asm
	prmt.b32 %r8925, %r3611, %r3612, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3734, %r3735}, [%rd7+8];
	// inline asm
	prmt.b32 %r8918, %r3735, %r3734, %r6;
	// inline asm
	ld.local.u32 	%r3619, [%rd7+8];
	ld.local.u32 	%r3620, [%rd7+4];
	// inline asm
	prmt.b32 %r8919, %r3619, %r3620, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3736, %r3737}, [%rd7];
	// inline asm
	prmt.b32 %r8920, %r3737, %r3736, %r6;
	// inline asm
	ld.local.u32 	%r3627, [%rd7];
	ld.local.u32 	%r3628, [%rd6+12];
	// inline asm
	prmt.b32 %r8921, %r3627, %r3628, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3738, %r3739}, [%rd6+8];
	// inline asm
	prmt.b32 %r8914, %r3739, %r3738, %r6;
	// inline asm
	ld.local.u32 	%r3635, [%rd6+8];
	ld.local.u32 	%r3636, [%rd6+4];
	// inline asm
	prmt.b32 %r8915, %r3635, %r3636, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3740, %r3741}, [%rd6];
	// inline asm
	prmt.b32 %r8916, %r3741, %r3740, %r6;
	// inline asm
	ld.local.u32 	%r3643, [%rd6];
	ld.local.u32 	%r3644, [%rd5+12];
	// inline asm
	prmt.b32 %r8917, %r3643, %r3644, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3742, %r3743}, [%rd5+8];
	// inline asm
	prmt.b32 %r3646, %r3743, %r3742, %r6;
	// inline asm
	st.local.u32 	[%rd9+12], %r3646;
	ld.local.u32 	%r3651, [%rd5+8];
	ld.local.u32 	%r3652, [%rd5+4];
	// inline asm
	prmt.b32 %r3650, %r3651, %r3652, %r6;
	// inline asm
	st.local.u32 	[%rd9+8], %r3650;
	ld.local.v2.u32 	{%r3744, %r3745}, [%rd5];
	// inline asm
	prmt.b32 %r3654, %r3745, %r3744, %r6;
	// inline asm
	st.local.u32 	[%rd9+4], %r3654;
	ld.local.u32 	%r3659, [%rd5];
	ld.local.u32 	%r3660, [%rd4+12];
	// inline asm
	prmt.b32 %r3658, %r3659, %r3660, %r6;
	// inline asm
	st.local.u32 	[%rd9], %r3658;
	ld.local.v2.u32 	{%r3746, %r3747}, [%rd4+8];
	// inline asm
	prmt.b32 %r3662, %r3747, %r3746, %r6;
	// inline asm
	st.local.u32 	[%rd8+12], %r3662;
	ld.local.u32 	%r3667, [%rd4+8];
	ld.local.u32 	%r3668, [%rd4+4];
	// inline asm
	prmt.b32 %r3666, %r3667, %r3668, %r6;
	// inline asm
	st.local.u32 	[%rd8+8], %r3666;
	ld.local.v2.u32 	{%r3748, %r3749}, [%rd4];
	// inline asm
	prmt.b32 %r3670, %r3749, %r3748, %r6;
	// inline asm
	st.local.u32 	[%rd8+4], %r3670;
	ld.local.u32 	%r3675, [%rd4];
	ld.local.u32 	%r3676, [%rd3+12];
	// inline asm
	prmt.b32 %r3674, %r3675, %r3676, %r6;
	// inline asm
	st.local.u32 	[%rd8], %r3674;
	ld.local.v2.u32 	{%r3750, %r3751}, [%rd3+8];
	// inline asm
	prmt.b32 %r3678, %r3751, %r3750, %r6;
	// inline asm
	st.local.u32 	[%rd7+12], %r3678;
	ld.local.u32 	%r3683, [%rd3+8];
	ld.local.u32 	%r3684, [%rd3+4];
	// inline asm
	prmt.b32 %r3682, %r3683, %r3684, %r6;
	// inline asm
	st.local.u32 	[%rd7+8], %r3682;
	ld.local.v2.u32 	{%r3752, %r3753}, [%rd3];
	// inline asm
	prmt.b32 %r3686, %r3753, %r3752, %r6;
	// inline asm
	st.local.u32 	[%rd7+4], %r3686;
	ld.local.u32 	%r3691, [%rd3];
	ld.local.u32 	%r3692, [%rd2+12];
	// inline asm
	prmt.b32 %r3690, %r3691, %r3692, %r6;
	// inline asm
	st.local.u32 	[%rd7], %r3690;
	ld.local.v2.u32 	{%r3754, %r3755}, [%rd2+8];
	// inline asm
	prmt.b32 %r3694, %r3755, %r3754, %r6;
	// inline asm
	st.local.u32 	[%rd6+12], %r3694;
	ld.local.u32 	%r3699, [%rd2+8];
	ld.local.u32 	%r3700, [%rd2+4];
	// inline asm
	prmt.b32 %r3698, %r3699, %r3700, %r6;
	// inline asm
	st.local.u32 	[%rd6+8], %r3698;
	ld.local.v2.u32 	{%r3756, %r3757}, [%rd2];
	// inline asm
	prmt.b32 %r3702, %r3757, %r3756, %r6;
	// inline asm
	st.local.u32 	[%rd6+4], %r3702;
	ld.local.u32 	%r3707, [%rd2];
	// inline asm
	prmt.b32 %r3706, %r3707, %r8913, %r6;
	// inline asm
	st.local.u32 	[%rd6], %r3706;
	st.local.v4.u32 	[%rd5], {%r8913, %r8913, %r8913, %r8913};
	st.local.v4.u32 	[%rd4], {%r8913, %r8913, %r8913, %r8913};
	st.local.v4.u32 	[%rd3], {%r8913, %r8913, %r8913, %r8913};
	st.local.v2.u32 	[%rd2+8], {%r8913, %r8913};
	mov.u64 	%rd91, 0;
	st.local.u64 	[%rd2], %rd91;
	mov.u32 	%r8930, %r8913;
	mov.u32 	%r8931, %r8913;
	mov.u32 	%r8932, %r8913;
	bra.uni 	BB2_84;

BB2_21:
	setp.gt.s32	%p27, %r991, 11;
	@%p27 bra 	BB2_29;

	setp.gt.s32	%p33, %r991, 9;
	@%p33 bra 	BB2_26;

	setp.eq.s32	%p36, %r991, 8;
	@%p36 bra 	BB2_78;
	bra.uni 	BB2_24;

BB2_78:
	mov.u32 	%r8913, 0;
	// inline asm
	prmt.b32 %r8925, %r8913, %r989, %r6;
	// inline asm
	ld.local.v2.u32 	{%r5202, %r5203}, [%rd9+8];
	// inline asm
	prmt.b32 %r8918, %r5203, %r5202, %r6;
	// inline asm
	ld.local.u32 	%r5055, [%rd9+8];
	ld.local.u32 	%r5056, [%rd9+4];
	// inline asm
	prmt.b32 %r8919, %r5055, %r5056, %r6;
	// inline asm
	ld.local.v2.u32 	{%r5204, %r5205}, [%rd9];
	// inline asm
	prmt.b32 %r8920, %r5205, %r5204, %r6;
	// inline asm
	ld.local.u32 	%r5063, [%rd9];
	ld.local.u32 	%r5064, [%rd8+12];
	// inline asm
	prmt.b32 %r8921, %r5063, %r5064, %r6;
	// inline asm
	ld.local.v2.u32 	{%r5206, %r5207}, [%rd8+8];
	// inline asm
	prmt.b32 %r8914, %r5207, %r5206, %r6;
	// inline asm
	ld.local.u32 	%r5071, [%rd8+8];
	ld.local.u32 	%r5072, [%rd8+4];
	// inline asm
	prmt.b32 %r8915, %r5071, %r5072, %r6;
	// inline asm
	ld.local.v2.u32 	{%r5208, %r5209}, [%rd8];
	// inline asm
	prmt.b32 %r8916, %r5209, %r5208, %r6;
	// inline asm
	ld.local.u32 	%r5079, [%rd8];
	ld.local.u32 	%r5080, [%rd7+12];
	// inline asm
	prmt.b32 %r8917, %r5079, %r5080, %r6;
	// inline asm
	ld.local.v2.u32 	{%r5210, %r5211}, [%rd7+8];
	// inline asm
	prmt.b32 %r5082, %r5211, %r5210, %r6;
	// inline asm
	st.local.u32 	[%rd9+12], %r5082;
	ld.local.u32 	%r5087, [%rd7+8];
	ld.local.u32 	%r5088, [%rd7+4];
	// inline asm
	prmt.b32 %r5086, %r5087, %r5088, %r6;
	// inline asm
	st.local.u32 	[%rd9+8], %r5086;
	ld.local.v2.u32 	{%r5212, %r5213}, [%rd7];
	// inline asm
	prmt.b32 %r5090, %r5213, %r5212, %r6;
	// inline asm
	st.local.u32 	[%rd9+4], %r5090;
	ld.local.u32 	%r5095, [%rd7];
	ld.local.u32 	%r5096, [%rd6+12];
	// inline asm
	prmt.b32 %r5094, %r5095, %r5096, %r6;
	// inline asm
	st.local.u32 	[%rd9], %r5094;
	ld.local.v2.u32 	{%r5214, %r5215}, [%rd6+8];
	// inline asm
	prmt.b32 %r5098, %r5215, %r5214, %r6;
	// inline asm
	st.local.u32 	[%rd8+12], %r5098;
	ld.local.u32 	%r5103, [%rd6+8];
	ld.local.u32 	%r5104, [%rd6+4];
	// inline asm
	prmt.b32 %r5102, %r5103, %r5104, %r6;
	// inline asm
	st.local.u32 	[%rd8+8], %r5102;
	ld.local.v2.u32 	{%r5216, %r5217}, [%rd6];
	// inline asm
	prmt.b32 %r5106, %r5217, %r5216, %r6;
	// inline asm
	st.local.u32 	[%rd8+4], %r5106;
	ld.local.u32 	%r5111, [%rd6];
	ld.local.u32 	%r5112, [%rd5+12];
	// inline asm
	prmt.b32 %r5110, %r5111, %r5112, %r6;
	// inline asm
	st.local.u32 	[%rd8], %r5110;
	ld.local.v2.u32 	{%r5218, %r5219}, [%rd5+8];
	// inline asm
	prmt.b32 %r5114, %r5219, %r5218, %r6;
	// inline asm
	st.local.u32 	[%rd7+12], %r5114;
	ld.local.u32 	%r5119, [%rd5+8];
	ld.local.u32 	%r5120, [%rd5+4];
	// inline asm
	prmt.b32 %r5118, %r5119, %r5120, %r6;
	// inline asm
	st.local.u32 	[%rd7+8], %r5118;
	ld.local.v2.u32 	{%r5220, %r5221}, [%rd5];
	// inline asm
	prmt.b32 %r5122, %r5221, %r5220, %r6;
	// inline asm
	st.local.u32 	[%rd7+4], %r5122;
	ld.local.u32 	%r5127, [%rd5];
	ld.local.u32 	%r5128, [%rd4+12];
	// inline asm
	prmt.b32 %r5126, %r5127, %r5128, %r6;
	// inline asm
	st.local.u32 	[%rd7], %r5126;
	ld.local.v2.u32 	{%r5222, %r5223}, [%rd4+8];
	// inline asm
	prmt.b32 %r5130, %r5223, %r5222, %r6;
	// inline asm
	st.local.u32 	[%rd6+12], %r5130;
	ld.local.u32 	%r5135, [%rd4+8];
	ld.local.u32 	%r5136, [%rd4+4];
	// inline asm
	prmt.b32 %r5134, %r5135, %r5136, %r6;
	// inline asm
	st.local.u32 	[%rd6+8], %r5134;
	ld.local.v2.u32 	{%r5224, %r5225}, [%rd4];
	// inline asm
	prmt.b32 %r5138, %r5225, %r5224, %r6;
	// inline asm
	st.local.u32 	[%rd6+4], %r5138;
	ld.local.u32 	%r5143, [%rd4];
	ld.local.u32 	%r5144, [%rd3+12];
	// inline asm
	prmt.b32 %r5142, %r5143, %r5144, %r6;
	// inline asm
	st.local.u32 	[%rd6], %r5142;
	ld.local.v2.u32 	{%r5226, %r5227}, [%rd3+8];
	// inline asm
	prmt.b32 %r5146, %r5227, %r5226, %r6;
	// inline asm
	st.local.u32 	[%rd5+12], %r5146;
	ld.local.u32 	%r5151, [%rd3+8];
	ld.local.u32 	%r5152, [%rd3+4];
	// inline asm
	prmt.b32 %r5150, %r5151, %r5152, %r6;
	// inline asm
	st.local.u32 	[%rd5+8], %r5150;
	ld.local.v2.u32 	{%r5228, %r5229}, [%rd3];
	// inline asm
	prmt.b32 %r5154, %r5229, %r5228, %r6;
	// inline asm
	st.local.u32 	[%rd5+4], %r5154;
	ld.local.u32 	%r5159, [%rd3];
	ld.local.u32 	%r5160, [%rd2+12];
	// inline asm
	prmt.b32 %r5158, %r5159, %r5160, %r6;
	// inline asm
	st.local.u32 	[%rd5], %r5158;
	ld.local.v2.u32 	{%r5230, %r5231}, [%rd2+8];
	// inline asm
	prmt.b32 %r5162, %r5231, %r5230, %r6;
	// inline asm
	st.local.u32 	[%rd4+12], %r5162;
	ld.local.u32 	%r5167, [%rd2+8];
	ld.local.u32 	%r5168, [%rd2+4];
	// inline asm
	prmt.b32 %r5166, %r5167, %r5168, %r6;
	// inline asm
	st.local.u32 	[%rd4+8], %r5166;
	ld.local.v2.u32 	{%r5232, %r5233}, [%rd2];
	// inline asm
	prmt.b32 %r5170, %r5233, %r5232, %r6;
	// inline asm
	st.local.u32 	[%rd4+4], %r5170;
	ld.local.u32 	%r5175, [%rd2];
	// inline asm
	prmt.b32 %r5174, %r5175, %r8913, %r6;
	// inline asm
	st.local.u32 	[%rd4], %r5174;
	st.local.v4.u32 	[%rd3], {%r8913, %r8913, %r8913, %r8913};
	st.local.v2.u32 	[%rd2+8], {%r8913, %r8913};
	mov.u64 	%rd99, 0;
	st.local.u64 	[%rd2], %rd99;
	mov.u32 	%r8922, %r8913;
	mov.u32 	%r8923, %r8913;
	mov.u32 	%r8924, %r8913;
	bra.uni 	BB2_82;

BB2_52:
	setp.gt.s32	%p4, %r991, 27;
	@%p4 bra 	BB2_60;

	setp.gt.s32	%p10, %r991, 25;
	@%p10 bra 	BB2_57;

	setp.eq.s32	%p13, %r991, 24;
	@%p13 bra 	BB2_70;
	bra.uni 	BB2_55;

BB2_70:
	mov.u32 	%r8913, 0;
	// inline asm
	prmt.b32 %r8941, %r8913, %r989, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2314, %r2315}, [%rd9+8];
	// inline asm
	prmt.b32 %r8934, %r2315, %r2314, %r6;
	// inline asm
	ld.local.u32 	%r2183, [%rd9+8];
	ld.local.u32 	%r2184, [%rd9+4];
	// inline asm
	prmt.b32 %r8935, %r2183, %r2184, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2316, %r2317}, [%rd9];
	// inline asm
	prmt.b32 %r8936, %r2317, %r2316, %r6;
	// inline asm
	ld.local.u32 	%r2191, [%rd9];
	ld.local.u32 	%r2192, [%rd8+12];
	// inline asm
	prmt.b32 %r8937, %r2191, %r2192, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2318, %r2319}, [%rd8+8];
	// inline asm
	prmt.b32 %r8930, %r2319, %r2318, %r6;
	// inline asm
	ld.local.u32 	%r2199, [%rd8+8];
	ld.local.u32 	%r2200, [%rd8+4];
	// inline asm
	prmt.b32 %r8931, %r2199, %r2200, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2320, %r2321}, [%rd8];
	// inline asm
	prmt.b32 %r8932, %r2321, %r2320, %r6;
	// inline asm
	ld.local.u32 	%r2207, [%rd8];
	ld.local.u32 	%r2208, [%rd7+12];
	// inline asm
	prmt.b32 %r8933, %r2207, %r2208, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2322, %r2323}, [%rd7+8];
	// inline asm
	prmt.b32 %r8926, %r2323, %r2322, %r6;
	// inline asm
	ld.local.u32 	%r2215, [%rd7+8];
	ld.local.u32 	%r2216, [%rd7+4];
	// inline asm
	prmt.b32 %r8927, %r2215, %r2216, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2324, %r2325}, [%rd7];
	// inline asm
	prmt.b32 %r8928, %r2325, %r2324, %r6;
	// inline asm
	ld.local.u32 	%r2223, [%rd7];
	ld.local.u32 	%r2224, [%rd6+12];
	// inline asm
	prmt.b32 %r8929, %r2223, %r2224, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2326, %r2327}, [%rd6+8];
	// inline asm
	prmt.b32 %r8922, %r2327, %r2326, %r6;
	// inline asm
	ld.local.u32 	%r2231, [%rd6+8];
	ld.local.u32 	%r2232, [%rd6+4];
	// inline asm
	prmt.b32 %r8923, %r2231, %r2232, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2328, %r2329}, [%rd6];
	// inline asm
	prmt.b32 %r8924, %r2329, %r2328, %r6;
	// inline asm
	ld.local.u32 	%r2239, [%rd6];
	ld.local.u32 	%r2240, [%rd5+12];
	// inline asm
	prmt.b32 %r8925, %r2239, %r2240, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2330, %r2331}, [%rd5+8];
	// inline asm
	prmt.b32 %r8918, %r2331, %r2330, %r6;
	// inline asm
	ld.local.u32 	%r2247, [%rd5+8];
	ld.local.u32 	%r2248, [%rd5+4];
	// inline asm
	prmt.b32 %r8919, %r2247, %r2248, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2332, %r2333}, [%rd5];
	// inline asm
	prmt.b32 %r8920, %r2333, %r2332, %r6;
	// inline asm
	ld.local.u32 	%r2255, [%rd5];
	ld.local.u32 	%r2256, [%rd4+12];
	// inline asm
	prmt.b32 %r8921, %r2255, %r2256, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2334, %r2335}, [%rd4+8];
	// inline asm
	prmt.b32 %r8914, %r2335, %r2334, %r6;
	// inline asm
	ld.local.u32 	%r2263, [%rd4+8];
	ld.local.u32 	%r2264, [%rd4+4];
	// inline asm
	prmt.b32 %r8915, %r2263, %r2264, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2336, %r2337}, [%rd4];
	// inline asm
	prmt.b32 %r8916, %r2337, %r2336, %r6;
	// inline asm
	ld.local.u32 	%r2271, [%rd4];
	ld.local.u32 	%r2272, [%rd3+12];
	// inline asm
	prmt.b32 %r8917, %r2271, %r2272, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2338, %r2339}, [%rd3+8];
	// inline asm
	prmt.b32 %r2274, %r2339, %r2338, %r6;
	// inline asm
	st.local.u32 	[%rd9+12], %r2274;
	ld.local.u32 	%r2279, [%rd3+8];
	ld.local.u32 	%r2280, [%rd3+4];
	// inline asm
	prmt.b32 %r2278, %r2279, %r2280, %r6;
	// inline asm
	st.local.u32 	[%rd9+8], %r2278;
	ld.local.v2.u32 	{%r2340, %r2341}, [%rd3];
	// inline asm
	prmt.b32 %r2282, %r2341, %r2340, %r6;
	// inline asm
	st.local.u32 	[%rd9+4], %r2282;
	ld.local.u32 	%r2287, [%rd3];
	ld.local.u32 	%r2288, [%rd2+12];
	// inline asm
	prmt.b32 %r2286, %r2287, %r2288, %r6;
	// inline asm
	st.local.u32 	[%rd9], %r2286;
	ld.local.v2.u32 	{%r2342, %r2343}, [%rd2+8];
	// inline asm
	prmt.b32 %r2290, %r2343, %r2342, %r6;
	// inline asm
	st.local.u32 	[%rd8+12], %r2290;
	ld.local.u32 	%r2295, [%rd2+8];
	ld.local.u32 	%r2296, [%rd2+4];
	// inline asm
	prmt.b32 %r2294, %r2295, %r2296, %r6;
	// inline asm
	st.local.u32 	[%rd8+8], %r2294;
	ld.local.v2.u32 	{%r2344, %r2345}, [%rd2];
	// inline asm
	prmt.b32 %r2298, %r2345, %r2344, %r6;
	// inline asm
	st.local.u32 	[%rd8+4], %r2298;
	ld.local.u32 	%r2303, [%rd2];
	// inline asm
	prmt.b32 %r2302, %r2303, %r8913, %r6;
	// inline asm
	st.local.u32 	[%rd8], %r2302;
	st.local.v4.u32 	[%rd7], {%r8913, %r8913, %r8913, %r8913};
	st.local.v4.u32 	[%rd6], {%r8913, %r8913, %r8913, %r8913};
	st.local.v4.u32 	[%rd5], {%r8913, %r8913, %r8913, %r8913};
	st.local.v4.u32 	[%rd4], {%r8913, %r8913, %r8913, %r8913};
	st.local.v4.u32 	[%rd3], {%r8913, %r8913, %r8913, %r8913};
	st.local.v2.u32 	[%rd2+8], {%r8913, %r8913};
	mov.u64 	%rd83, 0;
	st.local.u64 	[%rd2], %rd83;
	mov.u32 	%r8938, %r8913;
	mov.u32 	%r8939, %r8913;
	mov.u32 	%r8940, %r8913;
	bra.uni 	BB2_86;

BB2_14:
	setp.gt.s32	%p39, %r991, 5;
	@%p39 bra 	BB2_18;

	setp.eq.s32	%p42, %r991, 4;
	@%p42 bra 	BB2_80;
	bra.uni 	BB2_16;

BB2_80:
	mov.u32 	%r8913, 0;
	// inline asm
	prmt.b32 %r8921, %r8913, %r989, %r6;
	// inline asm
	ld.local.v2.u32 	{%r5964, %r5965}, [%rd9+8];
	// inline asm
	prmt.b32 %r8914, %r5965, %r5964, %r6;
	// inline asm
	ld.local.u32 	%r5813, [%rd9+8];
	ld.local.u32 	%r5814, [%rd9+4];
	// inline asm
	prmt.b32 %r8915, %r5813, %r5814, %r6;
	// inline asm
	ld.local.v2.u32 	{%r5966, %r5967}, [%rd9];
	// inline asm
	prmt.b32 %r8916, %r5967, %r5966, %r6;
	// inline asm
	ld.local.u32 	%r5821, [%rd9];
	ld.local.u32 	%r5822, [%rd8+12];
	// inline asm
	prmt.b32 %r8917, %r5821, %r5822, %r6;
	// inline asm
	ld.local.v2.u32 	{%r5968, %r5969}, [%rd8+8];
	// inline asm
	prmt.b32 %r5824, %r5969, %r5968, %r6;
	// inline asm
	st.local.u32 	[%rd9+12], %r5824;
	ld.local.u32 	%r5829, [%rd8+8];
	ld.local.u32 	%r5830, [%rd8+4];
	// inline asm
	prmt.b32 %r5828, %r5829, %r5830, %r6;
	// inline asm
	st.local.u32 	[%rd9+8], %r5828;
	ld.local.v2.u32 	{%r5970, %r5971}, [%rd8];
	// inline asm
	prmt.b32 %r5832, %r5971, %r5970, %r6;
	// inline asm
	st.local.u32 	[%rd9+4], %r5832;
	ld.local.u32 	%r5837, [%rd8];
	ld.local.u32 	%r5838, [%rd7+12];
	// inline asm
	prmt.b32 %r5836, %r5837, %r5838, %r6;
	// inline asm
	st.local.u32 	[%rd9], %r5836;
	ld.local.v2.u32 	{%r5972, %r5973}, [%rd7+8];
	// inline asm
	prmt.b32 %r5840, %r5973, %r5972, %r6;
	// inline asm
	st.local.u32 	[%rd8+12], %r5840;
	ld.local.u32 	%r5845, [%rd7+8];
	ld.local.u32 	%r5846, [%rd7+4];
	// inline asm
	prmt.b32 %r5844, %r5845, %r5846, %r6;
	// inline asm
	st.local.u32 	[%rd8+8], %r5844;
	ld.local.v2.u32 	{%r5974, %r5975}, [%rd7];
	// inline asm
	prmt.b32 %r5848, %r5975, %r5974, %r6;
	// inline asm
	st.local.u32 	[%rd8+4], %r5848;
	ld.local.u32 	%r5853, [%rd7];
	ld.local.u32 	%r5854, [%rd6+12];
	// inline asm
	prmt.b32 %r5852, %r5853, %r5854, %r6;
	// inline asm
	st.local.u32 	[%rd8], %r5852;
	ld.local.v2.u32 	{%r5976, %r5977}, [%rd6+8];
	// inline asm
	prmt.b32 %r5856, %r5977, %r5976, %r6;
	// inline asm
	st.local.u32 	[%rd7+12], %r5856;
	ld.local.u32 	%r5861, [%rd6+8];
	ld.local.u32 	%r5862, [%rd6+4];
	// inline asm
	prmt.b32 %r5860, %r5861, %r5862, %r6;
	// inline asm
	st.local.u32 	[%rd7+8], %r5860;
	ld.local.v2.u32 	{%r5978, %r5979}, [%rd6];
	// inline asm
	prmt.b32 %r5864, %r5979, %r5978, %r6;
	// inline asm
	st.local.u32 	[%rd7+4], %r5864;
	ld.local.u32 	%r5869, [%rd6];
	ld.local.u32 	%r5870, [%rd5+12];
	// inline asm
	prmt.b32 %r5868, %r5869, %r5870, %r6;
	// inline asm
	st.local.u32 	[%rd7], %r5868;
	ld.local.v2.u32 	{%r5980, %r5981}, [%rd5+8];
	// inline asm
	prmt.b32 %r5872, %r5981, %r5980, %r6;
	// inline asm
	st.local.u32 	[%rd6+12], %r5872;
	ld.local.u32 	%r5877, [%rd5+8];
	ld.local.u32 	%r5878, [%rd5+4];
	// inline asm
	prmt.b32 %r5876, %r5877, %r5878, %r6;
	// inline asm
	st.local.u32 	[%rd6+8], %r5876;
	ld.local.v2.u32 	{%r5982, %r5983}, [%rd5];
	// inline asm
	prmt.b32 %r5880, %r5983, %r5982, %r6;
	// inline asm
	st.local.u32 	[%rd6+4], %r5880;
	ld.local.u32 	%r5885, [%rd5];
	ld.local.u32 	%r5886, [%rd4+12];
	// inline asm
	prmt.b32 %r5884, %r5885, %r5886, %r6;
	// inline asm
	st.local.u32 	[%rd6], %r5884;
	ld.local.v2.u32 	{%r5984, %r5985}, [%rd4+8];
	// inline asm
	prmt.b32 %r5888, %r5985, %r5984, %r6;
	// inline asm
	st.local.u32 	[%rd5+12], %r5888;
	ld.local.u32 	%r5893, [%rd4+8];
	ld.local.u32 	%r5894, [%rd4+4];
	// inline asm
	prmt.b32 %r5892, %r5893, %r5894, %r6;
	// inline asm
	st.local.u32 	[%rd5+8], %r5892;
	ld.local.v2.u32 	{%r5986, %r5987}, [%rd4];
	// inline asm
	prmt.b32 %r5896, %r5987, %r5986, %r6;
	// inline asm
	st.local.u32 	[%rd5+4], %r5896;
	ld.local.u32 	%r5901, [%rd4];
	ld.local.u32 	%r5902, [%rd3+12];
	// inline asm
	prmt.b32 %r5900, %r5901, %r5902, %r6;
	// inline asm
	st.local.u32 	[%rd5], %r5900;
	ld.local.v2.u32 	{%r5988, %r5989}, [%rd3+8];
	// inline asm
	prmt.b32 %r5904, %r5989, %r5988, %r6;
	// inline asm
	st.local.u32 	[%rd4+12], %r5904;
	ld.local.u32 	%r5909, [%rd3+8];
	ld.local.u32 	%r5910, [%rd3+4];
	// inline asm
	prmt.b32 %r5908, %r5909, %r5910, %r6;
	// inline asm
	st.local.u32 	[%rd4+8], %r5908;
	ld.local.v2.u32 	{%r5990, %r5991}, [%rd3];
	// inline asm
	prmt.b32 %r5912, %r5991, %r5990, %r6;
	// inline asm
	st.local.u32 	[%rd4+4], %r5912;
	ld.local.u32 	%r5917, [%rd3];
	ld.local.u32 	%r5918, [%rd2+12];
	// inline asm
	prmt.b32 %r5916, %r5917, %r5918, %r6;
	// inline asm
	st.local.u32 	[%rd4], %r5916;
	ld.local.v2.u32 	{%r5992, %r5993}, [%rd2+8];
	// inline asm
	prmt.b32 %r5920, %r5993, %r5992, %r6;
	// inline asm
	st.local.u32 	[%rd3+12], %r5920;
	ld.local.u32 	%r5925, [%rd2+8];
	ld.local.u32 	%r5926, [%rd2+4];
	// inline asm
	prmt.b32 %r5924, %r5925, %r5926, %r6;
	// inline asm
	st.local.u32 	[%rd3+8], %r5924;
	ld.local.v2.u32 	{%r5994, %r5995}, [%rd2];
	// inline asm
	prmt.b32 %r5928, %r5995, %r5994, %r6;
	// inline asm
	st.local.u32 	[%rd3+4], %r5928;
	ld.local.u32 	%r5933, [%rd2];
	// inline asm
	prmt.b32 %r5932, %r5933, %r8913, %r6;
	// inline asm
	st.local.u32 	[%rd3], %r5932;
	st.local.v2.u32 	[%rd2+8], {%r8913, %r8913};
	mov.u64 	%rd103, 0;
	st.local.u64 	[%rd2], %rd103;
	mov.u32 	%r8918, %r8913;
	mov.u32 	%r8919, %r8913;
	mov.u32 	%r8920, %r8913;
	bra.uni 	BB2_81;

BB2_45:
	setp.gt.s32	%p16, %r991, 21;
	@%p16 bra 	BB2_49;

	setp.eq.s32	%p19, %r991, 20;
	@%p19 bra 	BB2_72;
	bra.uni 	BB2_47;

BB2_72:
	mov.u32 	%r8913, 0;
	// inline asm
	prmt.b32 %r8937, %r8913, %r989, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3012, %r3013}, [%rd9+8];
	// inline asm
	prmt.b32 %r8930, %r3013, %r3012, %r6;
	// inline asm
	ld.local.u32 	%r2877, [%rd9+8];
	ld.local.u32 	%r2878, [%rd9+4];
	// inline asm
	prmt.b32 %r8931, %r2877, %r2878, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3014, %r3015}, [%rd9];
	// inline asm
	prmt.b32 %r8932, %r3015, %r3014, %r6;
	// inline asm
	ld.local.u32 	%r2885, [%rd9];
	ld.local.u32 	%r2886, [%rd8+12];
	// inline asm
	prmt.b32 %r8933, %r2885, %r2886, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3016, %r3017}, [%rd8+8];
	// inline asm
	prmt.b32 %r8926, %r3017, %r3016, %r6;
	// inline asm
	ld.local.u32 	%r2893, [%rd8+8];
	ld.local.u32 	%r2894, [%rd8+4];
	// inline asm
	prmt.b32 %r8927, %r2893, %r2894, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3018, %r3019}, [%rd8];
	// inline asm
	prmt.b32 %r8928, %r3019, %r3018, %r6;
	// inline asm
	ld.local.u32 	%r2901, [%rd8];
	ld.local.u32 	%r2902, [%rd7+12];
	// inline asm
	prmt.b32 %r8929, %r2901, %r2902, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3020, %r3021}, [%rd7+8];
	// inline asm
	prmt.b32 %r8922, %r3021, %r3020, %r6;
	// inline asm
	ld.local.u32 	%r2909, [%rd7+8];
	ld.local.u32 	%r2910, [%rd7+4];
	// inline asm
	prmt.b32 %r8923, %r2909, %r2910, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3022, %r3023}, [%rd7];
	// inline asm
	prmt.b32 %r8924, %r3023, %r3022, %r6;
	// inline asm
	ld.local.u32 	%r2917, [%rd7];
	ld.local.u32 	%r2918, [%rd6+12];
	// inline asm
	prmt.b32 %r8925, %r2917, %r2918, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3024, %r3025}, [%rd6+8];
	// inline asm
	prmt.b32 %r8918, %r3025, %r3024, %r6;
	// inline asm
	ld.local.u32 	%r2925, [%rd6+8];
	ld.local.u32 	%r2926, [%rd6+4];
	// inline asm
	prmt.b32 %r8919, %r2925, %r2926, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3026, %r3027}, [%rd6];
	// inline asm
	prmt.b32 %r8920, %r3027, %r3026, %r6;
	// inline asm
	ld.local.u32 	%r2933, [%rd6];
	ld.local.u32 	%r2934, [%rd5+12];
	// inline asm
	prmt.b32 %r8921, %r2933, %r2934, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3028, %r3029}, [%rd5+8];
	// inline asm
	prmt.b32 %r8914, %r3029, %r3028, %r6;
	// inline asm
	ld.local.u32 	%r2941, [%rd5+8];
	ld.local.u32 	%r2942, [%rd5+4];
	// inline asm
	prmt.b32 %r8915, %r2941, %r2942, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3030, %r3031}, [%rd5];
	// inline asm
	prmt.b32 %r8916, %r3031, %r3030, %r6;
	// inline asm
	ld.local.u32 	%r2949, [%rd5];
	ld.local.u32 	%r2950, [%rd4+12];
	// inline asm
	prmt.b32 %r8917, %r2949, %r2950, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3032, %r3033}, [%rd4+8];
	// inline asm
	prmt.b32 %r2952, %r3033, %r3032, %r6;
	// inline asm
	st.local.u32 	[%rd9+12], %r2952;
	ld.local.u32 	%r2957, [%rd4+8];
	ld.local.u32 	%r2958, [%rd4+4];
	// inline asm
	prmt.b32 %r2956, %r2957, %r2958, %r6;
	// inline asm
	st.local.u32 	[%rd9+8], %r2956;
	ld.local.v2.u32 	{%r3034, %r3035}, [%rd4];
	// inline asm
	prmt.b32 %r2960, %r3035, %r3034, %r6;
	// inline asm
	st.local.u32 	[%rd9+4], %r2960;
	ld.local.u32 	%r2965, [%rd4];
	ld.local.u32 	%r2966, [%rd3+12];
	// inline asm
	prmt.b32 %r2964, %r2965, %r2966, %r6;
	// inline asm
	st.local.u32 	[%rd9], %r2964;
	ld.local.v2.u32 	{%r3036, %r3037}, [%rd3+8];
	// inline asm
	prmt.b32 %r2968, %r3037, %r3036, %r6;
	// inline asm
	st.local.u32 	[%rd8+12], %r2968;
	ld.local.u32 	%r2973, [%rd3+8];
	ld.local.u32 	%r2974, [%rd3+4];
	// inline asm
	prmt.b32 %r2972, %r2973, %r2974, %r6;
	// inline asm
	st.local.u32 	[%rd8+8], %r2972;
	ld.local.v2.u32 	{%r3038, %r3039}, [%rd3];
	// inline asm
	prmt.b32 %r2976, %r3039, %r3038, %r6;
	// inline asm
	st.local.u32 	[%rd8+4], %r2976;
	ld.local.u32 	%r2981, [%rd3];
	ld.local.u32 	%r2982, [%rd2+12];
	// inline asm
	prmt.b32 %r2980, %r2981, %r2982, %r6;
	// inline asm
	st.local.u32 	[%rd8], %r2980;
	ld.local.v2.u32 	{%r3040, %r3041}, [%rd2+8];
	// inline asm
	prmt.b32 %r2984, %r3041, %r3040, %r6;
	// inline asm
	st.local.u32 	[%rd7+12], %r2984;
	ld.local.u32 	%r2989, [%rd2+8];
	ld.local.u32 	%r2990, [%rd2+4];
	// inline asm
	prmt.b32 %r2988, %r2989, %r2990, %r6;
	// inline asm
	st.local.u32 	[%rd7+8], %r2988;
	ld.local.v2.u32 	{%r3042, %r3043}, [%rd2];
	// inline asm
	prmt.b32 %r2992, %r3043, %r3042, %r6;
	// inline asm
	st.local.u32 	[%rd7+4], %r2992;
	ld.local.u32 	%r2997, [%rd2];
	// inline asm
	prmt.b32 %r2996, %r2997, %r8913, %r6;
	// inline asm
	st.local.u32 	[%rd7], %r2996;
	st.local.v4.u32 	[%rd6], {%r8913, %r8913, %r8913, %r8913};
	st.local.v4.u32 	[%rd5], {%r8913, %r8913, %r8913, %r8913};
	st.local.v4.u32 	[%rd4], {%r8913, %r8913, %r8913, %r8913};
	st.local.v4.u32 	[%rd3], {%r8913, %r8913, %r8913, %r8913};
	st.local.v2.u32 	[%rd2+8], {%r8913, %r8913};
	mov.u64 	%rd87, 0;
	st.local.u64 	[%rd2], %rd87;
	mov.u32 	%r8934, %r8913;
	mov.u32 	%r8935, %r8913;
	mov.u32 	%r8936, %r8913;
	bra.uni 	BB2_85;

BB2_29:
	setp.gt.s32	%p28, %r991, 13;
	@%p28 bra 	BB2_33;

	setp.eq.s32	%p31, %r991, 12;
	@%p31 bra 	BB2_76;
	bra.uni 	BB2_31;

BB2_76:
	mov.u32 	%r8913, 0;
	// inline asm
	prmt.b32 %r8929, %r8913, %r989, %r6;
	// inline asm
	ld.local.v2.u32 	{%r4456, %r4457}, [%rd9+8];
	// inline asm
	prmt.b32 %r8922, %r4457, %r4456, %r6;
	// inline asm
	ld.local.u32 	%r4313, [%rd9+8];
	ld.local.u32 	%r4314, [%rd9+4];
	// inline asm
	prmt.b32 %r8923, %r4313, %r4314, %r6;
	// inline asm
	ld.local.v2.u32 	{%r4458, %r4459}, [%rd9];
	// inline asm
	prmt.b32 %r8924, %r4459, %r4458, %r6;
	// inline asm
	ld.local.u32 	%r4321, [%rd9];
	ld.local.u32 	%r4322, [%rd8+12];
	// inline asm
	prmt.b32 %r8925, %r4321, %r4322, %r6;
	// inline asm
	ld.local.v2.u32 	{%r4460, %r4461}, [%rd8+8];
	// inline asm
	prmt.b32 %r8918, %r4461, %r4460, %r6;
	// inline asm
	ld.local.u32 	%r4329, [%rd8+8];
	ld.local.u32 	%r4330, [%rd8+4];
	// inline asm
	prmt.b32 %r8919, %r4329, %r4330, %r6;
	// inline asm
	ld.local.v2.u32 	{%r4462, %r4463}, [%rd8];
	// inline asm
	prmt.b32 %r8920, %r4463, %r4462, %r6;
	// inline asm
	ld.local.u32 	%r4337, [%rd8];
	ld.local.u32 	%r4338, [%rd7+12];
	// inline asm
	prmt.b32 %r8921, %r4337, %r4338, %r6;
	// inline asm
	ld.local.v2.u32 	{%r4464, %r4465}, [%rd7+8];
	// inline asm
	prmt.b32 %r8914, %r4465, %r4464, %r6;
	// inline asm
	ld.local.u32 	%r4345, [%rd7+8];
	ld.local.u32 	%r4346, [%rd7+4];
	// inline asm
	prmt.b32 %r8915, %r4345, %r4346, %r6;
	// inline asm
	ld.local.v2.u32 	{%r4466, %r4467}, [%rd7];
	// inline asm
	prmt.b32 %r8916, %r4467, %r4466, %r6;
	// inline asm
	ld.local.u32 	%r4353, [%rd7];
	ld.local.u32 	%r4354, [%rd6+12];
	// inline asm
	prmt.b32 %r8917, %r4353, %r4354, %r6;
	// inline asm
	ld.local.v2.u32 	{%r4468, %r4469}, [%rd6+8];
	// inline asm
	prmt.b32 %r4356, %r4469, %r4468, %r6;
	// inline asm
	st.local.u32 	[%rd9+12], %r4356;
	ld.local.u32 	%r4361, [%rd6+8];
	ld.local.u32 	%r4362, [%rd6+4];
	// inline asm
	prmt.b32 %r4360, %r4361, %r4362, %r6;
	// inline asm
	st.local.u32 	[%rd9+8], %r4360;
	ld.local.v2.u32 	{%r4470, %r4471}, [%rd6];
	// inline asm
	prmt.b32 %r4364, %r4471, %r4470, %r6;
	// inline asm
	st.local.u32 	[%rd9+4], %r4364;
	ld.local.u32 	%r4369, [%rd6];
	ld.local.u32 	%r4370, [%rd5+12];
	// inline asm
	prmt.b32 %r4368, %r4369, %r4370, %r6;
	// inline asm
	st.local.u32 	[%rd9], %r4368;
	ld.local.v2.u32 	{%r4472, %r4473}, [%rd5+8];
	// inline asm
	prmt.b32 %r4372, %r4473, %r4472, %r6;
	// inline asm
	st.local.u32 	[%rd8+12], %r4372;
	ld.local.u32 	%r4377, [%rd5+8];
	ld.local.u32 	%r4378, [%rd5+4];
	// inline asm
	prmt.b32 %r4376, %r4377, %r4378, %r6;
	// inline asm
	st.local.u32 	[%rd8+8], %r4376;
	ld.local.v2.u32 	{%r4474, %r4475}, [%rd5];
	// inline asm
	prmt.b32 %r4380, %r4475, %r4474, %r6;
	// inline asm
	st.local.u32 	[%rd8+4], %r4380;
	ld.local.u32 	%r4385, [%rd5];
	ld.local.u32 	%r4386, [%rd4+12];
	// inline asm
	prmt.b32 %r4384, %r4385, %r4386, %r6;
	// inline asm
	st.local.u32 	[%rd8], %r4384;
	ld.local.v2.u32 	{%r4476, %r4477}, [%rd4+8];
	// inline asm
	prmt.b32 %r4388, %r4477, %r4476, %r6;
	// inline asm
	st.local.u32 	[%rd7+12], %r4388;
	ld.local.u32 	%r4393, [%rd4+8];
	ld.local.u32 	%r4394, [%rd4+4];
	// inline asm
	prmt.b32 %r4392, %r4393, %r4394, %r6;
	// inline asm
	st.local.u32 	[%rd7+8], %r4392;
	ld.local.v2.u32 	{%r4478, %r4479}, [%rd4];
	// inline asm
	prmt.b32 %r4396, %r4479, %r4478, %r6;
	// inline asm
	st.local.u32 	[%rd7+4], %r4396;
	ld.local.u32 	%r4401, [%rd4];
	ld.local.u32 	%r4402, [%rd3+12];
	// inline asm
	prmt.b32 %r4400, %r4401, %r4402, %r6;
	// inline asm
	st.local.u32 	[%rd7], %r4400;
	ld.local.v2.u32 	{%r4480, %r4481}, [%rd3+8];
	// inline asm
	prmt.b32 %r4404, %r4481, %r4480, %r6;
	// inline asm
	st.local.u32 	[%rd6+12], %r4404;
	ld.local.u32 	%r4409, [%rd3+8];
	ld.local.u32 	%r4410, [%rd3+4];
	// inline asm
	prmt.b32 %r4408, %r4409, %r4410, %r6;
	// inline asm
	st.local.u32 	[%rd6+8], %r4408;
	ld.local.v2.u32 	{%r4482, %r4483}, [%rd3];
	// inline asm
	prmt.b32 %r4412, %r4483, %r4482, %r6;
	// inline asm
	st.local.u32 	[%rd6+4], %r4412;
	ld.local.u32 	%r4417, [%rd3];
	ld.local.u32 	%r4418, [%rd2+12];
	// inline asm
	prmt.b32 %r4416, %r4417, %r4418, %r6;
	// inline asm
	st.local.u32 	[%rd6], %r4416;
	ld.local.v2.u32 	{%r4484, %r4485}, [%rd2+8];
	// inline asm
	prmt.b32 %r4420, %r4485, %r4484, %r6;
	// inline asm
	st.local.u32 	[%rd5+12], %r4420;
	ld.local.u32 	%r4425, [%rd2+8];
	ld.local.u32 	%r4426, [%rd2+4];
	// inline asm
	prmt.b32 %r4424, %r4425, %r4426, %r6;
	// inline asm
	st.local.u32 	[%rd5+8], %r4424;
	ld.local.v2.u32 	{%r4486, %r4487}, [%rd2];
	// inline asm
	prmt.b32 %r4428, %r4487, %r4486, %r6;
	// inline asm
	st.local.u32 	[%rd5+4], %r4428;
	ld.local.u32 	%r4433, [%rd2];
	// inline asm
	prmt.b32 %r4432, %r4433, %r8913, %r6;
	// inline asm
	st.local.u32 	[%rd5], %r4432;
	st.local.v4.u32 	[%rd4], {%r8913, %r8913, %r8913, %r8913};
	st.local.v4.u32 	[%rd3], {%r8913, %r8913, %r8913, %r8913};
	st.local.v2.u32 	[%rd2+8], {%r8913, %r8913};
	mov.u64 	%rd95, 0;
	st.local.u64 	[%rd2], %rd95;
	mov.u32 	%r8926, %r8913;
	mov.u32 	%r8927, %r8913;
	mov.u32 	%r8928, %r8913;
	bra.uni 	BB2_83;

BB2_60:
	setp.gt.s32	%p5, %r991, 29;
	@%p5 bra 	BB2_64;

	setp.eq.s32	%p8, %r991, 28;
	@%p8 bra 	BB2_68;
	bra.uni 	BB2_62;

BB2_68:
	mov.u32 	%r8913, 0;
	// inline asm
	prmt.b32 %r8945, %r8913, %r989, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1632, %r1633}, [%rd9+8];
	// inline asm
	prmt.b32 %r8938, %r1633, %r1632, %r6;
	// inline asm
	ld.local.u32 	%r1505, [%rd9+8];
	ld.local.u32 	%r1506, [%rd9+4];
	// inline asm
	prmt.b32 %r8939, %r1505, %r1506, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1634, %r1635}, [%rd9];
	// inline asm
	prmt.b32 %r8940, %r1635, %r1634, %r6;
	// inline asm
	ld.local.u32 	%r1513, [%rd9];
	ld.local.u32 	%r1514, [%rd8+12];
	// inline asm
	prmt.b32 %r8941, %r1513, %r1514, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1636, %r1637}, [%rd8+8];
	// inline asm
	prmt.b32 %r8934, %r1637, %r1636, %r6;
	// inline asm
	ld.local.u32 	%r1521, [%rd8+8];
	ld.local.u32 	%r1522, [%rd8+4];
	// inline asm
	prmt.b32 %r8935, %r1521, %r1522, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1638, %r1639}, [%rd8];
	// inline asm
	prmt.b32 %r8936, %r1639, %r1638, %r6;
	// inline asm
	ld.local.u32 	%r1529, [%rd8];
	ld.local.u32 	%r1530, [%rd7+12];
	// inline asm
	prmt.b32 %r8937, %r1529, %r1530, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1640, %r1641}, [%rd7+8];
	// inline asm
	prmt.b32 %r8930, %r1641, %r1640, %r6;
	// inline asm
	ld.local.u32 	%r1537, [%rd7+8];
	ld.local.u32 	%r1538, [%rd7+4];
	// inline asm
	prmt.b32 %r8931, %r1537, %r1538, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1642, %r1643}, [%rd7];
	// inline asm
	prmt.b32 %r8932, %r1643, %r1642, %r6;
	// inline asm
	ld.local.u32 	%r1545, [%rd7];
	ld.local.u32 	%r1546, [%rd6+12];
	// inline asm
	prmt.b32 %r8933, %r1545, %r1546, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1644, %r1645}, [%rd6+8];
	// inline asm
	prmt.b32 %r8926, %r1645, %r1644, %r6;
	// inline asm
	ld.local.u32 	%r1553, [%rd6+8];
	ld.local.u32 	%r1554, [%rd6+4];
	// inline asm
	prmt.b32 %r8927, %r1553, %r1554, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1646, %r1647}, [%rd6];
	// inline asm
	prmt.b32 %r8928, %r1647, %r1646, %r6;
	// inline asm
	ld.local.u32 	%r1561, [%rd6];
	ld.local.u32 	%r1562, [%rd5+12];
	// inline asm
	prmt.b32 %r8929, %r1561, %r1562, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1648, %r1649}, [%rd5+8];
	// inline asm
	prmt.b32 %r8922, %r1649, %r1648, %r6;
	// inline asm
	ld.local.u32 	%r1569, [%rd5+8];
	ld.local.u32 	%r1570, [%rd5+4];
	// inline asm
	prmt.b32 %r8923, %r1569, %r1570, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1650, %r1651}, [%rd5];
	// inline asm
	prmt.b32 %r8924, %r1651, %r1650, %r6;
	// inline asm
	ld.local.u32 	%r1577, [%rd5];
	ld.local.u32 	%r1578, [%rd4+12];
	// inline asm
	prmt.b32 %r8925, %r1577, %r1578, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1652, %r1653}, [%rd4+8];
	// inline asm
	prmt.b32 %r8918, %r1653, %r1652, %r6;
	// inline asm
	ld.local.u32 	%r1585, [%rd4+8];
	ld.local.u32 	%r1586, [%rd4+4];
	// inline asm
	prmt.b32 %r8919, %r1585, %r1586, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1654, %r1655}, [%rd4];
	// inline asm
	prmt.b32 %r8920, %r1655, %r1654, %r6;
	// inline asm
	ld.local.u32 	%r1593, [%rd4];
	ld.local.u32 	%r1594, [%rd3+12];
	// inline asm
	prmt.b32 %r8921, %r1593, %r1594, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1656, %r1657}, [%rd3+8];
	// inline asm
	prmt.b32 %r8914, %r1657, %r1656, %r6;
	// inline asm
	ld.local.u32 	%r1601, [%rd3+8];
	ld.local.u32 	%r1602, [%rd3+4];
	// inline asm
	prmt.b32 %r8915, %r1601, %r1602, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1658, %r1659}, [%rd3];
	// inline asm
	prmt.b32 %r8916, %r1659, %r1658, %r6;
	// inline asm
	ld.local.u32 	%r1609, [%rd3];
	ld.local.u32 	%r1610, [%rd2+12];
	// inline asm
	prmt.b32 %r8917, %r1609, %r1610, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1660, %r1661}, [%rd2+8];
	// inline asm
	prmt.b32 %r1612, %r1661, %r1660, %r6;
	// inline asm
	st.local.u32 	[%rd9+12], %r1612;
	ld.local.u32 	%r1617, [%rd2+8];
	ld.local.u32 	%r1618, [%rd2+4];
	// inline asm
	prmt.b32 %r1616, %r1617, %r1618, %r6;
	// inline asm
	st.local.u32 	[%rd9+8], %r1616;
	ld.local.v2.u32 	{%r1662, %r1663}, [%rd2];
	// inline asm
	prmt.b32 %r1620, %r1663, %r1662, %r6;
	// inline asm
	st.local.u32 	[%rd9+4], %r1620;
	ld.local.u32 	%r1625, [%rd2];
	// inline asm
	prmt.b32 %r1624, %r1625, %r8913, %r6;
	// inline asm
	st.local.u32 	[%rd9], %r1624;
	st.local.v4.u32 	[%rd8], {%r8913, %r8913, %r8913, %r8913};
	st.local.v4.u32 	[%rd7], {%r8913, %r8913, %r8913, %r8913};
	st.local.v4.u32 	[%rd6], {%r8913, %r8913, %r8913, %r8913};
	st.local.v4.u32 	[%rd5], {%r8913, %r8913, %r8913, %r8913};
	st.local.v4.u32 	[%rd4], {%r8913, %r8913, %r8913, %r8913};
	st.local.v4.u32 	[%rd3], {%r8913, %r8913, %r8913, %r8913};
	st.local.v2.u32 	[%rd2+8], {%r8913, %r8913};
	mov.u64 	%rd79, 0;
	st.local.u64 	[%rd2], %rd79;
	mov.u32 	%r8942, %r8913;
	mov.u32 	%r8943, %r8913;
	mov.u32 	%r8944, %r8913;
	bra.uni 	BB2_91;

BB2_10:
	setp.eq.s32	%p45, %r991, 2;
	@%p45 bra 	BB2_87;
	bra.uni 	BB2_11;

BB2_87:
	mov.u32 	%r8913, 0;
	// inline asm
	prmt.b32 %r8915, %r8913, %r989, %r6;
	// inline asm
	ld.local.v2.u32 	{%r6351, %r6352}, [%rd9+8];
	// inline asm
	prmt.b32 %r8916, %r6352, %r6351, %r6;
	// inline asm
	ld.local.u32 	%r6198, [%rd9+8];
	ld.local.u32 	%r6199, [%rd9+4];
	// inline asm
	prmt.b32 %r8917, %r6198, %r6199, %r6;
	// inline asm
	ld.local.v2.u32 	{%r6353, %r6354}, [%rd9];
	// inline asm
	prmt.b32 %r6201, %r6354, %r6353, %r6;
	// inline asm
	st.local.u32 	[%rd9+12], %r6201;
	ld.local.u32 	%r6206, [%rd9];
	ld.local.u32 	%r6207, [%rd8+12];
	// inline asm
	prmt.b32 %r6205, %r6206, %r6207, %r6;
	// inline asm
	st.local.u32 	[%rd9+8], %r6205;
	ld.local.v2.u32 	{%r6355, %r6356}, [%rd8+8];
	// inline asm
	prmt.b32 %r6209, %r6356, %r6355, %r6;
	// inline asm
	st.local.u32 	[%rd9+4], %r6209;
	ld.local.u32 	%r6214, [%rd8+8];
	ld.local.u32 	%r6215, [%rd8+4];
	// inline asm
	prmt.b32 %r6213, %r6214, %r6215, %r6;
	// inline asm
	st.local.u32 	[%rd9], %r6213;
	ld.local.v2.u32 	{%r6357, %r6358}, [%rd8];
	// inline asm
	prmt.b32 %r6217, %r6358, %r6357, %r6;
	// inline asm
	st.local.u32 	[%rd8+12], %r6217;
	ld.local.u32 	%r6222, [%rd8];
	ld.local.u32 	%r6223, [%rd7+12];
	// inline asm
	prmt.b32 %r6221, %r6222, %r6223, %r6;
	// inline asm
	st.local.u32 	[%rd8+8], %r6221;
	ld.local.v2.u32 	{%r6359, %r6360}, [%rd7+8];
	// inline asm
	prmt.b32 %r6225, %r6360, %r6359, %r6;
	// inline asm
	st.local.u32 	[%rd8+4], %r6225;
	ld.local.u32 	%r6230, [%rd7+8];
	ld.local.u32 	%r6231, [%rd7+4];
	// inline asm
	prmt.b32 %r6229, %r6230, %r6231, %r6;
	// inline asm
	st.local.u32 	[%rd8], %r6229;
	ld.local.v2.u32 	{%r6361, %r6362}, [%rd7];
	// inline asm
	prmt.b32 %r6233, %r6362, %r6361, %r6;
	// inline asm
	st.local.u32 	[%rd7+12], %r6233;
	ld.local.u32 	%r6238, [%rd7];
	ld.local.u32 	%r6239, [%rd6+12];
	// inline asm
	prmt.b32 %r6237, %r6238, %r6239, %r6;
	// inline asm
	st.local.u32 	[%rd7+8], %r6237;
	ld.local.v2.u32 	{%r6363, %r6364}, [%rd6+8];
	// inline asm
	prmt.b32 %r6241, %r6364, %r6363, %r6;
	// inline asm
	st.local.u32 	[%rd7+4], %r6241;
	ld.local.u32 	%r6246, [%rd6+8];
	ld.local.u32 	%r6247, [%rd6+4];
	// inline asm
	prmt.b32 %r6245, %r6246, %r6247, %r6;
	// inline asm
	st.local.u32 	[%rd7], %r6245;
	ld.local.v2.u32 	{%r6365, %r6366}, [%rd6];
	// inline asm
	prmt.b32 %r6249, %r6366, %r6365, %r6;
	// inline asm
	st.local.u32 	[%rd6+12], %r6249;
	ld.local.u32 	%r6254, [%rd6];
	ld.local.u32 	%r6255, [%rd5+12];
	// inline asm
	prmt.b32 %r6253, %r6254, %r6255, %r6;
	// inline asm
	st.local.u32 	[%rd6+8], %r6253;
	ld.local.v2.u32 	{%r6367, %r6368}, [%rd5+8];
	// inline asm
	prmt.b32 %r6257, %r6368, %r6367, %r6;
	// inline asm
	st.local.u32 	[%rd6+4], %r6257;
	ld.local.u32 	%r6262, [%rd5+8];
	ld.local.u32 	%r6263, [%rd5+4];
	// inline asm
	prmt.b32 %r6261, %r6262, %r6263, %r6;
	// inline asm
	st.local.u32 	[%rd6], %r6261;
	ld.local.v2.u32 	{%r6369, %r6370}, [%rd5];
	// inline asm
	prmt.b32 %r6265, %r6370, %r6369, %r6;
	// inline asm
	st.local.u32 	[%rd5+12], %r6265;
	ld.local.u32 	%r6270, [%rd5];
	ld.local.u32 	%r6271, [%rd4+12];
	// inline asm
	prmt.b32 %r6269, %r6270, %r6271, %r6;
	// inline asm
	st.local.u32 	[%rd5+8], %r6269;
	ld.local.v2.u32 	{%r6371, %r6372}, [%rd4+8];
	// inline asm
	prmt.b32 %r6273, %r6372, %r6371, %r6;
	// inline asm
	st.local.u32 	[%rd5+4], %r6273;
	ld.local.u32 	%r6278, [%rd4+8];
	ld.local.u32 	%r6279, [%rd4+4];
	// inline asm
	prmt.b32 %r6277, %r6278, %r6279, %r6;
	// inline asm
	st.local.u32 	[%rd5], %r6277;
	ld.local.v2.u32 	{%r6373, %r6374}, [%rd4];
	// inline asm
	prmt.b32 %r6281, %r6374, %r6373, %r6;
	// inline asm
	st.local.u32 	[%rd4+12], %r6281;
	ld.local.u32 	%r6286, [%rd4];
	ld.local.u32 	%r6287, [%rd3+12];
	// inline asm
	prmt.b32 %r6285, %r6286, %r6287, %r6;
	// inline asm
	st.local.u32 	[%rd4+8], %r6285;
	ld.local.v2.u32 	{%r6375, %r6376}, [%rd3+8];
	// inline asm
	prmt.b32 %r6289, %r6376, %r6375, %r6;
	// inline asm
	st.local.u32 	[%rd4+4], %r6289;
	ld.local.u32 	%r6294, [%rd3+8];
	ld.local.u32 	%r6295, [%rd3+4];
	// inline asm
	prmt.b32 %r6293, %r6294, %r6295, %r6;
	// inline asm
	st.local.u32 	[%rd4], %r6293;
	ld.local.v2.u32 	{%r6377, %r6378}, [%rd3];
	// inline asm
	prmt.b32 %r6297, %r6378, %r6377, %r6;
	// inline asm
	st.local.u32 	[%rd3+12], %r6297;
	ld.local.u32 	%r6302, [%rd3];
	ld.local.u32 	%r6303, [%rd2+12];
	// inline asm
	prmt.b32 %r6301, %r6302, %r6303, %r6;
	// inline asm
	st.local.u32 	[%rd3+8], %r6301;
	ld.local.v2.u32 	{%r6379, %r6380}, [%rd2+8];
	// inline asm
	prmt.b32 %r6305, %r6380, %r6379, %r6;
	// inline asm
	st.local.u32 	[%rd3+4], %r6305;
	ld.local.u32 	%r6310, [%rd2+8];
	ld.local.u32 	%r6311, [%rd2+4];
	// inline asm
	prmt.b32 %r6309, %r6310, %r6311, %r6;
	// inline asm
	st.local.u32 	[%rd3], %r6309;
	ld.local.v2.u32 	{%r6381, %r6382}, [%rd2];
	// inline asm
	prmt.b32 %r6313, %r6382, %r6381, %r6;
	// inline asm
	st.local.u32 	[%rd2+12], %r6313;
	ld.local.u32 	%r6318, [%rd2];
	// inline asm
	prmt.b32 %r6317, %r6318, %r8913, %r6;
	// inline asm
	st.local.u32 	[%rd2+8], %r6317;
	mov.u64 	%rd105, 0;
	st.local.u64 	[%rd2], %rd105;
	mov.u32 	%r8914, %r8913;
	bra.uni 	BB2_13;

BB2_42:
	setp.eq.s32	%p22, %r991, 18;
	@%p22 bra 	BB2_73;
	bra.uni 	BB2_43;

BB2_73:
	mov.u32 	%r8913, 0;
	// inline asm
	prmt.b32 %r8931, %r8913, %r989, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3367, %r3368}, [%rd9+8];
	// inline asm
	prmt.b32 %r8932, %r3368, %r3367, %r6;
	// inline asm
	ld.local.u32 	%r3230, [%rd9+8];
	ld.local.u32 	%r3231, [%rd9+4];
	// inline asm
	prmt.b32 %r8933, %r3230, %r3231, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3369, %r3370}, [%rd9];
	// inline asm
	prmt.b32 %r8926, %r3370, %r3369, %r6;
	// inline asm
	ld.local.u32 	%r3238, [%rd9];
	ld.local.u32 	%r3239, [%rd8+12];
	// inline asm
	prmt.b32 %r8927, %r3238, %r3239, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3371, %r3372}, [%rd8+8];
	// inline asm
	prmt.b32 %r8928, %r3372, %r3371, %r6;
	// inline asm
	ld.local.u32 	%r3246, [%rd8+8];
	ld.local.u32 	%r3247, [%rd8+4];
	// inline asm
	prmt.b32 %r8929, %r3246, %r3247, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3373, %r3374}, [%rd8];
	// inline asm
	prmt.b32 %r8922, %r3374, %r3373, %r6;
	// inline asm
	ld.local.u32 	%r3254, [%rd8];
	ld.local.u32 	%r3255, [%rd7+12];
	// inline asm
	prmt.b32 %r8923, %r3254, %r3255, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3375, %r3376}, [%rd7+8];
	// inline asm
	prmt.b32 %r8924, %r3376, %r3375, %r6;
	// inline asm
	ld.local.u32 	%r3262, [%rd7+8];
	ld.local.u32 	%r3263, [%rd7+4];
	// inline asm
	prmt.b32 %r8925, %r3262, %r3263, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3377, %r3378}, [%rd7];
	// inline asm
	prmt.b32 %r8918, %r3378, %r3377, %r6;
	// inline asm
	ld.local.u32 	%r3270, [%rd7];
	ld.local.u32 	%r3271, [%rd6+12];
	// inline asm
	prmt.b32 %r8919, %r3270, %r3271, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3379, %r3380}, [%rd6+8];
	// inline asm
	prmt.b32 %r8920, %r3380, %r3379, %r6;
	// inline asm
	ld.local.u32 	%r3278, [%rd6+8];
	ld.local.u32 	%r3279, [%rd6+4];
	// inline asm
	prmt.b32 %r8921, %r3278, %r3279, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3381, %r3382}, [%rd6];
	// inline asm
	prmt.b32 %r8914, %r3382, %r3381, %r6;
	// inline asm
	ld.local.u32 	%r3286, [%rd6];
	ld.local.u32 	%r3287, [%rd5+12];
	// inline asm
	prmt.b32 %r8915, %r3286, %r3287, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3383, %r3384}, [%rd5+8];
	// inline asm
	prmt.b32 %r8916, %r3384, %r3383, %r6;
	// inline asm
	ld.local.u32 	%r3294, [%rd5+8];
	ld.local.u32 	%r3295, [%rd5+4];
	// inline asm
	prmt.b32 %r8917, %r3294, %r3295, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3385, %r3386}, [%rd5];
	// inline asm
	prmt.b32 %r3297, %r3386, %r3385, %r6;
	// inline asm
	st.local.u32 	[%rd9+12], %r3297;
	ld.local.u32 	%r3302, [%rd5];
	ld.local.u32 	%r3303, [%rd4+12];
	// inline asm
	prmt.b32 %r3301, %r3302, %r3303, %r6;
	// inline asm
	st.local.u32 	[%rd9+8], %r3301;
	ld.local.v2.u32 	{%r3387, %r3388}, [%rd4+8];
	// inline asm
	prmt.b32 %r3305, %r3388, %r3387, %r6;
	// inline asm
	st.local.u32 	[%rd9+4], %r3305;
	ld.local.u32 	%r3310, [%rd4+8];
	ld.local.u32 	%r3311, [%rd4+4];
	// inline asm
	prmt.b32 %r3309, %r3310, %r3311, %r6;
	// inline asm
	st.local.u32 	[%rd9], %r3309;
	ld.local.v2.u32 	{%r3389, %r3390}, [%rd4];
	// inline asm
	prmt.b32 %r3313, %r3390, %r3389, %r6;
	// inline asm
	st.local.u32 	[%rd8+12], %r3313;
	ld.local.u32 	%r3318, [%rd4];
	ld.local.u32 	%r3319, [%rd3+12];
	// inline asm
	prmt.b32 %r3317, %r3318, %r3319, %r6;
	// inline asm
	st.local.u32 	[%rd8+8], %r3317;
	ld.local.v2.u32 	{%r3391, %r3392}, [%rd3+8];
	// inline asm
	prmt.b32 %r3321, %r3392, %r3391, %r6;
	// inline asm
	st.local.u32 	[%rd8+4], %r3321;
	ld.local.u32 	%r3326, [%rd3+8];
	ld.local.u32 	%r3327, [%rd3+4];
	// inline asm
	prmt.b32 %r3325, %r3326, %r3327, %r6;
	// inline asm
	st.local.u32 	[%rd8], %r3325;
	ld.local.v2.u32 	{%r3393, %r3394}, [%rd3];
	// inline asm
	prmt.b32 %r3329, %r3394, %r3393, %r6;
	// inline asm
	st.local.u32 	[%rd7+12], %r3329;
	ld.local.u32 	%r3334, [%rd3];
	ld.local.u32 	%r3335, [%rd2+12];
	// inline asm
	prmt.b32 %r3333, %r3334, %r3335, %r6;
	// inline asm
	st.local.u32 	[%rd7+8], %r3333;
	ld.local.v2.u32 	{%r3395, %r3396}, [%rd2+8];
	// inline asm
	prmt.b32 %r3337, %r3396, %r3395, %r6;
	// inline asm
	st.local.u32 	[%rd7+4], %r3337;
	ld.local.u32 	%r3342, [%rd2+8];
	ld.local.u32 	%r3343, [%rd2+4];
	// inline asm
	prmt.b32 %r3341, %r3342, %r3343, %r6;
	// inline asm
	st.local.u32 	[%rd7], %r3341;
	ld.local.v2.u32 	{%r3397, %r3398}, [%rd2];
	// inline asm
	prmt.b32 %r3345, %r3398, %r3397, %r6;
	// inline asm
	st.local.u32 	[%rd6+12], %r3345;
	ld.local.u32 	%r3350, [%rd2];
	// inline asm
	prmt.b32 %r3349, %r3350, %r8913, %r6;
	// inline asm
	st.local.u32 	[%rd6+8], %r3349;
	st.local.v2.u32 	[%rd6], {%r8913, %r8913};
	st.local.u32 	[%rd5+12], %r8913;
	st.local.u32 	[%rd5+8], %r8913;
	st.local.u32 	[%rd5+4], %r8913;
	st.local.u32 	[%rd5], %r8913;
	st.local.u32 	[%rd4+12], %r8913;
	st.local.u32 	[%rd4+8], %r8913;
	st.local.u32 	[%rd4+4], %r8913;
	st.local.u32 	[%rd4], %r8913;
	st.local.u32 	[%rd3+12], %r8913;
	st.local.u32 	[%rd3+8], %r8913;
	st.local.u32 	[%rd3+4], %r8913;
	st.local.u32 	[%rd3], %r8913;
	st.local.u32 	[%rd2+12], %r8913;
	st.local.u32 	[%rd2+8], %r8913;
	mov.u64 	%rd89, 0;
	st.local.u32 	[%rd2+4], %rd89;
	st.local.u32 	[%rd2], %rd89;
	mov.u32 	%r8930, %r8913;
	bra.uni 	BB2_84;

BB2_26:
	setp.eq.s32	%p34, %r991, 10;
	@%p34 bra 	BB2_77;
	bra.uni 	BB2_27;

BB2_77:
	mov.u32 	%r8913, 0;
	// inline asm
	prmt.b32 %r8923, %r8913, %r989, %r6;
	// inline asm
	ld.local.v2.u32 	{%r4827, %r4828}, [%rd9+8];
	// inline asm
	prmt.b32 %r8924, %r4828, %r4827, %r6;
	// inline asm
	ld.local.u32 	%r4682, [%rd9+8];
	ld.local.u32 	%r4683, [%rd9+4];
	// inline asm
	prmt.b32 %r8925, %r4682, %r4683, %r6;
	// inline asm
	ld.local.v2.u32 	{%r4829, %r4830}, [%rd9];
	// inline asm
	prmt.b32 %r8918, %r4830, %r4829, %r6;
	// inline asm
	ld.local.u32 	%r4690, [%rd9];
	ld.local.u32 	%r4691, [%rd8+12];
	// inline asm
	prmt.b32 %r8919, %r4690, %r4691, %r6;
	// inline asm
	ld.local.v2.u32 	{%r4831, %r4832}, [%rd8+8];
	// inline asm
	prmt.b32 %r8920, %r4832, %r4831, %r6;
	// inline asm
	ld.local.u32 	%r4698, [%rd8+8];
	ld.local.u32 	%r4699, [%rd8+4];
	// inline asm
	prmt.b32 %r8921, %r4698, %r4699, %r6;
	// inline asm
	ld.local.v2.u32 	{%r4833, %r4834}, [%rd8];
	// inline asm
	prmt.b32 %r8914, %r4834, %r4833, %r6;
	// inline asm
	ld.local.u32 	%r4706, [%rd8];
	ld.local.u32 	%r4707, [%rd7+12];
	// inline asm
	prmt.b32 %r8915, %r4706, %r4707, %r6;
	// inline asm
	ld.local.v2.u32 	{%r4835, %r4836}, [%rd7+8];
	// inline asm
	prmt.b32 %r8916, %r4836, %r4835, %r6;
	// inline asm
	ld.local.u32 	%r4714, [%rd7+8];
	ld.local.u32 	%r4715, [%rd7+4];
	// inline asm
	prmt.b32 %r8917, %r4714, %r4715, %r6;
	// inline asm
	ld.local.v2.u32 	{%r4837, %r4838}, [%rd7];
	// inline asm
	prmt.b32 %r4717, %r4838, %r4837, %r6;
	// inline asm
	st.local.u32 	[%rd9+12], %r4717;
	ld.local.u32 	%r4722, [%rd7];
	ld.local.u32 	%r4723, [%rd6+12];
	// inline asm
	prmt.b32 %r4721, %r4722, %r4723, %r6;
	// inline asm
	st.local.u32 	[%rd9+8], %r4721;
	ld.local.v2.u32 	{%r4839, %r4840}, [%rd6+8];
	// inline asm
	prmt.b32 %r4725, %r4840, %r4839, %r6;
	// inline asm
	st.local.u32 	[%rd9+4], %r4725;
	ld.local.u32 	%r4730, [%rd6+8];
	ld.local.u32 	%r4731, [%rd6+4];
	// inline asm
	prmt.b32 %r4729, %r4730, %r4731, %r6;
	// inline asm
	st.local.u32 	[%rd9], %r4729;
	ld.local.v2.u32 	{%r4841, %r4842}, [%rd6];
	// inline asm
	prmt.b32 %r4733, %r4842, %r4841, %r6;
	// inline asm
	st.local.u32 	[%rd8+12], %r4733;
	ld.local.u32 	%r4738, [%rd6];
	ld.local.u32 	%r4739, [%rd5+12];
	// inline asm
	prmt.b32 %r4737, %r4738, %r4739, %r6;
	// inline asm
	st.local.u32 	[%rd8+8], %r4737;
	ld.local.v2.u32 	{%r4843, %r4844}, [%rd5+8];
	// inline asm
	prmt.b32 %r4741, %r4844, %r4843, %r6;
	// inline asm
	st.local.u32 	[%rd8+4], %r4741;
	ld.local.u32 	%r4746, [%rd5+8];
	ld.local.u32 	%r4747, [%rd5+4];
	// inline asm
	prmt.b32 %r4745, %r4746, %r4747, %r6;
	// inline asm
	st.local.u32 	[%rd8], %r4745;
	ld.local.v2.u32 	{%r4845, %r4846}, [%rd5];
	// inline asm
	prmt.b32 %r4749, %r4846, %r4845, %r6;
	// inline asm
	st.local.u32 	[%rd7+12], %r4749;
	ld.local.u32 	%r4754, [%rd5];
	ld.local.u32 	%r4755, [%rd4+12];
	// inline asm
	prmt.b32 %r4753, %r4754, %r4755, %r6;
	// inline asm
	st.local.u32 	[%rd7+8], %r4753;
	ld.local.v2.u32 	{%r4847, %r4848}, [%rd4+8];
	// inline asm
	prmt.b32 %r4757, %r4848, %r4847, %r6;
	// inline asm
	st.local.u32 	[%rd7+4], %r4757;
	ld.local.u32 	%r4762, [%rd4+8];
	ld.local.u32 	%r4763, [%rd4+4];
	// inline asm
	prmt.b32 %r4761, %r4762, %r4763, %r6;
	// inline asm
	st.local.u32 	[%rd7], %r4761;
	ld.local.v2.u32 	{%r4849, %r4850}, [%rd4];
	// inline asm
	prmt.b32 %r4765, %r4850, %r4849, %r6;
	// inline asm
	st.local.u32 	[%rd6+12], %r4765;
	ld.local.u32 	%r4770, [%rd4];
	ld.local.u32 	%r4771, [%rd3+12];
	// inline asm
	prmt.b32 %r4769, %r4770, %r4771, %r6;
	// inline asm
	st.local.u32 	[%rd6+8], %r4769;
	ld.local.v2.u32 	{%r4851, %r4852}, [%rd3+8];
	// inline asm
	prmt.b32 %r4773, %r4852, %r4851, %r6;
	// inline asm
	st.local.u32 	[%rd6+4], %r4773;
	ld.local.u32 	%r4778, [%rd3+8];
	ld.local.u32 	%r4779, [%rd3+4];
	// inline asm
	prmt.b32 %r4777, %r4778, %r4779, %r6;
	// inline asm
	st.local.u32 	[%rd6], %r4777;
	ld.local.v2.u32 	{%r4853, %r4854}, [%rd3];
	// inline asm
	prmt.b32 %r4781, %r4854, %r4853, %r6;
	// inline asm
	st.local.u32 	[%rd5+12], %r4781;
	ld.local.u32 	%r4786, [%rd3];
	ld.local.u32 	%r4787, [%rd2+12];
	// inline asm
	prmt.b32 %r4785, %r4786, %r4787, %r6;
	// inline asm
	st.local.u32 	[%rd5+8], %r4785;
	ld.local.v2.u32 	{%r4855, %r4856}, [%rd2+8];
	// inline asm
	prmt.b32 %r4789, %r4856, %r4855, %r6;
	// inline asm
	st.local.u32 	[%rd5+4], %r4789;
	ld.local.u32 	%r4794, [%rd2+8];
	ld.local.u32 	%r4795, [%rd2+4];
	// inline asm
	prmt.b32 %r4793, %r4794, %r4795, %r6;
	// inline asm
	st.local.u32 	[%rd5], %r4793;
	ld.local.v2.u32 	{%r4857, %r4858}, [%rd2];
	// inline asm
	prmt.b32 %r4797, %r4858, %r4857, %r6;
	// inline asm
	st.local.u32 	[%rd4+12], %r4797;
	ld.local.u32 	%r4802, [%rd2];
	// inline asm
	prmt.b32 %r4801, %r4802, %r8913, %r6;
	// inline asm
	st.local.u32 	[%rd4+8], %r4801;
	st.local.v2.u32 	[%rd4], {%r8913, %r8913};
	st.local.u32 	[%rd3+12], %r8913;
	st.local.u32 	[%rd3+8], %r8913;
	st.local.u32 	[%rd3+4], %r8913;
	st.local.u32 	[%rd3], %r8913;
	st.local.u32 	[%rd2+12], %r8913;
	st.local.u32 	[%rd2+8], %r8913;
	mov.u64 	%rd97, 0;
	st.local.u32 	[%rd2+4], %rd97;
	st.local.u32 	[%rd2], %rd97;
	mov.u32 	%r8922, %r8913;
	bra.uni 	BB2_82;

BB2_57:
	setp.eq.s32	%p11, %r991, 26;
	@%p11 bra 	BB2_69;
	bra.uni 	BB2_58;

BB2_69:
	mov.u32 	%r8913, 0;
	// inline asm
	prmt.b32 %r8939, %r8913, %r989, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1971, %r1972}, [%rd9+8];
	// inline asm
	prmt.b32 %r8940, %r1972, %r1971, %r6;
	// inline asm
	ld.local.u32 	%r1842, [%rd9+8];
	ld.local.u32 	%r1843, [%rd9+4];
	// inline asm
	prmt.b32 %r8941, %r1842, %r1843, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1973, %r1974}, [%rd9];
	// inline asm
	prmt.b32 %r8934, %r1974, %r1973, %r6;
	// inline asm
	ld.local.u32 	%r1850, [%rd9];
	ld.local.u32 	%r1851, [%rd8+12];
	// inline asm
	prmt.b32 %r8935, %r1850, %r1851, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1975, %r1976}, [%rd8+8];
	// inline asm
	prmt.b32 %r8936, %r1976, %r1975, %r6;
	// inline asm
	ld.local.u32 	%r1858, [%rd8+8];
	ld.local.u32 	%r1859, [%rd8+4];
	// inline asm
	prmt.b32 %r8937, %r1858, %r1859, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1977, %r1978}, [%rd8];
	// inline asm
	prmt.b32 %r8930, %r1978, %r1977, %r6;
	// inline asm
	ld.local.u32 	%r1866, [%rd8];
	ld.local.u32 	%r1867, [%rd7+12];
	// inline asm
	prmt.b32 %r8931, %r1866, %r1867, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1979, %r1980}, [%rd7+8];
	// inline asm
	prmt.b32 %r8932, %r1980, %r1979, %r6;
	// inline asm
	ld.local.u32 	%r1874, [%rd7+8];
	ld.local.u32 	%r1875, [%rd7+4];
	// inline asm
	prmt.b32 %r8933, %r1874, %r1875, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1981, %r1982}, [%rd7];
	// inline asm
	prmt.b32 %r8926, %r1982, %r1981, %r6;
	// inline asm
	ld.local.u32 	%r1882, [%rd7];
	ld.local.u32 	%r1883, [%rd6+12];
	// inline asm
	prmt.b32 %r8927, %r1882, %r1883, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1983, %r1984}, [%rd6+8];
	// inline asm
	prmt.b32 %r8928, %r1984, %r1983, %r6;
	// inline asm
	ld.local.u32 	%r1890, [%rd6+8];
	ld.local.u32 	%r1891, [%rd6+4];
	// inline asm
	prmt.b32 %r8929, %r1890, %r1891, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1985, %r1986}, [%rd6];
	// inline asm
	prmt.b32 %r8922, %r1986, %r1985, %r6;
	// inline asm
	ld.local.u32 	%r1898, [%rd6];
	ld.local.u32 	%r1899, [%rd5+12];
	// inline asm
	prmt.b32 %r8923, %r1898, %r1899, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1987, %r1988}, [%rd5+8];
	// inline asm
	prmt.b32 %r8924, %r1988, %r1987, %r6;
	// inline asm
	ld.local.u32 	%r1906, [%rd5+8];
	ld.local.u32 	%r1907, [%rd5+4];
	// inline asm
	prmt.b32 %r8925, %r1906, %r1907, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1989, %r1990}, [%rd5];
	// inline asm
	prmt.b32 %r8918, %r1990, %r1989, %r6;
	// inline asm
	ld.local.u32 	%r1914, [%rd5];
	ld.local.u32 	%r1915, [%rd4+12];
	// inline asm
	prmt.b32 %r8919, %r1914, %r1915, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1991, %r1992}, [%rd4+8];
	// inline asm
	prmt.b32 %r8920, %r1992, %r1991, %r6;
	// inline asm
	ld.local.u32 	%r1922, [%rd4+8];
	ld.local.u32 	%r1923, [%rd4+4];
	// inline asm
	prmt.b32 %r8921, %r1922, %r1923, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1993, %r1994}, [%rd4];
	// inline asm
	prmt.b32 %r8914, %r1994, %r1993, %r6;
	// inline asm
	ld.local.u32 	%r1930, [%rd4];
	ld.local.u32 	%r1931, [%rd3+12];
	// inline asm
	prmt.b32 %r8915, %r1930, %r1931, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1995, %r1996}, [%rd3+8];
	// inline asm
	prmt.b32 %r8916, %r1996, %r1995, %r6;
	// inline asm
	ld.local.u32 	%r1938, [%rd3+8];
	ld.local.u32 	%r1939, [%rd3+4];
	// inline asm
	prmt.b32 %r8917, %r1938, %r1939, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1997, %r1998}, [%rd3];
	// inline asm
	prmt.b32 %r1941, %r1998, %r1997, %r6;
	// inline asm
	st.local.u32 	[%rd9+12], %r1941;
	ld.local.u32 	%r1946, [%rd3];
	ld.local.u32 	%r1947, [%rd2+12];
	// inline asm
	prmt.b32 %r1945, %r1946, %r1947, %r6;
	// inline asm
	st.local.u32 	[%rd9+8], %r1945;
	ld.local.v2.u32 	{%r1999, %r2000}, [%rd2+8];
	// inline asm
	prmt.b32 %r1949, %r2000, %r1999, %r6;
	// inline asm
	st.local.u32 	[%rd9+4], %r1949;
	ld.local.u32 	%r1954, [%rd2+8];
	ld.local.u32 	%r1955, [%rd2+4];
	// inline asm
	prmt.b32 %r1953, %r1954, %r1955, %r6;
	// inline asm
	st.local.u32 	[%rd9], %r1953;
	ld.local.v2.u32 	{%r2001, %r2002}, [%rd2];
	// inline asm
	prmt.b32 %r1957, %r2002, %r2001, %r6;
	// inline asm
	st.local.u32 	[%rd8+12], %r1957;
	ld.local.u32 	%r1962, [%rd2];
	// inline asm
	prmt.b32 %r1961, %r1962, %r8913, %r6;
	// inline asm
	st.local.u32 	[%rd8+8], %r1961;
	st.local.v2.u32 	[%rd8], {%r8913, %r8913};
	st.local.u32 	[%rd7+12], %r8913;
	st.local.u32 	[%rd7+8], %r8913;
	st.local.u32 	[%rd7+4], %r8913;
	st.local.u32 	[%rd7], %r8913;
	st.local.u32 	[%rd6+12], %r8913;
	st.local.u32 	[%rd6+8], %r8913;
	st.local.u32 	[%rd6+4], %r8913;
	st.local.u32 	[%rd6], %r8913;
	st.local.u32 	[%rd5+12], %r8913;
	st.local.u32 	[%rd5+8], %r8913;
	st.local.u32 	[%rd5+4], %r8913;
	st.local.u32 	[%rd5], %r8913;
	st.local.u32 	[%rd4+12], %r8913;
	st.local.u32 	[%rd4+8], %r8913;
	st.local.u32 	[%rd4+4], %r8913;
	st.local.u32 	[%rd4], %r8913;
	st.local.u32 	[%rd3+12], %r8913;
	st.local.u32 	[%rd3+8], %r8913;
	st.local.u32 	[%rd3+4], %r8913;
	st.local.u32 	[%rd3], %r8913;
	st.local.u32 	[%rd2+12], %r8913;
	st.local.u32 	[%rd2+8], %r8913;
	mov.u64 	%rd81, 0;
	st.local.u32 	[%rd2+4], %rd81;
	st.local.u32 	[%rd2], %rd81;
	mov.u32 	%r8938, %r8913;
	bra.uni 	BB2_86;

BB2_18:
	setp.eq.s32	%p40, %r991, 6;
	@%p40 bra 	BB2_79;
	bra.uni 	BB2_19;

BB2_79:
	mov.u32 	%r8913, 0;
	// inline asm
	prmt.b32 %r8919, %r8913, %r989, %r6;
	// inline asm
	ld.local.v2.u32 	{%r5581, %r5582}, [%rd9+8];
	// inline asm
	prmt.b32 %r8920, %r5582, %r5581, %r6;
	// inline asm
	ld.local.u32 	%r5432, [%rd9+8];
	ld.local.u32 	%r5433, [%rd9+4];
	// inline asm
	prmt.b32 %r8921, %r5432, %r5433, %r6;
	// inline asm
	ld.local.v2.u32 	{%r5583, %r5584}, [%rd9];
	// inline asm
	prmt.b32 %r8914, %r5584, %r5583, %r6;
	// inline asm
	ld.local.u32 	%r5440, [%rd9];
	ld.local.u32 	%r5441, [%rd8+12];
	// inline asm
	prmt.b32 %r8915, %r5440, %r5441, %r6;
	// inline asm
	ld.local.v2.u32 	{%r5585, %r5586}, [%rd8+8];
	// inline asm
	prmt.b32 %r8916, %r5586, %r5585, %r6;
	// inline asm
	ld.local.u32 	%r5448, [%rd8+8];
	ld.local.u32 	%r5449, [%rd8+4];
	// inline asm
	prmt.b32 %r8917, %r5448, %r5449, %r6;
	// inline asm
	ld.local.v2.u32 	{%r5587, %r5588}, [%rd8];
	// inline asm
	prmt.b32 %r5451, %r5588, %r5587, %r6;
	// inline asm
	st.local.u32 	[%rd9+12], %r5451;
	ld.local.u32 	%r5456, [%rd8];
	ld.local.u32 	%r5457, [%rd7+12];
	// inline asm
	prmt.b32 %r5455, %r5456, %r5457, %r6;
	// inline asm
	st.local.u32 	[%rd9+8], %r5455;
	ld.local.v2.u32 	{%r5589, %r5590}, [%rd7+8];
	// inline asm
	prmt.b32 %r5459, %r5590, %r5589, %r6;
	// inline asm
	st.local.u32 	[%rd9+4], %r5459;
	ld.local.u32 	%r5464, [%rd7+8];
	ld.local.u32 	%r5465, [%rd7+4];
	// inline asm
	prmt.b32 %r5463, %r5464, %r5465, %r6;
	// inline asm
	st.local.u32 	[%rd9], %r5463;
	ld.local.v2.u32 	{%r5591, %r5592}, [%rd7];
	// inline asm
	prmt.b32 %r5467, %r5592, %r5591, %r6;
	// inline asm
	st.local.u32 	[%rd8+12], %r5467;
	ld.local.u32 	%r5472, [%rd7];
	ld.local.u32 	%r5473, [%rd6+12];
	// inline asm
	prmt.b32 %r5471, %r5472, %r5473, %r6;
	// inline asm
	st.local.u32 	[%rd8+8], %r5471;
	ld.local.v2.u32 	{%r5593, %r5594}, [%rd6+8];
	// inline asm
	prmt.b32 %r5475, %r5594, %r5593, %r6;
	// inline asm
	st.local.u32 	[%rd8+4], %r5475;
	ld.local.u32 	%r5480, [%rd6+8];
	ld.local.u32 	%r5481, [%rd6+4];
	// inline asm
	prmt.b32 %r5479, %r5480, %r5481, %r6;
	// inline asm
	st.local.u32 	[%rd8], %r5479;
	ld.local.v2.u32 	{%r5595, %r5596}, [%rd6];
	// inline asm
	prmt.b32 %r5483, %r5596, %r5595, %r6;
	// inline asm
	st.local.u32 	[%rd7+12], %r5483;
	ld.local.u32 	%r5488, [%rd6];
	ld.local.u32 	%r5489, [%rd5+12];
	// inline asm
	prmt.b32 %r5487, %r5488, %r5489, %r6;
	// inline asm
	st.local.u32 	[%rd7+8], %r5487;
	ld.local.v2.u32 	{%r5597, %r5598}, [%rd5+8];
	// inline asm
	prmt.b32 %r5491, %r5598, %r5597, %r6;
	// inline asm
	st.local.u32 	[%rd7+4], %r5491;
	ld.local.u32 	%r5496, [%rd5+8];
	ld.local.u32 	%r5497, [%rd5+4];
	// inline asm
	prmt.b32 %r5495, %r5496, %r5497, %r6;
	// inline asm
	st.local.u32 	[%rd7], %r5495;
	ld.local.v2.u32 	{%r5599, %r5600}, [%rd5];
	// inline asm
	prmt.b32 %r5499, %r5600, %r5599, %r6;
	// inline asm
	st.local.u32 	[%rd6+12], %r5499;
	ld.local.u32 	%r5504, [%rd5];
	ld.local.u32 	%r5505, [%rd4+12];
	// inline asm
	prmt.b32 %r5503, %r5504, %r5505, %r6;
	// inline asm
	st.local.u32 	[%rd6+8], %r5503;
	ld.local.v2.u32 	{%r5601, %r5602}, [%rd4+8];
	// inline asm
	prmt.b32 %r5507, %r5602, %r5601, %r6;
	// inline asm
	st.local.u32 	[%rd6+4], %r5507;
	ld.local.u32 	%r5512, [%rd4+8];
	ld.local.u32 	%r5513, [%rd4+4];
	// inline asm
	prmt.b32 %r5511, %r5512, %r5513, %r6;
	// inline asm
	st.local.u32 	[%rd6], %r5511;
	ld.local.v2.u32 	{%r5603, %r5604}, [%rd4];
	// inline asm
	prmt.b32 %r5515, %r5604, %r5603, %r6;
	// inline asm
	st.local.u32 	[%rd5+12], %r5515;
	ld.local.u32 	%r5520, [%rd4];
	ld.local.u32 	%r5521, [%rd3+12];
	// inline asm
	prmt.b32 %r5519, %r5520, %r5521, %r6;
	// inline asm
	st.local.u32 	[%rd5+8], %r5519;
	ld.local.v2.u32 	{%r5605, %r5606}, [%rd3+8];
	// inline asm
	prmt.b32 %r5523, %r5606, %r5605, %r6;
	// inline asm
	st.local.u32 	[%rd5+4], %r5523;
	ld.local.u32 	%r5528, [%rd3+8];
	ld.local.u32 	%r5529, [%rd3+4];
	// inline asm
	prmt.b32 %r5527, %r5528, %r5529, %r6;
	// inline asm
	st.local.u32 	[%rd5], %r5527;
	ld.local.v2.u32 	{%r5607, %r5608}, [%rd3];
	// inline asm
	prmt.b32 %r5531, %r5608, %r5607, %r6;
	// inline asm
	st.local.u32 	[%rd4+12], %r5531;
	ld.local.u32 	%r5536, [%rd3];
	ld.local.u32 	%r5537, [%rd2+12];
	// inline asm
	prmt.b32 %r5535, %r5536, %r5537, %r6;
	// inline asm
	st.local.u32 	[%rd4+8], %r5535;
	ld.local.v2.u32 	{%r5609, %r5610}, [%rd2+8];
	// inline asm
	prmt.b32 %r5539, %r5610, %r5609, %r6;
	// inline asm
	st.local.u32 	[%rd4+4], %r5539;
	ld.local.u32 	%r5544, [%rd2+8];
	ld.local.u32 	%r5545, [%rd2+4];
	// inline asm
	prmt.b32 %r5543, %r5544, %r5545, %r6;
	// inline asm
	st.local.u32 	[%rd4], %r5543;
	ld.local.v2.u32 	{%r5611, %r5612}, [%rd2];
	// inline asm
	prmt.b32 %r5547, %r5612, %r5611, %r6;
	// inline asm
	st.local.u32 	[%rd3+12], %r5547;
	ld.local.u32 	%r5552, [%rd2];
	// inline asm
	prmt.b32 %r5551, %r5552, %r8913, %r6;
	// inline asm
	st.local.u32 	[%rd3+8], %r5551;
	st.local.v2.u32 	[%rd3], {%r8913, %r8913};
	st.local.u32 	[%rd2+12], %r8913;
	st.local.u32 	[%rd2+8], %r8913;
	mov.u64 	%rd101, 0;
	st.local.u32 	[%rd2+4], %rd101;
	st.local.u32 	[%rd2], %rd101;
	mov.u32 	%r8918, %r8913;
	bra.uni 	BB2_81;

BB2_49:
	setp.eq.s32	%p17, %r991, 22;
	@%p17 bra 	BB2_71;
	bra.uni 	BB2_50;

BB2_71:
	mov.u32 	%r8913, 0;
	// inline asm
	prmt.b32 %r8935, %r8913, %r989, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2661, %r2662}, [%rd9+8];
	// inline asm
	prmt.b32 %r8936, %r2662, %r2661, %r6;
	// inline asm
	ld.local.u32 	%r2528, [%rd9+8];
	ld.local.u32 	%r2529, [%rd9+4];
	// inline asm
	prmt.b32 %r8937, %r2528, %r2529, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2663, %r2664}, [%rd9];
	// inline asm
	prmt.b32 %r8930, %r2664, %r2663, %r6;
	// inline asm
	ld.local.u32 	%r2536, [%rd9];
	ld.local.u32 	%r2537, [%rd8+12];
	// inline asm
	prmt.b32 %r8931, %r2536, %r2537, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2665, %r2666}, [%rd8+8];
	// inline asm
	prmt.b32 %r8932, %r2666, %r2665, %r6;
	// inline asm
	ld.local.u32 	%r2544, [%rd8+8];
	ld.local.u32 	%r2545, [%rd8+4];
	// inline asm
	prmt.b32 %r8933, %r2544, %r2545, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2667, %r2668}, [%rd8];
	// inline asm
	prmt.b32 %r8926, %r2668, %r2667, %r6;
	// inline asm
	ld.local.u32 	%r2552, [%rd8];
	ld.local.u32 	%r2553, [%rd7+12];
	// inline asm
	prmt.b32 %r8927, %r2552, %r2553, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2669, %r2670}, [%rd7+8];
	// inline asm
	prmt.b32 %r8928, %r2670, %r2669, %r6;
	// inline asm
	ld.local.u32 	%r2560, [%rd7+8];
	ld.local.u32 	%r2561, [%rd7+4];
	// inline asm
	prmt.b32 %r8929, %r2560, %r2561, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2671, %r2672}, [%rd7];
	// inline asm
	prmt.b32 %r8922, %r2672, %r2671, %r6;
	// inline asm
	ld.local.u32 	%r2568, [%rd7];
	ld.local.u32 	%r2569, [%rd6+12];
	// inline asm
	prmt.b32 %r8923, %r2568, %r2569, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2673, %r2674}, [%rd6+8];
	// inline asm
	prmt.b32 %r8924, %r2674, %r2673, %r6;
	// inline asm
	ld.local.u32 	%r2576, [%rd6+8];
	ld.local.u32 	%r2577, [%rd6+4];
	// inline asm
	prmt.b32 %r8925, %r2576, %r2577, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2675, %r2676}, [%rd6];
	// inline asm
	prmt.b32 %r8918, %r2676, %r2675, %r6;
	// inline asm
	ld.local.u32 	%r2584, [%rd6];
	ld.local.u32 	%r2585, [%rd5+12];
	// inline asm
	prmt.b32 %r8919, %r2584, %r2585, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2677, %r2678}, [%rd5+8];
	// inline asm
	prmt.b32 %r8920, %r2678, %r2677, %r6;
	// inline asm
	ld.local.u32 	%r2592, [%rd5+8];
	ld.local.u32 	%r2593, [%rd5+4];
	// inline asm
	prmt.b32 %r8921, %r2592, %r2593, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2679, %r2680}, [%rd5];
	// inline asm
	prmt.b32 %r8914, %r2680, %r2679, %r6;
	// inline asm
	ld.local.u32 	%r2600, [%rd5];
	ld.local.u32 	%r2601, [%rd4+12];
	// inline asm
	prmt.b32 %r8915, %r2600, %r2601, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2681, %r2682}, [%rd4+8];
	// inline asm
	prmt.b32 %r8916, %r2682, %r2681, %r6;
	// inline asm
	ld.local.u32 	%r2608, [%rd4+8];
	ld.local.u32 	%r2609, [%rd4+4];
	// inline asm
	prmt.b32 %r8917, %r2608, %r2609, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2683, %r2684}, [%rd4];
	// inline asm
	prmt.b32 %r2611, %r2684, %r2683, %r6;
	// inline asm
	st.local.u32 	[%rd9+12], %r2611;
	ld.local.u32 	%r2616, [%rd4];
	ld.local.u32 	%r2617, [%rd3+12];
	// inline asm
	prmt.b32 %r2615, %r2616, %r2617, %r6;
	// inline asm
	st.local.u32 	[%rd9+8], %r2615;
	ld.local.v2.u32 	{%r2685, %r2686}, [%rd3+8];
	// inline asm
	prmt.b32 %r2619, %r2686, %r2685, %r6;
	// inline asm
	st.local.u32 	[%rd9+4], %r2619;
	ld.local.u32 	%r2624, [%rd3+8];
	ld.local.u32 	%r2625, [%rd3+4];
	// inline asm
	prmt.b32 %r2623, %r2624, %r2625, %r6;
	// inline asm
	st.local.u32 	[%rd9], %r2623;
	ld.local.v2.u32 	{%r2687, %r2688}, [%rd3];
	// inline asm
	prmt.b32 %r2627, %r2688, %r2687, %r6;
	// inline asm
	st.local.u32 	[%rd8+12], %r2627;
	ld.local.u32 	%r2632, [%rd3];
	ld.local.u32 	%r2633, [%rd2+12];
	// inline asm
	prmt.b32 %r2631, %r2632, %r2633, %r6;
	// inline asm
	st.local.u32 	[%rd8+8], %r2631;
	ld.local.v2.u32 	{%r2689, %r2690}, [%rd2+8];
	// inline asm
	prmt.b32 %r2635, %r2690, %r2689, %r6;
	// inline asm
	st.local.u32 	[%rd8+4], %r2635;
	ld.local.u32 	%r2640, [%rd2+8];
	ld.local.u32 	%r2641, [%rd2+4];
	// inline asm
	prmt.b32 %r2639, %r2640, %r2641, %r6;
	// inline asm
	st.local.u32 	[%rd8], %r2639;
	ld.local.v2.u32 	{%r2691, %r2692}, [%rd2];
	// inline asm
	prmt.b32 %r2643, %r2692, %r2691, %r6;
	// inline asm
	st.local.u32 	[%rd7+12], %r2643;
	ld.local.u32 	%r2648, [%rd2];
	// inline asm
	prmt.b32 %r2647, %r2648, %r8913, %r6;
	// inline asm
	st.local.u32 	[%rd7+8], %r2647;
	st.local.v2.u32 	[%rd7], {%r8913, %r8913};
	st.local.u32 	[%rd6+12], %r8913;
	st.local.u32 	[%rd6+8], %r8913;
	st.local.u32 	[%rd6+4], %r8913;
	st.local.u32 	[%rd6], %r8913;
	st.local.u32 	[%rd5+12], %r8913;
	st.local.u32 	[%rd5+8], %r8913;
	st.local.u32 	[%rd5+4], %r8913;
	st.local.u32 	[%rd5], %r8913;
	st.local.u32 	[%rd4+12], %r8913;
	st.local.u32 	[%rd4+8], %r8913;
	st.local.u32 	[%rd4+4], %r8913;
	st.local.u32 	[%rd4], %r8913;
	st.local.u32 	[%rd3+12], %r8913;
	st.local.u32 	[%rd3+8], %r8913;
	st.local.u32 	[%rd3+4], %r8913;
	st.local.u32 	[%rd3], %r8913;
	st.local.u32 	[%rd2+12], %r8913;
	st.local.u32 	[%rd2+8], %r8913;
	mov.u64 	%rd85, 0;
	st.local.u32 	[%rd2+4], %rd85;
	st.local.u32 	[%rd2], %rd85;
	mov.u32 	%r8934, %r8913;
	bra.uni 	BB2_85;

BB2_33:
	setp.eq.s32	%p29, %r991, 14;
	@%p29 bra 	BB2_75;
	bra.uni 	BB2_34;

BB2_75:
	mov.u32 	%r8913, 0;
	// inline asm
	prmt.b32 %r8927, %r8913, %r989, %r6;
	// inline asm
	ld.local.v2.u32 	{%r4089, %r4090}, [%rd9+8];
	// inline asm
	prmt.b32 %r8928, %r4090, %r4089, %r6;
	// inline asm
	ld.local.u32 	%r3948, [%rd9+8];
	ld.local.u32 	%r3949, [%rd9+4];
	// inline asm
	prmt.b32 %r8929, %r3948, %r3949, %r6;
	// inline asm
	ld.local.v2.u32 	{%r4091, %r4092}, [%rd9];
	// inline asm
	prmt.b32 %r8922, %r4092, %r4091, %r6;
	// inline asm
	ld.local.u32 	%r3956, [%rd9];
	ld.local.u32 	%r3957, [%rd8+12];
	// inline asm
	prmt.b32 %r8923, %r3956, %r3957, %r6;
	// inline asm
	ld.local.v2.u32 	{%r4093, %r4094}, [%rd8+8];
	// inline asm
	prmt.b32 %r8924, %r4094, %r4093, %r6;
	// inline asm
	ld.local.u32 	%r3964, [%rd8+8];
	ld.local.u32 	%r3965, [%rd8+4];
	// inline asm
	prmt.b32 %r8925, %r3964, %r3965, %r6;
	// inline asm
	ld.local.v2.u32 	{%r4095, %r4096}, [%rd8];
	// inline asm
	prmt.b32 %r8918, %r4096, %r4095, %r6;
	// inline asm
	ld.local.u32 	%r3972, [%rd8];
	ld.local.u32 	%r3973, [%rd7+12];
	// inline asm
	prmt.b32 %r8919, %r3972, %r3973, %r6;
	// inline asm
	ld.local.v2.u32 	{%r4097, %r4098}, [%rd7+8];
	// inline asm
	prmt.b32 %r8920, %r4098, %r4097, %r6;
	// inline asm
	ld.local.u32 	%r3980, [%rd7+8];
	ld.local.u32 	%r3981, [%rd7+4];
	// inline asm
	prmt.b32 %r8921, %r3980, %r3981, %r6;
	// inline asm
	ld.local.v2.u32 	{%r4099, %r4100}, [%rd7];
	// inline asm
	prmt.b32 %r8914, %r4100, %r4099, %r6;
	// inline asm
	ld.local.u32 	%r3988, [%rd7];
	ld.local.u32 	%r3989, [%rd6+12];
	// inline asm
	prmt.b32 %r8915, %r3988, %r3989, %r6;
	// inline asm
	ld.local.v2.u32 	{%r4101, %r4102}, [%rd6+8];
	// inline asm
	prmt.b32 %r8916, %r4102, %r4101, %r6;
	// inline asm
	ld.local.u32 	%r3996, [%rd6+8];
	ld.local.u32 	%r3997, [%rd6+4];
	// inline asm
	prmt.b32 %r8917, %r3996, %r3997, %r6;
	// inline asm
	ld.local.v2.u32 	{%r4103, %r4104}, [%rd6];
	// inline asm
	prmt.b32 %r3999, %r4104, %r4103, %r6;
	// inline asm
	st.local.u32 	[%rd9+12], %r3999;
	ld.local.u32 	%r4004, [%rd6];
	ld.local.u32 	%r4005, [%rd5+12];
	// inline asm
	prmt.b32 %r4003, %r4004, %r4005, %r6;
	// inline asm
	st.local.u32 	[%rd9+8], %r4003;
	ld.local.v2.u32 	{%r4105, %r4106}, [%rd5+8];
	// inline asm
	prmt.b32 %r4007, %r4106, %r4105, %r6;
	// inline asm
	st.local.u32 	[%rd9+4], %r4007;
	ld.local.u32 	%r4012, [%rd5+8];
	ld.local.u32 	%r4013, [%rd5+4];
	// inline asm
	prmt.b32 %r4011, %r4012, %r4013, %r6;
	// inline asm
	st.local.u32 	[%rd9], %r4011;
	ld.local.v2.u32 	{%r4107, %r4108}, [%rd5];
	// inline asm
	prmt.b32 %r4015, %r4108, %r4107, %r6;
	// inline asm
	st.local.u32 	[%rd8+12], %r4015;
	ld.local.u32 	%r4020, [%rd5];
	ld.local.u32 	%r4021, [%rd4+12];
	// inline asm
	prmt.b32 %r4019, %r4020, %r4021, %r6;
	// inline asm
	st.local.u32 	[%rd8+8], %r4019;
	ld.local.v2.u32 	{%r4109, %r4110}, [%rd4+8];
	// inline asm
	prmt.b32 %r4023, %r4110, %r4109, %r6;
	// inline asm
	st.local.u32 	[%rd8+4], %r4023;
	ld.local.u32 	%r4028, [%rd4+8];
	ld.local.u32 	%r4029, [%rd4+4];
	// inline asm
	prmt.b32 %r4027, %r4028, %r4029, %r6;
	// inline asm
	st.local.u32 	[%rd8], %r4027;
	ld.local.v2.u32 	{%r4111, %r4112}, [%rd4];
	// inline asm
	prmt.b32 %r4031, %r4112, %r4111, %r6;
	// inline asm
	st.local.u32 	[%rd7+12], %r4031;
	ld.local.u32 	%r4036, [%rd4];
	ld.local.u32 	%r4037, [%rd3+12];
	// inline asm
	prmt.b32 %r4035, %r4036, %r4037, %r6;
	// inline asm
	st.local.u32 	[%rd7+8], %r4035;
	ld.local.v2.u32 	{%r4113, %r4114}, [%rd3+8];
	// inline asm
	prmt.b32 %r4039, %r4114, %r4113, %r6;
	// inline asm
	st.local.u32 	[%rd7+4], %r4039;
	ld.local.u32 	%r4044, [%rd3+8];
	ld.local.u32 	%r4045, [%rd3+4];
	// inline asm
	prmt.b32 %r4043, %r4044, %r4045, %r6;
	// inline asm
	st.local.u32 	[%rd7], %r4043;
	ld.local.v2.u32 	{%r4115, %r4116}, [%rd3];
	// inline asm
	prmt.b32 %r4047, %r4116, %r4115, %r6;
	// inline asm
	st.local.u32 	[%rd6+12], %r4047;
	ld.local.u32 	%r4052, [%rd3];
	ld.local.u32 	%r4053, [%rd2+12];
	// inline asm
	prmt.b32 %r4051, %r4052, %r4053, %r6;
	// inline asm
	st.local.u32 	[%rd6+8], %r4051;
	ld.local.v2.u32 	{%r4117, %r4118}, [%rd2+8];
	// inline asm
	prmt.b32 %r4055, %r4118, %r4117, %r6;
	// inline asm
	st.local.u32 	[%rd6+4], %r4055;
	ld.local.u32 	%r4060, [%rd2+8];
	ld.local.u32 	%r4061, [%rd2+4];
	// inline asm
	prmt.b32 %r4059, %r4060, %r4061, %r6;
	// inline asm
	st.local.u32 	[%rd6], %r4059;
	ld.local.v2.u32 	{%r4119, %r4120}, [%rd2];
	// inline asm
	prmt.b32 %r4063, %r4120, %r4119, %r6;
	// inline asm
	st.local.u32 	[%rd5+12], %r4063;
	ld.local.u32 	%r4068, [%rd2];
	// inline asm
	prmt.b32 %r4067, %r4068, %r8913, %r6;
	// inline asm
	st.local.u32 	[%rd5+8], %r4067;
	st.local.v2.u32 	[%rd5], {%r8913, %r8913};
	st.local.u32 	[%rd4+12], %r8913;
	st.local.u32 	[%rd4+8], %r8913;
	st.local.u32 	[%rd4+4], %r8913;
	st.local.u32 	[%rd4], %r8913;
	st.local.u32 	[%rd3+12], %r8913;
	st.local.u32 	[%rd3+8], %r8913;
	st.local.u32 	[%rd3+4], %r8913;
	st.local.u32 	[%rd3], %r8913;
	st.local.u32 	[%rd2+12], %r8913;
	st.local.u32 	[%rd2+8], %r8913;
	mov.u64 	%rd93, 0;
	st.local.u32 	[%rd2+4], %rd93;
	st.local.u32 	[%rd2], %rd93;
	mov.u32 	%r8926, %r8913;
	bra.uni 	BB2_83;

BB2_64:
	setp.eq.s32	%p6, %r991, 30;
	@%p6 bra 	BB2_67;
	bra.uni 	BB2_65;

BB2_67:
	mov.u32 	%r8913, 0;
	// inline asm
	prmt.b32 %r8943, %r8913, %r989, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1297, %r1298}, [%rd9+8];
	// inline asm
	prmt.b32 %r8944, %r1298, %r1297, %r6;
	// inline asm
	ld.local.u32 	%r1172, [%rd9+8];
	ld.local.u32 	%r1173, [%rd9+4];
	// inline asm
	prmt.b32 %r8945, %r1172, %r1173, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1299, %r1300}, [%rd9];
	// inline asm
	prmt.b32 %r8938, %r1300, %r1299, %r6;
	// inline asm
	ld.local.u32 	%r1180, [%rd9];
	ld.local.u32 	%r1181, [%rd8+12];
	// inline asm
	prmt.b32 %r8939, %r1180, %r1181, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1301, %r1302}, [%rd8+8];
	// inline asm
	prmt.b32 %r8940, %r1302, %r1301, %r6;
	// inline asm
	ld.local.u32 	%r1188, [%rd8+8];
	ld.local.u32 	%r1189, [%rd8+4];
	// inline asm
	prmt.b32 %r8941, %r1188, %r1189, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1303, %r1304}, [%rd8];
	// inline asm
	prmt.b32 %r8934, %r1304, %r1303, %r6;
	// inline asm
	ld.local.u32 	%r1196, [%rd8];
	ld.local.u32 	%r1197, [%rd7+12];
	// inline asm
	prmt.b32 %r8935, %r1196, %r1197, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1305, %r1306}, [%rd7+8];
	// inline asm
	prmt.b32 %r8936, %r1306, %r1305, %r6;
	// inline asm
	ld.local.u32 	%r1204, [%rd7+8];
	ld.local.u32 	%r1205, [%rd7+4];
	// inline asm
	prmt.b32 %r8937, %r1204, %r1205, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1307, %r1308}, [%rd7];
	// inline asm
	prmt.b32 %r8930, %r1308, %r1307, %r6;
	// inline asm
	ld.local.u32 	%r1212, [%rd7];
	ld.local.u32 	%r1213, [%rd6+12];
	// inline asm
	prmt.b32 %r8931, %r1212, %r1213, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1309, %r1310}, [%rd6+8];
	// inline asm
	prmt.b32 %r8932, %r1310, %r1309, %r6;
	// inline asm
	ld.local.u32 	%r1220, [%rd6+8];
	ld.local.u32 	%r1221, [%rd6+4];
	// inline asm
	prmt.b32 %r8933, %r1220, %r1221, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1311, %r1312}, [%rd6];
	// inline asm
	prmt.b32 %r8926, %r1312, %r1311, %r6;
	// inline asm
	ld.local.u32 	%r1228, [%rd6];
	ld.local.u32 	%r1229, [%rd5+12];
	// inline asm
	prmt.b32 %r8927, %r1228, %r1229, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1313, %r1314}, [%rd5+8];
	// inline asm
	prmt.b32 %r8928, %r1314, %r1313, %r6;
	// inline asm
	ld.local.u32 	%r1236, [%rd5+8];
	ld.local.u32 	%r1237, [%rd5+4];
	// inline asm
	prmt.b32 %r8929, %r1236, %r1237, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1315, %r1316}, [%rd5];
	// inline asm
	prmt.b32 %r8922, %r1316, %r1315, %r6;
	// inline asm
	ld.local.u32 	%r1244, [%rd5];
	ld.local.u32 	%r1245, [%rd4+12];
	// inline asm
	prmt.b32 %r8923, %r1244, %r1245, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1317, %r1318}, [%rd4+8];
	// inline asm
	prmt.b32 %r8924, %r1318, %r1317, %r6;
	// inline asm
	ld.local.u32 	%r1252, [%rd4+8];
	ld.local.u32 	%r1253, [%rd4+4];
	// inline asm
	prmt.b32 %r8925, %r1252, %r1253, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1319, %r1320}, [%rd4];
	// inline asm
	prmt.b32 %r8918, %r1320, %r1319, %r6;
	// inline asm
	ld.local.u32 	%r1260, [%rd4];
	ld.local.u32 	%r1261, [%rd3+12];
	// inline asm
	prmt.b32 %r8919, %r1260, %r1261, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1321, %r1322}, [%rd3+8];
	// inline asm
	prmt.b32 %r8920, %r1322, %r1321, %r6;
	// inline asm
	ld.local.u32 	%r1268, [%rd3+8];
	ld.local.u32 	%r1269, [%rd3+4];
	// inline asm
	prmt.b32 %r8921, %r1268, %r1269, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1323, %r1324}, [%rd3];
	// inline asm
	prmt.b32 %r8914, %r1324, %r1323, %r6;
	// inline asm
	ld.local.u32 	%r1276, [%rd3];
	ld.local.u32 	%r1277, [%rd2+12];
	// inline asm
	prmt.b32 %r8915, %r1276, %r1277, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1325, %r1326}, [%rd2+8];
	// inline asm
	prmt.b32 %r8916, %r1326, %r1325, %r6;
	// inline asm
	ld.local.u32 	%r1284, [%rd2+8];
	ld.local.u32 	%r1285, [%rd2+4];
	// inline asm
	prmt.b32 %r8917, %r1284, %r1285, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1327, %r1328}, [%rd2];
	// inline asm
	prmt.b32 %r1287, %r1328, %r1327, %r6;
	// inline asm
	st.local.u32 	[%rd9+12], %r1287;
	ld.local.u32 	%r1292, [%rd2];
	// inline asm
	prmt.b32 %r1291, %r1292, %r8913, %r6;
	// inline asm
	st.local.u32 	[%rd9+8], %r1291;
	st.local.v2.u32 	[%rd9], {%r8913, %r8913};
	st.local.u32 	[%rd8+12], %r8913;
	st.local.u32 	[%rd8+8], %r8913;
	st.local.u32 	[%rd8+4], %r8913;
	st.local.u32 	[%rd8], %r8913;
	st.local.u32 	[%rd7+12], %r8913;
	st.local.u32 	[%rd7+8], %r8913;
	st.local.u32 	[%rd7+4], %r8913;
	st.local.u32 	[%rd7], %r8913;
	st.local.u32 	[%rd6+12], %r8913;
	st.local.u32 	[%rd6+8], %r8913;
	st.local.u32 	[%rd6+4], %r8913;
	st.local.u32 	[%rd6], %r8913;
	st.local.u32 	[%rd5+12], %r8913;
	st.local.u32 	[%rd5+8], %r8913;
	st.local.u32 	[%rd5+4], %r8913;
	st.local.u32 	[%rd5], %r8913;
	st.local.u32 	[%rd4+12], %r8913;
	st.local.u32 	[%rd4+8], %r8913;
	st.local.u32 	[%rd4+4], %r8913;
	st.local.u32 	[%rd4], %r8913;
	st.local.u32 	[%rd3+12], %r8913;
	st.local.u32 	[%rd3+8], %r8913;
	st.local.u32 	[%rd3+4], %r8913;
	st.local.u32 	[%rd3], %r8913;
	st.local.u32 	[%rd2+12], %r8913;
	st.local.u32 	[%rd2+8], %r8913;
	mov.u64 	%rd77, 0;
	st.local.u32 	[%rd2+4], %rd77;
	st.local.u32 	[%rd2], %rd77;
	mov.u32 	%r8942, %r8913;
	bra.uni 	BB2_91;

BB2_8:
	setp.eq.s32	%p48, %r991, 1;
	@%p48 bra 	BB2_9;
	bra.uni 	BB2_89;

BB2_9:
	mov.u32 	%r8913, 0;
	// inline asm
	prmt.b32 %r8916, %r8913, %r989, %r6;
	// inline asm
	ld.local.v2.u32 	{%r6546, %r6547}, [%rd9+8];
	// inline asm
	prmt.b32 %r8917, %r6547, %r6546, %r6;
	// inline asm
	ld.local.u32 	%r6392, [%rd9+8];
	ld.local.u32 	%r6393, [%rd9+4];
	// inline asm
	prmt.b32 %r6391, %r6392, %r6393, %r6;
	// inline asm
	st.local.u32 	[%rd9+12], %r6391;
	ld.local.v2.u32 	{%r6548, %r6549}, [%rd9];
	// inline asm
	prmt.b32 %r6395, %r6549, %r6548, %r6;
	// inline asm
	st.local.u32 	[%rd9+8], %r6395;
	ld.local.u32 	%r6400, [%rd9];
	ld.local.u32 	%r6401, [%rd8+12];
	// inline asm
	prmt.b32 %r6399, %r6400, %r6401, %r6;
	// inline asm
	st.local.u32 	[%rd9+4], %r6399;
	ld.local.v2.u32 	{%r6550, %r6551}, [%rd8+8];
	// inline asm
	prmt.b32 %r6403, %r6551, %r6550, %r6;
	// inline asm
	st.local.u32 	[%rd9], %r6403;
	ld.local.u32 	%r6408, [%rd8+8];
	ld.local.u32 	%r6409, [%rd8+4];
	// inline asm
	prmt.b32 %r6407, %r6408, %r6409, %r6;
	// inline asm
	st.local.u32 	[%rd8+12], %r6407;
	ld.local.v2.u32 	{%r6552, %r6553}, [%rd8];
	// inline asm
	prmt.b32 %r6411, %r6553, %r6552, %r6;
	// inline asm
	st.local.u32 	[%rd8+8], %r6411;
	ld.local.u32 	%r6416, [%rd8];
	ld.local.u32 	%r6417, [%rd7+12];
	// inline asm
	prmt.b32 %r6415, %r6416, %r6417, %r6;
	// inline asm
	st.local.u32 	[%rd8+4], %r6415;
	ld.local.v2.u32 	{%r6554, %r6555}, [%rd7+8];
	// inline asm
	prmt.b32 %r6419, %r6555, %r6554, %r6;
	// inline asm
	st.local.u32 	[%rd8], %r6419;
	ld.local.u32 	%r6424, [%rd7+8];
	ld.local.u32 	%r6425, [%rd7+4];
	// inline asm
	prmt.b32 %r6423, %r6424, %r6425, %r6;
	// inline asm
	st.local.u32 	[%rd7+12], %r6423;
	ld.local.v2.u32 	{%r6556, %r6557}, [%rd7];
	// inline asm
	prmt.b32 %r6427, %r6557, %r6556, %r6;
	// inline asm
	st.local.u32 	[%rd7+8], %r6427;
	ld.local.u32 	%r6432, [%rd7];
	ld.local.u32 	%r6433, [%rd6+12];
	// inline asm
	prmt.b32 %r6431, %r6432, %r6433, %r6;
	// inline asm
	st.local.u32 	[%rd7+4], %r6431;
	ld.local.v2.u32 	{%r6558, %r6559}, [%rd6+8];
	// inline asm
	prmt.b32 %r6435, %r6559, %r6558, %r6;
	// inline asm
	st.local.u32 	[%rd7], %r6435;
	ld.local.u32 	%r6440, [%rd6+8];
	ld.local.u32 	%r6441, [%rd6+4];
	// inline asm
	prmt.b32 %r6439, %r6440, %r6441, %r6;
	// inline asm
	st.local.u32 	[%rd6+12], %r6439;
	ld.local.v2.u32 	{%r6560, %r6561}, [%rd6];
	// inline asm
	prmt.b32 %r6443, %r6561, %r6560, %r6;
	// inline asm
	st.local.u32 	[%rd6+8], %r6443;
	ld.local.u32 	%r6448, [%rd6];
	ld.local.u32 	%r6449, [%rd5+12];
	// inline asm
	prmt.b32 %r6447, %r6448, %r6449, %r6;
	// inline asm
	st.local.u32 	[%rd6+4], %r6447;
	ld.local.v2.u32 	{%r6562, %r6563}, [%rd5+8];
	// inline asm
	prmt.b32 %r6451, %r6563, %r6562, %r6;
	// inline asm
	st.local.u32 	[%rd6], %r6451;
	ld.local.u32 	%r6456, [%rd5+8];
	ld.local.u32 	%r6457, [%rd5+4];
	// inline asm
	prmt.b32 %r6455, %r6456, %r6457, %r6;
	// inline asm
	st.local.u32 	[%rd5+12], %r6455;
	ld.local.v2.u32 	{%r6564, %r6565}, [%rd5];
	// inline asm
	prmt.b32 %r6459, %r6565, %r6564, %r6;
	// inline asm
	st.local.u32 	[%rd5+8], %r6459;
	ld.local.u32 	%r6464, [%rd5];
	ld.local.u32 	%r6465, [%rd4+12];
	// inline asm
	prmt.b32 %r6463, %r6464, %r6465, %r6;
	// inline asm
	st.local.u32 	[%rd5+4], %r6463;
	ld.local.v2.u32 	{%r6566, %r6567}, [%rd4+8];
	// inline asm
	prmt.b32 %r6467, %r6567, %r6566, %r6;
	// inline asm
	st.local.u32 	[%rd5], %r6467;
	ld.local.u32 	%r6472, [%rd4+8];
	ld.local.u32 	%r6473, [%rd4+4];
	// inline asm
	prmt.b32 %r6471, %r6472, %r6473, %r6;
	// inline asm
	st.local.u32 	[%rd4+12], %r6471;
	ld.local.v2.u32 	{%r6568, %r6569}, [%rd4];
	// inline asm
	prmt.b32 %r6475, %r6569, %r6568, %r6;
	// inline asm
	st.local.u32 	[%rd4+8], %r6475;
	ld.local.u32 	%r6480, [%rd4];
	ld.local.u32 	%r6481, [%rd3+12];
	// inline asm
	prmt.b32 %r6479, %r6480, %r6481, %r6;
	// inline asm
	st.local.u32 	[%rd4+4], %r6479;
	ld.local.v2.u32 	{%r6570, %r6571}, [%rd3+8];
	// inline asm
	prmt.b32 %r6483, %r6571, %r6570, %r6;
	// inline asm
	st.local.u32 	[%rd4], %r6483;
	ld.local.u32 	%r6488, [%rd3+8];
	ld.local.u32 	%r6489, [%rd3+4];
	// inline asm
	prmt.b32 %r6487, %r6488, %r6489, %r6;
	// inline asm
	st.local.u32 	[%rd3+12], %r6487;
	ld.local.v2.u32 	{%r6572, %r6573}, [%rd3];
	// inline asm
	prmt.b32 %r6491, %r6573, %r6572, %r6;
	// inline asm
	st.local.u32 	[%rd3+8], %r6491;
	ld.local.u32 	%r6496, [%rd3];
	ld.local.u32 	%r6497, [%rd2+12];
	// inline asm
	prmt.b32 %r6495, %r6496, %r6497, %r6;
	// inline asm
	st.local.u32 	[%rd3+4], %r6495;
	ld.local.v2.u32 	{%r6574, %r6575}, [%rd2+8];
	// inline asm
	prmt.b32 %r6499, %r6575, %r6574, %r6;
	// inline asm
	st.local.u32 	[%rd3], %r6499;
	ld.local.u32 	%r6504, [%rd2+8];
	ld.local.u32 	%r6505, [%rd2+4];
	// inline asm
	prmt.b32 %r6503, %r6504, %r6505, %r6;
	// inline asm
	st.local.u32 	[%rd2+12], %r6503;
	ld.local.v2.u32 	{%r6576, %r6577}, [%rd2];
	// inline asm
	prmt.b32 %r6507, %r6577, %r6576, %r6;
	// inline asm
	st.local.u32 	[%rd2+8], %r6507;
	ld.local.u32 	%r6512, [%rd2];
	// inline asm
	prmt.b32 %r6511, %r6512, %r8913, %r6;
	// inline asm
	st.local.v2.u32 	[%rd2], {%r8913, %r6511};
	mov.u32 	%r8914, %r8913;
	mov.u32 	%r8915, %r8913;
	bra.uni 	BB2_13;

BB2_40:
	setp.eq.s32	%p25, %r991, 17;
	@%p25 bra 	BB2_41;
	bra.uni 	BB2_89;

BB2_41:
	mov.u32 	%r8913, 0;
	// inline asm
	prmt.b32 %r8932, %r8913, %r989, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3546, %r3547}, [%rd9+8];
	// inline asm
	prmt.b32 %r8933, %r3547, %r3546, %r6;
	// inline asm
	ld.local.u32 	%r3408, [%rd9+8];
	ld.local.u32 	%r3409, [%rd9+4];
	// inline asm
	prmt.b32 %r8926, %r3408, %r3409, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3548, %r3549}, [%rd9];
	// inline asm
	prmt.b32 %r8927, %r3549, %r3548, %r6;
	// inline asm
	ld.local.u32 	%r3416, [%rd9];
	ld.local.u32 	%r3417, [%rd8+12];
	// inline asm
	prmt.b32 %r8928, %r3416, %r3417, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3550, %r3551}, [%rd8+8];
	// inline asm
	prmt.b32 %r8929, %r3551, %r3550, %r6;
	// inline asm
	ld.local.u32 	%r3424, [%rd8+8];
	ld.local.u32 	%r3425, [%rd8+4];
	// inline asm
	prmt.b32 %r8922, %r3424, %r3425, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3552, %r3553}, [%rd8];
	// inline asm
	prmt.b32 %r8923, %r3553, %r3552, %r6;
	// inline asm
	ld.local.u32 	%r3432, [%rd8];
	ld.local.u32 	%r3433, [%rd7+12];
	// inline asm
	prmt.b32 %r8924, %r3432, %r3433, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3554, %r3555}, [%rd7+8];
	// inline asm
	prmt.b32 %r8925, %r3555, %r3554, %r6;
	// inline asm
	ld.local.u32 	%r3440, [%rd7+8];
	ld.local.u32 	%r3441, [%rd7+4];
	// inline asm
	prmt.b32 %r8918, %r3440, %r3441, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3556, %r3557}, [%rd7];
	// inline asm
	prmt.b32 %r8919, %r3557, %r3556, %r6;
	// inline asm
	ld.local.u32 	%r3448, [%rd7];
	ld.local.u32 	%r3449, [%rd6+12];
	// inline asm
	prmt.b32 %r8920, %r3448, %r3449, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3558, %r3559}, [%rd6+8];
	// inline asm
	prmt.b32 %r8921, %r3559, %r3558, %r6;
	// inline asm
	ld.local.u32 	%r3456, [%rd6+8];
	ld.local.u32 	%r3457, [%rd6+4];
	// inline asm
	prmt.b32 %r8914, %r3456, %r3457, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3560, %r3561}, [%rd6];
	// inline asm
	prmt.b32 %r8915, %r3561, %r3560, %r6;
	// inline asm
	ld.local.u32 	%r3464, [%rd6];
	ld.local.u32 	%r3465, [%rd5+12];
	// inline asm
	prmt.b32 %r8916, %r3464, %r3465, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3562, %r3563}, [%rd5+8];
	// inline asm
	prmt.b32 %r8917, %r3563, %r3562, %r6;
	// inline asm
	ld.local.u32 	%r3472, [%rd5+8];
	ld.local.u32 	%r3473, [%rd5+4];
	// inline asm
	prmt.b32 %r3471, %r3472, %r3473, %r6;
	// inline asm
	st.local.u32 	[%rd9+12], %r3471;
	ld.local.v2.u32 	{%r3564, %r3565}, [%rd5];
	// inline asm
	prmt.b32 %r3475, %r3565, %r3564, %r6;
	// inline asm
	st.local.u32 	[%rd9+8], %r3475;
	ld.local.u32 	%r3480, [%rd5];
	ld.local.u32 	%r3481, [%rd4+12];
	// inline asm
	prmt.b32 %r3479, %r3480, %r3481, %r6;
	// inline asm
	st.local.u32 	[%rd9+4], %r3479;
	ld.local.v2.u32 	{%r3566, %r3567}, [%rd4+8];
	// inline asm
	prmt.b32 %r3483, %r3567, %r3566, %r6;
	// inline asm
	st.local.u32 	[%rd9], %r3483;
	ld.local.u32 	%r3488, [%rd4+8];
	ld.local.u32 	%r3489, [%rd4+4];
	// inline asm
	prmt.b32 %r3487, %r3488, %r3489, %r6;
	// inline asm
	st.local.u32 	[%rd8+12], %r3487;
	ld.local.v2.u32 	{%r3568, %r3569}, [%rd4];
	// inline asm
	prmt.b32 %r3491, %r3569, %r3568, %r6;
	// inline asm
	st.local.u32 	[%rd8+8], %r3491;
	ld.local.u32 	%r3496, [%rd4];
	ld.local.u32 	%r3497, [%rd3+12];
	// inline asm
	prmt.b32 %r3495, %r3496, %r3497, %r6;
	// inline asm
	st.local.u32 	[%rd8+4], %r3495;
	ld.local.v2.u32 	{%r3570, %r3571}, [%rd3+8];
	// inline asm
	prmt.b32 %r3499, %r3571, %r3570, %r6;
	// inline asm
	st.local.u32 	[%rd8], %r3499;
	ld.local.u32 	%r3504, [%rd3+8];
	ld.local.u32 	%r3505, [%rd3+4];
	// inline asm
	prmt.b32 %r3503, %r3504, %r3505, %r6;
	// inline asm
	st.local.u32 	[%rd7+12], %r3503;
	ld.local.v2.u32 	{%r3572, %r3573}, [%rd3];
	// inline asm
	prmt.b32 %r3507, %r3573, %r3572, %r6;
	// inline asm
	st.local.u32 	[%rd7+8], %r3507;
	ld.local.u32 	%r3512, [%rd3];
	ld.local.u32 	%r3513, [%rd2+12];
	// inline asm
	prmt.b32 %r3511, %r3512, %r3513, %r6;
	// inline asm
	st.local.u32 	[%rd7+4], %r3511;
	ld.local.v2.u32 	{%r3574, %r3575}, [%rd2+8];
	// inline asm
	prmt.b32 %r3515, %r3575, %r3574, %r6;
	// inline asm
	st.local.u32 	[%rd7], %r3515;
	ld.local.u32 	%r3520, [%rd2+8];
	ld.local.u32 	%r3521, [%rd2+4];
	// inline asm
	prmt.b32 %r3519, %r3520, %r3521, %r6;
	// inline asm
	st.local.u32 	[%rd6+12], %r3519;
	ld.local.v2.u32 	{%r3576, %r3577}, [%rd2];
	// inline asm
	prmt.b32 %r3523, %r3577, %r3576, %r6;
	// inline asm
	st.local.u32 	[%rd6+8], %r3523;
	ld.local.u32 	%r3528, [%rd2];
	// inline asm
	prmt.b32 %r3527, %r3528, %r8913, %r6;
	// inline asm
	st.local.v2.u32 	[%rd6], {%r8913, %r3527};
	st.local.v4.u32 	[%rd5], {%r8913, %r8913, %r8913, %r8913};
	st.local.v4.u32 	[%rd4], {%r8913, %r8913, %r8913, %r8913};
	st.local.v4.u32 	[%rd3], {%r8913, %r8913, %r8913, %r8913};
	st.local.v2.u32 	[%rd2+8], {%r8913, %r8913};
	mov.u64 	%rd90, 0;
	st.local.u64 	[%rd2], %rd90;
	mov.u32 	%r8930, %r8913;
	mov.u32 	%r8931, %r8913;
	bra.uni 	BB2_84;

BB2_24:
	setp.eq.s32	%p37, %r991, 9;
	@%p37 bra 	BB2_25;
	bra.uni 	BB2_89;

BB2_25:
	mov.u32 	%r8913, 0;
	// inline asm
	prmt.b32 %r8924, %r8913, %r989, %r6;
	// inline asm
	ld.local.v2.u32 	{%r5014, %r5015}, [%rd9+8];
	// inline asm
	prmt.b32 %r8925, %r5015, %r5014, %r6;
	// inline asm
	ld.local.u32 	%r4868, [%rd9+8];
	ld.local.u32 	%r4869, [%rd9+4];
	// inline asm
	prmt.b32 %r8918, %r4868, %r4869, %r6;
	// inline asm
	ld.local.v2.u32 	{%r5016, %r5017}, [%rd9];
	// inline asm
	prmt.b32 %r8919, %r5017, %r5016, %r6;
	// inline asm
	ld.local.u32 	%r4876, [%rd9];
	ld.local.u32 	%r4877, [%rd8+12];
	// inline asm
	prmt.b32 %r8920, %r4876, %r4877, %r6;
	// inline asm
	ld.local.v2.u32 	{%r5018, %r5019}, [%rd8+8];
	// inline asm
	prmt.b32 %r8921, %r5019, %r5018, %r6;
	// inline asm
	ld.local.u32 	%r4884, [%rd8+8];
	ld.local.u32 	%r4885, [%rd8+4];
	// inline asm
	prmt.b32 %r8914, %r4884, %r4885, %r6;
	// inline asm
	ld.local.v2.u32 	{%r5020, %r5021}, [%rd8];
	// inline asm
	prmt.b32 %r8915, %r5021, %r5020, %r6;
	// inline asm
	ld.local.u32 	%r4892, [%rd8];
	ld.local.u32 	%r4893, [%rd7+12];
	// inline asm
	prmt.b32 %r8916, %r4892, %r4893, %r6;
	// inline asm
	ld.local.v2.u32 	{%r5022, %r5023}, [%rd7+8];
	// inline asm
	prmt.b32 %r8917, %r5023, %r5022, %r6;
	// inline asm
	ld.local.u32 	%r4900, [%rd7+8];
	ld.local.u32 	%r4901, [%rd7+4];
	// inline asm
	prmt.b32 %r4899, %r4900, %r4901, %r6;
	// inline asm
	st.local.u32 	[%rd9+12], %r4899;
	ld.local.v2.u32 	{%r5024, %r5025}, [%rd7];
	// inline asm
	prmt.b32 %r4903, %r5025, %r5024, %r6;
	// inline asm
	st.local.u32 	[%rd9+8], %r4903;
	ld.local.u32 	%r4908, [%rd7];
	ld.local.u32 	%r4909, [%rd6+12];
	// inline asm
	prmt.b32 %r4907, %r4908, %r4909, %r6;
	// inline asm
	st.local.u32 	[%rd9+4], %r4907;
	ld.local.v2.u32 	{%r5026, %r5027}, [%rd6+8];
	// inline asm
	prmt.b32 %r4911, %r5027, %r5026, %r6;
	// inline asm
	st.local.u32 	[%rd9], %r4911;
	ld.local.u32 	%r4916, [%rd6+8];
	ld.local.u32 	%r4917, [%rd6+4];
	// inline asm
	prmt.b32 %r4915, %r4916, %r4917, %r6;
	// inline asm
	st.local.u32 	[%rd8+12], %r4915;
	ld.local.v2.u32 	{%r5028, %r5029}, [%rd6];
	// inline asm
	prmt.b32 %r4919, %r5029, %r5028, %r6;
	// inline asm
	st.local.u32 	[%rd8+8], %r4919;
	ld.local.u32 	%r4924, [%rd6];
	ld.local.u32 	%r4925, [%rd5+12];
	// inline asm
	prmt.b32 %r4923, %r4924, %r4925, %r6;
	// inline asm
	st.local.u32 	[%rd8+4], %r4923;
	ld.local.v2.u32 	{%r5030, %r5031}, [%rd5+8];
	// inline asm
	prmt.b32 %r4927, %r5031, %r5030, %r6;
	// inline asm
	st.local.u32 	[%rd8], %r4927;
	ld.local.u32 	%r4932, [%rd5+8];
	ld.local.u32 	%r4933, [%rd5+4];
	// inline asm
	prmt.b32 %r4931, %r4932, %r4933, %r6;
	// inline asm
	st.local.u32 	[%rd7+12], %r4931;
	ld.local.v2.u32 	{%r5032, %r5033}, [%rd5];
	// inline asm
	prmt.b32 %r4935, %r5033, %r5032, %r6;
	// inline asm
	st.local.u32 	[%rd7+8], %r4935;
	ld.local.u32 	%r4940, [%rd5];
	ld.local.u32 	%r4941, [%rd4+12];
	// inline asm
	prmt.b32 %r4939, %r4940, %r4941, %r6;
	// inline asm
	st.local.u32 	[%rd7+4], %r4939;
	ld.local.v2.u32 	{%r5034, %r5035}, [%rd4+8];
	// inline asm
	prmt.b32 %r4943, %r5035, %r5034, %r6;
	// inline asm
	st.local.u32 	[%rd7], %r4943;
	ld.local.u32 	%r4948, [%rd4+8];
	ld.local.u32 	%r4949, [%rd4+4];
	// inline asm
	prmt.b32 %r4947, %r4948, %r4949, %r6;
	// inline asm
	st.local.u32 	[%rd6+12], %r4947;
	ld.local.v2.u32 	{%r5036, %r5037}, [%rd4];
	// inline asm
	prmt.b32 %r4951, %r5037, %r5036, %r6;
	// inline asm
	st.local.u32 	[%rd6+8], %r4951;
	ld.local.u32 	%r4956, [%rd4];
	ld.local.u32 	%r4957, [%rd3+12];
	// inline asm
	prmt.b32 %r4955, %r4956, %r4957, %r6;
	// inline asm
	st.local.u32 	[%rd6+4], %r4955;
	ld.local.v2.u32 	{%r5038, %r5039}, [%rd3+8];
	// inline asm
	prmt.b32 %r4959, %r5039, %r5038, %r6;
	// inline asm
	st.local.u32 	[%rd6], %r4959;
	ld.local.u32 	%r4964, [%rd3+8];
	ld.local.u32 	%r4965, [%rd3+4];
	// inline asm
	prmt.b32 %r4963, %r4964, %r4965, %r6;
	// inline asm
	st.local.u32 	[%rd5+12], %r4963;
	ld.local.v2.u32 	{%r5040, %r5041}, [%rd3];
	// inline asm
	prmt.b32 %r4967, %r5041, %r5040, %r6;
	// inline asm
	st.local.u32 	[%rd5+8], %r4967;
	ld.local.u32 	%r4972, [%rd3];
	ld.local.u32 	%r4973, [%rd2+12];
	// inline asm
	prmt.b32 %r4971, %r4972, %r4973, %r6;
	// inline asm
	st.local.u32 	[%rd5+4], %r4971;
	ld.local.v2.u32 	{%r5042, %r5043}, [%rd2+8];
	// inline asm
	prmt.b32 %r4975, %r5043, %r5042, %r6;
	// inline asm
	st.local.u32 	[%rd5], %r4975;
	ld.local.u32 	%r4980, [%rd2+8];
	ld.local.u32 	%r4981, [%rd2+4];
	// inline asm
	prmt.b32 %r4979, %r4980, %r4981, %r6;
	// inline asm
	st.local.u32 	[%rd4+12], %r4979;
	ld.local.v2.u32 	{%r5044, %r5045}, [%rd2];
	// inline asm
	prmt.b32 %r4983, %r5045, %r5044, %r6;
	// inline asm
	st.local.u32 	[%rd4+8], %r4983;
	ld.local.u32 	%r4988, [%rd2];
	// inline asm
	prmt.b32 %r4987, %r4988, %r8913, %r6;
	// inline asm
	st.local.v2.u32 	[%rd4], {%r8913, %r4987};
	st.local.v4.u32 	[%rd3], {%r8913, %r8913, %r8913, %r8913};
	st.local.v2.u32 	[%rd2+8], {%r8913, %r8913};
	mov.u64 	%rd98, 0;
	st.local.u64 	[%rd2], %rd98;
	mov.u32 	%r8922, %r8913;
	mov.u32 	%r8923, %r8913;
	bra.uni 	BB2_82;

BB2_55:
	setp.eq.s32	%p14, %r991, 25;
	@%p14 bra 	BB2_56;
	bra.uni 	BB2_89;

BB2_56:
	mov.u32 	%r8913, 0;
	// inline asm
	prmt.b32 %r8940, %r8913, %r989, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2142, %r2143}, [%rd9+8];
	// inline asm
	prmt.b32 %r8941, %r2143, %r2142, %r6;
	// inline asm
	ld.local.u32 	%r2012, [%rd9+8];
	ld.local.u32 	%r2013, [%rd9+4];
	// inline asm
	prmt.b32 %r8934, %r2012, %r2013, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2144, %r2145}, [%rd9];
	// inline asm
	prmt.b32 %r8935, %r2145, %r2144, %r6;
	// inline asm
	ld.local.u32 	%r2020, [%rd9];
	ld.local.u32 	%r2021, [%rd8+12];
	// inline asm
	prmt.b32 %r8936, %r2020, %r2021, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2146, %r2147}, [%rd8+8];
	// inline asm
	prmt.b32 %r8937, %r2147, %r2146, %r6;
	// inline asm
	ld.local.u32 	%r2028, [%rd8+8];
	ld.local.u32 	%r2029, [%rd8+4];
	// inline asm
	prmt.b32 %r8930, %r2028, %r2029, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2148, %r2149}, [%rd8];
	// inline asm
	prmt.b32 %r8931, %r2149, %r2148, %r6;
	// inline asm
	ld.local.u32 	%r2036, [%rd8];
	ld.local.u32 	%r2037, [%rd7+12];
	// inline asm
	prmt.b32 %r8932, %r2036, %r2037, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2150, %r2151}, [%rd7+8];
	// inline asm
	prmt.b32 %r8933, %r2151, %r2150, %r6;
	// inline asm
	ld.local.u32 	%r2044, [%rd7+8];
	ld.local.u32 	%r2045, [%rd7+4];
	// inline asm
	prmt.b32 %r8926, %r2044, %r2045, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2152, %r2153}, [%rd7];
	// inline asm
	prmt.b32 %r8927, %r2153, %r2152, %r6;
	// inline asm
	ld.local.u32 	%r2052, [%rd7];
	ld.local.u32 	%r2053, [%rd6+12];
	// inline asm
	prmt.b32 %r8928, %r2052, %r2053, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2154, %r2155}, [%rd6+8];
	// inline asm
	prmt.b32 %r8929, %r2155, %r2154, %r6;
	// inline asm
	ld.local.u32 	%r2060, [%rd6+8];
	ld.local.u32 	%r2061, [%rd6+4];
	// inline asm
	prmt.b32 %r8922, %r2060, %r2061, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2156, %r2157}, [%rd6];
	// inline asm
	prmt.b32 %r8923, %r2157, %r2156, %r6;
	// inline asm
	ld.local.u32 	%r2068, [%rd6];
	ld.local.u32 	%r2069, [%rd5+12];
	// inline asm
	prmt.b32 %r8924, %r2068, %r2069, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2158, %r2159}, [%rd5+8];
	// inline asm
	prmt.b32 %r8925, %r2159, %r2158, %r6;
	// inline asm
	ld.local.u32 	%r2076, [%rd5+8];
	ld.local.u32 	%r2077, [%rd5+4];
	// inline asm
	prmt.b32 %r8918, %r2076, %r2077, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2160, %r2161}, [%rd5];
	// inline asm
	prmt.b32 %r8919, %r2161, %r2160, %r6;
	// inline asm
	ld.local.u32 	%r2084, [%rd5];
	ld.local.u32 	%r2085, [%rd4+12];
	// inline asm
	prmt.b32 %r8920, %r2084, %r2085, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2162, %r2163}, [%rd4+8];
	// inline asm
	prmt.b32 %r8921, %r2163, %r2162, %r6;
	// inline asm
	ld.local.u32 	%r2092, [%rd4+8];
	ld.local.u32 	%r2093, [%rd4+4];
	// inline asm
	prmt.b32 %r8914, %r2092, %r2093, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2164, %r2165}, [%rd4];
	// inline asm
	prmt.b32 %r8915, %r2165, %r2164, %r6;
	// inline asm
	ld.local.u32 	%r2100, [%rd4];
	ld.local.u32 	%r2101, [%rd3+12];
	// inline asm
	prmt.b32 %r8916, %r2100, %r2101, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2166, %r2167}, [%rd3+8];
	// inline asm
	prmt.b32 %r8917, %r2167, %r2166, %r6;
	// inline asm
	ld.local.u32 	%r2108, [%rd3+8];
	ld.local.u32 	%r2109, [%rd3+4];
	// inline asm
	prmt.b32 %r2107, %r2108, %r2109, %r6;
	// inline asm
	st.local.u32 	[%rd9+12], %r2107;
	ld.local.v2.u32 	{%r2168, %r2169}, [%rd3];
	// inline asm
	prmt.b32 %r2111, %r2169, %r2168, %r6;
	// inline asm
	st.local.u32 	[%rd9+8], %r2111;
	ld.local.u32 	%r2116, [%rd3];
	ld.local.u32 	%r2117, [%rd2+12];
	// inline asm
	prmt.b32 %r2115, %r2116, %r2117, %r6;
	// inline asm
	st.local.u32 	[%rd9+4], %r2115;
	ld.local.v2.u32 	{%r2170, %r2171}, [%rd2+8];
	// inline asm
	prmt.b32 %r2119, %r2171, %r2170, %r6;
	// inline asm
	st.local.u32 	[%rd9], %r2119;
	ld.local.u32 	%r2124, [%rd2+8];
	ld.local.u32 	%r2125, [%rd2+4];
	// inline asm
	prmt.b32 %r2123, %r2124, %r2125, %r6;
	// inline asm
	st.local.u32 	[%rd8+12], %r2123;
	ld.local.v2.u32 	{%r2172, %r2173}, [%rd2];
	// inline asm
	prmt.b32 %r2127, %r2173, %r2172, %r6;
	// inline asm
	st.local.u32 	[%rd8+8], %r2127;
	ld.local.u32 	%r2132, [%rd2];
	// inline asm
	prmt.b32 %r2131, %r2132, %r8913, %r6;
	// inline asm
	st.local.v2.u32 	[%rd8], {%r8913, %r2131};
	st.local.v4.u32 	[%rd7], {%r8913, %r8913, %r8913, %r8913};
	st.local.v4.u32 	[%rd6], {%r8913, %r8913, %r8913, %r8913};
	st.local.v4.u32 	[%rd5], {%r8913, %r8913, %r8913, %r8913};
	st.local.v4.u32 	[%rd4], {%r8913, %r8913, %r8913, %r8913};
	st.local.v4.u32 	[%rd3], {%r8913, %r8913, %r8913, %r8913};
	st.local.v2.u32 	[%rd2+8], {%r8913, %r8913};
	mov.u64 	%rd82, 0;
	st.local.u64 	[%rd2], %rd82;
	mov.u32 	%r8938, %r8913;
	mov.u32 	%r8939, %r8913;
	bra.uni 	BB2_86;

BB2_16:
	setp.eq.s32	%p43, %r991, 5;
	@%p43 bra 	BB2_17;
	bra.uni 	BB2_89;

BB2_17:
	mov.u32 	%r8913, 0;
	// inline asm
	prmt.b32 %r8920, %r8913, %r989, %r6;
	// inline asm
	ld.local.v2.u32 	{%r5772, %r5773}, [%rd9+8];
	// inline asm
	prmt.b32 %r8921, %r5773, %r5772, %r6;
	// inline asm
	ld.local.u32 	%r5622, [%rd9+8];
	ld.local.u32 	%r5623, [%rd9+4];
	// inline asm
	prmt.b32 %r8914, %r5622, %r5623, %r6;
	// inline asm
	ld.local.v2.u32 	{%r5774, %r5775}, [%rd9];
	// inline asm
	prmt.b32 %r8915, %r5775, %r5774, %r6;
	// inline asm
	ld.local.u32 	%r5630, [%rd9];
	ld.local.u32 	%r5631, [%rd8+12];
	// inline asm
	prmt.b32 %r8916, %r5630, %r5631, %r6;
	// inline asm
	ld.local.v2.u32 	{%r5776, %r5777}, [%rd8+8];
	// inline asm
	prmt.b32 %r8917, %r5777, %r5776, %r6;
	// inline asm
	ld.local.u32 	%r5638, [%rd8+8];
	ld.local.u32 	%r5639, [%rd8+4];
	// inline asm
	prmt.b32 %r5637, %r5638, %r5639, %r6;
	// inline asm
	st.local.u32 	[%rd9+12], %r5637;
	ld.local.v2.u32 	{%r5778, %r5779}, [%rd8];
	// inline asm
	prmt.b32 %r5641, %r5779, %r5778, %r6;
	// inline asm
	st.local.u32 	[%rd9+8], %r5641;
	ld.local.u32 	%r5646, [%rd8];
	ld.local.u32 	%r5647, [%rd7+12];
	// inline asm
	prmt.b32 %r5645, %r5646, %r5647, %r6;
	// inline asm
	st.local.u32 	[%rd9+4], %r5645;
	ld.local.v2.u32 	{%r5780, %r5781}, [%rd7+8];
	// inline asm
	prmt.b32 %r5649, %r5781, %r5780, %r6;
	// inline asm
	st.local.u32 	[%rd9], %r5649;
	ld.local.u32 	%r5654, [%rd7+8];
	ld.local.u32 	%r5655, [%rd7+4];
	// inline asm
	prmt.b32 %r5653, %r5654, %r5655, %r6;
	// inline asm
	st.local.u32 	[%rd8+12], %r5653;
	ld.local.v2.u32 	{%r5782, %r5783}, [%rd7];
	// inline asm
	prmt.b32 %r5657, %r5783, %r5782, %r6;
	// inline asm
	st.local.u32 	[%rd8+8], %r5657;
	ld.local.u32 	%r5662, [%rd7];
	ld.local.u32 	%r5663, [%rd6+12];
	// inline asm
	prmt.b32 %r5661, %r5662, %r5663, %r6;
	// inline asm
	st.local.u32 	[%rd8+4], %r5661;
	ld.local.v2.u32 	{%r5784, %r5785}, [%rd6+8];
	// inline asm
	prmt.b32 %r5665, %r5785, %r5784, %r6;
	// inline asm
	st.local.u32 	[%rd8], %r5665;
	ld.local.u32 	%r5670, [%rd6+8];
	ld.local.u32 	%r5671, [%rd6+4];
	// inline asm
	prmt.b32 %r5669, %r5670, %r5671, %r6;
	// inline asm
	st.local.u32 	[%rd7+12], %r5669;
	ld.local.v2.u32 	{%r5786, %r5787}, [%rd6];
	// inline asm
	prmt.b32 %r5673, %r5787, %r5786, %r6;
	// inline asm
	st.local.u32 	[%rd7+8], %r5673;
	ld.local.u32 	%r5678, [%rd6];
	ld.local.u32 	%r5679, [%rd5+12];
	// inline asm
	prmt.b32 %r5677, %r5678, %r5679, %r6;
	// inline asm
	st.local.u32 	[%rd7+4], %r5677;
	ld.local.v2.u32 	{%r5788, %r5789}, [%rd5+8];
	// inline asm
	prmt.b32 %r5681, %r5789, %r5788, %r6;
	// inline asm
	st.local.u32 	[%rd7], %r5681;
	ld.local.u32 	%r5686, [%rd5+8];
	ld.local.u32 	%r5687, [%rd5+4];
	// inline asm
	prmt.b32 %r5685, %r5686, %r5687, %r6;
	// inline asm
	st.local.u32 	[%rd6+12], %r5685;
	ld.local.v2.u32 	{%r5790, %r5791}, [%rd5];
	// inline asm
	prmt.b32 %r5689, %r5791, %r5790, %r6;
	// inline asm
	st.local.u32 	[%rd6+8], %r5689;
	ld.local.u32 	%r5694, [%rd5];
	ld.local.u32 	%r5695, [%rd4+12];
	// inline asm
	prmt.b32 %r5693, %r5694, %r5695, %r6;
	// inline asm
	st.local.u32 	[%rd6+4], %r5693;
	ld.local.v2.u32 	{%r5792, %r5793}, [%rd4+8];
	// inline asm
	prmt.b32 %r5697, %r5793, %r5792, %r6;
	// inline asm
	st.local.u32 	[%rd6], %r5697;
	ld.local.u32 	%r5702, [%rd4+8];
	ld.local.u32 	%r5703, [%rd4+4];
	// inline asm
	prmt.b32 %r5701, %r5702, %r5703, %r6;
	// inline asm
	st.local.u32 	[%rd5+12], %r5701;
	ld.local.v2.u32 	{%r5794, %r5795}, [%rd4];
	// inline asm
	prmt.b32 %r5705, %r5795, %r5794, %r6;
	// inline asm
	st.local.u32 	[%rd5+8], %r5705;
	ld.local.u32 	%r5710, [%rd4];
	ld.local.u32 	%r5711, [%rd3+12];
	// inline asm
	prmt.b32 %r5709, %r5710, %r5711, %r6;
	// inline asm
	st.local.u32 	[%rd5+4], %r5709;
	ld.local.v2.u32 	{%r5796, %r5797}, [%rd3+8];
	// inline asm
	prmt.b32 %r5713, %r5797, %r5796, %r6;
	// inline asm
	st.local.u32 	[%rd5], %r5713;
	ld.local.u32 	%r5718, [%rd3+8];
	ld.local.u32 	%r5719, [%rd3+4];
	// inline asm
	prmt.b32 %r5717, %r5718, %r5719, %r6;
	// inline asm
	st.local.u32 	[%rd4+12], %r5717;
	ld.local.v2.u32 	{%r5798, %r5799}, [%rd3];
	// inline asm
	prmt.b32 %r5721, %r5799, %r5798, %r6;
	// inline asm
	st.local.u32 	[%rd4+8], %r5721;
	ld.local.u32 	%r5726, [%rd3];
	ld.local.u32 	%r5727, [%rd2+12];
	// inline asm
	prmt.b32 %r5725, %r5726, %r5727, %r6;
	// inline asm
	st.local.u32 	[%rd4+4], %r5725;
	ld.local.v2.u32 	{%r5800, %r5801}, [%rd2+8];
	// inline asm
	prmt.b32 %r5729, %r5801, %r5800, %r6;
	// inline asm
	st.local.u32 	[%rd4], %r5729;
	ld.local.u32 	%r5734, [%rd2+8];
	ld.local.u32 	%r5735, [%rd2+4];
	// inline asm
	prmt.b32 %r5733, %r5734, %r5735, %r6;
	// inline asm
	st.local.u32 	[%rd3+12], %r5733;
	ld.local.v2.u32 	{%r5802, %r5803}, [%rd2];
	// inline asm
	prmt.b32 %r5737, %r5803, %r5802, %r6;
	// inline asm
	st.local.u32 	[%rd3+8], %r5737;
	ld.local.u32 	%r5742, [%rd2];
	// inline asm
	prmt.b32 %r5741, %r5742, %r8913, %r6;
	// inline asm
	st.local.v2.u32 	[%rd3], {%r8913, %r5741};
	st.local.v2.u32 	[%rd2+8], {%r8913, %r8913};
	mov.u64 	%rd102, 0;
	st.local.u64 	[%rd2], %rd102;
	mov.u32 	%r8918, %r8913;
	mov.u32 	%r8919, %r8913;
	bra.uni 	BB2_81;

BB2_47:
	setp.eq.s32	%p20, %r991, 21;
	@%p20 bra 	BB2_48;
	bra.uni 	BB2_89;

BB2_48:
	mov.u32 	%r8913, 0;
	// inline asm
	prmt.b32 %r8936, %r8913, %r989, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2836, %r2837}, [%rd9+8];
	// inline asm
	prmt.b32 %r8937, %r2837, %r2836, %r6;
	// inline asm
	ld.local.u32 	%r2702, [%rd9+8];
	ld.local.u32 	%r2703, [%rd9+4];
	// inline asm
	prmt.b32 %r8930, %r2702, %r2703, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2838, %r2839}, [%rd9];
	// inline asm
	prmt.b32 %r8931, %r2839, %r2838, %r6;
	// inline asm
	ld.local.u32 	%r2710, [%rd9];
	ld.local.u32 	%r2711, [%rd8+12];
	// inline asm
	prmt.b32 %r8932, %r2710, %r2711, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2840, %r2841}, [%rd8+8];
	// inline asm
	prmt.b32 %r8933, %r2841, %r2840, %r6;
	// inline asm
	ld.local.u32 	%r2718, [%rd8+8];
	ld.local.u32 	%r2719, [%rd8+4];
	// inline asm
	prmt.b32 %r8926, %r2718, %r2719, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2842, %r2843}, [%rd8];
	// inline asm
	prmt.b32 %r8927, %r2843, %r2842, %r6;
	// inline asm
	ld.local.u32 	%r2726, [%rd8];
	ld.local.u32 	%r2727, [%rd7+12];
	// inline asm
	prmt.b32 %r8928, %r2726, %r2727, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2844, %r2845}, [%rd7+8];
	// inline asm
	prmt.b32 %r8929, %r2845, %r2844, %r6;
	// inline asm
	ld.local.u32 	%r2734, [%rd7+8];
	ld.local.u32 	%r2735, [%rd7+4];
	// inline asm
	prmt.b32 %r8922, %r2734, %r2735, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2846, %r2847}, [%rd7];
	// inline asm
	prmt.b32 %r8923, %r2847, %r2846, %r6;
	// inline asm
	ld.local.u32 	%r2742, [%rd7];
	ld.local.u32 	%r2743, [%rd6+12];
	// inline asm
	prmt.b32 %r8924, %r2742, %r2743, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2848, %r2849}, [%rd6+8];
	// inline asm
	prmt.b32 %r8925, %r2849, %r2848, %r6;
	// inline asm
	ld.local.u32 	%r2750, [%rd6+8];
	ld.local.u32 	%r2751, [%rd6+4];
	// inline asm
	prmt.b32 %r8918, %r2750, %r2751, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2850, %r2851}, [%rd6];
	// inline asm
	prmt.b32 %r8919, %r2851, %r2850, %r6;
	// inline asm
	ld.local.u32 	%r2758, [%rd6];
	ld.local.u32 	%r2759, [%rd5+12];
	// inline asm
	prmt.b32 %r8920, %r2758, %r2759, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2852, %r2853}, [%rd5+8];
	// inline asm
	prmt.b32 %r8921, %r2853, %r2852, %r6;
	// inline asm
	ld.local.u32 	%r2766, [%rd5+8];
	ld.local.u32 	%r2767, [%rd5+4];
	// inline asm
	prmt.b32 %r8914, %r2766, %r2767, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2854, %r2855}, [%rd5];
	// inline asm
	prmt.b32 %r8915, %r2855, %r2854, %r6;
	// inline asm
	ld.local.u32 	%r2774, [%rd5];
	ld.local.u32 	%r2775, [%rd4+12];
	// inline asm
	prmt.b32 %r8916, %r2774, %r2775, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2856, %r2857}, [%rd4+8];
	// inline asm
	prmt.b32 %r8917, %r2857, %r2856, %r6;
	// inline asm
	ld.local.u32 	%r2782, [%rd4+8];
	ld.local.u32 	%r2783, [%rd4+4];
	// inline asm
	prmt.b32 %r2781, %r2782, %r2783, %r6;
	// inline asm
	st.local.u32 	[%rd9+12], %r2781;
	ld.local.v2.u32 	{%r2858, %r2859}, [%rd4];
	// inline asm
	prmt.b32 %r2785, %r2859, %r2858, %r6;
	// inline asm
	st.local.u32 	[%rd9+8], %r2785;
	ld.local.u32 	%r2790, [%rd4];
	ld.local.u32 	%r2791, [%rd3+12];
	// inline asm
	prmt.b32 %r2789, %r2790, %r2791, %r6;
	// inline asm
	st.local.u32 	[%rd9+4], %r2789;
	ld.local.v2.u32 	{%r2860, %r2861}, [%rd3+8];
	// inline asm
	prmt.b32 %r2793, %r2861, %r2860, %r6;
	// inline asm
	st.local.u32 	[%rd9], %r2793;
	ld.local.u32 	%r2798, [%rd3+8];
	ld.local.u32 	%r2799, [%rd3+4];
	// inline asm
	prmt.b32 %r2797, %r2798, %r2799, %r6;
	// inline asm
	st.local.u32 	[%rd8+12], %r2797;
	ld.local.v2.u32 	{%r2862, %r2863}, [%rd3];
	// inline asm
	prmt.b32 %r2801, %r2863, %r2862, %r6;
	// inline asm
	st.local.u32 	[%rd8+8], %r2801;
	ld.local.u32 	%r2806, [%rd3];
	ld.local.u32 	%r2807, [%rd2+12];
	// inline asm
	prmt.b32 %r2805, %r2806, %r2807, %r6;
	// inline asm
	st.local.u32 	[%rd8+4], %r2805;
	ld.local.v2.u32 	{%r2864, %r2865}, [%rd2+8];
	// inline asm
	prmt.b32 %r2809, %r2865, %r2864, %r6;
	// inline asm
	st.local.u32 	[%rd8], %r2809;
	ld.local.u32 	%r2814, [%rd2+8];
	ld.local.u32 	%r2815, [%rd2+4];
	// inline asm
	prmt.b32 %r2813, %r2814, %r2815, %r6;
	// inline asm
	st.local.u32 	[%rd7+12], %r2813;
	ld.local.v2.u32 	{%r2866, %r2867}, [%rd2];
	// inline asm
	prmt.b32 %r2817, %r2867, %r2866, %r6;
	// inline asm
	st.local.u32 	[%rd7+8], %r2817;
	ld.local.u32 	%r2822, [%rd2];
	// inline asm
	prmt.b32 %r2821, %r2822, %r8913, %r6;
	// inline asm
	st.local.v2.u32 	[%rd7], {%r8913, %r2821};
	st.local.v4.u32 	[%rd6], {%r8913, %r8913, %r8913, %r8913};
	st.local.v4.u32 	[%rd5], {%r8913, %r8913, %r8913, %r8913};
	st.local.v4.u32 	[%rd4], {%r8913, %r8913, %r8913, %r8913};
	st.local.v4.u32 	[%rd3], {%r8913, %r8913, %r8913, %r8913};
	st.local.v2.u32 	[%rd2+8], {%r8913, %r8913};
	mov.u64 	%rd86, 0;
	st.local.u64 	[%rd2], %rd86;
	mov.u32 	%r8934, %r8913;
	mov.u32 	%r8935, %r8913;
	bra.uni 	BB2_85;

BB2_31:
	setp.eq.s32	%p32, %r991, 13;
	@%p32 bra 	BB2_32;
	bra.uni 	BB2_89;

BB2_32:
	mov.u32 	%r8913, 0;
	// inline asm
	prmt.b32 %r8928, %r8913, %r989, %r6;
	// inline asm
	ld.local.v2.u32 	{%r4272, %r4273}, [%rd9+8];
	// inline asm
	prmt.b32 %r8929, %r4273, %r4272, %r6;
	// inline asm
	ld.local.u32 	%r4130, [%rd9+8];
	ld.local.u32 	%r4131, [%rd9+4];
	// inline asm
	prmt.b32 %r8922, %r4130, %r4131, %r6;
	// inline asm
	ld.local.v2.u32 	{%r4274, %r4275}, [%rd9];
	// inline asm
	prmt.b32 %r8923, %r4275, %r4274, %r6;
	// inline asm
	ld.local.u32 	%r4138, [%rd9];
	ld.local.u32 	%r4139, [%rd8+12];
	// inline asm
	prmt.b32 %r8924, %r4138, %r4139, %r6;
	// inline asm
	ld.local.v2.u32 	{%r4276, %r4277}, [%rd8+8];
	// inline asm
	prmt.b32 %r8925, %r4277, %r4276, %r6;
	// inline asm
	ld.local.u32 	%r4146, [%rd8+8];
	ld.local.u32 	%r4147, [%rd8+4];
	// inline asm
	prmt.b32 %r8918, %r4146, %r4147, %r6;
	// inline asm
	ld.local.v2.u32 	{%r4278, %r4279}, [%rd8];
	// inline asm
	prmt.b32 %r8919, %r4279, %r4278, %r6;
	// inline asm
	ld.local.u32 	%r4154, [%rd8];
	ld.local.u32 	%r4155, [%rd7+12];
	// inline asm
	prmt.b32 %r8920, %r4154, %r4155, %r6;
	// inline asm
	ld.local.v2.u32 	{%r4280, %r4281}, [%rd7+8];
	// inline asm
	prmt.b32 %r8921, %r4281, %r4280, %r6;
	// inline asm
	ld.local.u32 	%r4162, [%rd7+8];
	ld.local.u32 	%r4163, [%rd7+4];
	// inline asm
	prmt.b32 %r8914, %r4162, %r4163, %r6;
	// inline asm
	ld.local.v2.u32 	{%r4282, %r4283}, [%rd7];
	// inline asm
	prmt.b32 %r8915, %r4283, %r4282, %r6;
	// inline asm
	ld.local.u32 	%r4170, [%rd7];
	ld.local.u32 	%r4171, [%rd6+12];
	// inline asm
	prmt.b32 %r8916, %r4170, %r4171, %r6;
	// inline asm
	ld.local.v2.u32 	{%r4284, %r4285}, [%rd6+8];
	// inline asm
	prmt.b32 %r8917, %r4285, %r4284, %r6;
	// inline asm
	ld.local.u32 	%r4178, [%rd6+8];
	ld.local.u32 	%r4179, [%rd6+4];
	// inline asm
	prmt.b32 %r4177, %r4178, %r4179, %r6;
	// inline asm
	st.local.u32 	[%rd9+12], %r4177;
	ld.local.v2.u32 	{%r4286, %r4287}, [%rd6];
	// inline asm
	prmt.b32 %r4181, %r4287, %r4286, %r6;
	// inline asm
	st.local.u32 	[%rd9+8], %r4181;
	ld.local.u32 	%r4186, [%rd6];
	ld.local.u32 	%r4187, [%rd5+12];
	// inline asm
	prmt.b32 %r4185, %r4186, %r4187, %r6;
	// inline asm
	st.local.u32 	[%rd9+4], %r4185;
	ld.local.v2.u32 	{%r4288, %r4289}, [%rd5+8];
	// inline asm
	prmt.b32 %r4189, %r4289, %r4288, %r6;
	// inline asm
	st.local.u32 	[%rd9], %r4189;
	ld.local.u32 	%r4194, [%rd5+8];
	ld.local.u32 	%r4195, [%rd5+4];
	// inline asm
	prmt.b32 %r4193, %r4194, %r4195, %r6;
	// inline asm
	st.local.u32 	[%rd8+12], %r4193;
	ld.local.v2.u32 	{%r4290, %r4291}, [%rd5];
	// inline asm
	prmt.b32 %r4197, %r4291, %r4290, %r6;
	// inline asm
	st.local.u32 	[%rd8+8], %r4197;
	ld.local.u32 	%r4202, [%rd5];
	ld.local.u32 	%r4203, [%rd4+12];
	// inline asm
	prmt.b32 %r4201, %r4202, %r4203, %r6;
	// inline asm
	st.local.u32 	[%rd8+4], %r4201;
	ld.local.v2.u32 	{%r4292, %r4293}, [%rd4+8];
	// inline asm
	prmt.b32 %r4205, %r4293, %r4292, %r6;
	// inline asm
	st.local.u32 	[%rd8], %r4205;
	ld.local.u32 	%r4210, [%rd4+8];
	ld.local.u32 	%r4211, [%rd4+4];
	// inline asm
	prmt.b32 %r4209, %r4210, %r4211, %r6;
	// inline asm
	st.local.u32 	[%rd7+12], %r4209;
	ld.local.v2.u32 	{%r4294, %r4295}, [%rd4];
	// inline asm
	prmt.b32 %r4213, %r4295, %r4294, %r6;
	// inline asm
	st.local.u32 	[%rd7+8], %r4213;
	ld.local.u32 	%r4218, [%rd4];
	ld.local.u32 	%r4219, [%rd3+12];
	// inline asm
	prmt.b32 %r4217, %r4218, %r4219, %r6;
	// inline asm
	st.local.u32 	[%rd7+4], %r4217;
	ld.local.v2.u32 	{%r4296, %r4297}, [%rd3+8];
	// inline asm
	prmt.b32 %r4221, %r4297, %r4296, %r6;
	// inline asm
	st.local.u32 	[%rd7], %r4221;
	ld.local.u32 	%r4226, [%rd3+8];
	ld.local.u32 	%r4227, [%rd3+4];
	// inline asm
	prmt.b32 %r4225, %r4226, %r4227, %r6;
	// inline asm
	st.local.u32 	[%rd6+12], %r4225;
	ld.local.v2.u32 	{%r4298, %r4299}, [%rd3];
	// inline asm
	prmt.b32 %r4229, %r4299, %r4298, %r6;
	// inline asm
	st.local.u32 	[%rd6+8], %r4229;
	ld.local.u32 	%r4234, [%rd3];
	ld.local.u32 	%r4235, [%rd2+12];
	// inline asm
	prmt.b32 %r4233, %r4234, %r4235, %r6;
	// inline asm
	st.local.u32 	[%rd6+4], %r4233;
	ld.local.v2.u32 	{%r4300, %r4301}, [%rd2+8];
	// inline asm
	prmt.b32 %r4237, %r4301, %r4300, %r6;
	// inline asm
	st.local.u32 	[%rd6], %r4237;
	ld.local.u32 	%r4242, [%rd2+8];
	ld.local.u32 	%r4243, [%rd2+4];
	// inline asm
	prmt.b32 %r4241, %r4242, %r4243, %r6;
	// inline asm
	st.local.u32 	[%rd5+12], %r4241;
	ld.local.v2.u32 	{%r4302, %r4303}, [%rd2];
	// inline asm
	prmt.b32 %r4245, %r4303, %r4302, %r6;
	// inline asm
	st.local.u32 	[%rd5+8], %r4245;
	ld.local.u32 	%r4250, [%rd2];
	// inline asm
	prmt.b32 %r4249, %r4250, %r8913, %r6;
	// inline asm
	st.local.v2.u32 	[%rd5], {%r8913, %r4249};
	st.local.v4.u32 	[%rd4], {%r8913, %r8913, %r8913, %r8913};
	st.local.v4.u32 	[%rd3], {%r8913, %r8913, %r8913, %r8913};
	st.local.v2.u32 	[%rd2+8], {%r8913, %r8913};
	mov.u64 	%rd94, 0;
	st.local.u64 	[%rd2], %rd94;
	mov.u32 	%r8926, %r8913;
	mov.u32 	%r8927, %r8913;
	bra.uni 	BB2_83;

BB2_62:
	setp.eq.s32	%p9, %r991, 29;
	@%p9 bra 	BB2_63;
	bra.uni 	BB2_89;

BB2_63:
	mov.u32 	%r8913, 0;
	// inline asm
	prmt.b32 %r8944, %r8913, %r989, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1464, %r1465}, [%rd9+8];
	// inline asm
	prmt.b32 %r8945, %r1465, %r1464, %r6;
	// inline asm
	ld.local.u32 	%r1338, [%rd9+8];
	ld.local.u32 	%r1339, [%rd9+4];
	// inline asm
	prmt.b32 %r8938, %r1338, %r1339, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1466, %r1467}, [%rd9];
	// inline asm
	prmt.b32 %r8939, %r1467, %r1466, %r6;
	// inline asm
	ld.local.u32 	%r1346, [%rd9];
	ld.local.u32 	%r1347, [%rd8+12];
	// inline asm
	prmt.b32 %r8940, %r1346, %r1347, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1468, %r1469}, [%rd8+8];
	// inline asm
	prmt.b32 %r8941, %r1469, %r1468, %r6;
	// inline asm
	ld.local.u32 	%r1354, [%rd8+8];
	ld.local.u32 	%r1355, [%rd8+4];
	// inline asm
	prmt.b32 %r8934, %r1354, %r1355, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1470, %r1471}, [%rd8];
	// inline asm
	prmt.b32 %r8935, %r1471, %r1470, %r6;
	// inline asm
	ld.local.u32 	%r1362, [%rd8];
	ld.local.u32 	%r1363, [%rd7+12];
	// inline asm
	prmt.b32 %r8936, %r1362, %r1363, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1472, %r1473}, [%rd7+8];
	// inline asm
	prmt.b32 %r8937, %r1473, %r1472, %r6;
	// inline asm
	ld.local.u32 	%r1370, [%rd7+8];
	ld.local.u32 	%r1371, [%rd7+4];
	// inline asm
	prmt.b32 %r8930, %r1370, %r1371, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1474, %r1475}, [%rd7];
	// inline asm
	prmt.b32 %r8931, %r1475, %r1474, %r6;
	// inline asm
	ld.local.u32 	%r1378, [%rd7];
	ld.local.u32 	%r1379, [%rd6+12];
	// inline asm
	prmt.b32 %r8932, %r1378, %r1379, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1476, %r1477}, [%rd6+8];
	// inline asm
	prmt.b32 %r8933, %r1477, %r1476, %r6;
	// inline asm
	ld.local.u32 	%r1386, [%rd6+8];
	ld.local.u32 	%r1387, [%rd6+4];
	// inline asm
	prmt.b32 %r8926, %r1386, %r1387, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1478, %r1479}, [%rd6];
	// inline asm
	prmt.b32 %r8927, %r1479, %r1478, %r6;
	// inline asm
	ld.local.u32 	%r1394, [%rd6];
	ld.local.u32 	%r1395, [%rd5+12];
	// inline asm
	prmt.b32 %r8928, %r1394, %r1395, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1480, %r1481}, [%rd5+8];
	// inline asm
	prmt.b32 %r8929, %r1481, %r1480, %r6;
	// inline asm
	ld.local.u32 	%r1402, [%rd5+8];
	ld.local.u32 	%r1403, [%rd5+4];
	// inline asm
	prmt.b32 %r8922, %r1402, %r1403, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1482, %r1483}, [%rd5];
	// inline asm
	prmt.b32 %r8923, %r1483, %r1482, %r6;
	// inline asm
	ld.local.u32 	%r1410, [%rd5];
	ld.local.u32 	%r1411, [%rd4+12];
	// inline asm
	prmt.b32 %r8924, %r1410, %r1411, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1484, %r1485}, [%rd4+8];
	// inline asm
	prmt.b32 %r8925, %r1485, %r1484, %r6;
	// inline asm
	ld.local.u32 	%r1418, [%rd4+8];
	ld.local.u32 	%r1419, [%rd4+4];
	// inline asm
	prmt.b32 %r8918, %r1418, %r1419, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1486, %r1487}, [%rd4];
	// inline asm
	prmt.b32 %r8919, %r1487, %r1486, %r6;
	// inline asm
	ld.local.u32 	%r1426, [%rd4];
	ld.local.u32 	%r1427, [%rd3+12];
	// inline asm
	prmt.b32 %r8920, %r1426, %r1427, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1488, %r1489}, [%rd3+8];
	// inline asm
	prmt.b32 %r8921, %r1489, %r1488, %r6;
	// inline asm
	ld.local.u32 	%r1434, [%rd3+8];
	ld.local.u32 	%r1435, [%rd3+4];
	// inline asm
	prmt.b32 %r8914, %r1434, %r1435, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1490, %r1491}, [%rd3];
	// inline asm
	prmt.b32 %r8915, %r1491, %r1490, %r6;
	// inline asm
	ld.local.u32 	%r1442, [%rd3];
	ld.local.u32 	%r1443, [%rd2+12];
	// inline asm
	prmt.b32 %r8916, %r1442, %r1443, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1492, %r1493}, [%rd2+8];
	// inline asm
	prmt.b32 %r8917, %r1493, %r1492, %r6;
	// inline asm
	ld.local.u32 	%r1450, [%rd2+8];
	ld.local.u32 	%r1451, [%rd2+4];
	// inline asm
	prmt.b32 %r1449, %r1450, %r1451, %r6;
	// inline asm
	st.local.u32 	[%rd9+12], %r1449;
	ld.local.v2.u32 	{%r1494, %r1495}, [%rd2];
	// inline asm
	prmt.b32 %r1453, %r1495, %r1494, %r6;
	// inline asm
	st.local.u32 	[%rd9+8], %r1453;
	ld.local.u32 	%r1458, [%rd2];
	// inline asm
	prmt.b32 %r1457, %r1458, %r8913, %r6;
	// inline asm
	st.local.v2.u32 	[%rd9], {%r8913, %r1457};
	st.local.v4.u32 	[%rd8], {%r8913, %r8913, %r8913, %r8913};
	st.local.v4.u32 	[%rd7], {%r8913, %r8913, %r8913, %r8913};
	st.local.v4.u32 	[%rd6], {%r8913, %r8913, %r8913, %r8913};
	st.local.v4.u32 	[%rd5], {%r8913, %r8913, %r8913, %r8913};
	st.local.v4.u32 	[%rd4], {%r8913, %r8913, %r8913, %r8913};
	st.local.v4.u32 	[%rd3], {%r8913, %r8913, %r8913, %r8913};
	st.local.v2.u32 	[%rd2+8], {%r8913, %r8913};
	mov.u64 	%rd78, 0;
	st.local.u64 	[%rd2], %rd78;
	mov.u32 	%r8942, %r8913;
	mov.u32 	%r8943, %r8913;
	bra.uni 	BB2_91;

BB2_11:
	setp.eq.s32	%p46, %r991, 3;
	@%p46 bra 	BB2_12;
	bra.uni 	BB2_89;

BB2_12:
	mov.u32 	%r8913, 0;
	// inline asm
	prmt.b32 %r8914, %r8913, %r989, %r6;
	// inline asm
	ld.local.v2.u32 	{%r6157, %r6158}, [%rd9+8];
	// inline asm
	prmt.b32 %r8915, %r6158, %r6157, %r6;
	// inline asm
	ld.local.u32 	%r6005, [%rd9+8];
	ld.local.u32 	%r6006, [%rd9+4];
	// inline asm
	prmt.b32 %r8916, %r6005, %r6006, %r6;
	// inline asm
	ld.local.v2.u32 	{%r6159, %r6160}, [%rd9];
	// inline asm
	prmt.b32 %r8917, %r6160, %r6159, %r6;
	// inline asm
	ld.local.u32 	%r6013, [%rd9];
	ld.local.u32 	%r6014, [%rd8+12];
	// inline asm
	prmt.b32 %r6012, %r6013, %r6014, %r6;
	// inline asm
	st.local.u32 	[%rd9+12], %r6012;
	ld.local.v2.u32 	{%r6161, %r6162}, [%rd8+8];
	// inline asm
	prmt.b32 %r6016, %r6162, %r6161, %r6;
	// inline asm
	st.local.u32 	[%rd9+8], %r6016;
	ld.local.u32 	%r6021, [%rd8+8];
	ld.local.u32 	%r6022, [%rd8+4];
	// inline asm
	prmt.b32 %r6020, %r6021, %r6022, %r6;
	// inline asm
	st.local.u32 	[%rd9+4], %r6020;
	ld.local.v2.u32 	{%r6163, %r6164}, [%rd8];
	// inline asm
	prmt.b32 %r6024, %r6164, %r6163, %r6;
	// inline asm
	st.local.u32 	[%rd9], %r6024;
	ld.local.u32 	%r6029, [%rd8];
	ld.local.u32 	%r6030, [%rd7+12];
	// inline asm
	prmt.b32 %r6028, %r6029, %r6030, %r6;
	// inline asm
	st.local.u32 	[%rd8+12], %r6028;
	ld.local.v2.u32 	{%r6165, %r6166}, [%rd7+8];
	// inline asm
	prmt.b32 %r6032, %r6166, %r6165, %r6;
	// inline asm
	st.local.u32 	[%rd8+8], %r6032;
	ld.local.u32 	%r6037, [%rd7+8];
	ld.local.u32 	%r6038, [%rd7+4];
	// inline asm
	prmt.b32 %r6036, %r6037, %r6038, %r6;
	// inline asm
	st.local.u32 	[%rd8+4], %r6036;
	ld.local.v2.u32 	{%r6167, %r6168}, [%rd7];
	// inline asm
	prmt.b32 %r6040, %r6168, %r6167, %r6;
	// inline asm
	st.local.u32 	[%rd8], %r6040;
	ld.local.u32 	%r6045, [%rd7];
	ld.local.u32 	%r6046, [%rd6+12];
	// inline asm
	prmt.b32 %r6044, %r6045, %r6046, %r6;
	// inline asm
	st.local.u32 	[%rd7+12], %r6044;
	ld.local.v2.u32 	{%r6169, %r6170}, [%rd6+8];
	// inline asm
	prmt.b32 %r6048, %r6170, %r6169, %r6;
	// inline asm
	st.local.u32 	[%rd7+8], %r6048;
	ld.local.u32 	%r6053, [%rd6+8];
	ld.local.u32 	%r6054, [%rd6+4];
	// inline asm
	prmt.b32 %r6052, %r6053, %r6054, %r6;
	// inline asm
	st.local.u32 	[%rd7+4], %r6052;
	ld.local.v2.u32 	{%r6171, %r6172}, [%rd6];
	// inline asm
	prmt.b32 %r6056, %r6172, %r6171, %r6;
	// inline asm
	st.local.u32 	[%rd7], %r6056;
	ld.local.u32 	%r6061, [%rd6];
	ld.local.u32 	%r6062, [%rd5+12];
	// inline asm
	prmt.b32 %r6060, %r6061, %r6062, %r6;
	// inline asm
	st.local.u32 	[%rd6+12], %r6060;
	ld.local.v2.u32 	{%r6173, %r6174}, [%rd5+8];
	// inline asm
	prmt.b32 %r6064, %r6174, %r6173, %r6;
	// inline asm
	st.local.u32 	[%rd6+8], %r6064;
	ld.local.u32 	%r6069, [%rd5+8];
	ld.local.u32 	%r6070, [%rd5+4];
	// inline asm
	prmt.b32 %r6068, %r6069, %r6070, %r6;
	// inline asm
	st.local.u32 	[%rd6+4], %r6068;
	ld.local.v2.u32 	{%r6175, %r6176}, [%rd5];
	// inline asm
	prmt.b32 %r6072, %r6176, %r6175, %r6;
	// inline asm
	st.local.u32 	[%rd6], %r6072;
	ld.local.u32 	%r6077, [%rd5];
	ld.local.u32 	%r6078, [%rd4+12];
	// inline asm
	prmt.b32 %r6076, %r6077, %r6078, %r6;
	// inline asm
	st.local.u32 	[%rd5+12], %r6076;
	ld.local.v2.u32 	{%r6177, %r6178}, [%rd4+8];
	// inline asm
	prmt.b32 %r6080, %r6178, %r6177, %r6;
	// inline asm
	st.local.u32 	[%rd5+8], %r6080;
	ld.local.u32 	%r6085, [%rd4+8];
	ld.local.u32 	%r6086, [%rd4+4];
	// inline asm
	prmt.b32 %r6084, %r6085, %r6086, %r6;
	// inline asm
	st.local.u32 	[%rd5+4], %r6084;
	ld.local.v2.u32 	{%r6179, %r6180}, [%rd4];
	// inline asm
	prmt.b32 %r6088, %r6180, %r6179, %r6;
	// inline asm
	st.local.u32 	[%rd5], %r6088;
	ld.local.u32 	%r6093, [%rd4];
	ld.local.u32 	%r6094, [%rd3+12];
	// inline asm
	prmt.b32 %r6092, %r6093, %r6094, %r6;
	// inline asm
	st.local.u32 	[%rd4+12], %r6092;
	ld.local.v2.u32 	{%r6181, %r6182}, [%rd3+8];
	// inline asm
	prmt.b32 %r6096, %r6182, %r6181, %r6;
	// inline asm
	st.local.u32 	[%rd4+8], %r6096;
	ld.local.u32 	%r6101, [%rd3+8];
	ld.local.u32 	%r6102, [%rd3+4];
	// inline asm
	prmt.b32 %r6100, %r6101, %r6102, %r6;
	// inline asm
	st.local.u32 	[%rd4+4], %r6100;
	ld.local.v2.u32 	{%r6183, %r6184}, [%rd3];
	// inline asm
	prmt.b32 %r6104, %r6184, %r6183, %r6;
	// inline asm
	st.local.u32 	[%rd4], %r6104;
	ld.local.u32 	%r6109, [%rd3];
	ld.local.u32 	%r6110, [%rd2+12];
	// inline asm
	prmt.b32 %r6108, %r6109, %r6110, %r6;
	// inline asm
	st.local.u32 	[%rd3+12], %r6108;
	ld.local.v2.u32 	{%r6185, %r6186}, [%rd2+8];
	// inline asm
	prmt.b32 %r6112, %r6186, %r6185, %r6;
	// inline asm
	st.local.u32 	[%rd3+8], %r6112;
	ld.local.u32 	%r6117, [%rd2+8];
	ld.local.u32 	%r6118, [%rd2+4];
	// inline asm
	prmt.b32 %r6116, %r6117, %r6118, %r6;
	// inline asm
	st.local.u32 	[%rd3+4], %r6116;
	ld.local.v2.u32 	{%r6187, %r6188}, [%rd2];
	// inline asm
	prmt.b32 %r6120, %r6188, %r6187, %r6;
	// inline asm
	st.local.u32 	[%rd3], %r6120;
	ld.local.u32 	%r6125, [%rd2];
	// inline asm
	prmt.b32 %r6124, %r6125, %r8913, %r6;
	// inline asm
	st.local.v2.u32 	[%rd2+8], {%r8913, %r6124};
	mov.u64 	%rd104, 0;
	st.local.u64 	[%rd2], %rd104;

BB2_13:
	mov.u32 	%r8918, %r8913;
	mov.u32 	%r8919, %r8913;
	mov.u32 	%r8920, %r8913;
	mov.u32 	%r8921, %r8913;
	bra.uni 	BB2_81;

BB2_43:
	setp.eq.s32	%p23, %r991, 19;
	@%p23 bra 	BB2_44;
	bra.uni 	BB2_89;

BB2_44:
	mov.u32 	%r8913, 0;
	// inline asm
	prmt.b32 %r8930, %r8913, %r989, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3189, %r3190}, [%rd9+8];
	// inline asm
	prmt.b32 %r8931, %r3190, %r3189, %r6;
	// inline asm
	ld.local.u32 	%r3053, [%rd9+8];
	ld.local.u32 	%r3054, [%rd9+4];
	// inline asm
	prmt.b32 %r8932, %r3053, %r3054, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3191, %r3192}, [%rd9];
	// inline asm
	prmt.b32 %r8933, %r3192, %r3191, %r6;
	// inline asm
	ld.local.u32 	%r3061, [%rd9];
	ld.local.u32 	%r3062, [%rd8+12];
	// inline asm
	prmt.b32 %r8926, %r3061, %r3062, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3193, %r3194}, [%rd8+8];
	// inline asm
	prmt.b32 %r8927, %r3194, %r3193, %r6;
	// inline asm
	ld.local.u32 	%r3069, [%rd8+8];
	ld.local.u32 	%r3070, [%rd8+4];
	// inline asm
	prmt.b32 %r8928, %r3069, %r3070, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3195, %r3196}, [%rd8];
	// inline asm
	prmt.b32 %r8929, %r3196, %r3195, %r6;
	// inline asm
	ld.local.u32 	%r3077, [%rd8];
	ld.local.u32 	%r3078, [%rd7+12];
	// inline asm
	prmt.b32 %r8922, %r3077, %r3078, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3197, %r3198}, [%rd7+8];
	// inline asm
	prmt.b32 %r8923, %r3198, %r3197, %r6;
	// inline asm
	ld.local.u32 	%r3085, [%rd7+8];
	ld.local.u32 	%r3086, [%rd7+4];
	// inline asm
	prmt.b32 %r8924, %r3085, %r3086, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3199, %r3200}, [%rd7];
	// inline asm
	prmt.b32 %r8925, %r3200, %r3199, %r6;
	// inline asm
	ld.local.u32 	%r3093, [%rd7];
	ld.local.u32 	%r3094, [%rd6+12];
	// inline asm
	prmt.b32 %r8918, %r3093, %r3094, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3201, %r3202}, [%rd6+8];
	// inline asm
	prmt.b32 %r8919, %r3202, %r3201, %r6;
	// inline asm
	ld.local.u32 	%r3101, [%rd6+8];
	ld.local.u32 	%r3102, [%rd6+4];
	// inline asm
	prmt.b32 %r8920, %r3101, %r3102, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3203, %r3204}, [%rd6];
	// inline asm
	prmt.b32 %r8921, %r3204, %r3203, %r6;
	// inline asm
	ld.local.u32 	%r3109, [%rd6];
	ld.local.u32 	%r3110, [%rd5+12];
	// inline asm
	prmt.b32 %r8914, %r3109, %r3110, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3205, %r3206}, [%rd5+8];
	// inline asm
	prmt.b32 %r8915, %r3206, %r3205, %r6;
	// inline asm
	ld.local.u32 	%r3117, [%rd5+8];
	ld.local.u32 	%r3118, [%rd5+4];
	// inline asm
	prmt.b32 %r8916, %r3117, %r3118, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3207, %r3208}, [%rd5];
	// inline asm
	prmt.b32 %r8917, %r3208, %r3207, %r6;
	// inline asm
	ld.local.u32 	%r3125, [%rd5];
	ld.local.u32 	%r3126, [%rd4+12];
	// inline asm
	prmt.b32 %r3124, %r3125, %r3126, %r6;
	// inline asm
	st.local.u32 	[%rd9+12], %r3124;
	ld.local.v2.u32 	{%r3209, %r3210}, [%rd4+8];
	// inline asm
	prmt.b32 %r3128, %r3210, %r3209, %r6;
	// inline asm
	st.local.u32 	[%rd9+8], %r3128;
	ld.local.u32 	%r3133, [%rd4+8];
	ld.local.u32 	%r3134, [%rd4+4];
	// inline asm
	prmt.b32 %r3132, %r3133, %r3134, %r6;
	// inline asm
	st.local.u32 	[%rd9+4], %r3132;
	ld.local.v2.u32 	{%r3211, %r3212}, [%rd4];
	// inline asm
	prmt.b32 %r3136, %r3212, %r3211, %r6;
	// inline asm
	st.local.u32 	[%rd9], %r3136;
	ld.local.u32 	%r3141, [%rd4];
	ld.local.u32 	%r3142, [%rd3+12];
	// inline asm
	prmt.b32 %r3140, %r3141, %r3142, %r6;
	// inline asm
	st.local.u32 	[%rd8+12], %r3140;
	ld.local.v2.u32 	{%r3213, %r3214}, [%rd3+8];
	// inline asm
	prmt.b32 %r3144, %r3214, %r3213, %r6;
	// inline asm
	st.local.u32 	[%rd8+8], %r3144;
	ld.local.u32 	%r3149, [%rd3+8];
	ld.local.u32 	%r3150, [%rd3+4];
	// inline asm
	prmt.b32 %r3148, %r3149, %r3150, %r6;
	// inline asm
	st.local.u32 	[%rd8+4], %r3148;
	ld.local.v2.u32 	{%r3215, %r3216}, [%rd3];
	// inline asm
	prmt.b32 %r3152, %r3216, %r3215, %r6;
	// inline asm
	st.local.u32 	[%rd8], %r3152;
	ld.local.u32 	%r3157, [%rd3];
	ld.local.u32 	%r3158, [%rd2+12];
	// inline asm
	prmt.b32 %r3156, %r3157, %r3158, %r6;
	// inline asm
	st.local.u32 	[%rd7+12], %r3156;
	ld.local.v2.u32 	{%r3217, %r3218}, [%rd2+8];
	// inline asm
	prmt.b32 %r3160, %r3218, %r3217, %r6;
	// inline asm
	st.local.u32 	[%rd7+8], %r3160;
	ld.local.u32 	%r3165, [%rd2+8];
	ld.local.u32 	%r3166, [%rd2+4];
	// inline asm
	prmt.b32 %r3164, %r3165, %r3166, %r6;
	// inline asm
	st.local.u32 	[%rd7+4], %r3164;
	ld.local.v2.u32 	{%r3219, %r3220}, [%rd2];
	// inline asm
	prmt.b32 %r3168, %r3220, %r3219, %r6;
	// inline asm
	st.local.u32 	[%rd7], %r3168;
	ld.local.u32 	%r3173, [%rd2];
	// inline asm
	prmt.b32 %r3172, %r3173, %r8913, %r6;
	// inline asm
	st.local.v4.u32 	[%rd6], {%r8913, %r8913, %r8913, %r3172};
	st.local.v4.u32 	[%rd5], {%r8913, %r8913, %r8913, %r8913};
	st.local.v4.u32 	[%rd4], {%r8913, %r8913, %r8913, %r8913};
	st.local.v4.u32 	[%rd3], {%r8913, %r8913, %r8913, %r8913};
	st.local.v2.u32 	[%rd2+8], {%r8913, %r8913};
	mov.u64 	%rd88, 0;
	st.local.u64 	[%rd2], %rd88;
	bra.uni 	BB2_84;

BB2_27:
	setp.eq.s32	%p35, %r991, 11;
	@%p35 bra 	BB2_28;
	bra.uni 	BB2_89;

BB2_28:
	mov.u32 	%r8913, 0;
	// inline asm
	prmt.b32 %r8922, %r8913, %r989, %r6;
	// inline asm
	ld.local.v2.u32 	{%r4641, %r4642}, [%rd9+8];
	// inline asm
	prmt.b32 %r8923, %r4642, %r4641, %r6;
	// inline asm
	ld.local.u32 	%r4497, [%rd9+8];
	ld.local.u32 	%r4498, [%rd9+4];
	// inline asm
	prmt.b32 %r8924, %r4497, %r4498, %r6;
	// inline asm
	ld.local.v2.u32 	{%r4643, %r4644}, [%rd9];
	// inline asm
	prmt.b32 %r8925, %r4644, %r4643, %r6;
	// inline asm
	ld.local.u32 	%r4505, [%rd9];
	ld.local.u32 	%r4506, [%rd8+12];
	// inline asm
	prmt.b32 %r8918, %r4505, %r4506, %r6;
	// inline asm
	ld.local.v2.u32 	{%r4645, %r4646}, [%rd8+8];
	// inline asm
	prmt.b32 %r8919, %r4646, %r4645, %r6;
	// inline asm
	ld.local.u32 	%r4513, [%rd8+8];
	ld.local.u32 	%r4514, [%rd8+4];
	// inline asm
	prmt.b32 %r8920, %r4513, %r4514, %r6;
	// inline asm
	ld.local.v2.u32 	{%r4647, %r4648}, [%rd8];
	// inline asm
	prmt.b32 %r8921, %r4648, %r4647, %r6;
	// inline asm
	ld.local.u32 	%r4521, [%rd8];
	ld.local.u32 	%r4522, [%rd7+12];
	// inline asm
	prmt.b32 %r8914, %r4521, %r4522, %r6;
	// inline asm
	ld.local.v2.u32 	{%r4649, %r4650}, [%rd7+8];
	// inline asm
	prmt.b32 %r8915, %r4650, %r4649, %r6;
	// inline asm
	ld.local.u32 	%r4529, [%rd7+8];
	ld.local.u32 	%r4530, [%rd7+4];
	// inline asm
	prmt.b32 %r8916, %r4529, %r4530, %r6;
	// inline asm
	ld.local.v2.u32 	{%r4651, %r4652}, [%rd7];
	// inline asm
	prmt.b32 %r8917, %r4652, %r4651, %r6;
	// inline asm
	ld.local.u32 	%r4537, [%rd7];
	ld.local.u32 	%r4538, [%rd6+12];
	// inline asm
	prmt.b32 %r4536, %r4537, %r4538, %r6;
	// inline asm
	st.local.u32 	[%rd9+12], %r4536;
	ld.local.v2.u32 	{%r4653, %r4654}, [%rd6+8];
	// inline asm
	prmt.b32 %r4540, %r4654, %r4653, %r6;
	// inline asm
	st.local.u32 	[%rd9+8], %r4540;
	ld.local.u32 	%r4545, [%rd6+8];
	ld.local.u32 	%r4546, [%rd6+4];
	// inline asm
	prmt.b32 %r4544, %r4545, %r4546, %r6;
	// inline asm
	st.local.u32 	[%rd9+4], %r4544;
	ld.local.v2.u32 	{%r4655, %r4656}, [%rd6];
	// inline asm
	prmt.b32 %r4548, %r4656, %r4655, %r6;
	// inline asm
	st.local.u32 	[%rd9], %r4548;
	ld.local.u32 	%r4553, [%rd6];
	ld.local.u32 	%r4554, [%rd5+12];
	// inline asm
	prmt.b32 %r4552, %r4553, %r4554, %r6;
	// inline asm
	st.local.u32 	[%rd8+12], %r4552;
	ld.local.v2.u32 	{%r4657, %r4658}, [%rd5+8];
	// inline asm
	prmt.b32 %r4556, %r4658, %r4657, %r6;
	// inline asm
	st.local.u32 	[%rd8+8], %r4556;
	ld.local.u32 	%r4561, [%rd5+8];
	ld.local.u32 	%r4562, [%rd5+4];
	// inline asm
	prmt.b32 %r4560, %r4561, %r4562, %r6;
	// inline asm
	st.local.u32 	[%rd8+4], %r4560;
	ld.local.v2.u32 	{%r4659, %r4660}, [%rd5];
	// inline asm
	prmt.b32 %r4564, %r4660, %r4659, %r6;
	// inline asm
	st.local.u32 	[%rd8], %r4564;
	ld.local.u32 	%r4569, [%rd5];
	ld.local.u32 	%r4570, [%rd4+12];
	// inline asm
	prmt.b32 %r4568, %r4569, %r4570, %r6;
	// inline asm
	st.local.u32 	[%rd7+12], %r4568;
	ld.local.v2.u32 	{%r4661, %r4662}, [%rd4+8];
	// inline asm
	prmt.b32 %r4572, %r4662, %r4661, %r6;
	// inline asm
	st.local.u32 	[%rd7+8], %r4572;
	ld.local.u32 	%r4577, [%rd4+8];
	ld.local.u32 	%r4578, [%rd4+4];
	// inline asm
	prmt.b32 %r4576, %r4577, %r4578, %r6;
	// inline asm
	st.local.u32 	[%rd7+4], %r4576;
	ld.local.v2.u32 	{%r4663, %r4664}, [%rd4];
	// inline asm
	prmt.b32 %r4580, %r4664, %r4663, %r6;
	// inline asm
	st.local.u32 	[%rd7], %r4580;
	ld.local.u32 	%r4585, [%rd4];
	ld.local.u32 	%r4586, [%rd3+12];
	// inline asm
	prmt.b32 %r4584, %r4585, %r4586, %r6;
	// inline asm
	st.local.u32 	[%rd6+12], %r4584;
	ld.local.v2.u32 	{%r4665, %r4666}, [%rd3+8];
	// inline asm
	prmt.b32 %r4588, %r4666, %r4665, %r6;
	// inline asm
	st.local.u32 	[%rd6+8], %r4588;
	ld.local.u32 	%r4593, [%rd3+8];
	ld.local.u32 	%r4594, [%rd3+4];
	// inline asm
	prmt.b32 %r4592, %r4593, %r4594, %r6;
	// inline asm
	st.local.u32 	[%rd6+4], %r4592;
	ld.local.v2.u32 	{%r4667, %r4668}, [%rd3];
	// inline asm
	prmt.b32 %r4596, %r4668, %r4667, %r6;
	// inline asm
	st.local.u32 	[%rd6], %r4596;
	ld.local.u32 	%r4601, [%rd3];
	ld.local.u32 	%r4602, [%rd2+12];
	// inline asm
	prmt.b32 %r4600, %r4601, %r4602, %r6;
	// inline asm
	st.local.u32 	[%rd5+12], %r4600;
	ld.local.v2.u32 	{%r4669, %r4670}, [%rd2+8];
	// inline asm
	prmt.b32 %r4604, %r4670, %r4669, %r6;
	// inline asm
	st.local.u32 	[%rd5+8], %r4604;
	ld.local.u32 	%r4609, [%rd2+8];
	ld.local.u32 	%r4610, [%rd2+4];
	// inline asm
	prmt.b32 %r4608, %r4609, %r4610, %r6;
	// inline asm
	st.local.u32 	[%rd5+4], %r4608;
	ld.local.v2.u32 	{%r4671, %r4672}, [%rd2];
	// inline asm
	prmt.b32 %r4612, %r4672, %r4671, %r6;
	// inline asm
	st.local.u32 	[%rd5], %r4612;
	ld.local.u32 	%r4617, [%rd2];
	// inline asm
	prmt.b32 %r4616, %r4617, %r8913, %r6;
	// inline asm
	st.local.v4.u32 	[%rd4], {%r8913, %r8913, %r8913, %r4616};
	st.local.v4.u32 	[%rd3], {%r8913, %r8913, %r8913, %r8913};
	st.local.v2.u32 	[%rd2+8], {%r8913, %r8913};
	mov.u64 	%rd96, 0;
	st.local.u64 	[%rd2], %rd96;
	bra.uni 	BB2_82;

BB2_58:
	setp.eq.s32	%p12, %r991, 27;
	@%p12 bra 	BB2_59;
	bra.uni 	BB2_89;

BB2_59:
	mov.u32 	%r8913, 0;
	// inline asm
	prmt.b32 %r8938, %r8913, %r989, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1801, %r1802}, [%rd9+8];
	// inline asm
	prmt.b32 %r8939, %r1802, %r1801, %r6;
	// inline asm
	ld.local.u32 	%r1673, [%rd9+8];
	ld.local.u32 	%r1674, [%rd9+4];
	// inline asm
	prmt.b32 %r8940, %r1673, %r1674, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1803, %r1804}, [%rd9];
	// inline asm
	prmt.b32 %r8941, %r1804, %r1803, %r6;
	// inline asm
	ld.local.u32 	%r1681, [%rd9];
	ld.local.u32 	%r1682, [%rd8+12];
	// inline asm
	prmt.b32 %r8934, %r1681, %r1682, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1805, %r1806}, [%rd8+8];
	// inline asm
	prmt.b32 %r8935, %r1806, %r1805, %r6;
	// inline asm
	ld.local.u32 	%r1689, [%rd8+8];
	ld.local.u32 	%r1690, [%rd8+4];
	// inline asm
	prmt.b32 %r8936, %r1689, %r1690, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1807, %r1808}, [%rd8];
	// inline asm
	prmt.b32 %r8937, %r1808, %r1807, %r6;
	// inline asm
	ld.local.u32 	%r1697, [%rd8];
	ld.local.u32 	%r1698, [%rd7+12];
	// inline asm
	prmt.b32 %r8930, %r1697, %r1698, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1809, %r1810}, [%rd7+8];
	// inline asm
	prmt.b32 %r8931, %r1810, %r1809, %r6;
	// inline asm
	ld.local.u32 	%r1705, [%rd7+8];
	ld.local.u32 	%r1706, [%rd7+4];
	// inline asm
	prmt.b32 %r8932, %r1705, %r1706, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1811, %r1812}, [%rd7];
	// inline asm
	prmt.b32 %r8933, %r1812, %r1811, %r6;
	// inline asm
	ld.local.u32 	%r1713, [%rd7];
	ld.local.u32 	%r1714, [%rd6+12];
	// inline asm
	prmt.b32 %r8926, %r1713, %r1714, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1813, %r1814}, [%rd6+8];
	// inline asm
	prmt.b32 %r8927, %r1814, %r1813, %r6;
	// inline asm
	ld.local.u32 	%r1721, [%rd6+8];
	ld.local.u32 	%r1722, [%rd6+4];
	// inline asm
	prmt.b32 %r8928, %r1721, %r1722, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1815, %r1816}, [%rd6];
	// inline asm
	prmt.b32 %r8929, %r1816, %r1815, %r6;
	// inline asm
	ld.local.u32 	%r1729, [%rd6];
	ld.local.u32 	%r1730, [%rd5+12];
	// inline asm
	prmt.b32 %r8922, %r1729, %r1730, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1817, %r1818}, [%rd5+8];
	// inline asm
	prmt.b32 %r8923, %r1818, %r1817, %r6;
	// inline asm
	ld.local.u32 	%r1737, [%rd5+8];
	ld.local.u32 	%r1738, [%rd5+4];
	// inline asm
	prmt.b32 %r8924, %r1737, %r1738, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1819, %r1820}, [%rd5];
	// inline asm
	prmt.b32 %r8925, %r1820, %r1819, %r6;
	// inline asm
	ld.local.u32 	%r1745, [%rd5];
	ld.local.u32 	%r1746, [%rd4+12];
	// inline asm
	prmt.b32 %r8918, %r1745, %r1746, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1821, %r1822}, [%rd4+8];
	// inline asm
	prmt.b32 %r8919, %r1822, %r1821, %r6;
	// inline asm
	ld.local.u32 	%r1753, [%rd4+8];
	ld.local.u32 	%r1754, [%rd4+4];
	// inline asm
	prmt.b32 %r8920, %r1753, %r1754, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1823, %r1824}, [%rd4];
	// inline asm
	prmt.b32 %r8921, %r1824, %r1823, %r6;
	// inline asm
	ld.local.u32 	%r1761, [%rd4];
	ld.local.u32 	%r1762, [%rd3+12];
	// inline asm
	prmt.b32 %r8914, %r1761, %r1762, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1825, %r1826}, [%rd3+8];
	// inline asm
	prmt.b32 %r8915, %r1826, %r1825, %r6;
	// inline asm
	ld.local.u32 	%r1769, [%rd3+8];
	ld.local.u32 	%r1770, [%rd3+4];
	// inline asm
	prmt.b32 %r8916, %r1769, %r1770, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1827, %r1828}, [%rd3];
	// inline asm
	prmt.b32 %r8917, %r1828, %r1827, %r6;
	// inline asm
	ld.local.u32 	%r1777, [%rd3];
	ld.local.u32 	%r1778, [%rd2+12];
	// inline asm
	prmt.b32 %r1776, %r1777, %r1778, %r6;
	// inline asm
	st.local.u32 	[%rd9+12], %r1776;
	ld.local.v2.u32 	{%r1829, %r1830}, [%rd2+8];
	// inline asm
	prmt.b32 %r1780, %r1830, %r1829, %r6;
	// inline asm
	st.local.u32 	[%rd9+8], %r1780;
	ld.local.u32 	%r1785, [%rd2+8];
	ld.local.u32 	%r1786, [%rd2+4];
	// inline asm
	prmt.b32 %r1784, %r1785, %r1786, %r6;
	// inline asm
	st.local.u32 	[%rd9+4], %r1784;
	ld.local.v2.u32 	{%r1831, %r1832}, [%rd2];
	// inline asm
	prmt.b32 %r1788, %r1832, %r1831, %r6;
	// inline asm
	st.local.u32 	[%rd9], %r1788;
	ld.local.u32 	%r1793, [%rd2];
	// inline asm
	prmt.b32 %r1792, %r1793, %r8913, %r6;
	// inline asm
	st.local.v4.u32 	[%rd8], {%r8913, %r8913, %r8913, %r1792};
	st.local.v4.u32 	[%rd7], {%r8913, %r8913, %r8913, %r8913};
	st.local.v4.u32 	[%rd6], {%r8913, %r8913, %r8913, %r8913};
	st.local.v4.u32 	[%rd5], {%r8913, %r8913, %r8913, %r8913};
	st.local.v4.u32 	[%rd4], {%r8913, %r8913, %r8913, %r8913};
	st.local.v4.u32 	[%rd3], {%r8913, %r8913, %r8913, %r8913};
	st.local.v2.u32 	[%rd2+8], {%r8913, %r8913};
	mov.u64 	%rd80, 0;
	st.local.u64 	[%rd2], %rd80;
	bra.uni 	BB2_86;

BB2_19:
	setp.eq.s32	%p41, %r991, 7;
	@%p41 bra 	BB2_20;
	bra.uni 	BB2_89;

BB2_20:
	mov.u32 	%r8913, 0;
	// inline asm
	prmt.b32 %r8918, %r8913, %r989, %r6;
	// inline asm
	ld.local.v2.u32 	{%r5391, %r5392}, [%rd9+8];
	// inline asm
	prmt.b32 %r8919, %r5392, %r5391, %r6;
	// inline asm
	ld.local.u32 	%r5243, [%rd9+8];
	ld.local.u32 	%r5244, [%rd9+4];
	// inline asm
	prmt.b32 %r8920, %r5243, %r5244, %r6;
	// inline asm
	ld.local.v2.u32 	{%r5393, %r5394}, [%rd9];
	// inline asm
	prmt.b32 %r8921, %r5394, %r5393, %r6;
	// inline asm
	ld.local.u32 	%r5251, [%rd9];
	ld.local.u32 	%r5252, [%rd8+12];
	// inline asm
	prmt.b32 %r8914, %r5251, %r5252, %r6;
	// inline asm
	ld.local.v2.u32 	{%r5395, %r5396}, [%rd8+8];
	// inline asm
	prmt.b32 %r8915, %r5396, %r5395, %r6;
	// inline asm
	ld.local.u32 	%r5259, [%rd8+8];
	ld.local.u32 	%r5260, [%rd8+4];
	// inline asm
	prmt.b32 %r8916, %r5259, %r5260, %r6;
	// inline asm
	ld.local.v2.u32 	{%r5397, %r5398}, [%rd8];
	// inline asm
	prmt.b32 %r8917, %r5398, %r5397, %r6;
	// inline asm
	ld.local.u32 	%r5267, [%rd8];
	ld.local.u32 	%r5268, [%rd7+12];
	// inline asm
	prmt.b32 %r5266, %r5267, %r5268, %r6;
	// inline asm
	st.local.u32 	[%rd9+12], %r5266;
	ld.local.v2.u32 	{%r5399, %r5400}, [%rd7+8];
	// inline asm
	prmt.b32 %r5270, %r5400, %r5399, %r6;
	// inline asm
	st.local.u32 	[%rd9+8], %r5270;
	ld.local.u32 	%r5275, [%rd7+8];
	ld.local.u32 	%r5276, [%rd7+4];
	// inline asm
	prmt.b32 %r5274, %r5275, %r5276, %r6;
	// inline asm
	st.local.u32 	[%rd9+4], %r5274;
	ld.local.v2.u32 	{%r5401, %r5402}, [%rd7];
	// inline asm
	prmt.b32 %r5278, %r5402, %r5401, %r6;
	// inline asm
	st.local.u32 	[%rd9], %r5278;
	ld.local.u32 	%r5283, [%rd7];
	ld.local.u32 	%r5284, [%rd6+12];
	// inline asm
	prmt.b32 %r5282, %r5283, %r5284, %r6;
	// inline asm
	st.local.u32 	[%rd8+12], %r5282;
	ld.local.v2.u32 	{%r5403, %r5404}, [%rd6+8];
	// inline asm
	prmt.b32 %r5286, %r5404, %r5403, %r6;
	// inline asm
	st.local.u32 	[%rd8+8], %r5286;
	ld.local.u32 	%r5291, [%rd6+8];
	ld.local.u32 	%r5292, [%rd6+4];
	// inline asm
	prmt.b32 %r5290, %r5291, %r5292, %r6;
	// inline asm
	st.local.u32 	[%rd8+4], %r5290;
	ld.local.v2.u32 	{%r5405, %r5406}, [%rd6];
	// inline asm
	prmt.b32 %r5294, %r5406, %r5405, %r6;
	// inline asm
	st.local.u32 	[%rd8], %r5294;
	ld.local.u32 	%r5299, [%rd6];
	ld.local.u32 	%r5300, [%rd5+12];
	// inline asm
	prmt.b32 %r5298, %r5299, %r5300, %r6;
	// inline asm
	st.local.u32 	[%rd7+12], %r5298;
	ld.local.v2.u32 	{%r5407, %r5408}, [%rd5+8];
	// inline asm
	prmt.b32 %r5302, %r5408, %r5407, %r6;
	// inline asm
	st.local.u32 	[%rd7+8], %r5302;
	ld.local.u32 	%r5307, [%rd5+8];
	ld.local.u32 	%r5308, [%rd5+4];
	// inline asm
	prmt.b32 %r5306, %r5307, %r5308, %r6;
	// inline asm
	st.local.u32 	[%rd7+4], %r5306;
	ld.local.v2.u32 	{%r5409, %r5410}, [%rd5];
	// inline asm
	prmt.b32 %r5310, %r5410, %r5409, %r6;
	// inline asm
	st.local.u32 	[%rd7], %r5310;
	ld.local.u32 	%r5315, [%rd5];
	ld.local.u32 	%r5316, [%rd4+12];
	// inline asm
	prmt.b32 %r5314, %r5315, %r5316, %r6;
	// inline asm
	st.local.u32 	[%rd6+12], %r5314;
	ld.local.v2.u32 	{%r5411, %r5412}, [%rd4+8];
	// inline asm
	prmt.b32 %r5318, %r5412, %r5411, %r6;
	// inline asm
	st.local.u32 	[%rd6+8], %r5318;
	ld.local.u32 	%r5323, [%rd4+8];
	ld.local.u32 	%r5324, [%rd4+4];
	// inline asm
	prmt.b32 %r5322, %r5323, %r5324, %r6;
	// inline asm
	st.local.u32 	[%rd6+4], %r5322;
	ld.local.v2.u32 	{%r5413, %r5414}, [%rd4];
	// inline asm
	prmt.b32 %r5326, %r5414, %r5413, %r6;
	// inline asm
	st.local.u32 	[%rd6], %r5326;
	ld.local.u32 	%r5331, [%rd4];
	ld.local.u32 	%r5332, [%rd3+12];
	// inline asm
	prmt.b32 %r5330, %r5331, %r5332, %r6;
	// inline asm
	st.local.u32 	[%rd5+12], %r5330;
	ld.local.v2.u32 	{%r5415, %r5416}, [%rd3+8];
	// inline asm
	prmt.b32 %r5334, %r5416, %r5415, %r6;
	// inline asm
	st.local.u32 	[%rd5+8], %r5334;
	ld.local.u32 	%r5339, [%rd3+8];
	ld.local.u32 	%r5340, [%rd3+4];
	// inline asm
	prmt.b32 %r5338, %r5339, %r5340, %r6;
	// inline asm
	st.local.u32 	[%rd5+4], %r5338;
	ld.local.v2.u32 	{%r5417, %r5418}, [%rd3];
	// inline asm
	prmt.b32 %r5342, %r5418, %r5417, %r6;
	// inline asm
	st.local.u32 	[%rd5], %r5342;
	ld.local.u32 	%r5347, [%rd3];
	ld.local.u32 	%r5348, [%rd2+12];
	// inline asm
	prmt.b32 %r5346, %r5347, %r5348, %r6;
	// inline asm
	st.local.u32 	[%rd4+12], %r5346;
	ld.local.v2.u32 	{%r5419, %r5420}, [%rd2+8];
	// inline asm
	prmt.b32 %r5350, %r5420, %r5419, %r6;
	// inline asm
	st.local.u32 	[%rd4+8], %r5350;
	ld.local.u32 	%r5355, [%rd2+8];
	ld.local.u32 	%r5356, [%rd2+4];
	// inline asm
	prmt.b32 %r5354, %r5355, %r5356, %r6;
	// inline asm
	st.local.u32 	[%rd4+4], %r5354;
	ld.local.v2.u32 	{%r5421, %r5422}, [%rd2];
	// inline asm
	prmt.b32 %r5358, %r5422, %r5421, %r6;
	// inline asm
	st.local.u32 	[%rd4], %r5358;
	ld.local.u32 	%r5363, [%rd2];
	// inline asm
	prmt.b32 %r5362, %r5363, %r8913, %r6;
	// inline asm
	st.local.v4.u32 	[%rd3], {%r8913, %r8913, %r8913, %r5362};
	st.local.v2.u32 	[%rd2+8], {%r8913, %r8913};
	mov.u64 	%rd100, 0;
	st.local.u64 	[%rd2], %rd100;

BB2_81:
	mov.u32 	%r8922, %r8913;
	mov.u32 	%r8923, %r8913;
	mov.u32 	%r8924, %r8913;
	mov.u32 	%r8925, %r8913;

BB2_82:
	mov.u32 	%r8926, %r8913;
	mov.u32 	%r8927, %r8913;
	mov.u32 	%r8928, %r8913;
	mov.u32 	%r8929, %r8913;

BB2_83:
	mov.u32 	%r8930, %r8913;
	mov.u32 	%r8931, %r8913;
	mov.u32 	%r8932, %r8913;
	mov.u32 	%r8933, %r8913;

BB2_84:
	mov.u32 	%r8934, %r8913;
	mov.u32 	%r8935, %r8913;
	mov.u32 	%r8936, %r8913;
	mov.u32 	%r8937, %r8913;

BB2_85:
	mov.u32 	%r8938, %r8913;
	mov.u32 	%r8939, %r8913;
	mov.u32 	%r8940, %r8913;
	mov.u32 	%r8941, %r8913;

BB2_86:
	mov.u32 	%r8942, %r8913;
	mov.u32 	%r8943, %r8913;
	mov.u32 	%r8944, %r8913;
	mov.u32 	%r8945, %r8913;
	bra.uni 	BB2_91;

BB2_50:
	setp.eq.s32	%p18, %r991, 23;
	@%p18 bra 	BB2_51;
	bra.uni 	BB2_89;

BB2_51:
	mov.u32 	%r8913, 0;
	// inline asm
	prmt.b32 %r8934, %r8913, %r989, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2487, %r2488}, [%rd9+8];
	// inline asm
	prmt.b32 %r8935, %r2488, %r2487, %r6;
	// inline asm
	ld.local.u32 	%r2355, [%rd9+8];
	ld.local.u32 	%r2356, [%rd9+4];
	// inline asm
	prmt.b32 %r8936, %r2355, %r2356, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2489, %r2490}, [%rd9];
	// inline asm
	prmt.b32 %r8937, %r2490, %r2489, %r6;
	// inline asm
	ld.local.u32 	%r2363, [%rd9];
	ld.local.u32 	%r2364, [%rd8+12];
	// inline asm
	prmt.b32 %r8930, %r2363, %r2364, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2491, %r2492}, [%rd8+8];
	// inline asm
	prmt.b32 %r8931, %r2492, %r2491, %r6;
	// inline asm
	ld.local.u32 	%r2371, [%rd8+8];
	ld.local.u32 	%r2372, [%rd8+4];
	// inline asm
	prmt.b32 %r8932, %r2371, %r2372, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2493, %r2494}, [%rd8];
	// inline asm
	prmt.b32 %r8933, %r2494, %r2493, %r6;
	// inline asm
	ld.local.u32 	%r2379, [%rd8];
	ld.local.u32 	%r2380, [%rd7+12];
	// inline asm
	prmt.b32 %r8926, %r2379, %r2380, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2495, %r2496}, [%rd7+8];
	// inline asm
	prmt.b32 %r8927, %r2496, %r2495, %r6;
	// inline asm
	ld.local.u32 	%r2387, [%rd7+8];
	ld.local.u32 	%r2388, [%rd7+4];
	// inline asm
	prmt.b32 %r8928, %r2387, %r2388, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2497, %r2498}, [%rd7];
	// inline asm
	prmt.b32 %r8929, %r2498, %r2497, %r6;
	// inline asm
	ld.local.u32 	%r2395, [%rd7];
	ld.local.u32 	%r2396, [%rd6+12];
	// inline asm
	prmt.b32 %r8922, %r2395, %r2396, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2499, %r2500}, [%rd6+8];
	// inline asm
	prmt.b32 %r8923, %r2500, %r2499, %r6;
	// inline asm
	ld.local.u32 	%r2403, [%rd6+8];
	ld.local.u32 	%r2404, [%rd6+4];
	// inline asm
	prmt.b32 %r8924, %r2403, %r2404, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2501, %r2502}, [%rd6];
	// inline asm
	prmt.b32 %r8925, %r2502, %r2501, %r6;
	// inline asm
	ld.local.u32 	%r2411, [%rd6];
	ld.local.u32 	%r2412, [%rd5+12];
	// inline asm
	prmt.b32 %r8918, %r2411, %r2412, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2503, %r2504}, [%rd5+8];
	// inline asm
	prmt.b32 %r8919, %r2504, %r2503, %r6;
	// inline asm
	ld.local.u32 	%r2419, [%rd5+8];
	ld.local.u32 	%r2420, [%rd5+4];
	// inline asm
	prmt.b32 %r8920, %r2419, %r2420, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2505, %r2506}, [%rd5];
	// inline asm
	prmt.b32 %r8921, %r2506, %r2505, %r6;
	// inline asm
	ld.local.u32 	%r2427, [%rd5];
	ld.local.u32 	%r2428, [%rd4+12];
	// inline asm
	prmt.b32 %r8914, %r2427, %r2428, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2507, %r2508}, [%rd4+8];
	// inline asm
	prmt.b32 %r8915, %r2508, %r2507, %r6;
	// inline asm
	ld.local.u32 	%r2435, [%rd4+8];
	ld.local.u32 	%r2436, [%rd4+4];
	// inline asm
	prmt.b32 %r8916, %r2435, %r2436, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2509, %r2510}, [%rd4];
	// inline asm
	prmt.b32 %r8917, %r2510, %r2509, %r6;
	// inline asm
	ld.local.u32 	%r2443, [%rd4];
	ld.local.u32 	%r2444, [%rd3+12];
	// inline asm
	prmt.b32 %r2442, %r2443, %r2444, %r6;
	// inline asm
	st.local.u32 	[%rd9+12], %r2442;
	ld.local.v2.u32 	{%r2511, %r2512}, [%rd3+8];
	// inline asm
	prmt.b32 %r2446, %r2512, %r2511, %r6;
	// inline asm
	st.local.u32 	[%rd9+8], %r2446;
	ld.local.u32 	%r2451, [%rd3+8];
	ld.local.u32 	%r2452, [%rd3+4];
	// inline asm
	prmt.b32 %r2450, %r2451, %r2452, %r6;
	// inline asm
	st.local.u32 	[%rd9+4], %r2450;
	ld.local.v2.u32 	{%r2513, %r2514}, [%rd3];
	// inline asm
	prmt.b32 %r2454, %r2514, %r2513, %r6;
	// inline asm
	st.local.u32 	[%rd9], %r2454;
	ld.local.u32 	%r2459, [%rd3];
	ld.local.u32 	%r2460, [%rd2+12];
	// inline asm
	prmt.b32 %r2458, %r2459, %r2460, %r6;
	// inline asm
	st.local.u32 	[%rd8+12], %r2458;
	ld.local.v2.u32 	{%r2515, %r2516}, [%rd2+8];
	// inline asm
	prmt.b32 %r2462, %r2516, %r2515, %r6;
	// inline asm
	st.local.u32 	[%rd8+8], %r2462;
	ld.local.u32 	%r2467, [%rd2+8];
	ld.local.u32 	%r2468, [%rd2+4];
	// inline asm
	prmt.b32 %r2466, %r2467, %r2468, %r6;
	// inline asm
	st.local.u32 	[%rd8+4], %r2466;
	ld.local.v2.u32 	{%r2517, %r2518}, [%rd2];
	// inline asm
	prmt.b32 %r2470, %r2518, %r2517, %r6;
	// inline asm
	st.local.u32 	[%rd8], %r2470;
	ld.local.u32 	%r2475, [%rd2];
	// inline asm
	prmt.b32 %r2474, %r2475, %r8913, %r6;
	// inline asm
	st.local.v4.u32 	[%rd7], {%r8913, %r8913, %r8913, %r2474};
	st.local.v4.u32 	[%rd6], {%r8913, %r8913, %r8913, %r8913};
	st.local.v4.u32 	[%rd5], {%r8913, %r8913, %r8913, %r8913};
	st.local.v4.u32 	[%rd4], {%r8913, %r8913, %r8913, %r8913};
	st.local.v4.u32 	[%rd3], {%r8913, %r8913, %r8913, %r8913};
	st.local.v2.u32 	[%rd2+8], {%r8913, %r8913};
	mov.u64 	%rd84, 0;
	st.local.u64 	[%rd2], %rd84;
	bra.uni 	BB2_85;

BB2_34:
	setp.eq.s32	%p30, %r991, 15;
	@%p30 bra 	BB2_35;
	bra.uni 	BB2_89;

BB2_35:
	mov.u32 	%r8913, 0;
	// inline asm
	prmt.b32 %r8926, %r8913, %r989, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3907, %r3908}, [%rd9+8];
	// inline asm
	prmt.b32 %r8927, %r3908, %r3907, %r6;
	// inline asm
	ld.local.u32 	%r3767, [%rd9+8];
	ld.local.u32 	%r3768, [%rd9+4];
	// inline asm
	prmt.b32 %r8928, %r3767, %r3768, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3909, %r3910}, [%rd9];
	// inline asm
	prmt.b32 %r8929, %r3910, %r3909, %r6;
	// inline asm
	ld.local.u32 	%r3775, [%rd9];
	ld.local.u32 	%r3776, [%rd8+12];
	// inline asm
	prmt.b32 %r8922, %r3775, %r3776, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3911, %r3912}, [%rd8+8];
	// inline asm
	prmt.b32 %r8923, %r3912, %r3911, %r6;
	// inline asm
	ld.local.u32 	%r3783, [%rd8+8];
	ld.local.u32 	%r3784, [%rd8+4];
	// inline asm
	prmt.b32 %r8924, %r3783, %r3784, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3913, %r3914}, [%rd8];
	// inline asm
	prmt.b32 %r8925, %r3914, %r3913, %r6;
	// inline asm
	ld.local.u32 	%r3791, [%rd8];
	ld.local.u32 	%r3792, [%rd7+12];
	// inline asm
	prmt.b32 %r8918, %r3791, %r3792, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3915, %r3916}, [%rd7+8];
	// inline asm
	prmt.b32 %r8919, %r3916, %r3915, %r6;
	// inline asm
	ld.local.u32 	%r3799, [%rd7+8];
	ld.local.u32 	%r3800, [%rd7+4];
	// inline asm
	prmt.b32 %r8920, %r3799, %r3800, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3917, %r3918}, [%rd7];
	// inline asm
	prmt.b32 %r8921, %r3918, %r3917, %r6;
	// inline asm
	ld.local.u32 	%r3807, [%rd7];
	ld.local.u32 	%r3808, [%rd6+12];
	// inline asm
	prmt.b32 %r8914, %r3807, %r3808, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3919, %r3920}, [%rd6+8];
	// inline asm
	prmt.b32 %r8915, %r3920, %r3919, %r6;
	// inline asm
	ld.local.u32 	%r3815, [%rd6+8];
	ld.local.u32 	%r3816, [%rd6+4];
	// inline asm
	prmt.b32 %r8916, %r3815, %r3816, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3921, %r3922}, [%rd6];
	// inline asm
	prmt.b32 %r8917, %r3922, %r3921, %r6;
	// inline asm
	ld.local.u32 	%r3823, [%rd6];
	ld.local.u32 	%r3824, [%rd5+12];
	// inline asm
	prmt.b32 %r3822, %r3823, %r3824, %r6;
	// inline asm
	st.local.u32 	[%rd9+12], %r3822;
	ld.local.v2.u32 	{%r3923, %r3924}, [%rd5+8];
	// inline asm
	prmt.b32 %r3826, %r3924, %r3923, %r6;
	// inline asm
	st.local.u32 	[%rd9+8], %r3826;
	ld.local.u32 	%r3831, [%rd5+8];
	ld.local.u32 	%r3832, [%rd5+4];
	// inline asm
	prmt.b32 %r3830, %r3831, %r3832, %r6;
	// inline asm
	st.local.u32 	[%rd9+4], %r3830;
	ld.local.v2.u32 	{%r3925, %r3926}, [%rd5];
	// inline asm
	prmt.b32 %r3834, %r3926, %r3925, %r6;
	// inline asm
	st.local.u32 	[%rd9], %r3834;
	ld.local.u32 	%r3839, [%rd5];
	ld.local.u32 	%r3840, [%rd4+12];
	// inline asm
	prmt.b32 %r3838, %r3839, %r3840, %r6;
	// inline asm
	st.local.u32 	[%rd8+12], %r3838;
	ld.local.v2.u32 	{%r3927, %r3928}, [%rd4+8];
	// inline asm
	prmt.b32 %r3842, %r3928, %r3927, %r6;
	// inline asm
	st.local.u32 	[%rd8+8], %r3842;
	ld.local.u32 	%r3847, [%rd4+8];
	ld.local.u32 	%r3848, [%rd4+4];
	// inline asm
	prmt.b32 %r3846, %r3847, %r3848, %r6;
	// inline asm
	st.local.u32 	[%rd8+4], %r3846;
	ld.local.v2.u32 	{%r3929, %r3930}, [%rd4];
	// inline asm
	prmt.b32 %r3850, %r3930, %r3929, %r6;
	// inline asm
	st.local.u32 	[%rd8], %r3850;
	ld.local.u32 	%r3855, [%rd4];
	ld.local.u32 	%r3856, [%rd3+12];
	// inline asm
	prmt.b32 %r3854, %r3855, %r3856, %r6;
	// inline asm
	st.local.u32 	[%rd7+12], %r3854;
	ld.local.v2.u32 	{%r3931, %r3932}, [%rd3+8];
	// inline asm
	prmt.b32 %r3858, %r3932, %r3931, %r6;
	// inline asm
	st.local.u32 	[%rd7+8], %r3858;
	ld.local.u32 	%r3863, [%rd3+8];
	ld.local.u32 	%r3864, [%rd3+4];
	// inline asm
	prmt.b32 %r3862, %r3863, %r3864, %r6;
	// inline asm
	st.local.u32 	[%rd7+4], %r3862;
	ld.local.v2.u32 	{%r3933, %r3934}, [%rd3];
	// inline asm
	prmt.b32 %r3866, %r3934, %r3933, %r6;
	// inline asm
	st.local.u32 	[%rd7], %r3866;
	ld.local.u32 	%r3871, [%rd3];
	ld.local.u32 	%r3872, [%rd2+12];
	// inline asm
	prmt.b32 %r3870, %r3871, %r3872, %r6;
	// inline asm
	st.local.u32 	[%rd6+12], %r3870;
	ld.local.v2.u32 	{%r3935, %r3936}, [%rd2+8];
	// inline asm
	prmt.b32 %r3874, %r3936, %r3935, %r6;
	// inline asm
	st.local.u32 	[%rd6+8], %r3874;
	ld.local.u32 	%r3879, [%rd2+8];
	ld.local.u32 	%r3880, [%rd2+4];
	// inline asm
	prmt.b32 %r3878, %r3879, %r3880, %r6;
	// inline asm
	st.local.u32 	[%rd6+4], %r3878;
	ld.local.v2.u32 	{%r3937, %r3938}, [%rd2];
	// inline asm
	prmt.b32 %r3882, %r3938, %r3937, %r6;
	// inline asm
	st.local.u32 	[%rd6], %r3882;
	ld.local.u32 	%r3887, [%rd2];
	// inline asm
	prmt.b32 %r3886, %r3887, %r8913, %r6;
	// inline asm
	st.local.v4.u32 	[%rd5], {%r8913, %r8913, %r8913, %r3886};
	st.local.v4.u32 	[%rd4], {%r8913, %r8913, %r8913, %r8913};
	st.local.v4.u32 	[%rd3], {%r8913, %r8913, %r8913, %r8913};
	st.local.v2.u32 	[%rd2+8], {%r8913, %r8913};
	mov.u64 	%rd92, 0;
	st.local.u64 	[%rd2], %rd92;
	bra.uni 	BB2_83;

BB2_65:
	setp.ne.s32	%p7, %r991, 31;
	@%p7 bra 	BB2_89;

	// inline asm
	prmt.b32 %r8942, %r8913, %r989, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1131, %r1132}, [%rd9+8];
	// inline asm
	prmt.b32 %r8943, %r1132, %r1131, %r6;
	// inline asm
	ld.local.u32 	%r1007, [%rd9+8];
	ld.local.u32 	%r1008, [%rd9+4];
	// inline asm
	prmt.b32 %r8944, %r1007, %r1008, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1133, %r1134}, [%rd9];
	// inline asm
	prmt.b32 %r8945, %r1134, %r1133, %r6;
	// inline asm
	ld.local.u32 	%r1015, [%rd9];
	ld.local.u32 	%r1016, [%rd8+12];
	// inline asm
	prmt.b32 %r8938, %r1015, %r1016, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1135, %r1136}, [%rd8+8];
	// inline asm
	prmt.b32 %r8939, %r1136, %r1135, %r6;
	// inline asm
	ld.local.u32 	%r1023, [%rd8+8];
	ld.local.u32 	%r1024, [%rd8+4];
	// inline asm
	prmt.b32 %r8940, %r1023, %r1024, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1137, %r1138}, [%rd8];
	// inline asm
	prmt.b32 %r8941, %r1138, %r1137, %r6;
	// inline asm
	ld.local.u32 	%r1031, [%rd8];
	ld.local.u32 	%r1032, [%rd7+12];
	// inline asm
	prmt.b32 %r8934, %r1031, %r1032, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1139, %r1140}, [%rd7+8];
	// inline asm
	prmt.b32 %r8935, %r1140, %r1139, %r6;
	// inline asm
	ld.local.u32 	%r1039, [%rd7+8];
	ld.local.u32 	%r1040, [%rd7+4];
	// inline asm
	prmt.b32 %r8936, %r1039, %r1040, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1141, %r1142}, [%rd7];
	// inline asm
	prmt.b32 %r8937, %r1142, %r1141, %r6;
	// inline asm
	ld.local.u32 	%r1047, [%rd7];
	ld.local.u32 	%r1048, [%rd6+12];
	// inline asm
	prmt.b32 %r8930, %r1047, %r1048, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1143, %r1144}, [%rd6+8];
	// inline asm
	prmt.b32 %r8931, %r1144, %r1143, %r6;
	// inline asm
	ld.local.u32 	%r1055, [%rd6+8];
	ld.local.u32 	%r1056, [%rd6+4];
	// inline asm
	prmt.b32 %r8932, %r1055, %r1056, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1145, %r1146}, [%rd6];
	// inline asm
	prmt.b32 %r8933, %r1146, %r1145, %r6;
	// inline asm
	ld.local.u32 	%r1063, [%rd6];
	ld.local.u32 	%r1064, [%rd5+12];
	// inline asm
	prmt.b32 %r8926, %r1063, %r1064, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1147, %r1148}, [%rd5+8];
	// inline asm
	prmt.b32 %r8927, %r1148, %r1147, %r6;
	// inline asm
	ld.local.u32 	%r1071, [%rd5+8];
	ld.local.u32 	%r1072, [%rd5+4];
	// inline asm
	prmt.b32 %r8928, %r1071, %r1072, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1149, %r1150}, [%rd5];
	// inline asm
	prmt.b32 %r8929, %r1150, %r1149, %r6;
	// inline asm
	ld.local.u32 	%r1079, [%rd5];
	ld.local.u32 	%r1080, [%rd4+12];
	// inline asm
	prmt.b32 %r8922, %r1079, %r1080, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1151, %r1152}, [%rd4+8];
	// inline asm
	prmt.b32 %r8923, %r1152, %r1151, %r6;
	// inline asm
	ld.local.u32 	%r1087, [%rd4+8];
	ld.local.u32 	%r1088, [%rd4+4];
	// inline asm
	prmt.b32 %r8924, %r1087, %r1088, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1153, %r1154}, [%rd4];
	// inline asm
	prmt.b32 %r8925, %r1154, %r1153, %r6;
	// inline asm
	ld.local.u32 	%r1095, [%rd4];
	ld.local.u32 	%r1096, [%rd3+12];
	// inline asm
	prmt.b32 %r8918, %r1095, %r1096, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1155, %r1156}, [%rd3+8];
	// inline asm
	prmt.b32 %r8919, %r1156, %r1155, %r6;
	// inline asm
	ld.local.u32 	%r1103, [%rd3+8];
	ld.local.u32 	%r1104, [%rd3+4];
	// inline asm
	prmt.b32 %r8920, %r1103, %r1104, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1157, %r1158}, [%rd3];
	// inline asm
	prmt.b32 %r8921, %r1158, %r1157, %r6;
	// inline asm
	ld.local.u32 	%r1111, [%rd3];
	ld.local.u32 	%r1112, [%rd2+12];
	// inline asm
	prmt.b32 %r8914, %r1111, %r1112, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1159, %r1160}, [%rd2+8];
	// inline asm
	prmt.b32 %r8915, %r1160, %r1159, %r6;
	// inline asm
	ld.local.u32 	%r1119, [%rd2+8];
	ld.local.u32 	%r1120, [%rd2+4];
	// inline asm
	prmt.b32 %r8916, %r1119, %r1120, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1161, %r1162}, [%rd2];
	// inline asm
	prmt.b32 %r8917, %r1162, %r1161, %r6;
	// inline asm
	ld.local.u32 	%r1127, [%rd2];
	// inline asm
	prmt.b32 %r1126, %r1127, %r8913, %r6;
	// inline asm
	st.local.v4.u32 	[%rd9], {%r8913, %r8913, %r8913, %r1126};
	st.local.v4.u32 	[%rd8], {%r8913, %r8913, %r8913, %r8913};
	st.local.v4.u32 	[%rd7], {%r8913, %r8913, %r8913, %r8913};
	st.local.v4.u32 	[%rd6], {%r8913, %r8913, %r8913, %r8913};
	st.local.v4.u32 	[%rd5], {%r8913, %r8913, %r8913, %r8913};
	st.local.v4.u32 	[%rd4], {%r8913, %r8913, %r8913, %r8913};
	st.local.v4.u32 	[%rd3], {%r8913, %r8913, %r8913, %r8913};
	st.local.v2.u32 	[%rd2+8], {%r8913, %r8913};
	mov.u64 	%rd76, 0;
	st.local.u64 	[%rd2], %rd76;
	bra.uni 	BB2_91;

BB2_89:
	ld.local.u32 	%r8913, [%rd2];
	mov.u32 	%r8914, 0;
	mov.u32 	%r8915, %r8914;
	mov.u32 	%r8916, %r8914;
	mov.u32 	%r8917, %r8914;

BB2_90:
	mov.u32 	%r8918, %r8914;
	mov.u32 	%r8919, %r8914;
	mov.u32 	%r8920, %r8914;
	mov.u32 	%r8921, %r8914;
	mov.u32 	%r8922, %r8914;
	mov.u32 	%r8923, %r8914;
	mov.u32 	%r8924, %r8914;
	mov.u32 	%r8925, %r8914;
	mov.u32 	%r8926, %r8914;
	mov.u32 	%r8927, %r8914;
	mov.u32 	%r8928, %r8914;
	mov.u32 	%r8929, %r8914;
	mov.u32 	%r8930, %r8914;
	mov.u32 	%r8931, %r8914;
	mov.u32 	%r8932, %r8914;
	mov.u32 	%r8933, %r8914;
	mov.u32 	%r8934, %r8914;
	mov.u32 	%r8935, %r8914;
	mov.u32 	%r8936, %r8914;
	mov.u32 	%r8937, %r8914;
	mov.u32 	%r8938, %r8914;
	mov.u32 	%r8939, %r8914;
	mov.u32 	%r8940, %r8914;
	mov.u32 	%r8941, %r8914;
	mov.u32 	%r8942, %r8914;
	mov.u32 	%r8943, %r8914;
	mov.u32 	%r8944, %r8914;
	mov.u32 	%r8945, %r8914;
	bra.uni 	BB2_91;

BB2_2:
	add.u64 	%rd2963, %SP, 112;
	add.u64 	%rd2962, %SP, 96;
	add.u64 	%rd2961, %SP, 80;
	add.u64 	%rd2960, %SP, 64;
	add.u64 	%rd2959, %SP, 48;
	add.u64 	%rd2958, %SP, 32;
	add.u64 	%rd2957, %SP, 16;
	add.u64 	%rd2956, %SP, 0;
	ld.param.u64 	%rd2955, [sha512_update_global_utf16le_swap_param_0];
	ld.param.u32 	%r8910, [sha512_update_global_utf16le_swap_param_2];
	mov.u32 	%r731, 0;
	mov.u32 	%r728, 29554;
	// inline asm
	prmt.b32 %r605, %r4, %r731, %r728;
	// inline asm
	st.local.u32 	[%rd9+12], %r605;
	ld.local.u32 	%r610, [%rd5+12];
	mov.u32 	%r732, 29040;
	// inline asm
	prmt.b32 %r609, %r610, %r731, %r732;
	// inline asm
	st.local.u32 	[%rd9+8], %r609;
	ld.local.u32 	%r614, [%rd5+8];
	// inline asm
	prmt.b32 %r613, %r614, %r731, %r728;
	// inline asm
	st.local.u32 	[%rd9+4], %r613;
	ld.local.u32 	%r618, [%rd5+8];
	// inline asm
	prmt.b32 %r617, %r618, %r731, %r732;
	// inline asm
	st.local.u32 	[%rd9], %r617;
	ld.local.u32 	%r622, [%rd5+4];
	// inline asm
	prmt.b32 %r621, %r622, %r731, %r728;
	// inline asm
	st.local.u32 	[%rd8+12], %r621;
	ld.local.u32 	%r626, [%rd5+4];
	// inline asm
	prmt.b32 %r625, %r626, %r731, %r732;
	// inline asm
	st.local.u32 	[%rd8+8], %r625;
	ld.local.u32 	%r630, [%rd5];
	// inline asm
	prmt.b32 %r629, %r630, %r731, %r728;
	// inline asm
	st.local.u32 	[%rd8+4], %r629;
	ld.local.u32 	%r634, [%rd5];
	// inline asm
	prmt.b32 %r633, %r634, %r731, %r732;
	// inline asm
	st.local.u32 	[%rd8], %r633;
	ld.local.u32 	%r638, [%rd4+12];
	// inline asm
	prmt.b32 %r637, %r638, %r731, %r728;
	// inline asm
	st.local.u32 	[%rd7+12], %r637;
	ld.local.u32 	%r642, [%rd4+12];
	// inline asm
	prmt.b32 %r641, %r642, %r731, %r732;
	// inline asm
	st.local.u32 	[%rd7+8], %r641;
	ld.local.u32 	%r646, [%rd4+8];
	// inline asm
	prmt.b32 %r645, %r646, %r731, %r728;
	// inline asm
	st.local.u32 	[%rd7+4], %r645;
	ld.local.u32 	%r650, [%rd4+8];
	// inline asm
	prmt.b32 %r649, %r650, %r731, %r732;
	// inline asm
	st.local.u32 	[%rd7], %r649;
	ld.local.u32 	%r654, [%rd4+4];
	// inline asm
	prmt.b32 %r653, %r654, %r731, %r728;
	// inline asm
	st.local.u32 	[%rd6+12], %r653;
	ld.local.u32 	%r658, [%rd4+4];
	// inline asm
	prmt.b32 %r657, %r658, %r731, %r732;
	// inline asm
	st.local.u32 	[%rd6+8], %r657;
	ld.local.u32 	%r662, [%rd4];
	// inline asm
	prmt.b32 %r661, %r662, %r731, %r728;
	// inline asm
	st.local.u32 	[%rd6+4], %r661;
	ld.local.u32 	%r666, [%rd4];
	// inline asm
	prmt.b32 %r665, %r666, %r731, %r732;
	// inline asm
	st.local.u32 	[%rd6], %r665;
	ld.local.u32 	%r670, [%rd3+12];
	// inline asm
	prmt.b32 %r669, %r670, %r731, %r728;
	// inline asm
	st.local.u32 	[%rd5+12], %r669;
	ld.local.u32 	%r674, [%rd3+12];
	// inline asm
	prmt.b32 %r673, %r674, %r731, %r732;
	// inline asm
	st.local.u32 	[%rd5+8], %r673;
	ld.local.u32 	%r678, [%rd3+8];
	// inline asm
	prmt.b32 %r677, %r678, %r731, %r728;
	// inline asm
	st.local.u32 	[%rd5+4], %r677;
	ld.local.u32 	%r682, [%rd3+8];
	// inline asm
	prmt.b32 %r681, %r682, %r731, %r732;
	// inline asm
	st.local.u32 	[%rd5], %r681;
	ld.local.u32 	%r686, [%rd3+4];
	// inline asm
	prmt.b32 %r685, %r686, %r731, %r728;
	// inline asm
	st.local.u32 	[%rd4+12], %r685;
	ld.local.u32 	%r690, [%rd3+4];
	// inline asm
	prmt.b32 %r689, %r690, %r731, %r732;
	// inline asm
	st.local.u32 	[%rd4+8], %r689;
	ld.local.u32 	%r694, [%rd3];
	// inline asm
	prmt.b32 %r693, %r694, %r731, %r728;
	// inline asm
	st.local.u32 	[%rd4+4], %r693;
	ld.local.u32 	%r698, [%rd3];
	// inline asm
	prmt.b32 %r697, %r698, %r731, %r732;
	// inline asm
	st.local.u32 	[%rd4], %r697;
	ld.local.u32 	%r702, [%rd2+12];
	// inline asm
	prmt.b32 %r701, %r702, %r731, %r728;
	// inline asm
	st.local.u32 	[%rd3+12], %r701;
	ld.local.u32 	%r706, [%rd2+12];
	// inline asm
	prmt.b32 %r705, %r706, %r731, %r732;
	// inline asm
	st.local.u32 	[%rd3+8], %r705;
	ld.local.u32 	%r710, [%rd2+8];
	// inline asm
	prmt.b32 %r709, %r710, %r731, %r728;
	// inline asm
	st.local.u32 	[%rd3+4], %r709;
	ld.local.u32 	%r714, [%rd2+8];
	// inline asm
	prmt.b32 %r713, %r714, %r731, %r732;
	// inline asm
	st.local.u32 	[%rd3], %r713;
	ld.local.u32 	%r718, [%rd2+4];
	// inline asm
	prmt.b32 %r717, %r718, %r731, %r728;
	// inline asm
	st.local.u32 	[%rd2+12], %r717;
	ld.local.u32 	%r722, [%rd2+4];
	// inline asm
	prmt.b32 %r721, %r722, %r731, %r732;
	// inline asm
	st.local.u32 	[%rd2+8], %r721;
	ld.local.u32 	%r726, [%rd2];
	// inline asm
	prmt.b32 %r725, %r726, %r731, %r728;
	// inline asm
	st.local.u32 	[%rd2+4], %r725;
	ld.local.u32 	%r730, [%rd2];
	// inline asm
	prmt.b32 %r729, %r730, %r731, %r732;
	// inline asm
	st.local.u32 	[%rd2], %r729;
	// inline asm
	prmt.b32 %r733, %r729, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd2], %r733;
	ld.local.u32 	%r736, [%rd2+4];
	// inline asm
	prmt.b32 %r735, %r736, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd2+4], %r735;
	ld.local.u32 	%r738, [%rd2+8];
	// inline asm
	prmt.b32 %r737, %r738, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd2+8], %r737;
	ld.local.u32 	%r740, [%rd2+12];
	// inline asm
	prmt.b32 %r739, %r740, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd2+12], %r739;
	ld.local.u32 	%r742, [%rd3];
	// inline asm
	prmt.b32 %r741, %r742, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd3], %r741;
	ld.local.u32 	%r744, [%rd3+4];
	// inline asm
	prmt.b32 %r743, %r744, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd3+4], %r743;
	ld.local.u32 	%r746, [%rd3+8];
	// inline asm
	prmt.b32 %r745, %r746, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd3+8], %r745;
	ld.local.u32 	%r748, [%rd3+12];
	// inline asm
	prmt.b32 %r747, %r748, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd3+12], %r747;
	ld.local.u32 	%r750, [%rd4];
	// inline asm
	prmt.b32 %r749, %r750, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd4], %r749;
	ld.local.u32 	%r752, [%rd4+4];
	// inline asm
	prmt.b32 %r751, %r752, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd4+4], %r751;
	ld.local.u32 	%r754, [%rd4+8];
	// inline asm
	prmt.b32 %r753, %r754, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd4+8], %r753;
	ld.local.u32 	%r756, [%rd4+12];
	// inline asm
	prmt.b32 %r755, %r756, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd4+12], %r755;
	ld.local.u32 	%r758, [%rd5];
	// inline asm
	prmt.b32 %r757, %r758, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd5], %r757;
	ld.local.u32 	%r760, [%rd5+4];
	// inline asm
	prmt.b32 %r759, %r760, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd5+4], %r759;
	ld.local.u32 	%r762, [%rd5+8];
	// inline asm
	prmt.b32 %r761, %r762, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd5+8], %r761;
	ld.local.u32 	%r764, [%rd5+12];
	// inline asm
	prmt.b32 %r763, %r764, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd5+12], %r763;
	ld.local.u32 	%r766, [%rd6];
	// inline asm
	prmt.b32 %r765, %r766, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd6], %r765;
	ld.local.u32 	%r768, [%rd6+4];
	// inline asm
	prmt.b32 %r767, %r768, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd6+4], %r767;
	ld.local.u32 	%r770, [%rd6+8];
	// inline asm
	prmt.b32 %r769, %r770, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd6+8], %r769;
	ld.local.u32 	%r772, [%rd6+12];
	// inline asm
	prmt.b32 %r771, %r772, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd6+12], %r771;
	ld.local.u32 	%r774, [%rd7];
	// inline asm
	prmt.b32 %r773, %r774, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd7], %r773;
	ld.local.u32 	%r776, [%rd7+4];
	// inline asm
	prmt.b32 %r775, %r776, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd7+4], %r775;
	ld.local.u32 	%r778, [%rd7+8];
	// inline asm
	prmt.b32 %r777, %r778, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd7+8], %r777;
	ld.local.u32 	%r780, [%rd7+12];
	// inline asm
	prmt.b32 %r779, %r780, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd7+12], %r779;
	ld.local.u32 	%r782, [%rd8];
	// inline asm
	prmt.b32 %r781, %r782, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd8], %r781;
	ld.local.u32 	%r784, [%rd8+4];
	// inline asm
	prmt.b32 %r783, %r784, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd8+4], %r783;
	ld.local.u32 	%r786, [%rd8+8];
	// inline asm
	prmt.b32 %r785, %r786, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd8+8], %r785;
	ld.local.u32 	%r788, [%rd8+12];
	// inline asm
	prmt.b32 %r787, %r788, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd8+12], %r787;
	ld.local.u32 	%r790, [%rd9];
	// inline asm
	prmt.b32 %r789, %r790, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd9], %r789;
	ld.local.u32 	%r792, [%rd9+4];
	// inline asm
	prmt.b32 %r791, %r792, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd9+4], %r791;
	ld.local.u32 	%r794, [%rd9+8];
	// inline asm
	prmt.b32 %r793, %r794, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd9+8], %r793;
	ld.local.u32 	%r796, [%rd9+12];
	// inline asm
	prmt.b32 %r795, %r796, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd9+12], %r795;
	sub.s32 	%r797, %r8910, %r8911;
	shl.b32 	%r798, %r797, 1;
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd2955;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd2956;
	.param .b64 param2;
	st.param.b64	[param2+0], %rd2957;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd2958;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd2959;
	.param .b64 param5;
	st.param.b64	[param5+0], %rd2960;
	.param .b64 param6;
	st.param.b64	[param6+0], %rd2961;
	.param .b64 param7;
	st.param.b64	[param7+0], %rd2962;
	.param .b64 param8;
	st.param.b64	[param8+0], %rd2963;
	.param .b32 param9;
	st.param.b32	[param9+0], %r798;
	call.uni 
	sha512_update_128, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7, 
	param8, 
	param9
	);
	
	//{
	}// Callseq End 0
	ret;
}

.func sha512_final(
	.param .b64 sha512_final_param_0
)
{
	.reg .pred 	%p<193>;
	.reg .b32 	%r<4304>;
	.reg .b64 	%rd<5930>;


	ld.param.u64 	%rd291, [sha512_final_param_0];
	cvta.to.local.u64 	%rd1, %rd291;
	ld.local.u32 	%r1, [%rd1+192];
	and.b32  	%r2, %r1, 127;
	add.s64 	%rd2, %rd1, 64;
	add.s64 	%rd3, %rd1, 80;
	add.s64 	%rd4, %rd1, 96;
	add.s64 	%rd5, %rd1, 112;
	add.s64 	%rd6, %rd1, 128;
	add.s64 	%rd7, %rd1, 144;
	add.s64 	%rd8, %rd1, 160;
	add.s64 	%rd9, %rd1, 176;
	xor.b32  	%r63, %r2, 3;
	setp.gt.s32	%p1, %r63, 63;
	@%p1 bra 	BB3_128;

	setp.gt.s32	%p97, %r63, 31;
	@%p97 bra 	BB3_65;

	setp.gt.s32	%p145, %r63, 15;
	@%p145 bra 	BB3_34;

	setp.gt.s32	%p169, %r63, 7;
	@%p169 bra 	BB3_19;

	setp.gt.s32	%p181, %r63, 3;
	@%p181 bra 	BB3_12;

	setp.gt.s32	%p187, %r63, 1;
	@%p187 bra 	BB3_9;

	setp.eq.s32	%p190, %r63, 0;
	@%p190 bra 	BB3_318;
	bra.uni 	BB3_7;

BB3_318:
	ld.local.u32 	%r318, [%rd2];
	or.b32  	%r319, %r318, 128;
	st.local.u32 	[%rd2], %r319;
	bra.uni 	BB3_319;

BB3_128:
	setp.gt.s32	%p2, %r63, 95;
	@%p2 bra 	BB3_192;

	setp.gt.s32	%p50, %r63, 79;
	@%p50 bra 	BB3_161;

	setp.gt.s32	%p74, %r63, 71;
	@%p74 bra 	BB3_146;

	setp.gt.s32	%p86, %r63, 67;
	@%p86 bra 	BB3_139;

	setp.gt.s32	%p92, %r63, 65;
	@%p92 bra 	BB3_136;

	setp.eq.s32	%p95, %r63, 64;
	@%p95 bra 	BB3_286;
	bra.uni 	BB3_134;

BB3_286:
	ld.local.u32 	%r190, [%rd6];
	or.b32  	%r191, %r190, 128;
	st.local.u32 	[%rd6], %r191;
	bra.uni 	BB3_319;

BB3_65:
	setp.gt.s32	%p98, %r63, 47;
	@%p98 bra 	BB3_97;

	setp.gt.s32	%p122, %r63, 39;
	@%p122 bra 	BB3_82;

	setp.gt.s32	%p134, %r63, 35;
	@%p134 bra 	BB3_75;

	setp.gt.s32	%p140, %r63, 33;
	@%p140 bra 	BB3_72;

	setp.eq.s32	%p143, %r63, 32;
	@%p143 bra 	BB3_302;
	bra.uni 	BB3_70;

BB3_302:
	ld.local.u32 	%r254, [%rd4];
	or.b32  	%r255, %r254, 128;
	st.local.u32 	[%rd4], %r255;
	bra.uni 	BB3_319;

BB3_192:
	setp.gt.s32	%p3, %r63, 111;
	@%p3 bra 	BB3_224;

	setp.gt.s32	%p27, %r63, 103;
	@%p27 bra 	BB3_209;

	setp.gt.s32	%p39, %r63, 99;
	@%p39 bra 	BB3_202;

	setp.gt.s32	%p45, %r63, 97;
	@%p45 bra 	BB3_199;

	setp.eq.s32	%p48, %r63, 96;
	@%p48 bra 	BB3_270;
	bra.uni 	BB3_197;

BB3_270:
	ld.local.u32 	%r126, [%rd8];
	or.b32  	%r127, %r126, 128;
	st.local.u32 	[%rd8], %r127;
	bra.uni 	BB3_319;

BB3_34:
	setp.gt.s32	%p146, %r63, 23;
	@%p146 bra 	BB3_50;

	setp.gt.s32	%p158, %r63, 19;
	@%p158 bra 	BB3_43;

	setp.gt.s32	%p164, %r63, 17;
	@%p164 bra 	BB3_40;

	setp.eq.s32	%p167, %r63, 16;
	@%p167 bra 	BB3_310;
	bra.uni 	BB3_38;

BB3_310:
	ld.local.u32 	%r286, [%rd3];
	or.b32  	%r287, %r286, 128;
	st.local.u32 	[%rd3], %r287;
	bra.uni 	BB3_319;

BB3_161:
	setp.gt.s32	%p51, %r63, 87;
	@%p51 bra 	BB3_177;

	setp.gt.s32	%p63, %r63, 83;
	@%p63 bra 	BB3_170;

	setp.gt.s32	%p69, %r63, 81;
	@%p69 bra 	BB3_167;

	setp.eq.s32	%p72, %r63, 80;
	@%p72 bra 	BB3_278;
	bra.uni 	BB3_165;

BB3_278:
	ld.local.u32 	%r158, [%rd7];
	or.b32  	%r159, %r158, 128;
	st.local.u32 	[%rd7], %r159;
	bra.uni 	BB3_319;

BB3_97:
	setp.gt.s32	%p99, %r63, 55;
	@%p99 bra 	BB3_113;

	setp.gt.s32	%p111, %r63, 51;
	@%p111 bra 	BB3_106;

	setp.gt.s32	%p117, %r63, 49;
	@%p117 bra 	BB3_103;

	setp.eq.s32	%p120, %r63, 48;
	@%p120 bra 	BB3_294;
	bra.uni 	BB3_101;

BB3_294:
	ld.local.u32 	%r222, [%rd5];
	or.b32  	%r223, %r222, 128;
	st.local.u32 	[%rd5], %r223;
	bra.uni 	BB3_319;

BB3_224:
	setp.gt.s32	%p4, %r63, 119;
	@%p4 bra 	BB3_240;

	setp.gt.s32	%p16, %r63, 115;
	@%p16 bra 	BB3_233;

	setp.gt.s32	%p22, %r63, 113;
	@%p22 bra 	BB3_230;

	setp.eq.s32	%p25, %r63, 112;
	@%p25 bra 	BB3_262;
	bra.uni 	BB3_228;

BB3_262:
	ld.local.u32 	%r94, [%rd9];
	or.b32  	%r95, %r94, 128;
	st.local.u32 	[%rd9], %r95;
	bra.uni 	BB3_319;

BB3_19:
	setp.gt.s32	%p170, %r63, 11;
	@%p170 bra 	BB3_27;

	setp.gt.s32	%p176, %r63, 9;
	@%p176 bra 	BB3_24;

	setp.eq.s32	%p179, %r63, 8;
	@%p179 bra 	BB3_314;
	bra.uni 	BB3_22;

BB3_314:
	ld.local.u32 	%r302, [%rd1+72];
	or.b32  	%r303, %r302, 128;
	st.local.u32 	[%rd1+72], %r303;
	bra.uni 	BB3_319;

BB3_146:
	setp.gt.s32	%p75, %r63, 75;
	@%p75 bra 	BB3_154;

	setp.gt.s32	%p81, %r63, 73;
	@%p81 bra 	BB3_151;

	setp.eq.s32	%p84, %r63, 72;
	@%p84 bra 	BB3_282;
	bra.uni 	BB3_149;

BB3_282:
	ld.local.u32 	%r174, [%rd1+136];
	or.b32  	%r175, %r174, 128;
	st.local.u32 	[%rd1+136], %r175;
	bra.uni 	BB3_319;

BB3_82:
	setp.gt.s32	%p123, %r63, 43;
	@%p123 bra 	BB3_90;

	setp.gt.s32	%p129, %r63, 41;
	@%p129 bra 	BB3_87;

	setp.eq.s32	%p132, %r63, 40;
	@%p132 bra 	BB3_298;
	bra.uni 	BB3_85;

BB3_298:
	ld.local.u32 	%r238, [%rd1+104];
	or.b32  	%r239, %r238, 128;
	st.local.u32 	[%rd1+104], %r239;
	bra.uni 	BB3_319;

BB3_209:
	setp.gt.s32	%p28, %r63, 107;
	@%p28 bra 	BB3_217;

	setp.gt.s32	%p34, %r63, 105;
	@%p34 bra 	BB3_214;

	setp.eq.s32	%p37, %r63, 104;
	@%p37 bra 	BB3_266;
	bra.uni 	BB3_212;

BB3_266:
	ld.local.u32 	%r110, [%rd1+168];
	or.b32  	%r111, %r110, 128;
	st.local.u32 	[%rd1+168], %r111;
	bra.uni 	BB3_319;

BB3_50:
	setp.gt.s32	%p147, %r63, 27;
	@%p147 bra 	BB3_58;

	setp.gt.s32	%p153, %r63, 25;
	@%p153 bra 	BB3_55;

	setp.eq.s32	%p156, %r63, 24;
	@%p156 bra 	BB3_306;
	bra.uni 	BB3_53;

BB3_306:
	ld.local.u32 	%r270, [%rd1+88];
	or.b32  	%r271, %r270, 128;
	st.local.u32 	[%rd1+88], %r271;
	bra.uni 	BB3_319;

BB3_177:
	setp.gt.s32	%p52, %r63, 91;
	@%p52 bra 	BB3_185;

	setp.gt.s32	%p58, %r63, 89;
	@%p58 bra 	BB3_182;

	setp.eq.s32	%p61, %r63, 88;
	@%p61 bra 	BB3_274;
	bra.uni 	BB3_180;

BB3_274:
	ld.local.u32 	%r142, [%rd1+152];
	or.b32  	%r143, %r142, 128;
	st.local.u32 	[%rd1+152], %r143;
	bra.uni 	BB3_319;

BB3_113:
	setp.gt.s32	%p100, %r63, 59;
	@%p100 bra 	BB3_121;

	setp.gt.s32	%p106, %r63, 57;
	@%p106 bra 	BB3_118;

	setp.eq.s32	%p109, %r63, 56;
	@%p109 bra 	BB3_290;
	bra.uni 	BB3_116;

BB3_290:
	ld.local.u32 	%r206, [%rd1+120];
	or.b32  	%r207, %r206, 128;
	st.local.u32 	[%rd1+120], %r207;
	bra.uni 	BB3_319;

BB3_240:
	setp.gt.s32	%p5, %r63, 123;
	@%p5 bra 	BB3_248;

	setp.gt.s32	%p11, %r63, 121;
	@%p11 bra 	BB3_245;

	setp.eq.s32	%p14, %r63, 120;
	@%p14 bra 	BB3_258;
	bra.uni 	BB3_243;

BB3_258:
	ld.local.u32 	%r78, [%rd1+184];
	or.b32  	%r79, %r78, 128;
	st.local.u32 	[%rd1+184], %r79;
	bra.uni 	BB3_319;

BB3_12:
	setp.gt.s32	%p182, %r63, 5;
	@%p182 bra 	BB3_16;

	setp.eq.s32	%p185, %r63, 4;
	@%p185 bra 	BB3_316;
	bra.uni 	BB3_14;

BB3_316:
	ld.local.u32 	%r310, [%rd1+68];
	or.b32  	%r311, %r310, 128;
	st.local.u32 	[%rd1+68], %r311;
	bra.uni 	BB3_319;

BB3_139:
	setp.gt.s32	%p87, %r63, 69;
	@%p87 bra 	BB3_143;

	setp.eq.s32	%p90, %r63, 68;
	@%p90 bra 	BB3_284;
	bra.uni 	BB3_141;

BB3_284:
	ld.local.u32 	%r182, [%rd1+132];
	or.b32  	%r183, %r182, 128;
	st.local.u32 	[%rd1+132], %r183;
	bra.uni 	BB3_319;

BB3_75:
	setp.gt.s32	%p135, %r63, 37;
	@%p135 bra 	BB3_79;

	setp.eq.s32	%p138, %r63, 36;
	@%p138 bra 	BB3_300;
	bra.uni 	BB3_77;

BB3_300:
	ld.local.u32 	%r246, [%rd1+100];
	or.b32  	%r247, %r246, 128;
	st.local.u32 	[%rd1+100], %r247;
	bra.uni 	BB3_319;

BB3_202:
	setp.gt.s32	%p40, %r63, 101;
	@%p40 bra 	BB3_206;

	setp.eq.s32	%p43, %r63, 100;
	@%p43 bra 	BB3_268;
	bra.uni 	BB3_204;

BB3_268:
	ld.local.u32 	%r118, [%rd1+164];
	or.b32  	%r119, %r118, 128;
	st.local.u32 	[%rd1+164], %r119;
	bra.uni 	BB3_319;

BB3_43:
	setp.gt.s32	%p159, %r63, 21;
	@%p159 bra 	BB3_47;

	setp.eq.s32	%p162, %r63, 20;
	@%p162 bra 	BB3_308;
	bra.uni 	BB3_45;

BB3_308:
	ld.local.u32 	%r278, [%rd1+84];
	or.b32  	%r279, %r278, 128;
	st.local.u32 	[%rd1+84], %r279;
	bra.uni 	BB3_319;

BB3_170:
	setp.gt.s32	%p64, %r63, 85;
	@%p64 bra 	BB3_174;

	setp.eq.s32	%p67, %r63, 84;
	@%p67 bra 	BB3_276;
	bra.uni 	BB3_172;

BB3_276:
	ld.local.u32 	%r150, [%rd1+148];
	or.b32  	%r151, %r150, 128;
	st.local.u32 	[%rd1+148], %r151;
	bra.uni 	BB3_319;

BB3_106:
	setp.gt.s32	%p112, %r63, 53;
	@%p112 bra 	BB3_110;

	setp.eq.s32	%p115, %r63, 52;
	@%p115 bra 	BB3_292;
	bra.uni 	BB3_108;

BB3_292:
	ld.local.u32 	%r214, [%rd1+116];
	or.b32  	%r215, %r214, 128;
	st.local.u32 	[%rd1+116], %r215;
	bra.uni 	BB3_319;

BB3_233:
	setp.gt.s32	%p17, %r63, 117;
	@%p17 bra 	BB3_237;

	setp.eq.s32	%p20, %r63, 116;
	@%p20 bra 	BB3_260;
	bra.uni 	BB3_235;

BB3_260:
	ld.local.u32 	%r86, [%rd1+180];
	or.b32  	%r87, %r86, 128;
	st.local.u32 	[%rd1+180], %r87;
	bra.uni 	BB3_319;

BB3_27:
	setp.gt.s32	%p171, %r63, 13;
	@%p171 bra 	BB3_31;

	setp.eq.s32	%p174, %r63, 12;
	@%p174 bra 	BB3_312;
	bra.uni 	BB3_29;

BB3_312:
	ld.local.u32 	%r294, [%rd1+76];
	or.b32  	%r295, %r294, 128;
	st.local.u32 	[%rd1+76], %r295;
	bra.uni 	BB3_319;

BB3_154:
	setp.gt.s32	%p76, %r63, 77;
	@%p76 bra 	BB3_158;

	setp.eq.s32	%p79, %r63, 76;
	@%p79 bra 	BB3_280;
	bra.uni 	BB3_156;

BB3_280:
	ld.local.u32 	%r166, [%rd1+140];
	or.b32  	%r167, %r166, 128;
	st.local.u32 	[%rd1+140], %r167;
	bra.uni 	BB3_319;

BB3_90:
	setp.gt.s32	%p124, %r63, 45;
	@%p124 bra 	BB3_94;

	setp.eq.s32	%p127, %r63, 44;
	@%p127 bra 	BB3_296;
	bra.uni 	BB3_92;

BB3_296:
	ld.local.u32 	%r230, [%rd1+108];
	or.b32  	%r231, %r230, 128;
	st.local.u32 	[%rd1+108], %r231;
	bra.uni 	BB3_319;

BB3_217:
	setp.gt.s32	%p29, %r63, 109;
	@%p29 bra 	BB3_221;

	setp.eq.s32	%p32, %r63, 108;
	@%p32 bra 	BB3_264;
	bra.uni 	BB3_219;

BB3_264:
	ld.local.u32 	%r102, [%rd1+172];
	or.b32  	%r103, %r102, 128;
	st.local.u32 	[%rd1+172], %r103;
	bra.uni 	BB3_319;

BB3_58:
	setp.gt.s32	%p148, %r63, 29;
	@%p148 bra 	BB3_62;

	setp.eq.s32	%p151, %r63, 28;
	@%p151 bra 	BB3_304;
	bra.uni 	BB3_60;

BB3_304:
	ld.local.u32 	%r262, [%rd1+92];
	or.b32  	%r263, %r262, 128;
	st.local.u32 	[%rd1+92], %r263;
	bra.uni 	BB3_319;

BB3_185:
	setp.gt.s32	%p53, %r63, 93;
	@%p53 bra 	BB3_189;

	setp.eq.s32	%p56, %r63, 92;
	@%p56 bra 	BB3_272;
	bra.uni 	BB3_187;

BB3_272:
	ld.local.u32 	%r134, [%rd1+156];
	or.b32  	%r135, %r134, 128;
	st.local.u32 	[%rd1+156], %r135;
	bra.uni 	BB3_319;

BB3_121:
	setp.gt.s32	%p101, %r63, 61;
	@%p101 bra 	BB3_125;

	setp.eq.s32	%p104, %r63, 60;
	@%p104 bra 	BB3_288;
	bra.uni 	BB3_123;

BB3_288:
	ld.local.u32 	%r198, [%rd1+124];
	or.b32  	%r199, %r198, 128;
	st.local.u32 	[%rd1+124], %r199;
	bra.uni 	BB3_319;

BB3_248:
	setp.gt.s32	%p6, %r63, 125;
	@%p6 bra 	BB3_252;

	setp.eq.s32	%p9, %r63, 124;
	@%p9 bra 	BB3_256;
	bra.uni 	BB3_250;

BB3_256:
	ld.local.u32 	%r70, [%rd1+188];
	or.b32  	%r71, %r70, 128;
	st.local.u32 	[%rd1+188], %r71;
	bra.uni 	BB3_319;

BB3_9:
	setp.eq.s32	%p188, %r63, 2;
	@%p188 bra 	BB3_317;
	bra.uni 	BB3_10;

BB3_317:
	ld.local.u32 	%r314, [%rd2];
	or.b32  	%r315, %r314, 8388608;
	st.local.u32 	[%rd2], %r315;
	bra.uni 	BB3_319;

BB3_136:
	setp.eq.s32	%p93, %r63, 66;
	@%p93 bra 	BB3_285;
	bra.uni 	BB3_137;

BB3_285:
	ld.local.u32 	%r186, [%rd6];
	or.b32  	%r187, %r186, 8388608;
	st.local.u32 	[%rd6], %r187;
	bra.uni 	BB3_319;

BB3_72:
	setp.eq.s32	%p141, %r63, 34;
	@%p141 bra 	BB3_301;
	bra.uni 	BB3_73;

BB3_301:
	ld.local.u32 	%r250, [%rd4];
	or.b32  	%r251, %r250, 8388608;
	st.local.u32 	[%rd4], %r251;
	bra.uni 	BB3_319;

BB3_199:
	setp.eq.s32	%p46, %r63, 98;
	@%p46 bra 	BB3_269;
	bra.uni 	BB3_200;

BB3_269:
	ld.local.u32 	%r122, [%rd8];
	or.b32  	%r123, %r122, 8388608;
	st.local.u32 	[%rd8], %r123;
	bra.uni 	BB3_319;

BB3_40:
	setp.eq.s32	%p165, %r63, 18;
	@%p165 bra 	BB3_309;
	bra.uni 	BB3_41;

BB3_309:
	ld.local.u32 	%r282, [%rd3];
	or.b32  	%r283, %r282, 8388608;
	st.local.u32 	[%rd3], %r283;
	bra.uni 	BB3_319;

BB3_167:
	setp.eq.s32	%p70, %r63, 82;
	@%p70 bra 	BB3_277;
	bra.uni 	BB3_168;

BB3_277:
	ld.local.u32 	%r154, [%rd7];
	or.b32  	%r155, %r154, 8388608;
	st.local.u32 	[%rd7], %r155;
	bra.uni 	BB3_319;

BB3_103:
	setp.eq.s32	%p118, %r63, 50;
	@%p118 bra 	BB3_293;
	bra.uni 	BB3_104;

BB3_293:
	ld.local.u32 	%r218, [%rd5];
	or.b32  	%r219, %r218, 8388608;
	st.local.u32 	[%rd5], %r219;
	bra.uni 	BB3_319;

BB3_230:
	setp.eq.s32	%p23, %r63, 114;
	@%p23 bra 	BB3_261;
	bra.uni 	BB3_231;

BB3_261:
	ld.local.u32 	%r90, [%rd9];
	or.b32  	%r91, %r90, 8388608;
	st.local.u32 	[%rd9], %r91;
	bra.uni 	BB3_319;

BB3_24:
	setp.eq.s32	%p177, %r63, 10;
	@%p177 bra 	BB3_313;
	bra.uni 	BB3_25;

BB3_313:
	ld.local.u32 	%r298, [%rd1+72];
	or.b32  	%r299, %r298, 8388608;
	st.local.u32 	[%rd1+72], %r299;
	bra.uni 	BB3_319;

BB3_151:
	setp.eq.s32	%p82, %r63, 74;
	@%p82 bra 	BB3_281;
	bra.uni 	BB3_152;

BB3_281:
	ld.local.u32 	%r170, [%rd1+136];
	or.b32  	%r171, %r170, 8388608;
	st.local.u32 	[%rd1+136], %r171;
	bra.uni 	BB3_319;

BB3_87:
	setp.eq.s32	%p130, %r63, 42;
	@%p130 bra 	BB3_297;
	bra.uni 	BB3_88;

BB3_297:
	ld.local.u32 	%r234, [%rd1+104];
	or.b32  	%r235, %r234, 8388608;
	st.local.u32 	[%rd1+104], %r235;
	bra.uni 	BB3_319;

BB3_214:
	setp.eq.s32	%p35, %r63, 106;
	@%p35 bra 	BB3_265;
	bra.uni 	BB3_215;

BB3_265:
	ld.local.u32 	%r106, [%rd1+168];
	or.b32  	%r107, %r106, 8388608;
	st.local.u32 	[%rd1+168], %r107;
	bra.uni 	BB3_319;

BB3_55:
	setp.eq.s32	%p154, %r63, 26;
	@%p154 bra 	BB3_305;
	bra.uni 	BB3_56;

BB3_305:
	ld.local.u32 	%r266, [%rd1+88];
	or.b32  	%r267, %r266, 8388608;
	st.local.u32 	[%rd1+88], %r267;
	bra.uni 	BB3_319;

BB3_182:
	setp.eq.s32	%p59, %r63, 90;
	@%p59 bra 	BB3_273;
	bra.uni 	BB3_183;

BB3_273:
	ld.local.u32 	%r138, [%rd1+152];
	or.b32  	%r139, %r138, 8388608;
	st.local.u32 	[%rd1+152], %r139;
	bra.uni 	BB3_319;

BB3_118:
	setp.eq.s32	%p107, %r63, 58;
	@%p107 bra 	BB3_289;
	bra.uni 	BB3_119;

BB3_289:
	ld.local.u32 	%r202, [%rd1+120];
	or.b32  	%r203, %r202, 8388608;
	st.local.u32 	[%rd1+120], %r203;
	bra.uni 	BB3_319;

BB3_245:
	setp.eq.s32	%p12, %r63, 122;
	@%p12 bra 	BB3_257;
	bra.uni 	BB3_246;

BB3_257:
	ld.local.u32 	%r74, [%rd1+184];
	or.b32  	%r75, %r74, 8388608;
	st.local.u32 	[%rd1+184], %r75;
	bra.uni 	BB3_319;

BB3_16:
	setp.eq.s32	%p183, %r63, 6;
	@%p183 bra 	BB3_315;
	bra.uni 	BB3_17;

BB3_315:
	ld.local.u32 	%r306, [%rd1+68];
	or.b32  	%r307, %r306, 8388608;
	st.local.u32 	[%rd1+68], %r307;
	bra.uni 	BB3_319;

BB3_143:
	setp.eq.s32	%p88, %r63, 70;
	@%p88 bra 	BB3_283;
	bra.uni 	BB3_144;

BB3_283:
	ld.local.u32 	%r178, [%rd1+132];
	or.b32  	%r179, %r178, 8388608;
	st.local.u32 	[%rd1+132], %r179;
	bra.uni 	BB3_319;

BB3_79:
	setp.eq.s32	%p136, %r63, 38;
	@%p136 bra 	BB3_299;
	bra.uni 	BB3_80;

BB3_299:
	ld.local.u32 	%r242, [%rd1+100];
	or.b32  	%r243, %r242, 8388608;
	st.local.u32 	[%rd1+100], %r243;
	bra.uni 	BB3_319;

BB3_206:
	setp.eq.s32	%p41, %r63, 102;
	@%p41 bra 	BB3_267;
	bra.uni 	BB3_207;

BB3_267:
	ld.local.u32 	%r114, [%rd1+164];
	or.b32  	%r115, %r114, 8388608;
	st.local.u32 	[%rd1+164], %r115;
	bra.uni 	BB3_319;

BB3_47:
	setp.eq.s32	%p160, %r63, 22;
	@%p160 bra 	BB3_307;
	bra.uni 	BB3_48;

BB3_307:
	ld.local.u32 	%r274, [%rd1+84];
	or.b32  	%r275, %r274, 8388608;
	st.local.u32 	[%rd1+84], %r275;
	bra.uni 	BB3_319;

BB3_174:
	setp.eq.s32	%p65, %r63, 86;
	@%p65 bra 	BB3_275;
	bra.uni 	BB3_175;

BB3_275:
	ld.local.u32 	%r146, [%rd1+148];
	or.b32  	%r147, %r146, 8388608;
	st.local.u32 	[%rd1+148], %r147;
	bra.uni 	BB3_319;

BB3_110:
	setp.eq.s32	%p113, %r63, 54;
	@%p113 bra 	BB3_291;
	bra.uni 	BB3_111;

BB3_291:
	ld.local.u32 	%r210, [%rd1+116];
	or.b32  	%r211, %r210, 8388608;
	st.local.u32 	[%rd1+116], %r211;
	bra.uni 	BB3_319;

BB3_237:
	setp.eq.s32	%p18, %r63, 118;
	@%p18 bra 	BB3_259;
	bra.uni 	BB3_238;

BB3_259:
	ld.local.u32 	%r82, [%rd1+180];
	or.b32  	%r83, %r82, 8388608;
	st.local.u32 	[%rd1+180], %r83;
	bra.uni 	BB3_319;

BB3_31:
	setp.eq.s32	%p172, %r63, 14;
	@%p172 bra 	BB3_311;
	bra.uni 	BB3_32;

BB3_311:
	ld.local.u32 	%r290, [%rd1+76];
	or.b32  	%r291, %r290, 8388608;
	st.local.u32 	[%rd1+76], %r291;
	bra.uni 	BB3_319;

BB3_158:
	setp.eq.s32	%p77, %r63, 78;
	@%p77 bra 	BB3_279;
	bra.uni 	BB3_159;

BB3_279:
	ld.local.u32 	%r162, [%rd1+140];
	or.b32  	%r163, %r162, 8388608;
	st.local.u32 	[%rd1+140], %r163;
	bra.uni 	BB3_319;

BB3_94:
	setp.eq.s32	%p125, %r63, 46;
	@%p125 bra 	BB3_295;
	bra.uni 	BB3_95;

BB3_295:
	ld.local.u32 	%r226, [%rd1+108];
	or.b32  	%r227, %r226, 8388608;
	st.local.u32 	[%rd1+108], %r227;
	bra.uni 	BB3_319;

BB3_221:
	setp.eq.s32	%p30, %r63, 110;
	@%p30 bra 	BB3_263;
	bra.uni 	BB3_222;

BB3_263:
	ld.local.u32 	%r98, [%rd1+172];
	or.b32  	%r99, %r98, 8388608;
	st.local.u32 	[%rd1+172], %r99;
	bra.uni 	BB3_319;

BB3_62:
	setp.eq.s32	%p149, %r63, 30;
	@%p149 bra 	BB3_303;
	bra.uni 	BB3_63;

BB3_303:
	ld.local.u32 	%r258, [%rd1+92];
	or.b32  	%r259, %r258, 8388608;
	st.local.u32 	[%rd1+92], %r259;
	bra.uni 	BB3_319;

BB3_189:
	setp.eq.s32	%p54, %r63, 94;
	@%p54 bra 	BB3_271;
	bra.uni 	BB3_190;

BB3_271:
	ld.local.u32 	%r130, [%rd1+156];
	or.b32  	%r131, %r130, 8388608;
	st.local.u32 	[%rd1+156], %r131;
	bra.uni 	BB3_319;

BB3_125:
	setp.eq.s32	%p102, %r63, 62;
	@%p102 bra 	BB3_287;
	bra.uni 	BB3_126;

BB3_287:
	ld.local.u32 	%r194, [%rd1+124];
	or.b32  	%r195, %r194, 8388608;
	st.local.u32 	[%rd1+124], %r195;
	bra.uni 	BB3_319;

BB3_252:
	setp.eq.s32	%p7, %r63, 126;
	@%p7 bra 	BB3_255;
	bra.uni 	BB3_253;

BB3_255:
	ld.local.u32 	%r66, [%rd1+188];
	or.b32  	%r67, %r66, 8388608;
	st.local.u32 	[%rd1+188], %r67;
	bra.uni 	BB3_319;

BB3_7:
	setp.eq.s32	%p191, %r63, 1;
	@%p191 bra 	BB3_8;
	bra.uni 	BB3_319;

BB3_8:
	ld.local.u32 	%r316, [%rd2];
	or.b32  	%r317, %r316, 32768;
	st.local.u32 	[%rd2], %r317;
	bra.uni 	BB3_319;

BB3_134:
	setp.eq.s32	%p96, %r63, 65;
	@%p96 bra 	BB3_135;
	bra.uni 	BB3_319;

BB3_135:
	ld.local.u32 	%r188, [%rd6];
	or.b32  	%r189, %r188, 32768;
	st.local.u32 	[%rd6], %r189;
	bra.uni 	BB3_319;

BB3_70:
	setp.eq.s32	%p144, %r63, 33;
	@%p144 bra 	BB3_71;
	bra.uni 	BB3_319;

BB3_71:
	ld.local.u32 	%r252, [%rd4];
	or.b32  	%r253, %r252, 32768;
	st.local.u32 	[%rd4], %r253;
	bra.uni 	BB3_319;

BB3_197:
	setp.eq.s32	%p49, %r63, 97;
	@%p49 bra 	BB3_198;
	bra.uni 	BB3_319;

BB3_198:
	ld.local.u32 	%r124, [%rd8];
	or.b32  	%r125, %r124, 32768;
	st.local.u32 	[%rd8], %r125;
	bra.uni 	BB3_319;

BB3_38:
	setp.eq.s32	%p168, %r63, 17;
	@%p168 bra 	BB3_39;
	bra.uni 	BB3_319;

BB3_39:
	ld.local.u32 	%r284, [%rd3];
	or.b32  	%r285, %r284, 32768;
	st.local.u32 	[%rd3], %r285;
	bra.uni 	BB3_319;

BB3_165:
	setp.eq.s32	%p73, %r63, 81;
	@%p73 bra 	BB3_166;
	bra.uni 	BB3_319;

BB3_166:
	ld.local.u32 	%r156, [%rd7];
	or.b32  	%r157, %r156, 32768;
	st.local.u32 	[%rd7], %r157;
	bra.uni 	BB3_319;

BB3_101:
	setp.eq.s32	%p121, %r63, 49;
	@%p121 bra 	BB3_102;
	bra.uni 	BB3_319;

BB3_102:
	ld.local.u32 	%r220, [%rd5];
	or.b32  	%r221, %r220, 32768;
	st.local.u32 	[%rd5], %r221;
	bra.uni 	BB3_319;

BB3_228:
	setp.eq.s32	%p26, %r63, 113;
	@%p26 bra 	BB3_229;
	bra.uni 	BB3_319;

BB3_229:
	ld.local.u32 	%r92, [%rd9];
	or.b32  	%r93, %r92, 32768;
	st.local.u32 	[%rd9], %r93;
	bra.uni 	BB3_319;

BB3_22:
	setp.eq.s32	%p180, %r63, 9;
	@%p180 bra 	BB3_23;
	bra.uni 	BB3_319;

BB3_23:
	ld.local.u32 	%r300, [%rd1+72];
	or.b32  	%r301, %r300, 32768;
	st.local.u32 	[%rd1+72], %r301;
	bra.uni 	BB3_319;

BB3_149:
	setp.eq.s32	%p85, %r63, 73;
	@%p85 bra 	BB3_150;
	bra.uni 	BB3_319;

BB3_150:
	ld.local.u32 	%r172, [%rd1+136];
	or.b32  	%r173, %r172, 32768;
	st.local.u32 	[%rd1+136], %r173;
	bra.uni 	BB3_319;

BB3_85:
	setp.eq.s32	%p133, %r63, 41;
	@%p133 bra 	BB3_86;
	bra.uni 	BB3_319;

BB3_86:
	ld.local.u32 	%r236, [%rd1+104];
	or.b32  	%r237, %r236, 32768;
	st.local.u32 	[%rd1+104], %r237;
	bra.uni 	BB3_319;

BB3_212:
	setp.eq.s32	%p38, %r63, 105;
	@%p38 bra 	BB3_213;
	bra.uni 	BB3_319;

BB3_213:
	ld.local.u32 	%r108, [%rd1+168];
	or.b32  	%r109, %r108, 32768;
	st.local.u32 	[%rd1+168], %r109;
	bra.uni 	BB3_319;

BB3_53:
	setp.eq.s32	%p157, %r63, 25;
	@%p157 bra 	BB3_54;
	bra.uni 	BB3_319;

BB3_54:
	ld.local.u32 	%r268, [%rd1+88];
	or.b32  	%r269, %r268, 32768;
	st.local.u32 	[%rd1+88], %r269;
	bra.uni 	BB3_319;

BB3_180:
	setp.eq.s32	%p62, %r63, 89;
	@%p62 bra 	BB3_181;
	bra.uni 	BB3_319;

BB3_181:
	ld.local.u32 	%r140, [%rd1+152];
	or.b32  	%r141, %r140, 32768;
	st.local.u32 	[%rd1+152], %r141;
	bra.uni 	BB3_319;

BB3_116:
	setp.eq.s32	%p110, %r63, 57;
	@%p110 bra 	BB3_117;
	bra.uni 	BB3_319;

BB3_117:
	ld.local.u32 	%r204, [%rd1+120];
	or.b32  	%r205, %r204, 32768;
	st.local.u32 	[%rd1+120], %r205;
	bra.uni 	BB3_319;

BB3_243:
	setp.eq.s32	%p15, %r63, 121;
	@%p15 bra 	BB3_244;
	bra.uni 	BB3_319;

BB3_244:
	ld.local.u32 	%r76, [%rd1+184];
	or.b32  	%r77, %r76, 32768;
	st.local.u32 	[%rd1+184], %r77;
	bra.uni 	BB3_319;

BB3_14:
	setp.eq.s32	%p186, %r63, 5;
	@%p186 bra 	BB3_15;
	bra.uni 	BB3_319;

BB3_15:
	ld.local.u32 	%r308, [%rd1+68];
	or.b32  	%r309, %r308, 32768;
	st.local.u32 	[%rd1+68], %r309;
	bra.uni 	BB3_319;

BB3_141:
	setp.eq.s32	%p91, %r63, 69;
	@%p91 bra 	BB3_142;
	bra.uni 	BB3_319;

BB3_142:
	ld.local.u32 	%r180, [%rd1+132];
	or.b32  	%r181, %r180, 32768;
	st.local.u32 	[%rd1+132], %r181;
	bra.uni 	BB3_319;

BB3_77:
	setp.eq.s32	%p139, %r63, 37;
	@%p139 bra 	BB3_78;
	bra.uni 	BB3_319;

BB3_78:
	ld.local.u32 	%r244, [%rd1+100];
	or.b32  	%r245, %r244, 32768;
	st.local.u32 	[%rd1+100], %r245;
	bra.uni 	BB3_319;

BB3_204:
	setp.eq.s32	%p44, %r63, 101;
	@%p44 bra 	BB3_205;
	bra.uni 	BB3_319;

BB3_205:
	ld.local.u32 	%r116, [%rd1+164];
	or.b32  	%r117, %r116, 32768;
	st.local.u32 	[%rd1+164], %r117;
	bra.uni 	BB3_319;

BB3_45:
	setp.eq.s32	%p163, %r63, 21;
	@%p163 bra 	BB3_46;
	bra.uni 	BB3_319;

BB3_46:
	ld.local.u32 	%r276, [%rd1+84];
	or.b32  	%r277, %r276, 32768;
	st.local.u32 	[%rd1+84], %r277;
	bra.uni 	BB3_319;

BB3_172:
	setp.eq.s32	%p68, %r63, 85;
	@%p68 bra 	BB3_173;
	bra.uni 	BB3_319;

BB3_173:
	ld.local.u32 	%r148, [%rd1+148];
	or.b32  	%r149, %r148, 32768;
	st.local.u32 	[%rd1+148], %r149;
	bra.uni 	BB3_319;

BB3_108:
	setp.eq.s32	%p116, %r63, 53;
	@%p116 bra 	BB3_109;
	bra.uni 	BB3_319;

BB3_109:
	ld.local.u32 	%r212, [%rd1+116];
	or.b32  	%r213, %r212, 32768;
	st.local.u32 	[%rd1+116], %r213;
	bra.uni 	BB3_319;

BB3_235:
	setp.eq.s32	%p21, %r63, 117;
	@%p21 bra 	BB3_236;
	bra.uni 	BB3_319;

BB3_236:
	ld.local.u32 	%r84, [%rd1+180];
	or.b32  	%r85, %r84, 32768;
	st.local.u32 	[%rd1+180], %r85;
	bra.uni 	BB3_319;

BB3_29:
	setp.eq.s32	%p175, %r63, 13;
	@%p175 bra 	BB3_30;
	bra.uni 	BB3_319;

BB3_30:
	ld.local.u32 	%r292, [%rd1+76];
	or.b32  	%r293, %r292, 32768;
	st.local.u32 	[%rd1+76], %r293;
	bra.uni 	BB3_319;

BB3_156:
	setp.eq.s32	%p80, %r63, 77;
	@%p80 bra 	BB3_157;
	bra.uni 	BB3_319;

BB3_157:
	ld.local.u32 	%r164, [%rd1+140];
	or.b32  	%r165, %r164, 32768;
	st.local.u32 	[%rd1+140], %r165;
	bra.uni 	BB3_319;

BB3_92:
	setp.eq.s32	%p128, %r63, 45;
	@%p128 bra 	BB3_93;
	bra.uni 	BB3_319;

BB3_93:
	ld.local.u32 	%r228, [%rd1+108];
	or.b32  	%r229, %r228, 32768;
	st.local.u32 	[%rd1+108], %r229;
	bra.uni 	BB3_319;

BB3_219:
	setp.eq.s32	%p33, %r63, 109;
	@%p33 bra 	BB3_220;
	bra.uni 	BB3_319;

BB3_220:
	ld.local.u32 	%r100, [%rd1+172];
	or.b32  	%r101, %r100, 32768;
	st.local.u32 	[%rd1+172], %r101;
	bra.uni 	BB3_319;

BB3_60:
	setp.eq.s32	%p152, %r63, 29;
	@%p152 bra 	BB3_61;
	bra.uni 	BB3_319;

BB3_61:
	ld.local.u32 	%r260, [%rd1+92];
	or.b32  	%r261, %r260, 32768;
	st.local.u32 	[%rd1+92], %r261;
	bra.uni 	BB3_319;

BB3_187:
	setp.eq.s32	%p57, %r63, 93;
	@%p57 bra 	BB3_188;
	bra.uni 	BB3_319;

BB3_188:
	ld.local.u32 	%r132, [%rd1+156];
	or.b32  	%r133, %r132, 32768;
	st.local.u32 	[%rd1+156], %r133;
	bra.uni 	BB3_319;

BB3_123:
	setp.eq.s32	%p105, %r63, 61;
	@%p105 bra 	BB3_124;
	bra.uni 	BB3_319;

BB3_124:
	ld.local.u32 	%r196, [%rd1+124];
	or.b32  	%r197, %r196, 32768;
	st.local.u32 	[%rd1+124], %r197;
	bra.uni 	BB3_319;

BB3_250:
	setp.eq.s32	%p10, %r63, 125;
	@%p10 bra 	BB3_251;
	bra.uni 	BB3_319;

BB3_251:
	ld.local.u32 	%r68, [%rd1+188];
	or.b32  	%r69, %r68, 32768;
	st.local.u32 	[%rd1+188], %r69;
	bra.uni 	BB3_319;

BB3_10:
	setp.eq.s32	%p189, %r63, 3;
	@%p189 bra 	BB3_11;
	bra.uni 	BB3_319;

BB3_11:
	ld.local.u32 	%r312, [%rd2];
	or.b32  	%r313, %r312, -2147483648;
	st.local.u32 	[%rd2], %r313;
	bra.uni 	BB3_319;

BB3_137:
	setp.eq.s32	%p94, %r63, 67;
	@%p94 bra 	BB3_138;
	bra.uni 	BB3_319;

BB3_138:
	ld.local.u32 	%r184, [%rd6];
	or.b32  	%r185, %r184, -2147483648;
	st.local.u32 	[%rd6], %r185;
	bra.uni 	BB3_319;

BB3_73:
	setp.eq.s32	%p142, %r63, 35;
	@%p142 bra 	BB3_74;
	bra.uni 	BB3_319;

BB3_74:
	ld.local.u32 	%r248, [%rd4];
	or.b32  	%r249, %r248, -2147483648;
	st.local.u32 	[%rd4], %r249;
	bra.uni 	BB3_319;

BB3_200:
	setp.eq.s32	%p47, %r63, 99;
	@%p47 bra 	BB3_201;
	bra.uni 	BB3_319;

BB3_201:
	ld.local.u32 	%r120, [%rd8];
	or.b32  	%r121, %r120, -2147483648;
	st.local.u32 	[%rd8], %r121;
	bra.uni 	BB3_319;

BB3_41:
	setp.eq.s32	%p166, %r63, 19;
	@%p166 bra 	BB3_42;
	bra.uni 	BB3_319;

BB3_42:
	ld.local.u32 	%r280, [%rd3];
	or.b32  	%r281, %r280, -2147483648;
	st.local.u32 	[%rd3], %r281;
	bra.uni 	BB3_319;

BB3_168:
	setp.eq.s32	%p71, %r63, 83;
	@%p71 bra 	BB3_169;
	bra.uni 	BB3_319;

BB3_169:
	ld.local.u32 	%r152, [%rd7];
	or.b32  	%r153, %r152, -2147483648;
	st.local.u32 	[%rd7], %r153;
	bra.uni 	BB3_319;

BB3_104:
	setp.eq.s32	%p119, %r63, 51;
	@%p119 bra 	BB3_105;
	bra.uni 	BB3_319;

BB3_105:
	ld.local.u32 	%r216, [%rd5];
	or.b32  	%r217, %r216, -2147483648;
	st.local.u32 	[%rd5], %r217;
	bra.uni 	BB3_319;

BB3_231:
	setp.eq.s32	%p24, %r63, 115;
	@%p24 bra 	BB3_232;
	bra.uni 	BB3_319;

BB3_232:
	ld.local.u32 	%r88, [%rd9];
	or.b32  	%r89, %r88, -2147483648;
	st.local.u32 	[%rd9], %r89;
	bra.uni 	BB3_319;

BB3_25:
	setp.eq.s32	%p178, %r63, 11;
	@%p178 bra 	BB3_26;
	bra.uni 	BB3_319;

BB3_26:
	ld.local.u32 	%r296, [%rd1+72];
	or.b32  	%r297, %r296, -2147483648;
	st.local.u32 	[%rd1+72], %r297;
	bra.uni 	BB3_319;

BB3_152:
	setp.eq.s32	%p83, %r63, 75;
	@%p83 bra 	BB3_153;
	bra.uni 	BB3_319;

BB3_153:
	ld.local.u32 	%r168, [%rd1+136];
	or.b32  	%r169, %r168, -2147483648;
	st.local.u32 	[%rd1+136], %r169;
	bra.uni 	BB3_319;

BB3_88:
	setp.eq.s32	%p131, %r63, 43;
	@%p131 bra 	BB3_89;
	bra.uni 	BB3_319;

BB3_89:
	ld.local.u32 	%r232, [%rd1+104];
	or.b32  	%r233, %r232, -2147483648;
	st.local.u32 	[%rd1+104], %r233;
	bra.uni 	BB3_319;

BB3_215:
	setp.eq.s32	%p36, %r63, 107;
	@%p36 bra 	BB3_216;
	bra.uni 	BB3_319;

BB3_216:
	ld.local.u32 	%r104, [%rd1+168];
	or.b32  	%r105, %r104, -2147483648;
	st.local.u32 	[%rd1+168], %r105;
	bra.uni 	BB3_319;

BB3_56:
	setp.eq.s32	%p155, %r63, 27;
	@%p155 bra 	BB3_57;
	bra.uni 	BB3_319;

BB3_57:
	ld.local.u32 	%r264, [%rd1+88];
	or.b32  	%r265, %r264, -2147483648;
	st.local.u32 	[%rd1+88], %r265;
	bra.uni 	BB3_319;

BB3_183:
	setp.eq.s32	%p60, %r63, 91;
	@%p60 bra 	BB3_184;
	bra.uni 	BB3_319;

BB3_184:
	ld.local.u32 	%r136, [%rd1+152];
	or.b32  	%r137, %r136, -2147483648;
	st.local.u32 	[%rd1+152], %r137;
	bra.uni 	BB3_319;

BB3_119:
	setp.eq.s32	%p108, %r63, 59;
	@%p108 bra 	BB3_120;
	bra.uni 	BB3_319;

BB3_120:
	ld.local.u32 	%r200, [%rd1+120];
	or.b32  	%r201, %r200, -2147483648;
	st.local.u32 	[%rd1+120], %r201;
	bra.uni 	BB3_319;

BB3_246:
	setp.eq.s32	%p13, %r63, 123;
	@%p13 bra 	BB3_247;
	bra.uni 	BB3_319;

BB3_247:
	ld.local.u32 	%r72, [%rd1+184];
	or.b32  	%r73, %r72, -2147483648;
	st.local.u32 	[%rd1+184], %r73;
	bra.uni 	BB3_319;

BB3_17:
	setp.eq.s32	%p184, %r63, 7;
	@%p184 bra 	BB3_18;
	bra.uni 	BB3_319;

BB3_18:
	ld.local.u32 	%r304, [%rd1+68];
	or.b32  	%r305, %r304, -2147483648;
	st.local.u32 	[%rd1+68], %r305;
	bra.uni 	BB3_319;

BB3_144:
	setp.eq.s32	%p89, %r63, 71;
	@%p89 bra 	BB3_145;
	bra.uni 	BB3_319;

BB3_145:
	ld.local.u32 	%r176, [%rd1+132];
	or.b32  	%r177, %r176, -2147483648;
	st.local.u32 	[%rd1+132], %r177;
	bra.uni 	BB3_319;

BB3_80:
	setp.eq.s32	%p137, %r63, 39;
	@%p137 bra 	BB3_81;
	bra.uni 	BB3_319;

BB3_81:
	ld.local.u32 	%r240, [%rd1+100];
	or.b32  	%r241, %r240, -2147483648;
	st.local.u32 	[%rd1+100], %r241;
	bra.uni 	BB3_319;

BB3_207:
	setp.eq.s32	%p42, %r63, 103;
	@%p42 bra 	BB3_208;
	bra.uni 	BB3_319;

BB3_208:
	ld.local.u32 	%r112, [%rd1+164];
	or.b32  	%r113, %r112, -2147483648;
	st.local.u32 	[%rd1+164], %r113;
	bra.uni 	BB3_319;

BB3_48:
	setp.eq.s32	%p161, %r63, 23;
	@%p161 bra 	BB3_49;
	bra.uni 	BB3_319;

BB3_49:
	ld.local.u32 	%r272, [%rd1+84];
	or.b32  	%r273, %r272, -2147483648;
	st.local.u32 	[%rd1+84], %r273;
	bra.uni 	BB3_319;

BB3_175:
	setp.eq.s32	%p66, %r63, 87;
	@%p66 bra 	BB3_176;
	bra.uni 	BB3_319;

BB3_176:
	ld.local.u32 	%r144, [%rd1+148];
	or.b32  	%r145, %r144, -2147483648;
	st.local.u32 	[%rd1+148], %r145;
	bra.uni 	BB3_319;

BB3_111:
	setp.eq.s32	%p114, %r63, 55;
	@%p114 bra 	BB3_112;
	bra.uni 	BB3_319;

BB3_112:
	ld.local.u32 	%r208, [%rd1+116];
	or.b32  	%r209, %r208, -2147483648;
	st.local.u32 	[%rd1+116], %r209;
	bra.uni 	BB3_319;

BB3_238:
	setp.eq.s32	%p19, %r63, 119;
	@%p19 bra 	BB3_239;
	bra.uni 	BB3_319;

BB3_239:
	ld.local.u32 	%r80, [%rd1+180];
	or.b32  	%r81, %r80, -2147483648;
	st.local.u32 	[%rd1+180], %r81;
	bra.uni 	BB3_319;

BB3_32:
	setp.eq.s32	%p173, %r63, 15;
	@%p173 bra 	BB3_33;
	bra.uni 	BB3_319;

BB3_33:
	ld.local.u32 	%r288, [%rd1+76];
	or.b32  	%r289, %r288, -2147483648;
	st.local.u32 	[%rd1+76], %r289;
	bra.uni 	BB3_319;

BB3_159:
	setp.eq.s32	%p78, %r63, 79;
	@%p78 bra 	BB3_160;
	bra.uni 	BB3_319;

BB3_160:
	ld.local.u32 	%r160, [%rd1+140];
	or.b32  	%r161, %r160, -2147483648;
	st.local.u32 	[%rd1+140], %r161;
	bra.uni 	BB3_319;

BB3_95:
	setp.eq.s32	%p126, %r63, 47;
	@%p126 bra 	BB3_96;
	bra.uni 	BB3_319;

BB3_96:
	ld.local.u32 	%r224, [%rd1+108];
	or.b32  	%r225, %r224, -2147483648;
	st.local.u32 	[%rd1+108], %r225;
	bra.uni 	BB3_319;

BB3_222:
	setp.eq.s32	%p31, %r63, 111;
	@%p31 bra 	BB3_223;
	bra.uni 	BB3_319;

BB3_223:
	ld.local.u32 	%r96, [%rd1+172];
	or.b32  	%r97, %r96, -2147483648;
	st.local.u32 	[%rd1+172], %r97;
	bra.uni 	BB3_319;

BB3_63:
	setp.eq.s32	%p150, %r63, 31;
	@%p150 bra 	BB3_64;
	bra.uni 	BB3_319;

BB3_64:
	ld.local.u32 	%r256, [%rd1+92];
	or.b32  	%r257, %r256, -2147483648;
	st.local.u32 	[%rd1+92], %r257;
	bra.uni 	BB3_319;

BB3_190:
	setp.eq.s32	%p55, %r63, 95;
	@%p55 bra 	BB3_191;
	bra.uni 	BB3_319;

BB3_191:
	ld.local.u32 	%r128, [%rd1+156];
	or.b32  	%r129, %r128, -2147483648;
	st.local.u32 	[%rd1+156], %r129;
	bra.uni 	BB3_319;

BB3_126:
	setp.eq.s32	%p103, %r63, 63;
	@%p103 bra 	BB3_127;
	bra.uni 	BB3_319;

BB3_127:
	ld.local.u32 	%r192, [%rd1+124];
	or.b32  	%r193, %r192, -2147483648;
	st.local.u32 	[%rd1+124], %r193;
	bra.uni 	BB3_319;

BB3_253:
	setp.ne.s32	%p8, %r63, 127;
	@%p8 bra 	BB3_319;

	ld.local.u32 	%r64, [%rd1+188];
	or.b32  	%r65, %r64, -2147483648;
	st.local.u32 	[%rd1+188], %r65;

BB3_319:
	setp.gt.u32	%p192, %r2, 111;
	add.s64 	%rd10, %rd1, 8;
	add.s64 	%rd12, %rd1, 72;
	add.s64 	%rd14, %rd1, 88;
	add.s64 	%rd16, %rd1, 104;
	add.s64 	%rd18, %rd1, 120;
	add.s64 	%rd20, %rd1, 136;
	add.s64 	%rd22, %rd1, 152;
	add.s64 	%rd24, %rd1, 168;
	add.s64 	%rd26, %rd1, 184;
	ld.local.u64 	%rd5929, [%rd1];
	ld.local.u64 	%rd5928, [%rd1+8];
	ld.local.u64 	%rd5927, [%rd1+16];
	ld.local.u64 	%rd5926, [%rd1+24];
	ld.local.u64 	%rd5925, [%rd1+32];
	ld.local.u64 	%rd5924, [%rd1+40];
	ld.local.u64 	%rd5923, [%rd1+48];
	ld.local.u64 	%rd5922, [%rd1+56];
	ld.local.u32 	%r4303, [%rd2];
	ld.local.u32 	%r4302, [%rd1+68];
	@%p192 bra 	BB3_321;
	bra.uni 	BB3_320;

BB3_321:
	mov.b64	%rd292, {%r4302, %r4303};
	ld.local.u32 	%r350, [%rd10+64];
	ld.local.u32 	%r351, [%rd12+4];
	mov.b64	%rd293, {%r351, %r350};
	ld.local.u32 	%r352, [%rd3];
	ld.local.u32 	%r353, [%rd3+4];
	mov.b64	%rd294, {%r353, %r352};
	ld.local.u32 	%r354, [%rd10+80];
	ld.local.u32 	%r355, [%rd14+4];
	mov.b64	%rd295, {%r355, %r354};
	ld.local.u32 	%r356, [%rd4];
	ld.local.u32 	%r357, [%rd4+4];
	mov.b64	%rd296, {%r357, %r356};
	ld.local.u32 	%r358, [%rd10+96];
	ld.local.u32 	%r359, [%rd16+4];
	mov.b64	%rd297, {%r359, %r358};
	ld.local.u32 	%r360, [%rd5];
	ld.local.u32 	%r361, [%rd5+4];
	mov.b64	%rd298, {%r361, %r360};
	ld.local.u32 	%r362, [%rd10+112];
	ld.local.u32 	%r363, [%rd18+4];
	mov.b64	%rd299, {%r363, %r362};
	ld.local.u32 	%r364, [%rd6];
	ld.local.u32 	%r365, [%rd6+4];
	mov.b64	%rd300, {%r365, %r364};
	ld.local.u32 	%r366, [%rd10+128];
	ld.local.u32 	%r367, [%rd20+4];
	mov.b64	%rd301, {%r367, %r366};
	ld.local.u32 	%r368, [%rd7];
	ld.local.u32 	%r369, [%rd7+4];
	mov.b64	%rd302, {%r369, %r368};
	ld.local.u32 	%r370, [%rd10+144];
	ld.local.u32 	%r371, [%rd22+4];
	mov.b64	%rd303, {%r371, %r370};
	ld.local.u32 	%r372, [%rd8];
	ld.local.u32 	%r373, [%rd8+4];
	mov.b64	%rd304, {%r373, %r372};
	ld.local.u32 	%r374, [%rd10+160];
	ld.local.u32 	%r375, [%rd24+4];
	mov.b64	%rd305, {%r375, %r374};
	ld.local.u32 	%r376, [%rd9];
	ld.local.u32 	%r377, [%rd9+4];
	mov.b64	%rd306, {%r377, %r376};
	ld.local.u32 	%r378, [%rd10+176];
	ld.local.u32 	%r379, [%rd26+4];
	mov.b64	%rd307, {%r379, %r378};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r380,%dummy}, %rd5925;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r381}, %rd5925;
	}
	shf.r.wrap.b32 	%r382, %r381, %r380, 18;
	shf.r.wrap.b32 	%r383, %r380, %r381, 18;
	mov.b64 	%rd308, {%r383, %r382};
	shf.r.wrap.b32 	%r384, %r381, %r380, 14;
	shf.r.wrap.b32 	%r385, %r380, %r381, 14;
	mov.b64 	%rd309, {%r385, %r384};
	xor.b64  	%rd310, %rd308, %rd309;
	shf.l.wrap.b32 	%r386, %r380, %r381, 23;
	shf.l.wrap.b32 	%r387, %r381, %r380, 23;
	mov.b64 	%rd311, {%r387, %r386};
	xor.b64  	%rd312, %rd310, %rd311;
	xor.b64  	%rd313, %rd5923, %rd5924;
	and.b64  	%rd314, %rd313, %rd5925;
	xor.b64  	%rd315, %rd314, %rd5923;
	add.s64 	%rd316, %rd315, %rd5922;
	add.s64 	%rd317, %rd316, %rd292;
	ld.const.u64 	%rd5921, [k_sha512];
	add.s64 	%rd318, %rd317, %rd5921;
	add.s64 	%rd319, %rd318, %rd312;
	add.s64 	%rd320, %rd319, %rd5926;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r388}, %rd5929;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r389,%dummy}, %rd5929;
	}
	shf.l.wrap.b32 	%r390, %r389, %r388, 30;
	shf.l.wrap.b32 	%r391, %r388, %r389, 30;
	mov.b64 	%rd321, {%r391, %r390};
	shf.r.wrap.b32 	%r392, %r388, %r389, 28;
	shf.r.wrap.b32 	%r393, %r389, %r388, 28;
	mov.b64 	%rd322, {%r393, %r392};
	xor.b64  	%rd323, %rd321, %rd322;
	shf.l.wrap.b32 	%r394, %r389, %r388, 25;
	shf.l.wrap.b32 	%r395, %r388, %r389, 25;
	mov.b64 	%rd324, {%r395, %r394};
	xor.b64  	%rd325, %rd323, %rd324;
	xor.b64  	%rd326, %rd5928, %rd5929;
	xor.b64  	%rd327, %rd5927, %rd5929;
	and.b64  	%rd328, %rd327, %rd326;
	xor.b64  	%rd329, %rd328, %rd5929;
	add.s64 	%rd330, %rd319, %rd329;
	add.s64 	%rd331, %rd330, %rd325;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r396,%dummy}, %rd320;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r397}, %rd320;
	}
	shf.r.wrap.b32 	%r398, %r397, %r396, 14;
	shf.r.wrap.b32 	%r399, %r396, %r397, 14;
	mov.b64 	%rd332, {%r399, %r398};
	shf.r.wrap.b32 	%r400, %r397, %r396, 18;
	shf.r.wrap.b32 	%r401, %r396, %r397, 18;
	mov.b64 	%rd333, {%r401, %r400};
	xor.b64  	%rd334, %rd333, %rd332;
	shf.l.wrap.b32 	%r402, %r396, %r397, 23;
	shf.l.wrap.b32 	%r403, %r397, %r396, 23;
	mov.b64 	%rd335, {%r403, %r402};
	xor.b64  	%rd336, %rd334, %rd335;
	xor.b64  	%rd337, %rd5924, %rd5925;
	and.b64  	%rd338, %rd320, %rd337;
	xor.b64  	%rd339, %rd338, %rd5924;
	add.s64 	%rd340, %rd293, %rd5923;
	ld.const.u64 	%rd5920, [k_sha512+8];
	add.s64 	%rd341, %rd340, %rd5920;
	add.s64 	%rd342, %rd341, %rd339;
	add.s64 	%rd343, %rd342, %rd336;
	add.s64 	%rd344, %rd343, %rd5927;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r404,%dummy}, %rd331;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r405}, %rd331;
	}
	shf.r.wrap.b32 	%r406, %r405, %r404, 28;
	shf.r.wrap.b32 	%r407, %r404, %r405, 28;
	mov.b64 	%rd345, {%r407, %r406};
	shf.l.wrap.b32 	%r408, %r404, %r405, 30;
	shf.l.wrap.b32 	%r409, %r405, %r404, 30;
	mov.b64 	%rd346, {%r409, %r408};
	xor.b64  	%rd347, %rd346, %rd345;
	shf.l.wrap.b32 	%r410, %r404, %r405, 25;
	shf.l.wrap.b32 	%r411, %r405, %r404, 25;
	mov.b64 	%rd348, {%r411, %r410};
	xor.b64  	%rd349, %rd347, %rd348;
	xor.b64  	%rd350, %rd331, %rd5928;
	xor.b64  	%rd351, %rd331, %rd5929;
	and.b64  	%rd352, %rd351, %rd350;
	xor.b64  	%rd353, %rd352, %rd331;
	add.s64 	%rd354, %rd343, %rd353;
	add.s64 	%rd355, %rd354, %rd349;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r412,%dummy}, %rd344;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r413}, %rd344;
	}
	shf.r.wrap.b32 	%r414, %r413, %r412, 14;
	shf.r.wrap.b32 	%r415, %r412, %r413, 14;
	mov.b64 	%rd356, {%r415, %r414};
	shf.r.wrap.b32 	%r416, %r413, %r412, 18;
	shf.r.wrap.b32 	%r417, %r412, %r413, 18;
	mov.b64 	%rd357, {%r417, %r416};
	xor.b64  	%rd358, %rd357, %rd356;
	shf.l.wrap.b32 	%r418, %r412, %r413, 23;
	shf.l.wrap.b32 	%r419, %r413, %r412, 23;
	mov.b64 	%rd359, {%r419, %r418};
	xor.b64  	%rd360, %rd358, %rd359;
	xor.b64  	%rd361, %rd320, %rd5925;
	and.b64  	%rd362, %rd344, %rd361;
	xor.b64  	%rd363, %rd362, %rd5925;
	add.s64 	%rd364, %rd294, %rd5924;
	ld.const.u64 	%rd5919, [k_sha512+16];
	add.s64 	%rd365, %rd364, %rd5919;
	add.s64 	%rd366, %rd365, %rd363;
	add.s64 	%rd367, %rd366, %rd360;
	add.s64 	%rd368, %rd367, %rd5928;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r420,%dummy}, %rd355;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r421}, %rd355;
	}
	shf.r.wrap.b32 	%r422, %r421, %r420, 28;
	shf.r.wrap.b32 	%r423, %r420, %r421, 28;
	mov.b64 	%rd369, {%r423, %r422};
	shf.l.wrap.b32 	%r424, %r420, %r421, 30;
	shf.l.wrap.b32 	%r425, %r421, %r420, 30;
	mov.b64 	%rd370, {%r425, %r424};
	xor.b64  	%rd371, %rd370, %rd369;
	shf.l.wrap.b32 	%r426, %r420, %r421, 25;
	shf.l.wrap.b32 	%r427, %r421, %r420, 25;
	mov.b64 	%rd372, {%r427, %r426};
	xor.b64  	%rd373, %rd371, %rd372;
	xor.b64  	%rd374, %rd355, %rd5929;
	xor.b64  	%rd375, %rd355, %rd331;
	and.b64  	%rd376, %rd375, %rd374;
	xor.b64  	%rd377, %rd376, %rd355;
	add.s64 	%rd378, %rd367, %rd377;
	add.s64 	%rd379, %rd378, %rd373;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r428,%dummy}, %rd368;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r429}, %rd368;
	}
	shf.r.wrap.b32 	%r430, %r429, %r428, 14;
	shf.r.wrap.b32 	%r431, %r428, %r429, 14;
	mov.b64 	%rd380, {%r431, %r430};
	shf.r.wrap.b32 	%r432, %r429, %r428, 18;
	shf.r.wrap.b32 	%r433, %r428, %r429, 18;
	mov.b64 	%rd381, {%r433, %r432};
	xor.b64  	%rd382, %rd381, %rd380;
	shf.l.wrap.b32 	%r434, %r428, %r429, 23;
	shf.l.wrap.b32 	%r435, %r429, %r428, 23;
	mov.b64 	%rd383, {%r435, %r434};
	xor.b64  	%rd384, %rd382, %rd383;
	xor.b64  	%rd385, %rd344, %rd320;
	and.b64  	%rd386, %rd368, %rd385;
	xor.b64  	%rd387, %rd386, %rd320;
	add.s64 	%rd388, %rd295, %rd5925;
	ld.const.u64 	%rd5918, [k_sha512+24];
	add.s64 	%rd389, %rd388, %rd5918;
	add.s64 	%rd390, %rd389, %rd387;
	add.s64 	%rd391, %rd390, %rd384;
	add.s64 	%rd392, %rd391, %rd5929;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r436,%dummy}, %rd379;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r437}, %rd379;
	}
	shf.r.wrap.b32 	%r438, %r437, %r436, 28;
	shf.r.wrap.b32 	%r439, %r436, %r437, 28;
	mov.b64 	%rd393, {%r439, %r438};
	shf.l.wrap.b32 	%r440, %r436, %r437, 30;
	shf.l.wrap.b32 	%r441, %r437, %r436, 30;
	mov.b64 	%rd394, {%r441, %r440};
	xor.b64  	%rd395, %rd394, %rd393;
	shf.l.wrap.b32 	%r442, %r436, %r437, 25;
	shf.l.wrap.b32 	%r443, %r437, %r436, 25;
	mov.b64 	%rd396, {%r443, %r442};
	xor.b64  	%rd397, %rd395, %rd396;
	xor.b64  	%rd398, %rd379, %rd331;
	xor.b64  	%rd399, %rd379, %rd355;
	and.b64  	%rd400, %rd399, %rd398;
	xor.b64  	%rd401, %rd400, %rd379;
	add.s64 	%rd402, %rd391, %rd401;
	add.s64 	%rd403, %rd402, %rd397;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r444,%dummy}, %rd392;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r445}, %rd392;
	}
	shf.r.wrap.b32 	%r446, %r445, %r444, 14;
	shf.r.wrap.b32 	%r447, %r444, %r445, 14;
	mov.b64 	%rd404, {%r447, %r446};
	shf.r.wrap.b32 	%r448, %r445, %r444, 18;
	shf.r.wrap.b32 	%r449, %r444, %r445, 18;
	mov.b64 	%rd405, {%r449, %r448};
	xor.b64  	%rd406, %rd405, %rd404;
	shf.l.wrap.b32 	%r450, %r444, %r445, 23;
	shf.l.wrap.b32 	%r451, %r445, %r444, 23;
	mov.b64 	%rd407, {%r451, %r450};
	xor.b64  	%rd408, %rd406, %rd407;
	xor.b64  	%rd409, %rd368, %rd344;
	and.b64  	%rd410, %rd392, %rd409;
	xor.b64  	%rd411, %rd410, %rd344;
	add.s64 	%rd412, %rd320, %rd296;
	ld.const.u64 	%rd5917, [k_sha512+32];
	add.s64 	%rd413, %rd412, %rd5917;
	add.s64 	%rd414, %rd413, %rd411;
	add.s64 	%rd415, %rd414, %rd408;
	add.s64 	%rd416, %rd415, %rd331;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r452,%dummy}, %rd403;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r453}, %rd403;
	}
	shf.r.wrap.b32 	%r454, %r453, %r452, 28;
	shf.r.wrap.b32 	%r455, %r452, %r453, 28;
	mov.b64 	%rd417, {%r455, %r454};
	shf.l.wrap.b32 	%r456, %r452, %r453, 30;
	shf.l.wrap.b32 	%r457, %r453, %r452, 30;
	mov.b64 	%rd418, {%r457, %r456};
	xor.b64  	%rd419, %rd418, %rd417;
	shf.l.wrap.b32 	%r458, %r452, %r453, 25;
	shf.l.wrap.b32 	%r459, %r453, %r452, 25;
	mov.b64 	%rd420, {%r459, %r458};
	xor.b64  	%rd421, %rd419, %rd420;
	xor.b64  	%rd422, %rd403, %rd355;
	xor.b64  	%rd423, %rd403, %rd379;
	and.b64  	%rd424, %rd423, %rd422;
	xor.b64  	%rd425, %rd424, %rd403;
	add.s64 	%rd426, %rd415, %rd425;
	add.s64 	%rd427, %rd426, %rd421;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r460,%dummy}, %rd416;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r461}, %rd416;
	}
	shf.r.wrap.b32 	%r462, %r461, %r460, 14;
	shf.r.wrap.b32 	%r463, %r460, %r461, 14;
	mov.b64 	%rd428, {%r463, %r462};
	shf.r.wrap.b32 	%r464, %r461, %r460, 18;
	shf.r.wrap.b32 	%r465, %r460, %r461, 18;
	mov.b64 	%rd429, {%r465, %r464};
	xor.b64  	%rd430, %rd429, %rd428;
	shf.l.wrap.b32 	%r466, %r460, %r461, 23;
	shf.l.wrap.b32 	%r467, %r461, %r460, 23;
	mov.b64 	%rd431, {%r467, %r466};
	xor.b64  	%rd432, %rd430, %rd431;
	xor.b64  	%rd433, %rd392, %rd368;
	and.b64  	%rd434, %rd416, %rd433;
	xor.b64  	%rd435, %rd434, %rd368;
	add.s64 	%rd436, %rd344, %rd297;
	ld.const.u64 	%rd5916, [k_sha512+40];
	add.s64 	%rd437, %rd436, %rd5916;
	add.s64 	%rd438, %rd437, %rd435;
	add.s64 	%rd439, %rd438, %rd432;
	add.s64 	%rd440, %rd439, %rd355;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r468,%dummy}, %rd427;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r469}, %rd427;
	}
	shf.r.wrap.b32 	%r470, %r469, %r468, 28;
	shf.r.wrap.b32 	%r471, %r468, %r469, 28;
	mov.b64 	%rd441, {%r471, %r470};
	shf.l.wrap.b32 	%r472, %r468, %r469, 30;
	shf.l.wrap.b32 	%r473, %r469, %r468, 30;
	mov.b64 	%rd442, {%r473, %r472};
	xor.b64  	%rd443, %rd442, %rd441;
	shf.l.wrap.b32 	%r474, %r468, %r469, 25;
	shf.l.wrap.b32 	%r475, %r469, %r468, 25;
	mov.b64 	%rd444, {%r475, %r474};
	xor.b64  	%rd445, %rd443, %rd444;
	xor.b64  	%rd446, %rd427, %rd379;
	xor.b64  	%rd447, %rd427, %rd403;
	and.b64  	%rd448, %rd447, %rd446;
	xor.b64  	%rd449, %rd448, %rd427;
	add.s64 	%rd450, %rd439, %rd449;
	add.s64 	%rd451, %rd450, %rd445;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r476,%dummy}, %rd440;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r477}, %rd440;
	}
	shf.r.wrap.b32 	%r478, %r477, %r476, 14;
	shf.r.wrap.b32 	%r479, %r476, %r477, 14;
	mov.b64 	%rd452, {%r479, %r478};
	shf.r.wrap.b32 	%r480, %r477, %r476, 18;
	shf.r.wrap.b32 	%r481, %r476, %r477, 18;
	mov.b64 	%rd453, {%r481, %r480};
	xor.b64  	%rd454, %rd453, %rd452;
	shf.l.wrap.b32 	%r482, %r476, %r477, 23;
	shf.l.wrap.b32 	%r483, %r477, %r476, 23;
	mov.b64 	%rd455, {%r483, %r482};
	xor.b64  	%rd456, %rd454, %rd455;
	xor.b64  	%rd457, %rd416, %rd392;
	and.b64  	%rd458, %rd440, %rd457;
	xor.b64  	%rd459, %rd458, %rd392;
	add.s64 	%rd460, %rd368, %rd298;
	ld.const.u64 	%rd5915, [k_sha512+48];
	add.s64 	%rd461, %rd460, %rd5915;
	add.s64 	%rd462, %rd461, %rd459;
	add.s64 	%rd463, %rd462, %rd456;
	add.s64 	%rd464, %rd463, %rd379;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r484,%dummy}, %rd451;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r485}, %rd451;
	}
	shf.r.wrap.b32 	%r486, %r485, %r484, 28;
	shf.r.wrap.b32 	%r487, %r484, %r485, 28;
	mov.b64 	%rd465, {%r487, %r486};
	shf.l.wrap.b32 	%r488, %r484, %r485, 30;
	shf.l.wrap.b32 	%r489, %r485, %r484, 30;
	mov.b64 	%rd466, {%r489, %r488};
	xor.b64  	%rd467, %rd466, %rd465;
	shf.l.wrap.b32 	%r490, %r484, %r485, 25;
	shf.l.wrap.b32 	%r491, %r485, %r484, 25;
	mov.b64 	%rd468, {%r491, %r490};
	xor.b64  	%rd469, %rd467, %rd468;
	xor.b64  	%rd470, %rd451, %rd403;
	xor.b64  	%rd471, %rd451, %rd427;
	and.b64  	%rd472, %rd471, %rd470;
	xor.b64  	%rd473, %rd472, %rd451;
	add.s64 	%rd474, %rd463, %rd473;
	add.s64 	%rd475, %rd474, %rd469;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r492,%dummy}, %rd464;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r493}, %rd464;
	}
	shf.r.wrap.b32 	%r494, %r493, %r492, 14;
	shf.r.wrap.b32 	%r495, %r492, %r493, 14;
	mov.b64 	%rd476, {%r495, %r494};
	shf.r.wrap.b32 	%r496, %r493, %r492, 18;
	shf.r.wrap.b32 	%r497, %r492, %r493, 18;
	mov.b64 	%rd477, {%r497, %r496};
	xor.b64  	%rd478, %rd477, %rd476;
	shf.l.wrap.b32 	%r498, %r492, %r493, 23;
	shf.l.wrap.b32 	%r499, %r493, %r492, 23;
	mov.b64 	%rd479, {%r499, %r498};
	xor.b64  	%rd480, %rd478, %rd479;
	xor.b64  	%rd481, %rd440, %rd416;
	and.b64  	%rd482, %rd464, %rd481;
	xor.b64  	%rd483, %rd482, %rd416;
	add.s64 	%rd484, %rd392, %rd299;
	ld.const.u64 	%rd5914, [k_sha512+56];
	add.s64 	%rd485, %rd484, %rd5914;
	add.s64 	%rd486, %rd485, %rd483;
	add.s64 	%rd487, %rd486, %rd480;
	add.s64 	%rd488, %rd487, %rd403;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r500,%dummy}, %rd475;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r501}, %rd475;
	}
	shf.r.wrap.b32 	%r502, %r501, %r500, 28;
	shf.r.wrap.b32 	%r503, %r500, %r501, 28;
	mov.b64 	%rd489, {%r503, %r502};
	shf.l.wrap.b32 	%r504, %r500, %r501, 30;
	shf.l.wrap.b32 	%r505, %r501, %r500, 30;
	mov.b64 	%rd490, {%r505, %r504};
	xor.b64  	%rd491, %rd490, %rd489;
	shf.l.wrap.b32 	%r506, %r500, %r501, 25;
	shf.l.wrap.b32 	%r507, %r501, %r500, 25;
	mov.b64 	%rd492, {%r507, %r506};
	xor.b64  	%rd493, %rd491, %rd492;
	xor.b64  	%rd494, %rd475, %rd427;
	xor.b64  	%rd495, %rd475, %rd451;
	and.b64  	%rd496, %rd495, %rd494;
	xor.b64  	%rd497, %rd496, %rd475;
	add.s64 	%rd498, %rd487, %rd497;
	add.s64 	%rd499, %rd498, %rd493;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r508,%dummy}, %rd488;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r509}, %rd488;
	}
	shf.r.wrap.b32 	%r510, %r509, %r508, 14;
	shf.r.wrap.b32 	%r511, %r508, %r509, 14;
	mov.b64 	%rd500, {%r511, %r510};
	shf.r.wrap.b32 	%r512, %r509, %r508, 18;
	shf.r.wrap.b32 	%r513, %r508, %r509, 18;
	mov.b64 	%rd501, {%r513, %r512};
	xor.b64  	%rd502, %rd501, %rd500;
	shf.l.wrap.b32 	%r514, %r508, %r509, 23;
	shf.l.wrap.b32 	%r515, %r509, %r508, 23;
	mov.b64 	%rd503, {%r515, %r514};
	xor.b64  	%rd504, %rd502, %rd503;
	xor.b64  	%rd505, %rd464, %rd440;
	and.b64  	%rd506, %rd488, %rd505;
	xor.b64  	%rd507, %rd506, %rd440;
	add.s64 	%rd508, %rd416, %rd300;
	ld.const.u64 	%rd5913, [k_sha512+64];
	add.s64 	%rd509, %rd508, %rd5913;
	add.s64 	%rd510, %rd509, %rd507;
	add.s64 	%rd511, %rd510, %rd504;
	add.s64 	%rd512, %rd511, %rd427;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r516,%dummy}, %rd499;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r517}, %rd499;
	}
	shf.r.wrap.b32 	%r518, %r517, %r516, 28;
	shf.r.wrap.b32 	%r519, %r516, %r517, 28;
	mov.b64 	%rd513, {%r519, %r518};
	shf.l.wrap.b32 	%r520, %r516, %r517, 30;
	shf.l.wrap.b32 	%r521, %r517, %r516, 30;
	mov.b64 	%rd514, {%r521, %r520};
	xor.b64  	%rd515, %rd514, %rd513;
	shf.l.wrap.b32 	%r522, %r516, %r517, 25;
	shf.l.wrap.b32 	%r523, %r517, %r516, 25;
	mov.b64 	%rd516, {%r523, %r522};
	xor.b64  	%rd517, %rd515, %rd516;
	xor.b64  	%rd518, %rd499, %rd451;
	xor.b64  	%rd519, %rd499, %rd475;
	and.b64  	%rd520, %rd519, %rd518;
	xor.b64  	%rd521, %rd520, %rd499;
	add.s64 	%rd522, %rd511, %rd521;
	add.s64 	%rd523, %rd522, %rd517;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r524,%dummy}, %rd512;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r525}, %rd512;
	}
	shf.r.wrap.b32 	%r526, %r525, %r524, 14;
	shf.r.wrap.b32 	%r527, %r524, %r525, 14;
	mov.b64 	%rd524, {%r527, %r526};
	shf.r.wrap.b32 	%r528, %r525, %r524, 18;
	shf.r.wrap.b32 	%r529, %r524, %r525, 18;
	mov.b64 	%rd525, {%r529, %r528};
	xor.b64  	%rd526, %rd525, %rd524;
	shf.l.wrap.b32 	%r530, %r524, %r525, 23;
	shf.l.wrap.b32 	%r531, %r525, %r524, 23;
	mov.b64 	%rd527, {%r531, %r530};
	xor.b64  	%rd528, %rd526, %rd527;
	xor.b64  	%rd529, %rd488, %rd464;
	and.b64  	%rd530, %rd512, %rd529;
	xor.b64  	%rd531, %rd530, %rd464;
	add.s64 	%rd532, %rd440, %rd301;
	ld.const.u64 	%rd5912, [k_sha512+72];
	add.s64 	%rd533, %rd532, %rd5912;
	add.s64 	%rd534, %rd533, %rd531;
	add.s64 	%rd535, %rd534, %rd528;
	add.s64 	%rd536, %rd535, %rd451;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r532,%dummy}, %rd523;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r533}, %rd523;
	}
	shf.r.wrap.b32 	%r534, %r533, %r532, 28;
	shf.r.wrap.b32 	%r535, %r532, %r533, 28;
	mov.b64 	%rd537, {%r535, %r534};
	shf.l.wrap.b32 	%r536, %r532, %r533, 30;
	shf.l.wrap.b32 	%r537, %r533, %r532, 30;
	mov.b64 	%rd538, {%r537, %r536};
	xor.b64  	%rd539, %rd538, %rd537;
	shf.l.wrap.b32 	%r538, %r532, %r533, 25;
	shf.l.wrap.b32 	%r539, %r533, %r532, 25;
	mov.b64 	%rd540, {%r539, %r538};
	xor.b64  	%rd541, %rd539, %rd540;
	xor.b64  	%rd542, %rd523, %rd475;
	xor.b64  	%rd543, %rd523, %rd499;
	and.b64  	%rd544, %rd543, %rd542;
	xor.b64  	%rd545, %rd544, %rd523;
	add.s64 	%rd546, %rd535, %rd545;
	add.s64 	%rd547, %rd546, %rd541;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r540,%dummy}, %rd536;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r541}, %rd536;
	}
	shf.r.wrap.b32 	%r542, %r541, %r540, 14;
	shf.r.wrap.b32 	%r543, %r540, %r541, 14;
	mov.b64 	%rd548, {%r543, %r542};
	shf.r.wrap.b32 	%r544, %r541, %r540, 18;
	shf.r.wrap.b32 	%r545, %r540, %r541, 18;
	mov.b64 	%rd549, {%r545, %r544};
	xor.b64  	%rd550, %rd549, %rd548;
	shf.l.wrap.b32 	%r546, %r540, %r541, 23;
	shf.l.wrap.b32 	%r547, %r541, %r540, 23;
	mov.b64 	%rd551, {%r547, %r546};
	xor.b64  	%rd552, %rd550, %rd551;
	xor.b64  	%rd553, %rd512, %rd488;
	and.b64  	%rd554, %rd536, %rd553;
	xor.b64  	%rd555, %rd554, %rd488;
	add.s64 	%rd556, %rd464, %rd302;
	ld.const.u64 	%rd5911, [k_sha512+80];
	add.s64 	%rd557, %rd556, %rd5911;
	add.s64 	%rd558, %rd557, %rd555;
	add.s64 	%rd559, %rd558, %rd552;
	add.s64 	%rd560, %rd559, %rd475;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r548,%dummy}, %rd547;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r549}, %rd547;
	}
	shf.r.wrap.b32 	%r550, %r549, %r548, 28;
	shf.r.wrap.b32 	%r551, %r548, %r549, 28;
	mov.b64 	%rd561, {%r551, %r550};
	shf.l.wrap.b32 	%r552, %r548, %r549, 30;
	shf.l.wrap.b32 	%r553, %r549, %r548, 30;
	mov.b64 	%rd562, {%r553, %r552};
	xor.b64  	%rd563, %rd562, %rd561;
	shf.l.wrap.b32 	%r554, %r548, %r549, 25;
	shf.l.wrap.b32 	%r555, %r549, %r548, 25;
	mov.b64 	%rd564, {%r555, %r554};
	xor.b64  	%rd565, %rd563, %rd564;
	xor.b64  	%rd566, %rd547, %rd499;
	xor.b64  	%rd567, %rd547, %rd523;
	and.b64  	%rd568, %rd567, %rd566;
	xor.b64  	%rd569, %rd568, %rd547;
	add.s64 	%rd570, %rd559, %rd569;
	add.s64 	%rd571, %rd570, %rd565;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r556,%dummy}, %rd560;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r557}, %rd560;
	}
	shf.r.wrap.b32 	%r558, %r557, %r556, 14;
	shf.r.wrap.b32 	%r559, %r556, %r557, 14;
	mov.b64 	%rd572, {%r559, %r558};
	shf.r.wrap.b32 	%r560, %r557, %r556, 18;
	shf.r.wrap.b32 	%r561, %r556, %r557, 18;
	mov.b64 	%rd573, {%r561, %r560};
	xor.b64  	%rd574, %rd573, %rd572;
	shf.l.wrap.b32 	%r562, %r556, %r557, 23;
	shf.l.wrap.b32 	%r563, %r557, %r556, 23;
	mov.b64 	%rd575, {%r563, %r562};
	xor.b64  	%rd576, %rd574, %rd575;
	xor.b64  	%rd577, %rd536, %rd512;
	and.b64  	%rd578, %rd560, %rd577;
	xor.b64  	%rd579, %rd578, %rd512;
	add.s64 	%rd580, %rd488, %rd303;
	ld.const.u64 	%rd5910, [k_sha512+88];
	add.s64 	%rd581, %rd580, %rd5910;
	add.s64 	%rd582, %rd581, %rd579;
	add.s64 	%rd583, %rd582, %rd576;
	add.s64 	%rd584, %rd583, %rd499;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r564,%dummy}, %rd571;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r565}, %rd571;
	}
	shf.r.wrap.b32 	%r566, %r565, %r564, 28;
	shf.r.wrap.b32 	%r567, %r564, %r565, 28;
	mov.b64 	%rd585, {%r567, %r566};
	shf.l.wrap.b32 	%r568, %r564, %r565, 30;
	shf.l.wrap.b32 	%r569, %r565, %r564, 30;
	mov.b64 	%rd586, {%r569, %r568};
	xor.b64  	%rd587, %rd586, %rd585;
	shf.l.wrap.b32 	%r570, %r564, %r565, 25;
	shf.l.wrap.b32 	%r571, %r565, %r564, 25;
	mov.b64 	%rd588, {%r571, %r570};
	xor.b64  	%rd589, %rd587, %rd588;
	xor.b64  	%rd590, %rd571, %rd523;
	xor.b64  	%rd591, %rd571, %rd547;
	and.b64  	%rd592, %rd591, %rd590;
	xor.b64  	%rd593, %rd592, %rd571;
	add.s64 	%rd594, %rd583, %rd593;
	add.s64 	%rd595, %rd594, %rd589;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r572,%dummy}, %rd584;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r573}, %rd584;
	}
	shf.r.wrap.b32 	%r574, %r573, %r572, 14;
	shf.r.wrap.b32 	%r575, %r572, %r573, 14;
	mov.b64 	%rd596, {%r575, %r574};
	shf.r.wrap.b32 	%r576, %r573, %r572, 18;
	shf.r.wrap.b32 	%r577, %r572, %r573, 18;
	mov.b64 	%rd597, {%r577, %r576};
	xor.b64  	%rd598, %rd597, %rd596;
	shf.l.wrap.b32 	%r578, %r572, %r573, 23;
	shf.l.wrap.b32 	%r579, %r573, %r572, 23;
	mov.b64 	%rd599, {%r579, %r578};
	xor.b64  	%rd600, %rd598, %rd599;
	xor.b64  	%rd601, %rd560, %rd536;
	and.b64  	%rd602, %rd584, %rd601;
	xor.b64  	%rd603, %rd602, %rd536;
	add.s64 	%rd604, %rd512, %rd304;
	ld.const.u64 	%rd5909, [k_sha512+96];
	add.s64 	%rd605, %rd604, %rd5909;
	add.s64 	%rd606, %rd605, %rd603;
	add.s64 	%rd607, %rd606, %rd600;
	add.s64 	%rd608, %rd607, %rd523;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r580,%dummy}, %rd595;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r581}, %rd595;
	}
	shf.r.wrap.b32 	%r582, %r581, %r580, 28;
	shf.r.wrap.b32 	%r583, %r580, %r581, 28;
	mov.b64 	%rd609, {%r583, %r582};
	shf.l.wrap.b32 	%r584, %r580, %r581, 30;
	shf.l.wrap.b32 	%r585, %r581, %r580, 30;
	mov.b64 	%rd610, {%r585, %r584};
	xor.b64  	%rd611, %rd610, %rd609;
	shf.l.wrap.b32 	%r586, %r580, %r581, 25;
	shf.l.wrap.b32 	%r587, %r581, %r580, 25;
	mov.b64 	%rd612, {%r587, %r586};
	xor.b64  	%rd613, %rd611, %rd612;
	xor.b64  	%rd614, %rd595, %rd547;
	xor.b64  	%rd615, %rd595, %rd571;
	and.b64  	%rd616, %rd615, %rd614;
	xor.b64  	%rd617, %rd616, %rd595;
	add.s64 	%rd618, %rd607, %rd617;
	add.s64 	%rd619, %rd618, %rd613;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r588,%dummy}, %rd608;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r589}, %rd608;
	}
	shf.r.wrap.b32 	%r590, %r589, %r588, 14;
	shf.r.wrap.b32 	%r591, %r588, %r589, 14;
	mov.b64 	%rd620, {%r591, %r590};
	shf.r.wrap.b32 	%r592, %r589, %r588, 18;
	shf.r.wrap.b32 	%r593, %r588, %r589, 18;
	mov.b64 	%rd621, {%r593, %r592};
	xor.b64  	%rd622, %rd621, %rd620;
	shf.l.wrap.b32 	%r594, %r588, %r589, 23;
	shf.l.wrap.b32 	%r595, %r589, %r588, 23;
	mov.b64 	%rd623, {%r595, %r594};
	xor.b64  	%rd624, %rd622, %rd623;
	xor.b64  	%rd625, %rd584, %rd560;
	and.b64  	%rd626, %rd608, %rd625;
	xor.b64  	%rd627, %rd626, %rd560;
	add.s64 	%rd628, %rd536, %rd305;
	ld.const.u64 	%rd5908, [k_sha512+104];
	add.s64 	%rd629, %rd628, %rd5908;
	add.s64 	%rd630, %rd629, %rd627;
	add.s64 	%rd631, %rd630, %rd624;
	add.s64 	%rd632, %rd631, %rd547;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r596,%dummy}, %rd619;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r597}, %rd619;
	}
	shf.r.wrap.b32 	%r598, %r597, %r596, 28;
	shf.r.wrap.b32 	%r599, %r596, %r597, 28;
	mov.b64 	%rd633, {%r599, %r598};
	shf.l.wrap.b32 	%r600, %r596, %r597, 30;
	shf.l.wrap.b32 	%r601, %r597, %r596, 30;
	mov.b64 	%rd634, {%r601, %r600};
	xor.b64  	%rd635, %rd634, %rd633;
	shf.l.wrap.b32 	%r602, %r596, %r597, 25;
	shf.l.wrap.b32 	%r603, %r597, %r596, 25;
	mov.b64 	%rd636, {%r603, %r602};
	xor.b64  	%rd637, %rd635, %rd636;
	xor.b64  	%rd638, %rd619, %rd571;
	xor.b64  	%rd639, %rd619, %rd595;
	and.b64  	%rd640, %rd639, %rd638;
	xor.b64  	%rd641, %rd640, %rd619;
	add.s64 	%rd642, %rd631, %rd641;
	add.s64 	%rd643, %rd642, %rd637;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r604,%dummy}, %rd632;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r605}, %rd632;
	}
	shf.r.wrap.b32 	%r606, %r605, %r604, 14;
	shf.r.wrap.b32 	%r607, %r604, %r605, 14;
	mov.b64 	%rd644, {%r607, %r606};
	shf.r.wrap.b32 	%r608, %r605, %r604, 18;
	shf.r.wrap.b32 	%r609, %r604, %r605, 18;
	mov.b64 	%rd645, {%r609, %r608};
	xor.b64  	%rd646, %rd645, %rd644;
	shf.l.wrap.b32 	%r610, %r604, %r605, 23;
	shf.l.wrap.b32 	%r611, %r605, %r604, 23;
	mov.b64 	%rd647, {%r611, %r610};
	xor.b64  	%rd648, %rd646, %rd647;
	xor.b64  	%rd649, %rd608, %rd584;
	and.b64  	%rd650, %rd632, %rd649;
	xor.b64  	%rd651, %rd650, %rd584;
	add.s64 	%rd652, %rd560, %rd306;
	ld.const.u64 	%rd5907, [k_sha512+112];
	add.s64 	%rd653, %rd652, %rd5907;
	add.s64 	%rd654, %rd653, %rd651;
	add.s64 	%rd655, %rd654, %rd648;
	add.s64 	%rd656, %rd655, %rd571;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r612,%dummy}, %rd643;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r613}, %rd643;
	}
	shf.r.wrap.b32 	%r614, %r613, %r612, 28;
	shf.r.wrap.b32 	%r615, %r612, %r613, 28;
	mov.b64 	%rd657, {%r615, %r614};
	shf.l.wrap.b32 	%r616, %r612, %r613, 30;
	shf.l.wrap.b32 	%r617, %r613, %r612, 30;
	mov.b64 	%rd658, {%r617, %r616};
	xor.b64  	%rd659, %rd658, %rd657;
	shf.l.wrap.b32 	%r618, %r612, %r613, 25;
	shf.l.wrap.b32 	%r619, %r613, %r612, 25;
	mov.b64 	%rd660, {%r619, %r618};
	xor.b64  	%rd661, %rd659, %rd660;
	xor.b64  	%rd662, %rd643, %rd595;
	xor.b64  	%rd663, %rd643, %rd619;
	and.b64  	%rd664, %rd663, %rd662;
	xor.b64  	%rd665, %rd664, %rd643;
	add.s64 	%rd666, %rd655, %rd665;
	add.s64 	%rd667, %rd666, %rd661;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r620,%dummy}, %rd656;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r621}, %rd656;
	}
	shf.r.wrap.b32 	%r622, %r621, %r620, 14;
	shf.r.wrap.b32 	%r623, %r620, %r621, 14;
	mov.b64 	%rd668, {%r623, %r622};
	shf.r.wrap.b32 	%r624, %r621, %r620, 18;
	shf.r.wrap.b32 	%r625, %r620, %r621, 18;
	mov.b64 	%rd669, {%r625, %r624};
	xor.b64  	%rd670, %rd669, %rd668;
	shf.l.wrap.b32 	%r626, %r620, %r621, 23;
	shf.l.wrap.b32 	%r627, %r621, %r620, 23;
	mov.b64 	%rd671, {%r627, %r626};
	xor.b64  	%rd672, %rd670, %rd671;
	xor.b64  	%rd673, %rd632, %rd608;
	and.b64  	%rd674, %rd656, %rd673;
	xor.b64  	%rd675, %rd674, %rd608;
	add.s64 	%rd676, %rd584, %rd307;
	ld.const.u64 	%rd5906, [k_sha512+120];
	add.s64 	%rd677, %rd676, %rd5906;
	add.s64 	%rd678, %rd677, %rd675;
	add.s64 	%rd679, %rd678, %rd672;
	add.s64 	%rd680, %rd679, %rd595;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r628,%dummy}, %rd667;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r629}, %rd667;
	}
	shf.r.wrap.b32 	%r630, %r629, %r628, 28;
	shf.r.wrap.b32 	%r631, %r628, %r629, 28;
	mov.b64 	%rd681, {%r631, %r630};
	shf.l.wrap.b32 	%r632, %r628, %r629, 30;
	shf.l.wrap.b32 	%r633, %r629, %r628, 30;
	mov.b64 	%rd682, {%r633, %r632};
	xor.b64  	%rd683, %rd682, %rd681;
	shf.l.wrap.b32 	%r634, %r628, %r629, 25;
	shf.l.wrap.b32 	%r635, %r629, %r628, 25;
	mov.b64 	%rd684, {%r635, %r634};
	xor.b64  	%rd685, %rd683, %rd684;
	xor.b64  	%rd686, %rd667, %rd619;
	xor.b64  	%rd687, %rd667, %rd643;
	and.b64  	%rd688, %rd687, %rd686;
	xor.b64  	%rd689, %rd688, %rd667;
	add.s64 	%rd690, %rd679, %rd689;
	add.s64 	%rd691, %rd690, %rd685;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r636,%dummy}, %rd306;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r637}, %rd306;
	}
	shf.r.wrap.b32 	%r638, %r637, %r636, 19;
	shf.r.wrap.b32 	%r639, %r636, %r637, 19;
	mov.b64 	%rd692, {%r639, %r638};
	shf.l.wrap.b32 	%r640, %r636, %r637, 3;
	shf.l.wrap.b32 	%r641, %r637, %r636, 3;
	mov.b64 	%rd693, {%r641, %r640};
	shr.u64 	%rd694, %rd306, 6;
	xor.b64  	%rd695, %rd692, %rd694;
	xor.b64  	%rd696, %rd695, %rd693;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r642,%dummy}, %rd293;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r643}, %rd293;
	}
	shf.r.wrap.b32 	%r644, %r643, %r642, 1;
	shf.r.wrap.b32 	%r645, %r642, %r643, 1;
	mov.b64 	%rd697, {%r645, %r644};
	shf.r.wrap.b32 	%r646, %r643, %r642, 8;
	shf.r.wrap.b32 	%r647, %r642, %r643, 8;
	mov.b64 	%rd698, {%r647, %r646};
	shr.u64 	%rd699, %rd293, 7;
	xor.b64  	%rd700, %rd697, %rd699;
	xor.b64  	%rd701, %rd700, %rd698;
	add.s64 	%rd702, %rd301, %rd292;
	add.s64 	%rd703, %rd702, %rd696;
	add.s64 	%rd704, %rd703, %rd701;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r648,%dummy}, %rd307;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r649}, %rd307;
	}
	shf.r.wrap.b32 	%r650, %r649, %r648, 19;
	shf.r.wrap.b32 	%r651, %r648, %r649, 19;
	mov.b64 	%rd705, {%r651, %r650};
	shf.l.wrap.b32 	%r652, %r648, %r649, 3;
	shf.l.wrap.b32 	%r653, %r649, %r648, 3;
	mov.b64 	%rd706, {%r653, %r652};
	shr.u64 	%rd707, %rd307, 6;
	xor.b64  	%rd708, %rd705, %rd707;
	xor.b64  	%rd709, %rd708, %rd706;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r654,%dummy}, %rd294;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r655}, %rd294;
	}
	shf.r.wrap.b32 	%r656, %r655, %r654, 1;
	shf.r.wrap.b32 	%r657, %r654, %r655, 1;
	mov.b64 	%rd710, {%r657, %r656};
	shf.r.wrap.b32 	%r658, %r655, %r654, 8;
	shf.r.wrap.b32 	%r659, %r654, %r655, 8;
	mov.b64 	%rd711, {%r659, %r658};
	shr.u64 	%rd712, %rd294, 7;
	xor.b64  	%rd713, %rd710, %rd712;
	xor.b64  	%rd714, %rd713, %rd711;
	add.s64 	%rd715, %rd302, %rd293;
	add.s64 	%rd716, %rd715, %rd709;
	add.s64 	%rd717, %rd716, %rd714;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r660,%dummy}, %rd704;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r661}, %rd704;
	}
	shf.r.wrap.b32 	%r662, %r661, %r660, 19;
	shf.r.wrap.b32 	%r663, %r660, %r661, 19;
	mov.b64 	%rd718, {%r663, %r662};
	shf.l.wrap.b32 	%r664, %r660, %r661, 3;
	shf.l.wrap.b32 	%r665, %r661, %r660, 3;
	mov.b64 	%rd719, {%r665, %r664};
	shr.u64 	%rd720, %rd704, 6;
	xor.b64  	%rd721, %rd718, %rd720;
	xor.b64  	%rd722, %rd721, %rd719;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r666,%dummy}, %rd295;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r667}, %rd295;
	}
	shf.r.wrap.b32 	%r668, %r667, %r666, 1;
	shf.r.wrap.b32 	%r669, %r666, %r667, 1;
	mov.b64 	%rd723, {%r669, %r668};
	shf.r.wrap.b32 	%r670, %r667, %r666, 8;
	shf.r.wrap.b32 	%r671, %r666, %r667, 8;
	mov.b64 	%rd724, {%r671, %r670};
	shr.u64 	%rd725, %rd295, 7;
	xor.b64  	%rd726, %rd723, %rd725;
	xor.b64  	%rd727, %rd726, %rd724;
	add.s64 	%rd728, %rd303, %rd294;
	add.s64 	%rd729, %rd728, %rd722;
	add.s64 	%rd730, %rd729, %rd727;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r672,%dummy}, %rd717;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r673}, %rd717;
	}
	shf.r.wrap.b32 	%r674, %r673, %r672, 19;
	shf.r.wrap.b32 	%r675, %r672, %r673, 19;
	mov.b64 	%rd731, {%r675, %r674};
	shf.l.wrap.b32 	%r676, %r672, %r673, 3;
	shf.l.wrap.b32 	%r677, %r673, %r672, 3;
	mov.b64 	%rd732, {%r677, %r676};
	shr.u64 	%rd733, %rd717, 6;
	xor.b64  	%rd734, %rd731, %rd733;
	xor.b64  	%rd735, %rd734, %rd732;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r678,%dummy}, %rd296;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r679}, %rd296;
	}
	shf.r.wrap.b32 	%r680, %r679, %r678, 1;
	shf.r.wrap.b32 	%r681, %r678, %r679, 1;
	mov.b64 	%rd736, {%r681, %r680};
	shf.r.wrap.b32 	%r682, %r679, %r678, 8;
	shf.r.wrap.b32 	%r683, %r678, %r679, 8;
	mov.b64 	%rd737, {%r683, %r682};
	shr.u64 	%rd738, %rd296, 7;
	xor.b64  	%rd739, %rd736, %rd738;
	xor.b64  	%rd740, %rd739, %rd737;
	add.s64 	%rd741, %rd304, %rd295;
	add.s64 	%rd742, %rd741, %rd735;
	add.s64 	%rd743, %rd742, %rd740;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r684,%dummy}, %rd730;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r685}, %rd730;
	}
	shf.r.wrap.b32 	%r686, %r685, %r684, 19;
	shf.r.wrap.b32 	%r687, %r684, %r685, 19;
	mov.b64 	%rd744, {%r687, %r686};
	shf.l.wrap.b32 	%r688, %r684, %r685, 3;
	shf.l.wrap.b32 	%r689, %r685, %r684, 3;
	mov.b64 	%rd745, {%r689, %r688};
	shr.u64 	%rd746, %rd730, 6;
	xor.b64  	%rd747, %rd744, %rd746;
	xor.b64  	%rd748, %rd747, %rd745;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r690,%dummy}, %rd297;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r691}, %rd297;
	}
	shf.r.wrap.b32 	%r692, %r691, %r690, 1;
	shf.r.wrap.b32 	%r693, %r690, %r691, 1;
	mov.b64 	%rd749, {%r693, %r692};
	shf.r.wrap.b32 	%r694, %r691, %r690, 8;
	shf.r.wrap.b32 	%r695, %r690, %r691, 8;
	mov.b64 	%rd750, {%r695, %r694};
	shr.u64 	%rd751, %rd297, 7;
	xor.b64  	%rd752, %rd749, %rd751;
	xor.b64  	%rd753, %rd752, %rd750;
	add.s64 	%rd754, %rd305, %rd296;
	add.s64 	%rd755, %rd754, %rd748;
	add.s64 	%rd756, %rd755, %rd753;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r696,%dummy}, %rd743;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r697}, %rd743;
	}
	shf.r.wrap.b32 	%r698, %r697, %r696, 19;
	shf.r.wrap.b32 	%r699, %r696, %r697, 19;
	mov.b64 	%rd757, {%r699, %r698};
	shf.l.wrap.b32 	%r700, %r696, %r697, 3;
	shf.l.wrap.b32 	%r701, %r697, %r696, 3;
	mov.b64 	%rd758, {%r701, %r700};
	shr.u64 	%rd759, %rd743, 6;
	xor.b64  	%rd760, %rd757, %rd759;
	xor.b64  	%rd761, %rd760, %rd758;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r702,%dummy}, %rd298;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r703}, %rd298;
	}
	shf.r.wrap.b32 	%r704, %r703, %r702, 1;
	shf.r.wrap.b32 	%r705, %r702, %r703, 1;
	mov.b64 	%rd762, {%r705, %r704};
	shf.r.wrap.b32 	%r706, %r703, %r702, 8;
	shf.r.wrap.b32 	%r707, %r702, %r703, 8;
	mov.b64 	%rd763, {%r707, %r706};
	shr.u64 	%rd764, %rd298, 7;
	xor.b64  	%rd765, %rd762, %rd764;
	xor.b64  	%rd766, %rd765, %rd763;
	add.s64 	%rd767, %rd306, %rd297;
	add.s64 	%rd768, %rd767, %rd761;
	add.s64 	%rd769, %rd768, %rd766;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r708,%dummy}, %rd756;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r709}, %rd756;
	}
	shf.r.wrap.b32 	%r710, %r709, %r708, 19;
	shf.r.wrap.b32 	%r711, %r708, %r709, 19;
	mov.b64 	%rd770, {%r711, %r710};
	shf.l.wrap.b32 	%r712, %r708, %r709, 3;
	shf.l.wrap.b32 	%r713, %r709, %r708, 3;
	mov.b64 	%rd771, {%r713, %r712};
	shr.u64 	%rd772, %rd756, 6;
	xor.b64  	%rd773, %rd770, %rd772;
	xor.b64  	%rd774, %rd773, %rd771;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r714,%dummy}, %rd299;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r715}, %rd299;
	}
	shf.r.wrap.b32 	%r716, %r715, %r714, 1;
	shf.r.wrap.b32 	%r717, %r714, %r715, 1;
	mov.b64 	%rd775, {%r717, %r716};
	shf.r.wrap.b32 	%r718, %r715, %r714, 8;
	shf.r.wrap.b32 	%r719, %r714, %r715, 8;
	mov.b64 	%rd776, {%r719, %r718};
	shr.u64 	%rd777, %rd299, 7;
	xor.b64  	%rd778, %rd775, %rd777;
	xor.b64  	%rd779, %rd778, %rd776;
	add.s64 	%rd780, %rd307, %rd298;
	add.s64 	%rd781, %rd780, %rd774;
	add.s64 	%rd782, %rd781, %rd779;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r720,%dummy}, %rd769;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r721}, %rd769;
	}
	shf.r.wrap.b32 	%r722, %r721, %r720, 19;
	shf.r.wrap.b32 	%r723, %r720, %r721, 19;
	mov.b64 	%rd783, {%r723, %r722};
	shf.l.wrap.b32 	%r724, %r720, %r721, 3;
	shf.l.wrap.b32 	%r725, %r721, %r720, 3;
	mov.b64 	%rd784, {%r725, %r724};
	shr.u64 	%rd785, %rd769, 6;
	xor.b64  	%rd786, %rd783, %rd785;
	xor.b64  	%rd787, %rd786, %rd784;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r726,%dummy}, %rd300;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r727}, %rd300;
	}
	shf.r.wrap.b32 	%r728, %r727, %r726, 1;
	shf.r.wrap.b32 	%r729, %r726, %r727, 1;
	mov.b64 	%rd788, {%r729, %r728};
	shf.r.wrap.b32 	%r730, %r727, %r726, 8;
	shf.r.wrap.b32 	%r731, %r726, %r727, 8;
	mov.b64 	%rd789, {%r731, %r730};
	shr.u64 	%rd790, %rd300, 7;
	xor.b64  	%rd791, %rd788, %rd790;
	xor.b64  	%rd792, %rd791, %rd789;
	add.s64 	%rd793, %rd704, %rd299;
	add.s64 	%rd794, %rd793, %rd787;
	add.s64 	%rd795, %rd794, %rd792;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r732,%dummy}, %rd782;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r733}, %rd782;
	}
	shf.r.wrap.b32 	%r734, %r733, %r732, 19;
	shf.r.wrap.b32 	%r735, %r732, %r733, 19;
	mov.b64 	%rd796, {%r735, %r734};
	shf.l.wrap.b32 	%r736, %r732, %r733, 3;
	shf.l.wrap.b32 	%r737, %r733, %r732, 3;
	mov.b64 	%rd797, {%r737, %r736};
	shr.u64 	%rd798, %rd782, 6;
	xor.b64  	%rd799, %rd796, %rd798;
	xor.b64  	%rd800, %rd799, %rd797;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r738,%dummy}, %rd301;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r739}, %rd301;
	}
	shf.r.wrap.b32 	%r740, %r739, %r738, 1;
	shf.r.wrap.b32 	%r741, %r738, %r739, 1;
	mov.b64 	%rd801, {%r741, %r740};
	shf.r.wrap.b32 	%r742, %r739, %r738, 8;
	shf.r.wrap.b32 	%r743, %r738, %r739, 8;
	mov.b64 	%rd802, {%r743, %r742};
	shr.u64 	%rd803, %rd301, 7;
	xor.b64  	%rd804, %rd801, %rd803;
	xor.b64  	%rd805, %rd804, %rd802;
	add.s64 	%rd806, %rd717, %rd300;
	add.s64 	%rd807, %rd806, %rd800;
	add.s64 	%rd808, %rd807, %rd805;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r744,%dummy}, %rd795;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r745}, %rd795;
	}
	shf.r.wrap.b32 	%r746, %r745, %r744, 19;
	shf.r.wrap.b32 	%r747, %r744, %r745, 19;
	mov.b64 	%rd809, {%r747, %r746};
	shf.l.wrap.b32 	%r748, %r744, %r745, 3;
	shf.l.wrap.b32 	%r749, %r745, %r744, 3;
	mov.b64 	%rd810, {%r749, %r748};
	shr.u64 	%rd811, %rd795, 6;
	xor.b64  	%rd812, %rd809, %rd811;
	xor.b64  	%rd813, %rd812, %rd810;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r750,%dummy}, %rd302;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r751}, %rd302;
	}
	shf.r.wrap.b32 	%r752, %r751, %r750, 1;
	shf.r.wrap.b32 	%r753, %r750, %r751, 1;
	mov.b64 	%rd814, {%r753, %r752};
	shf.r.wrap.b32 	%r754, %r751, %r750, 8;
	shf.r.wrap.b32 	%r755, %r750, %r751, 8;
	mov.b64 	%rd815, {%r755, %r754};
	shr.u64 	%rd816, %rd302, 7;
	xor.b64  	%rd817, %rd814, %rd816;
	xor.b64  	%rd818, %rd817, %rd815;
	add.s64 	%rd819, %rd730, %rd301;
	add.s64 	%rd820, %rd819, %rd813;
	add.s64 	%rd821, %rd820, %rd818;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r756,%dummy}, %rd808;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r757}, %rd808;
	}
	shf.r.wrap.b32 	%r758, %r757, %r756, 19;
	shf.r.wrap.b32 	%r759, %r756, %r757, 19;
	mov.b64 	%rd822, {%r759, %r758};
	shf.l.wrap.b32 	%r760, %r756, %r757, 3;
	shf.l.wrap.b32 	%r761, %r757, %r756, 3;
	mov.b64 	%rd823, {%r761, %r760};
	shr.u64 	%rd824, %rd808, 6;
	xor.b64  	%rd825, %rd822, %rd824;
	xor.b64  	%rd826, %rd825, %rd823;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r762,%dummy}, %rd303;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r763}, %rd303;
	}
	shf.r.wrap.b32 	%r764, %r763, %r762, 1;
	shf.r.wrap.b32 	%r765, %r762, %r763, 1;
	mov.b64 	%rd827, {%r765, %r764};
	shf.r.wrap.b32 	%r766, %r763, %r762, 8;
	shf.r.wrap.b32 	%r767, %r762, %r763, 8;
	mov.b64 	%rd828, {%r767, %r766};
	shr.u64 	%rd829, %rd303, 7;
	xor.b64  	%rd830, %rd827, %rd829;
	xor.b64  	%rd831, %rd830, %rd828;
	add.s64 	%rd832, %rd743, %rd302;
	add.s64 	%rd833, %rd832, %rd826;
	add.s64 	%rd834, %rd833, %rd831;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r768,%dummy}, %rd821;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r769}, %rd821;
	}
	shf.r.wrap.b32 	%r770, %r769, %r768, 19;
	shf.r.wrap.b32 	%r771, %r768, %r769, 19;
	mov.b64 	%rd835, {%r771, %r770};
	shf.l.wrap.b32 	%r772, %r768, %r769, 3;
	shf.l.wrap.b32 	%r773, %r769, %r768, 3;
	mov.b64 	%rd836, {%r773, %r772};
	shr.u64 	%rd837, %rd821, 6;
	xor.b64  	%rd838, %rd835, %rd837;
	xor.b64  	%rd839, %rd838, %rd836;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r774,%dummy}, %rd304;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r775}, %rd304;
	}
	shf.r.wrap.b32 	%r776, %r775, %r774, 1;
	shf.r.wrap.b32 	%r777, %r774, %r775, 1;
	mov.b64 	%rd840, {%r777, %r776};
	shf.r.wrap.b32 	%r778, %r775, %r774, 8;
	shf.r.wrap.b32 	%r779, %r774, %r775, 8;
	mov.b64 	%rd841, {%r779, %r778};
	shr.u64 	%rd842, %rd304, 7;
	xor.b64  	%rd843, %rd840, %rd842;
	xor.b64  	%rd844, %rd843, %rd841;
	add.s64 	%rd845, %rd756, %rd303;
	add.s64 	%rd846, %rd845, %rd839;
	add.s64 	%rd847, %rd846, %rd844;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r780,%dummy}, %rd834;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r781}, %rd834;
	}
	shf.r.wrap.b32 	%r782, %r781, %r780, 19;
	shf.r.wrap.b32 	%r783, %r780, %r781, 19;
	mov.b64 	%rd848, {%r783, %r782};
	shf.l.wrap.b32 	%r784, %r780, %r781, 3;
	shf.l.wrap.b32 	%r785, %r781, %r780, 3;
	mov.b64 	%rd849, {%r785, %r784};
	shr.u64 	%rd850, %rd834, 6;
	xor.b64  	%rd851, %rd848, %rd850;
	xor.b64  	%rd852, %rd851, %rd849;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r786,%dummy}, %rd305;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r787}, %rd305;
	}
	shf.r.wrap.b32 	%r788, %r787, %r786, 1;
	shf.r.wrap.b32 	%r789, %r786, %r787, 1;
	mov.b64 	%rd853, {%r789, %r788};
	shf.r.wrap.b32 	%r790, %r787, %r786, 8;
	shf.r.wrap.b32 	%r791, %r786, %r787, 8;
	mov.b64 	%rd854, {%r791, %r790};
	shr.u64 	%rd855, %rd305, 7;
	xor.b64  	%rd856, %rd853, %rd855;
	xor.b64  	%rd857, %rd856, %rd854;
	add.s64 	%rd858, %rd769, %rd304;
	add.s64 	%rd859, %rd858, %rd852;
	add.s64 	%rd860, %rd859, %rd857;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r792,%dummy}, %rd847;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r793}, %rd847;
	}
	shf.r.wrap.b32 	%r794, %r793, %r792, 19;
	shf.r.wrap.b32 	%r795, %r792, %r793, 19;
	mov.b64 	%rd861, {%r795, %r794};
	shf.l.wrap.b32 	%r796, %r792, %r793, 3;
	shf.l.wrap.b32 	%r797, %r793, %r792, 3;
	mov.b64 	%rd862, {%r797, %r796};
	shr.u64 	%rd863, %rd847, 6;
	xor.b64  	%rd864, %rd861, %rd863;
	xor.b64  	%rd865, %rd864, %rd862;
	shf.r.wrap.b32 	%r798, %r637, %r636, 1;
	shf.r.wrap.b32 	%r799, %r636, %r637, 1;
	mov.b64 	%rd866, {%r799, %r798};
	shf.r.wrap.b32 	%r800, %r637, %r636, 8;
	shf.r.wrap.b32 	%r801, %r636, %r637, 8;
	mov.b64 	%rd867, {%r801, %r800};
	shr.u64 	%rd868, %rd306, 7;
	xor.b64  	%rd869, %rd866, %rd868;
	xor.b64  	%rd870, %rd869, %rd867;
	add.s64 	%rd871, %rd782, %rd305;
	add.s64 	%rd872, %rd871, %rd865;
	add.s64 	%rd873, %rd872, %rd870;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r802,%dummy}, %rd860;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r803}, %rd860;
	}
	shf.r.wrap.b32 	%r804, %r803, %r802, 19;
	shf.r.wrap.b32 	%r805, %r802, %r803, 19;
	mov.b64 	%rd874, {%r805, %r804};
	shf.l.wrap.b32 	%r806, %r802, %r803, 3;
	shf.l.wrap.b32 	%r807, %r803, %r802, 3;
	mov.b64 	%rd875, {%r807, %r806};
	shr.u64 	%rd876, %rd860, 6;
	xor.b64  	%rd877, %rd874, %rd876;
	xor.b64  	%rd878, %rd877, %rd875;
	shf.r.wrap.b32 	%r808, %r649, %r648, 1;
	shf.r.wrap.b32 	%r809, %r648, %r649, 1;
	mov.b64 	%rd879, {%r809, %r808};
	shf.r.wrap.b32 	%r810, %r649, %r648, 8;
	shf.r.wrap.b32 	%r811, %r648, %r649, 8;
	mov.b64 	%rd880, {%r811, %r810};
	shr.u64 	%rd881, %rd307, 7;
	xor.b64  	%rd882, %rd879, %rd881;
	xor.b64  	%rd883, %rd882, %rd880;
	add.s64 	%rd884, %rd795, %rd306;
	add.s64 	%rd885, %rd884, %rd878;
	add.s64 	%rd886, %rd885, %rd883;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r812,%dummy}, %rd873;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r813}, %rd873;
	}
	shf.r.wrap.b32 	%r814, %r813, %r812, 19;
	shf.r.wrap.b32 	%r815, %r812, %r813, 19;
	mov.b64 	%rd887, {%r815, %r814};
	shf.l.wrap.b32 	%r816, %r812, %r813, 3;
	shf.l.wrap.b32 	%r817, %r813, %r812, 3;
	mov.b64 	%rd888, {%r817, %r816};
	shr.u64 	%rd889, %rd873, 6;
	xor.b64  	%rd890, %rd887, %rd889;
	xor.b64  	%rd891, %rd890, %rd888;
	shf.r.wrap.b32 	%r818, %r661, %r660, 1;
	shf.r.wrap.b32 	%r819, %r660, %r661, 1;
	mov.b64 	%rd892, {%r819, %r818};
	shf.r.wrap.b32 	%r820, %r661, %r660, 8;
	shf.r.wrap.b32 	%r821, %r660, %r661, 8;
	mov.b64 	%rd893, {%r821, %r820};
	shr.u64 	%rd894, %rd704, 7;
	xor.b64  	%rd895, %rd892, %rd894;
	xor.b64  	%rd896, %rd895, %rd893;
	add.s64 	%rd897, %rd808, %rd307;
	add.s64 	%rd898, %rd897, %rd891;
	add.s64 	%rd899, %rd898, %rd896;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r822,%dummy}, %rd680;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r823}, %rd680;
	}
	shf.r.wrap.b32 	%r824, %r823, %r822, 14;
	shf.r.wrap.b32 	%r825, %r822, %r823, 14;
	mov.b64 	%rd900, {%r825, %r824};
	shf.r.wrap.b32 	%r826, %r823, %r822, 18;
	shf.r.wrap.b32 	%r827, %r822, %r823, 18;
	mov.b64 	%rd901, {%r827, %r826};
	xor.b64  	%rd902, %rd901, %rd900;
	shf.l.wrap.b32 	%r828, %r822, %r823, 23;
	shf.l.wrap.b32 	%r829, %r823, %r822, 23;
	mov.b64 	%rd903, {%r829, %r828};
	xor.b64  	%rd904, %rd902, %rd903;
	xor.b64  	%rd905, %rd656, %rd632;
	and.b64  	%rd906, %rd905, %rd680;
	xor.b64  	%rd907, %rd906, %rd632;
	add.s64 	%rd908, %rd907, %rd608;
	add.s64 	%rd909, %rd908, %rd704;
	ld.const.u64 	%rd5905, [k_sha512+128];
	add.s64 	%rd910, %rd909, %rd5905;
	add.s64 	%rd911, %rd910, %rd904;
	add.s64 	%rd912, %rd911, %rd619;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r830,%dummy}, %rd691;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r831}, %rd691;
	}
	shf.r.wrap.b32 	%r832, %r831, %r830, 28;
	shf.r.wrap.b32 	%r833, %r830, %r831, 28;
	mov.b64 	%rd913, {%r833, %r832};
	shf.l.wrap.b32 	%r834, %r830, %r831, 30;
	shf.l.wrap.b32 	%r835, %r831, %r830, 30;
	mov.b64 	%rd914, {%r835, %r834};
	xor.b64  	%rd915, %rd914, %rd913;
	shf.l.wrap.b32 	%r836, %r830, %r831, 25;
	shf.l.wrap.b32 	%r837, %r831, %r830, 25;
	mov.b64 	%rd916, {%r837, %r836};
	xor.b64  	%rd917, %rd915, %rd916;
	xor.b64  	%rd918, %rd691, %rd643;
	xor.b64  	%rd919, %rd691, %rd667;
	and.b64  	%rd920, %rd919, %rd918;
	xor.b64  	%rd921, %rd920, %rd691;
	add.s64 	%rd922, %rd911, %rd921;
	add.s64 	%rd923, %rd922, %rd917;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r838,%dummy}, %rd912;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r839}, %rd912;
	}
	shf.r.wrap.b32 	%r840, %r839, %r838, 14;
	shf.r.wrap.b32 	%r841, %r838, %r839, 14;
	mov.b64 	%rd924, {%r841, %r840};
	shf.r.wrap.b32 	%r842, %r839, %r838, 18;
	shf.r.wrap.b32 	%r843, %r838, %r839, 18;
	mov.b64 	%rd925, {%r843, %r842};
	xor.b64  	%rd926, %rd925, %rd924;
	shf.l.wrap.b32 	%r844, %r838, %r839, 23;
	shf.l.wrap.b32 	%r845, %r839, %r838, 23;
	mov.b64 	%rd927, {%r845, %r844};
	xor.b64  	%rd928, %rd926, %rd927;
	xor.b64  	%rd929, %rd680, %rd656;
	and.b64  	%rd930, %rd912, %rd929;
	xor.b64  	%rd931, %rd930, %rd656;
	add.s64 	%rd932, %rd717, %rd632;
	ld.const.u64 	%rd5904, [k_sha512+136];
	add.s64 	%rd933, %rd932, %rd5904;
	add.s64 	%rd934, %rd933, %rd931;
	add.s64 	%rd935, %rd934, %rd928;
	add.s64 	%rd936, %rd935, %rd643;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r846,%dummy}, %rd923;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r847}, %rd923;
	}
	shf.r.wrap.b32 	%r848, %r847, %r846, 28;
	shf.r.wrap.b32 	%r849, %r846, %r847, 28;
	mov.b64 	%rd937, {%r849, %r848};
	shf.l.wrap.b32 	%r850, %r846, %r847, 30;
	shf.l.wrap.b32 	%r851, %r847, %r846, 30;
	mov.b64 	%rd938, {%r851, %r850};
	xor.b64  	%rd939, %rd938, %rd937;
	shf.l.wrap.b32 	%r852, %r846, %r847, 25;
	shf.l.wrap.b32 	%r853, %r847, %r846, 25;
	mov.b64 	%rd940, {%r853, %r852};
	xor.b64  	%rd941, %rd939, %rd940;
	xor.b64  	%rd942, %rd923, %rd667;
	xor.b64  	%rd943, %rd923, %rd691;
	and.b64  	%rd944, %rd943, %rd942;
	xor.b64  	%rd945, %rd944, %rd923;
	add.s64 	%rd946, %rd935, %rd945;
	add.s64 	%rd947, %rd946, %rd941;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r854,%dummy}, %rd936;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r855}, %rd936;
	}
	shf.r.wrap.b32 	%r856, %r855, %r854, 14;
	shf.r.wrap.b32 	%r857, %r854, %r855, 14;
	mov.b64 	%rd948, {%r857, %r856};
	shf.r.wrap.b32 	%r858, %r855, %r854, 18;
	shf.r.wrap.b32 	%r859, %r854, %r855, 18;
	mov.b64 	%rd949, {%r859, %r858};
	xor.b64  	%rd950, %rd949, %rd948;
	shf.l.wrap.b32 	%r860, %r854, %r855, 23;
	shf.l.wrap.b32 	%r861, %r855, %r854, 23;
	mov.b64 	%rd951, {%r861, %r860};
	xor.b64  	%rd952, %rd950, %rd951;
	xor.b64  	%rd953, %rd912, %rd680;
	and.b64  	%rd954, %rd936, %rd953;
	xor.b64  	%rd955, %rd954, %rd680;
	add.s64 	%rd956, %rd730, %rd656;
	ld.const.u64 	%rd5903, [k_sha512+144];
	add.s64 	%rd957, %rd956, %rd5903;
	add.s64 	%rd958, %rd957, %rd955;
	add.s64 	%rd959, %rd958, %rd952;
	add.s64 	%rd960, %rd959, %rd667;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r862,%dummy}, %rd947;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r863}, %rd947;
	}
	shf.r.wrap.b32 	%r864, %r863, %r862, 28;
	shf.r.wrap.b32 	%r865, %r862, %r863, 28;
	mov.b64 	%rd961, {%r865, %r864};
	shf.l.wrap.b32 	%r866, %r862, %r863, 30;
	shf.l.wrap.b32 	%r867, %r863, %r862, 30;
	mov.b64 	%rd962, {%r867, %r866};
	xor.b64  	%rd963, %rd962, %rd961;
	shf.l.wrap.b32 	%r868, %r862, %r863, 25;
	shf.l.wrap.b32 	%r869, %r863, %r862, 25;
	mov.b64 	%rd964, {%r869, %r868};
	xor.b64  	%rd965, %rd963, %rd964;
	xor.b64  	%rd966, %rd947, %rd691;
	xor.b64  	%rd967, %rd947, %rd923;
	and.b64  	%rd968, %rd967, %rd966;
	xor.b64  	%rd969, %rd968, %rd947;
	add.s64 	%rd970, %rd959, %rd969;
	add.s64 	%rd971, %rd970, %rd965;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r870,%dummy}, %rd960;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r871}, %rd960;
	}
	shf.r.wrap.b32 	%r872, %r871, %r870, 14;
	shf.r.wrap.b32 	%r873, %r870, %r871, 14;
	mov.b64 	%rd972, {%r873, %r872};
	shf.r.wrap.b32 	%r874, %r871, %r870, 18;
	shf.r.wrap.b32 	%r875, %r870, %r871, 18;
	mov.b64 	%rd973, {%r875, %r874};
	xor.b64  	%rd974, %rd973, %rd972;
	shf.l.wrap.b32 	%r876, %r870, %r871, 23;
	shf.l.wrap.b32 	%r877, %r871, %r870, 23;
	mov.b64 	%rd975, {%r877, %r876};
	xor.b64  	%rd976, %rd974, %rd975;
	xor.b64  	%rd977, %rd936, %rd912;
	and.b64  	%rd978, %rd960, %rd977;
	xor.b64  	%rd979, %rd978, %rd912;
	add.s64 	%rd980, %rd743, %rd680;
	ld.const.u64 	%rd5902, [k_sha512+152];
	add.s64 	%rd981, %rd980, %rd5902;
	add.s64 	%rd982, %rd981, %rd979;
	add.s64 	%rd983, %rd982, %rd976;
	add.s64 	%rd984, %rd983, %rd691;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r878,%dummy}, %rd971;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r879}, %rd971;
	}
	shf.r.wrap.b32 	%r880, %r879, %r878, 28;
	shf.r.wrap.b32 	%r881, %r878, %r879, 28;
	mov.b64 	%rd985, {%r881, %r880};
	shf.l.wrap.b32 	%r882, %r878, %r879, 30;
	shf.l.wrap.b32 	%r883, %r879, %r878, 30;
	mov.b64 	%rd986, {%r883, %r882};
	xor.b64  	%rd987, %rd986, %rd985;
	shf.l.wrap.b32 	%r884, %r878, %r879, 25;
	shf.l.wrap.b32 	%r885, %r879, %r878, 25;
	mov.b64 	%rd988, {%r885, %r884};
	xor.b64  	%rd989, %rd987, %rd988;
	xor.b64  	%rd990, %rd971, %rd923;
	xor.b64  	%rd991, %rd971, %rd947;
	and.b64  	%rd992, %rd991, %rd990;
	xor.b64  	%rd993, %rd992, %rd971;
	add.s64 	%rd994, %rd983, %rd993;
	add.s64 	%rd995, %rd994, %rd989;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r886,%dummy}, %rd984;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r887}, %rd984;
	}
	shf.r.wrap.b32 	%r888, %r887, %r886, 14;
	shf.r.wrap.b32 	%r889, %r886, %r887, 14;
	mov.b64 	%rd996, {%r889, %r888};
	shf.r.wrap.b32 	%r890, %r887, %r886, 18;
	shf.r.wrap.b32 	%r891, %r886, %r887, 18;
	mov.b64 	%rd997, {%r891, %r890};
	xor.b64  	%rd998, %rd997, %rd996;
	shf.l.wrap.b32 	%r892, %r886, %r887, 23;
	shf.l.wrap.b32 	%r893, %r887, %r886, 23;
	mov.b64 	%rd999, {%r893, %r892};
	xor.b64  	%rd1000, %rd998, %rd999;
	xor.b64  	%rd1001, %rd960, %rd936;
	and.b64  	%rd1002, %rd984, %rd1001;
	xor.b64  	%rd1003, %rd1002, %rd936;
	add.s64 	%rd1004, %rd912, %rd756;
	ld.const.u64 	%rd5901, [k_sha512+160];
	add.s64 	%rd1005, %rd1004, %rd5901;
	add.s64 	%rd1006, %rd1005, %rd1003;
	add.s64 	%rd1007, %rd1006, %rd1000;
	add.s64 	%rd1008, %rd1007, %rd923;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r894,%dummy}, %rd995;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r895}, %rd995;
	}
	shf.r.wrap.b32 	%r896, %r895, %r894, 28;
	shf.r.wrap.b32 	%r897, %r894, %r895, 28;
	mov.b64 	%rd1009, {%r897, %r896};
	shf.l.wrap.b32 	%r898, %r894, %r895, 30;
	shf.l.wrap.b32 	%r899, %r895, %r894, 30;
	mov.b64 	%rd1010, {%r899, %r898};
	xor.b64  	%rd1011, %rd1010, %rd1009;
	shf.l.wrap.b32 	%r900, %r894, %r895, 25;
	shf.l.wrap.b32 	%r901, %r895, %r894, 25;
	mov.b64 	%rd1012, {%r901, %r900};
	xor.b64  	%rd1013, %rd1011, %rd1012;
	xor.b64  	%rd1014, %rd995, %rd947;
	xor.b64  	%rd1015, %rd995, %rd971;
	and.b64  	%rd1016, %rd1015, %rd1014;
	xor.b64  	%rd1017, %rd1016, %rd995;
	add.s64 	%rd1018, %rd1007, %rd1017;
	add.s64 	%rd1019, %rd1018, %rd1013;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r902,%dummy}, %rd1008;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r903}, %rd1008;
	}
	shf.r.wrap.b32 	%r904, %r903, %r902, 14;
	shf.r.wrap.b32 	%r905, %r902, %r903, 14;
	mov.b64 	%rd1020, {%r905, %r904};
	shf.r.wrap.b32 	%r906, %r903, %r902, 18;
	shf.r.wrap.b32 	%r907, %r902, %r903, 18;
	mov.b64 	%rd1021, {%r907, %r906};
	xor.b64  	%rd1022, %rd1021, %rd1020;
	shf.l.wrap.b32 	%r908, %r902, %r903, 23;
	shf.l.wrap.b32 	%r909, %r903, %r902, 23;
	mov.b64 	%rd1023, {%r909, %r908};
	xor.b64  	%rd1024, %rd1022, %rd1023;
	xor.b64  	%rd1025, %rd984, %rd960;
	and.b64  	%rd1026, %rd1008, %rd1025;
	xor.b64  	%rd1027, %rd1026, %rd960;
	add.s64 	%rd1028, %rd936, %rd769;
	ld.const.u64 	%rd5900, [k_sha512+168];
	add.s64 	%rd1029, %rd1028, %rd5900;
	add.s64 	%rd1030, %rd1029, %rd1027;
	add.s64 	%rd1031, %rd1030, %rd1024;
	add.s64 	%rd1032, %rd1031, %rd947;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r910,%dummy}, %rd1019;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r911}, %rd1019;
	}
	shf.r.wrap.b32 	%r912, %r911, %r910, 28;
	shf.r.wrap.b32 	%r913, %r910, %r911, 28;
	mov.b64 	%rd1033, {%r913, %r912};
	shf.l.wrap.b32 	%r914, %r910, %r911, 30;
	shf.l.wrap.b32 	%r915, %r911, %r910, 30;
	mov.b64 	%rd1034, {%r915, %r914};
	xor.b64  	%rd1035, %rd1034, %rd1033;
	shf.l.wrap.b32 	%r916, %r910, %r911, 25;
	shf.l.wrap.b32 	%r917, %r911, %r910, 25;
	mov.b64 	%rd1036, {%r917, %r916};
	xor.b64  	%rd1037, %rd1035, %rd1036;
	xor.b64  	%rd1038, %rd1019, %rd971;
	xor.b64  	%rd1039, %rd1019, %rd995;
	and.b64  	%rd1040, %rd1039, %rd1038;
	xor.b64  	%rd1041, %rd1040, %rd1019;
	add.s64 	%rd1042, %rd1031, %rd1041;
	add.s64 	%rd1043, %rd1042, %rd1037;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r918,%dummy}, %rd1032;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r919}, %rd1032;
	}
	shf.r.wrap.b32 	%r920, %r919, %r918, 14;
	shf.r.wrap.b32 	%r921, %r918, %r919, 14;
	mov.b64 	%rd1044, {%r921, %r920};
	shf.r.wrap.b32 	%r922, %r919, %r918, 18;
	shf.r.wrap.b32 	%r923, %r918, %r919, 18;
	mov.b64 	%rd1045, {%r923, %r922};
	xor.b64  	%rd1046, %rd1045, %rd1044;
	shf.l.wrap.b32 	%r924, %r918, %r919, 23;
	shf.l.wrap.b32 	%r925, %r919, %r918, 23;
	mov.b64 	%rd1047, {%r925, %r924};
	xor.b64  	%rd1048, %rd1046, %rd1047;
	xor.b64  	%rd1049, %rd1008, %rd984;
	and.b64  	%rd1050, %rd1032, %rd1049;
	xor.b64  	%rd1051, %rd1050, %rd984;
	add.s64 	%rd1052, %rd960, %rd782;
	ld.const.u64 	%rd5899, [k_sha512+176];
	add.s64 	%rd1053, %rd1052, %rd5899;
	add.s64 	%rd1054, %rd1053, %rd1051;
	add.s64 	%rd1055, %rd1054, %rd1048;
	add.s64 	%rd1056, %rd1055, %rd971;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r926,%dummy}, %rd1043;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r927}, %rd1043;
	}
	shf.r.wrap.b32 	%r928, %r927, %r926, 28;
	shf.r.wrap.b32 	%r929, %r926, %r927, 28;
	mov.b64 	%rd1057, {%r929, %r928};
	shf.l.wrap.b32 	%r930, %r926, %r927, 30;
	shf.l.wrap.b32 	%r931, %r927, %r926, 30;
	mov.b64 	%rd1058, {%r931, %r930};
	xor.b64  	%rd1059, %rd1058, %rd1057;
	shf.l.wrap.b32 	%r932, %r926, %r927, 25;
	shf.l.wrap.b32 	%r933, %r927, %r926, 25;
	mov.b64 	%rd1060, {%r933, %r932};
	xor.b64  	%rd1061, %rd1059, %rd1060;
	xor.b64  	%rd1062, %rd1043, %rd995;
	xor.b64  	%rd1063, %rd1043, %rd1019;
	and.b64  	%rd1064, %rd1063, %rd1062;
	xor.b64  	%rd1065, %rd1064, %rd1043;
	add.s64 	%rd1066, %rd1055, %rd1065;
	add.s64 	%rd1067, %rd1066, %rd1061;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r934,%dummy}, %rd1056;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r935}, %rd1056;
	}
	shf.r.wrap.b32 	%r936, %r935, %r934, 14;
	shf.r.wrap.b32 	%r937, %r934, %r935, 14;
	mov.b64 	%rd1068, {%r937, %r936};
	shf.r.wrap.b32 	%r938, %r935, %r934, 18;
	shf.r.wrap.b32 	%r939, %r934, %r935, 18;
	mov.b64 	%rd1069, {%r939, %r938};
	xor.b64  	%rd1070, %rd1069, %rd1068;
	shf.l.wrap.b32 	%r940, %r934, %r935, 23;
	shf.l.wrap.b32 	%r941, %r935, %r934, 23;
	mov.b64 	%rd1071, {%r941, %r940};
	xor.b64  	%rd1072, %rd1070, %rd1071;
	xor.b64  	%rd1073, %rd1032, %rd1008;
	and.b64  	%rd1074, %rd1056, %rd1073;
	xor.b64  	%rd1075, %rd1074, %rd1008;
	add.s64 	%rd1076, %rd984, %rd795;
	ld.const.u64 	%rd5898, [k_sha512+184];
	add.s64 	%rd1077, %rd1076, %rd5898;
	add.s64 	%rd1078, %rd1077, %rd1075;
	add.s64 	%rd1079, %rd1078, %rd1072;
	add.s64 	%rd1080, %rd1079, %rd995;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r942,%dummy}, %rd1067;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r943}, %rd1067;
	}
	shf.r.wrap.b32 	%r944, %r943, %r942, 28;
	shf.r.wrap.b32 	%r945, %r942, %r943, 28;
	mov.b64 	%rd1081, {%r945, %r944};
	shf.l.wrap.b32 	%r946, %r942, %r943, 30;
	shf.l.wrap.b32 	%r947, %r943, %r942, 30;
	mov.b64 	%rd1082, {%r947, %r946};
	xor.b64  	%rd1083, %rd1082, %rd1081;
	shf.l.wrap.b32 	%r948, %r942, %r943, 25;
	shf.l.wrap.b32 	%r949, %r943, %r942, 25;
	mov.b64 	%rd1084, {%r949, %r948};
	xor.b64  	%rd1085, %rd1083, %rd1084;
	xor.b64  	%rd1086, %rd1067, %rd1019;
	xor.b64  	%rd1087, %rd1067, %rd1043;
	and.b64  	%rd1088, %rd1087, %rd1086;
	xor.b64  	%rd1089, %rd1088, %rd1067;
	add.s64 	%rd1090, %rd1079, %rd1089;
	add.s64 	%rd1091, %rd1090, %rd1085;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r950,%dummy}, %rd1080;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r951}, %rd1080;
	}
	shf.r.wrap.b32 	%r952, %r951, %r950, 14;
	shf.r.wrap.b32 	%r953, %r950, %r951, 14;
	mov.b64 	%rd1092, {%r953, %r952};
	shf.r.wrap.b32 	%r954, %r951, %r950, 18;
	shf.r.wrap.b32 	%r955, %r950, %r951, 18;
	mov.b64 	%rd1093, {%r955, %r954};
	xor.b64  	%rd1094, %rd1093, %rd1092;
	shf.l.wrap.b32 	%r956, %r950, %r951, 23;
	shf.l.wrap.b32 	%r957, %r951, %r950, 23;
	mov.b64 	%rd1095, {%r957, %r956};
	xor.b64  	%rd1096, %rd1094, %rd1095;
	xor.b64  	%rd1097, %rd1056, %rd1032;
	and.b64  	%rd1098, %rd1080, %rd1097;
	xor.b64  	%rd1099, %rd1098, %rd1032;
	add.s64 	%rd1100, %rd1008, %rd808;
	ld.const.u64 	%rd5897, [k_sha512+192];
	add.s64 	%rd1101, %rd1100, %rd5897;
	add.s64 	%rd1102, %rd1101, %rd1099;
	add.s64 	%rd1103, %rd1102, %rd1096;
	add.s64 	%rd1104, %rd1103, %rd1019;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r958,%dummy}, %rd1091;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r959}, %rd1091;
	}
	shf.r.wrap.b32 	%r960, %r959, %r958, 28;
	shf.r.wrap.b32 	%r961, %r958, %r959, 28;
	mov.b64 	%rd1105, {%r961, %r960};
	shf.l.wrap.b32 	%r962, %r958, %r959, 30;
	shf.l.wrap.b32 	%r963, %r959, %r958, 30;
	mov.b64 	%rd1106, {%r963, %r962};
	xor.b64  	%rd1107, %rd1106, %rd1105;
	shf.l.wrap.b32 	%r964, %r958, %r959, 25;
	shf.l.wrap.b32 	%r965, %r959, %r958, 25;
	mov.b64 	%rd1108, {%r965, %r964};
	xor.b64  	%rd1109, %rd1107, %rd1108;
	xor.b64  	%rd1110, %rd1091, %rd1043;
	xor.b64  	%rd1111, %rd1091, %rd1067;
	and.b64  	%rd1112, %rd1111, %rd1110;
	xor.b64  	%rd1113, %rd1112, %rd1091;
	add.s64 	%rd1114, %rd1103, %rd1113;
	add.s64 	%rd1115, %rd1114, %rd1109;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r966,%dummy}, %rd1104;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r967}, %rd1104;
	}
	shf.r.wrap.b32 	%r968, %r967, %r966, 14;
	shf.r.wrap.b32 	%r969, %r966, %r967, 14;
	mov.b64 	%rd1116, {%r969, %r968};
	shf.r.wrap.b32 	%r970, %r967, %r966, 18;
	shf.r.wrap.b32 	%r971, %r966, %r967, 18;
	mov.b64 	%rd1117, {%r971, %r970};
	xor.b64  	%rd1118, %rd1117, %rd1116;
	shf.l.wrap.b32 	%r972, %r966, %r967, 23;
	shf.l.wrap.b32 	%r973, %r967, %r966, 23;
	mov.b64 	%rd1119, {%r973, %r972};
	xor.b64  	%rd1120, %rd1118, %rd1119;
	xor.b64  	%rd1121, %rd1080, %rd1056;
	and.b64  	%rd1122, %rd1104, %rd1121;
	xor.b64  	%rd1123, %rd1122, %rd1056;
	add.s64 	%rd1124, %rd1032, %rd821;
	ld.const.u64 	%rd5896, [k_sha512+200];
	add.s64 	%rd1125, %rd1124, %rd5896;
	add.s64 	%rd1126, %rd1125, %rd1123;
	add.s64 	%rd1127, %rd1126, %rd1120;
	add.s64 	%rd1128, %rd1127, %rd1043;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r974,%dummy}, %rd1115;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r975}, %rd1115;
	}
	shf.r.wrap.b32 	%r976, %r975, %r974, 28;
	shf.r.wrap.b32 	%r977, %r974, %r975, 28;
	mov.b64 	%rd1129, {%r977, %r976};
	shf.l.wrap.b32 	%r978, %r974, %r975, 30;
	shf.l.wrap.b32 	%r979, %r975, %r974, 30;
	mov.b64 	%rd1130, {%r979, %r978};
	xor.b64  	%rd1131, %rd1130, %rd1129;
	shf.l.wrap.b32 	%r980, %r974, %r975, 25;
	shf.l.wrap.b32 	%r981, %r975, %r974, 25;
	mov.b64 	%rd1132, {%r981, %r980};
	xor.b64  	%rd1133, %rd1131, %rd1132;
	xor.b64  	%rd1134, %rd1115, %rd1067;
	xor.b64  	%rd1135, %rd1115, %rd1091;
	and.b64  	%rd1136, %rd1135, %rd1134;
	xor.b64  	%rd1137, %rd1136, %rd1115;
	add.s64 	%rd1138, %rd1127, %rd1137;
	add.s64 	%rd1139, %rd1138, %rd1133;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r982,%dummy}, %rd1128;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r983}, %rd1128;
	}
	shf.r.wrap.b32 	%r984, %r983, %r982, 14;
	shf.r.wrap.b32 	%r985, %r982, %r983, 14;
	mov.b64 	%rd1140, {%r985, %r984};
	shf.r.wrap.b32 	%r986, %r983, %r982, 18;
	shf.r.wrap.b32 	%r987, %r982, %r983, 18;
	mov.b64 	%rd1141, {%r987, %r986};
	xor.b64  	%rd1142, %rd1141, %rd1140;
	shf.l.wrap.b32 	%r988, %r982, %r983, 23;
	shf.l.wrap.b32 	%r989, %r983, %r982, 23;
	mov.b64 	%rd1143, {%r989, %r988};
	xor.b64  	%rd1144, %rd1142, %rd1143;
	xor.b64  	%rd1145, %rd1104, %rd1080;
	and.b64  	%rd1146, %rd1128, %rd1145;
	xor.b64  	%rd1147, %rd1146, %rd1080;
	add.s64 	%rd1148, %rd1056, %rd834;
	ld.const.u64 	%rd5895, [k_sha512+208];
	add.s64 	%rd1149, %rd1148, %rd5895;
	add.s64 	%rd1150, %rd1149, %rd1147;
	add.s64 	%rd1151, %rd1150, %rd1144;
	add.s64 	%rd1152, %rd1151, %rd1067;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r990,%dummy}, %rd1139;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r991}, %rd1139;
	}
	shf.r.wrap.b32 	%r992, %r991, %r990, 28;
	shf.r.wrap.b32 	%r993, %r990, %r991, 28;
	mov.b64 	%rd1153, {%r993, %r992};
	shf.l.wrap.b32 	%r994, %r990, %r991, 30;
	shf.l.wrap.b32 	%r995, %r991, %r990, 30;
	mov.b64 	%rd1154, {%r995, %r994};
	xor.b64  	%rd1155, %rd1154, %rd1153;
	shf.l.wrap.b32 	%r996, %r990, %r991, 25;
	shf.l.wrap.b32 	%r997, %r991, %r990, 25;
	mov.b64 	%rd1156, {%r997, %r996};
	xor.b64  	%rd1157, %rd1155, %rd1156;
	xor.b64  	%rd1158, %rd1139, %rd1091;
	xor.b64  	%rd1159, %rd1139, %rd1115;
	and.b64  	%rd1160, %rd1159, %rd1158;
	xor.b64  	%rd1161, %rd1160, %rd1139;
	add.s64 	%rd1162, %rd1151, %rd1161;
	add.s64 	%rd1163, %rd1162, %rd1157;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r998,%dummy}, %rd1152;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r999}, %rd1152;
	}
	shf.r.wrap.b32 	%r1000, %r999, %r998, 14;
	shf.r.wrap.b32 	%r1001, %r998, %r999, 14;
	mov.b64 	%rd1164, {%r1001, %r1000};
	shf.r.wrap.b32 	%r1002, %r999, %r998, 18;
	shf.r.wrap.b32 	%r1003, %r998, %r999, 18;
	mov.b64 	%rd1165, {%r1003, %r1002};
	xor.b64  	%rd1166, %rd1165, %rd1164;
	shf.l.wrap.b32 	%r1004, %r998, %r999, 23;
	shf.l.wrap.b32 	%r1005, %r999, %r998, 23;
	mov.b64 	%rd1167, {%r1005, %r1004};
	xor.b64  	%rd1168, %rd1166, %rd1167;
	xor.b64  	%rd1169, %rd1128, %rd1104;
	and.b64  	%rd1170, %rd1152, %rd1169;
	xor.b64  	%rd1171, %rd1170, %rd1104;
	add.s64 	%rd1172, %rd1080, %rd847;
	ld.const.u64 	%rd5894, [k_sha512+216];
	add.s64 	%rd1173, %rd1172, %rd5894;
	add.s64 	%rd1174, %rd1173, %rd1171;
	add.s64 	%rd1175, %rd1174, %rd1168;
	add.s64 	%rd1176, %rd1175, %rd1091;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1006,%dummy}, %rd1163;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1007}, %rd1163;
	}
	shf.r.wrap.b32 	%r1008, %r1007, %r1006, 28;
	shf.r.wrap.b32 	%r1009, %r1006, %r1007, 28;
	mov.b64 	%rd1177, {%r1009, %r1008};
	shf.l.wrap.b32 	%r1010, %r1006, %r1007, 30;
	shf.l.wrap.b32 	%r1011, %r1007, %r1006, 30;
	mov.b64 	%rd1178, {%r1011, %r1010};
	xor.b64  	%rd1179, %rd1178, %rd1177;
	shf.l.wrap.b32 	%r1012, %r1006, %r1007, 25;
	shf.l.wrap.b32 	%r1013, %r1007, %r1006, 25;
	mov.b64 	%rd1180, {%r1013, %r1012};
	xor.b64  	%rd1181, %rd1179, %rd1180;
	xor.b64  	%rd1182, %rd1163, %rd1115;
	xor.b64  	%rd1183, %rd1163, %rd1139;
	and.b64  	%rd1184, %rd1183, %rd1182;
	xor.b64  	%rd1185, %rd1184, %rd1163;
	add.s64 	%rd1186, %rd1175, %rd1185;
	add.s64 	%rd1187, %rd1186, %rd1181;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1014,%dummy}, %rd1176;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1015}, %rd1176;
	}
	shf.r.wrap.b32 	%r1016, %r1015, %r1014, 14;
	shf.r.wrap.b32 	%r1017, %r1014, %r1015, 14;
	mov.b64 	%rd1188, {%r1017, %r1016};
	shf.r.wrap.b32 	%r1018, %r1015, %r1014, 18;
	shf.r.wrap.b32 	%r1019, %r1014, %r1015, 18;
	mov.b64 	%rd1189, {%r1019, %r1018};
	xor.b64  	%rd1190, %rd1189, %rd1188;
	shf.l.wrap.b32 	%r1020, %r1014, %r1015, 23;
	shf.l.wrap.b32 	%r1021, %r1015, %r1014, 23;
	mov.b64 	%rd1191, {%r1021, %r1020};
	xor.b64  	%rd1192, %rd1190, %rd1191;
	xor.b64  	%rd1193, %rd1152, %rd1128;
	and.b64  	%rd1194, %rd1176, %rd1193;
	xor.b64  	%rd1195, %rd1194, %rd1128;
	add.s64 	%rd1196, %rd1104, %rd860;
	ld.const.u64 	%rd5893, [k_sha512+224];
	add.s64 	%rd1197, %rd1196, %rd5893;
	add.s64 	%rd1198, %rd1197, %rd1195;
	add.s64 	%rd1199, %rd1198, %rd1192;
	add.s64 	%rd1200, %rd1199, %rd1115;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1022,%dummy}, %rd1187;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1023}, %rd1187;
	}
	shf.r.wrap.b32 	%r1024, %r1023, %r1022, 28;
	shf.r.wrap.b32 	%r1025, %r1022, %r1023, 28;
	mov.b64 	%rd1201, {%r1025, %r1024};
	shf.l.wrap.b32 	%r1026, %r1022, %r1023, 30;
	shf.l.wrap.b32 	%r1027, %r1023, %r1022, 30;
	mov.b64 	%rd1202, {%r1027, %r1026};
	xor.b64  	%rd1203, %rd1202, %rd1201;
	shf.l.wrap.b32 	%r1028, %r1022, %r1023, 25;
	shf.l.wrap.b32 	%r1029, %r1023, %r1022, 25;
	mov.b64 	%rd1204, {%r1029, %r1028};
	xor.b64  	%rd1205, %rd1203, %rd1204;
	xor.b64  	%rd1206, %rd1187, %rd1139;
	xor.b64  	%rd1207, %rd1187, %rd1163;
	and.b64  	%rd1208, %rd1207, %rd1206;
	xor.b64  	%rd1209, %rd1208, %rd1187;
	add.s64 	%rd1210, %rd1199, %rd1209;
	add.s64 	%rd1211, %rd1210, %rd1205;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1030,%dummy}, %rd1200;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1031}, %rd1200;
	}
	shf.r.wrap.b32 	%r1032, %r1031, %r1030, 14;
	shf.r.wrap.b32 	%r1033, %r1030, %r1031, 14;
	mov.b64 	%rd1212, {%r1033, %r1032};
	shf.r.wrap.b32 	%r1034, %r1031, %r1030, 18;
	shf.r.wrap.b32 	%r1035, %r1030, %r1031, 18;
	mov.b64 	%rd1213, {%r1035, %r1034};
	xor.b64  	%rd1214, %rd1213, %rd1212;
	shf.l.wrap.b32 	%r1036, %r1030, %r1031, 23;
	shf.l.wrap.b32 	%r1037, %r1031, %r1030, 23;
	mov.b64 	%rd1215, {%r1037, %r1036};
	xor.b64  	%rd1216, %rd1214, %rd1215;
	xor.b64  	%rd1217, %rd1176, %rd1152;
	and.b64  	%rd1218, %rd1200, %rd1217;
	xor.b64  	%rd1219, %rd1218, %rd1152;
	add.s64 	%rd1220, %rd1128, %rd873;
	ld.const.u64 	%rd5892, [k_sha512+232];
	add.s64 	%rd1221, %rd1220, %rd5892;
	add.s64 	%rd1222, %rd1221, %rd1219;
	add.s64 	%rd1223, %rd1222, %rd1216;
	add.s64 	%rd1224, %rd1223, %rd1139;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1038,%dummy}, %rd1211;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1039}, %rd1211;
	}
	shf.r.wrap.b32 	%r1040, %r1039, %r1038, 28;
	shf.r.wrap.b32 	%r1041, %r1038, %r1039, 28;
	mov.b64 	%rd1225, {%r1041, %r1040};
	shf.l.wrap.b32 	%r1042, %r1038, %r1039, 30;
	shf.l.wrap.b32 	%r1043, %r1039, %r1038, 30;
	mov.b64 	%rd1226, {%r1043, %r1042};
	xor.b64  	%rd1227, %rd1226, %rd1225;
	shf.l.wrap.b32 	%r1044, %r1038, %r1039, 25;
	shf.l.wrap.b32 	%r1045, %r1039, %r1038, 25;
	mov.b64 	%rd1228, {%r1045, %r1044};
	xor.b64  	%rd1229, %rd1227, %rd1228;
	xor.b64  	%rd1230, %rd1211, %rd1163;
	xor.b64  	%rd1231, %rd1211, %rd1187;
	and.b64  	%rd1232, %rd1231, %rd1230;
	xor.b64  	%rd1233, %rd1232, %rd1211;
	add.s64 	%rd1234, %rd1223, %rd1233;
	add.s64 	%rd1235, %rd1234, %rd1229;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1046,%dummy}, %rd1224;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1047}, %rd1224;
	}
	shf.r.wrap.b32 	%r1048, %r1047, %r1046, 14;
	shf.r.wrap.b32 	%r1049, %r1046, %r1047, 14;
	mov.b64 	%rd1236, {%r1049, %r1048};
	shf.r.wrap.b32 	%r1050, %r1047, %r1046, 18;
	shf.r.wrap.b32 	%r1051, %r1046, %r1047, 18;
	mov.b64 	%rd1237, {%r1051, %r1050};
	xor.b64  	%rd1238, %rd1237, %rd1236;
	shf.l.wrap.b32 	%r1052, %r1046, %r1047, 23;
	shf.l.wrap.b32 	%r1053, %r1047, %r1046, 23;
	mov.b64 	%rd1239, {%r1053, %r1052};
	xor.b64  	%rd1240, %rd1238, %rd1239;
	xor.b64  	%rd1241, %rd1200, %rd1176;
	and.b64  	%rd1242, %rd1224, %rd1241;
	xor.b64  	%rd1243, %rd1242, %rd1176;
	add.s64 	%rd1244, %rd1152, %rd886;
	ld.const.u64 	%rd5891, [k_sha512+240];
	add.s64 	%rd1245, %rd1244, %rd5891;
	add.s64 	%rd1246, %rd1245, %rd1243;
	add.s64 	%rd1247, %rd1246, %rd1240;
	add.s64 	%rd1248, %rd1247, %rd1163;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1054,%dummy}, %rd1235;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1055}, %rd1235;
	}
	shf.r.wrap.b32 	%r1056, %r1055, %r1054, 28;
	shf.r.wrap.b32 	%r1057, %r1054, %r1055, 28;
	mov.b64 	%rd1249, {%r1057, %r1056};
	shf.l.wrap.b32 	%r1058, %r1054, %r1055, 30;
	shf.l.wrap.b32 	%r1059, %r1055, %r1054, 30;
	mov.b64 	%rd1250, {%r1059, %r1058};
	xor.b64  	%rd1251, %rd1250, %rd1249;
	shf.l.wrap.b32 	%r1060, %r1054, %r1055, 25;
	shf.l.wrap.b32 	%r1061, %r1055, %r1054, 25;
	mov.b64 	%rd1252, {%r1061, %r1060};
	xor.b64  	%rd1253, %rd1251, %rd1252;
	xor.b64  	%rd1254, %rd1235, %rd1187;
	xor.b64  	%rd1255, %rd1235, %rd1211;
	and.b64  	%rd1256, %rd1255, %rd1254;
	xor.b64  	%rd1257, %rd1256, %rd1235;
	add.s64 	%rd1258, %rd1247, %rd1257;
	add.s64 	%rd1259, %rd1258, %rd1253;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1062,%dummy}, %rd1248;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1063}, %rd1248;
	}
	shf.r.wrap.b32 	%r1064, %r1063, %r1062, 14;
	shf.r.wrap.b32 	%r1065, %r1062, %r1063, 14;
	mov.b64 	%rd1260, {%r1065, %r1064};
	shf.r.wrap.b32 	%r1066, %r1063, %r1062, 18;
	shf.r.wrap.b32 	%r1067, %r1062, %r1063, 18;
	mov.b64 	%rd1261, {%r1067, %r1066};
	xor.b64  	%rd1262, %rd1261, %rd1260;
	shf.l.wrap.b32 	%r1068, %r1062, %r1063, 23;
	shf.l.wrap.b32 	%r1069, %r1063, %r1062, 23;
	mov.b64 	%rd1263, {%r1069, %r1068};
	xor.b64  	%rd1264, %rd1262, %rd1263;
	xor.b64  	%rd1265, %rd1224, %rd1200;
	and.b64  	%rd1266, %rd1248, %rd1265;
	xor.b64  	%rd1267, %rd1266, %rd1200;
	add.s64 	%rd1268, %rd1176, %rd899;
	ld.const.u64 	%rd5890, [k_sha512+248];
	add.s64 	%rd1269, %rd1268, %rd5890;
	add.s64 	%rd1270, %rd1269, %rd1267;
	add.s64 	%rd1271, %rd1270, %rd1264;
	add.s64 	%rd1272, %rd1271, %rd1187;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1070,%dummy}, %rd1259;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1071}, %rd1259;
	}
	shf.r.wrap.b32 	%r1072, %r1071, %r1070, 28;
	shf.r.wrap.b32 	%r1073, %r1070, %r1071, 28;
	mov.b64 	%rd1273, {%r1073, %r1072};
	shf.l.wrap.b32 	%r1074, %r1070, %r1071, 30;
	shf.l.wrap.b32 	%r1075, %r1071, %r1070, 30;
	mov.b64 	%rd1274, {%r1075, %r1074};
	xor.b64  	%rd1275, %rd1274, %rd1273;
	shf.l.wrap.b32 	%r1076, %r1070, %r1071, 25;
	shf.l.wrap.b32 	%r1077, %r1071, %r1070, 25;
	mov.b64 	%rd1276, {%r1077, %r1076};
	xor.b64  	%rd1277, %rd1275, %rd1276;
	xor.b64  	%rd1278, %rd1259, %rd1211;
	xor.b64  	%rd1279, %rd1259, %rd1235;
	and.b64  	%rd1280, %rd1279, %rd1278;
	xor.b64  	%rd1281, %rd1280, %rd1259;
	add.s64 	%rd1282, %rd1271, %rd1281;
	add.s64 	%rd1283, %rd1282, %rd1277;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1078,%dummy}, %rd886;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1079}, %rd886;
	}
	shf.r.wrap.b32 	%r1080, %r1079, %r1078, 19;
	shf.r.wrap.b32 	%r1081, %r1078, %r1079, 19;
	mov.b64 	%rd1284, {%r1081, %r1080};
	shf.l.wrap.b32 	%r1082, %r1078, %r1079, 3;
	shf.l.wrap.b32 	%r1083, %r1079, %r1078, 3;
	mov.b64 	%rd1285, {%r1083, %r1082};
	shr.u64 	%rd1286, %rd886, 6;
	xor.b64  	%rd1287, %rd1284, %rd1286;
	xor.b64  	%rd1288, %rd1287, %rd1285;
	shf.r.wrap.b32 	%r1084, %r673, %r672, 1;
	shf.r.wrap.b32 	%r1085, %r672, %r673, 1;
	mov.b64 	%rd1289, {%r1085, %r1084};
	shf.r.wrap.b32 	%r1086, %r673, %r672, 8;
	shf.r.wrap.b32 	%r1087, %r672, %r673, 8;
	mov.b64 	%rd1290, {%r1087, %r1086};
	shr.u64 	%rd1291, %rd717, 7;
	xor.b64  	%rd1292, %rd1289, %rd1291;
	xor.b64  	%rd1293, %rd1292, %rd1290;
	add.s64 	%rd1294, %rd821, %rd704;
	add.s64 	%rd1295, %rd1294, %rd1288;
	add.s64 	%rd1296, %rd1295, %rd1293;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1088,%dummy}, %rd899;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1089}, %rd899;
	}
	shf.r.wrap.b32 	%r1090, %r1089, %r1088, 19;
	shf.r.wrap.b32 	%r1091, %r1088, %r1089, 19;
	mov.b64 	%rd1297, {%r1091, %r1090};
	shf.l.wrap.b32 	%r1092, %r1088, %r1089, 3;
	shf.l.wrap.b32 	%r1093, %r1089, %r1088, 3;
	mov.b64 	%rd1298, {%r1093, %r1092};
	shr.u64 	%rd1299, %rd899, 6;
	xor.b64  	%rd1300, %rd1297, %rd1299;
	xor.b64  	%rd1301, %rd1300, %rd1298;
	shf.r.wrap.b32 	%r1094, %r685, %r684, 1;
	shf.r.wrap.b32 	%r1095, %r684, %r685, 1;
	mov.b64 	%rd1302, {%r1095, %r1094};
	shf.r.wrap.b32 	%r1096, %r685, %r684, 8;
	shf.r.wrap.b32 	%r1097, %r684, %r685, 8;
	mov.b64 	%rd1303, {%r1097, %r1096};
	shr.u64 	%rd1304, %rd730, 7;
	xor.b64  	%rd1305, %rd1302, %rd1304;
	xor.b64  	%rd1306, %rd1305, %rd1303;
	add.s64 	%rd1307, %rd834, %rd717;
	add.s64 	%rd1308, %rd1307, %rd1301;
	add.s64 	%rd1309, %rd1308, %rd1306;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1098,%dummy}, %rd1296;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1099}, %rd1296;
	}
	shf.r.wrap.b32 	%r1100, %r1099, %r1098, 19;
	shf.r.wrap.b32 	%r1101, %r1098, %r1099, 19;
	mov.b64 	%rd1310, {%r1101, %r1100};
	shf.l.wrap.b32 	%r1102, %r1098, %r1099, 3;
	shf.l.wrap.b32 	%r1103, %r1099, %r1098, 3;
	mov.b64 	%rd1311, {%r1103, %r1102};
	shr.u64 	%rd1312, %rd1296, 6;
	xor.b64  	%rd1313, %rd1310, %rd1312;
	xor.b64  	%rd1314, %rd1313, %rd1311;
	shf.r.wrap.b32 	%r1104, %r697, %r696, 1;
	shf.r.wrap.b32 	%r1105, %r696, %r697, 1;
	mov.b64 	%rd1315, {%r1105, %r1104};
	shf.r.wrap.b32 	%r1106, %r697, %r696, 8;
	shf.r.wrap.b32 	%r1107, %r696, %r697, 8;
	mov.b64 	%rd1316, {%r1107, %r1106};
	shr.u64 	%rd1317, %rd743, 7;
	xor.b64  	%rd1318, %rd1315, %rd1317;
	xor.b64  	%rd1319, %rd1318, %rd1316;
	add.s64 	%rd1320, %rd847, %rd730;
	add.s64 	%rd1321, %rd1320, %rd1314;
	add.s64 	%rd1322, %rd1321, %rd1319;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1108,%dummy}, %rd1309;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1109}, %rd1309;
	}
	shf.r.wrap.b32 	%r1110, %r1109, %r1108, 19;
	shf.r.wrap.b32 	%r1111, %r1108, %r1109, 19;
	mov.b64 	%rd1323, {%r1111, %r1110};
	shf.l.wrap.b32 	%r1112, %r1108, %r1109, 3;
	shf.l.wrap.b32 	%r1113, %r1109, %r1108, 3;
	mov.b64 	%rd1324, {%r1113, %r1112};
	shr.u64 	%rd1325, %rd1309, 6;
	xor.b64  	%rd1326, %rd1323, %rd1325;
	xor.b64  	%rd1327, %rd1326, %rd1324;
	shf.r.wrap.b32 	%r1114, %r709, %r708, 1;
	shf.r.wrap.b32 	%r1115, %r708, %r709, 1;
	mov.b64 	%rd1328, {%r1115, %r1114};
	shf.r.wrap.b32 	%r1116, %r709, %r708, 8;
	shf.r.wrap.b32 	%r1117, %r708, %r709, 8;
	mov.b64 	%rd1329, {%r1117, %r1116};
	shr.u64 	%rd1330, %rd756, 7;
	xor.b64  	%rd1331, %rd1328, %rd1330;
	xor.b64  	%rd1332, %rd1331, %rd1329;
	add.s64 	%rd1333, %rd860, %rd743;
	add.s64 	%rd1334, %rd1333, %rd1327;
	add.s64 	%rd1335, %rd1334, %rd1332;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1118,%dummy}, %rd1322;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1119}, %rd1322;
	}
	shf.r.wrap.b32 	%r1120, %r1119, %r1118, 19;
	shf.r.wrap.b32 	%r1121, %r1118, %r1119, 19;
	mov.b64 	%rd1336, {%r1121, %r1120};
	shf.l.wrap.b32 	%r1122, %r1118, %r1119, 3;
	shf.l.wrap.b32 	%r1123, %r1119, %r1118, 3;
	mov.b64 	%rd1337, {%r1123, %r1122};
	shr.u64 	%rd1338, %rd1322, 6;
	xor.b64  	%rd1339, %rd1336, %rd1338;
	xor.b64  	%rd1340, %rd1339, %rd1337;
	shf.r.wrap.b32 	%r1124, %r721, %r720, 1;
	shf.r.wrap.b32 	%r1125, %r720, %r721, 1;
	mov.b64 	%rd1341, {%r1125, %r1124};
	shf.r.wrap.b32 	%r1126, %r721, %r720, 8;
	shf.r.wrap.b32 	%r1127, %r720, %r721, 8;
	mov.b64 	%rd1342, {%r1127, %r1126};
	shr.u64 	%rd1343, %rd769, 7;
	xor.b64  	%rd1344, %rd1341, %rd1343;
	xor.b64  	%rd1345, %rd1344, %rd1342;
	add.s64 	%rd1346, %rd873, %rd756;
	add.s64 	%rd1347, %rd1346, %rd1340;
	add.s64 	%rd1348, %rd1347, %rd1345;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1128,%dummy}, %rd1335;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1129}, %rd1335;
	}
	shf.r.wrap.b32 	%r1130, %r1129, %r1128, 19;
	shf.r.wrap.b32 	%r1131, %r1128, %r1129, 19;
	mov.b64 	%rd1349, {%r1131, %r1130};
	shf.l.wrap.b32 	%r1132, %r1128, %r1129, 3;
	shf.l.wrap.b32 	%r1133, %r1129, %r1128, 3;
	mov.b64 	%rd1350, {%r1133, %r1132};
	shr.u64 	%rd1351, %rd1335, 6;
	xor.b64  	%rd1352, %rd1349, %rd1351;
	xor.b64  	%rd1353, %rd1352, %rd1350;
	shf.r.wrap.b32 	%r1134, %r733, %r732, 1;
	shf.r.wrap.b32 	%r1135, %r732, %r733, 1;
	mov.b64 	%rd1354, {%r1135, %r1134};
	shf.r.wrap.b32 	%r1136, %r733, %r732, 8;
	shf.r.wrap.b32 	%r1137, %r732, %r733, 8;
	mov.b64 	%rd1355, {%r1137, %r1136};
	shr.u64 	%rd1356, %rd782, 7;
	xor.b64  	%rd1357, %rd1354, %rd1356;
	xor.b64  	%rd1358, %rd1357, %rd1355;
	add.s64 	%rd1359, %rd886, %rd769;
	add.s64 	%rd1360, %rd1359, %rd1353;
	add.s64 	%rd1361, %rd1360, %rd1358;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1138,%dummy}, %rd1348;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1139}, %rd1348;
	}
	shf.r.wrap.b32 	%r1140, %r1139, %r1138, 19;
	shf.r.wrap.b32 	%r1141, %r1138, %r1139, 19;
	mov.b64 	%rd1362, {%r1141, %r1140};
	shf.l.wrap.b32 	%r1142, %r1138, %r1139, 3;
	shf.l.wrap.b32 	%r1143, %r1139, %r1138, 3;
	mov.b64 	%rd1363, {%r1143, %r1142};
	shr.u64 	%rd1364, %rd1348, 6;
	xor.b64  	%rd1365, %rd1362, %rd1364;
	xor.b64  	%rd1366, %rd1365, %rd1363;
	shf.r.wrap.b32 	%r1144, %r745, %r744, 1;
	shf.r.wrap.b32 	%r1145, %r744, %r745, 1;
	mov.b64 	%rd1367, {%r1145, %r1144};
	shf.r.wrap.b32 	%r1146, %r745, %r744, 8;
	shf.r.wrap.b32 	%r1147, %r744, %r745, 8;
	mov.b64 	%rd1368, {%r1147, %r1146};
	shr.u64 	%rd1369, %rd795, 7;
	xor.b64  	%rd1370, %rd1367, %rd1369;
	xor.b64  	%rd1371, %rd1370, %rd1368;
	add.s64 	%rd1372, %rd899, %rd782;
	add.s64 	%rd1373, %rd1372, %rd1366;
	add.s64 	%rd1374, %rd1373, %rd1371;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1148,%dummy}, %rd1361;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1149}, %rd1361;
	}
	shf.r.wrap.b32 	%r1150, %r1149, %r1148, 19;
	shf.r.wrap.b32 	%r1151, %r1148, %r1149, 19;
	mov.b64 	%rd1375, {%r1151, %r1150};
	shf.l.wrap.b32 	%r1152, %r1148, %r1149, 3;
	shf.l.wrap.b32 	%r1153, %r1149, %r1148, 3;
	mov.b64 	%rd1376, {%r1153, %r1152};
	shr.u64 	%rd1377, %rd1361, 6;
	xor.b64  	%rd1378, %rd1375, %rd1377;
	xor.b64  	%rd1379, %rd1378, %rd1376;
	shf.r.wrap.b32 	%r1154, %r757, %r756, 1;
	shf.r.wrap.b32 	%r1155, %r756, %r757, 1;
	mov.b64 	%rd1380, {%r1155, %r1154};
	shf.r.wrap.b32 	%r1156, %r757, %r756, 8;
	shf.r.wrap.b32 	%r1157, %r756, %r757, 8;
	mov.b64 	%rd1381, {%r1157, %r1156};
	shr.u64 	%rd1382, %rd808, 7;
	xor.b64  	%rd1383, %rd1380, %rd1382;
	xor.b64  	%rd1384, %rd1383, %rd1381;
	add.s64 	%rd1385, %rd1296, %rd795;
	add.s64 	%rd1386, %rd1385, %rd1379;
	add.s64 	%rd1387, %rd1386, %rd1384;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1158,%dummy}, %rd1374;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1159}, %rd1374;
	}
	shf.r.wrap.b32 	%r1160, %r1159, %r1158, 19;
	shf.r.wrap.b32 	%r1161, %r1158, %r1159, 19;
	mov.b64 	%rd1388, {%r1161, %r1160};
	shf.l.wrap.b32 	%r1162, %r1158, %r1159, 3;
	shf.l.wrap.b32 	%r1163, %r1159, %r1158, 3;
	mov.b64 	%rd1389, {%r1163, %r1162};
	shr.u64 	%rd1390, %rd1374, 6;
	xor.b64  	%rd1391, %rd1388, %rd1390;
	xor.b64  	%rd1392, %rd1391, %rd1389;
	shf.r.wrap.b32 	%r1164, %r769, %r768, 1;
	shf.r.wrap.b32 	%r1165, %r768, %r769, 1;
	mov.b64 	%rd1393, {%r1165, %r1164};
	shf.r.wrap.b32 	%r1166, %r769, %r768, 8;
	shf.r.wrap.b32 	%r1167, %r768, %r769, 8;
	mov.b64 	%rd1394, {%r1167, %r1166};
	shr.u64 	%rd1395, %rd821, 7;
	xor.b64  	%rd1396, %rd1393, %rd1395;
	xor.b64  	%rd1397, %rd1396, %rd1394;
	add.s64 	%rd1398, %rd1309, %rd808;
	add.s64 	%rd1399, %rd1398, %rd1392;
	add.s64 	%rd1400, %rd1399, %rd1397;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1168,%dummy}, %rd1387;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1169}, %rd1387;
	}
	shf.r.wrap.b32 	%r1170, %r1169, %r1168, 19;
	shf.r.wrap.b32 	%r1171, %r1168, %r1169, 19;
	mov.b64 	%rd1401, {%r1171, %r1170};
	shf.l.wrap.b32 	%r1172, %r1168, %r1169, 3;
	shf.l.wrap.b32 	%r1173, %r1169, %r1168, 3;
	mov.b64 	%rd1402, {%r1173, %r1172};
	shr.u64 	%rd1403, %rd1387, 6;
	xor.b64  	%rd1404, %rd1401, %rd1403;
	xor.b64  	%rd1405, %rd1404, %rd1402;
	shf.r.wrap.b32 	%r1174, %r781, %r780, 1;
	shf.r.wrap.b32 	%r1175, %r780, %r781, 1;
	mov.b64 	%rd1406, {%r1175, %r1174};
	shf.r.wrap.b32 	%r1176, %r781, %r780, 8;
	shf.r.wrap.b32 	%r1177, %r780, %r781, 8;
	mov.b64 	%rd1407, {%r1177, %r1176};
	shr.u64 	%rd1408, %rd834, 7;
	xor.b64  	%rd1409, %rd1406, %rd1408;
	xor.b64  	%rd1410, %rd1409, %rd1407;
	add.s64 	%rd1411, %rd1322, %rd821;
	add.s64 	%rd1412, %rd1411, %rd1405;
	add.s64 	%rd1413, %rd1412, %rd1410;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1178,%dummy}, %rd1400;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1179}, %rd1400;
	}
	shf.r.wrap.b32 	%r1180, %r1179, %r1178, 19;
	shf.r.wrap.b32 	%r1181, %r1178, %r1179, 19;
	mov.b64 	%rd1414, {%r1181, %r1180};
	shf.l.wrap.b32 	%r1182, %r1178, %r1179, 3;
	shf.l.wrap.b32 	%r1183, %r1179, %r1178, 3;
	mov.b64 	%rd1415, {%r1183, %r1182};
	shr.u64 	%rd1416, %rd1400, 6;
	xor.b64  	%rd1417, %rd1414, %rd1416;
	xor.b64  	%rd1418, %rd1417, %rd1415;
	shf.r.wrap.b32 	%r1184, %r793, %r792, 1;
	shf.r.wrap.b32 	%r1185, %r792, %r793, 1;
	mov.b64 	%rd1419, {%r1185, %r1184};
	shf.r.wrap.b32 	%r1186, %r793, %r792, 8;
	shf.r.wrap.b32 	%r1187, %r792, %r793, 8;
	mov.b64 	%rd1420, {%r1187, %r1186};
	shr.u64 	%rd1421, %rd847, 7;
	xor.b64  	%rd1422, %rd1419, %rd1421;
	xor.b64  	%rd1423, %rd1422, %rd1420;
	add.s64 	%rd1424, %rd1335, %rd834;
	add.s64 	%rd1425, %rd1424, %rd1418;
	add.s64 	%rd1426, %rd1425, %rd1423;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1188,%dummy}, %rd1413;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1189}, %rd1413;
	}
	shf.r.wrap.b32 	%r1190, %r1189, %r1188, 19;
	shf.r.wrap.b32 	%r1191, %r1188, %r1189, 19;
	mov.b64 	%rd1427, {%r1191, %r1190};
	shf.l.wrap.b32 	%r1192, %r1188, %r1189, 3;
	shf.l.wrap.b32 	%r1193, %r1189, %r1188, 3;
	mov.b64 	%rd1428, {%r1193, %r1192};
	shr.u64 	%rd1429, %rd1413, 6;
	xor.b64  	%rd1430, %rd1427, %rd1429;
	xor.b64  	%rd1431, %rd1430, %rd1428;
	shf.r.wrap.b32 	%r1194, %r803, %r802, 1;
	shf.r.wrap.b32 	%r1195, %r802, %r803, 1;
	mov.b64 	%rd1432, {%r1195, %r1194};
	shf.r.wrap.b32 	%r1196, %r803, %r802, 8;
	shf.r.wrap.b32 	%r1197, %r802, %r803, 8;
	mov.b64 	%rd1433, {%r1197, %r1196};
	shr.u64 	%rd1434, %rd860, 7;
	xor.b64  	%rd1435, %rd1432, %rd1434;
	xor.b64  	%rd1436, %rd1435, %rd1433;
	add.s64 	%rd1437, %rd1348, %rd847;
	add.s64 	%rd1438, %rd1437, %rd1431;
	add.s64 	%rd1439, %rd1438, %rd1436;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1198,%dummy}, %rd1426;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1199}, %rd1426;
	}
	shf.r.wrap.b32 	%r1200, %r1199, %r1198, 19;
	shf.r.wrap.b32 	%r1201, %r1198, %r1199, 19;
	mov.b64 	%rd1440, {%r1201, %r1200};
	shf.l.wrap.b32 	%r1202, %r1198, %r1199, 3;
	shf.l.wrap.b32 	%r1203, %r1199, %r1198, 3;
	mov.b64 	%rd1441, {%r1203, %r1202};
	shr.u64 	%rd1442, %rd1426, 6;
	xor.b64  	%rd1443, %rd1440, %rd1442;
	xor.b64  	%rd1444, %rd1443, %rd1441;
	shf.r.wrap.b32 	%r1204, %r813, %r812, 1;
	shf.r.wrap.b32 	%r1205, %r812, %r813, 1;
	mov.b64 	%rd1445, {%r1205, %r1204};
	shf.r.wrap.b32 	%r1206, %r813, %r812, 8;
	shf.r.wrap.b32 	%r1207, %r812, %r813, 8;
	mov.b64 	%rd1446, {%r1207, %r1206};
	shr.u64 	%rd1447, %rd873, 7;
	xor.b64  	%rd1448, %rd1445, %rd1447;
	xor.b64  	%rd1449, %rd1448, %rd1446;
	add.s64 	%rd1450, %rd1361, %rd860;
	add.s64 	%rd1451, %rd1450, %rd1444;
	add.s64 	%rd1452, %rd1451, %rd1449;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1208,%dummy}, %rd1439;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1209}, %rd1439;
	}
	shf.r.wrap.b32 	%r1210, %r1209, %r1208, 19;
	shf.r.wrap.b32 	%r1211, %r1208, %r1209, 19;
	mov.b64 	%rd1453, {%r1211, %r1210};
	shf.l.wrap.b32 	%r1212, %r1208, %r1209, 3;
	shf.l.wrap.b32 	%r1213, %r1209, %r1208, 3;
	mov.b64 	%rd1454, {%r1213, %r1212};
	shr.u64 	%rd1455, %rd1439, 6;
	xor.b64  	%rd1456, %rd1453, %rd1455;
	xor.b64  	%rd1457, %rd1456, %rd1454;
	shf.r.wrap.b32 	%r1214, %r1079, %r1078, 1;
	shf.r.wrap.b32 	%r1215, %r1078, %r1079, 1;
	mov.b64 	%rd1458, {%r1215, %r1214};
	shf.r.wrap.b32 	%r1216, %r1079, %r1078, 8;
	shf.r.wrap.b32 	%r1217, %r1078, %r1079, 8;
	mov.b64 	%rd1459, {%r1217, %r1216};
	shr.u64 	%rd1460, %rd886, 7;
	xor.b64  	%rd1461, %rd1458, %rd1460;
	xor.b64  	%rd1462, %rd1461, %rd1459;
	add.s64 	%rd1463, %rd1374, %rd873;
	add.s64 	%rd1464, %rd1463, %rd1457;
	add.s64 	%rd1465, %rd1464, %rd1462;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1218,%dummy}, %rd1452;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1219}, %rd1452;
	}
	shf.r.wrap.b32 	%r1220, %r1219, %r1218, 19;
	shf.r.wrap.b32 	%r1221, %r1218, %r1219, 19;
	mov.b64 	%rd1466, {%r1221, %r1220};
	shf.l.wrap.b32 	%r1222, %r1218, %r1219, 3;
	shf.l.wrap.b32 	%r1223, %r1219, %r1218, 3;
	mov.b64 	%rd1467, {%r1223, %r1222};
	shr.u64 	%rd1468, %rd1452, 6;
	xor.b64  	%rd1469, %rd1466, %rd1468;
	xor.b64  	%rd1470, %rd1469, %rd1467;
	shf.r.wrap.b32 	%r1224, %r1089, %r1088, 1;
	shf.r.wrap.b32 	%r1225, %r1088, %r1089, 1;
	mov.b64 	%rd1471, {%r1225, %r1224};
	shf.r.wrap.b32 	%r1226, %r1089, %r1088, 8;
	shf.r.wrap.b32 	%r1227, %r1088, %r1089, 8;
	mov.b64 	%rd1472, {%r1227, %r1226};
	shr.u64 	%rd1473, %rd899, 7;
	xor.b64  	%rd1474, %rd1471, %rd1473;
	xor.b64  	%rd1475, %rd1474, %rd1472;
	add.s64 	%rd1476, %rd1387, %rd886;
	add.s64 	%rd1477, %rd1476, %rd1470;
	add.s64 	%rd1478, %rd1477, %rd1475;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1228,%dummy}, %rd1465;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1229}, %rd1465;
	}
	shf.r.wrap.b32 	%r1230, %r1229, %r1228, 19;
	shf.r.wrap.b32 	%r1231, %r1228, %r1229, 19;
	mov.b64 	%rd1479, {%r1231, %r1230};
	shf.l.wrap.b32 	%r1232, %r1228, %r1229, 3;
	shf.l.wrap.b32 	%r1233, %r1229, %r1228, 3;
	mov.b64 	%rd1480, {%r1233, %r1232};
	shr.u64 	%rd1481, %rd1465, 6;
	xor.b64  	%rd1482, %rd1479, %rd1481;
	xor.b64  	%rd1483, %rd1482, %rd1480;
	shf.r.wrap.b32 	%r1234, %r1099, %r1098, 1;
	shf.r.wrap.b32 	%r1235, %r1098, %r1099, 1;
	mov.b64 	%rd1484, {%r1235, %r1234};
	shf.r.wrap.b32 	%r1236, %r1099, %r1098, 8;
	shf.r.wrap.b32 	%r1237, %r1098, %r1099, 8;
	mov.b64 	%rd1485, {%r1237, %r1236};
	shr.u64 	%rd1486, %rd1296, 7;
	xor.b64  	%rd1487, %rd1484, %rd1486;
	xor.b64  	%rd1488, %rd1487, %rd1485;
	add.s64 	%rd1489, %rd1400, %rd899;
	add.s64 	%rd1490, %rd1489, %rd1483;
	add.s64 	%rd1491, %rd1490, %rd1488;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1238,%dummy}, %rd1272;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1239}, %rd1272;
	}
	shf.r.wrap.b32 	%r1240, %r1239, %r1238, 14;
	shf.r.wrap.b32 	%r1241, %r1238, %r1239, 14;
	mov.b64 	%rd1492, {%r1241, %r1240};
	shf.r.wrap.b32 	%r1242, %r1239, %r1238, 18;
	shf.r.wrap.b32 	%r1243, %r1238, %r1239, 18;
	mov.b64 	%rd1493, {%r1243, %r1242};
	xor.b64  	%rd1494, %rd1493, %rd1492;
	shf.l.wrap.b32 	%r1244, %r1238, %r1239, 23;
	shf.l.wrap.b32 	%r1245, %r1239, %r1238, 23;
	mov.b64 	%rd1495, {%r1245, %r1244};
	xor.b64  	%rd1496, %rd1494, %rd1495;
	xor.b64  	%rd1497, %rd1248, %rd1224;
	and.b64  	%rd1498, %rd1497, %rd1272;
	xor.b64  	%rd1499, %rd1498, %rd1224;
	add.s64 	%rd1500, %rd1499, %rd1200;
	add.s64 	%rd1501, %rd1500, %rd1296;
	ld.const.u64 	%rd5889, [k_sha512+256];
	add.s64 	%rd1502, %rd1501, %rd5889;
	add.s64 	%rd1503, %rd1502, %rd1496;
	add.s64 	%rd1504, %rd1503, %rd1211;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1246,%dummy}, %rd1283;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1247}, %rd1283;
	}
	shf.r.wrap.b32 	%r1248, %r1247, %r1246, 28;
	shf.r.wrap.b32 	%r1249, %r1246, %r1247, 28;
	mov.b64 	%rd1505, {%r1249, %r1248};
	shf.l.wrap.b32 	%r1250, %r1246, %r1247, 30;
	shf.l.wrap.b32 	%r1251, %r1247, %r1246, 30;
	mov.b64 	%rd1506, {%r1251, %r1250};
	xor.b64  	%rd1507, %rd1506, %rd1505;
	shf.l.wrap.b32 	%r1252, %r1246, %r1247, 25;
	shf.l.wrap.b32 	%r1253, %r1247, %r1246, 25;
	mov.b64 	%rd1508, {%r1253, %r1252};
	xor.b64  	%rd1509, %rd1507, %rd1508;
	xor.b64  	%rd1510, %rd1283, %rd1235;
	xor.b64  	%rd1511, %rd1283, %rd1259;
	and.b64  	%rd1512, %rd1511, %rd1510;
	xor.b64  	%rd1513, %rd1512, %rd1283;
	add.s64 	%rd1514, %rd1503, %rd1513;
	add.s64 	%rd1515, %rd1514, %rd1509;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1254,%dummy}, %rd1504;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1255}, %rd1504;
	}
	shf.r.wrap.b32 	%r1256, %r1255, %r1254, 14;
	shf.r.wrap.b32 	%r1257, %r1254, %r1255, 14;
	mov.b64 	%rd1516, {%r1257, %r1256};
	shf.r.wrap.b32 	%r1258, %r1255, %r1254, 18;
	shf.r.wrap.b32 	%r1259, %r1254, %r1255, 18;
	mov.b64 	%rd1517, {%r1259, %r1258};
	xor.b64  	%rd1518, %rd1517, %rd1516;
	shf.l.wrap.b32 	%r1260, %r1254, %r1255, 23;
	shf.l.wrap.b32 	%r1261, %r1255, %r1254, 23;
	mov.b64 	%rd1519, {%r1261, %r1260};
	xor.b64  	%rd1520, %rd1518, %rd1519;
	xor.b64  	%rd1521, %rd1272, %rd1248;
	and.b64  	%rd1522, %rd1504, %rd1521;
	xor.b64  	%rd1523, %rd1522, %rd1248;
	add.s64 	%rd1524, %rd1309, %rd1224;
	ld.const.u64 	%rd5888, [k_sha512+264];
	add.s64 	%rd1525, %rd1524, %rd5888;
	add.s64 	%rd1526, %rd1525, %rd1523;
	add.s64 	%rd1527, %rd1526, %rd1520;
	add.s64 	%rd1528, %rd1527, %rd1235;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1262,%dummy}, %rd1515;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1263}, %rd1515;
	}
	shf.r.wrap.b32 	%r1264, %r1263, %r1262, 28;
	shf.r.wrap.b32 	%r1265, %r1262, %r1263, 28;
	mov.b64 	%rd1529, {%r1265, %r1264};
	shf.l.wrap.b32 	%r1266, %r1262, %r1263, 30;
	shf.l.wrap.b32 	%r1267, %r1263, %r1262, 30;
	mov.b64 	%rd1530, {%r1267, %r1266};
	xor.b64  	%rd1531, %rd1530, %rd1529;
	shf.l.wrap.b32 	%r1268, %r1262, %r1263, 25;
	shf.l.wrap.b32 	%r1269, %r1263, %r1262, 25;
	mov.b64 	%rd1532, {%r1269, %r1268};
	xor.b64  	%rd1533, %rd1531, %rd1532;
	xor.b64  	%rd1534, %rd1515, %rd1259;
	xor.b64  	%rd1535, %rd1515, %rd1283;
	and.b64  	%rd1536, %rd1535, %rd1534;
	xor.b64  	%rd1537, %rd1536, %rd1515;
	add.s64 	%rd1538, %rd1527, %rd1537;
	add.s64 	%rd1539, %rd1538, %rd1533;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1270,%dummy}, %rd1528;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1271}, %rd1528;
	}
	shf.r.wrap.b32 	%r1272, %r1271, %r1270, 14;
	shf.r.wrap.b32 	%r1273, %r1270, %r1271, 14;
	mov.b64 	%rd1540, {%r1273, %r1272};
	shf.r.wrap.b32 	%r1274, %r1271, %r1270, 18;
	shf.r.wrap.b32 	%r1275, %r1270, %r1271, 18;
	mov.b64 	%rd1541, {%r1275, %r1274};
	xor.b64  	%rd1542, %rd1541, %rd1540;
	shf.l.wrap.b32 	%r1276, %r1270, %r1271, 23;
	shf.l.wrap.b32 	%r1277, %r1271, %r1270, 23;
	mov.b64 	%rd1543, {%r1277, %r1276};
	xor.b64  	%rd1544, %rd1542, %rd1543;
	xor.b64  	%rd1545, %rd1504, %rd1272;
	and.b64  	%rd1546, %rd1528, %rd1545;
	xor.b64  	%rd1547, %rd1546, %rd1272;
	add.s64 	%rd1548, %rd1322, %rd1248;
	ld.const.u64 	%rd5887, [k_sha512+272];
	add.s64 	%rd1549, %rd1548, %rd5887;
	add.s64 	%rd1550, %rd1549, %rd1547;
	add.s64 	%rd1551, %rd1550, %rd1544;
	add.s64 	%rd1552, %rd1551, %rd1259;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1278,%dummy}, %rd1539;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1279}, %rd1539;
	}
	shf.r.wrap.b32 	%r1280, %r1279, %r1278, 28;
	shf.r.wrap.b32 	%r1281, %r1278, %r1279, 28;
	mov.b64 	%rd1553, {%r1281, %r1280};
	shf.l.wrap.b32 	%r1282, %r1278, %r1279, 30;
	shf.l.wrap.b32 	%r1283, %r1279, %r1278, 30;
	mov.b64 	%rd1554, {%r1283, %r1282};
	xor.b64  	%rd1555, %rd1554, %rd1553;
	shf.l.wrap.b32 	%r1284, %r1278, %r1279, 25;
	shf.l.wrap.b32 	%r1285, %r1279, %r1278, 25;
	mov.b64 	%rd1556, {%r1285, %r1284};
	xor.b64  	%rd1557, %rd1555, %rd1556;
	xor.b64  	%rd1558, %rd1539, %rd1283;
	xor.b64  	%rd1559, %rd1539, %rd1515;
	and.b64  	%rd1560, %rd1559, %rd1558;
	xor.b64  	%rd1561, %rd1560, %rd1539;
	add.s64 	%rd1562, %rd1551, %rd1561;
	add.s64 	%rd1563, %rd1562, %rd1557;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1286,%dummy}, %rd1552;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1287}, %rd1552;
	}
	shf.r.wrap.b32 	%r1288, %r1287, %r1286, 14;
	shf.r.wrap.b32 	%r1289, %r1286, %r1287, 14;
	mov.b64 	%rd1564, {%r1289, %r1288};
	shf.r.wrap.b32 	%r1290, %r1287, %r1286, 18;
	shf.r.wrap.b32 	%r1291, %r1286, %r1287, 18;
	mov.b64 	%rd1565, {%r1291, %r1290};
	xor.b64  	%rd1566, %rd1565, %rd1564;
	shf.l.wrap.b32 	%r1292, %r1286, %r1287, 23;
	shf.l.wrap.b32 	%r1293, %r1287, %r1286, 23;
	mov.b64 	%rd1567, {%r1293, %r1292};
	xor.b64  	%rd1568, %rd1566, %rd1567;
	xor.b64  	%rd1569, %rd1528, %rd1504;
	and.b64  	%rd1570, %rd1552, %rd1569;
	xor.b64  	%rd1571, %rd1570, %rd1504;
	add.s64 	%rd1572, %rd1335, %rd1272;
	ld.const.u64 	%rd5886, [k_sha512+280];
	add.s64 	%rd1573, %rd1572, %rd5886;
	add.s64 	%rd1574, %rd1573, %rd1571;
	add.s64 	%rd1575, %rd1574, %rd1568;
	add.s64 	%rd1576, %rd1575, %rd1283;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1294,%dummy}, %rd1563;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1295}, %rd1563;
	}
	shf.r.wrap.b32 	%r1296, %r1295, %r1294, 28;
	shf.r.wrap.b32 	%r1297, %r1294, %r1295, 28;
	mov.b64 	%rd1577, {%r1297, %r1296};
	shf.l.wrap.b32 	%r1298, %r1294, %r1295, 30;
	shf.l.wrap.b32 	%r1299, %r1295, %r1294, 30;
	mov.b64 	%rd1578, {%r1299, %r1298};
	xor.b64  	%rd1579, %rd1578, %rd1577;
	shf.l.wrap.b32 	%r1300, %r1294, %r1295, 25;
	shf.l.wrap.b32 	%r1301, %r1295, %r1294, 25;
	mov.b64 	%rd1580, {%r1301, %r1300};
	xor.b64  	%rd1581, %rd1579, %rd1580;
	xor.b64  	%rd1582, %rd1563, %rd1515;
	xor.b64  	%rd1583, %rd1563, %rd1539;
	and.b64  	%rd1584, %rd1583, %rd1582;
	xor.b64  	%rd1585, %rd1584, %rd1563;
	add.s64 	%rd1586, %rd1575, %rd1585;
	add.s64 	%rd1587, %rd1586, %rd1581;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1302,%dummy}, %rd1576;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1303}, %rd1576;
	}
	shf.r.wrap.b32 	%r1304, %r1303, %r1302, 14;
	shf.r.wrap.b32 	%r1305, %r1302, %r1303, 14;
	mov.b64 	%rd1588, {%r1305, %r1304};
	shf.r.wrap.b32 	%r1306, %r1303, %r1302, 18;
	shf.r.wrap.b32 	%r1307, %r1302, %r1303, 18;
	mov.b64 	%rd1589, {%r1307, %r1306};
	xor.b64  	%rd1590, %rd1589, %rd1588;
	shf.l.wrap.b32 	%r1308, %r1302, %r1303, 23;
	shf.l.wrap.b32 	%r1309, %r1303, %r1302, 23;
	mov.b64 	%rd1591, {%r1309, %r1308};
	xor.b64  	%rd1592, %rd1590, %rd1591;
	xor.b64  	%rd1593, %rd1552, %rd1528;
	and.b64  	%rd1594, %rd1576, %rd1593;
	xor.b64  	%rd1595, %rd1594, %rd1528;
	add.s64 	%rd1596, %rd1504, %rd1348;
	ld.const.u64 	%rd5885, [k_sha512+288];
	add.s64 	%rd1597, %rd1596, %rd5885;
	add.s64 	%rd1598, %rd1597, %rd1595;
	add.s64 	%rd1599, %rd1598, %rd1592;
	add.s64 	%rd1600, %rd1599, %rd1515;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1310,%dummy}, %rd1587;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1311}, %rd1587;
	}
	shf.r.wrap.b32 	%r1312, %r1311, %r1310, 28;
	shf.r.wrap.b32 	%r1313, %r1310, %r1311, 28;
	mov.b64 	%rd1601, {%r1313, %r1312};
	shf.l.wrap.b32 	%r1314, %r1310, %r1311, 30;
	shf.l.wrap.b32 	%r1315, %r1311, %r1310, 30;
	mov.b64 	%rd1602, {%r1315, %r1314};
	xor.b64  	%rd1603, %rd1602, %rd1601;
	shf.l.wrap.b32 	%r1316, %r1310, %r1311, 25;
	shf.l.wrap.b32 	%r1317, %r1311, %r1310, 25;
	mov.b64 	%rd1604, {%r1317, %r1316};
	xor.b64  	%rd1605, %rd1603, %rd1604;
	xor.b64  	%rd1606, %rd1587, %rd1539;
	xor.b64  	%rd1607, %rd1587, %rd1563;
	and.b64  	%rd1608, %rd1607, %rd1606;
	xor.b64  	%rd1609, %rd1608, %rd1587;
	add.s64 	%rd1610, %rd1599, %rd1609;
	add.s64 	%rd1611, %rd1610, %rd1605;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1318,%dummy}, %rd1600;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1319}, %rd1600;
	}
	shf.r.wrap.b32 	%r1320, %r1319, %r1318, 14;
	shf.r.wrap.b32 	%r1321, %r1318, %r1319, 14;
	mov.b64 	%rd1612, {%r1321, %r1320};
	shf.r.wrap.b32 	%r1322, %r1319, %r1318, 18;
	shf.r.wrap.b32 	%r1323, %r1318, %r1319, 18;
	mov.b64 	%rd1613, {%r1323, %r1322};
	xor.b64  	%rd1614, %rd1613, %rd1612;
	shf.l.wrap.b32 	%r1324, %r1318, %r1319, 23;
	shf.l.wrap.b32 	%r1325, %r1319, %r1318, 23;
	mov.b64 	%rd1615, {%r1325, %r1324};
	xor.b64  	%rd1616, %rd1614, %rd1615;
	xor.b64  	%rd1617, %rd1576, %rd1552;
	and.b64  	%rd1618, %rd1600, %rd1617;
	xor.b64  	%rd1619, %rd1618, %rd1552;
	add.s64 	%rd1620, %rd1528, %rd1361;
	ld.const.u64 	%rd5884, [k_sha512+296];
	add.s64 	%rd1621, %rd1620, %rd5884;
	add.s64 	%rd1622, %rd1621, %rd1619;
	add.s64 	%rd1623, %rd1622, %rd1616;
	add.s64 	%rd1624, %rd1623, %rd1539;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1326,%dummy}, %rd1611;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1327}, %rd1611;
	}
	shf.r.wrap.b32 	%r1328, %r1327, %r1326, 28;
	shf.r.wrap.b32 	%r1329, %r1326, %r1327, 28;
	mov.b64 	%rd1625, {%r1329, %r1328};
	shf.l.wrap.b32 	%r1330, %r1326, %r1327, 30;
	shf.l.wrap.b32 	%r1331, %r1327, %r1326, 30;
	mov.b64 	%rd1626, {%r1331, %r1330};
	xor.b64  	%rd1627, %rd1626, %rd1625;
	shf.l.wrap.b32 	%r1332, %r1326, %r1327, 25;
	shf.l.wrap.b32 	%r1333, %r1327, %r1326, 25;
	mov.b64 	%rd1628, {%r1333, %r1332};
	xor.b64  	%rd1629, %rd1627, %rd1628;
	xor.b64  	%rd1630, %rd1611, %rd1563;
	xor.b64  	%rd1631, %rd1611, %rd1587;
	and.b64  	%rd1632, %rd1631, %rd1630;
	xor.b64  	%rd1633, %rd1632, %rd1611;
	add.s64 	%rd1634, %rd1623, %rd1633;
	add.s64 	%rd1635, %rd1634, %rd1629;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1334,%dummy}, %rd1624;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1335}, %rd1624;
	}
	shf.r.wrap.b32 	%r1336, %r1335, %r1334, 14;
	shf.r.wrap.b32 	%r1337, %r1334, %r1335, 14;
	mov.b64 	%rd1636, {%r1337, %r1336};
	shf.r.wrap.b32 	%r1338, %r1335, %r1334, 18;
	shf.r.wrap.b32 	%r1339, %r1334, %r1335, 18;
	mov.b64 	%rd1637, {%r1339, %r1338};
	xor.b64  	%rd1638, %rd1637, %rd1636;
	shf.l.wrap.b32 	%r1340, %r1334, %r1335, 23;
	shf.l.wrap.b32 	%r1341, %r1335, %r1334, 23;
	mov.b64 	%rd1639, {%r1341, %r1340};
	xor.b64  	%rd1640, %rd1638, %rd1639;
	xor.b64  	%rd1641, %rd1600, %rd1576;
	and.b64  	%rd1642, %rd1624, %rd1641;
	xor.b64  	%rd1643, %rd1642, %rd1576;
	add.s64 	%rd1644, %rd1552, %rd1374;
	ld.const.u64 	%rd5883, [k_sha512+304];
	add.s64 	%rd1645, %rd1644, %rd5883;
	add.s64 	%rd1646, %rd1645, %rd1643;
	add.s64 	%rd1647, %rd1646, %rd1640;
	add.s64 	%rd1648, %rd1647, %rd1563;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1342,%dummy}, %rd1635;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1343}, %rd1635;
	}
	shf.r.wrap.b32 	%r1344, %r1343, %r1342, 28;
	shf.r.wrap.b32 	%r1345, %r1342, %r1343, 28;
	mov.b64 	%rd1649, {%r1345, %r1344};
	shf.l.wrap.b32 	%r1346, %r1342, %r1343, 30;
	shf.l.wrap.b32 	%r1347, %r1343, %r1342, 30;
	mov.b64 	%rd1650, {%r1347, %r1346};
	xor.b64  	%rd1651, %rd1650, %rd1649;
	shf.l.wrap.b32 	%r1348, %r1342, %r1343, 25;
	shf.l.wrap.b32 	%r1349, %r1343, %r1342, 25;
	mov.b64 	%rd1652, {%r1349, %r1348};
	xor.b64  	%rd1653, %rd1651, %rd1652;
	xor.b64  	%rd1654, %rd1635, %rd1587;
	xor.b64  	%rd1655, %rd1635, %rd1611;
	and.b64  	%rd1656, %rd1655, %rd1654;
	xor.b64  	%rd1657, %rd1656, %rd1635;
	add.s64 	%rd1658, %rd1647, %rd1657;
	add.s64 	%rd1659, %rd1658, %rd1653;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1350,%dummy}, %rd1648;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1351}, %rd1648;
	}
	shf.r.wrap.b32 	%r1352, %r1351, %r1350, 14;
	shf.r.wrap.b32 	%r1353, %r1350, %r1351, 14;
	mov.b64 	%rd1660, {%r1353, %r1352};
	shf.r.wrap.b32 	%r1354, %r1351, %r1350, 18;
	shf.r.wrap.b32 	%r1355, %r1350, %r1351, 18;
	mov.b64 	%rd1661, {%r1355, %r1354};
	xor.b64  	%rd1662, %rd1661, %rd1660;
	shf.l.wrap.b32 	%r1356, %r1350, %r1351, 23;
	shf.l.wrap.b32 	%r1357, %r1351, %r1350, 23;
	mov.b64 	%rd1663, {%r1357, %r1356};
	xor.b64  	%rd1664, %rd1662, %rd1663;
	xor.b64  	%rd1665, %rd1624, %rd1600;
	and.b64  	%rd1666, %rd1648, %rd1665;
	xor.b64  	%rd1667, %rd1666, %rd1600;
	add.s64 	%rd1668, %rd1576, %rd1387;
	ld.const.u64 	%rd5882, [k_sha512+312];
	add.s64 	%rd1669, %rd1668, %rd5882;
	add.s64 	%rd1670, %rd1669, %rd1667;
	add.s64 	%rd1671, %rd1670, %rd1664;
	add.s64 	%rd1672, %rd1671, %rd1587;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1358,%dummy}, %rd1659;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1359}, %rd1659;
	}
	shf.r.wrap.b32 	%r1360, %r1359, %r1358, 28;
	shf.r.wrap.b32 	%r1361, %r1358, %r1359, 28;
	mov.b64 	%rd1673, {%r1361, %r1360};
	shf.l.wrap.b32 	%r1362, %r1358, %r1359, 30;
	shf.l.wrap.b32 	%r1363, %r1359, %r1358, 30;
	mov.b64 	%rd1674, {%r1363, %r1362};
	xor.b64  	%rd1675, %rd1674, %rd1673;
	shf.l.wrap.b32 	%r1364, %r1358, %r1359, 25;
	shf.l.wrap.b32 	%r1365, %r1359, %r1358, 25;
	mov.b64 	%rd1676, {%r1365, %r1364};
	xor.b64  	%rd1677, %rd1675, %rd1676;
	xor.b64  	%rd1678, %rd1659, %rd1611;
	xor.b64  	%rd1679, %rd1659, %rd1635;
	and.b64  	%rd1680, %rd1679, %rd1678;
	xor.b64  	%rd1681, %rd1680, %rd1659;
	add.s64 	%rd1682, %rd1671, %rd1681;
	add.s64 	%rd1683, %rd1682, %rd1677;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1366,%dummy}, %rd1672;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1367}, %rd1672;
	}
	shf.r.wrap.b32 	%r1368, %r1367, %r1366, 14;
	shf.r.wrap.b32 	%r1369, %r1366, %r1367, 14;
	mov.b64 	%rd1684, {%r1369, %r1368};
	shf.r.wrap.b32 	%r1370, %r1367, %r1366, 18;
	shf.r.wrap.b32 	%r1371, %r1366, %r1367, 18;
	mov.b64 	%rd1685, {%r1371, %r1370};
	xor.b64  	%rd1686, %rd1685, %rd1684;
	shf.l.wrap.b32 	%r1372, %r1366, %r1367, 23;
	shf.l.wrap.b32 	%r1373, %r1367, %r1366, 23;
	mov.b64 	%rd1687, {%r1373, %r1372};
	xor.b64  	%rd1688, %rd1686, %rd1687;
	xor.b64  	%rd1689, %rd1648, %rd1624;
	and.b64  	%rd1690, %rd1672, %rd1689;
	xor.b64  	%rd1691, %rd1690, %rd1624;
	add.s64 	%rd1692, %rd1600, %rd1400;
	ld.const.u64 	%rd5881, [k_sha512+320];
	add.s64 	%rd1693, %rd1692, %rd5881;
	add.s64 	%rd1694, %rd1693, %rd1691;
	add.s64 	%rd1695, %rd1694, %rd1688;
	add.s64 	%rd1696, %rd1695, %rd1611;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1374,%dummy}, %rd1683;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1375}, %rd1683;
	}
	shf.r.wrap.b32 	%r1376, %r1375, %r1374, 28;
	shf.r.wrap.b32 	%r1377, %r1374, %r1375, 28;
	mov.b64 	%rd1697, {%r1377, %r1376};
	shf.l.wrap.b32 	%r1378, %r1374, %r1375, 30;
	shf.l.wrap.b32 	%r1379, %r1375, %r1374, 30;
	mov.b64 	%rd1698, {%r1379, %r1378};
	xor.b64  	%rd1699, %rd1698, %rd1697;
	shf.l.wrap.b32 	%r1380, %r1374, %r1375, 25;
	shf.l.wrap.b32 	%r1381, %r1375, %r1374, 25;
	mov.b64 	%rd1700, {%r1381, %r1380};
	xor.b64  	%rd1701, %rd1699, %rd1700;
	xor.b64  	%rd1702, %rd1683, %rd1635;
	xor.b64  	%rd1703, %rd1683, %rd1659;
	and.b64  	%rd1704, %rd1703, %rd1702;
	xor.b64  	%rd1705, %rd1704, %rd1683;
	add.s64 	%rd1706, %rd1695, %rd1705;
	add.s64 	%rd1707, %rd1706, %rd1701;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1382,%dummy}, %rd1696;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1383}, %rd1696;
	}
	shf.r.wrap.b32 	%r1384, %r1383, %r1382, 14;
	shf.r.wrap.b32 	%r1385, %r1382, %r1383, 14;
	mov.b64 	%rd1708, {%r1385, %r1384};
	shf.r.wrap.b32 	%r1386, %r1383, %r1382, 18;
	shf.r.wrap.b32 	%r1387, %r1382, %r1383, 18;
	mov.b64 	%rd1709, {%r1387, %r1386};
	xor.b64  	%rd1710, %rd1709, %rd1708;
	shf.l.wrap.b32 	%r1388, %r1382, %r1383, 23;
	shf.l.wrap.b32 	%r1389, %r1383, %r1382, 23;
	mov.b64 	%rd1711, {%r1389, %r1388};
	xor.b64  	%rd1712, %rd1710, %rd1711;
	xor.b64  	%rd1713, %rd1672, %rd1648;
	and.b64  	%rd1714, %rd1696, %rd1713;
	xor.b64  	%rd1715, %rd1714, %rd1648;
	add.s64 	%rd1716, %rd1624, %rd1413;
	ld.const.u64 	%rd5880, [k_sha512+328];
	add.s64 	%rd1717, %rd1716, %rd5880;
	add.s64 	%rd1718, %rd1717, %rd1715;
	add.s64 	%rd1719, %rd1718, %rd1712;
	add.s64 	%rd1720, %rd1719, %rd1635;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1390,%dummy}, %rd1707;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1391}, %rd1707;
	}
	shf.r.wrap.b32 	%r1392, %r1391, %r1390, 28;
	shf.r.wrap.b32 	%r1393, %r1390, %r1391, 28;
	mov.b64 	%rd1721, {%r1393, %r1392};
	shf.l.wrap.b32 	%r1394, %r1390, %r1391, 30;
	shf.l.wrap.b32 	%r1395, %r1391, %r1390, 30;
	mov.b64 	%rd1722, {%r1395, %r1394};
	xor.b64  	%rd1723, %rd1722, %rd1721;
	shf.l.wrap.b32 	%r1396, %r1390, %r1391, 25;
	shf.l.wrap.b32 	%r1397, %r1391, %r1390, 25;
	mov.b64 	%rd1724, {%r1397, %r1396};
	xor.b64  	%rd1725, %rd1723, %rd1724;
	xor.b64  	%rd1726, %rd1707, %rd1659;
	xor.b64  	%rd1727, %rd1707, %rd1683;
	and.b64  	%rd1728, %rd1727, %rd1726;
	xor.b64  	%rd1729, %rd1728, %rd1707;
	add.s64 	%rd1730, %rd1719, %rd1729;
	add.s64 	%rd1731, %rd1730, %rd1725;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1398,%dummy}, %rd1720;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1399}, %rd1720;
	}
	shf.r.wrap.b32 	%r1400, %r1399, %r1398, 14;
	shf.r.wrap.b32 	%r1401, %r1398, %r1399, 14;
	mov.b64 	%rd1732, {%r1401, %r1400};
	shf.r.wrap.b32 	%r1402, %r1399, %r1398, 18;
	shf.r.wrap.b32 	%r1403, %r1398, %r1399, 18;
	mov.b64 	%rd1733, {%r1403, %r1402};
	xor.b64  	%rd1734, %rd1733, %rd1732;
	shf.l.wrap.b32 	%r1404, %r1398, %r1399, 23;
	shf.l.wrap.b32 	%r1405, %r1399, %r1398, 23;
	mov.b64 	%rd1735, {%r1405, %r1404};
	xor.b64  	%rd1736, %rd1734, %rd1735;
	xor.b64  	%rd1737, %rd1696, %rd1672;
	and.b64  	%rd1738, %rd1720, %rd1737;
	xor.b64  	%rd1739, %rd1738, %rd1672;
	add.s64 	%rd1740, %rd1648, %rd1426;
	ld.const.u64 	%rd5879, [k_sha512+336];
	add.s64 	%rd1741, %rd1740, %rd5879;
	add.s64 	%rd1742, %rd1741, %rd1739;
	add.s64 	%rd1743, %rd1742, %rd1736;
	add.s64 	%rd1744, %rd1743, %rd1659;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1406,%dummy}, %rd1731;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1407}, %rd1731;
	}
	shf.r.wrap.b32 	%r1408, %r1407, %r1406, 28;
	shf.r.wrap.b32 	%r1409, %r1406, %r1407, 28;
	mov.b64 	%rd1745, {%r1409, %r1408};
	shf.l.wrap.b32 	%r1410, %r1406, %r1407, 30;
	shf.l.wrap.b32 	%r1411, %r1407, %r1406, 30;
	mov.b64 	%rd1746, {%r1411, %r1410};
	xor.b64  	%rd1747, %rd1746, %rd1745;
	shf.l.wrap.b32 	%r1412, %r1406, %r1407, 25;
	shf.l.wrap.b32 	%r1413, %r1407, %r1406, 25;
	mov.b64 	%rd1748, {%r1413, %r1412};
	xor.b64  	%rd1749, %rd1747, %rd1748;
	xor.b64  	%rd1750, %rd1731, %rd1683;
	xor.b64  	%rd1751, %rd1731, %rd1707;
	and.b64  	%rd1752, %rd1751, %rd1750;
	xor.b64  	%rd1753, %rd1752, %rd1731;
	add.s64 	%rd1754, %rd1743, %rd1753;
	add.s64 	%rd1755, %rd1754, %rd1749;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1414,%dummy}, %rd1744;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1415}, %rd1744;
	}
	shf.r.wrap.b32 	%r1416, %r1415, %r1414, 14;
	shf.r.wrap.b32 	%r1417, %r1414, %r1415, 14;
	mov.b64 	%rd1756, {%r1417, %r1416};
	shf.r.wrap.b32 	%r1418, %r1415, %r1414, 18;
	shf.r.wrap.b32 	%r1419, %r1414, %r1415, 18;
	mov.b64 	%rd1757, {%r1419, %r1418};
	xor.b64  	%rd1758, %rd1757, %rd1756;
	shf.l.wrap.b32 	%r1420, %r1414, %r1415, 23;
	shf.l.wrap.b32 	%r1421, %r1415, %r1414, 23;
	mov.b64 	%rd1759, {%r1421, %r1420};
	xor.b64  	%rd1760, %rd1758, %rd1759;
	xor.b64  	%rd1761, %rd1720, %rd1696;
	and.b64  	%rd1762, %rd1744, %rd1761;
	xor.b64  	%rd1763, %rd1762, %rd1696;
	add.s64 	%rd1764, %rd1672, %rd1439;
	ld.const.u64 	%rd5878, [k_sha512+344];
	add.s64 	%rd1765, %rd1764, %rd5878;
	add.s64 	%rd1766, %rd1765, %rd1763;
	add.s64 	%rd1767, %rd1766, %rd1760;
	add.s64 	%rd1768, %rd1767, %rd1683;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1422,%dummy}, %rd1755;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1423}, %rd1755;
	}
	shf.r.wrap.b32 	%r1424, %r1423, %r1422, 28;
	shf.r.wrap.b32 	%r1425, %r1422, %r1423, 28;
	mov.b64 	%rd1769, {%r1425, %r1424};
	shf.l.wrap.b32 	%r1426, %r1422, %r1423, 30;
	shf.l.wrap.b32 	%r1427, %r1423, %r1422, 30;
	mov.b64 	%rd1770, {%r1427, %r1426};
	xor.b64  	%rd1771, %rd1770, %rd1769;
	shf.l.wrap.b32 	%r1428, %r1422, %r1423, 25;
	shf.l.wrap.b32 	%r1429, %r1423, %r1422, 25;
	mov.b64 	%rd1772, {%r1429, %r1428};
	xor.b64  	%rd1773, %rd1771, %rd1772;
	xor.b64  	%rd1774, %rd1755, %rd1707;
	xor.b64  	%rd1775, %rd1755, %rd1731;
	and.b64  	%rd1776, %rd1775, %rd1774;
	xor.b64  	%rd1777, %rd1776, %rd1755;
	add.s64 	%rd1778, %rd1767, %rd1777;
	add.s64 	%rd1779, %rd1778, %rd1773;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1430,%dummy}, %rd1768;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1431}, %rd1768;
	}
	shf.r.wrap.b32 	%r1432, %r1431, %r1430, 14;
	shf.r.wrap.b32 	%r1433, %r1430, %r1431, 14;
	mov.b64 	%rd1780, {%r1433, %r1432};
	shf.r.wrap.b32 	%r1434, %r1431, %r1430, 18;
	shf.r.wrap.b32 	%r1435, %r1430, %r1431, 18;
	mov.b64 	%rd1781, {%r1435, %r1434};
	xor.b64  	%rd1782, %rd1781, %rd1780;
	shf.l.wrap.b32 	%r1436, %r1430, %r1431, 23;
	shf.l.wrap.b32 	%r1437, %r1431, %r1430, 23;
	mov.b64 	%rd1783, {%r1437, %r1436};
	xor.b64  	%rd1784, %rd1782, %rd1783;
	xor.b64  	%rd1785, %rd1744, %rd1720;
	and.b64  	%rd1786, %rd1768, %rd1785;
	xor.b64  	%rd1787, %rd1786, %rd1720;
	add.s64 	%rd1788, %rd1696, %rd1452;
	ld.const.u64 	%rd5877, [k_sha512+352];
	add.s64 	%rd1789, %rd1788, %rd5877;
	add.s64 	%rd1790, %rd1789, %rd1787;
	add.s64 	%rd1791, %rd1790, %rd1784;
	add.s64 	%rd1792, %rd1791, %rd1707;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1438,%dummy}, %rd1779;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1439}, %rd1779;
	}
	shf.r.wrap.b32 	%r1440, %r1439, %r1438, 28;
	shf.r.wrap.b32 	%r1441, %r1438, %r1439, 28;
	mov.b64 	%rd1793, {%r1441, %r1440};
	shf.l.wrap.b32 	%r1442, %r1438, %r1439, 30;
	shf.l.wrap.b32 	%r1443, %r1439, %r1438, 30;
	mov.b64 	%rd1794, {%r1443, %r1442};
	xor.b64  	%rd1795, %rd1794, %rd1793;
	shf.l.wrap.b32 	%r1444, %r1438, %r1439, 25;
	shf.l.wrap.b32 	%r1445, %r1439, %r1438, 25;
	mov.b64 	%rd1796, {%r1445, %r1444};
	xor.b64  	%rd1797, %rd1795, %rd1796;
	xor.b64  	%rd1798, %rd1779, %rd1731;
	xor.b64  	%rd1799, %rd1779, %rd1755;
	and.b64  	%rd1800, %rd1799, %rd1798;
	xor.b64  	%rd1801, %rd1800, %rd1779;
	add.s64 	%rd1802, %rd1791, %rd1801;
	add.s64 	%rd1803, %rd1802, %rd1797;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1446,%dummy}, %rd1792;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1447}, %rd1792;
	}
	shf.r.wrap.b32 	%r1448, %r1447, %r1446, 14;
	shf.r.wrap.b32 	%r1449, %r1446, %r1447, 14;
	mov.b64 	%rd1804, {%r1449, %r1448};
	shf.r.wrap.b32 	%r1450, %r1447, %r1446, 18;
	shf.r.wrap.b32 	%r1451, %r1446, %r1447, 18;
	mov.b64 	%rd1805, {%r1451, %r1450};
	xor.b64  	%rd1806, %rd1805, %rd1804;
	shf.l.wrap.b32 	%r1452, %r1446, %r1447, 23;
	shf.l.wrap.b32 	%r1453, %r1447, %r1446, 23;
	mov.b64 	%rd1807, {%r1453, %r1452};
	xor.b64  	%rd1808, %rd1806, %rd1807;
	xor.b64  	%rd1809, %rd1768, %rd1744;
	and.b64  	%rd1810, %rd1792, %rd1809;
	xor.b64  	%rd1811, %rd1810, %rd1744;
	add.s64 	%rd1812, %rd1720, %rd1465;
	ld.const.u64 	%rd5876, [k_sha512+360];
	add.s64 	%rd1813, %rd1812, %rd5876;
	add.s64 	%rd1814, %rd1813, %rd1811;
	add.s64 	%rd1815, %rd1814, %rd1808;
	add.s64 	%rd1816, %rd1815, %rd1731;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1454,%dummy}, %rd1803;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1455}, %rd1803;
	}
	shf.r.wrap.b32 	%r1456, %r1455, %r1454, 28;
	shf.r.wrap.b32 	%r1457, %r1454, %r1455, 28;
	mov.b64 	%rd1817, {%r1457, %r1456};
	shf.l.wrap.b32 	%r1458, %r1454, %r1455, 30;
	shf.l.wrap.b32 	%r1459, %r1455, %r1454, 30;
	mov.b64 	%rd1818, {%r1459, %r1458};
	xor.b64  	%rd1819, %rd1818, %rd1817;
	shf.l.wrap.b32 	%r1460, %r1454, %r1455, 25;
	shf.l.wrap.b32 	%r1461, %r1455, %r1454, 25;
	mov.b64 	%rd1820, {%r1461, %r1460};
	xor.b64  	%rd1821, %rd1819, %rd1820;
	xor.b64  	%rd1822, %rd1803, %rd1755;
	xor.b64  	%rd1823, %rd1803, %rd1779;
	and.b64  	%rd1824, %rd1823, %rd1822;
	xor.b64  	%rd1825, %rd1824, %rd1803;
	add.s64 	%rd1826, %rd1815, %rd1825;
	add.s64 	%rd1827, %rd1826, %rd1821;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1462,%dummy}, %rd1816;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1463}, %rd1816;
	}
	shf.r.wrap.b32 	%r1464, %r1463, %r1462, 14;
	shf.r.wrap.b32 	%r1465, %r1462, %r1463, 14;
	mov.b64 	%rd1828, {%r1465, %r1464};
	shf.r.wrap.b32 	%r1466, %r1463, %r1462, 18;
	shf.r.wrap.b32 	%r1467, %r1462, %r1463, 18;
	mov.b64 	%rd1829, {%r1467, %r1466};
	xor.b64  	%rd1830, %rd1829, %rd1828;
	shf.l.wrap.b32 	%r1468, %r1462, %r1463, 23;
	shf.l.wrap.b32 	%r1469, %r1463, %r1462, 23;
	mov.b64 	%rd1831, {%r1469, %r1468};
	xor.b64  	%rd1832, %rd1830, %rd1831;
	xor.b64  	%rd1833, %rd1792, %rd1768;
	and.b64  	%rd1834, %rd1816, %rd1833;
	xor.b64  	%rd1835, %rd1834, %rd1768;
	add.s64 	%rd1836, %rd1744, %rd1478;
	ld.const.u64 	%rd5875, [k_sha512+368];
	add.s64 	%rd1837, %rd1836, %rd5875;
	add.s64 	%rd1838, %rd1837, %rd1835;
	add.s64 	%rd1839, %rd1838, %rd1832;
	add.s64 	%rd1840, %rd1839, %rd1755;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1470,%dummy}, %rd1827;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1471}, %rd1827;
	}
	shf.r.wrap.b32 	%r1472, %r1471, %r1470, 28;
	shf.r.wrap.b32 	%r1473, %r1470, %r1471, 28;
	mov.b64 	%rd1841, {%r1473, %r1472};
	shf.l.wrap.b32 	%r1474, %r1470, %r1471, 30;
	shf.l.wrap.b32 	%r1475, %r1471, %r1470, 30;
	mov.b64 	%rd1842, {%r1475, %r1474};
	xor.b64  	%rd1843, %rd1842, %rd1841;
	shf.l.wrap.b32 	%r1476, %r1470, %r1471, 25;
	shf.l.wrap.b32 	%r1477, %r1471, %r1470, 25;
	mov.b64 	%rd1844, {%r1477, %r1476};
	xor.b64  	%rd1845, %rd1843, %rd1844;
	xor.b64  	%rd1846, %rd1827, %rd1779;
	xor.b64  	%rd1847, %rd1827, %rd1803;
	and.b64  	%rd1848, %rd1847, %rd1846;
	xor.b64  	%rd1849, %rd1848, %rd1827;
	add.s64 	%rd1850, %rd1839, %rd1849;
	add.s64 	%rd1851, %rd1850, %rd1845;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1478,%dummy}, %rd1840;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1479}, %rd1840;
	}
	shf.r.wrap.b32 	%r1480, %r1479, %r1478, 14;
	shf.r.wrap.b32 	%r1481, %r1478, %r1479, 14;
	mov.b64 	%rd1852, {%r1481, %r1480};
	shf.r.wrap.b32 	%r1482, %r1479, %r1478, 18;
	shf.r.wrap.b32 	%r1483, %r1478, %r1479, 18;
	mov.b64 	%rd1853, {%r1483, %r1482};
	xor.b64  	%rd1854, %rd1853, %rd1852;
	shf.l.wrap.b32 	%r1484, %r1478, %r1479, 23;
	shf.l.wrap.b32 	%r1485, %r1479, %r1478, 23;
	mov.b64 	%rd1855, {%r1485, %r1484};
	xor.b64  	%rd1856, %rd1854, %rd1855;
	xor.b64  	%rd1857, %rd1816, %rd1792;
	and.b64  	%rd1858, %rd1840, %rd1857;
	xor.b64  	%rd1859, %rd1858, %rd1792;
	add.s64 	%rd1860, %rd1768, %rd1491;
	ld.const.u64 	%rd5874, [k_sha512+376];
	add.s64 	%rd1861, %rd1860, %rd5874;
	add.s64 	%rd1862, %rd1861, %rd1859;
	add.s64 	%rd1863, %rd1862, %rd1856;
	add.s64 	%rd1864, %rd1863, %rd1779;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1486,%dummy}, %rd1851;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1487}, %rd1851;
	}
	shf.r.wrap.b32 	%r1488, %r1487, %r1486, 28;
	shf.r.wrap.b32 	%r1489, %r1486, %r1487, 28;
	mov.b64 	%rd1865, {%r1489, %r1488};
	shf.l.wrap.b32 	%r1490, %r1486, %r1487, 30;
	shf.l.wrap.b32 	%r1491, %r1487, %r1486, 30;
	mov.b64 	%rd1866, {%r1491, %r1490};
	xor.b64  	%rd1867, %rd1866, %rd1865;
	shf.l.wrap.b32 	%r1492, %r1486, %r1487, 25;
	shf.l.wrap.b32 	%r1493, %r1487, %r1486, 25;
	mov.b64 	%rd1868, {%r1493, %r1492};
	xor.b64  	%rd1869, %rd1867, %rd1868;
	xor.b64  	%rd1870, %rd1851, %rd1803;
	xor.b64  	%rd1871, %rd1851, %rd1827;
	and.b64  	%rd1872, %rd1871, %rd1870;
	xor.b64  	%rd1873, %rd1872, %rd1851;
	add.s64 	%rd1874, %rd1863, %rd1873;
	add.s64 	%rd1875, %rd1874, %rd1869;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1494,%dummy}, %rd1478;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1495}, %rd1478;
	}
	shf.r.wrap.b32 	%r1496, %r1495, %r1494, 19;
	shf.r.wrap.b32 	%r1497, %r1494, %r1495, 19;
	mov.b64 	%rd1876, {%r1497, %r1496};
	shf.l.wrap.b32 	%r1498, %r1494, %r1495, 3;
	shf.l.wrap.b32 	%r1499, %r1495, %r1494, 3;
	mov.b64 	%rd1877, {%r1499, %r1498};
	shr.u64 	%rd1878, %rd1478, 6;
	xor.b64  	%rd1879, %rd1876, %rd1878;
	xor.b64  	%rd1880, %rd1879, %rd1877;
	shf.r.wrap.b32 	%r1500, %r1109, %r1108, 1;
	shf.r.wrap.b32 	%r1501, %r1108, %r1109, 1;
	mov.b64 	%rd1881, {%r1501, %r1500};
	shf.r.wrap.b32 	%r1502, %r1109, %r1108, 8;
	shf.r.wrap.b32 	%r1503, %r1108, %r1109, 8;
	mov.b64 	%rd1882, {%r1503, %r1502};
	shr.u64 	%rd1883, %rd1309, 7;
	xor.b64  	%rd1884, %rd1881, %rd1883;
	xor.b64  	%rd1885, %rd1884, %rd1882;
	add.s64 	%rd1886, %rd1413, %rd1296;
	add.s64 	%rd1887, %rd1886, %rd1880;
	add.s64 	%rd1888, %rd1887, %rd1885;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1504,%dummy}, %rd1491;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1505}, %rd1491;
	}
	shf.r.wrap.b32 	%r1506, %r1505, %r1504, 19;
	shf.r.wrap.b32 	%r1507, %r1504, %r1505, 19;
	mov.b64 	%rd1889, {%r1507, %r1506};
	shf.l.wrap.b32 	%r1508, %r1504, %r1505, 3;
	shf.l.wrap.b32 	%r1509, %r1505, %r1504, 3;
	mov.b64 	%rd1890, {%r1509, %r1508};
	shr.u64 	%rd1891, %rd1491, 6;
	xor.b64  	%rd1892, %rd1889, %rd1891;
	xor.b64  	%rd1893, %rd1892, %rd1890;
	shf.r.wrap.b32 	%r1510, %r1119, %r1118, 1;
	shf.r.wrap.b32 	%r1511, %r1118, %r1119, 1;
	mov.b64 	%rd1894, {%r1511, %r1510};
	shf.r.wrap.b32 	%r1512, %r1119, %r1118, 8;
	shf.r.wrap.b32 	%r1513, %r1118, %r1119, 8;
	mov.b64 	%rd1895, {%r1513, %r1512};
	shr.u64 	%rd1896, %rd1322, 7;
	xor.b64  	%rd1897, %rd1894, %rd1896;
	xor.b64  	%rd1898, %rd1897, %rd1895;
	add.s64 	%rd1899, %rd1426, %rd1309;
	add.s64 	%rd1900, %rd1899, %rd1893;
	add.s64 	%rd1901, %rd1900, %rd1898;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1514,%dummy}, %rd1888;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1515}, %rd1888;
	}
	shf.r.wrap.b32 	%r1516, %r1515, %r1514, 19;
	shf.r.wrap.b32 	%r1517, %r1514, %r1515, 19;
	mov.b64 	%rd1902, {%r1517, %r1516};
	shf.l.wrap.b32 	%r1518, %r1514, %r1515, 3;
	shf.l.wrap.b32 	%r1519, %r1515, %r1514, 3;
	mov.b64 	%rd1903, {%r1519, %r1518};
	shr.u64 	%rd1904, %rd1888, 6;
	xor.b64  	%rd1905, %rd1902, %rd1904;
	xor.b64  	%rd1906, %rd1905, %rd1903;
	shf.r.wrap.b32 	%r1520, %r1129, %r1128, 1;
	shf.r.wrap.b32 	%r1521, %r1128, %r1129, 1;
	mov.b64 	%rd1907, {%r1521, %r1520};
	shf.r.wrap.b32 	%r1522, %r1129, %r1128, 8;
	shf.r.wrap.b32 	%r1523, %r1128, %r1129, 8;
	mov.b64 	%rd1908, {%r1523, %r1522};
	shr.u64 	%rd1909, %rd1335, 7;
	xor.b64  	%rd1910, %rd1907, %rd1909;
	xor.b64  	%rd1911, %rd1910, %rd1908;
	add.s64 	%rd1912, %rd1439, %rd1322;
	add.s64 	%rd1913, %rd1912, %rd1906;
	add.s64 	%rd1914, %rd1913, %rd1911;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1524,%dummy}, %rd1901;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1525}, %rd1901;
	}
	shf.r.wrap.b32 	%r1526, %r1525, %r1524, 19;
	shf.r.wrap.b32 	%r1527, %r1524, %r1525, 19;
	mov.b64 	%rd1915, {%r1527, %r1526};
	shf.l.wrap.b32 	%r1528, %r1524, %r1525, 3;
	shf.l.wrap.b32 	%r1529, %r1525, %r1524, 3;
	mov.b64 	%rd1916, {%r1529, %r1528};
	shr.u64 	%rd1917, %rd1901, 6;
	xor.b64  	%rd1918, %rd1915, %rd1917;
	xor.b64  	%rd1919, %rd1918, %rd1916;
	shf.r.wrap.b32 	%r1530, %r1139, %r1138, 1;
	shf.r.wrap.b32 	%r1531, %r1138, %r1139, 1;
	mov.b64 	%rd1920, {%r1531, %r1530};
	shf.r.wrap.b32 	%r1532, %r1139, %r1138, 8;
	shf.r.wrap.b32 	%r1533, %r1138, %r1139, 8;
	mov.b64 	%rd1921, {%r1533, %r1532};
	shr.u64 	%rd1922, %rd1348, 7;
	xor.b64  	%rd1923, %rd1920, %rd1922;
	xor.b64  	%rd1924, %rd1923, %rd1921;
	add.s64 	%rd1925, %rd1452, %rd1335;
	add.s64 	%rd1926, %rd1925, %rd1919;
	add.s64 	%rd1927, %rd1926, %rd1924;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1534,%dummy}, %rd1914;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1535}, %rd1914;
	}
	shf.r.wrap.b32 	%r1536, %r1535, %r1534, 19;
	shf.r.wrap.b32 	%r1537, %r1534, %r1535, 19;
	mov.b64 	%rd1928, {%r1537, %r1536};
	shf.l.wrap.b32 	%r1538, %r1534, %r1535, 3;
	shf.l.wrap.b32 	%r1539, %r1535, %r1534, 3;
	mov.b64 	%rd1929, {%r1539, %r1538};
	shr.u64 	%rd1930, %rd1914, 6;
	xor.b64  	%rd1931, %rd1928, %rd1930;
	xor.b64  	%rd1932, %rd1931, %rd1929;
	shf.r.wrap.b32 	%r1540, %r1149, %r1148, 1;
	shf.r.wrap.b32 	%r1541, %r1148, %r1149, 1;
	mov.b64 	%rd1933, {%r1541, %r1540};
	shf.r.wrap.b32 	%r1542, %r1149, %r1148, 8;
	shf.r.wrap.b32 	%r1543, %r1148, %r1149, 8;
	mov.b64 	%rd1934, {%r1543, %r1542};
	shr.u64 	%rd1935, %rd1361, 7;
	xor.b64  	%rd1936, %rd1933, %rd1935;
	xor.b64  	%rd1937, %rd1936, %rd1934;
	add.s64 	%rd1938, %rd1465, %rd1348;
	add.s64 	%rd1939, %rd1938, %rd1932;
	add.s64 	%rd1940, %rd1939, %rd1937;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1544,%dummy}, %rd1927;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1545}, %rd1927;
	}
	shf.r.wrap.b32 	%r1546, %r1545, %r1544, 19;
	shf.r.wrap.b32 	%r1547, %r1544, %r1545, 19;
	mov.b64 	%rd1941, {%r1547, %r1546};
	shf.l.wrap.b32 	%r1548, %r1544, %r1545, 3;
	shf.l.wrap.b32 	%r1549, %r1545, %r1544, 3;
	mov.b64 	%rd1942, {%r1549, %r1548};
	shr.u64 	%rd1943, %rd1927, 6;
	xor.b64  	%rd1944, %rd1941, %rd1943;
	xor.b64  	%rd1945, %rd1944, %rd1942;
	shf.r.wrap.b32 	%r1550, %r1159, %r1158, 1;
	shf.r.wrap.b32 	%r1551, %r1158, %r1159, 1;
	mov.b64 	%rd1946, {%r1551, %r1550};
	shf.r.wrap.b32 	%r1552, %r1159, %r1158, 8;
	shf.r.wrap.b32 	%r1553, %r1158, %r1159, 8;
	mov.b64 	%rd1947, {%r1553, %r1552};
	shr.u64 	%rd1948, %rd1374, 7;
	xor.b64  	%rd1949, %rd1946, %rd1948;
	xor.b64  	%rd1950, %rd1949, %rd1947;
	add.s64 	%rd1951, %rd1478, %rd1361;
	add.s64 	%rd1952, %rd1951, %rd1945;
	add.s64 	%rd1953, %rd1952, %rd1950;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1554,%dummy}, %rd1940;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1555}, %rd1940;
	}
	shf.r.wrap.b32 	%r1556, %r1555, %r1554, 19;
	shf.r.wrap.b32 	%r1557, %r1554, %r1555, 19;
	mov.b64 	%rd1954, {%r1557, %r1556};
	shf.l.wrap.b32 	%r1558, %r1554, %r1555, 3;
	shf.l.wrap.b32 	%r1559, %r1555, %r1554, 3;
	mov.b64 	%rd1955, {%r1559, %r1558};
	shr.u64 	%rd1956, %rd1940, 6;
	xor.b64  	%rd1957, %rd1954, %rd1956;
	xor.b64  	%rd1958, %rd1957, %rd1955;
	shf.r.wrap.b32 	%r1560, %r1169, %r1168, 1;
	shf.r.wrap.b32 	%r1561, %r1168, %r1169, 1;
	mov.b64 	%rd1959, {%r1561, %r1560};
	shf.r.wrap.b32 	%r1562, %r1169, %r1168, 8;
	shf.r.wrap.b32 	%r1563, %r1168, %r1169, 8;
	mov.b64 	%rd1960, {%r1563, %r1562};
	shr.u64 	%rd1961, %rd1387, 7;
	xor.b64  	%rd1962, %rd1959, %rd1961;
	xor.b64  	%rd1963, %rd1962, %rd1960;
	add.s64 	%rd1964, %rd1491, %rd1374;
	add.s64 	%rd1965, %rd1964, %rd1958;
	add.s64 	%rd1966, %rd1965, %rd1963;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1564,%dummy}, %rd1953;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1565}, %rd1953;
	}
	shf.r.wrap.b32 	%r1566, %r1565, %r1564, 19;
	shf.r.wrap.b32 	%r1567, %r1564, %r1565, 19;
	mov.b64 	%rd1967, {%r1567, %r1566};
	shf.l.wrap.b32 	%r1568, %r1564, %r1565, 3;
	shf.l.wrap.b32 	%r1569, %r1565, %r1564, 3;
	mov.b64 	%rd1968, {%r1569, %r1568};
	shr.u64 	%rd1969, %rd1953, 6;
	xor.b64  	%rd1970, %rd1967, %rd1969;
	xor.b64  	%rd1971, %rd1970, %rd1968;
	shf.r.wrap.b32 	%r1570, %r1179, %r1178, 1;
	shf.r.wrap.b32 	%r1571, %r1178, %r1179, 1;
	mov.b64 	%rd1972, {%r1571, %r1570};
	shf.r.wrap.b32 	%r1572, %r1179, %r1178, 8;
	shf.r.wrap.b32 	%r1573, %r1178, %r1179, 8;
	mov.b64 	%rd1973, {%r1573, %r1572};
	shr.u64 	%rd1974, %rd1400, 7;
	xor.b64  	%rd1975, %rd1972, %rd1974;
	xor.b64  	%rd1976, %rd1975, %rd1973;
	add.s64 	%rd1977, %rd1888, %rd1387;
	add.s64 	%rd1978, %rd1977, %rd1971;
	add.s64 	%rd1979, %rd1978, %rd1976;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1574,%dummy}, %rd1966;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1575}, %rd1966;
	}
	shf.r.wrap.b32 	%r1576, %r1575, %r1574, 19;
	shf.r.wrap.b32 	%r1577, %r1574, %r1575, 19;
	mov.b64 	%rd1980, {%r1577, %r1576};
	shf.l.wrap.b32 	%r1578, %r1574, %r1575, 3;
	shf.l.wrap.b32 	%r1579, %r1575, %r1574, 3;
	mov.b64 	%rd1981, {%r1579, %r1578};
	shr.u64 	%rd1982, %rd1966, 6;
	xor.b64  	%rd1983, %rd1980, %rd1982;
	xor.b64  	%rd1984, %rd1983, %rd1981;
	shf.r.wrap.b32 	%r1580, %r1189, %r1188, 1;
	shf.r.wrap.b32 	%r1581, %r1188, %r1189, 1;
	mov.b64 	%rd1985, {%r1581, %r1580};
	shf.r.wrap.b32 	%r1582, %r1189, %r1188, 8;
	shf.r.wrap.b32 	%r1583, %r1188, %r1189, 8;
	mov.b64 	%rd1986, {%r1583, %r1582};
	shr.u64 	%rd1987, %rd1413, 7;
	xor.b64  	%rd1988, %rd1985, %rd1987;
	xor.b64  	%rd1989, %rd1988, %rd1986;
	add.s64 	%rd1990, %rd1901, %rd1400;
	add.s64 	%rd1991, %rd1990, %rd1984;
	add.s64 	%rd1992, %rd1991, %rd1989;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1584,%dummy}, %rd1979;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1585}, %rd1979;
	}
	shf.r.wrap.b32 	%r1586, %r1585, %r1584, 19;
	shf.r.wrap.b32 	%r1587, %r1584, %r1585, 19;
	mov.b64 	%rd1993, {%r1587, %r1586};
	shf.l.wrap.b32 	%r1588, %r1584, %r1585, 3;
	shf.l.wrap.b32 	%r1589, %r1585, %r1584, 3;
	mov.b64 	%rd1994, {%r1589, %r1588};
	shr.u64 	%rd1995, %rd1979, 6;
	xor.b64  	%rd1996, %rd1993, %rd1995;
	xor.b64  	%rd1997, %rd1996, %rd1994;
	shf.r.wrap.b32 	%r1590, %r1199, %r1198, 1;
	shf.r.wrap.b32 	%r1591, %r1198, %r1199, 1;
	mov.b64 	%rd1998, {%r1591, %r1590};
	shf.r.wrap.b32 	%r1592, %r1199, %r1198, 8;
	shf.r.wrap.b32 	%r1593, %r1198, %r1199, 8;
	mov.b64 	%rd1999, {%r1593, %r1592};
	shr.u64 	%rd2000, %rd1426, 7;
	xor.b64  	%rd2001, %rd1998, %rd2000;
	xor.b64  	%rd2002, %rd2001, %rd1999;
	add.s64 	%rd2003, %rd1914, %rd1413;
	add.s64 	%rd2004, %rd2003, %rd1997;
	add.s64 	%rd2005, %rd2004, %rd2002;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1594,%dummy}, %rd1992;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1595}, %rd1992;
	}
	shf.r.wrap.b32 	%r1596, %r1595, %r1594, 19;
	shf.r.wrap.b32 	%r1597, %r1594, %r1595, 19;
	mov.b64 	%rd2006, {%r1597, %r1596};
	shf.l.wrap.b32 	%r1598, %r1594, %r1595, 3;
	shf.l.wrap.b32 	%r1599, %r1595, %r1594, 3;
	mov.b64 	%rd2007, {%r1599, %r1598};
	shr.u64 	%rd2008, %rd1992, 6;
	xor.b64  	%rd2009, %rd2006, %rd2008;
	xor.b64  	%rd2010, %rd2009, %rd2007;
	shf.r.wrap.b32 	%r1600, %r1209, %r1208, 1;
	shf.r.wrap.b32 	%r1601, %r1208, %r1209, 1;
	mov.b64 	%rd2011, {%r1601, %r1600};
	shf.r.wrap.b32 	%r1602, %r1209, %r1208, 8;
	shf.r.wrap.b32 	%r1603, %r1208, %r1209, 8;
	mov.b64 	%rd2012, {%r1603, %r1602};
	shr.u64 	%rd2013, %rd1439, 7;
	xor.b64  	%rd2014, %rd2011, %rd2013;
	xor.b64  	%rd2015, %rd2014, %rd2012;
	add.s64 	%rd2016, %rd1927, %rd1426;
	add.s64 	%rd2017, %rd2016, %rd2010;
	add.s64 	%rd2018, %rd2017, %rd2015;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1604,%dummy}, %rd2005;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1605}, %rd2005;
	}
	shf.r.wrap.b32 	%r1606, %r1605, %r1604, 19;
	shf.r.wrap.b32 	%r1607, %r1604, %r1605, 19;
	mov.b64 	%rd2019, {%r1607, %r1606};
	shf.l.wrap.b32 	%r1608, %r1604, %r1605, 3;
	shf.l.wrap.b32 	%r1609, %r1605, %r1604, 3;
	mov.b64 	%rd2020, {%r1609, %r1608};
	shr.u64 	%rd2021, %rd2005, 6;
	xor.b64  	%rd2022, %rd2019, %rd2021;
	xor.b64  	%rd2023, %rd2022, %rd2020;
	shf.r.wrap.b32 	%r1610, %r1219, %r1218, 1;
	shf.r.wrap.b32 	%r1611, %r1218, %r1219, 1;
	mov.b64 	%rd2024, {%r1611, %r1610};
	shf.r.wrap.b32 	%r1612, %r1219, %r1218, 8;
	shf.r.wrap.b32 	%r1613, %r1218, %r1219, 8;
	mov.b64 	%rd2025, {%r1613, %r1612};
	shr.u64 	%rd2026, %rd1452, 7;
	xor.b64  	%rd2027, %rd2024, %rd2026;
	xor.b64  	%rd2028, %rd2027, %rd2025;
	add.s64 	%rd2029, %rd1940, %rd1439;
	add.s64 	%rd2030, %rd2029, %rd2023;
	add.s64 	%rd2031, %rd2030, %rd2028;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1614,%dummy}, %rd2018;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1615}, %rd2018;
	}
	shf.r.wrap.b32 	%r1616, %r1615, %r1614, 19;
	shf.r.wrap.b32 	%r1617, %r1614, %r1615, 19;
	mov.b64 	%rd2032, {%r1617, %r1616};
	shf.l.wrap.b32 	%r1618, %r1614, %r1615, 3;
	shf.l.wrap.b32 	%r1619, %r1615, %r1614, 3;
	mov.b64 	%rd2033, {%r1619, %r1618};
	shr.u64 	%rd2034, %rd2018, 6;
	xor.b64  	%rd2035, %rd2032, %rd2034;
	xor.b64  	%rd2036, %rd2035, %rd2033;
	shf.r.wrap.b32 	%r1620, %r1229, %r1228, 1;
	shf.r.wrap.b32 	%r1621, %r1228, %r1229, 1;
	mov.b64 	%rd2037, {%r1621, %r1620};
	shf.r.wrap.b32 	%r1622, %r1229, %r1228, 8;
	shf.r.wrap.b32 	%r1623, %r1228, %r1229, 8;
	mov.b64 	%rd2038, {%r1623, %r1622};
	shr.u64 	%rd2039, %rd1465, 7;
	xor.b64  	%rd2040, %rd2037, %rd2039;
	xor.b64  	%rd2041, %rd2040, %rd2038;
	add.s64 	%rd2042, %rd1953, %rd1452;
	add.s64 	%rd2043, %rd2042, %rd2036;
	add.s64 	%rd2044, %rd2043, %rd2041;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1624,%dummy}, %rd2031;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1625}, %rd2031;
	}
	shf.r.wrap.b32 	%r1626, %r1625, %r1624, 19;
	shf.r.wrap.b32 	%r1627, %r1624, %r1625, 19;
	mov.b64 	%rd2045, {%r1627, %r1626};
	shf.l.wrap.b32 	%r1628, %r1624, %r1625, 3;
	shf.l.wrap.b32 	%r1629, %r1625, %r1624, 3;
	mov.b64 	%rd2046, {%r1629, %r1628};
	shr.u64 	%rd2047, %rd2031, 6;
	xor.b64  	%rd2048, %rd2045, %rd2047;
	xor.b64  	%rd2049, %rd2048, %rd2046;
	shf.r.wrap.b32 	%r1630, %r1495, %r1494, 1;
	shf.r.wrap.b32 	%r1631, %r1494, %r1495, 1;
	mov.b64 	%rd2050, {%r1631, %r1630};
	shf.r.wrap.b32 	%r1632, %r1495, %r1494, 8;
	shf.r.wrap.b32 	%r1633, %r1494, %r1495, 8;
	mov.b64 	%rd2051, {%r1633, %r1632};
	shr.u64 	%rd2052, %rd1478, 7;
	xor.b64  	%rd2053, %rd2050, %rd2052;
	xor.b64  	%rd2054, %rd2053, %rd2051;
	add.s64 	%rd2055, %rd1966, %rd1465;
	add.s64 	%rd2056, %rd2055, %rd2049;
	add.s64 	%rd2057, %rd2056, %rd2054;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1634,%dummy}, %rd2044;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1635}, %rd2044;
	}
	shf.r.wrap.b32 	%r1636, %r1635, %r1634, 19;
	shf.r.wrap.b32 	%r1637, %r1634, %r1635, 19;
	mov.b64 	%rd2058, {%r1637, %r1636};
	shf.l.wrap.b32 	%r1638, %r1634, %r1635, 3;
	shf.l.wrap.b32 	%r1639, %r1635, %r1634, 3;
	mov.b64 	%rd2059, {%r1639, %r1638};
	shr.u64 	%rd2060, %rd2044, 6;
	xor.b64  	%rd2061, %rd2058, %rd2060;
	xor.b64  	%rd2062, %rd2061, %rd2059;
	shf.r.wrap.b32 	%r1640, %r1505, %r1504, 1;
	shf.r.wrap.b32 	%r1641, %r1504, %r1505, 1;
	mov.b64 	%rd2063, {%r1641, %r1640};
	shf.r.wrap.b32 	%r1642, %r1505, %r1504, 8;
	shf.r.wrap.b32 	%r1643, %r1504, %r1505, 8;
	mov.b64 	%rd2064, {%r1643, %r1642};
	shr.u64 	%rd2065, %rd1491, 7;
	xor.b64  	%rd2066, %rd2063, %rd2065;
	xor.b64  	%rd2067, %rd2066, %rd2064;
	add.s64 	%rd2068, %rd1979, %rd1478;
	add.s64 	%rd2069, %rd2068, %rd2062;
	add.s64 	%rd2070, %rd2069, %rd2067;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1644,%dummy}, %rd2057;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1645}, %rd2057;
	}
	shf.r.wrap.b32 	%r1646, %r1645, %r1644, 19;
	shf.r.wrap.b32 	%r1647, %r1644, %r1645, 19;
	mov.b64 	%rd2071, {%r1647, %r1646};
	shf.l.wrap.b32 	%r1648, %r1644, %r1645, 3;
	shf.l.wrap.b32 	%r1649, %r1645, %r1644, 3;
	mov.b64 	%rd2072, {%r1649, %r1648};
	shr.u64 	%rd2073, %rd2057, 6;
	xor.b64  	%rd2074, %rd2071, %rd2073;
	xor.b64  	%rd2075, %rd2074, %rd2072;
	shf.r.wrap.b32 	%r1650, %r1515, %r1514, 1;
	shf.r.wrap.b32 	%r1651, %r1514, %r1515, 1;
	mov.b64 	%rd2076, {%r1651, %r1650};
	shf.r.wrap.b32 	%r1652, %r1515, %r1514, 8;
	shf.r.wrap.b32 	%r1653, %r1514, %r1515, 8;
	mov.b64 	%rd2077, {%r1653, %r1652};
	shr.u64 	%rd2078, %rd1888, 7;
	xor.b64  	%rd2079, %rd2076, %rd2078;
	xor.b64  	%rd2080, %rd2079, %rd2077;
	add.s64 	%rd2081, %rd1992, %rd1491;
	add.s64 	%rd2082, %rd2081, %rd2075;
	add.s64 	%rd2083, %rd2082, %rd2080;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1654,%dummy}, %rd1864;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1655}, %rd1864;
	}
	shf.r.wrap.b32 	%r1656, %r1655, %r1654, 14;
	shf.r.wrap.b32 	%r1657, %r1654, %r1655, 14;
	mov.b64 	%rd2084, {%r1657, %r1656};
	shf.r.wrap.b32 	%r1658, %r1655, %r1654, 18;
	shf.r.wrap.b32 	%r1659, %r1654, %r1655, 18;
	mov.b64 	%rd2085, {%r1659, %r1658};
	xor.b64  	%rd2086, %rd2085, %rd2084;
	shf.l.wrap.b32 	%r1660, %r1654, %r1655, 23;
	shf.l.wrap.b32 	%r1661, %r1655, %r1654, 23;
	mov.b64 	%rd2087, {%r1661, %r1660};
	xor.b64  	%rd2088, %rd2086, %rd2087;
	xor.b64  	%rd2089, %rd1840, %rd1816;
	and.b64  	%rd2090, %rd2089, %rd1864;
	xor.b64  	%rd2091, %rd2090, %rd1816;
	add.s64 	%rd2092, %rd2091, %rd1792;
	add.s64 	%rd2093, %rd2092, %rd1888;
	ld.const.u64 	%rd5873, [k_sha512+384];
	add.s64 	%rd2094, %rd2093, %rd5873;
	add.s64 	%rd2095, %rd2094, %rd2088;
	add.s64 	%rd2096, %rd2095, %rd1803;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1662,%dummy}, %rd1875;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1663}, %rd1875;
	}
	shf.r.wrap.b32 	%r1664, %r1663, %r1662, 28;
	shf.r.wrap.b32 	%r1665, %r1662, %r1663, 28;
	mov.b64 	%rd2097, {%r1665, %r1664};
	shf.l.wrap.b32 	%r1666, %r1662, %r1663, 30;
	shf.l.wrap.b32 	%r1667, %r1663, %r1662, 30;
	mov.b64 	%rd2098, {%r1667, %r1666};
	xor.b64  	%rd2099, %rd2098, %rd2097;
	shf.l.wrap.b32 	%r1668, %r1662, %r1663, 25;
	shf.l.wrap.b32 	%r1669, %r1663, %r1662, 25;
	mov.b64 	%rd2100, {%r1669, %r1668};
	xor.b64  	%rd2101, %rd2099, %rd2100;
	xor.b64  	%rd2102, %rd1875, %rd1827;
	xor.b64  	%rd2103, %rd1875, %rd1851;
	and.b64  	%rd2104, %rd2103, %rd2102;
	xor.b64  	%rd2105, %rd2104, %rd1875;
	add.s64 	%rd2106, %rd2095, %rd2105;
	add.s64 	%rd2107, %rd2106, %rd2101;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1670,%dummy}, %rd2096;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1671}, %rd2096;
	}
	shf.r.wrap.b32 	%r1672, %r1671, %r1670, 14;
	shf.r.wrap.b32 	%r1673, %r1670, %r1671, 14;
	mov.b64 	%rd2108, {%r1673, %r1672};
	shf.r.wrap.b32 	%r1674, %r1671, %r1670, 18;
	shf.r.wrap.b32 	%r1675, %r1670, %r1671, 18;
	mov.b64 	%rd2109, {%r1675, %r1674};
	xor.b64  	%rd2110, %rd2109, %rd2108;
	shf.l.wrap.b32 	%r1676, %r1670, %r1671, 23;
	shf.l.wrap.b32 	%r1677, %r1671, %r1670, 23;
	mov.b64 	%rd2111, {%r1677, %r1676};
	xor.b64  	%rd2112, %rd2110, %rd2111;
	xor.b64  	%rd2113, %rd1864, %rd1840;
	and.b64  	%rd2114, %rd2096, %rd2113;
	xor.b64  	%rd2115, %rd2114, %rd1840;
	add.s64 	%rd2116, %rd1901, %rd1816;
	ld.const.u64 	%rd5872, [k_sha512+392];
	add.s64 	%rd2117, %rd2116, %rd5872;
	add.s64 	%rd2118, %rd2117, %rd2115;
	add.s64 	%rd2119, %rd2118, %rd2112;
	add.s64 	%rd2120, %rd2119, %rd1827;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1678,%dummy}, %rd2107;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1679}, %rd2107;
	}
	shf.r.wrap.b32 	%r1680, %r1679, %r1678, 28;
	shf.r.wrap.b32 	%r1681, %r1678, %r1679, 28;
	mov.b64 	%rd2121, {%r1681, %r1680};
	shf.l.wrap.b32 	%r1682, %r1678, %r1679, 30;
	shf.l.wrap.b32 	%r1683, %r1679, %r1678, 30;
	mov.b64 	%rd2122, {%r1683, %r1682};
	xor.b64  	%rd2123, %rd2122, %rd2121;
	shf.l.wrap.b32 	%r1684, %r1678, %r1679, 25;
	shf.l.wrap.b32 	%r1685, %r1679, %r1678, 25;
	mov.b64 	%rd2124, {%r1685, %r1684};
	xor.b64  	%rd2125, %rd2123, %rd2124;
	xor.b64  	%rd2126, %rd2107, %rd1851;
	xor.b64  	%rd2127, %rd2107, %rd1875;
	and.b64  	%rd2128, %rd2127, %rd2126;
	xor.b64  	%rd2129, %rd2128, %rd2107;
	add.s64 	%rd2130, %rd2119, %rd2129;
	add.s64 	%rd2131, %rd2130, %rd2125;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1686,%dummy}, %rd2120;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1687}, %rd2120;
	}
	shf.r.wrap.b32 	%r1688, %r1687, %r1686, 14;
	shf.r.wrap.b32 	%r1689, %r1686, %r1687, 14;
	mov.b64 	%rd2132, {%r1689, %r1688};
	shf.r.wrap.b32 	%r1690, %r1687, %r1686, 18;
	shf.r.wrap.b32 	%r1691, %r1686, %r1687, 18;
	mov.b64 	%rd2133, {%r1691, %r1690};
	xor.b64  	%rd2134, %rd2133, %rd2132;
	shf.l.wrap.b32 	%r1692, %r1686, %r1687, 23;
	shf.l.wrap.b32 	%r1693, %r1687, %r1686, 23;
	mov.b64 	%rd2135, {%r1693, %r1692};
	xor.b64  	%rd2136, %rd2134, %rd2135;
	xor.b64  	%rd2137, %rd2096, %rd1864;
	and.b64  	%rd2138, %rd2120, %rd2137;
	xor.b64  	%rd2139, %rd2138, %rd1864;
	add.s64 	%rd2140, %rd1914, %rd1840;
	ld.const.u64 	%rd5871, [k_sha512+400];
	add.s64 	%rd2141, %rd2140, %rd5871;
	add.s64 	%rd2142, %rd2141, %rd2139;
	add.s64 	%rd2143, %rd2142, %rd2136;
	add.s64 	%rd2144, %rd2143, %rd1851;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1694,%dummy}, %rd2131;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1695}, %rd2131;
	}
	shf.r.wrap.b32 	%r1696, %r1695, %r1694, 28;
	shf.r.wrap.b32 	%r1697, %r1694, %r1695, 28;
	mov.b64 	%rd2145, {%r1697, %r1696};
	shf.l.wrap.b32 	%r1698, %r1694, %r1695, 30;
	shf.l.wrap.b32 	%r1699, %r1695, %r1694, 30;
	mov.b64 	%rd2146, {%r1699, %r1698};
	xor.b64  	%rd2147, %rd2146, %rd2145;
	shf.l.wrap.b32 	%r1700, %r1694, %r1695, 25;
	shf.l.wrap.b32 	%r1701, %r1695, %r1694, 25;
	mov.b64 	%rd2148, {%r1701, %r1700};
	xor.b64  	%rd2149, %rd2147, %rd2148;
	xor.b64  	%rd2150, %rd2131, %rd1875;
	xor.b64  	%rd2151, %rd2131, %rd2107;
	and.b64  	%rd2152, %rd2151, %rd2150;
	xor.b64  	%rd2153, %rd2152, %rd2131;
	add.s64 	%rd2154, %rd2143, %rd2153;
	add.s64 	%rd2155, %rd2154, %rd2149;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1702,%dummy}, %rd2144;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1703}, %rd2144;
	}
	shf.r.wrap.b32 	%r1704, %r1703, %r1702, 14;
	shf.r.wrap.b32 	%r1705, %r1702, %r1703, 14;
	mov.b64 	%rd2156, {%r1705, %r1704};
	shf.r.wrap.b32 	%r1706, %r1703, %r1702, 18;
	shf.r.wrap.b32 	%r1707, %r1702, %r1703, 18;
	mov.b64 	%rd2157, {%r1707, %r1706};
	xor.b64  	%rd2158, %rd2157, %rd2156;
	shf.l.wrap.b32 	%r1708, %r1702, %r1703, 23;
	shf.l.wrap.b32 	%r1709, %r1703, %r1702, 23;
	mov.b64 	%rd2159, {%r1709, %r1708};
	xor.b64  	%rd2160, %rd2158, %rd2159;
	xor.b64  	%rd2161, %rd2120, %rd2096;
	and.b64  	%rd2162, %rd2144, %rd2161;
	xor.b64  	%rd2163, %rd2162, %rd2096;
	add.s64 	%rd2164, %rd1927, %rd1864;
	ld.const.u64 	%rd5870, [k_sha512+408];
	add.s64 	%rd2165, %rd2164, %rd5870;
	add.s64 	%rd2166, %rd2165, %rd2163;
	add.s64 	%rd2167, %rd2166, %rd2160;
	add.s64 	%rd2168, %rd2167, %rd1875;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1710,%dummy}, %rd2155;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1711}, %rd2155;
	}
	shf.r.wrap.b32 	%r1712, %r1711, %r1710, 28;
	shf.r.wrap.b32 	%r1713, %r1710, %r1711, 28;
	mov.b64 	%rd2169, {%r1713, %r1712};
	shf.l.wrap.b32 	%r1714, %r1710, %r1711, 30;
	shf.l.wrap.b32 	%r1715, %r1711, %r1710, 30;
	mov.b64 	%rd2170, {%r1715, %r1714};
	xor.b64  	%rd2171, %rd2170, %rd2169;
	shf.l.wrap.b32 	%r1716, %r1710, %r1711, 25;
	shf.l.wrap.b32 	%r1717, %r1711, %r1710, 25;
	mov.b64 	%rd2172, {%r1717, %r1716};
	xor.b64  	%rd2173, %rd2171, %rd2172;
	xor.b64  	%rd2174, %rd2155, %rd2107;
	xor.b64  	%rd2175, %rd2155, %rd2131;
	and.b64  	%rd2176, %rd2175, %rd2174;
	xor.b64  	%rd2177, %rd2176, %rd2155;
	add.s64 	%rd2178, %rd2167, %rd2177;
	add.s64 	%rd2179, %rd2178, %rd2173;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1718,%dummy}, %rd2168;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1719}, %rd2168;
	}
	shf.r.wrap.b32 	%r1720, %r1719, %r1718, 14;
	shf.r.wrap.b32 	%r1721, %r1718, %r1719, 14;
	mov.b64 	%rd2180, {%r1721, %r1720};
	shf.r.wrap.b32 	%r1722, %r1719, %r1718, 18;
	shf.r.wrap.b32 	%r1723, %r1718, %r1719, 18;
	mov.b64 	%rd2181, {%r1723, %r1722};
	xor.b64  	%rd2182, %rd2181, %rd2180;
	shf.l.wrap.b32 	%r1724, %r1718, %r1719, 23;
	shf.l.wrap.b32 	%r1725, %r1719, %r1718, 23;
	mov.b64 	%rd2183, {%r1725, %r1724};
	xor.b64  	%rd2184, %rd2182, %rd2183;
	xor.b64  	%rd2185, %rd2144, %rd2120;
	and.b64  	%rd2186, %rd2168, %rd2185;
	xor.b64  	%rd2187, %rd2186, %rd2120;
	add.s64 	%rd2188, %rd2096, %rd1940;
	ld.const.u64 	%rd5869, [k_sha512+416];
	add.s64 	%rd2189, %rd2188, %rd5869;
	add.s64 	%rd2190, %rd2189, %rd2187;
	add.s64 	%rd2191, %rd2190, %rd2184;
	add.s64 	%rd2192, %rd2191, %rd2107;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1726,%dummy}, %rd2179;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1727}, %rd2179;
	}
	shf.r.wrap.b32 	%r1728, %r1727, %r1726, 28;
	shf.r.wrap.b32 	%r1729, %r1726, %r1727, 28;
	mov.b64 	%rd2193, {%r1729, %r1728};
	shf.l.wrap.b32 	%r1730, %r1726, %r1727, 30;
	shf.l.wrap.b32 	%r1731, %r1727, %r1726, 30;
	mov.b64 	%rd2194, {%r1731, %r1730};
	xor.b64  	%rd2195, %rd2194, %rd2193;
	shf.l.wrap.b32 	%r1732, %r1726, %r1727, 25;
	shf.l.wrap.b32 	%r1733, %r1727, %r1726, 25;
	mov.b64 	%rd2196, {%r1733, %r1732};
	xor.b64  	%rd2197, %rd2195, %rd2196;
	xor.b64  	%rd2198, %rd2179, %rd2131;
	xor.b64  	%rd2199, %rd2179, %rd2155;
	and.b64  	%rd2200, %rd2199, %rd2198;
	xor.b64  	%rd2201, %rd2200, %rd2179;
	add.s64 	%rd2202, %rd2191, %rd2201;
	add.s64 	%rd2203, %rd2202, %rd2197;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1734,%dummy}, %rd2192;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1735}, %rd2192;
	}
	shf.r.wrap.b32 	%r1736, %r1735, %r1734, 14;
	shf.r.wrap.b32 	%r1737, %r1734, %r1735, 14;
	mov.b64 	%rd2204, {%r1737, %r1736};
	shf.r.wrap.b32 	%r1738, %r1735, %r1734, 18;
	shf.r.wrap.b32 	%r1739, %r1734, %r1735, 18;
	mov.b64 	%rd2205, {%r1739, %r1738};
	xor.b64  	%rd2206, %rd2205, %rd2204;
	shf.l.wrap.b32 	%r1740, %r1734, %r1735, 23;
	shf.l.wrap.b32 	%r1741, %r1735, %r1734, 23;
	mov.b64 	%rd2207, {%r1741, %r1740};
	xor.b64  	%rd2208, %rd2206, %rd2207;
	xor.b64  	%rd2209, %rd2168, %rd2144;
	and.b64  	%rd2210, %rd2192, %rd2209;
	xor.b64  	%rd2211, %rd2210, %rd2144;
	add.s64 	%rd2212, %rd2120, %rd1953;
	ld.const.u64 	%rd5868, [k_sha512+424];
	add.s64 	%rd2213, %rd2212, %rd5868;
	add.s64 	%rd2214, %rd2213, %rd2211;
	add.s64 	%rd2215, %rd2214, %rd2208;
	add.s64 	%rd2216, %rd2215, %rd2131;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1742,%dummy}, %rd2203;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1743}, %rd2203;
	}
	shf.r.wrap.b32 	%r1744, %r1743, %r1742, 28;
	shf.r.wrap.b32 	%r1745, %r1742, %r1743, 28;
	mov.b64 	%rd2217, {%r1745, %r1744};
	shf.l.wrap.b32 	%r1746, %r1742, %r1743, 30;
	shf.l.wrap.b32 	%r1747, %r1743, %r1742, 30;
	mov.b64 	%rd2218, {%r1747, %r1746};
	xor.b64  	%rd2219, %rd2218, %rd2217;
	shf.l.wrap.b32 	%r1748, %r1742, %r1743, 25;
	shf.l.wrap.b32 	%r1749, %r1743, %r1742, 25;
	mov.b64 	%rd2220, {%r1749, %r1748};
	xor.b64  	%rd2221, %rd2219, %rd2220;
	xor.b64  	%rd2222, %rd2203, %rd2155;
	xor.b64  	%rd2223, %rd2203, %rd2179;
	and.b64  	%rd2224, %rd2223, %rd2222;
	xor.b64  	%rd2225, %rd2224, %rd2203;
	add.s64 	%rd2226, %rd2215, %rd2225;
	add.s64 	%rd2227, %rd2226, %rd2221;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1750,%dummy}, %rd2216;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1751}, %rd2216;
	}
	shf.r.wrap.b32 	%r1752, %r1751, %r1750, 14;
	shf.r.wrap.b32 	%r1753, %r1750, %r1751, 14;
	mov.b64 	%rd2228, {%r1753, %r1752};
	shf.r.wrap.b32 	%r1754, %r1751, %r1750, 18;
	shf.r.wrap.b32 	%r1755, %r1750, %r1751, 18;
	mov.b64 	%rd2229, {%r1755, %r1754};
	xor.b64  	%rd2230, %rd2229, %rd2228;
	shf.l.wrap.b32 	%r1756, %r1750, %r1751, 23;
	shf.l.wrap.b32 	%r1757, %r1751, %r1750, 23;
	mov.b64 	%rd2231, {%r1757, %r1756};
	xor.b64  	%rd2232, %rd2230, %rd2231;
	xor.b64  	%rd2233, %rd2192, %rd2168;
	and.b64  	%rd2234, %rd2216, %rd2233;
	xor.b64  	%rd2235, %rd2234, %rd2168;
	add.s64 	%rd2236, %rd2144, %rd1966;
	ld.const.u64 	%rd5867, [k_sha512+432];
	add.s64 	%rd2237, %rd2236, %rd5867;
	add.s64 	%rd2238, %rd2237, %rd2235;
	add.s64 	%rd2239, %rd2238, %rd2232;
	add.s64 	%rd2240, %rd2239, %rd2155;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1758,%dummy}, %rd2227;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1759}, %rd2227;
	}
	shf.r.wrap.b32 	%r1760, %r1759, %r1758, 28;
	shf.r.wrap.b32 	%r1761, %r1758, %r1759, 28;
	mov.b64 	%rd2241, {%r1761, %r1760};
	shf.l.wrap.b32 	%r1762, %r1758, %r1759, 30;
	shf.l.wrap.b32 	%r1763, %r1759, %r1758, 30;
	mov.b64 	%rd2242, {%r1763, %r1762};
	xor.b64  	%rd2243, %rd2242, %rd2241;
	shf.l.wrap.b32 	%r1764, %r1758, %r1759, 25;
	shf.l.wrap.b32 	%r1765, %r1759, %r1758, 25;
	mov.b64 	%rd2244, {%r1765, %r1764};
	xor.b64  	%rd2245, %rd2243, %rd2244;
	xor.b64  	%rd2246, %rd2227, %rd2179;
	xor.b64  	%rd2247, %rd2227, %rd2203;
	and.b64  	%rd2248, %rd2247, %rd2246;
	xor.b64  	%rd2249, %rd2248, %rd2227;
	add.s64 	%rd2250, %rd2239, %rd2249;
	add.s64 	%rd2251, %rd2250, %rd2245;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1766,%dummy}, %rd2240;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1767}, %rd2240;
	}
	shf.r.wrap.b32 	%r1768, %r1767, %r1766, 14;
	shf.r.wrap.b32 	%r1769, %r1766, %r1767, 14;
	mov.b64 	%rd2252, {%r1769, %r1768};
	shf.r.wrap.b32 	%r1770, %r1767, %r1766, 18;
	shf.r.wrap.b32 	%r1771, %r1766, %r1767, 18;
	mov.b64 	%rd2253, {%r1771, %r1770};
	xor.b64  	%rd2254, %rd2253, %rd2252;
	shf.l.wrap.b32 	%r1772, %r1766, %r1767, 23;
	shf.l.wrap.b32 	%r1773, %r1767, %r1766, 23;
	mov.b64 	%rd2255, {%r1773, %r1772};
	xor.b64  	%rd2256, %rd2254, %rd2255;
	xor.b64  	%rd2257, %rd2216, %rd2192;
	and.b64  	%rd2258, %rd2240, %rd2257;
	xor.b64  	%rd2259, %rd2258, %rd2192;
	add.s64 	%rd2260, %rd2168, %rd1979;
	ld.const.u64 	%rd5866, [k_sha512+440];
	add.s64 	%rd2261, %rd2260, %rd5866;
	add.s64 	%rd2262, %rd2261, %rd2259;
	add.s64 	%rd2263, %rd2262, %rd2256;
	add.s64 	%rd2264, %rd2263, %rd2179;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1774,%dummy}, %rd2251;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1775}, %rd2251;
	}
	shf.r.wrap.b32 	%r1776, %r1775, %r1774, 28;
	shf.r.wrap.b32 	%r1777, %r1774, %r1775, 28;
	mov.b64 	%rd2265, {%r1777, %r1776};
	shf.l.wrap.b32 	%r1778, %r1774, %r1775, 30;
	shf.l.wrap.b32 	%r1779, %r1775, %r1774, 30;
	mov.b64 	%rd2266, {%r1779, %r1778};
	xor.b64  	%rd2267, %rd2266, %rd2265;
	shf.l.wrap.b32 	%r1780, %r1774, %r1775, 25;
	shf.l.wrap.b32 	%r1781, %r1775, %r1774, 25;
	mov.b64 	%rd2268, {%r1781, %r1780};
	xor.b64  	%rd2269, %rd2267, %rd2268;
	xor.b64  	%rd2270, %rd2251, %rd2203;
	xor.b64  	%rd2271, %rd2251, %rd2227;
	and.b64  	%rd2272, %rd2271, %rd2270;
	xor.b64  	%rd2273, %rd2272, %rd2251;
	add.s64 	%rd2274, %rd2263, %rd2273;
	add.s64 	%rd2275, %rd2274, %rd2269;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1782,%dummy}, %rd2264;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1783}, %rd2264;
	}
	shf.r.wrap.b32 	%r1784, %r1783, %r1782, 14;
	shf.r.wrap.b32 	%r1785, %r1782, %r1783, 14;
	mov.b64 	%rd2276, {%r1785, %r1784};
	shf.r.wrap.b32 	%r1786, %r1783, %r1782, 18;
	shf.r.wrap.b32 	%r1787, %r1782, %r1783, 18;
	mov.b64 	%rd2277, {%r1787, %r1786};
	xor.b64  	%rd2278, %rd2277, %rd2276;
	shf.l.wrap.b32 	%r1788, %r1782, %r1783, 23;
	shf.l.wrap.b32 	%r1789, %r1783, %r1782, 23;
	mov.b64 	%rd2279, {%r1789, %r1788};
	xor.b64  	%rd2280, %rd2278, %rd2279;
	xor.b64  	%rd2281, %rd2240, %rd2216;
	and.b64  	%rd2282, %rd2264, %rd2281;
	xor.b64  	%rd2283, %rd2282, %rd2216;
	add.s64 	%rd2284, %rd2192, %rd1992;
	ld.const.u64 	%rd5865, [k_sha512+448];
	add.s64 	%rd2285, %rd2284, %rd5865;
	add.s64 	%rd2286, %rd2285, %rd2283;
	add.s64 	%rd2287, %rd2286, %rd2280;
	add.s64 	%rd2288, %rd2287, %rd2203;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1790,%dummy}, %rd2275;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1791}, %rd2275;
	}
	shf.r.wrap.b32 	%r1792, %r1791, %r1790, 28;
	shf.r.wrap.b32 	%r1793, %r1790, %r1791, 28;
	mov.b64 	%rd2289, {%r1793, %r1792};
	shf.l.wrap.b32 	%r1794, %r1790, %r1791, 30;
	shf.l.wrap.b32 	%r1795, %r1791, %r1790, 30;
	mov.b64 	%rd2290, {%r1795, %r1794};
	xor.b64  	%rd2291, %rd2290, %rd2289;
	shf.l.wrap.b32 	%r1796, %r1790, %r1791, 25;
	shf.l.wrap.b32 	%r1797, %r1791, %r1790, 25;
	mov.b64 	%rd2292, {%r1797, %r1796};
	xor.b64  	%rd2293, %rd2291, %rd2292;
	xor.b64  	%rd2294, %rd2275, %rd2227;
	xor.b64  	%rd2295, %rd2275, %rd2251;
	and.b64  	%rd2296, %rd2295, %rd2294;
	xor.b64  	%rd2297, %rd2296, %rd2275;
	add.s64 	%rd2298, %rd2287, %rd2297;
	add.s64 	%rd2299, %rd2298, %rd2293;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1798,%dummy}, %rd2288;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1799}, %rd2288;
	}
	shf.r.wrap.b32 	%r1800, %r1799, %r1798, 14;
	shf.r.wrap.b32 	%r1801, %r1798, %r1799, 14;
	mov.b64 	%rd2300, {%r1801, %r1800};
	shf.r.wrap.b32 	%r1802, %r1799, %r1798, 18;
	shf.r.wrap.b32 	%r1803, %r1798, %r1799, 18;
	mov.b64 	%rd2301, {%r1803, %r1802};
	xor.b64  	%rd2302, %rd2301, %rd2300;
	shf.l.wrap.b32 	%r1804, %r1798, %r1799, 23;
	shf.l.wrap.b32 	%r1805, %r1799, %r1798, 23;
	mov.b64 	%rd2303, {%r1805, %r1804};
	xor.b64  	%rd2304, %rd2302, %rd2303;
	xor.b64  	%rd2305, %rd2264, %rd2240;
	and.b64  	%rd2306, %rd2288, %rd2305;
	xor.b64  	%rd2307, %rd2306, %rd2240;
	add.s64 	%rd2308, %rd2216, %rd2005;
	ld.const.u64 	%rd5864, [k_sha512+456];
	add.s64 	%rd2309, %rd2308, %rd5864;
	add.s64 	%rd2310, %rd2309, %rd2307;
	add.s64 	%rd2311, %rd2310, %rd2304;
	add.s64 	%rd2312, %rd2311, %rd2227;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1806,%dummy}, %rd2299;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1807}, %rd2299;
	}
	shf.r.wrap.b32 	%r1808, %r1807, %r1806, 28;
	shf.r.wrap.b32 	%r1809, %r1806, %r1807, 28;
	mov.b64 	%rd2313, {%r1809, %r1808};
	shf.l.wrap.b32 	%r1810, %r1806, %r1807, 30;
	shf.l.wrap.b32 	%r1811, %r1807, %r1806, 30;
	mov.b64 	%rd2314, {%r1811, %r1810};
	xor.b64  	%rd2315, %rd2314, %rd2313;
	shf.l.wrap.b32 	%r1812, %r1806, %r1807, 25;
	shf.l.wrap.b32 	%r1813, %r1807, %r1806, 25;
	mov.b64 	%rd2316, {%r1813, %r1812};
	xor.b64  	%rd2317, %rd2315, %rd2316;
	xor.b64  	%rd2318, %rd2299, %rd2251;
	xor.b64  	%rd2319, %rd2299, %rd2275;
	and.b64  	%rd2320, %rd2319, %rd2318;
	xor.b64  	%rd2321, %rd2320, %rd2299;
	add.s64 	%rd2322, %rd2311, %rd2321;
	add.s64 	%rd2323, %rd2322, %rd2317;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1814,%dummy}, %rd2312;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1815}, %rd2312;
	}
	shf.r.wrap.b32 	%r1816, %r1815, %r1814, 14;
	shf.r.wrap.b32 	%r1817, %r1814, %r1815, 14;
	mov.b64 	%rd2324, {%r1817, %r1816};
	shf.r.wrap.b32 	%r1818, %r1815, %r1814, 18;
	shf.r.wrap.b32 	%r1819, %r1814, %r1815, 18;
	mov.b64 	%rd2325, {%r1819, %r1818};
	xor.b64  	%rd2326, %rd2325, %rd2324;
	shf.l.wrap.b32 	%r1820, %r1814, %r1815, 23;
	shf.l.wrap.b32 	%r1821, %r1815, %r1814, 23;
	mov.b64 	%rd2327, {%r1821, %r1820};
	xor.b64  	%rd2328, %rd2326, %rd2327;
	xor.b64  	%rd2329, %rd2288, %rd2264;
	and.b64  	%rd2330, %rd2312, %rd2329;
	xor.b64  	%rd2331, %rd2330, %rd2264;
	add.s64 	%rd2332, %rd2240, %rd2018;
	ld.const.u64 	%rd5863, [k_sha512+464];
	add.s64 	%rd2333, %rd2332, %rd5863;
	add.s64 	%rd2334, %rd2333, %rd2331;
	add.s64 	%rd2335, %rd2334, %rd2328;
	add.s64 	%rd2336, %rd2335, %rd2251;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1822,%dummy}, %rd2323;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1823}, %rd2323;
	}
	shf.r.wrap.b32 	%r1824, %r1823, %r1822, 28;
	shf.r.wrap.b32 	%r1825, %r1822, %r1823, 28;
	mov.b64 	%rd2337, {%r1825, %r1824};
	shf.l.wrap.b32 	%r1826, %r1822, %r1823, 30;
	shf.l.wrap.b32 	%r1827, %r1823, %r1822, 30;
	mov.b64 	%rd2338, {%r1827, %r1826};
	xor.b64  	%rd2339, %rd2338, %rd2337;
	shf.l.wrap.b32 	%r1828, %r1822, %r1823, 25;
	shf.l.wrap.b32 	%r1829, %r1823, %r1822, 25;
	mov.b64 	%rd2340, {%r1829, %r1828};
	xor.b64  	%rd2341, %rd2339, %rd2340;
	xor.b64  	%rd2342, %rd2323, %rd2275;
	xor.b64  	%rd2343, %rd2323, %rd2299;
	and.b64  	%rd2344, %rd2343, %rd2342;
	xor.b64  	%rd2345, %rd2344, %rd2323;
	add.s64 	%rd2346, %rd2335, %rd2345;
	add.s64 	%rd2347, %rd2346, %rd2341;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1830,%dummy}, %rd2336;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1831}, %rd2336;
	}
	shf.r.wrap.b32 	%r1832, %r1831, %r1830, 14;
	shf.r.wrap.b32 	%r1833, %r1830, %r1831, 14;
	mov.b64 	%rd2348, {%r1833, %r1832};
	shf.r.wrap.b32 	%r1834, %r1831, %r1830, 18;
	shf.r.wrap.b32 	%r1835, %r1830, %r1831, 18;
	mov.b64 	%rd2349, {%r1835, %r1834};
	xor.b64  	%rd2350, %rd2349, %rd2348;
	shf.l.wrap.b32 	%r1836, %r1830, %r1831, 23;
	shf.l.wrap.b32 	%r1837, %r1831, %r1830, 23;
	mov.b64 	%rd2351, {%r1837, %r1836};
	xor.b64  	%rd2352, %rd2350, %rd2351;
	xor.b64  	%rd2353, %rd2312, %rd2288;
	and.b64  	%rd2354, %rd2336, %rd2353;
	xor.b64  	%rd2355, %rd2354, %rd2288;
	add.s64 	%rd2356, %rd2264, %rd2031;
	ld.const.u64 	%rd5862, [k_sha512+472];
	add.s64 	%rd2357, %rd2356, %rd5862;
	add.s64 	%rd2358, %rd2357, %rd2355;
	add.s64 	%rd2359, %rd2358, %rd2352;
	add.s64 	%rd2360, %rd2359, %rd2275;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1838,%dummy}, %rd2347;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1839}, %rd2347;
	}
	shf.r.wrap.b32 	%r1840, %r1839, %r1838, 28;
	shf.r.wrap.b32 	%r1841, %r1838, %r1839, 28;
	mov.b64 	%rd2361, {%r1841, %r1840};
	shf.l.wrap.b32 	%r1842, %r1838, %r1839, 30;
	shf.l.wrap.b32 	%r1843, %r1839, %r1838, 30;
	mov.b64 	%rd2362, {%r1843, %r1842};
	xor.b64  	%rd2363, %rd2362, %rd2361;
	shf.l.wrap.b32 	%r1844, %r1838, %r1839, 25;
	shf.l.wrap.b32 	%r1845, %r1839, %r1838, 25;
	mov.b64 	%rd2364, {%r1845, %r1844};
	xor.b64  	%rd2365, %rd2363, %rd2364;
	xor.b64  	%rd2366, %rd2347, %rd2299;
	xor.b64  	%rd2367, %rd2347, %rd2323;
	and.b64  	%rd2368, %rd2367, %rd2366;
	xor.b64  	%rd2369, %rd2368, %rd2347;
	add.s64 	%rd2370, %rd2359, %rd2369;
	add.s64 	%rd2371, %rd2370, %rd2365;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1846,%dummy}, %rd2360;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1847}, %rd2360;
	}
	shf.r.wrap.b32 	%r1848, %r1847, %r1846, 14;
	shf.r.wrap.b32 	%r1849, %r1846, %r1847, 14;
	mov.b64 	%rd2372, {%r1849, %r1848};
	shf.r.wrap.b32 	%r1850, %r1847, %r1846, 18;
	shf.r.wrap.b32 	%r1851, %r1846, %r1847, 18;
	mov.b64 	%rd2373, {%r1851, %r1850};
	xor.b64  	%rd2374, %rd2373, %rd2372;
	shf.l.wrap.b32 	%r1852, %r1846, %r1847, 23;
	shf.l.wrap.b32 	%r1853, %r1847, %r1846, 23;
	mov.b64 	%rd2375, {%r1853, %r1852};
	xor.b64  	%rd2376, %rd2374, %rd2375;
	xor.b64  	%rd2377, %rd2336, %rd2312;
	and.b64  	%rd2378, %rd2360, %rd2377;
	xor.b64  	%rd2379, %rd2378, %rd2312;
	add.s64 	%rd2380, %rd2288, %rd2044;
	ld.const.u64 	%rd5861, [k_sha512+480];
	add.s64 	%rd2381, %rd2380, %rd5861;
	add.s64 	%rd2382, %rd2381, %rd2379;
	add.s64 	%rd2383, %rd2382, %rd2376;
	add.s64 	%rd2384, %rd2383, %rd2299;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1854,%dummy}, %rd2371;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1855}, %rd2371;
	}
	shf.r.wrap.b32 	%r1856, %r1855, %r1854, 28;
	shf.r.wrap.b32 	%r1857, %r1854, %r1855, 28;
	mov.b64 	%rd2385, {%r1857, %r1856};
	shf.l.wrap.b32 	%r1858, %r1854, %r1855, 30;
	shf.l.wrap.b32 	%r1859, %r1855, %r1854, 30;
	mov.b64 	%rd2386, {%r1859, %r1858};
	xor.b64  	%rd2387, %rd2386, %rd2385;
	shf.l.wrap.b32 	%r1860, %r1854, %r1855, 25;
	shf.l.wrap.b32 	%r1861, %r1855, %r1854, 25;
	mov.b64 	%rd2388, {%r1861, %r1860};
	xor.b64  	%rd2389, %rd2387, %rd2388;
	xor.b64  	%rd2390, %rd2371, %rd2323;
	xor.b64  	%rd2391, %rd2371, %rd2347;
	and.b64  	%rd2392, %rd2391, %rd2390;
	xor.b64  	%rd2393, %rd2392, %rd2371;
	add.s64 	%rd2394, %rd2383, %rd2393;
	add.s64 	%rd2395, %rd2394, %rd2389;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1862,%dummy}, %rd2384;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1863}, %rd2384;
	}
	shf.r.wrap.b32 	%r1864, %r1863, %r1862, 14;
	shf.r.wrap.b32 	%r1865, %r1862, %r1863, 14;
	mov.b64 	%rd2396, {%r1865, %r1864};
	shf.r.wrap.b32 	%r1866, %r1863, %r1862, 18;
	shf.r.wrap.b32 	%r1867, %r1862, %r1863, 18;
	mov.b64 	%rd2397, {%r1867, %r1866};
	xor.b64  	%rd2398, %rd2397, %rd2396;
	shf.l.wrap.b32 	%r1868, %r1862, %r1863, 23;
	shf.l.wrap.b32 	%r1869, %r1863, %r1862, 23;
	mov.b64 	%rd2399, {%r1869, %r1868};
	xor.b64  	%rd2400, %rd2398, %rd2399;
	xor.b64  	%rd2401, %rd2360, %rd2336;
	and.b64  	%rd2402, %rd2384, %rd2401;
	xor.b64  	%rd2403, %rd2402, %rd2336;
	add.s64 	%rd2404, %rd2312, %rd2057;
	ld.const.u64 	%rd5860, [k_sha512+488];
	add.s64 	%rd2405, %rd2404, %rd5860;
	add.s64 	%rd2406, %rd2405, %rd2403;
	add.s64 	%rd2407, %rd2406, %rd2400;
	add.s64 	%rd2408, %rd2407, %rd2323;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1870,%dummy}, %rd2395;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1871}, %rd2395;
	}
	shf.r.wrap.b32 	%r1872, %r1871, %r1870, 28;
	shf.r.wrap.b32 	%r1873, %r1870, %r1871, 28;
	mov.b64 	%rd2409, {%r1873, %r1872};
	shf.l.wrap.b32 	%r1874, %r1870, %r1871, 30;
	shf.l.wrap.b32 	%r1875, %r1871, %r1870, 30;
	mov.b64 	%rd2410, {%r1875, %r1874};
	xor.b64  	%rd2411, %rd2410, %rd2409;
	shf.l.wrap.b32 	%r1876, %r1870, %r1871, 25;
	shf.l.wrap.b32 	%r1877, %r1871, %r1870, 25;
	mov.b64 	%rd2412, {%r1877, %r1876};
	xor.b64  	%rd2413, %rd2411, %rd2412;
	xor.b64  	%rd2414, %rd2395, %rd2347;
	xor.b64  	%rd2415, %rd2395, %rd2371;
	and.b64  	%rd2416, %rd2415, %rd2414;
	xor.b64  	%rd2417, %rd2416, %rd2395;
	add.s64 	%rd2418, %rd2407, %rd2417;
	add.s64 	%rd2419, %rd2418, %rd2413;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1878,%dummy}, %rd2408;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1879}, %rd2408;
	}
	shf.r.wrap.b32 	%r1880, %r1879, %r1878, 14;
	shf.r.wrap.b32 	%r1881, %r1878, %r1879, 14;
	mov.b64 	%rd2420, {%r1881, %r1880};
	shf.r.wrap.b32 	%r1882, %r1879, %r1878, 18;
	shf.r.wrap.b32 	%r1883, %r1878, %r1879, 18;
	mov.b64 	%rd2421, {%r1883, %r1882};
	xor.b64  	%rd2422, %rd2421, %rd2420;
	shf.l.wrap.b32 	%r1884, %r1878, %r1879, 23;
	shf.l.wrap.b32 	%r1885, %r1879, %r1878, 23;
	mov.b64 	%rd2423, {%r1885, %r1884};
	xor.b64  	%rd2424, %rd2422, %rd2423;
	xor.b64  	%rd2425, %rd2384, %rd2360;
	and.b64  	%rd2426, %rd2408, %rd2425;
	xor.b64  	%rd2427, %rd2426, %rd2360;
	add.s64 	%rd2428, %rd2336, %rd2070;
	ld.const.u64 	%rd5859, [k_sha512+496];
	add.s64 	%rd2429, %rd2428, %rd5859;
	add.s64 	%rd2430, %rd2429, %rd2427;
	add.s64 	%rd2431, %rd2430, %rd2424;
	add.s64 	%rd2432, %rd2431, %rd2347;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1886,%dummy}, %rd2419;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1887}, %rd2419;
	}
	shf.r.wrap.b32 	%r1888, %r1887, %r1886, 28;
	shf.r.wrap.b32 	%r1889, %r1886, %r1887, 28;
	mov.b64 	%rd2433, {%r1889, %r1888};
	shf.l.wrap.b32 	%r1890, %r1886, %r1887, 30;
	shf.l.wrap.b32 	%r1891, %r1887, %r1886, 30;
	mov.b64 	%rd2434, {%r1891, %r1890};
	xor.b64  	%rd2435, %rd2434, %rd2433;
	shf.l.wrap.b32 	%r1892, %r1886, %r1887, 25;
	shf.l.wrap.b32 	%r1893, %r1887, %r1886, 25;
	mov.b64 	%rd2436, {%r1893, %r1892};
	xor.b64  	%rd2437, %rd2435, %rd2436;
	xor.b64  	%rd2438, %rd2419, %rd2371;
	xor.b64  	%rd2439, %rd2419, %rd2395;
	and.b64  	%rd2440, %rd2439, %rd2438;
	xor.b64  	%rd2441, %rd2440, %rd2419;
	add.s64 	%rd2442, %rd2431, %rd2441;
	add.s64 	%rd2443, %rd2442, %rd2437;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1894,%dummy}, %rd2432;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1895}, %rd2432;
	}
	shf.r.wrap.b32 	%r1896, %r1895, %r1894, 14;
	shf.r.wrap.b32 	%r1897, %r1894, %r1895, 14;
	mov.b64 	%rd2444, {%r1897, %r1896};
	shf.r.wrap.b32 	%r1898, %r1895, %r1894, 18;
	shf.r.wrap.b32 	%r1899, %r1894, %r1895, 18;
	mov.b64 	%rd2445, {%r1899, %r1898};
	xor.b64  	%rd2446, %rd2445, %rd2444;
	shf.l.wrap.b32 	%r1900, %r1894, %r1895, 23;
	shf.l.wrap.b32 	%r1901, %r1895, %r1894, 23;
	mov.b64 	%rd2447, {%r1901, %r1900};
	xor.b64  	%rd2448, %rd2446, %rd2447;
	xor.b64  	%rd2449, %rd2408, %rd2384;
	and.b64  	%rd2450, %rd2432, %rd2449;
	xor.b64  	%rd2451, %rd2450, %rd2384;
	add.s64 	%rd2452, %rd2360, %rd2083;
	ld.const.u64 	%rd5858, [k_sha512+504];
	add.s64 	%rd2453, %rd2452, %rd5858;
	add.s64 	%rd2454, %rd2453, %rd2451;
	add.s64 	%rd2455, %rd2454, %rd2448;
	add.s64 	%rd2456, %rd2455, %rd2371;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1902,%dummy}, %rd2443;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1903}, %rd2443;
	}
	shf.r.wrap.b32 	%r1904, %r1903, %r1902, 28;
	shf.r.wrap.b32 	%r1905, %r1902, %r1903, 28;
	mov.b64 	%rd2457, {%r1905, %r1904};
	shf.l.wrap.b32 	%r1906, %r1902, %r1903, 30;
	shf.l.wrap.b32 	%r1907, %r1903, %r1902, 30;
	mov.b64 	%rd2458, {%r1907, %r1906};
	xor.b64  	%rd2459, %rd2458, %rd2457;
	shf.l.wrap.b32 	%r1908, %r1902, %r1903, 25;
	shf.l.wrap.b32 	%r1909, %r1903, %r1902, 25;
	mov.b64 	%rd2460, {%r1909, %r1908};
	xor.b64  	%rd2461, %rd2459, %rd2460;
	xor.b64  	%rd2462, %rd2443, %rd2395;
	xor.b64  	%rd2463, %rd2443, %rd2419;
	and.b64  	%rd2464, %rd2463, %rd2462;
	xor.b64  	%rd2465, %rd2464, %rd2443;
	add.s64 	%rd2466, %rd2455, %rd2465;
	add.s64 	%rd2467, %rd2466, %rd2461;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1910,%dummy}, %rd2070;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1911}, %rd2070;
	}
	shf.r.wrap.b32 	%r1912, %r1911, %r1910, 19;
	shf.r.wrap.b32 	%r1913, %r1910, %r1911, 19;
	mov.b64 	%rd2468, {%r1913, %r1912};
	shf.l.wrap.b32 	%r1914, %r1910, %r1911, 3;
	shf.l.wrap.b32 	%r1915, %r1911, %r1910, 3;
	mov.b64 	%rd2469, {%r1915, %r1914};
	shr.u64 	%rd2470, %rd2070, 6;
	xor.b64  	%rd2471, %rd2468, %rd2470;
	xor.b64  	%rd2472, %rd2471, %rd2469;
	shf.r.wrap.b32 	%r1916, %r1525, %r1524, 1;
	shf.r.wrap.b32 	%r1917, %r1524, %r1525, 1;
	mov.b64 	%rd2473, {%r1917, %r1916};
	shf.r.wrap.b32 	%r1918, %r1525, %r1524, 8;
	shf.r.wrap.b32 	%r1919, %r1524, %r1525, 8;
	mov.b64 	%rd2474, {%r1919, %r1918};
	shr.u64 	%rd2475, %rd1901, 7;
	xor.b64  	%rd2476, %rd2473, %rd2475;
	xor.b64  	%rd2477, %rd2476, %rd2474;
	add.s64 	%rd2478, %rd2005, %rd1888;
	add.s64 	%rd2479, %rd2478, %rd2472;
	add.s64 	%rd2480, %rd2479, %rd2477;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1920,%dummy}, %rd2083;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1921}, %rd2083;
	}
	shf.r.wrap.b32 	%r1922, %r1921, %r1920, 19;
	shf.r.wrap.b32 	%r1923, %r1920, %r1921, 19;
	mov.b64 	%rd2481, {%r1923, %r1922};
	shf.l.wrap.b32 	%r1924, %r1920, %r1921, 3;
	shf.l.wrap.b32 	%r1925, %r1921, %r1920, 3;
	mov.b64 	%rd2482, {%r1925, %r1924};
	shr.u64 	%rd2483, %rd2083, 6;
	xor.b64  	%rd2484, %rd2481, %rd2483;
	xor.b64  	%rd2485, %rd2484, %rd2482;
	shf.r.wrap.b32 	%r1926, %r1535, %r1534, 1;
	shf.r.wrap.b32 	%r1927, %r1534, %r1535, 1;
	mov.b64 	%rd2486, {%r1927, %r1926};
	shf.r.wrap.b32 	%r1928, %r1535, %r1534, 8;
	shf.r.wrap.b32 	%r1929, %r1534, %r1535, 8;
	mov.b64 	%rd2487, {%r1929, %r1928};
	shr.u64 	%rd2488, %rd1914, 7;
	xor.b64  	%rd2489, %rd2486, %rd2488;
	xor.b64  	%rd2490, %rd2489, %rd2487;
	add.s64 	%rd2491, %rd2018, %rd1901;
	add.s64 	%rd2492, %rd2491, %rd2485;
	add.s64 	%rd2493, %rd2492, %rd2490;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1930,%dummy}, %rd2480;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1931}, %rd2480;
	}
	shf.r.wrap.b32 	%r1932, %r1931, %r1930, 19;
	shf.r.wrap.b32 	%r1933, %r1930, %r1931, 19;
	mov.b64 	%rd2494, {%r1933, %r1932};
	shf.l.wrap.b32 	%r1934, %r1930, %r1931, 3;
	shf.l.wrap.b32 	%r1935, %r1931, %r1930, 3;
	mov.b64 	%rd2495, {%r1935, %r1934};
	shr.u64 	%rd2496, %rd2480, 6;
	xor.b64  	%rd2497, %rd2494, %rd2496;
	xor.b64  	%rd2498, %rd2497, %rd2495;
	shf.r.wrap.b32 	%r1936, %r1545, %r1544, 1;
	shf.r.wrap.b32 	%r1937, %r1544, %r1545, 1;
	mov.b64 	%rd2499, {%r1937, %r1936};
	shf.r.wrap.b32 	%r1938, %r1545, %r1544, 8;
	shf.r.wrap.b32 	%r1939, %r1544, %r1545, 8;
	mov.b64 	%rd2500, {%r1939, %r1938};
	shr.u64 	%rd2501, %rd1927, 7;
	xor.b64  	%rd2502, %rd2499, %rd2501;
	xor.b64  	%rd2503, %rd2502, %rd2500;
	add.s64 	%rd2504, %rd2031, %rd1914;
	add.s64 	%rd2505, %rd2504, %rd2498;
	add.s64 	%rd2506, %rd2505, %rd2503;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1940,%dummy}, %rd2493;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1941}, %rd2493;
	}
	shf.r.wrap.b32 	%r1942, %r1941, %r1940, 19;
	shf.r.wrap.b32 	%r1943, %r1940, %r1941, 19;
	mov.b64 	%rd2507, {%r1943, %r1942};
	shf.l.wrap.b32 	%r1944, %r1940, %r1941, 3;
	shf.l.wrap.b32 	%r1945, %r1941, %r1940, 3;
	mov.b64 	%rd2508, {%r1945, %r1944};
	shr.u64 	%rd2509, %rd2493, 6;
	xor.b64  	%rd2510, %rd2507, %rd2509;
	xor.b64  	%rd2511, %rd2510, %rd2508;
	shf.r.wrap.b32 	%r1946, %r1555, %r1554, 1;
	shf.r.wrap.b32 	%r1947, %r1554, %r1555, 1;
	mov.b64 	%rd2512, {%r1947, %r1946};
	shf.r.wrap.b32 	%r1948, %r1555, %r1554, 8;
	shf.r.wrap.b32 	%r1949, %r1554, %r1555, 8;
	mov.b64 	%rd2513, {%r1949, %r1948};
	shr.u64 	%rd2514, %rd1940, 7;
	xor.b64  	%rd2515, %rd2512, %rd2514;
	xor.b64  	%rd2516, %rd2515, %rd2513;
	add.s64 	%rd2517, %rd2044, %rd1927;
	add.s64 	%rd2518, %rd2517, %rd2511;
	add.s64 	%rd2519, %rd2518, %rd2516;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1950,%dummy}, %rd2506;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1951}, %rd2506;
	}
	shf.r.wrap.b32 	%r1952, %r1951, %r1950, 19;
	shf.r.wrap.b32 	%r1953, %r1950, %r1951, 19;
	mov.b64 	%rd2520, {%r1953, %r1952};
	shf.l.wrap.b32 	%r1954, %r1950, %r1951, 3;
	shf.l.wrap.b32 	%r1955, %r1951, %r1950, 3;
	mov.b64 	%rd2521, {%r1955, %r1954};
	shr.u64 	%rd2522, %rd2506, 6;
	xor.b64  	%rd2523, %rd2520, %rd2522;
	xor.b64  	%rd2524, %rd2523, %rd2521;
	shf.r.wrap.b32 	%r1956, %r1565, %r1564, 1;
	shf.r.wrap.b32 	%r1957, %r1564, %r1565, 1;
	mov.b64 	%rd2525, {%r1957, %r1956};
	shf.r.wrap.b32 	%r1958, %r1565, %r1564, 8;
	shf.r.wrap.b32 	%r1959, %r1564, %r1565, 8;
	mov.b64 	%rd2526, {%r1959, %r1958};
	shr.u64 	%rd2527, %rd1953, 7;
	xor.b64  	%rd2528, %rd2525, %rd2527;
	xor.b64  	%rd2529, %rd2528, %rd2526;
	add.s64 	%rd2530, %rd2057, %rd1940;
	add.s64 	%rd2531, %rd2530, %rd2524;
	add.s64 	%rd2532, %rd2531, %rd2529;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1960,%dummy}, %rd2519;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1961}, %rd2519;
	}
	shf.r.wrap.b32 	%r1962, %r1961, %r1960, 19;
	shf.r.wrap.b32 	%r1963, %r1960, %r1961, 19;
	mov.b64 	%rd2533, {%r1963, %r1962};
	shf.l.wrap.b32 	%r1964, %r1960, %r1961, 3;
	shf.l.wrap.b32 	%r1965, %r1961, %r1960, 3;
	mov.b64 	%rd2534, {%r1965, %r1964};
	shr.u64 	%rd2535, %rd2519, 6;
	xor.b64  	%rd2536, %rd2533, %rd2535;
	xor.b64  	%rd2537, %rd2536, %rd2534;
	shf.r.wrap.b32 	%r1966, %r1575, %r1574, 1;
	shf.r.wrap.b32 	%r1967, %r1574, %r1575, 1;
	mov.b64 	%rd2538, {%r1967, %r1966};
	shf.r.wrap.b32 	%r1968, %r1575, %r1574, 8;
	shf.r.wrap.b32 	%r1969, %r1574, %r1575, 8;
	mov.b64 	%rd2539, {%r1969, %r1968};
	shr.u64 	%rd2540, %rd1966, 7;
	xor.b64  	%rd2541, %rd2538, %rd2540;
	xor.b64  	%rd2542, %rd2541, %rd2539;
	add.s64 	%rd2543, %rd2070, %rd1953;
	add.s64 	%rd2544, %rd2543, %rd2537;
	add.s64 	%rd2545, %rd2544, %rd2542;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1970,%dummy}, %rd2532;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1971}, %rd2532;
	}
	shf.r.wrap.b32 	%r1972, %r1971, %r1970, 19;
	shf.r.wrap.b32 	%r1973, %r1970, %r1971, 19;
	mov.b64 	%rd2546, {%r1973, %r1972};
	shf.l.wrap.b32 	%r1974, %r1970, %r1971, 3;
	shf.l.wrap.b32 	%r1975, %r1971, %r1970, 3;
	mov.b64 	%rd2547, {%r1975, %r1974};
	shr.u64 	%rd2548, %rd2532, 6;
	xor.b64  	%rd2549, %rd2546, %rd2548;
	xor.b64  	%rd2550, %rd2549, %rd2547;
	shf.r.wrap.b32 	%r1976, %r1585, %r1584, 1;
	shf.r.wrap.b32 	%r1977, %r1584, %r1585, 1;
	mov.b64 	%rd2551, {%r1977, %r1976};
	shf.r.wrap.b32 	%r1978, %r1585, %r1584, 8;
	shf.r.wrap.b32 	%r1979, %r1584, %r1585, 8;
	mov.b64 	%rd2552, {%r1979, %r1978};
	shr.u64 	%rd2553, %rd1979, 7;
	xor.b64  	%rd2554, %rd2551, %rd2553;
	xor.b64  	%rd2555, %rd2554, %rd2552;
	add.s64 	%rd2556, %rd2083, %rd1966;
	add.s64 	%rd2557, %rd2556, %rd2550;
	add.s64 	%rd2558, %rd2557, %rd2555;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1980,%dummy}, %rd2545;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1981}, %rd2545;
	}
	shf.r.wrap.b32 	%r1982, %r1981, %r1980, 19;
	shf.r.wrap.b32 	%r1983, %r1980, %r1981, 19;
	mov.b64 	%rd2559, {%r1983, %r1982};
	shf.l.wrap.b32 	%r1984, %r1980, %r1981, 3;
	shf.l.wrap.b32 	%r1985, %r1981, %r1980, 3;
	mov.b64 	%rd2560, {%r1985, %r1984};
	shr.u64 	%rd2561, %rd2545, 6;
	xor.b64  	%rd2562, %rd2559, %rd2561;
	xor.b64  	%rd2563, %rd2562, %rd2560;
	shf.r.wrap.b32 	%r1986, %r1595, %r1594, 1;
	shf.r.wrap.b32 	%r1987, %r1594, %r1595, 1;
	mov.b64 	%rd2564, {%r1987, %r1986};
	shf.r.wrap.b32 	%r1988, %r1595, %r1594, 8;
	shf.r.wrap.b32 	%r1989, %r1594, %r1595, 8;
	mov.b64 	%rd2565, {%r1989, %r1988};
	shr.u64 	%rd2566, %rd1992, 7;
	xor.b64  	%rd2567, %rd2564, %rd2566;
	xor.b64  	%rd2568, %rd2567, %rd2565;
	add.s64 	%rd2569, %rd2480, %rd1979;
	add.s64 	%rd2570, %rd2569, %rd2563;
	add.s64 	%rd2571, %rd2570, %rd2568;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1990,%dummy}, %rd2558;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1991}, %rd2558;
	}
	shf.r.wrap.b32 	%r1992, %r1991, %r1990, 19;
	shf.r.wrap.b32 	%r1993, %r1990, %r1991, 19;
	mov.b64 	%rd2572, {%r1993, %r1992};
	shf.l.wrap.b32 	%r1994, %r1990, %r1991, 3;
	shf.l.wrap.b32 	%r1995, %r1991, %r1990, 3;
	mov.b64 	%rd2573, {%r1995, %r1994};
	shr.u64 	%rd2574, %rd2558, 6;
	xor.b64  	%rd2575, %rd2572, %rd2574;
	xor.b64  	%rd2576, %rd2575, %rd2573;
	shf.r.wrap.b32 	%r1996, %r1605, %r1604, 1;
	shf.r.wrap.b32 	%r1997, %r1604, %r1605, 1;
	mov.b64 	%rd2577, {%r1997, %r1996};
	shf.r.wrap.b32 	%r1998, %r1605, %r1604, 8;
	shf.r.wrap.b32 	%r1999, %r1604, %r1605, 8;
	mov.b64 	%rd2578, {%r1999, %r1998};
	shr.u64 	%rd2579, %rd2005, 7;
	xor.b64  	%rd2580, %rd2577, %rd2579;
	xor.b64  	%rd2581, %rd2580, %rd2578;
	add.s64 	%rd2582, %rd2493, %rd1992;
	add.s64 	%rd2583, %rd2582, %rd2576;
	add.s64 	%rd2584, %rd2583, %rd2581;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2000,%dummy}, %rd2571;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2001}, %rd2571;
	}
	shf.r.wrap.b32 	%r2002, %r2001, %r2000, 19;
	shf.r.wrap.b32 	%r2003, %r2000, %r2001, 19;
	mov.b64 	%rd2585, {%r2003, %r2002};
	shf.l.wrap.b32 	%r2004, %r2000, %r2001, 3;
	shf.l.wrap.b32 	%r2005, %r2001, %r2000, 3;
	mov.b64 	%rd2586, {%r2005, %r2004};
	shr.u64 	%rd2587, %rd2571, 6;
	xor.b64  	%rd2588, %rd2585, %rd2587;
	xor.b64  	%rd2589, %rd2588, %rd2586;
	shf.r.wrap.b32 	%r2006, %r1615, %r1614, 1;
	shf.r.wrap.b32 	%r2007, %r1614, %r1615, 1;
	mov.b64 	%rd2590, {%r2007, %r2006};
	shf.r.wrap.b32 	%r2008, %r1615, %r1614, 8;
	shf.r.wrap.b32 	%r2009, %r1614, %r1615, 8;
	mov.b64 	%rd2591, {%r2009, %r2008};
	shr.u64 	%rd2592, %rd2018, 7;
	xor.b64  	%rd2593, %rd2590, %rd2592;
	xor.b64  	%rd2594, %rd2593, %rd2591;
	add.s64 	%rd2595, %rd2506, %rd2005;
	add.s64 	%rd2596, %rd2595, %rd2589;
	add.s64 	%rd2597, %rd2596, %rd2594;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2010,%dummy}, %rd2584;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2011}, %rd2584;
	}
	shf.r.wrap.b32 	%r2012, %r2011, %r2010, 19;
	shf.r.wrap.b32 	%r2013, %r2010, %r2011, 19;
	mov.b64 	%rd2598, {%r2013, %r2012};
	shf.l.wrap.b32 	%r2014, %r2010, %r2011, 3;
	shf.l.wrap.b32 	%r2015, %r2011, %r2010, 3;
	mov.b64 	%rd2599, {%r2015, %r2014};
	shr.u64 	%rd2600, %rd2584, 6;
	xor.b64  	%rd2601, %rd2598, %rd2600;
	xor.b64  	%rd2602, %rd2601, %rd2599;
	shf.r.wrap.b32 	%r2016, %r1625, %r1624, 1;
	shf.r.wrap.b32 	%r2017, %r1624, %r1625, 1;
	mov.b64 	%rd2603, {%r2017, %r2016};
	shf.r.wrap.b32 	%r2018, %r1625, %r1624, 8;
	shf.r.wrap.b32 	%r2019, %r1624, %r1625, 8;
	mov.b64 	%rd2604, {%r2019, %r2018};
	shr.u64 	%rd2605, %rd2031, 7;
	xor.b64  	%rd2606, %rd2603, %rd2605;
	xor.b64  	%rd2607, %rd2606, %rd2604;
	add.s64 	%rd2608, %rd2519, %rd2018;
	add.s64 	%rd2609, %rd2608, %rd2602;
	add.s64 	%rd2610, %rd2609, %rd2607;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2020,%dummy}, %rd2597;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2021}, %rd2597;
	}
	shf.r.wrap.b32 	%r2022, %r2021, %r2020, 19;
	shf.r.wrap.b32 	%r2023, %r2020, %r2021, 19;
	mov.b64 	%rd2611, {%r2023, %r2022};
	shf.l.wrap.b32 	%r2024, %r2020, %r2021, 3;
	shf.l.wrap.b32 	%r2025, %r2021, %r2020, 3;
	mov.b64 	%rd2612, {%r2025, %r2024};
	shr.u64 	%rd2613, %rd2597, 6;
	xor.b64  	%rd2614, %rd2611, %rd2613;
	xor.b64  	%rd2615, %rd2614, %rd2612;
	shf.r.wrap.b32 	%r2026, %r1635, %r1634, 1;
	shf.r.wrap.b32 	%r2027, %r1634, %r1635, 1;
	mov.b64 	%rd2616, {%r2027, %r2026};
	shf.r.wrap.b32 	%r2028, %r1635, %r1634, 8;
	shf.r.wrap.b32 	%r2029, %r1634, %r1635, 8;
	mov.b64 	%rd2617, {%r2029, %r2028};
	shr.u64 	%rd2618, %rd2044, 7;
	xor.b64  	%rd2619, %rd2616, %rd2618;
	xor.b64  	%rd2620, %rd2619, %rd2617;
	add.s64 	%rd2621, %rd2532, %rd2031;
	add.s64 	%rd2622, %rd2621, %rd2615;
	add.s64 	%rd2623, %rd2622, %rd2620;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2030,%dummy}, %rd2610;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2031}, %rd2610;
	}
	shf.r.wrap.b32 	%r2032, %r2031, %r2030, 19;
	shf.r.wrap.b32 	%r2033, %r2030, %r2031, 19;
	mov.b64 	%rd2624, {%r2033, %r2032};
	shf.l.wrap.b32 	%r2034, %r2030, %r2031, 3;
	shf.l.wrap.b32 	%r2035, %r2031, %r2030, 3;
	mov.b64 	%rd2625, {%r2035, %r2034};
	shr.u64 	%rd2626, %rd2610, 6;
	xor.b64  	%rd2627, %rd2624, %rd2626;
	xor.b64  	%rd2628, %rd2627, %rd2625;
	shf.r.wrap.b32 	%r2036, %r1645, %r1644, 1;
	shf.r.wrap.b32 	%r2037, %r1644, %r1645, 1;
	mov.b64 	%rd2629, {%r2037, %r2036};
	shf.r.wrap.b32 	%r2038, %r1645, %r1644, 8;
	shf.r.wrap.b32 	%r2039, %r1644, %r1645, 8;
	mov.b64 	%rd2630, {%r2039, %r2038};
	shr.u64 	%rd2631, %rd2057, 7;
	xor.b64  	%rd2632, %rd2629, %rd2631;
	xor.b64  	%rd2633, %rd2632, %rd2630;
	add.s64 	%rd2634, %rd2545, %rd2044;
	add.s64 	%rd2635, %rd2634, %rd2628;
	add.s64 	%rd2636, %rd2635, %rd2633;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2040,%dummy}, %rd2623;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2041}, %rd2623;
	}
	shf.r.wrap.b32 	%r2042, %r2041, %r2040, 19;
	shf.r.wrap.b32 	%r2043, %r2040, %r2041, 19;
	mov.b64 	%rd2637, {%r2043, %r2042};
	shf.l.wrap.b32 	%r2044, %r2040, %r2041, 3;
	shf.l.wrap.b32 	%r2045, %r2041, %r2040, 3;
	mov.b64 	%rd2638, {%r2045, %r2044};
	shr.u64 	%rd2639, %rd2623, 6;
	xor.b64  	%rd2640, %rd2637, %rd2639;
	xor.b64  	%rd2641, %rd2640, %rd2638;
	shf.r.wrap.b32 	%r2046, %r1911, %r1910, 1;
	shf.r.wrap.b32 	%r2047, %r1910, %r1911, 1;
	mov.b64 	%rd2642, {%r2047, %r2046};
	shf.r.wrap.b32 	%r2048, %r1911, %r1910, 8;
	shf.r.wrap.b32 	%r2049, %r1910, %r1911, 8;
	mov.b64 	%rd2643, {%r2049, %r2048};
	shr.u64 	%rd2644, %rd2070, 7;
	xor.b64  	%rd2645, %rd2642, %rd2644;
	xor.b64  	%rd2646, %rd2645, %rd2643;
	add.s64 	%rd2647, %rd2558, %rd2057;
	add.s64 	%rd2648, %rd2647, %rd2641;
	add.s64 	%rd2649, %rd2648, %rd2646;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2050,%dummy}, %rd2636;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2051}, %rd2636;
	}
	shf.r.wrap.b32 	%r2052, %r2051, %r2050, 19;
	shf.r.wrap.b32 	%r2053, %r2050, %r2051, 19;
	mov.b64 	%rd2650, {%r2053, %r2052};
	shf.l.wrap.b32 	%r2054, %r2050, %r2051, 3;
	shf.l.wrap.b32 	%r2055, %r2051, %r2050, 3;
	mov.b64 	%rd2651, {%r2055, %r2054};
	shr.u64 	%rd2652, %rd2636, 6;
	xor.b64  	%rd2653, %rd2650, %rd2652;
	xor.b64  	%rd2654, %rd2653, %rd2651;
	shf.r.wrap.b32 	%r2056, %r1921, %r1920, 1;
	shf.r.wrap.b32 	%r2057, %r1920, %r1921, 1;
	mov.b64 	%rd2655, {%r2057, %r2056};
	shf.r.wrap.b32 	%r2058, %r1921, %r1920, 8;
	shf.r.wrap.b32 	%r2059, %r1920, %r1921, 8;
	mov.b64 	%rd2656, {%r2059, %r2058};
	shr.u64 	%rd2657, %rd2083, 7;
	xor.b64  	%rd2658, %rd2655, %rd2657;
	xor.b64  	%rd2659, %rd2658, %rd2656;
	add.s64 	%rd2660, %rd2571, %rd2070;
	add.s64 	%rd2661, %rd2660, %rd2654;
	add.s64 	%rd2662, %rd2661, %rd2659;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2060,%dummy}, %rd2649;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2061}, %rd2649;
	}
	shf.r.wrap.b32 	%r2062, %r2061, %r2060, 19;
	shf.r.wrap.b32 	%r2063, %r2060, %r2061, 19;
	mov.b64 	%rd2663, {%r2063, %r2062};
	shf.l.wrap.b32 	%r2064, %r2060, %r2061, 3;
	shf.l.wrap.b32 	%r2065, %r2061, %r2060, 3;
	mov.b64 	%rd2664, {%r2065, %r2064};
	shr.u64 	%rd2665, %rd2649, 6;
	xor.b64  	%rd2666, %rd2663, %rd2665;
	xor.b64  	%rd2667, %rd2666, %rd2664;
	shf.r.wrap.b32 	%r2066, %r1931, %r1930, 1;
	shf.r.wrap.b32 	%r2067, %r1930, %r1931, 1;
	mov.b64 	%rd2668, {%r2067, %r2066};
	shf.r.wrap.b32 	%r2068, %r1931, %r1930, 8;
	shf.r.wrap.b32 	%r2069, %r1930, %r1931, 8;
	mov.b64 	%rd2669, {%r2069, %r2068};
	shr.u64 	%rd2670, %rd2480, 7;
	xor.b64  	%rd2671, %rd2668, %rd2670;
	xor.b64  	%rd2672, %rd2671, %rd2669;
	add.s64 	%rd2673, %rd2584, %rd2083;
	add.s64 	%rd2674, %rd2673, %rd2667;
	add.s64 	%rd2675, %rd2674, %rd2672;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2070,%dummy}, %rd2456;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2071}, %rd2456;
	}
	shf.r.wrap.b32 	%r2072, %r2071, %r2070, 14;
	shf.r.wrap.b32 	%r2073, %r2070, %r2071, 14;
	mov.b64 	%rd2676, {%r2073, %r2072};
	shf.r.wrap.b32 	%r2074, %r2071, %r2070, 18;
	shf.r.wrap.b32 	%r2075, %r2070, %r2071, 18;
	mov.b64 	%rd2677, {%r2075, %r2074};
	xor.b64  	%rd2678, %rd2677, %rd2676;
	shf.l.wrap.b32 	%r2076, %r2070, %r2071, 23;
	shf.l.wrap.b32 	%r2077, %r2071, %r2070, 23;
	mov.b64 	%rd2679, {%r2077, %r2076};
	xor.b64  	%rd2680, %rd2678, %rd2679;
	xor.b64  	%rd2681, %rd2432, %rd2408;
	and.b64  	%rd2682, %rd2681, %rd2456;
	xor.b64  	%rd2683, %rd2682, %rd2408;
	add.s64 	%rd2684, %rd2683, %rd2384;
	add.s64 	%rd2685, %rd2684, %rd2480;
	ld.const.u64 	%rd5857, [k_sha512+512];
	add.s64 	%rd2686, %rd2685, %rd5857;
	add.s64 	%rd2687, %rd2686, %rd2680;
	add.s64 	%rd2688, %rd2687, %rd2395;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2078,%dummy}, %rd2467;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2079}, %rd2467;
	}
	shf.r.wrap.b32 	%r2080, %r2079, %r2078, 28;
	shf.r.wrap.b32 	%r2081, %r2078, %r2079, 28;
	mov.b64 	%rd2689, {%r2081, %r2080};
	shf.l.wrap.b32 	%r2082, %r2078, %r2079, 30;
	shf.l.wrap.b32 	%r2083, %r2079, %r2078, 30;
	mov.b64 	%rd2690, {%r2083, %r2082};
	xor.b64  	%rd2691, %rd2690, %rd2689;
	shf.l.wrap.b32 	%r2084, %r2078, %r2079, 25;
	shf.l.wrap.b32 	%r2085, %r2079, %r2078, 25;
	mov.b64 	%rd2692, {%r2085, %r2084};
	xor.b64  	%rd2693, %rd2691, %rd2692;
	xor.b64  	%rd2694, %rd2467, %rd2419;
	xor.b64  	%rd2695, %rd2467, %rd2443;
	and.b64  	%rd2696, %rd2695, %rd2694;
	xor.b64  	%rd2697, %rd2696, %rd2467;
	add.s64 	%rd2698, %rd2687, %rd2697;
	add.s64 	%rd2699, %rd2698, %rd2693;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2086,%dummy}, %rd2688;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2087}, %rd2688;
	}
	shf.r.wrap.b32 	%r2088, %r2087, %r2086, 14;
	shf.r.wrap.b32 	%r2089, %r2086, %r2087, 14;
	mov.b64 	%rd2700, {%r2089, %r2088};
	shf.r.wrap.b32 	%r2090, %r2087, %r2086, 18;
	shf.r.wrap.b32 	%r2091, %r2086, %r2087, 18;
	mov.b64 	%rd2701, {%r2091, %r2090};
	xor.b64  	%rd2702, %rd2701, %rd2700;
	shf.l.wrap.b32 	%r2092, %r2086, %r2087, 23;
	shf.l.wrap.b32 	%r2093, %r2087, %r2086, 23;
	mov.b64 	%rd2703, {%r2093, %r2092};
	xor.b64  	%rd2704, %rd2702, %rd2703;
	xor.b64  	%rd2705, %rd2456, %rd2432;
	and.b64  	%rd2706, %rd2688, %rd2705;
	xor.b64  	%rd2707, %rd2706, %rd2432;
	add.s64 	%rd2708, %rd2493, %rd2408;
	ld.const.u64 	%rd5856, [k_sha512+520];
	add.s64 	%rd2709, %rd2708, %rd5856;
	add.s64 	%rd2710, %rd2709, %rd2707;
	add.s64 	%rd2711, %rd2710, %rd2704;
	add.s64 	%rd2712, %rd2711, %rd2419;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2094,%dummy}, %rd2699;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2095}, %rd2699;
	}
	shf.r.wrap.b32 	%r2096, %r2095, %r2094, 28;
	shf.r.wrap.b32 	%r2097, %r2094, %r2095, 28;
	mov.b64 	%rd2713, {%r2097, %r2096};
	shf.l.wrap.b32 	%r2098, %r2094, %r2095, 30;
	shf.l.wrap.b32 	%r2099, %r2095, %r2094, 30;
	mov.b64 	%rd2714, {%r2099, %r2098};
	xor.b64  	%rd2715, %rd2714, %rd2713;
	shf.l.wrap.b32 	%r2100, %r2094, %r2095, 25;
	shf.l.wrap.b32 	%r2101, %r2095, %r2094, 25;
	mov.b64 	%rd2716, {%r2101, %r2100};
	xor.b64  	%rd2717, %rd2715, %rd2716;
	xor.b64  	%rd2718, %rd2699, %rd2443;
	xor.b64  	%rd2719, %rd2699, %rd2467;
	and.b64  	%rd2720, %rd2719, %rd2718;
	xor.b64  	%rd2721, %rd2720, %rd2699;
	add.s64 	%rd2722, %rd2711, %rd2721;
	add.s64 	%rd2723, %rd2722, %rd2717;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2102,%dummy}, %rd2712;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2103}, %rd2712;
	}
	shf.r.wrap.b32 	%r2104, %r2103, %r2102, 14;
	shf.r.wrap.b32 	%r2105, %r2102, %r2103, 14;
	mov.b64 	%rd2724, {%r2105, %r2104};
	shf.r.wrap.b32 	%r2106, %r2103, %r2102, 18;
	shf.r.wrap.b32 	%r2107, %r2102, %r2103, 18;
	mov.b64 	%rd2725, {%r2107, %r2106};
	xor.b64  	%rd2726, %rd2725, %rd2724;
	shf.l.wrap.b32 	%r2108, %r2102, %r2103, 23;
	shf.l.wrap.b32 	%r2109, %r2103, %r2102, 23;
	mov.b64 	%rd2727, {%r2109, %r2108};
	xor.b64  	%rd2728, %rd2726, %rd2727;
	xor.b64  	%rd2729, %rd2688, %rd2456;
	and.b64  	%rd2730, %rd2712, %rd2729;
	xor.b64  	%rd2731, %rd2730, %rd2456;
	add.s64 	%rd2732, %rd2506, %rd2432;
	ld.const.u64 	%rd5855, [k_sha512+528];
	add.s64 	%rd2733, %rd2732, %rd5855;
	add.s64 	%rd2734, %rd2733, %rd2731;
	add.s64 	%rd2735, %rd2734, %rd2728;
	add.s64 	%rd2736, %rd2735, %rd2443;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2110,%dummy}, %rd2723;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2111}, %rd2723;
	}
	shf.r.wrap.b32 	%r2112, %r2111, %r2110, 28;
	shf.r.wrap.b32 	%r2113, %r2110, %r2111, 28;
	mov.b64 	%rd2737, {%r2113, %r2112};
	shf.l.wrap.b32 	%r2114, %r2110, %r2111, 30;
	shf.l.wrap.b32 	%r2115, %r2111, %r2110, 30;
	mov.b64 	%rd2738, {%r2115, %r2114};
	xor.b64  	%rd2739, %rd2738, %rd2737;
	shf.l.wrap.b32 	%r2116, %r2110, %r2111, 25;
	shf.l.wrap.b32 	%r2117, %r2111, %r2110, 25;
	mov.b64 	%rd2740, {%r2117, %r2116};
	xor.b64  	%rd2741, %rd2739, %rd2740;
	xor.b64  	%rd2742, %rd2723, %rd2467;
	xor.b64  	%rd2743, %rd2723, %rd2699;
	and.b64  	%rd2744, %rd2743, %rd2742;
	xor.b64  	%rd2745, %rd2744, %rd2723;
	add.s64 	%rd2746, %rd2735, %rd2745;
	add.s64 	%rd2747, %rd2746, %rd2741;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2118,%dummy}, %rd2736;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2119}, %rd2736;
	}
	shf.r.wrap.b32 	%r2120, %r2119, %r2118, 14;
	shf.r.wrap.b32 	%r2121, %r2118, %r2119, 14;
	mov.b64 	%rd2748, {%r2121, %r2120};
	shf.r.wrap.b32 	%r2122, %r2119, %r2118, 18;
	shf.r.wrap.b32 	%r2123, %r2118, %r2119, 18;
	mov.b64 	%rd2749, {%r2123, %r2122};
	xor.b64  	%rd2750, %rd2749, %rd2748;
	shf.l.wrap.b32 	%r2124, %r2118, %r2119, 23;
	shf.l.wrap.b32 	%r2125, %r2119, %r2118, 23;
	mov.b64 	%rd2751, {%r2125, %r2124};
	xor.b64  	%rd2752, %rd2750, %rd2751;
	xor.b64  	%rd2753, %rd2712, %rd2688;
	and.b64  	%rd2754, %rd2736, %rd2753;
	xor.b64  	%rd2755, %rd2754, %rd2688;
	add.s64 	%rd2756, %rd2519, %rd2456;
	ld.const.u64 	%rd5854, [k_sha512+536];
	add.s64 	%rd2757, %rd2756, %rd5854;
	add.s64 	%rd2758, %rd2757, %rd2755;
	add.s64 	%rd2759, %rd2758, %rd2752;
	add.s64 	%rd2760, %rd2759, %rd2467;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2126,%dummy}, %rd2747;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2127}, %rd2747;
	}
	shf.r.wrap.b32 	%r2128, %r2127, %r2126, 28;
	shf.r.wrap.b32 	%r2129, %r2126, %r2127, 28;
	mov.b64 	%rd2761, {%r2129, %r2128};
	shf.l.wrap.b32 	%r2130, %r2126, %r2127, 30;
	shf.l.wrap.b32 	%r2131, %r2127, %r2126, 30;
	mov.b64 	%rd2762, {%r2131, %r2130};
	xor.b64  	%rd2763, %rd2762, %rd2761;
	shf.l.wrap.b32 	%r2132, %r2126, %r2127, 25;
	shf.l.wrap.b32 	%r2133, %r2127, %r2126, 25;
	mov.b64 	%rd2764, {%r2133, %r2132};
	xor.b64  	%rd2765, %rd2763, %rd2764;
	xor.b64  	%rd2766, %rd2747, %rd2699;
	xor.b64  	%rd2767, %rd2747, %rd2723;
	and.b64  	%rd2768, %rd2767, %rd2766;
	xor.b64  	%rd2769, %rd2768, %rd2747;
	add.s64 	%rd2770, %rd2759, %rd2769;
	add.s64 	%rd2771, %rd2770, %rd2765;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2134,%dummy}, %rd2760;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2135}, %rd2760;
	}
	shf.r.wrap.b32 	%r2136, %r2135, %r2134, 14;
	shf.r.wrap.b32 	%r2137, %r2134, %r2135, 14;
	mov.b64 	%rd2772, {%r2137, %r2136};
	shf.r.wrap.b32 	%r2138, %r2135, %r2134, 18;
	shf.r.wrap.b32 	%r2139, %r2134, %r2135, 18;
	mov.b64 	%rd2773, {%r2139, %r2138};
	xor.b64  	%rd2774, %rd2773, %rd2772;
	shf.l.wrap.b32 	%r2140, %r2134, %r2135, 23;
	shf.l.wrap.b32 	%r2141, %r2135, %r2134, 23;
	mov.b64 	%rd2775, {%r2141, %r2140};
	xor.b64  	%rd2776, %rd2774, %rd2775;
	xor.b64  	%rd2777, %rd2736, %rd2712;
	and.b64  	%rd2778, %rd2760, %rd2777;
	xor.b64  	%rd2779, %rd2778, %rd2712;
	add.s64 	%rd2780, %rd2688, %rd2532;
	ld.const.u64 	%rd5853, [k_sha512+544];
	add.s64 	%rd2781, %rd2780, %rd5853;
	add.s64 	%rd2782, %rd2781, %rd2779;
	add.s64 	%rd2783, %rd2782, %rd2776;
	add.s64 	%rd2784, %rd2783, %rd2699;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2142,%dummy}, %rd2771;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2143}, %rd2771;
	}
	shf.r.wrap.b32 	%r2144, %r2143, %r2142, 28;
	shf.r.wrap.b32 	%r2145, %r2142, %r2143, 28;
	mov.b64 	%rd2785, {%r2145, %r2144};
	shf.l.wrap.b32 	%r2146, %r2142, %r2143, 30;
	shf.l.wrap.b32 	%r2147, %r2143, %r2142, 30;
	mov.b64 	%rd2786, {%r2147, %r2146};
	xor.b64  	%rd2787, %rd2786, %rd2785;
	shf.l.wrap.b32 	%r2148, %r2142, %r2143, 25;
	shf.l.wrap.b32 	%r2149, %r2143, %r2142, 25;
	mov.b64 	%rd2788, {%r2149, %r2148};
	xor.b64  	%rd2789, %rd2787, %rd2788;
	xor.b64  	%rd2790, %rd2771, %rd2723;
	xor.b64  	%rd2791, %rd2771, %rd2747;
	and.b64  	%rd2792, %rd2791, %rd2790;
	xor.b64  	%rd2793, %rd2792, %rd2771;
	add.s64 	%rd2794, %rd2783, %rd2793;
	add.s64 	%rd2795, %rd2794, %rd2789;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2150,%dummy}, %rd2784;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2151}, %rd2784;
	}
	shf.r.wrap.b32 	%r2152, %r2151, %r2150, 14;
	shf.r.wrap.b32 	%r2153, %r2150, %r2151, 14;
	mov.b64 	%rd2796, {%r2153, %r2152};
	shf.r.wrap.b32 	%r2154, %r2151, %r2150, 18;
	shf.r.wrap.b32 	%r2155, %r2150, %r2151, 18;
	mov.b64 	%rd2797, {%r2155, %r2154};
	xor.b64  	%rd2798, %rd2797, %rd2796;
	shf.l.wrap.b32 	%r2156, %r2150, %r2151, 23;
	shf.l.wrap.b32 	%r2157, %r2151, %r2150, 23;
	mov.b64 	%rd2799, {%r2157, %r2156};
	xor.b64  	%rd2800, %rd2798, %rd2799;
	xor.b64  	%rd2801, %rd2760, %rd2736;
	and.b64  	%rd2802, %rd2784, %rd2801;
	xor.b64  	%rd2803, %rd2802, %rd2736;
	add.s64 	%rd2804, %rd2712, %rd2545;
	ld.const.u64 	%rd5852, [k_sha512+552];
	add.s64 	%rd2805, %rd2804, %rd5852;
	add.s64 	%rd2806, %rd2805, %rd2803;
	add.s64 	%rd2807, %rd2806, %rd2800;
	add.s64 	%rd2808, %rd2807, %rd2723;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2158,%dummy}, %rd2795;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2159}, %rd2795;
	}
	shf.r.wrap.b32 	%r2160, %r2159, %r2158, 28;
	shf.r.wrap.b32 	%r2161, %r2158, %r2159, 28;
	mov.b64 	%rd2809, {%r2161, %r2160};
	shf.l.wrap.b32 	%r2162, %r2158, %r2159, 30;
	shf.l.wrap.b32 	%r2163, %r2159, %r2158, 30;
	mov.b64 	%rd2810, {%r2163, %r2162};
	xor.b64  	%rd2811, %rd2810, %rd2809;
	shf.l.wrap.b32 	%r2164, %r2158, %r2159, 25;
	shf.l.wrap.b32 	%r2165, %r2159, %r2158, 25;
	mov.b64 	%rd2812, {%r2165, %r2164};
	xor.b64  	%rd2813, %rd2811, %rd2812;
	xor.b64  	%rd2814, %rd2795, %rd2747;
	xor.b64  	%rd2815, %rd2795, %rd2771;
	and.b64  	%rd2816, %rd2815, %rd2814;
	xor.b64  	%rd2817, %rd2816, %rd2795;
	add.s64 	%rd2818, %rd2807, %rd2817;
	add.s64 	%rd2819, %rd2818, %rd2813;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2166,%dummy}, %rd2808;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2167}, %rd2808;
	}
	shf.r.wrap.b32 	%r2168, %r2167, %r2166, 14;
	shf.r.wrap.b32 	%r2169, %r2166, %r2167, 14;
	mov.b64 	%rd2820, {%r2169, %r2168};
	shf.r.wrap.b32 	%r2170, %r2167, %r2166, 18;
	shf.r.wrap.b32 	%r2171, %r2166, %r2167, 18;
	mov.b64 	%rd2821, {%r2171, %r2170};
	xor.b64  	%rd2822, %rd2821, %rd2820;
	shf.l.wrap.b32 	%r2172, %r2166, %r2167, 23;
	shf.l.wrap.b32 	%r2173, %r2167, %r2166, 23;
	mov.b64 	%rd2823, {%r2173, %r2172};
	xor.b64  	%rd2824, %rd2822, %rd2823;
	xor.b64  	%rd2825, %rd2784, %rd2760;
	and.b64  	%rd2826, %rd2808, %rd2825;
	xor.b64  	%rd2827, %rd2826, %rd2760;
	add.s64 	%rd2828, %rd2736, %rd2558;
	ld.const.u64 	%rd5851, [k_sha512+560];
	add.s64 	%rd2829, %rd2828, %rd5851;
	add.s64 	%rd2830, %rd2829, %rd2827;
	add.s64 	%rd2831, %rd2830, %rd2824;
	add.s64 	%rd2832, %rd2831, %rd2747;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2174,%dummy}, %rd2819;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2175}, %rd2819;
	}
	shf.r.wrap.b32 	%r2176, %r2175, %r2174, 28;
	shf.r.wrap.b32 	%r2177, %r2174, %r2175, 28;
	mov.b64 	%rd2833, {%r2177, %r2176};
	shf.l.wrap.b32 	%r2178, %r2174, %r2175, 30;
	shf.l.wrap.b32 	%r2179, %r2175, %r2174, 30;
	mov.b64 	%rd2834, {%r2179, %r2178};
	xor.b64  	%rd2835, %rd2834, %rd2833;
	shf.l.wrap.b32 	%r2180, %r2174, %r2175, 25;
	shf.l.wrap.b32 	%r2181, %r2175, %r2174, 25;
	mov.b64 	%rd2836, {%r2181, %r2180};
	xor.b64  	%rd2837, %rd2835, %rd2836;
	xor.b64  	%rd2838, %rd2819, %rd2771;
	xor.b64  	%rd2839, %rd2819, %rd2795;
	and.b64  	%rd2840, %rd2839, %rd2838;
	xor.b64  	%rd2841, %rd2840, %rd2819;
	add.s64 	%rd2842, %rd2831, %rd2841;
	add.s64 	%rd2843, %rd2842, %rd2837;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2182,%dummy}, %rd2832;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2183}, %rd2832;
	}
	shf.r.wrap.b32 	%r2184, %r2183, %r2182, 14;
	shf.r.wrap.b32 	%r2185, %r2182, %r2183, 14;
	mov.b64 	%rd2844, {%r2185, %r2184};
	shf.r.wrap.b32 	%r2186, %r2183, %r2182, 18;
	shf.r.wrap.b32 	%r2187, %r2182, %r2183, 18;
	mov.b64 	%rd2845, {%r2187, %r2186};
	xor.b64  	%rd2846, %rd2845, %rd2844;
	shf.l.wrap.b32 	%r2188, %r2182, %r2183, 23;
	shf.l.wrap.b32 	%r2189, %r2183, %r2182, 23;
	mov.b64 	%rd2847, {%r2189, %r2188};
	xor.b64  	%rd2848, %rd2846, %rd2847;
	xor.b64  	%rd2849, %rd2808, %rd2784;
	and.b64  	%rd2850, %rd2832, %rd2849;
	xor.b64  	%rd2851, %rd2850, %rd2784;
	add.s64 	%rd2852, %rd2760, %rd2571;
	ld.const.u64 	%rd5850, [k_sha512+568];
	add.s64 	%rd2853, %rd2852, %rd5850;
	add.s64 	%rd2854, %rd2853, %rd2851;
	add.s64 	%rd2855, %rd2854, %rd2848;
	add.s64 	%rd2856, %rd2855, %rd2771;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2190,%dummy}, %rd2843;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2191}, %rd2843;
	}
	shf.r.wrap.b32 	%r2192, %r2191, %r2190, 28;
	shf.r.wrap.b32 	%r2193, %r2190, %r2191, 28;
	mov.b64 	%rd2857, {%r2193, %r2192};
	shf.l.wrap.b32 	%r2194, %r2190, %r2191, 30;
	shf.l.wrap.b32 	%r2195, %r2191, %r2190, 30;
	mov.b64 	%rd2858, {%r2195, %r2194};
	xor.b64  	%rd2859, %rd2858, %rd2857;
	shf.l.wrap.b32 	%r2196, %r2190, %r2191, 25;
	shf.l.wrap.b32 	%r2197, %r2191, %r2190, 25;
	mov.b64 	%rd2860, {%r2197, %r2196};
	xor.b64  	%rd2861, %rd2859, %rd2860;
	xor.b64  	%rd2862, %rd2843, %rd2795;
	xor.b64  	%rd2863, %rd2843, %rd2819;
	and.b64  	%rd2864, %rd2863, %rd2862;
	xor.b64  	%rd2865, %rd2864, %rd2843;
	add.s64 	%rd2866, %rd2855, %rd2865;
	add.s64 	%rd2867, %rd2866, %rd2861;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2198,%dummy}, %rd2856;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2199}, %rd2856;
	}
	shf.r.wrap.b32 	%r2200, %r2199, %r2198, 14;
	shf.r.wrap.b32 	%r2201, %r2198, %r2199, 14;
	mov.b64 	%rd2868, {%r2201, %r2200};
	shf.r.wrap.b32 	%r2202, %r2199, %r2198, 18;
	shf.r.wrap.b32 	%r2203, %r2198, %r2199, 18;
	mov.b64 	%rd2869, {%r2203, %r2202};
	xor.b64  	%rd2870, %rd2869, %rd2868;
	shf.l.wrap.b32 	%r2204, %r2198, %r2199, 23;
	shf.l.wrap.b32 	%r2205, %r2199, %r2198, 23;
	mov.b64 	%rd2871, {%r2205, %r2204};
	xor.b64  	%rd2872, %rd2870, %rd2871;
	xor.b64  	%rd2873, %rd2832, %rd2808;
	and.b64  	%rd2874, %rd2856, %rd2873;
	xor.b64  	%rd2875, %rd2874, %rd2808;
	add.s64 	%rd2876, %rd2784, %rd2584;
	ld.const.u64 	%rd5849, [k_sha512+576];
	add.s64 	%rd2877, %rd2876, %rd5849;
	add.s64 	%rd2878, %rd2877, %rd2875;
	add.s64 	%rd2879, %rd2878, %rd2872;
	add.s64 	%rd2880, %rd2879, %rd2795;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2206,%dummy}, %rd2867;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2207}, %rd2867;
	}
	shf.r.wrap.b32 	%r2208, %r2207, %r2206, 28;
	shf.r.wrap.b32 	%r2209, %r2206, %r2207, 28;
	mov.b64 	%rd2881, {%r2209, %r2208};
	shf.l.wrap.b32 	%r2210, %r2206, %r2207, 30;
	shf.l.wrap.b32 	%r2211, %r2207, %r2206, 30;
	mov.b64 	%rd2882, {%r2211, %r2210};
	xor.b64  	%rd2883, %rd2882, %rd2881;
	shf.l.wrap.b32 	%r2212, %r2206, %r2207, 25;
	shf.l.wrap.b32 	%r2213, %r2207, %r2206, 25;
	mov.b64 	%rd2884, {%r2213, %r2212};
	xor.b64  	%rd2885, %rd2883, %rd2884;
	xor.b64  	%rd2886, %rd2867, %rd2819;
	xor.b64  	%rd2887, %rd2867, %rd2843;
	and.b64  	%rd2888, %rd2887, %rd2886;
	xor.b64  	%rd2889, %rd2888, %rd2867;
	add.s64 	%rd2890, %rd2879, %rd2889;
	add.s64 	%rd2891, %rd2890, %rd2885;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2214,%dummy}, %rd2880;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2215}, %rd2880;
	}
	shf.r.wrap.b32 	%r2216, %r2215, %r2214, 14;
	shf.r.wrap.b32 	%r2217, %r2214, %r2215, 14;
	mov.b64 	%rd2892, {%r2217, %r2216};
	shf.r.wrap.b32 	%r2218, %r2215, %r2214, 18;
	shf.r.wrap.b32 	%r2219, %r2214, %r2215, 18;
	mov.b64 	%rd2893, {%r2219, %r2218};
	xor.b64  	%rd2894, %rd2893, %rd2892;
	shf.l.wrap.b32 	%r2220, %r2214, %r2215, 23;
	shf.l.wrap.b32 	%r2221, %r2215, %r2214, 23;
	mov.b64 	%rd2895, {%r2221, %r2220};
	xor.b64  	%rd2896, %rd2894, %rd2895;
	xor.b64  	%rd2897, %rd2856, %rd2832;
	and.b64  	%rd2898, %rd2880, %rd2897;
	xor.b64  	%rd2899, %rd2898, %rd2832;
	add.s64 	%rd2900, %rd2808, %rd2597;
	ld.const.u64 	%rd5848, [k_sha512+584];
	add.s64 	%rd2901, %rd2900, %rd5848;
	add.s64 	%rd2902, %rd2901, %rd2899;
	add.s64 	%rd2903, %rd2902, %rd2896;
	add.s64 	%rd2904, %rd2903, %rd2819;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2222,%dummy}, %rd2891;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2223}, %rd2891;
	}
	shf.r.wrap.b32 	%r2224, %r2223, %r2222, 28;
	shf.r.wrap.b32 	%r2225, %r2222, %r2223, 28;
	mov.b64 	%rd2905, {%r2225, %r2224};
	shf.l.wrap.b32 	%r2226, %r2222, %r2223, 30;
	shf.l.wrap.b32 	%r2227, %r2223, %r2222, 30;
	mov.b64 	%rd2906, {%r2227, %r2226};
	xor.b64  	%rd2907, %rd2906, %rd2905;
	shf.l.wrap.b32 	%r2228, %r2222, %r2223, 25;
	shf.l.wrap.b32 	%r2229, %r2223, %r2222, 25;
	mov.b64 	%rd2908, {%r2229, %r2228};
	xor.b64  	%rd2909, %rd2907, %rd2908;
	xor.b64  	%rd2910, %rd2891, %rd2843;
	xor.b64  	%rd2911, %rd2891, %rd2867;
	and.b64  	%rd2912, %rd2911, %rd2910;
	xor.b64  	%rd2913, %rd2912, %rd2891;
	add.s64 	%rd2914, %rd2903, %rd2913;
	add.s64 	%rd2915, %rd2914, %rd2909;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2230,%dummy}, %rd2904;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2231}, %rd2904;
	}
	shf.r.wrap.b32 	%r2232, %r2231, %r2230, 14;
	shf.r.wrap.b32 	%r2233, %r2230, %r2231, 14;
	mov.b64 	%rd2916, {%r2233, %r2232};
	shf.r.wrap.b32 	%r2234, %r2231, %r2230, 18;
	shf.r.wrap.b32 	%r2235, %r2230, %r2231, 18;
	mov.b64 	%rd2917, {%r2235, %r2234};
	xor.b64  	%rd2918, %rd2917, %rd2916;
	shf.l.wrap.b32 	%r2236, %r2230, %r2231, 23;
	shf.l.wrap.b32 	%r2237, %r2231, %r2230, 23;
	mov.b64 	%rd2919, {%r2237, %r2236};
	xor.b64  	%rd2920, %rd2918, %rd2919;
	xor.b64  	%rd2921, %rd2880, %rd2856;
	and.b64  	%rd2922, %rd2904, %rd2921;
	xor.b64  	%rd2923, %rd2922, %rd2856;
	add.s64 	%rd2924, %rd2832, %rd2610;
	ld.const.u64 	%rd5847, [k_sha512+592];
	add.s64 	%rd2925, %rd2924, %rd5847;
	add.s64 	%rd2926, %rd2925, %rd2923;
	add.s64 	%rd2927, %rd2926, %rd2920;
	add.s64 	%rd2928, %rd2927, %rd2843;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2238,%dummy}, %rd2915;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2239}, %rd2915;
	}
	shf.r.wrap.b32 	%r2240, %r2239, %r2238, 28;
	shf.r.wrap.b32 	%r2241, %r2238, %r2239, 28;
	mov.b64 	%rd2929, {%r2241, %r2240};
	shf.l.wrap.b32 	%r2242, %r2238, %r2239, 30;
	shf.l.wrap.b32 	%r2243, %r2239, %r2238, 30;
	mov.b64 	%rd2930, {%r2243, %r2242};
	xor.b64  	%rd2931, %rd2930, %rd2929;
	shf.l.wrap.b32 	%r2244, %r2238, %r2239, 25;
	shf.l.wrap.b32 	%r2245, %r2239, %r2238, 25;
	mov.b64 	%rd2932, {%r2245, %r2244};
	xor.b64  	%rd2933, %rd2931, %rd2932;
	xor.b64  	%rd2934, %rd2915, %rd2867;
	xor.b64  	%rd2935, %rd2915, %rd2891;
	and.b64  	%rd2936, %rd2935, %rd2934;
	xor.b64  	%rd2937, %rd2936, %rd2915;
	add.s64 	%rd2938, %rd2927, %rd2937;
	add.s64 	%rd2939, %rd2938, %rd2933;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2246,%dummy}, %rd2928;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2247}, %rd2928;
	}
	shf.r.wrap.b32 	%r2248, %r2247, %r2246, 14;
	shf.r.wrap.b32 	%r2249, %r2246, %r2247, 14;
	mov.b64 	%rd2940, {%r2249, %r2248};
	shf.r.wrap.b32 	%r2250, %r2247, %r2246, 18;
	shf.r.wrap.b32 	%r2251, %r2246, %r2247, 18;
	mov.b64 	%rd2941, {%r2251, %r2250};
	xor.b64  	%rd2942, %rd2941, %rd2940;
	shf.l.wrap.b32 	%r2252, %r2246, %r2247, 23;
	shf.l.wrap.b32 	%r2253, %r2247, %r2246, 23;
	mov.b64 	%rd2943, {%r2253, %r2252};
	xor.b64  	%rd2944, %rd2942, %rd2943;
	xor.b64  	%rd2945, %rd2904, %rd2880;
	and.b64  	%rd2946, %rd2928, %rd2945;
	xor.b64  	%rd2947, %rd2946, %rd2880;
	add.s64 	%rd2948, %rd2856, %rd2623;
	ld.const.u64 	%rd5846, [k_sha512+600];
	add.s64 	%rd2949, %rd2948, %rd5846;
	add.s64 	%rd2950, %rd2949, %rd2947;
	add.s64 	%rd2951, %rd2950, %rd2944;
	add.s64 	%rd2952, %rd2951, %rd2867;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2254,%dummy}, %rd2939;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2255}, %rd2939;
	}
	shf.r.wrap.b32 	%r2256, %r2255, %r2254, 28;
	shf.r.wrap.b32 	%r2257, %r2254, %r2255, 28;
	mov.b64 	%rd2953, {%r2257, %r2256};
	shf.l.wrap.b32 	%r2258, %r2254, %r2255, 30;
	shf.l.wrap.b32 	%r2259, %r2255, %r2254, 30;
	mov.b64 	%rd2954, {%r2259, %r2258};
	xor.b64  	%rd2955, %rd2954, %rd2953;
	shf.l.wrap.b32 	%r2260, %r2254, %r2255, 25;
	shf.l.wrap.b32 	%r2261, %r2255, %r2254, 25;
	mov.b64 	%rd2956, {%r2261, %r2260};
	xor.b64  	%rd2957, %rd2955, %rd2956;
	xor.b64  	%rd2958, %rd2939, %rd2891;
	xor.b64  	%rd2959, %rd2939, %rd2915;
	and.b64  	%rd2960, %rd2959, %rd2958;
	xor.b64  	%rd2961, %rd2960, %rd2939;
	add.s64 	%rd2962, %rd2951, %rd2961;
	add.s64 	%rd2963, %rd2962, %rd2957;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2262,%dummy}, %rd2952;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2263}, %rd2952;
	}
	shf.r.wrap.b32 	%r2264, %r2263, %r2262, 14;
	shf.r.wrap.b32 	%r2265, %r2262, %r2263, 14;
	mov.b64 	%rd2964, {%r2265, %r2264};
	shf.r.wrap.b32 	%r2266, %r2263, %r2262, 18;
	shf.r.wrap.b32 	%r2267, %r2262, %r2263, 18;
	mov.b64 	%rd2965, {%r2267, %r2266};
	xor.b64  	%rd2966, %rd2965, %rd2964;
	shf.l.wrap.b32 	%r2268, %r2262, %r2263, 23;
	shf.l.wrap.b32 	%r2269, %r2263, %r2262, 23;
	mov.b64 	%rd2967, {%r2269, %r2268};
	xor.b64  	%rd2968, %rd2966, %rd2967;
	xor.b64  	%rd2969, %rd2928, %rd2904;
	and.b64  	%rd2970, %rd2952, %rd2969;
	xor.b64  	%rd2971, %rd2970, %rd2904;
	add.s64 	%rd2972, %rd2880, %rd2636;
	ld.const.u64 	%rd5845, [k_sha512+608];
	add.s64 	%rd2973, %rd2972, %rd5845;
	add.s64 	%rd2974, %rd2973, %rd2971;
	add.s64 	%rd2975, %rd2974, %rd2968;
	add.s64 	%rd2976, %rd2975, %rd2891;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2270,%dummy}, %rd2963;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2271}, %rd2963;
	}
	shf.r.wrap.b32 	%r2272, %r2271, %r2270, 28;
	shf.r.wrap.b32 	%r2273, %r2270, %r2271, 28;
	mov.b64 	%rd2977, {%r2273, %r2272};
	shf.l.wrap.b32 	%r2274, %r2270, %r2271, 30;
	shf.l.wrap.b32 	%r2275, %r2271, %r2270, 30;
	mov.b64 	%rd2978, {%r2275, %r2274};
	xor.b64  	%rd2979, %rd2978, %rd2977;
	shf.l.wrap.b32 	%r2276, %r2270, %r2271, 25;
	shf.l.wrap.b32 	%r2277, %r2271, %r2270, 25;
	mov.b64 	%rd2980, {%r2277, %r2276};
	xor.b64  	%rd2981, %rd2979, %rd2980;
	xor.b64  	%rd2982, %rd2963, %rd2915;
	xor.b64  	%rd2983, %rd2963, %rd2939;
	and.b64  	%rd2984, %rd2983, %rd2982;
	xor.b64  	%rd2985, %rd2984, %rd2963;
	add.s64 	%rd2986, %rd2975, %rd2985;
	add.s64 	%rd2987, %rd2986, %rd2981;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2278,%dummy}, %rd2976;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2279}, %rd2976;
	}
	shf.r.wrap.b32 	%r2280, %r2279, %r2278, 14;
	shf.r.wrap.b32 	%r2281, %r2278, %r2279, 14;
	mov.b64 	%rd2988, {%r2281, %r2280};
	shf.r.wrap.b32 	%r2282, %r2279, %r2278, 18;
	shf.r.wrap.b32 	%r2283, %r2278, %r2279, 18;
	mov.b64 	%rd2989, {%r2283, %r2282};
	xor.b64  	%rd2990, %rd2989, %rd2988;
	shf.l.wrap.b32 	%r2284, %r2278, %r2279, 23;
	shf.l.wrap.b32 	%r2285, %r2279, %r2278, 23;
	mov.b64 	%rd2991, {%r2285, %r2284};
	xor.b64  	%rd2992, %rd2990, %rd2991;
	xor.b64  	%rd2993, %rd2952, %rd2928;
	and.b64  	%rd2994, %rd2976, %rd2993;
	xor.b64  	%rd2995, %rd2994, %rd2928;
	add.s64 	%rd2996, %rd2904, %rd2649;
	ld.const.u64 	%rd5844, [k_sha512+616];
	add.s64 	%rd2997, %rd2996, %rd5844;
	add.s64 	%rd2998, %rd2997, %rd2995;
	add.s64 	%rd2999, %rd2998, %rd2992;
	add.s64 	%rd3000, %rd2999, %rd2915;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2286,%dummy}, %rd2987;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2287}, %rd2987;
	}
	shf.r.wrap.b32 	%r2288, %r2287, %r2286, 28;
	shf.r.wrap.b32 	%r2289, %r2286, %r2287, 28;
	mov.b64 	%rd3001, {%r2289, %r2288};
	shf.l.wrap.b32 	%r2290, %r2286, %r2287, 30;
	shf.l.wrap.b32 	%r2291, %r2287, %r2286, 30;
	mov.b64 	%rd3002, {%r2291, %r2290};
	xor.b64  	%rd3003, %rd3002, %rd3001;
	shf.l.wrap.b32 	%r2292, %r2286, %r2287, 25;
	shf.l.wrap.b32 	%r2293, %r2287, %r2286, 25;
	mov.b64 	%rd3004, {%r2293, %r2292};
	xor.b64  	%rd3005, %rd3003, %rd3004;
	xor.b64  	%rd3006, %rd2987, %rd2939;
	xor.b64  	%rd3007, %rd2987, %rd2963;
	and.b64  	%rd3008, %rd3007, %rd3006;
	xor.b64  	%rd3009, %rd3008, %rd2987;
	add.s64 	%rd3010, %rd2999, %rd3009;
	add.s64 	%rd3011, %rd3010, %rd3005;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2294,%dummy}, %rd3000;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2295}, %rd3000;
	}
	shf.r.wrap.b32 	%r2296, %r2295, %r2294, 14;
	shf.r.wrap.b32 	%r2297, %r2294, %r2295, 14;
	mov.b64 	%rd3012, {%r2297, %r2296};
	shf.r.wrap.b32 	%r2298, %r2295, %r2294, 18;
	shf.r.wrap.b32 	%r2299, %r2294, %r2295, 18;
	mov.b64 	%rd3013, {%r2299, %r2298};
	xor.b64  	%rd3014, %rd3013, %rd3012;
	shf.l.wrap.b32 	%r2300, %r2294, %r2295, 23;
	shf.l.wrap.b32 	%r2301, %r2295, %r2294, 23;
	mov.b64 	%rd3015, {%r2301, %r2300};
	xor.b64  	%rd3016, %rd3014, %rd3015;
	xor.b64  	%rd3017, %rd2976, %rd2952;
	and.b64  	%rd3018, %rd3000, %rd3017;
	xor.b64  	%rd3019, %rd3018, %rd2952;
	add.s64 	%rd3020, %rd2928, %rd2662;
	ld.const.u64 	%rd5843, [k_sha512+624];
	add.s64 	%rd3021, %rd3020, %rd5843;
	add.s64 	%rd3022, %rd3021, %rd3019;
	add.s64 	%rd3023, %rd3022, %rd3016;
	add.s64 	%rd3024, %rd3023, %rd2939;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2302,%dummy}, %rd3011;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2303}, %rd3011;
	}
	shf.r.wrap.b32 	%r2304, %r2303, %r2302, 28;
	shf.r.wrap.b32 	%r2305, %r2302, %r2303, 28;
	mov.b64 	%rd3025, {%r2305, %r2304};
	shf.l.wrap.b32 	%r2306, %r2302, %r2303, 30;
	shf.l.wrap.b32 	%r2307, %r2303, %r2302, 30;
	mov.b64 	%rd3026, {%r2307, %r2306};
	xor.b64  	%rd3027, %rd3026, %rd3025;
	shf.l.wrap.b32 	%r2308, %r2302, %r2303, 25;
	shf.l.wrap.b32 	%r2309, %r2303, %r2302, 25;
	mov.b64 	%rd3028, {%r2309, %r2308};
	xor.b64  	%rd3029, %rd3027, %rd3028;
	xor.b64  	%rd3030, %rd3011, %rd2963;
	xor.b64  	%rd3031, %rd3011, %rd2987;
	and.b64  	%rd3032, %rd3031, %rd3030;
	xor.b64  	%rd3033, %rd3032, %rd3011;
	add.s64 	%rd3034, %rd3023, %rd3033;
	add.s64 	%rd3035, %rd3034, %rd3029;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2310,%dummy}, %rd3024;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2311}, %rd3024;
	}
	shf.r.wrap.b32 	%r2312, %r2311, %r2310, 14;
	shf.r.wrap.b32 	%r2313, %r2310, %r2311, 14;
	mov.b64 	%rd3036, {%r2313, %r2312};
	shf.r.wrap.b32 	%r2314, %r2311, %r2310, 18;
	shf.r.wrap.b32 	%r2315, %r2310, %r2311, 18;
	mov.b64 	%rd3037, {%r2315, %r2314};
	xor.b64  	%rd3038, %rd3037, %rd3036;
	shf.l.wrap.b32 	%r2316, %r2310, %r2311, 23;
	shf.l.wrap.b32 	%r2317, %r2311, %r2310, 23;
	mov.b64 	%rd3039, {%r2317, %r2316};
	xor.b64  	%rd3040, %rd3038, %rd3039;
	xor.b64  	%rd3041, %rd3000, %rd2976;
	and.b64  	%rd3042, %rd3024, %rd3041;
	xor.b64  	%rd3043, %rd3042, %rd2976;
	add.s64 	%rd3044, %rd2952, %rd2675;
	ld.const.u64 	%rd5842, [k_sha512+632];
	add.s64 	%rd3045, %rd3044, %rd5842;
	add.s64 	%rd3046, %rd3045, %rd3043;
	add.s64 	%rd3047, %rd3046, %rd3040;
	add.s64 	%rd3048, %rd3047, %rd2963;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2318,%dummy}, %rd3035;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2319}, %rd3035;
	}
	shf.r.wrap.b32 	%r2320, %r2319, %r2318, 28;
	shf.r.wrap.b32 	%r2321, %r2318, %r2319, 28;
	mov.b64 	%rd3049, {%r2321, %r2320};
	shf.l.wrap.b32 	%r2322, %r2318, %r2319, 30;
	shf.l.wrap.b32 	%r2323, %r2319, %r2318, 30;
	mov.b64 	%rd3050, {%r2323, %r2322};
	xor.b64  	%rd3051, %rd3050, %rd3049;
	shf.l.wrap.b32 	%r2324, %r2318, %r2319, 25;
	shf.l.wrap.b32 	%r2325, %r2319, %r2318, 25;
	mov.b64 	%rd3052, {%r2325, %r2324};
	xor.b64  	%rd3053, %rd3051, %rd3052;
	xor.b64  	%rd3054, %rd3035, %rd2987;
	xor.b64  	%rd3055, %rd3035, %rd3011;
	and.b64  	%rd3056, %rd3055, %rd3054;
	xor.b64  	%rd3057, %rd3056, %rd3035;
	add.s64 	%rd3058, %rd3047, %rd3057;
	add.s64 	%rd3059, %rd3058, %rd3053;
	add.s64 	%rd5929, %rd5929, %rd3059;
	st.local.u64 	[%rd1], %rd5929;
	add.s64 	%rd5928, %rd5928, %rd3035;
	st.local.u64 	[%rd10], %rd5928;
	add.s64 	%rd5927, %rd5927, %rd3011;
	st.local.u64 	[%rd10+8], %rd5927;
	add.s64 	%rd5926, %rd5926, %rd2987;
	st.local.u64 	[%rd10+16], %rd5926;
	add.s64 	%rd5925, %rd5925, %rd3048;
	st.local.u64 	[%rd10+24], %rd5925;
	add.s64 	%rd5924, %rd5924, %rd3024;
	st.local.u64 	[%rd10+32], %rd5924;
	add.s64 	%rd5923, %rd5923, %rd3000;
	st.local.u64 	[%rd10+40], %rd5923;
	add.s64 	%rd5922, %rd5922, %rd2976;
	st.local.u64 	[%rd10+48], %rd5922;
	mov.u32 	%r4274, 0;
	st.local.u32 	[%rd2], %r4274;
	st.local.u32 	[%rd2+4], %r4274;
	st.local.u32 	[%rd10+64], %r4274;
	st.local.u32 	[%rd10+80], %r4274;
	st.local.u32 	[%rd10+96], %r4274;
	st.local.u32 	[%rd10+112], %r4274;
	st.local.u32 	[%rd10+128], %r4274;
	st.local.u32 	[%rd10+144], %r4274;
	st.local.u32 	[%rd10+160], %r4274;
	st.local.u32 	[%rd10+176], %r4274;
	st.local.u32 	[%rd12+4], %r4274;
	st.local.u32 	[%rd3], %r4274;
	st.local.u32 	[%rd3+4], %r4274;
	st.local.u32 	[%rd14+4], %r4274;
	st.local.u32 	[%rd4], %r4274;
	st.local.u32 	[%rd4+4], %r4274;
	st.local.u32 	[%rd16+4], %r4274;
	st.local.u32 	[%rd5], %r4274;
	st.local.u32 	[%rd5+4], %r4274;
	st.local.u32 	[%rd18+4], %r4274;
	st.local.u32 	[%rd6], %r4274;
	st.local.u32 	[%rd6+4], %r4274;
	st.local.u32 	[%rd20+4], %r4274;
	st.local.u32 	[%rd7], %r4274;
	st.local.u32 	[%rd7+4], %r4274;
	st.local.u32 	[%rd22+4], %r4274;
	st.local.u32 	[%rd8], %r4274;
	st.local.u32 	[%rd8+4], %r4274;
	st.local.u32 	[%rd24+4], %r4274;
	st.local.u32 	[%rd9], %r4274;
	st.local.u32 	[%rd9+4], %r4274;
	st.local.u32 	[%rd26+4], %r4274;
	mov.u32 	%r4275, %r4274;
	mov.u32 	%r4276, %r4274;
	mov.u32 	%r4277, %r4274;
	mov.u32 	%r4278, %r4274;
	mov.u32 	%r4279, %r4274;
	mov.u32 	%r4280, %r4274;
	mov.u32 	%r4281, %r4274;
	mov.u32 	%r4282, %r4274;
	mov.u32 	%r4283, %r4274;
	mov.u32 	%r4284, %r4274;
	mov.u32 	%r4285, %r4274;
	mov.u32 	%r4286, %r4274;
	mov.u32 	%r4287, %r4274;
	mov.u32 	%r4288, %r4274;
	mov.u32 	%r4289, %r4274;
	mov.u32 	%r4290, %r4274;
	mov.u32 	%r4291, %r4274;
	mov.u32 	%r4292, %r4274;
	mov.u32 	%r4293, %r4274;
	mov.u32 	%r4294, %r4274;
	mov.u32 	%r4295, %r4274;
	mov.u32 	%r4296, %r4274;
	mov.u32 	%r4297, %r4274;
	mov.u32 	%r4298, %r4274;
	mov.u32 	%r4299, %r4274;
	mov.u32 	%r4300, %r4274;
	mov.u32 	%r4301, %r4274;
	mov.u32 	%r4302, %r4274;
	mov.u32 	%r4303, %r4274;
	bra.uni 	BB3_322;

BB3_320:
	ld.local.u32 	%r4301, [%rd10+64];
	ld.local.u32 	%r4300, [%rd12+4];
	ld.local.u32 	%r4299, [%rd3];
	ld.local.u32 	%r4298, [%rd3+4];
	ld.local.u32 	%r4297, [%rd10+80];
	ld.local.u32 	%r4296, [%rd14+4];
	ld.local.u32 	%r4295, [%rd4];
	ld.local.u32 	%r4294, [%rd4+4];
	ld.local.u32 	%r4293, [%rd10+96];
	ld.local.u32 	%r4292, [%rd16+4];
	ld.local.u32 	%r4291, [%rd5];
	ld.local.u32 	%r4290, [%rd5+4];
	ld.local.u32 	%r4289, [%rd10+112];
	ld.local.u32 	%r4288, [%rd18+4];
	ld.local.u32 	%r4287, [%rd6];
	ld.local.u32 	%r4286, [%rd6+4];
	ld.local.u32 	%r4285, [%rd10+128];
	ld.local.u32 	%r4284, [%rd20+4];
	ld.local.u32 	%r4283, [%rd7];
	ld.local.u32 	%r4282, [%rd7+4];
	ld.local.u32 	%r4281, [%rd10+144];
	ld.local.u32 	%r4280, [%rd22+4];
	ld.local.u32 	%r4279, [%rd8];
	ld.local.u32 	%r4278, [%rd8+4];
	ld.local.u32 	%r4277, [%rd10+160];
	ld.local.u32 	%r4276, [%rd24+4];
	ld.local.u32 	%r4275, [%rd9];
	ld.local.u32 	%r4274, [%rd9+4];
	ld.const.u64 	%rd5921, [k_sha512];
	ld.const.u64 	%rd5920, [k_sha512+8];
	ld.const.u64 	%rd5919, [k_sha512+16];
	ld.const.u64 	%rd5918, [k_sha512+24];
	ld.const.u64 	%rd5917, [k_sha512+32];
	ld.const.u64 	%rd5916, [k_sha512+40];
	ld.const.u64 	%rd5915, [k_sha512+48];
	ld.const.u64 	%rd5914, [k_sha512+56];
	ld.const.u64 	%rd5913, [k_sha512+64];
	ld.const.u64 	%rd5912, [k_sha512+72];
	ld.const.u64 	%rd5911, [k_sha512+80];
	ld.const.u64 	%rd5910, [k_sha512+88];
	ld.const.u64 	%rd5909, [k_sha512+96];
	ld.const.u64 	%rd5908, [k_sha512+104];
	ld.const.u64 	%rd5907, [k_sha512+112];
	ld.const.u64 	%rd5906, [k_sha512+120];
	ld.const.u64 	%rd5905, [k_sha512+128];
	ld.const.u64 	%rd5904, [k_sha512+136];
	ld.const.u64 	%rd5903, [k_sha512+144];
	ld.const.u64 	%rd5902, [k_sha512+152];
	ld.const.u64 	%rd5901, [k_sha512+160];
	ld.const.u64 	%rd5900, [k_sha512+168];
	ld.const.u64 	%rd5899, [k_sha512+176];
	ld.const.u64 	%rd5898, [k_sha512+184];
	ld.const.u64 	%rd5897, [k_sha512+192];
	ld.const.u64 	%rd5896, [k_sha512+200];
	ld.const.u64 	%rd5895, [k_sha512+208];
	ld.const.u64 	%rd5894, [k_sha512+216];
	ld.const.u64 	%rd5893, [k_sha512+224];
	ld.const.u64 	%rd5892, [k_sha512+232];
	ld.const.u64 	%rd5891, [k_sha512+240];
	ld.const.u64 	%rd5890, [k_sha512+248];
	ld.const.u64 	%rd5889, [k_sha512+256];
	ld.const.u64 	%rd5888, [k_sha512+264];
	ld.const.u64 	%rd5887, [k_sha512+272];
	ld.const.u64 	%rd5886, [k_sha512+280];
	ld.const.u64 	%rd5885, [k_sha512+288];
	ld.const.u64 	%rd5884, [k_sha512+296];
	ld.const.u64 	%rd5883, [k_sha512+304];
	ld.const.u64 	%rd5882, [k_sha512+312];
	ld.const.u64 	%rd5881, [k_sha512+320];
	ld.const.u64 	%rd5880, [k_sha512+328];
	ld.const.u64 	%rd5879, [k_sha512+336];
	ld.const.u64 	%rd5878, [k_sha512+344];
	ld.const.u64 	%rd5877, [k_sha512+352];
	ld.const.u64 	%rd5876, [k_sha512+360];
	ld.const.u64 	%rd5875, [k_sha512+368];
	ld.const.u64 	%rd5874, [k_sha512+376];
	ld.const.u64 	%rd5873, [k_sha512+384];
	ld.const.u64 	%rd5872, [k_sha512+392];
	ld.const.u64 	%rd5871, [k_sha512+400];
	ld.const.u64 	%rd5870, [k_sha512+408];
	ld.const.u64 	%rd5869, [k_sha512+416];
	ld.const.u64 	%rd5868, [k_sha512+424];
	ld.const.u64 	%rd5867, [k_sha512+432];
	ld.const.u64 	%rd5866, [k_sha512+440];
	ld.const.u64 	%rd5865, [k_sha512+448];
	ld.const.u64 	%rd5864, [k_sha512+456];
	ld.const.u64 	%rd5863, [k_sha512+464];
	ld.const.u64 	%rd5862, [k_sha512+472];
	ld.const.u64 	%rd5861, [k_sha512+480];
	ld.const.u64 	%rd5860, [k_sha512+488];
	ld.const.u64 	%rd5859, [k_sha512+496];
	ld.const.u64 	%rd5858, [k_sha512+504];
	ld.const.u64 	%rd5857, [k_sha512+512];
	ld.const.u64 	%rd5856, [k_sha512+520];
	ld.const.u64 	%rd5855, [k_sha512+528];
	ld.const.u64 	%rd5854, [k_sha512+536];
	ld.const.u64 	%rd5853, [k_sha512+544];
	ld.const.u64 	%rd5852, [k_sha512+552];
	ld.const.u64 	%rd5851, [k_sha512+560];
	ld.const.u64 	%rd5850, [k_sha512+568];
	ld.const.u64 	%rd5849, [k_sha512+576];
	ld.const.u64 	%rd5848, [k_sha512+584];
	ld.const.u64 	%rd5847, [k_sha512+592];
	ld.const.u64 	%rd5846, [k_sha512+600];
	ld.const.u64 	%rd5845, [k_sha512+608];
	ld.const.u64 	%rd5844, [k_sha512+616];
	ld.const.u64 	%rd5843, [k_sha512+624];
	ld.const.u64 	%rd5842, [k_sha512+632];

BB3_322:
	ld.param.u64 	%rd5841, [sha512_final_param_0];
	cvta.to.local.u64 	%rd5840, %rd5841;
	add.s64 	%rd5839, %rd5840, 184;
	ld.param.u64 	%rd5838, [sha512_final_param_0];
	cvta.to.local.u64 	%rd5837, %rd5838;
	add.s64 	%rd5836, %rd5837, 8;
	mov.u32 	%r2326, 0;
	st.local.u32 	[%rd5836+176], %r2326;
	shl.b32 	%r2327, %r1, 3;
	st.local.u32 	[%rd5839+4], %r2327;
	mov.b64	%rd3060, {%r4302, %r4303};
	mov.b64	%rd3061, {%r4300, %r4301};
	mov.b64	%rd3062, {%r4298, %r4299};
	mov.b64	%rd3063, {%r4296, %r4297};
	mov.b64	%rd3064, {%r4294, %r4295};
	mov.b64	%rd3065, {%r4292, %r4293};
	mov.b64	%rd3066, {%r4290, %r4291};
	mov.b64	%rd3067, {%r4288, %r4289};
	mov.b64	%rd3068, {%r4286, %r4287};
	mov.b64	%rd3069, {%r4284, %r4285};
	mov.b64	%rd3070, {%r4282, %r4283};
	mov.b64	%rd3071, {%r4280, %r4281};
	mov.b64	%rd3072, {%r4278, %r4279};
	mov.b64	%rd3073, {%r4276, %r4277};
	mov.b64	%rd3074, {%r4274, %r4275};
	mov.b64	%rd3075, {%r2327, %r2326};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2328,%dummy}, %rd5925;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2329}, %rd5925;
	}
	shf.r.wrap.b32 	%r2330, %r2329, %r2328, 18;
	shf.r.wrap.b32 	%r2331, %r2328, %r2329, 18;
	mov.b64 	%rd3076, {%r2331, %r2330};
	shf.r.wrap.b32 	%r2332, %r2329, %r2328, 14;
	shf.r.wrap.b32 	%r2333, %r2328, %r2329, 14;
	mov.b64 	%rd3077, {%r2333, %r2332};
	xor.b64  	%rd3078, %rd3076, %rd3077;
	shf.l.wrap.b32 	%r2334, %r2328, %r2329, 23;
	shf.l.wrap.b32 	%r2335, %r2329, %r2328, 23;
	mov.b64 	%rd3079, {%r2335, %r2334};
	xor.b64  	%rd3080, %rd3078, %rd3079;
	xor.b64  	%rd3081, %rd5923, %rd5924;
	and.b64  	%rd3082, %rd3081, %rd5925;
	xor.b64  	%rd3083, %rd3082, %rd5923;
	add.s64 	%rd3084, %rd3083, %rd5922;
	add.s64 	%rd3085, %rd3084, %rd3060;
	add.s64 	%rd3086, %rd3085, %rd5921;
	add.s64 	%rd3087, %rd3086, %rd3080;
	add.s64 	%rd3088, %rd3087, %rd5926;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2336}, %rd5929;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2337,%dummy}, %rd5929;
	}
	shf.l.wrap.b32 	%r2338, %r2337, %r2336, 30;
	shf.l.wrap.b32 	%r2339, %r2336, %r2337, 30;
	mov.b64 	%rd3089, {%r2339, %r2338};
	shf.r.wrap.b32 	%r2340, %r2336, %r2337, 28;
	shf.r.wrap.b32 	%r2341, %r2337, %r2336, 28;
	mov.b64 	%rd3090, {%r2341, %r2340};
	xor.b64  	%rd3091, %rd3089, %rd3090;
	shf.l.wrap.b32 	%r2342, %r2337, %r2336, 25;
	shf.l.wrap.b32 	%r2343, %r2336, %r2337, 25;
	mov.b64 	%rd3092, {%r2343, %r2342};
	xor.b64  	%rd3093, %rd3091, %rd3092;
	xor.b64  	%rd3094, %rd5928, %rd5929;
	xor.b64  	%rd3095, %rd5927, %rd5929;
	and.b64  	%rd3096, %rd3095, %rd3094;
	xor.b64  	%rd3097, %rd3096, %rd5929;
	add.s64 	%rd3098, %rd3087, %rd3097;
	add.s64 	%rd3099, %rd3098, %rd3093;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2344,%dummy}, %rd3088;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2345}, %rd3088;
	}
	shf.r.wrap.b32 	%r2346, %r2345, %r2344, 14;
	shf.r.wrap.b32 	%r2347, %r2344, %r2345, 14;
	mov.b64 	%rd3100, {%r2347, %r2346};
	shf.r.wrap.b32 	%r2348, %r2345, %r2344, 18;
	shf.r.wrap.b32 	%r2349, %r2344, %r2345, 18;
	mov.b64 	%rd3101, {%r2349, %r2348};
	xor.b64  	%rd3102, %rd3101, %rd3100;
	shf.l.wrap.b32 	%r2350, %r2344, %r2345, 23;
	shf.l.wrap.b32 	%r2351, %r2345, %r2344, 23;
	mov.b64 	%rd3103, {%r2351, %r2350};
	xor.b64  	%rd3104, %rd3102, %rd3103;
	xor.b64  	%rd3105, %rd5924, %rd5925;
	and.b64  	%rd3106, %rd3088, %rd3105;
	xor.b64  	%rd3107, %rd3106, %rd5924;
	add.s64 	%rd3108, %rd3061, %rd5923;
	add.s64 	%rd3109, %rd3108, %rd5920;
	add.s64 	%rd3110, %rd3109, %rd3107;
	add.s64 	%rd3111, %rd3110, %rd3104;
	add.s64 	%rd3112, %rd3111, %rd5927;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2352,%dummy}, %rd3099;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2353}, %rd3099;
	}
	shf.r.wrap.b32 	%r2354, %r2353, %r2352, 28;
	shf.r.wrap.b32 	%r2355, %r2352, %r2353, 28;
	mov.b64 	%rd3113, {%r2355, %r2354};
	shf.l.wrap.b32 	%r2356, %r2352, %r2353, 30;
	shf.l.wrap.b32 	%r2357, %r2353, %r2352, 30;
	mov.b64 	%rd3114, {%r2357, %r2356};
	xor.b64  	%rd3115, %rd3114, %rd3113;
	shf.l.wrap.b32 	%r2358, %r2352, %r2353, 25;
	shf.l.wrap.b32 	%r2359, %r2353, %r2352, 25;
	mov.b64 	%rd3116, {%r2359, %r2358};
	xor.b64  	%rd3117, %rd3115, %rd3116;
	xor.b64  	%rd3118, %rd3099, %rd5928;
	xor.b64  	%rd3119, %rd3099, %rd5929;
	and.b64  	%rd3120, %rd3119, %rd3118;
	xor.b64  	%rd3121, %rd3120, %rd3099;
	add.s64 	%rd3122, %rd3111, %rd3121;
	add.s64 	%rd3123, %rd3122, %rd3117;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2360,%dummy}, %rd3112;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2361}, %rd3112;
	}
	shf.r.wrap.b32 	%r2362, %r2361, %r2360, 14;
	shf.r.wrap.b32 	%r2363, %r2360, %r2361, 14;
	mov.b64 	%rd3124, {%r2363, %r2362};
	shf.r.wrap.b32 	%r2364, %r2361, %r2360, 18;
	shf.r.wrap.b32 	%r2365, %r2360, %r2361, 18;
	mov.b64 	%rd3125, {%r2365, %r2364};
	xor.b64  	%rd3126, %rd3125, %rd3124;
	shf.l.wrap.b32 	%r2366, %r2360, %r2361, 23;
	shf.l.wrap.b32 	%r2367, %r2361, %r2360, 23;
	mov.b64 	%rd3127, {%r2367, %r2366};
	xor.b64  	%rd3128, %rd3126, %rd3127;
	xor.b64  	%rd3129, %rd3088, %rd5925;
	and.b64  	%rd3130, %rd3112, %rd3129;
	xor.b64  	%rd3131, %rd3130, %rd5925;
	add.s64 	%rd3132, %rd3062, %rd5924;
	add.s64 	%rd3133, %rd3132, %rd5919;
	add.s64 	%rd3134, %rd3133, %rd3131;
	add.s64 	%rd3135, %rd3134, %rd3128;
	add.s64 	%rd3136, %rd3135, %rd5928;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2368,%dummy}, %rd3123;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2369}, %rd3123;
	}
	shf.r.wrap.b32 	%r2370, %r2369, %r2368, 28;
	shf.r.wrap.b32 	%r2371, %r2368, %r2369, 28;
	mov.b64 	%rd3137, {%r2371, %r2370};
	shf.l.wrap.b32 	%r2372, %r2368, %r2369, 30;
	shf.l.wrap.b32 	%r2373, %r2369, %r2368, 30;
	mov.b64 	%rd3138, {%r2373, %r2372};
	xor.b64  	%rd3139, %rd3138, %rd3137;
	shf.l.wrap.b32 	%r2374, %r2368, %r2369, 25;
	shf.l.wrap.b32 	%r2375, %r2369, %r2368, 25;
	mov.b64 	%rd3140, {%r2375, %r2374};
	xor.b64  	%rd3141, %rd3139, %rd3140;
	xor.b64  	%rd3142, %rd3123, %rd5929;
	xor.b64  	%rd3143, %rd3123, %rd3099;
	and.b64  	%rd3144, %rd3143, %rd3142;
	xor.b64  	%rd3145, %rd3144, %rd3123;
	add.s64 	%rd3146, %rd3135, %rd3145;
	add.s64 	%rd3147, %rd3146, %rd3141;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2376,%dummy}, %rd3136;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2377}, %rd3136;
	}
	shf.r.wrap.b32 	%r2378, %r2377, %r2376, 14;
	shf.r.wrap.b32 	%r2379, %r2376, %r2377, 14;
	mov.b64 	%rd3148, {%r2379, %r2378};
	shf.r.wrap.b32 	%r2380, %r2377, %r2376, 18;
	shf.r.wrap.b32 	%r2381, %r2376, %r2377, 18;
	mov.b64 	%rd3149, {%r2381, %r2380};
	xor.b64  	%rd3150, %rd3149, %rd3148;
	shf.l.wrap.b32 	%r2382, %r2376, %r2377, 23;
	shf.l.wrap.b32 	%r2383, %r2377, %r2376, 23;
	mov.b64 	%rd3151, {%r2383, %r2382};
	xor.b64  	%rd3152, %rd3150, %rd3151;
	xor.b64  	%rd3153, %rd3112, %rd3088;
	and.b64  	%rd3154, %rd3136, %rd3153;
	xor.b64  	%rd3155, %rd3154, %rd3088;
	add.s64 	%rd3156, %rd3063, %rd5925;
	add.s64 	%rd3157, %rd3156, %rd5918;
	add.s64 	%rd3158, %rd3157, %rd3155;
	add.s64 	%rd3159, %rd3158, %rd3152;
	add.s64 	%rd3160, %rd3159, %rd5929;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2384,%dummy}, %rd3147;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2385}, %rd3147;
	}
	shf.r.wrap.b32 	%r2386, %r2385, %r2384, 28;
	shf.r.wrap.b32 	%r2387, %r2384, %r2385, 28;
	mov.b64 	%rd3161, {%r2387, %r2386};
	shf.l.wrap.b32 	%r2388, %r2384, %r2385, 30;
	shf.l.wrap.b32 	%r2389, %r2385, %r2384, 30;
	mov.b64 	%rd3162, {%r2389, %r2388};
	xor.b64  	%rd3163, %rd3162, %rd3161;
	shf.l.wrap.b32 	%r2390, %r2384, %r2385, 25;
	shf.l.wrap.b32 	%r2391, %r2385, %r2384, 25;
	mov.b64 	%rd3164, {%r2391, %r2390};
	xor.b64  	%rd3165, %rd3163, %rd3164;
	xor.b64  	%rd3166, %rd3147, %rd3099;
	xor.b64  	%rd3167, %rd3147, %rd3123;
	and.b64  	%rd3168, %rd3167, %rd3166;
	xor.b64  	%rd3169, %rd3168, %rd3147;
	add.s64 	%rd3170, %rd3159, %rd3169;
	add.s64 	%rd3171, %rd3170, %rd3165;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2392,%dummy}, %rd3160;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2393}, %rd3160;
	}
	shf.r.wrap.b32 	%r2394, %r2393, %r2392, 14;
	shf.r.wrap.b32 	%r2395, %r2392, %r2393, 14;
	mov.b64 	%rd3172, {%r2395, %r2394};
	shf.r.wrap.b32 	%r2396, %r2393, %r2392, 18;
	shf.r.wrap.b32 	%r2397, %r2392, %r2393, 18;
	mov.b64 	%rd3173, {%r2397, %r2396};
	xor.b64  	%rd3174, %rd3173, %rd3172;
	shf.l.wrap.b32 	%r2398, %r2392, %r2393, 23;
	shf.l.wrap.b32 	%r2399, %r2393, %r2392, 23;
	mov.b64 	%rd3175, {%r2399, %r2398};
	xor.b64  	%rd3176, %rd3174, %rd3175;
	xor.b64  	%rd3177, %rd3136, %rd3112;
	and.b64  	%rd3178, %rd3160, %rd3177;
	xor.b64  	%rd3179, %rd3178, %rd3112;
	add.s64 	%rd3180, %rd3088, %rd3064;
	add.s64 	%rd3181, %rd3180, %rd5917;
	add.s64 	%rd3182, %rd3181, %rd3179;
	add.s64 	%rd3183, %rd3182, %rd3176;
	add.s64 	%rd3184, %rd3183, %rd3099;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2400,%dummy}, %rd3171;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2401}, %rd3171;
	}
	shf.r.wrap.b32 	%r2402, %r2401, %r2400, 28;
	shf.r.wrap.b32 	%r2403, %r2400, %r2401, 28;
	mov.b64 	%rd3185, {%r2403, %r2402};
	shf.l.wrap.b32 	%r2404, %r2400, %r2401, 30;
	shf.l.wrap.b32 	%r2405, %r2401, %r2400, 30;
	mov.b64 	%rd3186, {%r2405, %r2404};
	xor.b64  	%rd3187, %rd3186, %rd3185;
	shf.l.wrap.b32 	%r2406, %r2400, %r2401, 25;
	shf.l.wrap.b32 	%r2407, %r2401, %r2400, 25;
	mov.b64 	%rd3188, {%r2407, %r2406};
	xor.b64  	%rd3189, %rd3187, %rd3188;
	xor.b64  	%rd3190, %rd3171, %rd3123;
	xor.b64  	%rd3191, %rd3171, %rd3147;
	and.b64  	%rd3192, %rd3191, %rd3190;
	xor.b64  	%rd3193, %rd3192, %rd3171;
	add.s64 	%rd3194, %rd3183, %rd3193;
	add.s64 	%rd3195, %rd3194, %rd3189;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2408,%dummy}, %rd3184;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2409}, %rd3184;
	}
	shf.r.wrap.b32 	%r2410, %r2409, %r2408, 14;
	shf.r.wrap.b32 	%r2411, %r2408, %r2409, 14;
	mov.b64 	%rd3196, {%r2411, %r2410};
	shf.r.wrap.b32 	%r2412, %r2409, %r2408, 18;
	shf.r.wrap.b32 	%r2413, %r2408, %r2409, 18;
	mov.b64 	%rd3197, {%r2413, %r2412};
	xor.b64  	%rd3198, %rd3197, %rd3196;
	shf.l.wrap.b32 	%r2414, %r2408, %r2409, 23;
	shf.l.wrap.b32 	%r2415, %r2409, %r2408, 23;
	mov.b64 	%rd3199, {%r2415, %r2414};
	xor.b64  	%rd3200, %rd3198, %rd3199;
	xor.b64  	%rd3201, %rd3160, %rd3136;
	and.b64  	%rd3202, %rd3184, %rd3201;
	xor.b64  	%rd3203, %rd3202, %rd3136;
	add.s64 	%rd3204, %rd3112, %rd3065;
	add.s64 	%rd3205, %rd3204, %rd5916;
	add.s64 	%rd3206, %rd3205, %rd3203;
	add.s64 	%rd3207, %rd3206, %rd3200;
	add.s64 	%rd3208, %rd3207, %rd3123;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2416,%dummy}, %rd3195;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2417}, %rd3195;
	}
	shf.r.wrap.b32 	%r2418, %r2417, %r2416, 28;
	shf.r.wrap.b32 	%r2419, %r2416, %r2417, 28;
	mov.b64 	%rd3209, {%r2419, %r2418};
	shf.l.wrap.b32 	%r2420, %r2416, %r2417, 30;
	shf.l.wrap.b32 	%r2421, %r2417, %r2416, 30;
	mov.b64 	%rd3210, {%r2421, %r2420};
	xor.b64  	%rd3211, %rd3210, %rd3209;
	shf.l.wrap.b32 	%r2422, %r2416, %r2417, 25;
	shf.l.wrap.b32 	%r2423, %r2417, %r2416, 25;
	mov.b64 	%rd3212, {%r2423, %r2422};
	xor.b64  	%rd3213, %rd3211, %rd3212;
	xor.b64  	%rd3214, %rd3195, %rd3147;
	xor.b64  	%rd3215, %rd3195, %rd3171;
	and.b64  	%rd3216, %rd3215, %rd3214;
	xor.b64  	%rd3217, %rd3216, %rd3195;
	add.s64 	%rd3218, %rd3207, %rd3217;
	add.s64 	%rd3219, %rd3218, %rd3213;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2424,%dummy}, %rd3208;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2425}, %rd3208;
	}
	shf.r.wrap.b32 	%r2426, %r2425, %r2424, 14;
	shf.r.wrap.b32 	%r2427, %r2424, %r2425, 14;
	mov.b64 	%rd3220, {%r2427, %r2426};
	shf.r.wrap.b32 	%r2428, %r2425, %r2424, 18;
	shf.r.wrap.b32 	%r2429, %r2424, %r2425, 18;
	mov.b64 	%rd3221, {%r2429, %r2428};
	xor.b64  	%rd3222, %rd3221, %rd3220;
	shf.l.wrap.b32 	%r2430, %r2424, %r2425, 23;
	shf.l.wrap.b32 	%r2431, %r2425, %r2424, 23;
	mov.b64 	%rd3223, {%r2431, %r2430};
	xor.b64  	%rd3224, %rd3222, %rd3223;
	xor.b64  	%rd3225, %rd3184, %rd3160;
	and.b64  	%rd3226, %rd3208, %rd3225;
	xor.b64  	%rd3227, %rd3226, %rd3160;
	add.s64 	%rd3228, %rd3136, %rd3066;
	add.s64 	%rd3229, %rd3228, %rd5915;
	add.s64 	%rd3230, %rd3229, %rd3227;
	add.s64 	%rd3231, %rd3230, %rd3224;
	add.s64 	%rd3232, %rd3231, %rd3147;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2432,%dummy}, %rd3219;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2433}, %rd3219;
	}
	shf.r.wrap.b32 	%r2434, %r2433, %r2432, 28;
	shf.r.wrap.b32 	%r2435, %r2432, %r2433, 28;
	mov.b64 	%rd3233, {%r2435, %r2434};
	shf.l.wrap.b32 	%r2436, %r2432, %r2433, 30;
	shf.l.wrap.b32 	%r2437, %r2433, %r2432, 30;
	mov.b64 	%rd3234, {%r2437, %r2436};
	xor.b64  	%rd3235, %rd3234, %rd3233;
	shf.l.wrap.b32 	%r2438, %r2432, %r2433, 25;
	shf.l.wrap.b32 	%r2439, %r2433, %r2432, 25;
	mov.b64 	%rd3236, {%r2439, %r2438};
	xor.b64  	%rd3237, %rd3235, %rd3236;
	xor.b64  	%rd3238, %rd3219, %rd3171;
	xor.b64  	%rd3239, %rd3219, %rd3195;
	and.b64  	%rd3240, %rd3239, %rd3238;
	xor.b64  	%rd3241, %rd3240, %rd3219;
	add.s64 	%rd3242, %rd3231, %rd3241;
	add.s64 	%rd3243, %rd3242, %rd3237;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2440,%dummy}, %rd3232;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2441}, %rd3232;
	}
	shf.r.wrap.b32 	%r2442, %r2441, %r2440, 14;
	shf.r.wrap.b32 	%r2443, %r2440, %r2441, 14;
	mov.b64 	%rd3244, {%r2443, %r2442};
	shf.r.wrap.b32 	%r2444, %r2441, %r2440, 18;
	shf.r.wrap.b32 	%r2445, %r2440, %r2441, 18;
	mov.b64 	%rd3245, {%r2445, %r2444};
	xor.b64  	%rd3246, %rd3245, %rd3244;
	shf.l.wrap.b32 	%r2446, %r2440, %r2441, 23;
	shf.l.wrap.b32 	%r2447, %r2441, %r2440, 23;
	mov.b64 	%rd3247, {%r2447, %r2446};
	xor.b64  	%rd3248, %rd3246, %rd3247;
	xor.b64  	%rd3249, %rd3208, %rd3184;
	and.b64  	%rd3250, %rd3232, %rd3249;
	xor.b64  	%rd3251, %rd3250, %rd3184;
	add.s64 	%rd3252, %rd3160, %rd3067;
	add.s64 	%rd3253, %rd3252, %rd5914;
	add.s64 	%rd3254, %rd3253, %rd3251;
	add.s64 	%rd3255, %rd3254, %rd3248;
	add.s64 	%rd3256, %rd3255, %rd3171;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2448,%dummy}, %rd3243;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2449}, %rd3243;
	}
	shf.r.wrap.b32 	%r2450, %r2449, %r2448, 28;
	shf.r.wrap.b32 	%r2451, %r2448, %r2449, 28;
	mov.b64 	%rd3257, {%r2451, %r2450};
	shf.l.wrap.b32 	%r2452, %r2448, %r2449, 30;
	shf.l.wrap.b32 	%r2453, %r2449, %r2448, 30;
	mov.b64 	%rd3258, {%r2453, %r2452};
	xor.b64  	%rd3259, %rd3258, %rd3257;
	shf.l.wrap.b32 	%r2454, %r2448, %r2449, 25;
	shf.l.wrap.b32 	%r2455, %r2449, %r2448, 25;
	mov.b64 	%rd3260, {%r2455, %r2454};
	xor.b64  	%rd3261, %rd3259, %rd3260;
	xor.b64  	%rd3262, %rd3243, %rd3195;
	xor.b64  	%rd3263, %rd3243, %rd3219;
	and.b64  	%rd3264, %rd3263, %rd3262;
	xor.b64  	%rd3265, %rd3264, %rd3243;
	add.s64 	%rd3266, %rd3255, %rd3265;
	add.s64 	%rd3267, %rd3266, %rd3261;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2456,%dummy}, %rd3256;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2457}, %rd3256;
	}
	shf.r.wrap.b32 	%r2458, %r2457, %r2456, 14;
	shf.r.wrap.b32 	%r2459, %r2456, %r2457, 14;
	mov.b64 	%rd3268, {%r2459, %r2458};
	shf.r.wrap.b32 	%r2460, %r2457, %r2456, 18;
	shf.r.wrap.b32 	%r2461, %r2456, %r2457, 18;
	mov.b64 	%rd3269, {%r2461, %r2460};
	xor.b64  	%rd3270, %rd3269, %rd3268;
	shf.l.wrap.b32 	%r2462, %r2456, %r2457, 23;
	shf.l.wrap.b32 	%r2463, %r2457, %r2456, 23;
	mov.b64 	%rd3271, {%r2463, %r2462};
	xor.b64  	%rd3272, %rd3270, %rd3271;
	xor.b64  	%rd3273, %rd3232, %rd3208;
	and.b64  	%rd3274, %rd3256, %rd3273;
	xor.b64  	%rd3275, %rd3274, %rd3208;
	add.s64 	%rd3276, %rd3184, %rd3068;
	add.s64 	%rd3277, %rd3276, %rd5913;
	add.s64 	%rd3278, %rd3277, %rd3275;
	add.s64 	%rd3279, %rd3278, %rd3272;
	add.s64 	%rd3280, %rd3279, %rd3195;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2464,%dummy}, %rd3267;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2465}, %rd3267;
	}
	shf.r.wrap.b32 	%r2466, %r2465, %r2464, 28;
	shf.r.wrap.b32 	%r2467, %r2464, %r2465, 28;
	mov.b64 	%rd3281, {%r2467, %r2466};
	shf.l.wrap.b32 	%r2468, %r2464, %r2465, 30;
	shf.l.wrap.b32 	%r2469, %r2465, %r2464, 30;
	mov.b64 	%rd3282, {%r2469, %r2468};
	xor.b64  	%rd3283, %rd3282, %rd3281;
	shf.l.wrap.b32 	%r2470, %r2464, %r2465, 25;
	shf.l.wrap.b32 	%r2471, %r2465, %r2464, 25;
	mov.b64 	%rd3284, {%r2471, %r2470};
	xor.b64  	%rd3285, %rd3283, %rd3284;
	xor.b64  	%rd3286, %rd3267, %rd3219;
	xor.b64  	%rd3287, %rd3267, %rd3243;
	and.b64  	%rd3288, %rd3287, %rd3286;
	xor.b64  	%rd3289, %rd3288, %rd3267;
	add.s64 	%rd3290, %rd3279, %rd3289;
	add.s64 	%rd3291, %rd3290, %rd3285;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2472,%dummy}, %rd3280;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2473}, %rd3280;
	}
	shf.r.wrap.b32 	%r2474, %r2473, %r2472, 14;
	shf.r.wrap.b32 	%r2475, %r2472, %r2473, 14;
	mov.b64 	%rd3292, {%r2475, %r2474};
	shf.r.wrap.b32 	%r2476, %r2473, %r2472, 18;
	shf.r.wrap.b32 	%r2477, %r2472, %r2473, 18;
	mov.b64 	%rd3293, {%r2477, %r2476};
	xor.b64  	%rd3294, %rd3293, %rd3292;
	shf.l.wrap.b32 	%r2478, %r2472, %r2473, 23;
	shf.l.wrap.b32 	%r2479, %r2473, %r2472, 23;
	mov.b64 	%rd3295, {%r2479, %r2478};
	xor.b64  	%rd3296, %rd3294, %rd3295;
	xor.b64  	%rd3297, %rd3256, %rd3232;
	and.b64  	%rd3298, %rd3280, %rd3297;
	xor.b64  	%rd3299, %rd3298, %rd3232;
	add.s64 	%rd3300, %rd3208, %rd3069;
	add.s64 	%rd3301, %rd3300, %rd5912;
	add.s64 	%rd3302, %rd3301, %rd3299;
	add.s64 	%rd3303, %rd3302, %rd3296;
	add.s64 	%rd3304, %rd3303, %rd3219;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2480,%dummy}, %rd3291;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2481}, %rd3291;
	}
	shf.r.wrap.b32 	%r2482, %r2481, %r2480, 28;
	shf.r.wrap.b32 	%r2483, %r2480, %r2481, 28;
	mov.b64 	%rd3305, {%r2483, %r2482};
	shf.l.wrap.b32 	%r2484, %r2480, %r2481, 30;
	shf.l.wrap.b32 	%r2485, %r2481, %r2480, 30;
	mov.b64 	%rd3306, {%r2485, %r2484};
	xor.b64  	%rd3307, %rd3306, %rd3305;
	shf.l.wrap.b32 	%r2486, %r2480, %r2481, 25;
	shf.l.wrap.b32 	%r2487, %r2481, %r2480, 25;
	mov.b64 	%rd3308, {%r2487, %r2486};
	xor.b64  	%rd3309, %rd3307, %rd3308;
	xor.b64  	%rd3310, %rd3291, %rd3243;
	xor.b64  	%rd3311, %rd3291, %rd3267;
	and.b64  	%rd3312, %rd3311, %rd3310;
	xor.b64  	%rd3313, %rd3312, %rd3291;
	add.s64 	%rd3314, %rd3303, %rd3313;
	add.s64 	%rd3315, %rd3314, %rd3309;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2488,%dummy}, %rd3304;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2489}, %rd3304;
	}
	shf.r.wrap.b32 	%r2490, %r2489, %r2488, 14;
	shf.r.wrap.b32 	%r2491, %r2488, %r2489, 14;
	mov.b64 	%rd3316, {%r2491, %r2490};
	shf.r.wrap.b32 	%r2492, %r2489, %r2488, 18;
	shf.r.wrap.b32 	%r2493, %r2488, %r2489, 18;
	mov.b64 	%rd3317, {%r2493, %r2492};
	xor.b64  	%rd3318, %rd3317, %rd3316;
	shf.l.wrap.b32 	%r2494, %r2488, %r2489, 23;
	shf.l.wrap.b32 	%r2495, %r2489, %r2488, 23;
	mov.b64 	%rd3319, {%r2495, %r2494};
	xor.b64  	%rd3320, %rd3318, %rd3319;
	xor.b64  	%rd3321, %rd3280, %rd3256;
	and.b64  	%rd3322, %rd3304, %rd3321;
	xor.b64  	%rd3323, %rd3322, %rd3256;
	add.s64 	%rd3324, %rd3232, %rd3070;
	add.s64 	%rd3325, %rd3324, %rd5911;
	add.s64 	%rd3326, %rd3325, %rd3323;
	add.s64 	%rd3327, %rd3326, %rd3320;
	add.s64 	%rd3328, %rd3327, %rd3243;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2496,%dummy}, %rd3315;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2497}, %rd3315;
	}
	shf.r.wrap.b32 	%r2498, %r2497, %r2496, 28;
	shf.r.wrap.b32 	%r2499, %r2496, %r2497, 28;
	mov.b64 	%rd3329, {%r2499, %r2498};
	shf.l.wrap.b32 	%r2500, %r2496, %r2497, 30;
	shf.l.wrap.b32 	%r2501, %r2497, %r2496, 30;
	mov.b64 	%rd3330, {%r2501, %r2500};
	xor.b64  	%rd3331, %rd3330, %rd3329;
	shf.l.wrap.b32 	%r2502, %r2496, %r2497, 25;
	shf.l.wrap.b32 	%r2503, %r2497, %r2496, 25;
	mov.b64 	%rd3332, {%r2503, %r2502};
	xor.b64  	%rd3333, %rd3331, %rd3332;
	xor.b64  	%rd3334, %rd3315, %rd3267;
	xor.b64  	%rd3335, %rd3315, %rd3291;
	and.b64  	%rd3336, %rd3335, %rd3334;
	xor.b64  	%rd3337, %rd3336, %rd3315;
	add.s64 	%rd3338, %rd3327, %rd3337;
	add.s64 	%rd3339, %rd3338, %rd3333;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2504,%dummy}, %rd3328;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2505}, %rd3328;
	}
	shf.r.wrap.b32 	%r2506, %r2505, %r2504, 14;
	shf.r.wrap.b32 	%r2507, %r2504, %r2505, 14;
	mov.b64 	%rd3340, {%r2507, %r2506};
	shf.r.wrap.b32 	%r2508, %r2505, %r2504, 18;
	shf.r.wrap.b32 	%r2509, %r2504, %r2505, 18;
	mov.b64 	%rd3341, {%r2509, %r2508};
	xor.b64  	%rd3342, %rd3341, %rd3340;
	shf.l.wrap.b32 	%r2510, %r2504, %r2505, 23;
	shf.l.wrap.b32 	%r2511, %r2505, %r2504, 23;
	mov.b64 	%rd3343, {%r2511, %r2510};
	xor.b64  	%rd3344, %rd3342, %rd3343;
	xor.b64  	%rd3345, %rd3304, %rd3280;
	and.b64  	%rd3346, %rd3328, %rd3345;
	xor.b64  	%rd3347, %rd3346, %rd3280;
	add.s64 	%rd3348, %rd3256, %rd3071;
	add.s64 	%rd3349, %rd3348, %rd5910;
	add.s64 	%rd3350, %rd3349, %rd3347;
	add.s64 	%rd3351, %rd3350, %rd3344;
	add.s64 	%rd3352, %rd3351, %rd3267;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2512,%dummy}, %rd3339;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2513}, %rd3339;
	}
	shf.r.wrap.b32 	%r2514, %r2513, %r2512, 28;
	shf.r.wrap.b32 	%r2515, %r2512, %r2513, 28;
	mov.b64 	%rd3353, {%r2515, %r2514};
	shf.l.wrap.b32 	%r2516, %r2512, %r2513, 30;
	shf.l.wrap.b32 	%r2517, %r2513, %r2512, 30;
	mov.b64 	%rd3354, {%r2517, %r2516};
	xor.b64  	%rd3355, %rd3354, %rd3353;
	shf.l.wrap.b32 	%r2518, %r2512, %r2513, 25;
	shf.l.wrap.b32 	%r2519, %r2513, %r2512, 25;
	mov.b64 	%rd3356, {%r2519, %r2518};
	xor.b64  	%rd3357, %rd3355, %rd3356;
	xor.b64  	%rd3358, %rd3339, %rd3291;
	xor.b64  	%rd3359, %rd3339, %rd3315;
	and.b64  	%rd3360, %rd3359, %rd3358;
	xor.b64  	%rd3361, %rd3360, %rd3339;
	add.s64 	%rd3362, %rd3351, %rd3361;
	add.s64 	%rd3363, %rd3362, %rd3357;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2520,%dummy}, %rd3352;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2521}, %rd3352;
	}
	shf.r.wrap.b32 	%r2522, %r2521, %r2520, 14;
	shf.r.wrap.b32 	%r2523, %r2520, %r2521, 14;
	mov.b64 	%rd3364, {%r2523, %r2522};
	shf.r.wrap.b32 	%r2524, %r2521, %r2520, 18;
	shf.r.wrap.b32 	%r2525, %r2520, %r2521, 18;
	mov.b64 	%rd3365, {%r2525, %r2524};
	xor.b64  	%rd3366, %rd3365, %rd3364;
	shf.l.wrap.b32 	%r2526, %r2520, %r2521, 23;
	shf.l.wrap.b32 	%r2527, %r2521, %r2520, 23;
	mov.b64 	%rd3367, {%r2527, %r2526};
	xor.b64  	%rd3368, %rd3366, %rd3367;
	xor.b64  	%rd3369, %rd3328, %rd3304;
	and.b64  	%rd3370, %rd3352, %rd3369;
	xor.b64  	%rd3371, %rd3370, %rd3304;
	add.s64 	%rd3372, %rd3280, %rd3072;
	add.s64 	%rd3373, %rd3372, %rd5909;
	add.s64 	%rd3374, %rd3373, %rd3371;
	add.s64 	%rd3375, %rd3374, %rd3368;
	add.s64 	%rd3376, %rd3375, %rd3291;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2528,%dummy}, %rd3363;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2529}, %rd3363;
	}
	shf.r.wrap.b32 	%r2530, %r2529, %r2528, 28;
	shf.r.wrap.b32 	%r2531, %r2528, %r2529, 28;
	mov.b64 	%rd3377, {%r2531, %r2530};
	shf.l.wrap.b32 	%r2532, %r2528, %r2529, 30;
	shf.l.wrap.b32 	%r2533, %r2529, %r2528, 30;
	mov.b64 	%rd3378, {%r2533, %r2532};
	xor.b64  	%rd3379, %rd3378, %rd3377;
	shf.l.wrap.b32 	%r2534, %r2528, %r2529, 25;
	shf.l.wrap.b32 	%r2535, %r2529, %r2528, 25;
	mov.b64 	%rd3380, {%r2535, %r2534};
	xor.b64  	%rd3381, %rd3379, %rd3380;
	xor.b64  	%rd3382, %rd3363, %rd3315;
	xor.b64  	%rd3383, %rd3363, %rd3339;
	and.b64  	%rd3384, %rd3383, %rd3382;
	xor.b64  	%rd3385, %rd3384, %rd3363;
	add.s64 	%rd3386, %rd3375, %rd3385;
	add.s64 	%rd3387, %rd3386, %rd3381;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2536,%dummy}, %rd3376;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2537}, %rd3376;
	}
	shf.r.wrap.b32 	%r2538, %r2537, %r2536, 14;
	shf.r.wrap.b32 	%r2539, %r2536, %r2537, 14;
	mov.b64 	%rd3388, {%r2539, %r2538};
	shf.r.wrap.b32 	%r2540, %r2537, %r2536, 18;
	shf.r.wrap.b32 	%r2541, %r2536, %r2537, 18;
	mov.b64 	%rd3389, {%r2541, %r2540};
	xor.b64  	%rd3390, %rd3389, %rd3388;
	shf.l.wrap.b32 	%r2542, %r2536, %r2537, 23;
	shf.l.wrap.b32 	%r2543, %r2537, %r2536, 23;
	mov.b64 	%rd3391, {%r2543, %r2542};
	xor.b64  	%rd3392, %rd3390, %rd3391;
	xor.b64  	%rd3393, %rd3352, %rd3328;
	and.b64  	%rd3394, %rd3376, %rd3393;
	xor.b64  	%rd3395, %rd3394, %rd3328;
	add.s64 	%rd3396, %rd3304, %rd3073;
	add.s64 	%rd3397, %rd3396, %rd5908;
	add.s64 	%rd3398, %rd3397, %rd3395;
	add.s64 	%rd3399, %rd3398, %rd3392;
	add.s64 	%rd3400, %rd3399, %rd3315;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2544,%dummy}, %rd3387;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2545}, %rd3387;
	}
	shf.r.wrap.b32 	%r2546, %r2545, %r2544, 28;
	shf.r.wrap.b32 	%r2547, %r2544, %r2545, 28;
	mov.b64 	%rd3401, {%r2547, %r2546};
	shf.l.wrap.b32 	%r2548, %r2544, %r2545, 30;
	shf.l.wrap.b32 	%r2549, %r2545, %r2544, 30;
	mov.b64 	%rd3402, {%r2549, %r2548};
	xor.b64  	%rd3403, %rd3402, %rd3401;
	shf.l.wrap.b32 	%r2550, %r2544, %r2545, 25;
	shf.l.wrap.b32 	%r2551, %r2545, %r2544, 25;
	mov.b64 	%rd3404, {%r2551, %r2550};
	xor.b64  	%rd3405, %rd3403, %rd3404;
	xor.b64  	%rd3406, %rd3387, %rd3339;
	xor.b64  	%rd3407, %rd3387, %rd3363;
	and.b64  	%rd3408, %rd3407, %rd3406;
	xor.b64  	%rd3409, %rd3408, %rd3387;
	add.s64 	%rd3410, %rd3399, %rd3409;
	add.s64 	%rd3411, %rd3410, %rd3405;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2552,%dummy}, %rd3400;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2553}, %rd3400;
	}
	shf.r.wrap.b32 	%r2554, %r2553, %r2552, 14;
	shf.r.wrap.b32 	%r2555, %r2552, %r2553, 14;
	mov.b64 	%rd3412, {%r2555, %r2554};
	shf.r.wrap.b32 	%r2556, %r2553, %r2552, 18;
	shf.r.wrap.b32 	%r2557, %r2552, %r2553, 18;
	mov.b64 	%rd3413, {%r2557, %r2556};
	xor.b64  	%rd3414, %rd3413, %rd3412;
	shf.l.wrap.b32 	%r2558, %r2552, %r2553, 23;
	shf.l.wrap.b32 	%r2559, %r2553, %r2552, 23;
	mov.b64 	%rd3415, {%r2559, %r2558};
	xor.b64  	%rd3416, %rd3414, %rd3415;
	xor.b64  	%rd3417, %rd3376, %rd3352;
	and.b64  	%rd3418, %rd3400, %rd3417;
	xor.b64  	%rd3419, %rd3418, %rd3352;
	add.s64 	%rd3420, %rd3328, %rd3074;
	add.s64 	%rd3421, %rd3420, %rd5907;
	add.s64 	%rd3422, %rd3421, %rd3419;
	add.s64 	%rd3423, %rd3422, %rd3416;
	add.s64 	%rd3424, %rd3423, %rd3339;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2560,%dummy}, %rd3411;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2561}, %rd3411;
	}
	shf.r.wrap.b32 	%r2562, %r2561, %r2560, 28;
	shf.r.wrap.b32 	%r2563, %r2560, %r2561, 28;
	mov.b64 	%rd3425, {%r2563, %r2562};
	shf.l.wrap.b32 	%r2564, %r2560, %r2561, 30;
	shf.l.wrap.b32 	%r2565, %r2561, %r2560, 30;
	mov.b64 	%rd3426, {%r2565, %r2564};
	xor.b64  	%rd3427, %rd3426, %rd3425;
	shf.l.wrap.b32 	%r2566, %r2560, %r2561, 25;
	shf.l.wrap.b32 	%r2567, %r2561, %r2560, 25;
	mov.b64 	%rd3428, {%r2567, %r2566};
	xor.b64  	%rd3429, %rd3427, %rd3428;
	xor.b64  	%rd3430, %rd3411, %rd3363;
	xor.b64  	%rd3431, %rd3411, %rd3387;
	and.b64  	%rd3432, %rd3431, %rd3430;
	xor.b64  	%rd3433, %rd3432, %rd3411;
	add.s64 	%rd3434, %rd3423, %rd3433;
	add.s64 	%rd3435, %rd3434, %rd3429;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2568,%dummy}, %rd3424;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2569}, %rd3424;
	}
	shf.r.wrap.b32 	%r2570, %r2569, %r2568, 14;
	shf.r.wrap.b32 	%r2571, %r2568, %r2569, 14;
	mov.b64 	%rd3436, {%r2571, %r2570};
	shf.r.wrap.b32 	%r2572, %r2569, %r2568, 18;
	shf.r.wrap.b32 	%r2573, %r2568, %r2569, 18;
	mov.b64 	%rd3437, {%r2573, %r2572};
	xor.b64  	%rd3438, %rd3437, %rd3436;
	shf.l.wrap.b32 	%r2574, %r2568, %r2569, 23;
	shf.l.wrap.b32 	%r2575, %r2569, %r2568, 23;
	mov.b64 	%rd3439, {%r2575, %r2574};
	xor.b64  	%rd3440, %rd3438, %rd3439;
	xor.b64  	%rd3441, %rd3400, %rd3376;
	and.b64  	%rd3442, %rd3424, %rd3441;
	xor.b64  	%rd3443, %rd3442, %rd3376;
	add.s64 	%rd3444, %rd3352, %rd3075;
	add.s64 	%rd3445, %rd3444, %rd5906;
	add.s64 	%rd3446, %rd3445, %rd3443;
	add.s64 	%rd3447, %rd3446, %rd3440;
	add.s64 	%rd3448, %rd3447, %rd3363;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2576,%dummy}, %rd3435;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2577}, %rd3435;
	}
	shf.r.wrap.b32 	%r2578, %r2577, %r2576, 28;
	shf.r.wrap.b32 	%r2579, %r2576, %r2577, 28;
	mov.b64 	%rd3449, {%r2579, %r2578};
	shf.l.wrap.b32 	%r2580, %r2576, %r2577, 30;
	shf.l.wrap.b32 	%r2581, %r2577, %r2576, 30;
	mov.b64 	%rd3450, {%r2581, %r2580};
	xor.b64  	%rd3451, %rd3450, %rd3449;
	shf.l.wrap.b32 	%r2582, %r2576, %r2577, 25;
	shf.l.wrap.b32 	%r2583, %r2577, %r2576, 25;
	mov.b64 	%rd3452, {%r2583, %r2582};
	xor.b64  	%rd3453, %rd3451, %rd3452;
	xor.b64  	%rd3454, %rd3435, %rd3387;
	xor.b64  	%rd3455, %rd3435, %rd3411;
	and.b64  	%rd3456, %rd3455, %rd3454;
	xor.b64  	%rd3457, %rd3456, %rd3435;
	add.s64 	%rd3458, %rd3447, %rd3457;
	add.s64 	%rd3459, %rd3458, %rd3453;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2584,%dummy}, %rd3074;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2585}, %rd3074;
	}
	shf.r.wrap.b32 	%r2586, %r2585, %r2584, 19;
	shf.r.wrap.b32 	%r2587, %r2584, %r2585, 19;
	mov.b64 	%rd3460, {%r2587, %r2586};
	shf.l.wrap.b32 	%r2588, %r2584, %r2585, 3;
	shf.l.wrap.b32 	%r2589, %r2585, %r2584, 3;
	mov.b64 	%rd3461, {%r2589, %r2588};
	shr.u64 	%rd3462, %rd3074, 6;
	xor.b64  	%rd3463, %rd3460, %rd3462;
	xor.b64  	%rd3464, %rd3463, %rd3461;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2590,%dummy}, %rd3061;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2591}, %rd3061;
	}
	shf.r.wrap.b32 	%r2592, %r2591, %r2590, 1;
	shf.r.wrap.b32 	%r2593, %r2590, %r2591, 1;
	mov.b64 	%rd3465, {%r2593, %r2592};
	shf.r.wrap.b32 	%r2594, %r2591, %r2590, 8;
	shf.r.wrap.b32 	%r2595, %r2590, %r2591, 8;
	mov.b64 	%rd3466, {%r2595, %r2594};
	shr.u64 	%rd3467, %rd3061, 7;
	xor.b64  	%rd3468, %rd3465, %rd3467;
	xor.b64  	%rd3469, %rd3468, %rd3466;
	add.s64 	%rd3470, %rd3069, %rd3060;
	add.s64 	%rd3471, %rd3470, %rd3464;
	add.s64 	%rd3472, %rd3471, %rd3469;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2596,%dummy}, %rd3075;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2597}, %rd3075;
	}
	shf.r.wrap.b32 	%r2598, %r2597, %r2596, 19;
	shf.r.wrap.b32 	%r2599, %r2596, %r2597, 19;
	mov.b64 	%rd3473, {%r2599, %r2598};
	shf.l.wrap.b32 	%r2600, %r2596, %r2597, 3;
	shf.l.wrap.b32 	%r2601, %r2597, %r2596, 3;
	mov.b64 	%rd3474, {%r2601, %r2600};
	shr.u64 	%rd3475, %rd3075, 6;
	xor.b64  	%rd3476, %rd3473, %rd3475;
	xor.b64  	%rd3477, %rd3476, %rd3474;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2602,%dummy}, %rd3062;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2603}, %rd3062;
	}
	shf.r.wrap.b32 	%r2604, %r2603, %r2602, 1;
	shf.r.wrap.b32 	%r2605, %r2602, %r2603, 1;
	mov.b64 	%rd3478, {%r2605, %r2604};
	shf.r.wrap.b32 	%r2606, %r2603, %r2602, 8;
	shf.r.wrap.b32 	%r2607, %r2602, %r2603, 8;
	mov.b64 	%rd3479, {%r2607, %r2606};
	shr.u64 	%rd3480, %rd3062, 7;
	xor.b64  	%rd3481, %rd3478, %rd3480;
	xor.b64  	%rd3482, %rd3481, %rd3479;
	add.s64 	%rd3483, %rd3070, %rd3061;
	add.s64 	%rd3484, %rd3483, %rd3477;
	add.s64 	%rd3485, %rd3484, %rd3482;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2608,%dummy}, %rd3472;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2609}, %rd3472;
	}
	shf.r.wrap.b32 	%r2610, %r2609, %r2608, 19;
	shf.r.wrap.b32 	%r2611, %r2608, %r2609, 19;
	mov.b64 	%rd3486, {%r2611, %r2610};
	shf.l.wrap.b32 	%r2612, %r2608, %r2609, 3;
	shf.l.wrap.b32 	%r2613, %r2609, %r2608, 3;
	mov.b64 	%rd3487, {%r2613, %r2612};
	shr.u64 	%rd3488, %rd3472, 6;
	xor.b64  	%rd3489, %rd3486, %rd3488;
	xor.b64  	%rd3490, %rd3489, %rd3487;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2614,%dummy}, %rd3063;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2615}, %rd3063;
	}
	shf.r.wrap.b32 	%r2616, %r2615, %r2614, 1;
	shf.r.wrap.b32 	%r2617, %r2614, %r2615, 1;
	mov.b64 	%rd3491, {%r2617, %r2616};
	shf.r.wrap.b32 	%r2618, %r2615, %r2614, 8;
	shf.r.wrap.b32 	%r2619, %r2614, %r2615, 8;
	mov.b64 	%rd3492, {%r2619, %r2618};
	shr.u64 	%rd3493, %rd3063, 7;
	xor.b64  	%rd3494, %rd3491, %rd3493;
	xor.b64  	%rd3495, %rd3494, %rd3492;
	add.s64 	%rd3496, %rd3071, %rd3062;
	add.s64 	%rd3497, %rd3496, %rd3490;
	add.s64 	%rd3498, %rd3497, %rd3495;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2620,%dummy}, %rd3485;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2621}, %rd3485;
	}
	shf.r.wrap.b32 	%r2622, %r2621, %r2620, 19;
	shf.r.wrap.b32 	%r2623, %r2620, %r2621, 19;
	mov.b64 	%rd3499, {%r2623, %r2622};
	shf.l.wrap.b32 	%r2624, %r2620, %r2621, 3;
	shf.l.wrap.b32 	%r2625, %r2621, %r2620, 3;
	mov.b64 	%rd3500, {%r2625, %r2624};
	shr.u64 	%rd3501, %rd3485, 6;
	xor.b64  	%rd3502, %rd3499, %rd3501;
	xor.b64  	%rd3503, %rd3502, %rd3500;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2626,%dummy}, %rd3064;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2627}, %rd3064;
	}
	shf.r.wrap.b32 	%r2628, %r2627, %r2626, 1;
	shf.r.wrap.b32 	%r2629, %r2626, %r2627, 1;
	mov.b64 	%rd3504, {%r2629, %r2628};
	shf.r.wrap.b32 	%r2630, %r2627, %r2626, 8;
	shf.r.wrap.b32 	%r2631, %r2626, %r2627, 8;
	mov.b64 	%rd3505, {%r2631, %r2630};
	shr.u64 	%rd3506, %rd3064, 7;
	xor.b64  	%rd3507, %rd3504, %rd3506;
	xor.b64  	%rd3508, %rd3507, %rd3505;
	add.s64 	%rd3509, %rd3072, %rd3063;
	add.s64 	%rd3510, %rd3509, %rd3503;
	add.s64 	%rd3511, %rd3510, %rd3508;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2632,%dummy}, %rd3498;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2633}, %rd3498;
	}
	shf.r.wrap.b32 	%r2634, %r2633, %r2632, 19;
	shf.r.wrap.b32 	%r2635, %r2632, %r2633, 19;
	mov.b64 	%rd3512, {%r2635, %r2634};
	shf.l.wrap.b32 	%r2636, %r2632, %r2633, 3;
	shf.l.wrap.b32 	%r2637, %r2633, %r2632, 3;
	mov.b64 	%rd3513, {%r2637, %r2636};
	shr.u64 	%rd3514, %rd3498, 6;
	xor.b64  	%rd3515, %rd3512, %rd3514;
	xor.b64  	%rd3516, %rd3515, %rd3513;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2638,%dummy}, %rd3065;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2639}, %rd3065;
	}
	shf.r.wrap.b32 	%r2640, %r2639, %r2638, 1;
	shf.r.wrap.b32 	%r2641, %r2638, %r2639, 1;
	mov.b64 	%rd3517, {%r2641, %r2640};
	shf.r.wrap.b32 	%r2642, %r2639, %r2638, 8;
	shf.r.wrap.b32 	%r2643, %r2638, %r2639, 8;
	mov.b64 	%rd3518, {%r2643, %r2642};
	shr.u64 	%rd3519, %rd3065, 7;
	xor.b64  	%rd3520, %rd3517, %rd3519;
	xor.b64  	%rd3521, %rd3520, %rd3518;
	add.s64 	%rd3522, %rd3073, %rd3064;
	add.s64 	%rd3523, %rd3522, %rd3516;
	add.s64 	%rd3524, %rd3523, %rd3521;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2644,%dummy}, %rd3511;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2645}, %rd3511;
	}
	shf.r.wrap.b32 	%r2646, %r2645, %r2644, 19;
	shf.r.wrap.b32 	%r2647, %r2644, %r2645, 19;
	mov.b64 	%rd3525, {%r2647, %r2646};
	shf.l.wrap.b32 	%r2648, %r2644, %r2645, 3;
	shf.l.wrap.b32 	%r2649, %r2645, %r2644, 3;
	mov.b64 	%rd3526, {%r2649, %r2648};
	shr.u64 	%rd3527, %rd3511, 6;
	xor.b64  	%rd3528, %rd3525, %rd3527;
	xor.b64  	%rd3529, %rd3528, %rd3526;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2650,%dummy}, %rd3066;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2651}, %rd3066;
	}
	shf.r.wrap.b32 	%r2652, %r2651, %r2650, 1;
	shf.r.wrap.b32 	%r2653, %r2650, %r2651, 1;
	mov.b64 	%rd3530, {%r2653, %r2652};
	shf.r.wrap.b32 	%r2654, %r2651, %r2650, 8;
	shf.r.wrap.b32 	%r2655, %r2650, %r2651, 8;
	mov.b64 	%rd3531, {%r2655, %r2654};
	shr.u64 	%rd3532, %rd3066, 7;
	xor.b64  	%rd3533, %rd3530, %rd3532;
	xor.b64  	%rd3534, %rd3533, %rd3531;
	add.s64 	%rd3535, %rd3074, %rd3065;
	add.s64 	%rd3536, %rd3535, %rd3529;
	add.s64 	%rd3537, %rd3536, %rd3534;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2656,%dummy}, %rd3524;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2657}, %rd3524;
	}
	shf.r.wrap.b32 	%r2658, %r2657, %r2656, 19;
	shf.r.wrap.b32 	%r2659, %r2656, %r2657, 19;
	mov.b64 	%rd3538, {%r2659, %r2658};
	shf.l.wrap.b32 	%r2660, %r2656, %r2657, 3;
	shf.l.wrap.b32 	%r2661, %r2657, %r2656, 3;
	mov.b64 	%rd3539, {%r2661, %r2660};
	shr.u64 	%rd3540, %rd3524, 6;
	xor.b64  	%rd3541, %rd3538, %rd3540;
	xor.b64  	%rd3542, %rd3541, %rd3539;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2662,%dummy}, %rd3067;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2663}, %rd3067;
	}
	shf.r.wrap.b32 	%r2664, %r2663, %r2662, 1;
	shf.r.wrap.b32 	%r2665, %r2662, %r2663, 1;
	mov.b64 	%rd3543, {%r2665, %r2664};
	shf.r.wrap.b32 	%r2666, %r2663, %r2662, 8;
	shf.r.wrap.b32 	%r2667, %r2662, %r2663, 8;
	mov.b64 	%rd3544, {%r2667, %r2666};
	shr.u64 	%rd3545, %rd3067, 7;
	xor.b64  	%rd3546, %rd3543, %rd3545;
	xor.b64  	%rd3547, %rd3546, %rd3544;
	add.s64 	%rd3548, %rd3075, %rd3066;
	add.s64 	%rd3549, %rd3548, %rd3542;
	add.s64 	%rd3550, %rd3549, %rd3547;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2668,%dummy}, %rd3537;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2669}, %rd3537;
	}
	shf.r.wrap.b32 	%r2670, %r2669, %r2668, 19;
	shf.r.wrap.b32 	%r2671, %r2668, %r2669, 19;
	mov.b64 	%rd3551, {%r2671, %r2670};
	shf.l.wrap.b32 	%r2672, %r2668, %r2669, 3;
	shf.l.wrap.b32 	%r2673, %r2669, %r2668, 3;
	mov.b64 	%rd3552, {%r2673, %r2672};
	shr.u64 	%rd3553, %rd3537, 6;
	xor.b64  	%rd3554, %rd3551, %rd3553;
	xor.b64  	%rd3555, %rd3554, %rd3552;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2674,%dummy}, %rd3068;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2675}, %rd3068;
	}
	shf.r.wrap.b32 	%r2676, %r2675, %r2674, 1;
	shf.r.wrap.b32 	%r2677, %r2674, %r2675, 1;
	mov.b64 	%rd3556, {%r2677, %r2676};
	shf.r.wrap.b32 	%r2678, %r2675, %r2674, 8;
	shf.r.wrap.b32 	%r2679, %r2674, %r2675, 8;
	mov.b64 	%rd3557, {%r2679, %r2678};
	shr.u64 	%rd3558, %rd3068, 7;
	xor.b64  	%rd3559, %rd3556, %rd3558;
	xor.b64  	%rd3560, %rd3559, %rd3557;
	add.s64 	%rd3561, %rd3472, %rd3067;
	add.s64 	%rd3562, %rd3561, %rd3555;
	add.s64 	%rd3563, %rd3562, %rd3560;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2680,%dummy}, %rd3550;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2681}, %rd3550;
	}
	shf.r.wrap.b32 	%r2682, %r2681, %r2680, 19;
	shf.r.wrap.b32 	%r2683, %r2680, %r2681, 19;
	mov.b64 	%rd3564, {%r2683, %r2682};
	shf.l.wrap.b32 	%r2684, %r2680, %r2681, 3;
	shf.l.wrap.b32 	%r2685, %r2681, %r2680, 3;
	mov.b64 	%rd3565, {%r2685, %r2684};
	shr.u64 	%rd3566, %rd3550, 6;
	xor.b64  	%rd3567, %rd3564, %rd3566;
	xor.b64  	%rd3568, %rd3567, %rd3565;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2686,%dummy}, %rd3069;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2687}, %rd3069;
	}
	shf.r.wrap.b32 	%r2688, %r2687, %r2686, 1;
	shf.r.wrap.b32 	%r2689, %r2686, %r2687, 1;
	mov.b64 	%rd3569, {%r2689, %r2688};
	shf.r.wrap.b32 	%r2690, %r2687, %r2686, 8;
	shf.r.wrap.b32 	%r2691, %r2686, %r2687, 8;
	mov.b64 	%rd3570, {%r2691, %r2690};
	shr.u64 	%rd3571, %rd3069, 7;
	xor.b64  	%rd3572, %rd3569, %rd3571;
	xor.b64  	%rd3573, %rd3572, %rd3570;
	add.s64 	%rd3574, %rd3485, %rd3068;
	add.s64 	%rd3575, %rd3574, %rd3568;
	add.s64 	%rd3576, %rd3575, %rd3573;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2692,%dummy}, %rd3563;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2693}, %rd3563;
	}
	shf.r.wrap.b32 	%r2694, %r2693, %r2692, 19;
	shf.r.wrap.b32 	%r2695, %r2692, %r2693, 19;
	mov.b64 	%rd3577, {%r2695, %r2694};
	shf.l.wrap.b32 	%r2696, %r2692, %r2693, 3;
	shf.l.wrap.b32 	%r2697, %r2693, %r2692, 3;
	mov.b64 	%rd3578, {%r2697, %r2696};
	shr.u64 	%rd3579, %rd3563, 6;
	xor.b64  	%rd3580, %rd3577, %rd3579;
	xor.b64  	%rd3581, %rd3580, %rd3578;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2698,%dummy}, %rd3070;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2699}, %rd3070;
	}
	shf.r.wrap.b32 	%r2700, %r2699, %r2698, 1;
	shf.r.wrap.b32 	%r2701, %r2698, %r2699, 1;
	mov.b64 	%rd3582, {%r2701, %r2700};
	shf.r.wrap.b32 	%r2702, %r2699, %r2698, 8;
	shf.r.wrap.b32 	%r2703, %r2698, %r2699, 8;
	mov.b64 	%rd3583, {%r2703, %r2702};
	shr.u64 	%rd3584, %rd3070, 7;
	xor.b64  	%rd3585, %rd3582, %rd3584;
	xor.b64  	%rd3586, %rd3585, %rd3583;
	add.s64 	%rd3587, %rd3498, %rd3069;
	add.s64 	%rd3588, %rd3587, %rd3581;
	add.s64 	%rd3589, %rd3588, %rd3586;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2704,%dummy}, %rd3576;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2705}, %rd3576;
	}
	shf.r.wrap.b32 	%r2706, %r2705, %r2704, 19;
	shf.r.wrap.b32 	%r2707, %r2704, %r2705, 19;
	mov.b64 	%rd3590, {%r2707, %r2706};
	shf.l.wrap.b32 	%r2708, %r2704, %r2705, 3;
	shf.l.wrap.b32 	%r2709, %r2705, %r2704, 3;
	mov.b64 	%rd3591, {%r2709, %r2708};
	shr.u64 	%rd3592, %rd3576, 6;
	xor.b64  	%rd3593, %rd3590, %rd3592;
	xor.b64  	%rd3594, %rd3593, %rd3591;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2710,%dummy}, %rd3071;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2711}, %rd3071;
	}
	shf.r.wrap.b32 	%r2712, %r2711, %r2710, 1;
	shf.r.wrap.b32 	%r2713, %r2710, %r2711, 1;
	mov.b64 	%rd3595, {%r2713, %r2712};
	shf.r.wrap.b32 	%r2714, %r2711, %r2710, 8;
	shf.r.wrap.b32 	%r2715, %r2710, %r2711, 8;
	mov.b64 	%rd3596, {%r2715, %r2714};
	shr.u64 	%rd3597, %rd3071, 7;
	xor.b64  	%rd3598, %rd3595, %rd3597;
	xor.b64  	%rd3599, %rd3598, %rd3596;
	add.s64 	%rd3600, %rd3511, %rd3070;
	add.s64 	%rd3601, %rd3600, %rd3594;
	add.s64 	%rd3602, %rd3601, %rd3599;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2716,%dummy}, %rd3589;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2717}, %rd3589;
	}
	shf.r.wrap.b32 	%r2718, %r2717, %r2716, 19;
	shf.r.wrap.b32 	%r2719, %r2716, %r2717, 19;
	mov.b64 	%rd3603, {%r2719, %r2718};
	shf.l.wrap.b32 	%r2720, %r2716, %r2717, 3;
	shf.l.wrap.b32 	%r2721, %r2717, %r2716, 3;
	mov.b64 	%rd3604, {%r2721, %r2720};
	shr.u64 	%rd3605, %rd3589, 6;
	xor.b64  	%rd3606, %rd3603, %rd3605;
	xor.b64  	%rd3607, %rd3606, %rd3604;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2722,%dummy}, %rd3072;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2723}, %rd3072;
	}
	shf.r.wrap.b32 	%r2724, %r2723, %r2722, 1;
	shf.r.wrap.b32 	%r2725, %r2722, %r2723, 1;
	mov.b64 	%rd3608, {%r2725, %r2724};
	shf.r.wrap.b32 	%r2726, %r2723, %r2722, 8;
	shf.r.wrap.b32 	%r2727, %r2722, %r2723, 8;
	mov.b64 	%rd3609, {%r2727, %r2726};
	shr.u64 	%rd3610, %rd3072, 7;
	xor.b64  	%rd3611, %rd3608, %rd3610;
	xor.b64  	%rd3612, %rd3611, %rd3609;
	add.s64 	%rd3613, %rd3524, %rd3071;
	add.s64 	%rd3614, %rd3613, %rd3607;
	add.s64 	%rd3615, %rd3614, %rd3612;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2728,%dummy}, %rd3602;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2729}, %rd3602;
	}
	shf.r.wrap.b32 	%r2730, %r2729, %r2728, 19;
	shf.r.wrap.b32 	%r2731, %r2728, %r2729, 19;
	mov.b64 	%rd3616, {%r2731, %r2730};
	shf.l.wrap.b32 	%r2732, %r2728, %r2729, 3;
	shf.l.wrap.b32 	%r2733, %r2729, %r2728, 3;
	mov.b64 	%rd3617, {%r2733, %r2732};
	shr.u64 	%rd3618, %rd3602, 6;
	xor.b64  	%rd3619, %rd3616, %rd3618;
	xor.b64  	%rd3620, %rd3619, %rd3617;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2734,%dummy}, %rd3073;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2735}, %rd3073;
	}
	shf.r.wrap.b32 	%r2736, %r2735, %r2734, 1;
	shf.r.wrap.b32 	%r2737, %r2734, %r2735, 1;
	mov.b64 	%rd3621, {%r2737, %r2736};
	shf.r.wrap.b32 	%r2738, %r2735, %r2734, 8;
	shf.r.wrap.b32 	%r2739, %r2734, %r2735, 8;
	mov.b64 	%rd3622, {%r2739, %r2738};
	shr.u64 	%rd3623, %rd3073, 7;
	xor.b64  	%rd3624, %rd3621, %rd3623;
	xor.b64  	%rd3625, %rd3624, %rd3622;
	add.s64 	%rd3626, %rd3537, %rd3072;
	add.s64 	%rd3627, %rd3626, %rd3620;
	add.s64 	%rd3628, %rd3627, %rd3625;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2740,%dummy}, %rd3615;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2741}, %rd3615;
	}
	shf.r.wrap.b32 	%r2742, %r2741, %r2740, 19;
	shf.r.wrap.b32 	%r2743, %r2740, %r2741, 19;
	mov.b64 	%rd3629, {%r2743, %r2742};
	shf.l.wrap.b32 	%r2744, %r2740, %r2741, 3;
	shf.l.wrap.b32 	%r2745, %r2741, %r2740, 3;
	mov.b64 	%rd3630, {%r2745, %r2744};
	shr.u64 	%rd3631, %rd3615, 6;
	xor.b64  	%rd3632, %rd3629, %rd3631;
	xor.b64  	%rd3633, %rd3632, %rd3630;
	shf.r.wrap.b32 	%r2746, %r2585, %r2584, 1;
	shf.r.wrap.b32 	%r2747, %r2584, %r2585, 1;
	mov.b64 	%rd3634, {%r2747, %r2746};
	shf.r.wrap.b32 	%r2748, %r2585, %r2584, 8;
	shf.r.wrap.b32 	%r2749, %r2584, %r2585, 8;
	mov.b64 	%rd3635, {%r2749, %r2748};
	shr.u64 	%rd3636, %rd3074, 7;
	xor.b64  	%rd3637, %rd3634, %rd3636;
	xor.b64  	%rd3638, %rd3637, %rd3635;
	add.s64 	%rd3639, %rd3550, %rd3073;
	add.s64 	%rd3640, %rd3639, %rd3633;
	add.s64 	%rd3641, %rd3640, %rd3638;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2750,%dummy}, %rd3628;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2751}, %rd3628;
	}
	shf.r.wrap.b32 	%r2752, %r2751, %r2750, 19;
	shf.r.wrap.b32 	%r2753, %r2750, %r2751, 19;
	mov.b64 	%rd3642, {%r2753, %r2752};
	shf.l.wrap.b32 	%r2754, %r2750, %r2751, 3;
	shf.l.wrap.b32 	%r2755, %r2751, %r2750, 3;
	mov.b64 	%rd3643, {%r2755, %r2754};
	shr.u64 	%rd3644, %rd3628, 6;
	xor.b64  	%rd3645, %rd3642, %rd3644;
	xor.b64  	%rd3646, %rd3645, %rd3643;
	shf.r.wrap.b32 	%r2756, %r2597, %r2596, 1;
	shf.r.wrap.b32 	%r2757, %r2596, %r2597, 1;
	mov.b64 	%rd3647, {%r2757, %r2756};
	shf.r.wrap.b32 	%r2758, %r2597, %r2596, 8;
	shf.r.wrap.b32 	%r2759, %r2596, %r2597, 8;
	mov.b64 	%rd3648, {%r2759, %r2758};
	shr.u64 	%rd3649, %rd3075, 7;
	xor.b64  	%rd3650, %rd3647, %rd3649;
	xor.b64  	%rd3651, %rd3650, %rd3648;
	add.s64 	%rd3652, %rd3563, %rd3074;
	add.s64 	%rd3653, %rd3652, %rd3646;
	add.s64 	%rd3654, %rd3653, %rd3651;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2760,%dummy}, %rd3641;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2761}, %rd3641;
	}
	shf.r.wrap.b32 	%r2762, %r2761, %r2760, 19;
	shf.r.wrap.b32 	%r2763, %r2760, %r2761, 19;
	mov.b64 	%rd3655, {%r2763, %r2762};
	shf.l.wrap.b32 	%r2764, %r2760, %r2761, 3;
	shf.l.wrap.b32 	%r2765, %r2761, %r2760, 3;
	mov.b64 	%rd3656, {%r2765, %r2764};
	shr.u64 	%rd3657, %rd3641, 6;
	xor.b64  	%rd3658, %rd3655, %rd3657;
	xor.b64  	%rd3659, %rd3658, %rd3656;
	shf.r.wrap.b32 	%r2766, %r2609, %r2608, 1;
	shf.r.wrap.b32 	%r2767, %r2608, %r2609, 1;
	mov.b64 	%rd3660, {%r2767, %r2766};
	shf.r.wrap.b32 	%r2768, %r2609, %r2608, 8;
	shf.r.wrap.b32 	%r2769, %r2608, %r2609, 8;
	mov.b64 	%rd3661, {%r2769, %r2768};
	shr.u64 	%rd3662, %rd3472, 7;
	xor.b64  	%rd3663, %rd3660, %rd3662;
	xor.b64  	%rd3664, %rd3663, %rd3661;
	add.s64 	%rd3665, %rd3576, %rd3075;
	add.s64 	%rd3666, %rd3665, %rd3659;
	add.s64 	%rd3667, %rd3666, %rd3664;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2770,%dummy}, %rd3448;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2771}, %rd3448;
	}
	shf.r.wrap.b32 	%r2772, %r2771, %r2770, 14;
	shf.r.wrap.b32 	%r2773, %r2770, %r2771, 14;
	mov.b64 	%rd3668, {%r2773, %r2772};
	shf.r.wrap.b32 	%r2774, %r2771, %r2770, 18;
	shf.r.wrap.b32 	%r2775, %r2770, %r2771, 18;
	mov.b64 	%rd3669, {%r2775, %r2774};
	xor.b64  	%rd3670, %rd3669, %rd3668;
	shf.l.wrap.b32 	%r2776, %r2770, %r2771, 23;
	shf.l.wrap.b32 	%r2777, %r2771, %r2770, 23;
	mov.b64 	%rd3671, {%r2777, %r2776};
	xor.b64  	%rd3672, %rd3670, %rd3671;
	xor.b64  	%rd3673, %rd3424, %rd3400;
	and.b64  	%rd3674, %rd3673, %rd3448;
	xor.b64  	%rd3675, %rd3674, %rd3400;
	add.s64 	%rd3676, %rd3675, %rd3376;
	add.s64 	%rd3677, %rd3676, %rd3472;
	add.s64 	%rd3678, %rd3677, %rd5905;
	add.s64 	%rd3679, %rd3678, %rd3672;
	add.s64 	%rd3680, %rd3679, %rd3387;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2778,%dummy}, %rd3459;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2779}, %rd3459;
	}
	shf.r.wrap.b32 	%r2780, %r2779, %r2778, 28;
	shf.r.wrap.b32 	%r2781, %r2778, %r2779, 28;
	mov.b64 	%rd3681, {%r2781, %r2780};
	shf.l.wrap.b32 	%r2782, %r2778, %r2779, 30;
	shf.l.wrap.b32 	%r2783, %r2779, %r2778, 30;
	mov.b64 	%rd3682, {%r2783, %r2782};
	xor.b64  	%rd3683, %rd3682, %rd3681;
	shf.l.wrap.b32 	%r2784, %r2778, %r2779, 25;
	shf.l.wrap.b32 	%r2785, %r2779, %r2778, 25;
	mov.b64 	%rd3684, {%r2785, %r2784};
	xor.b64  	%rd3685, %rd3683, %rd3684;
	xor.b64  	%rd3686, %rd3459, %rd3411;
	xor.b64  	%rd3687, %rd3459, %rd3435;
	and.b64  	%rd3688, %rd3687, %rd3686;
	xor.b64  	%rd3689, %rd3688, %rd3459;
	add.s64 	%rd3690, %rd3679, %rd3689;
	add.s64 	%rd3691, %rd3690, %rd3685;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2786,%dummy}, %rd3680;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2787}, %rd3680;
	}
	shf.r.wrap.b32 	%r2788, %r2787, %r2786, 14;
	shf.r.wrap.b32 	%r2789, %r2786, %r2787, 14;
	mov.b64 	%rd3692, {%r2789, %r2788};
	shf.r.wrap.b32 	%r2790, %r2787, %r2786, 18;
	shf.r.wrap.b32 	%r2791, %r2786, %r2787, 18;
	mov.b64 	%rd3693, {%r2791, %r2790};
	xor.b64  	%rd3694, %rd3693, %rd3692;
	shf.l.wrap.b32 	%r2792, %r2786, %r2787, 23;
	shf.l.wrap.b32 	%r2793, %r2787, %r2786, 23;
	mov.b64 	%rd3695, {%r2793, %r2792};
	xor.b64  	%rd3696, %rd3694, %rd3695;
	xor.b64  	%rd3697, %rd3448, %rd3424;
	and.b64  	%rd3698, %rd3680, %rd3697;
	xor.b64  	%rd3699, %rd3698, %rd3424;
	add.s64 	%rd3700, %rd3485, %rd3400;
	add.s64 	%rd3701, %rd3700, %rd5904;
	add.s64 	%rd3702, %rd3701, %rd3699;
	add.s64 	%rd3703, %rd3702, %rd3696;
	add.s64 	%rd3704, %rd3703, %rd3411;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2794,%dummy}, %rd3691;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2795}, %rd3691;
	}
	shf.r.wrap.b32 	%r2796, %r2795, %r2794, 28;
	shf.r.wrap.b32 	%r2797, %r2794, %r2795, 28;
	mov.b64 	%rd3705, {%r2797, %r2796};
	shf.l.wrap.b32 	%r2798, %r2794, %r2795, 30;
	shf.l.wrap.b32 	%r2799, %r2795, %r2794, 30;
	mov.b64 	%rd3706, {%r2799, %r2798};
	xor.b64  	%rd3707, %rd3706, %rd3705;
	shf.l.wrap.b32 	%r2800, %r2794, %r2795, 25;
	shf.l.wrap.b32 	%r2801, %r2795, %r2794, 25;
	mov.b64 	%rd3708, {%r2801, %r2800};
	xor.b64  	%rd3709, %rd3707, %rd3708;
	xor.b64  	%rd3710, %rd3691, %rd3435;
	xor.b64  	%rd3711, %rd3691, %rd3459;
	and.b64  	%rd3712, %rd3711, %rd3710;
	xor.b64  	%rd3713, %rd3712, %rd3691;
	add.s64 	%rd3714, %rd3703, %rd3713;
	add.s64 	%rd3715, %rd3714, %rd3709;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2802,%dummy}, %rd3704;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2803}, %rd3704;
	}
	shf.r.wrap.b32 	%r2804, %r2803, %r2802, 14;
	shf.r.wrap.b32 	%r2805, %r2802, %r2803, 14;
	mov.b64 	%rd3716, {%r2805, %r2804};
	shf.r.wrap.b32 	%r2806, %r2803, %r2802, 18;
	shf.r.wrap.b32 	%r2807, %r2802, %r2803, 18;
	mov.b64 	%rd3717, {%r2807, %r2806};
	xor.b64  	%rd3718, %rd3717, %rd3716;
	shf.l.wrap.b32 	%r2808, %r2802, %r2803, 23;
	shf.l.wrap.b32 	%r2809, %r2803, %r2802, 23;
	mov.b64 	%rd3719, {%r2809, %r2808};
	xor.b64  	%rd3720, %rd3718, %rd3719;
	xor.b64  	%rd3721, %rd3680, %rd3448;
	and.b64  	%rd3722, %rd3704, %rd3721;
	xor.b64  	%rd3723, %rd3722, %rd3448;
	add.s64 	%rd3724, %rd3498, %rd3424;
	add.s64 	%rd3725, %rd3724, %rd5903;
	add.s64 	%rd3726, %rd3725, %rd3723;
	add.s64 	%rd3727, %rd3726, %rd3720;
	add.s64 	%rd3728, %rd3727, %rd3435;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2810,%dummy}, %rd3715;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2811}, %rd3715;
	}
	shf.r.wrap.b32 	%r2812, %r2811, %r2810, 28;
	shf.r.wrap.b32 	%r2813, %r2810, %r2811, 28;
	mov.b64 	%rd3729, {%r2813, %r2812};
	shf.l.wrap.b32 	%r2814, %r2810, %r2811, 30;
	shf.l.wrap.b32 	%r2815, %r2811, %r2810, 30;
	mov.b64 	%rd3730, {%r2815, %r2814};
	xor.b64  	%rd3731, %rd3730, %rd3729;
	shf.l.wrap.b32 	%r2816, %r2810, %r2811, 25;
	shf.l.wrap.b32 	%r2817, %r2811, %r2810, 25;
	mov.b64 	%rd3732, {%r2817, %r2816};
	xor.b64  	%rd3733, %rd3731, %rd3732;
	xor.b64  	%rd3734, %rd3715, %rd3459;
	xor.b64  	%rd3735, %rd3715, %rd3691;
	and.b64  	%rd3736, %rd3735, %rd3734;
	xor.b64  	%rd3737, %rd3736, %rd3715;
	add.s64 	%rd3738, %rd3727, %rd3737;
	add.s64 	%rd3739, %rd3738, %rd3733;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2818,%dummy}, %rd3728;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2819}, %rd3728;
	}
	shf.r.wrap.b32 	%r2820, %r2819, %r2818, 14;
	shf.r.wrap.b32 	%r2821, %r2818, %r2819, 14;
	mov.b64 	%rd3740, {%r2821, %r2820};
	shf.r.wrap.b32 	%r2822, %r2819, %r2818, 18;
	shf.r.wrap.b32 	%r2823, %r2818, %r2819, 18;
	mov.b64 	%rd3741, {%r2823, %r2822};
	xor.b64  	%rd3742, %rd3741, %rd3740;
	shf.l.wrap.b32 	%r2824, %r2818, %r2819, 23;
	shf.l.wrap.b32 	%r2825, %r2819, %r2818, 23;
	mov.b64 	%rd3743, {%r2825, %r2824};
	xor.b64  	%rd3744, %rd3742, %rd3743;
	xor.b64  	%rd3745, %rd3704, %rd3680;
	and.b64  	%rd3746, %rd3728, %rd3745;
	xor.b64  	%rd3747, %rd3746, %rd3680;
	add.s64 	%rd3748, %rd3511, %rd3448;
	add.s64 	%rd3749, %rd3748, %rd5902;
	add.s64 	%rd3750, %rd3749, %rd3747;
	add.s64 	%rd3751, %rd3750, %rd3744;
	add.s64 	%rd3752, %rd3751, %rd3459;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2826,%dummy}, %rd3739;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2827}, %rd3739;
	}
	shf.r.wrap.b32 	%r2828, %r2827, %r2826, 28;
	shf.r.wrap.b32 	%r2829, %r2826, %r2827, 28;
	mov.b64 	%rd3753, {%r2829, %r2828};
	shf.l.wrap.b32 	%r2830, %r2826, %r2827, 30;
	shf.l.wrap.b32 	%r2831, %r2827, %r2826, 30;
	mov.b64 	%rd3754, {%r2831, %r2830};
	xor.b64  	%rd3755, %rd3754, %rd3753;
	shf.l.wrap.b32 	%r2832, %r2826, %r2827, 25;
	shf.l.wrap.b32 	%r2833, %r2827, %r2826, 25;
	mov.b64 	%rd3756, {%r2833, %r2832};
	xor.b64  	%rd3757, %rd3755, %rd3756;
	xor.b64  	%rd3758, %rd3739, %rd3691;
	xor.b64  	%rd3759, %rd3739, %rd3715;
	and.b64  	%rd3760, %rd3759, %rd3758;
	xor.b64  	%rd3761, %rd3760, %rd3739;
	add.s64 	%rd3762, %rd3751, %rd3761;
	add.s64 	%rd3763, %rd3762, %rd3757;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2834,%dummy}, %rd3752;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2835}, %rd3752;
	}
	shf.r.wrap.b32 	%r2836, %r2835, %r2834, 14;
	shf.r.wrap.b32 	%r2837, %r2834, %r2835, 14;
	mov.b64 	%rd3764, {%r2837, %r2836};
	shf.r.wrap.b32 	%r2838, %r2835, %r2834, 18;
	shf.r.wrap.b32 	%r2839, %r2834, %r2835, 18;
	mov.b64 	%rd3765, {%r2839, %r2838};
	xor.b64  	%rd3766, %rd3765, %rd3764;
	shf.l.wrap.b32 	%r2840, %r2834, %r2835, 23;
	shf.l.wrap.b32 	%r2841, %r2835, %r2834, 23;
	mov.b64 	%rd3767, {%r2841, %r2840};
	xor.b64  	%rd3768, %rd3766, %rd3767;
	xor.b64  	%rd3769, %rd3728, %rd3704;
	and.b64  	%rd3770, %rd3752, %rd3769;
	xor.b64  	%rd3771, %rd3770, %rd3704;
	add.s64 	%rd3772, %rd3680, %rd3524;
	add.s64 	%rd3773, %rd3772, %rd5901;
	add.s64 	%rd3774, %rd3773, %rd3771;
	add.s64 	%rd3775, %rd3774, %rd3768;
	add.s64 	%rd3776, %rd3775, %rd3691;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2842,%dummy}, %rd3763;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2843}, %rd3763;
	}
	shf.r.wrap.b32 	%r2844, %r2843, %r2842, 28;
	shf.r.wrap.b32 	%r2845, %r2842, %r2843, 28;
	mov.b64 	%rd3777, {%r2845, %r2844};
	shf.l.wrap.b32 	%r2846, %r2842, %r2843, 30;
	shf.l.wrap.b32 	%r2847, %r2843, %r2842, 30;
	mov.b64 	%rd3778, {%r2847, %r2846};
	xor.b64  	%rd3779, %rd3778, %rd3777;
	shf.l.wrap.b32 	%r2848, %r2842, %r2843, 25;
	shf.l.wrap.b32 	%r2849, %r2843, %r2842, 25;
	mov.b64 	%rd3780, {%r2849, %r2848};
	xor.b64  	%rd3781, %rd3779, %rd3780;
	xor.b64  	%rd3782, %rd3763, %rd3715;
	xor.b64  	%rd3783, %rd3763, %rd3739;
	and.b64  	%rd3784, %rd3783, %rd3782;
	xor.b64  	%rd3785, %rd3784, %rd3763;
	add.s64 	%rd3786, %rd3775, %rd3785;
	add.s64 	%rd3787, %rd3786, %rd3781;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2850,%dummy}, %rd3776;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2851}, %rd3776;
	}
	shf.r.wrap.b32 	%r2852, %r2851, %r2850, 14;
	shf.r.wrap.b32 	%r2853, %r2850, %r2851, 14;
	mov.b64 	%rd3788, {%r2853, %r2852};
	shf.r.wrap.b32 	%r2854, %r2851, %r2850, 18;
	shf.r.wrap.b32 	%r2855, %r2850, %r2851, 18;
	mov.b64 	%rd3789, {%r2855, %r2854};
	xor.b64  	%rd3790, %rd3789, %rd3788;
	shf.l.wrap.b32 	%r2856, %r2850, %r2851, 23;
	shf.l.wrap.b32 	%r2857, %r2851, %r2850, 23;
	mov.b64 	%rd3791, {%r2857, %r2856};
	xor.b64  	%rd3792, %rd3790, %rd3791;
	xor.b64  	%rd3793, %rd3752, %rd3728;
	and.b64  	%rd3794, %rd3776, %rd3793;
	xor.b64  	%rd3795, %rd3794, %rd3728;
	add.s64 	%rd3796, %rd3704, %rd3537;
	add.s64 	%rd3797, %rd3796, %rd5900;
	add.s64 	%rd3798, %rd3797, %rd3795;
	add.s64 	%rd3799, %rd3798, %rd3792;
	add.s64 	%rd3800, %rd3799, %rd3715;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2858,%dummy}, %rd3787;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2859}, %rd3787;
	}
	shf.r.wrap.b32 	%r2860, %r2859, %r2858, 28;
	shf.r.wrap.b32 	%r2861, %r2858, %r2859, 28;
	mov.b64 	%rd3801, {%r2861, %r2860};
	shf.l.wrap.b32 	%r2862, %r2858, %r2859, 30;
	shf.l.wrap.b32 	%r2863, %r2859, %r2858, 30;
	mov.b64 	%rd3802, {%r2863, %r2862};
	xor.b64  	%rd3803, %rd3802, %rd3801;
	shf.l.wrap.b32 	%r2864, %r2858, %r2859, 25;
	shf.l.wrap.b32 	%r2865, %r2859, %r2858, 25;
	mov.b64 	%rd3804, {%r2865, %r2864};
	xor.b64  	%rd3805, %rd3803, %rd3804;
	xor.b64  	%rd3806, %rd3787, %rd3739;
	xor.b64  	%rd3807, %rd3787, %rd3763;
	and.b64  	%rd3808, %rd3807, %rd3806;
	xor.b64  	%rd3809, %rd3808, %rd3787;
	add.s64 	%rd3810, %rd3799, %rd3809;
	add.s64 	%rd3811, %rd3810, %rd3805;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2866,%dummy}, %rd3800;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2867}, %rd3800;
	}
	shf.r.wrap.b32 	%r2868, %r2867, %r2866, 14;
	shf.r.wrap.b32 	%r2869, %r2866, %r2867, 14;
	mov.b64 	%rd3812, {%r2869, %r2868};
	shf.r.wrap.b32 	%r2870, %r2867, %r2866, 18;
	shf.r.wrap.b32 	%r2871, %r2866, %r2867, 18;
	mov.b64 	%rd3813, {%r2871, %r2870};
	xor.b64  	%rd3814, %rd3813, %rd3812;
	shf.l.wrap.b32 	%r2872, %r2866, %r2867, 23;
	shf.l.wrap.b32 	%r2873, %r2867, %r2866, 23;
	mov.b64 	%rd3815, {%r2873, %r2872};
	xor.b64  	%rd3816, %rd3814, %rd3815;
	xor.b64  	%rd3817, %rd3776, %rd3752;
	and.b64  	%rd3818, %rd3800, %rd3817;
	xor.b64  	%rd3819, %rd3818, %rd3752;
	add.s64 	%rd3820, %rd3728, %rd3550;
	add.s64 	%rd3821, %rd3820, %rd5899;
	add.s64 	%rd3822, %rd3821, %rd3819;
	add.s64 	%rd3823, %rd3822, %rd3816;
	add.s64 	%rd3824, %rd3823, %rd3739;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2874,%dummy}, %rd3811;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2875}, %rd3811;
	}
	shf.r.wrap.b32 	%r2876, %r2875, %r2874, 28;
	shf.r.wrap.b32 	%r2877, %r2874, %r2875, 28;
	mov.b64 	%rd3825, {%r2877, %r2876};
	shf.l.wrap.b32 	%r2878, %r2874, %r2875, 30;
	shf.l.wrap.b32 	%r2879, %r2875, %r2874, 30;
	mov.b64 	%rd3826, {%r2879, %r2878};
	xor.b64  	%rd3827, %rd3826, %rd3825;
	shf.l.wrap.b32 	%r2880, %r2874, %r2875, 25;
	shf.l.wrap.b32 	%r2881, %r2875, %r2874, 25;
	mov.b64 	%rd3828, {%r2881, %r2880};
	xor.b64  	%rd3829, %rd3827, %rd3828;
	xor.b64  	%rd3830, %rd3811, %rd3763;
	xor.b64  	%rd3831, %rd3811, %rd3787;
	and.b64  	%rd3832, %rd3831, %rd3830;
	xor.b64  	%rd3833, %rd3832, %rd3811;
	add.s64 	%rd3834, %rd3823, %rd3833;
	add.s64 	%rd3835, %rd3834, %rd3829;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2882,%dummy}, %rd3824;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2883}, %rd3824;
	}
	shf.r.wrap.b32 	%r2884, %r2883, %r2882, 14;
	shf.r.wrap.b32 	%r2885, %r2882, %r2883, 14;
	mov.b64 	%rd3836, {%r2885, %r2884};
	shf.r.wrap.b32 	%r2886, %r2883, %r2882, 18;
	shf.r.wrap.b32 	%r2887, %r2882, %r2883, 18;
	mov.b64 	%rd3837, {%r2887, %r2886};
	xor.b64  	%rd3838, %rd3837, %rd3836;
	shf.l.wrap.b32 	%r2888, %r2882, %r2883, 23;
	shf.l.wrap.b32 	%r2889, %r2883, %r2882, 23;
	mov.b64 	%rd3839, {%r2889, %r2888};
	xor.b64  	%rd3840, %rd3838, %rd3839;
	xor.b64  	%rd3841, %rd3800, %rd3776;
	and.b64  	%rd3842, %rd3824, %rd3841;
	xor.b64  	%rd3843, %rd3842, %rd3776;
	add.s64 	%rd3844, %rd3752, %rd3563;
	add.s64 	%rd3845, %rd3844, %rd5898;
	add.s64 	%rd3846, %rd3845, %rd3843;
	add.s64 	%rd3847, %rd3846, %rd3840;
	add.s64 	%rd3848, %rd3847, %rd3763;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2890,%dummy}, %rd3835;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2891}, %rd3835;
	}
	shf.r.wrap.b32 	%r2892, %r2891, %r2890, 28;
	shf.r.wrap.b32 	%r2893, %r2890, %r2891, 28;
	mov.b64 	%rd3849, {%r2893, %r2892};
	shf.l.wrap.b32 	%r2894, %r2890, %r2891, 30;
	shf.l.wrap.b32 	%r2895, %r2891, %r2890, 30;
	mov.b64 	%rd3850, {%r2895, %r2894};
	xor.b64  	%rd3851, %rd3850, %rd3849;
	shf.l.wrap.b32 	%r2896, %r2890, %r2891, 25;
	shf.l.wrap.b32 	%r2897, %r2891, %r2890, 25;
	mov.b64 	%rd3852, {%r2897, %r2896};
	xor.b64  	%rd3853, %rd3851, %rd3852;
	xor.b64  	%rd3854, %rd3835, %rd3787;
	xor.b64  	%rd3855, %rd3835, %rd3811;
	and.b64  	%rd3856, %rd3855, %rd3854;
	xor.b64  	%rd3857, %rd3856, %rd3835;
	add.s64 	%rd3858, %rd3847, %rd3857;
	add.s64 	%rd3859, %rd3858, %rd3853;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2898,%dummy}, %rd3848;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2899}, %rd3848;
	}
	shf.r.wrap.b32 	%r2900, %r2899, %r2898, 14;
	shf.r.wrap.b32 	%r2901, %r2898, %r2899, 14;
	mov.b64 	%rd3860, {%r2901, %r2900};
	shf.r.wrap.b32 	%r2902, %r2899, %r2898, 18;
	shf.r.wrap.b32 	%r2903, %r2898, %r2899, 18;
	mov.b64 	%rd3861, {%r2903, %r2902};
	xor.b64  	%rd3862, %rd3861, %rd3860;
	shf.l.wrap.b32 	%r2904, %r2898, %r2899, 23;
	shf.l.wrap.b32 	%r2905, %r2899, %r2898, 23;
	mov.b64 	%rd3863, {%r2905, %r2904};
	xor.b64  	%rd3864, %rd3862, %rd3863;
	xor.b64  	%rd3865, %rd3824, %rd3800;
	and.b64  	%rd3866, %rd3848, %rd3865;
	xor.b64  	%rd3867, %rd3866, %rd3800;
	add.s64 	%rd3868, %rd3776, %rd3576;
	add.s64 	%rd3869, %rd3868, %rd5897;
	add.s64 	%rd3870, %rd3869, %rd3867;
	add.s64 	%rd3871, %rd3870, %rd3864;
	add.s64 	%rd3872, %rd3871, %rd3787;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2906,%dummy}, %rd3859;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2907}, %rd3859;
	}
	shf.r.wrap.b32 	%r2908, %r2907, %r2906, 28;
	shf.r.wrap.b32 	%r2909, %r2906, %r2907, 28;
	mov.b64 	%rd3873, {%r2909, %r2908};
	shf.l.wrap.b32 	%r2910, %r2906, %r2907, 30;
	shf.l.wrap.b32 	%r2911, %r2907, %r2906, 30;
	mov.b64 	%rd3874, {%r2911, %r2910};
	xor.b64  	%rd3875, %rd3874, %rd3873;
	shf.l.wrap.b32 	%r2912, %r2906, %r2907, 25;
	shf.l.wrap.b32 	%r2913, %r2907, %r2906, 25;
	mov.b64 	%rd3876, {%r2913, %r2912};
	xor.b64  	%rd3877, %rd3875, %rd3876;
	xor.b64  	%rd3878, %rd3859, %rd3811;
	xor.b64  	%rd3879, %rd3859, %rd3835;
	and.b64  	%rd3880, %rd3879, %rd3878;
	xor.b64  	%rd3881, %rd3880, %rd3859;
	add.s64 	%rd3882, %rd3871, %rd3881;
	add.s64 	%rd3883, %rd3882, %rd3877;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2914,%dummy}, %rd3872;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2915}, %rd3872;
	}
	shf.r.wrap.b32 	%r2916, %r2915, %r2914, 14;
	shf.r.wrap.b32 	%r2917, %r2914, %r2915, 14;
	mov.b64 	%rd3884, {%r2917, %r2916};
	shf.r.wrap.b32 	%r2918, %r2915, %r2914, 18;
	shf.r.wrap.b32 	%r2919, %r2914, %r2915, 18;
	mov.b64 	%rd3885, {%r2919, %r2918};
	xor.b64  	%rd3886, %rd3885, %rd3884;
	shf.l.wrap.b32 	%r2920, %r2914, %r2915, 23;
	shf.l.wrap.b32 	%r2921, %r2915, %r2914, 23;
	mov.b64 	%rd3887, {%r2921, %r2920};
	xor.b64  	%rd3888, %rd3886, %rd3887;
	xor.b64  	%rd3889, %rd3848, %rd3824;
	and.b64  	%rd3890, %rd3872, %rd3889;
	xor.b64  	%rd3891, %rd3890, %rd3824;
	add.s64 	%rd3892, %rd3800, %rd3589;
	add.s64 	%rd3893, %rd3892, %rd5896;
	add.s64 	%rd3894, %rd3893, %rd3891;
	add.s64 	%rd3895, %rd3894, %rd3888;
	add.s64 	%rd3896, %rd3895, %rd3811;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2922,%dummy}, %rd3883;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2923}, %rd3883;
	}
	shf.r.wrap.b32 	%r2924, %r2923, %r2922, 28;
	shf.r.wrap.b32 	%r2925, %r2922, %r2923, 28;
	mov.b64 	%rd3897, {%r2925, %r2924};
	shf.l.wrap.b32 	%r2926, %r2922, %r2923, 30;
	shf.l.wrap.b32 	%r2927, %r2923, %r2922, 30;
	mov.b64 	%rd3898, {%r2927, %r2926};
	xor.b64  	%rd3899, %rd3898, %rd3897;
	shf.l.wrap.b32 	%r2928, %r2922, %r2923, 25;
	shf.l.wrap.b32 	%r2929, %r2923, %r2922, 25;
	mov.b64 	%rd3900, {%r2929, %r2928};
	xor.b64  	%rd3901, %rd3899, %rd3900;
	xor.b64  	%rd3902, %rd3883, %rd3835;
	xor.b64  	%rd3903, %rd3883, %rd3859;
	and.b64  	%rd3904, %rd3903, %rd3902;
	xor.b64  	%rd3905, %rd3904, %rd3883;
	add.s64 	%rd3906, %rd3895, %rd3905;
	add.s64 	%rd3907, %rd3906, %rd3901;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2930,%dummy}, %rd3896;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2931}, %rd3896;
	}
	shf.r.wrap.b32 	%r2932, %r2931, %r2930, 14;
	shf.r.wrap.b32 	%r2933, %r2930, %r2931, 14;
	mov.b64 	%rd3908, {%r2933, %r2932};
	shf.r.wrap.b32 	%r2934, %r2931, %r2930, 18;
	shf.r.wrap.b32 	%r2935, %r2930, %r2931, 18;
	mov.b64 	%rd3909, {%r2935, %r2934};
	xor.b64  	%rd3910, %rd3909, %rd3908;
	shf.l.wrap.b32 	%r2936, %r2930, %r2931, 23;
	shf.l.wrap.b32 	%r2937, %r2931, %r2930, 23;
	mov.b64 	%rd3911, {%r2937, %r2936};
	xor.b64  	%rd3912, %rd3910, %rd3911;
	xor.b64  	%rd3913, %rd3872, %rd3848;
	and.b64  	%rd3914, %rd3896, %rd3913;
	xor.b64  	%rd3915, %rd3914, %rd3848;
	add.s64 	%rd3916, %rd3824, %rd3602;
	add.s64 	%rd3917, %rd3916, %rd5895;
	add.s64 	%rd3918, %rd3917, %rd3915;
	add.s64 	%rd3919, %rd3918, %rd3912;
	add.s64 	%rd3920, %rd3919, %rd3835;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2938,%dummy}, %rd3907;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2939}, %rd3907;
	}
	shf.r.wrap.b32 	%r2940, %r2939, %r2938, 28;
	shf.r.wrap.b32 	%r2941, %r2938, %r2939, 28;
	mov.b64 	%rd3921, {%r2941, %r2940};
	shf.l.wrap.b32 	%r2942, %r2938, %r2939, 30;
	shf.l.wrap.b32 	%r2943, %r2939, %r2938, 30;
	mov.b64 	%rd3922, {%r2943, %r2942};
	xor.b64  	%rd3923, %rd3922, %rd3921;
	shf.l.wrap.b32 	%r2944, %r2938, %r2939, 25;
	shf.l.wrap.b32 	%r2945, %r2939, %r2938, 25;
	mov.b64 	%rd3924, {%r2945, %r2944};
	xor.b64  	%rd3925, %rd3923, %rd3924;
	xor.b64  	%rd3926, %rd3907, %rd3859;
	xor.b64  	%rd3927, %rd3907, %rd3883;
	and.b64  	%rd3928, %rd3927, %rd3926;
	xor.b64  	%rd3929, %rd3928, %rd3907;
	add.s64 	%rd3930, %rd3919, %rd3929;
	add.s64 	%rd3931, %rd3930, %rd3925;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2946,%dummy}, %rd3920;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2947}, %rd3920;
	}
	shf.r.wrap.b32 	%r2948, %r2947, %r2946, 14;
	shf.r.wrap.b32 	%r2949, %r2946, %r2947, 14;
	mov.b64 	%rd3932, {%r2949, %r2948};
	shf.r.wrap.b32 	%r2950, %r2947, %r2946, 18;
	shf.r.wrap.b32 	%r2951, %r2946, %r2947, 18;
	mov.b64 	%rd3933, {%r2951, %r2950};
	xor.b64  	%rd3934, %rd3933, %rd3932;
	shf.l.wrap.b32 	%r2952, %r2946, %r2947, 23;
	shf.l.wrap.b32 	%r2953, %r2947, %r2946, 23;
	mov.b64 	%rd3935, {%r2953, %r2952};
	xor.b64  	%rd3936, %rd3934, %rd3935;
	xor.b64  	%rd3937, %rd3896, %rd3872;
	and.b64  	%rd3938, %rd3920, %rd3937;
	xor.b64  	%rd3939, %rd3938, %rd3872;
	add.s64 	%rd3940, %rd3848, %rd3615;
	add.s64 	%rd3941, %rd3940, %rd5894;
	add.s64 	%rd3942, %rd3941, %rd3939;
	add.s64 	%rd3943, %rd3942, %rd3936;
	add.s64 	%rd3944, %rd3943, %rd3859;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2954,%dummy}, %rd3931;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2955}, %rd3931;
	}
	shf.r.wrap.b32 	%r2956, %r2955, %r2954, 28;
	shf.r.wrap.b32 	%r2957, %r2954, %r2955, 28;
	mov.b64 	%rd3945, {%r2957, %r2956};
	shf.l.wrap.b32 	%r2958, %r2954, %r2955, 30;
	shf.l.wrap.b32 	%r2959, %r2955, %r2954, 30;
	mov.b64 	%rd3946, {%r2959, %r2958};
	xor.b64  	%rd3947, %rd3946, %rd3945;
	shf.l.wrap.b32 	%r2960, %r2954, %r2955, 25;
	shf.l.wrap.b32 	%r2961, %r2955, %r2954, 25;
	mov.b64 	%rd3948, {%r2961, %r2960};
	xor.b64  	%rd3949, %rd3947, %rd3948;
	xor.b64  	%rd3950, %rd3931, %rd3883;
	xor.b64  	%rd3951, %rd3931, %rd3907;
	and.b64  	%rd3952, %rd3951, %rd3950;
	xor.b64  	%rd3953, %rd3952, %rd3931;
	add.s64 	%rd3954, %rd3943, %rd3953;
	add.s64 	%rd3955, %rd3954, %rd3949;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2962,%dummy}, %rd3944;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2963}, %rd3944;
	}
	shf.r.wrap.b32 	%r2964, %r2963, %r2962, 14;
	shf.r.wrap.b32 	%r2965, %r2962, %r2963, 14;
	mov.b64 	%rd3956, {%r2965, %r2964};
	shf.r.wrap.b32 	%r2966, %r2963, %r2962, 18;
	shf.r.wrap.b32 	%r2967, %r2962, %r2963, 18;
	mov.b64 	%rd3957, {%r2967, %r2966};
	xor.b64  	%rd3958, %rd3957, %rd3956;
	shf.l.wrap.b32 	%r2968, %r2962, %r2963, 23;
	shf.l.wrap.b32 	%r2969, %r2963, %r2962, 23;
	mov.b64 	%rd3959, {%r2969, %r2968};
	xor.b64  	%rd3960, %rd3958, %rd3959;
	xor.b64  	%rd3961, %rd3920, %rd3896;
	and.b64  	%rd3962, %rd3944, %rd3961;
	xor.b64  	%rd3963, %rd3962, %rd3896;
	add.s64 	%rd3964, %rd3872, %rd3628;
	add.s64 	%rd3965, %rd3964, %rd5893;
	add.s64 	%rd3966, %rd3965, %rd3963;
	add.s64 	%rd3967, %rd3966, %rd3960;
	add.s64 	%rd3968, %rd3967, %rd3883;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2970,%dummy}, %rd3955;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2971}, %rd3955;
	}
	shf.r.wrap.b32 	%r2972, %r2971, %r2970, 28;
	shf.r.wrap.b32 	%r2973, %r2970, %r2971, 28;
	mov.b64 	%rd3969, {%r2973, %r2972};
	shf.l.wrap.b32 	%r2974, %r2970, %r2971, 30;
	shf.l.wrap.b32 	%r2975, %r2971, %r2970, 30;
	mov.b64 	%rd3970, {%r2975, %r2974};
	xor.b64  	%rd3971, %rd3970, %rd3969;
	shf.l.wrap.b32 	%r2976, %r2970, %r2971, 25;
	shf.l.wrap.b32 	%r2977, %r2971, %r2970, 25;
	mov.b64 	%rd3972, {%r2977, %r2976};
	xor.b64  	%rd3973, %rd3971, %rd3972;
	xor.b64  	%rd3974, %rd3955, %rd3907;
	xor.b64  	%rd3975, %rd3955, %rd3931;
	and.b64  	%rd3976, %rd3975, %rd3974;
	xor.b64  	%rd3977, %rd3976, %rd3955;
	add.s64 	%rd3978, %rd3967, %rd3977;
	add.s64 	%rd3979, %rd3978, %rd3973;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2978,%dummy}, %rd3968;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2979}, %rd3968;
	}
	shf.r.wrap.b32 	%r2980, %r2979, %r2978, 14;
	shf.r.wrap.b32 	%r2981, %r2978, %r2979, 14;
	mov.b64 	%rd3980, {%r2981, %r2980};
	shf.r.wrap.b32 	%r2982, %r2979, %r2978, 18;
	shf.r.wrap.b32 	%r2983, %r2978, %r2979, 18;
	mov.b64 	%rd3981, {%r2983, %r2982};
	xor.b64  	%rd3982, %rd3981, %rd3980;
	shf.l.wrap.b32 	%r2984, %r2978, %r2979, 23;
	shf.l.wrap.b32 	%r2985, %r2979, %r2978, 23;
	mov.b64 	%rd3983, {%r2985, %r2984};
	xor.b64  	%rd3984, %rd3982, %rd3983;
	xor.b64  	%rd3985, %rd3944, %rd3920;
	and.b64  	%rd3986, %rd3968, %rd3985;
	xor.b64  	%rd3987, %rd3986, %rd3920;
	add.s64 	%rd3988, %rd3896, %rd3641;
	add.s64 	%rd3989, %rd3988, %rd5892;
	add.s64 	%rd3990, %rd3989, %rd3987;
	add.s64 	%rd3991, %rd3990, %rd3984;
	add.s64 	%rd3992, %rd3991, %rd3907;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2986,%dummy}, %rd3979;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2987}, %rd3979;
	}
	shf.r.wrap.b32 	%r2988, %r2987, %r2986, 28;
	shf.r.wrap.b32 	%r2989, %r2986, %r2987, 28;
	mov.b64 	%rd3993, {%r2989, %r2988};
	shf.l.wrap.b32 	%r2990, %r2986, %r2987, 30;
	shf.l.wrap.b32 	%r2991, %r2987, %r2986, 30;
	mov.b64 	%rd3994, {%r2991, %r2990};
	xor.b64  	%rd3995, %rd3994, %rd3993;
	shf.l.wrap.b32 	%r2992, %r2986, %r2987, 25;
	shf.l.wrap.b32 	%r2993, %r2987, %r2986, 25;
	mov.b64 	%rd3996, {%r2993, %r2992};
	xor.b64  	%rd3997, %rd3995, %rd3996;
	xor.b64  	%rd3998, %rd3979, %rd3931;
	xor.b64  	%rd3999, %rd3979, %rd3955;
	and.b64  	%rd4000, %rd3999, %rd3998;
	xor.b64  	%rd4001, %rd4000, %rd3979;
	add.s64 	%rd4002, %rd3991, %rd4001;
	add.s64 	%rd4003, %rd4002, %rd3997;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2994,%dummy}, %rd3992;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2995}, %rd3992;
	}
	shf.r.wrap.b32 	%r2996, %r2995, %r2994, 14;
	shf.r.wrap.b32 	%r2997, %r2994, %r2995, 14;
	mov.b64 	%rd4004, {%r2997, %r2996};
	shf.r.wrap.b32 	%r2998, %r2995, %r2994, 18;
	shf.r.wrap.b32 	%r2999, %r2994, %r2995, 18;
	mov.b64 	%rd4005, {%r2999, %r2998};
	xor.b64  	%rd4006, %rd4005, %rd4004;
	shf.l.wrap.b32 	%r3000, %r2994, %r2995, 23;
	shf.l.wrap.b32 	%r3001, %r2995, %r2994, 23;
	mov.b64 	%rd4007, {%r3001, %r3000};
	xor.b64  	%rd4008, %rd4006, %rd4007;
	xor.b64  	%rd4009, %rd3968, %rd3944;
	and.b64  	%rd4010, %rd3992, %rd4009;
	xor.b64  	%rd4011, %rd4010, %rd3944;
	add.s64 	%rd4012, %rd3920, %rd3654;
	add.s64 	%rd4013, %rd4012, %rd5891;
	add.s64 	%rd4014, %rd4013, %rd4011;
	add.s64 	%rd4015, %rd4014, %rd4008;
	add.s64 	%rd4016, %rd4015, %rd3931;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3002,%dummy}, %rd4003;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3003}, %rd4003;
	}
	shf.r.wrap.b32 	%r3004, %r3003, %r3002, 28;
	shf.r.wrap.b32 	%r3005, %r3002, %r3003, 28;
	mov.b64 	%rd4017, {%r3005, %r3004};
	shf.l.wrap.b32 	%r3006, %r3002, %r3003, 30;
	shf.l.wrap.b32 	%r3007, %r3003, %r3002, 30;
	mov.b64 	%rd4018, {%r3007, %r3006};
	xor.b64  	%rd4019, %rd4018, %rd4017;
	shf.l.wrap.b32 	%r3008, %r3002, %r3003, 25;
	shf.l.wrap.b32 	%r3009, %r3003, %r3002, 25;
	mov.b64 	%rd4020, {%r3009, %r3008};
	xor.b64  	%rd4021, %rd4019, %rd4020;
	xor.b64  	%rd4022, %rd4003, %rd3955;
	xor.b64  	%rd4023, %rd4003, %rd3979;
	and.b64  	%rd4024, %rd4023, %rd4022;
	xor.b64  	%rd4025, %rd4024, %rd4003;
	add.s64 	%rd4026, %rd4015, %rd4025;
	add.s64 	%rd4027, %rd4026, %rd4021;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3010,%dummy}, %rd4016;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3011}, %rd4016;
	}
	shf.r.wrap.b32 	%r3012, %r3011, %r3010, 14;
	shf.r.wrap.b32 	%r3013, %r3010, %r3011, 14;
	mov.b64 	%rd4028, {%r3013, %r3012};
	shf.r.wrap.b32 	%r3014, %r3011, %r3010, 18;
	shf.r.wrap.b32 	%r3015, %r3010, %r3011, 18;
	mov.b64 	%rd4029, {%r3015, %r3014};
	xor.b64  	%rd4030, %rd4029, %rd4028;
	shf.l.wrap.b32 	%r3016, %r3010, %r3011, 23;
	shf.l.wrap.b32 	%r3017, %r3011, %r3010, 23;
	mov.b64 	%rd4031, {%r3017, %r3016};
	xor.b64  	%rd4032, %rd4030, %rd4031;
	xor.b64  	%rd4033, %rd3992, %rd3968;
	and.b64  	%rd4034, %rd4016, %rd4033;
	xor.b64  	%rd4035, %rd4034, %rd3968;
	add.s64 	%rd4036, %rd3944, %rd3667;
	add.s64 	%rd4037, %rd4036, %rd5890;
	add.s64 	%rd4038, %rd4037, %rd4035;
	add.s64 	%rd4039, %rd4038, %rd4032;
	add.s64 	%rd4040, %rd4039, %rd3955;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3018,%dummy}, %rd4027;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3019}, %rd4027;
	}
	shf.r.wrap.b32 	%r3020, %r3019, %r3018, 28;
	shf.r.wrap.b32 	%r3021, %r3018, %r3019, 28;
	mov.b64 	%rd4041, {%r3021, %r3020};
	shf.l.wrap.b32 	%r3022, %r3018, %r3019, 30;
	shf.l.wrap.b32 	%r3023, %r3019, %r3018, 30;
	mov.b64 	%rd4042, {%r3023, %r3022};
	xor.b64  	%rd4043, %rd4042, %rd4041;
	shf.l.wrap.b32 	%r3024, %r3018, %r3019, 25;
	shf.l.wrap.b32 	%r3025, %r3019, %r3018, 25;
	mov.b64 	%rd4044, {%r3025, %r3024};
	xor.b64  	%rd4045, %rd4043, %rd4044;
	xor.b64  	%rd4046, %rd4027, %rd3979;
	xor.b64  	%rd4047, %rd4027, %rd4003;
	and.b64  	%rd4048, %rd4047, %rd4046;
	xor.b64  	%rd4049, %rd4048, %rd4027;
	add.s64 	%rd4050, %rd4039, %rd4049;
	add.s64 	%rd4051, %rd4050, %rd4045;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3026,%dummy}, %rd3654;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3027}, %rd3654;
	}
	shf.r.wrap.b32 	%r3028, %r3027, %r3026, 19;
	shf.r.wrap.b32 	%r3029, %r3026, %r3027, 19;
	mov.b64 	%rd4052, {%r3029, %r3028};
	shf.l.wrap.b32 	%r3030, %r3026, %r3027, 3;
	shf.l.wrap.b32 	%r3031, %r3027, %r3026, 3;
	mov.b64 	%rd4053, {%r3031, %r3030};
	shr.u64 	%rd4054, %rd3654, 6;
	xor.b64  	%rd4055, %rd4052, %rd4054;
	xor.b64  	%rd4056, %rd4055, %rd4053;
	shf.r.wrap.b32 	%r3032, %r2621, %r2620, 1;
	shf.r.wrap.b32 	%r3033, %r2620, %r2621, 1;
	mov.b64 	%rd4057, {%r3033, %r3032};
	shf.r.wrap.b32 	%r3034, %r2621, %r2620, 8;
	shf.r.wrap.b32 	%r3035, %r2620, %r2621, 8;
	mov.b64 	%rd4058, {%r3035, %r3034};
	shr.u64 	%rd4059, %rd3485, 7;
	xor.b64  	%rd4060, %rd4057, %rd4059;
	xor.b64  	%rd4061, %rd4060, %rd4058;
	add.s64 	%rd4062, %rd3589, %rd3472;
	add.s64 	%rd4063, %rd4062, %rd4056;
	add.s64 	%rd4064, %rd4063, %rd4061;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3036,%dummy}, %rd3667;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3037}, %rd3667;
	}
	shf.r.wrap.b32 	%r3038, %r3037, %r3036, 19;
	shf.r.wrap.b32 	%r3039, %r3036, %r3037, 19;
	mov.b64 	%rd4065, {%r3039, %r3038};
	shf.l.wrap.b32 	%r3040, %r3036, %r3037, 3;
	shf.l.wrap.b32 	%r3041, %r3037, %r3036, 3;
	mov.b64 	%rd4066, {%r3041, %r3040};
	shr.u64 	%rd4067, %rd3667, 6;
	xor.b64  	%rd4068, %rd4065, %rd4067;
	xor.b64  	%rd4069, %rd4068, %rd4066;
	shf.r.wrap.b32 	%r3042, %r2633, %r2632, 1;
	shf.r.wrap.b32 	%r3043, %r2632, %r2633, 1;
	mov.b64 	%rd4070, {%r3043, %r3042};
	shf.r.wrap.b32 	%r3044, %r2633, %r2632, 8;
	shf.r.wrap.b32 	%r3045, %r2632, %r2633, 8;
	mov.b64 	%rd4071, {%r3045, %r3044};
	shr.u64 	%rd4072, %rd3498, 7;
	xor.b64  	%rd4073, %rd4070, %rd4072;
	xor.b64  	%rd4074, %rd4073, %rd4071;
	add.s64 	%rd4075, %rd3602, %rd3485;
	add.s64 	%rd4076, %rd4075, %rd4069;
	add.s64 	%rd4077, %rd4076, %rd4074;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3046,%dummy}, %rd4064;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3047}, %rd4064;
	}
	shf.r.wrap.b32 	%r3048, %r3047, %r3046, 19;
	shf.r.wrap.b32 	%r3049, %r3046, %r3047, 19;
	mov.b64 	%rd4078, {%r3049, %r3048};
	shf.l.wrap.b32 	%r3050, %r3046, %r3047, 3;
	shf.l.wrap.b32 	%r3051, %r3047, %r3046, 3;
	mov.b64 	%rd4079, {%r3051, %r3050};
	shr.u64 	%rd4080, %rd4064, 6;
	xor.b64  	%rd4081, %rd4078, %rd4080;
	xor.b64  	%rd4082, %rd4081, %rd4079;
	shf.r.wrap.b32 	%r3052, %r2645, %r2644, 1;
	shf.r.wrap.b32 	%r3053, %r2644, %r2645, 1;
	mov.b64 	%rd4083, {%r3053, %r3052};
	shf.r.wrap.b32 	%r3054, %r2645, %r2644, 8;
	shf.r.wrap.b32 	%r3055, %r2644, %r2645, 8;
	mov.b64 	%rd4084, {%r3055, %r3054};
	shr.u64 	%rd4085, %rd3511, 7;
	xor.b64  	%rd4086, %rd4083, %rd4085;
	xor.b64  	%rd4087, %rd4086, %rd4084;
	add.s64 	%rd4088, %rd3615, %rd3498;
	add.s64 	%rd4089, %rd4088, %rd4082;
	add.s64 	%rd4090, %rd4089, %rd4087;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3056,%dummy}, %rd4077;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3057}, %rd4077;
	}
	shf.r.wrap.b32 	%r3058, %r3057, %r3056, 19;
	shf.r.wrap.b32 	%r3059, %r3056, %r3057, 19;
	mov.b64 	%rd4091, {%r3059, %r3058};
	shf.l.wrap.b32 	%r3060, %r3056, %r3057, 3;
	shf.l.wrap.b32 	%r3061, %r3057, %r3056, 3;
	mov.b64 	%rd4092, {%r3061, %r3060};
	shr.u64 	%rd4093, %rd4077, 6;
	xor.b64  	%rd4094, %rd4091, %rd4093;
	xor.b64  	%rd4095, %rd4094, %rd4092;
	shf.r.wrap.b32 	%r3062, %r2657, %r2656, 1;
	shf.r.wrap.b32 	%r3063, %r2656, %r2657, 1;
	mov.b64 	%rd4096, {%r3063, %r3062};
	shf.r.wrap.b32 	%r3064, %r2657, %r2656, 8;
	shf.r.wrap.b32 	%r3065, %r2656, %r2657, 8;
	mov.b64 	%rd4097, {%r3065, %r3064};
	shr.u64 	%rd4098, %rd3524, 7;
	xor.b64  	%rd4099, %rd4096, %rd4098;
	xor.b64  	%rd4100, %rd4099, %rd4097;
	add.s64 	%rd4101, %rd3628, %rd3511;
	add.s64 	%rd4102, %rd4101, %rd4095;
	add.s64 	%rd4103, %rd4102, %rd4100;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3066,%dummy}, %rd4090;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3067}, %rd4090;
	}
	shf.r.wrap.b32 	%r3068, %r3067, %r3066, 19;
	shf.r.wrap.b32 	%r3069, %r3066, %r3067, 19;
	mov.b64 	%rd4104, {%r3069, %r3068};
	shf.l.wrap.b32 	%r3070, %r3066, %r3067, 3;
	shf.l.wrap.b32 	%r3071, %r3067, %r3066, 3;
	mov.b64 	%rd4105, {%r3071, %r3070};
	shr.u64 	%rd4106, %rd4090, 6;
	xor.b64  	%rd4107, %rd4104, %rd4106;
	xor.b64  	%rd4108, %rd4107, %rd4105;
	shf.r.wrap.b32 	%r3072, %r2669, %r2668, 1;
	shf.r.wrap.b32 	%r3073, %r2668, %r2669, 1;
	mov.b64 	%rd4109, {%r3073, %r3072};
	shf.r.wrap.b32 	%r3074, %r2669, %r2668, 8;
	shf.r.wrap.b32 	%r3075, %r2668, %r2669, 8;
	mov.b64 	%rd4110, {%r3075, %r3074};
	shr.u64 	%rd4111, %rd3537, 7;
	xor.b64  	%rd4112, %rd4109, %rd4111;
	xor.b64  	%rd4113, %rd4112, %rd4110;
	add.s64 	%rd4114, %rd3641, %rd3524;
	add.s64 	%rd4115, %rd4114, %rd4108;
	add.s64 	%rd4116, %rd4115, %rd4113;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3076,%dummy}, %rd4103;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3077}, %rd4103;
	}
	shf.r.wrap.b32 	%r3078, %r3077, %r3076, 19;
	shf.r.wrap.b32 	%r3079, %r3076, %r3077, 19;
	mov.b64 	%rd4117, {%r3079, %r3078};
	shf.l.wrap.b32 	%r3080, %r3076, %r3077, 3;
	shf.l.wrap.b32 	%r3081, %r3077, %r3076, 3;
	mov.b64 	%rd4118, {%r3081, %r3080};
	shr.u64 	%rd4119, %rd4103, 6;
	xor.b64  	%rd4120, %rd4117, %rd4119;
	xor.b64  	%rd4121, %rd4120, %rd4118;
	shf.r.wrap.b32 	%r3082, %r2681, %r2680, 1;
	shf.r.wrap.b32 	%r3083, %r2680, %r2681, 1;
	mov.b64 	%rd4122, {%r3083, %r3082};
	shf.r.wrap.b32 	%r3084, %r2681, %r2680, 8;
	shf.r.wrap.b32 	%r3085, %r2680, %r2681, 8;
	mov.b64 	%rd4123, {%r3085, %r3084};
	shr.u64 	%rd4124, %rd3550, 7;
	xor.b64  	%rd4125, %rd4122, %rd4124;
	xor.b64  	%rd4126, %rd4125, %rd4123;
	add.s64 	%rd4127, %rd3654, %rd3537;
	add.s64 	%rd4128, %rd4127, %rd4121;
	add.s64 	%rd4129, %rd4128, %rd4126;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3086,%dummy}, %rd4116;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3087}, %rd4116;
	}
	shf.r.wrap.b32 	%r3088, %r3087, %r3086, 19;
	shf.r.wrap.b32 	%r3089, %r3086, %r3087, 19;
	mov.b64 	%rd4130, {%r3089, %r3088};
	shf.l.wrap.b32 	%r3090, %r3086, %r3087, 3;
	shf.l.wrap.b32 	%r3091, %r3087, %r3086, 3;
	mov.b64 	%rd4131, {%r3091, %r3090};
	shr.u64 	%rd4132, %rd4116, 6;
	xor.b64  	%rd4133, %rd4130, %rd4132;
	xor.b64  	%rd4134, %rd4133, %rd4131;
	shf.r.wrap.b32 	%r3092, %r2693, %r2692, 1;
	shf.r.wrap.b32 	%r3093, %r2692, %r2693, 1;
	mov.b64 	%rd4135, {%r3093, %r3092};
	shf.r.wrap.b32 	%r3094, %r2693, %r2692, 8;
	shf.r.wrap.b32 	%r3095, %r2692, %r2693, 8;
	mov.b64 	%rd4136, {%r3095, %r3094};
	shr.u64 	%rd4137, %rd3563, 7;
	xor.b64  	%rd4138, %rd4135, %rd4137;
	xor.b64  	%rd4139, %rd4138, %rd4136;
	add.s64 	%rd4140, %rd3667, %rd3550;
	add.s64 	%rd4141, %rd4140, %rd4134;
	add.s64 	%rd4142, %rd4141, %rd4139;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3096,%dummy}, %rd4129;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3097}, %rd4129;
	}
	shf.r.wrap.b32 	%r3098, %r3097, %r3096, 19;
	shf.r.wrap.b32 	%r3099, %r3096, %r3097, 19;
	mov.b64 	%rd4143, {%r3099, %r3098};
	shf.l.wrap.b32 	%r3100, %r3096, %r3097, 3;
	shf.l.wrap.b32 	%r3101, %r3097, %r3096, 3;
	mov.b64 	%rd4144, {%r3101, %r3100};
	shr.u64 	%rd4145, %rd4129, 6;
	xor.b64  	%rd4146, %rd4143, %rd4145;
	xor.b64  	%rd4147, %rd4146, %rd4144;
	shf.r.wrap.b32 	%r3102, %r2705, %r2704, 1;
	shf.r.wrap.b32 	%r3103, %r2704, %r2705, 1;
	mov.b64 	%rd4148, {%r3103, %r3102};
	shf.r.wrap.b32 	%r3104, %r2705, %r2704, 8;
	shf.r.wrap.b32 	%r3105, %r2704, %r2705, 8;
	mov.b64 	%rd4149, {%r3105, %r3104};
	shr.u64 	%rd4150, %rd3576, 7;
	xor.b64  	%rd4151, %rd4148, %rd4150;
	xor.b64  	%rd4152, %rd4151, %rd4149;
	add.s64 	%rd4153, %rd4064, %rd3563;
	add.s64 	%rd4154, %rd4153, %rd4147;
	add.s64 	%rd4155, %rd4154, %rd4152;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3106,%dummy}, %rd4142;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3107}, %rd4142;
	}
	shf.r.wrap.b32 	%r3108, %r3107, %r3106, 19;
	shf.r.wrap.b32 	%r3109, %r3106, %r3107, 19;
	mov.b64 	%rd4156, {%r3109, %r3108};
	shf.l.wrap.b32 	%r3110, %r3106, %r3107, 3;
	shf.l.wrap.b32 	%r3111, %r3107, %r3106, 3;
	mov.b64 	%rd4157, {%r3111, %r3110};
	shr.u64 	%rd4158, %rd4142, 6;
	xor.b64  	%rd4159, %rd4156, %rd4158;
	xor.b64  	%rd4160, %rd4159, %rd4157;
	shf.r.wrap.b32 	%r3112, %r2717, %r2716, 1;
	shf.r.wrap.b32 	%r3113, %r2716, %r2717, 1;
	mov.b64 	%rd4161, {%r3113, %r3112};
	shf.r.wrap.b32 	%r3114, %r2717, %r2716, 8;
	shf.r.wrap.b32 	%r3115, %r2716, %r2717, 8;
	mov.b64 	%rd4162, {%r3115, %r3114};
	shr.u64 	%rd4163, %rd3589, 7;
	xor.b64  	%rd4164, %rd4161, %rd4163;
	xor.b64  	%rd4165, %rd4164, %rd4162;
	add.s64 	%rd4166, %rd4077, %rd3576;
	add.s64 	%rd4167, %rd4166, %rd4160;
	add.s64 	%rd4168, %rd4167, %rd4165;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3116,%dummy}, %rd4155;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3117}, %rd4155;
	}
	shf.r.wrap.b32 	%r3118, %r3117, %r3116, 19;
	shf.r.wrap.b32 	%r3119, %r3116, %r3117, 19;
	mov.b64 	%rd4169, {%r3119, %r3118};
	shf.l.wrap.b32 	%r3120, %r3116, %r3117, 3;
	shf.l.wrap.b32 	%r3121, %r3117, %r3116, 3;
	mov.b64 	%rd4170, {%r3121, %r3120};
	shr.u64 	%rd4171, %rd4155, 6;
	xor.b64  	%rd4172, %rd4169, %rd4171;
	xor.b64  	%rd4173, %rd4172, %rd4170;
	shf.r.wrap.b32 	%r3122, %r2729, %r2728, 1;
	shf.r.wrap.b32 	%r3123, %r2728, %r2729, 1;
	mov.b64 	%rd4174, {%r3123, %r3122};
	shf.r.wrap.b32 	%r3124, %r2729, %r2728, 8;
	shf.r.wrap.b32 	%r3125, %r2728, %r2729, 8;
	mov.b64 	%rd4175, {%r3125, %r3124};
	shr.u64 	%rd4176, %rd3602, 7;
	xor.b64  	%rd4177, %rd4174, %rd4176;
	xor.b64  	%rd4178, %rd4177, %rd4175;
	add.s64 	%rd4179, %rd4090, %rd3589;
	add.s64 	%rd4180, %rd4179, %rd4173;
	add.s64 	%rd4181, %rd4180, %rd4178;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3126,%dummy}, %rd4168;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3127}, %rd4168;
	}
	shf.r.wrap.b32 	%r3128, %r3127, %r3126, 19;
	shf.r.wrap.b32 	%r3129, %r3126, %r3127, 19;
	mov.b64 	%rd4182, {%r3129, %r3128};
	shf.l.wrap.b32 	%r3130, %r3126, %r3127, 3;
	shf.l.wrap.b32 	%r3131, %r3127, %r3126, 3;
	mov.b64 	%rd4183, {%r3131, %r3130};
	shr.u64 	%rd4184, %rd4168, 6;
	xor.b64  	%rd4185, %rd4182, %rd4184;
	xor.b64  	%rd4186, %rd4185, %rd4183;
	shf.r.wrap.b32 	%r3132, %r2741, %r2740, 1;
	shf.r.wrap.b32 	%r3133, %r2740, %r2741, 1;
	mov.b64 	%rd4187, {%r3133, %r3132};
	shf.r.wrap.b32 	%r3134, %r2741, %r2740, 8;
	shf.r.wrap.b32 	%r3135, %r2740, %r2741, 8;
	mov.b64 	%rd4188, {%r3135, %r3134};
	shr.u64 	%rd4189, %rd3615, 7;
	xor.b64  	%rd4190, %rd4187, %rd4189;
	xor.b64  	%rd4191, %rd4190, %rd4188;
	add.s64 	%rd4192, %rd4103, %rd3602;
	add.s64 	%rd4193, %rd4192, %rd4186;
	add.s64 	%rd4194, %rd4193, %rd4191;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3136,%dummy}, %rd4181;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3137}, %rd4181;
	}
	shf.r.wrap.b32 	%r3138, %r3137, %r3136, 19;
	shf.r.wrap.b32 	%r3139, %r3136, %r3137, 19;
	mov.b64 	%rd4195, {%r3139, %r3138};
	shf.l.wrap.b32 	%r3140, %r3136, %r3137, 3;
	shf.l.wrap.b32 	%r3141, %r3137, %r3136, 3;
	mov.b64 	%rd4196, {%r3141, %r3140};
	shr.u64 	%rd4197, %rd4181, 6;
	xor.b64  	%rd4198, %rd4195, %rd4197;
	xor.b64  	%rd4199, %rd4198, %rd4196;
	shf.r.wrap.b32 	%r3142, %r2751, %r2750, 1;
	shf.r.wrap.b32 	%r3143, %r2750, %r2751, 1;
	mov.b64 	%rd4200, {%r3143, %r3142};
	shf.r.wrap.b32 	%r3144, %r2751, %r2750, 8;
	shf.r.wrap.b32 	%r3145, %r2750, %r2751, 8;
	mov.b64 	%rd4201, {%r3145, %r3144};
	shr.u64 	%rd4202, %rd3628, 7;
	xor.b64  	%rd4203, %rd4200, %rd4202;
	xor.b64  	%rd4204, %rd4203, %rd4201;
	add.s64 	%rd4205, %rd4116, %rd3615;
	add.s64 	%rd4206, %rd4205, %rd4199;
	add.s64 	%rd4207, %rd4206, %rd4204;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3146,%dummy}, %rd4194;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3147}, %rd4194;
	}
	shf.r.wrap.b32 	%r3148, %r3147, %r3146, 19;
	shf.r.wrap.b32 	%r3149, %r3146, %r3147, 19;
	mov.b64 	%rd4208, {%r3149, %r3148};
	shf.l.wrap.b32 	%r3150, %r3146, %r3147, 3;
	shf.l.wrap.b32 	%r3151, %r3147, %r3146, 3;
	mov.b64 	%rd4209, {%r3151, %r3150};
	shr.u64 	%rd4210, %rd4194, 6;
	xor.b64  	%rd4211, %rd4208, %rd4210;
	xor.b64  	%rd4212, %rd4211, %rd4209;
	shf.r.wrap.b32 	%r3152, %r2761, %r2760, 1;
	shf.r.wrap.b32 	%r3153, %r2760, %r2761, 1;
	mov.b64 	%rd4213, {%r3153, %r3152};
	shf.r.wrap.b32 	%r3154, %r2761, %r2760, 8;
	shf.r.wrap.b32 	%r3155, %r2760, %r2761, 8;
	mov.b64 	%rd4214, {%r3155, %r3154};
	shr.u64 	%rd4215, %rd3641, 7;
	xor.b64  	%rd4216, %rd4213, %rd4215;
	xor.b64  	%rd4217, %rd4216, %rd4214;
	add.s64 	%rd4218, %rd4129, %rd3628;
	add.s64 	%rd4219, %rd4218, %rd4212;
	add.s64 	%rd4220, %rd4219, %rd4217;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3156,%dummy}, %rd4207;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3157}, %rd4207;
	}
	shf.r.wrap.b32 	%r3158, %r3157, %r3156, 19;
	shf.r.wrap.b32 	%r3159, %r3156, %r3157, 19;
	mov.b64 	%rd4221, {%r3159, %r3158};
	shf.l.wrap.b32 	%r3160, %r3156, %r3157, 3;
	shf.l.wrap.b32 	%r3161, %r3157, %r3156, 3;
	mov.b64 	%rd4222, {%r3161, %r3160};
	shr.u64 	%rd4223, %rd4207, 6;
	xor.b64  	%rd4224, %rd4221, %rd4223;
	xor.b64  	%rd4225, %rd4224, %rd4222;
	shf.r.wrap.b32 	%r3162, %r3027, %r3026, 1;
	shf.r.wrap.b32 	%r3163, %r3026, %r3027, 1;
	mov.b64 	%rd4226, {%r3163, %r3162};
	shf.r.wrap.b32 	%r3164, %r3027, %r3026, 8;
	shf.r.wrap.b32 	%r3165, %r3026, %r3027, 8;
	mov.b64 	%rd4227, {%r3165, %r3164};
	shr.u64 	%rd4228, %rd3654, 7;
	xor.b64  	%rd4229, %rd4226, %rd4228;
	xor.b64  	%rd4230, %rd4229, %rd4227;
	add.s64 	%rd4231, %rd4142, %rd3641;
	add.s64 	%rd4232, %rd4231, %rd4225;
	add.s64 	%rd4233, %rd4232, %rd4230;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3166,%dummy}, %rd4220;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3167}, %rd4220;
	}
	shf.r.wrap.b32 	%r3168, %r3167, %r3166, 19;
	shf.r.wrap.b32 	%r3169, %r3166, %r3167, 19;
	mov.b64 	%rd4234, {%r3169, %r3168};
	shf.l.wrap.b32 	%r3170, %r3166, %r3167, 3;
	shf.l.wrap.b32 	%r3171, %r3167, %r3166, 3;
	mov.b64 	%rd4235, {%r3171, %r3170};
	shr.u64 	%rd4236, %rd4220, 6;
	xor.b64  	%rd4237, %rd4234, %rd4236;
	xor.b64  	%rd4238, %rd4237, %rd4235;
	shf.r.wrap.b32 	%r3172, %r3037, %r3036, 1;
	shf.r.wrap.b32 	%r3173, %r3036, %r3037, 1;
	mov.b64 	%rd4239, {%r3173, %r3172};
	shf.r.wrap.b32 	%r3174, %r3037, %r3036, 8;
	shf.r.wrap.b32 	%r3175, %r3036, %r3037, 8;
	mov.b64 	%rd4240, {%r3175, %r3174};
	shr.u64 	%rd4241, %rd3667, 7;
	xor.b64  	%rd4242, %rd4239, %rd4241;
	xor.b64  	%rd4243, %rd4242, %rd4240;
	add.s64 	%rd4244, %rd4155, %rd3654;
	add.s64 	%rd4245, %rd4244, %rd4238;
	add.s64 	%rd4246, %rd4245, %rd4243;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3176,%dummy}, %rd4233;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3177}, %rd4233;
	}
	shf.r.wrap.b32 	%r3178, %r3177, %r3176, 19;
	shf.r.wrap.b32 	%r3179, %r3176, %r3177, 19;
	mov.b64 	%rd4247, {%r3179, %r3178};
	shf.l.wrap.b32 	%r3180, %r3176, %r3177, 3;
	shf.l.wrap.b32 	%r3181, %r3177, %r3176, 3;
	mov.b64 	%rd4248, {%r3181, %r3180};
	shr.u64 	%rd4249, %rd4233, 6;
	xor.b64  	%rd4250, %rd4247, %rd4249;
	xor.b64  	%rd4251, %rd4250, %rd4248;
	shf.r.wrap.b32 	%r3182, %r3047, %r3046, 1;
	shf.r.wrap.b32 	%r3183, %r3046, %r3047, 1;
	mov.b64 	%rd4252, {%r3183, %r3182};
	shf.r.wrap.b32 	%r3184, %r3047, %r3046, 8;
	shf.r.wrap.b32 	%r3185, %r3046, %r3047, 8;
	mov.b64 	%rd4253, {%r3185, %r3184};
	shr.u64 	%rd4254, %rd4064, 7;
	xor.b64  	%rd4255, %rd4252, %rd4254;
	xor.b64  	%rd4256, %rd4255, %rd4253;
	add.s64 	%rd4257, %rd4168, %rd3667;
	add.s64 	%rd4258, %rd4257, %rd4251;
	add.s64 	%rd4259, %rd4258, %rd4256;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3186,%dummy}, %rd4040;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3187}, %rd4040;
	}
	shf.r.wrap.b32 	%r3188, %r3187, %r3186, 14;
	shf.r.wrap.b32 	%r3189, %r3186, %r3187, 14;
	mov.b64 	%rd4260, {%r3189, %r3188};
	shf.r.wrap.b32 	%r3190, %r3187, %r3186, 18;
	shf.r.wrap.b32 	%r3191, %r3186, %r3187, 18;
	mov.b64 	%rd4261, {%r3191, %r3190};
	xor.b64  	%rd4262, %rd4261, %rd4260;
	shf.l.wrap.b32 	%r3192, %r3186, %r3187, 23;
	shf.l.wrap.b32 	%r3193, %r3187, %r3186, 23;
	mov.b64 	%rd4263, {%r3193, %r3192};
	xor.b64  	%rd4264, %rd4262, %rd4263;
	xor.b64  	%rd4265, %rd4016, %rd3992;
	and.b64  	%rd4266, %rd4265, %rd4040;
	xor.b64  	%rd4267, %rd4266, %rd3992;
	add.s64 	%rd4268, %rd4267, %rd3968;
	add.s64 	%rd4269, %rd4268, %rd4064;
	add.s64 	%rd4270, %rd4269, %rd5889;
	add.s64 	%rd4271, %rd4270, %rd4264;
	add.s64 	%rd4272, %rd4271, %rd3979;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3194,%dummy}, %rd4051;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3195}, %rd4051;
	}
	shf.r.wrap.b32 	%r3196, %r3195, %r3194, 28;
	shf.r.wrap.b32 	%r3197, %r3194, %r3195, 28;
	mov.b64 	%rd4273, {%r3197, %r3196};
	shf.l.wrap.b32 	%r3198, %r3194, %r3195, 30;
	shf.l.wrap.b32 	%r3199, %r3195, %r3194, 30;
	mov.b64 	%rd4274, {%r3199, %r3198};
	xor.b64  	%rd4275, %rd4274, %rd4273;
	shf.l.wrap.b32 	%r3200, %r3194, %r3195, 25;
	shf.l.wrap.b32 	%r3201, %r3195, %r3194, 25;
	mov.b64 	%rd4276, {%r3201, %r3200};
	xor.b64  	%rd4277, %rd4275, %rd4276;
	xor.b64  	%rd4278, %rd4051, %rd4003;
	xor.b64  	%rd4279, %rd4051, %rd4027;
	and.b64  	%rd4280, %rd4279, %rd4278;
	xor.b64  	%rd4281, %rd4280, %rd4051;
	add.s64 	%rd4282, %rd4271, %rd4281;
	add.s64 	%rd4283, %rd4282, %rd4277;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3202,%dummy}, %rd4272;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3203}, %rd4272;
	}
	shf.r.wrap.b32 	%r3204, %r3203, %r3202, 14;
	shf.r.wrap.b32 	%r3205, %r3202, %r3203, 14;
	mov.b64 	%rd4284, {%r3205, %r3204};
	shf.r.wrap.b32 	%r3206, %r3203, %r3202, 18;
	shf.r.wrap.b32 	%r3207, %r3202, %r3203, 18;
	mov.b64 	%rd4285, {%r3207, %r3206};
	xor.b64  	%rd4286, %rd4285, %rd4284;
	shf.l.wrap.b32 	%r3208, %r3202, %r3203, 23;
	shf.l.wrap.b32 	%r3209, %r3203, %r3202, 23;
	mov.b64 	%rd4287, {%r3209, %r3208};
	xor.b64  	%rd4288, %rd4286, %rd4287;
	xor.b64  	%rd4289, %rd4040, %rd4016;
	and.b64  	%rd4290, %rd4272, %rd4289;
	xor.b64  	%rd4291, %rd4290, %rd4016;
	add.s64 	%rd4292, %rd4077, %rd3992;
	add.s64 	%rd4293, %rd4292, %rd5888;
	add.s64 	%rd4294, %rd4293, %rd4291;
	add.s64 	%rd4295, %rd4294, %rd4288;
	add.s64 	%rd4296, %rd4295, %rd4003;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3210,%dummy}, %rd4283;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3211}, %rd4283;
	}
	shf.r.wrap.b32 	%r3212, %r3211, %r3210, 28;
	shf.r.wrap.b32 	%r3213, %r3210, %r3211, 28;
	mov.b64 	%rd4297, {%r3213, %r3212};
	shf.l.wrap.b32 	%r3214, %r3210, %r3211, 30;
	shf.l.wrap.b32 	%r3215, %r3211, %r3210, 30;
	mov.b64 	%rd4298, {%r3215, %r3214};
	xor.b64  	%rd4299, %rd4298, %rd4297;
	shf.l.wrap.b32 	%r3216, %r3210, %r3211, 25;
	shf.l.wrap.b32 	%r3217, %r3211, %r3210, 25;
	mov.b64 	%rd4300, {%r3217, %r3216};
	xor.b64  	%rd4301, %rd4299, %rd4300;
	xor.b64  	%rd4302, %rd4283, %rd4027;
	xor.b64  	%rd4303, %rd4283, %rd4051;
	and.b64  	%rd4304, %rd4303, %rd4302;
	xor.b64  	%rd4305, %rd4304, %rd4283;
	add.s64 	%rd4306, %rd4295, %rd4305;
	add.s64 	%rd4307, %rd4306, %rd4301;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3218,%dummy}, %rd4296;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3219}, %rd4296;
	}
	shf.r.wrap.b32 	%r3220, %r3219, %r3218, 14;
	shf.r.wrap.b32 	%r3221, %r3218, %r3219, 14;
	mov.b64 	%rd4308, {%r3221, %r3220};
	shf.r.wrap.b32 	%r3222, %r3219, %r3218, 18;
	shf.r.wrap.b32 	%r3223, %r3218, %r3219, 18;
	mov.b64 	%rd4309, {%r3223, %r3222};
	xor.b64  	%rd4310, %rd4309, %rd4308;
	shf.l.wrap.b32 	%r3224, %r3218, %r3219, 23;
	shf.l.wrap.b32 	%r3225, %r3219, %r3218, 23;
	mov.b64 	%rd4311, {%r3225, %r3224};
	xor.b64  	%rd4312, %rd4310, %rd4311;
	xor.b64  	%rd4313, %rd4272, %rd4040;
	and.b64  	%rd4314, %rd4296, %rd4313;
	xor.b64  	%rd4315, %rd4314, %rd4040;
	add.s64 	%rd4316, %rd4090, %rd4016;
	add.s64 	%rd4317, %rd4316, %rd5887;
	add.s64 	%rd4318, %rd4317, %rd4315;
	add.s64 	%rd4319, %rd4318, %rd4312;
	add.s64 	%rd4320, %rd4319, %rd4027;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3226,%dummy}, %rd4307;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3227}, %rd4307;
	}
	shf.r.wrap.b32 	%r3228, %r3227, %r3226, 28;
	shf.r.wrap.b32 	%r3229, %r3226, %r3227, 28;
	mov.b64 	%rd4321, {%r3229, %r3228};
	shf.l.wrap.b32 	%r3230, %r3226, %r3227, 30;
	shf.l.wrap.b32 	%r3231, %r3227, %r3226, 30;
	mov.b64 	%rd4322, {%r3231, %r3230};
	xor.b64  	%rd4323, %rd4322, %rd4321;
	shf.l.wrap.b32 	%r3232, %r3226, %r3227, 25;
	shf.l.wrap.b32 	%r3233, %r3227, %r3226, 25;
	mov.b64 	%rd4324, {%r3233, %r3232};
	xor.b64  	%rd4325, %rd4323, %rd4324;
	xor.b64  	%rd4326, %rd4307, %rd4051;
	xor.b64  	%rd4327, %rd4307, %rd4283;
	and.b64  	%rd4328, %rd4327, %rd4326;
	xor.b64  	%rd4329, %rd4328, %rd4307;
	add.s64 	%rd4330, %rd4319, %rd4329;
	add.s64 	%rd4331, %rd4330, %rd4325;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3234,%dummy}, %rd4320;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3235}, %rd4320;
	}
	shf.r.wrap.b32 	%r3236, %r3235, %r3234, 14;
	shf.r.wrap.b32 	%r3237, %r3234, %r3235, 14;
	mov.b64 	%rd4332, {%r3237, %r3236};
	shf.r.wrap.b32 	%r3238, %r3235, %r3234, 18;
	shf.r.wrap.b32 	%r3239, %r3234, %r3235, 18;
	mov.b64 	%rd4333, {%r3239, %r3238};
	xor.b64  	%rd4334, %rd4333, %rd4332;
	shf.l.wrap.b32 	%r3240, %r3234, %r3235, 23;
	shf.l.wrap.b32 	%r3241, %r3235, %r3234, 23;
	mov.b64 	%rd4335, {%r3241, %r3240};
	xor.b64  	%rd4336, %rd4334, %rd4335;
	xor.b64  	%rd4337, %rd4296, %rd4272;
	and.b64  	%rd4338, %rd4320, %rd4337;
	xor.b64  	%rd4339, %rd4338, %rd4272;
	add.s64 	%rd4340, %rd4103, %rd4040;
	add.s64 	%rd4341, %rd4340, %rd5886;
	add.s64 	%rd4342, %rd4341, %rd4339;
	add.s64 	%rd4343, %rd4342, %rd4336;
	add.s64 	%rd4344, %rd4343, %rd4051;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3242,%dummy}, %rd4331;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3243}, %rd4331;
	}
	shf.r.wrap.b32 	%r3244, %r3243, %r3242, 28;
	shf.r.wrap.b32 	%r3245, %r3242, %r3243, 28;
	mov.b64 	%rd4345, {%r3245, %r3244};
	shf.l.wrap.b32 	%r3246, %r3242, %r3243, 30;
	shf.l.wrap.b32 	%r3247, %r3243, %r3242, 30;
	mov.b64 	%rd4346, {%r3247, %r3246};
	xor.b64  	%rd4347, %rd4346, %rd4345;
	shf.l.wrap.b32 	%r3248, %r3242, %r3243, 25;
	shf.l.wrap.b32 	%r3249, %r3243, %r3242, 25;
	mov.b64 	%rd4348, {%r3249, %r3248};
	xor.b64  	%rd4349, %rd4347, %rd4348;
	xor.b64  	%rd4350, %rd4331, %rd4283;
	xor.b64  	%rd4351, %rd4331, %rd4307;
	and.b64  	%rd4352, %rd4351, %rd4350;
	xor.b64  	%rd4353, %rd4352, %rd4331;
	add.s64 	%rd4354, %rd4343, %rd4353;
	add.s64 	%rd4355, %rd4354, %rd4349;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3250,%dummy}, %rd4344;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3251}, %rd4344;
	}
	shf.r.wrap.b32 	%r3252, %r3251, %r3250, 14;
	shf.r.wrap.b32 	%r3253, %r3250, %r3251, 14;
	mov.b64 	%rd4356, {%r3253, %r3252};
	shf.r.wrap.b32 	%r3254, %r3251, %r3250, 18;
	shf.r.wrap.b32 	%r3255, %r3250, %r3251, 18;
	mov.b64 	%rd4357, {%r3255, %r3254};
	xor.b64  	%rd4358, %rd4357, %rd4356;
	shf.l.wrap.b32 	%r3256, %r3250, %r3251, 23;
	shf.l.wrap.b32 	%r3257, %r3251, %r3250, 23;
	mov.b64 	%rd4359, {%r3257, %r3256};
	xor.b64  	%rd4360, %rd4358, %rd4359;
	xor.b64  	%rd4361, %rd4320, %rd4296;
	and.b64  	%rd4362, %rd4344, %rd4361;
	xor.b64  	%rd4363, %rd4362, %rd4296;
	add.s64 	%rd4364, %rd4272, %rd4116;
	add.s64 	%rd4365, %rd4364, %rd5885;
	add.s64 	%rd4366, %rd4365, %rd4363;
	add.s64 	%rd4367, %rd4366, %rd4360;
	add.s64 	%rd4368, %rd4367, %rd4283;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3258,%dummy}, %rd4355;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3259}, %rd4355;
	}
	shf.r.wrap.b32 	%r3260, %r3259, %r3258, 28;
	shf.r.wrap.b32 	%r3261, %r3258, %r3259, 28;
	mov.b64 	%rd4369, {%r3261, %r3260};
	shf.l.wrap.b32 	%r3262, %r3258, %r3259, 30;
	shf.l.wrap.b32 	%r3263, %r3259, %r3258, 30;
	mov.b64 	%rd4370, {%r3263, %r3262};
	xor.b64  	%rd4371, %rd4370, %rd4369;
	shf.l.wrap.b32 	%r3264, %r3258, %r3259, 25;
	shf.l.wrap.b32 	%r3265, %r3259, %r3258, 25;
	mov.b64 	%rd4372, {%r3265, %r3264};
	xor.b64  	%rd4373, %rd4371, %rd4372;
	xor.b64  	%rd4374, %rd4355, %rd4307;
	xor.b64  	%rd4375, %rd4355, %rd4331;
	and.b64  	%rd4376, %rd4375, %rd4374;
	xor.b64  	%rd4377, %rd4376, %rd4355;
	add.s64 	%rd4378, %rd4367, %rd4377;
	add.s64 	%rd4379, %rd4378, %rd4373;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3266,%dummy}, %rd4368;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3267}, %rd4368;
	}
	shf.r.wrap.b32 	%r3268, %r3267, %r3266, 14;
	shf.r.wrap.b32 	%r3269, %r3266, %r3267, 14;
	mov.b64 	%rd4380, {%r3269, %r3268};
	shf.r.wrap.b32 	%r3270, %r3267, %r3266, 18;
	shf.r.wrap.b32 	%r3271, %r3266, %r3267, 18;
	mov.b64 	%rd4381, {%r3271, %r3270};
	xor.b64  	%rd4382, %rd4381, %rd4380;
	shf.l.wrap.b32 	%r3272, %r3266, %r3267, 23;
	shf.l.wrap.b32 	%r3273, %r3267, %r3266, 23;
	mov.b64 	%rd4383, {%r3273, %r3272};
	xor.b64  	%rd4384, %rd4382, %rd4383;
	xor.b64  	%rd4385, %rd4344, %rd4320;
	and.b64  	%rd4386, %rd4368, %rd4385;
	xor.b64  	%rd4387, %rd4386, %rd4320;
	add.s64 	%rd4388, %rd4296, %rd4129;
	add.s64 	%rd4389, %rd4388, %rd5884;
	add.s64 	%rd4390, %rd4389, %rd4387;
	add.s64 	%rd4391, %rd4390, %rd4384;
	add.s64 	%rd4392, %rd4391, %rd4307;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3274,%dummy}, %rd4379;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3275}, %rd4379;
	}
	shf.r.wrap.b32 	%r3276, %r3275, %r3274, 28;
	shf.r.wrap.b32 	%r3277, %r3274, %r3275, 28;
	mov.b64 	%rd4393, {%r3277, %r3276};
	shf.l.wrap.b32 	%r3278, %r3274, %r3275, 30;
	shf.l.wrap.b32 	%r3279, %r3275, %r3274, 30;
	mov.b64 	%rd4394, {%r3279, %r3278};
	xor.b64  	%rd4395, %rd4394, %rd4393;
	shf.l.wrap.b32 	%r3280, %r3274, %r3275, 25;
	shf.l.wrap.b32 	%r3281, %r3275, %r3274, 25;
	mov.b64 	%rd4396, {%r3281, %r3280};
	xor.b64  	%rd4397, %rd4395, %rd4396;
	xor.b64  	%rd4398, %rd4379, %rd4331;
	xor.b64  	%rd4399, %rd4379, %rd4355;
	and.b64  	%rd4400, %rd4399, %rd4398;
	xor.b64  	%rd4401, %rd4400, %rd4379;
	add.s64 	%rd4402, %rd4391, %rd4401;
	add.s64 	%rd4403, %rd4402, %rd4397;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3282,%dummy}, %rd4392;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3283}, %rd4392;
	}
	shf.r.wrap.b32 	%r3284, %r3283, %r3282, 14;
	shf.r.wrap.b32 	%r3285, %r3282, %r3283, 14;
	mov.b64 	%rd4404, {%r3285, %r3284};
	shf.r.wrap.b32 	%r3286, %r3283, %r3282, 18;
	shf.r.wrap.b32 	%r3287, %r3282, %r3283, 18;
	mov.b64 	%rd4405, {%r3287, %r3286};
	xor.b64  	%rd4406, %rd4405, %rd4404;
	shf.l.wrap.b32 	%r3288, %r3282, %r3283, 23;
	shf.l.wrap.b32 	%r3289, %r3283, %r3282, 23;
	mov.b64 	%rd4407, {%r3289, %r3288};
	xor.b64  	%rd4408, %rd4406, %rd4407;
	xor.b64  	%rd4409, %rd4368, %rd4344;
	and.b64  	%rd4410, %rd4392, %rd4409;
	xor.b64  	%rd4411, %rd4410, %rd4344;
	add.s64 	%rd4412, %rd4320, %rd4142;
	add.s64 	%rd4413, %rd4412, %rd5883;
	add.s64 	%rd4414, %rd4413, %rd4411;
	add.s64 	%rd4415, %rd4414, %rd4408;
	add.s64 	%rd4416, %rd4415, %rd4331;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3290,%dummy}, %rd4403;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3291}, %rd4403;
	}
	shf.r.wrap.b32 	%r3292, %r3291, %r3290, 28;
	shf.r.wrap.b32 	%r3293, %r3290, %r3291, 28;
	mov.b64 	%rd4417, {%r3293, %r3292};
	shf.l.wrap.b32 	%r3294, %r3290, %r3291, 30;
	shf.l.wrap.b32 	%r3295, %r3291, %r3290, 30;
	mov.b64 	%rd4418, {%r3295, %r3294};
	xor.b64  	%rd4419, %rd4418, %rd4417;
	shf.l.wrap.b32 	%r3296, %r3290, %r3291, 25;
	shf.l.wrap.b32 	%r3297, %r3291, %r3290, 25;
	mov.b64 	%rd4420, {%r3297, %r3296};
	xor.b64  	%rd4421, %rd4419, %rd4420;
	xor.b64  	%rd4422, %rd4403, %rd4355;
	xor.b64  	%rd4423, %rd4403, %rd4379;
	and.b64  	%rd4424, %rd4423, %rd4422;
	xor.b64  	%rd4425, %rd4424, %rd4403;
	add.s64 	%rd4426, %rd4415, %rd4425;
	add.s64 	%rd4427, %rd4426, %rd4421;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3298,%dummy}, %rd4416;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3299}, %rd4416;
	}
	shf.r.wrap.b32 	%r3300, %r3299, %r3298, 14;
	shf.r.wrap.b32 	%r3301, %r3298, %r3299, 14;
	mov.b64 	%rd4428, {%r3301, %r3300};
	shf.r.wrap.b32 	%r3302, %r3299, %r3298, 18;
	shf.r.wrap.b32 	%r3303, %r3298, %r3299, 18;
	mov.b64 	%rd4429, {%r3303, %r3302};
	xor.b64  	%rd4430, %rd4429, %rd4428;
	shf.l.wrap.b32 	%r3304, %r3298, %r3299, 23;
	shf.l.wrap.b32 	%r3305, %r3299, %r3298, 23;
	mov.b64 	%rd4431, {%r3305, %r3304};
	xor.b64  	%rd4432, %rd4430, %rd4431;
	xor.b64  	%rd4433, %rd4392, %rd4368;
	and.b64  	%rd4434, %rd4416, %rd4433;
	xor.b64  	%rd4435, %rd4434, %rd4368;
	add.s64 	%rd4436, %rd4344, %rd4155;
	add.s64 	%rd4437, %rd4436, %rd5882;
	add.s64 	%rd4438, %rd4437, %rd4435;
	add.s64 	%rd4439, %rd4438, %rd4432;
	add.s64 	%rd4440, %rd4439, %rd4355;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3306,%dummy}, %rd4427;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3307}, %rd4427;
	}
	shf.r.wrap.b32 	%r3308, %r3307, %r3306, 28;
	shf.r.wrap.b32 	%r3309, %r3306, %r3307, 28;
	mov.b64 	%rd4441, {%r3309, %r3308};
	shf.l.wrap.b32 	%r3310, %r3306, %r3307, 30;
	shf.l.wrap.b32 	%r3311, %r3307, %r3306, 30;
	mov.b64 	%rd4442, {%r3311, %r3310};
	xor.b64  	%rd4443, %rd4442, %rd4441;
	shf.l.wrap.b32 	%r3312, %r3306, %r3307, 25;
	shf.l.wrap.b32 	%r3313, %r3307, %r3306, 25;
	mov.b64 	%rd4444, {%r3313, %r3312};
	xor.b64  	%rd4445, %rd4443, %rd4444;
	xor.b64  	%rd4446, %rd4427, %rd4379;
	xor.b64  	%rd4447, %rd4427, %rd4403;
	and.b64  	%rd4448, %rd4447, %rd4446;
	xor.b64  	%rd4449, %rd4448, %rd4427;
	add.s64 	%rd4450, %rd4439, %rd4449;
	add.s64 	%rd4451, %rd4450, %rd4445;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3314,%dummy}, %rd4440;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3315}, %rd4440;
	}
	shf.r.wrap.b32 	%r3316, %r3315, %r3314, 14;
	shf.r.wrap.b32 	%r3317, %r3314, %r3315, 14;
	mov.b64 	%rd4452, {%r3317, %r3316};
	shf.r.wrap.b32 	%r3318, %r3315, %r3314, 18;
	shf.r.wrap.b32 	%r3319, %r3314, %r3315, 18;
	mov.b64 	%rd4453, {%r3319, %r3318};
	xor.b64  	%rd4454, %rd4453, %rd4452;
	shf.l.wrap.b32 	%r3320, %r3314, %r3315, 23;
	shf.l.wrap.b32 	%r3321, %r3315, %r3314, 23;
	mov.b64 	%rd4455, {%r3321, %r3320};
	xor.b64  	%rd4456, %rd4454, %rd4455;
	xor.b64  	%rd4457, %rd4416, %rd4392;
	and.b64  	%rd4458, %rd4440, %rd4457;
	xor.b64  	%rd4459, %rd4458, %rd4392;
	add.s64 	%rd4460, %rd4368, %rd4168;
	add.s64 	%rd4461, %rd4460, %rd5881;
	add.s64 	%rd4462, %rd4461, %rd4459;
	add.s64 	%rd4463, %rd4462, %rd4456;
	add.s64 	%rd4464, %rd4463, %rd4379;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3322,%dummy}, %rd4451;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3323}, %rd4451;
	}
	shf.r.wrap.b32 	%r3324, %r3323, %r3322, 28;
	shf.r.wrap.b32 	%r3325, %r3322, %r3323, 28;
	mov.b64 	%rd4465, {%r3325, %r3324};
	shf.l.wrap.b32 	%r3326, %r3322, %r3323, 30;
	shf.l.wrap.b32 	%r3327, %r3323, %r3322, 30;
	mov.b64 	%rd4466, {%r3327, %r3326};
	xor.b64  	%rd4467, %rd4466, %rd4465;
	shf.l.wrap.b32 	%r3328, %r3322, %r3323, 25;
	shf.l.wrap.b32 	%r3329, %r3323, %r3322, 25;
	mov.b64 	%rd4468, {%r3329, %r3328};
	xor.b64  	%rd4469, %rd4467, %rd4468;
	xor.b64  	%rd4470, %rd4451, %rd4403;
	xor.b64  	%rd4471, %rd4451, %rd4427;
	and.b64  	%rd4472, %rd4471, %rd4470;
	xor.b64  	%rd4473, %rd4472, %rd4451;
	add.s64 	%rd4474, %rd4463, %rd4473;
	add.s64 	%rd4475, %rd4474, %rd4469;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3330,%dummy}, %rd4464;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3331}, %rd4464;
	}
	shf.r.wrap.b32 	%r3332, %r3331, %r3330, 14;
	shf.r.wrap.b32 	%r3333, %r3330, %r3331, 14;
	mov.b64 	%rd4476, {%r3333, %r3332};
	shf.r.wrap.b32 	%r3334, %r3331, %r3330, 18;
	shf.r.wrap.b32 	%r3335, %r3330, %r3331, 18;
	mov.b64 	%rd4477, {%r3335, %r3334};
	xor.b64  	%rd4478, %rd4477, %rd4476;
	shf.l.wrap.b32 	%r3336, %r3330, %r3331, 23;
	shf.l.wrap.b32 	%r3337, %r3331, %r3330, 23;
	mov.b64 	%rd4479, {%r3337, %r3336};
	xor.b64  	%rd4480, %rd4478, %rd4479;
	xor.b64  	%rd4481, %rd4440, %rd4416;
	and.b64  	%rd4482, %rd4464, %rd4481;
	xor.b64  	%rd4483, %rd4482, %rd4416;
	add.s64 	%rd4484, %rd4392, %rd4181;
	add.s64 	%rd4485, %rd4484, %rd5880;
	add.s64 	%rd4486, %rd4485, %rd4483;
	add.s64 	%rd4487, %rd4486, %rd4480;
	add.s64 	%rd4488, %rd4487, %rd4403;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3338,%dummy}, %rd4475;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3339}, %rd4475;
	}
	shf.r.wrap.b32 	%r3340, %r3339, %r3338, 28;
	shf.r.wrap.b32 	%r3341, %r3338, %r3339, 28;
	mov.b64 	%rd4489, {%r3341, %r3340};
	shf.l.wrap.b32 	%r3342, %r3338, %r3339, 30;
	shf.l.wrap.b32 	%r3343, %r3339, %r3338, 30;
	mov.b64 	%rd4490, {%r3343, %r3342};
	xor.b64  	%rd4491, %rd4490, %rd4489;
	shf.l.wrap.b32 	%r3344, %r3338, %r3339, 25;
	shf.l.wrap.b32 	%r3345, %r3339, %r3338, 25;
	mov.b64 	%rd4492, {%r3345, %r3344};
	xor.b64  	%rd4493, %rd4491, %rd4492;
	xor.b64  	%rd4494, %rd4475, %rd4427;
	xor.b64  	%rd4495, %rd4475, %rd4451;
	and.b64  	%rd4496, %rd4495, %rd4494;
	xor.b64  	%rd4497, %rd4496, %rd4475;
	add.s64 	%rd4498, %rd4487, %rd4497;
	add.s64 	%rd4499, %rd4498, %rd4493;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3346,%dummy}, %rd4488;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3347}, %rd4488;
	}
	shf.r.wrap.b32 	%r3348, %r3347, %r3346, 14;
	shf.r.wrap.b32 	%r3349, %r3346, %r3347, 14;
	mov.b64 	%rd4500, {%r3349, %r3348};
	shf.r.wrap.b32 	%r3350, %r3347, %r3346, 18;
	shf.r.wrap.b32 	%r3351, %r3346, %r3347, 18;
	mov.b64 	%rd4501, {%r3351, %r3350};
	xor.b64  	%rd4502, %rd4501, %rd4500;
	shf.l.wrap.b32 	%r3352, %r3346, %r3347, 23;
	shf.l.wrap.b32 	%r3353, %r3347, %r3346, 23;
	mov.b64 	%rd4503, {%r3353, %r3352};
	xor.b64  	%rd4504, %rd4502, %rd4503;
	xor.b64  	%rd4505, %rd4464, %rd4440;
	and.b64  	%rd4506, %rd4488, %rd4505;
	xor.b64  	%rd4507, %rd4506, %rd4440;
	add.s64 	%rd4508, %rd4416, %rd4194;
	add.s64 	%rd4509, %rd4508, %rd5879;
	add.s64 	%rd4510, %rd4509, %rd4507;
	add.s64 	%rd4511, %rd4510, %rd4504;
	add.s64 	%rd4512, %rd4511, %rd4427;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3354,%dummy}, %rd4499;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3355}, %rd4499;
	}
	shf.r.wrap.b32 	%r3356, %r3355, %r3354, 28;
	shf.r.wrap.b32 	%r3357, %r3354, %r3355, 28;
	mov.b64 	%rd4513, {%r3357, %r3356};
	shf.l.wrap.b32 	%r3358, %r3354, %r3355, 30;
	shf.l.wrap.b32 	%r3359, %r3355, %r3354, 30;
	mov.b64 	%rd4514, {%r3359, %r3358};
	xor.b64  	%rd4515, %rd4514, %rd4513;
	shf.l.wrap.b32 	%r3360, %r3354, %r3355, 25;
	shf.l.wrap.b32 	%r3361, %r3355, %r3354, 25;
	mov.b64 	%rd4516, {%r3361, %r3360};
	xor.b64  	%rd4517, %rd4515, %rd4516;
	xor.b64  	%rd4518, %rd4499, %rd4451;
	xor.b64  	%rd4519, %rd4499, %rd4475;
	and.b64  	%rd4520, %rd4519, %rd4518;
	xor.b64  	%rd4521, %rd4520, %rd4499;
	add.s64 	%rd4522, %rd4511, %rd4521;
	add.s64 	%rd4523, %rd4522, %rd4517;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3362,%dummy}, %rd4512;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3363}, %rd4512;
	}
	shf.r.wrap.b32 	%r3364, %r3363, %r3362, 14;
	shf.r.wrap.b32 	%r3365, %r3362, %r3363, 14;
	mov.b64 	%rd4524, {%r3365, %r3364};
	shf.r.wrap.b32 	%r3366, %r3363, %r3362, 18;
	shf.r.wrap.b32 	%r3367, %r3362, %r3363, 18;
	mov.b64 	%rd4525, {%r3367, %r3366};
	xor.b64  	%rd4526, %rd4525, %rd4524;
	shf.l.wrap.b32 	%r3368, %r3362, %r3363, 23;
	shf.l.wrap.b32 	%r3369, %r3363, %r3362, 23;
	mov.b64 	%rd4527, {%r3369, %r3368};
	xor.b64  	%rd4528, %rd4526, %rd4527;
	xor.b64  	%rd4529, %rd4488, %rd4464;
	and.b64  	%rd4530, %rd4512, %rd4529;
	xor.b64  	%rd4531, %rd4530, %rd4464;
	add.s64 	%rd4532, %rd4440, %rd4207;
	add.s64 	%rd4533, %rd4532, %rd5878;
	add.s64 	%rd4534, %rd4533, %rd4531;
	add.s64 	%rd4535, %rd4534, %rd4528;
	add.s64 	%rd4536, %rd4535, %rd4451;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3370,%dummy}, %rd4523;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3371}, %rd4523;
	}
	shf.r.wrap.b32 	%r3372, %r3371, %r3370, 28;
	shf.r.wrap.b32 	%r3373, %r3370, %r3371, 28;
	mov.b64 	%rd4537, {%r3373, %r3372};
	shf.l.wrap.b32 	%r3374, %r3370, %r3371, 30;
	shf.l.wrap.b32 	%r3375, %r3371, %r3370, 30;
	mov.b64 	%rd4538, {%r3375, %r3374};
	xor.b64  	%rd4539, %rd4538, %rd4537;
	shf.l.wrap.b32 	%r3376, %r3370, %r3371, 25;
	shf.l.wrap.b32 	%r3377, %r3371, %r3370, 25;
	mov.b64 	%rd4540, {%r3377, %r3376};
	xor.b64  	%rd4541, %rd4539, %rd4540;
	xor.b64  	%rd4542, %rd4523, %rd4475;
	xor.b64  	%rd4543, %rd4523, %rd4499;
	and.b64  	%rd4544, %rd4543, %rd4542;
	xor.b64  	%rd4545, %rd4544, %rd4523;
	add.s64 	%rd4546, %rd4535, %rd4545;
	add.s64 	%rd4547, %rd4546, %rd4541;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3378,%dummy}, %rd4536;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3379}, %rd4536;
	}
	shf.r.wrap.b32 	%r3380, %r3379, %r3378, 14;
	shf.r.wrap.b32 	%r3381, %r3378, %r3379, 14;
	mov.b64 	%rd4548, {%r3381, %r3380};
	shf.r.wrap.b32 	%r3382, %r3379, %r3378, 18;
	shf.r.wrap.b32 	%r3383, %r3378, %r3379, 18;
	mov.b64 	%rd4549, {%r3383, %r3382};
	xor.b64  	%rd4550, %rd4549, %rd4548;
	shf.l.wrap.b32 	%r3384, %r3378, %r3379, 23;
	shf.l.wrap.b32 	%r3385, %r3379, %r3378, 23;
	mov.b64 	%rd4551, {%r3385, %r3384};
	xor.b64  	%rd4552, %rd4550, %rd4551;
	xor.b64  	%rd4553, %rd4512, %rd4488;
	and.b64  	%rd4554, %rd4536, %rd4553;
	xor.b64  	%rd4555, %rd4554, %rd4488;
	add.s64 	%rd4556, %rd4464, %rd4220;
	add.s64 	%rd4557, %rd4556, %rd5877;
	add.s64 	%rd4558, %rd4557, %rd4555;
	add.s64 	%rd4559, %rd4558, %rd4552;
	add.s64 	%rd4560, %rd4559, %rd4475;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3386,%dummy}, %rd4547;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3387}, %rd4547;
	}
	shf.r.wrap.b32 	%r3388, %r3387, %r3386, 28;
	shf.r.wrap.b32 	%r3389, %r3386, %r3387, 28;
	mov.b64 	%rd4561, {%r3389, %r3388};
	shf.l.wrap.b32 	%r3390, %r3386, %r3387, 30;
	shf.l.wrap.b32 	%r3391, %r3387, %r3386, 30;
	mov.b64 	%rd4562, {%r3391, %r3390};
	xor.b64  	%rd4563, %rd4562, %rd4561;
	shf.l.wrap.b32 	%r3392, %r3386, %r3387, 25;
	shf.l.wrap.b32 	%r3393, %r3387, %r3386, 25;
	mov.b64 	%rd4564, {%r3393, %r3392};
	xor.b64  	%rd4565, %rd4563, %rd4564;
	xor.b64  	%rd4566, %rd4547, %rd4499;
	xor.b64  	%rd4567, %rd4547, %rd4523;
	and.b64  	%rd4568, %rd4567, %rd4566;
	xor.b64  	%rd4569, %rd4568, %rd4547;
	add.s64 	%rd4570, %rd4559, %rd4569;
	add.s64 	%rd4571, %rd4570, %rd4565;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3394,%dummy}, %rd4560;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3395}, %rd4560;
	}
	shf.r.wrap.b32 	%r3396, %r3395, %r3394, 14;
	shf.r.wrap.b32 	%r3397, %r3394, %r3395, 14;
	mov.b64 	%rd4572, {%r3397, %r3396};
	shf.r.wrap.b32 	%r3398, %r3395, %r3394, 18;
	shf.r.wrap.b32 	%r3399, %r3394, %r3395, 18;
	mov.b64 	%rd4573, {%r3399, %r3398};
	xor.b64  	%rd4574, %rd4573, %rd4572;
	shf.l.wrap.b32 	%r3400, %r3394, %r3395, 23;
	shf.l.wrap.b32 	%r3401, %r3395, %r3394, 23;
	mov.b64 	%rd4575, {%r3401, %r3400};
	xor.b64  	%rd4576, %rd4574, %rd4575;
	xor.b64  	%rd4577, %rd4536, %rd4512;
	and.b64  	%rd4578, %rd4560, %rd4577;
	xor.b64  	%rd4579, %rd4578, %rd4512;
	add.s64 	%rd4580, %rd4488, %rd4233;
	add.s64 	%rd4581, %rd4580, %rd5876;
	add.s64 	%rd4582, %rd4581, %rd4579;
	add.s64 	%rd4583, %rd4582, %rd4576;
	add.s64 	%rd4584, %rd4583, %rd4499;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3402,%dummy}, %rd4571;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3403}, %rd4571;
	}
	shf.r.wrap.b32 	%r3404, %r3403, %r3402, 28;
	shf.r.wrap.b32 	%r3405, %r3402, %r3403, 28;
	mov.b64 	%rd4585, {%r3405, %r3404};
	shf.l.wrap.b32 	%r3406, %r3402, %r3403, 30;
	shf.l.wrap.b32 	%r3407, %r3403, %r3402, 30;
	mov.b64 	%rd4586, {%r3407, %r3406};
	xor.b64  	%rd4587, %rd4586, %rd4585;
	shf.l.wrap.b32 	%r3408, %r3402, %r3403, 25;
	shf.l.wrap.b32 	%r3409, %r3403, %r3402, 25;
	mov.b64 	%rd4588, {%r3409, %r3408};
	xor.b64  	%rd4589, %rd4587, %rd4588;
	xor.b64  	%rd4590, %rd4571, %rd4523;
	xor.b64  	%rd4591, %rd4571, %rd4547;
	and.b64  	%rd4592, %rd4591, %rd4590;
	xor.b64  	%rd4593, %rd4592, %rd4571;
	add.s64 	%rd4594, %rd4583, %rd4593;
	add.s64 	%rd4595, %rd4594, %rd4589;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3410,%dummy}, %rd4584;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3411}, %rd4584;
	}
	shf.r.wrap.b32 	%r3412, %r3411, %r3410, 14;
	shf.r.wrap.b32 	%r3413, %r3410, %r3411, 14;
	mov.b64 	%rd4596, {%r3413, %r3412};
	shf.r.wrap.b32 	%r3414, %r3411, %r3410, 18;
	shf.r.wrap.b32 	%r3415, %r3410, %r3411, 18;
	mov.b64 	%rd4597, {%r3415, %r3414};
	xor.b64  	%rd4598, %rd4597, %rd4596;
	shf.l.wrap.b32 	%r3416, %r3410, %r3411, 23;
	shf.l.wrap.b32 	%r3417, %r3411, %r3410, 23;
	mov.b64 	%rd4599, {%r3417, %r3416};
	xor.b64  	%rd4600, %rd4598, %rd4599;
	xor.b64  	%rd4601, %rd4560, %rd4536;
	and.b64  	%rd4602, %rd4584, %rd4601;
	xor.b64  	%rd4603, %rd4602, %rd4536;
	add.s64 	%rd4604, %rd4512, %rd4246;
	add.s64 	%rd4605, %rd4604, %rd5875;
	add.s64 	%rd4606, %rd4605, %rd4603;
	add.s64 	%rd4607, %rd4606, %rd4600;
	add.s64 	%rd4608, %rd4607, %rd4523;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3418,%dummy}, %rd4595;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3419}, %rd4595;
	}
	shf.r.wrap.b32 	%r3420, %r3419, %r3418, 28;
	shf.r.wrap.b32 	%r3421, %r3418, %r3419, 28;
	mov.b64 	%rd4609, {%r3421, %r3420};
	shf.l.wrap.b32 	%r3422, %r3418, %r3419, 30;
	shf.l.wrap.b32 	%r3423, %r3419, %r3418, 30;
	mov.b64 	%rd4610, {%r3423, %r3422};
	xor.b64  	%rd4611, %rd4610, %rd4609;
	shf.l.wrap.b32 	%r3424, %r3418, %r3419, 25;
	shf.l.wrap.b32 	%r3425, %r3419, %r3418, 25;
	mov.b64 	%rd4612, {%r3425, %r3424};
	xor.b64  	%rd4613, %rd4611, %rd4612;
	xor.b64  	%rd4614, %rd4595, %rd4547;
	xor.b64  	%rd4615, %rd4595, %rd4571;
	and.b64  	%rd4616, %rd4615, %rd4614;
	xor.b64  	%rd4617, %rd4616, %rd4595;
	add.s64 	%rd4618, %rd4607, %rd4617;
	add.s64 	%rd4619, %rd4618, %rd4613;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3426,%dummy}, %rd4608;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3427}, %rd4608;
	}
	shf.r.wrap.b32 	%r3428, %r3427, %r3426, 14;
	shf.r.wrap.b32 	%r3429, %r3426, %r3427, 14;
	mov.b64 	%rd4620, {%r3429, %r3428};
	shf.r.wrap.b32 	%r3430, %r3427, %r3426, 18;
	shf.r.wrap.b32 	%r3431, %r3426, %r3427, 18;
	mov.b64 	%rd4621, {%r3431, %r3430};
	xor.b64  	%rd4622, %rd4621, %rd4620;
	shf.l.wrap.b32 	%r3432, %r3426, %r3427, 23;
	shf.l.wrap.b32 	%r3433, %r3427, %r3426, 23;
	mov.b64 	%rd4623, {%r3433, %r3432};
	xor.b64  	%rd4624, %rd4622, %rd4623;
	xor.b64  	%rd4625, %rd4584, %rd4560;
	and.b64  	%rd4626, %rd4608, %rd4625;
	xor.b64  	%rd4627, %rd4626, %rd4560;
	add.s64 	%rd4628, %rd4536, %rd4259;
	add.s64 	%rd4629, %rd4628, %rd5874;
	add.s64 	%rd4630, %rd4629, %rd4627;
	add.s64 	%rd4631, %rd4630, %rd4624;
	add.s64 	%rd4632, %rd4631, %rd4547;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3434,%dummy}, %rd4619;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3435}, %rd4619;
	}
	shf.r.wrap.b32 	%r3436, %r3435, %r3434, 28;
	shf.r.wrap.b32 	%r3437, %r3434, %r3435, 28;
	mov.b64 	%rd4633, {%r3437, %r3436};
	shf.l.wrap.b32 	%r3438, %r3434, %r3435, 30;
	shf.l.wrap.b32 	%r3439, %r3435, %r3434, 30;
	mov.b64 	%rd4634, {%r3439, %r3438};
	xor.b64  	%rd4635, %rd4634, %rd4633;
	shf.l.wrap.b32 	%r3440, %r3434, %r3435, 25;
	shf.l.wrap.b32 	%r3441, %r3435, %r3434, 25;
	mov.b64 	%rd4636, {%r3441, %r3440};
	xor.b64  	%rd4637, %rd4635, %rd4636;
	xor.b64  	%rd4638, %rd4619, %rd4571;
	xor.b64  	%rd4639, %rd4619, %rd4595;
	and.b64  	%rd4640, %rd4639, %rd4638;
	xor.b64  	%rd4641, %rd4640, %rd4619;
	add.s64 	%rd4642, %rd4631, %rd4641;
	add.s64 	%rd4643, %rd4642, %rd4637;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3442,%dummy}, %rd4246;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3443}, %rd4246;
	}
	shf.r.wrap.b32 	%r3444, %r3443, %r3442, 19;
	shf.r.wrap.b32 	%r3445, %r3442, %r3443, 19;
	mov.b64 	%rd4644, {%r3445, %r3444};
	shf.l.wrap.b32 	%r3446, %r3442, %r3443, 3;
	shf.l.wrap.b32 	%r3447, %r3443, %r3442, 3;
	mov.b64 	%rd4645, {%r3447, %r3446};
	shr.u64 	%rd4646, %rd4246, 6;
	xor.b64  	%rd4647, %rd4644, %rd4646;
	xor.b64  	%rd4648, %rd4647, %rd4645;
	shf.r.wrap.b32 	%r3448, %r3057, %r3056, 1;
	shf.r.wrap.b32 	%r3449, %r3056, %r3057, 1;
	mov.b64 	%rd4649, {%r3449, %r3448};
	shf.r.wrap.b32 	%r3450, %r3057, %r3056, 8;
	shf.r.wrap.b32 	%r3451, %r3056, %r3057, 8;
	mov.b64 	%rd4650, {%r3451, %r3450};
	shr.u64 	%rd4651, %rd4077, 7;
	xor.b64  	%rd4652, %rd4649, %rd4651;
	xor.b64  	%rd4653, %rd4652, %rd4650;
	add.s64 	%rd4654, %rd4181, %rd4064;
	add.s64 	%rd4655, %rd4654, %rd4648;
	add.s64 	%rd4656, %rd4655, %rd4653;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3452,%dummy}, %rd4259;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3453}, %rd4259;
	}
	shf.r.wrap.b32 	%r3454, %r3453, %r3452, 19;
	shf.r.wrap.b32 	%r3455, %r3452, %r3453, 19;
	mov.b64 	%rd4657, {%r3455, %r3454};
	shf.l.wrap.b32 	%r3456, %r3452, %r3453, 3;
	shf.l.wrap.b32 	%r3457, %r3453, %r3452, 3;
	mov.b64 	%rd4658, {%r3457, %r3456};
	shr.u64 	%rd4659, %rd4259, 6;
	xor.b64  	%rd4660, %rd4657, %rd4659;
	xor.b64  	%rd4661, %rd4660, %rd4658;
	shf.r.wrap.b32 	%r3458, %r3067, %r3066, 1;
	shf.r.wrap.b32 	%r3459, %r3066, %r3067, 1;
	mov.b64 	%rd4662, {%r3459, %r3458};
	shf.r.wrap.b32 	%r3460, %r3067, %r3066, 8;
	shf.r.wrap.b32 	%r3461, %r3066, %r3067, 8;
	mov.b64 	%rd4663, {%r3461, %r3460};
	shr.u64 	%rd4664, %rd4090, 7;
	xor.b64  	%rd4665, %rd4662, %rd4664;
	xor.b64  	%rd4666, %rd4665, %rd4663;
	add.s64 	%rd4667, %rd4194, %rd4077;
	add.s64 	%rd4668, %rd4667, %rd4661;
	add.s64 	%rd4669, %rd4668, %rd4666;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3462,%dummy}, %rd4656;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3463}, %rd4656;
	}
	shf.r.wrap.b32 	%r3464, %r3463, %r3462, 19;
	shf.r.wrap.b32 	%r3465, %r3462, %r3463, 19;
	mov.b64 	%rd4670, {%r3465, %r3464};
	shf.l.wrap.b32 	%r3466, %r3462, %r3463, 3;
	shf.l.wrap.b32 	%r3467, %r3463, %r3462, 3;
	mov.b64 	%rd4671, {%r3467, %r3466};
	shr.u64 	%rd4672, %rd4656, 6;
	xor.b64  	%rd4673, %rd4670, %rd4672;
	xor.b64  	%rd4674, %rd4673, %rd4671;
	shf.r.wrap.b32 	%r3468, %r3077, %r3076, 1;
	shf.r.wrap.b32 	%r3469, %r3076, %r3077, 1;
	mov.b64 	%rd4675, {%r3469, %r3468};
	shf.r.wrap.b32 	%r3470, %r3077, %r3076, 8;
	shf.r.wrap.b32 	%r3471, %r3076, %r3077, 8;
	mov.b64 	%rd4676, {%r3471, %r3470};
	shr.u64 	%rd4677, %rd4103, 7;
	xor.b64  	%rd4678, %rd4675, %rd4677;
	xor.b64  	%rd4679, %rd4678, %rd4676;
	add.s64 	%rd4680, %rd4207, %rd4090;
	add.s64 	%rd4681, %rd4680, %rd4674;
	add.s64 	%rd4682, %rd4681, %rd4679;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3472,%dummy}, %rd4669;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3473}, %rd4669;
	}
	shf.r.wrap.b32 	%r3474, %r3473, %r3472, 19;
	shf.r.wrap.b32 	%r3475, %r3472, %r3473, 19;
	mov.b64 	%rd4683, {%r3475, %r3474};
	shf.l.wrap.b32 	%r3476, %r3472, %r3473, 3;
	shf.l.wrap.b32 	%r3477, %r3473, %r3472, 3;
	mov.b64 	%rd4684, {%r3477, %r3476};
	shr.u64 	%rd4685, %rd4669, 6;
	xor.b64  	%rd4686, %rd4683, %rd4685;
	xor.b64  	%rd4687, %rd4686, %rd4684;
	shf.r.wrap.b32 	%r3478, %r3087, %r3086, 1;
	shf.r.wrap.b32 	%r3479, %r3086, %r3087, 1;
	mov.b64 	%rd4688, {%r3479, %r3478};
	shf.r.wrap.b32 	%r3480, %r3087, %r3086, 8;
	shf.r.wrap.b32 	%r3481, %r3086, %r3087, 8;
	mov.b64 	%rd4689, {%r3481, %r3480};
	shr.u64 	%rd4690, %rd4116, 7;
	xor.b64  	%rd4691, %rd4688, %rd4690;
	xor.b64  	%rd4692, %rd4691, %rd4689;
	add.s64 	%rd4693, %rd4220, %rd4103;
	add.s64 	%rd4694, %rd4693, %rd4687;
	add.s64 	%rd4695, %rd4694, %rd4692;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3482,%dummy}, %rd4682;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3483}, %rd4682;
	}
	shf.r.wrap.b32 	%r3484, %r3483, %r3482, 19;
	shf.r.wrap.b32 	%r3485, %r3482, %r3483, 19;
	mov.b64 	%rd4696, {%r3485, %r3484};
	shf.l.wrap.b32 	%r3486, %r3482, %r3483, 3;
	shf.l.wrap.b32 	%r3487, %r3483, %r3482, 3;
	mov.b64 	%rd4697, {%r3487, %r3486};
	shr.u64 	%rd4698, %rd4682, 6;
	xor.b64  	%rd4699, %rd4696, %rd4698;
	xor.b64  	%rd4700, %rd4699, %rd4697;
	shf.r.wrap.b32 	%r3488, %r3097, %r3096, 1;
	shf.r.wrap.b32 	%r3489, %r3096, %r3097, 1;
	mov.b64 	%rd4701, {%r3489, %r3488};
	shf.r.wrap.b32 	%r3490, %r3097, %r3096, 8;
	shf.r.wrap.b32 	%r3491, %r3096, %r3097, 8;
	mov.b64 	%rd4702, {%r3491, %r3490};
	shr.u64 	%rd4703, %rd4129, 7;
	xor.b64  	%rd4704, %rd4701, %rd4703;
	xor.b64  	%rd4705, %rd4704, %rd4702;
	add.s64 	%rd4706, %rd4233, %rd4116;
	add.s64 	%rd4707, %rd4706, %rd4700;
	add.s64 	%rd4708, %rd4707, %rd4705;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3492,%dummy}, %rd4695;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3493}, %rd4695;
	}
	shf.r.wrap.b32 	%r3494, %r3493, %r3492, 19;
	shf.r.wrap.b32 	%r3495, %r3492, %r3493, 19;
	mov.b64 	%rd4709, {%r3495, %r3494};
	shf.l.wrap.b32 	%r3496, %r3492, %r3493, 3;
	shf.l.wrap.b32 	%r3497, %r3493, %r3492, 3;
	mov.b64 	%rd4710, {%r3497, %r3496};
	shr.u64 	%rd4711, %rd4695, 6;
	xor.b64  	%rd4712, %rd4709, %rd4711;
	xor.b64  	%rd4713, %rd4712, %rd4710;
	shf.r.wrap.b32 	%r3498, %r3107, %r3106, 1;
	shf.r.wrap.b32 	%r3499, %r3106, %r3107, 1;
	mov.b64 	%rd4714, {%r3499, %r3498};
	shf.r.wrap.b32 	%r3500, %r3107, %r3106, 8;
	shf.r.wrap.b32 	%r3501, %r3106, %r3107, 8;
	mov.b64 	%rd4715, {%r3501, %r3500};
	shr.u64 	%rd4716, %rd4142, 7;
	xor.b64  	%rd4717, %rd4714, %rd4716;
	xor.b64  	%rd4718, %rd4717, %rd4715;
	add.s64 	%rd4719, %rd4246, %rd4129;
	add.s64 	%rd4720, %rd4719, %rd4713;
	add.s64 	%rd4721, %rd4720, %rd4718;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3502,%dummy}, %rd4708;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3503}, %rd4708;
	}
	shf.r.wrap.b32 	%r3504, %r3503, %r3502, 19;
	shf.r.wrap.b32 	%r3505, %r3502, %r3503, 19;
	mov.b64 	%rd4722, {%r3505, %r3504};
	shf.l.wrap.b32 	%r3506, %r3502, %r3503, 3;
	shf.l.wrap.b32 	%r3507, %r3503, %r3502, 3;
	mov.b64 	%rd4723, {%r3507, %r3506};
	shr.u64 	%rd4724, %rd4708, 6;
	xor.b64  	%rd4725, %rd4722, %rd4724;
	xor.b64  	%rd4726, %rd4725, %rd4723;
	shf.r.wrap.b32 	%r3508, %r3117, %r3116, 1;
	shf.r.wrap.b32 	%r3509, %r3116, %r3117, 1;
	mov.b64 	%rd4727, {%r3509, %r3508};
	shf.r.wrap.b32 	%r3510, %r3117, %r3116, 8;
	shf.r.wrap.b32 	%r3511, %r3116, %r3117, 8;
	mov.b64 	%rd4728, {%r3511, %r3510};
	shr.u64 	%rd4729, %rd4155, 7;
	xor.b64  	%rd4730, %rd4727, %rd4729;
	xor.b64  	%rd4731, %rd4730, %rd4728;
	add.s64 	%rd4732, %rd4259, %rd4142;
	add.s64 	%rd4733, %rd4732, %rd4726;
	add.s64 	%rd4734, %rd4733, %rd4731;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3512,%dummy}, %rd4721;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3513}, %rd4721;
	}
	shf.r.wrap.b32 	%r3514, %r3513, %r3512, 19;
	shf.r.wrap.b32 	%r3515, %r3512, %r3513, 19;
	mov.b64 	%rd4735, {%r3515, %r3514};
	shf.l.wrap.b32 	%r3516, %r3512, %r3513, 3;
	shf.l.wrap.b32 	%r3517, %r3513, %r3512, 3;
	mov.b64 	%rd4736, {%r3517, %r3516};
	shr.u64 	%rd4737, %rd4721, 6;
	xor.b64  	%rd4738, %rd4735, %rd4737;
	xor.b64  	%rd4739, %rd4738, %rd4736;
	shf.r.wrap.b32 	%r3518, %r3127, %r3126, 1;
	shf.r.wrap.b32 	%r3519, %r3126, %r3127, 1;
	mov.b64 	%rd4740, {%r3519, %r3518};
	shf.r.wrap.b32 	%r3520, %r3127, %r3126, 8;
	shf.r.wrap.b32 	%r3521, %r3126, %r3127, 8;
	mov.b64 	%rd4741, {%r3521, %r3520};
	shr.u64 	%rd4742, %rd4168, 7;
	xor.b64  	%rd4743, %rd4740, %rd4742;
	xor.b64  	%rd4744, %rd4743, %rd4741;
	add.s64 	%rd4745, %rd4656, %rd4155;
	add.s64 	%rd4746, %rd4745, %rd4739;
	add.s64 	%rd4747, %rd4746, %rd4744;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3522,%dummy}, %rd4734;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3523}, %rd4734;
	}
	shf.r.wrap.b32 	%r3524, %r3523, %r3522, 19;
	shf.r.wrap.b32 	%r3525, %r3522, %r3523, 19;
	mov.b64 	%rd4748, {%r3525, %r3524};
	shf.l.wrap.b32 	%r3526, %r3522, %r3523, 3;
	shf.l.wrap.b32 	%r3527, %r3523, %r3522, 3;
	mov.b64 	%rd4749, {%r3527, %r3526};
	shr.u64 	%rd4750, %rd4734, 6;
	xor.b64  	%rd4751, %rd4748, %rd4750;
	xor.b64  	%rd4752, %rd4751, %rd4749;
	shf.r.wrap.b32 	%r3528, %r3137, %r3136, 1;
	shf.r.wrap.b32 	%r3529, %r3136, %r3137, 1;
	mov.b64 	%rd4753, {%r3529, %r3528};
	shf.r.wrap.b32 	%r3530, %r3137, %r3136, 8;
	shf.r.wrap.b32 	%r3531, %r3136, %r3137, 8;
	mov.b64 	%rd4754, {%r3531, %r3530};
	shr.u64 	%rd4755, %rd4181, 7;
	xor.b64  	%rd4756, %rd4753, %rd4755;
	xor.b64  	%rd4757, %rd4756, %rd4754;
	add.s64 	%rd4758, %rd4669, %rd4168;
	add.s64 	%rd4759, %rd4758, %rd4752;
	add.s64 	%rd4760, %rd4759, %rd4757;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3532,%dummy}, %rd4747;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3533}, %rd4747;
	}
	shf.r.wrap.b32 	%r3534, %r3533, %r3532, 19;
	shf.r.wrap.b32 	%r3535, %r3532, %r3533, 19;
	mov.b64 	%rd4761, {%r3535, %r3534};
	shf.l.wrap.b32 	%r3536, %r3532, %r3533, 3;
	shf.l.wrap.b32 	%r3537, %r3533, %r3532, 3;
	mov.b64 	%rd4762, {%r3537, %r3536};
	shr.u64 	%rd4763, %rd4747, 6;
	xor.b64  	%rd4764, %rd4761, %rd4763;
	xor.b64  	%rd4765, %rd4764, %rd4762;
	shf.r.wrap.b32 	%r3538, %r3147, %r3146, 1;
	shf.r.wrap.b32 	%r3539, %r3146, %r3147, 1;
	mov.b64 	%rd4766, {%r3539, %r3538};
	shf.r.wrap.b32 	%r3540, %r3147, %r3146, 8;
	shf.r.wrap.b32 	%r3541, %r3146, %r3147, 8;
	mov.b64 	%rd4767, {%r3541, %r3540};
	shr.u64 	%rd4768, %rd4194, 7;
	xor.b64  	%rd4769, %rd4766, %rd4768;
	xor.b64  	%rd4770, %rd4769, %rd4767;
	add.s64 	%rd4771, %rd4682, %rd4181;
	add.s64 	%rd4772, %rd4771, %rd4765;
	add.s64 	%rd4773, %rd4772, %rd4770;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3542,%dummy}, %rd4760;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3543}, %rd4760;
	}
	shf.r.wrap.b32 	%r3544, %r3543, %r3542, 19;
	shf.r.wrap.b32 	%r3545, %r3542, %r3543, 19;
	mov.b64 	%rd4774, {%r3545, %r3544};
	shf.l.wrap.b32 	%r3546, %r3542, %r3543, 3;
	shf.l.wrap.b32 	%r3547, %r3543, %r3542, 3;
	mov.b64 	%rd4775, {%r3547, %r3546};
	shr.u64 	%rd4776, %rd4760, 6;
	xor.b64  	%rd4777, %rd4774, %rd4776;
	xor.b64  	%rd4778, %rd4777, %rd4775;
	shf.r.wrap.b32 	%r3548, %r3157, %r3156, 1;
	shf.r.wrap.b32 	%r3549, %r3156, %r3157, 1;
	mov.b64 	%rd4779, {%r3549, %r3548};
	shf.r.wrap.b32 	%r3550, %r3157, %r3156, 8;
	shf.r.wrap.b32 	%r3551, %r3156, %r3157, 8;
	mov.b64 	%rd4780, {%r3551, %r3550};
	shr.u64 	%rd4781, %rd4207, 7;
	xor.b64  	%rd4782, %rd4779, %rd4781;
	xor.b64  	%rd4783, %rd4782, %rd4780;
	add.s64 	%rd4784, %rd4695, %rd4194;
	add.s64 	%rd4785, %rd4784, %rd4778;
	add.s64 	%rd4786, %rd4785, %rd4783;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3552,%dummy}, %rd4773;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3553}, %rd4773;
	}
	shf.r.wrap.b32 	%r3554, %r3553, %r3552, 19;
	shf.r.wrap.b32 	%r3555, %r3552, %r3553, 19;
	mov.b64 	%rd4787, {%r3555, %r3554};
	shf.l.wrap.b32 	%r3556, %r3552, %r3553, 3;
	shf.l.wrap.b32 	%r3557, %r3553, %r3552, 3;
	mov.b64 	%rd4788, {%r3557, %r3556};
	shr.u64 	%rd4789, %rd4773, 6;
	xor.b64  	%rd4790, %rd4787, %rd4789;
	xor.b64  	%rd4791, %rd4790, %rd4788;
	shf.r.wrap.b32 	%r3558, %r3167, %r3166, 1;
	shf.r.wrap.b32 	%r3559, %r3166, %r3167, 1;
	mov.b64 	%rd4792, {%r3559, %r3558};
	shf.r.wrap.b32 	%r3560, %r3167, %r3166, 8;
	shf.r.wrap.b32 	%r3561, %r3166, %r3167, 8;
	mov.b64 	%rd4793, {%r3561, %r3560};
	shr.u64 	%rd4794, %rd4220, 7;
	xor.b64  	%rd4795, %rd4792, %rd4794;
	xor.b64  	%rd4796, %rd4795, %rd4793;
	add.s64 	%rd4797, %rd4708, %rd4207;
	add.s64 	%rd4798, %rd4797, %rd4791;
	add.s64 	%rd4799, %rd4798, %rd4796;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3562,%dummy}, %rd4786;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3563}, %rd4786;
	}
	shf.r.wrap.b32 	%r3564, %r3563, %r3562, 19;
	shf.r.wrap.b32 	%r3565, %r3562, %r3563, 19;
	mov.b64 	%rd4800, {%r3565, %r3564};
	shf.l.wrap.b32 	%r3566, %r3562, %r3563, 3;
	shf.l.wrap.b32 	%r3567, %r3563, %r3562, 3;
	mov.b64 	%rd4801, {%r3567, %r3566};
	shr.u64 	%rd4802, %rd4786, 6;
	xor.b64  	%rd4803, %rd4800, %rd4802;
	xor.b64  	%rd4804, %rd4803, %rd4801;
	shf.r.wrap.b32 	%r3568, %r3177, %r3176, 1;
	shf.r.wrap.b32 	%r3569, %r3176, %r3177, 1;
	mov.b64 	%rd4805, {%r3569, %r3568};
	shf.r.wrap.b32 	%r3570, %r3177, %r3176, 8;
	shf.r.wrap.b32 	%r3571, %r3176, %r3177, 8;
	mov.b64 	%rd4806, {%r3571, %r3570};
	shr.u64 	%rd4807, %rd4233, 7;
	xor.b64  	%rd4808, %rd4805, %rd4807;
	xor.b64  	%rd4809, %rd4808, %rd4806;
	add.s64 	%rd4810, %rd4721, %rd4220;
	add.s64 	%rd4811, %rd4810, %rd4804;
	add.s64 	%rd4812, %rd4811, %rd4809;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3572,%dummy}, %rd4799;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3573}, %rd4799;
	}
	shf.r.wrap.b32 	%r3574, %r3573, %r3572, 19;
	shf.r.wrap.b32 	%r3575, %r3572, %r3573, 19;
	mov.b64 	%rd4813, {%r3575, %r3574};
	shf.l.wrap.b32 	%r3576, %r3572, %r3573, 3;
	shf.l.wrap.b32 	%r3577, %r3573, %r3572, 3;
	mov.b64 	%rd4814, {%r3577, %r3576};
	shr.u64 	%rd4815, %rd4799, 6;
	xor.b64  	%rd4816, %rd4813, %rd4815;
	xor.b64  	%rd4817, %rd4816, %rd4814;
	shf.r.wrap.b32 	%r3578, %r3443, %r3442, 1;
	shf.r.wrap.b32 	%r3579, %r3442, %r3443, 1;
	mov.b64 	%rd4818, {%r3579, %r3578};
	shf.r.wrap.b32 	%r3580, %r3443, %r3442, 8;
	shf.r.wrap.b32 	%r3581, %r3442, %r3443, 8;
	mov.b64 	%rd4819, {%r3581, %r3580};
	shr.u64 	%rd4820, %rd4246, 7;
	xor.b64  	%rd4821, %rd4818, %rd4820;
	xor.b64  	%rd4822, %rd4821, %rd4819;
	add.s64 	%rd4823, %rd4734, %rd4233;
	add.s64 	%rd4824, %rd4823, %rd4817;
	add.s64 	%rd4825, %rd4824, %rd4822;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3582,%dummy}, %rd4812;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3583}, %rd4812;
	}
	shf.r.wrap.b32 	%r3584, %r3583, %r3582, 19;
	shf.r.wrap.b32 	%r3585, %r3582, %r3583, 19;
	mov.b64 	%rd4826, {%r3585, %r3584};
	shf.l.wrap.b32 	%r3586, %r3582, %r3583, 3;
	shf.l.wrap.b32 	%r3587, %r3583, %r3582, 3;
	mov.b64 	%rd4827, {%r3587, %r3586};
	shr.u64 	%rd4828, %rd4812, 6;
	xor.b64  	%rd4829, %rd4826, %rd4828;
	xor.b64  	%rd4830, %rd4829, %rd4827;
	shf.r.wrap.b32 	%r3588, %r3453, %r3452, 1;
	shf.r.wrap.b32 	%r3589, %r3452, %r3453, 1;
	mov.b64 	%rd4831, {%r3589, %r3588};
	shf.r.wrap.b32 	%r3590, %r3453, %r3452, 8;
	shf.r.wrap.b32 	%r3591, %r3452, %r3453, 8;
	mov.b64 	%rd4832, {%r3591, %r3590};
	shr.u64 	%rd4833, %rd4259, 7;
	xor.b64  	%rd4834, %rd4831, %rd4833;
	xor.b64  	%rd4835, %rd4834, %rd4832;
	add.s64 	%rd4836, %rd4747, %rd4246;
	add.s64 	%rd4837, %rd4836, %rd4830;
	add.s64 	%rd4838, %rd4837, %rd4835;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3592,%dummy}, %rd4825;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3593}, %rd4825;
	}
	shf.r.wrap.b32 	%r3594, %r3593, %r3592, 19;
	shf.r.wrap.b32 	%r3595, %r3592, %r3593, 19;
	mov.b64 	%rd4839, {%r3595, %r3594};
	shf.l.wrap.b32 	%r3596, %r3592, %r3593, 3;
	shf.l.wrap.b32 	%r3597, %r3593, %r3592, 3;
	mov.b64 	%rd4840, {%r3597, %r3596};
	shr.u64 	%rd4841, %rd4825, 6;
	xor.b64  	%rd4842, %rd4839, %rd4841;
	xor.b64  	%rd4843, %rd4842, %rd4840;
	shf.r.wrap.b32 	%r3598, %r3463, %r3462, 1;
	shf.r.wrap.b32 	%r3599, %r3462, %r3463, 1;
	mov.b64 	%rd4844, {%r3599, %r3598};
	shf.r.wrap.b32 	%r3600, %r3463, %r3462, 8;
	shf.r.wrap.b32 	%r3601, %r3462, %r3463, 8;
	mov.b64 	%rd4845, {%r3601, %r3600};
	shr.u64 	%rd4846, %rd4656, 7;
	xor.b64  	%rd4847, %rd4844, %rd4846;
	xor.b64  	%rd4848, %rd4847, %rd4845;
	add.s64 	%rd4849, %rd4760, %rd4259;
	add.s64 	%rd4850, %rd4849, %rd4843;
	add.s64 	%rd4851, %rd4850, %rd4848;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3602,%dummy}, %rd4632;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3603}, %rd4632;
	}
	shf.r.wrap.b32 	%r3604, %r3603, %r3602, 14;
	shf.r.wrap.b32 	%r3605, %r3602, %r3603, 14;
	mov.b64 	%rd4852, {%r3605, %r3604};
	shf.r.wrap.b32 	%r3606, %r3603, %r3602, 18;
	shf.r.wrap.b32 	%r3607, %r3602, %r3603, 18;
	mov.b64 	%rd4853, {%r3607, %r3606};
	xor.b64  	%rd4854, %rd4853, %rd4852;
	shf.l.wrap.b32 	%r3608, %r3602, %r3603, 23;
	shf.l.wrap.b32 	%r3609, %r3603, %r3602, 23;
	mov.b64 	%rd4855, {%r3609, %r3608};
	xor.b64  	%rd4856, %rd4854, %rd4855;
	xor.b64  	%rd4857, %rd4608, %rd4584;
	and.b64  	%rd4858, %rd4857, %rd4632;
	xor.b64  	%rd4859, %rd4858, %rd4584;
	add.s64 	%rd4860, %rd4859, %rd4560;
	add.s64 	%rd4861, %rd4860, %rd4656;
	add.s64 	%rd4862, %rd4861, %rd5873;
	add.s64 	%rd4863, %rd4862, %rd4856;
	add.s64 	%rd4864, %rd4863, %rd4571;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3610,%dummy}, %rd4643;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3611}, %rd4643;
	}
	shf.r.wrap.b32 	%r3612, %r3611, %r3610, 28;
	shf.r.wrap.b32 	%r3613, %r3610, %r3611, 28;
	mov.b64 	%rd4865, {%r3613, %r3612};
	shf.l.wrap.b32 	%r3614, %r3610, %r3611, 30;
	shf.l.wrap.b32 	%r3615, %r3611, %r3610, 30;
	mov.b64 	%rd4866, {%r3615, %r3614};
	xor.b64  	%rd4867, %rd4866, %rd4865;
	shf.l.wrap.b32 	%r3616, %r3610, %r3611, 25;
	shf.l.wrap.b32 	%r3617, %r3611, %r3610, 25;
	mov.b64 	%rd4868, {%r3617, %r3616};
	xor.b64  	%rd4869, %rd4867, %rd4868;
	xor.b64  	%rd4870, %rd4643, %rd4595;
	xor.b64  	%rd4871, %rd4643, %rd4619;
	and.b64  	%rd4872, %rd4871, %rd4870;
	xor.b64  	%rd4873, %rd4872, %rd4643;
	add.s64 	%rd4874, %rd4863, %rd4873;
	add.s64 	%rd4875, %rd4874, %rd4869;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3618,%dummy}, %rd4864;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3619}, %rd4864;
	}
	shf.r.wrap.b32 	%r3620, %r3619, %r3618, 14;
	shf.r.wrap.b32 	%r3621, %r3618, %r3619, 14;
	mov.b64 	%rd4876, {%r3621, %r3620};
	shf.r.wrap.b32 	%r3622, %r3619, %r3618, 18;
	shf.r.wrap.b32 	%r3623, %r3618, %r3619, 18;
	mov.b64 	%rd4877, {%r3623, %r3622};
	xor.b64  	%rd4878, %rd4877, %rd4876;
	shf.l.wrap.b32 	%r3624, %r3618, %r3619, 23;
	shf.l.wrap.b32 	%r3625, %r3619, %r3618, 23;
	mov.b64 	%rd4879, {%r3625, %r3624};
	xor.b64  	%rd4880, %rd4878, %rd4879;
	xor.b64  	%rd4881, %rd4632, %rd4608;
	and.b64  	%rd4882, %rd4864, %rd4881;
	xor.b64  	%rd4883, %rd4882, %rd4608;
	add.s64 	%rd4884, %rd4669, %rd4584;
	add.s64 	%rd4885, %rd4884, %rd5872;
	add.s64 	%rd4886, %rd4885, %rd4883;
	add.s64 	%rd4887, %rd4886, %rd4880;
	add.s64 	%rd4888, %rd4887, %rd4595;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3626,%dummy}, %rd4875;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3627}, %rd4875;
	}
	shf.r.wrap.b32 	%r3628, %r3627, %r3626, 28;
	shf.r.wrap.b32 	%r3629, %r3626, %r3627, 28;
	mov.b64 	%rd4889, {%r3629, %r3628};
	shf.l.wrap.b32 	%r3630, %r3626, %r3627, 30;
	shf.l.wrap.b32 	%r3631, %r3627, %r3626, 30;
	mov.b64 	%rd4890, {%r3631, %r3630};
	xor.b64  	%rd4891, %rd4890, %rd4889;
	shf.l.wrap.b32 	%r3632, %r3626, %r3627, 25;
	shf.l.wrap.b32 	%r3633, %r3627, %r3626, 25;
	mov.b64 	%rd4892, {%r3633, %r3632};
	xor.b64  	%rd4893, %rd4891, %rd4892;
	xor.b64  	%rd4894, %rd4875, %rd4619;
	xor.b64  	%rd4895, %rd4875, %rd4643;
	and.b64  	%rd4896, %rd4895, %rd4894;
	xor.b64  	%rd4897, %rd4896, %rd4875;
	add.s64 	%rd4898, %rd4887, %rd4897;
	add.s64 	%rd4899, %rd4898, %rd4893;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3634,%dummy}, %rd4888;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3635}, %rd4888;
	}
	shf.r.wrap.b32 	%r3636, %r3635, %r3634, 14;
	shf.r.wrap.b32 	%r3637, %r3634, %r3635, 14;
	mov.b64 	%rd4900, {%r3637, %r3636};
	shf.r.wrap.b32 	%r3638, %r3635, %r3634, 18;
	shf.r.wrap.b32 	%r3639, %r3634, %r3635, 18;
	mov.b64 	%rd4901, {%r3639, %r3638};
	xor.b64  	%rd4902, %rd4901, %rd4900;
	shf.l.wrap.b32 	%r3640, %r3634, %r3635, 23;
	shf.l.wrap.b32 	%r3641, %r3635, %r3634, 23;
	mov.b64 	%rd4903, {%r3641, %r3640};
	xor.b64  	%rd4904, %rd4902, %rd4903;
	xor.b64  	%rd4905, %rd4864, %rd4632;
	and.b64  	%rd4906, %rd4888, %rd4905;
	xor.b64  	%rd4907, %rd4906, %rd4632;
	add.s64 	%rd4908, %rd4682, %rd4608;
	add.s64 	%rd4909, %rd4908, %rd5871;
	add.s64 	%rd4910, %rd4909, %rd4907;
	add.s64 	%rd4911, %rd4910, %rd4904;
	add.s64 	%rd4912, %rd4911, %rd4619;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3642,%dummy}, %rd4899;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3643}, %rd4899;
	}
	shf.r.wrap.b32 	%r3644, %r3643, %r3642, 28;
	shf.r.wrap.b32 	%r3645, %r3642, %r3643, 28;
	mov.b64 	%rd4913, {%r3645, %r3644};
	shf.l.wrap.b32 	%r3646, %r3642, %r3643, 30;
	shf.l.wrap.b32 	%r3647, %r3643, %r3642, 30;
	mov.b64 	%rd4914, {%r3647, %r3646};
	xor.b64  	%rd4915, %rd4914, %rd4913;
	shf.l.wrap.b32 	%r3648, %r3642, %r3643, 25;
	shf.l.wrap.b32 	%r3649, %r3643, %r3642, 25;
	mov.b64 	%rd4916, {%r3649, %r3648};
	xor.b64  	%rd4917, %rd4915, %rd4916;
	xor.b64  	%rd4918, %rd4899, %rd4643;
	xor.b64  	%rd4919, %rd4899, %rd4875;
	and.b64  	%rd4920, %rd4919, %rd4918;
	xor.b64  	%rd4921, %rd4920, %rd4899;
	add.s64 	%rd4922, %rd4911, %rd4921;
	add.s64 	%rd4923, %rd4922, %rd4917;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3650,%dummy}, %rd4912;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3651}, %rd4912;
	}
	shf.r.wrap.b32 	%r3652, %r3651, %r3650, 14;
	shf.r.wrap.b32 	%r3653, %r3650, %r3651, 14;
	mov.b64 	%rd4924, {%r3653, %r3652};
	shf.r.wrap.b32 	%r3654, %r3651, %r3650, 18;
	shf.r.wrap.b32 	%r3655, %r3650, %r3651, 18;
	mov.b64 	%rd4925, {%r3655, %r3654};
	xor.b64  	%rd4926, %rd4925, %rd4924;
	shf.l.wrap.b32 	%r3656, %r3650, %r3651, 23;
	shf.l.wrap.b32 	%r3657, %r3651, %r3650, 23;
	mov.b64 	%rd4927, {%r3657, %r3656};
	xor.b64  	%rd4928, %rd4926, %rd4927;
	xor.b64  	%rd4929, %rd4888, %rd4864;
	and.b64  	%rd4930, %rd4912, %rd4929;
	xor.b64  	%rd4931, %rd4930, %rd4864;
	add.s64 	%rd4932, %rd4695, %rd4632;
	add.s64 	%rd4933, %rd4932, %rd5870;
	add.s64 	%rd4934, %rd4933, %rd4931;
	add.s64 	%rd4935, %rd4934, %rd4928;
	add.s64 	%rd4936, %rd4935, %rd4643;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3658,%dummy}, %rd4923;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3659}, %rd4923;
	}
	shf.r.wrap.b32 	%r3660, %r3659, %r3658, 28;
	shf.r.wrap.b32 	%r3661, %r3658, %r3659, 28;
	mov.b64 	%rd4937, {%r3661, %r3660};
	shf.l.wrap.b32 	%r3662, %r3658, %r3659, 30;
	shf.l.wrap.b32 	%r3663, %r3659, %r3658, 30;
	mov.b64 	%rd4938, {%r3663, %r3662};
	xor.b64  	%rd4939, %rd4938, %rd4937;
	shf.l.wrap.b32 	%r3664, %r3658, %r3659, 25;
	shf.l.wrap.b32 	%r3665, %r3659, %r3658, 25;
	mov.b64 	%rd4940, {%r3665, %r3664};
	xor.b64  	%rd4941, %rd4939, %rd4940;
	xor.b64  	%rd4942, %rd4923, %rd4875;
	xor.b64  	%rd4943, %rd4923, %rd4899;
	and.b64  	%rd4944, %rd4943, %rd4942;
	xor.b64  	%rd4945, %rd4944, %rd4923;
	add.s64 	%rd4946, %rd4935, %rd4945;
	add.s64 	%rd4947, %rd4946, %rd4941;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3666,%dummy}, %rd4936;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3667}, %rd4936;
	}
	shf.r.wrap.b32 	%r3668, %r3667, %r3666, 14;
	shf.r.wrap.b32 	%r3669, %r3666, %r3667, 14;
	mov.b64 	%rd4948, {%r3669, %r3668};
	shf.r.wrap.b32 	%r3670, %r3667, %r3666, 18;
	shf.r.wrap.b32 	%r3671, %r3666, %r3667, 18;
	mov.b64 	%rd4949, {%r3671, %r3670};
	xor.b64  	%rd4950, %rd4949, %rd4948;
	shf.l.wrap.b32 	%r3672, %r3666, %r3667, 23;
	shf.l.wrap.b32 	%r3673, %r3667, %r3666, 23;
	mov.b64 	%rd4951, {%r3673, %r3672};
	xor.b64  	%rd4952, %rd4950, %rd4951;
	xor.b64  	%rd4953, %rd4912, %rd4888;
	and.b64  	%rd4954, %rd4936, %rd4953;
	xor.b64  	%rd4955, %rd4954, %rd4888;
	add.s64 	%rd4956, %rd4864, %rd4708;
	add.s64 	%rd4957, %rd4956, %rd5869;
	add.s64 	%rd4958, %rd4957, %rd4955;
	add.s64 	%rd4959, %rd4958, %rd4952;
	add.s64 	%rd4960, %rd4959, %rd4875;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3674,%dummy}, %rd4947;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3675}, %rd4947;
	}
	shf.r.wrap.b32 	%r3676, %r3675, %r3674, 28;
	shf.r.wrap.b32 	%r3677, %r3674, %r3675, 28;
	mov.b64 	%rd4961, {%r3677, %r3676};
	shf.l.wrap.b32 	%r3678, %r3674, %r3675, 30;
	shf.l.wrap.b32 	%r3679, %r3675, %r3674, 30;
	mov.b64 	%rd4962, {%r3679, %r3678};
	xor.b64  	%rd4963, %rd4962, %rd4961;
	shf.l.wrap.b32 	%r3680, %r3674, %r3675, 25;
	shf.l.wrap.b32 	%r3681, %r3675, %r3674, 25;
	mov.b64 	%rd4964, {%r3681, %r3680};
	xor.b64  	%rd4965, %rd4963, %rd4964;
	xor.b64  	%rd4966, %rd4947, %rd4899;
	xor.b64  	%rd4967, %rd4947, %rd4923;
	and.b64  	%rd4968, %rd4967, %rd4966;
	xor.b64  	%rd4969, %rd4968, %rd4947;
	add.s64 	%rd4970, %rd4959, %rd4969;
	add.s64 	%rd4971, %rd4970, %rd4965;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3682,%dummy}, %rd4960;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3683}, %rd4960;
	}
	shf.r.wrap.b32 	%r3684, %r3683, %r3682, 14;
	shf.r.wrap.b32 	%r3685, %r3682, %r3683, 14;
	mov.b64 	%rd4972, {%r3685, %r3684};
	shf.r.wrap.b32 	%r3686, %r3683, %r3682, 18;
	shf.r.wrap.b32 	%r3687, %r3682, %r3683, 18;
	mov.b64 	%rd4973, {%r3687, %r3686};
	xor.b64  	%rd4974, %rd4973, %rd4972;
	shf.l.wrap.b32 	%r3688, %r3682, %r3683, 23;
	shf.l.wrap.b32 	%r3689, %r3683, %r3682, 23;
	mov.b64 	%rd4975, {%r3689, %r3688};
	xor.b64  	%rd4976, %rd4974, %rd4975;
	xor.b64  	%rd4977, %rd4936, %rd4912;
	and.b64  	%rd4978, %rd4960, %rd4977;
	xor.b64  	%rd4979, %rd4978, %rd4912;
	add.s64 	%rd4980, %rd4888, %rd4721;
	add.s64 	%rd4981, %rd4980, %rd5868;
	add.s64 	%rd4982, %rd4981, %rd4979;
	add.s64 	%rd4983, %rd4982, %rd4976;
	add.s64 	%rd4984, %rd4983, %rd4899;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3690,%dummy}, %rd4971;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3691}, %rd4971;
	}
	shf.r.wrap.b32 	%r3692, %r3691, %r3690, 28;
	shf.r.wrap.b32 	%r3693, %r3690, %r3691, 28;
	mov.b64 	%rd4985, {%r3693, %r3692};
	shf.l.wrap.b32 	%r3694, %r3690, %r3691, 30;
	shf.l.wrap.b32 	%r3695, %r3691, %r3690, 30;
	mov.b64 	%rd4986, {%r3695, %r3694};
	xor.b64  	%rd4987, %rd4986, %rd4985;
	shf.l.wrap.b32 	%r3696, %r3690, %r3691, 25;
	shf.l.wrap.b32 	%r3697, %r3691, %r3690, 25;
	mov.b64 	%rd4988, {%r3697, %r3696};
	xor.b64  	%rd4989, %rd4987, %rd4988;
	xor.b64  	%rd4990, %rd4971, %rd4923;
	xor.b64  	%rd4991, %rd4971, %rd4947;
	and.b64  	%rd4992, %rd4991, %rd4990;
	xor.b64  	%rd4993, %rd4992, %rd4971;
	add.s64 	%rd4994, %rd4983, %rd4993;
	add.s64 	%rd4995, %rd4994, %rd4989;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3698,%dummy}, %rd4984;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3699}, %rd4984;
	}
	shf.r.wrap.b32 	%r3700, %r3699, %r3698, 14;
	shf.r.wrap.b32 	%r3701, %r3698, %r3699, 14;
	mov.b64 	%rd4996, {%r3701, %r3700};
	shf.r.wrap.b32 	%r3702, %r3699, %r3698, 18;
	shf.r.wrap.b32 	%r3703, %r3698, %r3699, 18;
	mov.b64 	%rd4997, {%r3703, %r3702};
	xor.b64  	%rd4998, %rd4997, %rd4996;
	shf.l.wrap.b32 	%r3704, %r3698, %r3699, 23;
	shf.l.wrap.b32 	%r3705, %r3699, %r3698, 23;
	mov.b64 	%rd4999, {%r3705, %r3704};
	xor.b64  	%rd5000, %rd4998, %rd4999;
	xor.b64  	%rd5001, %rd4960, %rd4936;
	and.b64  	%rd5002, %rd4984, %rd5001;
	xor.b64  	%rd5003, %rd5002, %rd4936;
	add.s64 	%rd5004, %rd4912, %rd4734;
	add.s64 	%rd5005, %rd5004, %rd5867;
	add.s64 	%rd5006, %rd5005, %rd5003;
	add.s64 	%rd5007, %rd5006, %rd5000;
	add.s64 	%rd5008, %rd5007, %rd4923;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3706,%dummy}, %rd4995;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3707}, %rd4995;
	}
	shf.r.wrap.b32 	%r3708, %r3707, %r3706, 28;
	shf.r.wrap.b32 	%r3709, %r3706, %r3707, 28;
	mov.b64 	%rd5009, {%r3709, %r3708};
	shf.l.wrap.b32 	%r3710, %r3706, %r3707, 30;
	shf.l.wrap.b32 	%r3711, %r3707, %r3706, 30;
	mov.b64 	%rd5010, {%r3711, %r3710};
	xor.b64  	%rd5011, %rd5010, %rd5009;
	shf.l.wrap.b32 	%r3712, %r3706, %r3707, 25;
	shf.l.wrap.b32 	%r3713, %r3707, %r3706, 25;
	mov.b64 	%rd5012, {%r3713, %r3712};
	xor.b64  	%rd5013, %rd5011, %rd5012;
	xor.b64  	%rd5014, %rd4995, %rd4947;
	xor.b64  	%rd5015, %rd4995, %rd4971;
	and.b64  	%rd5016, %rd5015, %rd5014;
	xor.b64  	%rd5017, %rd5016, %rd4995;
	add.s64 	%rd5018, %rd5007, %rd5017;
	add.s64 	%rd5019, %rd5018, %rd5013;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3714,%dummy}, %rd5008;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3715}, %rd5008;
	}
	shf.r.wrap.b32 	%r3716, %r3715, %r3714, 14;
	shf.r.wrap.b32 	%r3717, %r3714, %r3715, 14;
	mov.b64 	%rd5020, {%r3717, %r3716};
	shf.r.wrap.b32 	%r3718, %r3715, %r3714, 18;
	shf.r.wrap.b32 	%r3719, %r3714, %r3715, 18;
	mov.b64 	%rd5021, {%r3719, %r3718};
	xor.b64  	%rd5022, %rd5021, %rd5020;
	shf.l.wrap.b32 	%r3720, %r3714, %r3715, 23;
	shf.l.wrap.b32 	%r3721, %r3715, %r3714, 23;
	mov.b64 	%rd5023, {%r3721, %r3720};
	xor.b64  	%rd5024, %rd5022, %rd5023;
	xor.b64  	%rd5025, %rd4984, %rd4960;
	and.b64  	%rd5026, %rd5008, %rd5025;
	xor.b64  	%rd5027, %rd5026, %rd4960;
	add.s64 	%rd5028, %rd4936, %rd4747;
	add.s64 	%rd5029, %rd5028, %rd5866;
	add.s64 	%rd5030, %rd5029, %rd5027;
	add.s64 	%rd5031, %rd5030, %rd5024;
	add.s64 	%rd5032, %rd5031, %rd4947;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3722,%dummy}, %rd5019;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3723}, %rd5019;
	}
	shf.r.wrap.b32 	%r3724, %r3723, %r3722, 28;
	shf.r.wrap.b32 	%r3725, %r3722, %r3723, 28;
	mov.b64 	%rd5033, {%r3725, %r3724};
	shf.l.wrap.b32 	%r3726, %r3722, %r3723, 30;
	shf.l.wrap.b32 	%r3727, %r3723, %r3722, 30;
	mov.b64 	%rd5034, {%r3727, %r3726};
	xor.b64  	%rd5035, %rd5034, %rd5033;
	shf.l.wrap.b32 	%r3728, %r3722, %r3723, 25;
	shf.l.wrap.b32 	%r3729, %r3723, %r3722, 25;
	mov.b64 	%rd5036, {%r3729, %r3728};
	xor.b64  	%rd5037, %rd5035, %rd5036;
	xor.b64  	%rd5038, %rd5019, %rd4971;
	xor.b64  	%rd5039, %rd5019, %rd4995;
	and.b64  	%rd5040, %rd5039, %rd5038;
	xor.b64  	%rd5041, %rd5040, %rd5019;
	add.s64 	%rd5042, %rd5031, %rd5041;
	add.s64 	%rd5043, %rd5042, %rd5037;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3730,%dummy}, %rd5032;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3731}, %rd5032;
	}
	shf.r.wrap.b32 	%r3732, %r3731, %r3730, 14;
	shf.r.wrap.b32 	%r3733, %r3730, %r3731, 14;
	mov.b64 	%rd5044, {%r3733, %r3732};
	shf.r.wrap.b32 	%r3734, %r3731, %r3730, 18;
	shf.r.wrap.b32 	%r3735, %r3730, %r3731, 18;
	mov.b64 	%rd5045, {%r3735, %r3734};
	xor.b64  	%rd5046, %rd5045, %rd5044;
	shf.l.wrap.b32 	%r3736, %r3730, %r3731, 23;
	shf.l.wrap.b32 	%r3737, %r3731, %r3730, 23;
	mov.b64 	%rd5047, {%r3737, %r3736};
	xor.b64  	%rd5048, %rd5046, %rd5047;
	xor.b64  	%rd5049, %rd5008, %rd4984;
	and.b64  	%rd5050, %rd5032, %rd5049;
	xor.b64  	%rd5051, %rd5050, %rd4984;
	add.s64 	%rd5052, %rd4960, %rd4760;
	add.s64 	%rd5053, %rd5052, %rd5865;
	add.s64 	%rd5054, %rd5053, %rd5051;
	add.s64 	%rd5055, %rd5054, %rd5048;
	add.s64 	%rd5056, %rd5055, %rd4971;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3738,%dummy}, %rd5043;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3739}, %rd5043;
	}
	shf.r.wrap.b32 	%r3740, %r3739, %r3738, 28;
	shf.r.wrap.b32 	%r3741, %r3738, %r3739, 28;
	mov.b64 	%rd5057, {%r3741, %r3740};
	shf.l.wrap.b32 	%r3742, %r3738, %r3739, 30;
	shf.l.wrap.b32 	%r3743, %r3739, %r3738, 30;
	mov.b64 	%rd5058, {%r3743, %r3742};
	xor.b64  	%rd5059, %rd5058, %rd5057;
	shf.l.wrap.b32 	%r3744, %r3738, %r3739, 25;
	shf.l.wrap.b32 	%r3745, %r3739, %r3738, 25;
	mov.b64 	%rd5060, {%r3745, %r3744};
	xor.b64  	%rd5061, %rd5059, %rd5060;
	xor.b64  	%rd5062, %rd5043, %rd4995;
	xor.b64  	%rd5063, %rd5043, %rd5019;
	and.b64  	%rd5064, %rd5063, %rd5062;
	xor.b64  	%rd5065, %rd5064, %rd5043;
	add.s64 	%rd5066, %rd5055, %rd5065;
	add.s64 	%rd5067, %rd5066, %rd5061;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3746,%dummy}, %rd5056;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3747}, %rd5056;
	}
	shf.r.wrap.b32 	%r3748, %r3747, %r3746, 14;
	shf.r.wrap.b32 	%r3749, %r3746, %r3747, 14;
	mov.b64 	%rd5068, {%r3749, %r3748};
	shf.r.wrap.b32 	%r3750, %r3747, %r3746, 18;
	shf.r.wrap.b32 	%r3751, %r3746, %r3747, 18;
	mov.b64 	%rd5069, {%r3751, %r3750};
	xor.b64  	%rd5070, %rd5069, %rd5068;
	shf.l.wrap.b32 	%r3752, %r3746, %r3747, 23;
	shf.l.wrap.b32 	%r3753, %r3747, %r3746, 23;
	mov.b64 	%rd5071, {%r3753, %r3752};
	xor.b64  	%rd5072, %rd5070, %rd5071;
	xor.b64  	%rd5073, %rd5032, %rd5008;
	and.b64  	%rd5074, %rd5056, %rd5073;
	xor.b64  	%rd5075, %rd5074, %rd5008;
	add.s64 	%rd5076, %rd4984, %rd4773;
	add.s64 	%rd5077, %rd5076, %rd5864;
	add.s64 	%rd5078, %rd5077, %rd5075;
	add.s64 	%rd5079, %rd5078, %rd5072;
	add.s64 	%rd5080, %rd5079, %rd4995;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3754,%dummy}, %rd5067;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3755}, %rd5067;
	}
	shf.r.wrap.b32 	%r3756, %r3755, %r3754, 28;
	shf.r.wrap.b32 	%r3757, %r3754, %r3755, 28;
	mov.b64 	%rd5081, {%r3757, %r3756};
	shf.l.wrap.b32 	%r3758, %r3754, %r3755, 30;
	shf.l.wrap.b32 	%r3759, %r3755, %r3754, 30;
	mov.b64 	%rd5082, {%r3759, %r3758};
	xor.b64  	%rd5083, %rd5082, %rd5081;
	shf.l.wrap.b32 	%r3760, %r3754, %r3755, 25;
	shf.l.wrap.b32 	%r3761, %r3755, %r3754, 25;
	mov.b64 	%rd5084, {%r3761, %r3760};
	xor.b64  	%rd5085, %rd5083, %rd5084;
	xor.b64  	%rd5086, %rd5067, %rd5019;
	xor.b64  	%rd5087, %rd5067, %rd5043;
	and.b64  	%rd5088, %rd5087, %rd5086;
	xor.b64  	%rd5089, %rd5088, %rd5067;
	add.s64 	%rd5090, %rd5079, %rd5089;
	add.s64 	%rd5091, %rd5090, %rd5085;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3762,%dummy}, %rd5080;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3763}, %rd5080;
	}
	shf.r.wrap.b32 	%r3764, %r3763, %r3762, 14;
	shf.r.wrap.b32 	%r3765, %r3762, %r3763, 14;
	mov.b64 	%rd5092, {%r3765, %r3764};
	shf.r.wrap.b32 	%r3766, %r3763, %r3762, 18;
	shf.r.wrap.b32 	%r3767, %r3762, %r3763, 18;
	mov.b64 	%rd5093, {%r3767, %r3766};
	xor.b64  	%rd5094, %rd5093, %rd5092;
	shf.l.wrap.b32 	%r3768, %r3762, %r3763, 23;
	shf.l.wrap.b32 	%r3769, %r3763, %r3762, 23;
	mov.b64 	%rd5095, {%r3769, %r3768};
	xor.b64  	%rd5096, %rd5094, %rd5095;
	xor.b64  	%rd5097, %rd5056, %rd5032;
	and.b64  	%rd5098, %rd5080, %rd5097;
	xor.b64  	%rd5099, %rd5098, %rd5032;
	add.s64 	%rd5100, %rd5008, %rd4786;
	add.s64 	%rd5101, %rd5100, %rd5863;
	add.s64 	%rd5102, %rd5101, %rd5099;
	add.s64 	%rd5103, %rd5102, %rd5096;
	add.s64 	%rd5104, %rd5103, %rd5019;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3770,%dummy}, %rd5091;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3771}, %rd5091;
	}
	shf.r.wrap.b32 	%r3772, %r3771, %r3770, 28;
	shf.r.wrap.b32 	%r3773, %r3770, %r3771, 28;
	mov.b64 	%rd5105, {%r3773, %r3772};
	shf.l.wrap.b32 	%r3774, %r3770, %r3771, 30;
	shf.l.wrap.b32 	%r3775, %r3771, %r3770, 30;
	mov.b64 	%rd5106, {%r3775, %r3774};
	xor.b64  	%rd5107, %rd5106, %rd5105;
	shf.l.wrap.b32 	%r3776, %r3770, %r3771, 25;
	shf.l.wrap.b32 	%r3777, %r3771, %r3770, 25;
	mov.b64 	%rd5108, {%r3777, %r3776};
	xor.b64  	%rd5109, %rd5107, %rd5108;
	xor.b64  	%rd5110, %rd5091, %rd5043;
	xor.b64  	%rd5111, %rd5091, %rd5067;
	and.b64  	%rd5112, %rd5111, %rd5110;
	xor.b64  	%rd5113, %rd5112, %rd5091;
	add.s64 	%rd5114, %rd5103, %rd5113;
	add.s64 	%rd5115, %rd5114, %rd5109;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3778,%dummy}, %rd5104;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3779}, %rd5104;
	}
	shf.r.wrap.b32 	%r3780, %r3779, %r3778, 14;
	shf.r.wrap.b32 	%r3781, %r3778, %r3779, 14;
	mov.b64 	%rd5116, {%r3781, %r3780};
	shf.r.wrap.b32 	%r3782, %r3779, %r3778, 18;
	shf.r.wrap.b32 	%r3783, %r3778, %r3779, 18;
	mov.b64 	%rd5117, {%r3783, %r3782};
	xor.b64  	%rd5118, %rd5117, %rd5116;
	shf.l.wrap.b32 	%r3784, %r3778, %r3779, 23;
	shf.l.wrap.b32 	%r3785, %r3779, %r3778, 23;
	mov.b64 	%rd5119, {%r3785, %r3784};
	xor.b64  	%rd5120, %rd5118, %rd5119;
	xor.b64  	%rd5121, %rd5080, %rd5056;
	and.b64  	%rd5122, %rd5104, %rd5121;
	xor.b64  	%rd5123, %rd5122, %rd5056;
	add.s64 	%rd5124, %rd5032, %rd4799;
	add.s64 	%rd5125, %rd5124, %rd5862;
	add.s64 	%rd5126, %rd5125, %rd5123;
	add.s64 	%rd5127, %rd5126, %rd5120;
	add.s64 	%rd5128, %rd5127, %rd5043;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3786,%dummy}, %rd5115;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3787}, %rd5115;
	}
	shf.r.wrap.b32 	%r3788, %r3787, %r3786, 28;
	shf.r.wrap.b32 	%r3789, %r3786, %r3787, 28;
	mov.b64 	%rd5129, {%r3789, %r3788};
	shf.l.wrap.b32 	%r3790, %r3786, %r3787, 30;
	shf.l.wrap.b32 	%r3791, %r3787, %r3786, 30;
	mov.b64 	%rd5130, {%r3791, %r3790};
	xor.b64  	%rd5131, %rd5130, %rd5129;
	shf.l.wrap.b32 	%r3792, %r3786, %r3787, 25;
	shf.l.wrap.b32 	%r3793, %r3787, %r3786, 25;
	mov.b64 	%rd5132, {%r3793, %r3792};
	xor.b64  	%rd5133, %rd5131, %rd5132;
	xor.b64  	%rd5134, %rd5115, %rd5067;
	xor.b64  	%rd5135, %rd5115, %rd5091;
	and.b64  	%rd5136, %rd5135, %rd5134;
	xor.b64  	%rd5137, %rd5136, %rd5115;
	add.s64 	%rd5138, %rd5127, %rd5137;
	add.s64 	%rd5139, %rd5138, %rd5133;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3794,%dummy}, %rd5128;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3795}, %rd5128;
	}
	shf.r.wrap.b32 	%r3796, %r3795, %r3794, 14;
	shf.r.wrap.b32 	%r3797, %r3794, %r3795, 14;
	mov.b64 	%rd5140, {%r3797, %r3796};
	shf.r.wrap.b32 	%r3798, %r3795, %r3794, 18;
	shf.r.wrap.b32 	%r3799, %r3794, %r3795, 18;
	mov.b64 	%rd5141, {%r3799, %r3798};
	xor.b64  	%rd5142, %rd5141, %rd5140;
	shf.l.wrap.b32 	%r3800, %r3794, %r3795, 23;
	shf.l.wrap.b32 	%r3801, %r3795, %r3794, 23;
	mov.b64 	%rd5143, {%r3801, %r3800};
	xor.b64  	%rd5144, %rd5142, %rd5143;
	xor.b64  	%rd5145, %rd5104, %rd5080;
	and.b64  	%rd5146, %rd5128, %rd5145;
	xor.b64  	%rd5147, %rd5146, %rd5080;
	add.s64 	%rd5148, %rd5056, %rd4812;
	add.s64 	%rd5149, %rd5148, %rd5861;
	add.s64 	%rd5150, %rd5149, %rd5147;
	add.s64 	%rd5151, %rd5150, %rd5144;
	add.s64 	%rd5152, %rd5151, %rd5067;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3802,%dummy}, %rd5139;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3803}, %rd5139;
	}
	shf.r.wrap.b32 	%r3804, %r3803, %r3802, 28;
	shf.r.wrap.b32 	%r3805, %r3802, %r3803, 28;
	mov.b64 	%rd5153, {%r3805, %r3804};
	shf.l.wrap.b32 	%r3806, %r3802, %r3803, 30;
	shf.l.wrap.b32 	%r3807, %r3803, %r3802, 30;
	mov.b64 	%rd5154, {%r3807, %r3806};
	xor.b64  	%rd5155, %rd5154, %rd5153;
	shf.l.wrap.b32 	%r3808, %r3802, %r3803, 25;
	shf.l.wrap.b32 	%r3809, %r3803, %r3802, 25;
	mov.b64 	%rd5156, {%r3809, %r3808};
	xor.b64  	%rd5157, %rd5155, %rd5156;
	xor.b64  	%rd5158, %rd5139, %rd5091;
	xor.b64  	%rd5159, %rd5139, %rd5115;
	and.b64  	%rd5160, %rd5159, %rd5158;
	xor.b64  	%rd5161, %rd5160, %rd5139;
	add.s64 	%rd5162, %rd5151, %rd5161;
	add.s64 	%rd5163, %rd5162, %rd5157;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3810,%dummy}, %rd5152;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3811}, %rd5152;
	}
	shf.r.wrap.b32 	%r3812, %r3811, %r3810, 14;
	shf.r.wrap.b32 	%r3813, %r3810, %r3811, 14;
	mov.b64 	%rd5164, {%r3813, %r3812};
	shf.r.wrap.b32 	%r3814, %r3811, %r3810, 18;
	shf.r.wrap.b32 	%r3815, %r3810, %r3811, 18;
	mov.b64 	%rd5165, {%r3815, %r3814};
	xor.b64  	%rd5166, %rd5165, %rd5164;
	shf.l.wrap.b32 	%r3816, %r3810, %r3811, 23;
	shf.l.wrap.b32 	%r3817, %r3811, %r3810, 23;
	mov.b64 	%rd5167, {%r3817, %r3816};
	xor.b64  	%rd5168, %rd5166, %rd5167;
	xor.b64  	%rd5169, %rd5128, %rd5104;
	and.b64  	%rd5170, %rd5152, %rd5169;
	xor.b64  	%rd5171, %rd5170, %rd5104;
	add.s64 	%rd5172, %rd5080, %rd4825;
	add.s64 	%rd5173, %rd5172, %rd5860;
	add.s64 	%rd5174, %rd5173, %rd5171;
	add.s64 	%rd5175, %rd5174, %rd5168;
	add.s64 	%rd5176, %rd5175, %rd5091;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3818,%dummy}, %rd5163;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3819}, %rd5163;
	}
	shf.r.wrap.b32 	%r3820, %r3819, %r3818, 28;
	shf.r.wrap.b32 	%r3821, %r3818, %r3819, 28;
	mov.b64 	%rd5177, {%r3821, %r3820};
	shf.l.wrap.b32 	%r3822, %r3818, %r3819, 30;
	shf.l.wrap.b32 	%r3823, %r3819, %r3818, 30;
	mov.b64 	%rd5178, {%r3823, %r3822};
	xor.b64  	%rd5179, %rd5178, %rd5177;
	shf.l.wrap.b32 	%r3824, %r3818, %r3819, 25;
	shf.l.wrap.b32 	%r3825, %r3819, %r3818, 25;
	mov.b64 	%rd5180, {%r3825, %r3824};
	xor.b64  	%rd5181, %rd5179, %rd5180;
	xor.b64  	%rd5182, %rd5163, %rd5115;
	xor.b64  	%rd5183, %rd5163, %rd5139;
	and.b64  	%rd5184, %rd5183, %rd5182;
	xor.b64  	%rd5185, %rd5184, %rd5163;
	add.s64 	%rd5186, %rd5175, %rd5185;
	add.s64 	%rd5187, %rd5186, %rd5181;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3826,%dummy}, %rd5176;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3827}, %rd5176;
	}
	shf.r.wrap.b32 	%r3828, %r3827, %r3826, 14;
	shf.r.wrap.b32 	%r3829, %r3826, %r3827, 14;
	mov.b64 	%rd5188, {%r3829, %r3828};
	shf.r.wrap.b32 	%r3830, %r3827, %r3826, 18;
	shf.r.wrap.b32 	%r3831, %r3826, %r3827, 18;
	mov.b64 	%rd5189, {%r3831, %r3830};
	xor.b64  	%rd5190, %rd5189, %rd5188;
	shf.l.wrap.b32 	%r3832, %r3826, %r3827, 23;
	shf.l.wrap.b32 	%r3833, %r3827, %r3826, 23;
	mov.b64 	%rd5191, {%r3833, %r3832};
	xor.b64  	%rd5192, %rd5190, %rd5191;
	xor.b64  	%rd5193, %rd5152, %rd5128;
	and.b64  	%rd5194, %rd5176, %rd5193;
	xor.b64  	%rd5195, %rd5194, %rd5128;
	add.s64 	%rd5196, %rd5104, %rd4838;
	add.s64 	%rd5197, %rd5196, %rd5859;
	add.s64 	%rd5198, %rd5197, %rd5195;
	add.s64 	%rd5199, %rd5198, %rd5192;
	add.s64 	%rd5200, %rd5199, %rd5115;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3834,%dummy}, %rd5187;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3835}, %rd5187;
	}
	shf.r.wrap.b32 	%r3836, %r3835, %r3834, 28;
	shf.r.wrap.b32 	%r3837, %r3834, %r3835, 28;
	mov.b64 	%rd5201, {%r3837, %r3836};
	shf.l.wrap.b32 	%r3838, %r3834, %r3835, 30;
	shf.l.wrap.b32 	%r3839, %r3835, %r3834, 30;
	mov.b64 	%rd5202, {%r3839, %r3838};
	xor.b64  	%rd5203, %rd5202, %rd5201;
	shf.l.wrap.b32 	%r3840, %r3834, %r3835, 25;
	shf.l.wrap.b32 	%r3841, %r3835, %r3834, 25;
	mov.b64 	%rd5204, {%r3841, %r3840};
	xor.b64  	%rd5205, %rd5203, %rd5204;
	xor.b64  	%rd5206, %rd5187, %rd5139;
	xor.b64  	%rd5207, %rd5187, %rd5163;
	and.b64  	%rd5208, %rd5207, %rd5206;
	xor.b64  	%rd5209, %rd5208, %rd5187;
	add.s64 	%rd5210, %rd5199, %rd5209;
	add.s64 	%rd5211, %rd5210, %rd5205;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3842,%dummy}, %rd5200;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3843}, %rd5200;
	}
	shf.r.wrap.b32 	%r3844, %r3843, %r3842, 14;
	shf.r.wrap.b32 	%r3845, %r3842, %r3843, 14;
	mov.b64 	%rd5212, {%r3845, %r3844};
	shf.r.wrap.b32 	%r3846, %r3843, %r3842, 18;
	shf.r.wrap.b32 	%r3847, %r3842, %r3843, 18;
	mov.b64 	%rd5213, {%r3847, %r3846};
	xor.b64  	%rd5214, %rd5213, %rd5212;
	shf.l.wrap.b32 	%r3848, %r3842, %r3843, 23;
	shf.l.wrap.b32 	%r3849, %r3843, %r3842, 23;
	mov.b64 	%rd5215, {%r3849, %r3848};
	xor.b64  	%rd5216, %rd5214, %rd5215;
	xor.b64  	%rd5217, %rd5176, %rd5152;
	and.b64  	%rd5218, %rd5200, %rd5217;
	xor.b64  	%rd5219, %rd5218, %rd5152;
	add.s64 	%rd5220, %rd5128, %rd4851;
	add.s64 	%rd5221, %rd5220, %rd5858;
	add.s64 	%rd5222, %rd5221, %rd5219;
	add.s64 	%rd5223, %rd5222, %rd5216;
	add.s64 	%rd5224, %rd5223, %rd5139;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3850,%dummy}, %rd5211;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3851}, %rd5211;
	}
	shf.r.wrap.b32 	%r3852, %r3851, %r3850, 28;
	shf.r.wrap.b32 	%r3853, %r3850, %r3851, 28;
	mov.b64 	%rd5225, {%r3853, %r3852};
	shf.l.wrap.b32 	%r3854, %r3850, %r3851, 30;
	shf.l.wrap.b32 	%r3855, %r3851, %r3850, 30;
	mov.b64 	%rd5226, {%r3855, %r3854};
	xor.b64  	%rd5227, %rd5226, %rd5225;
	shf.l.wrap.b32 	%r3856, %r3850, %r3851, 25;
	shf.l.wrap.b32 	%r3857, %r3851, %r3850, 25;
	mov.b64 	%rd5228, {%r3857, %r3856};
	xor.b64  	%rd5229, %rd5227, %rd5228;
	xor.b64  	%rd5230, %rd5211, %rd5163;
	xor.b64  	%rd5231, %rd5211, %rd5187;
	and.b64  	%rd5232, %rd5231, %rd5230;
	xor.b64  	%rd5233, %rd5232, %rd5211;
	add.s64 	%rd5234, %rd5223, %rd5233;
	add.s64 	%rd5235, %rd5234, %rd5229;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3858,%dummy}, %rd4838;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3859}, %rd4838;
	}
	shf.r.wrap.b32 	%r3860, %r3859, %r3858, 19;
	shf.r.wrap.b32 	%r3861, %r3858, %r3859, 19;
	mov.b64 	%rd5236, {%r3861, %r3860};
	shf.l.wrap.b32 	%r3862, %r3858, %r3859, 3;
	shf.l.wrap.b32 	%r3863, %r3859, %r3858, 3;
	mov.b64 	%rd5237, {%r3863, %r3862};
	shr.u64 	%rd5238, %rd4838, 6;
	xor.b64  	%rd5239, %rd5236, %rd5238;
	xor.b64  	%rd5240, %rd5239, %rd5237;
	shf.r.wrap.b32 	%r3864, %r3473, %r3472, 1;
	shf.r.wrap.b32 	%r3865, %r3472, %r3473, 1;
	mov.b64 	%rd5241, {%r3865, %r3864};
	shf.r.wrap.b32 	%r3866, %r3473, %r3472, 8;
	shf.r.wrap.b32 	%r3867, %r3472, %r3473, 8;
	mov.b64 	%rd5242, {%r3867, %r3866};
	shr.u64 	%rd5243, %rd4669, 7;
	xor.b64  	%rd5244, %rd5241, %rd5243;
	xor.b64  	%rd5245, %rd5244, %rd5242;
	add.s64 	%rd5246, %rd4773, %rd4656;
	add.s64 	%rd5247, %rd5246, %rd5240;
	add.s64 	%rd5248, %rd5247, %rd5245;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3868,%dummy}, %rd4851;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3869}, %rd4851;
	}
	shf.r.wrap.b32 	%r3870, %r3869, %r3868, 19;
	shf.r.wrap.b32 	%r3871, %r3868, %r3869, 19;
	mov.b64 	%rd5249, {%r3871, %r3870};
	shf.l.wrap.b32 	%r3872, %r3868, %r3869, 3;
	shf.l.wrap.b32 	%r3873, %r3869, %r3868, 3;
	mov.b64 	%rd5250, {%r3873, %r3872};
	shr.u64 	%rd5251, %rd4851, 6;
	xor.b64  	%rd5252, %rd5249, %rd5251;
	xor.b64  	%rd5253, %rd5252, %rd5250;
	shf.r.wrap.b32 	%r3874, %r3483, %r3482, 1;
	shf.r.wrap.b32 	%r3875, %r3482, %r3483, 1;
	mov.b64 	%rd5254, {%r3875, %r3874};
	shf.r.wrap.b32 	%r3876, %r3483, %r3482, 8;
	shf.r.wrap.b32 	%r3877, %r3482, %r3483, 8;
	mov.b64 	%rd5255, {%r3877, %r3876};
	shr.u64 	%rd5256, %rd4682, 7;
	xor.b64  	%rd5257, %rd5254, %rd5256;
	xor.b64  	%rd5258, %rd5257, %rd5255;
	add.s64 	%rd5259, %rd4786, %rd4669;
	add.s64 	%rd5260, %rd5259, %rd5253;
	add.s64 	%rd5261, %rd5260, %rd5258;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3878,%dummy}, %rd5248;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3879}, %rd5248;
	}
	shf.r.wrap.b32 	%r3880, %r3879, %r3878, 19;
	shf.r.wrap.b32 	%r3881, %r3878, %r3879, 19;
	mov.b64 	%rd5262, {%r3881, %r3880};
	shf.l.wrap.b32 	%r3882, %r3878, %r3879, 3;
	shf.l.wrap.b32 	%r3883, %r3879, %r3878, 3;
	mov.b64 	%rd5263, {%r3883, %r3882};
	shr.u64 	%rd5264, %rd5248, 6;
	xor.b64  	%rd5265, %rd5262, %rd5264;
	xor.b64  	%rd5266, %rd5265, %rd5263;
	shf.r.wrap.b32 	%r3884, %r3493, %r3492, 1;
	shf.r.wrap.b32 	%r3885, %r3492, %r3493, 1;
	mov.b64 	%rd5267, {%r3885, %r3884};
	shf.r.wrap.b32 	%r3886, %r3493, %r3492, 8;
	shf.r.wrap.b32 	%r3887, %r3492, %r3493, 8;
	mov.b64 	%rd5268, {%r3887, %r3886};
	shr.u64 	%rd5269, %rd4695, 7;
	xor.b64  	%rd5270, %rd5267, %rd5269;
	xor.b64  	%rd5271, %rd5270, %rd5268;
	add.s64 	%rd5272, %rd4799, %rd4682;
	add.s64 	%rd5273, %rd5272, %rd5266;
	add.s64 	%rd5274, %rd5273, %rd5271;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3888,%dummy}, %rd5261;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3889}, %rd5261;
	}
	shf.r.wrap.b32 	%r3890, %r3889, %r3888, 19;
	shf.r.wrap.b32 	%r3891, %r3888, %r3889, 19;
	mov.b64 	%rd5275, {%r3891, %r3890};
	shf.l.wrap.b32 	%r3892, %r3888, %r3889, 3;
	shf.l.wrap.b32 	%r3893, %r3889, %r3888, 3;
	mov.b64 	%rd5276, {%r3893, %r3892};
	shr.u64 	%rd5277, %rd5261, 6;
	xor.b64  	%rd5278, %rd5275, %rd5277;
	xor.b64  	%rd5279, %rd5278, %rd5276;
	shf.r.wrap.b32 	%r3894, %r3503, %r3502, 1;
	shf.r.wrap.b32 	%r3895, %r3502, %r3503, 1;
	mov.b64 	%rd5280, {%r3895, %r3894};
	shf.r.wrap.b32 	%r3896, %r3503, %r3502, 8;
	shf.r.wrap.b32 	%r3897, %r3502, %r3503, 8;
	mov.b64 	%rd5281, {%r3897, %r3896};
	shr.u64 	%rd5282, %rd4708, 7;
	xor.b64  	%rd5283, %rd5280, %rd5282;
	xor.b64  	%rd5284, %rd5283, %rd5281;
	add.s64 	%rd5285, %rd4812, %rd4695;
	add.s64 	%rd5286, %rd5285, %rd5279;
	add.s64 	%rd5287, %rd5286, %rd5284;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3898,%dummy}, %rd5274;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3899}, %rd5274;
	}
	shf.r.wrap.b32 	%r3900, %r3899, %r3898, 19;
	shf.r.wrap.b32 	%r3901, %r3898, %r3899, 19;
	mov.b64 	%rd5288, {%r3901, %r3900};
	shf.l.wrap.b32 	%r3902, %r3898, %r3899, 3;
	shf.l.wrap.b32 	%r3903, %r3899, %r3898, 3;
	mov.b64 	%rd5289, {%r3903, %r3902};
	shr.u64 	%rd5290, %rd5274, 6;
	xor.b64  	%rd5291, %rd5288, %rd5290;
	xor.b64  	%rd5292, %rd5291, %rd5289;
	shf.r.wrap.b32 	%r3904, %r3513, %r3512, 1;
	shf.r.wrap.b32 	%r3905, %r3512, %r3513, 1;
	mov.b64 	%rd5293, {%r3905, %r3904};
	shf.r.wrap.b32 	%r3906, %r3513, %r3512, 8;
	shf.r.wrap.b32 	%r3907, %r3512, %r3513, 8;
	mov.b64 	%rd5294, {%r3907, %r3906};
	shr.u64 	%rd5295, %rd4721, 7;
	xor.b64  	%rd5296, %rd5293, %rd5295;
	xor.b64  	%rd5297, %rd5296, %rd5294;
	add.s64 	%rd5298, %rd4825, %rd4708;
	add.s64 	%rd5299, %rd5298, %rd5292;
	add.s64 	%rd5300, %rd5299, %rd5297;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3908,%dummy}, %rd5287;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3909}, %rd5287;
	}
	shf.r.wrap.b32 	%r3910, %r3909, %r3908, 19;
	shf.r.wrap.b32 	%r3911, %r3908, %r3909, 19;
	mov.b64 	%rd5301, {%r3911, %r3910};
	shf.l.wrap.b32 	%r3912, %r3908, %r3909, 3;
	shf.l.wrap.b32 	%r3913, %r3909, %r3908, 3;
	mov.b64 	%rd5302, {%r3913, %r3912};
	shr.u64 	%rd5303, %rd5287, 6;
	xor.b64  	%rd5304, %rd5301, %rd5303;
	xor.b64  	%rd5305, %rd5304, %rd5302;
	shf.r.wrap.b32 	%r3914, %r3523, %r3522, 1;
	shf.r.wrap.b32 	%r3915, %r3522, %r3523, 1;
	mov.b64 	%rd5306, {%r3915, %r3914};
	shf.r.wrap.b32 	%r3916, %r3523, %r3522, 8;
	shf.r.wrap.b32 	%r3917, %r3522, %r3523, 8;
	mov.b64 	%rd5307, {%r3917, %r3916};
	shr.u64 	%rd5308, %rd4734, 7;
	xor.b64  	%rd5309, %rd5306, %rd5308;
	xor.b64  	%rd5310, %rd5309, %rd5307;
	add.s64 	%rd5311, %rd4838, %rd4721;
	add.s64 	%rd5312, %rd5311, %rd5305;
	add.s64 	%rd5313, %rd5312, %rd5310;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3918,%dummy}, %rd5300;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3919}, %rd5300;
	}
	shf.r.wrap.b32 	%r3920, %r3919, %r3918, 19;
	shf.r.wrap.b32 	%r3921, %r3918, %r3919, 19;
	mov.b64 	%rd5314, {%r3921, %r3920};
	shf.l.wrap.b32 	%r3922, %r3918, %r3919, 3;
	shf.l.wrap.b32 	%r3923, %r3919, %r3918, 3;
	mov.b64 	%rd5315, {%r3923, %r3922};
	shr.u64 	%rd5316, %rd5300, 6;
	xor.b64  	%rd5317, %rd5314, %rd5316;
	xor.b64  	%rd5318, %rd5317, %rd5315;
	shf.r.wrap.b32 	%r3924, %r3533, %r3532, 1;
	shf.r.wrap.b32 	%r3925, %r3532, %r3533, 1;
	mov.b64 	%rd5319, {%r3925, %r3924};
	shf.r.wrap.b32 	%r3926, %r3533, %r3532, 8;
	shf.r.wrap.b32 	%r3927, %r3532, %r3533, 8;
	mov.b64 	%rd5320, {%r3927, %r3926};
	shr.u64 	%rd5321, %rd4747, 7;
	xor.b64  	%rd5322, %rd5319, %rd5321;
	xor.b64  	%rd5323, %rd5322, %rd5320;
	add.s64 	%rd5324, %rd4851, %rd4734;
	add.s64 	%rd5325, %rd5324, %rd5318;
	add.s64 	%rd5326, %rd5325, %rd5323;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3928,%dummy}, %rd5313;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3929}, %rd5313;
	}
	shf.r.wrap.b32 	%r3930, %r3929, %r3928, 19;
	shf.r.wrap.b32 	%r3931, %r3928, %r3929, 19;
	mov.b64 	%rd5327, {%r3931, %r3930};
	shf.l.wrap.b32 	%r3932, %r3928, %r3929, 3;
	shf.l.wrap.b32 	%r3933, %r3929, %r3928, 3;
	mov.b64 	%rd5328, {%r3933, %r3932};
	shr.u64 	%rd5329, %rd5313, 6;
	xor.b64  	%rd5330, %rd5327, %rd5329;
	xor.b64  	%rd5331, %rd5330, %rd5328;
	shf.r.wrap.b32 	%r3934, %r3543, %r3542, 1;
	shf.r.wrap.b32 	%r3935, %r3542, %r3543, 1;
	mov.b64 	%rd5332, {%r3935, %r3934};
	shf.r.wrap.b32 	%r3936, %r3543, %r3542, 8;
	shf.r.wrap.b32 	%r3937, %r3542, %r3543, 8;
	mov.b64 	%rd5333, {%r3937, %r3936};
	shr.u64 	%rd5334, %rd4760, 7;
	xor.b64  	%rd5335, %rd5332, %rd5334;
	xor.b64  	%rd5336, %rd5335, %rd5333;
	add.s64 	%rd5337, %rd5248, %rd4747;
	add.s64 	%rd5338, %rd5337, %rd5331;
	add.s64 	%rd5339, %rd5338, %rd5336;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3938,%dummy}, %rd5326;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3939}, %rd5326;
	}
	shf.r.wrap.b32 	%r3940, %r3939, %r3938, 19;
	shf.r.wrap.b32 	%r3941, %r3938, %r3939, 19;
	mov.b64 	%rd5340, {%r3941, %r3940};
	shf.l.wrap.b32 	%r3942, %r3938, %r3939, 3;
	shf.l.wrap.b32 	%r3943, %r3939, %r3938, 3;
	mov.b64 	%rd5341, {%r3943, %r3942};
	shr.u64 	%rd5342, %rd5326, 6;
	xor.b64  	%rd5343, %rd5340, %rd5342;
	xor.b64  	%rd5344, %rd5343, %rd5341;
	shf.r.wrap.b32 	%r3944, %r3553, %r3552, 1;
	shf.r.wrap.b32 	%r3945, %r3552, %r3553, 1;
	mov.b64 	%rd5345, {%r3945, %r3944};
	shf.r.wrap.b32 	%r3946, %r3553, %r3552, 8;
	shf.r.wrap.b32 	%r3947, %r3552, %r3553, 8;
	mov.b64 	%rd5346, {%r3947, %r3946};
	shr.u64 	%rd5347, %rd4773, 7;
	xor.b64  	%rd5348, %rd5345, %rd5347;
	xor.b64  	%rd5349, %rd5348, %rd5346;
	add.s64 	%rd5350, %rd5261, %rd4760;
	add.s64 	%rd5351, %rd5350, %rd5344;
	add.s64 	%rd5352, %rd5351, %rd5349;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3948,%dummy}, %rd5339;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3949}, %rd5339;
	}
	shf.r.wrap.b32 	%r3950, %r3949, %r3948, 19;
	shf.r.wrap.b32 	%r3951, %r3948, %r3949, 19;
	mov.b64 	%rd5353, {%r3951, %r3950};
	shf.l.wrap.b32 	%r3952, %r3948, %r3949, 3;
	shf.l.wrap.b32 	%r3953, %r3949, %r3948, 3;
	mov.b64 	%rd5354, {%r3953, %r3952};
	shr.u64 	%rd5355, %rd5339, 6;
	xor.b64  	%rd5356, %rd5353, %rd5355;
	xor.b64  	%rd5357, %rd5356, %rd5354;
	shf.r.wrap.b32 	%r3954, %r3563, %r3562, 1;
	shf.r.wrap.b32 	%r3955, %r3562, %r3563, 1;
	mov.b64 	%rd5358, {%r3955, %r3954};
	shf.r.wrap.b32 	%r3956, %r3563, %r3562, 8;
	shf.r.wrap.b32 	%r3957, %r3562, %r3563, 8;
	mov.b64 	%rd5359, {%r3957, %r3956};
	shr.u64 	%rd5360, %rd4786, 7;
	xor.b64  	%rd5361, %rd5358, %rd5360;
	xor.b64  	%rd5362, %rd5361, %rd5359;
	add.s64 	%rd5363, %rd5274, %rd4773;
	add.s64 	%rd5364, %rd5363, %rd5357;
	add.s64 	%rd5365, %rd5364, %rd5362;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3958,%dummy}, %rd5352;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3959}, %rd5352;
	}
	shf.r.wrap.b32 	%r3960, %r3959, %r3958, 19;
	shf.r.wrap.b32 	%r3961, %r3958, %r3959, 19;
	mov.b64 	%rd5366, {%r3961, %r3960};
	shf.l.wrap.b32 	%r3962, %r3958, %r3959, 3;
	shf.l.wrap.b32 	%r3963, %r3959, %r3958, 3;
	mov.b64 	%rd5367, {%r3963, %r3962};
	shr.u64 	%rd5368, %rd5352, 6;
	xor.b64  	%rd5369, %rd5366, %rd5368;
	xor.b64  	%rd5370, %rd5369, %rd5367;
	shf.r.wrap.b32 	%r3964, %r3573, %r3572, 1;
	shf.r.wrap.b32 	%r3965, %r3572, %r3573, 1;
	mov.b64 	%rd5371, {%r3965, %r3964};
	shf.r.wrap.b32 	%r3966, %r3573, %r3572, 8;
	shf.r.wrap.b32 	%r3967, %r3572, %r3573, 8;
	mov.b64 	%rd5372, {%r3967, %r3966};
	shr.u64 	%rd5373, %rd4799, 7;
	xor.b64  	%rd5374, %rd5371, %rd5373;
	xor.b64  	%rd5375, %rd5374, %rd5372;
	add.s64 	%rd5376, %rd5287, %rd4786;
	add.s64 	%rd5377, %rd5376, %rd5370;
	add.s64 	%rd5378, %rd5377, %rd5375;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3968,%dummy}, %rd5365;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3969}, %rd5365;
	}
	shf.r.wrap.b32 	%r3970, %r3969, %r3968, 19;
	shf.r.wrap.b32 	%r3971, %r3968, %r3969, 19;
	mov.b64 	%rd5379, {%r3971, %r3970};
	shf.l.wrap.b32 	%r3972, %r3968, %r3969, 3;
	shf.l.wrap.b32 	%r3973, %r3969, %r3968, 3;
	mov.b64 	%rd5380, {%r3973, %r3972};
	shr.u64 	%rd5381, %rd5365, 6;
	xor.b64  	%rd5382, %rd5379, %rd5381;
	xor.b64  	%rd5383, %rd5382, %rd5380;
	shf.r.wrap.b32 	%r3974, %r3583, %r3582, 1;
	shf.r.wrap.b32 	%r3975, %r3582, %r3583, 1;
	mov.b64 	%rd5384, {%r3975, %r3974};
	shf.r.wrap.b32 	%r3976, %r3583, %r3582, 8;
	shf.r.wrap.b32 	%r3977, %r3582, %r3583, 8;
	mov.b64 	%rd5385, {%r3977, %r3976};
	shr.u64 	%rd5386, %rd4812, 7;
	xor.b64  	%rd5387, %rd5384, %rd5386;
	xor.b64  	%rd5388, %rd5387, %rd5385;
	add.s64 	%rd5389, %rd5300, %rd4799;
	add.s64 	%rd5390, %rd5389, %rd5383;
	add.s64 	%rd5391, %rd5390, %rd5388;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3978,%dummy}, %rd5378;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3979}, %rd5378;
	}
	shf.r.wrap.b32 	%r3980, %r3979, %r3978, 19;
	shf.r.wrap.b32 	%r3981, %r3978, %r3979, 19;
	mov.b64 	%rd5392, {%r3981, %r3980};
	shf.l.wrap.b32 	%r3982, %r3978, %r3979, 3;
	shf.l.wrap.b32 	%r3983, %r3979, %r3978, 3;
	mov.b64 	%rd5393, {%r3983, %r3982};
	shr.u64 	%rd5394, %rd5378, 6;
	xor.b64  	%rd5395, %rd5392, %rd5394;
	xor.b64  	%rd5396, %rd5395, %rd5393;
	shf.r.wrap.b32 	%r3984, %r3593, %r3592, 1;
	shf.r.wrap.b32 	%r3985, %r3592, %r3593, 1;
	mov.b64 	%rd5397, {%r3985, %r3984};
	shf.r.wrap.b32 	%r3986, %r3593, %r3592, 8;
	shf.r.wrap.b32 	%r3987, %r3592, %r3593, 8;
	mov.b64 	%rd5398, {%r3987, %r3986};
	shr.u64 	%rd5399, %rd4825, 7;
	xor.b64  	%rd5400, %rd5397, %rd5399;
	xor.b64  	%rd5401, %rd5400, %rd5398;
	add.s64 	%rd5402, %rd5313, %rd4812;
	add.s64 	%rd5403, %rd5402, %rd5396;
	add.s64 	%rd5404, %rd5403, %rd5401;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3988,%dummy}, %rd5391;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3989}, %rd5391;
	}
	shf.r.wrap.b32 	%r3990, %r3989, %r3988, 19;
	shf.r.wrap.b32 	%r3991, %r3988, %r3989, 19;
	mov.b64 	%rd5405, {%r3991, %r3990};
	shf.l.wrap.b32 	%r3992, %r3988, %r3989, 3;
	shf.l.wrap.b32 	%r3993, %r3989, %r3988, 3;
	mov.b64 	%rd5406, {%r3993, %r3992};
	shr.u64 	%rd5407, %rd5391, 6;
	xor.b64  	%rd5408, %rd5405, %rd5407;
	xor.b64  	%rd5409, %rd5408, %rd5406;
	shf.r.wrap.b32 	%r3994, %r3859, %r3858, 1;
	shf.r.wrap.b32 	%r3995, %r3858, %r3859, 1;
	mov.b64 	%rd5410, {%r3995, %r3994};
	shf.r.wrap.b32 	%r3996, %r3859, %r3858, 8;
	shf.r.wrap.b32 	%r3997, %r3858, %r3859, 8;
	mov.b64 	%rd5411, {%r3997, %r3996};
	shr.u64 	%rd5412, %rd4838, 7;
	xor.b64  	%rd5413, %rd5410, %rd5412;
	xor.b64  	%rd5414, %rd5413, %rd5411;
	add.s64 	%rd5415, %rd5326, %rd4825;
	add.s64 	%rd5416, %rd5415, %rd5409;
	add.s64 	%rd5417, %rd5416, %rd5414;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3998,%dummy}, %rd5404;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3999}, %rd5404;
	}
	shf.r.wrap.b32 	%r4000, %r3999, %r3998, 19;
	shf.r.wrap.b32 	%r4001, %r3998, %r3999, 19;
	mov.b64 	%rd5418, {%r4001, %r4000};
	shf.l.wrap.b32 	%r4002, %r3998, %r3999, 3;
	shf.l.wrap.b32 	%r4003, %r3999, %r3998, 3;
	mov.b64 	%rd5419, {%r4003, %r4002};
	shr.u64 	%rd5420, %rd5404, 6;
	xor.b64  	%rd5421, %rd5418, %rd5420;
	xor.b64  	%rd5422, %rd5421, %rd5419;
	shf.r.wrap.b32 	%r4004, %r3869, %r3868, 1;
	shf.r.wrap.b32 	%r4005, %r3868, %r3869, 1;
	mov.b64 	%rd5423, {%r4005, %r4004};
	shf.r.wrap.b32 	%r4006, %r3869, %r3868, 8;
	shf.r.wrap.b32 	%r4007, %r3868, %r3869, 8;
	mov.b64 	%rd5424, {%r4007, %r4006};
	shr.u64 	%rd5425, %rd4851, 7;
	xor.b64  	%rd5426, %rd5423, %rd5425;
	xor.b64  	%rd5427, %rd5426, %rd5424;
	add.s64 	%rd5428, %rd5339, %rd4838;
	add.s64 	%rd5429, %rd5428, %rd5422;
	add.s64 	%rd5430, %rd5429, %rd5427;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4008,%dummy}, %rd5417;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4009}, %rd5417;
	}
	shf.r.wrap.b32 	%r4010, %r4009, %r4008, 19;
	shf.r.wrap.b32 	%r4011, %r4008, %r4009, 19;
	mov.b64 	%rd5431, {%r4011, %r4010};
	shf.l.wrap.b32 	%r4012, %r4008, %r4009, 3;
	shf.l.wrap.b32 	%r4013, %r4009, %r4008, 3;
	mov.b64 	%rd5432, {%r4013, %r4012};
	shr.u64 	%rd5433, %rd5417, 6;
	xor.b64  	%rd5434, %rd5431, %rd5433;
	xor.b64  	%rd5435, %rd5434, %rd5432;
	shf.r.wrap.b32 	%r4014, %r3879, %r3878, 1;
	shf.r.wrap.b32 	%r4015, %r3878, %r3879, 1;
	mov.b64 	%rd5436, {%r4015, %r4014};
	shf.r.wrap.b32 	%r4016, %r3879, %r3878, 8;
	shf.r.wrap.b32 	%r4017, %r3878, %r3879, 8;
	mov.b64 	%rd5437, {%r4017, %r4016};
	shr.u64 	%rd5438, %rd5248, 7;
	xor.b64  	%rd5439, %rd5436, %rd5438;
	xor.b64  	%rd5440, %rd5439, %rd5437;
	add.s64 	%rd5441, %rd5352, %rd4851;
	add.s64 	%rd5442, %rd5441, %rd5435;
	add.s64 	%rd5443, %rd5442, %rd5440;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4018,%dummy}, %rd5224;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4019}, %rd5224;
	}
	shf.r.wrap.b32 	%r4020, %r4019, %r4018, 14;
	shf.r.wrap.b32 	%r4021, %r4018, %r4019, 14;
	mov.b64 	%rd5444, {%r4021, %r4020};
	shf.r.wrap.b32 	%r4022, %r4019, %r4018, 18;
	shf.r.wrap.b32 	%r4023, %r4018, %r4019, 18;
	mov.b64 	%rd5445, {%r4023, %r4022};
	xor.b64  	%rd5446, %rd5445, %rd5444;
	shf.l.wrap.b32 	%r4024, %r4018, %r4019, 23;
	shf.l.wrap.b32 	%r4025, %r4019, %r4018, 23;
	mov.b64 	%rd5447, {%r4025, %r4024};
	xor.b64  	%rd5448, %rd5446, %rd5447;
	xor.b64  	%rd5449, %rd5200, %rd5176;
	and.b64  	%rd5450, %rd5449, %rd5224;
	xor.b64  	%rd5451, %rd5450, %rd5176;
	add.s64 	%rd5452, %rd5451, %rd5152;
	add.s64 	%rd5453, %rd5452, %rd5248;
	add.s64 	%rd5454, %rd5453, %rd5857;
	add.s64 	%rd5455, %rd5454, %rd5448;
	add.s64 	%rd5456, %rd5455, %rd5163;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4026,%dummy}, %rd5235;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4027}, %rd5235;
	}
	shf.r.wrap.b32 	%r4028, %r4027, %r4026, 28;
	shf.r.wrap.b32 	%r4029, %r4026, %r4027, 28;
	mov.b64 	%rd5457, {%r4029, %r4028};
	shf.l.wrap.b32 	%r4030, %r4026, %r4027, 30;
	shf.l.wrap.b32 	%r4031, %r4027, %r4026, 30;
	mov.b64 	%rd5458, {%r4031, %r4030};
	xor.b64  	%rd5459, %rd5458, %rd5457;
	shf.l.wrap.b32 	%r4032, %r4026, %r4027, 25;
	shf.l.wrap.b32 	%r4033, %r4027, %r4026, 25;
	mov.b64 	%rd5460, {%r4033, %r4032};
	xor.b64  	%rd5461, %rd5459, %rd5460;
	xor.b64  	%rd5462, %rd5235, %rd5187;
	xor.b64  	%rd5463, %rd5235, %rd5211;
	and.b64  	%rd5464, %rd5463, %rd5462;
	xor.b64  	%rd5465, %rd5464, %rd5235;
	add.s64 	%rd5466, %rd5455, %rd5465;
	add.s64 	%rd5467, %rd5466, %rd5461;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4034,%dummy}, %rd5456;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4035}, %rd5456;
	}
	shf.r.wrap.b32 	%r4036, %r4035, %r4034, 14;
	shf.r.wrap.b32 	%r4037, %r4034, %r4035, 14;
	mov.b64 	%rd5468, {%r4037, %r4036};
	shf.r.wrap.b32 	%r4038, %r4035, %r4034, 18;
	shf.r.wrap.b32 	%r4039, %r4034, %r4035, 18;
	mov.b64 	%rd5469, {%r4039, %r4038};
	xor.b64  	%rd5470, %rd5469, %rd5468;
	shf.l.wrap.b32 	%r4040, %r4034, %r4035, 23;
	shf.l.wrap.b32 	%r4041, %r4035, %r4034, 23;
	mov.b64 	%rd5471, {%r4041, %r4040};
	xor.b64  	%rd5472, %rd5470, %rd5471;
	xor.b64  	%rd5473, %rd5224, %rd5200;
	and.b64  	%rd5474, %rd5456, %rd5473;
	xor.b64  	%rd5475, %rd5474, %rd5200;
	add.s64 	%rd5476, %rd5261, %rd5176;
	add.s64 	%rd5477, %rd5476, %rd5856;
	add.s64 	%rd5478, %rd5477, %rd5475;
	add.s64 	%rd5479, %rd5478, %rd5472;
	add.s64 	%rd5480, %rd5479, %rd5187;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4042,%dummy}, %rd5467;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4043}, %rd5467;
	}
	shf.r.wrap.b32 	%r4044, %r4043, %r4042, 28;
	shf.r.wrap.b32 	%r4045, %r4042, %r4043, 28;
	mov.b64 	%rd5481, {%r4045, %r4044};
	shf.l.wrap.b32 	%r4046, %r4042, %r4043, 30;
	shf.l.wrap.b32 	%r4047, %r4043, %r4042, 30;
	mov.b64 	%rd5482, {%r4047, %r4046};
	xor.b64  	%rd5483, %rd5482, %rd5481;
	shf.l.wrap.b32 	%r4048, %r4042, %r4043, 25;
	shf.l.wrap.b32 	%r4049, %r4043, %r4042, 25;
	mov.b64 	%rd5484, {%r4049, %r4048};
	xor.b64  	%rd5485, %rd5483, %rd5484;
	xor.b64  	%rd5486, %rd5467, %rd5211;
	xor.b64  	%rd5487, %rd5467, %rd5235;
	and.b64  	%rd5488, %rd5487, %rd5486;
	xor.b64  	%rd5489, %rd5488, %rd5467;
	add.s64 	%rd5490, %rd5479, %rd5489;
	add.s64 	%rd5491, %rd5490, %rd5485;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4050,%dummy}, %rd5480;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4051}, %rd5480;
	}
	shf.r.wrap.b32 	%r4052, %r4051, %r4050, 14;
	shf.r.wrap.b32 	%r4053, %r4050, %r4051, 14;
	mov.b64 	%rd5492, {%r4053, %r4052};
	shf.r.wrap.b32 	%r4054, %r4051, %r4050, 18;
	shf.r.wrap.b32 	%r4055, %r4050, %r4051, 18;
	mov.b64 	%rd5493, {%r4055, %r4054};
	xor.b64  	%rd5494, %rd5493, %rd5492;
	shf.l.wrap.b32 	%r4056, %r4050, %r4051, 23;
	shf.l.wrap.b32 	%r4057, %r4051, %r4050, 23;
	mov.b64 	%rd5495, {%r4057, %r4056};
	xor.b64  	%rd5496, %rd5494, %rd5495;
	xor.b64  	%rd5497, %rd5456, %rd5224;
	and.b64  	%rd5498, %rd5480, %rd5497;
	xor.b64  	%rd5499, %rd5498, %rd5224;
	add.s64 	%rd5500, %rd5274, %rd5200;
	add.s64 	%rd5501, %rd5500, %rd5855;
	add.s64 	%rd5502, %rd5501, %rd5499;
	add.s64 	%rd5503, %rd5502, %rd5496;
	add.s64 	%rd5504, %rd5503, %rd5211;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4058,%dummy}, %rd5491;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4059}, %rd5491;
	}
	shf.r.wrap.b32 	%r4060, %r4059, %r4058, 28;
	shf.r.wrap.b32 	%r4061, %r4058, %r4059, 28;
	mov.b64 	%rd5505, {%r4061, %r4060};
	shf.l.wrap.b32 	%r4062, %r4058, %r4059, 30;
	shf.l.wrap.b32 	%r4063, %r4059, %r4058, 30;
	mov.b64 	%rd5506, {%r4063, %r4062};
	xor.b64  	%rd5507, %rd5506, %rd5505;
	shf.l.wrap.b32 	%r4064, %r4058, %r4059, 25;
	shf.l.wrap.b32 	%r4065, %r4059, %r4058, 25;
	mov.b64 	%rd5508, {%r4065, %r4064};
	xor.b64  	%rd5509, %rd5507, %rd5508;
	xor.b64  	%rd5510, %rd5491, %rd5235;
	xor.b64  	%rd5511, %rd5491, %rd5467;
	and.b64  	%rd5512, %rd5511, %rd5510;
	xor.b64  	%rd5513, %rd5512, %rd5491;
	add.s64 	%rd5514, %rd5503, %rd5513;
	add.s64 	%rd5515, %rd5514, %rd5509;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4066,%dummy}, %rd5504;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4067}, %rd5504;
	}
	shf.r.wrap.b32 	%r4068, %r4067, %r4066, 14;
	shf.r.wrap.b32 	%r4069, %r4066, %r4067, 14;
	mov.b64 	%rd5516, {%r4069, %r4068};
	shf.r.wrap.b32 	%r4070, %r4067, %r4066, 18;
	shf.r.wrap.b32 	%r4071, %r4066, %r4067, 18;
	mov.b64 	%rd5517, {%r4071, %r4070};
	xor.b64  	%rd5518, %rd5517, %rd5516;
	shf.l.wrap.b32 	%r4072, %r4066, %r4067, 23;
	shf.l.wrap.b32 	%r4073, %r4067, %r4066, 23;
	mov.b64 	%rd5519, {%r4073, %r4072};
	xor.b64  	%rd5520, %rd5518, %rd5519;
	xor.b64  	%rd5521, %rd5480, %rd5456;
	and.b64  	%rd5522, %rd5504, %rd5521;
	xor.b64  	%rd5523, %rd5522, %rd5456;
	add.s64 	%rd5524, %rd5287, %rd5224;
	add.s64 	%rd5525, %rd5524, %rd5854;
	add.s64 	%rd5526, %rd5525, %rd5523;
	add.s64 	%rd5527, %rd5526, %rd5520;
	add.s64 	%rd5528, %rd5527, %rd5235;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4074,%dummy}, %rd5515;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4075}, %rd5515;
	}
	shf.r.wrap.b32 	%r4076, %r4075, %r4074, 28;
	shf.r.wrap.b32 	%r4077, %r4074, %r4075, 28;
	mov.b64 	%rd5529, {%r4077, %r4076};
	shf.l.wrap.b32 	%r4078, %r4074, %r4075, 30;
	shf.l.wrap.b32 	%r4079, %r4075, %r4074, 30;
	mov.b64 	%rd5530, {%r4079, %r4078};
	xor.b64  	%rd5531, %rd5530, %rd5529;
	shf.l.wrap.b32 	%r4080, %r4074, %r4075, 25;
	shf.l.wrap.b32 	%r4081, %r4075, %r4074, 25;
	mov.b64 	%rd5532, {%r4081, %r4080};
	xor.b64  	%rd5533, %rd5531, %rd5532;
	xor.b64  	%rd5534, %rd5515, %rd5467;
	xor.b64  	%rd5535, %rd5515, %rd5491;
	and.b64  	%rd5536, %rd5535, %rd5534;
	xor.b64  	%rd5537, %rd5536, %rd5515;
	add.s64 	%rd5538, %rd5527, %rd5537;
	add.s64 	%rd5539, %rd5538, %rd5533;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4082,%dummy}, %rd5528;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4083}, %rd5528;
	}
	shf.r.wrap.b32 	%r4084, %r4083, %r4082, 14;
	shf.r.wrap.b32 	%r4085, %r4082, %r4083, 14;
	mov.b64 	%rd5540, {%r4085, %r4084};
	shf.r.wrap.b32 	%r4086, %r4083, %r4082, 18;
	shf.r.wrap.b32 	%r4087, %r4082, %r4083, 18;
	mov.b64 	%rd5541, {%r4087, %r4086};
	xor.b64  	%rd5542, %rd5541, %rd5540;
	shf.l.wrap.b32 	%r4088, %r4082, %r4083, 23;
	shf.l.wrap.b32 	%r4089, %r4083, %r4082, 23;
	mov.b64 	%rd5543, {%r4089, %r4088};
	xor.b64  	%rd5544, %rd5542, %rd5543;
	xor.b64  	%rd5545, %rd5504, %rd5480;
	and.b64  	%rd5546, %rd5528, %rd5545;
	xor.b64  	%rd5547, %rd5546, %rd5480;
	add.s64 	%rd5548, %rd5456, %rd5300;
	add.s64 	%rd5549, %rd5548, %rd5853;
	add.s64 	%rd5550, %rd5549, %rd5547;
	add.s64 	%rd5551, %rd5550, %rd5544;
	add.s64 	%rd5552, %rd5551, %rd5467;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4090,%dummy}, %rd5539;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4091}, %rd5539;
	}
	shf.r.wrap.b32 	%r4092, %r4091, %r4090, 28;
	shf.r.wrap.b32 	%r4093, %r4090, %r4091, 28;
	mov.b64 	%rd5553, {%r4093, %r4092};
	shf.l.wrap.b32 	%r4094, %r4090, %r4091, 30;
	shf.l.wrap.b32 	%r4095, %r4091, %r4090, 30;
	mov.b64 	%rd5554, {%r4095, %r4094};
	xor.b64  	%rd5555, %rd5554, %rd5553;
	shf.l.wrap.b32 	%r4096, %r4090, %r4091, 25;
	shf.l.wrap.b32 	%r4097, %r4091, %r4090, 25;
	mov.b64 	%rd5556, {%r4097, %r4096};
	xor.b64  	%rd5557, %rd5555, %rd5556;
	xor.b64  	%rd5558, %rd5539, %rd5491;
	xor.b64  	%rd5559, %rd5539, %rd5515;
	and.b64  	%rd5560, %rd5559, %rd5558;
	xor.b64  	%rd5561, %rd5560, %rd5539;
	add.s64 	%rd5562, %rd5551, %rd5561;
	add.s64 	%rd5563, %rd5562, %rd5557;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4098,%dummy}, %rd5552;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4099}, %rd5552;
	}
	shf.r.wrap.b32 	%r4100, %r4099, %r4098, 14;
	shf.r.wrap.b32 	%r4101, %r4098, %r4099, 14;
	mov.b64 	%rd5564, {%r4101, %r4100};
	shf.r.wrap.b32 	%r4102, %r4099, %r4098, 18;
	shf.r.wrap.b32 	%r4103, %r4098, %r4099, 18;
	mov.b64 	%rd5565, {%r4103, %r4102};
	xor.b64  	%rd5566, %rd5565, %rd5564;
	shf.l.wrap.b32 	%r4104, %r4098, %r4099, 23;
	shf.l.wrap.b32 	%r4105, %r4099, %r4098, 23;
	mov.b64 	%rd5567, {%r4105, %r4104};
	xor.b64  	%rd5568, %rd5566, %rd5567;
	xor.b64  	%rd5569, %rd5528, %rd5504;
	and.b64  	%rd5570, %rd5552, %rd5569;
	xor.b64  	%rd5571, %rd5570, %rd5504;
	add.s64 	%rd5572, %rd5480, %rd5313;
	add.s64 	%rd5573, %rd5572, %rd5852;
	add.s64 	%rd5574, %rd5573, %rd5571;
	add.s64 	%rd5575, %rd5574, %rd5568;
	add.s64 	%rd5576, %rd5575, %rd5491;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4106,%dummy}, %rd5563;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4107}, %rd5563;
	}
	shf.r.wrap.b32 	%r4108, %r4107, %r4106, 28;
	shf.r.wrap.b32 	%r4109, %r4106, %r4107, 28;
	mov.b64 	%rd5577, {%r4109, %r4108};
	shf.l.wrap.b32 	%r4110, %r4106, %r4107, 30;
	shf.l.wrap.b32 	%r4111, %r4107, %r4106, 30;
	mov.b64 	%rd5578, {%r4111, %r4110};
	xor.b64  	%rd5579, %rd5578, %rd5577;
	shf.l.wrap.b32 	%r4112, %r4106, %r4107, 25;
	shf.l.wrap.b32 	%r4113, %r4107, %r4106, 25;
	mov.b64 	%rd5580, {%r4113, %r4112};
	xor.b64  	%rd5581, %rd5579, %rd5580;
	xor.b64  	%rd5582, %rd5563, %rd5515;
	xor.b64  	%rd5583, %rd5563, %rd5539;
	and.b64  	%rd5584, %rd5583, %rd5582;
	xor.b64  	%rd5585, %rd5584, %rd5563;
	add.s64 	%rd5586, %rd5575, %rd5585;
	add.s64 	%rd5587, %rd5586, %rd5581;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4114,%dummy}, %rd5576;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4115}, %rd5576;
	}
	shf.r.wrap.b32 	%r4116, %r4115, %r4114, 14;
	shf.r.wrap.b32 	%r4117, %r4114, %r4115, 14;
	mov.b64 	%rd5588, {%r4117, %r4116};
	shf.r.wrap.b32 	%r4118, %r4115, %r4114, 18;
	shf.r.wrap.b32 	%r4119, %r4114, %r4115, 18;
	mov.b64 	%rd5589, {%r4119, %r4118};
	xor.b64  	%rd5590, %rd5589, %rd5588;
	shf.l.wrap.b32 	%r4120, %r4114, %r4115, 23;
	shf.l.wrap.b32 	%r4121, %r4115, %r4114, 23;
	mov.b64 	%rd5591, {%r4121, %r4120};
	xor.b64  	%rd5592, %rd5590, %rd5591;
	xor.b64  	%rd5593, %rd5552, %rd5528;
	and.b64  	%rd5594, %rd5576, %rd5593;
	xor.b64  	%rd5595, %rd5594, %rd5528;
	add.s64 	%rd5596, %rd5504, %rd5326;
	add.s64 	%rd5597, %rd5596, %rd5851;
	add.s64 	%rd5598, %rd5597, %rd5595;
	add.s64 	%rd5599, %rd5598, %rd5592;
	add.s64 	%rd5600, %rd5599, %rd5515;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4122,%dummy}, %rd5587;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4123}, %rd5587;
	}
	shf.r.wrap.b32 	%r4124, %r4123, %r4122, 28;
	shf.r.wrap.b32 	%r4125, %r4122, %r4123, 28;
	mov.b64 	%rd5601, {%r4125, %r4124};
	shf.l.wrap.b32 	%r4126, %r4122, %r4123, 30;
	shf.l.wrap.b32 	%r4127, %r4123, %r4122, 30;
	mov.b64 	%rd5602, {%r4127, %r4126};
	xor.b64  	%rd5603, %rd5602, %rd5601;
	shf.l.wrap.b32 	%r4128, %r4122, %r4123, 25;
	shf.l.wrap.b32 	%r4129, %r4123, %r4122, 25;
	mov.b64 	%rd5604, {%r4129, %r4128};
	xor.b64  	%rd5605, %rd5603, %rd5604;
	xor.b64  	%rd5606, %rd5587, %rd5539;
	xor.b64  	%rd5607, %rd5587, %rd5563;
	and.b64  	%rd5608, %rd5607, %rd5606;
	xor.b64  	%rd5609, %rd5608, %rd5587;
	add.s64 	%rd5610, %rd5599, %rd5609;
	add.s64 	%rd5611, %rd5610, %rd5605;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4130,%dummy}, %rd5600;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4131}, %rd5600;
	}
	shf.r.wrap.b32 	%r4132, %r4131, %r4130, 14;
	shf.r.wrap.b32 	%r4133, %r4130, %r4131, 14;
	mov.b64 	%rd5612, {%r4133, %r4132};
	shf.r.wrap.b32 	%r4134, %r4131, %r4130, 18;
	shf.r.wrap.b32 	%r4135, %r4130, %r4131, 18;
	mov.b64 	%rd5613, {%r4135, %r4134};
	xor.b64  	%rd5614, %rd5613, %rd5612;
	shf.l.wrap.b32 	%r4136, %r4130, %r4131, 23;
	shf.l.wrap.b32 	%r4137, %r4131, %r4130, 23;
	mov.b64 	%rd5615, {%r4137, %r4136};
	xor.b64  	%rd5616, %rd5614, %rd5615;
	xor.b64  	%rd5617, %rd5576, %rd5552;
	and.b64  	%rd5618, %rd5600, %rd5617;
	xor.b64  	%rd5619, %rd5618, %rd5552;
	add.s64 	%rd5620, %rd5528, %rd5339;
	add.s64 	%rd5621, %rd5620, %rd5850;
	add.s64 	%rd5622, %rd5621, %rd5619;
	add.s64 	%rd5623, %rd5622, %rd5616;
	add.s64 	%rd5624, %rd5623, %rd5539;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4138,%dummy}, %rd5611;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4139}, %rd5611;
	}
	shf.r.wrap.b32 	%r4140, %r4139, %r4138, 28;
	shf.r.wrap.b32 	%r4141, %r4138, %r4139, 28;
	mov.b64 	%rd5625, {%r4141, %r4140};
	shf.l.wrap.b32 	%r4142, %r4138, %r4139, 30;
	shf.l.wrap.b32 	%r4143, %r4139, %r4138, 30;
	mov.b64 	%rd5626, {%r4143, %r4142};
	xor.b64  	%rd5627, %rd5626, %rd5625;
	shf.l.wrap.b32 	%r4144, %r4138, %r4139, 25;
	shf.l.wrap.b32 	%r4145, %r4139, %r4138, 25;
	mov.b64 	%rd5628, {%r4145, %r4144};
	xor.b64  	%rd5629, %rd5627, %rd5628;
	xor.b64  	%rd5630, %rd5611, %rd5563;
	xor.b64  	%rd5631, %rd5611, %rd5587;
	and.b64  	%rd5632, %rd5631, %rd5630;
	xor.b64  	%rd5633, %rd5632, %rd5611;
	add.s64 	%rd5634, %rd5623, %rd5633;
	add.s64 	%rd5635, %rd5634, %rd5629;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4146,%dummy}, %rd5624;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4147}, %rd5624;
	}
	shf.r.wrap.b32 	%r4148, %r4147, %r4146, 14;
	shf.r.wrap.b32 	%r4149, %r4146, %r4147, 14;
	mov.b64 	%rd5636, {%r4149, %r4148};
	shf.r.wrap.b32 	%r4150, %r4147, %r4146, 18;
	shf.r.wrap.b32 	%r4151, %r4146, %r4147, 18;
	mov.b64 	%rd5637, {%r4151, %r4150};
	xor.b64  	%rd5638, %rd5637, %rd5636;
	shf.l.wrap.b32 	%r4152, %r4146, %r4147, 23;
	shf.l.wrap.b32 	%r4153, %r4147, %r4146, 23;
	mov.b64 	%rd5639, {%r4153, %r4152};
	xor.b64  	%rd5640, %rd5638, %rd5639;
	xor.b64  	%rd5641, %rd5600, %rd5576;
	and.b64  	%rd5642, %rd5624, %rd5641;
	xor.b64  	%rd5643, %rd5642, %rd5576;
	add.s64 	%rd5644, %rd5552, %rd5352;
	add.s64 	%rd5645, %rd5644, %rd5849;
	add.s64 	%rd5646, %rd5645, %rd5643;
	add.s64 	%rd5647, %rd5646, %rd5640;
	add.s64 	%rd5648, %rd5647, %rd5563;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4154,%dummy}, %rd5635;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4155}, %rd5635;
	}
	shf.r.wrap.b32 	%r4156, %r4155, %r4154, 28;
	shf.r.wrap.b32 	%r4157, %r4154, %r4155, 28;
	mov.b64 	%rd5649, {%r4157, %r4156};
	shf.l.wrap.b32 	%r4158, %r4154, %r4155, 30;
	shf.l.wrap.b32 	%r4159, %r4155, %r4154, 30;
	mov.b64 	%rd5650, {%r4159, %r4158};
	xor.b64  	%rd5651, %rd5650, %rd5649;
	shf.l.wrap.b32 	%r4160, %r4154, %r4155, 25;
	shf.l.wrap.b32 	%r4161, %r4155, %r4154, 25;
	mov.b64 	%rd5652, {%r4161, %r4160};
	xor.b64  	%rd5653, %rd5651, %rd5652;
	xor.b64  	%rd5654, %rd5635, %rd5587;
	xor.b64  	%rd5655, %rd5635, %rd5611;
	and.b64  	%rd5656, %rd5655, %rd5654;
	xor.b64  	%rd5657, %rd5656, %rd5635;
	add.s64 	%rd5658, %rd5647, %rd5657;
	add.s64 	%rd5659, %rd5658, %rd5653;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4162,%dummy}, %rd5648;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4163}, %rd5648;
	}
	shf.r.wrap.b32 	%r4164, %r4163, %r4162, 14;
	shf.r.wrap.b32 	%r4165, %r4162, %r4163, 14;
	mov.b64 	%rd5660, {%r4165, %r4164};
	shf.r.wrap.b32 	%r4166, %r4163, %r4162, 18;
	shf.r.wrap.b32 	%r4167, %r4162, %r4163, 18;
	mov.b64 	%rd5661, {%r4167, %r4166};
	xor.b64  	%rd5662, %rd5661, %rd5660;
	shf.l.wrap.b32 	%r4168, %r4162, %r4163, 23;
	shf.l.wrap.b32 	%r4169, %r4163, %r4162, 23;
	mov.b64 	%rd5663, {%r4169, %r4168};
	xor.b64  	%rd5664, %rd5662, %rd5663;
	xor.b64  	%rd5665, %rd5624, %rd5600;
	and.b64  	%rd5666, %rd5648, %rd5665;
	xor.b64  	%rd5667, %rd5666, %rd5600;
	add.s64 	%rd5668, %rd5576, %rd5365;
	add.s64 	%rd5669, %rd5668, %rd5848;
	add.s64 	%rd5670, %rd5669, %rd5667;
	add.s64 	%rd5671, %rd5670, %rd5664;
	add.s64 	%rd5672, %rd5671, %rd5587;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4170,%dummy}, %rd5659;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4171}, %rd5659;
	}
	shf.r.wrap.b32 	%r4172, %r4171, %r4170, 28;
	shf.r.wrap.b32 	%r4173, %r4170, %r4171, 28;
	mov.b64 	%rd5673, {%r4173, %r4172};
	shf.l.wrap.b32 	%r4174, %r4170, %r4171, 30;
	shf.l.wrap.b32 	%r4175, %r4171, %r4170, 30;
	mov.b64 	%rd5674, {%r4175, %r4174};
	xor.b64  	%rd5675, %rd5674, %rd5673;
	shf.l.wrap.b32 	%r4176, %r4170, %r4171, 25;
	shf.l.wrap.b32 	%r4177, %r4171, %r4170, 25;
	mov.b64 	%rd5676, {%r4177, %r4176};
	xor.b64  	%rd5677, %rd5675, %rd5676;
	xor.b64  	%rd5678, %rd5659, %rd5611;
	xor.b64  	%rd5679, %rd5659, %rd5635;
	and.b64  	%rd5680, %rd5679, %rd5678;
	xor.b64  	%rd5681, %rd5680, %rd5659;
	add.s64 	%rd5682, %rd5671, %rd5681;
	add.s64 	%rd5683, %rd5682, %rd5677;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4178,%dummy}, %rd5672;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4179}, %rd5672;
	}
	shf.r.wrap.b32 	%r4180, %r4179, %r4178, 14;
	shf.r.wrap.b32 	%r4181, %r4178, %r4179, 14;
	mov.b64 	%rd5684, {%r4181, %r4180};
	shf.r.wrap.b32 	%r4182, %r4179, %r4178, 18;
	shf.r.wrap.b32 	%r4183, %r4178, %r4179, 18;
	mov.b64 	%rd5685, {%r4183, %r4182};
	xor.b64  	%rd5686, %rd5685, %rd5684;
	shf.l.wrap.b32 	%r4184, %r4178, %r4179, 23;
	shf.l.wrap.b32 	%r4185, %r4179, %r4178, 23;
	mov.b64 	%rd5687, {%r4185, %r4184};
	xor.b64  	%rd5688, %rd5686, %rd5687;
	xor.b64  	%rd5689, %rd5648, %rd5624;
	and.b64  	%rd5690, %rd5672, %rd5689;
	xor.b64  	%rd5691, %rd5690, %rd5624;
	add.s64 	%rd5692, %rd5600, %rd5378;
	add.s64 	%rd5693, %rd5692, %rd5847;
	add.s64 	%rd5694, %rd5693, %rd5691;
	add.s64 	%rd5695, %rd5694, %rd5688;
	add.s64 	%rd5696, %rd5695, %rd5611;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4186,%dummy}, %rd5683;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4187}, %rd5683;
	}
	shf.r.wrap.b32 	%r4188, %r4187, %r4186, 28;
	shf.r.wrap.b32 	%r4189, %r4186, %r4187, 28;
	mov.b64 	%rd5697, {%r4189, %r4188};
	shf.l.wrap.b32 	%r4190, %r4186, %r4187, 30;
	shf.l.wrap.b32 	%r4191, %r4187, %r4186, 30;
	mov.b64 	%rd5698, {%r4191, %r4190};
	xor.b64  	%rd5699, %rd5698, %rd5697;
	shf.l.wrap.b32 	%r4192, %r4186, %r4187, 25;
	shf.l.wrap.b32 	%r4193, %r4187, %r4186, 25;
	mov.b64 	%rd5700, {%r4193, %r4192};
	xor.b64  	%rd5701, %rd5699, %rd5700;
	xor.b64  	%rd5702, %rd5683, %rd5635;
	xor.b64  	%rd5703, %rd5683, %rd5659;
	and.b64  	%rd5704, %rd5703, %rd5702;
	xor.b64  	%rd5705, %rd5704, %rd5683;
	add.s64 	%rd5706, %rd5695, %rd5705;
	add.s64 	%rd5707, %rd5706, %rd5701;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4194,%dummy}, %rd5696;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4195}, %rd5696;
	}
	shf.r.wrap.b32 	%r4196, %r4195, %r4194, 14;
	shf.r.wrap.b32 	%r4197, %r4194, %r4195, 14;
	mov.b64 	%rd5708, {%r4197, %r4196};
	shf.r.wrap.b32 	%r4198, %r4195, %r4194, 18;
	shf.r.wrap.b32 	%r4199, %r4194, %r4195, 18;
	mov.b64 	%rd5709, {%r4199, %r4198};
	xor.b64  	%rd5710, %rd5709, %rd5708;
	shf.l.wrap.b32 	%r4200, %r4194, %r4195, 23;
	shf.l.wrap.b32 	%r4201, %r4195, %r4194, 23;
	mov.b64 	%rd5711, {%r4201, %r4200};
	xor.b64  	%rd5712, %rd5710, %rd5711;
	xor.b64  	%rd5713, %rd5672, %rd5648;
	and.b64  	%rd5714, %rd5696, %rd5713;
	xor.b64  	%rd5715, %rd5714, %rd5648;
	add.s64 	%rd5716, %rd5624, %rd5391;
	add.s64 	%rd5717, %rd5716, %rd5846;
	add.s64 	%rd5718, %rd5717, %rd5715;
	add.s64 	%rd5719, %rd5718, %rd5712;
	add.s64 	%rd5720, %rd5719, %rd5635;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4202,%dummy}, %rd5707;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4203}, %rd5707;
	}
	shf.r.wrap.b32 	%r4204, %r4203, %r4202, 28;
	shf.r.wrap.b32 	%r4205, %r4202, %r4203, 28;
	mov.b64 	%rd5721, {%r4205, %r4204};
	shf.l.wrap.b32 	%r4206, %r4202, %r4203, 30;
	shf.l.wrap.b32 	%r4207, %r4203, %r4202, 30;
	mov.b64 	%rd5722, {%r4207, %r4206};
	xor.b64  	%rd5723, %rd5722, %rd5721;
	shf.l.wrap.b32 	%r4208, %r4202, %r4203, 25;
	shf.l.wrap.b32 	%r4209, %r4203, %r4202, 25;
	mov.b64 	%rd5724, {%r4209, %r4208};
	xor.b64  	%rd5725, %rd5723, %rd5724;
	xor.b64  	%rd5726, %rd5707, %rd5659;
	xor.b64  	%rd5727, %rd5707, %rd5683;
	and.b64  	%rd5728, %rd5727, %rd5726;
	xor.b64  	%rd5729, %rd5728, %rd5707;
	add.s64 	%rd5730, %rd5719, %rd5729;
	add.s64 	%rd5731, %rd5730, %rd5725;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4210,%dummy}, %rd5720;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4211}, %rd5720;
	}
	shf.r.wrap.b32 	%r4212, %r4211, %r4210, 14;
	shf.r.wrap.b32 	%r4213, %r4210, %r4211, 14;
	mov.b64 	%rd5732, {%r4213, %r4212};
	shf.r.wrap.b32 	%r4214, %r4211, %r4210, 18;
	shf.r.wrap.b32 	%r4215, %r4210, %r4211, 18;
	mov.b64 	%rd5733, {%r4215, %r4214};
	xor.b64  	%rd5734, %rd5733, %rd5732;
	shf.l.wrap.b32 	%r4216, %r4210, %r4211, 23;
	shf.l.wrap.b32 	%r4217, %r4211, %r4210, 23;
	mov.b64 	%rd5735, {%r4217, %r4216};
	xor.b64  	%rd5736, %rd5734, %rd5735;
	xor.b64  	%rd5737, %rd5696, %rd5672;
	and.b64  	%rd5738, %rd5720, %rd5737;
	xor.b64  	%rd5739, %rd5738, %rd5672;
	add.s64 	%rd5740, %rd5648, %rd5404;
	add.s64 	%rd5741, %rd5740, %rd5845;
	add.s64 	%rd5742, %rd5741, %rd5739;
	add.s64 	%rd5743, %rd5742, %rd5736;
	add.s64 	%rd5744, %rd5743, %rd5659;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4218,%dummy}, %rd5731;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4219}, %rd5731;
	}
	shf.r.wrap.b32 	%r4220, %r4219, %r4218, 28;
	shf.r.wrap.b32 	%r4221, %r4218, %r4219, 28;
	mov.b64 	%rd5745, {%r4221, %r4220};
	shf.l.wrap.b32 	%r4222, %r4218, %r4219, 30;
	shf.l.wrap.b32 	%r4223, %r4219, %r4218, 30;
	mov.b64 	%rd5746, {%r4223, %r4222};
	xor.b64  	%rd5747, %rd5746, %rd5745;
	shf.l.wrap.b32 	%r4224, %r4218, %r4219, 25;
	shf.l.wrap.b32 	%r4225, %r4219, %r4218, 25;
	mov.b64 	%rd5748, {%r4225, %r4224};
	xor.b64  	%rd5749, %rd5747, %rd5748;
	xor.b64  	%rd5750, %rd5731, %rd5683;
	xor.b64  	%rd5751, %rd5731, %rd5707;
	and.b64  	%rd5752, %rd5751, %rd5750;
	xor.b64  	%rd5753, %rd5752, %rd5731;
	add.s64 	%rd5754, %rd5743, %rd5753;
	add.s64 	%rd5755, %rd5754, %rd5749;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4226,%dummy}, %rd5744;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4227}, %rd5744;
	}
	shf.r.wrap.b32 	%r4228, %r4227, %r4226, 14;
	shf.r.wrap.b32 	%r4229, %r4226, %r4227, 14;
	mov.b64 	%rd5756, {%r4229, %r4228};
	shf.r.wrap.b32 	%r4230, %r4227, %r4226, 18;
	shf.r.wrap.b32 	%r4231, %r4226, %r4227, 18;
	mov.b64 	%rd5757, {%r4231, %r4230};
	xor.b64  	%rd5758, %rd5757, %rd5756;
	shf.l.wrap.b32 	%r4232, %r4226, %r4227, 23;
	shf.l.wrap.b32 	%r4233, %r4227, %r4226, 23;
	mov.b64 	%rd5759, {%r4233, %r4232};
	xor.b64  	%rd5760, %rd5758, %rd5759;
	xor.b64  	%rd5761, %rd5720, %rd5696;
	and.b64  	%rd5762, %rd5744, %rd5761;
	xor.b64  	%rd5763, %rd5762, %rd5696;
	add.s64 	%rd5764, %rd5672, %rd5417;
	add.s64 	%rd5765, %rd5764, %rd5844;
	add.s64 	%rd5766, %rd5765, %rd5763;
	add.s64 	%rd5767, %rd5766, %rd5760;
	add.s64 	%rd5768, %rd5767, %rd5683;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4234,%dummy}, %rd5755;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4235}, %rd5755;
	}
	shf.r.wrap.b32 	%r4236, %r4235, %r4234, 28;
	shf.r.wrap.b32 	%r4237, %r4234, %r4235, 28;
	mov.b64 	%rd5769, {%r4237, %r4236};
	shf.l.wrap.b32 	%r4238, %r4234, %r4235, 30;
	shf.l.wrap.b32 	%r4239, %r4235, %r4234, 30;
	mov.b64 	%rd5770, {%r4239, %r4238};
	xor.b64  	%rd5771, %rd5770, %rd5769;
	shf.l.wrap.b32 	%r4240, %r4234, %r4235, 25;
	shf.l.wrap.b32 	%r4241, %r4235, %r4234, 25;
	mov.b64 	%rd5772, {%r4241, %r4240};
	xor.b64  	%rd5773, %rd5771, %rd5772;
	xor.b64  	%rd5774, %rd5755, %rd5707;
	xor.b64  	%rd5775, %rd5755, %rd5731;
	and.b64  	%rd5776, %rd5775, %rd5774;
	xor.b64  	%rd5777, %rd5776, %rd5755;
	add.s64 	%rd5778, %rd5767, %rd5777;
	add.s64 	%rd5779, %rd5778, %rd5773;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4242,%dummy}, %rd5768;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4243}, %rd5768;
	}
	shf.r.wrap.b32 	%r4244, %r4243, %r4242, 14;
	shf.r.wrap.b32 	%r4245, %r4242, %r4243, 14;
	mov.b64 	%rd5780, {%r4245, %r4244};
	shf.r.wrap.b32 	%r4246, %r4243, %r4242, 18;
	shf.r.wrap.b32 	%r4247, %r4242, %r4243, 18;
	mov.b64 	%rd5781, {%r4247, %r4246};
	xor.b64  	%rd5782, %rd5781, %rd5780;
	shf.l.wrap.b32 	%r4248, %r4242, %r4243, 23;
	shf.l.wrap.b32 	%r4249, %r4243, %r4242, 23;
	mov.b64 	%rd5783, {%r4249, %r4248};
	xor.b64  	%rd5784, %rd5782, %rd5783;
	xor.b64  	%rd5785, %rd5744, %rd5720;
	and.b64  	%rd5786, %rd5768, %rd5785;
	xor.b64  	%rd5787, %rd5786, %rd5720;
	add.s64 	%rd5788, %rd5696, %rd5430;
	add.s64 	%rd5789, %rd5788, %rd5843;
	add.s64 	%rd5790, %rd5789, %rd5787;
	add.s64 	%rd5791, %rd5790, %rd5784;
	add.s64 	%rd5792, %rd5791, %rd5707;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4250,%dummy}, %rd5779;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4251}, %rd5779;
	}
	shf.r.wrap.b32 	%r4252, %r4251, %r4250, 28;
	shf.r.wrap.b32 	%r4253, %r4250, %r4251, 28;
	mov.b64 	%rd5793, {%r4253, %r4252};
	shf.l.wrap.b32 	%r4254, %r4250, %r4251, 30;
	shf.l.wrap.b32 	%r4255, %r4251, %r4250, 30;
	mov.b64 	%rd5794, {%r4255, %r4254};
	xor.b64  	%rd5795, %rd5794, %rd5793;
	shf.l.wrap.b32 	%r4256, %r4250, %r4251, 25;
	shf.l.wrap.b32 	%r4257, %r4251, %r4250, 25;
	mov.b64 	%rd5796, {%r4257, %r4256};
	xor.b64  	%rd5797, %rd5795, %rd5796;
	xor.b64  	%rd5798, %rd5779, %rd5731;
	xor.b64  	%rd5799, %rd5779, %rd5755;
	and.b64  	%rd5800, %rd5799, %rd5798;
	xor.b64  	%rd5801, %rd5800, %rd5779;
	add.s64 	%rd5802, %rd5791, %rd5801;
	add.s64 	%rd5803, %rd5802, %rd5797;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4258,%dummy}, %rd5792;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4259}, %rd5792;
	}
	shf.r.wrap.b32 	%r4260, %r4259, %r4258, 14;
	shf.r.wrap.b32 	%r4261, %r4258, %r4259, 14;
	mov.b64 	%rd5804, {%r4261, %r4260};
	shf.r.wrap.b32 	%r4262, %r4259, %r4258, 18;
	shf.r.wrap.b32 	%r4263, %r4258, %r4259, 18;
	mov.b64 	%rd5805, {%r4263, %r4262};
	xor.b64  	%rd5806, %rd5805, %rd5804;
	shf.l.wrap.b32 	%r4264, %r4258, %r4259, 23;
	shf.l.wrap.b32 	%r4265, %r4259, %r4258, 23;
	mov.b64 	%rd5807, {%r4265, %r4264};
	xor.b64  	%rd5808, %rd5806, %rd5807;
	xor.b64  	%rd5809, %rd5768, %rd5744;
	and.b64  	%rd5810, %rd5792, %rd5809;
	xor.b64  	%rd5811, %rd5810, %rd5744;
	add.s64 	%rd5812, %rd5720, %rd5443;
	add.s64 	%rd5813, %rd5812, %rd5842;
	add.s64 	%rd5814, %rd5813, %rd5811;
	add.s64 	%rd5815, %rd5814, %rd5808;
	add.s64 	%rd5816, %rd5815, %rd5731;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4266,%dummy}, %rd5803;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4267}, %rd5803;
	}
	shf.r.wrap.b32 	%r4268, %r4267, %r4266, 28;
	shf.r.wrap.b32 	%r4269, %r4266, %r4267, 28;
	mov.b64 	%rd5817, {%r4269, %r4268};
	shf.l.wrap.b32 	%r4270, %r4266, %r4267, 30;
	shf.l.wrap.b32 	%r4271, %r4267, %r4266, 30;
	mov.b64 	%rd5818, {%r4271, %r4270};
	xor.b64  	%rd5819, %rd5818, %rd5817;
	shf.l.wrap.b32 	%r4272, %r4266, %r4267, 25;
	shf.l.wrap.b32 	%r4273, %r4267, %r4266, 25;
	mov.b64 	%rd5820, {%r4273, %r4272};
	xor.b64  	%rd5821, %rd5819, %rd5820;
	xor.b64  	%rd5822, %rd5803, %rd5755;
	xor.b64  	%rd5823, %rd5803, %rd5779;
	and.b64  	%rd5824, %rd5823, %rd5822;
	xor.b64  	%rd5825, %rd5824, %rd5803;
	add.s64 	%rd5826, %rd5815, %rd5825;
	add.s64 	%rd5827, %rd5826, %rd5821;
	add.s64 	%rd5828, %rd5929, %rd5827;
	st.local.u64 	[%rd5837], %rd5828;
	add.s64 	%rd5829, %rd5928, %rd5803;
	st.local.u64 	[%rd5836], %rd5829;
	add.s64 	%rd5830, %rd5927, %rd5779;
	st.local.u64 	[%rd5836+8], %rd5830;
	add.s64 	%rd5831, %rd5926, %rd5755;
	st.local.u64 	[%rd5836+16], %rd5831;
	add.s64 	%rd5832, %rd5925, %rd5816;
	st.local.u64 	[%rd5836+24], %rd5832;
	add.s64 	%rd5833, %rd5924, %rd5792;
	st.local.u64 	[%rd5836+32], %rd5833;
	add.s64 	%rd5834, %rd5923, %rd5768;
	st.local.u64 	[%rd5836+40], %rd5834;
	add.s64 	%rd5835, %rd5922, %rd5744;
	st.local.u64 	[%rd5836+48], %rd5835;
	ret;
}

	// .globl	m09600_init
.entry m09600_init(
	.param .u64 .ptr .global .align 4 m09600_init_param_0,
	.param .u64 .ptr .global .align 4 m09600_init_param_1,
	.param .u64 .ptr .global .align 4 m09600_init_param_2,
	.param .u64 .ptr .global .align 4 m09600_init_param_3,
	.param .u64 .ptr .global .align 8 m09600_init_param_4,
	.param .u64 .ptr .global .align 1 m09600_init_param_5,
	.param .u64 .ptr .global .align 4 m09600_init_param_6,
	.param .u64 .ptr .global .align 4 m09600_init_param_7,
	.param .u64 .ptr .global .align 4 m09600_init_param_8,
	.param .u64 .ptr .global .align 4 m09600_init_param_9,
	.param .u64 .ptr .global .align 4 m09600_init_param_10,
	.param .u64 .ptr .global .align 4 m09600_init_param_11,
	.param .u64 .ptr .global .align 4 m09600_init_param_12,
	.param .u64 .ptr .global .align 4 m09600_init_param_13,
	.param .u64 .ptr .global .align 4 m09600_init_param_14,
	.param .u64 .ptr .global .align 4 m09600_init_param_15,
	.param .u64 .ptr .global .align 4 m09600_init_param_16,
	.param .u64 .ptr .global .align 4 m09600_init_param_17,
	.param .u64 .ptr .global .align 4 m09600_init_param_18,
	.param .u64 .ptr .global .align 4 m09600_init_param_19,
	.param .u64 .ptr .global .align 4 m09600_init_param_20,
	.param .u64 .ptr .global .align 4 m09600_init_param_21,
	.param .u64 .ptr .global .align 4 m09600_init_param_22,
	.param .u64 .ptr .global .align 4 m09600_init_param_23,
	.param .u32 m09600_init_param_24,
	.param .u32 m09600_init_param_25,
	.param .u32 m09600_init_param_26,
	.param .u32 m09600_init_param_27,
	.param .u32 m09600_init_param_28,
	.param .u32 m09600_init_param_29,
	.param .u32 m09600_init_param_30,
	.param .u32 m09600_init_param_31,
	.param .u32 m09600_init_param_32,
	.param .u32 m09600_init_param_33,
	.param .u64 m09600_init_param_34
)
{
	.local .align 16 .b8 	__local_depot4[336];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<242>;
	.reg .b32 	%r<12374>;
	.reg .b64 	%rd<8846>;


	mov.u64 	%SPL, __local_depot4;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd270, [m09600_init_param_17];
	ld.param.u32 	%r638, [m09600_init_param_27];
	ld.param.u64 	%rd271, [m09600_init_param_34];
	add.u64 	%rd272, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd272;
	add.u64 	%rd273, %SP, 16;
	cvta.to.local.u64 	%rd2, %rd273;
	add.u64 	%rd274, %SP, 32;
	cvta.to.local.u64 	%rd3, %rd274;
	add.u64 	%rd275, %SP, 48;
	cvta.to.local.u64 	%rd4, %rd275;
	add.u64 	%rd276, %SP, 64;
	cvta.to.local.u64 	%rd5, %rd276;
	add.u64 	%rd277, %SP, 80;
	cvta.to.local.u64 	%rd6, %rd277;
	add.u64 	%rd278, %SP, 96;
	cvta.to.local.u64 	%rd7, %rd278;
	add.u64 	%rd279, %SP, 112;
	cvta.to.local.u64 	%rd8, %rd279;
	add.u64 	%rd280, %SP, 128;
	cvta.to.local.u64 	%rd9, %rd280;
	mov.u32 	%r639, %ctaid.x;
	mov.u32 	%r640, %ntid.x;
	mov.b32	%r641, %envreg3;
	mad.lo.s32 	%r642, %r639, %r640, %r641;
	mov.u32 	%r643, %tid.x;
	add.s32 	%r1, %r642, %r643;
	cvt.s64.s32	%rd281, %r1;
	setp.ge.u64	%p1, %rd281, %rd271;
	@%p1 bra 	BB4_326;

	mov.u64 	%rd282, 7640891576956012808;
	st.local.u64 	[%rd9], %rd282;
	add.s64 	%rd10, %rd9, 8;
	mov.u64 	%rd283, -4942790177534073029;
	st.local.u64 	[%rd9+8], %rd283;
	mov.u64 	%rd284, 4354685564936845355;
	st.local.u64 	[%rd9+16], %rd284;
	mov.u64 	%rd285, -6534734903238641935;
	st.local.u64 	[%rd9+24], %rd285;
	mov.u64 	%rd286, 5840696475078001361;
	st.local.u64 	[%rd9+32], %rd286;
	mov.u64 	%rd287, -7276294671716946913;
	st.local.u64 	[%rd9+40], %rd287;
	mov.u64 	%rd288, 2270897969802886507;
	st.local.u64 	[%rd9+48], %rd288;
	mov.u64 	%rd289, 6620516959819538809;
	st.local.u64 	[%rd9+56], %rd289;
	add.s64 	%rd11, %rd9, 64;
	mov.u32 	%r12308, 0;
	st.local.v2.u32 	[%rd9+64], {%r12308, %r12308};
	add.s64 	%rd12, %rd9, 72;
	st.local.v2.u32 	[%rd9+72], {%r12308, %r12308};
	add.s64 	%rd13, %rd9, 80;
	st.local.v2.u32 	[%rd9+80], {%r12308, %r12308};
	add.s64 	%rd14, %rd9, 88;
	st.local.v2.u32 	[%rd9+88], {%r12308, %r12308};
	add.s64 	%rd15, %rd9, 96;
	st.local.v2.u32 	[%rd9+96], {%r12308, %r12308};
	add.s64 	%rd16, %rd9, 104;
	st.local.v2.u32 	[%rd9+104], {%r12308, %r12308};
	add.s64 	%rd17, %rd9, 112;
	st.local.v2.u32 	[%rd9+112], {%r12308, %r12308};
	add.s64 	%rd18, %rd9, 120;
	st.local.v2.u32 	[%rd9+120], {%r12308, %r12308};
	add.s64 	%rd19, %rd9, 128;
	st.local.v2.u32 	[%rd9+128], {%r12308, %r12308};
	add.s64 	%rd20, %rd9, 136;
	st.local.v2.u32 	[%rd9+136], {%r12308, %r12308};
	add.s64 	%rd21, %rd9, 144;
	st.local.v2.u32 	[%rd9+144], {%r12308, %r12308};
	add.s64 	%rd22, %rd9, 152;
	st.local.v2.u32 	[%rd9+152], {%r12308, %r12308};
	add.s64 	%rd23, %rd9, 160;
	st.local.v2.u32 	[%rd9+160], {%r12308, %r12308};
	add.s64 	%rd24, %rd9, 168;
	st.local.v2.u32 	[%rd9+168], {%r12308, %r12308};
	add.s64 	%rd25, %rd9, 176;
	st.local.v2.u32 	[%rd9+176], {%r12308, %r12308};
	add.s64 	%rd26, %rd9, 184;
	st.local.v2.u32 	[%rd9+184], {%r12308, %r12308};
	st.local.u32 	[%rd9+192], %r12308;
	cvt.u64.u32	%rd27, %r638;
	mul.wide.u32 	%rd290, %r638, 564;
	add.s64 	%rd291, %rd270, %rd290;
	ld.global.u32 	%r2, [%rd291+512];
	add.s64 	%rd28, %rd1, 4;
	add.s64 	%rd29, %rd2, 4;
	add.s64 	%rd30, %rd3, 4;
	add.s64 	%rd31, %rd4, 4;
	add.s64 	%rd32, %rd5, 4;
	add.s64 	%rd33, %rd6, 4;
	add.s64 	%rd34, %rd7, 4;
	add.s64 	%rd35, %rd8, 4;
	ld.const.u64 	%rd36, [k_sha512];
	ld.const.u64 	%rd37, [k_sha512+8];
	ld.const.u64 	%rd38, [k_sha512+16];
	ld.const.u64 	%rd39, [k_sha512+24];
	ld.const.u64 	%rd40, [k_sha512+32];
	ld.const.u64 	%rd41, [k_sha512+40];
	ld.const.u64 	%rd42, [k_sha512+48];
	ld.const.u64 	%rd43, [k_sha512+56];
	ld.const.u64 	%rd44, [k_sha512+64];
	ld.const.u64 	%rd45, [k_sha512+72];
	ld.const.u64 	%rd46, [k_sha512+80];
	ld.const.u64 	%rd47, [k_sha512+88];
	ld.const.u64 	%rd48, [k_sha512+96];
	ld.const.u64 	%rd49, [k_sha512+104];
	ld.const.u64 	%rd50, [k_sha512+112];
	ld.const.u64 	%rd51, [k_sha512+120];
	mul.lo.s64 	%rd292, %rd27, 564;
	add.s64 	%rd293, %rd270, %rd292;
	mov.u32 	%r12309, %r12308;
	bra.uni 	BB4_2;

BB4_413:
	ld.local.u32 	%r10252, [%rd10+56];
	ld.local.u32 	%r10253, [%rd11+4];
	ld.local.u32 	%r10254, [%rd10+64];
	ld.local.u32 	%r10255, [%rd12+4];
	ld.local.v2.u32 	{%r10256, %r10257}, [%rd28+4];
	ld.local.u32 	%r10260, [%rd10+72];
	ld.local.u32 	%r10261, [%rd2];
	ld.local.u32 	%r10262, [%rd13+4];
	ld.local.u32 	%r10263, [%rd29];
	ld.local.u32 	%r10264, [%rd10+80];
	ld.local.u32 	%r10265, [%rd14+4];
	ld.local.v2.u32 	{%r10266, %r10267}, [%rd29+4];
	ld.local.u32 	%r10270, [%rd10+88];
	ld.local.u32 	%r10271, [%rd3];
	ld.local.u32 	%r10272, [%rd15+4];
	ld.local.u32 	%r10273, [%rd30];
	ld.local.u32 	%r10274, [%rd10+96];
	ld.local.u32 	%r10275, [%rd16+4];
	ld.local.v2.u32 	{%r10276, %r10277}, [%rd30+4];
	ld.local.u32 	%r10280, [%rd10+104];
	ld.local.u32 	%r10281, [%rd4];
	ld.local.u32 	%r10282, [%rd17+4];
	ld.local.u32 	%r10283, [%rd31];
	ld.local.u32 	%r10284, [%rd10+112];
	ld.local.u32 	%r10285, [%rd18+4];
	ld.local.v2.u32 	{%r10286, %r10287}, [%rd31+4];
	ld.local.u32 	%r10290, [%rd10+120];
	ld.local.u32 	%r10291, [%rd5];
	ld.local.u32 	%r10292, [%rd19+4];
	ld.local.u32 	%r10293, [%rd32];
	ld.local.u32 	%r10294, [%rd10+128];
	ld.local.u32 	%r10295, [%rd20+4];
	ld.local.v2.u32 	{%r10296, %r10297}, [%rd32+4];
	ld.local.u32 	%r10300, [%rd10+136];
	ld.local.u32 	%r10301, [%rd6];
	ld.local.u32 	%r10302, [%rd21+4];
	ld.local.u32 	%r10303, [%rd33];
	ld.local.u32 	%r10304, [%rd10+144];
	ld.local.u32 	%r10305, [%rd22+4];
	ld.local.v2.u32 	{%r10306, %r10307}, [%rd33+4];
	ld.local.u32 	%r10310, [%rd10+152];
	ld.local.u32 	%r10311, [%rd7];
	ld.local.u32 	%r10312, [%rd23+4];
	ld.local.u32 	%r10313, [%rd34];
	ld.local.u32 	%r10314, [%rd10+160];
	ld.local.u32 	%r10315, [%rd24+4];
	ld.local.v2.u32 	{%r10316, %r10317}, [%rd34+4];
	ld.local.u32 	%r10320, [%rd10+168];
	ld.local.u32 	%r10321, [%rd8];
	ld.local.u32 	%r10322, [%rd25+4];
	ld.local.u32 	%r10323, [%rd35];
	ld.local.u32 	%r10324, [%rd10+176];
	ld.local.u32 	%r10325, [%rd26+4];
	ld.local.v2.u32 	{%r10326, %r10327}, [%rd35+4];
	or.b32  	%r10330, %r10252, %r12341;
	or.b32  	%r10331, %r10253, %r12340;
	mov.b64	%rd5915, {%r10331, %r10330};
	or.b32  	%r10332, %r10254, %r10256;
	or.b32  	%r10333, %r10255, %r10257;
	mov.b64	%rd5916, {%r10333, %r10332};
	or.b32  	%r10334, %r10260, %r10261;
	or.b32  	%r10335, %r10262, %r10263;
	mov.b64	%rd5917, {%r10335, %r10334};
	or.b32  	%r10336, %r10264, %r10266;
	or.b32  	%r10337, %r10265, %r10267;
	mov.b64	%rd5918, {%r10337, %r10336};
	or.b32  	%r10338, %r10270, %r10271;
	or.b32  	%r10339, %r10272, %r10273;
	mov.b64	%rd5919, {%r10339, %r10338};
	or.b32  	%r10340, %r10274, %r10276;
	or.b32  	%r10341, %r10275, %r10277;
	mov.b64	%rd5920, {%r10341, %r10340};
	or.b32  	%r10342, %r10280, %r10281;
	or.b32  	%r10343, %r10282, %r10283;
	mov.b64	%rd5921, {%r10343, %r10342};
	or.b32  	%r10344, %r10284, %r10286;
	or.b32  	%r10345, %r10285, %r10287;
	mov.b64	%rd5922, {%r10345, %r10344};
	or.b32  	%r10346, %r10290, %r10291;
	or.b32  	%r10347, %r10292, %r10293;
	mov.b64	%rd5923, {%r10347, %r10346};
	or.b32  	%r10348, %r10294, %r10296;
	or.b32  	%r10349, %r10295, %r10297;
	mov.b64	%rd5924, {%r10349, %r10348};
	or.b32  	%r10350, %r10300, %r10301;
	or.b32  	%r10351, %r10302, %r10303;
	mov.b64	%rd5925, {%r10351, %r10350};
	or.b32  	%r10352, %r10304, %r10306;
	or.b32  	%r10353, %r10305, %r10307;
	mov.b64	%rd5926, {%r10353, %r10352};
	or.b32  	%r10354, %r10310, %r10311;
	or.b32  	%r10355, %r10312, %r10313;
	mov.b64	%rd5927, {%r10355, %r10354};
	or.b32  	%r10356, %r10314, %r10316;
	or.b32  	%r10357, %r10315, %r10317;
	mov.b64	%rd5928, {%r10357, %r10356};
	or.b32  	%r10358, %r10320, %r10321;
	or.b32  	%r10359, %r10322, %r10323;
	mov.b64	%rd5929, {%r10359, %r10358};
	or.b32  	%r10360, %r10324, %r10326;
	or.b32  	%r10361, %r10325, %r10327;
	mov.b64	%rd5930, {%r10361, %r10360};
	ld.local.u64 	%rd5931, [%rd10+24];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10362,%dummy}, %rd5931;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10363}, %rd5931;
	}
	shf.r.wrap.b32 	%r10364, %r10363, %r10362, 14;
	shf.r.wrap.b32 	%r10365, %r10362, %r10363, 14;
	mov.b64 	%rd5932, {%r10365, %r10364};
	shf.r.wrap.b32 	%r10366, %r10363, %r10362, 18;
	shf.r.wrap.b32 	%r10367, %r10362, %r10363, 18;
	mov.b64 	%rd5933, {%r10367, %r10366};
	xor.b64  	%rd5934, %rd5933, %rd5932;
	shf.l.wrap.b32 	%r10368, %r10362, %r10363, 23;
	shf.l.wrap.b32 	%r10369, %r10363, %r10362, 23;
	mov.b64 	%rd5935, {%r10369, %r10368};
	xor.b64  	%rd5936, %rd5934, %rd5935;
	ld.local.u64 	%rd5937, [%rd10+40];
	ld.local.u64 	%rd5938, [%rd10+32];
	xor.b64  	%rd5939, %rd5937, %rd5938;
	and.b64  	%rd5940, %rd5939, %rd5931;
	xor.b64  	%rd5941, %rd5940, %rd5937;
	ld.local.u64 	%rd5942, [%rd10+48];
	add.s64 	%rd5943, %rd5941, %rd5942;
	add.s64 	%rd5944, %rd5943, %rd5915;
	add.s64 	%rd5945, %rd5944, %rd36;
	add.s64 	%rd5946, %rd5945, %rd5936;
	ld.local.u64 	%rd5947, [%rd10+16];
	add.s64 	%rd5948, %rd5946, %rd5947;
	ld.local.u64 	%rd5949, [%rd9];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10370,%dummy}, %rd5949;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10371}, %rd5949;
	}
	shf.r.wrap.b32 	%r10372, %r10371, %r10370, 28;
	shf.r.wrap.b32 	%r10373, %r10370, %r10371, 28;
	mov.b64 	%rd5950, {%r10373, %r10372};
	shf.l.wrap.b32 	%r10374, %r10370, %r10371, 30;
	shf.l.wrap.b32 	%r10375, %r10371, %r10370, 30;
	mov.b64 	%rd5951, {%r10375, %r10374};
	xor.b64  	%rd5952, %rd5951, %rd5950;
	shf.l.wrap.b32 	%r10376, %r10370, %r10371, 25;
	shf.l.wrap.b32 	%r10377, %r10371, %r10370, 25;
	mov.b64 	%rd5953, {%r10377, %r10376};
	xor.b64  	%rd5954, %rd5952, %rd5953;
	ld.local.u64 	%rd5955, [%rd10+8];
	xor.b64  	%rd5956, %rd5955, %rd5949;
	ld.local.u64 	%rd5957, [%rd10];
	xor.b64  	%rd5958, %rd5957, %rd5949;
	and.b64  	%rd5959, %rd5956, %rd5958;
	xor.b64  	%rd5960, %rd5959, %rd5949;
	add.s64 	%rd5961, %rd5946, %rd5960;
	add.s64 	%rd5962, %rd5961, %rd5954;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10378,%dummy}, %rd5948;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10379}, %rd5948;
	}
	shf.r.wrap.b32 	%r10380, %r10379, %r10378, 14;
	shf.r.wrap.b32 	%r10381, %r10378, %r10379, 14;
	mov.b64 	%rd5963, {%r10381, %r10380};
	shf.r.wrap.b32 	%r10382, %r10379, %r10378, 18;
	shf.r.wrap.b32 	%r10383, %r10378, %r10379, 18;
	mov.b64 	%rd5964, {%r10383, %r10382};
	xor.b64  	%rd5965, %rd5964, %rd5963;
	shf.l.wrap.b32 	%r10384, %r10378, %r10379, 23;
	shf.l.wrap.b32 	%r10385, %r10379, %r10378, 23;
	mov.b64 	%rd5966, {%r10385, %r10384};
	xor.b64  	%rd5967, %rd5965, %rd5966;
	xor.b64  	%rd5968, %rd5938, %rd5931;
	and.b64  	%rd5969, %rd5948, %rd5968;
	xor.b64  	%rd5970, %rd5969, %rd5938;
	add.s64 	%rd5971, %rd5916, %rd5937;
	add.s64 	%rd5972, %rd5971, %rd37;
	add.s64 	%rd5973, %rd5972, %rd5970;
	add.s64 	%rd5974, %rd5973, %rd5967;
	add.s64 	%rd5975, %rd5974, %rd5955;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10386,%dummy}, %rd5962;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10387}, %rd5962;
	}
	shf.r.wrap.b32 	%r10388, %r10387, %r10386, 28;
	shf.r.wrap.b32 	%r10389, %r10386, %r10387, 28;
	mov.b64 	%rd5976, {%r10389, %r10388};
	shf.l.wrap.b32 	%r10390, %r10386, %r10387, 30;
	shf.l.wrap.b32 	%r10391, %r10387, %r10386, 30;
	mov.b64 	%rd5977, {%r10391, %r10390};
	xor.b64  	%rd5978, %rd5977, %rd5976;
	shf.l.wrap.b32 	%r10392, %r10386, %r10387, 25;
	shf.l.wrap.b32 	%r10393, %r10387, %r10386, 25;
	mov.b64 	%rd5979, {%r10393, %r10392};
	xor.b64  	%rd5980, %rd5978, %rd5979;
	xor.b64  	%rd5981, %rd5962, %rd5957;
	xor.b64  	%rd5982, %rd5962, %rd5949;
	and.b64  	%rd5983, %rd5982, %rd5981;
	xor.b64  	%rd5984, %rd5983, %rd5962;
	add.s64 	%rd5985, %rd5974, %rd5984;
	add.s64 	%rd5986, %rd5985, %rd5980;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10394,%dummy}, %rd5975;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10395}, %rd5975;
	}
	shf.r.wrap.b32 	%r10396, %r10395, %r10394, 14;
	shf.r.wrap.b32 	%r10397, %r10394, %r10395, 14;
	mov.b64 	%rd5987, {%r10397, %r10396};
	shf.r.wrap.b32 	%r10398, %r10395, %r10394, 18;
	shf.r.wrap.b32 	%r10399, %r10394, %r10395, 18;
	mov.b64 	%rd5988, {%r10399, %r10398};
	xor.b64  	%rd5989, %rd5988, %rd5987;
	shf.l.wrap.b32 	%r10400, %r10394, %r10395, 23;
	shf.l.wrap.b32 	%r10401, %r10395, %r10394, 23;
	mov.b64 	%rd5990, {%r10401, %r10400};
	xor.b64  	%rd5991, %rd5989, %rd5990;
	xor.b64  	%rd5992, %rd5948, %rd5931;
	and.b64  	%rd5993, %rd5975, %rd5992;
	xor.b64  	%rd5994, %rd5993, %rd5931;
	add.s64 	%rd5995, %rd5917, %rd5938;
	add.s64 	%rd5996, %rd5995, %rd38;
	add.s64 	%rd5997, %rd5996, %rd5994;
	add.s64 	%rd5998, %rd5997, %rd5991;
	add.s64 	%rd5999, %rd5998, %rd5957;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10402,%dummy}, %rd5986;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10403}, %rd5986;
	}
	shf.r.wrap.b32 	%r10404, %r10403, %r10402, 28;
	shf.r.wrap.b32 	%r10405, %r10402, %r10403, 28;
	mov.b64 	%rd6000, {%r10405, %r10404};
	shf.l.wrap.b32 	%r10406, %r10402, %r10403, 30;
	shf.l.wrap.b32 	%r10407, %r10403, %r10402, 30;
	mov.b64 	%rd6001, {%r10407, %r10406};
	xor.b64  	%rd6002, %rd6001, %rd6000;
	shf.l.wrap.b32 	%r10408, %r10402, %r10403, 25;
	shf.l.wrap.b32 	%r10409, %r10403, %r10402, 25;
	mov.b64 	%rd6003, {%r10409, %r10408};
	xor.b64  	%rd6004, %rd6002, %rd6003;
	xor.b64  	%rd6005, %rd5986, %rd5949;
	xor.b64  	%rd6006, %rd5986, %rd5962;
	and.b64  	%rd6007, %rd6006, %rd6005;
	xor.b64  	%rd6008, %rd6007, %rd5986;
	add.s64 	%rd6009, %rd5998, %rd6008;
	add.s64 	%rd6010, %rd6009, %rd6004;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10410,%dummy}, %rd5999;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10411}, %rd5999;
	}
	shf.r.wrap.b32 	%r10412, %r10411, %r10410, 14;
	shf.r.wrap.b32 	%r10413, %r10410, %r10411, 14;
	mov.b64 	%rd6011, {%r10413, %r10412};
	shf.r.wrap.b32 	%r10414, %r10411, %r10410, 18;
	shf.r.wrap.b32 	%r10415, %r10410, %r10411, 18;
	mov.b64 	%rd6012, {%r10415, %r10414};
	xor.b64  	%rd6013, %rd6012, %rd6011;
	shf.l.wrap.b32 	%r10416, %r10410, %r10411, 23;
	shf.l.wrap.b32 	%r10417, %r10411, %r10410, 23;
	mov.b64 	%rd6014, {%r10417, %r10416};
	xor.b64  	%rd6015, %rd6013, %rd6014;
	xor.b64  	%rd6016, %rd5975, %rd5948;
	and.b64  	%rd6017, %rd5999, %rd6016;
	xor.b64  	%rd6018, %rd6017, %rd5948;
	add.s64 	%rd6019, %rd5918, %rd5931;
	add.s64 	%rd6020, %rd6019, %rd39;
	add.s64 	%rd6021, %rd6020, %rd6018;
	add.s64 	%rd6022, %rd6021, %rd6015;
	add.s64 	%rd6023, %rd6022, %rd5949;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10418,%dummy}, %rd6010;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10419}, %rd6010;
	}
	shf.r.wrap.b32 	%r10420, %r10419, %r10418, 28;
	shf.r.wrap.b32 	%r10421, %r10418, %r10419, 28;
	mov.b64 	%rd6024, {%r10421, %r10420};
	shf.l.wrap.b32 	%r10422, %r10418, %r10419, 30;
	shf.l.wrap.b32 	%r10423, %r10419, %r10418, 30;
	mov.b64 	%rd6025, {%r10423, %r10422};
	xor.b64  	%rd6026, %rd6025, %rd6024;
	shf.l.wrap.b32 	%r10424, %r10418, %r10419, 25;
	shf.l.wrap.b32 	%r10425, %r10419, %r10418, 25;
	mov.b64 	%rd6027, {%r10425, %r10424};
	xor.b64  	%rd6028, %rd6026, %rd6027;
	xor.b64  	%rd6029, %rd6010, %rd5962;
	xor.b64  	%rd6030, %rd6010, %rd5986;
	and.b64  	%rd6031, %rd6030, %rd6029;
	xor.b64  	%rd6032, %rd6031, %rd6010;
	add.s64 	%rd6033, %rd6022, %rd6032;
	add.s64 	%rd6034, %rd6033, %rd6028;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10426,%dummy}, %rd6023;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10427}, %rd6023;
	}
	shf.r.wrap.b32 	%r10428, %r10427, %r10426, 14;
	shf.r.wrap.b32 	%r10429, %r10426, %r10427, 14;
	mov.b64 	%rd6035, {%r10429, %r10428};
	shf.r.wrap.b32 	%r10430, %r10427, %r10426, 18;
	shf.r.wrap.b32 	%r10431, %r10426, %r10427, 18;
	mov.b64 	%rd6036, {%r10431, %r10430};
	xor.b64  	%rd6037, %rd6036, %rd6035;
	shf.l.wrap.b32 	%r10432, %r10426, %r10427, 23;
	shf.l.wrap.b32 	%r10433, %r10427, %r10426, 23;
	mov.b64 	%rd6038, {%r10433, %r10432};
	xor.b64  	%rd6039, %rd6037, %rd6038;
	xor.b64  	%rd6040, %rd5999, %rd5975;
	and.b64  	%rd6041, %rd6023, %rd6040;
	xor.b64  	%rd6042, %rd6041, %rd5975;
	add.s64 	%rd6043, %rd5948, %rd5919;
	add.s64 	%rd6044, %rd6043, %rd40;
	add.s64 	%rd6045, %rd6044, %rd6042;
	add.s64 	%rd6046, %rd6045, %rd6039;
	add.s64 	%rd6047, %rd6046, %rd5962;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10434,%dummy}, %rd6034;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10435}, %rd6034;
	}
	shf.r.wrap.b32 	%r10436, %r10435, %r10434, 28;
	shf.r.wrap.b32 	%r10437, %r10434, %r10435, 28;
	mov.b64 	%rd6048, {%r10437, %r10436};
	shf.l.wrap.b32 	%r10438, %r10434, %r10435, 30;
	shf.l.wrap.b32 	%r10439, %r10435, %r10434, 30;
	mov.b64 	%rd6049, {%r10439, %r10438};
	xor.b64  	%rd6050, %rd6049, %rd6048;
	shf.l.wrap.b32 	%r10440, %r10434, %r10435, 25;
	shf.l.wrap.b32 	%r10441, %r10435, %r10434, 25;
	mov.b64 	%rd6051, {%r10441, %r10440};
	xor.b64  	%rd6052, %rd6050, %rd6051;
	xor.b64  	%rd6053, %rd6034, %rd5986;
	xor.b64  	%rd6054, %rd6034, %rd6010;
	and.b64  	%rd6055, %rd6054, %rd6053;
	xor.b64  	%rd6056, %rd6055, %rd6034;
	add.s64 	%rd6057, %rd6046, %rd6056;
	add.s64 	%rd6058, %rd6057, %rd6052;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10442,%dummy}, %rd6047;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10443}, %rd6047;
	}
	shf.r.wrap.b32 	%r10444, %r10443, %r10442, 14;
	shf.r.wrap.b32 	%r10445, %r10442, %r10443, 14;
	mov.b64 	%rd6059, {%r10445, %r10444};
	shf.r.wrap.b32 	%r10446, %r10443, %r10442, 18;
	shf.r.wrap.b32 	%r10447, %r10442, %r10443, 18;
	mov.b64 	%rd6060, {%r10447, %r10446};
	xor.b64  	%rd6061, %rd6060, %rd6059;
	shf.l.wrap.b32 	%r10448, %r10442, %r10443, 23;
	shf.l.wrap.b32 	%r10449, %r10443, %r10442, 23;
	mov.b64 	%rd6062, {%r10449, %r10448};
	xor.b64  	%rd6063, %rd6061, %rd6062;
	xor.b64  	%rd6064, %rd6023, %rd5999;
	and.b64  	%rd6065, %rd6047, %rd6064;
	xor.b64  	%rd6066, %rd6065, %rd5999;
	add.s64 	%rd6067, %rd5975, %rd5920;
	add.s64 	%rd6068, %rd6067, %rd41;
	add.s64 	%rd6069, %rd6068, %rd6066;
	add.s64 	%rd6070, %rd6069, %rd6063;
	add.s64 	%rd6071, %rd6070, %rd5986;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10450,%dummy}, %rd6058;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10451}, %rd6058;
	}
	shf.r.wrap.b32 	%r10452, %r10451, %r10450, 28;
	shf.r.wrap.b32 	%r10453, %r10450, %r10451, 28;
	mov.b64 	%rd6072, {%r10453, %r10452};
	shf.l.wrap.b32 	%r10454, %r10450, %r10451, 30;
	shf.l.wrap.b32 	%r10455, %r10451, %r10450, 30;
	mov.b64 	%rd6073, {%r10455, %r10454};
	xor.b64  	%rd6074, %rd6073, %rd6072;
	shf.l.wrap.b32 	%r10456, %r10450, %r10451, 25;
	shf.l.wrap.b32 	%r10457, %r10451, %r10450, 25;
	mov.b64 	%rd6075, {%r10457, %r10456};
	xor.b64  	%rd6076, %rd6074, %rd6075;
	xor.b64  	%rd6077, %rd6058, %rd6010;
	xor.b64  	%rd6078, %rd6058, %rd6034;
	and.b64  	%rd6079, %rd6078, %rd6077;
	xor.b64  	%rd6080, %rd6079, %rd6058;
	add.s64 	%rd6081, %rd6070, %rd6080;
	add.s64 	%rd6082, %rd6081, %rd6076;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10458,%dummy}, %rd6071;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10459}, %rd6071;
	}
	shf.r.wrap.b32 	%r10460, %r10459, %r10458, 14;
	shf.r.wrap.b32 	%r10461, %r10458, %r10459, 14;
	mov.b64 	%rd6083, {%r10461, %r10460};
	shf.r.wrap.b32 	%r10462, %r10459, %r10458, 18;
	shf.r.wrap.b32 	%r10463, %r10458, %r10459, 18;
	mov.b64 	%rd6084, {%r10463, %r10462};
	xor.b64  	%rd6085, %rd6084, %rd6083;
	shf.l.wrap.b32 	%r10464, %r10458, %r10459, 23;
	shf.l.wrap.b32 	%r10465, %r10459, %r10458, 23;
	mov.b64 	%rd6086, {%r10465, %r10464};
	xor.b64  	%rd6087, %rd6085, %rd6086;
	xor.b64  	%rd6088, %rd6047, %rd6023;
	and.b64  	%rd6089, %rd6071, %rd6088;
	xor.b64  	%rd6090, %rd6089, %rd6023;
	add.s64 	%rd6091, %rd5999, %rd5921;
	add.s64 	%rd6092, %rd6091, %rd42;
	add.s64 	%rd6093, %rd6092, %rd6090;
	add.s64 	%rd6094, %rd6093, %rd6087;
	add.s64 	%rd6095, %rd6094, %rd6010;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10466,%dummy}, %rd6082;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10467}, %rd6082;
	}
	shf.r.wrap.b32 	%r10468, %r10467, %r10466, 28;
	shf.r.wrap.b32 	%r10469, %r10466, %r10467, 28;
	mov.b64 	%rd6096, {%r10469, %r10468};
	shf.l.wrap.b32 	%r10470, %r10466, %r10467, 30;
	shf.l.wrap.b32 	%r10471, %r10467, %r10466, 30;
	mov.b64 	%rd6097, {%r10471, %r10470};
	xor.b64  	%rd6098, %rd6097, %rd6096;
	shf.l.wrap.b32 	%r10472, %r10466, %r10467, 25;
	shf.l.wrap.b32 	%r10473, %r10467, %r10466, 25;
	mov.b64 	%rd6099, {%r10473, %r10472};
	xor.b64  	%rd6100, %rd6098, %rd6099;
	xor.b64  	%rd6101, %rd6082, %rd6034;
	xor.b64  	%rd6102, %rd6082, %rd6058;
	and.b64  	%rd6103, %rd6102, %rd6101;
	xor.b64  	%rd6104, %rd6103, %rd6082;
	add.s64 	%rd6105, %rd6094, %rd6104;
	add.s64 	%rd6106, %rd6105, %rd6100;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10474,%dummy}, %rd6095;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10475}, %rd6095;
	}
	shf.r.wrap.b32 	%r10476, %r10475, %r10474, 14;
	shf.r.wrap.b32 	%r10477, %r10474, %r10475, 14;
	mov.b64 	%rd6107, {%r10477, %r10476};
	shf.r.wrap.b32 	%r10478, %r10475, %r10474, 18;
	shf.r.wrap.b32 	%r10479, %r10474, %r10475, 18;
	mov.b64 	%rd6108, {%r10479, %r10478};
	xor.b64  	%rd6109, %rd6108, %rd6107;
	shf.l.wrap.b32 	%r10480, %r10474, %r10475, 23;
	shf.l.wrap.b32 	%r10481, %r10475, %r10474, 23;
	mov.b64 	%rd6110, {%r10481, %r10480};
	xor.b64  	%rd6111, %rd6109, %rd6110;
	xor.b64  	%rd6112, %rd6071, %rd6047;
	and.b64  	%rd6113, %rd6095, %rd6112;
	xor.b64  	%rd6114, %rd6113, %rd6047;
	add.s64 	%rd6115, %rd6023, %rd5922;
	add.s64 	%rd6116, %rd6115, %rd43;
	add.s64 	%rd6117, %rd6116, %rd6114;
	add.s64 	%rd6118, %rd6117, %rd6111;
	add.s64 	%rd6119, %rd6118, %rd6034;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10482,%dummy}, %rd6106;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10483}, %rd6106;
	}
	shf.r.wrap.b32 	%r10484, %r10483, %r10482, 28;
	shf.r.wrap.b32 	%r10485, %r10482, %r10483, 28;
	mov.b64 	%rd6120, {%r10485, %r10484};
	shf.l.wrap.b32 	%r10486, %r10482, %r10483, 30;
	shf.l.wrap.b32 	%r10487, %r10483, %r10482, 30;
	mov.b64 	%rd6121, {%r10487, %r10486};
	xor.b64  	%rd6122, %rd6121, %rd6120;
	shf.l.wrap.b32 	%r10488, %r10482, %r10483, 25;
	shf.l.wrap.b32 	%r10489, %r10483, %r10482, 25;
	mov.b64 	%rd6123, {%r10489, %r10488};
	xor.b64  	%rd6124, %rd6122, %rd6123;
	xor.b64  	%rd6125, %rd6106, %rd6058;
	xor.b64  	%rd6126, %rd6106, %rd6082;
	and.b64  	%rd6127, %rd6126, %rd6125;
	xor.b64  	%rd6128, %rd6127, %rd6106;
	add.s64 	%rd6129, %rd6118, %rd6128;
	add.s64 	%rd6130, %rd6129, %rd6124;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10490,%dummy}, %rd6119;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10491}, %rd6119;
	}
	shf.r.wrap.b32 	%r10492, %r10491, %r10490, 14;
	shf.r.wrap.b32 	%r10493, %r10490, %r10491, 14;
	mov.b64 	%rd6131, {%r10493, %r10492};
	shf.r.wrap.b32 	%r10494, %r10491, %r10490, 18;
	shf.r.wrap.b32 	%r10495, %r10490, %r10491, 18;
	mov.b64 	%rd6132, {%r10495, %r10494};
	xor.b64  	%rd6133, %rd6132, %rd6131;
	shf.l.wrap.b32 	%r10496, %r10490, %r10491, 23;
	shf.l.wrap.b32 	%r10497, %r10491, %r10490, 23;
	mov.b64 	%rd6134, {%r10497, %r10496};
	xor.b64  	%rd6135, %rd6133, %rd6134;
	xor.b64  	%rd6136, %rd6095, %rd6071;
	and.b64  	%rd6137, %rd6119, %rd6136;
	xor.b64  	%rd6138, %rd6137, %rd6071;
	add.s64 	%rd6139, %rd6047, %rd5923;
	add.s64 	%rd6140, %rd6139, %rd44;
	add.s64 	%rd6141, %rd6140, %rd6138;
	add.s64 	%rd6142, %rd6141, %rd6135;
	add.s64 	%rd6143, %rd6142, %rd6058;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10498,%dummy}, %rd6130;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10499}, %rd6130;
	}
	shf.r.wrap.b32 	%r10500, %r10499, %r10498, 28;
	shf.r.wrap.b32 	%r10501, %r10498, %r10499, 28;
	mov.b64 	%rd6144, {%r10501, %r10500};
	shf.l.wrap.b32 	%r10502, %r10498, %r10499, 30;
	shf.l.wrap.b32 	%r10503, %r10499, %r10498, 30;
	mov.b64 	%rd6145, {%r10503, %r10502};
	xor.b64  	%rd6146, %rd6145, %rd6144;
	shf.l.wrap.b32 	%r10504, %r10498, %r10499, 25;
	shf.l.wrap.b32 	%r10505, %r10499, %r10498, 25;
	mov.b64 	%rd6147, {%r10505, %r10504};
	xor.b64  	%rd6148, %rd6146, %rd6147;
	xor.b64  	%rd6149, %rd6130, %rd6082;
	xor.b64  	%rd6150, %rd6130, %rd6106;
	and.b64  	%rd6151, %rd6150, %rd6149;
	xor.b64  	%rd6152, %rd6151, %rd6130;
	add.s64 	%rd6153, %rd6142, %rd6152;
	add.s64 	%rd6154, %rd6153, %rd6148;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10506,%dummy}, %rd6143;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10507}, %rd6143;
	}
	shf.r.wrap.b32 	%r10508, %r10507, %r10506, 14;
	shf.r.wrap.b32 	%r10509, %r10506, %r10507, 14;
	mov.b64 	%rd6155, {%r10509, %r10508};
	shf.r.wrap.b32 	%r10510, %r10507, %r10506, 18;
	shf.r.wrap.b32 	%r10511, %r10506, %r10507, 18;
	mov.b64 	%rd6156, {%r10511, %r10510};
	xor.b64  	%rd6157, %rd6156, %rd6155;
	shf.l.wrap.b32 	%r10512, %r10506, %r10507, 23;
	shf.l.wrap.b32 	%r10513, %r10507, %r10506, 23;
	mov.b64 	%rd6158, {%r10513, %r10512};
	xor.b64  	%rd6159, %rd6157, %rd6158;
	xor.b64  	%rd6160, %rd6119, %rd6095;
	and.b64  	%rd6161, %rd6143, %rd6160;
	xor.b64  	%rd6162, %rd6161, %rd6095;
	add.s64 	%rd6163, %rd6071, %rd5924;
	add.s64 	%rd6164, %rd6163, %rd45;
	add.s64 	%rd6165, %rd6164, %rd6162;
	add.s64 	%rd6166, %rd6165, %rd6159;
	add.s64 	%rd6167, %rd6166, %rd6082;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10514,%dummy}, %rd6154;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10515}, %rd6154;
	}
	shf.r.wrap.b32 	%r10516, %r10515, %r10514, 28;
	shf.r.wrap.b32 	%r10517, %r10514, %r10515, 28;
	mov.b64 	%rd6168, {%r10517, %r10516};
	shf.l.wrap.b32 	%r10518, %r10514, %r10515, 30;
	shf.l.wrap.b32 	%r10519, %r10515, %r10514, 30;
	mov.b64 	%rd6169, {%r10519, %r10518};
	xor.b64  	%rd6170, %rd6169, %rd6168;
	shf.l.wrap.b32 	%r10520, %r10514, %r10515, 25;
	shf.l.wrap.b32 	%r10521, %r10515, %r10514, 25;
	mov.b64 	%rd6171, {%r10521, %r10520};
	xor.b64  	%rd6172, %rd6170, %rd6171;
	xor.b64  	%rd6173, %rd6154, %rd6106;
	xor.b64  	%rd6174, %rd6154, %rd6130;
	and.b64  	%rd6175, %rd6174, %rd6173;
	xor.b64  	%rd6176, %rd6175, %rd6154;
	add.s64 	%rd6177, %rd6166, %rd6176;
	add.s64 	%rd6178, %rd6177, %rd6172;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10522,%dummy}, %rd6167;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10523}, %rd6167;
	}
	shf.r.wrap.b32 	%r10524, %r10523, %r10522, 14;
	shf.r.wrap.b32 	%r10525, %r10522, %r10523, 14;
	mov.b64 	%rd6179, {%r10525, %r10524};
	shf.r.wrap.b32 	%r10526, %r10523, %r10522, 18;
	shf.r.wrap.b32 	%r10527, %r10522, %r10523, 18;
	mov.b64 	%rd6180, {%r10527, %r10526};
	xor.b64  	%rd6181, %rd6180, %rd6179;
	shf.l.wrap.b32 	%r10528, %r10522, %r10523, 23;
	shf.l.wrap.b32 	%r10529, %r10523, %r10522, 23;
	mov.b64 	%rd6182, {%r10529, %r10528};
	xor.b64  	%rd6183, %rd6181, %rd6182;
	xor.b64  	%rd6184, %rd6143, %rd6119;
	and.b64  	%rd6185, %rd6167, %rd6184;
	xor.b64  	%rd6186, %rd6185, %rd6119;
	add.s64 	%rd6187, %rd6095, %rd5925;
	add.s64 	%rd6188, %rd6187, %rd46;
	add.s64 	%rd6189, %rd6188, %rd6186;
	add.s64 	%rd6190, %rd6189, %rd6183;
	add.s64 	%rd6191, %rd6190, %rd6106;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10530,%dummy}, %rd6178;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10531}, %rd6178;
	}
	shf.r.wrap.b32 	%r10532, %r10531, %r10530, 28;
	shf.r.wrap.b32 	%r10533, %r10530, %r10531, 28;
	mov.b64 	%rd6192, {%r10533, %r10532};
	shf.l.wrap.b32 	%r10534, %r10530, %r10531, 30;
	shf.l.wrap.b32 	%r10535, %r10531, %r10530, 30;
	mov.b64 	%rd6193, {%r10535, %r10534};
	xor.b64  	%rd6194, %rd6193, %rd6192;
	shf.l.wrap.b32 	%r10536, %r10530, %r10531, 25;
	shf.l.wrap.b32 	%r10537, %r10531, %r10530, 25;
	mov.b64 	%rd6195, {%r10537, %r10536};
	xor.b64  	%rd6196, %rd6194, %rd6195;
	xor.b64  	%rd6197, %rd6178, %rd6130;
	xor.b64  	%rd6198, %rd6178, %rd6154;
	and.b64  	%rd6199, %rd6198, %rd6197;
	xor.b64  	%rd6200, %rd6199, %rd6178;
	add.s64 	%rd6201, %rd6190, %rd6200;
	add.s64 	%rd6202, %rd6201, %rd6196;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10538,%dummy}, %rd6191;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10539}, %rd6191;
	}
	shf.r.wrap.b32 	%r10540, %r10539, %r10538, 14;
	shf.r.wrap.b32 	%r10541, %r10538, %r10539, 14;
	mov.b64 	%rd6203, {%r10541, %r10540};
	shf.r.wrap.b32 	%r10542, %r10539, %r10538, 18;
	shf.r.wrap.b32 	%r10543, %r10538, %r10539, 18;
	mov.b64 	%rd6204, {%r10543, %r10542};
	xor.b64  	%rd6205, %rd6204, %rd6203;
	shf.l.wrap.b32 	%r10544, %r10538, %r10539, 23;
	shf.l.wrap.b32 	%r10545, %r10539, %r10538, 23;
	mov.b64 	%rd6206, {%r10545, %r10544};
	xor.b64  	%rd6207, %rd6205, %rd6206;
	xor.b64  	%rd6208, %rd6167, %rd6143;
	and.b64  	%rd6209, %rd6191, %rd6208;
	xor.b64  	%rd6210, %rd6209, %rd6143;
	add.s64 	%rd6211, %rd6119, %rd5926;
	add.s64 	%rd6212, %rd6211, %rd47;
	add.s64 	%rd6213, %rd6212, %rd6210;
	add.s64 	%rd6214, %rd6213, %rd6207;
	add.s64 	%rd6215, %rd6214, %rd6130;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10546,%dummy}, %rd6202;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10547}, %rd6202;
	}
	shf.r.wrap.b32 	%r10548, %r10547, %r10546, 28;
	shf.r.wrap.b32 	%r10549, %r10546, %r10547, 28;
	mov.b64 	%rd6216, {%r10549, %r10548};
	shf.l.wrap.b32 	%r10550, %r10546, %r10547, 30;
	shf.l.wrap.b32 	%r10551, %r10547, %r10546, 30;
	mov.b64 	%rd6217, {%r10551, %r10550};
	xor.b64  	%rd6218, %rd6217, %rd6216;
	shf.l.wrap.b32 	%r10552, %r10546, %r10547, 25;
	shf.l.wrap.b32 	%r10553, %r10547, %r10546, 25;
	mov.b64 	%rd6219, {%r10553, %r10552};
	xor.b64  	%rd6220, %rd6218, %rd6219;
	xor.b64  	%rd6221, %rd6202, %rd6154;
	xor.b64  	%rd6222, %rd6202, %rd6178;
	and.b64  	%rd6223, %rd6222, %rd6221;
	xor.b64  	%rd6224, %rd6223, %rd6202;
	add.s64 	%rd6225, %rd6214, %rd6224;
	add.s64 	%rd6226, %rd6225, %rd6220;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10554,%dummy}, %rd6215;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10555}, %rd6215;
	}
	shf.r.wrap.b32 	%r10556, %r10555, %r10554, 14;
	shf.r.wrap.b32 	%r10557, %r10554, %r10555, 14;
	mov.b64 	%rd6227, {%r10557, %r10556};
	shf.r.wrap.b32 	%r10558, %r10555, %r10554, 18;
	shf.r.wrap.b32 	%r10559, %r10554, %r10555, 18;
	mov.b64 	%rd6228, {%r10559, %r10558};
	xor.b64  	%rd6229, %rd6228, %rd6227;
	shf.l.wrap.b32 	%r10560, %r10554, %r10555, 23;
	shf.l.wrap.b32 	%r10561, %r10555, %r10554, 23;
	mov.b64 	%rd6230, {%r10561, %r10560};
	xor.b64  	%rd6231, %rd6229, %rd6230;
	xor.b64  	%rd6232, %rd6191, %rd6167;
	and.b64  	%rd6233, %rd6215, %rd6232;
	xor.b64  	%rd6234, %rd6233, %rd6167;
	add.s64 	%rd6235, %rd6143, %rd5927;
	add.s64 	%rd6236, %rd6235, %rd48;
	add.s64 	%rd6237, %rd6236, %rd6234;
	add.s64 	%rd6238, %rd6237, %rd6231;
	add.s64 	%rd6239, %rd6238, %rd6154;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10562,%dummy}, %rd6226;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10563}, %rd6226;
	}
	shf.r.wrap.b32 	%r10564, %r10563, %r10562, 28;
	shf.r.wrap.b32 	%r10565, %r10562, %r10563, 28;
	mov.b64 	%rd6240, {%r10565, %r10564};
	shf.l.wrap.b32 	%r10566, %r10562, %r10563, 30;
	shf.l.wrap.b32 	%r10567, %r10563, %r10562, 30;
	mov.b64 	%rd6241, {%r10567, %r10566};
	xor.b64  	%rd6242, %rd6241, %rd6240;
	shf.l.wrap.b32 	%r10568, %r10562, %r10563, 25;
	shf.l.wrap.b32 	%r10569, %r10563, %r10562, 25;
	mov.b64 	%rd6243, {%r10569, %r10568};
	xor.b64  	%rd6244, %rd6242, %rd6243;
	xor.b64  	%rd6245, %rd6226, %rd6178;
	xor.b64  	%rd6246, %rd6226, %rd6202;
	and.b64  	%rd6247, %rd6246, %rd6245;
	xor.b64  	%rd6248, %rd6247, %rd6226;
	add.s64 	%rd6249, %rd6238, %rd6248;
	add.s64 	%rd6250, %rd6249, %rd6244;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10570,%dummy}, %rd6239;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10571}, %rd6239;
	}
	shf.r.wrap.b32 	%r10572, %r10571, %r10570, 14;
	shf.r.wrap.b32 	%r10573, %r10570, %r10571, 14;
	mov.b64 	%rd6251, {%r10573, %r10572};
	shf.r.wrap.b32 	%r10574, %r10571, %r10570, 18;
	shf.r.wrap.b32 	%r10575, %r10570, %r10571, 18;
	mov.b64 	%rd6252, {%r10575, %r10574};
	xor.b64  	%rd6253, %rd6252, %rd6251;
	shf.l.wrap.b32 	%r10576, %r10570, %r10571, 23;
	shf.l.wrap.b32 	%r10577, %r10571, %r10570, 23;
	mov.b64 	%rd6254, {%r10577, %r10576};
	xor.b64  	%rd6255, %rd6253, %rd6254;
	xor.b64  	%rd6256, %rd6215, %rd6191;
	and.b64  	%rd6257, %rd6239, %rd6256;
	xor.b64  	%rd6258, %rd6257, %rd6191;
	add.s64 	%rd6259, %rd6167, %rd5928;
	add.s64 	%rd6260, %rd6259, %rd49;
	add.s64 	%rd6261, %rd6260, %rd6258;
	add.s64 	%rd6262, %rd6261, %rd6255;
	add.s64 	%rd6263, %rd6262, %rd6178;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10578,%dummy}, %rd6250;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10579}, %rd6250;
	}
	shf.r.wrap.b32 	%r10580, %r10579, %r10578, 28;
	shf.r.wrap.b32 	%r10581, %r10578, %r10579, 28;
	mov.b64 	%rd6264, {%r10581, %r10580};
	shf.l.wrap.b32 	%r10582, %r10578, %r10579, 30;
	shf.l.wrap.b32 	%r10583, %r10579, %r10578, 30;
	mov.b64 	%rd6265, {%r10583, %r10582};
	xor.b64  	%rd6266, %rd6265, %rd6264;
	shf.l.wrap.b32 	%r10584, %r10578, %r10579, 25;
	shf.l.wrap.b32 	%r10585, %r10579, %r10578, 25;
	mov.b64 	%rd6267, {%r10585, %r10584};
	xor.b64  	%rd6268, %rd6266, %rd6267;
	xor.b64  	%rd6269, %rd6250, %rd6202;
	xor.b64  	%rd6270, %rd6250, %rd6226;
	and.b64  	%rd6271, %rd6270, %rd6269;
	xor.b64  	%rd6272, %rd6271, %rd6250;
	add.s64 	%rd6273, %rd6262, %rd6272;
	add.s64 	%rd6274, %rd6273, %rd6268;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10586,%dummy}, %rd6263;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10587}, %rd6263;
	}
	shf.r.wrap.b32 	%r10588, %r10587, %r10586, 14;
	shf.r.wrap.b32 	%r10589, %r10586, %r10587, 14;
	mov.b64 	%rd6275, {%r10589, %r10588};
	shf.r.wrap.b32 	%r10590, %r10587, %r10586, 18;
	shf.r.wrap.b32 	%r10591, %r10586, %r10587, 18;
	mov.b64 	%rd6276, {%r10591, %r10590};
	xor.b64  	%rd6277, %rd6276, %rd6275;
	shf.l.wrap.b32 	%r10592, %r10586, %r10587, 23;
	shf.l.wrap.b32 	%r10593, %r10587, %r10586, 23;
	mov.b64 	%rd6278, {%r10593, %r10592};
	xor.b64  	%rd6279, %rd6277, %rd6278;
	xor.b64  	%rd6280, %rd6239, %rd6215;
	and.b64  	%rd6281, %rd6263, %rd6280;
	xor.b64  	%rd6282, %rd6281, %rd6215;
	add.s64 	%rd6283, %rd6191, %rd5929;
	add.s64 	%rd6284, %rd6283, %rd50;
	add.s64 	%rd6285, %rd6284, %rd6282;
	add.s64 	%rd6286, %rd6285, %rd6279;
	add.s64 	%rd6287, %rd6286, %rd6202;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10594,%dummy}, %rd6274;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10595}, %rd6274;
	}
	shf.r.wrap.b32 	%r10596, %r10595, %r10594, 28;
	shf.r.wrap.b32 	%r10597, %r10594, %r10595, 28;
	mov.b64 	%rd6288, {%r10597, %r10596};
	shf.l.wrap.b32 	%r10598, %r10594, %r10595, 30;
	shf.l.wrap.b32 	%r10599, %r10595, %r10594, 30;
	mov.b64 	%rd6289, {%r10599, %r10598};
	xor.b64  	%rd6290, %rd6289, %rd6288;
	shf.l.wrap.b32 	%r10600, %r10594, %r10595, 25;
	shf.l.wrap.b32 	%r10601, %r10595, %r10594, 25;
	mov.b64 	%rd6291, {%r10601, %r10600};
	xor.b64  	%rd6292, %rd6290, %rd6291;
	xor.b64  	%rd6293, %rd6274, %rd6226;
	xor.b64  	%rd6294, %rd6274, %rd6250;
	and.b64  	%rd6295, %rd6294, %rd6293;
	xor.b64  	%rd6296, %rd6295, %rd6274;
	add.s64 	%rd6297, %rd6286, %rd6296;
	add.s64 	%rd6298, %rd6297, %rd6292;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10602,%dummy}, %rd6287;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10603}, %rd6287;
	}
	shf.r.wrap.b32 	%r10604, %r10603, %r10602, 14;
	shf.r.wrap.b32 	%r10605, %r10602, %r10603, 14;
	mov.b64 	%rd6299, {%r10605, %r10604};
	shf.r.wrap.b32 	%r10606, %r10603, %r10602, 18;
	shf.r.wrap.b32 	%r10607, %r10602, %r10603, 18;
	mov.b64 	%rd6300, {%r10607, %r10606};
	xor.b64  	%rd6301, %rd6300, %rd6299;
	shf.l.wrap.b32 	%r10608, %r10602, %r10603, 23;
	shf.l.wrap.b32 	%r10609, %r10603, %r10602, 23;
	mov.b64 	%rd6302, {%r10609, %r10608};
	xor.b64  	%rd6303, %rd6301, %rd6302;
	xor.b64  	%rd6304, %rd6263, %rd6239;
	and.b64  	%rd6305, %rd6287, %rd6304;
	xor.b64  	%rd6306, %rd6305, %rd6239;
	add.s64 	%rd6307, %rd6215, %rd5930;
	add.s64 	%rd6308, %rd6307, %rd51;
	add.s64 	%rd6309, %rd6308, %rd6306;
	add.s64 	%rd6310, %rd6309, %rd6303;
	add.s64 	%rd6311, %rd6310, %rd6226;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10610,%dummy}, %rd6298;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10611}, %rd6298;
	}
	shf.r.wrap.b32 	%r10612, %r10611, %r10610, 28;
	shf.r.wrap.b32 	%r10613, %r10610, %r10611, 28;
	mov.b64 	%rd6312, {%r10613, %r10612};
	shf.l.wrap.b32 	%r10614, %r10610, %r10611, 30;
	shf.l.wrap.b32 	%r10615, %r10611, %r10610, 30;
	mov.b64 	%rd6313, {%r10615, %r10614};
	xor.b64  	%rd6314, %rd6313, %rd6312;
	shf.l.wrap.b32 	%r10616, %r10610, %r10611, 25;
	shf.l.wrap.b32 	%r10617, %r10611, %r10610, 25;
	mov.b64 	%rd6315, {%r10617, %r10616};
	xor.b64  	%rd6316, %rd6314, %rd6315;
	xor.b64  	%rd6317, %rd6298, %rd6250;
	xor.b64  	%rd6318, %rd6298, %rd6274;
	and.b64  	%rd6319, %rd6318, %rd6317;
	xor.b64  	%rd6320, %rd6319, %rd6298;
	add.s64 	%rd6321, %rd6310, %rd6320;
	add.s64 	%rd6322, %rd6321, %rd6316;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10618,%dummy}, %rd5929;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10619}, %rd5929;
	}
	shf.r.wrap.b32 	%r10620, %r10619, %r10618, 19;
	shf.r.wrap.b32 	%r10621, %r10618, %r10619, 19;
	mov.b64 	%rd6323, {%r10621, %r10620};
	shf.l.wrap.b32 	%r10622, %r10618, %r10619, 3;
	shf.l.wrap.b32 	%r10623, %r10619, %r10618, 3;
	mov.b64 	%rd6324, {%r10623, %r10622};
	shr.u64 	%rd6325, %rd5929, 6;
	xor.b64  	%rd6326, %rd6323, %rd6325;
	xor.b64  	%rd6327, %rd6326, %rd6324;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10624,%dummy}, %rd5916;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10625}, %rd5916;
	}
	shf.r.wrap.b32 	%r10626, %r10625, %r10624, 1;
	shf.r.wrap.b32 	%r10627, %r10624, %r10625, 1;
	mov.b64 	%rd6328, {%r10627, %r10626};
	shf.r.wrap.b32 	%r10628, %r10625, %r10624, 8;
	shf.r.wrap.b32 	%r10629, %r10624, %r10625, 8;
	mov.b64 	%rd6329, {%r10629, %r10628};
	shr.u64 	%rd6330, %rd5916, 7;
	xor.b64  	%rd6331, %rd6328, %rd6330;
	xor.b64  	%rd6332, %rd6331, %rd6329;
	add.s64 	%rd6333, %rd5924, %rd5915;
	add.s64 	%rd6334, %rd6333, %rd6327;
	add.s64 	%rd6335, %rd6334, %rd6332;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10630,%dummy}, %rd5930;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10631}, %rd5930;
	}
	shf.r.wrap.b32 	%r10632, %r10631, %r10630, 19;
	shf.r.wrap.b32 	%r10633, %r10630, %r10631, 19;
	mov.b64 	%rd6336, {%r10633, %r10632};
	shf.l.wrap.b32 	%r10634, %r10630, %r10631, 3;
	shf.l.wrap.b32 	%r10635, %r10631, %r10630, 3;
	mov.b64 	%rd6337, {%r10635, %r10634};
	shr.u64 	%rd6338, %rd5930, 6;
	xor.b64  	%rd6339, %rd6336, %rd6338;
	xor.b64  	%rd6340, %rd6339, %rd6337;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10636,%dummy}, %rd5917;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10637}, %rd5917;
	}
	shf.r.wrap.b32 	%r10638, %r10637, %r10636, 1;
	shf.r.wrap.b32 	%r10639, %r10636, %r10637, 1;
	mov.b64 	%rd6341, {%r10639, %r10638};
	shf.r.wrap.b32 	%r10640, %r10637, %r10636, 8;
	shf.r.wrap.b32 	%r10641, %r10636, %r10637, 8;
	mov.b64 	%rd6342, {%r10641, %r10640};
	shr.u64 	%rd6343, %rd5917, 7;
	xor.b64  	%rd6344, %rd6341, %rd6343;
	xor.b64  	%rd6345, %rd6344, %rd6342;
	add.s64 	%rd6346, %rd5925, %rd5916;
	add.s64 	%rd6347, %rd6346, %rd6340;
	add.s64 	%rd6348, %rd6347, %rd6345;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10642,%dummy}, %rd6335;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10643}, %rd6335;
	}
	shf.r.wrap.b32 	%r10644, %r10643, %r10642, 19;
	shf.r.wrap.b32 	%r10645, %r10642, %r10643, 19;
	mov.b64 	%rd6349, {%r10645, %r10644};
	shf.l.wrap.b32 	%r10646, %r10642, %r10643, 3;
	shf.l.wrap.b32 	%r10647, %r10643, %r10642, 3;
	mov.b64 	%rd6350, {%r10647, %r10646};
	shr.u64 	%rd6351, %rd6335, 6;
	xor.b64  	%rd6352, %rd6349, %rd6351;
	xor.b64  	%rd6353, %rd6352, %rd6350;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10648,%dummy}, %rd5918;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10649}, %rd5918;
	}
	shf.r.wrap.b32 	%r10650, %r10649, %r10648, 1;
	shf.r.wrap.b32 	%r10651, %r10648, %r10649, 1;
	mov.b64 	%rd6354, {%r10651, %r10650};
	shf.r.wrap.b32 	%r10652, %r10649, %r10648, 8;
	shf.r.wrap.b32 	%r10653, %r10648, %r10649, 8;
	mov.b64 	%rd6355, {%r10653, %r10652};
	shr.u64 	%rd6356, %rd5918, 7;
	xor.b64  	%rd6357, %rd6354, %rd6356;
	xor.b64  	%rd6358, %rd6357, %rd6355;
	add.s64 	%rd6359, %rd5926, %rd5917;
	add.s64 	%rd6360, %rd6359, %rd6353;
	add.s64 	%rd6361, %rd6360, %rd6358;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10654,%dummy}, %rd6348;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10655}, %rd6348;
	}
	shf.r.wrap.b32 	%r10656, %r10655, %r10654, 19;
	shf.r.wrap.b32 	%r10657, %r10654, %r10655, 19;
	mov.b64 	%rd6362, {%r10657, %r10656};
	shf.l.wrap.b32 	%r10658, %r10654, %r10655, 3;
	shf.l.wrap.b32 	%r10659, %r10655, %r10654, 3;
	mov.b64 	%rd6363, {%r10659, %r10658};
	shr.u64 	%rd6364, %rd6348, 6;
	xor.b64  	%rd6365, %rd6362, %rd6364;
	xor.b64  	%rd6366, %rd6365, %rd6363;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10660,%dummy}, %rd5919;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10661}, %rd5919;
	}
	shf.r.wrap.b32 	%r10662, %r10661, %r10660, 1;
	shf.r.wrap.b32 	%r10663, %r10660, %r10661, 1;
	mov.b64 	%rd6367, {%r10663, %r10662};
	shf.r.wrap.b32 	%r10664, %r10661, %r10660, 8;
	shf.r.wrap.b32 	%r10665, %r10660, %r10661, 8;
	mov.b64 	%rd6368, {%r10665, %r10664};
	shr.u64 	%rd6369, %rd5919, 7;
	xor.b64  	%rd6370, %rd6367, %rd6369;
	xor.b64  	%rd6371, %rd6370, %rd6368;
	add.s64 	%rd6372, %rd5927, %rd5918;
	add.s64 	%rd6373, %rd6372, %rd6366;
	add.s64 	%rd6374, %rd6373, %rd6371;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10666,%dummy}, %rd6361;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10667}, %rd6361;
	}
	shf.r.wrap.b32 	%r10668, %r10667, %r10666, 19;
	shf.r.wrap.b32 	%r10669, %r10666, %r10667, 19;
	mov.b64 	%rd6375, {%r10669, %r10668};
	shf.l.wrap.b32 	%r10670, %r10666, %r10667, 3;
	shf.l.wrap.b32 	%r10671, %r10667, %r10666, 3;
	mov.b64 	%rd6376, {%r10671, %r10670};
	shr.u64 	%rd6377, %rd6361, 6;
	xor.b64  	%rd6378, %rd6375, %rd6377;
	xor.b64  	%rd6379, %rd6378, %rd6376;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10672,%dummy}, %rd5920;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10673}, %rd5920;
	}
	shf.r.wrap.b32 	%r10674, %r10673, %r10672, 1;
	shf.r.wrap.b32 	%r10675, %r10672, %r10673, 1;
	mov.b64 	%rd6380, {%r10675, %r10674};
	shf.r.wrap.b32 	%r10676, %r10673, %r10672, 8;
	shf.r.wrap.b32 	%r10677, %r10672, %r10673, 8;
	mov.b64 	%rd6381, {%r10677, %r10676};
	shr.u64 	%rd6382, %rd5920, 7;
	xor.b64  	%rd6383, %rd6380, %rd6382;
	xor.b64  	%rd6384, %rd6383, %rd6381;
	add.s64 	%rd6385, %rd5928, %rd5919;
	add.s64 	%rd6386, %rd6385, %rd6379;
	add.s64 	%rd6387, %rd6386, %rd6384;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10678,%dummy}, %rd6374;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10679}, %rd6374;
	}
	shf.r.wrap.b32 	%r10680, %r10679, %r10678, 19;
	shf.r.wrap.b32 	%r10681, %r10678, %r10679, 19;
	mov.b64 	%rd6388, {%r10681, %r10680};
	shf.l.wrap.b32 	%r10682, %r10678, %r10679, 3;
	shf.l.wrap.b32 	%r10683, %r10679, %r10678, 3;
	mov.b64 	%rd6389, {%r10683, %r10682};
	shr.u64 	%rd6390, %rd6374, 6;
	xor.b64  	%rd6391, %rd6388, %rd6390;
	xor.b64  	%rd6392, %rd6391, %rd6389;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10684,%dummy}, %rd5921;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10685}, %rd5921;
	}
	shf.r.wrap.b32 	%r10686, %r10685, %r10684, 1;
	shf.r.wrap.b32 	%r10687, %r10684, %r10685, 1;
	mov.b64 	%rd6393, {%r10687, %r10686};
	shf.r.wrap.b32 	%r10688, %r10685, %r10684, 8;
	shf.r.wrap.b32 	%r10689, %r10684, %r10685, 8;
	mov.b64 	%rd6394, {%r10689, %r10688};
	shr.u64 	%rd6395, %rd5921, 7;
	xor.b64  	%rd6396, %rd6393, %rd6395;
	xor.b64  	%rd6397, %rd6396, %rd6394;
	add.s64 	%rd6398, %rd5929, %rd5920;
	add.s64 	%rd6399, %rd6398, %rd6392;
	add.s64 	%rd6400, %rd6399, %rd6397;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10690,%dummy}, %rd6387;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10691}, %rd6387;
	}
	shf.r.wrap.b32 	%r10692, %r10691, %r10690, 19;
	shf.r.wrap.b32 	%r10693, %r10690, %r10691, 19;
	mov.b64 	%rd6401, {%r10693, %r10692};
	shf.l.wrap.b32 	%r10694, %r10690, %r10691, 3;
	shf.l.wrap.b32 	%r10695, %r10691, %r10690, 3;
	mov.b64 	%rd6402, {%r10695, %r10694};
	shr.u64 	%rd6403, %rd6387, 6;
	xor.b64  	%rd6404, %rd6401, %rd6403;
	xor.b64  	%rd6405, %rd6404, %rd6402;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10696,%dummy}, %rd5922;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10697}, %rd5922;
	}
	shf.r.wrap.b32 	%r10698, %r10697, %r10696, 1;
	shf.r.wrap.b32 	%r10699, %r10696, %r10697, 1;
	mov.b64 	%rd6406, {%r10699, %r10698};
	shf.r.wrap.b32 	%r10700, %r10697, %r10696, 8;
	shf.r.wrap.b32 	%r10701, %r10696, %r10697, 8;
	mov.b64 	%rd6407, {%r10701, %r10700};
	shr.u64 	%rd6408, %rd5922, 7;
	xor.b64  	%rd6409, %rd6406, %rd6408;
	xor.b64  	%rd6410, %rd6409, %rd6407;
	add.s64 	%rd6411, %rd5930, %rd5921;
	add.s64 	%rd6412, %rd6411, %rd6405;
	add.s64 	%rd6413, %rd6412, %rd6410;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10702,%dummy}, %rd6400;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10703}, %rd6400;
	}
	shf.r.wrap.b32 	%r10704, %r10703, %r10702, 19;
	shf.r.wrap.b32 	%r10705, %r10702, %r10703, 19;
	mov.b64 	%rd6414, {%r10705, %r10704};
	shf.l.wrap.b32 	%r10706, %r10702, %r10703, 3;
	shf.l.wrap.b32 	%r10707, %r10703, %r10702, 3;
	mov.b64 	%rd6415, {%r10707, %r10706};
	shr.u64 	%rd6416, %rd6400, 6;
	xor.b64  	%rd6417, %rd6414, %rd6416;
	xor.b64  	%rd6418, %rd6417, %rd6415;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10708,%dummy}, %rd5923;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10709}, %rd5923;
	}
	shf.r.wrap.b32 	%r10710, %r10709, %r10708, 1;
	shf.r.wrap.b32 	%r10711, %r10708, %r10709, 1;
	mov.b64 	%rd6419, {%r10711, %r10710};
	shf.r.wrap.b32 	%r10712, %r10709, %r10708, 8;
	shf.r.wrap.b32 	%r10713, %r10708, %r10709, 8;
	mov.b64 	%rd6420, {%r10713, %r10712};
	shr.u64 	%rd6421, %rd5923, 7;
	xor.b64  	%rd6422, %rd6419, %rd6421;
	xor.b64  	%rd6423, %rd6422, %rd6420;
	add.s64 	%rd6424, %rd6335, %rd5922;
	add.s64 	%rd6425, %rd6424, %rd6418;
	add.s64 	%rd6426, %rd6425, %rd6423;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10714,%dummy}, %rd6413;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10715}, %rd6413;
	}
	shf.r.wrap.b32 	%r10716, %r10715, %r10714, 19;
	shf.r.wrap.b32 	%r10717, %r10714, %r10715, 19;
	mov.b64 	%rd6427, {%r10717, %r10716};
	shf.l.wrap.b32 	%r10718, %r10714, %r10715, 3;
	shf.l.wrap.b32 	%r10719, %r10715, %r10714, 3;
	mov.b64 	%rd6428, {%r10719, %r10718};
	shr.u64 	%rd6429, %rd6413, 6;
	xor.b64  	%rd6430, %rd6427, %rd6429;
	xor.b64  	%rd6431, %rd6430, %rd6428;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10720,%dummy}, %rd5924;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10721}, %rd5924;
	}
	shf.r.wrap.b32 	%r10722, %r10721, %r10720, 1;
	shf.r.wrap.b32 	%r10723, %r10720, %r10721, 1;
	mov.b64 	%rd6432, {%r10723, %r10722};
	shf.r.wrap.b32 	%r10724, %r10721, %r10720, 8;
	shf.r.wrap.b32 	%r10725, %r10720, %r10721, 8;
	mov.b64 	%rd6433, {%r10725, %r10724};
	shr.u64 	%rd6434, %rd5924, 7;
	xor.b64  	%rd6435, %rd6432, %rd6434;
	xor.b64  	%rd6436, %rd6435, %rd6433;
	add.s64 	%rd6437, %rd6348, %rd5923;
	add.s64 	%rd6438, %rd6437, %rd6431;
	add.s64 	%rd6439, %rd6438, %rd6436;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10726,%dummy}, %rd6426;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10727}, %rd6426;
	}
	shf.r.wrap.b32 	%r10728, %r10727, %r10726, 19;
	shf.r.wrap.b32 	%r10729, %r10726, %r10727, 19;
	mov.b64 	%rd6440, {%r10729, %r10728};
	shf.l.wrap.b32 	%r10730, %r10726, %r10727, 3;
	shf.l.wrap.b32 	%r10731, %r10727, %r10726, 3;
	mov.b64 	%rd6441, {%r10731, %r10730};
	shr.u64 	%rd6442, %rd6426, 6;
	xor.b64  	%rd6443, %rd6440, %rd6442;
	xor.b64  	%rd6444, %rd6443, %rd6441;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10732,%dummy}, %rd5925;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10733}, %rd5925;
	}
	shf.r.wrap.b32 	%r10734, %r10733, %r10732, 1;
	shf.r.wrap.b32 	%r10735, %r10732, %r10733, 1;
	mov.b64 	%rd6445, {%r10735, %r10734};
	shf.r.wrap.b32 	%r10736, %r10733, %r10732, 8;
	shf.r.wrap.b32 	%r10737, %r10732, %r10733, 8;
	mov.b64 	%rd6446, {%r10737, %r10736};
	shr.u64 	%rd6447, %rd5925, 7;
	xor.b64  	%rd6448, %rd6445, %rd6447;
	xor.b64  	%rd6449, %rd6448, %rd6446;
	add.s64 	%rd6450, %rd6361, %rd5924;
	add.s64 	%rd6451, %rd6450, %rd6444;
	add.s64 	%rd6452, %rd6451, %rd6449;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10738,%dummy}, %rd6439;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10739}, %rd6439;
	}
	shf.r.wrap.b32 	%r10740, %r10739, %r10738, 19;
	shf.r.wrap.b32 	%r10741, %r10738, %r10739, 19;
	mov.b64 	%rd6453, {%r10741, %r10740};
	shf.l.wrap.b32 	%r10742, %r10738, %r10739, 3;
	shf.l.wrap.b32 	%r10743, %r10739, %r10738, 3;
	mov.b64 	%rd6454, {%r10743, %r10742};
	shr.u64 	%rd6455, %rd6439, 6;
	xor.b64  	%rd6456, %rd6453, %rd6455;
	xor.b64  	%rd6457, %rd6456, %rd6454;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10744,%dummy}, %rd5926;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10745}, %rd5926;
	}
	shf.r.wrap.b32 	%r10746, %r10745, %r10744, 1;
	shf.r.wrap.b32 	%r10747, %r10744, %r10745, 1;
	mov.b64 	%rd6458, {%r10747, %r10746};
	shf.r.wrap.b32 	%r10748, %r10745, %r10744, 8;
	shf.r.wrap.b32 	%r10749, %r10744, %r10745, 8;
	mov.b64 	%rd6459, {%r10749, %r10748};
	shr.u64 	%rd6460, %rd5926, 7;
	xor.b64  	%rd6461, %rd6458, %rd6460;
	xor.b64  	%rd6462, %rd6461, %rd6459;
	add.s64 	%rd6463, %rd6374, %rd5925;
	add.s64 	%rd6464, %rd6463, %rd6457;
	add.s64 	%rd6465, %rd6464, %rd6462;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10750,%dummy}, %rd6452;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10751}, %rd6452;
	}
	shf.r.wrap.b32 	%r10752, %r10751, %r10750, 19;
	shf.r.wrap.b32 	%r10753, %r10750, %r10751, 19;
	mov.b64 	%rd6466, {%r10753, %r10752};
	shf.l.wrap.b32 	%r10754, %r10750, %r10751, 3;
	shf.l.wrap.b32 	%r10755, %r10751, %r10750, 3;
	mov.b64 	%rd6467, {%r10755, %r10754};
	shr.u64 	%rd6468, %rd6452, 6;
	xor.b64  	%rd6469, %rd6466, %rd6468;
	xor.b64  	%rd6470, %rd6469, %rd6467;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10756,%dummy}, %rd5927;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10757}, %rd5927;
	}
	shf.r.wrap.b32 	%r10758, %r10757, %r10756, 1;
	shf.r.wrap.b32 	%r10759, %r10756, %r10757, 1;
	mov.b64 	%rd6471, {%r10759, %r10758};
	shf.r.wrap.b32 	%r10760, %r10757, %r10756, 8;
	shf.r.wrap.b32 	%r10761, %r10756, %r10757, 8;
	mov.b64 	%rd6472, {%r10761, %r10760};
	shr.u64 	%rd6473, %rd5927, 7;
	xor.b64  	%rd6474, %rd6471, %rd6473;
	xor.b64  	%rd6475, %rd6474, %rd6472;
	add.s64 	%rd6476, %rd6387, %rd5926;
	add.s64 	%rd6477, %rd6476, %rd6470;
	add.s64 	%rd6478, %rd6477, %rd6475;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10762,%dummy}, %rd6465;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10763}, %rd6465;
	}
	shf.r.wrap.b32 	%r10764, %r10763, %r10762, 19;
	shf.r.wrap.b32 	%r10765, %r10762, %r10763, 19;
	mov.b64 	%rd6479, {%r10765, %r10764};
	shf.l.wrap.b32 	%r10766, %r10762, %r10763, 3;
	shf.l.wrap.b32 	%r10767, %r10763, %r10762, 3;
	mov.b64 	%rd6480, {%r10767, %r10766};
	shr.u64 	%rd6481, %rd6465, 6;
	xor.b64  	%rd6482, %rd6479, %rd6481;
	xor.b64  	%rd6483, %rd6482, %rd6480;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10768,%dummy}, %rd5928;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10769}, %rd5928;
	}
	shf.r.wrap.b32 	%r10770, %r10769, %r10768, 1;
	shf.r.wrap.b32 	%r10771, %r10768, %r10769, 1;
	mov.b64 	%rd6484, {%r10771, %r10770};
	shf.r.wrap.b32 	%r10772, %r10769, %r10768, 8;
	shf.r.wrap.b32 	%r10773, %r10768, %r10769, 8;
	mov.b64 	%rd6485, {%r10773, %r10772};
	shr.u64 	%rd6486, %rd5928, 7;
	xor.b64  	%rd6487, %rd6484, %rd6486;
	xor.b64  	%rd6488, %rd6487, %rd6485;
	add.s64 	%rd6489, %rd6400, %rd5927;
	add.s64 	%rd6490, %rd6489, %rd6483;
	add.s64 	%rd6491, %rd6490, %rd6488;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10774,%dummy}, %rd6478;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10775}, %rd6478;
	}
	shf.r.wrap.b32 	%r10776, %r10775, %r10774, 19;
	shf.r.wrap.b32 	%r10777, %r10774, %r10775, 19;
	mov.b64 	%rd6492, {%r10777, %r10776};
	shf.l.wrap.b32 	%r10778, %r10774, %r10775, 3;
	shf.l.wrap.b32 	%r10779, %r10775, %r10774, 3;
	mov.b64 	%rd6493, {%r10779, %r10778};
	shr.u64 	%rd6494, %rd6478, 6;
	xor.b64  	%rd6495, %rd6492, %rd6494;
	xor.b64  	%rd6496, %rd6495, %rd6493;
	shf.r.wrap.b32 	%r10780, %r10619, %r10618, 1;
	shf.r.wrap.b32 	%r10781, %r10618, %r10619, 1;
	mov.b64 	%rd6497, {%r10781, %r10780};
	shf.r.wrap.b32 	%r10782, %r10619, %r10618, 8;
	shf.r.wrap.b32 	%r10783, %r10618, %r10619, 8;
	mov.b64 	%rd6498, {%r10783, %r10782};
	shr.u64 	%rd6499, %rd5929, 7;
	xor.b64  	%rd6500, %rd6497, %rd6499;
	xor.b64  	%rd6501, %rd6500, %rd6498;
	add.s64 	%rd6502, %rd6413, %rd5928;
	add.s64 	%rd6503, %rd6502, %rd6496;
	add.s64 	%rd6504, %rd6503, %rd6501;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10784,%dummy}, %rd6491;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10785}, %rd6491;
	}
	shf.r.wrap.b32 	%r10786, %r10785, %r10784, 19;
	shf.r.wrap.b32 	%r10787, %r10784, %r10785, 19;
	mov.b64 	%rd6505, {%r10787, %r10786};
	shf.l.wrap.b32 	%r10788, %r10784, %r10785, 3;
	shf.l.wrap.b32 	%r10789, %r10785, %r10784, 3;
	mov.b64 	%rd6506, {%r10789, %r10788};
	shr.u64 	%rd6507, %rd6491, 6;
	xor.b64  	%rd6508, %rd6505, %rd6507;
	xor.b64  	%rd6509, %rd6508, %rd6506;
	shf.r.wrap.b32 	%r10790, %r10631, %r10630, 1;
	shf.r.wrap.b32 	%r10791, %r10630, %r10631, 1;
	mov.b64 	%rd6510, {%r10791, %r10790};
	shf.r.wrap.b32 	%r10792, %r10631, %r10630, 8;
	shf.r.wrap.b32 	%r10793, %r10630, %r10631, 8;
	mov.b64 	%rd6511, {%r10793, %r10792};
	shr.u64 	%rd6512, %rd5930, 7;
	xor.b64  	%rd6513, %rd6510, %rd6512;
	xor.b64  	%rd6514, %rd6513, %rd6511;
	add.s64 	%rd6515, %rd6426, %rd5929;
	add.s64 	%rd6516, %rd6515, %rd6509;
	add.s64 	%rd6517, %rd6516, %rd6514;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10794,%dummy}, %rd6504;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10795}, %rd6504;
	}
	shf.r.wrap.b32 	%r10796, %r10795, %r10794, 19;
	shf.r.wrap.b32 	%r10797, %r10794, %r10795, 19;
	mov.b64 	%rd6518, {%r10797, %r10796};
	shf.l.wrap.b32 	%r10798, %r10794, %r10795, 3;
	shf.l.wrap.b32 	%r10799, %r10795, %r10794, 3;
	mov.b64 	%rd6519, {%r10799, %r10798};
	shr.u64 	%rd6520, %rd6504, 6;
	xor.b64  	%rd6521, %rd6518, %rd6520;
	xor.b64  	%rd6522, %rd6521, %rd6519;
	shf.r.wrap.b32 	%r10800, %r10643, %r10642, 1;
	shf.r.wrap.b32 	%r10801, %r10642, %r10643, 1;
	mov.b64 	%rd6523, {%r10801, %r10800};
	shf.r.wrap.b32 	%r10802, %r10643, %r10642, 8;
	shf.r.wrap.b32 	%r10803, %r10642, %r10643, 8;
	mov.b64 	%rd6524, {%r10803, %r10802};
	shr.u64 	%rd6525, %rd6335, 7;
	xor.b64  	%rd6526, %rd6523, %rd6525;
	xor.b64  	%rd6527, %rd6526, %rd6524;
	add.s64 	%rd6528, %rd6439, %rd5930;
	add.s64 	%rd6529, %rd6528, %rd6522;
	add.s64 	%rd6530, %rd6529, %rd6527;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10804,%dummy}, %rd6311;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10805}, %rd6311;
	}
	shf.r.wrap.b32 	%r10806, %r10805, %r10804, 14;
	shf.r.wrap.b32 	%r10807, %r10804, %r10805, 14;
	mov.b64 	%rd6531, {%r10807, %r10806};
	shf.r.wrap.b32 	%r10808, %r10805, %r10804, 18;
	shf.r.wrap.b32 	%r10809, %r10804, %r10805, 18;
	mov.b64 	%rd6532, {%r10809, %r10808};
	xor.b64  	%rd6533, %rd6532, %rd6531;
	shf.l.wrap.b32 	%r10810, %r10804, %r10805, 23;
	shf.l.wrap.b32 	%r10811, %r10805, %r10804, 23;
	mov.b64 	%rd6534, {%r10811, %r10810};
	xor.b64  	%rd6535, %rd6533, %rd6534;
	xor.b64  	%rd6536, %rd6287, %rd6263;
	and.b64  	%rd6537, %rd6536, %rd6311;
	xor.b64  	%rd6538, %rd6537, %rd6263;
	add.s64 	%rd6539, %rd6538, %rd6239;
	add.s64 	%rd6540, %rd6539, %rd6335;
	ld.const.u64 	%rd6541, [k_sha512+128];
	add.s64 	%rd6542, %rd6540, %rd6541;
	add.s64 	%rd6543, %rd6542, %rd6535;
	add.s64 	%rd6544, %rd6543, %rd6250;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10812,%dummy}, %rd6322;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10813}, %rd6322;
	}
	shf.r.wrap.b32 	%r10814, %r10813, %r10812, 28;
	shf.r.wrap.b32 	%r10815, %r10812, %r10813, 28;
	mov.b64 	%rd6545, {%r10815, %r10814};
	shf.l.wrap.b32 	%r10816, %r10812, %r10813, 30;
	shf.l.wrap.b32 	%r10817, %r10813, %r10812, 30;
	mov.b64 	%rd6546, {%r10817, %r10816};
	xor.b64  	%rd6547, %rd6546, %rd6545;
	shf.l.wrap.b32 	%r10818, %r10812, %r10813, 25;
	shf.l.wrap.b32 	%r10819, %r10813, %r10812, 25;
	mov.b64 	%rd6548, {%r10819, %r10818};
	xor.b64  	%rd6549, %rd6547, %rd6548;
	xor.b64  	%rd6550, %rd6322, %rd6274;
	xor.b64  	%rd6551, %rd6322, %rd6298;
	and.b64  	%rd6552, %rd6551, %rd6550;
	xor.b64  	%rd6553, %rd6552, %rd6322;
	add.s64 	%rd6554, %rd6543, %rd6553;
	add.s64 	%rd6555, %rd6554, %rd6549;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10820,%dummy}, %rd6544;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10821}, %rd6544;
	}
	shf.r.wrap.b32 	%r10822, %r10821, %r10820, 14;
	shf.r.wrap.b32 	%r10823, %r10820, %r10821, 14;
	mov.b64 	%rd6556, {%r10823, %r10822};
	shf.r.wrap.b32 	%r10824, %r10821, %r10820, 18;
	shf.r.wrap.b32 	%r10825, %r10820, %r10821, 18;
	mov.b64 	%rd6557, {%r10825, %r10824};
	xor.b64  	%rd6558, %rd6557, %rd6556;
	shf.l.wrap.b32 	%r10826, %r10820, %r10821, 23;
	shf.l.wrap.b32 	%r10827, %r10821, %r10820, 23;
	mov.b64 	%rd6559, {%r10827, %r10826};
	xor.b64  	%rd6560, %rd6558, %rd6559;
	xor.b64  	%rd6561, %rd6311, %rd6287;
	and.b64  	%rd6562, %rd6544, %rd6561;
	xor.b64  	%rd6563, %rd6562, %rd6287;
	add.s64 	%rd6564, %rd6348, %rd6263;
	ld.const.u64 	%rd6565, [k_sha512+136];
	add.s64 	%rd6566, %rd6564, %rd6565;
	add.s64 	%rd6567, %rd6566, %rd6563;
	add.s64 	%rd6568, %rd6567, %rd6560;
	add.s64 	%rd6569, %rd6568, %rd6274;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10828,%dummy}, %rd6555;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10829}, %rd6555;
	}
	shf.r.wrap.b32 	%r10830, %r10829, %r10828, 28;
	shf.r.wrap.b32 	%r10831, %r10828, %r10829, 28;
	mov.b64 	%rd6570, {%r10831, %r10830};
	shf.l.wrap.b32 	%r10832, %r10828, %r10829, 30;
	shf.l.wrap.b32 	%r10833, %r10829, %r10828, 30;
	mov.b64 	%rd6571, {%r10833, %r10832};
	xor.b64  	%rd6572, %rd6571, %rd6570;
	shf.l.wrap.b32 	%r10834, %r10828, %r10829, 25;
	shf.l.wrap.b32 	%r10835, %r10829, %r10828, 25;
	mov.b64 	%rd6573, {%r10835, %r10834};
	xor.b64  	%rd6574, %rd6572, %rd6573;
	xor.b64  	%rd6575, %rd6555, %rd6298;
	xor.b64  	%rd6576, %rd6555, %rd6322;
	and.b64  	%rd6577, %rd6576, %rd6575;
	xor.b64  	%rd6578, %rd6577, %rd6555;
	add.s64 	%rd6579, %rd6568, %rd6578;
	add.s64 	%rd6580, %rd6579, %rd6574;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10836,%dummy}, %rd6569;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10837}, %rd6569;
	}
	shf.r.wrap.b32 	%r10838, %r10837, %r10836, 14;
	shf.r.wrap.b32 	%r10839, %r10836, %r10837, 14;
	mov.b64 	%rd6581, {%r10839, %r10838};
	shf.r.wrap.b32 	%r10840, %r10837, %r10836, 18;
	shf.r.wrap.b32 	%r10841, %r10836, %r10837, 18;
	mov.b64 	%rd6582, {%r10841, %r10840};
	xor.b64  	%rd6583, %rd6582, %rd6581;
	shf.l.wrap.b32 	%r10842, %r10836, %r10837, 23;
	shf.l.wrap.b32 	%r10843, %r10837, %r10836, 23;
	mov.b64 	%rd6584, {%r10843, %r10842};
	xor.b64  	%rd6585, %rd6583, %rd6584;
	xor.b64  	%rd6586, %rd6544, %rd6311;
	and.b64  	%rd6587, %rd6569, %rd6586;
	xor.b64  	%rd6588, %rd6587, %rd6311;
	add.s64 	%rd6589, %rd6361, %rd6287;
	ld.const.u64 	%rd6590, [k_sha512+144];
	add.s64 	%rd6591, %rd6589, %rd6590;
	add.s64 	%rd6592, %rd6591, %rd6588;
	add.s64 	%rd6593, %rd6592, %rd6585;
	add.s64 	%rd6594, %rd6593, %rd6298;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10844,%dummy}, %rd6580;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10845}, %rd6580;
	}
	shf.r.wrap.b32 	%r10846, %r10845, %r10844, 28;
	shf.r.wrap.b32 	%r10847, %r10844, %r10845, 28;
	mov.b64 	%rd6595, {%r10847, %r10846};
	shf.l.wrap.b32 	%r10848, %r10844, %r10845, 30;
	shf.l.wrap.b32 	%r10849, %r10845, %r10844, 30;
	mov.b64 	%rd6596, {%r10849, %r10848};
	xor.b64  	%rd6597, %rd6596, %rd6595;
	shf.l.wrap.b32 	%r10850, %r10844, %r10845, 25;
	shf.l.wrap.b32 	%r10851, %r10845, %r10844, 25;
	mov.b64 	%rd6598, {%r10851, %r10850};
	xor.b64  	%rd6599, %rd6597, %rd6598;
	xor.b64  	%rd6600, %rd6580, %rd6322;
	xor.b64  	%rd6601, %rd6580, %rd6555;
	and.b64  	%rd6602, %rd6601, %rd6600;
	xor.b64  	%rd6603, %rd6602, %rd6580;
	add.s64 	%rd6604, %rd6593, %rd6603;
	add.s64 	%rd6605, %rd6604, %rd6599;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10852,%dummy}, %rd6594;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10853}, %rd6594;
	}
	shf.r.wrap.b32 	%r10854, %r10853, %r10852, 14;
	shf.r.wrap.b32 	%r10855, %r10852, %r10853, 14;
	mov.b64 	%rd6606, {%r10855, %r10854};
	shf.r.wrap.b32 	%r10856, %r10853, %r10852, 18;
	shf.r.wrap.b32 	%r10857, %r10852, %r10853, 18;
	mov.b64 	%rd6607, {%r10857, %r10856};
	xor.b64  	%rd6608, %rd6607, %rd6606;
	shf.l.wrap.b32 	%r10858, %r10852, %r10853, 23;
	shf.l.wrap.b32 	%r10859, %r10853, %r10852, 23;
	mov.b64 	%rd6609, {%r10859, %r10858};
	xor.b64  	%rd6610, %rd6608, %rd6609;
	xor.b64  	%rd6611, %rd6569, %rd6544;
	and.b64  	%rd6612, %rd6594, %rd6611;
	xor.b64  	%rd6613, %rd6612, %rd6544;
	add.s64 	%rd6614, %rd6374, %rd6311;
	ld.const.u64 	%rd6615, [k_sha512+152];
	add.s64 	%rd6616, %rd6614, %rd6615;
	add.s64 	%rd6617, %rd6616, %rd6613;
	add.s64 	%rd6618, %rd6617, %rd6610;
	add.s64 	%rd6619, %rd6618, %rd6322;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10860,%dummy}, %rd6605;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10861}, %rd6605;
	}
	shf.r.wrap.b32 	%r10862, %r10861, %r10860, 28;
	shf.r.wrap.b32 	%r10863, %r10860, %r10861, 28;
	mov.b64 	%rd6620, {%r10863, %r10862};
	shf.l.wrap.b32 	%r10864, %r10860, %r10861, 30;
	shf.l.wrap.b32 	%r10865, %r10861, %r10860, 30;
	mov.b64 	%rd6621, {%r10865, %r10864};
	xor.b64  	%rd6622, %rd6621, %rd6620;
	shf.l.wrap.b32 	%r10866, %r10860, %r10861, 25;
	shf.l.wrap.b32 	%r10867, %r10861, %r10860, 25;
	mov.b64 	%rd6623, {%r10867, %r10866};
	xor.b64  	%rd6624, %rd6622, %rd6623;
	xor.b64  	%rd6625, %rd6605, %rd6555;
	xor.b64  	%rd6626, %rd6605, %rd6580;
	and.b64  	%rd6627, %rd6626, %rd6625;
	xor.b64  	%rd6628, %rd6627, %rd6605;
	add.s64 	%rd6629, %rd6618, %rd6628;
	add.s64 	%rd6630, %rd6629, %rd6624;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10868,%dummy}, %rd6619;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10869}, %rd6619;
	}
	shf.r.wrap.b32 	%r10870, %r10869, %r10868, 14;
	shf.r.wrap.b32 	%r10871, %r10868, %r10869, 14;
	mov.b64 	%rd6631, {%r10871, %r10870};
	shf.r.wrap.b32 	%r10872, %r10869, %r10868, 18;
	shf.r.wrap.b32 	%r10873, %r10868, %r10869, 18;
	mov.b64 	%rd6632, {%r10873, %r10872};
	xor.b64  	%rd6633, %rd6632, %rd6631;
	shf.l.wrap.b32 	%r10874, %r10868, %r10869, 23;
	shf.l.wrap.b32 	%r10875, %r10869, %r10868, 23;
	mov.b64 	%rd6634, {%r10875, %r10874};
	xor.b64  	%rd6635, %rd6633, %rd6634;
	xor.b64  	%rd6636, %rd6594, %rd6569;
	and.b64  	%rd6637, %rd6619, %rd6636;
	xor.b64  	%rd6638, %rd6637, %rd6569;
	add.s64 	%rd6639, %rd6544, %rd6387;
	ld.const.u64 	%rd6640, [k_sha512+160];
	add.s64 	%rd6641, %rd6639, %rd6640;
	add.s64 	%rd6642, %rd6641, %rd6638;
	add.s64 	%rd6643, %rd6642, %rd6635;
	add.s64 	%rd6644, %rd6643, %rd6555;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10876,%dummy}, %rd6630;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10877}, %rd6630;
	}
	shf.r.wrap.b32 	%r10878, %r10877, %r10876, 28;
	shf.r.wrap.b32 	%r10879, %r10876, %r10877, 28;
	mov.b64 	%rd6645, {%r10879, %r10878};
	shf.l.wrap.b32 	%r10880, %r10876, %r10877, 30;
	shf.l.wrap.b32 	%r10881, %r10877, %r10876, 30;
	mov.b64 	%rd6646, {%r10881, %r10880};
	xor.b64  	%rd6647, %rd6646, %rd6645;
	shf.l.wrap.b32 	%r10882, %r10876, %r10877, 25;
	shf.l.wrap.b32 	%r10883, %r10877, %r10876, 25;
	mov.b64 	%rd6648, {%r10883, %r10882};
	xor.b64  	%rd6649, %rd6647, %rd6648;
	xor.b64  	%rd6650, %rd6630, %rd6580;
	xor.b64  	%rd6651, %rd6630, %rd6605;
	and.b64  	%rd6652, %rd6651, %rd6650;
	xor.b64  	%rd6653, %rd6652, %rd6630;
	add.s64 	%rd6654, %rd6643, %rd6653;
	add.s64 	%rd6655, %rd6654, %rd6649;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10884,%dummy}, %rd6644;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10885}, %rd6644;
	}
	shf.r.wrap.b32 	%r10886, %r10885, %r10884, 14;
	shf.r.wrap.b32 	%r10887, %r10884, %r10885, 14;
	mov.b64 	%rd6656, {%r10887, %r10886};
	shf.r.wrap.b32 	%r10888, %r10885, %r10884, 18;
	shf.r.wrap.b32 	%r10889, %r10884, %r10885, 18;
	mov.b64 	%rd6657, {%r10889, %r10888};
	xor.b64  	%rd6658, %rd6657, %rd6656;
	shf.l.wrap.b32 	%r10890, %r10884, %r10885, 23;
	shf.l.wrap.b32 	%r10891, %r10885, %r10884, 23;
	mov.b64 	%rd6659, {%r10891, %r10890};
	xor.b64  	%rd6660, %rd6658, %rd6659;
	xor.b64  	%rd6661, %rd6619, %rd6594;
	and.b64  	%rd6662, %rd6644, %rd6661;
	xor.b64  	%rd6663, %rd6662, %rd6594;
	add.s64 	%rd6664, %rd6569, %rd6400;
	ld.const.u64 	%rd6665, [k_sha512+168];
	add.s64 	%rd6666, %rd6664, %rd6665;
	add.s64 	%rd6667, %rd6666, %rd6663;
	add.s64 	%rd6668, %rd6667, %rd6660;
	add.s64 	%rd6669, %rd6668, %rd6580;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10892,%dummy}, %rd6655;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10893}, %rd6655;
	}
	shf.r.wrap.b32 	%r10894, %r10893, %r10892, 28;
	shf.r.wrap.b32 	%r10895, %r10892, %r10893, 28;
	mov.b64 	%rd6670, {%r10895, %r10894};
	shf.l.wrap.b32 	%r10896, %r10892, %r10893, 30;
	shf.l.wrap.b32 	%r10897, %r10893, %r10892, 30;
	mov.b64 	%rd6671, {%r10897, %r10896};
	xor.b64  	%rd6672, %rd6671, %rd6670;
	shf.l.wrap.b32 	%r10898, %r10892, %r10893, 25;
	shf.l.wrap.b32 	%r10899, %r10893, %r10892, 25;
	mov.b64 	%rd6673, {%r10899, %r10898};
	xor.b64  	%rd6674, %rd6672, %rd6673;
	xor.b64  	%rd6675, %rd6655, %rd6605;
	xor.b64  	%rd6676, %rd6655, %rd6630;
	and.b64  	%rd6677, %rd6676, %rd6675;
	xor.b64  	%rd6678, %rd6677, %rd6655;
	add.s64 	%rd6679, %rd6668, %rd6678;
	add.s64 	%rd6680, %rd6679, %rd6674;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10900,%dummy}, %rd6669;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10901}, %rd6669;
	}
	shf.r.wrap.b32 	%r10902, %r10901, %r10900, 14;
	shf.r.wrap.b32 	%r10903, %r10900, %r10901, 14;
	mov.b64 	%rd6681, {%r10903, %r10902};
	shf.r.wrap.b32 	%r10904, %r10901, %r10900, 18;
	shf.r.wrap.b32 	%r10905, %r10900, %r10901, 18;
	mov.b64 	%rd6682, {%r10905, %r10904};
	xor.b64  	%rd6683, %rd6682, %rd6681;
	shf.l.wrap.b32 	%r10906, %r10900, %r10901, 23;
	shf.l.wrap.b32 	%r10907, %r10901, %r10900, 23;
	mov.b64 	%rd6684, {%r10907, %r10906};
	xor.b64  	%rd6685, %rd6683, %rd6684;
	xor.b64  	%rd6686, %rd6644, %rd6619;
	and.b64  	%rd6687, %rd6669, %rd6686;
	xor.b64  	%rd6688, %rd6687, %rd6619;
	add.s64 	%rd6689, %rd6594, %rd6413;
	ld.const.u64 	%rd6690, [k_sha512+176];
	add.s64 	%rd6691, %rd6689, %rd6690;
	add.s64 	%rd6692, %rd6691, %rd6688;
	add.s64 	%rd6693, %rd6692, %rd6685;
	add.s64 	%rd6694, %rd6693, %rd6605;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10908,%dummy}, %rd6680;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10909}, %rd6680;
	}
	shf.r.wrap.b32 	%r10910, %r10909, %r10908, 28;
	shf.r.wrap.b32 	%r10911, %r10908, %r10909, 28;
	mov.b64 	%rd6695, {%r10911, %r10910};
	shf.l.wrap.b32 	%r10912, %r10908, %r10909, 30;
	shf.l.wrap.b32 	%r10913, %r10909, %r10908, 30;
	mov.b64 	%rd6696, {%r10913, %r10912};
	xor.b64  	%rd6697, %rd6696, %rd6695;
	shf.l.wrap.b32 	%r10914, %r10908, %r10909, 25;
	shf.l.wrap.b32 	%r10915, %r10909, %r10908, 25;
	mov.b64 	%rd6698, {%r10915, %r10914};
	xor.b64  	%rd6699, %rd6697, %rd6698;
	xor.b64  	%rd6700, %rd6680, %rd6630;
	xor.b64  	%rd6701, %rd6680, %rd6655;
	and.b64  	%rd6702, %rd6701, %rd6700;
	xor.b64  	%rd6703, %rd6702, %rd6680;
	add.s64 	%rd6704, %rd6693, %rd6703;
	add.s64 	%rd6705, %rd6704, %rd6699;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10916,%dummy}, %rd6694;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10917}, %rd6694;
	}
	shf.r.wrap.b32 	%r10918, %r10917, %r10916, 14;
	shf.r.wrap.b32 	%r10919, %r10916, %r10917, 14;
	mov.b64 	%rd6706, {%r10919, %r10918};
	shf.r.wrap.b32 	%r10920, %r10917, %r10916, 18;
	shf.r.wrap.b32 	%r10921, %r10916, %r10917, 18;
	mov.b64 	%rd6707, {%r10921, %r10920};
	xor.b64  	%rd6708, %rd6707, %rd6706;
	shf.l.wrap.b32 	%r10922, %r10916, %r10917, 23;
	shf.l.wrap.b32 	%r10923, %r10917, %r10916, 23;
	mov.b64 	%rd6709, {%r10923, %r10922};
	xor.b64  	%rd6710, %rd6708, %rd6709;
	xor.b64  	%rd6711, %rd6669, %rd6644;
	and.b64  	%rd6712, %rd6694, %rd6711;
	xor.b64  	%rd6713, %rd6712, %rd6644;
	add.s64 	%rd6714, %rd6619, %rd6426;
	ld.const.u64 	%rd6715, [k_sha512+184];
	add.s64 	%rd6716, %rd6714, %rd6715;
	add.s64 	%rd6717, %rd6716, %rd6713;
	add.s64 	%rd6718, %rd6717, %rd6710;
	add.s64 	%rd6719, %rd6718, %rd6630;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10924,%dummy}, %rd6705;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10925}, %rd6705;
	}
	shf.r.wrap.b32 	%r10926, %r10925, %r10924, 28;
	shf.r.wrap.b32 	%r10927, %r10924, %r10925, 28;
	mov.b64 	%rd6720, {%r10927, %r10926};
	shf.l.wrap.b32 	%r10928, %r10924, %r10925, 30;
	shf.l.wrap.b32 	%r10929, %r10925, %r10924, 30;
	mov.b64 	%rd6721, {%r10929, %r10928};
	xor.b64  	%rd6722, %rd6721, %rd6720;
	shf.l.wrap.b32 	%r10930, %r10924, %r10925, 25;
	shf.l.wrap.b32 	%r10931, %r10925, %r10924, 25;
	mov.b64 	%rd6723, {%r10931, %r10930};
	xor.b64  	%rd6724, %rd6722, %rd6723;
	xor.b64  	%rd6725, %rd6705, %rd6655;
	xor.b64  	%rd6726, %rd6705, %rd6680;
	and.b64  	%rd6727, %rd6726, %rd6725;
	xor.b64  	%rd6728, %rd6727, %rd6705;
	add.s64 	%rd6729, %rd6718, %rd6728;
	add.s64 	%rd6730, %rd6729, %rd6724;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10932,%dummy}, %rd6719;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10933}, %rd6719;
	}
	shf.r.wrap.b32 	%r10934, %r10933, %r10932, 14;
	shf.r.wrap.b32 	%r10935, %r10932, %r10933, 14;
	mov.b64 	%rd6731, {%r10935, %r10934};
	shf.r.wrap.b32 	%r10936, %r10933, %r10932, 18;
	shf.r.wrap.b32 	%r10937, %r10932, %r10933, 18;
	mov.b64 	%rd6732, {%r10937, %r10936};
	xor.b64  	%rd6733, %rd6732, %rd6731;
	shf.l.wrap.b32 	%r10938, %r10932, %r10933, 23;
	shf.l.wrap.b32 	%r10939, %r10933, %r10932, 23;
	mov.b64 	%rd6734, {%r10939, %r10938};
	xor.b64  	%rd6735, %rd6733, %rd6734;
	xor.b64  	%rd6736, %rd6694, %rd6669;
	and.b64  	%rd6737, %rd6719, %rd6736;
	xor.b64  	%rd6738, %rd6737, %rd6669;
	add.s64 	%rd6739, %rd6644, %rd6439;
	ld.const.u64 	%rd6740, [k_sha512+192];
	add.s64 	%rd6741, %rd6739, %rd6740;
	add.s64 	%rd6742, %rd6741, %rd6738;
	add.s64 	%rd6743, %rd6742, %rd6735;
	add.s64 	%rd6744, %rd6743, %rd6655;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10940,%dummy}, %rd6730;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10941}, %rd6730;
	}
	shf.r.wrap.b32 	%r10942, %r10941, %r10940, 28;
	shf.r.wrap.b32 	%r10943, %r10940, %r10941, 28;
	mov.b64 	%rd6745, {%r10943, %r10942};
	shf.l.wrap.b32 	%r10944, %r10940, %r10941, 30;
	shf.l.wrap.b32 	%r10945, %r10941, %r10940, 30;
	mov.b64 	%rd6746, {%r10945, %r10944};
	xor.b64  	%rd6747, %rd6746, %rd6745;
	shf.l.wrap.b32 	%r10946, %r10940, %r10941, 25;
	shf.l.wrap.b32 	%r10947, %r10941, %r10940, 25;
	mov.b64 	%rd6748, {%r10947, %r10946};
	xor.b64  	%rd6749, %rd6747, %rd6748;
	xor.b64  	%rd6750, %rd6730, %rd6680;
	xor.b64  	%rd6751, %rd6730, %rd6705;
	and.b64  	%rd6752, %rd6751, %rd6750;
	xor.b64  	%rd6753, %rd6752, %rd6730;
	add.s64 	%rd6754, %rd6743, %rd6753;
	add.s64 	%rd6755, %rd6754, %rd6749;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10948,%dummy}, %rd6744;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10949}, %rd6744;
	}
	shf.r.wrap.b32 	%r10950, %r10949, %r10948, 14;
	shf.r.wrap.b32 	%r10951, %r10948, %r10949, 14;
	mov.b64 	%rd6756, {%r10951, %r10950};
	shf.r.wrap.b32 	%r10952, %r10949, %r10948, 18;
	shf.r.wrap.b32 	%r10953, %r10948, %r10949, 18;
	mov.b64 	%rd6757, {%r10953, %r10952};
	xor.b64  	%rd6758, %rd6757, %rd6756;
	shf.l.wrap.b32 	%r10954, %r10948, %r10949, 23;
	shf.l.wrap.b32 	%r10955, %r10949, %r10948, 23;
	mov.b64 	%rd6759, {%r10955, %r10954};
	xor.b64  	%rd6760, %rd6758, %rd6759;
	xor.b64  	%rd6761, %rd6719, %rd6694;
	and.b64  	%rd6762, %rd6744, %rd6761;
	xor.b64  	%rd6763, %rd6762, %rd6694;
	add.s64 	%rd6764, %rd6669, %rd6452;
	ld.const.u64 	%rd6765, [k_sha512+200];
	add.s64 	%rd6766, %rd6764, %rd6765;
	add.s64 	%rd6767, %rd6766, %rd6763;
	add.s64 	%rd6768, %rd6767, %rd6760;
	add.s64 	%rd6769, %rd6768, %rd6680;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10956,%dummy}, %rd6755;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10957}, %rd6755;
	}
	shf.r.wrap.b32 	%r10958, %r10957, %r10956, 28;
	shf.r.wrap.b32 	%r10959, %r10956, %r10957, 28;
	mov.b64 	%rd6770, {%r10959, %r10958};
	shf.l.wrap.b32 	%r10960, %r10956, %r10957, 30;
	shf.l.wrap.b32 	%r10961, %r10957, %r10956, 30;
	mov.b64 	%rd6771, {%r10961, %r10960};
	xor.b64  	%rd6772, %rd6771, %rd6770;
	shf.l.wrap.b32 	%r10962, %r10956, %r10957, 25;
	shf.l.wrap.b32 	%r10963, %r10957, %r10956, 25;
	mov.b64 	%rd6773, {%r10963, %r10962};
	xor.b64  	%rd6774, %rd6772, %rd6773;
	xor.b64  	%rd6775, %rd6755, %rd6705;
	xor.b64  	%rd6776, %rd6755, %rd6730;
	and.b64  	%rd6777, %rd6776, %rd6775;
	xor.b64  	%rd6778, %rd6777, %rd6755;
	add.s64 	%rd6779, %rd6768, %rd6778;
	add.s64 	%rd6780, %rd6779, %rd6774;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10964,%dummy}, %rd6769;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10965}, %rd6769;
	}
	shf.r.wrap.b32 	%r10966, %r10965, %r10964, 14;
	shf.r.wrap.b32 	%r10967, %r10964, %r10965, 14;
	mov.b64 	%rd6781, {%r10967, %r10966};
	shf.r.wrap.b32 	%r10968, %r10965, %r10964, 18;
	shf.r.wrap.b32 	%r10969, %r10964, %r10965, 18;
	mov.b64 	%rd6782, {%r10969, %r10968};
	xor.b64  	%rd6783, %rd6782, %rd6781;
	shf.l.wrap.b32 	%r10970, %r10964, %r10965, 23;
	shf.l.wrap.b32 	%r10971, %r10965, %r10964, 23;
	mov.b64 	%rd6784, {%r10971, %r10970};
	xor.b64  	%rd6785, %rd6783, %rd6784;
	xor.b64  	%rd6786, %rd6744, %rd6719;
	and.b64  	%rd6787, %rd6769, %rd6786;
	xor.b64  	%rd6788, %rd6787, %rd6719;
	add.s64 	%rd6789, %rd6694, %rd6465;
	ld.const.u64 	%rd6790, [k_sha512+208];
	add.s64 	%rd6791, %rd6789, %rd6790;
	add.s64 	%rd6792, %rd6791, %rd6788;
	add.s64 	%rd6793, %rd6792, %rd6785;
	add.s64 	%rd6794, %rd6793, %rd6705;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10972,%dummy}, %rd6780;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10973}, %rd6780;
	}
	shf.r.wrap.b32 	%r10974, %r10973, %r10972, 28;
	shf.r.wrap.b32 	%r10975, %r10972, %r10973, 28;
	mov.b64 	%rd6795, {%r10975, %r10974};
	shf.l.wrap.b32 	%r10976, %r10972, %r10973, 30;
	shf.l.wrap.b32 	%r10977, %r10973, %r10972, 30;
	mov.b64 	%rd6796, {%r10977, %r10976};
	xor.b64  	%rd6797, %rd6796, %rd6795;
	shf.l.wrap.b32 	%r10978, %r10972, %r10973, 25;
	shf.l.wrap.b32 	%r10979, %r10973, %r10972, 25;
	mov.b64 	%rd6798, {%r10979, %r10978};
	xor.b64  	%rd6799, %rd6797, %rd6798;
	xor.b64  	%rd6800, %rd6780, %rd6730;
	xor.b64  	%rd6801, %rd6780, %rd6755;
	and.b64  	%rd6802, %rd6801, %rd6800;
	xor.b64  	%rd6803, %rd6802, %rd6780;
	add.s64 	%rd6804, %rd6793, %rd6803;
	add.s64 	%rd6805, %rd6804, %rd6799;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10980,%dummy}, %rd6794;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10981}, %rd6794;
	}
	shf.r.wrap.b32 	%r10982, %r10981, %r10980, 14;
	shf.r.wrap.b32 	%r10983, %r10980, %r10981, 14;
	mov.b64 	%rd6806, {%r10983, %r10982};
	shf.r.wrap.b32 	%r10984, %r10981, %r10980, 18;
	shf.r.wrap.b32 	%r10985, %r10980, %r10981, 18;
	mov.b64 	%rd6807, {%r10985, %r10984};
	xor.b64  	%rd6808, %rd6807, %rd6806;
	shf.l.wrap.b32 	%r10986, %r10980, %r10981, 23;
	shf.l.wrap.b32 	%r10987, %r10981, %r10980, 23;
	mov.b64 	%rd6809, {%r10987, %r10986};
	xor.b64  	%rd6810, %rd6808, %rd6809;
	xor.b64  	%rd6811, %rd6769, %rd6744;
	and.b64  	%rd6812, %rd6794, %rd6811;
	xor.b64  	%rd6813, %rd6812, %rd6744;
	add.s64 	%rd6814, %rd6719, %rd6478;
	ld.const.u64 	%rd6815, [k_sha512+216];
	add.s64 	%rd6816, %rd6814, %rd6815;
	add.s64 	%rd6817, %rd6816, %rd6813;
	add.s64 	%rd6818, %rd6817, %rd6810;
	add.s64 	%rd6819, %rd6818, %rd6730;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10988,%dummy}, %rd6805;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10989}, %rd6805;
	}
	shf.r.wrap.b32 	%r10990, %r10989, %r10988, 28;
	shf.r.wrap.b32 	%r10991, %r10988, %r10989, 28;
	mov.b64 	%rd6820, {%r10991, %r10990};
	shf.l.wrap.b32 	%r10992, %r10988, %r10989, 30;
	shf.l.wrap.b32 	%r10993, %r10989, %r10988, 30;
	mov.b64 	%rd6821, {%r10993, %r10992};
	xor.b64  	%rd6822, %rd6821, %rd6820;
	shf.l.wrap.b32 	%r10994, %r10988, %r10989, 25;
	shf.l.wrap.b32 	%r10995, %r10989, %r10988, 25;
	mov.b64 	%rd6823, {%r10995, %r10994};
	xor.b64  	%rd6824, %rd6822, %rd6823;
	xor.b64  	%rd6825, %rd6805, %rd6755;
	xor.b64  	%rd6826, %rd6805, %rd6780;
	and.b64  	%rd6827, %rd6826, %rd6825;
	xor.b64  	%rd6828, %rd6827, %rd6805;
	add.s64 	%rd6829, %rd6818, %rd6828;
	add.s64 	%rd6830, %rd6829, %rd6824;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r10996,%dummy}, %rd6819;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r10997}, %rd6819;
	}
	shf.r.wrap.b32 	%r10998, %r10997, %r10996, 14;
	shf.r.wrap.b32 	%r10999, %r10996, %r10997, 14;
	mov.b64 	%rd6831, {%r10999, %r10998};
	shf.r.wrap.b32 	%r11000, %r10997, %r10996, 18;
	shf.r.wrap.b32 	%r11001, %r10996, %r10997, 18;
	mov.b64 	%rd6832, {%r11001, %r11000};
	xor.b64  	%rd6833, %rd6832, %rd6831;
	shf.l.wrap.b32 	%r11002, %r10996, %r10997, 23;
	shf.l.wrap.b32 	%r11003, %r10997, %r10996, 23;
	mov.b64 	%rd6834, {%r11003, %r11002};
	xor.b64  	%rd6835, %rd6833, %rd6834;
	xor.b64  	%rd6836, %rd6794, %rd6769;
	and.b64  	%rd6837, %rd6819, %rd6836;
	xor.b64  	%rd6838, %rd6837, %rd6769;
	add.s64 	%rd6839, %rd6744, %rd6491;
	ld.const.u64 	%rd6840, [k_sha512+224];
	add.s64 	%rd6841, %rd6839, %rd6840;
	add.s64 	%rd6842, %rd6841, %rd6838;
	add.s64 	%rd6843, %rd6842, %rd6835;
	add.s64 	%rd6844, %rd6843, %rd6755;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11004,%dummy}, %rd6830;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11005}, %rd6830;
	}
	shf.r.wrap.b32 	%r11006, %r11005, %r11004, 28;
	shf.r.wrap.b32 	%r11007, %r11004, %r11005, 28;
	mov.b64 	%rd6845, {%r11007, %r11006};
	shf.l.wrap.b32 	%r11008, %r11004, %r11005, 30;
	shf.l.wrap.b32 	%r11009, %r11005, %r11004, 30;
	mov.b64 	%rd6846, {%r11009, %r11008};
	xor.b64  	%rd6847, %rd6846, %rd6845;
	shf.l.wrap.b32 	%r11010, %r11004, %r11005, 25;
	shf.l.wrap.b32 	%r11011, %r11005, %r11004, 25;
	mov.b64 	%rd6848, {%r11011, %r11010};
	xor.b64  	%rd6849, %rd6847, %rd6848;
	xor.b64  	%rd6850, %rd6830, %rd6780;
	xor.b64  	%rd6851, %rd6830, %rd6805;
	and.b64  	%rd6852, %rd6851, %rd6850;
	xor.b64  	%rd6853, %rd6852, %rd6830;
	add.s64 	%rd6854, %rd6843, %rd6853;
	add.s64 	%rd6855, %rd6854, %rd6849;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11012,%dummy}, %rd6844;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11013}, %rd6844;
	}
	shf.r.wrap.b32 	%r11014, %r11013, %r11012, 14;
	shf.r.wrap.b32 	%r11015, %r11012, %r11013, 14;
	mov.b64 	%rd6856, {%r11015, %r11014};
	shf.r.wrap.b32 	%r11016, %r11013, %r11012, 18;
	shf.r.wrap.b32 	%r11017, %r11012, %r11013, 18;
	mov.b64 	%rd6857, {%r11017, %r11016};
	xor.b64  	%rd6858, %rd6857, %rd6856;
	shf.l.wrap.b32 	%r11018, %r11012, %r11013, 23;
	shf.l.wrap.b32 	%r11019, %r11013, %r11012, 23;
	mov.b64 	%rd6859, {%r11019, %r11018};
	xor.b64  	%rd6860, %rd6858, %rd6859;
	xor.b64  	%rd6861, %rd6819, %rd6794;
	and.b64  	%rd6862, %rd6844, %rd6861;
	xor.b64  	%rd6863, %rd6862, %rd6794;
	add.s64 	%rd6864, %rd6769, %rd6504;
	ld.const.u64 	%rd6865, [k_sha512+232];
	add.s64 	%rd6866, %rd6864, %rd6865;
	add.s64 	%rd6867, %rd6866, %rd6863;
	add.s64 	%rd6868, %rd6867, %rd6860;
	add.s64 	%rd6869, %rd6868, %rd6780;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11020,%dummy}, %rd6855;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11021}, %rd6855;
	}
	shf.r.wrap.b32 	%r11022, %r11021, %r11020, 28;
	shf.r.wrap.b32 	%r11023, %r11020, %r11021, 28;
	mov.b64 	%rd6870, {%r11023, %r11022};
	shf.l.wrap.b32 	%r11024, %r11020, %r11021, 30;
	shf.l.wrap.b32 	%r11025, %r11021, %r11020, 30;
	mov.b64 	%rd6871, {%r11025, %r11024};
	xor.b64  	%rd6872, %rd6871, %rd6870;
	shf.l.wrap.b32 	%r11026, %r11020, %r11021, 25;
	shf.l.wrap.b32 	%r11027, %r11021, %r11020, 25;
	mov.b64 	%rd6873, {%r11027, %r11026};
	xor.b64  	%rd6874, %rd6872, %rd6873;
	xor.b64  	%rd6875, %rd6855, %rd6805;
	xor.b64  	%rd6876, %rd6855, %rd6830;
	and.b64  	%rd6877, %rd6876, %rd6875;
	xor.b64  	%rd6878, %rd6877, %rd6855;
	add.s64 	%rd6879, %rd6868, %rd6878;
	add.s64 	%rd6880, %rd6879, %rd6874;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11028,%dummy}, %rd6869;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11029}, %rd6869;
	}
	shf.r.wrap.b32 	%r11030, %r11029, %r11028, 14;
	shf.r.wrap.b32 	%r11031, %r11028, %r11029, 14;
	mov.b64 	%rd6881, {%r11031, %r11030};
	shf.r.wrap.b32 	%r11032, %r11029, %r11028, 18;
	shf.r.wrap.b32 	%r11033, %r11028, %r11029, 18;
	mov.b64 	%rd6882, {%r11033, %r11032};
	xor.b64  	%rd6883, %rd6882, %rd6881;
	shf.l.wrap.b32 	%r11034, %r11028, %r11029, 23;
	shf.l.wrap.b32 	%r11035, %r11029, %r11028, 23;
	mov.b64 	%rd6884, {%r11035, %r11034};
	xor.b64  	%rd6885, %rd6883, %rd6884;
	xor.b64  	%rd6886, %rd6844, %rd6819;
	and.b64  	%rd6887, %rd6869, %rd6886;
	xor.b64  	%rd6888, %rd6887, %rd6819;
	add.s64 	%rd6889, %rd6794, %rd6517;
	ld.const.u64 	%rd6890, [k_sha512+240];
	add.s64 	%rd6891, %rd6889, %rd6890;
	add.s64 	%rd6892, %rd6891, %rd6888;
	add.s64 	%rd6893, %rd6892, %rd6885;
	add.s64 	%rd6894, %rd6893, %rd6805;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11036,%dummy}, %rd6880;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11037}, %rd6880;
	}
	shf.r.wrap.b32 	%r11038, %r11037, %r11036, 28;
	shf.r.wrap.b32 	%r11039, %r11036, %r11037, 28;
	mov.b64 	%rd6895, {%r11039, %r11038};
	shf.l.wrap.b32 	%r11040, %r11036, %r11037, 30;
	shf.l.wrap.b32 	%r11041, %r11037, %r11036, 30;
	mov.b64 	%rd6896, {%r11041, %r11040};
	xor.b64  	%rd6897, %rd6896, %rd6895;
	shf.l.wrap.b32 	%r11042, %r11036, %r11037, 25;
	shf.l.wrap.b32 	%r11043, %r11037, %r11036, 25;
	mov.b64 	%rd6898, {%r11043, %r11042};
	xor.b64  	%rd6899, %rd6897, %rd6898;
	xor.b64  	%rd6900, %rd6880, %rd6830;
	xor.b64  	%rd6901, %rd6880, %rd6855;
	and.b64  	%rd6902, %rd6901, %rd6900;
	xor.b64  	%rd6903, %rd6902, %rd6880;
	add.s64 	%rd6904, %rd6893, %rd6903;
	add.s64 	%rd6905, %rd6904, %rd6899;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11044,%dummy}, %rd6894;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11045}, %rd6894;
	}
	shf.r.wrap.b32 	%r11046, %r11045, %r11044, 14;
	shf.r.wrap.b32 	%r11047, %r11044, %r11045, 14;
	mov.b64 	%rd6906, {%r11047, %r11046};
	shf.r.wrap.b32 	%r11048, %r11045, %r11044, 18;
	shf.r.wrap.b32 	%r11049, %r11044, %r11045, 18;
	mov.b64 	%rd6907, {%r11049, %r11048};
	xor.b64  	%rd6908, %rd6907, %rd6906;
	shf.l.wrap.b32 	%r11050, %r11044, %r11045, 23;
	shf.l.wrap.b32 	%r11051, %r11045, %r11044, 23;
	mov.b64 	%rd6909, {%r11051, %r11050};
	xor.b64  	%rd6910, %rd6908, %rd6909;
	xor.b64  	%rd6911, %rd6869, %rd6844;
	and.b64  	%rd6912, %rd6894, %rd6911;
	xor.b64  	%rd6913, %rd6912, %rd6844;
	add.s64 	%rd6914, %rd6819, %rd6530;
	ld.const.u64 	%rd6915, [k_sha512+248];
	add.s64 	%rd6916, %rd6914, %rd6915;
	add.s64 	%rd6917, %rd6916, %rd6913;
	add.s64 	%rd6918, %rd6917, %rd6910;
	add.s64 	%rd6919, %rd6918, %rd6830;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11052,%dummy}, %rd6905;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11053}, %rd6905;
	}
	shf.r.wrap.b32 	%r11054, %r11053, %r11052, 28;
	shf.r.wrap.b32 	%r11055, %r11052, %r11053, 28;
	mov.b64 	%rd6920, {%r11055, %r11054};
	shf.l.wrap.b32 	%r11056, %r11052, %r11053, 30;
	shf.l.wrap.b32 	%r11057, %r11053, %r11052, 30;
	mov.b64 	%rd6921, {%r11057, %r11056};
	xor.b64  	%rd6922, %rd6921, %rd6920;
	shf.l.wrap.b32 	%r11058, %r11052, %r11053, 25;
	shf.l.wrap.b32 	%r11059, %r11053, %r11052, 25;
	mov.b64 	%rd6923, {%r11059, %r11058};
	xor.b64  	%rd6924, %rd6922, %rd6923;
	xor.b64  	%rd6925, %rd6905, %rd6855;
	xor.b64  	%rd6926, %rd6905, %rd6880;
	and.b64  	%rd6927, %rd6926, %rd6925;
	xor.b64  	%rd6928, %rd6927, %rd6905;
	add.s64 	%rd6929, %rd6918, %rd6928;
	add.s64 	%rd6930, %rd6929, %rd6924;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11060,%dummy}, %rd6517;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11061}, %rd6517;
	}
	shf.r.wrap.b32 	%r11062, %r11061, %r11060, 19;
	shf.r.wrap.b32 	%r11063, %r11060, %r11061, 19;
	mov.b64 	%rd6931, {%r11063, %r11062};
	shf.l.wrap.b32 	%r11064, %r11060, %r11061, 3;
	shf.l.wrap.b32 	%r11065, %r11061, %r11060, 3;
	mov.b64 	%rd6932, {%r11065, %r11064};
	shr.u64 	%rd6933, %rd6517, 6;
	xor.b64  	%rd6934, %rd6931, %rd6933;
	xor.b64  	%rd6935, %rd6934, %rd6932;
	shf.r.wrap.b32 	%r11066, %r10655, %r10654, 1;
	shf.r.wrap.b32 	%r11067, %r10654, %r10655, 1;
	mov.b64 	%rd6936, {%r11067, %r11066};
	shf.r.wrap.b32 	%r11068, %r10655, %r10654, 8;
	shf.r.wrap.b32 	%r11069, %r10654, %r10655, 8;
	mov.b64 	%rd6937, {%r11069, %r11068};
	shr.u64 	%rd6938, %rd6348, 7;
	xor.b64  	%rd6939, %rd6936, %rd6938;
	xor.b64  	%rd6940, %rd6939, %rd6937;
	add.s64 	%rd6941, %rd6452, %rd6335;
	add.s64 	%rd6942, %rd6941, %rd6935;
	add.s64 	%rd6943, %rd6942, %rd6940;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11070,%dummy}, %rd6530;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11071}, %rd6530;
	}
	shf.r.wrap.b32 	%r11072, %r11071, %r11070, 19;
	shf.r.wrap.b32 	%r11073, %r11070, %r11071, 19;
	mov.b64 	%rd6944, {%r11073, %r11072};
	shf.l.wrap.b32 	%r11074, %r11070, %r11071, 3;
	shf.l.wrap.b32 	%r11075, %r11071, %r11070, 3;
	mov.b64 	%rd6945, {%r11075, %r11074};
	shr.u64 	%rd6946, %rd6530, 6;
	xor.b64  	%rd6947, %rd6944, %rd6946;
	xor.b64  	%rd6948, %rd6947, %rd6945;
	shf.r.wrap.b32 	%r11076, %r10667, %r10666, 1;
	shf.r.wrap.b32 	%r11077, %r10666, %r10667, 1;
	mov.b64 	%rd6949, {%r11077, %r11076};
	shf.r.wrap.b32 	%r11078, %r10667, %r10666, 8;
	shf.r.wrap.b32 	%r11079, %r10666, %r10667, 8;
	mov.b64 	%rd6950, {%r11079, %r11078};
	shr.u64 	%rd6951, %rd6361, 7;
	xor.b64  	%rd6952, %rd6949, %rd6951;
	xor.b64  	%rd6953, %rd6952, %rd6950;
	add.s64 	%rd6954, %rd6465, %rd6348;
	add.s64 	%rd6955, %rd6954, %rd6948;
	add.s64 	%rd6956, %rd6955, %rd6953;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11080,%dummy}, %rd6943;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11081}, %rd6943;
	}
	shf.r.wrap.b32 	%r11082, %r11081, %r11080, 19;
	shf.r.wrap.b32 	%r11083, %r11080, %r11081, 19;
	mov.b64 	%rd6957, {%r11083, %r11082};
	shf.l.wrap.b32 	%r11084, %r11080, %r11081, 3;
	shf.l.wrap.b32 	%r11085, %r11081, %r11080, 3;
	mov.b64 	%rd6958, {%r11085, %r11084};
	shr.u64 	%rd6959, %rd6943, 6;
	xor.b64  	%rd6960, %rd6957, %rd6959;
	xor.b64  	%rd6961, %rd6960, %rd6958;
	shf.r.wrap.b32 	%r11086, %r10679, %r10678, 1;
	shf.r.wrap.b32 	%r11087, %r10678, %r10679, 1;
	mov.b64 	%rd6962, {%r11087, %r11086};
	shf.r.wrap.b32 	%r11088, %r10679, %r10678, 8;
	shf.r.wrap.b32 	%r11089, %r10678, %r10679, 8;
	mov.b64 	%rd6963, {%r11089, %r11088};
	shr.u64 	%rd6964, %rd6374, 7;
	xor.b64  	%rd6965, %rd6962, %rd6964;
	xor.b64  	%rd6966, %rd6965, %rd6963;
	add.s64 	%rd6967, %rd6478, %rd6361;
	add.s64 	%rd6968, %rd6967, %rd6961;
	add.s64 	%rd6969, %rd6968, %rd6966;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11090,%dummy}, %rd6956;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11091}, %rd6956;
	}
	shf.r.wrap.b32 	%r11092, %r11091, %r11090, 19;
	shf.r.wrap.b32 	%r11093, %r11090, %r11091, 19;
	mov.b64 	%rd6970, {%r11093, %r11092};
	shf.l.wrap.b32 	%r11094, %r11090, %r11091, 3;
	shf.l.wrap.b32 	%r11095, %r11091, %r11090, 3;
	mov.b64 	%rd6971, {%r11095, %r11094};
	shr.u64 	%rd6972, %rd6956, 6;
	xor.b64  	%rd6973, %rd6970, %rd6972;
	xor.b64  	%rd6974, %rd6973, %rd6971;
	shf.r.wrap.b32 	%r11096, %r10691, %r10690, 1;
	shf.r.wrap.b32 	%r11097, %r10690, %r10691, 1;
	mov.b64 	%rd6975, {%r11097, %r11096};
	shf.r.wrap.b32 	%r11098, %r10691, %r10690, 8;
	shf.r.wrap.b32 	%r11099, %r10690, %r10691, 8;
	mov.b64 	%rd6976, {%r11099, %r11098};
	shr.u64 	%rd6977, %rd6387, 7;
	xor.b64  	%rd6978, %rd6975, %rd6977;
	xor.b64  	%rd6979, %rd6978, %rd6976;
	add.s64 	%rd6980, %rd6491, %rd6374;
	add.s64 	%rd6981, %rd6980, %rd6974;
	add.s64 	%rd6982, %rd6981, %rd6979;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11100,%dummy}, %rd6969;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11101}, %rd6969;
	}
	shf.r.wrap.b32 	%r11102, %r11101, %r11100, 19;
	shf.r.wrap.b32 	%r11103, %r11100, %r11101, 19;
	mov.b64 	%rd6983, {%r11103, %r11102};
	shf.l.wrap.b32 	%r11104, %r11100, %r11101, 3;
	shf.l.wrap.b32 	%r11105, %r11101, %r11100, 3;
	mov.b64 	%rd6984, {%r11105, %r11104};
	shr.u64 	%rd6985, %rd6969, 6;
	xor.b64  	%rd6986, %rd6983, %rd6985;
	xor.b64  	%rd6987, %rd6986, %rd6984;
	shf.r.wrap.b32 	%r11106, %r10703, %r10702, 1;
	shf.r.wrap.b32 	%r11107, %r10702, %r10703, 1;
	mov.b64 	%rd6988, {%r11107, %r11106};
	shf.r.wrap.b32 	%r11108, %r10703, %r10702, 8;
	shf.r.wrap.b32 	%r11109, %r10702, %r10703, 8;
	mov.b64 	%rd6989, {%r11109, %r11108};
	shr.u64 	%rd6990, %rd6400, 7;
	xor.b64  	%rd6991, %rd6988, %rd6990;
	xor.b64  	%rd6992, %rd6991, %rd6989;
	add.s64 	%rd6993, %rd6504, %rd6387;
	add.s64 	%rd6994, %rd6993, %rd6987;
	add.s64 	%rd6995, %rd6994, %rd6992;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11110,%dummy}, %rd6982;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11111}, %rd6982;
	}
	shf.r.wrap.b32 	%r11112, %r11111, %r11110, 19;
	shf.r.wrap.b32 	%r11113, %r11110, %r11111, 19;
	mov.b64 	%rd6996, {%r11113, %r11112};
	shf.l.wrap.b32 	%r11114, %r11110, %r11111, 3;
	shf.l.wrap.b32 	%r11115, %r11111, %r11110, 3;
	mov.b64 	%rd6997, {%r11115, %r11114};
	shr.u64 	%rd6998, %rd6982, 6;
	xor.b64  	%rd6999, %rd6996, %rd6998;
	xor.b64  	%rd7000, %rd6999, %rd6997;
	shf.r.wrap.b32 	%r11116, %r10715, %r10714, 1;
	shf.r.wrap.b32 	%r11117, %r10714, %r10715, 1;
	mov.b64 	%rd7001, {%r11117, %r11116};
	shf.r.wrap.b32 	%r11118, %r10715, %r10714, 8;
	shf.r.wrap.b32 	%r11119, %r10714, %r10715, 8;
	mov.b64 	%rd7002, {%r11119, %r11118};
	shr.u64 	%rd7003, %rd6413, 7;
	xor.b64  	%rd7004, %rd7001, %rd7003;
	xor.b64  	%rd7005, %rd7004, %rd7002;
	add.s64 	%rd7006, %rd6517, %rd6400;
	add.s64 	%rd7007, %rd7006, %rd7000;
	add.s64 	%rd7008, %rd7007, %rd7005;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11120,%dummy}, %rd6995;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11121}, %rd6995;
	}
	shf.r.wrap.b32 	%r11122, %r11121, %r11120, 19;
	shf.r.wrap.b32 	%r11123, %r11120, %r11121, 19;
	mov.b64 	%rd7009, {%r11123, %r11122};
	shf.l.wrap.b32 	%r11124, %r11120, %r11121, 3;
	shf.l.wrap.b32 	%r11125, %r11121, %r11120, 3;
	mov.b64 	%rd7010, {%r11125, %r11124};
	shr.u64 	%rd7011, %rd6995, 6;
	xor.b64  	%rd7012, %rd7009, %rd7011;
	xor.b64  	%rd7013, %rd7012, %rd7010;
	shf.r.wrap.b32 	%r11126, %r10727, %r10726, 1;
	shf.r.wrap.b32 	%r11127, %r10726, %r10727, 1;
	mov.b64 	%rd7014, {%r11127, %r11126};
	shf.r.wrap.b32 	%r11128, %r10727, %r10726, 8;
	shf.r.wrap.b32 	%r11129, %r10726, %r10727, 8;
	mov.b64 	%rd7015, {%r11129, %r11128};
	shr.u64 	%rd7016, %rd6426, 7;
	xor.b64  	%rd7017, %rd7014, %rd7016;
	xor.b64  	%rd7018, %rd7017, %rd7015;
	add.s64 	%rd7019, %rd6530, %rd6413;
	add.s64 	%rd7020, %rd7019, %rd7013;
	add.s64 	%rd7021, %rd7020, %rd7018;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11130,%dummy}, %rd7008;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11131}, %rd7008;
	}
	shf.r.wrap.b32 	%r11132, %r11131, %r11130, 19;
	shf.r.wrap.b32 	%r11133, %r11130, %r11131, 19;
	mov.b64 	%rd7022, {%r11133, %r11132};
	shf.l.wrap.b32 	%r11134, %r11130, %r11131, 3;
	shf.l.wrap.b32 	%r11135, %r11131, %r11130, 3;
	mov.b64 	%rd7023, {%r11135, %r11134};
	shr.u64 	%rd7024, %rd7008, 6;
	xor.b64  	%rd7025, %rd7022, %rd7024;
	xor.b64  	%rd7026, %rd7025, %rd7023;
	shf.r.wrap.b32 	%r11136, %r10739, %r10738, 1;
	shf.r.wrap.b32 	%r11137, %r10738, %r10739, 1;
	mov.b64 	%rd7027, {%r11137, %r11136};
	shf.r.wrap.b32 	%r11138, %r10739, %r10738, 8;
	shf.r.wrap.b32 	%r11139, %r10738, %r10739, 8;
	mov.b64 	%rd7028, {%r11139, %r11138};
	shr.u64 	%rd7029, %rd6439, 7;
	xor.b64  	%rd7030, %rd7027, %rd7029;
	xor.b64  	%rd7031, %rd7030, %rd7028;
	add.s64 	%rd7032, %rd6943, %rd6426;
	add.s64 	%rd7033, %rd7032, %rd7026;
	add.s64 	%rd7034, %rd7033, %rd7031;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11140,%dummy}, %rd7021;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11141}, %rd7021;
	}
	shf.r.wrap.b32 	%r11142, %r11141, %r11140, 19;
	shf.r.wrap.b32 	%r11143, %r11140, %r11141, 19;
	mov.b64 	%rd7035, {%r11143, %r11142};
	shf.l.wrap.b32 	%r11144, %r11140, %r11141, 3;
	shf.l.wrap.b32 	%r11145, %r11141, %r11140, 3;
	mov.b64 	%rd7036, {%r11145, %r11144};
	shr.u64 	%rd7037, %rd7021, 6;
	xor.b64  	%rd7038, %rd7035, %rd7037;
	xor.b64  	%rd7039, %rd7038, %rd7036;
	shf.r.wrap.b32 	%r11146, %r10751, %r10750, 1;
	shf.r.wrap.b32 	%r11147, %r10750, %r10751, 1;
	mov.b64 	%rd7040, {%r11147, %r11146};
	shf.r.wrap.b32 	%r11148, %r10751, %r10750, 8;
	shf.r.wrap.b32 	%r11149, %r10750, %r10751, 8;
	mov.b64 	%rd7041, {%r11149, %r11148};
	shr.u64 	%rd7042, %rd6452, 7;
	xor.b64  	%rd7043, %rd7040, %rd7042;
	xor.b64  	%rd7044, %rd7043, %rd7041;
	add.s64 	%rd7045, %rd6956, %rd6439;
	add.s64 	%rd7046, %rd7045, %rd7039;
	add.s64 	%rd7047, %rd7046, %rd7044;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11150,%dummy}, %rd7034;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11151}, %rd7034;
	}
	shf.r.wrap.b32 	%r11152, %r11151, %r11150, 19;
	shf.r.wrap.b32 	%r11153, %r11150, %r11151, 19;
	mov.b64 	%rd7048, {%r11153, %r11152};
	shf.l.wrap.b32 	%r11154, %r11150, %r11151, 3;
	shf.l.wrap.b32 	%r11155, %r11151, %r11150, 3;
	mov.b64 	%rd7049, {%r11155, %r11154};
	shr.u64 	%rd7050, %rd7034, 6;
	xor.b64  	%rd7051, %rd7048, %rd7050;
	xor.b64  	%rd7052, %rd7051, %rd7049;
	shf.r.wrap.b32 	%r11156, %r10763, %r10762, 1;
	shf.r.wrap.b32 	%r11157, %r10762, %r10763, 1;
	mov.b64 	%rd7053, {%r11157, %r11156};
	shf.r.wrap.b32 	%r11158, %r10763, %r10762, 8;
	shf.r.wrap.b32 	%r11159, %r10762, %r10763, 8;
	mov.b64 	%rd7054, {%r11159, %r11158};
	shr.u64 	%rd7055, %rd6465, 7;
	xor.b64  	%rd7056, %rd7053, %rd7055;
	xor.b64  	%rd7057, %rd7056, %rd7054;
	add.s64 	%rd7058, %rd6969, %rd6452;
	add.s64 	%rd7059, %rd7058, %rd7052;
	add.s64 	%rd7060, %rd7059, %rd7057;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11160,%dummy}, %rd7047;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11161}, %rd7047;
	}
	shf.r.wrap.b32 	%r11162, %r11161, %r11160, 19;
	shf.r.wrap.b32 	%r11163, %r11160, %r11161, 19;
	mov.b64 	%rd7061, {%r11163, %r11162};
	shf.l.wrap.b32 	%r11164, %r11160, %r11161, 3;
	shf.l.wrap.b32 	%r11165, %r11161, %r11160, 3;
	mov.b64 	%rd7062, {%r11165, %r11164};
	shr.u64 	%rd7063, %rd7047, 6;
	xor.b64  	%rd7064, %rd7061, %rd7063;
	xor.b64  	%rd7065, %rd7064, %rd7062;
	shf.r.wrap.b32 	%r11166, %r10775, %r10774, 1;
	shf.r.wrap.b32 	%r11167, %r10774, %r10775, 1;
	mov.b64 	%rd7066, {%r11167, %r11166};
	shf.r.wrap.b32 	%r11168, %r10775, %r10774, 8;
	shf.r.wrap.b32 	%r11169, %r10774, %r10775, 8;
	mov.b64 	%rd7067, {%r11169, %r11168};
	shr.u64 	%rd7068, %rd6478, 7;
	xor.b64  	%rd7069, %rd7066, %rd7068;
	xor.b64  	%rd7070, %rd7069, %rd7067;
	add.s64 	%rd7071, %rd6982, %rd6465;
	add.s64 	%rd7072, %rd7071, %rd7065;
	add.s64 	%rd7073, %rd7072, %rd7070;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11170,%dummy}, %rd7060;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11171}, %rd7060;
	}
	shf.r.wrap.b32 	%r11172, %r11171, %r11170, 19;
	shf.r.wrap.b32 	%r11173, %r11170, %r11171, 19;
	mov.b64 	%rd7074, {%r11173, %r11172};
	shf.l.wrap.b32 	%r11174, %r11170, %r11171, 3;
	shf.l.wrap.b32 	%r11175, %r11171, %r11170, 3;
	mov.b64 	%rd7075, {%r11175, %r11174};
	shr.u64 	%rd7076, %rd7060, 6;
	xor.b64  	%rd7077, %rd7074, %rd7076;
	xor.b64  	%rd7078, %rd7077, %rd7075;
	shf.r.wrap.b32 	%r11176, %r10785, %r10784, 1;
	shf.r.wrap.b32 	%r11177, %r10784, %r10785, 1;
	mov.b64 	%rd7079, {%r11177, %r11176};
	shf.r.wrap.b32 	%r11178, %r10785, %r10784, 8;
	shf.r.wrap.b32 	%r11179, %r10784, %r10785, 8;
	mov.b64 	%rd7080, {%r11179, %r11178};
	shr.u64 	%rd7081, %rd6491, 7;
	xor.b64  	%rd7082, %rd7079, %rd7081;
	xor.b64  	%rd7083, %rd7082, %rd7080;
	add.s64 	%rd7084, %rd6995, %rd6478;
	add.s64 	%rd7085, %rd7084, %rd7078;
	add.s64 	%rd7086, %rd7085, %rd7083;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11180,%dummy}, %rd7073;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11181}, %rd7073;
	}
	shf.r.wrap.b32 	%r11182, %r11181, %r11180, 19;
	shf.r.wrap.b32 	%r11183, %r11180, %r11181, 19;
	mov.b64 	%rd7087, {%r11183, %r11182};
	shf.l.wrap.b32 	%r11184, %r11180, %r11181, 3;
	shf.l.wrap.b32 	%r11185, %r11181, %r11180, 3;
	mov.b64 	%rd7088, {%r11185, %r11184};
	shr.u64 	%rd7089, %rd7073, 6;
	xor.b64  	%rd7090, %rd7087, %rd7089;
	xor.b64  	%rd7091, %rd7090, %rd7088;
	shf.r.wrap.b32 	%r11186, %r10795, %r10794, 1;
	shf.r.wrap.b32 	%r11187, %r10794, %r10795, 1;
	mov.b64 	%rd7092, {%r11187, %r11186};
	shf.r.wrap.b32 	%r11188, %r10795, %r10794, 8;
	shf.r.wrap.b32 	%r11189, %r10794, %r10795, 8;
	mov.b64 	%rd7093, {%r11189, %r11188};
	shr.u64 	%rd7094, %rd6504, 7;
	xor.b64  	%rd7095, %rd7092, %rd7094;
	xor.b64  	%rd7096, %rd7095, %rd7093;
	add.s64 	%rd7097, %rd7008, %rd6491;
	add.s64 	%rd7098, %rd7097, %rd7091;
	add.s64 	%rd7099, %rd7098, %rd7096;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11190,%dummy}, %rd7086;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11191}, %rd7086;
	}
	shf.r.wrap.b32 	%r11192, %r11191, %r11190, 19;
	shf.r.wrap.b32 	%r11193, %r11190, %r11191, 19;
	mov.b64 	%rd7100, {%r11193, %r11192};
	shf.l.wrap.b32 	%r11194, %r11190, %r11191, 3;
	shf.l.wrap.b32 	%r11195, %r11191, %r11190, 3;
	mov.b64 	%rd7101, {%r11195, %r11194};
	shr.u64 	%rd7102, %rd7086, 6;
	xor.b64  	%rd7103, %rd7100, %rd7102;
	xor.b64  	%rd7104, %rd7103, %rd7101;
	shf.r.wrap.b32 	%r11196, %r11061, %r11060, 1;
	shf.r.wrap.b32 	%r11197, %r11060, %r11061, 1;
	mov.b64 	%rd7105, {%r11197, %r11196};
	shf.r.wrap.b32 	%r11198, %r11061, %r11060, 8;
	shf.r.wrap.b32 	%r11199, %r11060, %r11061, 8;
	mov.b64 	%rd7106, {%r11199, %r11198};
	shr.u64 	%rd7107, %rd6517, 7;
	xor.b64  	%rd7108, %rd7105, %rd7107;
	xor.b64  	%rd7109, %rd7108, %rd7106;
	add.s64 	%rd7110, %rd7021, %rd6504;
	add.s64 	%rd7111, %rd7110, %rd7104;
	add.s64 	%rd7112, %rd7111, %rd7109;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11200,%dummy}, %rd7099;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11201}, %rd7099;
	}
	shf.r.wrap.b32 	%r11202, %r11201, %r11200, 19;
	shf.r.wrap.b32 	%r11203, %r11200, %r11201, 19;
	mov.b64 	%rd7113, {%r11203, %r11202};
	shf.l.wrap.b32 	%r11204, %r11200, %r11201, 3;
	shf.l.wrap.b32 	%r11205, %r11201, %r11200, 3;
	mov.b64 	%rd7114, {%r11205, %r11204};
	shr.u64 	%rd7115, %rd7099, 6;
	xor.b64  	%rd7116, %rd7113, %rd7115;
	xor.b64  	%rd7117, %rd7116, %rd7114;
	shf.r.wrap.b32 	%r11206, %r11071, %r11070, 1;
	shf.r.wrap.b32 	%r11207, %r11070, %r11071, 1;
	mov.b64 	%rd7118, {%r11207, %r11206};
	shf.r.wrap.b32 	%r11208, %r11071, %r11070, 8;
	shf.r.wrap.b32 	%r11209, %r11070, %r11071, 8;
	mov.b64 	%rd7119, {%r11209, %r11208};
	shr.u64 	%rd7120, %rd6530, 7;
	xor.b64  	%rd7121, %rd7118, %rd7120;
	xor.b64  	%rd7122, %rd7121, %rd7119;
	add.s64 	%rd7123, %rd7034, %rd6517;
	add.s64 	%rd7124, %rd7123, %rd7117;
	add.s64 	%rd7125, %rd7124, %rd7122;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11210,%dummy}, %rd7112;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11211}, %rd7112;
	}
	shf.r.wrap.b32 	%r11212, %r11211, %r11210, 19;
	shf.r.wrap.b32 	%r11213, %r11210, %r11211, 19;
	mov.b64 	%rd7126, {%r11213, %r11212};
	shf.l.wrap.b32 	%r11214, %r11210, %r11211, 3;
	shf.l.wrap.b32 	%r11215, %r11211, %r11210, 3;
	mov.b64 	%rd7127, {%r11215, %r11214};
	shr.u64 	%rd7128, %rd7112, 6;
	xor.b64  	%rd7129, %rd7126, %rd7128;
	xor.b64  	%rd7130, %rd7129, %rd7127;
	shf.r.wrap.b32 	%r11216, %r11081, %r11080, 1;
	shf.r.wrap.b32 	%r11217, %r11080, %r11081, 1;
	mov.b64 	%rd7131, {%r11217, %r11216};
	shf.r.wrap.b32 	%r11218, %r11081, %r11080, 8;
	shf.r.wrap.b32 	%r11219, %r11080, %r11081, 8;
	mov.b64 	%rd7132, {%r11219, %r11218};
	shr.u64 	%rd7133, %rd6943, 7;
	xor.b64  	%rd7134, %rd7131, %rd7133;
	xor.b64  	%rd7135, %rd7134, %rd7132;
	add.s64 	%rd7136, %rd7047, %rd6530;
	add.s64 	%rd7137, %rd7136, %rd7130;
	add.s64 	%rd7138, %rd7137, %rd7135;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11220,%dummy}, %rd6919;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11221}, %rd6919;
	}
	shf.r.wrap.b32 	%r11222, %r11221, %r11220, 14;
	shf.r.wrap.b32 	%r11223, %r11220, %r11221, 14;
	mov.b64 	%rd7139, {%r11223, %r11222};
	shf.r.wrap.b32 	%r11224, %r11221, %r11220, 18;
	shf.r.wrap.b32 	%r11225, %r11220, %r11221, 18;
	mov.b64 	%rd7140, {%r11225, %r11224};
	xor.b64  	%rd7141, %rd7140, %rd7139;
	shf.l.wrap.b32 	%r11226, %r11220, %r11221, 23;
	shf.l.wrap.b32 	%r11227, %r11221, %r11220, 23;
	mov.b64 	%rd7142, {%r11227, %r11226};
	xor.b64  	%rd7143, %rd7141, %rd7142;
	xor.b64  	%rd7144, %rd6894, %rd6869;
	and.b64  	%rd7145, %rd7144, %rd6919;
	xor.b64  	%rd7146, %rd7145, %rd6869;
	add.s64 	%rd7147, %rd7146, %rd6844;
	add.s64 	%rd7148, %rd7147, %rd6943;
	ld.const.u64 	%rd7149, [k_sha512+256];
	add.s64 	%rd7150, %rd7148, %rd7149;
	add.s64 	%rd7151, %rd7150, %rd7143;
	add.s64 	%rd7152, %rd7151, %rd6855;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11228,%dummy}, %rd6930;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11229}, %rd6930;
	}
	shf.r.wrap.b32 	%r11230, %r11229, %r11228, 28;
	shf.r.wrap.b32 	%r11231, %r11228, %r11229, 28;
	mov.b64 	%rd7153, {%r11231, %r11230};
	shf.l.wrap.b32 	%r11232, %r11228, %r11229, 30;
	shf.l.wrap.b32 	%r11233, %r11229, %r11228, 30;
	mov.b64 	%rd7154, {%r11233, %r11232};
	xor.b64  	%rd7155, %rd7154, %rd7153;
	shf.l.wrap.b32 	%r11234, %r11228, %r11229, 25;
	shf.l.wrap.b32 	%r11235, %r11229, %r11228, 25;
	mov.b64 	%rd7156, {%r11235, %r11234};
	xor.b64  	%rd7157, %rd7155, %rd7156;
	xor.b64  	%rd7158, %rd6930, %rd6880;
	xor.b64  	%rd7159, %rd6930, %rd6905;
	and.b64  	%rd7160, %rd7159, %rd7158;
	xor.b64  	%rd7161, %rd7160, %rd6930;
	add.s64 	%rd7162, %rd7151, %rd7161;
	add.s64 	%rd7163, %rd7162, %rd7157;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11236,%dummy}, %rd7152;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11237}, %rd7152;
	}
	shf.r.wrap.b32 	%r11238, %r11237, %r11236, 14;
	shf.r.wrap.b32 	%r11239, %r11236, %r11237, 14;
	mov.b64 	%rd7164, {%r11239, %r11238};
	shf.r.wrap.b32 	%r11240, %r11237, %r11236, 18;
	shf.r.wrap.b32 	%r11241, %r11236, %r11237, 18;
	mov.b64 	%rd7165, {%r11241, %r11240};
	xor.b64  	%rd7166, %rd7165, %rd7164;
	shf.l.wrap.b32 	%r11242, %r11236, %r11237, 23;
	shf.l.wrap.b32 	%r11243, %r11237, %r11236, 23;
	mov.b64 	%rd7167, {%r11243, %r11242};
	xor.b64  	%rd7168, %rd7166, %rd7167;
	xor.b64  	%rd7169, %rd6919, %rd6894;
	and.b64  	%rd7170, %rd7152, %rd7169;
	xor.b64  	%rd7171, %rd7170, %rd6894;
	add.s64 	%rd7172, %rd6956, %rd6869;
	ld.const.u64 	%rd7173, [k_sha512+264];
	add.s64 	%rd7174, %rd7172, %rd7173;
	add.s64 	%rd7175, %rd7174, %rd7171;
	add.s64 	%rd7176, %rd7175, %rd7168;
	add.s64 	%rd7177, %rd7176, %rd6880;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11244,%dummy}, %rd7163;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11245}, %rd7163;
	}
	shf.r.wrap.b32 	%r11246, %r11245, %r11244, 28;
	shf.r.wrap.b32 	%r11247, %r11244, %r11245, 28;
	mov.b64 	%rd7178, {%r11247, %r11246};
	shf.l.wrap.b32 	%r11248, %r11244, %r11245, 30;
	shf.l.wrap.b32 	%r11249, %r11245, %r11244, 30;
	mov.b64 	%rd7179, {%r11249, %r11248};
	xor.b64  	%rd7180, %rd7179, %rd7178;
	shf.l.wrap.b32 	%r11250, %r11244, %r11245, 25;
	shf.l.wrap.b32 	%r11251, %r11245, %r11244, 25;
	mov.b64 	%rd7181, {%r11251, %r11250};
	xor.b64  	%rd7182, %rd7180, %rd7181;
	xor.b64  	%rd7183, %rd7163, %rd6905;
	xor.b64  	%rd7184, %rd7163, %rd6930;
	and.b64  	%rd7185, %rd7184, %rd7183;
	xor.b64  	%rd7186, %rd7185, %rd7163;
	add.s64 	%rd7187, %rd7176, %rd7186;
	add.s64 	%rd7188, %rd7187, %rd7182;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11252,%dummy}, %rd7177;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11253}, %rd7177;
	}
	shf.r.wrap.b32 	%r11254, %r11253, %r11252, 14;
	shf.r.wrap.b32 	%r11255, %r11252, %r11253, 14;
	mov.b64 	%rd7189, {%r11255, %r11254};
	shf.r.wrap.b32 	%r11256, %r11253, %r11252, 18;
	shf.r.wrap.b32 	%r11257, %r11252, %r11253, 18;
	mov.b64 	%rd7190, {%r11257, %r11256};
	xor.b64  	%rd7191, %rd7190, %rd7189;
	shf.l.wrap.b32 	%r11258, %r11252, %r11253, 23;
	shf.l.wrap.b32 	%r11259, %r11253, %r11252, 23;
	mov.b64 	%rd7192, {%r11259, %r11258};
	xor.b64  	%rd7193, %rd7191, %rd7192;
	xor.b64  	%rd7194, %rd7152, %rd6919;
	and.b64  	%rd7195, %rd7177, %rd7194;
	xor.b64  	%rd7196, %rd7195, %rd6919;
	add.s64 	%rd7197, %rd6969, %rd6894;
	ld.const.u64 	%rd7198, [k_sha512+272];
	add.s64 	%rd7199, %rd7197, %rd7198;
	add.s64 	%rd7200, %rd7199, %rd7196;
	add.s64 	%rd7201, %rd7200, %rd7193;
	add.s64 	%rd7202, %rd7201, %rd6905;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11260,%dummy}, %rd7188;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11261}, %rd7188;
	}
	shf.r.wrap.b32 	%r11262, %r11261, %r11260, 28;
	shf.r.wrap.b32 	%r11263, %r11260, %r11261, 28;
	mov.b64 	%rd7203, {%r11263, %r11262};
	shf.l.wrap.b32 	%r11264, %r11260, %r11261, 30;
	shf.l.wrap.b32 	%r11265, %r11261, %r11260, 30;
	mov.b64 	%rd7204, {%r11265, %r11264};
	xor.b64  	%rd7205, %rd7204, %rd7203;
	shf.l.wrap.b32 	%r11266, %r11260, %r11261, 25;
	shf.l.wrap.b32 	%r11267, %r11261, %r11260, 25;
	mov.b64 	%rd7206, {%r11267, %r11266};
	xor.b64  	%rd7207, %rd7205, %rd7206;
	xor.b64  	%rd7208, %rd7188, %rd6930;
	xor.b64  	%rd7209, %rd7188, %rd7163;
	and.b64  	%rd7210, %rd7209, %rd7208;
	xor.b64  	%rd7211, %rd7210, %rd7188;
	add.s64 	%rd7212, %rd7201, %rd7211;
	add.s64 	%rd7213, %rd7212, %rd7207;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11268,%dummy}, %rd7202;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11269}, %rd7202;
	}
	shf.r.wrap.b32 	%r11270, %r11269, %r11268, 14;
	shf.r.wrap.b32 	%r11271, %r11268, %r11269, 14;
	mov.b64 	%rd7214, {%r11271, %r11270};
	shf.r.wrap.b32 	%r11272, %r11269, %r11268, 18;
	shf.r.wrap.b32 	%r11273, %r11268, %r11269, 18;
	mov.b64 	%rd7215, {%r11273, %r11272};
	xor.b64  	%rd7216, %rd7215, %rd7214;
	shf.l.wrap.b32 	%r11274, %r11268, %r11269, 23;
	shf.l.wrap.b32 	%r11275, %r11269, %r11268, 23;
	mov.b64 	%rd7217, {%r11275, %r11274};
	xor.b64  	%rd7218, %rd7216, %rd7217;
	xor.b64  	%rd7219, %rd7177, %rd7152;
	and.b64  	%rd7220, %rd7202, %rd7219;
	xor.b64  	%rd7221, %rd7220, %rd7152;
	add.s64 	%rd7222, %rd6982, %rd6919;
	ld.const.u64 	%rd7223, [k_sha512+280];
	add.s64 	%rd7224, %rd7222, %rd7223;
	add.s64 	%rd7225, %rd7224, %rd7221;
	add.s64 	%rd7226, %rd7225, %rd7218;
	add.s64 	%rd7227, %rd7226, %rd6930;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11276,%dummy}, %rd7213;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11277}, %rd7213;
	}
	shf.r.wrap.b32 	%r11278, %r11277, %r11276, 28;
	shf.r.wrap.b32 	%r11279, %r11276, %r11277, 28;
	mov.b64 	%rd7228, {%r11279, %r11278};
	shf.l.wrap.b32 	%r11280, %r11276, %r11277, 30;
	shf.l.wrap.b32 	%r11281, %r11277, %r11276, 30;
	mov.b64 	%rd7229, {%r11281, %r11280};
	xor.b64  	%rd7230, %rd7229, %rd7228;
	shf.l.wrap.b32 	%r11282, %r11276, %r11277, 25;
	shf.l.wrap.b32 	%r11283, %r11277, %r11276, 25;
	mov.b64 	%rd7231, {%r11283, %r11282};
	xor.b64  	%rd7232, %rd7230, %rd7231;
	xor.b64  	%rd7233, %rd7213, %rd7163;
	xor.b64  	%rd7234, %rd7213, %rd7188;
	and.b64  	%rd7235, %rd7234, %rd7233;
	xor.b64  	%rd7236, %rd7235, %rd7213;
	add.s64 	%rd7237, %rd7226, %rd7236;
	add.s64 	%rd7238, %rd7237, %rd7232;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11284,%dummy}, %rd7227;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11285}, %rd7227;
	}
	shf.r.wrap.b32 	%r11286, %r11285, %r11284, 14;
	shf.r.wrap.b32 	%r11287, %r11284, %r11285, 14;
	mov.b64 	%rd7239, {%r11287, %r11286};
	shf.r.wrap.b32 	%r11288, %r11285, %r11284, 18;
	shf.r.wrap.b32 	%r11289, %r11284, %r11285, 18;
	mov.b64 	%rd7240, {%r11289, %r11288};
	xor.b64  	%rd7241, %rd7240, %rd7239;
	shf.l.wrap.b32 	%r11290, %r11284, %r11285, 23;
	shf.l.wrap.b32 	%r11291, %r11285, %r11284, 23;
	mov.b64 	%rd7242, {%r11291, %r11290};
	xor.b64  	%rd7243, %rd7241, %rd7242;
	xor.b64  	%rd7244, %rd7202, %rd7177;
	and.b64  	%rd7245, %rd7227, %rd7244;
	xor.b64  	%rd7246, %rd7245, %rd7177;
	add.s64 	%rd7247, %rd7152, %rd6995;
	ld.const.u64 	%rd7248, [k_sha512+288];
	add.s64 	%rd7249, %rd7247, %rd7248;
	add.s64 	%rd7250, %rd7249, %rd7246;
	add.s64 	%rd7251, %rd7250, %rd7243;
	add.s64 	%rd7252, %rd7251, %rd7163;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11292,%dummy}, %rd7238;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11293}, %rd7238;
	}
	shf.r.wrap.b32 	%r11294, %r11293, %r11292, 28;
	shf.r.wrap.b32 	%r11295, %r11292, %r11293, 28;
	mov.b64 	%rd7253, {%r11295, %r11294};
	shf.l.wrap.b32 	%r11296, %r11292, %r11293, 30;
	shf.l.wrap.b32 	%r11297, %r11293, %r11292, 30;
	mov.b64 	%rd7254, {%r11297, %r11296};
	xor.b64  	%rd7255, %rd7254, %rd7253;
	shf.l.wrap.b32 	%r11298, %r11292, %r11293, 25;
	shf.l.wrap.b32 	%r11299, %r11293, %r11292, 25;
	mov.b64 	%rd7256, {%r11299, %r11298};
	xor.b64  	%rd7257, %rd7255, %rd7256;
	xor.b64  	%rd7258, %rd7238, %rd7188;
	xor.b64  	%rd7259, %rd7238, %rd7213;
	and.b64  	%rd7260, %rd7259, %rd7258;
	xor.b64  	%rd7261, %rd7260, %rd7238;
	add.s64 	%rd7262, %rd7251, %rd7261;
	add.s64 	%rd7263, %rd7262, %rd7257;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11300,%dummy}, %rd7252;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11301}, %rd7252;
	}
	shf.r.wrap.b32 	%r11302, %r11301, %r11300, 14;
	shf.r.wrap.b32 	%r11303, %r11300, %r11301, 14;
	mov.b64 	%rd7264, {%r11303, %r11302};
	shf.r.wrap.b32 	%r11304, %r11301, %r11300, 18;
	shf.r.wrap.b32 	%r11305, %r11300, %r11301, 18;
	mov.b64 	%rd7265, {%r11305, %r11304};
	xor.b64  	%rd7266, %rd7265, %rd7264;
	shf.l.wrap.b32 	%r11306, %r11300, %r11301, 23;
	shf.l.wrap.b32 	%r11307, %r11301, %r11300, 23;
	mov.b64 	%rd7267, {%r11307, %r11306};
	xor.b64  	%rd7268, %rd7266, %rd7267;
	xor.b64  	%rd7269, %rd7227, %rd7202;
	and.b64  	%rd7270, %rd7252, %rd7269;
	xor.b64  	%rd7271, %rd7270, %rd7202;
	add.s64 	%rd7272, %rd7177, %rd7008;
	ld.const.u64 	%rd7273, [k_sha512+296];
	add.s64 	%rd7274, %rd7272, %rd7273;
	add.s64 	%rd7275, %rd7274, %rd7271;
	add.s64 	%rd7276, %rd7275, %rd7268;
	add.s64 	%rd7277, %rd7276, %rd7188;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11308,%dummy}, %rd7263;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11309}, %rd7263;
	}
	shf.r.wrap.b32 	%r11310, %r11309, %r11308, 28;
	shf.r.wrap.b32 	%r11311, %r11308, %r11309, 28;
	mov.b64 	%rd7278, {%r11311, %r11310};
	shf.l.wrap.b32 	%r11312, %r11308, %r11309, 30;
	shf.l.wrap.b32 	%r11313, %r11309, %r11308, 30;
	mov.b64 	%rd7279, {%r11313, %r11312};
	xor.b64  	%rd7280, %rd7279, %rd7278;
	shf.l.wrap.b32 	%r11314, %r11308, %r11309, 25;
	shf.l.wrap.b32 	%r11315, %r11309, %r11308, 25;
	mov.b64 	%rd7281, {%r11315, %r11314};
	xor.b64  	%rd7282, %rd7280, %rd7281;
	xor.b64  	%rd7283, %rd7263, %rd7213;
	xor.b64  	%rd7284, %rd7263, %rd7238;
	and.b64  	%rd7285, %rd7284, %rd7283;
	xor.b64  	%rd7286, %rd7285, %rd7263;
	add.s64 	%rd7287, %rd7276, %rd7286;
	add.s64 	%rd7288, %rd7287, %rd7282;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11316,%dummy}, %rd7277;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11317}, %rd7277;
	}
	shf.r.wrap.b32 	%r11318, %r11317, %r11316, 14;
	shf.r.wrap.b32 	%r11319, %r11316, %r11317, 14;
	mov.b64 	%rd7289, {%r11319, %r11318};
	shf.r.wrap.b32 	%r11320, %r11317, %r11316, 18;
	shf.r.wrap.b32 	%r11321, %r11316, %r11317, 18;
	mov.b64 	%rd7290, {%r11321, %r11320};
	xor.b64  	%rd7291, %rd7290, %rd7289;
	shf.l.wrap.b32 	%r11322, %r11316, %r11317, 23;
	shf.l.wrap.b32 	%r11323, %r11317, %r11316, 23;
	mov.b64 	%rd7292, {%r11323, %r11322};
	xor.b64  	%rd7293, %rd7291, %rd7292;
	xor.b64  	%rd7294, %rd7252, %rd7227;
	and.b64  	%rd7295, %rd7277, %rd7294;
	xor.b64  	%rd7296, %rd7295, %rd7227;
	add.s64 	%rd7297, %rd7202, %rd7021;
	ld.const.u64 	%rd7298, [k_sha512+304];
	add.s64 	%rd7299, %rd7297, %rd7298;
	add.s64 	%rd7300, %rd7299, %rd7296;
	add.s64 	%rd7301, %rd7300, %rd7293;
	add.s64 	%rd7302, %rd7301, %rd7213;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11324,%dummy}, %rd7288;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11325}, %rd7288;
	}
	shf.r.wrap.b32 	%r11326, %r11325, %r11324, 28;
	shf.r.wrap.b32 	%r11327, %r11324, %r11325, 28;
	mov.b64 	%rd7303, {%r11327, %r11326};
	shf.l.wrap.b32 	%r11328, %r11324, %r11325, 30;
	shf.l.wrap.b32 	%r11329, %r11325, %r11324, 30;
	mov.b64 	%rd7304, {%r11329, %r11328};
	xor.b64  	%rd7305, %rd7304, %rd7303;
	shf.l.wrap.b32 	%r11330, %r11324, %r11325, 25;
	shf.l.wrap.b32 	%r11331, %r11325, %r11324, 25;
	mov.b64 	%rd7306, {%r11331, %r11330};
	xor.b64  	%rd7307, %rd7305, %rd7306;
	xor.b64  	%rd7308, %rd7288, %rd7238;
	xor.b64  	%rd7309, %rd7288, %rd7263;
	and.b64  	%rd7310, %rd7309, %rd7308;
	xor.b64  	%rd7311, %rd7310, %rd7288;
	add.s64 	%rd7312, %rd7301, %rd7311;
	add.s64 	%rd7313, %rd7312, %rd7307;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11332,%dummy}, %rd7302;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11333}, %rd7302;
	}
	shf.r.wrap.b32 	%r11334, %r11333, %r11332, 14;
	shf.r.wrap.b32 	%r11335, %r11332, %r11333, 14;
	mov.b64 	%rd7314, {%r11335, %r11334};
	shf.r.wrap.b32 	%r11336, %r11333, %r11332, 18;
	shf.r.wrap.b32 	%r11337, %r11332, %r11333, 18;
	mov.b64 	%rd7315, {%r11337, %r11336};
	xor.b64  	%rd7316, %rd7315, %rd7314;
	shf.l.wrap.b32 	%r11338, %r11332, %r11333, 23;
	shf.l.wrap.b32 	%r11339, %r11333, %r11332, 23;
	mov.b64 	%rd7317, {%r11339, %r11338};
	xor.b64  	%rd7318, %rd7316, %rd7317;
	xor.b64  	%rd7319, %rd7277, %rd7252;
	and.b64  	%rd7320, %rd7302, %rd7319;
	xor.b64  	%rd7321, %rd7320, %rd7252;
	add.s64 	%rd7322, %rd7227, %rd7034;
	ld.const.u64 	%rd7323, [k_sha512+312];
	add.s64 	%rd7324, %rd7322, %rd7323;
	add.s64 	%rd7325, %rd7324, %rd7321;
	add.s64 	%rd7326, %rd7325, %rd7318;
	add.s64 	%rd7327, %rd7326, %rd7238;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11340,%dummy}, %rd7313;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11341}, %rd7313;
	}
	shf.r.wrap.b32 	%r11342, %r11341, %r11340, 28;
	shf.r.wrap.b32 	%r11343, %r11340, %r11341, 28;
	mov.b64 	%rd7328, {%r11343, %r11342};
	shf.l.wrap.b32 	%r11344, %r11340, %r11341, 30;
	shf.l.wrap.b32 	%r11345, %r11341, %r11340, 30;
	mov.b64 	%rd7329, {%r11345, %r11344};
	xor.b64  	%rd7330, %rd7329, %rd7328;
	shf.l.wrap.b32 	%r11346, %r11340, %r11341, 25;
	shf.l.wrap.b32 	%r11347, %r11341, %r11340, 25;
	mov.b64 	%rd7331, {%r11347, %r11346};
	xor.b64  	%rd7332, %rd7330, %rd7331;
	xor.b64  	%rd7333, %rd7313, %rd7263;
	xor.b64  	%rd7334, %rd7313, %rd7288;
	and.b64  	%rd7335, %rd7334, %rd7333;
	xor.b64  	%rd7336, %rd7335, %rd7313;
	add.s64 	%rd7337, %rd7326, %rd7336;
	add.s64 	%rd7338, %rd7337, %rd7332;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11348,%dummy}, %rd7327;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11349}, %rd7327;
	}
	shf.r.wrap.b32 	%r11350, %r11349, %r11348, 14;
	shf.r.wrap.b32 	%r11351, %r11348, %r11349, 14;
	mov.b64 	%rd7339, {%r11351, %r11350};
	shf.r.wrap.b32 	%r11352, %r11349, %r11348, 18;
	shf.r.wrap.b32 	%r11353, %r11348, %r11349, 18;
	mov.b64 	%rd7340, {%r11353, %r11352};
	xor.b64  	%rd7341, %rd7340, %rd7339;
	shf.l.wrap.b32 	%r11354, %r11348, %r11349, 23;
	shf.l.wrap.b32 	%r11355, %r11349, %r11348, 23;
	mov.b64 	%rd7342, {%r11355, %r11354};
	xor.b64  	%rd7343, %rd7341, %rd7342;
	xor.b64  	%rd7344, %rd7302, %rd7277;
	and.b64  	%rd7345, %rd7327, %rd7344;
	xor.b64  	%rd7346, %rd7345, %rd7277;
	add.s64 	%rd7347, %rd7252, %rd7047;
	ld.const.u64 	%rd7348, [k_sha512+320];
	add.s64 	%rd7349, %rd7347, %rd7348;
	add.s64 	%rd7350, %rd7349, %rd7346;
	add.s64 	%rd7351, %rd7350, %rd7343;
	add.s64 	%rd7352, %rd7351, %rd7263;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11356,%dummy}, %rd7338;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11357}, %rd7338;
	}
	shf.r.wrap.b32 	%r11358, %r11357, %r11356, 28;
	shf.r.wrap.b32 	%r11359, %r11356, %r11357, 28;
	mov.b64 	%rd7353, {%r11359, %r11358};
	shf.l.wrap.b32 	%r11360, %r11356, %r11357, 30;
	shf.l.wrap.b32 	%r11361, %r11357, %r11356, 30;
	mov.b64 	%rd7354, {%r11361, %r11360};
	xor.b64  	%rd7355, %rd7354, %rd7353;
	shf.l.wrap.b32 	%r11362, %r11356, %r11357, 25;
	shf.l.wrap.b32 	%r11363, %r11357, %r11356, 25;
	mov.b64 	%rd7356, {%r11363, %r11362};
	xor.b64  	%rd7357, %rd7355, %rd7356;
	xor.b64  	%rd7358, %rd7338, %rd7288;
	xor.b64  	%rd7359, %rd7338, %rd7313;
	and.b64  	%rd7360, %rd7359, %rd7358;
	xor.b64  	%rd7361, %rd7360, %rd7338;
	add.s64 	%rd7362, %rd7351, %rd7361;
	add.s64 	%rd7363, %rd7362, %rd7357;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11364,%dummy}, %rd7352;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11365}, %rd7352;
	}
	shf.r.wrap.b32 	%r11366, %r11365, %r11364, 14;
	shf.r.wrap.b32 	%r11367, %r11364, %r11365, 14;
	mov.b64 	%rd7364, {%r11367, %r11366};
	shf.r.wrap.b32 	%r11368, %r11365, %r11364, 18;
	shf.r.wrap.b32 	%r11369, %r11364, %r11365, 18;
	mov.b64 	%rd7365, {%r11369, %r11368};
	xor.b64  	%rd7366, %rd7365, %rd7364;
	shf.l.wrap.b32 	%r11370, %r11364, %r11365, 23;
	shf.l.wrap.b32 	%r11371, %r11365, %r11364, 23;
	mov.b64 	%rd7367, {%r11371, %r11370};
	xor.b64  	%rd7368, %rd7366, %rd7367;
	xor.b64  	%rd7369, %rd7327, %rd7302;
	and.b64  	%rd7370, %rd7352, %rd7369;
	xor.b64  	%rd7371, %rd7370, %rd7302;
	add.s64 	%rd7372, %rd7277, %rd7060;
	ld.const.u64 	%rd7373, [k_sha512+328];
	add.s64 	%rd7374, %rd7372, %rd7373;
	add.s64 	%rd7375, %rd7374, %rd7371;
	add.s64 	%rd7376, %rd7375, %rd7368;
	add.s64 	%rd7377, %rd7376, %rd7288;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11372,%dummy}, %rd7363;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11373}, %rd7363;
	}
	shf.r.wrap.b32 	%r11374, %r11373, %r11372, 28;
	shf.r.wrap.b32 	%r11375, %r11372, %r11373, 28;
	mov.b64 	%rd7378, {%r11375, %r11374};
	shf.l.wrap.b32 	%r11376, %r11372, %r11373, 30;
	shf.l.wrap.b32 	%r11377, %r11373, %r11372, 30;
	mov.b64 	%rd7379, {%r11377, %r11376};
	xor.b64  	%rd7380, %rd7379, %rd7378;
	shf.l.wrap.b32 	%r11378, %r11372, %r11373, 25;
	shf.l.wrap.b32 	%r11379, %r11373, %r11372, 25;
	mov.b64 	%rd7381, {%r11379, %r11378};
	xor.b64  	%rd7382, %rd7380, %rd7381;
	xor.b64  	%rd7383, %rd7363, %rd7313;
	xor.b64  	%rd7384, %rd7363, %rd7338;
	and.b64  	%rd7385, %rd7384, %rd7383;
	xor.b64  	%rd7386, %rd7385, %rd7363;
	add.s64 	%rd7387, %rd7376, %rd7386;
	add.s64 	%rd7388, %rd7387, %rd7382;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11380,%dummy}, %rd7377;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11381}, %rd7377;
	}
	shf.r.wrap.b32 	%r11382, %r11381, %r11380, 14;
	shf.r.wrap.b32 	%r11383, %r11380, %r11381, 14;
	mov.b64 	%rd7389, {%r11383, %r11382};
	shf.r.wrap.b32 	%r11384, %r11381, %r11380, 18;
	shf.r.wrap.b32 	%r11385, %r11380, %r11381, 18;
	mov.b64 	%rd7390, {%r11385, %r11384};
	xor.b64  	%rd7391, %rd7390, %rd7389;
	shf.l.wrap.b32 	%r11386, %r11380, %r11381, 23;
	shf.l.wrap.b32 	%r11387, %r11381, %r11380, 23;
	mov.b64 	%rd7392, {%r11387, %r11386};
	xor.b64  	%rd7393, %rd7391, %rd7392;
	xor.b64  	%rd7394, %rd7352, %rd7327;
	and.b64  	%rd7395, %rd7377, %rd7394;
	xor.b64  	%rd7396, %rd7395, %rd7327;
	add.s64 	%rd7397, %rd7302, %rd7073;
	ld.const.u64 	%rd7398, [k_sha512+336];
	add.s64 	%rd7399, %rd7397, %rd7398;
	add.s64 	%rd7400, %rd7399, %rd7396;
	add.s64 	%rd7401, %rd7400, %rd7393;
	add.s64 	%rd7402, %rd7401, %rd7313;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11388,%dummy}, %rd7388;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11389}, %rd7388;
	}
	shf.r.wrap.b32 	%r11390, %r11389, %r11388, 28;
	shf.r.wrap.b32 	%r11391, %r11388, %r11389, 28;
	mov.b64 	%rd7403, {%r11391, %r11390};
	shf.l.wrap.b32 	%r11392, %r11388, %r11389, 30;
	shf.l.wrap.b32 	%r11393, %r11389, %r11388, 30;
	mov.b64 	%rd7404, {%r11393, %r11392};
	xor.b64  	%rd7405, %rd7404, %rd7403;
	shf.l.wrap.b32 	%r11394, %r11388, %r11389, 25;
	shf.l.wrap.b32 	%r11395, %r11389, %r11388, 25;
	mov.b64 	%rd7406, {%r11395, %r11394};
	xor.b64  	%rd7407, %rd7405, %rd7406;
	xor.b64  	%rd7408, %rd7388, %rd7338;
	xor.b64  	%rd7409, %rd7388, %rd7363;
	and.b64  	%rd7410, %rd7409, %rd7408;
	xor.b64  	%rd7411, %rd7410, %rd7388;
	add.s64 	%rd7412, %rd7401, %rd7411;
	add.s64 	%rd7413, %rd7412, %rd7407;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11396,%dummy}, %rd7402;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11397}, %rd7402;
	}
	shf.r.wrap.b32 	%r11398, %r11397, %r11396, 14;
	shf.r.wrap.b32 	%r11399, %r11396, %r11397, 14;
	mov.b64 	%rd7414, {%r11399, %r11398};
	shf.r.wrap.b32 	%r11400, %r11397, %r11396, 18;
	shf.r.wrap.b32 	%r11401, %r11396, %r11397, 18;
	mov.b64 	%rd7415, {%r11401, %r11400};
	xor.b64  	%rd7416, %rd7415, %rd7414;
	shf.l.wrap.b32 	%r11402, %r11396, %r11397, 23;
	shf.l.wrap.b32 	%r11403, %r11397, %r11396, 23;
	mov.b64 	%rd7417, {%r11403, %r11402};
	xor.b64  	%rd7418, %rd7416, %rd7417;
	xor.b64  	%rd7419, %rd7377, %rd7352;
	and.b64  	%rd7420, %rd7402, %rd7419;
	xor.b64  	%rd7421, %rd7420, %rd7352;
	add.s64 	%rd7422, %rd7327, %rd7086;
	ld.const.u64 	%rd7423, [k_sha512+344];
	add.s64 	%rd7424, %rd7422, %rd7423;
	add.s64 	%rd7425, %rd7424, %rd7421;
	add.s64 	%rd7426, %rd7425, %rd7418;
	add.s64 	%rd7427, %rd7426, %rd7338;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11404,%dummy}, %rd7413;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11405}, %rd7413;
	}
	shf.r.wrap.b32 	%r11406, %r11405, %r11404, 28;
	shf.r.wrap.b32 	%r11407, %r11404, %r11405, 28;
	mov.b64 	%rd7428, {%r11407, %r11406};
	shf.l.wrap.b32 	%r11408, %r11404, %r11405, 30;
	shf.l.wrap.b32 	%r11409, %r11405, %r11404, 30;
	mov.b64 	%rd7429, {%r11409, %r11408};
	xor.b64  	%rd7430, %rd7429, %rd7428;
	shf.l.wrap.b32 	%r11410, %r11404, %r11405, 25;
	shf.l.wrap.b32 	%r11411, %r11405, %r11404, 25;
	mov.b64 	%rd7431, {%r11411, %r11410};
	xor.b64  	%rd7432, %rd7430, %rd7431;
	xor.b64  	%rd7433, %rd7413, %rd7363;
	xor.b64  	%rd7434, %rd7413, %rd7388;
	and.b64  	%rd7435, %rd7434, %rd7433;
	xor.b64  	%rd7436, %rd7435, %rd7413;
	add.s64 	%rd7437, %rd7426, %rd7436;
	add.s64 	%rd7438, %rd7437, %rd7432;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11412,%dummy}, %rd7427;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11413}, %rd7427;
	}
	shf.r.wrap.b32 	%r11414, %r11413, %r11412, 14;
	shf.r.wrap.b32 	%r11415, %r11412, %r11413, 14;
	mov.b64 	%rd7439, {%r11415, %r11414};
	shf.r.wrap.b32 	%r11416, %r11413, %r11412, 18;
	shf.r.wrap.b32 	%r11417, %r11412, %r11413, 18;
	mov.b64 	%rd7440, {%r11417, %r11416};
	xor.b64  	%rd7441, %rd7440, %rd7439;
	shf.l.wrap.b32 	%r11418, %r11412, %r11413, 23;
	shf.l.wrap.b32 	%r11419, %r11413, %r11412, 23;
	mov.b64 	%rd7442, {%r11419, %r11418};
	xor.b64  	%rd7443, %rd7441, %rd7442;
	xor.b64  	%rd7444, %rd7402, %rd7377;
	and.b64  	%rd7445, %rd7427, %rd7444;
	xor.b64  	%rd7446, %rd7445, %rd7377;
	add.s64 	%rd7447, %rd7352, %rd7099;
	ld.const.u64 	%rd7448, [k_sha512+352];
	add.s64 	%rd7449, %rd7447, %rd7448;
	add.s64 	%rd7450, %rd7449, %rd7446;
	add.s64 	%rd7451, %rd7450, %rd7443;
	add.s64 	%rd7452, %rd7451, %rd7363;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11420,%dummy}, %rd7438;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11421}, %rd7438;
	}
	shf.r.wrap.b32 	%r11422, %r11421, %r11420, 28;
	shf.r.wrap.b32 	%r11423, %r11420, %r11421, 28;
	mov.b64 	%rd7453, {%r11423, %r11422};
	shf.l.wrap.b32 	%r11424, %r11420, %r11421, 30;
	shf.l.wrap.b32 	%r11425, %r11421, %r11420, 30;
	mov.b64 	%rd7454, {%r11425, %r11424};
	xor.b64  	%rd7455, %rd7454, %rd7453;
	shf.l.wrap.b32 	%r11426, %r11420, %r11421, 25;
	shf.l.wrap.b32 	%r11427, %r11421, %r11420, 25;
	mov.b64 	%rd7456, {%r11427, %r11426};
	xor.b64  	%rd7457, %rd7455, %rd7456;
	xor.b64  	%rd7458, %rd7438, %rd7388;
	xor.b64  	%rd7459, %rd7438, %rd7413;
	and.b64  	%rd7460, %rd7459, %rd7458;
	xor.b64  	%rd7461, %rd7460, %rd7438;
	add.s64 	%rd7462, %rd7451, %rd7461;
	add.s64 	%rd7463, %rd7462, %rd7457;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11428,%dummy}, %rd7452;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11429}, %rd7452;
	}
	shf.r.wrap.b32 	%r11430, %r11429, %r11428, 14;
	shf.r.wrap.b32 	%r11431, %r11428, %r11429, 14;
	mov.b64 	%rd7464, {%r11431, %r11430};
	shf.r.wrap.b32 	%r11432, %r11429, %r11428, 18;
	shf.r.wrap.b32 	%r11433, %r11428, %r11429, 18;
	mov.b64 	%rd7465, {%r11433, %r11432};
	xor.b64  	%rd7466, %rd7465, %rd7464;
	shf.l.wrap.b32 	%r11434, %r11428, %r11429, 23;
	shf.l.wrap.b32 	%r11435, %r11429, %r11428, 23;
	mov.b64 	%rd7467, {%r11435, %r11434};
	xor.b64  	%rd7468, %rd7466, %rd7467;
	xor.b64  	%rd7469, %rd7427, %rd7402;
	and.b64  	%rd7470, %rd7452, %rd7469;
	xor.b64  	%rd7471, %rd7470, %rd7402;
	add.s64 	%rd7472, %rd7377, %rd7112;
	ld.const.u64 	%rd7473, [k_sha512+360];
	add.s64 	%rd7474, %rd7472, %rd7473;
	add.s64 	%rd7475, %rd7474, %rd7471;
	add.s64 	%rd7476, %rd7475, %rd7468;
	add.s64 	%rd7477, %rd7476, %rd7388;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11436,%dummy}, %rd7463;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11437}, %rd7463;
	}
	shf.r.wrap.b32 	%r11438, %r11437, %r11436, 28;
	shf.r.wrap.b32 	%r11439, %r11436, %r11437, 28;
	mov.b64 	%rd7478, {%r11439, %r11438};
	shf.l.wrap.b32 	%r11440, %r11436, %r11437, 30;
	shf.l.wrap.b32 	%r11441, %r11437, %r11436, 30;
	mov.b64 	%rd7479, {%r11441, %r11440};
	xor.b64  	%rd7480, %rd7479, %rd7478;
	shf.l.wrap.b32 	%r11442, %r11436, %r11437, 25;
	shf.l.wrap.b32 	%r11443, %r11437, %r11436, 25;
	mov.b64 	%rd7481, {%r11443, %r11442};
	xor.b64  	%rd7482, %rd7480, %rd7481;
	xor.b64  	%rd7483, %rd7463, %rd7413;
	xor.b64  	%rd7484, %rd7463, %rd7438;
	and.b64  	%rd7485, %rd7484, %rd7483;
	xor.b64  	%rd7486, %rd7485, %rd7463;
	add.s64 	%rd7487, %rd7476, %rd7486;
	add.s64 	%rd7488, %rd7487, %rd7482;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11444,%dummy}, %rd7477;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11445}, %rd7477;
	}
	shf.r.wrap.b32 	%r11446, %r11445, %r11444, 14;
	shf.r.wrap.b32 	%r11447, %r11444, %r11445, 14;
	mov.b64 	%rd7489, {%r11447, %r11446};
	shf.r.wrap.b32 	%r11448, %r11445, %r11444, 18;
	shf.r.wrap.b32 	%r11449, %r11444, %r11445, 18;
	mov.b64 	%rd7490, {%r11449, %r11448};
	xor.b64  	%rd7491, %rd7490, %rd7489;
	shf.l.wrap.b32 	%r11450, %r11444, %r11445, 23;
	shf.l.wrap.b32 	%r11451, %r11445, %r11444, 23;
	mov.b64 	%rd7492, {%r11451, %r11450};
	xor.b64  	%rd7493, %rd7491, %rd7492;
	xor.b64  	%rd7494, %rd7452, %rd7427;
	and.b64  	%rd7495, %rd7477, %rd7494;
	xor.b64  	%rd7496, %rd7495, %rd7427;
	add.s64 	%rd7497, %rd7402, %rd7125;
	ld.const.u64 	%rd7498, [k_sha512+368];
	add.s64 	%rd7499, %rd7497, %rd7498;
	add.s64 	%rd7500, %rd7499, %rd7496;
	add.s64 	%rd7501, %rd7500, %rd7493;
	add.s64 	%rd7502, %rd7501, %rd7413;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11452,%dummy}, %rd7488;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11453}, %rd7488;
	}
	shf.r.wrap.b32 	%r11454, %r11453, %r11452, 28;
	shf.r.wrap.b32 	%r11455, %r11452, %r11453, 28;
	mov.b64 	%rd7503, {%r11455, %r11454};
	shf.l.wrap.b32 	%r11456, %r11452, %r11453, 30;
	shf.l.wrap.b32 	%r11457, %r11453, %r11452, 30;
	mov.b64 	%rd7504, {%r11457, %r11456};
	xor.b64  	%rd7505, %rd7504, %rd7503;
	shf.l.wrap.b32 	%r11458, %r11452, %r11453, 25;
	shf.l.wrap.b32 	%r11459, %r11453, %r11452, 25;
	mov.b64 	%rd7506, {%r11459, %r11458};
	xor.b64  	%rd7507, %rd7505, %rd7506;
	xor.b64  	%rd7508, %rd7488, %rd7438;
	xor.b64  	%rd7509, %rd7488, %rd7463;
	and.b64  	%rd7510, %rd7509, %rd7508;
	xor.b64  	%rd7511, %rd7510, %rd7488;
	add.s64 	%rd7512, %rd7501, %rd7511;
	add.s64 	%rd7513, %rd7512, %rd7507;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11460,%dummy}, %rd7502;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11461}, %rd7502;
	}
	shf.r.wrap.b32 	%r11462, %r11461, %r11460, 14;
	shf.r.wrap.b32 	%r11463, %r11460, %r11461, 14;
	mov.b64 	%rd7514, {%r11463, %r11462};
	shf.r.wrap.b32 	%r11464, %r11461, %r11460, 18;
	shf.r.wrap.b32 	%r11465, %r11460, %r11461, 18;
	mov.b64 	%rd7515, {%r11465, %r11464};
	xor.b64  	%rd7516, %rd7515, %rd7514;
	shf.l.wrap.b32 	%r11466, %r11460, %r11461, 23;
	shf.l.wrap.b32 	%r11467, %r11461, %r11460, 23;
	mov.b64 	%rd7517, {%r11467, %r11466};
	xor.b64  	%rd7518, %rd7516, %rd7517;
	xor.b64  	%rd7519, %rd7477, %rd7452;
	and.b64  	%rd7520, %rd7502, %rd7519;
	xor.b64  	%rd7521, %rd7520, %rd7452;
	add.s64 	%rd7522, %rd7427, %rd7138;
	ld.const.u64 	%rd7523, [k_sha512+376];
	add.s64 	%rd7524, %rd7522, %rd7523;
	add.s64 	%rd7525, %rd7524, %rd7521;
	add.s64 	%rd7526, %rd7525, %rd7518;
	add.s64 	%rd7527, %rd7526, %rd7438;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11468,%dummy}, %rd7513;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11469}, %rd7513;
	}
	shf.r.wrap.b32 	%r11470, %r11469, %r11468, 28;
	shf.r.wrap.b32 	%r11471, %r11468, %r11469, 28;
	mov.b64 	%rd7528, {%r11471, %r11470};
	shf.l.wrap.b32 	%r11472, %r11468, %r11469, 30;
	shf.l.wrap.b32 	%r11473, %r11469, %r11468, 30;
	mov.b64 	%rd7529, {%r11473, %r11472};
	xor.b64  	%rd7530, %rd7529, %rd7528;
	shf.l.wrap.b32 	%r11474, %r11468, %r11469, 25;
	shf.l.wrap.b32 	%r11475, %r11469, %r11468, 25;
	mov.b64 	%rd7531, {%r11475, %r11474};
	xor.b64  	%rd7532, %rd7530, %rd7531;
	xor.b64  	%rd7533, %rd7513, %rd7463;
	xor.b64  	%rd7534, %rd7513, %rd7488;
	and.b64  	%rd7535, %rd7534, %rd7533;
	xor.b64  	%rd7536, %rd7535, %rd7513;
	add.s64 	%rd7537, %rd7526, %rd7536;
	add.s64 	%rd7538, %rd7537, %rd7532;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11476,%dummy}, %rd7125;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11477}, %rd7125;
	}
	shf.r.wrap.b32 	%r11478, %r11477, %r11476, 19;
	shf.r.wrap.b32 	%r11479, %r11476, %r11477, 19;
	mov.b64 	%rd7539, {%r11479, %r11478};
	shf.l.wrap.b32 	%r11480, %r11476, %r11477, 3;
	shf.l.wrap.b32 	%r11481, %r11477, %r11476, 3;
	mov.b64 	%rd7540, {%r11481, %r11480};
	shr.u64 	%rd7541, %rd7125, 6;
	xor.b64  	%rd7542, %rd7539, %rd7541;
	xor.b64  	%rd7543, %rd7542, %rd7540;
	shf.r.wrap.b32 	%r11482, %r11091, %r11090, 1;
	shf.r.wrap.b32 	%r11483, %r11090, %r11091, 1;
	mov.b64 	%rd7544, {%r11483, %r11482};
	shf.r.wrap.b32 	%r11484, %r11091, %r11090, 8;
	shf.r.wrap.b32 	%r11485, %r11090, %r11091, 8;
	mov.b64 	%rd7545, {%r11485, %r11484};
	shr.u64 	%rd7546, %rd6956, 7;
	xor.b64  	%rd7547, %rd7544, %rd7546;
	xor.b64  	%rd7548, %rd7547, %rd7545;
	add.s64 	%rd7549, %rd7060, %rd6943;
	add.s64 	%rd7550, %rd7549, %rd7543;
	add.s64 	%rd7551, %rd7550, %rd7548;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11486,%dummy}, %rd7138;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11487}, %rd7138;
	}
	shf.r.wrap.b32 	%r11488, %r11487, %r11486, 19;
	shf.r.wrap.b32 	%r11489, %r11486, %r11487, 19;
	mov.b64 	%rd7552, {%r11489, %r11488};
	shf.l.wrap.b32 	%r11490, %r11486, %r11487, 3;
	shf.l.wrap.b32 	%r11491, %r11487, %r11486, 3;
	mov.b64 	%rd7553, {%r11491, %r11490};
	shr.u64 	%rd7554, %rd7138, 6;
	xor.b64  	%rd7555, %rd7552, %rd7554;
	xor.b64  	%rd7556, %rd7555, %rd7553;
	shf.r.wrap.b32 	%r11492, %r11101, %r11100, 1;
	shf.r.wrap.b32 	%r11493, %r11100, %r11101, 1;
	mov.b64 	%rd7557, {%r11493, %r11492};
	shf.r.wrap.b32 	%r11494, %r11101, %r11100, 8;
	shf.r.wrap.b32 	%r11495, %r11100, %r11101, 8;
	mov.b64 	%rd7558, {%r11495, %r11494};
	shr.u64 	%rd7559, %rd6969, 7;
	xor.b64  	%rd7560, %rd7557, %rd7559;
	xor.b64  	%rd7561, %rd7560, %rd7558;
	add.s64 	%rd7562, %rd7073, %rd6956;
	add.s64 	%rd7563, %rd7562, %rd7556;
	add.s64 	%rd7564, %rd7563, %rd7561;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11496,%dummy}, %rd7551;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11497}, %rd7551;
	}
	shf.r.wrap.b32 	%r11498, %r11497, %r11496, 19;
	shf.r.wrap.b32 	%r11499, %r11496, %r11497, 19;
	mov.b64 	%rd7565, {%r11499, %r11498};
	shf.l.wrap.b32 	%r11500, %r11496, %r11497, 3;
	shf.l.wrap.b32 	%r11501, %r11497, %r11496, 3;
	mov.b64 	%rd7566, {%r11501, %r11500};
	shr.u64 	%rd7567, %rd7551, 6;
	xor.b64  	%rd7568, %rd7565, %rd7567;
	xor.b64  	%rd7569, %rd7568, %rd7566;
	shf.r.wrap.b32 	%r11502, %r11111, %r11110, 1;
	shf.r.wrap.b32 	%r11503, %r11110, %r11111, 1;
	mov.b64 	%rd7570, {%r11503, %r11502};
	shf.r.wrap.b32 	%r11504, %r11111, %r11110, 8;
	shf.r.wrap.b32 	%r11505, %r11110, %r11111, 8;
	mov.b64 	%rd7571, {%r11505, %r11504};
	shr.u64 	%rd7572, %rd6982, 7;
	xor.b64  	%rd7573, %rd7570, %rd7572;
	xor.b64  	%rd7574, %rd7573, %rd7571;
	add.s64 	%rd7575, %rd7086, %rd6969;
	add.s64 	%rd7576, %rd7575, %rd7569;
	add.s64 	%rd7577, %rd7576, %rd7574;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11506,%dummy}, %rd7564;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11507}, %rd7564;
	}
	shf.r.wrap.b32 	%r11508, %r11507, %r11506, 19;
	shf.r.wrap.b32 	%r11509, %r11506, %r11507, 19;
	mov.b64 	%rd7578, {%r11509, %r11508};
	shf.l.wrap.b32 	%r11510, %r11506, %r11507, 3;
	shf.l.wrap.b32 	%r11511, %r11507, %r11506, 3;
	mov.b64 	%rd7579, {%r11511, %r11510};
	shr.u64 	%rd7580, %rd7564, 6;
	xor.b64  	%rd7581, %rd7578, %rd7580;
	xor.b64  	%rd7582, %rd7581, %rd7579;
	shf.r.wrap.b32 	%r11512, %r11121, %r11120, 1;
	shf.r.wrap.b32 	%r11513, %r11120, %r11121, 1;
	mov.b64 	%rd7583, {%r11513, %r11512};
	shf.r.wrap.b32 	%r11514, %r11121, %r11120, 8;
	shf.r.wrap.b32 	%r11515, %r11120, %r11121, 8;
	mov.b64 	%rd7584, {%r11515, %r11514};
	shr.u64 	%rd7585, %rd6995, 7;
	xor.b64  	%rd7586, %rd7583, %rd7585;
	xor.b64  	%rd7587, %rd7586, %rd7584;
	add.s64 	%rd7588, %rd7099, %rd6982;
	add.s64 	%rd7589, %rd7588, %rd7582;
	add.s64 	%rd7590, %rd7589, %rd7587;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11516,%dummy}, %rd7577;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11517}, %rd7577;
	}
	shf.r.wrap.b32 	%r11518, %r11517, %r11516, 19;
	shf.r.wrap.b32 	%r11519, %r11516, %r11517, 19;
	mov.b64 	%rd7591, {%r11519, %r11518};
	shf.l.wrap.b32 	%r11520, %r11516, %r11517, 3;
	shf.l.wrap.b32 	%r11521, %r11517, %r11516, 3;
	mov.b64 	%rd7592, {%r11521, %r11520};
	shr.u64 	%rd7593, %rd7577, 6;
	xor.b64  	%rd7594, %rd7591, %rd7593;
	xor.b64  	%rd7595, %rd7594, %rd7592;
	shf.r.wrap.b32 	%r11522, %r11131, %r11130, 1;
	shf.r.wrap.b32 	%r11523, %r11130, %r11131, 1;
	mov.b64 	%rd7596, {%r11523, %r11522};
	shf.r.wrap.b32 	%r11524, %r11131, %r11130, 8;
	shf.r.wrap.b32 	%r11525, %r11130, %r11131, 8;
	mov.b64 	%rd7597, {%r11525, %r11524};
	shr.u64 	%rd7598, %rd7008, 7;
	xor.b64  	%rd7599, %rd7596, %rd7598;
	xor.b64  	%rd7600, %rd7599, %rd7597;
	add.s64 	%rd7601, %rd7112, %rd6995;
	add.s64 	%rd7602, %rd7601, %rd7595;
	add.s64 	%rd7603, %rd7602, %rd7600;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11526,%dummy}, %rd7590;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11527}, %rd7590;
	}
	shf.r.wrap.b32 	%r11528, %r11527, %r11526, 19;
	shf.r.wrap.b32 	%r11529, %r11526, %r11527, 19;
	mov.b64 	%rd7604, {%r11529, %r11528};
	shf.l.wrap.b32 	%r11530, %r11526, %r11527, 3;
	shf.l.wrap.b32 	%r11531, %r11527, %r11526, 3;
	mov.b64 	%rd7605, {%r11531, %r11530};
	shr.u64 	%rd7606, %rd7590, 6;
	xor.b64  	%rd7607, %rd7604, %rd7606;
	xor.b64  	%rd7608, %rd7607, %rd7605;
	shf.r.wrap.b32 	%r11532, %r11141, %r11140, 1;
	shf.r.wrap.b32 	%r11533, %r11140, %r11141, 1;
	mov.b64 	%rd7609, {%r11533, %r11532};
	shf.r.wrap.b32 	%r11534, %r11141, %r11140, 8;
	shf.r.wrap.b32 	%r11535, %r11140, %r11141, 8;
	mov.b64 	%rd7610, {%r11535, %r11534};
	shr.u64 	%rd7611, %rd7021, 7;
	xor.b64  	%rd7612, %rd7609, %rd7611;
	xor.b64  	%rd7613, %rd7612, %rd7610;
	add.s64 	%rd7614, %rd7125, %rd7008;
	add.s64 	%rd7615, %rd7614, %rd7608;
	add.s64 	%rd7616, %rd7615, %rd7613;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11536,%dummy}, %rd7603;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11537}, %rd7603;
	}
	shf.r.wrap.b32 	%r11538, %r11537, %r11536, 19;
	shf.r.wrap.b32 	%r11539, %r11536, %r11537, 19;
	mov.b64 	%rd7617, {%r11539, %r11538};
	shf.l.wrap.b32 	%r11540, %r11536, %r11537, 3;
	shf.l.wrap.b32 	%r11541, %r11537, %r11536, 3;
	mov.b64 	%rd7618, {%r11541, %r11540};
	shr.u64 	%rd7619, %rd7603, 6;
	xor.b64  	%rd7620, %rd7617, %rd7619;
	xor.b64  	%rd7621, %rd7620, %rd7618;
	shf.r.wrap.b32 	%r11542, %r11151, %r11150, 1;
	shf.r.wrap.b32 	%r11543, %r11150, %r11151, 1;
	mov.b64 	%rd7622, {%r11543, %r11542};
	shf.r.wrap.b32 	%r11544, %r11151, %r11150, 8;
	shf.r.wrap.b32 	%r11545, %r11150, %r11151, 8;
	mov.b64 	%rd7623, {%r11545, %r11544};
	shr.u64 	%rd7624, %rd7034, 7;
	xor.b64  	%rd7625, %rd7622, %rd7624;
	xor.b64  	%rd7626, %rd7625, %rd7623;
	add.s64 	%rd7627, %rd7138, %rd7021;
	add.s64 	%rd7628, %rd7627, %rd7621;
	add.s64 	%rd7629, %rd7628, %rd7626;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11546,%dummy}, %rd7616;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11547}, %rd7616;
	}
	shf.r.wrap.b32 	%r11548, %r11547, %r11546, 19;
	shf.r.wrap.b32 	%r11549, %r11546, %r11547, 19;
	mov.b64 	%rd7630, {%r11549, %r11548};
	shf.l.wrap.b32 	%r11550, %r11546, %r11547, 3;
	shf.l.wrap.b32 	%r11551, %r11547, %r11546, 3;
	mov.b64 	%rd7631, {%r11551, %r11550};
	shr.u64 	%rd7632, %rd7616, 6;
	xor.b64  	%rd7633, %rd7630, %rd7632;
	xor.b64  	%rd7634, %rd7633, %rd7631;
	shf.r.wrap.b32 	%r11552, %r11161, %r11160, 1;
	shf.r.wrap.b32 	%r11553, %r11160, %r11161, 1;
	mov.b64 	%rd7635, {%r11553, %r11552};
	shf.r.wrap.b32 	%r11554, %r11161, %r11160, 8;
	shf.r.wrap.b32 	%r11555, %r11160, %r11161, 8;
	mov.b64 	%rd7636, {%r11555, %r11554};
	shr.u64 	%rd7637, %rd7047, 7;
	xor.b64  	%rd7638, %rd7635, %rd7637;
	xor.b64  	%rd7639, %rd7638, %rd7636;
	add.s64 	%rd7640, %rd7551, %rd7034;
	add.s64 	%rd7641, %rd7640, %rd7634;
	add.s64 	%rd7642, %rd7641, %rd7639;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11556,%dummy}, %rd7629;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11557}, %rd7629;
	}
	shf.r.wrap.b32 	%r11558, %r11557, %r11556, 19;
	shf.r.wrap.b32 	%r11559, %r11556, %r11557, 19;
	mov.b64 	%rd7643, {%r11559, %r11558};
	shf.l.wrap.b32 	%r11560, %r11556, %r11557, 3;
	shf.l.wrap.b32 	%r11561, %r11557, %r11556, 3;
	mov.b64 	%rd7644, {%r11561, %r11560};
	shr.u64 	%rd7645, %rd7629, 6;
	xor.b64  	%rd7646, %rd7643, %rd7645;
	xor.b64  	%rd7647, %rd7646, %rd7644;
	shf.r.wrap.b32 	%r11562, %r11171, %r11170, 1;
	shf.r.wrap.b32 	%r11563, %r11170, %r11171, 1;
	mov.b64 	%rd7648, {%r11563, %r11562};
	shf.r.wrap.b32 	%r11564, %r11171, %r11170, 8;
	shf.r.wrap.b32 	%r11565, %r11170, %r11171, 8;
	mov.b64 	%rd7649, {%r11565, %r11564};
	shr.u64 	%rd7650, %rd7060, 7;
	xor.b64  	%rd7651, %rd7648, %rd7650;
	xor.b64  	%rd7652, %rd7651, %rd7649;
	add.s64 	%rd7653, %rd7564, %rd7047;
	add.s64 	%rd7654, %rd7653, %rd7647;
	add.s64 	%rd7655, %rd7654, %rd7652;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11566,%dummy}, %rd7642;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11567}, %rd7642;
	}
	shf.r.wrap.b32 	%r11568, %r11567, %r11566, 19;
	shf.r.wrap.b32 	%r11569, %r11566, %r11567, 19;
	mov.b64 	%rd7656, {%r11569, %r11568};
	shf.l.wrap.b32 	%r11570, %r11566, %r11567, 3;
	shf.l.wrap.b32 	%r11571, %r11567, %r11566, 3;
	mov.b64 	%rd7657, {%r11571, %r11570};
	shr.u64 	%rd7658, %rd7642, 6;
	xor.b64  	%rd7659, %rd7656, %rd7658;
	xor.b64  	%rd7660, %rd7659, %rd7657;
	shf.r.wrap.b32 	%r11572, %r11181, %r11180, 1;
	shf.r.wrap.b32 	%r11573, %r11180, %r11181, 1;
	mov.b64 	%rd7661, {%r11573, %r11572};
	shf.r.wrap.b32 	%r11574, %r11181, %r11180, 8;
	shf.r.wrap.b32 	%r11575, %r11180, %r11181, 8;
	mov.b64 	%rd7662, {%r11575, %r11574};
	shr.u64 	%rd7663, %rd7073, 7;
	xor.b64  	%rd7664, %rd7661, %rd7663;
	xor.b64  	%rd7665, %rd7664, %rd7662;
	add.s64 	%rd7666, %rd7577, %rd7060;
	add.s64 	%rd7667, %rd7666, %rd7660;
	add.s64 	%rd7668, %rd7667, %rd7665;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11576,%dummy}, %rd7655;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11577}, %rd7655;
	}
	shf.r.wrap.b32 	%r11578, %r11577, %r11576, 19;
	shf.r.wrap.b32 	%r11579, %r11576, %r11577, 19;
	mov.b64 	%rd7669, {%r11579, %r11578};
	shf.l.wrap.b32 	%r11580, %r11576, %r11577, 3;
	shf.l.wrap.b32 	%r11581, %r11577, %r11576, 3;
	mov.b64 	%rd7670, {%r11581, %r11580};
	shr.u64 	%rd7671, %rd7655, 6;
	xor.b64  	%rd7672, %rd7669, %rd7671;
	xor.b64  	%rd7673, %rd7672, %rd7670;
	shf.r.wrap.b32 	%r11582, %r11191, %r11190, 1;
	shf.r.wrap.b32 	%r11583, %r11190, %r11191, 1;
	mov.b64 	%rd7674, {%r11583, %r11582};
	shf.r.wrap.b32 	%r11584, %r11191, %r11190, 8;
	shf.r.wrap.b32 	%r11585, %r11190, %r11191, 8;
	mov.b64 	%rd7675, {%r11585, %r11584};
	shr.u64 	%rd7676, %rd7086, 7;
	xor.b64  	%rd7677, %rd7674, %rd7676;
	xor.b64  	%rd7678, %rd7677, %rd7675;
	add.s64 	%rd7679, %rd7590, %rd7073;
	add.s64 	%rd7680, %rd7679, %rd7673;
	add.s64 	%rd7681, %rd7680, %rd7678;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11586,%dummy}, %rd7668;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11587}, %rd7668;
	}
	shf.r.wrap.b32 	%r11588, %r11587, %r11586, 19;
	shf.r.wrap.b32 	%r11589, %r11586, %r11587, 19;
	mov.b64 	%rd7682, {%r11589, %r11588};
	shf.l.wrap.b32 	%r11590, %r11586, %r11587, 3;
	shf.l.wrap.b32 	%r11591, %r11587, %r11586, 3;
	mov.b64 	%rd7683, {%r11591, %r11590};
	shr.u64 	%rd7684, %rd7668, 6;
	xor.b64  	%rd7685, %rd7682, %rd7684;
	xor.b64  	%rd7686, %rd7685, %rd7683;
	shf.r.wrap.b32 	%r11592, %r11201, %r11200, 1;
	shf.r.wrap.b32 	%r11593, %r11200, %r11201, 1;
	mov.b64 	%rd7687, {%r11593, %r11592};
	shf.r.wrap.b32 	%r11594, %r11201, %r11200, 8;
	shf.r.wrap.b32 	%r11595, %r11200, %r11201, 8;
	mov.b64 	%rd7688, {%r11595, %r11594};
	shr.u64 	%rd7689, %rd7099, 7;
	xor.b64  	%rd7690, %rd7687, %rd7689;
	xor.b64  	%rd7691, %rd7690, %rd7688;
	add.s64 	%rd7692, %rd7603, %rd7086;
	add.s64 	%rd7693, %rd7692, %rd7686;
	add.s64 	%rd7694, %rd7693, %rd7691;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11596,%dummy}, %rd7681;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11597}, %rd7681;
	}
	shf.r.wrap.b32 	%r11598, %r11597, %r11596, 19;
	shf.r.wrap.b32 	%r11599, %r11596, %r11597, 19;
	mov.b64 	%rd7695, {%r11599, %r11598};
	shf.l.wrap.b32 	%r11600, %r11596, %r11597, 3;
	shf.l.wrap.b32 	%r11601, %r11597, %r11596, 3;
	mov.b64 	%rd7696, {%r11601, %r11600};
	shr.u64 	%rd7697, %rd7681, 6;
	xor.b64  	%rd7698, %rd7695, %rd7697;
	xor.b64  	%rd7699, %rd7698, %rd7696;
	shf.r.wrap.b32 	%r11602, %r11211, %r11210, 1;
	shf.r.wrap.b32 	%r11603, %r11210, %r11211, 1;
	mov.b64 	%rd7700, {%r11603, %r11602};
	shf.r.wrap.b32 	%r11604, %r11211, %r11210, 8;
	shf.r.wrap.b32 	%r11605, %r11210, %r11211, 8;
	mov.b64 	%rd7701, {%r11605, %r11604};
	shr.u64 	%rd7702, %rd7112, 7;
	xor.b64  	%rd7703, %rd7700, %rd7702;
	xor.b64  	%rd7704, %rd7703, %rd7701;
	add.s64 	%rd7705, %rd7616, %rd7099;
	add.s64 	%rd7706, %rd7705, %rd7699;
	add.s64 	%rd7707, %rd7706, %rd7704;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11606,%dummy}, %rd7694;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11607}, %rd7694;
	}
	shf.r.wrap.b32 	%r11608, %r11607, %r11606, 19;
	shf.r.wrap.b32 	%r11609, %r11606, %r11607, 19;
	mov.b64 	%rd7708, {%r11609, %r11608};
	shf.l.wrap.b32 	%r11610, %r11606, %r11607, 3;
	shf.l.wrap.b32 	%r11611, %r11607, %r11606, 3;
	mov.b64 	%rd7709, {%r11611, %r11610};
	shr.u64 	%rd7710, %rd7694, 6;
	xor.b64  	%rd7711, %rd7708, %rd7710;
	xor.b64  	%rd7712, %rd7711, %rd7709;
	shf.r.wrap.b32 	%r11612, %r11477, %r11476, 1;
	shf.r.wrap.b32 	%r11613, %r11476, %r11477, 1;
	mov.b64 	%rd7713, {%r11613, %r11612};
	shf.r.wrap.b32 	%r11614, %r11477, %r11476, 8;
	shf.r.wrap.b32 	%r11615, %r11476, %r11477, 8;
	mov.b64 	%rd7714, {%r11615, %r11614};
	shr.u64 	%rd7715, %rd7125, 7;
	xor.b64  	%rd7716, %rd7713, %rd7715;
	xor.b64  	%rd7717, %rd7716, %rd7714;
	add.s64 	%rd7718, %rd7629, %rd7112;
	add.s64 	%rd7719, %rd7718, %rd7712;
	add.s64 	%rd7720, %rd7719, %rd7717;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11616,%dummy}, %rd7707;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11617}, %rd7707;
	}
	shf.r.wrap.b32 	%r11618, %r11617, %r11616, 19;
	shf.r.wrap.b32 	%r11619, %r11616, %r11617, 19;
	mov.b64 	%rd7721, {%r11619, %r11618};
	shf.l.wrap.b32 	%r11620, %r11616, %r11617, 3;
	shf.l.wrap.b32 	%r11621, %r11617, %r11616, 3;
	mov.b64 	%rd7722, {%r11621, %r11620};
	shr.u64 	%rd7723, %rd7707, 6;
	xor.b64  	%rd7724, %rd7721, %rd7723;
	xor.b64  	%rd7725, %rd7724, %rd7722;
	shf.r.wrap.b32 	%r11622, %r11487, %r11486, 1;
	shf.r.wrap.b32 	%r11623, %r11486, %r11487, 1;
	mov.b64 	%rd7726, {%r11623, %r11622};
	shf.r.wrap.b32 	%r11624, %r11487, %r11486, 8;
	shf.r.wrap.b32 	%r11625, %r11486, %r11487, 8;
	mov.b64 	%rd7727, {%r11625, %r11624};
	shr.u64 	%rd7728, %rd7138, 7;
	xor.b64  	%rd7729, %rd7726, %rd7728;
	xor.b64  	%rd7730, %rd7729, %rd7727;
	add.s64 	%rd7731, %rd7642, %rd7125;
	add.s64 	%rd7732, %rd7731, %rd7725;
	add.s64 	%rd7733, %rd7732, %rd7730;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11626,%dummy}, %rd7720;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11627}, %rd7720;
	}
	shf.r.wrap.b32 	%r11628, %r11627, %r11626, 19;
	shf.r.wrap.b32 	%r11629, %r11626, %r11627, 19;
	mov.b64 	%rd7734, {%r11629, %r11628};
	shf.l.wrap.b32 	%r11630, %r11626, %r11627, 3;
	shf.l.wrap.b32 	%r11631, %r11627, %r11626, 3;
	mov.b64 	%rd7735, {%r11631, %r11630};
	shr.u64 	%rd7736, %rd7720, 6;
	xor.b64  	%rd7737, %rd7734, %rd7736;
	xor.b64  	%rd7738, %rd7737, %rd7735;
	shf.r.wrap.b32 	%r11632, %r11497, %r11496, 1;
	shf.r.wrap.b32 	%r11633, %r11496, %r11497, 1;
	mov.b64 	%rd7739, {%r11633, %r11632};
	shf.r.wrap.b32 	%r11634, %r11497, %r11496, 8;
	shf.r.wrap.b32 	%r11635, %r11496, %r11497, 8;
	mov.b64 	%rd7740, {%r11635, %r11634};
	shr.u64 	%rd7741, %rd7551, 7;
	xor.b64  	%rd7742, %rd7739, %rd7741;
	xor.b64  	%rd7743, %rd7742, %rd7740;
	add.s64 	%rd7744, %rd7655, %rd7138;
	add.s64 	%rd7745, %rd7744, %rd7738;
	add.s64 	%rd7746, %rd7745, %rd7743;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11636,%dummy}, %rd7527;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11637}, %rd7527;
	}
	shf.r.wrap.b32 	%r11638, %r11637, %r11636, 14;
	shf.r.wrap.b32 	%r11639, %r11636, %r11637, 14;
	mov.b64 	%rd7747, {%r11639, %r11638};
	shf.r.wrap.b32 	%r11640, %r11637, %r11636, 18;
	shf.r.wrap.b32 	%r11641, %r11636, %r11637, 18;
	mov.b64 	%rd7748, {%r11641, %r11640};
	xor.b64  	%rd7749, %rd7748, %rd7747;
	shf.l.wrap.b32 	%r11642, %r11636, %r11637, 23;
	shf.l.wrap.b32 	%r11643, %r11637, %r11636, 23;
	mov.b64 	%rd7750, {%r11643, %r11642};
	xor.b64  	%rd7751, %rd7749, %rd7750;
	xor.b64  	%rd7752, %rd7502, %rd7477;
	and.b64  	%rd7753, %rd7752, %rd7527;
	xor.b64  	%rd7754, %rd7753, %rd7477;
	add.s64 	%rd7755, %rd7754, %rd7452;
	add.s64 	%rd7756, %rd7755, %rd7551;
	ld.const.u64 	%rd7757, [k_sha512+384];
	add.s64 	%rd7758, %rd7756, %rd7757;
	add.s64 	%rd7759, %rd7758, %rd7751;
	add.s64 	%rd7760, %rd7759, %rd7463;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11644,%dummy}, %rd7538;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11645}, %rd7538;
	}
	shf.r.wrap.b32 	%r11646, %r11645, %r11644, 28;
	shf.r.wrap.b32 	%r11647, %r11644, %r11645, 28;
	mov.b64 	%rd7761, {%r11647, %r11646};
	shf.l.wrap.b32 	%r11648, %r11644, %r11645, 30;
	shf.l.wrap.b32 	%r11649, %r11645, %r11644, 30;
	mov.b64 	%rd7762, {%r11649, %r11648};
	xor.b64  	%rd7763, %rd7762, %rd7761;
	shf.l.wrap.b32 	%r11650, %r11644, %r11645, 25;
	shf.l.wrap.b32 	%r11651, %r11645, %r11644, 25;
	mov.b64 	%rd7764, {%r11651, %r11650};
	xor.b64  	%rd7765, %rd7763, %rd7764;
	xor.b64  	%rd7766, %rd7538, %rd7488;
	xor.b64  	%rd7767, %rd7538, %rd7513;
	and.b64  	%rd7768, %rd7767, %rd7766;
	xor.b64  	%rd7769, %rd7768, %rd7538;
	add.s64 	%rd7770, %rd7759, %rd7769;
	add.s64 	%rd7771, %rd7770, %rd7765;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11652,%dummy}, %rd7760;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11653}, %rd7760;
	}
	shf.r.wrap.b32 	%r11654, %r11653, %r11652, 14;
	shf.r.wrap.b32 	%r11655, %r11652, %r11653, 14;
	mov.b64 	%rd7772, {%r11655, %r11654};
	shf.r.wrap.b32 	%r11656, %r11653, %r11652, 18;
	shf.r.wrap.b32 	%r11657, %r11652, %r11653, 18;
	mov.b64 	%rd7773, {%r11657, %r11656};
	xor.b64  	%rd7774, %rd7773, %rd7772;
	shf.l.wrap.b32 	%r11658, %r11652, %r11653, 23;
	shf.l.wrap.b32 	%r11659, %r11653, %r11652, 23;
	mov.b64 	%rd7775, {%r11659, %r11658};
	xor.b64  	%rd7776, %rd7774, %rd7775;
	xor.b64  	%rd7777, %rd7527, %rd7502;
	and.b64  	%rd7778, %rd7760, %rd7777;
	xor.b64  	%rd7779, %rd7778, %rd7502;
	add.s64 	%rd7780, %rd7564, %rd7477;
	ld.const.u64 	%rd7781, [k_sha512+392];
	add.s64 	%rd7782, %rd7780, %rd7781;
	add.s64 	%rd7783, %rd7782, %rd7779;
	add.s64 	%rd7784, %rd7783, %rd7776;
	add.s64 	%rd7785, %rd7784, %rd7488;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11660,%dummy}, %rd7771;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11661}, %rd7771;
	}
	shf.r.wrap.b32 	%r11662, %r11661, %r11660, 28;
	shf.r.wrap.b32 	%r11663, %r11660, %r11661, 28;
	mov.b64 	%rd7786, {%r11663, %r11662};
	shf.l.wrap.b32 	%r11664, %r11660, %r11661, 30;
	shf.l.wrap.b32 	%r11665, %r11661, %r11660, 30;
	mov.b64 	%rd7787, {%r11665, %r11664};
	xor.b64  	%rd7788, %rd7787, %rd7786;
	shf.l.wrap.b32 	%r11666, %r11660, %r11661, 25;
	shf.l.wrap.b32 	%r11667, %r11661, %r11660, 25;
	mov.b64 	%rd7789, {%r11667, %r11666};
	xor.b64  	%rd7790, %rd7788, %rd7789;
	xor.b64  	%rd7791, %rd7771, %rd7513;
	xor.b64  	%rd7792, %rd7771, %rd7538;
	and.b64  	%rd7793, %rd7792, %rd7791;
	xor.b64  	%rd7794, %rd7793, %rd7771;
	add.s64 	%rd7795, %rd7784, %rd7794;
	add.s64 	%rd7796, %rd7795, %rd7790;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11668,%dummy}, %rd7785;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11669}, %rd7785;
	}
	shf.r.wrap.b32 	%r11670, %r11669, %r11668, 14;
	shf.r.wrap.b32 	%r11671, %r11668, %r11669, 14;
	mov.b64 	%rd7797, {%r11671, %r11670};
	shf.r.wrap.b32 	%r11672, %r11669, %r11668, 18;
	shf.r.wrap.b32 	%r11673, %r11668, %r11669, 18;
	mov.b64 	%rd7798, {%r11673, %r11672};
	xor.b64  	%rd7799, %rd7798, %rd7797;
	shf.l.wrap.b32 	%r11674, %r11668, %r11669, 23;
	shf.l.wrap.b32 	%r11675, %r11669, %r11668, 23;
	mov.b64 	%rd7800, {%r11675, %r11674};
	xor.b64  	%rd7801, %rd7799, %rd7800;
	xor.b64  	%rd7802, %rd7760, %rd7527;
	and.b64  	%rd7803, %rd7785, %rd7802;
	xor.b64  	%rd7804, %rd7803, %rd7527;
	add.s64 	%rd7805, %rd7577, %rd7502;
	ld.const.u64 	%rd7806, [k_sha512+400];
	add.s64 	%rd7807, %rd7805, %rd7806;
	add.s64 	%rd7808, %rd7807, %rd7804;
	add.s64 	%rd7809, %rd7808, %rd7801;
	add.s64 	%rd7810, %rd7809, %rd7513;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11676,%dummy}, %rd7796;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11677}, %rd7796;
	}
	shf.r.wrap.b32 	%r11678, %r11677, %r11676, 28;
	shf.r.wrap.b32 	%r11679, %r11676, %r11677, 28;
	mov.b64 	%rd7811, {%r11679, %r11678};
	shf.l.wrap.b32 	%r11680, %r11676, %r11677, 30;
	shf.l.wrap.b32 	%r11681, %r11677, %r11676, 30;
	mov.b64 	%rd7812, {%r11681, %r11680};
	xor.b64  	%rd7813, %rd7812, %rd7811;
	shf.l.wrap.b32 	%r11682, %r11676, %r11677, 25;
	shf.l.wrap.b32 	%r11683, %r11677, %r11676, 25;
	mov.b64 	%rd7814, {%r11683, %r11682};
	xor.b64  	%rd7815, %rd7813, %rd7814;
	xor.b64  	%rd7816, %rd7796, %rd7538;
	xor.b64  	%rd7817, %rd7796, %rd7771;
	and.b64  	%rd7818, %rd7817, %rd7816;
	xor.b64  	%rd7819, %rd7818, %rd7796;
	add.s64 	%rd7820, %rd7809, %rd7819;
	add.s64 	%rd7821, %rd7820, %rd7815;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11684,%dummy}, %rd7810;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11685}, %rd7810;
	}
	shf.r.wrap.b32 	%r11686, %r11685, %r11684, 14;
	shf.r.wrap.b32 	%r11687, %r11684, %r11685, 14;
	mov.b64 	%rd7822, {%r11687, %r11686};
	shf.r.wrap.b32 	%r11688, %r11685, %r11684, 18;
	shf.r.wrap.b32 	%r11689, %r11684, %r11685, 18;
	mov.b64 	%rd7823, {%r11689, %r11688};
	xor.b64  	%rd7824, %rd7823, %rd7822;
	shf.l.wrap.b32 	%r11690, %r11684, %r11685, 23;
	shf.l.wrap.b32 	%r11691, %r11685, %r11684, 23;
	mov.b64 	%rd7825, {%r11691, %r11690};
	xor.b64  	%rd7826, %rd7824, %rd7825;
	xor.b64  	%rd7827, %rd7785, %rd7760;
	and.b64  	%rd7828, %rd7810, %rd7827;
	xor.b64  	%rd7829, %rd7828, %rd7760;
	add.s64 	%rd7830, %rd7590, %rd7527;
	ld.const.u64 	%rd7831, [k_sha512+408];
	add.s64 	%rd7832, %rd7830, %rd7831;
	add.s64 	%rd7833, %rd7832, %rd7829;
	add.s64 	%rd7834, %rd7833, %rd7826;
	add.s64 	%rd7835, %rd7834, %rd7538;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11692,%dummy}, %rd7821;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11693}, %rd7821;
	}
	shf.r.wrap.b32 	%r11694, %r11693, %r11692, 28;
	shf.r.wrap.b32 	%r11695, %r11692, %r11693, 28;
	mov.b64 	%rd7836, {%r11695, %r11694};
	shf.l.wrap.b32 	%r11696, %r11692, %r11693, 30;
	shf.l.wrap.b32 	%r11697, %r11693, %r11692, 30;
	mov.b64 	%rd7837, {%r11697, %r11696};
	xor.b64  	%rd7838, %rd7837, %rd7836;
	shf.l.wrap.b32 	%r11698, %r11692, %r11693, 25;
	shf.l.wrap.b32 	%r11699, %r11693, %r11692, 25;
	mov.b64 	%rd7839, {%r11699, %r11698};
	xor.b64  	%rd7840, %rd7838, %rd7839;
	xor.b64  	%rd7841, %rd7821, %rd7771;
	xor.b64  	%rd7842, %rd7821, %rd7796;
	and.b64  	%rd7843, %rd7842, %rd7841;
	xor.b64  	%rd7844, %rd7843, %rd7821;
	add.s64 	%rd7845, %rd7834, %rd7844;
	add.s64 	%rd7846, %rd7845, %rd7840;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11700,%dummy}, %rd7835;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11701}, %rd7835;
	}
	shf.r.wrap.b32 	%r11702, %r11701, %r11700, 14;
	shf.r.wrap.b32 	%r11703, %r11700, %r11701, 14;
	mov.b64 	%rd7847, {%r11703, %r11702};
	shf.r.wrap.b32 	%r11704, %r11701, %r11700, 18;
	shf.r.wrap.b32 	%r11705, %r11700, %r11701, 18;
	mov.b64 	%rd7848, {%r11705, %r11704};
	xor.b64  	%rd7849, %rd7848, %rd7847;
	shf.l.wrap.b32 	%r11706, %r11700, %r11701, 23;
	shf.l.wrap.b32 	%r11707, %r11701, %r11700, 23;
	mov.b64 	%rd7850, {%r11707, %r11706};
	xor.b64  	%rd7851, %rd7849, %rd7850;
	xor.b64  	%rd7852, %rd7810, %rd7785;
	and.b64  	%rd7853, %rd7835, %rd7852;
	xor.b64  	%rd7854, %rd7853, %rd7785;
	add.s64 	%rd7855, %rd7760, %rd7603;
	ld.const.u64 	%rd7856, [k_sha512+416];
	add.s64 	%rd7857, %rd7855, %rd7856;
	add.s64 	%rd7858, %rd7857, %rd7854;
	add.s64 	%rd7859, %rd7858, %rd7851;
	add.s64 	%rd7860, %rd7859, %rd7771;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11708,%dummy}, %rd7846;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11709}, %rd7846;
	}
	shf.r.wrap.b32 	%r11710, %r11709, %r11708, 28;
	shf.r.wrap.b32 	%r11711, %r11708, %r11709, 28;
	mov.b64 	%rd7861, {%r11711, %r11710};
	shf.l.wrap.b32 	%r11712, %r11708, %r11709, 30;
	shf.l.wrap.b32 	%r11713, %r11709, %r11708, 30;
	mov.b64 	%rd7862, {%r11713, %r11712};
	xor.b64  	%rd7863, %rd7862, %rd7861;
	shf.l.wrap.b32 	%r11714, %r11708, %r11709, 25;
	shf.l.wrap.b32 	%r11715, %r11709, %r11708, 25;
	mov.b64 	%rd7864, {%r11715, %r11714};
	xor.b64  	%rd7865, %rd7863, %rd7864;
	xor.b64  	%rd7866, %rd7846, %rd7796;
	xor.b64  	%rd7867, %rd7846, %rd7821;
	and.b64  	%rd7868, %rd7867, %rd7866;
	xor.b64  	%rd7869, %rd7868, %rd7846;
	add.s64 	%rd7870, %rd7859, %rd7869;
	add.s64 	%rd7871, %rd7870, %rd7865;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11716,%dummy}, %rd7860;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11717}, %rd7860;
	}
	shf.r.wrap.b32 	%r11718, %r11717, %r11716, 14;
	shf.r.wrap.b32 	%r11719, %r11716, %r11717, 14;
	mov.b64 	%rd7872, {%r11719, %r11718};
	shf.r.wrap.b32 	%r11720, %r11717, %r11716, 18;
	shf.r.wrap.b32 	%r11721, %r11716, %r11717, 18;
	mov.b64 	%rd7873, {%r11721, %r11720};
	xor.b64  	%rd7874, %rd7873, %rd7872;
	shf.l.wrap.b32 	%r11722, %r11716, %r11717, 23;
	shf.l.wrap.b32 	%r11723, %r11717, %r11716, 23;
	mov.b64 	%rd7875, {%r11723, %r11722};
	xor.b64  	%rd7876, %rd7874, %rd7875;
	xor.b64  	%rd7877, %rd7835, %rd7810;
	and.b64  	%rd7878, %rd7860, %rd7877;
	xor.b64  	%rd7879, %rd7878, %rd7810;
	add.s64 	%rd7880, %rd7785, %rd7616;
	ld.const.u64 	%rd7881, [k_sha512+424];
	add.s64 	%rd7882, %rd7880, %rd7881;
	add.s64 	%rd7883, %rd7882, %rd7879;
	add.s64 	%rd7884, %rd7883, %rd7876;
	add.s64 	%rd7885, %rd7884, %rd7796;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11724,%dummy}, %rd7871;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11725}, %rd7871;
	}
	shf.r.wrap.b32 	%r11726, %r11725, %r11724, 28;
	shf.r.wrap.b32 	%r11727, %r11724, %r11725, 28;
	mov.b64 	%rd7886, {%r11727, %r11726};
	shf.l.wrap.b32 	%r11728, %r11724, %r11725, 30;
	shf.l.wrap.b32 	%r11729, %r11725, %r11724, 30;
	mov.b64 	%rd7887, {%r11729, %r11728};
	xor.b64  	%rd7888, %rd7887, %rd7886;
	shf.l.wrap.b32 	%r11730, %r11724, %r11725, 25;
	shf.l.wrap.b32 	%r11731, %r11725, %r11724, 25;
	mov.b64 	%rd7889, {%r11731, %r11730};
	xor.b64  	%rd7890, %rd7888, %rd7889;
	xor.b64  	%rd7891, %rd7871, %rd7821;
	xor.b64  	%rd7892, %rd7871, %rd7846;
	and.b64  	%rd7893, %rd7892, %rd7891;
	xor.b64  	%rd7894, %rd7893, %rd7871;
	add.s64 	%rd7895, %rd7884, %rd7894;
	add.s64 	%rd7896, %rd7895, %rd7890;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11732,%dummy}, %rd7885;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11733}, %rd7885;
	}
	shf.r.wrap.b32 	%r11734, %r11733, %r11732, 14;
	shf.r.wrap.b32 	%r11735, %r11732, %r11733, 14;
	mov.b64 	%rd7897, {%r11735, %r11734};
	shf.r.wrap.b32 	%r11736, %r11733, %r11732, 18;
	shf.r.wrap.b32 	%r11737, %r11732, %r11733, 18;
	mov.b64 	%rd7898, {%r11737, %r11736};
	xor.b64  	%rd7899, %rd7898, %rd7897;
	shf.l.wrap.b32 	%r11738, %r11732, %r11733, 23;
	shf.l.wrap.b32 	%r11739, %r11733, %r11732, 23;
	mov.b64 	%rd7900, {%r11739, %r11738};
	xor.b64  	%rd7901, %rd7899, %rd7900;
	xor.b64  	%rd7902, %rd7860, %rd7835;
	and.b64  	%rd7903, %rd7885, %rd7902;
	xor.b64  	%rd7904, %rd7903, %rd7835;
	add.s64 	%rd7905, %rd7810, %rd7629;
	ld.const.u64 	%rd7906, [k_sha512+432];
	add.s64 	%rd7907, %rd7905, %rd7906;
	add.s64 	%rd7908, %rd7907, %rd7904;
	add.s64 	%rd7909, %rd7908, %rd7901;
	add.s64 	%rd7910, %rd7909, %rd7821;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11740,%dummy}, %rd7896;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11741}, %rd7896;
	}
	shf.r.wrap.b32 	%r11742, %r11741, %r11740, 28;
	shf.r.wrap.b32 	%r11743, %r11740, %r11741, 28;
	mov.b64 	%rd7911, {%r11743, %r11742};
	shf.l.wrap.b32 	%r11744, %r11740, %r11741, 30;
	shf.l.wrap.b32 	%r11745, %r11741, %r11740, 30;
	mov.b64 	%rd7912, {%r11745, %r11744};
	xor.b64  	%rd7913, %rd7912, %rd7911;
	shf.l.wrap.b32 	%r11746, %r11740, %r11741, 25;
	shf.l.wrap.b32 	%r11747, %r11741, %r11740, 25;
	mov.b64 	%rd7914, {%r11747, %r11746};
	xor.b64  	%rd7915, %rd7913, %rd7914;
	xor.b64  	%rd7916, %rd7896, %rd7846;
	xor.b64  	%rd7917, %rd7896, %rd7871;
	and.b64  	%rd7918, %rd7917, %rd7916;
	xor.b64  	%rd7919, %rd7918, %rd7896;
	add.s64 	%rd7920, %rd7909, %rd7919;
	add.s64 	%rd7921, %rd7920, %rd7915;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11748,%dummy}, %rd7910;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11749}, %rd7910;
	}
	shf.r.wrap.b32 	%r11750, %r11749, %r11748, 14;
	shf.r.wrap.b32 	%r11751, %r11748, %r11749, 14;
	mov.b64 	%rd7922, {%r11751, %r11750};
	shf.r.wrap.b32 	%r11752, %r11749, %r11748, 18;
	shf.r.wrap.b32 	%r11753, %r11748, %r11749, 18;
	mov.b64 	%rd7923, {%r11753, %r11752};
	xor.b64  	%rd7924, %rd7923, %rd7922;
	shf.l.wrap.b32 	%r11754, %r11748, %r11749, 23;
	shf.l.wrap.b32 	%r11755, %r11749, %r11748, 23;
	mov.b64 	%rd7925, {%r11755, %r11754};
	xor.b64  	%rd7926, %rd7924, %rd7925;
	xor.b64  	%rd7927, %rd7885, %rd7860;
	and.b64  	%rd7928, %rd7910, %rd7927;
	xor.b64  	%rd7929, %rd7928, %rd7860;
	add.s64 	%rd7930, %rd7835, %rd7642;
	ld.const.u64 	%rd7931, [k_sha512+440];
	add.s64 	%rd7932, %rd7930, %rd7931;
	add.s64 	%rd7933, %rd7932, %rd7929;
	add.s64 	%rd7934, %rd7933, %rd7926;
	add.s64 	%rd7935, %rd7934, %rd7846;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11756,%dummy}, %rd7921;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11757}, %rd7921;
	}
	shf.r.wrap.b32 	%r11758, %r11757, %r11756, 28;
	shf.r.wrap.b32 	%r11759, %r11756, %r11757, 28;
	mov.b64 	%rd7936, {%r11759, %r11758};
	shf.l.wrap.b32 	%r11760, %r11756, %r11757, 30;
	shf.l.wrap.b32 	%r11761, %r11757, %r11756, 30;
	mov.b64 	%rd7937, {%r11761, %r11760};
	xor.b64  	%rd7938, %rd7937, %rd7936;
	shf.l.wrap.b32 	%r11762, %r11756, %r11757, 25;
	shf.l.wrap.b32 	%r11763, %r11757, %r11756, 25;
	mov.b64 	%rd7939, {%r11763, %r11762};
	xor.b64  	%rd7940, %rd7938, %rd7939;
	xor.b64  	%rd7941, %rd7921, %rd7871;
	xor.b64  	%rd7942, %rd7921, %rd7896;
	and.b64  	%rd7943, %rd7942, %rd7941;
	xor.b64  	%rd7944, %rd7943, %rd7921;
	add.s64 	%rd7945, %rd7934, %rd7944;
	add.s64 	%rd7946, %rd7945, %rd7940;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11764,%dummy}, %rd7935;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11765}, %rd7935;
	}
	shf.r.wrap.b32 	%r11766, %r11765, %r11764, 14;
	shf.r.wrap.b32 	%r11767, %r11764, %r11765, 14;
	mov.b64 	%rd7947, {%r11767, %r11766};
	shf.r.wrap.b32 	%r11768, %r11765, %r11764, 18;
	shf.r.wrap.b32 	%r11769, %r11764, %r11765, 18;
	mov.b64 	%rd7948, {%r11769, %r11768};
	xor.b64  	%rd7949, %rd7948, %rd7947;
	shf.l.wrap.b32 	%r11770, %r11764, %r11765, 23;
	shf.l.wrap.b32 	%r11771, %r11765, %r11764, 23;
	mov.b64 	%rd7950, {%r11771, %r11770};
	xor.b64  	%rd7951, %rd7949, %rd7950;
	xor.b64  	%rd7952, %rd7910, %rd7885;
	and.b64  	%rd7953, %rd7935, %rd7952;
	xor.b64  	%rd7954, %rd7953, %rd7885;
	add.s64 	%rd7955, %rd7860, %rd7655;
	ld.const.u64 	%rd7956, [k_sha512+448];
	add.s64 	%rd7957, %rd7955, %rd7956;
	add.s64 	%rd7958, %rd7957, %rd7954;
	add.s64 	%rd7959, %rd7958, %rd7951;
	add.s64 	%rd7960, %rd7959, %rd7871;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11772,%dummy}, %rd7946;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11773}, %rd7946;
	}
	shf.r.wrap.b32 	%r11774, %r11773, %r11772, 28;
	shf.r.wrap.b32 	%r11775, %r11772, %r11773, 28;
	mov.b64 	%rd7961, {%r11775, %r11774};
	shf.l.wrap.b32 	%r11776, %r11772, %r11773, 30;
	shf.l.wrap.b32 	%r11777, %r11773, %r11772, 30;
	mov.b64 	%rd7962, {%r11777, %r11776};
	xor.b64  	%rd7963, %rd7962, %rd7961;
	shf.l.wrap.b32 	%r11778, %r11772, %r11773, 25;
	shf.l.wrap.b32 	%r11779, %r11773, %r11772, 25;
	mov.b64 	%rd7964, {%r11779, %r11778};
	xor.b64  	%rd7965, %rd7963, %rd7964;
	xor.b64  	%rd7966, %rd7946, %rd7896;
	xor.b64  	%rd7967, %rd7946, %rd7921;
	and.b64  	%rd7968, %rd7967, %rd7966;
	xor.b64  	%rd7969, %rd7968, %rd7946;
	add.s64 	%rd7970, %rd7959, %rd7969;
	add.s64 	%rd7971, %rd7970, %rd7965;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11780,%dummy}, %rd7960;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11781}, %rd7960;
	}
	shf.r.wrap.b32 	%r11782, %r11781, %r11780, 14;
	shf.r.wrap.b32 	%r11783, %r11780, %r11781, 14;
	mov.b64 	%rd7972, {%r11783, %r11782};
	shf.r.wrap.b32 	%r11784, %r11781, %r11780, 18;
	shf.r.wrap.b32 	%r11785, %r11780, %r11781, 18;
	mov.b64 	%rd7973, {%r11785, %r11784};
	xor.b64  	%rd7974, %rd7973, %rd7972;
	shf.l.wrap.b32 	%r11786, %r11780, %r11781, 23;
	shf.l.wrap.b32 	%r11787, %r11781, %r11780, 23;
	mov.b64 	%rd7975, {%r11787, %r11786};
	xor.b64  	%rd7976, %rd7974, %rd7975;
	xor.b64  	%rd7977, %rd7935, %rd7910;
	and.b64  	%rd7978, %rd7960, %rd7977;
	xor.b64  	%rd7979, %rd7978, %rd7910;
	add.s64 	%rd7980, %rd7885, %rd7668;
	ld.const.u64 	%rd7981, [k_sha512+456];
	add.s64 	%rd7982, %rd7980, %rd7981;
	add.s64 	%rd7983, %rd7982, %rd7979;
	add.s64 	%rd7984, %rd7983, %rd7976;
	add.s64 	%rd7985, %rd7984, %rd7896;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11788,%dummy}, %rd7971;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11789}, %rd7971;
	}
	shf.r.wrap.b32 	%r11790, %r11789, %r11788, 28;
	shf.r.wrap.b32 	%r11791, %r11788, %r11789, 28;
	mov.b64 	%rd7986, {%r11791, %r11790};
	shf.l.wrap.b32 	%r11792, %r11788, %r11789, 30;
	shf.l.wrap.b32 	%r11793, %r11789, %r11788, 30;
	mov.b64 	%rd7987, {%r11793, %r11792};
	xor.b64  	%rd7988, %rd7987, %rd7986;
	shf.l.wrap.b32 	%r11794, %r11788, %r11789, 25;
	shf.l.wrap.b32 	%r11795, %r11789, %r11788, 25;
	mov.b64 	%rd7989, {%r11795, %r11794};
	xor.b64  	%rd7990, %rd7988, %rd7989;
	xor.b64  	%rd7991, %rd7971, %rd7921;
	xor.b64  	%rd7992, %rd7971, %rd7946;
	and.b64  	%rd7993, %rd7992, %rd7991;
	xor.b64  	%rd7994, %rd7993, %rd7971;
	add.s64 	%rd7995, %rd7984, %rd7994;
	add.s64 	%rd7996, %rd7995, %rd7990;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11796,%dummy}, %rd7985;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11797}, %rd7985;
	}
	shf.r.wrap.b32 	%r11798, %r11797, %r11796, 14;
	shf.r.wrap.b32 	%r11799, %r11796, %r11797, 14;
	mov.b64 	%rd7997, {%r11799, %r11798};
	shf.r.wrap.b32 	%r11800, %r11797, %r11796, 18;
	shf.r.wrap.b32 	%r11801, %r11796, %r11797, 18;
	mov.b64 	%rd7998, {%r11801, %r11800};
	xor.b64  	%rd7999, %rd7998, %rd7997;
	shf.l.wrap.b32 	%r11802, %r11796, %r11797, 23;
	shf.l.wrap.b32 	%r11803, %r11797, %r11796, 23;
	mov.b64 	%rd8000, {%r11803, %r11802};
	xor.b64  	%rd8001, %rd7999, %rd8000;
	xor.b64  	%rd8002, %rd7960, %rd7935;
	and.b64  	%rd8003, %rd7985, %rd8002;
	xor.b64  	%rd8004, %rd8003, %rd7935;
	add.s64 	%rd8005, %rd7910, %rd7681;
	ld.const.u64 	%rd8006, [k_sha512+464];
	add.s64 	%rd8007, %rd8005, %rd8006;
	add.s64 	%rd8008, %rd8007, %rd8004;
	add.s64 	%rd8009, %rd8008, %rd8001;
	add.s64 	%rd8010, %rd8009, %rd7921;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11804,%dummy}, %rd7996;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11805}, %rd7996;
	}
	shf.r.wrap.b32 	%r11806, %r11805, %r11804, 28;
	shf.r.wrap.b32 	%r11807, %r11804, %r11805, 28;
	mov.b64 	%rd8011, {%r11807, %r11806};
	shf.l.wrap.b32 	%r11808, %r11804, %r11805, 30;
	shf.l.wrap.b32 	%r11809, %r11805, %r11804, 30;
	mov.b64 	%rd8012, {%r11809, %r11808};
	xor.b64  	%rd8013, %rd8012, %rd8011;
	shf.l.wrap.b32 	%r11810, %r11804, %r11805, 25;
	shf.l.wrap.b32 	%r11811, %r11805, %r11804, 25;
	mov.b64 	%rd8014, {%r11811, %r11810};
	xor.b64  	%rd8015, %rd8013, %rd8014;
	xor.b64  	%rd8016, %rd7996, %rd7946;
	xor.b64  	%rd8017, %rd7996, %rd7971;
	and.b64  	%rd8018, %rd8017, %rd8016;
	xor.b64  	%rd8019, %rd8018, %rd7996;
	add.s64 	%rd8020, %rd8009, %rd8019;
	add.s64 	%rd8021, %rd8020, %rd8015;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11812,%dummy}, %rd8010;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11813}, %rd8010;
	}
	shf.r.wrap.b32 	%r11814, %r11813, %r11812, 14;
	shf.r.wrap.b32 	%r11815, %r11812, %r11813, 14;
	mov.b64 	%rd8022, {%r11815, %r11814};
	shf.r.wrap.b32 	%r11816, %r11813, %r11812, 18;
	shf.r.wrap.b32 	%r11817, %r11812, %r11813, 18;
	mov.b64 	%rd8023, {%r11817, %r11816};
	xor.b64  	%rd8024, %rd8023, %rd8022;
	shf.l.wrap.b32 	%r11818, %r11812, %r11813, 23;
	shf.l.wrap.b32 	%r11819, %r11813, %r11812, 23;
	mov.b64 	%rd8025, {%r11819, %r11818};
	xor.b64  	%rd8026, %rd8024, %rd8025;
	xor.b64  	%rd8027, %rd7985, %rd7960;
	and.b64  	%rd8028, %rd8010, %rd8027;
	xor.b64  	%rd8029, %rd8028, %rd7960;
	add.s64 	%rd8030, %rd7935, %rd7694;
	ld.const.u64 	%rd8031, [k_sha512+472];
	add.s64 	%rd8032, %rd8030, %rd8031;
	add.s64 	%rd8033, %rd8032, %rd8029;
	add.s64 	%rd8034, %rd8033, %rd8026;
	add.s64 	%rd8035, %rd8034, %rd7946;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11820,%dummy}, %rd8021;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11821}, %rd8021;
	}
	shf.r.wrap.b32 	%r11822, %r11821, %r11820, 28;
	shf.r.wrap.b32 	%r11823, %r11820, %r11821, 28;
	mov.b64 	%rd8036, {%r11823, %r11822};
	shf.l.wrap.b32 	%r11824, %r11820, %r11821, 30;
	shf.l.wrap.b32 	%r11825, %r11821, %r11820, 30;
	mov.b64 	%rd8037, {%r11825, %r11824};
	xor.b64  	%rd8038, %rd8037, %rd8036;
	shf.l.wrap.b32 	%r11826, %r11820, %r11821, 25;
	shf.l.wrap.b32 	%r11827, %r11821, %r11820, 25;
	mov.b64 	%rd8039, {%r11827, %r11826};
	xor.b64  	%rd8040, %rd8038, %rd8039;
	xor.b64  	%rd8041, %rd8021, %rd7971;
	xor.b64  	%rd8042, %rd8021, %rd7996;
	and.b64  	%rd8043, %rd8042, %rd8041;
	xor.b64  	%rd8044, %rd8043, %rd8021;
	add.s64 	%rd8045, %rd8034, %rd8044;
	add.s64 	%rd8046, %rd8045, %rd8040;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11828,%dummy}, %rd8035;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11829}, %rd8035;
	}
	shf.r.wrap.b32 	%r11830, %r11829, %r11828, 14;
	shf.r.wrap.b32 	%r11831, %r11828, %r11829, 14;
	mov.b64 	%rd8047, {%r11831, %r11830};
	shf.r.wrap.b32 	%r11832, %r11829, %r11828, 18;
	shf.r.wrap.b32 	%r11833, %r11828, %r11829, 18;
	mov.b64 	%rd8048, {%r11833, %r11832};
	xor.b64  	%rd8049, %rd8048, %rd8047;
	shf.l.wrap.b32 	%r11834, %r11828, %r11829, 23;
	shf.l.wrap.b32 	%r11835, %r11829, %r11828, 23;
	mov.b64 	%rd8050, {%r11835, %r11834};
	xor.b64  	%rd8051, %rd8049, %rd8050;
	xor.b64  	%rd8052, %rd8010, %rd7985;
	and.b64  	%rd8053, %rd8035, %rd8052;
	xor.b64  	%rd8054, %rd8053, %rd7985;
	add.s64 	%rd8055, %rd7960, %rd7707;
	ld.const.u64 	%rd8056, [k_sha512+480];
	add.s64 	%rd8057, %rd8055, %rd8056;
	add.s64 	%rd8058, %rd8057, %rd8054;
	add.s64 	%rd8059, %rd8058, %rd8051;
	add.s64 	%rd8060, %rd8059, %rd7971;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11836,%dummy}, %rd8046;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11837}, %rd8046;
	}
	shf.r.wrap.b32 	%r11838, %r11837, %r11836, 28;
	shf.r.wrap.b32 	%r11839, %r11836, %r11837, 28;
	mov.b64 	%rd8061, {%r11839, %r11838};
	shf.l.wrap.b32 	%r11840, %r11836, %r11837, 30;
	shf.l.wrap.b32 	%r11841, %r11837, %r11836, 30;
	mov.b64 	%rd8062, {%r11841, %r11840};
	xor.b64  	%rd8063, %rd8062, %rd8061;
	shf.l.wrap.b32 	%r11842, %r11836, %r11837, 25;
	shf.l.wrap.b32 	%r11843, %r11837, %r11836, 25;
	mov.b64 	%rd8064, {%r11843, %r11842};
	xor.b64  	%rd8065, %rd8063, %rd8064;
	xor.b64  	%rd8066, %rd8046, %rd7996;
	xor.b64  	%rd8067, %rd8046, %rd8021;
	and.b64  	%rd8068, %rd8067, %rd8066;
	xor.b64  	%rd8069, %rd8068, %rd8046;
	add.s64 	%rd8070, %rd8059, %rd8069;
	add.s64 	%rd8071, %rd8070, %rd8065;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11844,%dummy}, %rd8060;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11845}, %rd8060;
	}
	shf.r.wrap.b32 	%r11846, %r11845, %r11844, 14;
	shf.r.wrap.b32 	%r11847, %r11844, %r11845, 14;
	mov.b64 	%rd8072, {%r11847, %r11846};
	shf.r.wrap.b32 	%r11848, %r11845, %r11844, 18;
	shf.r.wrap.b32 	%r11849, %r11844, %r11845, 18;
	mov.b64 	%rd8073, {%r11849, %r11848};
	xor.b64  	%rd8074, %rd8073, %rd8072;
	shf.l.wrap.b32 	%r11850, %r11844, %r11845, 23;
	shf.l.wrap.b32 	%r11851, %r11845, %r11844, 23;
	mov.b64 	%rd8075, {%r11851, %r11850};
	xor.b64  	%rd8076, %rd8074, %rd8075;
	xor.b64  	%rd8077, %rd8035, %rd8010;
	and.b64  	%rd8078, %rd8060, %rd8077;
	xor.b64  	%rd8079, %rd8078, %rd8010;
	add.s64 	%rd8080, %rd7985, %rd7720;
	ld.const.u64 	%rd8081, [k_sha512+488];
	add.s64 	%rd8082, %rd8080, %rd8081;
	add.s64 	%rd8083, %rd8082, %rd8079;
	add.s64 	%rd8084, %rd8083, %rd8076;
	add.s64 	%rd8085, %rd8084, %rd7996;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11852,%dummy}, %rd8071;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11853}, %rd8071;
	}
	shf.r.wrap.b32 	%r11854, %r11853, %r11852, 28;
	shf.r.wrap.b32 	%r11855, %r11852, %r11853, 28;
	mov.b64 	%rd8086, {%r11855, %r11854};
	shf.l.wrap.b32 	%r11856, %r11852, %r11853, 30;
	shf.l.wrap.b32 	%r11857, %r11853, %r11852, 30;
	mov.b64 	%rd8087, {%r11857, %r11856};
	xor.b64  	%rd8088, %rd8087, %rd8086;
	shf.l.wrap.b32 	%r11858, %r11852, %r11853, 25;
	shf.l.wrap.b32 	%r11859, %r11853, %r11852, 25;
	mov.b64 	%rd8089, {%r11859, %r11858};
	xor.b64  	%rd8090, %rd8088, %rd8089;
	xor.b64  	%rd8091, %rd8071, %rd8021;
	xor.b64  	%rd8092, %rd8071, %rd8046;
	and.b64  	%rd8093, %rd8092, %rd8091;
	xor.b64  	%rd8094, %rd8093, %rd8071;
	add.s64 	%rd8095, %rd8084, %rd8094;
	add.s64 	%rd8096, %rd8095, %rd8090;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11860,%dummy}, %rd8085;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11861}, %rd8085;
	}
	shf.r.wrap.b32 	%r11862, %r11861, %r11860, 14;
	shf.r.wrap.b32 	%r11863, %r11860, %r11861, 14;
	mov.b64 	%rd8097, {%r11863, %r11862};
	shf.r.wrap.b32 	%r11864, %r11861, %r11860, 18;
	shf.r.wrap.b32 	%r11865, %r11860, %r11861, 18;
	mov.b64 	%rd8098, {%r11865, %r11864};
	xor.b64  	%rd8099, %rd8098, %rd8097;
	shf.l.wrap.b32 	%r11866, %r11860, %r11861, 23;
	shf.l.wrap.b32 	%r11867, %r11861, %r11860, 23;
	mov.b64 	%rd8100, {%r11867, %r11866};
	xor.b64  	%rd8101, %rd8099, %rd8100;
	xor.b64  	%rd8102, %rd8060, %rd8035;
	and.b64  	%rd8103, %rd8085, %rd8102;
	xor.b64  	%rd8104, %rd8103, %rd8035;
	add.s64 	%rd8105, %rd8010, %rd7733;
	ld.const.u64 	%rd8106, [k_sha512+496];
	add.s64 	%rd8107, %rd8105, %rd8106;
	add.s64 	%rd8108, %rd8107, %rd8104;
	add.s64 	%rd8109, %rd8108, %rd8101;
	add.s64 	%rd8110, %rd8109, %rd8021;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11868,%dummy}, %rd8096;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11869}, %rd8096;
	}
	shf.r.wrap.b32 	%r11870, %r11869, %r11868, 28;
	shf.r.wrap.b32 	%r11871, %r11868, %r11869, 28;
	mov.b64 	%rd8111, {%r11871, %r11870};
	shf.l.wrap.b32 	%r11872, %r11868, %r11869, 30;
	shf.l.wrap.b32 	%r11873, %r11869, %r11868, 30;
	mov.b64 	%rd8112, {%r11873, %r11872};
	xor.b64  	%rd8113, %rd8112, %rd8111;
	shf.l.wrap.b32 	%r11874, %r11868, %r11869, 25;
	shf.l.wrap.b32 	%r11875, %r11869, %r11868, 25;
	mov.b64 	%rd8114, {%r11875, %r11874};
	xor.b64  	%rd8115, %rd8113, %rd8114;
	xor.b64  	%rd8116, %rd8096, %rd8046;
	xor.b64  	%rd8117, %rd8096, %rd8071;
	and.b64  	%rd8118, %rd8117, %rd8116;
	xor.b64  	%rd8119, %rd8118, %rd8096;
	add.s64 	%rd8120, %rd8109, %rd8119;
	add.s64 	%rd8121, %rd8120, %rd8115;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11876,%dummy}, %rd8110;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11877}, %rd8110;
	}
	shf.r.wrap.b32 	%r11878, %r11877, %r11876, 14;
	shf.r.wrap.b32 	%r11879, %r11876, %r11877, 14;
	mov.b64 	%rd8122, {%r11879, %r11878};
	shf.r.wrap.b32 	%r11880, %r11877, %r11876, 18;
	shf.r.wrap.b32 	%r11881, %r11876, %r11877, 18;
	mov.b64 	%rd8123, {%r11881, %r11880};
	xor.b64  	%rd8124, %rd8123, %rd8122;
	shf.l.wrap.b32 	%r11882, %r11876, %r11877, 23;
	shf.l.wrap.b32 	%r11883, %r11877, %r11876, 23;
	mov.b64 	%rd8125, {%r11883, %r11882};
	xor.b64  	%rd8126, %rd8124, %rd8125;
	xor.b64  	%rd8127, %rd8085, %rd8060;
	and.b64  	%rd8128, %rd8110, %rd8127;
	xor.b64  	%rd8129, %rd8128, %rd8060;
	add.s64 	%rd8130, %rd8035, %rd7746;
	ld.const.u64 	%rd8131, [k_sha512+504];
	add.s64 	%rd8132, %rd8130, %rd8131;
	add.s64 	%rd8133, %rd8132, %rd8129;
	add.s64 	%rd8134, %rd8133, %rd8126;
	add.s64 	%rd8135, %rd8134, %rd8046;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11884,%dummy}, %rd8121;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11885}, %rd8121;
	}
	shf.r.wrap.b32 	%r11886, %r11885, %r11884, 28;
	shf.r.wrap.b32 	%r11887, %r11884, %r11885, 28;
	mov.b64 	%rd8136, {%r11887, %r11886};
	shf.l.wrap.b32 	%r11888, %r11884, %r11885, 30;
	shf.l.wrap.b32 	%r11889, %r11885, %r11884, 30;
	mov.b64 	%rd8137, {%r11889, %r11888};
	xor.b64  	%rd8138, %rd8137, %rd8136;
	shf.l.wrap.b32 	%r11890, %r11884, %r11885, 25;
	shf.l.wrap.b32 	%r11891, %r11885, %r11884, 25;
	mov.b64 	%rd8139, {%r11891, %r11890};
	xor.b64  	%rd8140, %rd8138, %rd8139;
	xor.b64  	%rd8141, %rd8121, %rd8071;
	xor.b64  	%rd8142, %rd8121, %rd8096;
	and.b64  	%rd8143, %rd8142, %rd8141;
	xor.b64  	%rd8144, %rd8143, %rd8121;
	add.s64 	%rd8145, %rd8134, %rd8144;
	add.s64 	%rd8146, %rd8145, %rd8140;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11892,%dummy}, %rd7733;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11893}, %rd7733;
	}
	shf.r.wrap.b32 	%r11894, %r11893, %r11892, 19;
	shf.r.wrap.b32 	%r11895, %r11892, %r11893, 19;
	mov.b64 	%rd8147, {%r11895, %r11894};
	shf.l.wrap.b32 	%r11896, %r11892, %r11893, 3;
	shf.l.wrap.b32 	%r11897, %r11893, %r11892, 3;
	mov.b64 	%rd8148, {%r11897, %r11896};
	shr.u64 	%rd8149, %rd7733, 6;
	xor.b64  	%rd8150, %rd8147, %rd8149;
	xor.b64  	%rd8151, %rd8150, %rd8148;
	shf.r.wrap.b32 	%r11898, %r11507, %r11506, 1;
	shf.r.wrap.b32 	%r11899, %r11506, %r11507, 1;
	mov.b64 	%rd8152, {%r11899, %r11898};
	shf.r.wrap.b32 	%r11900, %r11507, %r11506, 8;
	shf.r.wrap.b32 	%r11901, %r11506, %r11507, 8;
	mov.b64 	%rd8153, {%r11901, %r11900};
	shr.u64 	%rd8154, %rd7564, 7;
	xor.b64  	%rd8155, %rd8152, %rd8154;
	xor.b64  	%rd8156, %rd8155, %rd8153;
	add.s64 	%rd8157, %rd7668, %rd7551;
	add.s64 	%rd8158, %rd8157, %rd8151;
	add.s64 	%rd8159, %rd8158, %rd8156;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11902,%dummy}, %rd7746;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11903}, %rd7746;
	}
	shf.r.wrap.b32 	%r11904, %r11903, %r11902, 19;
	shf.r.wrap.b32 	%r11905, %r11902, %r11903, 19;
	mov.b64 	%rd8160, {%r11905, %r11904};
	shf.l.wrap.b32 	%r11906, %r11902, %r11903, 3;
	shf.l.wrap.b32 	%r11907, %r11903, %r11902, 3;
	mov.b64 	%rd8161, {%r11907, %r11906};
	shr.u64 	%rd8162, %rd7746, 6;
	xor.b64  	%rd8163, %rd8160, %rd8162;
	xor.b64  	%rd8164, %rd8163, %rd8161;
	shf.r.wrap.b32 	%r11908, %r11517, %r11516, 1;
	shf.r.wrap.b32 	%r11909, %r11516, %r11517, 1;
	mov.b64 	%rd8165, {%r11909, %r11908};
	shf.r.wrap.b32 	%r11910, %r11517, %r11516, 8;
	shf.r.wrap.b32 	%r11911, %r11516, %r11517, 8;
	mov.b64 	%rd8166, {%r11911, %r11910};
	shr.u64 	%rd8167, %rd7577, 7;
	xor.b64  	%rd8168, %rd8165, %rd8167;
	xor.b64  	%rd8169, %rd8168, %rd8166;
	add.s64 	%rd8170, %rd7681, %rd7564;
	add.s64 	%rd8171, %rd8170, %rd8164;
	add.s64 	%rd8172, %rd8171, %rd8169;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11912,%dummy}, %rd8159;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11913}, %rd8159;
	}
	shf.r.wrap.b32 	%r11914, %r11913, %r11912, 19;
	shf.r.wrap.b32 	%r11915, %r11912, %r11913, 19;
	mov.b64 	%rd8173, {%r11915, %r11914};
	shf.l.wrap.b32 	%r11916, %r11912, %r11913, 3;
	shf.l.wrap.b32 	%r11917, %r11913, %r11912, 3;
	mov.b64 	%rd8174, {%r11917, %r11916};
	shr.u64 	%rd8175, %rd8159, 6;
	xor.b64  	%rd8176, %rd8173, %rd8175;
	xor.b64  	%rd8177, %rd8176, %rd8174;
	shf.r.wrap.b32 	%r11918, %r11527, %r11526, 1;
	shf.r.wrap.b32 	%r11919, %r11526, %r11527, 1;
	mov.b64 	%rd8178, {%r11919, %r11918};
	shf.r.wrap.b32 	%r11920, %r11527, %r11526, 8;
	shf.r.wrap.b32 	%r11921, %r11526, %r11527, 8;
	mov.b64 	%rd8179, {%r11921, %r11920};
	shr.u64 	%rd8180, %rd7590, 7;
	xor.b64  	%rd8181, %rd8178, %rd8180;
	xor.b64  	%rd8182, %rd8181, %rd8179;
	add.s64 	%rd8183, %rd7694, %rd7577;
	add.s64 	%rd8184, %rd8183, %rd8177;
	add.s64 	%rd8185, %rd8184, %rd8182;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11922,%dummy}, %rd8172;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11923}, %rd8172;
	}
	shf.r.wrap.b32 	%r11924, %r11923, %r11922, 19;
	shf.r.wrap.b32 	%r11925, %r11922, %r11923, 19;
	mov.b64 	%rd8186, {%r11925, %r11924};
	shf.l.wrap.b32 	%r11926, %r11922, %r11923, 3;
	shf.l.wrap.b32 	%r11927, %r11923, %r11922, 3;
	mov.b64 	%rd8187, {%r11927, %r11926};
	shr.u64 	%rd8188, %rd8172, 6;
	xor.b64  	%rd8189, %rd8186, %rd8188;
	xor.b64  	%rd8190, %rd8189, %rd8187;
	shf.r.wrap.b32 	%r11928, %r11537, %r11536, 1;
	shf.r.wrap.b32 	%r11929, %r11536, %r11537, 1;
	mov.b64 	%rd8191, {%r11929, %r11928};
	shf.r.wrap.b32 	%r11930, %r11537, %r11536, 8;
	shf.r.wrap.b32 	%r11931, %r11536, %r11537, 8;
	mov.b64 	%rd8192, {%r11931, %r11930};
	shr.u64 	%rd8193, %rd7603, 7;
	xor.b64  	%rd8194, %rd8191, %rd8193;
	xor.b64  	%rd8195, %rd8194, %rd8192;
	add.s64 	%rd8196, %rd7707, %rd7590;
	add.s64 	%rd8197, %rd8196, %rd8190;
	add.s64 	%rd8198, %rd8197, %rd8195;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11932,%dummy}, %rd8185;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11933}, %rd8185;
	}
	shf.r.wrap.b32 	%r11934, %r11933, %r11932, 19;
	shf.r.wrap.b32 	%r11935, %r11932, %r11933, 19;
	mov.b64 	%rd8199, {%r11935, %r11934};
	shf.l.wrap.b32 	%r11936, %r11932, %r11933, 3;
	shf.l.wrap.b32 	%r11937, %r11933, %r11932, 3;
	mov.b64 	%rd8200, {%r11937, %r11936};
	shr.u64 	%rd8201, %rd8185, 6;
	xor.b64  	%rd8202, %rd8199, %rd8201;
	xor.b64  	%rd8203, %rd8202, %rd8200;
	shf.r.wrap.b32 	%r11938, %r11547, %r11546, 1;
	shf.r.wrap.b32 	%r11939, %r11546, %r11547, 1;
	mov.b64 	%rd8204, {%r11939, %r11938};
	shf.r.wrap.b32 	%r11940, %r11547, %r11546, 8;
	shf.r.wrap.b32 	%r11941, %r11546, %r11547, 8;
	mov.b64 	%rd8205, {%r11941, %r11940};
	shr.u64 	%rd8206, %rd7616, 7;
	xor.b64  	%rd8207, %rd8204, %rd8206;
	xor.b64  	%rd8208, %rd8207, %rd8205;
	add.s64 	%rd8209, %rd7720, %rd7603;
	add.s64 	%rd8210, %rd8209, %rd8203;
	add.s64 	%rd8211, %rd8210, %rd8208;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11942,%dummy}, %rd8198;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11943}, %rd8198;
	}
	shf.r.wrap.b32 	%r11944, %r11943, %r11942, 19;
	shf.r.wrap.b32 	%r11945, %r11942, %r11943, 19;
	mov.b64 	%rd8212, {%r11945, %r11944};
	shf.l.wrap.b32 	%r11946, %r11942, %r11943, 3;
	shf.l.wrap.b32 	%r11947, %r11943, %r11942, 3;
	mov.b64 	%rd8213, {%r11947, %r11946};
	shr.u64 	%rd8214, %rd8198, 6;
	xor.b64  	%rd8215, %rd8212, %rd8214;
	xor.b64  	%rd8216, %rd8215, %rd8213;
	shf.r.wrap.b32 	%r11948, %r11557, %r11556, 1;
	shf.r.wrap.b32 	%r11949, %r11556, %r11557, 1;
	mov.b64 	%rd8217, {%r11949, %r11948};
	shf.r.wrap.b32 	%r11950, %r11557, %r11556, 8;
	shf.r.wrap.b32 	%r11951, %r11556, %r11557, 8;
	mov.b64 	%rd8218, {%r11951, %r11950};
	shr.u64 	%rd8219, %rd7629, 7;
	xor.b64  	%rd8220, %rd8217, %rd8219;
	xor.b64  	%rd8221, %rd8220, %rd8218;
	add.s64 	%rd8222, %rd7733, %rd7616;
	add.s64 	%rd8223, %rd8222, %rd8216;
	add.s64 	%rd8224, %rd8223, %rd8221;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11952,%dummy}, %rd8211;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11953}, %rd8211;
	}
	shf.r.wrap.b32 	%r11954, %r11953, %r11952, 19;
	shf.r.wrap.b32 	%r11955, %r11952, %r11953, 19;
	mov.b64 	%rd8225, {%r11955, %r11954};
	shf.l.wrap.b32 	%r11956, %r11952, %r11953, 3;
	shf.l.wrap.b32 	%r11957, %r11953, %r11952, 3;
	mov.b64 	%rd8226, {%r11957, %r11956};
	shr.u64 	%rd8227, %rd8211, 6;
	xor.b64  	%rd8228, %rd8225, %rd8227;
	xor.b64  	%rd8229, %rd8228, %rd8226;
	shf.r.wrap.b32 	%r11958, %r11567, %r11566, 1;
	shf.r.wrap.b32 	%r11959, %r11566, %r11567, 1;
	mov.b64 	%rd8230, {%r11959, %r11958};
	shf.r.wrap.b32 	%r11960, %r11567, %r11566, 8;
	shf.r.wrap.b32 	%r11961, %r11566, %r11567, 8;
	mov.b64 	%rd8231, {%r11961, %r11960};
	shr.u64 	%rd8232, %rd7642, 7;
	xor.b64  	%rd8233, %rd8230, %rd8232;
	xor.b64  	%rd8234, %rd8233, %rd8231;
	add.s64 	%rd8235, %rd7746, %rd7629;
	add.s64 	%rd8236, %rd8235, %rd8229;
	add.s64 	%rd8237, %rd8236, %rd8234;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11962,%dummy}, %rd8224;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11963}, %rd8224;
	}
	shf.r.wrap.b32 	%r11964, %r11963, %r11962, 19;
	shf.r.wrap.b32 	%r11965, %r11962, %r11963, 19;
	mov.b64 	%rd8238, {%r11965, %r11964};
	shf.l.wrap.b32 	%r11966, %r11962, %r11963, 3;
	shf.l.wrap.b32 	%r11967, %r11963, %r11962, 3;
	mov.b64 	%rd8239, {%r11967, %r11966};
	shr.u64 	%rd8240, %rd8224, 6;
	xor.b64  	%rd8241, %rd8238, %rd8240;
	xor.b64  	%rd8242, %rd8241, %rd8239;
	shf.r.wrap.b32 	%r11968, %r11577, %r11576, 1;
	shf.r.wrap.b32 	%r11969, %r11576, %r11577, 1;
	mov.b64 	%rd8243, {%r11969, %r11968};
	shf.r.wrap.b32 	%r11970, %r11577, %r11576, 8;
	shf.r.wrap.b32 	%r11971, %r11576, %r11577, 8;
	mov.b64 	%rd8244, {%r11971, %r11970};
	shr.u64 	%rd8245, %rd7655, 7;
	xor.b64  	%rd8246, %rd8243, %rd8245;
	xor.b64  	%rd8247, %rd8246, %rd8244;
	add.s64 	%rd8248, %rd8159, %rd7642;
	add.s64 	%rd8249, %rd8248, %rd8242;
	add.s64 	%rd8250, %rd8249, %rd8247;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11972,%dummy}, %rd8237;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11973}, %rd8237;
	}
	shf.r.wrap.b32 	%r11974, %r11973, %r11972, 19;
	shf.r.wrap.b32 	%r11975, %r11972, %r11973, 19;
	mov.b64 	%rd8251, {%r11975, %r11974};
	shf.l.wrap.b32 	%r11976, %r11972, %r11973, 3;
	shf.l.wrap.b32 	%r11977, %r11973, %r11972, 3;
	mov.b64 	%rd8252, {%r11977, %r11976};
	shr.u64 	%rd8253, %rd8237, 6;
	xor.b64  	%rd8254, %rd8251, %rd8253;
	xor.b64  	%rd8255, %rd8254, %rd8252;
	shf.r.wrap.b32 	%r11978, %r11587, %r11586, 1;
	shf.r.wrap.b32 	%r11979, %r11586, %r11587, 1;
	mov.b64 	%rd8256, {%r11979, %r11978};
	shf.r.wrap.b32 	%r11980, %r11587, %r11586, 8;
	shf.r.wrap.b32 	%r11981, %r11586, %r11587, 8;
	mov.b64 	%rd8257, {%r11981, %r11980};
	shr.u64 	%rd8258, %rd7668, 7;
	xor.b64  	%rd8259, %rd8256, %rd8258;
	xor.b64  	%rd8260, %rd8259, %rd8257;
	add.s64 	%rd8261, %rd8172, %rd7655;
	add.s64 	%rd8262, %rd8261, %rd8255;
	add.s64 	%rd8263, %rd8262, %rd8260;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11982,%dummy}, %rd8250;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11983}, %rd8250;
	}
	shf.r.wrap.b32 	%r11984, %r11983, %r11982, 19;
	shf.r.wrap.b32 	%r11985, %r11982, %r11983, 19;
	mov.b64 	%rd8264, {%r11985, %r11984};
	shf.l.wrap.b32 	%r11986, %r11982, %r11983, 3;
	shf.l.wrap.b32 	%r11987, %r11983, %r11982, 3;
	mov.b64 	%rd8265, {%r11987, %r11986};
	shr.u64 	%rd8266, %rd8250, 6;
	xor.b64  	%rd8267, %rd8264, %rd8266;
	xor.b64  	%rd8268, %rd8267, %rd8265;
	shf.r.wrap.b32 	%r11988, %r11597, %r11596, 1;
	shf.r.wrap.b32 	%r11989, %r11596, %r11597, 1;
	mov.b64 	%rd8269, {%r11989, %r11988};
	shf.r.wrap.b32 	%r11990, %r11597, %r11596, 8;
	shf.r.wrap.b32 	%r11991, %r11596, %r11597, 8;
	mov.b64 	%rd8270, {%r11991, %r11990};
	shr.u64 	%rd8271, %rd7681, 7;
	xor.b64  	%rd8272, %rd8269, %rd8271;
	xor.b64  	%rd8273, %rd8272, %rd8270;
	add.s64 	%rd8274, %rd8185, %rd7668;
	add.s64 	%rd8275, %rd8274, %rd8268;
	add.s64 	%rd8276, %rd8275, %rd8273;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11992,%dummy}, %rd8263;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11993}, %rd8263;
	}
	shf.r.wrap.b32 	%r11994, %r11993, %r11992, 19;
	shf.r.wrap.b32 	%r11995, %r11992, %r11993, 19;
	mov.b64 	%rd8277, {%r11995, %r11994};
	shf.l.wrap.b32 	%r11996, %r11992, %r11993, 3;
	shf.l.wrap.b32 	%r11997, %r11993, %r11992, 3;
	mov.b64 	%rd8278, {%r11997, %r11996};
	shr.u64 	%rd8279, %rd8263, 6;
	xor.b64  	%rd8280, %rd8277, %rd8279;
	xor.b64  	%rd8281, %rd8280, %rd8278;
	shf.r.wrap.b32 	%r11998, %r11607, %r11606, 1;
	shf.r.wrap.b32 	%r11999, %r11606, %r11607, 1;
	mov.b64 	%rd8282, {%r11999, %r11998};
	shf.r.wrap.b32 	%r12000, %r11607, %r11606, 8;
	shf.r.wrap.b32 	%r12001, %r11606, %r11607, 8;
	mov.b64 	%rd8283, {%r12001, %r12000};
	shr.u64 	%rd8284, %rd7694, 7;
	xor.b64  	%rd8285, %rd8282, %rd8284;
	xor.b64  	%rd8286, %rd8285, %rd8283;
	add.s64 	%rd8287, %rd8198, %rd7681;
	add.s64 	%rd8288, %rd8287, %rd8281;
	add.s64 	%rd8289, %rd8288, %rd8286;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12002,%dummy}, %rd8276;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12003}, %rd8276;
	}
	shf.r.wrap.b32 	%r12004, %r12003, %r12002, 19;
	shf.r.wrap.b32 	%r12005, %r12002, %r12003, 19;
	mov.b64 	%rd8290, {%r12005, %r12004};
	shf.l.wrap.b32 	%r12006, %r12002, %r12003, 3;
	shf.l.wrap.b32 	%r12007, %r12003, %r12002, 3;
	mov.b64 	%rd8291, {%r12007, %r12006};
	shr.u64 	%rd8292, %rd8276, 6;
	xor.b64  	%rd8293, %rd8290, %rd8292;
	xor.b64  	%rd8294, %rd8293, %rd8291;
	shf.r.wrap.b32 	%r12008, %r11617, %r11616, 1;
	shf.r.wrap.b32 	%r12009, %r11616, %r11617, 1;
	mov.b64 	%rd8295, {%r12009, %r12008};
	shf.r.wrap.b32 	%r12010, %r11617, %r11616, 8;
	shf.r.wrap.b32 	%r12011, %r11616, %r11617, 8;
	mov.b64 	%rd8296, {%r12011, %r12010};
	shr.u64 	%rd8297, %rd7707, 7;
	xor.b64  	%rd8298, %rd8295, %rd8297;
	xor.b64  	%rd8299, %rd8298, %rd8296;
	add.s64 	%rd8300, %rd8211, %rd7694;
	add.s64 	%rd8301, %rd8300, %rd8294;
	add.s64 	%rd8302, %rd8301, %rd8299;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12012,%dummy}, %rd8289;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12013}, %rd8289;
	}
	shf.r.wrap.b32 	%r12014, %r12013, %r12012, 19;
	shf.r.wrap.b32 	%r12015, %r12012, %r12013, 19;
	mov.b64 	%rd8303, {%r12015, %r12014};
	shf.l.wrap.b32 	%r12016, %r12012, %r12013, 3;
	shf.l.wrap.b32 	%r12017, %r12013, %r12012, 3;
	mov.b64 	%rd8304, {%r12017, %r12016};
	shr.u64 	%rd8305, %rd8289, 6;
	xor.b64  	%rd8306, %rd8303, %rd8305;
	xor.b64  	%rd8307, %rd8306, %rd8304;
	shf.r.wrap.b32 	%r12018, %r11627, %r11626, 1;
	shf.r.wrap.b32 	%r12019, %r11626, %r11627, 1;
	mov.b64 	%rd8308, {%r12019, %r12018};
	shf.r.wrap.b32 	%r12020, %r11627, %r11626, 8;
	shf.r.wrap.b32 	%r12021, %r11626, %r11627, 8;
	mov.b64 	%rd8309, {%r12021, %r12020};
	shr.u64 	%rd8310, %rd7720, 7;
	xor.b64  	%rd8311, %rd8308, %rd8310;
	xor.b64  	%rd8312, %rd8311, %rd8309;
	add.s64 	%rd8313, %rd8224, %rd7707;
	add.s64 	%rd8314, %rd8313, %rd8307;
	add.s64 	%rd8315, %rd8314, %rd8312;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12022,%dummy}, %rd8302;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12023}, %rd8302;
	}
	shf.r.wrap.b32 	%r12024, %r12023, %r12022, 19;
	shf.r.wrap.b32 	%r12025, %r12022, %r12023, 19;
	mov.b64 	%rd8316, {%r12025, %r12024};
	shf.l.wrap.b32 	%r12026, %r12022, %r12023, 3;
	shf.l.wrap.b32 	%r12027, %r12023, %r12022, 3;
	mov.b64 	%rd8317, {%r12027, %r12026};
	shr.u64 	%rd8318, %rd8302, 6;
	xor.b64  	%rd8319, %rd8316, %rd8318;
	xor.b64  	%rd8320, %rd8319, %rd8317;
	shf.r.wrap.b32 	%r12028, %r11893, %r11892, 1;
	shf.r.wrap.b32 	%r12029, %r11892, %r11893, 1;
	mov.b64 	%rd8321, {%r12029, %r12028};
	shf.r.wrap.b32 	%r12030, %r11893, %r11892, 8;
	shf.r.wrap.b32 	%r12031, %r11892, %r11893, 8;
	mov.b64 	%rd8322, {%r12031, %r12030};
	shr.u64 	%rd8323, %rd7733, 7;
	xor.b64  	%rd8324, %rd8321, %rd8323;
	xor.b64  	%rd8325, %rd8324, %rd8322;
	add.s64 	%rd8326, %rd8237, %rd7720;
	add.s64 	%rd8327, %rd8326, %rd8320;
	add.s64 	%rd8328, %rd8327, %rd8325;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12032,%dummy}, %rd8315;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12033}, %rd8315;
	}
	shf.r.wrap.b32 	%r12034, %r12033, %r12032, 19;
	shf.r.wrap.b32 	%r12035, %r12032, %r12033, 19;
	mov.b64 	%rd8329, {%r12035, %r12034};
	shf.l.wrap.b32 	%r12036, %r12032, %r12033, 3;
	shf.l.wrap.b32 	%r12037, %r12033, %r12032, 3;
	mov.b64 	%rd8330, {%r12037, %r12036};
	shr.u64 	%rd8331, %rd8315, 6;
	xor.b64  	%rd8332, %rd8329, %rd8331;
	xor.b64  	%rd8333, %rd8332, %rd8330;
	shf.r.wrap.b32 	%r12038, %r11903, %r11902, 1;
	shf.r.wrap.b32 	%r12039, %r11902, %r11903, 1;
	mov.b64 	%rd8334, {%r12039, %r12038};
	shf.r.wrap.b32 	%r12040, %r11903, %r11902, 8;
	shf.r.wrap.b32 	%r12041, %r11902, %r11903, 8;
	mov.b64 	%rd8335, {%r12041, %r12040};
	shr.u64 	%rd8336, %rd7746, 7;
	xor.b64  	%rd8337, %rd8334, %rd8336;
	xor.b64  	%rd8338, %rd8337, %rd8335;
	add.s64 	%rd8339, %rd8250, %rd7733;
	add.s64 	%rd8340, %rd8339, %rd8333;
	add.s64 	%rd8341, %rd8340, %rd8338;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12042,%dummy}, %rd8328;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12043}, %rd8328;
	}
	shf.r.wrap.b32 	%r12044, %r12043, %r12042, 19;
	shf.r.wrap.b32 	%r12045, %r12042, %r12043, 19;
	mov.b64 	%rd8342, {%r12045, %r12044};
	shf.l.wrap.b32 	%r12046, %r12042, %r12043, 3;
	shf.l.wrap.b32 	%r12047, %r12043, %r12042, 3;
	mov.b64 	%rd8343, {%r12047, %r12046};
	shr.u64 	%rd8344, %rd8328, 6;
	xor.b64  	%rd8345, %rd8342, %rd8344;
	xor.b64  	%rd8346, %rd8345, %rd8343;
	shf.r.wrap.b32 	%r12048, %r11913, %r11912, 1;
	shf.r.wrap.b32 	%r12049, %r11912, %r11913, 1;
	mov.b64 	%rd8347, {%r12049, %r12048};
	shf.r.wrap.b32 	%r12050, %r11913, %r11912, 8;
	shf.r.wrap.b32 	%r12051, %r11912, %r11913, 8;
	mov.b64 	%rd8348, {%r12051, %r12050};
	shr.u64 	%rd8349, %rd8159, 7;
	xor.b64  	%rd8350, %rd8347, %rd8349;
	xor.b64  	%rd8351, %rd8350, %rd8348;
	add.s64 	%rd8352, %rd8263, %rd7746;
	add.s64 	%rd8353, %rd8352, %rd8346;
	add.s64 	%rd8354, %rd8353, %rd8351;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12052,%dummy}, %rd8135;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12053}, %rd8135;
	}
	shf.r.wrap.b32 	%r12054, %r12053, %r12052, 14;
	shf.r.wrap.b32 	%r12055, %r12052, %r12053, 14;
	mov.b64 	%rd8355, {%r12055, %r12054};
	shf.r.wrap.b32 	%r12056, %r12053, %r12052, 18;
	shf.r.wrap.b32 	%r12057, %r12052, %r12053, 18;
	mov.b64 	%rd8356, {%r12057, %r12056};
	xor.b64  	%rd8357, %rd8356, %rd8355;
	shf.l.wrap.b32 	%r12058, %r12052, %r12053, 23;
	shf.l.wrap.b32 	%r12059, %r12053, %r12052, 23;
	mov.b64 	%rd8358, {%r12059, %r12058};
	xor.b64  	%rd8359, %rd8357, %rd8358;
	xor.b64  	%rd8360, %rd8110, %rd8085;
	and.b64  	%rd8361, %rd8360, %rd8135;
	xor.b64  	%rd8362, %rd8361, %rd8085;
	add.s64 	%rd8363, %rd8362, %rd8060;
	add.s64 	%rd8364, %rd8363, %rd8159;
	ld.const.u64 	%rd8365, [k_sha512+512];
	add.s64 	%rd8366, %rd8364, %rd8365;
	add.s64 	%rd8367, %rd8366, %rd8359;
	add.s64 	%rd8368, %rd8367, %rd8071;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12060,%dummy}, %rd8146;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12061}, %rd8146;
	}
	shf.r.wrap.b32 	%r12062, %r12061, %r12060, 28;
	shf.r.wrap.b32 	%r12063, %r12060, %r12061, 28;
	mov.b64 	%rd8369, {%r12063, %r12062};
	shf.l.wrap.b32 	%r12064, %r12060, %r12061, 30;
	shf.l.wrap.b32 	%r12065, %r12061, %r12060, 30;
	mov.b64 	%rd8370, {%r12065, %r12064};
	xor.b64  	%rd8371, %rd8370, %rd8369;
	shf.l.wrap.b32 	%r12066, %r12060, %r12061, 25;
	shf.l.wrap.b32 	%r12067, %r12061, %r12060, 25;
	mov.b64 	%rd8372, {%r12067, %r12066};
	xor.b64  	%rd8373, %rd8371, %rd8372;
	xor.b64  	%rd8374, %rd8146, %rd8096;
	xor.b64  	%rd8375, %rd8146, %rd8121;
	and.b64  	%rd8376, %rd8375, %rd8374;
	xor.b64  	%rd8377, %rd8376, %rd8146;
	add.s64 	%rd8378, %rd8367, %rd8377;
	add.s64 	%rd8379, %rd8378, %rd8373;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12068,%dummy}, %rd8368;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12069}, %rd8368;
	}
	shf.r.wrap.b32 	%r12070, %r12069, %r12068, 14;
	shf.r.wrap.b32 	%r12071, %r12068, %r12069, 14;
	mov.b64 	%rd8380, {%r12071, %r12070};
	shf.r.wrap.b32 	%r12072, %r12069, %r12068, 18;
	shf.r.wrap.b32 	%r12073, %r12068, %r12069, 18;
	mov.b64 	%rd8381, {%r12073, %r12072};
	xor.b64  	%rd8382, %rd8381, %rd8380;
	shf.l.wrap.b32 	%r12074, %r12068, %r12069, 23;
	shf.l.wrap.b32 	%r12075, %r12069, %r12068, 23;
	mov.b64 	%rd8383, {%r12075, %r12074};
	xor.b64  	%rd8384, %rd8382, %rd8383;
	xor.b64  	%rd8385, %rd8135, %rd8110;
	and.b64  	%rd8386, %rd8368, %rd8385;
	xor.b64  	%rd8387, %rd8386, %rd8110;
	add.s64 	%rd8388, %rd8172, %rd8085;
	ld.const.u64 	%rd8389, [k_sha512+520];
	add.s64 	%rd8390, %rd8388, %rd8389;
	add.s64 	%rd8391, %rd8390, %rd8387;
	add.s64 	%rd8392, %rd8391, %rd8384;
	add.s64 	%rd8393, %rd8392, %rd8096;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12076,%dummy}, %rd8379;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12077}, %rd8379;
	}
	shf.r.wrap.b32 	%r12078, %r12077, %r12076, 28;
	shf.r.wrap.b32 	%r12079, %r12076, %r12077, 28;
	mov.b64 	%rd8394, {%r12079, %r12078};
	shf.l.wrap.b32 	%r12080, %r12076, %r12077, 30;
	shf.l.wrap.b32 	%r12081, %r12077, %r12076, 30;
	mov.b64 	%rd8395, {%r12081, %r12080};
	xor.b64  	%rd8396, %rd8395, %rd8394;
	shf.l.wrap.b32 	%r12082, %r12076, %r12077, 25;
	shf.l.wrap.b32 	%r12083, %r12077, %r12076, 25;
	mov.b64 	%rd8397, {%r12083, %r12082};
	xor.b64  	%rd8398, %rd8396, %rd8397;
	xor.b64  	%rd8399, %rd8379, %rd8121;
	xor.b64  	%rd8400, %rd8379, %rd8146;
	and.b64  	%rd8401, %rd8400, %rd8399;
	xor.b64  	%rd8402, %rd8401, %rd8379;
	add.s64 	%rd8403, %rd8392, %rd8402;
	add.s64 	%rd8404, %rd8403, %rd8398;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12084,%dummy}, %rd8393;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12085}, %rd8393;
	}
	shf.r.wrap.b32 	%r12086, %r12085, %r12084, 14;
	shf.r.wrap.b32 	%r12087, %r12084, %r12085, 14;
	mov.b64 	%rd8405, {%r12087, %r12086};
	shf.r.wrap.b32 	%r12088, %r12085, %r12084, 18;
	shf.r.wrap.b32 	%r12089, %r12084, %r12085, 18;
	mov.b64 	%rd8406, {%r12089, %r12088};
	xor.b64  	%rd8407, %rd8406, %rd8405;
	shf.l.wrap.b32 	%r12090, %r12084, %r12085, 23;
	shf.l.wrap.b32 	%r12091, %r12085, %r12084, 23;
	mov.b64 	%rd8408, {%r12091, %r12090};
	xor.b64  	%rd8409, %rd8407, %rd8408;
	xor.b64  	%rd8410, %rd8368, %rd8135;
	and.b64  	%rd8411, %rd8393, %rd8410;
	xor.b64  	%rd8412, %rd8411, %rd8135;
	add.s64 	%rd8413, %rd8185, %rd8110;
	ld.const.u64 	%rd8414, [k_sha512+528];
	add.s64 	%rd8415, %rd8413, %rd8414;
	add.s64 	%rd8416, %rd8415, %rd8412;
	add.s64 	%rd8417, %rd8416, %rd8409;
	add.s64 	%rd8418, %rd8417, %rd8121;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12092,%dummy}, %rd8404;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12093}, %rd8404;
	}
	shf.r.wrap.b32 	%r12094, %r12093, %r12092, 28;
	shf.r.wrap.b32 	%r12095, %r12092, %r12093, 28;
	mov.b64 	%rd8419, {%r12095, %r12094};
	shf.l.wrap.b32 	%r12096, %r12092, %r12093, 30;
	shf.l.wrap.b32 	%r12097, %r12093, %r12092, 30;
	mov.b64 	%rd8420, {%r12097, %r12096};
	xor.b64  	%rd8421, %rd8420, %rd8419;
	shf.l.wrap.b32 	%r12098, %r12092, %r12093, 25;
	shf.l.wrap.b32 	%r12099, %r12093, %r12092, 25;
	mov.b64 	%rd8422, {%r12099, %r12098};
	xor.b64  	%rd8423, %rd8421, %rd8422;
	xor.b64  	%rd8424, %rd8404, %rd8146;
	xor.b64  	%rd8425, %rd8404, %rd8379;
	and.b64  	%rd8426, %rd8425, %rd8424;
	xor.b64  	%rd8427, %rd8426, %rd8404;
	add.s64 	%rd8428, %rd8417, %rd8427;
	add.s64 	%rd8429, %rd8428, %rd8423;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12100,%dummy}, %rd8418;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12101}, %rd8418;
	}
	shf.r.wrap.b32 	%r12102, %r12101, %r12100, 14;
	shf.r.wrap.b32 	%r12103, %r12100, %r12101, 14;
	mov.b64 	%rd8430, {%r12103, %r12102};
	shf.r.wrap.b32 	%r12104, %r12101, %r12100, 18;
	shf.r.wrap.b32 	%r12105, %r12100, %r12101, 18;
	mov.b64 	%rd8431, {%r12105, %r12104};
	xor.b64  	%rd8432, %rd8431, %rd8430;
	shf.l.wrap.b32 	%r12106, %r12100, %r12101, 23;
	shf.l.wrap.b32 	%r12107, %r12101, %r12100, 23;
	mov.b64 	%rd8433, {%r12107, %r12106};
	xor.b64  	%rd8434, %rd8432, %rd8433;
	xor.b64  	%rd8435, %rd8393, %rd8368;
	and.b64  	%rd8436, %rd8418, %rd8435;
	xor.b64  	%rd8437, %rd8436, %rd8368;
	add.s64 	%rd8438, %rd8198, %rd8135;
	ld.const.u64 	%rd8439, [k_sha512+536];
	add.s64 	%rd8440, %rd8438, %rd8439;
	add.s64 	%rd8441, %rd8440, %rd8437;
	add.s64 	%rd8442, %rd8441, %rd8434;
	add.s64 	%rd8443, %rd8442, %rd8146;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12108,%dummy}, %rd8429;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12109}, %rd8429;
	}
	shf.r.wrap.b32 	%r12110, %r12109, %r12108, 28;
	shf.r.wrap.b32 	%r12111, %r12108, %r12109, 28;
	mov.b64 	%rd8444, {%r12111, %r12110};
	shf.l.wrap.b32 	%r12112, %r12108, %r12109, 30;
	shf.l.wrap.b32 	%r12113, %r12109, %r12108, 30;
	mov.b64 	%rd8445, {%r12113, %r12112};
	xor.b64  	%rd8446, %rd8445, %rd8444;
	shf.l.wrap.b32 	%r12114, %r12108, %r12109, 25;
	shf.l.wrap.b32 	%r12115, %r12109, %r12108, 25;
	mov.b64 	%rd8447, {%r12115, %r12114};
	xor.b64  	%rd8448, %rd8446, %rd8447;
	xor.b64  	%rd8449, %rd8429, %rd8379;
	xor.b64  	%rd8450, %rd8429, %rd8404;
	and.b64  	%rd8451, %rd8450, %rd8449;
	xor.b64  	%rd8452, %rd8451, %rd8429;
	add.s64 	%rd8453, %rd8442, %rd8452;
	add.s64 	%rd8454, %rd8453, %rd8448;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12116,%dummy}, %rd8443;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12117}, %rd8443;
	}
	shf.r.wrap.b32 	%r12118, %r12117, %r12116, 14;
	shf.r.wrap.b32 	%r12119, %r12116, %r12117, 14;
	mov.b64 	%rd8455, {%r12119, %r12118};
	shf.r.wrap.b32 	%r12120, %r12117, %r12116, 18;
	shf.r.wrap.b32 	%r12121, %r12116, %r12117, 18;
	mov.b64 	%rd8456, {%r12121, %r12120};
	xor.b64  	%rd8457, %rd8456, %rd8455;
	shf.l.wrap.b32 	%r12122, %r12116, %r12117, 23;
	shf.l.wrap.b32 	%r12123, %r12117, %r12116, 23;
	mov.b64 	%rd8458, {%r12123, %r12122};
	xor.b64  	%rd8459, %rd8457, %rd8458;
	xor.b64  	%rd8460, %rd8418, %rd8393;
	and.b64  	%rd8461, %rd8443, %rd8460;
	xor.b64  	%rd8462, %rd8461, %rd8393;
	add.s64 	%rd8463, %rd8368, %rd8211;
	ld.const.u64 	%rd8464, [k_sha512+544];
	add.s64 	%rd8465, %rd8463, %rd8464;
	add.s64 	%rd8466, %rd8465, %rd8462;
	add.s64 	%rd8467, %rd8466, %rd8459;
	add.s64 	%rd8468, %rd8467, %rd8379;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12124,%dummy}, %rd8454;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12125}, %rd8454;
	}
	shf.r.wrap.b32 	%r12126, %r12125, %r12124, 28;
	shf.r.wrap.b32 	%r12127, %r12124, %r12125, 28;
	mov.b64 	%rd8469, {%r12127, %r12126};
	shf.l.wrap.b32 	%r12128, %r12124, %r12125, 30;
	shf.l.wrap.b32 	%r12129, %r12125, %r12124, 30;
	mov.b64 	%rd8470, {%r12129, %r12128};
	xor.b64  	%rd8471, %rd8470, %rd8469;
	shf.l.wrap.b32 	%r12130, %r12124, %r12125, 25;
	shf.l.wrap.b32 	%r12131, %r12125, %r12124, 25;
	mov.b64 	%rd8472, {%r12131, %r12130};
	xor.b64  	%rd8473, %rd8471, %rd8472;
	xor.b64  	%rd8474, %rd8454, %rd8404;
	xor.b64  	%rd8475, %rd8454, %rd8429;
	and.b64  	%rd8476, %rd8475, %rd8474;
	xor.b64  	%rd8477, %rd8476, %rd8454;
	add.s64 	%rd8478, %rd8467, %rd8477;
	add.s64 	%rd8479, %rd8478, %rd8473;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12132,%dummy}, %rd8468;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12133}, %rd8468;
	}
	shf.r.wrap.b32 	%r12134, %r12133, %r12132, 14;
	shf.r.wrap.b32 	%r12135, %r12132, %r12133, 14;
	mov.b64 	%rd8480, {%r12135, %r12134};
	shf.r.wrap.b32 	%r12136, %r12133, %r12132, 18;
	shf.r.wrap.b32 	%r12137, %r12132, %r12133, 18;
	mov.b64 	%rd8481, {%r12137, %r12136};
	xor.b64  	%rd8482, %rd8481, %rd8480;
	shf.l.wrap.b32 	%r12138, %r12132, %r12133, 23;
	shf.l.wrap.b32 	%r12139, %r12133, %r12132, 23;
	mov.b64 	%rd8483, {%r12139, %r12138};
	xor.b64  	%rd8484, %rd8482, %rd8483;
	xor.b64  	%rd8485, %rd8443, %rd8418;
	and.b64  	%rd8486, %rd8468, %rd8485;
	xor.b64  	%rd8487, %rd8486, %rd8418;
	add.s64 	%rd8488, %rd8393, %rd8224;
	ld.const.u64 	%rd8489, [k_sha512+552];
	add.s64 	%rd8490, %rd8488, %rd8489;
	add.s64 	%rd8491, %rd8490, %rd8487;
	add.s64 	%rd8492, %rd8491, %rd8484;
	add.s64 	%rd8493, %rd8492, %rd8404;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12140,%dummy}, %rd8479;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12141}, %rd8479;
	}
	shf.r.wrap.b32 	%r12142, %r12141, %r12140, 28;
	shf.r.wrap.b32 	%r12143, %r12140, %r12141, 28;
	mov.b64 	%rd8494, {%r12143, %r12142};
	shf.l.wrap.b32 	%r12144, %r12140, %r12141, 30;
	shf.l.wrap.b32 	%r12145, %r12141, %r12140, 30;
	mov.b64 	%rd8495, {%r12145, %r12144};
	xor.b64  	%rd8496, %rd8495, %rd8494;
	shf.l.wrap.b32 	%r12146, %r12140, %r12141, 25;
	shf.l.wrap.b32 	%r12147, %r12141, %r12140, 25;
	mov.b64 	%rd8497, {%r12147, %r12146};
	xor.b64  	%rd8498, %rd8496, %rd8497;
	xor.b64  	%rd8499, %rd8479, %rd8429;
	xor.b64  	%rd8500, %rd8479, %rd8454;
	and.b64  	%rd8501, %rd8500, %rd8499;
	xor.b64  	%rd8502, %rd8501, %rd8479;
	add.s64 	%rd8503, %rd8492, %rd8502;
	add.s64 	%rd8504, %rd8503, %rd8498;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12148,%dummy}, %rd8493;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12149}, %rd8493;
	}
	shf.r.wrap.b32 	%r12150, %r12149, %r12148, 14;
	shf.r.wrap.b32 	%r12151, %r12148, %r12149, 14;
	mov.b64 	%rd8505, {%r12151, %r12150};
	shf.r.wrap.b32 	%r12152, %r12149, %r12148, 18;
	shf.r.wrap.b32 	%r12153, %r12148, %r12149, 18;
	mov.b64 	%rd8506, {%r12153, %r12152};
	xor.b64  	%rd8507, %rd8506, %rd8505;
	shf.l.wrap.b32 	%r12154, %r12148, %r12149, 23;
	shf.l.wrap.b32 	%r12155, %r12149, %r12148, 23;
	mov.b64 	%rd8508, {%r12155, %r12154};
	xor.b64  	%rd8509, %rd8507, %rd8508;
	xor.b64  	%rd8510, %rd8468, %rd8443;
	and.b64  	%rd8511, %rd8493, %rd8510;
	xor.b64  	%rd8512, %rd8511, %rd8443;
	add.s64 	%rd8513, %rd8418, %rd8237;
	ld.const.u64 	%rd8514, [k_sha512+560];
	add.s64 	%rd8515, %rd8513, %rd8514;
	add.s64 	%rd8516, %rd8515, %rd8512;
	add.s64 	%rd8517, %rd8516, %rd8509;
	add.s64 	%rd8518, %rd8517, %rd8429;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12156,%dummy}, %rd8504;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12157}, %rd8504;
	}
	shf.r.wrap.b32 	%r12158, %r12157, %r12156, 28;
	shf.r.wrap.b32 	%r12159, %r12156, %r12157, 28;
	mov.b64 	%rd8519, {%r12159, %r12158};
	shf.l.wrap.b32 	%r12160, %r12156, %r12157, 30;
	shf.l.wrap.b32 	%r12161, %r12157, %r12156, 30;
	mov.b64 	%rd8520, {%r12161, %r12160};
	xor.b64  	%rd8521, %rd8520, %rd8519;
	shf.l.wrap.b32 	%r12162, %r12156, %r12157, 25;
	shf.l.wrap.b32 	%r12163, %r12157, %r12156, 25;
	mov.b64 	%rd8522, {%r12163, %r12162};
	xor.b64  	%rd8523, %rd8521, %rd8522;
	xor.b64  	%rd8524, %rd8504, %rd8454;
	xor.b64  	%rd8525, %rd8504, %rd8479;
	and.b64  	%rd8526, %rd8525, %rd8524;
	xor.b64  	%rd8527, %rd8526, %rd8504;
	add.s64 	%rd8528, %rd8517, %rd8527;
	add.s64 	%rd8529, %rd8528, %rd8523;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12164,%dummy}, %rd8518;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12165}, %rd8518;
	}
	shf.r.wrap.b32 	%r12166, %r12165, %r12164, 14;
	shf.r.wrap.b32 	%r12167, %r12164, %r12165, 14;
	mov.b64 	%rd8530, {%r12167, %r12166};
	shf.r.wrap.b32 	%r12168, %r12165, %r12164, 18;
	shf.r.wrap.b32 	%r12169, %r12164, %r12165, 18;
	mov.b64 	%rd8531, {%r12169, %r12168};
	xor.b64  	%rd8532, %rd8531, %rd8530;
	shf.l.wrap.b32 	%r12170, %r12164, %r12165, 23;
	shf.l.wrap.b32 	%r12171, %r12165, %r12164, 23;
	mov.b64 	%rd8533, {%r12171, %r12170};
	xor.b64  	%rd8534, %rd8532, %rd8533;
	xor.b64  	%rd8535, %rd8493, %rd8468;
	and.b64  	%rd8536, %rd8518, %rd8535;
	xor.b64  	%rd8537, %rd8536, %rd8468;
	add.s64 	%rd8538, %rd8443, %rd8250;
	ld.const.u64 	%rd8539, [k_sha512+568];
	add.s64 	%rd8540, %rd8538, %rd8539;
	add.s64 	%rd8541, %rd8540, %rd8537;
	add.s64 	%rd8542, %rd8541, %rd8534;
	add.s64 	%rd8543, %rd8542, %rd8454;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12172,%dummy}, %rd8529;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12173}, %rd8529;
	}
	shf.r.wrap.b32 	%r12174, %r12173, %r12172, 28;
	shf.r.wrap.b32 	%r12175, %r12172, %r12173, 28;
	mov.b64 	%rd8544, {%r12175, %r12174};
	shf.l.wrap.b32 	%r12176, %r12172, %r12173, 30;
	shf.l.wrap.b32 	%r12177, %r12173, %r12172, 30;
	mov.b64 	%rd8545, {%r12177, %r12176};
	xor.b64  	%rd8546, %rd8545, %rd8544;
	shf.l.wrap.b32 	%r12178, %r12172, %r12173, 25;
	shf.l.wrap.b32 	%r12179, %r12173, %r12172, 25;
	mov.b64 	%rd8547, {%r12179, %r12178};
	xor.b64  	%rd8548, %rd8546, %rd8547;
	xor.b64  	%rd8549, %rd8529, %rd8479;
	xor.b64  	%rd8550, %rd8529, %rd8504;
	and.b64  	%rd8551, %rd8550, %rd8549;
	xor.b64  	%rd8552, %rd8551, %rd8529;
	add.s64 	%rd8553, %rd8542, %rd8552;
	add.s64 	%rd8554, %rd8553, %rd8548;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12180,%dummy}, %rd8543;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12181}, %rd8543;
	}
	shf.r.wrap.b32 	%r12182, %r12181, %r12180, 14;
	shf.r.wrap.b32 	%r12183, %r12180, %r12181, 14;
	mov.b64 	%rd8555, {%r12183, %r12182};
	shf.r.wrap.b32 	%r12184, %r12181, %r12180, 18;
	shf.r.wrap.b32 	%r12185, %r12180, %r12181, 18;
	mov.b64 	%rd8556, {%r12185, %r12184};
	xor.b64  	%rd8557, %rd8556, %rd8555;
	shf.l.wrap.b32 	%r12186, %r12180, %r12181, 23;
	shf.l.wrap.b32 	%r12187, %r12181, %r12180, 23;
	mov.b64 	%rd8558, {%r12187, %r12186};
	xor.b64  	%rd8559, %rd8557, %rd8558;
	xor.b64  	%rd8560, %rd8518, %rd8493;
	and.b64  	%rd8561, %rd8543, %rd8560;
	xor.b64  	%rd8562, %rd8561, %rd8493;
	add.s64 	%rd8563, %rd8468, %rd8263;
	ld.const.u64 	%rd8564, [k_sha512+576];
	add.s64 	%rd8565, %rd8563, %rd8564;
	add.s64 	%rd8566, %rd8565, %rd8562;
	add.s64 	%rd8567, %rd8566, %rd8559;
	add.s64 	%rd8568, %rd8567, %rd8479;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12188,%dummy}, %rd8554;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12189}, %rd8554;
	}
	shf.r.wrap.b32 	%r12190, %r12189, %r12188, 28;
	shf.r.wrap.b32 	%r12191, %r12188, %r12189, 28;
	mov.b64 	%rd8569, {%r12191, %r12190};
	shf.l.wrap.b32 	%r12192, %r12188, %r12189, 30;
	shf.l.wrap.b32 	%r12193, %r12189, %r12188, 30;
	mov.b64 	%rd8570, {%r12193, %r12192};
	xor.b64  	%rd8571, %rd8570, %rd8569;
	shf.l.wrap.b32 	%r12194, %r12188, %r12189, 25;
	shf.l.wrap.b32 	%r12195, %r12189, %r12188, 25;
	mov.b64 	%rd8572, {%r12195, %r12194};
	xor.b64  	%rd8573, %rd8571, %rd8572;
	xor.b64  	%rd8574, %rd8554, %rd8504;
	xor.b64  	%rd8575, %rd8554, %rd8529;
	and.b64  	%rd8576, %rd8575, %rd8574;
	xor.b64  	%rd8577, %rd8576, %rd8554;
	add.s64 	%rd8578, %rd8567, %rd8577;
	add.s64 	%rd8579, %rd8578, %rd8573;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12196,%dummy}, %rd8568;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12197}, %rd8568;
	}
	shf.r.wrap.b32 	%r12198, %r12197, %r12196, 14;
	shf.r.wrap.b32 	%r12199, %r12196, %r12197, 14;
	mov.b64 	%rd8580, {%r12199, %r12198};
	shf.r.wrap.b32 	%r12200, %r12197, %r12196, 18;
	shf.r.wrap.b32 	%r12201, %r12196, %r12197, 18;
	mov.b64 	%rd8581, {%r12201, %r12200};
	xor.b64  	%rd8582, %rd8581, %rd8580;
	shf.l.wrap.b32 	%r12202, %r12196, %r12197, 23;
	shf.l.wrap.b32 	%r12203, %r12197, %r12196, 23;
	mov.b64 	%rd8583, {%r12203, %r12202};
	xor.b64  	%rd8584, %rd8582, %rd8583;
	xor.b64  	%rd8585, %rd8543, %rd8518;
	and.b64  	%rd8586, %rd8568, %rd8585;
	xor.b64  	%rd8587, %rd8586, %rd8518;
	add.s64 	%rd8588, %rd8493, %rd8276;
	ld.const.u64 	%rd8589, [k_sha512+584];
	add.s64 	%rd8590, %rd8588, %rd8589;
	add.s64 	%rd8591, %rd8590, %rd8587;
	add.s64 	%rd8592, %rd8591, %rd8584;
	add.s64 	%rd8593, %rd8592, %rd8504;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12204,%dummy}, %rd8579;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12205}, %rd8579;
	}
	shf.r.wrap.b32 	%r12206, %r12205, %r12204, 28;
	shf.r.wrap.b32 	%r12207, %r12204, %r12205, 28;
	mov.b64 	%rd8594, {%r12207, %r12206};
	shf.l.wrap.b32 	%r12208, %r12204, %r12205, 30;
	shf.l.wrap.b32 	%r12209, %r12205, %r12204, 30;
	mov.b64 	%rd8595, {%r12209, %r12208};
	xor.b64  	%rd8596, %rd8595, %rd8594;
	shf.l.wrap.b32 	%r12210, %r12204, %r12205, 25;
	shf.l.wrap.b32 	%r12211, %r12205, %r12204, 25;
	mov.b64 	%rd8597, {%r12211, %r12210};
	xor.b64  	%rd8598, %rd8596, %rd8597;
	xor.b64  	%rd8599, %rd8579, %rd8529;
	xor.b64  	%rd8600, %rd8579, %rd8554;
	and.b64  	%rd8601, %rd8600, %rd8599;
	xor.b64  	%rd8602, %rd8601, %rd8579;
	add.s64 	%rd8603, %rd8592, %rd8602;
	add.s64 	%rd8604, %rd8603, %rd8598;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12212,%dummy}, %rd8593;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12213}, %rd8593;
	}
	shf.r.wrap.b32 	%r12214, %r12213, %r12212, 14;
	shf.r.wrap.b32 	%r12215, %r12212, %r12213, 14;
	mov.b64 	%rd8605, {%r12215, %r12214};
	shf.r.wrap.b32 	%r12216, %r12213, %r12212, 18;
	shf.r.wrap.b32 	%r12217, %r12212, %r12213, 18;
	mov.b64 	%rd8606, {%r12217, %r12216};
	xor.b64  	%rd8607, %rd8606, %rd8605;
	shf.l.wrap.b32 	%r12218, %r12212, %r12213, 23;
	shf.l.wrap.b32 	%r12219, %r12213, %r12212, 23;
	mov.b64 	%rd8608, {%r12219, %r12218};
	xor.b64  	%rd8609, %rd8607, %rd8608;
	xor.b64  	%rd8610, %rd8568, %rd8543;
	and.b64  	%rd8611, %rd8593, %rd8610;
	xor.b64  	%rd8612, %rd8611, %rd8543;
	add.s64 	%rd8613, %rd8518, %rd8289;
	ld.const.u64 	%rd8614, [k_sha512+592];
	add.s64 	%rd8615, %rd8613, %rd8614;
	add.s64 	%rd8616, %rd8615, %rd8612;
	add.s64 	%rd8617, %rd8616, %rd8609;
	add.s64 	%rd8618, %rd8617, %rd8529;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12220,%dummy}, %rd8604;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12221}, %rd8604;
	}
	shf.r.wrap.b32 	%r12222, %r12221, %r12220, 28;
	shf.r.wrap.b32 	%r12223, %r12220, %r12221, 28;
	mov.b64 	%rd8619, {%r12223, %r12222};
	shf.l.wrap.b32 	%r12224, %r12220, %r12221, 30;
	shf.l.wrap.b32 	%r12225, %r12221, %r12220, 30;
	mov.b64 	%rd8620, {%r12225, %r12224};
	xor.b64  	%rd8621, %rd8620, %rd8619;
	shf.l.wrap.b32 	%r12226, %r12220, %r12221, 25;
	shf.l.wrap.b32 	%r12227, %r12221, %r12220, 25;
	mov.b64 	%rd8622, {%r12227, %r12226};
	xor.b64  	%rd8623, %rd8621, %rd8622;
	xor.b64  	%rd8624, %rd8604, %rd8554;
	xor.b64  	%rd8625, %rd8604, %rd8579;
	and.b64  	%rd8626, %rd8625, %rd8624;
	xor.b64  	%rd8627, %rd8626, %rd8604;
	add.s64 	%rd8628, %rd8617, %rd8627;
	add.s64 	%rd8629, %rd8628, %rd8623;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12228,%dummy}, %rd8618;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12229}, %rd8618;
	}
	shf.r.wrap.b32 	%r12230, %r12229, %r12228, 14;
	shf.r.wrap.b32 	%r12231, %r12228, %r12229, 14;
	mov.b64 	%rd8630, {%r12231, %r12230};
	shf.r.wrap.b32 	%r12232, %r12229, %r12228, 18;
	shf.r.wrap.b32 	%r12233, %r12228, %r12229, 18;
	mov.b64 	%rd8631, {%r12233, %r12232};
	xor.b64  	%rd8632, %rd8631, %rd8630;
	shf.l.wrap.b32 	%r12234, %r12228, %r12229, 23;
	shf.l.wrap.b32 	%r12235, %r12229, %r12228, 23;
	mov.b64 	%rd8633, {%r12235, %r12234};
	xor.b64  	%rd8634, %rd8632, %rd8633;
	xor.b64  	%rd8635, %rd8593, %rd8568;
	and.b64  	%rd8636, %rd8618, %rd8635;
	xor.b64  	%rd8637, %rd8636, %rd8568;
	add.s64 	%rd8638, %rd8543, %rd8302;
	ld.const.u64 	%rd8639, [k_sha512+600];
	add.s64 	%rd8640, %rd8638, %rd8639;
	add.s64 	%rd8641, %rd8640, %rd8637;
	add.s64 	%rd8642, %rd8641, %rd8634;
	add.s64 	%rd8643, %rd8642, %rd8554;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12236,%dummy}, %rd8629;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12237}, %rd8629;
	}
	shf.r.wrap.b32 	%r12238, %r12237, %r12236, 28;
	shf.r.wrap.b32 	%r12239, %r12236, %r12237, 28;
	mov.b64 	%rd8644, {%r12239, %r12238};
	shf.l.wrap.b32 	%r12240, %r12236, %r12237, 30;
	shf.l.wrap.b32 	%r12241, %r12237, %r12236, 30;
	mov.b64 	%rd8645, {%r12241, %r12240};
	xor.b64  	%rd8646, %rd8645, %rd8644;
	shf.l.wrap.b32 	%r12242, %r12236, %r12237, 25;
	shf.l.wrap.b32 	%r12243, %r12237, %r12236, 25;
	mov.b64 	%rd8647, {%r12243, %r12242};
	xor.b64  	%rd8648, %rd8646, %rd8647;
	xor.b64  	%rd8649, %rd8629, %rd8579;
	xor.b64  	%rd8650, %rd8629, %rd8604;
	and.b64  	%rd8651, %rd8650, %rd8649;
	xor.b64  	%rd8652, %rd8651, %rd8629;
	add.s64 	%rd8653, %rd8642, %rd8652;
	add.s64 	%rd8654, %rd8653, %rd8648;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12244,%dummy}, %rd8643;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12245}, %rd8643;
	}
	shf.r.wrap.b32 	%r12246, %r12245, %r12244, 14;
	shf.r.wrap.b32 	%r12247, %r12244, %r12245, 14;
	mov.b64 	%rd8655, {%r12247, %r12246};
	shf.r.wrap.b32 	%r12248, %r12245, %r12244, 18;
	shf.r.wrap.b32 	%r12249, %r12244, %r12245, 18;
	mov.b64 	%rd8656, {%r12249, %r12248};
	xor.b64  	%rd8657, %rd8656, %rd8655;
	shf.l.wrap.b32 	%r12250, %r12244, %r12245, 23;
	shf.l.wrap.b32 	%r12251, %r12245, %r12244, 23;
	mov.b64 	%rd8658, {%r12251, %r12250};
	xor.b64  	%rd8659, %rd8657, %rd8658;
	xor.b64  	%rd8660, %rd8618, %rd8593;
	and.b64  	%rd8661, %rd8643, %rd8660;
	xor.b64  	%rd8662, %rd8661, %rd8593;
	add.s64 	%rd8663, %rd8568, %rd8315;
	ld.const.u64 	%rd8664, [k_sha512+608];
	add.s64 	%rd8665, %rd8663, %rd8664;
	add.s64 	%rd8666, %rd8665, %rd8662;
	add.s64 	%rd8667, %rd8666, %rd8659;
	add.s64 	%rd8668, %rd8667, %rd8579;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12252,%dummy}, %rd8654;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12253}, %rd8654;
	}
	shf.r.wrap.b32 	%r12254, %r12253, %r12252, 28;
	shf.r.wrap.b32 	%r12255, %r12252, %r12253, 28;
	mov.b64 	%rd8669, {%r12255, %r12254};
	shf.l.wrap.b32 	%r12256, %r12252, %r12253, 30;
	shf.l.wrap.b32 	%r12257, %r12253, %r12252, 30;
	mov.b64 	%rd8670, {%r12257, %r12256};
	xor.b64  	%rd8671, %rd8670, %rd8669;
	shf.l.wrap.b32 	%r12258, %r12252, %r12253, 25;
	shf.l.wrap.b32 	%r12259, %r12253, %r12252, 25;
	mov.b64 	%rd8672, {%r12259, %r12258};
	xor.b64  	%rd8673, %rd8671, %rd8672;
	xor.b64  	%rd8674, %rd8654, %rd8604;
	xor.b64  	%rd8675, %rd8654, %rd8629;
	and.b64  	%rd8676, %rd8675, %rd8674;
	xor.b64  	%rd8677, %rd8676, %rd8654;
	add.s64 	%rd8678, %rd8667, %rd8677;
	add.s64 	%rd8679, %rd8678, %rd8673;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12260,%dummy}, %rd8668;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12261}, %rd8668;
	}
	shf.r.wrap.b32 	%r12262, %r12261, %r12260, 14;
	shf.r.wrap.b32 	%r12263, %r12260, %r12261, 14;
	mov.b64 	%rd8680, {%r12263, %r12262};
	shf.r.wrap.b32 	%r12264, %r12261, %r12260, 18;
	shf.r.wrap.b32 	%r12265, %r12260, %r12261, 18;
	mov.b64 	%rd8681, {%r12265, %r12264};
	xor.b64  	%rd8682, %rd8681, %rd8680;
	shf.l.wrap.b32 	%r12266, %r12260, %r12261, 23;
	shf.l.wrap.b32 	%r12267, %r12261, %r12260, 23;
	mov.b64 	%rd8683, {%r12267, %r12266};
	xor.b64  	%rd8684, %rd8682, %rd8683;
	xor.b64  	%rd8685, %rd8643, %rd8618;
	and.b64  	%rd8686, %rd8668, %rd8685;
	xor.b64  	%rd8687, %rd8686, %rd8618;
	add.s64 	%rd8688, %rd8593, %rd8328;
	ld.const.u64 	%rd8689, [k_sha512+616];
	add.s64 	%rd8690, %rd8688, %rd8689;
	add.s64 	%rd8691, %rd8690, %rd8687;
	add.s64 	%rd8692, %rd8691, %rd8684;
	add.s64 	%rd8693, %rd8692, %rd8604;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12268,%dummy}, %rd8679;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12269}, %rd8679;
	}
	shf.r.wrap.b32 	%r12270, %r12269, %r12268, 28;
	shf.r.wrap.b32 	%r12271, %r12268, %r12269, 28;
	mov.b64 	%rd8694, {%r12271, %r12270};
	shf.l.wrap.b32 	%r12272, %r12268, %r12269, 30;
	shf.l.wrap.b32 	%r12273, %r12269, %r12268, 30;
	mov.b64 	%rd8695, {%r12273, %r12272};
	xor.b64  	%rd8696, %rd8695, %rd8694;
	shf.l.wrap.b32 	%r12274, %r12268, %r12269, 25;
	shf.l.wrap.b32 	%r12275, %r12269, %r12268, 25;
	mov.b64 	%rd8697, {%r12275, %r12274};
	xor.b64  	%rd8698, %rd8696, %rd8697;
	xor.b64  	%rd8699, %rd8679, %rd8629;
	xor.b64  	%rd8700, %rd8679, %rd8654;
	and.b64  	%rd8701, %rd8700, %rd8699;
	xor.b64  	%rd8702, %rd8701, %rd8679;
	add.s64 	%rd8703, %rd8692, %rd8702;
	add.s64 	%rd8704, %rd8703, %rd8698;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12276,%dummy}, %rd8693;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12277}, %rd8693;
	}
	shf.r.wrap.b32 	%r12278, %r12277, %r12276, 14;
	shf.r.wrap.b32 	%r12279, %r12276, %r12277, 14;
	mov.b64 	%rd8705, {%r12279, %r12278};
	shf.r.wrap.b32 	%r12280, %r12277, %r12276, 18;
	shf.r.wrap.b32 	%r12281, %r12276, %r12277, 18;
	mov.b64 	%rd8706, {%r12281, %r12280};
	xor.b64  	%rd8707, %rd8706, %rd8705;
	shf.l.wrap.b32 	%r12282, %r12276, %r12277, 23;
	shf.l.wrap.b32 	%r12283, %r12277, %r12276, 23;
	mov.b64 	%rd8708, {%r12283, %r12282};
	xor.b64  	%rd8709, %rd8707, %rd8708;
	xor.b64  	%rd8710, %rd8668, %rd8643;
	and.b64  	%rd8711, %rd8693, %rd8710;
	xor.b64  	%rd8712, %rd8711, %rd8643;
	add.s64 	%rd8713, %rd8618, %rd8341;
	ld.const.u64 	%rd8714, [k_sha512+624];
	add.s64 	%rd8715, %rd8713, %rd8714;
	add.s64 	%rd8716, %rd8715, %rd8712;
	add.s64 	%rd8717, %rd8716, %rd8709;
	add.s64 	%rd8718, %rd8717, %rd8629;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12284,%dummy}, %rd8704;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12285}, %rd8704;
	}
	shf.r.wrap.b32 	%r12286, %r12285, %r12284, 28;
	shf.r.wrap.b32 	%r12287, %r12284, %r12285, 28;
	mov.b64 	%rd8719, {%r12287, %r12286};
	shf.l.wrap.b32 	%r12288, %r12284, %r12285, 30;
	shf.l.wrap.b32 	%r12289, %r12285, %r12284, 30;
	mov.b64 	%rd8720, {%r12289, %r12288};
	xor.b64  	%rd8721, %rd8720, %rd8719;
	shf.l.wrap.b32 	%r12290, %r12284, %r12285, 25;
	shf.l.wrap.b32 	%r12291, %r12285, %r12284, 25;
	mov.b64 	%rd8722, {%r12291, %r12290};
	xor.b64  	%rd8723, %rd8721, %rd8722;
	xor.b64  	%rd8724, %rd8704, %rd8654;
	xor.b64  	%rd8725, %rd8704, %rd8679;
	and.b64  	%rd8726, %rd8725, %rd8724;
	xor.b64  	%rd8727, %rd8726, %rd8704;
	add.s64 	%rd8728, %rd8717, %rd8727;
	add.s64 	%rd8729, %rd8728, %rd8723;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12292,%dummy}, %rd8718;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12293}, %rd8718;
	}
	shf.r.wrap.b32 	%r12294, %r12293, %r12292, 14;
	shf.r.wrap.b32 	%r12295, %r12292, %r12293, 14;
	mov.b64 	%rd8730, {%r12295, %r12294};
	shf.r.wrap.b32 	%r12296, %r12293, %r12292, 18;
	shf.r.wrap.b32 	%r12297, %r12292, %r12293, 18;
	mov.b64 	%rd8731, {%r12297, %r12296};
	xor.b64  	%rd8732, %rd8731, %rd8730;
	shf.l.wrap.b32 	%r12298, %r12292, %r12293, 23;
	shf.l.wrap.b32 	%r12299, %r12293, %r12292, 23;
	mov.b64 	%rd8733, {%r12299, %r12298};
	xor.b64  	%rd8734, %rd8732, %rd8733;
	xor.b64  	%rd8735, %rd8693, %rd8668;
	and.b64  	%rd8736, %rd8718, %rd8735;
	xor.b64  	%rd8737, %rd8736, %rd8668;
	add.s64 	%rd8738, %rd8643, %rd8354;
	ld.const.u64 	%rd8739, [k_sha512+632];
	add.s64 	%rd8740, %rd8738, %rd8739;
	add.s64 	%rd8741, %rd8740, %rd8737;
	add.s64 	%rd8742, %rd8741, %rd8734;
	add.s64 	%rd8743, %rd8742, %rd8654;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12300,%dummy}, %rd8729;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r12301}, %rd8729;
	}
	shf.r.wrap.b32 	%r12302, %r12301, %r12300, 28;
	shf.r.wrap.b32 	%r12303, %r12300, %r12301, 28;
	mov.b64 	%rd8744, {%r12303, %r12302};
	shf.l.wrap.b32 	%r12304, %r12300, %r12301, 30;
	shf.l.wrap.b32 	%r12305, %r12301, %r12300, 30;
	mov.b64 	%rd8745, {%r12305, %r12304};
	xor.b64  	%rd8746, %rd8745, %rd8744;
	shf.l.wrap.b32 	%r12306, %r12300, %r12301, 25;
	shf.l.wrap.b32 	%r12307, %r12301, %r12300, 25;
	mov.b64 	%rd8747, {%r12307, %r12306};
	xor.b64  	%rd8748, %rd8746, %rd8747;
	xor.b64  	%rd8749, %rd8729, %rd8679;
	xor.b64  	%rd8750, %rd8729, %rd8704;
	and.b64  	%rd8751, %rd8750, %rd8749;
	xor.b64  	%rd8752, %rd8751, %rd8729;
	add.s64 	%rd8753, %rd8742, %rd8752;
	add.s64 	%rd8754, %rd8753, %rd8748;
	add.s64 	%rd8755, %rd5949, %rd8754;
	st.local.u64 	[%rd9], %rd8755;
	add.s64 	%rd8756, %rd5957, %rd8729;
	st.local.u64 	[%rd10], %rd8756;
	add.s64 	%rd8757, %rd5955, %rd8704;
	st.local.u64 	[%rd10+8], %rd8757;
	add.s64 	%rd8758, %rd5947, %rd8679;
	st.local.u64 	[%rd10+16], %rd8758;
	add.s64 	%rd8759, %rd5931, %rd8743;
	st.local.u64 	[%rd10+24], %rd8759;
	add.s64 	%rd8760, %rd5938, %rd8718;
	st.local.u64 	[%rd10+32], %rd8760;
	add.s64 	%rd8761, %rd5937, %rd8693;
	st.local.u64 	[%rd10+40], %rd8761;
	add.s64 	%rd8762, %rd5942, %rd8668;
	st.local.u64 	[%rd10+48], %rd8762;
	st.local.u32 	[%rd10+56], %r12345;
	st.local.u32 	[%rd10+64], %r12343;
	st.local.u32 	[%rd10+72], %r12349;
	st.local.u32 	[%rd10+80], %r12347;
	st.local.u32 	[%rd10+88], %r12353;
	st.local.u32 	[%rd10+96], %r12351;
	st.local.u32 	[%rd10+104], %r12357;
	st.local.u32 	[%rd10+112], %r12355;
	st.local.u32 	[%rd10+120], %r12361;
	st.local.u32 	[%rd10+128], %r12359;
	st.local.u32 	[%rd10+136], %r12365;
	st.local.u32 	[%rd10+144], %r12363;
	st.local.u32 	[%rd10+152], %r12369;
	st.local.u32 	[%rd10+160], %r12367;
	st.local.u32 	[%rd10+168], %r12373;
	st.local.u32 	[%rd10+176], %r12371;
	st.local.u32 	[%rd11+4], %r12344;
	st.local.u32 	[%rd12+4], %r12342;
	st.local.u32 	[%rd13+4], %r12348;
	st.local.u32 	[%rd14+4], %r12346;
	st.local.u32 	[%rd15+4], %r12352;
	st.local.u32 	[%rd16+4], %r12350;
	st.local.u32 	[%rd17+4], %r12356;
	st.local.u32 	[%rd18+4], %r12354;
	st.local.u32 	[%rd19+4], %r12360;
	st.local.u32 	[%rd20+4], %r12358;
	st.local.u32 	[%rd21+4], %r12364;
	st.local.u32 	[%rd22+4], %r12362;
	st.local.u32 	[%rd23+4], %r12368;
	st.local.u32 	[%rd24+4], %r12366;
	st.local.u32 	[%rd25+4], %r12372;
	st.local.u32 	[%rd26+4], %r12370;
	add.s32 	%r12308, %r12308, 128;
	add.s32 	%r12309, %r12309, 32;

BB4_2:
	add.s32 	%r646, %r2, -128;
	setp.lt.s32	%p2, %r12308, %r646;
	mul.wide.s32 	%rd294, %r12309, 4;
	add.s64 	%rd295, %rd293, %rd294;
	ld.global.u32 	%r12341, [%rd295];
	st.local.u32 	[%rd1], %r12341;
	add.s32 	%r647, %r12309, 1;
	mul.wide.s32 	%rd296, %r647, 4;
	add.s64 	%rd297, %rd293, %rd296;
	ld.global.u32 	%r12340, [%rd297];
	st.local.u32 	[%rd28], %r12340;
	add.s32 	%r648, %r12309, 2;
	mul.wide.s32 	%rd298, %r648, 4;
	add.s64 	%rd299, %rd293, %rd298;
	ld.global.u32 	%r649, [%rd299];
	st.local.u32 	[%rd28+4], %r649;
	add.s32 	%r650, %r12309, 3;
	mul.wide.s32 	%rd300, %r650, 4;
	add.s64 	%rd301, %rd293, %rd300;
	ld.global.u32 	%r651, [%rd301];
	st.local.u32 	[%rd28+8], %r651;
	add.s32 	%r652, %r12309, 4;
	mul.wide.s32 	%rd302, %r652, 4;
	add.s64 	%rd303, %rd293, %rd302;
	ld.global.u32 	%r653, [%rd303];
	st.local.u32 	[%rd2], %r653;
	add.s32 	%r654, %r12309, 5;
	mul.wide.s32 	%rd304, %r654, 4;
	add.s64 	%rd305, %rd293, %rd304;
	ld.global.u32 	%r655, [%rd305];
	st.local.u32 	[%rd29], %r655;
	add.s32 	%r656, %r12309, 6;
	mul.wide.s32 	%rd306, %r656, 4;
	add.s64 	%rd307, %rd293, %rd306;
	ld.global.u32 	%r657, [%rd307];
	st.local.u32 	[%rd29+4], %r657;
	add.s32 	%r658, %r12309, 7;
	mul.wide.s32 	%rd308, %r658, 4;
	add.s64 	%rd309, %rd293, %rd308;
	ld.global.u32 	%r659, [%rd309];
	st.local.u32 	[%rd29+8], %r659;
	add.s32 	%r660, %r12309, 8;
	mul.wide.s32 	%rd310, %r660, 4;
	add.s64 	%rd311, %rd293, %rd310;
	ld.global.u32 	%r661, [%rd311];
	st.local.u32 	[%rd3], %r661;
	add.s32 	%r662, %r12309, 9;
	mul.wide.s32 	%rd312, %r662, 4;
	add.s64 	%rd313, %rd293, %rd312;
	ld.global.u32 	%r663, [%rd313];
	st.local.u32 	[%rd30], %r663;
	add.s32 	%r664, %r12309, 10;
	mul.wide.s32 	%rd314, %r664, 4;
	add.s64 	%rd315, %rd293, %rd314;
	ld.global.u32 	%r665, [%rd315];
	st.local.u32 	[%rd30+4], %r665;
	add.s32 	%r666, %r12309, 11;
	mul.wide.s32 	%rd316, %r666, 4;
	add.s64 	%rd317, %rd293, %rd316;
	ld.global.u32 	%r667, [%rd317];
	st.local.u32 	[%rd30+8], %r667;
	add.s32 	%r668, %r12309, 12;
	mul.wide.s32 	%rd318, %r668, 4;
	add.s64 	%rd319, %rd293, %rd318;
	ld.global.u32 	%r669, [%rd319];
	st.local.u32 	[%rd4], %r669;
	add.s32 	%r670, %r12309, 13;
	mul.wide.s32 	%rd320, %r670, 4;
	add.s64 	%rd321, %rd293, %rd320;
	ld.global.u32 	%r671, [%rd321];
	st.local.u32 	[%rd31], %r671;
	add.s32 	%r672, %r12309, 14;
	mul.wide.s32 	%rd322, %r672, 4;
	add.s64 	%rd323, %rd293, %rd322;
	ld.global.u32 	%r673, [%rd323];
	st.local.u32 	[%rd31+4], %r673;
	add.s32 	%r674, %r12309, 15;
	mul.wide.s32 	%rd324, %r674, 4;
	add.s64 	%rd325, %rd293, %rd324;
	ld.global.u32 	%r675, [%rd325];
	st.local.u32 	[%rd31+8], %r675;
	add.s32 	%r676, %r12309, 16;
	mul.wide.s32 	%rd326, %r676, 4;
	add.s64 	%rd327, %rd293, %rd326;
	ld.global.u32 	%r677, [%rd327];
	st.local.u32 	[%rd5], %r677;
	add.s32 	%r678, %r12309, 17;
	mul.wide.s32 	%rd328, %r678, 4;
	add.s64 	%rd329, %rd293, %rd328;
	ld.global.u32 	%r679, [%rd329];
	st.local.u32 	[%rd32], %r679;
	add.s32 	%r680, %r12309, 18;
	mul.wide.s32 	%rd330, %r680, 4;
	add.s64 	%rd331, %rd293, %rd330;
	ld.global.u32 	%r681, [%rd331];
	st.local.u32 	[%rd32+4], %r681;
	add.s32 	%r682, %r12309, 19;
	mul.wide.s32 	%rd332, %r682, 4;
	add.s64 	%rd333, %rd293, %rd332;
	ld.global.u32 	%r683, [%rd333];
	st.local.u32 	[%rd32+8], %r683;
	add.s32 	%r684, %r12309, 20;
	mul.wide.s32 	%rd334, %r684, 4;
	add.s64 	%rd335, %rd293, %rd334;
	ld.global.u32 	%r685, [%rd335];
	st.local.u32 	[%rd6], %r685;
	add.s32 	%r686, %r12309, 21;
	mul.wide.s32 	%rd336, %r686, 4;
	add.s64 	%rd337, %rd293, %rd336;
	ld.global.u32 	%r687, [%rd337];
	st.local.u32 	[%rd33], %r687;
	add.s32 	%r688, %r12309, 22;
	mul.wide.s32 	%rd338, %r688, 4;
	add.s64 	%rd339, %rd293, %rd338;
	ld.global.u32 	%r689, [%rd339];
	st.local.u32 	[%rd33+4], %r689;
	add.s32 	%r690, %r12309, 23;
	mul.wide.s32 	%rd340, %r690, 4;
	add.s64 	%rd341, %rd293, %rd340;
	ld.global.u32 	%r691, [%rd341];
	st.local.u32 	[%rd33+8], %r691;
	add.s32 	%r692, %r12309, 24;
	mul.wide.s32 	%rd342, %r692, 4;
	add.s64 	%rd343, %rd293, %rd342;
	ld.global.u32 	%r693, [%rd343];
	st.local.u32 	[%rd7], %r693;
	add.s32 	%r694, %r12309, 25;
	mul.wide.s32 	%rd344, %r694, 4;
	add.s64 	%rd345, %rd293, %rd344;
	ld.global.u32 	%r695, [%rd345];
	st.local.u32 	[%rd34], %r695;
	add.s32 	%r696, %r12309, 26;
	mul.wide.s32 	%rd346, %r696, 4;
	add.s64 	%rd347, %rd293, %rd346;
	ld.global.u32 	%r697, [%rd347];
	st.local.u32 	[%rd34+4], %r697;
	add.s32 	%r698, %r12309, 27;
	mul.wide.s32 	%rd348, %r698, 4;
	add.s64 	%rd349, %rd293, %rd348;
	ld.global.u32 	%r699, [%rd349];
	st.local.u32 	[%rd34+8], %r699;
	add.s32 	%r700, %r12309, 28;
	mul.wide.s32 	%rd350, %r700, 4;
	add.s64 	%rd351, %rd293, %rd350;
	ld.global.u32 	%r701, [%rd351];
	st.local.u32 	[%rd8], %r701;
	add.s32 	%r702, %r12309, 29;
	mul.wide.s32 	%rd352, %r702, 4;
	add.s64 	%rd353, %rd293, %rd352;
	ld.global.u32 	%r703, [%rd353];
	st.local.u32 	[%rd35], %r703;
	add.s32 	%r704, %r12309, 30;
	mul.wide.s32 	%rd354, %r704, 4;
	add.s64 	%rd355, %rd293, %rd354;
	ld.global.u32 	%r705, [%rd355];
	st.local.u32 	[%rd35+4], %r705;
	add.s32 	%r706, %r12309, 31;
	mul.wide.s32 	%rd356, %r706, 4;
	add.s64 	%rd357, %rd293, %rd356;
	ld.global.u32 	%r7, [%rd357];
	st.local.u32 	[%rd35+8], %r7;
	@%p2 bra 	BB4_327;
	bra.uni 	BB4_3;

BB4_327:
	ld.local.u32 	%r4953, [%rd10+184];
	add.s32 	%r4954, %r4953, 128;
	st.local.u32 	[%rd10+184], %r4954;
	bfe.u32 	%r4952, %r4953, 2, 5;
	and.b32  	%r4955, %r4953, 3;
	shl.b32 	%r4956, %r4955, 2;
	mov.u32 	%r4957, 1985229328;
	shr.u32 	%r4958, %r4957, %r4956;
	and.b32  	%r70, %r4958, 65535;
	mov.u32 	%r12342, 0;
	setp.gt.s32	%p195, %r4952, 15;
	@%p195 bra 	BB4_360;

	setp.gt.s32	%p219, %r4952, 7;
	@%p219 bra 	BB4_345;

	setp.gt.s32	%p231, %r4952, 3;
	@%p231 bra 	BB4_338;

	setp.gt.s32	%p237, %r4952, 1;
	@%p237 bra 	BB4_334;

	setp.eq.s32	%p240, %r4952, 0;
	@%p240 bra 	BB4_412;
	bra.uni 	BB4_332;

BB4_412:
	mov.u32 	%r12342, 0;
	// inline asm
	prmt.b32 %r12345, %r12342, %r7, %r70;
	// inline asm
	ld.local.v2.u32 	{%r10236, %r10237}, [%rd35+4];
	// inline asm
	prmt.b32 %r10077, %r10237, %r10236, %r70;
	// inline asm
	st.local.u32 	[%rd35+8], %r10077;
	ld.local.u32 	%r10082, [%rd35+4];
	ld.local.u32 	%r10083, [%rd35];
	// inline asm
	prmt.b32 %r10081, %r10082, %r10083, %r70;
	// inline asm
	st.local.u32 	[%rd35+4], %r10081;
	ld.local.u32 	%r10086, [%rd35];
	ld.local.u32 	%r10087, [%rd8];
	// inline asm
	prmt.b32 %r10085, %r10086, %r10087, %r70;
	// inline asm
	st.local.u32 	[%rd35], %r10085;
	ld.local.u32 	%r10090, [%rd8];
	ld.local.u32 	%r10091, [%rd34+8];
	// inline asm
	prmt.b32 %r10089, %r10090, %r10091, %r70;
	// inline asm
	st.local.u32 	[%rd8], %r10089;
	ld.local.v2.u32 	{%r10238, %r10239}, [%rd34+4];
	// inline asm
	prmt.b32 %r10093, %r10239, %r10238, %r70;
	// inline asm
	st.local.u32 	[%rd34+8], %r10093;
	ld.local.u32 	%r10098, [%rd34+4];
	ld.local.u32 	%r10099, [%rd34];
	// inline asm
	prmt.b32 %r10097, %r10098, %r10099, %r70;
	// inline asm
	st.local.u32 	[%rd34+4], %r10097;
	ld.local.u32 	%r10102, [%rd34];
	ld.local.u32 	%r10103, [%rd7];
	// inline asm
	prmt.b32 %r10101, %r10102, %r10103, %r70;
	// inline asm
	st.local.u32 	[%rd34], %r10101;
	ld.local.u32 	%r10106, [%rd7];
	ld.local.u32 	%r10107, [%rd33+8];
	// inline asm
	prmt.b32 %r10105, %r10106, %r10107, %r70;
	// inline asm
	st.local.u32 	[%rd7], %r10105;
	ld.local.v2.u32 	{%r10240, %r10241}, [%rd33+4];
	// inline asm
	prmt.b32 %r10109, %r10241, %r10240, %r70;
	// inline asm
	st.local.u32 	[%rd33+8], %r10109;
	ld.local.u32 	%r10114, [%rd33+4];
	ld.local.u32 	%r10115, [%rd33];
	// inline asm
	prmt.b32 %r10113, %r10114, %r10115, %r70;
	// inline asm
	st.local.u32 	[%rd33+4], %r10113;
	ld.local.u32 	%r10118, [%rd33];
	ld.local.u32 	%r10119, [%rd6];
	// inline asm
	prmt.b32 %r10117, %r10118, %r10119, %r70;
	// inline asm
	st.local.u32 	[%rd33], %r10117;
	ld.local.u32 	%r10122, [%rd6];
	ld.local.u32 	%r10123, [%rd32+8];
	// inline asm
	prmt.b32 %r10121, %r10122, %r10123, %r70;
	// inline asm
	st.local.u32 	[%rd6], %r10121;
	ld.local.v2.u32 	{%r10242, %r10243}, [%rd32+4];
	// inline asm
	prmt.b32 %r10125, %r10243, %r10242, %r70;
	// inline asm
	st.local.u32 	[%rd32+8], %r10125;
	ld.local.u32 	%r10130, [%rd32+4];
	ld.local.u32 	%r10131, [%rd32];
	// inline asm
	prmt.b32 %r10129, %r10130, %r10131, %r70;
	// inline asm
	st.local.u32 	[%rd32+4], %r10129;
	ld.local.u32 	%r10134, [%rd32];
	ld.local.u32 	%r10135, [%rd5];
	// inline asm
	prmt.b32 %r10133, %r10134, %r10135, %r70;
	// inline asm
	st.local.u32 	[%rd32], %r10133;
	ld.local.u32 	%r10138, [%rd5];
	ld.local.u32 	%r10139, [%rd31+8];
	// inline asm
	prmt.b32 %r10137, %r10138, %r10139, %r70;
	// inline asm
	st.local.u32 	[%rd5], %r10137;
	ld.local.v2.u32 	{%r10244, %r10245}, [%rd31+4];
	// inline asm
	prmt.b32 %r10141, %r10245, %r10244, %r70;
	// inline asm
	st.local.u32 	[%rd31+8], %r10141;
	ld.local.u32 	%r10146, [%rd31+4];
	ld.local.u32 	%r10147, [%rd31];
	// inline asm
	prmt.b32 %r10145, %r10146, %r10147, %r70;
	// inline asm
	st.local.u32 	[%rd31+4], %r10145;
	ld.local.u32 	%r10150, [%rd31];
	ld.local.u32 	%r10151, [%rd4];
	// inline asm
	prmt.b32 %r10149, %r10150, %r10151, %r70;
	// inline asm
	st.local.u32 	[%rd31], %r10149;
	ld.local.u32 	%r10154, [%rd4];
	ld.local.u32 	%r10155, [%rd30+8];
	// inline asm
	prmt.b32 %r10153, %r10154, %r10155, %r70;
	// inline asm
	st.local.u32 	[%rd4], %r10153;
	ld.local.v2.u32 	{%r10246, %r10247}, [%rd30+4];
	// inline asm
	prmt.b32 %r10157, %r10247, %r10246, %r70;
	// inline asm
	st.local.u32 	[%rd30+8], %r10157;
	ld.local.u32 	%r10162, [%rd30+4];
	ld.local.u32 	%r10163, [%rd30];
	// inline asm
	prmt.b32 %r10161, %r10162, %r10163, %r70;
	// inline asm
	st.local.u32 	[%rd30+4], %r10161;
	ld.local.u32 	%r10166, [%rd30];
	ld.local.u32 	%r10167, [%rd3];
	// inline asm
	prmt.b32 %r10165, %r10166, %r10167, %r70;
	// inline asm
	st.local.u32 	[%rd30], %r10165;
	ld.local.u32 	%r10170, [%rd3];
	ld.local.u32 	%r10171, [%rd29+8];
	// inline asm
	prmt.b32 %r10169, %r10170, %r10171, %r70;
	// inline asm
	st.local.u32 	[%rd3], %r10169;
	ld.local.v2.u32 	{%r10248, %r10249}, [%rd29+4];
	// inline asm
	prmt.b32 %r10173, %r10249, %r10248, %r70;
	// inline asm
	st.local.u32 	[%rd29+8], %r10173;
	ld.local.u32 	%r10178, [%rd29+4];
	ld.local.u32 	%r10179, [%rd29];
	// inline asm
	prmt.b32 %r10177, %r10178, %r10179, %r70;
	// inline asm
	st.local.u32 	[%rd29+4], %r10177;
	ld.local.u32 	%r10182, [%rd29];
	ld.local.u32 	%r10183, [%rd2];
	// inline asm
	prmt.b32 %r10181, %r10182, %r10183, %r70;
	// inline asm
	st.local.u32 	[%rd29], %r10181;
	ld.local.u32 	%r10186, [%rd2];
	ld.local.u32 	%r10187, [%rd28+8];
	// inline asm
	prmt.b32 %r10185, %r10186, %r10187, %r70;
	// inline asm
	st.local.u32 	[%rd2], %r10185;
	ld.local.v2.u32 	{%r10250, %r10251}, [%rd28+4];
	// inline asm
	prmt.b32 %r10189, %r10251, %r10250, %r70;
	// inline asm
	st.local.u32 	[%rd28+8], %r10189;
	ld.local.u32 	%r10194, [%rd28+4];
	ld.local.u32 	%r10195, [%rd28];
	// inline asm
	prmt.b32 %r10193, %r10194, %r10195, %r70;
	// inline asm
	st.local.u32 	[%rd28+4], %r10193;
	ld.local.u32 	%r10198, [%rd28];
	ld.local.u32 	%r10199, [%rd1];
	// inline asm
	prmt.b32 %r10197, %r10198, %r10199, %r70;
	// inline asm
	st.local.u32 	[%rd28], %r10197;
	ld.local.u32 	%r10202, [%rd1];
	// inline asm
	prmt.b32 %r12341, %r10202, %r12342, %r70;
	// inline asm
	st.local.u32 	[%rd1], %r12341;
	ld.local.u32 	%r12340, [%rd28];
	mov.u32 	%r12343, %r12342;
	mov.u32 	%r12344, %r12342;
	mov.u32 	%r12346, %r12342;
	mov.u32 	%r12347, %r12342;
	mov.u32 	%r12348, %r12342;
	mov.u32 	%r12349, %r12342;
	mov.u32 	%r12350, %r12342;
	mov.u32 	%r12351, %r12342;
	mov.u32 	%r12352, %r12342;
	mov.u32 	%r12353, %r12342;
	mov.u32 	%r12354, %r12342;
	mov.u32 	%r12355, %r12342;
	mov.u32 	%r12356, %r12342;
	mov.u32 	%r12357, %r12342;
	mov.u32 	%r12358, %r12342;
	mov.u32 	%r12359, %r12342;
	mov.u32 	%r12360, %r12342;
	mov.u32 	%r12361, %r12342;
	mov.u32 	%r12362, %r12342;
	mov.u32 	%r12363, %r12342;
	mov.u32 	%r12364, %r12342;
	mov.u32 	%r12365, %r12342;
	mov.u32 	%r12366, %r12342;
	mov.u32 	%r12367, %r12342;
	mov.u32 	%r12368, %r12342;
	mov.u32 	%r12369, %r12342;
	mov.u32 	%r12370, %r12342;
	mov.u32 	%r12371, %r12342;
	mov.u32 	%r12372, %r12342;
	mov.u32 	%r12373, %r12342;
	bra.uni 	BB4_413;

BB4_360:
	setp.gt.s32	%p196, %r4952, 23;
	@%p196 bra 	BB4_376;

	setp.gt.s32	%p208, %r4952, 19;
	@%p208 bra 	BB4_369;

	setp.gt.s32	%p214, %r4952, 17;
	@%p214 bra 	BB4_366;

	setp.eq.s32	%p217, %r4952, 16;
	@%p217 bra 	BB4_398;
	bra.uni 	BB4_364;

BB4_398:
	mov.u32 	%r12340, 0;
	// inline asm
	prmt.b32 %r12361, %r12340, %r7, %r70;
	// inline asm
	ld.local.v2.u32 	{%r7463, %r7464}, [%rd35+4];
	// inline asm
	prmt.b32 %r12354, %r7464, %r7463, %r70;
	// inline asm
	ld.local.u32 	%r7323, [%rd35+4];
	ld.local.u32 	%r7324, [%rd35];
	// inline asm
	prmt.b32 %r12355, %r7323, %r7324, %r70;
	// inline asm
	ld.local.u32 	%r7327, [%rd35];
	ld.local.u32 	%r7328, [%rd8];
	// inline asm
	prmt.b32 %r12356, %r7327, %r7328, %r70;
	// inline asm
	ld.local.u32 	%r7331, [%rd8];
	ld.local.u32 	%r7332, [%rd34+8];
	// inline asm
	prmt.b32 %r12357, %r7331, %r7332, %r70;
	// inline asm
	ld.local.v2.u32 	{%r7465, %r7466}, [%rd34+4];
	// inline asm
	prmt.b32 %r12350, %r7466, %r7465, %r70;
	// inline asm
	ld.local.u32 	%r7339, [%rd34+4];
	ld.local.u32 	%r7340, [%rd34];
	// inline asm
	prmt.b32 %r12351, %r7339, %r7340, %r70;
	// inline asm
	ld.local.u32 	%r7343, [%rd34];
	ld.local.u32 	%r7344, [%rd7];
	// inline asm
	prmt.b32 %r12352, %r7343, %r7344, %r70;
	// inline asm
	ld.local.u32 	%r7347, [%rd7];
	ld.local.u32 	%r7348, [%rd33+8];
	// inline asm
	prmt.b32 %r12353, %r7347, %r7348, %r70;
	// inline asm
	ld.local.v2.u32 	{%r7467, %r7468}, [%rd33+4];
	// inline asm
	prmt.b32 %r12346, %r7468, %r7467, %r70;
	// inline asm
	ld.local.u32 	%r7355, [%rd33+4];
	ld.local.u32 	%r7356, [%rd33];
	// inline asm
	prmt.b32 %r12347, %r7355, %r7356, %r70;
	// inline asm
	ld.local.u32 	%r7359, [%rd33];
	ld.local.u32 	%r7360, [%rd6];
	// inline asm
	prmt.b32 %r12348, %r7359, %r7360, %r70;
	// inline asm
	ld.local.u32 	%r7363, [%rd6];
	ld.local.u32 	%r7364, [%rd32+8];
	// inline asm
	prmt.b32 %r12349, %r7363, %r7364, %r70;
	// inline asm
	ld.local.v2.u32 	{%r7469, %r7470}, [%rd32+4];
	// inline asm
	prmt.b32 %r12342, %r7470, %r7469, %r70;
	// inline asm
	ld.local.u32 	%r7371, [%rd32+4];
	ld.local.u32 	%r7372, [%rd32];
	// inline asm
	prmt.b32 %r12343, %r7371, %r7372, %r70;
	// inline asm
	ld.local.u32 	%r7375, [%rd32];
	ld.local.u32 	%r7376, [%rd5];
	// inline asm
	prmt.b32 %r12344, %r7375, %r7376, %r70;
	// inline asm
	ld.local.u32 	%r7379, [%rd5];
	ld.local.u32 	%r7380, [%rd31+8];
	// inline asm
	prmt.b32 %r12345, %r7379, %r7380, %r70;
	// inline asm
	ld.local.v2.u32 	{%r7471, %r7472}, [%rd31+4];
	// inline asm
	prmt.b32 %r7382, %r7472, %r7471, %r70;
	// inline asm
	st.local.u32 	[%rd35+8], %r7382;
	ld.local.u32 	%r7387, [%rd31+4];
	ld.local.u32 	%r7388, [%rd31];
	// inline asm
	prmt.b32 %r7386, %r7387, %r7388, %r70;
	// inline asm
	st.local.u32 	[%rd35+4], %r7386;
	ld.local.u32 	%r7391, [%rd31];
	ld.local.u32 	%r7392, [%rd4];
	// inline asm
	prmt.b32 %r7390, %r7391, %r7392, %r70;
	// inline asm
	st.local.u32 	[%rd35], %r7390;
	ld.local.u32 	%r7395, [%rd4];
	ld.local.u32 	%r7396, [%rd30+8];
	// inline asm
	prmt.b32 %r7394, %r7395, %r7396, %r70;
	// inline asm
	st.local.u32 	[%rd8], %r7394;
	ld.local.v2.u32 	{%r7473, %r7474}, [%rd30+4];
	// inline asm
	prmt.b32 %r7398, %r7474, %r7473, %r70;
	// inline asm
	st.local.u32 	[%rd34+8], %r7398;
	ld.local.u32 	%r7403, [%rd30+4];
	ld.local.u32 	%r7404, [%rd30];
	// inline asm
	prmt.b32 %r7402, %r7403, %r7404, %r70;
	// inline asm
	st.local.u32 	[%rd34+4], %r7402;
	ld.local.u32 	%r7407, [%rd30];
	ld.local.u32 	%r7408, [%rd3];
	// inline asm
	prmt.b32 %r7406, %r7407, %r7408, %r70;
	// inline asm
	st.local.u32 	[%rd34], %r7406;
	ld.local.u32 	%r7411, [%rd3];
	ld.local.u32 	%r7412, [%rd29+8];
	// inline asm
	prmt.b32 %r7410, %r7411, %r7412, %r70;
	// inline asm
	st.local.u32 	[%rd7], %r7410;
	ld.local.v2.u32 	{%r7475, %r7476}, [%rd29+4];
	// inline asm
	prmt.b32 %r7414, %r7476, %r7475, %r70;
	// inline asm
	st.local.u32 	[%rd33+8], %r7414;
	ld.local.u32 	%r7419, [%rd29+4];
	ld.local.u32 	%r7420, [%rd29];
	// inline asm
	prmt.b32 %r7418, %r7419, %r7420, %r70;
	// inline asm
	st.local.u32 	[%rd33+4], %r7418;
	ld.local.u32 	%r7423, [%rd29];
	ld.local.u32 	%r7424, [%rd2];
	// inline asm
	prmt.b32 %r7422, %r7423, %r7424, %r70;
	// inline asm
	st.local.u32 	[%rd33], %r7422;
	ld.local.u32 	%r7427, [%rd2];
	ld.local.u32 	%r7428, [%rd28+8];
	// inline asm
	prmt.b32 %r7426, %r7427, %r7428, %r70;
	// inline asm
	st.local.u32 	[%rd6], %r7426;
	ld.local.v2.u32 	{%r7477, %r7478}, [%rd28+4];
	// inline asm
	prmt.b32 %r7430, %r7478, %r7477, %r70;
	// inline asm
	st.local.u32 	[%rd32+8], %r7430;
	ld.local.u32 	%r7435, [%rd28+4];
	ld.local.u32 	%r7436, [%rd28];
	// inline asm
	prmt.b32 %r7434, %r7435, %r7436, %r70;
	// inline asm
	st.local.u32 	[%rd32+4], %r7434;
	ld.local.u32 	%r7439, [%rd28];
	ld.local.u32 	%r7440, [%rd1];
	// inline asm
	prmt.b32 %r7438, %r7439, %r7440, %r70;
	// inline asm
	st.local.u32 	[%rd32], %r7438;
	ld.local.u32 	%r7443, [%rd1];
	// inline asm
	prmt.b32 %r7442, %r7443, %r12340, %r70;
	// inline asm
	st.local.u32 	[%rd5], %r7442;
	st.local.v2.u32 	[%rd31+4], {%r12340, %r12340};
	st.local.u32 	[%rd31], %r12340;
	st.local.u32 	[%rd4], %r12340;
	st.local.v2.u32 	[%rd30+4], {%r12340, %r12340};
	st.local.u32 	[%rd30], %r12340;
	st.local.u32 	[%rd3], %r12340;
	st.local.v2.u32 	[%rd29+4], {%r12340, %r12340};
	st.local.u32 	[%rd29], %r12340;
	st.local.u32 	[%rd2], %r12340;
	st.local.v2.u32 	[%rd28+4], {%r12340, %r12340};
	st.local.u32 	[%rd28], %r12340;
	st.local.u32 	[%rd1], %r12340;
	mov.u32 	%r12341, %r12340;
	mov.u32 	%r12358, %r12340;
	mov.u32 	%r12359, %r12340;
	mov.u32 	%r12360, %r12340;
	bra.uni 	BB4_408;

BB4_345:
	setp.gt.s32	%p220, %r4952, 11;
	@%p220 bra 	BB4_353;

	setp.gt.s32	%p226, %r4952, 9;
	@%p226 bra 	BB4_350;

	setp.eq.s32	%p229, %r4952, 8;
	@%p229 bra 	BB4_402;
	bra.uni 	BB4_348;

BB4_402:
	mov.u32 	%r12340, 0;
	// inline asm
	prmt.b32 %r12353, %r12340, %r7, %r70;
	// inline asm
	ld.local.v2.u32 	{%r8819, %r8820}, [%rd35+4];
	// inline asm
	prmt.b32 %r12346, %r8820, %r8819, %r70;
	// inline asm
	ld.local.u32 	%r8671, [%rd35+4];
	ld.local.u32 	%r8672, [%rd35];
	// inline asm
	prmt.b32 %r12347, %r8671, %r8672, %r70;
	// inline asm
	ld.local.u32 	%r8675, [%rd35];
	ld.local.u32 	%r8676, [%rd8];
	// inline asm
	prmt.b32 %r12348, %r8675, %r8676, %r70;
	// inline asm
	ld.local.u32 	%r8679, [%rd8];
	ld.local.u32 	%r8680, [%rd34+8];
	// inline asm
	prmt.b32 %r12349, %r8679, %r8680, %r70;
	// inline asm
	ld.local.v2.u32 	{%r8821, %r8822}, [%rd34+4];
	// inline asm
	prmt.b32 %r12342, %r8822, %r8821, %r70;
	// inline asm
	ld.local.u32 	%r8687, [%rd34+4];
	ld.local.u32 	%r8688, [%rd34];
	// inline asm
	prmt.b32 %r12343, %r8687, %r8688, %r70;
	// inline asm
	ld.local.u32 	%r8691, [%rd34];
	ld.local.u32 	%r8692, [%rd7];
	// inline asm
	prmt.b32 %r12344, %r8691, %r8692, %r70;
	// inline asm
	ld.local.u32 	%r8695, [%rd7];
	ld.local.u32 	%r8696, [%rd33+8];
	// inline asm
	prmt.b32 %r12345, %r8695, %r8696, %r70;
	// inline asm
	ld.local.v2.u32 	{%r8823, %r8824}, [%rd33+4];
	// inline asm
	prmt.b32 %r8698, %r8824, %r8823, %r70;
	// inline asm
	st.local.u32 	[%rd35+8], %r8698;
	ld.local.u32 	%r8703, [%rd33+4];
	ld.local.u32 	%r8704, [%rd33];
	// inline asm
	prmt.b32 %r8702, %r8703, %r8704, %r70;
	// inline asm
	st.local.u32 	[%rd35+4], %r8702;
	ld.local.u32 	%r8707, [%rd33];
	ld.local.u32 	%r8708, [%rd6];
	// inline asm
	prmt.b32 %r8706, %r8707, %r8708, %r70;
	// inline asm
	st.local.u32 	[%rd35], %r8706;
	ld.local.u32 	%r8711, [%rd6];
	ld.local.u32 	%r8712, [%rd32+8];
	// inline asm
	prmt.b32 %r8710, %r8711, %r8712, %r70;
	// inline asm
	st.local.u32 	[%rd8], %r8710;
	ld.local.v2.u32 	{%r8825, %r8826}, [%rd32+4];
	// inline asm
	prmt.b32 %r8714, %r8826, %r8825, %r70;
	// inline asm
	st.local.u32 	[%rd34+8], %r8714;
	ld.local.u32 	%r8719, [%rd32+4];
	ld.local.u32 	%r8720, [%rd32];
	// inline asm
	prmt.b32 %r8718, %r8719, %r8720, %r70;
	// inline asm
	st.local.u32 	[%rd34+4], %r8718;
	ld.local.u32 	%r8723, [%rd32];
	ld.local.u32 	%r8724, [%rd5];
	// inline asm
	prmt.b32 %r8722, %r8723, %r8724, %r70;
	// inline asm
	st.local.u32 	[%rd34], %r8722;
	ld.local.u32 	%r8727, [%rd5];
	ld.local.u32 	%r8728, [%rd31+8];
	// inline asm
	prmt.b32 %r8726, %r8727, %r8728, %r70;
	// inline asm
	st.local.u32 	[%rd7], %r8726;
	ld.local.v2.u32 	{%r8827, %r8828}, [%rd31+4];
	// inline asm
	prmt.b32 %r8730, %r8828, %r8827, %r70;
	// inline asm
	st.local.u32 	[%rd33+8], %r8730;
	ld.local.u32 	%r8735, [%rd31+4];
	ld.local.u32 	%r8736, [%rd31];
	// inline asm
	prmt.b32 %r8734, %r8735, %r8736, %r70;
	// inline asm
	st.local.u32 	[%rd33+4], %r8734;
	ld.local.u32 	%r8739, [%rd31];
	ld.local.u32 	%r8740, [%rd4];
	// inline asm
	prmt.b32 %r8738, %r8739, %r8740, %r70;
	// inline asm
	st.local.u32 	[%rd33], %r8738;
	ld.local.u32 	%r8743, [%rd4];
	ld.local.u32 	%r8744, [%rd30+8];
	// inline asm
	prmt.b32 %r8742, %r8743, %r8744, %r70;
	// inline asm
	st.local.u32 	[%rd6], %r8742;
	ld.local.v2.u32 	{%r8829, %r8830}, [%rd30+4];
	// inline asm
	prmt.b32 %r8746, %r8830, %r8829, %r70;
	// inline asm
	st.local.u32 	[%rd32+8], %r8746;
	ld.local.u32 	%r8751, [%rd30+4];
	ld.local.u32 	%r8752, [%rd30];
	// inline asm
	prmt.b32 %r8750, %r8751, %r8752, %r70;
	// inline asm
	st.local.u32 	[%rd32+4], %r8750;
	ld.local.u32 	%r8755, [%rd30];
	ld.local.u32 	%r8756, [%rd3];
	// inline asm
	prmt.b32 %r8754, %r8755, %r8756, %r70;
	// inline asm
	st.local.u32 	[%rd32], %r8754;
	ld.local.u32 	%r8759, [%rd3];
	ld.local.u32 	%r8760, [%rd29+8];
	// inline asm
	prmt.b32 %r8758, %r8759, %r8760, %r70;
	// inline asm
	st.local.u32 	[%rd5], %r8758;
	ld.local.v2.u32 	{%r8831, %r8832}, [%rd29+4];
	// inline asm
	prmt.b32 %r8762, %r8832, %r8831, %r70;
	// inline asm
	st.local.u32 	[%rd31+8], %r8762;
	ld.local.u32 	%r8767, [%rd29+4];
	ld.local.u32 	%r8768, [%rd29];
	// inline asm
	prmt.b32 %r8766, %r8767, %r8768, %r70;
	// inline asm
	st.local.u32 	[%rd31+4], %r8766;
	ld.local.u32 	%r8771, [%rd29];
	ld.local.u32 	%r8772, [%rd2];
	// inline asm
	prmt.b32 %r8770, %r8771, %r8772, %r70;
	// inline asm
	st.local.u32 	[%rd31], %r8770;
	ld.local.u32 	%r8775, [%rd2];
	ld.local.u32 	%r8776, [%rd28+8];
	// inline asm
	prmt.b32 %r8774, %r8775, %r8776, %r70;
	// inline asm
	st.local.u32 	[%rd4], %r8774;
	ld.local.v2.u32 	{%r8833, %r8834}, [%rd28+4];
	// inline asm
	prmt.b32 %r8778, %r8834, %r8833, %r70;
	// inline asm
	st.local.u32 	[%rd30+8], %r8778;
	ld.local.u32 	%r8783, [%rd28+4];
	ld.local.u32 	%r8784, [%rd28];
	// inline asm
	prmt.b32 %r8782, %r8783, %r8784, %r70;
	// inline asm
	st.local.u32 	[%rd30+4], %r8782;
	ld.local.u32 	%r8787, [%rd28];
	ld.local.u32 	%r8788, [%rd1];
	// inline asm
	prmt.b32 %r8786, %r8787, %r8788, %r70;
	// inline asm
	st.local.u32 	[%rd30], %r8786;
	ld.local.u32 	%r8791, [%rd1];
	// inline asm
	prmt.b32 %r8790, %r8791, %r12340, %r70;
	// inline asm
	st.local.u32 	[%rd3], %r8790;
	st.local.v2.u32 	[%rd29+4], {%r12340, %r12340};
	st.local.u32 	[%rd29], %r12340;
	st.local.u32 	[%rd2], %r12340;
	st.local.v2.u32 	[%rd28+4], {%r12340, %r12340};
	st.local.u32 	[%rd28], %r12340;
	st.local.u32 	[%rd1], %r12340;
	mov.u32 	%r12341, %r12340;
	mov.u32 	%r12350, %r12340;
	mov.u32 	%r12351, %r12340;
	mov.u32 	%r12352, %r12340;
	bra.uni 	BB4_406;

BB4_376:
	setp.gt.s32	%p197, %r4952, 27;
	@%p197 bra 	BB4_384;

	setp.gt.s32	%p203, %r4952, 25;
	@%p203 bra 	BB4_381;

	setp.eq.s32	%p206, %r4952, 24;
	@%p206 bra 	BB4_394;
	bra.uni 	BB4_379;

BB4_394:
	mov.u32 	%r12340, 0;
	// inline asm
	prmt.b32 %r12369, %r12340, %r7, %r70;
	// inline asm
	ld.local.v2.u32 	{%r6171, %r6172}, [%rd35+4];
	// inline asm
	prmt.b32 %r12362, %r6172, %r6171, %r70;
	// inline asm
	ld.local.u32 	%r6039, [%rd35+4];
	ld.local.u32 	%r6040, [%rd35];
	// inline asm
	prmt.b32 %r12363, %r6039, %r6040, %r70;
	// inline asm
	ld.local.u32 	%r6043, [%rd35];
	ld.local.u32 	%r6044, [%rd8];
	// inline asm
	prmt.b32 %r12364, %r6043, %r6044, %r70;
	// inline asm
	ld.local.u32 	%r6047, [%rd8];
	ld.local.u32 	%r6048, [%rd34+8];
	// inline asm
	prmt.b32 %r12365, %r6047, %r6048, %r70;
	// inline asm
	ld.local.v2.u32 	{%r6173, %r6174}, [%rd34+4];
	// inline asm
	prmt.b32 %r12358, %r6174, %r6173, %r70;
	// inline asm
	ld.local.u32 	%r6055, [%rd34+4];
	ld.local.u32 	%r6056, [%rd34];
	// inline asm
	prmt.b32 %r12359, %r6055, %r6056, %r70;
	// inline asm
	ld.local.u32 	%r6059, [%rd34];
	ld.local.u32 	%r6060, [%rd7];
	// inline asm
	prmt.b32 %r12360, %r6059, %r6060, %r70;
	// inline asm
	ld.local.u32 	%r6063, [%rd7];
	ld.local.u32 	%r6064, [%rd33+8];
	// inline asm
	prmt.b32 %r12361, %r6063, %r6064, %r70;
	// inline asm
	ld.local.v2.u32 	{%r6175, %r6176}, [%rd33+4];
	// inline asm
	prmt.b32 %r12354, %r6176, %r6175, %r70;
	// inline asm
	ld.local.u32 	%r6071, [%rd33+4];
	ld.local.u32 	%r6072, [%rd33];
	// inline asm
	prmt.b32 %r12355, %r6071, %r6072, %r70;
	// inline asm
	ld.local.u32 	%r6075, [%rd33];
	ld.local.u32 	%r6076, [%rd6];
	// inline asm
	prmt.b32 %r12356, %r6075, %r6076, %r70;
	// inline asm
	ld.local.u32 	%r6079, [%rd6];
	ld.local.u32 	%r6080, [%rd32+8];
	// inline asm
	prmt.b32 %r12357, %r6079, %r6080, %r70;
	// inline asm
	ld.local.v2.u32 	{%r6177, %r6178}, [%rd32+4];
	// inline asm
	prmt.b32 %r12350, %r6178, %r6177, %r70;
	// inline asm
	ld.local.u32 	%r6087, [%rd32+4];
	ld.local.u32 	%r6088, [%rd32];
	// inline asm
	prmt.b32 %r12351, %r6087, %r6088, %r70;
	// inline asm
	ld.local.u32 	%r6091, [%rd32];
	ld.local.u32 	%r6092, [%rd5];
	// inline asm
	prmt.b32 %r12352, %r6091, %r6092, %r70;
	// inline asm
	ld.local.u32 	%r6095, [%rd5];
	ld.local.u32 	%r6096, [%rd31+8];
	// inline asm
	prmt.b32 %r12353, %r6095, %r6096, %r70;
	// inline asm
	ld.local.v2.u32 	{%r6179, %r6180}, [%rd31+4];
	// inline asm
	prmt.b32 %r12346, %r6180, %r6179, %r70;
	// inline asm
	ld.local.u32 	%r6103, [%rd31+4];
	ld.local.u32 	%r6104, [%rd31];
	// inline asm
	prmt.b32 %r12347, %r6103, %r6104, %r70;
	// inline asm
	ld.local.u32 	%r6107, [%rd31];
	ld.local.u32 	%r6108, [%rd4];
	// inline asm
	prmt.b32 %r12348, %r6107, %r6108, %r70;
	// inline asm
	ld.local.u32 	%r6111, [%rd4];
	ld.local.u32 	%r6112, [%rd30+8];
	// inline asm
	prmt.b32 %r12349, %r6111, %r6112, %r70;
	// inline asm
	ld.local.v2.u32 	{%r6181, %r6182}, [%rd30+4];
	// inline asm
	prmt.b32 %r12342, %r6182, %r6181, %r70;
	// inline asm
	ld.local.u32 	%r6119, [%rd30+4];
	ld.local.u32 	%r6120, [%rd30];
	// inline asm
	prmt.b32 %r12343, %r6119, %r6120, %r70;
	// inline asm
	ld.local.u32 	%r6123, [%rd30];
	ld.local.u32 	%r6124, [%rd3];
	// inline asm
	prmt.b32 %r12344, %r6123, %r6124, %r70;
	// inline asm
	ld.local.u32 	%r6127, [%rd3];
	ld.local.u32 	%r6128, [%rd29+8];
	// inline asm
	prmt.b32 %r12345, %r6127, %r6128, %r70;
	// inline asm
	ld.local.v2.u32 	{%r6183, %r6184}, [%rd29+4];
	// inline asm
	prmt.b32 %r6130, %r6184, %r6183, %r70;
	// inline asm
	st.local.u32 	[%rd35+8], %r6130;
	ld.local.u32 	%r6135, [%rd29+4];
	ld.local.u32 	%r6136, [%rd29];
	// inline asm
	prmt.b32 %r6134, %r6135, %r6136, %r70;
	// inline asm
	st.local.u32 	[%rd35+4], %r6134;
	ld.local.u32 	%r6139, [%rd29];
	ld.local.u32 	%r6140, [%rd2];
	// inline asm
	prmt.b32 %r6138, %r6139, %r6140, %r70;
	// inline asm
	st.local.u32 	[%rd35], %r6138;
	ld.local.u32 	%r6143, [%rd2];
	ld.local.u32 	%r6144, [%rd28+8];
	// inline asm
	prmt.b32 %r6142, %r6143, %r6144, %r70;
	// inline asm
	st.local.u32 	[%rd8], %r6142;
	ld.local.v2.u32 	{%r6185, %r6186}, [%rd28+4];
	// inline asm
	prmt.b32 %r6146, %r6186, %r6185, %r70;
	// inline asm
	st.local.u32 	[%rd34+8], %r6146;
	ld.local.u32 	%r6151, [%rd28+4];
	ld.local.u32 	%r6152, [%rd28];
	// inline asm
	prmt.b32 %r6150, %r6151, %r6152, %r70;
	// inline asm
	st.local.u32 	[%rd34+4], %r6150;
	ld.local.u32 	%r6155, [%rd28];
	ld.local.u32 	%r6156, [%rd1];
	// inline asm
	prmt.b32 %r6154, %r6155, %r6156, %r70;
	// inline asm
	st.local.u32 	[%rd34], %r6154;
	ld.local.u32 	%r6159, [%rd1];
	// inline asm
	prmt.b32 %r6158, %r6159, %r12340, %r70;
	// inline asm
	st.local.u32 	[%rd7], %r6158;
	st.local.v2.u32 	[%rd33+4], {%r12340, %r12340};
	st.local.u32 	[%rd33], %r12340;
	st.local.u32 	[%rd6], %r12340;
	st.local.v2.u32 	[%rd32+4], {%r12340, %r12340};
	st.local.u32 	[%rd32], %r12340;
	st.local.u32 	[%rd5], %r12340;
	st.local.v2.u32 	[%rd31+4], {%r12340, %r12340};
	st.local.u32 	[%rd31], %r12340;
	st.local.u32 	[%rd4], %r12340;
	st.local.v2.u32 	[%rd30+4], {%r12340, %r12340};
	st.local.u32 	[%rd30], %r12340;
	st.local.u32 	[%rd3], %r12340;
	st.local.v2.u32 	[%rd29+4], {%r12340, %r12340};
	st.local.u32 	[%rd29], %r12340;
	st.local.u32 	[%rd2], %r12340;
	st.local.v2.u32 	[%rd28+4], {%r12340, %r12340};
	st.local.u32 	[%rd28], %r12340;
	st.local.u32 	[%rd1], %r12340;
	mov.u32 	%r12341, %r12340;
	mov.u32 	%r12366, %r12340;
	mov.u32 	%r12367, %r12340;
	mov.u32 	%r12368, %r12340;
	bra.uni 	BB4_410;

BB4_338:
	setp.gt.s32	%p232, %r4952, 5;
	@%p232 bra 	BB4_342;

	setp.eq.s32	%p235, %r4952, 4;
	@%p235 bra 	BB4_404;
	bra.uni 	BB4_340;

BB4_404:
	mov.u32 	%r12340, 0;
	// inline asm
	prmt.b32 %r12349, %r12340, %r7, %r70;
	// inline asm
	ld.local.v2.u32 	{%r9521, %r9522}, [%rd35+4];
	// inline asm
	prmt.b32 %r12342, %r9522, %r9521, %r70;
	// inline asm
	ld.local.u32 	%r9369, [%rd35+4];
	ld.local.u32 	%r9370, [%rd35];
	// inline asm
	prmt.b32 %r12343, %r9369, %r9370, %r70;
	// inline asm
	ld.local.u32 	%r9373, [%rd35];
	ld.local.u32 	%r9374, [%rd8];
	// inline asm
	prmt.b32 %r12344, %r9373, %r9374, %r70;
	// inline asm
	ld.local.u32 	%r9377, [%rd8];
	ld.local.u32 	%r9378, [%rd34+8];
	// inline asm
	prmt.b32 %r12345, %r9377, %r9378, %r70;
	// inline asm
	ld.local.v2.u32 	{%r9523, %r9524}, [%rd34+4];
	// inline asm
	prmt.b32 %r9380, %r9524, %r9523, %r70;
	// inline asm
	st.local.u32 	[%rd35+8], %r9380;
	ld.local.u32 	%r9385, [%rd34+4];
	ld.local.u32 	%r9386, [%rd34];
	// inline asm
	prmt.b32 %r9384, %r9385, %r9386, %r70;
	// inline asm
	st.local.u32 	[%rd35+4], %r9384;
	ld.local.u32 	%r9389, [%rd34];
	ld.local.u32 	%r9390, [%rd7];
	// inline asm
	prmt.b32 %r9388, %r9389, %r9390, %r70;
	// inline asm
	st.local.u32 	[%rd35], %r9388;
	ld.local.u32 	%r9393, [%rd7];
	ld.local.u32 	%r9394, [%rd33+8];
	// inline asm
	prmt.b32 %r9392, %r9393, %r9394, %r70;
	// inline asm
	st.local.u32 	[%rd8], %r9392;
	ld.local.v2.u32 	{%r9525, %r9526}, [%rd33+4];
	// inline asm
	prmt.b32 %r9396, %r9526, %r9525, %r70;
	// inline asm
	st.local.u32 	[%rd34+8], %r9396;
	ld.local.u32 	%r9401, [%rd33+4];
	ld.local.u32 	%r9402, [%rd33];
	// inline asm
	prmt.b32 %r9400, %r9401, %r9402, %r70;
	// inline asm
	st.local.u32 	[%rd34+4], %r9400;
	ld.local.u32 	%r9405, [%rd33];
	ld.local.u32 	%r9406, [%rd6];
	// inline asm
	prmt.b32 %r9404, %r9405, %r9406, %r70;
	// inline asm
	st.local.u32 	[%rd34], %r9404;
	ld.local.u32 	%r9409, [%rd6];
	ld.local.u32 	%r9410, [%rd32+8];
	// inline asm
	prmt.b32 %r9408, %r9409, %r9410, %r70;
	// inline asm
	st.local.u32 	[%rd7], %r9408;
	ld.local.v2.u32 	{%r9527, %r9528}, [%rd32+4];
	// inline asm
	prmt.b32 %r9412, %r9528, %r9527, %r70;
	// inline asm
	st.local.u32 	[%rd33+8], %r9412;
	ld.local.u32 	%r9417, [%rd32+4];
	ld.local.u32 	%r9418, [%rd32];
	// inline asm
	prmt.b32 %r9416, %r9417, %r9418, %r70;
	// inline asm
	st.local.u32 	[%rd33+4], %r9416;
	ld.local.u32 	%r9421, [%rd32];
	ld.local.u32 	%r9422, [%rd5];
	// inline asm
	prmt.b32 %r9420, %r9421, %r9422, %r70;
	// inline asm
	st.local.u32 	[%rd33], %r9420;
	ld.local.u32 	%r9425, [%rd5];
	ld.local.u32 	%r9426, [%rd31+8];
	// inline asm
	prmt.b32 %r9424, %r9425, %r9426, %r70;
	// inline asm
	st.local.u32 	[%rd6], %r9424;
	ld.local.v2.u32 	{%r9529, %r9530}, [%rd31+4];
	// inline asm
	prmt.b32 %r9428, %r9530, %r9529, %r70;
	// inline asm
	st.local.u32 	[%rd32+8], %r9428;
	ld.local.u32 	%r9433, [%rd31+4];
	ld.local.u32 	%r9434, [%rd31];
	// inline asm
	prmt.b32 %r9432, %r9433, %r9434, %r70;
	// inline asm
	st.local.u32 	[%rd32+4], %r9432;
	ld.local.u32 	%r9437, [%rd31];
	ld.local.u32 	%r9438, [%rd4];
	// inline asm
	prmt.b32 %r9436, %r9437, %r9438, %r70;
	// inline asm
	st.local.u32 	[%rd32], %r9436;
	ld.local.u32 	%r9441, [%rd4];
	ld.local.u32 	%r9442, [%rd30+8];
	// inline asm
	prmt.b32 %r9440, %r9441, %r9442, %r70;
	// inline asm
	st.local.u32 	[%rd5], %r9440;
	ld.local.v2.u32 	{%r9531, %r9532}, [%rd30+4];
	// inline asm
	prmt.b32 %r9444, %r9532, %r9531, %r70;
	// inline asm
	st.local.u32 	[%rd31+8], %r9444;
	ld.local.u32 	%r9449, [%rd30+4];
	ld.local.u32 	%r9450, [%rd30];
	// inline asm
	prmt.b32 %r9448, %r9449, %r9450, %r70;
	// inline asm
	st.local.u32 	[%rd31+4], %r9448;
	ld.local.u32 	%r9453, [%rd30];
	ld.local.u32 	%r9454, [%rd3];
	// inline asm
	prmt.b32 %r9452, %r9453, %r9454, %r70;
	// inline asm
	st.local.u32 	[%rd31], %r9452;
	ld.local.u32 	%r9457, [%rd3];
	ld.local.u32 	%r9458, [%rd29+8];
	// inline asm
	prmt.b32 %r9456, %r9457, %r9458, %r70;
	// inline asm
	st.local.u32 	[%rd4], %r9456;
	ld.local.v2.u32 	{%r9533, %r9534}, [%rd29+4];
	// inline asm
	prmt.b32 %r9460, %r9534, %r9533, %r70;
	// inline asm
	st.local.u32 	[%rd30+8], %r9460;
	ld.local.u32 	%r9465, [%rd29+4];
	ld.local.u32 	%r9466, [%rd29];
	// inline asm
	prmt.b32 %r9464, %r9465, %r9466, %r70;
	// inline asm
	st.local.u32 	[%rd30+4], %r9464;
	ld.local.u32 	%r9469, [%rd29];
	ld.local.u32 	%r9470, [%rd2];
	// inline asm
	prmt.b32 %r9468, %r9469, %r9470, %r70;
	// inline asm
	st.local.u32 	[%rd30], %r9468;
	ld.local.u32 	%r9473, [%rd2];
	ld.local.u32 	%r9474, [%rd28+8];
	// inline asm
	prmt.b32 %r9472, %r9473, %r9474, %r70;
	// inline asm
	st.local.u32 	[%rd3], %r9472;
	ld.local.v2.u32 	{%r9535, %r9536}, [%rd28+4];
	// inline asm
	prmt.b32 %r9476, %r9536, %r9535, %r70;
	// inline asm
	st.local.u32 	[%rd29+8], %r9476;
	ld.local.u32 	%r9481, [%rd28+4];
	ld.local.u32 	%r9482, [%rd28];
	// inline asm
	prmt.b32 %r9480, %r9481, %r9482, %r70;
	// inline asm
	st.local.u32 	[%rd29+4], %r9480;
	ld.local.u32 	%r9485, [%rd28];
	ld.local.u32 	%r9486, [%rd1];
	// inline asm
	prmt.b32 %r9484, %r9485, %r9486, %r70;
	// inline asm
	st.local.u32 	[%rd29], %r9484;
	ld.local.u32 	%r9489, [%rd1];
	// inline asm
	prmt.b32 %r9488, %r9489, %r12340, %r70;
	// inline asm
	st.local.u32 	[%rd2], %r9488;
	st.local.v2.u32 	[%rd28+4], {%r12340, %r12340};
	st.local.u32 	[%rd28], %r12340;
	st.local.u32 	[%rd1], %r12340;
	mov.u32 	%r12341, %r12340;
	mov.u32 	%r12346, %r12340;
	mov.u32 	%r12347, %r12340;
	mov.u32 	%r12348, %r12340;
	bra.uni 	BB4_405;

BB4_369:
	setp.gt.s32	%p209, %r4952, 21;
	@%p209 bra 	BB4_373;

	setp.eq.s32	%p212, %r4952, 20;
	@%p212 bra 	BB4_396;
	bra.uni 	BB4_371;

BB4_396:
	mov.u32 	%r12340, 0;
	// inline asm
	prmt.b32 %r12365, %r12340, %r7, %r70;
	// inline asm
	ld.local.v2.u32 	{%r6809, %r6810}, [%rd35+4];
	// inline asm
	prmt.b32 %r12358, %r6810, %r6809, %r70;
	// inline asm
	ld.local.u32 	%r6673, [%rd35+4];
	ld.local.u32 	%r6674, [%rd35];
	// inline asm
	prmt.b32 %r12359, %r6673, %r6674, %r70;
	// inline asm
	ld.local.u32 	%r6677, [%rd35];
	ld.local.u32 	%r6678, [%rd8];
	// inline asm
	prmt.b32 %r12360, %r6677, %r6678, %r70;
	// inline asm
	ld.local.u32 	%r6681, [%rd8];
	ld.local.u32 	%r6682, [%rd34+8];
	// inline asm
	prmt.b32 %r12361, %r6681, %r6682, %r70;
	// inline asm
	ld.local.v2.u32 	{%r6811, %r6812}, [%rd34+4];
	// inline asm
	prmt.b32 %r12354, %r6812, %r6811, %r70;
	// inline asm
	ld.local.u32 	%r6689, [%rd34+4];
	ld.local.u32 	%r6690, [%rd34];
	// inline asm
	prmt.b32 %r12355, %r6689, %r6690, %r70;
	// inline asm
	ld.local.u32 	%r6693, [%rd34];
	ld.local.u32 	%r6694, [%rd7];
	// inline asm
	prmt.b32 %r12356, %r6693, %r6694, %r70;
	// inline asm
	ld.local.u32 	%r6697, [%rd7];
	ld.local.u32 	%r6698, [%rd33+8];
	// inline asm
	prmt.b32 %r12357, %r6697, %r6698, %r70;
	// inline asm
	ld.local.v2.u32 	{%r6813, %r6814}, [%rd33+4];
	// inline asm
	prmt.b32 %r12350, %r6814, %r6813, %r70;
	// inline asm
	ld.local.u32 	%r6705, [%rd33+4];
	ld.local.u32 	%r6706, [%rd33];
	// inline asm
	prmt.b32 %r12351, %r6705, %r6706, %r70;
	// inline asm
	ld.local.u32 	%r6709, [%rd33];
	ld.local.u32 	%r6710, [%rd6];
	// inline asm
	prmt.b32 %r12352, %r6709, %r6710, %r70;
	// inline asm
	ld.local.u32 	%r6713, [%rd6];
	ld.local.u32 	%r6714, [%rd32+8];
	// inline asm
	prmt.b32 %r12353, %r6713, %r6714, %r70;
	// inline asm
	ld.local.v2.u32 	{%r6815, %r6816}, [%rd32+4];
	// inline asm
	prmt.b32 %r12346, %r6816, %r6815, %r70;
	// inline asm
	ld.local.u32 	%r6721, [%rd32+4];
	ld.local.u32 	%r6722, [%rd32];
	// inline asm
	prmt.b32 %r12347, %r6721, %r6722, %r70;
	// inline asm
	ld.local.u32 	%r6725, [%rd32];
	ld.local.u32 	%r6726, [%rd5];
	// inline asm
	prmt.b32 %r12348, %r6725, %r6726, %r70;
	// inline asm
	ld.local.u32 	%r6729, [%rd5];
	ld.local.u32 	%r6730, [%rd31+8];
	// inline asm
	prmt.b32 %r12349, %r6729, %r6730, %r70;
	// inline asm
	ld.local.v2.u32 	{%r6817, %r6818}, [%rd31+4];
	// inline asm
	prmt.b32 %r12342, %r6818, %r6817, %r70;
	// inline asm
	ld.local.u32 	%r6737, [%rd31+4];
	ld.local.u32 	%r6738, [%rd31];
	// inline asm
	prmt.b32 %r12343, %r6737, %r6738, %r70;
	// inline asm
	ld.local.u32 	%r6741, [%rd31];
	ld.local.u32 	%r6742, [%rd4];
	// inline asm
	prmt.b32 %r12344, %r6741, %r6742, %r70;
	// inline asm
	ld.local.u32 	%r6745, [%rd4];
	ld.local.u32 	%r6746, [%rd30+8];
	// inline asm
	prmt.b32 %r12345, %r6745, %r6746, %r70;
	// inline asm
	ld.local.v2.u32 	{%r6819, %r6820}, [%rd30+4];
	// inline asm
	prmt.b32 %r6748, %r6820, %r6819, %r70;
	// inline asm
	st.local.u32 	[%rd35+8], %r6748;
	ld.local.u32 	%r6753, [%rd30+4];
	ld.local.u32 	%r6754, [%rd30];
	// inline asm
	prmt.b32 %r6752, %r6753, %r6754, %r70;
	// inline asm
	st.local.u32 	[%rd35+4], %r6752;
	ld.local.u32 	%r6757, [%rd30];
	ld.local.u32 	%r6758, [%rd3];
	// inline asm
	prmt.b32 %r6756, %r6757, %r6758, %r70;
	// inline asm
	st.local.u32 	[%rd35], %r6756;
	ld.local.u32 	%r6761, [%rd3];
	ld.local.u32 	%r6762, [%rd29+8];
	// inline asm
	prmt.b32 %r6760, %r6761, %r6762, %r70;
	// inline asm
	st.local.u32 	[%rd8], %r6760;
	ld.local.v2.u32 	{%r6821, %r6822}, [%rd29+4];
	// inline asm
	prmt.b32 %r6764, %r6822, %r6821, %r70;
	// inline asm
	st.local.u32 	[%rd34+8], %r6764;
	ld.local.u32 	%r6769, [%rd29+4];
	ld.local.u32 	%r6770, [%rd29];
	// inline asm
	prmt.b32 %r6768, %r6769, %r6770, %r70;
	// inline asm
	st.local.u32 	[%rd34+4], %r6768;
	ld.local.u32 	%r6773, [%rd29];
	ld.local.u32 	%r6774, [%rd2];
	// inline asm
	prmt.b32 %r6772, %r6773, %r6774, %r70;
	// inline asm
	st.local.u32 	[%rd34], %r6772;
	ld.local.u32 	%r6777, [%rd2];
	ld.local.u32 	%r6778, [%rd28+8];
	// inline asm
	prmt.b32 %r6776, %r6777, %r6778, %r70;
	// inline asm
	st.local.u32 	[%rd7], %r6776;
	ld.local.v2.u32 	{%r6823, %r6824}, [%rd28+4];
	// inline asm
	prmt.b32 %r6780, %r6824, %r6823, %r70;
	// inline asm
	st.local.u32 	[%rd33+8], %r6780;
	ld.local.u32 	%r6785, [%rd28+4];
	ld.local.u32 	%r6786, [%rd28];
	// inline asm
	prmt.b32 %r6784, %r6785, %r6786, %r70;
	// inline asm
	st.local.u32 	[%rd33+4], %r6784;
	ld.local.u32 	%r6789, [%rd28];
	ld.local.u32 	%r6790, [%rd1];
	// inline asm
	prmt.b32 %r6788, %r6789, %r6790, %r70;
	// inline asm
	st.local.u32 	[%rd33], %r6788;
	ld.local.u32 	%r6793, [%rd1];
	// inline asm
	prmt.b32 %r6792, %r6793, %r12340, %r70;
	// inline asm
	st.local.u32 	[%rd6], %r6792;
	st.local.v2.u32 	[%rd32+4], {%r12340, %r12340};
	st.local.u32 	[%rd32], %r12340;
	st.local.u32 	[%rd5], %r12340;
	st.local.v2.u32 	[%rd31+4], {%r12340, %r12340};
	st.local.u32 	[%rd31], %r12340;
	st.local.u32 	[%rd4], %r12340;
	st.local.v2.u32 	[%rd30+4], {%r12340, %r12340};
	st.local.u32 	[%rd30], %r12340;
	st.local.u32 	[%rd3], %r12340;
	st.local.v2.u32 	[%rd29+4], {%r12340, %r12340};
	st.local.u32 	[%rd29], %r12340;
	st.local.u32 	[%rd2], %r12340;
	st.local.v2.u32 	[%rd28+4], {%r12340, %r12340};
	st.local.u32 	[%rd28], %r12340;
	st.local.u32 	[%rd1], %r12340;
	mov.u32 	%r12341, %r12340;
	mov.u32 	%r12362, %r12340;
	mov.u32 	%r12363, %r12340;
	mov.u32 	%r12364, %r12340;
	bra.uni 	BB4_409;

BB4_353:
	setp.gt.s32	%p221, %r4952, 13;
	@%p221 bra 	BB4_357;

	setp.eq.s32	%p224, %r4952, 12;
	@%p224 bra 	BB4_400;
	bra.uni 	BB4_355;

BB4_400:
	mov.u32 	%r12340, 0;
	// inline asm
	prmt.b32 %r12357, %r12340, %r7, %r70;
	// inline asm
	ld.local.v2.u32 	{%r8133, %r8134}, [%rd35+4];
	// inline asm
	prmt.b32 %r12350, %r8134, %r8133, %r70;
	// inline asm
	ld.local.u32 	%r7989, [%rd35+4];
	ld.local.u32 	%r7990, [%rd35];
	// inline asm
	prmt.b32 %r12351, %r7989, %r7990, %r70;
	// inline asm
	ld.local.u32 	%r7993, [%rd35];
	ld.local.u32 	%r7994, [%rd8];
	// inline asm
	prmt.b32 %r12352, %r7993, %r7994, %r70;
	// inline asm
	ld.local.u32 	%r7997, [%rd8];
	ld.local.u32 	%r7998, [%rd34+8];
	// inline asm
	prmt.b32 %r12353, %r7997, %r7998, %r70;
	// inline asm
	ld.local.v2.u32 	{%r8135, %r8136}, [%rd34+4];
	// inline asm
	prmt.b32 %r12346, %r8136, %r8135, %r70;
	// inline asm
	ld.local.u32 	%r8005, [%rd34+4];
	ld.local.u32 	%r8006, [%rd34];
	// inline asm
	prmt.b32 %r12347, %r8005, %r8006, %r70;
	// inline asm
	ld.local.u32 	%r8009, [%rd34];
	ld.local.u32 	%r8010, [%rd7];
	// inline asm
	prmt.b32 %r12348, %r8009, %r8010, %r70;
	// inline asm
	ld.local.u32 	%r8013, [%rd7];
	ld.local.u32 	%r8014, [%rd33+8];
	// inline asm
	prmt.b32 %r12349, %r8013, %r8014, %r70;
	// inline asm
	ld.local.v2.u32 	{%r8137, %r8138}, [%rd33+4];
	// inline asm
	prmt.b32 %r12342, %r8138, %r8137, %r70;
	// inline asm
	ld.local.u32 	%r8021, [%rd33+4];
	ld.local.u32 	%r8022, [%rd33];
	// inline asm
	prmt.b32 %r12343, %r8021, %r8022, %r70;
	// inline asm
	ld.local.u32 	%r8025, [%rd33];
	ld.local.u32 	%r8026, [%rd6];
	// inline asm
	prmt.b32 %r12344, %r8025, %r8026, %r70;
	// inline asm
	ld.local.u32 	%r8029, [%rd6];
	ld.local.u32 	%r8030, [%rd32+8];
	// inline asm
	prmt.b32 %r12345, %r8029, %r8030, %r70;
	// inline asm
	ld.local.v2.u32 	{%r8139, %r8140}, [%rd32+4];
	// inline asm
	prmt.b32 %r8032, %r8140, %r8139, %r70;
	// inline asm
	st.local.u32 	[%rd35+8], %r8032;
	ld.local.u32 	%r8037, [%rd32+4];
	ld.local.u32 	%r8038, [%rd32];
	// inline asm
	prmt.b32 %r8036, %r8037, %r8038, %r70;
	// inline asm
	st.local.u32 	[%rd35+4], %r8036;
	ld.local.u32 	%r8041, [%rd32];
	ld.local.u32 	%r8042, [%rd5];
	// inline asm
	prmt.b32 %r8040, %r8041, %r8042, %r70;
	// inline asm
	st.local.u32 	[%rd35], %r8040;
	ld.local.u32 	%r8045, [%rd5];
	ld.local.u32 	%r8046, [%rd31+8];
	// inline asm
	prmt.b32 %r8044, %r8045, %r8046, %r70;
	// inline asm
	st.local.u32 	[%rd8], %r8044;
	ld.local.v2.u32 	{%r8141, %r8142}, [%rd31+4];
	// inline asm
	prmt.b32 %r8048, %r8142, %r8141, %r70;
	// inline asm
	st.local.u32 	[%rd34+8], %r8048;
	ld.local.u32 	%r8053, [%rd31+4];
	ld.local.u32 	%r8054, [%rd31];
	// inline asm
	prmt.b32 %r8052, %r8053, %r8054, %r70;
	// inline asm
	st.local.u32 	[%rd34+4], %r8052;
	ld.local.u32 	%r8057, [%rd31];
	ld.local.u32 	%r8058, [%rd4];
	// inline asm
	prmt.b32 %r8056, %r8057, %r8058, %r70;
	// inline asm
	st.local.u32 	[%rd34], %r8056;
	ld.local.u32 	%r8061, [%rd4];
	ld.local.u32 	%r8062, [%rd30+8];
	// inline asm
	prmt.b32 %r8060, %r8061, %r8062, %r70;
	// inline asm
	st.local.u32 	[%rd7], %r8060;
	ld.local.v2.u32 	{%r8143, %r8144}, [%rd30+4];
	// inline asm
	prmt.b32 %r8064, %r8144, %r8143, %r70;
	// inline asm
	st.local.u32 	[%rd33+8], %r8064;
	ld.local.u32 	%r8069, [%rd30+4];
	ld.local.u32 	%r8070, [%rd30];
	// inline asm
	prmt.b32 %r8068, %r8069, %r8070, %r70;
	// inline asm
	st.local.u32 	[%rd33+4], %r8068;
	ld.local.u32 	%r8073, [%rd30];
	ld.local.u32 	%r8074, [%rd3];
	// inline asm
	prmt.b32 %r8072, %r8073, %r8074, %r70;
	// inline asm
	st.local.u32 	[%rd33], %r8072;
	ld.local.u32 	%r8077, [%rd3];
	ld.local.u32 	%r8078, [%rd29+8];
	// inline asm
	prmt.b32 %r8076, %r8077, %r8078, %r70;
	// inline asm
	st.local.u32 	[%rd6], %r8076;
	ld.local.v2.u32 	{%r8145, %r8146}, [%rd29+4];
	// inline asm
	prmt.b32 %r8080, %r8146, %r8145, %r70;
	// inline asm
	st.local.u32 	[%rd32+8], %r8080;
	ld.local.u32 	%r8085, [%rd29+4];
	ld.local.u32 	%r8086, [%rd29];
	// inline asm
	prmt.b32 %r8084, %r8085, %r8086, %r70;
	// inline asm
	st.local.u32 	[%rd32+4], %r8084;
	ld.local.u32 	%r8089, [%rd29];
	ld.local.u32 	%r8090, [%rd2];
	// inline asm
	prmt.b32 %r8088, %r8089, %r8090, %r70;
	// inline asm
	st.local.u32 	[%rd32], %r8088;
	ld.local.u32 	%r8093, [%rd2];
	ld.local.u32 	%r8094, [%rd28+8];
	// inline asm
	prmt.b32 %r8092, %r8093, %r8094, %r70;
	// inline asm
	st.local.u32 	[%rd5], %r8092;
	ld.local.v2.u32 	{%r8147, %r8148}, [%rd28+4];
	// inline asm
	prmt.b32 %r8096, %r8148, %r8147, %r70;
	// inline asm
	st.local.u32 	[%rd31+8], %r8096;
	ld.local.u32 	%r8101, [%rd28+4];
	ld.local.u32 	%r8102, [%rd28];
	// inline asm
	prmt.b32 %r8100, %r8101, %r8102, %r70;
	// inline asm
	st.local.u32 	[%rd31+4], %r8100;
	ld.local.u32 	%r8105, [%rd28];
	ld.local.u32 	%r8106, [%rd1];
	// inline asm
	prmt.b32 %r8104, %r8105, %r8106, %r70;
	// inline asm
	st.local.u32 	[%rd31], %r8104;
	ld.local.u32 	%r8109, [%rd1];
	// inline asm
	prmt.b32 %r8108, %r8109, %r12340, %r70;
	// inline asm
	st.local.u32 	[%rd4], %r8108;
	st.local.v2.u32 	[%rd30+4], {%r12340, %r12340};
	st.local.u32 	[%rd30], %r12340;
	st.local.u32 	[%rd3], %r12340;
	st.local.v2.u32 	[%rd29+4], {%r12340, %r12340};
	st.local.u32 	[%rd29], %r12340;
	st.local.u32 	[%rd2], %r12340;
	st.local.v2.u32 	[%rd28+4], {%r12340, %r12340};
	st.local.u32 	[%rd28], %r12340;
	st.local.u32 	[%rd1], %r12340;
	mov.u32 	%r12341, %r12340;
	mov.u32 	%r12354, %r12340;
	mov.u32 	%r12355, %r12340;
	mov.u32 	%r12356, %r12340;
	bra.uni 	BB4_407;

BB4_384:
	setp.gt.s32	%p198, %r4952, 29;
	@%p198 bra 	BB4_388;

	setp.eq.s32	%p201, %r4952, 28;
	@%p201 bra 	BB4_392;
	bra.uni 	BB4_386;

BB4_392:
	mov.u32 	%r12340, 0;
	// inline asm
	prmt.b32 %r12373, %r12340, %r7, %r70;
	// inline asm
	ld.local.v2.u32 	{%r5549, %r5550}, [%rd35+4];
	// inline asm
	prmt.b32 %r12366, %r5550, %r5549, %r70;
	// inline asm
	ld.local.u32 	%r5421, [%rd35+4];
	ld.local.u32 	%r5422, [%rd35];
	// inline asm
	prmt.b32 %r12367, %r5421, %r5422, %r70;
	// inline asm
	ld.local.u32 	%r5425, [%rd35];
	ld.local.u32 	%r5426, [%rd8];
	// inline asm
	prmt.b32 %r12368, %r5425, %r5426, %r70;
	// inline asm
	ld.local.u32 	%r5429, [%rd8];
	ld.local.u32 	%r5430, [%rd34+8];
	// inline asm
	prmt.b32 %r12369, %r5429, %r5430, %r70;
	// inline asm
	ld.local.v2.u32 	{%r5551, %r5552}, [%rd34+4];
	// inline asm
	prmt.b32 %r12362, %r5552, %r5551, %r70;
	// inline asm
	ld.local.u32 	%r5437, [%rd34+4];
	ld.local.u32 	%r5438, [%rd34];
	// inline asm
	prmt.b32 %r12363, %r5437, %r5438, %r70;
	// inline asm
	ld.local.u32 	%r5441, [%rd34];
	ld.local.u32 	%r5442, [%rd7];
	// inline asm
	prmt.b32 %r12364, %r5441, %r5442, %r70;
	// inline asm
	ld.local.u32 	%r5445, [%rd7];
	ld.local.u32 	%r5446, [%rd33+8];
	// inline asm
	prmt.b32 %r12365, %r5445, %r5446, %r70;
	// inline asm
	ld.local.v2.u32 	{%r5553, %r5554}, [%rd33+4];
	// inline asm
	prmt.b32 %r12358, %r5554, %r5553, %r70;
	// inline asm
	ld.local.u32 	%r5453, [%rd33+4];
	ld.local.u32 	%r5454, [%rd33];
	// inline asm
	prmt.b32 %r12359, %r5453, %r5454, %r70;
	// inline asm
	ld.local.u32 	%r5457, [%rd33];
	ld.local.u32 	%r5458, [%rd6];
	// inline asm
	prmt.b32 %r12360, %r5457, %r5458, %r70;
	// inline asm
	ld.local.u32 	%r5461, [%rd6];
	ld.local.u32 	%r5462, [%rd32+8];
	// inline asm
	prmt.b32 %r12361, %r5461, %r5462, %r70;
	// inline asm
	ld.local.v2.u32 	{%r5555, %r5556}, [%rd32+4];
	// inline asm
	prmt.b32 %r12354, %r5556, %r5555, %r70;
	// inline asm
	ld.local.u32 	%r5469, [%rd32+4];
	ld.local.u32 	%r5470, [%rd32];
	// inline asm
	prmt.b32 %r12355, %r5469, %r5470, %r70;
	// inline asm
	ld.local.u32 	%r5473, [%rd32];
	ld.local.u32 	%r5474, [%rd5];
	// inline asm
	prmt.b32 %r12356, %r5473, %r5474, %r70;
	// inline asm
	ld.local.u32 	%r5477, [%rd5];
	ld.local.u32 	%r5478, [%rd31+8];
	// inline asm
	prmt.b32 %r12357, %r5477, %r5478, %r70;
	// inline asm
	ld.local.v2.u32 	{%r5557, %r5558}, [%rd31+4];
	// inline asm
	prmt.b32 %r12350, %r5558, %r5557, %r70;
	// inline asm
	ld.local.u32 	%r5485, [%rd31+4];
	ld.local.u32 	%r5486, [%rd31];
	// inline asm
	prmt.b32 %r12351, %r5485, %r5486, %r70;
	// inline asm
	ld.local.u32 	%r5489, [%rd31];
	ld.local.u32 	%r5490, [%rd4];
	// inline asm
	prmt.b32 %r12352, %r5489, %r5490, %r70;
	// inline asm
	ld.local.u32 	%r5493, [%rd4];
	ld.local.u32 	%r5494, [%rd30+8];
	// inline asm
	prmt.b32 %r12353, %r5493, %r5494, %r70;
	// inline asm
	ld.local.v2.u32 	{%r5559, %r5560}, [%rd30+4];
	// inline asm
	prmt.b32 %r12346, %r5560, %r5559, %r70;
	// inline asm
	ld.local.u32 	%r5501, [%rd30+4];
	ld.local.u32 	%r5502, [%rd30];
	// inline asm
	prmt.b32 %r12347, %r5501, %r5502, %r70;
	// inline asm
	ld.local.u32 	%r5505, [%rd30];
	ld.local.u32 	%r5506, [%rd3];
	// inline asm
	prmt.b32 %r12348, %r5505, %r5506, %r70;
	// inline asm
	ld.local.u32 	%r5509, [%rd3];
	ld.local.u32 	%r5510, [%rd29+8];
	// inline asm
	prmt.b32 %r12349, %r5509, %r5510, %r70;
	// inline asm
	ld.local.v2.u32 	{%r5561, %r5562}, [%rd29+4];
	// inline asm
	prmt.b32 %r12342, %r5562, %r5561, %r70;
	// inline asm
	ld.local.u32 	%r5517, [%rd29+4];
	ld.local.u32 	%r5518, [%rd29];
	// inline asm
	prmt.b32 %r12343, %r5517, %r5518, %r70;
	// inline asm
	ld.local.u32 	%r5521, [%rd29];
	ld.local.u32 	%r5522, [%rd2];
	// inline asm
	prmt.b32 %r12344, %r5521, %r5522, %r70;
	// inline asm
	ld.local.u32 	%r5525, [%rd2];
	ld.local.u32 	%r5526, [%rd28+8];
	// inline asm
	prmt.b32 %r12345, %r5525, %r5526, %r70;
	// inline asm
	ld.local.v2.u32 	{%r5563, %r5564}, [%rd28+4];
	// inline asm
	prmt.b32 %r5528, %r5564, %r5563, %r70;
	// inline asm
	st.local.u32 	[%rd35+8], %r5528;
	ld.local.u32 	%r5533, [%rd28+4];
	ld.local.u32 	%r5534, [%rd28];
	// inline asm
	prmt.b32 %r5532, %r5533, %r5534, %r70;
	// inline asm
	st.local.u32 	[%rd35+4], %r5532;
	ld.local.u32 	%r5537, [%rd28];
	ld.local.u32 	%r5538, [%rd1];
	// inline asm
	prmt.b32 %r5536, %r5537, %r5538, %r70;
	// inline asm
	st.local.u32 	[%rd35], %r5536;
	ld.local.u32 	%r5541, [%rd1];
	// inline asm
	prmt.b32 %r5540, %r5541, %r12340, %r70;
	// inline asm
	st.local.u32 	[%rd8], %r5540;
	st.local.v2.u32 	[%rd34+4], {%r12340, %r12340};
	st.local.u32 	[%rd34], %r12340;
	st.local.u32 	[%rd7], %r12340;
	st.local.v2.u32 	[%rd33+4], {%r12340, %r12340};
	st.local.u32 	[%rd33], %r12340;
	st.local.u32 	[%rd6], %r12340;
	st.local.v2.u32 	[%rd32+4], {%r12340, %r12340};
	st.local.u32 	[%rd32], %r12340;
	st.local.u32 	[%rd5], %r12340;
	st.local.v2.u32 	[%rd31+4], {%r12340, %r12340};
	st.local.u32 	[%rd31], %r12340;
	st.local.u32 	[%rd4], %r12340;
	st.local.v2.u32 	[%rd30+4], {%r12340, %r12340};
	st.local.u32 	[%rd30], %r12340;
	st.local.u32 	[%rd3], %r12340;
	st.local.v2.u32 	[%rd29+4], {%r12340, %r12340};
	st.local.u32 	[%rd29], %r12340;
	st.local.u32 	[%rd2], %r12340;
	st.local.v2.u32 	[%rd28+4], {%r12340, %r12340};
	st.local.u32 	[%rd28], %r12340;
	st.local.u32 	[%rd1], %r12340;
	mov.u32 	%r12341, %r12340;
	mov.u32 	%r12370, %r12340;
	mov.u32 	%r12371, %r12340;
	mov.u32 	%r12372, %r12340;
	bra.uni 	BB4_413;

BB4_334:
	setp.eq.s32	%p238, %r4952, 2;
	@%p238 bra 	BB4_411;
	bra.uni 	BB4_335;

BB4_411:
	mov.u32 	%r12340, 0;
	// inline asm
	prmt.b32 %r12343, %r12340, %r7, %r70;
	// inline asm
	ld.local.v2.u32 	{%r9878, %r9879}, [%rd35+4];
	// inline asm
	prmt.b32 %r12344, %r9879, %r9878, %r70;
	// inline asm
	ld.local.u32 	%r9724, [%rd35+4];
	ld.local.u32 	%r9725, [%rd35];
	// inline asm
	prmt.b32 %r12345, %r9724, %r9725, %r70;
	// inline asm
	ld.local.u32 	%r9728, [%rd35];
	ld.local.u32 	%r9729, [%rd8];
	// inline asm
	prmt.b32 %r9727, %r9728, %r9729, %r70;
	// inline asm
	st.local.u32 	[%rd35+8], %r9727;
	ld.local.u32 	%r9732, [%rd8];
	ld.local.u32 	%r9733, [%rd34+8];
	// inline asm
	prmt.b32 %r9731, %r9732, %r9733, %r70;
	// inline asm
	st.local.u32 	[%rd35+4], %r9731;
	ld.local.v2.u32 	{%r9880, %r9881}, [%rd34+4];
	// inline asm
	prmt.b32 %r9735, %r9881, %r9880, %r70;
	// inline asm
	st.local.u32 	[%rd35], %r9735;
	ld.local.u32 	%r9740, [%rd34+4];
	ld.local.u32 	%r9741, [%rd34];
	// inline asm
	prmt.b32 %r9739, %r9740, %r9741, %r70;
	// inline asm
	st.local.u32 	[%rd8], %r9739;
	ld.local.u32 	%r9744, [%rd34];
	ld.local.u32 	%r9745, [%rd7];
	// inline asm
	prmt.b32 %r9743, %r9744, %r9745, %r70;
	// inline asm
	st.local.u32 	[%rd34+8], %r9743;
	ld.local.u32 	%r9748, [%rd7];
	ld.local.u32 	%r9749, [%rd33+8];
	// inline asm
	prmt.b32 %r9747, %r9748, %r9749, %r70;
	// inline asm
	st.local.u32 	[%rd34+4], %r9747;
	ld.local.v2.u32 	{%r9882, %r9883}, [%rd33+4];
	// inline asm
	prmt.b32 %r9751, %r9883, %r9882, %r70;
	// inline asm
	st.local.u32 	[%rd34], %r9751;
	ld.local.u32 	%r9756, [%rd33+4];
	ld.local.u32 	%r9757, [%rd33];
	// inline asm
	prmt.b32 %r9755, %r9756, %r9757, %r70;
	// inline asm
	st.local.u32 	[%rd7], %r9755;
	ld.local.u32 	%r9760, [%rd33];
	ld.local.u32 	%r9761, [%rd6];
	// inline asm
	prmt.b32 %r9759, %r9760, %r9761, %r70;
	// inline asm
	st.local.u32 	[%rd33+8], %r9759;
	ld.local.u32 	%r9764, [%rd6];
	ld.local.u32 	%r9765, [%rd32+8];
	// inline asm
	prmt.b32 %r9763, %r9764, %r9765, %r70;
	// inline asm
	st.local.u32 	[%rd33+4], %r9763;
	ld.local.v2.u32 	{%r9884, %r9885}, [%rd32+4];
	// inline asm
	prmt.b32 %r9767, %r9885, %r9884, %r70;
	// inline asm
	st.local.u32 	[%rd33], %r9767;
	ld.local.u32 	%r9772, [%rd32+4];
	ld.local.u32 	%r9773, [%rd32];
	// inline asm
	prmt.b32 %r9771, %r9772, %r9773, %r70;
	// inline asm
	st.local.u32 	[%rd6], %r9771;
	ld.local.u32 	%r9776, [%rd32];
	ld.local.u32 	%r9777, [%rd5];
	// inline asm
	prmt.b32 %r9775, %r9776, %r9777, %r70;
	// inline asm
	st.local.u32 	[%rd32+8], %r9775;
	ld.local.u32 	%r9780, [%rd5];
	ld.local.u32 	%r9781, [%rd31+8];
	// inline asm
	prmt.b32 %r9779, %r9780, %r9781, %r70;
	// inline asm
	st.local.u32 	[%rd32+4], %r9779;
	ld.local.v2.u32 	{%r9886, %r9887}, [%rd31+4];
	// inline asm
	prmt.b32 %r9783, %r9887, %r9886, %r70;
	// inline asm
	st.local.u32 	[%rd32], %r9783;
	ld.local.u32 	%r9788, [%rd31+4];
	ld.local.u32 	%r9789, [%rd31];
	// inline asm
	prmt.b32 %r9787, %r9788, %r9789, %r70;
	// inline asm
	st.local.u32 	[%rd5], %r9787;
	ld.local.u32 	%r9792, [%rd31];
	ld.local.u32 	%r9793, [%rd4];
	// inline asm
	prmt.b32 %r9791, %r9792, %r9793, %r70;
	// inline asm
	st.local.u32 	[%rd31+8], %r9791;
	ld.local.u32 	%r9796, [%rd4];
	ld.local.u32 	%r9797, [%rd30+8];
	// inline asm
	prmt.b32 %r9795, %r9796, %r9797, %r70;
	// inline asm
	st.local.u32 	[%rd31+4], %r9795;
	ld.local.v2.u32 	{%r9888, %r9889}, [%rd30+4];
	// inline asm
	prmt.b32 %r9799, %r9889, %r9888, %r70;
	// inline asm
	st.local.u32 	[%rd31], %r9799;
	ld.local.u32 	%r9804, [%rd30+4];
	ld.local.u32 	%r9805, [%rd30];
	// inline asm
	prmt.b32 %r9803, %r9804, %r9805, %r70;
	// inline asm
	st.local.u32 	[%rd4], %r9803;
	ld.local.u32 	%r9808, [%rd30];
	ld.local.u32 	%r9809, [%rd3];
	// inline asm
	prmt.b32 %r9807, %r9808, %r9809, %r70;
	// inline asm
	st.local.u32 	[%rd30+8], %r9807;
	ld.local.u32 	%r9812, [%rd3];
	ld.local.u32 	%r9813, [%rd29+8];
	// inline asm
	prmt.b32 %r9811, %r9812, %r9813, %r70;
	// inline asm
	st.local.u32 	[%rd30+4], %r9811;
	ld.local.v2.u32 	{%r9890, %r9891}, [%rd29+4];
	// inline asm
	prmt.b32 %r9815, %r9891, %r9890, %r70;
	// inline asm
	st.local.u32 	[%rd30], %r9815;
	ld.local.u32 	%r9820, [%rd29+4];
	ld.local.u32 	%r9821, [%rd29];
	// inline asm
	prmt.b32 %r9819, %r9820, %r9821, %r70;
	// inline asm
	st.local.u32 	[%rd3], %r9819;
	ld.local.u32 	%r9824, [%rd29];
	ld.local.u32 	%r9825, [%rd2];
	// inline asm
	prmt.b32 %r9823, %r9824, %r9825, %r70;
	// inline asm
	st.local.u32 	[%rd29+8], %r9823;
	ld.local.u32 	%r9828, [%rd2];
	ld.local.u32 	%r9829, [%rd28+8];
	// inline asm
	prmt.b32 %r9827, %r9828, %r9829, %r70;
	// inline asm
	st.local.u32 	[%rd29+4], %r9827;
	ld.local.v2.u32 	{%r9892, %r9893}, [%rd28+4];
	// inline asm
	prmt.b32 %r9831, %r9893, %r9892, %r70;
	// inline asm
	st.local.u32 	[%rd29], %r9831;
	ld.local.u32 	%r9836, [%rd28+4];
	ld.local.u32 	%r9837, [%rd28];
	// inline asm
	prmt.b32 %r9835, %r9836, %r9837, %r70;
	// inline asm
	st.local.u32 	[%rd2], %r9835;
	ld.local.u32 	%r9840, [%rd28];
	ld.local.u32 	%r9841, [%rd1];
	// inline asm
	prmt.b32 %r9839, %r9840, %r9841, %r70;
	// inline asm
	st.local.u32 	[%rd28+8], %r9839;
	ld.local.u32 	%r9844, [%rd1];
	// inline asm
	prmt.b32 %r9843, %r9844, %r12340, %r70;
	// inline asm
	st.local.u32 	[%rd28+4], %r9843;
	st.local.u32 	[%rd28], %r12340;
	st.local.u32 	[%rd1], %r12340;
	mov.u32 	%r12341, %r12340;
	mov.u32 	%r12342, %r12340;
	bra.uni 	BB4_337;

BB4_366:
	setp.eq.s32	%p215, %r4952, 18;
	@%p215 bra 	BB4_397;
	bra.uni 	BB4_367;

BB4_397:
	mov.u32 	%r12340, 0;
	// inline asm
	prmt.b32 %r12359, %r12340, %r7, %r70;
	// inline asm
	ld.local.v2.u32 	{%r7134, %r7135}, [%rd35+4];
	// inline asm
	prmt.b32 %r12360, %r7135, %r7134, %r70;
	// inline asm
	ld.local.u32 	%r6996, [%rd35+4];
	ld.local.u32 	%r6997, [%rd35];
	// inline asm
	prmt.b32 %r12361, %r6996, %r6997, %r70;
	// inline asm
	ld.local.u32 	%r7000, [%rd35];
	ld.local.u32 	%r7001, [%rd8];
	// inline asm
	prmt.b32 %r12354, %r7000, %r7001, %r70;
	// inline asm
	ld.local.u32 	%r7004, [%rd8];
	ld.local.u32 	%r7005, [%rd34+8];
	// inline asm
	prmt.b32 %r12355, %r7004, %r7005, %r70;
	// inline asm
	ld.local.v2.u32 	{%r7136, %r7137}, [%rd34+4];
	// inline asm
	prmt.b32 %r12356, %r7137, %r7136, %r70;
	// inline asm
	ld.local.u32 	%r7012, [%rd34+4];
	ld.local.u32 	%r7013, [%rd34];
	// inline asm
	prmt.b32 %r12357, %r7012, %r7013, %r70;
	// inline asm
	ld.local.u32 	%r7016, [%rd34];
	ld.local.u32 	%r7017, [%rd7];
	// inline asm
	prmt.b32 %r12350, %r7016, %r7017, %r70;
	// inline asm
	ld.local.u32 	%r7020, [%rd7];
	ld.local.u32 	%r7021, [%rd33+8];
	// inline asm
	prmt.b32 %r12351, %r7020, %r7021, %r70;
	// inline asm
	ld.local.v2.u32 	{%r7138, %r7139}, [%rd33+4];
	// inline asm
	prmt.b32 %r12352, %r7139, %r7138, %r70;
	// inline asm
	ld.local.u32 	%r7028, [%rd33+4];
	ld.local.u32 	%r7029, [%rd33];
	// inline asm
	prmt.b32 %r12353, %r7028, %r7029, %r70;
	// inline asm
	ld.local.u32 	%r7032, [%rd33];
	ld.local.u32 	%r7033, [%rd6];
	// inline asm
	prmt.b32 %r12346, %r7032, %r7033, %r70;
	// inline asm
	ld.local.u32 	%r7036, [%rd6];
	ld.local.u32 	%r7037, [%rd32+8];
	// inline asm
	prmt.b32 %r12347, %r7036, %r7037, %r70;
	// inline asm
	ld.local.v2.u32 	{%r7140, %r7141}, [%rd32+4];
	// inline asm
	prmt.b32 %r12348, %r7141, %r7140, %r70;
	// inline asm
	ld.local.u32 	%r7044, [%rd32+4];
	ld.local.u32 	%r7045, [%rd32];
	// inline asm
	prmt.b32 %r12349, %r7044, %r7045, %r70;
	// inline asm
	ld.local.u32 	%r7048, [%rd32];
	ld.local.u32 	%r7049, [%rd5];
	// inline asm
	prmt.b32 %r12342, %r7048, %r7049, %r70;
	// inline asm
	ld.local.u32 	%r7052, [%rd5];
	ld.local.u32 	%r7053, [%rd31+8];
	// inline asm
	prmt.b32 %r12343, %r7052, %r7053, %r70;
	// inline asm
	ld.local.v2.u32 	{%r7142, %r7143}, [%rd31+4];
	// inline asm
	prmt.b32 %r12344, %r7143, %r7142, %r70;
	// inline asm
	ld.local.u32 	%r7060, [%rd31+4];
	ld.local.u32 	%r7061, [%rd31];
	// inline asm
	prmt.b32 %r12345, %r7060, %r7061, %r70;
	// inline asm
	ld.local.u32 	%r7064, [%rd31];
	ld.local.u32 	%r7065, [%rd4];
	// inline asm
	prmt.b32 %r7063, %r7064, %r7065, %r70;
	// inline asm
	st.local.u32 	[%rd35+8], %r7063;
	ld.local.u32 	%r7068, [%rd4];
	ld.local.u32 	%r7069, [%rd30+8];
	// inline asm
	prmt.b32 %r7067, %r7068, %r7069, %r70;
	// inline asm
	st.local.u32 	[%rd35+4], %r7067;
	ld.local.v2.u32 	{%r7144, %r7145}, [%rd30+4];
	// inline asm
	prmt.b32 %r7071, %r7145, %r7144, %r70;
	// inline asm
	st.local.u32 	[%rd35], %r7071;
	ld.local.u32 	%r7076, [%rd30+4];
	ld.local.u32 	%r7077, [%rd30];
	// inline asm
	prmt.b32 %r7075, %r7076, %r7077, %r70;
	// inline asm
	st.local.u32 	[%rd8], %r7075;
	ld.local.u32 	%r7080, [%rd30];
	ld.local.u32 	%r7081, [%rd3];
	// inline asm
	prmt.b32 %r7079, %r7080, %r7081, %r70;
	// inline asm
	st.local.u32 	[%rd34+8], %r7079;
	ld.local.u32 	%r7084, [%rd3];
	ld.local.u32 	%r7085, [%rd29+8];
	// inline asm
	prmt.b32 %r7083, %r7084, %r7085, %r70;
	// inline asm
	st.local.u32 	[%rd34+4], %r7083;
	ld.local.v2.u32 	{%r7146, %r7147}, [%rd29+4];
	// inline asm
	prmt.b32 %r7087, %r7147, %r7146, %r70;
	// inline asm
	st.local.u32 	[%rd34], %r7087;
	ld.local.u32 	%r7092, [%rd29+4];
	ld.local.u32 	%r7093, [%rd29];
	// inline asm
	prmt.b32 %r7091, %r7092, %r7093, %r70;
	// inline asm
	st.local.u32 	[%rd7], %r7091;
	ld.local.u32 	%r7096, [%rd29];
	ld.local.u32 	%r7097, [%rd2];
	// inline asm
	prmt.b32 %r7095, %r7096, %r7097, %r70;
	// inline asm
	st.local.u32 	[%rd33+8], %r7095;
	ld.local.u32 	%r7100, [%rd2];
	ld.local.u32 	%r7101, [%rd28+8];
	// inline asm
	prmt.b32 %r7099, %r7100, %r7101, %r70;
	// inline asm
	st.local.u32 	[%rd33+4], %r7099;
	ld.local.v2.u32 	{%r7148, %r7149}, [%rd28+4];
	// inline asm
	prmt.b32 %r7103, %r7149, %r7148, %r70;
	// inline asm
	st.local.u32 	[%rd33], %r7103;
	ld.local.u32 	%r7108, [%rd28+4];
	ld.local.u32 	%r7109, [%rd28];
	// inline asm
	prmt.b32 %r7107, %r7108, %r7109, %r70;
	// inline asm
	st.local.u32 	[%rd6], %r7107;
	ld.local.u32 	%r7112, [%rd28];
	ld.local.u32 	%r7113, [%rd1];
	// inline asm
	prmt.b32 %r7111, %r7112, %r7113, %r70;
	// inline asm
	st.local.u32 	[%rd32+8], %r7111;
	ld.local.u32 	%r7116, [%rd1];
	// inline asm
	prmt.b32 %r7115, %r7116, %r12340, %r70;
	// inline asm
	st.local.u32 	[%rd32+4], %r7115;
	st.local.u32 	[%rd32], %r12340;
	st.local.u32 	[%rd5], %r12340;
	st.local.v2.u32 	[%rd31+4], {%r12340, %r12340};
	st.local.u32 	[%rd31], %r12340;
	st.local.u32 	[%rd4], %r12340;
	st.local.v2.u32 	[%rd30+4], {%r12340, %r12340};
	st.local.u32 	[%rd30], %r12340;
	st.local.u32 	[%rd3], %r12340;
	st.local.v2.u32 	[%rd29+4], {%r12340, %r12340};
	st.local.u32 	[%rd29], %r12340;
	st.local.u32 	[%rd2], %r12340;
	st.local.v2.u32 	[%rd28+4], {%r12340, %r12340};
	st.local.u32 	[%rd28], %r12340;
	st.local.u32 	[%rd1], %r12340;
	mov.u32 	%r12341, %r12340;
	mov.u32 	%r12358, %r12340;
	bra.uni 	BB4_408;

BB4_350:
	setp.eq.s32	%p227, %r4952, 10;
	@%p227 bra 	BB4_401;
	bra.uni 	BB4_351;

BB4_401:
	mov.u32 	%r12340, 0;
	// inline asm
	prmt.b32 %r12351, %r12340, %r7, %r70;
	// inline asm
	ld.local.v2.u32 	{%r8474, %r8475}, [%rd35+4];
	// inline asm
	prmt.b32 %r12352, %r8475, %r8474, %r70;
	// inline asm
	ld.local.u32 	%r8328, [%rd35+4];
	ld.local.u32 	%r8329, [%rd35];
	// inline asm
	prmt.b32 %r12353, %r8328, %r8329, %r70;
	// inline asm
	ld.local.u32 	%r8332, [%rd35];
	ld.local.u32 	%r8333, [%rd8];
	// inline asm
	prmt.b32 %r12346, %r8332, %r8333, %r70;
	// inline asm
	ld.local.u32 	%r8336, [%rd8];
	ld.local.u32 	%r8337, [%rd34+8];
	// inline asm
	prmt.b32 %r12347, %r8336, %r8337, %r70;
	// inline asm
	ld.local.v2.u32 	{%r8476, %r8477}, [%rd34+4];
	// inline asm
	prmt.b32 %r12348, %r8477, %r8476, %r70;
	// inline asm
	ld.local.u32 	%r8344, [%rd34+4];
	ld.local.u32 	%r8345, [%rd34];
	// inline asm
	prmt.b32 %r12349, %r8344, %r8345, %r70;
	// inline asm
	ld.local.u32 	%r8348, [%rd34];
	ld.local.u32 	%r8349, [%rd7];
	// inline asm
	prmt.b32 %r12342, %r8348, %r8349, %r70;
	// inline asm
	ld.local.u32 	%r8352, [%rd7];
	ld.local.u32 	%r8353, [%rd33+8];
	// inline asm
	prmt.b32 %r12343, %r8352, %r8353, %r70;
	// inline asm
	ld.local.v2.u32 	{%r8478, %r8479}, [%rd33+4];
	// inline asm
	prmt.b32 %r12344, %r8479, %r8478, %r70;
	// inline asm
	ld.local.u32 	%r8360, [%rd33+4];
	ld.local.u32 	%r8361, [%rd33];
	// inline asm
	prmt.b32 %r12345, %r8360, %r8361, %r70;
	// inline asm
	ld.local.u32 	%r8364, [%rd33];
	ld.local.u32 	%r8365, [%rd6];
	// inline asm
	prmt.b32 %r8363, %r8364, %r8365, %r70;
	// inline asm
	st.local.u32 	[%rd35+8], %r8363;
	ld.local.u32 	%r8368, [%rd6];
	ld.local.u32 	%r8369, [%rd32+8];
	// inline asm
	prmt.b32 %r8367, %r8368, %r8369, %r70;
	// inline asm
	st.local.u32 	[%rd35+4], %r8367;
	ld.local.v2.u32 	{%r8480, %r8481}, [%rd32+4];
	// inline asm
	prmt.b32 %r8371, %r8481, %r8480, %r70;
	// inline asm
	st.local.u32 	[%rd35], %r8371;
	ld.local.u32 	%r8376, [%rd32+4];
	ld.local.u32 	%r8377, [%rd32];
	// inline asm
	prmt.b32 %r8375, %r8376, %r8377, %r70;
	// inline asm
	st.local.u32 	[%rd8], %r8375;
	ld.local.u32 	%r8380, [%rd32];
	ld.local.u32 	%r8381, [%rd5];
	// inline asm
	prmt.b32 %r8379, %r8380, %r8381, %r70;
	// inline asm
	st.local.u32 	[%rd34+8], %r8379;
	ld.local.u32 	%r8384, [%rd5];
	ld.local.u32 	%r8385, [%rd31+8];
	// inline asm
	prmt.b32 %r8383, %r8384, %r8385, %r70;
	// inline asm
	st.local.u32 	[%rd34+4], %r8383;
	ld.local.v2.u32 	{%r8482, %r8483}, [%rd31+4];
	// inline asm
	prmt.b32 %r8387, %r8483, %r8482, %r70;
	// inline asm
	st.local.u32 	[%rd34], %r8387;
	ld.local.u32 	%r8392, [%rd31+4];
	ld.local.u32 	%r8393, [%rd31];
	// inline asm
	prmt.b32 %r8391, %r8392, %r8393, %r70;
	// inline asm
	st.local.u32 	[%rd7], %r8391;
	ld.local.u32 	%r8396, [%rd31];
	ld.local.u32 	%r8397, [%rd4];
	// inline asm
	prmt.b32 %r8395, %r8396, %r8397, %r70;
	// inline asm
	st.local.u32 	[%rd33+8], %r8395;
	ld.local.u32 	%r8400, [%rd4];
	ld.local.u32 	%r8401, [%rd30+8];
	// inline asm
	prmt.b32 %r8399, %r8400, %r8401, %r70;
	// inline asm
	st.local.u32 	[%rd33+4], %r8399;
	ld.local.v2.u32 	{%r8484, %r8485}, [%rd30+4];
	// inline asm
	prmt.b32 %r8403, %r8485, %r8484, %r70;
	// inline asm
	st.local.u32 	[%rd33], %r8403;
	ld.local.u32 	%r8408, [%rd30+4];
	ld.local.u32 	%r8409, [%rd30];
	// inline asm
	prmt.b32 %r8407, %r8408, %r8409, %r70;
	// inline asm
	st.local.u32 	[%rd6], %r8407;
	ld.local.u32 	%r8412, [%rd30];
	ld.local.u32 	%r8413, [%rd3];
	// inline asm
	prmt.b32 %r8411, %r8412, %r8413, %r70;
	// inline asm
	st.local.u32 	[%rd32+8], %r8411;
	ld.local.u32 	%r8416, [%rd3];
	ld.local.u32 	%r8417, [%rd29+8];
	// inline asm
	prmt.b32 %r8415, %r8416, %r8417, %r70;
	// inline asm
	st.local.u32 	[%rd32+4], %r8415;
	ld.local.v2.u32 	{%r8486, %r8487}, [%rd29+4];
	// inline asm
	prmt.b32 %r8419, %r8487, %r8486, %r70;
	// inline asm
	st.local.u32 	[%rd32], %r8419;
	ld.local.u32 	%r8424, [%rd29+4];
	ld.local.u32 	%r8425, [%rd29];
	// inline asm
	prmt.b32 %r8423, %r8424, %r8425, %r70;
	// inline asm
	st.local.u32 	[%rd5], %r8423;
	ld.local.u32 	%r8428, [%rd29];
	ld.local.u32 	%r8429, [%rd2];
	// inline asm
	prmt.b32 %r8427, %r8428, %r8429, %r70;
	// inline asm
	st.local.u32 	[%rd31+8], %r8427;
	ld.local.u32 	%r8432, [%rd2];
	ld.local.u32 	%r8433, [%rd28+8];
	// inline asm
	prmt.b32 %r8431, %r8432, %r8433, %r70;
	// inline asm
	st.local.u32 	[%rd31+4], %r8431;
	ld.local.v2.u32 	{%r8488, %r8489}, [%rd28+4];
	// inline asm
	prmt.b32 %r8435, %r8489, %r8488, %r70;
	// inline asm
	st.local.u32 	[%rd31], %r8435;
	ld.local.u32 	%r8440, [%rd28+4];
	ld.local.u32 	%r8441, [%rd28];
	// inline asm
	prmt.b32 %r8439, %r8440, %r8441, %r70;
	// inline asm
	st.local.u32 	[%rd4], %r8439;
	ld.local.u32 	%r8444, [%rd28];
	ld.local.u32 	%r8445, [%rd1];
	// inline asm
	prmt.b32 %r8443, %r8444, %r8445, %r70;
	// inline asm
	st.local.u32 	[%rd30+8], %r8443;
	ld.local.u32 	%r8448, [%rd1];
	// inline asm
	prmt.b32 %r8447, %r8448, %r12340, %r70;
	// inline asm
	st.local.u32 	[%rd30+4], %r8447;
	st.local.u32 	[%rd30], %r12340;
	st.local.u32 	[%rd3], %r12340;
	st.local.v2.u32 	[%rd29+4], {%r12340, %r12340};
	st.local.u32 	[%rd29], %r12340;
	st.local.u32 	[%rd2], %r12340;
	st.local.v2.u32 	[%rd28+4], {%r12340, %r12340};
	st.local.u32 	[%rd28], %r12340;
	st.local.u32 	[%rd1], %r12340;
	mov.u32 	%r12341, %r12340;
	mov.u32 	%r12350, %r12340;
	bra.uni 	BB4_406;

BB4_381:
	setp.eq.s32	%p204, %r4952, 26;
	@%p204 bra 	BB4_393;
	bra.uni 	BB4_382;

BB4_393:
	mov.u32 	%r12340, 0;
	// inline asm
	prmt.b32 %r12367, %r12340, %r7, %r70;
	// inline asm
	ld.local.v2.u32 	{%r5858, %r5859}, [%rd35+4];
	// inline asm
	prmt.b32 %r12368, %r5859, %r5858, %r70;
	// inline asm
	ld.local.u32 	%r5728, [%rd35+4];
	ld.local.u32 	%r5729, [%rd35];
	// inline asm
	prmt.b32 %r12369, %r5728, %r5729, %r70;
	// inline asm
	ld.local.u32 	%r5732, [%rd35];
	ld.local.u32 	%r5733, [%rd8];
	// inline asm
	prmt.b32 %r12362, %r5732, %r5733, %r70;
	// inline asm
	ld.local.u32 	%r5736, [%rd8];
	ld.local.u32 	%r5737, [%rd34+8];
	// inline asm
	prmt.b32 %r12363, %r5736, %r5737, %r70;
	// inline asm
	ld.local.v2.u32 	{%r5860, %r5861}, [%rd34+4];
	// inline asm
	prmt.b32 %r12364, %r5861, %r5860, %r70;
	// inline asm
	ld.local.u32 	%r5744, [%rd34+4];
	ld.local.u32 	%r5745, [%rd34];
	// inline asm
	prmt.b32 %r12365, %r5744, %r5745, %r70;
	// inline asm
	ld.local.u32 	%r5748, [%rd34];
	ld.local.u32 	%r5749, [%rd7];
	// inline asm
	prmt.b32 %r12358, %r5748, %r5749, %r70;
	// inline asm
	ld.local.u32 	%r5752, [%rd7];
	ld.local.u32 	%r5753, [%rd33+8];
	// inline asm
	prmt.b32 %r12359, %r5752, %r5753, %r70;
	// inline asm
	ld.local.v2.u32 	{%r5862, %r5863}, [%rd33+4];
	// inline asm
	prmt.b32 %r12360, %r5863, %r5862, %r70;
	// inline asm
	ld.local.u32 	%r5760, [%rd33+4];
	ld.local.u32 	%r5761, [%rd33];
	// inline asm
	prmt.b32 %r12361, %r5760, %r5761, %r70;
	// inline asm
	ld.local.u32 	%r5764, [%rd33];
	ld.local.u32 	%r5765, [%rd6];
	// inline asm
	prmt.b32 %r12354, %r5764, %r5765, %r70;
	// inline asm
	ld.local.u32 	%r5768, [%rd6];
	ld.local.u32 	%r5769, [%rd32+8];
	// inline asm
	prmt.b32 %r12355, %r5768, %r5769, %r70;
	// inline asm
	ld.local.v2.u32 	{%r5864, %r5865}, [%rd32+4];
	// inline asm
	prmt.b32 %r12356, %r5865, %r5864, %r70;
	// inline asm
	ld.local.u32 	%r5776, [%rd32+4];
	ld.local.u32 	%r5777, [%rd32];
	// inline asm
	prmt.b32 %r12357, %r5776, %r5777, %r70;
	// inline asm
	ld.local.u32 	%r5780, [%rd32];
	ld.local.u32 	%r5781, [%rd5];
	// inline asm
	prmt.b32 %r12350, %r5780, %r5781, %r70;
	// inline asm
	ld.local.u32 	%r5784, [%rd5];
	ld.local.u32 	%r5785, [%rd31+8];
	// inline asm
	prmt.b32 %r12351, %r5784, %r5785, %r70;
	// inline asm
	ld.local.v2.u32 	{%r5866, %r5867}, [%rd31+4];
	// inline asm
	prmt.b32 %r12352, %r5867, %r5866, %r70;
	// inline asm
	ld.local.u32 	%r5792, [%rd31+4];
	ld.local.u32 	%r5793, [%rd31];
	// inline asm
	prmt.b32 %r12353, %r5792, %r5793, %r70;
	// inline asm
	ld.local.u32 	%r5796, [%rd31];
	ld.local.u32 	%r5797, [%rd4];
	// inline asm
	prmt.b32 %r12346, %r5796, %r5797, %r70;
	// inline asm
	ld.local.u32 	%r5800, [%rd4];
	ld.local.u32 	%r5801, [%rd30+8];
	// inline asm
	prmt.b32 %r12347, %r5800, %r5801, %r70;
	// inline asm
	ld.local.v2.u32 	{%r5868, %r5869}, [%rd30+4];
	// inline asm
	prmt.b32 %r12348, %r5869, %r5868, %r70;
	// inline asm
	ld.local.u32 	%r5808, [%rd30+4];
	ld.local.u32 	%r5809, [%rd30];
	// inline asm
	prmt.b32 %r12349, %r5808, %r5809, %r70;
	// inline asm
	ld.local.u32 	%r5812, [%rd30];
	ld.local.u32 	%r5813, [%rd3];
	// inline asm
	prmt.b32 %r12342, %r5812, %r5813, %r70;
	// inline asm
	ld.local.u32 	%r5816, [%rd3];
	ld.local.u32 	%r5817, [%rd29+8];
	// inline asm
	prmt.b32 %r12343, %r5816, %r5817, %r70;
	// inline asm
	ld.local.v2.u32 	{%r5870, %r5871}, [%rd29+4];
	// inline asm
	prmt.b32 %r12344, %r5871, %r5870, %r70;
	// inline asm
	ld.local.u32 	%r5824, [%rd29+4];
	ld.local.u32 	%r5825, [%rd29];
	// inline asm
	prmt.b32 %r12345, %r5824, %r5825, %r70;
	// inline asm
	ld.local.u32 	%r5828, [%rd29];
	ld.local.u32 	%r5829, [%rd2];
	// inline asm
	prmt.b32 %r5827, %r5828, %r5829, %r70;
	// inline asm
	st.local.u32 	[%rd35+8], %r5827;
	ld.local.u32 	%r5832, [%rd2];
	ld.local.u32 	%r5833, [%rd28+8];
	// inline asm
	prmt.b32 %r5831, %r5832, %r5833, %r70;
	// inline asm
	st.local.u32 	[%rd35+4], %r5831;
	ld.local.v2.u32 	{%r5872, %r5873}, [%rd28+4];
	// inline asm
	prmt.b32 %r5835, %r5873, %r5872, %r70;
	// inline asm
	st.local.u32 	[%rd35], %r5835;
	ld.local.u32 	%r5840, [%rd28+4];
	ld.local.u32 	%r5841, [%rd28];
	// inline asm
	prmt.b32 %r5839, %r5840, %r5841, %r70;
	// inline asm
	st.local.u32 	[%rd8], %r5839;
	ld.local.u32 	%r5844, [%rd28];
	ld.local.u32 	%r5845, [%rd1];
	// inline asm
	prmt.b32 %r5843, %r5844, %r5845, %r70;
	// inline asm
	st.local.u32 	[%rd34+8], %r5843;
	ld.local.u32 	%r5848, [%rd1];
	// inline asm
	prmt.b32 %r5847, %r5848, %r12340, %r70;
	// inline asm
	st.local.u32 	[%rd34+4], %r5847;
	st.local.u32 	[%rd34], %r12340;
	st.local.u32 	[%rd7], %r12340;
	st.local.v2.u32 	[%rd33+4], {%r12340, %r12340};
	st.local.u32 	[%rd33], %r12340;
	st.local.u32 	[%rd6], %r12340;
	st.local.v2.u32 	[%rd32+4], {%r12340, %r12340};
	st.local.u32 	[%rd32], %r12340;
	st.local.u32 	[%rd5], %r12340;
	st.local.v2.u32 	[%rd31+4], {%r12340, %r12340};
	st.local.u32 	[%rd31], %r12340;
	st.local.u32 	[%rd4], %r12340;
	st.local.v2.u32 	[%rd30+4], {%r12340, %r12340};
	st.local.u32 	[%rd30], %r12340;
	st.local.u32 	[%rd3], %r12340;
	st.local.v2.u32 	[%rd29+4], {%r12340, %r12340};
	st.local.u32 	[%rd29], %r12340;
	st.local.u32 	[%rd2], %r12340;
	st.local.v2.u32 	[%rd28+4], {%r12340, %r12340};
	st.local.u32 	[%rd28], %r12340;
	st.local.u32 	[%rd1], %r12340;
	mov.u32 	%r12341, %r12340;
	mov.u32 	%r12366, %r12340;
	bra.uni 	BB4_410;

BB4_342:
	setp.eq.s32	%p233, %r4952, 6;
	@%p233 bra 	BB4_403;
	bra.uni 	BB4_343;

BB4_403:
	mov.u32 	%r12340, 0;
	// inline asm
	prmt.b32 %r12347, %r12340, %r7, %r70;
	// inline asm
	ld.local.v2.u32 	{%r9168, %r9169}, [%rd35+4];
	// inline asm
	prmt.b32 %r12348, %r9169, %r9168, %r70;
	// inline asm
	ld.local.u32 	%r9018, [%rd35+4];
	ld.local.u32 	%r9019, [%rd35];
	// inline asm
	prmt.b32 %r12349, %r9018, %r9019, %r70;
	// inline asm
	ld.local.u32 	%r9022, [%rd35];
	ld.local.u32 	%r9023, [%rd8];
	// inline asm
	prmt.b32 %r12342, %r9022, %r9023, %r70;
	// inline asm
	ld.local.u32 	%r9026, [%rd8];
	ld.local.u32 	%r9027, [%rd34+8];
	// inline asm
	prmt.b32 %r12343, %r9026, %r9027, %r70;
	// inline asm
	ld.local.v2.u32 	{%r9170, %r9171}, [%rd34+4];
	// inline asm
	prmt.b32 %r12344, %r9171, %r9170, %r70;
	// inline asm
	ld.local.u32 	%r9034, [%rd34+4];
	ld.local.u32 	%r9035, [%rd34];
	// inline asm
	prmt.b32 %r12345, %r9034, %r9035, %r70;
	// inline asm
	ld.local.u32 	%r9038, [%rd34];
	ld.local.u32 	%r9039, [%rd7];
	// inline asm
	prmt.b32 %r9037, %r9038, %r9039, %r70;
	// inline asm
	st.local.u32 	[%rd35+8], %r9037;
	ld.local.u32 	%r9042, [%rd7];
	ld.local.u32 	%r9043, [%rd33+8];
	// inline asm
	prmt.b32 %r9041, %r9042, %r9043, %r70;
	// inline asm
	st.local.u32 	[%rd35+4], %r9041;
	ld.local.v2.u32 	{%r9172, %r9173}, [%rd33+4];
	// inline asm
	prmt.b32 %r9045, %r9173, %r9172, %r70;
	// inline asm
	st.local.u32 	[%rd35], %r9045;
	ld.local.u32 	%r9050, [%rd33+4];
	ld.local.u32 	%r9051, [%rd33];
	// inline asm
	prmt.b32 %r9049, %r9050, %r9051, %r70;
	// inline asm
	st.local.u32 	[%rd8], %r9049;
	ld.local.u32 	%r9054, [%rd33];
	ld.local.u32 	%r9055, [%rd6];
	// inline asm
	prmt.b32 %r9053, %r9054, %r9055, %r70;
	// inline asm
	st.local.u32 	[%rd34+8], %r9053;
	ld.local.u32 	%r9058, [%rd6];
	ld.local.u32 	%r9059, [%rd32+8];
	// inline asm
	prmt.b32 %r9057, %r9058, %r9059, %r70;
	// inline asm
	st.local.u32 	[%rd34+4], %r9057;
	ld.local.v2.u32 	{%r9174, %r9175}, [%rd32+4];
	// inline asm
	prmt.b32 %r9061, %r9175, %r9174, %r70;
	// inline asm
	st.local.u32 	[%rd34], %r9061;
	ld.local.u32 	%r9066, [%rd32+4];
	ld.local.u32 	%r9067, [%rd32];
	// inline asm
	prmt.b32 %r9065, %r9066, %r9067, %r70;
	// inline asm
	st.local.u32 	[%rd7], %r9065;
	ld.local.u32 	%r9070, [%rd32];
	ld.local.u32 	%r9071, [%rd5];
	// inline asm
	prmt.b32 %r9069, %r9070, %r9071, %r70;
	// inline asm
	st.local.u32 	[%rd33+8], %r9069;
	ld.local.u32 	%r9074, [%rd5];
	ld.local.u32 	%r9075, [%rd31+8];
	// inline asm
	prmt.b32 %r9073, %r9074, %r9075, %r70;
	// inline asm
	st.local.u32 	[%rd33+4], %r9073;
	ld.local.v2.u32 	{%r9176, %r9177}, [%rd31+4];
	// inline asm
	prmt.b32 %r9077, %r9177, %r9176, %r70;
	// inline asm
	st.local.u32 	[%rd33], %r9077;
	ld.local.u32 	%r9082, [%rd31+4];
	ld.local.u32 	%r9083, [%rd31];
	// inline asm
	prmt.b32 %r9081, %r9082, %r9083, %r70;
	// inline asm
	st.local.u32 	[%rd6], %r9081;
	ld.local.u32 	%r9086, [%rd31];
	ld.local.u32 	%r9087, [%rd4];
	// inline asm
	prmt.b32 %r9085, %r9086, %r9087, %r70;
	// inline asm
	st.local.u32 	[%rd32+8], %r9085;
	ld.local.u32 	%r9090, [%rd4];
	ld.local.u32 	%r9091, [%rd30+8];
	// inline asm
	prmt.b32 %r9089, %r9090, %r9091, %r70;
	// inline asm
	st.local.u32 	[%rd32+4], %r9089;
	ld.local.v2.u32 	{%r9178, %r9179}, [%rd30+4];
	// inline asm
	prmt.b32 %r9093, %r9179, %r9178, %r70;
	// inline asm
	st.local.u32 	[%rd32], %r9093;
	ld.local.u32 	%r9098, [%rd30+4];
	ld.local.u32 	%r9099, [%rd30];
	// inline asm
	prmt.b32 %r9097, %r9098, %r9099, %r70;
	// inline asm
	st.local.u32 	[%rd5], %r9097;
	ld.local.u32 	%r9102, [%rd30];
	ld.local.u32 	%r9103, [%rd3];
	// inline asm
	prmt.b32 %r9101, %r9102, %r9103, %r70;
	// inline asm
	st.local.u32 	[%rd31+8], %r9101;
	ld.local.u32 	%r9106, [%rd3];
	ld.local.u32 	%r9107, [%rd29+8];
	// inline asm
	prmt.b32 %r9105, %r9106, %r9107, %r70;
	// inline asm
	st.local.u32 	[%rd31+4], %r9105;
	ld.local.v2.u32 	{%r9180, %r9181}, [%rd29+4];
	// inline asm
	prmt.b32 %r9109, %r9181, %r9180, %r70;
	// inline asm
	st.local.u32 	[%rd31], %r9109;
	ld.local.u32 	%r9114, [%rd29+4];
	ld.local.u32 	%r9115, [%rd29];
	// inline asm
	prmt.b32 %r9113, %r9114, %r9115, %r70;
	// inline asm
	st.local.u32 	[%rd4], %r9113;
	ld.local.u32 	%r9118, [%rd29];
	ld.local.u32 	%r9119, [%rd2];
	// inline asm
	prmt.b32 %r9117, %r9118, %r9119, %r70;
	// inline asm
	st.local.u32 	[%rd30+8], %r9117;
	ld.local.u32 	%r9122, [%rd2];
	ld.local.u32 	%r9123, [%rd28+8];
	// inline asm
	prmt.b32 %r9121, %r9122, %r9123, %r70;
	// inline asm
	st.local.u32 	[%rd30+4], %r9121;
	ld.local.v2.u32 	{%r9182, %r9183}, [%rd28+4];
	// inline asm
	prmt.b32 %r9125, %r9183, %r9182, %r70;
	// inline asm
	st.local.u32 	[%rd30], %r9125;
	ld.local.u32 	%r9130, [%rd28+4];
	ld.local.u32 	%r9131, [%rd28];
	// inline asm
	prmt.b32 %r9129, %r9130, %r9131, %r70;
	// inline asm
	st.local.u32 	[%rd3], %r9129;
	ld.local.u32 	%r9134, [%rd28];
	ld.local.u32 	%r9135, [%rd1];
	// inline asm
	prmt.b32 %r9133, %r9134, %r9135, %r70;
	// inline asm
	st.local.u32 	[%rd29+8], %r9133;
	ld.local.u32 	%r9138, [%rd1];
	// inline asm
	prmt.b32 %r9137, %r9138, %r12340, %r70;
	// inline asm
	st.local.u32 	[%rd29+4], %r9137;
	st.local.u32 	[%rd29], %r12340;
	st.local.u32 	[%rd2], %r12340;
	st.local.v2.u32 	[%rd28+4], {%r12340, %r12340};
	st.local.u32 	[%rd28], %r12340;
	st.local.u32 	[%rd1], %r12340;
	mov.u32 	%r12341, %r12340;
	mov.u32 	%r12346, %r12340;
	bra.uni 	BB4_405;

BB4_373:
	setp.eq.s32	%p210, %r4952, 22;
	@%p210 bra 	BB4_395;
	bra.uni 	BB4_374;

BB4_395:
	mov.u32 	%r12340, 0;
	// inline asm
	prmt.b32 %r12363, %r12340, %r7, %r70;
	// inline asm
	ld.local.v2.u32 	{%r6488, %r6489}, [%rd35+4];
	// inline asm
	prmt.b32 %r12364, %r6489, %r6488, %r70;
	// inline asm
	ld.local.u32 	%r6354, [%rd35+4];
	ld.local.u32 	%r6355, [%rd35];
	// inline asm
	prmt.b32 %r12365, %r6354, %r6355, %r70;
	// inline asm
	ld.local.u32 	%r6358, [%rd35];
	ld.local.u32 	%r6359, [%rd8];
	// inline asm
	prmt.b32 %r12358, %r6358, %r6359, %r70;
	// inline asm
	ld.local.u32 	%r6362, [%rd8];
	ld.local.u32 	%r6363, [%rd34+8];
	// inline asm
	prmt.b32 %r12359, %r6362, %r6363, %r70;
	// inline asm
	ld.local.v2.u32 	{%r6490, %r6491}, [%rd34+4];
	// inline asm
	prmt.b32 %r12360, %r6491, %r6490, %r70;
	// inline asm
	ld.local.u32 	%r6370, [%rd34+4];
	ld.local.u32 	%r6371, [%rd34];
	// inline asm
	prmt.b32 %r12361, %r6370, %r6371, %r70;
	// inline asm
	ld.local.u32 	%r6374, [%rd34];
	ld.local.u32 	%r6375, [%rd7];
	// inline asm
	prmt.b32 %r12354, %r6374, %r6375, %r70;
	// inline asm
	ld.local.u32 	%r6378, [%rd7];
	ld.local.u32 	%r6379, [%rd33+8];
	// inline asm
	prmt.b32 %r12355, %r6378, %r6379, %r70;
	// inline asm
	ld.local.v2.u32 	{%r6492, %r6493}, [%rd33+4];
	// inline asm
	prmt.b32 %r12356, %r6493, %r6492, %r70;
	// inline asm
	ld.local.u32 	%r6386, [%rd33+4];
	ld.local.u32 	%r6387, [%rd33];
	// inline asm
	prmt.b32 %r12357, %r6386, %r6387, %r70;
	// inline asm
	ld.local.u32 	%r6390, [%rd33];
	ld.local.u32 	%r6391, [%rd6];
	// inline asm
	prmt.b32 %r12350, %r6390, %r6391, %r70;
	// inline asm
	ld.local.u32 	%r6394, [%rd6];
	ld.local.u32 	%r6395, [%rd32+8];
	// inline asm
	prmt.b32 %r12351, %r6394, %r6395, %r70;
	// inline asm
	ld.local.v2.u32 	{%r6494, %r6495}, [%rd32+4];
	// inline asm
	prmt.b32 %r12352, %r6495, %r6494, %r70;
	// inline asm
	ld.local.u32 	%r6402, [%rd32+4];
	ld.local.u32 	%r6403, [%rd32];
	// inline asm
	prmt.b32 %r12353, %r6402, %r6403, %r70;
	// inline asm
	ld.local.u32 	%r6406, [%rd32];
	ld.local.u32 	%r6407, [%rd5];
	// inline asm
	prmt.b32 %r12346, %r6406, %r6407, %r70;
	// inline asm
	ld.local.u32 	%r6410, [%rd5];
	ld.local.u32 	%r6411, [%rd31+8];
	// inline asm
	prmt.b32 %r12347, %r6410, %r6411, %r70;
	// inline asm
	ld.local.v2.u32 	{%r6496, %r6497}, [%rd31+4];
	// inline asm
	prmt.b32 %r12348, %r6497, %r6496, %r70;
	// inline asm
	ld.local.u32 	%r6418, [%rd31+4];
	ld.local.u32 	%r6419, [%rd31];
	// inline asm
	prmt.b32 %r12349, %r6418, %r6419, %r70;
	// inline asm
	ld.local.u32 	%r6422, [%rd31];
	ld.local.u32 	%r6423, [%rd4];
	// inline asm
	prmt.b32 %r12342, %r6422, %r6423, %r70;
	// inline asm
	ld.local.u32 	%r6426, [%rd4];
	ld.local.u32 	%r6427, [%rd30+8];
	// inline asm
	prmt.b32 %r12343, %r6426, %r6427, %r70;
	// inline asm
	ld.local.v2.u32 	{%r6498, %r6499}, [%rd30+4];
	// inline asm
	prmt.b32 %r12344, %r6499, %r6498, %r70;
	// inline asm
	ld.local.u32 	%r6434, [%rd30+4];
	ld.local.u32 	%r6435, [%rd30];
	// inline asm
	prmt.b32 %r12345, %r6434, %r6435, %r70;
	// inline asm
	ld.local.u32 	%r6438, [%rd30];
	ld.local.u32 	%r6439, [%rd3];
	// inline asm
	prmt.b32 %r6437, %r6438, %r6439, %r70;
	// inline asm
	st.local.u32 	[%rd35+8], %r6437;
	ld.local.u32 	%r6442, [%rd3];
	ld.local.u32 	%r6443, [%rd29+8];
	// inline asm
	prmt.b32 %r6441, %r6442, %r6443, %r70;
	// inline asm
	st.local.u32 	[%rd35+4], %r6441;
	ld.local.v2.u32 	{%r6500, %r6501}, [%rd29+4];
	// inline asm
	prmt.b32 %r6445, %r6501, %r6500, %r70;
	// inline asm
	st.local.u32 	[%rd35], %r6445;
	ld.local.u32 	%r6450, [%rd29+4];
	ld.local.u32 	%r6451, [%rd29];
	// inline asm
	prmt.b32 %r6449, %r6450, %r6451, %r70;
	// inline asm
	st.local.u32 	[%rd8], %r6449;
	ld.local.u32 	%r6454, [%rd29];
	ld.local.u32 	%r6455, [%rd2];
	// inline asm
	prmt.b32 %r6453, %r6454, %r6455, %r70;
	// inline asm
	st.local.u32 	[%rd34+8], %r6453;
	ld.local.u32 	%r6458, [%rd2];
	ld.local.u32 	%r6459, [%rd28+8];
	// inline asm
	prmt.b32 %r6457, %r6458, %r6459, %r70;
	// inline asm
	st.local.u32 	[%rd34+4], %r6457;
	ld.local.v2.u32 	{%r6502, %r6503}, [%rd28+4];
	// inline asm
	prmt.b32 %r6461, %r6503, %r6502, %r70;
	// inline asm
	st.local.u32 	[%rd34], %r6461;
	ld.local.u32 	%r6466, [%rd28+4];
	ld.local.u32 	%r6467, [%rd28];
	// inline asm
	prmt.b32 %r6465, %r6466, %r6467, %r70;
	// inline asm
	st.local.u32 	[%rd7], %r6465;
	ld.local.u32 	%r6470, [%rd28];
	ld.local.u32 	%r6471, [%rd1];
	// inline asm
	prmt.b32 %r6469, %r6470, %r6471, %r70;
	// inline asm
	st.local.u32 	[%rd33+8], %r6469;
	ld.local.u32 	%r6474, [%rd1];
	// inline asm
	prmt.b32 %r6473, %r6474, %r12340, %r70;
	// inline asm
	st.local.u32 	[%rd33+4], %r6473;
	st.local.u32 	[%rd33], %r12340;
	st.local.u32 	[%rd6], %r12340;
	st.local.v2.u32 	[%rd32+4], {%r12340, %r12340};
	st.local.u32 	[%rd32], %r12340;
	st.local.u32 	[%rd5], %r12340;
	st.local.v2.u32 	[%rd31+4], {%r12340, %r12340};
	st.local.u32 	[%rd31], %r12340;
	st.local.u32 	[%rd4], %r12340;
	st.local.v2.u32 	[%rd30+4], {%r12340, %r12340};
	st.local.u32 	[%rd30], %r12340;
	st.local.u32 	[%rd3], %r12340;
	st.local.v2.u32 	[%rd29+4], {%r12340, %r12340};
	st.local.u32 	[%rd29], %r12340;
	st.local.u32 	[%rd2], %r12340;
	st.local.v2.u32 	[%rd28+4], {%r12340, %r12340};
	st.local.u32 	[%rd28], %r12340;
	st.local.u32 	[%rd1], %r12340;
	mov.u32 	%r12341, %r12340;
	mov.u32 	%r12362, %r12340;
	bra.uni 	BB4_409;

BB4_357:
	setp.eq.s32	%p222, %r4952, 14;
	@%p222 bra 	BB4_399;
	bra.uni 	BB4_358;

BB4_399:
	mov.u32 	%r12340, 0;
	// inline asm
	prmt.b32 %r12355, %r12340, %r7, %r70;
	// inline asm
	ld.local.v2.u32 	{%r7796, %r7797}, [%rd35+4];
	// inline asm
	prmt.b32 %r12356, %r7797, %r7796, %r70;
	// inline asm
	ld.local.u32 	%r7654, [%rd35+4];
	ld.local.u32 	%r7655, [%rd35];
	// inline asm
	prmt.b32 %r12357, %r7654, %r7655, %r70;
	// inline asm
	ld.local.u32 	%r7658, [%rd35];
	ld.local.u32 	%r7659, [%rd8];
	// inline asm
	prmt.b32 %r12350, %r7658, %r7659, %r70;
	// inline asm
	ld.local.u32 	%r7662, [%rd8];
	ld.local.u32 	%r7663, [%rd34+8];
	// inline asm
	prmt.b32 %r12351, %r7662, %r7663, %r70;
	// inline asm
	ld.local.v2.u32 	{%r7798, %r7799}, [%rd34+4];
	// inline asm
	prmt.b32 %r12352, %r7799, %r7798, %r70;
	// inline asm
	ld.local.u32 	%r7670, [%rd34+4];
	ld.local.u32 	%r7671, [%rd34];
	// inline asm
	prmt.b32 %r12353, %r7670, %r7671, %r70;
	// inline asm
	ld.local.u32 	%r7674, [%rd34];
	ld.local.u32 	%r7675, [%rd7];
	// inline asm
	prmt.b32 %r12346, %r7674, %r7675, %r70;
	// inline asm
	ld.local.u32 	%r7678, [%rd7];
	ld.local.u32 	%r7679, [%rd33+8];
	// inline asm
	prmt.b32 %r12347, %r7678, %r7679, %r70;
	// inline asm
	ld.local.v2.u32 	{%r7800, %r7801}, [%rd33+4];
	// inline asm
	prmt.b32 %r12348, %r7801, %r7800, %r70;
	// inline asm
	ld.local.u32 	%r7686, [%rd33+4];
	ld.local.u32 	%r7687, [%rd33];
	// inline asm
	prmt.b32 %r12349, %r7686, %r7687, %r70;
	// inline asm
	ld.local.u32 	%r7690, [%rd33];
	ld.local.u32 	%r7691, [%rd6];
	// inline asm
	prmt.b32 %r12342, %r7690, %r7691, %r70;
	// inline asm
	ld.local.u32 	%r7694, [%rd6];
	ld.local.u32 	%r7695, [%rd32+8];
	// inline asm
	prmt.b32 %r12343, %r7694, %r7695, %r70;
	// inline asm
	ld.local.v2.u32 	{%r7802, %r7803}, [%rd32+4];
	// inline asm
	prmt.b32 %r12344, %r7803, %r7802, %r70;
	// inline asm
	ld.local.u32 	%r7702, [%rd32+4];
	ld.local.u32 	%r7703, [%rd32];
	// inline asm
	prmt.b32 %r12345, %r7702, %r7703, %r70;
	// inline asm
	ld.local.u32 	%r7706, [%rd32];
	ld.local.u32 	%r7707, [%rd5];
	// inline asm
	prmt.b32 %r7705, %r7706, %r7707, %r70;
	// inline asm
	st.local.u32 	[%rd35+8], %r7705;
	ld.local.u32 	%r7710, [%rd5];
	ld.local.u32 	%r7711, [%rd31+8];
	// inline asm
	prmt.b32 %r7709, %r7710, %r7711, %r70;
	// inline asm
	st.local.u32 	[%rd35+4], %r7709;
	ld.local.v2.u32 	{%r7804, %r7805}, [%rd31+4];
	// inline asm
	prmt.b32 %r7713, %r7805, %r7804, %r70;
	// inline asm
	st.local.u32 	[%rd35], %r7713;
	ld.local.u32 	%r7718, [%rd31+4];
	ld.local.u32 	%r7719, [%rd31];
	// inline asm
	prmt.b32 %r7717, %r7718, %r7719, %r70;
	// inline asm
	st.local.u32 	[%rd8], %r7717;
	ld.local.u32 	%r7722, [%rd31];
	ld.local.u32 	%r7723, [%rd4];
	// inline asm
	prmt.b32 %r7721, %r7722, %r7723, %r70;
	// inline asm
	st.local.u32 	[%rd34+8], %r7721;
	ld.local.u32 	%r7726, [%rd4];
	ld.local.u32 	%r7727, [%rd30+8];
	// inline asm
	prmt.b32 %r7725, %r7726, %r7727, %r70;
	// inline asm
	st.local.u32 	[%rd34+4], %r7725;
	ld.local.v2.u32 	{%r7806, %r7807}, [%rd30+4];
	// inline asm
	prmt.b32 %r7729, %r7807, %r7806, %r70;
	// inline asm
	st.local.u32 	[%rd34], %r7729;
	ld.local.u32 	%r7734, [%rd30+4];
	ld.local.u32 	%r7735, [%rd30];
	// inline asm
	prmt.b32 %r7733, %r7734, %r7735, %r70;
	// inline asm
	st.local.u32 	[%rd7], %r7733;
	ld.local.u32 	%r7738, [%rd30];
	ld.local.u32 	%r7739, [%rd3];
	// inline asm
	prmt.b32 %r7737, %r7738, %r7739, %r70;
	// inline asm
	st.local.u32 	[%rd33+8], %r7737;
	ld.local.u32 	%r7742, [%rd3];
	ld.local.u32 	%r7743, [%rd29+8];
	// inline asm
	prmt.b32 %r7741, %r7742, %r7743, %r70;
	// inline asm
	st.local.u32 	[%rd33+4], %r7741;
	ld.local.v2.u32 	{%r7808, %r7809}, [%rd29+4];
	// inline asm
	prmt.b32 %r7745, %r7809, %r7808, %r70;
	// inline asm
	st.local.u32 	[%rd33], %r7745;
	ld.local.u32 	%r7750, [%rd29+4];
	ld.local.u32 	%r7751, [%rd29];
	// inline asm
	prmt.b32 %r7749, %r7750, %r7751, %r70;
	// inline asm
	st.local.u32 	[%rd6], %r7749;
	ld.local.u32 	%r7754, [%rd29];
	ld.local.u32 	%r7755, [%rd2];
	// inline asm
	prmt.b32 %r7753, %r7754, %r7755, %r70;
	// inline asm
	st.local.u32 	[%rd32+8], %r7753;
	ld.local.u32 	%r7758, [%rd2];
	ld.local.u32 	%r7759, [%rd28+8];
	// inline asm
	prmt.b32 %r7757, %r7758, %r7759, %r70;
	// inline asm
	st.local.u32 	[%rd32+4], %r7757;
	ld.local.v2.u32 	{%r7810, %r7811}, [%rd28+4];
	// inline asm
	prmt.b32 %r7761, %r7811, %r7810, %r70;
	// inline asm
	st.local.u32 	[%rd32], %r7761;
	ld.local.u32 	%r7766, [%rd28+4];
	ld.local.u32 	%r7767, [%rd28];
	// inline asm
	prmt.b32 %r7765, %r7766, %r7767, %r70;
	// inline asm
	st.local.u32 	[%rd5], %r7765;
	ld.local.u32 	%r7770, [%rd28];
	ld.local.u32 	%r7771, [%rd1];
	// inline asm
	prmt.b32 %r7769, %r7770, %r7771, %r70;
	// inline asm
	st.local.u32 	[%rd31+8], %r7769;
	ld.local.u32 	%r7774, [%rd1];
	// inline asm
	prmt.b32 %r7773, %r7774, %r12340, %r70;
	// inline asm
	st.local.u32 	[%rd31+4], %r7773;
	st.local.u32 	[%rd31], %r12340;
	st.local.u32 	[%rd4], %r12340;
	st.local.v2.u32 	[%rd30+4], {%r12340, %r12340};
	st.local.u32 	[%rd30], %r12340;
	st.local.u32 	[%rd3], %r12340;
	st.local.v2.u32 	[%rd29+4], {%r12340, %r12340};
	st.local.u32 	[%rd29], %r12340;
	st.local.u32 	[%rd2], %r12340;
	st.local.v2.u32 	[%rd28+4], {%r12340, %r12340};
	st.local.u32 	[%rd28], %r12340;
	st.local.u32 	[%rd1], %r12340;
	mov.u32 	%r12341, %r12340;
	mov.u32 	%r12354, %r12340;
	bra.uni 	BB4_407;

BB4_388:
	setp.eq.s32	%p199, %r4952, 30;
	@%p199 bra 	BB4_391;
	bra.uni 	BB4_389;

BB4_391:
	mov.u32 	%r12340, 0;
	// inline asm
	prmt.b32 %r12371, %r12340, %r7, %r70;
	// inline asm
	ld.local.v2.u32 	{%r5244, %r5245}, [%rd35+4];
	// inline asm
	prmt.b32 %r12372, %r5245, %r5244, %r70;
	// inline asm
	ld.local.u32 	%r5118, [%rd35+4];
	ld.local.u32 	%r5119, [%rd35];
	// inline asm
	prmt.b32 %r12373, %r5118, %r5119, %r70;
	// inline asm
	ld.local.u32 	%r5122, [%rd35];
	ld.local.u32 	%r5123, [%rd8];
	// inline asm
	prmt.b32 %r12366, %r5122, %r5123, %r70;
	// inline asm
	ld.local.u32 	%r5126, [%rd8];
	ld.local.u32 	%r5127, [%rd34+8];
	// inline asm
	prmt.b32 %r12367, %r5126, %r5127, %r70;
	// inline asm
	ld.local.v2.u32 	{%r5246, %r5247}, [%rd34+4];
	// inline asm
	prmt.b32 %r12368, %r5247, %r5246, %r70;
	// inline asm
	ld.local.u32 	%r5134, [%rd34+4];
	ld.local.u32 	%r5135, [%rd34];
	// inline asm
	prmt.b32 %r12369, %r5134, %r5135, %r70;
	// inline asm
	ld.local.u32 	%r5138, [%rd34];
	ld.local.u32 	%r5139, [%rd7];
	// inline asm
	prmt.b32 %r12362, %r5138, %r5139, %r70;
	// inline asm
	ld.local.u32 	%r5142, [%rd7];
	ld.local.u32 	%r5143, [%rd33+8];
	// inline asm
	prmt.b32 %r12363, %r5142, %r5143, %r70;
	// inline asm
	ld.local.v2.u32 	{%r5248, %r5249}, [%rd33+4];
	// inline asm
	prmt.b32 %r12364, %r5249, %r5248, %r70;
	// inline asm
	ld.local.u32 	%r5150, [%rd33+4];
	ld.local.u32 	%r5151, [%rd33];
	// inline asm
	prmt.b32 %r12365, %r5150, %r5151, %r70;
	// inline asm
	ld.local.u32 	%r5154, [%rd33];
	ld.local.u32 	%r5155, [%rd6];
	// inline asm
	prmt.b32 %r12358, %r5154, %r5155, %r70;
	// inline asm
	ld.local.u32 	%r5158, [%rd6];
	ld.local.u32 	%r5159, [%rd32+8];
	// inline asm
	prmt.b32 %r12359, %r5158, %r5159, %r70;
	// inline asm
	ld.local.v2.u32 	{%r5250, %r5251}, [%rd32+4];
	// inline asm
	prmt.b32 %r12360, %r5251, %r5250, %r70;
	// inline asm
	ld.local.u32 	%r5166, [%rd32+4];
	ld.local.u32 	%r5167, [%rd32];
	// inline asm
	prmt.b32 %r12361, %r5166, %r5167, %r70;
	// inline asm
	ld.local.u32 	%r5170, [%rd32];
	ld.local.u32 	%r5171, [%rd5];
	// inline asm
	prmt.b32 %r12354, %r5170, %r5171, %r70;
	// inline asm
	ld.local.u32 	%r5174, [%rd5];
	ld.local.u32 	%r5175, [%rd31+8];
	// inline asm
	prmt.b32 %r12355, %r5174, %r5175, %r70;
	// inline asm
	ld.local.v2.u32 	{%r5252, %r5253}, [%rd31+4];
	// inline asm
	prmt.b32 %r12356, %r5253, %r5252, %r70;
	// inline asm
	ld.local.u32 	%r5182, [%rd31+4];
	ld.local.u32 	%r5183, [%rd31];
	// inline asm
	prmt.b32 %r12357, %r5182, %r5183, %r70;
	// inline asm
	ld.local.u32 	%r5186, [%rd31];
	ld.local.u32 	%r5187, [%rd4];
	// inline asm
	prmt.b32 %r12350, %r5186, %r5187, %r70;
	// inline asm
	ld.local.u32 	%r5190, [%rd4];
	ld.local.u32 	%r5191, [%rd30+8];
	// inline asm
	prmt.b32 %r12351, %r5190, %r5191, %r70;
	// inline asm
	ld.local.v2.u32 	{%r5254, %r5255}, [%rd30+4];
	// inline asm
	prmt.b32 %r12352, %r5255, %r5254, %r70;
	// inline asm
	ld.local.u32 	%r5198, [%rd30+4];
	ld.local.u32 	%r5199, [%rd30];
	// inline asm
	prmt.b32 %r12353, %r5198, %r5199, %r70;
	// inline asm
	ld.local.u32 	%r5202, [%rd30];
	ld.local.u32 	%r5203, [%rd3];
	// inline asm
	prmt.b32 %r12346, %r5202, %r5203, %r70;
	// inline asm
	ld.local.u32 	%r5206, [%rd3];
	ld.local.u32 	%r5207, [%rd29+8];
	// inline asm
	prmt.b32 %r12347, %r5206, %r5207, %r70;
	// inline asm
	ld.local.v2.u32 	{%r5256, %r5257}, [%rd29+4];
	// inline asm
	prmt.b32 %r12348, %r5257, %r5256, %r70;
	// inline asm
	ld.local.u32 	%r5214, [%rd29+4];
	ld.local.u32 	%r5215, [%rd29];
	// inline asm
	prmt.b32 %r12349, %r5214, %r5215, %r70;
	// inline asm
	ld.local.u32 	%r5218, [%rd29];
	ld.local.u32 	%r5219, [%rd2];
	// inline asm
	prmt.b32 %r12342, %r5218, %r5219, %r70;
	// inline asm
	ld.local.u32 	%r5222, [%rd2];
	ld.local.u32 	%r5223, [%rd28+8];
	// inline asm
	prmt.b32 %r12343, %r5222, %r5223, %r70;
	// inline asm
	ld.local.v2.u32 	{%r5258, %r5259}, [%rd28+4];
	// inline asm
	prmt.b32 %r12344, %r5259, %r5258, %r70;
	// inline asm
	ld.local.u32 	%r5230, [%rd28+4];
	ld.local.u32 	%r5231, [%rd28];
	// inline asm
	prmt.b32 %r12345, %r5230, %r5231, %r70;
	// inline asm
	ld.local.u32 	%r5234, [%rd28];
	ld.local.u32 	%r5235, [%rd1];
	// inline asm
	prmt.b32 %r5233, %r5234, %r5235, %r70;
	// inline asm
	st.local.u32 	[%rd35+8], %r5233;
	ld.local.u32 	%r5238, [%rd1];
	// inline asm
	prmt.b32 %r5237, %r5238, %r12340, %r70;
	// inline asm
	st.local.u32 	[%rd35+4], %r5237;
	st.local.u32 	[%rd35], %r12340;
	st.local.u32 	[%rd8], %r12340;
	st.local.v2.u32 	[%rd34+4], {%r12340, %r12340};
	st.local.u32 	[%rd34], %r12340;
	st.local.u32 	[%rd7], %r12340;
	st.local.v2.u32 	[%rd33+4], {%r12340, %r12340};
	st.local.u32 	[%rd33], %r12340;
	st.local.u32 	[%rd6], %r12340;
	st.local.v2.u32 	[%rd32+4], {%r12340, %r12340};
	st.local.u32 	[%rd32], %r12340;
	st.local.u32 	[%rd5], %r12340;
	st.local.v2.u32 	[%rd31+4], {%r12340, %r12340};
	st.local.u32 	[%rd31], %r12340;
	st.local.u32 	[%rd4], %r12340;
	st.local.v2.u32 	[%rd30+4], {%r12340, %r12340};
	st.local.u32 	[%rd30], %r12340;
	st.local.u32 	[%rd3], %r12340;
	st.local.v2.u32 	[%rd29+4], {%r12340, %r12340};
	st.local.u32 	[%rd29], %r12340;
	st.local.u32 	[%rd2], %r12340;
	st.local.v2.u32 	[%rd28+4], {%r12340, %r12340};
	st.local.u32 	[%rd28], %r12340;
	st.local.u32 	[%rd1], %r12340;
	mov.u32 	%r12341, %r12340;
	mov.u32 	%r12370, %r12340;
	bra.uni 	BB4_413;

BB4_332:
	setp.eq.s32	%p241, %r4952, 1;
	mov.u32 	%r12343, %r12342;
	mov.u32 	%r12344, %r12342;
	mov.u32 	%r12345, %r12342;
	mov.u32 	%r12346, %r12342;
	mov.u32 	%r12347, %r12342;
	mov.u32 	%r12348, %r12342;
	mov.u32 	%r12349, %r12342;
	mov.u32 	%r12350, %r12342;
	mov.u32 	%r12351, %r12342;
	mov.u32 	%r12352, %r12342;
	mov.u32 	%r12353, %r12342;
	mov.u32 	%r12354, %r12342;
	mov.u32 	%r12355, %r12342;
	mov.u32 	%r12356, %r12342;
	mov.u32 	%r12357, %r12342;
	mov.u32 	%r12358, %r12342;
	mov.u32 	%r12359, %r12342;
	mov.u32 	%r12360, %r12342;
	mov.u32 	%r12361, %r12342;
	mov.u32 	%r12362, %r12342;
	mov.u32 	%r12363, %r12342;
	mov.u32 	%r12364, %r12342;
	mov.u32 	%r12365, %r12342;
	mov.u32 	%r12366, %r12342;
	mov.u32 	%r12367, %r12342;
	mov.u32 	%r12368, %r12342;
	mov.u32 	%r12369, %r12342;
	mov.u32 	%r12370, %r12342;
	mov.u32 	%r12371, %r12342;
	mov.u32 	%r12372, %r12342;
	mov.u32 	%r12373, %r12342;
	@%p241 bra 	BB4_333;
	bra.uni 	BB4_413;

BB4_333:
	mov.u32 	%r12341, 0;
	// inline asm
	prmt.b32 %r12344, %r12341, %r7, %r70;
	// inline asm
	ld.local.v2.u32 	{%r10057, %r10058}, [%rd35+4];
	// inline asm
	prmt.b32 %r12345, %r10058, %r10057, %r70;
	// inline asm
	ld.local.u32 	%r9903, [%rd35+4];
	ld.local.u32 	%r9904, [%rd35];
	// inline asm
	prmt.b32 %r9902, %r9903, %r9904, %r70;
	// inline asm
	st.local.u32 	[%rd35+8], %r9902;
	ld.local.u32 	%r9907, [%rd35];
	ld.local.u32 	%r9908, [%rd8];
	// inline asm
	prmt.b32 %r9906, %r9907, %r9908, %r70;
	// inline asm
	st.local.u32 	[%rd35+4], %r9906;
	ld.local.u32 	%r9911, [%rd8];
	ld.local.u32 	%r9912, [%rd34+8];
	// inline asm
	prmt.b32 %r9910, %r9911, %r9912, %r70;
	// inline asm
	st.local.u32 	[%rd35], %r9910;
	ld.local.v2.u32 	{%r10059, %r10060}, [%rd34+4];
	// inline asm
	prmt.b32 %r9914, %r10060, %r10059, %r70;
	// inline asm
	st.local.u32 	[%rd8], %r9914;
	ld.local.u32 	%r9919, [%rd34+4];
	ld.local.u32 	%r9920, [%rd34];
	// inline asm
	prmt.b32 %r9918, %r9919, %r9920, %r70;
	// inline asm
	st.local.u32 	[%rd34+8], %r9918;
	ld.local.u32 	%r9923, [%rd34];
	ld.local.u32 	%r9924, [%rd7];
	// inline asm
	prmt.b32 %r9922, %r9923, %r9924, %r70;
	// inline asm
	st.local.u32 	[%rd34+4], %r9922;
	ld.local.u32 	%r9927, [%rd7];
	ld.local.u32 	%r9928, [%rd33+8];
	// inline asm
	prmt.b32 %r9926, %r9927, %r9928, %r70;
	// inline asm
	st.local.u32 	[%rd34], %r9926;
	ld.local.v2.u32 	{%r10061, %r10062}, [%rd33+4];
	// inline asm
	prmt.b32 %r9930, %r10062, %r10061, %r70;
	// inline asm
	st.local.u32 	[%rd7], %r9930;
	ld.local.u32 	%r9935, [%rd33+4];
	ld.local.u32 	%r9936, [%rd33];
	// inline asm
	prmt.b32 %r9934, %r9935, %r9936, %r70;
	// inline asm
	st.local.u32 	[%rd33+8], %r9934;
	ld.local.u32 	%r9939, [%rd33];
	ld.local.u32 	%r9940, [%rd6];
	// inline asm
	prmt.b32 %r9938, %r9939, %r9940, %r70;
	// inline asm
	st.local.u32 	[%rd33+4], %r9938;
	ld.local.u32 	%r9943, [%rd6];
	ld.local.u32 	%r9944, [%rd32+8];
	// inline asm
	prmt.b32 %r9942, %r9943, %r9944, %r70;
	// inline asm
	st.local.u32 	[%rd33], %r9942;
	ld.local.v2.u32 	{%r10063, %r10064}, [%rd32+4];
	// inline asm
	prmt.b32 %r9946, %r10064, %r10063, %r70;
	// inline asm
	st.local.u32 	[%rd6], %r9946;
	ld.local.u32 	%r9951, [%rd32+4];
	ld.local.u32 	%r9952, [%rd32];
	// inline asm
	prmt.b32 %r9950, %r9951, %r9952, %r70;
	// inline asm
	st.local.u32 	[%rd32+8], %r9950;
	ld.local.u32 	%r9955, [%rd32];
	ld.local.u32 	%r9956, [%rd5];
	// inline asm
	prmt.b32 %r9954, %r9955, %r9956, %r70;
	// inline asm
	st.local.u32 	[%rd32+4], %r9954;
	ld.local.u32 	%r9959, [%rd5];
	ld.local.u32 	%r9960, [%rd31+8];
	// inline asm
	prmt.b32 %r9958, %r9959, %r9960, %r70;
	// inline asm
	st.local.u32 	[%rd32], %r9958;
	ld.local.v2.u32 	{%r10065, %r10066}, [%rd31+4];
	// inline asm
	prmt.b32 %r9962, %r10066, %r10065, %r70;
	// inline asm
	st.local.u32 	[%rd5], %r9962;
	ld.local.u32 	%r9967, [%rd31+4];
	ld.local.u32 	%r9968, [%rd31];
	// inline asm
	prmt.b32 %r9966, %r9967, %r9968, %r70;
	// inline asm
	st.local.u32 	[%rd31+8], %r9966;
	ld.local.u32 	%r9971, [%rd31];
	ld.local.u32 	%r9972, [%rd4];
	// inline asm
	prmt.b32 %r9970, %r9971, %r9972, %r70;
	// inline asm
	st.local.u32 	[%rd31+4], %r9970;
	ld.local.u32 	%r9975, [%rd4];
	ld.local.u32 	%r9976, [%rd30+8];
	// inline asm
	prmt.b32 %r9974, %r9975, %r9976, %r70;
	// inline asm
	st.local.u32 	[%rd31], %r9974;
	ld.local.v2.u32 	{%r10067, %r10068}, [%rd30+4];
	// inline asm
	prmt.b32 %r9978, %r10068, %r10067, %r70;
	// inline asm
	st.local.u32 	[%rd4], %r9978;
	ld.local.u32 	%r9983, [%rd30+4];
	ld.local.u32 	%r9984, [%rd30];
	// inline asm
	prmt.b32 %r9982, %r9983, %r9984, %r70;
	// inline asm
	st.local.u32 	[%rd30+8], %r9982;
	ld.local.u32 	%r9987, [%rd30];
	ld.local.u32 	%r9988, [%rd3];
	// inline asm
	prmt.b32 %r9986, %r9987, %r9988, %r70;
	// inline asm
	st.local.u32 	[%rd30+4], %r9986;
	ld.local.u32 	%r9991, [%rd3];
	ld.local.u32 	%r9992, [%rd29+8];
	// inline asm
	prmt.b32 %r9990, %r9991, %r9992, %r70;
	// inline asm
	st.local.u32 	[%rd30], %r9990;
	ld.local.v2.u32 	{%r10069, %r10070}, [%rd29+4];
	// inline asm
	prmt.b32 %r9994, %r10070, %r10069, %r70;
	// inline asm
	st.local.u32 	[%rd3], %r9994;
	ld.local.u32 	%r9999, [%rd29+4];
	ld.local.u32 	%r10000, [%rd29];
	// inline asm
	prmt.b32 %r9998, %r9999, %r10000, %r70;
	// inline asm
	st.local.u32 	[%rd29+8], %r9998;
	ld.local.u32 	%r10003, [%rd29];
	ld.local.u32 	%r10004, [%rd2];
	// inline asm
	prmt.b32 %r10002, %r10003, %r10004, %r70;
	// inline asm
	st.local.u32 	[%rd29+4], %r10002;
	ld.local.u32 	%r10007, [%rd2];
	ld.local.u32 	%r10008, [%rd28+8];
	// inline asm
	prmt.b32 %r10006, %r10007, %r10008, %r70;
	// inline asm
	st.local.u32 	[%rd29], %r10006;
	ld.local.v2.u32 	{%r10071, %r10072}, [%rd28+4];
	// inline asm
	prmt.b32 %r10010, %r10072, %r10071, %r70;
	// inline asm
	st.local.u32 	[%rd2], %r10010;
	ld.local.u32 	%r10015, [%rd28+4];
	ld.local.u32 	%r10016, [%rd28];
	// inline asm
	prmt.b32 %r10014, %r10015, %r10016, %r70;
	// inline asm
	st.local.u32 	[%rd28+8], %r10014;
	ld.local.u32 	%r10019, [%rd28];
	ld.local.u32 	%r10020, [%rd1];
	// inline asm
	prmt.b32 %r10018, %r10019, %r10020, %r70;
	// inline asm
	st.local.u32 	[%rd28+4], %r10018;
	ld.local.u32 	%r10023, [%rd1];
	// inline asm
	prmt.b32 %r12340, %r10023, %r12341, %r70;
	// inline asm
	st.local.u32 	[%rd28], %r12340;
	st.local.u32 	[%rd1], %r12341;
	mov.u32 	%r12342, %r12341;
	mov.u32 	%r12343, %r12341;
	mov.u32 	%r12346, %r12341;
	mov.u32 	%r12347, %r12341;
	mov.u32 	%r12348, %r12341;
	mov.u32 	%r12349, %r12341;
	mov.u32 	%r12350, %r12341;
	mov.u32 	%r12351, %r12341;
	mov.u32 	%r12352, %r12341;
	mov.u32 	%r12353, %r12341;
	mov.u32 	%r12354, %r12341;
	mov.u32 	%r12355, %r12341;
	mov.u32 	%r12356, %r12341;
	mov.u32 	%r12357, %r12341;
	mov.u32 	%r12358, %r12341;
	mov.u32 	%r12359, %r12341;
	mov.u32 	%r12360, %r12341;
	mov.u32 	%r12361, %r12341;
	mov.u32 	%r12362, %r12341;
	mov.u32 	%r12363, %r12341;
	mov.u32 	%r12364, %r12341;
	mov.u32 	%r12365, %r12341;
	mov.u32 	%r12366, %r12341;
	mov.u32 	%r12367, %r12341;
	mov.u32 	%r12368, %r12341;
	mov.u32 	%r12369, %r12341;
	mov.u32 	%r12370, %r12341;
	mov.u32 	%r12371, %r12341;
	mov.u32 	%r12372, %r12341;
	mov.u32 	%r12373, %r12341;
	bra.uni 	BB4_413;

BB4_364:
	setp.eq.s32	%p218, %r4952, 17;
	mov.u32 	%r12343, %r12342;
	mov.u32 	%r12344, %r12342;
	mov.u32 	%r12345, %r12342;
	mov.u32 	%r12346, %r12342;
	mov.u32 	%r12347, %r12342;
	mov.u32 	%r12348, %r12342;
	mov.u32 	%r12349, %r12342;
	mov.u32 	%r12350, %r12342;
	mov.u32 	%r12351, %r12342;
	mov.u32 	%r12352, %r12342;
	mov.u32 	%r12353, %r12342;
	mov.u32 	%r12354, %r12342;
	mov.u32 	%r12355, %r12342;
	mov.u32 	%r12356, %r12342;
	mov.u32 	%r12357, %r12342;
	mov.u32 	%r12358, %r12342;
	mov.u32 	%r12359, %r12342;
	mov.u32 	%r12360, %r12342;
	mov.u32 	%r12361, %r12342;
	mov.u32 	%r12362, %r12342;
	mov.u32 	%r12363, %r12342;
	mov.u32 	%r12364, %r12342;
	mov.u32 	%r12365, %r12342;
	mov.u32 	%r12366, %r12342;
	mov.u32 	%r12367, %r12342;
	mov.u32 	%r12368, %r12342;
	mov.u32 	%r12369, %r12342;
	mov.u32 	%r12370, %r12342;
	mov.u32 	%r12371, %r12342;
	mov.u32 	%r12372, %r12342;
	mov.u32 	%r12373, %r12342;
	@%p218 bra 	BB4_365;
	bra.uni 	BB4_413;

BB4_365:
	mov.u32 	%r12340, 0;
	// inline asm
	prmt.b32 %r12360, %r12340, %r7, %r70;
	// inline asm
	ld.local.v2.u32 	{%r7298, %r7299}, [%rd35+4];
	// inline asm
	prmt.b32 %r12361, %r7299, %r7298, %r70;
	// inline asm
	ld.local.u32 	%r7159, [%rd35+4];
	ld.local.u32 	%r7160, [%rd35];
	// inline asm
	prmt.b32 %r12354, %r7159, %r7160, %r70;
	// inline asm
	ld.local.u32 	%r7163, [%rd35];
	ld.local.u32 	%r7164, [%rd8];
	// inline asm
	prmt.b32 %r12355, %r7163, %r7164, %r70;
	// inline asm
	ld.local.u32 	%r7167, [%rd8];
	ld.local.u32 	%r7168, [%rd34+8];
	// inline asm
	prmt.b32 %r12356, %r7167, %r7168, %r70;
	// inline asm
	ld.local.v2.u32 	{%r7300, %r7301}, [%rd34+4];
	// inline asm
	prmt.b32 %r12357, %r7301, %r7300, %r70;
	// inline asm
	ld.local.u32 	%r7175, [%rd34+4];
	ld.local.u32 	%r7176, [%rd34];
	// inline asm
	prmt.b32 %r12350, %r7175, %r7176, %r70;
	// inline asm
	ld.local.u32 	%r7179, [%rd34];
	ld.local.u32 	%r7180, [%rd7];
	// inline asm
	prmt.b32 %r12351, %r7179, %r7180, %r70;
	// inline asm
	ld.local.u32 	%r7183, [%rd7];
	ld.local.u32 	%r7184, [%rd33+8];
	// inline asm
	prmt.b32 %r12352, %r7183, %r7184, %r70;
	// inline asm
	ld.local.v2.u32 	{%r7302, %r7303}, [%rd33+4];
	// inline asm
	prmt.b32 %r12353, %r7303, %r7302, %r70;
	// inline asm
	ld.local.u32 	%r7191, [%rd33+4];
	ld.local.u32 	%r7192, [%rd33];
	// inline asm
	prmt.b32 %r12346, %r7191, %r7192, %r70;
	// inline asm
	ld.local.u32 	%r7195, [%rd33];
	ld.local.u32 	%r7196, [%rd6];
	// inline asm
	prmt.b32 %r12347, %r7195, %r7196, %r70;
	// inline asm
	ld.local.u32 	%r7199, [%rd6];
	ld.local.u32 	%r7200, [%rd32+8];
	// inline asm
	prmt.b32 %r12348, %r7199, %r7200, %r70;
	// inline asm
	ld.local.v2.u32 	{%r7304, %r7305}, [%rd32+4];
	// inline asm
	prmt.b32 %r12349, %r7305, %r7304, %r70;
	// inline asm
	ld.local.u32 	%r7207, [%rd32+4];
	ld.local.u32 	%r7208, [%rd32];
	// inline asm
	prmt.b32 %r12342, %r7207, %r7208, %r70;
	// inline asm
	ld.local.u32 	%r7211, [%rd32];
	ld.local.u32 	%r7212, [%rd5];
	// inline asm
	prmt.b32 %r12343, %r7211, %r7212, %r70;
	// inline asm
	ld.local.u32 	%r7215, [%rd5];
	ld.local.u32 	%r7216, [%rd31+8];
	// inline asm
	prmt.b32 %r12344, %r7215, %r7216, %r70;
	// inline asm
	ld.local.v2.u32 	{%r7306, %r7307}, [%rd31+4];
	// inline asm
	prmt.b32 %r12345, %r7307, %r7306, %r70;
	// inline asm
	ld.local.u32 	%r7223, [%rd31+4];
	ld.local.u32 	%r7224, [%rd31];
	// inline asm
	prmt.b32 %r7222, %r7223, %r7224, %r70;
	// inline asm
	st.local.u32 	[%rd35+8], %r7222;
	ld.local.u32 	%r7227, [%rd31];
	ld.local.u32 	%r7228, [%rd4];
	// inline asm
	prmt.b32 %r7226, %r7227, %r7228, %r70;
	// inline asm
	st.local.u32 	[%rd35+4], %r7226;
	ld.local.u32 	%r7231, [%rd4];
	ld.local.u32 	%r7232, [%rd30+8];
	// inline asm
	prmt.b32 %r7230, %r7231, %r7232, %r70;
	// inline asm
	st.local.u32 	[%rd35], %r7230;
	ld.local.v2.u32 	{%r7308, %r7309}, [%rd30+4];
	// inline asm
	prmt.b32 %r7234, %r7309, %r7308, %r70;
	// inline asm
	st.local.u32 	[%rd8], %r7234;
	ld.local.u32 	%r7239, [%rd30+4];
	ld.local.u32 	%r7240, [%rd30];
	// inline asm
	prmt.b32 %r7238, %r7239, %r7240, %r70;
	// inline asm
	st.local.u32 	[%rd34+8], %r7238;
	ld.local.u32 	%r7243, [%rd30];
	ld.local.u32 	%r7244, [%rd3];
	// inline asm
	prmt.b32 %r7242, %r7243, %r7244, %r70;
	// inline asm
	st.local.u32 	[%rd34+4], %r7242;
	ld.local.u32 	%r7247, [%rd3];
	ld.local.u32 	%r7248, [%rd29+8];
	// inline asm
	prmt.b32 %r7246, %r7247, %r7248, %r70;
	// inline asm
	st.local.u32 	[%rd34], %r7246;
	ld.local.v2.u32 	{%r7310, %r7311}, [%rd29+4];
	// inline asm
	prmt.b32 %r7250, %r7311, %r7310, %r70;
	// inline asm
	st.local.u32 	[%rd7], %r7250;
	ld.local.u32 	%r7255, [%rd29+4];
	ld.local.u32 	%r7256, [%rd29];
	// inline asm
	prmt.b32 %r7254, %r7255, %r7256, %r70;
	// inline asm
	st.local.u32 	[%rd33+8], %r7254;
	ld.local.u32 	%r7259, [%rd29];
	ld.local.u32 	%r7260, [%rd2];
	// inline asm
	prmt.b32 %r7258, %r7259, %r7260, %r70;
	// inline asm
	st.local.u32 	[%rd33+4], %r7258;
	ld.local.u32 	%r7263, [%rd2];
	ld.local.u32 	%r7264, [%rd28+8];
	// inline asm
	prmt.b32 %r7262, %r7263, %r7264, %r70;
	// inline asm
	st.local.u32 	[%rd33], %r7262;
	ld.local.v2.u32 	{%r7312, %r7313}, [%rd28+4];
	// inline asm
	prmt.b32 %r7266, %r7313, %r7312, %r70;
	// inline asm
	st.local.u32 	[%rd6], %r7266;
	ld.local.u32 	%r7271, [%rd28+4];
	ld.local.u32 	%r7272, [%rd28];
	// inline asm
	prmt.b32 %r7270, %r7271, %r7272, %r70;
	// inline asm
	st.local.u32 	[%rd32+8], %r7270;
	ld.local.u32 	%r7275, [%rd28];
	ld.local.u32 	%r7276, [%rd1];
	// inline asm
	prmt.b32 %r7274, %r7275, %r7276, %r70;
	// inline asm
	st.local.u32 	[%rd32+4], %r7274;
	ld.local.u32 	%r7279, [%rd1];
	// inline asm
	prmt.b32 %r7278, %r7279, %r12340, %r70;
	// inline asm
	st.local.u32 	[%rd32], %r7278;
	st.local.u32 	[%rd5], %r12340;
	st.local.v2.u32 	[%rd31+4], {%r12340, %r12340};
	st.local.u32 	[%rd31], %r12340;
	st.local.u32 	[%rd4], %r12340;
	st.local.v2.u32 	[%rd30+4], {%r12340, %r12340};
	st.local.u32 	[%rd30], %r12340;
	st.local.u32 	[%rd3], %r12340;
	st.local.v2.u32 	[%rd29+4], {%r12340, %r12340};
	st.local.u32 	[%rd29], %r12340;
	st.local.u32 	[%rd2], %r12340;
	st.local.v2.u32 	[%rd28+4], {%r12340, %r12340};
	st.local.u32 	[%rd28], %r12340;
	st.local.u32 	[%rd1], %r12340;
	mov.u32 	%r12341, %r12340;
	mov.u32 	%r12358, %r12340;
	mov.u32 	%r12359, %r12340;
	bra.uni 	BB4_408;

BB4_348:
	setp.eq.s32	%p230, %r4952, 9;
	mov.u32 	%r12343, %r12342;
	mov.u32 	%r12344, %r12342;
	mov.u32 	%r12345, %r12342;
	mov.u32 	%r12346, %r12342;
	mov.u32 	%r12347, %r12342;
	mov.u32 	%r12348, %r12342;
	mov.u32 	%r12349, %r12342;
	mov.u32 	%r12350, %r12342;
	mov.u32 	%r12351, %r12342;
	mov.u32 	%r12352, %r12342;
	mov.u32 	%r12353, %r12342;
	mov.u32 	%r12354, %r12342;
	mov.u32 	%r12355, %r12342;
	mov.u32 	%r12356, %r12342;
	mov.u32 	%r12357, %r12342;
	mov.u32 	%r12358, %r12342;
	mov.u32 	%r12359, %r12342;
	mov.u32 	%r12360, %r12342;
	mov.u32 	%r12361, %r12342;
	mov.u32 	%r12362, %r12342;
	mov.u32 	%r12363, %r12342;
	mov.u32 	%r12364, %r12342;
	mov.u32 	%r12365, %r12342;
	mov.u32 	%r12366, %r12342;
	mov.u32 	%r12367, %r12342;
	mov.u32 	%r12368, %r12342;
	mov.u32 	%r12369, %r12342;
	mov.u32 	%r12370, %r12342;
	mov.u32 	%r12371, %r12342;
	mov.u32 	%r12372, %r12342;
	mov.u32 	%r12373, %r12342;
	@%p230 bra 	BB4_349;
	bra.uni 	BB4_413;

BB4_349:
	mov.u32 	%r12340, 0;
	// inline asm
	prmt.b32 %r12352, %r12340, %r7, %r70;
	// inline asm
	ld.local.v2.u32 	{%r8646, %r8647}, [%rd35+4];
	// inline asm
	prmt.b32 %r12353, %r8647, %r8646, %r70;
	// inline asm
	ld.local.u32 	%r8499, [%rd35+4];
	ld.local.u32 	%r8500, [%rd35];
	// inline asm
	prmt.b32 %r12346, %r8499, %r8500, %r70;
	// inline asm
	ld.local.u32 	%r8503, [%rd35];
	ld.local.u32 	%r8504, [%rd8];
	// inline asm
	prmt.b32 %r12347, %r8503, %r8504, %r70;
	// inline asm
	ld.local.u32 	%r8507, [%rd8];
	ld.local.u32 	%r8508, [%rd34+8];
	// inline asm
	prmt.b32 %r12348, %r8507, %r8508, %r70;
	// inline asm
	ld.local.v2.u32 	{%r8648, %r8649}, [%rd34+4];
	// inline asm
	prmt.b32 %r12349, %r8649, %r8648, %r70;
	// inline asm
	ld.local.u32 	%r8515, [%rd34+4];
	ld.local.u32 	%r8516, [%rd34];
	// inline asm
	prmt.b32 %r12342, %r8515, %r8516, %r70;
	// inline asm
	ld.local.u32 	%r8519, [%rd34];
	ld.local.u32 	%r8520, [%rd7];
	// inline asm
	prmt.b32 %r12343, %r8519, %r8520, %r70;
	// inline asm
	ld.local.u32 	%r8523, [%rd7];
	ld.local.u32 	%r8524, [%rd33+8];
	// inline asm
	prmt.b32 %r12344, %r8523, %r8524, %r70;
	// inline asm
	ld.local.v2.u32 	{%r8650, %r8651}, [%rd33+4];
	// inline asm
	prmt.b32 %r12345, %r8651, %r8650, %r70;
	// inline asm
	ld.local.u32 	%r8531, [%rd33+4];
	ld.local.u32 	%r8532, [%rd33];
	// inline asm
	prmt.b32 %r8530, %r8531, %r8532, %r70;
	// inline asm
	st.local.u32 	[%rd35+8], %r8530;
	ld.local.u32 	%r8535, [%rd33];
	ld.local.u32 	%r8536, [%rd6];
	// inline asm
	prmt.b32 %r8534, %r8535, %r8536, %r70;
	// inline asm
	st.local.u32 	[%rd35+4], %r8534;
	ld.local.u32 	%r8539, [%rd6];
	ld.local.u32 	%r8540, [%rd32+8];
	// inline asm
	prmt.b32 %r8538, %r8539, %r8540, %r70;
	// inline asm
	st.local.u32 	[%rd35], %r8538;
	ld.local.v2.u32 	{%r8652, %r8653}, [%rd32+4];
	// inline asm
	prmt.b32 %r8542, %r8653, %r8652, %r70;
	// inline asm
	st.local.u32 	[%rd8], %r8542;
	ld.local.u32 	%r8547, [%rd32+4];
	ld.local.u32 	%r8548, [%rd32];
	// inline asm
	prmt.b32 %r8546, %r8547, %r8548, %r70;
	// inline asm
	st.local.u32 	[%rd34+8], %r8546;
	ld.local.u32 	%r8551, [%rd32];
	ld.local.u32 	%r8552, [%rd5];
	// inline asm
	prmt.b32 %r8550, %r8551, %r8552, %r70;
	// inline asm
	st.local.u32 	[%rd34+4], %r8550;
	ld.local.u32 	%r8555, [%rd5];
	ld.local.u32 	%r8556, [%rd31+8];
	// inline asm
	prmt.b32 %r8554, %r8555, %r8556, %r70;
	// inline asm
	st.local.u32 	[%rd34], %r8554;
	ld.local.v2.u32 	{%r8654, %r8655}, [%rd31+4];
	// inline asm
	prmt.b32 %r8558, %r8655, %r8654, %r70;
	// inline asm
	st.local.u32 	[%rd7], %r8558;
	ld.local.u32 	%r8563, [%rd31+4];
	ld.local.u32 	%r8564, [%rd31];
	// inline asm
	prmt.b32 %r8562, %r8563, %r8564, %r70;
	// inline asm
	st.local.u32 	[%rd33+8], %r8562;
	ld.local.u32 	%r8567, [%rd31];
	ld.local.u32 	%r8568, [%rd4];
	// inline asm
	prmt.b32 %r8566, %r8567, %r8568, %r70;
	// inline asm
	st.local.u32 	[%rd33+4], %r8566;
	ld.local.u32 	%r8571, [%rd4];
	ld.local.u32 	%r8572, [%rd30+8];
	// inline asm
	prmt.b32 %r8570, %r8571, %r8572, %r70;
	// inline asm
	st.local.u32 	[%rd33], %r8570;
	ld.local.v2.u32 	{%r8656, %r8657}, [%rd30+4];
	// inline asm
	prmt.b32 %r8574, %r8657, %r8656, %r70;
	// inline asm
	st.local.u32 	[%rd6], %r8574;
	ld.local.u32 	%r8579, [%rd30+4];
	ld.local.u32 	%r8580, [%rd30];
	// inline asm
	prmt.b32 %r8578, %r8579, %r8580, %r70;
	// inline asm
	st.local.u32 	[%rd32+8], %r8578;
	ld.local.u32 	%r8583, [%rd30];
	ld.local.u32 	%r8584, [%rd3];
	// inline asm
	prmt.b32 %r8582, %r8583, %r8584, %r70;
	// inline asm
	st.local.u32 	[%rd32+4], %r8582;
	ld.local.u32 	%r8587, [%rd3];
	ld.local.u32 	%r8588, [%rd29+8];
	// inline asm
	prmt.b32 %r8586, %r8587, %r8588, %r70;
	// inline asm
	st.local.u32 	[%rd32], %r8586;
	ld.local.v2.u32 	{%r8658, %r8659}, [%rd29+4];
	// inline asm
	prmt.b32 %r8590, %r8659, %r8658, %r70;
	// inline asm
	st.local.u32 	[%rd5], %r8590;
	ld.local.u32 	%r8595, [%rd29+4];
	ld.local.u32 	%r8596, [%rd29];
	// inline asm
	prmt.b32 %r8594, %r8595, %r8596, %r70;
	// inline asm
	st.local.u32 	[%rd31+8], %r8594;
	ld.local.u32 	%r8599, [%rd29];
	ld.local.u32 	%r8600, [%rd2];
	// inline asm
	prmt.b32 %r8598, %r8599, %r8600, %r70;
	// inline asm
	st.local.u32 	[%rd31+4], %r8598;
	ld.local.u32 	%r8603, [%rd2];
	ld.local.u32 	%r8604, [%rd28+8];
	// inline asm
	prmt.b32 %r8602, %r8603, %r8604, %r70;
	// inline asm
	st.local.u32 	[%rd31], %r8602;
	ld.local.v2.u32 	{%r8660, %r8661}, [%rd28+4];
	// inline asm
	prmt.b32 %r8606, %r8661, %r8660, %r70;
	// inline asm
	st.local.u32 	[%rd4], %r8606;
	ld.local.u32 	%r8611, [%rd28+4];
	ld.local.u32 	%r8612, [%rd28];
	// inline asm
	prmt.b32 %r8610, %r8611, %r8612, %r70;
	// inline asm
	st.local.u32 	[%rd30+8], %r8610;
	ld.local.u32 	%r8615, [%rd28];
	ld.local.u32 	%r8616, [%rd1];
	// inline asm
	prmt.b32 %r8614, %r8615, %r8616, %r70;
	// inline asm
	st.local.u32 	[%rd30+4], %r8614;
	ld.local.u32 	%r8619, [%rd1];
	// inline asm
	prmt.b32 %r8618, %r8619, %r12340, %r70;
	// inline asm
	st.local.u32 	[%rd30], %r8618;
	st.local.u32 	[%rd3], %r12340;
	st.local.v2.u32 	[%rd29+4], {%r12340, %r12340};
	st.local.u32 	[%rd29], %r12340;
	st.local.u32 	[%rd2], %r12340;
	st.local.v2.u32 	[%rd28+4], {%r12340, %r12340};
	st.local.u32 	[%rd28], %r12340;
	st.local.u32 	[%rd1], %r12340;
	mov.u32 	%r12341, %r12340;
	mov.u32 	%r12350, %r12340;
	mov.u32 	%r12351, %r12340;
	bra.uni 	BB4_406;

BB4_379:
	setp.eq.s32	%p207, %r4952, 25;
	mov.u32 	%r12343, %r12342;
	mov.u32 	%r12344, %r12342;
	mov.u32 	%r12345, %r12342;
	mov.u32 	%r12346, %r12342;
	mov.u32 	%r12347, %r12342;
	mov.u32 	%r12348, %r12342;
	mov.u32 	%r12349, %r12342;
	mov.u32 	%r12350, %r12342;
	mov.u32 	%r12351, %r12342;
	mov.u32 	%r12352, %r12342;
	mov.u32 	%r12353, %r12342;
	mov.u32 	%r12354, %r12342;
	mov.u32 	%r12355, %r12342;
	mov.u32 	%r12356, %r12342;
	mov.u32 	%r12357, %r12342;
	mov.u32 	%r12358, %r12342;
	mov.u32 	%r12359, %r12342;
	mov.u32 	%r12360, %r12342;
	mov.u32 	%r12361, %r12342;
	mov.u32 	%r12362, %r12342;
	mov.u32 	%r12363, %r12342;
	mov.u32 	%r12364, %r12342;
	mov.u32 	%r12365, %r12342;
	mov.u32 	%r12366, %r12342;
	mov.u32 	%r12367, %r12342;
	mov.u32 	%r12368, %r12342;
	mov.u32 	%r12369, %r12342;
	mov.u32 	%r12370, %r12342;
	mov.u32 	%r12371, %r12342;
	mov.u32 	%r12372, %r12342;
	mov.u32 	%r12373, %r12342;
	@%p207 bra 	BB4_380;
	bra.uni 	BB4_413;

BB4_380:
	mov.u32 	%r12340, 0;
	// inline asm
	prmt.b32 %r12368, %r12340, %r7, %r70;
	// inline asm
	ld.local.v2.u32 	{%r6014, %r6015}, [%rd35+4];
	// inline asm
	prmt.b32 %r12369, %r6015, %r6014, %r70;
	// inline asm
	ld.local.u32 	%r5883, [%rd35+4];
	ld.local.u32 	%r5884, [%rd35];
	// inline asm
	prmt.b32 %r12362, %r5883, %r5884, %r70;
	// inline asm
	ld.local.u32 	%r5887, [%rd35];
	ld.local.u32 	%r5888, [%rd8];
	// inline asm
	prmt.b32 %r12363, %r5887, %r5888, %r70;
	// inline asm
	ld.local.u32 	%r5891, [%rd8];
	ld.local.u32 	%r5892, [%rd34+8];
	// inline asm
	prmt.b32 %r12364, %r5891, %r5892, %r70;
	// inline asm
	ld.local.v2.u32 	{%r6016, %r6017}, [%rd34+4];
	// inline asm
	prmt.b32 %r12365, %r6017, %r6016, %r70;
	// inline asm
	ld.local.u32 	%r5899, [%rd34+4];
	ld.local.u32 	%r5900, [%rd34];
	// inline asm
	prmt.b32 %r12358, %r5899, %r5900, %r70;
	// inline asm
	ld.local.u32 	%r5903, [%rd34];
	ld.local.u32 	%r5904, [%rd7];
	// inline asm
	prmt.b32 %r12359, %r5903, %r5904, %r70;
	// inline asm
	ld.local.u32 	%r5907, [%rd7];
	ld.local.u32 	%r5908, [%rd33+8];
	// inline asm
	prmt.b32 %r12360, %r5907, %r5908, %r70;
	// inline asm
	ld.local.v2.u32 	{%r6018, %r6019}, [%rd33+4];
	// inline asm
	prmt.b32 %r12361, %r6019, %r6018, %r70;
	// inline asm
	ld.local.u32 	%r5915, [%rd33+4];
	ld.local.u32 	%r5916, [%rd33];
	// inline asm
	prmt.b32 %r12354, %r5915, %r5916, %r70;
	// inline asm
	ld.local.u32 	%r5919, [%rd33];
	ld.local.u32 	%r5920, [%rd6];
	// inline asm
	prmt.b32 %r12355, %r5919, %r5920, %r70;
	// inline asm
	ld.local.u32 	%r5923, [%rd6];
	ld.local.u32 	%r5924, [%rd32+8];
	// inline asm
	prmt.b32 %r12356, %r5923, %r5924, %r70;
	// inline asm
	ld.local.v2.u32 	{%r6020, %r6021}, [%rd32+4];
	// inline asm
	prmt.b32 %r12357, %r6021, %r6020, %r70;
	// inline asm
	ld.local.u32 	%r5931, [%rd32+4];
	ld.local.u32 	%r5932, [%rd32];
	// inline asm
	prmt.b32 %r12350, %r5931, %r5932, %r70;
	// inline asm
	ld.local.u32 	%r5935, [%rd32];
	ld.local.u32 	%r5936, [%rd5];
	// inline asm
	prmt.b32 %r12351, %r5935, %r5936, %r70;
	// inline asm
	ld.local.u32 	%r5939, [%rd5];
	ld.local.u32 	%r5940, [%rd31+8];
	// inline asm
	prmt.b32 %r12352, %r5939, %r5940, %r70;
	// inline asm
	ld.local.v2.u32 	{%r6022, %r6023}, [%rd31+4];
	// inline asm
	prmt.b32 %r12353, %r6023, %r6022, %r70;
	// inline asm
	ld.local.u32 	%r5947, [%rd31+4];
	ld.local.u32 	%r5948, [%rd31];
	// inline asm
	prmt.b32 %r12346, %r5947, %r5948, %r70;
	// inline asm
	ld.local.u32 	%r5951, [%rd31];
	ld.local.u32 	%r5952, [%rd4];
	// inline asm
	prmt.b32 %r12347, %r5951, %r5952, %r70;
	// inline asm
	ld.local.u32 	%r5955, [%rd4];
	ld.local.u32 	%r5956, [%rd30+8];
	// inline asm
	prmt.b32 %r12348, %r5955, %r5956, %r70;
	// inline asm
	ld.local.v2.u32 	{%r6024, %r6025}, [%rd30+4];
	// inline asm
	prmt.b32 %r12349, %r6025, %r6024, %r70;
	// inline asm
	ld.local.u32 	%r5963, [%rd30+4];
	ld.local.u32 	%r5964, [%rd30];
	// inline asm
	prmt.b32 %r12342, %r5963, %r5964, %r70;
	// inline asm
	ld.local.u32 	%r5967, [%rd30];
	ld.local.u32 	%r5968, [%rd3];
	// inline asm
	prmt.b32 %r12343, %r5967, %r5968, %r70;
	// inline asm
	ld.local.u32 	%r5971, [%rd3];
	ld.local.u32 	%r5972, [%rd29+8];
	// inline asm
	prmt.b32 %r12344, %r5971, %r5972, %r70;
	// inline asm
	ld.local.v2.u32 	{%r6026, %r6027}, [%rd29+4];
	// inline asm
	prmt.b32 %r12345, %r6027, %r6026, %r70;
	// inline asm
	ld.local.u32 	%r5979, [%rd29+4];
	ld.local.u32 	%r5980, [%rd29];
	// inline asm
	prmt.b32 %r5978, %r5979, %r5980, %r70;
	// inline asm
	st.local.u32 	[%rd35+8], %r5978;
	ld.local.u32 	%r5983, [%rd29];
	ld.local.u32 	%r5984, [%rd2];
	// inline asm
	prmt.b32 %r5982, %r5983, %r5984, %r70;
	// inline asm
	st.local.u32 	[%rd35+4], %r5982;
	ld.local.u32 	%r5987, [%rd2];
	ld.local.u32 	%r5988, [%rd28+8];
	// inline asm
	prmt.b32 %r5986, %r5987, %r5988, %r70;
	// inline asm
	st.local.u32 	[%rd35], %r5986;
	ld.local.v2.u32 	{%r6028, %r6029}, [%rd28+4];
	// inline asm
	prmt.b32 %r5990, %r6029, %r6028, %r70;
	// inline asm
	st.local.u32 	[%rd8], %r5990;
	ld.local.u32 	%r5995, [%rd28+4];
	ld.local.u32 	%r5996, [%rd28];
	// inline asm
	prmt.b32 %r5994, %r5995, %r5996, %r70;
	// inline asm
	st.local.u32 	[%rd34+8], %r5994;
	ld.local.u32 	%r5999, [%rd28];
	ld.local.u32 	%r6000, [%rd1];
	// inline asm
	prmt.b32 %r5998, %r5999, %r6000, %r70;
	// inline asm
	st.local.u32 	[%rd34+4], %r5998;
	ld.local.u32 	%r6003, [%rd1];
	// inline asm
	prmt.b32 %r6002, %r6003, %r12340, %r70;
	// inline asm
	st.local.u32 	[%rd34], %r6002;
	st.local.u32 	[%rd7], %r12340;
	st.local.v2.u32 	[%rd33+4], {%r12340, %r12340};
	st.local.u32 	[%rd33], %r12340;
	st.local.u32 	[%rd6], %r12340;
	st.local.v2.u32 	[%rd32+4], {%r12340, %r12340};
	st.local.u32 	[%rd32], %r12340;
	st.local.u32 	[%rd5], %r12340;
	st.local.v2.u32 	[%rd31+4], {%r12340, %r12340};
	st.local.u32 	[%rd31], %r12340;
	st.local.u32 	[%rd4], %r12340;
	st.local.v2.u32 	[%rd30+4], {%r12340, %r12340};
	st.local.u32 	[%rd30], %r12340;
	st.local.u32 	[%rd3], %r12340;
	st.local.v2.u32 	[%rd29+4], {%r12340, %r12340};
	st.local.u32 	[%rd29], %r12340;
	st.local.u32 	[%rd2], %r12340;
	st.local.v2.u32 	[%rd28+4], {%r12340, %r12340};
	st.local.u32 	[%rd28], %r12340;
	st.local.u32 	[%rd1], %r12340;
	mov.u32 	%r12341, %r12340;
	mov.u32 	%r12366, %r12340;
	mov.u32 	%r12367, %r12340;
	bra.uni 	BB4_410;

BB4_340:
	setp.eq.s32	%p236, %r4952, 5;
	mov.u32 	%r12343, %r12342;
	mov.u32 	%r12344, %r12342;
	mov.u32 	%r12345, %r12342;
	mov.u32 	%r12346, %r12342;
	mov.u32 	%r12347, %r12342;
	mov.u32 	%r12348, %r12342;
	mov.u32 	%r12349, %r12342;
	mov.u32 	%r12350, %r12342;
	mov.u32 	%r12351, %r12342;
	mov.u32 	%r12352, %r12342;
	mov.u32 	%r12353, %r12342;
	mov.u32 	%r12354, %r12342;
	mov.u32 	%r12355, %r12342;
	mov.u32 	%r12356, %r12342;
	mov.u32 	%r12357, %r12342;
	mov.u32 	%r12358, %r12342;
	mov.u32 	%r12359, %r12342;
	mov.u32 	%r12360, %r12342;
	mov.u32 	%r12361, %r12342;
	mov.u32 	%r12362, %r12342;
	mov.u32 	%r12363, %r12342;
	mov.u32 	%r12364, %r12342;
	mov.u32 	%r12365, %r12342;
	mov.u32 	%r12366, %r12342;
	mov.u32 	%r12367, %r12342;
	mov.u32 	%r12368, %r12342;
	mov.u32 	%r12369, %r12342;
	mov.u32 	%r12370, %r12342;
	mov.u32 	%r12371, %r12342;
	mov.u32 	%r12372, %r12342;
	mov.u32 	%r12373, %r12342;
	@%p236 bra 	BB4_341;
	bra.uni 	BB4_413;

BB4_341:
	mov.u32 	%r12340, 0;
	// inline asm
	prmt.b32 %r12348, %r12340, %r7, %r70;
	// inline asm
	ld.local.v2.u32 	{%r9344, %r9345}, [%rd35+4];
	// inline asm
	prmt.b32 %r12349, %r9345, %r9344, %r70;
	// inline asm
	ld.local.u32 	%r9193, [%rd35+4];
	ld.local.u32 	%r9194, [%rd35];
	// inline asm
	prmt.b32 %r12342, %r9193, %r9194, %r70;
	// inline asm
	ld.local.u32 	%r9197, [%rd35];
	ld.local.u32 	%r9198, [%rd8];
	// inline asm
	prmt.b32 %r12343, %r9197, %r9198, %r70;
	// inline asm
	ld.local.u32 	%r9201, [%rd8];
	ld.local.u32 	%r9202, [%rd34+8];
	// inline asm
	prmt.b32 %r12344, %r9201, %r9202, %r70;
	// inline asm
	ld.local.v2.u32 	{%r9346, %r9347}, [%rd34+4];
	// inline asm
	prmt.b32 %r12345, %r9347, %r9346, %r70;
	// inline asm
	ld.local.u32 	%r9209, [%rd34+4];
	ld.local.u32 	%r9210, [%rd34];
	// inline asm
	prmt.b32 %r9208, %r9209, %r9210, %r70;
	// inline asm
	st.local.u32 	[%rd35+8], %r9208;
	ld.local.u32 	%r9213, [%rd34];
	ld.local.u32 	%r9214, [%rd7];
	// inline asm
	prmt.b32 %r9212, %r9213, %r9214, %r70;
	// inline asm
	st.local.u32 	[%rd35+4], %r9212;
	ld.local.u32 	%r9217, [%rd7];
	ld.local.u32 	%r9218, [%rd33+8];
	// inline asm
	prmt.b32 %r9216, %r9217, %r9218, %r70;
	// inline asm
	st.local.u32 	[%rd35], %r9216;
	ld.local.v2.u32 	{%r9348, %r9349}, [%rd33+4];
	// inline asm
	prmt.b32 %r9220, %r9349, %r9348, %r70;
	// inline asm
	st.local.u32 	[%rd8], %r9220;
	ld.local.u32 	%r9225, [%rd33+4];
	ld.local.u32 	%r9226, [%rd33];
	// inline asm
	prmt.b32 %r9224, %r9225, %r9226, %r70;
	// inline asm
	st.local.u32 	[%rd34+8], %r9224;
	ld.local.u32 	%r9229, [%rd33];
	ld.local.u32 	%r9230, [%rd6];
	// inline asm
	prmt.b32 %r9228, %r9229, %r9230, %r70;
	// inline asm
	st.local.u32 	[%rd34+4], %r9228;
	ld.local.u32 	%r9233, [%rd6];
	ld.local.u32 	%r9234, [%rd32+8];
	// inline asm
	prmt.b32 %r9232, %r9233, %r9234, %r70;
	// inline asm
	st.local.u32 	[%rd34], %r9232;
	ld.local.v2.u32 	{%r9350, %r9351}, [%rd32+4];
	// inline asm
	prmt.b32 %r9236, %r9351, %r9350, %r70;
	// inline asm
	st.local.u32 	[%rd7], %r9236;
	ld.local.u32 	%r9241, [%rd32+4];
	ld.local.u32 	%r9242, [%rd32];
	// inline asm
	prmt.b32 %r9240, %r9241, %r9242, %r70;
	// inline asm
	st.local.u32 	[%rd33+8], %r9240;
	ld.local.u32 	%r9245, [%rd32];
	ld.local.u32 	%r9246, [%rd5];
	// inline asm
	prmt.b32 %r9244, %r9245, %r9246, %r70;
	// inline asm
	st.local.u32 	[%rd33+4], %r9244;
	ld.local.u32 	%r9249, [%rd5];
	ld.local.u32 	%r9250, [%rd31+8];
	// inline asm
	prmt.b32 %r9248, %r9249, %r9250, %r70;
	// inline asm
	st.local.u32 	[%rd33], %r9248;
	ld.local.v2.u32 	{%r9352, %r9353}, [%rd31+4];
	// inline asm
	prmt.b32 %r9252, %r9353, %r9352, %r70;
	// inline asm
	st.local.u32 	[%rd6], %r9252;
	ld.local.u32 	%r9257, [%rd31+4];
	ld.local.u32 	%r9258, [%rd31];
	// inline asm
	prmt.b32 %r9256, %r9257, %r9258, %r70;
	// inline asm
	st.local.u32 	[%rd32+8], %r9256;
	ld.local.u32 	%r9261, [%rd31];
	ld.local.u32 	%r9262, [%rd4];
	// inline asm
	prmt.b32 %r9260, %r9261, %r9262, %r70;
	// inline asm
	st.local.u32 	[%rd32+4], %r9260;
	ld.local.u32 	%r9265, [%rd4];
	ld.local.u32 	%r9266, [%rd30+8];
	// inline asm
	prmt.b32 %r9264, %r9265, %r9266, %r70;
	// inline asm
	st.local.u32 	[%rd32], %r9264;
	ld.local.v2.u32 	{%r9354, %r9355}, [%rd30+4];
	// inline asm
	prmt.b32 %r9268, %r9355, %r9354, %r70;
	// inline asm
	st.local.u32 	[%rd5], %r9268;
	ld.local.u32 	%r9273, [%rd30+4];
	ld.local.u32 	%r9274, [%rd30];
	// inline asm
	prmt.b32 %r9272, %r9273, %r9274, %r70;
	// inline asm
	st.local.u32 	[%rd31+8], %r9272;
	ld.local.u32 	%r9277, [%rd30];
	ld.local.u32 	%r9278, [%rd3];
	// inline asm
	prmt.b32 %r9276, %r9277, %r9278, %r70;
	// inline asm
	st.local.u32 	[%rd31+4], %r9276;
	ld.local.u32 	%r9281, [%rd3];
	ld.local.u32 	%r9282, [%rd29+8];
	// inline asm
	prmt.b32 %r9280, %r9281, %r9282, %r70;
	// inline asm
	st.local.u32 	[%rd31], %r9280;
	ld.local.v2.u32 	{%r9356, %r9357}, [%rd29+4];
	// inline asm
	prmt.b32 %r9284, %r9357, %r9356, %r70;
	// inline asm
	st.local.u32 	[%rd4], %r9284;
	ld.local.u32 	%r9289, [%rd29+4];
	ld.local.u32 	%r9290, [%rd29];
	// inline asm
	prmt.b32 %r9288, %r9289, %r9290, %r70;
	// inline asm
	st.local.u32 	[%rd30+8], %r9288;
	ld.local.u32 	%r9293, [%rd29];
	ld.local.u32 	%r9294, [%rd2];
	// inline asm
	prmt.b32 %r9292, %r9293, %r9294, %r70;
	// inline asm
	st.local.u32 	[%rd30+4], %r9292;
	ld.local.u32 	%r9297, [%rd2];
	ld.local.u32 	%r9298, [%rd28+8];
	// inline asm
	prmt.b32 %r9296, %r9297, %r9298, %r70;
	// inline asm
	st.local.u32 	[%rd30], %r9296;
	ld.local.v2.u32 	{%r9358, %r9359}, [%rd28+4];
	// inline asm
	prmt.b32 %r9300, %r9359, %r9358, %r70;
	// inline asm
	st.local.u32 	[%rd3], %r9300;
	ld.local.u32 	%r9305, [%rd28+4];
	ld.local.u32 	%r9306, [%rd28];
	// inline asm
	prmt.b32 %r9304, %r9305, %r9306, %r70;
	// inline asm
	st.local.u32 	[%rd29+8], %r9304;
	ld.local.u32 	%r9309, [%rd28];
	ld.local.u32 	%r9310, [%rd1];
	// inline asm
	prmt.b32 %r9308, %r9309, %r9310, %r70;
	// inline asm
	st.local.u32 	[%rd29+4], %r9308;
	ld.local.u32 	%r9313, [%rd1];
	// inline asm
	prmt.b32 %r9312, %r9313, %r12340, %r70;
	// inline asm
	st.local.u32 	[%rd29], %r9312;
	st.local.u32 	[%rd2], %r12340;
	st.local.v2.u32 	[%rd28+4], {%r12340, %r12340};
	st.local.u32 	[%rd28], %r12340;
	st.local.u32 	[%rd1], %r12340;
	mov.u32 	%r12341, %r12340;
	mov.u32 	%r12346, %r12340;
	mov.u32 	%r12347, %r12340;
	bra.uni 	BB4_405;

BB4_371:
	setp.eq.s32	%p213, %r4952, 21;
	mov.u32 	%r12343, %r12342;
	mov.u32 	%r12344, %r12342;
	mov.u32 	%r12345, %r12342;
	mov.u32 	%r12346, %r12342;
	mov.u32 	%r12347, %r12342;
	mov.u32 	%r12348, %r12342;
	mov.u32 	%r12349, %r12342;
	mov.u32 	%r12350, %r12342;
	mov.u32 	%r12351, %r12342;
	mov.u32 	%r12352, %r12342;
	mov.u32 	%r12353, %r12342;
	mov.u32 	%r12354, %r12342;
	mov.u32 	%r12355, %r12342;
	mov.u32 	%r12356, %r12342;
	mov.u32 	%r12357, %r12342;
	mov.u32 	%r12358, %r12342;
	mov.u32 	%r12359, %r12342;
	mov.u32 	%r12360, %r12342;
	mov.u32 	%r12361, %r12342;
	mov.u32 	%r12362, %r12342;
	mov.u32 	%r12363, %r12342;
	mov.u32 	%r12364, %r12342;
	mov.u32 	%r12365, %r12342;
	mov.u32 	%r12366, %r12342;
	mov.u32 	%r12367, %r12342;
	mov.u32 	%r12368, %r12342;
	mov.u32 	%r12369, %r12342;
	mov.u32 	%r12370, %r12342;
	mov.u32 	%r12371, %r12342;
	mov.u32 	%r12372, %r12342;
	mov.u32 	%r12373, %r12342;
	@%p213 bra 	BB4_372;
	bra.uni 	BB4_413;

BB4_372:
	mov.u32 	%r12340, 0;
	// inline asm
	prmt.b32 %r12364, %r12340, %r7, %r70;
	// inline asm
	ld.local.v2.u32 	{%r6648, %r6649}, [%rd35+4];
	// inline asm
	prmt.b32 %r12365, %r6649, %r6648, %r70;
	// inline asm
	ld.local.u32 	%r6513, [%rd35+4];
	ld.local.u32 	%r6514, [%rd35];
	// inline asm
	prmt.b32 %r12358, %r6513, %r6514, %r70;
	// inline asm
	ld.local.u32 	%r6517, [%rd35];
	ld.local.u32 	%r6518, [%rd8];
	// inline asm
	prmt.b32 %r12359, %r6517, %r6518, %r70;
	// inline asm
	ld.local.u32 	%r6521, [%rd8];
	ld.local.u32 	%r6522, [%rd34+8];
	// inline asm
	prmt.b32 %r12360, %r6521, %r6522, %r70;
	// inline asm
	ld.local.v2.u32 	{%r6650, %r6651}, [%rd34+4];
	// inline asm
	prmt.b32 %r12361, %r6651, %r6650, %r70;
	// inline asm
	ld.local.u32 	%r6529, [%rd34+4];
	ld.local.u32 	%r6530, [%rd34];
	// inline asm
	prmt.b32 %r12354, %r6529, %r6530, %r70;
	// inline asm
	ld.local.u32 	%r6533, [%rd34];
	ld.local.u32 	%r6534, [%rd7];
	// inline asm
	prmt.b32 %r12355, %r6533, %r6534, %r70;
	// inline asm
	ld.local.u32 	%r6537, [%rd7];
	ld.local.u32 	%r6538, [%rd33+8];
	// inline asm
	prmt.b32 %r12356, %r6537, %r6538, %r70;
	// inline asm
	ld.local.v2.u32 	{%r6652, %r6653}, [%rd33+4];
	// inline asm
	prmt.b32 %r12357, %r6653, %r6652, %r70;
	// inline asm
	ld.local.u32 	%r6545, [%rd33+4];
	ld.local.u32 	%r6546, [%rd33];
	// inline asm
	prmt.b32 %r12350, %r6545, %r6546, %r70;
	// inline asm
	ld.local.u32 	%r6549, [%rd33];
	ld.local.u32 	%r6550, [%rd6];
	// inline asm
	prmt.b32 %r12351, %r6549, %r6550, %r70;
	// inline asm
	ld.local.u32 	%r6553, [%rd6];
	ld.local.u32 	%r6554, [%rd32+8];
	// inline asm
	prmt.b32 %r12352, %r6553, %r6554, %r70;
	// inline asm
	ld.local.v2.u32 	{%r6654, %r6655}, [%rd32+4];
	// inline asm
	prmt.b32 %r12353, %r6655, %r6654, %r70;
	// inline asm
	ld.local.u32 	%r6561, [%rd32+4];
	ld.local.u32 	%r6562, [%rd32];
	// inline asm
	prmt.b32 %r12346, %r6561, %r6562, %r70;
	// inline asm
	ld.local.u32 	%r6565, [%rd32];
	ld.local.u32 	%r6566, [%rd5];
	// inline asm
	prmt.b32 %r12347, %r6565, %r6566, %r70;
	// inline asm
	ld.local.u32 	%r6569, [%rd5];
	ld.local.u32 	%r6570, [%rd31+8];
	// inline asm
	prmt.b32 %r12348, %r6569, %r6570, %r70;
	// inline asm
	ld.local.v2.u32 	{%r6656, %r6657}, [%rd31+4];
	// inline asm
	prmt.b32 %r12349, %r6657, %r6656, %r70;
	// inline asm
	ld.local.u32 	%r6577, [%rd31+4];
	ld.local.u32 	%r6578, [%rd31];
	// inline asm
	prmt.b32 %r12342, %r6577, %r6578, %r70;
	// inline asm
	ld.local.u32 	%r6581, [%rd31];
	ld.local.u32 	%r6582, [%rd4];
	// inline asm
	prmt.b32 %r12343, %r6581, %r6582, %r70;
	// inline asm
	ld.local.u32 	%r6585, [%rd4];
	ld.local.u32 	%r6586, [%rd30+8];
	// inline asm
	prmt.b32 %r12344, %r6585, %r6586, %r70;
	// inline asm
	ld.local.v2.u32 	{%r6658, %r6659}, [%rd30+4];
	// inline asm
	prmt.b32 %r12345, %r6659, %r6658, %r70;
	// inline asm
	ld.local.u32 	%r6593, [%rd30+4];
	ld.local.u32 	%r6594, [%rd30];
	// inline asm
	prmt.b32 %r6592, %r6593, %r6594, %r70;
	// inline asm
	st.local.u32 	[%rd35+8], %r6592;
	ld.local.u32 	%r6597, [%rd30];
	ld.local.u32 	%r6598, [%rd3];
	// inline asm
	prmt.b32 %r6596, %r6597, %r6598, %r70;
	// inline asm
	st.local.u32 	[%rd35+4], %r6596;
	ld.local.u32 	%r6601, [%rd3];
	ld.local.u32 	%r6602, [%rd29+8];
	// inline asm
	prmt.b32 %r6600, %r6601, %r6602, %r70;
	// inline asm
	st.local.u32 	[%rd35], %r6600;
	ld.local.v2.u32 	{%r6660, %r6661}, [%rd29+4];
	// inline asm
	prmt.b32 %r6604, %r6661, %r6660, %r70;
	// inline asm
	st.local.u32 	[%rd8], %r6604;
	ld.local.u32 	%r6609, [%rd29+4];
	ld.local.u32 	%r6610, [%rd29];
	// inline asm
	prmt.b32 %r6608, %r6609, %r6610, %r70;
	// inline asm
	st.local.u32 	[%rd34+8], %r6608;
	ld.local.u32 	%r6613, [%rd29];
	ld.local.u32 	%r6614, [%rd2];
	// inline asm
	prmt.b32 %r6612, %r6613, %r6614, %r70;
	// inline asm
	st.local.u32 	[%rd34+4], %r6612;
	ld.local.u32 	%r6617, [%rd2];
	ld.local.u32 	%r6618, [%rd28+8];
	// inline asm
	prmt.b32 %r6616, %r6617, %r6618, %r70;
	// inline asm
	st.local.u32 	[%rd34], %r6616;
	ld.local.v2.u32 	{%r6662, %r6663}, [%rd28+4];
	// inline asm
	prmt.b32 %r6620, %r6663, %r6662, %r70;
	// inline asm
	st.local.u32 	[%rd7], %r6620;
	ld.local.u32 	%r6625, [%rd28+4];
	ld.local.u32 	%r6626, [%rd28];
	// inline asm
	prmt.b32 %r6624, %r6625, %r6626, %r70;
	// inline asm
	st.local.u32 	[%rd33+8], %r6624;
	ld.local.u32 	%r6629, [%rd28];
	ld.local.u32 	%r6630, [%rd1];
	// inline asm
	prmt.b32 %r6628, %r6629, %r6630, %r70;
	// inline asm
	st.local.u32 	[%rd33+4], %r6628;
	ld.local.u32 	%r6633, [%rd1];
	// inline asm
	prmt.b32 %r6632, %r6633, %r12340, %r70;
	// inline asm
	st.local.u32 	[%rd33], %r6632;
	st.local.u32 	[%rd6], %r12340;
	st.local.v2.u32 	[%rd32+4], {%r12340, %r12340};
	st.local.u32 	[%rd32], %r12340;
	st.local.u32 	[%rd5], %r12340;
	st.local.v2.u32 	[%rd31+4], {%r12340, %r12340};
	st.local.u32 	[%rd31], %r12340;
	st.local.u32 	[%rd4], %r12340;
	st.local.v2.u32 	[%rd30+4], {%r12340, %r12340};
	st.local.u32 	[%rd30], %r12340;
	st.local.u32 	[%rd3], %r12340;
	st.local.v2.u32 	[%rd29+4], {%r12340, %r12340};
	st.local.u32 	[%rd29], %r12340;
	st.local.u32 	[%rd2], %r12340;
	st.local.v2.u32 	[%rd28+4], {%r12340, %r12340};
	st.local.u32 	[%rd28], %r12340;
	st.local.u32 	[%rd1], %r12340;
	mov.u32 	%r12341, %r12340;
	mov.u32 	%r12362, %r12340;
	mov.u32 	%r12363, %r12340;
	bra.uni 	BB4_409;

BB4_355:
	setp.eq.s32	%p225, %r4952, 13;
	mov.u32 	%r12343, %r12342;
	mov.u32 	%r12344, %r12342;
	mov.u32 	%r12345, %r12342;
	mov.u32 	%r12346, %r12342;
	mov.u32 	%r12347, %r12342;
	mov.u32 	%r12348, %r12342;
	mov.u32 	%r12349, %r12342;
	mov.u32 	%r12350, %r12342;
	mov.u32 	%r12351, %r12342;
	mov.u32 	%r12352, %r12342;
	mov.u32 	%r12353, %r12342;
	mov.u32 	%r12354, %r12342;
	mov.u32 	%r12355, %r12342;
	mov.u32 	%r12356, %r12342;
	mov.u32 	%r12357, %r12342;
	mov.u32 	%r12358, %r12342;
	mov.u32 	%r12359, %r12342;
	mov.u32 	%r12360, %r12342;
	mov.u32 	%r12361, %r12342;
	mov.u32 	%r12362, %r12342;
	mov.u32 	%r12363, %r12342;
	mov.u32 	%r12364, %r12342;
	mov.u32 	%r12365, %r12342;
	mov.u32 	%r12366, %r12342;
	mov.u32 	%r12367, %r12342;
	mov.u32 	%r12368, %r12342;
	mov.u32 	%r12369, %r12342;
	mov.u32 	%r12370, %r12342;
	mov.u32 	%r12371, %r12342;
	mov.u32 	%r12372, %r12342;
	mov.u32 	%r12373, %r12342;
	@%p225 bra 	BB4_356;
	bra.uni 	BB4_413;

BB4_356:
	mov.u32 	%r12340, 0;
	// inline asm
	prmt.b32 %r12356, %r12340, %r7, %r70;
	// inline asm
	ld.local.v2.u32 	{%r7964, %r7965}, [%rd35+4];
	// inline asm
	prmt.b32 %r12357, %r7965, %r7964, %r70;
	// inline asm
	ld.local.u32 	%r7821, [%rd35+4];
	ld.local.u32 	%r7822, [%rd35];
	// inline asm
	prmt.b32 %r12350, %r7821, %r7822, %r70;
	// inline asm
	ld.local.u32 	%r7825, [%rd35];
	ld.local.u32 	%r7826, [%rd8];
	// inline asm
	prmt.b32 %r12351, %r7825, %r7826, %r70;
	// inline asm
	ld.local.u32 	%r7829, [%rd8];
	ld.local.u32 	%r7830, [%rd34+8];
	// inline asm
	prmt.b32 %r12352, %r7829, %r7830, %r70;
	// inline asm
	ld.local.v2.u32 	{%r7966, %r7967}, [%rd34+4];
	// inline asm
	prmt.b32 %r12353, %r7967, %r7966, %r70;
	// inline asm
	ld.local.u32 	%r7837, [%rd34+4];
	ld.local.u32 	%r7838, [%rd34];
	// inline asm
	prmt.b32 %r12346, %r7837, %r7838, %r70;
	// inline asm
	ld.local.u32 	%r7841, [%rd34];
	ld.local.u32 	%r7842, [%rd7];
	// inline asm
	prmt.b32 %r12347, %r7841, %r7842, %r70;
	// inline asm
	ld.local.u32 	%r7845, [%rd7];
	ld.local.u32 	%r7846, [%rd33+8];
	// inline asm
	prmt.b32 %r12348, %r7845, %r7846, %r70;
	// inline asm
	ld.local.v2.u32 	{%r7968, %r7969}, [%rd33+4];
	// inline asm
	prmt.b32 %r12349, %r7969, %r7968, %r70;
	// inline asm
	ld.local.u32 	%r7853, [%rd33+4];
	ld.local.u32 	%r7854, [%rd33];
	// inline asm
	prmt.b32 %r12342, %r7853, %r7854, %r70;
	// inline asm
	ld.local.u32 	%r7857, [%rd33];
	ld.local.u32 	%r7858, [%rd6];
	// inline asm
	prmt.b32 %r12343, %r7857, %r7858, %r70;
	// inline asm
	ld.local.u32 	%r7861, [%rd6];
	ld.local.u32 	%r7862, [%rd32+8];
	// inline asm
	prmt.b32 %r12344, %r7861, %r7862, %r70;
	// inline asm
	ld.local.v2.u32 	{%r7970, %r7971}, [%rd32+4];
	// inline asm
	prmt.b32 %r12345, %r7971, %r7970, %r70;
	// inline asm
	ld.local.u32 	%r7869, [%rd32+4];
	ld.local.u32 	%r7870, [%rd32];
	// inline asm
	prmt.b32 %r7868, %r7869, %r7870, %r70;
	// inline asm
	st.local.u32 	[%rd35+8], %r7868;
	ld.local.u32 	%r7873, [%rd32];
	ld.local.u32 	%r7874, [%rd5];
	// inline asm
	prmt.b32 %r7872, %r7873, %r7874, %r70;
	// inline asm
	st.local.u32 	[%rd35+4], %r7872;
	ld.local.u32 	%r7877, [%rd5];
	ld.local.u32 	%r7878, [%rd31+8];
	// inline asm
	prmt.b32 %r7876, %r7877, %r7878, %r70;
	// inline asm
	st.local.u32 	[%rd35], %r7876;
	ld.local.v2.u32 	{%r7972, %r7973}, [%rd31+4];
	// inline asm
	prmt.b32 %r7880, %r7973, %r7972, %r70;
	// inline asm
	st.local.u32 	[%rd8], %r7880;
	ld.local.u32 	%r7885, [%rd31+4];
	ld.local.u32 	%r7886, [%rd31];
	// inline asm
	prmt.b32 %r7884, %r7885, %r7886, %r70;
	// inline asm
	st.local.u32 	[%rd34+8], %r7884;
	ld.local.u32 	%r7889, [%rd31];
	ld.local.u32 	%r7890, [%rd4];
	// inline asm
	prmt.b32 %r7888, %r7889, %r7890, %r70;
	// inline asm
	st.local.u32 	[%rd34+4], %r7888;
	ld.local.u32 	%r7893, [%rd4];
	ld.local.u32 	%r7894, [%rd30+8];
	// inline asm
	prmt.b32 %r7892, %r7893, %r7894, %r70;
	// inline asm
	st.local.u32 	[%rd34], %r7892;
	ld.local.v2.u32 	{%r7974, %r7975}, [%rd30+4];
	// inline asm
	prmt.b32 %r7896, %r7975, %r7974, %r70;
	// inline asm
	st.local.u32 	[%rd7], %r7896;
	ld.local.u32 	%r7901, [%rd30+4];
	ld.local.u32 	%r7902, [%rd30];
	// inline asm
	prmt.b32 %r7900, %r7901, %r7902, %r70;
	// inline asm
	st.local.u32 	[%rd33+8], %r7900;
	ld.local.u32 	%r7905, [%rd30];
	ld.local.u32 	%r7906, [%rd3];
	// inline asm
	prmt.b32 %r7904, %r7905, %r7906, %r70;
	// inline asm
	st.local.u32 	[%rd33+4], %r7904;
	ld.local.u32 	%r7909, [%rd3];
	ld.local.u32 	%r7910, [%rd29+8];
	// inline asm
	prmt.b32 %r7908, %r7909, %r7910, %r70;
	// inline asm
	st.local.u32 	[%rd33], %r7908;
	ld.local.v2.u32 	{%r7976, %r7977}, [%rd29+4];
	// inline asm
	prmt.b32 %r7912, %r7977, %r7976, %r70;
	// inline asm
	st.local.u32 	[%rd6], %r7912;
	ld.local.u32 	%r7917, [%rd29+4];
	ld.local.u32 	%r7918, [%rd29];
	// inline asm
	prmt.b32 %r7916, %r7917, %r7918, %r70;
	// inline asm
	st.local.u32 	[%rd32+8], %r7916;
	ld.local.u32 	%r7921, [%rd29];
	ld.local.u32 	%r7922, [%rd2];
	// inline asm
	prmt.b32 %r7920, %r7921, %r7922, %r70;
	// inline asm
	st.local.u32 	[%rd32+4], %r7920;
	ld.local.u32 	%r7925, [%rd2];
	ld.local.u32 	%r7926, [%rd28+8];
	// inline asm
	prmt.b32 %r7924, %r7925, %r7926, %r70;
	// inline asm
	st.local.u32 	[%rd32], %r7924;
	ld.local.v2.u32 	{%r7978, %r7979}, [%rd28+4];
	// inline asm
	prmt.b32 %r7928, %r7979, %r7978, %r70;
	// inline asm
	st.local.u32 	[%rd5], %r7928;
	ld.local.u32 	%r7933, [%rd28+4];
	ld.local.u32 	%r7934, [%rd28];
	// inline asm
	prmt.b32 %r7932, %r7933, %r7934, %r70;
	// inline asm
	st.local.u32 	[%rd31+8], %r7932;
	ld.local.u32 	%r7937, [%rd28];
	ld.local.u32 	%r7938, [%rd1];
	// inline asm
	prmt.b32 %r7936, %r7937, %r7938, %r70;
	// inline asm
	st.local.u32 	[%rd31+4], %r7936;
	ld.local.u32 	%r7941, [%rd1];
	// inline asm
	prmt.b32 %r7940, %r7941, %r12340, %r70;
	// inline asm
	st.local.u32 	[%rd31], %r7940;
	st.local.u32 	[%rd4], %r12340;
	st.local.v2.u32 	[%rd30+4], {%r12340, %r12340};
	st.local.u32 	[%rd30], %r12340;
	st.local.u32 	[%rd3], %r12340;
	st.local.v2.u32 	[%rd29+4], {%r12340, %r12340};
	st.local.u32 	[%rd29], %r12340;
	st.local.u32 	[%rd2], %r12340;
	st.local.v2.u32 	[%rd28+4], {%r12340, %r12340};
	st.local.u32 	[%rd28], %r12340;
	st.local.u32 	[%rd1], %r12340;
	mov.u32 	%r12341, %r12340;
	mov.u32 	%r12354, %r12340;
	mov.u32 	%r12355, %r12340;
	bra.uni 	BB4_407;

BB4_386:
	setp.eq.s32	%p202, %r4952, 29;
	mov.u32 	%r12343, %r12342;
	mov.u32 	%r12344, %r12342;
	mov.u32 	%r12345, %r12342;
	mov.u32 	%r12346, %r12342;
	mov.u32 	%r12347, %r12342;
	mov.u32 	%r12348, %r12342;
	mov.u32 	%r12349, %r12342;
	mov.u32 	%r12350, %r12342;
	mov.u32 	%r12351, %r12342;
	mov.u32 	%r12352, %r12342;
	mov.u32 	%r12353, %r12342;
	mov.u32 	%r12354, %r12342;
	mov.u32 	%r12355, %r12342;
	mov.u32 	%r12356, %r12342;
	mov.u32 	%r12357, %r12342;
	mov.u32 	%r12358, %r12342;
	mov.u32 	%r12359, %r12342;
	mov.u32 	%r12360, %r12342;
	mov.u32 	%r12361, %r12342;
	mov.u32 	%r12362, %r12342;
	mov.u32 	%r12363, %r12342;
	mov.u32 	%r12364, %r12342;
	mov.u32 	%r12365, %r12342;
	mov.u32 	%r12366, %r12342;
	mov.u32 	%r12367, %r12342;
	mov.u32 	%r12368, %r12342;
	mov.u32 	%r12369, %r12342;
	mov.u32 	%r12370, %r12342;
	mov.u32 	%r12371, %r12342;
	mov.u32 	%r12372, %r12342;
	mov.u32 	%r12373, %r12342;
	@%p202 bra 	BB4_387;
	bra.uni 	BB4_413;

BB4_387:
	mov.u32 	%r12340, 0;
	// inline asm
	prmt.b32 %r12372, %r12340, %r7, %r70;
	// inline asm
	ld.local.v2.u32 	{%r5396, %r5397}, [%rd35+4];
	// inline asm
	prmt.b32 %r12373, %r5397, %r5396, %r70;
	// inline asm
	ld.local.u32 	%r5269, [%rd35+4];
	ld.local.u32 	%r5270, [%rd35];
	// inline asm
	prmt.b32 %r12366, %r5269, %r5270, %r70;
	// inline asm
	ld.local.u32 	%r5273, [%rd35];
	ld.local.u32 	%r5274, [%rd8];
	// inline asm
	prmt.b32 %r12367, %r5273, %r5274, %r70;
	// inline asm
	ld.local.u32 	%r5277, [%rd8];
	ld.local.u32 	%r5278, [%rd34+8];
	// inline asm
	prmt.b32 %r12368, %r5277, %r5278, %r70;
	// inline asm
	ld.local.v2.u32 	{%r5398, %r5399}, [%rd34+4];
	// inline asm
	prmt.b32 %r12369, %r5399, %r5398, %r70;
	// inline asm
	ld.local.u32 	%r5285, [%rd34+4];
	ld.local.u32 	%r5286, [%rd34];
	// inline asm
	prmt.b32 %r12362, %r5285, %r5286, %r70;
	// inline asm
	ld.local.u32 	%r5289, [%rd34];
	ld.local.u32 	%r5290, [%rd7];
	// inline asm
	prmt.b32 %r12363, %r5289, %r5290, %r70;
	// inline asm
	ld.local.u32 	%r5293, [%rd7];
	ld.local.u32 	%r5294, [%rd33+8];
	// inline asm
	prmt.b32 %r12364, %r5293, %r5294, %r70;
	// inline asm
	ld.local.v2.u32 	{%r5400, %r5401}, [%rd33+4];
	// inline asm
	prmt.b32 %r12365, %r5401, %r5400, %r70;
	// inline asm
	ld.local.u32 	%r5301, [%rd33+4];
	ld.local.u32 	%r5302, [%rd33];
	// inline asm
	prmt.b32 %r12358, %r5301, %r5302, %r70;
	// inline asm
	ld.local.u32 	%r5305, [%rd33];
	ld.local.u32 	%r5306, [%rd6];
	// inline asm
	prmt.b32 %r12359, %r5305, %r5306, %r70;
	// inline asm
	ld.local.u32 	%r5309, [%rd6];
	ld.local.u32 	%r5310, [%rd32+8];
	// inline asm
	prmt.b32 %r12360, %r5309, %r5310, %r70;
	// inline asm
	ld.local.v2.u32 	{%r5402, %r5403}, [%rd32+4];
	// inline asm
	prmt.b32 %r12361, %r5403, %r5402, %r70;
	// inline asm
	ld.local.u32 	%r5317, [%rd32+4];
	ld.local.u32 	%r5318, [%rd32];
	// inline asm
	prmt.b32 %r12354, %r5317, %r5318, %r70;
	// inline asm
	ld.local.u32 	%r5321, [%rd32];
	ld.local.u32 	%r5322, [%rd5];
	// inline asm
	prmt.b32 %r12355, %r5321, %r5322, %r70;
	// inline asm
	ld.local.u32 	%r5325, [%rd5];
	ld.local.u32 	%r5326, [%rd31+8];
	// inline asm
	prmt.b32 %r12356, %r5325, %r5326, %r70;
	// inline asm
	ld.local.v2.u32 	{%r5404, %r5405}, [%rd31+4];
	// inline asm
	prmt.b32 %r12357, %r5405, %r5404, %r70;
	// inline asm
	ld.local.u32 	%r5333, [%rd31+4];
	ld.local.u32 	%r5334, [%rd31];
	// inline asm
	prmt.b32 %r12350, %r5333, %r5334, %r70;
	// inline asm
	ld.local.u32 	%r5337, [%rd31];
	ld.local.u32 	%r5338, [%rd4];
	// inline asm
	prmt.b32 %r12351, %r5337, %r5338, %r70;
	// inline asm
	ld.local.u32 	%r5341, [%rd4];
	ld.local.u32 	%r5342, [%rd30+8];
	// inline asm
	prmt.b32 %r12352, %r5341, %r5342, %r70;
	// inline asm
	ld.local.v2.u32 	{%r5406, %r5407}, [%rd30+4];
	// inline asm
	prmt.b32 %r12353, %r5407, %r5406, %r70;
	// inline asm
	ld.local.u32 	%r5349, [%rd30+4];
	ld.local.u32 	%r5350, [%rd30];
	// inline asm
	prmt.b32 %r12346, %r5349, %r5350, %r70;
	// inline asm
	ld.local.u32 	%r5353, [%rd30];
	ld.local.u32 	%r5354, [%rd3];
	// inline asm
	prmt.b32 %r12347, %r5353, %r5354, %r70;
	// inline asm
	ld.local.u32 	%r5357, [%rd3];
	ld.local.u32 	%r5358, [%rd29+8];
	// inline asm
	prmt.b32 %r12348, %r5357, %r5358, %r70;
	// inline asm
	ld.local.v2.u32 	{%r5408, %r5409}, [%rd29+4];
	// inline asm
	prmt.b32 %r12349, %r5409, %r5408, %r70;
	// inline asm
	ld.local.u32 	%r5365, [%rd29+4];
	ld.local.u32 	%r5366, [%rd29];
	// inline asm
	prmt.b32 %r12342, %r5365, %r5366, %r70;
	// inline asm
	ld.local.u32 	%r5369, [%rd29];
	ld.local.u32 	%r5370, [%rd2];
	// inline asm
	prmt.b32 %r12343, %r5369, %r5370, %r70;
	// inline asm
	ld.local.u32 	%r5373, [%rd2];
	ld.local.u32 	%r5374, [%rd28+8];
	// inline asm
	prmt.b32 %r12344, %r5373, %r5374, %r70;
	// inline asm
	ld.local.v2.u32 	{%r5410, %r5411}, [%rd28+4];
	// inline asm
	prmt.b32 %r12345, %r5411, %r5410, %r70;
	// inline asm
	ld.local.u32 	%r5381, [%rd28+4];
	ld.local.u32 	%r5382, [%rd28];
	// inline asm
	prmt.b32 %r5380, %r5381, %r5382, %r70;
	// inline asm
	st.local.u32 	[%rd35+8], %r5380;
	ld.local.u32 	%r5385, [%rd28];
	ld.local.u32 	%r5386, [%rd1];
	// inline asm
	prmt.b32 %r5384, %r5385, %r5386, %r70;
	// inline asm
	st.local.u32 	[%rd35+4], %r5384;
	ld.local.u32 	%r5389, [%rd1];
	// inline asm
	prmt.b32 %r5388, %r5389, %r12340, %r70;
	// inline asm
	st.local.u32 	[%rd35], %r5388;
	st.local.u32 	[%rd8], %r12340;
	st.local.v2.u32 	[%rd34+4], {%r12340, %r12340};
	st.local.u32 	[%rd34], %r12340;
	st.local.u32 	[%rd7], %r12340;
	st.local.v2.u32 	[%rd33+4], {%r12340, %r12340};
	st.local.u32 	[%rd33], %r12340;
	st.local.u32 	[%rd6], %r12340;
	st.local.v2.u32 	[%rd32+4], {%r12340, %r12340};
	st.local.u32 	[%rd32], %r12340;
	st.local.u32 	[%rd5], %r12340;
	st.local.v2.u32 	[%rd31+4], {%r12340, %r12340};
	st.local.u32 	[%rd31], %r12340;
	st.local.u32 	[%rd4], %r12340;
	st.local.v2.u32 	[%rd30+4], {%r12340, %r12340};
	st.local.u32 	[%rd30], %r12340;
	st.local.u32 	[%rd3], %r12340;
	st.local.v2.u32 	[%rd29+4], {%r12340, %r12340};
	st.local.u32 	[%rd29], %r12340;
	st.local.u32 	[%rd2], %r12340;
	st.local.v2.u32 	[%rd28+4], {%r12340, %r12340};
	st.local.u32 	[%rd28], %r12340;
	st.local.u32 	[%rd1], %r12340;
	mov.u32 	%r12341, %r12340;
	mov.u32 	%r12370, %r12340;
	mov.u32 	%r12371, %r12340;
	bra.uni 	BB4_413;

BB4_335:
	setp.eq.s32	%p239, %r4952, 3;
	mov.u32 	%r12343, %r12342;
	mov.u32 	%r12344, %r12342;
	mov.u32 	%r12345, %r12342;
	mov.u32 	%r12346, %r12342;
	mov.u32 	%r12347, %r12342;
	mov.u32 	%r12348, %r12342;
	mov.u32 	%r12349, %r12342;
	mov.u32 	%r12350, %r12342;
	mov.u32 	%r12351, %r12342;
	mov.u32 	%r12352, %r12342;
	mov.u32 	%r12353, %r12342;
	mov.u32 	%r12354, %r12342;
	mov.u32 	%r12355, %r12342;
	mov.u32 	%r12356, %r12342;
	mov.u32 	%r12357, %r12342;
	mov.u32 	%r12358, %r12342;
	mov.u32 	%r12359, %r12342;
	mov.u32 	%r12360, %r12342;
	mov.u32 	%r12361, %r12342;
	mov.u32 	%r12362, %r12342;
	mov.u32 	%r12363, %r12342;
	mov.u32 	%r12364, %r12342;
	mov.u32 	%r12365, %r12342;
	mov.u32 	%r12366, %r12342;
	mov.u32 	%r12367, %r12342;
	mov.u32 	%r12368, %r12342;
	mov.u32 	%r12369, %r12342;
	mov.u32 	%r12370, %r12342;
	mov.u32 	%r12371, %r12342;
	mov.u32 	%r12372, %r12342;
	mov.u32 	%r12373, %r12342;
	@%p239 bra 	BB4_336;
	bra.uni 	BB4_413;

BB4_336:
	mov.u32 	%r12340, 0;
	// inline asm
	prmt.b32 %r12342, %r12340, %r7, %r70;
	// inline asm
	ld.local.v2.u32 	{%r9699, %r9700}, [%rd35+4];
	// inline asm
	prmt.b32 %r12343, %r9700, %r9699, %r70;
	// inline asm
	ld.local.u32 	%r9546, [%rd35+4];
	ld.local.u32 	%r9547, [%rd35];
	// inline asm
	prmt.b32 %r12344, %r9546, %r9547, %r70;
	// inline asm
	ld.local.u32 	%r9550, [%rd35];
	ld.local.u32 	%r9551, [%rd8];
	// inline asm
	prmt.b32 %r12345, %r9550, %r9551, %r70;
	// inline asm
	ld.local.u32 	%r9554, [%rd8];
	ld.local.u32 	%r9555, [%rd34+8];
	// inline asm
	prmt.b32 %r9553, %r9554, %r9555, %r70;
	// inline asm
	st.local.u32 	[%rd35+8], %r9553;
	ld.local.v2.u32 	{%r9701, %r9702}, [%rd34+4];
	// inline asm
	prmt.b32 %r9557, %r9702, %r9701, %r70;
	// inline asm
	st.local.u32 	[%rd35+4], %r9557;
	ld.local.u32 	%r9562, [%rd34+4];
	ld.local.u32 	%r9563, [%rd34];
	// inline asm
	prmt.b32 %r9561, %r9562, %r9563, %r70;
	// inline asm
	st.local.u32 	[%rd35], %r9561;
	ld.local.u32 	%r9566, [%rd34];
	ld.local.u32 	%r9567, [%rd7];
	// inline asm
	prmt.b32 %r9565, %r9566, %r9567, %r70;
	// inline asm
	st.local.u32 	[%rd8], %r9565;
	ld.local.u32 	%r9570, [%rd7];
	ld.local.u32 	%r9571, [%rd33+8];
	// inline asm
	prmt.b32 %r9569, %r9570, %r9571, %r70;
	// inline asm
	st.local.u32 	[%rd34+8], %r9569;
	ld.local.v2.u32 	{%r9703, %r9704}, [%rd33+4];
	// inline asm
	prmt.b32 %r9573, %r9704, %r9703, %r70;
	// inline asm
	st.local.u32 	[%rd34+4], %r9573;
	ld.local.u32 	%r9578, [%rd33+4];
	ld.local.u32 	%r9579, [%rd33];
	// inline asm
	prmt.b32 %r9577, %r9578, %r9579, %r70;
	// inline asm
	st.local.u32 	[%rd34], %r9577;
	ld.local.u32 	%r9582, [%rd33];
	ld.local.u32 	%r9583, [%rd6];
	// inline asm
	prmt.b32 %r9581, %r9582, %r9583, %r70;
	// inline asm
	st.local.u32 	[%rd7], %r9581;
	ld.local.u32 	%r9586, [%rd6];
	ld.local.u32 	%r9587, [%rd32+8];
	// inline asm
	prmt.b32 %r9585, %r9586, %r9587, %r70;
	// inline asm
	st.local.u32 	[%rd33+8], %r9585;
	ld.local.v2.u32 	{%r9705, %r9706}, [%rd32+4];
	// inline asm
	prmt.b32 %r9589, %r9706, %r9705, %r70;
	// inline asm
	st.local.u32 	[%rd33+4], %r9589;
	ld.local.u32 	%r9594, [%rd32+4];
	ld.local.u32 	%r9595, [%rd32];
	// inline asm
	prmt.b32 %r9593, %r9594, %r9595, %r70;
	// inline asm
	st.local.u32 	[%rd33], %r9593;
	ld.local.u32 	%r9598, [%rd32];
	ld.local.u32 	%r9599, [%rd5];
	// inline asm
	prmt.b32 %r9597, %r9598, %r9599, %r70;
	// inline asm
	st.local.u32 	[%rd6], %r9597;
	ld.local.u32 	%r9602, [%rd5];
	ld.local.u32 	%r9603, [%rd31+8];
	// inline asm
	prmt.b32 %r9601, %r9602, %r9603, %r70;
	// inline asm
	st.local.u32 	[%rd32+8], %r9601;
	ld.local.v2.u32 	{%r9707, %r9708}, [%rd31+4];
	// inline asm
	prmt.b32 %r9605, %r9708, %r9707, %r70;
	// inline asm
	st.local.u32 	[%rd32+4], %r9605;
	ld.local.u32 	%r9610, [%rd31+4];
	ld.local.u32 	%r9611, [%rd31];
	// inline asm
	prmt.b32 %r9609, %r9610, %r9611, %r70;
	// inline asm
	st.local.u32 	[%rd32], %r9609;
	ld.local.u32 	%r9614, [%rd31];
	ld.local.u32 	%r9615, [%rd4];
	// inline asm
	prmt.b32 %r9613, %r9614, %r9615, %r70;
	// inline asm
	st.local.u32 	[%rd5], %r9613;
	ld.local.u32 	%r9618, [%rd4];
	ld.local.u32 	%r9619, [%rd30+8];
	// inline asm
	prmt.b32 %r9617, %r9618, %r9619, %r70;
	// inline asm
	st.local.u32 	[%rd31+8], %r9617;
	ld.local.v2.u32 	{%r9709, %r9710}, [%rd30+4];
	// inline asm
	prmt.b32 %r9621, %r9710, %r9709, %r70;
	// inline asm
	st.local.u32 	[%rd31+4], %r9621;
	ld.local.u32 	%r9626, [%rd30+4];
	ld.local.u32 	%r9627, [%rd30];
	// inline asm
	prmt.b32 %r9625, %r9626, %r9627, %r70;
	// inline asm
	st.local.u32 	[%rd31], %r9625;
	ld.local.u32 	%r9630, [%rd30];
	ld.local.u32 	%r9631, [%rd3];
	// inline asm
	prmt.b32 %r9629, %r9630, %r9631, %r70;
	// inline asm
	st.local.u32 	[%rd4], %r9629;
	ld.local.u32 	%r9634, [%rd3];
	ld.local.u32 	%r9635, [%rd29+8];
	// inline asm
	prmt.b32 %r9633, %r9634, %r9635, %r70;
	// inline asm
	st.local.u32 	[%rd30+8], %r9633;
	ld.local.v2.u32 	{%r9711, %r9712}, [%rd29+4];
	// inline asm
	prmt.b32 %r9637, %r9712, %r9711, %r70;
	// inline asm
	st.local.u32 	[%rd30+4], %r9637;
	ld.local.u32 	%r9642, [%rd29+4];
	ld.local.u32 	%r9643, [%rd29];
	// inline asm
	prmt.b32 %r9641, %r9642, %r9643, %r70;
	// inline asm
	st.local.u32 	[%rd30], %r9641;
	ld.local.u32 	%r9646, [%rd29];
	ld.local.u32 	%r9647, [%rd2];
	// inline asm
	prmt.b32 %r9645, %r9646, %r9647, %r70;
	// inline asm
	st.local.u32 	[%rd3], %r9645;
	ld.local.u32 	%r9650, [%rd2];
	ld.local.u32 	%r9651, [%rd28+8];
	// inline asm
	prmt.b32 %r9649, %r9650, %r9651, %r70;
	// inline asm
	st.local.u32 	[%rd29+8], %r9649;
	ld.local.v2.u32 	{%r9713, %r9714}, [%rd28+4];
	// inline asm
	prmt.b32 %r9653, %r9714, %r9713, %r70;
	// inline asm
	st.local.u32 	[%rd29+4], %r9653;
	ld.local.u32 	%r9658, [%rd28+4];
	ld.local.u32 	%r9659, [%rd28];
	// inline asm
	prmt.b32 %r9657, %r9658, %r9659, %r70;
	// inline asm
	st.local.u32 	[%rd29], %r9657;
	ld.local.u32 	%r9662, [%rd28];
	ld.local.u32 	%r9663, [%rd1];
	// inline asm
	prmt.b32 %r9661, %r9662, %r9663, %r70;
	// inline asm
	st.local.u32 	[%rd2], %r9661;
	ld.local.u32 	%r9666, [%rd1];
	// inline asm
	prmt.b32 %r9665, %r9666, %r12340, %r70;
	// inline asm
	st.local.v2.u32 	[%rd28+4], {%r12340, %r9665};
	st.local.u32 	[%rd28], %r12340;
	st.local.u32 	[%rd1], %r12340;
	mov.u32 	%r12341, %r12340;

BB4_337:
	mov.u32 	%r12346, %r12340;
	mov.u32 	%r12347, %r12340;
	mov.u32 	%r12348, %r12340;
	mov.u32 	%r12349, %r12340;
	bra.uni 	BB4_405;

BB4_367:
	setp.eq.s32	%p216, %r4952, 19;
	mov.u32 	%r12343, %r12342;
	mov.u32 	%r12344, %r12342;
	mov.u32 	%r12345, %r12342;
	mov.u32 	%r12346, %r12342;
	mov.u32 	%r12347, %r12342;
	mov.u32 	%r12348, %r12342;
	mov.u32 	%r12349, %r12342;
	mov.u32 	%r12350, %r12342;
	mov.u32 	%r12351, %r12342;
	mov.u32 	%r12352, %r12342;
	mov.u32 	%r12353, %r12342;
	mov.u32 	%r12354, %r12342;
	mov.u32 	%r12355, %r12342;
	mov.u32 	%r12356, %r12342;
	mov.u32 	%r12357, %r12342;
	mov.u32 	%r12358, %r12342;
	mov.u32 	%r12359, %r12342;
	mov.u32 	%r12360, %r12342;
	mov.u32 	%r12361, %r12342;
	mov.u32 	%r12362, %r12342;
	mov.u32 	%r12363, %r12342;
	mov.u32 	%r12364, %r12342;
	mov.u32 	%r12365, %r12342;
	mov.u32 	%r12366, %r12342;
	mov.u32 	%r12367, %r12342;
	mov.u32 	%r12368, %r12342;
	mov.u32 	%r12369, %r12342;
	mov.u32 	%r12370, %r12342;
	mov.u32 	%r12371, %r12342;
	mov.u32 	%r12372, %r12342;
	mov.u32 	%r12373, %r12342;
	@%p216 bra 	BB4_368;
	bra.uni 	BB4_413;

BB4_368:
	mov.u32 	%r12340, 0;
	// inline asm
	prmt.b32 %r12358, %r12340, %r7, %r70;
	// inline asm
	ld.local.v2.u32 	{%r6971, %r6972}, [%rd35+4];
	// inline asm
	prmt.b32 %r12359, %r6972, %r6971, %r70;
	// inline asm
	ld.local.u32 	%r6834, [%rd35+4];
	ld.local.u32 	%r6835, [%rd35];
	// inline asm
	prmt.b32 %r12360, %r6834, %r6835, %r70;
	// inline asm
	ld.local.u32 	%r6838, [%rd35];
	ld.local.u32 	%r6839, [%rd8];
	// inline asm
	prmt.b32 %r12361, %r6838, %r6839, %r70;
	// inline asm
	ld.local.u32 	%r6842, [%rd8];
	ld.local.u32 	%r6843, [%rd34+8];
	// inline asm
	prmt.b32 %r12354, %r6842, %r6843, %r70;
	// inline asm
	ld.local.v2.u32 	{%r6973, %r6974}, [%rd34+4];
	// inline asm
	prmt.b32 %r12355, %r6974, %r6973, %r70;
	// inline asm
	ld.local.u32 	%r6850, [%rd34+4];
	ld.local.u32 	%r6851, [%rd34];
	// inline asm
	prmt.b32 %r12356, %r6850, %r6851, %r70;
	// inline asm
	ld.local.u32 	%r6854, [%rd34];
	ld.local.u32 	%r6855, [%rd7];
	// inline asm
	prmt.b32 %r12357, %r6854, %r6855, %r70;
	// inline asm
	ld.local.u32 	%r6858, [%rd7];
	ld.local.u32 	%r6859, [%rd33+8];
	// inline asm
	prmt.b32 %r12350, %r6858, %r6859, %r70;
	// inline asm
	ld.local.v2.u32 	{%r6975, %r6976}, [%rd33+4];
	// inline asm
	prmt.b32 %r12351, %r6976, %r6975, %r70;
	// inline asm
	ld.local.u32 	%r6866, [%rd33+4];
	ld.local.u32 	%r6867, [%rd33];
	// inline asm
	prmt.b32 %r12352, %r6866, %r6867, %r70;
	// inline asm
	ld.local.u32 	%r6870, [%rd33];
	ld.local.u32 	%r6871, [%rd6];
	// inline asm
	prmt.b32 %r12353, %r6870, %r6871, %r70;
	// inline asm
	ld.local.u32 	%r6874, [%rd6];
	ld.local.u32 	%r6875, [%rd32+8];
	// inline asm
	prmt.b32 %r12346, %r6874, %r6875, %r70;
	// inline asm
	ld.local.v2.u32 	{%r6977, %r6978}, [%rd32+4];
	// inline asm
	prmt.b32 %r12347, %r6978, %r6977, %r70;
	// inline asm
	ld.local.u32 	%r6882, [%rd32+4];
	ld.local.u32 	%r6883, [%rd32];
	// inline asm
	prmt.b32 %r12348, %r6882, %r6883, %r70;
	// inline asm
	ld.local.u32 	%r6886, [%rd32];
	ld.local.u32 	%r6887, [%rd5];
	// inline asm
	prmt.b32 %r12349, %r6886, %r6887, %r70;
	// inline asm
	ld.local.u32 	%r6890, [%rd5];
	ld.local.u32 	%r6891, [%rd31+8];
	// inline asm
	prmt.b32 %r12342, %r6890, %r6891, %r70;
	// inline asm
	ld.local.v2.u32 	{%r6979, %r6980}, [%rd31+4];
	// inline asm
	prmt.b32 %r12343, %r6980, %r6979, %r70;
	// inline asm
	ld.local.u32 	%r6898, [%rd31+4];
	ld.local.u32 	%r6899, [%rd31];
	// inline asm
	prmt.b32 %r12344, %r6898, %r6899, %r70;
	// inline asm
	ld.local.u32 	%r6902, [%rd31];
	ld.local.u32 	%r6903, [%rd4];
	// inline asm
	prmt.b32 %r12345, %r6902, %r6903, %r70;
	// inline asm
	ld.local.u32 	%r6906, [%rd4];
	ld.local.u32 	%r6907, [%rd30+8];
	// inline asm
	prmt.b32 %r6905, %r6906, %r6907, %r70;
	// inline asm
	st.local.u32 	[%rd35+8], %r6905;
	ld.local.v2.u32 	{%r6981, %r6982}, [%rd30+4];
	// inline asm
	prmt.b32 %r6909, %r6982, %r6981, %r70;
	// inline asm
	st.local.u32 	[%rd35+4], %r6909;
	ld.local.u32 	%r6914, [%rd30+4];
	ld.local.u32 	%r6915, [%rd30];
	// inline asm
	prmt.b32 %r6913, %r6914, %r6915, %r70;
	// inline asm
	st.local.u32 	[%rd35], %r6913;
	ld.local.u32 	%r6918, [%rd30];
	ld.local.u32 	%r6919, [%rd3];
	// inline asm
	prmt.b32 %r6917, %r6918, %r6919, %r70;
	// inline asm
	st.local.u32 	[%rd8], %r6917;
	ld.local.u32 	%r6922, [%rd3];
	ld.local.u32 	%r6923, [%rd29+8];
	// inline asm
	prmt.b32 %r6921, %r6922, %r6923, %r70;
	// inline asm
	st.local.u32 	[%rd34+8], %r6921;
	ld.local.v2.u32 	{%r6983, %r6984}, [%rd29+4];
	// inline asm
	prmt.b32 %r6925, %r6984, %r6983, %r70;
	// inline asm
	st.local.u32 	[%rd34+4], %r6925;
	ld.local.u32 	%r6930, [%rd29+4];
	ld.local.u32 	%r6931, [%rd29];
	// inline asm
	prmt.b32 %r6929, %r6930, %r6931, %r70;
	// inline asm
	st.local.u32 	[%rd34], %r6929;
	ld.local.u32 	%r6934, [%rd29];
	ld.local.u32 	%r6935, [%rd2];
	// inline asm
	prmt.b32 %r6933, %r6934, %r6935, %r70;
	// inline asm
	st.local.u32 	[%rd7], %r6933;
	ld.local.u32 	%r6938, [%rd2];
	ld.local.u32 	%r6939, [%rd28+8];
	// inline asm
	prmt.b32 %r6937, %r6938, %r6939, %r70;
	// inline asm
	st.local.u32 	[%rd33+8], %r6937;
	ld.local.v2.u32 	{%r6985, %r6986}, [%rd28+4];
	// inline asm
	prmt.b32 %r6941, %r6986, %r6985, %r70;
	// inline asm
	st.local.u32 	[%rd33+4], %r6941;
	ld.local.u32 	%r6946, [%rd28+4];
	ld.local.u32 	%r6947, [%rd28];
	// inline asm
	prmt.b32 %r6945, %r6946, %r6947, %r70;
	// inline asm
	st.local.u32 	[%rd33], %r6945;
	ld.local.u32 	%r6950, [%rd28];
	ld.local.u32 	%r6951, [%rd1];
	// inline asm
	prmt.b32 %r6949, %r6950, %r6951, %r70;
	// inline asm
	st.local.u32 	[%rd6], %r6949;
	ld.local.u32 	%r6954, [%rd1];
	// inline asm
	prmt.b32 %r6953, %r6954, %r12340, %r70;
	// inline asm
	st.local.v2.u32 	[%rd32+4], {%r12340, %r6953};
	st.local.u32 	[%rd32], %r12340;
	st.local.u32 	[%rd5], %r12340;
	st.local.v2.u32 	[%rd31+4], {%r12340, %r12340};
	st.local.u32 	[%rd31], %r12340;
	st.local.u32 	[%rd4], %r12340;
	st.local.v2.u32 	[%rd30+4], {%r12340, %r12340};
	st.local.u32 	[%rd30], %r12340;
	st.local.u32 	[%rd3], %r12340;
	st.local.v2.u32 	[%rd29+4], {%r12340, %r12340};
	st.local.u32 	[%rd29], %r12340;
	st.local.u32 	[%rd2], %r12340;
	st.local.v2.u32 	[%rd28+4], {%r12340, %r12340};
	st.local.u32 	[%rd28], %r12340;
	st.local.u32 	[%rd1], %r12340;
	mov.u32 	%r12341, %r12340;
	bra.uni 	BB4_408;

BB4_351:
	setp.eq.s32	%p228, %r4952, 11;
	mov.u32 	%r12343, %r12342;
	mov.u32 	%r12344, %r12342;
	mov.u32 	%r12345, %r12342;
	mov.u32 	%r12346, %r12342;
	mov.u32 	%r12347, %r12342;
	mov.u32 	%r12348, %r12342;
	mov.u32 	%r12349, %r12342;
	mov.u32 	%r12350, %r12342;
	mov.u32 	%r12351, %r12342;
	mov.u32 	%r12352, %r12342;
	mov.u32 	%r12353, %r12342;
	mov.u32 	%r12354, %r12342;
	mov.u32 	%r12355, %r12342;
	mov.u32 	%r12356, %r12342;
	mov.u32 	%r12357, %r12342;
	mov.u32 	%r12358, %r12342;
	mov.u32 	%r12359, %r12342;
	mov.u32 	%r12360, %r12342;
	mov.u32 	%r12361, %r12342;
	mov.u32 	%r12362, %r12342;
	mov.u32 	%r12363, %r12342;
	mov.u32 	%r12364, %r12342;
	mov.u32 	%r12365, %r12342;
	mov.u32 	%r12366, %r12342;
	mov.u32 	%r12367, %r12342;
	mov.u32 	%r12368, %r12342;
	mov.u32 	%r12369, %r12342;
	mov.u32 	%r12370, %r12342;
	mov.u32 	%r12371, %r12342;
	mov.u32 	%r12372, %r12342;
	mov.u32 	%r12373, %r12342;
	@%p228 bra 	BB4_352;
	bra.uni 	BB4_413;

BB4_352:
	mov.u32 	%r12340, 0;
	// inline asm
	prmt.b32 %r12350, %r12340, %r7, %r70;
	// inline asm
	ld.local.v2.u32 	{%r8303, %r8304}, [%rd35+4];
	// inline asm
	prmt.b32 %r12351, %r8304, %r8303, %r70;
	// inline asm
	ld.local.u32 	%r8158, [%rd35+4];
	ld.local.u32 	%r8159, [%rd35];
	// inline asm
	prmt.b32 %r12352, %r8158, %r8159, %r70;
	// inline asm
	ld.local.u32 	%r8162, [%rd35];
	ld.local.u32 	%r8163, [%rd8];
	// inline asm
	prmt.b32 %r12353, %r8162, %r8163, %r70;
	// inline asm
	ld.local.u32 	%r8166, [%rd8];
	ld.local.u32 	%r8167, [%rd34+8];
	// inline asm
	prmt.b32 %r12346, %r8166, %r8167, %r70;
	// inline asm
	ld.local.v2.u32 	{%r8305, %r8306}, [%rd34+4];
	// inline asm
	prmt.b32 %r12347, %r8306, %r8305, %r70;
	// inline asm
	ld.local.u32 	%r8174, [%rd34+4];
	ld.local.u32 	%r8175, [%rd34];
	// inline asm
	prmt.b32 %r12348, %r8174, %r8175, %r70;
	// inline asm
	ld.local.u32 	%r8178, [%rd34];
	ld.local.u32 	%r8179, [%rd7];
	// inline asm
	prmt.b32 %r12349, %r8178, %r8179, %r70;
	// inline asm
	ld.local.u32 	%r8182, [%rd7];
	ld.local.u32 	%r8183, [%rd33+8];
	// inline asm
	prmt.b32 %r12342, %r8182, %r8183, %r70;
	// inline asm
	ld.local.v2.u32 	{%r8307, %r8308}, [%rd33+4];
	// inline asm
	prmt.b32 %r12343, %r8308, %r8307, %r70;
	// inline asm
	ld.local.u32 	%r8190, [%rd33+4];
	ld.local.u32 	%r8191, [%rd33];
	// inline asm
	prmt.b32 %r12344, %r8190, %r8191, %r70;
	// inline asm
	ld.local.u32 	%r8194, [%rd33];
	ld.local.u32 	%r8195, [%rd6];
	// inline asm
	prmt.b32 %r12345, %r8194, %r8195, %r70;
	// inline asm
	ld.local.u32 	%r8198, [%rd6];
	ld.local.u32 	%r8199, [%rd32+8];
	// inline asm
	prmt.b32 %r8197, %r8198, %r8199, %r70;
	// inline asm
	st.local.u32 	[%rd35+8], %r8197;
	ld.local.v2.u32 	{%r8309, %r8310}, [%rd32+4];
	// inline asm
	prmt.b32 %r8201, %r8310, %r8309, %r70;
	// inline asm
	st.local.u32 	[%rd35+4], %r8201;
	ld.local.u32 	%r8206, [%rd32+4];
	ld.local.u32 	%r8207, [%rd32];
	// inline asm
	prmt.b32 %r8205, %r8206, %r8207, %r70;
	// inline asm
	st.local.u32 	[%rd35], %r8205;
	ld.local.u32 	%r8210, [%rd32];
	ld.local.u32 	%r8211, [%rd5];
	// inline asm
	prmt.b32 %r8209, %r8210, %r8211, %r70;
	// inline asm
	st.local.u32 	[%rd8], %r8209;
	ld.local.u32 	%r8214, [%rd5];
	ld.local.u32 	%r8215, [%rd31+8];
	// inline asm
	prmt.b32 %r8213, %r8214, %r8215, %r70;
	// inline asm
	st.local.u32 	[%rd34+8], %r8213;
	ld.local.v2.u32 	{%r8311, %r8312}, [%rd31+4];
	// inline asm
	prmt.b32 %r8217, %r8312, %r8311, %r70;
	// inline asm
	st.local.u32 	[%rd34+4], %r8217;
	ld.local.u32 	%r8222, [%rd31+4];
	ld.local.u32 	%r8223, [%rd31];
	// inline asm
	prmt.b32 %r8221, %r8222, %r8223, %r70;
	// inline asm
	st.local.u32 	[%rd34], %r8221;
	ld.local.u32 	%r8226, [%rd31];
	ld.local.u32 	%r8227, [%rd4];
	// inline asm
	prmt.b32 %r8225, %r8226, %r8227, %r70;
	// inline asm
	st.local.u32 	[%rd7], %r8225;
	ld.local.u32 	%r8230, [%rd4];
	ld.local.u32 	%r8231, [%rd30+8];
	// inline asm
	prmt.b32 %r8229, %r8230, %r8231, %r70;
	// inline asm
	st.local.u32 	[%rd33+8], %r8229;
	ld.local.v2.u32 	{%r8313, %r8314}, [%rd30+4];
	// inline asm
	prmt.b32 %r8233, %r8314, %r8313, %r70;
	// inline asm
	st.local.u32 	[%rd33+4], %r8233;
	ld.local.u32 	%r8238, [%rd30+4];
	ld.local.u32 	%r8239, [%rd30];
	// inline asm
	prmt.b32 %r8237, %r8238, %r8239, %r70;
	// inline asm
	st.local.u32 	[%rd33], %r8237;
	ld.local.u32 	%r8242, [%rd30];
	ld.local.u32 	%r8243, [%rd3];
	// inline asm
	prmt.b32 %r8241, %r8242, %r8243, %r70;
	// inline asm
	st.local.u32 	[%rd6], %r8241;
	ld.local.u32 	%r8246, [%rd3];
	ld.local.u32 	%r8247, [%rd29+8];
	// inline asm
	prmt.b32 %r8245, %r8246, %r8247, %r70;
	// inline asm
	st.local.u32 	[%rd32+8], %r8245;
	ld.local.v2.u32 	{%r8315, %r8316}, [%rd29+4];
	// inline asm
	prmt.b32 %r8249, %r8316, %r8315, %r70;
	// inline asm
	st.local.u32 	[%rd32+4], %r8249;
	ld.local.u32 	%r8254, [%rd29+4];
	ld.local.u32 	%r8255, [%rd29];
	// inline asm
	prmt.b32 %r8253, %r8254, %r8255, %r70;
	// inline asm
	st.local.u32 	[%rd32], %r8253;
	ld.local.u32 	%r8258, [%rd29];
	ld.local.u32 	%r8259, [%rd2];
	// inline asm
	prmt.b32 %r8257, %r8258, %r8259, %r70;
	// inline asm
	st.local.u32 	[%rd5], %r8257;
	ld.local.u32 	%r8262, [%rd2];
	ld.local.u32 	%r8263, [%rd28+8];
	// inline asm
	prmt.b32 %r8261, %r8262, %r8263, %r70;
	// inline asm
	st.local.u32 	[%rd31+8], %r8261;
	ld.local.v2.u32 	{%r8317, %r8318}, [%rd28+4];
	// inline asm
	prmt.b32 %r8265, %r8318, %r8317, %r70;
	// inline asm
	st.local.u32 	[%rd31+4], %r8265;
	ld.local.u32 	%r8270, [%rd28+4];
	ld.local.u32 	%r8271, [%rd28];
	// inline asm
	prmt.b32 %r8269, %r8270, %r8271, %r70;
	// inline asm
	st.local.u32 	[%rd31], %r8269;
	ld.local.u32 	%r8274, [%rd28];
	ld.local.u32 	%r8275, [%rd1];
	// inline asm
	prmt.b32 %r8273, %r8274, %r8275, %r70;
	// inline asm
	st.local.u32 	[%rd4], %r8273;
	ld.local.u32 	%r8278, [%rd1];
	// inline asm
	prmt.b32 %r8277, %r8278, %r12340, %r70;
	// inline asm
	st.local.v2.u32 	[%rd30+4], {%r12340, %r8277};
	st.local.u32 	[%rd30], %r12340;
	st.local.u32 	[%rd3], %r12340;
	st.local.v2.u32 	[%rd29+4], {%r12340, %r12340};
	st.local.u32 	[%rd29], %r12340;
	st.local.u32 	[%rd2], %r12340;
	st.local.v2.u32 	[%rd28+4], {%r12340, %r12340};
	st.local.u32 	[%rd28], %r12340;
	st.local.u32 	[%rd1], %r12340;
	mov.u32 	%r12341, %r12340;
	bra.uni 	BB4_406;

BB4_382:
	setp.eq.s32	%p205, %r4952, 27;
	mov.u32 	%r12343, %r12342;
	mov.u32 	%r12344, %r12342;
	mov.u32 	%r12345, %r12342;
	mov.u32 	%r12346, %r12342;
	mov.u32 	%r12347, %r12342;
	mov.u32 	%r12348, %r12342;
	mov.u32 	%r12349, %r12342;
	mov.u32 	%r12350, %r12342;
	mov.u32 	%r12351, %r12342;
	mov.u32 	%r12352, %r12342;
	mov.u32 	%r12353, %r12342;
	mov.u32 	%r12354, %r12342;
	mov.u32 	%r12355, %r12342;
	mov.u32 	%r12356, %r12342;
	mov.u32 	%r12357, %r12342;
	mov.u32 	%r12358, %r12342;
	mov.u32 	%r12359, %r12342;
	mov.u32 	%r12360, %r12342;
	mov.u32 	%r12361, %r12342;
	mov.u32 	%r12362, %r12342;
	mov.u32 	%r12363, %r12342;
	mov.u32 	%r12364, %r12342;
	mov.u32 	%r12365, %r12342;
	mov.u32 	%r12366, %r12342;
	mov.u32 	%r12367, %r12342;
	mov.u32 	%r12368, %r12342;
	mov.u32 	%r12369, %r12342;
	mov.u32 	%r12370, %r12342;
	mov.u32 	%r12371, %r12342;
	mov.u32 	%r12372, %r12342;
	mov.u32 	%r12373, %r12342;
	@%p205 bra 	BB4_383;
	bra.uni 	BB4_413;

BB4_383:
	mov.u32 	%r12340, 0;
	// inline asm
	prmt.b32 %r12366, %r12340, %r7, %r70;
	// inline asm
	ld.local.v2.u32 	{%r5703, %r5704}, [%rd35+4];
	// inline asm
	prmt.b32 %r12367, %r5704, %r5703, %r70;
	// inline asm
	ld.local.u32 	%r5574, [%rd35+4];
	ld.local.u32 	%r5575, [%rd35];
	// inline asm
	prmt.b32 %r12368, %r5574, %r5575, %r70;
	// inline asm
	ld.local.u32 	%r5578, [%rd35];
	ld.local.u32 	%r5579, [%rd8];
	// inline asm
	prmt.b32 %r12369, %r5578, %r5579, %r70;
	// inline asm
	ld.local.u32 	%r5582, [%rd8];
	ld.local.u32 	%r5583, [%rd34+8];
	// inline asm
	prmt.b32 %r12362, %r5582, %r5583, %r70;
	// inline asm
	ld.local.v2.u32 	{%r5705, %r5706}, [%rd34+4];
	// inline asm
	prmt.b32 %r12363, %r5706, %r5705, %r70;
	// inline asm
	ld.local.u32 	%r5590, [%rd34+4];
	ld.local.u32 	%r5591, [%rd34];
	// inline asm
	prmt.b32 %r12364, %r5590, %r5591, %r70;
	// inline asm
	ld.local.u32 	%r5594, [%rd34];
	ld.local.u32 	%r5595, [%rd7];
	// inline asm
	prmt.b32 %r12365, %r5594, %r5595, %r70;
	// inline asm
	ld.local.u32 	%r5598, [%rd7];
	ld.local.u32 	%r5599, [%rd33+8];
	// inline asm
	prmt.b32 %r12358, %r5598, %r5599, %r70;
	// inline asm
	ld.local.v2.u32 	{%r5707, %r5708}, [%rd33+4];
	// inline asm
	prmt.b32 %r12359, %r5708, %r5707, %r70;
	// inline asm
	ld.local.u32 	%r5606, [%rd33+4];
	ld.local.u32 	%r5607, [%rd33];
	// inline asm
	prmt.b32 %r12360, %r5606, %r5607, %r70;
	// inline asm
	ld.local.u32 	%r5610, [%rd33];
	ld.local.u32 	%r5611, [%rd6];
	// inline asm
	prmt.b32 %r12361, %r5610, %r5611, %r70;
	// inline asm
	ld.local.u32 	%r5614, [%rd6];
	ld.local.u32 	%r5615, [%rd32+8];
	// inline asm
	prmt.b32 %r12354, %r5614, %r5615, %r70;
	// inline asm
	ld.local.v2.u32 	{%r5709, %r5710}, [%rd32+4];
	// inline asm
	prmt.b32 %r12355, %r5710, %r5709, %r70;
	// inline asm
	ld.local.u32 	%r5622, [%rd32+4];
	ld.local.u32 	%r5623, [%rd32];
	// inline asm
	prmt.b32 %r12356, %r5622, %r5623, %r70;
	// inline asm
	ld.local.u32 	%r5626, [%rd32];
	ld.local.u32 	%r5627, [%rd5];
	// inline asm
	prmt.b32 %r12357, %r5626, %r5627, %r70;
	// inline asm
	ld.local.u32 	%r5630, [%rd5];
	ld.local.u32 	%r5631, [%rd31+8];
	// inline asm
	prmt.b32 %r12350, %r5630, %r5631, %r70;
	// inline asm
	ld.local.v2.u32 	{%r5711, %r5712}, [%rd31+4];
	// inline asm
	prmt.b32 %r12351, %r5712, %r5711, %r70;
	// inline asm
	ld.local.u32 	%r5638, [%rd31+4];
	ld.local.u32 	%r5639, [%rd31];
	// inline asm
	prmt.b32 %r12352, %r5638, %r5639, %r70;
	// inline asm
	ld.local.u32 	%r5642, [%rd31];
	ld.local.u32 	%r5643, [%rd4];
	// inline asm
	prmt.b32 %r12353, %r5642, %r5643, %r70;
	// inline asm
	ld.local.u32 	%r5646, [%rd4];
	ld.local.u32 	%r5647, [%rd30+8];
	// inline asm
	prmt.b32 %r12346, %r5646, %r5647, %r70;
	// inline asm
	ld.local.v2.u32 	{%r5713, %r5714}, [%rd30+4];
	// inline asm
	prmt.b32 %r12347, %r5714, %r5713, %r70;
	// inline asm
	ld.local.u32 	%r5654, [%rd30+4];
	ld.local.u32 	%r5655, [%rd30];
	// inline asm
	prmt.b32 %r12348, %r5654, %r5655, %r70;
	// inline asm
	ld.local.u32 	%r5658, [%rd30];
	ld.local.u32 	%r5659, [%rd3];
	// inline asm
	prmt.b32 %r12349, %r5658, %r5659, %r70;
	// inline asm
	ld.local.u32 	%r5662, [%rd3];
	ld.local.u32 	%r5663, [%rd29+8];
	// inline asm
	prmt.b32 %r12342, %r5662, %r5663, %r70;
	// inline asm
	ld.local.v2.u32 	{%r5715, %r5716}, [%rd29+4];
	// inline asm
	prmt.b32 %r12343, %r5716, %r5715, %r70;
	// inline asm
	ld.local.u32 	%r5670, [%rd29+4];
	ld.local.u32 	%r5671, [%rd29];
	// inline asm
	prmt.b32 %r12344, %r5670, %r5671, %r70;
	// inline asm
	ld.local.u32 	%r5674, [%rd29];
	ld.local.u32 	%r5675, [%rd2];
	// inline asm
	prmt.b32 %r12345, %r5674, %r5675, %r70;
	// inline asm
	ld.local.u32 	%r5678, [%rd2];
	ld.local.u32 	%r5679, [%rd28+8];
	// inline asm
	prmt.b32 %r5677, %r5678, %r5679, %r70;
	// inline asm
	st.local.u32 	[%rd35+8], %r5677;
	ld.local.v2.u32 	{%r5717, %r5718}, [%rd28+4];
	// inline asm
	prmt.b32 %r5681, %r5718, %r5717, %r70;
	// inline asm
	st.local.u32 	[%rd35+4], %r5681;
	ld.local.u32 	%r5686, [%rd28+4];
	ld.local.u32 	%r5687, [%rd28];
	// inline asm
	prmt.b32 %r5685, %r5686, %r5687, %r70;
	// inline asm
	st.local.u32 	[%rd35], %r5685;
	ld.local.u32 	%r5690, [%rd28];
	ld.local.u32 	%r5691, [%rd1];
	// inline asm
	prmt.b32 %r5689, %r5690, %r5691, %r70;
	// inline asm
	st.local.u32 	[%rd8], %r5689;
	ld.local.u32 	%r5694, [%rd1];
	// inline asm
	prmt.b32 %r5693, %r5694, %r12340, %r70;
	// inline asm
	st.local.v2.u32 	[%rd34+4], {%r12340, %r5693};
	st.local.u32 	[%rd34], %r12340;
	st.local.u32 	[%rd7], %r12340;
	st.local.v2.u32 	[%rd33+4], {%r12340, %r12340};
	st.local.u32 	[%rd33], %r12340;
	st.local.u32 	[%rd6], %r12340;
	st.local.v2.u32 	[%rd32+4], {%r12340, %r12340};
	st.local.u32 	[%rd32], %r12340;
	st.local.u32 	[%rd5], %r12340;
	st.local.v2.u32 	[%rd31+4], {%r12340, %r12340};
	st.local.u32 	[%rd31], %r12340;
	st.local.u32 	[%rd4], %r12340;
	st.local.v2.u32 	[%rd30+4], {%r12340, %r12340};
	st.local.u32 	[%rd30], %r12340;
	st.local.u32 	[%rd3], %r12340;
	st.local.v2.u32 	[%rd29+4], {%r12340, %r12340};
	st.local.u32 	[%rd29], %r12340;
	st.local.u32 	[%rd2], %r12340;
	st.local.v2.u32 	[%rd28+4], {%r12340, %r12340};
	st.local.u32 	[%rd28], %r12340;
	st.local.u32 	[%rd1], %r12340;
	mov.u32 	%r12341, %r12340;
	bra.uni 	BB4_410;

BB4_343:
	setp.eq.s32	%p234, %r4952, 7;
	mov.u32 	%r12343, %r12342;
	mov.u32 	%r12344, %r12342;
	mov.u32 	%r12345, %r12342;
	mov.u32 	%r12346, %r12342;
	mov.u32 	%r12347, %r12342;
	mov.u32 	%r12348, %r12342;
	mov.u32 	%r12349, %r12342;
	mov.u32 	%r12350, %r12342;
	mov.u32 	%r12351, %r12342;
	mov.u32 	%r12352, %r12342;
	mov.u32 	%r12353, %r12342;
	mov.u32 	%r12354, %r12342;
	mov.u32 	%r12355, %r12342;
	mov.u32 	%r12356, %r12342;
	mov.u32 	%r12357, %r12342;
	mov.u32 	%r12358, %r12342;
	mov.u32 	%r12359, %r12342;
	mov.u32 	%r12360, %r12342;
	mov.u32 	%r12361, %r12342;
	mov.u32 	%r12362, %r12342;
	mov.u32 	%r12363, %r12342;
	mov.u32 	%r12364, %r12342;
	mov.u32 	%r12365, %r12342;
	mov.u32 	%r12366, %r12342;
	mov.u32 	%r12367, %r12342;
	mov.u32 	%r12368, %r12342;
	mov.u32 	%r12369, %r12342;
	mov.u32 	%r12370, %r12342;
	mov.u32 	%r12371, %r12342;
	mov.u32 	%r12372, %r12342;
	mov.u32 	%r12373, %r12342;
	@%p234 bra 	BB4_344;
	bra.uni 	BB4_413;

BB4_344:
	mov.u32 	%r12340, 0;
	// inline asm
	prmt.b32 %r12346, %r12340, %r7, %r70;
	// inline asm
	ld.local.v2.u32 	{%r8993, %r8994}, [%rd35+4];
	// inline asm
	prmt.b32 %r12347, %r8994, %r8993, %r70;
	// inline asm
	ld.local.u32 	%r8844, [%rd35+4];
	ld.local.u32 	%r8845, [%rd35];
	// inline asm
	prmt.b32 %r12348, %r8844, %r8845, %r70;
	// inline asm
	ld.local.u32 	%r8848, [%rd35];
	ld.local.u32 	%r8849, [%rd8];
	// inline asm
	prmt.b32 %r12349, %r8848, %r8849, %r70;
	// inline asm
	ld.local.u32 	%r8852, [%rd8];
	ld.local.u32 	%r8853, [%rd34+8];
	// inline asm
	prmt.b32 %r12342, %r8852, %r8853, %r70;
	// inline asm
	ld.local.v2.u32 	{%r8995, %r8996}, [%rd34+4];
	// inline asm
	prmt.b32 %r12343, %r8996, %r8995, %r70;
	// inline asm
	ld.local.u32 	%r8860, [%rd34+4];
	ld.local.u32 	%r8861, [%rd34];
	// inline asm
	prmt.b32 %r12344, %r8860, %r8861, %r70;
	// inline asm
	ld.local.u32 	%r8864, [%rd34];
	ld.local.u32 	%r8865, [%rd7];
	// inline asm
	prmt.b32 %r12345, %r8864, %r8865, %r70;
	// inline asm
	ld.local.u32 	%r8868, [%rd7];
	ld.local.u32 	%r8869, [%rd33+8];
	// inline asm
	prmt.b32 %r8867, %r8868, %r8869, %r70;
	// inline asm
	st.local.u32 	[%rd35+8], %r8867;
	ld.local.v2.u32 	{%r8997, %r8998}, [%rd33+4];
	// inline asm
	prmt.b32 %r8871, %r8998, %r8997, %r70;
	// inline asm
	st.local.u32 	[%rd35+4], %r8871;
	ld.local.u32 	%r8876, [%rd33+4];
	ld.local.u32 	%r8877, [%rd33];
	// inline asm
	prmt.b32 %r8875, %r8876, %r8877, %r70;
	// inline asm
	st.local.u32 	[%rd35], %r8875;
	ld.local.u32 	%r8880, [%rd33];
	ld.local.u32 	%r8881, [%rd6];
	// inline asm
	prmt.b32 %r8879, %r8880, %r8881, %r70;
	// inline asm
	st.local.u32 	[%rd8], %r8879;
	ld.local.u32 	%r8884, [%rd6];
	ld.local.u32 	%r8885, [%rd32+8];
	// inline asm
	prmt.b32 %r8883, %r8884, %r8885, %r70;
	// inline asm
	st.local.u32 	[%rd34+8], %r8883;
	ld.local.v2.u32 	{%r8999, %r9000}, [%rd32+4];
	// inline asm
	prmt.b32 %r8887, %r9000, %r8999, %r70;
	// inline asm
	st.local.u32 	[%rd34+4], %r8887;
	ld.local.u32 	%r8892, [%rd32+4];
	ld.local.u32 	%r8893, [%rd32];
	// inline asm
	prmt.b32 %r8891, %r8892, %r8893, %r70;
	// inline asm
	st.local.u32 	[%rd34], %r8891;
	ld.local.u32 	%r8896, [%rd32];
	ld.local.u32 	%r8897, [%rd5];
	// inline asm
	prmt.b32 %r8895, %r8896, %r8897, %r70;
	// inline asm
	st.local.u32 	[%rd7], %r8895;
	ld.local.u32 	%r8900, [%rd5];
	ld.local.u32 	%r8901, [%rd31+8];
	// inline asm
	prmt.b32 %r8899, %r8900, %r8901, %r70;
	// inline asm
	st.local.u32 	[%rd33+8], %r8899;
	ld.local.v2.u32 	{%r9001, %r9002}, [%rd31+4];
	// inline asm
	prmt.b32 %r8903, %r9002, %r9001, %r70;
	// inline asm
	st.local.u32 	[%rd33+4], %r8903;
	ld.local.u32 	%r8908, [%rd31+4];
	ld.local.u32 	%r8909, [%rd31];
	// inline asm
	prmt.b32 %r8907, %r8908, %r8909, %r70;
	// inline asm
	st.local.u32 	[%rd33], %r8907;
	ld.local.u32 	%r8912, [%rd31];
	ld.local.u32 	%r8913, [%rd4];
	// inline asm
	prmt.b32 %r8911, %r8912, %r8913, %r70;
	// inline asm
	st.local.u32 	[%rd6], %r8911;
	ld.local.u32 	%r8916, [%rd4];
	ld.local.u32 	%r8917, [%rd30+8];
	// inline asm
	prmt.b32 %r8915, %r8916, %r8917, %r70;
	// inline asm
	st.local.u32 	[%rd32+8], %r8915;
	ld.local.v2.u32 	{%r9003, %r9004}, [%rd30+4];
	// inline asm
	prmt.b32 %r8919, %r9004, %r9003, %r70;
	// inline asm
	st.local.u32 	[%rd32+4], %r8919;
	ld.local.u32 	%r8924, [%rd30+4];
	ld.local.u32 	%r8925, [%rd30];
	// inline asm
	prmt.b32 %r8923, %r8924, %r8925, %r70;
	// inline asm
	st.local.u32 	[%rd32], %r8923;
	ld.local.u32 	%r8928, [%rd30];
	ld.local.u32 	%r8929, [%rd3];
	// inline asm
	prmt.b32 %r8927, %r8928, %r8929, %r70;
	// inline asm
	st.local.u32 	[%rd5], %r8927;
	ld.local.u32 	%r8932, [%rd3];
	ld.local.u32 	%r8933, [%rd29+8];
	// inline asm
	prmt.b32 %r8931, %r8932, %r8933, %r70;
	// inline asm
	st.local.u32 	[%rd31+8], %r8931;
	ld.local.v2.u32 	{%r9005, %r9006}, [%rd29+4];
	// inline asm
	prmt.b32 %r8935, %r9006, %r9005, %r70;
	// inline asm
	st.local.u32 	[%rd31+4], %r8935;
	ld.local.u32 	%r8940, [%rd29+4];
	ld.local.u32 	%r8941, [%rd29];
	// inline asm
	prmt.b32 %r8939, %r8940, %r8941, %r70;
	// inline asm
	st.local.u32 	[%rd31], %r8939;
	ld.local.u32 	%r8944, [%rd29];
	ld.local.u32 	%r8945, [%rd2];
	// inline asm
	prmt.b32 %r8943, %r8944, %r8945, %r70;
	// inline asm
	st.local.u32 	[%rd4], %r8943;
	ld.local.u32 	%r8948, [%rd2];
	ld.local.u32 	%r8949, [%rd28+8];
	// inline asm
	prmt.b32 %r8947, %r8948, %r8949, %r70;
	// inline asm
	st.local.u32 	[%rd30+8], %r8947;
	ld.local.v2.u32 	{%r9007, %r9008}, [%rd28+4];
	// inline asm
	prmt.b32 %r8951, %r9008, %r9007, %r70;
	// inline asm
	st.local.u32 	[%rd30+4], %r8951;
	ld.local.u32 	%r8956, [%rd28+4];
	ld.local.u32 	%r8957, [%rd28];
	// inline asm
	prmt.b32 %r8955, %r8956, %r8957, %r70;
	// inline asm
	st.local.u32 	[%rd30], %r8955;
	ld.local.u32 	%r8960, [%rd28];
	ld.local.u32 	%r8961, [%rd1];
	// inline asm
	prmt.b32 %r8959, %r8960, %r8961, %r70;
	// inline asm
	st.local.u32 	[%rd3], %r8959;
	ld.local.u32 	%r8964, [%rd1];
	// inline asm
	prmt.b32 %r8963, %r8964, %r12340, %r70;
	// inline asm
	st.local.v2.u32 	[%rd29+4], {%r12340, %r8963};
	st.local.u32 	[%rd29], %r12340;
	st.local.u32 	[%rd2], %r12340;
	st.local.v2.u32 	[%rd28+4], {%r12340, %r12340};
	st.local.u32 	[%rd28], %r12340;
	st.local.u32 	[%rd1], %r12340;
	mov.u32 	%r12341, %r12340;

BB4_405:
	mov.u32 	%r12350, %r12340;
	mov.u32 	%r12351, %r12340;
	mov.u32 	%r12352, %r12340;
	mov.u32 	%r12353, %r12340;

BB4_406:
	mov.u32 	%r12354, %r12340;
	mov.u32 	%r12355, %r12340;
	mov.u32 	%r12356, %r12340;
	mov.u32 	%r12357, %r12340;

BB4_407:
	mov.u32 	%r12358, %r12340;
	mov.u32 	%r12359, %r12340;
	mov.u32 	%r12360, %r12340;
	mov.u32 	%r12361, %r12340;

BB4_408:
	mov.u32 	%r12362, %r12340;
	mov.u32 	%r12363, %r12340;
	mov.u32 	%r12364, %r12340;
	mov.u32 	%r12365, %r12340;

BB4_409:
	mov.u32 	%r12366, %r12340;
	mov.u32 	%r12367, %r12340;
	mov.u32 	%r12368, %r12340;
	mov.u32 	%r12369, %r12340;

BB4_410:
	mov.u32 	%r12370, %r12340;
	mov.u32 	%r12371, %r12340;
	mov.u32 	%r12372, %r12340;
	mov.u32 	%r12373, %r12340;
	bra.uni 	BB4_413;

BB4_374:
	setp.eq.s32	%p211, %r4952, 23;
	mov.u32 	%r12343, %r12342;
	mov.u32 	%r12344, %r12342;
	mov.u32 	%r12345, %r12342;
	mov.u32 	%r12346, %r12342;
	mov.u32 	%r12347, %r12342;
	mov.u32 	%r12348, %r12342;
	mov.u32 	%r12349, %r12342;
	mov.u32 	%r12350, %r12342;
	mov.u32 	%r12351, %r12342;
	mov.u32 	%r12352, %r12342;
	mov.u32 	%r12353, %r12342;
	mov.u32 	%r12354, %r12342;
	mov.u32 	%r12355, %r12342;
	mov.u32 	%r12356, %r12342;
	mov.u32 	%r12357, %r12342;
	mov.u32 	%r12358, %r12342;
	mov.u32 	%r12359, %r12342;
	mov.u32 	%r12360, %r12342;
	mov.u32 	%r12361, %r12342;
	mov.u32 	%r12362, %r12342;
	mov.u32 	%r12363, %r12342;
	mov.u32 	%r12364, %r12342;
	mov.u32 	%r12365, %r12342;
	mov.u32 	%r12366, %r12342;
	mov.u32 	%r12367, %r12342;
	mov.u32 	%r12368, %r12342;
	mov.u32 	%r12369, %r12342;
	mov.u32 	%r12370, %r12342;
	mov.u32 	%r12371, %r12342;
	mov.u32 	%r12372, %r12342;
	mov.u32 	%r12373, %r12342;
	@%p211 bra 	BB4_375;
	bra.uni 	BB4_413;

BB4_375:
	mov.u32 	%r12340, 0;
	// inline asm
	prmt.b32 %r12362, %r12340, %r7, %r70;
	// inline asm
	ld.local.v2.u32 	{%r6329, %r6330}, [%rd35+4];
	// inline asm
	prmt.b32 %r12363, %r6330, %r6329, %r70;
	// inline asm
	ld.local.u32 	%r6196, [%rd35+4];
	ld.local.u32 	%r6197, [%rd35];
	// inline asm
	prmt.b32 %r12364, %r6196, %r6197, %r70;
	// inline asm
	ld.local.u32 	%r6200, [%rd35];
	ld.local.u32 	%r6201, [%rd8];
	// inline asm
	prmt.b32 %r12365, %r6200, %r6201, %r70;
	// inline asm
	ld.local.u32 	%r6204, [%rd8];
	ld.local.u32 	%r6205, [%rd34+8];
	// inline asm
	prmt.b32 %r12358, %r6204, %r6205, %r70;
	// inline asm
	ld.local.v2.u32 	{%r6331, %r6332}, [%rd34+4];
	// inline asm
	prmt.b32 %r12359, %r6332, %r6331, %r70;
	// inline asm
	ld.local.u32 	%r6212, [%rd34+4];
	ld.local.u32 	%r6213, [%rd34];
	// inline asm
	prmt.b32 %r12360, %r6212, %r6213, %r70;
	// inline asm
	ld.local.u32 	%r6216, [%rd34];
	ld.local.u32 	%r6217, [%rd7];
	// inline asm
	prmt.b32 %r12361, %r6216, %r6217, %r70;
	// inline asm
	ld.local.u32 	%r6220, [%rd7];
	ld.local.u32 	%r6221, [%rd33+8];
	// inline asm
	prmt.b32 %r12354, %r6220, %r6221, %r70;
	// inline asm
	ld.local.v2.u32 	{%r6333, %r6334}, [%rd33+4];
	// inline asm
	prmt.b32 %r12355, %r6334, %r6333, %r70;
	// inline asm
	ld.local.u32 	%r6228, [%rd33+4];
	ld.local.u32 	%r6229, [%rd33];
	// inline asm
	prmt.b32 %r12356, %r6228, %r6229, %r70;
	// inline asm
	ld.local.u32 	%r6232, [%rd33];
	ld.local.u32 	%r6233, [%rd6];
	// inline asm
	prmt.b32 %r12357, %r6232, %r6233, %r70;
	// inline asm
	ld.local.u32 	%r6236, [%rd6];
	ld.local.u32 	%r6237, [%rd32+8];
	// inline asm
	prmt.b32 %r12350, %r6236, %r6237, %r70;
	// inline asm
	ld.local.v2.u32 	{%r6335, %r6336}, [%rd32+4];
	// inline asm
	prmt.b32 %r12351, %r6336, %r6335, %r70;
	// inline asm
	ld.local.u32 	%r6244, [%rd32+4];
	ld.local.u32 	%r6245, [%rd32];
	// inline asm
	prmt.b32 %r12352, %r6244, %r6245, %r70;
	// inline asm
	ld.local.u32 	%r6248, [%rd32];
	ld.local.u32 	%r6249, [%rd5];
	// inline asm
	prmt.b32 %r12353, %r6248, %r6249, %r70;
	// inline asm
	ld.local.u32 	%r6252, [%rd5];
	ld.local.u32 	%r6253, [%rd31+8];
	// inline asm
	prmt.b32 %r12346, %r6252, %r6253, %r70;
	// inline asm
	ld.local.v2.u32 	{%r6337, %r6338}, [%rd31+4];
	// inline asm
	prmt.b32 %r12347, %r6338, %r6337, %r70;
	// inline asm
	ld.local.u32 	%r6260, [%rd31+4];
	ld.local.u32 	%r6261, [%rd31];
	// inline asm
	prmt.b32 %r12348, %r6260, %r6261, %r70;
	// inline asm
	ld.local.u32 	%r6264, [%rd31];
	ld.local.u32 	%r6265, [%rd4];
	// inline asm
	prmt.b32 %r12349, %r6264, %r6265, %r70;
	// inline asm
	ld.local.u32 	%r6268, [%rd4];
	ld.local.u32 	%r6269, [%rd30+8];
	// inline asm
	prmt.b32 %r12342, %r6268, %r6269, %r70;
	// inline asm
	ld.local.v2.u32 	{%r6339, %r6340}, [%rd30+4];
	// inline asm
	prmt.b32 %r12343, %r6340, %r6339, %r70;
	// inline asm
	ld.local.u32 	%r6276, [%rd30+4];
	ld.local.u32 	%r6277, [%rd30];
	// inline asm
	prmt.b32 %r12344, %r6276, %r6277, %r70;
	// inline asm
	ld.local.u32 	%r6280, [%rd30];
	ld.local.u32 	%r6281, [%rd3];
	// inline asm
	prmt.b32 %r12345, %r6280, %r6281, %r70;
	// inline asm
	ld.local.u32 	%r6284, [%rd3];
	ld.local.u32 	%r6285, [%rd29+8];
	// inline asm
	prmt.b32 %r6283, %r6284, %r6285, %r70;
	// inline asm
	st.local.u32 	[%rd35+8], %r6283;
	ld.local.v2.u32 	{%r6341, %r6342}, [%rd29+4];
	// inline asm
	prmt.b32 %r6287, %r6342, %r6341, %r70;
	// inline asm
	st.local.u32 	[%rd35+4], %r6287;
	ld.local.u32 	%r6292, [%rd29+4];
	ld.local.u32 	%r6293, [%rd29];
	// inline asm
	prmt.b32 %r6291, %r6292, %r6293, %r70;
	// inline asm
	st.local.u32 	[%rd35], %r6291;
	ld.local.u32 	%r6296, [%rd29];
	ld.local.u32 	%r6297, [%rd2];
	// inline asm
	prmt.b32 %r6295, %r6296, %r6297, %r70;
	// inline asm
	st.local.u32 	[%rd8], %r6295;
	ld.local.u32 	%r6300, [%rd2];
	ld.local.u32 	%r6301, [%rd28+8];
	// inline asm
	prmt.b32 %r6299, %r6300, %r6301, %r70;
	// inline asm
	st.local.u32 	[%rd34+8], %r6299;
	ld.local.v2.u32 	{%r6343, %r6344}, [%rd28+4];
	// inline asm
	prmt.b32 %r6303, %r6344, %r6343, %r70;
	// inline asm
	st.local.u32 	[%rd34+4], %r6303;
	ld.local.u32 	%r6308, [%rd28+4];
	ld.local.u32 	%r6309, [%rd28];
	// inline asm
	prmt.b32 %r6307, %r6308, %r6309, %r70;
	// inline asm
	st.local.u32 	[%rd34], %r6307;
	ld.local.u32 	%r6312, [%rd28];
	ld.local.u32 	%r6313, [%rd1];
	// inline asm
	prmt.b32 %r6311, %r6312, %r6313, %r70;
	// inline asm
	st.local.u32 	[%rd7], %r6311;
	ld.local.u32 	%r6316, [%rd1];
	// inline asm
	prmt.b32 %r6315, %r6316, %r12340, %r70;
	// inline asm
	st.local.v2.u32 	[%rd33+4], {%r12340, %r6315};
	st.local.u32 	[%rd33], %r12340;
	st.local.u32 	[%rd6], %r12340;
	st.local.v2.u32 	[%rd32+4], {%r12340, %r12340};
	st.local.u32 	[%rd32], %r12340;
	st.local.u32 	[%rd5], %r12340;
	st.local.v2.u32 	[%rd31+4], {%r12340, %r12340};
	st.local.u32 	[%rd31], %r12340;
	st.local.u32 	[%rd4], %r12340;
	st.local.v2.u32 	[%rd30+4], {%r12340, %r12340};
	st.local.u32 	[%rd30], %r12340;
	st.local.u32 	[%rd3], %r12340;
	st.local.v2.u32 	[%rd29+4], {%r12340, %r12340};
	st.local.u32 	[%rd29], %r12340;
	st.local.u32 	[%rd2], %r12340;
	st.local.v2.u32 	[%rd28+4], {%r12340, %r12340};
	st.local.u32 	[%rd28], %r12340;
	st.local.u32 	[%rd1], %r12340;
	mov.u32 	%r12341, %r12340;
	bra.uni 	BB4_409;

BB4_358:
	setp.eq.s32	%p223, %r4952, 15;
	mov.u32 	%r12343, %r12342;
	mov.u32 	%r12344, %r12342;
	mov.u32 	%r12345, %r12342;
	mov.u32 	%r12346, %r12342;
	mov.u32 	%r12347, %r12342;
	mov.u32 	%r12348, %r12342;
	mov.u32 	%r12349, %r12342;
	mov.u32 	%r12350, %r12342;
	mov.u32 	%r12351, %r12342;
	mov.u32 	%r12352, %r12342;
	mov.u32 	%r12353, %r12342;
	mov.u32 	%r12354, %r12342;
	mov.u32 	%r12355, %r12342;
	mov.u32 	%r12356, %r12342;
	mov.u32 	%r12357, %r12342;
	mov.u32 	%r12358, %r12342;
	mov.u32 	%r12359, %r12342;
	mov.u32 	%r12360, %r12342;
	mov.u32 	%r12361, %r12342;
	mov.u32 	%r12362, %r12342;
	mov.u32 	%r12363, %r12342;
	mov.u32 	%r12364, %r12342;
	mov.u32 	%r12365, %r12342;
	mov.u32 	%r12366, %r12342;
	mov.u32 	%r12367, %r12342;
	mov.u32 	%r12368, %r12342;
	mov.u32 	%r12369, %r12342;
	mov.u32 	%r12370, %r12342;
	mov.u32 	%r12371, %r12342;
	mov.u32 	%r12372, %r12342;
	mov.u32 	%r12373, %r12342;
	@%p223 bra 	BB4_359;
	bra.uni 	BB4_413;

BB4_359:
	mov.u32 	%r12340, 0;
	// inline asm
	prmt.b32 %r12354, %r12340, %r7, %r70;
	// inline asm
	ld.local.v2.u32 	{%r7629, %r7630}, [%rd35+4];
	// inline asm
	prmt.b32 %r12355, %r7630, %r7629, %r70;
	// inline asm
	ld.local.u32 	%r7488, [%rd35+4];
	ld.local.u32 	%r7489, [%rd35];
	// inline asm
	prmt.b32 %r12356, %r7488, %r7489, %r70;
	// inline asm
	ld.local.u32 	%r7492, [%rd35];
	ld.local.u32 	%r7493, [%rd8];
	// inline asm
	prmt.b32 %r12357, %r7492, %r7493, %r70;
	// inline asm
	ld.local.u32 	%r7496, [%rd8];
	ld.local.u32 	%r7497, [%rd34+8];
	// inline asm
	prmt.b32 %r12350, %r7496, %r7497, %r70;
	// inline asm
	ld.local.v2.u32 	{%r7631, %r7632}, [%rd34+4];
	// inline asm
	prmt.b32 %r12351, %r7632, %r7631, %r70;
	// inline asm
	ld.local.u32 	%r7504, [%rd34+4];
	ld.local.u32 	%r7505, [%rd34];
	// inline asm
	prmt.b32 %r12352, %r7504, %r7505, %r70;
	// inline asm
	ld.local.u32 	%r7508, [%rd34];
	ld.local.u32 	%r7509, [%rd7];
	// inline asm
	prmt.b32 %r12353, %r7508, %r7509, %r70;
	// inline asm
	ld.local.u32 	%r7512, [%rd7];
	ld.local.u32 	%r7513, [%rd33+8];
	// inline asm
	prmt.b32 %r12346, %r7512, %r7513, %r70;
	// inline asm
	ld.local.v2.u32 	{%r7633, %r7634}, [%rd33+4];
	// inline asm
	prmt.b32 %r12347, %r7634, %r7633, %r70;
	// inline asm
	ld.local.u32 	%r7520, [%rd33+4];
	ld.local.u32 	%r7521, [%rd33];
	// inline asm
	prmt.b32 %r12348, %r7520, %r7521, %r70;
	// inline asm
	ld.local.u32 	%r7524, [%rd33];
	ld.local.u32 	%r7525, [%rd6];
	// inline asm
	prmt.b32 %r12349, %r7524, %r7525, %r70;
	// inline asm
	ld.local.u32 	%r7528, [%rd6];
	ld.local.u32 	%r7529, [%rd32+8];
	// inline asm
	prmt.b32 %r12342, %r7528, %r7529, %r70;
	// inline asm
	ld.local.v2.u32 	{%r7635, %r7636}, [%rd32+4];
	// inline asm
	prmt.b32 %r12343, %r7636, %r7635, %r70;
	// inline asm
	ld.local.u32 	%r7536, [%rd32+4];
	ld.local.u32 	%r7537, [%rd32];
	// inline asm
	prmt.b32 %r12344, %r7536, %r7537, %r70;
	// inline asm
	ld.local.u32 	%r7540, [%rd32];
	ld.local.u32 	%r7541, [%rd5];
	// inline asm
	prmt.b32 %r12345, %r7540, %r7541, %r70;
	// inline asm
	ld.local.u32 	%r7544, [%rd5];
	ld.local.u32 	%r7545, [%rd31+8];
	// inline asm
	prmt.b32 %r7543, %r7544, %r7545, %r70;
	// inline asm
	st.local.u32 	[%rd35+8], %r7543;
	ld.local.v2.u32 	{%r7637, %r7638}, [%rd31+4];
	// inline asm
	prmt.b32 %r7547, %r7638, %r7637, %r70;
	// inline asm
	st.local.u32 	[%rd35+4], %r7547;
	ld.local.u32 	%r7552, [%rd31+4];
	ld.local.u32 	%r7553, [%rd31];
	// inline asm
	prmt.b32 %r7551, %r7552, %r7553, %r70;
	// inline asm
	st.local.u32 	[%rd35], %r7551;
	ld.local.u32 	%r7556, [%rd31];
	ld.local.u32 	%r7557, [%rd4];
	// inline asm
	prmt.b32 %r7555, %r7556, %r7557, %r70;
	// inline asm
	st.local.u32 	[%rd8], %r7555;
	ld.local.u32 	%r7560, [%rd4];
	ld.local.u32 	%r7561, [%rd30+8];
	// inline asm
	prmt.b32 %r7559, %r7560, %r7561, %r70;
	// inline asm
	st.local.u32 	[%rd34+8], %r7559;
	ld.local.v2.u32 	{%r7639, %r7640}, [%rd30+4];
	// inline asm
	prmt.b32 %r7563, %r7640, %r7639, %r70;
	// inline asm
	st.local.u32 	[%rd34+4], %r7563;
	ld.local.u32 	%r7568, [%rd30+4];
	ld.local.u32 	%r7569, [%rd30];
	// inline asm
	prmt.b32 %r7567, %r7568, %r7569, %r70;
	// inline asm
	st.local.u32 	[%rd34], %r7567;
	ld.local.u32 	%r7572, [%rd30];
	ld.local.u32 	%r7573, [%rd3];
	// inline asm
	prmt.b32 %r7571, %r7572, %r7573, %r70;
	// inline asm
	st.local.u32 	[%rd7], %r7571;
	ld.local.u32 	%r7576, [%rd3];
	ld.local.u32 	%r7577, [%rd29+8];
	// inline asm
	prmt.b32 %r7575, %r7576, %r7577, %r70;
	// inline asm
	st.local.u32 	[%rd33+8], %r7575;
	ld.local.v2.u32 	{%r7641, %r7642}, [%rd29+4];
	// inline asm
	prmt.b32 %r7579, %r7642, %r7641, %r70;
	// inline asm
	st.local.u32 	[%rd33+4], %r7579;
	ld.local.u32 	%r7584, [%rd29+4];
	ld.local.u32 	%r7585, [%rd29];
	// inline asm
	prmt.b32 %r7583, %r7584, %r7585, %r70;
	// inline asm
	st.local.u32 	[%rd33], %r7583;
	ld.local.u32 	%r7588, [%rd29];
	ld.local.u32 	%r7589, [%rd2];
	// inline asm
	prmt.b32 %r7587, %r7588, %r7589, %r70;
	// inline asm
	st.local.u32 	[%rd6], %r7587;
	ld.local.u32 	%r7592, [%rd2];
	ld.local.u32 	%r7593, [%rd28+8];
	// inline asm
	prmt.b32 %r7591, %r7592, %r7593, %r70;
	// inline asm
	st.local.u32 	[%rd32+8], %r7591;
	ld.local.v2.u32 	{%r7643, %r7644}, [%rd28+4];
	// inline asm
	prmt.b32 %r7595, %r7644, %r7643, %r70;
	// inline asm
	st.local.u32 	[%rd32+4], %r7595;
	ld.local.u32 	%r7600, [%rd28+4];
	ld.local.u32 	%r7601, [%rd28];
	// inline asm
	prmt.b32 %r7599, %r7600, %r7601, %r70;
	// inline asm
	st.local.u32 	[%rd32], %r7599;
	ld.local.u32 	%r7604, [%rd28];
	ld.local.u32 	%r7605, [%rd1];
	// inline asm
	prmt.b32 %r7603, %r7604, %r7605, %r70;
	// inline asm
	st.local.u32 	[%rd5], %r7603;
	ld.local.u32 	%r7608, [%rd1];
	// inline asm
	prmt.b32 %r7607, %r7608, %r12340, %r70;
	// inline asm
	st.local.v2.u32 	[%rd31+4], {%r12340, %r7607};
	st.local.u32 	[%rd31], %r12340;
	st.local.u32 	[%rd4], %r12340;
	st.local.v2.u32 	[%rd30+4], {%r12340, %r12340};
	st.local.u32 	[%rd30], %r12340;
	st.local.u32 	[%rd3], %r12340;
	st.local.v2.u32 	[%rd29+4], {%r12340, %r12340};
	st.local.u32 	[%rd29], %r12340;
	st.local.u32 	[%rd2], %r12340;
	st.local.v2.u32 	[%rd28+4], {%r12340, %r12340};
	st.local.u32 	[%rd28], %r12340;
	st.local.u32 	[%rd1], %r12340;
	mov.u32 	%r12341, %r12340;
	bra.uni 	BB4_407;

BB4_389:
	setp.ne.s32	%p200, %r4952, 31;
	mov.u32 	%r12343, %r12342;
	mov.u32 	%r12344, %r12342;
	mov.u32 	%r12345, %r12342;
	mov.u32 	%r12346, %r12342;
	mov.u32 	%r12347, %r12342;
	mov.u32 	%r12348, %r12342;
	mov.u32 	%r12349, %r12342;
	mov.u32 	%r12350, %r12342;
	mov.u32 	%r12351, %r12342;
	mov.u32 	%r12352, %r12342;
	mov.u32 	%r12353, %r12342;
	mov.u32 	%r12354, %r12342;
	mov.u32 	%r12355, %r12342;
	mov.u32 	%r12356, %r12342;
	mov.u32 	%r12357, %r12342;
	mov.u32 	%r12358, %r12342;
	mov.u32 	%r12359, %r12342;
	mov.u32 	%r12360, %r12342;
	mov.u32 	%r12361, %r12342;
	mov.u32 	%r12362, %r12342;
	mov.u32 	%r12363, %r12342;
	mov.u32 	%r12364, %r12342;
	mov.u32 	%r12365, %r12342;
	mov.u32 	%r12366, %r12342;
	mov.u32 	%r12367, %r12342;
	mov.u32 	%r12368, %r12342;
	mov.u32 	%r12369, %r12342;
	mov.u32 	%r12370, %r12342;
	mov.u32 	%r12371, %r12342;
	mov.u32 	%r12372, %r12342;
	mov.u32 	%r12373, %r12342;
	@%p200 bra 	BB4_413;

	mov.u32 	%r12340, 0;
	// inline asm
	prmt.b32 %r12370, %r12340, %r7, %r70;
	// inline asm
	ld.local.v2.u32 	{%r5093, %r5094}, [%rd35+4];
	// inline asm
	prmt.b32 %r12371, %r5094, %r5093, %r70;
	// inline asm
	ld.local.u32 	%r4968, [%rd35+4];
	ld.local.u32 	%r4969, [%rd35];
	// inline asm
	prmt.b32 %r12372, %r4968, %r4969, %r70;
	// inline asm
	ld.local.u32 	%r4972, [%rd35];
	ld.local.u32 	%r4973, [%rd8];
	// inline asm
	prmt.b32 %r12373, %r4972, %r4973, %r70;
	// inline asm
	ld.local.u32 	%r4976, [%rd8];
	ld.local.u32 	%r4977, [%rd34+8];
	// inline asm
	prmt.b32 %r12366, %r4976, %r4977, %r70;
	// inline asm
	ld.local.v2.u32 	{%r5095, %r5096}, [%rd34+4];
	// inline asm
	prmt.b32 %r12367, %r5096, %r5095, %r70;
	// inline asm
	ld.local.u32 	%r4984, [%rd34+4];
	ld.local.u32 	%r4985, [%rd34];
	// inline asm
	prmt.b32 %r12368, %r4984, %r4985, %r70;
	// inline asm
	ld.local.u32 	%r4988, [%rd34];
	ld.local.u32 	%r4989, [%rd7];
	// inline asm
	prmt.b32 %r12369, %r4988, %r4989, %r70;
	// inline asm
	ld.local.u32 	%r4992, [%rd7];
	ld.local.u32 	%r4993, [%rd33+8];
	// inline asm
	prmt.b32 %r12362, %r4992, %r4993, %r70;
	// inline asm
	ld.local.v2.u32 	{%r5097, %r5098}, [%rd33+4];
	// inline asm
	prmt.b32 %r12363, %r5098, %r5097, %r70;
	// inline asm
	ld.local.u32 	%r5000, [%rd33+4];
	ld.local.u32 	%r5001, [%rd33];
	// inline asm
	prmt.b32 %r12364, %r5000, %r5001, %r70;
	// inline asm
	ld.local.u32 	%r5004, [%rd33];
	ld.local.u32 	%r5005, [%rd6];
	// inline asm
	prmt.b32 %r12365, %r5004, %r5005, %r70;
	// inline asm
	ld.local.u32 	%r5008, [%rd6];
	ld.local.u32 	%r5009, [%rd32+8];
	// inline asm
	prmt.b32 %r12358, %r5008, %r5009, %r70;
	// inline asm
	ld.local.v2.u32 	{%r5099, %r5100}, [%rd32+4];
	// inline asm
	prmt.b32 %r12359, %r5100, %r5099, %r70;
	// inline asm
	ld.local.u32 	%r5016, [%rd32+4];
	ld.local.u32 	%r5017, [%rd32];
	// inline asm
	prmt.b32 %r12360, %r5016, %r5017, %r70;
	// inline asm
	ld.local.u32 	%r5020, [%rd32];
	ld.local.u32 	%r5021, [%rd5];
	// inline asm
	prmt.b32 %r12361, %r5020, %r5021, %r70;
	// inline asm
	ld.local.u32 	%r5024, [%rd5];
	ld.local.u32 	%r5025, [%rd31+8];
	// inline asm
	prmt.b32 %r12354, %r5024, %r5025, %r70;
	// inline asm
	ld.local.v2.u32 	{%r5101, %r5102}, [%rd31+4];
	// inline asm
	prmt.b32 %r12355, %r5102, %r5101, %r70;
	// inline asm
	ld.local.u32 	%r5032, [%rd31+4];
	ld.local.u32 	%r5033, [%rd31];
	// inline asm
	prmt.b32 %r12356, %r5032, %r5033, %r70;
	// inline asm
	ld.local.u32 	%r5036, [%rd31];
	ld.local.u32 	%r5037, [%rd4];
	// inline asm
	prmt.b32 %r12357, %r5036, %r5037, %r70;
	// inline asm
	ld.local.u32 	%r5040, [%rd4];
	ld.local.u32 	%r5041, [%rd30+8];
	// inline asm
	prmt.b32 %r12350, %r5040, %r5041, %r70;
	// inline asm
	ld.local.v2.u32 	{%r5103, %r5104}, [%rd30+4];
	// inline asm
	prmt.b32 %r12351, %r5104, %r5103, %r70;
	// inline asm
	ld.local.u32 	%r5048, [%rd30+4];
	ld.local.u32 	%r5049, [%rd30];
	// inline asm
	prmt.b32 %r12352, %r5048, %r5049, %r70;
	// inline asm
	ld.local.u32 	%r5052, [%rd30];
	ld.local.u32 	%r5053, [%rd3];
	// inline asm
	prmt.b32 %r12353, %r5052, %r5053, %r70;
	// inline asm
	ld.local.u32 	%r5056, [%rd3];
	ld.local.u32 	%r5057, [%rd29+8];
	// inline asm
	prmt.b32 %r12346, %r5056, %r5057, %r70;
	// inline asm
	ld.local.v2.u32 	{%r5105, %r5106}, [%rd29+4];
	// inline asm
	prmt.b32 %r12347, %r5106, %r5105, %r70;
	// inline asm
	ld.local.u32 	%r5064, [%rd29+4];
	ld.local.u32 	%r5065, [%rd29];
	// inline asm
	prmt.b32 %r12348, %r5064, %r5065, %r70;
	// inline asm
	ld.local.u32 	%r5068, [%rd29];
	ld.local.u32 	%r5069, [%rd2];
	// inline asm
	prmt.b32 %r12349, %r5068, %r5069, %r70;
	// inline asm
	ld.local.u32 	%r5072, [%rd2];
	ld.local.u32 	%r5073, [%rd28+8];
	// inline asm
	prmt.b32 %r12342, %r5072, %r5073, %r70;
	// inline asm
	ld.local.v2.u32 	{%r5107, %r5108}, [%rd28+4];
	// inline asm
	prmt.b32 %r12343, %r5108, %r5107, %r70;
	// inline asm
	ld.local.u32 	%r5080, [%rd28+4];
	ld.local.u32 	%r5081, [%rd28];
	// inline asm
	prmt.b32 %r12344, %r5080, %r5081, %r70;
	// inline asm
	ld.local.u32 	%r5084, [%rd28];
	ld.local.u32 	%r5085, [%rd1];
	// inline asm
	prmt.b32 %r12345, %r5084, %r5085, %r70;
	// inline asm
	ld.local.u32 	%r5088, [%rd1];
	// inline asm
	prmt.b32 %r5087, %r5088, %r12340, %r70;
	// inline asm
	st.local.v2.u32 	[%rd35+4], {%r12340, %r5087};
	st.local.u32 	[%rd35], %r12340;
	st.local.u32 	[%rd8], %r12340;
	st.local.v2.u32 	[%rd34+4], {%r12340, %r12340};
	st.local.u32 	[%rd34], %r12340;
	st.local.u32 	[%rd7], %r12340;
	st.local.v2.u32 	[%rd33+4], {%r12340, %r12340};
	st.local.u32 	[%rd33], %r12340;
	st.local.u32 	[%rd6], %r12340;
	st.local.v2.u32 	[%rd32+4], {%r12340, %r12340};
	st.local.u32 	[%rd32], %r12340;
	st.local.u32 	[%rd5], %r12340;
	st.local.v2.u32 	[%rd31+4], {%r12340, %r12340};
	st.local.u32 	[%rd31], %r12340;
	st.local.u32 	[%rd4], %r12340;
	st.local.v2.u32 	[%rd30+4], {%r12340, %r12340};
	st.local.u32 	[%rd30], %r12340;
	st.local.u32 	[%rd3], %r12340;
	st.local.v2.u32 	[%rd29+4], {%r12340, %r12340};
	st.local.u32 	[%rd29], %r12340;
	st.local.u32 	[%rd2], %r12340;
	st.local.v2.u32 	[%rd28+4], {%r12340, %r12340};
	st.local.u32 	[%rd28], %r12340;
	st.local.u32 	[%rd1], %r12340;
	mov.u32 	%r12341, %r12340;
	bra.uni 	BB4_413;

BB4_3:
	ld.param.u64 	%rd8772, [m09600_init_param_0];
	add.u64 	%rd8771, %SP, 112;
	add.u64 	%rd8770, %SP, 96;
	add.u64 	%rd8769, %SP, 80;
	add.u64 	%rd8768, %SP, 64;
	add.u64 	%rd8767, %SP, 48;
	add.u64 	%rd8766, %SP, 32;
	add.u64 	%rd8765, %SP, 16;
	add.u64 	%rd8764, %SP, 0;
	add.u64 	%rd8763, %SP, 128;
	sub.s32 	%r708, %r2, %r12308;
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd8763;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd8764;
	.param .b64 param2;
	st.param.b64	[param2+0], %rd8765;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd8766;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd8767;
	.param .b64 param5;
	st.param.b64	[param5+0], %rd8768;
	.param .b64 param6;
	st.param.b64	[param6+0], %rd8769;
	.param .b64 param7;
	st.param.b64	[param7+0], %rd8770;
	.param .b64 param8;
	st.param.b64	[param8+0], %rd8771;
	.param .b32 param9;
	st.param.b32	[param9+0], %r708;
	call.uni 
	sha512_update_128, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7, 
	param8, 
	param9
	);
	
	//{
	}// Callseq End 1
	mul.wide.s32 	%rd367, %r1, 260;
	add.s64 	%rd368, %rd8772, %rd367;
	ld.global.u32 	%r709, [%rd368+256];
	// Callseq Start 2
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd8763;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd368;
	.param .b32 param2;
	st.param.b32	[param2+0], %r709;
	call.uni 
	sha512_update_global_utf16le_swap, 
	(
	param0, 
	param1, 
	param2
	);
	
	//{
	}// Callseq End 2
	ld.local.u32 	%r8, [%rd10+184];
	and.b32  	%r9, %r8, 127;
	xor.b32  	%r707, %r9, 3;
	setp.gt.s32	%p3, %r707, 63;
	@%p3 bra 	BB4_131;

	setp.gt.s32	%p99, %r707, 31;
	@%p99 bra 	BB4_68;

	setp.gt.s32	%p147, %r707, 15;
	@%p147 bra 	BB4_37;

	setp.gt.s32	%p171, %r707, 7;
	@%p171 bra 	BB4_22;

	setp.gt.s32	%p183, %r707, 3;
	@%p183 bra 	BB4_15;

	setp.gt.s32	%p189, %r707, 1;
	@%p189 bra 	BB4_12;

	setp.eq.s32	%p192, %r707, 0;
	@%p192 bra 	BB4_321;
	bra.uni 	BB4_10;

BB4_321:
	ld.local.u32 	%r964, [%rd10+56];
	or.b32  	%r965, %r964, 128;
	st.local.u32 	[%rd10+56], %r965;
	bra.uni 	BB4_322;

BB4_131:
	setp.gt.s32	%p4, %r707, 95;
	@%p4 bra 	BB4_195;

	setp.gt.s32	%p52, %r707, 79;
	@%p52 bra 	BB4_164;

	setp.gt.s32	%p76, %r707, 71;
	@%p76 bra 	BB4_149;

	setp.gt.s32	%p88, %r707, 67;
	@%p88 bra 	BB4_142;

	setp.gt.s32	%p94, %r707, 65;
	@%p94 bra 	BB4_139;

	setp.eq.s32	%p97, %r707, 64;
	@%p97 bra 	BB4_289;
	bra.uni 	BB4_137;

BB4_289:
	ld.local.u32 	%r836, [%rd10+120];
	or.b32  	%r837, %r836, 128;
	st.local.u32 	[%rd10+120], %r837;
	bra.uni 	BB4_322;

BB4_68:
	setp.gt.s32	%p100, %r707, 47;
	@%p100 bra 	BB4_100;

	setp.gt.s32	%p124, %r707, 39;
	@%p124 bra 	BB4_85;

	setp.gt.s32	%p136, %r707, 35;
	@%p136 bra 	BB4_78;

	setp.gt.s32	%p142, %r707, 33;
	@%p142 bra 	BB4_75;

	setp.eq.s32	%p145, %r707, 32;
	@%p145 bra 	BB4_305;
	bra.uni 	BB4_73;

BB4_305:
	ld.local.u32 	%r900, [%rd10+88];
	or.b32  	%r901, %r900, 128;
	st.local.u32 	[%rd10+88], %r901;
	bra.uni 	BB4_322;

BB4_195:
	setp.gt.s32	%p5, %r707, 111;
	@%p5 bra 	BB4_227;

	setp.gt.s32	%p29, %r707, 103;
	@%p29 bra 	BB4_212;

	setp.gt.s32	%p41, %r707, 99;
	@%p41 bra 	BB4_205;

	setp.gt.s32	%p47, %r707, 97;
	@%p47 bra 	BB4_202;

	setp.eq.s32	%p50, %r707, 96;
	@%p50 bra 	BB4_273;
	bra.uni 	BB4_200;

BB4_273:
	ld.local.u32 	%r772, [%rd10+152];
	or.b32  	%r773, %r772, 128;
	st.local.u32 	[%rd10+152], %r773;
	bra.uni 	BB4_322;

BB4_37:
	setp.gt.s32	%p148, %r707, 23;
	@%p148 bra 	BB4_53;

	setp.gt.s32	%p160, %r707, 19;
	@%p160 bra 	BB4_46;

	setp.gt.s32	%p166, %r707, 17;
	@%p166 bra 	BB4_43;

	setp.eq.s32	%p169, %r707, 16;
	@%p169 bra 	BB4_313;
	bra.uni 	BB4_41;

BB4_313:
	ld.local.u32 	%r932, [%rd10+72];
	or.b32  	%r933, %r932, 128;
	st.local.u32 	[%rd10+72], %r933;
	bra.uni 	BB4_322;

BB4_164:
	setp.gt.s32	%p53, %r707, 87;
	@%p53 bra 	BB4_180;

	setp.gt.s32	%p65, %r707, 83;
	@%p65 bra 	BB4_173;

	setp.gt.s32	%p71, %r707, 81;
	@%p71 bra 	BB4_170;

	setp.eq.s32	%p74, %r707, 80;
	@%p74 bra 	BB4_281;
	bra.uni 	BB4_168;

BB4_281:
	ld.local.u32 	%r804, [%rd10+136];
	or.b32  	%r805, %r804, 128;
	st.local.u32 	[%rd10+136], %r805;
	bra.uni 	BB4_322;

BB4_100:
	setp.gt.s32	%p101, %r707, 55;
	@%p101 bra 	BB4_116;

	setp.gt.s32	%p113, %r707, 51;
	@%p113 bra 	BB4_109;

	setp.gt.s32	%p119, %r707, 49;
	@%p119 bra 	BB4_106;

	setp.eq.s32	%p122, %r707, 48;
	@%p122 bra 	BB4_297;
	bra.uni 	BB4_104;

BB4_297:
	ld.local.u32 	%r868, [%rd10+104];
	or.b32  	%r869, %r868, 128;
	st.local.u32 	[%rd10+104], %r869;
	bra.uni 	BB4_322;

BB4_227:
	setp.gt.s32	%p6, %r707, 119;
	@%p6 bra 	BB4_243;

	setp.gt.s32	%p18, %r707, 115;
	@%p18 bra 	BB4_236;

	setp.gt.s32	%p24, %r707, 113;
	@%p24 bra 	BB4_233;

	setp.eq.s32	%p27, %r707, 112;
	@%p27 bra 	BB4_265;
	bra.uni 	BB4_231;

BB4_265:
	ld.local.u32 	%r740, [%rd10+168];
	or.b32  	%r741, %r740, 128;
	st.local.u32 	[%rd10+168], %r741;
	bra.uni 	BB4_322;

BB4_22:
	setp.gt.s32	%p172, %r707, 11;
	@%p172 bra 	BB4_30;

	setp.gt.s32	%p178, %r707, 9;
	@%p178 bra 	BB4_27;

	setp.eq.s32	%p181, %r707, 8;
	@%p181 bra 	BB4_317;
	bra.uni 	BB4_25;

BB4_317:
	ld.local.u32 	%r948, [%rd10+64];
	or.b32  	%r949, %r948, 128;
	st.local.u32 	[%rd10+64], %r949;
	bra.uni 	BB4_322;

BB4_149:
	setp.gt.s32	%p77, %r707, 75;
	@%p77 bra 	BB4_157;

	setp.gt.s32	%p83, %r707, 73;
	@%p83 bra 	BB4_154;

	setp.eq.s32	%p86, %r707, 72;
	@%p86 bra 	BB4_285;
	bra.uni 	BB4_152;

BB4_285:
	ld.local.u32 	%r820, [%rd10+128];
	or.b32  	%r821, %r820, 128;
	st.local.u32 	[%rd10+128], %r821;
	bra.uni 	BB4_322;

BB4_85:
	setp.gt.s32	%p125, %r707, 43;
	@%p125 bra 	BB4_93;

	setp.gt.s32	%p131, %r707, 41;
	@%p131 bra 	BB4_90;

	setp.eq.s32	%p134, %r707, 40;
	@%p134 bra 	BB4_301;
	bra.uni 	BB4_88;

BB4_301:
	ld.local.u32 	%r884, [%rd10+96];
	or.b32  	%r885, %r884, 128;
	st.local.u32 	[%rd10+96], %r885;
	bra.uni 	BB4_322;

BB4_212:
	setp.gt.s32	%p30, %r707, 107;
	@%p30 bra 	BB4_220;

	setp.gt.s32	%p36, %r707, 105;
	@%p36 bra 	BB4_217;

	setp.eq.s32	%p39, %r707, 104;
	@%p39 bra 	BB4_269;
	bra.uni 	BB4_215;

BB4_269:
	ld.local.u32 	%r756, [%rd10+160];
	or.b32  	%r757, %r756, 128;
	st.local.u32 	[%rd10+160], %r757;
	bra.uni 	BB4_322;

BB4_53:
	setp.gt.s32	%p149, %r707, 27;
	@%p149 bra 	BB4_61;

	setp.gt.s32	%p155, %r707, 25;
	@%p155 bra 	BB4_58;

	setp.eq.s32	%p158, %r707, 24;
	@%p158 bra 	BB4_309;
	bra.uni 	BB4_56;

BB4_309:
	ld.local.u32 	%r916, [%rd10+80];
	or.b32  	%r917, %r916, 128;
	st.local.u32 	[%rd10+80], %r917;
	bra.uni 	BB4_322;

BB4_180:
	setp.gt.s32	%p54, %r707, 91;
	@%p54 bra 	BB4_188;

	setp.gt.s32	%p60, %r707, 89;
	@%p60 bra 	BB4_185;

	setp.eq.s32	%p63, %r707, 88;
	@%p63 bra 	BB4_277;
	bra.uni 	BB4_183;

BB4_277:
	ld.local.u32 	%r788, [%rd10+144];
	or.b32  	%r789, %r788, 128;
	st.local.u32 	[%rd10+144], %r789;
	bra.uni 	BB4_322;

BB4_116:
	setp.gt.s32	%p102, %r707, 59;
	@%p102 bra 	BB4_124;

	setp.gt.s32	%p108, %r707, 57;
	@%p108 bra 	BB4_121;

	setp.eq.s32	%p111, %r707, 56;
	@%p111 bra 	BB4_293;
	bra.uni 	BB4_119;

BB4_293:
	ld.local.u32 	%r852, [%rd10+112];
	or.b32  	%r853, %r852, 128;
	st.local.u32 	[%rd10+112], %r853;
	bra.uni 	BB4_322;

BB4_243:
	setp.gt.s32	%p7, %r707, 123;
	@%p7 bra 	BB4_251;

	setp.gt.s32	%p13, %r707, 121;
	@%p13 bra 	BB4_248;

	setp.eq.s32	%p16, %r707, 120;
	@%p16 bra 	BB4_261;
	bra.uni 	BB4_246;

BB4_261:
	ld.local.u32 	%r724, [%rd10+176];
	or.b32  	%r725, %r724, 128;
	st.local.u32 	[%rd10+176], %r725;
	bra.uni 	BB4_322;

BB4_15:
	setp.gt.s32	%p184, %r707, 5;
	@%p184 bra 	BB4_19;

	setp.eq.s32	%p187, %r707, 4;
	@%p187 bra 	BB4_319;
	bra.uni 	BB4_17;

BB4_319:
	ld.local.u32 	%r956, [%rd11+4];
	or.b32  	%r957, %r956, 128;
	st.local.u32 	[%rd11+4], %r957;
	bra.uni 	BB4_322;

BB4_142:
	setp.gt.s32	%p89, %r707, 69;
	@%p89 bra 	BB4_146;

	setp.eq.s32	%p92, %r707, 68;
	@%p92 bra 	BB4_287;
	bra.uni 	BB4_144;

BB4_287:
	ld.local.u32 	%r828, [%rd19+4];
	or.b32  	%r829, %r828, 128;
	st.local.u32 	[%rd19+4], %r829;
	bra.uni 	BB4_322;

BB4_78:
	setp.gt.s32	%p137, %r707, 37;
	@%p137 bra 	BB4_82;

	setp.eq.s32	%p140, %r707, 36;
	@%p140 bra 	BB4_303;
	bra.uni 	BB4_80;

BB4_303:
	ld.local.u32 	%r892, [%rd15+4];
	or.b32  	%r893, %r892, 128;
	st.local.u32 	[%rd15+4], %r893;
	bra.uni 	BB4_322;

BB4_205:
	setp.gt.s32	%p42, %r707, 101;
	@%p42 bra 	BB4_209;

	setp.eq.s32	%p45, %r707, 100;
	@%p45 bra 	BB4_271;
	bra.uni 	BB4_207;

BB4_271:
	ld.local.u32 	%r764, [%rd23+4];
	or.b32  	%r765, %r764, 128;
	st.local.u32 	[%rd23+4], %r765;
	bra.uni 	BB4_322;

BB4_46:
	setp.gt.s32	%p161, %r707, 21;
	@%p161 bra 	BB4_50;

	setp.eq.s32	%p164, %r707, 20;
	@%p164 bra 	BB4_311;
	bra.uni 	BB4_48;

BB4_311:
	ld.local.u32 	%r924, [%rd13+4];
	or.b32  	%r925, %r924, 128;
	st.local.u32 	[%rd13+4], %r925;
	bra.uni 	BB4_322;

BB4_173:
	setp.gt.s32	%p66, %r707, 85;
	@%p66 bra 	BB4_177;

	setp.eq.s32	%p69, %r707, 84;
	@%p69 bra 	BB4_279;
	bra.uni 	BB4_175;

BB4_279:
	ld.local.u32 	%r796, [%rd21+4];
	or.b32  	%r797, %r796, 128;
	st.local.u32 	[%rd21+4], %r797;
	bra.uni 	BB4_322;

BB4_109:
	setp.gt.s32	%p114, %r707, 53;
	@%p114 bra 	BB4_113;

	setp.eq.s32	%p117, %r707, 52;
	@%p117 bra 	BB4_295;
	bra.uni 	BB4_111;

BB4_295:
	ld.local.u32 	%r860, [%rd17+4];
	or.b32  	%r861, %r860, 128;
	st.local.u32 	[%rd17+4], %r861;
	bra.uni 	BB4_322;

BB4_236:
	setp.gt.s32	%p19, %r707, 117;
	@%p19 bra 	BB4_240;

	setp.eq.s32	%p22, %r707, 116;
	@%p22 bra 	BB4_263;
	bra.uni 	BB4_238;

BB4_263:
	ld.local.u32 	%r732, [%rd25+4];
	or.b32  	%r733, %r732, 128;
	st.local.u32 	[%rd25+4], %r733;
	bra.uni 	BB4_322;

BB4_30:
	setp.gt.s32	%p173, %r707, 13;
	@%p173 bra 	BB4_34;

	setp.eq.s32	%p176, %r707, 12;
	@%p176 bra 	BB4_315;
	bra.uni 	BB4_32;

BB4_315:
	ld.local.u32 	%r940, [%rd12+4];
	or.b32  	%r941, %r940, 128;
	st.local.u32 	[%rd12+4], %r941;
	bra.uni 	BB4_322;

BB4_157:
	setp.gt.s32	%p78, %r707, 77;
	@%p78 bra 	BB4_161;

	setp.eq.s32	%p81, %r707, 76;
	@%p81 bra 	BB4_283;
	bra.uni 	BB4_159;

BB4_283:
	ld.local.u32 	%r812, [%rd20+4];
	or.b32  	%r813, %r812, 128;
	st.local.u32 	[%rd20+4], %r813;
	bra.uni 	BB4_322;

BB4_93:
	setp.gt.s32	%p126, %r707, 45;
	@%p126 bra 	BB4_97;

	setp.eq.s32	%p129, %r707, 44;
	@%p129 bra 	BB4_299;
	bra.uni 	BB4_95;

BB4_299:
	ld.local.u32 	%r876, [%rd16+4];
	or.b32  	%r877, %r876, 128;
	st.local.u32 	[%rd16+4], %r877;
	bra.uni 	BB4_322;

BB4_220:
	setp.gt.s32	%p31, %r707, 109;
	@%p31 bra 	BB4_224;

	setp.eq.s32	%p34, %r707, 108;
	@%p34 bra 	BB4_267;
	bra.uni 	BB4_222;

BB4_267:
	ld.local.u32 	%r748, [%rd24+4];
	or.b32  	%r749, %r748, 128;
	st.local.u32 	[%rd24+4], %r749;
	bra.uni 	BB4_322;

BB4_61:
	setp.gt.s32	%p150, %r707, 29;
	@%p150 bra 	BB4_65;

	setp.eq.s32	%p153, %r707, 28;
	@%p153 bra 	BB4_307;
	bra.uni 	BB4_63;

BB4_307:
	ld.local.u32 	%r908, [%rd14+4];
	or.b32  	%r909, %r908, 128;
	st.local.u32 	[%rd14+4], %r909;
	bra.uni 	BB4_322;

BB4_188:
	setp.gt.s32	%p55, %r707, 93;
	@%p55 bra 	BB4_192;

	setp.eq.s32	%p58, %r707, 92;
	@%p58 bra 	BB4_275;
	bra.uni 	BB4_190;

BB4_275:
	ld.local.u32 	%r780, [%rd22+4];
	or.b32  	%r781, %r780, 128;
	st.local.u32 	[%rd22+4], %r781;
	bra.uni 	BB4_322;

BB4_124:
	setp.gt.s32	%p103, %r707, 61;
	@%p103 bra 	BB4_128;

	setp.eq.s32	%p106, %r707, 60;
	@%p106 bra 	BB4_291;
	bra.uni 	BB4_126;

BB4_291:
	ld.local.u32 	%r844, [%rd18+4];
	or.b32  	%r845, %r844, 128;
	st.local.u32 	[%rd18+4], %r845;
	bra.uni 	BB4_322;

BB4_251:
	setp.gt.s32	%p8, %r707, 125;
	@%p8 bra 	BB4_255;

	setp.eq.s32	%p11, %r707, 124;
	@%p11 bra 	BB4_259;
	bra.uni 	BB4_253;

BB4_259:
	ld.local.u32 	%r716, [%rd26+4];
	or.b32  	%r717, %r716, 128;
	st.local.u32 	[%rd26+4], %r717;
	bra.uni 	BB4_322;

BB4_12:
	setp.eq.s32	%p190, %r707, 2;
	@%p190 bra 	BB4_320;
	bra.uni 	BB4_13;

BB4_320:
	ld.local.u32 	%r960, [%rd10+56];
	or.b32  	%r961, %r960, 8388608;
	st.local.u32 	[%rd10+56], %r961;
	bra.uni 	BB4_322;

BB4_139:
	setp.eq.s32	%p95, %r707, 66;
	@%p95 bra 	BB4_288;
	bra.uni 	BB4_140;

BB4_288:
	ld.local.u32 	%r832, [%rd10+120];
	or.b32  	%r833, %r832, 8388608;
	st.local.u32 	[%rd10+120], %r833;
	bra.uni 	BB4_322;

BB4_75:
	setp.eq.s32	%p143, %r707, 34;
	@%p143 bra 	BB4_304;
	bra.uni 	BB4_76;

BB4_304:
	ld.local.u32 	%r896, [%rd10+88];
	or.b32  	%r897, %r896, 8388608;
	st.local.u32 	[%rd10+88], %r897;
	bra.uni 	BB4_322;

BB4_202:
	setp.eq.s32	%p48, %r707, 98;
	@%p48 bra 	BB4_272;
	bra.uni 	BB4_203;

BB4_272:
	ld.local.u32 	%r768, [%rd10+152];
	or.b32  	%r769, %r768, 8388608;
	st.local.u32 	[%rd10+152], %r769;
	bra.uni 	BB4_322;

BB4_43:
	setp.eq.s32	%p167, %r707, 18;
	@%p167 bra 	BB4_312;
	bra.uni 	BB4_44;

BB4_312:
	ld.local.u32 	%r928, [%rd10+72];
	or.b32  	%r929, %r928, 8388608;
	st.local.u32 	[%rd10+72], %r929;
	bra.uni 	BB4_322;

BB4_170:
	setp.eq.s32	%p72, %r707, 82;
	@%p72 bra 	BB4_280;
	bra.uni 	BB4_171;

BB4_280:
	ld.local.u32 	%r800, [%rd10+136];
	or.b32  	%r801, %r800, 8388608;
	st.local.u32 	[%rd10+136], %r801;
	bra.uni 	BB4_322;

BB4_106:
	setp.eq.s32	%p120, %r707, 50;
	@%p120 bra 	BB4_296;
	bra.uni 	BB4_107;

BB4_296:
	ld.local.u32 	%r864, [%rd10+104];
	or.b32  	%r865, %r864, 8388608;
	st.local.u32 	[%rd10+104], %r865;
	bra.uni 	BB4_322;

BB4_233:
	setp.eq.s32	%p25, %r707, 114;
	@%p25 bra 	BB4_264;
	bra.uni 	BB4_234;

BB4_264:
	ld.local.u32 	%r736, [%rd10+168];
	or.b32  	%r737, %r736, 8388608;
	st.local.u32 	[%rd10+168], %r737;
	bra.uni 	BB4_322;

BB4_27:
	setp.eq.s32	%p179, %r707, 10;
	@%p179 bra 	BB4_316;
	bra.uni 	BB4_28;

BB4_316:
	ld.local.u32 	%r944, [%rd10+64];
	or.b32  	%r945, %r944, 8388608;
	st.local.u32 	[%rd10+64], %r945;
	bra.uni 	BB4_322;

BB4_154:
	setp.eq.s32	%p84, %r707, 74;
	@%p84 bra 	BB4_284;
	bra.uni 	BB4_155;

BB4_284:
	ld.local.u32 	%r816, [%rd10+128];
	or.b32  	%r817, %r816, 8388608;
	st.local.u32 	[%rd10+128], %r817;
	bra.uni 	BB4_322;

BB4_90:
	setp.eq.s32	%p132, %r707, 42;
	@%p132 bra 	BB4_300;
	bra.uni 	BB4_91;

BB4_300:
	ld.local.u32 	%r880, [%rd10+96];
	or.b32  	%r881, %r880, 8388608;
	st.local.u32 	[%rd10+96], %r881;
	bra.uni 	BB4_322;

BB4_217:
	setp.eq.s32	%p37, %r707, 106;
	@%p37 bra 	BB4_268;
	bra.uni 	BB4_218;

BB4_268:
	ld.local.u32 	%r752, [%rd10+160];
	or.b32  	%r753, %r752, 8388608;
	st.local.u32 	[%rd10+160], %r753;
	bra.uni 	BB4_322;

BB4_58:
	setp.eq.s32	%p156, %r707, 26;
	@%p156 bra 	BB4_308;
	bra.uni 	BB4_59;

BB4_308:
	ld.local.u32 	%r912, [%rd10+80];
	or.b32  	%r913, %r912, 8388608;
	st.local.u32 	[%rd10+80], %r913;
	bra.uni 	BB4_322;

BB4_185:
	setp.eq.s32	%p61, %r707, 90;
	@%p61 bra 	BB4_276;
	bra.uni 	BB4_186;

BB4_276:
	ld.local.u32 	%r784, [%rd10+144];
	or.b32  	%r785, %r784, 8388608;
	st.local.u32 	[%rd10+144], %r785;
	bra.uni 	BB4_322;

BB4_121:
	setp.eq.s32	%p109, %r707, 58;
	@%p109 bra 	BB4_292;
	bra.uni 	BB4_122;

BB4_292:
	ld.local.u32 	%r848, [%rd10+112];
	or.b32  	%r849, %r848, 8388608;
	st.local.u32 	[%rd10+112], %r849;
	bra.uni 	BB4_322;

BB4_248:
	setp.eq.s32	%p14, %r707, 122;
	@%p14 bra 	BB4_260;
	bra.uni 	BB4_249;

BB4_260:
	ld.local.u32 	%r720, [%rd10+176];
	or.b32  	%r721, %r720, 8388608;
	st.local.u32 	[%rd10+176], %r721;
	bra.uni 	BB4_322;

BB4_19:
	setp.eq.s32	%p185, %r707, 6;
	@%p185 bra 	BB4_318;
	bra.uni 	BB4_20;

BB4_318:
	ld.local.u32 	%r952, [%rd11+4];
	or.b32  	%r953, %r952, 8388608;
	st.local.u32 	[%rd11+4], %r953;
	bra.uni 	BB4_322;

BB4_146:
	setp.eq.s32	%p90, %r707, 70;
	@%p90 bra 	BB4_286;
	bra.uni 	BB4_147;

BB4_286:
	ld.local.u32 	%r824, [%rd19+4];
	or.b32  	%r825, %r824, 8388608;
	st.local.u32 	[%rd19+4], %r825;
	bra.uni 	BB4_322;

BB4_82:
	setp.eq.s32	%p138, %r707, 38;
	@%p138 bra 	BB4_302;
	bra.uni 	BB4_83;

BB4_302:
	ld.local.u32 	%r888, [%rd15+4];
	or.b32  	%r889, %r888, 8388608;
	st.local.u32 	[%rd15+4], %r889;
	bra.uni 	BB4_322;

BB4_209:
	setp.eq.s32	%p43, %r707, 102;
	@%p43 bra 	BB4_270;
	bra.uni 	BB4_210;

BB4_270:
	ld.local.u32 	%r760, [%rd23+4];
	or.b32  	%r761, %r760, 8388608;
	st.local.u32 	[%rd23+4], %r761;
	bra.uni 	BB4_322;

BB4_50:
	setp.eq.s32	%p162, %r707, 22;
	@%p162 bra 	BB4_310;
	bra.uni 	BB4_51;

BB4_310:
	ld.local.u32 	%r920, [%rd13+4];
	or.b32  	%r921, %r920, 8388608;
	st.local.u32 	[%rd13+4], %r921;
	bra.uni 	BB4_322;

BB4_177:
	setp.eq.s32	%p67, %r707, 86;
	@%p67 bra 	BB4_278;
	bra.uni 	BB4_178;

BB4_278:
	ld.local.u32 	%r792, [%rd21+4];
	or.b32  	%r793, %r792, 8388608;
	st.local.u32 	[%rd21+4], %r793;
	bra.uni 	BB4_322;

BB4_113:
	setp.eq.s32	%p115, %r707, 54;
	@%p115 bra 	BB4_294;
	bra.uni 	BB4_114;

BB4_294:
	ld.local.u32 	%r856, [%rd17+4];
	or.b32  	%r857, %r856, 8388608;
	st.local.u32 	[%rd17+4], %r857;
	bra.uni 	BB4_322;

BB4_240:
	setp.eq.s32	%p20, %r707, 118;
	@%p20 bra 	BB4_262;
	bra.uni 	BB4_241;

BB4_262:
	ld.local.u32 	%r728, [%rd25+4];
	or.b32  	%r729, %r728, 8388608;
	st.local.u32 	[%rd25+4], %r729;
	bra.uni 	BB4_322;

BB4_34:
	setp.eq.s32	%p174, %r707, 14;
	@%p174 bra 	BB4_314;
	bra.uni 	BB4_35;

BB4_314:
	ld.local.u32 	%r936, [%rd12+4];
	or.b32  	%r937, %r936, 8388608;
	st.local.u32 	[%rd12+4], %r937;
	bra.uni 	BB4_322;

BB4_161:
	setp.eq.s32	%p79, %r707, 78;
	@%p79 bra 	BB4_282;
	bra.uni 	BB4_162;

BB4_282:
	ld.local.u32 	%r808, [%rd20+4];
	or.b32  	%r809, %r808, 8388608;
	st.local.u32 	[%rd20+4], %r809;
	bra.uni 	BB4_322;

BB4_97:
	setp.eq.s32	%p127, %r707, 46;
	@%p127 bra 	BB4_298;
	bra.uni 	BB4_98;

BB4_298:
	ld.local.u32 	%r872, [%rd16+4];
	or.b32  	%r873, %r872, 8388608;
	st.local.u32 	[%rd16+4], %r873;
	bra.uni 	BB4_322;

BB4_224:
	setp.eq.s32	%p32, %r707, 110;
	@%p32 bra 	BB4_266;
	bra.uni 	BB4_225;

BB4_266:
	ld.local.u32 	%r744, [%rd24+4];
	or.b32  	%r745, %r744, 8388608;
	st.local.u32 	[%rd24+4], %r745;
	bra.uni 	BB4_322;

BB4_65:
	setp.eq.s32	%p151, %r707, 30;
	@%p151 bra 	BB4_306;
	bra.uni 	BB4_66;

BB4_306:
	ld.local.u32 	%r904, [%rd14+4];
	or.b32  	%r905, %r904, 8388608;
	st.local.u32 	[%rd14+4], %r905;
	bra.uni 	BB4_322;

BB4_192:
	setp.eq.s32	%p56, %r707, 94;
	@%p56 bra 	BB4_274;
	bra.uni 	BB4_193;

BB4_274:
	ld.local.u32 	%r776, [%rd22+4];
	or.b32  	%r777, %r776, 8388608;
	st.local.u32 	[%rd22+4], %r777;
	bra.uni 	BB4_322;

BB4_128:
	setp.eq.s32	%p104, %r707, 62;
	@%p104 bra 	BB4_290;
	bra.uni 	BB4_129;

BB4_290:
	ld.local.u32 	%r840, [%rd18+4];
	or.b32  	%r841, %r840, 8388608;
	st.local.u32 	[%rd18+4], %r841;
	bra.uni 	BB4_322;

BB4_255:
	setp.eq.s32	%p9, %r707, 126;
	@%p9 bra 	BB4_258;
	bra.uni 	BB4_256;

BB4_258:
	ld.local.u32 	%r712, [%rd26+4];
	or.b32  	%r713, %r712, 8388608;
	st.local.u32 	[%rd26+4], %r713;
	bra.uni 	BB4_322;

BB4_10:
	setp.eq.s32	%p193, %r707, 1;
	@%p193 bra 	BB4_11;
	bra.uni 	BB4_322;

BB4_11:
	ld.local.u32 	%r962, [%rd10+56];
	or.b32  	%r963, %r962, 32768;
	st.local.u32 	[%rd10+56], %r963;
	bra.uni 	BB4_322;

BB4_137:
	setp.eq.s32	%p98, %r707, 65;
	@%p98 bra 	BB4_138;
	bra.uni 	BB4_322;

BB4_138:
	ld.local.u32 	%r834, [%rd10+120];
	or.b32  	%r835, %r834, 32768;
	st.local.u32 	[%rd10+120], %r835;
	bra.uni 	BB4_322;

BB4_73:
	setp.eq.s32	%p146, %r707, 33;
	@%p146 bra 	BB4_74;
	bra.uni 	BB4_322;

BB4_74:
	ld.local.u32 	%r898, [%rd10+88];
	or.b32  	%r899, %r898, 32768;
	st.local.u32 	[%rd10+88], %r899;
	bra.uni 	BB4_322;

BB4_200:
	setp.eq.s32	%p51, %r707, 97;
	@%p51 bra 	BB4_201;
	bra.uni 	BB4_322;

BB4_201:
	ld.local.u32 	%r770, [%rd10+152];
	or.b32  	%r771, %r770, 32768;
	st.local.u32 	[%rd10+152], %r771;
	bra.uni 	BB4_322;

BB4_41:
	setp.eq.s32	%p170, %r707, 17;
	@%p170 bra 	BB4_42;
	bra.uni 	BB4_322;

BB4_42:
	ld.local.u32 	%r930, [%rd10+72];
	or.b32  	%r931, %r930, 32768;
	st.local.u32 	[%rd10+72], %r931;
	bra.uni 	BB4_322;

BB4_168:
	setp.eq.s32	%p75, %r707, 81;
	@%p75 bra 	BB4_169;
	bra.uni 	BB4_322;

BB4_169:
	ld.local.u32 	%r802, [%rd10+136];
	or.b32  	%r803, %r802, 32768;
	st.local.u32 	[%rd10+136], %r803;
	bra.uni 	BB4_322;

BB4_104:
	setp.eq.s32	%p123, %r707, 49;
	@%p123 bra 	BB4_105;
	bra.uni 	BB4_322;

BB4_105:
	ld.local.u32 	%r866, [%rd10+104];
	or.b32  	%r867, %r866, 32768;
	st.local.u32 	[%rd10+104], %r867;
	bra.uni 	BB4_322;

BB4_231:
	setp.eq.s32	%p28, %r707, 113;
	@%p28 bra 	BB4_232;
	bra.uni 	BB4_322;

BB4_232:
	ld.local.u32 	%r738, [%rd10+168];
	or.b32  	%r739, %r738, 32768;
	st.local.u32 	[%rd10+168], %r739;
	bra.uni 	BB4_322;

BB4_25:
	setp.eq.s32	%p182, %r707, 9;
	@%p182 bra 	BB4_26;
	bra.uni 	BB4_322;

BB4_26:
	ld.local.u32 	%r946, [%rd10+64];
	or.b32  	%r947, %r946, 32768;
	st.local.u32 	[%rd10+64], %r947;
	bra.uni 	BB4_322;

BB4_152:
	setp.eq.s32	%p87, %r707, 73;
	@%p87 bra 	BB4_153;
	bra.uni 	BB4_322;

BB4_153:
	ld.local.u32 	%r818, [%rd10+128];
	or.b32  	%r819, %r818, 32768;
	st.local.u32 	[%rd10+128], %r819;
	bra.uni 	BB4_322;

BB4_88:
	setp.eq.s32	%p135, %r707, 41;
	@%p135 bra 	BB4_89;
	bra.uni 	BB4_322;

BB4_89:
	ld.local.u32 	%r882, [%rd10+96];
	or.b32  	%r883, %r882, 32768;
	st.local.u32 	[%rd10+96], %r883;
	bra.uni 	BB4_322;

BB4_215:
	setp.eq.s32	%p40, %r707, 105;
	@%p40 bra 	BB4_216;
	bra.uni 	BB4_322;

BB4_216:
	ld.local.u32 	%r754, [%rd10+160];
	or.b32  	%r755, %r754, 32768;
	st.local.u32 	[%rd10+160], %r755;
	bra.uni 	BB4_322;

BB4_56:
	setp.eq.s32	%p159, %r707, 25;
	@%p159 bra 	BB4_57;
	bra.uni 	BB4_322;

BB4_57:
	ld.local.u32 	%r914, [%rd10+80];
	or.b32  	%r915, %r914, 32768;
	st.local.u32 	[%rd10+80], %r915;
	bra.uni 	BB4_322;

BB4_183:
	setp.eq.s32	%p64, %r707, 89;
	@%p64 bra 	BB4_184;
	bra.uni 	BB4_322;

BB4_184:
	ld.local.u32 	%r786, [%rd10+144];
	or.b32  	%r787, %r786, 32768;
	st.local.u32 	[%rd10+144], %r787;
	bra.uni 	BB4_322;

BB4_119:
	setp.eq.s32	%p112, %r707, 57;
	@%p112 bra 	BB4_120;
	bra.uni 	BB4_322;

BB4_120:
	ld.local.u32 	%r850, [%rd10+112];
	or.b32  	%r851, %r850, 32768;
	st.local.u32 	[%rd10+112], %r851;
	bra.uni 	BB4_322;

BB4_246:
	setp.eq.s32	%p17, %r707, 121;
	@%p17 bra 	BB4_247;
	bra.uni 	BB4_322;

BB4_247:
	ld.local.u32 	%r722, [%rd10+176];
	or.b32  	%r723, %r722, 32768;
	st.local.u32 	[%rd10+176], %r723;
	bra.uni 	BB4_322;

BB4_17:
	setp.eq.s32	%p188, %r707, 5;
	@%p188 bra 	BB4_18;
	bra.uni 	BB4_322;

BB4_18:
	ld.local.u32 	%r954, [%rd11+4];
	or.b32  	%r955, %r954, 32768;
	st.local.u32 	[%rd11+4], %r955;
	bra.uni 	BB4_322;

BB4_144:
	setp.eq.s32	%p93, %r707, 69;
	@%p93 bra 	BB4_145;
	bra.uni 	BB4_322;

BB4_145:
	ld.local.u32 	%r826, [%rd19+4];
	or.b32  	%r827, %r826, 32768;
	st.local.u32 	[%rd19+4], %r827;
	bra.uni 	BB4_322;

BB4_80:
	setp.eq.s32	%p141, %r707, 37;
	@%p141 bra 	BB4_81;
	bra.uni 	BB4_322;

BB4_81:
	ld.local.u32 	%r890, [%rd15+4];
	or.b32  	%r891, %r890, 32768;
	st.local.u32 	[%rd15+4], %r891;
	bra.uni 	BB4_322;

BB4_207:
	setp.eq.s32	%p46, %r707, 101;
	@%p46 bra 	BB4_208;
	bra.uni 	BB4_322;

BB4_208:
	ld.local.u32 	%r762, [%rd23+4];
	or.b32  	%r763, %r762, 32768;
	st.local.u32 	[%rd23+4], %r763;
	bra.uni 	BB4_322;

BB4_48:
	setp.eq.s32	%p165, %r707, 21;
	@%p165 bra 	BB4_49;
	bra.uni 	BB4_322;

BB4_49:
	ld.local.u32 	%r922, [%rd13+4];
	or.b32  	%r923, %r922, 32768;
	st.local.u32 	[%rd13+4], %r923;
	bra.uni 	BB4_322;

BB4_175:
	setp.eq.s32	%p70, %r707, 85;
	@%p70 bra 	BB4_176;
	bra.uni 	BB4_322;

BB4_176:
	ld.local.u32 	%r794, [%rd21+4];
	or.b32  	%r795, %r794, 32768;
	st.local.u32 	[%rd21+4], %r795;
	bra.uni 	BB4_322;

BB4_111:
	setp.eq.s32	%p118, %r707, 53;
	@%p118 bra 	BB4_112;
	bra.uni 	BB4_322;

BB4_112:
	ld.local.u32 	%r858, [%rd17+4];
	or.b32  	%r859, %r858, 32768;
	st.local.u32 	[%rd17+4], %r859;
	bra.uni 	BB4_322;

BB4_238:
	setp.eq.s32	%p23, %r707, 117;
	@%p23 bra 	BB4_239;
	bra.uni 	BB4_322;

BB4_239:
	ld.local.u32 	%r730, [%rd25+4];
	or.b32  	%r731, %r730, 32768;
	st.local.u32 	[%rd25+4], %r731;
	bra.uni 	BB4_322;

BB4_32:
	setp.eq.s32	%p177, %r707, 13;
	@%p177 bra 	BB4_33;
	bra.uni 	BB4_322;

BB4_33:
	ld.local.u32 	%r938, [%rd12+4];
	or.b32  	%r939, %r938, 32768;
	st.local.u32 	[%rd12+4], %r939;
	bra.uni 	BB4_322;

BB4_159:
	setp.eq.s32	%p82, %r707, 77;
	@%p82 bra 	BB4_160;
	bra.uni 	BB4_322;

BB4_160:
	ld.local.u32 	%r810, [%rd20+4];
	or.b32  	%r811, %r810, 32768;
	st.local.u32 	[%rd20+4], %r811;
	bra.uni 	BB4_322;

BB4_95:
	setp.eq.s32	%p130, %r707, 45;
	@%p130 bra 	BB4_96;
	bra.uni 	BB4_322;

BB4_96:
	ld.local.u32 	%r874, [%rd16+4];
	or.b32  	%r875, %r874, 32768;
	st.local.u32 	[%rd16+4], %r875;
	bra.uni 	BB4_322;

BB4_222:
	setp.eq.s32	%p35, %r707, 109;
	@%p35 bra 	BB4_223;
	bra.uni 	BB4_322;

BB4_223:
	ld.local.u32 	%r746, [%rd24+4];
	or.b32  	%r747, %r746, 32768;
	st.local.u32 	[%rd24+4], %r747;
	bra.uni 	BB4_322;

BB4_63:
	setp.eq.s32	%p154, %r707, 29;
	@%p154 bra 	BB4_64;
	bra.uni 	BB4_322;

BB4_64:
	ld.local.u32 	%r906, [%rd14+4];
	or.b32  	%r907, %r906, 32768;
	st.local.u32 	[%rd14+4], %r907;
	bra.uni 	BB4_322;

BB4_190:
	setp.eq.s32	%p59, %r707, 93;
	@%p59 bra 	BB4_191;
	bra.uni 	BB4_322;

BB4_191:
	ld.local.u32 	%r778, [%rd22+4];
	or.b32  	%r779, %r778, 32768;
	st.local.u32 	[%rd22+4], %r779;
	bra.uni 	BB4_322;

BB4_126:
	setp.eq.s32	%p107, %r707, 61;
	@%p107 bra 	BB4_127;
	bra.uni 	BB4_322;

BB4_127:
	ld.local.u32 	%r842, [%rd18+4];
	or.b32  	%r843, %r842, 32768;
	st.local.u32 	[%rd18+4], %r843;
	bra.uni 	BB4_322;

BB4_253:
	setp.eq.s32	%p12, %r707, 125;
	@%p12 bra 	BB4_254;
	bra.uni 	BB4_322;

BB4_254:
	ld.local.u32 	%r714, [%rd26+4];
	or.b32  	%r715, %r714, 32768;
	st.local.u32 	[%rd26+4], %r715;
	bra.uni 	BB4_322;

BB4_13:
	setp.eq.s32	%p191, %r707, 3;
	@%p191 bra 	BB4_14;
	bra.uni 	BB4_322;

BB4_14:
	ld.local.u32 	%r958, [%rd10+56];
	or.b32  	%r959, %r958, -2147483648;
	st.local.u32 	[%rd10+56], %r959;
	bra.uni 	BB4_322;

BB4_140:
	setp.eq.s32	%p96, %r707, 67;
	@%p96 bra 	BB4_141;
	bra.uni 	BB4_322;

BB4_141:
	ld.local.u32 	%r830, [%rd10+120];
	or.b32  	%r831, %r830, -2147483648;
	st.local.u32 	[%rd10+120], %r831;
	bra.uni 	BB4_322;

BB4_76:
	setp.eq.s32	%p144, %r707, 35;
	@%p144 bra 	BB4_77;
	bra.uni 	BB4_322;

BB4_77:
	ld.local.u32 	%r894, [%rd10+88];
	or.b32  	%r895, %r894, -2147483648;
	st.local.u32 	[%rd10+88], %r895;
	bra.uni 	BB4_322;

BB4_203:
	setp.eq.s32	%p49, %r707, 99;
	@%p49 bra 	BB4_204;
	bra.uni 	BB4_322;

BB4_204:
	ld.local.u32 	%r766, [%rd10+152];
	or.b32  	%r767, %r766, -2147483648;
	st.local.u32 	[%rd10+152], %r767;
	bra.uni 	BB4_322;

BB4_44:
	setp.eq.s32	%p168, %r707, 19;
	@%p168 bra 	BB4_45;
	bra.uni 	BB4_322;

BB4_45:
	ld.local.u32 	%r926, [%rd10+72];
	or.b32  	%r927, %r926, -2147483648;
	st.local.u32 	[%rd10+72], %r927;
	bra.uni 	BB4_322;

BB4_171:
	setp.eq.s32	%p73, %r707, 83;
	@%p73 bra 	BB4_172;
	bra.uni 	BB4_322;

BB4_172:
	ld.local.u32 	%r798, [%rd10+136];
	or.b32  	%r799, %r798, -2147483648;
	st.local.u32 	[%rd10+136], %r799;
	bra.uni 	BB4_322;

BB4_107:
	setp.eq.s32	%p121, %r707, 51;
	@%p121 bra 	BB4_108;
	bra.uni 	BB4_322;

BB4_108:
	ld.local.u32 	%r862, [%rd10+104];
	or.b32  	%r863, %r862, -2147483648;
	st.local.u32 	[%rd10+104], %r863;
	bra.uni 	BB4_322;

BB4_234:
	setp.eq.s32	%p26, %r707, 115;
	@%p26 bra 	BB4_235;
	bra.uni 	BB4_322;

BB4_235:
	ld.local.u32 	%r734, [%rd10+168];
	or.b32  	%r735, %r734, -2147483648;
	st.local.u32 	[%rd10+168], %r735;
	bra.uni 	BB4_322;

BB4_28:
	setp.eq.s32	%p180, %r707, 11;
	@%p180 bra 	BB4_29;
	bra.uni 	BB4_322;

BB4_29:
	ld.local.u32 	%r942, [%rd10+64];
	or.b32  	%r943, %r942, -2147483648;
	st.local.u32 	[%rd10+64], %r943;
	bra.uni 	BB4_322;

BB4_155:
	setp.eq.s32	%p85, %r707, 75;
	@%p85 bra 	BB4_156;
	bra.uni 	BB4_322;

BB4_156:
	ld.local.u32 	%r814, [%rd10+128];
	or.b32  	%r815, %r814, -2147483648;
	st.local.u32 	[%rd10+128], %r815;
	bra.uni 	BB4_322;

BB4_91:
	setp.eq.s32	%p133, %r707, 43;
	@%p133 bra 	BB4_92;
	bra.uni 	BB4_322;

BB4_92:
	ld.local.u32 	%r878, [%rd10+96];
	or.b32  	%r879, %r878, -2147483648;
	st.local.u32 	[%rd10+96], %r879;
	bra.uni 	BB4_322;

BB4_218:
	setp.eq.s32	%p38, %r707, 107;
	@%p38 bra 	BB4_219;
	bra.uni 	BB4_322;

BB4_219:
	ld.local.u32 	%r750, [%rd10+160];
	or.b32  	%r751, %r750, -2147483648;
	st.local.u32 	[%rd10+160], %r751;
	bra.uni 	BB4_322;

BB4_59:
	setp.eq.s32	%p157, %r707, 27;
	@%p157 bra 	BB4_60;
	bra.uni 	BB4_322;

BB4_60:
	ld.local.u32 	%r910, [%rd10+80];
	or.b32  	%r911, %r910, -2147483648;
	st.local.u32 	[%rd10+80], %r911;
	bra.uni 	BB4_322;

BB4_186:
	setp.eq.s32	%p62, %r707, 91;
	@%p62 bra 	BB4_187;
	bra.uni 	BB4_322;

BB4_187:
	ld.local.u32 	%r782, [%rd10+144];
	or.b32  	%r783, %r782, -2147483648;
	st.local.u32 	[%rd10+144], %r783;
	bra.uni 	BB4_322;

BB4_122:
	setp.eq.s32	%p110, %r707, 59;
	@%p110 bra 	BB4_123;
	bra.uni 	BB4_322;

BB4_123:
	ld.local.u32 	%r846, [%rd10+112];
	or.b32  	%r847, %r846, -2147483648;
	st.local.u32 	[%rd10+112], %r847;
	bra.uni 	BB4_322;

BB4_249:
	setp.eq.s32	%p15, %r707, 123;
	@%p15 bra 	BB4_250;
	bra.uni 	BB4_322;

BB4_250:
	ld.local.u32 	%r718, [%rd10+176];
	or.b32  	%r719, %r718, -2147483648;
	st.local.u32 	[%rd10+176], %r719;
	bra.uni 	BB4_322;

BB4_20:
	setp.eq.s32	%p186, %r707, 7;
	@%p186 bra 	BB4_21;
	bra.uni 	BB4_322;

BB4_21:
	ld.local.u32 	%r950, [%rd11+4];
	or.b32  	%r951, %r950, -2147483648;
	st.local.u32 	[%rd11+4], %r951;
	bra.uni 	BB4_322;

BB4_147:
	setp.eq.s32	%p91, %r707, 71;
	@%p91 bra 	BB4_148;
	bra.uni 	BB4_322;

BB4_148:
	ld.local.u32 	%r822, [%rd19+4];
	or.b32  	%r823, %r822, -2147483648;
	st.local.u32 	[%rd19+4], %r823;
	bra.uni 	BB4_322;

BB4_83:
	setp.eq.s32	%p139, %r707, 39;
	@%p139 bra 	BB4_84;
	bra.uni 	BB4_322;

BB4_84:
	ld.local.u32 	%r886, [%rd15+4];
	or.b32  	%r887, %r886, -2147483648;
	st.local.u32 	[%rd15+4], %r887;
	bra.uni 	BB4_322;

BB4_210:
	setp.eq.s32	%p44, %r707, 103;
	@%p44 bra 	BB4_211;
	bra.uni 	BB4_322;

BB4_211:
	ld.local.u32 	%r758, [%rd23+4];
	or.b32  	%r759, %r758, -2147483648;
	st.local.u32 	[%rd23+4], %r759;
	bra.uni 	BB4_322;

BB4_51:
	setp.eq.s32	%p163, %r707, 23;
	@%p163 bra 	BB4_52;
	bra.uni 	BB4_322;

BB4_52:
	ld.local.u32 	%r918, [%rd13+4];
	or.b32  	%r919, %r918, -2147483648;
	st.local.u32 	[%rd13+4], %r919;
	bra.uni 	BB4_322;

BB4_178:
	setp.eq.s32	%p68, %r707, 87;
	@%p68 bra 	BB4_179;
	bra.uni 	BB4_322;

BB4_179:
	ld.local.u32 	%r790, [%rd21+4];
	or.b32  	%r791, %r790, -2147483648;
	st.local.u32 	[%rd21+4], %r791;
	bra.uni 	BB4_322;

BB4_114:
	setp.eq.s32	%p116, %r707, 55;
	@%p116 bra 	BB4_115;
	bra.uni 	BB4_322;

BB4_115:
	ld.local.u32 	%r854, [%rd17+4];
	or.b32  	%r855, %r854, -2147483648;
	st.local.u32 	[%rd17+4], %r855;
	bra.uni 	BB4_322;

BB4_241:
	setp.eq.s32	%p21, %r707, 119;
	@%p21 bra 	BB4_242;
	bra.uni 	BB4_322;

BB4_242:
	ld.local.u32 	%r726, [%rd25+4];
	or.b32  	%r727, %r726, -2147483648;
	st.local.u32 	[%rd25+4], %r727;
	bra.uni 	BB4_322;

BB4_35:
	setp.eq.s32	%p175, %r707, 15;
	@%p175 bra 	BB4_36;
	bra.uni 	BB4_322;

BB4_36:
	ld.local.u32 	%r934, [%rd12+4];
	or.b32  	%r935, %r934, -2147483648;
	st.local.u32 	[%rd12+4], %r935;
	bra.uni 	BB4_322;

BB4_162:
	setp.eq.s32	%p80, %r707, 79;
	@%p80 bra 	BB4_163;
	bra.uni 	BB4_322;

BB4_163:
	ld.local.u32 	%r806, [%rd20+4];
	or.b32  	%r807, %r806, -2147483648;
	st.local.u32 	[%rd20+4], %r807;
	bra.uni 	BB4_322;

BB4_98:
	setp.eq.s32	%p128, %r707, 47;
	@%p128 bra 	BB4_99;
	bra.uni 	BB4_322;

BB4_99:
	ld.local.u32 	%r870, [%rd16+4];
	or.b32  	%r871, %r870, -2147483648;
	st.local.u32 	[%rd16+4], %r871;
	bra.uni 	BB4_322;

BB4_225:
	setp.eq.s32	%p33, %r707, 111;
	@%p33 bra 	BB4_226;
	bra.uni 	BB4_322;

BB4_226:
	ld.local.u32 	%r742, [%rd24+4];
	or.b32  	%r743, %r742, -2147483648;
	st.local.u32 	[%rd24+4], %r743;
	bra.uni 	BB4_322;

BB4_66:
	setp.eq.s32	%p152, %r707, 31;
	@%p152 bra 	BB4_67;
	bra.uni 	BB4_322;

BB4_67:
	ld.local.u32 	%r902, [%rd14+4];
	or.b32  	%r903, %r902, -2147483648;
	st.local.u32 	[%rd14+4], %r903;
	bra.uni 	BB4_322;

BB4_193:
	setp.eq.s32	%p57, %r707, 95;
	@%p57 bra 	BB4_194;
	bra.uni 	BB4_322;

BB4_194:
	ld.local.u32 	%r774, [%rd22+4];
	or.b32  	%r775, %r774, -2147483648;
	st.local.u32 	[%rd22+4], %r775;
	bra.uni 	BB4_322;

BB4_129:
	setp.eq.s32	%p105, %r707, 63;
	@%p105 bra 	BB4_130;
	bra.uni 	BB4_322;

BB4_130:
	ld.local.u32 	%r838, [%rd18+4];
	or.b32  	%r839, %r838, -2147483648;
	st.local.u32 	[%rd18+4], %r839;
	bra.uni 	BB4_322;

BB4_256:
	setp.ne.s32	%p10, %r707, 127;
	@%p10 bra 	BB4_322;

	ld.local.u32 	%r710, [%rd26+4];
	or.b32  	%r711, %r710, -2147483648;
	st.local.u32 	[%rd26+4], %r711;

BB4_322:
	ld.local.u64 	%rd8845, [%rd9];
	ld.local.u64 	%rd8844, [%rd10];
	ld.local.u64 	%rd8843, [%rd10+8];
	ld.local.u64 	%rd8842, [%rd10+16];
	ld.local.u64 	%rd8841, [%rd10+24];
	ld.local.u64 	%rd8840, [%rd10+32];
	ld.local.u64 	%rd8839, [%rd10+40];
	ld.local.u64 	%rd8838, [%rd10+48];
	ld.local.u32 	%r12339, [%rd10+56];
	ld.local.u32 	%r12338, [%rd11+4];
	setp.gt.u32	%p194, %r9, 111;
	@%p194 bra 	BB4_324;
	bra.uni 	BB4_323;

BB4_324:
	mov.b64	%rd369, {%r12338, %r12339};
	ld.local.u32 	%r996, [%rd10+64];
	ld.local.u32 	%r997, [%rd12+4];
	mov.b64	%rd370, {%r997, %r996};
	ld.local.u32 	%r998, [%rd10+72];
	ld.local.u32 	%r999, [%rd13+4];
	mov.b64	%rd371, {%r999, %r998};
	ld.local.u32 	%r1000, [%rd10+80];
	ld.local.u32 	%r1001, [%rd14+4];
	mov.b64	%rd372, {%r1001, %r1000};
	ld.local.u32 	%r1002, [%rd10+88];
	ld.local.u32 	%r1003, [%rd15+4];
	mov.b64	%rd373, {%r1003, %r1002};
	ld.local.u32 	%r1004, [%rd10+96];
	ld.local.u32 	%r1005, [%rd16+4];
	mov.b64	%rd374, {%r1005, %r1004};
	ld.local.u32 	%r1006, [%rd10+104];
	ld.local.u32 	%r1007, [%rd17+4];
	mov.b64	%rd375, {%r1007, %r1006};
	ld.local.u32 	%r1008, [%rd10+112];
	ld.local.u32 	%r1009, [%rd18+4];
	mov.b64	%rd376, {%r1009, %r1008};
	ld.local.u32 	%r1010, [%rd10+120];
	ld.local.u32 	%r1011, [%rd19+4];
	mov.b64	%rd377, {%r1011, %r1010};
	ld.local.u32 	%r1012, [%rd10+128];
	ld.local.u32 	%r1013, [%rd20+4];
	mov.b64	%rd378, {%r1013, %r1012};
	ld.local.u32 	%r1014, [%rd10+136];
	ld.local.u32 	%r1015, [%rd21+4];
	mov.b64	%rd379, {%r1015, %r1014};
	ld.local.u32 	%r1016, [%rd10+144];
	ld.local.u32 	%r1017, [%rd22+4];
	mov.b64	%rd380, {%r1017, %r1016};
	ld.local.u32 	%r1018, [%rd10+152];
	ld.local.u32 	%r1019, [%rd23+4];
	mov.b64	%rd381, {%r1019, %r1018};
	ld.local.u32 	%r1020, [%rd10+160];
	ld.local.u32 	%r1021, [%rd24+4];
	mov.b64	%rd382, {%r1021, %r1020};
	ld.local.u32 	%r1022, [%rd10+168];
	ld.local.u32 	%r1023, [%rd25+4];
	mov.b64	%rd383, {%r1023, %r1022};
	ld.local.u32 	%r1024, [%rd10+176];
	ld.local.u32 	%r1025, [%rd26+4];
	mov.b64	%rd384, {%r1025, %r1024};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1026,%dummy}, %rd8841;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1027}, %rd8841;
	}
	shf.r.wrap.b32 	%r1028, %r1027, %r1026, 18;
	shf.r.wrap.b32 	%r1029, %r1026, %r1027, 18;
	mov.b64 	%rd385, {%r1029, %r1028};
	shf.r.wrap.b32 	%r1030, %r1027, %r1026, 14;
	shf.r.wrap.b32 	%r1031, %r1026, %r1027, 14;
	mov.b64 	%rd386, {%r1031, %r1030};
	xor.b64  	%rd387, %rd385, %rd386;
	shf.l.wrap.b32 	%r1032, %r1026, %r1027, 23;
	shf.l.wrap.b32 	%r1033, %r1027, %r1026, 23;
	mov.b64 	%rd388, {%r1033, %r1032};
	xor.b64  	%rd389, %rd387, %rd388;
	xor.b64  	%rd390, %rd8839, %rd8840;
	and.b64  	%rd391, %rd390, %rd8841;
	xor.b64  	%rd392, %rd391, %rd8839;
	add.s64 	%rd393, %rd392, %rd8838;
	add.s64 	%rd394, %rd393, %rd369;
	add.s64 	%rd395, %rd394, %rd36;
	add.s64 	%rd396, %rd395, %rd389;
	add.s64 	%rd397, %rd396, %rd8842;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1034}, %rd8845;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1035,%dummy}, %rd8845;
	}
	shf.l.wrap.b32 	%r1036, %r1035, %r1034, 30;
	shf.l.wrap.b32 	%r1037, %r1034, %r1035, 30;
	mov.b64 	%rd398, {%r1037, %r1036};
	shf.r.wrap.b32 	%r1038, %r1034, %r1035, 28;
	shf.r.wrap.b32 	%r1039, %r1035, %r1034, 28;
	mov.b64 	%rd399, {%r1039, %r1038};
	xor.b64  	%rd400, %rd398, %rd399;
	shf.l.wrap.b32 	%r1040, %r1035, %r1034, 25;
	shf.l.wrap.b32 	%r1041, %r1034, %r1035, 25;
	mov.b64 	%rd401, {%r1041, %r1040};
	xor.b64  	%rd402, %rd400, %rd401;
	xor.b64  	%rd403, %rd8844, %rd8845;
	xor.b64  	%rd404, %rd8843, %rd8845;
	and.b64  	%rd405, %rd404, %rd403;
	xor.b64  	%rd406, %rd405, %rd8845;
	add.s64 	%rd407, %rd396, %rd406;
	add.s64 	%rd408, %rd407, %rd402;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1042,%dummy}, %rd397;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1043}, %rd397;
	}
	shf.r.wrap.b32 	%r1044, %r1043, %r1042, 14;
	shf.r.wrap.b32 	%r1045, %r1042, %r1043, 14;
	mov.b64 	%rd409, {%r1045, %r1044};
	shf.r.wrap.b32 	%r1046, %r1043, %r1042, 18;
	shf.r.wrap.b32 	%r1047, %r1042, %r1043, 18;
	mov.b64 	%rd410, {%r1047, %r1046};
	xor.b64  	%rd411, %rd410, %rd409;
	shf.l.wrap.b32 	%r1048, %r1042, %r1043, 23;
	shf.l.wrap.b32 	%r1049, %r1043, %r1042, 23;
	mov.b64 	%rd412, {%r1049, %r1048};
	xor.b64  	%rd413, %rd411, %rd412;
	xor.b64  	%rd414, %rd8840, %rd8841;
	and.b64  	%rd415, %rd397, %rd414;
	xor.b64  	%rd416, %rd415, %rd8840;
	add.s64 	%rd417, %rd370, %rd8839;
	add.s64 	%rd418, %rd417, %rd37;
	add.s64 	%rd419, %rd418, %rd416;
	add.s64 	%rd420, %rd419, %rd413;
	add.s64 	%rd421, %rd420, %rd8843;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1050,%dummy}, %rd408;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1051}, %rd408;
	}
	shf.r.wrap.b32 	%r1052, %r1051, %r1050, 28;
	shf.r.wrap.b32 	%r1053, %r1050, %r1051, 28;
	mov.b64 	%rd422, {%r1053, %r1052};
	shf.l.wrap.b32 	%r1054, %r1050, %r1051, 30;
	shf.l.wrap.b32 	%r1055, %r1051, %r1050, 30;
	mov.b64 	%rd423, {%r1055, %r1054};
	xor.b64  	%rd424, %rd423, %rd422;
	shf.l.wrap.b32 	%r1056, %r1050, %r1051, 25;
	shf.l.wrap.b32 	%r1057, %r1051, %r1050, 25;
	mov.b64 	%rd425, {%r1057, %r1056};
	xor.b64  	%rd426, %rd424, %rd425;
	xor.b64  	%rd427, %rd408, %rd8844;
	xor.b64  	%rd428, %rd408, %rd8845;
	and.b64  	%rd429, %rd428, %rd427;
	xor.b64  	%rd430, %rd429, %rd408;
	add.s64 	%rd431, %rd420, %rd430;
	add.s64 	%rd432, %rd431, %rd426;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1058,%dummy}, %rd421;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1059}, %rd421;
	}
	shf.r.wrap.b32 	%r1060, %r1059, %r1058, 14;
	shf.r.wrap.b32 	%r1061, %r1058, %r1059, 14;
	mov.b64 	%rd433, {%r1061, %r1060};
	shf.r.wrap.b32 	%r1062, %r1059, %r1058, 18;
	shf.r.wrap.b32 	%r1063, %r1058, %r1059, 18;
	mov.b64 	%rd434, {%r1063, %r1062};
	xor.b64  	%rd435, %rd434, %rd433;
	shf.l.wrap.b32 	%r1064, %r1058, %r1059, 23;
	shf.l.wrap.b32 	%r1065, %r1059, %r1058, 23;
	mov.b64 	%rd436, {%r1065, %r1064};
	xor.b64  	%rd437, %rd435, %rd436;
	xor.b64  	%rd438, %rd397, %rd8841;
	and.b64  	%rd439, %rd421, %rd438;
	xor.b64  	%rd440, %rd439, %rd8841;
	add.s64 	%rd441, %rd371, %rd8840;
	add.s64 	%rd442, %rd441, %rd38;
	add.s64 	%rd443, %rd442, %rd440;
	add.s64 	%rd444, %rd443, %rd437;
	add.s64 	%rd445, %rd444, %rd8844;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1066,%dummy}, %rd432;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1067}, %rd432;
	}
	shf.r.wrap.b32 	%r1068, %r1067, %r1066, 28;
	shf.r.wrap.b32 	%r1069, %r1066, %r1067, 28;
	mov.b64 	%rd446, {%r1069, %r1068};
	shf.l.wrap.b32 	%r1070, %r1066, %r1067, 30;
	shf.l.wrap.b32 	%r1071, %r1067, %r1066, 30;
	mov.b64 	%rd447, {%r1071, %r1070};
	xor.b64  	%rd448, %rd447, %rd446;
	shf.l.wrap.b32 	%r1072, %r1066, %r1067, 25;
	shf.l.wrap.b32 	%r1073, %r1067, %r1066, 25;
	mov.b64 	%rd449, {%r1073, %r1072};
	xor.b64  	%rd450, %rd448, %rd449;
	xor.b64  	%rd451, %rd432, %rd8845;
	xor.b64  	%rd452, %rd432, %rd408;
	and.b64  	%rd453, %rd452, %rd451;
	xor.b64  	%rd454, %rd453, %rd432;
	add.s64 	%rd455, %rd444, %rd454;
	add.s64 	%rd456, %rd455, %rd450;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1074,%dummy}, %rd445;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1075}, %rd445;
	}
	shf.r.wrap.b32 	%r1076, %r1075, %r1074, 14;
	shf.r.wrap.b32 	%r1077, %r1074, %r1075, 14;
	mov.b64 	%rd457, {%r1077, %r1076};
	shf.r.wrap.b32 	%r1078, %r1075, %r1074, 18;
	shf.r.wrap.b32 	%r1079, %r1074, %r1075, 18;
	mov.b64 	%rd458, {%r1079, %r1078};
	xor.b64  	%rd459, %rd458, %rd457;
	shf.l.wrap.b32 	%r1080, %r1074, %r1075, 23;
	shf.l.wrap.b32 	%r1081, %r1075, %r1074, 23;
	mov.b64 	%rd460, {%r1081, %r1080};
	xor.b64  	%rd461, %rd459, %rd460;
	xor.b64  	%rd462, %rd421, %rd397;
	and.b64  	%rd463, %rd445, %rd462;
	xor.b64  	%rd464, %rd463, %rd397;
	add.s64 	%rd465, %rd372, %rd8841;
	add.s64 	%rd466, %rd465, %rd39;
	add.s64 	%rd467, %rd466, %rd464;
	add.s64 	%rd468, %rd467, %rd461;
	add.s64 	%rd469, %rd468, %rd8845;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1082,%dummy}, %rd456;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1083}, %rd456;
	}
	shf.r.wrap.b32 	%r1084, %r1083, %r1082, 28;
	shf.r.wrap.b32 	%r1085, %r1082, %r1083, 28;
	mov.b64 	%rd470, {%r1085, %r1084};
	shf.l.wrap.b32 	%r1086, %r1082, %r1083, 30;
	shf.l.wrap.b32 	%r1087, %r1083, %r1082, 30;
	mov.b64 	%rd471, {%r1087, %r1086};
	xor.b64  	%rd472, %rd471, %rd470;
	shf.l.wrap.b32 	%r1088, %r1082, %r1083, 25;
	shf.l.wrap.b32 	%r1089, %r1083, %r1082, 25;
	mov.b64 	%rd473, {%r1089, %r1088};
	xor.b64  	%rd474, %rd472, %rd473;
	xor.b64  	%rd475, %rd456, %rd408;
	xor.b64  	%rd476, %rd456, %rd432;
	and.b64  	%rd477, %rd476, %rd475;
	xor.b64  	%rd478, %rd477, %rd456;
	add.s64 	%rd479, %rd468, %rd478;
	add.s64 	%rd480, %rd479, %rd474;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1090,%dummy}, %rd469;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1091}, %rd469;
	}
	shf.r.wrap.b32 	%r1092, %r1091, %r1090, 14;
	shf.r.wrap.b32 	%r1093, %r1090, %r1091, 14;
	mov.b64 	%rd481, {%r1093, %r1092};
	shf.r.wrap.b32 	%r1094, %r1091, %r1090, 18;
	shf.r.wrap.b32 	%r1095, %r1090, %r1091, 18;
	mov.b64 	%rd482, {%r1095, %r1094};
	xor.b64  	%rd483, %rd482, %rd481;
	shf.l.wrap.b32 	%r1096, %r1090, %r1091, 23;
	shf.l.wrap.b32 	%r1097, %r1091, %r1090, 23;
	mov.b64 	%rd484, {%r1097, %r1096};
	xor.b64  	%rd485, %rd483, %rd484;
	xor.b64  	%rd486, %rd445, %rd421;
	and.b64  	%rd487, %rd469, %rd486;
	xor.b64  	%rd488, %rd487, %rd421;
	add.s64 	%rd489, %rd397, %rd373;
	add.s64 	%rd490, %rd489, %rd40;
	add.s64 	%rd491, %rd490, %rd488;
	add.s64 	%rd492, %rd491, %rd485;
	add.s64 	%rd493, %rd492, %rd408;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1098,%dummy}, %rd480;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1099}, %rd480;
	}
	shf.r.wrap.b32 	%r1100, %r1099, %r1098, 28;
	shf.r.wrap.b32 	%r1101, %r1098, %r1099, 28;
	mov.b64 	%rd494, {%r1101, %r1100};
	shf.l.wrap.b32 	%r1102, %r1098, %r1099, 30;
	shf.l.wrap.b32 	%r1103, %r1099, %r1098, 30;
	mov.b64 	%rd495, {%r1103, %r1102};
	xor.b64  	%rd496, %rd495, %rd494;
	shf.l.wrap.b32 	%r1104, %r1098, %r1099, 25;
	shf.l.wrap.b32 	%r1105, %r1099, %r1098, 25;
	mov.b64 	%rd497, {%r1105, %r1104};
	xor.b64  	%rd498, %rd496, %rd497;
	xor.b64  	%rd499, %rd480, %rd432;
	xor.b64  	%rd500, %rd480, %rd456;
	and.b64  	%rd501, %rd500, %rd499;
	xor.b64  	%rd502, %rd501, %rd480;
	add.s64 	%rd503, %rd492, %rd502;
	add.s64 	%rd504, %rd503, %rd498;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1106,%dummy}, %rd493;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1107}, %rd493;
	}
	shf.r.wrap.b32 	%r1108, %r1107, %r1106, 14;
	shf.r.wrap.b32 	%r1109, %r1106, %r1107, 14;
	mov.b64 	%rd505, {%r1109, %r1108};
	shf.r.wrap.b32 	%r1110, %r1107, %r1106, 18;
	shf.r.wrap.b32 	%r1111, %r1106, %r1107, 18;
	mov.b64 	%rd506, {%r1111, %r1110};
	xor.b64  	%rd507, %rd506, %rd505;
	shf.l.wrap.b32 	%r1112, %r1106, %r1107, 23;
	shf.l.wrap.b32 	%r1113, %r1107, %r1106, 23;
	mov.b64 	%rd508, {%r1113, %r1112};
	xor.b64  	%rd509, %rd507, %rd508;
	xor.b64  	%rd510, %rd469, %rd445;
	and.b64  	%rd511, %rd493, %rd510;
	xor.b64  	%rd512, %rd511, %rd445;
	add.s64 	%rd513, %rd421, %rd374;
	add.s64 	%rd514, %rd513, %rd41;
	add.s64 	%rd515, %rd514, %rd512;
	add.s64 	%rd516, %rd515, %rd509;
	add.s64 	%rd517, %rd516, %rd432;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1114,%dummy}, %rd504;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1115}, %rd504;
	}
	shf.r.wrap.b32 	%r1116, %r1115, %r1114, 28;
	shf.r.wrap.b32 	%r1117, %r1114, %r1115, 28;
	mov.b64 	%rd518, {%r1117, %r1116};
	shf.l.wrap.b32 	%r1118, %r1114, %r1115, 30;
	shf.l.wrap.b32 	%r1119, %r1115, %r1114, 30;
	mov.b64 	%rd519, {%r1119, %r1118};
	xor.b64  	%rd520, %rd519, %rd518;
	shf.l.wrap.b32 	%r1120, %r1114, %r1115, 25;
	shf.l.wrap.b32 	%r1121, %r1115, %r1114, 25;
	mov.b64 	%rd521, {%r1121, %r1120};
	xor.b64  	%rd522, %rd520, %rd521;
	xor.b64  	%rd523, %rd504, %rd456;
	xor.b64  	%rd524, %rd504, %rd480;
	and.b64  	%rd525, %rd524, %rd523;
	xor.b64  	%rd526, %rd525, %rd504;
	add.s64 	%rd527, %rd516, %rd526;
	add.s64 	%rd528, %rd527, %rd522;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1122,%dummy}, %rd517;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1123}, %rd517;
	}
	shf.r.wrap.b32 	%r1124, %r1123, %r1122, 14;
	shf.r.wrap.b32 	%r1125, %r1122, %r1123, 14;
	mov.b64 	%rd529, {%r1125, %r1124};
	shf.r.wrap.b32 	%r1126, %r1123, %r1122, 18;
	shf.r.wrap.b32 	%r1127, %r1122, %r1123, 18;
	mov.b64 	%rd530, {%r1127, %r1126};
	xor.b64  	%rd531, %rd530, %rd529;
	shf.l.wrap.b32 	%r1128, %r1122, %r1123, 23;
	shf.l.wrap.b32 	%r1129, %r1123, %r1122, 23;
	mov.b64 	%rd532, {%r1129, %r1128};
	xor.b64  	%rd533, %rd531, %rd532;
	xor.b64  	%rd534, %rd493, %rd469;
	and.b64  	%rd535, %rd517, %rd534;
	xor.b64  	%rd536, %rd535, %rd469;
	add.s64 	%rd537, %rd445, %rd375;
	add.s64 	%rd538, %rd537, %rd42;
	add.s64 	%rd539, %rd538, %rd536;
	add.s64 	%rd540, %rd539, %rd533;
	add.s64 	%rd541, %rd540, %rd456;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1130,%dummy}, %rd528;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1131}, %rd528;
	}
	shf.r.wrap.b32 	%r1132, %r1131, %r1130, 28;
	shf.r.wrap.b32 	%r1133, %r1130, %r1131, 28;
	mov.b64 	%rd542, {%r1133, %r1132};
	shf.l.wrap.b32 	%r1134, %r1130, %r1131, 30;
	shf.l.wrap.b32 	%r1135, %r1131, %r1130, 30;
	mov.b64 	%rd543, {%r1135, %r1134};
	xor.b64  	%rd544, %rd543, %rd542;
	shf.l.wrap.b32 	%r1136, %r1130, %r1131, 25;
	shf.l.wrap.b32 	%r1137, %r1131, %r1130, 25;
	mov.b64 	%rd545, {%r1137, %r1136};
	xor.b64  	%rd546, %rd544, %rd545;
	xor.b64  	%rd547, %rd528, %rd480;
	xor.b64  	%rd548, %rd528, %rd504;
	and.b64  	%rd549, %rd548, %rd547;
	xor.b64  	%rd550, %rd549, %rd528;
	add.s64 	%rd551, %rd540, %rd550;
	add.s64 	%rd552, %rd551, %rd546;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1138,%dummy}, %rd541;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1139}, %rd541;
	}
	shf.r.wrap.b32 	%r1140, %r1139, %r1138, 14;
	shf.r.wrap.b32 	%r1141, %r1138, %r1139, 14;
	mov.b64 	%rd553, {%r1141, %r1140};
	shf.r.wrap.b32 	%r1142, %r1139, %r1138, 18;
	shf.r.wrap.b32 	%r1143, %r1138, %r1139, 18;
	mov.b64 	%rd554, {%r1143, %r1142};
	xor.b64  	%rd555, %rd554, %rd553;
	shf.l.wrap.b32 	%r1144, %r1138, %r1139, 23;
	shf.l.wrap.b32 	%r1145, %r1139, %r1138, 23;
	mov.b64 	%rd556, {%r1145, %r1144};
	xor.b64  	%rd557, %rd555, %rd556;
	xor.b64  	%rd558, %rd517, %rd493;
	and.b64  	%rd559, %rd541, %rd558;
	xor.b64  	%rd560, %rd559, %rd493;
	add.s64 	%rd561, %rd469, %rd376;
	add.s64 	%rd562, %rd561, %rd43;
	add.s64 	%rd563, %rd562, %rd560;
	add.s64 	%rd564, %rd563, %rd557;
	add.s64 	%rd565, %rd564, %rd480;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1146,%dummy}, %rd552;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1147}, %rd552;
	}
	shf.r.wrap.b32 	%r1148, %r1147, %r1146, 28;
	shf.r.wrap.b32 	%r1149, %r1146, %r1147, 28;
	mov.b64 	%rd566, {%r1149, %r1148};
	shf.l.wrap.b32 	%r1150, %r1146, %r1147, 30;
	shf.l.wrap.b32 	%r1151, %r1147, %r1146, 30;
	mov.b64 	%rd567, {%r1151, %r1150};
	xor.b64  	%rd568, %rd567, %rd566;
	shf.l.wrap.b32 	%r1152, %r1146, %r1147, 25;
	shf.l.wrap.b32 	%r1153, %r1147, %r1146, 25;
	mov.b64 	%rd569, {%r1153, %r1152};
	xor.b64  	%rd570, %rd568, %rd569;
	xor.b64  	%rd571, %rd552, %rd504;
	xor.b64  	%rd572, %rd552, %rd528;
	and.b64  	%rd573, %rd572, %rd571;
	xor.b64  	%rd574, %rd573, %rd552;
	add.s64 	%rd575, %rd564, %rd574;
	add.s64 	%rd576, %rd575, %rd570;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1154,%dummy}, %rd565;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1155}, %rd565;
	}
	shf.r.wrap.b32 	%r1156, %r1155, %r1154, 14;
	shf.r.wrap.b32 	%r1157, %r1154, %r1155, 14;
	mov.b64 	%rd577, {%r1157, %r1156};
	shf.r.wrap.b32 	%r1158, %r1155, %r1154, 18;
	shf.r.wrap.b32 	%r1159, %r1154, %r1155, 18;
	mov.b64 	%rd578, {%r1159, %r1158};
	xor.b64  	%rd579, %rd578, %rd577;
	shf.l.wrap.b32 	%r1160, %r1154, %r1155, 23;
	shf.l.wrap.b32 	%r1161, %r1155, %r1154, 23;
	mov.b64 	%rd580, {%r1161, %r1160};
	xor.b64  	%rd581, %rd579, %rd580;
	xor.b64  	%rd582, %rd541, %rd517;
	and.b64  	%rd583, %rd565, %rd582;
	xor.b64  	%rd584, %rd583, %rd517;
	add.s64 	%rd585, %rd493, %rd377;
	add.s64 	%rd586, %rd585, %rd44;
	add.s64 	%rd587, %rd586, %rd584;
	add.s64 	%rd588, %rd587, %rd581;
	add.s64 	%rd589, %rd588, %rd504;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1162,%dummy}, %rd576;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1163}, %rd576;
	}
	shf.r.wrap.b32 	%r1164, %r1163, %r1162, 28;
	shf.r.wrap.b32 	%r1165, %r1162, %r1163, 28;
	mov.b64 	%rd590, {%r1165, %r1164};
	shf.l.wrap.b32 	%r1166, %r1162, %r1163, 30;
	shf.l.wrap.b32 	%r1167, %r1163, %r1162, 30;
	mov.b64 	%rd591, {%r1167, %r1166};
	xor.b64  	%rd592, %rd591, %rd590;
	shf.l.wrap.b32 	%r1168, %r1162, %r1163, 25;
	shf.l.wrap.b32 	%r1169, %r1163, %r1162, 25;
	mov.b64 	%rd593, {%r1169, %r1168};
	xor.b64  	%rd594, %rd592, %rd593;
	xor.b64  	%rd595, %rd576, %rd528;
	xor.b64  	%rd596, %rd576, %rd552;
	and.b64  	%rd597, %rd596, %rd595;
	xor.b64  	%rd598, %rd597, %rd576;
	add.s64 	%rd599, %rd588, %rd598;
	add.s64 	%rd600, %rd599, %rd594;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1170,%dummy}, %rd589;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1171}, %rd589;
	}
	shf.r.wrap.b32 	%r1172, %r1171, %r1170, 14;
	shf.r.wrap.b32 	%r1173, %r1170, %r1171, 14;
	mov.b64 	%rd601, {%r1173, %r1172};
	shf.r.wrap.b32 	%r1174, %r1171, %r1170, 18;
	shf.r.wrap.b32 	%r1175, %r1170, %r1171, 18;
	mov.b64 	%rd602, {%r1175, %r1174};
	xor.b64  	%rd603, %rd602, %rd601;
	shf.l.wrap.b32 	%r1176, %r1170, %r1171, 23;
	shf.l.wrap.b32 	%r1177, %r1171, %r1170, 23;
	mov.b64 	%rd604, {%r1177, %r1176};
	xor.b64  	%rd605, %rd603, %rd604;
	xor.b64  	%rd606, %rd565, %rd541;
	and.b64  	%rd607, %rd589, %rd606;
	xor.b64  	%rd608, %rd607, %rd541;
	add.s64 	%rd609, %rd517, %rd378;
	add.s64 	%rd610, %rd609, %rd45;
	add.s64 	%rd611, %rd610, %rd608;
	add.s64 	%rd612, %rd611, %rd605;
	add.s64 	%rd613, %rd612, %rd528;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1178,%dummy}, %rd600;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1179}, %rd600;
	}
	shf.r.wrap.b32 	%r1180, %r1179, %r1178, 28;
	shf.r.wrap.b32 	%r1181, %r1178, %r1179, 28;
	mov.b64 	%rd614, {%r1181, %r1180};
	shf.l.wrap.b32 	%r1182, %r1178, %r1179, 30;
	shf.l.wrap.b32 	%r1183, %r1179, %r1178, 30;
	mov.b64 	%rd615, {%r1183, %r1182};
	xor.b64  	%rd616, %rd615, %rd614;
	shf.l.wrap.b32 	%r1184, %r1178, %r1179, 25;
	shf.l.wrap.b32 	%r1185, %r1179, %r1178, 25;
	mov.b64 	%rd617, {%r1185, %r1184};
	xor.b64  	%rd618, %rd616, %rd617;
	xor.b64  	%rd619, %rd600, %rd552;
	xor.b64  	%rd620, %rd600, %rd576;
	and.b64  	%rd621, %rd620, %rd619;
	xor.b64  	%rd622, %rd621, %rd600;
	add.s64 	%rd623, %rd612, %rd622;
	add.s64 	%rd624, %rd623, %rd618;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1186,%dummy}, %rd613;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1187}, %rd613;
	}
	shf.r.wrap.b32 	%r1188, %r1187, %r1186, 14;
	shf.r.wrap.b32 	%r1189, %r1186, %r1187, 14;
	mov.b64 	%rd625, {%r1189, %r1188};
	shf.r.wrap.b32 	%r1190, %r1187, %r1186, 18;
	shf.r.wrap.b32 	%r1191, %r1186, %r1187, 18;
	mov.b64 	%rd626, {%r1191, %r1190};
	xor.b64  	%rd627, %rd626, %rd625;
	shf.l.wrap.b32 	%r1192, %r1186, %r1187, 23;
	shf.l.wrap.b32 	%r1193, %r1187, %r1186, 23;
	mov.b64 	%rd628, {%r1193, %r1192};
	xor.b64  	%rd629, %rd627, %rd628;
	xor.b64  	%rd630, %rd589, %rd565;
	and.b64  	%rd631, %rd613, %rd630;
	xor.b64  	%rd632, %rd631, %rd565;
	add.s64 	%rd633, %rd541, %rd379;
	add.s64 	%rd634, %rd633, %rd46;
	add.s64 	%rd635, %rd634, %rd632;
	add.s64 	%rd636, %rd635, %rd629;
	add.s64 	%rd637, %rd636, %rd552;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1194,%dummy}, %rd624;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1195}, %rd624;
	}
	shf.r.wrap.b32 	%r1196, %r1195, %r1194, 28;
	shf.r.wrap.b32 	%r1197, %r1194, %r1195, 28;
	mov.b64 	%rd638, {%r1197, %r1196};
	shf.l.wrap.b32 	%r1198, %r1194, %r1195, 30;
	shf.l.wrap.b32 	%r1199, %r1195, %r1194, 30;
	mov.b64 	%rd639, {%r1199, %r1198};
	xor.b64  	%rd640, %rd639, %rd638;
	shf.l.wrap.b32 	%r1200, %r1194, %r1195, 25;
	shf.l.wrap.b32 	%r1201, %r1195, %r1194, 25;
	mov.b64 	%rd641, {%r1201, %r1200};
	xor.b64  	%rd642, %rd640, %rd641;
	xor.b64  	%rd643, %rd624, %rd576;
	xor.b64  	%rd644, %rd624, %rd600;
	and.b64  	%rd645, %rd644, %rd643;
	xor.b64  	%rd646, %rd645, %rd624;
	add.s64 	%rd647, %rd636, %rd646;
	add.s64 	%rd648, %rd647, %rd642;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1202,%dummy}, %rd637;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1203}, %rd637;
	}
	shf.r.wrap.b32 	%r1204, %r1203, %r1202, 14;
	shf.r.wrap.b32 	%r1205, %r1202, %r1203, 14;
	mov.b64 	%rd649, {%r1205, %r1204};
	shf.r.wrap.b32 	%r1206, %r1203, %r1202, 18;
	shf.r.wrap.b32 	%r1207, %r1202, %r1203, 18;
	mov.b64 	%rd650, {%r1207, %r1206};
	xor.b64  	%rd651, %rd650, %rd649;
	shf.l.wrap.b32 	%r1208, %r1202, %r1203, 23;
	shf.l.wrap.b32 	%r1209, %r1203, %r1202, 23;
	mov.b64 	%rd652, {%r1209, %r1208};
	xor.b64  	%rd653, %rd651, %rd652;
	xor.b64  	%rd654, %rd613, %rd589;
	and.b64  	%rd655, %rd637, %rd654;
	xor.b64  	%rd656, %rd655, %rd589;
	add.s64 	%rd657, %rd565, %rd380;
	add.s64 	%rd658, %rd657, %rd47;
	add.s64 	%rd659, %rd658, %rd656;
	add.s64 	%rd660, %rd659, %rd653;
	add.s64 	%rd661, %rd660, %rd576;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1210,%dummy}, %rd648;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1211}, %rd648;
	}
	shf.r.wrap.b32 	%r1212, %r1211, %r1210, 28;
	shf.r.wrap.b32 	%r1213, %r1210, %r1211, 28;
	mov.b64 	%rd662, {%r1213, %r1212};
	shf.l.wrap.b32 	%r1214, %r1210, %r1211, 30;
	shf.l.wrap.b32 	%r1215, %r1211, %r1210, 30;
	mov.b64 	%rd663, {%r1215, %r1214};
	xor.b64  	%rd664, %rd663, %rd662;
	shf.l.wrap.b32 	%r1216, %r1210, %r1211, 25;
	shf.l.wrap.b32 	%r1217, %r1211, %r1210, 25;
	mov.b64 	%rd665, {%r1217, %r1216};
	xor.b64  	%rd666, %rd664, %rd665;
	xor.b64  	%rd667, %rd648, %rd600;
	xor.b64  	%rd668, %rd648, %rd624;
	and.b64  	%rd669, %rd668, %rd667;
	xor.b64  	%rd670, %rd669, %rd648;
	add.s64 	%rd671, %rd660, %rd670;
	add.s64 	%rd672, %rd671, %rd666;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1218,%dummy}, %rd661;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1219}, %rd661;
	}
	shf.r.wrap.b32 	%r1220, %r1219, %r1218, 14;
	shf.r.wrap.b32 	%r1221, %r1218, %r1219, 14;
	mov.b64 	%rd673, {%r1221, %r1220};
	shf.r.wrap.b32 	%r1222, %r1219, %r1218, 18;
	shf.r.wrap.b32 	%r1223, %r1218, %r1219, 18;
	mov.b64 	%rd674, {%r1223, %r1222};
	xor.b64  	%rd675, %rd674, %rd673;
	shf.l.wrap.b32 	%r1224, %r1218, %r1219, 23;
	shf.l.wrap.b32 	%r1225, %r1219, %r1218, 23;
	mov.b64 	%rd676, {%r1225, %r1224};
	xor.b64  	%rd677, %rd675, %rd676;
	xor.b64  	%rd678, %rd637, %rd613;
	and.b64  	%rd679, %rd661, %rd678;
	xor.b64  	%rd680, %rd679, %rd613;
	add.s64 	%rd681, %rd589, %rd381;
	add.s64 	%rd682, %rd681, %rd48;
	add.s64 	%rd683, %rd682, %rd680;
	add.s64 	%rd684, %rd683, %rd677;
	add.s64 	%rd685, %rd684, %rd600;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1226,%dummy}, %rd672;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1227}, %rd672;
	}
	shf.r.wrap.b32 	%r1228, %r1227, %r1226, 28;
	shf.r.wrap.b32 	%r1229, %r1226, %r1227, 28;
	mov.b64 	%rd686, {%r1229, %r1228};
	shf.l.wrap.b32 	%r1230, %r1226, %r1227, 30;
	shf.l.wrap.b32 	%r1231, %r1227, %r1226, 30;
	mov.b64 	%rd687, {%r1231, %r1230};
	xor.b64  	%rd688, %rd687, %rd686;
	shf.l.wrap.b32 	%r1232, %r1226, %r1227, 25;
	shf.l.wrap.b32 	%r1233, %r1227, %r1226, 25;
	mov.b64 	%rd689, {%r1233, %r1232};
	xor.b64  	%rd690, %rd688, %rd689;
	xor.b64  	%rd691, %rd672, %rd624;
	xor.b64  	%rd692, %rd672, %rd648;
	and.b64  	%rd693, %rd692, %rd691;
	xor.b64  	%rd694, %rd693, %rd672;
	add.s64 	%rd695, %rd684, %rd694;
	add.s64 	%rd696, %rd695, %rd690;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1234,%dummy}, %rd685;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1235}, %rd685;
	}
	shf.r.wrap.b32 	%r1236, %r1235, %r1234, 14;
	shf.r.wrap.b32 	%r1237, %r1234, %r1235, 14;
	mov.b64 	%rd697, {%r1237, %r1236};
	shf.r.wrap.b32 	%r1238, %r1235, %r1234, 18;
	shf.r.wrap.b32 	%r1239, %r1234, %r1235, 18;
	mov.b64 	%rd698, {%r1239, %r1238};
	xor.b64  	%rd699, %rd698, %rd697;
	shf.l.wrap.b32 	%r1240, %r1234, %r1235, 23;
	shf.l.wrap.b32 	%r1241, %r1235, %r1234, 23;
	mov.b64 	%rd700, {%r1241, %r1240};
	xor.b64  	%rd701, %rd699, %rd700;
	xor.b64  	%rd702, %rd661, %rd637;
	and.b64  	%rd703, %rd685, %rd702;
	xor.b64  	%rd704, %rd703, %rd637;
	add.s64 	%rd705, %rd613, %rd382;
	add.s64 	%rd706, %rd705, %rd49;
	add.s64 	%rd707, %rd706, %rd704;
	add.s64 	%rd708, %rd707, %rd701;
	add.s64 	%rd709, %rd708, %rd624;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1242,%dummy}, %rd696;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1243}, %rd696;
	}
	shf.r.wrap.b32 	%r1244, %r1243, %r1242, 28;
	shf.r.wrap.b32 	%r1245, %r1242, %r1243, 28;
	mov.b64 	%rd710, {%r1245, %r1244};
	shf.l.wrap.b32 	%r1246, %r1242, %r1243, 30;
	shf.l.wrap.b32 	%r1247, %r1243, %r1242, 30;
	mov.b64 	%rd711, {%r1247, %r1246};
	xor.b64  	%rd712, %rd711, %rd710;
	shf.l.wrap.b32 	%r1248, %r1242, %r1243, 25;
	shf.l.wrap.b32 	%r1249, %r1243, %r1242, 25;
	mov.b64 	%rd713, {%r1249, %r1248};
	xor.b64  	%rd714, %rd712, %rd713;
	xor.b64  	%rd715, %rd696, %rd648;
	xor.b64  	%rd716, %rd696, %rd672;
	and.b64  	%rd717, %rd716, %rd715;
	xor.b64  	%rd718, %rd717, %rd696;
	add.s64 	%rd719, %rd708, %rd718;
	add.s64 	%rd720, %rd719, %rd714;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1250,%dummy}, %rd709;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1251}, %rd709;
	}
	shf.r.wrap.b32 	%r1252, %r1251, %r1250, 14;
	shf.r.wrap.b32 	%r1253, %r1250, %r1251, 14;
	mov.b64 	%rd721, {%r1253, %r1252};
	shf.r.wrap.b32 	%r1254, %r1251, %r1250, 18;
	shf.r.wrap.b32 	%r1255, %r1250, %r1251, 18;
	mov.b64 	%rd722, {%r1255, %r1254};
	xor.b64  	%rd723, %rd722, %rd721;
	shf.l.wrap.b32 	%r1256, %r1250, %r1251, 23;
	shf.l.wrap.b32 	%r1257, %r1251, %r1250, 23;
	mov.b64 	%rd724, {%r1257, %r1256};
	xor.b64  	%rd725, %rd723, %rd724;
	xor.b64  	%rd726, %rd685, %rd661;
	and.b64  	%rd727, %rd709, %rd726;
	xor.b64  	%rd728, %rd727, %rd661;
	add.s64 	%rd729, %rd637, %rd383;
	add.s64 	%rd730, %rd729, %rd50;
	add.s64 	%rd731, %rd730, %rd728;
	add.s64 	%rd732, %rd731, %rd725;
	add.s64 	%rd733, %rd732, %rd648;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1258,%dummy}, %rd720;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1259}, %rd720;
	}
	shf.r.wrap.b32 	%r1260, %r1259, %r1258, 28;
	shf.r.wrap.b32 	%r1261, %r1258, %r1259, 28;
	mov.b64 	%rd734, {%r1261, %r1260};
	shf.l.wrap.b32 	%r1262, %r1258, %r1259, 30;
	shf.l.wrap.b32 	%r1263, %r1259, %r1258, 30;
	mov.b64 	%rd735, {%r1263, %r1262};
	xor.b64  	%rd736, %rd735, %rd734;
	shf.l.wrap.b32 	%r1264, %r1258, %r1259, 25;
	shf.l.wrap.b32 	%r1265, %r1259, %r1258, 25;
	mov.b64 	%rd737, {%r1265, %r1264};
	xor.b64  	%rd738, %rd736, %rd737;
	xor.b64  	%rd739, %rd720, %rd672;
	xor.b64  	%rd740, %rd720, %rd696;
	and.b64  	%rd741, %rd740, %rd739;
	xor.b64  	%rd742, %rd741, %rd720;
	add.s64 	%rd743, %rd732, %rd742;
	add.s64 	%rd744, %rd743, %rd738;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1266,%dummy}, %rd733;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1267}, %rd733;
	}
	shf.r.wrap.b32 	%r1268, %r1267, %r1266, 14;
	shf.r.wrap.b32 	%r1269, %r1266, %r1267, 14;
	mov.b64 	%rd745, {%r1269, %r1268};
	shf.r.wrap.b32 	%r1270, %r1267, %r1266, 18;
	shf.r.wrap.b32 	%r1271, %r1266, %r1267, 18;
	mov.b64 	%rd746, {%r1271, %r1270};
	xor.b64  	%rd747, %rd746, %rd745;
	shf.l.wrap.b32 	%r1272, %r1266, %r1267, 23;
	shf.l.wrap.b32 	%r1273, %r1267, %r1266, 23;
	mov.b64 	%rd748, {%r1273, %r1272};
	xor.b64  	%rd749, %rd747, %rd748;
	xor.b64  	%rd750, %rd709, %rd685;
	and.b64  	%rd751, %rd733, %rd750;
	xor.b64  	%rd752, %rd751, %rd685;
	add.s64 	%rd753, %rd661, %rd384;
	add.s64 	%rd754, %rd753, %rd51;
	add.s64 	%rd755, %rd754, %rd752;
	add.s64 	%rd756, %rd755, %rd749;
	add.s64 	%rd757, %rd756, %rd672;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1274,%dummy}, %rd744;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1275}, %rd744;
	}
	shf.r.wrap.b32 	%r1276, %r1275, %r1274, 28;
	shf.r.wrap.b32 	%r1277, %r1274, %r1275, 28;
	mov.b64 	%rd758, {%r1277, %r1276};
	shf.l.wrap.b32 	%r1278, %r1274, %r1275, 30;
	shf.l.wrap.b32 	%r1279, %r1275, %r1274, 30;
	mov.b64 	%rd759, {%r1279, %r1278};
	xor.b64  	%rd760, %rd759, %rd758;
	shf.l.wrap.b32 	%r1280, %r1274, %r1275, 25;
	shf.l.wrap.b32 	%r1281, %r1275, %r1274, 25;
	mov.b64 	%rd761, {%r1281, %r1280};
	xor.b64  	%rd762, %rd760, %rd761;
	xor.b64  	%rd763, %rd744, %rd696;
	xor.b64  	%rd764, %rd744, %rd720;
	and.b64  	%rd765, %rd764, %rd763;
	xor.b64  	%rd766, %rd765, %rd744;
	add.s64 	%rd767, %rd756, %rd766;
	add.s64 	%rd768, %rd767, %rd762;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1282,%dummy}, %rd383;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1283}, %rd383;
	}
	shf.r.wrap.b32 	%r1284, %r1283, %r1282, 19;
	shf.r.wrap.b32 	%r1285, %r1282, %r1283, 19;
	mov.b64 	%rd769, {%r1285, %r1284};
	shf.l.wrap.b32 	%r1286, %r1282, %r1283, 3;
	shf.l.wrap.b32 	%r1287, %r1283, %r1282, 3;
	mov.b64 	%rd770, {%r1287, %r1286};
	shr.u64 	%rd771, %rd383, 6;
	xor.b64  	%rd772, %rd769, %rd771;
	xor.b64  	%rd773, %rd772, %rd770;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1288,%dummy}, %rd370;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1289}, %rd370;
	}
	shf.r.wrap.b32 	%r1290, %r1289, %r1288, 1;
	shf.r.wrap.b32 	%r1291, %r1288, %r1289, 1;
	mov.b64 	%rd774, {%r1291, %r1290};
	shf.r.wrap.b32 	%r1292, %r1289, %r1288, 8;
	shf.r.wrap.b32 	%r1293, %r1288, %r1289, 8;
	mov.b64 	%rd775, {%r1293, %r1292};
	shr.u64 	%rd776, %rd370, 7;
	xor.b64  	%rd777, %rd774, %rd776;
	xor.b64  	%rd778, %rd777, %rd775;
	add.s64 	%rd779, %rd378, %rd369;
	add.s64 	%rd780, %rd779, %rd773;
	add.s64 	%rd781, %rd780, %rd778;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1294,%dummy}, %rd384;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1295}, %rd384;
	}
	shf.r.wrap.b32 	%r1296, %r1295, %r1294, 19;
	shf.r.wrap.b32 	%r1297, %r1294, %r1295, 19;
	mov.b64 	%rd782, {%r1297, %r1296};
	shf.l.wrap.b32 	%r1298, %r1294, %r1295, 3;
	shf.l.wrap.b32 	%r1299, %r1295, %r1294, 3;
	mov.b64 	%rd783, {%r1299, %r1298};
	shr.u64 	%rd784, %rd384, 6;
	xor.b64  	%rd785, %rd782, %rd784;
	xor.b64  	%rd786, %rd785, %rd783;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1300,%dummy}, %rd371;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1301}, %rd371;
	}
	shf.r.wrap.b32 	%r1302, %r1301, %r1300, 1;
	shf.r.wrap.b32 	%r1303, %r1300, %r1301, 1;
	mov.b64 	%rd787, {%r1303, %r1302};
	shf.r.wrap.b32 	%r1304, %r1301, %r1300, 8;
	shf.r.wrap.b32 	%r1305, %r1300, %r1301, 8;
	mov.b64 	%rd788, {%r1305, %r1304};
	shr.u64 	%rd789, %rd371, 7;
	xor.b64  	%rd790, %rd787, %rd789;
	xor.b64  	%rd791, %rd790, %rd788;
	add.s64 	%rd792, %rd379, %rd370;
	add.s64 	%rd793, %rd792, %rd786;
	add.s64 	%rd794, %rd793, %rd791;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1306,%dummy}, %rd781;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1307}, %rd781;
	}
	shf.r.wrap.b32 	%r1308, %r1307, %r1306, 19;
	shf.r.wrap.b32 	%r1309, %r1306, %r1307, 19;
	mov.b64 	%rd795, {%r1309, %r1308};
	shf.l.wrap.b32 	%r1310, %r1306, %r1307, 3;
	shf.l.wrap.b32 	%r1311, %r1307, %r1306, 3;
	mov.b64 	%rd796, {%r1311, %r1310};
	shr.u64 	%rd797, %rd781, 6;
	xor.b64  	%rd798, %rd795, %rd797;
	xor.b64  	%rd799, %rd798, %rd796;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1312,%dummy}, %rd372;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1313}, %rd372;
	}
	shf.r.wrap.b32 	%r1314, %r1313, %r1312, 1;
	shf.r.wrap.b32 	%r1315, %r1312, %r1313, 1;
	mov.b64 	%rd800, {%r1315, %r1314};
	shf.r.wrap.b32 	%r1316, %r1313, %r1312, 8;
	shf.r.wrap.b32 	%r1317, %r1312, %r1313, 8;
	mov.b64 	%rd801, {%r1317, %r1316};
	shr.u64 	%rd802, %rd372, 7;
	xor.b64  	%rd803, %rd800, %rd802;
	xor.b64  	%rd804, %rd803, %rd801;
	add.s64 	%rd805, %rd380, %rd371;
	add.s64 	%rd806, %rd805, %rd799;
	add.s64 	%rd807, %rd806, %rd804;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1318,%dummy}, %rd794;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1319}, %rd794;
	}
	shf.r.wrap.b32 	%r1320, %r1319, %r1318, 19;
	shf.r.wrap.b32 	%r1321, %r1318, %r1319, 19;
	mov.b64 	%rd808, {%r1321, %r1320};
	shf.l.wrap.b32 	%r1322, %r1318, %r1319, 3;
	shf.l.wrap.b32 	%r1323, %r1319, %r1318, 3;
	mov.b64 	%rd809, {%r1323, %r1322};
	shr.u64 	%rd810, %rd794, 6;
	xor.b64  	%rd811, %rd808, %rd810;
	xor.b64  	%rd812, %rd811, %rd809;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1324,%dummy}, %rd373;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1325}, %rd373;
	}
	shf.r.wrap.b32 	%r1326, %r1325, %r1324, 1;
	shf.r.wrap.b32 	%r1327, %r1324, %r1325, 1;
	mov.b64 	%rd813, {%r1327, %r1326};
	shf.r.wrap.b32 	%r1328, %r1325, %r1324, 8;
	shf.r.wrap.b32 	%r1329, %r1324, %r1325, 8;
	mov.b64 	%rd814, {%r1329, %r1328};
	shr.u64 	%rd815, %rd373, 7;
	xor.b64  	%rd816, %rd813, %rd815;
	xor.b64  	%rd817, %rd816, %rd814;
	add.s64 	%rd818, %rd381, %rd372;
	add.s64 	%rd819, %rd818, %rd812;
	add.s64 	%rd820, %rd819, %rd817;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1330,%dummy}, %rd807;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1331}, %rd807;
	}
	shf.r.wrap.b32 	%r1332, %r1331, %r1330, 19;
	shf.r.wrap.b32 	%r1333, %r1330, %r1331, 19;
	mov.b64 	%rd821, {%r1333, %r1332};
	shf.l.wrap.b32 	%r1334, %r1330, %r1331, 3;
	shf.l.wrap.b32 	%r1335, %r1331, %r1330, 3;
	mov.b64 	%rd822, {%r1335, %r1334};
	shr.u64 	%rd823, %rd807, 6;
	xor.b64  	%rd824, %rd821, %rd823;
	xor.b64  	%rd825, %rd824, %rd822;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1336,%dummy}, %rd374;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1337}, %rd374;
	}
	shf.r.wrap.b32 	%r1338, %r1337, %r1336, 1;
	shf.r.wrap.b32 	%r1339, %r1336, %r1337, 1;
	mov.b64 	%rd826, {%r1339, %r1338};
	shf.r.wrap.b32 	%r1340, %r1337, %r1336, 8;
	shf.r.wrap.b32 	%r1341, %r1336, %r1337, 8;
	mov.b64 	%rd827, {%r1341, %r1340};
	shr.u64 	%rd828, %rd374, 7;
	xor.b64  	%rd829, %rd826, %rd828;
	xor.b64  	%rd830, %rd829, %rd827;
	add.s64 	%rd831, %rd382, %rd373;
	add.s64 	%rd832, %rd831, %rd825;
	add.s64 	%rd833, %rd832, %rd830;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1342,%dummy}, %rd820;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1343}, %rd820;
	}
	shf.r.wrap.b32 	%r1344, %r1343, %r1342, 19;
	shf.r.wrap.b32 	%r1345, %r1342, %r1343, 19;
	mov.b64 	%rd834, {%r1345, %r1344};
	shf.l.wrap.b32 	%r1346, %r1342, %r1343, 3;
	shf.l.wrap.b32 	%r1347, %r1343, %r1342, 3;
	mov.b64 	%rd835, {%r1347, %r1346};
	shr.u64 	%rd836, %rd820, 6;
	xor.b64  	%rd837, %rd834, %rd836;
	xor.b64  	%rd838, %rd837, %rd835;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1348,%dummy}, %rd375;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1349}, %rd375;
	}
	shf.r.wrap.b32 	%r1350, %r1349, %r1348, 1;
	shf.r.wrap.b32 	%r1351, %r1348, %r1349, 1;
	mov.b64 	%rd839, {%r1351, %r1350};
	shf.r.wrap.b32 	%r1352, %r1349, %r1348, 8;
	shf.r.wrap.b32 	%r1353, %r1348, %r1349, 8;
	mov.b64 	%rd840, {%r1353, %r1352};
	shr.u64 	%rd841, %rd375, 7;
	xor.b64  	%rd842, %rd839, %rd841;
	xor.b64  	%rd843, %rd842, %rd840;
	add.s64 	%rd844, %rd383, %rd374;
	add.s64 	%rd845, %rd844, %rd838;
	add.s64 	%rd846, %rd845, %rd843;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1354,%dummy}, %rd833;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1355}, %rd833;
	}
	shf.r.wrap.b32 	%r1356, %r1355, %r1354, 19;
	shf.r.wrap.b32 	%r1357, %r1354, %r1355, 19;
	mov.b64 	%rd847, {%r1357, %r1356};
	shf.l.wrap.b32 	%r1358, %r1354, %r1355, 3;
	shf.l.wrap.b32 	%r1359, %r1355, %r1354, 3;
	mov.b64 	%rd848, {%r1359, %r1358};
	shr.u64 	%rd849, %rd833, 6;
	xor.b64  	%rd850, %rd847, %rd849;
	xor.b64  	%rd851, %rd850, %rd848;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1360,%dummy}, %rd376;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1361}, %rd376;
	}
	shf.r.wrap.b32 	%r1362, %r1361, %r1360, 1;
	shf.r.wrap.b32 	%r1363, %r1360, %r1361, 1;
	mov.b64 	%rd852, {%r1363, %r1362};
	shf.r.wrap.b32 	%r1364, %r1361, %r1360, 8;
	shf.r.wrap.b32 	%r1365, %r1360, %r1361, 8;
	mov.b64 	%rd853, {%r1365, %r1364};
	shr.u64 	%rd854, %rd376, 7;
	xor.b64  	%rd855, %rd852, %rd854;
	xor.b64  	%rd856, %rd855, %rd853;
	add.s64 	%rd857, %rd384, %rd375;
	add.s64 	%rd858, %rd857, %rd851;
	add.s64 	%rd859, %rd858, %rd856;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1366,%dummy}, %rd846;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1367}, %rd846;
	}
	shf.r.wrap.b32 	%r1368, %r1367, %r1366, 19;
	shf.r.wrap.b32 	%r1369, %r1366, %r1367, 19;
	mov.b64 	%rd860, {%r1369, %r1368};
	shf.l.wrap.b32 	%r1370, %r1366, %r1367, 3;
	shf.l.wrap.b32 	%r1371, %r1367, %r1366, 3;
	mov.b64 	%rd861, {%r1371, %r1370};
	shr.u64 	%rd862, %rd846, 6;
	xor.b64  	%rd863, %rd860, %rd862;
	xor.b64  	%rd864, %rd863, %rd861;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1372,%dummy}, %rd377;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1373}, %rd377;
	}
	shf.r.wrap.b32 	%r1374, %r1373, %r1372, 1;
	shf.r.wrap.b32 	%r1375, %r1372, %r1373, 1;
	mov.b64 	%rd865, {%r1375, %r1374};
	shf.r.wrap.b32 	%r1376, %r1373, %r1372, 8;
	shf.r.wrap.b32 	%r1377, %r1372, %r1373, 8;
	mov.b64 	%rd866, {%r1377, %r1376};
	shr.u64 	%rd867, %rd377, 7;
	xor.b64  	%rd868, %rd865, %rd867;
	xor.b64  	%rd869, %rd868, %rd866;
	add.s64 	%rd870, %rd781, %rd376;
	add.s64 	%rd871, %rd870, %rd864;
	add.s64 	%rd872, %rd871, %rd869;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1378,%dummy}, %rd859;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1379}, %rd859;
	}
	shf.r.wrap.b32 	%r1380, %r1379, %r1378, 19;
	shf.r.wrap.b32 	%r1381, %r1378, %r1379, 19;
	mov.b64 	%rd873, {%r1381, %r1380};
	shf.l.wrap.b32 	%r1382, %r1378, %r1379, 3;
	shf.l.wrap.b32 	%r1383, %r1379, %r1378, 3;
	mov.b64 	%rd874, {%r1383, %r1382};
	shr.u64 	%rd875, %rd859, 6;
	xor.b64  	%rd876, %rd873, %rd875;
	xor.b64  	%rd877, %rd876, %rd874;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1384,%dummy}, %rd378;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1385}, %rd378;
	}
	shf.r.wrap.b32 	%r1386, %r1385, %r1384, 1;
	shf.r.wrap.b32 	%r1387, %r1384, %r1385, 1;
	mov.b64 	%rd878, {%r1387, %r1386};
	shf.r.wrap.b32 	%r1388, %r1385, %r1384, 8;
	shf.r.wrap.b32 	%r1389, %r1384, %r1385, 8;
	mov.b64 	%rd879, {%r1389, %r1388};
	shr.u64 	%rd880, %rd378, 7;
	xor.b64  	%rd881, %rd878, %rd880;
	xor.b64  	%rd882, %rd881, %rd879;
	add.s64 	%rd883, %rd794, %rd377;
	add.s64 	%rd884, %rd883, %rd877;
	add.s64 	%rd885, %rd884, %rd882;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1390,%dummy}, %rd872;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1391}, %rd872;
	}
	shf.r.wrap.b32 	%r1392, %r1391, %r1390, 19;
	shf.r.wrap.b32 	%r1393, %r1390, %r1391, 19;
	mov.b64 	%rd886, {%r1393, %r1392};
	shf.l.wrap.b32 	%r1394, %r1390, %r1391, 3;
	shf.l.wrap.b32 	%r1395, %r1391, %r1390, 3;
	mov.b64 	%rd887, {%r1395, %r1394};
	shr.u64 	%rd888, %rd872, 6;
	xor.b64  	%rd889, %rd886, %rd888;
	xor.b64  	%rd890, %rd889, %rd887;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1396,%dummy}, %rd379;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1397}, %rd379;
	}
	shf.r.wrap.b32 	%r1398, %r1397, %r1396, 1;
	shf.r.wrap.b32 	%r1399, %r1396, %r1397, 1;
	mov.b64 	%rd891, {%r1399, %r1398};
	shf.r.wrap.b32 	%r1400, %r1397, %r1396, 8;
	shf.r.wrap.b32 	%r1401, %r1396, %r1397, 8;
	mov.b64 	%rd892, {%r1401, %r1400};
	shr.u64 	%rd893, %rd379, 7;
	xor.b64  	%rd894, %rd891, %rd893;
	xor.b64  	%rd895, %rd894, %rd892;
	add.s64 	%rd896, %rd807, %rd378;
	add.s64 	%rd897, %rd896, %rd890;
	add.s64 	%rd898, %rd897, %rd895;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1402,%dummy}, %rd885;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1403}, %rd885;
	}
	shf.r.wrap.b32 	%r1404, %r1403, %r1402, 19;
	shf.r.wrap.b32 	%r1405, %r1402, %r1403, 19;
	mov.b64 	%rd899, {%r1405, %r1404};
	shf.l.wrap.b32 	%r1406, %r1402, %r1403, 3;
	shf.l.wrap.b32 	%r1407, %r1403, %r1402, 3;
	mov.b64 	%rd900, {%r1407, %r1406};
	shr.u64 	%rd901, %rd885, 6;
	xor.b64  	%rd902, %rd899, %rd901;
	xor.b64  	%rd903, %rd902, %rd900;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1408,%dummy}, %rd380;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1409}, %rd380;
	}
	shf.r.wrap.b32 	%r1410, %r1409, %r1408, 1;
	shf.r.wrap.b32 	%r1411, %r1408, %r1409, 1;
	mov.b64 	%rd904, {%r1411, %r1410};
	shf.r.wrap.b32 	%r1412, %r1409, %r1408, 8;
	shf.r.wrap.b32 	%r1413, %r1408, %r1409, 8;
	mov.b64 	%rd905, {%r1413, %r1412};
	shr.u64 	%rd906, %rd380, 7;
	xor.b64  	%rd907, %rd904, %rd906;
	xor.b64  	%rd908, %rd907, %rd905;
	add.s64 	%rd909, %rd820, %rd379;
	add.s64 	%rd910, %rd909, %rd903;
	add.s64 	%rd911, %rd910, %rd908;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1414,%dummy}, %rd898;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1415}, %rd898;
	}
	shf.r.wrap.b32 	%r1416, %r1415, %r1414, 19;
	shf.r.wrap.b32 	%r1417, %r1414, %r1415, 19;
	mov.b64 	%rd912, {%r1417, %r1416};
	shf.l.wrap.b32 	%r1418, %r1414, %r1415, 3;
	shf.l.wrap.b32 	%r1419, %r1415, %r1414, 3;
	mov.b64 	%rd913, {%r1419, %r1418};
	shr.u64 	%rd914, %rd898, 6;
	xor.b64  	%rd915, %rd912, %rd914;
	xor.b64  	%rd916, %rd915, %rd913;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1420,%dummy}, %rd381;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1421}, %rd381;
	}
	shf.r.wrap.b32 	%r1422, %r1421, %r1420, 1;
	shf.r.wrap.b32 	%r1423, %r1420, %r1421, 1;
	mov.b64 	%rd917, {%r1423, %r1422};
	shf.r.wrap.b32 	%r1424, %r1421, %r1420, 8;
	shf.r.wrap.b32 	%r1425, %r1420, %r1421, 8;
	mov.b64 	%rd918, {%r1425, %r1424};
	shr.u64 	%rd919, %rd381, 7;
	xor.b64  	%rd920, %rd917, %rd919;
	xor.b64  	%rd921, %rd920, %rd918;
	add.s64 	%rd922, %rd833, %rd380;
	add.s64 	%rd923, %rd922, %rd916;
	add.s64 	%rd924, %rd923, %rd921;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1426,%dummy}, %rd911;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1427}, %rd911;
	}
	shf.r.wrap.b32 	%r1428, %r1427, %r1426, 19;
	shf.r.wrap.b32 	%r1429, %r1426, %r1427, 19;
	mov.b64 	%rd925, {%r1429, %r1428};
	shf.l.wrap.b32 	%r1430, %r1426, %r1427, 3;
	shf.l.wrap.b32 	%r1431, %r1427, %r1426, 3;
	mov.b64 	%rd926, {%r1431, %r1430};
	shr.u64 	%rd927, %rd911, 6;
	xor.b64  	%rd928, %rd925, %rd927;
	xor.b64  	%rd929, %rd928, %rd926;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1432,%dummy}, %rd382;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1433}, %rd382;
	}
	shf.r.wrap.b32 	%r1434, %r1433, %r1432, 1;
	shf.r.wrap.b32 	%r1435, %r1432, %r1433, 1;
	mov.b64 	%rd930, {%r1435, %r1434};
	shf.r.wrap.b32 	%r1436, %r1433, %r1432, 8;
	shf.r.wrap.b32 	%r1437, %r1432, %r1433, 8;
	mov.b64 	%rd931, {%r1437, %r1436};
	shr.u64 	%rd932, %rd382, 7;
	xor.b64  	%rd933, %rd930, %rd932;
	xor.b64  	%rd934, %rd933, %rd931;
	add.s64 	%rd935, %rd846, %rd381;
	add.s64 	%rd936, %rd935, %rd929;
	add.s64 	%rd937, %rd936, %rd934;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1438,%dummy}, %rd924;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1439}, %rd924;
	}
	shf.r.wrap.b32 	%r1440, %r1439, %r1438, 19;
	shf.r.wrap.b32 	%r1441, %r1438, %r1439, 19;
	mov.b64 	%rd938, {%r1441, %r1440};
	shf.l.wrap.b32 	%r1442, %r1438, %r1439, 3;
	shf.l.wrap.b32 	%r1443, %r1439, %r1438, 3;
	mov.b64 	%rd939, {%r1443, %r1442};
	shr.u64 	%rd940, %rd924, 6;
	xor.b64  	%rd941, %rd938, %rd940;
	xor.b64  	%rd942, %rd941, %rd939;
	shf.r.wrap.b32 	%r1444, %r1283, %r1282, 1;
	shf.r.wrap.b32 	%r1445, %r1282, %r1283, 1;
	mov.b64 	%rd943, {%r1445, %r1444};
	shf.r.wrap.b32 	%r1446, %r1283, %r1282, 8;
	shf.r.wrap.b32 	%r1447, %r1282, %r1283, 8;
	mov.b64 	%rd944, {%r1447, %r1446};
	shr.u64 	%rd945, %rd383, 7;
	xor.b64  	%rd946, %rd943, %rd945;
	xor.b64  	%rd947, %rd946, %rd944;
	add.s64 	%rd948, %rd859, %rd382;
	add.s64 	%rd949, %rd948, %rd942;
	add.s64 	%rd950, %rd949, %rd947;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1448,%dummy}, %rd937;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1449}, %rd937;
	}
	shf.r.wrap.b32 	%r1450, %r1449, %r1448, 19;
	shf.r.wrap.b32 	%r1451, %r1448, %r1449, 19;
	mov.b64 	%rd951, {%r1451, %r1450};
	shf.l.wrap.b32 	%r1452, %r1448, %r1449, 3;
	shf.l.wrap.b32 	%r1453, %r1449, %r1448, 3;
	mov.b64 	%rd952, {%r1453, %r1452};
	shr.u64 	%rd953, %rd937, 6;
	xor.b64  	%rd954, %rd951, %rd953;
	xor.b64  	%rd955, %rd954, %rd952;
	shf.r.wrap.b32 	%r1454, %r1295, %r1294, 1;
	shf.r.wrap.b32 	%r1455, %r1294, %r1295, 1;
	mov.b64 	%rd956, {%r1455, %r1454};
	shf.r.wrap.b32 	%r1456, %r1295, %r1294, 8;
	shf.r.wrap.b32 	%r1457, %r1294, %r1295, 8;
	mov.b64 	%rd957, {%r1457, %r1456};
	shr.u64 	%rd958, %rd384, 7;
	xor.b64  	%rd959, %rd956, %rd958;
	xor.b64  	%rd960, %rd959, %rd957;
	add.s64 	%rd961, %rd872, %rd383;
	add.s64 	%rd962, %rd961, %rd955;
	add.s64 	%rd963, %rd962, %rd960;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1458,%dummy}, %rd950;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1459}, %rd950;
	}
	shf.r.wrap.b32 	%r1460, %r1459, %r1458, 19;
	shf.r.wrap.b32 	%r1461, %r1458, %r1459, 19;
	mov.b64 	%rd964, {%r1461, %r1460};
	shf.l.wrap.b32 	%r1462, %r1458, %r1459, 3;
	shf.l.wrap.b32 	%r1463, %r1459, %r1458, 3;
	mov.b64 	%rd965, {%r1463, %r1462};
	shr.u64 	%rd966, %rd950, 6;
	xor.b64  	%rd967, %rd964, %rd966;
	xor.b64  	%rd968, %rd967, %rd965;
	shf.r.wrap.b32 	%r1464, %r1307, %r1306, 1;
	shf.r.wrap.b32 	%r1465, %r1306, %r1307, 1;
	mov.b64 	%rd969, {%r1465, %r1464};
	shf.r.wrap.b32 	%r1466, %r1307, %r1306, 8;
	shf.r.wrap.b32 	%r1467, %r1306, %r1307, 8;
	mov.b64 	%rd970, {%r1467, %r1466};
	shr.u64 	%rd971, %rd781, 7;
	xor.b64  	%rd972, %rd969, %rd971;
	xor.b64  	%rd973, %rd972, %rd970;
	add.s64 	%rd974, %rd885, %rd384;
	add.s64 	%rd975, %rd974, %rd968;
	add.s64 	%rd976, %rd975, %rd973;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1468,%dummy}, %rd757;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1469}, %rd757;
	}
	shf.r.wrap.b32 	%r1470, %r1469, %r1468, 14;
	shf.r.wrap.b32 	%r1471, %r1468, %r1469, 14;
	mov.b64 	%rd977, {%r1471, %r1470};
	shf.r.wrap.b32 	%r1472, %r1469, %r1468, 18;
	shf.r.wrap.b32 	%r1473, %r1468, %r1469, 18;
	mov.b64 	%rd978, {%r1473, %r1472};
	xor.b64  	%rd979, %rd978, %rd977;
	shf.l.wrap.b32 	%r1474, %r1468, %r1469, 23;
	shf.l.wrap.b32 	%r1475, %r1469, %r1468, 23;
	mov.b64 	%rd980, {%r1475, %r1474};
	xor.b64  	%rd981, %rd979, %rd980;
	xor.b64  	%rd982, %rd733, %rd709;
	and.b64  	%rd983, %rd982, %rd757;
	xor.b64  	%rd984, %rd983, %rd709;
	add.s64 	%rd985, %rd984, %rd685;
	add.s64 	%rd986, %rd985, %rd781;
	ld.const.u64 	%rd8837, [k_sha512+128];
	add.s64 	%rd987, %rd986, %rd8837;
	add.s64 	%rd988, %rd987, %rd981;
	add.s64 	%rd989, %rd988, %rd696;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1476,%dummy}, %rd768;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1477}, %rd768;
	}
	shf.r.wrap.b32 	%r1478, %r1477, %r1476, 28;
	shf.r.wrap.b32 	%r1479, %r1476, %r1477, 28;
	mov.b64 	%rd990, {%r1479, %r1478};
	shf.l.wrap.b32 	%r1480, %r1476, %r1477, 30;
	shf.l.wrap.b32 	%r1481, %r1477, %r1476, 30;
	mov.b64 	%rd991, {%r1481, %r1480};
	xor.b64  	%rd992, %rd991, %rd990;
	shf.l.wrap.b32 	%r1482, %r1476, %r1477, 25;
	shf.l.wrap.b32 	%r1483, %r1477, %r1476, 25;
	mov.b64 	%rd993, {%r1483, %r1482};
	xor.b64  	%rd994, %rd992, %rd993;
	xor.b64  	%rd995, %rd768, %rd720;
	xor.b64  	%rd996, %rd768, %rd744;
	and.b64  	%rd997, %rd996, %rd995;
	xor.b64  	%rd998, %rd997, %rd768;
	add.s64 	%rd999, %rd988, %rd998;
	add.s64 	%rd1000, %rd999, %rd994;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1484,%dummy}, %rd989;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1485}, %rd989;
	}
	shf.r.wrap.b32 	%r1486, %r1485, %r1484, 14;
	shf.r.wrap.b32 	%r1487, %r1484, %r1485, 14;
	mov.b64 	%rd1001, {%r1487, %r1486};
	shf.r.wrap.b32 	%r1488, %r1485, %r1484, 18;
	shf.r.wrap.b32 	%r1489, %r1484, %r1485, 18;
	mov.b64 	%rd1002, {%r1489, %r1488};
	xor.b64  	%rd1003, %rd1002, %rd1001;
	shf.l.wrap.b32 	%r1490, %r1484, %r1485, 23;
	shf.l.wrap.b32 	%r1491, %r1485, %r1484, 23;
	mov.b64 	%rd1004, {%r1491, %r1490};
	xor.b64  	%rd1005, %rd1003, %rd1004;
	xor.b64  	%rd1006, %rd757, %rd733;
	and.b64  	%rd1007, %rd989, %rd1006;
	xor.b64  	%rd1008, %rd1007, %rd733;
	add.s64 	%rd1009, %rd794, %rd709;
	ld.const.u64 	%rd8836, [k_sha512+136];
	add.s64 	%rd1010, %rd1009, %rd8836;
	add.s64 	%rd1011, %rd1010, %rd1008;
	add.s64 	%rd1012, %rd1011, %rd1005;
	add.s64 	%rd1013, %rd1012, %rd720;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1492,%dummy}, %rd1000;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1493}, %rd1000;
	}
	shf.r.wrap.b32 	%r1494, %r1493, %r1492, 28;
	shf.r.wrap.b32 	%r1495, %r1492, %r1493, 28;
	mov.b64 	%rd1014, {%r1495, %r1494};
	shf.l.wrap.b32 	%r1496, %r1492, %r1493, 30;
	shf.l.wrap.b32 	%r1497, %r1493, %r1492, 30;
	mov.b64 	%rd1015, {%r1497, %r1496};
	xor.b64  	%rd1016, %rd1015, %rd1014;
	shf.l.wrap.b32 	%r1498, %r1492, %r1493, 25;
	shf.l.wrap.b32 	%r1499, %r1493, %r1492, 25;
	mov.b64 	%rd1017, {%r1499, %r1498};
	xor.b64  	%rd1018, %rd1016, %rd1017;
	xor.b64  	%rd1019, %rd1000, %rd744;
	xor.b64  	%rd1020, %rd1000, %rd768;
	and.b64  	%rd1021, %rd1020, %rd1019;
	xor.b64  	%rd1022, %rd1021, %rd1000;
	add.s64 	%rd1023, %rd1012, %rd1022;
	add.s64 	%rd1024, %rd1023, %rd1018;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1500,%dummy}, %rd1013;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1501}, %rd1013;
	}
	shf.r.wrap.b32 	%r1502, %r1501, %r1500, 14;
	shf.r.wrap.b32 	%r1503, %r1500, %r1501, 14;
	mov.b64 	%rd1025, {%r1503, %r1502};
	shf.r.wrap.b32 	%r1504, %r1501, %r1500, 18;
	shf.r.wrap.b32 	%r1505, %r1500, %r1501, 18;
	mov.b64 	%rd1026, {%r1505, %r1504};
	xor.b64  	%rd1027, %rd1026, %rd1025;
	shf.l.wrap.b32 	%r1506, %r1500, %r1501, 23;
	shf.l.wrap.b32 	%r1507, %r1501, %r1500, 23;
	mov.b64 	%rd1028, {%r1507, %r1506};
	xor.b64  	%rd1029, %rd1027, %rd1028;
	xor.b64  	%rd1030, %rd989, %rd757;
	and.b64  	%rd1031, %rd1013, %rd1030;
	xor.b64  	%rd1032, %rd1031, %rd757;
	add.s64 	%rd1033, %rd807, %rd733;
	ld.const.u64 	%rd8835, [k_sha512+144];
	add.s64 	%rd1034, %rd1033, %rd8835;
	add.s64 	%rd1035, %rd1034, %rd1032;
	add.s64 	%rd1036, %rd1035, %rd1029;
	add.s64 	%rd1037, %rd1036, %rd744;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1508,%dummy}, %rd1024;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1509}, %rd1024;
	}
	shf.r.wrap.b32 	%r1510, %r1509, %r1508, 28;
	shf.r.wrap.b32 	%r1511, %r1508, %r1509, 28;
	mov.b64 	%rd1038, {%r1511, %r1510};
	shf.l.wrap.b32 	%r1512, %r1508, %r1509, 30;
	shf.l.wrap.b32 	%r1513, %r1509, %r1508, 30;
	mov.b64 	%rd1039, {%r1513, %r1512};
	xor.b64  	%rd1040, %rd1039, %rd1038;
	shf.l.wrap.b32 	%r1514, %r1508, %r1509, 25;
	shf.l.wrap.b32 	%r1515, %r1509, %r1508, 25;
	mov.b64 	%rd1041, {%r1515, %r1514};
	xor.b64  	%rd1042, %rd1040, %rd1041;
	xor.b64  	%rd1043, %rd1024, %rd768;
	xor.b64  	%rd1044, %rd1024, %rd1000;
	and.b64  	%rd1045, %rd1044, %rd1043;
	xor.b64  	%rd1046, %rd1045, %rd1024;
	add.s64 	%rd1047, %rd1036, %rd1046;
	add.s64 	%rd1048, %rd1047, %rd1042;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1516,%dummy}, %rd1037;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1517}, %rd1037;
	}
	shf.r.wrap.b32 	%r1518, %r1517, %r1516, 14;
	shf.r.wrap.b32 	%r1519, %r1516, %r1517, 14;
	mov.b64 	%rd1049, {%r1519, %r1518};
	shf.r.wrap.b32 	%r1520, %r1517, %r1516, 18;
	shf.r.wrap.b32 	%r1521, %r1516, %r1517, 18;
	mov.b64 	%rd1050, {%r1521, %r1520};
	xor.b64  	%rd1051, %rd1050, %rd1049;
	shf.l.wrap.b32 	%r1522, %r1516, %r1517, 23;
	shf.l.wrap.b32 	%r1523, %r1517, %r1516, 23;
	mov.b64 	%rd1052, {%r1523, %r1522};
	xor.b64  	%rd1053, %rd1051, %rd1052;
	xor.b64  	%rd1054, %rd1013, %rd989;
	and.b64  	%rd1055, %rd1037, %rd1054;
	xor.b64  	%rd1056, %rd1055, %rd989;
	add.s64 	%rd1057, %rd820, %rd757;
	ld.const.u64 	%rd8834, [k_sha512+152];
	add.s64 	%rd1058, %rd1057, %rd8834;
	add.s64 	%rd1059, %rd1058, %rd1056;
	add.s64 	%rd1060, %rd1059, %rd1053;
	add.s64 	%rd1061, %rd1060, %rd768;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1524,%dummy}, %rd1048;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1525}, %rd1048;
	}
	shf.r.wrap.b32 	%r1526, %r1525, %r1524, 28;
	shf.r.wrap.b32 	%r1527, %r1524, %r1525, 28;
	mov.b64 	%rd1062, {%r1527, %r1526};
	shf.l.wrap.b32 	%r1528, %r1524, %r1525, 30;
	shf.l.wrap.b32 	%r1529, %r1525, %r1524, 30;
	mov.b64 	%rd1063, {%r1529, %r1528};
	xor.b64  	%rd1064, %rd1063, %rd1062;
	shf.l.wrap.b32 	%r1530, %r1524, %r1525, 25;
	shf.l.wrap.b32 	%r1531, %r1525, %r1524, 25;
	mov.b64 	%rd1065, {%r1531, %r1530};
	xor.b64  	%rd1066, %rd1064, %rd1065;
	xor.b64  	%rd1067, %rd1048, %rd1000;
	xor.b64  	%rd1068, %rd1048, %rd1024;
	and.b64  	%rd1069, %rd1068, %rd1067;
	xor.b64  	%rd1070, %rd1069, %rd1048;
	add.s64 	%rd1071, %rd1060, %rd1070;
	add.s64 	%rd1072, %rd1071, %rd1066;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1532,%dummy}, %rd1061;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1533}, %rd1061;
	}
	shf.r.wrap.b32 	%r1534, %r1533, %r1532, 14;
	shf.r.wrap.b32 	%r1535, %r1532, %r1533, 14;
	mov.b64 	%rd1073, {%r1535, %r1534};
	shf.r.wrap.b32 	%r1536, %r1533, %r1532, 18;
	shf.r.wrap.b32 	%r1537, %r1532, %r1533, 18;
	mov.b64 	%rd1074, {%r1537, %r1536};
	xor.b64  	%rd1075, %rd1074, %rd1073;
	shf.l.wrap.b32 	%r1538, %r1532, %r1533, 23;
	shf.l.wrap.b32 	%r1539, %r1533, %r1532, 23;
	mov.b64 	%rd1076, {%r1539, %r1538};
	xor.b64  	%rd1077, %rd1075, %rd1076;
	xor.b64  	%rd1078, %rd1037, %rd1013;
	and.b64  	%rd1079, %rd1061, %rd1078;
	xor.b64  	%rd1080, %rd1079, %rd1013;
	add.s64 	%rd1081, %rd989, %rd833;
	ld.const.u64 	%rd8833, [k_sha512+160];
	add.s64 	%rd1082, %rd1081, %rd8833;
	add.s64 	%rd1083, %rd1082, %rd1080;
	add.s64 	%rd1084, %rd1083, %rd1077;
	add.s64 	%rd1085, %rd1084, %rd1000;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1540,%dummy}, %rd1072;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1541}, %rd1072;
	}
	shf.r.wrap.b32 	%r1542, %r1541, %r1540, 28;
	shf.r.wrap.b32 	%r1543, %r1540, %r1541, 28;
	mov.b64 	%rd1086, {%r1543, %r1542};
	shf.l.wrap.b32 	%r1544, %r1540, %r1541, 30;
	shf.l.wrap.b32 	%r1545, %r1541, %r1540, 30;
	mov.b64 	%rd1087, {%r1545, %r1544};
	xor.b64  	%rd1088, %rd1087, %rd1086;
	shf.l.wrap.b32 	%r1546, %r1540, %r1541, 25;
	shf.l.wrap.b32 	%r1547, %r1541, %r1540, 25;
	mov.b64 	%rd1089, {%r1547, %r1546};
	xor.b64  	%rd1090, %rd1088, %rd1089;
	xor.b64  	%rd1091, %rd1072, %rd1024;
	xor.b64  	%rd1092, %rd1072, %rd1048;
	and.b64  	%rd1093, %rd1092, %rd1091;
	xor.b64  	%rd1094, %rd1093, %rd1072;
	add.s64 	%rd1095, %rd1084, %rd1094;
	add.s64 	%rd1096, %rd1095, %rd1090;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1548,%dummy}, %rd1085;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1549}, %rd1085;
	}
	shf.r.wrap.b32 	%r1550, %r1549, %r1548, 14;
	shf.r.wrap.b32 	%r1551, %r1548, %r1549, 14;
	mov.b64 	%rd1097, {%r1551, %r1550};
	shf.r.wrap.b32 	%r1552, %r1549, %r1548, 18;
	shf.r.wrap.b32 	%r1553, %r1548, %r1549, 18;
	mov.b64 	%rd1098, {%r1553, %r1552};
	xor.b64  	%rd1099, %rd1098, %rd1097;
	shf.l.wrap.b32 	%r1554, %r1548, %r1549, 23;
	shf.l.wrap.b32 	%r1555, %r1549, %r1548, 23;
	mov.b64 	%rd1100, {%r1555, %r1554};
	xor.b64  	%rd1101, %rd1099, %rd1100;
	xor.b64  	%rd1102, %rd1061, %rd1037;
	and.b64  	%rd1103, %rd1085, %rd1102;
	xor.b64  	%rd1104, %rd1103, %rd1037;
	add.s64 	%rd1105, %rd1013, %rd846;
	ld.const.u64 	%rd8832, [k_sha512+168];
	add.s64 	%rd1106, %rd1105, %rd8832;
	add.s64 	%rd1107, %rd1106, %rd1104;
	add.s64 	%rd1108, %rd1107, %rd1101;
	add.s64 	%rd1109, %rd1108, %rd1024;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1556,%dummy}, %rd1096;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1557}, %rd1096;
	}
	shf.r.wrap.b32 	%r1558, %r1557, %r1556, 28;
	shf.r.wrap.b32 	%r1559, %r1556, %r1557, 28;
	mov.b64 	%rd1110, {%r1559, %r1558};
	shf.l.wrap.b32 	%r1560, %r1556, %r1557, 30;
	shf.l.wrap.b32 	%r1561, %r1557, %r1556, 30;
	mov.b64 	%rd1111, {%r1561, %r1560};
	xor.b64  	%rd1112, %rd1111, %rd1110;
	shf.l.wrap.b32 	%r1562, %r1556, %r1557, 25;
	shf.l.wrap.b32 	%r1563, %r1557, %r1556, 25;
	mov.b64 	%rd1113, {%r1563, %r1562};
	xor.b64  	%rd1114, %rd1112, %rd1113;
	xor.b64  	%rd1115, %rd1096, %rd1048;
	xor.b64  	%rd1116, %rd1096, %rd1072;
	and.b64  	%rd1117, %rd1116, %rd1115;
	xor.b64  	%rd1118, %rd1117, %rd1096;
	add.s64 	%rd1119, %rd1108, %rd1118;
	add.s64 	%rd1120, %rd1119, %rd1114;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1564,%dummy}, %rd1109;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1565}, %rd1109;
	}
	shf.r.wrap.b32 	%r1566, %r1565, %r1564, 14;
	shf.r.wrap.b32 	%r1567, %r1564, %r1565, 14;
	mov.b64 	%rd1121, {%r1567, %r1566};
	shf.r.wrap.b32 	%r1568, %r1565, %r1564, 18;
	shf.r.wrap.b32 	%r1569, %r1564, %r1565, 18;
	mov.b64 	%rd1122, {%r1569, %r1568};
	xor.b64  	%rd1123, %rd1122, %rd1121;
	shf.l.wrap.b32 	%r1570, %r1564, %r1565, 23;
	shf.l.wrap.b32 	%r1571, %r1565, %r1564, 23;
	mov.b64 	%rd1124, {%r1571, %r1570};
	xor.b64  	%rd1125, %rd1123, %rd1124;
	xor.b64  	%rd1126, %rd1085, %rd1061;
	and.b64  	%rd1127, %rd1109, %rd1126;
	xor.b64  	%rd1128, %rd1127, %rd1061;
	add.s64 	%rd1129, %rd1037, %rd859;
	ld.const.u64 	%rd8831, [k_sha512+176];
	add.s64 	%rd1130, %rd1129, %rd8831;
	add.s64 	%rd1131, %rd1130, %rd1128;
	add.s64 	%rd1132, %rd1131, %rd1125;
	add.s64 	%rd1133, %rd1132, %rd1048;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1572,%dummy}, %rd1120;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1573}, %rd1120;
	}
	shf.r.wrap.b32 	%r1574, %r1573, %r1572, 28;
	shf.r.wrap.b32 	%r1575, %r1572, %r1573, 28;
	mov.b64 	%rd1134, {%r1575, %r1574};
	shf.l.wrap.b32 	%r1576, %r1572, %r1573, 30;
	shf.l.wrap.b32 	%r1577, %r1573, %r1572, 30;
	mov.b64 	%rd1135, {%r1577, %r1576};
	xor.b64  	%rd1136, %rd1135, %rd1134;
	shf.l.wrap.b32 	%r1578, %r1572, %r1573, 25;
	shf.l.wrap.b32 	%r1579, %r1573, %r1572, 25;
	mov.b64 	%rd1137, {%r1579, %r1578};
	xor.b64  	%rd1138, %rd1136, %rd1137;
	xor.b64  	%rd1139, %rd1120, %rd1072;
	xor.b64  	%rd1140, %rd1120, %rd1096;
	and.b64  	%rd1141, %rd1140, %rd1139;
	xor.b64  	%rd1142, %rd1141, %rd1120;
	add.s64 	%rd1143, %rd1132, %rd1142;
	add.s64 	%rd1144, %rd1143, %rd1138;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1580,%dummy}, %rd1133;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1581}, %rd1133;
	}
	shf.r.wrap.b32 	%r1582, %r1581, %r1580, 14;
	shf.r.wrap.b32 	%r1583, %r1580, %r1581, 14;
	mov.b64 	%rd1145, {%r1583, %r1582};
	shf.r.wrap.b32 	%r1584, %r1581, %r1580, 18;
	shf.r.wrap.b32 	%r1585, %r1580, %r1581, 18;
	mov.b64 	%rd1146, {%r1585, %r1584};
	xor.b64  	%rd1147, %rd1146, %rd1145;
	shf.l.wrap.b32 	%r1586, %r1580, %r1581, 23;
	shf.l.wrap.b32 	%r1587, %r1581, %r1580, 23;
	mov.b64 	%rd1148, {%r1587, %r1586};
	xor.b64  	%rd1149, %rd1147, %rd1148;
	xor.b64  	%rd1150, %rd1109, %rd1085;
	and.b64  	%rd1151, %rd1133, %rd1150;
	xor.b64  	%rd1152, %rd1151, %rd1085;
	add.s64 	%rd1153, %rd1061, %rd872;
	ld.const.u64 	%rd8830, [k_sha512+184];
	add.s64 	%rd1154, %rd1153, %rd8830;
	add.s64 	%rd1155, %rd1154, %rd1152;
	add.s64 	%rd1156, %rd1155, %rd1149;
	add.s64 	%rd1157, %rd1156, %rd1072;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1588,%dummy}, %rd1144;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1589}, %rd1144;
	}
	shf.r.wrap.b32 	%r1590, %r1589, %r1588, 28;
	shf.r.wrap.b32 	%r1591, %r1588, %r1589, 28;
	mov.b64 	%rd1158, {%r1591, %r1590};
	shf.l.wrap.b32 	%r1592, %r1588, %r1589, 30;
	shf.l.wrap.b32 	%r1593, %r1589, %r1588, 30;
	mov.b64 	%rd1159, {%r1593, %r1592};
	xor.b64  	%rd1160, %rd1159, %rd1158;
	shf.l.wrap.b32 	%r1594, %r1588, %r1589, 25;
	shf.l.wrap.b32 	%r1595, %r1589, %r1588, 25;
	mov.b64 	%rd1161, {%r1595, %r1594};
	xor.b64  	%rd1162, %rd1160, %rd1161;
	xor.b64  	%rd1163, %rd1144, %rd1096;
	xor.b64  	%rd1164, %rd1144, %rd1120;
	and.b64  	%rd1165, %rd1164, %rd1163;
	xor.b64  	%rd1166, %rd1165, %rd1144;
	add.s64 	%rd1167, %rd1156, %rd1166;
	add.s64 	%rd1168, %rd1167, %rd1162;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1596,%dummy}, %rd1157;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1597}, %rd1157;
	}
	shf.r.wrap.b32 	%r1598, %r1597, %r1596, 14;
	shf.r.wrap.b32 	%r1599, %r1596, %r1597, 14;
	mov.b64 	%rd1169, {%r1599, %r1598};
	shf.r.wrap.b32 	%r1600, %r1597, %r1596, 18;
	shf.r.wrap.b32 	%r1601, %r1596, %r1597, 18;
	mov.b64 	%rd1170, {%r1601, %r1600};
	xor.b64  	%rd1171, %rd1170, %rd1169;
	shf.l.wrap.b32 	%r1602, %r1596, %r1597, 23;
	shf.l.wrap.b32 	%r1603, %r1597, %r1596, 23;
	mov.b64 	%rd1172, {%r1603, %r1602};
	xor.b64  	%rd1173, %rd1171, %rd1172;
	xor.b64  	%rd1174, %rd1133, %rd1109;
	and.b64  	%rd1175, %rd1157, %rd1174;
	xor.b64  	%rd1176, %rd1175, %rd1109;
	add.s64 	%rd1177, %rd1085, %rd885;
	ld.const.u64 	%rd8829, [k_sha512+192];
	add.s64 	%rd1178, %rd1177, %rd8829;
	add.s64 	%rd1179, %rd1178, %rd1176;
	add.s64 	%rd1180, %rd1179, %rd1173;
	add.s64 	%rd1181, %rd1180, %rd1096;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1604,%dummy}, %rd1168;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1605}, %rd1168;
	}
	shf.r.wrap.b32 	%r1606, %r1605, %r1604, 28;
	shf.r.wrap.b32 	%r1607, %r1604, %r1605, 28;
	mov.b64 	%rd1182, {%r1607, %r1606};
	shf.l.wrap.b32 	%r1608, %r1604, %r1605, 30;
	shf.l.wrap.b32 	%r1609, %r1605, %r1604, 30;
	mov.b64 	%rd1183, {%r1609, %r1608};
	xor.b64  	%rd1184, %rd1183, %rd1182;
	shf.l.wrap.b32 	%r1610, %r1604, %r1605, 25;
	shf.l.wrap.b32 	%r1611, %r1605, %r1604, 25;
	mov.b64 	%rd1185, {%r1611, %r1610};
	xor.b64  	%rd1186, %rd1184, %rd1185;
	xor.b64  	%rd1187, %rd1168, %rd1120;
	xor.b64  	%rd1188, %rd1168, %rd1144;
	and.b64  	%rd1189, %rd1188, %rd1187;
	xor.b64  	%rd1190, %rd1189, %rd1168;
	add.s64 	%rd1191, %rd1180, %rd1190;
	add.s64 	%rd1192, %rd1191, %rd1186;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1612,%dummy}, %rd1181;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1613}, %rd1181;
	}
	shf.r.wrap.b32 	%r1614, %r1613, %r1612, 14;
	shf.r.wrap.b32 	%r1615, %r1612, %r1613, 14;
	mov.b64 	%rd1193, {%r1615, %r1614};
	shf.r.wrap.b32 	%r1616, %r1613, %r1612, 18;
	shf.r.wrap.b32 	%r1617, %r1612, %r1613, 18;
	mov.b64 	%rd1194, {%r1617, %r1616};
	xor.b64  	%rd1195, %rd1194, %rd1193;
	shf.l.wrap.b32 	%r1618, %r1612, %r1613, 23;
	shf.l.wrap.b32 	%r1619, %r1613, %r1612, 23;
	mov.b64 	%rd1196, {%r1619, %r1618};
	xor.b64  	%rd1197, %rd1195, %rd1196;
	xor.b64  	%rd1198, %rd1157, %rd1133;
	and.b64  	%rd1199, %rd1181, %rd1198;
	xor.b64  	%rd1200, %rd1199, %rd1133;
	add.s64 	%rd1201, %rd1109, %rd898;
	ld.const.u64 	%rd8828, [k_sha512+200];
	add.s64 	%rd1202, %rd1201, %rd8828;
	add.s64 	%rd1203, %rd1202, %rd1200;
	add.s64 	%rd1204, %rd1203, %rd1197;
	add.s64 	%rd1205, %rd1204, %rd1120;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1620,%dummy}, %rd1192;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1621}, %rd1192;
	}
	shf.r.wrap.b32 	%r1622, %r1621, %r1620, 28;
	shf.r.wrap.b32 	%r1623, %r1620, %r1621, 28;
	mov.b64 	%rd1206, {%r1623, %r1622};
	shf.l.wrap.b32 	%r1624, %r1620, %r1621, 30;
	shf.l.wrap.b32 	%r1625, %r1621, %r1620, 30;
	mov.b64 	%rd1207, {%r1625, %r1624};
	xor.b64  	%rd1208, %rd1207, %rd1206;
	shf.l.wrap.b32 	%r1626, %r1620, %r1621, 25;
	shf.l.wrap.b32 	%r1627, %r1621, %r1620, 25;
	mov.b64 	%rd1209, {%r1627, %r1626};
	xor.b64  	%rd1210, %rd1208, %rd1209;
	xor.b64  	%rd1211, %rd1192, %rd1144;
	xor.b64  	%rd1212, %rd1192, %rd1168;
	and.b64  	%rd1213, %rd1212, %rd1211;
	xor.b64  	%rd1214, %rd1213, %rd1192;
	add.s64 	%rd1215, %rd1204, %rd1214;
	add.s64 	%rd1216, %rd1215, %rd1210;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1628,%dummy}, %rd1205;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1629}, %rd1205;
	}
	shf.r.wrap.b32 	%r1630, %r1629, %r1628, 14;
	shf.r.wrap.b32 	%r1631, %r1628, %r1629, 14;
	mov.b64 	%rd1217, {%r1631, %r1630};
	shf.r.wrap.b32 	%r1632, %r1629, %r1628, 18;
	shf.r.wrap.b32 	%r1633, %r1628, %r1629, 18;
	mov.b64 	%rd1218, {%r1633, %r1632};
	xor.b64  	%rd1219, %rd1218, %rd1217;
	shf.l.wrap.b32 	%r1634, %r1628, %r1629, 23;
	shf.l.wrap.b32 	%r1635, %r1629, %r1628, 23;
	mov.b64 	%rd1220, {%r1635, %r1634};
	xor.b64  	%rd1221, %rd1219, %rd1220;
	xor.b64  	%rd1222, %rd1181, %rd1157;
	and.b64  	%rd1223, %rd1205, %rd1222;
	xor.b64  	%rd1224, %rd1223, %rd1157;
	add.s64 	%rd1225, %rd1133, %rd911;
	ld.const.u64 	%rd8827, [k_sha512+208];
	add.s64 	%rd1226, %rd1225, %rd8827;
	add.s64 	%rd1227, %rd1226, %rd1224;
	add.s64 	%rd1228, %rd1227, %rd1221;
	add.s64 	%rd1229, %rd1228, %rd1144;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1636,%dummy}, %rd1216;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1637}, %rd1216;
	}
	shf.r.wrap.b32 	%r1638, %r1637, %r1636, 28;
	shf.r.wrap.b32 	%r1639, %r1636, %r1637, 28;
	mov.b64 	%rd1230, {%r1639, %r1638};
	shf.l.wrap.b32 	%r1640, %r1636, %r1637, 30;
	shf.l.wrap.b32 	%r1641, %r1637, %r1636, 30;
	mov.b64 	%rd1231, {%r1641, %r1640};
	xor.b64  	%rd1232, %rd1231, %rd1230;
	shf.l.wrap.b32 	%r1642, %r1636, %r1637, 25;
	shf.l.wrap.b32 	%r1643, %r1637, %r1636, 25;
	mov.b64 	%rd1233, {%r1643, %r1642};
	xor.b64  	%rd1234, %rd1232, %rd1233;
	xor.b64  	%rd1235, %rd1216, %rd1168;
	xor.b64  	%rd1236, %rd1216, %rd1192;
	and.b64  	%rd1237, %rd1236, %rd1235;
	xor.b64  	%rd1238, %rd1237, %rd1216;
	add.s64 	%rd1239, %rd1228, %rd1238;
	add.s64 	%rd1240, %rd1239, %rd1234;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1644,%dummy}, %rd1229;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1645}, %rd1229;
	}
	shf.r.wrap.b32 	%r1646, %r1645, %r1644, 14;
	shf.r.wrap.b32 	%r1647, %r1644, %r1645, 14;
	mov.b64 	%rd1241, {%r1647, %r1646};
	shf.r.wrap.b32 	%r1648, %r1645, %r1644, 18;
	shf.r.wrap.b32 	%r1649, %r1644, %r1645, 18;
	mov.b64 	%rd1242, {%r1649, %r1648};
	xor.b64  	%rd1243, %rd1242, %rd1241;
	shf.l.wrap.b32 	%r1650, %r1644, %r1645, 23;
	shf.l.wrap.b32 	%r1651, %r1645, %r1644, 23;
	mov.b64 	%rd1244, {%r1651, %r1650};
	xor.b64  	%rd1245, %rd1243, %rd1244;
	xor.b64  	%rd1246, %rd1205, %rd1181;
	and.b64  	%rd1247, %rd1229, %rd1246;
	xor.b64  	%rd1248, %rd1247, %rd1181;
	add.s64 	%rd1249, %rd1157, %rd924;
	ld.const.u64 	%rd8826, [k_sha512+216];
	add.s64 	%rd1250, %rd1249, %rd8826;
	add.s64 	%rd1251, %rd1250, %rd1248;
	add.s64 	%rd1252, %rd1251, %rd1245;
	add.s64 	%rd1253, %rd1252, %rd1168;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1652,%dummy}, %rd1240;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1653}, %rd1240;
	}
	shf.r.wrap.b32 	%r1654, %r1653, %r1652, 28;
	shf.r.wrap.b32 	%r1655, %r1652, %r1653, 28;
	mov.b64 	%rd1254, {%r1655, %r1654};
	shf.l.wrap.b32 	%r1656, %r1652, %r1653, 30;
	shf.l.wrap.b32 	%r1657, %r1653, %r1652, 30;
	mov.b64 	%rd1255, {%r1657, %r1656};
	xor.b64  	%rd1256, %rd1255, %rd1254;
	shf.l.wrap.b32 	%r1658, %r1652, %r1653, 25;
	shf.l.wrap.b32 	%r1659, %r1653, %r1652, 25;
	mov.b64 	%rd1257, {%r1659, %r1658};
	xor.b64  	%rd1258, %rd1256, %rd1257;
	xor.b64  	%rd1259, %rd1240, %rd1192;
	xor.b64  	%rd1260, %rd1240, %rd1216;
	and.b64  	%rd1261, %rd1260, %rd1259;
	xor.b64  	%rd1262, %rd1261, %rd1240;
	add.s64 	%rd1263, %rd1252, %rd1262;
	add.s64 	%rd1264, %rd1263, %rd1258;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1660,%dummy}, %rd1253;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1661}, %rd1253;
	}
	shf.r.wrap.b32 	%r1662, %r1661, %r1660, 14;
	shf.r.wrap.b32 	%r1663, %r1660, %r1661, 14;
	mov.b64 	%rd1265, {%r1663, %r1662};
	shf.r.wrap.b32 	%r1664, %r1661, %r1660, 18;
	shf.r.wrap.b32 	%r1665, %r1660, %r1661, 18;
	mov.b64 	%rd1266, {%r1665, %r1664};
	xor.b64  	%rd1267, %rd1266, %rd1265;
	shf.l.wrap.b32 	%r1666, %r1660, %r1661, 23;
	shf.l.wrap.b32 	%r1667, %r1661, %r1660, 23;
	mov.b64 	%rd1268, {%r1667, %r1666};
	xor.b64  	%rd1269, %rd1267, %rd1268;
	xor.b64  	%rd1270, %rd1229, %rd1205;
	and.b64  	%rd1271, %rd1253, %rd1270;
	xor.b64  	%rd1272, %rd1271, %rd1205;
	add.s64 	%rd1273, %rd1181, %rd937;
	ld.const.u64 	%rd8825, [k_sha512+224];
	add.s64 	%rd1274, %rd1273, %rd8825;
	add.s64 	%rd1275, %rd1274, %rd1272;
	add.s64 	%rd1276, %rd1275, %rd1269;
	add.s64 	%rd1277, %rd1276, %rd1192;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1668,%dummy}, %rd1264;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1669}, %rd1264;
	}
	shf.r.wrap.b32 	%r1670, %r1669, %r1668, 28;
	shf.r.wrap.b32 	%r1671, %r1668, %r1669, 28;
	mov.b64 	%rd1278, {%r1671, %r1670};
	shf.l.wrap.b32 	%r1672, %r1668, %r1669, 30;
	shf.l.wrap.b32 	%r1673, %r1669, %r1668, 30;
	mov.b64 	%rd1279, {%r1673, %r1672};
	xor.b64  	%rd1280, %rd1279, %rd1278;
	shf.l.wrap.b32 	%r1674, %r1668, %r1669, 25;
	shf.l.wrap.b32 	%r1675, %r1669, %r1668, 25;
	mov.b64 	%rd1281, {%r1675, %r1674};
	xor.b64  	%rd1282, %rd1280, %rd1281;
	xor.b64  	%rd1283, %rd1264, %rd1216;
	xor.b64  	%rd1284, %rd1264, %rd1240;
	and.b64  	%rd1285, %rd1284, %rd1283;
	xor.b64  	%rd1286, %rd1285, %rd1264;
	add.s64 	%rd1287, %rd1276, %rd1286;
	add.s64 	%rd1288, %rd1287, %rd1282;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1676,%dummy}, %rd1277;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1677}, %rd1277;
	}
	shf.r.wrap.b32 	%r1678, %r1677, %r1676, 14;
	shf.r.wrap.b32 	%r1679, %r1676, %r1677, 14;
	mov.b64 	%rd1289, {%r1679, %r1678};
	shf.r.wrap.b32 	%r1680, %r1677, %r1676, 18;
	shf.r.wrap.b32 	%r1681, %r1676, %r1677, 18;
	mov.b64 	%rd1290, {%r1681, %r1680};
	xor.b64  	%rd1291, %rd1290, %rd1289;
	shf.l.wrap.b32 	%r1682, %r1676, %r1677, 23;
	shf.l.wrap.b32 	%r1683, %r1677, %r1676, 23;
	mov.b64 	%rd1292, {%r1683, %r1682};
	xor.b64  	%rd1293, %rd1291, %rd1292;
	xor.b64  	%rd1294, %rd1253, %rd1229;
	and.b64  	%rd1295, %rd1277, %rd1294;
	xor.b64  	%rd1296, %rd1295, %rd1229;
	add.s64 	%rd1297, %rd1205, %rd950;
	ld.const.u64 	%rd8824, [k_sha512+232];
	add.s64 	%rd1298, %rd1297, %rd8824;
	add.s64 	%rd1299, %rd1298, %rd1296;
	add.s64 	%rd1300, %rd1299, %rd1293;
	add.s64 	%rd1301, %rd1300, %rd1216;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1684,%dummy}, %rd1288;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1685}, %rd1288;
	}
	shf.r.wrap.b32 	%r1686, %r1685, %r1684, 28;
	shf.r.wrap.b32 	%r1687, %r1684, %r1685, 28;
	mov.b64 	%rd1302, {%r1687, %r1686};
	shf.l.wrap.b32 	%r1688, %r1684, %r1685, 30;
	shf.l.wrap.b32 	%r1689, %r1685, %r1684, 30;
	mov.b64 	%rd1303, {%r1689, %r1688};
	xor.b64  	%rd1304, %rd1303, %rd1302;
	shf.l.wrap.b32 	%r1690, %r1684, %r1685, 25;
	shf.l.wrap.b32 	%r1691, %r1685, %r1684, 25;
	mov.b64 	%rd1305, {%r1691, %r1690};
	xor.b64  	%rd1306, %rd1304, %rd1305;
	xor.b64  	%rd1307, %rd1288, %rd1240;
	xor.b64  	%rd1308, %rd1288, %rd1264;
	and.b64  	%rd1309, %rd1308, %rd1307;
	xor.b64  	%rd1310, %rd1309, %rd1288;
	add.s64 	%rd1311, %rd1300, %rd1310;
	add.s64 	%rd1312, %rd1311, %rd1306;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1692,%dummy}, %rd1301;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1693}, %rd1301;
	}
	shf.r.wrap.b32 	%r1694, %r1693, %r1692, 14;
	shf.r.wrap.b32 	%r1695, %r1692, %r1693, 14;
	mov.b64 	%rd1313, {%r1695, %r1694};
	shf.r.wrap.b32 	%r1696, %r1693, %r1692, 18;
	shf.r.wrap.b32 	%r1697, %r1692, %r1693, 18;
	mov.b64 	%rd1314, {%r1697, %r1696};
	xor.b64  	%rd1315, %rd1314, %rd1313;
	shf.l.wrap.b32 	%r1698, %r1692, %r1693, 23;
	shf.l.wrap.b32 	%r1699, %r1693, %r1692, 23;
	mov.b64 	%rd1316, {%r1699, %r1698};
	xor.b64  	%rd1317, %rd1315, %rd1316;
	xor.b64  	%rd1318, %rd1277, %rd1253;
	and.b64  	%rd1319, %rd1301, %rd1318;
	xor.b64  	%rd1320, %rd1319, %rd1253;
	add.s64 	%rd1321, %rd1229, %rd963;
	ld.const.u64 	%rd8823, [k_sha512+240];
	add.s64 	%rd1322, %rd1321, %rd8823;
	add.s64 	%rd1323, %rd1322, %rd1320;
	add.s64 	%rd1324, %rd1323, %rd1317;
	add.s64 	%rd1325, %rd1324, %rd1240;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1700,%dummy}, %rd1312;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1701}, %rd1312;
	}
	shf.r.wrap.b32 	%r1702, %r1701, %r1700, 28;
	shf.r.wrap.b32 	%r1703, %r1700, %r1701, 28;
	mov.b64 	%rd1326, {%r1703, %r1702};
	shf.l.wrap.b32 	%r1704, %r1700, %r1701, 30;
	shf.l.wrap.b32 	%r1705, %r1701, %r1700, 30;
	mov.b64 	%rd1327, {%r1705, %r1704};
	xor.b64  	%rd1328, %rd1327, %rd1326;
	shf.l.wrap.b32 	%r1706, %r1700, %r1701, 25;
	shf.l.wrap.b32 	%r1707, %r1701, %r1700, 25;
	mov.b64 	%rd1329, {%r1707, %r1706};
	xor.b64  	%rd1330, %rd1328, %rd1329;
	xor.b64  	%rd1331, %rd1312, %rd1264;
	xor.b64  	%rd1332, %rd1312, %rd1288;
	and.b64  	%rd1333, %rd1332, %rd1331;
	xor.b64  	%rd1334, %rd1333, %rd1312;
	add.s64 	%rd1335, %rd1324, %rd1334;
	add.s64 	%rd1336, %rd1335, %rd1330;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1708,%dummy}, %rd1325;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1709}, %rd1325;
	}
	shf.r.wrap.b32 	%r1710, %r1709, %r1708, 14;
	shf.r.wrap.b32 	%r1711, %r1708, %r1709, 14;
	mov.b64 	%rd1337, {%r1711, %r1710};
	shf.r.wrap.b32 	%r1712, %r1709, %r1708, 18;
	shf.r.wrap.b32 	%r1713, %r1708, %r1709, 18;
	mov.b64 	%rd1338, {%r1713, %r1712};
	xor.b64  	%rd1339, %rd1338, %rd1337;
	shf.l.wrap.b32 	%r1714, %r1708, %r1709, 23;
	shf.l.wrap.b32 	%r1715, %r1709, %r1708, 23;
	mov.b64 	%rd1340, {%r1715, %r1714};
	xor.b64  	%rd1341, %rd1339, %rd1340;
	xor.b64  	%rd1342, %rd1301, %rd1277;
	and.b64  	%rd1343, %rd1325, %rd1342;
	xor.b64  	%rd1344, %rd1343, %rd1277;
	add.s64 	%rd1345, %rd1253, %rd976;
	ld.const.u64 	%rd8822, [k_sha512+248];
	add.s64 	%rd1346, %rd1345, %rd8822;
	add.s64 	%rd1347, %rd1346, %rd1344;
	add.s64 	%rd1348, %rd1347, %rd1341;
	add.s64 	%rd1349, %rd1348, %rd1264;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1716,%dummy}, %rd1336;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1717}, %rd1336;
	}
	shf.r.wrap.b32 	%r1718, %r1717, %r1716, 28;
	shf.r.wrap.b32 	%r1719, %r1716, %r1717, 28;
	mov.b64 	%rd1350, {%r1719, %r1718};
	shf.l.wrap.b32 	%r1720, %r1716, %r1717, 30;
	shf.l.wrap.b32 	%r1721, %r1717, %r1716, 30;
	mov.b64 	%rd1351, {%r1721, %r1720};
	xor.b64  	%rd1352, %rd1351, %rd1350;
	shf.l.wrap.b32 	%r1722, %r1716, %r1717, 25;
	shf.l.wrap.b32 	%r1723, %r1717, %r1716, 25;
	mov.b64 	%rd1353, {%r1723, %r1722};
	xor.b64  	%rd1354, %rd1352, %rd1353;
	xor.b64  	%rd1355, %rd1336, %rd1288;
	xor.b64  	%rd1356, %rd1336, %rd1312;
	and.b64  	%rd1357, %rd1356, %rd1355;
	xor.b64  	%rd1358, %rd1357, %rd1336;
	add.s64 	%rd1359, %rd1348, %rd1358;
	add.s64 	%rd1360, %rd1359, %rd1354;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1724,%dummy}, %rd963;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1725}, %rd963;
	}
	shf.r.wrap.b32 	%r1726, %r1725, %r1724, 19;
	shf.r.wrap.b32 	%r1727, %r1724, %r1725, 19;
	mov.b64 	%rd1361, {%r1727, %r1726};
	shf.l.wrap.b32 	%r1728, %r1724, %r1725, 3;
	shf.l.wrap.b32 	%r1729, %r1725, %r1724, 3;
	mov.b64 	%rd1362, {%r1729, %r1728};
	shr.u64 	%rd1363, %rd963, 6;
	xor.b64  	%rd1364, %rd1361, %rd1363;
	xor.b64  	%rd1365, %rd1364, %rd1362;
	shf.r.wrap.b32 	%r1730, %r1319, %r1318, 1;
	shf.r.wrap.b32 	%r1731, %r1318, %r1319, 1;
	mov.b64 	%rd1366, {%r1731, %r1730};
	shf.r.wrap.b32 	%r1732, %r1319, %r1318, 8;
	shf.r.wrap.b32 	%r1733, %r1318, %r1319, 8;
	mov.b64 	%rd1367, {%r1733, %r1732};
	shr.u64 	%rd1368, %rd794, 7;
	xor.b64  	%rd1369, %rd1366, %rd1368;
	xor.b64  	%rd1370, %rd1369, %rd1367;
	add.s64 	%rd1371, %rd898, %rd781;
	add.s64 	%rd1372, %rd1371, %rd1365;
	add.s64 	%rd1373, %rd1372, %rd1370;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1734,%dummy}, %rd976;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1735}, %rd976;
	}
	shf.r.wrap.b32 	%r1736, %r1735, %r1734, 19;
	shf.r.wrap.b32 	%r1737, %r1734, %r1735, 19;
	mov.b64 	%rd1374, {%r1737, %r1736};
	shf.l.wrap.b32 	%r1738, %r1734, %r1735, 3;
	shf.l.wrap.b32 	%r1739, %r1735, %r1734, 3;
	mov.b64 	%rd1375, {%r1739, %r1738};
	shr.u64 	%rd1376, %rd976, 6;
	xor.b64  	%rd1377, %rd1374, %rd1376;
	xor.b64  	%rd1378, %rd1377, %rd1375;
	shf.r.wrap.b32 	%r1740, %r1331, %r1330, 1;
	shf.r.wrap.b32 	%r1741, %r1330, %r1331, 1;
	mov.b64 	%rd1379, {%r1741, %r1740};
	shf.r.wrap.b32 	%r1742, %r1331, %r1330, 8;
	shf.r.wrap.b32 	%r1743, %r1330, %r1331, 8;
	mov.b64 	%rd1380, {%r1743, %r1742};
	shr.u64 	%rd1381, %rd807, 7;
	xor.b64  	%rd1382, %rd1379, %rd1381;
	xor.b64  	%rd1383, %rd1382, %rd1380;
	add.s64 	%rd1384, %rd911, %rd794;
	add.s64 	%rd1385, %rd1384, %rd1378;
	add.s64 	%rd1386, %rd1385, %rd1383;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1744,%dummy}, %rd1373;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1745}, %rd1373;
	}
	shf.r.wrap.b32 	%r1746, %r1745, %r1744, 19;
	shf.r.wrap.b32 	%r1747, %r1744, %r1745, 19;
	mov.b64 	%rd1387, {%r1747, %r1746};
	shf.l.wrap.b32 	%r1748, %r1744, %r1745, 3;
	shf.l.wrap.b32 	%r1749, %r1745, %r1744, 3;
	mov.b64 	%rd1388, {%r1749, %r1748};
	shr.u64 	%rd1389, %rd1373, 6;
	xor.b64  	%rd1390, %rd1387, %rd1389;
	xor.b64  	%rd1391, %rd1390, %rd1388;
	shf.r.wrap.b32 	%r1750, %r1343, %r1342, 1;
	shf.r.wrap.b32 	%r1751, %r1342, %r1343, 1;
	mov.b64 	%rd1392, {%r1751, %r1750};
	shf.r.wrap.b32 	%r1752, %r1343, %r1342, 8;
	shf.r.wrap.b32 	%r1753, %r1342, %r1343, 8;
	mov.b64 	%rd1393, {%r1753, %r1752};
	shr.u64 	%rd1394, %rd820, 7;
	xor.b64  	%rd1395, %rd1392, %rd1394;
	xor.b64  	%rd1396, %rd1395, %rd1393;
	add.s64 	%rd1397, %rd924, %rd807;
	add.s64 	%rd1398, %rd1397, %rd1391;
	add.s64 	%rd1399, %rd1398, %rd1396;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1754,%dummy}, %rd1386;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1755}, %rd1386;
	}
	shf.r.wrap.b32 	%r1756, %r1755, %r1754, 19;
	shf.r.wrap.b32 	%r1757, %r1754, %r1755, 19;
	mov.b64 	%rd1400, {%r1757, %r1756};
	shf.l.wrap.b32 	%r1758, %r1754, %r1755, 3;
	shf.l.wrap.b32 	%r1759, %r1755, %r1754, 3;
	mov.b64 	%rd1401, {%r1759, %r1758};
	shr.u64 	%rd1402, %rd1386, 6;
	xor.b64  	%rd1403, %rd1400, %rd1402;
	xor.b64  	%rd1404, %rd1403, %rd1401;
	shf.r.wrap.b32 	%r1760, %r1355, %r1354, 1;
	shf.r.wrap.b32 	%r1761, %r1354, %r1355, 1;
	mov.b64 	%rd1405, {%r1761, %r1760};
	shf.r.wrap.b32 	%r1762, %r1355, %r1354, 8;
	shf.r.wrap.b32 	%r1763, %r1354, %r1355, 8;
	mov.b64 	%rd1406, {%r1763, %r1762};
	shr.u64 	%rd1407, %rd833, 7;
	xor.b64  	%rd1408, %rd1405, %rd1407;
	xor.b64  	%rd1409, %rd1408, %rd1406;
	add.s64 	%rd1410, %rd937, %rd820;
	add.s64 	%rd1411, %rd1410, %rd1404;
	add.s64 	%rd1412, %rd1411, %rd1409;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1764,%dummy}, %rd1399;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1765}, %rd1399;
	}
	shf.r.wrap.b32 	%r1766, %r1765, %r1764, 19;
	shf.r.wrap.b32 	%r1767, %r1764, %r1765, 19;
	mov.b64 	%rd1413, {%r1767, %r1766};
	shf.l.wrap.b32 	%r1768, %r1764, %r1765, 3;
	shf.l.wrap.b32 	%r1769, %r1765, %r1764, 3;
	mov.b64 	%rd1414, {%r1769, %r1768};
	shr.u64 	%rd1415, %rd1399, 6;
	xor.b64  	%rd1416, %rd1413, %rd1415;
	xor.b64  	%rd1417, %rd1416, %rd1414;
	shf.r.wrap.b32 	%r1770, %r1367, %r1366, 1;
	shf.r.wrap.b32 	%r1771, %r1366, %r1367, 1;
	mov.b64 	%rd1418, {%r1771, %r1770};
	shf.r.wrap.b32 	%r1772, %r1367, %r1366, 8;
	shf.r.wrap.b32 	%r1773, %r1366, %r1367, 8;
	mov.b64 	%rd1419, {%r1773, %r1772};
	shr.u64 	%rd1420, %rd846, 7;
	xor.b64  	%rd1421, %rd1418, %rd1420;
	xor.b64  	%rd1422, %rd1421, %rd1419;
	add.s64 	%rd1423, %rd950, %rd833;
	add.s64 	%rd1424, %rd1423, %rd1417;
	add.s64 	%rd1425, %rd1424, %rd1422;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1774,%dummy}, %rd1412;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1775}, %rd1412;
	}
	shf.r.wrap.b32 	%r1776, %r1775, %r1774, 19;
	shf.r.wrap.b32 	%r1777, %r1774, %r1775, 19;
	mov.b64 	%rd1426, {%r1777, %r1776};
	shf.l.wrap.b32 	%r1778, %r1774, %r1775, 3;
	shf.l.wrap.b32 	%r1779, %r1775, %r1774, 3;
	mov.b64 	%rd1427, {%r1779, %r1778};
	shr.u64 	%rd1428, %rd1412, 6;
	xor.b64  	%rd1429, %rd1426, %rd1428;
	xor.b64  	%rd1430, %rd1429, %rd1427;
	shf.r.wrap.b32 	%r1780, %r1379, %r1378, 1;
	shf.r.wrap.b32 	%r1781, %r1378, %r1379, 1;
	mov.b64 	%rd1431, {%r1781, %r1780};
	shf.r.wrap.b32 	%r1782, %r1379, %r1378, 8;
	shf.r.wrap.b32 	%r1783, %r1378, %r1379, 8;
	mov.b64 	%rd1432, {%r1783, %r1782};
	shr.u64 	%rd1433, %rd859, 7;
	xor.b64  	%rd1434, %rd1431, %rd1433;
	xor.b64  	%rd1435, %rd1434, %rd1432;
	add.s64 	%rd1436, %rd963, %rd846;
	add.s64 	%rd1437, %rd1436, %rd1430;
	add.s64 	%rd1438, %rd1437, %rd1435;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1784,%dummy}, %rd1425;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1785}, %rd1425;
	}
	shf.r.wrap.b32 	%r1786, %r1785, %r1784, 19;
	shf.r.wrap.b32 	%r1787, %r1784, %r1785, 19;
	mov.b64 	%rd1439, {%r1787, %r1786};
	shf.l.wrap.b32 	%r1788, %r1784, %r1785, 3;
	shf.l.wrap.b32 	%r1789, %r1785, %r1784, 3;
	mov.b64 	%rd1440, {%r1789, %r1788};
	shr.u64 	%rd1441, %rd1425, 6;
	xor.b64  	%rd1442, %rd1439, %rd1441;
	xor.b64  	%rd1443, %rd1442, %rd1440;
	shf.r.wrap.b32 	%r1790, %r1391, %r1390, 1;
	shf.r.wrap.b32 	%r1791, %r1390, %r1391, 1;
	mov.b64 	%rd1444, {%r1791, %r1790};
	shf.r.wrap.b32 	%r1792, %r1391, %r1390, 8;
	shf.r.wrap.b32 	%r1793, %r1390, %r1391, 8;
	mov.b64 	%rd1445, {%r1793, %r1792};
	shr.u64 	%rd1446, %rd872, 7;
	xor.b64  	%rd1447, %rd1444, %rd1446;
	xor.b64  	%rd1448, %rd1447, %rd1445;
	add.s64 	%rd1449, %rd976, %rd859;
	add.s64 	%rd1450, %rd1449, %rd1443;
	add.s64 	%rd1451, %rd1450, %rd1448;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1794,%dummy}, %rd1438;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1795}, %rd1438;
	}
	shf.r.wrap.b32 	%r1796, %r1795, %r1794, 19;
	shf.r.wrap.b32 	%r1797, %r1794, %r1795, 19;
	mov.b64 	%rd1452, {%r1797, %r1796};
	shf.l.wrap.b32 	%r1798, %r1794, %r1795, 3;
	shf.l.wrap.b32 	%r1799, %r1795, %r1794, 3;
	mov.b64 	%rd1453, {%r1799, %r1798};
	shr.u64 	%rd1454, %rd1438, 6;
	xor.b64  	%rd1455, %rd1452, %rd1454;
	xor.b64  	%rd1456, %rd1455, %rd1453;
	shf.r.wrap.b32 	%r1800, %r1403, %r1402, 1;
	shf.r.wrap.b32 	%r1801, %r1402, %r1403, 1;
	mov.b64 	%rd1457, {%r1801, %r1800};
	shf.r.wrap.b32 	%r1802, %r1403, %r1402, 8;
	shf.r.wrap.b32 	%r1803, %r1402, %r1403, 8;
	mov.b64 	%rd1458, {%r1803, %r1802};
	shr.u64 	%rd1459, %rd885, 7;
	xor.b64  	%rd1460, %rd1457, %rd1459;
	xor.b64  	%rd1461, %rd1460, %rd1458;
	add.s64 	%rd1462, %rd1373, %rd872;
	add.s64 	%rd1463, %rd1462, %rd1456;
	add.s64 	%rd1464, %rd1463, %rd1461;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1804,%dummy}, %rd1451;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1805}, %rd1451;
	}
	shf.r.wrap.b32 	%r1806, %r1805, %r1804, 19;
	shf.r.wrap.b32 	%r1807, %r1804, %r1805, 19;
	mov.b64 	%rd1465, {%r1807, %r1806};
	shf.l.wrap.b32 	%r1808, %r1804, %r1805, 3;
	shf.l.wrap.b32 	%r1809, %r1805, %r1804, 3;
	mov.b64 	%rd1466, {%r1809, %r1808};
	shr.u64 	%rd1467, %rd1451, 6;
	xor.b64  	%rd1468, %rd1465, %rd1467;
	xor.b64  	%rd1469, %rd1468, %rd1466;
	shf.r.wrap.b32 	%r1810, %r1415, %r1414, 1;
	shf.r.wrap.b32 	%r1811, %r1414, %r1415, 1;
	mov.b64 	%rd1470, {%r1811, %r1810};
	shf.r.wrap.b32 	%r1812, %r1415, %r1414, 8;
	shf.r.wrap.b32 	%r1813, %r1414, %r1415, 8;
	mov.b64 	%rd1471, {%r1813, %r1812};
	shr.u64 	%rd1472, %rd898, 7;
	xor.b64  	%rd1473, %rd1470, %rd1472;
	xor.b64  	%rd1474, %rd1473, %rd1471;
	add.s64 	%rd1475, %rd1386, %rd885;
	add.s64 	%rd1476, %rd1475, %rd1469;
	add.s64 	%rd1477, %rd1476, %rd1474;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1814,%dummy}, %rd1464;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1815}, %rd1464;
	}
	shf.r.wrap.b32 	%r1816, %r1815, %r1814, 19;
	shf.r.wrap.b32 	%r1817, %r1814, %r1815, 19;
	mov.b64 	%rd1478, {%r1817, %r1816};
	shf.l.wrap.b32 	%r1818, %r1814, %r1815, 3;
	shf.l.wrap.b32 	%r1819, %r1815, %r1814, 3;
	mov.b64 	%rd1479, {%r1819, %r1818};
	shr.u64 	%rd1480, %rd1464, 6;
	xor.b64  	%rd1481, %rd1478, %rd1480;
	xor.b64  	%rd1482, %rd1481, %rd1479;
	shf.r.wrap.b32 	%r1820, %r1427, %r1426, 1;
	shf.r.wrap.b32 	%r1821, %r1426, %r1427, 1;
	mov.b64 	%rd1483, {%r1821, %r1820};
	shf.r.wrap.b32 	%r1822, %r1427, %r1426, 8;
	shf.r.wrap.b32 	%r1823, %r1426, %r1427, 8;
	mov.b64 	%rd1484, {%r1823, %r1822};
	shr.u64 	%rd1485, %rd911, 7;
	xor.b64  	%rd1486, %rd1483, %rd1485;
	xor.b64  	%rd1487, %rd1486, %rd1484;
	add.s64 	%rd1488, %rd1399, %rd898;
	add.s64 	%rd1489, %rd1488, %rd1482;
	add.s64 	%rd1490, %rd1489, %rd1487;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1824,%dummy}, %rd1477;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1825}, %rd1477;
	}
	shf.r.wrap.b32 	%r1826, %r1825, %r1824, 19;
	shf.r.wrap.b32 	%r1827, %r1824, %r1825, 19;
	mov.b64 	%rd1491, {%r1827, %r1826};
	shf.l.wrap.b32 	%r1828, %r1824, %r1825, 3;
	shf.l.wrap.b32 	%r1829, %r1825, %r1824, 3;
	mov.b64 	%rd1492, {%r1829, %r1828};
	shr.u64 	%rd1493, %rd1477, 6;
	xor.b64  	%rd1494, %rd1491, %rd1493;
	xor.b64  	%rd1495, %rd1494, %rd1492;
	shf.r.wrap.b32 	%r1830, %r1439, %r1438, 1;
	shf.r.wrap.b32 	%r1831, %r1438, %r1439, 1;
	mov.b64 	%rd1496, {%r1831, %r1830};
	shf.r.wrap.b32 	%r1832, %r1439, %r1438, 8;
	shf.r.wrap.b32 	%r1833, %r1438, %r1439, 8;
	mov.b64 	%rd1497, {%r1833, %r1832};
	shr.u64 	%rd1498, %rd924, 7;
	xor.b64  	%rd1499, %rd1496, %rd1498;
	xor.b64  	%rd1500, %rd1499, %rd1497;
	add.s64 	%rd1501, %rd1412, %rd911;
	add.s64 	%rd1502, %rd1501, %rd1495;
	add.s64 	%rd1503, %rd1502, %rd1500;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1834,%dummy}, %rd1490;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1835}, %rd1490;
	}
	shf.r.wrap.b32 	%r1836, %r1835, %r1834, 19;
	shf.r.wrap.b32 	%r1837, %r1834, %r1835, 19;
	mov.b64 	%rd1504, {%r1837, %r1836};
	shf.l.wrap.b32 	%r1838, %r1834, %r1835, 3;
	shf.l.wrap.b32 	%r1839, %r1835, %r1834, 3;
	mov.b64 	%rd1505, {%r1839, %r1838};
	shr.u64 	%rd1506, %rd1490, 6;
	xor.b64  	%rd1507, %rd1504, %rd1506;
	xor.b64  	%rd1508, %rd1507, %rd1505;
	shf.r.wrap.b32 	%r1840, %r1449, %r1448, 1;
	shf.r.wrap.b32 	%r1841, %r1448, %r1449, 1;
	mov.b64 	%rd1509, {%r1841, %r1840};
	shf.r.wrap.b32 	%r1842, %r1449, %r1448, 8;
	shf.r.wrap.b32 	%r1843, %r1448, %r1449, 8;
	mov.b64 	%rd1510, {%r1843, %r1842};
	shr.u64 	%rd1511, %rd937, 7;
	xor.b64  	%rd1512, %rd1509, %rd1511;
	xor.b64  	%rd1513, %rd1512, %rd1510;
	add.s64 	%rd1514, %rd1425, %rd924;
	add.s64 	%rd1515, %rd1514, %rd1508;
	add.s64 	%rd1516, %rd1515, %rd1513;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1844,%dummy}, %rd1503;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1845}, %rd1503;
	}
	shf.r.wrap.b32 	%r1846, %r1845, %r1844, 19;
	shf.r.wrap.b32 	%r1847, %r1844, %r1845, 19;
	mov.b64 	%rd1517, {%r1847, %r1846};
	shf.l.wrap.b32 	%r1848, %r1844, %r1845, 3;
	shf.l.wrap.b32 	%r1849, %r1845, %r1844, 3;
	mov.b64 	%rd1518, {%r1849, %r1848};
	shr.u64 	%rd1519, %rd1503, 6;
	xor.b64  	%rd1520, %rd1517, %rd1519;
	xor.b64  	%rd1521, %rd1520, %rd1518;
	shf.r.wrap.b32 	%r1850, %r1459, %r1458, 1;
	shf.r.wrap.b32 	%r1851, %r1458, %r1459, 1;
	mov.b64 	%rd1522, {%r1851, %r1850};
	shf.r.wrap.b32 	%r1852, %r1459, %r1458, 8;
	shf.r.wrap.b32 	%r1853, %r1458, %r1459, 8;
	mov.b64 	%rd1523, {%r1853, %r1852};
	shr.u64 	%rd1524, %rd950, 7;
	xor.b64  	%rd1525, %rd1522, %rd1524;
	xor.b64  	%rd1526, %rd1525, %rd1523;
	add.s64 	%rd1527, %rd1438, %rd937;
	add.s64 	%rd1528, %rd1527, %rd1521;
	add.s64 	%rd1529, %rd1528, %rd1526;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1854,%dummy}, %rd1516;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1855}, %rd1516;
	}
	shf.r.wrap.b32 	%r1856, %r1855, %r1854, 19;
	shf.r.wrap.b32 	%r1857, %r1854, %r1855, 19;
	mov.b64 	%rd1530, {%r1857, %r1856};
	shf.l.wrap.b32 	%r1858, %r1854, %r1855, 3;
	shf.l.wrap.b32 	%r1859, %r1855, %r1854, 3;
	mov.b64 	%rd1531, {%r1859, %r1858};
	shr.u64 	%rd1532, %rd1516, 6;
	xor.b64  	%rd1533, %rd1530, %rd1532;
	xor.b64  	%rd1534, %rd1533, %rd1531;
	shf.r.wrap.b32 	%r1860, %r1725, %r1724, 1;
	shf.r.wrap.b32 	%r1861, %r1724, %r1725, 1;
	mov.b64 	%rd1535, {%r1861, %r1860};
	shf.r.wrap.b32 	%r1862, %r1725, %r1724, 8;
	shf.r.wrap.b32 	%r1863, %r1724, %r1725, 8;
	mov.b64 	%rd1536, {%r1863, %r1862};
	shr.u64 	%rd1537, %rd963, 7;
	xor.b64  	%rd1538, %rd1535, %rd1537;
	xor.b64  	%rd1539, %rd1538, %rd1536;
	add.s64 	%rd1540, %rd1451, %rd950;
	add.s64 	%rd1541, %rd1540, %rd1534;
	add.s64 	%rd1542, %rd1541, %rd1539;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1864,%dummy}, %rd1529;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1865}, %rd1529;
	}
	shf.r.wrap.b32 	%r1866, %r1865, %r1864, 19;
	shf.r.wrap.b32 	%r1867, %r1864, %r1865, 19;
	mov.b64 	%rd1543, {%r1867, %r1866};
	shf.l.wrap.b32 	%r1868, %r1864, %r1865, 3;
	shf.l.wrap.b32 	%r1869, %r1865, %r1864, 3;
	mov.b64 	%rd1544, {%r1869, %r1868};
	shr.u64 	%rd1545, %rd1529, 6;
	xor.b64  	%rd1546, %rd1543, %rd1545;
	xor.b64  	%rd1547, %rd1546, %rd1544;
	shf.r.wrap.b32 	%r1870, %r1735, %r1734, 1;
	shf.r.wrap.b32 	%r1871, %r1734, %r1735, 1;
	mov.b64 	%rd1548, {%r1871, %r1870};
	shf.r.wrap.b32 	%r1872, %r1735, %r1734, 8;
	shf.r.wrap.b32 	%r1873, %r1734, %r1735, 8;
	mov.b64 	%rd1549, {%r1873, %r1872};
	shr.u64 	%rd1550, %rd976, 7;
	xor.b64  	%rd1551, %rd1548, %rd1550;
	xor.b64  	%rd1552, %rd1551, %rd1549;
	add.s64 	%rd1553, %rd1464, %rd963;
	add.s64 	%rd1554, %rd1553, %rd1547;
	add.s64 	%rd1555, %rd1554, %rd1552;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1874,%dummy}, %rd1542;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1875}, %rd1542;
	}
	shf.r.wrap.b32 	%r1876, %r1875, %r1874, 19;
	shf.r.wrap.b32 	%r1877, %r1874, %r1875, 19;
	mov.b64 	%rd1556, {%r1877, %r1876};
	shf.l.wrap.b32 	%r1878, %r1874, %r1875, 3;
	shf.l.wrap.b32 	%r1879, %r1875, %r1874, 3;
	mov.b64 	%rd1557, {%r1879, %r1878};
	shr.u64 	%rd1558, %rd1542, 6;
	xor.b64  	%rd1559, %rd1556, %rd1558;
	xor.b64  	%rd1560, %rd1559, %rd1557;
	shf.r.wrap.b32 	%r1880, %r1745, %r1744, 1;
	shf.r.wrap.b32 	%r1881, %r1744, %r1745, 1;
	mov.b64 	%rd1561, {%r1881, %r1880};
	shf.r.wrap.b32 	%r1882, %r1745, %r1744, 8;
	shf.r.wrap.b32 	%r1883, %r1744, %r1745, 8;
	mov.b64 	%rd1562, {%r1883, %r1882};
	shr.u64 	%rd1563, %rd1373, 7;
	xor.b64  	%rd1564, %rd1561, %rd1563;
	xor.b64  	%rd1565, %rd1564, %rd1562;
	add.s64 	%rd1566, %rd1477, %rd976;
	add.s64 	%rd1567, %rd1566, %rd1560;
	add.s64 	%rd1568, %rd1567, %rd1565;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1884,%dummy}, %rd1349;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1885}, %rd1349;
	}
	shf.r.wrap.b32 	%r1886, %r1885, %r1884, 14;
	shf.r.wrap.b32 	%r1887, %r1884, %r1885, 14;
	mov.b64 	%rd1569, {%r1887, %r1886};
	shf.r.wrap.b32 	%r1888, %r1885, %r1884, 18;
	shf.r.wrap.b32 	%r1889, %r1884, %r1885, 18;
	mov.b64 	%rd1570, {%r1889, %r1888};
	xor.b64  	%rd1571, %rd1570, %rd1569;
	shf.l.wrap.b32 	%r1890, %r1884, %r1885, 23;
	shf.l.wrap.b32 	%r1891, %r1885, %r1884, 23;
	mov.b64 	%rd1572, {%r1891, %r1890};
	xor.b64  	%rd1573, %rd1571, %rd1572;
	xor.b64  	%rd1574, %rd1325, %rd1301;
	and.b64  	%rd1575, %rd1574, %rd1349;
	xor.b64  	%rd1576, %rd1575, %rd1301;
	add.s64 	%rd1577, %rd1576, %rd1277;
	add.s64 	%rd1578, %rd1577, %rd1373;
	ld.const.u64 	%rd8821, [k_sha512+256];
	add.s64 	%rd1579, %rd1578, %rd8821;
	add.s64 	%rd1580, %rd1579, %rd1573;
	add.s64 	%rd1581, %rd1580, %rd1288;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1892,%dummy}, %rd1360;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1893}, %rd1360;
	}
	shf.r.wrap.b32 	%r1894, %r1893, %r1892, 28;
	shf.r.wrap.b32 	%r1895, %r1892, %r1893, 28;
	mov.b64 	%rd1582, {%r1895, %r1894};
	shf.l.wrap.b32 	%r1896, %r1892, %r1893, 30;
	shf.l.wrap.b32 	%r1897, %r1893, %r1892, 30;
	mov.b64 	%rd1583, {%r1897, %r1896};
	xor.b64  	%rd1584, %rd1583, %rd1582;
	shf.l.wrap.b32 	%r1898, %r1892, %r1893, 25;
	shf.l.wrap.b32 	%r1899, %r1893, %r1892, 25;
	mov.b64 	%rd1585, {%r1899, %r1898};
	xor.b64  	%rd1586, %rd1584, %rd1585;
	xor.b64  	%rd1587, %rd1360, %rd1312;
	xor.b64  	%rd1588, %rd1360, %rd1336;
	and.b64  	%rd1589, %rd1588, %rd1587;
	xor.b64  	%rd1590, %rd1589, %rd1360;
	add.s64 	%rd1591, %rd1580, %rd1590;
	add.s64 	%rd1592, %rd1591, %rd1586;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1900,%dummy}, %rd1581;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1901}, %rd1581;
	}
	shf.r.wrap.b32 	%r1902, %r1901, %r1900, 14;
	shf.r.wrap.b32 	%r1903, %r1900, %r1901, 14;
	mov.b64 	%rd1593, {%r1903, %r1902};
	shf.r.wrap.b32 	%r1904, %r1901, %r1900, 18;
	shf.r.wrap.b32 	%r1905, %r1900, %r1901, 18;
	mov.b64 	%rd1594, {%r1905, %r1904};
	xor.b64  	%rd1595, %rd1594, %rd1593;
	shf.l.wrap.b32 	%r1906, %r1900, %r1901, 23;
	shf.l.wrap.b32 	%r1907, %r1901, %r1900, 23;
	mov.b64 	%rd1596, {%r1907, %r1906};
	xor.b64  	%rd1597, %rd1595, %rd1596;
	xor.b64  	%rd1598, %rd1349, %rd1325;
	and.b64  	%rd1599, %rd1581, %rd1598;
	xor.b64  	%rd1600, %rd1599, %rd1325;
	add.s64 	%rd1601, %rd1386, %rd1301;
	ld.const.u64 	%rd8820, [k_sha512+264];
	add.s64 	%rd1602, %rd1601, %rd8820;
	add.s64 	%rd1603, %rd1602, %rd1600;
	add.s64 	%rd1604, %rd1603, %rd1597;
	add.s64 	%rd1605, %rd1604, %rd1312;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1908,%dummy}, %rd1592;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1909}, %rd1592;
	}
	shf.r.wrap.b32 	%r1910, %r1909, %r1908, 28;
	shf.r.wrap.b32 	%r1911, %r1908, %r1909, 28;
	mov.b64 	%rd1606, {%r1911, %r1910};
	shf.l.wrap.b32 	%r1912, %r1908, %r1909, 30;
	shf.l.wrap.b32 	%r1913, %r1909, %r1908, 30;
	mov.b64 	%rd1607, {%r1913, %r1912};
	xor.b64  	%rd1608, %rd1607, %rd1606;
	shf.l.wrap.b32 	%r1914, %r1908, %r1909, 25;
	shf.l.wrap.b32 	%r1915, %r1909, %r1908, 25;
	mov.b64 	%rd1609, {%r1915, %r1914};
	xor.b64  	%rd1610, %rd1608, %rd1609;
	xor.b64  	%rd1611, %rd1592, %rd1336;
	xor.b64  	%rd1612, %rd1592, %rd1360;
	and.b64  	%rd1613, %rd1612, %rd1611;
	xor.b64  	%rd1614, %rd1613, %rd1592;
	add.s64 	%rd1615, %rd1604, %rd1614;
	add.s64 	%rd1616, %rd1615, %rd1610;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1916,%dummy}, %rd1605;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1917}, %rd1605;
	}
	shf.r.wrap.b32 	%r1918, %r1917, %r1916, 14;
	shf.r.wrap.b32 	%r1919, %r1916, %r1917, 14;
	mov.b64 	%rd1617, {%r1919, %r1918};
	shf.r.wrap.b32 	%r1920, %r1917, %r1916, 18;
	shf.r.wrap.b32 	%r1921, %r1916, %r1917, 18;
	mov.b64 	%rd1618, {%r1921, %r1920};
	xor.b64  	%rd1619, %rd1618, %rd1617;
	shf.l.wrap.b32 	%r1922, %r1916, %r1917, 23;
	shf.l.wrap.b32 	%r1923, %r1917, %r1916, 23;
	mov.b64 	%rd1620, {%r1923, %r1922};
	xor.b64  	%rd1621, %rd1619, %rd1620;
	xor.b64  	%rd1622, %rd1581, %rd1349;
	and.b64  	%rd1623, %rd1605, %rd1622;
	xor.b64  	%rd1624, %rd1623, %rd1349;
	add.s64 	%rd1625, %rd1399, %rd1325;
	ld.const.u64 	%rd8819, [k_sha512+272];
	add.s64 	%rd1626, %rd1625, %rd8819;
	add.s64 	%rd1627, %rd1626, %rd1624;
	add.s64 	%rd1628, %rd1627, %rd1621;
	add.s64 	%rd1629, %rd1628, %rd1336;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1924,%dummy}, %rd1616;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1925}, %rd1616;
	}
	shf.r.wrap.b32 	%r1926, %r1925, %r1924, 28;
	shf.r.wrap.b32 	%r1927, %r1924, %r1925, 28;
	mov.b64 	%rd1630, {%r1927, %r1926};
	shf.l.wrap.b32 	%r1928, %r1924, %r1925, 30;
	shf.l.wrap.b32 	%r1929, %r1925, %r1924, 30;
	mov.b64 	%rd1631, {%r1929, %r1928};
	xor.b64  	%rd1632, %rd1631, %rd1630;
	shf.l.wrap.b32 	%r1930, %r1924, %r1925, 25;
	shf.l.wrap.b32 	%r1931, %r1925, %r1924, 25;
	mov.b64 	%rd1633, {%r1931, %r1930};
	xor.b64  	%rd1634, %rd1632, %rd1633;
	xor.b64  	%rd1635, %rd1616, %rd1360;
	xor.b64  	%rd1636, %rd1616, %rd1592;
	and.b64  	%rd1637, %rd1636, %rd1635;
	xor.b64  	%rd1638, %rd1637, %rd1616;
	add.s64 	%rd1639, %rd1628, %rd1638;
	add.s64 	%rd1640, %rd1639, %rd1634;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1932,%dummy}, %rd1629;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1933}, %rd1629;
	}
	shf.r.wrap.b32 	%r1934, %r1933, %r1932, 14;
	shf.r.wrap.b32 	%r1935, %r1932, %r1933, 14;
	mov.b64 	%rd1641, {%r1935, %r1934};
	shf.r.wrap.b32 	%r1936, %r1933, %r1932, 18;
	shf.r.wrap.b32 	%r1937, %r1932, %r1933, 18;
	mov.b64 	%rd1642, {%r1937, %r1936};
	xor.b64  	%rd1643, %rd1642, %rd1641;
	shf.l.wrap.b32 	%r1938, %r1932, %r1933, 23;
	shf.l.wrap.b32 	%r1939, %r1933, %r1932, 23;
	mov.b64 	%rd1644, {%r1939, %r1938};
	xor.b64  	%rd1645, %rd1643, %rd1644;
	xor.b64  	%rd1646, %rd1605, %rd1581;
	and.b64  	%rd1647, %rd1629, %rd1646;
	xor.b64  	%rd1648, %rd1647, %rd1581;
	add.s64 	%rd1649, %rd1412, %rd1349;
	ld.const.u64 	%rd8818, [k_sha512+280];
	add.s64 	%rd1650, %rd1649, %rd8818;
	add.s64 	%rd1651, %rd1650, %rd1648;
	add.s64 	%rd1652, %rd1651, %rd1645;
	add.s64 	%rd1653, %rd1652, %rd1360;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1940,%dummy}, %rd1640;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1941}, %rd1640;
	}
	shf.r.wrap.b32 	%r1942, %r1941, %r1940, 28;
	shf.r.wrap.b32 	%r1943, %r1940, %r1941, 28;
	mov.b64 	%rd1654, {%r1943, %r1942};
	shf.l.wrap.b32 	%r1944, %r1940, %r1941, 30;
	shf.l.wrap.b32 	%r1945, %r1941, %r1940, 30;
	mov.b64 	%rd1655, {%r1945, %r1944};
	xor.b64  	%rd1656, %rd1655, %rd1654;
	shf.l.wrap.b32 	%r1946, %r1940, %r1941, 25;
	shf.l.wrap.b32 	%r1947, %r1941, %r1940, 25;
	mov.b64 	%rd1657, {%r1947, %r1946};
	xor.b64  	%rd1658, %rd1656, %rd1657;
	xor.b64  	%rd1659, %rd1640, %rd1592;
	xor.b64  	%rd1660, %rd1640, %rd1616;
	and.b64  	%rd1661, %rd1660, %rd1659;
	xor.b64  	%rd1662, %rd1661, %rd1640;
	add.s64 	%rd1663, %rd1652, %rd1662;
	add.s64 	%rd1664, %rd1663, %rd1658;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1948,%dummy}, %rd1653;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1949}, %rd1653;
	}
	shf.r.wrap.b32 	%r1950, %r1949, %r1948, 14;
	shf.r.wrap.b32 	%r1951, %r1948, %r1949, 14;
	mov.b64 	%rd1665, {%r1951, %r1950};
	shf.r.wrap.b32 	%r1952, %r1949, %r1948, 18;
	shf.r.wrap.b32 	%r1953, %r1948, %r1949, 18;
	mov.b64 	%rd1666, {%r1953, %r1952};
	xor.b64  	%rd1667, %rd1666, %rd1665;
	shf.l.wrap.b32 	%r1954, %r1948, %r1949, 23;
	shf.l.wrap.b32 	%r1955, %r1949, %r1948, 23;
	mov.b64 	%rd1668, {%r1955, %r1954};
	xor.b64  	%rd1669, %rd1667, %rd1668;
	xor.b64  	%rd1670, %rd1629, %rd1605;
	and.b64  	%rd1671, %rd1653, %rd1670;
	xor.b64  	%rd1672, %rd1671, %rd1605;
	add.s64 	%rd1673, %rd1581, %rd1425;
	ld.const.u64 	%rd8817, [k_sha512+288];
	add.s64 	%rd1674, %rd1673, %rd8817;
	add.s64 	%rd1675, %rd1674, %rd1672;
	add.s64 	%rd1676, %rd1675, %rd1669;
	add.s64 	%rd1677, %rd1676, %rd1592;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1956,%dummy}, %rd1664;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1957}, %rd1664;
	}
	shf.r.wrap.b32 	%r1958, %r1957, %r1956, 28;
	shf.r.wrap.b32 	%r1959, %r1956, %r1957, 28;
	mov.b64 	%rd1678, {%r1959, %r1958};
	shf.l.wrap.b32 	%r1960, %r1956, %r1957, 30;
	shf.l.wrap.b32 	%r1961, %r1957, %r1956, 30;
	mov.b64 	%rd1679, {%r1961, %r1960};
	xor.b64  	%rd1680, %rd1679, %rd1678;
	shf.l.wrap.b32 	%r1962, %r1956, %r1957, 25;
	shf.l.wrap.b32 	%r1963, %r1957, %r1956, 25;
	mov.b64 	%rd1681, {%r1963, %r1962};
	xor.b64  	%rd1682, %rd1680, %rd1681;
	xor.b64  	%rd1683, %rd1664, %rd1616;
	xor.b64  	%rd1684, %rd1664, %rd1640;
	and.b64  	%rd1685, %rd1684, %rd1683;
	xor.b64  	%rd1686, %rd1685, %rd1664;
	add.s64 	%rd1687, %rd1676, %rd1686;
	add.s64 	%rd1688, %rd1687, %rd1682;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1964,%dummy}, %rd1677;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1965}, %rd1677;
	}
	shf.r.wrap.b32 	%r1966, %r1965, %r1964, 14;
	shf.r.wrap.b32 	%r1967, %r1964, %r1965, 14;
	mov.b64 	%rd1689, {%r1967, %r1966};
	shf.r.wrap.b32 	%r1968, %r1965, %r1964, 18;
	shf.r.wrap.b32 	%r1969, %r1964, %r1965, 18;
	mov.b64 	%rd1690, {%r1969, %r1968};
	xor.b64  	%rd1691, %rd1690, %rd1689;
	shf.l.wrap.b32 	%r1970, %r1964, %r1965, 23;
	shf.l.wrap.b32 	%r1971, %r1965, %r1964, 23;
	mov.b64 	%rd1692, {%r1971, %r1970};
	xor.b64  	%rd1693, %rd1691, %rd1692;
	xor.b64  	%rd1694, %rd1653, %rd1629;
	and.b64  	%rd1695, %rd1677, %rd1694;
	xor.b64  	%rd1696, %rd1695, %rd1629;
	add.s64 	%rd1697, %rd1605, %rd1438;
	ld.const.u64 	%rd8816, [k_sha512+296];
	add.s64 	%rd1698, %rd1697, %rd8816;
	add.s64 	%rd1699, %rd1698, %rd1696;
	add.s64 	%rd1700, %rd1699, %rd1693;
	add.s64 	%rd1701, %rd1700, %rd1616;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1972,%dummy}, %rd1688;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1973}, %rd1688;
	}
	shf.r.wrap.b32 	%r1974, %r1973, %r1972, 28;
	shf.r.wrap.b32 	%r1975, %r1972, %r1973, 28;
	mov.b64 	%rd1702, {%r1975, %r1974};
	shf.l.wrap.b32 	%r1976, %r1972, %r1973, 30;
	shf.l.wrap.b32 	%r1977, %r1973, %r1972, 30;
	mov.b64 	%rd1703, {%r1977, %r1976};
	xor.b64  	%rd1704, %rd1703, %rd1702;
	shf.l.wrap.b32 	%r1978, %r1972, %r1973, 25;
	shf.l.wrap.b32 	%r1979, %r1973, %r1972, 25;
	mov.b64 	%rd1705, {%r1979, %r1978};
	xor.b64  	%rd1706, %rd1704, %rd1705;
	xor.b64  	%rd1707, %rd1688, %rd1640;
	xor.b64  	%rd1708, %rd1688, %rd1664;
	and.b64  	%rd1709, %rd1708, %rd1707;
	xor.b64  	%rd1710, %rd1709, %rd1688;
	add.s64 	%rd1711, %rd1700, %rd1710;
	add.s64 	%rd1712, %rd1711, %rd1706;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1980,%dummy}, %rd1701;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1981}, %rd1701;
	}
	shf.r.wrap.b32 	%r1982, %r1981, %r1980, 14;
	shf.r.wrap.b32 	%r1983, %r1980, %r1981, 14;
	mov.b64 	%rd1713, {%r1983, %r1982};
	shf.r.wrap.b32 	%r1984, %r1981, %r1980, 18;
	shf.r.wrap.b32 	%r1985, %r1980, %r1981, 18;
	mov.b64 	%rd1714, {%r1985, %r1984};
	xor.b64  	%rd1715, %rd1714, %rd1713;
	shf.l.wrap.b32 	%r1986, %r1980, %r1981, 23;
	shf.l.wrap.b32 	%r1987, %r1981, %r1980, 23;
	mov.b64 	%rd1716, {%r1987, %r1986};
	xor.b64  	%rd1717, %rd1715, %rd1716;
	xor.b64  	%rd1718, %rd1677, %rd1653;
	and.b64  	%rd1719, %rd1701, %rd1718;
	xor.b64  	%rd1720, %rd1719, %rd1653;
	add.s64 	%rd1721, %rd1629, %rd1451;
	ld.const.u64 	%rd8815, [k_sha512+304];
	add.s64 	%rd1722, %rd1721, %rd8815;
	add.s64 	%rd1723, %rd1722, %rd1720;
	add.s64 	%rd1724, %rd1723, %rd1717;
	add.s64 	%rd1725, %rd1724, %rd1640;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1988,%dummy}, %rd1712;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1989}, %rd1712;
	}
	shf.r.wrap.b32 	%r1990, %r1989, %r1988, 28;
	shf.r.wrap.b32 	%r1991, %r1988, %r1989, 28;
	mov.b64 	%rd1726, {%r1991, %r1990};
	shf.l.wrap.b32 	%r1992, %r1988, %r1989, 30;
	shf.l.wrap.b32 	%r1993, %r1989, %r1988, 30;
	mov.b64 	%rd1727, {%r1993, %r1992};
	xor.b64  	%rd1728, %rd1727, %rd1726;
	shf.l.wrap.b32 	%r1994, %r1988, %r1989, 25;
	shf.l.wrap.b32 	%r1995, %r1989, %r1988, 25;
	mov.b64 	%rd1729, {%r1995, %r1994};
	xor.b64  	%rd1730, %rd1728, %rd1729;
	xor.b64  	%rd1731, %rd1712, %rd1664;
	xor.b64  	%rd1732, %rd1712, %rd1688;
	and.b64  	%rd1733, %rd1732, %rd1731;
	xor.b64  	%rd1734, %rd1733, %rd1712;
	add.s64 	%rd1735, %rd1724, %rd1734;
	add.s64 	%rd1736, %rd1735, %rd1730;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1996,%dummy}, %rd1725;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1997}, %rd1725;
	}
	shf.r.wrap.b32 	%r1998, %r1997, %r1996, 14;
	shf.r.wrap.b32 	%r1999, %r1996, %r1997, 14;
	mov.b64 	%rd1737, {%r1999, %r1998};
	shf.r.wrap.b32 	%r2000, %r1997, %r1996, 18;
	shf.r.wrap.b32 	%r2001, %r1996, %r1997, 18;
	mov.b64 	%rd1738, {%r2001, %r2000};
	xor.b64  	%rd1739, %rd1738, %rd1737;
	shf.l.wrap.b32 	%r2002, %r1996, %r1997, 23;
	shf.l.wrap.b32 	%r2003, %r1997, %r1996, 23;
	mov.b64 	%rd1740, {%r2003, %r2002};
	xor.b64  	%rd1741, %rd1739, %rd1740;
	xor.b64  	%rd1742, %rd1701, %rd1677;
	and.b64  	%rd1743, %rd1725, %rd1742;
	xor.b64  	%rd1744, %rd1743, %rd1677;
	add.s64 	%rd1745, %rd1653, %rd1464;
	ld.const.u64 	%rd8814, [k_sha512+312];
	add.s64 	%rd1746, %rd1745, %rd8814;
	add.s64 	%rd1747, %rd1746, %rd1744;
	add.s64 	%rd1748, %rd1747, %rd1741;
	add.s64 	%rd1749, %rd1748, %rd1664;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2004,%dummy}, %rd1736;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2005}, %rd1736;
	}
	shf.r.wrap.b32 	%r2006, %r2005, %r2004, 28;
	shf.r.wrap.b32 	%r2007, %r2004, %r2005, 28;
	mov.b64 	%rd1750, {%r2007, %r2006};
	shf.l.wrap.b32 	%r2008, %r2004, %r2005, 30;
	shf.l.wrap.b32 	%r2009, %r2005, %r2004, 30;
	mov.b64 	%rd1751, {%r2009, %r2008};
	xor.b64  	%rd1752, %rd1751, %rd1750;
	shf.l.wrap.b32 	%r2010, %r2004, %r2005, 25;
	shf.l.wrap.b32 	%r2011, %r2005, %r2004, 25;
	mov.b64 	%rd1753, {%r2011, %r2010};
	xor.b64  	%rd1754, %rd1752, %rd1753;
	xor.b64  	%rd1755, %rd1736, %rd1688;
	xor.b64  	%rd1756, %rd1736, %rd1712;
	and.b64  	%rd1757, %rd1756, %rd1755;
	xor.b64  	%rd1758, %rd1757, %rd1736;
	add.s64 	%rd1759, %rd1748, %rd1758;
	add.s64 	%rd1760, %rd1759, %rd1754;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2012,%dummy}, %rd1749;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2013}, %rd1749;
	}
	shf.r.wrap.b32 	%r2014, %r2013, %r2012, 14;
	shf.r.wrap.b32 	%r2015, %r2012, %r2013, 14;
	mov.b64 	%rd1761, {%r2015, %r2014};
	shf.r.wrap.b32 	%r2016, %r2013, %r2012, 18;
	shf.r.wrap.b32 	%r2017, %r2012, %r2013, 18;
	mov.b64 	%rd1762, {%r2017, %r2016};
	xor.b64  	%rd1763, %rd1762, %rd1761;
	shf.l.wrap.b32 	%r2018, %r2012, %r2013, 23;
	shf.l.wrap.b32 	%r2019, %r2013, %r2012, 23;
	mov.b64 	%rd1764, {%r2019, %r2018};
	xor.b64  	%rd1765, %rd1763, %rd1764;
	xor.b64  	%rd1766, %rd1725, %rd1701;
	and.b64  	%rd1767, %rd1749, %rd1766;
	xor.b64  	%rd1768, %rd1767, %rd1701;
	add.s64 	%rd1769, %rd1677, %rd1477;
	ld.const.u64 	%rd8813, [k_sha512+320];
	add.s64 	%rd1770, %rd1769, %rd8813;
	add.s64 	%rd1771, %rd1770, %rd1768;
	add.s64 	%rd1772, %rd1771, %rd1765;
	add.s64 	%rd1773, %rd1772, %rd1688;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2020,%dummy}, %rd1760;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2021}, %rd1760;
	}
	shf.r.wrap.b32 	%r2022, %r2021, %r2020, 28;
	shf.r.wrap.b32 	%r2023, %r2020, %r2021, 28;
	mov.b64 	%rd1774, {%r2023, %r2022};
	shf.l.wrap.b32 	%r2024, %r2020, %r2021, 30;
	shf.l.wrap.b32 	%r2025, %r2021, %r2020, 30;
	mov.b64 	%rd1775, {%r2025, %r2024};
	xor.b64  	%rd1776, %rd1775, %rd1774;
	shf.l.wrap.b32 	%r2026, %r2020, %r2021, 25;
	shf.l.wrap.b32 	%r2027, %r2021, %r2020, 25;
	mov.b64 	%rd1777, {%r2027, %r2026};
	xor.b64  	%rd1778, %rd1776, %rd1777;
	xor.b64  	%rd1779, %rd1760, %rd1712;
	xor.b64  	%rd1780, %rd1760, %rd1736;
	and.b64  	%rd1781, %rd1780, %rd1779;
	xor.b64  	%rd1782, %rd1781, %rd1760;
	add.s64 	%rd1783, %rd1772, %rd1782;
	add.s64 	%rd1784, %rd1783, %rd1778;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2028,%dummy}, %rd1773;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2029}, %rd1773;
	}
	shf.r.wrap.b32 	%r2030, %r2029, %r2028, 14;
	shf.r.wrap.b32 	%r2031, %r2028, %r2029, 14;
	mov.b64 	%rd1785, {%r2031, %r2030};
	shf.r.wrap.b32 	%r2032, %r2029, %r2028, 18;
	shf.r.wrap.b32 	%r2033, %r2028, %r2029, 18;
	mov.b64 	%rd1786, {%r2033, %r2032};
	xor.b64  	%rd1787, %rd1786, %rd1785;
	shf.l.wrap.b32 	%r2034, %r2028, %r2029, 23;
	shf.l.wrap.b32 	%r2035, %r2029, %r2028, 23;
	mov.b64 	%rd1788, {%r2035, %r2034};
	xor.b64  	%rd1789, %rd1787, %rd1788;
	xor.b64  	%rd1790, %rd1749, %rd1725;
	and.b64  	%rd1791, %rd1773, %rd1790;
	xor.b64  	%rd1792, %rd1791, %rd1725;
	add.s64 	%rd1793, %rd1701, %rd1490;
	ld.const.u64 	%rd8812, [k_sha512+328];
	add.s64 	%rd1794, %rd1793, %rd8812;
	add.s64 	%rd1795, %rd1794, %rd1792;
	add.s64 	%rd1796, %rd1795, %rd1789;
	add.s64 	%rd1797, %rd1796, %rd1712;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2036,%dummy}, %rd1784;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2037}, %rd1784;
	}
	shf.r.wrap.b32 	%r2038, %r2037, %r2036, 28;
	shf.r.wrap.b32 	%r2039, %r2036, %r2037, 28;
	mov.b64 	%rd1798, {%r2039, %r2038};
	shf.l.wrap.b32 	%r2040, %r2036, %r2037, 30;
	shf.l.wrap.b32 	%r2041, %r2037, %r2036, 30;
	mov.b64 	%rd1799, {%r2041, %r2040};
	xor.b64  	%rd1800, %rd1799, %rd1798;
	shf.l.wrap.b32 	%r2042, %r2036, %r2037, 25;
	shf.l.wrap.b32 	%r2043, %r2037, %r2036, 25;
	mov.b64 	%rd1801, {%r2043, %r2042};
	xor.b64  	%rd1802, %rd1800, %rd1801;
	xor.b64  	%rd1803, %rd1784, %rd1736;
	xor.b64  	%rd1804, %rd1784, %rd1760;
	and.b64  	%rd1805, %rd1804, %rd1803;
	xor.b64  	%rd1806, %rd1805, %rd1784;
	add.s64 	%rd1807, %rd1796, %rd1806;
	add.s64 	%rd1808, %rd1807, %rd1802;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2044,%dummy}, %rd1797;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2045}, %rd1797;
	}
	shf.r.wrap.b32 	%r2046, %r2045, %r2044, 14;
	shf.r.wrap.b32 	%r2047, %r2044, %r2045, 14;
	mov.b64 	%rd1809, {%r2047, %r2046};
	shf.r.wrap.b32 	%r2048, %r2045, %r2044, 18;
	shf.r.wrap.b32 	%r2049, %r2044, %r2045, 18;
	mov.b64 	%rd1810, {%r2049, %r2048};
	xor.b64  	%rd1811, %rd1810, %rd1809;
	shf.l.wrap.b32 	%r2050, %r2044, %r2045, 23;
	shf.l.wrap.b32 	%r2051, %r2045, %r2044, 23;
	mov.b64 	%rd1812, {%r2051, %r2050};
	xor.b64  	%rd1813, %rd1811, %rd1812;
	xor.b64  	%rd1814, %rd1773, %rd1749;
	and.b64  	%rd1815, %rd1797, %rd1814;
	xor.b64  	%rd1816, %rd1815, %rd1749;
	add.s64 	%rd1817, %rd1725, %rd1503;
	ld.const.u64 	%rd8811, [k_sha512+336];
	add.s64 	%rd1818, %rd1817, %rd8811;
	add.s64 	%rd1819, %rd1818, %rd1816;
	add.s64 	%rd1820, %rd1819, %rd1813;
	add.s64 	%rd1821, %rd1820, %rd1736;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2052,%dummy}, %rd1808;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2053}, %rd1808;
	}
	shf.r.wrap.b32 	%r2054, %r2053, %r2052, 28;
	shf.r.wrap.b32 	%r2055, %r2052, %r2053, 28;
	mov.b64 	%rd1822, {%r2055, %r2054};
	shf.l.wrap.b32 	%r2056, %r2052, %r2053, 30;
	shf.l.wrap.b32 	%r2057, %r2053, %r2052, 30;
	mov.b64 	%rd1823, {%r2057, %r2056};
	xor.b64  	%rd1824, %rd1823, %rd1822;
	shf.l.wrap.b32 	%r2058, %r2052, %r2053, 25;
	shf.l.wrap.b32 	%r2059, %r2053, %r2052, 25;
	mov.b64 	%rd1825, {%r2059, %r2058};
	xor.b64  	%rd1826, %rd1824, %rd1825;
	xor.b64  	%rd1827, %rd1808, %rd1760;
	xor.b64  	%rd1828, %rd1808, %rd1784;
	and.b64  	%rd1829, %rd1828, %rd1827;
	xor.b64  	%rd1830, %rd1829, %rd1808;
	add.s64 	%rd1831, %rd1820, %rd1830;
	add.s64 	%rd1832, %rd1831, %rd1826;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2060,%dummy}, %rd1821;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2061}, %rd1821;
	}
	shf.r.wrap.b32 	%r2062, %r2061, %r2060, 14;
	shf.r.wrap.b32 	%r2063, %r2060, %r2061, 14;
	mov.b64 	%rd1833, {%r2063, %r2062};
	shf.r.wrap.b32 	%r2064, %r2061, %r2060, 18;
	shf.r.wrap.b32 	%r2065, %r2060, %r2061, 18;
	mov.b64 	%rd1834, {%r2065, %r2064};
	xor.b64  	%rd1835, %rd1834, %rd1833;
	shf.l.wrap.b32 	%r2066, %r2060, %r2061, 23;
	shf.l.wrap.b32 	%r2067, %r2061, %r2060, 23;
	mov.b64 	%rd1836, {%r2067, %r2066};
	xor.b64  	%rd1837, %rd1835, %rd1836;
	xor.b64  	%rd1838, %rd1797, %rd1773;
	and.b64  	%rd1839, %rd1821, %rd1838;
	xor.b64  	%rd1840, %rd1839, %rd1773;
	add.s64 	%rd1841, %rd1749, %rd1516;
	ld.const.u64 	%rd8810, [k_sha512+344];
	add.s64 	%rd1842, %rd1841, %rd8810;
	add.s64 	%rd1843, %rd1842, %rd1840;
	add.s64 	%rd1844, %rd1843, %rd1837;
	add.s64 	%rd1845, %rd1844, %rd1760;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2068,%dummy}, %rd1832;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2069}, %rd1832;
	}
	shf.r.wrap.b32 	%r2070, %r2069, %r2068, 28;
	shf.r.wrap.b32 	%r2071, %r2068, %r2069, 28;
	mov.b64 	%rd1846, {%r2071, %r2070};
	shf.l.wrap.b32 	%r2072, %r2068, %r2069, 30;
	shf.l.wrap.b32 	%r2073, %r2069, %r2068, 30;
	mov.b64 	%rd1847, {%r2073, %r2072};
	xor.b64  	%rd1848, %rd1847, %rd1846;
	shf.l.wrap.b32 	%r2074, %r2068, %r2069, 25;
	shf.l.wrap.b32 	%r2075, %r2069, %r2068, 25;
	mov.b64 	%rd1849, {%r2075, %r2074};
	xor.b64  	%rd1850, %rd1848, %rd1849;
	xor.b64  	%rd1851, %rd1832, %rd1784;
	xor.b64  	%rd1852, %rd1832, %rd1808;
	and.b64  	%rd1853, %rd1852, %rd1851;
	xor.b64  	%rd1854, %rd1853, %rd1832;
	add.s64 	%rd1855, %rd1844, %rd1854;
	add.s64 	%rd1856, %rd1855, %rd1850;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2076,%dummy}, %rd1845;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2077}, %rd1845;
	}
	shf.r.wrap.b32 	%r2078, %r2077, %r2076, 14;
	shf.r.wrap.b32 	%r2079, %r2076, %r2077, 14;
	mov.b64 	%rd1857, {%r2079, %r2078};
	shf.r.wrap.b32 	%r2080, %r2077, %r2076, 18;
	shf.r.wrap.b32 	%r2081, %r2076, %r2077, 18;
	mov.b64 	%rd1858, {%r2081, %r2080};
	xor.b64  	%rd1859, %rd1858, %rd1857;
	shf.l.wrap.b32 	%r2082, %r2076, %r2077, 23;
	shf.l.wrap.b32 	%r2083, %r2077, %r2076, 23;
	mov.b64 	%rd1860, {%r2083, %r2082};
	xor.b64  	%rd1861, %rd1859, %rd1860;
	xor.b64  	%rd1862, %rd1821, %rd1797;
	and.b64  	%rd1863, %rd1845, %rd1862;
	xor.b64  	%rd1864, %rd1863, %rd1797;
	add.s64 	%rd1865, %rd1773, %rd1529;
	ld.const.u64 	%rd8809, [k_sha512+352];
	add.s64 	%rd1866, %rd1865, %rd8809;
	add.s64 	%rd1867, %rd1866, %rd1864;
	add.s64 	%rd1868, %rd1867, %rd1861;
	add.s64 	%rd1869, %rd1868, %rd1784;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2084,%dummy}, %rd1856;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2085}, %rd1856;
	}
	shf.r.wrap.b32 	%r2086, %r2085, %r2084, 28;
	shf.r.wrap.b32 	%r2087, %r2084, %r2085, 28;
	mov.b64 	%rd1870, {%r2087, %r2086};
	shf.l.wrap.b32 	%r2088, %r2084, %r2085, 30;
	shf.l.wrap.b32 	%r2089, %r2085, %r2084, 30;
	mov.b64 	%rd1871, {%r2089, %r2088};
	xor.b64  	%rd1872, %rd1871, %rd1870;
	shf.l.wrap.b32 	%r2090, %r2084, %r2085, 25;
	shf.l.wrap.b32 	%r2091, %r2085, %r2084, 25;
	mov.b64 	%rd1873, {%r2091, %r2090};
	xor.b64  	%rd1874, %rd1872, %rd1873;
	xor.b64  	%rd1875, %rd1856, %rd1808;
	xor.b64  	%rd1876, %rd1856, %rd1832;
	and.b64  	%rd1877, %rd1876, %rd1875;
	xor.b64  	%rd1878, %rd1877, %rd1856;
	add.s64 	%rd1879, %rd1868, %rd1878;
	add.s64 	%rd1880, %rd1879, %rd1874;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2092,%dummy}, %rd1869;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2093}, %rd1869;
	}
	shf.r.wrap.b32 	%r2094, %r2093, %r2092, 14;
	shf.r.wrap.b32 	%r2095, %r2092, %r2093, 14;
	mov.b64 	%rd1881, {%r2095, %r2094};
	shf.r.wrap.b32 	%r2096, %r2093, %r2092, 18;
	shf.r.wrap.b32 	%r2097, %r2092, %r2093, 18;
	mov.b64 	%rd1882, {%r2097, %r2096};
	xor.b64  	%rd1883, %rd1882, %rd1881;
	shf.l.wrap.b32 	%r2098, %r2092, %r2093, 23;
	shf.l.wrap.b32 	%r2099, %r2093, %r2092, 23;
	mov.b64 	%rd1884, {%r2099, %r2098};
	xor.b64  	%rd1885, %rd1883, %rd1884;
	xor.b64  	%rd1886, %rd1845, %rd1821;
	and.b64  	%rd1887, %rd1869, %rd1886;
	xor.b64  	%rd1888, %rd1887, %rd1821;
	add.s64 	%rd1889, %rd1797, %rd1542;
	ld.const.u64 	%rd8808, [k_sha512+360];
	add.s64 	%rd1890, %rd1889, %rd8808;
	add.s64 	%rd1891, %rd1890, %rd1888;
	add.s64 	%rd1892, %rd1891, %rd1885;
	add.s64 	%rd1893, %rd1892, %rd1808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2100,%dummy}, %rd1880;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2101}, %rd1880;
	}
	shf.r.wrap.b32 	%r2102, %r2101, %r2100, 28;
	shf.r.wrap.b32 	%r2103, %r2100, %r2101, 28;
	mov.b64 	%rd1894, {%r2103, %r2102};
	shf.l.wrap.b32 	%r2104, %r2100, %r2101, 30;
	shf.l.wrap.b32 	%r2105, %r2101, %r2100, 30;
	mov.b64 	%rd1895, {%r2105, %r2104};
	xor.b64  	%rd1896, %rd1895, %rd1894;
	shf.l.wrap.b32 	%r2106, %r2100, %r2101, 25;
	shf.l.wrap.b32 	%r2107, %r2101, %r2100, 25;
	mov.b64 	%rd1897, {%r2107, %r2106};
	xor.b64  	%rd1898, %rd1896, %rd1897;
	xor.b64  	%rd1899, %rd1880, %rd1832;
	xor.b64  	%rd1900, %rd1880, %rd1856;
	and.b64  	%rd1901, %rd1900, %rd1899;
	xor.b64  	%rd1902, %rd1901, %rd1880;
	add.s64 	%rd1903, %rd1892, %rd1902;
	add.s64 	%rd1904, %rd1903, %rd1898;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2108,%dummy}, %rd1893;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2109}, %rd1893;
	}
	shf.r.wrap.b32 	%r2110, %r2109, %r2108, 14;
	shf.r.wrap.b32 	%r2111, %r2108, %r2109, 14;
	mov.b64 	%rd1905, {%r2111, %r2110};
	shf.r.wrap.b32 	%r2112, %r2109, %r2108, 18;
	shf.r.wrap.b32 	%r2113, %r2108, %r2109, 18;
	mov.b64 	%rd1906, {%r2113, %r2112};
	xor.b64  	%rd1907, %rd1906, %rd1905;
	shf.l.wrap.b32 	%r2114, %r2108, %r2109, 23;
	shf.l.wrap.b32 	%r2115, %r2109, %r2108, 23;
	mov.b64 	%rd1908, {%r2115, %r2114};
	xor.b64  	%rd1909, %rd1907, %rd1908;
	xor.b64  	%rd1910, %rd1869, %rd1845;
	and.b64  	%rd1911, %rd1893, %rd1910;
	xor.b64  	%rd1912, %rd1911, %rd1845;
	add.s64 	%rd1913, %rd1821, %rd1555;
	ld.const.u64 	%rd8807, [k_sha512+368];
	add.s64 	%rd1914, %rd1913, %rd8807;
	add.s64 	%rd1915, %rd1914, %rd1912;
	add.s64 	%rd1916, %rd1915, %rd1909;
	add.s64 	%rd1917, %rd1916, %rd1832;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2116,%dummy}, %rd1904;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2117}, %rd1904;
	}
	shf.r.wrap.b32 	%r2118, %r2117, %r2116, 28;
	shf.r.wrap.b32 	%r2119, %r2116, %r2117, 28;
	mov.b64 	%rd1918, {%r2119, %r2118};
	shf.l.wrap.b32 	%r2120, %r2116, %r2117, 30;
	shf.l.wrap.b32 	%r2121, %r2117, %r2116, 30;
	mov.b64 	%rd1919, {%r2121, %r2120};
	xor.b64  	%rd1920, %rd1919, %rd1918;
	shf.l.wrap.b32 	%r2122, %r2116, %r2117, 25;
	shf.l.wrap.b32 	%r2123, %r2117, %r2116, 25;
	mov.b64 	%rd1921, {%r2123, %r2122};
	xor.b64  	%rd1922, %rd1920, %rd1921;
	xor.b64  	%rd1923, %rd1904, %rd1856;
	xor.b64  	%rd1924, %rd1904, %rd1880;
	and.b64  	%rd1925, %rd1924, %rd1923;
	xor.b64  	%rd1926, %rd1925, %rd1904;
	add.s64 	%rd1927, %rd1916, %rd1926;
	add.s64 	%rd1928, %rd1927, %rd1922;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2124,%dummy}, %rd1917;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2125}, %rd1917;
	}
	shf.r.wrap.b32 	%r2126, %r2125, %r2124, 14;
	shf.r.wrap.b32 	%r2127, %r2124, %r2125, 14;
	mov.b64 	%rd1929, {%r2127, %r2126};
	shf.r.wrap.b32 	%r2128, %r2125, %r2124, 18;
	shf.r.wrap.b32 	%r2129, %r2124, %r2125, 18;
	mov.b64 	%rd1930, {%r2129, %r2128};
	xor.b64  	%rd1931, %rd1930, %rd1929;
	shf.l.wrap.b32 	%r2130, %r2124, %r2125, 23;
	shf.l.wrap.b32 	%r2131, %r2125, %r2124, 23;
	mov.b64 	%rd1932, {%r2131, %r2130};
	xor.b64  	%rd1933, %rd1931, %rd1932;
	xor.b64  	%rd1934, %rd1893, %rd1869;
	and.b64  	%rd1935, %rd1917, %rd1934;
	xor.b64  	%rd1936, %rd1935, %rd1869;
	add.s64 	%rd1937, %rd1845, %rd1568;
	ld.const.u64 	%rd8806, [k_sha512+376];
	add.s64 	%rd1938, %rd1937, %rd8806;
	add.s64 	%rd1939, %rd1938, %rd1936;
	add.s64 	%rd1940, %rd1939, %rd1933;
	add.s64 	%rd1941, %rd1940, %rd1856;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2132,%dummy}, %rd1928;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2133}, %rd1928;
	}
	shf.r.wrap.b32 	%r2134, %r2133, %r2132, 28;
	shf.r.wrap.b32 	%r2135, %r2132, %r2133, 28;
	mov.b64 	%rd1942, {%r2135, %r2134};
	shf.l.wrap.b32 	%r2136, %r2132, %r2133, 30;
	shf.l.wrap.b32 	%r2137, %r2133, %r2132, 30;
	mov.b64 	%rd1943, {%r2137, %r2136};
	xor.b64  	%rd1944, %rd1943, %rd1942;
	shf.l.wrap.b32 	%r2138, %r2132, %r2133, 25;
	shf.l.wrap.b32 	%r2139, %r2133, %r2132, 25;
	mov.b64 	%rd1945, {%r2139, %r2138};
	xor.b64  	%rd1946, %rd1944, %rd1945;
	xor.b64  	%rd1947, %rd1928, %rd1880;
	xor.b64  	%rd1948, %rd1928, %rd1904;
	and.b64  	%rd1949, %rd1948, %rd1947;
	xor.b64  	%rd1950, %rd1949, %rd1928;
	add.s64 	%rd1951, %rd1940, %rd1950;
	add.s64 	%rd1952, %rd1951, %rd1946;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2140,%dummy}, %rd1555;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2141}, %rd1555;
	}
	shf.r.wrap.b32 	%r2142, %r2141, %r2140, 19;
	shf.r.wrap.b32 	%r2143, %r2140, %r2141, 19;
	mov.b64 	%rd1953, {%r2143, %r2142};
	shf.l.wrap.b32 	%r2144, %r2140, %r2141, 3;
	shf.l.wrap.b32 	%r2145, %r2141, %r2140, 3;
	mov.b64 	%rd1954, {%r2145, %r2144};
	shr.u64 	%rd1955, %rd1555, 6;
	xor.b64  	%rd1956, %rd1953, %rd1955;
	xor.b64  	%rd1957, %rd1956, %rd1954;
	shf.r.wrap.b32 	%r2146, %r1755, %r1754, 1;
	shf.r.wrap.b32 	%r2147, %r1754, %r1755, 1;
	mov.b64 	%rd1958, {%r2147, %r2146};
	shf.r.wrap.b32 	%r2148, %r1755, %r1754, 8;
	shf.r.wrap.b32 	%r2149, %r1754, %r1755, 8;
	mov.b64 	%rd1959, {%r2149, %r2148};
	shr.u64 	%rd1960, %rd1386, 7;
	xor.b64  	%rd1961, %rd1958, %rd1960;
	xor.b64  	%rd1962, %rd1961, %rd1959;
	add.s64 	%rd1963, %rd1490, %rd1373;
	add.s64 	%rd1964, %rd1963, %rd1957;
	add.s64 	%rd1965, %rd1964, %rd1962;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2150,%dummy}, %rd1568;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2151}, %rd1568;
	}
	shf.r.wrap.b32 	%r2152, %r2151, %r2150, 19;
	shf.r.wrap.b32 	%r2153, %r2150, %r2151, 19;
	mov.b64 	%rd1966, {%r2153, %r2152};
	shf.l.wrap.b32 	%r2154, %r2150, %r2151, 3;
	shf.l.wrap.b32 	%r2155, %r2151, %r2150, 3;
	mov.b64 	%rd1967, {%r2155, %r2154};
	shr.u64 	%rd1968, %rd1568, 6;
	xor.b64  	%rd1969, %rd1966, %rd1968;
	xor.b64  	%rd1970, %rd1969, %rd1967;
	shf.r.wrap.b32 	%r2156, %r1765, %r1764, 1;
	shf.r.wrap.b32 	%r2157, %r1764, %r1765, 1;
	mov.b64 	%rd1971, {%r2157, %r2156};
	shf.r.wrap.b32 	%r2158, %r1765, %r1764, 8;
	shf.r.wrap.b32 	%r2159, %r1764, %r1765, 8;
	mov.b64 	%rd1972, {%r2159, %r2158};
	shr.u64 	%rd1973, %rd1399, 7;
	xor.b64  	%rd1974, %rd1971, %rd1973;
	xor.b64  	%rd1975, %rd1974, %rd1972;
	add.s64 	%rd1976, %rd1503, %rd1386;
	add.s64 	%rd1977, %rd1976, %rd1970;
	add.s64 	%rd1978, %rd1977, %rd1975;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2160,%dummy}, %rd1965;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2161}, %rd1965;
	}
	shf.r.wrap.b32 	%r2162, %r2161, %r2160, 19;
	shf.r.wrap.b32 	%r2163, %r2160, %r2161, 19;
	mov.b64 	%rd1979, {%r2163, %r2162};
	shf.l.wrap.b32 	%r2164, %r2160, %r2161, 3;
	shf.l.wrap.b32 	%r2165, %r2161, %r2160, 3;
	mov.b64 	%rd1980, {%r2165, %r2164};
	shr.u64 	%rd1981, %rd1965, 6;
	xor.b64  	%rd1982, %rd1979, %rd1981;
	xor.b64  	%rd1983, %rd1982, %rd1980;
	shf.r.wrap.b32 	%r2166, %r1775, %r1774, 1;
	shf.r.wrap.b32 	%r2167, %r1774, %r1775, 1;
	mov.b64 	%rd1984, {%r2167, %r2166};
	shf.r.wrap.b32 	%r2168, %r1775, %r1774, 8;
	shf.r.wrap.b32 	%r2169, %r1774, %r1775, 8;
	mov.b64 	%rd1985, {%r2169, %r2168};
	shr.u64 	%rd1986, %rd1412, 7;
	xor.b64  	%rd1987, %rd1984, %rd1986;
	xor.b64  	%rd1988, %rd1987, %rd1985;
	add.s64 	%rd1989, %rd1516, %rd1399;
	add.s64 	%rd1990, %rd1989, %rd1983;
	add.s64 	%rd1991, %rd1990, %rd1988;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2170,%dummy}, %rd1978;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2171}, %rd1978;
	}
	shf.r.wrap.b32 	%r2172, %r2171, %r2170, 19;
	shf.r.wrap.b32 	%r2173, %r2170, %r2171, 19;
	mov.b64 	%rd1992, {%r2173, %r2172};
	shf.l.wrap.b32 	%r2174, %r2170, %r2171, 3;
	shf.l.wrap.b32 	%r2175, %r2171, %r2170, 3;
	mov.b64 	%rd1993, {%r2175, %r2174};
	shr.u64 	%rd1994, %rd1978, 6;
	xor.b64  	%rd1995, %rd1992, %rd1994;
	xor.b64  	%rd1996, %rd1995, %rd1993;
	shf.r.wrap.b32 	%r2176, %r1785, %r1784, 1;
	shf.r.wrap.b32 	%r2177, %r1784, %r1785, 1;
	mov.b64 	%rd1997, {%r2177, %r2176};
	shf.r.wrap.b32 	%r2178, %r1785, %r1784, 8;
	shf.r.wrap.b32 	%r2179, %r1784, %r1785, 8;
	mov.b64 	%rd1998, {%r2179, %r2178};
	shr.u64 	%rd1999, %rd1425, 7;
	xor.b64  	%rd2000, %rd1997, %rd1999;
	xor.b64  	%rd2001, %rd2000, %rd1998;
	add.s64 	%rd2002, %rd1529, %rd1412;
	add.s64 	%rd2003, %rd2002, %rd1996;
	add.s64 	%rd2004, %rd2003, %rd2001;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2180,%dummy}, %rd1991;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2181}, %rd1991;
	}
	shf.r.wrap.b32 	%r2182, %r2181, %r2180, 19;
	shf.r.wrap.b32 	%r2183, %r2180, %r2181, 19;
	mov.b64 	%rd2005, {%r2183, %r2182};
	shf.l.wrap.b32 	%r2184, %r2180, %r2181, 3;
	shf.l.wrap.b32 	%r2185, %r2181, %r2180, 3;
	mov.b64 	%rd2006, {%r2185, %r2184};
	shr.u64 	%rd2007, %rd1991, 6;
	xor.b64  	%rd2008, %rd2005, %rd2007;
	xor.b64  	%rd2009, %rd2008, %rd2006;
	shf.r.wrap.b32 	%r2186, %r1795, %r1794, 1;
	shf.r.wrap.b32 	%r2187, %r1794, %r1795, 1;
	mov.b64 	%rd2010, {%r2187, %r2186};
	shf.r.wrap.b32 	%r2188, %r1795, %r1794, 8;
	shf.r.wrap.b32 	%r2189, %r1794, %r1795, 8;
	mov.b64 	%rd2011, {%r2189, %r2188};
	shr.u64 	%rd2012, %rd1438, 7;
	xor.b64  	%rd2013, %rd2010, %rd2012;
	xor.b64  	%rd2014, %rd2013, %rd2011;
	add.s64 	%rd2015, %rd1542, %rd1425;
	add.s64 	%rd2016, %rd2015, %rd2009;
	add.s64 	%rd2017, %rd2016, %rd2014;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2190,%dummy}, %rd2004;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2191}, %rd2004;
	}
	shf.r.wrap.b32 	%r2192, %r2191, %r2190, 19;
	shf.r.wrap.b32 	%r2193, %r2190, %r2191, 19;
	mov.b64 	%rd2018, {%r2193, %r2192};
	shf.l.wrap.b32 	%r2194, %r2190, %r2191, 3;
	shf.l.wrap.b32 	%r2195, %r2191, %r2190, 3;
	mov.b64 	%rd2019, {%r2195, %r2194};
	shr.u64 	%rd2020, %rd2004, 6;
	xor.b64  	%rd2021, %rd2018, %rd2020;
	xor.b64  	%rd2022, %rd2021, %rd2019;
	shf.r.wrap.b32 	%r2196, %r1805, %r1804, 1;
	shf.r.wrap.b32 	%r2197, %r1804, %r1805, 1;
	mov.b64 	%rd2023, {%r2197, %r2196};
	shf.r.wrap.b32 	%r2198, %r1805, %r1804, 8;
	shf.r.wrap.b32 	%r2199, %r1804, %r1805, 8;
	mov.b64 	%rd2024, {%r2199, %r2198};
	shr.u64 	%rd2025, %rd1451, 7;
	xor.b64  	%rd2026, %rd2023, %rd2025;
	xor.b64  	%rd2027, %rd2026, %rd2024;
	add.s64 	%rd2028, %rd1555, %rd1438;
	add.s64 	%rd2029, %rd2028, %rd2022;
	add.s64 	%rd2030, %rd2029, %rd2027;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2200,%dummy}, %rd2017;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2201}, %rd2017;
	}
	shf.r.wrap.b32 	%r2202, %r2201, %r2200, 19;
	shf.r.wrap.b32 	%r2203, %r2200, %r2201, 19;
	mov.b64 	%rd2031, {%r2203, %r2202};
	shf.l.wrap.b32 	%r2204, %r2200, %r2201, 3;
	shf.l.wrap.b32 	%r2205, %r2201, %r2200, 3;
	mov.b64 	%rd2032, {%r2205, %r2204};
	shr.u64 	%rd2033, %rd2017, 6;
	xor.b64  	%rd2034, %rd2031, %rd2033;
	xor.b64  	%rd2035, %rd2034, %rd2032;
	shf.r.wrap.b32 	%r2206, %r1815, %r1814, 1;
	shf.r.wrap.b32 	%r2207, %r1814, %r1815, 1;
	mov.b64 	%rd2036, {%r2207, %r2206};
	shf.r.wrap.b32 	%r2208, %r1815, %r1814, 8;
	shf.r.wrap.b32 	%r2209, %r1814, %r1815, 8;
	mov.b64 	%rd2037, {%r2209, %r2208};
	shr.u64 	%rd2038, %rd1464, 7;
	xor.b64  	%rd2039, %rd2036, %rd2038;
	xor.b64  	%rd2040, %rd2039, %rd2037;
	add.s64 	%rd2041, %rd1568, %rd1451;
	add.s64 	%rd2042, %rd2041, %rd2035;
	add.s64 	%rd2043, %rd2042, %rd2040;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2210,%dummy}, %rd2030;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2211}, %rd2030;
	}
	shf.r.wrap.b32 	%r2212, %r2211, %r2210, 19;
	shf.r.wrap.b32 	%r2213, %r2210, %r2211, 19;
	mov.b64 	%rd2044, {%r2213, %r2212};
	shf.l.wrap.b32 	%r2214, %r2210, %r2211, 3;
	shf.l.wrap.b32 	%r2215, %r2211, %r2210, 3;
	mov.b64 	%rd2045, {%r2215, %r2214};
	shr.u64 	%rd2046, %rd2030, 6;
	xor.b64  	%rd2047, %rd2044, %rd2046;
	xor.b64  	%rd2048, %rd2047, %rd2045;
	shf.r.wrap.b32 	%r2216, %r1825, %r1824, 1;
	shf.r.wrap.b32 	%r2217, %r1824, %r1825, 1;
	mov.b64 	%rd2049, {%r2217, %r2216};
	shf.r.wrap.b32 	%r2218, %r1825, %r1824, 8;
	shf.r.wrap.b32 	%r2219, %r1824, %r1825, 8;
	mov.b64 	%rd2050, {%r2219, %r2218};
	shr.u64 	%rd2051, %rd1477, 7;
	xor.b64  	%rd2052, %rd2049, %rd2051;
	xor.b64  	%rd2053, %rd2052, %rd2050;
	add.s64 	%rd2054, %rd1965, %rd1464;
	add.s64 	%rd2055, %rd2054, %rd2048;
	add.s64 	%rd2056, %rd2055, %rd2053;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2220,%dummy}, %rd2043;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2221}, %rd2043;
	}
	shf.r.wrap.b32 	%r2222, %r2221, %r2220, 19;
	shf.r.wrap.b32 	%r2223, %r2220, %r2221, 19;
	mov.b64 	%rd2057, {%r2223, %r2222};
	shf.l.wrap.b32 	%r2224, %r2220, %r2221, 3;
	shf.l.wrap.b32 	%r2225, %r2221, %r2220, 3;
	mov.b64 	%rd2058, {%r2225, %r2224};
	shr.u64 	%rd2059, %rd2043, 6;
	xor.b64  	%rd2060, %rd2057, %rd2059;
	xor.b64  	%rd2061, %rd2060, %rd2058;
	shf.r.wrap.b32 	%r2226, %r1835, %r1834, 1;
	shf.r.wrap.b32 	%r2227, %r1834, %r1835, 1;
	mov.b64 	%rd2062, {%r2227, %r2226};
	shf.r.wrap.b32 	%r2228, %r1835, %r1834, 8;
	shf.r.wrap.b32 	%r2229, %r1834, %r1835, 8;
	mov.b64 	%rd2063, {%r2229, %r2228};
	shr.u64 	%rd2064, %rd1490, 7;
	xor.b64  	%rd2065, %rd2062, %rd2064;
	xor.b64  	%rd2066, %rd2065, %rd2063;
	add.s64 	%rd2067, %rd1978, %rd1477;
	add.s64 	%rd2068, %rd2067, %rd2061;
	add.s64 	%rd2069, %rd2068, %rd2066;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2230,%dummy}, %rd2056;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2231}, %rd2056;
	}
	shf.r.wrap.b32 	%r2232, %r2231, %r2230, 19;
	shf.r.wrap.b32 	%r2233, %r2230, %r2231, 19;
	mov.b64 	%rd2070, {%r2233, %r2232};
	shf.l.wrap.b32 	%r2234, %r2230, %r2231, 3;
	shf.l.wrap.b32 	%r2235, %r2231, %r2230, 3;
	mov.b64 	%rd2071, {%r2235, %r2234};
	shr.u64 	%rd2072, %rd2056, 6;
	xor.b64  	%rd2073, %rd2070, %rd2072;
	xor.b64  	%rd2074, %rd2073, %rd2071;
	shf.r.wrap.b32 	%r2236, %r1845, %r1844, 1;
	shf.r.wrap.b32 	%r2237, %r1844, %r1845, 1;
	mov.b64 	%rd2075, {%r2237, %r2236};
	shf.r.wrap.b32 	%r2238, %r1845, %r1844, 8;
	shf.r.wrap.b32 	%r2239, %r1844, %r1845, 8;
	mov.b64 	%rd2076, {%r2239, %r2238};
	shr.u64 	%rd2077, %rd1503, 7;
	xor.b64  	%rd2078, %rd2075, %rd2077;
	xor.b64  	%rd2079, %rd2078, %rd2076;
	add.s64 	%rd2080, %rd1991, %rd1490;
	add.s64 	%rd2081, %rd2080, %rd2074;
	add.s64 	%rd2082, %rd2081, %rd2079;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2240,%dummy}, %rd2069;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2241}, %rd2069;
	}
	shf.r.wrap.b32 	%r2242, %r2241, %r2240, 19;
	shf.r.wrap.b32 	%r2243, %r2240, %r2241, 19;
	mov.b64 	%rd2083, {%r2243, %r2242};
	shf.l.wrap.b32 	%r2244, %r2240, %r2241, 3;
	shf.l.wrap.b32 	%r2245, %r2241, %r2240, 3;
	mov.b64 	%rd2084, {%r2245, %r2244};
	shr.u64 	%rd2085, %rd2069, 6;
	xor.b64  	%rd2086, %rd2083, %rd2085;
	xor.b64  	%rd2087, %rd2086, %rd2084;
	shf.r.wrap.b32 	%r2246, %r1855, %r1854, 1;
	shf.r.wrap.b32 	%r2247, %r1854, %r1855, 1;
	mov.b64 	%rd2088, {%r2247, %r2246};
	shf.r.wrap.b32 	%r2248, %r1855, %r1854, 8;
	shf.r.wrap.b32 	%r2249, %r1854, %r1855, 8;
	mov.b64 	%rd2089, {%r2249, %r2248};
	shr.u64 	%rd2090, %rd1516, 7;
	xor.b64  	%rd2091, %rd2088, %rd2090;
	xor.b64  	%rd2092, %rd2091, %rd2089;
	add.s64 	%rd2093, %rd2004, %rd1503;
	add.s64 	%rd2094, %rd2093, %rd2087;
	add.s64 	%rd2095, %rd2094, %rd2092;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2250,%dummy}, %rd2082;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2251}, %rd2082;
	}
	shf.r.wrap.b32 	%r2252, %r2251, %r2250, 19;
	shf.r.wrap.b32 	%r2253, %r2250, %r2251, 19;
	mov.b64 	%rd2096, {%r2253, %r2252};
	shf.l.wrap.b32 	%r2254, %r2250, %r2251, 3;
	shf.l.wrap.b32 	%r2255, %r2251, %r2250, 3;
	mov.b64 	%rd2097, {%r2255, %r2254};
	shr.u64 	%rd2098, %rd2082, 6;
	xor.b64  	%rd2099, %rd2096, %rd2098;
	xor.b64  	%rd2100, %rd2099, %rd2097;
	shf.r.wrap.b32 	%r2256, %r1865, %r1864, 1;
	shf.r.wrap.b32 	%r2257, %r1864, %r1865, 1;
	mov.b64 	%rd2101, {%r2257, %r2256};
	shf.r.wrap.b32 	%r2258, %r1865, %r1864, 8;
	shf.r.wrap.b32 	%r2259, %r1864, %r1865, 8;
	mov.b64 	%rd2102, {%r2259, %r2258};
	shr.u64 	%rd2103, %rd1529, 7;
	xor.b64  	%rd2104, %rd2101, %rd2103;
	xor.b64  	%rd2105, %rd2104, %rd2102;
	add.s64 	%rd2106, %rd2017, %rd1516;
	add.s64 	%rd2107, %rd2106, %rd2100;
	add.s64 	%rd2108, %rd2107, %rd2105;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2260,%dummy}, %rd2095;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2261}, %rd2095;
	}
	shf.r.wrap.b32 	%r2262, %r2261, %r2260, 19;
	shf.r.wrap.b32 	%r2263, %r2260, %r2261, 19;
	mov.b64 	%rd2109, {%r2263, %r2262};
	shf.l.wrap.b32 	%r2264, %r2260, %r2261, 3;
	shf.l.wrap.b32 	%r2265, %r2261, %r2260, 3;
	mov.b64 	%rd2110, {%r2265, %r2264};
	shr.u64 	%rd2111, %rd2095, 6;
	xor.b64  	%rd2112, %rd2109, %rd2111;
	xor.b64  	%rd2113, %rd2112, %rd2110;
	shf.r.wrap.b32 	%r2266, %r1875, %r1874, 1;
	shf.r.wrap.b32 	%r2267, %r1874, %r1875, 1;
	mov.b64 	%rd2114, {%r2267, %r2266};
	shf.r.wrap.b32 	%r2268, %r1875, %r1874, 8;
	shf.r.wrap.b32 	%r2269, %r1874, %r1875, 8;
	mov.b64 	%rd2115, {%r2269, %r2268};
	shr.u64 	%rd2116, %rd1542, 7;
	xor.b64  	%rd2117, %rd2114, %rd2116;
	xor.b64  	%rd2118, %rd2117, %rd2115;
	add.s64 	%rd2119, %rd2030, %rd1529;
	add.s64 	%rd2120, %rd2119, %rd2113;
	add.s64 	%rd2121, %rd2120, %rd2118;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2270,%dummy}, %rd2108;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2271}, %rd2108;
	}
	shf.r.wrap.b32 	%r2272, %r2271, %r2270, 19;
	shf.r.wrap.b32 	%r2273, %r2270, %r2271, 19;
	mov.b64 	%rd2122, {%r2273, %r2272};
	shf.l.wrap.b32 	%r2274, %r2270, %r2271, 3;
	shf.l.wrap.b32 	%r2275, %r2271, %r2270, 3;
	mov.b64 	%rd2123, {%r2275, %r2274};
	shr.u64 	%rd2124, %rd2108, 6;
	xor.b64  	%rd2125, %rd2122, %rd2124;
	xor.b64  	%rd2126, %rd2125, %rd2123;
	shf.r.wrap.b32 	%r2276, %r2141, %r2140, 1;
	shf.r.wrap.b32 	%r2277, %r2140, %r2141, 1;
	mov.b64 	%rd2127, {%r2277, %r2276};
	shf.r.wrap.b32 	%r2278, %r2141, %r2140, 8;
	shf.r.wrap.b32 	%r2279, %r2140, %r2141, 8;
	mov.b64 	%rd2128, {%r2279, %r2278};
	shr.u64 	%rd2129, %rd1555, 7;
	xor.b64  	%rd2130, %rd2127, %rd2129;
	xor.b64  	%rd2131, %rd2130, %rd2128;
	add.s64 	%rd2132, %rd2043, %rd1542;
	add.s64 	%rd2133, %rd2132, %rd2126;
	add.s64 	%rd2134, %rd2133, %rd2131;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2280,%dummy}, %rd2121;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2281}, %rd2121;
	}
	shf.r.wrap.b32 	%r2282, %r2281, %r2280, 19;
	shf.r.wrap.b32 	%r2283, %r2280, %r2281, 19;
	mov.b64 	%rd2135, {%r2283, %r2282};
	shf.l.wrap.b32 	%r2284, %r2280, %r2281, 3;
	shf.l.wrap.b32 	%r2285, %r2281, %r2280, 3;
	mov.b64 	%rd2136, {%r2285, %r2284};
	shr.u64 	%rd2137, %rd2121, 6;
	xor.b64  	%rd2138, %rd2135, %rd2137;
	xor.b64  	%rd2139, %rd2138, %rd2136;
	shf.r.wrap.b32 	%r2286, %r2151, %r2150, 1;
	shf.r.wrap.b32 	%r2287, %r2150, %r2151, 1;
	mov.b64 	%rd2140, {%r2287, %r2286};
	shf.r.wrap.b32 	%r2288, %r2151, %r2150, 8;
	shf.r.wrap.b32 	%r2289, %r2150, %r2151, 8;
	mov.b64 	%rd2141, {%r2289, %r2288};
	shr.u64 	%rd2142, %rd1568, 7;
	xor.b64  	%rd2143, %rd2140, %rd2142;
	xor.b64  	%rd2144, %rd2143, %rd2141;
	add.s64 	%rd2145, %rd2056, %rd1555;
	add.s64 	%rd2146, %rd2145, %rd2139;
	add.s64 	%rd2147, %rd2146, %rd2144;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2290,%dummy}, %rd2134;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2291}, %rd2134;
	}
	shf.r.wrap.b32 	%r2292, %r2291, %r2290, 19;
	shf.r.wrap.b32 	%r2293, %r2290, %r2291, 19;
	mov.b64 	%rd2148, {%r2293, %r2292};
	shf.l.wrap.b32 	%r2294, %r2290, %r2291, 3;
	shf.l.wrap.b32 	%r2295, %r2291, %r2290, 3;
	mov.b64 	%rd2149, {%r2295, %r2294};
	shr.u64 	%rd2150, %rd2134, 6;
	xor.b64  	%rd2151, %rd2148, %rd2150;
	xor.b64  	%rd2152, %rd2151, %rd2149;
	shf.r.wrap.b32 	%r2296, %r2161, %r2160, 1;
	shf.r.wrap.b32 	%r2297, %r2160, %r2161, 1;
	mov.b64 	%rd2153, {%r2297, %r2296};
	shf.r.wrap.b32 	%r2298, %r2161, %r2160, 8;
	shf.r.wrap.b32 	%r2299, %r2160, %r2161, 8;
	mov.b64 	%rd2154, {%r2299, %r2298};
	shr.u64 	%rd2155, %rd1965, 7;
	xor.b64  	%rd2156, %rd2153, %rd2155;
	xor.b64  	%rd2157, %rd2156, %rd2154;
	add.s64 	%rd2158, %rd2069, %rd1568;
	add.s64 	%rd2159, %rd2158, %rd2152;
	add.s64 	%rd2160, %rd2159, %rd2157;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2300,%dummy}, %rd1941;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2301}, %rd1941;
	}
	shf.r.wrap.b32 	%r2302, %r2301, %r2300, 14;
	shf.r.wrap.b32 	%r2303, %r2300, %r2301, 14;
	mov.b64 	%rd2161, {%r2303, %r2302};
	shf.r.wrap.b32 	%r2304, %r2301, %r2300, 18;
	shf.r.wrap.b32 	%r2305, %r2300, %r2301, 18;
	mov.b64 	%rd2162, {%r2305, %r2304};
	xor.b64  	%rd2163, %rd2162, %rd2161;
	shf.l.wrap.b32 	%r2306, %r2300, %r2301, 23;
	shf.l.wrap.b32 	%r2307, %r2301, %r2300, 23;
	mov.b64 	%rd2164, {%r2307, %r2306};
	xor.b64  	%rd2165, %rd2163, %rd2164;
	xor.b64  	%rd2166, %rd1917, %rd1893;
	and.b64  	%rd2167, %rd2166, %rd1941;
	xor.b64  	%rd2168, %rd2167, %rd1893;
	add.s64 	%rd2169, %rd2168, %rd1869;
	add.s64 	%rd2170, %rd2169, %rd1965;
	ld.const.u64 	%rd8805, [k_sha512+384];
	add.s64 	%rd2171, %rd2170, %rd8805;
	add.s64 	%rd2172, %rd2171, %rd2165;
	add.s64 	%rd2173, %rd2172, %rd1880;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2308,%dummy}, %rd1952;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2309}, %rd1952;
	}
	shf.r.wrap.b32 	%r2310, %r2309, %r2308, 28;
	shf.r.wrap.b32 	%r2311, %r2308, %r2309, 28;
	mov.b64 	%rd2174, {%r2311, %r2310};
	shf.l.wrap.b32 	%r2312, %r2308, %r2309, 30;
	shf.l.wrap.b32 	%r2313, %r2309, %r2308, 30;
	mov.b64 	%rd2175, {%r2313, %r2312};
	xor.b64  	%rd2176, %rd2175, %rd2174;
	shf.l.wrap.b32 	%r2314, %r2308, %r2309, 25;
	shf.l.wrap.b32 	%r2315, %r2309, %r2308, 25;
	mov.b64 	%rd2177, {%r2315, %r2314};
	xor.b64  	%rd2178, %rd2176, %rd2177;
	xor.b64  	%rd2179, %rd1952, %rd1904;
	xor.b64  	%rd2180, %rd1952, %rd1928;
	and.b64  	%rd2181, %rd2180, %rd2179;
	xor.b64  	%rd2182, %rd2181, %rd1952;
	add.s64 	%rd2183, %rd2172, %rd2182;
	add.s64 	%rd2184, %rd2183, %rd2178;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2316,%dummy}, %rd2173;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2317}, %rd2173;
	}
	shf.r.wrap.b32 	%r2318, %r2317, %r2316, 14;
	shf.r.wrap.b32 	%r2319, %r2316, %r2317, 14;
	mov.b64 	%rd2185, {%r2319, %r2318};
	shf.r.wrap.b32 	%r2320, %r2317, %r2316, 18;
	shf.r.wrap.b32 	%r2321, %r2316, %r2317, 18;
	mov.b64 	%rd2186, {%r2321, %r2320};
	xor.b64  	%rd2187, %rd2186, %rd2185;
	shf.l.wrap.b32 	%r2322, %r2316, %r2317, 23;
	shf.l.wrap.b32 	%r2323, %r2317, %r2316, 23;
	mov.b64 	%rd2188, {%r2323, %r2322};
	xor.b64  	%rd2189, %rd2187, %rd2188;
	xor.b64  	%rd2190, %rd1941, %rd1917;
	and.b64  	%rd2191, %rd2173, %rd2190;
	xor.b64  	%rd2192, %rd2191, %rd1917;
	add.s64 	%rd2193, %rd1978, %rd1893;
	ld.const.u64 	%rd8804, [k_sha512+392];
	add.s64 	%rd2194, %rd2193, %rd8804;
	add.s64 	%rd2195, %rd2194, %rd2192;
	add.s64 	%rd2196, %rd2195, %rd2189;
	add.s64 	%rd2197, %rd2196, %rd1904;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2324,%dummy}, %rd2184;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2325}, %rd2184;
	}
	shf.r.wrap.b32 	%r2326, %r2325, %r2324, 28;
	shf.r.wrap.b32 	%r2327, %r2324, %r2325, 28;
	mov.b64 	%rd2198, {%r2327, %r2326};
	shf.l.wrap.b32 	%r2328, %r2324, %r2325, 30;
	shf.l.wrap.b32 	%r2329, %r2325, %r2324, 30;
	mov.b64 	%rd2199, {%r2329, %r2328};
	xor.b64  	%rd2200, %rd2199, %rd2198;
	shf.l.wrap.b32 	%r2330, %r2324, %r2325, 25;
	shf.l.wrap.b32 	%r2331, %r2325, %r2324, 25;
	mov.b64 	%rd2201, {%r2331, %r2330};
	xor.b64  	%rd2202, %rd2200, %rd2201;
	xor.b64  	%rd2203, %rd2184, %rd1928;
	xor.b64  	%rd2204, %rd2184, %rd1952;
	and.b64  	%rd2205, %rd2204, %rd2203;
	xor.b64  	%rd2206, %rd2205, %rd2184;
	add.s64 	%rd2207, %rd2196, %rd2206;
	add.s64 	%rd2208, %rd2207, %rd2202;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2332,%dummy}, %rd2197;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2333}, %rd2197;
	}
	shf.r.wrap.b32 	%r2334, %r2333, %r2332, 14;
	shf.r.wrap.b32 	%r2335, %r2332, %r2333, 14;
	mov.b64 	%rd2209, {%r2335, %r2334};
	shf.r.wrap.b32 	%r2336, %r2333, %r2332, 18;
	shf.r.wrap.b32 	%r2337, %r2332, %r2333, 18;
	mov.b64 	%rd2210, {%r2337, %r2336};
	xor.b64  	%rd2211, %rd2210, %rd2209;
	shf.l.wrap.b32 	%r2338, %r2332, %r2333, 23;
	shf.l.wrap.b32 	%r2339, %r2333, %r2332, 23;
	mov.b64 	%rd2212, {%r2339, %r2338};
	xor.b64  	%rd2213, %rd2211, %rd2212;
	xor.b64  	%rd2214, %rd2173, %rd1941;
	and.b64  	%rd2215, %rd2197, %rd2214;
	xor.b64  	%rd2216, %rd2215, %rd1941;
	add.s64 	%rd2217, %rd1991, %rd1917;
	ld.const.u64 	%rd8803, [k_sha512+400];
	add.s64 	%rd2218, %rd2217, %rd8803;
	add.s64 	%rd2219, %rd2218, %rd2216;
	add.s64 	%rd2220, %rd2219, %rd2213;
	add.s64 	%rd2221, %rd2220, %rd1928;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2340,%dummy}, %rd2208;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2341}, %rd2208;
	}
	shf.r.wrap.b32 	%r2342, %r2341, %r2340, 28;
	shf.r.wrap.b32 	%r2343, %r2340, %r2341, 28;
	mov.b64 	%rd2222, {%r2343, %r2342};
	shf.l.wrap.b32 	%r2344, %r2340, %r2341, 30;
	shf.l.wrap.b32 	%r2345, %r2341, %r2340, 30;
	mov.b64 	%rd2223, {%r2345, %r2344};
	xor.b64  	%rd2224, %rd2223, %rd2222;
	shf.l.wrap.b32 	%r2346, %r2340, %r2341, 25;
	shf.l.wrap.b32 	%r2347, %r2341, %r2340, 25;
	mov.b64 	%rd2225, {%r2347, %r2346};
	xor.b64  	%rd2226, %rd2224, %rd2225;
	xor.b64  	%rd2227, %rd2208, %rd1952;
	xor.b64  	%rd2228, %rd2208, %rd2184;
	and.b64  	%rd2229, %rd2228, %rd2227;
	xor.b64  	%rd2230, %rd2229, %rd2208;
	add.s64 	%rd2231, %rd2220, %rd2230;
	add.s64 	%rd2232, %rd2231, %rd2226;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2348,%dummy}, %rd2221;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2349}, %rd2221;
	}
	shf.r.wrap.b32 	%r2350, %r2349, %r2348, 14;
	shf.r.wrap.b32 	%r2351, %r2348, %r2349, 14;
	mov.b64 	%rd2233, {%r2351, %r2350};
	shf.r.wrap.b32 	%r2352, %r2349, %r2348, 18;
	shf.r.wrap.b32 	%r2353, %r2348, %r2349, 18;
	mov.b64 	%rd2234, {%r2353, %r2352};
	xor.b64  	%rd2235, %rd2234, %rd2233;
	shf.l.wrap.b32 	%r2354, %r2348, %r2349, 23;
	shf.l.wrap.b32 	%r2355, %r2349, %r2348, 23;
	mov.b64 	%rd2236, {%r2355, %r2354};
	xor.b64  	%rd2237, %rd2235, %rd2236;
	xor.b64  	%rd2238, %rd2197, %rd2173;
	and.b64  	%rd2239, %rd2221, %rd2238;
	xor.b64  	%rd2240, %rd2239, %rd2173;
	add.s64 	%rd2241, %rd2004, %rd1941;
	ld.const.u64 	%rd8802, [k_sha512+408];
	add.s64 	%rd2242, %rd2241, %rd8802;
	add.s64 	%rd2243, %rd2242, %rd2240;
	add.s64 	%rd2244, %rd2243, %rd2237;
	add.s64 	%rd2245, %rd2244, %rd1952;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2356,%dummy}, %rd2232;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2357}, %rd2232;
	}
	shf.r.wrap.b32 	%r2358, %r2357, %r2356, 28;
	shf.r.wrap.b32 	%r2359, %r2356, %r2357, 28;
	mov.b64 	%rd2246, {%r2359, %r2358};
	shf.l.wrap.b32 	%r2360, %r2356, %r2357, 30;
	shf.l.wrap.b32 	%r2361, %r2357, %r2356, 30;
	mov.b64 	%rd2247, {%r2361, %r2360};
	xor.b64  	%rd2248, %rd2247, %rd2246;
	shf.l.wrap.b32 	%r2362, %r2356, %r2357, 25;
	shf.l.wrap.b32 	%r2363, %r2357, %r2356, 25;
	mov.b64 	%rd2249, {%r2363, %r2362};
	xor.b64  	%rd2250, %rd2248, %rd2249;
	xor.b64  	%rd2251, %rd2232, %rd2184;
	xor.b64  	%rd2252, %rd2232, %rd2208;
	and.b64  	%rd2253, %rd2252, %rd2251;
	xor.b64  	%rd2254, %rd2253, %rd2232;
	add.s64 	%rd2255, %rd2244, %rd2254;
	add.s64 	%rd2256, %rd2255, %rd2250;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2364,%dummy}, %rd2245;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2365}, %rd2245;
	}
	shf.r.wrap.b32 	%r2366, %r2365, %r2364, 14;
	shf.r.wrap.b32 	%r2367, %r2364, %r2365, 14;
	mov.b64 	%rd2257, {%r2367, %r2366};
	shf.r.wrap.b32 	%r2368, %r2365, %r2364, 18;
	shf.r.wrap.b32 	%r2369, %r2364, %r2365, 18;
	mov.b64 	%rd2258, {%r2369, %r2368};
	xor.b64  	%rd2259, %rd2258, %rd2257;
	shf.l.wrap.b32 	%r2370, %r2364, %r2365, 23;
	shf.l.wrap.b32 	%r2371, %r2365, %r2364, 23;
	mov.b64 	%rd2260, {%r2371, %r2370};
	xor.b64  	%rd2261, %rd2259, %rd2260;
	xor.b64  	%rd2262, %rd2221, %rd2197;
	and.b64  	%rd2263, %rd2245, %rd2262;
	xor.b64  	%rd2264, %rd2263, %rd2197;
	add.s64 	%rd2265, %rd2173, %rd2017;
	ld.const.u64 	%rd8801, [k_sha512+416];
	add.s64 	%rd2266, %rd2265, %rd8801;
	add.s64 	%rd2267, %rd2266, %rd2264;
	add.s64 	%rd2268, %rd2267, %rd2261;
	add.s64 	%rd2269, %rd2268, %rd2184;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2372,%dummy}, %rd2256;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2373}, %rd2256;
	}
	shf.r.wrap.b32 	%r2374, %r2373, %r2372, 28;
	shf.r.wrap.b32 	%r2375, %r2372, %r2373, 28;
	mov.b64 	%rd2270, {%r2375, %r2374};
	shf.l.wrap.b32 	%r2376, %r2372, %r2373, 30;
	shf.l.wrap.b32 	%r2377, %r2373, %r2372, 30;
	mov.b64 	%rd2271, {%r2377, %r2376};
	xor.b64  	%rd2272, %rd2271, %rd2270;
	shf.l.wrap.b32 	%r2378, %r2372, %r2373, 25;
	shf.l.wrap.b32 	%r2379, %r2373, %r2372, 25;
	mov.b64 	%rd2273, {%r2379, %r2378};
	xor.b64  	%rd2274, %rd2272, %rd2273;
	xor.b64  	%rd2275, %rd2256, %rd2208;
	xor.b64  	%rd2276, %rd2256, %rd2232;
	and.b64  	%rd2277, %rd2276, %rd2275;
	xor.b64  	%rd2278, %rd2277, %rd2256;
	add.s64 	%rd2279, %rd2268, %rd2278;
	add.s64 	%rd2280, %rd2279, %rd2274;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2380,%dummy}, %rd2269;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2381}, %rd2269;
	}
	shf.r.wrap.b32 	%r2382, %r2381, %r2380, 14;
	shf.r.wrap.b32 	%r2383, %r2380, %r2381, 14;
	mov.b64 	%rd2281, {%r2383, %r2382};
	shf.r.wrap.b32 	%r2384, %r2381, %r2380, 18;
	shf.r.wrap.b32 	%r2385, %r2380, %r2381, 18;
	mov.b64 	%rd2282, {%r2385, %r2384};
	xor.b64  	%rd2283, %rd2282, %rd2281;
	shf.l.wrap.b32 	%r2386, %r2380, %r2381, 23;
	shf.l.wrap.b32 	%r2387, %r2381, %r2380, 23;
	mov.b64 	%rd2284, {%r2387, %r2386};
	xor.b64  	%rd2285, %rd2283, %rd2284;
	xor.b64  	%rd2286, %rd2245, %rd2221;
	and.b64  	%rd2287, %rd2269, %rd2286;
	xor.b64  	%rd2288, %rd2287, %rd2221;
	add.s64 	%rd2289, %rd2197, %rd2030;
	ld.const.u64 	%rd8800, [k_sha512+424];
	add.s64 	%rd2290, %rd2289, %rd8800;
	add.s64 	%rd2291, %rd2290, %rd2288;
	add.s64 	%rd2292, %rd2291, %rd2285;
	add.s64 	%rd2293, %rd2292, %rd2208;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2388,%dummy}, %rd2280;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2389}, %rd2280;
	}
	shf.r.wrap.b32 	%r2390, %r2389, %r2388, 28;
	shf.r.wrap.b32 	%r2391, %r2388, %r2389, 28;
	mov.b64 	%rd2294, {%r2391, %r2390};
	shf.l.wrap.b32 	%r2392, %r2388, %r2389, 30;
	shf.l.wrap.b32 	%r2393, %r2389, %r2388, 30;
	mov.b64 	%rd2295, {%r2393, %r2392};
	xor.b64  	%rd2296, %rd2295, %rd2294;
	shf.l.wrap.b32 	%r2394, %r2388, %r2389, 25;
	shf.l.wrap.b32 	%r2395, %r2389, %r2388, 25;
	mov.b64 	%rd2297, {%r2395, %r2394};
	xor.b64  	%rd2298, %rd2296, %rd2297;
	xor.b64  	%rd2299, %rd2280, %rd2232;
	xor.b64  	%rd2300, %rd2280, %rd2256;
	and.b64  	%rd2301, %rd2300, %rd2299;
	xor.b64  	%rd2302, %rd2301, %rd2280;
	add.s64 	%rd2303, %rd2292, %rd2302;
	add.s64 	%rd2304, %rd2303, %rd2298;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2396,%dummy}, %rd2293;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2397}, %rd2293;
	}
	shf.r.wrap.b32 	%r2398, %r2397, %r2396, 14;
	shf.r.wrap.b32 	%r2399, %r2396, %r2397, 14;
	mov.b64 	%rd2305, {%r2399, %r2398};
	shf.r.wrap.b32 	%r2400, %r2397, %r2396, 18;
	shf.r.wrap.b32 	%r2401, %r2396, %r2397, 18;
	mov.b64 	%rd2306, {%r2401, %r2400};
	xor.b64  	%rd2307, %rd2306, %rd2305;
	shf.l.wrap.b32 	%r2402, %r2396, %r2397, 23;
	shf.l.wrap.b32 	%r2403, %r2397, %r2396, 23;
	mov.b64 	%rd2308, {%r2403, %r2402};
	xor.b64  	%rd2309, %rd2307, %rd2308;
	xor.b64  	%rd2310, %rd2269, %rd2245;
	and.b64  	%rd2311, %rd2293, %rd2310;
	xor.b64  	%rd2312, %rd2311, %rd2245;
	add.s64 	%rd2313, %rd2221, %rd2043;
	ld.const.u64 	%rd8799, [k_sha512+432];
	add.s64 	%rd2314, %rd2313, %rd8799;
	add.s64 	%rd2315, %rd2314, %rd2312;
	add.s64 	%rd2316, %rd2315, %rd2309;
	add.s64 	%rd2317, %rd2316, %rd2232;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2404,%dummy}, %rd2304;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2405}, %rd2304;
	}
	shf.r.wrap.b32 	%r2406, %r2405, %r2404, 28;
	shf.r.wrap.b32 	%r2407, %r2404, %r2405, 28;
	mov.b64 	%rd2318, {%r2407, %r2406};
	shf.l.wrap.b32 	%r2408, %r2404, %r2405, 30;
	shf.l.wrap.b32 	%r2409, %r2405, %r2404, 30;
	mov.b64 	%rd2319, {%r2409, %r2408};
	xor.b64  	%rd2320, %rd2319, %rd2318;
	shf.l.wrap.b32 	%r2410, %r2404, %r2405, 25;
	shf.l.wrap.b32 	%r2411, %r2405, %r2404, 25;
	mov.b64 	%rd2321, {%r2411, %r2410};
	xor.b64  	%rd2322, %rd2320, %rd2321;
	xor.b64  	%rd2323, %rd2304, %rd2256;
	xor.b64  	%rd2324, %rd2304, %rd2280;
	and.b64  	%rd2325, %rd2324, %rd2323;
	xor.b64  	%rd2326, %rd2325, %rd2304;
	add.s64 	%rd2327, %rd2316, %rd2326;
	add.s64 	%rd2328, %rd2327, %rd2322;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2412,%dummy}, %rd2317;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2413}, %rd2317;
	}
	shf.r.wrap.b32 	%r2414, %r2413, %r2412, 14;
	shf.r.wrap.b32 	%r2415, %r2412, %r2413, 14;
	mov.b64 	%rd2329, {%r2415, %r2414};
	shf.r.wrap.b32 	%r2416, %r2413, %r2412, 18;
	shf.r.wrap.b32 	%r2417, %r2412, %r2413, 18;
	mov.b64 	%rd2330, {%r2417, %r2416};
	xor.b64  	%rd2331, %rd2330, %rd2329;
	shf.l.wrap.b32 	%r2418, %r2412, %r2413, 23;
	shf.l.wrap.b32 	%r2419, %r2413, %r2412, 23;
	mov.b64 	%rd2332, {%r2419, %r2418};
	xor.b64  	%rd2333, %rd2331, %rd2332;
	xor.b64  	%rd2334, %rd2293, %rd2269;
	and.b64  	%rd2335, %rd2317, %rd2334;
	xor.b64  	%rd2336, %rd2335, %rd2269;
	add.s64 	%rd2337, %rd2245, %rd2056;
	ld.const.u64 	%rd8798, [k_sha512+440];
	add.s64 	%rd2338, %rd2337, %rd8798;
	add.s64 	%rd2339, %rd2338, %rd2336;
	add.s64 	%rd2340, %rd2339, %rd2333;
	add.s64 	%rd2341, %rd2340, %rd2256;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2420,%dummy}, %rd2328;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2421}, %rd2328;
	}
	shf.r.wrap.b32 	%r2422, %r2421, %r2420, 28;
	shf.r.wrap.b32 	%r2423, %r2420, %r2421, 28;
	mov.b64 	%rd2342, {%r2423, %r2422};
	shf.l.wrap.b32 	%r2424, %r2420, %r2421, 30;
	shf.l.wrap.b32 	%r2425, %r2421, %r2420, 30;
	mov.b64 	%rd2343, {%r2425, %r2424};
	xor.b64  	%rd2344, %rd2343, %rd2342;
	shf.l.wrap.b32 	%r2426, %r2420, %r2421, 25;
	shf.l.wrap.b32 	%r2427, %r2421, %r2420, 25;
	mov.b64 	%rd2345, {%r2427, %r2426};
	xor.b64  	%rd2346, %rd2344, %rd2345;
	xor.b64  	%rd2347, %rd2328, %rd2280;
	xor.b64  	%rd2348, %rd2328, %rd2304;
	and.b64  	%rd2349, %rd2348, %rd2347;
	xor.b64  	%rd2350, %rd2349, %rd2328;
	add.s64 	%rd2351, %rd2340, %rd2350;
	add.s64 	%rd2352, %rd2351, %rd2346;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2428,%dummy}, %rd2341;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2429}, %rd2341;
	}
	shf.r.wrap.b32 	%r2430, %r2429, %r2428, 14;
	shf.r.wrap.b32 	%r2431, %r2428, %r2429, 14;
	mov.b64 	%rd2353, {%r2431, %r2430};
	shf.r.wrap.b32 	%r2432, %r2429, %r2428, 18;
	shf.r.wrap.b32 	%r2433, %r2428, %r2429, 18;
	mov.b64 	%rd2354, {%r2433, %r2432};
	xor.b64  	%rd2355, %rd2354, %rd2353;
	shf.l.wrap.b32 	%r2434, %r2428, %r2429, 23;
	shf.l.wrap.b32 	%r2435, %r2429, %r2428, 23;
	mov.b64 	%rd2356, {%r2435, %r2434};
	xor.b64  	%rd2357, %rd2355, %rd2356;
	xor.b64  	%rd2358, %rd2317, %rd2293;
	and.b64  	%rd2359, %rd2341, %rd2358;
	xor.b64  	%rd2360, %rd2359, %rd2293;
	add.s64 	%rd2361, %rd2269, %rd2069;
	ld.const.u64 	%rd8797, [k_sha512+448];
	add.s64 	%rd2362, %rd2361, %rd8797;
	add.s64 	%rd2363, %rd2362, %rd2360;
	add.s64 	%rd2364, %rd2363, %rd2357;
	add.s64 	%rd2365, %rd2364, %rd2280;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2436,%dummy}, %rd2352;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2437}, %rd2352;
	}
	shf.r.wrap.b32 	%r2438, %r2437, %r2436, 28;
	shf.r.wrap.b32 	%r2439, %r2436, %r2437, 28;
	mov.b64 	%rd2366, {%r2439, %r2438};
	shf.l.wrap.b32 	%r2440, %r2436, %r2437, 30;
	shf.l.wrap.b32 	%r2441, %r2437, %r2436, 30;
	mov.b64 	%rd2367, {%r2441, %r2440};
	xor.b64  	%rd2368, %rd2367, %rd2366;
	shf.l.wrap.b32 	%r2442, %r2436, %r2437, 25;
	shf.l.wrap.b32 	%r2443, %r2437, %r2436, 25;
	mov.b64 	%rd2369, {%r2443, %r2442};
	xor.b64  	%rd2370, %rd2368, %rd2369;
	xor.b64  	%rd2371, %rd2352, %rd2304;
	xor.b64  	%rd2372, %rd2352, %rd2328;
	and.b64  	%rd2373, %rd2372, %rd2371;
	xor.b64  	%rd2374, %rd2373, %rd2352;
	add.s64 	%rd2375, %rd2364, %rd2374;
	add.s64 	%rd2376, %rd2375, %rd2370;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2444,%dummy}, %rd2365;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2445}, %rd2365;
	}
	shf.r.wrap.b32 	%r2446, %r2445, %r2444, 14;
	shf.r.wrap.b32 	%r2447, %r2444, %r2445, 14;
	mov.b64 	%rd2377, {%r2447, %r2446};
	shf.r.wrap.b32 	%r2448, %r2445, %r2444, 18;
	shf.r.wrap.b32 	%r2449, %r2444, %r2445, 18;
	mov.b64 	%rd2378, {%r2449, %r2448};
	xor.b64  	%rd2379, %rd2378, %rd2377;
	shf.l.wrap.b32 	%r2450, %r2444, %r2445, 23;
	shf.l.wrap.b32 	%r2451, %r2445, %r2444, 23;
	mov.b64 	%rd2380, {%r2451, %r2450};
	xor.b64  	%rd2381, %rd2379, %rd2380;
	xor.b64  	%rd2382, %rd2341, %rd2317;
	and.b64  	%rd2383, %rd2365, %rd2382;
	xor.b64  	%rd2384, %rd2383, %rd2317;
	add.s64 	%rd2385, %rd2293, %rd2082;
	ld.const.u64 	%rd8796, [k_sha512+456];
	add.s64 	%rd2386, %rd2385, %rd8796;
	add.s64 	%rd2387, %rd2386, %rd2384;
	add.s64 	%rd2388, %rd2387, %rd2381;
	add.s64 	%rd2389, %rd2388, %rd2304;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2452,%dummy}, %rd2376;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2453}, %rd2376;
	}
	shf.r.wrap.b32 	%r2454, %r2453, %r2452, 28;
	shf.r.wrap.b32 	%r2455, %r2452, %r2453, 28;
	mov.b64 	%rd2390, {%r2455, %r2454};
	shf.l.wrap.b32 	%r2456, %r2452, %r2453, 30;
	shf.l.wrap.b32 	%r2457, %r2453, %r2452, 30;
	mov.b64 	%rd2391, {%r2457, %r2456};
	xor.b64  	%rd2392, %rd2391, %rd2390;
	shf.l.wrap.b32 	%r2458, %r2452, %r2453, 25;
	shf.l.wrap.b32 	%r2459, %r2453, %r2452, 25;
	mov.b64 	%rd2393, {%r2459, %r2458};
	xor.b64  	%rd2394, %rd2392, %rd2393;
	xor.b64  	%rd2395, %rd2376, %rd2328;
	xor.b64  	%rd2396, %rd2376, %rd2352;
	and.b64  	%rd2397, %rd2396, %rd2395;
	xor.b64  	%rd2398, %rd2397, %rd2376;
	add.s64 	%rd2399, %rd2388, %rd2398;
	add.s64 	%rd2400, %rd2399, %rd2394;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2460,%dummy}, %rd2389;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2461}, %rd2389;
	}
	shf.r.wrap.b32 	%r2462, %r2461, %r2460, 14;
	shf.r.wrap.b32 	%r2463, %r2460, %r2461, 14;
	mov.b64 	%rd2401, {%r2463, %r2462};
	shf.r.wrap.b32 	%r2464, %r2461, %r2460, 18;
	shf.r.wrap.b32 	%r2465, %r2460, %r2461, 18;
	mov.b64 	%rd2402, {%r2465, %r2464};
	xor.b64  	%rd2403, %rd2402, %rd2401;
	shf.l.wrap.b32 	%r2466, %r2460, %r2461, 23;
	shf.l.wrap.b32 	%r2467, %r2461, %r2460, 23;
	mov.b64 	%rd2404, {%r2467, %r2466};
	xor.b64  	%rd2405, %rd2403, %rd2404;
	xor.b64  	%rd2406, %rd2365, %rd2341;
	and.b64  	%rd2407, %rd2389, %rd2406;
	xor.b64  	%rd2408, %rd2407, %rd2341;
	add.s64 	%rd2409, %rd2317, %rd2095;
	ld.const.u64 	%rd8795, [k_sha512+464];
	add.s64 	%rd2410, %rd2409, %rd8795;
	add.s64 	%rd2411, %rd2410, %rd2408;
	add.s64 	%rd2412, %rd2411, %rd2405;
	add.s64 	%rd2413, %rd2412, %rd2328;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2468,%dummy}, %rd2400;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2469}, %rd2400;
	}
	shf.r.wrap.b32 	%r2470, %r2469, %r2468, 28;
	shf.r.wrap.b32 	%r2471, %r2468, %r2469, 28;
	mov.b64 	%rd2414, {%r2471, %r2470};
	shf.l.wrap.b32 	%r2472, %r2468, %r2469, 30;
	shf.l.wrap.b32 	%r2473, %r2469, %r2468, 30;
	mov.b64 	%rd2415, {%r2473, %r2472};
	xor.b64  	%rd2416, %rd2415, %rd2414;
	shf.l.wrap.b32 	%r2474, %r2468, %r2469, 25;
	shf.l.wrap.b32 	%r2475, %r2469, %r2468, 25;
	mov.b64 	%rd2417, {%r2475, %r2474};
	xor.b64  	%rd2418, %rd2416, %rd2417;
	xor.b64  	%rd2419, %rd2400, %rd2352;
	xor.b64  	%rd2420, %rd2400, %rd2376;
	and.b64  	%rd2421, %rd2420, %rd2419;
	xor.b64  	%rd2422, %rd2421, %rd2400;
	add.s64 	%rd2423, %rd2412, %rd2422;
	add.s64 	%rd2424, %rd2423, %rd2418;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2476,%dummy}, %rd2413;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2477}, %rd2413;
	}
	shf.r.wrap.b32 	%r2478, %r2477, %r2476, 14;
	shf.r.wrap.b32 	%r2479, %r2476, %r2477, 14;
	mov.b64 	%rd2425, {%r2479, %r2478};
	shf.r.wrap.b32 	%r2480, %r2477, %r2476, 18;
	shf.r.wrap.b32 	%r2481, %r2476, %r2477, 18;
	mov.b64 	%rd2426, {%r2481, %r2480};
	xor.b64  	%rd2427, %rd2426, %rd2425;
	shf.l.wrap.b32 	%r2482, %r2476, %r2477, 23;
	shf.l.wrap.b32 	%r2483, %r2477, %r2476, 23;
	mov.b64 	%rd2428, {%r2483, %r2482};
	xor.b64  	%rd2429, %rd2427, %rd2428;
	xor.b64  	%rd2430, %rd2389, %rd2365;
	and.b64  	%rd2431, %rd2413, %rd2430;
	xor.b64  	%rd2432, %rd2431, %rd2365;
	add.s64 	%rd2433, %rd2341, %rd2108;
	ld.const.u64 	%rd8794, [k_sha512+472];
	add.s64 	%rd2434, %rd2433, %rd8794;
	add.s64 	%rd2435, %rd2434, %rd2432;
	add.s64 	%rd2436, %rd2435, %rd2429;
	add.s64 	%rd2437, %rd2436, %rd2352;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2484,%dummy}, %rd2424;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2485}, %rd2424;
	}
	shf.r.wrap.b32 	%r2486, %r2485, %r2484, 28;
	shf.r.wrap.b32 	%r2487, %r2484, %r2485, 28;
	mov.b64 	%rd2438, {%r2487, %r2486};
	shf.l.wrap.b32 	%r2488, %r2484, %r2485, 30;
	shf.l.wrap.b32 	%r2489, %r2485, %r2484, 30;
	mov.b64 	%rd2439, {%r2489, %r2488};
	xor.b64  	%rd2440, %rd2439, %rd2438;
	shf.l.wrap.b32 	%r2490, %r2484, %r2485, 25;
	shf.l.wrap.b32 	%r2491, %r2485, %r2484, 25;
	mov.b64 	%rd2441, {%r2491, %r2490};
	xor.b64  	%rd2442, %rd2440, %rd2441;
	xor.b64  	%rd2443, %rd2424, %rd2376;
	xor.b64  	%rd2444, %rd2424, %rd2400;
	and.b64  	%rd2445, %rd2444, %rd2443;
	xor.b64  	%rd2446, %rd2445, %rd2424;
	add.s64 	%rd2447, %rd2436, %rd2446;
	add.s64 	%rd2448, %rd2447, %rd2442;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2492,%dummy}, %rd2437;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2493}, %rd2437;
	}
	shf.r.wrap.b32 	%r2494, %r2493, %r2492, 14;
	shf.r.wrap.b32 	%r2495, %r2492, %r2493, 14;
	mov.b64 	%rd2449, {%r2495, %r2494};
	shf.r.wrap.b32 	%r2496, %r2493, %r2492, 18;
	shf.r.wrap.b32 	%r2497, %r2492, %r2493, 18;
	mov.b64 	%rd2450, {%r2497, %r2496};
	xor.b64  	%rd2451, %rd2450, %rd2449;
	shf.l.wrap.b32 	%r2498, %r2492, %r2493, 23;
	shf.l.wrap.b32 	%r2499, %r2493, %r2492, 23;
	mov.b64 	%rd2452, {%r2499, %r2498};
	xor.b64  	%rd2453, %rd2451, %rd2452;
	xor.b64  	%rd2454, %rd2413, %rd2389;
	and.b64  	%rd2455, %rd2437, %rd2454;
	xor.b64  	%rd2456, %rd2455, %rd2389;
	add.s64 	%rd2457, %rd2365, %rd2121;
	ld.const.u64 	%rd8793, [k_sha512+480];
	add.s64 	%rd2458, %rd2457, %rd8793;
	add.s64 	%rd2459, %rd2458, %rd2456;
	add.s64 	%rd2460, %rd2459, %rd2453;
	add.s64 	%rd2461, %rd2460, %rd2376;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2500,%dummy}, %rd2448;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2501}, %rd2448;
	}
	shf.r.wrap.b32 	%r2502, %r2501, %r2500, 28;
	shf.r.wrap.b32 	%r2503, %r2500, %r2501, 28;
	mov.b64 	%rd2462, {%r2503, %r2502};
	shf.l.wrap.b32 	%r2504, %r2500, %r2501, 30;
	shf.l.wrap.b32 	%r2505, %r2501, %r2500, 30;
	mov.b64 	%rd2463, {%r2505, %r2504};
	xor.b64  	%rd2464, %rd2463, %rd2462;
	shf.l.wrap.b32 	%r2506, %r2500, %r2501, 25;
	shf.l.wrap.b32 	%r2507, %r2501, %r2500, 25;
	mov.b64 	%rd2465, {%r2507, %r2506};
	xor.b64  	%rd2466, %rd2464, %rd2465;
	xor.b64  	%rd2467, %rd2448, %rd2400;
	xor.b64  	%rd2468, %rd2448, %rd2424;
	and.b64  	%rd2469, %rd2468, %rd2467;
	xor.b64  	%rd2470, %rd2469, %rd2448;
	add.s64 	%rd2471, %rd2460, %rd2470;
	add.s64 	%rd2472, %rd2471, %rd2466;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2508,%dummy}, %rd2461;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2509}, %rd2461;
	}
	shf.r.wrap.b32 	%r2510, %r2509, %r2508, 14;
	shf.r.wrap.b32 	%r2511, %r2508, %r2509, 14;
	mov.b64 	%rd2473, {%r2511, %r2510};
	shf.r.wrap.b32 	%r2512, %r2509, %r2508, 18;
	shf.r.wrap.b32 	%r2513, %r2508, %r2509, 18;
	mov.b64 	%rd2474, {%r2513, %r2512};
	xor.b64  	%rd2475, %rd2474, %rd2473;
	shf.l.wrap.b32 	%r2514, %r2508, %r2509, 23;
	shf.l.wrap.b32 	%r2515, %r2509, %r2508, 23;
	mov.b64 	%rd2476, {%r2515, %r2514};
	xor.b64  	%rd2477, %rd2475, %rd2476;
	xor.b64  	%rd2478, %rd2437, %rd2413;
	and.b64  	%rd2479, %rd2461, %rd2478;
	xor.b64  	%rd2480, %rd2479, %rd2413;
	add.s64 	%rd2481, %rd2389, %rd2134;
	ld.const.u64 	%rd8792, [k_sha512+488];
	add.s64 	%rd2482, %rd2481, %rd8792;
	add.s64 	%rd2483, %rd2482, %rd2480;
	add.s64 	%rd2484, %rd2483, %rd2477;
	add.s64 	%rd2485, %rd2484, %rd2400;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2516,%dummy}, %rd2472;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2517}, %rd2472;
	}
	shf.r.wrap.b32 	%r2518, %r2517, %r2516, 28;
	shf.r.wrap.b32 	%r2519, %r2516, %r2517, 28;
	mov.b64 	%rd2486, {%r2519, %r2518};
	shf.l.wrap.b32 	%r2520, %r2516, %r2517, 30;
	shf.l.wrap.b32 	%r2521, %r2517, %r2516, 30;
	mov.b64 	%rd2487, {%r2521, %r2520};
	xor.b64  	%rd2488, %rd2487, %rd2486;
	shf.l.wrap.b32 	%r2522, %r2516, %r2517, 25;
	shf.l.wrap.b32 	%r2523, %r2517, %r2516, 25;
	mov.b64 	%rd2489, {%r2523, %r2522};
	xor.b64  	%rd2490, %rd2488, %rd2489;
	xor.b64  	%rd2491, %rd2472, %rd2424;
	xor.b64  	%rd2492, %rd2472, %rd2448;
	and.b64  	%rd2493, %rd2492, %rd2491;
	xor.b64  	%rd2494, %rd2493, %rd2472;
	add.s64 	%rd2495, %rd2484, %rd2494;
	add.s64 	%rd2496, %rd2495, %rd2490;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2524,%dummy}, %rd2485;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2525}, %rd2485;
	}
	shf.r.wrap.b32 	%r2526, %r2525, %r2524, 14;
	shf.r.wrap.b32 	%r2527, %r2524, %r2525, 14;
	mov.b64 	%rd2497, {%r2527, %r2526};
	shf.r.wrap.b32 	%r2528, %r2525, %r2524, 18;
	shf.r.wrap.b32 	%r2529, %r2524, %r2525, 18;
	mov.b64 	%rd2498, {%r2529, %r2528};
	xor.b64  	%rd2499, %rd2498, %rd2497;
	shf.l.wrap.b32 	%r2530, %r2524, %r2525, 23;
	shf.l.wrap.b32 	%r2531, %r2525, %r2524, 23;
	mov.b64 	%rd2500, {%r2531, %r2530};
	xor.b64  	%rd2501, %rd2499, %rd2500;
	xor.b64  	%rd2502, %rd2461, %rd2437;
	and.b64  	%rd2503, %rd2485, %rd2502;
	xor.b64  	%rd2504, %rd2503, %rd2437;
	add.s64 	%rd2505, %rd2413, %rd2147;
	ld.const.u64 	%rd8791, [k_sha512+496];
	add.s64 	%rd2506, %rd2505, %rd8791;
	add.s64 	%rd2507, %rd2506, %rd2504;
	add.s64 	%rd2508, %rd2507, %rd2501;
	add.s64 	%rd2509, %rd2508, %rd2424;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2532,%dummy}, %rd2496;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2533}, %rd2496;
	}
	shf.r.wrap.b32 	%r2534, %r2533, %r2532, 28;
	shf.r.wrap.b32 	%r2535, %r2532, %r2533, 28;
	mov.b64 	%rd2510, {%r2535, %r2534};
	shf.l.wrap.b32 	%r2536, %r2532, %r2533, 30;
	shf.l.wrap.b32 	%r2537, %r2533, %r2532, 30;
	mov.b64 	%rd2511, {%r2537, %r2536};
	xor.b64  	%rd2512, %rd2511, %rd2510;
	shf.l.wrap.b32 	%r2538, %r2532, %r2533, 25;
	shf.l.wrap.b32 	%r2539, %r2533, %r2532, 25;
	mov.b64 	%rd2513, {%r2539, %r2538};
	xor.b64  	%rd2514, %rd2512, %rd2513;
	xor.b64  	%rd2515, %rd2496, %rd2448;
	xor.b64  	%rd2516, %rd2496, %rd2472;
	and.b64  	%rd2517, %rd2516, %rd2515;
	xor.b64  	%rd2518, %rd2517, %rd2496;
	add.s64 	%rd2519, %rd2508, %rd2518;
	add.s64 	%rd2520, %rd2519, %rd2514;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2540,%dummy}, %rd2509;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2541}, %rd2509;
	}
	shf.r.wrap.b32 	%r2542, %r2541, %r2540, 14;
	shf.r.wrap.b32 	%r2543, %r2540, %r2541, 14;
	mov.b64 	%rd2521, {%r2543, %r2542};
	shf.r.wrap.b32 	%r2544, %r2541, %r2540, 18;
	shf.r.wrap.b32 	%r2545, %r2540, %r2541, 18;
	mov.b64 	%rd2522, {%r2545, %r2544};
	xor.b64  	%rd2523, %rd2522, %rd2521;
	shf.l.wrap.b32 	%r2546, %r2540, %r2541, 23;
	shf.l.wrap.b32 	%r2547, %r2541, %r2540, 23;
	mov.b64 	%rd2524, {%r2547, %r2546};
	xor.b64  	%rd2525, %rd2523, %rd2524;
	xor.b64  	%rd2526, %rd2485, %rd2461;
	and.b64  	%rd2527, %rd2509, %rd2526;
	xor.b64  	%rd2528, %rd2527, %rd2461;
	add.s64 	%rd2529, %rd2437, %rd2160;
	ld.const.u64 	%rd8790, [k_sha512+504];
	add.s64 	%rd2530, %rd2529, %rd8790;
	add.s64 	%rd2531, %rd2530, %rd2528;
	add.s64 	%rd2532, %rd2531, %rd2525;
	add.s64 	%rd2533, %rd2532, %rd2448;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2548,%dummy}, %rd2520;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2549}, %rd2520;
	}
	shf.r.wrap.b32 	%r2550, %r2549, %r2548, 28;
	shf.r.wrap.b32 	%r2551, %r2548, %r2549, 28;
	mov.b64 	%rd2534, {%r2551, %r2550};
	shf.l.wrap.b32 	%r2552, %r2548, %r2549, 30;
	shf.l.wrap.b32 	%r2553, %r2549, %r2548, 30;
	mov.b64 	%rd2535, {%r2553, %r2552};
	xor.b64  	%rd2536, %rd2535, %rd2534;
	shf.l.wrap.b32 	%r2554, %r2548, %r2549, 25;
	shf.l.wrap.b32 	%r2555, %r2549, %r2548, 25;
	mov.b64 	%rd2537, {%r2555, %r2554};
	xor.b64  	%rd2538, %rd2536, %rd2537;
	xor.b64  	%rd2539, %rd2520, %rd2472;
	xor.b64  	%rd2540, %rd2520, %rd2496;
	and.b64  	%rd2541, %rd2540, %rd2539;
	xor.b64  	%rd2542, %rd2541, %rd2520;
	add.s64 	%rd2543, %rd2532, %rd2542;
	add.s64 	%rd2544, %rd2543, %rd2538;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2556,%dummy}, %rd2147;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2557}, %rd2147;
	}
	shf.r.wrap.b32 	%r2558, %r2557, %r2556, 19;
	shf.r.wrap.b32 	%r2559, %r2556, %r2557, 19;
	mov.b64 	%rd2545, {%r2559, %r2558};
	shf.l.wrap.b32 	%r2560, %r2556, %r2557, 3;
	shf.l.wrap.b32 	%r2561, %r2557, %r2556, 3;
	mov.b64 	%rd2546, {%r2561, %r2560};
	shr.u64 	%rd2547, %rd2147, 6;
	xor.b64  	%rd2548, %rd2545, %rd2547;
	xor.b64  	%rd2549, %rd2548, %rd2546;
	shf.r.wrap.b32 	%r2562, %r2171, %r2170, 1;
	shf.r.wrap.b32 	%r2563, %r2170, %r2171, 1;
	mov.b64 	%rd2550, {%r2563, %r2562};
	shf.r.wrap.b32 	%r2564, %r2171, %r2170, 8;
	shf.r.wrap.b32 	%r2565, %r2170, %r2171, 8;
	mov.b64 	%rd2551, {%r2565, %r2564};
	shr.u64 	%rd2552, %rd1978, 7;
	xor.b64  	%rd2553, %rd2550, %rd2552;
	xor.b64  	%rd2554, %rd2553, %rd2551;
	add.s64 	%rd2555, %rd2082, %rd1965;
	add.s64 	%rd2556, %rd2555, %rd2549;
	add.s64 	%rd2557, %rd2556, %rd2554;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2566,%dummy}, %rd2160;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2567}, %rd2160;
	}
	shf.r.wrap.b32 	%r2568, %r2567, %r2566, 19;
	shf.r.wrap.b32 	%r2569, %r2566, %r2567, 19;
	mov.b64 	%rd2558, {%r2569, %r2568};
	shf.l.wrap.b32 	%r2570, %r2566, %r2567, 3;
	shf.l.wrap.b32 	%r2571, %r2567, %r2566, 3;
	mov.b64 	%rd2559, {%r2571, %r2570};
	shr.u64 	%rd2560, %rd2160, 6;
	xor.b64  	%rd2561, %rd2558, %rd2560;
	xor.b64  	%rd2562, %rd2561, %rd2559;
	shf.r.wrap.b32 	%r2572, %r2181, %r2180, 1;
	shf.r.wrap.b32 	%r2573, %r2180, %r2181, 1;
	mov.b64 	%rd2563, {%r2573, %r2572};
	shf.r.wrap.b32 	%r2574, %r2181, %r2180, 8;
	shf.r.wrap.b32 	%r2575, %r2180, %r2181, 8;
	mov.b64 	%rd2564, {%r2575, %r2574};
	shr.u64 	%rd2565, %rd1991, 7;
	xor.b64  	%rd2566, %rd2563, %rd2565;
	xor.b64  	%rd2567, %rd2566, %rd2564;
	add.s64 	%rd2568, %rd2095, %rd1978;
	add.s64 	%rd2569, %rd2568, %rd2562;
	add.s64 	%rd2570, %rd2569, %rd2567;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2576,%dummy}, %rd2557;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2577}, %rd2557;
	}
	shf.r.wrap.b32 	%r2578, %r2577, %r2576, 19;
	shf.r.wrap.b32 	%r2579, %r2576, %r2577, 19;
	mov.b64 	%rd2571, {%r2579, %r2578};
	shf.l.wrap.b32 	%r2580, %r2576, %r2577, 3;
	shf.l.wrap.b32 	%r2581, %r2577, %r2576, 3;
	mov.b64 	%rd2572, {%r2581, %r2580};
	shr.u64 	%rd2573, %rd2557, 6;
	xor.b64  	%rd2574, %rd2571, %rd2573;
	xor.b64  	%rd2575, %rd2574, %rd2572;
	shf.r.wrap.b32 	%r2582, %r2191, %r2190, 1;
	shf.r.wrap.b32 	%r2583, %r2190, %r2191, 1;
	mov.b64 	%rd2576, {%r2583, %r2582};
	shf.r.wrap.b32 	%r2584, %r2191, %r2190, 8;
	shf.r.wrap.b32 	%r2585, %r2190, %r2191, 8;
	mov.b64 	%rd2577, {%r2585, %r2584};
	shr.u64 	%rd2578, %rd2004, 7;
	xor.b64  	%rd2579, %rd2576, %rd2578;
	xor.b64  	%rd2580, %rd2579, %rd2577;
	add.s64 	%rd2581, %rd2108, %rd1991;
	add.s64 	%rd2582, %rd2581, %rd2575;
	add.s64 	%rd2583, %rd2582, %rd2580;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2586,%dummy}, %rd2570;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2587}, %rd2570;
	}
	shf.r.wrap.b32 	%r2588, %r2587, %r2586, 19;
	shf.r.wrap.b32 	%r2589, %r2586, %r2587, 19;
	mov.b64 	%rd2584, {%r2589, %r2588};
	shf.l.wrap.b32 	%r2590, %r2586, %r2587, 3;
	shf.l.wrap.b32 	%r2591, %r2587, %r2586, 3;
	mov.b64 	%rd2585, {%r2591, %r2590};
	shr.u64 	%rd2586, %rd2570, 6;
	xor.b64  	%rd2587, %rd2584, %rd2586;
	xor.b64  	%rd2588, %rd2587, %rd2585;
	shf.r.wrap.b32 	%r2592, %r2201, %r2200, 1;
	shf.r.wrap.b32 	%r2593, %r2200, %r2201, 1;
	mov.b64 	%rd2589, {%r2593, %r2592};
	shf.r.wrap.b32 	%r2594, %r2201, %r2200, 8;
	shf.r.wrap.b32 	%r2595, %r2200, %r2201, 8;
	mov.b64 	%rd2590, {%r2595, %r2594};
	shr.u64 	%rd2591, %rd2017, 7;
	xor.b64  	%rd2592, %rd2589, %rd2591;
	xor.b64  	%rd2593, %rd2592, %rd2590;
	add.s64 	%rd2594, %rd2121, %rd2004;
	add.s64 	%rd2595, %rd2594, %rd2588;
	add.s64 	%rd2596, %rd2595, %rd2593;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2596,%dummy}, %rd2583;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2597}, %rd2583;
	}
	shf.r.wrap.b32 	%r2598, %r2597, %r2596, 19;
	shf.r.wrap.b32 	%r2599, %r2596, %r2597, 19;
	mov.b64 	%rd2597, {%r2599, %r2598};
	shf.l.wrap.b32 	%r2600, %r2596, %r2597, 3;
	shf.l.wrap.b32 	%r2601, %r2597, %r2596, 3;
	mov.b64 	%rd2598, {%r2601, %r2600};
	shr.u64 	%rd2599, %rd2583, 6;
	xor.b64  	%rd2600, %rd2597, %rd2599;
	xor.b64  	%rd2601, %rd2600, %rd2598;
	shf.r.wrap.b32 	%r2602, %r2211, %r2210, 1;
	shf.r.wrap.b32 	%r2603, %r2210, %r2211, 1;
	mov.b64 	%rd2602, {%r2603, %r2602};
	shf.r.wrap.b32 	%r2604, %r2211, %r2210, 8;
	shf.r.wrap.b32 	%r2605, %r2210, %r2211, 8;
	mov.b64 	%rd2603, {%r2605, %r2604};
	shr.u64 	%rd2604, %rd2030, 7;
	xor.b64  	%rd2605, %rd2602, %rd2604;
	xor.b64  	%rd2606, %rd2605, %rd2603;
	add.s64 	%rd2607, %rd2134, %rd2017;
	add.s64 	%rd2608, %rd2607, %rd2601;
	add.s64 	%rd2609, %rd2608, %rd2606;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2606,%dummy}, %rd2596;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2607}, %rd2596;
	}
	shf.r.wrap.b32 	%r2608, %r2607, %r2606, 19;
	shf.r.wrap.b32 	%r2609, %r2606, %r2607, 19;
	mov.b64 	%rd2610, {%r2609, %r2608};
	shf.l.wrap.b32 	%r2610, %r2606, %r2607, 3;
	shf.l.wrap.b32 	%r2611, %r2607, %r2606, 3;
	mov.b64 	%rd2611, {%r2611, %r2610};
	shr.u64 	%rd2612, %rd2596, 6;
	xor.b64  	%rd2613, %rd2610, %rd2612;
	xor.b64  	%rd2614, %rd2613, %rd2611;
	shf.r.wrap.b32 	%r2612, %r2221, %r2220, 1;
	shf.r.wrap.b32 	%r2613, %r2220, %r2221, 1;
	mov.b64 	%rd2615, {%r2613, %r2612};
	shf.r.wrap.b32 	%r2614, %r2221, %r2220, 8;
	shf.r.wrap.b32 	%r2615, %r2220, %r2221, 8;
	mov.b64 	%rd2616, {%r2615, %r2614};
	shr.u64 	%rd2617, %rd2043, 7;
	xor.b64  	%rd2618, %rd2615, %rd2617;
	xor.b64  	%rd2619, %rd2618, %rd2616;
	add.s64 	%rd2620, %rd2147, %rd2030;
	add.s64 	%rd2621, %rd2620, %rd2614;
	add.s64 	%rd2622, %rd2621, %rd2619;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2616,%dummy}, %rd2609;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2617}, %rd2609;
	}
	shf.r.wrap.b32 	%r2618, %r2617, %r2616, 19;
	shf.r.wrap.b32 	%r2619, %r2616, %r2617, 19;
	mov.b64 	%rd2623, {%r2619, %r2618};
	shf.l.wrap.b32 	%r2620, %r2616, %r2617, 3;
	shf.l.wrap.b32 	%r2621, %r2617, %r2616, 3;
	mov.b64 	%rd2624, {%r2621, %r2620};
	shr.u64 	%rd2625, %rd2609, 6;
	xor.b64  	%rd2626, %rd2623, %rd2625;
	xor.b64  	%rd2627, %rd2626, %rd2624;
	shf.r.wrap.b32 	%r2622, %r2231, %r2230, 1;
	shf.r.wrap.b32 	%r2623, %r2230, %r2231, 1;
	mov.b64 	%rd2628, {%r2623, %r2622};
	shf.r.wrap.b32 	%r2624, %r2231, %r2230, 8;
	shf.r.wrap.b32 	%r2625, %r2230, %r2231, 8;
	mov.b64 	%rd2629, {%r2625, %r2624};
	shr.u64 	%rd2630, %rd2056, 7;
	xor.b64  	%rd2631, %rd2628, %rd2630;
	xor.b64  	%rd2632, %rd2631, %rd2629;
	add.s64 	%rd2633, %rd2160, %rd2043;
	add.s64 	%rd2634, %rd2633, %rd2627;
	add.s64 	%rd2635, %rd2634, %rd2632;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2626,%dummy}, %rd2622;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2627}, %rd2622;
	}
	shf.r.wrap.b32 	%r2628, %r2627, %r2626, 19;
	shf.r.wrap.b32 	%r2629, %r2626, %r2627, 19;
	mov.b64 	%rd2636, {%r2629, %r2628};
	shf.l.wrap.b32 	%r2630, %r2626, %r2627, 3;
	shf.l.wrap.b32 	%r2631, %r2627, %r2626, 3;
	mov.b64 	%rd2637, {%r2631, %r2630};
	shr.u64 	%rd2638, %rd2622, 6;
	xor.b64  	%rd2639, %rd2636, %rd2638;
	xor.b64  	%rd2640, %rd2639, %rd2637;
	shf.r.wrap.b32 	%r2632, %r2241, %r2240, 1;
	shf.r.wrap.b32 	%r2633, %r2240, %r2241, 1;
	mov.b64 	%rd2641, {%r2633, %r2632};
	shf.r.wrap.b32 	%r2634, %r2241, %r2240, 8;
	shf.r.wrap.b32 	%r2635, %r2240, %r2241, 8;
	mov.b64 	%rd2642, {%r2635, %r2634};
	shr.u64 	%rd2643, %rd2069, 7;
	xor.b64  	%rd2644, %rd2641, %rd2643;
	xor.b64  	%rd2645, %rd2644, %rd2642;
	add.s64 	%rd2646, %rd2557, %rd2056;
	add.s64 	%rd2647, %rd2646, %rd2640;
	add.s64 	%rd2648, %rd2647, %rd2645;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2636,%dummy}, %rd2635;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2637}, %rd2635;
	}
	shf.r.wrap.b32 	%r2638, %r2637, %r2636, 19;
	shf.r.wrap.b32 	%r2639, %r2636, %r2637, 19;
	mov.b64 	%rd2649, {%r2639, %r2638};
	shf.l.wrap.b32 	%r2640, %r2636, %r2637, 3;
	shf.l.wrap.b32 	%r2641, %r2637, %r2636, 3;
	mov.b64 	%rd2650, {%r2641, %r2640};
	shr.u64 	%rd2651, %rd2635, 6;
	xor.b64  	%rd2652, %rd2649, %rd2651;
	xor.b64  	%rd2653, %rd2652, %rd2650;
	shf.r.wrap.b32 	%r2642, %r2251, %r2250, 1;
	shf.r.wrap.b32 	%r2643, %r2250, %r2251, 1;
	mov.b64 	%rd2654, {%r2643, %r2642};
	shf.r.wrap.b32 	%r2644, %r2251, %r2250, 8;
	shf.r.wrap.b32 	%r2645, %r2250, %r2251, 8;
	mov.b64 	%rd2655, {%r2645, %r2644};
	shr.u64 	%rd2656, %rd2082, 7;
	xor.b64  	%rd2657, %rd2654, %rd2656;
	xor.b64  	%rd2658, %rd2657, %rd2655;
	add.s64 	%rd2659, %rd2570, %rd2069;
	add.s64 	%rd2660, %rd2659, %rd2653;
	add.s64 	%rd2661, %rd2660, %rd2658;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2646,%dummy}, %rd2648;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2647}, %rd2648;
	}
	shf.r.wrap.b32 	%r2648, %r2647, %r2646, 19;
	shf.r.wrap.b32 	%r2649, %r2646, %r2647, 19;
	mov.b64 	%rd2662, {%r2649, %r2648};
	shf.l.wrap.b32 	%r2650, %r2646, %r2647, 3;
	shf.l.wrap.b32 	%r2651, %r2647, %r2646, 3;
	mov.b64 	%rd2663, {%r2651, %r2650};
	shr.u64 	%rd2664, %rd2648, 6;
	xor.b64  	%rd2665, %rd2662, %rd2664;
	xor.b64  	%rd2666, %rd2665, %rd2663;
	shf.r.wrap.b32 	%r2652, %r2261, %r2260, 1;
	shf.r.wrap.b32 	%r2653, %r2260, %r2261, 1;
	mov.b64 	%rd2667, {%r2653, %r2652};
	shf.r.wrap.b32 	%r2654, %r2261, %r2260, 8;
	shf.r.wrap.b32 	%r2655, %r2260, %r2261, 8;
	mov.b64 	%rd2668, {%r2655, %r2654};
	shr.u64 	%rd2669, %rd2095, 7;
	xor.b64  	%rd2670, %rd2667, %rd2669;
	xor.b64  	%rd2671, %rd2670, %rd2668;
	add.s64 	%rd2672, %rd2583, %rd2082;
	add.s64 	%rd2673, %rd2672, %rd2666;
	add.s64 	%rd2674, %rd2673, %rd2671;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2656,%dummy}, %rd2661;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2657}, %rd2661;
	}
	shf.r.wrap.b32 	%r2658, %r2657, %r2656, 19;
	shf.r.wrap.b32 	%r2659, %r2656, %r2657, 19;
	mov.b64 	%rd2675, {%r2659, %r2658};
	shf.l.wrap.b32 	%r2660, %r2656, %r2657, 3;
	shf.l.wrap.b32 	%r2661, %r2657, %r2656, 3;
	mov.b64 	%rd2676, {%r2661, %r2660};
	shr.u64 	%rd2677, %rd2661, 6;
	xor.b64  	%rd2678, %rd2675, %rd2677;
	xor.b64  	%rd2679, %rd2678, %rd2676;
	shf.r.wrap.b32 	%r2662, %r2271, %r2270, 1;
	shf.r.wrap.b32 	%r2663, %r2270, %r2271, 1;
	mov.b64 	%rd2680, {%r2663, %r2662};
	shf.r.wrap.b32 	%r2664, %r2271, %r2270, 8;
	shf.r.wrap.b32 	%r2665, %r2270, %r2271, 8;
	mov.b64 	%rd2681, {%r2665, %r2664};
	shr.u64 	%rd2682, %rd2108, 7;
	xor.b64  	%rd2683, %rd2680, %rd2682;
	xor.b64  	%rd2684, %rd2683, %rd2681;
	add.s64 	%rd2685, %rd2596, %rd2095;
	add.s64 	%rd2686, %rd2685, %rd2679;
	add.s64 	%rd2687, %rd2686, %rd2684;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2666,%dummy}, %rd2674;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2667}, %rd2674;
	}
	shf.r.wrap.b32 	%r2668, %r2667, %r2666, 19;
	shf.r.wrap.b32 	%r2669, %r2666, %r2667, 19;
	mov.b64 	%rd2688, {%r2669, %r2668};
	shf.l.wrap.b32 	%r2670, %r2666, %r2667, 3;
	shf.l.wrap.b32 	%r2671, %r2667, %r2666, 3;
	mov.b64 	%rd2689, {%r2671, %r2670};
	shr.u64 	%rd2690, %rd2674, 6;
	xor.b64  	%rd2691, %rd2688, %rd2690;
	xor.b64  	%rd2692, %rd2691, %rd2689;
	shf.r.wrap.b32 	%r2672, %r2281, %r2280, 1;
	shf.r.wrap.b32 	%r2673, %r2280, %r2281, 1;
	mov.b64 	%rd2693, {%r2673, %r2672};
	shf.r.wrap.b32 	%r2674, %r2281, %r2280, 8;
	shf.r.wrap.b32 	%r2675, %r2280, %r2281, 8;
	mov.b64 	%rd2694, {%r2675, %r2674};
	shr.u64 	%rd2695, %rd2121, 7;
	xor.b64  	%rd2696, %rd2693, %rd2695;
	xor.b64  	%rd2697, %rd2696, %rd2694;
	add.s64 	%rd2698, %rd2609, %rd2108;
	add.s64 	%rd2699, %rd2698, %rd2692;
	add.s64 	%rd2700, %rd2699, %rd2697;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2676,%dummy}, %rd2687;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2677}, %rd2687;
	}
	shf.r.wrap.b32 	%r2678, %r2677, %r2676, 19;
	shf.r.wrap.b32 	%r2679, %r2676, %r2677, 19;
	mov.b64 	%rd2701, {%r2679, %r2678};
	shf.l.wrap.b32 	%r2680, %r2676, %r2677, 3;
	shf.l.wrap.b32 	%r2681, %r2677, %r2676, 3;
	mov.b64 	%rd2702, {%r2681, %r2680};
	shr.u64 	%rd2703, %rd2687, 6;
	xor.b64  	%rd2704, %rd2701, %rd2703;
	xor.b64  	%rd2705, %rd2704, %rd2702;
	shf.r.wrap.b32 	%r2682, %r2291, %r2290, 1;
	shf.r.wrap.b32 	%r2683, %r2290, %r2291, 1;
	mov.b64 	%rd2706, {%r2683, %r2682};
	shf.r.wrap.b32 	%r2684, %r2291, %r2290, 8;
	shf.r.wrap.b32 	%r2685, %r2290, %r2291, 8;
	mov.b64 	%rd2707, {%r2685, %r2684};
	shr.u64 	%rd2708, %rd2134, 7;
	xor.b64  	%rd2709, %rd2706, %rd2708;
	xor.b64  	%rd2710, %rd2709, %rd2707;
	add.s64 	%rd2711, %rd2622, %rd2121;
	add.s64 	%rd2712, %rd2711, %rd2705;
	add.s64 	%rd2713, %rd2712, %rd2710;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2686,%dummy}, %rd2700;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2687}, %rd2700;
	}
	shf.r.wrap.b32 	%r2688, %r2687, %r2686, 19;
	shf.r.wrap.b32 	%r2689, %r2686, %r2687, 19;
	mov.b64 	%rd2714, {%r2689, %r2688};
	shf.l.wrap.b32 	%r2690, %r2686, %r2687, 3;
	shf.l.wrap.b32 	%r2691, %r2687, %r2686, 3;
	mov.b64 	%rd2715, {%r2691, %r2690};
	shr.u64 	%rd2716, %rd2700, 6;
	xor.b64  	%rd2717, %rd2714, %rd2716;
	xor.b64  	%rd2718, %rd2717, %rd2715;
	shf.r.wrap.b32 	%r2692, %r2557, %r2556, 1;
	shf.r.wrap.b32 	%r2693, %r2556, %r2557, 1;
	mov.b64 	%rd2719, {%r2693, %r2692};
	shf.r.wrap.b32 	%r2694, %r2557, %r2556, 8;
	shf.r.wrap.b32 	%r2695, %r2556, %r2557, 8;
	mov.b64 	%rd2720, {%r2695, %r2694};
	shr.u64 	%rd2721, %rd2147, 7;
	xor.b64  	%rd2722, %rd2719, %rd2721;
	xor.b64  	%rd2723, %rd2722, %rd2720;
	add.s64 	%rd2724, %rd2635, %rd2134;
	add.s64 	%rd2725, %rd2724, %rd2718;
	add.s64 	%rd2726, %rd2725, %rd2723;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2696,%dummy}, %rd2713;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2697}, %rd2713;
	}
	shf.r.wrap.b32 	%r2698, %r2697, %r2696, 19;
	shf.r.wrap.b32 	%r2699, %r2696, %r2697, 19;
	mov.b64 	%rd2727, {%r2699, %r2698};
	shf.l.wrap.b32 	%r2700, %r2696, %r2697, 3;
	shf.l.wrap.b32 	%r2701, %r2697, %r2696, 3;
	mov.b64 	%rd2728, {%r2701, %r2700};
	shr.u64 	%rd2729, %rd2713, 6;
	xor.b64  	%rd2730, %rd2727, %rd2729;
	xor.b64  	%rd2731, %rd2730, %rd2728;
	shf.r.wrap.b32 	%r2702, %r2567, %r2566, 1;
	shf.r.wrap.b32 	%r2703, %r2566, %r2567, 1;
	mov.b64 	%rd2732, {%r2703, %r2702};
	shf.r.wrap.b32 	%r2704, %r2567, %r2566, 8;
	shf.r.wrap.b32 	%r2705, %r2566, %r2567, 8;
	mov.b64 	%rd2733, {%r2705, %r2704};
	shr.u64 	%rd2734, %rd2160, 7;
	xor.b64  	%rd2735, %rd2732, %rd2734;
	xor.b64  	%rd2736, %rd2735, %rd2733;
	add.s64 	%rd2737, %rd2648, %rd2147;
	add.s64 	%rd2738, %rd2737, %rd2731;
	add.s64 	%rd2739, %rd2738, %rd2736;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2706,%dummy}, %rd2726;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2707}, %rd2726;
	}
	shf.r.wrap.b32 	%r2708, %r2707, %r2706, 19;
	shf.r.wrap.b32 	%r2709, %r2706, %r2707, 19;
	mov.b64 	%rd2740, {%r2709, %r2708};
	shf.l.wrap.b32 	%r2710, %r2706, %r2707, 3;
	shf.l.wrap.b32 	%r2711, %r2707, %r2706, 3;
	mov.b64 	%rd2741, {%r2711, %r2710};
	shr.u64 	%rd2742, %rd2726, 6;
	xor.b64  	%rd2743, %rd2740, %rd2742;
	xor.b64  	%rd2744, %rd2743, %rd2741;
	shf.r.wrap.b32 	%r2712, %r2577, %r2576, 1;
	shf.r.wrap.b32 	%r2713, %r2576, %r2577, 1;
	mov.b64 	%rd2745, {%r2713, %r2712};
	shf.r.wrap.b32 	%r2714, %r2577, %r2576, 8;
	shf.r.wrap.b32 	%r2715, %r2576, %r2577, 8;
	mov.b64 	%rd2746, {%r2715, %r2714};
	shr.u64 	%rd2747, %rd2557, 7;
	xor.b64  	%rd2748, %rd2745, %rd2747;
	xor.b64  	%rd2749, %rd2748, %rd2746;
	add.s64 	%rd2750, %rd2661, %rd2160;
	add.s64 	%rd2751, %rd2750, %rd2744;
	add.s64 	%rd2752, %rd2751, %rd2749;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2716,%dummy}, %rd2533;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2717}, %rd2533;
	}
	shf.r.wrap.b32 	%r2718, %r2717, %r2716, 14;
	shf.r.wrap.b32 	%r2719, %r2716, %r2717, 14;
	mov.b64 	%rd2753, {%r2719, %r2718};
	shf.r.wrap.b32 	%r2720, %r2717, %r2716, 18;
	shf.r.wrap.b32 	%r2721, %r2716, %r2717, 18;
	mov.b64 	%rd2754, {%r2721, %r2720};
	xor.b64  	%rd2755, %rd2754, %rd2753;
	shf.l.wrap.b32 	%r2722, %r2716, %r2717, 23;
	shf.l.wrap.b32 	%r2723, %r2717, %r2716, 23;
	mov.b64 	%rd2756, {%r2723, %r2722};
	xor.b64  	%rd2757, %rd2755, %rd2756;
	xor.b64  	%rd2758, %rd2509, %rd2485;
	and.b64  	%rd2759, %rd2758, %rd2533;
	xor.b64  	%rd2760, %rd2759, %rd2485;
	add.s64 	%rd2761, %rd2760, %rd2461;
	add.s64 	%rd2762, %rd2761, %rd2557;
	ld.const.u64 	%rd8789, [k_sha512+512];
	add.s64 	%rd2763, %rd2762, %rd8789;
	add.s64 	%rd2764, %rd2763, %rd2757;
	add.s64 	%rd2765, %rd2764, %rd2472;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2724,%dummy}, %rd2544;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2725}, %rd2544;
	}
	shf.r.wrap.b32 	%r2726, %r2725, %r2724, 28;
	shf.r.wrap.b32 	%r2727, %r2724, %r2725, 28;
	mov.b64 	%rd2766, {%r2727, %r2726};
	shf.l.wrap.b32 	%r2728, %r2724, %r2725, 30;
	shf.l.wrap.b32 	%r2729, %r2725, %r2724, 30;
	mov.b64 	%rd2767, {%r2729, %r2728};
	xor.b64  	%rd2768, %rd2767, %rd2766;
	shf.l.wrap.b32 	%r2730, %r2724, %r2725, 25;
	shf.l.wrap.b32 	%r2731, %r2725, %r2724, 25;
	mov.b64 	%rd2769, {%r2731, %r2730};
	xor.b64  	%rd2770, %rd2768, %rd2769;
	xor.b64  	%rd2771, %rd2544, %rd2496;
	xor.b64  	%rd2772, %rd2544, %rd2520;
	and.b64  	%rd2773, %rd2772, %rd2771;
	xor.b64  	%rd2774, %rd2773, %rd2544;
	add.s64 	%rd2775, %rd2764, %rd2774;
	add.s64 	%rd2776, %rd2775, %rd2770;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2732,%dummy}, %rd2765;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2733}, %rd2765;
	}
	shf.r.wrap.b32 	%r2734, %r2733, %r2732, 14;
	shf.r.wrap.b32 	%r2735, %r2732, %r2733, 14;
	mov.b64 	%rd2777, {%r2735, %r2734};
	shf.r.wrap.b32 	%r2736, %r2733, %r2732, 18;
	shf.r.wrap.b32 	%r2737, %r2732, %r2733, 18;
	mov.b64 	%rd2778, {%r2737, %r2736};
	xor.b64  	%rd2779, %rd2778, %rd2777;
	shf.l.wrap.b32 	%r2738, %r2732, %r2733, 23;
	shf.l.wrap.b32 	%r2739, %r2733, %r2732, 23;
	mov.b64 	%rd2780, {%r2739, %r2738};
	xor.b64  	%rd2781, %rd2779, %rd2780;
	xor.b64  	%rd2782, %rd2533, %rd2509;
	and.b64  	%rd2783, %rd2765, %rd2782;
	xor.b64  	%rd2784, %rd2783, %rd2509;
	add.s64 	%rd2785, %rd2570, %rd2485;
	ld.const.u64 	%rd8788, [k_sha512+520];
	add.s64 	%rd2786, %rd2785, %rd8788;
	add.s64 	%rd2787, %rd2786, %rd2784;
	add.s64 	%rd2788, %rd2787, %rd2781;
	add.s64 	%rd2789, %rd2788, %rd2496;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2740,%dummy}, %rd2776;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2741}, %rd2776;
	}
	shf.r.wrap.b32 	%r2742, %r2741, %r2740, 28;
	shf.r.wrap.b32 	%r2743, %r2740, %r2741, 28;
	mov.b64 	%rd2790, {%r2743, %r2742};
	shf.l.wrap.b32 	%r2744, %r2740, %r2741, 30;
	shf.l.wrap.b32 	%r2745, %r2741, %r2740, 30;
	mov.b64 	%rd2791, {%r2745, %r2744};
	xor.b64  	%rd2792, %rd2791, %rd2790;
	shf.l.wrap.b32 	%r2746, %r2740, %r2741, 25;
	shf.l.wrap.b32 	%r2747, %r2741, %r2740, 25;
	mov.b64 	%rd2793, {%r2747, %r2746};
	xor.b64  	%rd2794, %rd2792, %rd2793;
	xor.b64  	%rd2795, %rd2776, %rd2520;
	xor.b64  	%rd2796, %rd2776, %rd2544;
	and.b64  	%rd2797, %rd2796, %rd2795;
	xor.b64  	%rd2798, %rd2797, %rd2776;
	add.s64 	%rd2799, %rd2788, %rd2798;
	add.s64 	%rd2800, %rd2799, %rd2794;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2748,%dummy}, %rd2789;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2749}, %rd2789;
	}
	shf.r.wrap.b32 	%r2750, %r2749, %r2748, 14;
	shf.r.wrap.b32 	%r2751, %r2748, %r2749, 14;
	mov.b64 	%rd2801, {%r2751, %r2750};
	shf.r.wrap.b32 	%r2752, %r2749, %r2748, 18;
	shf.r.wrap.b32 	%r2753, %r2748, %r2749, 18;
	mov.b64 	%rd2802, {%r2753, %r2752};
	xor.b64  	%rd2803, %rd2802, %rd2801;
	shf.l.wrap.b32 	%r2754, %r2748, %r2749, 23;
	shf.l.wrap.b32 	%r2755, %r2749, %r2748, 23;
	mov.b64 	%rd2804, {%r2755, %r2754};
	xor.b64  	%rd2805, %rd2803, %rd2804;
	xor.b64  	%rd2806, %rd2765, %rd2533;
	and.b64  	%rd2807, %rd2789, %rd2806;
	xor.b64  	%rd2808, %rd2807, %rd2533;
	add.s64 	%rd2809, %rd2583, %rd2509;
	ld.const.u64 	%rd8787, [k_sha512+528];
	add.s64 	%rd2810, %rd2809, %rd8787;
	add.s64 	%rd2811, %rd2810, %rd2808;
	add.s64 	%rd2812, %rd2811, %rd2805;
	add.s64 	%rd2813, %rd2812, %rd2520;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2756,%dummy}, %rd2800;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2757}, %rd2800;
	}
	shf.r.wrap.b32 	%r2758, %r2757, %r2756, 28;
	shf.r.wrap.b32 	%r2759, %r2756, %r2757, 28;
	mov.b64 	%rd2814, {%r2759, %r2758};
	shf.l.wrap.b32 	%r2760, %r2756, %r2757, 30;
	shf.l.wrap.b32 	%r2761, %r2757, %r2756, 30;
	mov.b64 	%rd2815, {%r2761, %r2760};
	xor.b64  	%rd2816, %rd2815, %rd2814;
	shf.l.wrap.b32 	%r2762, %r2756, %r2757, 25;
	shf.l.wrap.b32 	%r2763, %r2757, %r2756, 25;
	mov.b64 	%rd2817, {%r2763, %r2762};
	xor.b64  	%rd2818, %rd2816, %rd2817;
	xor.b64  	%rd2819, %rd2800, %rd2544;
	xor.b64  	%rd2820, %rd2800, %rd2776;
	and.b64  	%rd2821, %rd2820, %rd2819;
	xor.b64  	%rd2822, %rd2821, %rd2800;
	add.s64 	%rd2823, %rd2812, %rd2822;
	add.s64 	%rd2824, %rd2823, %rd2818;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2764,%dummy}, %rd2813;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2765}, %rd2813;
	}
	shf.r.wrap.b32 	%r2766, %r2765, %r2764, 14;
	shf.r.wrap.b32 	%r2767, %r2764, %r2765, 14;
	mov.b64 	%rd2825, {%r2767, %r2766};
	shf.r.wrap.b32 	%r2768, %r2765, %r2764, 18;
	shf.r.wrap.b32 	%r2769, %r2764, %r2765, 18;
	mov.b64 	%rd2826, {%r2769, %r2768};
	xor.b64  	%rd2827, %rd2826, %rd2825;
	shf.l.wrap.b32 	%r2770, %r2764, %r2765, 23;
	shf.l.wrap.b32 	%r2771, %r2765, %r2764, 23;
	mov.b64 	%rd2828, {%r2771, %r2770};
	xor.b64  	%rd2829, %rd2827, %rd2828;
	xor.b64  	%rd2830, %rd2789, %rd2765;
	and.b64  	%rd2831, %rd2813, %rd2830;
	xor.b64  	%rd2832, %rd2831, %rd2765;
	add.s64 	%rd2833, %rd2596, %rd2533;
	ld.const.u64 	%rd8786, [k_sha512+536];
	add.s64 	%rd2834, %rd2833, %rd8786;
	add.s64 	%rd2835, %rd2834, %rd2832;
	add.s64 	%rd2836, %rd2835, %rd2829;
	add.s64 	%rd2837, %rd2836, %rd2544;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2772,%dummy}, %rd2824;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2773}, %rd2824;
	}
	shf.r.wrap.b32 	%r2774, %r2773, %r2772, 28;
	shf.r.wrap.b32 	%r2775, %r2772, %r2773, 28;
	mov.b64 	%rd2838, {%r2775, %r2774};
	shf.l.wrap.b32 	%r2776, %r2772, %r2773, 30;
	shf.l.wrap.b32 	%r2777, %r2773, %r2772, 30;
	mov.b64 	%rd2839, {%r2777, %r2776};
	xor.b64  	%rd2840, %rd2839, %rd2838;
	shf.l.wrap.b32 	%r2778, %r2772, %r2773, 25;
	shf.l.wrap.b32 	%r2779, %r2773, %r2772, 25;
	mov.b64 	%rd2841, {%r2779, %r2778};
	xor.b64  	%rd2842, %rd2840, %rd2841;
	xor.b64  	%rd2843, %rd2824, %rd2776;
	xor.b64  	%rd2844, %rd2824, %rd2800;
	and.b64  	%rd2845, %rd2844, %rd2843;
	xor.b64  	%rd2846, %rd2845, %rd2824;
	add.s64 	%rd2847, %rd2836, %rd2846;
	add.s64 	%rd2848, %rd2847, %rd2842;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2780,%dummy}, %rd2837;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2781}, %rd2837;
	}
	shf.r.wrap.b32 	%r2782, %r2781, %r2780, 14;
	shf.r.wrap.b32 	%r2783, %r2780, %r2781, 14;
	mov.b64 	%rd2849, {%r2783, %r2782};
	shf.r.wrap.b32 	%r2784, %r2781, %r2780, 18;
	shf.r.wrap.b32 	%r2785, %r2780, %r2781, 18;
	mov.b64 	%rd2850, {%r2785, %r2784};
	xor.b64  	%rd2851, %rd2850, %rd2849;
	shf.l.wrap.b32 	%r2786, %r2780, %r2781, 23;
	shf.l.wrap.b32 	%r2787, %r2781, %r2780, 23;
	mov.b64 	%rd2852, {%r2787, %r2786};
	xor.b64  	%rd2853, %rd2851, %rd2852;
	xor.b64  	%rd2854, %rd2813, %rd2789;
	and.b64  	%rd2855, %rd2837, %rd2854;
	xor.b64  	%rd2856, %rd2855, %rd2789;
	add.s64 	%rd2857, %rd2765, %rd2609;
	ld.const.u64 	%rd8785, [k_sha512+544];
	add.s64 	%rd2858, %rd2857, %rd8785;
	add.s64 	%rd2859, %rd2858, %rd2856;
	add.s64 	%rd2860, %rd2859, %rd2853;
	add.s64 	%rd2861, %rd2860, %rd2776;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2788,%dummy}, %rd2848;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2789}, %rd2848;
	}
	shf.r.wrap.b32 	%r2790, %r2789, %r2788, 28;
	shf.r.wrap.b32 	%r2791, %r2788, %r2789, 28;
	mov.b64 	%rd2862, {%r2791, %r2790};
	shf.l.wrap.b32 	%r2792, %r2788, %r2789, 30;
	shf.l.wrap.b32 	%r2793, %r2789, %r2788, 30;
	mov.b64 	%rd2863, {%r2793, %r2792};
	xor.b64  	%rd2864, %rd2863, %rd2862;
	shf.l.wrap.b32 	%r2794, %r2788, %r2789, 25;
	shf.l.wrap.b32 	%r2795, %r2789, %r2788, 25;
	mov.b64 	%rd2865, {%r2795, %r2794};
	xor.b64  	%rd2866, %rd2864, %rd2865;
	xor.b64  	%rd2867, %rd2848, %rd2800;
	xor.b64  	%rd2868, %rd2848, %rd2824;
	and.b64  	%rd2869, %rd2868, %rd2867;
	xor.b64  	%rd2870, %rd2869, %rd2848;
	add.s64 	%rd2871, %rd2860, %rd2870;
	add.s64 	%rd2872, %rd2871, %rd2866;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2796,%dummy}, %rd2861;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2797}, %rd2861;
	}
	shf.r.wrap.b32 	%r2798, %r2797, %r2796, 14;
	shf.r.wrap.b32 	%r2799, %r2796, %r2797, 14;
	mov.b64 	%rd2873, {%r2799, %r2798};
	shf.r.wrap.b32 	%r2800, %r2797, %r2796, 18;
	shf.r.wrap.b32 	%r2801, %r2796, %r2797, 18;
	mov.b64 	%rd2874, {%r2801, %r2800};
	xor.b64  	%rd2875, %rd2874, %rd2873;
	shf.l.wrap.b32 	%r2802, %r2796, %r2797, 23;
	shf.l.wrap.b32 	%r2803, %r2797, %r2796, 23;
	mov.b64 	%rd2876, {%r2803, %r2802};
	xor.b64  	%rd2877, %rd2875, %rd2876;
	xor.b64  	%rd2878, %rd2837, %rd2813;
	and.b64  	%rd2879, %rd2861, %rd2878;
	xor.b64  	%rd2880, %rd2879, %rd2813;
	add.s64 	%rd2881, %rd2789, %rd2622;
	ld.const.u64 	%rd8784, [k_sha512+552];
	add.s64 	%rd2882, %rd2881, %rd8784;
	add.s64 	%rd2883, %rd2882, %rd2880;
	add.s64 	%rd2884, %rd2883, %rd2877;
	add.s64 	%rd2885, %rd2884, %rd2800;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2804,%dummy}, %rd2872;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2805}, %rd2872;
	}
	shf.r.wrap.b32 	%r2806, %r2805, %r2804, 28;
	shf.r.wrap.b32 	%r2807, %r2804, %r2805, 28;
	mov.b64 	%rd2886, {%r2807, %r2806};
	shf.l.wrap.b32 	%r2808, %r2804, %r2805, 30;
	shf.l.wrap.b32 	%r2809, %r2805, %r2804, 30;
	mov.b64 	%rd2887, {%r2809, %r2808};
	xor.b64  	%rd2888, %rd2887, %rd2886;
	shf.l.wrap.b32 	%r2810, %r2804, %r2805, 25;
	shf.l.wrap.b32 	%r2811, %r2805, %r2804, 25;
	mov.b64 	%rd2889, {%r2811, %r2810};
	xor.b64  	%rd2890, %rd2888, %rd2889;
	xor.b64  	%rd2891, %rd2872, %rd2824;
	xor.b64  	%rd2892, %rd2872, %rd2848;
	and.b64  	%rd2893, %rd2892, %rd2891;
	xor.b64  	%rd2894, %rd2893, %rd2872;
	add.s64 	%rd2895, %rd2884, %rd2894;
	add.s64 	%rd2896, %rd2895, %rd2890;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2812,%dummy}, %rd2885;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2813}, %rd2885;
	}
	shf.r.wrap.b32 	%r2814, %r2813, %r2812, 14;
	shf.r.wrap.b32 	%r2815, %r2812, %r2813, 14;
	mov.b64 	%rd2897, {%r2815, %r2814};
	shf.r.wrap.b32 	%r2816, %r2813, %r2812, 18;
	shf.r.wrap.b32 	%r2817, %r2812, %r2813, 18;
	mov.b64 	%rd2898, {%r2817, %r2816};
	xor.b64  	%rd2899, %rd2898, %rd2897;
	shf.l.wrap.b32 	%r2818, %r2812, %r2813, 23;
	shf.l.wrap.b32 	%r2819, %r2813, %r2812, 23;
	mov.b64 	%rd2900, {%r2819, %r2818};
	xor.b64  	%rd2901, %rd2899, %rd2900;
	xor.b64  	%rd2902, %rd2861, %rd2837;
	and.b64  	%rd2903, %rd2885, %rd2902;
	xor.b64  	%rd2904, %rd2903, %rd2837;
	add.s64 	%rd2905, %rd2813, %rd2635;
	ld.const.u64 	%rd8783, [k_sha512+560];
	add.s64 	%rd2906, %rd2905, %rd8783;
	add.s64 	%rd2907, %rd2906, %rd2904;
	add.s64 	%rd2908, %rd2907, %rd2901;
	add.s64 	%rd2909, %rd2908, %rd2824;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2820,%dummy}, %rd2896;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2821}, %rd2896;
	}
	shf.r.wrap.b32 	%r2822, %r2821, %r2820, 28;
	shf.r.wrap.b32 	%r2823, %r2820, %r2821, 28;
	mov.b64 	%rd2910, {%r2823, %r2822};
	shf.l.wrap.b32 	%r2824, %r2820, %r2821, 30;
	shf.l.wrap.b32 	%r2825, %r2821, %r2820, 30;
	mov.b64 	%rd2911, {%r2825, %r2824};
	xor.b64  	%rd2912, %rd2911, %rd2910;
	shf.l.wrap.b32 	%r2826, %r2820, %r2821, 25;
	shf.l.wrap.b32 	%r2827, %r2821, %r2820, 25;
	mov.b64 	%rd2913, {%r2827, %r2826};
	xor.b64  	%rd2914, %rd2912, %rd2913;
	xor.b64  	%rd2915, %rd2896, %rd2848;
	xor.b64  	%rd2916, %rd2896, %rd2872;
	and.b64  	%rd2917, %rd2916, %rd2915;
	xor.b64  	%rd2918, %rd2917, %rd2896;
	add.s64 	%rd2919, %rd2908, %rd2918;
	add.s64 	%rd2920, %rd2919, %rd2914;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2828,%dummy}, %rd2909;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2829}, %rd2909;
	}
	shf.r.wrap.b32 	%r2830, %r2829, %r2828, 14;
	shf.r.wrap.b32 	%r2831, %r2828, %r2829, 14;
	mov.b64 	%rd2921, {%r2831, %r2830};
	shf.r.wrap.b32 	%r2832, %r2829, %r2828, 18;
	shf.r.wrap.b32 	%r2833, %r2828, %r2829, 18;
	mov.b64 	%rd2922, {%r2833, %r2832};
	xor.b64  	%rd2923, %rd2922, %rd2921;
	shf.l.wrap.b32 	%r2834, %r2828, %r2829, 23;
	shf.l.wrap.b32 	%r2835, %r2829, %r2828, 23;
	mov.b64 	%rd2924, {%r2835, %r2834};
	xor.b64  	%rd2925, %rd2923, %rd2924;
	xor.b64  	%rd2926, %rd2885, %rd2861;
	and.b64  	%rd2927, %rd2909, %rd2926;
	xor.b64  	%rd2928, %rd2927, %rd2861;
	add.s64 	%rd2929, %rd2837, %rd2648;
	ld.const.u64 	%rd8782, [k_sha512+568];
	add.s64 	%rd2930, %rd2929, %rd8782;
	add.s64 	%rd2931, %rd2930, %rd2928;
	add.s64 	%rd2932, %rd2931, %rd2925;
	add.s64 	%rd2933, %rd2932, %rd2848;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2836,%dummy}, %rd2920;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2837}, %rd2920;
	}
	shf.r.wrap.b32 	%r2838, %r2837, %r2836, 28;
	shf.r.wrap.b32 	%r2839, %r2836, %r2837, 28;
	mov.b64 	%rd2934, {%r2839, %r2838};
	shf.l.wrap.b32 	%r2840, %r2836, %r2837, 30;
	shf.l.wrap.b32 	%r2841, %r2837, %r2836, 30;
	mov.b64 	%rd2935, {%r2841, %r2840};
	xor.b64  	%rd2936, %rd2935, %rd2934;
	shf.l.wrap.b32 	%r2842, %r2836, %r2837, 25;
	shf.l.wrap.b32 	%r2843, %r2837, %r2836, 25;
	mov.b64 	%rd2937, {%r2843, %r2842};
	xor.b64  	%rd2938, %rd2936, %rd2937;
	xor.b64  	%rd2939, %rd2920, %rd2872;
	xor.b64  	%rd2940, %rd2920, %rd2896;
	and.b64  	%rd2941, %rd2940, %rd2939;
	xor.b64  	%rd2942, %rd2941, %rd2920;
	add.s64 	%rd2943, %rd2932, %rd2942;
	add.s64 	%rd2944, %rd2943, %rd2938;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2844,%dummy}, %rd2933;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2845}, %rd2933;
	}
	shf.r.wrap.b32 	%r2846, %r2845, %r2844, 14;
	shf.r.wrap.b32 	%r2847, %r2844, %r2845, 14;
	mov.b64 	%rd2945, {%r2847, %r2846};
	shf.r.wrap.b32 	%r2848, %r2845, %r2844, 18;
	shf.r.wrap.b32 	%r2849, %r2844, %r2845, 18;
	mov.b64 	%rd2946, {%r2849, %r2848};
	xor.b64  	%rd2947, %rd2946, %rd2945;
	shf.l.wrap.b32 	%r2850, %r2844, %r2845, 23;
	shf.l.wrap.b32 	%r2851, %r2845, %r2844, 23;
	mov.b64 	%rd2948, {%r2851, %r2850};
	xor.b64  	%rd2949, %rd2947, %rd2948;
	xor.b64  	%rd2950, %rd2909, %rd2885;
	and.b64  	%rd2951, %rd2933, %rd2950;
	xor.b64  	%rd2952, %rd2951, %rd2885;
	add.s64 	%rd2953, %rd2861, %rd2661;
	ld.const.u64 	%rd8781, [k_sha512+576];
	add.s64 	%rd2954, %rd2953, %rd8781;
	add.s64 	%rd2955, %rd2954, %rd2952;
	add.s64 	%rd2956, %rd2955, %rd2949;
	add.s64 	%rd2957, %rd2956, %rd2872;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2852,%dummy}, %rd2944;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2853}, %rd2944;
	}
	shf.r.wrap.b32 	%r2854, %r2853, %r2852, 28;
	shf.r.wrap.b32 	%r2855, %r2852, %r2853, 28;
	mov.b64 	%rd2958, {%r2855, %r2854};
	shf.l.wrap.b32 	%r2856, %r2852, %r2853, 30;
	shf.l.wrap.b32 	%r2857, %r2853, %r2852, 30;
	mov.b64 	%rd2959, {%r2857, %r2856};
	xor.b64  	%rd2960, %rd2959, %rd2958;
	shf.l.wrap.b32 	%r2858, %r2852, %r2853, 25;
	shf.l.wrap.b32 	%r2859, %r2853, %r2852, 25;
	mov.b64 	%rd2961, {%r2859, %r2858};
	xor.b64  	%rd2962, %rd2960, %rd2961;
	xor.b64  	%rd2963, %rd2944, %rd2896;
	xor.b64  	%rd2964, %rd2944, %rd2920;
	and.b64  	%rd2965, %rd2964, %rd2963;
	xor.b64  	%rd2966, %rd2965, %rd2944;
	add.s64 	%rd2967, %rd2956, %rd2966;
	add.s64 	%rd2968, %rd2967, %rd2962;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2860,%dummy}, %rd2957;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2861}, %rd2957;
	}
	shf.r.wrap.b32 	%r2862, %r2861, %r2860, 14;
	shf.r.wrap.b32 	%r2863, %r2860, %r2861, 14;
	mov.b64 	%rd2969, {%r2863, %r2862};
	shf.r.wrap.b32 	%r2864, %r2861, %r2860, 18;
	shf.r.wrap.b32 	%r2865, %r2860, %r2861, 18;
	mov.b64 	%rd2970, {%r2865, %r2864};
	xor.b64  	%rd2971, %rd2970, %rd2969;
	shf.l.wrap.b32 	%r2866, %r2860, %r2861, 23;
	shf.l.wrap.b32 	%r2867, %r2861, %r2860, 23;
	mov.b64 	%rd2972, {%r2867, %r2866};
	xor.b64  	%rd2973, %rd2971, %rd2972;
	xor.b64  	%rd2974, %rd2933, %rd2909;
	and.b64  	%rd2975, %rd2957, %rd2974;
	xor.b64  	%rd2976, %rd2975, %rd2909;
	add.s64 	%rd2977, %rd2885, %rd2674;
	ld.const.u64 	%rd8780, [k_sha512+584];
	add.s64 	%rd2978, %rd2977, %rd8780;
	add.s64 	%rd2979, %rd2978, %rd2976;
	add.s64 	%rd2980, %rd2979, %rd2973;
	add.s64 	%rd2981, %rd2980, %rd2896;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2868,%dummy}, %rd2968;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2869}, %rd2968;
	}
	shf.r.wrap.b32 	%r2870, %r2869, %r2868, 28;
	shf.r.wrap.b32 	%r2871, %r2868, %r2869, 28;
	mov.b64 	%rd2982, {%r2871, %r2870};
	shf.l.wrap.b32 	%r2872, %r2868, %r2869, 30;
	shf.l.wrap.b32 	%r2873, %r2869, %r2868, 30;
	mov.b64 	%rd2983, {%r2873, %r2872};
	xor.b64  	%rd2984, %rd2983, %rd2982;
	shf.l.wrap.b32 	%r2874, %r2868, %r2869, 25;
	shf.l.wrap.b32 	%r2875, %r2869, %r2868, 25;
	mov.b64 	%rd2985, {%r2875, %r2874};
	xor.b64  	%rd2986, %rd2984, %rd2985;
	xor.b64  	%rd2987, %rd2968, %rd2920;
	xor.b64  	%rd2988, %rd2968, %rd2944;
	and.b64  	%rd2989, %rd2988, %rd2987;
	xor.b64  	%rd2990, %rd2989, %rd2968;
	add.s64 	%rd2991, %rd2980, %rd2990;
	add.s64 	%rd2992, %rd2991, %rd2986;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2876,%dummy}, %rd2981;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2877}, %rd2981;
	}
	shf.r.wrap.b32 	%r2878, %r2877, %r2876, 14;
	shf.r.wrap.b32 	%r2879, %r2876, %r2877, 14;
	mov.b64 	%rd2993, {%r2879, %r2878};
	shf.r.wrap.b32 	%r2880, %r2877, %r2876, 18;
	shf.r.wrap.b32 	%r2881, %r2876, %r2877, 18;
	mov.b64 	%rd2994, {%r2881, %r2880};
	xor.b64  	%rd2995, %rd2994, %rd2993;
	shf.l.wrap.b32 	%r2882, %r2876, %r2877, 23;
	shf.l.wrap.b32 	%r2883, %r2877, %r2876, 23;
	mov.b64 	%rd2996, {%r2883, %r2882};
	xor.b64  	%rd2997, %rd2995, %rd2996;
	xor.b64  	%rd2998, %rd2957, %rd2933;
	and.b64  	%rd2999, %rd2981, %rd2998;
	xor.b64  	%rd3000, %rd2999, %rd2933;
	add.s64 	%rd3001, %rd2909, %rd2687;
	ld.const.u64 	%rd8779, [k_sha512+592];
	add.s64 	%rd3002, %rd3001, %rd8779;
	add.s64 	%rd3003, %rd3002, %rd3000;
	add.s64 	%rd3004, %rd3003, %rd2997;
	add.s64 	%rd3005, %rd3004, %rd2920;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2884,%dummy}, %rd2992;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2885}, %rd2992;
	}
	shf.r.wrap.b32 	%r2886, %r2885, %r2884, 28;
	shf.r.wrap.b32 	%r2887, %r2884, %r2885, 28;
	mov.b64 	%rd3006, {%r2887, %r2886};
	shf.l.wrap.b32 	%r2888, %r2884, %r2885, 30;
	shf.l.wrap.b32 	%r2889, %r2885, %r2884, 30;
	mov.b64 	%rd3007, {%r2889, %r2888};
	xor.b64  	%rd3008, %rd3007, %rd3006;
	shf.l.wrap.b32 	%r2890, %r2884, %r2885, 25;
	shf.l.wrap.b32 	%r2891, %r2885, %r2884, 25;
	mov.b64 	%rd3009, {%r2891, %r2890};
	xor.b64  	%rd3010, %rd3008, %rd3009;
	xor.b64  	%rd3011, %rd2992, %rd2944;
	xor.b64  	%rd3012, %rd2992, %rd2968;
	and.b64  	%rd3013, %rd3012, %rd3011;
	xor.b64  	%rd3014, %rd3013, %rd2992;
	add.s64 	%rd3015, %rd3004, %rd3014;
	add.s64 	%rd3016, %rd3015, %rd3010;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2892,%dummy}, %rd3005;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2893}, %rd3005;
	}
	shf.r.wrap.b32 	%r2894, %r2893, %r2892, 14;
	shf.r.wrap.b32 	%r2895, %r2892, %r2893, 14;
	mov.b64 	%rd3017, {%r2895, %r2894};
	shf.r.wrap.b32 	%r2896, %r2893, %r2892, 18;
	shf.r.wrap.b32 	%r2897, %r2892, %r2893, 18;
	mov.b64 	%rd3018, {%r2897, %r2896};
	xor.b64  	%rd3019, %rd3018, %rd3017;
	shf.l.wrap.b32 	%r2898, %r2892, %r2893, 23;
	shf.l.wrap.b32 	%r2899, %r2893, %r2892, 23;
	mov.b64 	%rd3020, {%r2899, %r2898};
	xor.b64  	%rd3021, %rd3019, %rd3020;
	xor.b64  	%rd3022, %rd2981, %rd2957;
	and.b64  	%rd3023, %rd3005, %rd3022;
	xor.b64  	%rd3024, %rd3023, %rd2957;
	add.s64 	%rd3025, %rd2933, %rd2700;
	ld.const.u64 	%rd8778, [k_sha512+600];
	add.s64 	%rd3026, %rd3025, %rd8778;
	add.s64 	%rd3027, %rd3026, %rd3024;
	add.s64 	%rd3028, %rd3027, %rd3021;
	add.s64 	%rd3029, %rd3028, %rd2944;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2900,%dummy}, %rd3016;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2901}, %rd3016;
	}
	shf.r.wrap.b32 	%r2902, %r2901, %r2900, 28;
	shf.r.wrap.b32 	%r2903, %r2900, %r2901, 28;
	mov.b64 	%rd3030, {%r2903, %r2902};
	shf.l.wrap.b32 	%r2904, %r2900, %r2901, 30;
	shf.l.wrap.b32 	%r2905, %r2901, %r2900, 30;
	mov.b64 	%rd3031, {%r2905, %r2904};
	xor.b64  	%rd3032, %rd3031, %rd3030;
	shf.l.wrap.b32 	%r2906, %r2900, %r2901, 25;
	shf.l.wrap.b32 	%r2907, %r2901, %r2900, 25;
	mov.b64 	%rd3033, {%r2907, %r2906};
	xor.b64  	%rd3034, %rd3032, %rd3033;
	xor.b64  	%rd3035, %rd3016, %rd2968;
	xor.b64  	%rd3036, %rd3016, %rd2992;
	and.b64  	%rd3037, %rd3036, %rd3035;
	xor.b64  	%rd3038, %rd3037, %rd3016;
	add.s64 	%rd3039, %rd3028, %rd3038;
	add.s64 	%rd3040, %rd3039, %rd3034;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2908,%dummy}, %rd3029;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2909}, %rd3029;
	}
	shf.r.wrap.b32 	%r2910, %r2909, %r2908, 14;
	shf.r.wrap.b32 	%r2911, %r2908, %r2909, 14;
	mov.b64 	%rd3041, {%r2911, %r2910};
	shf.r.wrap.b32 	%r2912, %r2909, %r2908, 18;
	shf.r.wrap.b32 	%r2913, %r2908, %r2909, 18;
	mov.b64 	%rd3042, {%r2913, %r2912};
	xor.b64  	%rd3043, %rd3042, %rd3041;
	shf.l.wrap.b32 	%r2914, %r2908, %r2909, 23;
	shf.l.wrap.b32 	%r2915, %r2909, %r2908, 23;
	mov.b64 	%rd3044, {%r2915, %r2914};
	xor.b64  	%rd3045, %rd3043, %rd3044;
	xor.b64  	%rd3046, %rd3005, %rd2981;
	and.b64  	%rd3047, %rd3029, %rd3046;
	xor.b64  	%rd3048, %rd3047, %rd2981;
	add.s64 	%rd3049, %rd2957, %rd2713;
	ld.const.u64 	%rd8777, [k_sha512+608];
	add.s64 	%rd3050, %rd3049, %rd8777;
	add.s64 	%rd3051, %rd3050, %rd3048;
	add.s64 	%rd3052, %rd3051, %rd3045;
	add.s64 	%rd3053, %rd3052, %rd2968;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2916,%dummy}, %rd3040;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2917}, %rd3040;
	}
	shf.r.wrap.b32 	%r2918, %r2917, %r2916, 28;
	shf.r.wrap.b32 	%r2919, %r2916, %r2917, 28;
	mov.b64 	%rd3054, {%r2919, %r2918};
	shf.l.wrap.b32 	%r2920, %r2916, %r2917, 30;
	shf.l.wrap.b32 	%r2921, %r2917, %r2916, 30;
	mov.b64 	%rd3055, {%r2921, %r2920};
	xor.b64  	%rd3056, %rd3055, %rd3054;
	shf.l.wrap.b32 	%r2922, %r2916, %r2917, 25;
	shf.l.wrap.b32 	%r2923, %r2917, %r2916, 25;
	mov.b64 	%rd3057, {%r2923, %r2922};
	xor.b64  	%rd3058, %rd3056, %rd3057;
	xor.b64  	%rd3059, %rd3040, %rd2992;
	xor.b64  	%rd3060, %rd3040, %rd3016;
	and.b64  	%rd3061, %rd3060, %rd3059;
	xor.b64  	%rd3062, %rd3061, %rd3040;
	add.s64 	%rd3063, %rd3052, %rd3062;
	add.s64 	%rd3064, %rd3063, %rd3058;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2924,%dummy}, %rd3053;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2925}, %rd3053;
	}
	shf.r.wrap.b32 	%r2926, %r2925, %r2924, 14;
	shf.r.wrap.b32 	%r2927, %r2924, %r2925, 14;
	mov.b64 	%rd3065, {%r2927, %r2926};
	shf.r.wrap.b32 	%r2928, %r2925, %r2924, 18;
	shf.r.wrap.b32 	%r2929, %r2924, %r2925, 18;
	mov.b64 	%rd3066, {%r2929, %r2928};
	xor.b64  	%rd3067, %rd3066, %rd3065;
	shf.l.wrap.b32 	%r2930, %r2924, %r2925, 23;
	shf.l.wrap.b32 	%r2931, %r2925, %r2924, 23;
	mov.b64 	%rd3068, {%r2931, %r2930};
	xor.b64  	%rd3069, %rd3067, %rd3068;
	xor.b64  	%rd3070, %rd3029, %rd3005;
	and.b64  	%rd3071, %rd3053, %rd3070;
	xor.b64  	%rd3072, %rd3071, %rd3005;
	add.s64 	%rd3073, %rd2981, %rd2726;
	ld.const.u64 	%rd8776, [k_sha512+616];
	add.s64 	%rd3074, %rd3073, %rd8776;
	add.s64 	%rd3075, %rd3074, %rd3072;
	add.s64 	%rd3076, %rd3075, %rd3069;
	add.s64 	%rd3077, %rd3076, %rd2992;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2932,%dummy}, %rd3064;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2933}, %rd3064;
	}
	shf.r.wrap.b32 	%r2934, %r2933, %r2932, 28;
	shf.r.wrap.b32 	%r2935, %r2932, %r2933, 28;
	mov.b64 	%rd3078, {%r2935, %r2934};
	shf.l.wrap.b32 	%r2936, %r2932, %r2933, 30;
	shf.l.wrap.b32 	%r2937, %r2933, %r2932, 30;
	mov.b64 	%rd3079, {%r2937, %r2936};
	xor.b64  	%rd3080, %rd3079, %rd3078;
	shf.l.wrap.b32 	%r2938, %r2932, %r2933, 25;
	shf.l.wrap.b32 	%r2939, %r2933, %r2932, 25;
	mov.b64 	%rd3081, {%r2939, %r2938};
	xor.b64  	%rd3082, %rd3080, %rd3081;
	xor.b64  	%rd3083, %rd3064, %rd3016;
	xor.b64  	%rd3084, %rd3064, %rd3040;
	and.b64  	%rd3085, %rd3084, %rd3083;
	xor.b64  	%rd3086, %rd3085, %rd3064;
	add.s64 	%rd3087, %rd3076, %rd3086;
	add.s64 	%rd3088, %rd3087, %rd3082;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2940,%dummy}, %rd3077;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2941}, %rd3077;
	}
	shf.r.wrap.b32 	%r2942, %r2941, %r2940, 14;
	shf.r.wrap.b32 	%r2943, %r2940, %r2941, 14;
	mov.b64 	%rd3089, {%r2943, %r2942};
	shf.r.wrap.b32 	%r2944, %r2941, %r2940, 18;
	shf.r.wrap.b32 	%r2945, %r2940, %r2941, 18;
	mov.b64 	%rd3090, {%r2945, %r2944};
	xor.b64  	%rd3091, %rd3090, %rd3089;
	shf.l.wrap.b32 	%r2946, %r2940, %r2941, 23;
	shf.l.wrap.b32 	%r2947, %r2941, %r2940, 23;
	mov.b64 	%rd3092, {%r2947, %r2946};
	xor.b64  	%rd3093, %rd3091, %rd3092;
	xor.b64  	%rd3094, %rd3053, %rd3029;
	and.b64  	%rd3095, %rd3077, %rd3094;
	xor.b64  	%rd3096, %rd3095, %rd3029;
	add.s64 	%rd3097, %rd3005, %rd2739;
	ld.const.u64 	%rd8775, [k_sha512+624];
	add.s64 	%rd3098, %rd3097, %rd8775;
	add.s64 	%rd3099, %rd3098, %rd3096;
	add.s64 	%rd3100, %rd3099, %rd3093;
	add.s64 	%rd3101, %rd3100, %rd3016;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2948,%dummy}, %rd3088;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2949}, %rd3088;
	}
	shf.r.wrap.b32 	%r2950, %r2949, %r2948, 28;
	shf.r.wrap.b32 	%r2951, %r2948, %r2949, 28;
	mov.b64 	%rd3102, {%r2951, %r2950};
	shf.l.wrap.b32 	%r2952, %r2948, %r2949, 30;
	shf.l.wrap.b32 	%r2953, %r2949, %r2948, 30;
	mov.b64 	%rd3103, {%r2953, %r2952};
	xor.b64  	%rd3104, %rd3103, %rd3102;
	shf.l.wrap.b32 	%r2954, %r2948, %r2949, 25;
	shf.l.wrap.b32 	%r2955, %r2949, %r2948, 25;
	mov.b64 	%rd3105, {%r2955, %r2954};
	xor.b64  	%rd3106, %rd3104, %rd3105;
	xor.b64  	%rd3107, %rd3088, %rd3040;
	xor.b64  	%rd3108, %rd3088, %rd3064;
	and.b64  	%rd3109, %rd3108, %rd3107;
	xor.b64  	%rd3110, %rd3109, %rd3088;
	add.s64 	%rd3111, %rd3100, %rd3110;
	add.s64 	%rd3112, %rd3111, %rd3106;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2956,%dummy}, %rd3101;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2957}, %rd3101;
	}
	shf.r.wrap.b32 	%r2958, %r2957, %r2956, 14;
	shf.r.wrap.b32 	%r2959, %r2956, %r2957, 14;
	mov.b64 	%rd3113, {%r2959, %r2958};
	shf.r.wrap.b32 	%r2960, %r2957, %r2956, 18;
	shf.r.wrap.b32 	%r2961, %r2956, %r2957, 18;
	mov.b64 	%rd3114, {%r2961, %r2960};
	xor.b64  	%rd3115, %rd3114, %rd3113;
	shf.l.wrap.b32 	%r2962, %r2956, %r2957, 23;
	shf.l.wrap.b32 	%r2963, %r2957, %r2956, 23;
	mov.b64 	%rd3116, {%r2963, %r2962};
	xor.b64  	%rd3117, %rd3115, %rd3116;
	xor.b64  	%rd3118, %rd3077, %rd3053;
	and.b64  	%rd3119, %rd3101, %rd3118;
	xor.b64  	%rd3120, %rd3119, %rd3053;
	add.s64 	%rd3121, %rd3029, %rd2752;
	ld.const.u64 	%rd8774, [k_sha512+632];
	add.s64 	%rd3122, %rd3121, %rd8774;
	add.s64 	%rd3123, %rd3122, %rd3120;
	add.s64 	%rd3124, %rd3123, %rd3117;
	add.s64 	%rd3125, %rd3124, %rd3040;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2964,%dummy}, %rd3112;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2965}, %rd3112;
	}
	shf.r.wrap.b32 	%r2966, %r2965, %r2964, 28;
	shf.r.wrap.b32 	%r2967, %r2964, %r2965, 28;
	mov.b64 	%rd3126, {%r2967, %r2966};
	shf.l.wrap.b32 	%r2968, %r2964, %r2965, 30;
	shf.l.wrap.b32 	%r2969, %r2965, %r2964, 30;
	mov.b64 	%rd3127, {%r2969, %r2968};
	xor.b64  	%rd3128, %rd3127, %rd3126;
	shf.l.wrap.b32 	%r2970, %r2964, %r2965, 25;
	shf.l.wrap.b32 	%r2971, %r2965, %r2964, 25;
	mov.b64 	%rd3129, {%r2971, %r2970};
	xor.b64  	%rd3130, %rd3128, %rd3129;
	xor.b64  	%rd3131, %rd3112, %rd3064;
	xor.b64  	%rd3132, %rd3112, %rd3088;
	and.b64  	%rd3133, %rd3132, %rd3131;
	xor.b64  	%rd3134, %rd3133, %rd3112;
	add.s64 	%rd3135, %rd3124, %rd3134;
	add.s64 	%rd3136, %rd3135, %rd3130;
	add.s64 	%rd8845, %rd8845, %rd3136;
	st.local.u64 	[%rd9], %rd8845;
	add.s64 	%rd8844, %rd8844, %rd3112;
	st.local.u64 	[%rd10], %rd8844;
	add.s64 	%rd8843, %rd8843, %rd3088;
	st.local.u64 	[%rd10+8], %rd8843;
	add.s64 	%rd8842, %rd8842, %rd3064;
	st.local.u64 	[%rd10+16], %rd8842;
	add.s64 	%rd8841, %rd8841, %rd3125;
	st.local.u64 	[%rd10+24], %rd8841;
	add.s64 	%rd8840, %rd8840, %rd3101;
	st.local.u64 	[%rd10+32], %rd8840;
	add.s64 	%rd8839, %rd8839, %rd3077;
	st.local.u64 	[%rd10+40], %rd8839;
	add.s64 	%rd8838, %rd8838, %rd3053;
	st.local.u64 	[%rd10+48], %rd8838;
	mov.u32 	%r12310, 0;
	st.local.u32 	[%rd10+56], %r12310;
	st.local.u32 	[%rd10+64], %r12310;
	st.local.u32 	[%rd10+72], %r12310;
	st.local.u32 	[%rd10+80], %r12310;
	st.local.u32 	[%rd10+88], %r12310;
	st.local.u32 	[%rd10+96], %r12310;
	st.local.u32 	[%rd10+104], %r12310;
	st.local.u32 	[%rd10+112], %r12310;
	st.local.u32 	[%rd10+120], %r12310;
	st.local.u32 	[%rd10+128], %r12310;
	st.local.u32 	[%rd10+136], %r12310;
	st.local.u32 	[%rd10+144], %r12310;
	st.local.u32 	[%rd10+152], %r12310;
	st.local.u32 	[%rd10+160], %r12310;
	st.local.u32 	[%rd10+168], %r12310;
	st.local.u32 	[%rd10+176], %r12310;
	st.local.u32 	[%rd11+4], %r12310;
	st.local.u32 	[%rd12+4], %r12310;
	st.local.u32 	[%rd13+4], %r12310;
	st.local.u32 	[%rd14+4], %r12310;
	st.local.u32 	[%rd15+4], %r12310;
	st.local.u32 	[%rd16+4], %r12310;
	st.local.u32 	[%rd17+4], %r12310;
	st.local.u32 	[%rd18+4], %r12310;
	st.local.u32 	[%rd19+4], %r12310;
	st.local.u32 	[%rd20+4], %r12310;
	st.local.u32 	[%rd21+4], %r12310;
	st.local.u32 	[%rd22+4], %r12310;
	st.local.u32 	[%rd23+4], %r12310;
	st.local.u32 	[%rd24+4], %r12310;
	st.local.u32 	[%rd25+4], %r12310;
	st.local.u32 	[%rd26+4], %r12310;
	mov.u32 	%r12311, %r12310;
	mov.u32 	%r12312, %r12310;
	mov.u32 	%r12313, %r12310;
	mov.u32 	%r12314, %r12310;
	mov.u32 	%r12315, %r12310;
	mov.u32 	%r12316, %r12310;
	mov.u32 	%r12317, %r12310;
	mov.u32 	%r12318, %r12310;
	mov.u32 	%r12319, %r12310;
	mov.u32 	%r12320, %r12310;
	mov.u32 	%r12321, %r12310;
	mov.u32 	%r12322, %r12310;
	mov.u32 	%r12323, %r12310;
	mov.u32 	%r12324, %r12310;
	mov.u32 	%r12325, %r12310;
	mov.u32 	%r12326, %r12310;
	mov.u32 	%r12327, %r12310;
	mov.u32 	%r12328, %r12310;
	mov.u32 	%r12329, %r12310;
	mov.u32 	%r12330, %r12310;
	mov.u32 	%r12331, %r12310;
	mov.u32 	%r12332, %r12310;
	mov.u32 	%r12333, %r12310;
	mov.u32 	%r12334, %r12310;
	mov.u32 	%r12335, %r12310;
	mov.u32 	%r12336, %r12310;
	mov.u32 	%r12337, %r12310;
	mov.u32 	%r12338, %r12310;
	mov.u32 	%r12339, %r12310;
	bra.uni 	BB4_325;

BB4_323:
	ld.local.u32 	%r12337, [%rd10+64];
	ld.local.u32 	%r12336, [%rd12+4];
	ld.local.u32 	%r12335, [%rd10+72];
	ld.local.u32 	%r12334, [%rd13+4];
	ld.local.u32 	%r12333, [%rd10+80];
	ld.local.u32 	%r12332, [%rd14+4];
	ld.local.u32 	%r12331, [%rd10+88];
	ld.local.u32 	%r12330, [%rd15+4];
	ld.local.u32 	%r12329, [%rd10+96];
	ld.local.u32 	%r12328, [%rd16+4];
	ld.local.u32 	%r12327, [%rd10+104];
	ld.local.u32 	%r12326, [%rd17+4];
	ld.local.u32 	%r12325, [%rd10+112];
	ld.local.u32 	%r12324, [%rd18+4];
	ld.local.u32 	%r12323, [%rd10+120];
	ld.local.u32 	%r12322, [%rd19+4];
	ld.local.u32 	%r12321, [%rd10+128];
	ld.local.u32 	%r12320, [%rd20+4];
	ld.local.u32 	%r12319, [%rd10+136];
	ld.local.u32 	%r12318, [%rd21+4];
	ld.local.u32 	%r12317, [%rd10+144];
	ld.local.u32 	%r12316, [%rd22+4];
	ld.local.u32 	%r12315, [%rd10+152];
	ld.local.u32 	%r12314, [%rd23+4];
	ld.local.u32 	%r12313, [%rd10+160];
	ld.local.u32 	%r12312, [%rd24+4];
	ld.local.u32 	%r12311, [%rd10+168];
	ld.local.u32 	%r12310, [%rd25+4];
	ld.const.u64 	%rd8837, [k_sha512+128];
	ld.const.u64 	%rd8836, [k_sha512+136];
	ld.const.u64 	%rd8835, [k_sha512+144];
	ld.const.u64 	%rd8834, [k_sha512+152];
	ld.const.u64 	%rd8833, [k_sha512+160];
	ld.const.u64 	%rd8832, [k_sha512+168];
	ld.const.u64 	%rd8831, [k_sha512+176];
	ld.const.u64 	%rd8830, [k_sha512+184];
	ld.const.u64 	%rd8829, [k_sha512+192];
	ld.const.u64 	%rd8828, [k_sha512+200];
	ld.const.u64 	%rd8827, [k_sha512+208];
	ld.const.u64 	%rd8826, [k_sha512+216];
	ld.const.u64 	%rd8825, [k_sha512+224];
	ld.const.u64 	%rd8824, [k_sha512+232];
	ld.const.u64 	%rd8823, [k_sha512+240];
	ld.const.u64 	%rd8822, [k_sha512+248];
	ld.const.u64 	%rd8821, [k_sha512+256];
	ld.const.u64 	%rd8820, [k_sha512+264];
	ld.const.u64 	%rd8819, [k_sha512+272];
	ld.const.u64 	%rd8818, [k_sha512+280];
	ld.const.u64 	%rd8817, [k_sha512+288];
	ld.const.u64 	%rd8816, [k_sha512+296];
	ld.const.u64 	%rd8815, [k_sha512+304];
	ld.const.u64 	%rd8814, [k_sha512+312];
	ld.const.u64 	%rd8813, [k_sha512+320];
	ld.const.u64 	%rd8812, [k_sha512+328];
	ld.const.u64 	%rd8811, [k_sha512+336];
	ld.const.u64 	%rd8810, [k_sha512+344];
	ld.const.u64 	%rd8809, [k_sha512+352];
	ld.const.u64 	%rd8808, [k_sha512+360];
	ld.const.u64 	%rd8807, [k_sha512+368];
	ld.const.u64 	%rd8806, [k_sha512+376];
	ld.const.u64 	%rd8805, [k_sha512+384];
	ld.const.u64 	%rd8804, [k_sha512+392];
	ld.const.u64 	%rd8803, [k_sha512+400];
	ld.const.u64 	%rd8802, [k_sha512+408];
	ld.const.u64 	%rd8801, [k_sha512+416];
	ld.const.u64 	%rd8800, [k_sha512+424];
	ld.const.u64 	%rd8799, [k_sha512+432];
	ld.const.u64 	%rd8798, [k_sha512+440];
	ld.const.u64 	%rd8797, [k_sha512+448];
	ld.const.u64 	%rd8796, [k_sha512+456];
	ld.const.u64 	%rd8795, [k_sha512+464];
	ld.const.u64 	%rd8794, [k_sha512+472];
	ld.const.u64 	%rd8793, [k_sha512+480];
	ld.const.u64 	%rd8792, [k_sha512+488];
	ld.const.u64 	%rd8791, [k_sha512+496];
	ld.const.u64 	%rd8790, [k_sha512+504];
	ld.const.u64 	%rd8789, [k_sha512+512];
	ld.const.u64 	%rd8788, [k_sha512+520];
	ld.const.u64 	%rd8787, [k_sha512+528];
	ld.const.u64 	%rd8786, [k_sha512+536];
	ld.const.u64 	%rd8785, [k_sha512+544];
	ld.const.u64 	%rd8784, [k_sha512+552];
	ld.const.u64 	%rd8783, [k_sha512+560];
	ld.const.u64 	%rd8782, [k_sha512+568];
	ld.const.u64 	%rd8781, [k_sha512+576];
	ld.const.u64 	%rd8780, [k_sha512+584];
	ld.const.u64 	%rd8779, [k_sha512+592];
	ld.const.u64 	%rd8778, [k_sha512+600];
	ld.const.u64 	%rd8777, [k_sha512+608];
	ld.const.u64 	%rd8776, [k_sha512+616];
	ld.const.u64 	%rd8775, [k_sha512+624];
	ld.const.u64 	%rd8774, [k_sha512+632];

BB4_325:
	ld.param.u64 	%rd8773, [m09600_init_param_4];
	mov.u32 	%r2972, 0;
	st.local.u32 	[%rd10+176], %r2972;
	shl.b32 	%r2973, %r8, 3;
	st.local.u32 	[%rd26+4], %r2973;
	mov.b64	%rd3137, {%r12338, %r12339};
	mov.b64	%rd3138, {%r12336, %r12337};
	mov.b64	%rd3139, {%r12334, %r12335};
	mov.b64	%rd3140, {%r12332, %r12333};
	mov.b64	%rd3141, {%r12330, %r12331};
	mov.b64	%rd3142, {%r12328, %r12329};
	mov.b64	%rd3143, {%r12326, %r12327};
	mov.b64	%rd3144, {%r12324, %r12325};
	mov.b64	%rd3145, {%r12322, %r12323};
	mov.b64	%rd3146, {%r12320, %r12321};
	mov.b64	%rd3147, {%r12318, %r12319};
	mov.b64	%rd3148, {%r12316, %r12317};
	mov.b64	%rd3149, {%r12314, %r12315};
	mov.b64	%rd3150, {%r12312, %r12313};
	mov.b64	%rd3151, {%r12310, %r12311};
	mov.b64	%rd3152, {%r2973, %r2972};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2974,%dummy}, %rd8841;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2975}, %rd8841;
	}
	shf.r.wrap.b32 	%r2976, %r2975, %r2974, 18;
	shf.r.wrap.b32 	%r2977, %r2974, %r2975, 18;
	mov.b64 	%rd3153, {%r2977, %r2976};
	shf.r.wrap.b32 	%r2978, %r2975, %r2974, 14;
	shf.r.wrap.b32 	%r2979, %r2974, %r2975, 14;
	mov.b64 	%rd3154, {%r2979, %r2978};
	xor.b64  	%rd3155, %rd3153, %rd3154;
	shf.l.wrap.b32 	%r2980, %r2974, %r2975, 23;
	shf.l.wrap.b32 	%r2981, %r2975, %r2974, 23;
	mov.b64 	%rd3156, {%r2981, %r2980};
	xor.b64  	%rd3157, %rd3155, %rd3156;
	xor.b64  	%rd3158, %rd8839, %rd8840;
	and.b64  	%rd3159, %rd3158, %rd8841;
	xor.b64  	%rd3160, %rd3159, %rd8839;
	add.s64 	%rd3161, %rd3160, %rd8838;
	add.s64 	%rd3162, %rd3161, %rd3137;
	add.s64 	%rd3163, %rd3162, %rd36;
	add.s64 	%rd3164, %rd3163, %rd3157;
	add.s64 	%rd3165, %rd3164, %rd8842;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2982}, %rd8845;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2983,%dummy}, %rd8845;
	}
	shf.l.wrap.b32 	%r2984, %r2983, %r2982, 30;
	shf.l.wrap.b32 	%r2985, %r2982, %r2983, 30;
	mov.b64 	%rd3166, {%r2985, %r2984};
	shf.r.wrap.b32 	%r2986, %r2982, %r2983, 28;
	shf.r.wrap.b32 	%r2987, %r2983, %r2982, 28;
	mov.b64 	%rd3167, {%r2987, %r2986};
	xor.b64  	%rd3168, %rd3166, %rd3167;
	shf.l.wrap.b32 	%r2988, %r2983, %r2982, 25;
	shf.l.wrap.b32 	%r2989, %r2982, %r2983, 25;
	mov.b64 	%rd3169, {%r2989, %r2988};
	xor.b64  	%rd3170, %rd3168, %rd3169;
	xor.b64  	%rd3171, %rd8844, %rd8845;
	xor.b64  	%rd3172, %rd8843, %rd8845;
	and.b64  	%rd3173, %rd3172, %rd3171;
	xor.b64  	%rd3174, %rd3173, %rd8845;
	add.s64 	%rd3175, %rd3164, %rd3174;
	add.s64 	%rd3176, %rd3175, %rd3170;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2990,%dummy}, %rd3165;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2991}, %rd3165;
	}
	shf.r.wrap.b32 	%r2992, %r2991, %r2990, 14;
	shf.r.wrap.b32 	%r2993, %r2990, %r2991, 14;
	mov.b64 	%rd3177, {%r2993, %r2992};
	shf.r.wrap.b32 	%r2994, %r2991, %r2990, 18;
	shf.r.wrap.b32 	%r2995, %r2990, %r2991, 18;
	mov.b64 	%rd3178, {%r2995, %r2994};
	xor.b64  	%rd3179, %rd3178, %rd3177;
	shf.l.wrap.b32 	%r2996, %r2990, %r2991, 23;
	shf.l.wrap.b32 	%r2997, %r2991, %r2990, 23;
	mov.b64 	%rd3180, {%r2997, %r2996};
	xor.b64  	%rd3181, %rd3179, %rd3180;
	xor.b64  	%rd3182, %rd8840, %rd8841;
	and.b64  	%rd3183, %rd3165, %rd3182;
	xor.b64  	%rd3184, %rd3183, %rd8840;
	add.s64 	%rd3185, %rd3138, %rd8839;
	add.s64 	%rd3186, %rd3185, %rd37;
	add.s64 	%rd3187, %rd3186, %rd3184;
	add.s64 	%rd3188, %rd3187, %rd3181;
	add.s64 	%rd3189, %rd3188, %rd8843;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2998,%dummy}, %rd3176;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2999}, %rd3176;
	}
	shf.r.wrap.b32 	%r3000, %r2999, %r2998, 28;
	shf.r.wrap.b32 	%r3001, %r2998, %r2999, 28;
	mov.b64 	%rd3190, {%r3001, %r3000};
	shf.l.wrap.b32 	%r3002, %r2998, %r2999, 30;
	shf.l.wrap.b32 	%r3003, %r2999, %r2998, 30;
	mov.b64 	%rd3191, {%r3003, %r3002};
	xor.b64  	%rd3192, %rd3191, %rd3190;
	shf.l.wrap.b32 	%r3004, %r2998, %r2999, 25;
	shf.l.wrap.b32 	%r3005, %r2999, %r2998, 25;
	mov.b64 	%rd3193, {%r3005, %r3004};
	xor.b64  	%rd3194, %rd3192, %rd3193;
	xor.b64  	%rd3195, %rd3176, %rd8844;
	xor.b64  	%rd3196, %rd3176, %rd8845;
	and.b64  	%rd3197, %rd3196, %rd3195;
	xor.b64  	%rd3198, %rd3197, %rd3176;
	add.s64 	%rd3199, %rd3188, %rd3198;
	add.s64 	%rd3200, %rd3199, %rd3194;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3006,%dummy}, %rd3189;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3007}, %rd3189;
	}
	shf.r.wrap.b32 	%r3008, %r3007, %r3006, 14;
	shf.r.wrap.b32 	%r3009, %r3006, %r3007, 14;
	mov.b64 	%rd3201, {%r3009, %r3008};
	shf.r.wrap.b32 	%r3010, %r3007, %r3006, 18;
	shf.r.wrap.b32 	%r3011, %r3006, %r3007, 18;
	mov.b64 	%rd3202, {%r3011, %r3010};
	xor.b64  	%rd3203, %rd3202, %rd3201;
	shf.l.wrap.b32 	%r3012, %r3006, %r3007, 23;
	shf.l.wrap.b32 	%r3013, %r3007, %r3006, 23;
	mov.b64 	%rd3204, {%r3013, %r3012};
	xor.b64  	%rd3205, %rd3203, %rd3204;
	xor.b64  	%rd3206, %rd3165, %rd8841;
	and.b64  	%rd3207, %rd3189, %rd3206;
	xor.b64  	%rd3208, %rd3207, %rd8841;
	add.s64 	%rd3209, %rd3139, %rd8840;
	add.s64 	%rd3210, %rd3209, %rd38;
	add.s64 	%rd3211, %rd3210, %rd3208;
	add.s64 	%rd3212, %rd3211, %rd3205;
	add.s64 	%rd3213, %rd3212, %rd8844;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3014,%dummy}, %rd3200;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3015}, %rd3200;
	}
	shf.r.wrap.b32 	%r3016, %r3015, %r3014, 28;
	shf.r.wrap.b32 	%r3017, %r3014, %r3015, 28;
	mov.b64 	%rd3214, {%r3017, %r3016};
	shf.l.wrap.b32 	%r3018, %r3014, %r3015, 30;
	shf.l.wrap.b32 	%r3019, %r3015, %r3014, 30;
	mov.b64 	%rd3215, {%r3019, %r3018};
	xor.b64  	%rd3216, %rd3215, %rd3214;
	shf.l.wrap.b32 	%r3020, %r3014, %r3015, 25;
	shf.l.wrap.b32 	%r3021, %r3015, %r3014, 25;
	mov.b64 	%rd3217, {%r3021, %r3020};
	xor.b64  	%rd3218, %rd3216, %rd3217;
	xor.b64  	%rd3219, %rd3200, %rd8845;
	xor.b64  	%rd3220, %rd3200, %rd3176;
	and.b64  	%rd3221, %rd3220, %rd3219;
	xor.b64  	%rd3222, %rd3221, %rd3200;
	add.s64 	%rd3223, %rd3212, %rd3222;
	add.s64 	%rd3224, %rd3223, %rd3218;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3022,%dummy}, %rd3213;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3023}, %rd3213;
	}
	shf.r.wrap.b32 	%r3024, %r3023, %r3022, 14;
	shf.r.wrap.b32 	%r3025, %r3022, %r3023, 14;
	mov.b64 	%rd3225, {%r3025, %r3024};
	shf.r.wrap.b32 	%r3026, %r3023, %r3022, 18;
	shf.r.wrap.b32 	%r3027, %r3022, %r3023, 18;
	mov.b64 	%rd3226, {%r3027, %r3026};
	xor.b64  	%rd3227, %rd3226, %rd3225;
	shf.l.wrap.b32 	%r3028, %r3022, %r3023, 23;
	shf.l.wrap.b32 	%r3029, %r3023, %r3022, 23;
	mov.b64 	%rd3228, {%r3029, %r3028};
	xor.b64  	%rd3229, %rd3227, %rd3228;
	xor.b64  	%rd3230, %rd3189, %rd3165;
	and.b64  	%rd3231, %rd3213, %rd3230;
	xor.b64  	%rd3232, %rd3231, %rd3165;
	add.s64 	%rd3233, %rd3140, %rd8841;
	add.s64 	%rd3234, %rd3233, %rd39;
	add.s64 	%rd3235, %rd3234, %rd3232;
	add.s64 	%rd3236, %rd3235, %rd3229;
	add.s64 	%rd3237, %rd3236, %rd8845;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3030,%dummy}, %rd3224;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3031}, %rd3224;
	}
	shf.r.wrap.b32 	%r3032, %r3031, %r3030, 28;
	shf.r.wrap.b32 	%r3033, %r3030, %r3031, 28;
	mov.b64 	%rd3238, {%r3033, %r3032};
	shf.l.wrap.b32 	%r3034, %r3030, %r3031, 30;
	shf.l.wrap.b32 	%r3035, %r3031, %r3030, 30;
	mov.b64 	%rd3239, {%r3035, %r3034};
	xor.b64  	%rd3240, %rd3239, %rd3238;
	shf.l.wrap.b32 	%r3036, %r3030, %r3031, 25;
	shf.l.wrap.b32 	%r3037, %r3031, %r3030, 25;
	mov.b64 	%rd3241, {%r3037, %r3036};
	xor.b64  	%rd3242, %rd3240, %rd3241;
	xor.b64  	%rd3243, %rd3224, %rd3176;
	xor.b64  	%rd3244, %rd3224, %rd3200;
	and.b64  	%rd3245, %rd3244, %rd3243;
	xor.b64  	%rd3246, %rd3245, %rd3224;
	add.s64 	%rd3247, %rd3236, %rd3246;
	add.s64 	%rd3248, %rd3247, %rd3242;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3038,%dummy}, %rd3237;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3039}, %rd3237;
	}
	shf.r.wrap.b32 	%r3040, %r3039, %r3038, 14;
	shf.r.wrap.b32 	%r3041, %r3038, %r3039, 14;
	mov.b64 	%rd3249, {%r3041, %r3040};
	shf.r.wrap.b32 	%r3042, %r3039, %r3038, 18;
	shf.r.wrap.b32 	%r3043, %r3038, %r3039, 18;
	mov.b64 	%rd3250, {%r3043, %r3042};
	xor.b64  	%rd3251, %rd3250, %rd3249;
	shf.l.wrap.b32 	%r3044, %r3038, %r3039, 23;
	shf.l.wrap.b32 	%r3045, %r3039, %r3038, 23;
	mov.b64 	%rd3252, {%r3045, %r3044};
	xor.b64  	%rd3253, %rd3251, %rd3252;
	xor.b64  	%rd3254, %rd3213, %rd3189;
	and.b64  	%rd3255, %rd3237, %rd3254;
	xor.b64  	%rd3256, %rd3255, %rd3189;
	add.s64 	%rd3257, %rd3165, %rd3141;
	add.s64 	%rd3258, %rd3257, %rd40;
	add.s64 	%rd3259, %rd3258, %rd3256;
	add.s64 	%rd3260, %rd3259, %rd3253;
	add.s64 	%rd3261, %rd3260, %rd3176;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3046,%dummy}, %rd3248;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3047}, %rd3248;
	}
	shf.r.wrap.b32 	%r3048, %r3047, %r3046, 28;
	shf.r.wrap.b32 	%r3049, %r3046, %r3047, 28;
	mov.b64 	%rd3262, {%r3049, %r3048};
	shf.l.wrap.b32 	%r3050, %r3046, %r3047, 30;
	shf.l.wrap.b32 	%r3051, %r3047, %r3046, 30;
	mov.b64 	%rd3263, {%r3051, %r3050};
	xor.b64  	%rd3264, %rd3263, %rd3262;
	shf.l.wrap.b32 	%r3052, %r3046, %r3047, 25;
	shf.l.wrap.b32 	%r3053, %r3047, %r3046, 25;
	mov.b64 	%rd3265, {%r3053, %r3052};
	xor.b64  	%rd3266, %rd3264, %rd3265;
	xor.b64  	%rd3267, %rd3248, %rd3200;
	xor.b64  	%rd3268, %rd3248, %rd3224;
	and.b64  	%rd3269, %rd3268, %rd3267;
	xor.b64  	%rd3270, %rd3269, %rd3248;
	add.s64 	%rd3271, %rd3260, %rd3270;
	add.s64 	%rd3272, %rd3271, %rd3266;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3054,%dummy}, %rd3261;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3055}, %rd3261;
	}
	shf.r.wrap.b32 	%r3056, %r3055, %r3054, 14;
	shf.r.wrap.b32 	%r3057, %r3054, %r3055, 14;
	mov.b64 	%rd3273, {%r3057, %r3056};
	shf.r.wrap.b32 	%r3058, %r3055, %r3054, 18;
	shf.r.wrap.b32 	%r3059, %r3054, %r3055, 18;
	mov.b64 	%rd3274, {%r3059, %r3058};
	xor.b64  	%rd3275, %rd3274, %rd3273;
	shf.l.wrap.b32 	%r3060, %r3054, %r3055, 23;
	shf.l.wrap.b32 	%r3061, %r3055, %r3054, 23;
	mov.b64 	%rd3276, {%r3061, %r3060};
	xor.b64  	%rd3277, %rd3275, %rd3276;
	xor.b64  	%rd3278, %rd3237, %rd3213;
	and.b64  	%rd3279, %rd3261, %rd3278;
	xor.b64  	%rd3280, %rd3279, %rd3213;
	add.s64 	%rd3281, %rd3189, %rd3142;
	add.s64 	%rd3282, %rd3281, %rd41;
	add.s64 	%rd3283, %rd3282, %rd3280;
	add.s64 	%rd3284, %rd3283, %rd3277;
	add.s64 	%rd3285, %rd3284, %rd3200;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3062,%dummy}, %rd3272;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3063}, %rd3272;
	}
	shf.r.wrap.b32 	%r3064, %r3063, %r3062, 28;
	shf.r.wrap.b32 	%r3065, %r3062, %r3063, 28;
	mov.b64 	%rd3286, {%r3065, %r3064};
	shf.l.wrap.b32 	%r3066, %r3062, %r3063, 30;
	shf.l.wrap.b32 	%r3067, %r3063, %r3062, 30;
	mov.b64 	%rd3287, {%r3067, %r3066};
	xor.b64  	%rd3288, %rd3287, %rd3286;
	shf.l.wrap.b32 	%r3068, %r3062, %r3063, 25;
	shf.l.wrap.b32 	%r3069, %r3063, %r3062, 25;
	mov.b64 	%rd3289, {%r3069, %r3068};
	xor.b64  	%rd3290, %rd3288, %rd3289;
	xor.b64  	%rd3291, %rd3272, %rd3224;
	xor.b64  	%rd3292, %rd3272, %rd3248;
	and.b64  	%rd3293, %rd3292, %rd3291;
	xor.b64  	%rd3294, %rd3293, %rd3272;
	add.s64 	%rd3295, %rd3284, %rd3294;
	add.s64 	%rd3296, %rd3295, %rd3290;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3070,%dummy}, %rd3285;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3071}, %rd3285;
	}
	shf.r.wrap.b32 	%r3072, %r3071, %r3070, 14;
	shf.r.wrap.b32 	%r3073, %r3070, %r3071, 14;
	mov.b64 	%rd3297, {%r3073, %r3072};
	shf.r.wrap.b32 	%r3074, %r3071, %r3070, 18;
	shf.r.wrap.b32 	%r3075, %r3070, %r3071, 18;
	mov.b64 	%rd3298, {%r3075, %r3074};
	xor.b64  	%rd3299, %rd3298, %rd3297;
	shf.l.wrap.b32 	%r3076, %r3070, %r3071, 23;
	shf.l.wrap.b32 	%r3077, %r3071, %r3070, 23;
	mov.b64 	%rd3300, {%r3077, %r3076};
	xor.b64  	%rd3301, %rd3299, %rd3300;
	xor.b64  	%rd3302, %rd3261, %rd3237;
	and.b64  	%rd3303, %rd3285, %rd3302;
	xor.b64  	%rd3304, %rd3303, %rd3237;
	add.s64 	%rd3305, %rd3213, %rd3143;
	add.s64 	%rd3306, %rd3305, %rd42;
	add.s64 	%rd3307, %rd3306, %rd3304;
	add.s64 	%rd3308, %rd3307, %rd3301;
	add.s64 	%rd3309, %rd3308, %rd3224;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3078,%dummy}, %rd3296;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3079}, %rd3296;
	}
	shf.r.wrap.b32 	%r3080, %r3079, %r3078, 28;
	shf.r.wrap.b32 	%r3081, %r3078, %r3079, 28;
	mov.b64 	%rd3310, {%r3081, %r3080};
	shf.l.wrap.b32 	%r3082, %r3078, %r3079, 30;
	shf.l.wrap.b32 	%r3083, %r3079, %r3078, 30;
	mov.b64 	%rd3311, {%r3083, %r3082};
	xor.b64  	%rd3312, %rd3311, %rd3310;
	shf.l.wrap.b32 	%r3084, %r3078, %r3079, 25;
	shf.l.wrap.b32 	%r3085, %r3079, %r3078, 25;
	mov.b64 	%rd3313, {%r3085, %r3084};
	xor.b64  	%rd3314, %rd3312, %rd3313;
	xor.b64  	%rd3315, %rd3296, %rd3248;
	xor.b64  	%rd3316, %rd3296, %rd3272;
	and.b64  	%rd3317, %rd3316, %rd3315;
	xor.b64  	%rd3318, %rd3317, %rd3296;
	add.s64 	%rd3319, %rd3308, %rd3318;
	add.s64 	%rd3320, %rd3319, %rd3314;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3086,%dummy}, %rd3309;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3087}, %rd3309;
	}
	shf.r.wrap.b32 	%r3088, %r3087, %r3086, 14;
	shf.r.wrap.b32 	%r3089, %r3086, %r3087, 14;
	mov.b64 	%rd3321, {%r3089, %r3088};
	shf.r.wrap.b32 	%r3090, %r3087, %r3086, 18;
	shf.r.wrap.b32 	%r3091, %r3086, %r3087, 18;
	mov.b64 	%rd3322, {%r3091, %r3090};
	xor.b64  	%rd3323, %rd3322, %rd3321;
	shf.l.wrap.b32 	%r3092, %r3086, %r3087, 23;
	shf.l.wrap.b32 	%r3093, %r3087, %r3086, 23;
	mov.b64 	%rd3324, {%r3093, %r3092};
	xor.b64  	%rd3325, %rd3323, %rd3324;
	xor.b64  	%rd3326, %rd3285, %rd3261;
	and.b64  	%rd3327, %rd3309, %rd3326;
	xor.b64  	%rd3328, %rd3327, %rd3261;
	add.s64 	%rd3329, %rd3237, %rd3144;
	add.s64 	%rd3330, %rd3329, %rd43;
	add.s64 	%rd3331, %rd3330, %rd3328;
	add.s64 	%rd3332, %rd3331, %rd3325;
	add.s64 	%rd3333, %rd3332, %rd3248;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3094,%dummy}, %rd3320;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3095}, %rd3320;
	}
	shf.r.wrap.b32 	%r3096, %r3095, %r3094, 28;
	shf.r.wrap.b32 	%r3097, %r3094, %r3095, 28;
	mov.b64 	%rd3334, {%r3097, %r3096};
	shf.l.wrap.b32 	%r3098, %r3094, %r3095, 30;
	shf.l.wrap.b32 	%r3099, %r3095, %r3094, 30;
	mov.b64 	%rd3335, {%r3099, %r3098};
	xor.b64  	%rd3336, %rd3335, %rd3334;
	shf.l.wrap.b32 	%r3100, %r3094, %r3095, 25;
	shf.l.wrap.b32 	%r3101, %r3095, %r3094, 25;
	mov.b64 	%rd3337, {%r3101, %r3100};
	xor.b64  	%rd3338, %rd3336, %rd3337;
	xor.b64  	%rd3339, %rd3320, %rd3272;
	xor.b64  	%rd3340, %rd3320, %rd3296;
	and.b64  	%rd3341, %rd3340, %rd3339;
	xor.b64  	%rd3342, %rd3341, %rd3320;
	add.s64 	%rd3343, %rd3332, %rd3342;
	add.s64 	%rd3344, %rd3343, %rd3338;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3102,%dummy}, %rd3333;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3103}, %rd3333;
	}
	shf.r.wrap.b32 	%r3104, %r3103, %r3102, 14;
	shf.r.wrap.b32 	%r3105, %r3102, %r3103, 14;
	mov.b64 	%rd3345, {%r3105, %r3104};
	shf.r.wrap.b32 	%r3106, %r3103, %r3102, 18;
	shf.r.wrap.b32 	%r3107, %r3102, %r3103, 18;
	mov.b64 	%rd3346, {%r3107, %r3106};
	xor.b64  	%rd3347, %rd3346, %rd3345;
	shf.l.wrap.b32 	%r3108, %r3102, %r3103, 23;
	shf.l.wrap.b32 	%r3109, %r3103, %r3102, 23;
	mov.b64 	%rd3348, {%r3109, %r3108};
	xor.b64  	%rd3349, %rd3347, %rd3348;
	xor.b64  	%rd3350, %rd3309, %rd3285;
	and.b64  	%rd3351, %rd3333, %rd3350;
	xor.b64  	%rd3352, %rd3351, %rd3285;
	add.s64 	%rd3353, %rd3261, %rd3145;
	add.s64 	%rd3354, %rd3353, %rd44;
	add.s64 	%rd3355, %rd3354, %rd3352;
	add.s64 	%rd3356, %rd3355, %rd3349;
	add.s64 	%rd3357, %rd3356, %rd3272;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3110,%dummy}, %rd3344;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3111}, %rd3344;
	}
	shf.r.wrap.b32 	%r3112, %r3111, %r3110, 28;
	shf.r.wrap.b32 	%r3113, %r3110, %r3111, 28;
	mov.b64 	%rd3358, {%r3113, %r3112};
	shf.l.wrap.b32 	%r3114, %r3110, %r3111, 30;
	shf.l.wrap.b32 	%r3115, %r3111, %r3110, 30;
	mov.b64 	%rd3359, {%r3115, %r3114};
	xor.b64  	%rd3360, %rd3359, %rd3358;
	shf.l.wrap.b32 	%r3116, %r3110, %r3111, 25;
	shf.l.wrap.b32 	%r3117, %r3111, %r3110, 25;
	mov.b64 	%rd3361, {%r3117, %r3116};
	xor.b64  	%rd3362, %rd3360, %rd3361;
	xor.b64  	%rd3363, %rd3344, %rd3296;
	xor.b64  	%rd3364, %rd3344, %rd3320;
	and.b64  	%rd3365, %rd3364, %rd3363;
	xor.b64  	%rd3366, %rd3365, %rd3344;
	add.s64 	%rd3367, %rd3356, %rd3366;
	add.s64 	%rd3368, %rd3367, %rd3362;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3118,%dummy}, %rd3357;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3119}, %rd3357;
	}
	shf.r.wrap.b32 	%r3120, %r3119, %r3118, 14;
	shf.r.wrap.b32 	%r3121, %r3118, %r3119, 14;
	mov.b64 	%rd3369, {%r3121, %r3120};
	shf.r.wrap.b32 	%r3122, %r3119, %r3118, 18;
	shf.r.wrap.b32 	%r3123, %r3118, %r3119, 18;
	mov.b64 	%rd3370, {%r3123, %r3122};
	xor.b64  	%rd3371, %rd3370, %rd3369;
	shf.l.wrap.b32 	%r3124, %r3118, %r3119, 23;
	shf.l.wrap.b32 	%r3125, %r3119, %r3118, 23;
	mov.b64 	%rd3372, {%r3125, %r3124};
	xor.b64  	%rd3373, %rd3371, %rd3372;
	xor.b64  	%rd3374, %rd3333, %rd3309;
	and.b64  	%rd3375, %rd3357, %rd3374;
	xor.b64  	%rd3376, %rd3375, %rd3309;
	add.s64 	%rd3377, %rd3285, %rd3146;
	add.s64 	%rd3378, %rd3377, %rd45;
	add.s64 	%rd3379, %rd3378, %rd3376;
	add.s64 	%rd3380, %rd3379, %rd3373;
	add.s64 	%rd3381, %rd3380, %rd3296;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3126,%dummy}, %rd3368;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3127}, %rd3368;
	}
	shf.r.wrap.b32 	%r3128, %r3127, %r3126, 28;
	shf.r.wrap.b32 	%r3129, %r3126, %r3127, 28;
	mov.b64 	%rd3382, {%r3129, %r3128};
	shf.l.wrap.b32 	%r3130, %r3126, %r3127, 30;
	shf.l.wrap.b32 	%r3131, %r3127, %r3126, 30;
	mov.b64 	%rd3383, {%r3131, %r3130};
	xor.b64  	%rd3384, %rd3383, %rd3382;
	shf.l.wrap.b32 	%r3132, %r3126, %r3127, 25;
	shf.l.wrap.b32 	%r3133, %r3127, %r3126, 25;
	mov.b64 	%rd3385, {%r3133, %r3132};
	xor.b64  	%rd3386, %rd3384, %rd3385;
	xor.b64  	%rd3387, %rd3368, %rd3320;
	xor.b64  	%rd3388, %rd3368, %rd3344;
	and.b64  	%rd3389, %rd3388, %rd3387;
	xor.b64  	%rd3390, %rd3389, %rd3368;
	add.s64 	%rd3391, %rd3380, %rd3390;
	add.s64 	%rd3392, %rd3391, %rd3386;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3134,%dummy}, %rd3381;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3135}, %rd3381;
	}
	shf.r.wrap.b32 	%r3136, %r3135, %r3134, 14;
	shf.r.wrap.b32 	%r3137, %r3134, %r3135, 14;
	mov.b64 	%rd3393, {%r3137, %r3136};
	shf.r.wrap.b32 	%r3138, %r3135, %r3134, 18;
	shf.r.wrap.b32 	%r3139, %r3134, %r3135, 18;
	mov.b64 	%rd3394, {%r3139, %r3138};
	xor.b64  	%rd3395, %rd3394, %rd3393;
	shf.l.wrap.b32 	%r3140, %r3134, %r3135, 23;
	shf.l.wrap.b32 	%r3141, %r3135, %r3134, 23;
	mov.b64 	%rd3396, {%r3141, %r3140};
	xor.b64  	%rd3397, %rd3395, %rd3396;
	xor.b64  	%rd3398, %rd3357, %rd3333;
	and.b64  	%rd3399, %rd3381, %rd3398;
	xor.b64  	%rd3400, %rd3399, %rd3333;
	add.s64 	%rd3401, %rd3309, %rd3147;
	add.s64 	%rd3402, %rd3401, %rd46;
	add.s64 	%rd3403, %rd3402, %rd3400;
	add.s64 	%rd3404, %rd3403, %rd3397;
	add.s64 	%rd3405, %rd3404, %rd3320;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3142,%dummy}, %rd3392;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3143}, %rd3392;
	}
	shf.r.wrap.b32 	%r3144, %r3143, %r3142, 28;
	shf.r.wrap.b32 	%r3145, %r3142, %r3143, 28;
	mov.b64 	%rd3406, {%r3145, %r3144};
	shf.l.wrap.b32 	%r3146, %r3142, %r3143, 30;
	shf.l.wrap.b32 	%r3147, %r3143, %r3142, 30;
	mov.b64 	%rd3407, {%r3147, %r3146};
	xor.b64  	%rd3408, %rd3407, %rd3406;
	shf.l.wrap.b32 	%r3148, %r3142, %r3143, 25;
	shf.l.wrap.b32 	%r3149, %r3143, %r3142, 25;
	mov.b64 	%rd3409, {%r3149, %r3148};
	xor.b64  	%rd3410, %rd3408, %rd3409;
	xor.b64  	%rd3411, %rd3392, %rd3344;
	xor.b64  	%rd3412, %rd3392, %rd3368;
	and.b64  	%rd3413, %rd3412, %rd3411;
	xor.b64  	%rd3414, %rd3413, %rd3392;
	add.s64 	%rd3415, %rd3404, %rd3414;
	add.s64 	%rd3416, %rd3415, %rd3410;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3150,%dummy}, %rd3405;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3151}, %rd3405;
	}
	shf.r.wrap.b32 	%r3152, %r3151, %r3150, 14;
	shf.r.wrap.b32 	%r3153, %r3150, %r3151, 14;
	mov.b64 	%rd3417, {%r3153, %r3152};
	shf.r.wrap.b32 	%r3154, %r3151, %r3150, 18;
	shf.r.wrap.b32 	%r3155, %r3150, %r3151, 18;
	mov.b64 	%rd3418, {%r3155, %r3154};
	xor.b64  	%rd3419, %rd3418, %rd3417;
	shf.l.wrap.b32 	%r3156, %r3150, %r3151, 23;
	shf.l.wrap.b32 	%r3157, %r3151, %r3150, 23;
	mov.b64 	%rd3420, {%r3157, %r3156};
	xor.b64  	%rd3421, %rd3419, %rd3420;
	xor.b64  	%rd3422, %rd3381, %rd3357;
	and.b64  	%rd3423, %rd3405, %rd3422;
	xor.b64  	%rd3424, %rd3423, %rd3357;
	add.s64 	%rd3425, %rd3333, %rd3148;
	add.s64 	%rd3426, %rd3425, %rd47;
	add.s64 	%rd3427, %rd3426, %rd3424;
	add.s64 	%rd3428, %rd3427, %rd3421;
	add.s64 	%rd3429, %rd3428, %rd3344;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3158,%dummy}, %rd3416;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3159}, %rd3416;
	}
	shf.r.wrap.b32 	%r3160, %r3159, %r3158, 28;
	shf.r.wrap.b32 	%r3161, %r3158, %r3159, 28;
	mov.b64 	%rd3430, {%r3161, %r3160};
	shf.l.wrap.b32 	%r3162, %r3158, %r3159, 30;
	shf.l.wrap.b32 	%r3163, %r3159, %r3158, 30;
	mov.b64 	%rd3431, {%r3163, %r3162};
	xor.b64  	%rd3432, %rd3431, %rd3430;
	shf.l.wrap.b32 	%r3164, %r3158, %r3159, 25;
	shf.l.wrap.b32 	%r3165, %r3159, %r3158, 25;
	mov.b64 	%rd3433, {%r3165, %r3164};
	xor.b64  	%rd3434, %rd3432, %rd3433;
	xor.b64  	%rd3435, %rd3416, %rd3368;
	xor.b64  	%rd3436, %rd3416, %rd3392;
	and.b64  	%rd3437, %rd3436, %rd3435;
	xor.b64  	%rd3438, %rd3437, %rd3416;
	add.s64 	%rd3439, %rd3428, %rd3438;
	add.s64 	%rd3440, %rd3439, %rd3434;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3166,%dummy}, %rd3429;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3167}, %rd3429;
	}
	shf.r.wrap.b32 	%r3168, %r3167, %r3166, 14;
	shf.r.wrap.b32 	%r3169, %r3166, %r3167, 14;
	mov.b64 	%rd3441, {%r3169, %r3168};
	shf.r.wrap.b32 	%r3170, %r3167, %r3166, 18;
	shf.r.wrap.b32 	%r3171, %r3166, %r3167, 18;
	mov.b64 	%rd3442, {%r3171, %r3170};
	xor.b64  	%rd3443, %rd3442, %rd3441;
	shf.l.wrap.b32 	%r3172, %r3166, %r3167, 23;
	shf.l.wrap.b32 	%r3173, %r3167, %r3166, 23;
	mov.b64 	%rd3444, {%r3173, %r3172};
	xor.b64  	%rd3445, %rd3443, %rd3444;
	xor.b64  	%rd3446, %rd3405, %rd3381;
	and.b64  	%rd3447, %rd3429, %rd3446;
	xor.b64  	%rd3448, %rd3447, %rd3381;
	add.s64 	%rd3449, %rd3357, %rd3149;
	add.s64 	%rd3450, %rd3449, %rd48;
	add.s64 	%rd3451, %rd3450, %rd3448;
	add.s64 	%rd3452, %rd3451, %rd3445;
	add.s64 	%rd3453, %rd3452, %rd3368;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3174,%dummy}, %rd3440;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3175}, %rd3440;
	}
	shf.r.wrap.b32 	%r3176, %r3175, %r3174, 28;
	shf.r.wrap.b32 	%r3177, %r3174, %r3175, 28;
	mov.b64 	%rd3454, {%r3177, %r3176};
	shf.l.wrap.b32 	%r3178, %r3174, %r3175, 30;
	shf.l.wrap.b32 	%r3179, %r3175, %r3174, 30;
	mov.b64 	%rd3455, {%r3179, %r3178};
	xor.b64  	%rd3456, %rd3455, %rd3454;
	shf.l.wrap.b32 	%r3180, %r3174, %r3175, 25;
	shf.l.wrap.b32 	%r3181, %r3175, %r3174, 25;
	mov.b64 	%rd3457, {%r3181, %r3180};
	xor.b64  	%rd3458, %rd3456, %rd3457;
	xor.b64  	%rd3459, %rd3440, %rd3392;
	xor.b64  	%rd3460, %rd3440, %rd3416;
	and.b64  	%rd3461, %rd3460, %rd3459;
	xor.b64  	%rd3462, %rd3461, %rd3440;
	add.s64 	%rd3463, %rd3452, %rd3462;
	add.s64 	%rd3464, %rd3463, %rd3458;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3182,%dummy}, %rd3453;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3183}, %rd3453;
	}
	shf.r.wrap.b32 	%r3184, %r3183, %r3182, 14;
	shf.r.wrap.b32 	%r3185, %r3182, %r3183, 14;
	mov.b64 	%rd3465, {%r3185, %r3184};
	shf.r.wrap.b32 	%r3186, %r3183, %r3182, 18;
	shf.r.wrap.b32 	%r3187, %r3182, %r3183, 18;
	mov.b64 	%rd3466, {%r3187, %r3186};
	xor.b64  	%rd3467, %rd3466, %rd3465;
	shf.l.wrap.b32 	%r3188, %r3182, %r3183, 23;
	shf.l.wrap.b32 	%r3189, %r3183, %r3182, 23;
	mov.b64 	%rd3468, {%r3189, %r3188};
	xor.b64  	%rd3469, %rd3467, %rd3468;
	xor.b64  	%rd3470, %rd3429, %rd3405;
	and.b64  	%rd3471, %rd3453, %rd3470;
	xor.b64  	%rd3472, %rd3471, %rd3405;
	add.s64 	%rd3473, %rd3381, %rd3150;
	add.s64 	%rd3474, %rd3473, %rd49;
	add.s64 	%rd3475, %rd3474, %rd3472;
	add.s64 	%rd3476, %rd3475, %rd3469;
	add.s64 	%rd3477, %rd3476, %rd3392;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3190,%dummy}, %rd3464;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3191}, %rd3464;
	}
	shf.r.wrap.b32 	%r3192, %r3191, %r3190, 28;
	shf.r.wrap.b32 	%r3193, %r3190, %r3191, 28;
	mov.b64 	%rd3478, {%r3193, %r3192};
	shf.l.wrap.b32 	%r3194, %r3190, %r3191, 30;
	shf.l.wrap.b32 	%r3195, %r3191, %r3190, 30;
	mov.b64 	%rd3479, {%r3195, %r3194};
	xor.b64  	%rd3480, %rd3479, %rd3478;
	shf.l.wrap.b32 	%r3196, %r3190, %r3191, 25;
	shf.l.wrap.b32 	%r3197, %r3191, %r3190, 25;
	mov.b64 	%rd3481, {%r3197, %r3196};
	xor.b64  	%rd3482, %rd3480, %rd3481;
	xor.b64  	%rd3483, %rd3464, %rd3416;
	xor.b64  	%rd3484, %rd3464, %rd3440;
	and.b64  	%rd3485, %rd3484, %rd3483;
	xor.b64  	%rd3486, %rd3485, %rd3464;
	add.s64 	%rd3487, %rd3476, %rd3486;
	add.s64 	%rd3488, %rd3487, %rd3482;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3198,%dummy}, %rd3477;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3199}, %rd3477;
	}
	shf.r.wrap.b32 	%r3200, %r3199, %r3198, 14;
	shf.r.wrap.b32 	%r3201, %r3198, %r3199, 14;
	mov.b64 	%rd3489, {%r3201, %r3200};
	shf.r.wrap.b32 	%r3202, %r3199, %r3198, 18;
	shf.r.wrap.b32 	%r3203, %r3198, %r3199, 18;
	mov.b64 	%rd3490, {%r3203, %r3202};
	xor.b64  	%rd3491, %rd3490, %rd3489;
	shf.l.wrap.b32 	%r3204, %r3198, %r3199, 23;
	shf.l.wrap.b32 	%r3205, %r3199, %r3198, 23;
	mov.b64 	%rd3492, {%r3205, %r3204};
	xor.b64  	%rd3493, %rd3491, %rd3492;
	xor.b64  	%rd3494, %rd3453, %rd3429;
	and.b64  	%rd3495, %rd3477, %rd3494;
	xor.b64  	%rd3496, %rd3495, %rd3429;
	add.s64 	%rd3497, %rd3405, %rd3151;
	add.s64 	%rd3498, %rd3497, %rd50;
	add.s64 	%rd3499, %rd3498, %rd3496;
	add.s64 	%rd3500, %rd3499, %rd3493;
	add.s64 	%rd3501, %rd3500, %rd3416;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3206,%dummy}, %rd3488;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3207}, %rd3488;
	}
	shf.r.wrap.b32 	%r3208, %r3207, %r3206, 28;
	shf.r.wrap.b32 	%r3209, %r3206, %r3207, 28;
	mov.b64 	%rd3502, {%r3209, %r3208};
	shf.l.wrap.b32 	%r3210, %r3206, %r3207, 30;
	shf.l.wrap.b32 	%r3211, %r3207, %r3206, 30;
	mov.b64 	%rd3503, {%r3211, %r3210};
	xor.b64  	%rd3504, %rd3503, %rd3502;
	shf.l.wrap.b32 	%r3212, %r3206, %r3207, 25;
	shf.l.wrap.b32 	%r3213, %r3207, %r3206, 25;
	mov.b64 	%rd3505, {%r3213, %r3212};
	xor.b64  	%rd3506, %rd3504, %rd3505;
	xor.b64  	%rd3507, %rd3488, %rd3440;
	xor.b64  	%rd3508, %rd3488, %rd3464;
	and.b64  	%rd3509, %rd3508, %rd3507;
	xor.b64  	%rd3510, %rd3509, %rd3488;
	add.s64 	%rd3511, %rd3500, %rd3510;
	add.s64 	%rd3512, %rd3511, %rd3506;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3214,%dummy}, %rd3501;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3215}, %rd3501;
	}
	shf.r.wrap.b32 	%r3216, %r3215, %r3214, 14;
	shf.r.wrap.b32 	%r3217, %r3214, %r3215, 14;
	mov.b64 	%rd3513, {%r3217, %r3216};
	shf.r.wrap.b32 	%r3218, %r3215, %r3214, 18;
	shf.r.wrap.b32 	%r3219, %r3214, %r3215, 18;
	mov.b64 	%rd3514, {%r3219, %r3218};
	xor.b64  	%rd3515, %rd3514, %rd3513;
	shf.l.wrap.b32 	%r3220, %r3214, %r3215, 23;
	shf.l.wrap.b32 	%r3221, %r3215, %r3214, 23;
	mov.b64 	%rd3516, {%r3221, %r3220};
	xor.b64  	%rd3517, %rd3515, %rd3516;
	xor.b64  	%rd3518, %rd3477, %rd3453;
	and.b64  	%rd3519, %rd3501, %rd3518;
	xor.b64  	%rd3520, %rd3519, %rd3453;
	add.s64 	%rd3521, %rd3429, %rd3152;
	add.s64 	%rd3522, %rd3521, %rd51;
	add.s64 	%rd3523, %rd3522, %rd3520;
	add.s64 	%rd3524, %rd3523, %rd3517;
	add.s64 	%rd3525, %rd3524, %rd3440;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3222,%dummy}, %rd3512;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3223}, %rd3512;
	}
	shf.r.wrap.b32 	%r3224, %r3223, %r3222, 28;
	shf.r.wrap.b32 	%r3225, %r3222, %r3223, 28;
	mov.b64 	%rd3526, {%r3225, %r3224};
	shf.l.wrap.b32 	%r3226, %r3222, %r3223, 30;
	shf.l.wrap.b32 	%r3227, %r3223, %r3222, 30;
	mov.b64 	%rd3527, {%r3227, %r3226};
	xor.b64  	%rd3528, %rd3527, %rd3526;
	shf.l.wrap.b32 	%r3228, %r3222, %r3223, 25;
	shf.l.wrap.b32 	%r3229, %r3223, %r3222, 25;
	mov.b64 	%rd3529, {%r3229, %r3228};
	xor.b64  	%rd3530, %rd3528, %rd3529;
	xor.b64  	%rd3531, %rd3512, %rd3464;
	xor.b64  	%rd3532, %rd3512, %rd3488;
	and.b64  	%rd3533, %rd3532, %rd3531;
	xor.b64  	%rd3534, %rd3533, %rd3512;
	add.s64 	%rd3535, %rd3524, %rd3534;
	add.s64 	%rd3536, %rd3535, %rd3530;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3230,%dummy}, %rd3151;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3231}, %rd3151;
	}
	shf.r.wrap.b32 	%r3232, %r3231, %r3230, 19;
	shf.r.wrap.b32 	%r3233, %r3230, %r3231, 19;
	mov.b64 	%rd3537, {%r3233, %r3232};
	shf.l.wrap.b32 	%r3234, %r3230, %r3231, 3;
	shf.l.wrap.b32 	%r3235, %r3231, %r3230, 3;
	mov.b64 	%rd3538, {%r3235, %r3234};
	shr.u64 	%rd3539, %rd3151, 6;
	xor.b64  	%rd3540, %rd3537, %rd3539;
	xor.b64  	%rd3541, %rd3540, %rd3538;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3236,%dummy}, %rd3138;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3237}, %rd3138;
	}
	shf.r.wrap.b32 	%r3238, %r3237, %r3236, 1;
	shf.r.wrap.b32 	%r3239, %r3236, %r3237, 1;
	mov.b64 	%rd3542, {%r3239, %r3238};
	shf.r.wrap.b32 	%r3240, %r3237, %r3236, 8;
	shf.r.wrap.b32 	%r3241, %r3236, %r3237, 8;
	mov.b64 	%rd3543, {%r3241, %r3240};
	shr.u64 	%rd3544, %rd3138, 7;
	xor.b64  	%rd3545, %rd3542, %rd3544;
	xor.b64  	%rd3546, %rd3545, %rd3543;
	add.s64 	%rd3547, %rd3146, %rd3137;
	add.s64 	%rd3548, %rd3547, %rd3541;
	add.s64 	%rd3549, %rd3548, %rd3546;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3242,%dummy}, %rd3152;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3243}, %rd3152;
	}
	shf.r.wrap.b32 	%r3244, %r3243, %r3242, 19;
	shf.r.wrap.b32 	%r3245, %r3242, %r3243, 19;
	mov.b64 	%rd3550, {%r3245, %r3244};
	shf.l.wrap.b32 	%r3246, %r3242, %r3243, 3;
	shf.l.wrap.b32 	%r3247, %r3243, %r3242, 3;
	mov.b64 	%rd3551, {%r3247, %r3246};
	shr.u64 	%rd3552, %rd3152, 6;
	xor.b64  	%rd3553, %rd3550, %rd3552;
	xor.b64  	%rd3554, %rd3553, %rd3551;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3248,%dummy}, %rd3139;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3249}, %rd3139;
	}
	shf.r.wrap.b32 	%r3250, %r3249, %r3248, 1;
	shf.r.wrap.b32 	%r3251, %r3248, %r3249, 1;
	mov.b64 	%rd3555, {%r3251, %r3250};
	shf.r.wrap.b32 	%r3252, %r3249, %r3248, 8;
	shf.r.wrap.b32 	%r3253, %r3248, %r3249, 8;
	mov.b64 	%rd3556, {%r3253, %r3252};
	shr.u64 	%rd3557, %rd3139, 7;
	xor.b64  	%rd3558, %rd3555, %rd3557;
	xor.b64  	%rd3559, %rd3558, %rd3556;
	add.s64 	%rd3560, %rd3147, %rd3138;
	add.s64 	%rd3561, %rd3560, %rd3554;
	add.s64 	%rd3562, %rd3561, %rd3559;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3254,%dummy}, %rd3549;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3255}, %rd3549;
	}
	shf.r.wrap.b32 	%r3256, %r3255, %r3254, 19;
	shf.r.wrap.b32 	%r3257, %r3254, %r3255, 19;
	mov.b64 	%rd3563, {%r3257, %r3256};
	shf.l.wrap.b32 	%r3258, %r3254, %r3255, 3;
	shf.l.wrap.b32 	%r3259, %r3255, %r3254, 3;
	mov.b64 	%rd3564, {%r3259, %r3258};
	shr.u64 	%rd3565, %rd3549, 6;
	xor.b64  	%rd3566, %rd3563, %rd3565;
	xor.b64  	%rd3567, %rd3566, %rd3564;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3260,%dummy}, %rd3140;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3261}, %rd3140;
	}
	shf.r.wrap.b32 	%r3262, %r3261, %r3260, 1;
	shf.r.wrap.b32 	%r3263, %r3260, %r3261, 1;
	mov.b64 	%rd3568, {%r3263, %r3262};
	shf.r.wrap.b32 	%r3264, %r3261, %r3260, 8;
	shf.r.wrap.b32 	%r3265, %r3260, %r3261, 8;
	mov.b64 	%rd3569, {%r3265, %r3264};
	shr.u64 	%rd3570, %rd3140, 7;
	xor.b64  	%rd3571, %rd3568, %rd3570;
	xor.b64  	%rd3572, %rd3571, %rd3569;
	add.s64 	%rd3573, %rd3148, %rd3139;
	add.s64 	%rd3574, %rd3573, %rd3567;
	add.s64 	%rd3575, %rd3574, %rd3572;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3266,%dummy}, %rd3562;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3267}, %rd3562;
	}
	shf.r.wrap.b32 	%r3268, %r3267, %r3266, 19;
	shf.r.wrap.b32 	%r3269, %r3266, %r3267, 19;
	mov.b64 	%rd3576, {%r3269, %r3268};
	shf.l.wrap.b32 	%r3270, %r3266, %r3267, 3;
	shf.l.wrap.b32 	%r3271, %r3267, %r3266, 3;
	mov.b64 	%rd3577, {%r3271, %r3270};
	shr.u64 	%rd3578, %rd3562, 6;
	xor.b64  	%rd3579, %rd3576, %rd3578;
	xor.b64  	%rd3580, %rd3579, %rd3577;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3272,%dummy}, %rd3141;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3273}, %rd3141;
	}
	shf.r.wrap.b32 	%r3274, %r3273, %r3272, 1;
	shf.r.wrap.b32 	%r3275, %r3272, %r3273, 1;
	mov.b64 	%rd3581, {%r3275, %r3274};
	shf.r.wrap.b32 	%r3276, %r3273, %r3272, 8;
	shf.r.wrap.b32 	%r3277, %r3272, %r3273, 8;
	mov.b64 	%rd3582, {%r3277, %r3276};
	shr.u64 	%rd3583, %rd3141, 7;
	xor.b64  	%rd3584, %rd3581, %rd3583;
	xor.b64  	%rd3585, %rd3584, %rd3582;
	add.s64 	%rd3586, %rd3149, %rd3140;
	add.s64 	%rd3587, %rd3586, %rd3580;
	add.s64 	%rd3588, %rd3587, %rd3585;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3278,%dummy}, %rd3575;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3279}, %rd3575;
	}
	shf.r.wrap.b32 	%r3280, %r3279, %r3278, 19;
	shf.r.wrap.b32 	%r3281, %r3278, %r3279, 19;
	mov.b64 	%rd3589, {%r3281, %r3280};
	shf.l.wrap.b32 	%r3282, %r3278, %r3279, 3;
	shf.l.wrap.b32 	%r3283, %r3279, %r3278, 3;
	mov.b64 	%rd3590, {%r3283, %r3282};
	shr.u64 	%rd3591, %rd3575, 6;
	xor.b64  	%rd3592, %rd3589, %rd3591;
	xor.b64  	%rd3593, %rd3592, %rd3590;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3284,%dummy}, %rd3142;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3285}, %rd3142;
	}
	shf.r.wrap.b32 	%r3286, %r3285, %r3284, 1;
	shf.r.wrap.b32 	%r3287, %r3284, %r3285, 1;
	mov.b64 	%rd3594, {%r3287, %r3286};
	shf.r.wrap.b32 	%r3288, %r3285, %r3284, 8;
	shf.r.wrap.b32 	%r3289, %r3284, %r3285, 8;
	mov.b64 	%rd3595, {%r3289, %r3288};
	shr.u64 	%rd3596, %rd3142, 7;
	xor.b64  	%rd3597, %rd3594, %rd3596;
	xor.b64  	%rd3598, %rd3597, %rd3595;
	add.s64 	%rd3599, %rd3150, %rd3141;
	add.s64 	%rd3600, %rd3599, %rd3593;
	add.s64 	%rd3601, %rd3600, %rd3598;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3290,%dummy}, %rd3588;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3291}, %rd3588;
	}
	shf.r.wrap.b32 	%r3292, %r3291, %r3290, 19;
	shf.r.wrap.b32 	%r3293, %r3290, %r3291, 19;
	mov.b64 	%rd3602, {%r3293, %r3292};
	shf.l.wrap.b32 	%r3294, %r3290, %r3291, 3;
	shf.l.wrap.b32 	%r3295, %r3291, %r3290, 3;
	mov.b64 	%rd3603, {%r3295, %r3294};
	shr.u64 	%rd3604, %rd3588, 6;
	xor.b64  	%rd3605, %rd3602, %rd3604;
	xor.b64  	%rd3606, %rd3605, %rd3603;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3296,%dummy}, %rd3143;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3297}, %rd3143;
	}
	shf.r.wrap.b32 	%r3298, %r3297, %r3296, 1;
	shf.r.wrap.b32 	%r3299, %r3296, %r3297, 1;
	mov.b64 	%rd3607, {%r3299, %r3298};
	shf.r.wrap.b32 	%r3300, %r3297, %r3296, 8;
	shf.r.wrap.b32 	%r3301, %r3296, %r3297, 8;
	mov.b64 	%rd3608, {%r3301, %r3300};
	shr.u64 	%rd3609, %rd3143, 7;
	xor.b64  	%rd3610, %rd3607, %rd3609;
	xor.b64  	%rd3611, %rd3610, %rd3608;
	add.s64 	%rd3612, %rd3151, %rd3142;
	add.s64 	%rd3613, %rd3612, %rd3606;
	add.s64 	%rd3614, %rd3613, %rd3611;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3302,%dummy}, %rd3601;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3303}, %rd3601;
	}
	shf.r.wrap.b32 	%r3304, %r3303, %r3302, 19;
	shf.r.wrap.b32 	%r3305, %r3302, %r3303, 19;
	mov.b64 	%rd3615, {%r3305, %r3304};
	shf.l.wrap.b32 	%r3306, %r3302, %r3303, 3;
	shf.l.wrap.b32 	%r3307, %r3303, %r3302, 3;
	mov.b64 	%rd3616, {%r3307, %r3306};
	shr.u64 	%rd3617, %rd3601, 6;
	xor.b64  	%rd3618, %rd3615, %rd3617;
	xor.b64  	%rd3619, %rd3618, %rd3616;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3308,%dummy}, %rd3144;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3309}, %rd3144;
	}
	shf.r.wrap.b32 	%r3310, %r3309, %r3308, 1;
	shf.r.wrap.b32 	%r3311, %r3308, %r3309, 1;
	mov.b64 	%rd3620, {%r3311, %r3310};
	shf.r.wrap.b32 	%r3312, %r3309, %r3308, 8;
	shf.r.wrap.b32 	%r3313, %r3308, %r3309, 8;
	mov.b64 	%rd3621, {%r3313, %r3312};
	shr.u64 	%rd3622, %rd3144, 7;
	xor.b64  	%rd3623, %rd3620, %rd3622;
	xor.b64  	%rd3624, %rd3623, %rd3621;
	add.s64 	%rd3625, %rd3152, %rd3143;
	add.s64 	%rd3626, %rd3625, %rd3619;
	add.s64 	%rd3627, %rd3626, %rd3624;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3314,%dummy}, %rd3614;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3315}, %rd3614;
	}
	shf.r.wrap.b32 	%r3316, %r3315, %r3314, 19;
	shf.r.wrap.b32 	%r3317, %r3314, %r3315, 19;
	mov.b64 	%rd3628, {%r3317, %r3316};
	shf.l.wrap.b32 	%r3318, %r3314, %r3315, 3;
	shf.l.wrap.b32 	%r3319, %r3315, %r3314, 3;
	mov.b64 	%rd3629, {%r3319, %r3318};
	shr.u64 	%rd3630, %rd3614, 6;
	xor.b64  	%rd3631, %rd3628, %rd3630;
	xor.b64  	%rd3632, %rd3631, %rd3629;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3320,%dummy}, %rd3145;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3321}, %rd3145;
	}
	shf.r.wrap.b32 	%r3322, %r3321, %r3320, 1;
	shf.r.wrap.b32 	%r3323, %r3320, %r3321, 1;
	mov.b64 	%rd3633, {%r3323, %r3322};
	shf.r.wrap.b32 	%r3324, %r3321, %r3320, 8;
	shf.r.wrap.b32 	%r3325, %r3320, %r3321, 8;
	mov.b64 	%rd3634, {%r3325, %r3324};
	shr.u64 	%rd3635, %rd3145, 7;
	xor.b64  	%rd3636, %rd3633, %rd3635;
	xor.b64  	%rd3637, %rd3636, %rd3634;
	add.s64 	%rd3638, %rd3549, %rd3144;
	add.s64 	%rd3639, %rd3638, %rd3632;
	add.s64 	%rd3640, %rd3639, %rd3637;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3326,%dummy}, %rd3627;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3327}, %rd3627;
	}
	shf.r.wrap.b32 	%r3328, %r3327, %r3326, 19;
	shf.r.wrap.b32 	%r3329, %r3326, %r3327, 19;
	mov.b64 	%rd3641, {%r3329, %r3328};
	shf.l.wrap.b32 	%r3330, %r3326, %r3327, 3;
	shf.l.wrap.b32 	%r3331, %r3327, %r3326, 3;
	mov.b64 	%rd3642, {%r3331, %r3330};
	shr.u64 	%rd3643, %rd3627, 6;
	xor.b64  	%rd3644, %rd3641, %rd3643;
	xor.b64  	%rd3645, %rd3644, %rd3642;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3332,%dummy}, %rd3146;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3333}, %rd3146;
	}
	shf.r.wrap.b32 	%r3334, %r3333, %r3332, 1;
	shf.r.wrap.b32 	%r3335, %r3332, %r3333, 1;
	mov.b64 	%rd3646, {%r3335, %r3334};
	shf.r.wrap.b32 	%r3336, %r3333, %r3332, 8;
	shf.r.wrap.b32 	%r3337, %r3332, %r3333, 8;
	mov.b64 	%rd3647, {%r3337, %r3336};
	shr.u64 	%rd3648, %rd3146, 7;
	xor.b64  	%rd3649, %rd3646, %rd3648;
	xor.b64  	%rd3650, %rd3649, %rd3647;
	add.s64 	%rd3651, %rd3562, %rd3145;
	add.s64 	%rd3652, %rd3651, %rd3645;
	add.s64 	%rd3653, %rd3652, %rd3650;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3338,%dummy}, %rd3640;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3339}, %rd3640;
	}
	shf.r.wrap.b32 	%r3340, %r3339, %r3338, 19;
	shf.r.wrap.b32 	%r3341, %r3338, %r3339, 19;
	mov.b64 	%rd3654, {%r3341, %r3340};
	shf.l.wrap.b32 	%r3342, %r3338, %r3339, 3;
	shf.l.wrap.b32 	%r3343, %r3339, %r3338, 3;
	mov.b64 	%rd3655, {%r3343, %r3342};
	shr.u64 	%rd3656, %rd3640, 6;
	xor.b64  	%rd3657, %rd3654, %rd3656;
	xor.b64  	%rd3658, %rd3657, %rd3655;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3344,%dummy}, %rd3147;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3345}, %rd3147;
	}
	shf.r.wrap.b32 	%r3346, %r3345, %r3344, 1;
	shf.r.wrap.b32 	%r3347, %r3344, %r3345, 1;
	mov.b64 	%rd3659, {%r3347, %r3346};
	shf.r.wrap.b32 	%r3348, %r3345, %r3344, 8;
	shf.r.wrap.b32 	%r3349, %r3344, %r3345, 8;
	mov.b64 	%rd3660, {%r3349, %r3348};
	shr.u64 	%rd3661, %rd3147, 7;
	xor.b64  	%rd3662, %rd3659, %rd3661;
	xor.b64  	%rd3663, %rd3662, %rd3660;
	add.s64 	%rd3664, %rd3575, %rd3146;
	add.s64 	%rd3665, %rd3664, %rd3658;
	add.s64 	%rd3666, %rd3665, %rd3663;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3350,%dummy}, %rd3653;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3351}, %rd3653;
	}
	shf.r.wrap.b32 	%r3352, %r3351, %r3350, 19;
	shf.r.wrap.b32 	%r3353, %r3350, %r3351, 19;
	mov.b64 	%rd3667, {%r3353, %r3352};
	shf.l.wrap.b32 	%r3354, %r3350, %r3351, 3;
	shf.l.wrap.b32 	%r3355, %r3351, %r3350, 3;
	mov.b64 	%rd3668, {%r3355, %r3354};
	shr.u64 	%rd3669, %rd3653, 6;
	xor.b64  	%rd3670, %rd3667, %rd3669;
	xor.b64  	%rd3671, %rd3670, %rd3668;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3356,%dummy}, %rd3148;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3357}, %rd3148;
	}
	shf.r.wrap.b32 	%r3358, %r3357, %r3356, 1;
	shf.r.wrap.b32 	%r3359, %r3356, %r3357, 1;
	mov.b64 	%rd3672, {%r3359, %r3358};
	shf.r.wrap.b32 	%r3360, %r3357, %r3356, 8;
	shf.r.wrap.b32 	%r3361, %r3356, %r3357, 8;
	mov.b64 	%rd3673, {%r3361, %r3360};
	shr.u64 	%rd3674, %rd3148, 7;
	xor.b64  	%rd3675, %rd3672, %rd3674;
	xor.b64  	%rd3676, %rd3675, %rd3673;
	add.s64 	%rd3677, %rd3588, %rd3147;
	add.s64 	%rd3678, %rd3677, %rd3671;
	add.s64 	%rd3679, %rd3678, %rd3676;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3362,%dummy}, %rd3666;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3363}, %rd3666;
	}
	shf.r.wrap.b32 	%r3364, %r3363, %r3362, 19;
	shf.r.wrap.b32 	%r3365, %r3362, %r3363, 19;
	mov.b64 	%rd3680, {%r3365, %r3364};
	shf.l.wrap.b32 	%r3366, %r3362, %r3363, 3;
	shf.l.wrap.b32 	%r3367, %r3363, %r3362, 3;
	mov.b64 	%rd3681, {%r3367, %r3366};
	shr.u64 	%rd3682, %rd3666, 6;
	xor.b64  	%rd3683, %rd3680, %rd3682;
	xor.b64  	%rd3684, %rd3683, %rd3681;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3368,%dummy}, %rd3149;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3369}, %rd3149;
	}
	shf.r.wrap.b32 	%r3370, %r3369, %r3368, 1;
	shf.r.wrap.b32 	%r3371, %r3368, %r3369, 1;
	mov.b64 	%rd3685, {%r3371, %r3370};
	shf.r.wrap.b32 	%r3372, %r3369, %r3368, 8;
	shf.r.wrap.b32 	%r3373, %r3368, %r3369, 8;
	mov.b64 	%rd3686, {%r3373, %r3372};
	shr.u64 	%rd3687, %rd3149, 7;
	xor.b64  	%rd3688, %rd3685, %rd3687;
	xor.b64  	%rd3689, %rd3688, %rd3686;
	add.s64 	%rd3690, %rd3601, %rd3148;
	add.s64 	%rd3691, %rd3690, %rd3684;
	add.s64 	%rd3692, %rd3691, %rd3689;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3374,%dummy}, %rd3679;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3375}, %rd3679;
	}
	shf.r.wrap.b32 	%r3376, %r3375, %r3374, 19;
	shf.r.wrap.b32 	%r3377, %r3374, %r3375, 19;
	mov.b64 	%rd3693, {%r3377, %r3376};
	shf.l.wrap.b32 	%r3378, %r3374, %r3375, 3;
	shf.l.wrap.b32 	%r3379, %r3375, %r3374, 3;
	mov.b64 	%rd3694, {%r3379, %r3378};
	shr.u64 	%rd3695, %rd3679, 6;
	xor.b64  	%rd3696, %rd3693, %rd3695;
	xor.b64  	%rd3697, %rd3696, %rd3694;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3380,%dummy}, %rd3150;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3381}, %rd3150;
	}
	shf.r.wrap.b32 	%r3382, %r3381, %r3380, 1;
	shf.r.wrap.b32 	%r3383, %r3380, %r3381, 1;
	mov.b64 	%rd3698, {%r3383, %r3382};
	shf.r.wrap.b32 	%r3384, %r3381, %r3380, 8;
	shf.r.wrap.b32 	%r3385, %r3380, %r3381, 8;
	mov.b64 	%rd3699, {%r3385, %r3384};
	shr.u64 	%rd3700, %rd3150, 7;
	xor.b64  	%rd3701, %rd3698, %rd3700;
	xor.b64  	%rd3702, %rd3701, %rd3699;
	add.s64 	%rd3703, %rd3614, %rd3149;
	add.s64 	%rd3704, %rd3703, %rd3697;
	add.s64 	%rd3705, %rd3704, %rd3702;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3386,%dummy}, %rd3692;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3387}, %rd3692;
	}
	shf.r.wrap.b32 	%r3388, %r3387, %r3386, 19;
	shf.r.wrap.b32 	%r3389, %r3386, %r3387, 19;
	mov.b64 	%rd3706, {%r3389, %r3388};
	shf.l.wrap.b32 	%r3390, %r3386, %r3387, 3;
	shf.l.wrap.b32 	%r3391, %r3387, %r3386, 3;
	mov.b64 	%rd3707, {%r3391, %r3390};
	shr.u64 	%rd3708, %rd3692, 6;
	xor.b64  	%rd3709, %rd3706, %rd3708;
	xor.b64  	%rd3710, %rd3709, %rd3707;
	shf.r.wrap.b32 	%r3392, %r3231, %r3230, 1;
	shf.r.wrap.b32 	%r3393, %r3230, %r3231, 1;
	mov.b64 	%rd3711, {%r3393, %r3392};
	shf.r.wrap.b32 	%r3394, %r3231, %r3230, 8;
	shf.r.wrap.b32 	%r3395, %r3230, %r3231, 8;
	mov.b64 	%rd3712, {%r3395, %r3394};
	shr.u64 	%rd3713, %rd3151, 7;
	xor.b64  	%rd3714, %rd3711, %rd3713;
	xor.b64  	%rd3715, %rd3714, %rd3712;
	add.s64 	%rd3716, %rd3627, %rd3150;
	add.s64 	%rd3717, %rd3716, %rd3710;
	add.s64 	%rd3718, %rd3717, %rd3715;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3396,%dummy}, %rd3705;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3397}, %rd3705;
	}
	shf.r.wrap.b32 	%r3398, %r3397, %r3396, 19;
	shf.r.wrap.b32 	%r3399, %r3396, %r3397, 19;
	mov.b64 	%rd3719, {%r3399, %r3398};
	shf.l.wrap.b32 	%r3400, %r3396, %r3397, 3;
	shf.l.wrap.b32 	%r3401, %r3397, %r3396, 3;
	mov.b64 	%rd3720, {%r3401, %r3400};
	shr.u64 	%rd3721, %rd3705, 6;
	xor.b64  	%rd3722, %rd3719, %rd3721;
	xor.b64  	%rd3723, %rd3722, %rd3720;
	shf.r.wrap.b32 	%r3402, %r3243, %r3242, 1;
	shf.r.wrap.b32 	%r3403, %r3242, %r3243, 1;
	mov.b64 	%rd3724, {%r3403, %r3402};
	shf.r.wrap.b32 	%r3404, %r3243, %r3242, 8;
	shf.r.wrap.b32 	%r3405, %r3242, %r3243, 8;
	mov.b64 	%rd3725, {%r3405, %r3404};
	shr.u64 	%rd3726, %rd3152, 7;
	xor.b64  	%rd3727, %rd3724, %rd3726;
	xor.b64  	%rd3728, %rd3727, %rd3725;
	add.s64 	%rd3729, %rd3640, %rd3151;
	add.s64 	%rd3730, %rd3729, %rd3723;
	add.s64 	%rd3731, %rd3730, %rd3728;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3406,%dummy}, %rd3718;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3407}, %rd3718;
	}
	shf.r.wrap.b32 	%r3408, %r3407, %r3406, 19;
	shf.r.wrap.b32 	%r3409, %r3406, %r3407, 19;
	mov.b64 	%rd3732, {%r3409, %r3408};
	shf.l.wrap.b32 	%r3410, %r3406, %r3407, 3;
	shf.l.wrap.b32 	%r3411, %r3407, %r3406, 3;
	mov.b64 	%rd3733, {%r3411, %r3410};
	shr.u64 	%rd3734, %rd3718, 6;
	xor.b64  	%rd3735, %rd3732, %rd3734;
	xor.b64  	%rd3736, %rd3735, %rd3733;
	shf.r.wrap.b32 	%r3412, %r3255, %r3254, 1;
	shf.r.wrap.b32 	%r3413, %r3254, %r3255, 1;
	mov.b64 	%rd3737, {%r3413, %r3412};
	shf.r.wrap.b32 	%r3414, %r3255, %r3254, 8;
	shf.r.wrap.b32 	%r3415, %r3254, %r3255, 8;
	mov.b64 	%rd3738, {%r3415, %r3414};
	shr.u64 	%rd3739, %rd3549, 7;
	xor.b64  	%rd3740, %rd3737, %rd3739;
	xor.b64  	%rd3741, %rd3740, %rd3738;
	add.s64 	%rd3742, %rd3653, %rd3152;
	add.s64 	%rd3743, %rd3742, %rd3736;
	add.s64 	%rd3744, %rd3743, %rd3741;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3416,%dummy}, %rd3525;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3417}, %rd3525;
	}
	shf.r.wrap.b32 	%r3418, %r3417, %r3416, 14;
	shf.r.wrap.b32 	%r3419, %r3416, %r3417, 14;
	mov.b64 	%rd3745, {%r3419, %r3418};
	shf.r.wrap.b32 	%r3420, %r3417, %r3416, 18;
	shf.r.wrap.b32 	%r3421, %r3416, %r3417, 18;
	mov.b64 	%rd3746, {%r3421, %r3420};
	xor.b64  	%rd3747, %rd3746, %rd3745;
	shf.l.wrap.b32 	%r3422, %r3416, %r3417, 23;
	shf.l.wrap.b32 	%r3423, %r3417, %r3416, 23;
	mov.b64 	%rd3748, {%r3423, %r3422};
	xor.b64  	%rd3749, %rd3747, %rd3748;
	xor.b64  	%rd3750, %rd3501, %rd3477;
	and.b64  	%rd3751, %rd3750, %rd3525;
	xor.b64  	%rd3752, %rd3751, %rd3477;
	add.s64 	%rd3753, %rd3752, %rd3453;
	add.s64 	%rd3754, %rd3753, %rd3549;
	add.s64 	%rd3755, %rd3754, %rd8837;
	add.s64 	%rd3756, %rd3755, %rd3749;
	add.s64 	%rd3757, %rd3756, %rd3464;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3424,%dummy}, %rd3536;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3425}, %rd3536;
	}
	shf.r.wrap.b32 	%r3426, %r3425, %r3424, 28;
	shf.r.wrap.b32 	%r3427, %r3424, %r3425, 28;
	mov.b64 	%rd3758, {%r3427, %r3426};
	shf.l.wrap.b32 	%r3428, %r3424, %r3425, 30;
	shf.l.wrap.b32 	%r3429, %r3425, %r3424, 30;
	mov.b64 	%rd3759, {%r3429, %r3428};
	xor.b64  	%rd3760, %rd3759, %rd3758;
	shf.l.wrap.b32 	%r3430, %r3424, %r3425, 25;
	shf.l.wrap.b32 	%r3431, %r3425, %r3424, 25;
	mov.b64 	%rd3761, {%r3431, %r3430};
	xor.b64  	%rd3762, %rd3760, %rd3761;
	xor.b64  	%rd3763, %rd3536, %rd3488;
	xor.b64  	%rd3764, %rd3536, %rd3512;
	and.b64  	%rd3765, %rd3764, %rd3763;
	xor.b64  	%rd3766, %rd3765, %rd3536;
	add.s64 	%rd3767, %rd3756, %rd3766;
	add.s64 	%rd3768, %rd3767, %rd3762;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3432,%dummy}, %rd3757;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3433}, %rd3757;
	}
	shf.r.wrap.b32 	%r3434, %r3433, %r3432, 14;
	shf.r.wrap.b32 	%r3435, %r3432, %r3433, 14;
	mov.b64 	%rd3769, {%r3435, %r3434};
	shf.r.wrap.b32 	%r3436, %r3433, %r3432, 18;
	shf.r.wrap.b32 	%r3437, %r3432, %r3433, 18;
	mov.b64 	%rd3770, {%r3437, %r3436};
	xor.b64  	%rd3771, %rd3770, %rd3769;
	shf.l.wrap.b32 	%r3438, %r3432, %r3433, 23;
	shf.l.wrap.b32 	%r3439, %r3433, %r3432, 23;
	mov.b64 	%rd3772, {%r3439, %r3438};
	xor.b64  	%rd3773, %rd3771, %rd3772;
	xor.b64  	%rd3774, %rd3525, %rd3501;
	and.b64  	%rd3775, %rd3757, %rd3774;
	xor.b64  	%rd3776, %rd3775, %rd3501;
	add.s64 	%rd3777, %rd3562, %rd3477;
	add.s64 	%rd3778, %rd3777, %rd8836;
	add.s64 	%rd3779, %rd3778, %rd3776;
	add.s64 	%rd3780, %rd3779, %rd3773;
	add.s64 	%rd3781, %rd3780, %rd3488;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3440,%dummy}, %rd3768;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3441}, %rd3768;
	}
	shf.r.wrap.b32 	%r3442, %r3441, %r3440, 28;
	shf.r.wrap.b32 	%r3443, %r3440, %r3441, 28;
	mov.b64 	%rd3782, {%r3443, %r3442};
	shf.l.wrap.b32 	%r3444, %r3440, %r3441, 30;
	shf.l.wrap.b32 	%r3445, %r3441, %r3440, 30;
	mov.b64 	%rd3783, {%r3445, %r3444};
	xor.b64  	%rd3784, %rd3783, %rd3782;
	shf.l.wrap.b32 	%r3446, %r3440, %r3441, 25;
	shf.l.wrap.b32 	%r3447, %r3441, %r3440, 25;
	mov.b64 	%rd3785, {%r3447, %r3446};
	xor.b64  	%rd3786, %rd3784, %rd3785;
	xor.b64  	%rd3787, %rd3768, %rd3512;
	xor.b64  	%rd3788, %rd3768, %rd3536;
	and.b64  	%rd3789, %rd3788, %rd3787;
	xor.b64  	%rd3790, %rd3789, %rd3768;
	add.s64 	%rd3791, %rd3780, %rd3790;
	add.s64 	%rd3792, %rd3791, %rd3786;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3448,%dummy}, %rd3781;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3449}, %rd3781;
	}
	shf.r.wrap.b32 	%r3450, %r3449, %r3448, 14;
	shf.r.wrap.b32 	%r3451, %r3448, %r3449, 14;
	mov.b64 	%rd3793, {%r3451, %r3450};
	shf.r.wrap.b32 	%r3452, %r3449, %r3448, 18;
	shf.r.wrap.b32 	%r3453, %r3448, %r3449, 18;
	mov.b64 	%rd3794, {%r3453, %r3452};
	xor.b64  	%rd3795, %rd3794, %rd3793;
	shf.l.wrap.b32 	%r3454, %r3448, %r3449, 23;
	shf.l.wrap.b32 	%r3455, %r3449, %r3448, 23;
	mov.b64 	%rd3796, {%r3455, %r3454};
	xor.b64  	%rd3797, %rd3795, %rd3796;
	xor.b64  	%rd3798, %rd3757, %rd3525;
	and.b64  	%rd3799, %rd3781, %rd3798;
	xor.b64  	%rd3800, %rd3799, %rd3525;
	add.s64 	%rd3801, %rd3575, %rd3501;
	add.s64 	%rd3802, %rd3801, %rd8835;
	add.s64 	%rd3803, %rd3802, %rd3800;
	add.s64 	%rd3804, %rd3803, %rd3797;
	add.s64 	%rd3805, %rd3804, %rd3512;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3456,%dummy}, %rd3792;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3457}, %rd3792;
	}
	shf.r.wrap.b32 	%r3458, %r3457, %r3456, 28;
	shf.r.wrap.b32 	%r3459, %r3456, %r3457, 28;
	mov.b64 	%rd3806, {%r3459, %r3458};
	shf.l.wrap.b32 	%r3460, %r3456, %r3457, 30;
	shf.l.wrap.b32 	%r3461, %r3457, %r3456, 30;
	mov.b64 	%rd3807, {%r3461, %r3460};
	xor.b64  	%rd3808, %rd3807, %rd3806;
	shf.l.wrap.b32 	%r3462, %r3456, %r3457, 25;
	shf.l.wrap.b32 	%r3463, %r3457, %r3456, 25;
	mov.b64 	%rd3809, {%r3463, %r3462};
	xor.b64  	%rd3810, %rd3808, %rd3809;
	xor.b64  	%rd3811, %rd3792, %rd3536;
	xor.b64  	%rd3812, %rd3792, %rd3768;
	and.b64  	%rd3813, %rd3812, %rd3811;
	xor.b64  	%rd3814, %rd3813, %rd3792;
	add.s64 	%rd3815, %rd3804, %rd3814;
	add.s64 	%rd3816, %rd3815, %rd3810;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3464,%dummy}, %rd3805;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3465}, %rd3805;
	}
	shf.r.wrap.b32 	%r3466, %r3465, %r3464, 14;
	shf.r.wrap.b32 	%r3467, %r3464, %r3465, 14;
	mov.b64 	%rd3817, {%r3467, %r3466};
	shf.r.wrap.b32 	%r3468, %r3465, %r3464, 18;
	shf.r.wrap.b32 	%r3469, %r3464, %r3465, 18;
	mov.b64 	%rd3818, {%r3469, %r3468};
	xor.b64  	%rd3819, %rd3818, %rd3817;
	shf.l.wrap.b32 	%r3470, %r3464, %r3465, 23;
	shf.l.wrap.b32 	%r3471, %r3465, %r3464, 23;
	mov.b64 	%rd3820, {%r3471, %r3470};
	xor.b64  	%rd3821, %rd3819, %rd3820;
	xor.b64  	%rd3822, %rd3781, %rd3757;
	and.b64  	%rd3823, %rd3805, %rd3822;
	xor.b64  	%rd3824, %rd3823, %rd3757;
	add.s64 	%rd3825, %rd3588, %rd3525;
	add.s64 	%rd3826, %rd3825, %rd8834;
	add.s64 	%rd3827, %rd3826, %rd3824;
	add.s64 	%rd3828, %rd3827, %rd3821;
	add.s64 	%rd3829, %rd3828, %rd3536;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3472,%dummy}, %rd3816;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3473}, %rd3816;
	}
	shf.r.wrap.b32 	%r3474, %r3473, %r3472, 28;
	shf.r.wrap.b32 	%r3475, %r3472, %r3473, 28;
	mov.b64 	%rd3830, {%r3475, %r3474};
	shf.l.wrap.b32 	%r3476, %r3472, %r3473, 30;
	shf.l.wrap.b32 	%r3477, %r3473, %r3472, 30;
	mov.b64 	%rd3831, {%r3477, %r3476};
	xor.b64  	%rd3832, %rd3831, %rd3830;
	shf.l.wrap.b32 	%r3478, %r3472, %r3473, 25;
	shf.l.wrap.b32 	%r3479, %r3473, %r3472, 25;
	mov.b64 	%rd3833, {%r3479, %r3478};
	xor.b64  	%rd3834, %rd3832, %rd3833;
	xor.b64  	%rd3835, %rd3816, %rd3768;
	xor.b64  	%rd3836, %rd3816, %rd3792;
	and.b64  	%rd3837, %rd3836, %rd3835;
	xor.b64  	%rd3838, %rd3837, %rd3816;
	add.s64 	%rd3839, %rd3828, %rd3838;
	add.s64 	%rd3840, %rd3839, %rd3834;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3480,%dummy}, %rd3829;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3481}, %rd3829;
	}
	shf.r.wrap.b32 	%r3482, %r3481, %r3480, 14;
	shf.r.wrap.b32 	%r3483, %r3480, %r3481, 14;
	mov.b64 	%rd3841, {%r3483, %r3482};
	shf.r.wrap.b32 	%r3484, %r3481, %r3480, 18;
	shf.r.wrap.b32 	%r3485, %r3480, %r3481, 18;
	mov.b64 	%rd3842, {%r3485, %r3484};
	xor.b64  	%rd3843, %rd3842, %rd3841;
	shf.l.wrap.b32 	%r3486, %r3480, %r3481, 23;
	shf.l.wrap.b32 	%r3487, %r3481, %r3480, 23;
	mov.b64 	%rd3844, {%r3487, %r3486};
	xor.b64  	%rd3845, %rd3843, %rd3844;
	xor.b64  	%rd3846, %rd3805, %rd3781;
	and.b64  	%rd3847, %rd3829, %rd3846;
	xor.b64  	%rd3848, %rd3847, %rd3781;
	add.s64 	%rd3849, %rd3757, %rd3601;
	add.s64 	%rd3850, %rd3849, %rd8833;
	add.s64 	%rd3851, %rd3850, %rd3848;
	add.s64 	%rd3852, %rd3851, %rd3845;
	add.s64 	%rd3853, %rd3852, %rd3768;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3488,%dummy}, %rd3840;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3489}, %rd3840;
	}
	shf.r.wrap.b32 	%r3490, %r3489, %r3488, 28;
	shf.r.wrap.b32 	%r3491, %r3488, %r3489, 28;
	mov.b64 	%rd3854, {%r3491, %r3490};
	shf.l.wrap.b32 	%r3492, %r3488, %r3489, 30;
	shf.l.wrap.b32 	%r3493, %r3489, %r3488, 30;
	mov.b64 	%rd3855, {%r3493, %r3492};
	xor.b64  	%rd3856, %rd3855, %rd3854;
	shf.l.wrap.b32 	%r3494, %r3488, %r3489, 25;
	shf.l.wrap.b32 	%r3495, %r3489, %r3488, 25;
	mov.b64 	%rd3857, {%r3495, %r3494};
	xor.b64  	%rd3858, %rd3856, %rd3857;
	xor.b64  	%rd3859, %rd3840, %rd3792;
	xor.b64  	%rd3860, %rd3840, %rd3816;
	and.b64  	%rd3861, %rd3860, %rd3859;
	xor.b64  	%rd3862, %rd3861, %rd3840;
	add.s64 	%rd3863, %rd3852, %rd3862;
	add.s64 	%rd3864, %rd3863, %rd3858;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3496,%dummy}, %rd3853;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3497}, %rd3853;
	}
	shf.r.wrap.b32 	%r3498, %r3497, %r3496, 14;
	shf.r.wrap.b32 	%r3499, %r3496, %r3497, 14;
	mov.b64 	%rd3865, {%r3499, %r3498};
	shf.r.wrap.b32 	%r3500, %r3497, %r3496, 18;
	shf.r.wrap.b32 	%r3501, %r3496, %r3497, 18;
	mov.b64 	%rd3866, {%r3501, %r3500};
	xor.b64  	%rd3867, %rd3866, %rd3865;
	shf.l.wrap.b32 	%r3502, %r3496, %r3497, 23;
	shf.l.wrap.b32 	%r3503, %r3497, %r3496, 23;
	mov.b64 	%rd3868, {%r3503, %r3502};
	xor.b64  	%rd3869, %rd3867, %rd3868;
	xor.b64  	%rd3870, %rd3829, %rd3805;
	and.b64  	%rd3871, %rd3853, %rd3870;
	xor.b64  	%rd3872, %rd3871, %rd3805;
	add.s64 	%rd3873, %rd3781, %rd3614;
	add.s64 	%rd3874, %rd3873, %rd8832;
	add.s64 	%rd3875, %rd3874, %rd3872;
	add.s64 	%rd3876, %rd3875, %rd3869;
	add.s64 	%rd3877, %rd3876, %rd3792;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3504,%dummy}, %rd3864;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3505}, %rd3864;
	}
	shf.r.wrap.b32 	%r3506, %r3505, %r3504, 28;
	shf.r.wrap.b32 	%r3507, %r3504, %r3505, 28;
	mov.b64 	%rd3878, {%r3507, %r3506};
	shf.l.wrap.b32 	%r3508, %r3504, %r3505, 30;
	shf.l.wrap.b32 	%r3509, %r3505, %r3504, 30;
	mov.b64 	%rd3879, {%r3509, %r3508};
	xor.b64  	%rd3880, %rd3879, %rd3878;
	shf.l.wrap.b32 	%r3510, %r3504, %r3505, 25;
	shf.l.wrap.b32 	%r3511, %r3505, %r3504, 25;
	mov.b64 	%rd3881, {%r3511, %r3510};
	xor.b64  	%rd3882, %rd3880, %rd3881;
	xor.b64  	%rd3883, %rd3864, %rd3816;
	xor.b64  	%rd3884, %rd3864, %rd3840;
	and.b64  	%rd3885, %rd3884, %rd3883;
	xor.b64  	%rd3886, %rd3885, %rd3864;
	add.s64 	%rd3887, %rd3876, %rd3886;
	add.s64 	%rd3888, %rd3887, %rd3882;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3512,%dummy}, %rd3877;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3513}, %rd3877;
	}
	shf.r.wrap.b32 	%r3514, %r3513, %r3512, 14;
	shf.r.wrap.b32 	%r3515, %r3512, %r3513, 14;
	mov.b64 	%rd3889, {%r3515, %r3514};
	shf.r.wrap.b32 	%r3516, %r3513, %r3512, 18;
	shf.r.wrap.b32 	%r3517, %r3512, %r3513, 18;
	mov.b64 	%rd3890, {%r3517, %r3516};
	xor.b64  	%rd3891, %rd3890, %rd3889;
	shf.l.wrap.b32 	%r3518, %r3512, %r3513, 23;
	shf.l.wrap.b32 	%r3519, %r3513, %r3512, 23;
	mov.b64 	%rd3892, {%r3519, %r3518};
	xor.b64  	%rd3893, %rd3891, %rd3892;
	xor.b64  	%rd3894, %rd3853, %rd3829;
	and.b64  	%rd3895, %rd3877, %rd3894;
	xor.b64  	%rd3896, %rd3895, %rd3829;
	add.s64 	%rd3897, %rd3805, %rd3627;
	add.s64 	%rd3898, %rd3897, %rd8831;
	add.s64 	%rd3899, %rd3898, %rd3896;
	add.s64 	%rd3900, %rd3899, %rd3893;
	add.s64 	%rd3901, %rd3900, %rd3816;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3520,%dummy}, %rd3888;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3521}, %rd3888;
	}
	shf.r.wrap.b32 	%r3522, %r3521, %r3520, 28;
	shf.r.wrap.b32 	%r3523, %r3520, %r3521, 28;
	mov.b64 	%rd3902, {%r3523, %r3522};
	shf.l.wrap.b32 	%r3524, %r3520, %r3521, 30;
	shf.l.wrap.b32 	%r3525, %r3521, %r3520, 30;
	mov.b64 	%rd3903, {%r3525, %r3524};
	xor.b64  	%rd3904, %rd3903, %rd3902;
	shf.l.wrap.b32 	%r3526, %r3520, %r3521, 25;
	shf.l.wrap.b32 	%r3527, %r3521, %r3520, 25;
	mov.b64 	%rd3905, {%r3527, %r3526};
	xor.b64  	%rd3906, %rd3904, %rd3905;
	xor.b64  	%rd3907, %rd3888, %rd3840;
	xor.b64  	%rd3908, %rd3888, %rd3864;
	and.b64  	%rd3909, %rd3908, %rd3907;
	xor.b64  	%rd3910, %rd3909, %rd3888;
	add.s64 	%rd3911, %rd3900, %rd3910;
	add.s64 	%rd3912, %rd3911, %rd3906;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3528,%dummy}, %rd3901;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3529}, %rd3901;
	}
	shf.r.wrap.b32 	%r3530, %r3529, %r3528, 14;
	shf.r.wrap.b32 	%r3531, %r3528, %r3529, 14;
	mov.b64 	%rd3913, {%r3531, %r3530};
	shf.r.wrap.b32 	%r3532, %r3529, %r3528, 18;
	shf.r.wrap.b32 	%r3533, %r3528, %r3529, 18;
	mov.b64 	%rd3914, {%r3533, %r3532};
	xor.b64  	%rd3915, %rd3914, %rd3913;
	shf.l.wrap.b32 	%r3534, %r3528, %r3529, 23;
	shf.l.wrap.b32 	%r3535, %r3529, %r3528, 23;
	mov.b64 	%rd3916, {%r3535, %r3534};
	xor.b64  	%rd3917, %rd3915, %rd3916;
	xor.b64  	%rd3918, %rd3877, %rd3853;
	and.b64  	%rd3919, %rd3901, %rd3918;
	xor.b64  	%rd3920, %rd3919, %rd3853;
	add.s64 	%rd3921, %rd3829, %rd3640;
	add.s64 	%rd3922, %rd3921, %rd8830;
	add.s64 	%rd3923, %rd3922, %rd3920;
	add.s64 	%rd3924, %rd3923, %rd3917;
	add.s64 	%rd3925, %rd3924, %rd3840;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3536,%dummy}, %rd3912;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3537}, %rd3912;
	}
	shf.r.wrap.b32 	%r3538, %r3537, %r3536, 28;
	shf.r.wrap.b32 	%r3539, %r3536, %r3537, 28;
	mov.b64 	%rd3926, {%r3539, %r3538};
	shf.l.wrap.b32 	%r3540, %r3536, %r3537, 30;
	shf.l.wrap.b32 	%r3541, %r3537, %r3536, 30;
	mov.b64 	%rd3927, {%r3541, %r3540};
	xor.b64  	%rd3928, %rd3927, %rd3926;
	shf.l.wrap.b32 	%r3542, %r3536, %r3537, 25;
	shf.l.wrap.b32 	%r3543, %r3537, %r3536, 25;
	mov.b64 	%rd3929, {%r3543, %r3542};
	xor.b64  	%rd3930, %rd3928, %rd3929;
	xor.b64  	%rd3931, %rd3912, %rd3864;
	xor.b64  	%rd3932, %rd3912, %rd3888;
	and.b64  	%rd3933, %rd3932, %rd3931;
	xor.b64  	%rd3934, %rd3933, %rd3912;
	add.s64 	%rd3935, %rd3924, %rd3934;
	add.s64 	%rd3936, %rd3935, %rd3930;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3544,%dummy}, %rd3925;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3545}, %rd3925;
	}
	shf.r.wrap.b32 	%r3546, %r3545, %r3544, 14;
	shf.r.wrap.b32 	%r3547, %r3544, %r3545, 14;
	mov.b64 	%rd3937, {%r3547, %r3546};
	shf.r.wrap.b32 	%r3548, %r3545, %r3544, 18;
	shf.r.wrap.b32 	%r3549, %r3544, %r3545, 18;
	mov.b64 	%rd3938, {%r3549, %r3548};
	xor.b64  	%rd3939, %rd3938, %rd3937;
	shf.l.wrap.b32 	%r3550, %r3544, %r3545, 23;
	shf.l.wrap.b32 	%r3551, %r3545, %r3544, 23;
	mov.b64 	%rd3940, {%r3551, %r3550};
	xor.b64  	%rd3941, %rd3939, %rd3940;
	xor.b64  	%rd3942, %rd3901, %rd3877;
	and.b64  	%rd3943, %rd3925, %rd3942;
	xor.b64  	%rd3944, %rd3943, %rd3877;
	add.s64 	%rd3945, %rd3853, %rd3653;
	add.s64 	%rd3946, %rd3945, %rd8829;
	add.s64 	%rd3947, %rd3946, %rd3944;
	add.s64 	%rd3948, %rd3947, %rd3941;
	add.s64 	%rd3949, %rd3948, %rd3864;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3552,%dummy}, %rd3936;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3553}, %rd3936;
	}
	shf.r.wrap.b32 	%r3554, %r3553, %r3552, 28;
	shf.r.wrap.b32 	%r3555, %r3552, %r3553, 28;
	mov.b64 	%rd3950, {%r3555, %r3554};
	shf.l.wrap.b32 	%r3556, %r3552, %r3553, 30;
	shf.l.wrap.b32 	%r3557, %r3553, %r3552, 30;
	mov.b64 	%rd3951, {%r3557, %r3556};
	xor.b64  	%rd3952, %rd3951, %rd3950;
	shf.l.wrap.b32 	%r3558, %r3552, %r3553, 25;
	shf.l.wrap.b32 	%r3559, %r3553, %r3552, 25;
	mov.b64 	%rd3953, {%r3559, %r3558};
	xor.b64  	%rd3954, %rd3952, %rd3953;
	xor.b64  	%rd3955, %rd3936, %rd3888;
	xor.b64  	%rd3956, %rd3936, %rd3912;
	and.b64  	%rd3957, %rd3956, %rd3955;
	xor.b64  	%rd3958, %rd3957, %rd3936;
	add.s64 	%rd3959, %rd3948, %rd3958;
	add.s64 	%rd3960, %rd3959, %rd3954;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3560,%dummy}, %rd3949;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3561}, %rd3949;
	}
	shf.r.wrap.b32 	%r3562, %r3561, %r3560, 14;
	shf.r.wrap.b32 	%r3563, %r3560, %r3561, 14;
	mov.b64 	%rd3961, {%r3563, %r3562};
	shf.r.wrap.b32 	%r3564, %r3561, %r3560, 18;
	shf.r.wrap.b32 	%r3565, %r3560, %r3561, 18;
	mov.b64 	%rd3962, {%r3565, %r3564};
	xor.b64  	%rd3963, %rd3962, %rd3961;
	shf.l.wrap.b32 	%r3566, %r3560, %r3561, 23;
	shf.l.wrap.b32 	%r3567, %r3561, %r3560, 23;
	mov.b64 	%rd3964, {%r3567, %r3566};
	xor.b64  	%rd3965, %rd3963, %rd3964;
	xor.b64  	%rd3966, %rd3925, %rd3901;
	and.b64  	%rd3967, %rd3949, %rd3966;
	xor.b64  	%rd3968, %rd3967, %rd3901;
	add.s64 	%rd3969, %rd3877, %rd3666;
	add.s64 	%rd3970, %rd3969, %rd8828;
	add.s64 	%rd3971, %rd3970, %rd3968;
	add.s64 	%rd3972, %rd3971, %rd3965;
	add.s64 	%rd3973, %rd3972, %rd3888;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3568,%dummy}, %rd3960;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3569}, %rd3960;
	}
	shf.r.wrap.b32 	%r3570, %r3569, %r3568, 28;
	shf.r.wrap.b32 	%r3571, %r3568, %r3569, 28;
	mov.b64 	%rd3974, {%r3571, %r3570};
	shf.l.wrap.b32 	%r3572, %r3568, %r3569, 30;
	shf.l.wrap.b32 	%r3573, %r3569, %r3568, 30;
	mov.b64 	%rd3975, {%r3573, %r3572};
	xor.b64  	%rd3976, %rd3975, %rd3974;
	shf.l.wrap.b32 	%r3574, %r3568, %r3569, 25;
	shf.l.wrap.b32 	%r3575, %r3569, %r3568, 25;
	mov.b64 	%rd3977, {%r3575, %r3574};
	xor.b64  	%rd3978, %rd3976, %rd3977;
	xor.b64  	%rd3979, %rd3960, %rd3912;
	xor.b64  	%rd3980, %rd3960, %rd3936;
	and.b64  	%rd3981, %rd3980, %rd3979;
	xor.b64  	%rd3982, %rd3981, %rd3960;
	add.s64 	%rd3983, %rd3972, %rd3982;
	add.s64 	%rd3984, %rd3983, %rd3978;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3576,%dummy}, %rd3973;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3577}, %rd3973;
	}
	shf.r.wrap.b32 	%r3578, %r3577, %r3576, 14;
	shf.r.wrap.b32 	%r3579, %r3576, %r3577, 14;
	mov.b64 	%rd3985, {%r3579, %r3578};
	shf.r.wrap.b32 	%r3580, %r3577, %r3576, 18;
	shf.r.wrap.b32 	%r3581, %r3576, %r3577, 18;
	mov.b64 	%rd3986, {%r3581, %r3580};
	xor.b64  	%rd3987, %rd3986, %rd3985;
	shf.l.wrap.b32 	%r3582, %r3576, %r3577, 23;
	shf.l.wrap.b32 	%r3583, %r3577, %r3576, 23;
	mov.b64 	%rd3988, {%r3583, %r3582};
	xor.b64  	%rd3989, %rd3987, %rd3988;
	xor.b64  	%rd3990, %rd3949, %rd3925;
	and.b64  	%rd3991, %rd3973, %rd3990;
	xor.b64  	%rd3992, %rd3991, %rd3925;
	add.s64 	%rd3993, %rd3901, %rd3679;
	add.s64 	%rd3994, %rd3993, %rd8827;
	add.s64 	%rd3995, %rd3994, %rd3992;
	add.s64 	%rd3996, %rd3995, %rd3989;
	add.s64 	%rd3997, %rd3996, %rd3912;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3584,%dummy}, %rd3984;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3585}, %rd3984;
	}
	shf.r.wrap.b32 	%r3586, %r3585, %r3584, 28;
	shf.r.wrap.b32 	%r3587, %r3584, %r3585, 28;
	mov.b64 	%rd3998, {%r3587, %r3586};
	shf.l.wrap.b32 	%r3588, %r3584, %r3585, 30;
	shf.l.wrap.b32 	%r3589, %r3585, %r3584, 30;
	mov.b64 	%rd3999, {%r3589, %r3588};
	xor.b64  	%rd4000, %rd3999, %rd3998;
	shf.l.wrap.b32 	%r3590, %r3584, %r3585, 25;
	shf.l.wrap.b32 	%r3591, %r3585, %r3584, 25;
	mov.b64 	%rd4001, {%r3591, %r3590};
	xor.b64  	%rd4002, %rd4000, %rd4001;
	xor.b64  	%rd4003, %rd3984, %rd3936;
	xor.b64  	%rd4004, %rd3984, %rd3960;
	and.b64  	%rd4005, %rd4004, %rd4003;
	xor.b64  	%rd4006, %rd4005, %rd3984;
	add.s64 	%rd4007, %rd3996, %rd4006;
	add.s64 	%rd4008, %rd4007, %rd4002;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3592,%dummy}, %rd3997;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3593}, %rd3997;
	}
	shf.r.wrap.b32 	%r3594, %r3593, %r3592, 14;
	shf.r.wrap.b32 	%r3595, %r3592, %r3593, 14;
	mov.b64 	%rd4009, {%r3595, %r3594};
	shf.r.wrap.b32 	%r3596, %r3593, %r3592, 18;
	shf.r.wrap.b32 	%r3597, %r3592, %r3593, 18;
	mov.b64 	%rd4010, {%r3597, %r3596};
	xor.b64  	%rd4011, %rd4010, %rd4009;
	shf.l.wrap.b32 	%r3598, %r3592, %r3593, 23;
	shf.l.wrap.b32 	%r3599, %r3593, %r3592, 23;
	mov.b64 	%rd4012, {%r3599, %r3598};
	xor.b64  	%rd4013, %rd4011, %rd4012;
	xor.b64  	%rd4014, %rd3973, %rd3949;
	and.b64  	%rd4015, %rd3997, %rd4014;
	xor.b64  	%rd4016, %rd4015, %rd3949;
	add.s64 	%rd4017, %rd3925, %rd3692;
	add.s64 	%rd4018, %rd4017, %rd8826;
	add.s64 	%rd4019, %rd4018, %rd4016;
	add.s64 	%rd4020, %rd4019, %rd4013;
	add.s64 	%rd4021, %rd4020, %rd3936;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3600,%dummy}, %rd4008;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3601}, %rd4008;
	}
	shf.r.wrap.b32 	%r3602, %r3601, %r3600, 28;
	shf.r.wrap.b32 	%r3603, %r3600, %r3601, 28;
	mov.b64 	%rd4022, {%r3603, %r3602};
	shf.l.wrap.b32 	%r3604, %r3600, %r3601, 30;
	shf.l.wrap.b32 	%r3605, %r3601, %r3600, 30;
	mov.b64 	%rd4023, {%r3605, %r3604};
	xor.b64  	%rd4024, %rd4023, %rd4022;
	shf.l.wrap.b32 	%r3606, %r3600, %r3601, 25;
	shf.l.wrap.b32 	%r3607, %r3601, %r3600, 25;
	mov.b64 	%rd4025, {%r3607, %r3606};
	xor.b64  	%rd4026, %rd4024, %rd4025;
	xor.b64  	%rd4027, %rd4008, %rd3960;
	xor.b64  	%rd4028, %rd4008, %rd3984;
	and.b64  	%rd4029, %rd4028, %rd4027;
	xor.b64  	%rd4030, %rd4029, %rd4008;
	add.s64 	%rd4031, %rd4020, %rd4030;
	add.s64 	%rd4032, %rd4031, %rd4026;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3608,%dummy}, %rd4021;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3609}, %rd4021;
	}
	shf.r.wrap.b32 	%r3610, %r3609, %r3608, 14;
	shf.r.wrap.b32 	%r3611, %r3608, %r3609, 14;
	mov.b64 	%rd4033, {%r3611, %r3610};
	shf.r.wrap.b32 	%r3612, %r3609, %r3608, 18;
	shf.r.wrap.b32 	%r3613, %r3608, %r3609, 18;
	mov.b64 	%rd4034, {%r3613, %r3612};
	xor.b64  	%rd4035, %rd4034, %rd4033;
	shf.l.wrap.b32 	%r3614, %r3608, %r3609, 23;
	shf.l.wrap.b32 	%r3615, %r3609, %r3608, 23;
	mov.b64 	%rd4036, {%r3615, %r3614};
	xor.b64  	%rd4037, %rd4035, %rd4036;
	xor.b64  	%rd4038, %rd3997, %rd3973;
	and.b64  	%rd4039, %rd4021, %rd4038;
	xor.b64  	%rd4040, %rd4039, %rd3973;
	add.s64 	%rd4041, %rd3949, %rd3705;
	add.s64 	%rd4042, %rd4041, %rd8825;
	add.s64 	%rd4043, %rd4042, %rd4040;
	add.s64 	%rd4044, %rd4043, %rd4037;
	add.s64 	%rd4045, %rd4044, %rd3960;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3616,%dummy}, %rd4032;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3617}, %rd4032;
	}
	shf.r.wrap.b32 	%r3618, %r3617, %r3616, 28;
	shf.r.wrap.b32 	%r3619, %r3616, %r3617, 28;
	mov.b64 	%rd4046, {%r3619, %r3618};
	shf.l.wrap.b32 	%r3620, %r3616, %r3617, 30;
	shf.l.wrap.b32 	%r3621, %r3617, %r3616, 30;
	mov.b64 	%rd4047, {%r3621, %r3620};
	xor.b64  	%rd4048, %rd4047, %rd4046;
	shf.l.wrap.b32 	%r3622, %r3616, %r3617, 25;
	shf.l.wrap.b32 	%r3623, %r3617, %r3616, 25;
	mov.b64 	%rd4049, {%r3623, %r3622};
	xor.b64  	%rd4050, %rd4048, %rd4049;
	xor.b64  	%rd4051, %rd4032, %rd3984;
	xor.b64  	%rd4052, %rd4032, %rd4008;
	and.b64  	%rd4053, %rd4052, %rd4051;
	xor.b64  	%rd4054, %rd4053, %rd4032;
	add.s64 	%rd4055, %rd4044, %rd4054;
	add.s64 	%rd4056, %rd4055, %rd4050;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3624,%dummy}, %rd4045;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3625}, %rd4045;
	}
	shf.r.wrap.b32 	%r3626, %r3625, %r3624, 14;
	shf.r.wrap.b32 	%r3627, %r3624, %r3625, 14;
	mov.b64 	%rd4057, {%r3627, %r3626};
	shf.r.wrap.b32 	%r3628, %r3625, %r3624, 18;
	shf.r.wrap.b32 	%r3629, %r3624, %r3625, 18;
	mov.b64 	%rd4058, {%r3629, %r3628};
	xor.b64  	%rd4059, %rd4058, %rd4057;
	shf.l.wrap.b32 	%r3630, %r3624, %r3625, 23;
	shf.l.wrap.b32 	%r3631, %r3625, %r3624, 23;
	mov.b64 	%rd4060, {%r3631, %r3630};
	xor.b64  	%rd4061, %rd4059, %rd4060;
	xor.b64  	%rd4062, %rd4021, %rd3997;
	and.b64  	%rd4063, %rd4045, %rd4062;
	xor.b64  	%rd4064, %rd4063, %rd3997;
	add.s64 	%rd4065, %rd3973, %rd3718;
	add.s64 	%rd4066, %rd4065, %rd8824;
	add.s64 	%rd4067, %rd4066, %rd4064;
	add.s64 	%rd4068, %rd4067, %rd4061;
	add.s64 	%rd4069, %rd4068, %rd3984;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3632,%dummy}, %rd4056;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3633}, %rd4056;
	}
	shf.r.wrap.b32 	%r3634, %r3633, %r3632, 28;
	shf.r.wrap.b32 	%r3635, %r3632, %r3633, 28;
	mov.b64 	%rd4070, {%r3635, %r3634};
	shf.l.wrap.b32 	%r3636, %r3632, %r3633, 30;
	shf.l.wrap.b32 	%r3637, %r3633, %r3632, 30;
	mov.b64 	%rd4071, {%r3637, %r3636};
	xor.b64  	%rd4072, %rd4071, %rd4070;
	shf.l.wrap.b32 	%r3638, %r3632, %r3633, 25;
	shf.l.wrap.b32 	%r3639, %r3633, %r3632, 25;
	mov.b64 	%rd4073, {%r3639, %r3638};
	xor.b64  	%rd4074, %rd4072, %rd4073;
	xor.b64  	%rd4075, %rd4056, %rd4008;
	xor.b64  	%rd4076, %rd4056, %rd4032;
	and.b64  	%rd4077, %rd4076, %rd4075;
	xor.b64  	%rd4078, %rd4077, %rd4056;
	add.s64 	%rd4079, %rd4068, %rd4078;
	add.s64 	%rd4080, %rd4079, %rd4074;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3640,%dummy}, %rd4069;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3641}, %rd4069;
	}
	shf.r.wrap.b32 	%r3642, %r3641, %r3640, 14;
	shf.r.wrap.b32 	%r3643, %r3640, %r3641, 14;
	mov.b64 	%rd4081, {%r3643, %r3642};
	shf.r.wrap.b32 	%r3644, %r3641, %r3640, 18;
	shf.r.wrap.b32 	%r3645, %r3640, %r3641, 18;
	mov.b64 	%rd4082, {%r3645, %r3644};
	xor.b64  	%rd4083, %rd4082, %rd4081;
	shf.l.wrap.b32 	%r3646, %r3640, %r3641, 23;
	shf.l.wrap.b32 	%r3647, %r3641, %r3640, 23;
	mov.b64 	%rd4084, {%r3647, %r3646};
	xor.b64  	%rd4085, %rd4083, %rd4084;
	xor.b64  	%rd4086, %rd4045, %rd4021;
	and.b64  	%rd4087, %rd4069, %rd4086;
	xor.b64  	%rd4088, %rd4087, %rd4021;
	add.s64 	%rd4089, %rd3997, %rd3731;
	add.s64 	%rd4090, %rd4089, %rd8823;
	add.s64 	%rd4091, %rd4090, %rd4088;
	add.s64 	%rd4092, %rd4091, %rd4085;
	add.s64 	%rd4093, %rd4092, %rd4008;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3648,%dummy}, %rd4080;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3649}, %rd4080;
	}
	shf.r.wrap.b32 	%r3650, %r3649, %r3648, 28;
	shf.r.wrap.b32 	%r3651, %r3648, %r3649, 28;
	mov.b64 	%rd4094, {%r3651, %r3650};
	shf.l.wrap.b32 	%r3652, %r3648, %r3649, 30;
	shf.l.wrap.b32 	%r3653, %r3649, %r3648, 30;
	mov.b64 	%rd4095, {%r3653, %r3652};
	xor.b64  	%rd4096, %rd4095, %rd4094;
	shf.l.wrap.b32 	%r3654, %r3648, %r3649, 25;
	shf.l.wrap.b32 	%r3655, %r3649, %r3648, 25;
	mov.b64 	%rd4097, {%r3655, %r3654};
	xor.b64  	%rd4098, %rd4096, %rd4097;
	xor.b64  	%rd4099, %rd4080, %rd4032;
	xor.b64  	%rd4100, %rd4080, %rd4056;
	and.b64  	%rd4101, %rd4100, %rd4099;
	xor.b64  	%rd4102, %rd4101, %rd4080;
	add.s64 	%rd4103, %rd4092, %rd4102;
	add.s64 	%rd4104, %rd4103, %rd4098;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3656,%dummy}, %rd4093;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3657}, %rd4093;
	}
	shf.r.wrap.b32 	%r3658, %r3657, %r3656, 14;
	shf.r.wrap.b32 	%r3659, %r3656, %r3657, 14;
	mov.b64 	%rd4105, {%r3659, %r3658};
	shf.r.wrap.b32 	%r3660, %r3657, %r3656, 18;
	shf.r.wrap.b32 	%r3661, %r3656, %r3657, 18;
	mov.b64 	%rd4106, {%r3661, %r3660};
	xor.b64  	%rd4107, %rd4106, %rd4105;
	shf.l.wrap.b32 	%r3662, %r3656, %r3657, 23;
	shf.l.wrap.b32 	%r3663, %r3657, %r3656, 23;
	mov.b64 	%rd4108, {%r3663, %r3662};
	xor.b64  	%rd4109, %rd4107, %rd4108;
	xor.b64  	%rd4110, %rd4069, %rd4045;
	and.b64  	%rd4111, %rd4093, %rd4110;
	xor.b64  	%rd4112, %rd4111, %rd4045;
	add.s64 	%rd4113, %rd4021, %rd3744;
	add.s64 	%rd4114, %rd4113, %rd8822;
	add.s64 	%rd4115, %rd4114, %rd4112;
	add.s64 	%rd4116, %rd4115, %rd4109;
	add.s64 	%rd4117, %rd4116, %rd4032;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3664,%dummy}, %rd4104;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3665}, %rd4104;
	}
	shf.r.wrap.b32 	%r3666, %r3665, %r3664, 28;
	shf.r.wrap.b32 	%r3667, %r3664, %r3665, 28;
	mov.b64 	%rd4118, {%r3667, %r3666};
	shf.l.wrap.b32 	%r3668, %r3664, %r3665, 30;
	shf.l.wrap.b32 	%r3669, %r3665, %r3664, 30;
	mov.b64 	%rd4119, {%r3669, %r3668};
	xor.b64  	%rd4120, %rd4119, %rd4118;
	shf.l.wrap.b32 	%r3670, %r3664, %r3665, 25;
	shf.l.wrap.b32 	%r3671, %r3665, %r3664, 25;
	mov.b64 	%rd4121, {%r3671, %r3670};
	xor.b64  	%rd4122, %rd4120, %rd4121;
	xor.b64  	%rd4123, %rd4104, %rd4056;
	xor.b64  	%rd4124, %rd4104, %rd4080;
	and.b64  	%rd4125, %rd4124, %rd4123;
	xor.b64  	%rd4126, %rd4125, %rd4104;
	add.s64 	%rd4127, %rd4116, %rd4126;
	add.s64 	%rd4128, %rd4127, %rd4122;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3672,%dummy}, %rd3731;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3673}, %rd3731;
	}
	shf.r.wrap.b32 	%r3674, %r3673, %r3672, 19;
	shf.r.wrap.b32 	%r3675, %r3672, %r3673, 19;
	mov.b64 	%rd4129, {%r3675, %r3674};
	shf.l.wrap.b32 	%r3676, %r3672, %r3673, 3;
	shf.l.wrap.b32 	%r3677, %r3673, %r3672, 3;
	mov.b64 	%rd4130, {%r3677, %r3676};
	shr.u64 	%rd4131, %rd3731, 6;
	xor.b64  	%rd4132, %rd4129, %rd4131;
	xor.b64  	%rd4133, %rd4132, %rd4130;
	shf.r.wrap.b32 	%r3678, %r3267, %r3266, 1;
	shf.r.wrap.b32 	%r3679, %r3266, %r3267, 1;
	mov.b64 	%rd4134, {%r3679, %r3678};
	shf.r.wrap.b32 	%r3680, %r3267, %r3266, 8;
	shf.r.wrap.b32 	%r3681, %r3266, %r3267, 8;
	mov.b64 	%rd4135, {%r3681, %r3680};
	shr.u64 	%rd4136, %rd3562, 7;
	xor.b64  	%rd4137, %rd4134, %rd4136;
	xor.b64  	%rd4138, %rd4137, %rd4135;
	add.s64 	%rd4139, %rd3666, %rd3549;
	add.s64 	%rd4140, %rd4139, %rd4133;
	add.s64 	%rd4141, %rd4140, %rd4138;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3682,%dummy}, %rd3744;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3683}, %rd3744;
	}
	shf.r.wrap.b32 	%r3684, %r3683, %r3682, 19;
	shf.r.wrap.b32 	%r3685, %r3682, %r3683, 19;
	mov.b64 	%rd4142, {%r3685, %r3684};
	shf.l.wrap.b32 	%r3686, %r3682, %r3683, 3;
	shf.l.wrap.b32 	%r3687, %r3683, %r3682, 3;
	mov.b64 	%rd4143, {%r3687, %r3686};
	shr.u64 	%rd4144, %rd3744, 6;
	xor.b64  	%rd4145, %rd4142, %rd4144;
	xor.b64  	%rd4146, %rd4145, %rd4143;
	shf.r.wrap.b32 	%r3688, %r3279, %r3278, 1;
	shf.r.wrap.b32 	%r3689, %r3278, %r3279, 1;
	mov.b64 	%rd4147, {%r3689, %r3688};
	shf.r.wrap.b32 	%r3690, %r3279, %r3278, 8;
	shf.r.wrap.b32 	%r3691, %r3278, %r3279, 8;
	mov.b64 	%rd4148, {%r3691, %r3690};
	shr.u64 	%rd4149, %rd3575, 7;
	xor.b64  	%rd4150, %rd4147, %rd4149;
	xor.b64  	%rd4151, %rd4150, %rd4148;
	add.s64 	%rd4152, %rd3679, %rd3562;
	add.s64 	%rd4153, %rd4152, %rd4146;
	add.s64 	%rd4154, %rd4153, %rd4151;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3692,%dummy}, %rd4141;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3693}, %rd4141;
	}
	shf.r.wrap.b32 	%r3694, %r3693, %r3692, 19;
	shf.r.wrap.b32 	%r3695, %r3692, %r3693, 19;
	mov.b64 	%rd4155, {%r3695, %r3694};
	shf.l.wrap.b32 	%r3696, %r3692, %r3693, 3;
	shf.l.wrap.b32 	%r3697, %r3693, %r3692, 3;
	mov.b64 	%rd4156, {%r3697, %r3696};
	shr.u64 	%rd4157, %rd4141, 6;
	xor.b64  	%rd4158, %rd4155, %rd4157;
	xor.b64  	%rd4159, %rd4158, %rd4156;
	shf.r.wrap.b32 	%r3698, %r3291, %r3290, 1;
	shf.r.wrap.b32 	%r3699, %r3290, %r3291, 1;
	mov.b64 	%rd4160, {%r3699, %r3698};
	shf.r.wrap.b32 	%r3700, %r3291, %r3290, 8;
	shf.r.wrap.b32 	%r3701, %r3290, %r3291, 8;
	mov.b64 	%rd4161, {%r3701, %r3700};
	shr.u64 	%rd4162, %rd3588, 7;
	xor.b64  	%rd4163, %rd4160, %rd4162;
	xor.b64  	%rd4164, %rd4163, %rd4161;
	add.s64 	%rd4165, %rd3692, %rd3575;
	add.s64 	%rd4166, %rd4165, %rd4159;
	add.s64 	%rd4167, %rd4166, %rd4164;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3702,%dummy}, %rd4154;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3703}, %rd4154;
	}
	shf.r.wrap.b32 	%r3704, %r3703, %r3702, 19;
	shf.r.wrap.b32 	%r3705, %r3702, %r3703, 19;
	mov.b64 	%rd4168, {%r3705, %r3704};
	shf.l.wrap.b32 	%r3706, %r3702, %r3703, 3;
	shf.l.wrap.b32 	%r3707, %r3703, %r3702, 3;
	mov.b64 	%rd4169, {%r3707, %r3706};
	shr.u64 	%rd4170, %rd4154, 6;
	xor.b64  	%rd4171, %rd4168, %rd4170;
	xor.b64  	%rd4172, %rd4171, %rd4169;
	shf.r.wrap.b32 	%r3708, %r3303, %r3302, 1;
	shf.r.wrap.b32 	%r3709, %r3302, %r3303, 1;
	mov.b64 	%rd4173, {%r3709, %r3708};
	shf.r.wrap.b32 	%r3710, %r3303, %r3302, 8;
	shf.r.wrap.b32 	%r3711, %r3302, %r3303, 8;
	mov.b64 	%rd4174, {%r3711, %r3710};
	shr.u64 	%rd4175, %rd3601, 7;
	xor.b64  	%rd4176, %rd4173, %rd4175;
	xor.b64  	%rd4177, %rd4176, %rd4174;
	add.s64 	%rd4178, %rd3705, %rd3588;
	add.s64 	%rd4179, %rd4178, %rd4172;
	add.s64 	%rd4180, %rd4179, %rd4177;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3712,%dummy}, %rd4167;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3713}, %rd4167;
	}
	shf.r.wrap.b32 	%r3714, %r3713, %r3712, 19;
	shf.r.wrap.b32 	%r3715, %r3712, %r3713, 19;
	mov.b64 	%rd4181, {%r3715, %r3714};
	shf.l.wrap.b32 	%r3716, %r3712, %r3713, 3;
	shf.l.wrap.b32 	%r3717, %r3713, %r3712, 3;
	mov.b64 	%rd4182, {%r3717, %r3716};
	shr.u64 	%rd4183, %rd4167, 6;
	xor.b64  	%rd4184, %rd4181, %rd4183;
	xor.b64  	%rd4185, %rd4184, %rd4182;
	shf.r.wrap.b32 	%r3718, %r3315, %r3314, 1;
	shf.r.wrap.b32 	%r3719, %r3314, %r3315, 1;
	mov.b64 	%rd4186, {%r3719, %r3718};
	shf.r.wrap.b32 	%r3720, %r3315, %r3314, 8;
	shf.r.wrap.b32 	%r3721, %r3314, %r3315, 8;
	mov.b64 	%rd4187, {%r3721, %r3720};
	shr.u64 	%rd4188, %rd3614, 7;
	xor.b64  	%rd4189, %rd4186, %rd4188;
	xor.b64  	%rd4190, %rd4189, %rd4187;
	add.s64 	%rd4191, %rd3718, %rd3601;
	add.s64 	%rd4192, %rd4191, %rd4185;
	add.s64 	%rd4193, %rd4192, %rd4190;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3722,%dummy}, %rd4180;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3723}, %rd4180;
	}
	shf.r.wrap.b32 	%r3724, %r3723, %r3722, 19;
	shf.r.wrap.b32 	%r3725, %r3722, %r3723, 19;
	mov.b64 	%rd4194, {%r3725, %r3724};
	shf.l.wrap.b32 	%r3726, %r3722, %r3723, 3;
	shf.l.wrap.b32 	%r3727, %r3723, %r3722, 3;
	mov.b64 	%rd4195, {%r3727, %r3726};
	shr.u64 	%rd4196, %rd4180, 6;
	xor.b64  	%rd4197, %rd4194, %rd4196;
	xor.b64  	%rd4198, %rd4197, %rd4195;
	shf.r.wrap.b32 	%r3728, %r3327, %r3326, 1;
	shf.r.wrap.b32 	%r3729, %r3326, %r3327, 1;
	mov.b64 	%rd4199, {%r3729, %r3728};
	shf.r.wrap.b32 	%r3730, %r3327, %r3326, 8;
	shf.r.wrap.b32 	%r3731, %r3326, %r3327, 8;
	mov.b64 	%rd4200, {%r3731, %r3730};
	shr.u64 	%rd4201, %rd3627, 7;
	xor.b64  	%rd4202, %rd4199, %rd4201;
	xor.b64  	%rd4203, %rd4202, %rd4200;
	add.s64 	%rd4204, %rd3731, %rd3614;
	add.s64 	%rd4205, %rd4204, %rd4198;
	add.s64 	%rd4206, %rd4205, %rd4203;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3732,%dummy}, %rd4193;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3733}, %rd4193;
	}
	shf.r.wrap.b32 	%r3734, %r3733, %r3732, 19;
	shf.r.wrap.b32 	%r3735, %r3732, %r3733, 19;
	mov.b64 	%rd4207, {%r3735, %r3734};
	shf.l.wrap.b32 	%r3736, %r3732, %r3733, 3;
	shf.l.wrap.b32 	%r3737, %r3733, %r3732, 3;
	mov.b64 	%rd4208, {%r3737, %r3736};
	shr.u64 	%rd4209, %rd4193, 6;
	xor.b64  	%rd4210, %rd4207, %rd4209;
	xor.b64  	%rd4211, %rd4210, %rd4208;
	shf.r.wrap.b32 	%r3738, %r3339, %r3338, 1;
	shf.r.wrap.b32 	%r3739, %r3338, %r3339, 1;
	mov.b64 	%rd4212, {%r3739, %r3738};
	shf.r.wrap.b32 	%r3740, %r3339, %r3338, 8;
	shf.r.wrap.b32 	%r3741, %r3338, %r3339, 8;
	mov.b64 	%rd4213, {%r3741, %r3740};
	shr.u64 	%rd4214, %rd3640, 7;
	xor.b64  	%rd4215, %rd4212, %rd4214;
	xor.b64  	%rd4216, %rd4215, %rd4213;
	add.s64 	%rd4217, %rd3744, %rd3627;
	add.s64 	%rd4218, %rd4217, %rd4211;
	add.s64 	%rd4219, %rd4218, %rd4216;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3742,%dummy}, %rd4206;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3743}, %rd4206;
	}
	shf.r.wrap.b32 	%r3744, %r3743, %r3742, 19;
	shf.r.wrap.b32 	%r3745, %r3742, %r3743, 19;
	mov.b64 	%rd4220, {%r3745, %r3744};
	shf.l.wrap.b32 	%r3746, %r3742, %r3743, 3;
	shf.l.wrap.b32 	%r3747, %r3743, %r3742, 3;
	mov.b64 	%rd4221, {%r3747, %r3746};
	shr.u64 	%rd4222, %rd4206, 6;
	xor.b64  	%rd4223, %rd4220, %rd4222;
	xor.b64  	%rd4224, %rd4223, %rd4221;
	shf.r.wrap.b32 	%r3748, %r3351, %r3350, 1;
	shf.r.wrap.b32 	%r3749, %r3350, %r3351, 1;
	mov.b64 	%rd4225, {%r3749, %r3748};
	shf.r.wrap.b32 	%r3750, %r3351, %r3350, 8;
	shf.r.wrap.b32 	%r3751, %r3350, %r3351, 8;
	mov.b64 	%rd4226, {%r3751, %r3750};
	shr.u64 	%rd4227, %rd3653, 7;
	xor.b64  	%rd4228, %rd4225, %rd4227;
	xor.b64  	%rd4229, %rd4228, %rd4226;
	add.s64 	%rd4230, %rd4141, %rd3640;
	add.s64 	%rd4231, %rd4230, %rd4224;
	add.s64 	%rd4232, %rd4231, %rd4229;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3752,%dummy}, %rd4219;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3753}, %rd4219;
	}
	shf.r.wrap.b32 	%r3754, %r3753, %r3752, 19;
	shf.r.wrap.b32 	%r3755, %r3752, %r3753, 19;
	mov.b64 	%rd4233, {%r3755, %r3754};
	shf.l.wrap.b32 	%r3756, %r3752, %r3753, 3;
	shf.l.wrap.b32 	%r3757, %r3753, %r3752, 3;
	mov.b64 	%rd4234, {%r3757, %r3756};
	shr.u64 	%rd4235, %rd4219, 6;
	xor.b64  	%rd4236, %rd4233, %rd4235;
	xor.b64  	%rd4237, %rd4236, %rd4234;
	shf.r.wrap.b32 	%r3758, %r3363, %r3362, 1;
	shf.r.wrap.b32 	%r3759, %r3362, %r3363, 1;
	mov.b64 	%rd4238, {%r3759, %r3758};
	shf.r.wrap.b32 	%r3760, %r3363, %r3362, 8;
	shf.r.wrap.b32 	%r3761, %r3362, %r3363, 8;
	mov.b64 	%rd4239, {%r3761, %r3760};
	shr.u64 	%rd4240, %rd3666, 7;
	xor.b64  	%rd4241, %rd4238, %rd4240;
	xor.b64  	%rd4242, %rd4241, %rd4239;
	add.s64 	%rd4243, %rd4154, %rd3653;
	add.s64 	%rd4244, %rd4243, %rd4237;
	add.s64 	%rd4245, %rd4244, %rd4242;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3762,%dummy}, %rd4232;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3763}, %rd4232;
	}
	shf.r.wrap.b32 	%r3764, %r3763, %r3762, 19;
	shf.r.wrap.b32 	%r3765, %r3762, %r3763, 19;
	mov.b64 	%rd4246, {%r3765, %r3764};
	shf.l.wrap.b32 	%r3766, %r3762, %r3763, 3;
	shf.l.wrap.b32 	%r3767, %r3763, %r3762, 3;
	mov.b64 	%rd4247, {%r3767, %r3766};
	shr.u64 	%rd4248, %rd4232, 6;
	xor.b64  	%rd4249, %rd4246, %rd4248;
	xor.b64  	%rd4250, %rd4249, %rd4247;
	shf.r.wrap.b32 	%r3768, %r3375, %r3374, 1;
	shf.r.wrap.b32 	%r3769, %r3374, %r3375, 1;
	mov.b64 	%rd4251, {%r3769, %r3768};
	shf.r.wrap.b32 	%r3770, %r3375, %r3374, 8;
	shf.r.wrap.b32 	%r3771, %r3374, %r3375, 8;
	mov.b64 	%rd4252, {%r3771, %r3770};
	shr.u64 	%rd4253, %rd3679, 7;
	xor.b64  	%rd4254, %rd4251, %rd4253;
	xor.b64  	%rd4255, %rd4254, %rd4252;
	add.s64 	%rd4256, %rd4167, %rd3666;
	add.s64 	%rd4257, %rd4256, %rd4250;
	add.s64 	%rd4258, %rd4257, %rd4255;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3772,%dummy}, %rd4245;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3773}, %rd4245;
	}
	shf.r.wrap.b32 	%r3774, %r3773, %r3772, 19;
	shf.r.wrap.b32 	%r3775, %r3772, %r3773, 19;
	mov.b64 	%rd4259, {%r3775, %r3774};
	shf.l.wrap.b32 	%r3776, %r3772, %r3773, 3;
	shf.l.wrap.b32 	%r3777, %r3773, %r3772, 3;
	mov.b64 	%rd4260, {%r3777, %r3776};
	shr.u64 	%rd4261, %rd4245, 6;
	xor.b64  	%rd4262, %rd4259, %rd4261;
	xor.b64  	%rd4263, %rd4262, %rd4260;
	shf.r.wrap.b32 	%r3778, %r3387, %r3386, 1;
	shf.r.wrap.b32 	%r3779, %r3386, %r3387, 1;
	mov.b64 	%rd4264, {%r3779, %r3778};
	shf.r.wrap.b32 	%r3780, %r3387, %r3386, 8;
	shf.r.wrap.b32 	%r3781, %r3386, %r3387, 8;
	mov.b64 	%rd4265, {%r3781, %r3780};
	shr.u64 	%rd4266, %rd3692, 7;
	xor.b64  	%rd4267, %rd4264, %rd4266;
	xor.b64  	%rd4268, %rd4267, %rd4265;
	add.s64 	%rd4269, %rd4180, %rd3679;
	add.s64 	%rd4270, %rd4269, %rd4263;
	add.s64 	%rd4271, %rd4270, %rd4268;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3782,%dummy}, %rd4258;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3783}, %rd4258;
	}
	shf.r.wrap.b32 	%r3784, %r3783, %r3782, 19;
	shf.r.wrap.b32 	%r3785, %r3782, %r3783, 19;
	mov.b64 	%rd4272, {%r3785, %r3784};
	shf.l.wrap.b32 	%r3786, %r3782, %r3783, 3;
	shf.l.wrap.b32 	%r3787, %r3783, %r3782, 3;
	mov.b64 	%rd4273, {%r3787, %r3786};
	shr.u64 	%rd4274, %rd4258, 6;
	xor.b64  	%rd4275, %rd4272, %rd4274;
	xor.b64  	%rd4276, %rd4275, %rd4273;
	shf.r.wrap.b32 	%r3788, %r3397, %r3396, 1;
	shf.r.wrap.b32 	%r3789, %r3396, %r3397, 1;
	mov.b64 	%rd4277, {%r3789, %r3788};
	shf.r.wrap.b32 	%r3790, %r3397, %r3396, 8;
	shf.r.wrap.b32 	%r3791, %r3396, %r3397, 8;
	mov.b64 	%rd4278, {%r3791, %r3790};
	shr.u64 	%rd4279, %rd3705, 7;
	xor.b64  	%rd4280, %rd4277, %rd4279;
	xor.b64  	%rd4281, %rd4280, %rd4278;
	add.s64 	%rd4282, %rd4193, %rd3692;
	add.s64 	%rd4283, %rd4282, %rd4276;
	add.s64 	%rd4284, %rd4283, %rd4281;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3792,%dummy}, %rd4271;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3793}, %rd4271;
	}
	shf.r.wrap.b32 	%r3794, %r3793, %r3792, 19;
	shf.r.wrap.b32 	%r3795, %r3792, %r3793, 19;
	mov.b64 	%rd4285, {%r3795, %r3794};
	shf.l.wrap.b32 	%r3796, %r3792, %r3793, 3;
	shf.l.wrap.b32 	%r3797, %r3793, %r3792, 3;
	mov.b64 	%rd4286, {%r3797, %r3796};
	shr.u64 	%rd4287, %rd4271, 6;
	xor.b64  	%rd4288, %rd4285, %rd4287;
	xor.b64  	%rd4289, %rd4288, %rd4286;
	shf.r.wrap.b32 	%r3798, %r3407, %r3406, 1;
	shf.r.wrap.b32 	%r3799, %r3406, %r3407, 1;
	mov.b64 	%rd4290, {%r3799, %r3798};
	shf.r.wrap.b32 	%r3800, %r3407, %r3406, 8;
	shf.r.wrap.b32 	%r3801, %r3406, %r3407, 8;
	mov.b64 	%rd4291, {%r3801, %r3800};
	shr.u64 	%rd4292, %rd3718, 7;
	xor.b64  	%rd4293, %rd4290, %rd4292;
	xor.b64  	%rd4294, %rd4293, %rd4291;
	add.s64 	%rd4295, %rd4206, %rd3705;
	add.s64 	%rd4296, %rd4295, %rd4289;
	add.s64 	%rd4297, %rd4296, %rd4294;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3802,%dummy}, %rd4284;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3803}, %rd4284;
	}
	shf.r.wrap.b32 	%r3804, %r3803, %r3802, 19;
	shf.r.wrap.b32 	%r3805, %r3802, %r3803, 19;
	mov.b64 	%rd4298, {%r3805, %r3804};
	shf.l.wrap.b32 	%r3806, %r3802, %r3803, 3;
	shf.l.wrap.b32 	%r3807, %r3803, %r3802, 3;
	mov.b64 	%rd4299, {%r3807, %r3806};
	shr.u64 	%rd4300, %rd4284, 6;
	xor.b64  	%rd4301, %rd4298, %rd4300;
	xor.b64  	%rd4302, %rd4301, %rd4299;
	shf.r.wrap.b32 	%r3808, %r3673, %r3672, 1;
	shf.r.wrap.b32 	%r3809, %r3672, %r3673, 1;
	mov.b64 	%rd4303, {%r3809, %r3808};
	shf.r.wrap.b32 	%r3810, %r3673, %r3672, 8;
	shf.r.wrap.b32 	%r3811, %r3672, %r3673, 8;
	mov.b64 	%rd4304, {%r3811, %r3810};
	shr.u64 	%rd4305, %rd3731, 7;
	xor.b64  	%rd4306, %rd4303, %rd4305;
	xor.b64  	%rd4307, %rd4306, %rd4304;
	add.s64 	%rd4308, %rd4219, %rd3718;
	add.s64 	%rd4309, %rd4308, %rd4302;
	add.s64 	%rd4310, %rd4309, %rd4307;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3812,%dummy}, %rd4297;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3813}, %rd4297;
	}
	shf.r.wrap.b32 	%r3814, %r3813, %r3812, 19;
	shf.r.wrap.b32 	%r3815, %r3812, %r3813, 19;
	mov.b64 	%rd4311, {%r3815, %r3814};
	shf.l.wrap.b32 	%r3816, %r3812, %r3813, 3;
	shf.l.wrap.b32 	%r3817, %r3813, %r3812, 3;
	mov.b64 	%rd4312, {%r3817, %r3816};
	shr.u64 	%rd4313, %rd4297, 6;
	xor.b64  	%rd4314, %rd4311, %rd4313;
	xor.b64  	%rd4315, %rd4314, %rd4312;
	shf.r.wrap.b32 	%r3818, %r3683, %r3682, 1;
	shf.r.wrap.b32 	%r3819, %r3682, %r3683, 1;
	mov.b64 	%rd4316, {%r3819, %r3818};
	shf.r.wrap.b32 	%r3820, %r3683, %r3682, 8;
	shf.r.wrap.b32 	%r3821, %r3682, %r3683, 8;
	mov.b64 	%rd4317, {%r3821, %r3820};
	shr.u64 	%rd4318, %rd3744, 7;
	xor.b64  	%rd4319, %rd4316, %rd4318;
	xor.b64  	%rd4320, %rd4319, %rd4317;
	add.s64 	%rd4321, %rd4232, %rd3731;
	add.s64 	%rd4322, %rd4321, %rd4315;
	add.s64 	%rd4323, %rd4322, %rd4320;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3822,%dummy}, %rd4310;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3823}, %rd4310;
	}
	shf.r.wrap.b32 	%r3824, %r3823, %r3822, 19;
	shf.r.wrap.b32 	%r3825, %r3822, %r3823, 19;
	mov.b64 	%rd4324, {%r3825, %r3824};
	shf.l.wrap.b32 	%r3826, %r3822, %r3823, 3;
	shf.l.wrap.b32 	%r3827, %r3823, %r3822, 3;
	mov.b64 	%rd4325, {%r3827, %r3826};
	shr.u64 	%rd4326, %rd4310, 6;
	xor.b64  	%rd4327, %rd4324, %rd4326;
	xor.b64  	%rd4328, %rd4327, %rd4325;
	shf.r.wrap.b32 	%r3828, %r3693, %r3692, 1;
	shf.r.wrap.b32 	%r3829, %r3692, %r3693, 1;
	mov.b64 	%rd4329, {%r3829, %r3828};
	shf.r.wrap.b32 	%r3830, %r3693, %r3692, 8;
	shf.r.wrap.b32 	%r3831, %r3692, %r3693, 8;
	mov.b64 	%rd4330, {%r3831, %r3830};
	shr.u64 	%rd4331, %rd4141, 7;
	xor.b64  	%rd4332, %rd4329, %rd4331;
	xor.b64  	%rd4333, %rd4332, %rd4330;
	add.s64 	%rd4334, %rd4245, %rd3744;
	add.s64 	%rd4335, %rd4334, %rd4328;
	add.s64 	%rd4336, %rd4335, %rd4333;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3832,%dummy}, %rd4117;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3833}, %rd4117;
	}
	shf.r.wrap.b32 	%r3834, %r3833, %r3832, 14;
	shf.r.wrap.b32 	%r3835, %r3832, %r3833, 14;
	mov.b64 	%rd4337, {%r3835, %r3834};
	shf.r.wrap.b32 	%r3836, %r3833, %r3832, 18;
	shf.r.wrap.b32 	%r3837, %r3832, %r3833, 18;
	mov.b64 	%rd4338, {%r3837, %r3836};
	xor.b64  	%rd4339, %rd4338, %rd4337;
	shf.l.wrap.b32 	%r3838, %r3832, %r3833, 23;
	shf.l.wrap.b32 	%r3839, %r3833, %r3832, 23;
	mov.b64 	%rd4340, {%r3839, %r3838};
	xor.b64  	%rd4341, %rd4339, %rd4340;
	xor.b64  	%rd4342, %rd4093, %rd4069;
	and.b64  	%rd4343, %rd4342, %rd4117;
	xor.b64  	%rd4344, %rd4343, %rd4069;
	add.s64 	%rd4345, %rd4344, %rd4045;
	add.s64 	%rd4346, %rd4345, %rd4141;
	add.s64 	%rd4347, %rd4346, %rd8821;
	add.s64 	%rd4348, %rd4347, %rd4341;
	add.s64 	%rd4349, %rd4348, %rd4056;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3840,%dummy}, %rd4128;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3841}, %rd4128;
	}
	shf.r.wrap.b32 	%r3842, %r3841, %r3840, 28;
	shf.r.wrap.b32 	%r3843, %r3840, %r3841, 28;
	mov.b64 	%rd4350, {%r3843, %r3842};
	shf.l.wrap.b32 	%r3844, %r3840, %r3841, 30;
	shf.l.wrap.b32 	%r3845, %r3841, %r3840, 30;
	mov.b64 	%rd4351, {%r3845, %r3844};
	xor.b64  	%rd4352, %rd4351, %rd4350;
	shf.l.wrap.b32 	%r3846, %r3840, %r3841, 25;
	shf.l.wrap.b32 	%r3847, %r3841, %r3840, 25;
	mov.b64 	%rd4353, {%r3847, %r3846};
	xor.b64  	%rd4354, %rd4352, %rd4353;
	xor.b64  	%rd4355, %rd4128, %rd4080;
	xor.b64  	%rd4356, %rd4128, %rd4104;
	and.b64  	%rd4357, %rd4356, %rd4355;
	xor.b64  	%rd4358, %rd4357, %rd4128;
	add.s64 	%rd4359, %rd4348, %rd4358;
	add.s64 	%rd4360, %rd4359, %rd4354;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3848,%dummy}, %rd4349;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3849}, %rd4349;
	}
	shf.r.wrap.b32 	%r3850, %r3849, %r3848, 14;
	shf.r.wrap.b32 	%r3851, %r3848, %r3849, 14;
	mov.b64 	%rd4361, {%r3851, %r3850};
	shf.r.wrap.b32 	%r3852, %r3849, %r3848, 18;
	shf.r.wrap.b32 	%r3853, %r3848, %r3849, 18;
	mov.b64 	%rd4362, {%r3853, %r3852};
	xor.b64  	%rd4363, %rd4362, %rd4361;
	shf.l.wrap.b32 	%r3854, %r3848, %r3849, 23;
	shf.l.wrap.b32 	%r3855, %r3849, %r3848, 23;
	mov.b64 	%rd4364, {%r3855, %r3854};
	xor.b64  	%rd4365, %rd4363, %rd4364;
	xor.b64  	%rd4366, %rd4117, %rd4093;
	and.b64  	%rd4367, %rd4349, %rd4366;
	xor.b64  	%rd4368, %rd4367, %rd4093;
	add.s64 	%rd4369, %rd4154, %rd4069;
	add.s64 	%rd4370, %rd4369, %rd8820;
	add.s64 	%rd4371, %rd4370, %rd4368;
	add.s64 	%rd4372, %rd4371, %rd4365;
	add.s64 	%rd4373, %rd4372, %rd4080;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3856,%dummy}, %rd4360;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3857}, %rd4360;
	}
	shf.r.wrap.b32 	%r3858, %r3857, %r3856, 28;
	shf.r.wrap.b32 	%r3859, %r3856, %r3857, 28;
	mov.b64 	%rd4374, {%r3859, %r3858};
	shf.l.wrap.b32 	%r3860, %r3856, %r3857, 30;
	shf.l.wrap.b32 	%r3861, %r3857, %r3856, 30;
	mov.b64 	%rd4375, {%r3861, %r3860};
	xor.b64  	%rd4376, %rd4375, %rd4374;
	shf.l.wrap.b32 	%r3862, %r3856, %r3857, 25;
	shf.l.wrap.b32 	%r3863, %r3857, %r3856, 25;
	mov.b64 	%rd4377, {%r3863, %r3862};
	xor.b64  	%rd4378, %rd4376, %rd4377;
	xor.b64  	%rd4379, %rd4360, %rd4104;
	xor.b64  	%rd4380, %rd4360, %rd4128;
	and.b64  	%rd4381, %rd4380, %rd4379;
	xor.b64  	%rd4382, %rd4381, %rd4360;
	add.s64 	%rd4383, %rd4372, %rd4382;
	add.s64 	%rd4384, %rd4383, %rd4378;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3864,%dummy}, %rd4373;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3865}, %rd4373;
	}
	shf.r.wrap.b32 	%r3866, %r3865, %r3864, 14;
	shf.r.wrap.b32 	%r3867, %r3864, %r3865, 14;
	mov.b64 	%rd4385, {%r3867, %r3866};
	shf.r.wrap.b32 	%r3868, %r3865, %r3864, 18;
	shf.r.wrap.b32 	%r3869, %r3864, %r3865, 18;
	mov.b64 	%rd4386, {%r3869, %r3868};
	xor.b64  	%rd4387, %rd4386, %rd4385;
	shf.l.wrap.b32 	%r3870, %r3864, %r3865, 23;
	shf.l.wrap.b32 	%r3871, %r3865, %r3864, 23;
	mov.b64 	%rd4388, {%r3871, %r3870};
	xor.b64  	%rd4389, %rd4387, %rd4388;
	xor.b64  	%rd4390, %rd4349, %rd4117;
	and.b64  	%rd4391, %rd4373, %rd4390;
	xor.b64  	%rd4392, %rd4391, %rd4117;
	add.s64 	%rd4393, %rd4167, %rd4093;
	add.s64 	%rd4394, %rd4393, %rd8819;
	add.s64 	%rd4395, %rd4394, %rd4392;
	add.s64 	%rd4396, %rd4395, %rd4389;
	add.s64 	%rd4397, %rd4396, %rd4104;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3872,%dummy}, %rd4384;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3873}, %rd4384;
	}
	shf.r.wrap.b32 	%r3874, %r3873, %r3872, 28;
	shf.r.wrap.b32 	%r3875, %r3872, %r3873, 28;
	mov.b64 	%rd4398, {%r3875, %r3874};
	shf.l.wrap.b32 	%r3876, %r3872, %r3873, 30;
	shf.l.wrap.b32 	%r3877, %r3873, %r3872, 30;
	mov.b64 	%rd4399, {%r3877, %r3876};
	xor.b64  	%rd4400, %rd4399, %rd4398;
	shf.l.wrap.b32 	%r3878, %r3872, %r3873, 25;
	shf.l.wrap.b32 	%r3879, %r3873, %r3872, 25;
	mov.b64 	%rd4401, {%r3879, %r3878};
	xor.b64  	%rd4402, %rd4400, %rd4401;
	xor.b64  	%rd4403, %rd4384, %rd4128;
	xor.b64  	%rd4404, %rd4384, %rd4360;
	and.b64  	%rd4405, %rd4404, %rd4403;
	xor.b64  	%rd4406, %rd4405, %rd4384;
	add.s64 	%rd4407, %rd4396, %rd4406;
	add.s64 	%rd4408, %rd4407, %rd4402;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3880,%dummy}, %rd4397;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3881}, %rd4397;
	}
	shf.r.wrap.b32 	%r3882, %r3881, %r3880, 14;
	shf.r.wrap.b32 	%r3883, %r3880, %r3881, 14;
	mov.b64 	%rd4409, {%r3883, %r3882};
	shf.r.wrap.b32 	%r3884, %r3881, %r3880, 18;
	shf.r.wrap.b32 	%r3885, %r3880, %r3881, 18;
	mov.b64 	%rd4410, {%r3885, %r3884};
	xor.b64  	%rd4411, %rd4410, %rd4409;
	shf.l.wrap.b32 	%r3886, %r3880, %r3881, 23;
	shf.l.wrap.b32 	%r3887, %r3881, %r3880, 23;
	mov.b64 	%rd4412, {%r3887, %r3886};
	xor.b64  	%rd4413, %rd4411, %rd4412;
	xor.b64  	%rd4414, %rd4373, %rd4349;
	and.b64  	%rd4415, %rd4397, %rd4414;
	xor.b64  	%rd4416, %rd4415, %rd4349;
	add.s64 	%rd4417, %rd4180, %rd4117;
	add.s64 	%rd4418, %rd4417, %rd8818;
	add.s64 	%rd4419, %rd4418, %rd4416;
	add.s64 	%rd4420, %rd4419, %rd4413;
	add.s64 	%rd4421, %rd4420, %rd4128;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3888,%dummy}, %rd4408;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3889}, %rd4408;
	}
	shf.r.wrap.b32 	%r3890, %r3889, %r3888, 28;
	shf.r.wrap.b32 	%r3891, %r3888, %r3889, 28;
	mov.b64 	%rd4422, {%r3891, %r3890};
	shf.l.wrap.b32 	%r3892, %r3888, %r3889, 30;
	shf.l.wrap.b32 	%r3893, %r3889, %r3888, 30;
	mov.b64 	%rd4423, {%r3893, %r3892};
	xor.b64  	%rd4424, %rd4423, %rd4422;
	shf.l.wrap.b32 	%r3894, %r3888, %r3889, 25;
	shf.l.wrap.b32 	%r3895, %r3889, %r3888, 25;
	mov.b64 	%rd4425, {%r3895, %r3894};
	xor.b64  	%rd4426, %rd4424, %rd4425;
	xor.b64  	%rd4427, %rd4408, %rd4360;
	xor.b64  	%rd4428, %rd4408, %rd4384;
	and.b64  	%rd4429, %rd4428, %rd4427;
	xor.b64  	%rd4430, %rd4429, %rd4408;
	add.s64 	%rd4431, %rd4420, %rd4430;
	add.s64 	%rd4432, %rd4431, %rd4426;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3896,%dummy}, %rd4421;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3897}, %rd4421;
	}
	shf.r.wrap.b32 	%r3898, %r3897, %r3896, 14;
	shf.r.wrap.b32 	%r3899, %r3896, %r3897, 14;
	mov.b64 	%rd4433, {%r3899, %r3898};
	shf.r.wrap.b32 	%r3900, %r3897, %r3896, 18;
	shf.r.wrap.b32 	%r3901, %r3896, %r3897, 18;
	mov.b64 	%rd4434, {%r3901, %r3900};
	xor.b64  	%rd4435, %rd4434, %rd4433;
	shf.l.wrap.b32 	%r3902, %r3896, %r3897, 23;
	shf.l.wrap.b32 	%r3903, %r3897, %r3896, 23;
	mov.b64 	%rd4436, {%r3903, %r3902};
	xor.b64  	%rd4437, %rd4435, %rd4436;
	xor.b64  	%rd4438, %rd4397, %rd4373;
	and.b64  	%rd4439, %rd4421, %rd4438;
	xor.b64  	%rd4440, %rd4439, %rd4373;
	add.s64 	%rd4441, %rd4349, %rd4193;
	add.s64 	%rd4442, %rd4441, %rd8817;
	add.s64 	%rd4443, %rd4442, %rd4440;
	add.s64 	%rd4444, %rd4443, %rd4437;
	add.s64 	%rd4445, %rd4444, %rd4360;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3904,%dummy}, %rd4432;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3905}, %rd4432;
	}
	shf.r.wrap.b32 	%r3906, %r3905, %r3904, 28;
	shf.r.wrap.b32 	%r3907, %r3904, %r3905, 28;
	mov.b64 	%rd4446, {%r3907, %r3906};
	shf.l.wrap.b32 	%r3908, %r3904, %r3905, 30;
	shf.l.wrap.b32 	%r3909, %r3905, %r3904, 30;
	mov.b64 	%rd4447, {%r3909, %r3908};
	xor.b64  	%rd4448, %rd4447, %rd4446;
	shf.l.wrap.b32 	%r3910, %r3904, %r3905, 25;
	shf.l.wrap.b32 	%r3911, %r3905, %r3904, 25;
	mov.b64 	%rd4449, {%r3911, %r3910};
	xor.b64  	%rd4450, %rd4448, %rd4449;
	xor.b64  	%rd4451, %rd4432, %rd4384;
	xor.b64  	%rd4452, %rd4432, %rd4408;
	and.b64  	%rd4453, %rd4452, %rd4451;
	xor.b64  	%rd4454, %rd4453, %rd4432;
	add.s64 	%rd4455, %rd4444, %rd4454;
	add.s64 	%rd4456, %rd4455, %rd4450;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3912,%dummy}, %rd4445;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3913}, %rd4445;
	}
	shf.r.wrap.b32 	%r3914, %r3913, %r3912, 14;
	shf.r.wrap.b32 	%r3915, %r3912, %r3913, 14;
	mov.b64 	%rd4457, {%r3915, %r3914};
	shf.r.wrap.b32 	%r3916, %r3913, %r3912, 18;
	shf.r.wrap.b32 	%r3917, %r3912, %r3913, 18;
	mov.b64 	%rd4458, {%r3917, %r3916};
	xor.b64  	%rd4459, %rd4458, %rd4457;
	shf.l.wrap.b32 	%r3918, %r3912, %r3913, 23;
	shf.l.wrap.b32 	%r3919, %r3913, %r3912, 23;
	mov.b64 	%rd4460, {%r3919, %r3918};
	xor.b64  	%rd4461, %rd4459, %rd4460;
	xor.b64  	%rd4462, %rd4421, %rd4397;
	and.b64  	%rd4463, %rd4445, %rd4462;
	xor.b64  	%rd4464, %rd4463, %rd4397;
	add.s64 	%rd4465, %rd4373, %rd4206;
	add.s64 	%rd4466, %rd4465, %rd8816;
	add.s64 	%rd4467, %rd4466, %rd4464;
	add.s64 	%rd4468, %rd4467, %rd4461;
	add.s64 	%rd4469, %rd4468, %rd4384;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3920,%dummy}, %rd4456;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3921}, %rd4456;
	}
	shf.r.wrap.b32 	%r3922, %r3921, %r3920, 28;
	shf.r.wrap.b32 	%r3923, %r3920, %r3921, 28;
	mov.b64 	%rd4470, {%r3923, %r3922};
	shf.l.wrap.b32 	%r3924, %r3920, %r3921, 30;
	shf.l.wrap.b32 	%r3925, %r3921, %r3920, 30;
	mov.b64 	%rd4471, {%r3925, %r3924};
	xor.b64  	%rd4472, %rd4471, %rd4470;
	shf.l.wrap.b32 	%r3926, %r3920, %r3921, 25;
	shf.l.wrap.b32 	%r3927, %r3921, %r3920, 25;
	mov.b64 	%rd4473, {%r3927, %r3926};
	xor.b64  	%rd4474, %rd4472, %rd4473;
	xor.b64  	%rd4475, %rd4456, %rd4408;
	xor.b64  	%rd4476, %rd4456, %rd4432;
	and.b64  	%rd4477, %rd4476, %rd4475;
	xor.b64  	%rd4478, %rd4477, %rd4456;
	add.s64 	%rd4479, %rd4468, %rd4478;
	add.s64 	%rd4480, %rd4479, %rd4474;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3928,%dummy}, %rd4469;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3929}, %rd4469;
	}
	shf.r.wrap.b32 	%r3930, %r3929, %r3928, 14;
	shf.r.wrap.b32 	%r3931, %r3928, %r3929, 14;
	mov.b64 	%rd4481, {%r3931, %r3930};
	shf.r.wrap.b32 	%r3932, %r3929, %r3928, 18;
	shf.r.wrap.b32 	%r3933, %r3928, %r3929, 18;
	mov.b64 	%rd4482, {%r3933, %r3932};
	xor.b64  	%rd4483, %rd4482, %rd4481;
	shf.l.wrap.b32 	%r3934, %r3928, %r3929, 23;
	shf.l.wrap.b32 	%r3935, %r3929, %r3928, 23;
	mov.b64 	%rd4484, {%r3935, %r3934};
	xor.b64  	%rd4485, %rd4483, %rd4484;
	xor.b64  	%rd4486, %rd4445, %rd4421;
	and.b64  	%rd4487, %rd4469, %rd4486;
	xor.b64  	%rd4488, %rd4487, %rd4421;
	add.s64 	%rd4489, %rd4397, %rd4219;
	add.s64 	%rd4490, %rd4489, %rd8815;
	add.s64 	%rd4491, %rd4490, %rd4488;
	add.s64 	%rd4492, %rd4491, %rd4485;
	add.s64 	%rd4493, %rd4492, %rd4408;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3936,%dummy}, %rd4480;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3937}, %rd4480;
	}
	shf.r.wrap.b32 	%r3938, %r3937, %r3936, 28;
	shf.r.wrap.b32 	%r3939, %r3936, %r3937, 28;
	mov.b64 	%rd4494, {%r3939, %r3938};
	shf.l.wrap.b32 	%r3940, %r3936, %r3937, 30;
	shf.l.wrap.b32 	%r3941, %r3937, %r3936, 30;
	mov.b64 	%rd4495, {%r3941, %r3940};
	xor.b64  	%rd4496, %rd4495, %rd4494;
	shf.l.wrap.b32 	%r3942, %r3936, %r3937, 25;
	shf.l.wrap.b32 	%r3943, %r3937, %r3936, 25;
	mov.b64 	%rd4497, {%r3943, %r3942};
	xor.b64  	%rd4498, %rd4496, %rd4497;
	xor.b64  	%rd4499, %rd4480, %rd4432;
	xor.b64  	%rd4500, %rd4480, %rd4456;
	and.b64  	%rd4501, %rd4500, %rd4499;
	xor.b64  	%rd4502, %rd4501, %rd4480;
	add.s64 	%rd4503, %rd4492, %rd4502;
	add.s64 	%rd4504, %rd4503, %rd4498;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3944,%dummy}, %rd4493;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3945}, %rd4493;
	}
	shf.r.wrap.b32 	%r3946, %r3945, %r3944, 14;
	shf.r.wrap.b32 	%r3947, %r3944, %r3945, 14;
	mov.b64 	%rd4505, {%r3947, %r3946};
	shf.r.wrap.b32 	%r3948, %r3945, %r3944, 18;
	shf.r.wrap.b32 	%r3949, %r3944, %r3945, 18;
	mov.b64 	%rd4506, {%r3949, %r3948};
	xor.b64  	%rd4507, %rd4506, %rd4505;
	shf.l.wrap.b32 	%r3950, %r3944, %r3945, 23;
	shf.l.wrap.b32 	%r3951, %r3945, %r3944, 23;
	mov.b64 	%rd4508, {%r3951, %r3950};
	xor.b64  	%rd4509, %rd4507, %rd4508;
	xor.b64  	%rd4510, %rd4469, %rd4445;
	and.b64  	%rd4511, %rd4493, %rd4510;
	xor.b64  	%rd4512, %rd4511, %rd4445;
	add.s64 	%rd4513, %rd4421, %rd4232;
	add.s64 	%rd4514, %rd4513, %rd8814;
	add.s64 	%rd4515, %rd4514, %rd4512;
	add.s64 	%rd4516, %rd4515, %rd4509;
	add.s64 	%rd4517, %rd4516, %rd4432;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3952,%dummy}, %rd4504;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3953}, %rd4504;
	}
	shf.r.wrap.b32 	%r3954, %r3953, %r3952, 28;
	shf.r.wrap.b32 	%r3955, %r3952, %r3953, 28;
	mov.b64 	%rd4518, {%r3955, %r3954};
	shf.l.wrap.b32 	%r3956, %r3952, %r3953, 30;
	shf.l.wrap.b32 	%r3957, %r3953, %r3952, 30;
	mov.b64 	%rd4519, {%r3957, %r3956};
	xor.b64  	%rd4520, %rd4519, %rd4518;
	shf.l.wrap.b32 	%r3958, %r3952, %r3953, 25;
	shf.l.wrap.b32 	%r3959, %r3953, %r3952, 25;
	mov.b64 	%rd4521, {%r3959, %r3958};
	xor.b64  	%rd4522, %rd4520, %rd4521;
	xor.b64  	%rd4523, %rd4504, %rd4456;
	xor.b64  	%rd4524, %rd4504, %rd4480;
	and.b64  	%rd4525, %rd4524, %rd4523;
	xor.b64  	%rd4526, %rd4525, %rd4504;
	add.s64 	%rd4527, %rd4516, %rd4526;
	add.s64 	%rd4528, %rd4527, %rd4522;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3960,%dummy}, %rd4517;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3961}, %rd4517;
	}
	shf.r.wrap.b32 	%r3962, %r3961, %r3960, 14;
	shf.r.wrap.b32 	%r3963, %r3960, %r3961, 14;
	mov.b64 	%rd4529, {%r3963, %r3962};
	shf.r.wrap.b32 	%r3964, %r3961, %r3960, 18;
	shf.r.wrap.b32 	%r3965, %r3960, %r3961, 18;
	mov.b64 	%rd4530, {%r3965, %r3964};
	xor.b64  	%rd4531, %rd4530, %rd4529;
	shf.l.wrap.b32 	%r3966, %r3960, %r3961, 23;
	shf.l.wrap.b32 	%r3967, %r3961, %r3960, 23;
	mov.b64 	%rd4532, {%r3967, %r3966};
	xor.b64  	%rd4533, %rd4531, %rd4532;
	xor.b64  	%rd4534, %rd4493, %rd4469;
	and.b64  	%rd4535, %rd4517, %rd4534;
	xor.b64  	%rd4536, %rd4535, %rd4469;
	add.s64 	%rd4537, %rd4445, %rd4245;
	add.s64 	%rd4538, %rd4537, %rd8813;
	add.s64 	%rd4539, %rd4538, %rd4536;
	add.s64 	%rd4540, %rd4539, %rd4533;
	add.s64 	%rd4541, %rd4540, %rd4456;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3968,%dummy}, %rd4528;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3969}, %rd4528;
	}
	shf.r.wrap.b32 	%r3970, %r3969, %r3968, 28;
	shf.r.wrap.b32 	%r3971, %r3968, %r3969, 28;
	mov.b64 	%rd4542, {%r3971, %r3970};
	shf.l.wrap.b32 	%r3972, %r3968, %r3969, 30;
	shf.l.wrap.b32 	%r3973, %r3969, %r3968, 30;
	mov.b64 	%rd4543, {%r3973, %r3972};
	xor.b64  	%rd4544, %rd4543, %rd4542;
	shf.l.wrap.b32 	%r3974, %r3968, %r3969, 25;
	shf.l.wrap.b32 	%r3975, %r3969, %r3968, 25;
	mov.b64 	%rd4545, {%r3975, %r3974};
	xor.b64  	%rd4546, %rd4544, %rd4545;
	xor.b64  	%rd4547, %rd4528, %rd4480;
	xor.b64  	%rd4548, %rd4528, %rd4504;
	and.b64  	%rd4549, %rd4548, %rd4547;
	xor.b64  	%rd4550, %rd4549, %rd4528;
	add.s64 	%rd4551, %rd4540, %rd4550;
	add.s64 	%rd4552, %rd4551, %rd4546;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3976,%dummy}, %rd4541;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3977}, %rd4541;
	}
	shf.r.wrap.b32 	%r3978, %r3977, %r3976, 14;
	shf.r.wrap.b32 	%r3979, %r3976, %r3977, 14;
	mov.b64 	%rd4553, {%r3979, %r3978};
	shf.r.wrap.b32 	%r3980, %r3977, %r3976, 18;
	shf.r.wrap.b32 	%r3981, %r3976, %r3977, 18;
	mov.b64 	%rd4554, {%r3981, %r3980};
	xor.b64  	%rd4555, %rd4554, %rd4553;
	shf.l.wrap.b32 	%r3982, %r3976, %r3977, 23;
	shf.l.wrap.b32 	%r3983, %r3977, %r3976, 23;
	mov.b64 	%rd4556, {%r3983, %r3982};
	xor.b64  	%rd4557, %rd4555, %rd4556;
	xor.b64  	%rd4558, %rd4517, %rd4493;
	and.b64  	%rd4559, %rd4541, %rd4558;
	xor.b64  	%rd4560, %rd4559, %rd4493;
	add.s64 	%rd4561, %rd4469, %rd4258;
	add.s64 	%rd4562, %rd4561, %rd8812;
	add.s64 	%rd4563, %rd4562, %rd4560;
	add.s64 	%rd4564, %rd4563, %rd4557;
	add.s64 	%rd4565, %rd4564, %rd4480;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3984,%dummy}, %rd4552;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3985}, %rd4552;
	}
	shf.r.wrap.b32 	%r3986, %r3985, %r3984, 28;
	shf.r.wrap.b32 	%r3987, %r3984, %r3985, 28;
	mov.b64 	%rd4566, {%r3987, %r3986};
	shf.l.wrap.b32 	%r3988, %r3984, %r3985, 30;
	shf.l.wrap.b32 	%r3989, %r3985, %r3984, 30;
	mov.b64 	%rd4567, {%r3989, %r3988};
	xor.b64  	%rd4568, %rd4567, %rd4566;
	shf.l.wrap.b32 	%r3990, %r3984, %r3985, 25;
	shf.l.wrap.b32 	%r3991, %r3985, %r3984, 25;
	mov.b64 	%rd4569, {%r3991, %r3990};
	xor.b64  	%rd4570, %rd4568, %rd4569;
	xor.b64  	%rd4571, %rd4552, %rd4504;
	xor.b64  	%rd4572, %rd4552, %rd4528;
	and.b64  	%rd4573, %rd4572, %rd4571;
	xor.b64  	%rd4574, %rd4573, %rd4552;
	add.s64 	%rd4575, %rd4564, %rd4574;
	add.s64 	%rd4576, %rd4575, %rd4570;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3992,%dummy}, %rd4565;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3993}, %rd4565;
	}
	shf.r.wrap.b32 	%r3994, %r3993, %r3992, 14;
	shf.r.wrap.b32 	%r3995, %r3992, %r3993, 14;
	mov.b64 	%rd4577, {%r3995, %r3994};
	shf.r.wrap.b32 	%r3996, %r3993, %r3992, 18;
	shf.r.wrap.b32 	%r3997, %r3992, %r3993, 18;
	mov.b64 	%rd4578, {%r3997, %r3996};
	xor.b64  	%rd4579, %rd4578, %rd4577;
	shf.l.wrap.b32 	%r3998, %r3992, %r3993, 23;
	shf.l.wrap.b32 	%r3999, %r3993, %r3992, 23;
	mov.b64 	%rd4580, {%r3999, %r3998};
	xor.b64  	%rd4581, %rd4579, %rd4580;
	xor.b64  	%rd4582, %rd4541, %rd4517;
	and.b64  	%rd4583, %rd4565, %rd4582;
	xor.b64  	%rd4584, %rd4583, %rd4517;
	add.s64 	%rd4585, %rd4493, %rd4271;
	add.s64 	%rd4586, %rd4585, %rd8811;
	add.s64 	%rd4587, %rd4586, %rd4584;
	add.s64 	%rd4588, %rd4587, %rd4581;
	add.s64 	%rd4589, %rd4588, %rd4504;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4000,%dummy}, %rd4576;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4001}, %rd4576;
	}
	shf.r.wrap.b32 	%r4002, %r4001, %r4000, 28;
	shf.r.wrap.b32 	%r4003, %r4000, %r4001, 28;
	mov.b64 	%rd4590, {%r4003, %r4002};
	shf.l.wrap.b32 	%r4004, %r4000, %r4001, 30;
	shf.l.wrap.b32 	%r4005, %r4001, %r4000, 30;
	mov.b64 	%rd4591, {%r4005, %r4004};
	xor.b64  	%rd4592, %rd4591, %rd4590;
	shf.l.wrap.b32 	%r4006, %r4000, %r4001, 25;
	shf.l.wrap.b32 	%r4007, %r4001, %r4000, 25;
	mov.b64 	%rd4593, {%r4007, %r4006};
	xor.b64  	%rd4594, %rd4592, %rd4593;
	xor.b64  	%rd4595, %rd4576, %rd4528;
	xor.b64  	%rd4596, %rd4576, %rd4552;
	and.b64  	%rd4597, %rd4596, %rd4595;
	xor.b64  	%rd4598, %rd4597, %rd4576;
	add.s64 	%rd4599, %rd4588, %rd4598;
	add.s64 	%rd4600, %rd4599, %rd4594;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4008,%dummy}, %rd4589;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4009}, %rd4589;
	}
	shf.r.wrap.b32 	%r4010, %r4009, %r4008, 14;
	shf.r.wrap.b32 	%r4011, %r4008, %r4009, 14;
	mov.b64 	%rd4601, {%r4011, %r4010};
	shf.r.wrap.b32 	%r4012, %r4009, %r4008, 18;
	shf.r.wrap.b32 	%r4013, %r4008, %r4009, 18;
	mov.b64 	%rd4602, {%r4013, %r4012};
	xor.b64  	%rd4603, %rd4602, %rd4601;
	shf.l.wrap.b32 	%r4014, %r4008, %r4009, 23;
	shf.l.wrap.b32 	%r4015, %r4009, %r4008, 23;
	mov.b64 	%rd4604, {%r4015, %r4014};
	xor.b64  	%rd4605, %rd4603, %rd4604;
	xor.b64  	%rd4606, %rd4565, %rd4541;
	and.b64  	%rd4607, %rd4589, %rd4606;
	xor.b64  	%rd4608, %rd4607, %rd4541;
	add.s64 	%rd4609, %rd4517, %rd4284;
	add.s64 	%rd4610, %rd4609, %rd8810;
	add.s64 	%rd4611, %rd4610, %rd4608;
	add.s64 	%rd4612, %rd4611, %rd4605;
	add.s64 	%rd4613, %rd4612, %rd4528;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4016,%dummy}, %rd4600;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4017}, %rd4600;
	}
	shf.r.wrap.b32 	%r4018, %r4017, %r4016, 28;
	shf.r.wrap.b32 	%r4019, %r4016, %r4017, 28;
	mov.b64 	%rd4614, {%r4019, %r4018};
	shf.l.wrap.b32 	%r4020, %r4016, %r4017, 30;
	shf.l.wrap.b32 	%r4021, %r4017, %r4016, 30;
	mov.b64 	%rd4615, {%r4021, %r4020};
	xor.b64  	%rd4616, %rd4615, %rd4614;
	shf.l.wrap.b32 	%r4022, %r4016, %r4017, 25;
	shf.l.wrap.b32 	%r4023, %r4017, %r4016, 25;
	mov.b64 	%rd4617, {%r4023, %r4022};
	xor.b64  	%rd4618, %rd4616, %rd4617;
	xor.b64  	%rd4619, %rd4600, %rd4552;
	xor.b64  	%rd4620, %rd4600, %rd4576;
	and.b64  	%rd4621, %rd4620, %rd4619;
	xor.b64  	%rd4622, %rd4621, %rd4600;
	add.s64 	%rd4623, %rd4612, %rd4622;
	add.s64 	%rd4624, %rd4623, %rd4618;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4024,%dummy}, %rd4613;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4025}, %rd4613;
	}
	shf.r.wrap.b32 	%r4026, %r4025, %r4024, 14;
	shf.r.wrap.b32 	%r4027, %r4024, %r4025, 14;
	mov.b64 	%rd4625, {%r4027, %r4026};
	shf.r.wrap.b32 	%r4028, %r4025, %r4024, 18;
	shf.r.wrap.b32 	%r4029, %r4024, %r4025, 18;
	mov.b64 	%rd4626, {%r4029, %r4028};
	xor.b64  	%rd4627, %rd4626, %rd4625;
	shf.l.wrap.b32 	%r4030, %r4024, %r4025, 23;
	shf.l.wrap.b32 	%r4031, %r4025, %r4024, 23;
	mov.b64 	%rd4628, {%r4031, %r4030};
	xor.b64  	%rd4629, %rd4627, %rd4628;
	xor.b64  	%rd4630, %rd4589, %rd4565;
	and.b64  	%rd4631, %rd4613, %rd4630;
	xor.b64  	%rd4632, %rd4631, %rd4565;
	add.s64 	%rd4633, %rd4541, %rd4297;
	add.s64 	%rd4634, %rd4633, %rd8809;
	add.s64 	%rd4635, %rd4634, %rd4632;
	add.s64 	%rd4636, %rd4635, %rd4629;
	add.s64 	%rd4637, %rd4636, %rd4552;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4032,%dummy}, %rd4624;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4033}, %rd4624;
	}
	shf.r.wrap.b32 	%r4034, %r4033, %r4032, 28;
	shf.r.wrap.b32 	%r4035, %r4032, %r4033, 28;
	mov.b64 	%rd4638, {%r4035, %r4034};
	shf.l.wrap.b32 	%r4036, %r4032, %r4033, 30;
	shf.l.wrap.b32 	%r4037, %r4033, %r4032, 30;
	mov.b64 	%rd4639, {%r4037, %r4036};
	xor.b64  	%rd4640, %rd4639, %rd4638;
	shf.l.wrap.b32 	%r4038, %r4032, %r4033, 25;
	shf.l.wrap.b32 	%r4039, %r4033, %r4032, 25;
	mov.b64 	%rd4641, {%r4039, %r4038};
	xor.b64  	%rd4642, %rd4640, %rd4641;
	xor.b64  	%rd4643, %rd4624, %rd4576;
	xor.b64  	%rd4644, %rd4624, %rd4600;
	and.b64  	%rd4645, %rd4644, %rd4643;
	xor.b64  	%rd4646, %rd4645, %rd4624;
	add.s64 	%rd4647, %rd4636, %rd4646;
	add.s64 	%rd4648, %rd4647, %rd4642;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4040,%dummy}, %rd4637;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4041}, %rd4637;
	}
	shf.r.wrap.b32 	%r4042, %r4041, %r4040, 14;
	shf.r.wrap.b32 	%r4043, %r4040, %r4041, 14;
	mov.b64 	%rd4649, {%r4043, %r4042};
	shf.r.wrap.b32 	%r4044, %r4041, %r4040, 18;
	shf.r.wrap.b32 	%r4045, %r4040, %r4041, 18;
	mov.b64 	%rd4650, {%r4045, %r4044};
	xor.b64  	%rd4651, %rd4650, %rd4649;
	shf.l.wrap.b32 	%r4046, %r4040, %r4041, 23;
	shf.l.wrap.b32 	%r4047, %r4041, %r4040, 23;
	mov.b64 	%rd4652, {%r4047, %r4046};
	xor.b64  	%rd4653, %rd4651, %rd4652;
	xor.b64  	%rd4654, %rd4613, %rd4589;
	and.b64  	%rd4655, %rd4637, %rd4654;
	xor.b64  	%rd4656, %rd4655, %rd4589;
	add.s64 	%rd4657, %rd4565, %rd4310;
	add.s64 	%rd4658, %rd4657, %rd8808;
	add.s64 	%rd4659, %rd4658, %rd4656;
	add.s64 	%rd4660, %rd4659, %rd4653;
	add.s64 	%rd4661, %rd4660, %rd4576;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4048,%dummy}, %rd4648;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4049}, %rd4648;
	}
	shf.r.wrap.b32 	%r4050, %r4049, %r4048, 28;
	shf.r.wrap.b32 	%r4051, %r4048, %r4049, 28;
	mov.b64 	%rd4662, {%r4051, %r4050};
	shf.l.wrap.b32 	%r4052, %r4048, %r4049, 30;
	shf.l.wrap.b32 	%r4053, %r4049, %r4048, 30;
	mov.b64 	%rd4663, {%r4053, %r4052};
	xor.b64  	%rd4664, %rd4663, %rd4662;
	shf.l.wrap.b32 	%r4054, %r4048, %r4049, 25;
	shf.l.wrap.b32 	%r4055, %r4049, %r4048, 25;
	mov.b64 	%rd4665, {%r4055, %r4054};
	xor.b64  	%rd4666, %rd4664, %rd4665;
	xor.b64  	%rd4667, %rd4648, %rd4600;
	xor.b64  	%rd4668, %rd4648, %rd4624;
	and.b64  	%rd4669, %rd4668, %rd4667;
	xor.b64  	%rd4670, %rd4669, %rd4648;
	add.s64 	%rd4671, %rd4660, %rd4670;
	add.s64 	%rd4672, %rd4671, %rd4666;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4056,%dummy}, %rd4661;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4057}, %rd4661;
	}
	shf.r.wrap.b32 	%r4058, %r4057, %r4056, 14;
	shf.r.wrap.b32 	%r4059, %r4056, %r4057, 14;
	mov.b64 	%rd4673, {%r4059, %r4058};
	shf.r.wrap.b32 	%r4060, %r4057, %r4056, 18;
	shf.r.wrap.b32 	%r4061, %r4056, %r4057, 18;
	mov.b64 	%rd4674, {%r4061, %r4060};
	xor.b64  	%rd4675, %rd4674, %rd4673;
	shf.l.wrap.b32 	%r4062, %r4056, %r4057, 23;
	shf.l.wrap.b32 	%r4063, %r4057, %r4056, 23;
	mov.b64 	%rd4676, {%r4063, %r4062};
	xor.b64  	%rd4677, %rd4675, %rd4676;
	xor.b64  	%rd4678, %rd4637, %rd4613;
	and.b64  	%rd4679, %rd4661, %rd4678;
	xor.b64  	%rd4680, %rd4679, %rd4613;
	add.s64 	%rd4681, %rd4589, %rd4323;
	add.s64 	%rd4682, %rd4681, %rd8807;
	add.s64 	%rd4683, %rd4682, %rd4680;
	add.s64 	%rd4684, %rd4683, %rd4677;
	add.s64 	%rd4685, %rd4684, %rd4600;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4064,%dummy}, %rd4672;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4065}, %rd4672;
	}
	shf.r.wrap.b32 	%r4066, %r4065, %r4064, 28;
	shf.r.wrap.b32 	%r4067, %r4064, %r4065, 28;
	mov.b64 	%rd4686, {%r4067, %r4066};
	shf.l.wrap.b32 	%r4068, %r4064, %r4065, 30;
	shf.l.wrap.b32 	%r4069, %r4065, %r4064, 30;
	mov.b64 	%rd4687, {%r4069, %r4068};
	xor.b64  	%rd4688, %rd4687, %rd4686;
	shf.l.wrap.b32 	%r4070, %r4064, %r4065, 25;
	shf.l.wrap.b32 	%r4071, %r4065, %r4064, 25;
	mov.b64 	%rd4689, {%r4071, %r4070};
	xor.b64  	%rd4690, %rd4688, %rd4689;
	xor.b64  	%rd4691, %rd4672, %rd4624;
	xor.b64  	%rd4692, %rd4672, %rd4648;
	and.b64  	%rd4693, %rd4692, %rd4691;
	xor.b64  	%rd4694, %rd4693, %rd4672;
	add.s64 	%rd4695, %rd4684, %rd4694;
	add.s64 	%rd4696, %rd4695, %rd4690;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4072,%dummy}, %rd4685;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4073}, %rd4685;
	}
	shf.r.wrap.b32 	%r4074, %r4073, %r4072, 14;
	shf.r.wrap.b32 	%r4075, %r4072, %r4073, 14;
	mov.b64 	%rd4697, {%r4075, %r4074};
	shf.r.wrap.b32 	%r4076, %r4073, %r4072, 18;
	shf.r.wrap.b32 	%r4077, %r4072, %r4073, 18;
	mov.b64 	%rd4698, {%r4077, %r4076};
	xor.b64  	%rd4699, %rd4698, %rd4697;
	shf.l.wrap.b32 	%r4078, %r4072, %r4073, 23;
	shf.l.wrap.b32 	%r4079, %r4073, %r4072, 23;
	mov.b64 	%rd4700, {%r4079, %r4078};
	xor.b64  	%rd4701, %rd4699, %rd4700;
	xor.b64  	%rd4702, %rd4661, %rd4637;
	and.b64  	%rd4703, %rd4685, %rd4702;
	xor.b64  	%rd4704, %rd4703, %rd4637;
	add.s64 	%rd4705, %rd4613, %rd4336;
	add.s64 	%rd4706, %rd4705, %rd8806;
	add.s64 	%rd4707, %rd4706, %rd4704;
	add.s64 	%rd4708, %rd4707, %rd4701;
	add.s64 	%rd4709, %rd4708, %rd4624;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4080,%dummy}, %rd4696;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4081}, %rd4696;
	}
	shf.r.wrap.b32 	%r4082, %r4081, %r4080, 28;
	shf.r.wrap.b32 	%r4083, %r4080, %r4081, 28;
	mov.b64 	%rd4710, {%r4083, %r4082};
	shf.l.wrap.b32 	%r4084, %r4080, %r4081, 30;
	shf.l.wrap.b32 	%r4085, %r4081, %r4080, 30;
	mov.b64 	%rd4711, {%r4085, %r4084};
	xor.b64  	%rd4712, %rd4711, %rd4710;
	shf.l.wrap.b32 	%r4086, %r4080, %r4081, 25;
	shf.l.wrap.b32 	%r4087, %r4081, %r4080, 25;
	mov.b64 	%rd4713, {%r4087, %r4086};
	xor.b64  	%rd4714, %rd4712, %rd4713;
	xor.b64  	%rd4715, %rd4696, %rd4648;
	xor.b64  	%rd4716, %rd4696, %rd4672;
	and.b64  	%rd4717, %rd4716, %rd4715;
	xor.b64  	%rd4718, %rd4717, %rd4696;
	add.s64 	%rd4719, %rd4708, %rd4718;
	add.s64 	%rd4720, %rd4719, %rd4714;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4088,%dummy}, %rd4323;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4089}, %rd4323;
	}
	shf.r.wrap.b32 	%r4090, %r4089, %r4088, 19;
	shf.r.wrap.b32 	%r4091, %r4088, %r4089, 19;
	mov.b64 	%rd4721, {%r4091, %r4090};
	shf.l.wrap.b32 	%r4092, %r4088, %r4089, 3;
	shf.l.wrap.b32 	%r4093, %r4089, %r4088, 3;
	mov.b64 	%rd4722, {%r4093, %r4092};
	shr.u64 	%rd4723, %rd4323, 6;
	xor.b64  	%rd4724, %rd4721, %rd4723;
	xor.b64  	%rd4725, %rd4724, %rd4722;
	shf.r.wrap.b32 	%r4094, %r3703, %r3702, 1;
	shf.r.wrap.b32 	%r4095, %r3702, %r3703, 1;
	mov.b64 	%rd4726, {%r4095, %r4094};
	shf.r.wrap.b32 	%r4096, %r3703, %r3702, 8;
	shf.r.wrap.b32 	%r4097, %r3702, %r3703, 8;
	mov.b64 	%rd4727, {%r4097, %r4096};
	shr.u64 	%rd4728, %rd4154, 7;
	xor.b64  	%rd4729, %rd4726, %rd4728;
	xor.b64  	%rd4730, %rd4729, %rd4727;
	add.s64 	%rd4731, %rd4258, %rd4141;
	add.s64 	%rd4732, %rd4731, %rd4725;
	add.s64 	%rd4733, %rd4732, %rd4730;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4098,%dummy}, %rd4336;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4099}, %rd4336;
	}
	shf.r.wrap.b32 	%r4100, %r4099, %r4098, 19;
	shf.r.wrap.b32 	%r4101, %r4098, %r4099, 19;
	mov.b64 	%rd4734, {%r4101, %r4100};
	shf.l.wrap.b32 	%r4102, %r4098, %r4099, 3;
	shf.l.wrap.b32 	%r4103, %r4099, %r4098, 3;
	mov.b64 	%rd4735, {%r4103, %r4102};
	shr.u64 	%rd4736, %rd4336, 6;
	xor.b64  	%rd4737, %rd4734, %rd4736;
	xor.b64  	%rd4738, %rd4737, %rd4735;
	shf.r.wrap.b32 	%r4104, %r3713, %r3712, 1;
	shf.r.wrap.b32 	%r4105, %r3712, %r3713, 1;
	mov.b64 	%rd4739, {%r4105, %r4104};
	shf.r.wrap.b32 	%r4106, %r3713, %r3712, 8;
	shf.r.wrap.b32 	%r4107, %r3712, %r3713, 8;
	mov.b64 	%rd4740, {%r4107, %r4106};
	shr.u64 	%rd4741, %rd4167, 7;
	xor.b64  	%rd4742, %rd4739, %rd4741;
	xor.b64  	%rd4743, %rd4742, %rd4740;
	add.s64 	%rd4744, %rd4271, %rd4154;
	add.s64 	%rd4745, %rd4744, %rd4738;
	add.s64 	%rd4746, %rd4745, %rd4743;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4108,%dummy}, %rd4733;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4109}, %rd4733;
	}
	shf.r.wrap.b32 	%r4110, %r4109, %r4108, 19;
	shf.r.wrap.b32 	%r4111, %r4108, %r4109, 19;
	mov.b64 	%rd4747, {%r4111, %r4110};
	shf.l.wrap.b32 	%r4112, %r4108, %r4109, 3;
	shf.l.wrap.b32 	%r4113, %r4109, %r4108, 3;
	mov.b64 	%rd4748, {%r4113, %r4112};
	shr.u64 	%rd4749, %rd4733, 6;
	xor.b64  	%rd4750, %rd4747, %rd4749;
	xor.b64  	%rd4751, %rd4750, %rd4748;
	shf.r.wrap.b32 	%r4114, %r3723, %r3722, 1;
	shf.r.wrap.b32 	%r4115, %r3722, %r3723, 1;
	mov.b64 	%rd4752, {%r4115, %r4114};
	shf.r.wrap.b32 	%r4116, %r3723, %r3722, 8;
	shf.r.wrap.b32 	%r4117, %r3722, %r3723, 8;
	mov.b64 	%rd4753, {%r4117, %r4116};
	shr.u64 	%rd4754, %rd4180, 7;
	xor.b64  	%rd4755, %rd4752, %rd4754;
	xor.b64  	%rd4756, %rd4755, %rd4753;
	add.s64 	%rd4757, %rd4284, %rd4167;
	add.s64 	%rd4758, %rd4757, %rd4751;
	add.s64 	%rd4759, %rd4758, %rd4756;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4118,%dummy}, %rd4746;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4119}, %rd4746;
	}
	shf.r.wrap.b32 	%r4120, %r4119, %r4118, 19;
	shf.r.wrap.b32 	%r4121, %r4118, %r4119, 19;
	mov.b64 	%rd4760, {%r4121, %r4120};
	shf.l.wrap.b32 	%r4122, %r4118, %r4119, 3;
	shf.l.wrap.b32 	%r4123, %r4119, %r4118, 3;
	mov.b64 	%rd4761, {%r4123, %r4122};
	shr.u64 	%rd4762, %rd4746, 6;
	xor.b64  	%rd4763, %rd4760, %rd4762;
	xor.b64  	%rd4764, %rd4763, %rd4761;
	shf.r.wrap.b32 	%r4124, %r3733, %r3732, 1;
	shf.r.wrap.b32 	%r4125, %r3732, %r3733, 1;
	mov.b64 	%rd4765, {%r4125, %r4124};
	shf.r.wrap.b32 	%r4126, %r3733, %r3732, 8;
	shf.r.wrap.b32 	%r4127, %r3732, %r3733, 8;
	mov.b64 	%rd4766, {%r4127, %r4126};
	shr.u64 	%rd4767, %rd4193, 7;
	xor.b64  	%rd4768, %rd4765, %rd4767;
	xor.b64  	%rd4769, %rd4768, %rd4766;
	add.s64 	%rd4770, %rd4297, %rd4180;
	add.s64 	%rd4771, %rd4770, %rd4764;
	add.s64 	%rd4772, %rd4771, %rd4769;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4128,%dummy}, %rd4759;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4129}, %rd4759;
	}
	shf.r.wrap.b32 	%r4130, %r4129, %r4128, 19;
	shf.r.wrap.b32 	%r4131, %r4128, %r4129, 19;
	mov.b64 	%rd4773, {%r4131, %r4130};
	shf.l.wrap.b32 	%r4132, %r4128, %r4129, 3;
	shf.l.wrap.b32 	%r4133, %r4129, %r4128, 3;
	mov.b64 	%rd4774, {%r4133, %r4132};
	shr.u64 	%rd4775, %rd4759, 6;
	xor.b64  	%rd4776, %rd4773, %rd4775;
	xor.b64  	%rd4777, %rd4776, %rd4774;
	shf.r.wrap.b32 	%r4134, %r3743, %r3742, 1;
	shf.r.wrap.b32 	%r4135, %r3742, %r3743, 1;
	mov.b64 	%rd4778, {%r4135, %r4134};
	shf.r.wrap.b32 	%r4136, %r3743, %r3742, 8;
	shf.r.wrap.b32 	%r4137, %r3742, %r3743, 8;
	mov.b64 	%rd4779, {%r4137, %r4136};
	shr.u64 	%rd4780, %rd4206, 7;
	xor.b64  	%rd4781, %rd4778, %rd4780;
	xor.b64  	%rd4782, %rd4781, %rd4779;
	add.s64 	%rd4783, %rd4310, %rd4193;
	add.s64 	%rd4784, %rd4783, %rd4777;
	add.s64 	%rd4785, %rd4784, %rd4782;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4138,%dummy}, %rd4772;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4139}, %rd4772;
	}
	shf.r.wrap.b32 	%r4140, %r4139, %r4138, 19;
	shf.r.wrap.b32 	%r4141, %r4138, %r4139, 19;
	mov.b64 	%rd4786, {%r4141, %r4140};
	shf.l.wrap.b32 	%r4142, %r4138, %r4139, 3;
	shf.l.wrap.b32 	%r4143, %r4139, %r4138, 3;
	mov.b64 	%rd4787, {%r4143, %r4142};
	shr.u64 	%rd4788, %rd4772, 6;
	xor.b64  	%rd4789, %rd4786, %rd4788;
	xor.b64  	%rd4790, %rd4789, %rd4787;
	shf.r.wrap.b32 	%r4144, %r3753, %r3752, 1;
	shf.r.wrap.b32 	%r4145, %r3752, %r3753, 1;
	mov.b64 	%rd4791, {%r4145, %r4144};
	shf.r.wrap.b32 	%r4146, %r3753, %r3752, 8;
	shf.r.wrap.b32 	%r4147, %r3752, %r3753, 8;
	mov.b64 	%rd4792, {%r4147, %r4146};
	shr.u64 	%rd4793, %rd4219, 7;
	xor.b64  	%rd4794, %rd4791, %rd4793;
	xor.b64  	%rd4795, %rd4794, %rd4792;
	add.s64 	%rd4796, %rd4323, %rd4206;
	add.s64 	%rd4797, %rd4796, %rd4790;
	add.s64 	%rd4798, %rd4797, %rd4795;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4148,%dummy}, %rd4785;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4149}, %rd4785;
	}
	shf.r.wrap.b32 	%r4150, %r4149, %r4148, 19;
	shf.r.wrap.b32 	%r4151, %r4148, %r4149, 19;
	mov.b64 	%rd4799, {%r4151, %r4150};
	shf.l.wrap.b32 	%r4152, %r4148, %r4149, 3;
	shf.l.wrap.b32 	%r4153, %r4149, %r4148, 3;
	mov.b64 	%rd4800, {%r4153, %r4152};
	shr.u64 	%rd4801, %rd4785, 6;
	xor.b64  	%rd4802, %rd4799, %rd4801;
	xor.b64  	%rd4803, %rd4802, %rd4800;
	shf.r.wrap.b32 	%r4154, %r3763, %r3762, 1;
	shf.r.wrap.b32 	%r4155, %r3762, %r3763, 1;
	mov.b64 	%rd4804, {%r4155, %r4154};
	shf.r.wrap.b32 	%r4156, %r3763, %r3762, 8;
	shf.r.wrap.b32 	%r4157, %r3762, %r3763, 8;
	mov.b64 	%rd4805, {%r4157, %r4156};
	shr.u64 	%rd4806, %rd4232, 7;
	xor.b64  	%rd4807, %rd4804, %rd4806;
	xor.b64  	%rd4808, %rd4807, %rd4805;
	add.s64 	%rd4809, %rd4336, %rd4219;
	add.s64 	%rd4810, %rd4809, %rd4803;
	add.s64 	%rd4811, %rd4810, %rd4808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4158,%dummy}, %rd4798;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4159}, %rd4798;
	}
	shf.r.wrap.b32 	%r4160, %r4159, %r4158, 19;
	shf.r.wrap.b32 	%r4161, %r4158, %r4159, 19;
	mov.b64 	%rd4812, {%r4161, %r4160};
	shf.l.wrap.b32 	%r4162, %r4158, %r4159, 3;
	shf.l.wrap.b32 	%r4163, %r4159, %r4158, 3;
	mov.b64 	%rd4813, {%r4163, %r4162};
	shr.u64 	%rd4814, %rd4798, 6;
	xor.b64  	%rd4815, %rd4812, %rd4814;
	xor.b64  	%rd4816, %rd4815, %rd4813;
	shf.r.wrap.b32 	%r4164, %r3773, %r3772, 1;
	shf.r.wrap.b32 	%r4165, %r3772, %r3773, 1;
	mov.b64 	%rd4817, {%r4165, %r4164};
	shf.r.wrap.b32 	%r4166, %r3773, %r3772, 8;
	shf.r.wrap.b32 	%r4167, %r3772, %r3773, 8;
	mov.b64 	%rd4818, {%r4167, %r4166};
	shr.u64 	%rd4819, %rd4245, 7;
	xor.b64  	%rd4820, %rd4817, %rd4819;
	xor.b64  	%rd4821, %rd4820, %rd4818;
	add.s64 	%rd4822, %rd4733, %rd4232;
	add.s64 	%rd4823, %rd4822, %rd4816;
	add.s64 	%rd4824, %rd4823, %rd4821;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4168,%dummy}, %rd4811;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4169}, %rd4811;
	}
	shf.r.wrap.b32 	%r4170, %r4169, %r4168, 19;
	shf.r.wrap.b32 	%r4171, %r4168, %r4169, 19;
	mov.b64 	%rd4825, {%r4171, %r4170};
	shf.l.wrap.b32 	%r4172, %r4168, %r4169, 3;
	shf.l.wrap.b32 	%r4173, %r4169, %r4168, 3;
	mov.b64 	%rd4826, {%r4173, %r4172};
	shr.u64 	%rd4827, %rd4811, 6;
	xor.b64  	%rd4828, %rd4825, %rd4827;
	xor.b64  	%rd4829, %rd4828, %rd4826;
	shf.r.wrap.b32 	%r4174, %r3783, %r3782, 1;
	shf.r.wrap.b32 	%r4175, %r3782, %r3783, 1;
	mov.b64 	%rd4830, {%r4175, %r4174};
	shf.r.wrap.b32 	%r4176, %r3783, %r3782, 8;
	shf.r.wrap.b32 	%r4177, %r3782, %r3783, 8;
	mov.b64 	%rd4831, {%r4177, %r4176};
	shr.u64 	%rd4832, %rd4258, 7;
	xor.b64  	%rd4833, %rd4830, %rd4832;
	xor.b64  	%rd4834, %rd4833, %rd4831;
	add.s64 	%rd4835, %rd4746, %rd4245;
	add.s64 	%rd4836, %rd4835, %rd4829;
	add.s64 	%rd4837, %rd4836, %rd4834;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4178,%dummy}, %rd4824;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4179}, %rd4824;
	}
	shf.r.wrap.b32 	%r4180, %r4179, %r4178, 19;
	shf.r.wrap.b32 	%r4181, %r4178, %r4179, 19;
	mov.b64 	%rd4838, {%r4181, %r4180};
	shf.l.wrap.b32 	%r4182, %r4178, %r4179, 3;
	shf.l.wrap.b32 	%r4183, %r4179, %r4178, 3;
	mov.b64 	%rd4839, {%r4183, %r4182};
	shr.u64 	%rd4840, %rd4824, 6;
	xor.b64  	%rd4841, %rd4838, %rd4840;
	xor.b64  	%rd4842, %rd4841, %rd4839;
	shf.r.wrap.b32 	%r4184, %r3793, %r3792, 1;
	shf.r.wrap.b32 	%r4185, %r3792, %r3793, 1;
	mov.b64 	%rd4843, {%r4185, %r4184};
	shf.r.wrap.b32 	%r4186, %r3793, %r3792, 8;
	shf.r.wrap.b32 	%r4187, %r3792, %r3793, 8;
	mov.b64 	%rd4844, {%r4187, %r4186};
	shr.u64 	%rd4845, %rd4271, 7;
	xor.b64  	%rd4846, %rd4843, %rd4845;
	xor.b64  	%rd4847, %rd4846, %rd4844;
	add.s64 	%rd4848, %rd4759, %rd4258;
	add.s64 	%rd4849, %rd4848, %rd4842;
	add.s64 	%rd4850, %rd4849, %rd4847;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4188,%dummy}, %rd4837;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4189}, %rd4837;
	}
	shf.r.wrap.b32 	%r4190, %r4189, %r4188, 19;
	shf.r.wrap.b32 	%r4191, %r4188, %r4189, 19;
	mov.b64 	%rd4851, {%r4191, %r4190};
	shf.l.wrap.b32 	%r4192, %r4188, %r4189, 3;
	shf.l.wrap.b32 	%r4193, %r4189, %r4188, 3;
	mov.b64 	%rd4852, {%r4193, %r4192};
	shr.u64 	%rd4853, %rd4837, 6;
	xor.b64  	%rd4854, %rd4851, %rd4853;
	xor.b64  	%rd4855, %rd4854, %rd4852;
	shf.r.wrap.b32 	%r4194, %r3803, %r3802, 1;
	shf.r.wrap.b32 	%r4195, %r3802, %r3803, 1;
	mov.b64 	%rd4856, {%r4195, %r4194};
	shf.r.wrap.b32 	%r4196, %r3803, %r3802, 8;
	shf.r.wrap.b32 	%r4197, %r3802, %r3803, 8;
	mov.b64 	%rd4857, {%r4197, %r4196};
	shr.u64 	%rd4858, %rd4284, 7;
	xor.b64  	%rd4859, %rd4856, %rd4858;
	xor.b64  	%rd4860, %rd4859, %rd4857;
	add.s64 	%rd4861, %rd4772, %rd4271;
	add.s64 	%rd4862, %rd4861, %rd4855;
	add.s64 	%rd4863, %rd4862, %rd4860;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4198,%dummy}, %rd4850;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4199}, %rd4850;
	}
	shf.r.wrap.b32 	%r4200, %r4199, %r4198, 19;
	shf.r.wrap.b32 	%r4201, %r4198, %r4199, 19;
	mov.b64 	%rd4864, {%r4201, %r4200};
	shf.l.wrap.b32 	%r4202, %r4198, %r4199, 3;
	shf.l.wrap.b32 	%r4203, %r4199, %r4198, 3;
	mov.b64 	%rd4865, {%r4203, %r4202};
	shr.u64 	%rd4866, %rd4850, 6;
	xor.b64  	%rd4867, %rd4864, %rd4866;
	xor.b64  	%rd4868, %rd4867, %rd4865;
	shf.r.wrap.b32 	%r4204, %r3813, %r3812, 1;
	shf.r.wrap.b32 	%r4205, %r3812, %r3813, 1;
	mov.b64 	%rd4869, {%r4205, %r4204};
	shf.r.wrap.b32 	%r4206, %r3813, %r3812, 8;
	shf.r.wrap.b32 	%r4207, %r3812, %r3813, 8;
	mov.b64 	%rd4870, {%r4207, %r4206};
	shr.u64 	%rd4871, %rd4297, 7;
	xor.b64  	%rd4872, %rd4869, %rd4871;
	xor.b64  	%rd4873, %rd4872, %rd4870;
	add.s64 	%rd4874, %rd4785, %rd4284;
	add.s64 	%rd4875, %rd4874, %rd4868;
	add.s64 	%rd4876, %rd4875, %rd4873;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4208,%dummy}, %rd4863;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4209}, %rd4863;
	}
	shf.r.wrap.b32 	%r4210, %r4209, %r4208, 19;
	shf.r.wrap.b32 	%r4211, %r4208, %r4209, 19;
	mov.b64 	%rd4877, {%r4211, %r4210};
	shf.l.wrap.b32 	%r4212, %r4208, %r4209, 3;
	shf.l.wrap.b32 	%r4213, %r4209, %r4208, 3;
	mov.b64 	%rd4878, {%r4213, %r4212};
	shr.u64 	%rd4879, %rd4863, 6;
	xor.b64  	%rd4880, %rd4877, %rd4879;
	xor.b64  	%rd4881, %rd4880, %rd4878;
	shf.r.wrap.b32 	%r4214, %r3823, %r3822, 1;
	shf.r.wrap.b32 	%r4215, %r3822, %r3823, 1;
	mov.b64 	%rd4882, {%r4215, %r4214};
	shf.r.wrap.b32 	%r4216, %r3823, %r3822, 8;
	shf.r.wrap.b32 	%r4217, %r3822, %r3823, 8;
	mov.b64 	%rd4883, {%r4217, %r4216};
	shr.u64 	%rd4884, %rd4310, 7;
	xor.b64  	%rd4885, %rd4882, %rd4884;
	xor.b64  	%rd4886, %rd4885, %rd4883;
	add.s64 	%rd4887, %rd4798, %rd4297;
	add.s64 	%rd4888, %rd4887, %rd4881;
	add.s64 	%rd4889, %rd4888, %rd4886;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4218,%dummy}, %rd4876;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4219}, %rd4876;
	}
	shf.r.wrap.b32 	%r4220, %r4219, %r4218, 19;
	shf.r.wrap.b32 	%r4221, %r4218, %r4219, 19;
	mov.b64 	%rd4890, {%r4221, %r4220};
	shf.l.wrap.b32 	%r4222, %r4218, %r4219, 3;
	shf.l.wrap.b32 	%r4223, %r4219, %r4218, 3;
	mov.b64 	%rd4891, {%r4223, %r4222};
	shr.u64 	%rd4892, %rd4876, 6;
	xor.b64  	%rd4893, %rd4890, %rd4892;
	xor.b64  	%rd4894, %rd4893, %rd4891;
	shf.r.wrap.b32 	%r4224, %r4089, %r4088, 1;
	shf.r.wrap.b32 	%r4225, %r4088, %r4089, 1;
	mov.b64 	%rd4895, {%r4225, %r4224};
	shf.r.wrap.b32 	%r4226, %r4089, %r4088, 8;
	shf.r.wrap.b32 	%r4227, %r4088, %r4089, 8;
	mov.b64 	%rd4896, {%r4227, %r4226};
	shr.u64 	%rd4897, %rd4323, 7;
	xor.b64  	%rd4898, %rd4895, %rd4897;
	xor.b64  	%rd4899, %rd4898, %rd4896;
	add.s64 	%rd4900, %rd4811, %rd4310;
	add.s64 	%rd4901, %rd4900, %rd4894;
	add.s64 	%rd4902, %rd4901, %rd4899;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4228,%dummy}, %rd4889;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4229}, %rd4889;
	}
	shf.r.wrap.b32 	%r4230, %r4229, %r4228, 19;
	shf.r.wrap.b32 	%r4231, %r4228, %r4229, 19;
	mov.b64 	%rd4903, {%r4231, %r4230};
	shf.l.wrap.b32 	%r4232, %r4228, %r4229, 3;
	shf.l.wrap.b32 	%r4233, %r4229, %r4228, 3;
	mov.b64 	%rd4904, {%r4233, %r4232};
	shr.u64 	%rd4905, %rd4889, 6;
	xor.b64  	%rd4906, %rd4903, %rd4905;
	xor.b64  	%rd4907, %rd4906, %rd4904;
	shf.r.wrap.b32 	%r4234, %r4099, %r4098, 1;
	shf.r.wrap.b32 	%r4235, %r4098, %r4099, 1;
	mov.b64 	%rd4908, {%r4235, %r4234};
	shf.r.wrap.b32 	%r4236, %r4099, %r4098, 8;
	shf.r.wrap.b32 	%r4237, %r4098, %r4099, 8;
	mov.b64 	%rd4909, {%r4237, %r4236};
	shr.u64 	%rd4910, %rd4336, 7;
	xor.b64  	%rd4911, %rd4908, %rd4910;
	xor.b64  	%rd4912, %rd4911, %rd4909;
	add.s64 	%rd4913, %rd4824, %rd4323;
	add.s64 	%rd4914, %rd4913, %rd4907;
	add.s64 	%rd4915, %rd4914, %rd4912;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4238,%dummy}, %rd4902;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4239}, %rd4902;
	}
	shf.r.wrap.b32 	%r4240, %r4239, %r4238, 19;
	shf.r.wrap.b32 	%r4241, %r4238, %r4239, 19;
	mov.b64 	%rd4916, {%r4241, %r4240};
	shf.l.wrap.b32 	%r4242, %r4238, %r4239, 3;
	shf.l.wrap.b32 	%r4243, %r4239, %r4238, 3;
	mov.b64 	%rd4917, {%r4243, %r4242};
	shr.u64 	%rd4918, %rd4902, 6;
	xor.b64  	%rd4919, %rd4916, %rd4918;
	xor.b64  	%rd4920, %rd4919, %rd4917;
	shf.r.wrap.b32 	%r4244, %r4109, %r4108, 1;
	shf.r.wrap.b32 	%r4245, %r4108, %r4109, 1;
	mov.b64 	%rd4921, {%r4245, %r4244};
	shf.r.wrap.b32 	%r4246, %r4109, %r4108, 8;
	shf.r.wrap.b32 	%r4247, %r4108, %r4109, 8;
	mov.b64 	%rd4922, {%r4247, %r4246};
	shr.u64 	%rd4923, %rd4733, 7;
	xor.b64  	%rd4924, %rd4921, %rd4923;
	xor.b64  	%rd4925, %rd4924, %rd4922;
	add.s64 	%rd4926, %rd4837, %rd4336;
	add.s64 	%rd4927, %rd4926, %rd4920;
	add.s64 	%rd4928, %rd4927, %rd4925;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4248,%dummy}, %rd4709;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4249}, %rd4709;
	}
	shf.r.wrap.b32 	%r4250, %r4249, %r4248, 14;
	shf.r.wrap.b32 	%r4251, %r4248, %r4249, 14;
	mov.b64 	%rd4929, {%r4251, %r4250};
	shf.r.wrap.b32 	%r4252, %r4249, %r4248, 18;
	shf.r.wrap.b32 	%r4253, %r4248, %r4249, 18;
	mov.b64 	%rd4930, {%r4253, %r4252};
	xor.b64  	%rd4931, %rd4930, %rd4929;
	shf.l.wrap.b32 	%r4254, %r4248, %r4249, 23;
	shf.l.wrap.b32 	%r4255, %r4249, %r4248, 23;
	mov.b64 	%rd4932, {%r4255, %r4254};
	xor.b64  	%rd4933, %rd4931, %rd4932;
	xor.b64  	%rd4934, %rd4685, %rd4661;
	and.b64  	%rd4935, %rd4934, %rd4709;
	xor.b64  	%rd4936, %rd4935, %rd4661;
	add.s64 	%rd4937, %rd4936, %rd4637;
	add.s64 	%rd4938, %rd4937, %rd4733;
	add.s64 	%rd4939, %rd4938, %rd8805;
	add.s64 	%rd4940, %rd4939, %rd4933;
	add.s64 	%rd4941, %rd4940, %rd4648;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4256,%dummy}, %rd4720;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4257}, %rd4720;
	}
	shf.r.wrap.b32 	%r4258, %r4257, %r4256, 28;
	shf.r.wrap.b32 	%r4259, %r4256, %r4257, 28;
	mov.b64 	%rd4942, {%r4259, %r4258};
	shf.l.wrap.b32 	%r4260, %r4256, %r4257, 30;
	shf.l.wrap.b32 	%r4261, %r4257, %r4256, 30;
	mov.b64 	%rd4943, {%r4261, %r4260};
	xor.b64  	%rd4944, %rd4943, %rd4942;
	shf.l.wrap.b32 	%r4262, %r4256, %r4257, 25;
	shf.l.wrap.b32 	%r4263, %r4257, %r4256, 25;
	mov.b64 	%rd4945, {%r4263, %r4262};
	xor.b64  	%rd4946, %rd4944, %rd4945;
	xor.b64  	%rd4947, %rd4720, %rd4672;
	xor.b64  	%rd4948, %rd4720, %rd4696;
	and.b64  	%rd4949, %rd4948, %rd4947;
	xor.b64  	%rd4950, %rd4949, %rd4720;
	add.s64 	%rd4951, %rd4940, %rd4950;
	add.s64 	%rd4952, %rd4951, %rd4946;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4264,%dummy}, %rd4941;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4265}, %rd4941;
	}
	shf.r.wrap.b32 	%r4266, %r4265, %r4264, 14;
	shf.r.wrap.b32 	%r4267, %r4264, %r4265, 14;
	mov.b64 	%rd4953, {%r4267, %r4266};
	shf.r.wrap.b32 	%r4268, %r4265, %r4264, 18;
	shf.r.wrap.b32 	%r4269, %r4264, %r4265, 18;
	mov.b64 	%rd4954, {%r4269, %r4268};
	xor.b64  	%rd4955, %rd4954, %rd4953;
	shf.l.wrap.b32 	%r4270, %r4264, %r4265, 23;
	shf.l.wrap.b32 	%r4271, %r4265, %r4264, 23;
	mov.b64 	%rd4956, {%r4271, %r4270};
	xor.b64  	%rd4957, %rd4955, %rd4956;
	xor.b64  	%rd4958, %rd4709, %rd4685;
	and.b64  	%rd4959, %rd4941, %rd4958;
	xor.b64  	%rd4960, %rd4959, %rd4685;
	add.s64 	%rd4961, %rd4746, %rd4661;
	add.s64 	%rd4962, %rd4961, %rd8804;
	add.s64 	%rd4963, %rd4962, %rd4960;
	add.s64 	%rd4964, %rd4963, %rd4957;
	add.s64 	%rd4965, %rd4964, %rd4672;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4272,%dummy}, %rd4952;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4273}, %rd4952;
	}
	shf.r.wrap.b32 	%r4274, %r4273, %r4272, 28;
	shf.r.wrap.b32 	%r4275, %r4272, %r4273, 28;
	mov.b64 	%rd4966, {%r4275, %r4274};
	shf.l.wrap.b32 	%r4276, %r4272, %r4273, 30;
	shf.l.wrap.b32 	%r4277, %r4273, %r4272, 30;
	mov.b64 	%rd4967, {%r4277, %r4276};
	xor.b64  	%rd4968, %rd4967, %rd4966;
	shf.l.wrap.b32 	%r4278, %r4272, %r4273, 25;
	shf.l.wrap.b32 	%r4279, %r4273, %r4272, 25;
	mov.b64 	%rd4969, {%r4279, %r4278};
	xor.b64  	%rd4970, %rd4968, %rd4969;
	xor.b64  	%rd4971, %rd4952, %rd4696;
	xor.b64  	%rd4972, %rd4952, %rd4720;
	and.b64  	%rd4973, %rd4972, %rd4971;
	xor.b64  	%rd4974, %rd4973, %rd4952;
	add.s64 	%rd4975, %rd4964, %rd4974;
	add.s64 	%rd4976, %rd4975, %rd4970;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4280,%dummy}, %rd4965;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4281}, %rd4965;
	}
	shf.r.wrap.b32 	%r4282, %r4281, %r4280, 14;
	shf.r.wrap.b32 	%r4283, %r4280, %r4281, 14;
	mov.b64 	%rd4977, {%r4283, %r4282};
	shf.r.wrap.b32 	%r4284, %r4281, %r4280, 18;
	shf.r.wrap.b32 	%r4285, %r4280, %r4281, 18;
	mov.b64 	%rd4978, {%r4285, %r4284};
	xor.b64  	%rd4979, %rd4978, %rd4977;
	shf.l.wrap.b32 	%r4286, %r4280, %r4281, 23;
	shf.l.wrap.b32 	%r4287, %r4281, %r4280, 23;
	mov.b64 	%rd4980, {%r4287, %r4286};
	xor.b64  	%rd4981, %rd4979, %rd4980;
	xor.b64  	%rd4982, %rd4941, %rd4709;
	and.b64  	%rd4983, %rd4965, %rd4982;
	xor.b64  	%rd4984, %rd4983, %rd4709;
	add.s64 	%rd4985, %rd4759, %rd4685;
	add.s64 	%rd4986, %rd4985, %rd8803;
	add.s64 	%rd4987, %rd4986, %rd4984;
	add.s64 	%rd4988, %rd4987, %rd4981;
	add.s64 	%rd4989, %rd4988, %rd4696;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4288,%dummy}, %rd4976;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4289}, %rd4976;
	}
	shf.r.wrap.b32 	%r4290, %r4289, %r4288, 28;
	shf.r.wrap.b32 	%r4291, %r4288, %r4289, 28;
	mov.b64 	%rd4990, {%r4291, %r4290};
	shf.l.wrap.b32 	%r4292, %r4288, %r4289, 30;
	shf.l.wrap.b32 	%r4293, %r4289, %r4288, 30;
	mov.b64 	%rd4991, {%r4293, %r4292};
	xor.b64  	%rd4992, %rd4991, %rd4990;
	shf.l.wrap.b32 	%r4294, %r4288, %r4289, 25;
	shf.l.wrap.b32 	%r4295, %r4289, %r4288, 25;
	mov.b64 	%rd4993, {%r4295, %r4294};
	xor.b64  	%rd4994, %rd4992, %rd4993;
	xor.b64  	%rd4995, %rd4976, %rd4720;
	xor.b64  	%rd4996, %rd4976, %rd4952;
	and.b64  	%rd4997, %rd4996, %rd4995;
	xor.b64  	%rd4998, %rd4997, %rd4976;
	add.s64 	%rd4999, %rd4988, %rd4998;
	add.s64 	%rd5000, %rd4999, %rd4994;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4296,%dummy}, %rd4989;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4297}, %rd4989;
	}
	shf.r.wrap.b32 	%r4298, %r4297, %r4296, 14;
	shf.r.wrap.b32 	%r4299, %r4296, %r4297, 14;
	mov.b64 	%rd5001, {%r4299, %r4298};
	shf.r.wrap.b32 	%r4300, %r4297, %r4296, 18;
	shf.r.wrap.b32 	%r4301, %r4296, %r4297, 18;
	mov.b64 	%rd5002, {%r4301, %r4300};
	xor.b64  	%rd5003, %rd5002, %rd5001;
	shf.l.wrap.b32 	%r4302, %r4296, %r4297, 23;
	shf.l.wrap.b32 	%r4303, %r4297, %r4296, 23;
	mov.b64 	%rd5004, {%r4303, %r4302};
	xor.b64  	%rd5005, %rd5003, %rd5004;
	xor.b64  	%rd5006, %rd4965, %rd4941;
	and.b64  	%rd5007, %rd4989, %rd5006;
	xor.b64  	%rd5008, %rd5007, %rd4941;
	add.s64 	%rd5009, %rd4772, %rd4709;
	add.s64 	%rd5010, %rd5009, %rd8802;
	add.s64 	%rd5011, %rd5010, %rd5008;
	add.s64 	%rd5012, %rd5011, %rd5005;
	add.s64 	%rd5013, %rd5012, %rd4720;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4304,%dummy}, %rd5000;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4305}, %rd5000;
	}
	shf.r.wrap.b32 	%r4306, %r4305, %r4304, 28;
	shf.r.wrap.b32 	%r4307, %r4304, %r4305, 28;
	mov.b64 	%rd5014, {%r4307, %r4306};
	shf.l.wrap.b32 	%r4308, %r4304, %r4305, 30;
	shf.l.wrap.b32 	%r4309, %r4305, %r4304, 30;
	mov.b64 	%rd5015, {%r4309, %r4308};
	xor.b64  	%rd5016, %rd5015, %rd5014;
	shf.l.wrap.b32 	%r4310, %r4304, %r4305, 25;
	shf.l.wrap.b32 	%r4311, %r4305, %r4304, 25;
	mov.b64 	%rd5017, {%r4311, %r4310};
	xor.b64  	%rd5018, %rd5016, %rd5017;
	xor.b64  	%rd5019, %rd5000, %rd4952;
	xor.b64  	%rd5020, %rd5000, %rd4976;
	and.b64  	%rd5021, %rd5020, %rd5019;
	xor.b64  	%rd5022, %rd5021, %rd5000;
	add.s64 	%rd5023, %rd5012, %rd5022;
	add.s64 	%rd5024, %rd5023, %rd5018;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4312,%dummy}, %rd5013;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4313}, %rd5013;
	}
	shf.r.wrap.b32 	%r4314, %r4313, %r4312, 14;
	shf.r.wrap.b32 	%r4315, %r4312, %r4313, 14;
	mov.b64 	%rd5025, {%r4315, %r4314};
	shf.r.wrap.b32 	%r4316, %r4313, %r4312, 18;
	shf.r.wrap.b32 	%r4317, %r4312, %r4313, 18;
	mov.b64 	%rd5026, {%r4317, %r4316};
	xor.b64  	%rd5027, %rd5026, %rd5025;
	shf.l.wrap.b32 	%r4318, %r4312, %r4313, 23;
	shf.l.wrap.b32 	%r4319, %r4313, %r4312, 23;
	mov.b64 	%rd5028, {%r4319, %r4318};
	xor.b64  	%rd5029, %rd5027, %rd5028;
	xor.b64  	%rd5030, %rd4989, %rd4965;
	and.b64  	%rd5031, %rd5013, %rd5030;
	xor.b64  	%rd5032, %rd5031, %rd4965;
	add.s64 	%rd5033, %rd4941, %rd4785;
	add.s64 	%rd5034, %rd5033, %rd8801;
	add.s64 	%rd5035, %rd5034, %rd5032;
	add.s64 	%rd5036, %rd5035, %rd5029;
	add.s64 	%rd5037, %rd5036, %rd4952;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4320,%dummy}, %rd5024;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4321}, %rd5024;
	}
	shf.r.wrap.b32 	%r4322, %r4321, %r4320, 28;
	shf.r.wrap.b32 	%r4323, %r4320, %r4321, 28;
	mov.b64 	%rd5038, {%r4323, %r4322};
	shf.l.wrap.b32 	%r4324, %r4320, %r4321, 30;
	shf.l.wrap.b32 	%r4325, %r4321, %r4320, 30;
	mov.b64 	%rd5039, {%r4325, %r4324};
	xor.b64  	%rd5040, %rd5039, %rd5038;
	shf.l.wrap.b32 	%r4326, %r4320, %r4321, 25;
	shf.l.wrap.b32 	%r4327, %r4321, %r4320, 25;
	mov.b64 	%rd5041, {%r4327, %r4326};
	xor.b64  	%rd5042, %rd5040, %rd5041;
	xor.b64  	%rd5043, %rd5024, %rd4976;
	xor.b64  	%rd5044, %rd5024, %rd5000;
	and.b64  	%rd5045, %rd5044, %rd5043;
	xor.b64  	%rd5046, %rd5045, %rd5024;
	add.s64 	%rd5047, %rd5036, %rd5046;
	add.s64 	%rd5048, %rd5047, %rd5042;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4328,%dummy}, %rd5037;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4329}, %rd5037;
	}
	shf.r.wrap.b32 	%r4330, %r4329, %r4328, 14;
	shf.r.wrap.b32 	%r4331, %r4328, %r4329, 14;
	mov.b64 	%rd5049, {%r4331, %r4330};
	shf.r.wrap.b32 	%r4332, %r4329, %r4328, 18;
	shf.r.wrap.b32 	%r4333, %r4328, %r4329, 18;
	mov.b64 	%rd5050, {%r4333, %r4332};
	xor.b64  	%rd5051, %rd5050, %rd5049;
	shf.l.wrap.b32 	%r4334, %r4328, %r4329, 23;
	shf.l.wrap.b32 	%r4335, %r4329, %r4328, 23;
	mov.b64 	%rd5052, {%r4335, %r4334};
	xor.b64  	%rd5053, %rd5051, %rd5052;
	xor.b64  	%rd5054, %rd5013, %rd4989;
	and.b64  	%rd5055, %rd5037, %rd5054;
	xor.b64  	%rd5056, %rd5055, %rd4989;
	add.s64 	%rd5057, %rd4965, %rd4798;
	add.s64 	%rd5058, %rd5057, %rd8800;
	add.s64 	%rd5059, %rd5058, %rd5056;
	add.s64 	%rd5060, %rd5059, %rd5053;
	add.s64 	%rd5061, %rd5060, %rd4976;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4336,%dummy}, %rd5048;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4337}, %rd5048;
	}
	shf.r.wrap.b32 	%r4338, %r4337, %r4336, 28;
	shf.r.wrap.b32 	%r4339, %r4336, %r4337, 28;
	mov.b64 	%rd5062, {%r4339, %r4338};
	shf.l.wrap.b32 	%r4340, %r4336, %r4337, 30;
	shf.l.wrap.b32 	%r4341, %r4337, %r4336, 30;
	mov.b64 	%rd5063, {%r4341, %r4340};
	xor.b64  	%rd5064, %rd5063, %rd5062;
	shf.l.wrap.b32 	%r4342, %r4336, %r4337, 25;
	shf.l.wrap.b32 	%r4343, %r4337, %r4336, 25;
	mov.b64 	%rd5065, {%r4343, %r4342};
	xor.b64  	%rd5066, %rd5064, %rd5065;
	xor.b64  	%rd5067, %rd5048, %rd5000;
	xor.b64  	%rd5068, %rd5048, %rd5024;
	and.b64  	%rd5069, %rd5068, %rd5067;
	xor.b64  	%rd5070, %rd5069, %rd5048;
	add.s64 	%rd5071, %rd5060, %rd5070;
	add.s64 	%rd5072, %rd5071, %rd5066;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4344,%dummy}, %rd5061;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4345}, %rd5061;
	}
	shf.r.wrap.b32 	%r4346, %r4345, %r4344, 14;
	shf.r.wrap.b32 	%r4347, %r4344, %r4345, 14;
	mov.b64 	%rd5073, {%r4347, %r4346};
	shf.r.wrap.b32 	%r4348, %r4345, %r4344, 18;
	shf.r.wrap.b32 	%r4349, %r4344, %r4345, 18;
	mov.b64 	%rd5074, {%r4349, %r4348};
	xor.b64  	%rd5075, %rd5074, %rd5073;
	shf.l.wrap.b32 	%r4350, %r4344, %r4345, 23;
	shf.l.wrap.b32 	%r4351, %r4345, %r4344, 23;
	mov.b64 	%rd5076, {%r4351, %r4350};
	xor.b64  	%rd5077, %rd5075, %rd5076;
	xor.b64  	%rd5078, %rd5037, %rd5013;
	and.b64  	%rd5079, %rd5061, %rd5078;
	xor.b64  	%rd5080, %rd5079, %rd5013;
	add.s64 	%rd5081, %rd4989, %rd4811;
	add.s64 	%rd5082, %rd5081, %rd8799;
	add.s64 	%rd5083, %rd5082, %rd5080;
	add.s64 	%rd5084, %rd5083, %rd5077;
	add.s64 	%rd5085, %rd5084, %rd5000;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4352,%dummy}, %rd5072;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4353}, %rd5072;
	}
	shf.r.wrap.b32 	%r4354, %r4353, %r4352, 28;
	shf.r.wrap.b32 	%r4355, %r4352, %r4353, 28;
	mov.b64 	%rd5086, {%r4355, %r4354};
	shf.l.wrap.b32 	%r4356, %r4352, %r4353, 30;
	shf.l.wrap.b32 	%r4357, %r4353, %r4352, 30;
	mov.b64 	%rd5087, {%r4357, %r4356};
	xor.b64  	%rd5088, %rd5087, %rd5086;
	shf.l.wrap.b32 	%r4358, %r4352, %r4353, 25;
	shf.l.wrap.b32 	%r4359, %r4353, %r4352, 25;
	mov.b64 	%rd5089, {%r4359, %r4358};
	xor.b64  	%rd5090, %rd5088, %rd5089;
	xor.b64  	%rd5091, %rd5072, %rd5024;
	xor.b64  	%rd5092, %rd5072, %rd5048;
	and.b64  	%rd5093, %rd5092, %rd5091;
	xor.b64  	%rd5094, %rd5093, %rd5072;
	add.s64 	%rd5095, %rd5084, %rd5094;
	add.s64 	%rd5096, %rd5095, %rd5090;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4360,%dummy}, %rd5085;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4361}, %rd5085;
	}
	shf.r.wrap.b32 	%r4362, %r4361, %r4360, 14;
	shf.r.wrap.b32 	%r4363, %r4360, %r4361, 14;
	mov.b64 	%rd5097, {%r4363, %r4362};
	shf.r.wrap.b32 	%r4364, %r4361, %r4360, 18;
	shf.r.wrap.b32 	%r4365, %r4360, %r4361, 18;
	mov.b64 	%rd5098, {%r4365, %r4364};
	xor.b64  	%rd5099, %rd5098, %rd5097;
	shf.l.wrap.b32 	%r4366, %r4360, %r4361, 23;
	shf.l.wrap.b32 	%r4367, %r4361, %r4360, 23;
	mov.b64 	%rd5100, {%r4367, %r4366};
	xor.b64  	%rd5101, %rd5099, %rd5100;
	xor.b64  	%rd5102, %rd5061, %rd5037;
	and.b64  	%rd5103, %rd5085, %rd5102;
	xor.b64  	%rd5104, %rd5103, %rd5037;
	add.s64 	%rd5105, %rd5013, %rd4824;
	add.s64 	%rd5106, %rd5105, %rd8798;
	add.s64 	%rd5107, %rd5106, %rd5104;
	add.s64 	%rd5108, %rd5107, %rd5101;
	add.s64 	%rd5109, %rd5108, %rd5024;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4368,%dummy}, %rd5096;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4369}, %rd5096;
	}
	shf.r.wrap.b32 	%r4370, %r4369, %r4368, 28;
	shf.r.wrap.b32 	%r4371, %r4368, %r4369, 28;
	mov.b64 	%rd5110, {%r4371, %r4370};
	shf.l.wrap.b32 	%r4372, %r4368, %r4369, 30;
	shf.l.wrap.b32 	%r4373, %r4369, %r4368, 30;
	mov.b64 	%rd5111, {%r4373, %r4372};
	xor.b64  	%rd5112, %rd5111, %rd5110;
	shf.l.wrap.b32 	%r4374, %r4368, %r4369, 25;
	shf.l.wrap.b32 	%r4375, %r4369, %r4368, 25;
	mov.b64 	%rd5113, {%r4375, %r4374};
	xor.b64  	%rd5114, %rd5112, %rd5113;
	xor.b64  	%rd5115, %rd5096, %rd5048;
	xor.b64  	%rd5116, %rd5096, %rd5072;
	and.b64  	%rd5117, %rd5116, %rd5115;
	xor.b64  	%rd5118, %rd5117, %rd5096;
	add.s64 	%rd5119, %rd5108, %rd5118;
	add.s64 	%rd5120, %rd5119, %rd5114;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4376,%dummy}, %rd5109;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4377}, %rd5109;
	}
	shf.r.wrap.b32 	%r4378, %r4377, %r4376, 14;
	shf.r.wrap.b32 	%r4379, %r4376, %r4377, 14;
	mov.b64 	%rd5121, {%r4379, %r4378};
	shf.r.wrap.b32 	%r4380, %r4377, %r4376, 18;
	shf.r.wrap.b32 	%r4381, %r4376, %r4377, 18;
	mov.b64 	%rd5122, {%r4381, %r4380};
	xor.b64  	%rd5123, %rd5122, %rd5121;
	shf.l.wrap.b32 	%r4382, %r4376, %r4377, 23;
	shf.l.wrap.b32 	%r4383, %r4377, %r4376, 23;
	mov.b64 	%rd5124, {%r4383, %r4382};
	xor.b64  	%rd5125, %rd5123, %rd5124;
	xor.b64  	%rd5126, %rd5085, %rd5061;
	and.b64  	%rd5127, %rd5109, %rd5126;
	xor.b64  	%rd5128, %rd5127, %rd5061;
	add.s64 	%rd5129, %rd5037, %rd4837;
	add.s64 	%rd5130, %rd5129, %rd8797;
	add.s64 	%rd5131, %rd5130, %rd5128;
	add.s64 	%rd5132, %rd5131, %rd5125;
	add.s64 	%rd5133, %rd5132, %rd5048;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4384,%dummy}, %rd5120;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4385}, %rd5120;
	}
	shf.r.wrap.b32 	%r4386, %r4385, %r4384, 28;
	shf.r.wrap.b32 	%r4387, %r4384, %r4385, 28;
	mov.b64 	%rd5134, {%r4387, %r4386};
	shf.l.wrap.b32 	%r4388, %r4384, %r4385, 30;
	shf.l.wrap.b32 	%r4389, %r4385, %r4384, 30;
	mov.b64 	%rd5135, {%r4389, %r4388};
	xor.b64  	%rd5136, %rd5135, %rd5134;
	shf.l.wrap.b32 	%r4390, %r4384, %r4385, 25;
	shf.l.wrap.b32 	%r4391, %r4385, %r4384, 25;
	mov.b64 	%rd5137, {%r4391, %r4390};
	xor.b64  	%rd5138, %rd5136, %rd5137;
	xor.b64  	%rd5139, %rd5120, %rd5072;
	xor.b64  	%rd5140, %rd5120, %rd5096;
	and.b64  	%rd5141, %rd5140, %rd5139;
	xor.b64  	%rd5142, %rd5141, %rd5120;
	add.s64 	%rd5143, %rd5132, %rd5142;
	add.s64 	%rd5144, %rd5143, %rd5138;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4392,%dummy}, %rd5133;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4393}, %rd5133;
	}
	shf.r.wrap.b32 	%r4394, %r4393, %r4392, 14;
	shf.r.wrap.b32 	%r4395, %r4392, %r4393, 14;
	mov.b64 	%rd5145, {%r4395, %r4394};
	shf.r.wrap.b32 	%r4396, %r4393, %r4392, 18;
	shf.r.wrap.b32 	%r4397, %r4392, %r4393, 18;
	mov.b64 	%rd5146, {%r4397, %r4396};
	xor.b64  	%rd5147, %rd5146, %rd5145;
	shf.l.wrap.b32 	%r4398, %r4392, %r4393, 23;
	shf.l.wrap.b32 	%r4399, %r4393, %r4392, 23;
	mov.b64 	%rd5148, {%r4399, %r4398};
	xor.b64  	%rd5149, %rd5147, %rd5148;
	xor.b64  	%rd5150, %rd5109, %rd5085;
	and.b64  	%rd5151, %rd5133, %rd5150;
	xor.b64  	%rd5152, %rd5151, %rd5085;
	add.s64 	%rd5153, %rd5061, %rd4850;
	add.s64 	%rd5154, %rd5153, %rd8796;
	add.s64 	%rd5155, %rd5154, %rd5152;
	add.s64 	%rd5156, %rd5155, %rd5149;
	add.s64 	%rd5157, %rd5156, %rd5072;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4400,%dummy}, %rd5144;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4401}, %rd5144;
	}
	shf.r.wrap.b32 	%r4402, %r4401, %r4400, 28;
	shf.r.wrap.b32 	%r4403, %r4400, %r4401, 28;
	mov.b64 	%rd5158, {%r4403, %r4402};
	shf.l.wrap.b32 	%r4404, %r4400, %r4401, 30;
	shf.l.wrap.b32 	%r4405, %r4401, %r4400, 30;
	mov.b64 	%rd5159, {%r4405, %r4404};
	xor.b64  	%rd5160, %rd5159, %rd5158;
	shf.l.wrap.b32 	%r4406, %r4400, %r4401, 25;
	shf.l.wrap.b32 	%r4407, %r4401, %r4400, 25;
	mov.b64 	%rd5161, {%r4407, %r4406};
	xor.b64  	%rd5162, %rd5160, %rd5161;
	xor.b64  	%rd5163, %rd5144, %rd5096;
	xor.b64  	%rd5164, %rd5144, %rd5120;
	and.b64  	%rd5165, %rd5164, %rd5163;
	xor.b64  	%rd5166, %rd5165, %rd5144;
	add.s64 	%rd5167, %rd5156, %rd5166;
	add.s64 	%rd5168, %rd5167, %rd5162;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4408,%dummy}, %rd5157;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4409}, %rd5157;
	}
	shf.r.wrap.b32 	%r4410, %r4409, %r4408, 14;
	shf.r.wrap.b32 	%r4411, %r4408, %r4409, 14;
	mov.b64 	%rd5169, {%r4411, %r4410};
	shf.r.wrap.b32 	%r4412, %r4409, %r4408, 18;
	shf.r.wrap.b32 	%r4413, %r4408, %r4409, 18;
	mov.b64 	%rd5170, {%r4413, %r4412};
	xor.b64  	%rd5171, %rd5170, %rd5169;
	shf.l.wrap.b32 	%r4414, %r4408, %r4409, 23;
	shf.l.wrap.b32 	%r4415, %r4409, %r4408, 23;
	mov.b64 	%rd5172, {%r4415, %r4414};
	xor.b64  	%rd5173, %rd5171, %rd5172;
	xor.b64  	%rd5174, %rd5133, %rd5109;
	and.b64  	%rd5175, %rd5157, %rd5174;
	xor.b64  	%rd5176, %rd5175, %rd5109;
	add.s64 	%rd5177, %rd5085, %rd4863;
	add.s64 	%rd5178, %rd5177, %rd8795;
	add.s64 	%rd5179, %rd5178, %rd5176;
	add.s64 	%rd5180, %rd5179, %rd5173;
	add.s64 	%rd5181, %rd5180, %rd5096;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4416,%dummy}, %rd5168;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4417}, %rd5168;
	}
	shf.r.wrap.b32 	%r4418, %r4417, %r4416, 28;
	shf.r.wrap.b32 	%r4419, %r4416, %r4417, 28;
	mov.b64 	%rd5182, {%r4419, %r4418};
	shf.l.wrap.b32 	%r4420, %r4416, %r4417, 30;
	shf.l.wrap.b32 	%r4421, %r4417, %r4416, 30;
	mov.b64 	%rd5183, {%r4421, %r4420};
	xor.b64  	%rd5184, %rd5183, %rd5182;
	shf.l.wrap.b32 	%r4422, %r4416, %r4417, 25;
	shf.l.wrap.b32 	%r4423, %r4417, %r4416, 25;
	mov.b64 	%rd5185, {%r4423, %r4422};
	xor.b64  	%rd5186, %rd5184, %rd5185;
	xor.b64  	%rd5187, %rd5168, %rd5120;
	xor.b64  	%rd5188, %rd5168, %rd5144;
	and.b64  	%rd5189, %rd5188, %rd5187;
	xor.b64  	%rd5190, %rd5189, %rd5168;
	add.s64 	%rd5191, %rd5180, %rd5190;
	add.s64 	%rd5192, %rd5191, %rd5186;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4424,%dummy}, %rd5181;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4425}, %rd5181;
	}
	shf.r.wrap.b32 	%r4426, %r4425, %r4424, 14;
	shf.r.wrap.b32 	%r4427, %r4424, %r4425, 14;
	mov.b64 	%rd5193, {%r4427, %r4426};
	shf.r.wrap.b32 	%r4428, %r4425, %r4424, 18;
	shf.r.wrap.b32 	%r4429, %r4424, %r4425, 18;
	mov.b64 	%rd5194, {%r4429, %r4428};
	xor.b64  	%rd5195, %rd5194, %rd5193;
	shf.l.wrap.b32 	%r4430, %r4424, %r4425, 23;
	shf.l.wrap.b32 	%r4431, %r4425, %r4424, 23;
	mov.b64 	%rd5196, {%r4431, %r4430};
	xor.b64  	%rd5197, %rd5195, %rd5196;
	xor.b64  	%rd5198, %rd5157, %rd5133;
	and.b64  	%rd5199, %rd5181, %rd5198;
	xor.b64  	%rd5200, %rd5199, %rd5133;
	add.s64 	%rd5201, %rd5109, %rd4876;
	add.s64 	%rd5202, %rd5201, %rd8794;
	add.s64 	%rd5203, %rd5202, %rd5200;
	add.s64 	%rd5204, %rd5203, %rd5197;
	add.s64 	%rd5205, %rd5204, %rd5120;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4432,%dummy}, %rd5192;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4433}, %rd5192;
	}
	shf.r.wrap.b32 	%r4434, %r4433, %r4432, 28;
	shf.r.wrap.b32 	%r4435, %r4432, %r4433, 28;
	mov.b64 	%rd5206, {%r4435, %r4434};
	shf.l.wrap.b32 	%r4436, %r4432, %r4433, 30;
	shf.l.wrap.b32 	%r4437, %r4433, %r4432, 30;
	mov.b64 	%rd5207, {%r4437, %r4436};
	xor.b64  	%rd5208, %rd5207, %rd5206;
	shf.l.wrap.b32 	%r4438, %r4432, %r4433, 25;
	shf.l.wrap.b32 	%r4439, %r4433, %r4432, 25;
	mov.b64 	%rd5209, {%r4439, %r4438};
	xor.b64  	%rd5210, %rd5208, %rd5209;
	xor.b64  	%rd5211, %rd5192, %rd5144;
	xor.b64  	%rd5212, %rd5192, %rd5168;
	and.b64  	%rd5213, %rd5212, %rd5211;
	xor.b64  	%rd5214, %rd5213, %rd5192;
	add.s64 	%rd5215, %rd5204, %rd5214;
	add.s64 	%rd5216, %rd5215, %rd5210;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4440,%dummy}, %rd5205;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4441}, %rd5205;
	}
	shf.r.wrap.b32 	%r4442, %r4441, %r4440, 14;
	shf.r.wrap.b32 	%r4443, %r4440, %r4441, 14;
	mov.b64 	%rd5217, {%r4443, %r4442};
	shf.r.wrap.b32 	%r4444, %r4441, %r4440, 18;
	shf.r.wrap.b32 	%r4445, %r4440, %r4441, 18;
	mov.b64 	%rd5218, {%r4445, %r4444};
	xor.b64  	%rd5219, %rd5218, %rd5217;
	shf.l.wrap.b32 	%r4446, %r4440, %r4441, 23;
	shf.l.wrap.b32 	%r4447, %r4441, %r4440, 23;
	mov.b64 	%rd5220, {%r4447, %r4446};
	xor.b64  	%rd5221, %rd5219, %rd5220;
	xor.b64  	%rd5222, %rd5181, %rd5157;
	and.b64  	%rd5223, %rd5205, %rd5222;
	xor.b64  	%rd5224, %rd5223, %rd5157;
	add.s64 	%rd5225, %rd5133, %rd4889;
	add.s64 	%rd5226, %rd5225, %rd8793;
	add.s64 	%rd5227, %rd5226, %rd5224;
	add.s64 	%rd5228, %rd5227, %rd5221;
	add.s64 	%rd5229, %rd5228, %rd5144;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4448,%dummy}, %rd5216;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4449}, %rd5216;
	}
	shf.r.wrap.b32 	%r4450, %r4449, %r4448, 28;
	shf.r.wrap.b32 	%r4451, %r4448, %r4449, 28;
	mov.b64 	%rd5230, {%r4451, %r4450};
	shf.l.wrap.b32 	%r4452, %r4448, %r4449, 30;
	shf.l.wrap.b32 	%r4453, %r4449, %r4448, 30;
	mov.b64 	%rd5231, {%r4453, %r4452};
	xor.b64  	%rd5232, %rd5231, %rd5230;
	shf.l.wrap.b32 	%r4454, %r4448, %r4449, 25;
	shf.l.wrap.b32 	%r4455, %r4449, %r4448, 25;
	mov.b64 	%rd5233, {%r4455, %r4454};
	xor.b64  	%rd5234, %rd5232, %rd5233;
	xor.b64  	%rd5235, %rd5216, %rd5168;
	xor.b64  	%rd5236, %rd5216, %rd5192;
	and.b64  	%rd5237, %rd5236, %rd5235;
	xor.b64  	%rd5238, %rd5237, %rd5216;
	add.s64 	%rd5239, %rd5228, %rd5238;
	add.s64 	%rd5240, %rd5239, %rd5234;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4456,%dummy}, %rd5229;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4457}, %rd5229;
	}
	shf.r.wrap.b32 	%r4458, %r4457, %r4456, 14;
	shf.r.wrap.b32 	%r4459, %r4456, %r4457, 14;
	mov.b64 	%rd5241, {%r4459, %r4458};
	shf.r.wrap.b32 	%r4460, %r4457, %r4456, 18;
	shf.r.wrap.b32 	%r4461, %r4456, %r4457, 18;
	mov.b64 	%rd5242, {%r4461, %r4460};
	xor.b64  	%rd5243, %rd5242, %rd5241;
	shf.l.wrap.b32 	%r4462, %r4456, %r4457, 23;
	shf.l.wrap.b32 	%r4463, %r4457, %r4456, 23;
	mov.b64 	%rd5244, {%r4463, %r4462};
	xor.b64  	%rd5245, %rd5243, %rd5244;
	xor.b64  	%rd5246, %rd5205, %rd5181;
	and.b64  	%rd5247, %rd5229, %rd5246;
	xor.b64  	%rd5248, %rd5247, %rd5181;
	add.s64 	%rd5249, %rd5157, %rd4902;
	add.s64 	%rd5250, %rd5249, %rd8792;
	add.s64 	%rd5251, %rd5250, %rd5248;
	add.s64 	%rd5252, %rd5251, %rd5245;
	add.s64 	%rd5253, %rd5252, %rd5168;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4464,%dummy}, %rd5240;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4465}, %rd5240;
	}
	shf.r.wrap.b32 	%r4466, %r4465, %r4464, 28;
	shf.r.wrap.b32 	%r4467, %r4464, %r4465, 28;
	mov.b64 	%rd5254, {%r4467, %r4466};
	shf.l.wrap.b32 	%r4468, %r4464, %r4465, 30;
	shf.l.wrap.b32 	%r4469, %r4465, %r4464, 30;
	mov.b64 	%rd5255, {%r4469, %r4468};
	xor.b64  	%rd5256, %rd5255, %rd5254;
	shf.l.wrap.b32 	%r4470, %r4464, %r4465, 25;
	shf.l.wrap.b32 	%r4471, %r4465, %r4464, 25;
	mov.b64 	%rd5257, {%r4471, %r4470};
	xor.b64  	%rd5258, %rd5256, %rd5257;
	xor.b64  	%rd5259, %rd5240, %rd5192;
	xor.b64  	%rd5260, %rd5240, %rd5216;
	and.b64  	%rd5261, %rd5260, %rd5259;
	xor.b64  	%rd5262, %rd5261, %rd5240;
	add.s64 	%rd5263, %rd5252, %rd5262;
	add.s64 	%rd5264, %rd5263, %rd5258;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4472,%dummy}, %rd5253;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4473}, %rd5253;
	}
	shf.r.wrap.b32 	%r4474, %r4473, %r4472, 14;
	shf.r.wrap.b32 	%r4475, %r4472, %r4473, 14;
	mov.b64 	%rd5265, {%r4475, %r4474};
	shf.r.wrap.b32 	%r4476, %r4473, %r4472, 18;
	shf.r.wrap.b32 	%r4477, %r4472, %r4473, 18;
	mov.b64 	%rd5266, {%r4477, %r4476};
	xor.b64  	%rd5267, %rd5266, %rd5265;
	shf.l.wrap.b32 	%r4478, %r4472, %r4473, 23;
	shf.l.wrap.b32 	%r4479, %r4473, %r4472, 23;
	mov.b64 	%rd5268, {%r4479, %r4478};
	xor.b64  	%rd5269, %rd5267, %rd5268;
	xor.b64  	%rd5270, %rd5229, %rd5205;
	and.b64  	%rd5271, %rd5253, %rd5270;
	xor.b64  	%rd5272, %rd5271, %rd5205;
	add.s64 	%rd5273, %rd5181, %rd4915;
	add.s64 	%rd5274, %rd5273, %rd8791;
	add.s64 	%rd5275, %rd5274, %rd5272;
	add.s64 	%rd5276, %rd5275, %rd5269;
	add.s64 	%rd5277, %rd5276, %rd5192;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4480,%dummy}, %rd5264;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4481}, %rd5264;
	}
	shf.r.wrap.b32 	%r4482, %r4481, %r4480, 28;
	shf.r.wrap.b32 	%r4483, %r4480, %r4481, 28;
	mov.b64 	%rd5278, {%r4483, %r4482};
	shf.l.wrap.b32 	%r4484, %r4480, %r4481, 30;
	shf.l.wrap.b32 	%r4485, %r4481, %r4480, 30;
	mov.b64 	%rd5279, {%r4485, %r4484};
	xor.b64  	%rd5280, %rd5279, %rd5278;
	shf.l.wrap.b32 	%r4486, %r4480, %r4481, 25;
	shf.l.wrap.b32 	%r4487, %r4481, %r4480, 25;
	mov.b64 	%rd5281, {%r4487, %r4486};
	xor.b64  	%rd5282, %rd5280, %rd5281;
	xor.b64  	%rd5283, %rd5264, %rd5216;
	xor.b64  	%rd5284, %rd5264, %rd5240;
	and.b64  	%rd5285, %rd5284, %rd5283;
	xor.b64  	%rd5286, %rd5285, %rd5264;
	add.s64 	%rd5287, %rd5276, %rd5286;
	add.s64 	%rd5288, %rd5287, %rd5282;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4488,%dummy}, %rd5277;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4489}, %rd5277;
	}
	shf.r.wrap.b32 	%r4490, %r4489, %r4488, 14;
	shf.r.wrap.b32 	%r4491, %r4488, %r4489, 14;
	mov.b64 	%rd5289, {%r4491, %r4490};
	shf.r.wrap.b32 	%r4492, %r4489, %r4488, 18;
	shf.r.wrap.b32 	%r4493, %r4488, %r4489, 18;
	mov.b64 	%rd5290, {%r4493, %r4492};
	xor.b64  	%rd5291, %rd5290, %rd5289;
	shf.l.wrap.b32 	%r4494, %r4488, %r4489, 23;
	shf.l.wrap.b32 	%r4495, %r4489, %r4488, 23;
	mov.b64 	%rd5292, {%r4495, %r4494};
	xor.b64  	%rd5293, %rd5291, %rd5292;
	xor.b64  	%rd5294, %rd5253, %rd5229;
	and.b64  	%rd5295, %rd5277, %rd5294;
	xor.b64  	%rd5296, %rd5295, %rd5229;
	add.s64 	%rd5297, %rd5205, %rd4928;
	add.s64 	%rd5298, %rd5297, %rd8790;
	add.s64 	%rd5299, %rd5298, %rd5296;
	add.s64 	%rd5300, %rd5299, %rd5293;
	add.s64 	%rd5301, %rd5300, %rd5216;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4496,%dummy}, %rd5288;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4497}, %rd5288;
	}
	shf.r.wrap.b32 	%r4498, %r4497, %r4496, 28;
	shf.r.wrap.b32 	%r4499, %r4496, %r4497, 28;
	mov.b64 	%rd5302, {%r4499, %r4498};
	shf.l.wrap.b32 	%r4500, %r4496, %r4497, 30;
	shf.l.wrap.b32 	%r4501, %r4497, %r4496, 30;
	mov.b64 	%rd5303, {%r4501, %r4500};
	xor.b64  	%rd5304, %rd5303, %rd5302;
	shf.l.wrap.b32 	%r4502, %r4496, %r4497, 25;
	shf.l.wrap.b32 	%r4503, %r4497, %r4496, 25;
	mov.b64 	%rd5305, {%r4503, %r4502};
	xor.b64  	%rd5306, %rd5304, %rd5305;
	xor.b64  	%rd5307, %rd5288, %rd5240;
	xor.b64  	%rd5308, %rd5288, %rd5264;
	and.b64  	%rd5309, %rd5308, %rd5307;
	xor.b64  	%rd5310, %rd5309, %rd5288;
	add.s64 	%rd5311, %rd5300, %rd5310;
	add.s64 	%rd5312, %rd5311, %rd5306;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4504,%dummy}, %rd4915;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4505}, %rd4915;
	}
	shf.r.wrap.b32 	%r4506, %r4505, %r4504, 19;
	shf.r.wrap.b32 	%r4507, %r4504, %r4505, 19;
	mov.b64 	%rd5313, {%r4507, %r4506};
	shf.l.wrap.b32 	%r4508, %r4504, %r4505, 3;
	shf.l.wrap.b32 	%r4509, %r4505, %r4504, 3;
	mov.b64 	%rd5314, {%r4509, %r4508};
	shr.u64 	%rd5315, %rd4915, 6;
	xor.b64  	%rd5316, %rd5313, %rd5315;
	xor.b64  	%rd5317, %rd5316, %rd5314;
	shf.r.wrap.b32 	%r4510, %r4119, %r4118, 1;
	shf.r.wrap.b32 	%r4511, %r4118, %r4119, 1;
	mov.b64 	%rd5318, {%r4511, %r4510};
	shf.r.wrap.b32 	%r4512, %r4119, %r4118, 8;
	shf.r.wrap.b32 	%r4513, %r4118, %r4119, 8;
	mov.b64 	%rd5319, {%r4513, %r4512};
	shr.u64 	%rd5320, %rd4746, 7;
	xor.b64  	%rd5321, %rd5318, %rd5320;
	xor.b64  	%rd5322, %rd5321, %rd5319;
	add.s64 	%rd5323, %rd4850, %rd4733;
	add.s64 	%rd5324, %rd5323, %rd5317;
	add.s64 	%rd5325, %rd5324, %rd5322;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4514,%dummy}, %rd4928;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4515}, %rd4928;
	}
	shf.r.wrap.b32 	%r4516, %r4515, %r4514, 19;
	shf.r.wrap.b32 	%r4517, %r4514, %r4515, 19;
	mov.b64 	%rd5326, {%r4517, %r4516};
	shf.l.wrap.b32 	%r4518, %r4514, %r4515, 3;
	shf.l.wrap.b32 	%r4519, %r4515, %r4514, 3;
	mov.b64 	%rd5327, {%r4519, %r4518};
	shr.u64 	%rd5328, %rd4928, 6;
	xor.b64  	%rd5329, %rd5326, %rd5328;
	xor.b64  	%rd5330, %rd5329, %rd5327;
	shf.r.wrap.b32 	%r4520, %r4129, %r4128, 1;
	shf.r.wrap.b32 	%r4521, %r4128, %r4129, 1;
	mov.b64 	%rd5331, {%r4521, %r4520};
	shf.r.wrap.b32 	%r4522, %r4129, %r4128, 8;
	shf.r.wrap.b32 	%r4523, %r4128, %r4129, 8;
	mov.b64 	%rd5332, {%r4523, %r4522};
	shr.u64 	%rd5333, %rd4759, 7;
	xor.b64  	%rd5334, %rd5331, %rd5333;
	xor.b64  	%rd5335, %rd5334, %rd5332;
	add.s64 	%rd5336, %rd4863, %rd4746;
	add.s64 	%rd5337, %rd5336, %rd5330;
	add.s64 	%rd5338, %rd5337, %rd5335;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4524,%dummy}, %rd5325;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4525}, %rd5325;
	}
	shf.r.wrap.b32 	%r4526, %r4525, %r4524, 19;
	shf.r.wrap.b32 	%r4527, %r4524, %r4525, 19;
	mov.b64 	%rd5339, {%r4527, %r4526};
	shf.l.wrap.b32 	%r4528, %r4524, %r4525, 3;
	shf.l.wrap.b32 	%r4529, %r4525, %r4524, 3;
	mov.b64 	%rd5340, {%r4529, %r4528};
	shr.u64 	%rd5341, %rd5325, 6;
	xor.b64  	%rd5342, %rd5339, %rd5341;
	xor.b64  	%rd5343, %rd5342, %rd5340;
	shf.r.wrap.b32 	%r4530, %r4139, %r4138, 1;
	shf.r.wrap.b32 	%r4531, %r4138, %r4139, 1;
	mov.b64 	%rd5344, {%r4531, %r4530};
	shf.r.wrap.b32 	%r4532, %r4139, %r4138, 8;
	shf.r.wrap.b32 	%r4533, %r4138, %r4139, 8;
	mov.b64 	%rd5345, {%r4533, %r4532};
	shr.u64 	%rd5346, %rd4772, 7;
	xor.b64  	%rd5347, %rd5344, %rd5346;
	xor.b64  	%rd5348, %rd5347, %rd5345;
	add.s64 	%rd5349, %rd4876, %rd4759;
	add.s64 	%rd5350, %rd5349, %rd5343;
	add.s64 	%rd5351, %rd5350, %rd5348;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4534,%dummy}, %rd5338;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4535}, %rd5338;
	}
	shf.r.wrap.b32 	%r4536, %r4535, %r4534, 19;
	shf.r.wrap.b32 	%r4537, %r4534, %r4535, 19;
	mov.b64 	%rd5352, {%r4537, %r4536};
	shf.l.wrap.b32 	%r4538, %r4534, %r4535, 3;
	shf.l.wrap.b32 	%r4539, %r4535, %r4534, 3;
	mov.b64 	%rd5353, {%r4539, %r4538};
	shr.u64 	%rd5354, %rd5338, 6;
	xor.b64  	%rd5355, %rd5352, %rd5354;
	xor.b64  	%rd5356, %rd5355, %rd5353;
	shf.r.wrap.b32 	%r4540, %r4149, %r4148, 1;
	shf.r.wrap.b32 	%r4541, %r4148, %r4149, 1;
	mov.b64 	%rd5357, {%r4541, %r4540};
	shf.r.wrap.b32 	%r4542, %r4149, %r4148, 8;
	shf.r.wrap.b32 	%r4543, %r4148, %r4149, 8;
	mov.b64 	%rd5358, {%r4543, %r4542};
	shr.u64 	%rd5359, %rd4785, 7;
	xor.b64  	%rd5360, %rd5357, %rd5359;
	xor.b64  	%rd5361, %rd5360, %rd5358;
	add.s64 	%rd5362, %rd4889, %rd4772;
	add.s64 	%rd5363, %rd5362, %rd5356;
	add.s64 	%rd5364, %rd5363, %rd5361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4544,%dummy}, %rd5351;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4545}, %rd5351;
	}
	shf.r.wrap.b32 	%r4546, %r4545, %r4544, 19;
	shf.r.wrap.b32 	%r4547, %r4544, %r4545, 19;
	mov.b64 	%rd5365, {%r4547, %r4546};
	shf.l.wrap.b32 	%r4548, %r4544, %r4545, 3;
	shf.l.wrap.b32 	%r4549, %r4545, %r4544, 3;
	mov.b64 	%rd5366, {%r4549, %r4548};
	shr.u64 	%rd5367, %rd5351, 6;
	xor.b64  	%rd5368, %rd5365, %rd5367;
	xor.b64  	%rd5369, %rd5368, %rd5366;
	shf.r.wrap.b32 	%r4550, %r4159, %r4158, 1;
	shf.r.wrap.b32 	%r4551, %r4158, %r4159, 1;
	mov.b64 	%rd5370, {%r4551, %r4550};
	shf.r.wrap.b32 	%r4552, %r4159, %r4158, 8;
	shf.r.wrap.b32 	%r4553, %r4158, %r4159, 8;
	mov.b64 	%rd5371, {%r4553, %r4552};
	shr.u64 	%rd5372, %rd4798, 7;
	xor.b64  	%rd5373, %rd5370, %rd5372;
	xor.b64  	%rd5374, %rd5373, %rd5371;
	add.s64 	%rd5375, %rd4902, %rd4785;
	add.s64 	%rd5376, %rd5375, %rd5369;
	add.s64 	%rd5377, %rd5376, %rd5374;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4554,%dummy}, %rd5364;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4555}, %rd5364;
	}
	shf.r.wrap.b32 	%r4556, %r4555, %r4554, 19;
	shf.r.wrap.b32 	%r4557, %r4554, %r4555, 19;
	mov.b64 	%rd5378, {%r4557, %r4556};
	shf.l.wrap.b32 	%r4558, %r4554, %r4555, 3;
	shf.l.wrap.b32 	%r4559, %r4555, %r4554, 3;
	mov.b64 	%rd5379, {%r4559, %r4558};
	shr.u64 	%rd5380, %rd5364, 6;
	xor.b64  	%rd5381, %rd5378, %rd5380;
	xor.b64  	%rd5382, %rd5381, %rd5379;
	shf.r.wrap.b32 	%r4560, %r4169, %r4168, 1;
	shf.r.wrap.b32 	%r4561, %r4168, %r4169, 1;
	mov.b64 	%rd5383, {%r4561, %r4560};
	shf.r.wrap.b32 	%r4562, %r4169, %r4168, 8;
	shf.r.wrap.b32 	%r4563, %r4168, %r4169, 8;
	mov.b64 	%rd5384, {%r4563, %r4562};
	shr.u64 	%rd5385, %rd4811, 7;
	xor.b64  	%rd5386, %rd5383, %rd5385;
	xor.b64  	%rd5387, %rd5386, %rd5384;
	add.s64 	%rd5388, %rd4915, %rd4798;
	add.s64 	%rd5389, %rd5388, %rd5382;
	add.s64 	%rd5390, %rd5389, %rd5387;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4564,%dummy}, %rd5377;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4565}, %rd5377;
	}
	shf.r.wrap.b32 	%r4566, %r4565, %r4564, 19;
	shf.r.wrap.b32 	%r4567, %r4564, %r4565, 19;
	mov.b64 	%rd5391, {%r4567, %r4566};
	shf.l.wrap.b32 	%r4568, %r4564, %r4565, 3;
	shf.l.wrap.b32 	%r4569, %r4565, %r4564, 3;
	mov.b64 	%rd5392, {%r4569, %r4568};
	shr.u64 	%rd5393, %rd5377, 6;
	xor.b64  	%rd5394, %rd5391, %rd5393;
	xor.b64  	%rd5395, %rd5394, %rd5392;
	shf.r.wrap.b32 	%r4570, %r4179, %r4178, 1;
	shf.r.wrap.b32 	%r4571, %r4178, %r4179, 1;
	mov.b64 	%rd5396, {%r4571, %r4570};
	shf.r.wrap.b32 	%r4572, %r4179, %r4178, 8;
	shf.r.wrap.b32 	%r4573, %r4178, %r4179, 8;
	mov.b64 	%rd5397, {%r4573, %r4572};
	shr.u64 	%rd5398, %rd4824, 7;
	xor.b64  	%rd5399, %rd5396, %rd5398;
	xor.b64  	%rd5400, %rd5399, %rd5397;
	add.s64 	%rd5401, %rd4928, %rd4811;
	add.s64 	%rd5402, %rd5401, %rd5395;
	add.s64 	%rd5403, %rd5402, %rd5400;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4574,%dummy}, %rd5390;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4575}, %rd5390;
	}
	shf.r.wrap.b32 	%r4576, %r4575, %r4574, 19;
	shf.r.wrap.b32 	%r4577, %r4574, %r4575, 19;
	mov.b64 	%rd5404, {%r4577, %r4576};
	shf.l.wrap.b32 	%r4578, %r4574, %r4575, 3;
	shf.l.wrap.b32 	%r4579, %r4575, %r4574, 3;
	mov.b64 	%rd5405, {%r4579, %r4578};
	shr.u64 	%rd5406, %rd5390, 6;
	xor.b64  	%rd5407, %rd5404, %rd5406;
	xor.b64  	%rd5408, %rd5407, %rd5405;
	shf.r.wrap.b32 	%r4580, %r4189, %r4188, 1;
	shf.r.wrap.b32 	%r4581, %r4188, %r4189, 1;
	mov.b64 	%rd5409, {%r4581, %r4580};
	shf.r.wrap.b32 	%r4582, %r4189, %r4188, 8;
	shf.r.wrap.b32 	%r4583, %r4188, %r4189, 8;
	mov.b64 	%rd5410, {%r4583, %r4582};
	shr.u64 	%rd5411, %rd4837, 7;
	xor.b64  	%rd5412, %rd5409, %rd5411;
	xor.b64  	%rd5413, %rd5412, %rd5410;
	add.s64 	%rd5414, %rd5325, %rd4824;
	add.s64 	%rd5415, %rd5414, %rd5408;
	add.s64 	%rd5416, %rd5415, %rd5413;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4584,%dummy}, %rd5403;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4585}, %rd5403;
	}
	shf.r.wrap.b32 	%r4586, %r4585, %r4584, 19;
	shf.r.wrap.b32 	%r4587, %r4584, %r4585, 19;
	mov.b64 	%rd5417, {%r4587, %r4586};
	shf.l.wrap.b32 	%r4588, %r4584, %r4585, 3;
	shf.l.wrap.b32 	%r4589, %r4585, %r4584, 3;
	mov.b64 	%rd5418, {%r4589, %r4588};
	shr.u64 	%rd5419, %rd5403, 6;
	xor.b64  	%rd5420, %rd5417, %rd5419;
	xor.b64  	%rd5421, %rd5420, %rd5418;
	shf.r.wrap.b32 	%r4590, %r4199, %r4198, 1;
	shf.r.wrap.b32 	%r4591, %r4198, %r4199, 1;
	mov.b64 	%rd5422, {%r4591, %r4590};
	shf.r.wrap.b32 	%r4592, %r4199, %r4198, 8;
	shf.r.wrap.b32 	%r4593, %r4198, %r4199, 8;
	mov.b64 	%rd5423, {%r4593, %r4592};
	shr.u64 	%rd5424, %rd4850, 7;
	xor.b64  	%rd5425, %rd5422, %rd5424;
	xor.b64  	%rd5426, %rd5425, %rd5423;
	add.s64 	%rd5427, %rd5338, %rd4837;
	add.s64 	%rd5428, %rd5427, %rd5421;
	add.s64 	%rd5429, %rd5428, %rd5426;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4594,%dummy}, %rd5416;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4595}, %rd5416;
	}
	shf.r.wrap.b32 	%r4596, %r4595, %r4594, 19;
	shf.r.wrap.b32 	%r4597, %r4594, %r4595, 19;
	mov.b64 	%rd5430, {%r4597, %r4596};
	shf.l.wrap.b32 	%r4598, %r4594, %r4595, 3;
	shf.l.wrap.b32 	%r4599, %r4595, %r4594, 3;
	mov.b64 	%rd5431, {%r4599, %r4598};
	shr.u64 	%rd5432, %rd5416, 6;
	xor.b64  	%rd5433, %rd5430, %rd5432;
	xor.b64  	%rd5434, %rd5433, %rd5431;
	shf.r.wrap.b32 	%r4600, %r4209, %r4208, 1;
	shf.r.wrap.b32 	%r4601, %r4208, %r4209, 1;
	mov.b64 	%rd5435, {%r4601, %r4600};
	shf.r.wrap.b32 	%r4602, %r4209, %r4208, 8;
	shf.r.wrap.b32 	%r4603, %r4208, %r4209, 8;
	mov.b64 	%rd5436, {%r4603, %r4602};
	shr.u64 	%rd5437, %rd4863, 7;
	xor.b64  	%rd5438, %rd5435, %rd5437;
	xor.b64  	%rd5439, %rd5438, %rd5436;
	add.s64 	%rd5440, %rd5351, %rd4850;
	add.s64 	%rd5441, %rd5440, %rd5434;
	add.s64 	%rd5442, %rd5441, %rd5439;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4604,%dummy}, %rd5429;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4605}, %rd5429;
	}
	shf.r.wrap.b32 	%r4606, %r4605, %r4604, 19;
	shf.r.wrap.b32 	%r4607, %r4604, %r4605, 19;
	mov.b64 	%rd5443, {%r4607, %r4606};
	shf.l.wrap.b32 	%r4608, %r4604, %r4605, 3;
	shf.l.wrap.b32 	%r4609, %r4605, %r4604, 3;
	mov.b64 	%rd5444, {%r4609, %r4608};
	shr.u64 	%rd5445, %rd5429, 6;
	xor.b64  	%rd5446, %rd5443, %rd5445;
	xor.b64  	%rd5447, %rd5446, %rd5444;
	shf.r.wrap.b32 	%r4610, %r4219, %r4218, 1;
	shf.r.wrap.b32 	%r4611, %r4218, %r4219, 1;
	mov.b64 	%rd5448, {%r4611, %r4610};
	shf.r.wrap.b32 	%r4612, %r4219, %r4218, 8;
	shf.r.wrap.b32 	%r4613, %r4218, %r4219, 8;
	mov.b64 	%rd5449, {%r4613, %r4612};
	shr.u64 	%rd5450, %rd4876, 7;
	xor.b64  	%rd5451, %rd5448, %rd5450;
	xor.b64  	%rd5452, %rd5451, %rd5449;
	add.s64 	%rd5453, %rd5364, %rd4863;
	add.s64 	%rd5454, %rd5453, %rd5447;
	add.s64 	%rd5455, %rd5454, %rd5452;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4614,%dummy}, %rd5442;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4615}, %rd5442;
	}
	shf.r.wrap.b32 	%r4616, %r4615, %r4614, 19;
	shf.r.wrap.b32 	%r4617, %r4614, %r4615, 19;
	mov.b64 	%rd5456, {%r4617, %r4616};
	shf.l.wrap.b32 	%r4618, %r4614, %r4615, 3;
	shf.l.wrap.b32 	%r4619, %r4615, %r4614, 3;
	mov.b64 	%rd5457, {%r4619, %r4618};
	shr.u64 	%rd5458, %rd5442, 6;
	xor.b64  	%rd5459, %rd5456, %rd5458;
	xor.b64  	%rd5460, %rd5459, %rd5457;
	shf.r.wrap.b32 	%r4620, %r4229, %r4228, 1;
	shf.r.wrap.b32 	%r4621, %r4228, %r4229, 1;
	mov.b64 	%rd5461, {%r4621, %r4620};
	shf.r.wrap.b32 	%r4622, %r4229, %r4228, 8;
	shf.r.wrap.b32 	%r4623, %r4228, %r4229, 8;
	mov.b64 	%rd5462, {%r4623, %r4622};
	shr.u64 	%rd5463, %rd4889, 7;
	xor.b64  	%rd5464, %rd5461, %rd5463;
	xor.b64  	%rd5465, %rd5464, %rd5462;
	add.s64 	%rd5466, %rd5377, %rd4876;
	add.s64 	%rd5467, %rd5466, %rd5460;
	add.s64 	%rd5468, %rd5467, %rd5465;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4624,%dummy}, %rd5455;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4625}, %rd5455;
	}
	shf.r.wrap.b32 	%r4626, %r4625, %r4624, 19;
	shf.r.wrap.b32 	%r4627, %r4624, %r4625, 19;
	mov.b64 	%rd5469, {%r4627, %r4626};
	shf.l.wrap.b32 	%r4628, %r4624, %r4625, 3;
	shf.l.wrap.b32 	%r4629, %r4625, %r4624, 3;
	mov.b64 	%rd5470, {%r4629, %r4628};
	shr.u64 	%rd5471, %rd5455, 6;
	xor.b64  	%rd5472, %rd5469, %rd5471;
	xor.b64  	%rd5473, %rd5472, %rd5470;
	shf.r.wrap.b32 	%r4630, %r4239, %r4238, 1;
	shf.r.wrap.b32 	%r4631, %r4238, %r4239, 1;
	mov.b64 	%rd5474, {%r4631, %r4630};
	shf.r.wrap.b32 	%r4632, %r4239, %r4238, 8;
	shf.r.wrap.b32 	%r4633, %r4238, %r4239, 8;
	mov.b64 	%rd5475, {%r4633, %r4632};
	shr.u64 	%rd5476, %rd4902, 7;
	xor.b64  	%rd5477, %rd5474, %rd5476;
	xor.b64  	%rd5478, %rd5477, %rd5475;
	add.s64 	%rd5479, %rd5390, %rd4889;
	add.s64 	%rd5480, %rd5479, %rd5473;
	add.s64 	%rd5481, %rd5480, %rd5478;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4634,%dummy}, %rd5468;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4635}, %rd5468;
	}
	shf.r.wrap.b32 	%r4636, %r4635, %r4634, 19;
	shf.r.wrap.b32 	%r4637, %r4634, %r4635, 19;
	mov.b64 	%rd5482, {%r4637, %r4636};
	shf.l.wrap.b32 	%r4638, %r4634, %r4635, 3;
	shf.l.wrap.b32 	%r4639, %r4635, %r4634, 3;
	mov.b64 	%rd5483, {%r4639, %r4638};
	shr.u64 	%rd5484, %rd5468, 6;
	xor.b64  	%rd5485, %rd5482, %rd5484;
	xor.b64  	%rd5486, %rd5485, %rd5483;
	shf.r.wrap.b32 	%r4640, %r4505, %r4504, 1;
	shf.r.wrap.b32 	%r4641, %r4504, %r4505, 1;
	mov.b64 	%rd5487, {%r4641, %r4640};
	shf.r.wrap.b32 	%r4642, %r4505, %r4504, 8;
	shf.r.wrap.b32 	%r4643, %r4504, %r4505, 8;
	mov.b64 	%rd5488, {%r4643, %r4642};
	shr.u64 	%rd5489, %rd4915, 7;
	xor.b64  	%rd5490, %rd5487, %rd5489;
	xor.b64  	%rd5491, %rd5490, %rd5488;
	add.s64 	%rd5492, %rd5403, %rd4902;
	add.s64 	%rd5493, %rd5492, %rd5486;
	add.s64 	%rd5494, %rd5493, %rd5491;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4644,%dummy}, %rd5481;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4645}, %rd5481;
	}
	shf.r.wrap.b32 	%r4646, %r4645, %r4644, 19;
	shf.r.wrap.b32 	%r4647, %r4644, %r4645, 19;
	mov.b64 	%rd5495, {%r4647, %r4646};
	shf.l.wrap.b32 	%r4648, %r4644, %r4645, 3;
	shf.l.wrap.b32 	%r4649, %r4645, %r4644, 3;
	mov.b64 	%rd5496, {%r4649, %r4648};
	shr.u64 	%rd5497, %rd5481, 6;
	xor.b64  	%rd5498, %rd5495, %rd5497;
	xor.b64  	%rd5499, %rd5498, %rd5496;
	shf.r.wrap.b32 	%r4650, %r4515, %r4514, 1;
	shf.r.wrap.b32 	%r4651, %r4514, %r4515, 1;
	mov.b64 	%rd5500, {%r4651, %r4650};
	shf.r.wrap.b32 	%r4652, %r4515, %r4514, 8;
	shf.r.wrap.b32 	%r4653, %r4514, %r4515, 8;
	mov.b64 	%rd5501, {%r4653, %r4652};
	shr.u64 	%rd5502, %rd4928, 7;
	xor.b64  	%rd5503, %rd5500, %rd5502;
	xor.b64  	%rd5504, %rd5503, %rd5501;
	add.s64 	%rd5505, %rd5416, %rd4915;
	add.s64 	%rd5506, %rd5505, %rd5499;
	add.s64 	%rd5507, %rd5506, %rd5504;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4654,%dummy}, %rd5494;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4655}, %rd5494;
	}
	shf.r.wrap.b32 	%r4656, %r4655, %r4654, 19;
	shf.r.wrap.b32 	%r4657, %r4654, %r4655, 19;
	mov.b64 	%rd5508, {%r4657, %r4656};
	shf.l.wrap.b32 	%r4658, %r4654, %r4655, 3;
	shf.l.wrap.b32 	%r4659, %r4655, %r4654, 3;
	mov.b64 	%rd5509, {%r4659, %r4658};
	shr.u64 	%rd5510, %rd5494, 6;
	xor.b64  	%rd5511, %rd5508, %rd5510;
	xor.b64  	%rd5512, %rd5511, %rd5509;
	shf.r.wrap.b32 	%r4660, %r4525, %r4524, 1;
	shf.r.wrap.b32 	%r4661, %r4524, %r4525, 1;
	mov.b64 	%rd5513, {%r4661, %r4660};
	shf.r.wrap.b32 	%r4662, %r4525, %r4524, 8;
	shf.r.wrap.b32 	%r4663, %r4524, %r4525, 8;
	mov.b64 	%rd5514, {%r4663, %r4662};
	shr.u64 	%rd5515, %rd5325, 7;
	xor.b64  	%rd5516, %rd5513, %rd5515;
	xor.b64  	%rd5517, %rd5516, %rd5514;
	add.s64 	%rd5518, %rd5429, %rd4928;
	add.s64 	%rd5519, %rd5518, %rd5512;
	add.s64 	%rd5520, %rd5519, %rd5517;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4664,%dummy}, %rd5301;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4665}, %rd5301;
	}
	shf.r.wrap.b32 	%r4666, %r4665, %r4664, 14;
	shf.r.wrap.b32 	%r4667, %r4664, %r4665, 14;
	mov.b64 	%rd5521, {%r4667, %r4666};
	shf.r.wrap.b32 	%r4668, %r4665, %r4664, 18;
	shf.r.wrap.b32 	%r4669, %r4664, %r4665, 18;
	mov.b64 	%rd5522, {%r4669, %r4668};
	xor.b64  	%rd5523, %rd5522, %rd5521;
	shf.l.wrap.b32 	%r4670, %r4664, %r4665, 23;
	shf.l.wrap.b32 	%r4671, %r4665, %r4664, 23;
	mov.b64 	%rd5524, {%r4671, %r4670};
	xor.b64  	%rd5525, %rd5523, %rd5524;
	xor.b64  	%rd5526, %rd5277, %rd5253;
	and.b64  	%rd5527, %rd5526, %rd5301;
	xor.b64  	%rd5528, %rd5527, %rd5253;
	add.s64 	%rd5529, %rd5528, %rd5229;
	add.s64 	%rd5530, %rd5529, %rd5325;
	add.s64 	%rd5531, %rd5530, %rd8789;
	add.s64 	%rd5532, %rd5531, %rd5525;
	add.s64 	%rd5533, %rd5532, %rd5240;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4672,%dummy}, %rd5312;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4673}, %rd5312;
	}
	shf.r.wrap.b32 	%r4674, %r4673, %r4672, 28;
	shf.r.wrap.b32 	%r4675, %r4672, %r4673, 28;
	mov.b64 	%rd5534, {%r4675, %r4674};
	shf.l.wrap.b32 	%r4676, %r4672, %r4673, 30;
	shf.l.wrap.b32 	%r4677, %r4673, %r4672, 30;
	mov.b64 	%rd5535, {%r4677, %r4676};
	xor.b64  	%rd5536, %rd5535, %rd5534;
	shf.l.wrap.b32 	%r4678, %r4672, %r4673, 25;
	shf.l.wrap.b32 	%r4679, %r4673, %r4672, 25;
	mov.b64 	%rd5537, {%r4679, %r4678};
	xor.b64  	%rd5538, %rd5536, %rd5537;
	xor.b64  	%rd5539, %rd5312, %rd5264;
	xor.b64  	%rd5540, %rd5312, %rd5288;
	and.b64  	%rd5541, %rd5540, %rd5539;
	xor.b64  	%rd5542, %rd5541, %rd5312;
	add.s64 	%rd5543, %rd5532, %rd5542;
	add.s64 	%rd5544, %rd5543, %rd5538;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4680,%dummy}, %rd5533;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4681}, %rd5533;
	}
	shf.r.wrap.b32 	%r4682, %r4681, %r4680, 14;
	shf.r.wrap.b32 	%r4683, %r4680, %r4681, 14;
	mov.b64 	%rd5545, {%r4683, %r4682};
	shf.r.wrap.b32 	%r4684, %r4681, %r4680, 18;
	shf.r.wrap.b32 	%r4685, %r4680, %r4681, 18;
	mov.b64 	%rd5546, {%r4685, %r4684};
	xor.b64  	%rd5547, %rd5546, %rd5545;
	shf.l.wrap.b32 	%r4686, %r4680, %r4681, 23;
	shf.l.wrap.b32 	%r4687, %r4681, %r4680, 23;
	mov.b64 	%rd5548, {%r4687, %r4686};
	xor.b64  	%rd5549, %rd5547, %rd5548;
	xor.b64  	%rd5550, %rd5301, %rd5277;
	and.b64  	%rd5551, %rd5533, %rd5550;
	xor.b64  	%rd5552, %rd5551, %rd5277;
	add.s64 	%rd5553, %rd5338, %rd5253;
	add.s64 	%rd5554, %rd5553, %rd8788;
	add.s64 	%rd5555, %rd5554, %rd5552;
	add.s64 	%rd5556, %rd5555, %rd5549;
	add.s64 	%rd5557, %rd5556, %rd5264;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4688,%dummy}, %rd5544;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4689}, %rd5544;
	}
	shf.r.wrap.b32 	%r4690, %r4689, %r4688, 28;
	shf.r.wrap.b32 	%r4691, %r4688, %r4689, 28;
	mov.b64 	%rd5558, {%r4691, %r4690};
	shf.l.wrap.b32 	%r4692, %r4688, %r4689, 30;
	shf.l.wrap.b32 	%r4693, %r4689, %r4688, 30;
	mov.b64 	%rd5559, {%r4693, %r4692};
	xor.b64  	%rd5560, %rd5559, %rd5558;
	shf.l.wrap.b32 	%r4694, %r4688, %r4689, 25;
	shf.l.wrap.b32 	%r4695, %r4689, %r4688, 25;
	mov.b64 	%rd5561, {%r4695, %r4694};
	xor.b64  	%rd5562, %rd5560, %rd5561;
	xor.b64  	%rd5563, %rd5544, %rd5288;
	xor.b64  	%rd5564, %rd5544, %rd5312;
	and.b64  	%rd5565, %rd5564, %rd5563;
	xor.b64  	%rd5566, %rd5565, %rd5544;
	add.s64 	%rd5567, %rd5556, %rd5566;
	add.s64 	%rd5568, %rd5567, %rd5562;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4696,%dummy}, %rd5557;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4697}, %rd5557;
	}
	shf.r.wrap.b32 	%r4698, %r4697, %r4696, 14;
	shf.r.wrap.b32 	%r4699, %r4696, %r4697, 14;
	mov.b64 	%rd5569, {%r4699, %r4698};
	shf.r.wrap.b32 	%r4700, %r4697, %r4696, 18;
	shf.r.wrap.b32 	%r4701, %r4696, %r4697, 18;
	mov.b64 	%rd5570, {%r4701, %r4700};
	xor.b64  	%rd5571, %rd5570, %rd5569;
	shf.l.wrap.b32 	%r4702, %r4696, %r4697, 23;
	shf.l.wrap.b32 	%r4703, %r4697, %r4696, 23;
	mov.b64 	%rd5572, {%r4703, %r4702};
	xor.b64  	%rd5573, %rd5571, %rd5572;
	xor.b64  	%rd5574, %rd5533, %rd5301;
	and.b64  	%rd5575, %rd5557, %rd5574;
	xor.b64  	%rd5576, %rd5575, %rd5301;
	add.s64 	%rd5577, %rd5351, %rd5277;
	add.s64 	%rd5578, %rd5577, %rd8787;
	add.s64 	%rd5579, %rd5578, %rd5576;
	add.s64 	%rd5580, %rd5579, %rd5573;
	add.s64 	%rd5581, %rd5580, %rd5288;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4704,%dummy}, %rd5568;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4705}, %rd5568;
	}
	shf.r.wrap.b32 	%r4706, %r4705, %r4704, 28;
	shf.r.wrap.b32 	%r4707, %r4704, %r4705, 28;
	mov.b64 	%rd5582, {%r4707, %r4706};
	shf.l.wrap.b32 	%r4708, %r4704, %r4705, 30;
	shf.l.wrap.b32 	%r4709, %r4705, %r4704, 30;
	mov.b64 	%rd5583, {%r4709, %r4708};
	xor.b64  	%rd5584, %rd5583, %rd5582;
	shf.l.wrap.b32 	%r4710, %r4704, %r4705, 25;
	shf.l.wrap.b32 	%r4711, %r4705, %r4704, 25;
	mov.b64 	%rd5585, {%r4711, %r4710};
	xor.b64  	%rd5586, %rd5584, %rd5585;
	xor.b64  	%rd5587, %rd5568, %rd5312;
	xor.b64  	%rd5588, %rd5568, %rd5544;
	and.b64  	%rd5589, %rd5588, %rd5587;
	xor.b64  	%rd5590, %rd5589, %rd5568;
	add.s64 	%rd5591, %rd5580, %rd5590;
	add.s64 	%rd5592, %rd5591, %rd5586;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4712,%dummy}, %rd5581;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4713}, %rd5581;
	}
	shf.r.wrap.b32 	%r4714, %r4713, %r4712, 14;
	shf.r.wrap.b32 	%r4715, %r4712, %r4713, 14;
	mov.b64 	%rd5593, {%r4715, %r4714};
	shf.r.wrap.b32 	%r4716, %r4713, %r4712, 18;
	shf.r.wrap.b32 	%r4717, %r4712, %r4713, 18;
	mov.b64 	%rd5594, {%r4717, %r4716};
	xor.b64  	%rd5595, %rd5594, %rd5593;
	shf.l.wrap.b32 	%r4718, %r4712, %r4713, 23;
	shf.l.wrap.b32 	%r4719, %r4713, %r4712, 23;
	mov.b64 	%rd5596, {%r4719, %r4718};
	xor.b64  	%rd5597, %rd5595, %rd5596;
	xor.b64  	%rd5598, %rd5557, %rd5533;
	and.b64  	%rd5599, %rd5581, %rd5598;
	xor.b64  	%rd5600, %rd5599, %rd5533;
	add.s64 	%rd5601, %rd5364, %rd5301;
	add.s64 	%rd5602, %rd5601, %rd8786;
	add.s64 	%rd5603, %rd5602, %rd5600;
	add.s64 	%rd5604, %rd5603, %rd5597;
	add.s64 	%rd5605, %rd5604, %rd5312;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4720,%dummy}, %rd5592;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4721}, %rd5592;
	}
	shf.r.wrap.b32 	%r4722, %r4721, %r4720, 28;
	shf.r.wrap.b32 	%r4723, %r4720, %r4721, 28;
	mov.b64 	%rd5606, {%r4723, %r4722};
	shf.l.wrap.b32 	%r4724, %r4720, %r4721, 30;
	shf.l.wrap.b32 	%r4725, %r4721, %r4720, 30;
	mov.b64 	%rd5607, {%r4725, %r4724};
	xor.b64  	%rd5608, %rd5607, %rd5606;
	shf.l.wrap.b32 	%r4726, %r4720, %r4721, 25;
	shf.l.wrap.b32 	%r4727, %r4721, %r4720, 25;
	mov.b64 	%rd5609, {%r4727, %r4726};
	xor.b64  	%rd5610, %rd5608, %rd5609;
	xor.b64  	%rd5611, %rd5592, %rd5544;
	xor.b64  	%rd5612, %rd5592, %rd5568;
	and.b64  	%rd5613, %rd5612, %rd5611;
	xor.b64  	%rd5614, %rd5613, %rd5592;
	add.s64 	%rd5615, %rd5604, %rd5614;
	add.s64 	%rd5616, %rd5615, %rd5610;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4728,%dummy}, %rd5605;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4729}, %rd5605;
	}
	shf.r.wrap.b32 	%r4730, %r4729, %r4728, 14;
	shf.r.wrap.b32 	%r4731, %r4728, %r4729, 14;
	mov.b64 	%rd5617, {%r4731, %r4730};
	shf.r.wrap.b32 	%r4732, %r4729, %r4728, 18;
	shf.r.wrap.b32 	%r4733, %r4728, %r4729, 18;
	mov.b64 	%rd5618, {%r4733, %r4732};
	xor.b64  	%rd5619, %rd5618, %rd5617;
	shf.l.wrap.b32 	%r4734, %r4728, %r4729, 23;
	shf.l.wrap.b32 	%r4735, %r4729, %r4728, 23;
	mov.b64 	%rd5620, {%r4735, %r4734};
	xor.b64  	%rd5621, %rd5619, %rd5620;
	xor.b64  	%rd5622, %rd5581, %rd5557;
	and.b64  	%rd5623, %rd5605, %rd5622;
	xor.b64  	%rd5624, %rd5623, %rd5557;
	add.s64 	%rd5625, %rd5533, %rd5377;
	add.s64 	%rd5626, %rd5625, %rd8785;
	add.s64 	%rd5627, %rd5626, %rd5624;
	add.s64 	%rd5628, %rd5627, %rd5621;
	add.s64 	%rd5629, %rd5628, %rd5544;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4736,%dummy}, %rd5616;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4737}, %rd5616;
	}
	shf.r.wrap.b32 	%r4738, %r4737, %r4736, 28;
	shf.r.wrap.b32 	%r4739, %r4736, %r4737, 28;
	mov.b64 	%rd5630, {%r4739, %r4738};
	shf.l.wrap.b32 	%r4740, %r4736, %r4737, 30;
	shf.l.wrap.b32 	%r4741, %r4737, %r4736, 30;
	mov.b64 	%rd5631, {%r4741, %r4740};
	xor.b64  	%rd5632, %rd5631, %rd5630;
	shf.l.wrap.b32 	%r4742, %r4736, %r4737, 25;
	shf.l.wrap.b32 	%r4743, %r4737, %r4736, 25;
	mov.b64 	%rd5633, {%r4743, %r4742};
	xor.b64  	%rd5634, %rd5632, %rd5633;
	xor.b64  	%rd5635, %rd5616, %rd5568;
	xor.b64  	%rd5636, %rd5616, %rd5592;
	and.b64  	%rd5637, %rd5636, %rd5635;
	xor.b64  	%rd5638, %rd5637, %rd5616;
	add.s64 	%rd5639, %rd5628, %rd5638;
	add.s64 	%rd5640, %rd5639, %rd5634;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4744,%dummy}, %rd5629;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4745}, %rd5629;
	}
	shf.r.wrap.b32 	%r4746, %r4745, %r4744, 14;
	shf.r.wrap.b32 	%r4747, %r4744, %r4745, 14;
	mov.b64 	%rd5641, {%r4747, %r4746};
	shf.r.wrap.b32 	%r4748, %r4745, %r4744, 18;
	shf.r.wrap.b32 	%r4749, %r4744, %r4745, 18;
	mov.b64 	%rd5642, {%r4749, %r4748};
	xor.b64  	%rd5643, %rd5642, %rd5641;
	shf.l.wrap.b32 	%r4750, %r4744, %r4745, 23;
	shf.l.wrap.b32 	%r4751, %r4745, %r4744, 23;
	mov.b64 	%rd5644, {%r4751, %r4750};
	xor.b64  	%rd5645, %rd5643, %rd5644;
	xor.b64  	%rd5646, %rd5605, %rd5581;
	and.b64  	%rd5647, %rd5629, %rd5646;
	xor.b64  	%rd5648, %rd5647, %rd5581;
	add.s64 	%rd5649, %rd5557, %rd5390;
	add.s64 	%rd5650, %rd5649, %rd8784;
	add.s64 	%rd5651, %rd5650, %rd5648;
	add.s64 	%rd5652, %rd5651, %rd5645;
	add.s64 	%rd5653, %rd5652, %rd5568;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4752,%dummy}, %rd5640;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4753}, %rd5640;
	}
	shf.r.wrap.b32 	%r4754, %r4753, %r4752, 28;
	shf.r.wrap.b32 	%r4755, %r4752, %r4753, 28;
	mov.b64 	%rd5654, {%r4755, %r4754};
	shf.l.wrap.b32 	%r4756, %r4752, %r4753, 30;
	shf.l.wrap.b32 	%r4757, %r4753, %r4752, 30;
	mov.b64 	%rd5655, {%r4757, %r4756};
	xor.b64  	%rd5656, %rd5655, %rd5654;
	shf.l.wrap.b32 	%r4758, %r4752, %r4753, 25;
	shf.l.wrap.b32 	%r4759, %r4753, %r4752, 25;
	mov.b64 	%rd5657, {%r4759, %r4758};
	xor.b64  	%rd5658, %rd5656, %rd5657;
	xor.b64  	%rd5659, %rd5640, %rd5592;
	xor.b64  	%rd5660, %rd5640, %rd5616;
	and.b64  	%rd5661, %rd5660, %rd5659;
	xor.b64  	%rd5662, %rd5661, %rd5640;
	add.s64 	%rd5663, %rd5652, %rd5662;
	add.s64 	%rd5664, %rd5663, %rd5658;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4760,%dummy}, %rd5653;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4761}, %rd5653;
	}
	shf.r.wrap.b32 	%r4762, %r4761, %r4760, 14;
	shf.r.wrap.b32 	%r4763, %r4760, %r4761, 14;
	mov.b64 	%rd5665, {%r4763, %r4762};
	shf.r.wrap.b32 	%r4764, %r4761, %r4760, 18;
	shf.r.wrap.b32 	%r4765, %r4760, %r4761, 18;
	mov.b64 	%rd5666, {%r4765, %r4764};
	xor.b64  	%rd5667, %rd5666, %rd5665;
	shf.l.wrap.b32 	%r4766, %r4760, %r4761, 23;
	shf.l.wrap.b32 	%r4767, %r4761, %r4760, 23;
	mov.b64 	%rd5668, {%r4767, %r4766};
	xor.b64  	%rd5669, %rd5667, %rd5668;
	xor.b64  	%rd5670, %rd5629, %rd5605;
	and.b64  	%rd5671, %rd5653, %rd5670;
	xor.b64  	%rd5672, %rd5671, %rd5605;
	add.s64 	%rd5673, %rd5581, %rd5403;
	add.s64 	%rd5674, %rd5673, %rd8783;
	add.s64 	%rd5675, %rd5674, %rd5672;
	add.s64 	%rd5676, %rd5675, %rd5669;
	add.s64 	%rd5677, %rd5676, %rd5592;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4768,%dummy}, %rd5664;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4769}, %rd5664;
	}
	shf.r.wrap.b32 	%r4770, %r4769, %r4768, 28;
	shf.r.wrap.b32 	%r4771, %r4768, %r4769, 28;
	mov.b64 	%rd5678, {%r4771, %r4770};
	shf.l.wrap.b32 	%r4772, %r4768, %r4769, 30;
	shf.l.wrap.b32 	%r4773, %r4769, %r4768, 30;
	mov.b64 	%rd5679, {%r4773, %r4772};
	xor.b64  	%rd5680, %rd5679, %rd5678;
	shf.l.wrap.b32 	%r4774, %r4768, %r4769, 25;
	shf.l.wrap.b32 	%r4775, %r4769, %r4768, 25;
	mov.b64 	%rd5681, {%r4775, %r4774};
	xor.b64  	%rd5682, %rd5680, %rd5681;
	xor.b64  	%rd5683, %rd5664, %rd5616;
	xor.b64  	%rd5684, %rd5664, %rd5640;
	and.b64  	%rd5685, %rd5684, %rd5683;
	xor.b64  	%rd5686, %rd5685, %rd5664;
	add.s64 	%rd5687, %rd5676, %rd5686;
	add.s64 	%rd5688, %rd5687, %rd5682;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4776,%dummy}, %rd5677;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4777}, %rd5677;
	}
	shf.r.wrap.b32 	%r4778, %r4777, %r4776, 14;
	shf.r.wrap.b32 	%r4779, %r4776, %r4777, 14;
	mov.b64 	%rd5689, {%r4779, %r4778};
	shf.r.wrap.b32 	%r4780, %r4777, %r4776, 18;
	shf.r.wrap.b32 	%r4781, %r4776, %r4777, 18;
	mov.b64 	%rd5690, {%r4781, %r4780};
	xor.b64  	%rd5691, %rd5690, %rd5689;
	shf.l.wrap.b32 	%r4782, %r4776, %r4777, 23;
	shf.l.wrap.b32 	%r4783, %r4777, %r4776, 23;
	mov.b64 	%rd5692, {%r4783, %r4782};
	xor.b64  	%rd5693, %rd5691, %rd5692;
	xor.b64  	%rd5694, %rd5653, %rd5629;
	and.b64  	%rd5695, %rd5677, %rd5694;
	xor.b64  	%rd5696, %rd5695, %rd5629;
	add.s64 	%rd5697, %rd5605, %rd5416;
	add.s64 	%rd5698, %rd5697, %rd8782;
	add.s64 	%rd5699, %rd5698, %rd5696;
	add.s64 	%rd5700, %rd5699, %rd5693;
	add.s64 	%rd5701, %rd5700, %rd5616;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4784,%dummy}, %rd5688;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4785}, %rd5688;
	}
	shf.r.wrap.b32 	%r4786, %r4785, %r4784, 28;
	shf.r.wrap.b32 	%r4787, %r4784, %r4785, 28;
	mov.b64 	%rd5702, {%r4787, %r4786};
	shf.l.wrap.b32 	%r4788, %r4784, %r4785, 30;
	shf.l.wrap.b32 	%r4789, %r4785, %r4784, 30;
	mov.b64 	%rd5703, {%r4789, %r4788};
	xor.b64  	%rd5704, %rd5703, %rd5702;
	shf.l.wrap.b32 	%r4790, %r4784, %r4785, 25;
	shf.l.wrap.b32 	%r4791, %r4785, %r4784, 25;
	mov.b64 	%rd5705, {%r4791, %r4790};
	xor.b64  	%rd5706, %rd5704, %rd5705;
	xor.b64  	%rd5707, %rd5688, %rd5640;
	xor.b64  	%rd5708, %rd5688, %rd5664;
	and.b64  	%rd5709, %rd5708, %rd5707;
	xor.b64  	%rd5710, %rd5709, %rd5688;
	add.s64 	%rd5711, %rd5700, %rd5710;
	add.s64 	%rd5712, %rd5711, %rd5706;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4792,%dummy}, %rd5701;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4793}, %rd5701;
	}
	shf.r.wrap.b32 	%r4794, %r4793, %r4792, 14;
	shf.r.wrap.b32 	%r4795, %r4792, %r4793, 14;
	mov.b64 	%rd5713, {%r4795, %r4794};
	shf.r.wrap.b32 	%r4796, %r4793, %r4792, 18;
	shf.r.wrap.b32 	%r4797, %r4792, %r4793, 18;
	mov.b64 	%rd5714, {%r4797, %r4796};
	xor.b64  	%rd5715, %rd5714, %rd5713;
	shf.l.wrap.b32 	%r4798, %r4792, %r4793, 23;
	shf.l.wrap.b32 	%r4799, %r4793, %r4792, 23;
	mov.b64 	%rd5716, {%r4799, %r4798};
	xor.b64  	%rd5717, %rd5715, %rd5716;
	xor.b64  	%rd5718, %rd5677, %rd5653;
	and.b64  	%rd5719, %rd5701, %rd5718;
	xor.b64  	%rd5720, %rd5719, %rd5653;
	add.s64 	%rd5721, %rd5629, %rd5429;
	add.s64 	%rd5722, %rd5721, %rd8781;
	add.s64 	%rd5723, %rd5722, %rd5720;
	add.s64 	%rd5724, %rd5723, %rd5717;
	add.s64 	%rd5725, %rd5724, %rd5640;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4800,%dummy}, %rd5712;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4801}, %rd5712;
	}
	shf.r.wrap.b32 	%r4802, %r4801, %r4800, 28;
	shf.r.wrap.b32 	%r4803, %r4800, %r4801, 28;
	mov.b64 	%rd5726, {%r4803, %r4802};
	shf.l.wrap.b32 	%r4804, %r4800, %r4801, 30;
	shf.l.wrap.b32 	%r4805, %r4801, %r4800, 30;
	mov.b64 	%rd5727, {%r4805, %r4804};
	xor.b64  	%rd5728, %rd5727, %rd5726;
	shf.l.wrap.b32 	%r4806, %r4800, %r4801, 25;
	shf.l.wrap.b32 	%r4807, %r4801, %r4800, 25;
	mov.b64 	%rd5729, {%r4807, %r4806};
	xor.b64  	%rd5730, %rd5728, %rd5729;
	xor.b64  	%rd5731, %rd5712, %rd5664;
	xor.b64  	%rd5732, %rd5712, %rd5688;
	and.b64  	%rd5733, %rd5732, %rd5731;
	xor.b64  	%rd5734, %rd5733, %rd5712;
	add.s64 	%rd5735, %rd5724, %rd5734;
	add.s64 	%rd5736, %rd5735, %rd5730;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4808,%dummy}, %rd5725;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4809}, %rd5725;
	}
	shf.r.wrap.b32 	%r4810, %r4809, %r4808, 14;
	shf.r.wrap.b32 	%r4811, %r4808, %r4809, 14;
	mov.b64 	%rd5737, {%r4811, %r4810};
	shf.r.wrap.b32 	%r4812, %r4809, %r4808, 18;
	shf.r.wrap.b32 	%r4813, %r4808, %r4809, 18;
	mov.b64 	%rd5738, {%r4813, %r4812};
	xor.b64  	%rd5739, %rd5738, %rd5737;
	shf.l.wrap.b32 	%r4814, %r4808, %r4809, 23;
	shf.l.wrap.b32 	%r4815, %r4809, %r4808, 23;
	mov.b64 	%rd5740, {%r4815, %r4814};
	xor.b64  	%rd5741, %rd5739, %rd5740;
	xor.b64  	%rd5742, %rd5701, %rd5677;
	and.b64  	%rd5743, %rd5725, %rd5742;
	xor.b64  	%rd5744, %rd5743, %rd5677;
	add.s64 	%rd5745, %rd5653, %rd5442;
	add.s64 	%rd5746, %rd5745, %rd8780;
	add.s64 	%rd5747, %rd5746, %rd5744;
	add.s64 	%rd5748, %rd5747, %rd5741;
	add.s64 	%rd5749, %rd5748, %rd5664;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4816,%dummy}, %rd5736;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4817}, %rd5736;
	}
	shf.r.wrap.b32 	%r4818, %r4817, %r4816, 28;
	shf.r.wrap.b32 	%r4819, %r4816, %r4817, 28;
	mov.b64 	%rd5750, {%r4819, %r4818};
	shf.l.wrap.b32 	%r4820, %r4816, %r4817, 30;
	shf.l.wrap.b32 	%r4821, %r4817, %r4816, 30;
	mov.b64 	%rd5751, {%r4821, %r4820};
	xor.b64  	%rd5752, %rd5751, %rd5750;
	shf.l.wrap.b32 	%r4822, %r4816, %r4817, 25;
	shf.l.wrap.b32 	%r4823, %r4817, %r4816, 25;
	mov.b64 	%rd5753, {%r4823, %r4822};
	xor.b64  	%rd5754, %rd5752, %rd5753;
	xor.b64  	%rd5755, %rd5736, %rd5688;
	xor.b64  	%rd5756, %rd5736, %rd5712;
	and.b64  	%rd5757, %rd5756, %rd5755;
	xor.b64  	%rd5758, %rd5757, %rd5736;
	add.s64 	%rd5759, %rd5748, %rd5758;
	add.s64 	%rd5760, %rd5759, %rd5754;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4824,%dummy}, %rd5749;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4825}, %rd5749;
	}
	shf.r.wrap.b32 	%r4826, %r4825, %r4824, 14;
	shf.r.wrap.b32 	%r4827, %r4824, %r4825, 14;
	mov.b64 	%rd5761, {%r4827, %r4826};
	shf.r.wrap.b32 	%r4828, %r4825, %r4824, 18;
	shf.r.wrap.b32 	%r4829, %r4824, %r4825, 18;
	mov.b64 	%rd5762, {%r4829, %r4828};
	xor.b64  	%rd5763, %rd5762, %rd5761;
	shf.l.wrap.b32 	%r4830, %r4824, %r4825, 23;
	shf.l.wrap.b32 	%r4831, %r4825, %r4824, 23;
	mov.b64 	%rd5764, {%r4831, %r4830};
	xor.b64  	%rd5765, %rd5763, %rd5764;
	xor.b64  	%rd5766, %rd5725, %rd5701;
	and.b64  	%rd5767, %rd5749, %rd5766;
	xor.b64  	%rd5768, %rd5767, %rd5701;
	add.s64 	%rd5769, %rd5677, %rd5455;
	add.s64 	%rd5770, %rd5769, %rd8779;
	add.s64 	%rd5771, %rd5770, %rd5768;
	add.s64 	%rd5772, %rd5771, %rd5765;
	add.s64 	%rd5773, %rd5772, %rd5688;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4832,%dummy}, %rd5760;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4833}, %rd5760;
	}
	shf.r.wrap.b32 	%r4834, %r4833, %r4832, 28;
	shf.r.wrap.b32 	%r4835, %r4832, %r4833, 28;
	mov.b64 	%rd5774, {%r4835, %r4834};
	shf.l.wrap.b32 	%r4836, %r4832, %r4833, 30;
	shf.l.wrap.b32 	%r4837, %r4833, %r4832, 30;
	mov.b64 	%rd5775, {%r4837, %r4836};
	xor.b64  	%rd5776, %rd5775, %rd5774;
	shf.l.wrap.b32 	%r4838, %r4832, %r4833, 25;
	shf.l.wrap.b32 	%r4839, %r4833, %r4832, 25;
	mov.b64 	%rd5777, {%r4839, %r4838};
	xor.b64  	%rd5778, %rd5776, %rd5777;
	xor.b64  	%rd5779, %rd5760, %rd5712;
	xor.b64  	%rd5780, %rd5760, %rd5736;
	and.b64  	%rd5781, %rd5780, %rd5779;
	xor.b64  	%rd5782, %rd5781, %rd5760;
	add.s64 	%rd5783, %rd5772, %rd5782;
	add.s64 	%rd5784, %rd5783, %rd5778;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4840,%dummy}, %rd5773;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4841}, %rd5773;
	}
	shf.r.wrap.b32 	%r4842, %r4841, %r4840, 14;
	shf.r.wrap.b32 	%r4843, %r4840, %r4841, 14;
	mov.b64 	%rd5785, {%r4843, %r4842};
	shf.r.wrap.b32 	%r4844, %r4841, %r4840, 18;
	shf.r.wrap.b32 	%r4845, %r4840, %r4841, 18;
	mov.b64 	%rd5786, {%r4845, %r4844};
	xor.b64  	%rd5787, %rd5786, %rd5785;
	shf.l.wrap.b32 	%r4846, %r4840, %r4841, 23;
	shf.l.wrap.b32 	%r4847, %r4841, %r4840, 23;
	mov.b64 	%rd5788, {%r4847, %r4846};
	xor.b64  	%rd5789, %rd5787, %rd5788;
	xor.b64  	%rd5790, %rd5749, %rd5725;
	and.b64  	%rd5791, %rd5773, %rd5790;
	xor.b64  	%rd5792, %rd5791, %rd5725;
	add.s64 	%rd5793, %rd5701, %rd5468;
	add.s64 	%rd5794, %rd5793, %rd8778;
	add.s64 	%rd5795, %rd5794, %rd5792;
	add.s64 	%rd5796, %rd5795, %rd5789;
	add.s64 	%rd5797, %rd5796, %rd5712;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4848,%dummy}, %rd5784;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4849}, %rd5784;
	}
	shf.r.wrap.b32 	%r4850, %r4849, %r4848, 28;
	shf.r.wrap.b32 	%r4851, %r4848, %r4849, 28;
	mov.b64 	%rd5798, {%r4851, %r4850};
	shf.l.wrap.b32 	%r4852, %r4848, %r4849, 30;
	shf.l.wrap.b32 	%r4853, %r4849, %r4848, 30;
	mov.b64 	%rd5799, {%r4853, %r4852};
	xor.b64  	%rd5800, %rd5799, %rd5798;
	shf.l.wrap.b32 	%r4854, %r4848, %r4849, 25;
	shf.l.wrap.b32 	%r4855, %r4849, %r4848, 25;
	mov.b64 	%rd5801, {%r4855, %r4854};
	xor.b64  	%rd5802, %rd5800, %rd5801;
	xor.b64  	%rd5803, %rd5784, %rd5736;
	xor.b64  	%rd5804, %rd5784, %rd5760;
	and.b64  	%rd5805, %rd5804, %rd5803;
	xor.b64  	%rd5806, %rd5805, %rd5784;
	add.s64 	%rd5807, %rd5796, %rd5806;
	add.s64 	%rd5808, %rd5807, %rd5802;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4856,%dummy}, %rd5797;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4857}, %rd5797;
	}
	shf.r.wrap.b32 	%r4858, %r4857, %r4856, 14;
	shf.r.wrap.b32 	%r4859, %r4856, %r4857, 14;
	mov.b64 	%rd5809, {%r4859, %r4858};
	shf.r.wrap.b32 	%r4860, %r4857, %r4856, 18;
	shf.r.wrap.b32 	%r4861, %r4856, %r4857, 18;
	mov.b64 	%rd5810, {%r4861, %r4860};
	xor.b64  	%rd5811, %rd5810, %rd5809;
	shf.l.wrap.b32 	%r4862, %r4856, %r4857, 23;
	shf.l.wrap.b32 	%r4863, %r4857, %r4856, 23;
	mov.b64 	%rd5812, {%r4863, %r4862};
	xor.b64  	%rd5813, %rd5811, %rd5812;
	xor.b64  	%rd5814, %rd5773, %rd5749;
	and.b64  	%rd5815, %rd5797, %rd5814;
	xor.b64  	%rd5816, %rd5815, %rd5749;
	add.s64 	%rd5817, %rd5725, %rd5481;
	add.s64 	%rd5818, %rd5817, %rd8777;
	add.s64 	%rd5819, %rd5818, %rd5816;
	add.s64 	%rd5820, %rd5819, %rd5813;
	add.s64 	%rd5821, %rd5820, %rd5736;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4864,%dummy}, %rd5808;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4865}, %rd5808;
	}
	shf.r.wrap.b32 	%r4866, %r4865, %r4864, 28;
	shf.r.wrap.b32 	%r4867, %r4864, %r4865, 28;
	mov.b64 	%rd5822, {%r4867, %r4866};
	shf.l.wrap.b32 	%r4868, %r4864, %r4865, 30;
	shf.l.wrap.b32 	%r4869, %r4865, %r4864, 30;
	mov.b64 	%rd5823, {%r4869, %r4868};
	xor.b64  	%rd5824, %rd5823, %rd5822;
	shf.l.wrap.b32 	%r4870, %r4864, %r4865, 25;
	shf.l.wrap.b32 	%r4871, %r4865, %r4864, 25;
	mov.b64 	%rd5825, {%r4871, %r4870};
	xor.b64  	%rd5826, %rd5824, %rd5825;
	xor.b64  	%rd5827, %rd5808, %rd5760;
	xor.b64  	%rd5828, %rd5808, %rd5784;
	and.b64  	%rd5829, %rd5828, %rd5827;
	xor.b64  	%rd5830, %rd5829, %rd5808;
	add.s64 	%rd5831, %rd5820, %rd5830;
	add.s64 	%rd5832, %rd5831, %rd5826;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4872,%dummy}, %rd5821;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4873}, %rd5821;
	}
	shf.r.wrap.b32 	%r4874, %r4873, %r4872, 14;
	shf.r.wrap.b32 	%r4875, %r4872, %r4873, 14;
	mov.b64 	%rd5833, {%r4875, %r4874};
	shf.r.wrap.b32 	%r4876, %r4873, %r4872, 18;
	shf.r.wrap.b32 	%r4877, %r4872, %r4873, 18;
	mov.b64 	%rd5834, {%r4877, %r4876};
	xor.b64  	%rd5835, %rd5834, %rd5833;
	shf.l.wrap.b32 	%r4878, %r4872, %r4873, 23;
	shf.l.wrap.b32 	%r4879, %r4873, %r4872, 23;
	mov.b64 	%rd5836, {%r4879, %r4878};
	xor.b64  	%rd5837, %rd5835, %rd5836;
	xor.b64  	%rd5838, %rd5797, %rd5773;
	and.b64  	%rd5839, %rd5821, %rd5838;
	xor.b64  	%rd5840, %rd5839, %rd5773;
	add.s64 	%rd5841, %rd5749, %rd5494;
	add.s64 	%rd5842, %rd5841, %rd8776;
	add.s64 	%rd5843, %rd5842, %rd5840;
	add.s64 	%rd5844, %rd5843, %rd5837;
	add.s64 	%rd5845, %rd5844, %rd5760;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4880,%dummy}, %rd5832;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4881}, %rd5832;
	}
	shf.r.wrap.b32 	%r4882, %r4881, %r4880, 28;
	shf.r.wrap.b32 	%r4883, %r4880, %r4881, 28;
	mov.b64 	%rd5846, {%r4883, %r4882};
	shf.l.wrap.b32 	%r4884, %r4880, %r4881, 30;
	shf.l.wrap.b32 	%r4885, %r4881, %r4880, 30;
	mov.b64 	%rd5847, {%r4885, %r4884};
	xor.b64  	%rd5848, %rd5847, %rd5846;
	shf.l.wrap.b32 	%r4886, %r4880, %r4881, 25;
	shf.l.wrap.b32 	%r4887, %r4881, %r4880, 25;
	mov.b64 	%rd5849, {%r4887, %r4886};
	xor.b64  	%rd5850, %rd5848, %rd5849;
	xor.b64  	%rd5851, %rd5832, %rd5784;
	xor.b64  	%rd5852, %rd5832, %rd5808;
	and.b64  	%rd5853, %rd5852, %rd5851;
	xor.b64  	%rd5854, %rd5853, %rd5832;
	add.s64 	%rd5855, %rd5844, %rd5854;
	add.s64 	%rd5856, %rd5855, %rd5850;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4888,%dummy}, %rd5845;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4889}, %rd5845;
	}
	shf.r.wrap.b32 	%r4890, %r4889, %r4888, 14;
	shf.r.wrap.b32 	%r4891, %r4888, %r4889, 14;
	mov.b64 	%rd5857, {%r4891, %r4890};
	shf.r.wrap.b32 	%r4892, %r4889, %r4888, 18;
	shf.r.wrap.b32 	%r4893, %r4888, %r4889, 18;
	mov.b64 	%rd5858, {%r4893, %r4892};
	xor.b64  	%rd5859, %rd5858, %rd5857;
	shf.l.wrap.b32 	%r4894, %r4888, %r4889, 23;
	shf.l.wrap.b32 	%r4895, %r4889, %r4888, 23;
	mov.b64 	%rd5860, {%r4895, %r4894};
	xor.b64  	%rd5861, %rd5859, %rd5860;
	xor.b64  	%rd5862, %rd5821, %rd5797;
	and.b64  	%rd5863, %rd5845, %rd5862;
	xor.b64  	%rd5864, %rd5863, %rd5797;
	add.s64 	%rd5865, %rd5773, %rd5507;
	add.s64 	%rd5866, %rd5865, %rd8775;
	add.s64 	%rd5867, %rd5866, %rd5864;
	add.s64 	%rd5868, %rd5867, %rd5861;
	add.s64 	%rd5869, %rd5868, %rd5784;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4896,%dummy}, %rd5856;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4897}, %rd5856;
	}
	shf.r.wrap.b32 	%r4898, %r4897, %r4896, 28;
	shf.r.wrap.b32 	%r4899, %r4896, %r4897, 28;
	mov.b64 	%rd5870, {%r4899, %r4898};
	shf.l.wrap.b32 	%r4900, %r4896, %r4897, 30;
	shf.l.wrap.b32 	%r4901, %r4897, %r4896, 30;
	mov.b64 	%rd5871, {%r4901, %r4900};
	xor.b64  	%rd5872, %rd5871, %rd5870;
	shf.l.wrap.b32 	%r4902, %r4896, %r4897, 25;
	shf.l.wrap.b32 	%r4903, %r4897, %r4896, 25;
	mov.b64 	%rd5873, {%r4903, %r4902};
	xor.b64  	%rd5874, %rd5872, %rd5873;
	xor.b64  	%rd5875, %rd5856, %rd5808;
	xor.b64  	%rd5876, %rd5856, %rd5832;
	and.b64  	%rd5877, %rd5876, %rd5875;
	xor.b64  	%rd5878, %rd5877, %rd5856;
	add.s64 	%rd5879, %rd5868, %rd5878;
	add.s64 	%rd5880, %rd5879, %rd5874;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4904,%dummy}, %rd5869;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4905}, %rd5869;
	}
	shf.r.wrap.b32 	%r4906, %r4905, %r4904, 14;
	shf.r.wrap.b32 	%r4907, %r4904, %r4905, 14;
	mov.b64 	%rd5881, {%r4907, %r4906};
	shf.r.wrap.b32 	%r4908, %r4905, %r4904, 18;
	shf.r.wrap.b32 	%r4909, %r4904, %r4905, 18;
	mov.b64 	%rd5882, {%r4909, %r4908};
	xor.b64  	%rd5883, %rd5882, %rd5881;
	shf.l.wrap.b32 	%r4910, %r4904, %r4905, 23;
	shf.l.wrap.b32 	%r4911, %r4905, %r4904, 23;
	mov.b64 	%rd5884, {%r4911, %r4910};
	xor.b64  	%rd5885, %rd5883, %rd5884;
	xor.b64  	%rd5886, %rd5845, %rd5821;
	and.b64  	%rd5887, %rd5869, %rd5886;
	xor.b64  	%rd5888, %rd5887, %rd5821;
	add.s64 	%rd5889, %rd5797, %rd5520;
	add.s64 	%rd5890, %rd5889, %rd8774;
	add.s64 	%rd5891, %rd5890, %rd5888;
	add.s64 	%rd5892, %rd5891, %rd5885;
	add.s64 	%rd5893, %rd5892, %rd5808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4912,%dummy}, %rd5880;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4913}, %rd5880;
	}
	shf.r.wrap.b32 	%r4914, %r4913, %r4912, 28;
	shf.r.wrap.b32 	%r4915, %r4912, %r4913, 28;
	mov.b64 	%rd5894, {%r4915, %r4914};
	shf.l.wrap.b32 	%r4916, %r4912, %r4913, 30;
	shf.l.wrap.b32 	%r4917, %r4913, %r4912, 30;
	mov.b64 	%rd5895, {%r4917, %r4916};
	xor.b64  	%rd5896, %rd5895, %rd5894;
	shf.l.wrap.b32 	%r4918, %r4912, %r4913, 25;
	shf.l.wrap.b32 	%r4919, %r4913, %r4912, 25;
	mov.b64 	%rd5897, {%r4919, %r4918};
	xor.b64  	%rd5898, %rd5896, %rd5897;
	xor.b64  	%rd5899, %rd5880, %rd5832;
	xor.b64  	%rd5900, %rd5880, %rd5856;
	and.b64  	%rd5901, %rd5900, %rd5899;
	xor.b64  	%rd5902, %rd5901, %rd5880;
	add.s64 	%rd5903, %rd5892, %rd5902;
	add.s64 	%rd5904, %rd5903, %rd5898;
	add.s64 	%rd5905, %rd8845, %rd5904;
	st.local.u64 	[%rd9], %rd5905;
	add.s64 	%rd5906, %rd8844, %rd5880;
	st.local.u64 	[%rd10], %rd5906;
	add.s64 	%rd5907, %rd8843, %rd5856;
	st.local.u64 	[%rd10+8], %rd5907;
	add.s64 	%rd5908, %rd8842, %rd5832;
	st.local.u64 	[%rd10+16], %rd5908;
	add.s64 	%rd5909, %rd8841, %rd5893;
	st.local.u64 	[%rd10+24], %rd5909;
	add.s64 	%rd5910, %rd8840, %rd5869;
	st.local.u64 	[%rd10+32], %rd5910;
	add.s64 	%rd5911, %rd8839, %rd5845;
	st.local.u64 	[%rd10+40], %rd5911;
	add.s64 	%rd5912, %rd8838, %rd5821;
	st.local.u64 	[%rd10+48], %rd5912;
	mul.wide.s32 	%rd5913, %r1, 64;
	add.s64 	%rd5914, %rd8773, %rd5913;
	st.global.u64 	[%rd5914], %rd5905;
	st.global.u64 	[%rd5914+8], %rd5906;
	st.global.u64 	[%rd5914+16], %rd5907;
	st.global.u64 	[%rd5914+24], %rd5908;
	st.global.u64 	[%rd5914+32], %rd5909;
	st.global.u64 	[%rd5914+40], %rd5910;
	st.global.u64 	[%rd5914+48], %rd5911;
	st.global.u64 	[%rd5914+56], %rd5912;

BB4_326:
	ret;
}

	// .globl	m09600_loop
.entry m09600_loop(
	.param .u64 .ptr .global .align 4 m09600_loop_param_0,
	.param .u64 .ptr .global .align 4 m09600_loop_param_1,
	.param .u64 .ptr .global .align 4 m09600_loop_param_2,
	.param .u64 .ptr .global .align 4 m09600_loop_param_3,
	.param .u64 .ptr .global .align 8 m09600_loop_param_4,
	.param .u64 .ptr .global .align 1 m09600_loop_param_5,
	.param .u64 .ptr .global .align 4 m09600_loop_param_6,
	.param .u64 .ptr .global .align 4 m09600_loop_param_7,
	.param .u64 .ptr .global .align 4 m09600_loop_param_8,
	.param .u64 .ptr .global .align 4 m09600_loop_param_9,
	.param .u64 .ptr .global .align 4 m09600_loop_param_10,
	.param .u64 .ptr .global .align 4 m09600_loop_param_11,
	.param .u64 .ptr .global .align 4 m09600_loop_param_12,
	.param .u64 .ptr .global .align 4 m09600_loop_param_13,
	.param .u64 .ptr .global .align 4 m09600_loop_param_14,
	.param .u64 .ptr .global .align 4 m09600_loop_param_15,
	.param .u64 .ptr .global .align 4 m09600_loop_param_16,
	.param .u64 .ptr .global .align 4 m09600_loop_param_17,
	.param .u64 .ptr .global .align 4 m09600_loop_param_18,
	.param .u64 .ptr .global .align 4 m09600_loop_param_19,
	.param .u64 .ptr .global .align 4 m09600_loop_param_20,
	.param .u64 .ptr .global .align 4 m09600_loop_param_21,
	.param .u64 .ptr .global .align 4 m09600_loop_param_22,
	.param .u64 .ptr .global .align 4 m09600_loop_param_23,
	.param .u32 m09600_loop_param_24,
	.param .u32 m09600_loop_param_25,
	.param .u32 m09600_loop_param_26,
	.param .u32 m09600_loop_param_27,
	.param .u32 m09600_loop_param_28,
	.param .u32 m09600_loop_param_29,
	.param .u32 m09600_loop_param_30,
	.param .u32 m09600_loop_param_31,
	.param .u32 m09600_loop_param_32,
	.param .u32 m09600_loop_param_33,
	.param .u64 m09600_loop_param_34
)
{
	.reg .pred 	%p<4>;
	.reg .b32 	%r<1937>;
	.reg .b64 	%rd<2863>;


	ld.param.u64 	%rd127, [m09600_loop_param_4];
	ld.param.u32 	%r1935, [m09600_loop_param_28];
	ld.param.u32 	%r7, [m09600_loop_param_29];
	ld.param.u64 	%rd128, [m09600_loop_param_34];
	mov.b32	%r8, %envreg3;
	mov.u32 	%r9, %ctaid.x;
	mov.u32 	%r10, %ntid.x;
	mad.lo.s32 	%r11, %r9, %r10, %r8;
	mov.u32 	%r12, %tid.x;
	add.s32 	%r1, %r11, %r12;
	cvt.s64.s32	%rd129, %r1;
	setp.ge.u64	%p1, %rd129, %rd128;
	@%p1 bra 	BB5_5;

	mul.wide.s32 	%rd130, %r1, 64;
	add.s64 	%rd1, %rd127, %rd130;
	ld.global.u64 	%rd2862, [%rd1];
	ld.global.u64 	%rd2861, [%rd1+8];
	ld.global.u64 	%rd2860, [%rd1+16];
	ld.global.u64 	%rd2859, [%rd1+24];
	ld.global.u64 	%rd2858, [%rd1+32];
	ld.global.u64 	%rd2857, [%rd1+40];
	ld.global.u64 	%rd2856, [%rd1+48];
	ld.global.u64 	%rd2855, [%rd1+56];
	setp.eq.s32	%p2, %r7, 0;
	@%p2 bra 	BB5_4;

	ld.const.u64 	%rd131, [k_sha512];
	mov.u64 	%rd132, 5840696475078001361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r14,%dummy}, %rd132;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15}, %rd132;
	}
	shf.r.wrap.b32 	%r16, %r15, %r14, 18;
	shf.r.wrap.b32 	%r17, %r14, %r15, 18;
	mov.b64 	%rd133, {%r17, %r16};
	shf.r.wrap.b32 	%r18, %r15, %r14, 14;
	shf.r.wrap.b32 	%r19, %r14, %r15, 14;
	mov.b64 	%rd134, {%r19, %r18};
	xor.b64  	%rd135, %rd133, %rd134;
	shf.l.wrap.b32 	%r20, %r14, %r15, 23;
	shf.l.wrap.b32 	%r21, %r15, %r14, 23;
	mov.b64 	%rd136, {%r21, %r20};
	xor.b64  	%rd17, %rd135, %rd136;
	add.s64 	%rd18, %rd131, 8891960152096595636;
	mov.u64 	%rd137, 7640891576956012808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r22}, %rd137;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r23,%dummy}, %rd137;
	}
	shf.l.wrap.b32 	%r24, %r23, %r22, 30;
	shf.l.wrap.b32 	%r25, %r22, %r23, 30;
	mov.b64 	%rd138, {%r25, %r24};
	shf.r.wrap.b32 	%r26, %r22, %r23, 28;
	shf.r.wrap.b32 	%r27, %r23, %r22, 28;
	mov.b64 	%rd139, {%r27, %r26};
	xor.b64  	%rd140, %rd138, %rd139;
	shf.l.wrap.b32 	%r28, %r23, %r22, 25;
	shf.l.wrap.b32 	%r29, %r22, %r23, 25;
	mov.b64 	%rd141, {%r29, %r28};
	xor.b64  	%rd19, %rd140, %rd141;
	ld.const.u64 	%rd20, [k_sha512+8];
	ld.const.u64 	%rd21, [k_sha512+16];
	ld.const.u64 	%rd22, [k_sha512+24];
	ld.const.u64 	%rd23, [k_sha512+32];
	ld.const.u64 	%rd24, [k_sha512+40];
	ld.const.u64 	%rd25, [k_sha512+48];
	ld.const.u64 	%rd26, [k_sha512+56];
	ld.const.u64 	%rd27, [k_sha512+64];
	ld.const.u64 	%rd28, [k_sha512+72];
	ld.const.u64 	%rd29, [k_sha512+80];
	ld.const.u64 	%rd30, [k_sha512+88];
	ld.const.u64 	%rd31, [k_sha512+96];
	ld.const.u64 	%rd32, [k_sha512+104];
	ld.const.u64 	%rd33, [k_sha512+112];
	ld.const.u64 	%rd34, [k_sha512+120];
	ld.const.u64 	%rd35, [k_sha512+128];
	ld.const.u64 	%rd36, [k_sha512+136];
	ld.const.u64 	%rd37, [k_sha512+144];
	ld.const.u64 	%rd38, [k_sha512+152];
	ld.const.u64 	%rd39, [k_sha512+160];
	ld.const.u64 	%rd40, [k_sha512+168];
	ld.const.u64 	%rd41, [k_sha512+176];
	ld.const.u64 	%rd42, [k_sha512+184];
	ld.const.u64 	%rd43, [k_sha512+192];
	ld.const.u64 	%rd44, [k_sha512+200];
	ld.const.u64 	%rd45, [k_sha512+208];
	ld.const.u64 	%rd46, [k_sha512+216];
	ld.const.u64 	%rd47, [k_sha512+224];
	ld.const.u64 	%rd48, [k_sha512+232];
	ld.const.u64 	%rd49, [k_sha512+240];
	ld.const.u64 	%rd50, [k_sha512+248];
	ld.const.u64 	%rd51, [k_sha512+256];
	ld.const.u64 	%rd52, [k_sha512+264];
	ld.const.u64 	%rd53, [k_sha512+272];
	ld.const.u64 	%rd54, [k_sha512+280];
	ld.const.u64 	%rd55, [k_sha512+288];
	ld.const.u64 	%rd56, [k_sha512+296];
	ld.const.u64 	%rd57, [k_sha512+304];
	ld.const.u64 	%rd58, [k_sha512+312];
	ld.const.u64 	%rd59, [k_sha512+320];
	ld.const.u64 	%rd60, [k_sha512+328];
	ld.const.u64 	%rd61, [k_sha512+336];
	ld.const.u64 	%rd62, [k_sha512+344];
	ld.const.u64 	%rd63, [k_sha512+352];
	ld.const.u64 	%rd64, [k_sha512+360];
	ld.const.u64 	%rd65, [k_sha512+368];
	ld.const.u64 	%rd66, [k_sha512+376];
	ld.const.u64 	%rd67, [k_sha512+384];
	ld.const.u64 	%rd68, [k_sha512+392];
	ld.const.u64 	%rd69, [k_sha512+400];
	ld.const.u64 	%rd70, [k_sha512+408];
	ld.const.u64 	%rd71, [k_sha512+416];
	ld.const.u64 	%rd72, [k_sha512+424];
	ld.const.u64 	%rd73, [k_sha512+432];
	ld.const.u64 	%rd74, [k_sha512+440];
	ld.const.u64 	%rd75, [k_sha512+448];
	ld.const.u64 	%rd76, [k_sha512+456];
	ld.const.u64 	%rd77, [k_sha512+464];
	ld.const.u64 	%rd78, [k_sha512+472];
	ld.const.u64 	%rd79, [k_sha512+480];
	ld.const.u64 	%rd80, [k_sha512+488];
	ld.const.u64 	%rd81, [k_sha512+496];
	ld.const.u64 	%rd82, [k_sha512+504];
	ld.const.u64 	%rd83, [k_sha512+512];
	ld.const.u64 	%rd84, [k_sha512+520];
	ld.const.u64 	%rd85, [k_sha512+528];
	ld.const.u64 	%rd86, [k_sha512+536];
	ld.const.u64 	%rd87, [k_sha512+544];
	ld.const.u64 	%rd88, [k_sha512+552];
	ld.const.u64 	%rd89, [k_sha512+560];
	ld.const.u64 	%rd90, [k_sha512+568];
	ld.const.u64 	%rd91, [k_sha512+576];
	ld.const.u64 	%rd92, [k_sha512+584];
	ld.const.u64 	%rd93, [k_sha512+592];
	ld.const.u64 	%rd94, [k_sha512+600];
	ld.const.u64 	%rd95, [k_sha512+608];
	ld.const.u64 	%rd96, [k_sha512+616];
	ld.const.u64 	%rd97, [k_sha512+624];
	ld.const.u64 	%rd98, [k_sha512+632];
	mov.u64 	%rd142, 0;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r30}, %rd142;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r31,%dummy}, %rd142;
	}
	shf.l.wrap.b32 	%r32, %r31, %r30, 3;
	shf.l.wrap.b32 	%r33, %r30, %r31, 3;
	mov.b64 	%rd143, {%r33, %r32};
	shf.r.wrap.b32 	%r34, %r30, %r31, 19;
	shf.r.wrap.b32 	%r35, %r31, %r30, 19;
	mov.b64 	%rd144, {%r35, %r34};
	xor.b64  	%rd99, %rd144, %rd143;
	mov.u64 	%rd145, 544;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r36,%dummy}, %rd145;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r37}, %rd145;
	}
	shf.r.wrap.b32 	%r38, %r37, %r36, 19;
	shf.r.wrap.b32 	%r39, %r36, %r37, 19;
	mov.b64 	%rd146, {%r39, %r38};
	shf.l.wrap.b32 	%r40, %r36, %r37, 3;
	shf.l.wrap.b32 	%r41, %r37, %r36, 3;
	mov.b64 	%rd147, {%r41, %r40};
	xor.b64  	%rd148, %rd146, %rd147;
	xor.b64  	%rd100, %rd148, 8;
	shf.r.wrap.b32 	%r42, %r30, %r31, 8;
	shf.r.wrap.b32 	%r43, %r31, %r30, 8;
	mov.b64 	%rd149, {%r43, %r42};
	shf.r.wrap.b32 	%r44, %r30, %r31, 1;
	shf.r.wrap.b32 	%r45, %r31, %r30, 1;
	mov.b64 	%rd150, {%r45, %r44};
	xor.b64  	%rd101, %rd150, %rd149;
	shf.r.wrap.b32 	%r46, %r37, %r36, 1;
	shf.r.wrap.b32 	%r47, %r36, %r37, 1;
	mov.b64 	%rd151, {%r47, %r46};
	shf.r.wrap.b32 	%r48, %r37, %r36, 8;
	shf.r.wrap.b32 	%r49, %r36, %r37, 8;
	mov.b64 	%rd152, {%r49, %r48};
	xor.b64  	%rd153, %rd151, %rd152;
	xor.b64  	%rd102, %rd153, 4;
	mov.u32 	%r1936, 0;

BB5_3:
	shr.u64 	%rd154, %rd2862, 32;
	shr.u64 	%rd155, %rd2861, 32;
	shr.u64 	%rd156, %rd2860, 32;
	shr.u64 	%rd157, %rd2859, 32;
	shr.u64 	%rd158, %rd2858, 32;
	shr.u64 	%rd159, %rd2857, 32;
	shr.u64 	%rd160, %rd2856, 32;
	shr.u64 	%rd161, %rd2855, 32;
	// inline asm
	prmt.b32 %r50, %r1935, 0, 0x0123;
	// inline asm
	cvt.u32.u64	%r52, %rd154;
	mov.b64	%rd162, {%r52, %r50};
	bfi.b64 	%rd163, %rd2862, %rd155, 32, 32;
	bfi.b64 	%rd164, %rd2861, %rd156, 32, 32;
	bfi.b64 	%rd165, %rd2860, %rd157, 32, 32;
	bfi.b64 	%rd166, %rd2859, %rd158, 32, 32;
	bfi.b64 	%rd167, %rd2858, %rd159, 32, 32;
	bfi.b64 	%rd168, %rd2857, %rd160, 32, 32;
	bfi.b64 	%rd169, %rd2856, %rd161, 32, 32;
	cvt.u32.u64	%r53, %rd2855;
	mov.u32 	%r54, -2147483648;
	mov.b64	%rd170, {%r54, %r53};
	add.s64 	%rd171, %rd18, %rd162;
	add.s64 	%rd172, %rd171, %rd17;
	add.s64 	%rd173, %rd172, -6534734903238641935;
	add.s64 	%rd174, %rd172, %rd19;
	add.s64 	%rd175, %rd174, 4210837510808201515;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r55,%dummy}, %rd173;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r56}, %rd173;
	}
	shf.r.wrap.b32 	%r57, %r56, %r55, 14;
	shf.r.wrap.b32 	%r58, %r55, %r56, 14;
	mov.b64 	%rd176, {%r58, %r57};
	shf.r.wrap.b32 	%r59, %r56, %r55, 18;
	shf.r.wrap.b32 	%r60, %r55, %r56, 18;
	mov.b64 	%rd177, {%r60, %r59};
	xor.b64  	%rd178, %rd177, %rd176;
	shf.l.wrap.b32 	%r61, %r55, %r56, 23;
	shf.l.wrap.b32 	%r62, %r56, %r55, 23;
	mov.b64 	%rd179, {%r62, %r61};
	xor.b64  	%rd180, %rd178, %rd179;
	and.b64  	%rd181, %rd173, -3887949035690463538;
	xor.b64  	%rd182, %rd181, -7276294671716946913;
	add.s64 	%rd183, %rd163, %rd20;
	add.s64 	%rd184, %rd183, %rd182;
	add.s64 	%rd185, %rd184, %rd180;
	xor.b64  	%rd186, %rd175, -4942790177534073029;
	xor.b64  	%rd187, %rd175, 7640891576956012808;
	and.b64  	%rd188, %rd187, %rd186;
	xor.b64  	%rd189, %rd188, %rd175;
	add.s64 	%rd190, %rd185, %rd189;
	add.s64 	%rd191, %rd185, 6625583534739731862;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r63,%dummy}, %rd175;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r64}, %rd175;
	}
	shf.r.wrap.b32 	%r65, %r64, %r63, 28;
	shf.r.wrap.b32 	%r66, %r63, %r64, 28;
	mov.b64 	%rd192, {%r66, %r65};
	shf.l.wrap.b32 	%r67, %r63, %r64, 30;
	shf.l.wrap.b32 	%r68, %r64, %r63, 30;
	mov.b64 	%rd193, {%r68, %r67};
	xor.b64  	%rd194, %rd193, %rd192;
	shf.l.wrap.b32 	%r69, %r63, %r64, 25;
	shf.l.wrap.b32 	%r70, %r64, %r63, 25;
	mov.b64 	%rd195, {%r70, %r69};
	xor.b64  	%rd196, %rd194, %rd195;
	add.s64 	%rd197, %rd190, %rd196;
	add.s64 	%rd198, %rd197, 2270897969802886507;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r71,%dummy}, %rd191;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r72}, %rd191;
	}
	shf.r.wrap.b32 	%r73, %r72, %r71, 14;
	shf.r.wrap.b32 	%r74, %r71, %r72, 14;
	mov.b64 	%rd199, {%r74, %r73};
	shf.r.wrap.b32 	%r75, %r72, %r71, 18;
	shf.r.wrap.b32 	%r76, %r71, %r72, 18;
	mov.b64 	%rd200, {%r76, %r75};
	xor.b64  	%rd201, %rd200, %rd199;
	shf.l.wrap.b32 	%r77, %r71, %r72, 23;
	shf.l.wrap.b32 	%r78, %r72, %r71, 23;
	mov.b64 	%rd202, {%r78, %r77};
	xor.b64  	%rd203, %rd201, %rd202;
	xor.b64  	%rd204, %rd173, 5840696475078001361;
	and.b64  	%rd205, %rd191, %rd204;
	xor.b64  	%rd206, %rd205, 5840696475078001361;
	add.s64 	%rd207, %rd164, %rd21;
	add.s64 	%rd208, %rd207, %rd206;
	add.s64 	%rd209, %rd208, %rd203;
	xor.b64  	%rd210, %rd198, 7640891576956012808;
	xor.b64  	%rd211, %rd198, %rd175;
	and.b64  	%rd212, %rd211, %rd210;
	xor.b64  	%rd213, %rd212, %rd198;
	add.s64 	%rd214, %rd209, %rd213;
	add.s64 	%rd215, %rd209, 6227659224458531674;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r79,%dummy}, %rd198;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r80}, %rd198;
	}
	shf.r.wrap.b32 	%r81, %r80, %r79, 28;
	shf.r.wrap.b32 	%r82, %r79, %r80, 28;
	mov.b64 	%rd216, {%r82, %r81};
	shf.l.wrap.b32 	%r83, %r79, %r80, 30;
	shf.l.wrap.b32 	%r84, %r80, %r79, 30;
	mov.b64 	%rd217, {%r84, %r83};
	xor.b64  	%rd218, %rd217, %rd216;
	shf.l.wrap.b32 	%r85, %r79, %r80, 25;
	shf.l.wrap.b32 	%r86, %r80, %r79, 25;
	mov.b64 	%rd219, {%r86, %r85};
	xor.b64  	%rd220, %rd218, %rd219;
	add.s64 	%rd221, %rd214, %rd220;
	add.s64 	%rd222, %rd221, -7276294671716946913;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r87,%dummy}, %rd215;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r88}, %rd215;
	}
	shf.r.wrap.b32 	%r89, %r88, %r87, 14;
	shf.r.wrap.b32 	%r90, %r87, %r88, 14;
	mov.b64 	%rd223, {%r90, %r89};
	shf.r.wrap.b32 	%r91, %r88, %r87, 18;
	shf.r.wrap.b32 	%r92, %r87, %r88, 18;
	mov.b64 	%rd224, {%r92, %r91};
	xor.b64  	%rd225, %rd224, %rd223;
	shf.l.wrap.b32 	%r93, %r87, %r88, 23;
	shf.l.wrap.b32 	%r94, %r88, %r87, 23;
	mov.b64 	%rd226, {%r94, %r93};
	xor.b64  	%rd227, %rd225, %rd226;
	xor.b64  	%rd228, %rd191, %rd173;
	and.b64  	%rd229, %rd215, %rd228;
	xor.b64  	%rd230, %rd229, %rd173;
	add.s64 	%rd231, %rd165, %rd22;
	add.s64 	%rd232, %rd231, %rd230;
	add.s64 	%rd233, %rd232, %rd227;
	xor.b64  	%rd234, %rd222, %rd175;
	xor.b64  	%rd235, %rd222, %rd198;
	and.b64  	%rd236, %rd235, %rd234;
	xor.b64  	%rd237, %rd236, %rd222;
	add.s64 	%rd238, %rd233, %rd237;
	add.s64 	%rd239, %rd233, -4965156021675537447;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r95,%dummy}, %rd222;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r96}, %rd222;
	}
	shf.r.wrap.b32 	%r97, %r96, %r95, 28;
	shf.r.wrap.b32 	%r98, %r95, %r96, 28;
	mov.b64 	%rd240, {%r98, %r97};
	shf.l.wrap.b32 	%r99, %r95, %r96, 30;
	shf.l.wrap.b32 	%r100, %r96, %r95, 30;
	mov.b64 	%rd241, {%r100, %r99};
	xor.b64  	%rd242, %rd241, %rd240;
	shf.l.wrap.b32 	%r101, %r95, %r96, 25;
	shf.l.wrap.b32 	%r102, %r96, %r95, 25;
	mov.b64 	%rd243, {%r102, %r101};
	xor.b64  	%rd244, %rd242, %rd243;
	add.s64 	%rd245, %rd238, %rd244;
	add.s64 	%rd246, %rd245, 5840696475078001361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r103,%dummy}, %rd239;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r104}, %rd239;
	}
	shf.r.wrap.b32 	%r105, %r104, %r103, 14;
	shf.r.wrap.b32 	%r106, %r103, %r104, 14;
	mov.b64 	%rd247, {%r106, %r105};
	shf.r.wrap.b32 	%r107, %r104, %r103, 18;
	shf.r.wrap.b32 	%r108, %r103, %r104, 18;
	mov.b64 	%rd248, {%r108, %r107};
	xor.b64  	%rd249, %rd248, %rd247;
	shf.l.wrap.b32 	%r109, %r103, %r104, 23;
	shf.l.wrap.b32 	%r110, %r104, %r103, 23;
	mov.b64 	%rd250, {%r110, %r109};
	xor.b64  	%rd251, %rd249, %rd250;
	xor.b64  	%rd252, %rd215, %rd191;
	and.b64  	%rd253, %rd239, %rd252;
	xor.b64  	%rd254, %rd253, %rd191;
	add.s64 	%rd255, %rd173, %rd166;
	add.s64 	%rd256, %rd255, %rd23;
	add.s64 	%rd257, %rd256, %rd254;
	add.s64 	%rd258, %rd257, %rd251;
	add.s64 	%rd259, %rd258, %rd175;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r111,%dummy}, %rd246;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r112}, %rd246;
	}
	shf.r.wrap.b32 	%r113, %r112, %r111, 28;
	shf.r.wrap.b32 	%r114, %r111, %r112, 28;
	mov.b64 	%rd260, {%r114, %r113};
	shf.l.wrap.b32 	%r115, %r111, %r112, 30;
	shf.l.wrap.b32 	%r116, %r112, %r111, 30;
	mov.b64 	%rd261, {%r116, %r115};
	xor.b64  	%rd262, %rd261, %rd260;
	shf.l.wrap.b32 	%r117, %r111, %r112, 25;
	shf.l.wrap.b32 	%r118, %r112, %r111, 25;
	mov.b64 	%rd263, {%r118, %r117};
	xor.b64  	%rd264, %rd262, %rd263;
	xor.b64  	%rd265, %rd246, %rd198;
	xor.b64  	%rd266, %rd246, %rd222;
	and.b64  	%rd267, %rd266, %rd265;
	xor.b64  	%rd268, %rd267, %rd246;
	add.s64 	%rd269, %rd258, %rd268;
	add.s64 	%rd270, %rd269, %rd264;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r119,%dummy}, %rd259;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r120}, %rd259;
	}
	shf.r.wrap.b32 	%r121, %r120, %r119, 14;
	shf.r.wrap.b32 	%r122, %r119, %r120, 14;
	mov.b64 	%rd271, {%r122, %r121};
	shf.r.wrap.b32 	%r123, %r120, %r119, 18;
	shf.r.wrap.b32 	%r124, %r119, %r120, 18;
	mov.b64 	%rd272, {%r124, %r123};
	xor.b64  	%rd273, %rd272, %rd271;
	shf.l.wrap.b32 	%r125, %r119, %r120, 23;
	shf.l.wrap.b32 	%r126, %r120, %r119, 23;
	mov.b64 	%rd274, {%r126, %r125};
	xor.b64  	%rd275, %rd273, %rd274;
	xor.b64  	%rd276, %rd239, %rd215;
	and.b64  	%rd277, %rd259, %rd276;
	xor.b64  	%rd278, %rd277, %rd215;
	add.s64 	%rd279, %rd191, %rd167;
	add.s64 	%rd280, %rd279, %rd24;
	add.s64 	%rd281, %rd280, %rd278;
	add.s64 	%rd282, %rd281, %rd275;
	add.s64 	%rd283, %rd282, %rd198;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r127,%dummy}, %rd270;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r128}, %rd270;
	}
	shf.r.wrap.b32 	%r129, %r128, %r127, 28;
	shf.r.wrap.b32 	%r130, %r127, %r128, 28;
	mov.b64 	%rd284, {%r130, %r129};
	shf.l.wrap.b32 	%r131, %r127, %r128, 30;
	shf.l.wrap.b32 	%r132, %r128, %r127, 30;
	mov.b64 	%rd285, {%r132, %r131};
	xor.b64  	%rd286, %rd285, %rd284;
	shf.l.wrap.b32 	%r133, %r127, %r128, 25;
	shf.l.wrap.b32 	%r134, %r128, %r127, 25;
	mov.b64 	%rd287, {%r134, %r133};
	xor.b64  	%rd288, %rd286, %rd287;
	xor.b64  	%rd289, %rd270, %rd222;
	xor.b64  	%rd290, %rd270, %rd246;
	and.b64  	%rd291, %rd290, %rd289;
	xor.b64  	%rd292, %rd291, %rd270;
	add.s64 	%rd293, %rd282, %rd292;
	add.s64 	%rd294, %rd293, %rd288;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r135,%dummy}, %rd283;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r136}, %rd283;
	}
	shf.r.wrap.b32 	%r137, %r136, %r135, 14;
	shf.r.wrap.b32 	%r138, %r135, %r136, 14;
	mov.b64 	%rd295, {%r138, %r137};
	shf.r.wrap.b32 	%r139, %r136, %r135, 18;
	shf.r.wrap.b32 	%r140, %r135, %r136, 18;
	mov.b64 	%rd296, {%r140, %r139};
	xor.b64  	%rd297, %rd296, %rd295;
	shf.l.wrap.b32 	%r141, %r135, %r136, 23;
	shf.l.wrap.b32 	%r142, %r136, %r135, 23;
	mov.b64 	%rd298, {%r142, %r141};
	xor.b64  	%rd299, %rd297, %rd298;
	xor.b64  	%rd300, %rd259, %rd239;
	and.b64  	%rd301, %rd283, %rd300;
	xor.b64  	%rd302, %rd301, %rd239;
	add.s64 	%rd303, %rd215, %rd168;
	add.s64 	%rd304, %rd303, %rd25;
	add.s64 	%rd305, %rd304, %rd302;
	add.s64 	%rd306, %rd305, %rd299;
	add.s64 	%rd307, %rd306, %rd222;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r143,%dummy}, %rd294;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r144}, %rd294;
	}
	shf.r.wrap.b32 	%r145, %r144, %r143, 28;
	shf.r.wrap.b32 	%r146, %r143, %r144, 28;
	mov.b64 	%rd308, {%r146, %r145};
	shf.l.wrap.b32 	%r147, %r143, %r144, 30;
	shf.l.wrap.b32 	%r148, %r144, %r143, 30;
	mov.b64 	%rd309, {%r148, %r147};
	xor.b64  	%rd310, %rd309, %rd308;
	shf.l.wrap.b32 	%r149, %r143, %r144, 25;
	shf.l.wrap.b32 	%r150, %r144, %r143, 25;
	mov.b64 	%rd311, {%r150, %r149};
	xor.b64  	%rd312, %rd310, %rd311;
	xor.b64  	%rd313, %rd294, %rd246;
	xor.b64  	%rd314, %rd294, %rd270;
	and.b64  	%rd315, %rd314, %rd313;
	xor.b64  	%rd316, %rd315, %rd294;
	add.s64 	%rd317, %rd306, %rd316;
	add.s64 	%rd318, %rd317, %rd312;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r151,%dummy}, %rd307;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r152}, %rd307;
	}
	shf.r.wrap.b32 	%r153, %r152, %r151, 14;
	shf.r.wrap.b32 	%r154, %r151, %r152, 14;
	mov.b64 	%rd319, {%r154, %r153};
	shf.r.wrap.b32 	%r155, %r152, %r151, 18;
	shf.r.wrap.b32 	%r156, %r151, %r152, 18;
	mov.b64 	%rd320, {%r156, %r155};
	xor.b64  	%rd321, %rd320, %rd319;
	shf.l.wrap.b32 	%r157, %r151, %r152, 23;
	shf.l.wrap.b32 	%r158, %r152, %r151, 23;
	mov.b64 	%rd322, {%r158, %r157};
	xor.b64  	%rd323, %rd321, %rd322;
	xor.b64  	%rd324, %rd283, %rd259;
	and.b64  	%rd325, %rd307, %rd324;
	xor.b64  	%rd326, %rd325, %rd259;
	add.s64 	%rd327, %rd239, %rd169;
	add.s64 	%rd328, %rd327, %rd26;
	add.s64 	%rd329, %rd328, %rd326;
	add.s64 	%rd330, %rd329, %rd323;
	add.s64 	%rd331, %rd330, %rd246;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r159,%dummy}, %rd318;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r160}, %rd318;
	}
	shf.r.wrap.b32 	%r161, %r160, %r159, 28;
	shf.r.wrap.b32 	%r162, %r159, %r160, 28;
	mov.b64 	%rd332, {%r162, %r161};
	shf.l.wrap.b32 	%r163, %r159, %r160, 30;
	shf.l.wrap.b32 	%r164, %r160, %r159, 30;
	mov.b64 	%rd333, {%r164, %r163};
	xor.b64  	%rd334, %rd333, %rd332;
	shf.l.wrap.b32 	%r165, %r159, %r160, 25;
	shf.l.wrap.b32 	%r166, %r160, %r159, 25;
	mov.b64 	%rd335, {%r166, %r165};
	xor.b64  	%rd336, %rd334, %rd335;
	xor.b64  	%rd337, %rd318, %rd270;
	xor.b64  	%rd338, %rd318, %rd294;
	and.b64  	%rd339, %rd338, %rd337;
	xor.b64  	%rd340, %rd339, %rd318;
	add.s64 	%rd341, %rd330, %rd340;
	add.s64 	%rd342, %rd341, %rd336;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r167,%dummy}, %rd331;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r168}, %rd331;
	}
	shf.r.wrap.b32 	%r169, %r168, %r167, 14;
	shf.r.wrap.b32 	%r170, %r167, %r168, 14;
	mov.b64 	%rd343, {%r170, %r169};
	shf.r.wrap.b32 	%r171, %r168, %r167, 18;
	shf.r.wrap.b32 	%r172, %r167, %r168, 18;
	mov.b64 	%rd344, {%r172, %r171};
	xor.b64  	%rd345, %rd344, %rd343;
	shf.l.wrap.b32 	%r173, %r167, %r168, 23;
	shf.l.wrap.b32 	%r174, %r168, %r167, 23;
	mov.b64 	%rd346, {%r174, %r173};
	xor.b64  	%rd347, %rd345, %rd346;
	xor.b64  	%rd348, %rd307, %rd283;
	and.b64  	%rd349, %rd331, %rd348;
	xor.b64  	%rd350, %rd349, %rd283;
	add.s64 	%rd351, %rd259, %rd170;
	add.s64 	%rd352, %rd351, %rd27;
	add.s64 	%rd353, %rd352, %rd350;
	add.s64 	%rd354, %rd353, %rd347;
	add.s64 	%rd355, %rd354, %rd270;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r175,%dummy}, %rd342;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r176}, %rd342;
	}
	shf.r.wrap.b32 	%r177, %r176, %r175, 28;
	shf.r.wrap.b32 	%r178, %r175, %r176, 28;
	mov.b64 	%rd356, {%r178, %r177};
	shf.l.wrap.b32 	%r179, %r175, %r176, 30;
	shf.l.wrap.b32 	%r180, %r176, %r175, 30;
	mov.b64 	%rd357, {%r180, %r179};
	xor.b64  	%rd358, %rd357, %rd356;
	shf.l.wrap.b32 	%r181, %r175, %r176, 25;
	shf.l.wrap.b32 	%r182, %r176, %r175, 25;
	mov.b64 	%rd359, {%r182, %r181};
	xor.b64  	%rd360, %rd358, %rd359;
	xor.b64  	%rd361, %rd342, %rd294;
	xor.b64  	%rd362, %rd342, %rd318;
	and.b64  	%rd363, %rd362, %rd361;
	xor.b64  	%rd364, %rd363, %rd342;
	add.s64 	%rd365, %rd354, %rd364;
	add.s64 	%rd366, %rd365, %rd360;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r183,%dummy}, %rd355;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r184}, %rd355;
	}
	shf.r.wrap.b32 	%r185, %r184, %r183, 14;
	shf.r.wrap.b32 	%r186, %r183, %r184, 14;
	mov.b64 	%rd367, {%r186, %r185};
	shf.r.wrap.b32 	%r187, %r184, %r183, 18;
	shf.r.wrap.b32 	%r188, %r183, %r184, 18;
	mov.b64 	%rd368, {%r188, %r187};
	xor.b64  	%rd369, %rd368, %rd367;
	shf.l.wrap.b32 	%r189, %r183, %r184, 23;
	shf.l.wrap.b32 	%r190, %r184, %r183, 23;
	mov.b64 	%rd370, {%r190, %r189};
	xor.b64  	%rd371, %rd369, %rd370;
	xor.b64  	%rd372, %rd331, %rd307;
	and.b64  	%rd373, %rd355, %rd372;
	xor.b64  	%rd374, %rd373, %rd307;
	add.s64 	%rd375, %rd28, %rd283;
	add.s64 	%rd376, %rd375, %rd374;
	add.s64 	%rd377, %rd376, %rd371;
	add.s64 	%rd378, %rd377, %rd294;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r191,%dummy}, %rd366;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r192}, %rd366;
	}
	shf.r.wrap.b32 	%r193, %r192, %r191, 28;
	shf.r.wrap.b32 	%r194, %r191, %r192, 28;
	mov.b64 	%rd379, {%r194, %r193};
	shf.l.wrap.b32 	%r195, %r191, %r192, 30;
	shf.l.wrap.b32 	%r196, %r192, %r191, 30;
	mov.b64 	%rd380, {%r196, %r195};
	xor.b64  	%rd381, %rd380, %rd379;
	shf.l.wrap.b32 	%r197, %r191, %r192, 25;
	shf.l.wrap.b32 	%r198, %r192, %r191, 25;
	mov.b64 	%rd382, {%r198, %r197};
	xor.b64  	%rd383, %rd381, %rd382;
	xor.b64  	%rd384, %rd366, %rd318;
	xor.b64  	%rd385, %rd366, %rd342;
	and.b64  	%rd386, %rd385, %rd384;
	xor.b64  	%rd387, %rd386, %rd366;
	add.s64 	%rd388, %rd377, %rd387;
	add.s64 	%rd389, %rd388, %rd383;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r199,%dummy}, %rd378;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r200}, %rd378;
	}
	shf.r.wrap.b32 	%r201, %r200, %r199, 14;
	shf.r.wrap.b32 	%r202, %r199, %r200, 14;
	mov.b64 	%rd390, {%r202, %r201};
	shf.r.wrap.b32 	%r203, %r200, %r199, 18;
	shf.r.wrap.b32 	%r204, %r199, %r200, 18;
	mov.b64 	%rd391, {%r204, %r203};
	xor.b64  	%rd392, %rd391, %rd390;
	shf.l.wrap.b32 	%r205, %r199, %r200, 23;
	shf.l.wrap.b32 	%r206, %r200, %r199, 23;
	mov.b64 	%rd393, {%r206, %r205};
	xor.b64  	%rd394, %rd392, %rd393;
	xor.b64  	%rd395, %rd355, %rd331;
	and.b64  	%rd396, %rd378, %rd395;
	xor.b64  	%rd397, %rd396, %rd331;
	add.s64 	%rd398, %rd29, %rd307;
	add.s64 	%rd399, %rd398, %rd397;
	add.s64 	%rd400, %rd399, %rd394;
	add.s64 	%rd401, %rd400, %rd318;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r207,%dummy}, %rd389;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r208}, %rd389;
	}
	shf.r.wrap.b32 	%r209, %r208, %r207, 28;
	shf.r.wrap.b32 	%r210, %r207, %r208, 28;
	mov.b64 	%rd402, {%r210, %r209};
	shf.l.wrap.b32 	%r211, %r207, %r208, 30;
	shf.l.wrap.b32 	%r212, %r208, %r207, 30;
	mov.b64 	%rd403, {%r212, %r211};
	xor.b64  	%rd404, %rd403, %rd402;
	shf.l.wrap.b32 	%r213, %r207, %r208, 25;
	shf.l.wrap.b32 	%r214, %r208, %r207, 25;
	mov.b64 	%rd405, {%r214, %r213};
	xor.b64  	%rd406, %rd404, %rd405;
	xor.b64  	%rd407, %rd389, %rd342;
	xor.b64  	%rd408, %rd389, %rd366;
	and.b64  	%rd409, %rd408, %rd407;
	xor.b64  	%rd410, %rd409, %rd389;
	add.s64 	%rd411, %rd400, %rd410;
	add.s64 	%rd412, %rd411, %rd406;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r215,%dummy}, %rd401;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r216}, %rd401;
	}
	shf.r.wrap.b32 	%r217, %r216, %r215, 14;
	shf.r.wrap.b32 	%r218, %r215, %r216, 14;
	mov.b64 	%rd413, {%r218, %r217};
	shf.r.wrap.b32 	%r219, %r216, %r215, 18;
	shf.r.wrap.b32 	%r220, %r215, %r216, 18;
	mov.b64 	%rd414, {%r220, %r219};
	xor.b64  	%rd415, %rd414, %rd413;
	shf.l.wrap.b32 	%r221, %r215, %r216, 23;
	shf.l.wrap.b32 	%r222, %r216, %r215, 23;
	mov.b64 	%rd416, {%r222, %r221};
	xor.b64  	%rd417, %rd415, %rd416;
	xor.b64  	%rd418, %rd378, %rd355;
	and.b64  	%rd419, %rd401, %rd418;
	xor.b64  	%rd420, %rd419, %rd355;
	add.s64 	%rd421, %rd30, %rd331;
	add.s64 	%rd422, %rd421, %rd420;
	add.s64 	%rd423, %rd422, %rd417;
	add.s64 	%rd424, %rd423, %rd342;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r223,%dummy}, %rd412;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r224}, %rd412;
	}
	shf.r.wrap.b32 	%r225, %r224, %r223, 28;
	shf.r.wrap.b32 	%r226, %r223, %r224, 28;
	mov.b64 	%rd425, {%r226, %r225};
	shf.l.wrap.b32 	%r227, %r223, %r224, 30;
	shf.l.wrap.b32 	%r228, %r224, %r223, 30;
	mov.b64 	%rd426, {%r228, %r227};
	xor.b64  	%rd427, %rd426, %rd425;
	shf.l.wrap.b32 	%r229, %r223, %r224, 25;
	shf.l.wrap.b32 	%r230, %r224, %r223, 25;
	mov.b64 	%rd428, {%r230, %r229};
	xor.b64  	%rd429, %rd427, %rd428;
	xor.b64  	%rd430, %rd412, %rd366;
	xor.b64  	%rd431, %rd412, %rd389;
	and.b64  	%rd432, %rd431, %rd430;
	xor.b64  	%rd433, %rd432, %rd412;
	add.s64 	%rd434, %rd423, %rd433;
	add.s64 	%rd435, %rd434, %rd429;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r231,%dummy}, %rd424;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r232}, %rd424;
	}
	shf.r.wrap.b32 	%r233, %r232, %r231, 14;
	shf.r.wrap.b32 	%r234, %r231, %r232, 14;
	mov.b64 	%rd436, {%r234, %r233};
	shf.r.wrap.b32 	%r235, %r232, %r231, 18;
	shf.r.wrap.b32 	%r236, %r231, %r232, 18;
	mov.b64 	%rd437, {%r236, %r235};
	xor.b64  	%rd438, %rd437, %rd436;
	shf.l.wrap.b32 	%r237, %r231, %r232, 23;
	shf.l.wrap.b32 	%r238, %r232, %r231, 23;
	mov.b64 	%rd439, {%r238, %r237};
	xor.b64  	%rd440, %rd438, %rd439;
	xor.b64  	%rd441, %rd401, %rd378;
	and.b64  	%rd442, %rd424, %rd441;
	xor.b64  	%rd443, %rd442, %rd378;
	add.s64 	%rd444, %rd31, %rd355;
	add.s64 	%rd445, %rd444, %rd443;
	add.s64 	%rd446, %rd445, %rd440;
	add.s64 	%rd447, %rd446, %rd366;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r239,%dummy}, %rd435;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r240}, %rd435;
	}
	shf.r.wrap.b32 	%r241, %r240, %r239, 28;
	shf.r.wrap.b32 	%r242, %r239, %r240, 28;
	mov.b64 	%rd448, {%r242, %r241};
	shf.l.wrap.b32 	%r243, %r239, %r240, 30;
	shf.l.wrap.b32 	%r244, %r240, %r239, 30;
	mov.b64 	%rd449, {%r244, %r243};
	xor.b64  	%rd450, %rd449, %rd448;
	shf.l.wrap.b32 	%r245, %r239, %r240, 25;
	shf.l.wrap.b32 	%r246, %r240, %r239, 25;
	mov.b64 	%rd451, {%r246, %r245};
	xor.b64  	%rd452, %rd450, %rd451;
	xor.b64  	%rd453, %rd435, %rd389;
	xor.b64  	%rd454, %rd435, %rd412;
	and.b64  	%rd455, %rd454, %rd453;
	xor.b64  	%rd456, %rd455, %rd435;
	add.s64 	%rd457, %rd446, %rd456;
	add.s64 	%rd458, %rd457, %rd452;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r247,%dummy}, %rd447;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r248}, %rd447;
	}
	shf.r.wrap.b32 	%r249, %r248, %r247, 14;
	shf.r.wrap.b32 	%r250, %r247, %r248, 14;
	mov.b64 	%rd459, {%r250, %r249};
	shf.r.wrap.b32 	%r251, %r248, %r247, 18;
	shf.r.wrap.b32 	%r252, %r247, %r248, 18;
	mov.b64 	%rd460, {%r252, %r251};
	xor.b64  	%rd461, %rd460, %rd459;
	shf.l.wrap.b32 	%r253, %r247, %r248, 23;
	shf.l.wrap.b32 	%r254, %r248, %r247, 23;
	mov.b64 	%rd462, {%r254, %r253};
	xor.b64  	%rd463, %rd461, %rd462;
	xor.b64  	%rd464, %rd424, %rd401;
	and.b64  	%rd465, %rd447, %rd464;
	xor.b64  	%rd466, %rd465, %rd401;
	add.s64 	%rd467, %rd32, %rd378;
	add.s64 	%rd468, %rd467, %rd466;
	add.s64 	%rd469, %rd468, %rd463;
	add.s64 	%rd470, %rd469, %rd389;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r255,%dummy}, %rd458;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r256}, %rd458;
	}
	shf.r.wrap.b32 	%r257, %r256, %r255, 28;
	shf.r.wrap.b32 	%r258, %r255, %r256, 28;
	mov.b64 	%rd471, {%r258, %r257};
	shf.l.wrap.b32 	%r259, %r255, %r256, 30;
	shf.l.wrap.b32 	%r260, %r256, %r255, 30;
	mov.b64 	%rd472, {%r260, %r259};
	xor.b64  	%rd473, %rd472, %rd471;
	shf.l.wrap.b32 	%r261, %r255, %r256, 25;
	shf.l.wrap.b32 	%r262, %r256, %r255, 25;
	mov.b64 	%rd474, {%r262, %r261};
	xor.b64  	%rd475, %rd473, %rd474;
	xor.b64  	%rd476, %rd458, %rd412;
	xor.b64  	%rd477, %rd458, %rd435;
	and.b64  	%rd478, %rd477, %rd476;
	xor.b64  	%rd479, %rd478, %rd458;
	add.s64 	%rd480, %rd469, %rd479;
	add.s64 	%rd481, %rd480, %rd475;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r263,%dummy}, %rd470;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r264}, %rd470;
	}
	shf.r.wrap.b32 	%r265, %r264, %r263, 14;
	shf.r.wrap.b32 	%r266, %r263, %r264, 14;
	mov.b64 	%rd482, {%r266, %r265};
	shf.r.wrap.b32 	%r267, %r264, %r263, 18;
	shf.r.wrap.b32 	%r268, %r263, %r264, 18;
	mov.b64 	%rd483, {%r268, %r267};
	xor.b64  	%rd484, %rd483, %rd482;
	shf.l.wrap.b32 	%r269, %r263, %r264, 23;
	shf.l.wrap.b32 	%r270, %r264, %r263, 23;
	mov.b64 	%rd485, {%r270, %r269};
	xor.b64  	%rd486, %rd484, %rd485;
	xor.b64  	%rd487, %rd447, %rd424;
	and.b64  	%rd488, %rd470, %rd487;
	xor.b64  	%rd489, %rd488, %rd424;
	add.s64 	%rd490, %rd33, %rd401;
	add.s64 	%rd491, %rd490, %rd489;
	add.s64 	%rd492, %rd491, %rd486;
	add.s64 	%rd493, %rd492, %rd412;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r271,%dummy}, %rd481;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r272}, %rd481;
	}
	shf.r.wrap.b32 	%r273, %r272, %r271, 28;
	shf.r.wrap.b32 	%r274, %r271, %r272, 28;
	mov.b64 	%rd494, {%r274, %r273};
	shf.l.wrap.b32 	%r275, %r271, %r272, 30;
	shf.l.wrap.b32 	%r276, %r272, %r271, 30;
	mov.b64 	%rd495, {%r276, %r275};
	xor.b64  	%rd496, %rd495, %rd494;
	shf.l.wrap.b32 	%r277, %r271, %r272, 25;
	shf.l.wrap.b32 	%r278, %r272, %r271, 25;
	mov.b64 	%rd497, {%r278, %r277};
	xor.b64  	%rd498, %rd496, %rd497;
	xor.b64  	%rd499, %rd481, %rd435;
	xor.b64  	%rd500, %rd481, %rd458;
	and.b64  	%rd501, %rd500, %rd499;
	xor.b64  	%rd502, %rd501, %rd481;
	add.s64 	%rd503, %rd492, %rd502;
	add.s64 	%rd504, %rd503, %rd498;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r279,%dummy}, %rd493;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r280}, %rd493;
	}
	shf.r.wrap.b32 	%r281, %r280, %r279, 14;
	shf.r.wrap.b32 	%r282, %r279, %r280, 14;
	mov.b64 	%rd505, {%r282, %r281};
	shf.r.wrap.b32 	%r283, %r280, %r279, 18;
	shf.r.wrap.b32 	%r284, %r279, %r280, 18;
	mov.b64 	%rd506, {%r284, %r283};
	xor.b64  	%rd507, %rd506, %rd505;
	shf.l.wrap.b32 	%r285, %r279, %r280, 23;
	shf.l.wrap.b32 	%r286, %r280, %r279, 23;
	mov.b64 	%rd508, {%r286, %r285};
	xor.b64  	%rd509, %rd507, %rd508;
	xor.b64  	%rd510, %rd470, %rd447;
	and.b64  	%rd511, %rd493, %rd510;
	xor.b64  	%rd512, %rd511, %rd447;
	add.s64 	%rd513, %rd424, %rd34;
	add.s64 	%rd514, %rd513, %rd512;
	add.s64 	%rd515, %rd514, %rd509;
	add.s64 	%rd516, %rd515, 544;
	add.s64 	%rd517, %rd516, %rd435;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r287,%dummy}, %rd504;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r288}, %rd504;
	}
	shf.r.wrap.b32 	%r289, %r288, %r287, 28;
	shf.r.wrap.b32 	%r290, %r287, %r288, 28;
	mov.b64 	%rd518, {%r290, %r289};
	shf.l.wrap.b32 	%r291, %r287, %r288, 30;
	shf.l.wrap.b32 	%r292, %r288, %r287, 30;
	mov.b64 	%rd519, {%r292, %r291};
	xor.b64  	%rd520, %rd519, %rd518;
	shf.l.wrap.b32 	%r293, %r287, %r288, 25;
	shf.l.wrap.b32 	%r294, %r288, %r287, 25;
	mov.b64 	%rd521, {%r294, %r293};
	xor.b64  	%rd522, %rd520, %rd521;
	xor.b64  	%rd523, %rd504, %rd458;
	xor.b64  	%rd524, %rd504, %rd481;
	and.b64  	%rd525, %rd524, %rd523;
	xor.b64  	%rd526, %rd525, %rd504;
	add.s64 	%rd527, %rd516, %rd526;
	add.s64 	%rd528, %rd527, %rd522;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r295,%dummy}, %rd163;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r296}, %rd163;
	}
	shf.r.wrap.b32 	%r297, %r296, %r295, 1;
	shf.r.wrap.b32 	%r298, %r295, %r296, 1;
	mov.b64 	%rd529, {%r298, %r297};
	shf.r.wrap.b32 	%r299, %r296, %r295, 8;
	shf.r.wrap.b32 	%r300, %r295, %r296, 8;
	mov.b64 	%rd530, {%r300, %r299};
	shr.u64 	%rd531, %rd163, 7;
	xor.b64  	%rd532, %rd529, %rd531;
	xor.b64  	%rd533, %rd532, %rd530;
	add.s64 	%rd534, %rd162, %rd99;
	add.s64 	%rd535, %rd534, %rd533;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r301,%dummy}, %rd164;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r302}, %rd164;
	}
	shf.r.wrap.b32 	%r303, %r302, %r301, 1;
	shf.r.wrap.b32 	%r304, %r301, %r302, 1;
	mov.b64 	%rd536, {%r304, %r303};
	shf.r.wrap.b32 	%r305, %r302, %r301, 8;
	shf.r.wrap.b32 	%r306, %r301, %r302, 8;
	mov.b64 	%rd537, {%r306, %r305};
	shr.u64 	%rd538, %rd164, 7;
	xor.b64  	%rd539, %rd536, %rd538;
	xor.b64  	%rd540, %rd539, %rd537;
	add.s64 	%rd541, %rd163, %rd100;
	add.s64 	%rd542, %rd541, %rd540;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r307,%dummy}, %rd535;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r308}, %rd535;
	}
	shf.r.wrap.b32 	%r309, %r308, %r307, 19;
	shf.r.wrap.b32 	%r310, %r307, %r308, 19;
	mov.b64 	%rd543, {%r310, %r309};
	shf.l.wrap.b32 	%r311, %r307, %r308, 3;
	shf.l.wrap.b32 	%r312, %r308, %r307, 3;
	mov.b64 	%rd544, {%r312, %r311};
	shr.u64 	%rd545, %rd535, 6;
	xor.b64  	%rd546, %rd543, %rd545;
	xor.b64  	%rd547, %rd546, %rd544;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r313,%dummy}, %rd165;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r314}, %rd165;
	}
	shf.r.wrap.b32 	%r315, %r314, %r313, 1;
	shf.r.wrap.b32 	%r316, %r313, %r314, 1;
	mov.b64 	%rd548, {%r316, %r315};
	shf.r.wrap.b32 	%r317, %r314, %r313, 8;
	shf.r.wrap.b32 	%r318, %r313, %r314, 8;
	mov.b64 	%rd549, {%r318, %r317};
	shr.u64 	%rd550, %rd165, 7;
	xor.b64  	%rd551, %rd548, %rd550;
	xor.b64  	%rd552, %rd551, %rd549;
	add.s64 	%rd553, %rd164, %rd547;
	add.s64 	%rd554, %rd553, %rd552;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r319,%dummy}, %rd542;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r320}, %rd542;
	}
	shf.r.wrap.b32 	%r321, %r320, %r319, 19;
	shf.r.wrap.b32 	%r322, %r319, %r320, 19;
	mov.b64 	%rd555, {%r322, %r321};
	shf.l.wrap.b32 	%r323, %r319, %r320, 3;
	shf.l.wrap.b32 	%r324, %r320, %r319, 3;
	mov.b64 	%rd556, {%r324, %r323};
	shr.u64 	%rd557, %rd542, 6;
	xor.b64  	%rd558, %rd555, %rd557;
	xor.b64  	%rd559, %rd558, %rd556;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r325,%dummy}, %rd166;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r326}, %rd166;
	}
	shf.r.wrap.b32 	%r327, %r326, %r325, 1;
	shf.r.wrap.b32 	%r328, %r325, %r326, 1;
	mov.b64 	%rd560, {%r328, %r327};
	shf.r.wrap.b32 	%r329, %r326, %r325, 8;
	shf.r.wrap.b32 	%r330, %r325, %r326, 8;
	mov.b64 	%rd561, {%r330, %r329};
	shr.u64 	%rd562, %rd166, 7;
	xor.b64  	%rd563, %rd560, %rd562;
	xor.b64  	%rd564, %rd563, %rd561;
	add.s64 	%rd565, %rd165, %rd559;
	add.s64 	%rd566, %rd565, %rd564;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r331,%dummy}, %rd554;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r332}, %rd554;
	}
	shf.r.wrap.b32 	%r333, %r332, %r331, 19;
	shf.r.wrap.b32 	%r334, %r331, %r332, 19;
	mov.b64 	%rd567, {%r334, %r333};
	shf.l.wrap.b32 	%r335, %r331, %r332, 3;
	shf.l.wrap.b32 	%r336, %r332, %r331, 3;
	mov.b64 	%rd568, {%r336, %r335};
	shr.u64 	%rd569, %rd554, 6;
	xor.b64  	%rd570, %rd567, %rd569;
	xor.b64  	%rd571, %rd570, %rd568;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r337,%dummy}, %rd167;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r338}, %rd167;
	}
	shf.r.wrap.b32 	%r339, %r338, %r337, 1;
	shf.r.wrap.b32 	%r340, %r337, %r338, 1;
	mov.b64 	%rd572, {%r340, %r339};
	shf.r.wrap.b32 	%r341, %r338, %r337, 8;
	shf.r.wrap.b32 	%r342, %r337, %r338, 8;
	mov.b64 	%rd573, {%r342, %r341};
	shr.u64 	%rd574, %rd167, 7;
	xor.b64  	%rd575, %rd572, %rd574;
	xor.b64  	%rd576, %rd575, %rd573;
	add.s64 	%rd577, %rd166, %rd571;
	add.s64 	%rd578, %rd577, %rd576;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r343,%dummy}, %rd566;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r344}, %rd566;
	}
	shf.r.wrap.b32 	%r345, %r344, %r343, 19;
	shf.r.wrap.b32 	%r346, %r343, %r344, 19;
	mov.b64 	%rd579, {%r346, %r345};
	shf.l.wrap.b32 	%r347, %r343, %r344, 3;
	shf.l.wrap.b32 	%r348, %r344, %r343, 3;
	mov.b64 	%rd580, {%r348, %r347};
	shr.u64 	%rd581, %rd566, 6;
	xor.b64  	%rd582, %rd579, %rd581;
	xor.b64  	%rd583, %rd582, %rd580;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r349,%dummy}, %rd168;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r350}, %rd168;
	}
	shf.r.wrap.b32 	%r351, %r350, %r349, 1;
	shf.r.wrap.b32 	%r352, %r349, %r350, 1;
	mov.b64 	%rd584, {%r352, %r351};
	shf.r.wrap.b32 	%r353, %r350, %r349, 8;
	shf.r.wrap.b32 	%r354, %r349, %r350, 8;
	mov.b64 	%rd585, {%r354, %r353};
	shr.u64 	%rd586, %rd168, 7;
	xor.b64  	%rd587, %rd584, %rd586;
	xor.b64  	%rd588, %rd587, %rd585;
	add.s64 	%rd589, %rd167, %rd583;
	add.s64 	%rd590, %rd589, %rd588;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r355,%dummy}, %rd578;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r356}, %rd578;
	}
	shf.r.wrap.b32 	%r357, %r356, %r355, 19;
	shf.r.wrap.b32 	%r358, %r355, %r356, 19;
	mov.b64 	%rd591, {%r358, %r357};
	shf.l.wrap.b32 	%r359, %r355, %r356, 3;
	shf.l.wrap.b32 	%r360, %r356, %r355, 3;
	mov.b64 	%rd592, {%r360, %r359};
	shr.u64 	%rd593, %rd578, 6;
	xor.b64  	%rd594, %rd591, %rd593;
	xor.b64  	%rd595, %rd594, %rd592;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r361,%dummy}, %rd169;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r362}, %rd169;
	}
	shf.r.wrap.b32 	%r363, %r362, %r361, 1;
	shf.r.wrap.b32 	%r364, %r361, %r362, 1;
	mov.b64 	%rd596, {%r364, %r363};
	shf.r.wrap.b32 	%r365, %r362, %r361, 8;
	shf.r.wrap.b32 	%r366, %r361, %r362, 8;
	mov.b64 	%rd597, {%r366, %r365};
	shr.u64 	%rd598, %rd169, 7;
	xor.b64  	%rd599, %rd596, %rd598;
	xor.b64  	%rd600, %rd599, %rd597;
	add.s64 	%rd601, %rd168, %rd595;
	add.s64 	%rd602, %rd601, %rd600;
	add.s64 	%rd603, %rd602, 544;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r367,%dummy}, %rd590;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r368}, %rd590;
	}
	shf.r.wrap.b32 	%r369, %r368, %r367, 19;
	shf.r.wrap.b32 	%r370, %r367, %r368, 19;
	mov.b64 	%rd604, {%r370, %r369};
	shf.l.wrap.b32 	%r371, %r367, %r368, 3;
	shf.l.wrap.b32 	%r372, %r368, %r367, 3;
	mov.b64 	%rd605, {%r372, %r371};
	shr.u64 	%rd606, %rd590, 6;
	xor.b64  	%rd607, %rd604, %rd606;
	xor.b64  	%rd608, %rd607, %rd605;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r373,%dummy}, %rd170;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r374}, %rd170;
	}
	shf.r.wrap.b32 	%r375, %r374, %r373, 1;
	shf.r.wrap.b32 	%r376, %r373, %r374, 1;
	mov.b64 	%rd609, {%r376, %r375};
	shf.r.wrap.b32 	%r377, %r374, %r373, 8;
	shf.r.wrap.b32 	%r378, %r373, %r374, 8;
	mov.b64 	%rd610, {%r378, %r377};
	shr.u64 	%rd611, %rd170, 7;
	xor.b64  	%rd612, %rd609, %rd611;
	xor.b64  	%rd613, %rd612, %rd610;
	add.s64 	%rd614, %rd535, %rd169;
	add.s64 	%rd615, %rd614, %rd608;
	add.s64 	%rd616, %rd615, %rd613;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r379,%dummy}, %rd603;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r380}, %rd603;
	}
	shf.r.wrap.b32 	%r381, %r380, %r379, 19;
	shf.r.wrap.b32 	%r382, %r379, %r380, 19;
	mov.b64 	%rd617, {%r382, %r381};
	shf.l.wrap.b32 	%r383, %r379, %r380, 3;
	shf.l.wrap.b32 	%r384, %r380, %r379, 3;
	mov.b64 	%rd618, {%r384, %r383};
	shr.u64 	%rd619, %rd603, 6;
	xor.b64  	%rd620, %rd617, %rd619;
	xor.b64  	%rd621, %rd620, %rd618;
	add.s64 	%rd622, %rd542, %rd170;
	add.s64 	%rd623, %rd622, %rd621;
	add.s64 	%rd624, %rd623, %rd101;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r385,%dummy}, %rd616;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r386}, %rd616;
	}
	shf.r.wrap.b32 	%r387, %r386, %r385, 19;
	shf.r.wrap.b32 	%r388, %r385, %r386, 19;
	mov.b64 	%rd625, {%r388, %r387};
	shf.l.wrap.b32 	%r389, %r385, %r386, 3;
	shf.l.wrap.b32 	%r390, %r386, %r385, 3;
	mov.b64 	%rd626, {%r390, %r389};
	shr.u64 	%rd627, %rd616, 6;
	xor.b64  	%rd628, %rd625, %rd627;
	xor.b64  	%rd629, %rd628, %rd626;
	add.s64 	%rd630, %rd554, %rd629;
	add.s64 	%rd631, %rd630, %rd101;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r391,%dummy}, %rd624;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r392}, %rd624;
	}
	shf.r.wrap.b32 	%r393, %r392, %r391, 19;
	shf.r.wrap.b32 	%r394, %r391, %r392, 19;
	mov.b64 	%rd632, {%r394, %r393};
	shf.l.wrap.b32 	%r395, %r391, %r392, 3;
	shf.l.wrap.b32 	%r396, %r392, %r391, 3;
	mov.b64 	%rd633, {%r396, %r395};
	shr.u64 	%rd634, %rd624, 6;
	xor.b64  	%rd635, %rd632, %rd634;
	xor.b64  	%rd636, %rd635, %rd633;
	add.s64 	%rd637, %rd566, %rd636;
	add.s64 	%rd638, %rd637, %rd101;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r397,%dummy}, %rd631;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r398}, %rd631;
	}
	shf.r.wrap.b32 	%r399, %r398, %r397, 19;
	shf.r.wrap.b32 	%r400, %r397, %r398, 19;
	mov.b64 	%rd639, {%r400, %r399};
	shf.l.wrap.b32 	%r401, %r397, %r398, 3;
	shf.l.wrap.b32 	%r402, %r398, %r397, 3;
	mov.b64 	%rd640, {%r402, %r401};
	shr.u64 	%rd641, %rd631, 6;
	xor.b64  	%rd642, %rd639, %rd641;
	xor.b64  	%rd643, %rd642, %rd640;
	add.s64 	%rd644, %rd578, %rd643;
	add.s64 	%rd645, %rd644, %rd101;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r403,%dummy}, %rd638;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r404}, %rd638;
	}
	shf.r.wrap.b32 	%r405, %r404, %r403, 19;
	shf.r.wrap.b32 	%r406, %r403, %r404, 19;
	mov.b64 	%rd646, {%r406, %r405};
	shf.l.wrap.b32 	%r407, %r403, %r404, 3;
	shf.l.wrap.b32 	%r408, %r404, %r403, 3;
	mov.b64 	%rd647, {%r408, %r407};
	shr.u64 	%rd648, %rd638, 6;
	xor.b64  	%rd649, %rd646, %rd648;
	xor.b64  	%rd650, %rd649, %rd647;
	add.s64 	%rd651, %rd590, %rd650;
	add.s64 	%rd652, %rd651, %rd101;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r409,%dummy}, %rd645;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r410}, %rd645;
	}
	shf.r.wrap.b32 	%r411, %r410, %r409, 19;
	shf.r.wrap.b32 	%r412, %r409, %r410, 19;
	mov.b64 	%rd653, {%r412, %r411};
	shf.l.wrap.b32 	%r413, %r409, %r410, 3;
	shf.l.wrap.b32 	%r414, %r410, %r409, 3;
	mov.b64 	%rd654, {%r414, %r413};
	shr.u64 	%rd655, %rd645, 6;
	xor.b64  	%rd656, %rd653, %rd655;
	xor.b64  	%rd657, %rd656, %rd654;
	add.s64 	%rd658, %rd603, %rd657;
	add.s64 	%rd659, %rd658, %rd101;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r415,%dummy}, %rd652;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r416}, %rd652;
	}
	shf.r.wrap.b32 	%r417, %r416, %r415, 19;
	shf.r.wrap.b32 	%r418, %r415, %r416, 19;
	mov.b64 	%rd660, {%r418, %r417};
	shf.l.wrap.b32 	%r419, %r415, %r416, 3;
	shf.l.wrap.b32 	%r420, %r416, %r415, 3;
	mov.b64 	%rd661, {%r420, %r419};
	shr.u64 	%rd662, %rd652, 6;
	xor.b64  	%rd663, %rd660, %rd662;
	xor.b64  	%rd664, %rd663, %rd661;
	add.s64 	%rd665, %rd616, %rd664;
	add.s64 	%rd666, %rd665, %rd102;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r421,%dummy}, %rd659;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r422}, %rd659;
	}
	shf.r.wrap.b32 	%r423, %r422, %r421, 19;
	shf.r.wrap.b32 	%r424, %r421, %r422, 19;
	mov.b64 	%rd667, {%r424, %r423};
	shf.l.wrap.b32 	%r425, %r421, %r422, 3;
	shf.l.wrap.b32 	%r426, %r422, %r421, 3;
	mov.b64 	%rd668, {%r426, %r425};
	shr.u64 	%rd669, %rd659, 6;
	xor.b64  	%rd670, %rd667, %rd669;
	xor.b64  	%rd671, %rd670, %rd668;
	shf.r.wrap.b32 	%r427, %r308, %r307, 1;
	shf.r.wrap.b32 	%r428, %r307, %r308, 1;
	mov.b64 	%rd672, {%r428, %r427};
	shf.r.wrap.b32 	%r429, %r308, %r307, 8;
	shf.r.wrap.b32 	%r430, %r307, %r308, 8;
	mov.b64 	%rd673, {%r430, %r429};
	shr.u64 	%rd674, %rd535, 7;
	xor.b64  	%rd675, %rd672, %rd674;
	xor.b64  	%rd676, %rd675, %rd673;
	add.s64 	%rd677, %rd624, %rd671;
	add.s64 	%rd678, %rd677, %rd676;
	add.s64 	%rd679, %rd678, 544;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r431,%dummy}, %rd517;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r432}, %rd517;
	}
	shf.r.wrap.b32 	%r433, %r432, %r431, 14;
	shf.r.wrap.b32 	%r434, %r431, %r432, 14;
	mov.b64 	%rd680, {%r434, %r433};
	shf.r.wrap.b32 	%r435, %r432, %r431, 18;
	shf.r.wrap.b32 	%r436, %r431, %r432, 18;
	mov.b64 	%rd681, {%r436, %r435};
	xor.b64  	%rd682, %rd681, %rd680;
	shf.l.wrap.b32 	%r437, %r431, %r432, 23;
	shf.l.wrap.b32 	%r438, %r432, %r431, 23;
	mov.b64 	%rd683, {%r438, %r437};
	xor.b64  	%rd684, %rd682, %rd683;
	xor.b64  	%rd685, %rd493, %rd470;
	and.b64  	%rd686, %rd685, %rd517;
	xor.b64  	%rd687, %rd686, %rd470;
	add.s64 	%rd688, %rd687, %rd447;
	add.s64 	%rd689, %rd688, %rd535;
	add.s64 	%rd690, %rd689, %rd35;
	add.s64 	%rd691, %rd690, %rd684;
	add.s64 	%rd692, %rd691, %rd458;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r439,%dummy}, %rd528;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r440}, %rd528;
	}
	shf.r.wrap.b32 	%r441, %r440, %r439, 28;
	shf.r.wrap.b32 	%r442, %r439, %r440, 28;
	mov.b64 	%rd693, {%r442, %r441};
	shf.l.wrap.b32 	%r443, %r439, %r440, 30;
	shf.l.wrap.b32 	%r444, %r440, %r439, 30;
	mov.b64 	%rd694, {%r444, %r443};
	xor.b64  	%rd695, %rd694, %rd693;
	shf.l.wrap.b32 	%r445, %r439, %r440, 25;
	shf.l.wrap.b32 	%r446, %r440, %r439, 25;
	mov.b64 	%rd696, {%r446, %r445};
	xor.b64  	%rd697, %rd695, %rd696;
	xor.b64  	%rd698, %rd528, %rd481;
	xor.b64  	%rd699, %rd528, %rd504;
	and.b64  	%rd700, %rd699, %rd698;
	xor.b64  	%rd701, %rd700, %rd528;
	add.s64 	%rd702, %rd691, %rd701;
	add.s64 	%rd703, %rd702, %rd697;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r447,%dummy}, %rd692;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r448}, %rd692;
	}
	shf.r.wrap.b32 	%r449, %r448, %r447, 14;
	shf.r.wrap.b32 	%r450, %r447, %r448, 14;
	mov.b64 	%rd704, {%r450, %r449};
	shf.r.wrap.b32 	%r451, %r448, %r447, 18;
	shf.r.wrap.b32 	%r452, %r447, %r448, 18;
	mov.b64 	%rd705, {%r452, %r451};
	xor.b64  	%rd706, %rd705, %rd704;
	shf.l.wrap.b32 	%r453, %r447, %r448, 23;
	shf.l.wrap.b32 	%r454, %r448, %r447, 23;
	mov.b64 	%rd707, {%r454, %r453};
	xor.b64  	%rd708, %rd706, %rd707;
	xor.b64  	%rd709, %rd517, %rd493;
	and.b64  	%rd710, %rd692, %rd709;
	xor.b64  	%rd711, %rd710, %rd493;
	add.s64 	%rd712, %rd542, %rd470;
	add.s64 	%rd713, %rd712, %rd36;
	add.s64 	%rd714, %rd713, %rd711;
	add.s64 	%rd715, %rd714, %rd708;
	add.s64 	%rd716, %rd715, %rd481;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r455,%dummy}, %rd703;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r456}, %rd703;
	}
	shf.r.wrap.b32 	%r457, %r456, %r455, 28;
	shf.r.wrap.b32 	%r458, %r455, %r456, 28;
	mov.b64 	%rd717, {%r458, %r457};
	shf.l.wrap.b32 	%r459, %r455, %r456, 30;
	shf.l.wrap.b32 	%r460, %r456, %r455, 30;
	mov.b64 	%rd718, {%r460, %r459};
	xor.b64  	%rd719, %rd718, %rd717;
	shf.l.wrap.b32 	%r461, %r455, %r456, 25;
	shf.l.wrap.b32 	%r462, %r456, %r455, 25;
	mov.b64 	%rd720, {%r462, %r461};
	xor.b64  	%rd721, %rd719, %rd720;
	xor.b64  	%rd722, %rd703, %rd504;
	xor.b64  	%rd723, %rd703, %rd528;
	and.b64  	%rd724, %rd723, %rd722;
	xor.b64  	%rd725, %rd724, %rd703;
	add.s64 	%rd726, %rd715, %rd725;
	add.s64 	%rd727, %rd726, %rd721;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r463,%dummy}, %rd716;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r464}, %rd716;
	}
	shf.r.wrap.b32 	%r465, %r464, %r463, 14;
	shf.r.wrap.b32 	%r466, %r463, %r464, 14;
	mov.b64 	%rd728, {%r466, %r465};
	shf.r.wrap.b32 	%r467, %r464, %r463, 18;
	shf.r.wrap.b32 	%r468, %r463, %r464, 18;
	mov.b64 	%rd729, {%r468, %r467};
	xor.b64  	%rd730, %rd729, %rd728;
	shf.l.wrap.b32 	%r469, %r463, %r464, 23;
	shf.l.wrap.b32 	%r470, %r464, %r463, 23;
	mov.b64 	%rd731, {%r470, %r469};
	xor.b64  	%rd732, %rd730, %rd731;
	xor.b64  	%rd733, %rd692, %rd517;
	and.b64  	%rd734, %rd716, %rd733;
	xor.b64  	%rd735, %rd734, %rd517;
	add.s64 	%rd736, %rd554, %rd493;
	add.s64 	%rd737, %rd736, %rd37;
	add.s64 	%rd738, %rd737, %rd735;
	add.s64 	%rd739, %rd738, %rd732;
	add.s64 	%rd740, %rd739, %rd504;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r471,%dummy}, %rd727;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r472}, %rd727;
	}
	shf.r.wrap.b32 	%r473, %r472, %r471, 28;
	shf.r.wrap.b32 	%r474, %r471, %r472, 28;
	mov.b64 	%rd741, {%r474, %r473};
	shf.l.wrap.b32 	%r475, %r471, %r472, 30;
	shf.l.wrap.b32 	%r476, %r472, %r471, 30;
	mov.b64 	%rd742, {%r476, %r475};
	xor.b64  	%rd743, %rd742, %rd741;
	shf.l.wrap.b32 	%r477, %r471, %r472, 25;
	shf.l.wrap.b32 	%r478, %r472, %r471, 25;
	mov.b64 	%rd744, {%r478, %r477};
	xor.b64  	%rd745, %rd743, %rd744;
	xor.b64  	%rd746, %rd727, %rd528;
	xor.b64  	%rd747, %rd727, %rd703;
	and.b64  	%rd748, %rd747, %rd746;
	xor.b64  	%rd749, %rd748, %rd727;
	add.s64 	%rd750, %rd739, %rd749;
	add.s64 	%rd751, %rd750, %rd745;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r479,%dummy}, %rd740;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r480}, %rd740;
	}
	shf.r.wrap.b32 	%r481, %r480, %r479, 14;
	shf.r.wrap.b32 	%r482, %r479, %r480, 14;
	mov.b64 	%rd752, {%r482, %r481};
	shf.r.wrap.b32 	%r483, %r480, %r479, 18;
	shf.r.wrap.b32 	%r484, %r479, %r480, 18;
	mov.b64 	%rd753, {%r484, %r483};
	xor.b64  	%rd754, %rd753, %rd752;
	shf.l.wrap.b32 	%r485, %r479, %r480, 23;
	shf.l.wrap.b32 	%r486, %r480, %r479, 23;
	mov.b64 	%rd755, {%r486, %r485};
	xor.b64  	%rd756, %rd754, %rd755;
	xor.b64  	%rd757, %rd716, %rd692;
	and.b64  	%rd758, %rd740, %rd757;
	xor.b64  	%rd759, %rd758, %rd692;
	add.s64 	%rd760, %rd566, %rd517;
	add.s64 	%rd761, %rd760, %rd38;
	add.s64 	%rd762, %rd761, %rd759;
	add.s64 	%rd763, %rd762, %rd756;
	add.s64 	%rd764, %rd763, %rd528;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r487,%dummy}, %rd751;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r488}, %rd751;
	}
	shf.r.wrap.b32 	%r489, %r488, %r487, 28;
	shf.r.wrap.b32 	%r490, %r487, %r488, 28;
	mov.b64 	%rd765, {%r490, %r489};
	shf.l.wrap.b32 	%r491, %r487, %r488, 30;
	shf.l.wrap.b32 	%r492, %r488, %r487, 30;
	mov.b64 	%rd766, {%r492, %r491};
	xor.b64  	%rd767, %rd766, %rd765;
	shf.l.wrap.b32 	%r493, %r487, %r488, 25;
	shf.l.wrap.b32 	%r494, %r488, %r487, 25;
	mov.b64 	%rd768, {%r494, %r493};
	xor.b64  	%rd769, %rd767, %rd768;
	xor.b64  	%rd770, %rd751, %rd703;
	xor.b64  	%rd771, %rd751, %rd727;
	and.b64  	%rd772, %rd771, %rd770;
	xor.b64  	%rd773, %rd772, %rd751;
	add.s64 	%rd774, %rd763, %rd773;
	add.s64 	%rd775, %rd774, %rd769;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r495,%dummy}, %rd764;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r496}, %rd764;
	}
	shf.r.wrap.b32 	%r497, %r496, %r495, 14;
	shf.r.wrap.b32 	%r498, %r495, %r496, 14;
	mov.b64 	%rd776, {%r498, %r497};
	shf.r.wrap.b32 	%r499, %r496, %r495, 18;
	shf.r.wrap.b32 	%r500, %r495, %r496, 18;
	mov.b64 	%rd777, {%r500, %r499};
	xor.b64  	%rd778, %rd777, %rd776;
	shf.l.wrap.b32 	%r501, %r495, %r496, 23;
	shf.l.wrap.b32 	%r502, %r496, %r495, 23;
	mov.b64 	%rd779, {%r502, %r501};
	xor.b64  	%rd780, %rd778, %rd779;
	xor.b64  	%rd781, %rd740, %rd716;
	and.b64  	%rd782, %rd764, %rd781;
	xor.b64  	%rd783, %rd782, %rd716;
	add.s64 	%rd784, %rd692, %rd578;
	add.s64 	%rd785, %rd784, %rd39;
	add.s64 	%rd786, %rd785, %rd783;
	add.s64 	%rd787, %rd786, %rd780;
	add.s64 	%rd788, %rd787, %rd703;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r503,%dummy}, %rd775;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r504}, %rd775;
	}
	shf.r.wrap.b32 	%r505, %r504, %r503, 28;
	shf.r.wrap.b32 	%r506, %r503, %r504, 28;
	mov.b64 	%rd789, {%r506, %r505};
	shf.l.wrap.b32 	%r507, %r503, %r504, 30;
	shf.l.wrap.b32 	%r508, %r504, %r503, 30;
	mov.b64 	%rd790, {%r508, %r507};
	xor.b64  	%rd791, %rd790, %rd789;
	shf.l.wrap.b32 	%r509, %r503, %r504, 25;
	shf.l.wrap.b32 	%r510, %r504, %r503, 25;
	mov.b64 	%rd792, {%r510, %r509};
	xor.b64  	%rd793, %rd791, %rd792;
	xor.b64  	%rd794, %rd775, %rd727;
	xor.b64  	%rd795, %rd775, %rd751;
	and.b64  	%rd796, %rd795, %rd794;
	xor.b64  	%rd797, %rd796, %rd775;
	add.s64 	%rd798, %rd787, %rd797;
	add.s64 	%rd799, %rd798, %rd793;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r511,%dummy}, %rd788;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r512}, %rd788;
	}
	shf.r.wrap.b32 	%r513, %r512, %r511, 14;
	shf.r.wrap.b32 	%r514, %r511, %r512, 14;
	mov.b64 	%rd800, {%r514, %r513};
	shf.r.wrap.b32 	%r515, %r512, %r511, 18;
	shf.r.wrap.b32 	%r516, %r511, %r512, 18;
	mov.b64 	%rd801, {%r516, %r515};
	xor.b64  	%rd802, %rd801, %rd800;
	shf.l.wrap.b32 	%r517, %r511, %r512, 23;
	shf.l.wrap.b32 	%r518, %r512, %r511, 23;
	mov.b64 	%rd803, {%r518, %r517};
	xor.b64  	%rd804, %rd802, %rd803;
	xor.b64  	%rd805, %rd764, %rd740;
	and.b64  	%rd806, %rd788, %rd805;
	xor.b64  	%rd807, %rd806, %rd740;
	add.s64 	%rd808, %rd716, %rd590;
	add.s64 	%rd809, %rd808, %rd40;
	add.s64 	%rd810, %rd809, %rd807;
	add.s64 	%rd811, %rd810, %rd804;
	add.s64 	%rd812, %rd811, %rd727;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r519,%dummy}, %rd799;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r520}, %rd799;
	}
	shf.r.wrap.b32 	%r521, %r520, %r519, 28;
	shf.r.wrap.b32 	%r522, %r519, %r520, 28;
	mov.b64 	%rd813, {%r522, %r521};
	shf.l.wrap.b32 	%r523, %r519, %r520, 30;
	shf.l.wrap.b32 	%r524, %r520, %r519, 30;
	mov.b64 	%rd814, {%r524, %r523};
	xor.b64  	%rd815, %rd814, %rd813;
	shf.l.wrap.b32 	%r525, %r519, %r520, 25;
	shf.l.wrap.b32 	%r526, %r520, %r519, 25;
	mov.b64 	%rd816, {%r526, %r525};
	xor.b64  	%rd817, %rd815, %rd816;
	xor.b64  	%rd818, %rd799, %rd751;
	xor.b64  	%rd819, %rd799, %rd775;
	and.b64  	%rd820, %rd819, %rd818;
	xor.b64  	%rd821, %rd820, %rd799;
	add.s64 	%rd822, %rd811, %rd821;
	add.s64 	%rd823, %rd822, %rd817;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r527,%dummy}, %rd812;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r528}, %rd812;
	}
	shf.r.wrap.b32 	%r529, %r528, %r527, 14;
	shf.r.wrap.b32 	%r530, %r527, %r528, 14;
	mov.b64 	%rd824, {%r530, %r529};
	shf.r.wrap.b32 	%r531, %r528, %r527, 18;
	shf.r.wrap.b32 	%r532, %r527, %r528, 18;
	mov.b64 	%rd825, {%r532, %r531};
	xor.b64  	%rd826, %rd825, %rd824;
	shf.l.wrap.b32 	%r533, %r527, %r528, 23;
	shf.l.wrap.b32 	%r534, %r528, %r527, 23;
	mov.b64 	%rd827, {%r534, %r533};
	xor.b64  	%rd828, %rd826, %rd827;
	xor.b64  	%rd829, %rd788, %rd764;
	and.b64  	%rd830, %rd812, %rd829;
	xor.b64  	%rd831, %rd830, %rd764;
	add.s64 	%rd832, %rd740, %rd603;
	add.s64 	%rd833, %rd832, %rd41;
	add.s64 	%rd834, %rd833, %rd831;
	add.s64 	%rd835, %rd834, %rd828;
	add.s64 	%rd836, %rd835, %rd751;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r535,%dummy}, %rd823;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r536}, %rd823;
	}
	shf.r.wrap.b32 	%r537, %r536, %r535, 28;
	shf.r.wrap.b32 	%r538, %r535, %r536, 28;
	mov.b64 	%rd837, {%r538, %r537};
	shf.l.wrap.b32 	%r539, %r535, %r536, 30;
	shf.l.wrap.b32 	%r540, %r536, %r535, 30;
	mov.b64 	%rd838, {%r540, %r539};
	xor.b64  	%rd839, %rd838, %rd837;
	shf.l.wrap.b32 	%r541, %r535, %r536, 25;
	shf.l.wrap.b32 	%r542, %r536, %r535, 25;
	mov.b64 	%rd840, {%r542, %r541};
	xor.b64  	%rd841, %rd839, %rd840;
	xor.b64  	%rd842, %rd823, %rd775;
	xor.b64  	%rd843, %rd823, %rd799;
	and.b64  	%rd844, %rd843, %rd842;
	xor.b64  	%rd845, %rd844, %rd823;
	add.s64 	%rd846, %rd835, %rd845;
	add.s64 	%rd847, %rd846, %rd841;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r543,%dummy}, %rd836;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r544}, %rd836;
	}
	shf.r.wrap.b32 	%r545, %r544, %r543, 14;
	shf.r.wrap.b32 	%r546, %r543, %r544, 14;
	mov.b64 	%rd848, {%r546, %r545};
	shf.r.wrap.b32 	%r547, %r544, %r543, 18;
	shf.r.wrap.b32 	%r548, %r543, %r544, 18;
	mov.b64 	%rd849, {%r548, %r547};
	xor.b64  	%rd850, %rd849, %rd848;
	shf.l.wrap.b32 	%r549, %r543, %r544, 23;
	shf.l.wrap.b32 	%r550, %r544, %r543, 23;
	mov.b64 	%rd851, {%r550, %r549};
	xor.b64  	%rd852, %rd850, %rd851;
	xor.b64  	%rd853, %rd812, %rd788;
	and.b64  	%rd854, %rd836, %rd853;
	xor.b64  	%rd855, %rd854, %rd788;
	add.s64 	%rd856, %rd764, %rd616;
	add.s64 	%rd857, %rd856, %rd42;
	add.s64 	%rd858, %rd857, %rd855;
	add.s64 	%rd859, %rd858, %rd852;
	add.s64 	%rd860, %rd859, %rd775;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r551,%dummy}, %rd847;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r552}, %rd847;
	}
	shf.r.wrap.b32 	%r553, %r552, %r551, 28;
	shf.r.wrap.b32 	%r554, %r551, %r552, 28;
	mov.b64 	%rd861, {%r554, %r553};
	shf.l.wrap.b32 	%r555, %r551, %r552, 30;
	shf.l.wrap.b32 	%r556, %r552, %r551, 30;
	mov.b64 	%rd862, {%r556, %r555};
	xor.b64  	%rd863, %rd862, %rd861;
	shf.l.wrap.b32 	%r557, %r551, %r552, 25;
	shf.l.wrap.b32 	%r558, %r552, %r551, 25;
	mov.b64 	%rd864, {%r558, %r557};
	xor.b64  	%rd865, %rd863, %rd864;
	xor.b64  	%rd866, %rd847, %rd799;
	xor.b64  	%rd867, %rd847, %rd823;
	and.b64  	%rd868, %rd867, %rd866;
	xor.b64  	%rd869, %rd868, %rd847;
	add.s64 	%rd870, %rd859, %rd869;
	add.s64 	%rd871, %rd870, %rd865;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r559,%dummy}, %rd860;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r560}, %rd860;
	}
	shf.r.wrap.b32 	%r561, %r560, %r559, 14;
	shf.r.wrap.b32 	%r562, %r559, %r560, 14;
	mov.b64 	%rd872, {%r562, %r561};
	shf.r.wrap.b32 	%r563, %r560, %r559, 18;
	shf.r.wrap.b32 	%r564, %r559, %r560, 18;
	mov.b64 	%rd873, {%r564, %r563};
	xor.b64  	%rd874, %rd873, %rd872;
	shf.l.wrap.b32 	%r565, %r559, %r560, 23;
	shf.l.wrap.b32 	%r566, %r560, %r559, 23;
	mov.b64 	%rd875, {%r566, %r565};
	xor.b64  	%rd876, %rd874, %rd875;
	xor.b64  	%rd877, %rd836, %rd812;
	and.b64  	%rd878, %rd860, %rd877;
	xor.b64  	%rd879, %rd878, %rd812;
	add.s64 	%rd880, %rd788, %rd624;
	add.s64 	%rd881, %rd880, %rd43;
	add.s64 	%rd882, %rd881, %rd879;
	add.s64 	%rd883, %rd882, %rd876;
	add.s64 	%rd884, %rd883, %rd799;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r567,%dummy}, %rd871;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r568}, %rd871;
	}
	shf.r.wrap.b32 	%r569, %r568, %r567, 28;
	shf.r.wrap.b32 	%r570, %r567, %r568, 28;
	mov.b64 	%rd885, {%r570, %r569};
	shf.l.wrap.b32 	%r571, %r567, %r568, 30;
	shf.l.wrap.b32 	%r572, %r568, %r567, 30;
	mov.b64 	%rd886, {%r572, %r571};
	xor.b64  	%rd887, %rd886, %rd885;
	shf.l.wrap.b32 	%r573, %r567, %r568, 25;
	shf.l.wrap.b32 	%r574, %r568, %r567, 25;
	mov.b64 	%rd888, {%r574, %r573};
	xor.b64  	%rd889, %rd887, %rd888;
	xor.b64  	%rd890, %rd871, %rd823;
	xor.b64  	%rd891, %rd871, %rd847;
	and.b64  	%rd892, %rd891, %rd890;
	xor.b64  	%rd893, %rd892, %rd871;
	add.s64 	%rd894, %rd883, %rd893;
	add.s64 	%rd895, %rd894, %rd889;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r575,%dummy}, %rd884;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r576}, %rd884;
	}
	shf.r.wrap.b32 	%r577, %r576, %r575, 14;
	shf.r.wrap.b32 	%r578, %r575, %r576, 14;
	mov.b64 	%rd896, {%r578, %r577};
	shf.r.wrap.b32 	%r579, %r576, %r575, 18;
	shf.r.wrap.b32 	%r580, %r575, %r576, 18;
	mov.b64 	%rd897, {%r580, %r579};
	xor.b64  	%rd898, %rd897, %rd896;
	shf.l.wrap.b32 	%r581, %r575, %r576, 23;
	shf.l.wrap.b32 	%r582, %r576, %r575, 23;
	mov.b64 	%rd899, {%r582, %r581};
	xor.b64  	%rd900, %rd898, %rd899;
	xor.b64  	%rd901, %rd860, %rd836;
	and.b64  	%rd902, %rd884, %rd901;
	xor.b64  	%rd903, %rd902, %rd836;
	add.s64 	%rd904, %rd812, %rd631;
	add.s64 	%rd905, %rd904, %rd44;
	add.s64 	%rd906, %rd905, %rd903;
	add.s64 	%rd907, %rd906, %rd900;
	add.s64 	%rd908, %rd907, %rd823;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r583,%dummy}, %rd895;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r584}, %rd895;
	}
	shf.r.wrap.b32 	%r585, %r584, %r583, 28;
	shf.r.wrap.b32 	%r586, %r583, %r584, 28;
	mov.b64 	%rd909, {%r586, %r585};
	shf.l.wrap.b32 	%r587, %r583, %r584, 30;
	shf.l.wrap.b32 	%r588, %r584, %r583, 30;
	mov.b64 	%rd910, {%r588, %r587};
	xor.b64  	%rd911, %rd910, %rd909;
	shf.l.wrap.b32 	%r589, %r583, %r584, 25;
	shf.l.wrap.b32 	%r590, %r584, %r583, 25;
	mov.b64 	%rd912, {%r590, %r589};
	xor.b64  	%rd913, %rd911, %rd912;
	xor.b64  	%rd914, %rd895, %rd847;
	xor.b64  	%rd915, %rd895, %rd871;
	and.b64  	%rd916, %rd915, %rd914;
	xor.b64  	%rd917, %rd916, %rd895;
	add.s64 	%rd918, %rd907, %rd917;
	add.s64 	%rd919, %rd918, %rd913;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r591,%dummy}, %rd908;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r592}, %rd908;
	}
	shf.r.wrap.b32 	%r593, %r592, %r591, 14;
	shf.r.wrap.b32 	%r594, %r591, %r592, 14;
	mov.b64 	%rd920, {%r594, %r593};
	shf.r.wrap.b32 	%r595, %r592, %r591, 18;
	shf.r.wrap.b32 	%r596, %r591, %r592, 18;
	mov.b64 	%rd921, {%r596, %r595};
	xor.b64  	%rd922, %rd921, %rd920;
	shf.l.wrap.b32 	%r597, %r591, %r592, 23;
	shf.l.wrap.b32 	%r598, %r592, %r591, 23;
	mov.b64 	%rd923, {%r598, %r597};
	xor.b64  	%rd924, %rd922, %rd923;
	xor.b64  	%rd925, %rd884, %rd860;
	and.b64  	%rd926, %rd908, %rd925;
	xor.b64  	%rd927, %rd926, %rd860;
	add.s64 	%rd928, %rd836, %rd638;
	add.s64 	%rd929, %rd928, %rd45;
	add.s64 	%rd930, %rd929, %rd927;
	add.s64 	%rd931, %rd930, %rd924;
	add.s64 	%rd932, %rd931, %rd847;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r599,%dummy}, %rd919;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r600}, %rd919;
	}
	shf.r.wrap.b32 	%r601, %r600, %r599, 28;
	shf.r.wrap.b32 	%r602, %r599, %r600, 28;
	mov.b64 	%rd933, {%r602, %r601};
	shf.l.wrap.b32 	%r603, %r599, %r600, 30;
	shf.l.wrap.b32 	%r604, %r600, %r599, 30;
	mov.b64 	%rd934, {%r604, %r603};
	xor.b64  	%rd935, %rd934, %rd933;
	shf.l.wrap.b32 	%r605, %r599, %r600, 25;
	shf.l.wrap.b32 	%r606, %r600, %r599, 25;
	mov.b64 	%rd936, {%r606, %r605};
	xor.b64  	%rd937, %rd935, %rd936;
	xor.b64  	%rd938, %rd919, %rd871;
	xor.b64  	%rd939, %rd919, %rd895;
	and.b64  	%rd940, %rd939, %rd938;
	xor.b64  	%rd941, %rd940, %rd919;
	add.s64 	%rd942, %rd931, %rd941;
	add.s64 	%rd943, %rd942, %rd937;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r607,%dummy}, %rd932;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r608}, %rd932;
	}
	shf.r.wrap.b32 	%r609, %r608, %r607, 14;
	shf.r.wrap.b32 	%r610, %r607, %r608, 14;
	mov.b64 	%rd944, {%r610, %r609};
	shf.r.wrap.b32 	%r611, %r608, %r607, 18;
	shf.r.wrap.b32 	%r612, %r607, %r608, 18;
	mov.b64 	%rd945, {%r612, %r611};
	xor.b64  	%rd946, %rd945, %rd944;
	shf.l.wrap.b32 	%r613, %r607, %r608, 23;
	shf.l.wrap.b32 	%r614, %r608, %r607, 23;
	mov.b64 	%rd947, {%r614, %r613};
	xor.b64  	%rd948, %rd946, %rd947;
	xor.b64  	%rd949, %rd908, %rd884;
	and.b64  	%rd950, %rd932, %rd949;
	xor.b64  	%rd951, %rd950, %rd884;
	add.s64 	%rd952, %rd860, %rd645;
	add.s64 	%rd953, %rd952, %rd46;
	add.s64 	%rd954, %rd953, %rd951;
	add.s64 	%rd955, %rd954, %rd948;
	add.s64 	%rd956, %rd955, %rd871;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r615,%dummy}, %rd943;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r616}, %rd943;
	}
	shf.r.wrap.b32 	%r617, %r616, %r615, 28;
	shf.r.wrap.b32 	%r618, %r615, %r616, 28;
	mov.b64 	%rd957, {%r618, %r617};
	shf.l.wrap.b32 	%r619, %r615, %r616, 30;
	shf.l.wrap.b32 	%r620, %r616, %r615, 30;
	mov.b64 	%rd958, {%r620, %r619};
	xor.b64  	%rd959, %rd958, %rd957;
	shf.l.wrap.b32 	%r621, %r615, %r616, 25;
	shf.l.wrap.b32 	%r622, %r616, %r615, 25;
	mov.b64 	%rd960, {%r622, %r621};
	xor.b64  	%rd961, %rd959, %rd960;
	xor.b64  	%rd962, %rd943, %rd895;
	xor.b64  	%rd963, %rd943, %rd919;
	and.b64  	%rd964, %rd963, %rd962;
	xor.b64  	%rd965, %rd964, %rd943;
	add.s64 	%rd966, %rd955, %rd965;
	add.s64 	%rd967, %rd966, %rd961;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r623,%dummy}, %rd956;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r624}, %rd956;
	}
	shf.r.wrap.b32 	%r625, %r624, %r623, 14;
	shf.r.wrap.b32 	%r626, %r623, %r624, 14;
	mov.b64 	%rd968, {%r626, %r625};
	shf.r.wrap.b32 	%r627, %r624, %r623, 18;
	shf.r.wrap.b32 	%r628, %r623, %r624, 18;
	mov.b64 	%rd969, {%r628, %r627};
	xor.b64  	%rd970, %rd969, %rd968;
	shf.l.wrap.b32 	%r629, %r623, %r624, 23;
	shf.l.wrap.b32 	%r630, %r624, %r623, 23;
	mov.b64 	%rd971, {%r630, %r629};
	xor.b64  	%rd972, %rd970, %rd971;
	xor.b64  	%rd973, %rd932, %rd908;
	and.b64  	%rd974, %rd956, %rd973;
	xor.b64  	%rd975, %rd974, %rd908;
	add.s64 	%rd976, %rd884, %rd652;
	add.s64 	%rd977, %rd976, %rd47;
	add.s64 	%rd978, %rd977, %rd975;
	add.s64 	%rd979, %rd978, %rd972;
	add.s64 	%rd980, %rd979, %rd895;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r631,%dummy}, %rd967;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r632}, %rd967;
	}
	shf.r.wrap.b32 	%r633, %r632, %r631, 28;
	shf.r.wrap.b32 	%r634, %r631, %r632, 28;
	mov.b64 	%rd981, {%r634, %r633};
	shf.l.wrap.b32 	%r635, %r631, %r632, 30;
	shf.l.wrap.b32 	%r636, %r632, %r631, 30;
	mov.b64 	%rd982, {%r636, %r635};
	xor.b64  	%rd983, %rd982, %rd981;
	shf.l.wrap.b32 	%r637, %r631, %r632, 25;
	shf.l.wrap.b32 	%r638, %r632, %r631, 25;
	mov.b64 	%rd984, {%r638, %r637};
	xor.b64  	%rd985, %rd983, %rd984;
	xor.b64  	%rd986, %rd967, %rd919;
	xor.b64  	%rd987, %rd967, %rd943;
	and.b64  	%rd988, %rd987, %rd986;
	xor.b64  	%rd989, %rd988, %rd967;
	add.s64 	%rd990, %rd979, %rd989;
	add.s64 	%rd991, %rd990, %rd985;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r639,%dummy}, %rd980;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r640}, %rd980;
	}
	shf.r.wrap.b32 	%r641, %r640, %r639, 14;
	shf.r.wrap.b32 	%r642, %r639, %r640, 14;
	mov.b64 	%rd992, {%r642, %r641};
	shf.r.wrap.b32 	%r643, %r640, %r639, 18;
	shf.r.wrap.b32 	%r644, %r639, %r640, 18;
	mov.b64 	%rd993, {%r644, %r643};
	xor.b64  	%rd994, %rd993, %rd992;
	shf.l.wrap.b32 	%r645, %r639, %r640, 23;
	shf.l.wrap.b32 	%r646, %r640, %r639, 23;
	mov.b64 	%rd995, {%r646, %r645};
	xor.b64  	%rd996, %rd994, %rd995;
	xor.b64  	%rd997, %rd956, %rd932;
	and.b64  	%rd998, %rd980, %rd997;
	xor.b64  	%rd999, %rd998, %rd932;
	add.s64 	%rd1000, %rd908, %rd659;
	add.s64 	%rd1001, %rd1000, %rd48;
	add.s64 	%rd1002, %rd1001, %rd999;
	add.s64 	%rd1003, %rd1002, %rd996;
	add.s64 	%rd1004, %rd1003, %rd919;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r647,%dummy}, %rd991;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r648}, %rd991;
	}
	shf.r.wrap.b32 	%r649, %r648, %r647, 28;
	shf.r.wrap.b32 	%r650, %r647, %r648, 28;
	mov.b64 	%rd1005, {%r650, %r649};
	shf.l.wrap.b32 	%r651, %r647, %r648, 30;
	shf.l.wrap.b32 	%r652, %r648, %r647, 30;
	mov.b64 	%rd1006, {%r652, %r651};
	xor.b64  	%rd1007, %rd1006, %rd1005;
	shf.l.wrap.b32 	%r653, %r647, %r648, 25;
	shf.l.wrap.b32 	%r654, %r648, %r647, 25;
	mov.b64 	%rd1008, {%r654, %r653};
	xor.b64  	%rd1009, %rd1007, %rd1008;
	xor.b64  	%rd1010, %rd991, %rd943;
	xor.b64  	%rd1011, %rd991, %rd967;
	and.b64  	%rd1012, %rd1011, %rd1010;
	xor.b64  	%rd1013, %rd1012, %rd991;
	add.s64 	%rd1014, %rd1003, %rd1013;
	add.s64 	%rd1015, %rd1014, %rd1009;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r655,%dummy}, %rd1004;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r656}, %rd1004;
	}
	shf.r.wrap.b32 	%r657, %r656, %r655, 14;
	shf.r.wrap.b32 	%r658, %r655, %r656, 14;
	mov.b64 	%rd1016, {%r658, %r657};
	shf.r.wrap.b32 	%r659, %r656, %r655, 18;
	shf.r.wrap.b32 	%r660, %r655, %r656, 18;
	mov.b64 	%rd1017, {%r660, %r659};
	xor.b64  	%rd1018, %rd1017, %rd1016;
	shf.l.wrap.b32 	%r661, %r655, %r656, 23;
	shf.l.wrap.b32 	%r662, %r656, %r655, 23;
	mov.b64 	%rd1019, {%r662, %r661};
	xor.b64  	%rd1020, %rd1018, %rd1019;
	xor.b64  	%rd1021, %rd980, %rd956;
	and.b64  	%rd1022, %rd1004, %rd1021;
	xor.b64  	%rd1023, %rd1022, %rd956;
	add.s64 	%rd1024, %rd932, %rd666;
	add.s64 	%rd1025, %rd1024, %rd49;
	add.s64 	%rd1026, %rd1025, %rd1023;
	add.s64 	%rd1027, %rd1026, %rd1020;
	add.s64 	%rd1028, %rd1027, %rd943;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r663,%dummy}, %rd1015;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r664}, %rd1015;
	}
	shf.r.wrap.b32 	%r665, %r664, %r663, 28;
	shf.r.wrap.b32 	%r666, %r663, %r664, 28;
	mov.b64 	%rd1029, {%r666, %r665};
	shf.l.wrap.b32 	%r667, %r663, %r664, 30;
	shf.l.wrap.b32 	%r668, %r664, %r663, 30;
	mov.b64 	%rd1030, {%r668, %r667};
	xor.b64  	%rd1031, %rd1030, %rd1029;
	shf.l.wrap.b32 	%r669, %r663, %r664, 25;
	shf.l.wrap.b32 	%r670, %r664, %r663, 25;
	mov.b64 	%rd1032, {%r670, %r669};
	xor.b64  	%rd1033, %rd1031, %rd1032;
	xor.b64  	%rd1034, %rd1015, %rd967;
	xor.b64  	%rd1035, %rd1015, %rd991;
	and.b64  	%rd1036, %rd1035, %rd1034;
	xor.b64  	%rd1037, %rd1036, %rd1015;
	add.s64 	%rd1038, %rd1027, %rd1037;
	add.s64 	%rd1039, %rd1038, %rd1033;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r671,%dummy}, %rd1028;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r672}, %rd1028;
	}
	shf.r.wrap.b32 	%r673, %r672, %r671, 14;
	shf.r.wrap.b32 	%r674, %r671, %r672, 14;
	mov.b64 	%rd1040, {%r674, %r673};
	shf.r.wrap.b32 	%r675, %r672, %r671, 18;
	shf.r.wrap.b32 	%r676, %r671, %r672, 18;
	mov.b64 	%rd1041, {%r676, %r675};
	xor.b64  	%rd1042, %rd1041, %rd1040;
	shf.l.wrap.b32 	%r677, %r671, %r672, 23;
	shf.l.wrap.b32 	%r678, %r672, %r671, 23;
	mov.b64 	%rd1043, {%r678, %r677};
	xor.b64  	%rd1044, %rd1042, %rd1043;
	xor.b64  	%rd1045, %rd1004, %rd980;
	and.b64  	%rd1046, %rd1028, %rd1045;
	xor.b64  	%rd1047, %rd1046, %rd980;
	add.s64 	%rd1048, %rd956, %rd679;
	add.s64 	%rd1049, %rd1048, %rd50;
	add.s64 	%rd1050, %rd1049, %rd1047;
	add.s64 	%rd1051, %rd1050, %rd1044;
	add.s64 	%rd1052, %rd1051, %rd967;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r679,%dummy}, %rd1039;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r680}, %rd1039;
	}
	shf.r.wrap.b32 	%r681, %r680, %r679, 28;
	shf.r.wrap.b32 	%r682, %r679, %r680, 28;
	mov.b64 	%rd1053, {%r682, %r681};
	shf.l.wrap.b32 	%r683, %r679, %r680, 30;
	shf.l.wrap.b32 	%r684, %r680, %r679, 30;
	mov.b64 	%rd1054, {%r684, %r683};
	xor.b64  	%rd1055, %rd1054, %rd1053;
	shf.l.wrap.b32 	%r685, %r679, %r680, 25;
	shf.l.wrap.b32 	%r686, %r680, %r679, 25;
	mov.b64 	%rd1056, {%r686, %r685};
	xor.b64  	%rd1057, %rd1055, %rd1056;
	xor.b64  	%rd1058, %rd1039, %rd991;
	xor.b64  	%rd1059, %rd1039, %rd1015;
	and.b64  	%rd1060, %rd1059, %rd1058;
	xor.b64  	%rd1061, %rd1060, %rd1039;
	add.s64 	%rd1062, %rd1051, %rd1061;
	add.s64 	%rd1063, %rd1062, %rd1057;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r687,%dummy}, %rd666;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r688}, %rd666;
	}
	shf.r.wrap.b32 	%r689, %r688, %r687, 19;
	shf.r.wrap.b32 	%r690, %r687, %r688, 19;
	mov.b64 	%rd1064, {%r690, %r689};
	shf.l.wrap.b32 	%r691, %r687, %r688, 3;
	shf.l.wrap.b32 	%r692, %r688, %r687, 3;
	mov.b64 	%rd1065, {%r692, %r691};
	shr.u64 	%rd1066, %rd666, 6;
	xor.b64  	%rd1067, %rd1064, %rd1066;
	xor.b64  	%rd1068, %rd1067, %rd1065;
	shf.r.wrap.b32 	%r693, %r320, %r319, 1;
	shf.r.wrap.b32 	%r694, %r319, %r320, 1;
	mov.b64 	%rd1069, {%r694, %r693};
	shf.r.wrap.b32 	%r695, %r320, %r319, 8;
	shf.r.wrap.b32 	%r696, %r319, %r320, 8;
	mov.b64 	%rd1070, {%r696, %r695};
	shr.u64 	%rd1071, %rd542, 7;
	xor.b64  	%rd1072, %rd1069, %rd1071;
	xor.b64  	%rd1073, %rd1072, %rd1070;
	add.s64 	%rd1074, %rd631, %rd535;
	add.s64 	%rd1075, %rd1074, %rd1068;
	add.s64 	%rd1076, %rd1075, %rd1073;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r697,%dummy}, %rd679;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r698}, %rd679;
	}
	shf.r.wrap.b32 	%r699, %r698, %r697, 19;
	shf.r.wrap.b32 	%r700, %r697, %r698, 19;
	mov.b64 	%rd1077, {%r700, %r699};
	shf.l.wrap.b32 	%r701, %r697, %r698, 3;
	shf.l.wrap.b32 	%r702, %r698, %r697, 3;
	mov.b64 	%rd1078, {%r702, %r701};
	shr.u64 	%rd1079, %rd679, 6;
	xor.b64  	%rd1080, %rd1077, %rd1079;
	xor.b64  	%rd1081, %rd1080, %rd1078;
	shf.r.wrap.b32 	%r703, %r332, %r331, 1;
	shf.r.wrap.b32 	%r704, %r331, %r332, 1;
	mov.b64 	%rd1082, {%r704, %r703};
	shf.r.wrap.b32 	%r705, %r332, %r331, 8;
	shf.r.wrap.b32 	%r706, %r331, %r332, 8;
	mov.b64 	%rd1083, {%r706, %r705};
	shr.u64 	%rd1084, %rd554, 7;
	xor.b64  	%rd1085, %rd1082, %rd1084;
	xor.b64  	%rd1086, %rd1085, %rd1083;
	add.s64 	%rd1087, %rd638, %rd542;
	add.s64 	%rd1088, %rd1087, %rd1081;
	add.s64 	%rd1089, %rd1088, %rd1086;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r707,%dummy}, %rd1076;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r708}, %rd1076;
	}
	shf.r.wrap.b32 	%r709, %r708, %r707, 19;
	shf.r.wrap.b32 	%r710, %r707, %r708, 19;
	mov.b64 	%rd1090, {%r710, %r709};
	shf.l.wrap.b32 	%r711, %r707, %r708, 3;
	shf.l.wrap.b32 	%r712, %r708, %r707, 3;
	mov.b64 	%rd1091, {%r712, %r711};
	shr.u64 	%rd1092, %rd1076, 6;
	xor.b64  	%rd1093, %rd1090, %rd1092;
	xor.b64  	%rd1094, %rd1093, %rd1091;
	shf.r.wrap.b32 	%r713, %r344, %r343, 1;
	shf.r.wrap.b32 	%r714, %r343, %r344, 1;
	mov.b64 	%rd1095, {%r714, %r713};
	shf.r.wrap.b32 	%r715, %r344, %r343, 8;
	shf.r.wrap.b32 	%r716, %r343, %r344, 8;
	mov.b64 	%rd1096, {%r716, %r715};
	shr.u64 	%rd1097, %rd566, 7;
	xor.b64  	%rd1098, %rd1095, %rd1097;
	xor.b64  	%rd1099, %rd1098, %rd1096;
	add.s64 	%rd1100, %rd645, %rd554;
	add.s64 	%rd1101, %rd1100, %rd1094;
	add.s64 	%rd1102, %rd1101, %rd1099;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r717,%dummy}, %rd1089;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r718}, %rd1089;
	}
	shf.r.wrap.b32 	%r719, %r718, %r717, 19;
	shf.r.wrap.b32 	%r720, %r717, %r718, 19;
	mov.b64 	%rd1103, {%r720, %r719};
	shf.l.wrap.b32 	%r721, %r717, %r718, 3;
	shf.l.wrap.b32 	%r722, %r718, %r717, 3;
	mov.b64 	%rd1104, {%r722, %r721};
	shr.u64 	%rd1105, %rd1089, 6;
	xor.b64  	%rd1106, %rd1103, %rd1105;
	xor.b64  	%rd1107, %rd1106, %rd1104;
	shf.r.wrap.b32 	%r723, %r356, %r355, 1;
	shf.r.wrap.b32 	%r724, %r355, %r356, 1;
	mov.b64 	%rd1108, {%r724, %r723};
	shf.r.wrap.b32 	%r725, %r356, %r355, 8;
	shf.r.wrap.b32 	%r726, %r355, %r356, 8;
	mov.b64 	%rd1109, {%r726, %r725};
	shr.u64 	%rd1110, %rd578, 7;
	xor.b64  	%rd1111, %rd1108, %rd1110;
	xor.b64  	%rd1112, %rd1111, %rd1109;
	add.s64 	%rd1113, %rd652, %rd566;
	add.s64 	%rd1114, %rd1113, %rd1107;
	add.s64 	%rd1115, %rd1114, %rd1112;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r727,%dummy}, %rd1102;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r728}, %rd1102;
	}
	shf.r.wrap.b32 	%r729, %r728, %r727, 19;
	shf.r.wrap.b32 	%r730, %r727, %r728, 19;
	mov.b64 	%rd1116, {%r730, %r729};
	shf.l.wrap.b32 	%r731, %r727, %r728, 3;
	shf.l.wrap.b32 	%r732, %r728, %r727, 3;
	mov.b64 	%rd1117, {%r732, %r731};
	shr.u64 	%rd1118, %rd1102, 6;
	xor.b64  	%rd1119, %rd1116, %rd1118;
	xor.b64  	%rd1120, %rd1119, %rd1117;
	shf.r.wrap.b32 	%r733, %r368, %r367, 1;
	shf.r.wrap.b32 	%r734, %r367, %r368, 1;
	mov.b64 	%rd1121, {%r734, %r733};
	shf.r.wrap.b32 	%r735, %r368, %r367, 8;
	shf.r.wrap.b32 	%r736, %r367, %r368, 8;
	mov.b64 	%rd1122, {%r736, %r735};
	shr.u64 	%rd1123, %rd590, 7;
	xor.b64  	%rd1124, %rd1121, %rd1123;
	xor.b64  	%rd1125, %rd1124, %rd1122;
	add.s64 	%rd1126, %rd659, %rd578;
	add.s64 	%rd1127, %rd1126, %rd1120;
	add.s64 	%rd1128, %rd1127, %rd1125;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r737,%dummy}, %rd1115;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r738}, %rd1115;
	}
	shf.r.wrap.b32 	%r739, %r738, %r737, 19;
	shf.r.wrap.b32 	%r740, %r737, %r738, 19;
	mov.b64 	%rd1129, {%r740, %r739};
	shf.l.wrap.b32 	%r741, %r737, %r738, 3;
	shf.l.wrap.b32 	%r742, %r738, %r737, 3;
	mov.b64 	%rd1130, {%r742, %r741};
	shr.u64 	%rd1131, %rd1115, 6;
	xor.b64  	%rd1132, %rd1129, %rd1131;
	xor.b64  	%rd1133, %rd1132, %rd1130;
	shf.r.wrap.b32 	%r743, %r380, %r379, 1;
	shf.r.wrap.b32 	%r744, %r379, %r380, 1;
	mov.b64 	%rd1134, {%r744, %r743};
	shf.r.wrap.b32 	%r745, %r380, %r379, 8;
	shf.r.wrap.b32 	%r746, %r379, %r380, 8;
	mov.b64 	%rd1135, {%r746, %r745};
	shr.u64 	%rd1136, %rd603, 7;
	xor.b64  	%rd1137, %rd1134, %rd1136;
	xor.b64  	%rd1138, %rd1137, %rd1135;
	add.s64 	%rd1139, %rd666, %rd590;
	add.s64 	%rd1140, %rd1139, %rd1133;
	add.s64 	%rd1141, %rd1140, %rd1138;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r747,%dummy}, %rd1128;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r748}, %rd1128;
	}
	shf.r.wrap.b32 	%r749, %r748, %r747, 19;
	shf.r.wrap.b32 	%r750, %r747, %r748, 19;
	mov.b64 	%rd1142, {%r750, %r749};
	shf.l.wrap.b32 	%r751, %r747, %r748, 3;
	shf.l.wrap.b32 	%r752, %r748, %r747, 3;
	mov.b64 	%rd1143, {%r752, %r751};
	shr.u64 	%rd1144, %rd1128, 6;
	xor.b64  	%rd1145, %rd1142, %rd1144;
	xor.b64  	%rd1146, %rd1145, %rd1143;
	shf.r.wrap.b32 	%r753, %r386, %r385, 1;
	shf.r.wrap.b32 	%r754, %r385, %r386, 1;
	mov.b64 	%rd1147, {%r754, %r753};
	shf.r.wrap.b32 	%r755, %r386, %r385, 8;
	shf.r.wrap.b32 	%r756, %r385, %r386, 8;
	mov.b64 	%rd1148, {%r756, %r755};
	shr.u64 	%rd1149, %rd616, 7;
	xor.b64  	%rd1150, %rd1147, %rd1149;
	xor.b64  	%rd1151, %rd1150, %rd1148;
	add.s64 	%rd1152, %rd679, %rd603;
	add.s64 	%rd1153, %rd1152, %rd1146;
	add.s64 	%rd1154, %rd1153, %rd1151;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r757,%dummy}, %rd1141;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r758}, %rd1141;
	}
	shf.r.wrap.b32 	%r759, %r758, %r757, 19;
	shf.r.wrap.b32 	%r760, %r757, %r758, 19;
	mov.b64 	%rd1155, {%r760, %r759};
	shf.l.wrap.b32 	%r761, %r757, %r758, 3;
	shf.l.wrap.b32 	%r762, %r758, %r757, 3;
	mov.b64 	%rd1156, {%r762, %r761};
	shr.u64 	%rd1157, %rd1141, 6;
	xor.b64  	%rd1158, %rd1155, %rd1157;
	xor.b64  	%rd1159, %rd1158, %rd1156;
	shf.r.wrap.b32 	%r763, %r392, %r391, 1;
	shf.r.wrap.b32 	%r764, %r391, %r392, 1;
	mov.b64 	%rd1160, {%r764, %r763};
	shf.r.wrap.b32 	%r765, %r392, %r391, 8;
	shf.r.wrap.b32 	%r766, %r391, %r392, 8;
	mov.b64 	%rd1161, {%r766, %r765};
	shr.u64 	%rd1162, %rd624, 7;
	xor.b64  	%rd1163, %rd1160, %rd1162;
	xor.b64  	%rd1164, %rd1163, %rd1161;
	add.s64 	%rd1165, %rd1076, %rd616;
	add.s64 	%rd1166, %rd1165, %rd1159;
	add.s64 	%rd1167, %rd1166, %rd1164;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r767,%dummy}, %rd1154;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r768}, %rd1154;
	}
	shf.r.wrap.b32 	%r769, %r768, %r767, 19;
	shf.r.wrap.b32 	%r770, %r767, %r768, 19;
	mov.b64 	%rd1168, {%r770, %r769};
	shf.l.wrap.b32 	%r771, %r767, %r768, 3;
	shf.l.wrap.b32 	%r772, %r768, %r767, 3;
	mov.b64 	%rd1169, {%r772, %r771};
	shr.u64 	%rd1170, %rd1154, 6;
	xor.b64  	%rd1171, %rd1168, %rd1170;
	xor.b64  	%rd1172, %rd1171, %rd1169;
	shf.r.wrap.b32 	%r773, %r398, %r397, 1;
	shf.r.wrap.b32 	%r774, %r397, %r398, 1;
	mov.b64 	%rd1173, {%r774, %r773};
	shf.r.wrap.b32 	%r775, %r398, %r397, 8;
	shf.r.wrap.b32 	%r776, %r397, %r398, 8;
	mov.b64 	%rd1174, {%r776, %r775};
	shr.u64 	%rd1175, %rd631, 7;
	xor.b64  	%rd1176, %rd1173, %rd1175;
	xor.b64  	%rd1177, %rd1176, %rd1174;
	add.s64 	%rd1178, %rd1089, %rd624;
	add.s64 	%rd1179, %rd1178, %rd1172;
	add.s64 	%rd1180, %rd1179, %rd1177;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r777,%dummy}, %rd1167;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r778}, %rd1167;
	}
	shf.r.wrap.b32 	%r779, %r778, %r777, 19;
	shf.r.wrap.b32 	%r780, %r777, %r778, 19;
	mov.b64 	%rd1181, {%r780, %r779};
	shf.l.wrap.b32 	%r781, %r777, %r778, 3;
	shf.l.wrap.b32 	%r782, %r778, %r777, 3;
	mov.b64 	%rd1182, {%r782, %r781};
	shr.u64 	%rd1183, %rd1167, 6;
	xor.b64  	%rd1184, %rd1181, %rd1183;
	xor.b64  	%rd1185, %rd1184, %rd1182;
	shf.r.wrap.b32 	%r783, %r404, %r403, 1;
	shf.r.wrap.b32 	%r784, %r403, %r404, 1;
	mov.b64 	%rd1186, {%r784, %r783};
	shf.r.wrap.b32 	%r785, %r404, %r403, 8;
	shf.r.wrap.b32 	%r786, %r403, %r404, 8;
	mov.b64 	%rd1187, {%r786, %r785};
	shr.u64 	%rd1188, %rd638, 7;
	xor.b64  	%rd1189, %rd1186, %rd1188;
	xor.b64  	%rd1190, %rd1189, %rd1187;
	add.s64 	%rd1191, %rd1102, %rd631;
	add.s64 	%rd1192, %rd1191, %rd1185;
	add.s64 	%rd1193, %rd1192, %rd1190;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r787,%dummy}, %rd1180;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r788}, %rd1180;
	}
	shf.r.wrap.b32 	%r789, %r788, %r787, 19;
	shf.r.wrap.b32 	%r790, %r787, %r788, 19;
	mov.b64 	%rd1194, {%r790, %r789};
	shf.l.wrap.b32 	%r791, %r787, %r788, 3;
	shf.l.wrap.b32 	%r792, %r788, %r787, 3;
	mov.b64 	%rd1195, {%r792, %r791};
	shr.u64 	%rd1196, %rd1180, 6;
	xor.b64  	%rd1197, %rd1194, %rd1196;
	xor.b64  	%rd1198, %rd1197, %rd1195;
	shf.r.wrap.b32 	%r793, %r410, %r409, 1;
	shf.r.wrap.b32 	%r794, %r409, %r410, 1;
	mov.b64 	%rd1199, {%r794, %r793};
	shf.r.wrap.b32 	%r795, %r410, %r409, 8;
	shf.r.wrap.b32 	%r796, %r409, %r410, 8;
	mov.b64 	%rd1200, {%r796, %r795};
	shr.u64 	%rd1201, %rd645, 7;
	xor.b64  	%rd1202, %rd1199, %rd1201;
	xor.b64  	%rd1203, %rd1202, %rd1200;
	add.s64 	%rd1204, %rd1115, %rd638;
	add.s64 	%rd1205, %rd1204, %rd1198;
	add.s64 	%rd1206, %rd1205, %rd1203;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r797,%dummy}, %rd1193;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r798}, %rd1193;
	}
	shf.r.wrap.b32 	%r799, %r798, %r797, 19;
	shf.r.wrap.b32 	%r800, %r797, %r798, 19;
	mov.b64 	%rd1207, {%r800, %r799};
	shf.l.wrap.b32 	%r801, %r797, %r798, 3;
	shf.l.wrap.b32 	%r802, %r798, %r797, 3;
	mov.b64 	%rd1208, {%r802, %r801};
	shr.u64 	%rd1209, %rd1193, 6;
	xor.b64  	%rd1210, %rd1207, %rd1209;
	xor.b64  	%rd1211, %rd1210, %rd1208;
	shf.r.wrap.b32 	%r803, %r416, %r415, 1;
	shf.r.wrap.b32 	%r804, %r415, %r416, 1;
	mov.b64 	%rd1212, {%r804, %r803};
	shf.r.wrap.b32 	%r805, %r416, %r415, 8;
	shf.r.wrap.b32 	%r806, %r415, %r416, 8;
	mov.b64 	%rd1213, {%r806, %r805};
	shr.u64 	%rd1214, %rd652, 7;
	xor.b64  	%rd1215, %rd1212, %rd1214;
	xor.b64  	%rd1216, %rd1215, %rd1213;
	add.s64 	%rd1217, %rd1128, %rd645;
	add.s64 	%rd1218, %rd1217, %rd1211;
	add.s64 	%rd1219, %rd1218, %rd1216;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r807,%dummy}, %rd1206;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r808}, %rd1206;
	}
	shf.r.wrap.b32 	%r809, %r808, %r807, 19;
	shf.r.wrap.b32 	%r810, %r807, %r808, 19;
	mov.b64 	%rd1220, {%r810, %r809};
	shf.l.wrap.b32 	%r811, %r807, %r808, 3;
	shf.l.wrap.b32 	%r812, %r808, %r807, 3;
	mov.b64 	%rd1221, {%r812, %r811};
	shr.u64 	%rd1222, %rd1206, 6;
	xor.b64  	%rd1223, %rd1220, %rd1222;
	xor.b64  	%rd1224, %rd1223, %rd1221;
	shf.r.wrap.b32 	%r813, %r422, %r421, 1;
	shf.r.wrap.b32 	%r814, %r421, %r422, 1;
	mov.b64 	%rd1225, {%r814, %r813};
	shf.r.wrap.b32 	%r815, %r422, %r421, 8;
	shf.r.wrap.b32 	%r816, %r421, %r422, 8;
	mov.b64 	%rd1226, {%r816, %r815};
	shr.u64 	%rd1227, %rd659, 7;
	xor.b64  	%rd1228, %rd1225, %rd1227;
	xor.b64  	%rd1229, %rd1228, %rd1226;
	add.s64 	%rd1230, %rd1141, %rd652;
	add.s64 	%rd1231, %rd1230, %rd1224;
	add.s64 	%rd1232, %rd1231, %rd1229;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r817,%dummy}, %rd1219;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r818}, %rd1219;
	}
	shf.r.wrap.b32 	%r819, %r818, %r817, 19;
	shf.r.wrap.b32 	%r820, %r817, %r818, 19;
	mov.b64 	%rd1233, {%r820, %r819};
	shf.l.wrap.b32 	%r821, %r817, %r818, 3;
	shf.l.wrap.b32 	%r822, %r818, %r817, 3;
	mov.b64 	%rd1234, {%r822, %r821};
	shr.u64 	%rd1235, %rd1219, 6;
	xor.b64  	%rd1236, %rd1233, %rd1235;
	xor.b64  	%rd1237, %rd1236, %rd1234;
	shf.r.wrap.b32 	%r823, %r688, %r687, 1;
	shf.r.wrap.b32 	%r824, %r687, %r688, 1;
	mov.b64 	%rd1238, {%r824, %r823};
	shf.r.wrap.b32 	%r825, %r688, %r687, 8;
	shf.r.wrap.b32 	%r826, %r687, %r688, 8;
	mov.b64 	%rd1239, {%r826, %r825};
	shr.u64 	%rd1240, %rd666, 7;
	xor.b64  	%rd1241, %rd1238, %rd1240;
	xor.b64  	%rd1242, %rd1241, %rd1239;
	add.s64 	%rd1243, %rd1154, %rd659;
	add.s64 	%rd1244, %rd1243, %rd1237;
	add.s64 	%rd1245, %rd1244, %rd1242;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r827,%dummy}, %rd1232;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r828}, %rd1232;
	}
	shf.r.wrap.b32 	%r829, %r828, %r827, 19;
	shf.r.wrap.b32 	%r830, %r827, %r828, 19;
	mov.b64 	%rd1246, {%r830, %r829};
	shf.l.wrap.b32 	%r831, %r827, %r828, 3;
	shf.l.wrap.b32 	%r832, %r828, %r827, 3;
	mov.b64 	%rd1247, {%r832, %r831};
	shr.u64 	%rd1248, %rd1232, 6;
	xor.b64  	%rd1249, %rd1246, %rd1248;
	xor.b64  	%rd1250, %rd1249, %rd1247;
	shf.r.wrap.b32 	%r833, %r698, %r697, 1;
	shf.r.wrap.b32 	%r834, %r697, %r698, 1;
	mov.b64 	%rd1251, {%r834, %r833};
	shf.r.wrap.b32 	%r835, %r698, %r697, 8;
	shf.r.wrap.b32 	%r836, %r697, %r698, 8;
	mov.b64 	%rd1252, {%r836, %r835};
	shr.u64 	%rd1253, %rd679, 7;
	xor.b64  	%rd1254, %rd1251, %rd1253;
	xor.b64  	%rd1255, %rd1254, %rd1252;
	add.s64 	%rd1256, %rd1167, %rd666;
	add.s64 	%rd1257, %rd1256, %rd1250;
	add.s64 	%rd1258, %rd1257, %rd1255;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r837,%dummy}, %rd1245;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r838}, %rd1245;
	}
	shf.r.wrap.b32 	%r839, %r838, %r837, 19;
	shf.r.wrap.b32 	%r840, %r837, %r838, 19;
	mov.b64 	%rd1259, {%r840, %r839};
	shf.l.wrap.b32 	%r841, %r837, %r838, 3;
	shf.l.wrap.b32 	%r842, %r838, %r837, 3;
	mov.b64 	%rd1260, {%r842, %r841};
	shr.u64 	%rd1261, %rd1245, 6;
	xor.b64  	%rd1262, %rd1259, %rd1261;
	xor.b64  	%rd1263, %rd1262, %rd1260;
	shf.r.wrap.b32 	%r843, %r708, %r707, 1;
	shf.r.wrap.b32 	%r844, %r707, %r708, 1;
	mov.b64 	%rd1264, {%r844, %r843};
	shf.r.wrap.b32 	%r845, %r708, %r707, 8;
	shf.r.wrap.b32 	%r846, %r707, %r708, 8;
	mov.b64 	%rd1265, {%r846, %r845};
	shr.u64 	%rd1266, %rd1076, 7;
	xor.b64  	%rd1267, %rd1264, %rd1266;
	xor.b64  	%rd1268, %rd1267, %rd1265;
	add.s64 	%rd1269, %rd1180, %rd679;
	add.s64 	%rd1270, %rd1269, %rd1263;
	add.s64 	%rd1271, %rd1270, %rd1268;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r847,%dummy}, %rd1052;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r848}, %rd1052;
	}
	shf.r.wrap.b32 	%r849, %r848, %r847, 14;
	shf.r.wrap.b32 	%r850, %r847, %r848, 14;
	mov.b64 	%rd1272, {%r850, %r849};
	shf.r.wrap.b32 	%r851, %r848, %r847, 18;
	shf.r.wrap.b32 	%r852, %r847, %r848, 18;
	mov.b64 	%rd1273, {%r852, %r851};
	xor.b64  	%rd1274, %rd1273, %rd1272;
	shf.l.wrap.b32 	%r853, %r847, %r848, 23;
	shf.l.wrap.b32 	%r854, %r848, %r847, 23;
	mov.b64 	%rd1275, {%r854, %r853};
	xor.b64  	%rd1276, %rd1274, %rd1275;
	xor.b64  	%rd1277, %rd1028, %rd1004;
	and.b64  	%rd1278, %rd1277, %rd1052;
	xor.b64  	%rd1279, %rd1278, %rd1004;
	add.s64 	%rd1280, %rd1279, %rd980;
	add.s64 	%rd1281, %rd1280, %rd1076;
	add.s64 	%rd1282, %rd1281, %rd51;
	add.s64 	%rd1283, %rd1282, %rd1276;
	add.s64 	%rd1284, %rd1283, %rd991;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r855,%dummy}, %rd1063;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r856}, %rd1063;
	}
	shf.r.wrap.b32 	%r857, %r856, %r855, 28;
	shf.r.wrap.b32 	%r858, %r855, %r856, 28;
	mov.b64 	%rd1285, {%r858, %r857};
	shf.l.wrap.b32 	%r859, %r855, %r856, 30;
	shf.l.wrap.b32 	%r860, %r856, %r855, 30;
	mov.b64 	%rd1286, {%r860, %r859};
	xor.b64  	%rd1287, %rd1286, %rd1285;
	shf.l.wrap.b32 	%r861, %r855, %r856, 25;
	shf.l.wrap.b32 	%r862, %r856, %r855, 25;
	mov.b64 	%rd1288, {%r862, %r861};
	xor.b64  	%rd1289, %rd1287, %rd1288;
	xor.b64  	%rd1290, %rd1063, %rd1015;
	xor.b64  	%rd1291, %rd1063, %rd1039;
	and.b64  	%rd1292, %rd1291, %rd1290;
	xor.b64  	%rd1293, %rd1292, %rd1063;
	add.s64 	%rd1294, %rd1283, %rd1293;
	add.s64 	%rd1295, %rd1294, %rd1289;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r863,%dummy}, %rd1284;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r864}, %rd1284;
	}
	shf.r.wrap.b32 	%r865, %r864, %r863, 14;
	shf.r.wrap.b32 	%r866, %r863, %r864, 14;
	mov.b64 	%rd1296, {%r866, %r865};
	shf.r.wrap.b32 	%r867, %r864, %r863, 18;
	shf.r.wrap.b32 	%r868, %r863, %r864, 18;
	mov.b64 	%rd1297, {%r868, %r867};
	xor.b64  	%rd1298, %rd1297, %rd1296;
	shf.l.wrap.b32 	%r869, %r863, %r864, 23;
	shf.l.wrap.b32 	%r870, %r864, %r863, 23;
	mov.b64 	%rd1299, {%r870, %r869};
	xor.b64  	%rd1300, %rd1298, %rd1299;
	xor.b64  	%rd1301, %rd1052, %rd1028;
	and.b64  	%rd1302, %rd1284, %rd1301;
	xor.b64  	%rd1303, %rd1302, %rd1028;
	add.s64 	%rd1304, %rd1089, %rd1004;
	add.s64 	%rd1305, %rd1304, %rd52;
	add.s64 	%rd1306, %rd1305, %rd1303;
	add.s64 	%rd1307, %rd1306, %rd1300;
	add.s64 	%rd1308, %rd1307, %rd1015;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r871,%dummy}, %rd1295;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r872}, %rd1295;
	}
	shf.r.wrap.b32 	%r873, %r872, %r871, 28;
	shf.r.wrap.b32 	%r874, %r871, %r872, 28;
	mov.b64 	%rd1309, {%r874, %r873};
	shf.l.wrap.b32 	%r875, %r871, %r872, 30;
	shf.l.wrap.b32 	%r876, %r872, %r871, 30;
	mov.b64 	%rd1310, {%r876, %r875};
	xor.b64  	%rd1311, %rd1310, %rd1309;
	shf.l.wrap.b32 	%r877, %r871, %r872, 25;
	shf.l.wrap.b32 	%r878, %r872, %r871, 25;
	mov.b64 	%rd1312, {%r878, %r877};
	xor.b64  	%rd1313, %rd1311, %rd1312;
	xor.b64  	%rd1314, %rd1295, %rd1039;
	xor.b64  	%rd1315, %rd1295, %rd1063;
	and.b64  	%rd1316, %rd1315, %rd1314;
	xor.b64  	%rd1317, %rd1316, %rd1295;
	add.s64 	%rd1318, %rd1307, %rd1317;
	add.s64 	%rd1319, %rd1318, %rd1313;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r879,%dummy}, %rd1308;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r880}, %rd1308;
	}
	shf.r.wrap.b32 	%r881, %r880, %r879, 14;
	shf.r.wrap.b32 	%r882, %r879, %r880, 14;
	mov.b64 	%rd1320, {%r882, %r881};
	shf.r.wrap.b32 	%r883, %r880, %r879, 18;
	shf.r.wrap.b32 	%r884, %r879, %r880, 18;
	mov.b64 	%rd1321, {%r884, %r883};
	xor.b64  	%rd1322, %rd1321, %rd1320;
	shf.l.wrap.b32 	%r885, %r879, %r880, 23;
	shf.l.wrap.b32 	%r886, %r880, %r879, 23;
	mov.b64 	%rd1323, {%r886, %r885};
	xor.b64  	%rd1324, %rd1322, %rd1323;
	xor.b64  	%rd1325, %rd1284, %rd1052;
	and.b64  	%rd1326, %rd1308, %rd1325;
	xor.b64  	%rd1327, %rd1326, %rd1052;
	add.s64 	%rd1328, %rd1102, %rd1028;
	add.s64 	%rd1329, %rd1328, %rd53;
	add.s64 	%rd1330, %rd1329, %rd1327;
	add.s64 	%rd1331, %rd1330, %rd1324;
	add.s64 	%rd1332, %rd1331, %rd1039;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r887,%dummy}, %rd1319;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r888}, %rd1319;
	}
	shf.r.wrap.b32 	%r889, %r888, %r887, 28;
	shf.r.wrap.b32 	%r890, %r887, %r888, 28;
	mov.b64 	%rd1333, {%r890, %r889};
	shf.l.wrap.b32 	%r891, %r887, %r888, 30;
	shf.l.wrap.b32 	%r892, %r888, %r887, 30;
	mov.b64 	%rd1334, {%r892, %r891};
	xor.b64  	%rd1335, %rd1334, %rd1333;
	shf.l.wrap.b32 	%r893, %r887, %r888, 25;
	shf.l.wrap.b32 	%r894, %r888, %r887, 25;
	mov.b64 	%rd1336, {%r894, %r893};
	xor.b64  	%rd1337, %rd1335, %rd1336;
	xor.b64  	%rd1338, %rd1319, %rd1063;
	xor.b64  	%rd1339, %rd1319, %rd1295;
	and.b64  	%rd1340, %rd1339, %rd1338;
	xor.b64  	%rd1341, %rd1340, %rd1319;
	add.s64 	%rd1342, %rd1331, %rd1341;
	add.s64 	%rd1343, %rd1342, %rd1337;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r895,%dummy}, %rd1332;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r896}, %rd1332;
	}
	shf.r.wrap.b32 	%r897, %r896, %r895, 14;
	shf.r.wrap.b32 	%r898, %r895, %r896, 14;
	mov.b64 	%rd1344, {%r898, %r897};
	shf.r.wrap.b32 	%r899, %r896, %r895, 18;
	shf.r.wrap.b32 	%r900, %r895, %r896, 18;
	mov.b64 	%rd1345, {%r900, %r899};
	xor.b64  	%rd1346, %rd1345, %rd1344;
	shf.l.wrap.b32 	%r901, %r895, %r896, 23;
	shf.l.wrap.b32 	%r902, %r896, %r895, 23;
	mov.b64 	%rd1347, {%r902, %r901};
	xor.b64  	%rd1348, %rd1346, %rd1347;
	xor.b64  	%rd1349, %rd1308, %rd1284;
	and.b64  	%rd1350, %rd1332, %rd1349;
	xor.b64  	%rd1351, %rd1350, %rd1284;
	add.s64 	%rd1352, %rd1115, %rd1052;
	add.s64 	%rd1353, %rd1352, %rd54;
	add.s64 	%rd1354, %rd1353, %rd1351;
	add.s64 	%rd1355, %rd1354, %rd1348;
	add.s64 	%rd1356, %rd1355, %rd1063;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r903,%dummy}, %rd1343;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r904}, %rd1343;
	}
	shf.r.wrap.b32 	%r905, %r904, %r903, 28;
	shf.r.wrap.b32 	%r906, %r903, %r904, 28;
	mov.b64 	%rd1357, {%r906, %r905};
	shf.l.wrap.b32 	%r907, %r903, %r904, 30;
	shf.l.wrap.b32 	%r908, %r904, %r903, 30;
	mov.b64 	%rd1358, {%r908, %r907};
	xor.b64  	%rd1359, %rd1358, %rd1357;
	shf.l.wrap.b32 	%r909, %r903, %r904, 25;
	shf.l.wrap.b32 	%r910, %r904, %r903, 25;
	mov.b64 	%rd1360, {%r910, %r909};
	xor.b64  	%rd1361, %rd1359, %rd1360;
	xor.b64  	%rd1362, %rd1343, %rd1295;
	xor.b64  	%rd1363, %rd1343, %rd1319;
	and.b64  	%rd1364, %rd1363, %rd1362;
	xor.b64  	%rd1365, %rd1364, %rd1343;
	add.s64 	%rd1366, %rd1355, %rd1365;
	add.s64 	%rd1367, %rd1366, %rd1361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r911,%dummy}, %rd1356;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r912}, %rd1356;
	}
	shf.r.wrap.b32 	%r913, %r912, %r911, 14;
	shf.r.wrap.b32 	%r914, %r911, %r912, 14;
	mov.b64 	%rd1368, {%r914, %r913};
	shf.r.wrap.b32 	%r915, %r912, %r911, 18;
	shf.r.wrap.b32 	%r916, %r911, %r912, 18;
	mov.b64 	%rd1369, {%r916, %r915};
	xor.b64  	%rd1370, %rd1369, %rd1368;
	shf.l.wrap.b32 	%r917, %r911, %r912, 23;
	shf.l.wrap.b32 	%r918, %r912, %r911, 23;
	mov.b64 	%rd1371, {%r918, %r917};
	xor.b64  	%rd1372, %rd1370, %rd1371;
	xor.b64  	%rd1373, %rd1332, %rd1308;
	and.b64  	%rd1374, %rd1356, %rd1373;
	xor.b64  	%rd1375, %rd1374, %rd1308;
	add.s64 	%rd1376, %rd1284, %rd1128;
	add.s64 	%rd1377, %rd1376, %rd55;
	add.s64 	%rd1378, %rd1377, %rd1375;
	add.s64 	%rd1379, %rd1378, %rd1372;
	add.s64 	%rd1380, %rd1379, %rd1295;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r919,%dummy}, %rd1367;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r920}, %rd1367;
	}
	shf.r.wrap.b32 	%r921, %r920, %r919, 28;
	shf.r.wrap.b32 	%r922, %r919, %r920, 28;
	mov.b64 	%rd1381, {%r922, %r921};
	shf.l.wrap.b32 	%r923, %r919, %r920, 30;
	shf.l.wrap.b32 	%r924, %r920, %r919, 30;
	mov.b64 	%rd1382, {%r924, %r923};
	xor.b64  	%rd1383, %rd1382, %rd1381;
	shf.l.wrap.b32 	%r925, %r919, %r920, 25;
	shf.l.wrap.b32 	%r926, %r920, %r919, 25;
	mov.b64 	%rd1384, {%r926, %r925};
	xor.b64  	%rd1385, %rd1383, %rd1384;
	xor.b64  	%rd1386, %rd1367, %rd1319;
	xor.b64  	%rd1387, %rd1367, %rd1343;
	and.b64  	%rd1388, %rd1387, %rd1386;
	xor.b64  	%rd1389, %rd1388, %rd1367;
	add.s64 	%rd1390, %rd1379, %rd1389;
	add.s64 	%rd1391, %rd1390, %rd1385;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r927,%dummy}, %rd1380;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r928}, %rd1380;
	}
	shf.r.wrap.b32 	%r929, %r928, %r927, 14;
	shf.r.wrap.b32 	%r930, %r927, %r928, 14;
	mov.b64 	%rd1392, {%r930, %r929};
	shf.r.wrap.b32 	%r931, %r928, %r927, 18;
	shf.r.wrap.b32 	%r932, %r927, %r928, 18;
	mov.b64 	%rd1393, {%r932, %r931};
	xor.b64  	%rd1394, %rd1393, %rd1392;
	shf.l.wrap.b32 	%r933, %r927, %r928, 23;
	shf.l.wrap.b32 	%r934, %r928, %r927, 23;
	mov.b64 	%rd1395, {%r934, %r933};
	xor.b64  	%rd1396, %rd1394, %rd1395;
	xor.b64  	%rd1397, %rd1356, %rd1332;
	and.b64  	%rd1398, %rd1380, %rd1397;
	xor.b64  	%rd1399, %rd1398, %rd1332;
	add.s64 	%rd1400, %rd1308, %rd1141;
	add.s64 	%rd1401, %rd1400, %rd56;
	add.s64 	%rd1402, %rd1401, %rd1399;
	add.s64 	%rd1403, %rd1402, %rd1396;
	add.s64 	%rd1404, %rd1403, %rd1319;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r935,%dummy}, %rd1391;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r936}, %rd1391;
	}
	shf.r.wrap.b32 	%r937, %r936, %r935, 28;
	shf.r.wrap.b32 	%r938, %r935, %r936, 28;
	mov.b64 	%rd1405, {%r938, %r937};
	shf.l.wrap.b32 	%r939, %r935, %r936, 30;
	shf.l.wrap.b32 	%r940, %r936, %r935, 30;
	mov.b64 	%rd1406, {%r940, %r939};
	xor.b64  	%rd1407, %rd1406, %rd1405;
	shf.l.wrap.b32 	%r941, %r935, %r936, 25;
	shf.l.wrap.b32 	%r942, %r936, %r935, 25;
	mov.b64 	%rd1408, {%r942, %r941};
	xor.b64  	%rd1409, %rd1407, %rd1408;
	xor.b64  	%rd1410, %rd1391, %rd1343;
	xor.b64  	%rd1411, %rd1391, %rd1367;
	and.b64  	%rd1412, %rd1411, %rd1410;
	xor.b64  	%rd1413, %rd1412, %rd1391;
	add.s64 	%rd1414, %rd1403, %rd1413;
	add.s64 	%rd1415, %rd1414, %rd1409;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r943,%dummy}, %rd1404;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r944}, %rd1404;
	}
	shf.r.wrap.b32 	%r945, %r944, %r943, 14;
	shf.r.wrap.b32 	%r946, %r943, %r944, 14;
	mov.b64 	%rd1416, {%r946, %r945};
	shf.r.wrap.b32 	%r947, %r944, %r943, 18;
	shf.r.wrap.b32 	%r948, %r943, %r944, 18;
	mov.b64 	%rd1417, {%r948, %r947};
	xor.b64  	%rd1418, %rd1417, %rd1416;
	shf.l.wrap.b32 	%r949, %r943, %r944, 23;
	shf.l.wrap.b32 	%r950, %r944, %r943, 23;
	mov.b64 	%rd1419, {%r950, %r949};
	xor.b64  	%rd1420, %rd1418, %rd1419;
	xor.b64  	%rd1421, %rd1380, %rd1356;
	and.b64  	%rd1422, %rd1404, %rd1421;
	xor.b64  	%rd1423, %rd1422, %rd1356;
	add.s64 	%rd1424, %rd1332, %rd1154;
	add.s64 	%rd1425, %rd1424, %rd57;
	add.s64 	%rd1426, %rd1425, %rd1423;
	add.s64 	%rd1427, %rd1426, %rd1420;
	add.s64 	%rd1428, %rd1427, %rd1343;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r951,%dummy}, %rd1415;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r952}, %rd1415;
	}
	shf.r.wrap.b32 	%r953, %r952, %r951, 28;
	shf.r.wrap.b32 	%r954, %r951, %r952, 28;
	mov.b64 	%rd1429, {%r954, %r953};
	shf.l.wrap.b32 	%r955, %r951, %r952, 30;
	shf.l.wrap.b32 	%r956, %r952, %r951, 30;
	mov.b64 	%rd1430, {%r956, %r955};
	xor.b64  	%rd1431, %rd1430, %rd1429;
	shf.l.wrap.b32 	%r957, %r951, %r952, 25;
	shf.l.wrap.b32 	%r958, %r952, %r951, 25;
	mov.b64 	%rd1432, {%r958, %r957};
	xor.b64  	%rd1433, %rd1431, %rd1432;
	xor.b64  	%rd1434, %rd1415, %rd1367;
	xor.b64  	%rd1435, %rd1415, %rd1391;
	and.b64  	%rd1436, %rd1435, %rd1434;
	xor.b64  	%rd1437, %rd1436, %rd1415;
	add.s64 	%rd1438, %rd1427, %rd1437;
	add.s64 	%rd1439, %rd1438, %rd1433;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r959,%dummy}, %rd1428;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r960}, %rd1428;
	}
	shf.r.wrap.b32 	%r961, %r960, %r959, 14;
	shf.r.wrap.b32 	%r962, %r959, %r960, 14;
	mov.b64 	%rd1440, {%r962, %r961};
	shf.r.wrap.b32 	%r963, %r960, %r959, 18;
	shf.r.wrap.b32 	%r964, %r959, %r960, 18;
	mov.b64 	%rd1441, {%r964, %r963};
	xor.b64  	%rd1442, %rd1441, %rd1440;
	shf.l.wrap.b32 	%r965, %r959, %r960, 23;
	shf.l.wrap.b32 	%r966, %r960, %r959, 23;
	mov.b64 	%rd1443, {%r966, %r965};
	xor.b64  	%rd1444, %rd1442, %rd1443;
	xor.b64  	%rd1445, %rd1404, %rd1380;
	and.b64  	%rd1446, %rd1428, %rd1445;
	xor.b64  	%rd1447, %rd1446, %rd1380;
	add.s64 	%rd1448, %rd1356, %rd1167;
	add.s64 	%rd1449, %rd1448, %rd58;
	add.s64 	%rd1450, %rd1449, %rd1447;
	add.s64 	%rd1451, %rd1450, %rd1444;
	add.s64 	%rd1452, %rd1451, %rd1367;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r967,%dummy}, %rd1439;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r968}, %rd1439;
	}
	shf.r.wrap.b32 	%r969, %r968, %r967, 28;
	shf.r.wrap.b32 	%r970, %r967, %r968, 28;
	mov.b64 	%rd1453, {%r970, %r969};
	shf.l.wrap.b32 	%r971, %r967, %r968, 30;
	shf.l.wrap.b32 	%r972, %r968, %r967, 30;
	mov.b64 	%rd1454, {%r972, %r971};
	xor.b64  	%rd1455, %rd1454, %rd1453;
	shf.l.wrap.b32 	%r973, %r967, %r968, 25;
	shf.l.wrap.b32 	%r974, %r968, %r967, 25;
	mov.b64 	%rd1456, {%r974, %r973};
	xor.b64  	%rd1457, %rd1455, %rd1456;
	xor.b64  	%rd1458, %rd1439, %rd1391;
	xor.b64  	%rd1459, %rd1439, %rd1415;
	and.b64  	%rd1460, %rd1459, %rd1458;
	xor.b64  	%rd1461, %rd1460, %rd1439;
	add.s64 	%rd1462, %rd1451, %rd1461;
	add.s64 	%rd1463, %rd1462, %rd1457;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r975,%dummy}, %rd1452;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r976}, %rd1452;
	}
	shf.r.wrap.b32 	%r977, %r976, %r975, 14;
	shf.r.wrap.b32 	%r978, %r975, %r976, 14;
	mov.b64 	%rd1464, {%r978, %r977};
	shf.r.wrap.b32 	%r979, %r976, %r975, 18;
	shf.r.wrap.b32 	%r980, %r975, %r976, 18;
	mov.b64 	%rd1465, {%r980, %r979};
	xor.b64  	%rd1466, %rd1465, %rd1464;
	shf.l.wrap.b32 	%r981, %r975, %r976, 23;
	shf.l.wrap.b32 	%r982, %r976, %r975, 23;
	mov.b64 	%rd1467, {%r982, %r981};
	xor.b64  	%rd1468, %rd1466, %rd1467;
	xor.b64  	%rd1469, %rd1428, %rd1404;
	and.b64  	%rd1470, %rd1452, %rd1469;
	xor.b64  	%rd1471, %rd1470, %rd1404;
	add.s64 	%rd1472, %rd1380, %rd1180;
	add.s64 	%rd1473, %rd1472, %rd59;
	add.s64 	%rd1474, %rd1473, %rd1471;
	add.s64 	%rd1475, %rd1474, %rd1468;
	add.s64 	%rd1476, %rd1475, %rd1391;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r983,%dummy}, %rd1463;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r984}, %rd1463;
	}
	shf.r.wrap.b32 	%r985, %r984, %r983, 28;
	shf.r.wrap.b32 	%r986, %r983, %r984, 28;
	mov.b64 	%rd1477, {%r986, %r985};
	shf.l.wrap.b32 	%r987, %r983, %r984, 30;
	shf.l.wrap.b32 	%r988, %r984, %r983, 30;
	mov.b64 	%rd1478, {%r988, %r987};
	xor.b64  	%rd1479, %rd1478, %rd1477;
	shf.l.wrap.b32 	%r989, %r983, %r984, 25;
	shf.l.wrap.b32 	%r990, %r984, %r983, 25;
	mov.b64 	%rd1480, {%r990, %r989};
	xor.b64  	%rd1481, %rd1479, %rd1480;
	xor.b64  	%rd1482, %rd1463, %rd1415;
	xor.b64  	%rd1483, %rd1463, %rd1439;
	and.b64  	%rd1484, %rd1483, %rd1482;
	xor.b64  	%rd1485, %rd1484, %rd1463;
	add.s64 	%rd1486, %rd1475, %rd1485;
	add.s64 	%rd1487, %rd1486, %rd1481;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r991,%dummy}, %rd1476;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r992}, %rd1476;
	}
	shf.r.wrap.b32 	%r993, %r992, %r991, 14;
	shf.r.wrap.b32 	%r994, %r991, %r992, 14;
	mov.b64 	%rd1488, {%r994, %r993};
	shf.r.wrap.b32 	%r995, %r992, %r991, 18;
	shf.r.wrap.b32 	%r996, %r991, %r992, 18;
	mov.b64 	%rd1489, {%r996, %r995};
	xor.b64  	%rd1490, %rd1489, %rd1488;
	shf.l.wrap.b32 	%r997, %r991, %r992, 23;
	shf.l.wrap.b32 	%r998, %r992, %r991, 23;
	mov.b64 	%rd1491, {%r998, %r997};
	xor.b64  	%rd1492, %rd1490, %rd1491;
	xor.b64  	%rd1493, %rd1452, %rd1428;
	and.b64  	%rd1494, %rd1476, %rd1493;
	xor.b64  	%rd1495, %rd1494, %rd1428;
	add.s64 	%rd1496, %rd1404, %rd1193;
	add.s64 	%rd1497, %rd1496, %rd60;
	add.s64 	%rd1498, %rd1497, %rd1495;
	add.s64 	%rd1499, %rd1498, %rd1492;
	add.s64 	%rd1500, %rd1499, %rd1415;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r999,%dummy}, %rd1487;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1000}, %rd1487;
	}
	shf.r.wrap.b32 	%r1001, %r1000, %r999, 28;
	shf.r.wrap.b32 	%r1002, %r999, %r1000, 28;
	mov.b64 	%rd1501, {%r1002, %r1001};
	shf.l.wrap.b32 	%r1003, %r999, %r1000, 30;
	shf.l.wrap.b32 	%r1004, %r1000, %r999, 30;
	mov.b64 	%rd1502, {%r1004, %r1003};
	xor.b64  	%rd1503, %rd1502, %rd1501;
	shf.l.wrap.b32 	%r1005, %r999, %r1000, 25;
	shf.l.wrap.b32 	%r1006, %r1000, %r999, 25;
	mov.b64 	%rd1504, {%r1006, %r1005};
	xor.b64  	%rd1505, %rd1503, %rd1504;
	xor.b64  	%rd1506, %rd1487, %rd1439;
	xor.b64  	%rd1507, %rd1487, %rd1463;
	and.b64  	%rd1508, %rd1507, %rd1506;
	xor.b64  	%rd1509, %rd1508, %rd1487;
	add.s64 	%rd1510, %rd1499, %rd1509;
	add.s64 	%rd1511, %rd1510, %rd1505;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1007,%dummy}, %rd1500;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1008}, %rd1500;
	}
	shf.r.wrap.b32 	%r1009, %r1008, %r1007, 14;
	shf.r.wrap.b32 	%r1010, %r1007, %r1008, 14;
	mov.b64 	%rd1512, {%r1010, %r1009};
	shf.r.wrap.b32 	%r1011, %r1008, %r1007, 18;
	shf.r.wrap.b32 	%r1012, %r1007, %r1008, 18;
	mov.b64 	%rd1513, {%r1012, %r1011};
	xor.b64  	%rd1514, %rd1513, %rd1512;
	shf.l.wrap.b32 	%r1013, %r1007, %r1008, 23;
	shf.l.wrap.b32 	%r1014, %r1008, %r1007, 23;
	mov.b64 	%rd1515, {%r1014, %r1013};
	xor.b64  	%rd1516, %rd1514, %rd1515;
	xor.b64  	%rd1517, %rd1476, %rd1452;
	and.b64  	%rd1518, %rd1500, %rd1517;
	xor.b64  	%rd1519, %rd1518, %rd1452;
	add.s64 	%rd1520, %rd1428, %rd1206;
	add.s64 	%rd1521, %rd1520, %rd61;
	add.s64 	%rd1522, %rd1521, %rd1519;
	add.s64 	%rd1523, %rd1522, %rd1516;
	add.s64 	%rd1524, %rd1523, %rd1439;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1015,%dummy}, %rd1511;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1016}, %rd1511;
	}
	shf.r.wrap.b32 	%r1017, %r1016, %r1015, 28;
	shf.r.wrap.b32 	%r1018, %r1015, %r1016, 28;
	mov.b64 	%rd1525, {%r1018, %r1017};
	shf.l.wrap.b32 	%r1019, %r1015, %r1016, 30;
	shf.l.wrap.b32 	%r1020, %r1016, %r1015, 30;
	mov.b64 	%rd1526, {%r1020, %r1019};
	xor.b64  	%rd1527, %rd1526, %rd1525;
	shf.l.wrap.b32 	%r1021, %r1015, %r1016, 25;
	shf.l.wrap.b32 	%r1022, %r1016, %r1015, 25;
	mov.b64 	%rd1528, {%r1022, %r1021};
	xor.b64  	%rd1529, %rd1527, %rd1528;
	xor.b64  	%rd1530, %rd1511, %rd1463;
	xor.b64  	%rd1531, %rd1511, %rd1487;
	and.b64  	%rd1532, %rd1531, %rd1530;
	xor.b64  	%rd1533, %rd1532, %rd1511;
	add.s64 	%rd1534, %rd1523, %rd1533;
	add.s64 	%rd1535, %rd1534, %rd1529;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1023,%dummy}, %rd1524;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1024}, %rd1524;
	}
	shf.r.wrap.b32 	%r1025, %r1024, %r1023, 14;
	shf.r.wrap.b32 	%r1026, %r1023, %r1024, 14;
	mov.b64 	%rd1536, {%r1026, %r1025};
	shf.r.wrap.b32 	%r1027, %r1024, %r1023, 18;
	shf.r.wrap.b32 	%r1028, %r1023, %r1024, 18;
	mov.b64 	%rd1537, {%r1028, %r1027};
	xor.b64  	%rd1538, %rd1537, %rd1536;
	shf.l.wrap.b32 	%r1029, %r1023, %r1024, 23;
	shf.l.wrap.b32 	%r1030, %r1024, %r1023, 23;
	mov.b64 	%rd1539, {%r1030, %r1029};
	xor.b64  	%rd1540, %rd1538, %rd1539;
	xor.b64  	%rd1541, %rd1500, %rd1476;
	and.b64  	%rd1542, %rd1524, %rd1541;
	xor.b64  	%rd1543, %rd1542, %rd1476;
	add.s64 	%rd1544, %rd1452, %rd1219;
	add.s64 	%rd1545, %rd1544, %rd62;
	add.s64 	%rd1546, %rd1545, %rd1543;
	add.s64 	%rd1547, %rd1546, %rd1540;
	add.s64 	%rd1548, %rd1547, %rd1463;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1031,%dummy}, %rd1535;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1032}, %rd1535;
	}
	shf.r.wrap.b32 	%r1033, %r1032, %r1031, 28;
	shf.r.wrap.b32 	%r1034, %r1031, %r1032, 28;
	mov.b64 	%rd1549, {%r1034, %r1033};
	shf.l.wrap.b32 	%r1035, %r1031, %r1032, 30;
	shf.l.wrap.b32 	%r1036, %r1032, %r1031, 30;
	mov.b64 	%rd1550, {%r1036, %r1035};
	xor.b64  	%rd1551, %rd1550, %rd1549;
	shf.l.wrap.b32 	%r1037, %r1031, %r1032, 25;
	shf.l.wrap.b32 	%r1038, %r1032, %r1031, 25;
	mov.b64 	%rd1552, {%r1038, %r1037};
	xor.b64  	%rd1553, %rd1551, %rd1552;
	xor.b64  	%rd1554, %rd1535, %rd1487;
	xor.b64  	%rd1555, %rd1535, %rd1511;
	and.b64  	%rd1556, %rd1555, %rd1554;
	xor.b64  	%rd1557, %rd1556, %rd1535;
	add.s64 	%rd1558, %rd1547, %rd1557;
	add.s64 	%rd1559, %rd1558, %rd1553;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1039,%dummy}, %rd1548;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1040}, %rd1548;
	}
	shf.r.wrap.b32 	%r1041, %r1040, %r1039, 14;
	shf.r.wrap.b32 	%r1042, %r1039, %r1040, 14;
	mov.b64 	%rd1560, {%r1042, %r1041};
	shf.r.wrap.b32 	%r1043, %r1040, %r1039, 18;
	shf.r.wrap.b32 	%r1044, %r1039, %r1040, 18;
	mov.b64 	%rd1561, {%r1044, %r1043};
	xor.b64  	%rd1562, %rd1561, %rd1560;
	shf.l.wrap.b32 	%r1045, %r1039, %r1040, 23;
	shf.l.wrap.b32 	%r1046, %r1040, %r1039, 23;
	mov.b64 	%rd1563, {%r1046, %r1045};
	xor.b64  	%rd1564, %rd1562, %rd1563;
	xor.b64  	%rd1565, %rd1524, %rd1500;
	and.b64  	%rd1566, %rd1548, %rd1565;
	xor.b64  	%rd1567, %rd1566, %rd1500;
	add.s64 	%rd1568, %rd1476, %rd1232;
	add.s64 	%rd1569, %rd1568, %rd63;
	add.s64 	%rd1570, %rd1569, %rd1567;
	add.s64 	%rd1571, %rd1570, %rd1564;
	add.s64 	%rd1572, %rd1571, %rd1487;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1047,%dummy}, %rd1559;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1048}, %rd1559;
	}
	shf.r.wrap.b32 	%r1049, %r1048, %r1047, 28;
	shf.r.wrap.b32 	%r1050, %r1047, %r1048, 28;
	mov.b64 	%rd1573, {%r1050, %r1049};
	shf.l.wrap.b32 	%r1051, %r1047, %r1048, 30;
	shf.l.wrap.b32 	%r1052, %r1048, %r1047, 30;
	mov.b64 	%rd1574, {%r1052, %r1051};
	xor.b64  	%rd1575, %rd1574, %rd1573;
	shf.l.wrap.b32 	%r1053, %r1047, %r1048, 25;
	shf.l.wrap.b32 	%r1054, %r1048, %r1047, 25;
	mov.b64 	%rd1576, {%r1054, %r1053};
	xor.b64  	%rd1577, %rd1575, %rd1576;
	xor.b64  	%rd1578, %rd1559, %rd1511;
	xor.b64  	%rd1579, %rd1559, %rd1535;
	and.b64  	%rd1580, %rd1579, %rd1578;
	xor.b64  	%rd1581, %rd1580, %rd1559;
	add.s64 	%rd1582, %rd1571, %rd1581;
	add.s64 	%rd1583, %rd1582, %rd1577;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1055,%dummy}, %rd1572;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1056}, %rd1572;
	}
	shf.r.wrap.b32 	%r1057, %r1056, %r1055, 14;
	shf.r.wrap.b32 	%r1058, %r1055, %r1056, 14;
	mov.b64 	%rd1584, {%r1058, %r1057};
	shf.r.wrap.b32 	%r1059, %r1056, %r1055, 18;
	shf.r.wrap.b32 	%r1060, %r1055, %r1056, 18;
	mov.b64 	%rd1585, {%r1060, %r1059};
	xor.b64  	%rd1586, %rd1585, %rd1584;
	shf.l.wrap.b32 	%r1061, %r1055, %r1056, 23;
	shf.l.wrap.b32 	%r1062, %r1056, %r1055, 23;
	mov.b64 	%rd1587, {%r1062, %r1061};
	xor.b64  	%rd1588, %rd1586, %rd1587;
	xor.b64  	%rd1589, %rd1548, %rd1524;
	and.b64  	%rd1590, %rd1572, %rd1589;
	xor.b64  	%rd1591, %rd1590, %rd1524;
	add.s64 	%rd1592, %rd1500, %rd1245;
	add.s64 	%rd1593, %rd1592, %rd64;
	add.s64 	%rd1594, %rd1593, %rd1591;
	add.s64 	%rd1595, %rd1594, %rd1588;
	add.s64 	%rd1596, %rd1595, %rd1511;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1063,%dummy}, %rd1583;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1064}, %rd1583;
	}
	shf.r.wrap.b32 	%r1065, %r1064, %r1063, 28;
	shf.r.wrap.b32 	%r1066, %r1063, %r1064, 28;
	mov.b64 	%rd1597, {%r1066, %r1065};
	shf.l.wrap.b32 	%r1067, %r1063, %r1064, 30;
	shf.l.wrap.b32 	%r1068, %r1064, %r1063, 30;
	mov.b64 	%rd1598, {%r1068, %r1067};
	xor.b64  	%rd1599, %rd1598, %rd1597;
	shf.l.wrap.b32 	%r1069, %r1063, %r1064, 25;
	shf.l.wrap.b32 	%r1070, %r1064, %r1063, 25;
	mov.b64 	%rd1600, {%r1070, %r1069};
	xor.b64  	%rd1601, %rd1599, %rd1600;
	xor.b64  	%rd1602, %rd1583, %rd1535;
	xor.b64  	%rd1603, %rd1583, %rd1559;
	and.b64  	%rd1604, %rd1603, %rd1602;
	xor.b64  	%rd1605, %rd1604, %rd1583;
	add.s64 	%rd1606, %rd1595, %rd1605;
	add.s64 	%rd1607, %rd1606, %rd1601;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1071,%dummy}, %rd1596;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1072}, %rd1596;
	}
	shf.r.wrap.b32 	%r1073, %r1072, %r1071, 14;
	shf.r.wrap.b32 	%r1074, %r1071, %r1072, 14;
	mov.b64 	%rd1608, {%r1074, %r1073};
	shf.r.wrap.b32 	%r1075, %r1072, %r1071, 18;
	shf.r.wrap.b32 	%r1076, %r1071, %r1072, 18;
	mov.b64 	%rd1609, {%r1076, %r1075};
	xor.b64  	%rd1610, %rd1609, %rd1608;
	shf.l.wrap.b32 	%r1077, %r1071, %r1072, 23;
	shf.l.wrap.b32 	%r1078, %r1072, %r1071, 23;
	mov.b64 	%rd1611, {%r1078, %r1077};
	xor.b64  	%rd1612, %rd1610, %rd1611;
	xor.b64  	%rd1613, %rd1572, %rd1548;
	and.b64  	%rd1614, %rd1596, %rd1613;
	xor.b64  	%rd1615, %rd1614, %rd1548;
	add.s64 	%rd1616, %rd1524, %rd1258;
	add.s64 	%rd1617, %rd1616, %rd65;
	add.s64 	%rd1618, %rd1617, %rd1615;
	add.s64 	%rd1619, %rd1618, %rd1612;
	add.s64 	%rd1620, %rd1619, %rd1535;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1079,%dummy}, %rd1607;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1080}, %rd1607;
	}
	shf.r.wrap.b32 	%r1081, %r1080, %r1079, 28;
	shf.r.wrap.b32 	%r1082, %r1079, %r1080, 28;
	mov.b64 	%rd1621, {%r1082, %r1081};
	shf.l.wrap.b32 	%r1083, %r1079, %r1080, 30;
	shf.l.wrap.b32 	%r1084, %r1080, %r1079, 30;
	mov.b64 	%rd1622, {%r1084, %r1083};
	xor.b64  	%rd1623, %rd1622, %rd1621;
	shf.l.wrap.b32 	%r1085, %r1079, %r1080, 25;
	shf.l.wrap.b32 	%r1086, %r1080, %r1079, 25;
	mov.b64 	%rd1624, {%r1086, %r1085};
	xor.b64  	%rd1625, %rd1623, %rd1624;
	xor.b64  	%rd1626, %rd1607, %rd1559;
	xor.b64  	%rd1627, %rd1607, %rd1583;
	and.b64  	%rd1628, %rd1627, %rd1626;
	xor.b64  	%rd1629, %rd1628, %rd1607;
	add.s64 	%rd1630, %rd1619, %rd1629;
	add.s64 	%rd1631, %rd1630, %rd1625;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1087,%dummy}, %rd1620;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1088}, %rd1620;
	}
	shf.r.wrap.b32 	%r1089, %r1088, %r1087, 14;
	shf.r.wrap.b32 	%r1090, %r1087, %r1088, 14;
	mov.b64 	%rd1632, {%r1090, %r1089};
	shf.r.wrap.b32 	%r1091, %r1088, %r1087, 18;
	shf.r.wrap.b32 	%r1092, %r1087, %r1088, 18;
	mov.b64 	%rd1633, {%r1092, %r1091};
	xor.b64  	%rd1634, %rd1633, %rd1632;
	shf.l.wrap.b32 	%r1093, %r1087, %r1088, 23;
	shf.l.wrap.b32 	%r1094, %r1088, %r1087, 23;
	mov.b64 	%rd1635, {%r1094, %r1093};
	xor.b64  	%rd1636, %rd1634, %rd1635;
	xor.b64  	%rd1637, %rd1596, %rd1572;
	and.b64  	%rd1638, %rd1620, %rd1637;
	xor.b64  	%rd1639, %rd1638, %rd1572;
	add.s64 	%rd1640, %rd1548, %rd1271;
	add.s64 	%rd1641, %rd1640, %rd66;
	add.s64 	%rd1642, %rd1641, %rd1639;
	add.s64 	%rd1643, %rd1642, %rd1636;
	add.s64 	%rd1644, %rd1643, %rd1559;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1095,%dummy}, %rd1631;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1096}, %rd1631;
	}
	shf.r.wrap.b32 	%r1097, %r1096, %r1095, 28;
	shf.r.wrap.b32 	%r1098, %r1095, %r1096, 28;
	mov.b64 	%rd1645, {%r1098, %r1097};
	shf.l.wrap.b32 	%r1099, %r1095, %r1096, 30;
	shf.l.wrap.b32 	%r1100, %r1096, %r1095, 30;
	mov.b64 	%rd1646, {%r1100, %r1099};
	xor.b64  	%rd1647, %rd1646, %rd1645;
	shf.l.wrap.b32 	%r1101, %r1095, %r1096, 25;
	shf.l.wrap.b32 	%r1102, %r1096, %r1095, 25;
	mov.b64 	%rd1648, {%r1102, %r1101};
	xor.b64  	%rd1649, %rd1647, %rd1648;
	xor.b64  	%rd1650, %rd1631, %rd1583;
	xor.b64  	%rd1651, %rd1631, %rd1607;
	and.b64  	%rd1652, %rd1651, %rd1650;
	xor.b64  	%rd1653, %rd1652, %rd1631;
	add.s64 	%rd1654, %rd1643, %rd1653;
	add.s64 	%rd1655, %rd1654, %rd1649;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1103,%dummy}, %rd1258;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1104}, %rd1258;
	}
	shf.r.wrap.b32 	%r1105, %r1104, %r1103, 19;
	shf.r.wrap.b32 	%r1106, %r1103, %r1104, 19;
	mov.b64 	%rd1656, {%r1106, %r1105};
	shf.l.wrap.b32 	%r1107, %r1103, %r1104, 3;
	shf.l.wrap.b32 	%r1108, %r1104, %r1103, 3;
	mov.b64 	%rd1657, {%r1108, %r1107};
	shr.u64 	%rd1658, %rd1258, 6;
	xor.b64  	%rd1659, %rd1656, %rd1658;
	xor.b64  	%rd1660, %rd1659, %rd1657;
	shf.r.wrap.b32 	%r1109, %r718, %r717, 1;
	shf.r.wrap.b32 	%r1110, %r717, %r718, 1;
	mov.b64 	%rd1661, {%r1110, %r1109};
	shf.r.wrap.b32 	%r1111, %r718, %r717, 8;
	shf.r.wrap.b32 	%r1112, %r717, %r718, 8;
	mov.b64 	%rd1662, {%r1112, %r1111};
	shr.u64 	%rd1663, %rd1089, 7;
	xor.b64  	%rd1664, %rd1661, %rd1663;
	xor.b64  	%rd1665, %rd1664, %rd1662;
	add.s64 	%rd1666, %rd1193, %rd1076;
	add.s64 	%rd1667, %rd1666, %rd1660;
	add.s64 	%rd1668, %rd1667, %rd1665;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1113,%dummy}, %rd1271;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1114}, %rd1271;
	}
	shf.r.wrap.b32 	%r1115, %r1114, %r1113, 19;
	shf.r.wrap.b32 	%r1116, %r1113, %r1114, 19;
	mov.b64 	%rd1669, {%r1116, %r1115};
	shf.l.wrap.b32 	%r1117, %r1113, %r1114, 3;
	shf.l.wrap.b32 	%r1118, %r1114, %r1113, 3;
	mov.b64 	%rd1670, {%r1118, %r1117};
	shr.u64 	%rd1671, %rd1271, 6;
	xor.b64  	%rd1672, %rd1669, %rd1671;
	xor.b64  	%rd1673, %rd1672, %rd1670;
	shf.r.wrap.b32 	%r1119, %r728, %r727, 1;
	shf.r.wrap.b32 	%r1120, %r727, %r728, 1;
	mov.b64 	%rd1674, {%r1120, %r1119};
	shf.r.wrap.b32 	%r1121, %r728, %r727, 8;
	shf.r.wrap.b32 	%r1122, %r727, %r728, 8;
	mov.b64 	%rd1675, {%r1122, %r1121};
	shr.u64 	%rd1676, %rd1102, 7;
	xor.b64  	%rd1677, %rd1674, %rd1676;
	xor.b64  	%rd1678, %rd1677, %rd1675;
	add.s64 	%rd1679, %rd1206, %rd1089;
	add.s64 	%rd1680, %rd1679, %rd1673;
	add.s64 	%rd1681, %rd1680, %rd1678;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1123,%dummy}, %rd1668;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1124}, %rd1668;
	}
	shf.r.wrap.b32 	%r1125, %r1124, %r1123, 19;
	shf.r.wrap.b32 	%r1126, %r1123, %r1124, 19;
	mov.b64 	%rd1682, {%r1126, %r1125};
	shf.l.wrap.b32 	%r1127, %r1123, %r1124, 3;
	shf.l.wrap.b32 	%r1128, %r1124, %r1123, 3;
	mov.b64 	%rd1683, {%r1128, %r1127};
	shr.u64 	%rd1684, %rd1668, 6;
	xor.b64  	%rd1685, %rd1682, %rd1684;
	xor.b64  	%rd1686, %rd1685, %rd1683;
	shf.r.wrap.b32 	%r1129, %r738, %r737, 1;
	shf.r.wrap.b32 	%r1130, %r737, %r738, 1;
	mov.b64 	%rd1687, {%r1130, %r1129};
	shf.r.wrap.b32 	%r1131, %r738, %r737, 8;
	shf.r.wrap.b32 	%r1132, %r737, %r738, 8;
	mov.b64 	%rd1688, {%r1132, %r1131};
	shr.u64 	%rd1689, %rd1115, 7;
	xor.b64  	%rd1690, %rd1687, %rd1689;
	xor.b64  	%rd1691, %rd1690, %rd1688;
	add.s64 	%rd1692, %rd1219, %rd1102;
	add.s64 	%rd1693, %rd1692, %rd1686;
	add.s64 	%rd1694, %rd1693, %rd1691;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1133,%dummy}, %rd1681;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1134}, %rd1681;
	}
	shf.r.wrap.b32 	%r1135, %r1134, %r1133, 19;
	shf.r.wrap.b32 	%r1136, %r1133, %r1134, 19;
	mov.b64 	%rd1695, {%r1136, %r1135};
	shf.l.wrap.b32 	%r1137, %r1133, %r1134, 3;
	shf.l.wrap.b32 	%r1138, %r1134, %r1133, 3;
	mov.b64 	%rd1696, {%r1138, %r1137};
	shr.u64 	%rd1697, %rd1681, 6;
	xor.b64  	%rd1698, %rd1695, %rd1697;
	xor.b64  	%rd1699, %rd1698, %rd1696;
	shf.r.wrap.b32 	%r1139, %r748, %r747, 1;
	shf.r.wrap.b32 	%r1140, %r747, %r748, 1;
	mov.b64 	%rd1700, {%r1140, %r1139};
	shf.r.wrap.b32 	%r1141, %r748, %r747, 8;
	shf.r.wrap.b32 	%r1142, %r747, %r748, 8;
	mov.b64 	%rd1701, {%r1142, %r1141};
	shr.u64 	%rd1702, %rd1128, 7;
	xor.b64  	%rd1703, %rd1700, %rd1702;
	xor.b64  	%rd1704, %rd1703, %rd1701;
	add.s64 	%rd1705, %rd1232, %rd1115;
	add.s64 	%rd1706, %rd1705, %rd1699;
	add.s64 	%rd1707, %rd1706, %rd1704;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1143,%dummy}, %rd1694;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1144}, %rd1694;
	}
	shf.r.wrap.b32 	%r1145, %r1144, %r1143, 19;
	shf.r.wrap.b32 	%r1146, %r1143, %r1144, 19;
	mov.b64 	%rd1708, {%r1146, %r1145};
	shf.l.wrap.b32 	%r1147, %r1143, %r1144, 3;
	shf.l.wrap.b32 	%r1148, %r1144, %r1143, 3;
	mov.b64 	%rd1709, {%r1148, %r1147};
	shr.u64 	%rd1710, %rd1694, 6;
	xor.b64  	%rd1711, %rd1708, %rd1710;
	xor.b64  	%rd1712, %rd1711, %rd1709;
	shf.r.wrap.b32 	%r1149, %r758, %r757, 1;
	shf.r.wrap.b32 	%r1150, %r757, %r758, 1;
	mov.b64 	%rd1713, {%r1150, %r1149};
	shf.r.wrap.b32 	%r1151, %r758, %r757, 8;
	shf.r.wrap.b32 	%r1152, %r757, %r758, 8;
	mov.b64 	%rd1714, {%r1152, %r1151};
	shr.u64 	%rd1715, %rd1141, 7;
	xor.b64  	%rd1716, %rd1713, %rd1715;
	xor.b64  	%rd1717, %rd1716, %rd1714;
	add.s64 	%rd1718, %rd1245, %rd1128;
	add.s64 	%rd1719, %rd1718, %rd1712;
	add.s64 	%rd1720, %rd1719, %rd1717;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1153,%dummy}, %rd1707;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1154}, %rd1707;
	}
	shf.r.wrap.b32 	%r1155, %r1154, %r1153, 19;
	shf.r.wrap.b32 	%r1156, %r1153, %r1154, 19;
	mov.b64 	%rd1721, {%r1156, %r1155};
	shf.l.wrap.b32 	%r1157, %r1153, %r1154, 3;
	shf.l.wrap.b32 	%r1158, %r1154, %r1153, 3;
	mov.b64 	%rd1722, {%r1158, %r1157};
	shr.u64 	%rd1723, %rd1707, 6;
	xor.b64  	%rd1724, %rd1721, %rd1723;
	xor.b64  	%rd1725, %rd1724, %rd1722;
	shf.r.wrap.b32 	%r1159, %r768, %r767, 1;
	shf.r.wrap.b32 	%r1160, %r767, %r768, 1;
	mov.b64 	%rd1726, {%r1160, %r1159};
	shf.r.wrap.b32 	%r1161, %r768, %r767, 8;
	shf.r.wrap.b32 	%r1162, %r767, %r768, 8;
	mov.b64 	%rd1727, {%r1162, %r1161};
	shr.u64 	%rd1728, %rd1154, 7;
	xor.b64  	%rd1729, %rd1726, %rd1728;
	xor.b64  	%rd1730, %rd1729, %rd1727;
	add.s64 	%rd1731, %rd1258, %rd1141;
	add.s64 	%rd1732, %rd1731, %rd1725;
	add.s64 	%rd1733, %rd1732, %rd1730;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1163,%dummy}, %rd1720;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1164}, %rd1720;
	}
	shf.r.wrap.b32 	%r1165, %r1164, %r1163, 19;
	shf.r.wrap.b32 	%r1166, %r1163, %r1164, 19;
	mov.b64 	%rd1734, {%r1166, %r1165};
	shf.l.wrap.b32 	%r1167, %r1163, %r1164, 3;
	shf.l.wrap.b32 	%r1168, %r1164, %r1163, 3;
	mov.b64 	%rd1735, {%r1168, %r1167};
	shr.u64 	%rd1736, %rd1720, 6;
	xor.b64  	%rd1737, %rd1734, %rd1736;
	xor.b64  	%rd1738, %rd1737, %rd1735;
	shf.r.wrap.b32 	%r1169, %r778, %r777, 1;
	shf.r.wrap.b32 	%r1170, %r777, %r778, 1;
	mov.b64 	%rd1739, {%r1170, %r1169};
	shf.r.wrap.b32 	%r1171, %r778, %r777, 8;
	shf.r.wrap.b32 	%r1172, %r777, %r778, 8;
	mov.b64 	%rd1740, {%r1172, %r1171};
	shr.u64 	%rd1741, %rd1167, 7;
	xor.b64  	%rd1742, %rd1739, %rd1741;
	xor.b64  	%rd1743, %rd1742, %rd1740;
	add.s64 	%rd1744, %rd1271, %rd1154;
	add.s64 	%rd1745, %rd1744, %rd1738;
	add.s64 	%rd1746, %rd1745, %rd1743;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1173,%dummy}, %rd1733;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1174}, %rd1733;
	}
	shf.r.wrap.b32 	%r1175, %r1174, %r1173, 19;
	shf.r.wrap.b32 	%r1176, %r1173, %r1174, 19;
	mov.b64 	%rd1747, {%r1176, %r1175};
	shf.l.wrap.b32 	%r1177, %r1173, %r1174, 3;
	shf.l.wrap.b32 	%r1178, %r1174, %r1173, 3;
	mov.b64 	%rd1748, {%r1178, %r1177};
	shr.u64 	%rd1749, %rd1733, 6;
	xor.b64  	%rd1750, %rd1747, %rd1749;
	xor.b64  	%rd1751, %rd1750, %rd1748;
	shf.r.wrap.b32 	%r1179, %r788, %r787, 1;
	shf.r.wrap.b32 	%r1180, %r787, %r788, 1;
	mov.b64 	%rd1752, {%r1180, %r1179};
	shf.r.wrap.b32 	%r1181, %r788, %r787, 8;
	shf.r.wrap.b32 	%r1182, %r787, %r788, 8;
	mov.b64 	%rd1753, {%r1182, %r1181};
	shr.u64 	%rd1754, %rd1180, 7;
	xor.b64  	%rd1755, %rd1752, %rd1754;
	xor.b64  	%rd1756, %rd1755, %rd1753;
	add.s64 	%rd1757, %rd1668, %rd1167;
	add.s64 	%rd1758, %rd1757, %rd1751;
	add.s64 	%rd1759, %rd1758, %rd1756;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1183,%dummy}, %rd1746;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1184}, %rd1746;
	}
	shf.r.wrap.b32 	%r1185, %r1184, %r1183, 19;
	shf.r.wrap.b32 	%r1186, %r1183, %r1184, 19;
	mov.b64 	%rd1760, {%r1186, %r1185};
	shf.l.wrap.b32 	%r1187, %r1183, %r1184, 3;
	shf.l.wrap.b32 	%r1188, %r1184, %r1183, 3;
	mov.b64 	%rd1761, {%r1188, %r1187};
	shr.u64 	%rd1762, %rd1746, 6;
	xor.b64  	%rd1763, %rd1760, %rd1762;
	xor.b64  	%rd1764, %rd1763, %rd1761;
	shf.r.wrap.b32 	%r1189, %r798, %r797, 1;
	shf.r.wrap.b32 	%r1190, %r797, %r798, 1;
	mov.b64 	%rd1765, {%r1190, %r1189};
	shf.r.wrap.b32 	%r1191, %r798, %r797, 8;
	shf.r.wrap.b32 	%r1192, %r797, %r798, 8;
	mov.b64 	%rd1766, {%r1192, %r1191};
	shr.u64 	%rd1767, %rd1193, 7;
	xor.b64  	%rd1768, %rd1765, %rd1767;
	xor.b64  	%rd1769, %rd1768, %rd1766;
	add.s64 	%rd1770, %rd1681, %rd1180;
	add.s64 	%rd1771, %rd1770, %rd1764;
	add.s64 	%rd1772, %rd1771, %rd1769;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1193,%dummy}, %rd1759;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1194}, %rd1759;
	}
	shf.r.wrap.b32 	%r1195, %r1194, %r1193, 19;
	shf.r.wrap.b32 	%r1196, %r1193, %r1194, 19;
	mov.b64 	%rd1773, {%r1196, %r1195};
	shf.l.wrap.b32 	%r1197, %r1193, %r1194, 3;
	shf.l.wrap.b32 	%r1198, %r1194, %r1193, 3;
	mov.b64 	%rd1774, {%r1198, %r1197};
	shr.u64 	%rd1775, %rd1759, 6;
	xor.b64  	%rd1776, %rd1773, %rd1775;
	xor.b64  	%rd1777, %rd1776, %rd1774;
	shf.r.wrap.b32 	%r1199, %r808, %r807, 1;
	shf.r.wrap.b32 	%r1200, %r807, %r808, 1;
	mov.b64 	%rd1778, {%r1200, %r1199};
	shf.r.wrap.b32 	%r1201, %r808, %r807, 8;
	shf.r.wrap.b32 	%r1202, %r807, %r808, 8;
	mov.b64 	%rd1779, {%r1202, %r1201};
	shr.u64 	%rd1780, %rd1206, 7;
	xor.b64  	%rd1781, %rd1778, %rd1780;
	xor.b64  	%rd1782, %rd1781, %rd1779;
	add.s64 	%rd1783, %rd1694, %rd1193;
	add.s64 	%rd1784, %rd1783, %rd1777;
	add.s64 	%rd1785, %rd1784, %rd1782;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1203,%dummy}, %rd1772;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1204}, %rd1772;
	}
	shf.r.wrap.b32 	%r1205, %r1204, %r1203, 19;
	shf.r.wrap.b32 	%r1206, %r1203, %r1204, 19;
	mov.b64 	%rd1786, {%r1206, %r1205};
	shf.l.wrap.b32 	%r1207, %r1203, %r1204, 3;
	shf.l.wrap.b32 	%r1208, %r1204, %r1203, 3;
	mov.b64 	%rd1787, {%r1208, %r1207};
	shr.u64 	%rd1788, %rd1772, 6;
	xor.b64  	%rd1789, %rd1786, %rd1788;
	xor.b64  	%rd1790, %rd1789, %rd1787;
	shf.r.wrap.b32 	%r1209, %r818, %r817, 1;
	shf.r.wrap.b32 	%r1210, %r817, %r818, 1;
	mov.b64 	%rd1791, {%r1210, %r1209};
	shf.r.wrap.b32 	%r1211, %r818, %r817, 8;
	shf.r.wrap.b32 	%r1212, %r817, %r818, 8;
	mov.b64 	%rd1792, {%r1212, %r1211};
	shr.u64 	%rd1793, %rd1219, 7;
	xor.b64  	%rd1794, %rd1791, %rd1793;
	xor.b64  	%rd1795, %rd1794, %rd1792;
	add.s64 	%rd1796, %rd1707, %rd1206;
	add.s64 	%rd1797, %rd1796, %rd1790;
	add.s64 	%rd1798, %rd1797, %rd1795;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1213,%dummy}, %rd1785;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1214}, %rd1785;
	}
	shf.r.wrap.b32 	%r1215, %r1214, %r1213, 19;
	shf.r.wrap.b32 	%r1216, %r1213, %r1214, 19;
	mov.b64 	%rd1799, {%r1216, %r1215};
	shf.l.wrap.b32 	%r1217, %r1213, %r1214, 3;
	shf.l.wrap.b32 	%r1218, %r1214, %r1213, 3;
	mov.b64 	%rd1800, {%r1218, %r1217};
	shr.u64 	%rd1801, %rd1785, 6;
	xor.b64  	%rd1802, %rd1799, %rd1801;
	xor.b64  	%rd1803, %rd1802, %rd1800;
	shf.r.wrap.b32 	%r1219, %r828, %r827, 1;
	shf.r.wrap.b32 	%r1220, %r827, %r828, 1;
	mov.b64 	%rd1804, {%r1220, %r1219};
	shf.r.wrap.b32 	%r1221, %r828, %r827, 8;
	shf.r.wrap.b32 	%r1222, %r827, %r828, 8;
	mov.b64 	%rd1805, {%r1222, %r1221};
	shr.u64 	%rd1806, %rd1232, 7;
	xor.b64  	%rd1807, %rd1804, %rd1806;
	xor.b64  	%rd1808, %rd1807, %rd1805;
	add.s64 	%rd1809, %rd1720, %rd1219;
	add.s64 	%rd1810, %rd1809, %rd1803;
	add.s64 	%rd1811, %rd1810, %rd1808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1223,%dummy}, %rd1798;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1224}, %rd1798;
	}
	shf.r.wrap.b32 	%r1225, %r1224, %r1223, 19;
	shf.r.wrap.b32 	%r1226, %r1223, %r1224, 19;
	mov.b64 	%rd1812, {%r1226, %r1225};
	shf.l.wrap.b32 	%r1227, %r1223, %r1224, 3;
	shf.l.wrap.b32 	%r1228, %r1224, %r1223, 3;
	mov.b64 	%rd1813, {%r1228, %r1227};
	shr.u64 	%rd1814, %rd1798, 6;
	xor.b64  	%rd1815, %rd1812, %rd1814;
	xor.b64  	%rd1816, %rd1815, %rd1813;
	shf.r.wrap.b32 	%r1229, %r838, %r837, 1;
	shf.r.wrap.b32 	%r1230, %r837, %r838, 1;
	mov.b64 	%rd1817, {%r1230, %r1229};
	shf.r.wrap.b32 	%r1231, %r838, %r837, 8;
	shf.r.wrap.b32 	%r1232, %r837, %r838, 8;
	mov.b64 	%rd1818, {%r1232, %r1231};
	shr.u64 	%rd1819, %rd1245, 7;
	xor.b64  	%rd1820, %rd1817, %rd1819;
	xor.b64  	%rd1821, %rd1820, %rd1818;
	add.s64 	%rd1822, %rd1733, %rd1232;
	add.s64 	%rd1823, %rd1822, %rd1816;
	add.s64 	%rd1824, %rd1823, %rd1821;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1233,%dummy}, %rd1811;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1234}, %rd1811;
	}
	shf.r.wrap.b32 	%r1235, %r1234, %r1233, 19;
	shf.r.wrap.b32 	%r1236, %r1233, %r1234, 19;
	mov.b64 	%rd1825, {%r1236, %r1235};
	shf.l.wrap.b32 	%r1237, %r1233, %r1234, 3;
	shf.l.wrap.b32 	%r1238, %r1234, %r1233, 3;
	mov.b64 	%rd1826, {%r1238, %r1237};
	shr.u64 	%rd1827, %rd1811, 6;
	xor.b64  	%rd1828, %rd1825, %rd1827;
	xor.b64  	%rd1829, %rd1828, %rd1826;
	shf.r.wrap.b32 	%r1239, %r1104, %r1103, 1;
	shf.r.wrap.b32 	%r1240, %r1103, %r1104, 1;
	mov.b64 	%rd1830, {%r1240, %r1239};
	shf.r.wrap.b32 	%r1241, %r1104, %r1103, 8;
	shf.r.wrap.b32 	%r1242, %r1103, %r1104, 8;
	mov.b64 	%rd1831, {%r1242, %r1241};
	shr.u64 	%rd1832, %rd1258, 7;
	xor.b64  	%rd1833, %rd1830, %rd1832;
	xor.b64  	%rd1834, %rd1833, %rd1831;
	add.s64 	%rd1835, %rd1746, %rd1245;
	add.s64 	%rd1836, %rd1835, %rd1829;
	add.s64 	%rd1837, %rd1836, %rd1834;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1243,%dummy}, %rd1824;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1244}, %rd1824;
	}
	shf.r.wrap.b32 	%r1245, %r1244, %r1243, 19;
	shf.r.wrap.b32 	%r1246, %r1243, %r1244, 19;
	mov.b64 	%rd1838, {%r1246, %r1245};
	shf.l.wrap.b32 	%r1247, %r1243, %r1244, 3;
	shf.l.wrap.b32 	%r1248, %r1244, %r1243, 3;
	mov.b64 	%rd1839, {%r1248, %r1247};
	shr.u64 	%rd1840, %rd1824, 6;
	xor.b64  	%rd1841, %rd1838, %rd1840;
	xor.b64  	%rd1842, %rd1841, %rd1839;
	shf.r.wrap.b32 	%r1249, %r1114, %r1113, 1;
	shf.r.wrap.b32 	%r1250, %r1113, %r1114, 1;
	mov.b64 	%rd1843, {%r1250, %r1249};
	shf.r.wrap.b32 	%r1251, %r1114, %r1113, 8;
	shf.r.wrap.b32 	%r1252, %r1113, %r1114, 8;
	mov.b64 	%rd1844, {%r1252, %r1251};
	shr.u64 	%rd1845, %rd1271, 7;
	xor.b64  	%rd1846, %rd1843, %rd1845;
	xor.b64  	%rd1847, %rd1846, %rd1844;
	add.s64 	%rd1848, %rd1759, %rd1258;
	add.s64 	%rd1849, %rd1848, %rd1842;
	add.s64 	%rd1850, %rd1849, %rd1847;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1253,%dummy}, %rd1837;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1254}, %rd1837;
	}
	shf.r.wrap.b32 	%r1255, %r1254, %r1253, 19;
	shf.r.wrap.b32 	%r1256, %r1253, %r1254, 19;
	mov.b64 	%rd1851, {%r1256, %r1255};
	shf.l.wrap.b32 	%r1257, %r1253, %r1254, 3;
	shf.l.wrap.b32 	%r1258, %r1254, %r1253, 3;
	mov.b64 	%rd1852, {%r1258, %r1257};
	shr.u64 	%rd1853, %rd1837, 6;
	xor.b64  	%rd1854, %rd1851, %rd1853;
	xor.b64  	%rd1855, %rd1854, %rd1852;
	shf.r.wrap.b32 	%r1259, %r1124, %r1123, 1;
	shf.r.wrap.b32 	%r1260, %r1123, %r1124, 1;
	mov.b64 	%rd1856, {%r1260, %r1259};
	shf.r.wrap.b32 	%r1261, %r1124, %r1123, 8;
	shf.r.wrap.b32 	%r1262, %r1123, %r1124, 8;
	mov.b64 	%rd1857, {%r1262, %r1261};
	shr.u64 	%rd1858, %rd1668, 7;
	xor.b64  	%rd1859, %rd1856, %rd1858;
	xor.b64  	%rd1860, %rd1859, %rd1857;
	add.s64 	%rd1861, %rd1772, %rd1271;
	add.s64 	%rd1862, %rd1861, %rd1855;
	add.s64 	%rd1863, %rd1862, %rd1860;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1263,%dummy}, %rd1644;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1264}, %rd1644;
	}
	shf.r.wrap.b32 	%r1265, %r1264, %r1263, 14;
	shf.r.wrap.b32 	%r1266, %r1263, %r1264, 14;
	mov.b64 	%rd1864, {%r1266, %r1265};
	shf.r.wrap.b32 	%r1267, %r1264, %r1263, 18;
	shf.r.wrap.b32 	%r1268, %r1263, %r1264, 18;
	mov.b64 	%rd1865, {%r1268, %r1267};
	xor.b64  	%rd1866, %rd1865, %rd1864;
	shf.l.wrap.b32 	%r1269, %r1263, %r1264, 23;
	shf.l.wrap.b32 	%r1270, %r1264, %r1263, 23;
	mov.b64 	%rd1867, {%r1270, %r1269};
	xor.b64  	%rd1868, %rd1866, %rd1867;
	xor.b64  	%rd1869, %rd1620, %rd1596;
	and.b64  	%rd1870, %rd1869, %rd1644;
	xor.b64  	%rd1871, %rd1870, %rd1596;
	add.s64 	%rd1872, %rd1871, %rd1572;
	add.s64 	%rd1873, %rd1872, %rd1668;
	add.s64 	%rd1874, %rd1873, %rd67;
	add.s64 	%rd1875, %rd1874, %rd1868;
	add.s64 	%rd1876, %rd1875, %rd1583;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1271,%dummy}, %rd1655;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1272}, %rd1655;
	}
	shf.r.wrap.b32 	%r1273, %r1272, %r1271, 28;
	shf.r.wrap.b32 	%r1274, %r1271, %r1272, 28;
	mov.b64 	%rd1877, {%r1274, %r1273};
	shf.l.wrap.b32 	%r1275, %r1271, %r1272, 30;
	shf.l.wrap.b32 	%r1276, %r1272, %r1271, 30;
	mov.b64 	%rd1878, {%r1276, %r1275};
	xor.b64  	%rd1879, %rd1878, %rd1877;
	shf.l.wrap.b32 	%r1277, %r1271, %r1272, 25;
	shf.l.wrap.b32 	%r1278, %r1272, %r1271, 25;
	mov.b64 	%rd1880, {%r1278, %r1277};
	xor.b64  	%rd1881, %rd1879, %rd1880;
	xor.b64  	%rd1882, %rd1655, %rd1607;
	xor.b64  	%rd1883, %rd1655, %rd1631;
	and.b64  	%rd1884, %rd1883, %rd1882;
	xor.b64  	%rd1885, %rd1884, %rd1655;
	add.s64 	%rd1886, %rd1875, %rd1885;
	add.s64 	%rd1887, %rd1886, %rd1881;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1279,%dummy}, %rd1876;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1280}, %rd1876;
	}
	shf.r.wrap.b32 	%r1281, %r1280, %r1279, 14;
	shf.r.wrap.b32 	%r1282, %r1279, %r1280, 14;
	mov.b64 	%rd1888, {%r1282, %r1281};
	shf.r.wrap.b32 	%r1283, %r1280, %r1279, 18;
	shf.r.wrap.b32 	%r1284, %r1279, %r1280, 18;
	mov.b64 	%rd1889, {%r1284, %r1283};
	xor.b64  	%rd1890, %rd1889, %rd1888;
	shf.l.wrap.b32 	%r1285, %r1279, %r1280, 23;
	shf.l.wrap.b32 	%r1286, %r1280, %r1279, 23;
	mov.b64 	%rd1891, {%r1286, %r1285};
	xor.b64  	%rd1892, %rd1890, %rd1891;
	xor.b64  	%rd1893, %rd1644, %rd1620;
	and.b64  	%rd1894, %rd1876, %rd1893;
	xor.b64  	%rd1895, %rd1894, %rd1620;
	add.s64 	%rd1896, %rd1681, %rd1596;
	add.s64 	%rd1897, %rd1896, %rd68;
	add.s64 	%rd1898, %rd1897, %rd1895;
	add.s64 	%rd1899, %rd1898, %rd1892;
	add.s64 	%rd1900, %rd1899, %rd1607;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1287,%dummy}, %rd1887;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1288}, %rd1887;
	}
	shf.r.wrap.b32 	%r1289, %r1288, %r1287, 28;
	shf.r.wrap.b32 	%r1290, %r1287, %r1288, 28;
	mov.b64 	%rd1901, {%r1290, %r1289};
	shf.l.wrap.b32 	%r1291, %r1287, %r1288, 30;
	shf.l.wrap.b32 	%r1292, %r1288, %r1287, 30;
	mov.b64 	%rd1902, {%r1292, %r1291};
	xor.b64  	%rd1903, %rd1902, %rd1901;
	shf.l.wrap.b32 	%r1293, %r1287, %r1288, 25;
	shf.l.wrap.b32 	%r1294, %r1288, %r1287, 25;
	mov.b64 	%rd1904, {%r1294, %r1293};
	xor.b64  	%rd1905, %rd1903, %rd1904;
	xor.b64  	%rd1906, %rd1887, %rd1631;
	xor.b64  	%rd1907, %rd1887, %rd1655;
	and.b64  	%rd1908, %rd1907, %rd1906;
	xor.b64  	%rd1909, %rd1908, %rd1887;
	add.s64 	%rd1910, %rd1899, %rd1909;
	add.s64 	%rd1911, %rd1910, %rd1905;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1295,%dummy}, %rd1900;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1296}, %rd1900;
	}
	shf.r.wrap.b32 	%r1297, %r1296, %r1295, 14;
	shf.r.wrap.b32 	%r1298, %r1295, %r1296, 14;
	mov.b64 	%rd1912, {%r1298, %r1297};
	shf.r.wrap.b32 	%r1299, %r1296, %r1295, 18;
	shf.r.wrap.b32 	%r1300, %r1295, %r1296, 18;
	mov.b64 	%rd1913, {%r1300, %r1299};
	xor.b64  	%rd1914, %rd1913, %rd1912;
	shf.l.wrap.b32 	%r1301, %r1295, %r1296, 23;
	shf.l.wrap.b32 	%r1302, %r1296, %r1295, 23;
	mov.b64 	%rd1915, {%r1302, %r1301};
	xor.b64  	%rd1916, %rd1914, %rd1915;
	xor.b64  	%rd1917, %rd1876, %rd1644;
	and.b64  	%rd1918, %rd1900, %rd1917;
	xor.b64  	%rd1919, %rd1918, %rd1644;
	add.s64 	%rd1920, %rd1694, %rd1620;
	add.s64 	%rd1921, %rd1920, %rd69;
	add.s64 	%rd1922, %rd1921, %rd1919;
	add.s64 	%rd1923, %rd1922, %rd1916;
	add.s64 	%rd1924, %rd1923, %rd1631;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1303,%dummy}, %rd1911;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1304}, %rd1911;
	}
	shf.r.wrap.b32 	%r1305, %r1304, %r1303, 28;
	shf.r.wrap.b32 	%r1306, %r1303, %r1304, 28;
	mov.b64 	%rd1925, {%r1306, %r1305};
	shf.l.wrap.b32 	%r1307, %r1303, %r1304, 30;
	shf.l.wrap.b32 	%r1308, %r1304, %r1303, 30;
	mov.b64 	%rd1926, {%r1308, %r1307};
	xor.b64  	%rd1927, %rd1926, %rd1925;
	shf.l.wrap.b32 	%r1309, %r1303, %r1304, 25;
	shf.l.wrap.b32 	%r1310, %r1304, %r1303, 25;
	mov.b64 	%rd1928, {%r1310, %r1309};
	xor.b64  	%rd1929, %rd1927, %rd1928;
	xor.b64  	%rd1930, %rd1911, %rd1655;
	xor.b64  	%rd1931, %rd1911, %rd1887;
	and.b64  	%rd1932, %rd1931, %rd1930;
	xor.b64  	%rd1933, %rd1932, %rd1911;
	add.s64 	%rd1934, %rd1923, %rd1933;
	add.s64 	%rd1935, %rd1934, %rd1929;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1311,%dummy}, %rd1924;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1312}, %rd1924;
	}
	shf.r.wrap.b32 	%r1313, %r1312, %r1311, 14;
	shf.r.wrap.b32 	%r1314, %r1311, %r1312, 14;
	mov.b64 	%rd1936, {%r1314, %r1313};
	shf.r.wrap.b32 	%r1315, %r1312, %r1311, 18;
	shf.r.wrap.b32 	%r1316, %r1311, %r1312, 18;
	mov.b64 	%rd1937, {%r1316, %r1315};
	xor.b64  	%rd1938, %rd1937, %rd1936;
	shf.l.wrap.b32 	%r1317, %r1311, %r1312, 23;
	shf.l.wrap.b32 	%r1318, %r1312, %r1311, 23;
	mov.b64 	%rd1939, {%r1318, %r1317};
	xor.b64  	%rd1940, %rd1938, %rd1939;
	xor.b64  	%rd1941, %rd1900, %rd1876;
	and.b64  	%rd1942, %rd1924, %rd1941;
	xor.b64  	%rd1943, %rd1942, %rd1876;
	add.s64 	%rd1944, %rd1707, %rd1644;
	add.s64 	%rd1945, %rd1944, %rd70;
	add.s64 	%rd1946, %rd1945, %rd1943;
	add.s64 	%rd1947, %rd1946, %rd1940;
	add.s64 	%rd1948, %rd1947, %rd1655;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1319,%dummy}, %rd1935;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1320}, %rd1935;
	}
	shf.r.wrap.b32 	%r1321, %r1320, %r1319, 28;
	shf.r.wrap.b32 	%r1322, %r1319, %r1320, 28;
	mov.b64 	%rd1949, {%r1322, %r1321};
	shf.l.wrap.b32 	%r1323, %r1319, %r1320, 30;
	shf.l.wrap.b32 	%r1324, %r1320, %r1319, 30;
	mov.b64 	%rd1950, {%r1324, %r1323};
	xor.b64  	%rd1951, %rd1950, %rd1949;
	shf.l.wrap.b32 	%r1325, %r1319, %r1320, 25;
	shf.l.wrap.b32 	%r1326, %r1320, %r1319, 25;
	mov.b64 	%rd1952, {%r1326, %r1325};
	xor.b64  	%rd1953, %rd1951, %rd1952;
	xor.b64  	%rd1954, %rd1935, %rd1887;
	xor.b64  	%rd1955, %rd1935, %rd1911;
	and.b64  	%rd1956, %rd1955, %rd1954;
	xor.b64  	%rd1957, %rd1956, %rd1935;
	add.s64 	%rd1958, %rd1947, %rd1957;
	add.s64 	%rd1959, %rd1958, %rd1953;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1327,%dummy}, %rd1948;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1328}, %rd1948;
	}
	shf.r.wrap.b32 	%r1329, %r1328, %r1327, 14;
	shf.r.wrap.b32 	%r1330, %r1327, %r1328, 14;
	mov.b64 	%rd1960, {%r1330, %r1329};
	shf.r.wrap.b32 	%r1331, %r1328, %r1327, 18;
	shf.r.wrap.b32 	%r1332, %r1327, %r1328, 18;
	mov.b64 	%rd1961, {%r1332, %r1331};
	xor.b64  	%rd1962, %rd1961, %rd1960;
	shf.l.wrap.b32 	%r1333, %r1327, %r1328, 23;
	shf.l.wrap.b32 	%r1334, %r1328, %r1327, 23;
	mov.b64 	%rd1963, {%r1334, %r1333};
	xor.b64  	%rd1964, %rd1962, %rd1963;
	xor.b64  	%rd1965, %rd1924, %rd1900;
	and.b64  	%rd1966, %rd1948, %rd1965;
	xor.b64  	%rd1967, %rd1966, %rd1900;
	add.s64 	%rd1968, %rd1876, %rd1720;
	add.s64 	%rd1969, %rd1968, %rd71;
	add.s64 	%rd1970, %rd1969, %rd1967;
	add.s64 	%rd1971, %rd1970, %rd1964;
	add.s64 	%rd1972, %rd1971, %rd1887;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1335,%dummy}, %rd1959;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1336}, %rd1959;
	}
	shf.r.wrap.b32 	%r1337, %r1336, %r1335, 28;
	shf.r.wrap.b32 	%r1338, %r1335, %r1336, 28;
	mov.b64 	%rd1973, {%r1338, %r1337};
	shf.l.wrap.b32 	%r1339, %r1335, %r1336, 30;
	shf.l.wrap.b32 	%r1340, %r1336, %r1335, 30;
	mov.b64 	%rd1974, {%r1340, %r1339};
	xor.b64  	%rd1975, %rd1974, %rd1973;
	shf.l.wrap.b32 	%r1341, %r1335, %r1336, 25;
	shf.l.wrap.b32 	%r1342, %r1336, %r1335, 25;
	mov.b64 	%rd1976, {%r1342, %r1341};
	xor.b64  	%rd1977, %rd1975, %rd1976;
	xor.b64  	%rd1978, %rd1959, %rd1911;
	xor.b64  	%rd1979, %rd1959, %rd1935;
	and.b64  	%rd1980, %rd1979, %rd1978;
	xor.b64  	%rd1981, %rd1980, %rd1959;
	add.s64 	%rd1982, %rd1971, %rd1981;
	add.s64 	%rd1983, %rd1982, %rd1977;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1343,%dummy}, %rd1972;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1344}, %rd1972;
	}
	shf.r.wrap.b32 	%r1345, %r1344, %r1343, 14;
	shf.r.wrap.b32 	%r1346, %r1343, %r1344, 14;
	mov.b64 	%rd1984, {%r1346, %r1345};
	shf.r.wrap.b32 	%r1347, %r1344, %r1343, 18;
	shf.r.wrap.b32 	%r1348, %r1343, %r1344, 18;
	mov.b64 	%rd1985, {%r1348, %r1347};
	xor.b64  	%rd1986, %rd1985, %rd1984;
	shf.l.wrap.b32 	%r1349, %r1343, %r1344, 23;
	shf.l.wrap.b32 	%r1350, %r1344, %r1343, 23;
	mov.b64 	%rd1987, {%r1350, %r1349};
	xor.b64  	%rd1988, %rd1986, %rd1987;
	xor.b64  	%rd1989, %rd1948, %rd1924;
	and.b64  	%rd1990, %rd1972, %rd1989;
	xor.b64  	%rd1991, %rd1990, %rd1924;
	add.s64 	%rd1992, %rd1900, %rd1733;
	add.s64 	%rd1993, %rd1992, %rd72;
	add.s64 	%rd1994, %rd1993, %rd1991;
	add.s64 	%rd1995, %rd1994, %rd1988;
	add.s64 	%rd1996, %rd1995, %rd1911;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1351,%dummy}, %rd1983;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1352}, %rd1983;
	}
	shf.r.wrap.b32 	%r1353, %r1352, %r1351, 28;
	shf.r.wrap.b32 	%r1354, %r1351, %r1352, 28;
	mov.b64 	%rd1997, {%r1354, %r1353};
	shf.l.wrap.b32 	%r1355, %r1351, %r1352, 30;
	shf.l.wrap.b32 	%r1356, %r1352, %r1351, 30;
	mov.b64 	%rd1998, {%r1356, %r1355};
	xor.b64  	%rd1999, %rd1998, %rd1997;
	shf.l.wrap.b32 	%r1357, %r1351, %r1352, 25;
	shf.l.wrap.b32 	%r1358, %r1352, %r1351, 25;
	mov.b64 	%rd2000, {%r1358, %r1357};
	xor.b64  	%rd2001, %rd1999, %rd2000;
	xor.b64  	%rd2002, %rd1983, %rd1935;
	xor.b64  	%rd2003, %rd1983, %rd1959;
	and.b64  	%rd2004, %rd2003, %rd2002;
	xor.b64  	%rd2005, %rd2004, %rd1983;
	add.s64 	%rd2006, %rd1995, %rd2005;
	add.s64 	%rd2007, %rd2006, %rd2001;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1359,%dummy}, %rd1996;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1360}, %rd1996;
	}
	shf.r.wrap.b32 	%r1361, %r1360, %r1359, 14;
	shf.r.wrap.b32 	%r1362, %r1359, %r1360, 14;
	mov.b64 	%rd2008, {%r1362, %r1361};
	shf.r.wrap.b32 	%r1363, %r1360, %r1359, 18;
	shf.r.wrap.b32 	%r1364, %r1359, %r1360, 18;
	mov.b64 	%rd2009, {%r1364, %r1363};
	xor.b64  	%rd2010, %rd2009, %rd2008;
	shf.l.wrap.b32 	%r1365, %r1359, %r1360, 23;
	shf.l.wrap.b32 	%r1366, %r1360, %r1359, 23;
	mov.b64 	%rd2011, {%r1366, %r1365};
	xor.b64  	%rd2012, %rd2010, %rd2011;
	xor.b64  	%rd2013, %rd1972, %rd1948;
	and.b64  	%rd2014, %rd1996, %rd2013;
	xor.b64  	%rd2015, %rd2014, %rd1948;
	add.s64 	%rd2016, %rd1924, %rd1746;
	add.s64 	%rd2017, %rd2016, %rd73;
	add.s64 	%rd2018, %rd2017, %rd2015;
	add.s64 	%rd2019, %rd2018, %rd2012;
	add.s64 	%rd2020, %rd2019, %rd1935;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1367,%dummy}, %rd2007;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1368}, %rd2007;
	}
	shf.r.wrap.b32 	%r1369, %r1368, %r1367, 28;
	shf.r.wrap.b32 	%r1370, %r1367, %r1368, 28;
	mov.b64 	%rd2021, {%r1370, %r1369};
	shf.l.wrap.b32 	%r1371, %r1367, %r1368, 30;
	shf.l.wrap.b32 	%r1372, %r1368, %r1367, 30;
	mov.b64 	%rd2022, {%r1372, %r1371};
	xor.b64  	%rd2023, %rd2022, %rd2021;
	shf.l.wrap.b32 	%r1373, %r1367, %r1368, 25;
	shf.l.wrap.b32 	%r1374, %r1368, %r1367, 25;
	mov.b64 	%rd2024, {%r1374, %r1373};
	xor.b64  	%rd2025, %rd2023, %rd2024;
	xor.b64  	%rd2026, %rd2007, %rd1959;
	xor.b64  	%rd2027, %rd2007, %rd1983;
	and.b64  	%rd2028, %rd2027, %rd2026;
	xor.b64  	%rd2029, %rd2028, %rd2007;
	add.s64 	%rd2030, %rd2019, %rd2029;
	add.s64 	%rd2031, %rd2030, %rd2025;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1375,%dummy}, %rd2020;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1376}, %rd2020;
	}
	shf.r.wrap.b32 	%r1377, %r1376, %r1375, 14;
	shf.r.wrap.b32 	%r1378, %r1375, %r1376, 14;
	mov.b64 	%rd2032, {%r1378, %r1377};
	shf.r.wrap.b32 	%r1379, %r1376, %r1375, 18;
	shf.r.wrap.b32 	%r1380, %r1375, %r1376, 18;
	mov.b64 	%rd2033, {%r1380, %r1379};
	xor.b64  	%rd2034, %rd2033, %rd2032;
	shf.l.wrap.b32 	%r1381, %r1375, %r1376, 23;
	shf.l.wrap.b32 	%r1382, %r1376, %r1375, 23;
	mov.b64 	%rd2035, {%r1382, %r1381};
	xor.b64  	%rd2036, %rd2034, %rd2035;
	xor.b64  	%rd2037, %rd1996, %rd1972;
	and.b64  	%rd2038, %rd2020, %rd2037;
	xor.b64  	%rd2039, %rd2038, %rd1972;
	add.s64 	%rd2040, %rd1948, %rd1759;
	add.s64 	%rd2041, %rd2040, %rd74;
	add.s64 	%rd2042, %rd2041, %rd2039;
	add.s64 	%rd2043, %rd2042, %rd2036;
	add.s64 	%rd2044, %rd2043, %rd1959;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1383,%dummy}, %rd2031;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1384}, %rd2031;
	}
	shf.r.wrap.b32 	%r1385, %r1384, %r1383, 28;
	shf.r.wrap.b32 	%r1386, %r1383, %r1384, 28;
	mov.b64 	%rd2045, {%r1386, %r1385};
	shf.l.wrap.b32 	%r1387, %r1383, %r1384, 30;
	shf.l.wrap.b32 	%r1388, %r1384, %r1383, 30;
	mov.b64 	%rd2046, {%r1388, %r1387};
	xor.b64  	%rd2047, %rd2046, %rd2045;
	shf.l.wrap.b32 	%r1389, %r1383, %r1384, 25;
	shf.l.wrap.b32 	%r1390, %r1384, %r1383, 25;
	mov.b64 	%rd2048, {%r1390, %r1389};
	xor.b64  	%rd2049, %rd2047, %rd2048;
	xor.b64  	%rd2050, %rd2031, %rd1983;
	xor.b64  	%rd2051, %rd2031, %rd2007;
	and.b64  	%rd2052, %rd2051, %rd2050;
	xor.b64  	%rd2053, %rd2052, %rd2031;
	add.s64 	%rd2054, %rd2043, %rd2053;
	add.s64 	%rd2055, %rd2054, %rd2049;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1391,%dummy}, %rd2044;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1392}, %rd2044;
	}
	shf.r.wrap.b32 	%r1393, %r1392, %r1391, 14;
	shf.r.wrap.b32 	%r1394, %r1391, %r1392, 14;
	mov.b64 	%rd2056, {%r1394, %r1393};
	shf.r.wrap.b32 	%r1395, %r1392, %r1391, 18;
	shf.r.wrap.b32 	%r1396, %r1391, %r1392, 18;
	mov.b64 	%rd2057, {%r1396, %r1395};
	xor.b64  	%rd2058, %rd2057, %rd2056;
	shf.l.wrap.b32 	%r1397, %r1391, %r1392, 23;
	shf.l.wrap.b32 	%r1398, %r1392, %r1391, 23;
	mov.b64 	%rd2059, {%r1398, %r1397};
	xor.b64  	%rd2060, %rd2058, %rd2059;
	xor.b64  	%rd2061, %rd2020, %rd1996;
	and.b64  	%rd2062, %rd2044, %rd2061;
	xor.b64  	%rd2063, %rd2062, %rd1996;
	add.s64 	%rd2064, %rd1972, %rd1772;
	add.s64 	%rd2065, %rd2064, %rd75;
	add.s64 	%rd2066, %rd2065, %rd2063;
	add.s64 	%rd2067, %rd2066, %rd2060;
	add.s64 	%rd2068, %rd2067, %rd1983;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1399,%dummy}, %rd2055;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1400}, %rd2055;
	}
	shf.r.wrap.b32 	%r1401, %r1400, %r1399, 28;
	shf.r.wrap.b32 	%r1402, %r1399, %r1400, 28;
	mov.b64 	%rd2069, {%r1402, %r1401};
	shf.l.wrap.b32 	%r1403, %r1399, %r1400, 30;
	shf.l.wrap.b32 	%r1404, %r1400, %r1399, 30;
	mov.b64 	%rd2070, {%r1404, %r1403};
	xor.b64  	%rd2071, %rd2070, %rd2069;
	shf.l.wrap.b32 	%r1405, %r1399, %r1400, 25;
	shf.l.wrap.b32 	%r1406, %r1400, %r1399, 25;
	mov.b64 	%rd2072, {%r1406, %r1405};
	xor.b64  	%rd2073, %rd2071, %rd2072;
	xor.b64  	%rd2074, %rd2055, %rd2007;
	xor.b64  	%rd2075, %rd2055, %rd2031;
	and.b64  	%rd2076, %rd2075, %rd2074;
	xor.b64  	%rd2077, %rd2076, %rd2055;
	add.s64 	%rd2078, %rd2067, %rd2077;
	add.s64 	%rd2079, %rd2078, %rd2073;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1407,%dummy}, %rd2068;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1408}, %rd2068;
	}
	shf.r.wrap.b32 	%r1409, %r1408, %r1407, 14;
	shf.r.wrap.b32 	%r1410, %r1407, %r1408, 14;
	mov.b64 	%rd2080, {%r1410, %r1409};
	shf.r.wrap.b32 	%r1411, %r1408, %r1407, 18;
	shf.r.wrap.b32 	%r1412, %r1407, %r1408, 18;
	mov.b64 	%rd2081, {%r1412, %r1411};
	xor.b64  	%rd2082, %rd2081, %rd2080;
	shf.l.wrap.b32 	%r1413, %r1407, %r1408, 23;
	shf.l.wrap.b32 	%r1414, %r1408, %r1407, 23;
	mov.b64 	%rd2083, {%r1414, %r1413};
	xor.b64  	%rd2084, %rd2082, %rd2083;
	xor.b64  	%rd2085, %rd2044, %rd2020;
	and.b64  	%rd2086, %rd2068, %rd2085;
	xor.b64  	%rd2087, %rd2086, %rd2020;
	add.s64 	%rd2088, %rd1996, %rd1785;
	add.s64 	%rd2089, %rd2088, %rd76;
	add.s64 	%rd2090, %rd2089, %rd2087;
	add.s64 	%rd2091, %rd2090, %rd2084;
	add.s64 	%rd2092, %rd2091, %rd2007;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1415,%dummy}, %rd2079;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1416}, %rd2079;
	}
	shf.r.wrap.b32 	%r1417, %r1416, %r1415, 28;
	shf.r.wrap.b32 	%r1418, %r1415, %r1416, 28;
	mov.b64 	%rd2093, {%r1418, %r1417};
	shf.l.wrap.b32 	%r1419, %r1415, %r1416, 30;
	shf.l.wrap.b32 	%r1420, %r1416, %r1415, 30;
	mov.b64 	%rd2094, {%r1420, %r1419};
	xor.b64  	%rd2095, %rd2094, %rd2093;
	shf.l.wrap.b32 	%r1421, %r1415, %r1416, 25;
	shf.l.wrap.b32 	%r1422, %r1416, %r1415, 25;
	mov.b64 	%rd2096, {%r1422, %r1421};
	xor.b64  	%rd2097, %rd2095, %rd2096;
	xor.b64  	%rd2098, %rd2079, %rd2031;
	xor.b64  	%rd2099, %rd2079, %rd2055;
	and.b64  	%rd2100, %rd2099, %rd2098;
	xor.b64  	%rd2101, %rd2100, %rd2079;
	add.s64 	%rd2102, %rd2091, %rd2101;
	add.s64 	%rd2103, %rd2102, %rd2097;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1423,%dummy}, %rd2092;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1424}, %rd2092;
	}
	shf.r.wrap.b32 	%r1425, %r1424, %r1423, 14;
	shf.r.wrap.b32 	%r1426, %r1423, %r1424, 14;
	mov.b64 	%rd2104, {%r1426, %r1425};
	shf.r.wrap.b32 	%r1427, %r1424, %r1423, 18;
	shf.r.wrap.b32 	%r1428, %r1423, %r1424, 18;
	mov.b64 	%rd2105, {%r1428, %r1427};
	xor.b64  	%rd2106, %rd2105, %rd2104;
	shf.l.wrap.b32 	%r1429, %r1423, %r1424, 23;
	shf.l.wrap.b32 	%r1430, %r1424, %r1423, 23;
	mov.b64 	%rd2107, {%r1430, %r1429};
	xor.b64  	%rd2108, %rd2106, %rd2107;
	xor.b64  	%rd2109, %rd2068, %rd2044;
	and.b64  	%rd2110, %rd2092, %rd2109;
	xor.b64  	%rd2111, %rd2110, %rd2044;
	add.s64 	%rd2112, %rd2020, %rd1798;
	add.s64 	%rd2113, %rd2112, %rd77;
	add.s64 	%rd2114, %rd2113, %rd2111;
	add.s64 	%rd2115, %rd2114, %rd2108;
	add.s64 	%rd2116, %rd2115, %rd2031;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1431,%dummy}, %rd2103;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1432}, %rd2103;
	}
	shf.r.wrap.b32 	%r1433, %r1432, %r1431, 28;
	shf.r.wrap.b32 	%r1434, %r1431, %r1432, 28;
	mov.b64 	%rd2117, {%r1434, %r1433};
	shf.l.wrap.b32 	%r1435, %r1431, %r1432, 30;
	shf.l.wrap.b32 	%r1436, %r1432, %r1431, 30;
	mov.b64 	%rd2118, {%r1436, %r1435};
	xor.b64  	%rd2119, %rd2118, %rd2117;
	shf.l.wrap.b32 	%r1437, %r1431, %r1432, 25;
	shf.l.wrap.b32 	%r1438, %r1432, %r1431, 25;
	mov.b64 	%rd2120, {%r1438, %r1437};
	xor.b64  	%rd2121, %rd2119, %rd2120;
	xor.b64  	%rd2122, %rd2103, %rd2055;
	xor.b64  	%rd2123, %rd2103, %rd2079;
	and.b64  	%rd2124, %rd2123, %rd2122;
	xor.b64  	%rd2125, %rd2124, %rd2103;
	add.s64 	%rd2126, %rd2115, %rd2125;
	add.s64 	%rd2127, %rd2126, %rd2121;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1439,%dummy}, %rd2116;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1440}, %rd2116;
	}
	shf.r.wrap.b32 	%r1441, %r1440, %r1439, 14;
	shf.r.wrap.b32 	%r1442, %r1439, %r1440, 14;
	mov.b64 	%rd2128, {%r1442, %r1441};
	shf.r.wrap.b32 	%r1443, %r1440, %r1439, 18;
	shf.r.wrap.b32 	%r1444, %r1439, %r1440, 18;
	mov.b64 	%rd2129, {%r1444, %r1443};
	xor.b64  	%rd2130, %rd2129, %rd2128;
	shf.l.wrap.b32 	%r1445, %r1439, %r1440, 23;
	shf.l.wrap.b32 	%r1446, %r1440, %r1439, 23;
	mov.b64 	%rd2131, {%r1446, %r1445};
	xor.b64  	%rd2132, %rd2130, %rd2131;
	xor.b64  	%rd2133, %rd2092, %rd2068;
	and.b64  	%rd2134, %rd2116, %rd2133;
	xor.b64  	%rd2135, %rd2134, %rd2068;
	add.s64 	%rd2136, %rd2044, %rd1811;
	add.s64 	%rd2137, %rd2136, %rd78;
	add.s64 	%rd2138, %rd2137, %rd2135;
	add.s64 	%rd2139, %rd2138, %rd2132;
	add.s64 	%rd2140, %rd2139, %rd2055;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1447,%dummy}, %rd2127;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1448}, %rd2127;
	}
	shf.r.wrap.b32 	%r1449, %r1448, %r1447, 28;
	shf.r.wrap.b32 	%r1450, %r1447, %r1448, 28;
	mov.b64 	%rd2141, {%r1450, %r1449};
	shf.l.wrap.b32 	%r1451, %r1447, %r1448, 30;
	shf.l.wrap.b32 	%r1452, %r1448, %r1447, 30;
	mov.b64 	%rd2142, {%r1452, %r1451};
	xor.b64  	%rd2143, %rd2142, %rd2141;
	shf.l.wrap.b32 	%r1453, %r1447, %r1448, 25;
	shf.l.wrap.b32 	%r1454, %r1448, %r1447, 25;
	mov.b64 	%rd2144, {%r1454, %r1453};
	xor.b64  	%rd2145, %rd2143, %rd2144;
	xor.b64  	%rd2146, %rd2127, %rd2079;
	xor.b64  	%rd2147, %rd2127, %rd2103;
	and.b64  	%rd2148, %rd2147, %rd2146;
	xor.b64  	%rd2149, %rd2148, %rd2127;
	add.s64 	%rd2150, %rd2139, %rd2149;
	add.s64 	%rd2151, %rd2150, %rd2145;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1455,%dummy}, %rd2140;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1456}, %rd2140;
	}
	shf.r.wrap.b32 	%r1457, %r1456, %r1455, 14;
	shf.r.wrap.b32 	%r1458, %r1455, %r1456, 14;
	mov.b64 	%rd2152, {%r1458, %r1457};
	shf.r.wrap.b32 	%r1459, %r1456, %r1455, 18;
	shf.r.wrap.b32 	%r1460, %r1455, %r1456, 18;
	mov.b64 	%rd2153, {%r1460, %r1459};
	xor.b64  	%rd2154, %rd2153, %rd2152;
	shf.l.wrap.b32 	%r1461, %r1455, %r1456, 23;
	shf.l.wrap.b32 	%r1462, %r1456, %r1455, 23;
	mov.b64 	%rd2155, {%r1462, %r1461};
	xor.b64  	%rd2156, %rd2154, %rd2155;
	xor.b64  	%rd2157, %rd2116, %rd2092;
	and.b64  	%rd2158, %rd2140, %rd2157;
	xor.b64  	%rd2159, %rd2158, %rd2092;
	add.s64 	%rd2160, %rd2068, %rd1824;
	add.s64 	%rd2161, %rd2160, %rd79;
	add.s64 	%rd2162, %rd2161, %rd2159;
	add.s64 	%rd2163, %rd2162, %rd2156;
	add.s64 	%rd2164, %rd2163, %rd2079;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1463,%dummy}, %rd2151;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1464}, %rd2151;
	}
	shf.r.wrap.b32 	%r1465, %r1464, %r1463, 28;
	shf.r.wrap.b32 	%r1466, %r1463, %r1464, 28;
	mov.b64 	%rd2165, {%r1466, %r1465};
	shf.l.wrap.b32 	%r1467, %r1463, %r1464, 30;
	shf.l.wrap.b32 	%r1468, %r1464, %r1463, 30;
	mov.b64 	%rd2166, {%r1468, %r1467};
	xor.b64  	%rd2167, %rd2166, %rd2165;
	shf.l.wrap.b32 	%r1469, %r1463, %r1464, 25;
	shf.l.wrap.b32 	%r1470, %r1464, %r1463, 25;
	mov.b64 	%rd2168, {%r1470, %r1469};
	xor.b64  	%rd2169, %rd2167, %rd2168;
	xor.b64  	%rd2170, %rd2151, %rd2103;
	xor.b64  	%rd2171, %rd2151, %rd2127;
	and.b64  	%rd2172, %rd2171, %rd2170;
	xor.b64  	%rd2173, %rd2172, %rd2151;
	add.s64 	%rd2174, %rd2163, %rd2173;
	add.s64 	%rd2175, %rd2174, %rd2169;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1471,%dummy}, %rd2164;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1472}, %rd2164;
	}
	shf.r.wrap.b32 	%r1473, %r1472, %r1471, 14;
	shf.r.wrap.b32 	%r1474, %r1471, %r1472, 14;
	mov.b64 	%rd2176, {%r1474, %r1473};
	shf.r.wrap.b32 	%r1475, %r1472, %r1471, 18;
	shf.r.wrap.b32 	%r1476, %r1471, %r1472, 18;
	mov.b64 	%rd2177, {%r1476, %r1475};
	xor.b64  	%rd2178, %rd2177, %rd2176;
	shf.l.wrap.b32 	%r1477, %r1471, %r1472, 23;
	shf.l.wrap.b32 	%r1478, %r1472, %r1471, 23;
	mov.b64 	%rd2179, {%r1478, %r1477};
	xor.b64  	%rd2180, %rd2178, %rd2179;
	xor.b64  	%rd2181, %rd2140, %rd2116;
	and.b64  	%rd2182, %rd2164, %rd2181;
	xor.b64  	%rd2183, %rd2182, %rd2116;
	add.s64 	%rd2184, %rd2092, %rd1837;
	add.s64 	%rd2185, %rd2184, %rd80;
	add.s64 	%rd2186, %rd2185, %rd2183;
	add.s64 	%rd2187, %rd2186, %rd2180;
	add.s64 	%rd2188, %rd2187, %rd2103;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1479,%dummy}, %rd2175;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1480}, %rd2175;
	}
	shf.r.wrap.b32 	%r1481, %r1480, %r1479, 28;
	shf.r.wrap.b32 	%r1482, %r1479, %r1480, 28;
	mov.b64 	%rd2189, {%r1482, %r1481};
	shf.l.wrap.b32 	%r1483, %r1479, %r1480, 30;
	shf.l.wrap.b32 	%r1484, %r1480, %r1479, 30;
	mov.b64 	%rd2190, {%r1484, %r1483};
	xor.b64  	%rd2191, %rd2190, %rd2189;
	shf.l.wrap.b32 	%r1485, %r1479, %r1480, 25;
	shf.l.wrap.b32 	%r1486, %r1480, %r1479, 25;
	mov.b64 	%rd2192, {%r1486, %r1485};
	xor.b64  	%rd2193, %rd2191, %rd2192;
	xor.b64  	%rd2194, %rd2175, %rd2127;
	xor.b64  	%rd2195, %rd2175, %rd2151;
	and.b64  	%rd2196, %rd2195, %rd2194;
	xor.b64  	%rd2197, %rd2196, %rd2175;
	add.s64 	%rd2198, %rd2187, %rd2197;
	add.s64 	%rd2199, %rd2198, %rd2193;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1487,%dummy}, %rd2188;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1488}, %rd2188;
	}
	shf.r.wrap.b32 	%r1489, %r1488, %r1487, 14;
	shf.r.wrap.b32 	%r1490, %r1487, %r1488, 14;
	mov.b64 	%rd2200, {%r1490, %r1489};
	shf.r.wrap.b32 	%r1491, %r1488, %r1487, 18;
	shf.r.wrap.b32 	%r1492, %r1487, %r1488, 18;
	mov.b64 	%rd2201, {%r1492, %r1491};
	xor.b64  	%rd2202, %rd2201, %rd2200;
	shf.l.wrap.b32 	%r1493, %r1487, %r1488, 23;
	shf.l.wrap.b32 	%r1494, %r1488, %r1487, 23;
	mov.b64 	%rd2203, {%r1494, %r1493};
	xor.b64  	%rd2204, %rd2202, %rd2203;
	xor.b64  	%rd2205, %rd2164, %rd2140;
	and.b64  	%rd2206, %rd2188, %rd2205;
	xor.b64  	%rd2207, %rd2206, %rd2140;
	add.s64 	%rd2208, %rd2116, %rd1850;
	add.s64 	%rd2209, %rd2208, %rd81;
	add.s64 	%rd2210, %rd2209, %rd2207;
	add.s64 	%rd2211, %rd2210, %rd2204;
	add.s64 	%rd2212, %rd2211, %rd2127;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1495,%dummy}, %rd2199;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1496}, %rd2199;
	}
	shf.r.wrap.b32 	%r1497, %r1496, %r1495, 28;
	shf.r.wrap.b32 	%r1498, %r1495, %r1496, 28;
	mov.b64 	%rd2213, {%r1498, %r1497};
	shf.l.wrap.b32 	%r1499, %r1495, %r1496, 30;
	shf.l.wrap.b32 	%r1500, %r1496, %r1495, 30;
	mov.b64 	%rd2214, {%r1500, %r1499};
	xor.b64  	%rd2215, %rd2214, %rd2213;
	shf.l.wrap.b32 	%r1501, %r1495, %r1496, 25;
	shf.l.wrap.b32 	%r1502, %r1496, %r1495, 25;
	mov.b64 	%rd2216, {%r1502, %r1501};
	xor.b64  	%rd2217, %rd2215, %rd2216;
	xor.b64  	%rd2218, %rd2199, %rd2151;
	xor.b64  	%rd2219, %rd2199, %rd2175;
	and.b64  	%rd2220, %rd2219, %rd2218;
	xor.b64  	%rd2221, %rd2220, %rd2199;
	add.s64 	%rd2222, %rd2211, %rd2221;
	add.s64 	%rd2223, %rd2222, %rd2217;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1503,%dummy}, %rd2212;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1504}, %rd2212;
	}
	shf.r.wrap.b32 	%r1505, %r1504, %r1503, 14;
	shf.r.wrap.b32 	%r1506, %r1503, %r1504, 14;
	mov.b64 	%rd2224, {%r1506, %r1505};
	shf.r.wrap.b32 	%r1507, %r1504, %r1503, 18;
	shf.r.wrap.b32 	%r1508, %r1503, %r1504, 18;
	mov.b64 	%rd2225, {%r1508, %r1507};
	xor.b64  	%rd2226, %rd2225, %rd2224;
	shf.l.wrap.b32 	%r1509, %r1503, %r1504, 23;
	shf.l.wrap.b32 	%r1510, %r1504, %r1503, 23;
	mov.b64 	%rd2227, {%r1510, %r1509};
	xor.b64  	%rd2228, %rd2226, %rd2227;
	xor.b64  	%rd2229, %rd2188, %rd2164;
	and.b64  	%rd2230, %rd2212, %rd2229;
	xor.b64  	%rd2231, %rd2230, %rd2164;
	add.s64 	%rd2232, %rd2140, %rd1863;
	add.s64 	%rd2233, %rd2232, %rd82;
	add.s64 	%rd2234, %rd2233, %rd2231;
	add.s64 	%rd2235, %rd2234, %rd2228;
	add.s64 	%rd2236, %rd2235, %rd2151;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1511,%dummy}, %rd2223;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1512}, %rd2223;
	}
	shf.r.wrap.b32 	%r1513, %r1512, %r1511, 28;
	shf.r.wrap.b32 	%r1514, %r1511, %r1512, 28;
	mov.b64 	%rd2237, {%r1514, %r1513};
	shf.l.wrap.b32 	%r1515, %r1511, %r1512, 30;
	shf.l.wrap.b32 	%r1516, %r1512, %r1511, 30;
	mov.b64 	%rd2238, {%r1516, %r1515};
	xor.b64  	%rd2239, %rd2238, %rd2237;
	shf.l.wrap.b32 	%r1517, %r1511, %r1512, 25;
	shf.l.wrap.b32 	%r1518, %r1512, %r1511, 25;
	mov.b64 	%rd2240, {%r1518, %r1517};
	xor.b64  	%rd2241, %rd2239, %rd2240;
	xor.b64  	%rd2242, %rd2223, %rd2175;
	xor.b64  	%rd2243, %rd2223, %rd2199;
	and.b64  	%rd2244, %rd2243, %rd2242;
	xor.b64  	%rd2245, %rd2244, %rd2223;
	add.s64 	%rd2246, %rd2235, %rd2245;
	add.s64 	%rd2247, %rd2246, %rd2241;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1519,%dummy}, %rd1850;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1520}, %rd1850;
	}
	shf.r.wrap.b32 	%r1521, %r1520, %r1519, 19;
	shf.r.wrap.b32 	%r1522, %r1519, %r1520, 19;
	mov.b64 	%rd2248, {%r1522, %r1521};
	shf.l.wrap.b32 	%r1523, %r1519, %r1520, 3;
	shf.l.wrap.b32 	%r1524, %r1520, %r1519, 3;
	mov.b64 	%rd2249, {%r1524, %r1523};
	shr.u64 	%rd2250, %rd1850, 6;
	xor.b64  	%rd2251, %rd2248, %rd2250;
	xor.b64  	%rd2252, %rd2251, %rd2249;
	shf.r.wrap.b32 	%r1525, %r1134, %r1133, 1;
	shf.r.wrap.b32 	%r1526, %r1133, %r1134, 1;
	mov.b64 	%rd2253, {%r1526, %r1525};
	shf.r.wrap.b32 	%r1527, %r1134, %r1133, 8;
	shf.r.wrap.b32 	%r1528, %r1133, %r1134, 8;
	mov.b64 	%rd2254, {%r1528, %r1527};
	shr.u64 	%rd2255, %rd1681, 7;
	xor.b64  	%rd2256, %rd2253, %rd2255;
	xor.b64  	%rd2257, %rd2256, %rd2254;
	add.s64 	%rd2258, %rd1785, %rd1668;
	add.s64 	%rd2259, %rd2258, %rd2252;
	add.s64 	%rd2260, %rd2259, %rd2257;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1529,%dummy}, %rd1863;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1530}, %rd1863;
	}
	shf.r.wrap.b32 	%r1531, %r1530, %r1529, 19;
	shf.r.wrap.b32 	%r1532, %r1529, %r1530, 19;
	mov.b64 	%rd2261, {%r1532, %r1531};
	shf.l.wrap.b32 	%r1533, %r1529, %r1530, 3;
	shf.l.wrap.b32 	%r1534, %r1530, %r1529, 3;
	mov.b64 	%rd2262, {%r1534, %r1533};
	shr.u64 	%rd2263, %rd1863, 6;
	xor.b64  	%rd2264, %rd2261, %rd2263;
	xor.b64  	%rd2265, %rd2264, %rd2262;
	shf.r.wrap.b32 	%r1535, %r1144, %r1143, 1;
	shf.r.wrap.b32 	%r1536, %r1143, %r1144, 1;
	mov.b64 	%rd2266, {%r1536, %r1535};
	shf.r.wrap.b32 	%r1537, %r1144, %r1143, 8;
	shf.r.wrap.b32 	%r1538, %r1143, %r1144, 8;
	mov.b64 	%rd2267, {%r1538, %r1537};
	shr.u64 	%rd2268, %rd1694, 7;
	xor.b64  	%rd2269, %rd2266, %rd2268;
	xor.b64  	%rd2270, %rd2269, %rd2267;
	add.s64 	%rd2271, %rd1798, %rd1681;
	add.s64 	%rd2272, %rd2271, %rd2265;
	add.s64 	%rd2273, %rd2272, %rd2270;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1539,%dummy}, %rd2260;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1540}, %rd2260;
	}
	shf.r.wrap.b32 	%r1541, %r1540, %r1539, 19;
	shf.r.wrap.b32 	%r1542, %r1539, %r1540, 19;
	mov.b64 	%rd2274, {%r1542, %r1541};
	shf.l.wrap.b32 	%r1543, %r1539, %r1540, 3;
	shf.l.wrap.b32 	%r1544, %r1540, %r1539, 3;
	mov.b64 	%rd2275, {%r1544, %r1543};
	shr.u64 	%rd2276, %rd2260, 6;
	xor.b64  	%rd2277, %rd2274, %rd2276;
	xor.b64  	%rd2278, %rd2277, %rd2275;
	shf.r.wrap.b32 	%r1545, %r1154, %r1153, 1;
	shf.r.wrap.b32 	%r1546, %r1153, %r1154, 1;
	mov.b64 	%rd2279, {%r1546, %r1545};
	shf.r.wrap.b32 	%r1547, %r1154, %r1153, 8;
	shf.r.wrap.b32 	%r1548, %r1153, %r1154, 8;
	mov.b64 	%rd2280, {%r1548, %r1547};
	shr.u64 	%rd2281, %rd1707, 7;
	xor.b64  	%rd2282, %rd2279, %rd2281;
	xor.b64  	%rd2283, %rd2282, %rd2280;
	add.s64 	%rd2284, %rd1811, %rd1694;
	add.s64 	%rd2285, %rd2284, %rd2278;
	add.s64 	%rd2286, %rd2285, %rd2283;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1549,%dummy}, %rd2273;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1550}, %rd2273;
	}
	shf.r.wrap.b32 	%r1551, %r1550, %r1549, 19;
	shf.r.wrap.b32 	%r1552, %r1549, %r1550, 19;
	mov.b64 	%rd2287, {%r1552, %r1551};
	shf.l.wrap.b32 	%r1553, %r1549, %r1550, 3;
	shf.l.wrap.b32 	%r1554, %r1550, %r1549, 3;
	mov.b64 	%rd2288, {%r1554, %r1553};
	shr.u64 	%rd2289, %rd2273, 6;
	xor.b64  	%rd2290, %rd2287, %rd2289;
	xor.b64  	%rd2291, %rd2290, %rd2288;
	shf.r.wrap.b32 	%r1555, %r1164, %r1163, 1;
	shf.r.wrap.b32 	%r1556, %r1163, %r1164, 1;
	mov.b64 	%rd2292, {%r1556, %r1555};
	shf.r.wrap.b32 	%r1557, %r1164, %r1163, 8;
	shf.r.wrap.b32 	%r1558, %r1163, %r1164, 8;
	mov.b64 	%rd2293, {%r1558, %r1557};
	shr.u64 	%rd2294, %rd1720, 7;
	xor.b64  	%rd2295, %rd2292, %rd2294;
	xor.b64  	%rd2296, %rd2295, %rd2293;
	add.s64 	%rd2297, %rd1824, %rd1707;
	add.s64 	%rd2298, %rd2297, %rd2291;
	add.s64 	%rd2299, %rd2298, %rd2296;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1559,%dummy}, %rd2286;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1560}, %rd2286;
	}
	shf.r.wrap.b32 	%r1561, %r1560, %r1559, 19;
	shf.r.wrap.b32 	%r1562, %r1559, %r1560, 19;
	mov.b64 	%rd2300, {%r1562, %r1561};
	shf.l.wrap.b32 	%r1563, %r1559, %r1560, 3;
	shf.l.wrap.b32 	%r1564, %r1560, %r1559, 3;
	mov.b64 	%rd2301, {%r1564, %r1563};
	shr.u64 	%rd2302, %rd2286, 6;
	xor.b64  	%rd2303, %rd2300, %rd2302;
	xor.b64  	%rd2304, %rd2303, %rd2301;
	shf.r.wrap.b32 	%r1565, %r1174, %r1173, 1;
	shf.r.wrap.b32 	%r1566, %r1173, %r1174, 1;
	mov.b64 	%rd2305, {%r1566, %r1565};
	shf.r.wrap.b32 	%r1567, %r1174, %r1173, 8;
	shf.r.wrap.b32 	%r1568, %r1173, %r1174, 8;
	mov.b64 	%rd2306, {%r1568, %r1567};
	shr.u64 	%rd2307, %rd1733, 7;
	xor.b64  	%rd2308, %rd2305, %rd2307;
	xor.b64  	%rd2309, %rd2308, %rd2306;
	add.s64 	%rd2310, %rd1837, %rd1720;
	add.s64 	%rd2311, %rd2310, %rd2304;
	add.s64 	%rd2312, %rd2311, %rd2309;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1569,%dummy}, %rd2299;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1570}, %rd2299;
	}
	shf.r.wrap.b32 	%r1571, %r1570, %r1569, 19;
	shf.r.wrap.b32 	%r1572, %r1569, %r1570, 19;
	mov.b64 	%rd2313, {%r1572, %r1571};
	shf.l.wrap.b32 	%r1573, %r1569, %r1570, 3;
	shf.l.wrap.b32 	%r1574, %r1570, %r1569, 3;
	mov.b64 	%rd2314, {%r1574, %r1573};
	shr.u64 	%rd2315, %rd2299, 6;
	xor.b64  	%rd2316, %rd2313, %rd2315;
	xor.b64  	%rd2317, %rd2316, %rd2314;
	shf.r.wrap.b32 	%r1575, %r1184, %r1183, 1;
	shf.r.wrap.b32 	%r1576, %r1183, %r1184, 1;
	mov.b64 	%rd2318, {%r1576, %r1575};
	shf.r.wrap.b32 	%r1577, %r1184, %r1183, 8;
	shf.r.wrap.b32 	%r1578, %r1183, %r1184, 8;
	mov.b64 	%rd2319, {%r1578, %r1577};
	shr.u64 	%rd2320, %rd1746, 7;
	xor.b64  	%rd2321, %rd2318, %rd2320;
	xor.b64  	%rd2322, %rd2321, %rd2319;
	add.s64 	%rd2323, %rd1850, %rd1733;
	add.s64 	%rd2324, %rd2323, %rd2317;
	add.s64 	%rd2325, %rd2324, %rd2322;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1579,%dummy}, %rd2312;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1580}, %rd2312;
	}
	shf.r.wrap.b32 	%r1581, %r1580, %r1579, 19;
	shf.r.wrap.b32 	%r1582, %r1579, %r1580, 19;
	mov.b64 	%rd2326, {%r1582, %r1581};
	shf.l.wrap.b32 	%r1583, %r1579, %r1580, 3;
	shf.l.wrap.b32 	%r1584, %r1580, %r1579, 3;
	mov.b64 	%rd2327, {%r1584, %r1583};
	shr.u64 	%rd2328, %rd2312, 6;
	xor.b64  	%rd2329, %rd2326, %rd2328;
	xor.b64  	%rd2330, %rd2329, %rd2327;
	shf.r.wrap.b32 	%r1585, %r1194, %r1193, 1;
	shf.r.wrap.b32 	%r1586, %r1193, %r1194, 1;
	mov.b64 	%rd2331, {%r1586, %r1585};
	shf.r.wrap.b32 	%r1587, %r1194, %r1193, 8;
	shf.r.wrap.b32 	%r1588, %r1193, %r1194, 8;
	mov.b64 	%rd2332, {%r1588, %r1587};
	shr.u64 	%rd2333, %rd1759, 7;
	xor.b64  	%rd2334, %rd2331, %rd2333;
	xor.b64  	%rd2335, %rd2334, %rd2332;
	add.s64 	%rd2336, %rd1863, %rd1746;
	add.s64 	%rd2337, %rd2336, %rd2330;
	add.s64 	%rd2338, %rd2337, %rd2335;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1589,%dummy}, %rd2325;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1590}, %rd2325;
	}
	shf.r.wrap.b32 	%r1591, %r1590, %r1589, 19;
	shf.r.wrap.b32 	%r1592, %r1589, %r1590, 19;
	mov.b64 	%rd2339, {%r1592, %r1591};
	shf.l.wrap.b32 	%r1593, %r1589, %r1590, 3;
	shf.l.wrap.b32 	%r1594, %r1590, %r1589, 3;
	mov.b64 	%rd2340, {%r1594, %r1593};
	shr.u64 	%rd2341, %rd2325, 6;
	xor.b64  	%rd2342, %rd2339, %rd2341;
	xor.b64  	%rd2343, %rd2342, %rd2340;
	shf.r.wrap.b32 	%r1595, %r1204, %r1203, 1;
	shf.r.wrap.b32 	%r1596, %r1203, %r1204, 1;
	mov.b64 	%rd2344, {%r1596, %r1595};
	shf.r.wrap.b32 	%r1597, %r1204, %r1203, 8;
	shf.r.wrap.b32 	%r1598, %r1203, %r1204, 8;
	mov.b64 	%rd2345, {%r1598, %r1597};
	shr.u64 	%rd2346, %rd1772, 7;
	xor.b64  	%rd2347, %rd2344, %rd2346;
	xor.b64  	%rd2348, %rd2347, %rd2345;
	add.s64 	%rd2349, %rd2260, %rd1759;
	add.s64 	%rd2350, %rd2349, %rd2343;
	add.s64 	%rd2351, %rd2350, %rd2348;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1599,%dummy}, %rd2338;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1600}, %rd2338;
	}
	shf.r.wrap.b32 	%r1601, %r1600, %r1599, 19;
	shf.r.wrap.b32 	%r1602, %r1599, %r1600, 19;
	mov.b64 	%rd2352, {%r1602, %r1601};
	shf.l.wrap.b32 	%r1603, %r1599, %r1600, 3;
	shf.l.wrap.b32 	%r1604, %r1600, %r1599, 3;
	mov.b64 	%rd2353, {%r1604, %r1603};
	shr.u64 	%rd2354, %rd2338, 6;
	xor.b64  	%rd2355, %rd2352, %rd2354;
	xor.b64  	%rd2356, %rd2355, %rd2353;
	shf.r.wrap.b32 	%r1605, %r1214, %r1213, 1;
	shf.r.wrap.b32 	%r1606, %r1213, %r1214, 1;
	mov.b64 	%rd2357, {%r1606, %r1605};
	shf.r.wrap.b32 	%r1607, %r1214, %r1213, 8;
	shf.r.wrap.b32 	%r1608, %r1213, %r1214, 8;
	mov.b64 	%rd2358, {%r1608, %r1607};
	shr.u64 	%rd2359, %rd1785, 7;
	xor.b64  	%rd2360, %rd2357, %rd2359;
	xor.b64  	%rd2361, %rd2360, %rd2358;
	add.s64 	%rd2362, %rd2273, %rd1772;
	add.s64 	%rd2363, %rd2362, %rd2356;
	add.s64 	%rd2364, %rd2363, %rd2361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1609,%dummy}, %rd2351;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1610}, %rd2351;
	}
	shf.r.wrap.b32 	%r1611, %r1610, %r1609, 19;
	shf.r.wrap.b32 	%r1612, %r1609, %r1610, 19;
	mov.b64 	%rd2365, {%r1612, %r1611};
	shf.l.wrap.b32 	%r1613, %r1609, %r1610, 3;
	shf.l.wrap.b32 	%r1614, %r1610, %r1609, 3;
	mov.b64 	%rd2366, {%r1614, %r1613};
	shr.u64 	%rd2367, %rd2351, 6;
	xor.b64  	%rd2368, %rd2365, %rd2367;
	xor.b64  	%rd2369, %rd2368, %rd2366;
	shf.r.wrap.b32 	%r1615, %r1224, %r1223, 1;
	shf.r.wrap.b32 	%r1616, %r1223, %r1224, 1;
	mov.b64 	%rd2370, {%r1616, %r1615};
	shf.r.wrap.b32 	%r1617, %r1224, %r1223, 8;
	shf.r.wrap.b32 	%r1618, %r1223, %r1224, 8;
	mov.b64 	%rd2371, {%r1618, %r1617};
	shr.u64 	%rd2372, %rd1798, 7;
	xor.b64  	%rd2373, %rd2370, %rd2372;
	xor.b64  	%rd2374, %rd2373, %rd2371;
	add.s64 	%rd2375, %rd2286, %rd1785;
	add.s64 	%rd2376, %rd2375, %rd2369;
	add.s64 	%rd2377, %rd2376, %rd2374;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1619,%dummy}, %rd2364;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1620}, %rd2364;
	}
	shf.r.wrap.b32 	%r1621, %r1620, %r1619, 19;
	shf.r.wrap.b32 	%r1622, %r1619, %r1620, 19;
	mov.b64 	%rd2378, {%r1622, %r1621};
	shf.l.wrap.b32 	%r1623, %r1619, %r1620, 3;
	shf.l.wrap.b32 	%r1624, %r1620, %r1619, 3;
	mov.b64 	%rd2379, {%r1624, %r1623};
	shr.u64 	%rd2380, %rd2364, 6;
	xor.b64  	%rd2381, %rd2378, %rd2380;
	xor.b64  	%rd2382, %rd2381, %rd2379;
	shf.r.wrap.b32 	%r1625, %r1234, %r1233, 1;
	shf.r.wrap.b32 	%r1626, %r1233, %r1234, 1;
	mov.b64 	%rd2383, {%r1626, %r1625};
	shf.r.wrap.b32 	%r1627, %r1234, %r1233, 8;
	shf.r.wrap.b32 	%r1628, %r1233, %r1234, 8;
	mov.b64 	%rd2384, {%r1628, %r1627};
	shr.u64 	%rd2385, %rd1811, 7;
	xor.b64  	%rd2386, %rd2383, %rd2385;
	xor.b64  	%rd2387, %rd2386, %rd2384;
	add.s64 	%rd2388, %rd2299, %rd1798;
	add.s64 	%rd2389, %rd2388, %rd2382;
	add.s64 	%rd2390, %rd2389, %rd2387;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1629,%dummy}, %rd2377;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1630}, %rd2377;
	}
	shf.r.wrap.b32 	%r1631, %r1630, %r1629, 19;
	shf.r.wrap.b32 	%r1632, %r1629, %r1630, 19;
	mov.b64 	%rd2391, {%r1632, %r1631};
	shf.l.wrap.b32 	%r1633, %r1629, %r1630, 3;
	shf.l.wrap.b32 	%r1634, %r1630, %r1629, 3;
	mov.b64 	%rd2392, {%r1634, %r1633};
	shr.u64 	%rd2393, %rd2377, 6;
	xor.b64  	%rd2394, %rd2391, %rd2393;
	xor.b64  	%rd2395, %rd2394, %rd2392;
	shf.r.wrap.b32 	%r1635, %r1244, %r1243, 1;
	shf.r.wrap.b32 	%r1636, %r1243, %r1244, 1;
	mov.b64 	%rd2396, {%r1636, %r1635};
	shf.r.wrap.b32 	%r1637, %r1244, %r1243, 8;
	shf.r.wrap.b32 	%r1638, %r1243, %r1244, 8;
	mov.b64 	%rd2397, {%r1638, %r1637};
	shr.u64 	%rd2398, %rd1824, 7;
	xor.b64  	%rd2399, %rd2396, %rd2398;
	xor.b64  	%rd2400, %rd2399, %rd2397;
	add.s64 	%rd2401, %rd2312, %rd1811;
	add.s64 	%rd2402, %rd2401, %rd2395;
	add.s64 	%rd2403, %rd2402, %rd2400;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1639,%dummy}, %rd2390;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1640}, %rd2390;
	}
	shf.r.wrap.b32 	%r1641, %r1640, %r1639, 19;
	shf.r.wrap.b32 	%r1642, %r1639, %r1640, 19;
	mov.b64 	%rd2404, {%r1642, %r1641};
	shf.l.wrap.b32 	%r1643, %r1639, %r1640, 3;
	shf.l.wrap.b32 	%r1644, %r1640, %r1639, 3;
	mov.b64 	%rd2405, {%r1644, %r1643};
	shr.u64 	%rd2406, %rd2390, 6;
	xor.b64  	%rd2407, %rd2404, %rd2406;
	xor.b64  	%rd2408, %rd2407, %rd2405;
	shf.r.wrap.b32 	%r1645, %r1254, %r1253, 1;
	shf.r.wrap.b32 	%r1646, %r1253, %r1254, 1;
	mov.b64 	%rd2409, {%r1646, %r1645};
	shf.r.wrap.b32 	%r1647, %r1254, %r1253, 8;
	shf.r.wrap.b32 	%r1648, %r1253, %r1254, 8;
	mov.b64 	%rd2410, {%r1648, %r1647};
	shr.u64 	%rd2411, %rd1837, 7;
	xor.b64  	%rd2412, %rd2409, %rd2411;
	xor.b64  	%rd2413, %rd2412, %rd2410;
	add.s64 	%rd2414, %rd2325, %rd1824;
	add.s64 	%rd2415, %rd2414, %rd2408;
	add.s64 	%rd2416, %rd2415, %rd2413;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1649,%dummy}, %rd2403;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1650}, %rd2403;
	}
	shf.r.wrap.b32 	%r1651, %r1650, %r1649, 19;
	shf.r.wrap.b32 	%r1652, %r1649, %r1650, 19;
	mov.b64 	%rd2417, {%r1652, %r1651};
	shf.l.wrap.b32 	%r1653, %r1649, %r1650, 3;
	shf.l.wrap.b32 	%r1654, %r1650, %r1649, 3;
	mov.b64 	%rd2418, {%r1654, %r1653};
	shr.u64 	%rd2419, %rd2403, 6;
	xor.b64  	%rd2420, %rd2417, %rd2419;
	xor.b64  	%rd2421, %rd2420, %rd2418;
	shf.r.wrap.b32 	%r1655, %r1520, %r1519, 1;
	shf.r.wrap.b32 	%r1656, %r1519, %r1520, 1;
	mov.b64 	%rd2422, {%r1656, %r1655};
	shf.r.wrap.b32 	%r1657, %r1520, %r1519, 8;
	shf.r.wrap.b32 	%r1658, %r1519, %r1520, 8;
	mov.b64 	%rd2423, {%r1658, %r1657};
	shr.u64 	%rd2424, %rd1850, 7;
	xor.b64  	%rd2425, %rd2422, %rd2424;
	xor.b64  	%rd2426, %rd2425, %rd2423;
	add.s64 	%rd2427, %rd2338, %rd1837;
	add.s64 	%rd2428, %rd2427, %rd2421;
	add.s64 	%rd2429, %rd2428, %rd2426;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1659,%dummy}, %rd2416;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1660}, %rd2416;
	}
	shf.r.wrap.b32 	%r1661, %r1660, %r1659, 19;
	shf.r.wrap.b32 	%r1662, %r1659, %r1660, 19;
	mov.b64 	%rd2430, {%r1662, %r1661};
	shf.l.wrap.b32 	%r1663, %r1659, %r1660, 3;
	shf.l.wrap.b32 	%r1664, %r1660, %r1659, 3;
	mov.b64 	%rd2431, {%r1664, %r1663};
	shr.u64 	%rd2432, %rd2416, 6;
	xor.b64  	%rd2433, %rd2430, %rd2432;
	xor.b64  	%rd2434, %rd2433, %rd2431;
	shf.r.wrap.b32 	%r1665, %r1530, %r1529, 1;
	shf.r.wrap.b32 	%r1666, %r1529, %r1530, 1;
	mov.b64 	%rd2435, {%r1666, %r1665};
	shf.r.wrap.b32 	%r1667, %r1530, %r1529, 8;
	shf.r.wrap.b32 	%r1668, %r1529, %r1530, 8;
	mov.b64 	%rd2436, {%r1668, %r1667};
	shr.u64 	%rd2437, %rd1863, 7;
	xor.b64  	%rd2438, %rd2435, %rd2437;
	xor.b64  	%rd2439, %rd2438, %rd2436;
	add.s64 	%rd2440, %rd2351, %rd1850;
	add.s64 	%rd2441, %rd2440, %rd2434;
	add.s64 	%rd2442, %rd2441, %rd2439;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1669,%dummy}, %rd2429;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1670}, %rd2429;
	}
	shf.r.wrap.b32 	%r1671, %r1670, %r1669, 19;
	shf.r.wrap.b32 	%r1672, %r1669, %r1670, 19;
	mov.b64 	%rd2443, {%r1672, %r1671};
	shf.l.wrap.b32 	%r1673, %r1669, %r1670, 3;
	shf.l.wrap.b32 	%r1674, %r1670, %r1669, 3;
	mov.b64 	%rd2444, {%r1674, %r1673};
	shr.u64 	%rd2445, %rd2429, 6;
	xor.b64  	%rd2446, %rd2443, %rd2445;
	xor.b64  	%rd2447, %rd2446, %rd2444;
	shf.r.wrap.b32 	%r1675, %r1540, %r1539, 1;
	shf.r.wrap.b32 	%r1676, %r1539, %r1540, 1;
	mov.b64 	%rd2448, {%r1676, %r1675};
	shf.r.wrap.b32 	%r1677, %r1540, %r1539, 8;
	shf.r.wrap.b32 	%r1678, %r1539, %r1540, 8;
	mov.b64 	%rd2449, {%r1678, %r1677};
	shr.u64 	%rd2450, %rd2260, 7;
	xor.b64  	%rd2451, %rd2448, %rd2450;
	xor.b64  	%rd2452, %rd2451, %rd2449;
	add.s64 	%rd2453, %rd2364, %rd1863;
	add.s64 	%rd2454, %rd2453, %rd2447;
	add.s64 	%rd2455, %rd2454, %rd2452;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1679,%dummy}, %rd2236;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1680}, %rd2236;
	}
	shf.r.wrap.b32 	%r1681, %r1680, %r1679, 14;
	shf.r.wrap.b32 	%r1682, %r1679, %r1680, 14;
	mov.b64 	%rd2456, {%r1682, %r1681};
	shf.r.wrap.b32 	%r1683, %r1680, %r1679, 18;
	shf.r.wrap.b32 	%r1684, %r1679, %r1680, 18;
	mov.b64 	%rd2457, {%r1684, %r1683};
	xor.b64  	%rd2458, %rd2457, %rd2456;
	shf.l.wrap.b32 	%r1685, %r1679, %r1680, 23;
	shf.l.wrap.b32 	%r1686, %r1680, %r1679, 23;
	mov.b64 	%rd2459, {%r1686, %r1685};
	xor.b64  	%rd2460, %rd2458, %rd2459;
	xor.b64  	%rd2461, %rd2212, %rd2188;
	and.b64  	%rd2462, %rd2461, %rd2236;
	xor.b64  	%rd2463, %rd2462, %rd2188;
	add.s64 	%rd2464, %rd2463, %rd2164;
	add.s64 	%rd2465, %rd2464, %rd2260;
	add.s64 	%rd2466, %rd2465, %rd83;
	add.s64 	%rd2467, %rd2466, %rd2460;
	add.s64 	%rd2468, %rd2467, %rd2175;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1687,%dummy}, %rd2247;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1688}, %rd2247;
	}
	shf.r.wrap.b32 	%r1689, %r1688, %r1687, 28;
	shf.r.wrap.b32 	%r1690, %r1687, %r1688, 28;
	mov.b64 	%rd2469, {%r1690, %r1689};
	shf.l.wrap.b32 	%r1691, %r1687, %r1688, 30;
	shf.l.wrap.b32 	%r1692, %r1688, %r1687, 30;
	mov.b64 	%rd2470, {%r1692, %r1691};
	xor.b64  	%rd2471, %rd2470, %rd2469;
	shf.l.wrap.b32 	%r1693, %r1687, %r1688, 25;
	shf.l.wrap.b32 	%r1694, %r1688, %r1687, 25;
	mov.b64 	%rd2472, {%r1694, %r1693};
	xor.b64  	%rd2473, %rd2471, %rd2472;
	xor.b64  	%rd2474, %rd2247, %rd2199;
	xor.b64  	%rd2475, %rd2247, %rd2223;
	and.b64  	%rd2476, %rd2475, %rd2474;
	xor.b64  	%rd2477, %rd2476, %rd2247;
	add.s64 	%rd2478, %rd2467, %rd2477;
	add.s64 	%rd2479, %rd2478, %rd2473;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1695,%dummy}, %rd2468;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1696}, %rd2468;
	}
	shf.r.wrap.b32 	%r1697, %r1696, %r1695, 14;
	shf.r.wrap.b32 	%r1698, %r1695, %r1696, 14;
	mov.b64 	%rd2480, {%r1698, %r1697};
	shf.r.wrap.b32 	%r1699, %r1696, %r1695, 18;
	shf.r.wrap.b32 	%r1700, %r1695, %r1696, 18;
	mov.b64 	%rd2481, {%r1700, %r1699};
	xor.b64  	%rd2482, %rd2481, %rd2480;
	shf.l.wrap.b32 	%r1701, %r1695, %r1696, 23;
	shf.l.wrap.b32 	%r1702, %r1696, %r1695, 23;
	mov.b64 	%rd2483, {%r1702, %r1701};
	xor.b64  	%rd2484, %rd2482, %rd2483;
	xor.b64  	%rd2485, %rd2236, %rd2212;
	and.b64  	%rd2486, %rd2468, %rd2485;
	xor.b64  	%rd2487, %rd2486, %rd2212;
	add.s64 	%rd2488, %rd2273, %rd2188;
	add.s64 	%rd2489, %rd2488, %rd84;
	add.s64 	%rd2490, %rd2489, %rd2487;
	add.s64 	%rd2491, %rd2490, %rd2484;
	add.s64 	%rd2492, %rd2491, %rd2199;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1703,%dummy}, %rd2479;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1704}, %rd2479;
	}
	shf.r.wrap.b32 	%r1705, %r1704, %r1703, 28;
	shf.r.wrap.b32 	%r1706, %r1703, %r1704, 28;
	mov.b64 	%rd2493, {%r1706, %r1705};
	shf.l.wrap.b32 	%r1707, %r1703, %r1704, 30;
	shf.l.wrap.b32 	%r1708, %r1704, %r1703, 30;
	mov.b64 	%rd2494, {%r1708, %r1707};
	xor.b64  	%rd2495, %rd2494, %rd2493;
	shf.l.wrap.b32 	%r1709, %r1703, %r1704, 25;
	shf.l.wrap.b32 	%r1710, %r1704, %r1703, 25;
	mov.b64 	%rd2496, {%r1710, %r1709};
	xor.b64  	%rd2497, %rd2495, %rd2496;
	xor.b64  	%rd2498, %rd2479, %rd2223;
	xor.b64  	%rd2499, %rd2479, %rd2247;
	and.b64  	%rd2500, %rd2499, %rd2498;
	xor.b64  	%rd2501, %rd2500, %rd2479;
	add.s64 	%rd2502, %rd2491, %rd2501;
	add.s64 	%rd2503, %rd2502, %rd2497;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1711,%dummy}, %rd2492;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1712}, %rd2492;
	}
	shf.r.wrap.b32 	%r1713, %r1712, %r1711, 14;
	shf.r.wrap.b32 	%r1714, %r1711, %r1712, 14;
	mov.b64 	%rd2504, {%r1714, %r1713};
	shf.r.wrap.b32 	%r1715, %r1712, %r1711, 18;
	shf.r.wrap.b32 	%r1716, %r1711, %r1712, 18;
	mov.b64 	%rd2505, {%r1716, %r1715};
	xor.b64  	%rd2506, %rd2505, %rd2504;
	shf.l.wrap.b32 	%r1717, %r1711, %r1712, 23;
	shf.l.wrap.b32 	%r1718, %r1712, %r1711, 23;
	mov.b64 	%rd2507, {%r1718, %r1717};
	xor.b64  	%rd2508, %rd2506, %rd2507;
	xor.b64  	%rd2509, %rd2468, %rd2236;
	and.b64  	%rd2510, %rd2492, %rd2509;
	xor.b64  	%rd2511, %rd2510, %rd2236;
	add.s64 	%rd2512, %rd2286, %rd2212;
	add.s64 	%rd2513, %rd2512, %rd85;
	add.s64 	%rd2514, %rd2513, %rd2511;
	add.s64 	%rd2515, %rd2514, %rd2508;
	add.s64 	%rd2516, %rd2515, %rd2223;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1719,%dummy}, %rd2503;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1720}, %rd2503;
	}
	shf.r.wrap.b32 	%r1721, %r1720, %r1719, 28;
	shf.r.wrap.b32 	%r1722, %r1719, %r1720, 28;
	mov.b64 	%rd2517, {%r1722, %r1721};
	shf.l.wrap.b32 	%r1723, %r1719, %r1720, 30;
	shf.l.wrap.b32 	%r1724, %r1720, %r1719, 30;
	mov.b64 	%rd2518, {%r1724, %r1723};
	xor.b64  	%rd2519, %rd2518, %rd2517;
	shf.l.wrap.b32 	%r1725, %r1719, %r1720, 25;
	shf.l.wrap.b32 	%r1726, %r1720, %r1719, 25;
	mov.b64 	%rd2520, {%r1726, %r1725};
	xor.b64  	%rd2521, %rd2519, %rd2520;
	xor.b64  	%rd2522, %rd2503, %rd2247;
	xor.b64  	%rd2523, %rd2503, %rd2479;
	and.b64  	%rd2524, %rd2523, %rd2522;
	xor.b64  	%rd2525, %rd2524, %rd2503;
	add.s64 	%rd2526, %rd2515, %rd2525;
	add.s64 	%rd2527, %rd2526, %rd2521;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1727,%dummy}, %rd2516;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1728}, %rd2516;
	}
	shf.r.wrap.b32 	%r1729, %r1728, %r1727, 14;
	shf.r.wrap.b32 	%r1730, %r1727, %r1728, 14;
	mov.b64 	%rd2528, {%r1730, %r1729};
	shf.r.wrap.b32 	%r1731, %r1728, %r1727, 18;
	shf.r.wrap.b32 	%r1732, %r1727, %r1728, 18;
	mov.b64 	%rd2529, {%r1732, %r1731};
	xor.b64  	%rd2530, %rd2529, %rd2528;
	shf.l.wrap.b32 	%r1733, %r1727, %r1728, 23;
	shf.l.wrap.b32 	%r1734, %r1728, %r1727, 23;
	mov.b64 	%rd2531, {%r1734, %r1733};
	xor.b64  	%rd2532, %rd2530, %rd2531;
	xor.b64  	%rd2533, %rd2492, %rd2468;
	and.b64  	%rd2534, %rd2516, %rd2533;
	xor.b64  	%rd2535, %rd2534, %rd2468;
	add.s64 	%rd2536, %rd2299, %rd2236;
	add.s64 	%rd2537, %rd2536, %rd86;
	add.s64 	%rd2538, %rd2537, %rd2535;
	add.s64 	%rd2539, %rd2538, %rd2532;
	add.s64 	%rd2540, %rd2539, %rd2247;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1735,%dummy}, %rd2527;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1736}, %rd2527;
	}
	shf.r.wrap.b32 	%r1737, %r1736, %r1735, 28;
	shf.r.wrap.b32 	%r1738, %r1735, %r1736, 28;
	mov.b64 	%rd2541, {%r1738, %r1737};
	shf.l.wrap.b32 	%r1739, %r1735, %r1736, 30;
	shf.l.wrap.b32 	%r1740, %r1736, %r1735, 30;
	mov.b64 	%rd2542, {%r1740, %r1739};
	xor.b64  	%rd2543, %rd2542, %rd2541;
	shf.l.wrap.b32 	%r1741, %r1735, %r1736, 25;
	shf.l.wrap.b32 	%r1742, %r1736, %r1735, 25;
	mov.b64 	%rd2544, {%r1742, %r1741};
	xor.b64  	%rd2545, %rd2543, %rd2544;
	xor.b64  	%rd2546, %rd2527, %rd2479;
	xor.b64  	%rd2547, %rd2527, %rd2503;
	and.b64  	%rd2548, %rd2547, %rd2546;
	xor.b64  	%rd2549, %rd2548, %rd2527;
	add.s64 	%rd2550, %rd2539, %rd2549;
	add.s64 	%rd2551, %rd2550, %rd2545;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1743,%dummy}, %rd2540;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1744}, %rd2540;
	}
	shf.r.wrap.b32 	%r1745, %r1744, %r1743, 14;
	shf.r.wrap.b32 	%r1746, %r1743, %r1744, 14;
	mov.b64 	%rd2552, {%r1746, %r1745};
	shf.r.wrap.b32 	%r1747, %r1744, %r1743, 18;
	shf.r.wrap.b32 	%r1748, %r1743, %r1744, 18;
	mov.b64 	%rd2553, {%r1748, %r1747};
	xor.b64  	%rd2554, %rd2553, %rd2552;
	shf.l.wrap.b32 	%r1749, %r1743, %r1744, 23;
	shf.l.wrap.b32 	%r1750, %r1744, %r1743, 23;
	mov.b64 	%rd2555, {%r1750, %r1749};
	xor.b64  	%rd2556, %rd2554, %rd2555;
	xor.b64  	%rd2557, %rd2516, %rd2492;
	and.b64  	%rd2558, %rd2540, %rd2557;
	xor.b64  	%rd2559, %rd2558, %rd2492;
	add.s64 	%rd2560, %rd2468, %rd2312;
	add.s64 	%rd2561, %rd2560, %rd87;
	add.s64 	%rd2562, %rd2561, %rd2559;
	add.s64 	%rd2563, %rd2562, %rd2556;
	add.s64 	%rd2564, %rd2563, %rd2479;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1751,%dummy}, %rd2551;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1752}, %rd2551;
	}
	shf.r.wrap.b32 	%r1753, %r1752, %r1751, 28;
	shf.r.wrap.b32 	%r1754, %r1751, %r1752, 28;
	mov.b64 	%rd2565, {%r1754, %r1753};
	shf.l.wrap.b32 	%r1755, %r1751, %r1752, 30;
	shf.l.wrap.b32 	%r1756, %r1752, %r1751, 30;
	mov.b64 	%rd2566, {%r1756, %r1755};
	xor.b64  	%rd2567, %rd2566, %rd2565;
	shf.l.wrap.b32 	%r1757, %r1751, %r1752, 25;
	shf.l.wrap.b32 	%r1758, %r1752, %r1751, 25;
	mov.b64 	%rd2568, {%r1758, %r1757};
	xor.b64  	%rd2569, %rd2567, %rd2568;
	xor.b64  	%rd2570, %rd2551, %rd2503;
	xor.b64  	%rd2571, %rd2551, %rd2527;
	and.b64  	%rd2572, %rd2571, %rd2570;
	xor.b64  	%rd2573, %rd2572, %rd2551;
	add.s64 	%rd2574, %rd2563, %rd2573;
	add.s64 	%rd2575, %rd2574, %rd2569;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1759,%dummy}, %rd2564;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1760}, %rd2564;
	}
	shf.r.wrap.b32 	%r1761, %r1760, %r1759, 14;
	shf.r.wrap.b32 	%r1762, %r1759, %r1760, 14;
	mov.b64 	%rd2576, {%r1762, %r1761};
	shf.r.wrap.b32 	%r1763, %r1760, %r1759, 18;
	shf.r.wrap.b32 	%r1764, %r1759, %r1760, 18;
	mov.b64 	%rd2577, {%r1764, %r1763};
	xor.b64  	%rd2578, %rd2577, %rd2576;
	shf.l.wrap.b32 	%r1765, %r1759, %r1760, 23;
	shf.l.wrap.b32 	%r1766, %r1760, %r1759, 23;
	mov.b64 	%rd2579, {%r1766, %r1765};
	xor.b64  	%rd2580, %rd2578, %rd2579;
	xor.b64  	%rd2581, %rd2540, %rd2516;
	and.b64  	%rd2582, %rd2564, %rd2581;
	xor.b64  	%rd2583, %rd2582, %rd2516;
	add.s64 	%rd2584, %rd2492, %rd2325;
	add.s64 	%rd2585, %rd2584, %rd88;
	add.s64 	%rd2586, %rd2585, %rd2583;
	add.s64 	%rd2587, %rd2586, %rd2580;
	add.s64 	%rd2588, %rd2587, %rd2503;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1767,%dummy}, %rd2575;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1768}, %rd2575;
	}
	shf.r.wrap.b32 	%r1769, %r1768, %r1767, 28;
	shf.r.wrap.b32 	%r1770, %r1767, %r1768, 28;
	mov.b64 	%rd2589, {%r1770, %r1769};
	shf.l.wrap.b32 	%r1771, %r1767, %r1768, 30;
	shf.l.wrap.b32 	%r1772, %r1768, %r1767, 30;
	mov.b64 	%rd2590, {%r1772, %r1771};
	xor.b64  	%rd2591, %rd2590, %rd2589;
	shf.l.wrap.b32 	%r1773, %r1767, %r1768, 25;
	shf.l.wrap.b32 	%r1774, %r1768, %r1767, 25;
	mov.b64 	%rd2592, {%r1774, %r1773};
	xor.b64  	%rd2593, %rd2591, %rd2592;
	xor.b64  	%rd2594, %rd2575, %rd2527;
	xor.b64  	%rd2595, %rd2575, %rd2551;
	and.b64  	%rd2596, %rd2595, %rd2594;
	xor.b64  	%rd2597, %rd2596, %rd2575;
	add.s64 	%rd2598, %rd2587, %rd2597;
	add.s64 	%rd2599, %rd2598, %rd2593;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1775,%dummy}, %rd2588;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1776}, %rd2588;
	}
	shf.r.wrap.b32 	%r1777, %r1776, %r1775, 14;
	shf.r.wrap.b32 	%r1778, %r1775, %r1776, 14;
	mov.b64 	%rd2600, {%r1778, %r1777};
	shf.r.wrap.b32 	%r1779, %r1776, %r1775, 18;
	shf.r.wrap.b32 	%r1780, %r1775, %r1776, 18;
	mov.b64 	%rd2601, {%r1780, %r1779};
	xor.b64  	%rd2602, %rd2601, %rd2600;
	shf.l.wrap.b32 	%r1781, %r1775, %r1776, 23;
	shf.l.wrap.b32 	%r1782, %r1776, %r1775, 23;
	mov.b64 	%rd2603, {%r1782, %r1781};
	xor.b64  	%rd2604, %rd2602, %rd2603;
	xor.b64  	%rd2605, %rd2564, %rd2540;
	and.b64  	%rd2606, %rd2588, %rd2605;
	xor.b64  	%rd2607, %rd2606, %rd2540;
	add.s64 	%rd2608, %rd2516, %rd2338;
	add.s64 	%rd2609, %rd2608, %rd89;
	add.s64 	%rd2610, %rd2609, %rd2607;
	add.s64 	%rd2611, %rd2610, %rd2604;
	add.s64 	%rd2612, %rd2611, %rd2527;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1783,%dummy}, %rd2599;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1784}, %rd2599;
	}
	shf.r.wrap.b32 	%r1785, %r1784, %r1783, 28;
	shf.r.wrap.b32 	%r1786, %r1783, %r1784, 28;
	mov.b64 	%rd2613, {%r1786, %r1785};
	shf.l.wrap.b32 	%r1787, %r1783, %r1784, 30;
	shf.l.wrap.b32 	%r1788, %r1784, %r1783, 30;
	mov.b64 	%rd2614, {%r1788, %r1787};
	xor.b64  	%rd2615, %rd2614, %rd2613;
	shf.l.wrap.b32 	%r1789, %r1783, %r1784, 25;
	shf.l.wrap.b32 	%r1790, %r1784, %r1783, 25;
	mov.b64 	%rd2616, {%r1790, %r1789};
	xor.b64  	%rd2617, %rd2615, %rd2616;
	xor.b64  	%rd2618, %rd2599, %rd2551;
	xor.b64  	%rd2619, %rd2599, %rd2575;
	and.b64  	%rd2620, %rd2619, %rd2618;
	xor.b64  	%rd2621, %rd2620, %rd2599;
	add.s64 	%rd2622, %rd2611, %rd2621;
	add.s64 	%rd2623, %rd2622, %rd2617;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1791,%dummy}, %rd2612;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1792}, %rd2612;
	}
	shf.r.wrap.b32 	%r1793, %r1792, %r1791, 14;
	shf.r.wrap.b32 	%r1794, %r1791, %r1792, 14;
	mov.b64 	%rd2624, {%r1794, %r1793};
	shf.r.wrap.b32 	%r1795, %r1792, %r1791, 18;
	shf.r.wrap.b32 	%r1796, %r1791, %r1792, 18;
	mov.b64 	%rd2625, {%r1796, %r1795};
	xor.b64  	%rd2626, %rd2625, %rd2624;
	shf.l.wrap.b32 	%r1797, %r1791, %r1792, 23;
	shf.l.wrap.b32 	%r1798, %r1792, %r1791, 23;
	mov.b64 	%rd2627, {%r1798, %r1797};
	xor.b64  	%rd2628, %rd2626, %rd2627;
	xor.b64  	%rd2629, %rd2588, %rd2564;
	and.b64  	%rd2630, %rd2612, %rd2629;
	xor.b64  	%rd2631, %rd2630, %rd2564;
	add.s64 	%rd2632, %rd2540, %rd2351;
	add.s64 	%rd2633, %rd2632, %rd90;
	add.s64 	%rd2634, %rd2633, %rd2631;
	add.s64 	%rd2635, %rd2634, %rd2628;
	add.s64 	%rd2636, %rd2635, %rd2551;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1799,%dummy}, %rd2623;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1800}, %rd2623;
	}
	shf.r.wrap.b32 	%r1801, %r1800, %r1799, 28;
	shf.r.wrap.b32 	%r1802, %r1799, %r1800, 28;
	mov.b64 	%rd2637, {%r1802, %r1801};
	shf.l.wrap.b32 	%r1803, %r1799, %r1800, 30;
	shf.l.wrap.b32 	%r1804, %r1800, %r1799, 30;
	mov.b64 	%rd2638, {%r1804, %r1803};
	xor.b64  	%rd2639, %rd2638, %rd2637;
	shf.l.wrap.b32 	%r1805, %r1799, %r1800, 25;
	shf.l.wrap.b32 	%r1806, %r1800, %r1799, 25;
	mov.b64 	%rd2640, {%r1806, %r1805};
	xor.b64  	%rd2641, %rd2639, %rd2640;
	xor.b64  	%rd2642, %rd2623, %rd2575;
	xor.b64  	%rd2643, %rd2623, %rd2599;
	and.b64  	%rd2644, %rd2643, %rd2642;
	xor.b64  	%rd2645, %rd2644, %rd2623;
	add.s64 	%rd2646, %rd2635, %rd2645;
	add.s64 	%rd2647, %rd2646, %rd2641;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1807,%dummy}, %rd2636;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1808}, %rd2636;
	}
	shf.r.wrap.b32 	%r1809, %r1808, %r1807, 14;
	shf.r.wrap.b32 	%r1810, %r1807, %r1808, 14;
	mov.b64 	%rd2648, {%r1810, %r1809};
	shf.r.wrap.b32 	%r1811, %r1808, %r1807, 18;
	shf.r.wrap.b32 	%r1812, %r1807, %r1808, 18;
	mov.b64 	%rd2649, {%r1812, %r1811};
	xor.b64  	%rd2650, %rd2649, %rd2648;
	shf.l.wrap.b32 	%r1813, %r1807, %r1808, 23;
	shf.l.wrap.b32 	%r1814, %r1808, %r1807, 23;
	mov.b64 	%rd2651, {%r1814, %r1813};
	xor.b64  	%rd2652, %rd2650, %rd2651;
	xor.b64  	%rd2653, %rd2612, %rd2588;
	and.b64  	%rd2654, %rd2636, %rd2653;
	xor.b64  	%rd2655, %rd2654, %rd2588;
	add.s64 	%rd2656, %rd2564, %rd2364;
	add.s64 	%rd2657, %rd2656, %rd91;
	add.s64 	%rd2658, %rd2657, %rd2655;
	add.s64 	%rd2659, %rd2658, %rd2652;
	add.s64 	%rd2660, %rd2659, %rd2575;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1815,%dummy}, %rd2647;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1816}, %rd2647;
	}
	shf.r.wrap.b32 	%r1817, %r1816, %r1815, 28;
	shf.r.wrap.b32 	%r1818, %r1815, %r1816, 28;
	mov.b64 	%rd2661, {%r1818, %r1817};
	shf.l.wrap.b32 	%r1819, %r1815, %r1816, 30;
	shf.l.wrap.b32 	%r1820, %r1816, %r1815, 30;
	mov.b64 	%rd2662, {%r1820, %r1819};
	xor.b64  	%rd2663, %rd2662, %rd2661;
	shf.l.wrap.b32 	%r1821, %r1815, %r1816, 25;
	shf.l.wrap.b32 	%r1822, %r1816, %r1815, 25;
	mov.b64 	%rd2664, {%r1822, %r1821};
	xor.b64  	%rd2665, %rd2663, %rd2664;
	xor.b64  	%rd2666, %rd2647, %rd2599;
	xor.b64  	%rd2667, %rd2647, %rd2623;
	and.b64  	%rd2668, %rd2667, %rd2666;
	xor.b64  	%rd2669, %rd2668, %rd2647;
	add.s64 	%rd2670, %rd2659, %rd2669;
	add.s64 	%rd2671, %rd2670, %rd2665;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1823,%dummy}, %rd2660;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1824}, %rd2660;
	}
	shf.r.wrap.b32 	%r1825, %r1824, %r1823, 14;
	shf.r.wrap.b32 	%r1826, %r1823, %r1824, 14;
	mov.b64 	%rd2672, {%r1826, %r1825};
	shf.r.wrap.b32 	%r1827, %r1824, %r1823, 18;
	shf.r.wrap.b32 	%r1828, %r1823, %r1824, 18;
	mov.b64 	%rd2673, {%r1828, %r1827};
	xor.b64  	%rd2674, %rd2673, %rd2672;
	shf.l.wrap.b32 	%r1829, %r1823, %r1824, 23;
	shf.l.wrap.b32 	%r1830, %r1824, %r1823, 23;
	mov.b64 	%rd2675, {%r1830, %r1829};
	xor.b64  	%rd2676, %rd2674, %rd2675;
	xor.b64  	%rd2677, %rd2636, %rd2612;
	and.b64  	%rd2678, %rd2660, %rd2677;
	xor.b64  	%rd2679, %rd2678, %rd2612;
	add.s64 	%rd2680, %rd2588, %rd2377;
	add.s64 	%rd2681, %rd2680, %rd92;
	add.s64 	%rd2682, %rd2681, %rd2679;
	add.s64 	%rd2683, %rd2682, %rd2676;
	add.s64 	%rd2684, %rd2683, %rd2599;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1831,%dummy}, %rd2671;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1832}, %rd2671;
	}
	shf.r.wrap.b32 	%r1833, %r1832, %r1831, 28;
	shf.r.wrap.b32 	%r1834, %r1831, %r1832, 28;
	mov.b64 	%rd2685, {%r1834, %r1833};
	shf.l.wrap.b32 	%r1835, %r1831, %r1832, 30;
	shf.l.wrap.b32 	%r1836, %r1832, %r1831, 30;
	mov.b64 	%rd2686, {%r1836, %r1835};
	xor.b64  	%rd2687, %rd2686, %rd2685;
	shf.l.wrap.b32 	%r1837, %r1831, %r1832, 25;
	shf.l.wrap.b32 	%r1838, %r1832, %r1831, 25;
	mov.b64 	%rd2688, {%r1838, %r1837};
	xor.b64  	%rd2689, %rd2687, %rd2688;
	xor.b64  	%rd2690, %rd2671, %rd2623;
	xor.b64  	%rd2691, %rd2671, %rd2647;
	and.b64  	%rd2692, %rd2691, %rd2690;
	xor.b64  	%rd2693, %rd2692, %rd2671;
	add.s64 	%rd2694, %rd2683, %rd2693;
	add.s64 	%rd2695, %rd2694, %rd2689;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1839,%dummy}, %rd2684;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1840}, %rd2684;
	}
	shf.r.wrap.b32 	%r1841, %r1840, %r1839, 14;
	shf.r.wrap.b32 	%r1842, %r1839, %r1840, 14;
	mov.b64 	%rd2696, {%r1842, %r1841};
	shf.r.wrap.b32 	%r1843, %r1840, %r1839, 18;
	shf.r.wrap.b32 	%r1844, %r1839, %r1840, 18;
	mov.b64 	%rd2697, {%r1844, %r1843};
	xor.b64  	%rd2698, %rd2697, %rd2696;
	shf.l.wrap.b32 	%r1845, %r1839, %r1840, 23;
	shf.l.wrap.b32 	%r1846, %r1840, %r1839, 23;
	mov.b64 	%rd2699, {%r1846, %r1845};
	xor.b64  	%rd2700, %rd2698, %rd2699;
	xor.b64  	%rd2701, %rd2660, %rd2636;
	and.b64  	%rd2702, %rd2684, %rd2701;
	xor.b64  	%rd2703, %rd2702, %rd2636;
	add.s64 	%rd2704, %rd2612, %rd2390;
	add.s64 	%rd2705, %rd2704, %rd93;
	add.s64 	%rd2706, %rd2705, %rd2703;
	add.s64 	%rd2707, %rd2706, %rd2700;
	add.s64 	%rd2708, %rd2707, %rd2623;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1847,%dummy}, %rd2695;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1848}, %rd2695;
	}
	shf.r.wrap.b32 	%r1849, %r1848, %r1847, 28;
	shf.r.wrap.b32 	%r1850, %r1847, %r1848, 28;
	mov.b64 	%rd2709, {%r1850, %r1849};
	shf.l.wrap.b32 	%r1851, %r1847, %r1848, 30;
	shf.l.wrap.b32 	%r1852, %r1848, %r1847, 30;
	mov.b64 	%rd2710, {%r1852, %r1851};
	xor.b64  	%rd2711, %rd2710, %rd2709;
	shf.l.wrap.b32 	%r1853, %r1847, %r1848, 25;
	shf.l.wrap.b32 	%r1854, %r1848, %r1847, 25;
	mov.b64 	%rd2712, {%r1854, %r1853};
	xor.b64  	%rd2713, %rd2711, %rd2712;
	xor.b64  	%rd2714, %rd2695, %rd2647;
	xor.b64  	%rd2715, %rd2695, %rd2671;
	and.b64  	%rd2716, %rd2715, %rd2714;
	xor.b64  	%rd2717, %rd2716, %rd2695;
	add.s64 	%rd2718, %rd2707, %rd2717;
	add.s64 	%rd2719, %rd2718, %rd2713;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1855,%dummy}, %rd2708;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1856}, %rd2708;
	}
	shf.r.wrap.b32 	%r1857, %r1856, %r1855, 14;
	shf.r.wrap.b32 	%r1858, %r1855, %r1856, 14;
	mov.b64 	%rd2720, {%r1858, %r1857};
	shf.r.wrap.b32 	%r1859, %r1856, %r1855, 18;
	shf.r.wrap.b32 	%r1860, %r1855, %r1856, 18;
	mov.b64 	%rd2721, {%r1860, %r1859};
	xor.b64  	%rd2722, %rd2721, %rd2720;
	shf.l.wrap.b32 	%r1861, %r1855, %r1856, 23;
	shf.l.wrap.b32 	%r1862, %r1856, %r1855, 23;
	mov.b64 	%rd2723, {%r1862, %r1861};
	xor.b64  	%rd2724, %rd2722, %rd2723;
	xor.b64  	%rd2725, %rd2684, %rd2660;
	and.b64  	%rd2726, %rd2708, %rd2725;
	xor.b64  	%rd2727, %rd2726, %rd2660;
	add.s64 	%rd2728, %rd2636, %rd2403;
	add.s64 	%rd2729, %rd2728, %rd94;
	add.s64 	%rd2730, %rd2729, %rd2727;
	add.s64 	%rd2731, %rd2730, %rd2724;
	add.s64 	%rd2732, %rd2731, %rd2647;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1863,%dummy}, %rd2719;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1864}, %rd2719;
	}
	shf.r.wrap.b32 	%r1865, %r1864, %r1863, 28;
	shf.r.wrap.b32 	%r1866, %r1863, %r1864, 28;
	mov.b64 	%rd2733, {%r1866, %r1865};
	shf.l.wrap.b32 	%r1867, %r1863, %r1864, 30;
	shf.l.wrap.b32 	%r1868, %r1864, %r1863, 30;
	mov.b64 	%rd2734, {%r1868, %r1867};
	xor.b64  	%rd2735, %rd2734, %rd2733;
	shf.l.wrap.b32 	%r1869, %r1863, %r1864, 25;
	shf.l.wrap.b32 	%r1870, %r1864, %r1863, 25;
	mov.b64 	%rd2736, {%r1870, %r1869};
	xor.b64  	%rd2737, %rd2735, %rd2736;
	xor.b64  	%rd2738, %rd2719, %rd2671;
	xor.b64  	%rd2739, %rd2719, %rd2695;
	and.b64  	%rd2740, %rd2739, %rd2738;
	xor.b64  	%rd2741, %rd2740, %rd2719;
	add.s64 	%rd2742, %rd2731, %rd2741;
	add.s64 	%rd2743, %rd2742, %rd2737;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1871,%dummy}, %rd2732;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1872}, %rd2732;
	}
	shf.r.wrap.b32 	%r1873, %r1872, %r1871, 14;
	shf.r.wrap.b32 	%r1874, %r1871, %r1872, 14;
	mov.b64 	%rd2744, {%r1874, %r1873};
	shf.r.wrap.b32 	%r1875, %r1872, %r1871, 18;
	shf.r.wrap.b32 	%r1876, %r1871, %r1872, 18;
	mov.b64 	%rd2745, {%r1876, %r1875};
	xor.b64  	%rd2746, %rd2745, %rd2744;
	shf.l.wrap.b32 	%r1877, %r1871, %r1872, 23;
	shf.l.wrap.b32 	%r1878, %r1872, %r1871, 23;
	mov.b64 	%rd2747, {%r1878, %r1877};
	xor.b64  	%rd2748, %rd2746, %rd2747;
	xor.b64  	%rd2749, %rd2708, %rd2684;
	and.b64  	%rd2750, %rd2732, %rd2749;
	xor.b64  	%rd2751, %rd2750, %rd2684;
	add.s64 	%rd2752, %rd2660, %rd2416;
	add.s64 	%rd2753, %rd2752, %rd95;
	add.s64 	%rd2754, %rd2753, %rd2751;
	add.s64 	%rd2755, %rd2754, %rd2748;
	add.s64 	%rd2756, %rd2755, %rd2671;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1879,%dummy}, %rd2743;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1880}, %rd2743;
	}
	shf.r.wrap.b32 	%r1881, %r1880, %r1879, 28;
	shf.r.wrap.b32 	%r1882, %r1879, %r1880, 28;
	mov.b64 	%rd2757, {%r1882, %r1881};
	shf.l.wrap.b32 	%r1883, %r1879, %r1880, 30;
	shf.l.wrap.b32 	%r1884, %r1880, %r1879, 30;
	mov.b64 	%rd2758, {%r1884, %r1883};
	xor.b64  	%rd2759, %rd2758, %rd2757;
	shf.l.wrap.b32 	%r1885, %r1879, %r1880, 25;
	shf.l.wrap.b32 	%r1886, %r1880, %r1879, 25;
	mov.b64 	%rd2760, {%r1886, %r1885};
	xor.b64  	%rd2761, %rd2759, %rd2760;
	xor.b64  	%rd2762, %rd2743, %rd2695;
	xor.b64  	%rd2763, %rd2743, %rd2719;
	and.b64  	%rd2764, %rd2763, %rd2762;
	xor.b64  	%rd2765, %rd2764, %rd2743;
	add.s64 	%rd2766, %rd2755, %rd2765;
	add.s64 	%rd2767, %rd2766, %rd2761;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1887,%dummy}, %rd2756;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1888}, %rd2756;
	}
	shf.r.wrap.b32 	%r1889, %r1888, %r1887, 14;
	shf.r.wrap.b32 	%r1890, %r1887, %r1888, 14;
	mov.b64 	%rd2768, {%r1890, %r1889};
	shf.r.wrap.b32 	%r1891, %r1888, %r1887, 18;
	shf.r.wrap.b32 	%r1892, %r1887, %r1888, 18;
	mov.b64 	%rd2769, {%r1892, %r1891};
	xor.b64  	%rd2770, %rd2769, %rd2768;
	shf.l.wrap.b32 	%r1893, %r1887, %r1888, 23;
	shf.l.wrap.b32 	%r1894, %r1888, %r1887, 23;
	mov.b64 	%rd2771, {%r1894, %r1893};
	xor.b64  	%rd2772, %rd2770, %rd2771;
	xor.b64  	%rd2773, %rd2732, %rd2708;
	and.b64  	%rd2774, %rd2756, %rd2773;
	xor.b64  	%rd2775, %rd2774, %rd2708;
	add.s64 	%rd2776, %rd2684, %rd2429;
	add.s64 	%rd2777, %rd2776, %rd96;
	add.s64 	%rd2778, %rd2777, %rd2775;
	add.s64 	%rd2779, %rd2778, %rd2772;
	add.s64 	%rd2780, %rd2779, %rd2695;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1895,%dummy}, %rd2767;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1896}, %rd2767;
	}
	shf.r.wrap.b32 	%r1897, %r1896, %r1895, 28;
	shf.r.wrap.b32 	%r1898, %r1895, %r1896, 28;
	mov.b64 	%rd2781, {%r1898, %r1897};
	shf.l.wrap.b32 	%r1899, %r1895, %r1896, 30;
	shf.l.wrap.b32 	%r1900, %r1896, %r1895, 30;
	mov.b64 	%rd2782, {%r1900, %r1899};
	xor.b64  	%rd2783, %rd2782, %rd2781;
	shf.l.wrap.b32 	%r1901, %r1895, %r1896, 25;
	shf.l.wrap.b32 	%r1902, %r1896, %r1895, 25;
	mov.b64 	%rd2784, {%r1902, %r1901};
	xor.b64  	%rd2785, %rd2783, %rd2784;
	xor.b64  	%rd2786, %rd2767, %rd2719;
	xor.b64  	%rd2787, %rd2767, %rd2743;
	and.b64  	%rd2788, %rd2787, %rd2786;
	xor.b64  	%rd2789, %rd2788, %rd2767;
	add.s64 	%rd2790, %rd2779, %rd2789;
	add.s64 	%rd2791, %rd2790, %rd2785;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1903,%dummy}, %rd2780;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1904}, %rd2780;
	}
	shf.r.wrap.b32 	%r1905, %r1904, %r1903, 14;
	shf.r.wrap.b32 	%r1906, %r1903, %r1904, 14;
	mov.b64 	%rd2792, {%r1906, %r1905};
	shf.r.wrap.b32 	%r1907, %r1904, %r1903, 18;
	shf.r.wrap.b32 	%r1908, %r1903, %r1904, 18;
	mov.b64 	%rd2793, {%r1908, %r1907};
	xor.b64  	%rd2794, %rd2793, %rd2792;
	shf.l.wrap.b32 	%r1909, %r1903, %r1904, 23;
	shf.l.wrap.b32 	%r1910, %r1904, %r1903, 23;
	mov.b64 	%rd2795, {%r1910, %r1909};
	xor.b64  	%rd2796, %rd2794, %rd2795;
	xor.b64  	%rd2797, %rd2756, %rd2732;
	and.b64  	%rd2798, %rd2780, %rd2797;
	xor.b64  	%rd2799, %rd2798, %rd2732;
	add.s64 	%rd2800, %rd2708, %rd2442;
	add.s64 	%rd2801, %rd2800, %rd97;
	add.s64 	%rd2802, %rd2801, %rd2799;
	add.s64 	%rd2803, %rd2802, %rd2796;
	add.s64 	%rd2804, %rd2803, %rd2719;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1911,%dummy}, %rd2791;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1912}, %rd2791;
	}
	shf.r.wrap.b32 	%r1913, %r1912, %r1911, 28;
	shf.r.wrap.b32 	%r1914, %r1911, %r1912, 28;
	mov.b64 	%rd2805, {%r1914, %r1913};
	shf.l.wrap.b32 	%r1915, %r1911, %r1912, 30;
	shf.l.wrap.b32 	%r1916, %r1912, %r1911, 30;
	mov.b64 	%rd2806, {%r1916, %r1915};
	xor.b64  	%rd2807, %rd2806, %rd2805;
	shf.l.wrap.b32 	%r1917, %r1911, %r1912, 25;
	shf.l.wrap.b32 	%r1918, %r1912, %r1911, 25;
	mov.b64 	%rd2808, {%r1918, %r1917};
	xor.b64  	%rd2809, %rd2807, %rd2808;
	xor.b64  	%rd2810, %rd2791, %rd2743;
	xor.b64  	%rd2811, %rd2791, %rd2767;
	and.b64  	%rd2812, %rd2811, %rd2810;
	xor.b64  	%rd2813, %rd2812, %rd2791;
	add.s64 	%rd2814, %rd2803, %rd2813;
	add.s64 	%rd2815, %rd2814, %rd2809;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1919,%dummy}, %rd2804;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1920}, %rd2804;
	}
	shf.r.wrap.b32 	%r1921, %r1920, %r1919, 14;
	shf.r.wrap.b32 	%r1922, %r1919, %r1920, 14;
	mov.b64 	%rd2816, {%r1922, %r1921};
	shf.r.wrap.b32 	%r1923, %r1920, %r1919, 18;
	shf.r.wrap.b32 	%r1924, %r1919, %r1920, 18;
	mov.b64 	%rd2817, {%r1924, %r1923};
	xor.b64  	%rd2818, %rd2817, %rd2816;
	shf.l.wrap.b32 	%r1925, %r1919, %r1920, 23;
	shf.l.wrap.b32 	%r1926, %r1920, %r1919, 23;
	mov.b64 	%rd2819, {%r1926, %r1925};
	xor.b64  	%rd2820, %rd2818, %rd2819;
	xor.b64  	%rd2821, %rd2780, %rd2756;
	and.b64  	%rd2822, %rd2804, %rd2821;
	xor.b64  	%rd2823, %rd2822, %rd2756;
	add.s64 	%rd2824, %rd2732, %rd2455;
	add.s64 	%rd2825, %rd2824, %rd98;
	add.s64 	%rd2826, %rd2825, %rd2823;
	add.s64 	%rd2827, %rd2826, %rd2820;
	add.s64 	%rd2828, %rd2827, %rd2743;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1927,%dummy}, %rd2815;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1928}, %rd2815;
	}
	shf.r.wrap.b32 	%r1929, %r1928, %r1927, 28;
	shf.r.wrap.b32 	%r1930, %r1927, %r1928, 28;
	mov.b64 	%rd2829, {%r1930, %r1929};
	shf.l.wrap.b32 	%r1931, %r1927, %r1928, 30;
	shf.l.wrap.b32 	%r1932, %r1928, %r1927, 30;
	mov.b64 	%rd2830, {%r1932, %r1931};
	xor.b64  	%rd2831, %rd2830, %rd2829;
	shf.l.wrap.b32 	%r1933, %r1927, %r1928, 25;
	shf.l.wrap.b32 	%r1934, %r1928, %r1927, 25;
	mov.b64 	%rd2832, {%r1934, %r1933};
	xor.b64  	%rd2833, %rd2831, %rd2832;
	xor.b64  	%rd2834, %rd2815, %rd2767;
	xor.b64  	%rd2835, %rd2815, %rd2791;
	and.b64  	%rd2836, %rd2835, %rd2834;
	xor.b64  	%rd2837, %rd2836, %rd2815;
	add.s64 	%rd2838, %rd2827, %rd2837;
	add.s64 	%rd2839, %rd2838, %rd2833;
	add.s64 	%rd2855, %rd2756, 6620516959819538809;
	add.s64 	%rd2856, %rd2780, 2270897969802886507;
	add.s64 	%rd2857, %rd2804, -7276294671716946913;
	add.s64 	%rd2858, %rd2828, 5840696475078001361;
	add.s64 	%rd2859, %rd2767, -6534734903238641935;
	add.s64 	%rd2860, %rd2791, 4354685564936845355;
	add.s64 	%rd2861, %rd2815, -4942790177534073029;
	add.s64 	%rd2862, %rd2839, 7640891576956012808;
	add.s32 	%r1935, %r1935, 1;
	add.s32 	%r1936, %r1936, 1;
	setp.lt.u32	%p3, %r1936, %r7;
	@%p3 bra 	BB5_3;

BB5_4:
	add.s64 	%rd2846, %rd1, 56;
	add.s64 	%rd2845, %rd1, 48;
	add.s64 	%rd2844, %rd1, 40;
	add.s64 	%rd2843, %rd1, 32;
	add.s64 	%rd2842, %rd1, 24;
	add.s64 	%rd2841, %rd1, 16;
	add.s64 	%rd2840, %rd1, 8;
	st.global.u64 	[%rd1], %rd2862;
	st.global.u64 	[%rd2840], %rd2861;
	st.global.u64 	[%rd2841], %rd2860;
	st.global.u64 	[%rd2842], %rd2859;
	st.global.u64 	[%rd2843], %rd2858;
	st.global.u64 	[%rd2844], %rd2857;
	st.global.u64 	[%rd2845], %rd2856;
	st.global.u64 	[%rd2846], %rd2855;

BB5_5:
	ret;
}

	// .globl	m09600_comp
.entry m09600_comp(
	.param .u64 .ptr .global .align 4 m09600_comp_param_0,
	.param .u64 .ptr .global .align 4 m09600_comp_param_1,
	.param .u64 .ptr .global .align 4 m09600_comp_param_2,
	.param .u64 .ptr .global .align 4 m09600_comp_param_3,
	.param .u64 .ptr .global .align 8 m09600_comp_param_4,
	.param .u64 .ptr .global .align 1 m09600_comp_param_5,
	.param .u64 .ptr .global .align 4 m09600_comp_param_6,
	.param .u64 .ptr .global .align 4 m09600_comp_param_7,
	.param .u64 .ptr .global .align 4 m09600_comp_param_8,
	.param .u64 .ptr .global .align 4 m09600_comp_param_9,
	.param .u64 .ptr .global .align 4 m09600_comp_param_10,
	.param .u64 .ptr .global .align 4 m09600_comp_param_11,
	.param .u64 .ptr .global .align 4 m09600_comp_param_12,
	.param .u64 .ptr .global .align 4 m09600_comp_param_13,
	.param .u64 .ptr .global .align 4 m09600_comp_param_14,
	.param .u64 .ptr .global .align 4 m09600_comp_param_15,
	.param .u64 .ptr .global .align 4 m09600_comp_param_16,
	.param .u64 .ptr .global .align 4 m09600_comp_param_17,
	.param .u64 .ptr .global .align 4 m09600_comp_param_18,
	.param .u64 .ptr .global .align 4 m09600_comp_param_19,
	.param .u64 .ptr .global .align 4 m09600_comp_param_20,
	.param .u64 .ptr .global .align 4 m09600_comp_param_21,
	.param .u64 .ptr .global .align 4 m09600_comp_param_22,
	.param .u64 .ptr .global .align 4 m09600_comp_param_23,
	.param .u32 m09600_comp_param_24,
	.param .u32 m09600_comp_param_25,
	.param .u32 m09600_comp_param_26,
	.param .u32 m09600_comp_param_27,
	.param .u32 m09600_comp_param_28,
	.param .u32 m09600_comp_param_29,
	.param .u32 m09600_comp_param_30,
	.param .u32 m09600_comp_param_31,
	.param .u32 m09600_comp_param_32,
	.param .u32 m09600_comp_param_33,
	.param .u64 m09600_comp_param_34
)
{
	.local .align 16 .b8 	__local_depot6[576];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<414>;
	.reg .b16 	%rs<33>;
	.reg .b32 	%r<10710>;
	.reg .b64 	%rd<13039>;
	// demoted variable
	.shared .align 4 .b8 m09600_comp$s_td0[1024];
	// demoted variable
	.shared .align 4 .b8 m09600_comp$s_td1[1024];
	// demoted variable
	.shared .align 4 .b8 m09600_comp$s_td2[1024];
	// demoted variable
	.shared .align 4 .b8 m09600_comp$s_td3[1024];
	// demoted variable
	.shared .align 4 .b8 m09600_comp$s_td4[1024];
	// demoted variable
	.shared .align 4 .b8 m09600_comp$s_te0[1024];
	// demoted variable
	.shared .align 4 .b8 m09600_comp$s_te1[1024];
	// demoted variable
	.shared .align 4 .b8 m09600_comp$s_te2[1024];
	// demoted variable
	.shared .align 4 .b8 m09600_comp$s_te3[1024];
	// demoted variable
	.shared .align 4 .b8 m09600_comp$s_te4[1024];

	mov.u64 	%SPL, __local_depot6;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd375, [m09600_comp_param_4];
	ld.param.u64 	%rd390, [m09600_comp_param_34];
	add.u64 	%rd391, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd391;
	add.u64 	%rd392, %SP, 16;
	cvta.to.local.u64 	%rd2, %rd392;
	add.u64 	%rd393, %SP, 32;
	cvta.to.local.u64 	%rd3, %rd393;
	add.u64 	%rd394, %SP, 48;
	cvta.to.local.u64 	%rd4, %rd394;
	add.u64 	%rd395, %SP, 64;
	cvta.to.local.u64 	%rd5, %rd395;
	add.u64 	%rd396, %SP, 80;
	cvta.to.local.u64 	%rd6, %rd396;
	add.u64 	%rd397, %SP, 96;
	cvta.to.local.u64 	%rd7, %rd397;
	add.u64 	%rd398, %SP, 112;
	cvta.to.local.u64 	%rd8, %rd398;
	add.u64 	%rd399, %SP, 128;
	cvta.to.local.u64 	%rd9, %rd399;
	add.u64 	%rd400, %SP, 336;
	cvta.to.local.u64 	%rd13038, %rd400;
	mov.u32 	%r386, %ctaid.x;
	mov.u32 	%r1, %ntid.x;
	mov.b32	%r387, %envreg3;
	mad.lo.s32 	%r388, %r386, %r1, %r387;
	mov.u32 	%r2, %tid.x;
	add.s32 	%r3, %r388, %r2;
	cvt.s64.s32	%rd11, %r3;
	setp.gt.u32	%p1, %r2, 255;
	@%p1 bra 	BB6_3;

	cvt.s64.s32	%rd12941, %r2;
	cvt.s64.s32	%rd13, %r1;

BB6_2:
	and.b64  	%rd401, %rd12941, 4294967295;
	shl.b64 	%rd402, %rd401, 2;
	mov.u64 	%rd403, td0;
	add.s64 	%rd404, %rd403, %rd402;
	ld.const.u32 	%r389, [%rd404];
	mov.u64 	%rd405, m09600_comp$s_td0;
	add.s64 	%rd406, %rd405, %rd402;
	st.shared.u32 	[%rd406], %r389;
	mov.u64 	%rd407, td1;
	add.s64 	%rd408, %rd407, %rd402;
	ld.const.u32 	%r390, [%rd408];
	mov.u64 	%rd409, m09600_comp$s_td1;
	add.s64 	%rd410, %rd409, %rd402;
	st.shared.u32 	[%rd410], %r390;
	mov.u64 	%rd411, td2;
	add.s64 	%rd412, %rd411, %rd402;
	ld.const.u32 	%r391, [%rd412];
	mov.u64 	%rd413, m09600_comp$s_td2;
	add.s64 	%rd414, %rd413, %rd402;
	st.shared.u32 	[%rd414], %r391;
	mov.u64 	%rd415, td3;
	add.s64 	%rd416, %rd415, %rd402;
	ld.const.u32 	%r392, [%rd416];
	mov.u64 	%rd417, m09600_comp$s_td3;
	add.s64 	%rd418, %rd417, %rd402;
	st.shared.u32 	[%rd418], %r392;
	mov.u64 	%rd419, td4;
	add.s64 	%rd420, %rd419, %rd402;
	ld.const.u32 	%r393, [%rd420];
	mov.u64 	%rd421, m09600_comp$s_td4;
	add.s64 	%rd422, %rd421, %rd402;
	st.shared.u32 	[%rd422], %r393;
	mov.u64 	%rd423, te0;
	add.s64 	%rd424, %rd423, %rd402;
	ld.const.u32 	%r394, [%rd424];
	mov.u64 	%rd425, m09600_comp$s_te0;
	add.s64 	%rd426, %rd425, %rd402;
	st.shared.u32 	[%rd426], %r394;
	mov.u64 	%rd427, te1;
	add.s64 	%rd428, %rd427, %rd402;
	ld.const.u32 	%r395, [%rd428];
	mov.u64 	%rd429, m09600_comp$s_te1;
	add.s64 	%rd430, %rd429, %rd402;
	st.shared.u32 	[%rd430], %r395;
	mov.u64 	%rd431, te2;
	add.s64 	%rd432, %rd431, %rd402;
	ld.const.u32 	%r396, [%rd432];
	mov.u64 	%rd433, m09600_comp$s_te2;
	add.s64 	%rd434, %rd433, %rd402;
	st.shared.u32 	[%rd434], %r396;
	mov.u64 	%rd435, te3;
	add.s64 	%rd436, %rd435, %rd402;
	ld.const.u32 	%r397, [%rd436];
	mov.u64 	%rd437, m09600_comp$s_te3;
	add.s64 	%rd438, %rd437, %rd402;
	st.shared.u32 	[%rd438], %r397;
	mov.u64 	%rd439, te4;
	add.s64 	%rd440, %rd439, %rd402;
	ld.const.u32 	%r398, [%rd440];
	mov.u64 	%rd441, m09600_comp$s_te4;
	add.s64 	%rd442, %rd441, %rd402;
	st.shared.u32 	[%rd442], %r398;
	add.s64 	%rd12941, %rd401, %rd13;
	cvt.u32.u64	%r399, %rd12941;
	setp.lt.u32	%p2, %r399, 256;
	@%p2 bra 	BB6_2;

BB6_3:
	bar.sync 	0;
	setp.ge.u64	%p3, %rd11, %rd390;
	@%p3 bra 	BB6_683;

	mul.wide.s32 	%rd443, %r3, 64;
	add.s64 	%rd444, %rd375, %rd443;
	ld.global.u64 	%rd445, [%rd444+8];
	ld.global.u64 	%rd446, [%rd444+16];
	ld.global.u64 	%rd447, [%rd444+24];
	ld.global.u64 	%rd448, [%rd444+32];
	ld.global.u64 	%rd449, [%rd444+40];
	ld.global.u64 	%rd450, [%rd444+48];
	ld.global.u64 	%rd451, [%rd444+56];
	ld.global.u64 	%rd452, [%rd444];
	shr.u64 	%rd453, %rd452, 32;
	cvt.u32.u64	%r4, %rd453;
	cvt.u32.u64	%r5, %rd452;
	cvt.u32.u64	%r7, %rd445;
	shr.u64 	%rd454, %rd445, 32;
	cvt.u32.u64	%r6, %rd454;
	add.s64 	%rd16, %rd1, 4;
	st.local.v4.u32 	[%rd1], {%r4, %r5, %r6, %r7};
	shr.u64 	%rd455, %rd446, 32;
	cvt.u32.u64	%r8, %rd455;
	cvt.u32.u64	%r9, %rd446;
	cvt.u32.u64	%r11, %rd447;
	shr.u64 	%rd456, %rd447, 32;
	cvt.u32.u64	%r10, %rd456;
	add.s64 	%rd17, %rd2, 4;
	st.local.v4.u32 	[%rd2], {%r8, %r9, %r10, %r11};
	shr.u64 	%rd457, %rd448, 32;
	cvt.u32.u64	%r12, %rd457;
	cvt.u32.u64	%r13, %rd448;
	cvt.u32.u64	%r15, %rd449;
	shr.u64 	%rd458, %rd449, 32;
	cvt.u32.u64	%r14, %rd458;
	add.s64 	%rd18, %rd3, 4;
	st.local.v4.u32 	[%rd3], {%r12, %r13, %r14, %r15};
	shr.u64 	%rd459, %rd450, 32;
	cvt.u32.u64	%r16, %rd459;
	cvt.u32.u64	%r17, %rd450;
	cvt.u32.u64	%r19, %rd451;
	shr.u64 	%rd460, %rd451, 32;
	cvt.u32.u64	%r18, %rd460;
	add.s64 	%rd19, %rd4, 4;
	st.local.v4.u32 	[%rd4], {%r16, %r17, %r18, %r19};
	mov.u32 	%r529, 994811513;
	mov.u32 	%r530, -22556042;
	add.s64 	%rd20, %rd5, 4;
	mov.u32 	%r526, 0;
	st.local.v4.u32 	[%rd5], {%r530, %r529, %r526, %r526};
	add.s64 	%rd21, %rd6, 4;
	st.local.v4.u32 	[%rd6], {%r526, %r526, %r526, %r526};
	add.s64 	%rd22, %rd7, 4;
	st.local.v4.u32 	[%rd7], {%r526, %r526, %r526, %r526};
	add.s64 	%rd23, %rd8, 4;
	st.local.v4.u32 	[%rd8], {%r526, %r526, %r526, %r526};
	mov.u64 	%rd461, 7640891576956012808;
	st.local.u64 	[%rd9], %rd461;
	add.s64 	%rd24, %rd9, 8;
	mov.u64 	%rd462, -4942790177534073029;
	st.local.u64 	[%rd9+8], %rd462;
	mov.u64 	%rd463, 4354685564936845355;
	st.local.u64 	[%rd9+16], %rd463;
	mov.u64 	%rd464, -6534734903238641935;
	st.local.u64 	[%rd9+24], %rd464;
	mov.u64 	%rd465, 5840696475078001361;
	st.local.u64 	[%rd9+32], %rd465;
	mov.u64 	%rd466, -7276294671716946913;
	st.local.u64 	[%rd9+40], %rd466;
	mov.u64 	%rd467, 2270897969802886507;
	st.local.u64 	[%rd9+48], %rd467;
	mov.u64 	%rd468, 6620516959819538809;
	st.local.u64 	[%rd9+56], %rd468;
	add.s64 	%rd25, %rd9, 64;
	st.local.v2.u32 	[%rd9+64], {%r526, %r526};
	add.s64 	%rd26, %rd9, 72;
	st.local.v2.u32 	[%rd9+72], {%r526, %r526};
	add.s64 	%rd27, %rd9, 80;
	st.local.v2.u32 	[%rd9+80], {%r526, %r526};
	add.s64 	%rd28, %rd9, 88;
	st.local.v2.u32 	[%rd9+88], {%r526, %r526};
	add.s64 	%rd29, %rd9, 96;
	st.local.v2.u32 	[%rd9+96], {%r526, %r526};
	add.s64 	%rd30, %rd9, 104;
	st.local.v2.u32 	[%rd9+104], {%r526, %r526};
	add.s64 	%rd31, %rd9, 112;
	st.local.v2.u32 	[%rd9+112], {%r526, %r526};
	add.s64 	%rd32, %rd9, 120;
	st.local.v2.u32 	[%rd9+120], {%r526, %r526};
	add.s64 	%rd33, %rd9, 128;
	st.local.v2.u32 	[%rd9+128], {%r526, %r526};
	add.s64 	%rd34, %rd9, 136;
	st.local.v2.u32 	[%rd9+136], {%r526, %r526};
	add.s64 	%rd35, %rd9, 144;
	st.local.v2.u32 	[%rd9+144], {%r526, %r526};
	add.s64 	%rd36, %rd9, 152;
	st.local.v2.u32 	[%rd9+152], {%r526, %r526};
	add.s64 	%rd37, %rd9, 160;
	st.local.v2.u32 	[%rd9+160], {%r526, %r526};
	add.s64 	%rd38, %rd9, 168;
	st.local.v2.u32 	[%rd9+168], {%r526, %r526};
	add.s64 	%rd39, %rd9, 176;
	st.local.v2.u32 	[%rd9+176], {%r526, %r526};
	add.s64 	%rd40, %rd9, 184;
	st.local.v2.u32 	[%rd9+184], {%r526, %r526};
	mov.u32 	%r531, 72;
	st.local.u32 	[%rd9+192], %r531;
	mov.u32 	%r527, 12816;
	// inline asm
	prmt.b32 %r400, %r526, %r526, %r527;
	// inline asm
	st.local.u32 	[%rd8+12], %r400;
	ld.local.u32 	%r405, [%rd8+8];
	ld.local.u32 	%r406, [%rd8+4];
	// inline asm
	prmt.b32 %r404, %r405, %r406, %r527;
	// inline asm
	st.local.u32 	[%rd8+8], %r404;
	ld.local.v2.u32 	{%r532, %r533}, [%rd8];
	// inline asm
	prmt.b32 %r408, %r533, %r532, %r527;
	// inline asm
	st.local.u32 	[%rd8+4], %r408;
	ld.local.u32 	%r413, [%rd8];
	ld.local.u32 	%r414, [%rd7+12];
	// inline asm
	prmt.b32 %r412, %r413, %r414, %r527;
	// inline asm
	st.local.u32 	[%rd8], %r412;
	ld.local.v2.u32 	{%r534, %r535}, [%rd7+8];
	// inline asm
	prmt.b32 %r416, %r535, %r534, %r527;
	// inline asm
	st.local.u32 	[%rd7+12], %r416;
	ld.local.u32 	%r421, [%rd7+8];
	ld.local.u32 	%r422, [%rd7+4];
	// inline asm
	prmt.b32 %r420, %r421, %r422, %r527;
	// inline asm
	st.local.u32 	[%rd7+8], %r420;
	ld.local.v2.u32 	{%r536, %r537}, [%rd7];
	// inline asm
	prmt.b32 %r424, %r537, %r536, %r527;
	// inline asm
	st.local.u32 	[%rd7+4], %r424;
	ld.local.u32 	%r429, [%rd7];
	ld.local.u32 	%r430, [%rd6+12];
	// inline asm
	prmt.b32 %r428, %r429, %r430, %r527;
	// inline asm
	st.local.u32 	[%rd7], %r428;
	ld.local.v2.u32 	{%r538, %r539}, [%rd6+8];
	// inline asm
	prmt.b32 %r432, %r539, %r538, %r527;
	// inline asm
	st.local.u32 	[%rd6+12], %r432;
	ld.local.u32 	%r437, [%rd6+8];
	ld.local.u32 	%r438, [%rd6+4];
	// inline asm
	prmt.b32 %r436, %r437, %r438, %r527;
	// inline asm
	st.local.u32 	[%rd6+8], %r436;
	ld.local.v2.u32 	{%r540, %r541}, [%rd6];
	// inline asm
	prmt.b32 %r440, %r541, %r540, %r527;
	// inline asm
	st.local.u32 	[%rd6+4], %r440;
	ld.local.u32 	%r445, [%rd6];
	ld.local.u32 	%r446, [%rd5+12];
	// inline asm
	prmt.b32 %r444, %r445, %r446, %r527;
	// inline asm
	st.local.u32 	[%rd6], %r444;
	ld.local.v2.u32 	{%r542, %r543}, [%rd5+8];
	// inline asm
	prmt.b32 %r448, %r543, %r542, %r527;
	// inline asm
	st.local.u32 	[%rd5+12], %r448;
	ld.local.u32 	%r453, [%rd5+8];
	ld.local.u32 	%r454, [%rd5+4];
	// inline asm
	prmt.b32 %r452, %r453, %r454, %r527;
	// inline asm
	st.local.u32 	[%rd5+8], %r452;
	ld.local.v2.u32 	{%r544, %r545}, [%rd5];
	// inline asm
	prmt.b32 %r456, %r545, %r544, %r527;
	// inline asm
	st.local.u32 	[%rd5+4], %r456;
	ld.local.u32 	%r461, [%rd5];
	ld.local.u32 	%r462, [%rd4+12];
	// inline asm
	prmt.b32 %r460, %r461, %r462, %r527;
	// inline asm
	st.local.u32 	[%rd5], %r460;
	ld.local.v2.u32 	{%r546, %r547}, [%rd4+8];
	// inline asm
	prmt.b32 %r464, %r547, %r546, %r527;
	// inline asm
	st.local.u32 	[%rd4+12], %r464;
	ld.local.u32 	%r469, [%rd4+8];
	ld.local.u32 	%r470, [%rd4+4];
	// inline asm
	prmt.b32 %r468, %r469, %r470, %r527;
	// inline asm
	st.local.u32 	[%rd4+8], %r468;
	ld.local.v2.u32 	{%r548, %r549}, [%rd4];
	// inline asm
	prmt.b32 %r472, %r549, %r548, %r527;
	// inline asm
	st.local.u32 	[%rd4+4], %r472;
	ld.local.u32 	%r477, [%rd4];
	ld.local.u32 	%r478, [%rd3+12];
	// inline asm
	prmt.b32 %r476, %r477, %r478, %r527;
	// inline asm
	st.local.u32 	[%rd4], %r476;
	ld.local.v2.u32 	{%r550, %r551}, [%rd3+8];
	// inline asm
	prmt.b32 %r480, %r551, %r550, %r527;
	// inline asm
	st.local.u32 	[%rd3+12], %r480;
	ld.local.u32 	%r485, [%rd3+8];
	ld.local.u32 	%r486, [%rd3+4];
	// inline asm
	prmt.b32 %r484, %r485, %r486, %r527;
	// inline asm
	st.local.u32 	[%rd3+8], %r484;
	ld.local.v2.u32 	{%r552, %r553}, [%rd3];
	// inline asm
	prmt.b32 %r488, %r553, %r552, %r527;
	// inline asm
	st.local.u32 	[%rd3+4], %r488;
	ld.local.u32 	%r493, [%rd3];
	ld.local.u32 	%r494, [%rd2+12];
	// inline asm
	prmt.b32 %r492, %r493, %r494, %r527;
	// inline asm
	st.local.u32 	[%rd3], %r492;
	ld.local.v2.u32 	{%r554, %r555}, [%rd2+8];
	// inline asm
	prmt.b32 %r496, %r555, %r554, %r527;
	// inline asm
	st.local.u32 	[%rd2+12], %r496;
	ld.local.u32 	%r501, [%rd2+8];
	ld.local.u32 	%r502, [%rd2+4];
	// inline asm
	prmt.b32 %r500, %r501, %r502, %r527;
	// inline asm
	st.local.u32 	[%rd2+8], %r500;
	ld.local.v2.u32 	{%r556, %r557}, [%rd2];
	// inline asm
	prmt.b32 %r504, %r557, %r556, %r527;
	// inline asm
	st.local.u32 	[%rd2+4], %r504;
	ld.local.u32 	%r509, [%rd2];
	ld.local.u32 	%r510, [%rd1+12];
	// inline asm
	prmt.b32 %r508, %r509, %r510, %r527;
	// inline asm
	st.local.u32 	[%rd2], %r508;
	ld.local.v2.u32 	{%r558, %r559}, [%rd1+8];
	// inline asm
	prmt.b32 %r512, %r559, %r558, %r527;
	// inline asm
	st.local.u32 	[%rd1+12], %r512;
	ld.local.u32 	%r517, [%rd1+8];
	ld.local.u32 	%r518, [%rd1+4];
	// inline asm
	prmt.b32 %r516, %r517, %r518, %r527;
	// inline asm
	st.local.u32 	[%rd1+8], %r516;
	ld.local.v2.u32 	{%r560, %r561}, [%rd1];
	// inline asm
	prmt.b32 %r520, %r561, %r560, %r527;
	// inline asm
	st.local.u32 	[%rd1+4], %r520;
	ld.local.u32 	%r525, [%rd1];
	// inline asm
	prmt.b32 %r524, %r525, %r526, %r527;
	// inline asm
	st.local.u32 	[%rd1], %r524;
	ld.local.v2.u32 	{%r562, %r563}, [%rd9+64];
	or.b32  	%r10631, %r562, %r524;
	ld.local.v2.u32 	{%r565, %r566}, [%rd9+72];
	ld.local.v2.u32 	{%r567, %r568}, [%rd9+80];
	ld.local.v2.u32 	{%r569, %r570}, [%rd9+88];
	ld.local.v2.u32 	{%r571, %r572}, [%rd9+96];
	ld.local.v2.u32 	{%r573, %r574}, [%rd9+104];
	ld.local.v2.u32 	{%r575, %r576}, [%rd9+112];
	ld.local.v2.u32 	{%r577, %r578}, [%rd9+120];
	ld.local.v2.u32 	{%r579, %r580}, [%rd9+128];
	ld.local.v2.u32 	{%r581, %r582}, [%rd9+136];
	ld.local.v2.u32 	{%r583, %r584}, [%rd9+144];
	ld.local.v2.u32 	{%r585, %r586}, [%rd9+152];
	ld.local.v2.u32 	{%r587, %r588}, [%rd9+160];
	ld.local.v2.u32 	{%r589, %r590}, [%rd9+168];
	ld.local.v2.u32 	{%r591, %r592}, [%rd9+176];
	ld.local.v2.u32 	{%r593, %r594}, [%rd9+184];
	ld.local.u32 	%r52, [%rd9+192];
	st.local.u32 	[%rd9+64], %r10631;
	ld.local.u32 	%r596, [%rd1+4];
	or.b32  	%r10630, %r563, %r596;
	ld.local.v2.u32 	{%r597, %r598}, [%rd1+8];
	st.local.u32 	[%rd9+68], %r10630;
	or.b32  	%r10629, %r565, %r597;
	or.b32  	%r10628, %r566, %r598;
	st.local.v2.u32 	[%rd9+72], {%r10629, %r10628};
	ld.local.v4.u32 	{%r603, %r604, %r605, %r606}, [%rd2];
	or.b32  	%r10627, %r567, %r603;
	or.b32  	%r10626, %r568, %r604;
	st.local.v2.u32 	[%rd9+80], {%r10627, %r10626};
	or.b32  	%r10625, %r569, %r605;
	or.b32  	%r10624, %r570, %r606;
	st.local.v2.u32 	[%rd9+88], {%r10625, %r10624};
	ld.local.v4.u32 	{%r615, %r616, %r617, %r618}, [%rd3];
	or.b32  	%r10623, %r571, %r615;
	or.b32  	%r10622, %r572, %r616;
	st.local.v2.u32 	[%rd9+96], {%r10623, %r10622};
	or.b32  	%r10621, %r573, %r617;
	or.b32  	%r10620, %r574, %r618;
	st.local.v2.u32 	[%rd9+104], {%r10621, %r10620};
	ld.local.v4.u32 	{%r627, %r628, %r629, %r630}, [%rd4];
	or.b32  	%r10619, %r575, %r627;
	or.b32  	%r10618, %r576, %r628;
	st.local.v2.u32 	[%rd9+112], {%r10619, %r10618};
	or.b32  	%r10617, %r577, %r629;
	or.b32  	%r10616, %r578, %r630;
	st.local.v2.u32 	[%rd9+120], {%r10617, %r10616};
	ld.local.v4.u32 	{%r639, %r640, %r641, %r642}, [%rd5];
	or.b32  	%r10615, %r579, %r639;
	or.b32  	%r10614, %r580, %r640;
	st.local.v2.u32 	[%rd9+128], {%r10615, %r10614};
	or.b32  	%r10613, %r581, %r641;
	or.b32  	%r10612, %r582, %r642;
	st.local.v2.u32 	[%rd9+136], {%r10613, %r10612};
	ld.local.v4.u32 	{%r651, %r652, %r653, %r654}, [%rd6];
	or.b32  	%r10611, %r583, %r651;
	or.b32  	%r10610, %r584, %r652;
	st.local.v2.u32 	[%rd9+144], {%r10611, %r10610};
	or.b32  	%r10609, %r585, %r653;
	or.b32  	%r10608, %r586, %r654;
	st.local.v2.u32 	[%rd9+152], {%r10609, %r10608};
	ld.local.v4.u32 	{%r663, %r664, %r665, %r666}, [%rd7];
	or.b32  	%r10607, %r587, %r663;
	or.b32  	%r10606, %r588, %r664;
	st.local.v2.u32 	[%rd9+160], {%r10607, %r10606};
	or.b32  	%r10605, %r589, %r665;
	or.b32  	%r10604, %r590, %r666;
	st.local.v2.u32 	[%rd9+168], {%r10605, %r10604};
	ld.local.v4.u32 	{%r675, %r676, %r677, %r678}, [%rd8];
	or.b32  	%r10603, %r591, %r675;
	or.b32  	%r10602, %r592, %r676;
	st.local.v2.u32 	[%rd9+176], {%r10603, %r10602};
	or.b32  	%r10601, %r593, %r677;
	or.b32  	%r10600, %r594, %r678;
	st.local.v2.u32 	[%rd9+184], {%r10601, %r10600};
	and.b32  	%r53, %r52, 127;
	xor.b32  	%r528, %r53, 3;
	setp.gt.s32	%p4, %r528, 63;
	@%p4 bra 	BB6_132;

	setp.gt.s32	%p100, %r528, 31;
	@%p100 bra 	BB6_69;

	setp.gt.s32	%p148, %r528, 15;
	@%p148 bra 	BB6_38;

	setp.gt.s32	%p172, %r528, 7;
	@%p172 bra 	BB6_23;

	setp.gt.s32	%p184, %r528, 3;
	@%p184 bra 	BB6_16;

	setp.gt.s32	%p190, %r528, 1;
	@%p190 bra 	BB6_13;

	setp.eq.s32	%p193, %r528, 0;
	@%p193 bra 	BB6_322;
	bra.uni 	BB6_11;

BB6_322:
	or.b32  	%r10631, %r10631, 128;
	bra.uni 	BB6_323;

BB6_132:
	setp.gt.s32	%p5, %r528, 95;
	@%p5 bra 	BB6_196;

	setp.gt.s32	%p53, %r528, 79;
	@%p53 bra 	BB6_165;

	setp.gt.s32	%p77, %r528, 71;
	@%p77 bra 	BB6_150;

	setp.gt.s32	%p89, %r528, 67;
	@%p89 bra 	BB6_143;

	setp.gt.s32	%p95, %r528, 65;
	@%p95 bra 	BB6_140;

	setp.eq.s32	%p98, %r528, 64;
	@%p98 bra 	BB6_290;
	bra.uni 	BB6_138;

BB6_290:
	or.b32  	%r10615, %r10615, 128;
	st.local.u32 	[%rd24+120], %r10615;
	bra.uni 	BB6_324;

BB6_69:
	setp.gt.s32	%p101, %r528, 47;
	@%p101 bra 	BB6_101;

	setp.gt.s32	%p125, %r528, 39;
	@%p125 bra 	BB6_86;

	setp.gt.s32	%p137, %r528, 35;
	@%p137 bra 	BB6_79;

	setp.gt.s32	%p143, %r528, 33;
	@%p143 bra 	BB6_76;

	setp.eq.s32	%p146, %r528, 32;
	@%p146 bra 	BB6_306;
	bra.uni 	BB6_74;

BB6_306:
	or.b32  	%r10623, %r10623, 128;
	st.local.u32 	[%rd24+88], %r10623;
	bra.uni 	BB6_324;

BB6_196:
	setp.gt.s32	%p6, %r528, 111;
	@%p6 bra 	BB6_228;

	setp.gt.s32	%p30, %r528, 103;
	@%p30 bra 	BB6_213;

	setp.gt.s32	%p42, %r528, 99;
	@%p42 bra 	BB6_206;

	setp.gt.s32	%p48, %r528, 97;
	@%p48 bra 	BB6_203;

	setp.eq.s32	%p51, %r528, 96;
	@%p51 bra 	BB6_274;
	bra.uni 	BB6_201;

BB6_274:
	or.b32  	%r10607, %r10607, 128;
	st.local.u32 	[%rd24+152], %r10607;
	bra.uni 	BB6_324;

BB6_38:
	setp.gt.s32	%p149, %r528, 23;
	@%p149 bra 	BB6_54;

	setp.gt.s32	%p161, %r528, 19;
	@%p161 bra 	BB6_47;

	setp.gt.s32	%p167, %r528, 17;
	@%p167 bra 	BB6_44;

	setp.eq.s32	%p170, %r528, 16;
	@%p170 bra 	BB6_314;
	bra.uni 	BB6_42;

BB6_314:
	or.b32  	%r10627, %r10627, 128;
	st.local.u32 	[%rd24+72], %r10627;
	bra.uni 	BB6_324;

BB6_165:
	setp.gt.s32	%p54, %r528, 87;
	@%p54 bra 	BB6_181;

	setp.gt.s32	%p66, %r528, 83;
	@%p66 bra 	BB6_174;

	setp.gt.s32	%p72, %r528, 81;
	@%p72 bra 	BB6_171;

	setp.eq.s32	%p75, %r528, 80;
	@%p75 bra 	BB6_282;
	bra.uni 	BB6_169;

BB6_282:
	or.b32  	%r10611, %r10611, 128;
	st.local.u32 	[%rd24+136], %r10611;
	bra.uni 	BB6_324;

BB6_101:
	setp.gt.s32	%p102, %r528, 55;
	@%p102 bra 	BB6_117;

	setp.gt.s32	%p114, %r528, 51;
	@%p114 bra 	BB6_110;

	setp.gt.s32	%p120, %r528, 49;
	@%p120 bra 	BB6_107;

	setp.eq.s32	%p123, %r528, 48;
	@%p123 bra 	BB6_298;
	bra.uni 	BB6_105;

BB6_298:
	or.b32  	%r10619, %r10619, 128;
	st.local.u32 	[%rd24+104], %r10619;
	bra.uni 	BB6_324;

BB6_228:
	setp.gt.s32	%p7, %r528, 119;
	@%p7 bra 	BB6_244;

	setp.gt.s32	%p19, %r528, 115;
	@%p19 bra 	BB6_237;

	setp.gt.s32	%p25, %r528, 113;
	@%p25 bra 	BB6_234;

	setp.eq.s32	%p28, %r528, 112;
	@%p28 bra 	BB6_266;
	bra.uni 	BB6_232;

BB6_266:
	or.b32  	%r10603, %r10603, 128;
	st.local.u32 	[%rd24+168], %r10603;
	bra.uni 	BB6_324;

BB6_23:
	setp.gt.s32	%p173, %r528, 11;
	@%p173 bra 	BB6_31;

	setp.gt.s32	%p179, %r528, 9;
	@%p179 bra 	BB6_28;

	setp.eq.s32	%p182, %r528, 8;
	@%p182 bra 	BB6_318;
	bra.uni 	BB6_26;

BB6_318:
	or.b32  	%r10629, %r10629, 128;
	st.local.u32 	[%rd24+64], %r10629;
	bra.uni 	BB6_324;

BB6_150:
	setp.gt.s32	%p78, %r528, 75;
	@%p78 bra 	BB6_158;

	setp.gt.s32	%p84, %r528, 73;
	@%p84 bra 	BB6_155;

	setp.eq.s32	%p87, %r528, 72;
	@%p87 bra 	BB6_286;
	bra.uni 	BB6_153;

BB6_286:
	or.b32  	%r10613, %r10613, 128;
	st.local.u32 	[%rd24+128], %r10613;
	bra.uni 	BB6_324;

BB6_86:
	setp.gt.s32	%p126, %r528, 43;
	@%p126 bra 	BB6_94;

	setp.gt.s32	%p132, %r528, 41;
	@%p132 bra 	BB6_91;

	setp.eq.s32	%p135, %r528, 40;
	@%p135 bra 	BB6_302;
	bra.uni 	BB6_89;

BB6_302:
	or.b32  	%r10621, %r10621, 128;
	st.local.u32 	[%rd24+96], %r10621;
	bra.uni 	BB6_324;

BB6_213:
	setp.gt.s32	%p31, %r528, 107;
	@%p31 bra 	BB6_221;

	setp.gt.s32	%p37, %r528, 105;
	@%p37 bra 	BB6_218;

	setp.eq.s32	%p40, %r528, 104;
	@%p40 bra 	BB6_270;
	bra.uni 	BB6_216;

BB6_270:
	or.b32  	%r10605, %r10605, 128;
	st.local.u32 	[%rd24+160], %r10605;
	bra.uni 	BB6_324;

BB6_54:
	setp.gt.s32	%p150, %r528, 27;
	@%p150 bra 	BB6_62;

	setp.gt.s32	%p156, %r528, 25;
	@%p156 bra 	BB6_59;

	setp.eq.s32	%p159, %r528, 24;
	@%p159 bra 	BB6_310;
	bra.uni 	BB6_57;

BB6_310:
	or.b32  	%r10625, %r10625, 128;
	st.local.u32 	[%rd24+80], %r10625;
	bra.uni 	BB6_324;

BB6_181:
	setp.gt.s32	%p55, %r528, 91;
	@%p55 bra 	BB6_189;

	setp.gt.s32	%p61, %r528, 89;
	@%p61 bra 	BB6_186;

	setp.eq.s32	%p64, %r528, 88;
	@%p64 bra 	BB6_278;
	bra.uni 	BB6_184;

BB6_278:
	or.b32  	%r10609, %r10609, 128;
	st.local.u32 	[%rd24+144], %r10609;
	bra.uni 	BB6_324;

BB6_117:
	setp.gt.s32	%p103, %r528, 59;
	@%p103 bra 	BB6_125;

	setp.gt.s32	%p109, %r528, 57;
	@%p109 bra 	BB6_122;

	setp.eq.s32	%p112, %r528, 56;
	@%p112 bra 	BB6_294;
	bra.uni 	BB6_120;

BB6_294:
	or.b32  	%r10617, %r10617, 128;
	st.local.u32 	[%rd24+112], %r10617;
	bra.uni 	BB6_324;

BB6_244:
	setp.gt.s32	%p8, %r528, 123;
	@%p8 bra 	BB6_252;

	setp.gt.s32	%p14, %r528, 121;
	@%p14 bra 	BB6_249;

	setp.eq.s32	%p17, %r528, 120;
	@%p17 bra 	BB6_262;
	bra.uni 	BB6_247;

BB6_262:
	or.b32  	%r10601, %r10601, 128;
	st.local.u32 	[%rd24+176], %r10601;
	bra.uni 	BB6_324;

BB6_16:
	setp.gt.s32	%p185, %r528, 5;
	@%p185 bra 	BB6_20;

	setp.eq.s32	%p188, %r528, 4;
	@%p188 bra 	BB6_320;
	bra.uni 	BB6_18;

BB6_320:
	or.b32  	%r10630, %r10630, 128;
	st.local.u32 	[%rd25+4], %r10630;
	bra.uni 	BB6_324;

BB6_143:
	setp.gt.s32	%p90, %r528, 69;
	@%p90 bra 	BB6_147;

	setp.eq.s32	%p93, %r528, 68;
	@%p93 bra 	BB6_288;
	bra.uni 	BB6_145;

BB6_288:
	or.b32  	%r10614, %r10614, 128;
	st.local.u32 	[%rd33+4], %r10614;
	bra.uni 	BB6_324;

BB6_79:
	setp.gt.s32	%p138, %r528, 37;
	@%p138 bra 	BB6_83;

	setp.eq.s32	%p141, %r528, 36;
	@%p141 bra 	BB6_304;
	bra.uni 	BB6_81;

BB6_304:
	or.b32  	%r10622, %r10622, 128;
	st.local.u32 	[%rd29+4], %r10622;
	bra.uni 	BB6_324;

BB6_206:
	setp.gt.s32	%p43, %r528, 101;
	@%p43 bra 	BB6_210;

	setp.eq.s32	%p46, %r528, 100;
	@%p46 bra 	BB6_272;
	bra.uni 	BB6_208;

BB6_272:
	or.b32  	%r10606, %r10606, 128;
	st.local.u32 	[%rd37+4], %r10606;
	bra.uni 	BB6_324;

BB6_47:
	setp.gt.s32	%p162, %r528, 21;
	@%p162 bra 	BB6_51;

	setp.eq.s32	%p165, %r528, 20;
	@%p165 bra 	BB6_312;
	bra.uni 	BB6_49;

BB6_312:
	or.b32  	%r10626, %r10626, 128;
	st.local.u32 	[%rd27+4], %r10626;
	bra.uni 	BB6_324;

BB6_174:
	setp.gt.s32	%p67, %r528, 85;
	@%p67 bra 	BB6_178;

	setp.eq.s32	%p70, %r528, 84;
	@%p70 bra 	BB6_280;
	bra.uni 	BB6_176;

BB6_280:
	or.b32  	%r10610, %r10610, 128;
	st.local.u32 	[%rd35+4], %r10610;
	bra.uni 	BB6_324;

BB6_110:
	setp.gt.s32	%p115, %r528, 53;
	@%p115 bra 	BB6_114;

	setp.eq.s32	%p118, %r528, 52;
	@%p118 bra 	BB6_296;
	bra.uni 	BB6_112;

BB6_296:
	or.b32  	%r10618, %r10618, 128;
	st.local.u32 	[%rd31+4], %r10618;
	bra.uni 	BB6_324;

BB6_237:
	setp.gt.s32	%p20, %r528, 117;
	@%p20 bra 	BB6_241;

	setp.eq.s32	%p23, %r528, 116;
	@%p23 bra 	BB6_264;
	bra.uni 	BB6_239;

BB6_264:
	or.b32  	%r10602, %r10602, 128;
	st.local.u32 	[%rd39+4], %r10602;
	bra.uni 	BB6_324;

BB6_31:
	setp.gt.s32	%p174, %r528, 13;
	@%p174 bra 	BB6_35;

	setp.eq.s32	%p177, %r528, 12;
	@%p177 bra 	BB6_316;
	bra.uni 	BB6_33;

BB6_316:
	or.b32  	%r10628, %r10628, 128;
	st.local.u32 	[%rd26+4], %r10628;
	bra.uni 	BB6_324;

BB6_158:
	setp.gt.s32	%p79, %r528, 77;
	@%p79 bra 	BB6_162;

	setp.eq.s32	%p82, %r528, 76;
	@%p82 bra 	BB6_284;
	bra.uni 	BB6_160;

BB6_284:
	or.b32  	%r10612, %r10612, 128;
	st.local.u32 	[%rd34+4], %r10612;
	bra.uni 	BB6_324;

BB6_94:
	setp.gt.s32	%p127, %r528, 45;
	@%p127 bra 	BB6_98;

	setp.eq.s32	%p130, %r528, 44;
	@%p130 bra 	BB6_300;
	bra.uni 	BB6_96;

BB6_300:
	or.b32  	%r10620, %r10620, 128;
	st.local.u32 	[%rd30+4], %r10620;
	bra.uni 	BB6_324;

BB6_221:
	setp.gt.s32	%p32, %r528, 109;
	@%p32 bra 	BB6_225;

	setp.eq.s32	%p35, %r528, 108;
	@%p35 bra 	BB6_268;
	bra.uni 	BB6_223;

BB6_268:
	or.b32  	%r10604, %r10604, 128;
	st.local.u32 	[%rd38+4], %r10604;
	bra.uni 	BB6_324;

BB6_62:
	setp.gt.s32	%p151, %r528, 29;
	@%p151 bra 	BB6_66;

	setp.eq.s32	%p154, %r528, 28;
	@%p154 bra 	BB6_308;
	bra.uni 	BB6_64;

BB6_308:
	or.b32  	%r10624, %r10624, 128;
	st.local.u32 	[%rd28+4], %r10624;
	bra.uni 	BB6_324;

BB6_189:
	setp.gt.s32	%p56, %r528, 93;
	@%p56 bra 	BB6_193;

	setp.eq.s32	%p59, %r528, 92;
	@%p59 bra 	BB6_276;
	bra.uni 	BB6_191;

BB6_276:
	or.b32  	%r10608, %r10608, 128;
	st.local.u32 	[%rd36+4], %r10608;
	bra.uni 	BB6_324;

BB6_125:
	setp.gt.s32	%p104, %r528, 61;
	@%p104 bra 	BB6_129;

	setp.eq.s32	%p107, %r528, 60;
	@%p107 bra 	BB6_292;
	bra.uni 	BB6_127;

BB6_292:
	or.b32  	%r10616, %r10616, 128;
	st.local.u32 	[%rd32+4], %r10616;
	bra.uni 	BB6_324;

BB6_252:
	setp.gt.s32	%p9, %r528, 125;
	@%p9 bra 	BB6_256;

	setp.eq.s32	%p12, %r528, 124;
	@%p12 bra 	BB6_260;
	bra.uni 	BB6_254;

BB6_260:
	or.b32  	%r10600, %r10600, 128;
	st.local.u32 	[%rd40+4], %r10600;
	bra.uni 	BB6_324;

BB6_13:
	setp.eq.s32	%p191, %r528, 2;
	@%p191 bra 	BB6_321;
	bra.uni 	BB6_14;

BB6_321:
	or.b32  	%r10631, %r10631, 8388608;
	bra.uni 	BB6_323;

BB6_140:
	setp.eq.s32	%p96, %r528, 66;
	@%p96 bra 	BB6_289;
	bra.uni 	BB6_141;

BB6_289:
	or.b32  	%r10615, %r10615, 8388608;
	st.local.u32 	[%rd24+120], %r10615;
	bra.uni 	BB6_324;

BB6_76:
	setp.eq.s32	%p144, %r528, 34;
	@%p144 bra 	BB6_305;
	bra.uni 	BB6_77;

BB6_305:
	or.b32  	%r10623, %r10623, 8388608;
	st.local.u32 	[%rd24+88], %r10623;
	bra.uni 	BB6_324;

BB6_203:
	setp.eq.s32	%p49, %r528, 98;
	@%p49 bra 	BB6_273;
	bra.uni 	BB6_204;

BB6_273:
	or.b32  	%r10607, %r10607, 8388608;
	st.local.u32 	[%rd24+152], %r10607;
	bra.uni 	BB6_324;

BB6_44:
	setp.eq.s32	%p168, %r528, 18;
	@%p168 bra 	BB6_313;
	bra.uni 	BB6_45;

BB6_313:
	or.b32  	%r10627, %r10627, 8388608;
	st.local.u32 	[%rd24+72], %r10627;
	bra.uni 	BB6_324;

BB6_171:
	setp.eq.s32	%p73, %r528, 82;
	@%p73 bra 	BB6_281;
	bra.uni 	BB6_172;

BB6_281:
	or.b32  	%r10611, %r10611, 8388608;
	st.local.u32 	[%rd24+136], %r10611;
	bra.uni 	BB6_324;

BB6_107:
	setp.eq.s32	%p121, %r528, 50;
	@%p121 bra 	BB6_297;
	bra.uni 	BB6_108;

BB6_297:
	or.b32  	%r10619, %r10619, 8388608;
	st.local.u32 	[%rd24+104], %r10619;
	bra.uni 	BB6_324;

BB6_234:
	setp.eq.s32	%p26, %r528, 114;
	@%p26 bra 	BB6_265;
	bra.uni 	BB6_235;

BB6_265:
	or.b32  	%r10603, %r10603, 8388608;
	st.local.u32 	[%rd24+168], %r10603;
	bra.uni 	BB6_324;

BB6_28:
	setp.eq.s32	%p180, %r528, 10;
	@%p180 bra 	BB6_317;
	bra.uni 	BB6_29;

BB6_317:
	or.b32  	%r10629, %r10629, 8388608;
	st.local.u32 	[%rd24+64], %r10629;
	bra.uni 	BB6_324;

BB6_155:
	setp.eq.s32	%p85, %r528, 74;
	@%p85 bra 	BB6_285;
	bra.uni 	BB6_156;

BB6_285:
	or.b32  	%r10613, %r10613, 8388608;
	st.local.u32 	[%rd24+128], %r10613;
	bra.uni 	BB6_324;

BB6_91:
	setp.eq.s32	%p133, %r528, 42;
	@%p133 bra 	BB6_301;
	bra.uni 	BB6_92;

BB6_301:
	or.b32  	%r10621, %r10621, 8388608;
	st.local.u32 	[%rd24+96], %r10621;
	bra.uni 	BB6_324;

BB6_218:
	setp.eq.s32	%p38, %r528, 106;
	@%p38 bra 	BB6_269;
	bra.uni 	BB6_219;

BB6_269:
	or.b32  	%r10605, %r10605, 8388608;
	st.local.u32 	[%rd24+160], %r10605;
	bra.uni 	BB6_324;

BB6_59:
	setp.eq.s32	%p157, %r528, 26;
	@%p157 bra 	BB6_309;
	bra.uni 	BB6_60;

BB6_309:
	or.b32  	%r10625, %r10625, 8388608;
	st.local.u32 	[%rd24+80], %r10625;
	bra.uni 	BB6_324;

BB6_186:
	setp.eq.s32	%p62, %r528, 90;
	@%p62 bra 	BB6_277;
	bra.uni 	BB6_187;

BB6_277:
	or.b32  	%r10609, %r10609, 8388608;
	st.local.u32 	[%rd24+144], %r10609;
	bra.uni 	BB6_324;

BB6_122:
	setp.eq.s32	%p110, %r528, 58;
	@%p110 bra 	BB6_293;
	bra.uni 	BB6_123;

BB6_293:
	or.b32  	%r10617, %r10617, 8388608;
	st.local.u32 	[%rd24+112], %r10617;
	bra.uni 	BB6_324;

BB6_249:
	setp.eq.s32	%p15, %r528, 122;
	@%p15 bra 	BB6_261;
	bra.uni 	BB6_250;

BB6_261:
	or.b32  	%r10601, %r10601, 8388608;
	st.local.u32 	[%rd24+176], %r10601;
	bra.uni 	BB6_324;

BB6_20:
	setp.eq.s32	%p186, %r528, 6;
	@%p186 bra 	BB6_319;
	bra.uni 	BB6_21;

BB6_319:
	or.b32  	%r10630, %r10630, 8388608;
	st.local.u32 	[%rd25+4], %r10630;
	bra.uni 	BB6_324;

BB6_147:
	setp.eq.s32	%p91, %r528, 70;
	@%p91 bra 	BB6_287;
	bra.uni 	BB6_148;

BB6_287:
	or.b32  	%r10614, %r10614, 8388608;
	st.local.u32 	[%rd33+4], %r10614;
	bra.uni 	BB6_324;

BB6_83:
	setp.eq.s32	%p139, %r528, 38;
	@%p139 bra 	BB6_303;
	bra.uni 	BB6_84;

BB6_303:
	or.b32  	%r10622, %r10622, 8388608;
	st.local.u32 	[%rd29+4], %r10622;
	bra.uni 	BB6_324;

BB6_210:
	setp.eq.s32	%p44, %r528, 102;
	@%p44 bra 	BB6_271;
	bra.uni 	BB6_211;

BB6_271:
	or.b32  	%r10606, %r10606, 8388608;
	st.local.u32 	[%rd37+4], %r10606;
	bra.uni 	BB6_324;

BB6_51:
	setp.eq.s32	%p163, %r528, 22;
	@%p163 bra 	BB6_311;
	bra.uni 	BB6_52;

BB6_311:
	or.b32  	%r10626, %r10626, 8388608;
	st.local.u32 	[%rd27+4], %r10626;
	bra.uni 	BB6_324;

BB6_178:
	setp.eq.s32	%p68, %r528, 86;
	@%p68 bra 	BB6_279;
	bra.uni 	BB6_179;

BB6_279:
	or.b32  	%r10610, %r10610, 8388608;
	st.local.u32 	[%rd35+4], %r10610;
	bra.uni 	BB6_324;

BB6_114:
	setp.eq.s32	%p116, %r528, 54;
	@%p116 bra 	BB6_295;
	bra.uni 	BB6_115;

BB6_295:
	or.b32  	%r10618, %r10618, 8388608;
	st.local.u32 	[%rd31+4], %r10618;
	bra.uni 	BB6_324;

BB6_241:
	setp.eq.s32	%p21, %r528, 118;
	@%p21 bra 	BB6_263;
	bra.uni 	BB6_242;

BB6_263:
	or.b32  	%r10602, %r10602, 8388608;
	st.local.u32 	[%rd39+4], %r10602;
	bra.uni 	BB6_324;

BB6_35:
	setp.eq.s32	%p175, %r528, 14;
	@%p175 bra 	BB6_315;
	bra.uni 	BB6_36;

BB6_315:
	or.b32  	%r10628, %r10628, 8388608;
	st.local.u32 	[%rd26+4], %r10628;
	bra.uni 	BB6_324;

BB6_162:
	setp.eq.s32	%p80, %r528, 78;
	@%p80 bra 	BB6_283;
	bra.uni 	BB6_163;

BB6_283:
	or.b32  	%r10612, %r10612, 8388608;
	st.local.u32 	[%rd34+4], %r10612;
	bra.uni 	BB6_324;

BB6_98:
	setp.eq.s32	%p128, %r528, 46;
	@%p128 bra 	BB6_299;
	bra.uni 	BB6_99;

BB6_299:
	or.b32  	%r10620, %r10620, 8388608;
	st.local.u32 	[%rd30+4], %r10620;
	bra.uni 	BB6_324;

BB6_225:
	setp.eq.s32	%p33, %r528, 110;
	@%p33 bra 	BB6_267;
	bra.uni 	BB6_226;

BB6_267:
	or.b32  	%r10604, %r10604, 8388608;
	st.local.u32 	[%rd38+4], %r10604;
	bra.uni 	BB6_324;

BB6_66:
	setp.eq.s32	%p152, %r528, 30;
	@%p152 bra 	BB6_307;
	bra.uni 	BB6_67;

BB6_307:
	or.b32  	%r10624, %r10624, 8388608;
	st.local.u32 	[%rd28+4], %r10624;
	bra.uni 	BB6_324;

BB6_193:
	setp.eq.s32	%p57, %r528, 94;
	@%p57 bra 	BB6_275;
	bra.uni 	BB6_194;

BB6_275:
	or.b32  	%r10608, %r10608, 8388608;
	st.local.u32 	[%rd36+4], %r10608;
	bra.uni 	BB6_324;

BB6_129:
	setp.eq.s32	%p105, %r528, 62;
	@%p105 bra 	BB6_291;
	bra.uni 	BB6_130;

BB6_291:
	or.b32  	%r10616, %r10616, 8388608;
	st.local.u32 	[%rd32+4], %r10616;
	bra.uni 	BB6_324;

BB6_256:
	setp.eq.s32	%p10, %r528, 126;
	@%p10 bra 	BB6_259;
	bra.uni 	BB6_257;

BB6_259:
	or.b32  	%r10600, %r10600, 8388608;
	st.local.u32 	[%rd40+4], %r10600;
	bra.uni 	BB6_324;

BB6_11:
	setp.eq.s32	%p194, %r528, 1;
	@%p194 bra 	BB6_12;
	bra.uni 	BB6_324;

BB6_12:
	or.b32  	%r10631, %r10631, 32768;
	bra.uni 	BB6_323;

BB6_138:
	setp.eq.s32	%p99, %r528, 65;
	@%p99 bra 	BB6_139;
	bra.uni 	BB6_324;

BB6_139:
	or.b32  	%r10615, %r10615, 32768;
	st.local.u32 	[%rd24+120], %r10615;
	bra.uni 	BB6_324;

BB6_74:
	setp.eq.s32	%p147, %r528, 33;
	@%p147 bra 	BB6_75;
	bra.uni 	BB6_324;

BB6_75:
	or.b32  	%r10623, %r10623, 32768;
	st.local.u32 	[%rd24+88], %r10623;
	bra.uni 	BB6_324;

BB6_201:
	setp.eq.s32	%p52, %r528, 97;
	@%p52 bra 	BB6_202;
	bra.uni 	BB6_324;

BB6_202:
	or.b32  	%r10607, %r10607, 32768;
	st.local.u32 	[%rd24+152], %r10607;
	bra.uni 	BB6_324;

BB6_42:
	setp.eq.s32	%p171, %r528, 17;
	@%p171 bra 	BB6_43;
	bra.uni 	BB6_324;

BB6_43:
	or.b32  	%r10627, %r10627, 32768;
	st.local.u32 	[%rd24+72], %r10627;
	bra.uni 	BB6_324;

BB6_169:
	setp.eq.s32	%p76, %r528, 81;
	@%p76 bra 	BB6_170;
	bra.uni 	BB6_324;

BB6_170:
	or.b32  	%r10611, %r10611, 32768;
	st.local.u32 	[%rd24+136], %r10611;
	bra.uni 	BB6_324;

BB6_105:
	setp.eq.s32	%p124, %r528, 49;
	@%p124 bra 	BB6_106;
	bra.uni 	BB6_324;

BB6_106:
	or.b32  	%r10619, %r10619, 32768;
	st.local.u32 	[%rd24+104], %r10619;
	bra.uni 	BB6_324;

BB6_232:
	setp.eq.s32	%p29, %r528, 113;
	@%p29 bra 	BB6_233;
	bra.uni 	BB6_324;

BB6_233:
	or.b32  	%r10603, %r10603, 32768;
	st.local.u32 	[%rd24+168], %r10603;
	bra.uni 	BB6_324;

BB6_26:
	setp.eq.s32	%p183, %r528, 9;
	@%p183 bra 	BB6_27;
	bra.uni 	BB6_324;

BB6_27:
	or.b32  	%r10629, %r10629, 32768;
	st.local.u32 	[%rd24+64], %r10629;
	bra.uni 	BB6_324;

BB6_153:
	setp.eq.s32	%p88, %r528, 73;
	@%p88 bra 	BB6_154;
	bra.uni 	BB6_324;

BB6_154:
	or.b32  	%r10613, %r10613, 32768;
	st.local.u32 	[%rd24+128], %r10613;
	bra.uni 	BB6_324;

BB6_89:
	setp.eq.s32	%p136, %r528, 41;
	@%p136 bra 	BB6_90;
	bra.uni 	BB6_324;

BB6_90:
	or.b32  	%r10621, %r10621, 32768;
	st.local.u32 	[%rd24+96], %r10621;
	bra.uni 	BB6_324;

BB6_216:
	setp.eq.s32	%p41, %r528, 105;
	@%p41 bra 	BB6_217;
	bra.uni 	BB6_324;

BB6_217:
	or.b32  	%r10605, %r10605, 32768;
	st.local.u32 	[%rd24+160], %r10605;
	bra.uni 	BB6_324;

BB6_57:
	setp.eq.s32	%p160, %r528, 25;
	@%p160 bra 	BB6_58;
	bra.uni 	BB6_324;

BB6_58:
	or.b32  	%r10625, %r10625, 32768;
	st.local.u32 	[%rd24+80], %r10625;
	bra.uni 	BB6_324;

BB6_184:
	setp.eq.s32	%p65, %r528, 89;
	@%p65 bra 	BB6_185;
	bra.uni 	BB6_324;

BB6_185:
	or.b32  	%r10609, %r10609, 32768;
	st.local.u32 	[%rd24+144], %r10609;
	bra.uni 	BB6_324;

BB6_120:
	setp.eq.s32	%p113, %r528, 57;
	@%p113 bra 	BB6_121;
	bra.uni 	BB6_324;

BB6_121:
	or.b32  	%r10617, %r10617, 32768;
	st.local.u32 	[%rd24+112], %r10617;
	bra.uni 	BB6_324;

BB6_247:
	setp.eq.s32	%p18, %r528, 121;
	@%p18 bra 	BB6_248;
	bra.uni 	BB6_324;

BB6_248:
	or.b32  	%r10601, %r10601, 32768;
	st.local.u32 	[%rd24+176], %r10601;
	bra.uni 	BB6_324;

BB6_18:
	setp.eq.s32	%p189, %r528, 5;
	@%p189 bra 	BB6_19;
	bra.uni 	BB6_324;

BB6_19:
	or.b32  	%r10630, %r10630, 32768;
	st.local.u32 	[%rd25+4], %r10630;
	bra.uni 	BB6_324;

BB6_145:
	setp.eq.s32	%p94, %r528, 69;
	@%p94 bra 	BB6_146;
	bra.uni 	BB6_324;

BB6_146:
	or.b32  	%r10614, %r10614, 32768;
	st.local.u32 	[%rd33+4], %r10614;
	bra.uni 	BB6_324;

BB6_81:
	setp.eq.s32	%p142, %r528, 37;
	@%p142 bra 	BB6_82;
	bra.uni 	BB6_324;

BB6_82:
	or.b32  	%r10622, %r10622, 32768;
	st.local.u32 	[%rd29+4], %r10622;
	bra.uni 	BB6_324;

BB6_208:
	setp.eq.s32	%p47, %r528, 101;
	@%p47 bra 	BB6_209;
	bra.uni 	BB6_324;

BB6_209:
	or.b32  	%r10606, %r10606, 32768;
	st.local.u32 	[%rd37+4], %r10606;
	bra.uni 	BB6_324;

BB6_49:
	setp.eq.s32	%p166, %r528, 21;
	@%p166 bra 	BB6_50;
	bra.uni 	BB6_324;

BB6_50:
	or.b32  	%r10626, %r10626, 32768;
	st.local.u32 	[%rd27+4], %r10626;
	bra.uni 	BB6_324;

BB6_176:
	setp.eq.s32	%p71, %r528, 85;
	@%p71 bra 	BB6_177;
	bra.uni 	BB6_324;

BB6_177:
	or.b32  	%r10610, %r10610, 32768;
	st.local.u32 	[%rd35+4], %r10610;
	bra.uni 	BB6_324;

BB6_112:
	setp.eq.s32	%p119, %r528, 53;
	@%p119 bra 	BB6_113;
	bra.uni 	BB6_324;

BB6_113:
	or.b32  	%r10618, %r10618, 32768;
	st.local.u32 	[%rd31+4], %r10618;
	bra.uni 	BB6_324;

BB6_239:
	setp.eq.s32	%p24, %r528, 117;
	@%p24 bra 	BB6_240;
	bra.uni 	BB6_324;

BB6_240:
	or.b32  	%r10602, %r10602, 32768;
	st.local.u32 	[%rd39+4], %r10602;
	bra.uni 	BB6_324;

BB6_33:
	setp.eq.s32	%p178, %r528, 13;
	@%p178 bra 	BB6_34;
	bra.uni 	BB6_324;

BB6_34:
	or.b32  	%r10628, %r10628, 32768;
	st.local.u32 	[%rd26+4], %r10628;
	bra.uni 	BB6_324;

BB6_160:
	setp.eq.s32	%p83, %r528, 77;
	@%p83 bra 	BB6_161;
	bra.uni 	BB6_324;

BB6_161:
	or.b32  	%r10612, %r10612, 32768;
	st.local.u32 	[%rd34+4], %r10612;
	bra.uni 	BB6_324;

BB6_96:
	setp.eq.s32	%p131, %r528, 45;
	@%p131 bra 	BB6_97;
	bra.uni 	BB6_324;

BB6_97:
	or.b32  	%r10620, %r10620, 32768;
	st.local.u32 	[%rd30+4], %r10620;
	bra.uni 	BB6_324;

BB6_223:
	setp.eq.s32	%p36, %r528, 109;
	@%p36 bra 	BB6_224;
	bra.uni 	BB6_324;

BB6_224:
	or.b32  	%r10604, %r10604, 32768;
	st.local.u32 	[%rd38+4], %r10604;
	bra.uni 	BB6_324;

BB6_64:
	setp.eq.s32	%p155, %r528, 29;
	@%p155 bra 	BB6_65;
	bra.uni 	BB6_324;

BB6_65:
	or.b32  	%r10624, %r10624, 32768;
	st.local.u32 	[%rd28+4], %r10624;
	bra.uni 	BB6_324;

BB6_191:
	setp.eq.s32	%p60, %r528, 93;
	@%p60 bra 	BB6_192;
	bra.uni 	BB6_324;

BB6_192:
	or.b32  	%r10608, %r10608, 32768;
	st.local.u32 	[%rd36+4], %r10608;
	bra.uni 	BB6_324;

BB6_127:
	setp.eq.s32	%p108, %r528, 61;
	@%p108 bra 	BB6_128;
	bra.uni 	BB6_324;

BB6_128:
	or.b32  	%r10616, %r10616, 32768;
	st.local.u32 	[%rd32+4], %r10616;
	bra.uni 	BB6_324;

BB6_254:
	setp.eq.s32	%p13, %r528, 125;
	@%p13 bra 	BB6_255;
	bra.uni 	BB6_324;

BB6_255:
	or.b32  	%r10600, %r10600, 32768;
	st.local.u32 	[%rd40+4], %r10600;
	bra.uni 	BB6_324;

BB6_14:
	setp.eq.s32	%p192, %r528, 3;
	@%p192 bra 	BB6_15;
	bra.uni 	BB6_324;

BB6_15:
	or.b32  	%r10631, %r10631, -2147483648;

BB6_323:
	st.local.u32 	[%rd24+56], %r10631;

BB6_324:
	ld.local.u64 	%rd13029, [%rd9];
	ld.local.u64 	%rd13028, [%rd24];
	ld.local.u64 	%rd13027, [%rd24+8];
	ld.local.u64 	%rd13026, [%rd24+16];
	ld.local.u64 	%rd13025, [%rd24+24];
	ld.local.u64 	%rd13024, [%rd24+32];
	ld.local.u64 	%rd13023, [%rd24+40];
	ld.local.u64 	%rd13022, [%rd24+48];
	setp.gt.u32	%p195, %r53, 111;
	@%p195 bra 	BB6_326;
	bra.uni 	BB6_325;

BB6_326:
	mov.b64	%rd469, {%r10630, %r10631};
	mov.b64	%rd470, {%r10628, %r10629};
	mov.b64	%rd471, {%r10626, %r10627};
	mov.b64	%rd472, {%r10624, %r10625};
	mov.b64	%rd473, {%r10622, %r10623};
	mov.b64	%rd474, {%r10620, %r10621};
	mov.b64	%rd475, {%r10618, %r10619};
	mov.b64	%rd476, {%r10616, %r10617};
	mov.b64	%rd477, {%r10614, %r10615};
	mov.b64	%rd478, {%r10612, %r10613};
	mov.b64	%rd479, {%r10610, %r10611};
	mov.b64	%rd480, {%r10608, %r10609};
	mov.b64	%rd481, {%r10606, %r10607};
	mov.b64	%rd482, {%r10604, %r10605};
	mov.b64	%rd483, {%r10602, %r10603};
	mov.b64	%rd484, {%r10600, %r10601};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r717,%dummy}, %rd13025;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r718}, %rd13025;
	}
	shf.r.wrap.b32 	%r719, %r718, %r717, 18;
	shf.r.wrap.b32 	%r720, %r717, %r718, 18;
	mov.b64 	%rd485, {%r720, %r719};
	shf.r.wrap.b32 	%r721, %r718, %r717, 14;
	shf.r.wrap.b32 	%r722, %r717, %r718, 14;
	mov.b64 	%rd486, {%r722, %r721};
	xor.b64  	%rd487, %rd485, %rd486;
	shf.l.wrap.b32 	%r723, %r717, %r718, 23;
	shf.l.wrap.b32 	%r724, %r718, %r717, 23;
	mov.b64 	%rd488, {%r724, %r723};
	xor.b64  	%rd489, %rd487, %rd488;
	xor.b64  	%rd490, %rd13023, %rd13024;
	and.b64  	%rd491, %rd490, %rd13025;
	xor.b64  	%rd492, %rd491, %rd13023;
	add.s64 	%rd493, %rd492, %rd13022;
	add.s64 	%rd494, %rd493, %rd469;
	ld.const.u64 	%rd13021, [k_sha512];
	add.s64 	%rd495, %rd494, %rd13021;
	add.s64 	%rd496, %rd495, %rd489;
	add.s64 	%rd497, %rd496, %rd13026;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r725}, %rd13029;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r726,%dummy}, %rd13029;
	}
	shf.l.wrap.b32 	%r727, %r726, %r725, 30;
	shf.l.wrap.b32 	%r728, %r725, %r726, 30;
	mov.b64 	%rd498, {%r728, %r727};
	shf.r.wrap.b32 	%r729, %r725, %r726, 28;
	shf.r.wrap.b32 	%r730, %r726, %r725, 28;
	mov.b64 	%rd499, {%r730, %r729};
	xor.b64  	%rd500, %rd498, %rd499;
	shf.l.wrap.b32 	%r731, %r726, %r725, 25;
	shf.l.wrap.b32 	%r732, %r725, %r726, 25;
	mov.b64 	%rd501, {%r732, %r731};
	xor.b64  	%rd502, %rd500, %rd501;
	xor.b64  	%rd503, %rd13028, %rd13029;
	xor.b64  	%rd504, %rd13027, %rd13029;
	and.b64  	%rd505, %rd504, %rd503;
	xor.b64  	%rd506, %rd505, %rd13029;
	add.s64 	%rd507, %rd496, %rd506;
	add.s64 	%rd508, %rd507, %rd502;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r733,%dummy}, %rd497;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r734}, %rd497;
	}
	shf.r.wrap.b32 	%r735, %r734, %r733, 14;
	shf.r.wrap.b32 	%r736, %r733, %r734, 14;
	mov.b64 	%rd509, {%r736, %r735};
	shf.r.wrap.b32 	%r737, %r734, %r733, 18;
	shf.r.wrap.b32 	%r738, %r733, %r734, 18;
	mov.b64 	%rd510, {%r738, %r737};
	xor.b64  	%rd511, %rd510, %rd509;
	shf.l.wrap.b32 	%r739, %r733, %r734, 23;
	shf.l.wrap.b32 	%r740, %r734, %r733, 23;
	mov.b64 	%rd512, {%r740, %r739};
	xor.b64  	%rd513, %rd511, %rd512;
	xor.b64  	%rd514, %rd13024, %rd13025;
	and.b64  	%rd515, %rd497, %rd514;
	xor.b64  	%rd516, %rd515, %rd13024;
	add.s64 	%rd517, %rd470, %rd13023;
	ld.const.u64 	%rd13020, [k_sha512+8];
	add.s64 	%rd518, %rd517, %rd13020;
	add.s64 	%rd519, %rd518, %rd516;
	add.s64 	%rd520, %rd519, %rd513;
	add.s64 	%rd521, %rd520, %rd13027;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r741,%dummy}, %rd508;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r742}, %rd508;
	}
	shf.r.wrap.b32 	%r743, %r742, %r741, 28;
	shf.r.wrap.b32 	%r744, %r741, %r742, 28;
	mov.b64 	%rd522, {%r744, %r743};
	shf.l.wrap.b32 	%r745, %r741, %r742, 30;
	shf.l.wrap.b32 	%r746, %r742, %r741, 30;
	mov.b64 	%rd523, {%r746, %r745};
	xor.b64  	%rd524, %rd523, %rd522;
	shf.l.wrap.b32 	%r747, %r741, %r742, 25;
	shf.l.wrap.b32 	%r748, %r742, %r741, 25;
	mov.b64 	%rd525, {%r748, %r747};
	xor.b64  	%rd526, %rd524, %rd525;
	xor.b64  	%rd527, %rd508, %rd13028;
	xor.b64  	%rd528, %rd508, %rd13029;
	and.b64  	%rd529, %rd528, %rd527;
	xor.b64  	%rd530, %rd529, %rd508;
	add.s64 	%rd531, %rd520, %rd530;
	add.s64 	%rd532, %rd531, %rd526;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r749,%dummy}, %rd521;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r750}, %rd521;
	}
	shf.r.wrap.b32 	%r751, %r750, %r749, 14;
	shf.r.wrap.b32 	%r752, %r749, %r750, 14;
	mov.b64 	%rd533, {%r752, %r751};
	shf.r.wrap.b32 	%r753, %r750, %r749, 18;
	shf.r.wrap.b32 	%r754, %r749, %r750, 18;
	mov.b64 	%rd534, {%r754, %r753};
	xor.b64  	%rd535, %rd534, %rd533;
	shf.l.wrap.b32 	%r755, %r749, %r750, 23;
	shf.l.wrap.b32 	%r756, %r750, %r749, 23;
	mov.b64 	%rd536, {%r756, %r755};
	xor.b64  	%rd537, %rd535, %rd536;
	xor.b64  	%rd538, %rd497, %rd13025;
	and.b64  	%rd539, %rd521, %rd538;
	xor.b64  	%rd540, %rd539, %rd13025;
	add.s64 	%rd541, %rd471, %rd13024;
	ld.const.u64 	%rd13019, [k_sha512+16];
	add.s64 	%rd542, %rd541, %rd13019;
	add.s64 	%rd543, %rd542, %rd540;
	add.s64 	%rd544, %rd543, %rd537;
	add.s64 	%rd545, %rd544, %rd13028;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r757,%dummy}, %rd532;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r758}, %rd532;
	}
	shf.r.wrap.b32 	%r759, %r758, %r757, 28;
	shf.r.wrap.b32 	%r760, %r757, %r758, 28;
	mov.b64 	%rd546, {%r760, %r759};
	shf.l.wrap.b32 	%r761, %r757, %r758, 30;
	shf.l.wrap.b32 	%r762, %r758, %r757, 30;
	mov.b64 	%rd547, {%r762, %r761};
	xor.b64  	%rd548, %rd547, %rd546;
	shf.l.wrap.b32 	%r763, %r757, %r758, 25;
	shf.l.wrap.b32 	%r764, %r758, %r757, 25;
	mov.b64 	%rd549, {%r764, %r763};
	xor.b64  	%rd550, %rd548, %rd549;
	xor.b64  	%rd551, %rd532, %rd13029;
	xor.b64  	%rd552, %rd532, %rd508;
	and.b64  	%rd553, %rd552, %rd551;
	xor.b64  	%rd554, %rd553, %rd532;
	add.s64 	%rd555, %rd544, %rd554;
	add.s64 	%rd556, %rd555, %rd550;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r765,%dummy}, %rd545;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r766}, %rd545;
	}
	shf.r.wrap.b32 	%r767, %r766, %r765, 14;
	shf.r.wrap.b32 	%r768, %r765, %r766, 14;
	mov.b64 	%rd557, {%r768, %r767};
	shf.r.wrap.b32 	%r769, %r766, %r765, 18;
	shf.r.wrap.b32 	%r770, %r765, %r766, 18;
	mov.b64 	%rd558, {%r770, %r769};
	xor.b64  	%rd559, %rd558, %rd557;
	shf.l.wrap.b32 	%r771, %r765, %r766, 23;
	shf.l.wrap.b32 	%r772, %r766, %r765, 23;
	mov.b64 	%rd560, {%r772, %r771};
	xor.b64  	%rd561, %rd559, %rd560;
	xor.b64  	%rd562, %rd521, %rd497;
	and.b64  	%rd563, %rd545, %rd562;
	xor.b64  	%rd564, %rd563, %rd497;
	add.s64 	%rd565, %rd472, %rd13025;
	ld.const.u64 	%rd13018, [k_sha512+24];
	add.s64 	%rd566, %rd565, %rd13018;
	add.s64 	%rd567, %rd566, %rd564;
	add.s64 	%rd568, %rd567, %rd561;
	add.s64 	%rd569, %rd568, %rd13029;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r773,%dummy}, %rd556;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r774}, %rd556;
	}
	shf.r.wrap.b32 	%r775, %r774, %r773, 28;
	shf.r.wrap.b32 	%r776, %r773, %r774, 28;
	mov.b64 	%rd570, {%r776, %r775};
	shf.l.wrap.b32 	%r777, %r773, %r774, 30;
	shf.l.wrap.b32 	%r778, %r774, %r773, 30;
	mov.b64 	%rd571, {%r778, %r777};
	xor.b64  	%rd572, %rd571, %rd570;
	shf.l.wrap.b32 	%r779, %r773, %r774, 25;
	shf.l.wrap.b32 	%r780, %r774, %r773, 25;
	mov.b64 	%rd573, {%r780, %r779};
	xor.b64  	%rd574, %rd572, %rd573;
	xor.b64  	%rd575, %rd556, %rd508;
	xor.b64  	%rd576, %rd556, %rd532;
	and.b64  	%rd577, %rd576, %rd575;
	xor.b64  	%rd578, %rd577, %rd556;
	add.s64 	%rd579, %rd568, %rd578;
	add.s64 	%rd580, %rd579, %rd574;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r781,%dummy}, %rd569;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r782}, %rd569;
	}
	shf.r.wrap.b32 	%r783, %r782, %r781, 14;
	shf.r.wrap.b32 	%r784, %r781, %r782, 14;
	mov.b64 	%rd581, {%r784, %r783};
	shf.r.wrap.b32 	%r785, %r782, %r781, 18;
	shf.r.wrap.b32 	%r786, %r781, %r782, 18;
	mov.b64 	%rd582, {%r786, %r785};
	xor.b64  	%rd583, %rd582, %rd581;
	shf.l.wrap.b32 	%r787, %r781, %r782, 23;
	shf.l.wrap.b32 	%r788, %r782, %r781, 23;
	mov.b64 	%rd584, {%r788, %r787};
	xor.b64  	%rd585, %rd583, %rd584;
	xor.b64  	%rd586, %rd545, %rd521;
	and.b64  	%rd587, %rd569, %rd586;
	xor.b64  	%rd588, %rd587, %rd521;
	add.s64 	%rd589, %rd497, %rd473;
	ld.const.u64 	%rd13017, [k_sha512+32];
	add.s64 	%rd590, %rd589, %rd13017;
	add.s64 	%rd591, %rd590, %rd588;
	add.s64 	%rd592, %rd591, %rd585;
	add.s64 	%rd593, %rd592, %rd508;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r789,%dummy}, %rd580;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r790}, %rd580;
	}
	shf.r.wrap.b32 	%r791, %r790, %r789, 28;
	shf.r.wrap.b32 	%r792, %r789, %r790, 28;
	mov.b64 	%rd594, {%r792, %r791};
	shf.l.wrap.b32 	%r793, %r789, %r790, 30;
	shf.l.wrap.b32 	%r794, %r790, %r789, 30;
	mov.b64 	%rd595, {%r794, %r793};
	xor.b64  	%rd596, %rd595, %rd594;
	shf.l.wrap.b32 	%r795, %r789, %r790, 25;
	shf.l.wrap.b32 	%r796, %r790, %r789, 25;
	mov.b64 	%rd597, {%r796, %r795};
	xor.b64  	%rd598, %rd596, %rd597;
	xor.b64  	%rd599, %rd580, %rd532;
	xor.b64  	%rd600, %rd580, %rd556;
	and.b64  	%rd601, %rd600, %rd599;
	xor.b64  	%rd602, %rd601, %rd580;
	add.s64 	%rd603, %rd592, %rd602;
	add.s64 	%rd604, %rd603, %rd598;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r797,%dummy}, %rd593;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r798}, %rd593;
	}
	shf.r.wrap.b32 	%r799, %r798, %r797, 14;
	shf.r.wrap.b32 	%r800, %r797, %r798, 14;
	mov.b64 	%rd605, {%r800, %r799};
	shf.r.wrap.b32 	%r801, %r798, %r797, 18;
	shf.r.wrap.b32 	%r802, %r797, %r798, 18;
	mov.b64 	%rd606, {%r802, %r801};
	xor.b64  	%rd607, %rd606, %rd605;
	shf.l.wrap.b32 	%r803, %r797, %r798, 23;
	shf.l.wrap.b32 	%r804, %r798, %r797, 23;
	mov.b64 	%rd608, {%r804, %r803};
	xor.b64  	%rd609, %rd607, %rd608;
	xor.b64  	%rd610, %rd569, %rd545;
	and.b64  	%rd611, %rd593, %rd610;
	xor.b64  	%rd612, %rd611, %rd545;
	add.s64 	%rd613, %rd521, %rd474;
	ld.const.u64 	%rd13016, [k_sha512+40];
	add.s64 	%rd614, %rd613, %rd13016;
	add.s64 	%rd615, %rd614, %rd612;
	add.s64 	%rd616, %rd615, %rd609;
	add.s64 	%rd617, %rd616, %rd532;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r805,%dummy}, %rd604;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r806}, %rd604;
	}
	shf.r.wrap.b32 	%r807, %r806, %r805, 28;
	shf.r.wrap.b32 	%r808, %r805, %r806, 28;
	mov.b64 	%rd618, {%r808, %r807};
	shf.l.wrap.b32 	%r809, %r805, %r806, 30;
	shf.l.wrap.b32 	%r810, %r806, %r805, 30;
	mov.b64 	%rd619, {%r810, %r809};
	xor.b64  	%rd620, %rd619, %rd618;
	shf.l.wrap.b32 	%r811, %r805, %r806, 25;
	shf.l.wrap.b32 	%r812, %r806, %r805, 25;
	mov.b64 	%rd621, {%r812, %r811};
	xor.b64  	%rd622, %rd620, %rd621;
	xor.b64  	%rd623, %rd604, %rd556;
	xor.b64  	%rd624, %rd604, %rd580;
	and.b64  	%rd625, %rd624, %rd623;
	xor.b64  	%rd626, %rd625, %rd604;
	add.s64 	%rd627, %rd616, %rd626;
	add.s64 	%rd628, %rd627, %rd622;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r813,%dummy}, %rd617;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r814}, %rd617;
	}
	shf.r.wrap.b32 	%r815, %r814, %r813, 14;
	shf.r.wrap.b32 	%r816, %r813, %r814, 14;
	mov.b64 	%rd629, {%r816, %r815};
	shf.r.wrap.b32 	%r817, %r814, %r813, 18;
	shf.r.wrap.b32 	%r818, %r813, %r814, 18;
	mov.b64 	%rd630, {%r818, %r817};
	xor.b64  	%rd631, %rd630, %rd629;
	shf.l.wrap.b32 	%r819, %r813, %r814, 23;
	shf.l.wrap.b32 	%r820, %r814, %r813, 23;
	mov.b64 	%rd632, {%r820, %r819};
	xor.b64  	%rd633, %rd631, %rd632;
	xor.b64  	%rd634, %rd593, %rd569;
	and.b64  	%rd635, %rd617, %rd634;
	xor.b64  	%rd636, %rd635, %rd569;
	add.s64 	%rd637, %rd545, %rd475;
	ld.const.u64 	%rd13015, [k_sha512+48];
	add.s64 	%rd638, %rd637, %rd13015;
	add.s64 	%rd639, %rd638, %rd636;
	add.s64 	%rd640, %rd639, %rd633;
	add.s64 	%rd641, %rd640, %rd556;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r821,%dummy}, %rd628;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r822}, %rd628;
	}
	shf.r.wrap.b32 	%r823, %r822, %r821, 28;
	shf.r.wrap.b32 	%r824, %r821, %r822, 28;
	mov.b64 	%rd642, {%r824, %r823};
	shf.l.wrap.b32 	%r825, %r821, %r822, 30;
	shf.l.wrap.b32 	%r826, %r822, %r821, 30;
	mov.b64 	%rd643, {%r826, %r825};
	xor.b64  	%rd644, %rd643, %rd642;
	shf.l.wrap.b32 	%r827, %r821, %r822, 25;
	shf.l.wrap.b32 	%r828, %r822, %r821, 25;
	mov.b64 	%rd645, {%r828, %r827};
	xor.b64  	%rd646, %rd644, %rd645;
	xor.b64  	%rd647, %rd628, %rd580;
	xor.b64  	%rd648, %rd628, %rd604;
	and.b64  	%rd649, %rd648, %rd647;
	xor.b64  	%rd650, %rd649, %rd628;
	add.s64 	%rd651, %rd640, %rd650;
	add.s64 	%rd652, %rd651, %rd646;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r829,%dummy}, %rd641;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r830}, %rd641;
	}
	shf.r.wrap.b32 	%r831, %r830, %r829, 14;
	shf.r.wrap.b32 	%r832, %r829, %r830, 14;
	mov.b64 	%rd653, {%r832, %r831};
	shf.r.wrap.b32 	%r833, %r830, %r829, 18;
	shf.r.wrap.b32 	%r834, %r829, %r830, 18;
	mov.b64 	%rd654, {%r834, %r833};
	xor.b64  	%rd655, %rd654, %rd653;
	shf.l.wrap.b32 	%r835, %r829, %r830, 23;
	shf.l.wrap.b32 	%r836, %r830, %r829, 23;
	mov.b64 	%rd656, {%r836, %r835};
	xor.b64  	%rd657, %rd655, %rd656;
	xor.b64  	%rd658, %rd617, %rd593;
	and.b64  	%rd659, %rd641, %rd658;
	xor.b64  	%rd660, %rd659, %rd593;
	add.s64 	%rd661, %rd569, %rd476;
	ld.const.u64 	%rd13014, [k_sha512+56];
	add.s64 	%rd662, %rd661, %rd13014;
	add.s64 	%rd663, %rd662, %rd660;
	add.s64 	%rd664, %rd663, %rd657;
	add.s64 	%rd665, %rd664, %rd580;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r837,%dummy}, %rd652;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r838}, %rd652;
	}
	shf.r.wrap.b32 	%r839, %r838, %r837, 28;
	shf.r.wrap.b32 	%r840, %r837, %r838, 28;
	mov.b64 	%rd666, {%r840, %r839};
	shf.l.wrap.b32 	%r841, %r837, %r838, 30;
	shf.l.wrap.b32 	%r842, %r838, %r837, 30;
	mov.b64 	%rd667, {%r842, %r841};
	xor.b64  	%rd668, %rd667, %rd666;
	shf.l.wrap.b32 	%r843, %r837, %r838, 25;
	shf.l.wrap.b32 	%r844, %r838, %r837, 25;
	mov.b64 	%rd669, {%r844, %r843};
	xor.b64  	%rd670, %rd668, %rd669;
	xor.b64  	%rd671, %rd652, %rd604;
	xor.b64  	%rd672, %rd652, %rd628;
	and.b64  	%rd673, %rd672, %rd671;
	xor.b64  	%rd674, %rd673, %rd652;
	add.s64 	%rd675, %rd664, %rd674;
	add.s64 	%rd676, %rd675, %rd670;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r845,%dummy}, %rd665;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r846}, %rd665;
	}
	shf.r.wrap.b32 	%r847, %r846, %r845, 14;
	shf.r.wrap.b32 	%r848, %r845, %r846, 14;
	mov.b64 	%rd677, {%r848, %r847};
	shf.r.wrap.b32 	%r849, %r846, %r845, 18;
	shf.r.wrap.b32 	%r850, %r845, %r846, 18;
	mov.b64 	%rd678, {%r850, %r849};
	xor.b64  	%rd679, %rd678, %rd677;
	shf.l.wrap.b32 	%r851, %r845, %r846, 23;
	shf.l.wrap.b32 	%r852, %r846, %r845, 23;
	mov.b64 	%rd680, {%r852, %r851};
	xor.b64  	%rd681, %rd679, %rd680;
	xor.b64  	%rd682, %rd641, %rd617;
	and.b64  	%rd683, %rd665, %rd682;
	xor.b64  	%rd684, %rd683, %rd617;
	add.s64 	%rd685, %rd593, %rd477;
	ld.const.u64 	%rd13013, [k_sha512+64];
	add.s64 	%rd686, %rd685, %rd13013;
	add.s64 	%rd687, %rd686, %rd684;
	add.s64 	%rd688, %rd687, %rd681;
	add.s64 	%rd689, %rd688, %rd604;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r853,%dummy}, %rd676;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r854}, %rd676;
	}
	shf.r.wrap.b32 	%r855, %r854, %r853, 28;
	shf.r.wrap.b32 	%r856, %r853, %r854, 28;
	mov.b64 	%rd690, {%r856, %r855};
	shf.l.wrap.b32 	%r857, %r853, %r854, 30;
	shf.l.wrap.b32 	%r858, %r854, %r853, 30;
	mov.b64 	%rd691, {%r858, %r857};
	xor.b64  	%rd692, %rd691, %rd690;
	shf.l.wrap.b32 	%r859, %r853, %r854, 25;
	shf.l.wrap.b32 	%r860, %r854, %r853, 25;
	mov.b64 	%rd693, {%r860, %r859};
	xor.b64  	%rd694, %rd692, %rd693;
	xor.b64  	%rd695, %rd676, %rd628;
	xor.b64  	%rd696, %rd676, %rd652;
	and.b64  	%rd697, %rd696, %rd695;
	xor.b64  	%rd698, %rd697, %rd676;
	add.s64 	%rd699, %rd688, %rd698;
	add.s64 	%rd700, %rd699, %rd694;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r861,%dummy}, %rd689;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r862}, %rd689;
	}
	shf.r.wrap.b32 	%r863, %r862, %r861, 14;
	shf.r.wrap.b32 	%r864, %r861, %r862, 14;
	mov.b64 	%rd701, {%r864, %r863};
	shf.r.wrap.b32 	%r865, %r862, %r861, 18;
	shf.r.wrap.b32 	%r866, %r861, %r862, 18;
	mov.b64 	%rd702, {%r866, %r865};
	xor.b64  	%rd703, %rd702, %rd701;
	shf.l.wrap.b32 	%r867, %r861, %r862, 23;
	shf.l.wrap.b32 	%r868, %r862, %r861, 23;
	mov.b64 	%rd704, {%r868, %r867};
	xor.b64  	%rd705, %rd703, %rd704;
	xor.b64  	%rd706, %rd665, %rd641;
	and.b64  	%rd707, %rd689, %rd706;
	xor.b64  	%rd708, %rd707, %rd641;
	add.s64 	%rd709, %rd617, %rd478;
	ld.const.u64 	%rd13012, [k_sha512+72];
	add.s64 	%rd710, %rd709, %rd13012;
	add.s64 	%rd711, %rd710, %rd708;
	add.s64 	%rd712, %rd711, %rd705;
	add.s64 	%rd713, %rd712, %rd628;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r869,%dummy}, %rd700;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r870}, %rd700;
	}
	shf.r.wrap.b32 	%r871, %r870, %r869, 28;
	shf.r.wrap.b32 	%r872, %r869, %r870, 28;
	mov.b64 	%rd714, {%r872, %r871};
	shf.l.wrap.b32 	%r873, %r869, %r870, 30;
	shf.l.wrap.b32 	%r874, %r870, %r869, 30;
	mov.b64 	%rd715, {%r874, %r873};
	xor.b64  	%rd716, %rd715, %rd714;
	shf.l.wrap.b32 	%r875, %r869, %r870, 25;
	shf.l.wrap.b32 	%r876, %r870, %r869, 25;
	mov.b64 	%rd717, {%r876, %r875};
	xor.b64  	%rd718, %rd716, %rd717;
	xor.b64  	%rd719, %rd700, %rd652;
	xor.b64  	%rd720, %rd700, %rd676;
	and.b64  	%rd721, %rd720, %rd719;
	xor.b64  	%rd722, %rd721, %rd700;
	add.s64 	%rd723, %rd712, %rd722;
	add.s64 	%rd724, %rd723, %rd718;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r877,%dummy}, %rd713;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r878}, %rd713;
	}
	shf.r.wrap.b32 	%r879, %r878, %r877, 14;
	shf.r.wrap.b32 	%r880, %r877, %r878, 14;
	mov.b64 	%rd725, {%r880, %r879};
	shf.r.wrap.b32 	%r881, %r878, %r877, 18;
	shf.r.wrap.b32 	%r882, %r877, %r878, 18;
	mov.b64 	%rd726, {%r882, %r881};
	xor.b64  	%rd727, %rd726, %rd725;
	shf.l.wrap.b32 	%r883, %r877, %r878, 23;
	shf.l.wrap.b32 	%r884, %r878, %r877, 23;
	mov.b64 	%rd728, {%r884, %r883};
	xor.b64  	%rd729, %rd727, %rd728;
	xor.b64  	%rd730, %rd689, %rd665;
	and.b64  	%rd731, %rd713, %rd730;
	xor.b64  	%rd732, %rd731, %rd665;
	add.s64 	%rd733, %rd641, %rd479;
	ld.const.u64 	%rd13011, [k_sha512+80];
	add.s64 	%rd734, %rd733, %rd13011;
	add.s64 	%rd735, %rd734, %rd732;
	add.s64 	%rd736, %rd735, %rd729;
	add.s64 	%rd737, %rd736, %rd652;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r885,%dummy}, %rd724;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r886}, %rd724;
	}
	shf.r.wrap.b32 	%r887, %r886, %r885, 28;
	shf.r.wrap.b32 	%r888, %r885, %r886, 28;
	mov.b64 	%rd738, {%r888, %r887};
	shf.l.wrap.b32 	%r889, %r885, %r886, 30;
	shf.l.wrap.b32 	%r890, %r886, %r885, 30;
	mov.b64 	%rd739, {%r890, %r889};
	xor.b64  	%rd740, %rd739, %rd738;
	shf.l.wrap.b32 	%r891, %r885, %r886, 25;
	shf.l.wrap.b32 	%r892, %r886, %r885, 25;
	mov.b64 	%rd741, {%r892, %r891};
	xor.b64  	%rd742, %rd740, %rd741;
	xor.b64  	%rd743, %rd724, %rd676;
	xor.b64  	%rd744, %rd724, %rd700;
	and.b64  	%rd745, %rd744, %rd743;
	xor.b64  	%rd746, %rd745, %rd724;
	add.s64 	%rd747, %rd736, %rd746;
	add.s64 	%rd748, %rd747, %rd742;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r893,%dummy}, %rd737;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r894}, %rd737;
	}
	shf.r.wrap.b32 	%r895, %r894, %r893, 14;
	shf.r.wrap.b32 	%r896, %r893, %r894, 14;
	mov.b64 	%rd749, {%r896, %r895};
	shf.r.wrap.b32 	%r897, %r894, %r893, 18;
	shf.r.wrap.b32 	%r898, %r893, %r894, 18;
	mov.b64 	%rd750, {%r898, %r897};
	xor.b64  	%rd751, %rd750, %rd749;
	shf.l.wrap.b32 	%r899, %r893, %r894, 23;
	shf.l.wrap.b32 	%r900, %r894, %r893, 23;
	mov.b64 	%rd752, {%r900, %r899};
	xor.b64  	%rd753, %rd751, %rd752;
	xor.b64  	%rd754, %rd713, %rd689;
	and.b64  	%rd755, %rd737, %rd754;
	xor.b64  	%rd756, %rd755, %rd689;
	add.s64 	%rd757, %rd665, %rd480;
	ld.const.u64 	%rd13010, [k_sha512+88];
	add.s64 	%rd758, %rd757, %rd13010;
	add.s64 	%rd759, %rd758, %rd756;
	add.s64 	%rd760, %rd759, %rd753;
	add.s64 	%rd761, %rd760, %rd676;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r901,%dummy}, %rd748;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r902}, %rd748;
	}
	shf.r.wrap.b32 	%r903, %r902, %r901, 28;
	shf.r.wrap.b32 	%r904, %r901, %r902, 28;
	mov.b64 	%rd762, {%r904, %r903};
	shf.l.wrap.b32 	%r905, %r901, %r902, 30;
	shf.l.wrap.b32 	%r906, %r902, %r901, 30;
	mov.b64 	%rd763, {%r906, %r905};
	xor.b64  	%rd764, %rd763, %rd762;
	shf.l.wrap.b32 	%r907, %r901, %r902, 25;
	shf.l.wrap.b32 	%r908, %r902, %r901, 25;
	mov.b64 	%rd765, {%r908, %r907};
	xor.b64  	%rd766, %rd764, %rd765;
	xor.b64  	%rd767, %rd748, %rd700;
	xor.b64  	%rd768, %rd748, %rd724;
	and.b64  	%rd769, %rd768, %rd767;
	xor.b64  	%rd770, %rd769, %rd748;
	add.s64 	%rd771, %rd760, %rd770;
	add.s64 	%rd772, %rd771, %rd766;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r909,%dummy}, %rd761;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r910}, %rd761;
	}
	shf.r.wrap.b32 	%r911, %r910, %r909, 14;
	shf.r.wrap.b32 	%r912, %r909, %r910, 14;
	mov.b64 	%rd773, {%r912, %r911};
	shf.r.wrap.b32 	%r913, %r910, %r909, 18;
	shf.r.wrap.b32 	%r914, %r909, %r910, 18;
	mov.b64 	%rd774, {%r914, %r913};
	xor.b64  	%rd775, %rd774, %rd773;
	shf.l.wrap.b32 	%r915, %r909, %r910, 23;
	shf.l.wrap.b32 	%r916, %r910, %r909, 23;
	mov.b64 	%rd776, {%r916, %r915};
	xor.b64  	%rd777, %rd775, %rd776;
	xor.b64  	%rd778, %rd737, %rd713;
	and.b64  	%rd779, %rd761, %rd778;
	xor.b64  	%rd780, %rd779, %rd713;
	add.s64 	%rd781, %rd689, %rd481;
	ld.const.u64 	%rd13009, [k_sha512+96];
	add.s64 	%rd782, %rd781, %rd13009;
	add.s64 	%rd783, %rd782, %rd780;
	add.s64 	%rd784, %rd783, %rd777;
	add.s64 	%rd785, %rd784, %rd700;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r917,%dummy}, %rd772;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r918}, %rd772;
	}
	shf.r.wrap.b32 	%r919, %r918, %r917, 28;
	shf.r.wrap.b32 	%r920, %r917, %r918, 28;
	mov.b64 	%rd786, {%r920, %r919};
	shf.l.wrap.b32 	%r921, %r917, %r918, 30;
	shf.l.wrap.b32 	%r922, %r918, %r917, 30;
	mov.b64 	%rd787, {%r922, %r921};
	xor.b64  	%rd788, %rd787, %rd786;
	shf.l.wrap.b32 	%r923, %r917, %r918, 25;
	shf.l.wrap.b32 	%r924, %r918, %r917, 25;
	mov.b64 	%rd789, {%r924, %r923};
	xor.b64  	%rd790, %rd788, %rd789;
	xor.b64  	%rd791, %rd772, %rd724;
	xor.b64  	%rd792, %rd772, %rd748;
	and.b64  	%rd793, %rd792, %rd791;
	xor.b64  	%rd794, %rd793, %rd772;
	add.s64 	%rd795, %rd784, %rd794;
	add.s64 	%rd796, %rd795, %rd790;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r925,%dummy}, %rd785;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r926}, %rd785;
	}
	shf.r.wrap.b32 	%r927, %r926, %r925, 14;
	shf.r.wrap.b32 	%r928, %r925, %r926, 14;
	mov.b64 	%rd797, {%r928, %r927};
	shf.r.wrap.b32 	%r929, %r926, %r925, 18;
	shf.r.wrap.b32 	%r930, %r925, %r926, 18;
	mov.b64 	%rd798, {%r930, %r929};
	xor.b64  	%rd799, %rd798, %rd797;
	shf.l.wrap.b32 	%r931, %r925, %r926, 23;
	shf.l.wrap.b32 	%r932, %r926, %r925, 23;
	mov.b64 	%rd800, {%r932, %r931};
	xor.b64  	%rd801, %rd799, %rd800;
	xor.b64  	%rd802, %rd761, %rd737;
	and.b64  	%rd803, %rd785, %rd802;
	xor.b64  	%rd804, %rd803, %rd737;
	add.s64 	%rd805, %rd713, %rd482;
	ld.const.u64 	%rd13008, [k_sha512+104];
	add.s64 	%rd806, %rd805, %rd13008;
	add.s64 	%rd807, %rd806, %rd804;
	add.s64 	%rd808, %rd807, %rd801;
	add.s64 	%rd809, %rd808, %rd724;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r933,%dummy}, %rd796;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r934}, %rd796;
	}
	shf.r.wrap.b32 	%r935, %r934, %r933, 28;
	shf.r.wrap.b32 	%r936, %r933, %r934, 28;
	mov.b64 	%rd810, {%r936, %r935};
	shf.l.wrap.b32 	%r937, %r933, %r934, 30;
	shf.l.wrap.b32 	%r938, %r934, %r933, 30;
	mov.b64 	%rd811, {%r938, %r937};
	xor.b64  	%rd812, %rd811, %rd810;
	shf.l.wrap.b32 	%r939, %r933, %r934, 25;
	shf.l.wrap.b32 	%r940, %r934, %r933, 25;
	mov.b64 	%rd813, {%r940, %r939};
	xor.b64  	%rd814, %rd812, %rd813;
	xor.b64  	%rd815, %rd796, %rd748;
	xor.b64  	%rd816, %rd796, %rd772;
	and.b64  	%rd817, %rd816, %rd815;
	xor.b64  	%rd818, %rd817, %rd796;
	add.s64 	%rd819, %rd808, %rd818;
	add.s64 	%rd820, %rd819, %rd814;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r941,%dummy}, %rd809;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r942}, %rd809;
	}
	shf.r.wrap.b32 	%r943, %r942, %r941, 14;
	shf.r.wrap.b32 	%r944, %r941, %r942, 14;
	mov.b64 	%rd821, {%r944, %r943};
	shf.r.wrap.b32 	%r945, %r942, %r941, 18;
	shf.r.wrap.b32 	%r946, %r941, %r942, 18;
	mov.b64 	%rd822, {%r946, %r945};
	xor.b64  	%rd823, %rd822, %rd821;
	shf.l.wrap.b32 	%r947, %r941, %r942, 23;
	shf.l.wrap.b32 	%r948, %r942, %r941, 23;
	mov.b64 	%rd824, {%r948, %r947};
	xor.b64  	%rd825, %rd823, %rd824;
	xor.b64  	%rd826, %rd785, %rd761;
	and.b64  	%rd827, %rd809, %rd826;
	xor.b64  	%rd828, %rd827, %rd761;
	add.s64 	%rd829, %rd737, %rd483;
	ld.const.u64 	%rd13007, [k_sha512+112];
	add.s64 	%rd830, %rd829, %rd13007;
	add.s64 	%rd831, %rd830, %rd828;
	add.s64 	%rd832, %rd831, %rd825;
	add.s64 	%rd833, %rd832, %rd748;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r949,%dummy}, %rd820;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r950}, %rd820;
	}
	shf.r.wrap.b32 	%r951, %r950, %r949, 28;
	shf.r.wrap.b32 	%r952, %r949, %r950, 28;
	mov.b64 	%rd834, {%r952, %r951};
	shf.l.wrap.b32 	%r953, %r949, %r950, 30;
	shf.l.wrap.b32 	%r954, %r950, %r949, 30;
	mov.b64 	%rd835, {%r954, %r953};
	xor.b64  	%rd836, %rd835, %rd834;
	shf.l.wrap.b32 	%r955, %r949, %r950, 25;
	shf.l.wrap.b32 	%r956, %r950, %r949, 25;
	mov.b64 	%rd837, {%r956, %r955};
	xor.b64  	%rd838, %rd836, %rd837;
	xor.b64  	%rd839, %rd820, %rd772;
	xor.b64  	%rd840, %rd820, %rd796;
	and.b64  	%rd841, %rd840, %rd839;
	xor.b64  	%rd842, %rd841, %rd820;
	add.s64 	%rd843, %rd832, %rd842;
	add.s64 	%rd844, %rd843, %rd838;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r957,%dummy}, %rd833;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r958}, %rd833;
	}
	shf.r.wrap.b32 	%r959, %r958, %r957, 14;
	shf.r.wrap.b32 	%r960, %r957, %r958, 14;
	mov.b64 	%rd845, {%r960, %r959};
	shf.r.wrap.b32 	%r961, %r958, %r957, 18;
	shf.r.wrap.b32 	%r962, %r957, %r958, 18;
	mov.b64 	%rd846, {%r962, %r961};
	xor.b64  	%rd847, %rd846, %rd845;
	shf.l.wrap.b32 	%r963, %r957, %r958, 23;
	shf.l.wrap.b32 	%r964, %r958, %r957, 23;
	mov.b64 	%rd848, {%r964, %r963};
	xor.b64  	%rd849, %rd847, %rd848;
	xor.b64  	%rd850, %rd809, %rd785;
	and.b64  	%rd851, %rd833, %rd850;
	xor.b64  	%rd852, %rd851, %rd785;
	add.s64 	%rd853, %rd761, %rd484;
	ld.const.u64 	%rd13006, [k_sha512+120];
	add.s64 	%rd854, %rd853, %rd13006;
	add.s64 	%rd855, %rd854, %rd852;
	add.s64 	%rd856, %rd855, %rd849;
	add.s64 	%rd857, %rd856, %rd772;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r965,%dummy}, %rd844;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r966}, %rd844;
	}
	shf.r.wrap.b32 	%r967, %r966, %r965, 28;
	shf.r.wrap.b32 	%r968, %r965, %r966, 28;
	mov.b64 	%rd858, {%r968, %r967};
	shf.l.wrap.b32 	%r969, %r965, %r966, 30;
	shf.l.wrap.b32 	%r970, %r966, %r965, 30;
	mov.b64 	%rd859, {%r970, %r969};
	xor.b64  	%rd860, %rd859, %rd858;
	shf.l.wrap.b32 	%r971, %r965, %r966, 25;
	shf.l.wrap.b32 	%r972, %r966, %r965, 25;
	mov.b64 	%rd861, {%r972, %r971};
	xor.b64  	%rd862, %rd860, %rd861;
	xor.b64  	%rd863, %rd844, %rd796;
	xor.b64  	%rd864, %rd844, %rd820;
	and.b64  	%rd865, %rd864, %rd863;
	xor.b64  	%rd866, %rd865, %rd844;
	add.s64 	%rd867, %rd856, %rd866;
	add.s64 	%rd868, %rd867, %rd862;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r973,%dummy}, %rd483;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r974}, %rd483;
	}
	shf.r.wrap.b32 	%r975, %r974, %r973, 19;
	shf.r.wrap.b32 	%r976, %r973, %r974, 19;
	mov.b64 	%rd869, {%r976, %r975};
	shf.l.wrap.b32 	%r977, %r973, %r974, 3;
	shf.l.wrap.b32 	%r978, %r974, %r973, 3;
	mov.b64 	%rd870, {%r978, %r977};
	shr.u64 	%rd871, %rd483, 6;
	xor.b64  	%rd872, %rd869, %rd871;
	xor.b64  	%rd873, %rd872, %rd870;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r979,%dummy}, %rd470;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r980}, %rd470;
	}
	shf.r.wrap.b32 	%r981, %r980, %r979, 1;
	shf.r.wrap.b32 	%r982, %r979, %r980, 1;
	mov.b64 	%rd874, {%r982, %r981};
	shf.r.wrap.b32 	%r983, %r980, %r979, 8;
	shf.r.wrap.b32 	%r984, %r979, %r980, 8;
	mov.b64 	%rd875, {%r984, %r983};
	shr.u64 	%rd876, %rd470, 7;
	xor.b64  	%rd877, %rd874, %rd876;
	xor.b64  	%rd878, %rd877, %rd875;
	add.s64 	%rd879, %rd478, %rd469;
	add.s64 	%rd880, %rd879, %rd873;
	add.s64 	%rd881, %rd880, %rd878;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r985,%dummy}, %rd484;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r986}, %rd484;
	}
	shf.r.wrap.b32 	%r987, %r986, %r985, 19;
	shf.r.wrap.b32 	%r988, %r985, %r986, 19;
	mov.b64 	%rd882, {%r988, %r987};
	shf.l.wrap.b32 	%r989, %r985, %r986, 3;
	shf.l.wrap.b32 	%r990, %r986, %r985, 3;
	mov.b64 	%rd883, {%r990, %r989};
	shr.u64 	%rd884, %rd484, 6;
	xor.b64  	%rd885, %rd882, %rd884;
	xor.b64  	%rd886, %rd885, %rd883;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r991,%dummy}, %rd471;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r992}, %rd471;
	}
	shf.r.wrap.b32 	%r993, %r992, %r991, 1;
	shf.r.wrap.b32 	%r994, %r991, %r992, 1;
	mov.b64 	%rd887, {%r994, %r993};
	shf.r.wrap.b32 	%r995, %r992, %r991, 8;
	shf.r.wrap.b32 	%r996, %r991, %r992, 8;
	mov.b64 	%rd888, {%r996, %r995};
	shr.u64 	%rd889, %rd471, 7;
	xor.b64  	%rd890, %rd887, %rd889;
	xor.b64  	%rd891, %rd890, %rd888;
	add.s64 	%rd892, %rd479, %rd470;
	add.s64 	%rd893, %rd892, %rd886;
	add.s64 	%rd894, %rd893, %rd891;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r997,%dummy}, %rd881;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r998}, %rd881;
	}
	shf.r.wrap.b32 	%r999, %r998, %r997, 19;
	shf.r.wrap.b32 	%r1000, %r997, %r998, 19;
	mov.b64 	%rd895, {%r1000, %r999};
	shf.l.wrap.b32 	%r1001, %r997, %r998, 3;
	shf.l.wrap.b32 	%r1002, %r998, %r997, 3;
	mov.b64 	%rd896, {%r1002, %r1001};
	shr.u64 	%rd897, %rd881, 6;
	xor.b64  	%rd898, %rd895, %rd897;
	xor.b64  	%rd899, %rd898, %rd896;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1003,%dummy}, %rd472;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1004}, %rd472;
	}
	shf.r.wrap.b32 	%r1005, %r1004, %r1003, 1;
	shf.r.wrap.b32 	%r1006, %r1003, %r1004, 1;
	mov.b64 	%rd900, {%r1006, %r1005};
	shf.r.wrap.b32 	%r1007, %r1004, %r1003, 8;
	shf.r.wrap.b32 	%r1008, %r1003, %r1004, 8;
	mov.b64 	%rd901, {%r1008, %r1007};
	shr.u64 	%rd902, %rd472, 7;
	xor.b64  	%rd903, %rd900, %rd902;
	xor.b64  	%rd904, %rd903, %rd901;
	add.s64 	%rd905, %rd480, %rd471;
	add.s64 	%rd906, %rd905, %rd899;
	add.s64 	%rd907, %rd906, %rd904;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1009,%dummy}, %rd894;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1010}, %rd894;
	}
	shf.r.wrap.b32 	%r1011, %r1010, %r1009, 19;
	shf.r.wrap.b32 	%r1012, %r1009, %r1010, 19;
	mov.b64 	%rd908, {%r1012, %r1011};
	shf.l.wrap.b32 	%r1013, %r1009, %r1010, 3;
	shf.l.wrap.b32 	%r1014, %r1010, %r1009, 3;
	mov.b64 	%rd909, {%r1014, %r1013};
	shr.u64 	%rd910, %rd894, 6;
	xor.b64  	%rd911, %rd908, %rd910;
	xor.b64  	%rd912, %rd911, %rd909;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1015,%dummy}, %rd473;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1016}, %rd473;
	}
	shf.r.wrap.b32 	%r1017, %r1016, %r1015, 1;
	shf.r.wrap.b32 	%r1018, %r1015, %r1016, 1;
	mov.b64 	%rd913, {%r1018, %r1017};
	shf.r.wrap.b32 	%r1019, %r1016, %r1015, 8;
	shf.r.wrap.b32 	%r1020, %r1015, %r1016, 8;
	mov.b64 	%rd914, {%r1020, %r1019};
	shr.u64 	%rd915, %rd473, 7;
	xor.b64  	%rd916, %rd913, %rd915;
	xor.b64  	%rd917, %rd916, %rd914;
	add.s64 	%rd918, %rd481, %rd472;
	add.s64 	%rd919, %rd918, %rd912;
	add.s64 	%rd920, %rd919, %rd917;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1021,%dummy}, %rd907;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1022}, %rd907;
	}
	shf.r.wrap.b32 	%r1023, %r1022, %r1021, 19;
	shf.r.wrap.b32 	%r1024, %r1021, %r1022, 19;
	mov.b64 	%rd921, {%r1024, %r1023};
	shf.l.wrap.b32 	%r1025, %r1021, %r1022, 3;
	shf.l.wrap.b32 	%r1026, %r1022, %r1021, 3;
	mov.b64 	%rd922, {%r1026, %r1025};
	shr.u64 	%rd923, %rd907, 6;
	xor.b64  	%rd924, %rd921, %rd923;
	xor.b64  	%rd925, %rd924, %rd922;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1027,%dummy}, %rd474;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1028}, %rd474;
	}
	shf.r.wrap.b32 	%r1029, %r1028, %r1027, 1;
	shf.r.wrap.b32 	%r1030, %r1027, %r1028, 1;
	mov.b64 	%rd926, {%r1030, %r1029};
	shf.r.wrap.b32 	%r1031, %r1028, %r1027, 8;
	shf.r.wrap.b32 	%r1032, %r1027, %r1028, 8;
	mov.b64 	%rd927, {%r1032, %r1031};
	shr.u64 	%rd928, %rd474, 7;
	xor.b64  	%rd929, %rd926, %rd928;
	xor.b64  	%rd930, %rd929, %rd927;
	add.s64 	%rd931, %rd482, %rd473;
	add.s64 	%rd932, %rd931, %rd925;
	add.s64 	%rd933, %rd932, %rd930;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1033,%dummy}, %rd920;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1034}, %rd920;
	}
	shf.r.wrap.b32 	%r1035, %r1034, %r1033, 19;
	shf.r.wrap.b32 	%r1036, %r1033, %r1034, 19;
	mov.b64 	%rd934, {%r1036, %r1035};
	shf.l.wrap.b32 	%r1037, %r1033, %r1034, 3;
	shf.l.wrap.b32 	%r1038, %r1034, %r1033, 3;
	mov.b64 	%rd935, {%r1038, %r1037};
	shr.u64 	%rd936, %rd920, 6;
	xor.b64  	%rd937, %rd934, %rd936;
	xor.b64  	%rd938, %rd937, %rd935;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1039,%dummy}, %rd475;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1040}, %rd475;
	}
	shf.r.wrap.b32 	%r1041, %r1040, %r1039, 1;
	shf.r.wrap.b32 	%r1042, %r1039, %r1040, 1;
	mov.b64 	%rd939, {%r1042, %r1041};
	shf.r.wrap.b32 	%r1043, %r1040, %r1039, 8;
	shf.r.wrap.b32 	%r1044, %r1039, %r1040, 8;
	mov.b64 	%rd940, {%r1044, %r1043};
	shr.u64 	%rd941, %rd475, 7;
	xor.b64  	%rd942, %rd939, %rd941;
	xor.b64  	%rd943, %rd942, %rd940;
	add.s64 	%rd944, %rd483, %rd474;
	add.s64 	%rd945, %rd944, %rd938;
	add.s64 	%rd946, %rd945, %rd943;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1045,%dummy}, %rd933;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1046}, %rd933;
	}
	shf.r.wrap.b32 	%r1047, %r1046, %r1045, 19;
	shf.r.wrap.b32 	%r1048, %r1045, %r1046, 19;
	mov.b64 	%rd947, {%r1048, %r1047};
	shf.l.wrap.b32 	%r1049, %r1045, %r1046, 3;
	shf.l.wrap.b32 	%r1050, %r1046, %r1045, 3;
	mov.b64 	%rd948, {%r1050, %r1049};
	shr.u64 	%rd949, %rd933, 6;
	xor.b64  	%rd950, %rd947, %rd949;
	xor.b64  	%rd951, %rd950, %rd948;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1051,%dummy}, %rd476;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1052}, %rd476;
	}
	shf.r.wrap.b32 	%r1053, %r1052, %r1051, 1;
	shf.r.wrap.b32 	%r1054, %r1051, %r1052, 1;
	mov.b64 	%rd952, {%r1054, %r1053};
	shf.r.wrap.b32 	%r1055, %r1052, %r1051, 8;
	shf.r.wrap.b32 	%r1056, %r1051, %r1052, 8;
	mov.b64 	%rd953, {%r1056, %r1055};
	shr.u64 	%rd954, %rd476, 7;
	xor.b64  	%rd955, %rd952, %rd954;
	xor.b64  	%rd956, %rd955, %rd953;
	add.s64 	%rd957, %rd484, %rd475;
	add.s64 	%rd958, %rd957, %rd951;
	add.s64 	%rd959, %rd958, %rd956;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1057,%dummy}, %rd946;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1058}, %rd946;
	}
	shf.r.wrap.b32 	%r1059, %r1058, %r1057, 19;
	shf.r.wrap.b32 	%r1060, %r1057, %r1058, 19;
	mov.b64 	%rd960, {%r1060, %r1059};
	shf.l.wrap.b32 	%r1061, %r1057, %r1058, 3;
	shf.l.wrap.b32 	%r1062, %r1058, %r1057, 3;
	mov.b64 	%rd961, {%r1062, %r1061};
	shr.u64 	%rd962, %rd946, 6;
	xor.b64  	%rd963, %rd960, %rd962;
	xor.b64  	%rd964, %rd963, %rd961;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1063,%dummy}, %rd477;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1064}, %rd477;
	}
	shf.r.wrap.b32 	%r1065, %r1064, %r1063, 1;
	shf.r.wrap.b32 	%r1066, %r1063, %r1064, 1;
	mov.b64 	%rd965, {%r1066, %r1065};
	shf.r.wrap.b32 	%r1067, %r1064, %r1063, 8;
	shf.r.wrap.b32 	%r1068, %r1063, %r1064, 8;
	mov.b64 	%rd966, {%r1068, %r1067};
	shr.u64 	%rd967, %rd477, 7;
	xor.b64  	%rd968, %rd965, %rd967;
	xor.b64  	%rd969, %rd968, %rd966;
	add.s64 	%rd970, %rd881, %rd476;
	add.s64 	%rd971, %rd970, %rd964;
	add.s64 	%rd972, %rd971, %rd969;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1069,%dummy}, %rd959;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1070}, %rd959;
	}
	shf.r.wrap.b32 	%r1071, %r1070, %r1069, 19;
	shf.r.wrap.b32 	%r1072, %r1069, %r1070, 19;
	mov.b64 	%rd973, {%r1072, %r1071};
	shf.l.wrap.b32 	%r1073, %r1069, %r1070, 3;
	shf.l.wrap.b32 	%r1074, %r1070, %r1069, 3;
	mov.b64 	%rd974, {%r1074, %r1073};
	shr.u64 	%rd975, %rd959, 6;
	xor.b64  	%rd976, %rd973, %rd975;
	xor.b64  	%rd977, %rd976, %rd974;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1075,%dummy}, %rd478;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1076}, %rd478;
	}
	shf.r.wrap.b32 	%r1077, %r1076, %r1075, 1;
	shf.r.wrap.b32 	%r1078, %r1075, %r1076, 1;
	mov.b64 	%rd978, {%r1078, %r1077};
	shf.r.wrap.b32 	%r1079, %r1076, %r1075, 8;
	shf.r.wrap.b32 	%r1080, %r1075, %r1076, 8;
	mov.b64 	%rd979, {%r1080, %r1079};
	shr.u64 	%rd980, %rd478, 7;
	xor.b64  	%rd981, %rd978, %rd980;
	xor.b64  	%rd982, %rd981, %rd979;
	add.s64 	%rd983, %rd894, %rd477;
	add.s64 	%rd984, %rd983, %rd977;
	add.s64 	%rd985, %rd984, %rd982;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1081,%dummy}, %rd972;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1082}, %rd972;
	}
	shf.r.wrap.b32 	%r1083, %r1082, %r1081, 19;
	shf.r.wrap.b32 	%r1084, %r1081, %r1082, 19;
	mov.b64 	%rd986, {%r1084, %r1083};
	shf.l.wrap.b32 	%r1085, %r1081, %r1082, 3;
	shf.l.wrap.b32 	%r1086, %r1082, %r1081, 3;
	mov.b64 	%rd987, {%r1086, %r1085};
	shr.u64 	%rd988, %rd972, 6;
	xor.b64  	%rd989, %rd986, %rd988;
	xor.b64  	%rd990, %rd989, %rd987;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1087,%dummy}, %rd479;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1088}, %rd479;
	}
	shf.r.wrap.b32 	%r1089, %r1088, %r1087, 1;
	shf.r.wrap.b32 	%r1090, %r1087, %r1088, 1;
	mov.b64 	%rd991, {%r1090, %r1089};
	shf.r.wrap.b32 	%r1091, %r1088, %r1087, 8;
	shf.r.wrap.b32 	%r1092, %r1087, %r1088, 8;
	mov.b64 	%rd992, {%r1092, %r1091};
	shr.u64 	%rd993, %rd479, 7;
	xor.b64  	%rd994, %rd991, %rd993;
	xor.b64  	%rd995, %rd994, %rd992;
	add.s64 	%rd996, %rd907, %rd478;
	add.s64 	%rd997, %rd996, %rd990;
	add.s64 	%rd998, %rd997, %rd995;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1093,%dummy}, %rd985;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1094}, %rd985;
	}
	shf.r.wrap.b32 	%r1095, %r1094, %r1093, 19;
	shf.r.wrap.b32 	%r1096, %r1093, %r1094, 19;
	mov.b64 	%rd999, {%r1096, %r1095};
	shf.l.wrap.b32 	%r1097, %r1093, %r1094, 3;
	shf.l.wrap.b32 	%r1098, %r1094, %r1093, 3;
	mov.b64 	%rd1000, {%r1098, %r1097};
	shr.u64 	%rd1001, %rd985, 6;
	xor.b64  	%rd1002, %rd999, %rd1001;
	xor.b64  	%rd1003, %rd1002, %rd1000;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1099,%dummy}, %rd480;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1100}, %rd480;
	}
	shf.r.wrap.b32 	%r1101, %r1100, %r1099, 1;
	shf.r.wrap.b32 	%r1102, %r1099, %r1100, 1;
	mov.b64 	%rd1004, {%r1102, %r1101};
	shf.r.wrap.b32 	%r1103, %r1100, %r1099, 8;
	shf.r.wrap.b32 	%r1104, %r1099, %r1100, 8;
	mov.b64 	%rd1005, {%r1104, %r1103};
	shr.u64 	%rd1006, %rd480, 7;
	xor.b64  	%rd1007, %rd1004, %rd1006;
	xor.b64  	%rd1008, %rd1007, %rd1005;
	add.s64 	%rd1009, %rd920, %rd479;
	add.s64 	%rd1010, %rd1009, %rd1003;
	add.s64 	%rd1011, %rd1010, %rd1008;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1105,%dummy}, %rd998;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1106}, %rd998;
	}
	shf.r.wrap.b32 	%r1107, %r1106, %r1105, 19;
	shf.r.wrap.b32 	%r1108, %r1105, %r1106, 19;
	mov.b64 	%rd1012, {%r1108, %r1107};
	shf.l.wrap.b32 	%r1109, %r1105, %r1106, 3;
	shf.l.wrap.b32 	%r1110, %r1106, %r1105, 3;
	mov.b64 	%rd1013, {%r1110, %r1109};
	shr.u64 	%rd1014, %rd998, 6;
	xor.b64  	%rd1015, %rd1012, %rd1014;
	xor.b64  	%rd1016, %rd1015, %rd1013;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1111,%dummy}, %rd481;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1112}, %rd481;
	}
	shf.r.wrap.b32 	%r1113, %r1112, %r1111, 1;
	shf.r.wrap.b32 	%r1114, %r1111, %r1112, 1;
	mov.b64 	%rd1017, {%r1114, %r1113};
	shf.r.wrap.b32 	%r1115, %r1112, %r1111, 8;
	shf.r.wrap.b32 	%r1116, %r1111, %r1112, 8;
	mov.b64 	%rd1018, {%r1116, %r1115};
	shr.u64 	%rd1019, %rd481, 7;
	xor.b64  	%rd1020, %rd1017, %rd1019;
	xor.b64  	%rd1021, %rd1020, %rd1018;
	add.s64 	%rd1022, %rd933, %rd480;
	add.s64 	%rd1023, %rd1022, %rd1016;
	add.s64 	%rd1024, %rd1023, %rd1021;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1117,%dummy}, %rd1011;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1118}, %rd1011;
	}
	shf.r.wrap.b32 	%r1119, %r1118, %r1117, 19;
	shf.r.wrap.b32 	%r1120, %r1117, %r1118, 19;
	mov.b64 	%rd1025, {%r1120, %r1119};
	shf.l.wrap.b32 	%r1121, %r1117, %r1118, 3;
	shf.l.wrap.b32 	%r1122, %r1118, %r1117, 3;
	mov.b64 	%rd1026, {%r1122, %r1121};
	shr.u64 	%rd1027, %rd1011, 6;
	xor.b64  	%rd1028, %rd1025, %rd1027;
	xor.b64  	%rd1029, %rd1028, %rd1026;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1123,%dummy}, %rd482;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1124}, %rd482;
	}
	shf.r.wrap.b32 	%r1125, %r1124, %r1123, 1;
	shf.r.wrap.b32 	%r1126, %r1123, %r1124, 1;
	mov.b64 	%rd1030, {%r1126, %r1125};
	shf.r.wrap.b32 	%r1127, %r1124, %r1123, 8;
	shf.r.wrap.b32 	%r1128, %r1123, %r1124, 8;
	mov.b64 	%rd1031, {%r1128, %r1127};
	shr.u64 	%rd1032, %rd482, 7;
	xor.b64  	%rd1033, %rd1030, %rd1032;
	xor.b64  	%rd1034, %rd1033, %rd1031;
	add.s64 	%rd1035, %rd946, %rd481;
	add.s64 	%rd1036, %rd1035, %rd1029;
	add.s64 	%rd1037, %rd1036, %rd1034;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1129,%dummy}, %rd1024;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1130}, %rd1024;
	}
	shf.r.wrap.b32 	%r1131, %r1130, %r1129, 19;
	shf.r.wrap.b32 	%r1132, %r1129, %r1130, 19;
	mov.b64 	%rd1038, {%r1132, %r1131};
	shf.l.wrap.b32 	%r1133, %r1129, %r1130, 3;
	shf.l.wrap.b32 	%r1134, %r1130, %r1129, 3;
	mov.b64 	%rd1039, {%r1134, %r1133};
	shr.u64 	%rd1040, %rd1024, 6;
	xor.b64  	%rd1041, %rd1038, %rd1040;
	xor.b64  	%rd1042, %rd1041, %rd1039;
	shf.r.wrap.b32 	%r1135, %r974, %r973, 1;
	shf.r.wrap.b32 	%r1136, %r973, %r974, 1;
	mov.b64 	%rd1043, {%r1136, %r1135};
	shf.r.wrap.b32 	%r1137, %r974, %r973, 8;
	shf.r.wrap.b32 	%r1138, %r973, %r974, 8;
	mov.b64 	%rd1044, {%r1138, %r1137};
	shr.u64 	%rd1045, %rd483, 7;
	xor.b64  	%rd1046, %rd1043, %rd1045;
	xor.b64  	%rd1047, %rd1046, %rd1044;
	add.s64 	%rd1048, %rd959, %rd482;
	add.s64 	%rd1049, %rd1048, %rd1042;
	add.s64 	%rd1050, %rd1049, %rd1047;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1139,%dummy}, %rd1037;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1140}, %rd1037;
	}
	shf.r.wrap.b32 	%r1141, %r1140, %r1139, 19;
	shf.r.wrap.b32 	%r1142, %r1139, %r1140, 19;
	mov.b64 	%rd1051, {%r1142, %r1141};
	shf.l.wrap.b32 	%r1143, %r1139, %r1140, 3;
	shf.l.wrap.b32 	%r1144, %r1140, %r1139, 3;
	mov.b64 	%rd1052, {%r1144, %r1143};
	shr.u64 	%rd1053, %rd1037, 6;
	xor.b64  	%rd1054, %rd1051, %rd1053;
	xor.b64  	%rd1055, %rd1054, %rd1052;
	shf.r.wrap.b32 	%r1145, %r986, %r985, 1;
	shf.r.wrap.b32 	%r1146, %r985, %r986, 1;
	mov.b64 	%rd1056, {%r1146, %r1145};
	shf.r.wrap.b32 	%r1147, %r986, %r985, 8;
	shf.r.wrap.b32 	%r1148, %r985, %r986, 8;
	mov.b64 	%rd1057, {%r1148, %r1147};
	shr.u64 	%rd1058, %rd484, 7;
	xor.b64  	%rd1059, %rd1056, %rd1058;
	xor.b64  	%rd1060, %rd1059, %rd1057;
	add.s64 	%rd1061, %rd972, %rd483;
	add.s64 	%rd1062, %rd1061, %rd1055;
	add.s64 	%rd1063, %rd1062, %rd1060;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1149,%dummy}, %rd1050;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1150}, %rd1050;
	}
	shf.r.wrap.b32 	%r1151, %r1150, %r1149, 19;
	shf.r.wrap.b32 	%r1152, %r1149, %r1150, 19;
	mov.b64 	%rd1064, {%r1152, %r1151};
	shf.l.wrap.b32 	%r1153, %r1149, %r1150, 3;
	shf.l.wrap.b32 	%r1154, %r1150, %r1149, 3;
	mov.b64 	%rd1065, {%r1154, %r1153};
	shr.u64 	%rd1066, %rd1050, 6;
	xor.b64  	%rd1067, %rd1064, %rd1066;
	xor.b64  	%rd1068, %rd1067, %rd1065;
	shf.r.wrap.b32 	%r1155, %r998, %r997, 1;
	shf.r.wrap.b32 	%r1156, %r997, %r998, 1;
	mov.b64 	%rd1069, {%r1156, %r1155};
	shf.r.wrap.b32 	%r1157, %r998, %r997, 8;
	shf.r.wrap.b32 	%r1158, %r997, %r998, 8;
	mov.b64 	%rd1070, {%r1158, %r1157};
	shr.u64 	%rd1071, %rd881, 7;
	xor.b64  	%rd1072, %rd1069, %rd1071;
	xor.b64  	%rd1073, %rd1072, %rd1070;
	add.s64 	%rd1074, %rd985, %rd484;
	add.s64 	%rd1075, %rd1074, %rd1068;
	add.s64 	%rd1076, %rd1075, %rd1073;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1159,%dummy}, %rd857;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1160}, %rd857;
	}
	shf.r.wrap.b32 	%r1161, %r1160, %r1159, 14;
	shf.r.wrap.b32 	%r1162, %r1159, %r1160, 14;
	mov.b64 	%rd1077, {%r1162, %r1161};
	shf.r.wrap.b32 	%r1163, %r1160, %r1159, 18;
	shf.r.wrap.b32 	%r1164, %r1159, %r1160, 18;
	mov.b64 	%rd1078, {%r1164, %r1163};
	xor.b64  	%rd1079, %rd1078, %rd1077;
	shf.l.wrap.b32 	%r1165, %r1159, %r1160, 23;
	shf.l.wrap.b32 	%r1166, %r1160, %r1159, 23;
	mov.b64 	%rd1080, {%r1166, %r1165};
	xor.b64  	%rd1081, %rd1079, %rd1080;
	xor.b64  	%rd1082, %rd833, %rd809;
	and.b64  	%rd1083, %rd1082, %rd857;
	xor.b64  	%rd1084, %rd1083, %rd809;
	add.s64 	%rd1085, %rd1084, %rd785;
	add.s64 	%rd1086, %rd1085, %rd881;
	ld.const.u64 	%rd13005, [k_sha512+128];
	add.s64 	%rd1087, %rd1086, %rd13005;
	add.s64 	%rd1088, %rd1087, %rd1081;
	add.s64 	%rd1089, %rd1088, %rd796;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1167,%dummy}, %rd868;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1168}, %rd868;
	}
	shf.r.wrap.b32 	%r1169, %r1168, %r1167, 28;
	shf.r.wrap.b32 	%r1170, %r1167, %r1168, 28;
	mov.b64 	%rd1090, {%r1170, %r1169};
	shf.l.wrap.b32 	%r1171, %r1167, %r1168, 30;
	shf.l.wrap.b32 	%r1172, %r1168, %r1167, 30;
	mov.b64 	%rd1091, {%r1172, %r1171};
	xor.b64  	%rd1092, %rd1091, %rd1090;
	shf.l.wrap.b32 	%r1173, %r1167, %r1168, 25;
	shf.l.wrap.b32 	%r1174, %r1168, %r1167, 25;
	mov.b64 	%rd1093, {%r1174, %r1173};
	xor.b64  	%rd1094, %rd1092, %rd1093;
	xor.b64  	%rd1095, %rd868, %rd820;
	xor.b64  	%rd1096, %rd868, %rd844;
	and.b64  	%rd1097, %rd1096, %rd1095;
	xor.b64  	%rd1098, %rd1097, %rd868;
	add.s64 	%rd1099, %rd1088, %rd1098;
	add.s64 	%rd1100, %rd1099, %rd1094;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1175,%dummy}, %rd1089;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1176}, %rd1089;
	}
	shf.r.wrap.b32 	%r1177, %r1176, %r1175, 14;
	shf.r.wrap.b32 	%r1178, %r1175, %r1176, 14;
	mov.b64 	%rd1101, {%r1178, %r1177};
	shf.r.wrap.b32 	%r1179, %r1176, %r1175, 18;
	shf.r.wrap.b32 	%r1180, %r1175, %r1176, 18;
	mov.b64 	%rd1102, {%r1180, %r1179};
	xor.b64  	%rd1103, %rd1102, %rd1101;
	shf.l.wrap.b32 	%r1181, %r1175, %r1176, 23;
	shf.l.wrap.b32 	%r1182, %r1176, %r1175, 23;
	mov.b64 	%rd1104, {%r1182, %r1181};
	xor.b64  	%rd1105, %rd1103, %rd1104;
	xor.b64  	%rd1106, %rd857, %rd833;
	and.b64  	%rd1107, %rd1089, %rd1106;
	xor.b64  	%rd1108, %rd1107, %rd833;
	add.s64 	%rd1109, %rd894, %rd809;
	ld.const.u64 	%rd13004, [k_sha512+136];
	add.s64 	%rd1110, %rd1109, %rd13004;
	add.s64 	%rd1111, %rd1110, %rd1108;
	add.s64 	%rd1112, %rd1111, %rd1105;
	add.s64 	%rd1113, %rd1112, %rd820;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1183,%dummy}, %rd1100;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1184}, %rd1100;
	}
	shf.r.wrap.b32 	%r1185, %r1184, %r1183, 28;
	shf.r.wrap.b32 	%r1186, %r1183, %r1184, 28;
	mov.b64 	%rd1114, {%r1186, %r1185};
	shf.l.wrap.b32 	%r1187, %r1183, %r1184, 30;
	shf.l.wrap.b32 	%r1188, %r1184, %r1183, 30;
	mov.b64 	%rd1115, {%r1188, %r1187};
	xor.b64  	%rd1116, %rd1115, %rd1114;
	shf.l.wrap.b32 	%r1189, %r1183, %r1184, 25;
	shf.l.wrap.b32 	%r1190, %r1184, %r1183, 25;
	mov.b64 	%rd1117, {%r1190, %r1189};
	xor.b64  	%rd1118, %rd1116, %rd1117;
	xor.b64  	%rd1119, %rd1100, %rd844;
	xor.b64  	%rd1120, %rd1100, %rd868;
	and.b64  	%rd1121, %rd1120, %rd1119;
	xor.b64  	%rd1122, %rd1121, %rd1100;
	add.s64 	%rd1123, %rd1112, %rd1122;
	add.s64 	%rd1124, %rd1123, %rd1118;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1191,%dummy}, %rd1113;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1192}, %rd1113;
	}
	shf.r.wrap.b32 	%r1193, %r1192, %r1191, 14;
	shf.r.wrap.b32 	%r1194, %r1191, %r1192, 14;
	mov.b64 	%rd1125, {%r1194, %r1193};
	shf.r.wrap.b32 	%r1195, %r1192, %r1191, 18;
	shf.r.wrap.b32 	%r1196, %r1191, %r1192, 18;
	mov.b64 	%rd1126, {%r1196, %r1195};
	xor.b64  	%rd1127, %rd1126, %rd1125;
	shf.l.wrap.b32 	%r1197, %r1191, %r1192, 23;
	shf.l.wrap.b32 	%r1198, %r1192, %r1191, 23;
	mov.b64 	%rd1128, {%r1198, %r1197};
	xor.b64  	%rd1129, %rd1127, %rd1128;
	xor.b64  	%rd1130, %rd1089, %rd857;
	and.b64  	%rd1131, %rd1113, %rd1130;
	xor.b64  	%rd1132, %rd1131, %rd857;
	add.s64 	%rd1133, %rd907, %rd833;
	ld.const.u64 	%rd13003, [k_sha512+144];
	add.s64 	%rd1134, %rd1133, %rd13003;
	add.s64 	%rd1135, %rd1134, %rd1132;
	add.s64 	%rd1136, %rd1135, %rd1129;
	add.s64 	%rd1137, %rd1136, %rd844;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1199,%dummy}, %rd1124;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1200}, %rd1124;
	}
	shf.r.wrap.b32 	%r1201, %r1200, %r1199, 28;
	shf.r.wrap.b32 	%r1202, %r1199, %r1200, 28;
	mov.b64 	%rd1138, {%r1202, %r1201};
	shf.l.wrap.b32 	%r1203, %r1199, %r1200, 30;
	shf.l.wrap.b32 	%r1204, %r1200, %r1199, 30;
	mov.b64 	%rd1139, {%r1204, %r1203};
	xor.b64  	%rd1140, %rd1139, %rd1138;
	shf.l.wrap.b32 	%r1205, %r1199, %r1200, 25;
	shf.l.wrap.b32 	%r1206, %r1200, %r1199, 25;
	mov.b64 	%rd1141, {%r1206, %r1205};
	xor.b64  	%rd1142, %rd1140, %rd1141;
	xor.b64  	%rd1143, %rd1124, %rd868;
	xor.b64  	%rd1144, %rd1124, %rd1100;
	and.b64  	%rd1145, %rd1144, %rd1143;
	xor.b64  	%rd1146, %rd1145, %rd1124;
	add.s64 	%rd1147, %rd1136, %rd1146;
	add.s64 	%rd1148, %rd1147, %rd1142;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1207,%dummy}, %rd1137;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1208}, %rd1137;
	}
	shf.r.wrap.b32 	%r1209, %r1208, %r1207, 14;
	shf.r.wrap.b32 	%r1210, %r1207, %r1208, 14;
	mov.b64 	%rd1149, {%r1210, %r1209};
	shf.r.wrap.b32 	%r1211, %r1208, %r1207, 18;
	shf.r.wrap.b32 	%r1212, %r1207, %r1208, 18;
	mov.b64 	%rd1150, {%r1212, %r1211};
	xor.b64  	%rd1151, %rd1150, %rd1149;
	shf.l.wrap.b32 	%r1213, %r1207, %r1208, 23;
	shf.l.wrap.b32 	%r1214, %r1208, %r1207, 23;
	mov.b64 	%rd1152, {%r1214, %r1213};
	xor.b64  	%rd1153, %rd1151, %rd1152;
	xor.b64  	%rd1154, %rd1113, %rd1089;
	and.b64  	%rd1155, %rd1137, %rd1154;
	xor.b64  	%rd1156, %rd1155, %rd1089;
	add.s64 	%rd1157, %rd920, %rd857;
	ld.const.u64 	%rd13002, [k_sha512+152];
	add.s64 	%rd1158, %rd1157, %rd13002;
	add.s64 	%rd1159, %rd1158, %rd1156;
	add.s64 	%rd1160, %rd1159, %rd1153;
	add.s64 	%rd1161, %rd1160, %rd868;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1215,%dummy}, %rd1148;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1216}, %rd1148;
	}
	shf.r.wrap.b32 	%r1217, %r1216, %r1215, 28;
	shf.r.wrap.b32 	%r1218, %r1215, %r1216, 28;
	mov.b64 	%rd1162, {%r1218, %r1217};
	shf.l.wrap.b32 	%r1219, %r1215, %r1216, 30;
	shf.l.wrap.b32 	%r1220, %r1216, %r1215, 30;
	mov.b64 	%rd1163, {%r1220, %r1219};
	xor.b64  	%rd1164, %rd1163, %rd1162;
	shf.l.wrap.b32 	%r1221, %r1215, %r1216, 25;
	shf.l.wrap.b32 	%r1222, %r1216, %r1215, 25;
	mov.b64 	%rd1165, {%r1222, %r1221};
	xor.b64  	%rd1166, %rd1164, %rd1165;
	xor.b64  	%rd1167, %rd1148, %rd1100;
	xor.b64  	%rd1168, %rd1148, %rd1124;
	and.b64  	%rd1169, %rd1168, %rd1167;
	xor.b64  	%rd1170, %rd1169, %rd1148;
	add.s64 	%rd1171, %rd1160, %rd1170;
	add.s64 	%rd1172, %rd1171, %rd1166;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1223,%dummy}, %rd1161;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1224}, %rd1161;
	}
	shf.r.wrap.b32 	%r1225, %r1224, %r1223, 14;
	shf.r.wrap.b32 	%r1226, %r1223, %r1224, 14;
	mov.b64 	%rd1173, {%r1226, %r1225};
	shf.r.wrap.b32 	%r1227, %r1224, %r1223, 18;
	shf.r.wrap.b32 	%r1228, %r1223, %r1224, 18;
	mov.b64 	%rd1174, {%r1228, %r1227};
	xor.b64  	%rd1175, %rd1174, %rd1173;
	shf.l.wrap.b32 	%r1229, %r1223, %r1224, 23;
	shf.l.wrap.b32 	%r1230, %r1224, %r1223, 23;
	mov.b64 	%rd1176, {%r1230, %r1229};
	xor.b64  	%rd1177, %rd1175, %rd1176;
	xor.b64  	%rd1178, %rd1137, %rd1113;
	and.b64  	%rd1179, %rd1161, %rd1178;
	xor.b64  	%rd1180, %rd1179, %rd1113;
	add.s64 	%rd1181, %rd1089, %rd933;
	ld.const.u64 	%rd13001, [k_sha512+160];
	add.s64 	%rd1182, %rd1181, %rd13001;
	add.s64 	%rd1183, %rd1182, %rd1180;
	add.s64 	%rd1184, %rd1183, %rd1177;
	add.s64 	%rd1185, %rd1184, %rd1100;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1231,%dummy}, %rd1172;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1232}, %rd1172;
	}
	shf.r.wrap.b32 	%r1233, %r1232, %r1231, 28;
	shf.r.wrap.b32 	%r1234, %r1231, %r1232, 28;
	mov.b64 	%rd1186, {%r1234, %r1233};
	shf.l.wrap.b32 	%r1235, %r1231, %r1232, 30;
	shf.l.wrap.b32 	%r1236, %r1232, %r1231, 30;
	mov.b64 	%rd1187, {%r1236, %r1235};
	xor.b64  	%rd1188, %rd1187, %rd1186;
	shf.l.wrap.b32 	%r1237, %r1231, %r1232, 25;
	shf.l.wrap.b32 	%r1238, %r1232, %r1231, 25;
	mov.b64 	%rd1189, {%r1238, %r1237};
	xor.b64  	%rd1190, %rd1188, %rd1189;
	xor.b64  	%rd1191, %rd1172, %rd1124;
	xor.b64  	%rd1192, %rd1172, %rd1148;
	and.b64  	%rd1193, %rd1192, %rd1191;
	xor.b64  	%rd1194, %rd1193, %rd1172;
	add.s64 	%rd1195, %rd1184, %rd1194;
	add.s64 	%rd1196, %rd1195, %rd1190;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1239,%dummy}, %rd1185;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1240}, %rd1185;
	}
	shf.r.wrap.b32 	%r1241, %r1240, %r1239, 14;
	shf.r.wrap.b32 	%r1242, %r1239, %r1240, 14;
	mov.b64 	%rd1197, {%r1242, %r1241};
	shf.r.wrap.b32 	%r1243, %r1240, %r1239, 18;
	shf.r.wrap.b32 	%r1244, %r1239, %r1240, 18;
	mov.b64 	%rd1198, {%r1244, %r1243};
	xor.b64  	%rd1199, %rd1198, %rd1197;
	shf.l.wrap.b32 	%r1245, %r1239, %r1240, 23;
	shf.l.wrap.b32 	%r1246, %r1240, %r1239, 23;
	mov.b64 	%rd1200, {%r1246, %r1245};
	xor.b64  	%rd1201, %rd1199, %rd1200;
	xor.b64  	%rd1202, %rd1161, %rd1137;
	and.b64  	%rd1203, %rd1185, %rd1202;
	xor.b64  	%rd1204, %rd1203, %rd1137;
	add.s64 	%rd1205, %rd1113, %rd946;
	ld.const.u64 	%rd13000, [k_sha512+168];
	add.s64 	%rd1206, %rd1205, %rd13000;
	add.s64 	%rd1207, %rd1206, %rd1204;
	add.s64 	%rd1208, %rd1207, %rd1201;
	add.s64 	%rd1209, %rd1208, %rd1124;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1247,%dummy}, %rd1196;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1248}, %rd1196;
	}
	shf.r.wrap.b32 	%r1249, %r1248, %r1247, 28;
	shf.r.wrap.b32 	%r1250, %r1247, %r1248, 28;
	mov.b64 	%rd1210, {%r1250, %r1249};
	shf.l.wrap.b32 	%r1251, %r1247, %r1248, 30;
	shf.l.wrap.b32 	%r1252, %r1248, %r1247, 30;
	mov.b64 	%rd1211, {%r1252, %r1251};
	xor.b64  	%rd1212, %rd1211, %rd1210;
	shf.l.wrap.b32 	%r1253, %r1247, %r1248, 25;
	shf.l.wrap.b32 	%r1254, %r1248, %r1247, 25;
	mov.b64 	%rd1213, {%r1254, %r1253};
	xor.b64  	%rd1214, %rd1212, %rd1213;
	xor.b64  	%rd1215, %rd1196, %rd1148;
	xor.b64  	%rd1216, %rd1196, %rd1172;
	and.b64  	%rd1217, %rd1216, %rd1215;
	xor.b64  	%rd1218, %rd1217, %rd1196;
	add.s64 	%rd1219, %rd1208, %rd1218;
	add.s64 	%rd1220, %rd1219, %rd1214;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1255,%dummy}, %rd1209;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1256}, %rd1209;
	}
	shf.r.wrap.b32 	%r1257, %r1256, %r1255, 14;
	shf.r.wrap.b32 	%r1258, %r1255, %r1256, 14;
	mov.b64 	%rd1221, {%r1258, %r1257};
	shf.r.wrap.b32 	%r1259, %r1256, %r1255, 18;
	shf.r.wrap.b32 	%r1260, %r1255, %r1256, 18;
	mov.b64 	%rd1222, {%r1260, %r1259};
	xor.b64  	%rd1223, %rd1222, %rd1221;
	shf.l.wrap.b32 	%r1261, %r1255, %r1256, 23;
	shf.l.wrap.b32 	%r1262, %r1256, %r1255, 23;
	mov.b64 	%rd1224, {%r1262, %r1261};
	xor.b64  	%rd1225, %rd1223, %rd1224;
	xor.b64  	%rd1226, %rd1185, %rd1161;
	and.b64  	%rd1227, %rd1209, %rd1226;
	xor.b64  	%rd1228, %rd1227, %rd1161;
	add.s64 	%rd1229, %rd1137, %rd959;
	ld.const.u64 	%rd12999, [k_sha512+176];
	add.s64 	%rd1230, %rd1229, %rd12999;
	add.s64 	%rd1231, %rd1230, %rd1228;
	add.s64 	%rd1232, %rd1231, %rd1225;
	add.s64 	%rd1233, %rd1232, %rd1148;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1263,%dummy}, %rd1220;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1264}, %rd1220;
	}
	shf.r.wrap.b32 	%r1265, %r1264, %r1263, 28;
	shf.r.wrap.b32 	%r1266, %r1263, %r1264, 28;
	mov.b64 	%rd1234, {%r1266, %r1265};
	shf.l.wrap.b32 	%r1267, %r1263, %r1264, 30;
	shf.l.wrap.b32 	%r1268, %r1264, %r1263, 30;
	mov.b64 	%rd1235, {%r1268, %r1267};
	xor.b64  	%rd1236, %rd1235, %rd1234;
	shf.l.wrap.b32 	%r1269, %r1263, %r1264, 25;
	shf.l.wrap.b32 	%r1270, %r1264, %r1263, 25;
	mov.b64 	%rd1237, {%r1270, %r1269};
	xor.b64  	%rd1238, %rd1236, %rd1237;
	xor.b64  	%rd1239, %rd1220, %rd1172;
	xor.b64  	%rd1240, %rd1220, %rd1196;
	and.b64  	%rd1241, %rd1240, %rd1239;
	xor.b64  	%rd1242, %rd1241, %rd1220;
	add.s64 	%rd1243, %rd1232, %rd1242;
	add.s64 	%rd1244, %rd1243, %rd1238;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1271,%dummy}, %rd1233;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1272}, %rd1233;
	}
	shf.r.wrap.b32 	%r1273, %r1272, %r1271, 14;
	shf.r.wrap.b32 	%r1274, %r1271, %r1272, 14;
	mov.b64 	%rd1245, {%r1274, %r1273};
	shf.r.wrap.b32 	%r1275, %r1272, %r1271, 18;
	shf.r.wrap.b32 	%r1276, %r1271, %r1272, 18;
	mov.b64 	%rd1246, {%r1276, %r1275};
	xor.b64  	%rd1247, %rd1246, %rd1245;
	shf.l.wrap.b32 	%r1277, %r1271, %r1272, 23;
	shf.l.wrap.b32 	%r1278, %r1272, %r1271, 23;
	mov.b64 	%rd1248, {%r1278, %r1277};
	xor.b64  	%rd1249, %rd1247, %rd1248;
	xor.b64  	%rd1250, %rd1209, %rd1185;
	and.b64  	%rd1251, %rd1233, %rd1250;
	xor.b64  	%rd1252, %rd1251, %rd1185;
	add.s64 	%rd1253, %rd1161, %rd972;
	ld.const.u64 	%rd12998, [k_sha512+184];
	add.s64 	%rd1254, %rd1253, %rd12998;
	add.s64 	%rd1255, %rd1254, %rd1252;
	add.s64 	%rd1256, %rd1255, %rd1249;
	add.s64 	%rd1257, %rd1256, %rd1172;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1279,%dummy}, %rd1244;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1280}, %rd1244;
	}
	shf.r.wrap.b32 	%r1281, %r1280, %r1279, 28;
	shf.r.wrap.b32 	%r1282, %r1279, %r1280, 28;
	mov.b64 	%rd1258, {%r1282, %r1281};
	shf.l.wrap.b32 	%r1283, %r1279, %r1280, 30;
	shf.l.wrap.b32 	%r1284, %r1280, %r1279, 30;
	mov.b64 	%rd1259, {%r1284, %r1283};
	xor.b64  	%rd1260, %rd1259, %rd1258;
	shf.l.wrap.b32 	%r1285, %r1279, %r1280, 25;
	shf.l.wrap.b32 	%r1286, %r1280, %r1279, 25;
	mov.b64 	%rd1261, {%r1286, %r1285};
	xor.b64  	%rd1262, %rd1260, %rd1261;
	xor.b64  	%rd1263, %rd1244, %rd1196;
	xor.b64  	%rd1264, %rd1244, %rd1220;
	and.b64  	%rd1265, %rd1264, %rd1263;
	xor.b64  	%rd1266, %rd1265, %rd1244;
	add.s64 	%rd1267, %rd1256, %rd1266;
	add.s64 	%rd1268, %rd1267, %rd1262;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1287,%dummy}, %rd1257;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1288}, %rd1257;
	}
	shf.r.wrap.b32 	%r1289, %r1288, %r1287, 14;
	shf.r.wrap.b32 	%r1290, %r1287, %r1288, 14;
	mov.b64 	%rd1269, {%r1290, %r1289};
	shf.r.wrap.b32 	%r1291, %r1288, %r1287, 18;
	shf.r.wrap.b32 	%r1292, %r1287, %r1288, 18;
	mov.b64 	%rd1270, {%r1292, %r1291};
	xor.b64  	%rd1271, %rd1270, %rd1269;
	shf.l.wrap.b32 	%r1293, %r1287, %r1288, 23;
	shf.l.wrap.b32 	%r1294, %r1288, %r1287, 23;
	mov.b64 	%rd1272, {%r1294, %r1293};
	xor.b64  	%rd1273, %rd1271, %rd1272;
	xor.b64  	%rd1274, %rd1233, %rd1209;
	and.b64  	%rd1275, %rd1257, %rd1274;
	xor.b64  	%rd1276, %rd1275, %rd1209;
	add.s64 	%rd1277, %rd1185, %rd985;
	ld.const.u64 	%rd12997, [k_sha512+192];
	add.s64 	%rd1278, %rd1277, %rd12997;
	add.s64 	%rd1279, %rd1278, %rd1276;
	add.s64 	%rd1280, %rd1279, %rd1273;
	add.s64 	%rd1281, %rd1280, %rd1196;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1295,%dummy}, %rd1268;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1296}, %rd1268;
	}
	shf.r.wrap.b32 	%r1297, %r1296, %r1295, 28;
	shf.r.wrap.b32 	%r1298, %r1295, %r1296, 28;
	mov.b64 	%rd1282, {%r1298, %r1297};
	shf.l.wrap.b32 	%r1299, %r1295, %r1296, 30;
	shf.l.wrap.b32 	%r1300, %r1296, %r1295, 30;
	mov.b64 	%rd1283, {%r1300, %r1299};
	xor.b64  	%rd1284, %rd1283, %rd1282;
	shf.l.wrap.b32 	%r1301, %r1295, %r1296, 25;
	shf.l.wrap.b32 	%r1302, %r1296, %r1295, 25;
	mov.b64 	%rd1285, {%r1302, %r1301};
	xor.b64  	%rd1286, %rd1284, %rd1285;
	xor.b64  	%rd1287, %rd1268, %rd1220;
	xor.b64  	%rd1288, %rd1268, %rd1244;
	and.b64  	%rd1289, %rd1288, %rd1287;
	xor.b64  	%rd1290, %rd1289, %rd1268;
	add.s64 	%rd1291, %rd1280, %rd1290;
	add.s64 	%rd1292, %rd1291, %rd1286;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1303,%dummy}, %rd1281;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1304}, %rd1281;
	}
	shf.r.wrap.b32 	%r1305, %r1304, %r1303, 14;
	shf.r.wrap.b32 	%r1306, %r1303, %r1304, 14;
	mov.b64 	%rd1293, {%r1306, %r1305};
	shf.r.wrap.b32 	%r1307, %r1304, %r1303, 18;
	shf.r.wrap.b32 	%r1308, %r1303, %r1304, 18;
	mov.b64 	%rd1294, {%r1308, %r1307};
	xor.b64  	%rd1295, %rd1294, %rd1293;
	shf.l.wrap.b32 	%r1309, %r1303, %r1304, 23;
	shf.l.wrap.b32 	%r1310, %r1304, %r1303, 23;
	mov.b64 	%rd1296, {%r1310, %r1309};
	xor.b64  	%rd1297, %rd1295, %rd1296;
	xor.b64  	%rd1298, %rd1257, %rd1233;
	and.b64  	%rd1299, %rd1281, %rd1298;
	xor.b64  	%rd1300, %rd1299, %rd1233;
	add.s64 	%rd1301, %rd1209, %rd998;
	ld.const.u64 	%rd12996, [k_sha512+200];
	add.s64 	%rd1302, %rd1301, %rd12996;
	add.s64 	%rd1303, %rd1302, %rd1300;
	add.s64 	%rd1304, %rd1303, %rd1297;
	add.s64 	%rd1305, %rd1304, %rd1220;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1311,%dummy}, %rd1292;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1312}, %rd1292;
	}
	shf.r.wrap.b32 	%r1313, %r1312, %r1311, 28;
	shf.r.wrap.b32 	%r1314, %r1311, %r1312, 28;
	mov.b64 	%rd1306, {%r1314, %r1313};
	shf.l.wrap.b32 	%r1315, %r1311, %r1312, 30;
	shf.l.wrap.b32 	%r1316, %r1312, %r1311, 30;
	mov.b64 	%rd1307, {%r1316, %r1315};
	xor.b64  	%rd1308, %rd1307, %rd1306;
	shf.l.wrap.b32 	%r1317, %r1311, %r1312, 25;
	shf.l.wrap.b32 	%r1318, %r1312, %r1311, 25;
	mov.b64 	%rd1309, {%r1318, %r1317};
	xor.b64  	%rd1310, %rd1308, %rd1309;
	xor.b64  	%rd1311, %rd1292, %rd1244;
	xor.b64  	%rd1312, %rd1292, %rd1268;
	and.b64  	%rd1313, %rd1312, %rd1311;
	xor.b64  	%rd1314, %rd1313, %rd1292;
	add.s64 	%rd1315, %rd1304, %rd1314;
	add.s64 	%rd1316, %rd1315, %rd1310;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1319,%dummy}, %rd1305;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1320}, %rd1305;
	}
	shf.r.wrap.b32 	%r1321, %r1320, %r1319, 14;
	shf.r.wrap.b32 	%r1322, %r1319, %r1320, 14;
	mov.b64 	%rd1317, {%r1322, %r1321};
	shf.r.wrap.b32 	%r1323, %r1320, %r1319, 18;
	shf.r.wrap.b32 	%r1324, %r1319, %r1320, 18;
	mov.b64 	%rd1318, {%r1324, %r1323};
	xor.b64  	%rd1319, %rd1318, %rd1317;
	shf.l.wrap.b32 	%r1325, %r1319, %r1320, 23;
	shf.l.wrap.b32 	%r1326, %r1320, %r1319, 23;
	mov.b64 	%rd1320, {%r1326, %r1325};
	xor.b64  	%rd1321, %rd1319, %rd1320;
	xor.b64  	%rd1322, %rd1281, %rd1257;
	and.b64  	%rd1323, %rd1305, %rd1322;
	xor.b64  	%rd1324, %rd1323, %rd1257;
	add.s64 	%rd1325, %rd1233, %rd1011;
	ld.const.u64 	%rd12995, [k_sha512+208];
	add.s64 	%rd1326, %rd1325, %rd12995;
	add.s64 	%rd1327, %rd1326, %rd1324;
	add.s64 	%rd1328, %rd1327, %rd1321;
	add.s64 	%rd1329, %rd1328, %rd1244;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1327,%dummy}, %rd1316;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1328}, %rd1316;
	}
	shf.r.wrap.b32 	%r1329, %r1328, %r1327, 28;
	shf.r.wrap.b32 	%r1330, %r1327, %r1328, 28;
	mov.b64 	%rd1330, {%r1330, %r1329};
	shf.l.wrap.b32 	%r1331, %r1327, %r1328, 30;
	shf.l.wrap.b32 	%r1332, %r1328, %r1327, 30;
	mov.b64 	%rd1331, {%r1332, %r1331};
	xor.b64  	%rd1332, %rd1331, %rd1330;
	shf.l.wrap.b32 	%r1333, %r1327, %r1328, 25;
	shf.l.wrap.b32 	%r1334, %r1328, %r1327, 25;
	mov.b64 	%rd1333, {%r1334, %r1333};
	xor.b64  	%rd1334, %rd1332, %rd1333;
	xor.b64  	%rd1335, %rd1316, %rd1268;
	xor.b64  	%rd1336, %rd1316, %rd1292;
	and.b64  	%rd1337, %rd1336, %rd1335;
	xor.b64  	%rd1338, %rd1337, %rd1316;
	add.s64 	%rd1339, %rd1328, %rd1338;
	add.s64 	%rd1340, %rd1339, %rd1334;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1335,%dummy}, %rd1329;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1336}, %rd1329;
	}
	shf.r.wrap.b32 	%r1337, %r1336, %r1335, 14;
	shf.r.wrap.b32 	%r1338, %r1335, %r1336, 14;
	mov.b64 	%rd1341, {%r1338, %r1337};
	shf.r.wrap.b32 	%r1339, %r1336, %r1335, 18;
	shf.r.wrap.b32 	%r1340, %r1335, %r1336, 18;
	mov.b64 	%rd1342, {%r1340, %r1339};
	xor.b64  	%rd1343, %rd1342, %rd1341;
	shf.l.wrap.b32 	%r1341, %r1335, %r1336, 23;
	shf.l.wrap.b32 	%r1342, %r1336, %r1335, 23;
	mov.b64 	%rd1344, {%r1342, %r1341};
	xor.b64  	%rd1345, %rd1343, %rd1344;
	xor.b64  	%rd1346, %rd1305, %rd1281;
	and.b64  	%rd1347, %rd1329, %rd1346;
	xor.b64  	%rd1348, %rd1347, %rd1281;
	add.s64 	%rd1349, %rd1257, %rd1024;
	ld.const.u64 	%rd12994, [k_sha512+216];
	add.s64 	%rd1350, %rd1349, %rd12994;
	add.s64 	%rd1351, %rd1350, %rd1348;
	add.s64 	%rd1352, %rd1351, %rd1345;
	add.s64 	%rd1353, %rd1352, %rd1268;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1343,%dummy}, %rd1340;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1344}, %rd1340;
	}
	shf.r.wrap.b32 	%r1345, %r1344, %r1343, 28;
	shf.r.wrap.b32 	%r1346, %r1343, %r1344, 28;
	mov.b64 	%rd1354, {%r1346, %r1345};
	shf.l.wrap.b32 	%r1347, %r1343, %r1344, 30;
	shf.l.wrap.b32 	%r1348, %r1344, %r1343, 30;
	mov.b64 	%rd1355, {%r1348, %r1347};
	xor.b64  	%rd1356, %rd1355, %rd1354;
	shf.l.wrap.b32 	%r1349, %r1343, %r1344, 25;
	shf.l.wrap.b32 	%r1350, %r1344, %r1343, 25;
	mov.b64 	%rd1357, {%r1350, %r1349};
	xor.b64  	%rd1358, %rd1356, %rd1357;
	xor.b64  	%rd1359, %rd1340, %rd1292;
	xor.b64  	%rd1360, %rd1340, %rd1316;
	and.b64  	%rd1361, %rd1360, %rd1359;
	xor.b64  	%rd1362, %rd1361, %rd1340;
	add.s64 	%rd1363, %rd1352, %rd1362;
	add.s64 	%rd1364, %rd1363, %rd1358;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1351,%dummy}, %rd1353;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1352}, %rd1353;
	}
	shf.r.wrap.b32 	%r1353, %r1352, %r1351, 14;
	shf.r.wrap.b32 	%r1354, %r1351, %r1352, 14;
	mov.b64 	%rd1365, {%r1354, %r1353};
	shf.r.wrap.b32 	%r1355, %r1352, %r1351, 18;
	shf.r.wrap.b32 	%r1356, %r1351, %r1352, 18;
	mov.b64 	%rd1366, {%r1356, %r1355};
	xor.b64  	%rd1367, %rd1366, %rd1365;
	shf.l.wrap.b32 	%r1357, %r1351, %r1352, 23;
	shf.l.wrap.b32 	%r1358, %r1352, %r1351, 23;
	mov.b64 	%rd1368, {%r1358, %r1357};
	xor.b64  	%rd1369, %rd1367, %rd1368;
	xor.b64  	%rd1370, %rd1329, %rd1305;
	and.b64  	%rd1371, %rd1353, %rd1370;
	xor.b64  	%rd1372, %rd1371, %rd1305;
	add.s64 	%rd1373, %rd1281, %rd1037;
	ld.const.u64 	%rd12993, [k_sha512+224];
	add.s64 	%rd1374, %rd1373, %rd12993;
	add.s64 	%rd1375, %rd1374, %rd1372;
	add.s64 	%rd1376, %rd1375, %rd1369;
	add.s64 	%rd1377, %rd1376, %rd1292;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1359,%dummy}, %rd1364;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1360}, %rd1364;
	}
	shf.r.wrap.b32 	%r1361, %r1360, %r1359, 28;
	shf.r.wrap.b32 	%r1362, %r1359, %r1360, 28;
	mov.b64 	%rd1378, {%r1362, %r1361};
	shf.l.wrap.b32 	%r1363, %r1359, %r1360, 30;
	shf.l.wrap.b32 	%r1364, %r1360, %r1359, 30;
	mov.b64 	%rd1379, {%r1364, %r1363};
	xor.b64  	%rd1380, %rd1379, %rd1378;
	shf.l.wrap.b32 	%r1365, %r1359, %r1360, 25;
	shf.l.wrap.b32 	%r1366, %r1360, %r1359, 25;
	mov.b64 	%rd1381, {%r1366, %r1365};
	xor.b64  	%rd1382, %rd1380, %rd1381;
	xor.b64  	%rd1383, %rd1364, %rd1316;
	xor.b64  	%rd1384, %rd1364, %rd1340;
	and.b64  	%rd1385, %rd1384, %rd1383;
	xor.b64  	%rd1386, %rd1385, %rd1364;
	add.s64 	%rd1387, %rd1376, %rd1386;
	add.s64 	%rd1388, %rd1387, %rd1382;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1367,%dummy}, %rd1377;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1368}, %rd1377;
	}
	shf.r.wrap.b32 	%r1369, %r1368, %r1367, 14;
	shf.r.wrap.b32 	%r1370, %r1367, %r1368, 14;
	mov.b64 	%rd1389, {%r1370, %r1369};
	shf.r.wrap.b32 	%r1371, %r1368, %r1367, 18;
	shf.r.wrap.b32 	%r1372, %r1367, %r1368, 18;
	mov.b64 	%rd1390, {%r1372, %r1371};
	xor.b64  	%rd1391, %rd1390, %rd1389;
	shf.l.wrap.b32 	%r1373, %r1367, %r1368, 23;
	shf.l.wrap.b32 	%r1374, %r1368, %r1367, 23;
	mov.b64 	%rd1392, {%r1374, %r1373};
	xor.b64  	%rd1393, %rd1391, %rd1392;
	xor.b64  	%rd1394, %rd1353, %rd1329;
	and.b64  	%rd1395, %rd1377, %rd1394;
	xor.b64  	%rd1396, %rd1395, %rd1329;
	add.s64 	%rd1397, %rd1305, %rd1050;
	ld.const.u64 	%rd12992, [k_sha512+232];
	add.s64 	%rd1398, %rd1397, %rd12992;
	add.s64 	%rd1399, %rd1398, %rd1396;
	add.s64 	%rd1400, %rd1399, %rd1393;
	add.s64 	%rd1401, %rd1400, %rd1316;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1375,%dummy}, %rd1388;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1376}, %rd1388;
	}
	shf.r.wrap.b32 	%r1377, %r1376, %r1375, 28;
	shf.r.wrap.b32 	%r1378, %r1375, %r1376, 28;
	mov.b64 	%rd1402, {%r1378, %r1377};
	shf.l.wrap.b32 	%r1379, %r1375, %r1376, 30;
	shf.l.wrap.b32 	%r1380, %r1376, %r1375, 30;
	mov.b64 	%rd1403, {%r1380, %r1379};
	xor.b64  	%rd1404, %rd1403, %rd1402;
	shf.l.wrap.b32 	%r1381, %r1375, %r1376, 25;
	shf.l.wrap.b32 	%r1382, %r1376, %r1375, 25;
	mov.b64 	%rd1405, {%r1382, %r1381};
	xor.b64  	%rd1406, %rd1404, %rd1405;
	xor.b64  	%rd1407, %rd1388, %rd1340;
	xor.b64  	%rd1408, %rd1388, %rd1364;
	and.b64  	%rd1409, %rd1408, %rd1407;
	xor.b64  	%rd1410, %rd1409, %rd1388;
	add.s64 	%rd1411, %rd1400, %rd1410;
	add.s64 	%rd1412, %rd1411, %rd1406;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1383,%dummy}, %rd1401;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1384}, %rd1401;
	}
	shf.r.wrap.b32 	%r1385, %r1384, %r1383, 14;
	shf.r.wrap.b32 	%r1386, %r1383, %r1384, 14;
	mov.b64 	%rd1413, {%r1386, %r1385};
	shf.r.wrap.b32 	%r1387, %r1384, %r1383, 18;
	shf.r.wrap.b32 	%r1388, %r1383, %r1384, 18;
	mov.b64 	%rd1414, {%r1388, %r1387};
	xor.b64  	%rd1415, %rd1414, %rd1413;
	shf.l.wrap.b32 	%r1389, %r1383, %r1384, 23;
	shf.l.wrap.b32 	%r1390, %r1384, %r1383, 23;
	mov.b64 	%rd1416, {%r1390, %r1389};
	xor.b64  	%rd1417, %rd1415, %rd1416;
	xor.b64  	%rd1418, %rd1377, %rd1353;
	and.b64  	%rd1419, %rd1401, %rd1418;
	xor.b64  	%rd1420, %rd1419, %rd1353;
	add.s64 	%rd1421, %rd1329, %rd1063;
	ld.const.u64 	%rd12991, [k_sha512+240];
	add.s64 	%rd1422, %rd1421, %rd12991;
	add.s64 	%rd1423, %rd1422, %rd1420;
	add.s64 	%rd1424, %rd1423, %rd1417;
	add.s64 	%rd1425, %rd1424, %rd1340;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1391,%dummy}, %rd1412;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1392}, %rd1412;
	}
	shf.r.wrap.b32 	%r1393, %r1392, %r1391, 28;
	shf.r.wrap.b32 	%r1394, %r1391, %r1392, 28;
	mov.b64 	%rd1426, {%r1394, %r1393};
	shf.l.wrap.b32 	%r1395, %r1391, %r1392, 30;
	shf.l.wrap.b32 	%r1396, %r1392, %r1391, 30;
	mov.b64 	%rd1427, {%r1396, %r1395};
	xor.b64  	%rd1428, %rd1427, %rd1426;
	shf.l.wrap.b32 	%r1397, %r1391, %r1392, 25;
	shf.l.wrap.b32 	%r1398, %r1392, %r1391, 25;
	mov.b64 	%rd1429, {%r1398, %r1397};
	xor.b64  	%rd1430, %rd1428, %rd1429;
	xor.b64  	%rd1431, %rd1412, %rd1364;
	xor.b64  	%rd1432, %rd1412, %rd1388;
	and.b64  	%rd1433, %rd1432, %rd1431;
	xor.b64  	%rd1434, %rd1433, %rd1412;
	add.s64 	%rd1435, %rd1424, %rd1434;
	add.s64 	%rd1436, %rd1435, %rd1430;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1399,%dummy}, %rd1425;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1400}, %rd1425;
	}
	shf.r.wrap.b32 	%r1401, %r1400, %r1399, 14;
	shf.r.wrap.b32 	%r1402, %r1399, %r1400, 14;
	mov.b64 	%rd1437, {%r1402, %r1401};
	shf.r.wrap.b32 	%r1403, %r1400, %r1399, 18;
	shf.r.wrap.b32 	%r1404, %r1399, %r1400, 18;
	mov.b64 	%rd1438, {%r1404, %r1403};
	xor.b64  	%rd1439, %rd1438, %rd1437;
	shf.l.wrap.b32 	%r1405, %r1399, %r1400, 23;
	shf.l.wrap.b32 	%r1406, %r1400, %r1399, 23;
	mov.b64 	%rd1440, {%r1406, %r1405};
	xor.b64  	%rd1441, %rd1439, %rd1440;
	xor.b64  	%rd1442, %rd1401, %rd1377;
	and.b64  	%rd1443, %rd1425, %rd1442;
	xor.b64  	%rd1444, %rd1443, %rd1377;
	add.s64 	%rd1445, %rd1353, %rd1076;
	ld.const.u64 	%rd12990, [k_sha512+248];
	add.s64 	%rd1446, %rd1445, %rd12990;
	add.s64 	%rd1447, %rd1446, %rd1444;
	add.s64 	%rd1448, %rd1447, %rd1441;
	add.s64 	%rd1449, %rd1448, %rd1364;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1407,%dummy}, %rd1436;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1408}, %rd1436;
	}
	shf.r.wrap.b32 	%r1409, %r1408, %r1407, 28;
	shf.r.wrap.b32 	%r1410, %r1407, %r1408, 28;
	mov.b64 	%rd1450, {%r1410, %r1409};
	shf.l.wrap.b32 	%r1411, %r1407, %r1408, 30;
	shf.l.wrap.b32 	%r1412, %r1408, %r1407, 30;
	mov.b64 	%rd1451, {%r1412, %r1411};
	xor.b64  	%rd1452, %rd1451, %rd1450;
	shf.l.wrap.b32 	%r1413, %r1407, %r1408, 25;
	shf.l.wrap.b32 	%r1414, %r1408, %r1407, 25;
	mov.b64 	%rd1453, {%r1414, %r1413};
	xor.b64  	%rd1454, %rd1452, %rd1453;
	xor.b64  	%rd1455, %rd1436, %rd1388;
	xor.b64  	%rd1456, %rd1436, %rd1412;
	and.b64  	%rd1457, %rd1456, %rd1455;
	xor.b64  	%rd1458, %rd1457, %rd1436;
	add.s64 	%rd1459, %rd1448, %rd1458;
	add.s64 	%rd1460, %rd1459, %rd1454;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1415,%dummy}, %rd1063;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1416}, %rd1063;
	}
	shf.r.wrap.b32 	%r1417, %r1416, %r1415, 19;
	shf.r.wrap.b32 	%r1418, %r1415, %r1416, 19;
	mov.b64 	%rd1461, {%r1418, %r1417};
	shf.l.wrap.b32 	%r1419, %r1415, %r1416, 3;
	shf.l.wrap.b32 	%r1420, %r1416, %r1415, 3;
	mov.b64 	%rd1462, {%r1420, %r1419};
	shr.u64 	%rd1463, %rd1063, 6;
	xor.b64  	%rd1464, %rd1461, %rd1463;
	xor.b64  	%rd1465, %rd1464, %rd1462;
	shf.r.wrap.b32 	%r1421, %r1010, %r1009, 1;
	shf.r.wrap.b32 	%r1422, %r1009, %r1010, 1;
	mov.b64 	%rd1466, {%r1422, %r1421};
	shf.r.wrap.b32 	%r1423, %r1010, %r1009, 8;
	shf.r.wrap.b32 	%r1424, %r1009, %r1010, 8;
	mov.b64 	%rd1467, {%r1424, %r1423};
	shr.u64 	%rd1468, %rd894, 7;
	xor.b64  	%rd1469, %rd1466, %rd1468;
	xor.b64  	%rd1470, %rd1469, %rd1467;
	add.s64 	%rd1471, %rd998, %rd881;
	add.s64 	%rd1472, %rd1471, %rd1465;
	add.s64 	%rd1473, %rd1472, %rd1470;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1425,%dummy}, %rd1076;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1426}, %rd1076;
	}
	shf.r.wrap.b32 	%r1427, %r1426, %r1425, 19;
	shf.r.wrap.b32 	%r1428, %r1425, %r1426, 19;
	mov.b64 	%rd1474, {%r1428, %r1427};
	shf.l.wrap.b32 	%r1429, %r1425, %r1426, 3;
	shf.l.wrap.b32 	%r1430, %r1426, %r1425, 3;
	mov.b64 	%rd1475, {%r1430, %r1429};
	shr.u64 	%rd1476, %rd1076, 6;
	xor.b64  	%rd1477, %rd1474, %rd1476;
	xor.b64  	%rd1478, %rd1477, %rd1475;
	shf.r.wrap.b32 	%r1431, %r1022, %r1021, 1;
	shf.r.wrap.b32 	%r1432, %r1021, %r1022, 1;
	mov.b64 	%rd1479, {%r1432, %r1431};
	shf.r.wrap.b32 	%r1433, %r1022, %r1021, 8;
	shf.r.wrap.b32 	%r1434, %r1021, %r1022, 8;
	mov.b64 	%rd1480, {%r1434, %r1433};
	shr.u64 	%rd1481, %rd907, 7;
	xor.b64  	%rd1482, %rd1479, %rd1481;
	xor.b64  	%rd1483, %rd1482, %rd1480;
	add.s64 	%rd1484, %rd1011, %rd894;
	add.s64 	%rd1485, %rd1484, %rd1478;
	add.s64 	%rd1486, %rd1485, %rd1483;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1435,%dummy}, %rd1473;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1436}, %rd1473;
	}
	shf.r.wrap.b32 	%r1437, %r1436, %r1435, 19;
	shf.r.wrap.b32 	%r1438, %r1435, %r1436, 19;
	mov.b64 	%rd1487, {%r1438, %r1437};
	shf.l.wrap.b32 	%r1439, %r1435, %r1436, 3;
	shf.l.wrap.b32 	%r1440, %r1436, %r1435, 3;
	mov.b64 	%rd1488, {%r1440, %r1439};
	shr.u64 	%rd1489, %rd1473, 6;
	xor.b64  	%rd1490, %rd1487, %rd1489;
	xor.b64  	%rd1491, %rd1490, %rd1488;
	shf.r.wrap.b32 	%r1441, %r1034, %r1033, 1;
	shf.r.wrap.b32 	%r1442, %r1033, %r1034, 1;
	mov.b64 	%rd1492, {%r1442, %r1441};
	shf.r.wrap.b32 	%r1443, %r1034, %r1033, 8;
	shf.r.wrap.b32 	%r1444, %r1033, %r1034, 8;
	mov.b64 	%rd1493, {%r1444, %r1443};
	shr.u64 	%rd1494, %rd920, 7;
	xor.b64  	%rd1495, %rd1492, %rd1494;
	xor.b64  	%rd1496, %rd1495, %rd1493;
	add.s64 	%rd1497, %rd1024, %rd907;
	add.s64 	%rd1498, %rd1497, %rd1491;
	add.s64 	%rd1499, %rd1498, %rd1496;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1445,%dummy}, %rd1486;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1446}, %rd1486;
	}
	shf.r.wrap.b32 	%r1447, %r1446, %r1445, 19;
	shf.r.wrap.b32 	%r1448, %r1445, %r1446, 19;
	mov.b64 	%rd1500, {%r1448, %r1447};
	shf.l.wrap.b32 	%r1449, %r1445, %r1446, 3;
	shf.l.wrap.b32 	%r1450, %r1446, %r1445, 3;
	mov.b64 	%rd1501, {%r1450, %r1449};
	shr.u64 	%rd1502, %rd1486, 6;
	xor.b64  	%rd1503, %rd1500, %rd1502;
	xor.b64  	%rd1504, %rd1503, %rd1501;
	shf.r.wrap.b32 	%r1451, %r1046, %r1045, 1;
	shf.r.wrap.b32 	%r1452, %r1045, %r1046, 1;
	mov.b64 	%rd1505, {%r1452, %r1451};
	shf.r.wrap.b32 	%r1453, %r1046, %r1045, 8;
	shf.r.wrap.b32 	%r1454, %r1045, %r1046, 8;
	mov.b64 	%rd1506, {%r1454, %r1453};
	shr.u64 	%rd1507, %rd933, 7;
	xor.b64  	%rd1508, %rd1505, %rd1507;
	xor.b64  	%rd1509, %rd1508, %rd1506;
	add.s64 	%rd1510, %rd1037, %rd920;
	add.s64 	%rd1511, %rd1510, %rd1504;
	add.s64 	%rd1512, %rd1511, %rd1509;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1455,%dummy}, %rd1499;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1456}, %rd1499;
	}
	shf.r.wrap.b32 	%r1457, %r1456, %r1455, 19;
	shf.r.wrap.b32 	%r1458, %r1455, %r1456, 19;
	mov.b64 	%rd1513, {%r1458, %r1457};
	shf.l.wrap.b32 	%r1459, %r1455, %r1456, 3;
	shf.l.wrap.b32 	%r1460, %r1456, %r1455, 3;
	mov.b64 	%rd1514, {%r1460, %r1459};
	shr.u64 	%rd1515, %rd1499, 6;
	xor.b64  	%rd1516, %rd1513, %rd1515;
	xor.b64  	%rd1517, %rd1516, %rd1514;
	shf.r.wrap.b32 	%r1461, %r1058, %r1057, 1;
	shf.r.wrap.b32 	%r1462, %r1057, %r1058, 1;
	mov.b64 	%rd1518, {%r1462, %r1461};
	shf.r.wrap.b32 	%r1463, %r1058, %r1057, 8;
	shf.r.wrap.b32 	%r1464, %r1057, %r1058, 8;
	mov.b64 	%rd1519, {%r1464, %r1463};
	shr.u64 	%rd1520, %rd946, 7;
	xor.b64  	%rd1521, %rd1518, %rd1520;
	xor.b64  	%rd1522, %rd1521, %rd1519;
	add.s64 	%rd1523, %rd1050, %rd933;
	add.s64 	%rd1524, %rd1523, %rd1517;
	add.s64 	%rd1525, %rd1524, %rd1522;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1465,%dummy}, %rd1512;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1466}, %rd1512;
	}
	shf.r.wrap.b32 	%r1467, %r1466, %r1465, 19;
	shf.r.wrap.b32 	%r1468, %r1465, %r1466, 19;
	mov.b64 	%rd1526, {%r1468, %r1467};
	shf.l.wrap.b32 	%r1469, %r1465, %r1466, 3;
	shf.l.wrap.b32 	%r1470, %r1466, %r1465, 3;
	mov.b64 	%rd1527, {%r1470, %r1469};
	shr.u64 	%rd1528, %rd1512, 6;
	xor.b64  	%rd1529, %rd1526, %rd1528;
	xor.b64  	%rd1530, %rd1529, %rd1527;
	shf.r.wrap.b32 	%r1471, %r1070, %r1069, 1;
	shf.r.wrap.b32 	%r1472, %r1069, %r1070, 1;
	mov.b64 	%rd1531, {%r1472, %r1471};
	shf.r.wrap.b32 	%r1473, %r1070, %r1069, 8;
	shf.r.wrap.b32 	%r1474, %r1069, %r1070, 8;
	mov.b64 	%rd1532, {%r1474, %r1473};
	shr.u64 	%rd1533, %rd959, 7;
	xor.b64  	%rd1534, %rd1531, %rd1533;
	xor.b64  	%rd1535, %rd1534, %rd1532;
	add.s64 	%rd1536, %rd1063, %rd946;
	add.s64 	%rd1537, %rd1536, %rd1530;
	add.s64 	%rd1538, %rd1537, %rd1535;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1475,%dummy}, %rd1525;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1476}, %rd1525;
	}
	shf.r.wrap.b32 	%r1477, %r1476, %r1475, 19;
	shf.r.wrap.b32 	%r1478, %r1475, %r1476, 19;
	mov.b64 	%rd1539, {%r1478, %r1477};
	shf.l.wrap.b32 	%r1479, %r1475, %r1476, 3;
	shf.l.wrap.b32 	%r1480, %r1476, %r1475, 3;
	mov.b64 	%rd1540, {%r1480, %r1479};
	shr.u64 	%rd1541, %rd1525, 6;
	xor.b64  	%rd1542, %rd1539, %rd1541;
	xor.b64  	%rd1543, %rd1542, %rd1540;
	shf.r.wrap.b32 	%r1481, %r1082, %r1081, 1;
	shf.r.wrap.b32 	%r1482, %r1081, %r1082, 1;
	mov.b64 	%rd1544, {%r1482, %r1481};
	shf.r.wrap.b32 	%r1483, %r1082, %r1081, 8;
	shf.r.wrap.b32 	%r1484, %r1081, %r1082, 8;
	mov.b64 	%rd1545, {%r1484, %r1483};
	shr.u64 	%rd1546, %rd972, 7;
	xor.b64  	%rd1547, %rd1544, %rd1546;
	xor.b64  	%rd1548, %rd1547, %rd1545;
	add.s64 	%rd1549, %rd1076, %rd959;
	add.s64 	%rd1550, %rd1549, %rd1543;
	add.s64 	%rd1551, %rd1550, %rd1548;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1485,%dummy}, %rd1538;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1486}, %rd1538;
	}
	shf.r.wrap.b32 	%r1487, %r1486, %r1485, 19;
	shf.r.wrap.b32 	%r1488, %r1485, %r1486, 19;
	mov.b64 	%rd1552, {%r1488, %r1487};
	shf.l.wrap.b32 	%r1489, %r1485, %r1486, 3;
	shf.l.wrap.b32 	%r1490, %r1486, %r1485, 3;
	mov.b64 	%rd1553, {%r1490, %r1489};
	shr.u64 	%rd1554, %rd1538, 6;
	xor.b64  	%rd1555, %rd1552, %rd1554;
	xor.b64  	%rd1556, %rd1555, %rd1553;
	shf.r.wrap.b32 	%r1491, %r1094, %r1093, 1;
	shf.r.wrap.b32 	%r1492, %r1093, %r1094, 1;
	mov.b64 	%rd1557, {%r1492, %r1491};
	shf.r.wrap.b32 	%r1493, %r1094, %r1093, 8;
	shf.r.wrap.b32 	%r1494, %r1093, %r1094, 8;
	mov.b64 	%rd1558, {%r1494, %r1493};
	shr.u64 	%rd1559, %rd985, 7;
	xor.b64  	%rd1560, %rd1557, %rd1559;
	xor.b64  	%rd1561, %rd1560, %rd1558;
	add.s64 	%rd1562, %rd1473, %rd972;
	add.s64 	%rd1563, %rd1562, %rd1556;
	add.s64 	%rd1564, %rd1563, %rd1561;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1495,%dummy}, %rd1551;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1496}, %rd1551;
	}
	shf.r.wrap.b32 	%r1497, %r1496, %r1495, 19;
	shf.r.wrap.b32 	%r1498, %r1495, %r1496, 19;
	mov.b64 	%rd1565, {%r1498, %r1497};
	shf.l.wrap.b32 	%r1499, %r1495, %r1496, 3;
	shf.l.wrap.b32 	%r1500, %r1496, %r1495, 3;
	mov.b64 	%rd1566, {%r1500, %r1499};
	shr.u64 	%rd1567, %rd1551, 6;
	xor.b64  	%rd1568, %rd1565, %rd1567;
	xor.b64  	%rd1569, %rd1568, %rd1566;
	shf.r.wrap.b32 	%r1501, %r1106, %r1105, 1;
	shf.r.wrap.b32 	%r1502, %r1105, %r1106, 1;
	mov.b64 	%rd1570, {%r1502, %r1501};
	shf.r.wrap.b32 	%r1503, %r1106, %r1105, 8;
	shf.r.wrap.b32 	%r1504, %r1105, %r1106, 8;
	mov.b64 	%rd1571, {%r1504, %r1503};
	shr.u64 	%rd1572, %rd998, 7;
	xor.b64  	%rd1573, %rd1570, %rd1572;
	xor.b64  	%rd1574, %rd1573, %rd1571;
	add.s64 	%rd1575, %rd1486, %rd985;
	add.s64 	%rd1576, %rd1575, %rd1569;
	add.s64 	%rd1577, %rd1576, %rd1574;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1505,%dummy}, %rd1564;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1506}, %rd1564;
	}
	shf.r.wrap.b32 	%r1507, %r1506, %r1505, 19;
	shf.r.wrap.b32 	%r1508, %r1505, %r1506, 19;
	mov.b64 	%rd1578, {%r1508, %r1507};
	shf.l.wrap.b32 	%r1509, %r1505, %r1506, 3;
	shf.l.wrap.b32 	%r1510, %r1506, %r1505, 3;
	mov.b64 	%rd1579, {%r1510, %r1509};
	shr.u64 	%rd1580, %rd1564, 6;
	xor.b64  	%rd1581, %rd1578, %rd1580;
	xor.b64  	%rd1582, %rd1581, %rd1579;
	shf.r.wrap.b32 	%r1511, %r1118, %r1117, 1;
	shf.r.wrap.b32 	%r1512, %r1117, %r1118, 1;
	mov.b64 	%rd1583, {%r1512, %r1511};
	shf.r.wrap.b32 	%r1513, %r1118, %r1117, 8;
	shf.r.wrap.b32 	%r1514, %r1117, %r1118, 8;
	mov.b64 	%rd1584, {%r1514, %r1513};
	shr.u64 	%rd1585, %rd1011, 7;
	xor.b64  	%rd1586, %rd1583, %rd1585;
	xor.b64  	%rd1587, %rd1586, %rd1584;
	add.s64 	%rd1588, %rd1499, %rd998;
	add.s64 	%rd1589, %rd1588, %rd1582;
	add.s64 	%rd1590, %rd1589, %rd1587;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1515,%dummy}, %rd1577;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1516}, %rd1577;
	}
	shf.r.wrap.b32 	%r1517, %r1516, %r1515, 19;
	shf.r.wrap.b32 	%r1518, %r1515, %r1516, 19;
	mov.b64 	%rd1591, {%r1518, %r1517};
	shf.l.wrap.b32 	%r1519, %r1515, %r1516, 3;
	shf.l.wrap.b32 	%r1520, %r1516, %r1515, 3;
	mov.b64 	%rd1592, {%r1520, %r1519};
	shr.u64 	%rd1593, %rd1577, 6;
	xor.b64  	%rd1594, %rd1591, %rd1593;
	xor.b64  	%rd1595, %rd1594, %rd1592;
	shf.r.wrap.b32 	%r1521, %r1130, %r1129, 1;
	shf.r.wrap.b32 	%r1522, %r1129, %r1130, 1;
	mov.b64 	%rd1596, {%r1522, %r1521};
	shf.r.wrap.b32 	%r1523, %r1130, %r1129, 8;
	shf.r.wrap.b32 	%r1524, %r1129, %r1130, 8;
	mov.b64 	%rd1597, {%r1524, %r1523};
	shr.u64 	%rd1598, %rd1024, 7;
	xor.b64  	%rd1599, %rd1596, %rd1598;
	xor.b64  	%rd1600, %rd1599, %rd1597;
	add.s64 	%rd1601, %rd1512, %rd1011;
	add.s64 	%rd1602, %rd1601, %rd1595;
	add.s64 	%rd1603, %rd1602, %rd1600;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1525,%dummy}, %rd1590;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1526}, %rd1590;
	}
	shf.r.wrap.b32 	%r1527, %r1526, %r1525, 19;
	shf.r.wrap.b32 	%r1528, %r1525, %r1526, 19;
	mov.b64 	%rd1604, {%r1528, %r1527};
	shf.l.wrap.b32 	%r1529, %r1525, %r1526, 3;
	shf.l.wrap.b32 	%r1530, %r1526, %r1525, 3;
	mov.b64 	%rd1605, {%r1530, %r1529};
	shr.u64 	%rd1606, %rd1590, 6;
	xor.b64  	%rd1607, %rd1604, %rd1606;
	xor.b64  	%rd1608, %rd1607, %rd1605;
	shf.r.wrap.b32 	%r1531, %r1140, %r1139, 1;
	shf.r.wrap.b32 	%r1532, %r1139, %r1140, 1;
	mov.b64 	%rd1609, {%r1532, %r1531};
	shf.r.wrap.b32 	%r1533, %r1140, %r1139, 8;
	shf.r.wrap.b32 	%r1534, %r1139, %r1140, 8;
	mov.b64 	%rd1610, {%r1534, %r1533};
	shr.u64 	%rd1611, %rd1037, 7;
	xor.b64  	%rd1612, %rd1609, %rd1611;
	xor.b64  	%rd1613, %rd1612, %rd1610;
	add.s64 	%rd1614, %rd1525, %rd1024;
	add.s64 	%rd1615, %rd1614, %rd1608;
	add.s64 	%rd1616, %rd1615, %rd1613;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1535,%dummy}, %rd1603;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1536}, %rd1603;
	}
	shf.r.wrap.b32 	%r1537, %r1536, %r1535, 19;
	shf.r.wrap.b32 	%r1538, %r1535, %r1536, 19;
	mov.b64 	%rd1617, {%r1538, %r1537};
	shf.l.wrap.b32 	%r1539, %r1535, %r1536, 3;
	shf.l.wrap.b32 	%r1540, %r1536, %r1535, 3;
	mov.b64 	%rd1618, {%r1540, %r1539};
	shr.u64 	%rd1619, %rd1603, 6;
	xor.b64  	%rd1620, %rd1617, %rd1619;
	xor.b64  	%rd1621, %rd1620, %rd1618;
	shf.r.wrap.b32 	%r1541, %r1150, %r1149, 1;
	shf.r.wrap.b32 	%r1542, %r1149, %r1150, 1;
	mov.b64 	%rd1622, {%r1542, %r1541};
	shf.r.wrap.b32 	%r1543, %r1150, %r1149, 8;
	shf.r.wrap.b32 	%r1544, %r1149, %r1150, 8;
	mov.b64 	%rd1623, {%r1544, %r1543};
	shr.u64 	%rd1624, %rd1050, 7;
	xor.b64  	%rd1625, %rd1622, %rd1624;
	xor.b64  	%rd1626, %rd1625, %rd1623;
	add.s64 	%rd1627, %rd1538, %rd1037;
	add.s64 	%rd1628, %rd1627, %rd1621;
	add.s64 	%rd1629, %rd1628, %rd1626;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1545,%dummy}, %rd1616;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1546}, %rd1616;
	}
	shf.r.wrap.b32 	%r1547, %r1546, %r1545, 19;
	shf.r.wrap.b32 	%r1548, %r1545, %r1546, 19;
	mov.b64 	%rd1630, {%r1548, %r1547};
	shf.l.wrap.b32 	%r1549, %r1545, %r1546, 3;
	shf.l.wrap.b32 	%r1550, %r1546, %r1545, 3;
	mov.b64 	%rd1631, {%r1550, %r1549};
	shr.u64 	%rd1632, %rd1616, 6;
	xor.b64  	%rd1633, %rd1630, %rd1632;
	xor.b64  	%rd1634, %rd1633, %rd1631;
	shf.r.wrap.b32 	%r1551, %r1416, %r1415, 1;
	shf.r.wrap.b32 	%r1552, %r1415, %r1416, 1;
	mov.b64 	%rd1635, {%r1552, %r1551};
	shf.r.wrap.b32 	%r1553, %r1416, %r1415, 8;
	shf.r.wrap.b32 	%r1554, %r1415, %r1416, 8;
	mov.b64 	%rd1636, {%r1554, %r1553};
	shr.u64 	%rd1637, %rd1063, 7;
	xor.b64  	%rd1638, %rd1635, %rd1637;
	xor.b64  	%rd1639, %rd1638, %rd1636;
	add.s64 	%rd1640, %rd1551, %rd1050;
	add.s64 	%rd1641, %rd1640, %rd1634;
	add.s64 	%rd1642, %rd1641, %rd1639;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1555,%dummy}, %rd1629;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1556}, %rd1629;
	}
	shf.r.wrap.b32 	%r1557, %r1556, %r1555, 19;
	shf.r.wrap.b32 	%r1558, %r1555, %r1556, 19;
	mov.b64 	%rd1643, {%r1558, %r1557};
	shf.l.wrap.b32 	%r1559, %r1555, %r1556, 3;
	shf.l.wrap.b32 	%r1560, %r1556, %r1555, 3;
	mov.b64 	%rd1644, {%r1560, %r1559};
	shr.u64 	%rd1645, %rd1629, 6;
	xor.b64  	%rd1646, %rd1643, %rd1645;
	xor.b64  	%rd1647, %rd1646, %rd1644;
	shf.r.wrap.b32 	%r1561, %r1426, %r1425, 1;
	shf.r.wrap.b32 	%r1562, %r1425, %r1426, 1;
	mov.b64 	%rd1648, {%r1562, %r1561};
	shf.r.wrap.b32 	%r1563, %r1426, %r1425, 8;
	shf.r.wrap.b32 	%r1564, %r1425, %r1426, 8;
	mov.b64 	%rd1649, {%r1564, %r1563};
	shr.u64 	%rd1650, %rd1076, 7;
	xor.b64  	%rd1651, %rd1648, %rd1650;
	xor.b64  	%rd1652, %rd1651, %rd1649;
	add.s64 	%rd1653, %rd1564, %rd1063;
	add.s64 	%rd1654, %rd1653, %rd1647;
	add.s64 	%rd1655, %rd1654, %rd1652;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1565,%dummy}, %rd1642;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1566}, %rd1642;
	}
	shf.r.wrap.b32 	%r1567, %r1566, %r1565, 19;
	shf.r.wrap.b32 	%r1568, %r1565, %r1566, 19;
	mov.b64 	%rd1656, {%r1568, %r1567};
	shf.l.wrap.b32 	%r1569, %r1565, %r1566, 3;
	shf.l.wrap.b32 	%r1570, %r1566, %r1565, 3;
	mov.b64 	%rd1657, {%r1570, %r1569};
	shr.u64 	%rd1658, %rd1642, 6;
	xor.b64  	%rd1659, %rd1656, %rd1658;
	xor.b64  	%rd1660, %rd1659, %rd1657;
	shf.r.wrap.b32 	%r1571, %r1436, %r1435, 1;
	shf.r.wrap.b32 	%r1572, %r1435, %r1436, 1;
	mov.b64 	%rd1661, {%r1572, %r1571};
	shf.r.wrap.b32 	%r1573, %r1436, %r1435, 8;
	shf.r.wrap.b32 	%r1574, %r1435, %r1436, 8;
	mov.b64 	%rd1662, {%r1574, %r1573};
	shr.u64 	%rd1663, %rd1473, 7;
	xor.b64  	%rd1664, %rd1661, %rd1663;
	xor.b64  	%rd1665, %rd1664, %rd1662;
	add.s64 	%rd1666, %rd1577, %rd1076;
	add.s64 	%rd1667, %rd1666, %rd1660;
	add.s64 	%rd1668, %rd1667, %rd1665;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1575,%dummy}, %rd1449;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1576}, %rd1449;
	}
	shf.r.wrap.b32 	%r1577, %r1576, %r1575, 14;
	shf.r.wrap.b32 	%r1578, %r1575, %r1576, 14;
	mov.b64 	%rd1669, {%r1578, %r1577};
	shf.r.wrap.b32 	%r1579, %r1576, %r1575, 18;
	shf.r.wrap.b32 	%r1580, %r1575, %r1576, 18;
	mov.b64 	%rd1670, {%r1580, %r1579};
	xor.b64  	%rd1671, %rd1670, %rd1669;
	shf.l.wrap.b32 	%r1581, %r1575, %r1576, 23;
	shf.l.wrap.b32 	%r1582, %r1576, %r1575, 23;
	mov.b64 	%rd1672, {%r1582, %r1581};
	xor.b64  	%rd1673, %rd1671, %rd1672;
	xor.b64  	%rd1674, %rd1425, %rd1401;
	and.b64  	%rd1675, %rd1674, %rd1449;
	xor.b64  	%rd1676, %rd1675, %rd1401;
	add.s64 	%rd1677, %rd1676, %rd1377;
	add.s64 	%rd1678, %rd1677, %rd1473;
	ld.const.u64 	%rd12989, [k_sha512+256];
	add.s64 	%rd1679, %rd1678, %rd12989;
	add.s64 	%rd1680, %rd1679, %rd1673;
	add.s64 	%rd1681, %rd1680, %rd1388;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1583,%dummy}, %rd1460;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1584}, %rd1460;
	}
	shf.r.wrap.b32 	%r1585, %r1584, %r1583, 28;
	shf.r.wrap.b32 	%r1586, %r1583, %r1584, 28;
	mov.b64 	%rd1682, {%r1586, %r1585};
	shf.l.wrap.b32 	%r1587, %r1583, %r1584, 30;
	shf.l.wrap.b32 	%r1588, %r1584, %r1583, 30;
	mov.b64 	%rd1683, {%r1588, %r1587};
	xor.b64  	%rd1684, %rd1683, %rd1682;
	shf.l.wrap.b32 	%r1589, %r1583, %r1584, 25;
	shf.l.wrap.b32 	%r1590, %r1584, %r1583, 25;
	mov.b64 	%rd1685, {%r1590, %r1589};
	xor.b64  	%rd1686, %rd1684, %rd1685;
	xor.b64  	%rd1687, %rd1460, %rd1412;
	xor.b64  	%rd1688, %rd1460, %rd1436;
	and.b64  	%rd1689, %rd1688, %rd1687;
	xor.b64  	%rd1690, %rd1689, %rd1460;
	add.s64 	%rd1691, %rd1680, %rd1690;
	add.s64 	%rd1692, %rd1691, %rd1686;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1591,%dummy}, %rd1681;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1592}, %rd1681;
	}
	shf.r.wrap.b32 	%r1593, %r1592, %r1591, 14;
	shf.r.wrap.b32 	%r1594, %r1591, %r1592, 14;
	mov.b64 	%rd1693, {%r1594, %r1593};
	shf.r.wrap.b32 	%r1595, %r1592, %r1591, 18;
	shf.r.wrap.b32 	%r1596, %r1591, %r1592, 18;
	mov.b64 	%rd1694, {%r1596, %r1595};
	xor.b64  	%rd1695, %rd1694, %rd1693;
	shf.l.wrap.b32 	%r1597, %r1591, %r1592, 23;
	shf.l.wrap.b32 	%r1598, %r1592, %r1591, 23;
	mov.b64 	%rd1696, {%r1598, %r1597};
	xor.b64  	%rd1697, %rd1695, %rd1696;
	xor.b64  	%rd1698, %rd1449, %rd1425;
	and.b64  	%rd1699, %rd1681, %rd1698;
	xor.b64  	%rd1700, %rd1699, %rd1425;
	add.s64 	%rd1701, %rd1486, %rd1401;
	ld.const.u64 	%rd12988, [k_sha512+264];
	add.s64 	%rd1702, %rd1701, %rd12988;
	add.s64 	%rd1703, %rd1702, %rd1700;
	add.s64 	%rd1704, %rd1703, %rd1697;
	add.s64 	%rd1705, %rd1704, %rd1412;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1599,%dummy}, %rd1692;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1600}, %rd1692;
	}
	shf.r.wrap.b32 	%r1601, %r1600, %r1599, 28;
	shf.r.wrap.b32 	%r1602, %r1599, %r1600, 28;
	mov.b64 	%rd1706, {%r1602, %r1601};
	shf.l.wrap.b32 	%r1603, %r1599, %r1600, 30;
	shf.l.wrap.b32 	%r1604, %r1600, %r1599, 30;
	mov.b64 	%rd1707, {%r1604, %r1603};
	xor.b64  	%rd1708, %rd1707, %rd1706;
	shf.l.wrap.b32 	%r1605, %r1599, %r1600, 25;
	shf.l.wrap.b32 	%r1606, %r1600, %r1599, 25;
	mov.b64 	%rd1709, {%r1606, %r1605};
	xor.b64  	%rd1710, %rd1708, %rd1709;
	xor.b64  	%rd1711, %rd1692, %rd1436;
	xor.b64  	%rd1712, %rd1692, %rd1460;
	and.b64  	%rd1713, %rd1712, %rd1711;
	xor.b64  	%rd1714, %rd1713, %rd1692;
	add.s64 	%rd1715, %rd1704, %rd1714;
	add.s64 	%rd1716, %rd1715, %rd1710;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1607,%dummy}, %rd1705;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1608}, %rd1705;
	}
	shf.r.wrap.b32 	%r1609, %r1608, %r1607, 14;
	shf.r.wrap.b32 	%r1610, %r1607, %r1608, 14;
	mov.b64 	%rd1717, {%r1610, %r1609};
	shf.r.wrap.b32 	%r1611, %r1608, %r1607, 18;
	shf.r.wrap.b32 	%r1612, %r1607, %r1608, 18;
	mov.b64 	%rd1718, {%r1612, %r1611};
	xor.b64  	%rd1719, %rd1718, %rd1717;
	shf.l.wrap.b32 	%r1613, %r1607, %r1608, 23;
	shf.l.wrap.b32 	%r1614, %r1608, %r1607, 23;
	mov.b64 	%rd1720, {%r1614, %r1613};
	xor.b64  	%rd1721, %rd1719, %rd1720;
	xor.b64  	%rd1722, %rd1681, %rd1449;
	and.b64  	%rd1723, %rd1705, %rd1722;
	xor.b64  	%rd1724, %rd1723, %rd1449;
	add.s64 	%rd1725, %rd1499, %rd1425;
	ld.const.u64 	%rd12987, [k_sha512+272];
	add.s64 	%rd1726, %rd1725, %rd12987;
	add.s64 	%rd1727, %rd1726, %rd1724;
	add.s64 	%rd1728, %rd1727, %rd1721;
	add.s64 	%rd1729, %rd1728, %rd1436;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1615,%dummy}, %rd1716;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1616}, %rd1716;
	}
	shf.r.wrap.b32 	%r1617, %r1616, %r1615, 28;
	shf.r.wrap.b32 	%r1618, %r1615, %r1616, 28;
	mov.b64 	%rd1730, {%r1618, %r1617};
	shf.l.wrap.b32 	%r1619, %r1615, %r1616, 30;
	shf.l.wrap.b32 	%r1620, %r1616, %r1615, 30;
	mov.b64 	%rd1731, {%r1620, %r1619};
	xor.b64  	%rd1732, %rd1731, %rd1730;
	shf.l.wrap.b32 	%r1621, %r1615, %r1616, 25;
	shf.l.wrap.b32 	%r1622, %r1616, %r1615, 25;
	mov.b64 	%rd1733, {%r1622, %r1621};
	xor.b64  	%rd1734, %rd1732, %rd1733;
	xor.b64  	%rd1735, %rd1716, %rd1460;
	xor.b64  	%rd1736, %rd1716, %rd1692;
	and.b64  	%rd1737, %rd1736, %rd1735;
	xor.b64  	%rd1738, %rd1737, %rd1716;
	add.s64 	%rd1739, %rd1728, %rd1738;
	add.s64 	%rd1740, %rd1739, %rd1734;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1623,%dummy}, %rd1729;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1624}, %rd1729;
	}
	shf.r.wrap.b32 	%r1625, %r1624, %r1623, 14;
	shf.r.wrap.b32 	%r1626, %r1623, %r1624, 14;
	mov.b64 	%rd1741, {%r1626, %r1625};
	shf.r.wrap.b32 	%r1627, %r1624, %r1623, 18;
	shf.r.wrap.b32 	%r1628, %r1623, %r1624, 18;
	mov.b64 	%rd1742, {%r1628, %r1627};
	xor.b64  	%rd1743, %rd1742, %rd1741;
	shf.l.wrap.b32 	%r1629, %r1623, %r1624, 23;
	shf.l.wrap.b32 	%r1630, %r1624, %r1623, 23;
	mov.b64 	%rd1744, {%r1630, %r1629};
	xor.b64  	%rd1745, %rd1743, %rd1744;
	xor.b64  	%rd1746, %rd1705, %rd1681;
	and.b64  	%rd1747, %rd1729, %rd1746;
	xor.b64  	%rd1748, %rd1747, %rd1681;
	add.s64 	%rd1749, %rd1512, %rd1449;
	ld.const.u64 	%rd12986, [k_sha512+280];
	add.s64 	%rd1750, %rd1749, %rd12986;
	add.s64 	%rd1751, %rd1750, %rd1748;
	add.s64 	%rd1752, %rd1751, %rd1745;
	add.s64 	%rd1753, %rd1752, %rd1460;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1631,%dummy}, %rd1740;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1632}, %rd1740;
	}
	shf.r.wrap.b32 	%r1633, %r1632, %r1631, 28;
	shf.r.wrap.b32 	%r1634, %r1631, %r1632, 28;
	mov.b64 	%rd1754, {%r1634, %r1633};
	shf.l.wrap.b32 	%r1635, %r1631, %r1632, 30;
	shf.l.wrap.b32 	%r1636, %r1632, %r1631, 30;
	mov.b64 	%rd1755, {%r1636, %r1635};
	xor.b64  	%rd1756, %rd1755, %rd1754;
	shf.l.wrap.b32 	%r1637, %r1631, %r1632, 25;
	shf.l.wrap.b32 	%r1638, %r1632, %r1631, 25;
	mov.b64 	%rd1757, {%r1638, %r1637};
	xor.b64  	%rd1758, %rd1756, %rd1757;
	xor.b64  	%rd1759, %rd1740, %rd1692;
	xor.b64  	%rd1760, %rd1740, %rd1716;
	and.b64  	%rd1761, %rd1760, %rd1759;
	xor.b64  	%rd1762, %rd1761, %rd1740;
	add.s64 	%rd1763, %rd1752, %rd1762;
	add.s64 	%rd1764, %rd1763, %rd1758;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1639,%dummy}, %rd1753;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1640}, %rd1753;
	}
	shf.r.wrap.b32 	%r1641, %r1640, %r1639, 14;
	shf.r.wrap.b32 	%r1642, %r1639, %r1640, 14;
	mov.b64 	%rd1765, {%r1642, %r1641};
	shf.r.wrap.b32 	%r1643, %r1640, %r1639, 18;
	shf.r.wrap.b32 	%r1644, %r1639, %r1640, 18;
	mov.b64 	%rd1766, {%r1644, %r1643};
	xor.b64  	%rd1767, %rd1766, %rd1765;
	shf.l.wrap.b32 	%r1645, %r1639, %r1640, 23;
	shf.l.wrap.b32 	%r1646, %r1640, %r1639, 23;
	mov.b64 	%rd1768, {%r1646, %r1645};
	xor.b64  	%rd1769, %rd1767, %rd1768;
	xor.b64  	%rd1770, %rd1729, %rd1705;
	and.b64  	%rd1771, %rd1753, %rd1770;
	xor.b64  	%rd1772, %rd1771, %rd1705;
	add.s64 	%rd1773, %rd1681, %rd1525;
	ld.const.u64 	%rd12985, [k_sha512+288];
	add.s64 	%rd1774, %rd1773, %rd12985;
	add.s64 	%rd1775, %rd1774, %rd1772;
	add.s64 	%rd1776, %rd1775, %rd1769;
	add.s64 	%rd1777, %rd1776, %rd1692;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1647,%dummy}, %rd1764;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1648}, %rd1764;
	}
	shf.r.wrap.b32 	%r1649, %r1648, %r1647, 28;
	shf.r.wrap.b32 	%r1650, %r1647, %r1648, 28;
	mov.b64 	%rd1778, {%r1650, %r1649};
	shf.l.wrap.b32 	%r1651, %r1647, %r1648, 30;
	shf.l.wrap.b32 	%r1652, %r1648, %r1647, 30;
	mov.b64 	%rd1779, {%r1652, %r1651};
	xor.b64  	%rd1780, %rd1779, %rd1778;
	shf.l.wrap.b32 	%r1653, %r1647, %r1648, 25;
	shf.l.wrap.b32 	%r1654, %r1648, %r1647, 25;
	mov.b64 	%rd1781, {%r1654, %r1653};
	xor.b64  	%rd1782, %rd1780, %rd1781;
	xor.b64  	%rd1783, %rd1764, %rd1716;
	xor.b64  	%rd1784, %rd1764, %rd1740;
	and.b64  	%rd1785, %rd1784, %rd1783;
	xor.b64  	%rd1786, %rd1785, %rd1764;
	add.s64 	%rd1787, %rd1776, %rd1786;
	add.s64 	%rd1788, %rd1787, %rd1782;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1655,%dummy}, %rd1777;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1656}, %rd1777;
	}
	shf.r.wrap.b32 	%r1657, %r1656, %r1655, 14;
	shf.r.wrap.b32 	%r1658, %r1655, %r1656, 14;
	mov.b64 	%rd1789, {%r1658, %r1657};
	shf.r.wrap.b32 	%r1659, %r1656, %r1655, 18;
	shf.r.wrap.b32 	%r1660, %r1655, %r1656, 18;
	mov.b64 	%rd1790, {%r1660, %r1659};
	xor.b64  	%rd1791, %rd1790, %rd1789;
	shf.l.wrap.b32 	%r1661, %r1655, %r1656, 23;
	shf.l.wrap.b32 	%r1662, %r1656, %r1655, 23;
	mov.b64 	%rd1792, {%r1662, %r1661};
	xor.b64  	%rd1793, %rd1791, %rd1792;
	xor.b64  	%rd1794, %rd1753, %rd1729;
	and.b64  	%rd1795, %rd1777, %rd1794;
	xor.b64  	%rd1796, %rd1795, %rd1729;
	add.s64 	%rd1797, %rd1705, %rd1538;
	ld.const.u64 	%rd12984, [k_sha512+296];
	add.s64 	%rd1798, %rd1797, %rd12984;
	add.s64 	%rd1799, %rd1798, %rd1796;
	add.s64 	%rd1800, %rd1799, %rd1793;
	add.s64 	%rd1801, %rd1800, %rd1716;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1663,%dummy}, %rd1788;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1664}, %rd1788;
	}
	shf.r.wrap.b32 	%r1665, %r1664, %r1663, 28;
	shf.r.wrap.b32 	%r1666, %r1663, %r1664, 28;
	mov.b64 	%rd1802, {%r1666, %r1665};
	shf.l.wrap.b32 	%r1667, %r1663, %r1664, 30;
	shf.l.wrap.b32 	%r1668, %r1664, %r1663, 30;
	mov.b64 	%rd1803, {%r1668, %r1667};
	xor.b64  	%rd1804, %rd1803, %rd1802;
	shf.l.wrap.b32 	%r1669, %r1663, %r1664, 25;
	shf.l.wrap.b32 	%r1670, %r1664, %r1663, 25;
	mov.b64 	%rd1805, {%r1670, %r1669};
	xor.b64  	%rd1806, %rd1804, %rd1805;
	xor.b64  	%rd1807, %rd1788, %rd1740;
	xor.b64  	%rd1808, %rd1788, %rd1764;
	and.b64  	%rd1809, %rd1808, %rd1807;
	xor.b64  	%rd1810, %rd1809, %rd1788;
	add.s64 	%rd1811, %rd1800, %rd1810;
	add.s64 	%rd1812, %rd1811, %rd1806;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1671,%dummy}, %rd1801;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1672}, %rd1801;
	}
	shf.r.wrap.b32 	%r1673, %r1672, %r1671, 14;
	shf.r.wrap.b32 	%r1674, %r1671, %r1672, 14;
	mov.b64 	%rd1813, {%r1674, %r1673};
	shf.r.wrap.b32 	%r1675, %r1672, %r1671, 18;
	shf.r.wrap.b32 	%r1676, %r1671, %r1672, 18;
	mov.b64 	%rd1814, {%r1676, %r1675};
	xor.b64  	%rd1815, %rd1814, %rd1813;
	shf.l.wrap.b32 	%r1677, %r1671, %r1672, 23;
	shf.l.wrap.b32 	%r1678, %r1672, %r1671, 23;
	mov.b64 	%rd1816, {%r1678, %r1677};
	xor.b64  	%rd1817, %rd1815, %rd1816;
	xor.b64  	%rd1818, %rd1777, %rd1753;
	and.b64  	%rd1819, %rd1801, %rd1818;
	xor.b64  	%rd1820, %rd1819, %rd1753;
	add.s64 	%rd1821, %rd1729, %rd1551;
	ld.const.u64 	%rd12983, [k_sha512+304];
	add.s64 	%rd1822, %rd1821, %rd12983;
	add.s64 	%rd1823, %rd1822, %rd1820;
	add.s64 	%rd1824, %rd1823, %rd1817;
	add.s64 	%rd1825, %rd1824, %rd1740;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1679,%dummy}, %rd1812;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1680}, %rd1812;
	}
	shf.r.wrap.b32 	%r1681, %r1680, %r1679, 28;
	shf.r.wrap.b32 	%r1682, %r1679, %r1680, 28;
	mov.b64 	%rd1826, {%r1682, %r1681};
	shf.l.wrap.b32 	%r1683, %r1679, %r1680, 30;
	shf.l.wrap.b32 	%r1684, %r1680, %r1679, 30;
	mov.b64 	%rd1827, {%r1684, %r1683};
	xor.b64  	%rd1828, %rd1827, %rd1826;
	shf.l.wrap.b32 	%r1685, %r1679, %r1680, 25;
	shf.l.wrap.b32 	%r1686, %r1680, %r1679, 25;
	mov.b64 	%rd1829, {%r1686, %r1685};
	xor.b64  	%rd1830, %rd1828, %rd1829;
	xor.b64  	%rd1831, %rd1812, %rd1764;
	xor.b64  	%rd1832, %rd1812, %rd1788;
	and.b64  	%rd1833, %rd1832, %rd1831;
	xor.b64  	%rd1834, %rd1833, %rd1812;
	add.s64 	%rd1835, %rd1824, %rd1834;
	add.s64 	%rd1836, %rd1835, %rd1830;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1687,%dummy}, %rd1825;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1688}, %rd1825;
	}
	shf.r.wrap.b32 	%r1689, %r1688, %r1687, 14;
	shf.r.wrap.b32 	%r1690, %r1687, %r1688, 14;
	mov.b64 	%rd1837, {%r1690, %r1689};
	shf.r.wrap.b32 	%r1691, %r1688, %r1687, 18;
	shf.r.wrap.b32 	%r1692, %r1687, %r1688, 18;
	mov.b64 	%rd1838, {%r1692, %r1691};
	xor.b64  	%rd1839, %rd1838, %rd1837;
	shf.l.wrap.b32 	%r1693, %r1687, %r1688, 23;
	shf.l.wrap.b32 	%r1694, %r1688, %r1687, 23;
	mov.b64 	%rd1840, {%r1694, %r1693};
	xor.b64  	%rd1841, %rd1839, %rd1840;
	xor.b64  	%rd1842, %rd1801, %rd1777;
	and.b64  	%rd1843, %rd1825, %rd1842;
	xor.b64  	%rd1844, %rd1843, %rd1777;
	add.s64 	%rd1845, %rd1753, %rd1564;
	ld.const.u64 	%rd12982, [k_sha512+312];
	add.s64 	%rd1846, %rd1845, %rd12982;
	add.s64 	%rd1847, %rd1846, %rd1844;
	add.s64 	%rd1848, %rd1847, %rd1841;
	add.s64 	%rd1849, %rd1848, %rd1764;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1695,%dummy}, %rd1836;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1696}, %rd1836;
	}
	shf.r.wrap.b32 	%r1697, %r1696, %r1695, 28;
	shf.r.wrap.b32 	%r1698, %r1695, %r1696, 28;
	mov.b64 	%rd1850, {%r1698, %r1697};
	shf.l.wrap.b32 	%r1699, %r1695, %r1696, 30;
	shf.l.wrap.b32 	%r1700, %r1696, %r1695, 30;
	mov.b64 	%rd1851, {%r1700, %r1699};
	xor.b64  	%rd1852, %rd1851, %rd1850;
	shf.l.wrap.b32 	%r1701, %r1695, %r1696, 25;
	shf.l.wrap.b32 	%r1702, %r1696, %r1695, 25;
	mov.b64 	%rd1853, {%r1702, %r1701};
	xor.b64  	%rd1854, %rd1852, %rd1853;
	xor.b64  	%rd1855, %rd1836, %rd1788;
	xor.b64  	%rd1856, %rd1836, %rd1812;
	and.b64  	%rd1857, %rd1856, %rd1855;
	xor.b64  	%rd1858, %rd1857, %rd1836;
	add.s64 	%rd1859, %rd1848, %rd1858;
	add.s64 	%rd1860, %rd1859, %rd1854;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1703,%dummy}, %rd1849;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1704}, %rd1849;
	}
	shf.r.wrap.b32 	%r1705, %r1704, %r1703, 14;
	shf.r.wrap.b32 	%r1706, %r1703, %r1704, 14;
	mov.b64 	%rd1861, {%r1706, %r1705};
	shf.r.wrap.b32 	%r1707, %r1704, %r1703, 18;
	shf.r.wrap.b32 	%r1708, %r1703, %r1704, 18;
	mov.b64 	%rd1862, {%r1708, %r1707};
	xor.b64  	%rd1863, %rd1862, %rd1861;
	shf.l.wrap.b32 	%r1709, %r1703, %r1704, 23;
	shf.l.wrap.b32 	%r1710, %r1704, %r1703, 23;
	mov.b64 	%rd1864, {%r1710, %r1709};
	xor.b64  	%rd1865, %rd1863, %rd1864;
	xor.b64  	%rd1866, %rd1825, %rd1801;
	and.b64  	%rd1867, %rd1849, %rd1866;
	xor.b64  	%rd1868, %rd1867, %rd1801;
	add.s64 	%rd1869, %rd1777, %rd1577;
	ld.const.u64 	%rd12981, [k_sha512+320];
	add.s64 	%rd1870, %rd1869, %rd12981;
	add.s64 	%rd1871, %rd1870, %rd1868;
	add.s64 	%rd1872, %rd1871, %rd1865;
	add.s64 	%rd1873, %rd1872, %rd1788;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1711,%dummy}, %rd1860;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1712}, %rd1860;
	}
	shf.r.wrap.b32 	%r1713, %r1712, %r1711, 28;
	shf.r.wrap.b32 	%r1714, %r1711, %r1712, 28;
	mov.b64 	%rd1874, {%r1714, %r1713};
	shf.l.wrap.b32 	%r1715, %r1711, %r1712, 30;
	shf.l.wrap.b32 	%r1716, %r1712, %r1711, 30;
	mov.b64 	%rd1875, {%r1716, %r1715};
	xor.b64  	%rd1876, %rd1875, %rd1874;
	shf.l.wrap.b32 	%r1717, %r1711, %r1712, 25;
	shf.l.wrap.b32 	%r1718, %r1712, %r1711, 25;
	mov.b64 	%rd1877, {%r1718, %r1717};
	xor.b64  	%rd1878, %rd1876, %rd1877;
	xor.b64  	%rd1879, %rd1860, %rd1812;
	xor.b64  	%rd1880, %rd1860, %rd1836;
	and.b64  	%rd1881, %rd1880, %rd1879;
	xor.b64  	%rd1882, %rd1881, %rd1860;
	add.s64 	%rd1883, %rd1872, %rd1882;
	add.s64 	%rd1884, %rd1883, %rd1878;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1719,%dummy}, %rd1873;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1720}, %rd1873;
	}
	shf.r.wrap.b32 	%r1721, %r1720, %r1719, 14;
	shf.r.wrap.b32 	%r1722, %r1719, %r1720, 14;
	mov.b64 	%rd1885, {%r1722, %r1721};
	shf.r.wrap.b32 	%r1723, %r1720, %r1719, 18;
	shf.r.wrap.b32 	%r1724, %r1719, %r1720, 18;
	mov.b64 	%rd1886, {%r1724, %r1723};
	xor.b64  	%rd1887, %rd1886, %rd1885;
	shf.l.wrap.b32 	%r1725, %r1719, %r1720, 23;
	shf.l.wrap.b32 	%r1726, %r1720, %r1719, 23;
	mov.b64 	%rd1888, {%r1726, %r1725};
	xor.b64  	%rd1889, %rd1887, %rd1888;
	xor.b64  	%rd1890, %rd1849, %rd1825;
	and.b64  	%rd1891, %rd1873, %rd1890;
	xor.b64  	%rd1892, %rd1891, %rd1825;
	add.s64 	%rd1893, %rd1801, %rd1590;
	ld.const.u64 	%rd12980, [k_sha512+328];
	add.s64 	%rd1894, %rd1893, %rd12980;
	add.s64 	%rd1895, %rd1894, %rd1892;
	add.s64 	%rd1896, %rd1895, %rd1889;
	add.s64 	%rd1897, %rd1896, %rd1812;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1727,%dummy}, %rd1884;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1728}, %rd1884;
	}
	shf.r.wrap.b32 	%r1729, %r1728, %r1727, 28;
	shf.r.wrap.b32 	%r1730, %r1727, %r1728, 28;
	mov.b64 	%rd1898, {%r1730, %r1729};
	shf.l.wrap.b32 	%r1731, %r1727, %r1728, 30;
	shf.l.wrap.b32 	%r1732, %r1728, %r1727, 30;
	mov.b64 	%rd1899, {%r1732, %r1731};
	xor.b64  	%rd1900, %rd1899, %rd1898;
	shf.l.wrap.b32 	%r1733, %r1727, %r1728, 25;
	shf.l.wrap.b32 	%r1734, %r1728, %r1727, 25;
	mov.b64 	%rd1901, {%r1734, %r1733};
	xor.b64  	%rd1902, %rd1900, %rd1901;
	xor.b64  	%rd1903, %rd1884, %rd1836;
	xor.b64  	%rd1904, %rd1884, %rd1860;
	and.b64  	%rd1905, %rd1904, %rd1903;
	xor.b64  	%rd1906, %rd1905, %rd1884;
	add.s64 	%rd1907, %rd1896, %rd1906;
	add.s64 	%rd1908, %rd1907, %rd1902;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1735,%dummy}, %rd1897;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1736}, %rd1897;
	}
	shf.r.wrap.b32 	%r1737, %r1736, %r1735, 14;
	shf.r.wrap.b32 	%r1738, %r1735, %r1736, 14;
	mov.b64 	%rd1909, {%r1738, %r1737};
	shf.r.wrap.b32 	%r1739, %r1736, %r1735, 18;
	shf.r.wrap.b32 	%r1740, %r1735, %r1736, 18;
	mov.b64 	%rd1910, {%r1740, %r1739};
	xor.b64  	%rd1911, %rd1910, %rd1909;
	shf.l.wrap.b32 	%r1741, %r1735, %r1736, 23;
	shf.l.wrap.b32 	%r1742, %r1736, %r1735, 23;
	mov.b64 	%rd1912, {%r1742, %r1741};
	xor.b64  	%rd1913, %rd1911, %rd1912;
	xor.b64  	%rd1914, %rd1873, %rd1849;
	and.b64  	%rd1915, %rd1897, %rd1914;
	xor.b64  	%rd1916, %rd1915, %rd1849;
	add.s64 	%rd1917, %rd1825, %rd1603;
	ld.const.u64 	%rd12979, [k_sha512+336];
	add.s64 	%rd1918, %rd1917, %rd12979;
	add.s64 	%rd1919, %rd1918, %rd1916;
	add.s64 	%rd1920, %rd1919, %rd1913;
	add.s64 	%rd1921, %rd1920, %rd1836;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1743,%dummy}, %rd1908;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1744}, %rd1908;
	}
	shf.r.wrap.b32 	%r1745, %r1744, %r1743, 28;
	shf.r.wrap.b32 	%r1746, %r1743, %r1744, 28;
	mov.b64 	%rd1922, {%r1746, %r1745};
	shf.l.wrap.b32 	%r1747, %r1743, %r1744, 30;
	shf.l.wrap.b32 	%r1748, %r1744, %r1743, 30;
	mov.b64 	%rd1923, {%r1748, %r1747};
	xor.b64  	%rd1924, %rd1923, %rd1922;
	shf.l.wrap.b32 	%r1749, %r1743, %r1744, 25;
	shf.l.wrap.b32 	%r1750, %r1744, %r1743, 25;
	mov.b64 	%rd1925, {%r1750, %r1749};
	xor.b64  	%rd1926, %rd1924, %rd1925;
	xor.b64  	%rd1927, %rd1908, %rd1860;
	xor.b64  	%rd1928, %rd1908, %rd1884;
	and.b64  	%rd1929, %rd1928, %rd1927;
	xor.b64  	%rd1930, %rd1929, %rd1908;
	add.s64 	%rd1931, %rd1920, %rd1930;
	add.s64 	%rd1932, %rd1931, %rd1926;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1751,%dummy}, %rd1921;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1752}, %rd1921;
	}
	shf.r.wrap.b32 	%r1753, %r1752, %r1751, 14;
	shf.r.wrap.b32 	%r1754, %r1751, %r1752, 14;
	mov.b64 	%rd1933, {%r1754, %r1753};
	shf.r.wrap.b32 	%r1755, %r1752, %r1751, 18;
	shf.r.wrap.b32 	%r1756, %r1751, %r1752, 18;
	mov.b64 	%rd1934, {%r1756, %r1755};
	xor.b64  	%rd1935, %rd1934, %rd1933;
	shf.l.wrap.b32 	%r1757, %r1751, %r1752, 23;
	shf.l.wrap.b32 	%r1758, %r1752, %r1751, 23;
	mov.b64 	%rd1936, {%r1758, %r1757};
	xor.b64  	%rd1937, %rd1935, %rd1936;
	xor.b64  	%rd1938, %rd1897, %rd1873;
	and.b64  	%rd1939, %rd1921, %rd1938;
	xor.b64  	%rd1940, %rd1939, %rd1873;
	add.s64 	%rd1941, %rd1849, %rd1616;
	ld.const.u64 	%rd12978, [k_sha512+344];
	add.s64 	%rd1942, %rd1941, %rd12978;
	add.s64 	%rd1943, %rd1942, %rd1940;
	add.s64 	%rd1944, %rd1943, %rd1937;
	add.s64 	%rd1945, %rd1944, %rd1860;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1759,%dummy}, %rd1932;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1760}, %rd1932;
	}
	shf.r.wrap.b32 	%r1761, %r1760, %r1759, 28;
	shf.r.wrap.b32 	%r1762, %r1759, %r1760, 28;
	mov.b64 	%rd1946, {%r1762, %r1761};
	shf.l.wrap.b32 	%r1763, %r1759, %r1760, 30;
	shf.l.wrap.b32 	%r1764, %r1760, %r1759, 30;
	mov.b64 	%rd1947, {%r1764, %r1763};
	xor.b64  	%rd1948, %rd1947, %rd1946;
	shf.l.wrap.b32 	%r1765, %r1759, %r1760, 25;
	shf.l.wrap.b32 	%r1766, %r1760, %r1759, 25;
	mov.b64 	%rd1949, {%r1766, %r1765};
	xor.b64  	%rd1950, %rd1948, %rd1949;
	xor.b64  	%rd1951, %rd1932, %rd1884;
	xor.b64  	%rd1952, %rd1932, %rd1908;
	and.b64  	%rd1953, %rd1952, %rd1951;
	xor.b64  	%rd1954, %rd1953, %rd1932;
	add.s64 	%rd1955, %rd1944, %rd1954;
	add.s64 	%rd1956, %rd1955, %rd1950;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1767,%dummy}, %rd1945;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1768}, %rd1945;
	}
	shf.r.wrap.b32 	%r1769, %r1768, %r1767, 14;
	shf.r.wrap.b32 	%r1770, %r1767, %r1768, 14;
	mov.b64 	%rd1957, {%r1770, %r1769};
	shf.r.wrap.b32 	%r1771, %r1768, %r1767, 18;
	shf.r.wrap.b32 	%r1772, %r1767, %r1768, 18;
	mov.b64 	%rd1958, {%r1772, %r1771};
	xor.b64  	%rd1959, %rd1958, %rd1957;
	shf.l.wrap.b32 	%r1773, %r1767, %r1768, 23;
	shf.l.wrap.b32 	%r1774, %r1768, %r1767, 23;
	mov.b64 	%rd1960, {%r1774, %r1773};
	xor.b64  	%rd1961, %rd1959, %rd1960;
	xor.b64  	%rd1962, %rd1921, %rd1897;
	and.b64  	%rd1963, %rd1945, %rd1962;
	xor.b64  	%rd1964, %rd1963, %rd1897;
	add.s64 	%rd1965, %rd1873, %rd1629;
	ld.const.u64 	%rd12977, [k_sha512+352];
	add.s64 	%rd1966, %rd1965, %rd12977;
	add.s64 	%rd1967, %rd1966, %rd1964;
	add.s64 	%rd1968, %rd1967, %rd1961;
	add.s64 	%rd1969, %rd1968, %rd1884;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1775,%dummy}, %rd1956;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1776}, %rd1956;
	}
	shf.r.wrap.b32 	%r1777, %r1776, %r1775, 28;
	shf.r.wrap.b32 	%r1778, %r1775, %r1776, 28;
	mov.b64 	%rd1970, {%r1778, %r1777};
	shf.l.wrap.b32 	%r1779, %r1775, %r1776, 30;
	shf.l.wrap.b32 	%r1780, %r1776, %r1775, 30;
	mov.b64 	%rd1971, {%r1780, %r1779};
	xor.b64  	%rd1972, %rd1971, %rd1970;
	shf.l.wrap.b32 	%r1781, %r1775, %r1776, 25;
	shf.l.wrap.b32 	%r1782, %r1776, %r1775, 25;
	mov.b64 	%rd1973, {%r1782, %r1781};
	xor.b64  	%rd1974, %rd1972, %rd1973;
	xor.b64  	%rd1975, %rd1956, %rd1908;
	xor.b64  	%rd1976, %rd1956, %rd1932;
	and.b64  	%rd1977, %rd1976, %rd1975;
	xor.b64  	%rd1978, %rd1977, %rd1956;
	add.s64 	%rd1979, %rd1968, %rd1978;
	add.s64 	%rd1980, %rd1979, %rd1974;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1783,%dummy}, %rd1969;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1784}, %rd1969;
	}
	shf.r.wrap.b32 	%r1785, %r1784, %r1783, 14;
	shf.r.wrap.b32 	%r1786, %r1783, %r1784, 14;
	mov.b64 	%rd1981, {%r1786, %r1785};
	shf.r.wrap.b32 	%r1787, %r1784, %r1783, 18;
	shf.r.wrap.b32 	%r1788, %r1783, %r1784, 18;
	mov.b64 	%rd1982, {%r1788, %r1787};
	xor.b64  	%rd1983, %rd1982, %rd1981;
	shf.l.wrap.b32 	%r1789, %r1783, %r1784, 23;
	shf.l.wrap.b32 	%r1790, %r1784, %r1783, 23;
	mov.b64 	%rd1984, {%r1790, %r1789};
	xor.b64  	%rd1985, %rd1983, %rd1984;
	xor.b64  	%rd1986, %rd1945, %rd1921;
	and.b64  	%rd1987, %rd1969, %rd1986;
	xor.b64  	%rd1988, %rd1987, %rd1921;
	add.s64 	%rd1989, %rd1897, %rd1642;
	ld.const.u64 	%rd12976, [k_sha512+360];
	add.s64 	%rd1990, %rd1989, %rd12976;
	add.s64 	%rd1991, %rd1990, %rd1988;
	add.s64 	%rd1992, %rd1991, %rd1985;
	add.s64 	%rd1993, %rd1992, %rd1908;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1791,%dummy}, %rd1980;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1792}, %rd1980;
	}
	shf.r.wrap.b32 	%r1793, %r1792, %r1791, 28;
	shf.r.wrap.b32 	%r1794, %r1791, %r1792, 28;
	mov.b64 	%rd1994, {%r1794, %r1793};
	shf.l.wrap.b32 	%r1795, %r1791, %r1792, 30;
	shf.l.wrap.b32 	%r1796, %r1792, %r1791, 30;
	mov.b64 	%rd1995, {%r1796, %r1795};
	xor.b64  	%rd1996, %rd1995, %rd1994;
	shf.l.wrap.b32 	%r1797, %r1791, %r1792, 25;
	shf.l.wrap.b32 	%r1798, %r1792, %r1791, 25;
	mov.b64 	%rd1997, {%r1798, %r1797};
	xor.b64  	%rd1998, %rd1996, %rd1997;
	xor.b64  	%rd1999, %rd1980, %rd1932;
	xor.b64  	%rd2000, %rd1980, %rd1956;
	and.b64  	%rd2001, %rd2000, %rd1999;
	xor.b64  	%rd2002, %rd2001, %rd1980;
	add.s64 	%rd2003, %rd1992, %rd2002;
	add.s64 	%rd2004, %rd2003, %rd1998;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1799,%dummy}, %rd1993;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1800}, %rd1993;
	}
	shf.r.wrap.b32 	%r1801, %r1800, %r1799, 14;
	shf.r.wrap.b32 	%r1802, %r1799, %r1800, 14;
	mov.b64 	%rd2005, {%r1802, %r1801};
	shf.r.wrap.b32 	%r1803, %r1800, %r1799, 18;
	shf.r.wrap.b32 	%r1804, %r1799, %r1800, 18;
	mov.b64 	%rd2006, {%r1804, %r1803};
	xor.b64  	%rd2007, %rd2006, %rd2005;
	shf.l.wrap.b32 	%r1805, %r1799, %r1800, 23;
	shf.l.wrap.b32 	%r1806, %r1800, %r1799, 23;
	mov.b64 	%rd2008, {%r1806, %r1805};
	xor.b64  	%rd2009, %rd2007, %rd2008;
	xor.b64  	%rd2010, %rd1969, %rd1945;
	and.b64  	%rd2011, %rd1993, %rd2010;
	xor.b64  	%rd2012, %rd2011, %rd1945;
	add.s64 	%rd2013, %rd1921, %rd1655;
	ld.const.u64 	%rd12975, [k_sha512+368];
	add.s64 	%rd2014, %rd2013, %rd12975;
	add.s64 	%rd2015, %rd2014, %rd2012;
	add.s64 	%rd2016, %rd2015, %rd2009;
	add.s64 	%rd2017, %rd2016, %rd1932;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1807,%dummy}, %rd2004;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1808}, %rd2004;
	}
	shf.r.wrap.b32 	%r1809, %r1808, %r1807, 28;
	shf.r.wrap.b32 	%r1810, %r1807, %r1808, 28;
	mov.b64 	%rd2018, {%r1810, %r1809};
	shf.l.wrap.b32 	%r1811, %r1807, %r1808, 30;
	shf.l.wrap.b32 	%r1812, %r1808, %r1807, 30;
	mov.b64 	%rd2019, {%r1812, %r1811};
	xor.b64  	%rd2020, %rd2019, %rd2018;
	shf.l.wrap.b32 	%r1813, %r1807, %r1808, 25;
	shf.l.wrap.b32 	%r1814, %r1808, %r1807, 25;
	mov.b64 	%rd2021, {%r1814, %r1813};
	xor.b64  	%rd2022, %rd2020, %rd2021;
	xor.b64  	%rd2023, %rd2004, %rd1956;
	xor.b64  	%rd2024, %rd2004, %rd1980;
	and.b64  	%rd2025, %rd2024, %rd2023;
	xor.b64  	%rd2026, %rd2025, %rd2004;
	add.s64 	%rd2027, %rd2016, %rd2026;
	add.s64 	%rd2028, %rd2027, %rd2022;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1815,%dummy}, %rd2017;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1816}, %rd2017;
	}
	shf.r.wrap.b32 	%r1817, %r1816, %r1815, 14;
	shf.r.wrap.b32 	%r1818, %r1815, %r1816, 14;
	mov.b64 	%rd2029, {%r1818, %r1817};
	shf.r.wrap.b32 	%r1819, %r1816, %r1815, 18;
	shf.r.wrap.b32 	%r1820, %r1815, %r1816, 18;
	mov.b64 	%rd2030, {%r1820, %r1819};
	xor.b64  	%rd2031, %rd2030, %rd2029;
	shf.l.wrap.b32 	%r1821, %r1815, %r1816, 23;
	shf.l.wrap.b32 	%r1822, %r1816, %r1815, 23;
	mov.b64 	%rd2032, {%r1822, %r1821};
	xor.b64  	%rd2033, %rd2031, %rd2032;
	xor.b64  	%rd2034, %rd1993, %rd1969;
	and.b64  	%rd2035, %rd2017, %rd2034;
	xor.b64  	%rd2036, %rd2035, %rd1969;
	add.s64 	%rd2037, %rd1945, %rd1668;
	ld.const.u64 	%rd12974, [k_sha512+376];
	add.s64 	%rd2038, %rd2037, %rd12974;
	add.s64 	%rd2039, %rd2038, %rd2036;
	add.s64 	%rd2040, %rd2039, %rd2033;
	add.s64 	%rd2041, %rd2040, %rd1956;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1823,%dummy}, %rd2028;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1824}, %rd2028;
	}
	shf.r.wrap.b32 	%r1825, %r1824, %r1823, 28;
	shf.r.wrap.b32 	%r1826, %r1823, %r1824, 28;
	mov.b64 	%rd2042, {%r1826, %r1825};
	shf.l.wrap.b32 	%r1827, %r1823, %r1824, 30;
	shf.l.wrap.b32 	%r1828, %r1824, %r1823, 30;
	mov.b64 	%rd2043, {%r1828, %r1827};
	xor.b64  	%rd2044, %rd2043, %rd2042;
	shf.l.wrap.b32 	%r1829, %r1823, %r1824, 25;
	shf.l.wrap.b32 	%r1830, %r1824, %r1823, 25;
	mov.b64 	%rd2045, {%r1830, %r1829};
	xor.b64  	%rd2046, %rd2044, %rd2045;
	xor.b64  	%rd2047, %rd2028, %rd1980;
	xor.b64  	%rd2048, %rd2028, %rd2004;
	and.b64  	%rd2049, %rd2048, %rd2047;
	xor.b64  	%rd2050, %rd2049, %rd2028;
	add.s64 	%rd2051, %rd2040, %rd2050;
	add.s64 	%rd2052, %rd2051, %rd2046;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1831,%dummy}, %rd1655;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1832}, %rd1655;
	}
	shf.r.wrap.b32 	%r1833, %r1832, %r1831, 19;
	shf.r.wrap.b32 	%r1834, %r1831, %r1832, 19;
	mov.b64 	%rd2053, {%r1834, %r1833};
	shf.l.wrap.b32 	%r1835, %r1831, %r1832, 3;
	shf.l.wrap.b32 	%r1836, %r1832, %r1831, 3;
	mov.b64 	%rd2054, {%r1836, %r1835};
	shr.u64 	%rd2055, %rd1655, 6;
	xor.b64  	%rd2056, %rd2053, %rd2055;
	xor.b64  	%rd2057, %rd2056, %rd2054;
	shf.r.wrap.b32 	%r1837, %r1446, %r1445, 1;
	shf.r.wrap.b32 	%r1838, %r1445, %r1446, 1;
	mov.b64 	%rd2058, {%r1838, %r1837};
	shf.r.wrap.b32 	%r1839, %r1446, %r1445, 8;
	shf.r.wrap.b32 	%r1840, %r1445, %r1446, 8;
	mov.b64 	%rd2059, {%r1840, %r1839};
	shr.u64 	%rd2060, %rd1486, 7;
	xor.b64  	%rd2061, %rd2058, %rd2060;
	xor.b64  	%rd2062, %rd2061, %rd2059;
	add.s64 	%rd2063, %rd1590, %rd1473;
	add.s64 	%rd2064, %rd2063, %rd2057;
	add.s64 	%rd2065, %rd2064, %rd2062;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1841,%dummy}, %rd1668;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1842}, %rd1668;
	}
	shf.r.wrap.b32 	%r1843, %r1842, %r1841, 19;
	shf.r.wrap.b32 	%r1844, %r1841, %r1842, 19;
	mov.b64 	%rd2066, {%r1844, %r1843};
	shf.l.wrap.b32 	%r1845, %r1841, %r1842, 3;
	shf.l.wrap.b32 	%r1846, %r1842, %r1841, 3;
	mov.b64 	%rd2067, {%r1846, %r1845};
	shr.u64 	%rd2068, %rd1668, 6;
	xor.b64  	%rd2069, %rd2066, %rd2068;
	xor.b64  	%rd2070, %rd2069, %rd2067;
	shf.r.wrap.b32 	%r1847, %r1456, %r1455, 1;
	shf.r.wrap.b32 	%r1848, %r1455, %r1456, 1;
	mov.b64 	%rd2071, {%r1848, %r1847};
	shf.r.wrap.b32 	%r1849, %r1456, %r1455, 8;
	shf.r.wrap.b32 	%r1850, %r1455, %r1456, 8;
	mov.b64 	%rd2072, {%r1850, %r1849};
	shr.u64 	%rd2073, %rd1499, 7;
	xor.b64  	%rd2074, %rd2071, %rd2073;
	xor.b64  	%rd2075, %rd2074, %rd2072;
	add.s64 	%rd2076, %rd1603, %rd1486;
	add.s64 	%rd2077, %rd2076, %rd2070;
	add.s64 	%rd2078, %rd2077, %rd2075;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1851,%dummy}, %rd2065;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1852}, %rd2065;
	}
	shf.r.wrap.b32 	%r1853, %r1852, %r1851, 19;
	shf.r.wrap.b32 	%r1854, %r1851, %r1852, 19;
	mov.b64 	%rd2079, {%r1854, %r1853};
	shf.l.wrap.b32 	%r1855, %r1851, %r1852, 3;
	shf.l.wrap.b32 	%r1856, %r1852, %r1851, 3;
	mov.b64 	%rd2080, {%r1856, %r1855};
	shr.u64 	%rd2081, %rd2065, 6;
	xor.b64  	%rd2082, %rd2079, %rd2081;
	xor.b64  	%rd2083, %rd2082, %rd2080;
	shf.r.wrap.b32 	%r1857, %r1466, %r1465, 1;
	shf.r.wrap.b32 	%r1858, %r1465, %r1466, 1;
	mov.b64 	%rd2084, {%r1858, %r1857};
	shf.r.wrap.b32 	%r1859, %r1466, %r1465, 8;
	shf.r.wrap.b32 	%r1860, %r1465, %r1466, 8;
	mov.b64 	%rd2085, {%r1860, %r1859};
	shr.u64 	%rd2086, %rd1512, 7;
	xor.b64  	%rd2087, %rd2084, %rd2086;
	xor.b64  	%rd2088, %rd2087, %rd2085;
	add.s64 	%rd2089, %rd1616, %rd1499;
	add.s64 	%rd2090, %rd2089, %rd2083;
	add.s64 	%rd2091, %rd2090, %rd2088;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1861,%dummy}, %rd2078;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1862}, %rd2078;
	}
	shf.r.wrap.b32 	%r1863, %r1862, %r1861, 19;
	shf.r.wrap.b32 	%r1864, %r1861, %r1862, 19;
	mov.b64 	%rd2092, {%r1864, %r1863};
	shf.l.wrap.b32 	%r1865, %r1861, %r1862, 3;
	shf.l.wrap.b32 	%r1866, %r1862, %r1861, 3;
	mov.b64 	%rd2093, {%r1866, %r1865};
	shr.u64 	%rd2094, %rd2078, 6;
	xor.b64  	%rd2095, %rd2092, %rd2094;
	xor.b64  	%rd2096, %rd2095, %rd2093;
	shf.r.wrap.b32 	%r1867, %r1476, %r1475, 1;
	shf.r.wrap.b32 	%r1868, %r1475, %r1476, 1;
	mov.b64 	%rd2097, {%r1868, %r1867};
	shf.r.wrap.b32 	%r1869, %r1476, %r1475, 8;
	shf.r.wrap.b32 	%r1870, %r1475, %r1476, 8;
	mov.b64 	%rd2098, {%r1870, %r1869};
	shr.u64 	%rd2099, %rd1525, 7;
	xor.b64  	%rd2100, %rd2097, %rd2099;
	xor.b64  	%rd2101, %rd2100, %rd2098;
	add.s64 	%rd2102, %rd1629, %rd1512;
	add.s64 	%rd2103, %rd2102, %rd2096;
	add.s64 	%rd2104, %rd2103, %rd2101;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1871,%dummy}, %rd2091;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1872}, %rd2091;
	}
	shf.r.wrap.b32 	%r1873, %r1872, %r1871, 19;
	shf.r.wrap.b32 	%r1874, %r1871, %r1872, 19;
	mov.b64 	%rd2105, {%r1874, %r1873};
	shf.l.wrap.b32 	%r1875, %r1871, %r1872, 3;
	shf.l.wrap.b32 	%r1876, %r1872, %r1871, 3;
	mov.b64 	%rd2106, {%r1876, %r1875};
	shr.u64 	%rd2107, %rd2091, 6;
	xor.b64  	%rd2108, %rd2105, %rd2107;
	xor.b64  	%rd2109, %rd2108, %rd2106;
	shf.r.wrap.b32 	%r1877, %r1486, %r1485, 1;
	shf.r.wrap.b32 	%r1878, %r1485, %r1486, 1;
	mov.b64 	%rd2110, {%r1878, %r1877};
	shf.r.wrap.b32 	%r1879, %r1486, %r1485, 8;
	shf.r.wrap.b32 	%r1880, %r1485, %r1486, 8;
	mov.b64 	%rd2111, {%r1880, %r1879};
	shr.u64 	%rd2112, %rd1538, 7;
	xor.b64  	%rd2113, %rd2110, %rd2112;
	xor.b64  	%rd2114, %rd2113, %rd2111;
	add.s64 	%rd2115, %rd1642, %rd1525;
	add.s64 	%rd2116, %rd2115, %rd2109;
	add.s64 	%rd2117, %rd2116, %rd2114;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1881,%dummy}, %rd2104;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1882}, %rd2104;
	}
	shf.r.wrap.b32 	%r1883, %r1882, %r1881, 19;
	shf.r.wrap.b32 	%r1884, %r1881, %r1882, 19;
	mov.b64 	%rd2118, {%r1884, %r1883};
	shf.l.wrap.b32 	%r1885, %r1881, %r1882, 3;
	shf.l.wrap.b32 	%r1886, %r1882, %r1881, 3;
	mov.b64 	%rd2119, {%r1886, %r1885};
	shr.u64 	%rd2120, %rd2104, 6;
	xor.b64  	%rd2121, %rd2118, %rd2120;
	xor.b64  	%rd2122, %rd2121, %rd2119;
	shf.r.wrap.b32 	%r1887, %r1496, %r1495, 1;
	shf.r.wrap.b32 	%r1888, %r1495, %r1496, 1;
	mov.b64 	%rd2123, {%r1888, %r1887};
	shf.r.wrap.b32 	%r1889, %r1496, %r1495, 8;
	shf.r.wrap.b32 	%r1890, %r1495, %r1496, 8;
	mov.b64 	%rd2124, {%r1890, %r1889};
	shr.u64 	%rd2125, %rd1551, 7;
	xor.b64  	%rd2126, %rd2123, %rd2125;
	xor.b64  	%rd2127, %rd2126, %rd2124;
	add.s64 	%rd2128, %rd1655, %rd1538;
	add.s64 	%rd2129, %rd2128, %rd2122;
	add.s64 	%rd2130, %rd2129, %rd2127;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1891,%dummy}, %rd2117;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1892}, %rd2117;
	}
	shf.r.wrap.b32 	%r1893, %r1892, %r1891, 19;
	shf.r.wrap.b32 	%r1894, %r1891, %r1892, 19;
	mov.b64 	%rd2131, {%r1894, %r1893};
	shf.l.wrap.b32 	%r1895, %r1891, %r1892, 3;
	shf.l.wrap.b32 	%r1896, %r1892, %r1891, 3;
	mov.b64 	%rd2132, {%r1896, %r1895};
	shr.u64 	%rd2133, %rd2117, 6;
	xor.b64  	%rd2134, %rd2131, %rd2133;
	xor.b64  	%rd2135, %rd2134, %rd2132;
	shf.r.wrap.b32 	%r1897, %r1506, %r1505, 1;
	shf.r.wrap.b32 	%r1898, %r1505, %r1506, 1;
	mov.b64 	%rd2136, {%r1898, %r1897};
	shf.r.wrap.b32 	%r1899, %r1506, %r1505, 8;
	shf.r.wrap.b32 	%r1900, %r1505, %r1506, 8;
	mov.b64 	%rd2137, {%r1900, %r1899};
	shr.u64 	%rd2138, %rd1564, 7;
	xor.b64  	%rd2139, %rd2136, %rd2138;
	xor.b64  	%rd2140, %rd2139, %rd2137;
	add.s64 	%rd2141, %rd1668, %rd1551;
	add.s64 	%rd2142, %rd2141, %rd2135;
	add.s64 	%rd2143, %rd2142, %rd2140;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1901,%dummy}, %rd2130;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1902}, %rd2130;
	}
	shf.r.wrap.b32 	%r1903, %r1902, %r1901, 19;
	shf.r.wrap.b32 	%r1904, %r1901, %r1902, 19;
	mov.b64 	%rd2144, {%r1904, %r1903};
	shf.l.wrap.b32 	%r1905, %r1901, %r1902, 3;
	shf.l.wrap.b32 	%r1906, %r1902, %r1901, 3;
	mov.b64 	%rd2145, {%r1906, %r1905};
	shr.u64 	%rd2146, %rd2130, 6;
	xor.b64  	%rd2147, %rd2144, %rd2146;
	xor.b64  	%rd2148, %rd2147, %rd2145;
	shf.r.wrap.b32 	%r1907, %r1516, %r1515, 1;
	shf.r.wrap.b32 	%r1908, %r1515, %r1516, 1;
	mov.b64 	%rd2149, {%r1908, %r1907};
	shf.r.wrap.b32 	%r1909, %r1516, %r1515, 8;
	shf.r.wrap.b32 	%r1910, %r1515, %r1516, 8;
	mov.b64 	%rd2150, {%r1910, %r1909};
	shr.u64 	%rd2151, %rd1577, 7;
	xor.b64  	%rd2152, %rd2149, %rd2151;
	xor.b64  	%rd2153, %rd2152, %rd2150;
	add.s64 	%rd2154, %rd2065, %rd1564;
	add.s64 	%rd2155, %rd2154, %rd2148;
	add.s64 	%rd2156, %rd2155, %rd2153;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1911,%dummy}, %rd2143;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1912}, %rd2143;
	}
	shf.r.wrap.b32 	%r1913, %r1912, %r1911, 19;
	shf.r.wrap.b32 	%r1914, %r1911, %r1912, 19;
	mov.b64 	%rd2157, {%r1914, %r1913};
	shf.l.wrap.b32 	%r1915, %r1911, %r1912, 3;
	shf.l.wrap.b32 	%r1916, %r1912, %r1911, 3;
	mov.b64 	%rd2158, {%r1916, %r1915};
	shr.u64 	%rd2159, %rd2143, 6;
	xor.b64  	%rd2160, %rd2157, %rd2159;
	xor.b64  	%rd2161, %rd2160, %rd2158;
	shf.r.wrap.b32 	%r1917, %r1526, %r1525, 1;
	shf.r.wrap.b32 	%r1918, %r1525, %r1526, 1;
	mov.b64 	%rd2162, {%r1918, %r1917};
	shf.r.wrap.b32 	%r1919, %r1526, %r1525, 8;
	shf.r.wrap.b32 	%r1920, %r1525, %r1526, 8;
	mov.b64 	%rd2163, {%r1920, %r1919};
	shr.u64 	%rd2164, %rd1590, 7;
	xor.b64  	%rd2165, %rd2162, %rd2164;
	xor.b64  	%rd2166, %rd2165, %rd2163;
	add.s64 	%rd2167, %rd2078, %rd1577;
	add.s64 	%rd2168, %rd2167, %rd2161;
	add.s64 	%rd2169, %rd2168, %rd2166;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1921,%dummy}, %rd2156;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1922}, %rd2156;
	}
	shf.r.wrap.b32 	%r1923, %r1922, %r1921, 19;
	shf.r.wrap.b32 	%r1924, %r1921, %r1922, 19;
	mov.b64 	%rd2170, {%r1924, %r1923};
	shf.l.wrap.b32 	%r1925, %r1921, %r1922, 3;
	shf.l.wrap.b32 	%r1926, %r1922, %r1921, 3;
	mov.b64 	%rd2171, {%r1926, %r1925};
	shr.u64 	%rd2172, %rd2156, 6;
	xor.b64  	%rd2173, %rd2170, %rd2172;
	xor.b64  	%rd2174, %rd2173, %rd2171;
	shf.r.wrap.b32 	%r1927, %r1536, %r1535, 1;
	shf.r.wrap.b32 	%r1928, %r1535, %r1536, 1;
	mov.b64 	%rd2175, {%r1928, %r1927};
	shf.r.wrap.b32 	%r1929, %r1536, %r1535, 8;
	shf.r.wrap.b32 	%r1930, %r1535, %r1536, 8;
	mov.b64 	%rd2176, {%r1930, %r1929};
	shr.u64 	%rd2177, %rd1603, 7;
	xor.b64  	%rd2178, %rd2175, %rd2177;
	xor.b64  	%rd2179, %rd2178, %rd2176;
	add.s64 	%rd2180, %rd2091, %rd1590;
	add.s64 	%rd2181, %rd2180, %rd2174;
	add.s64 	%rd2182, %rd2181, %rd2179;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1931,%dummy}, %rd2169;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1932}, %rd2169;
	}
	shf.r.wrap.b32 	%r1933, %r1932, %r1931, 19;
	shf.r.wrap.b32 	%r1934, %r1931, %r1932, 19;
	mov.b64 	%rd2183, {%r1934, %r1933};
	shf.l.wrap.b32 	%r1935, %r1931, %r1932, 3;
	shf.l.wrap.b32 	%r1936, %r1932, %r1931, 3;
	mov.b64 	%rd2184, {%r1936, %r1935};
	shr.u64 	%rd2185, %rd2169, 6;
	xor.b64  	%rd2186, %rd2183, %rd2185;
	xor.b64  	%rd2187, %rd2186, %rd2184;
	shf.r.wrap.b32 	%r1937, %r1546, %r1545, 1;
	shf.r.wrap.b32 	%r1938, %r1545, %r1546, 1;
	mov.b64 	%rd2188, {%r1938, %r1937};
	shf.r.wrap.b32 	%r1939, %r1546, %r1545, 8;
	shf.r.wrap.b32 	%r1940, %r1545, %r1546, 8;
	mov.b64 	%rd2189, {%r1940, %r1939};
	shr.u64 	%rd2190, %rd1616, 7;
	xor.b64  	%rd2191, %rd2188, %rd2190;
	xor.b64  	%rd2192, %rd2191, %rd2189;
	add.s64 	%rd2193, %rd2104, %rd1603;
	add.s64 	%rd2194, %rd2193, %rd2187;
	add.s64 	%rd2195, %rd2194, %rd2192;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1941,%dummy}, %rd2182;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1942}, %rd2182;
	}
	shf.r.wrap.b32 	%r1943, %r1942, %r1941, 19;
	shf.r.wrap.b32 	%r1944, %r1941, %r1942, 19;
	mov.b64 	%rd2196, {%r1944, %r1943};
	shf.l.wrap.b32 	%r1945, %r1941, %r1942, 3;
	shf.l.wrap.b32 	%r1946, %r1942, %r1941, 3;
	mov.b64 	%rd2197, {%r1946, %r1945};
	shr.u64 	%rd2198, %rd2182, 6;
	xor.b64  	%rd2199, %rd2196, %rd2198;
	xor.b64  	%rd2200, %rd2199, %rd2197;
	shf.r.wrap.b32 	%r1947, %r1556, %r1555, 1;
	shf.r.wrap.b32 	%r1948, %r1555, %r1556, 1;
	mov.b64 	%rd2201, {%r1948, %r1947};
	shf.r.wrap.b32 	%r1949, %r1556, %r1555, 8;
	shf.r.wrap.b32 	%r1950, %r1555, %r1556, 8;
	mov.b64 	%rd2202, {%r1950, %r1949};
	shr.u64 	%rd2203, %rd1629, 7;
	xor.b64  	%rd2204, %rd2201, %rd2203;
	xor.b64  	%rd2205, %rd2204, %rd2202;
	add.s64 	%rd2206, %rd2117, %rd1616;
	add.s64 	%rd2207, %rd2206, %rd2200;
	add.s64 	%rd2208, %rd2207, %rd2205;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1951,%dummy}, %rd2195;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1952}, %rd2195;
	}
	shf.r.wrap.b32 	%r1953, %r1952, %r1951, 19;
	shf.r.wrap.b32 	%r1954, %r1951, %r1952, 19;
	mov.b64 	%rd2209, {%r1954, %r1953};
	shf.l.wrap.b32 	%r1955, %r1951, %r1952, 3;
	shf.l.wrap.b32 	%r1956, %r1952, %r1951, 3;
	mov.b64 	%rd2210, {%r1956, %r1955};
	shr.u64 	%rd2211, %rd2195, 6;
	xor.b64  	%rd2212, %rd2209, %rd2211;
	xor.b64  	%rd2213, %rd2212, %rd2210;
	shf.r.wrap.b32 	%r1957, %r1566, %r1565, 1;
	shf.r.wrap.b32 	%r1958, %r1565, %r1566, 1;
	mov.b64 	%rd2214, {%r1958, %r1957};
	shf.r.wrap.b32 	%r1959, %r1566, %r1565, 8;
	shf.r.wrap.b32 	%r1960, %r1565, %r1566, 8;
	mov.b64 	%rd2215, {%r1960, %r1959};
	shr.u64 	%rd2216, %rd1642, 7;
	xor.b64  	%rd2217, %rd2214, %rd2216;
	xor.b64  	%rd2218, %rd2217, %rd2215;
	add.s64 	%rd2219, %rd2130, %rd1629;
	add.s64 	%rd2220, %rd2219, %rd2213;
	add.s64 	%rd2221, %rd2220, %rd2218;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1961,%dummy}, %rd2208;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1962}, %rd2208;
	}
	shf.r.wrap.b32 	%r1963, %r1962, %r1961, 19;
	shf.r.wrap.b32 	%r1964, %r1961, %r1962, 19;
	mov.b64 	%rd2222, {%r1964, %r1963};
	shf.l.wrap.b32 	%r1965, %r1961, %r1962, 3;
	shf.l.wrap.b32 	%r1966, %r1962, %r1961, 3;
	mov.b64 	%rd2223, {%r1966, %r1965};
	shr.u64 	%rd2224, %rd2208, 6;
	xor.b64  	%rd2225, %rd2222, %rd2224;
	xor.b64  	%rd2226, %rd2225, %rd2223;
	shf.r.wrap.b32 	%r1967, %r1832, %r1831, 1;
	shf.r.wrap.b32 	%r1968, %r1831, %r1832, 1;
	mov.b64 	%rd2227, {%r1968, %r1967};
	shf.r.wrap.b32 	%r1969, %r1832, %r1831, 8;
	shf.r.wrap.b32 	%r1970, %r1831, %r1832, 8;
	mov.b64 	%rd2228, {%r1970, %r1969};
	shr.u64 	%rd2229, %rd1655, 7;
	xor.b64  	%rd2230, %rd2227, %rd2229;
	xor.b64  	%rd2231, %rd2230, %rd2228;
	add.s64 	%rd2232, %rd2143, %rd1642;
	add.s64 	%rd2233, %rd2232, %rd2226;
	add.s64 	%rd2234, %rd2233, %rd2231;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1971,%dummy}, %rd2221;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1972}, %rd2221;
	}
	shf.r.wrap.b32 	%r1973, %r1972, %r1971, 19;
	shf.r.wrap.b32 	%r1974, %r1971, %r1972, 19;
	mov.b64 	%rd2235, {%r1974, %r1973};
	shf.l.wrap.b32 	%r1975, %r1971, %r1972, 3;
	shf.l.wrap.b32 	%r1976, %r1972, %r1971, 3;
	mov.b64 	%rd2236, {%r1976, %r1975};
	shr.u64 	%rd2237, %rd2221, 6;
	xor.b64  	%rd2238, %rd2235, %rd2237;
	xor.b64  	%rd2239, %rd2238, %rd2236;
	shf.r.wrap.b32 	%r1977, %r1842, %r1841, 1;
	shf.r.wrap.b32 	%r1978, %r1841, %r1842, 1;
	mov.b64 	%rd2240, {%r1978, %r1977};
	shf.r.wrap.b32 	%r1979, %r1842, %r1841, 8;
	shf.r.wrap.b32 	%r1980, %r1841, %r1842, 8;
	mov.b64 	%rd2241, {%r1980, %r1979};
	shr.u64 	%rd2242, %rd1668, 7;
	xor.b64  	%rd2243, %rd2240, %rd2242;
	xor.b64  	%rd2244, %rd2243, %rd2241;
	add.s64 	%rd2245, %rd2156, %rd1655;
	add.s64 	%rd2246, %rd2245, %rd2239;
	add.s64 	%rd2247, %rd2246, %rd2244;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1981,%dummy}, %rd2234;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1982}, %rd2234;
	}
	shf.r.wrap.b32 	%r1983, %r1982, %r1981, 19;
	shf.r.wrap.b32 	%r1984, %r1981, %r1982, 19;
	mov.b64 	%rd2248, {%r1984, %r1983};
	shf.l.wrap.b32 	%r1985, %r1981, %r1982, 3;
	shf.l.wrap.b32 	%r1986, %r1982, %r1981, 3;
	mov.b64 	%rd2249, {%r1986, %r1985};
	shr.u64 	%rd2250, %rd2234, 6;
	xor.b64  	%rd2251, %rd2248, %rd2250;
	xor.b64  	%rd2252, %rd2251, %rd2249;
	shf.r.wrap.b32 	%r1987, %r1852, %r1851, 1;
	shf.r.wrap.b32 	%r1988, %r1851, %r1852, 1;
	mov.b64 	%rd2253, {%r1988, %r1987};
	shf.r.wrap.b32 	%r1989, %r1852, %r1851, 8;
	shf.r.wrap.b32 	%r1990, %r1851, %r1852, 8;
	mov.b64 	%rd2254, {%r1990, %r1989};
	shr.u64 	%rd2255, %rd2065, 7;
	xor.b64  	%rd2256, %rd2253, %rd2255;
	xor.b64  	%rd2257, %rd2256, %rd2254;
	add.s64 	%rd2258, %rd2169, %rd1668;
	add.s64 	%rd2259, %rd2258, %rd2252;
	add.s64 	%rd2260, %rd2259, %rd2257;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1991,%dummy}, %rd2041;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1992}, %rd2041;
	}
	shf.r.wrap.b32 	%r1993, %r1992, %r1991, 14;
	shf.r.wrap.b32 	%r1994, %r1991, %r1992, 14;
	mov.b64 	%rd2261, {%r1994, %r1993};
	shf.r.wrap.b32 	%r1995, %r1992, %r1991, 18;
	shf.r.wrap.b32 	%r1996, %r1991, %r1992, 18;
	mov.b64 	%rd2262, {%r1996, %r1995};
	xor.b64  	%rd2263, %rd2262, %rd2261;
	shf.l.wrap.b32 	%r1997, %r1991, %r1992, 23;
	shf.l.wrap.b32 	%r1998, %r1992, %r1991, 23;
	mov.b64 	%rd2264, {%r1998, %r1997};
	xor.b64  	%rd2265, %rd2263, %rd2264;
	xor.b64  	%rd2266, %rd2017, %rd1993;
	and.b64  	%rd2267, %rd2266, %rd2041;
	xor.b64  	%rd2268, %rd2267, %rd1993;
	add.s64 	%rd2269, %rd2268, %rd1969;
	add.s64 	%rd2270, %rd2269, %rd2065;
	ld.const.u64 	%rd12973, [k_sha512+384];
	add.s64 	%rd2271, %rd2270, %rd12973;
	add.s64 	%rd2272, %rd2271, %rd2265;
	add.s64 	%rd2273, %rd2272, %rd1980;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1999,%dummy}, %rd2052;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2000}, %rd2052;
	}
	shf.r.wrap.b32 	%r2001, %r2000, %r1999, 28;
	shf.r.wrap.b32 	%r2002, %r1999, %r2000, 28;
	mov.b64 	%rd2274, {%r2002, %r2001};
	shf.l.wrap.b32 	%r2003, %r1999, %r2000, 30;
	shf.l.wrap.b32 	%r2004, %r2000, %r1999, 30;
	mov.b64 	%rd2275, {%r2004, %r2003};
	xor.b64  	%rd2276, %rd2275, %rd2274;
	shf.l.wrap.b32 	%r2005, %r1999, %r2000, 25;
	shf.l.wrap.b32 	%r2006, %r2000, %r1999, 25;
	mov.b64 	%rd2277, {%r2006, %r2005};
	xor.b64  	%rd2278, %rd2276, %rd2277;
	xor.b64  	%rd2279, %rd2052, %rd2004;
	xor.b64  	%rd2280, %rd2052, %rd2028;
	and.b64  	%rd2281, %rd2280, %rd2279;
	xor.b64  	%rd2282, %rd2281, %rd2052;
	add.s64 	%rd2283, %rd2272, %rd2282;
	add.s64 	%rd2284, %rd2283, %rd2278;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2007,%dummy}, %rd2273;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2008}, %rd2273;
	}
	shf.r.wrap.b32 	%r2009, %r2008, %r2007, 14;
	shf.r.wrap.b32 	%r2010, %r2007, %r2008, 14;
	mov.b64 	%rd2285, {%r2010, %r2009};
	shf.r.wrap.b32 	%r2011, %r2008, %r2007, 18;
	shf.r.wrap.b32 	%r2012, %r2007, %r2008, 18;
	mov.b64 	%rd2286, {%r2012, %r2011};
	xor.b64  	%rd2287, %rd2286, %rd2285;
	shf.l.wrap.b32 	%r2013, %r2007, %r2008, 23;
	shf.l.wrap.b32 	%r2014, %r2008, %r2007, 23;
	mov.b64 	%rd2288, {%r2014, %r2013};
	xor.b64  	%rd2289, %rd2287, %rd2288;
	xor.b64  	%rd2290, %rd2041, %rd2017;
	and.b64  	%rd2291, %rd2273, %rd2290;
	xor.b64  	%rd2292, %rd2291, %rd2017;
	add.s64 	%rd2293, %rd2078, %rd1993;
	ld.const.u64 	%rd12972, [k_sha512+392];
	add.s64 	%rd2294, %rd2293, %rd12972;
	add.s64 	%rd2295, %rd2294, %rd2292;
	add.s64 	%rd2296, %rd2295, %rd2289;
	add.s64 	%rd2297, %rd2296, %rd2004;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2015,%dummy}, %rd2284;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2016}, %rd2284;
	}
	shf.r.wrap.b32 	%r2017, %r2016, %r2015, 28;
	shf.r.wrap.b32 	%r2018, %r2015, %r2016, 28;
	mov.b64 	%rd2298, {%r2018, %r2017};
	shf.l.wrap.b32 	%r2019, %r2015, %r2016, 30;
	shf.l.wrap.b32 	%r2020, %r2016, %r2015, 30;
	mov.b64 	%rd2299, {%r2020, %r2019};
	xor.b64  	%rd2300, %rd2299, %rd2298;
	shf.l.wrap.b32 	%r2021, %r2015, %r2016, 25;
	shf.l.wrap.b32 	%r2022, %r2016, %r2015, 25;
	mov.b64 	%rd2301, {%r2022, %r2021};
	xor.b64  	%rd2302, %rd2300, %rd2301;
	xor.b64  	%rd2303, %rd2284, %rd2028;
	xor.b64  	%rd2304, %rd2284, %rd2052;
	and.b64  	%rd2305, %rd2304, %rd2303;
	xor.b64  	%rd2306, %rd2305, %rd2284;
	add.s64 	%rd2307, %rd2296, %rd2306;
	add.s64 	%rd2308, %rd2307, %rd2302;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2023,%dummy}, %rd2297;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2024}, %rd2297;
	}
	shf.r.wrap.b32 	%r2025, %r2024, %r2023, 14;
	shf.r.wrap.b32 	%r2026, %r2023, %r2024, 14;
	mov.b64 	%rd2309, {%r2026, %r2025};
	shf.r.wrap.b32 	%r2027, %r2024, %r2023, 18;
	shf.r.wrap.b32 	%r2028, %r2023, %r2024, 18;
	mov.b64 	%rd2310, {%r2028, %r2027};
	xor.b64  	%rd2311, %rd2310, %rd2309;
	shf.l.wrap.b32 	%r2029, %r2023, %r2024, 23;
	shf.l.wrap.b32 	%r2030, %r2024, %r2023, 23;
	mov.b64 	%rd2312, {%r2030, %r2029};
	xor.b64  	%rd2313, %rd2311, %rd2312;
	xor.b64  	%rd2314, %rd2273, %rd2041;
	and.b64  	%rd2315, %rd2297, %rd2314;
	xor.b64  	%rd2316, %rd2315, %rd2041;
	add.s64 	%rd2317, %rd2091, %rd2017;
	ld.const.u64 	%rd12971, [k_sha512+400];
	add.s64 	%rd2318, %rd2317, %rd12971;
	add.s64 	%rd2319, %rd2318, %rd2316;
	add.s64 	%rd2320, %rd2319, %rd2313;
	add.s64 	%rd2321, %rd2320, %rd2028;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2031,%dummy}, %rd2308;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2032}, %rd2308;
	}
	shf.r.wrap.b32 	%r2033, %r2032, %r2031, 28;
	shf.r.wrap.b32 	%r2034, %r2031, %r2032, 28;
	mov.b64 	%rd2322, {%r2034, %r2033};
	shf.l.wrap.b32 	%r2035, %r2031, %r2032, 30;
	shf.l.wrap.b32 	%r2036, %r2032, %r2031, 30;
	mov.b64 	%rd2323, {%r2036, %r2035};
	xor.b64  	%rd2324, %rd2323, %rd2322;
	shf.l.wrap.b32 	%r2037, %r2031, %r2032, 25;
	shf.l.wrap.b32 	%r2038, %r2032, %r2031, 25;
	mov.b64 	%rd2325, {%r2038, %r2037};
	xor.b64  	%rd2326, %rd2324, %rd2325;
	xor.b64  	%rd2327, %rd2308, %rd2052;
	xor.b64  	%rd2328, %rd2308, %rd2284;
	and.b64  	%rd2329, %rd2328, %rd2327;
	xor.b64  	%rd2330, %rd2329, %rd2308;
	add.s64 	%rd2331, %rd2320, %rd2330;
	add.s64 	%rd2332, %rd2331, %rd2326;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2039,%dummy}, %rd2321;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2040}, %rd2321;
	}
	shf.r.wrap.b32 	%r2041, %r2040, %r2039, 14;
	shf.r.wrap.b32 	%r2042, %r2039, %r2040, 14;
	mov.b64 	%rd2333, {%r2042, %r2041};
	shf.r.wrap.b32 	%r2043, %r2040, %r2039, 18;
	shf.r.wrap.b32 	%r2044, %r2039, %r2040, 18;
	mov.b64 	%rd2334, {%r2044, %r2043};
	xor.b64  	%rd2335, %rd2334, %rd2333;
	shf.l.wrap.b32 	%r2045, %r2039, %r2040, 23;
	shf.l.wrap.b32 	%r2046, %r2040, %r2039, 23;
	mov.b64 	%rd2336, {%r2046, %r2045};
	xor.b64  	%rd2337, %rd2335, %rd2336;
	xor.b64  	%rd2338, %rd2297, %rd2273;
	and.b64  	%rd2339, %rd2321, %rd2338;
	xor.b64  	%rd2340, %rd2339, %rd2273;
	add.s64 	%rd2341, %rd2104, %rd2041;
	ld.const.u64 	%rd12970, [k_sha512+408];
	add.s64 	%rd2342, %rd2341, %rd12970;
	add.s64 	%rd2343, %rd2342, %rd2340;
	add.s64 	%rd2344, %rd2343, %rd2337;
	add.s64 	%rd2345, %rd2344, %rd2052;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2047,%dummy}, %rd2332;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2048}, %rd2332;
	}
	shf.r.wrap.b32 	%r2049, %r2048, %r2047, 28;
	shf.r.wrap.b32 	%r2050, %r2047, %r2048, 28;
	mov.b64 	%rd2346, {%r2050, %r2049};
	shf.l.wrap.b32 	%r2051, %r2047, %r2048, 30;
	shf.l.wrap.b32 	%r2052, %r2048, %r2047, 30;
	mov.b64 	%rd2347, {%r2052, %r2051};
	xor.b64  	%rd2348, %rd2347, %rd2346;
	shf.l.wrap.b32 	%r2053, %r2047, %r2048, 25;
	shf.l.wrap.b32 	%r2054, %r2048, %r2047, 25;
	mov.b64 	%rd2349, {%r2054, %r2053};
	xor.b64  	%rd2350, %rd2348, %rd2349;
	xor.b64  	%rd2351, %rd2332, %rd2284;
	xor.b64  	%rd2352, %rd2332, %rd2308;
	and.b64  	%rd2353, %rd2352, %rd2351;
	xor.b64  	%rd2354, %rd2353, %rd2332;
	add.s64 	%rd2355, %rd2344, %rd2354;
	add.s64 	%rd2356, %rd2355, %rd2350;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2055,%dummy}, %rd2345;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2056}, %rd2345;
	}
	shf.r.wrap.b32 	%r2057, %r2056, %r2055, 14;
	shf.r.wrap.b32 	%r2058, %r2055, %r2056, 14;
	mov.b64 	%rd2357, {%r2058, %r2057};
	shf.r.wrap.b32 	%r2059, %r2056, %r2055, 18;
	shf.r.wrap.b32 	%r2060, %r2055, %r2056, 18;
	mov.b64 	%rd2358, {%r2060, %r2059};
	xor.b64  	%rd2359, %rd2358, %rd2357;
	shf.l.wrap.b32 	%r2061, %r2055, %r2056, 23;
	shf.l.wrap.b32 	%r2062, %r2056, %r2055, 23;
	mov.b64 	%rd2360, {%r2062, %r2061};
	xor.b64  	%rd2361, %rd2359, %rd2360;
	xor.b64  	%rd2362, %rd2321, %rd2297;
	and.b64  	%rd2363, %rd2345, %rd2362;
	xor.b64  	%rd2364, %rd2363, %rd2297;
	add.s64 	%rd2365, %rd2273, %rd2117;
	ld.const.u64 	%rd12969, [k_sha512+416];
	add.s64 	%rd2366, %rd2365, %rd12969;
	add.s64 	%rd2367, %rd2366, %rd2364;
	add.s64 	%rd2368, %rd2367, %rd2361;
	add.s64 	%rd2369, %rd2368, %rd2284;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2063,%dummy}, %rd2356;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2064}, %rd2356;
	}
	shf.r.wrap.b32 	%r2065, %r2064, %r2063, 28;
	shf.r.wrap.b32 	%r2066, %r2063, %r2064, 28;
	mov.b64 	%rd2370, {%r2066, %r2065};
	shf.l.wrap.b32 	%r2067, %r2063, %r2064, 30;
	shf.l.wrap.b32 	%r2068, %r2064, %r2063, 30;
	mov.b64 	%rd2371, {%r2068, %r2067};
	xor.b64  	%rd2372, %rd2371, %rd2370;
	shf.l.wrap.b32 	%r2069, %r2063, %r2064, 25;
	shf.l.wrap.b32 	%r2070, %r2064, %r2063, 25;
	mov.b64 	%rd2373, {%r2070, %r2069};
	xor.b64  	%rd2374, %rd2372, %rd2373;
	xor.b64  	%rd2375, %rd2356, %rd2308;
	xor.b64  	%rd2376, %rd2356, %rd2332;
	and.b64  	%rd2377, %rd2376, %rd2375;
	xor.b64  	%rd2378, %rd2377, %rd2356;
	add.s64 	%rd2379, %rd2368, %rd2378;
	add.s64 	%rd2380, %rd2379, %rd2374;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2071,%dummy}, %rd2369;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2072}, %rd2369;
	}
	shf.r.wrap.b32 	%r2073, %r2072, %r2071, 14;
	shf.r.wrap.b32 	%r2074, %r2071, %r2072, 14;
	mov.b64 	%rd2381, {%r2074, %r2073};
	shf.r.wrap.b32 	%r2075, %r2072, %r2071, 18;
	shf.r.wrap.b32 	%r2076, %r2071, %r2072, 18;
	mov.b64 	%rd2382, {%r2076, %r2075};
	xor.b64  	%rd2383, %rd2382, %rd2381;
	shf.l.wrap.b32 	%r2077, %r2071, %r2072, 23;
	shf.l.wrap.b32 	%r2078, %r2072, %r2071, 23;
	mov.b64 	%rd2384, {%r2078, %r2077};
	xor.b64  	%rd2385, %rd2383, %rd2384;
	xor.b64  	%rd2386, %rd2345, %rd2321;
	and.b64  	%rd2387, %rd2369, %rd2386;
	xor.b64  	%rd2388, %rd2387, %rd2321;
	add.s64 	%rd2389, %rd2297, %rd2130;
	ld.const.u64 	%rd12968, [k_sha512+424];
	add.s64 	%rd2390, %rd2389, %rd12968;
	add.s64 	%rd2391, %rd2390, %rd2388;
	add.s64 	%rd2392, %rd2391, %rd2385;
	add.s64 	%rd2393, %rd2392, %rd2308;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2079,%dummy}, %rd2380;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2080}, %rd2380;
	}
	shf.r.wrap.b32 	%r2081, %r2080, %r2079, 28;
	shf.r.wrap.b32 	%r2082, %r2079, %r2080, 28;
	mov.b64 	%rd2394, {%r2082, %r2081};
	shf.l.wrap.b32 	%r2083, %r2079, %r2080, 30;
	shf.l.wrap.b32 	%r2084, %r2080, %r2079, 30;
	mov.b64 	%rd2395, {%r2084, %r2083};
	xor.b64  	%rd2396, %rd2395, %rd2394;
	shf.l.wrap.b32 	%r2085, %r2079, %r2080, 25;
	shf.l.wrap.b32 	%r2086, %r2080, %r2079, 25;
	mov.b64 	%rd2397, {%r2086, %r2085};
	xor.b64  	%rd2398, %rd2396, %rd2397;
	xor.b64  	%rd2399, %rd2380, %rd2332;
	xor.b64  	%rd2400, %rd2380, %rd2356;
	and.b64  	%rd2401, %rd2400, %rd2399;
	xor.b64  	%rd2402, %rd2401, %rd2380;
	add.s64 	%rd2403, %rd2392, %rd2402;
	add.s64 	%rd2404, %rd2403, %rd2398;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2087,%dummy}, %rd2393;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2088}, %rd2393;
	}
	shf.r.wrap.b32 	%r2089, %r2088, %r2087, 14;
	shf.r.wrap.b32 	%r2090, %r2087, %r2088, 14;
	mov.b64 	%rd2405, {%r2090, %r2089};
	shf.r.wrap.b32 	%r2091, %r2088, %r2087, 18;
	shf.r.wrap.b32 	%r2092, %r2087, %r2088, 18;
	mov.b64 	%rd2406, {%r2092, %r2091};
	xor.b64  	%rd2407, %rd2406, %rd2405;
	shf.l.wrap.b32 	%r2093, %r2087, %r2088, 23;
	shf.l.wrap.b32 	%r2094, %r2088, %r2087, 23;
	mov.b64 	%rd2408, {%r2094, %r2093};
	xor.b64  	%rd2409, %rd2407, %rd2408;
	xor.b64  	%rd2410, %rd2369, %rd2345;
	and.b64  	%rd2411, %rd2393, %rd2410;
	xor.b64  	%rd2412, %rd2411, %rd2345;
	add.s64 	%rd2413, %rd2321, %rd2143;
	ld.const.u64 	%rd12967, [k_sha512+432];
	add.s64 	%rd2414, %rd2413, %rd12967;
	add.s64 	%rd2415, %rd2414, %rd2412;
	add.s64 	%rd2416, %rd2415, %rd2409;
	add.s64 	%rd2417, %rd2416, %rd2332;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2095,%dummy}, %rd2404;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2096}, %rd2404;
	}
	shf.r.wrap.b32 	%r2097, %r2096, %r2095, 28;
	shf.r.wrap.b32 	%r2098, %r2095, %r2096, 28;
	mov.b64 	%rd2418, {%r2098, %r2097};
	shf.l.wrap.b32 	%r2099, %r2095, %r2096, 30;
	shf.l.wrap.b32 	%r2100, %r2096, %r2095, 30;
	mov.b64 	%rd2419, {%r2100, %r2099};
	xor.b64  	%rd2420, %rd2419, %rd2418;
	shf.l.wrap.b32 	%r2101, %r2095, %r2096, 25;
	shf.l.wrap.b32 	%r2102, %r2096, %r2095, 25;
	mov.b64 	%rd2421, {%r2102, %r2101};
	xor.b64  	%rd2422, %rd2420, %rd2421;
	xor.b64  	%rd2423, %rd2404, %rd2356;
	xor.b64  	%rd2424, %rd2404, %rd2380;
	and.b64  	%rd2425, %rd2424, %rd2423;
	xor.b64  	%rd2426, %rd2425, %rd2404;
	add.s64 	%rd2427, %rd2416, %rd2426;
	add.s64 	%rd2428, %rd2427, %rd2422;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2103,%dummy}, %rd2417;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2104}, %rd2417;
	}
	shf.r.wrap.b32 	%r2105, %r2104, %r2103, 14;
	shf.r.wrap.b32 	%r2106, %r2103, %r2104, 14;
	mov.b64 	%rd2429, {%r2106, %r2105};
	shf.r.wrap.b32 	%r2107, %r2104, %r2103, 18;
	shf.r.wrap.b32 	%r2108, %r2103, %r2104, 18;
	mov.b64 	%rd2430, {%r2108, %r2107};
	xor.b64  	%rd2431, %rd2430, %rd2429;
	shf.l.wrap.b32 	%r2109, %r2103, %r2104, 23;
	shf.l.wrap.b32 	%r2110, %r2104, %r2103, 23;
	mov.b64 	%rd2432, {%r2110, %r2109};
	xor.b64  	%rd2433, %rd2431, %rd2432;
	xor.b64  	%rd2434, %rd2393, %rd2369;
	and.b64  	%rd2435, %rd2417, %rd2434;
	xor.b64  	%rd2436, %rd2435, %rd2369;
	add.s64 	%rd2437, %rd2345, %rd2156;
	ld.const.u64 	%rd12966, [k_sha512+440];
	add.s64 	%rd2438, %rd2437, %rd12966;
	add.s64 	%rd2439, %rd2438, %rd2436;
	add.s64 	%rd2440, %rd2439, %rd2433;
	add.s64 	%rd2441, %rd2440, %rd2356;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2111,%dummy}, %rd2428;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2112}, %rd2428;
	}
	shf.r.wrap.b32 	%r2113, %r2112, %r2111, 28;
	shf.r.wrap.b32 	%r2114, %r2111, %r2112, 28;
	mov.b64 	%rd2442, {%r2114, %r2113};
	shf.l.wrap.b32 	%r2115, %r2111, %r2112, 30;
	shf.l.wrap.b32 	%r2116, %r2112, %r2111, 30;
	mov.b64 	%rd2443, {%r2116, %r2115};
	xor.b64  	%rd2444, %rd2443, %rd2442;
	shf.l.wrap.b32 	%r2117, %r2111, %r2112, 25;
	shf.l.wrap.b32 	%r2118, %r2112, %r2111, 25;
	mov.b64 	%rd2445, {%r2118, %r2117};
	xor.b64  	%rd2446, %rd2444, %rd2445;
	xor.b64  	%rd2447, %rd2428, %rd2380;
	xor.b64  	%rd2448, %rd2428, %rd2404;
	and.b64  	%rd2449, %rd2448, %rd2447;
	xor.b64  	%rd2450, %rd2449, %rd2428;
	add.s64 	%rd2451, %rd2440, %rd2450;
	add.s64 	%rd2452, %rd2451, %rd2446;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2119,%dummy}, %rd2441;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2120}, %rd2441;
	}
	shf.r.wrap.b32 	%r2121, %r2120, %r2119, 14;
	shf.r.wrap.b32 	%r2122, %r2119, %r2120, 14;
	mov.b64 	%rd2453, {%r2122, %r2121};
	shf.r.wrap.b32 	%r2123, %r2120, %r2119, 18;
	shf.r.wrap.b32 	%r2124, %r2119, %r2120, 18;
	mov.b64 	%rd2454, {%r2124, %r2123};
	xor.b64  	%rd2455, %rd2454, %rd2453;
	shf.l.wrap.b32 	%r2125, %r2119, %r2120, 23;
	shf.l.wrap.b32 	%r2126, %r2120, %r2119, 23;
	mov.b64 	%rd2456, {%r2126, %r2125};
	xor.b64  	%rd2457, %rd2455, %rd2456;
	xor.b64  	%rd2458, %rd2417, %rd2393;
	and.b64  	%rd2459, %rd2441, %rd2458;
	xor.b64  	%rd2460, %rd2459, %rd2393;
	add.s64 	%rd2461, %rd2369, %rd2169;
	ld.const.u64 	%rd12965, [k_sha512+448];
	add.s64 	%rd2462, %rd2461, %rd12965;
	add.s64 	%rd2463, %rd2462, %rd2460;
	add.s64 	%rd2464, %rd2463, %rd2457;
	add.s64 	%rd2465, %rd2464, %rd2380;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2127,%dummy}, %rd2452;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2128}, %rd2452;
	}
	shf.r.wrap.b32 	%r2129, %r2128, %r2127, 28;
	shf.r.wrap.b32 	%r2130, %r2127, %r2128, 28;
	mov.b64 	%rd2466, {%r2130, %r2129};
	shf.l.wrap.b32 	%r2131, %r2127, %r2128, 30;
	shf.l.wrap.b32 	%r2132, %r2128, %r2127, 30;
	mov.b64 	%rd2467, {%r2132, %r2131};
	xor.b64  	%rd2468, %rd2467, %rd2466;
	shf.l.wrap.b32 	%r2133, %r2127, %r2128, 25;
	shf.l.wrap.b32 	%r2134, %r2128, %r2127, 25;
	mov.b64 	%rd2469, {%r2134, %r2133};
	xor.b64  	%rd2470, %rd2468, %rd2469;
	xor.b64  	%rd2471, %rd2452, %rd2404;
	xor.b64  	%rd2472, %rd2452, %rd2428;
	and.b64  	%rd2473, %rd2472, %rd2471;
	xor.b64  	%rd2474, %rd2473, %rd2452;
	add.s64 	%rd2475, %rd2464, %rd2474;
	add.s64 	%rd2476, %rd2475, %rd2470;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2135,%dummy}, %rd2465;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2136}, %rd2465;
	}
	shf.r.wrap.b32 	%r2137, %r2136, %r2135, 14;
	shf.r.wrap.b32 	%r2138, %r2135, %r2136, 14;
	mov.b64 	%rd2477, {%r2138, %r2137};
	shf.r.wrap.b32 	%r2139, %r2136, %r2135, 18;
	shf.r.wrap.b32 	%r2140, %r2135, %r2136, 18;
	mov.b64 	%rd2478, {%r2140, %r2139};
	xor.b64  	%rd2479, %rd2478, %rd2477;
	shf.l.wrap.b32 	%r2141, %r2135, %r2136, 23;
	shf.l.wrap.b32 	%r2142, %r2136, %r2135, 23;
	mov.b64 	%rd2480, {%r2142, %r2141};
	xor.b64  	%rd2481, %rd2479, %rd2480;
	xor.b64  	%rd2482, %rd2441, %rd2417;
	and.b64  	%rd2483, %rd2465, %rd2482;
	xor.b64  	%rd2484, %rd2483, %rd2417;
	add.s64 	%rd2485, %rd2393, %rd2182;
	ld.const.u64 	%rd12964, [k_sha512+456];
	add.s64 	%rd2486, %rd2485, %rd12964;
	add.s64 	%rd2487, %rd2486, %rd2484;
	add.s64 	%rd2488, %rd2487, %rd2481;
	add.s64 	%rd2489, %rd2488, %rd2404;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2143,%dummy}, %rd2476;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2144}, %rd2476;
	}
	shf.r.wrap.b32 	%r2145, %r2144, %r2143, 28;
	shf.r.wrap.b32 	%r2146, %r2143, %r2144, 28;
	mov.b64 	%rd2490, {%r2146, %r2145};
	shf.l.wrap.b32 	%r2147, %r2143, %r2144, 30;
	shf.l.wrap.b32 	%r2148, %r2144, %r2143, 30;
	mov.b64 	%rd2491, {%r2148, %r2147};
	xor.b64  	%rd2492, %rd2491, %rd2490;
	shf.l.wrap.b32 	%r2149, %r2143, %r2144, 25;
	shf.l.wrap.b32 	%r2150, %r2144, %r2143, 25;
	mov.b64 	%rd2493, {%r2150, %r2149};
	xor.b64  	%rd2494, %rd2492, %rd2493;
	xor.b64  	%rd2495, %rd2476, %rd2428;
	xor.b64  	%rd2496, %rd2476, %rd2452;
	and.b64  	%rd2497, %rd2496, %rd2495;
	xor.b64  	%rd2498, %rd2497, %rd2476;
	add.s64 	%rd2499, %rd2488, %rd2498;
	add.s64 	%rd2500, %rd2499, %rd2494;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2151,%dummy}, %rd2489;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2152}, %rd2489;
	}
	shf.r.wrap.b32 	%r2153, %r2152, %r2151, 14;
	shf.r.wrap.b32 	%r2154, %r2151, %r2152, 14;
	mov.b64 	%rd2501, {%r2154, %r2153};
	shf.r.wrap.b32 	%r2155, %r2152, %r2151, 18;
	shf.r.wrap.b32 	%r2156, %r2151, %r2152, 18;
	mov.b64 	%rd2502, {%r2156, %r2155};
	xor.b64  	%rd2503, %rd2502, %rd2501;
	shf.l.wrap.b32 	%r2157, %r2151, %r2152, 23;
	shf.l.wrap.b32 	%r2158, %r2152, %r2151, 23;
	mov.b64 	%rd2504, {%r2158, %r2157};
	xor.b64  	%rd2505, %rd2503, %rd2504;
	xor.b64  	%rd2506, %rd2465, %rd2441;
	and.b64  	%rd2507, %rd2489, %rd2506;
	xor.b64  	%rd2508, %rd2507, %rd2441;
	add.s64 	%rd2509, %rd2417, %rd2195;
	ld.const.u64 	%rd12963, [k_sha512+464];
	add.s64 	%rd2510, %rd2509, %rd12963;
	add.s64 	%rd2511, %rd2510, %rd2508;
	add.s64 	%rd2512, %rd2511, %rd2505;
	add.s64 	%rd2513, %rd2512, %rd2428;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2159,%dummy}, %rd2500;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2160}, %rd2500;
	}
	shf.r.wrap.b32 	%r2161, %r2160, %r2159, 28;
	shf.r.wrap.b32 	%r2162, %r2159, %r2160, 28;
	mov.b64 	%rd2514, {%r2162, %r2161};
	shf.l.wrap.b32 	%r2163, %r2159, %r2160, 30;
	shf.l.wrap.b32 	%r2164, %r2160, %r2159, 30;
	mov.b64 	%rd2515, {%r2164, %r2163};
	xor.b64  	%rd2516, %rd2515, %rd2514;
	shf.l.wrap.b32 	%r2165, %r2159, %r2160, 25;
	shf.l.wrap.b32 	%r2166, %r2160, %r2159, 25;
	mov.b64 	%rd2517, {%r2166, %r2165};
	xor.b64  	%rd2518, %rd2516, %rd2517;
	xor.b64  	%rd2519, %rd2500, %rd2452;
	xor.b64  	%rd2520, %rd2500, %rd2476;
	and.b64  	%rd2521, %rd2520, %rd2519;
	xor.b64  	%rd2522, %rd2521, %rd2500;
	add.s64 	%rd2523, %rd2512, %rd2522;
	add.s64 	%rd2524, %rd2523, %rd2518;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2167,%dummy}, %rd2513;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2168}, %rd2513;
	}
	shf.r.wrap.b32 	%r2169, %r2168, %r2167, 14;
	shf.r.wrap.b32 	%r2170, %r2167, %r2168, 14;
	mov.b64 	%rd2525, {%r2170, %r2169};
	shf.r.wrap.b32 	%r2171, %r2168, %r2167, 18;
	shf.r.wrap.b32 	%r2172, %r2167, %r2168, 18;
	mov.b64 	%rd2526, {%r2172, %r2171};
	xor.b64  	%rd2527, %rd2526, %rd2525;
	shf.l.wrap.b32 	%r2173, %r2167, %r2168, 23;
	shf.l.wrap.b32 	%r2174, %r2168, %r2167, 23;
	mov.b64 	%rd2528, {%r2174, %r2173};
	xor.b64  	%rd2529, %rd2527, %rd2528;
	xor.b64  	%rd2530, %rd2489, %rd2465;
	and.b64  	%rd2531, %rd2513, %rd2530;
	xor.b64  	%rd2532, %rd2531, %rd2465;
	add.s64 	%rd2533, %rd2441, %rd2208;
	ld.const.u64 	%rd12962, [k_sha512+472];
	add.s64 	%rd2534, %rd2533, %rd12962;
	add.s64 	%rd2535, %rd2534, %rd2532;
	add.s64 	%rd2536, %rd2535, %rd2529;
	add.s64 	%rd2537, %rd2536, %rd2452;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2175,%dummy}, %rd2524;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2176}, %rd2524;
	}
	shf.r.wrap.b32 	%r2177, %r2176, %r2175, 28;
	shf.r.wrap.b32 	%r2178, %r2175, %r2176, 28;
	mov.b64 	%rd2538, {%r2178, %r2177};
	shf.l.wrap.b32 	%r2179, %r2175, %r2176, 30;
	shf.l.wrap.b32 	%r2180, %r2176, %r2175, 30;
	mov.b64 	%rd2539, {%r2180, %r2179};
	xor.b64  	%rd2540, %rd2539, %rd2538;
	shf.l.wrap.b32 	%r2181, %r2175, %r2176, 25;
	shf.l.wrap.b32 	%r2182, %r2176, %r2175, 25;
	mov.b64 	%rd2541, {%r2182, %r2181};
	xor.b64  	%rd2542, %rd2540, %rd2541;
	xor.b64  	%rd2543, %rd2524, %rd2476;
	xor.b64  	%rd2544, %rd2524, %rd2500;
	and.b64  	%rd2545, %rd2544, %rd2543;
	xor.b64  	%rd2546, %rd2545, %rd2524;
	add.s64 	%rd2547, %rd2536, %rd2546;
	add.s64 	%rd2548, %rd2547, %rd2542;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2183,%dummy}, %rd2537;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2184}, %rd2537;
	}
	shf.r.wrap.b32 	%r2185, %r2184, %r2183, 14;
	shf.r.wrap.b32 	%r2186, %r2183, %r2184, 14;
	mov.b64 	%rd2549, {%r2186, %r2185};
	shf.r.wrap.b32 	%r2187, %r2184, %r2183, 18;
	shf.r.wrap.b32 	%r2188, %r2183, %r2184, 18;
	mov.b64 	%rd2550, {%r2188, %r2187};
	xor.b64  	%rd2551, %rd2550, %rd2549;
	shf.l.wrap.b32 	%r2189, %r2183, %r2184, 23;
	shf.l.wrap.b32 	%r2190, %r2184, %r2183, 23;
	mov.b64 	%rd2552, {%r2190, %r2189};
	xor.b64  	%rd2553, %rd2551, %rd2552;
	xor.b64  	%rd2554, %rd2513, %rd2489;
	and.b64  	%rd2555, %rd2537, %rd2554;
	xor.b64  	%rd2556, %rd2555, %rd2489;
	add.s64 	%rd2557, %rd2465, %rd2221;
	ld.const.u64 	%rd12961, [k_sha512+480];
	add.s64 	%rd2558, %rd2557, %rd12961;
	add.s64 	%rd2559, %rd2558, %rd2556;
	add.s64 	%rd2560, %rd2559, %rd2553;
	add.s64 	%rd2561, %rd2560, %rd2476;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2191,%dummy}, %rd2548;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2192}, %rd2548;
	}
	shf.r.wrap.b32 	%r2193, %r2192, %r2191, 28;
	shf.r.wrap.b32 	%r2194, %r2191, %r2192, 28;
	mov.b64 	%rd2562, {%r2194, %r2193};
	shf.l.wrap.b32 	%r2195, %r2191, %r2192, 30;
	shf.l.wrap.b32 	%r2196, %r2192, %r2191, 30;
	mov.b64 	%rd2563, {%r2196, %r2195};
	xor.b64  	%rd2564, %rd2563, %rd2562;
	shf.l.wrap.b32 	%r2197, %r2191, %r2192, 25;
	shf.l.wrap.b32 	%r2198, %r2192, %r2191, 25;
	mov.b64 	%rd2565, {%r2198, %r2197};
	xor.b64  	%rd2566, %rd2564, %rd2565;
	xor.b64  	%rd2567, %rd2548, %rd2500;
	xor.b64  	%rd2568, %rd2548, %rd2524;
	and.b64  	%rd2569, %rd2568, %rd2567;
	xor.b64  	%rd2570, %rd2569, %rd2548;
	add.s64 	%rd2571, %rd2560, %rd2570;
	add.s64 	%rd2572, %rd2571, %rd2566;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2199,%dummy}, %rd2561;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2200}, %rd2561;
	}
	shf.r.wrap.b32 	%r2201, %r2200, %r2199, 14;
	shf.r.wrap.b32 	%r2202, %r2199, %r2200, 14;
	mov.b64 	%rd2573, {%r2202, %r2201};
	shf.r.wrap.b32 	%r2203, %r2200, %r2199, 18;
	shf.r.wrap.b32 	%r2204, %r2199, %r2200, 18;
	mov.b64 	%rd2574, {%r2204, %r2203};
	xor.b64  	%rd2575, %rd2574, %rd2573;
	shf.l.wrap.b32 	%r2205, %r2199, %r2200, 23;
	shf.l.wrap.b32 	%r2206, %r2200, %r2199, 23;
	mov.b64 	%rd2576, {%r2206, %r2205};
	xor.b64  	%rd2577, %rd2575, %rd2576;
	xor.b64  	%rd2578, %rd2537, %rd2513;
	and.b64  	%rd2579, %rd2561, %rd2578;
	xor.b64  	%rd2580, %rd2579, %rd2513;
	add.s64 	%rd2581, %rd2489, %rd2234;
	ld.const.u64 	%rd12960, [k_sha512+488];
	add.s64 	%rd2582, %rd2581, %rd12960;
	add.s64 	%rd2583, %rd2582, %rd2580;
	add.s64 	%rd2584, %rd2583, %rd2577;
	add.s64 	%rd2585, %rd2584, %rd2500;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2207,%dummy}, %rd2572;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2208}, %rd2572;
	}
	shf.r.wrap.b32 	%r2209, %r2208, %r2207, 28;
	shf.r.wrap.b32 	%r2210, %r2207, %r2208, 28;
	mov.b64 	%rd2586, {%r2210, %r2209};
	shf.l.wrap.b32 	%r2211, %r2207, %r2208, 30;
	shf.l.wrap.b32 	%r2212, %r2208, %r2207, 30;
	mov.b64 	%rd2587, {%r2212, %r2211};
	xor.b64  	%rd2588, %rd2587, %rd2586;
	shf.l.wrap.b32 	%r2213, %r2207, %r2208, 25;
	shf.l.wrap.b32 	%r2214, %r2208, %r2207, 25;
	mov.b64 	%rd2589, {%r2214, %r2213};
	xor.b64  	%rd2590, %rd2588, %rd2589;
	xor.b64  	%rd2591, %rd2572, %rd2524;
	xor.b64  	%rd2592, %rd2572, %rd2548;
	and.b64  	%rd2593, %rd2592, %rd2591;
	xor.b64  	%rd2594, %rd2593, %rd2572;
	add.s64 	%rd2595, %rd2584, %rd2594;
	add.s64 	%rd2596, %rd2595, %rd2590;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2215,%dummy}, %rd2585;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2216}, %rd2585;
	}
	shf.r.wrap.b32 	%r2217, %r2216, %r2215, 14;
	shf.r.wrap.b32 	%r2218, %r2215, %r2216, 14;
	mov.b64 	%rd2597, {%r2218, %r2217};
	shf.r.wrap.b32 	%r2219, %r2216, %r2215, 18;
	shf.r.wrap.b32 	%r2220, %r2215, %r2216, 18;
	mov.b64 	%rd2598, {%r2220, %r2219};
	xor.b64  	%rd2599, %rd2598, %rd2597;
	shf.l.wrap.b32 	%r2221, %r2215, %r2216, 23;
	shf.l.wrap.b32 	%r2222, %r2216, %r2215, 23;
	mov.b64 	%rd2600, {%r2222, %r2221};
	xor.b64  	%rd2601, %rd2599, %rd2600;
	xor.b64  	%rd2602, %rd2561, %rd2537;
	and.b64  	%rd2603, %rd2585, %rd2602;
	xor.b64  	%rd2604, %rd2603, %rd2537;
	add.s64 	%rd2605, %rd2513, %rd2247;
	ld.const.u64 	%rd12959, [k_sha512+496];
	add.s64 	%rd2606, %rd2605, %rd12959;
	add.s64 	%rd2607, %rd2606, %rd2604;
	add.s64 	%rd2608, %rd2607, %rd2601;
	add.s64 	%rd2609, %rd2608, %rd2524;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2223,%dummy}, %rd2596;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2224}, %rd2596;
	}
	shf.r.wrap.b32 	%r2225, %r2224, %r2223, 28;
	shf.r.wrap.b32 	%r2226, %r2223, %r2224, 28;
	mov.b64 	%rd2610, {%r2226, %r2225};
	shf.l.wrap.b32 	%r2227, %r2223, %r2224, 30;
	shf.l.wrap.b32 	%r2228, %r2224, %r2223, 30;
	mov.b64 	%rd2611, {%r2228, %r2227};
	xor.b64  	%rd2612, %rd2611, %rd2610;
	shf.l.wrap.b32 	%r2229, %r2223, %r2224, 25;
	shf.l.wrap.b32 	%r2230, %r2224, %r2223, 25;
	mov.b64 	%rd2613, {%r2230, %r2229};
	xor.b64  	%rd2614, %rd2612, %rd2613;
	xor.b64  	%rd2615, %rd2596, %rd2548;
	xor.b64  	%rd2616, %rd2596, %rd2572;
	and.b64  	%rd2617, %rd2616, %rd2615;
	xor.b64  	%rd2618, %rd2617, %rd2596;
	add.s64 	%rd2619, %rd2608, %rd2618;
	add.s64 	%rd2620, %rd2619, %rd2614;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2231,%dummy}, %rd2609;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2232}, %rd2609;
	}
	shf.r.wrap.b32 	%r2233, %r2232, %r2231, 14;
	shf.r.wrap.b32 	%r2234, %r2231, %r2232, 14;
	mov.b64 	%rd2621, {%r2234, %r2233};
	shf.r.wrap.b32 	%r2235, %r2232, %r2231, 18;
	shf.r.wrap.b32 	%r2236, %r2231, %r2232, 18;
	mov.b64 	%rd2622, {%r2236, %r2235};
	xor.b64  	%rd2623, %rd2622, %rd2621;
	shf.l.wrap.b32 	%r2237, %r2231, %r2232, 23;
	shf.l.wrap.b32 	%r2238, %r2232, %r2231, 23;
	mov.b64 	%rd2624, {%r2238, %r2237};
	xor.b64  	%rd2625, %rd2623, %rd2624;
	xor.b64  	%rd2626, %rd2585, %rd2561;
	and.b64  	%rd2627, %rd2609, %rd2626;
	xor.b64  	%rd2628, %rd2627, %rd2561;
	add.s64 	%rd2629, %rd2537, %rd2260;
	ld.const.u64 	%rd12958, [k_sha512+504];
	add.s64 	%rd2630, %rd2629, %rd12958;
	add.s64 	%rd2631, %rd2630, %rd2628;
	add.s64 	%rd2632, %rd2631, %rd2625;
	add.s64 	%rd2633, %rd2632, %rd2548;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2239,%dummy}, %rd2620;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2240}, %rd2620;
	}
	shf.r.wrap.b32 	%r2241, %r2240, %r2239, 28;
	shf.r.wrap.b32 	%r2242, %r2239, %r2240, 28;
	mov.b64 	%rd2634, {%r2242, %r2241};
	shf.l.wrap.b32 	%r2243, %r2239, %r2240, 30;
	shf.l.wrap.b32 	%r2244, %r2240, %r2239, 30;
	mov.b64 	%rd2635, {%r2244, %r2243};
	xor.b64  	%rd2636, %rd2635, %rd2634;
	shf.l.wrap.b32 	%r2245, %r2239, %r2240, 25;
	shf.l.wrap.b32 	%r2246, %r2240, %r2239, 25;
	mov.b64 	%rd2637, {%r2246, %r2245};
	xor.b64  	%rd2638, %rd2636, %rd2637;
	xor.b64  	%rd2639, %rd2620, %rd2572;
	xor.b64  	%rd2640, %rd2620, %rd2596;
	and.b64  	%rd2641, %rd2640, %rd2639;
	xor.b64  	%rd2642, %rd2641, %rd2620;
	add.s64 	%rd2643, %rd2632, %rd2642;
	add.s64 	%rd2644, %rd2643, %rd2638;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2247,%dummy}, %rd2247;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2248}, %rd2247;
	}
	shf.r.wrap.b32 	%r2249, %r2248, %r2247, 19;
	shf.r.wrap.b32 	%r2250, %r2247, %r2248, 19;
	mov.b64 	%rd2645, {%r2250, %r2249};
	shf.l.wrap.b32 	%r2251, %r2247, %r2248, 3;
	shf.l.wrap.b32 	%r2252, %r2248, %r2247, 3;
	mov.b64 	%rd2646, {%r2252, %r2251};
	shr.u64 	%rd2647, %rd2247, 6;
	xor.b64  	%rd2648, %rd2645, %rd2647;
	xor.b64  	%rd2649, %rd2648, %rd2646;
	shf.r.wrap.b32 	%r2253, %r1862, %r1861, 1;
	shf.r.wrap.b32 	%r2254, %r1861, %r1862, 1;
	mov.b64 	%rd2650, {%r2254, %r2253};
	shf.r.wrap.b32 	%r2255, %r1862, %r1861, 8;
	shf.r.wrap.b32 	%r2256, %r1861, %r1862, 8;
	mov.b64 	%rd2651, {%r2256, %r2255};
	shr.u64 	%rd2652, %rd2078, 7;
	xor.b64  	%rd2653, %rd2650, %rd2652;
	xor.b64  	%rd2654, %rd2653, %rd2651;
	add.s64 	%rd2655, %rd2182, %rd2065;
	add.s64 	%rd2656, %rd2655, %rd2649;
	add.s64 	%rd2657, %rd2656, %rd2654;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2257,%dummy}, %rd2260;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2258}, %rd2260;
	}
	shf.r.wrap.b32 	%r2259, %r2258, %r2257, 19;
	shf.r.wrap.b32 	%r2260, %r2257, %r2258, 19;
	mov.b64 	%rd2658, {%r2260, %r2259};
	shf.l.wrap.b32 	%r2261, %r2257, %r2258, 3;
	shf.l.wrap.b32 	%r2262, %r2258, %r2257, 3;
	mov.b64 	%rd2659, {%r2262, %r2261};
	shr.u64 	%rd2660, %rd2260, 6;
	xor.b64  	%rd2661, %rd2658, %rd2660;
	xor.b64  	%rd2662, %rd2661, %rd2659;
	shf.r.wrap.b32 	%r2263, %r1872, %r1871, 1;
	shf.r.wrap.b32 	%r2264, %r1871, %r1872, 1;
	mov.b64 	%rd2663, {%r2264, %r2263};
	shf.r.wrap.b32 	%r2265, %r1872, %r1871, 8;
	shf.r.wrap.b32 	%r2266, %r1871, %r1872, 8;
	mov.b64 	%rd2664, {%r2266, %r2265};
	shr.u64 	%rd2665, %rd2091, 7;
	xor.b64  	%rd2666, %rd2663, %rd2665;
	xor.b64  	%rd2667, %rd2666, %rd2664;
	add.s64 	%rd2668, %rd2195, %rd2078;
	add.s64 	%rd2669, %rd2668, %rd2662;
	add.s64 	%rd2670, %rd2669, %rd2667;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2267,%dummy}, %rd2657;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2268}, %rd2657;
	}
	shf.r.wrap.b32 	%r2269, %r2268, %r2267, 19;
	shf.r.wrap.b32 	%r2270, %r2267, %r2268, 19;
	mov.b64 	%rd2671, {%r2270, %r2269};
	shf.l.wrap.b32 	%r2271, %r2267, %r2268, 3;
	shf.l.wrap.b32 	%r2272, %r2268, %r2267, 3;
	mov.b64 	%rd2672, {%r2272, %r2271};
	shr.u64 	%rd2673, %rd2657, 6;
	xor.b64  	%rd2674, %rd2671, %rd2673;
	xor.b64  	%rd2675, %rd2674, %rd2672;
	shf.r.wrap.b32 	%r2273, %r1882, %r1881, 1;
	shf.r.wrap.b32 	%r2274, %r1881, %r1882, 1;
	mov.b64 	%rd2676, {%r2274, %r2273};
	shf.r.wrap.b32 	%r2275, %r1882, %r1881, 8;
	shf.r.wrap.b32 	%r2276, %r1881, %r1882, 8;
	mov.b64 	%rd2677, {%r2276, %r2275};
	shr.u64 	%rd2678, %rd2104, 7;
	xor.b64  	%rd2679, %rd2676, %rd2678;
	xor.b64  	%rd2680, %rd2679, %rd2677;
	add.s64 	%rd2681, %rd2208, %rd2091;
	add.s64 	%rd2682, %rd2681, %rd2675;
	add.s64 	%rd2683, %rd2682, %rd2680;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2277,%dummy}, %rd2670;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2278}, %rd2670;
	}
	shf.r.wrap.b32 	%r2279, %r2278, %r2277, 19;
	shf.r.wrap.b32 	%r2280, %r2277, %r2278, 19;
	mov.b64 	%rd2684, {%r2280, %r2279};
	shf.l.wrap.b32 	%r2281, %r2277, %r2278, 3;
	shf.l.wrap.b32 	%r2282, %r2278, %r2277, 3;
	mov.b64 	%rd2685, {%r2282, %r2281};
	shr.u64 	%rd2686, %rd2670, 6;
	xor.b64  	%rd2687, %rd2684, %rd2686;
	xor.b64  	%rd2688, %rd2687, %rd2685;
	shf.r.wrap.b32 	%r2283, %r1892, %r1891, 1;
	shf.r.wrap.b32 	%r2284, %r1891, %r1892, 1;
	mov.b64 	%rd2689, {%r2284, %r2283};
	shf.r.wrap.b32 	%r2285, %r1892, %r1891, 8;
	shf.r.wrap.b32 	%r2286, %r1891, %r1892, 8;
	mov.b64 	%rd2690, {%r2286, %r2285};
	shr.u64 	%rd2691, %rd2117, 7;
	xor.b64  	%rd2692, %rd2689, %rd2691;
	xor.b64  	%rd2693, %rd2692, %rd2690;
	add.s64 	%rd2694, %rd2221, %rd2104;
	add.s64 	%rd2695, %rd2694, %rd2688;
	add.s64 	%rd2696, %rd2695, %rd2693;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2287,%dummy}, %rd2683;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2288}, %rd2683;
	}
	shf.r.wrap.b32 	%r2289, %r2288, %r2287, 19;
	shf.r.wrap.b32 	%r2290, %r2287, %r2288, 19;
	mov.b64 	%rd2697, {%r2290, %r2289};
	shf.l.wrap.b32 	%r2291, %r2287, %r2288, 3;
	shf.l.wrap.b32 	%r2292, %r2288, %r2287, 3;
	mov.b64 	%rd2698, {%r2292, %r2291};
	shr.u64 	%rd2699, %rd2683, 6;
	xor.b64  	%rd2700, %rd2697, %rd2699;
	xor.b64  	%rd2701, %rd2700, %rd2698;
	shf.r.wrap.b32 	%r2293, %r1902, %r1901, 1;
	shf.r.wrap.b32 	%r2294, %r1901, %r1902, 1;
	mov.b64 	%rd2702, {%r2294, %r2293};
	shf.r.wrap.b32 	%r2295, %r1902, %r1901, 8;
	shf.r.wrap.b32 	%r2296, %r1901, %r1902, 8;
	mov.b64 	%rd2703, {%r2296, %r2295};
	shr.u64 	%rd2704, %rd2130, 7;
	xor.b64  	%rd2705, %rd2702, %rd2704;
	xor.b64  	%rd2706, %rd2705, %rd2703;
	add.s64 	%rd2707, %rd2234, %rd2117;
	add.s64 	%rd2708, %rd2707, %rd2701;
	add.s64 	%rd2709, %rd2708, %rd2706;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2297,%dummy}, %rd2696;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2298}, %rd2696;
	}
	shf.r.wrap.b32 	%r2299, %r2298, %r2297, 19;
	shf.r.wrap.b32 	%r2300, %r2297, %r2298, 19;
	mov.b64 	%rd2710, {%r2300, %r2299};
	shf.l.wrap.b32 	%r2301, %r2297, %r2298, 3;
	shf.l.wrap.b32 	%r2302, %r2298, %r2297, 3;
	mov.b64 	%rd2711, {%r2302, %r2301};
	shr.u64 	%rd2712, %rd2696, 6;
	xor.b64  	%rd2713, %rd2710, %rd2712;
	xor.b64  	%rd2714, %rd2713, %rd2711;
	shf.r.wrap.b32 	%r2303, %r1912, %r1911, 1;
	shf.r.wrap.b32 	%r2304, %r1911, %r1912, 1;
	mov.b64 	%rd2715, {%r2304, %r2303};
	shf.r.wrap.b32 	%r2305, %r1912, %r1911, 8;
	shf.r.wrap.b32 	%r2306, %r1911, %r1912, 8;
	mov.b64 	%rd2716, {%r2306, %r2305};
	shr.u64 	%rd2717, %rd2143, 7;
	xor.b64  	%rd2718, %rd2715, %rd2717;
	xor.b64  	%rd2719, %rd2718, %rd2716;
	add.s64 	%rd2720, %rd2247, %rd2130;
	add.s64 	%rd2721, %rd2720, %rd2714;
	add.s64 	%rd2722, %rd2721, %rd2719;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2307,%dummy}, %rd2709;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2308}, %rd2709;
	}
	shf.r.wrap.b32 	%r2309, %r2308, %r2307, 19;
	shf.r.wrap.b32 	%r2310, %r2307, %r2308, 19;
	mov.b64 	%rd2723, {%r2310, %r2309};
	shf.l.wrap.b32 	%r2311, %r2307, %r2308, 3;
	shf.l.wrap.b32 	%r2312, %r2308, %r2307, 3;
	mov.b64 	%rd2724, {%r2312, %r2311};
	shr.u64 	%rd2725, %rd2709, 6;
	xor.b64  	%rd2726, %rd2723, %rd2725;
	xor.b64  	%rd2727, %rd2726, %rd2724;
	shf.r.wrap.b32 	%r2313, %r1922, %r1921, 1;
	shf.r.wrap.b32 	%r2314, %r1921, %r1922, 1;
	mov.b64 	%rd2728, {%r2314, %r2313};
	shf.r.wrap.b32 	%r2315, %r1922, %r1921, 8;
	shf.r.wrap.b32 	%r2316, %r1921, %r1922, 8;
	mov.b64 	%rd2729, {%r2316, %r2315};
	shr.u64 	%rd2730, %rd2156, 7;
	xor.b64  	%rd2731, %rd2728, %rd2730;
	xor.b64  	%rd2732, %rd2731, %rd2729;
	add.s64 	%rd2733, %rd2260, %rd2143;
	add.s64 	%rd2734, %rd2733, %rd2727;
	add.s64 	%rd2735, %rd2734, %rd2732;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2317,%dummy}, %rd2722;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2318}, %rd2722;
	}
	shf.r.wrap.b32 	%r2319, %r2318, %r2317, 19;
	shf.r.wrap.b32 	%r2320, %r2317, %r2318, 19;
	mov.b64 	%rd2736, {%r2320, %r2319};
	shf.l.wrap.b32 	%r2321, %r2317, %r2318, 3;
	shf.l.wrap.b32 	%r2322, %r2318, %r2317, 3;
	mov.b64 	%rd2737, {%r2322, %r2321};
	shr.u64 	%rd2738, %rd2722, 6;
	xor.b64  	%rd2739, %rd2736, %rd2738;
	xor.b64  	%rd2740, %rd2739, %rd2737;
	shf.r.wrap.b32 	%r2323, %r1932, %r1931, 1;
	shf.r.wrap.b32 	%r2324, %r1931, %r1932, 1;
	mov.b64 	%rd2741, {%r2324, %r2323};
	shf.r.wrap.b32 	%r2325, %r1932, %r1931, 8;
	shf.r.wrap.b32 	%r2326, %r1931, %r1932, 8;
	mov.b64 	%rd2742, {%r2326, %r2325};
	shr.u64 	%rd2743, %rd2169, 7;
	xor.b64  	%rd2744, %rd2741, %rd2743;
	xor.b64  	%rd2745, %rd2744, %rd2742;
	add.s64 	%rd2746, %rd2657, %rd2156;
	add.s64 	%rd2747, %rd2746, %rd2740;
	add.s64 	%rd2748, %rd2747, %rd2745;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2327,%dummy}, %rd2735;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2328}, %rd2735;
	}
	shf.r.wrap.b32 	%r2329, %r2328, %r2327, 19;
	shf.r.wrap.b32 	%r2330, %r2327, %r2328, 19;
	mov.b64 	%rd2749, {%r2330, %r2329};
	shf.l.wrap.b32 	%r2331, %r2327, %r2328, 3;
	shf.l.wrap.b32 	%r2332, %r2328, %r2327, 3;
	mov.b64 	%rd2750, {%r2332, %r2331};
	shr.u64 	%rd2751, %rd2735, 6;
	xor.b64  	%rd2752, %rd2749, %rd2751;
	xor.b64  	%rd2753, %rd2752, %rd2750;
	shf.r.wrap.b32 	%r2333, %r1942, %r1941, 1;
	shf.r.wrap.b32 	%r2334, %r1941, %r1942, 1;
	mov.b64 	%rd2754, {%r2334, %r2333};
	shf.r.wrap.b32 	%r2335, %r1942, %r1941, 8;
	shf.r.wrap.b32 	%r2336, %r1941, %r1942, 8;
	mov.b64 	%rd2755, {%r2336, %r2335};
	shr.u64 	%rd2756, %rd2182, 7;
	xor.b64  	%rd2757, %rd2754, %rd2756;
	xor.b64  	%rd2758, %rd2757, %rd2755;
	add.s64 	%rd2759, %rd2670, %rd2169;
	add.s64 	%rd2760, %rd2759, %rd2753;
	add.s64 	%rd2761, %rd2760, %rd2758;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2337,%dummy}, %rd2748;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2338}, %rd2748;
	}
	shf.r.wrap.b32 	%r2339, %r2338, %r2337, 19;
	shf.r.wrap.b32 	%r2340, %r2337, %r2338, 19;
	mov.b64 	%rd2762, {%r2340, %r2339};
	shf.l.wrap.b32 	%r2341, %r2337, %r2338, 3;
	shf.l.wrap.b32 	%r2342, %r2338, %r2337, 3;
	mov.b64 	%rd2763, {%r2342, %r2341};
	shr.u64 	%rd2764, %rd2748, 6;
	xor.b64  	%rd2765, %rd2762, %rd2764;
	xor.b64  	%rd2766, %rd2765, %rd2763;
	shf.r.wrap.b32 	%r2343, %r1952, %r1951, 1;
	shf.r.wrap.b32 	%r2344, %r1951, %r1952, 1;
	mov.b64 	%rd2767, {%r2344, %r2343};
	shf.r.wrap.b32 	%r2345, %r1952, %r1951, 8;
	shf.r.wrap.b32 	%r2346, %r1951, %r1952, 8;
	mov.b64 	%rd2768, {%r2346, %r2345};
	shr.u64 	%rd2769, %rd2195, 7;
	xor.b64  	%rd2770, %rd2767, %rd2769;
	xor.b64  	%rd2771, %rd2770, %rd2768;
	add.s64 	%rd2772, %rd2683, %rd2182;
	add.s64 	%rd2773, %rd2772, %rd2766;
	add.s64 	%rd2774, %rd2773, %rd2771;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2347,%dummy}, %rd2761;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2348}, %rd2761;
	}
	shf.r.wrap.b32 	%r2349, %r2348, %r2347, 19;
	shf.r.wrap.b32 	%r2350, %r2347, %r2348, 19;
	mov.b64 	%rd2775, {%r2350, %r2349};
	shf.l.wrap.b32 	%r2351, %r2347, %r2348, 3;
	shf.l.wrap.b32 	%r2352, %r2348, %r2347, 3;
	mov.b64 	%rd2776, {%r2352, %r2351};
	shr.u64 	%rd2777, %rd2761, 6;
	xor.b64  	%rd2778, %rd2775, %rd2777;
	xor.b64  	%rd2779, %rd2778, %rd2776;
	shf.r.wrap.b32 	%r2353, %r1962, %r1961, 1;
	shf.r.wrap.b32 	%r2354, %r1961, %r1962, 1;
	mov.b64 	%rd2780, {%r2354, %r2353};
	shf.r.wrap.b32 	%r2355, %r1962, %r1961, 8;
	shf.r.wrap.b32 	%r2356, %r1961, %r1962, 8;
	mov.b64 	%rd2781, {%r2356, %r2355};
	shr.u64 	%rd2782, %rd2208, 7;
	xor.b64  	%rd2783, %rd2780, %rd2782;
	xor.b64  	%rd2784, %rd2783, %rd2781;
	add.s64 	%rd2785, %rd2696, %rd2195;
	add.s64 	%rd2786, %rd2785, %rd2779;
	add.s64 	%rd2787, %rd2786, %rd2784;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2357,%dummy}, %rd2774;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2358}, %rd2774;
	}
	shf.r.wrap.b32 	%r2359, %r2358, %r2357, 19;
	shf.r.wrap.b32 	%r2360, %r2357, %r2358, 19;
	mov.b64 	%rd2788, {%r2360, %r2359};
	shf.l.wrap.b32 	%r2361, %r2357, %r2358, 3;
	shf.l.wrap.b32 	%r2362, %r2358, %r2357, 3;
	mov.b64 	%rd2789, {%r2362, %r2361};
	shr.u64 	%rd2790, %rd2774, 6;
	xor.b64  	%rd2791, %rd2788, %rd2790;
	xor.b64  	%rd2792, %rd2791, %rd2789;
	shf.r.wrap.b32 	%r2363, %r1972, %r1971, 1;
	shf.r.wrap.b32 	%r2364, %r1971, %r1972, 1;
	mov.b64 	%rd2793, {%r2364, %r2363};
	shf.r.wrap.b32 	%r2365, %r1972, %r1971, 8;
	shf.r.wrap.b32 	%r2366, %r1971, %r1972, 8;
	mov.b64 	%rd2794, {%r2366, %r2365};
	shr.u64 	%rd2795, %rd2221, 7;
	xor.b64  	%rd2796, %rd2793, %rd2795;
	xor.b64  	%rd2797, %rd2796, %rd2794;
	add.s64 	%rd2798, %rd2709, %rd2208;
	add.s64 	%rd2799, %rd2798, %rd2792;
	add.s64 	%rd2800, %rd2799, %rd2797;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2367,%dummy}, %rd2787;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2368}, %rd2787;
	}
	shf.r.wrap.b32 	%r2369, %r2368, %r2367, 19;
	shf.r.wrap.b32 	%r2370, %r2367, %r2368, 19;
	mov.b64 	%rd2801, {%r2370, %r2369};
	shf.l.wrap.b32 	%r2371, %r2367, %r2368, 3;
	shf.l.wrap.b32 	%r2372, %r2368, %r2367, 3;
	mov.b64 	%rd2802, {%r2372, %r2371};
	shr.u64 	%rd2803, %rd2787, 6;
	xor.b64  	%rd2804, %rd2801, %rd2803;
	xor.b64  	%rd2805, %rd2804, %rd2802;
	shf.r.wrap.b32 	%r2373, %r1982, %r1981, 1;
	shf.r.wrap.b32 	%r2374, %r1981, %r1982, 1;
	mov.b64 	%rd2806, {%r2374, %r2373};
	shf.r.wrap.b32 	%r2375, %r1982, %r1981, 8;
	shf.r.wrap.b32 	%r2376, %r1981, %r1982, 8;
	mov.b64 	%rd2807, {%r2376, %r2375};
	shr.u64 	%rd2808, %rd2234, 7;
	xor.b64  	%rd2809, %rd2806, %rd2808;
	xor.b64  	%rd2810, %rd2809, %rd2807;
	add.s64 	%rd2811, %rd2722, %rd2221;
	add.s64 	%rd2812, %rd2811, %rd2805;
	add.s64 	%rd2813, %rd2812, %rd2810;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2377,%dummy}, %rd2800;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2378}, %rd2800;
	}
	shf.r.wrap.b32 	%r2379, %r2378, %r2377, 19;
	shf.r.wrap.b32 	%r2380, %r2377, %r2378, 19;
	mov.b64 	%rd2814, {%r2380, %r2379};
	shf.l.wrap.b32 	%r2381, %r2377, %r2378, 3;
	shf.l.wrap.b32 	%r2382, %r2378, %r2377, 3;
	mov.b64 	%rd2815, {%r2382, %r2381};
	shr.u64 	%rd2816, %rd2800, 6;
	xor.b64  	%rd2817, %rd2814, %rd2816;
	xor.b64  	%rd2818, %rd2817, %rd2815;
	shf.r.wrap.b32 	%r2383, %r2248, %r2247, 1;
	shf.r.wrap.b32 	%r2384, %r2247, %r2248, 1;
	mov.b64 	%rd2819, {%r2384, %r2383};
	shf.r.wrap.b32 	%r2385, %r2248, %r2247, 8;
	shf.r.wrap.b32 	%r2386, %r2247, %r2248, 8;
	mov.b64 	%rd2820, {%r2386, %r2385};
	shr.u64 	%rd2821, %rd2247, 7;
	xor.b64  	%rd2822, %rd2819, %rd2821;
	xor.b64  	%rd2823, %rd2822, %rd2820;
	add.s64 	%rd2824, %rd2735, %rd2234;
	add.s64 	%rd2825, %rd2824, %rd2818;
	add.s64 	%rd2826, %rd2825, %rd2823;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2387,%dummy}, %rd2813;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2388}, %rd2813;
	}
	shf.r.wrap.b32 	%r2389, %r2388, %r2387, 19;
	shf.r.wrap.b32 	%r2390, %r2387, %r2388, 19;
	mov.b64 	%rd2827, {%r2390, %r2389};
	shf.l.wrap.b32 	%r2391, %r2387, %r2388, 3;
	shf.l.wrap.b32 	%r2392, %r2388, %r2387, 3;
	mov.b64 	%rd2828, {%r2392, %r2391};
	shr.u64 	%rd2829, %rd2813, 6;
	xor.b64  	%rd2830, %rd2827, %rd2829;
	xor.b64  	%rd2831, %rd2830, %rd2828;
	shf.r.wrap.b32 	%r2393, %r2258, %r2257, 1;
	shf.r.wrap.b32 	%r2394, %r2257, %r2258, 1;
	mov.b64 	%rd2832, {%r2394, %r2393};
	shf.r.wrap.b32 	%r2395, %r2258, %r2257, 8;
	shf.r.wrap.b32 	%r2396, %r2257, %r2258, 8;
	mov.b64 	%rd2833, {%r2396, %r2395};
	shr.u64 	%rd2834, %rd2260, 7;
	xor.b64  	%rd2835, %rd2832, %rd2834;
	xor.b64  	%rd2836, %rd2835, %rd2833;
	add.s64 	%rd2837, %rd2748, %rd2247;
	add.s64 	%rd2838, %rd2837, %rd2831;
	add.s64 	%rd2839, %rd2838, %rd2836;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2397,%dummy}, %rd2826;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2398}, %rd2826;
	}
	shf.r.wrap.b32 	%r2399, %r2398, %r2397, 19;
	shf.r.wrap.b32 	%r2400, %r2397, %r2398, 19;
	mov.b64 	%rd2840, {%r2400, %r2399};
	shf.l.wrap.b32 	%r2401, %r2397, %r2398, 3;
	shf.l.wrap.b32 	%r2402, %r2398, %r2397, 3;
	mov.b64 	%rd2841, {%r2402, %r2401};
	shr.u64 	%rd2842, %rd2826, 6;
	xor.b64  	%rd2843, %rd2840, %rd2842;
	xor.b64  	%rd2844, %rd2843, %rd2841;
	shf.r.wrap.b32 	%r2403, %r2268, %r2267, 1;
	shf.r.wrap.b32 	%r2404, %r2267, %r2268, 1;
	mov.b64 	%rd2845, {%r2404, %r2403};
	shf.r.wrap.b32 	%r2405, %r2268, %r2267, 8;
	shf.r.wrap.b32 	%r2406, %r2267, %r2268, 8;
	mov.b64 	%rd2846, {%r2406, %r2405};
	shr.u64 	%rd2847, %rd2657, 7;
	xor.b64  	%rd2848, %rd2845, %rd2847;
	xor.b64  	%rd2849, %rd2848, %rd2846;
	add.s64 	%rd2850, %rd2761, %rd2260;
	add.s64 	%rd2851, %rd2850, %rd2844;
	add.s64 	%rd2852, %rd2851, %rd2849;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2407,%dummy}, %rd2633;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2408}, %rd2633;
	}
	shf.r.wrap.b32 	%r2409, %r2408, %r2407, 14;
	shf.r.wrap.b32 	%r2410, %r2407, %r2408, 14;
	mov.b64 	%rd2853, {%r2410, %r2409};
	shf.r.wrap.b32 	%r2411, %r2408, %r2407, 18;
	shf.r.wrap.b32 	%r2412, %r2407, %r2408, 18;
	mov.b64 	%rd2854, {%r2412, %r2411};
	xor.b64  	%rd2855, %rd2854, %rd2853;
	shf.l.wrap.b32 	%r2413, %r2407, %r2408, 23;
	shf.l.wrap.b32 	%r2414, %r2408, %r2407, 23;
	mov.b64 	%rd2856, {%r2414, %r2413};
	xor.b64  	%rd2857, %rd2855, %rd2856;
	xor.b64  	%rd2858, %rd2609, %rd2585;
	and.b64  	%rd2859, %rd2858, %rd2633;
	xor.b64  	%rd2860, %rd2859, %rd2585;
	add.s64 	%rd2861, %rd2860, %rd2561;
	add.s64 	%rd2862, %rd2861, %rd2657;
	ld.const.u64 	%rd12957, [k_sha512+512];
	add.s64 	%rd2863, %rd2862, %rd12957;
	add.s64 	%rd2864, %rd2863, %rd2857;
	add.s64 	%rd2865, %rd2864, %rd2572;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2415,%dummy}, %rd2644;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2416}, %rd2644;
	}
	shf.r.wrap.b32 	%r2417, %r2416, %r2415, 28;
	shf.r.wrap.b32 	%r2418, %r2415, %r2416, 28;
	mov.b64 	%rd2866, {%r2418, %r2417};
	shf.l.wrap.b32 	%r2419, %r2415, %r2416, 30;
	shf.l.wrap.b32 	%r2420, %r2416, %r2415, 30;
	mov.b64 	%rd2867, {%r2420, %r2419};
	xor.b64  	%rd2868, %rd2867, %rd2866;
	shf.l.wrap.b32 	%r2421, %r2415, %r2416, 25;
	shf.l.wrap.b32 	%r2422, %r2416, %r2415, 25;
	mov.b64 	%rd2869, {%r2422, %r2421};
	xor.b64  	%rd2870, %rd2868, %rd2869;
	xor.b64  	%rd2871, %rd2644, %rd2596;
	xor.b64  	%rd2872, %rd2644, %rd2620;
	and.b64  	%rd2873, %rd2872, %rd2871;
	xor.b64  	%rd2874, %rd2873, %rd2644;
	add.s64 	%rd2875, %rd2864, %rd2874;
	add.s64 	%rd2876, %rd2875, %rd2870;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2423,%dummy}, %rd2865;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2424}, %rd2865;
	}
	shf.r.wrap.b32 	%r2425, %r2424, %r2423, 14;
	shf.r.wrap.b32 	%r2426, %r2423, %r2424, 14;
	mov.b64 	%rd2877, {%r2426, %r2425};
	shf.r.wrap.b32 	%r2427, %r2424, %r2423, 18;
	shf.r.wrap.b32 	%r2428, %r2423, %r2424, 18;
	mov.b64 	%rd2878, {%r2428, %r2427};
	xor.b64  	%rd2879, %rd2878, %rd2877;
	shf.l.wrap.b32 	%r2429, %r2423, %r2424, 23;
	shf.l.wrap.b32 	%r2430, %r2424, %r2423, 23;
	mov.b64 	%rd2880, {%r2430, %r2429};
	xor.b64  	%rd2881, %rd2879, %rd2880;
	xor.b64  	%rd2882, %rd2633, %rd2609;
	and.b64  	%rd2883, %rd2865, %rd2882;
	xor.b64  	%rd2884, %rd2883, %rd2609;
	add.s64 	%rd2885, %rd2670, %rd2585;
	ld.const.u64 	%rd12956, [k_sha512+520];
	add.s64 	%rd2886, %rd2885, %rd12956;
	add.s64 	%rd2887, %rd2886, %rd2884;
	add.s64 	%rd2888, %rd2887, %rd2881;
	add.s64 	%rd2889, %rd2888, %rd2596;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2431,%dummy}, %rd2876;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2432}, %rd2876;
	}
	shf.r.wrap.b32 	%r2433, %r2432, %r2431, 28;
	shf.r.wrap.b32 	%r2434, %r2431, %r2432, 28;
	mov.b64 	%rd2890, {%r2434, %r2433};
	shf.l.wrap.b32 	%r2435, %r2431, %r2432, 30;
	shf.l.wrap.b32 	%r2436, %r2432, %r2431, 30;
	mov.b64 	%rd2891, {%r2436, %r2435};
	xor.b64  	%rd2892, %rd2891, %rd2890;
	shf.l.wrap.b32 	%r2437, %r2431, %r2432, 25;
	shf.l.wrap.b32 	%r2438, %r2432, %r2431, 25;
	mov.b64 	%rd2893, {%r2438, %r2437};
	xor.b64  	%rd2894, %rd2892, %rd2893;
	xor.b64  	%rd2895, %rd2876, %rd2620;
	xor.b64  	%rd2896, %rd2876, %rd2644;
	and.b64  	%rd2897, %rd2896, %rd2895;
	xor.b64  	%rd2898, %rd2897, %rd2876;
	add.s64 	%rd2899, %rd2888, %rd2898;
	add.s64 	%rd2900, %rd2899, %rd2894;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2439,%dummy}, %rd2889;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2440}, %rd2889;
	}
	shf.r.wrap.b32 	%r2441, %r2440, %r2439, 14;
	shf.r.wrap.b32 	%r2442, %r2439, %r2440, 14;
	mov.b64 	%rd2901, {%r2442, %r2441};
	shf.r.wrap.b32 	%r2443, %r2440, %r2439, 18;
	shf.r.wrap.b32 	%r2444, %r2439, %r2440, 18;
	mov.b64 	%rd2902, {%r2444, %r2443};
	xor.b64  	%rd2903, %rd2902, %rd2901;
	shf.l.wrap.b32 	%r2445, %r2439, %r2440, 23;
	shf.l.wrap.b32 	%r2446, %r2440, %r2439, 23;
	mov.b64 	%rd2904, {%r2446, %r2445};
	xor.b64  	%rd2905, %rd2903, %rd2904;
	xor.b64  	%rd2906, %rd2865, %rd2633;
	and.b64  	%rd2907, %rd2889, %rd2906;
	xor.b64  	%rd2908, %rd2907, %rd2633;
	add.s64 	%rd2909, %rd2683, %rd2609;
	ld.const.u64 	%rd12955, [k_sha512+528];
	add.s64 	%rd2910, %rd2909, %rd12955;
	add.s64 	%rd2911, %rd2910, %rd2908;
	add.s64 	%rd2912, %rd2911, %rd2905;
	add.s64 	%rd2913, %rd2912, %rd2620;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2447,%dummy}, %rd2900;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2448}, %rd2900;
	}
	shf.r.wrap.b32 	%r2449, %r2448, %r2447, 28;
	shf.r.wrap.b32 	%r2450, %r2447, %r2448, 28;
	mov.b64 	%rd2914, {%r2450, %r2449};
	shf.l.wrap.b32 	%r2451, %r2447, %r2448, 30;
	shf.l.wrap.b32 	%r2452, %r2448, %r2447, 30;
	mov.b64 	%rd2915, {%r2452, %r2451};
	xor.b64  	%rd2916, %rd2915, %rd2914;
	shf.l.wrap.b32 	%r2453, %r2447, %r2448, 25;
	shf.l.wrap.b32 	%r2454, %r2448, %r2447, 25;
	mov.b64 	%rd2917, {%r2454, %r2453};
	xor.b64  	%rd2918, %rd2916, %rd2917;
	xor.b64  	%rd2919, %rd2900, %rd2644;
	xor.b64  	%rd2920, %rd2900, %rd2876;
	and.b64  	%rd2921, %rd2920, %rd2919;
	xor.b64  	%rd2922, %rd2921, %rd2900;
	add.s64 	%rd2923, %rd2912, %rd2922;
	add.s64 	%rd2924, %rd2923, %rd2918;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2455,%dummy}, %rd2913;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2456}, %rd2913;
	}
	shf.r.wrap.b32 	%r2457, %r2456, %r2455, 14;
	shf.r.wrap.b32 	%r2458, %r2455, %r2456, 14;
	mov.b64 	%rd2925, {%r2458, %r2457};
	shf.r.wrap.b32 	%r2459, %r2456, %r2455, 18;
	shf.r.wrap.b32 	%r2460, %r2455, %r2456, 18;
	mov.b64 	%rd2926, {%r2460, %r2459};
	xor.b64  	%rd2927, %rd2926, %rd2925;
	shf.l.wrap.b32 	%r2461, %r2455, %r2456, 23;
	shf.l.wrap.b32 	%r2462, %r2456, %r2455, 23;
	mov.b64 	%rd2928, {%r2462, %r2461};
	xor.b64  	%rd2929, %rd2927, %rd2928;
	xor.b64  	%rd2930, %rd2889, %rd2865;
	and.b64  	%rd2931, %rd2913, %rd2930;
	xor.b64  	%rd2932, %rd2931, %rd2865;
	add.s64 	%rd2933, %rd2696, %rd2633;
	ld.const.u64 	%rd12954, [k_sha512+536];
	add.s64 	%rd2934, %rd2933, %rd12954;
	add.s64 	%rd2935, %rd2934, %rd2932;
	add.s64 	%rd2936, %rd2935, %rd2929;
	add.s64 	%rd2937, %rd2936, %rd2644;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2463,%dummy}, %rd2924;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2464}, %rd2924;
	}
	shf.r.wrap.b32 	%r2465, %r2464, %r2463, 28;
	shf.r.wrap.b32 	%r2466, %r2463, %r2464, 28;
	mov.b64 	%rd2938, {%r2466, %r2465};
	shf.l.wrap.b32 	%r2467, %r2463, %r2464, 30;
	shf.l.wrap.b32 	%r2468, %r2464, %r2463, 30;
	mov.b64 	%rd2939, {%r2468, %r2467};
	xor.b64  	%rd2940, %rd2939, %rd2938;
	shf.l.wrap.b32 	%r2469, %r2463, %r2464, 25;
	shf.l.wrap.b32 	%r2470, %r2464, %r2463, 25;
	mov.b64 	%rd2941, {%r2470, %r2469};
	xor.b64  	%rd2942, %rd2940, %rd2941;
	xor.b64  	%rd2943, %rd2924, %rd2876;
	xor.b64  	%rd2944, %rd2924, %rd2900;
	and.b64  	%rd2945, %rd2944, %rd2943;
	xor.b64  	%rd2946, %rd2945, %rd2924;
	add.s64 	%rd2947, %rd2936, %rd2946;
	add.s64 	%rd2948, %rd2947, %rd2942;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2471,%dummy}, %rd2937;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2472}, %rd2937;
	}
	shf.r.wrap.b32 	%r2473, %r2472, %r2471, 14;
	shf.r.wrap.b32 	%r2474, %r2471, %r2472, 14;
	mov.b64 	%rd2949, {%r2474, %r2473};
	shf.r.wrap.b32 	%r2475, %r2472, %r2471, 18;
	shf.r.wrap.b32 	%r2476, %r2471, %r2472, 18;
	mov.b64 	%rd2950, {%r2476, %r2475};
	xor.b64  	%rd2951, %rd2950, %rd2949;
	shf.l.wrap.b32 	%r2477, %r2471, %r2472, 23;
	shf.l.wrap.b32 	%r2478, %r2472, %r2471, 23;
	mov.b64 	%rd2952, {%r2478, %r2477};
	xor.b64  	%rd2953, %rd2951, %rd2952;
	xor.b64  	%rd2954, %rd2913, %rd2889;
	and.b64  	%rd2955, %rd2937, %rd2954;
	xor.b64  	%rd2956, %rd2955, %rd2889;
	add.s64 	%rd2957, %rd2865, %rd2709;
	ld.const.u64 	%rd12953, [k_sha512+544];
	add.s64 	%rd2958, %rd2957, %rd12953;
	add.s64 	%rd2959, %rd2958, %rd2956;
	add.s64 	%rd2960, %rd2959, %rd2953;
	add.s64 	%rd2961, %rd2960, %rd2876;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2479,%dummy}, %rd2948;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2480}, %rd2948;
	}
	shf.r.wrap.b32 	%r2481, %r2480, %r2479, 28;
	shf.r.wrap.b32 	%r2482, %r2479, %r2480, 28;
	mov.b64 	%rd2962, {%r2482, %r2481};
	shf.l.wrap.b32 	%r2483, %r2479, %r2480, 30;
	shf.l.wrap.b32 	%r2484, %r2480, %r2479, 30;
	mov.b64 	%rd2963, {%r2484, %r2483};
	xor.b64  	%rd2964, %rd2963, %rd2962;
	shf.l.wrap.b32 	%r2485, %r2479, %r2480, 25;
	shf.l.wrap.b32 	%r2486, %r2480, %r2479, 25;
	mov.b64 	%rd2965, {%r2486, %r2485};
	xor.b64  	%rd2966, %rd2964, %rd2965;
	xor.b64  	%rd2967, %rd2948, %rd2900;
	xor.b64  	%rd2968, %rd2948, %rd2924;
	and.b64  	%rd2969, %rd2968, %rd2967;
	xor.b64  	%rd2970, %rd2969, %rd2948;
	add.s64 	%rd2971, %rd2960, %rd2970;
	add.s64 	%rd2972, %rd2971, %rd2966;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2487,%dummy}, %rd2961;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2488}, %rd2961;
	}
	shf.r.wrap.b32 	%r2489, %r2488, %r2487, 14;
	shf.r.wrap.b32 	%r2490, %r2487, %r2488, 14;
	mov.b64 	%rd2973, {%r2490, %r2489};
	shf.r.wrap.b32 	%r2491, %r2488, %r2487, 18;
	shf.r.wrap.b32 	%r2492, %r2487, %r2488, 18;
	mov.b64 	%rd2974, {%r2492, %r2491};
	xor.b64  	%rd2975, %rd2974, %rd2973;
	shf.l.wrap.b32 	%r2493, %r2487, %r2488, 23;
	shf.l.wrap.b32 	%r2494, %r2488, %r2487, 23;
	mov.b64 	%rd2976, {%r2494, %r2493};
	xor.b64  	%rd2977, %rd2975, %rd2976;
	xor.b64  	%rd2978, %rd2937, %rd2913;
	and.b64  	%rd2979, %rd2961, %rd2978;
	xor.b64  	%rd2980, %rd2979, %rd2913;
	add.s64 	%rd2981, %rd2889, %rd2722;
	ld.const.u64 	%rd12952, [k_sha512+552];
	add.s64 	%rd2982, %rd2981, %rd12952;
	add.s64 	%rd2983, %rd2982, %rd2980;
	add.s64 	%rd2984, %rd2983, %rd2977;
	add.s64 	%rd2985, %rd2984, %rd2900;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2495,%dummy}, %rd2972;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2496}, %rd2972;
	}
	shf.r.wrap.b32 	%r2497, %r2496, %r2495, 28;
	shf.r.wrap.b32 	%r2498, %r2495, %r2496, 28;
	mov.b64 	%rd2986, {%r2498, %r2497};
	shf.l.wrap.b32 	%r2499, %r2495, %r2496, 30;
	shf.l.wrap.b32 	%r2500, %r2496, %r2495, 30;
	mov.b64 	%rd2987, {%r2500, %r2499};
	xor.b64  	%rd2988, %rd2987, %rd2986;
	shf.l.wrap.b32 	%r2501, %r2495, %r2496, 25;
	shf.l.wrap.b32 	%r2502, %r2496, %r2495, 25;
	mov.b64 	%rd2989, {%r2502, %r2501};
	xor.b64  	%rd2990, %rd2988, %rd2989;
	xor.b64  	%rd2991, %rd2972, %rd2924;
	xor.b64  	%rd2992, %rd2972, %rd2948;
	and.b64  	%rd2993, %rd2992, %rd2991;
	xor.b64  	%rd2994, %rd2993, %rd2972;
	add.s64 	%rd2995, %rd2984, %rd2994;
	add.s64 	%rd2996, %rd2995, %rd2990;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2503,%dummy}, %rd2985;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2504}, %rd2985;
	}
	shf.r.wrap.b32 	%r2505, %r2504, %r2503, 14;
	shf.r.wrap.b32 	%r2506, %r2503, %r2504, 14;
	mov.b64 	%rd2997, {%r2506, %r2505};
	shf.r.wrap.b32 	%r2507, %r2504, %r2503, 18;
	shf.r.wrap.b32 	%r2508, %r2503, %r2504, 18;
	mov.b64 	%rd2998, {%r2508, %r2507};
	xor.b64  	%rd2999, %rd2998, %rd2997;
	shf.l.wrap.b32 	%r2509, %r2503, %r2504, 23;
	shf.l.wrap.b32 	%r2510, %r2504, %r2503, 23;
	mov.b64 	%rd3000, {%r2510, %r2509};
	xor.b64  	%rd3001, %rd2999, %rd3000;
	xor.b64  	%rd3002, %rd2961, %rd2937;
	and.b64  	%rd3003, %rd2985, %rd3002;
	xor.b64  	%rd3004, %rd3003, %rd2937;
	add.s64 	%rd3005, %rd2913, %rd2735;
	ld.const.u64 	%rd12951, [k_sha512+560];
	add.s64 	%rd3006, %rd3005, %rd12951;
	add.s64 	%rd3007, %rd3006, %rd3004;
	add.s64 	%rd3008, %rd3007, %rd3001;
	add.s64 	%rd3009, %rd3008, %rd2924;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2511,%dummy}, %rd2996;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2512}, %rd2996;
	}
	shf.r.wrap.b32 	%r2513, %r2512, %r2511, 28;
	shf.r.wrap.b32 	%r2514, %r2511, %r2512, 28;
	mov.b64 	%rd3010, {%r2514, %r2513};
	shf.l.wrap.b32 	%r2515, %r2511, %r2512, 30;
	shf.l.wrap.b32 	%r2516, %r2512, %r2511, 30;
	mov.b64 	%rd3011, {%r2516, %r2515};
	xor.b64  	%rd3012, %rd3011, %rd3010;
	shf.l.wrap.b32 	%r2517, %r2511, %r2512, 25;
	shf.l.wrap.b32 	%r2518, %r2512, %r2511, 25;
	mov.b64 	%rd3013, {%r2518, %r2517};
	xor.b64  	%rd3014, %rd3012, %rd3013;
	xor.b64  	%rd3015, %rd2996, %rd2948;
	xor.b64  	%rd3016, %rd2996, %rd2972;
	and.b64  	%rd3017, %rd3016, %rd3015;
	xor.b64  	%rd3018, %rd3017, %rd2996;
	add.s64 	%rd3019, %rd3008, %rd3018;
	add.s64 	%rd3020, %rd3019, %rd3014;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2519,%dummy}, %rd3009;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2520}, %rd3009;
	}
	shf.r.wrap.b32 	%r2521, %r2520, %r2519, 14;
	shf.r.wrap.b32 	%r2522, %r2519, %r2520, 14;
	mov.b64 	%rd3021, {%r2522, %r2521};
	shf.r.wrap.b32 	%r2523, %r2520, %r2519, 18;
	shf.r.wrap.b32 	%r2524, %r2519, %r2520, 18;
	mov.b64 	%rd3022, {%r2524, %r2523};
	xor.b64  	%rd3023, %rd3022, %rd3021;
	shf.l.wrap.b32 	%r2525, %r2519, %r2520, 23;
	shf.l.wrap.b32 	%r2526, %r2520, %r2519, 23;
	mov.b64 	%rd3024, {%r2526, %r2525};
	xor.b64  	%rd3025, %rd3023, %rd3024;
	xor.b64  	%rd3026, %rd2985, %rd2961;
	and.b64  	%rd3027, %rd3009, %rd3026;
	xor.b64  	%rd3028, %rd3027, %rd2961;
	add.s64 	%rd3029, %rd2937, %rd2748;
	ld.const.u64 	%rd12950, [k_sha512+568];
	add.s64 	%rd3030, %rd3029, %rd12950;
	add.s64 	%rd3031, %rd3030, %rd3028;
	add.s64 	%rd3032, %rd3031, %rd3025;
	add.s64 	%rd3033, %rd3032, %rd2948;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2527,%dummy}, %rd3020;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2528}, %rd3020;
	}
	shf.r.wrap.b32 	%r2529, %r2528, %r2527, 28;
	shf.r.wrap.b32 	%r2530, %r2527, %r2528, 28;
	mov.b64 	%rd3034, {%r2530, %r2529};
	shf.l.wrap.b32 	%r2531, %r2527, %r2528, 30;
	shf.l.wrap.b32 	%r2532, %r2528, %r2527, 30;
	mov.b64 	%rd3035, {%r2532, %r2531};
	xor.b64  	%rd3036, %rd3035, %rd3034;
	shf.l.wrap.b32 	%r2533, %r2527, %r2528, 25;
	shf.l.wrap.b32 	%r2534, %r2528, %r2527, 25;
	mov.b64 	%rd3037, {%r2534, %r2533};
	xor.b64  	%rd3038, %rd3036, %rd3037;
	xor.b64  	%rd3039, %rd3020, %rd2972;
	xor.b64  	%rd3040, %rd3020, %rd2996;
	and.b64  	%rd3041, %rd3040, %rd3039;
	xor.b64  	%rd3042, %rd3041, %rd3020;
	add.s64 	%rd3043, %rd3032, %rd3042;
	add.s64 	%rd3044, %rd3043, %rd3038;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2535,%dummy}, %rd3033;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2536}, %rd3033;
	}
	shf.r.wrap.b32 	%r2537, %r2536, %r2535, 14;
	shf.r.wrap.b32 	%r2538, %r2535, %r2536, 14;
	mov.b64 	%rd3045, {%r2538, %r2537};
	shf.r.wrap.b32 	%r2539, %r2536, %r2535, 18;
	shf.r.wrap.b32 	%r2540, %r2535, %r2536, 18;
	mov.b64 	%rd3046, {%r2540, %r2539};
	xor.b64  	%rd3047, %rd3046, %rd3045;
	shf.l.wrap.b32 	%r2541, %r2535, %r2536, 23;
	shf.l.wrap.b32 	%r2542, %r2536, %r2535, 23;
	mov.b64 	%rd3048, {%r2542, %r2541};
	xor.b64  	%rd3049, %rd3047, %rd3048;
	xor.b64  	%rd3050, %rd3009, %rd2985;
	and.b64  	%rd3051, %rd3033, %rd3050;
	xor.b64  	%rd3052, %rd3051, %rd2985;
	add.s64 	%rd3053, %rd2961, %rd2761;
	ld.const.u64 	%rd12949, [k_sha512+576];
	add.s64 	%rd3054, %rd3053, %rd12949;
	add.s64 	%rd3055, %rd3054, %rd3052;
	add.s64 	%rd3056, %rd3055, %rd3049;
	add.s64 	%rd3057, %rd3056, %rd2972;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2543,%dummy}, %rd3044;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2544}, %rd3044;
	}
	shf.r.wrap.b32 	%r2545, %r2544, %r2543, 28;
	shf.r.wrap.b32 	%r2546, %r2543, %r2544, 28;
	mov.b64 	%rd3058, {%r2546, %r2545};
	shf.l.wrap.b32 	%r2547, %r2543, %r2544, 30;
	shf.l.wrap.b32 	%r2548, %r2544, %r2543, 30;
	mov.b64 	%rd3059, {%r2548, %r2547};
	xor.b64  	%rd3060, %rd3059, %rd3058;
	shf.l.wrap.b32 	%r2549, %r2543, %r2544, 25;
	shf.l.wrap.b32 	%r2550, %r2544, %r2543, 25;
	mov.b64 	%rd3061, {%r2550, %r2549};
	xor.b64  	%rd3062, %rd3060, %rd3061;
	xor.b64  	%rd3063, %rd3044, %rd2996;
	xor.b64  	%rd3064, %rd3044, %rd3020;
	and.b64  	%rd3065, %rd3064, %rd3063;
	xor.b64  	%rd3066, %rd3065, %rd3044;
	add.s64 	%rd3067, %rd3056, %rd3066;
	add.s64 	%rd3068, %rd3067, %rd3062;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2551,%dummy}, %rd3057;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2552}, %rd3057;
	}
	shf.r.wrap.b32 	%r2553, %r2552, %r2551, 14;
	shf.r.wrap.b32 	%r2554, %r2551, %r2552, 14;
	mov.b64 	%rd3069, {%r2554, %r2553};
	shf.r.wrap.b32 	%r2555, %r2552, %r2551, 18;
	shf.r.wrap.b32 	%r2556, %r2551, %r2552, 18;
	mov.b64 	%rd3070, {%r2556, %r2555};
	xor.b64  	%rd3071, %rd3070, %rd3069;
	shf.l.wrap.b32 	%r2557, %r2551, %r2552, 23;
	shf.l.wrap.b32 	%r2558, %r2552, %r2551, 23;
	mov.b64 	%rd3072, {%r2558, %r2557};
	xor.b64  	%rd3073, %rd3071, %rd3072;
	xor.b64  	%rd3074, %rd3033, %rd3009;
	and.b64  	%rd3075, %rd3057, %rd3074;
	xor.b64  	%rd3076, %rd3075, %rd3009;
	add.s64 	%rd3077, %rd2985, %rd2774;
	ld.const.u64 	%rd12948, [k_sha512+584];
	add.s64 	%rd3078, %rd3077, %rd12948;
	add.s64 	%rd3079, %rd3078, %rd3076;
	add.s64 	%rd3080, %rd3079, %rd3073;
	add.s64 	%rd3081, %rd3080, %rd2996;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2559,%dummy}, %rd3068;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2560}, %rd3068;
	}
	shf.r.wrap.b32 	%r2561, %r2560, %r2559, 28;
	shf.r.wrap.b32 	%r2562, %r2559, %r2560, 28;
	mov.b64 	%rd3082, {%r2562, %r2561};
	shf.l.wrap.b32 	%r2563, %r2559, %r2560, 30;
	shf.l.wrap.b32 	%r2564, %r2560, %r2559, 30;
	mov.b64 	%rd3083, {%r2564, %r2563};
	xor.b64  	%rd3084, %rd3083, %rd3082;
	shf.l.wrap.b32 	%r2565, %r2559, %r2560, 25;
	shf.l.wrap.b32 	%r2566, %r2560, %r2559, 25;
	mov.b64 	%rd3085, {%r2566, %r2565};
	xor.b64  	%rd3086, %rd3084, %rd3085;
	xor.b64  	%rd3087, %rd3068, %rd3020;
	xor.b64  	%rd3088, %rd3068, %rd3044;
	and.b64  	%rd3089, %rd3088, %rd3087;
	xor.b64  	%rd3090, %rd3089, %rd3068;
	add.s64 	%rd3091, %rd3080, %rd3090;
	add.s64 	%rd3092, %rd3091, %rd3086;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2567,%dummy}, %rd3081;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2568}, %rd3081;
	}
	shf.r.wrap.b32 	%r2569, %r2568, %r2567, 14;
	shf.r.wrap.b32 	%r2570, %r2567, %r2568, 14;
	mov.b64 	%rd3093, {%r2570, %r2569};
	shf.r.wrap.b32 	%r2571, %r2568, %r2567, 18;
	shf.r.wrap.b32 	%r2572, %r2567, %r2568, 18;
	mov.b64 	%rd3094, {%r2572, %r2571};
	xor.b64  	%rd3095, %rd3094, %rd3093;
	shf.l.wrap.b32 	%r2573, %r2567, %r2568, 23;
	shf.l.wrap.b32 	%r2574, %r2568, %r2567, 23;
	mov.b64 	%rd3096, {%r2574, %r2573};
	xor.b64  	%rd3097, %rd3095, %rd3096;
	xor.b64  	%rd3098, %rd3057, %rd3033;
	and.b64  	%rd3099, %rd3081, %rd3098;
	xor.b64  	%rd3100, %rd3099, %rd3033;
	add.s64 	%rd3101, %rd3009, %rd2787;
	ld.const.u64 	%rd12947, [k_sha512+592];
	add.s64 	%rd3102, %rd3101, %rd12947;
	add.s64 	%rd3103, %rd3102, %rd3100;
	add.s64 	%rd3104, %rd3103, %rd3097;
	add.s64 	%rd3105, %rd3104, %rd3020;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2575,%dummy}, %rd3092;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2576}, %rd3092;
	}
	shf.r.wrap.b32 	%r2577, %r2576, %r2575, 28;
	shf.r.wrap.b32 	%r2578, %r2575, %r2576, 28;
	mov.b64 	%rd3106, {%r2578, %r2577};
	shf.l.wrap.b32 	%r2579, %r2575, %r2576, 30;
	shf.l.wrap.b32 	%r2580, %r2576, %r2575, 30;
	mov.b64 	%rd3107, {%r2580, %r2579};
	xor.b64  	%rd3108, %rd3107, %rd3106;
	shf.l.wrap.b32 	%r2581, %r2575, %r2576, 25;
	shf.l.wrap.b32 	%r2582, %r2576, %r2575, 25;
	mov.b64 	%rd3109, {%r2582, %r2581};
	xor.b64  	%rd3110, %rd3108, %rd3109;
	xor.b64  	%rd3111, %rd3092, %rd3044;
	xor.b64  	%rd3112, %rd3092, %rd3068;
	and.b64  	%rd3113, %rd3112, %rd3111;
	xor.b64  	%rd3114, %rd3113, %rd3092;
	add.s64 	%rd3115, %rd3104, %rd3114;
	add.s64 	%rd3116, %rd3115, %rd3110;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2583,%dummy}, %rd3105;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2584}, %rd3105;
	}
	shf.r.wrap.b32 	%r2585, %r2584, %r2583, 14;
	shf.r.wrap.b32 	%r2586, %r2583, %r2584, 14;
	mov.b64 	%rd3117, {%r2586, %r2585};
	shf.r.wrap.b32 	%r2587, %r2584, %r2583, 18;
	shf.r.wrap.b32 	%r2588, %r2583, %r2584, 18;
	mov.b64 	%rd3118, {%r2588, %r2587};
	xor.b64  	%rd3119, %rd3118, %rd3117;
	shf.l.wrap.b32 	%r2589, %r2583, %r2584, 23;
	shf.l.wrap.b32 	%r2590, %r2584, %r2583, 23;
	mov.b64 	%rd3120, {%r2590, %r2589};
	xor.b64  	%rd3121, %rd3119, %rd3120;
	xor.b64  	%rd3122, %rd3081, %rd3057;
	and.b64  	%rd3123, %rd3105, %rd3122;
	xor.b64  	%rd3124, %rd3123, %rd3057;
	add.s64 	%rd3125, %rd3033, %rd2800;
	ld.const.u64 	%rd12946, [k_sha512+600];
	add.s64 	%rd3126, %rd3125, %rd12946;
	add.s64 	%rd3127, %rd3126, %rd3124;
	add.s64 	%rd3128, %rd3127, %rd3121;
	add.s64 	%rd3129, %rd3128, %rd3044;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2591,%dummy}, %rd3116;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2592}, %rd3116;
	}
	shf.r.wrap.b32 	%r2593, %r2592, %r2591, 28;
	shf.r.wrap.b32 	%r2594, %r2591, %r2592, 28;
	mov.b64 	%rd3130, {%r2594, %r2593};
	shf.l.wrap.b32 	%r2595, %r2591, %r2592, 30;
	shf.l.wrap.b32 	%r2596, %r2592, %r2591, 30;
	mov.b64 	%rd3131, {%r2596, %r2595};
	xor.b64  	%rd3132, %rd3131, %rd3130;
	shf.l.wrap.b32 	%r2597, %r2591, %r2592, 25;
	shf.l.wrap.b32 	%r2598, %r2592, %r2591, 25;
	mov.b64 	%rd3133, {%r2598, %r2597};
	xor.b64  	%rd3134, %rd3132, %rd3133;
	xor.b64  	%rd3135, %rd3116, %rd3068;
	xor.b64  	%rd3136, %rd3116, %rd3092;
	and.b64  	%rd3137, %rd3136, %rd3135;
	xor.b64  	%rd3138, %rd3137, %rd3116;
	add.s64 	%rd3139, %rd3128, %rd3138;
	add.s64 	%rd3140, %rd3139, %rd3134;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2599,%dummy}, %rd3129;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2600}, %rd3129;
	}
	shf.r.wrap.b32 	%r2601, %r2600, %r2599, 14;
	shf.r.wrap.b32 	%r2602, %r2599, %r2600, 14;
	mov.b64 	%rd3141, {%r2602, %r2601};
	shf.r.wrap.b32 	%r2603, %r2600, %r2599, 18;
	shf.r.wrap.b32 	%r2604, %r2599, %r2600, 18;
	mov.b64 	%rd3142, {%r2604, %r2603};
	xor.b64  	%rd3143, %rd3142, %rd3141;
	shf.l.wrap.b32 	%r2605, %r2599, %r2600, 23;
	shf.l.wrap.b32 	%r2606, %r2600, %r2599, 23;
	mov.b64 	%rd3144, {%r2606, %r2605};
	xor.b64  	%rd3145, %rd3143, %rd3144;
	xor.b64  	%rd3146, %rd3105, %rd3081;
	and.b64  	%rd3147, %rd3129, %rd3146;
	xor.b64  	%rd3148, %rd3147, %rd3081;
	add.s64 	%rd3149, %rd3057, %rd2813;
	ld.const.u64 	%rd12945, [k_sha512+608];
	add.s64 	%rd3150, %rd3149, %rd12945;
	add.s64 	%rd3151, %rd3150, %rd3148;
	add.s64 	%rd3152, %rd3151, %rd3145;
	add.s64 	%rd3153, %rd3152, %rd3068;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2607,%dummy}, %rd3140;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2608}, %rd3140;
	}
	shf.r.wrap.b32 	%r2609, %r2608, %r2607, 28;
	shf.r.wrap.b32 	%r2610, %r2607, %r2608, 28;
	mov.b64 	%rd3154, {%r2610, %r2609};
	shf.l.wrap.b32 	%r2611, %r2607, %r2608, 30;
	shf.l.wrap.b32 	%r2612, %r2608, %r2607, 30;
	mov.b64 	%rd3155, {%r2612, %r2611};
	xor.b64  	%rd3156, %rd3155, %rd3154;
	shf.l.wrap.b32 	%r2613, %r2607, %r2608, 25;
	shf.l.wrap.b32 	%r2614, %r2608, %r2607, 25;
	mov.b64 	%rd3157, {%r2614, %r2613};
	xor.b64  	%rd3158, %rd3156, %rd3157;
	xor.b64  	%rd3159, %rd3140, %rd3092;
	xor.b64  	%rd3160, %rd3140, %rd3116;
	and.b64  	%rd3161, %rd3160, %rd3159;
	xor.b64  	%rd3162, %rd3161, %rd3140;
	add.s64 	%rd3163, %rd3152, %rd3162;
	add.s64 	%rd3164, %rd3163, %rd3158;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2615,%dummy}, %rd3153;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2616}, %rd3153;
	}
	shf.r.wrap.b32 	%r2617, %r2616, %r2615, 14;
	shf.r.wrap.b32 	%r2618, %r2615, %r2616, 14;
	mov.b64 	%rd3165, {%r2618, %r2617};
	shf.r.wrap.b32 	%r2619, %r2616, %r2615, 18;
	shf.r.wrap.b32 	%r2620, %r2615, %r2616, 18;
	mov.b64 	%rd3166, {%r2620, %r2619};
	xor.b64  	%rd3167, %rd3166, %rd3165;
	shf.l.wrap.b32 	%r2621, %r2615, %r2616, 23;
	shf.l.wrap.b32 	%r2622, %r2616, %r2615, 23;
	mov.b64 	%rd3168, {%r2622, %r2621};
	xor.b64  	%rd3169, %rd3167, %rd3168;
	xor.b64  	%rd3170, %rd3129, %rd3105;
	and.b64  	%rd3171, %rd3153, %rd3170;
	xor.b64  	%rd3172, %rd3171, %rd3105;
	add.s64 	%rd3173, %rd3081, %rd2826;
	ld.const.u64 	%rd12944, [k_sha512+616];
	add.s64 	%rd3174, %rd3173, %rd12944;
	add.s64 	%rd3175, %rd3174, %rd3172;
	add.s64 	%rd3176, %rd3175, %rd3169;
	add.s64 	%rd3177, %rd3176, %rd3092;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2623,%dummy}, %rd3164;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2624}, %rd3164;
	}
	shf.r.wrap.b32 	%r2625, %r2624, %r2623, 28;
	shf.r.wrap.b32 	%r2626, %r2623, %r2624, 28;
	mov.b64 	%rd3178, {%r2626, %r2625};
	shf.l.wrap.b32 	%r2627, %r2623, %r2624, 30;
	shf.l.wrap.b32 	%r2628, %r2624, %r2623, 30;
	mov.b64 	%rd3179, {%r2628, %r2627};
	xor.b64  	%rd3180, %rd3179, %rd3178;
	shf.l.wrap.b32 	%r2629, %r2623, %r2624, 25;
	shf.l.wrap.b32 	%r2630, %r2624, %r2623, 25;
	mov.b64 	%rd3181, {%r2630, %r2629};
	xor.b64  	%rd3182, %rd3180, %rd3181;
	xor.b64  	%rd3183, %rd3164, %rd3116;
	xor.b64  	%rd3184, %rd3164, %rd3140;
	and.b64  	%rd3185, %rd3184, %rd3183;
	xor.b64  	%rd3186, %rd3185, %rd3164;
	add.s64 	%rd3187, %rd3176, %rd3186;
	add.s64 	%rd3188, %rd3187, %rd3182;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2631,%dummy}, %rd3177;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2632}, %rd3177;
	}
	shf.r.wrap.b32 	%r2633, %r2632, %r2631, 14;
	shf.r.wrap.b32 	%r2634, %r2631, %r2632, 14;
	mov.b64 	%rd3189, {%r2634, %r2633};
	shf.r.wrap.b32 	%r2635, %r2632, %r2631, 18;
	shf.r.wrap.b32 	%r2636, %r2631, %r2632, 18;
	mov.b64 	%rd3190, {%r2636, %r2635};
	xor.b64  	%rd3191, %rd3190, %rd3189;
	shf.l.wrap.b32 	%r2637, %r2631, %r2632, 23;
	shf.l.wrap.b32 	%r2638, %r2632, %r2631, 23;
	mov.b64 	%rd3192, {%r2638, %r2637};
	xor.b64  	%rd3193, %rd3191, %rd3192;
	xor.b64  	%rd3194, %rd3153, %rd3129;
	and.b64  	%rd3195, %rd3177, %rd3194;
	xor.b64  	%rd3196, %rd3195, %rd3129;
	add.s64 	%rd3197, %rd3105, %rd2839;
	ld.const.u64 	%rd12943, [k_sha512+624];
	add.s64 	%rd3198, %rd3197, %rd12943;
	add.s64 	%rd3199, %rd3198, %rd3196;
	add.s64 	%rd3200, %rd3199, %rd3193;
	add.s64 	%rd3201, %rd3200, %rd3116;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2639,%dummy}, %rd3188;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2640}, %rd3188;
	}
	shf.r.wrap.b32 	%r2641, %r2640, %r2639, 28;
	shf.r.wrap.b32 	%r2642, %r2639, %r2640, 28;
	mov.b64 	%rd3202, {%r2642, %r2641};
	shf.l.wrap.b32 	%r2643, %r2639, %r2640, 30;
	shf.l.wrap.b32 	%r2644, %r2640, %r2639, 30;
	mov.b64 	%rd3203, {%r2644, %r2643};
	xor.b64  	%rd3204, %rd3203, %rd3202;
	shf.l.wrap.b32 	%r2645, %r2639, %r2640, 25;
	shf.l.wrap.b32 	%r2646, %r2640, %r2639, 25;
	mov.b64 	%rd3205, {%r2646, %r2645};
	xor.b64  	%rd3206, %rd3204, %rd3205;
	xor.b64  	%rd3207, %rd3188, %rd3140;
	xor.b64  	%rd3208, %rd3188, %rd3164;
	and.b64  	%rd3209, %rd3208, %rd3207;
	xor.b64  	%rd3210, %rd3209, %rd3188;
	add.s64 	%rd3211, %rd3200, %rd3210;
	add.s64 	%rd3212, %rd3211, %rd3206;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2647,%dummy}, %rd3201;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2648}, %rd3201;
	}
	shf.r.wrap.b32 	%r2649, %r2648, %r2647, 14;
	shf.r.wrap.b32 	%r2650, %r2647, %r2648, 14;
	mov.b64 	%rd3213, {%r2650, %r2649};
	shf.r.wrap.b32 	%r2651, %r2648, %r2647, 18;
	shf.r.wrap.b32 	%r2652, %r2647, %r2648, 18;
	mov.b64 	%rd3214, {%r2652, %r2651};
	xor.b64  	%rd3215, %rd3214, %rd3213;
	shf.l.wrap.b32 	%r2653, %r2647, %r2648, 23;
	shf.l.wrap.b32 	%r2654, %r2648, %r2647, 23;
	mov.b64 	%rd3216, {%r2654, %r2653};
	xor.b64  	%rd3217, %rd3215, %rd3216;
	xor.b64  	%rd3218, %rd3177, %rd3153;
	and.b64  	%rd3219, %rd3201, %rd3218;
	xor.b64  	%rd3220, %rd3219, %rd3153;
	add.s64 	%rd3221, %rd3129, %rd2852;
	ld.const.u64 	%rd12942, [k_sha512+632];
	add.s64 	%rd3222, %rd3221, %rd12942;
	add.s64 	%rd3223, %rd3222, %rd3220;
	add.s64 	%rd3224, %rd3223, %rd3217;
	add.s64 	%rd3225, %rd3224, %rd3140;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2655,%dummy}, %rd3212;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2656}, %rd3212;
	}
	shf.r.wrap.b32 	%r2657, %r2656, %r2655, 28;
	shf.r.wrap.b32 	%r2658, %r2655, %r2656, 28;
	mov.b64 	%rd3226, {%r2658, %r2657};
	shf.l.wrap.b32 	%r2659, %r2655, %r2656, 30;
	shf.l.wrap.b32 	%r2660, %r2656, %r2655, 30;
	mov.b64 	%rd3227, {%r2660, %r2659};
	xor.b64  	%rd3228, %rd3227, %rd3226;
	shf.l.wrap.b32 	%r2661, %r2655, %r2656, 25;
	shf.l.wrap.b32 	%r2662, %r2656, %r2655, 25;
	mov.b64 	%rd3229, {%r2662, %r2661};
	xor.b64  	%rd3230, %rd3228, %rd3229;
	xor.b64  	%rd3231, %rd3212, %rd3164;
	xor.b64  	%rd3232, %rd3212, %rd3188;
	and.b64  	%rd3233, %rd3232, %rd3231;
	xor.b64  	%rd3234, %rd3233, %rd3212;
	add.s64 	%rd3235, %rd3224, %rd3234;
	add.s64 	%rd3236, %rd3235, %rd3230;
	add.s64 	%rd13029, %rd13029, %rd3236;
	st.local.u64 	[%rd9], %rd13029;
	add.s64 	%rd13028, %rd13028, %rd3212;
	st.local.u64 	[%rd24], %rd13028;
	add.s64 	%rd13027, %rd13027, %rd3188;
	st.local.u64 	[%rd24+8], %rd13027;
	add.s64 	%rd13026, %rd13026, %rd3164;
	st.local.u64 	[%rd24+16], %rd13026;
	add.s64 	%rd13025, %rd13025, %rd3225;
	st.local.u64 	[%rd24+24], %rd13025;
	add.s64 	%rd13024, %rd13024, %rd3201;
	st.local.u64 	[%rd24+32], %rd13024;
	add.s64 	%rd13023, %rd13023, %rd3177;
	st.local.u64 	[%rd24+40], %rd13023;
	add.s64 	%rd13022, %rd13022, %rd3153;
	st.local.u64 	[%rd24+48], %rd13022;
	mov.u32 	%r10602, 0;
	st.local.u32 	[%rd24+56], %r10602;
	st.local.u32 	[%rd24+64], %r10602;
	st.local.u32 	[%rd24+72], %r10602;
	st.local.u32 	[%rd24+80], %r10602;
	st.local.u32 	[%rd24+88], %r10602;
	st.local.u32 	[%rd24+96], %r10602;
	st.local.u32 	[%rd24+104], %r10602;
	st.local.u32 	[%rd24+112], %r10602;
	st.local.u32 	[%rd24+120], %r10602;
	st.local.u32 	[%rd24+128], %r10602;
	st.local.u32 	[%rd24+136], %r10602;
	st.local.u32 	[%rd24+144], %r10602;
	st.local.u32 	[%rd24+152], %r10602;
	st.local.u32 	[%rd24+160], %r10602;
	st.local.u32 	[%rd24+168], %r10602;
	st.local.u32 	[%rd24+176], %r10602;
	st.local.u32 	[%rd25+4], %r10602;
	st.local.u32 	[%rd26+4], %r10602;
	st.local.u32 	[%rd27+4], %r10602;
	st.local.u32 	[%rd28+4], %r10602;
	st.local.u32 	[%rd29+4], %r10602;
	st.local.u32 	[%rd30+4], %r10602;
	st.local.u32 	[%rd31+4], %r10602;
	st.local.u32 	[%rd32+4], %r10602;
	st.local.u32 	[%rd33+4], %r10602;
	st.local.u32 	[%rd34+4], %r10602;
	st.local.u32 	[%rd35+4], %r10602;
	st.local.u32 	[%rd36+4], %r10602;
	st.local.u32 	[%rd37+4], %r10602;
	st.local.u32 	[%rd38+4], %r10602;
	st.local.u32 	[%rd39+4], %r10602;
	st.local.u32 	[%rd40+4], %r10602;
	mov.u32 	%r10603, %r10602;
	mov.u32 	%r10604, %r10602;
	mov.u32 	%r10605, %r10602;
	mov.u32 	%r10606, %r10602;
	mov.u32 	%r10607, %r10602;
	mov.u32 	%r10608, %r10602;
	mov.u32 	%r10609, %r10602;
	mov.u32 	%r10610, %r10602;
	mov.u32 	%r10611, %r10602;
	mov.u32 	%r10612, %r10602;
	mov.u32 	%r10613, %r10602;
	mov.u32 	%r10614, %r10602;
	mov.u32 	%r10615, %r10602;
	mov.u32 	%r10616, %r10602;
	mov.u32 	%r10617, %r10602;
	mov.u32 	%r10618, %r10602;
	mov.u32 	%r10619, %r10602;
	mov.u32 	%r10620, %r10602;
	mov.u32 	%r10621, %r10602;
	mov.u32 	%r10622, %r10602;
	mov.u32 	%r10623, %r10602;
	mov.u32 	%r10624, %r10602;
	mov.u32 	%r10625, %r10602;
	mov.u32 	%r10626, %r10602;
	mov.u32 	%r10627, %r10602;
	mov.u32 	%r10628, %r10602;
	mov.u32 	%r10629, %r10602;
	mov.u32 	%r10630, %r10602;
	mov.u32 	%r10631, %r10602;
	bra.uni 	BB6_327;

BB6_325:
	ld.const.u64 	%rd13021, [k_sha512];
	ld.const.u64 	%rd13020, [k_sha512+8];
	ld.const.u64 	%rd13019, [k_sha512+16];
	ld.const.u64 	%rd13018, [k_sha512+24];
	ld.const.u64 	%rd13017, [k_sha512+32];
	ld.const.u64 	%rd13016, [k_sha512+40];
	ld.const.u64 	%rd13015, [k_sha512+48];
	ld.const.u64 	%rd13014, [k_sha512+56];
	ld.const.u64 	%rd13013, [k_sha512+64];
	ld.const.u64 	%rd13012, [k_sha512+72];
	ld.const.u64 	%rd13011, [k_sha512+80];
	ld.const.u64 	%rd13010, [k_sha512+88];
	ld.const.u64 	%rd13009, [k_sha512+96];
	ld.const.u64 	%rd13008, [k_sha512+104];
	ld.const.u64 	%rd13007, [k_sha512+112];
	ld.const.u64 	%rd13006, [k_sha512+120];
	ld.const.u64 	%rd13005, [k_sha512+128];
	ld.const.u64 	%rd13004, [k_sha512+136];
	ld.const.u64 	%rd13003, [k_sha512+144];
	ld.const.u64 	%rd13002, [k_sha512+152];
	ld.const.u64 	%rd13001, [k_sha512+160];
	ld.const.u64 	%rd13000, [k_sha512+168];
	ld.const.u64 	%rd12999, [k_sha512+176];
	ld.const.u64 	%rd12998, [k_sha512+184];
	ld.const.u64 	%rd12997, [k_sha512+192];
	ld.const.u64 	%rd12996, [k_sha512+200];
	ld.const.u64 	%rd12995, [k_sha512+208];
	ld.const.u64 	%rd12994, [k_sha512+216];
	ld.const.u64 	%rd12993, [k_sha512+224];
	ld.const.u64 	%rd12992, [k_sha512+232];
	ld.const.u64 	%rd12991, [k_sha512+240];
	ld.const.u64 	%rd12990, [k_sha512+248];
	ld.const.u64 	%rd12989, [k_sha512+256];
	ld.const.u64 	%rd12988, [k_sha512+264];
	ld.const.u64 	%rd12987, [k_sha512+272];
	ld.const.u64 	%rd12986, [k_sha512+280];
	ld.const.u64 	%rd12985, [k_sha512+288];
	ld.const.u64 	%rd12984, [k_sha512+296];
	ld.const.u64 	%rd12983, [k_sha512+304];
	ld.const.u64 	%rd12982, [k_sha512+312];
	ld.const.u64 	%rd12981, [k_sha512+320];
	ld.const.u64 	%rd12980, [k_sha512+328];
	ld.const.u64 	%rd12979, [k_sha512+336];
	ld.const.u64 	%rd12978, [k_sha512+344];
	ld.const.u64 	%rd12977, [k_sha512+352];
	ld.const.u64 	%rd12976, [k_sha512+360];
	ld.const.u64 	%rd12975, [k_sha512+368];
	ld.const.u64 	%rd12974, [k_sha512+376];
	ld.const.u64 	%rd12973, [k_sha512+384];
	ld.const.u64 	%rd12972, [k_sha512+392];
	ld.const.u64 	%rd12971, [k_sha512+400];
	ld.const.u64 	%rd12970, [k_sha512+408];
	ld.const.u64 	%rd12969, [k_sha512+416];
	ld.const.u64 	%rd12968, [k_sha512+424];
	ld.const.u64 	%rd12967, [k_sha512+432];
	ld.const.u64 	%rd12966, [k_sha512+440];
	ld.const.u64 	%rd12965, [k_sha512+448];
	ld.const.u64 	%rd12964, [k_sha512+456];
	ld.const.u64 	%rd12963, [k_sha512+464];
	ld.const.u64 	%rd12962, [k_sha512+472];
	ld.const.u64 	%rd12961, [k_sha512+480];
	ld.const.u64 	%rd12960, [k_sha512+488];
	ld.const.u64 	%rd12959, [k_sha512+496];
	ld.const.u64 	%rd12958, [k_sha512+504];
	ld.const.u64 	%rd12957, [k_sha512+512];
	ld.const.u64 	%rd12956, [k_sha512+520];
	ld.const.u64 	%rd12955, [k_sha512+528];
	ld.const.u64 	%rd12954, [k_sha512+536];
	ld.const.u64 	%rd12953, [k_sha512+544];
	ld.const.u64 	%rd12952, [k_sha512+552];
	ld.const.u64 	%rd12951, [k_sha512+560];
	ld.const.u64 	%rd12950, [k_sha512+568];
	ld.const.u64 	%rd12949, [k_sha512+576];
	ld.const.u64 	%rd12948, [k_sha512+584];
	ld.const.u64 	%rd12947, [k_sha512+592];
	ld.const.u64 	%rd12946, [k_sha512+600];
	ld.const.u64 	%rd12945, [k_sha512+608];
	ld.const.u64 	%rd12944, [k_sha512+616];
	ld.const.u64 	%rd12943, [k_sha512+624];
	ld.const.u64 	%rd12942, [k_sha512+632];

BB6_327:
	mov.b64	%rd3237, {%r10630, %r10631};
	mov.b64	%rd3238, {%r10628, %r10629};
	mov.b64	%rd3239, {%r10626, %r10627};
	mov.b64	%rd3240, {%r10624, %r10625};
	mov.b64	%rd3241, {%r10622, %r10623};
	mov.b64	%rd3242, {%r10620, %r10621};
	mov.b64	%rd3243, {%r10618, %r10619};
	mov.b64	%rd3244, {%r10616, %r10617};
	mov.b64	%rd3245, {%r10614, %r10615};
	mov.b64	%rd3246, {%r10612, %r10613};
	mov.b64	%rd3247, {%r10610, %r10611};
	mov.b64	%rd3248, {%r10608, %r10609};
	mov.b64	%rd3249, {%r10606, %r10607};
	mov.b64	%rd3250, {%r10604, %r10605};
	mov.b64	%rd3251, {%r10602, %r10603};
	shl.b32 	%r2664, %r52, 3;
	mov.b64	%rd3252, {%r2664, %r526};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2666,%dummy}, %rd13025;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2667}, %rd13025;
	}
	shf.r.wrap.b32 	%r2668, %r2667, %r2666, 18;
	shf.r.wrap.b32 	%r2669, %r2666, %r2667, 18;
	mov.b64 	%rd3253, {%r2669, %r2668};
	shf.r.wrap.b32 	%r2670, %r2667, %r2666, 14;
	shf.r.wrap.b32 	%r2671, %r2666, %r2667, 14;
	mov.b64 	%rd3254, {%r2671, %r2670};
	xor.b64  	%rd3255, %rd3253, %rd3254;
	shf.l.wrap.b32 	%r2672, %r2666, %r2667, 23;
	shf.l.wrap.b32 	%r2673, %r2667, %r2666, 23;
	mov.b64 	%rd3256, {%r2673, %r2672};
	xor.b64  	%rd3257, %rd3255, %rd3256;
	xor.b64  	%rd3258, %rd13023, %rd13024;
	and.b64  	%rd3259, %rd3258, %rd13025;
	xor.b64  	%rd3260, %rd3259, %rd13023;
	add.s64 	%rd3261, %rd3260, %rd13022;
	add.s64 	%rd3262, %rd3261, %rd3237;
	add.s64 	%rd3263, %rd3262, %rd13021;
	add.s64 	%rd3264, %rd3263, %rd3257;
	add.s64 	%rd3265, %rd3264, %rd13026;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2674}, %rd13029;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2675,%dummy}, %rd13029;
	}
	shf.l.wrap.b32 	%r2676, %r2675, %r2674, 30;
	shf.l.wrap.b32 	%r2677, %r2674, %r2675, 30;
	mov.b64 	%rd3266, {%r2677, %r2676};
	shf.r.wrap.b32 	%r2678, %r2674, %r2675, 28;
	shf.r.wrap.b32 	%r2679, %r2675, %r2674, 28;
	mov.b64 	%rd3267, {%r2679, %r2678};
	xor.b64  	%rd3268, %rd3266, %rd3267;
	shf.l.wrap.b32 	%r2680, %r2675, %r2674, 25;
	shf.l.wrap.b32 	%r2681, %r2674, %r2675, 25;
	mov.b64 	%rd3269, {%r2681, %r2680};
	xor.b64  	%rd3270, %rd3268, %rd3269;
	xor.b64  	%rd3271, %rd13028, %rd13029;
	xor.b64  	%rd3272, %rd13027, %rd13029;
	and.b64  	%rd3273, %rd3272, %rd3271;
	xor.b64  	%rd3274, %rd3273, %rd13029;
	add.s64 	%rd3275, %rd3264, %rd3274;
	add.s64 	%rd3276, %rd3275, %rd3270;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2682,%dummy}, %rd3265;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2683}, %rd3265;
	}
	shf.r.wrap.b32 	%r2684, %r2683, %r2682, 14;
	shf.r.wrap.b32 	%r2685, %r2682, %r2683, 14;
	mov.b64 	%rd3277, {%r2685, %r2684};
	shf.r.wrap.b32 	%r2686, %r2683, %r2682, 18;
	shf.r.wrap.b32 	%r2687, %r2682, %r2683, 18;
	mov.b64 	%rd3278, {%r2687, %r2686};
	xor.b64  	%rd3279, %rd3278, %rd3277;
	shf.l.wrap.b32 	%r2688, %r2682, %r2683, 23;
	shf.l.wrap.b32 	%r2689, %r2683, %r2682, 23;
	mov.b64 	%rd3280, {%r2689, %r2688};
	xor.b64  	%rd3281, %rd3279, %rd3280;
	xor.b64  	%rd3282, %rd13024, %rd13025;
	and.b64  	%rd3283, %rd3265, %rd3282;
	xor.b64  	%rd3284, %rd3283, %rd13024;
	add.s64 	%rd3285, %rd3238, %rd13023;
	add.s64 	%rd3286, %rd3285, %rd13020;
	add.s64 	%rd3287, %rd3286, %rd3284;
	add.s64 	%rd3288, %rd3287, %rd3281;
	add.s64 	%rd3289, %rd3288, %rd13027;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2690,%dummy}, %rd3276;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2691}, %rd3276;
	}
	shf.r.wrap.b32 	%r2692, %r2691, %r2690, 28;
	shf.r.wrap.b32 	%r2693, %r2690, %r2691, 28;
	mov.b64 	%rd3290, {%r2693, %r2692};
	shf.l.wrap.b32 	%r2694, %r2690, %r2691, 30;
	shf.l.wrap.b32 	%r2695, %r2691, %r2690, 30;
	mov.b64 	%rd3291, {%r2695, %r2694};
	xor.b64  	%rd3292, %rd3291, %rd3290;
	shf.l.wrap.b32 	%r2696, %r2690, %r2691, 25;
	shf.l.wrap.b32 	%r2697, %r2691, %r2690, 25;
	mov.b64 	%rd3293, {%r2697, %r2696};
	xor.b64  	%rd3294, %rd3292, %rd3293;
	xor.b64  	%rd3295, %rd3276, %rd13028;
	xor.b64  	%rd3296, %rd3276, %rd13029;
	and.b64  	%rd3297, %rd3296, %rd3295;
	xor.b64  	%rd3298, %rd3297, %rd3276;
	add.s64 	%rd3299, %rd3288, %rd3298;
	add.s64 	%rd3300, %rd3299, %rd3294;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2698,%dummy}, %rd3289;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2699}, %rd3289;
	}
	shf.r.wrap.b32 	%r2700, %r2699, %r2698, 14;
	shf.r.wrap.b32 	%r2701, %r2698, %r2699, 14;
	mov.b64 	%rd3301, {%r2701, %r2700};
	shf.r.wrap.b32 	%r2702, %r2699, %r2698, 18;
	shf.r.wrap.b32 	%r2703, %r2698, %r2699, 18;
	mov.b64 	%rd3302, {%r2703, %r2702};
	xor.b64  	%rd3303, %rd3302, %rd3301;
	shf.l.wrap.b32 	%r2704, %r2698, %r2699, 23;
	shf.l.wrap.b32 	%r2705, %r2699, %r2698, 23;
	mov.b64 	%rd3304, {%r2705, %r2704};
	xor.b64  	%rd3305, %rd3303, %rd3304;
	xor.b64  	%rd3306, %rd3265, %rd13025;
	and.b64  	%rd3307, %rd3289, %rd3306;
	xor.b64  	%rd3308, %rd3307, %rd13025;
	add.s64 	%rd3309, %rd3239, %rd13024;
	add.s64 	%rd3310, %rd3309, %rd13019;
	add.s64 	%rd3311, %rd3310, %rd3308;
	add.s64 	%rd3312, %rd3311, %rd3305;
	add.s64 	%rd3313, %rd3312, %rd13028;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2706,%dummy}, %rd3300;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2707}, %rd3300;
	}
	shf.r.wrap.b32 	%r2708, %r2707, %r2706, 28;
	shf.r.wrap.b32 	%r2709, %r2706, %r2707, 28;
	mov.b64 	%rd3314, {%r2709, %r2708};
	shf.l.wrap.b32 	%r2710, %r2706, %r2707, 30;
	shf.l.wrap.b32 	%r2711, %r2707, %r2706, 30;
	mov.b64 	%rd3315, {%r2711, %r2710};
	xor.b64  	%rd3316, %rd3315, %rd3314;
	shf.l.wrap.b32 	%r2712, %r2706, %r2707, 25;
	shf.l.wrap.b32 	%r2713, %r2707, %r2706, 25;
	mov.b64 	%rd3317, {%r2713, %r2712};
	xor.b64  	%rd3318, %rd3316, %rd3317;
	xor.b64  	%rd3319, %rd3300, %rd13029;
	xor.b64  	%rd3320, %rd3300, %rd3276;
	and.b64  	%rd3321, %rd3320, %rd3319;
	xor.b64  	%rd3322, %rd3321, %rd3300;
	add.s64 	%rd3323, %rd3312, %rd3322;
	add.s64 	%rd3324, %rd3323, %rd3318;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2714,%dummy}, %rd3313;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2715}, %rd3313;
	}
	shf.r.wrap.b32 	%r2716, %r2715, %r2714, 14;
	shf.r.wrap.b32 	%r2717, %r2714, %r2715, 14;
	mov.b64 	%rd3325, {%r2717, %r2716};
	shf.r.wrap.b32 	%r2718, %r2715, %r2714, 18;
	shf.r.wrap.b32 	%r2719, %r2714, %r2715, 18;
	mov.b64 	%rd3326, {%r2719, %r2718};
	xor.b64  	%rd3327, %rd3326, %rd3325;
	shf.l.wrap.b32 	%r2720, %r2714, %r2715, 23;
	shf.l.wrap.b32 	%r2721, %r2715, %r2714, 23;
	mov.b64 	%rd3328, {%r2721, %r2720};
	xor.b64  	%rd3329, %rd3327, %rd3328;
	xor.b64  	%rd3330, %rd3289, %rd3265;
	and.b64  	%rd3331, %rd3313, %rd3330;
	xor.b64  	%rd3332, %rd3331, %rd3265;
	add.s64 	%rd3333, %rd3240, %rd13025;
	add.s64 	%rd3334, %rd3333, %rd13018;
	add.s64 	%rd3335, %rd3334, %rd3332;
	add.s64 	%rd3336, %rd3335, %rd3329;
	add.s64 	%rd3337, %rd3336, %rd13029;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2722,%dummy}, %rd3324;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2723}, %rd3324;
	}
	shf.r.wrap.b32 	%r2724, %r2723, %r2722, 28;
	shf.r.wrap.b32 	%r2725, %r2722, %r2723, 28;
	mov.b64 	%rd3338, {%r2725, %r2724};
	shf.l.wrap.b32 	%r2726, %r2722, %r2723, 30;
	shf.l.wrap.b32 	%r2727, %r2723, %r2722, 30;
	mov.b64 	%rd3339, {%r2727, %r2726};
	xor.b64  	%rd3340, %rd3339, %rd3338;
	shf.l.wrap.b32 	%r2728, %r2722, %r2723, 25;
	shf.l.wrap.b32 	%r2729, %r2723, %r2722, 25;
	mov.b64 	%rd3341, {%r2729, %r2728};
	xor.b64  	%rd3342, %rd3340, %rd3341;
	xor.b64  	%rd3343, %rd3324, %rd3276;
	xor.b64  	%rd3344, %rd3324, %rd3300;
	and.b64  	%rd3345, %rd3344, %rd3343;
	xor.b64  	%rd3346, %rd3345, %rd3324;
	add.s64 	%rd3347, %rd3336, %rd3346;
	add.s64 	%rd3348, %rd3347, %rd3342;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2730,%dummy}, %rd3337;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2731}, %rd3337;
	}
	shf.r.wrap.b32 	%r2732, %r2731, %r2730, 14;
	shf.r.wrap.b32 	%r2733, %r2730, %r2731, 14;
	mov.b64 	%rd3349, {%r2733, %r2732};
	shf.r.wrap.b32 	%r2734, %r2731, %r2730, 18;
	shf.r.wrap.b32 	%r2735, %r2730, %r2731, 18;
	mov.b64 	%rd3350, {%r2735, %r2734};
	xor.b64  	%rd3351, %rd3350, %rd3349;
	shf.l.wrap.b32 	%r2736, %r2730, %r2731, 23;
	shf.l.wrap.b32 	%r2737, %r2731, %r2730, 23;
	mov.b64 	%rd3352, {%r2737, %r2736};
	xor.b64  	%rd3353, %rd3351, %rd3352;
	xor.b64  	%rd3354, %rd3313, %rd3289;
	and.b64  	%rd3355, %rd3337, %rd3354;
	xor.b64  	%rd3356, %rd3355, %rd3289;
	add.s64 	%rd3357, %rd3265, %rd3241;
	add.s64 	%rd3358, %rd3357, %rd13017;
	add.s64 	%rd3359, %rd3358, %rd3356;
	add.s64 	%rd3360, %rd3359, %rd3353;
	add.s64 	%rd3361, %rd3360, %rd3276;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2738,%dummy}, %rd3348;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2739}, %rd3348;
	}
	shf.r.wrap.b32 	%r2740, %r2739, %r2738, 28;
	shf.r.wrap.b32 	%r2741, %r2738, %r2739, 28;
	mov.b64 	%rd3362, {%r2741, %r2740};
	shf.l.wrap.b32 	%r2742, %r2738, %r2739, 30;
	shf.l.wrap.b32 	%r2743, %r2739, %r2738, 30;
	mov.b64 	%rd3363, {%r2743, %r2742};
	xor.b64  	%rd3364, %rd3363, %rd3362;
	shf.l.wrap.b32 	%r2744, %r2738, %r2739, 25;
	shf.l.wrap.b32 	%r2745, %r2739, %r2738, 25;
	mov.b64 	%rd3365, {%r2745, %r2744};
	xor.b64  	%rd3366, %rd3364, %rd3365;
	xor.b64  	%rd3367, %rd3348, %rd3300;
	xor.b64  	%rd3368, %rd3348, %rd3324;
	and.b64  	%rd3369, %rd3368, %rd3367;
	xor.b64  	%rd3370, %rd3369, %rd3348;
	add.s64 	%rd3371, %rd3360, %rd3370;
	add.s64 	%rd3372, %rd3371, %rd3366;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2746,%dummy}, %rd3361;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2747}, %rd3361;
	}
	shf.r.wrap.b32 	%r2748, %r2747, %r2746, 14;
	shf.r.wrap.b32 	%r2749, %r2746, %r2747, 14;
	mov.b64 	%rd3373, {%r2749, %r2748};
	shf.r.wrap.b32 	%r2750, %r2747, %r2746, 18;
	shf.r.wrap.b32 	%r2751, %r2746, %r2747, 18;
	mov.b64 	%rd3374, {%r2751, %r2750};
	xor.b64  	%rd3375, %rd3374, %rd3373;
	shf.l.wrap.b32 	%r2752, %r2746, %r2747, 23;
	shf.l.wrap.b32 	%r2753, %r2747, %r2746, 23;
	mov.b64 	%rd3376, {%r2753, %r2752};
	xor.b64  	%rd3377, %rd3375, %rd3376;
	xor.b64  	%rd3378, %rd3337, %rd3313;
	and.b64  	%rd3379, %rd3361, %rd3378;
	xor.b64  	%rd3380, %rd3379, %rd3313;
	add.s64 	%rd3381, %rd3289, %rd3242;
	add.s64 	%rd3382, %rd3381, %rd13016;
	add.s64 	%rd3383, %rd3382, %rd3380;
	add.s64 	%rd3384, %rd3383, %rd3377;
	add.s64 	%rd3385, %rd3384, %rd3300;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2754,%dummy}, %rd3372;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2755}, %rd3372;
	}
	shf.r.wrap.b32 	%r2756, %r2755, %r2754, 28;
	shf.r.wrap.b32 	%r2757, %r2754, %r2755, 28;
	mov.b64 	%rd3386, {%r2757, %r2756};
	shf.l.wrap.b32 	%r2758, %r2754, %r2755, 30;
	shf.l.wrap.b32 	%r2759, %r2755, %r2754, 30;
	mov.b64 	%rd3387, {%r2759, %r2758};
	xor.b64  	%rd3388, %rd3387, %rd3386;
	shf.l.wrap.b32 	%r2760, %r2754, %r2755, 25;
	shf.l.wrap.b32 	%r2761, %r2755, %r2754, 25;
	mov.b64 	%rd3389, {%r2761, %r2760};
	xor.b64  	%rd3390, %rd3388, %rd3389;
	xor.b64  	%rd3391, %rd3372, %rd3324;
	xor.b64  	%rd3392, %rd3372, %rd3348;
	and.b64  	%rd3393, %rd3392, %rd3391;
	xor.b64  	%rd3394, %rd3393, %rd3372;
	add.s64 	%rd3395, %rd3384, %rd3394;
	add.s64 	%rd3396, %rd3395, %rd3390;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2762,%dummy}, %rd3385;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2763}, %rd3385;
	}
	shf.r.wrap.b32 	%r2764, %r2763, %r2762, 14;
	shf.r.wrap.b32 	%r2765, %r2762, %r2763, 14;
	mov.b64 	%rd3397, {%r2765, %r2764};
	shf.r.wrap.b32 	%r2766, %r2763, %r2762, 18;
	shf.r.wrap.b32 	%r2767, %r2762, %r2763, 18;
	mov.b64 	%rd3398, {%r2767, %r2766};
	xor.b64  	%rd3399, %rd3398, %rd3397;
	shf.l.wrap.b32 	%r2768, %r2762, %r2763, 23;
	shf.l.wrap.b32 	%r2769, %r2763, %r2762, 23;
	mov.b64 	%rd3400, {%r2769, %r2768};
	xor.b64  	%rd3401, %rd3399, %rd3400;
	xor.b64  	%rd3402, %rd3361, %rd3337;
	and.b64  	%rd3403, %rd3385, %rd3402;
	xor.b64  	%rd3404, %rd3403, %rd3337;
	add.s64 	%rd3405, %rd3313, %rd3243;
	add.s64 	%rd3406, %rd3405, %rd13015;
	add.s64 	%rd3407, %rd3406, %rd3404;
	add.s64 	%rd3408, %rd3407, %rd3401;
	add.s64 	%rd3409, %rd3408, %rd3324;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2770,%dummy}, %rd3396;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2771}, %rd3396;
	}
	shf.r.wrap.b32 	%r2772, %r2771, %r2770, 28;
	shf.r.wrap.b32 	%r2773, %r2770, %r2771, 28;
	mov.b64 	%rd3410, {%r2773, %r2772};
	shf.l.wrap.b32 	%r2774, %r2770, %r2771, 30;
	shf.l.wrap.b32 	%r2775, %r2771, %r2770, 30;
	mov.b64 	%rd3411, {%r2775, %r2774};
	xor.b64  	%rd3412, %rd3411, %rd3410;
	shf.l.wrap.b32 	%r2776, %r2770, %r2771, 25;
	shf.l.wrap.b32 	%r2777, %r2771, %r2770, 25;
	mov.b64 	%rd3413, {%r2777, %r2776};
	xor.b64  	%rd3414, %rd3412, %rd3413;
	xor.b64  	%rd3415, %rd3396, %rd3348;
	xor.b64  	%rd3416, %rd3396, %rd3372;
	and.b64  	%rd3417, %rd3416, %rd3415;
	xor.b64  	%rd3418, %rd3417, %rd3396;
	add.s64 	%rd3419, %rd3408, %rd3418;
	add.s64 	%rd3420, %rd3419, %rd3414;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2778,%dummy}, %rd3409;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2779}, %rd3409;
	}
	shf.r.wrap.b32 	%r2780, %r2779, %r2778, 14;
	shf.r.wrap.b32 	%r2781, %r2778, %r2779, 14;
	mov.b64 	%rd3421, {%r2781, %r2780};
	shf.r.wrap.b32 	%r2782, %r2779, %r2778, 18;
	shf.r.wrap.b32 	%r2783, %r2778, %r2779, 18;
	mov.b64 	%rd3422, {%r2783, %r2782};
	xor.b64  	%rd3423, %rd3422, %rd3421;
	shf.l.wrap.b32 	%r2784, %r2778, %r2779, 23;
	shf.l.wrap.b32 	%r2785, %r2779, %r2778, 23;
	mov.b64 	%rd3424, {%r2785, %r2784};
	xor.b64  	%rd3425, %rd3423, %rd3424;
	xor.b64  	%rd3426, %rd3385, %rd3361;
	and.b64  	%rd3427, %rd3409, %rd3426;
	xor.b64  	%rd3428, %rd3427, %rd3361;
	add.s64 	%rd3429, %rd3337, %rd3244;
	add.s64 	%rd3430, %rd3429, %rd13014;
	add.s64 	%rd3431, %rd3430, %rd3428;
	add.s64 	%rd3432, %rd3431, %rd3425;
	add.s64 	%rd3433, %rd3432, %rd3348;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2786,%dummy}, %rd3420;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2787}, %rd3420;
	}
	shf.r.wrap.b32 	%r2788, %r2787, %r2786, 28;
	shf.r.wrap.b32 	%r2789, %r2786, %r2787, 28;
	mov.b64 	%rd3434, {%r2789, %r2788};
	shf.l.wrap.b32 	%r2790, %r2786, %r2787, 30;
	shf.l.wrap.b32 	%r2791, %r2787, %r2786, 30;
	mov.b64 	%rd3435, {%r2791, %r2790};
	xor.b64  	%rd3436, %rd3435, %rd3434;
	shf.l.wrap.b32 	%r2792, %r2786, %r2787, 25;
	shf.l.wrap.b32 	%r2793, %r2787, %r2786, 25;
	mov.b64 	%rd3437, {%r2793, %r2792};
	xor.b64  	%rd3438, %rd3436, %rd3437;
	xor.b64  	%rd3439, %rd3420, %rd3372;
	xor.b64  	%rd3440, %rd3420, %rd3396;
	and.b64  	%rd3441, %rd3440, %rd3439;
	xor.b64  	%rd3442, %rd3441, %rd3420;
	add.s64 	%rd3443, %rd3432, %rd3442;
	add.s64 	%rd3444, %rd3443, %rd3438;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2794,%dummy}, %rd3433;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2795}, %rd3433;
	}
	shf.r.wrap.b32 	%r2796, %r2795, %r2794, 14;
	shf.r.wrap.b32 	%r2797, %r2794, %r2795, 14;
	mov.b64 	%rd3445, {%r2797, %r2796};
	shf.r.wrap.b32 	%r2798, %r2795, %r2794, 18;
	shf.r.wrap.b32 	%r2799, %r2794, %r2795, 18;
	mov.b64 	%rd3446, {%r2799, %r2798};
	xor.b64  	%rd3447, %rd3446, %rd3445;
	shf.l.wrap.b32 	%r2800, %r2794, %r2795, 23;
	shf.l.wrap.b32 	%r2801, %r2795, %r2794, 23;
	mov.b64 	%rd3448, {%r2801, %r2800};
	xor.b64  	%rd3449, %rd3447, %rd3448;
	xor.b64  	%rd3450, %rd3409, %rd3385;
	and.b64  	%rd3451, %rd3433, %rd3450;
	xor.b64  	%rd3452, %rd3451, %rd3385;
	add.s64 	%rd3453, %rd3361, %rd3245;
	add.s64 	%rd3454, %rd3453, %rd13013;
	add.s64 	%rd3455, %rd3454, %rd3452;
	add.s64 	%rd3456, %rd3455, %rd3449;
	add.s64 	%rd3457, %rd3456, %rd3372;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2802,%dummy}, %rd3444;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2803}, %rd3444;
	}
	shf.r.wrap.b32 	%r2804, %r2803, %r2802, 28;
	shf.r.wrap.b32 	%r2805, %r2802, %r2803, 28;
	mov.b64 	%rd3458, {%r2805, %r2804};
	shf.l.wrap.b32 	%r2806, %r2802, %r2803, 30;
	shf.l.wrap.b32 	%r2807, %r2803, %r2802, 30;
	mov.b64 	%rd3459, {%r2807, %r2806};
	xor.b64  	%rd3460, %rd3459, %rd3458;
	shf.l.wrap.b32 	%r2808, %r2802, %r2803, 25;
	shf.l.wrap.b32 	%r2809, %r2803, %r2802, 25;
	mov.b64 	%rd3461, {%r2809, %r2808};
	xor.b64  	%rd3462, %rd3460, %rd3461;
	xor.b64  	%rd3463, %rd3444, %rd3396;
	xor.b64  	%rd3464, %rd3444, %rd3420;
	and.b64  	%rd3465, %rd3464, %rd3463;
	xor.b64  	%rd3466, %rd3465, %rd3444;
	add.s64 	%rd3467, %rd3456, %rd3466;
	add.s64 	%rd3468, %rd3467, %rd3462;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2810,%dummy}, %rd3457;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2811}, %rd3457;
	}
	shf.r.wrap.b32 	%r2812, %r2811, %r2810, 14;
	shf.r.wrap.b32 	%r2813, %r2810, %r2811, 14;
	mov.b64 	%rd3469, {%r2813, %r2812};
	shf.r.wrap.b32 	%r2814, %r2811, %r2810, 18;
	shf.r.wrap.b32 	%r2815, %r2810, %r2811, 18;
	mov.b64 	%rd3470, {%r2815, %r2814};
	xor.b64  	%rd3471, %rd3470, %rd3469;
	shf.l.wrap.b32 	%r2816, %r2810, %r2811, 23;
	shf.l.wrap.b32 	%r2817, %r2811, %r2810, 23;
	mov.b64 	%rd3472, {%r2817, %r2816};
	xor.b64  	%rd3473, %rd3471, %rd3472;
	xor.b64  	%rd3474, %rd3433, %rd3409;
	and.b64  	%rd3475, %rd3457, %rd3474;
	xor.b64  	%rd3476, %rd3475, %rd3409;
	add.s64 	%rd3477, %rd3385, %rd3246;
	add.s64 	%rd3478, %rd3477, %rd13012;
	add.s64 	%rd3479, %rd3478, %rd3476;
	add.s64 	%rd3480, %rd3479, %rd3473;
	add.s64 	%rd3481, %rd3480, %rd3396;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2818,%dummy}, %rd3468;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2819}, %rd3468;
	}
	shf.r.wrap.b32 	%r2820, %r2819, %r2818, 28;
	shf.r.wrap.b32 	%r2821, %r2818, %r2819, 28;
	mov.b64 	%rd3482, {%r2821, %r2820};
	shf.l.wrap.b32 	%r2822, %r2818, %r2819, 30;
	shf.l.wrap.b32 	%r2823, %r2819, %r2818, 30;
	mov.b64 	%rd3483, {%r2823, %r2822};
	xor.b64  	%rd3484, %rd3483, %rd3482;
	shf.l.wrap.b32 	%r2824, %r2818, %r2819, 25;
	shf.l.wrap.b32 	%r2825, %r2819, %r2818, 25;
	mov.b64 	%rd3485, {%r2825, %r2824};
	xor.b64  	%rd3486, %rd3484, %rd3485;
	xor.b64  	%rd3487, %rd3468, %rd3420;
	xor.b64  	%rd3488, %rd3468, %rd3444;
	and.b64  	%rd3489, %rd3488, %rd3487;
	xor.b64  	%rd3490, %rd3489, %rd3468;
	add.s64 	%rd3491, %rd3480, %rd3490;
	add.s64 	%rd3492, %rd3491, %rd3486;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2826,%dummy}, %rd3481;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2827}, %rd3481;
	}
	shf.r.wrap.b32 	%r2828, %r2827, %r2826, 14;
	shf.r.wrap.b32 	%r2829, %r2826, %r2827, 14;
	mov.b64 	%rd3493, {%r2829, %r2828};
	shf.r.wrap.b32 	%r2830, %r2827, %r2826, 18;
	shf.r.wrap.b32 	%r2831, %r2826, %r2827, 18;
	mov.b64 	%rd3494, {%r2831, %r2830};
	xor.b64  	%rd3495, %rd3494, %rd3493;
	shf.l.wrap.b32 	%r2832, %r2826, %r2827, 23;
	shf.l.wrap.b32 	%r2833, %r2827, %r2826, 23;
	mov.b64 	%rd3496, {%r2833, %r2832};
	xor.b64  	%rd3497, %rd3495, %rd3496;
	xor.b64  	%rd3498, %rd3457, %rd3433;
	and.b64  	%rd3499, %rd3481, %rd3498;
	xor.b64  	%rd3500, %rd3499, %rd3433;
	add.s64 	%rd3501, %rd3409, %rd3247;
	add.s64 	%rd3502, %rd3501, %rd13011;
	add.s64 	%rd3503, %rd3502, %rd3500;
	add.s64 	%rd3504, %rd3503, %rd3497;
	add.s64 	%rd3505, %rd3504, %rd3420;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2834,%dummy}, %rd3492;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2835}, %rd3492;
	}
	shf.r.wrap.b32 	%r2836, %r2835, %r2834, 28;
	shf.r.wrap.b32 	%r2837, %r2834, %r2835, 28;
	mov.b64 	%rd3506, {%r2837, %r2836};
	shf.l.wrap.b32 	%r2838, %r2834, %r2835, 30;
	shf.l.wrap.b32 	%r2839, %r2835, %r2834, 30;
	mov.b64 	%rd3507, {%r2839, %r2838};
	xor.b64  	%rd3508, %rd3507, %rd3506;
	shf.l.wrap.b32 	%r2840, %r2834, %r2835, 25;
	shf.l.wrap.b32 	%r2841, %r2835, %r2834, 25;
	mov.b64 	%rd3509, {%r2841, %r2840};
	xor.b64  	%rd3510, %rd3508, %rd3509;
	xor.b64  	%rd3511, %rd3492, %rd3444;
	xor.b64  	%rd3512, %rd3492, %rd3468;
	and.b64  	%rd3513, %rd3512, %rd3511;
	xor.b64  	%rd3514, %rd3513, %rd3492;
	add.s64 	%rd3515, %rd3504, %rd3514;
	add.s64 	%rd3516, %rd3515, %rd3510;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2842,%dummy}, %rd3505;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2843}, %rd3505;
	}
	shf.r.wrap.b32 	%r2844, %r2843, %r2842, 14;
	shf.r.wrap.b32 	%r2845, %r2842, %r2843, 14;
	mov.b64 	%rd3517, {%r2845, %r2844};
	shf.r.wrap.b32 	%r2846, %r2843, %r2842, 18;
	shf.r.wrap.b32 	%r2847, %r2842, %r2843, 18;
	mov.b64 	%rd3518, {%r2847, %r2846};
	xor.b64  	%rd3519, %rd3518, %rd3517;
	shf.l.wrap.b32 	%r2848, %r2842, %r2843, 23;
	shf.l.wrap.b32 	%r2849, %r2843, %r2842, 23;
	mov.b64 	%rd3520, {%r2849, %r2848};
	xor.b64  	%rd3521, %rd3519, %rd3520;
	xor.b64  	%rd3522, %rd3481, %rd3457;
	and.b64  	%rd3523, %rd3505, %rd3522;
	xor.b64  	%rd3524, %rd3523, %rd3457;
	add.s64 	%rd3525, %rd3433, %rd3248;
	add.s64 	%rd3526, %rd3525, %rd13010;
	add.s64 	%rd3527, %rd3526, %rd3524;
	add.s64 	%rd3528, %rd3527, %rd3521;
	add.s64 	%rd3529, %rd3528, %rd3444;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2850,%dummy}, %rd3516;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2851}, %rd3516;
	}
	shf.r.wrap.b32 	%r2852, %r2851, %r2850, 28;
	shf.r.wrap.b32 	%r2853, %r2850, %r2851, 28;
	mov.b64 	%rd3530, {%r2853, %r2852};
	shf.l.wrap.b32 	%r2854, %r2850, %r2851, 30;
	shf.l.wrap.b32 	%r2855, %r2851, %r2850, 30;
	mov.b64 	%rd3531, {%r2855, %r2854};
	xor.b64  	%rd3532, %rd3531, %rd3530;
	shf.l.wrap.b32 	%r2856, %r2850, %r2851, 25;
	shf.l.wrap.b32 	%r2857, %r2851, %r2850, 25;
	mov.b64 	%rd3533, {%r2857, %r2856};
	xor.b64  	%rd3534, %rd3532, %rd3533;
	xor.b64  	%rd3535, %rd3516, %rd3468;
	xor.b64  	%rd3536, %rd3516, %rd3492;
	and.b64  	%rd3537, %rd3536, %rd3535;
	xor.b64  	%rd3538, %rd3537, %rd3516;
	add.s64 	%rd3539, %rd3528, %rd3538;
	add.s64 	%rd3540, %rd3539, %rd3534;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2858,%dummy}, %rd3529;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2859}, %rd3529;
	}
	shf.r.wrap.b32 	%r2860, %r2859, %r2858, 14;
	shf.r.wrap.b32 	%r2861, %r2858, %r2859, 14;
	mov.b64 	%rd3541, {%r2861, %r2860};
	shf.r.wrap.b32 	%r2862, %r2859, %r2858, 18;
	shf.r.wrap.b32 	%r2863, %r2858, %r2859, 18;
	mov.b64 	%rd3542, {%r2863, %r2862};
	xor.b64  	%rd3543, %rd3542, %rd3541;
	shf.l.wrap.b32 	%r2864, %r2858, %r2859, 23;
	shf.l.wrap.b32 	%r2865, %r2859, %r2858, 23;
	mov.b64 	%rd3544, {%r2865, %r2864};
	xor.b64  	%rd3545, %rd3543, %rd3544;
	xor.b64  	%rd3546, %rd3505, %rd3481;
	and.b64  	%rd3547, %rd3529, %rd3546;
	xor.b64  	%rd3548, %rd3547, %rd3481;
	add.s64 	%rd3549, %rd3457, %rd3249;
	add.s64 	%rd3550, %rd3549, %rd13009;
	add.s64 	%rd3551, %rd3550, %rd3548;
	add.s64 	%rd3552, %rd3551, %rd3545;
	add.s64 	%rd3553, %rd3552, %rd3468;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2866,%dummy}, %rd3540;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2867}, %rd3540;
	}
	shf.r.wrap.b32 	%r2868, %r2867, %r2866, 28;
	shf.r.wrap.b32 	%r2869, %r2866, %r2867, 28;
	mov.b64 	%rd3554, {%r2869, %r2868};
	shf.l.wrap.b32 	%r2870, %r2866, %r2867, 30;
	shf.l.wrap.b32 	%r2871, %r2867, %r2866, 30;
	mov.b64 	%rd3555, {%r2871, %r2870};
	xor.b64  	%rd3556, %rd3555, %rd3554;
	shf.l.wrap.b32 	%r2872, %r2866, %r2867, 25;
	shf.l.wrap.b32 	%r2873, %r2867, %r2866, 25;
	mov.b64 	%rd3557, {%r2873, %r2872};
	xor.b64  	%rd3558, %rd3556, %rd3557;
	xor.b64  	%rd3559, %rd3540, %rd3492;
	xor.b64  	%rd3560, %rd3540, %rd3516;
	and.b64  	%rd3561, %rd3560, %rd3559;
	xor.b64  	%rd3562, %rd3561, %rd3540;
	add.s64 	%rd3563, %rd3552, %rd3562;
	add.s64 	%rd3564, %rd3563, %rd3558;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2874,%dummy}, %rd3553;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2875}, %rd3553;
	}
	shf.r.wrap.b32 	%r2876, %r2875, %r2874, 14;
	shf.r.wrap.b32 	%r2877, %r2874, %r2875, 14;
	mov.b64 	%rd3565, {%r2877, %r2876};
	shf.r.wrap.b32 	%r2878, %r2875, %r2874, 18;
	shf.r.wrap.b32 	%r2879, %r2874, %r2875, 18;
	mov.b64 	%rd3566, {%r2879, %r2878};
	xor.b64  	%rd3567, %rd3566, %rd3565;
	shf.l.wrap.b32 	%r2880, %r2874, %r2875, 23;
	shf.l.wrap.b32 	%r2881, %r2875, %r2874, 23;
	mov.b64 	%rd3568, {%r2881, %r2880};
	xor.b64  	%rd3569, %rd3567, %rd3568;
	xor.b64  	%rd3570, %rd3529, %rd3505;
	and.b64  	%rd3571, %rd3553, %rd3570;
	xor.b64  	%rd3572, %rd3571, %rd3505;
	add.s64 	%rd3573, %rd3481, %rd3250;
	add.s64 	%rd3574, %rd3573, %rd13008;
	add.s64 	%rd3575, %rd3574, %rd3572;
	add.s64 	%rd3576, %rd3575, %rd3569;
	add.s64 	%rd3577, %rd3576, %rd3492;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2882,%dummy}, %rd3564;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2883}, %rd3564;
	}
	shf.r.wrap.b32 	%r2884, %r2883, %r2882, 28;
	shf.r.wrap.b32 	%r2885, %r2882, %r2883, 28;
	mov.b64 	%rd3578, {%r2885, %r2884};
	shf.l.wrap.b32 	%r2886, %r2882, %r2883, 30;
	shf.l.wrap.b32 	%r2887, %r2883, %r2882, 30;
	mov.b64 	%rd3579, {%r2887, %r2886};
	xor.b64  	%rd3580, %rd3579, %rd3578;
	shf.l.wrap.b32 	%r2888, %r2882, %r2883, 25;
	shf.l.wrap.b32 	%r2889, %r2883, %r2882, 25;
	mov.b64 	%rd3581, {%r2889, %r2888};
	xor.b64  	%rd3582, %rd3580, %rd3581;
	xor.b64  	%rd3583, %rd3564, %rd3516;
	xor.b64  	%rd3584, %rd3564, %rd3540;
	and.b64  	%rd3585, %rd3584, %rd3583;
	xor.b64  	%rd3586, %rd3585, %rd3564;
	add.s64 	%rd3587, %rd3576, %rd3586;
	add.s64 	%rd3588, %rd3587, %rd3582;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2890,%dummy}, %rd3577;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2891}, %rd3577;
	}
	shf.r.wrap.b32 	%r2892, %r2891, %r2890, 14;
	shf.r.wrap.b32 	%r2893, %r2890, %r2891, 14;
	mov.b64 	%rd3589, {%r2893, %r2892};
	shf.r.wrap.b32 	%r2894, %r2891, %r2890, 18;
	shf.r.wrap.b32 	%r2895, %r2890, %r2891, 18;
	mov.b64 	%rd3590, {%r2895, %r2894};
	xor.b64  	%rd3591, %rd3590, %rd3589;
	shf.l.wrap.b32 	%r2896, %r2890, %r2891, 23;
	shf.l.wrap.b32 	%r2897, %r2891, %r2890, 23;
	mov.b64 	%rd3592, {%r2897, %r2896};
	xor.b64  	%rd3593, %rd3591, %rd3592;
	xor.b64  	%rd3594, %rd3553, %rd3529;
	and.b64  	%rd3595, %rd3577, %rd3594;
	xor.b64  	%rd3596, %rd3595, %rd3529;
	add.s64 	%rd3597, %rd3505, %rd3251;
	add.s64 	%rd3598, %rd3597, %rd13007;
	add.s64 	%rd3599, %rd3598, %rd3596;
	add.s64 	%rd3600, %rd3599, %rd3593;
	add.s64 	%rd3601, %rd3600, %rd3516;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2898,%dummy}, %rd3588;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2899}, %rd3588;
	}
	shf.r.wrap.b32 	%r2900, %r2899, %r2898, 28;
	shf.r.wrap.b32 	%r2901, %r2898, %r2899, 28;
	mov.b64 	%rd3602, {%r2901, %r2900};
	shf.l.wrap.b32 	%r2902, %r2898, %r2899, 30;
	shf.l.wrap.b32 	%r2903, %r2899, %r2898, 30;
	mov.b64 	%rd3603, {%r2903, %r2902};
	xor.b64  	%rd3604, %rd3603, %rd3602;
	shf.l.wrap.b32 	%r2904, %r2898, %r2899, 25;
	shf.l.wrap.b32 	%r2905, %r2899, %r2898, 25;
	mov.b64 	%rd3605, {%r2905, %r2904};
	xor.b64  	%rd3606, %rd3604, %rd3605;
	xor.b64  	%rd3607, %rd3588, %rd3540;
	xor.b64  	%rd3608, %rd3588, %rd3564;
	and.b64  	%rd3609, %rd3608, %rd3607;
	xor.b64  	%rd3610, %rd3609, %rd3588;
	add.s64 	%rd3611, %rd3600, %rd3610;
	add.s64 	%rd3612, %rd3611, %rd3606;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2906,%dummy}, %rd3601;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2907}, %rd3601;
	}
	shf.r.wrap.b32 	%r2908, %r2907, %r2906, 14;
	shf.r.wrap.b32 	%r2909, %r2906, %r2907, 14;
	mov.b64 	%rd3613, {%r2909, %r2908};
	shf.r.wrap.b32 	%r2910, %r2907, %r2906, 18;
	shf.r.wrap.b32 	%r2911, %r2906, %r2907, 18;
	mov.b64 	%rd3614, {%r2911, %r2910};
	xor.b64  	%rd3615, %rd3614, %rd3613;
	shf.l.wrap.b32 	%r2912, %r2906, %r2907, 23;
	shf.l.wrap.b32 	%r2913, %r2907, %r2906, 23;
	mov.b64 	%rd3616, {%r2913, %r2912};
	xor.b64  	%rd3617, %rd3615, %rd3616;
	xor.b64  	%rd3618, %rd3577, %rd3553;
	and.b64  	%rd3619, %rd3601, %rd3618;
	xor.b64  	%rd3620, %rd3619, %rd3553;
	add.s64 	%rd3621, %rd3529, %rd3252;
	add.s64 	%rd3622, %rd3621, %rd13006;
	add.s64 	%rd3623, %rd3622, %rd3620;
	add.s64 	%rd3624, %rd3623, %rd3617;
	add.s64 	%rd3625, %rd3624, %rd3540;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2914,%dummy}, %rd3612;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2915}, %rd3612;
	}
	shf.r.wrap.b32 	%r2916, %r2915, %r2914, 28;
	shf.r.wrap.b32 	%r2917, %r2914, %r2915, 28;
	mov.b64 	%rd3626, {%r2917, %r2916};
	shf.l.wrap.b32 	%r2918, %r2914, %r2915, 30;
	shf.l.wrap.b32 	%r2919, %r2915, %r2914, 30;
	mov.b64 	%rd3627, {%r2919, %r2918};
	xor.b64  	%rd3628, %rd3627, %rd3626;
	shf.l.wrap.b32 	%r2920, %r2914, %r2915, 25;
	shf.l.wrap.b32 	%r2921, %r2915, %r2914, 25;
	mov.b64 	%rd3629, {%r2921, %r2920};
	xor.b64  	%rd3630, %rd3628, %rd3629;
	xor.b64  	%rd3631, %rd3612, %rd3564;
	xor.b64  	%rd3632, %rd3612, %rd3588;
	and.b64  	%rd3633, %rd3632, %rd3631;
	xor.b64  	%rd3634, %rd3633, %rd3612;
	add.s64 	%rd3635, %rd3624, %rd3634;
	add.s64 	%rd3636, %rd3635, %rd3630;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2922,%dummy}, %rd3251;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2923}, %rd3251;
	}
	shf.r.wrap.b32 	%r2924, %r2923, %r2922, 19;
	shf.r.wrap.b32 	%r2925, %r2922, %r2923, 19;
	mov.b64 	%rd3637, {%r2925, %r2924};
	shf.l.wrap.b32 	%r2926, %r2922, %r2923, 3;
	shf.l.wrap.b32 	%r2927, %r2923, %r2922, 3;
	mov.b64 	%rd3638, {%r2927, %r2926};
	shr.u64 	%rd3639, %rd3251, 6;
	xor.b64  	%rd3640, %rd3637, %rd3639;
	xor.b64  	%rd3641, %rd3640, %rd3638;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2928,%dummy}, %rd3238;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2929}, %rd3238;
	}
	shf.r.wrap.b32 	%r2930, %r2929, %r2928, 1;
	shf.r.wrap.b32 	%r2931, %r2928, %r2929, 1;
	mov.b64 	%rd3642, {%r2931, %r2930};
	shf.r.wrap.b32 	%r2932, %r2929, %r2928, 8;
	shf.r.wrap.b32 	%r2933, %r2928, %r2929, 8;
	mov.b64 	%rd3643, {%r2933, %r2932};
	shr.u64 	%rd3644, %rd3238, 7;
	xor.b64  	%rd3645, %rd3642, %rd3644;
	xor.b64  	%rd3646, %rd3645, %rd3643;
	add.s64 	%rd3647, %rd3246, %rd3237;
	add.s64 	%rd3648, %rd3647, %rd3641;
	add.s64 	%rd3649, %rd3648, %rd3646;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2934,%dummy}, %rd3252;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2935}, %rd3252;
	}
	shf.r.wrap.b32 	%r2936, %r2935, %r2934, 19;
	shf.r.wrap.b32 	%r2937, %r2934, %r2935, 19;
	mov.b64 	%rd3650, {%r2937, %r2936};
	shf.l.wrap.b32 	%r2938, %r2934, %r2935, 3;
	shf.l.wrap.b32 	%r2939, %r2935, %r2934, 3;
	mov.b64 	%rd3651, {%r2939, %r2938};
	shr.u64 	%rd3652, %rd3252, 6;
	xor.b64  	%rd3653, %rd3650, %rd3652;
	xor.b64  	%rd3654, %rd3653, %rd3651;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2940,%dummy}, %rd3239;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2941}, %rd3239;
	}
	shf.r.wrap.b32 	%r2942, %r2941, %r2940, 1;
	shf.r.wrap.b32 	%r2943, %r2940, %r2941, 1;
	mov.b64 	%rd3655, {%r2943, %r2942};
	shf.r.wrap.b32 	%r2944, %r2941, %r2940, 8;
	shf.r.wrap.b32 	%r2945, %r2940, %r2941, 8;
	mov.b64 	%rd3656, {%r2945, %r2944};
	shr.u64 	%rd3657, %rd3239, 7;
	xor.b64  	%rd3658, %rd3655, %rd3657;
	xor.b64  	%rd3659, %rd3658, %rd3656;
	add.s64 	%rd3660, %rd3247, %rd3238;
	add.s64 	%rd3661, %rd3660, %rd3654;
	add.s64 	%rd3662, %rd3661, %rd3659;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2946,%dummy}, %rd3649;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2947}, %rd3649;
	}
	shf.r.wrap.b32 	%r2948, %r2947, %r2946, 19;
	shf.r.wrap.b32 	%r2949, %r2946, %r2947, 19;
	mov.b64 	%rd3663, {%r2949, %r2948};
	shf.l.wrap.b32 	%r2950, %r2946, %r2947, 3;
	shf.l.wrap.b32 	%r2951, %r2947, %r2946, 3;
	mov.b64 	%rd3664, {%r2951, %r2950};
	shr.u64 	%rd3665, %rd3649, 6;
	xor.b64  	%rd3666, %rd3663, %rd3665;
	xor.b64  	%rd3667, %rd3666, %rd3664;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2952,%dummy}, %rd3240;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2953}, %rd3240;
	}
	shf.r.wrap.b32 	%r2954, %r2953, %r2952, 1;
	shf.r.wrap.b32 	%r2955, %r2952, %r2953, 1;
	mov.b64 	%rd3668, {%r2955, %r2954};
	shf.r.wrap.b32 	%r2956, %r2953, %r2952, 8;
	shf.r.wrap.b32 	%r2957, %r2952, %r2953, 8;
	mov.b64 	%rd3669, {%r2957, %r2956};
	shr.u64 	%rd3670, %rd3240, 7;
	xor.b64  	%rd3671, %rd3668, %rd3670;
	xor.b64  	%rd3672, %rd3671, %rd3669;
	add.s64 	%rd3673, %rd3248, %rd3239;
	add.s64 	%rd3674, %rd3673, %rd3667;
	add.s64 	%rd3675, %rd3674, %rd3672;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2958,%dummy}, %rd3662;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2959}, %rd3662;
	}
	shf.r.wrap.b32 	%r2960, %r2959, %r2958, 19;
	shf.r.wrap.b32 	%r2961, %r2958, %r2959, 19;
	mov.b64 	%rd3676, {%r2961, %r2960};
	shf.l.wrap.b32 	%r2962, %r2958, %r2959, 3;
	shf.l.wrap.b32 	%r2963, %r2959, %r2958, 3;
	mov.b64 	%rd3677, {%r2963, %r2962};
	shr.u64 	%rd3678, %rd3662, 6;
	xor.b64  	%rd3679, %rd3676, %rd3678;
	xor.b64  	%rd3680, %rd3679, %rd3677;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2964,%dummy}, %rd3241;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2965}, %rd3241;
	}
	shf.r.wrap.b32 	%r2966, %r2965, %r2964, 1;
	shf.r.wrap.b32 	%r2967, %r2964, %r2965, 1;
	mov.b64 	%rd3681, {%r2967, %r2966};
	shf.r.wrap.b32 	%r2968, %r2965, %r2964, 8;
	shf.r.wrap.b32 	%r2969, %r2964, %r2965, 8;
	mov.b64 	%rd3682, {%r2969, %r2968};
	shr.u64 	%rd3683, %rd3241, 7;
	xor.b64  	%rd3684, %rd3681, %rd3683;
	xor.b64  	%rd3685, %rd3684, %rd3682;
	add.s64 	%rd3686, %rd3249, %rd3240;
	add.s64 	%rd3687, %rd3686, %rd3680;
	add.s64 	%rd3688, %rd3687, %rd3685;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2970,%dummy}, %rd3675;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2971}, %rd3675;
	}
	shf.r.wrap.b32 	%r2972, %r2971, %r2970, 19;
	shf.r.wrap.b32 	%r2973, %r2970, %r2971, 19;
	mov.b64 	%rd3689, {%r2973, %r2972};
	shf.l.wrap.b32 	%r2974, %r2970, %r2971, 3;
	shf.l.wrap.b32 	%r2975, %r2971, %r2970, 3;
	mov.b64 	%rd3690, {%r2975, %r2974};
	shr.u64 	%rd3691, %rd3675, 6;
	xor.b64  	%rd3692, %rd3689, %rd3691;
	xor.b64  	%rd3693, %rd3692, %rd3690;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2976,%dummy}, %rd3242;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2977}, %rd3242;
	}
	shf.r.wrap.b32 	%r2978, %r2977, %r2976, 1;
	shf.r.wrap.b32 	%r2979, %r2976, %r2977, 1;
	mov.b64 	%rd3694, {%r2979, %r2978};
	shf.r.wrap.b32 	%r2980, %r2977, %r2976, 8;
	shf.r.wrap.b32 	%r2981, %r2976, %r2977, 8;
	mov.b64 	%rd3695, {%r2981, %r2980};
	shr.u64 	%rd3696, %rd3242, 7;
	xor.b64  	%rd3697, %rd3694, %rd3696;
	xor.b64  	%rd3698, %rd3697, %rd3695;
	add.s64 	%rd3699, %rd3250, %rd3241;
	add.s64 	%rd3700, %rd3699, %rd3693;
	add.s64 	%rd3701, %rd3700, %rd3698;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2982,%dummy}, %rd3688;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2983}, %rd3688;
	}
	shf.r.wrap.b32 	%r2984, %r2983, %r2982, 19;
	shf.r.wrap.b32 	%r2985, %r2982, %r2983, 19;
	mov.b64 	%rd3702, {%r2985, %r2984};
	shf.l.wrap.b32 	%r2986, %r2982, %r2983, 3;
	shf.l.wrap.b32 	%r2987, %r2983, %r2982, 3;
	mov.b64 	%rd3703, {%r2987, %r2986};
	shr.u64 	%rd3704, %rd3688, 6;
	xor.b64  	%rd3705, %rd3702, %rd3704;
	xor.b64  	%rd3706, %rd3705, %rd3703;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2988,%dummy}, %rd3243;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2989}, %rd3243;
	}
	shf.r.wrap.b32 	%r2990, %r2989, %r2988, 1;
	shf.r.wrap.b32 	%r2991, %r2988, %r2989, 1;
	mov.b64 	%rd3707, {%r2991, %r2990};
	shf.r.wrap.b32 	%r2992, %r2989, %r2988, 8;
	shf.r.wrap.b32 	%r2993, %r2988, %r2989, 8;
	mov.b64 	%rd3708, {%r2993, %r2992};
	shr.u64 	%rd3709, %rd3243, 7;
	xor.b64  	%rd3710, %rd3707, %rd3709;
	xor.b64  	%rd3711, %rd3710, %rd3708;
	add.s64 	%rd3712, %rd3251, %rd3242;
	add.s64 	%rd3713, %rd3712, %rd3706;
	add.s64 	%rd3714, %rd3713, %rd3711;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2994,%dummy}, %rd3701;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2995}, %rd3701;
	}
	shf.r.wrap.b32 	%r2996, %r2995, %r2994, 19;
	shf.r.wrap.b32 	%r2997, %r2994, %r2995, 19;
	mov.b64 	%rd3715, {%r2997, %r2996};
	shf.l.wrap.b32 	%r2998, %r2994, %r2995, 3;
	shf.l.wrap.b32 	%r2999, %r2995, %r2994, 3;
	mov.b64 	%rd3716, {%r2999, %r2998};
	shr.u64 	%rd3717, %rd3701, 6;
	xor.b64  	%rd3718, %rd3715, %rd3717;
	xor.b64  	%rd3719, %rd3718, %rd3716;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3000,%dummy}, %rd3244;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3001}, %rd3244;
	}
	shf.r.wrap.b32 	%r3002, %r3001, %r3000, 1;
	shf.r.wrap.b32 	%r3003, %r3000, %r3001, 1;
	mov.b64 	%rd3720, {%r3003, %r3002};
	shf.r.wrap.b32 	%r3004, %r3001, %r3000, 8;
	shf.r.wrap.b32 	%r3005, %r3000, %r3001, 8;
	mov.b64 	%rd3721, {%r3005, %r3004};
	shr.u64 	%rd3722, %rd3244, 7;
	xor.b64  	%rd3723, %rd3720, %rd3722;
	xor.b64  	%rd3724, %rd3723, %rd3721;
	add.s64 	%rd3725, %rd3252, %rd3243;
	add.s64 	%rd3726, %rd3725, %rd3719;
	add.s64 	%rd3727, %rd3726, %rd3724;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3006,%dummy}, %rd3714;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3007}, %rd3714;
	}
	shf.r.wrap.b32 	%r3008, %r3007, %r3006, 19;
	shf.r.wrap.b32 	%r3009, %r3006, %r3007, 19;
	mov.b64 	%rd3728, {%r3009, %r3008};
	shf.l.wrap.b32 	%r3010, %r3006, %r3007, 3;
	shf.l.wrap.b32 	%r3011, %r3007, %r3006, 3;
	mov.b64 	%rd3729, {%r3011, %r3010};
	shr.u64 	%rd3730, %rd3714, 6;
	xor.b64  	%rd3731, %rd3728, %rd3730;
	xor.b64  	%rd3732, %rd3731, %rd3729;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3012,%dummy}, %rd3245;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3013}, %rd3245;
	}
	shf.r.wrap.b32 	%r3014, %r3013, %r3012, 1;
	shf.r.wrap.b32 	%r3015, %r3012, %r3013, 1;
	mov.b64 	%rd3733, {%r3015, %r3014};
	shf.r.wrap.b32 	%r3016, %r3013, %r3012, 8;
	shf.r.wrap.b32 	%r3017, %r3012, %r3013, 8;
	mov.b64 	%rd3734, {%r3017, %r3016};
	shr.u64 	%rd3735, %rd3245, 7;
	xor.b64  	%rd3736, %rd3733, %rd3735;
	xor.b64  	%rd3737, %rd3736, %rd3734;
	add.s64 	%rd3738, %rd3649, %rd3244;
	add.s64 	%rd3739, %rd3738, %rd3732;
	add.s64 	%rd3740, %rd3739, %rd3737;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3018,%dummy}, %rd3727;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3019}, %rd3727;
	}
	shf.r.wrap.b32 	%r3020, %r3019, %r3018, 19;
	shf.r.wrap.b32 	%r3021, %r3018, %r3019, 19;
	mov.b64 	%rd3741, {%r3021, %r3020};
	shf.l.wrap.b32 	%r3022, %r3018, %r3019, 3;
	shf.l.wrap.b32 	%r3023, %r3019, %r3018, 3;
	mov.b64 	%rd3742, {%r3023, %r3022};
	shr.u64 	%rd3743, %rd3727, 6;
	xor.b64  	%rd3744, %rd3741, %rd3743;
	xor.b64  	%rd3745, %rd3744, %rd3742;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3024,%dummy}, %rd3246;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3025}, %rd3246;
	}
	shf.r.wrap.b32 	%r3026, %r3025, %r3024, 1;
	shf.r.wrap.b32 	%r3027, %r3024, %r3025, 1;
	mov.b64 	%rd3746, {%r3027, %r3026};
	shf.r.wrap.b32 	%r3028, %r3025, %r3024, 8;
	shf.r.wrap.b32 	%r3029, %r3024, %r3025, 8;
	mov.b64 	%rd3747, {%r3029, %r3028};
	shr.u64 	%rd3748, %rd3246, 7;
	xor.b64  	%rd3749, %rd3746, %rd3748;
	xor.b64  	%rd3750, %rd3749, %rd3747;
	add.s64 	%rd3751, %rd3662, %rd3245;
	add.s64 	%rd3752, %rd3751, %rd3745;
	add.s64 	%rd3753, %rd3752, %rd3750;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3030,%dummy}, %rd3740;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3031}, %rd3740;
	}
	shf.r.wrap.b32 	%r3032, %r3031, %r3030, 19;
	shf.r.wrap.b32 	%r3033, %r3030, %r3031, 19;
	mov.b64 	%rd3754, {%r3033, %r3032};
	shf.l.wrap.b32 	%r3034, %r3030, %r3031, 3;
	shf.l.wrap.b32 	%r3035, %r3031, %r3030, 3;
	mov.b64 	%rd3755, {%r3035, %r3034};
	shr.u64 	%rd3756, %rd3740, 6;
	xor.b64  	%rd3757, %rd3754, %rd3756;
	xor.b64  	%rd3758, %rd3757, %rd3755;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3036,%dummy}, %rd3247;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3037}, %rd3247;
	}
	shf.r.wrap.b32 	%r3038, %r3037, %r3036, 1;
	shf.r.wrap.b32 	%r3039, %r3036, %r3037, 1;
	mov.b64 	%rd3759, {%r3039, %r3038};
	shf.r.wrap.b32 	%r3040, %r3037, %r3036, 8;
	shf.r.wrap.b32 	%r3041, %r3036, %r3037, 8;
	mov.b64 	%rd3760, {%r3041, %r3040};
	shr.u64 	%rd3761, %rd3247, 7;
	xor.b64  	%rd3762, %rd3759, %rd3761;
	xor.b64  	%rd3763, %rd3762, %rd3760;
	add.s64 	%rd3764, %rd3675, %rd3246;
	add.s64 	%rd3765, %rd3764, %rd3758;
	add.s64 	%rd3766, %rd3765, %rd3763;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3042,%dummy}, %rd3753;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3043}, %rd3753;
	}
	shf.r.wrap.b32 	%r3044, %r3043, %r3042, 19;
	shf.r.wrap.b32 	%r3045, %r3042, %r3043, 19;
	mov.b64 	%rd3767, {%r3045, %r3044};
	shf.l.wrap.b32 	%r3046, %r3042, %r3043, 3;
	shf.l.wrap.b32 	%r3047, %r3043, %r3042, 3;
	mov.b64 	%rd3768, {%r3047, %r3046};
	shr.u64 	%rd3769, %rd3753, 6;
	xor.b64  	%rd3770, %rd3767, %rd3769;
	xor.b64  	%rd3771, %rd3770, %rd3768;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3048,%dummy}, %rd3248;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3049}, %rd3248;
	}
	shf.r.wrap.b32 	%r3050, %r3049, %r3048, 1;
	shf.r.wrap.b32 	%r3051, %r3048, %r3049, 1;
	mov.b64 	%rd3772, {%r3051, %r3050};
	shf.r.wrap.b32 	%r3052, %r3049, %r3048, 8;
	shf.r.wrap.b32 	%r3053, %r3048, %r3049, 8;
	mov.b64 	%rd3773, {%r3053, %r3052};
	shr.u64 	%rd3774, %rd3248, 7;
	xor.b64  	%rd3775, %rd3772, %rd3774;
	xor.b64  	%rd3776, %rd3775, %rd3773;
	add.s64 	%rd3777, %rd3688, %rd3247;
	add.s64 	%rd3778, %rd3777, %rd3771;
	add.s64 	%rd3779, %rd3778, %rd3776;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3054,%dummy}, %rd3766;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3055}, %rd3766;
	}
	shf.r.wrap.b32 	%r3056, %r3055, %r3054, 19;
	shf.r.wrap.b32 	%r3057, %r3054, %r3055, 19;
	mov.b64 	%rd3780, {%r3057, %r3056};
	shf.l.wrap.b32 	%r3058, %r3054, %r3055, 3;
	shf.l.wrap.b32 	%r3059, %r3055, %r3054, 3;
	mov.b64 	%rd3781, {%r3059, %r3058};
	shr.u64 	%rd3782, %rd3766, 6;
	xor.b64  	%rd3783, %rd3780, %rd3782;
	xor.b64  	%rd3784, %rd3783, %rd3781;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3060,%dummy}, %rd3249;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3061}, %rd3249;
	}
	shf.r.wrap.b32 	%r3062, %r3061, %r3060, 1;
	shf.r.wrap.b32 	%r3063, %r3060, %r3061, 1;
	mov.b64 	%rd3785, {%r3063, %r3062};
	shf.r.wrap.b32 	%r3064, %r3061, %r3060, 8;
	shf.r.wrap.b32 	%r3065, %r3060, %r3061, 8;
	mov.b64 	%rd3786, {%r3065, %r3064};
	shr.u64 	%rd3787, %rd3249, 7;
	xor.b64  	%rd3788, %rd3785, %rd3787;
	xor.b64  	%rd3789, %rd3788, %rd3786;
	add.s64 	%rd3790, %rd3701, %rd3248;
	add.s64 	%rd3791, %rd3790, %rd3784;
	add.s64 	%rd3792, %rd3791, %rd3789;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3066,%dummy}, %rd3779;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3067}, %rd3779;
	}
	shf.r.wrap.b32 	%r3068, %r3067, %r3066, 19;
	shf.r.wrap.b32 	%r3069, %r3066, %r3067, 19;
	mov.b64 	%rd3793, {%r3069, %r3068};
	shf.l.wrap.b32 	%r3070, %r3066, %r3067, 3;
	shf.l.wrap.b32 	%r3071, %r3067, %r3066, 3;
	mov.b64 	%rd3794, {%r3071, %r3070};
	shr.u64 	%rd3795, %rd3779, 6;
	xor.b64  	%rd3796, %rd3793, %rd3795;
	xor.b64  	%rd3797, %rd3796, %rd3794;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3072,%dummy}, %rd3250;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3073}, %rd3250;
	}
	shf.r.wrap.b32 	%r3074, %r3073, %r3072, 1;
	shf.r.wrap.b32 	%r3075, %r3072, %r3073, 1;
	mov.b64 	%rd3798, {%r3075, %r3074};
	shf.r.wrap.b32 	%r3076, %r3073, %r3072, 8;
	shf.r.wrap.b32 	%r3077, %r3072, %r3073, 8;
	mov.b64 	%rd3799, {%r3077, %r3076};
	shr.u64 	%rd3800, %rd3250, 7;
	xor.b64  	%rd3801, %rd3798, %rd3800;
	xor.b64  	%rd3802, %rd3801, %rd3799;
	add.s64 	%rd3803, %rd3714, %rd3249;
	add.s64 	%rd3804, %rd3803, %rd3797;
	add.s64 	%rd3805, %rd3804, %rd3802;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3078,%dummy}, %rd3792;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3079}, %rd3792;
	}
	shf.r.wrap.b32 	%r3080, %r3079, %r3078, 19;
	shf.r.wrap.b32 	%r3081, %r3078, %r3079, 19;
	mov.b64 	%rd3806, {%r3081, %r3080};
	shf.l.wrap.b32 	%r3082, %r3078, %r3079, 3;
	shf.l.wrap.b32 	%r3083, %r3079, %r3078, 3;
	mov.b64 	%rd3807, {%r3083, %r3082};
	shr.u64 	%rd3808, %rd3792, 6;
	xor.b64  	%rd3809, %rd3806, %rd3808;
	xor.b64  	%rd3810, %rd3809, %rd3807;
	shf.r.wrap.b32 	%r3084, %r2923, %r2922, 1;
	shf.r.wrap.b32 	%r3085, %r2922, %r2923, 1;
	mov.b64 	%rd3811, {%r3085, %r3084};
	shf.r.wrap.b32 	%r3086, %r2923, %r2922, 8;
	shf.r.wrap.b32 	%r3087, %r2922, %r2923, 8;
	mov.b64 	%rd3812, {%r3087, %r3086};
	shr.u64 	%rd3813, %rd3251, 7;
	xor.b64  	%rd3814, %rd3811, %rd3813;
	xor.b64  	%rd3815, %rd3814, %rd3812;
	add.s64 	%rd3816, %rd3727, %rd3250;
	add.s64 	%rd3817, %rd3816, %rd3810;
	add.s64 	%rd3818, %rd3817, %rd3815;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3088,%dummy}, %rd3805;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3089}, %rd3805;
	}
	shf.r.wrap.b32 	%r3090, %r3089, %r3088, 19;
	shf.r.wrap.b32 	%r3091, %r3088, %r3089, 19;
	mov.b64 	%rd3819, {%r3091, %r3090};
	shf.l.wrap.b32 	%r3092, %r3088, %r3089, 3;
	shf.l.wrap.b32 	%r3093, %r3089, %r3088, 3;
	mov.b64 	%rd3820, {%r3093, %r3092};
	shr.u64 	%rd3821, %rd3805, 6;
	xor.b64  	%rd3822, %rd3819, %rd3821;
	xor.b64  	%rd3823, %rd3822, %rd3820;
	shf.r.wrap.b32 	%r3094, %r2935, %r2934, 1;
	shf.r.wrap.b32 	%r3095, %r2934, %r2935, 1;
	mov.b64 	%rd3824, {%r3095, %r3094};
	shf.r.wrap.b32 	%r3096, %r2935, %r2934, 8;
	shf.r.wrap.b32 	%r3097, %r2934, %r2935, 8;
	mov.b64 	%rd3825, {%r3097, %r3096};
	shr.u64 	%rd3826, %rd3252, 7;
	xor.b64  	%rd3827, %rd3824, %rd3826;
	xor.b64  	%rd3828, %rd3827, %rd3825;
	add.s64 	%rd3829, %rd3740, %rd3251;
	add.s64 	%rd3830, %rd3829, %rd3823;
	add.s64 	%rd3831, %rd3830, %rd3828;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3098,%dummy}, %rd3818;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3099}, %rd3818;
	}
	shf.r.wrap.b32 	%r3100, %r3099, %r3098, 19;
	shf.r.wrap.b32 	%r3101, %r3098, %r3099, 19;
	mov.b64 	%rd3832, {%r3101, %r3100};
	shf.l.wrap.b32 	%r3102, %r3098, %r3099, 3;
	shf.l.wrap.b32 	%r3103, %r3099, %r3098, 3;
	mov.b64 	%rd3833, {%r3103, %r3102};
	shr.u64 	%rd3834, %rd3818, 6;
	xor.b64  	%rd3835, %rd3832, %rd3834;
	xor.b64  	%rd3836, %rd3835, %rd3833;
	shf.r.wrap.b32 	%r3104, %r2947, %r2946, 1;
	shf.r.wrap.b32 	%r3105, %r2946, %r2947, 1;
	mov.b64 	%rd3837, {%r3105, %r3104};
	shf.r.wrap.b32 	%r3106, %r2947, %r2946, 8;
	shf.r.wrap.b32 	%r3107, %r2946, %r2947, 8;
	mov.b64 	%rd3838, {%r3107, %r3106};
	shr.u64 	%rd3839, %rd3649, 7;
	xor.b64  	%rd3840, %rd3837, %rd3839;
	xor.b64  	%rd3841, %rd3840, %rd3838;
	add.s64 	%rd3842, %rd3753, %rd3252;
	add.s64 	%rd3843, %rd3842, %rd3836;
	add.s64 	%rd3844, %rd3843, %rd3841;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3108,%dummy}, %rd3625;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3109}, %rd3625;
	}
	shf.r.wrap.b32 	%r3110, %r3109, %r3108, 14;
	shf.r.wrap.b32 	%r3111, %r3108, %r3109, 14;
	mov.b64 	%rd3845, {%r3111, %r3110};
	shf.r.wrap.b32 	%r3112, %r3109, %r3108, 18;
	shf.r.wrap.b32 	%r3113, %r3108, %r3109, 18;
	mov.b64 	%rd3846, {%r3113, %r3112};
	xor.b64  	%rd3847, %rd3846, %rd3845;
	shf.l.wrap.b32 	%r3114, %r3108, %r3109, 23;
	shf.l.wrap.b32 	%r3115, %r3109, %r3108, 23;
	mov.b64 	%rd3848, {%r3115, %r3114};
	xor.b64  	%rd3849, %rd3847, %rd3848;
	xor.b64  	%rd3850, %rd3601, %rd3577;
	and.b64  	%rd3851, %rd3850, %rd3625;
	xor.b64  	%rd3852, %rd3851, %rd3577;
	add.s64 	%rd3853, %rd3852, %rd3553;
	add.s64 	%rd3854, %rd3853, %rd3649;
	add.s64 	%rd3855, %rd3854, %rd13005;
	add.s64 	%rd3856, %rd3855, %rd3849;
	add.s64 	%rd3857, %rd3856, %rd3564;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3116,%dummy}, %rd3636;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3117}, %rd3636;
	}
	shf.r.wrap.b32 	%r3118, %r3117, %r3116, 28;
	shf.r.wrap.b32 	%r3119, %r3116, %r3117, 28;
	mov.b64 	%rd3858, {%r3119, %r3118};
	shf.l.wrap.b32 	%r3120, %r3116, %r3117, 30;
	shf.l.wrap.b32 	%r3121, %r3117, %r3116, 30;
	mov.b64 	%rd3859, {%r3121, %r3120};
	xor.b64  	%rd3860, %rd3859, %rd3858;
	shf.l.wrap.b32 	%r3122, %r3116, %r3117, 25;
	shf.l.wrap.b32 	%r3123, %r3117, %r3116, 25;
	mov.b64 	%rd3861, {%r3123, %r3122};
	xor.b64  	%rd3862, %rd3860, %rd3861;
	xor.b64  	%rd3863, %rd3636, %rd3588;
	xor.b64  	%rd3864, %rd3636, %rd3612;
	and.b64  	%rd3865, %rd3864, %rd3863;
	xor.b64  	%rd3866, %rd3865, %rd3636;
	add.s64 	%rd3867, %rd3856, %rd3866;
	add.s64 	%rd3868, %rd3867, %rd3862;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3124,%dummy}, %rd3857;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3125}, %rd3857;
	}
	shf.r.wrap.b32 	%r3126, %r3125, %r3124, 14;
	shf.r.wrap.b32 	%r3127, %r3124, %r3125, 14;
	mov.b64 	%rd3869, {%r3127, %r3126};
	shf.r.wrap.b32 	%r3128, %r3125, %r3124, 18;
	shf.r.wrap.b32 	%r3129, %r3124, %r3125, 18;
	mov.b64 	%rd3870, {%r3129, %r3128};
	xor.b64  	%rd3871, %rd3870, %rd3869;
	shf.l.wrap.b32 	%r3130, %r3124, %r3125, 23;
	shf.l.wrap.b32 	%r3131, %r3125, %r3124, 23;
	mov.b64 	%rd3872, {%r3131, %r3130};
	xor.b64  	%rd3873, %rd3871, %rd3872;
	xor.b64  	%rd3874, %rd3625, %rd3601;
	and.b64  	%rd3875, %rd3857, %rd3874;
	xor.b64  	%rd3876, %rd3875, %rd3601;
	add.s64 	%rd3877, %rd3662, %rd3577;
	add.s64 	%rd3878, %rd3877, %rd13004;
	add.s64 	%rd3879, %rd3878, %rd3876;
	add.s64 	%rd3880, %rd3879, %rd3873;
	add.s64 	%rd3881, %rd3880, %rd3588;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3132,%dummy}, %rd3868;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3133}, %rd3868;
	}
	shf.r.wrap.b32 	%r3134, %r3133, %r3132, 28;
	shf.r.wrap.b32 	%r3135, %r3132, %r3133, 28;
	mov.b64 	%rd3882, {%r3135, %r3134};
	shf.l.wrap.b32 	%r3136, %r3132, %r3133, 30;
	shf.l.wrap.b32 	%r3137, %r3133, %r3132, 30;
	mov.b64 	%rd3883, {%r3137, %r3136};
	xor.b64  	%rd3884, %rd3883, %rd3882;
	shf.l.wrap.b32 	%r3138, %r3132, %r3133, 25;
	shf.l.wrap.b32 	%r3139, %r3133, %r3132, 25;
	mov.b64 	%rd3885, {%r3139, %r3138};
	xor.b64  	%rd3886, %rd3884, %rd3885;
	xor.b64  	%rd3887, %rd3868, %rd3612;
	xor.b64  	%rd3888, %rd3868, %rd3636;
	and.b64  	%rd3889, %rd3888, %rd3887;
	xor.b64  	%rd3890, %rd3889, %rd3868;
	add.s64 	%rd3891, %rd3880, %rd3890;
	add.s64 	%rd3892, %rd3891, %rd3886;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3140,%dummy}, %rd3881;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3141}, %rd3881;
	}
	shf.r.wrap.b32 	%r3142, %r3141, %r3140, 14;
	shf.r.wrap.b32 	%r3143, %r3140, %r3141, 14;
	mov.b64 	%rd3893, {%r3143, %r3142};
	shf.r.wrap.b32 	%r3144, %r3141, %r3140, 18;
	shf.r.wrap.b32 	%r3145, %r3140, %r3141, 18;
	mov.b64 	%rd3894, {%r3145, %r3144};
	xor.b64  	%rd3895, %rd3894, %rd3893;
	shf.l.wrap.b32 	%r3146, %r3140, %r3141, 23;
	shf.l.wrap.b32 	%r3147, %r3141, %r3140, 23;
	mov.b64 	%rd3896, {%r3147, %r3146};
	xor.b64  	%rd3897, %rd3895, %rd3896;
	xor.b64  	%rd3898, %rd3857, %rd3625;
	and.b64  	%rd3899, %rd3881, %rd3898;
	xor.b64  	%rd3900, %rd3899, %rd3625;
	add.s64 	%rd3901, %rd3675, %rd3601;
	add.s64 	%rd3902, %rd3901, %rd13003;
	add.s64 	%rd3903, %rd3902, %rd3900;
	add.s64 	%rd3904, %rd3903, %rd3897;
	add.s64 	%rd3905, %rd3904, %rd3612;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3148,%dummy}, %rd3892;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3149}, %rd3892;
	}
	shf.r.wrap.b32 	%r3150, %r3149, %r3148, 28;
	shf.r.wrap.b32 	%r3151, %r3148, %r3149, 28;
	mov.b64 	%rd3906, {%r3151, %r3150};
	shf.l.wrap.b32 	%r3152, %r3148, %r3149, 30;
	shf.l.wrap.b32 	%r3153, %r3149, %r3148, 30;
	mov.b64 	%rd3907, {%r3153, %r3152};
	xor.b64  	%rd3908, %rd3907, %rd3906;
	shf.l.wrap.b32 	%r3154, %r3148, %r3149, 25;
	shf.l.wrap.b32 	%r3155, %r3149, %r3148, 25;
	mov.b64 	%rd3909, {%r3155, %r3154};
	xor.b64  	%rd3910, %rd3908, %rd3909;
	xor.b64  	%rd3911, %rd3892, %rd3636;
	xor.b64  	%rd3912, %rd3892, %rd3868;
	and.b64  	%rd3913, %rd3912, %rd3911;
	xor.b64  	%rd3914, %rd3913, %rd3892;
	add.s64 	%rd3915, %rd3904, %rd3914;
	add.s64 	%rd3916, %rd3915, %rd3910;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3156,%dummy}, %rd3905;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3157}, %rd3905;
	}
	shf.r.wrap.b32 	%r3158, %r3157, %r3156, 14;
	shf.r.wrap.b32 	%r3159, %r3156, %r3157, 14;
	mov.b64 	%rd3917, {%r3159, %r3158};
	shf.r.wrap.b32 	%r3160, %r3157, %r3156, 18;
	shf.r.wrap.b32 	%r3161, %r3156, %r3157, 18;
	mov.b64 	%rd3918, {%r3161, %r3160};
	xor.b64  	%rd3919, %rd3918, %rd3917;
	shf.l.wrap.b32 	%r3162, %r3156, %r3157, 23;
	shf.l.wrap.b32 	%r3163, %r3157, %r3156, 23;
	mov.b64 	%rd3920, {%r3163, %r3162};
	xor.b64  	%rd3921, %rd3919, %rd3920;
	xor.b64  	%rd3922, %rd3881, %rd3857;
	and.b64  	%rd3923, %rd3905, %rd3922;
	xor.b64  	%rd3924, %rd3923, %rd3857;
	add.s64 	%rd3925, %rd3688, %rd3625;
	add.s64 	%rd3926, %rd3925, %rd13002;
	add.s64 	%rd3927, %rd3926, %rd3924;
	add.s64 	%rd3928, %rd3927, %rd3921;
	add.s64 	%rd3929, %rd3928, %rd3636;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3164,%dummy}, %rd3916;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3165}, %rd3916;
	}
	shf.r.wrap.b32 	%r3166, %r3165, %r3164, 28;
	shf.r.wrap.b32 	%r3167, %r3164, %r3165, 28;
	mov.b64 	%rd3930, {%r3167, %r3166};
	shf.l.wrap.b32 	%r3168, %r3164, %r3165, 30;
	shf.l.wrap.b32 	%r3169, %r3165, %r3164, 30;
	mov.b64 	%rd3931, {%r3169, %r3168};
	xor.b64  	%rd3932, %rd3931, %rd3930;
	shf.l.wrap.b32 	%r3170, %r3164, %r3165, 25;
	shf.l.wrap.b32 	%r3171, %r3165, %r3164, 25;
	mov.b64 	%rd3933, {%r3171, %r3170};
	xor.b64  	%rd3934, %rd3932, %rd3933;
	xor.b64  	%rd3935, %rd3916, %rd3868;
	xor.b64  	%rd3936, %rd3916, %rd3892;
	and.b64  	%rd3937, %rd3936, %rd3935;
	xor.b64  	%rd3938, %rd3937, %rd3916;
	add.s64 	%rd3939, %rd3928, %rd3938;
	add.s64 	%rd3940, %rd3939, %rd3934;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3172,%dummy}, %rd3929;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3173}, %rd3929;
	}
	shf.r.wrap.b32 	%r3174, %r3173, %r3172, 14;
	shf.r.wrap.b32 	%r3175, %r3172, %r3173, 14;
	mov.b64 	%rd3941, {%r3175, %r3174};
	shf.r.wrap.b32 	%r3176, %r3173, %r3172, 18;
	shf.r.wrap.b32 	%r3177, %r3172, %r3173, 18;
	mov.b64 	%rd3942, {%r3177, %r3176};
	xor.b64  	%rd3943, %rd3942, %rd3941;
	shf.l.wrap.b32 	%r3178, %r3172, %r3173, 23;
	shf.l.wrap.b32 	%r3179, %r3173, %r3172, 23;
	mov.b64 	%rd3944, {%r3179, %r3178};
	xor.b64  	%rd3945, %rd3943, %rd3944;
	xor.b64  	%rd3946, %rd3905, %rd3881;
	and.b64  	%rd3947, %rd3929, %rd3946;
	xor.b64  	%rd3948, %rd3947, %rd3881;
	add.s64 	%rd3949, %rd3857, %rd3701;
	add.s64 	%rd3950, %rd3949, %rd13001;
	add.s64 	%rd3951, %rd3950, %rd3948;
	add.s64 	%rd3952, %rd3951, %rd3945;
	add.s64 	%rd3953, %rd3952, %rd3868;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3180,%dummy}, %rd3940;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3181}, %rd3940;
	}
	shf.r.wrap.b32 	%r3182, %r3181, %r3180, 28;
	shf.r.wrap.b32 	%r3183, %r3180, %r3181, 28;
	mov.b64 	%rd3954, {%r3183, %r3182};
	shf.l.wrap.b32 	%r3184, %r3180, %r3181, 30;
	shf.l.wrap.b32 	%r3185, %r3181, %r3180, 30;
	mov.b64 	%rd3955, {%r3185, %r3184};
	xor.b64  	%rd3956, %rd3955, %rd3954;
	shf.l.wrap.b32 	%r3186, %r3180, %r3181, 25;
	shf.l.wrap.b32 	%r3187, %r3181, %r3180, 25;
	mov.b64 	%rd3957, {%r3187, %r3186};
	xor.b64  	%rd3958, %rd3956, %rd3957;
	xor.b64  	%rd3959, %rd3940, %rd3892;
	xor.b64  	%rd3960, %rd3940, %rd3916;
	and.b64  	%rd3961, %rd3960, %rd3959;
	xor.b64  	%rd3962, %rd3961, %rd3940;
	add.s64 	%rd3963, %rd3952, %rd3962;
	add.s64 	%rd3964, %rd3963, %rd3958;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3188,%dummy}, %rd3953;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3189}, %rd3953;
	}
	shf.r.wrap.b32 	%r3190, %r3189, %r3188, 14;
	shf.r.wrap.b32 	%r3191, %r3188, %r3189, 14;
	mov.b64 	%rd3965, {%r3191, %r3190};
	shf.r.wrap.b32 	%r3192, %r3189, %r3188, 18;
	shf.r.wrap.b32 	%r3193, %r3188, %r3189, 18;
	mov.b64 	%rd3966, {%r3193, %r3192};
	xor.b64  	%rd3967, %rd3966, %rd3965;
	shf.l.wrap.b32 	%r3194, %r3188, %r3189, 23;
	shf.l.wrap.b32 	%r3195, %r3189, %r3188, 23;
	mov.b64 	%rd3968, {%r3195, %r3194};
	xor.b64  	%rd3969, %rd3967, %rd3968;
	xor.b64  	%rd3970, %rd3929, %rd3905;
	and.b64  	%rd3971, %rd3953, %rd3970;
	xor.b64  	%rd3972, %rd3971, %rd3905;
	add.s64 	%rd3973, %rd3881, %rd3714;
	add.s64 	%rd3974, %rd3973, %rd13000;
	add.s64 	%rd3975, %rd3974, %rd3972;
	add.s64 	%rd3976, %rd3975, %rd3969;
	add.s64 	%rd3977, %rd3976, %rd3892;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3196,%dummy}, %rd3964;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3197}, %rd3964;
	}
	shf.r.wrap.b32 	%r3198, %r3197, %r3196, 28;
	shf.r.wrap.b32 	%r3199, %r3196, %r3197, 28;
	mov.b64 	%rd3978, {%r3199, %r3198};
	shf.l.wrap.b32 	%r3200, %r3196, %r3197, 30;
	shf.l.wrap.b32 	%r3201, %r3197, %r3196, 30;
	mov.b64 	%rd3979, {%r3201, %r3200};
	xor.b64  	%rd3980, %rd3979, %rd3978;
	shf.l.wrap.b32 	%r3202, %r3196, %r3197, 25;
	shf.l.wrap.b32 	%r3203, %r3197, %r3196, 25;
	mov.b64 	%rd3981, {%r3203, %r3202};
	xor.b64  	%rd3982, %rd3980, %rd3981;
	xor.b64  	%rd3983, %rd3964, %rd3916;
	xor.b64  	%rd3984, %rd3964, %rd3940;
	and.b64  	%rd3985, %rd3984, %rd3983;
	xor.b64  	%rd3986, %rd3985, %rd3964;
	add.s64 	%rd3987, %rd3976, %rd3986;
	add.s64 	%rd3988, %rd3987, %rd3982;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3204,%dummy}, %rd3977;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3205}, %rd3977;
	}
	shf.r.wrap.b32 	%r3206, %r3205, %r3204, 14;
	shf.r.wrap.b32 	%r3207, %r3204, %r3205, 14;
	mov.b64 	%rd3989, {%r3207, %r3206};
	shf.r.wrap.b32 	%r3208, %r3205, %r3204, 18;
	shf.r.wrap.b32 	%r3209, %r3204, %r3205, 18;
	mov.b64 	%rd3990, {%r3209, %r3208};
	xor.b64  	%rd3991, %rd3990, %rd3989;
	shf.l.wrap.b32 	%r3210, %r3204, %r3205, 23;
	shf.l.wrap.b32 	%r3211, %r3205, %r3204, 23;
	mov.b64 	%rd3992, {%r3211, %r3210};
	xor.b64  	%rd3993, %rd3991, %rd3992;
	xor.b64  	%rd3994, %rd3953, %rd3929;
	and.b64  	%rd3995, %rd3977, %rd3994;
	xor.b64  	%rd3996, %rd3995, %rd3929;
	add.s64 	%rd3997, %rd3905, %rd3727;
	add.s64 	%rd3998, %rd3997, %rd12999;
	add.s64 	%rd3999, %rd3998, %rd3996;
	add.s64 	%rd4000, %rd3999, %rd3993;
	add.s64 	%rd4001, %rd4000, %rd3916;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3212,%dummy}, %rd3988;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3213}, %rd3988;
	}
	shf.r.wrap.b32 	%r3214, %r3213, %r3212, 28;
	shf.r.wrap.b32 	%r3215, %r3212, %r3213, 28;
	mov.b64 	%rd4002, {%r3215, %r3214};
	shf.l.wrap.b32 	%r3216, %r3212, %r3213, 30;
	shf.l.wrap.b32 	%r3217, %r3213, %r3212, 30;
	mov.b64 	%rd4003, {%r3217, %r3216};
	xor.b64  	%rd4004, %rd4003, %rd4002;
	shf.l.wrap.b32 	%r3218, %r3212, %r3213, 25;
	shf.l.wrap.b32 	%r3219, %r3213, %r3212, 25;
	mov.b64 	%rd4005, {%r3219, %r3218};
	xor.b64  	%rd4006, %rd4004, %rd4005;
	xor.b64  	%rd4007, %rd3988, %rd3940;
	xor.b64  	%rd4008, %rd3988, %rd3964;
	and.b64  	%rd4009, %rd4008, %rd4007;
	xor.b64  	%rd4010, %rd4009, %rd3988;
	add.s64 	%rd4011, %rd4000, %rd4010;
	add.s64 	%rd4012, %rd4011, %rd4006;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3220,%dummy}, %rd4001;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3221}, %rd4001;
	}
	shf.r.wrap.b32 	%r3222, %r3221, %r3220, 14;
	shf.r.wrap.b32 	%r3223, %r3220, %r3221, 14;
	mov.b64 	%rd4013, {%r3223, %r3222};
	shf.r.wrap.b32 	%r3224, %r3221, %r3220, 18;
	shf.r.wrap.b32 	%r3225, %r3220, %r3221, 18;
	mov.b64 	%rd4014, {%r3225, %r3224};
	xor.b64  	%rd4015, %rd4014, %rd4013;
	shf.l.wrap.b32 	%r3226, %r3220, %r3221, 23;
	shf.l.wrap.b32 	%r3227, %r3221, %r3220, 23;
	mov.b64 	%rd4016, {%r3227, %r3226};
	xor.b64  	%rd4017, %rd4015, %rd4016;
	xor.b64  	%rd4018, %rd3977, %rd3953;
	and.b64  	%rd4019, %rd4001, %rd4018;
	xor.b64  	%rd4020, %rd4019, %rd3953;
	add.s64 	%rd4021, %rd3929, %rd3740;
	add.s64 	%rd4022, %rd4021, %rd12998;
	add.s64 	%rd4023, %rd4022, %rd4020;
	add.s64 	%rd4024, %rd4023, %rd4017;
	add.s64 	%rd4025, %rd4024, %rd3940;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3228,%dummy}, %rd4012;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3229}, %rd4012;
	}
	shf.r.wrap.b32 	%r3230, %r3229, %r3228, 28;
	shf.r.wrap.b32 	%r3231, %r3228, %r3229, 28;
	mov.b64 	%rd4026, {%r3231, %r3230};
	shf.l.wrap.b32 	%r3232, %r3228, %r3229, 30;
	shf.l.wrap.b32 	%r3233, %r3229, %r3228, 30;
	mov.b64 	%rd4027, {%r3233, %r3232};
	xor.b64  	%rd4028, %rd4027, %rd4026;
	shf.l.wrap.b32 	%r3234, %r3228, %r3229, 25;
	shf.l.wrap.b32 	%r3235, %r3229, %r3228, 25;
	mov.b64 	%rd4029, {%r3235, %r3234};
	xor.b64  	%rd4030, %rd4028, %rd4029;
	xor.b64  	%rd4031, %rd4012, %rd3964;
	xor.b64  	%rd4032, %rd4012, %rd3988;
	and.b64  	%rd4033, %rd4032, %rd4031;
	xor.b64  	%rd4034, %rd4033, %rd4012;
	add.s64 	%rd4035, %rd4024, %rd4034;
	add.s64 	%rd4036, %rd4035, %rd4030;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3236,%dummy}, %rd4025;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3237}, %rd4025;
	}
	shf.r.wrap.b32 	%r3238, %r3237, %r3236, 14;
	shf.r.wrap.b32 	%r3239, %r3236, %r3237, 14;
	mov.b64 	%rd4037, {%r3239, %r3238};
	shf.r.wrap.b32 	%r3240, %r3237, %r3236, 18;
	shf.r.wrap.b32 	%r3241, %r3236, %r3237, 18;
	mov.b64 	%rd4038, {%r3241, %r3240};
	xor.b64  	%rd4039, %rd4038, %rd4037;
	shf.l.wrap.b32 	%r3242, %r3236, %r3237, 23;
	shf.l.wrap.b32 	%r3243, %r3237, %r3236, 23;
	mov.b64 	%rd4040, {%r3243, %r3242};
	xor.b64  	%rd4041, %rd4039, %rd4040;
	xor.b64  	%rd4042, %rd4001, %rd3977;
	and.b64  	%rd4043, %rd4025, %rd4042;
	xor.b64  	%rd4044, %rd4043, %rd3977;
	add.s64 	%rd4045, %rd3953, %rd3753;
	add.s64 	%rd4046, %rd4045, %rd12997;
	add.s64 	%rd4047, %rd4046, %rd4044;
	add.s64 	%rd4048, %rd4047, %rd4041;
	add.s64 	%rd4049, %rd4048, %rd3964;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3244,%dummy}, %rd4036;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3245}, %rd4036;
	}
	shf.r.wrap.b32 	%r3246, %r3245, %r3244, 28;
	shf.r.wrap.b32 	%r3247, %r3244, %r3245, 28;
	mov.b64 	%rd4050, {%r3247, %r3246};
	shf.l.wrap.b32 	%r3248, %r3244, %r3245, 30;
	shf.l.wrap.b32 	%r3249, %r3245, %r3244, 30;
	mov.b64 	%rd4051, {%r3249, %r3248};
	xor.b64  	%rd4052, %rd4051, %rd4050;
	shf.l.wrap.b32 	%r3250, %r3244, %r3245, 25;
	shf.l.wrap.b32 	%r3251, %r3245, %r3244, 25;
	mov.b64 	%rd4053, {%r3251, %r3250};
	xor.b64  	%rd4054, %rd4052, %rd4053;
	xor.b64  	%rd4055, %rd4036, %rd3988;
	xor.b64  	%rd4056, %rd4036, %rd4012;
	and.b64  	%rd4057, %rd4056, %rd4055;
	xor.b64  	%rd4058, %rd4057, %rd4036;
	add.s64 	%rd4059, %rd4048, %rd4058;
	add.s64 	%rd4060, %rd4059, %rd4054;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3252,%dummy}, %rd4049;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3253}, %rd4049;
	}
	shf.r.wrap.b32 	%r3254, %r3253, %r3252, 14;
	shf.r.wrap.b32 	%r3255, %r3252, %r3253, 14;
	mov.b64 	%rd4061, {%r3255, %r3254};
	shf.r.wrap.b32 	%r3256, %r3253, %r3252, 18;
	shf.r.wrap.b32 	%r3257, %r3252, %r3253, 18;
	mov.b64 	%rd4062, {%r3257, %r3256};
	xor.b64  	%rd4063, %rd4062, %rd4061;
	shf.l.wrap.b32 	%r3258, %r3252, %r3253, 23;
	shf.l.wrap.b32 	%r3259, %r3253, %r3252, 23;
	mov.b64 	%rd4064, {%r3259, %r3258};
	xor.b64  	%rd4065, %rd4063, %rd4064;
	xor.b64  	%rd4066, %rd4025, %rd4001;
	and.b64  	%rd4067, %rd4049, %rd4066;
	xor.b64  	%rd4068, %rd4067, %rd4001;
	add.s64 	%rd4069, %rd3977, %rd3766;
	add.s64 	%rd4070, %rd4069, %rd12996;
	add.s64 	%rd4071, %rd4070, %rd4068;
	add.s64 	%rd4072, %rd4071, %rd4065;
	add.s64 	%rd4073, %rd4072, %rd3988;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3260,%dummy}, %rd4060;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3261}, %rd4060;
	}
	shf.r.wrap.b32 	%r3262, %r3261, %r3260, 28;
	shf.r.wrap.b32 	%r3263, %r3260, %r3261, 28;
	mov.b64 	%rd4074, {%r3263, %r3262};
	shf.l.wrap.b32 	%r3264, %r3260, %r3261, 30;
	shf.l.wrap.b32 	%r3265, %r3261, %r3260, 30;
	mov.b64 	%rd4075, {%r3265, %r3264};
	xor.b64  	%rd4076, %rd4075, %rd4074;
	shf.l.wrap.b32 	%r3266, %r3260, %r3261, 25;
	shf.l.wrap.b32 	%r3267, %r3261, %r3260, 25;
	mov.b64 	%rd4077, {%r3267, %r3266};
	xor.b64  	%rd4078, %rd4076, %rd4077;
	xor.b64  	%rd4079, %rd4060, %rd4012;
	xor.b64  	%rd4080, %rd4060, %rd4036;
	and.b64  	%rd4081, %rd4080, %rd4079;
	xor.b64  	%rd4082, %rd4081, %rd4060;
	add.s64 	%rd4083, %rd4072, %rd4082;
	add.s64 	%rd4084, %rd4083, %rd4078;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3268,%dummy}, %rd4073;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3269}, %rd4073;
	}
	shf.r.wrap.b32 	%r3270, %r3269, %r3268, 14;
	shf.r.wrap.b32 	%r3271, %r3268, %r3269, 14;
	mov.b64 	%rd4085, {%r3271, %r3270};
	shf.r.wrap.b32 	%r3272, %r3269, %r3268, 18;
	shf.r.wrap.b32 	%r3273, %r3268, %r3269, 18;
	mov.b64 	%rd4086, {%r3273, %r3272};
	xor.b64  	%rd4087, %rd4086, %rd4085;
	shf.l.wrap.b32 	%r3274, %r3268, %r3269, 23;
	shf.l.wrap.b32 	%r3275, %r3269, %r3268, 23;
	mov.b64 	%rd4088, {%r3275, %r3274};
	xor.b64  	%rd4089, %rd4087, %rd4088;
	xor.b64  	%rd4090, %rd4049, %rd4025;
	and.b64  	%rd4091, %rd4073, %rd4090;
	xor.b64  	%rd4092, %rd4091, %rd4025;
	add.s64 	%rd4093, %rd4001, %rd3779;
	add.s64 	%rd4094, %rd4093, %rd12995;
	add.s64 	%rd4095, %rd4094, %rd4092;
	add.s64 	%rd4096, %rd4095, %rd4089;
	add.s64 	%rd4097, %rd4096, %rd4012;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3276,%dummy}, %rd4084;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3277}, %rd4084;
	}
	shf.r.wrap.b32 	%r3278, %r3277, %r3276, 28;
	shf.r.wrap.b32 	%r3279, %r3276, %r3277, 28;
	mov.b64 	%rd4098, {%r3279, %r3278};
	shf.l.wrap.b32 	%r3280, %r3276, %r3277, 30;
	shf.l.wrap.b32 	%r3281, %r3277, %r3276, 30;
	mov.b64 	%rd4099, {%r3281, %r3280};
	xor.b64  	%rd4100, %rd4099, %rd4098;
	shf.l.wrap.b32 	%r3282, %r3276, %r3277, 25;
	shf.l.wrap.b32 	%r3283, %r3277, %r3276, 25;
	mov.b64 	%rd4101, {%r3283, %r3282};
	xor.b64  	%rd4102, %rd4100, %rd4101;
	xor.b64  	%rd4103, %rd4084, %rd4036;
	xor.b64  	%rd4104, %rd4084, %rd4060;
	and.b64  	%rd4105, %rd4104, %rd4103;
	xor.b64  	%rd4106, %rd4105, %rd4084;
	add.s64 	%rd4107, %rd4096, %rd4106;
	add.s64 	%rd4108, %rd4107, %rd4102;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3284,%dummy}, %rd4097;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3285}, %rd4097;
	}
	shf.r.wrap.b32 	%r3286, %r3285, %r3284, 14;
	shf.r.wrap.b32 	%r3287, %r3284, %r3285, 14;
	mov.b64 	%rd4109, {%r3287, %r3286};
	shf.r.wrap.b32 	%r3288, %r3285, %r3284, 18;
	shf.r.wrap.b32 	%r3289, %r3284, %r3285, 18;
	mov.b64 	%rd4110, {%r3289, %r3288};
	xor.b64  	%rd4111, %rd4110, %rd4109;
	shf.l.wrap.b32 	%r3290, %r3284, %r3285, 23;
	shf.l.wrap.b32 	%r3291, %r3285, %r3284, 23;
	mov.b64 	%rd4112, {%r3291, %r3290};
	xor.b64  	%rd4113, %rd4111, %rd4112;
	xor.b64  	%rd4114, %rd4073, %rd4049;
	and.b64  	%rd4115, %rd4097, %rd4114;
	xor.b64  	%rd4116, %rd4115, %rd4049;
	add.s64 	%rd4117, %rd4025, %rd3792;
	add.s64 	%rd4118, %rd4117, %rd12994;
	add.s64 	%rd4119, %rd4118, %rd4116;
	add.s64 	%rd4120, %rd4119, %rd4113;
	add.s64 	%rd4121, %rd4120, %rd4036;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3292,%dummy}, %rd4108;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3293}, %rd4108;
	}
	shf.r.wrap.b32 	%r3294, %r3293, %r3292, 28;
	shf.r.wrap.b32 	%r3295, %r3292, %r3293, 28;
	mov.b64 	%rd4122, {%r3295, %r3294};
	shf.l.wrap.b32 	%r3296, %r3292, %r3293, 30;
	shf.l.wrap.b32 	%r3297, %r3293, %r3292, 30;
	mov.b64 	%rd4123, {%r3297, %r3296};
	xor.b64  	%rd4124, %rd4123, %rd4122;
	shf.l.wrap.b32 	%r3298, %r3292, %r3293, 25;
	shf.l.wrap.b32 	%r3299, %r3293, %r3292, 25;
	mov.b64 	%rd4125, {%r3299, %r3298};
	xor.b64  	%rd4126, %rd4124, %rd4125;
	xor.b64  	%rd4127, %rd4108, %rd4060;
	xor.b64  	%rd4128, %rd4108, %rd4084;
	and.b64  	%rd4129, %rd4128, %rd4127;
	xor.b64  	%rd4130, %rd4129, %rd4108;
	add.s64 	%rd4131, %rd4120, %rd4130;
	add.s64 	%rd4132, %rd4131, %rd4126;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3300,%dummy}, %rd4121;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3301}, %rd4121;
	}
	shf.r.wrap.b32 	%r3302, %r3301, %r3300, 14;
	shf.r.wrap.b32 	%r3303, %r3300, %r3301, 14;
	mov.b64 	%rd4133, {%r3303, %r3302};
	shf.r.wrap.b32 	%r3304, %r3301, %r3300, 18;
	shf.r.wrap.b32 	%r3305, %r3300, %r3301, 18;
	mov.b64 	%rd4134, {%r3305, %r3304};
	xor.b64  	%rd4135, %rd4134, %rd4133;
	shf.l.wrap.b32 	%r3306, %r3300, %r3301, 23;
	shf.l.wrap.b32 	%r3307, %r3301, %r3300, 23;
	mov.b64 	%rd4136, {%r3307, %r3306};
	xor.b64  	%rd4137, %rd4135, %rd4136;
	xor.b64  	%rd4138, %rd4097, %rd4073;
	and.b64  	%rd4139, %rd4121, %rd4138;
	xor.b64  	%rd4140, %rd4139, %rd4073;
	add.s64 	%rd4141, %rd4049, %rd3805;
	add.s64 	%rd4142, %rd4141, %rd12993;
	add.s64 	%rd4143, %rd4142, %rd4140;
	add.s64 	%rd4144, %rd4143, %rd4137;
	add.s64 	%rd4145, %rd4144, %rd4060;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3308,%dummy}, %rd4132;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3309}, %rd4132;
	}
	shf.r.wrap.b32 	%r3310, %r3309, %r3308, 28;
	shf.r.wrap.b32 	%r3311, %r3308, %r3309, 28;
	mov.b64 	%rd4146, {%r3311, %r3310};
	shf.l.wrap.b32 	%r3312, %r3308, %r3309, 30;
	shf.l.wrap.b32 	%r3313, %r3309, %r3308, 30;
	mov.b64 	%rd4147, {%r3313, %r3312};
	xor.b64  	%rd4148, %rd4147, %rd4146;
	shf.l.wrap.b32 	%r3314, %r3308, %r3309, 25;
	shf.l.wrap.b32 	%r3315, %r3309, %r3308, 25;
	mov.b64 	%rd4149, {%r3315, %r3314};
	xor.b64  	%rd4150, %rd4148, %rd4149;
	xor.b64  	%rd4151, %rd4132, %rd4084;
	xor.b64  	%rd4152, %rd4132, %rd4108;
	and.b64  	%rd4153, %rd4152, %rd4151;
	xor.b64  	%rd4154, %rd4153, %rd4132;
	add.s64 	%rd4155, %rd4144, %rd4154;
	add.s64 	%rd4156, %rd4155, %rd4150;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3316,%dummy}, %rd4145;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3317}, %rd4145;
	}
	shf.r.wrap.b32 	%r3318, %r3317, %r3316, 14;
	shf.r.wrap.b32 	%r3319, %r3316, %r3317, 14;
	mov.b64 	%rd4157, {%r3319, %r3318};
	shf.r.wrap.b32 	%r3320, %r3317, %r3316, 18;
	shf.r.wrap.b32 	%r3321, %r3316, %r3317, 18;
	mov.b64 	%rd4158, {%r3321, %r3320};
	xor.b64  	%rd4159, %rd4158, %rd4157;
	shf.l.wrap.b32 	%r3322, %r3316, %r3317, 23;
	shf.l.wrap.b32 	%r3323, %r3317, %r3316, 23;
	mov.b64 	%rd4160, {%r3323, %r3322};
	xor.b64  	%rd4161, %rd4159, %rd4160;
	xor.b64  	%rd4162, %rd4121, %rd4097;
	and.b64  	%rd4163, %rd4145, %rd4162;
	xor.b64  	%rd4164, %rd4163, %rd4097;
	add.s64 	%rd4165, %rd4073, %rd3818;
	add.s64 	%rd4166, %rd4165, %rd12992;
	add.s64 	%rd4167, %rd4166, %rd4164;
	add.s64 	%rd4168, %rd4167, %rd4161;
	add.s64 	%rd4169, %rd4168, %rd4084;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3324,%dummy}, %rd4156;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3325}, %rd4156;
	}
	shf.r.wrap.b32 	%r3326, %r3325, %r3324, 28;
	shf.r.wrap.b32 	%r3327, %r3324, %r3325, 28;
	mov.b64 	%rd4170, {%r3327, %r3326};
	shf.l.wrap.b32 	%r3328, %r3324, %r3325, 30;
	shf.l.wrap.b32 	%r3329, %r3325, %r3324, 30;
	mov.b64 	%rd4171, {%r3329, %r3328};
	xor.b64  	%rd4172, %rd4171, %rd4170;
	shf.l.wrap.b32 	%r3330, %r3324, %r3325, 25;
	shf.l.wrap.b32 	%r3331, %r3325, %r3324, 25;
	mov.b64 	%rd4173, {%r3331, %r3330};
	xor.b64  	%rd4174, %rd4172, %rd4173;
	xor.b64  	%rd4175, %rd4156, %rd4108;
	xor.b64  	%rd4176, %rd4156, %rd4132;
	and.b64  	%rd4177, %rd4176, %rd4175;
	xor.b64  	%rd4178, %rd4177, %rd4156;
	add.s64 	%rd4179, %rd4168, %rd4178;
	add.s64 	%rd4180, %rd4179, %rd4174;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3332,%dummy}, %rd4169;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3333}, %rd4169;
	}
	shf.r.wrap.b32 	%r3334, %r3333, %r3332, 14;
	shf.r.wrap.b32 	%r3335, %r3332, %r3333, 14;
	mov.b64 	%rd4181, {%r3335, %r3334};
	shf.r.wrap.b32 	%r3336, %r3333, %r3332, 18;
	shf.r.wrap.b32 	%r3337, %r3332, %r3333, 18;
	mov.b64 	%rd4182, {%r3337, %r3336};
	xor.b64  	%rd4183, %rd4182, %rd4181;
	shf.l.wrap.b32 	%r3338, %r3332, %r3333, 23;
	shf.l.wrap.b32 	%r3339, %r3333, %r3332, 23;
	mov.b64 	%rd4184, {%r3339, %r3338};
	xor.b64  	%rd4185, %rd4183, %rd4184;
	xor.b64  	%rd4186, %rd4145, %rd4121;
	and.b64  	%rd4187, %rd4169, %rd4186;
	xor.b64  	%rd4188, %rd4187, %rd4121;
	add.s64 	%rd4189, %rd4097, %rd3831;
	add.s64 	%rd4190, %rd4189, %rd12991;
	add.s64 	%rd4191, %rd4190, %rd4188;
	add.s64 	%rd4192, %rd4191, %rd4185;
	add.s64 	%rd4193, %rd4192, %rd4108;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3340,%dummy}, %rd4180;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3341}, %rd4180;
	}
	shf.r.wrap.b32 	%r3342, %r3341, %r3340, 28;
	shf.r.wrap.b32 	%r3343, %r3340, %r3341, 28;
	mov.b64 	%rd4194, {%r3343, %r3342};
	shf.l.wrap.b32 	%r3344, %r3340, %r3341, 30;
	shf.l.wrap.b32 	%r3345, %r3341, %r3340, 30;
	mov.b64 	%rd4195, {%r3345, %r3344};
	xor.b64  	%rd4196, %rd4195, %rd4194;
	shf.l.wrap.b32 	%r3346, %r3340, %r3341, 25;
	shf.l.wrap.b32 	%r3347, %r3341, %r3340, 25;
	mov.b64 	%rd4197, {%r3347, %r3346};
	xor.b64  	%rd4198, %rd4196, %rd4197;
	xor.b64  	%rd4199, %rd4180, %rd4132;
	xor.b64  	%rd4200, %rd4180, %rd4156;
	and.b64  	%rd4201, %rd4200, %rd4199;
	xor.b64  	%rd4202, %rd4201, %rd4180;
	add.s64 	%rd4203, %rd4192, %rd4202;
	add.s64 	%rd4204, %rd4203, %rd4198;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3348,%dummy}, %rd4193;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3349}, %rd4193;
	}
	shf.r.wrap.b32 	%r3350, %r3349, %r3348, 14;
	shf.r.wrap.b32 	%r3351, %r3348, %r3349, 14;
	mov.b64 	%rd4205, {%r3351, %r3350};
	shf.r.wrap.b32 	%r3352, %r3349, %r3348, 18;
	shf.r.wrap.b32 	%r3353, %r3348, %r3349, 18;
	mov.b64 	%rd4206, {%r3353, %r3352};
	xor.b64  	%rd4207, %rd4206, %rd4205;
	shf.l.wrap.b32 	%r3354, %r3348, %r3349, 23;
	shf.l.wrap.b32 	%r3355, %r3349, %r3348, 23;
	mov.b64 	%rd4208, {%r3355, %r3354};
	xor.b64  	%rd4209, %rd4207, %rd4208;
	xor.b64  	%rd4210, %rd4169, %rd4145;
	and.b64  	%rd4211, %rd4193, %rd4210;
	xor.b64  	%rd4212, %rd4211, %rd4145;
	add.s64 	%rd4213, %rd4121, %rd3844;
	add.s64 	%rd4214, %rd4213, %rd12990;
	add.s64 	%rd4215, %rd4214, %rd4212;
	add.s64 	%rd4216, %rd4215, %rd4209;
	add.s64 	%rd4217, %rd4216, %rd4132;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3356,%dummy}, %rd4204;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3357}, %rd4204;
	}
	shf.r.wrap.b32 	%r3358, %r3357, %r3356, 28;
	shf.r.wrap.b32 	%r3359, %r3356, %r3357, 28;
	mov.b64 	%rd4218, {%r3359, %r3358};
	shf.l.wrap.b32 	%r3360, %r3356, %r3357, 30;
	shf.l.wrap.b32 	%r3361, %r3357, %r3356, 30;
	mov.b64 	%rd4219, {%r3361, %r3360};
	xor.b64  	%rd4220, %rd4219, %rd4218;
	shf.l.wrap.b32 	%r3362, %r3356, %r3357, 25;
	shf.l.wrap.b32 	%r3363, %r3357, %r3356, 25;
	mov.b64 	%rd4221, {%r3363, %r3362};
	xor.b64  	%rd4222, %rd4220, %rd4221;
	xor.b64  	%rd4223, %rd4204, %rd4156;
	xor.b64  	%rd4224, %rd4204, %rd4180;
	and.b64  	%rd4225, %rd4224, %rd4223;
	xor.b64  	%rd4226, %rd4225, %rd4204;
	add.s64 	%rd4227, %rd4216, %rd4226;
	add.s64 	%rd4228, %rd4227, %rd4222;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3364,%dummy}, %rd3831;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3365}, %rd3831;
	}
	shf.r.wrap.b32 	%r3366, %r3365, %r3364, 19;
	shf.r.wrap.b32 	%r3367, %r3364, %r3365, 19;
	mov.b64 	%rd4229, {%r3367, %r3366};
	shf.l.wrap.b32 	%r3368, %r3364, %r3365, 3;
	shf.l.wrap.b32 	%r3369, %r3365, %r3364, 3;
	mov.b64 	%rd4230, {%r3369, %r3368};
	shr.u64 	%rd4231, %rd3831, 6;
	xor.b64  	%rd4232, %rd4229, %rd4231;
	xor.b64  	%rd4233, %rd4232, %rd4230;
	shf.r.wrap.b32 	%r3370, %r2959, %r2958, 1;
	shf.r.wrap.b32 	%r3371, %r2958, %r2959, 1;
	mov.b64 	%rd4234, {%r3371, %r3370};
	shf.r.wrap.b32 	%r3372, %r2959, %r2958, 8;
	shf.r.wrap.b32 	%r3373, %r2958, %r2959, 8;
	mov.b64 	%rd4235, {%r3373, %r3372};
	shr.u64 	%rd4236, %rd3662, 7;
	xor.b64  	%rd4237, %rd4234, %rd4236;
	xor.b64  	%rd4238, %rd4237, %rd4235;
	add.s64 	%rd4239, %rd3766, %rd3649;
	add.s64 	%rd4240, %rd4239, %rd4233;
	add.s64 	%rd4241, %rd4240, %rd4238;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3374,%dummy}, %rd3844;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3375}, %rd3844;
	}
	shf.r.wrap.b32 	%r3376, %r3375, %r3374, 19;
	shf.r.wrap.b32 	%r3377, %r3374, %r3375, 19;
	mov.b64 	%rd4242, {%r3377, %r3376};
	shf.l.wrap.b32 	%r3378, %r3374, %r3375, 3;
	shf.l.wrap.b32 	%r3379, %r3375, %r3374, 3;
	mov.b64 	%rd4243, {%r3379, %r3378};
	shr.u64 	%rd4244, %rd3844, 6;
	xor.b64  	%rd4245, %rd4242, %rd4244;
	xor.b64  	%rd4246, %rd4245, %rd4243;
	shf.r.wrap.b32 	%r3380, %r2971, %r2970, 1;
	shf.r.wrap.b32 	%r3381, %r2970, %r2971, 1;
	mov.b64 	%rd4247, {%r3381, %r3380};
	shf.r.wrap.b32 	%r3382, %r2971, %r2970, 8;
	shf.r.wrap.b32 	%r3383, %r2970, %r2971, 8;
	mov.b64 	%rd4248, {%r3383, %r3382};
	shr.u64 	%rd4249, %rd3675, 7;
	xor.b64  	%rd4250, %rd4247, %rd4249;
	xor.b64  	%rd4251, %rd4250, %rd4248;
	add.s64 	%rd4252, %rd3779, %rd3662;
	add.s64 	%rd4253, %rd4252, %rd4246;
	add.s64 	%rd4254, %rd4253, %rd4251;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3384,%dummy}, %rd4241;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3385}, %rd4241;
	}
	shf.r.wrap.b32 	%r3386, %r3385, %r3384, 19;
	shf.r.wrap.b32 	%r3387, %r3384, %r3385, 19;
	mov.b64 	%rd4255, {%r3387, %r3386};
	shf.l.wrap.b32 	%r3388, %r3384, %r3385, 3;
	shf.l.wrap.b32 	%r3389, %r3385, %r3384, 3;
	mov.b64 	%rd4256, {%r3389, %r3388};
	shr.u64 	%rd4257, %rd4241, 6;
	xor.b64  	%rd4258, %rd4255, %rd4257;
	xor.b64  	%rd4259, %rd4258, %rd4256;
	shf.r.wrap.b32 	%r3390, %r2983, %r2982, 1;
	shf.r.wrap.b32 	%r3391, %r2982, %r2983, 1;
	mov.b64 	%rd4260, {%r3391, %r3390};
	shf.r.wrap.b32 	%r3392, %r2983, %r2982, 8;
	shf.r.wrap.b32 	%r3393, %r2982, %r2983, 8;
	mov.b64 	%rd4261, {%r3393, %r3392};
	shr.u64 	%rd4262, %rd3688, 7;
	xor.b64  	%rd4263, %rd4260, %rd4262;
	xor.b64  	%rd4264, %rd4263, %rd4261;
	add.s64 	%rd4265, %rd3792, %rd3675;
	add.s64 	%rd4266, %rd4265, %rd4259;
	add.s64 	%rd4267, %rd4266, %rd4264;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3394,%dummy}, %rd4254;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3395}, %rd4254;
	}
	shf.r.wrap.b32 	%r3396, %r3395, %r3394, 19;
	shf.r.wrap.b32 	%r3397, %r3394, %r3395, 19;
	mov.b64 	%rd4268, {%r3397, %r3396};
	shf.l.wrap.b32 	%r3398, %r3394, %r3395, 3;
	shf.l.wrap.b32 	%r3399, %r3395, %r3394, 3;
	mov.b64 	%rd4269, {%r3399, %r3398};
	shr.u64 	%rd4270, %rd4254, 6;
	xor.b64  	%rd4271, %rd4268, %rd4270;
	xor.b64  	%rd4272, %rd4271, %rd4269;
	shf.r.wrap.b32 	%r3400, %r2995, %r2994, 1;
	shf.r.wrap.b32 	%r3401, %r2994, %r2995, 1;
	mov.b64 	%rd4273, {%r3401, %r3400};
	shf.r.wrap.b32 	%r3402, %r2995, %r2994, 8;
	shf.r.wrap.b32 	%r3403, %r2994, %r2995, 8;
	mov.b64 	%rd4274, {%r3403, %r3402};
	shr.u64 	%rd4275, %rd3701, 7;
	xor.b64  	%rd4276, %rd4273, %rd4275;
	xor.b64  	%rd4277, %rd4276, %rd4274;
	add.s64 	%rd4278, %rd3805, %rd3688;
	add.s64 	%rd4279, %rd4278, %rd4272;
	add.s64 	%rd4280, %rd4279, %rd4277;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3404,%dummy}, %rd4267;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3405}, %rd4267;
	}
	shf.r.wrap.b32 	%r3406, %r3405, %r3404, 19;
	shf.r.wrap.b32 	%r3407, %r3404, %r3405, 19;
	mov.b64 	%rd4281, {%r3407, %r3406};
	shf.l.wrap.b32 	%r3408, %r3404, %r3405, 3;
	shf.l.wrap.b32 	%r3409, %r3405, %r3404, 3;
	mov.b64 	%rd4282, {%r3409, %r3408};
	shr.u64 	%rd4283, %rd4267, 6;
	xor.b64  	%rd4284, %rd4281, %rd4283;
	xor.b64  	%rd4285, %rd4284, %rd4282;
	shf.r.wrap.b32 	%r3410, %r3007, %r3006, 1;
	shf.r.wrap.b32 	%r3411, %r3006, %r3007, 1;
	mov.b64 	%rd4286, {%r3411, %r3410};
	shf.r.wrap.b32 	%r3412, %r3007, %r3006, 8;
	shf.r.wrap.b32 	%r3413, %r3006, %r3007, 8;
	mov.b64 	%rd4287, {%r3413, %r3412};
	shr.u64 	%rd4288, %rd3714, 7;
	xor.b64  	%rd4289, %rd4286, %rd4288;
	xor.b64  	%rd4290, %rd4289, %rd4287;
	add.s64 	%rd4291, %rd3818, %rd3701;
	add.s64 	%rd4292, %rd4291, %rd4285;
	add.s64 	%rd4293, %rd4292, %rd4290;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3414,%dummy}, %rd4280;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3415}, %rd4280;
	}
	shf.r.wrap.b32 	%r3416, %r3415, %r3414, 19;
	shf.r.wrap.b32 	%r3417, %r3414, %r3415, 19;
	mov.b64 	%rd4294, {%r3417, %r3416};
	shf.l.wrap.b32 	%r3418, %r3414, %r3415, 3;
	shf.l.wrap.b32 	%r3419, %r3415, %r3414, 3;
	mov.b64 	%rd4295, {%r3419, %r3418};
	shr.u64 	%rd4296, %rd4280, 6;
	xor.b64  	%rd4297, %rd4294, %rd4296;
	xor.b64  	%rd4298, %rd4297, %rd4295;
	shf.r.wrap.b32 	%r3420, %r3019, %r3018, 1;
	shf.r.wrap.b32 	%r3421, %r3018, %r3019, 1;
	mov.b64 	%rd4299, {%r3421, %r3420};
	shf.r.wrap.b32 	%r3422, %r3019, %r3018, 8;
	shf.r.wrap.b32 	%r3423, %r3018, %r3019, 8;
	mov.b64 	%rd4300, {%r3423, %r3422};
	shr.u64 	%rd4301, %rd3727, 7;
	xor.b64  	%rd4302, %rd4299, %rd4301;
	xor.b64  	%rd4303, %rd4302, %rd4300;
	add.s64 	%rd4304, %rd3831, %rd3714;
	add.s64 	%rd4305, %rd4304, %rd4298;
	add.s64 	%rd4306, %rd4305, %rd4303;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3424,%dummy}, %rd4293;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3425}, %rd4293;
	}
	shf.r.wrap.b32 	%r3426, %r3425, %r3424, 19;
	shf.r.wrap.b32 	%r3427, %r3424, %r3425, 19;
	mov.b64 	%rd4307, {%r3427, %r3426};
	shf.l.wrap.b32 	%r3428, %r3424, %r3425, 3;
	shf.l.wrap.b32 	%r3429, %r3425, %r3424, 3;
	mov.b64 	%rd4308, {%r3429, %r3428};
	shr.u64 	%rd4309, %rd4293, 6;
	xor.b64  	%rd4310, %rd4307, %rd4309;
	xor.b64  	%rd4311, %rd4310, %rd4308;
	shf.r.wrap.b32 	%r3430, %r3031, %r3030, 1;
	shf.r.wrap.b32 	%r3431, %r3030, %r3031, 1;
	mov.b64 	%rd4312, {%r3431, %r3430};
	shf.r.wrap.b32 	%r3432, %r3031, %r3030, 8;
	shf.r.wrap.b32 	%r3433, %r3030, %r3031, 8;
	mov.b64 	%rd4313, {%r3433, %r3432};
	shr.u64 	%rd4314, %rd3740, 7;
	xor.b64  	%rd4315, %rd4312, %rd4314;
	xor.b64  	%rd4316, %rd4315, %rd4313;
	add.s64 	%rd4317, %rd3844, %rd3727;
	add.s64 	%rd4318, %rd4317, %rd4311;
	add.s64 	%rd4319, %rd4318, %rd4316;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3434,%dummy}, %rd4306;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3435}, %rd4306;
	}
	shf.r.wrap.b32 	%r3436, %r3435, %r3434, 19;
	shf.r.wrap.b32 	%r3437, %r3434, %r3435, 19;
	mov.b64 	%rd4320, {%r3437, %r3436};
	shf.l.wrap.b32 	%r3438, %r3434, %r3435, 3;
	shf.l.wrap.b32 	%r3439, %r3435, %r3434, 3;
	mov.b64 	%rd4321, {%r3439, %r3438};
	shr.u64 	%rd4322, %rd4306, 6;
	xor.b64  	%rd4323, %rd4320, %rd4322;
	xor.b64  	%rd4324, %rd4323, %rd4321;
	shf.r.wrap.b32 	%r3440, %r3043, %r3042, 1;
	shf.r.wrap.b32 	%r3441, %r3042, %r3043, 1;
	mov.b64 	%rd4325, {%r3441, %r3440};
	shf.r.wrap.b32 	%r3442, %r3043, %r3042, 8;
	shf.r.wrap.b32 	%r3443, %r3042, %r3043, 8;
	mov.b64 	%rd4326, {%r3443, %r3442};
	shr.u64 	%rd4327, %rd3753, 7;
	xor.b64  	%rd4328, %rd4325, %rd4327;
	xor.b64  	%rd4329, %rd4328, %rd4326;
	add.s64 	%rd4330, %rd4241, %rd3740;
	add.s64 	%rd4331, %rd4330, %rd4324;
	add.s64 	%rd4332, %rd4331, %rd4329;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3444,%dummy}, %rd4319;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3445}, %rd4319;
	}
	shf.r.wrap.b32 	%r3446, %r3445, %r3444, 19;
	shf.r.wrap.b32 	%r3447, %r3444, %r3445, 19;
	mov.b64 	%rd4333, {%r3447, %r3446};
	shf.l.wrap.b32 	%r3448, %r3444, %r3445, 3;
	shf.l.wrap.b32 	%r3449, %r3445, %r3444, 3;
	mov.b64 	%rd4334, {%r3449, %r3448};
	shr.u64 	%rd4335, %rd4319, 6;
	xor.b64  	%rd4336, %rd4333, %rd4335;
	xor.b64  	%rd4337, %rd4336, %rd4334;
	shf.r.wrap.b32 	%r3450, %r3055, %r3054, 1;
	shf.r.wrap.b32 	%r3451, %r3054, %r3055, 1;
	mov.b64 	%rd4338, {%r3451, %r3450};
	shf.r.wrap.b32 	%r3452, %r3055, %r3054, 8;
	shf.r.wrap.b32 	%r3453, %r3054, %r3055, 8;
	mov.b64 	%rd4339, {%r3453, %r3452};
	shr.u64 	%rd4340, %rd3766, 7;
	xor.b64  	%rd4341, %rd4338, %rd4340;
	xor.b64  	%rd4342, %rd4341, %rd4339;
	add.s64 	%rd4343, %rd4254, %rd3753;
	add.s64 	%rd4344, %rd4343, %rd4337;
	add.s64 	%rd4345, %rd4344, %rd4342;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3454,%dummy}, %rd4332;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3455}, %rd4332;
	}
	shf.r.wrap.b32 	%r3456, %r3455, %r3454, 19;
	shf.r.wrap.b32 	%r3457, %r3454, %r3455, 19;
	mov.b64 	%rd4346, {%r3457, %r3456};
	shf.l.wrap.b32 	%r3458, %r3454, %r3455, 3;
	shf.l.wrap.b32 	%r3459, %r3455, %r3454, 3;
	mov.b64 	%rd4347, {%r3459, %r3458};
	shr.u64 	%rd4348, %rd4332, 6;
	xor.b64  	%rd4349, %rd4346, %rd4348;
	xor.b64  	%rd4350, %rd4349, %rd4347;
	shf.r.wrap.b32 	%r3460, %r3067, %r3066, 1;
	shf.r.wrap.b32 	%r3461, %r3066, %r3067, 1;
	mov.b64 	%rd4351, {%r3461, %r3460};
	shf.r.wrap.b32 	%r3462, %r3067, %r3066, 8;
	shf.r.wrap.b32 	%r3463, %r3066, %r3067, 8;
	mov.b64 	%rd4352, {%r3463, %r3462};
	shr.u64 	%rd4353, %rd3779, 7;
	xor.b64  	%rd4354, %rd4351, %rd4353;
	xor.b64  	%rd4355, %rd4354, %rd4352;
	add.s64 	%rd4356, %rd4267, %rd3766;
	add.s64 	%rd4357, %rd4356, %rd4350;
	add.s64 	%rd4358, %rd4357, %rd4355;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3464,%dummy}, %rd4345;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3465}, %rd4345;
	}
	shf.r.wrap.b32 	%r3466, %r3465, %r3464, 19;
	shf.r.wrap.b32 	%r3467, %r3464, %r3465, 19;
	mov.b64 	%rd4359, {%r3467, %r3466};
	shf.l.wrap.b32 	%r3468, %r3464, %r3465, 3;
	shf.l.wrap.b32 	%r3469, %r3465, %r3464, 3;
	mov.b64 	%rd4360, {%r3469, %r3468};
	shr.u64 	%rd4361, %rd4345, 6;
	xor.b64  	%rd4362, %rd4359, %rd4361;
	xor.b64  	%rd4363, %rd4362, %rd4360;
	shf.r.wrap.b32 	%r3470, %r3079, %r3078, 1;
	shf.r.wrap.b32 	%r3471, %r3078, %r3079, 1;
	mov.b64 	%rd4364, {%r3471, %r3470};
	shf.r.wrap.b32 	%r3472, %r3079, %r3078, 8;
	shf.r.wrap.b32 	%r3473, %r3078, %r3079, 8;
	mov.b64 	%rd4365, {%r3473, %r3472};
	shr.u64 	%rd4366, %rd3792, 7;
	xor.b64  	%rd4367, %rd4364, %rd4366;
	xor.b64  	%rd4368, %rd4367, %rd4365;
	add.s64 	%rd4369, %rd4280, %rd3779;
	add.s64 	%rd4370, %rd4369, %rd4363;
	add.s64 	%rd4371, %rd4370, %rd4368;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3474,%dummy}, %rd4358;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3475}, %rd4358;
	}
	shf.r.wrap.b32 	%r3476, %r3475, %r3474, 19;
	shf.r.wrap.b32 	%r3477, %r3474, %r3475, 19;
	mov.b64 	%rd4372, {%r3477, %r3476};
	shf.l.wrap.b32 	%r3478, %r3474, %r3475, 3;
	shf.l.wrap.b32 	%r3479, %r3475, %r3474, 3;
	mov.b64 	%rd4373, {%r3479, %r3478};
	shr.u64 	%rd4374, %rd4358, 6;
	xor.b64  	%rd4375, %rd4372, %rd4374;
	xor.b64  	%rd4376, %rd4375, %rd4373;
	shf.r.wrap.b32 	%r3480, %r3089, %r3088, 1;
	shf.r.wrap.b32 	%r3481, %r3088, %r3089, 1;
	mov.b64 	%rd4377, {%r3481, %r3480};
	shf.r.wrap.b32 	%r3482, %r3089, %r3088, 8;
	shf.r.wrap.b32 	%r3483, %r3088, %r3089, 8;
	mov.b64 	%rd4378, {%r3483, %r3482};
	shr.u64 	%rd4379, %rd3805, 7;
	xor.b64  	%rd4380, %rd4377, %rd4379;
	xor.b64  	%rd4381, %rd4380, %rd4378;
	add.s64 	%rd4382, %rd4293, %rd3792;
	add.s64 	%rd4383, %rd4382, %rd4376;
	add.s64 	%rd4384, %rd4383, %rd4381;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3484,%dummy}, %rd4371;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3485}, %rd4371;
	}
	shf.r.wrap.b32 	%r3486, %r3485, %r3484, 19;
	shf.r.wrap.b32 	%r3487, %r3484, %r3485, 19;
	mov.b64 	%rd4385, {%r3487, %r3486};
	shf.l.wrap.b32 	%r3488, %r3484, %r3485, 3;
	shf.l.wrap.b32 	%r3489, %r3485, %r3484, 3;
	mov.b64 	%rd4386, {%r3489, %r3488};
	shr.u64 	%rd4387, %rd4371, 6;
	xor.b64  	%rd4388, %rd4385, %rd4387;
	xor.b64  	%rd4389, %rd4388, %rd4386;
	shf.r.wrap.b32 	%r3490, %r3099, %r3098, 1;
	shf.r.wrap.b32 	%r3491, %r3098, %r3099, 1;
	mov.b64 	%rd4390, {%r3491, %r3490};
	shf.r.wrap.b32 	%r3492, %r3099, %r3098, 8;
	shf.r.wrap.b32 	%r3493, %r3098, %r3099, 8;
	mov.b64 	%rd4391, {%r3493, %r3492};
	shr.u64 	%rd4392, %rd3818, 7;
	xor.b64  	%rd4393, %rd4390, %rd4392;
	xor.b64  	%rd4394, %rd4393, %rd4391;
	add.s64 	%rd4395, %rd4306, %rd3805;
	add.s64 	%rd4396, %rd4395, %rd4389;
	add.s64 	%rd4397, %rd4396, %rd4394;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3494,%dummy}, %rd4384;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3495}, %rd4384;
	}
	shf.r.wrap.b32 	%r3496, %r3495, %r3494, 19;
	shf.r.wrap.b32 	%r3497, %r3494, %r3495, 19;
	mov.b64 	%rd4398, {%r3497, %r3496};
	shf.l.wrap.b32 	%r3498, %r3494, %r3495, 3;
	shf.l.wrap.b32 	%r3499, %r3495, %r3494, 3;
	mov.b64 	%rd4399, {%r3499, %r3498};
	shr.u64 	%rd4400, %rd4384, 6;
	xor.b64  	%rd4401, %rd4398, %rd4400;
	xor.b64  	%rd4402, %rd4401, %rd4399;
	shf.r.wrap.b32 	%r3500, %r3365, %r3364, 1;
	shf.r.wrap.b32 	%r3501, %r3364, %r3365, 1;
	mov.b64 	%rd4403, {%r3501, %r3500};
	shf.r.wrap.b32 	%r3502, %r3365, %r3364, 8;
	shf.r.wrap.b32 	%r3503, %r3364, %r3365, 8;
	mov.b64 	%rd4404, {%r3503, %r3502};
	shr.u64 	%rd4405, %rd3831, 7;
	xor.b64  	%rd4406, %rd4403, %rd4405;
	xor.b64  	%rd4407, %rd4406, %rd4404;
	add.s64 	%rd4408, %rd4319, %rd3818;
	add.s64 	%rd4409, %rd4408, %rd4402;
	add.s64 	%rd4410, %rd4409, %rd4407;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3504,%dummy}, %rd4397;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3505}, %rd4397;
	}
	shf.r.wrap.b32 	%r3506, %r3505, %r3504, 19;
	shf.r.wrap.b32 	%r3507, %r3504, %r3505, 19;
	mov.b64 	%rd4411, {%r3507, %r3506};
	shf.l.wrap.b32 	%r3508, %r3504, %r3505, 3;
	shf.l.wrap.b32 	%r3509, %r3505, %r3504, 3;
	mov.b64 	%rd4412, {%r3509, %r3508};
	shr.u64 	%rd4413, %rd4397, 6;
	xor.b64  	%rd4414, %rd4411, %rd4413;
	xor.b64  	%rd4415, %rd4414, %rd4412;
	shf.r.wrap.b32 	%r3510, %r3375, %r3374, 1;
	shf.r.wrap.b32 	%r3511, %r3374, %r3375, 1;
	mov.b64 	%rd4416, {%r3511, %r3510};
	shf.r.wrap.b32 	%r3512, %r3375, %r3374, 8;
	shf.r.wrap.b32 	%r3513, %r3374, %r3375, 8;
	mov.b64 	%rd4417, {%r3513, %r3512};
	shr.u64 	%rd4418, %rd3844, 7;
	xor.b64  	%rd4419, %rd4416, %rd4418;
	xor.b64  	%rd4420, %rd4419, %rd4417;
	add.s64 	%rd4421, %rd4332, %rd3831;
	add.s64 	%rd4422, %rd4421, %rd4415;
	add.s64 	%rd4423, %rd4422, %rd4420;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3514,%dummy}, %rd4410;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3515}, %rd4410;
	}
	shf.r.wrap.b32 	%r3516, %r3515, %r3514, 19;
	shf.r.wrap.b32 	%r3517, %r3514, %r3515, 19;
	mov.b64 	%rd4424, {%r3517, %r3516};
	shf.l.wrap.b32 	%r3518, %r3514, %r3515, 3;
	shf.l.wrap.b32 	%r3519, %r3515, %r3514, 3;
	mov.b64 	%rd4425, {%r3519, %r3518};
	shr.u64 	%rd4426, %rd4410, 6;
	xor.b64  	%rd4427, %rd4424, %rd4426;
	xor.b64  	%rd4428, %rd4427, %rd4425;
	shf.r.wrap.b32 	%r3520, %r3385, %r3384, 1;
	shf.r.wrap.b32 	%r3521, %r3384, %r3385, 1;
	mov.b64 	%rd4429, {%r3521, %r3520};
	shf.r.wrap.b32 	%r3522, %r3385, %r3384, 8;
	shf.r.wrap.b32 	%r3523, %r3384, %r3385, 8;
	mov.b64 	%rd4430, {%r3523, %r3522};
	shr.u64 	%rd4431, %rd4241, 7;
	xor.b64  	%rd4432, %rd4429, %rd4431;
	xor.b64  	%rd4433, %rd4432, %rd4430;
	add.s64 	%rd4434, %rd4345, %rd3844;
	add.s64 	%rd4435, %rd4434, %rd4428;
	add.s64 	%rd4436, %rd4435, %rd4433;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3524,%dummy}, %rd4217;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3525}, %rd4217;
	}
	shf.r.wrap.b32 	%r3526, %r3525, %r3524, 14;
	shf.r.wrap.b32 	%r3527, %r3524, %r3525, 14;
	mov.b64 	%rd4437, {%r3527, %r3526};
	shf.r.wrap.b32 	%r3528, %r3525, %r3524, 18;
	shf.r.wrap.b32 	%r3529, %r3524, %r3525, 18;
	mov.b64 	%rd4438, {%r3529, %r3528};
	xor.b64  	%rd4439, %rd4438, %rd4437;
	shf.l.wrap.b32 	%r3530, %r3524, %r3525, 23;
	shf.l.wrap.b32 	%r3531, %r3525, %r3524, 23;
	mov.b64 	%rd4440, {%r3531, %r3530};
	xor.b64  	%rd4441, %rd4439, %rd4440;
	xor.b64  	%rd4442, %rd4193, %rd4169;
	and.b64  	%rd4443, %rd4442, %rd4217;
	xor.b64  	%rd4444, %rd4443, %rd4169;
	add.s64 	%rd4445, %rd4444, %rd4145;
	add.s64 	%rd4446, %rd4445, %rd4241;
	add.s64 	%rd4447, %rd4446, %rd12989;
	add.s64 	%rd4448, %rd4447, %rd4441;
	add.s64 	%rd4449, %rd4448, %rd4156;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3532,%dummy}, %rd4228;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3533}, %rd4228;
	}
	shf.r.wrap.b32 	%r3534, %r3533, %r3532, 28;
	shf.r.wrap.b32 	%r3535, %r3532, %r3533, 28;
	mov.b64 	%rd4450, {%r3535, %r3534};
	shf.l.wrap.b32 	%r3536, %r3532, %r3533, 30;
	shf.l.wrap.b32 	%r3537, %r3533, %r3532, 30;
	mov.b64 	%rd4451, {%r3537, %r3536};
	xor.b64  	%rd4452, %rd4451, %rd4450;
	shf.l.wrap.b32 	%r3538, %r3532, %r3533, 25;
	shf.l.wrap.b32 	%r3539, %r3533, %r3532, 25;
	mov.b64 	%rd4453, {%r3539, %r3538};
	xor.b64  	%rd4454, %rd4452, %rd4453;
	xor.b64  	%rd4455, %rd4228, %rd4180;
	xor.b64  	%rd4456, %rd4228, %rd4204;
	and.b64  	%rd4457, %rd4456, %rd4455;
	xor.b64  	%rd4458, %rd4457, %rd4228;
	add.s64 	%rd4459, %rd4448, %rd4458;
	add.s64 	%rd4460, %rd4459, %rd4454;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3540,%dummy}, %rd4449;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3541}, %rd4449;
	}
	shf.r.wrap.b32 	%r3542, %r3541, %r3540, 14;
	shf.r.wrap.b32 	%r3543, %r3540, %r3541, 14;
	mov.b64 	%rd4461, {%r3543, %r3542};
	shf.r.wrap.b32 	%r3544, %r3541, %r3540, 18;
	shf.r.wrap.b32 	%r3545, %r3540, %r3541, 18;
	mov.b64 	%rd4462, {%r3545, %r3544};
	xor.b64  	%rd4463, %rd4462, %rd4461;
	shf.l.wrap.b32 	%r3546, %r3540, %r3541, 23;
	shf.l.wrap.b32 	%r3547, %r3541, %r3540, 23;
	mov.b64 	%rd4464, {%r3547, %r3546};
	xor.b64  	%rd4465, %rd4463, %rd4464;
	xor.b64  	%rd4466, %rd4217, %rd4193;
	and.b64  	%rd4467, %rd4449, %rd4466;
	xor.b64  	%rd4468, %rd4467, %rd4193;
	add.s64 	%rd4469, %rd4254, %rd4169;
	add.s64 	%rd4470, %rd4469, %rd12988;
	add.s64 	%rd4471, %rd4470, %rd4468;
	add.s64 	%rd4472, %rd4471, %rd4465;
	add.s64 	%rd4473, %rd4472, %rd4180;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3548,%dummy}, %rd4460;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3549}, %rd4460;
	}
	shf.r.wrap.b32 	%r3550, %r3549, %r3548, 28;
	shf.r.wrap.b32 	%r3551, %r3548, %r3549, 28;
	mov.b64 	%rd4474, {%r3551, %r3550};
	shf.l.wrap.b32 	%r3552, %r3548, %r3549, 30;
	shf.l.wrap.b32 	%r3553, %r3549, %r3548, 30;
	mov.b64 	%rd4475, {%r3553, %r3552};
	xor.b64  	%rd4476, %rd4475, %rd4474;
	shf.l.wrap.b32 	%r3554, %r3548, %r3549, 25;
	shf.l.wrap.b32 	%r3555, %r3549, %r3548, 25;
	mov.b64 	%rd4477, {%r3555, %r3554};
	xor.b64  	%rd4478, %rd4476, %rd4477;
	xor.b64  	%rd4479, %rd4460, %rd4204;
	xor.b64  	%rd4480, %rd4460, %rd4228;
	and.b64  	%rd4481, %rd4480, %rd4479;
	xor.b64  	%rd4482, %rd4481, %rd4460;
	add.s64 	%rd4483, %rd4472, %rd4482;
	add.s64 	%rd4484, %rd4483, %rd4478;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3556,%dummy}, %rd4473;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3557}, %rd4473;
	}
	shf.r.wrap.b32 	%r3558, %r3557, %r3556, 14;
	shf.r.wrap.b32 	%r3559, %r3556, %r3557, 14;
	mov.b64 	%rd4485, {%r3559, %r3558};
	shf.r.wrap.b32 	%r3560, %r3557, %r3556, 18;
	shf.r.wrap.b32 	%r3561, %r3556, %r3557, 18;
	mov.b64 	%rd4486, {%r3561, %r3560};
	xor.b64  	%rd4487, %rd4486, %rd4485;
	shf.l.wrap.b32 	%r3562, %r3556, %r3557, 23;
	shf.l.wrap.b32 	%r3563, %r3557, %r3556, 23;
	mov.b64 	%rd4488, {%r3563, %r3562};
	xor.b64  	%rd4489, %rd4487, %rd4488;
	xor.b64  	%rd4490, %rd4449, %rd4217;
	and.b64  	%rd4491, %rd4473, %rd4490;
	xor.b64  	%rd4492, %rd4491, %rd4217;
	add.s64 	%rd4493, %rd4267, %rd4193;
	add.s64 	%rd4494, %rd4493, %rd12987;
	add.s64 	%rd4495, %rd4494, %rd4492;
	add.s64 	%rd4496, %rd4495, %rd4489;
	add.s64 	%rd4497, %rd4496, %rd4204;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3564,%dummy}, %rd4484;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3565}, %rd4484;
	}
	shf.r.wrap.b32 	%r3566, %r3565, %r3564, 28;
	shf.r.wrap.b32 	%r3567, %r3564, %r3565, 28;
	mov.b64 	%rd4498, {%r3567, %r3566};
	shf.l.wrap.b32 	%r3568, %r3564, %r3565, 30;
	shf.l.wrap.b32 	%r3569, %r3565, %r3564, 30;
	mov.b64 	%rd4499, {%r3569, %r3568};
	xor.b64  	%rd4500, %rd4499, %rd4498;
	shf.l.wrap.b32 	%r3570, %r3564, %r3565, 25;
	shf.l.wrap.b32 	%r3571, %r3565, %r3564, 25;
	mov.b64 	%rd4501, {%r3571, %r3570};
	xor.b64  	%rd4502, %rd4500, %rd4501;
	xor.b64  	%rd4503, %rd4484, %rd4228;
	xor.b64  	%rd4504, %rd4484, %rd4460;
	and.b64  	%rd4505, %rd4504, %rd4503;
	xor.b64  	%rd4506, %rd4505, %rd4484;
	add.s64 	%rd4507, %rd4496, %rd4506;
	add.s64 	%rd4508, %rd4507, %rd4502;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3572,%dummy}, %rd4497;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3573}, %rd4497;
	}
	shf.r.wrap.b32 	%r3574, %r3573, %r3572, 14;
	shf.r.wrap.b32 	%r3575, %r3572, %r3573, 14;
	mov.b64 	%rd4509, {%r3575, %r3574};
	shf.r.wrap.b32 	%r3576, %r3573, %r3572, 18;
	shf.r.wrap.b32 	%r3577, %r3572, %r3573, 18;
	mov.b64 	%rd4510, {%r3577, %r3576};
	xor.b64  	%rd4511, %rd4510, %rd4509;
	shf.l.wrap.b32 	%r3578, %r3572, %r3573, 23;
	shf.l.wrap.b32 	%r3579, %r3573, %r3572, 23;
	mov.b64 	%rd4512, {%r3579, %r3578};
	xor.b64  	%rd4513, %rd4511, %rd4512;
	xor.b64  	%rd4514, %rd4473, %rd4449;
	and.b64  	%rd4515, %rd4497, %rd4514;
	xor.b64  	%rd4516, %rd4515, %rd4449;
	add.s64 	%rd4517, %rd4280, %rd4217;
	add.s64 	%rd4518, %rd4517, %rd12986;
	add.s64 	%rd4519, %rd4518, %rd4516;
	add.s64 	%rd4520, %rd4519, %rd4513;
	add.s64 	%rd4521, %rd4520, %rd4228;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3580,%dummy}, %rd4508;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3581}, %rd4508;
	}
	shf.r.wrap.b32 	%r3582, %r3581, %r3580, 28;
	shf.r.wrap.b32 	%r3583, %r3580, %r3581, 28;
	mov.b64 	%rd4522, {%r3583, %r3582};
	shf.l.wrap.b32 	%r3584, %r3580, %r3581, 30;
	shf.l.wrap.b32 	%r3585, %r3581, %r3580, 30;
	mov.b64 	%rd4523, {%r3585, %r3584};
	xor.b64  	%rd4524, %rd4523, %rd4522;
	shf.l.wrap.b32 	%r3586, %r3580, %r3581, 25;
	shf.l.wrap.b32 	%r3587, %r3581, %r3580, 25;
	mov.b64 	%rd4525, {%r3587, %r3586};
	xor.b64  	%rd4526, %rd4524, %rd4525;
	xor.b64  	%rd4527, %rd4508, %rd4460;
	xor.b64  	%rd4528, %rd4508, %rd4484;
	and.b64  	%rd4529, %rd4528, %rd4527;
	xor.b64  	%rd4530, %rd4529, %rd4508;
	add.s64 	%rd4531, %rd4520, %rd4530;
	add.s64 	%rd4532, %rd4531, %rd4526;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3588,%dummy}, %rd4521;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3589}, %rd4521;
	}
	shf.r.wrap.b32 	%r3590, %r3589, %r3588, 14;
	shf.r.wrap.b32 	%r3591, %r3588, %r3589, 14;
	mov.b64 	%rd4533, {%r3591, %r3590};
	shf.r.wrap.b32 	%r3592, %r3589, %r3588, 18;
	shf.r.wrap.b32 	%r3593, %r3588, %r3589, 18;
	mov.b64 	%rd4534, {%r3593, %r3592};
	xor.b64  	%rd4535, %rd4534, %rd4533;
	shf.l.wrap.b32 	%r3594, %r3588, %r3589, 23;
	shf.l.wrap.b32 	%r3595, %r3589, %r3588, 23;
	mov.b64 	%rd4536, {%r3595, %r3594};
	xor.b64  	%rd4537, %rd4535, %rd4536;
	xor.b64  	%rd4538, %rd4497, %rd4473;
	and.b64  	%rd4539, %rd4521, %rd4538;
	xor.b64  	%rd4540, %rd4539, %rd4473;
	add.s64 	%rd4541, %rd4449, %rd4293;
	add.s64 	%rd4542, %rd4541, %rd12985;
	add.s64 	%rd4543, %rd4542, %rd4540;
	add.s64 	%rd4544, %rd4543, %rd4537;
	add.s64 	%rd4545, %rd4544, %rd4460;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3596,%dummy}, %rd4532;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3597}, %rd4532;
	}
	shf.r.wrap.b32 	%r3598, %r3597, %r3596, 28;
	shf.r.wrap.b32 	%r3599, %r3596, %r3597, 28;
	mov.b64 	%rd4546, {%r3599, %r3598};
	shf.l.wrap.b32 	%r3600, %r3596, %r3597, 30;
	shf.l.wrap.b32 	%r3601, %r3597, %r3596, 30;
	mov.b64 	%rd4547, {%r3601, %r3600};
	xor.b64  	%rd4548, %rd4547, %rd4546;
	shf.l.wrap.b32 	%r3602, %r3596, %r3597, 25;
	shf.l.wrap.b32 	%r3603, %r3597, %r3596, 25;
	mov.b64 	%rd4549, {%r3603, %r3602};
	xor.b64  	%rd4550, %rd4548, %rd4549;
	xor.b64  	%rd4551, %rd4532, %rd4484;
	xor.b64  	%rd4552, %rd4532, %rd4508;
	and.b64  	%rd4553, %rd4552, %rd4551;
	xor.b64  	%rd4554, %rd4553, %rd4532;
	add.s64 	%rd4555, %rd4544, %rd4554;
	add.s64 	%rd4556, %rd4555, %rd4550;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3604,%dummy}, %rd4545;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3605}, %rd4545;
	}
	shf.r.wrap.b32 	%r3606, %r3605, %r3604, 14;
	shf.r.wrap.b32 	%r3607, %r3604, %r3605, 14;
	mov.b64 	%rd4557, {%r3607, %r3606};
	shf.r.wrap.b32 	%r3608, %r3605, %r3604, 18;
	shf.r.wrap.b32 	%r3609, %r3604, %r3605, 18;
	mov.b64 	%rd4558, {%r3609, %r3608};
	xor.b64  	%rd4559, %rd4558, %rd4557;
	shf.l.wrap.b32 	%r3610, %r3604, %r3605, 23;
	shf.l.wrap.b32 	%r3611, %r3605, %r3604, 23;
	mov.b64 	%rd4560, {%r3611, %r3610};
	xor.b64  	%rd4561, %rd4559, %rd4560;
	xor.b64  	%rd4562, %rd4521, %rd4497;
	and.b64  	%rd4563, %rd4545, %rd4562;
	xor.b64  	%rd4564, %rd4563, %rd4497;
	add.s64 	%rd4565, %rd4473, %rd4306;
	add.s64 	%rd4566, %rd4565, %rd12984;
	add.s64 	%rd4567, %rd4566, %rd4564;
	add.s64 	%rd4568, %rd4567, %rd4561;
	add.s64 	%rd4569, %rd4568, %rd4484;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3612,%dummy}, %rd4556;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3613}, %rd4556;
	}
	shf.r.wrap.b32 	%r3614, %r3613, %r3612, 28;
	shf.r.wrap.b32 	%r3615, %r3612, %r3613, 28;
	mov.b64 	%rd4570, {%r3615, %r3614};
	shf.l.wrap.b32 	%r3616, %r3612, %r3613, 30;
	shf.l.wrap.b32 	%r3617, %r3613, %r3612, 30;
	mov.b64 	%rd4571, {%r3617, %r3616};
	xor.b64  	%rd4572, %rd4571, %rd4570;
	shf.l.wrap.b32 	%r3618, %r3612, %r3613, 25;
	shf.l.wrap.b32 	%r3619, %r3613, %r3612, 25;
	mov.b64 	%rd4573, {%r3619, %r3618};
	xor.b64  	%rd4574, %rd4572, %rd4573;
	xor.b64  	%rd4575, %rd4556, %rd4508;
	xor.b64  	%rd4576, %rd4556, %rd4532;
	and.b64  	%rd4577, %rd4576, %rd4575;
	xor.b64  	%rd4578, %rd4577, %rd4556;
	add.s64 	%rd4579, %rd4568, %rd4578;
	add.s64 	%rd4580, %rd4579, %rd4574;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3620,%dummy}, %rd4569;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3621}, %rd4569;
	}
	shf.r.wrap.b32 	%r3622, %r3621, %r3620, 14;
	shf.r.wrap.b32 	%r3623, %r3620, %r3621, 14;
	mov.b64 	%rd4581, {%r3623, %r3622};
	shf.r.wrap.b32 	%r3624, %r3621, %r3620, 18;
	shf.r.wrap.b32 	%r3625, %r3620, %r3621, 18;
	mov.b64 	%rd4582, {%r3625, %r3624};
	xor.b64  	%rd4583, %rd4582, %rd4581;
	shf.l.wrap.b32 	%r3626, %r3620, %r3621, 23;
	shf.l.wrap.b32 	%r3627, %r3621, %r3620, 23;
	mov.b64 	%rd4584, {%r3627, %r3626};
	xor.b64  	%rd4585, %rd4583, %rd4584;
	xor.b64  	%rd4586, %rd4545, %rd4521;
	and.b64  	%rd4587, %rd4569, %rd4586;
	xor.b64  	%rd4588, %rd4587, %rd4521;
	add.s64 	%rd4589, %rd4497, %rd4319;
	add.s64 	%rd4590, %rd4589, %rd12983;
	add.s64 	%rd4591, %rd4590, %rd4588;
	add.s64 	%rd4592, %rd4591, %rd4585;
	add.s64 	%rd4593, %rd4592, %rd4508;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3628,%dummy}, %rd4580;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3629}, %rd4580;
	}
	shf.r.wrap.b32 	%r3630, %r3629, %r3628, 28;
	shf.r.wrap.b32 	%r3631, %r3628, %r3629, 28;
	mov.b64 	%rd4594, {%r3631, %r3630};
	shf.l.wrap.b32 	%r3632, %r3628, %r3629, 30;
	shf.l.wrap.b32 	%r3633, %r3629, %r3628, 30;
	mov.b64 	%rd4595, {%r3633, %r3632};
	xor.b64  	%rd4596, %rd4595, %rd4594;
	shf.l.wrap.b32 	%r3634, %r3628, %r3629, 25;
	shf.l.wrap.b32 	%r3635, %r3629, %r3628, 25;
	mov.b64 	%rd4597, {%r3635, %r3634};
	xor.b64  	%rd4598, %rd4596, %rd4597;
	xor.b64  	%rd4599, %rd4580, %rd4532;
	xor.b64  	%rd4600, %rd4580, %rd4556;
	and.b64  	%rd4601, %rd4600, %rd4599;
	xor.b64  	%rd4602, %rd4601, %rd4580;
	add.s64 	%rd4603, %rd4592, %rd4602;
	add.s64 	%rd4604, %rd4603, %rd4598;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3636,%dummy}, %rd4593;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3637}, %rd4593;
	}
	shf.r.wrap.b32 	%r3638, %r3637, %r3636, 14;
	shf.r.wrap.b32 	%r3639, %r3636, %r3637, 14;
	mov.b64 	%rd4605, {%r3639, %r3638};
	shf.r.wrap.b32 	%r3640, %r3637, %r3636, 18;
	shf.r.wrap.b32 	%r3641, %r3636, %r3637, 18;
	mov.b64 	%rd4606, {%r3641, %r3640};
	xor.b64  	%rd4607, %rd4606, %rd4605;
	shf.l.wrap.b32 	%r3642, %r3636, %r3637, 23;
	shf.l.wrap.b32 	%r3643, %r3637, %r3636, 23;
	mov.b64 	%rd4608, {%r3643, %r3642};
	xor.b64  	%rd4609, %rd4607, %rd4608;
	xor.b64  	%rd4610, %rd4569, %rd4545;
	and.b64  	%rd4611, %rd4593, %rd4610;
	xor.b64  	%rd4612, %rd4611, %rd4545;
	add.s64 	%rd4613, %rd4521, %rd4332;
	add.s64 	%rd4614, %rd4613, %rd12982;
	add.s64 	%rd4615, %rd4614, %rd4612;
	add.s64 	%rd4616, %rd4615, %rd4609;
	add.s64 	%rd4617, %rd4616, %rd4532;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3644,%dummy}, %rd4604;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3645}, %rd4604;
	}
	shf.r.wrap.b32 	%r3646, %r3645, %r3644, 28;
	shf.r.wrap.b32 	%r3647, %r3644, %r3645, 28;
	mov.b64 	%rd4618, {%r3647, %r3646};
	shf.l.wrap.b32 	%r3648, %r3644, %r3645, 30;
	shf.l.wrap.b32 	%r3649, %r3645, %r3644, 30;
	mov.b64 	%rd4619, {%r3649, %r3648};
	xor.b64  	%rd4620, %rd4619, %rd4618;
	shf.l.wrap.b32 	%r3650, %r3644, %r3645, 25;
	shf.l.wrap.b32 	%r3651, %r3645, %r3644, 25;
	mov.b64 	%rd4621, {%r3651, %r3650};
	xor.b64  	%rd4622, %rd4620, %rd4621;
	xor.b64  	%rd4623, %rd4604, %rd4556;
	xor.b64  	%rd4624, %rd4604, %rd4580;
	and.b64  	%rd4625, %rd4624, %rd4623;
	xor.b64  	%rd4626, %rd4625, %rd4604;
	add.s64 	%rd4627, %rd4616, %rd4626;
	add.s64 	%rd4628, %rd4627, %rd4622;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3652,%dummy}, %rd4617;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3653}, %rd4617;
	}
	shf.r.wrap.b32 	%r3654, %r3653, %r3652, 14;
	shf.r.wrap.b32 	%r3655, %r3652, %r3653, 14;
	mov.b64 	%rd4629, {%r3655, %r3654};
	shf.r.wrap.b32 	%r3656, %r3653, %r3652, 18;
	shf.r.wrap.b32 	%r3657, %r3652, %r3653, 18;
	mov.b64 	%rd4630, {%r3657, %r3656};
	xor.b64  	%rd4631, %rd4630, %rd4629;
	shf.l.wrap.b32 	%r3658, %r3652, %r3653, 23;
	shf.l.wrap.b32 	%r3659, %r3653, %r3652, 23;
	mov.b64 	%rd4632, {%r3659, %r3658};
	xor.b64  	%rd4633, %rd4631, %rd4632;
	xor.b64  	%rd4634, %rd4593, %rd4569;
	and.b64  	%rd4635, %rd4617, %rd4634;
	xor.b64  	%rd4636, %rd4635, %rd4569;
	add.s64 	%rd4637, %rd4545, %rd4345;
	add.s64 	%rd4638, %rd4637, %rd12981;
	add.s64 	%rd4639, %rd4638, %rd4636;
	add.s64 	%rd4640, %rd4639, %rd4633;
	add.s64 	%rd4641, %rd4640, %rd4556;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3660,%dummy}, %rd4628;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3661}, %rd4628;
	}
	shf.r.wrap.b32 	%r3662, %r3661, %r3660, 28;
	shf.r.wrap.b32 	%r3663, %r3660, %r3661, 28;
	mov.b64 	%rd4642, {%r3663, %r3662};
	shf.l.wrap.b32 	%r3664, %r3660, %r3661, 30;
	shf.l.wrap.b32 	%r3665, %r3661, %r3660, 30;
	mov.b64 	%rd4643, {%r3665, %r3664};
	xor.b64  	%rd4644, %rd4643, %rd4642;
	shf.l.wrap.b32 	%r3666, %r3660, %r3661, 25;
	shf.l.wrap.b32 	%r3667, %r3661, %r3660, 25;
	mov.b64 	%rd4645, {%r3667, %r3666};
	xor.b64  	%rd4646, %rd4644, %rd4645;
	xor.b64  	%rd4647, %rd4628, %rd4580;
	xor.b64  	%rd4648, %rd4628, %rd4604;
	and.b64  	%rd4649, %rd4648, %rd4647;
	xor.b64  	%rd4650, %rd4649, %rd4628;
	add.s64 	%rd4651, %rd4640, %rd4650;
	add.s64 	%rd4652, %rd4651, %rd4646;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3668,%dummy}, %rd4641;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3669}, %rd4641;
	}
	shf.r.wrap.b32 	%r3670, %r3669, %r3668, 14;
	shf.r.wrap.b32 	%r3671, %r3668, %r3669, 14;
	mov.b64 	%rd4653, {%r3671, %r3670};
	shf.r.wrap.b32 	%r3672, %r3669, %r3668, 18;
	shf.r.wrap.b32 	%r3673, %r3668, %r3669, 18;
	mov.b64 	%rd4654, {%r3673, %r3672};
	xor.b64  	%rd4655, %rd4654, %rd4653;
	shf.l.wrap.b32 	%r3674, %r3668, %r3669, 23;
	shf.l.wrap.b32 	%r3675, %r3669, %r3668, 23;
	mov.b64 	%rd4656, {%r3675, %r3674};
	xor.b64  	%rd4657, %rd4655, %rd4656;
	xor.b64  	%rd4658, %rd4617, %rd4593;
	and.b64  	%rd4659, %rd4641, %rd4658;
	xor.b64  	%rd4660, %rd4659, %rd4593;
	add.s64 	%rd4661, %rd4569, %rd4358;
	add.s64 	%rd4662, %rd4661, %rd12980;
	add.s64 	%rd4663, %rd4662, %rd4660;
	add.s64 	%rd4664, %rd4663, %rd4657;
	add.s64 	%rd4665, %rd4664, %rd4580;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3676,%dummy}, %rd4652;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3677}, %rd4652;
	}
	shf.r.wrap.b32 	%r3678, %r3677, %r3676, 28;
	shf.r.wrap.b32 	%r3679, %r3676, %r3677, 28;
	mov.b64 	%rd4666, {%r3679, %r3678};
	shf.l.wrap.b32 	%r3680, %r3676, %r3677, 30;
	shf.l.wrap.b32 	%r3681, %r3677, %r3676, 30;
	mov.b64 	%rd4667, {%r3681, %r3680};
	xor.b64  	%rd4668, %rd4667, %rd4666;
	shf.l.wrap.b32 	%r3682, %r3676, %r3677, 25;
	shf.l.wrap.b32 	%r3683, %r3677, %r3676, 25;
	mov.b64 	%rd4669, {%r3683, %r3682};
	xor.b64  	%rd4670, %rd4668, %rd4669;
	xor.b64  	%rd4671, %rd4652, %rd4604;
	xor.b64  	%rd4672, %rd4652, %rd4628;
	and.b64  	%rd4673, %rd4672, %rd4671;
	xor.b64  	%rd4674, %rd4673, %rd4652;
	add.s64 	%rd4675, %rd4664, %rd4674;
	add.s64 	%rd4676, %rd4675, %rd4670;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3684,%dummy}, %rd4665;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3685}, %rd4665;
	}
	shf.r.wrap.b32 	%r3686, %r3685, %r3684, 14;
	shf.r.wrap.b32 	%r3687, %r3684, %r3685, 14;
	mov.b64 	%rd4677, {%r3687, %r3686};
	shf.r.wrap.b32 	%r3688, %r3685, %r3684, 18;
	shf.r.wrap.b32 	%r3689, %r3684, %r3685, 18;
	mov.b64 	%rd4678, {%r3689, %r3688};
	xor.b64  	%rd4679, %rd4678, %rd4677;
	shf.l.wrap.b32 	%r3690, %r3684, %r3685, 23;
	shf.l.wrap.b32 	%r3691, %r3685, %r3684, 23;
	mov.b64 	%rd4680, {%r3691, %r3690};
	xor.b64  	%rd4681, %rd4679, %rd4680;
	xor.b64  	%rd4682, %rd4641, %rd4617;
	and.b64  	%rd4683, %rd4665, %rd4682;
	xor.b64  	%rd4684, %rd4683, %rd4617;
	add.s64 	%rd4685, %rd4593, %rd4371;
	add.s64 	%rd4686, %rd4685, %rd12979;
	add.s64 	%rd4687, %rd4686, %rd4684;
	add.s64 	%rd4688, %rd4687, %rd4681;
	add.s64 	%rd4689, %rd4688, %rd4604;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3692,%dummy}, %rd4676;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3693}, %rd4676;
	}
	shf.r.wrap.b32 	%r3694, %r3693, %r3692, 28;
	shf.r.wrap.b32 	%r3695, %r3692, %r3693, 28;
	mov.b64 	%rd4690, {%r3695, %r3694};
	shf.l.wrap.b32 	%r3696, %r3692, %r3693, 30;
	shf.l.wrap.b32 	%r3697, %r3693, %r3692, 30;
	mov.b64 	%rd4691, {%r3697, %r3696};
	xor.b64  	%rd4692, %rd4691, %rd4690;
	shf.l.wrap.b32 	%r3698, %r3692, %r3693, 25;
	shf.l.wrap.b32 	%r3699, %r3693, %r3692, 25;
	mov.b64 	%rd4693, {%r3699, %r3698};
	xor.b64  	%rd4694, %rd4692, %rd4693;
	xor.b64  	%rd4695, %rd4676, %rd4628;
	xor.b64  	%rd4696, %rd4676, %rd4652;
	and.b64  	%rd4697, %rd4696, %rd4695;
	xor.b64  	%rd4698, %rd4697, %rd4676;
	add.s64 	%rd4699, %rd4688, %rd4698;
	add.s64 	%rd4700, %rd4699, %rd4694;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3700,%dummy}, %rd4689;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3701}, %rd4689;
	}
	shf.r.wrap.b32 	%r3702, %r3701, %r3700, 14;
	shf.r.wrap.b32 	%r3703, %r3700, %r3701, 14;
	mov.b64 	%rd4701, {%r3703, %r3702};
	shf.r.wrap.b32 	%r3704, %r3701, %r3700, 18;
	shf.r.wrap.b32 	%r3705, %r3700, %r3701, 18;
	mov.b64 	%rd4702, {%r3705, %r3704};
	xor.b64  	%rd4703, %rd4702, %rd4701;
	shf.l.wrap.b32 	%r3706, %r3700, %r3701, 23;
	shf.l.wrap.b32 	%r3707, %r3701, %r3700, 23;
	mov.b64 	%rd4704, {%r3707, %r3706};
	xor.b64  	%rd4705, %rd4703, %rd4704;
	xor.b64  	%rd4706, %rd4665, %rd4641;
	and.b64  	%rd4707, %rd4689, %rd4706;
	xor.b64  	%rd4708, %rd4707, %rd4641;
	add.s64 	%rd4709, %rd4617, %rd4384;
	add.s64 	%rd4710, %rd4709, %rd12978;
	add.s64 	%rd4711, %rd4710, %rd4708;
	add.s64 	%rd4712, %rd4711, %rd4705;
	add.s64 	%rd4713, %rd4712, %rd4628;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3708,%dummy}, %rd4700;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3709}, %rd4700;
	}
	shf.r.wrap.b32 	%r3710, %r3709, %r3708, 28;
	shf.r.wrap.b32 	%r3711, %r3708, %r3709, 28;
	mov.b64 	%rd4714, {%r3711, %r3710};
	shf.l.wrap.b32 	%r3712, %r3708, %r3709, 30;
	shf.l.wrap.b32 	%r3713, %r3709, %r3708, 30;
	mov.b64 	%rd4715, {%r3713, %r3712};
	xor.b64  	%rd4716, %rd4715, %rd4714;
	shf.l.wrap.b32 	%r3714, %r3708, %r3709, 25;
	shf.l.wrap.b32 	%r3715, %r3709, %r3708, 25;
	mov.b64 	%rd4717, {%r3715, %r3714};
	xor.b64  	%rd4718, %rd4716, %rd4717;
	xor.b64  	%rd4719, %rd4700, %rd4652;
	xor.b64  	%rd4720, %rd4700, %rd4676;
	and.b64  	%rd4721, %rd4720, %rd4719;
	xor.b64  	%rd4722, %rd4721, %rd4700;
	add.s64 	%rd4723, %rd4712, %rd4722;
	add.s64 	%rd4724, %rd4723, %rd4718;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3716,%dummy}, %rd4713;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3717}, %rd4713;
	}
	shf.r.wrap.b32 	%r3718, %r3717, %r3716, 14;
	shf.r.wrap.b32 	%r3719, %r3716, %r3717, 14;
	mov.b64 	%rd4725, {%r3719, %r3718};
	shf.r.wrap.b32 	%r3720, %r3717, %r3716, 18;
	shf.r.wrap.b32 	%r3721, %r3716, %r3717, 18;
	mov.b64 	%rd4726, {%r3721, %r3720};
	xor.b64  	%rd4727, %rd4726, %rd4725;
	shf.l.wrap.b32 	%r3722, %r3716, %r3717, 23;
	shf.l.wrap.b32 	%r3723, %r3717, %r3716, 23;
	mov.b64 	%rd4728, {%r3723, %r3722};
	xor.b64  	%rd4729, %rd4727, %rd4728;
	xor.b64  	%rd4730, %rd4689, %rd4665;
	and.b64  	%rd4731, %rd4713, %rd4730;
	xor.b64  	%rd4732, %rd4731, %rd4665;
	add.s64 	%rd4733, %rd4641, %rd4397;
	add.s64 	%rd4734, %rd4733, %rd12977;
	add.s64 	%rd4735, %rd4734, %rd4732;
	add.s64 	%rd4736, %rd4735, %rd4729;
	add.s64 	%rd4737, %rd4736, %rd4652;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3724,%dummy}, %rd4724;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3725}, %rd4724;
	}
	shf.r.wrap.b32 	%r3726, %r3725, %r3724, 28;
	shf.r.wrap.b32 	%r3727, %r3724, %r3725, 28;
	mov.b64 	%rd4738, {%r3727, %r3726};
	shf.l.wrap.b32 	%r3728, %r3724, %r3725, 30;
	shf.l.wrap.b32 	%r3729, %r3725, %r3724, 30;
	mov.b64 	%rd4739, {%r3729, %r3728};
	xor.b64  	%rd4740, %rd4739, %rd4738;
	shf.l.wrap.b32 	%r3730, %r3724, %r3725, 25;
	shf.l.wrap.b32 	%r3731, %r3725, %r3724, 25;
	mov.b64 	%rd4741, {%r3731, %r3730};
	xor.b64  	%rd4742, %rd4740, %rd4741;
	xor.b64  	%rd4743, %rd4724, %rd4676;
	xor.b64  	%rd4744, %rd4724, %rd4700;
	and.b64  	%rd4745, %rd4744, %rd4743;
	xor.b64  	%rd4746, %rd4745, %rd4724;
	add.s64 	%rd4747, %rd4736, %rd4746;
	add.s64 	%rd4748, %rd4747, %rd4742;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3732,%dummy}, %rd4737;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3733}, %rd4737;
	}
	shf.r.wrap.b32 	%r3734, %r3733, %r3732, 14;
	shf.r.wrap.b32 	%r3735, %r3732, %r3733, 14;
	mov.b64 	%rd4749, {%r3735, %r3734};
	shf.r.wrap.b32 	%r3736, %r3733, %r3732, 18;
	shf.r.wrap.b32 	%r3737, %r3732, %r3733, 18;
	mov.b64 	%rd4750, {%r3737, %r3736};
	xor.b64  	%rd4751, %rd4750, %rd4749;
	shf.l.wrap.b32 	%r3738, %r3732, %r3733, 23;
	shf.l.wrap.b32 	%r3739, %r3733, %r3732, 23;
	mov.b64 	%rd4752, {%r3739, %r3738};
	xor.b64  	%rd4753, %rd4751, %rd4752;
	xor.b64  	%rd4754, %rd4713, %rd4689;
	and.b64  	%rd4755, %rd4737, %rd4754;
	xor.b64  	%rd4756, %rd4755, %rd4689;
	add.s64 	%rd4757, %rd4665, %rd4410;
	add.s64 	%rd4758, %rd4757, %rd12976;
	add.s64 	%rd4759, %rd4758, %rd4756;
	add.s64 	%rd4760, %rd4759, %rd4753;
	add.s64 	%rd4761, %rd4760, %rd4676;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3740,%dummy}, %rd4748;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3741}, %rd4748;
	}
	shf.r.wrap.b32 	%r3742, %r3741, %r3740, 28;
	shf.r.wrap.b32 	%r3743, %r3740, %r3741, 28;
	mov.b64 	%rd4762, {%r3743, %r3742};
	shf.l.wrap.b32 	%r3744, %r3740, %r3741, 30;
	shf.l.wrap.b32 	%r3745, %r3741, %r3740, 30;
	mov.b64 	%rd4763, {%r3745, %r3744};
	xor.b64  	%rd4764, %rd4763, %rd4762;
	shf.l.wrap.b32 	%r3746, %r3740, %r3741, 25;
	shf.l.wrap.b32 	%r3747, %r3741, %r3740, 25;
	mov.b64 	%rd4765, {%r3747, %r3746};
	xor.b64  	%rd4766, %rd4764, %rd4765;
	xor.b64  	%rd4767, %rd4748, %rd4700;
	xor.b64  	%rd4768, %rd4748, %rd4724;
	and.b64  	%rd4769, %rd4768, %rd4767;
	xor.b64  	%rd4770, %rd4769, %rd4748;
	add.s64 	%rd4771, %rd4760, %rd4770;
	add.s64 	%rd4772, %rd4771, %rd4766;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3748,%dummy}, %rd4761;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3749}, %rd4761;
	}
	shf.r.wrap.b32 	%r3750, %r3749, %r3748, 14;
	shf.r.wrap.b32 	%r3751, %r3748, %r3749, 14;
	mov.b64 	%rd4773, {%r3751, %r3750};
	shf.r.wrap.b32 	%r3752, %r3749, %r3748, 18;
	shf.r.wrap.b32 	%r3753, %r3748, %r3749, 18;
	mov.b64 	%rd4774, {%r3753, %r3752};
	xor.b64  	%rd4775, %rd4774, %rd4773;
	shf.l.wrap.b32 	%r3754, %r3748, %r3749, 23;
	shf.l.wrap.b32 	%r3755, %r3749, %r3748, 23;
	mov.b64 	%rd4776, {%r3755, %r3754};
	xor.b64  	%rd4777, %rd4775, %rd4776;
	xor.b64  	%rd4778, %rd4737, %rd4713;
	and.b64  	%rd4779, %rd4761, %rd4778;
	xor.b64  	%rd4780, %rd4779, %rd4713;
	add.s64 	%rd4781, %rd4689, %rd4423;
	add.s64 	%rd4782, %rd4781, %rd12975;
	add.s64 	%rd4783, %rd4782, %rd4780;
	add.s64 	%rd4784, %rd4783, %rd4777;
	add.s64 	%rd4785, %rd4784, %rd4700;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3756,%dummy}, %rd4772;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3757}, %rd4772;
	}
	shf.r.wrap.b32 	%r3758, %r3757, %r3756, 28;
	shf.r.wrap.b32 	%r3759, %r3756, %r3757, 28;
	mov.b64 	%rd4786, {%r3759, %r3758};
	shf.l.wrap.b32 	%r3760, %r3756, %r3757, 30;
	shf.l.wrap.b32 	%r3761, %r3757, %r3756, 30;
	mov.b64 	%rd4787, {%r3761, %r3760};
	xor.b64  	%rd4788, %rd4787, %rd4786;
	shf.l.wrap.b32 	%r3762, %r3756, %r3757, 25;
	shf.l.wrap.b32 	%r3763, %r3757, %r3756, 25;
	mov.b64 	%rd4789, {%r3763, %r3762};
	xor.b64  	%rd4790, %rd4788, %rd4789;
	xor.b64  	%rd4791, %rd4772, %rd4724;
	xor.b64  	%rd4792, %rd4772, %rd4748;
	and.b64  	%rd4793, %rd4792, %rd4791;
	xor.b64  	%rd4794, %rd4793, %rd4772;
	add.s64 	%rd4795, %rd4784, %rd4794;
	add.s64 	%rd4796, %rd4795, %rd4790;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3764,%dummy}, %rd4785;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3765}, %rd4785;
	}
	shf.r.wrap.b32 	%r3766, %r3765, %r3764, 14;
	shf.r.wrap.b32 	%r3767, %r3764, %r3765, 14;
	mov.b64 	%rd4797, {%r3767, %r3766};
	shf.r.wrap.b32 	%r3768, %r3765, %r3764, 18;
	shf.r.wrap.b32 	%r3769, %r3764, %r3765, 18;
	mov.b64 	%rd4798, {%r3769, %r3768};
	xor.b64  	%rd4799, %rd4798, %rd4797;
	shf.l.wrap.b32 	%r3770, %r3764, %r3765, 23;
	shf.l.wrap.b32 	%r3771, %r3765, %r3764, 23;
	mov.b64 	%rd4800, {%r3771, %r3770};
	xor.b64  	%rd4801, %rd4799, %rd4800;
	xor.b64  	%rd4802, %rd4761, %rd4737;
	and.b64  	%rd4803, %rd4785, %rd4802;
	xor.b64  	%rd4804, %rd4803, %rd4737;
	add.s64 	%rd4805, %rd4713, %rd4436;
	add.s64 	%rd4806, %rd4805, %rd12974;
	add.s64 	%rd4807, %rd4806, %rd4804;
	add.s64 	%rd4808, %rd4807, %rd4801;
	add.s64 	%rd4809, %rd4808, %rd4724;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3772,%dummy}, %rd4796;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3773}, %rd4796;
	}
	shf.r.wrap.b32 	%r3774, %r3773, %r3772, 28;
	shf.r.wrap.b32 	%r3775, %r3772, %r3773, 28;
	mov.b64 	%rd4810, {%r3775, %r3774};
	shf.l.wrap.b32 	%r3776, %r3772, %r3773, 30;
	shf.l.wrap.b32 	%r3777, %r3773, %r3772, 30;
	mov.b64 	%rd4811, {%r3777, %r3776};
	xor.b64  	%rd4812, %rd4811, %rd4810;
	shf.l.wrap.b32 	%r3778, %r3772, %r3773, 25;
	shf.l.wrap.b32 	%r3779, %r3773, %r3772, 25;
	mov.b64 	%rd4813, {%r3779, %r3778};
	xor.b64  	%rd4814, %rd4812, %rd4813;
	xor.b64  	%rd4815, %rd4796, %rd4748;
	xor.b64  	%rd4816, %rd4796, %rd4772;
	and.b64  	%rd4817, %rd4816, %rd4815;
	xor.b64  	%rd4818, %rd4817, %rd4796;
	add.s64 	%rd4819, %rd4808, %rd4818;
	add.s64 	%rd4820, %rd4819, %rd4814;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3780,%dummy}, %rd4423;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3781}, %rd4423;
	}
	shf.r.wrap.b32 	%r3782, %r3781, %r3780, 19;
	shf.r.wrap.b32 	%r3783, %r3780, %r3781, 19;
	mov.b64 	%rd4821, {%r3783, %r3782};
	shf.l.wrap.b32 	%r3784, %r3780, %r3781, 3;
	shf.l.wrap.b32 	%r3785, %r3781, %r3780, 3;
	mov.b64 	%rd4822, {%r3785, %r3784};
	shr.u64 	%rd4823, %rd4423, 6;
	xor.b64  	%rd4824, %rd4821, %rd4823;
	xor.b64  	%rd4825, %rd4824, %rd4822;
	shf.r.wrap.b32 	%r3786, %r3395, %r3394, 1;
	shf.r.wrap.b32 	%r3787, %r3394, %r3395, 1;
	mov.b64 	%rd4826, {%r3787, %r3786};
	shf.r.wrap.b32 	%r3788, %r3395, %r3394, 8;
	shf.r.wrap.b32 	%r3789, %r3394, %r3395, 8;
	mov.b64 	%rd4827, {%r3789, %r3788};
	shr.u64 	%rd4828, %rd4254, 7;
	xor.b64  	%rd4829, %rd4826, %rd4828;
	xor.b64  	%rd4830, %rd4829, %rd4827;
	add.s64 	%rd4831, %rd4358, %rd4241;
	add.s64 	%rd4832, %rd4831, %rd4825;
	add.s64 	%rd4833, %rd4832, %rd4830;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3790,%dummy}, %rd4436;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3791}, %rd4436;
	}
	shf.r.wrap.b32 	%r3792, %r3791, %r3790, 19;
	shf.r.wrap.b32 	%r3793, %r3790, %r3791, 19;
	mov.b64 	%rd4834, {%r3793, %r3792};
	shf.l.wrap.b32 	%r3794, %r3790, %r3791, 3;
	shf.l.wrap.b32 	%r3795, %r3791, %r3790, 3;
	mov.b64 	%rd4835, {%r3795, %r3794};
	shr.u64 	%rd4836, %rd4436, 6;
	xor.b64  	%rd4837, %rd4834, %rd4836;
	xor.b64  	%rd4838, %rd4837, %rd4835;
	shf.r.wrap.b32 	%r3796, %r3405, %r3404, 1;
	shf.r.wrap.b32 	%r3797, %r3404, %r3405, 1;
	mov.b64 	%rd4839, {%r3797, %r3796};
	shf.r.wrap.b32 	%r3798, %r3405, %r3404, 8;
	shf.r.wrap.b32 	%r3799, %r3404, %r3405, 8;
	mov.b64 	%rd4840, {%r3799, %r3798};
	shr.u64 	%rd4841, %rd4267, 7;
	xor.b64  	%rd4842, %rd4839, %rd4841;
	xor.b64  	%rd4843, %rd4842, %rd4840;
	add.s64 	%rd4844, %rd4371, %rd4254;
	add.s64 	%rd4845, %rd4844, %rd4838;
	add.s64 	%rd4846, %rd4845, %rd4843;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3800,%dummy}, %rd4833;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3801}, %rd4833;
	}
	shf.r.wrap.b32 	%r3802, %r3801, %r3800, 19;
	shf.r.wrap.b32 	%r3803, %r3800, %r3801, 19;
	mov.b64 	%rd4847, {%r3803, %r3802};
	shf.l.wrap.b32 	%r3804, %r3800, %r3801, 3;
	shf.l.wrap.b32 	%r3805, %r3801, %r3800, 3;
	mov.b64 	%rd4848, {%r3805, %r3804};
	shr.u64 	%rd4849, %rd4833, 6;
	xor.b64  	%rd4850, %rd4847, %rd4849;
	xor.b64  	%rd4851, %rd4850, %rd4848;
	shf.r.wrap.b32 	%r3806, %r3415, %r3414, 1;
	shf.r.wrap.b32 	%r3807, %r3414, %r3415, 1;
	mov.b64 	%rd4852, {%r3807, %r3806};
	shf.r.wrap.b32 	%r3808, %r3415, %r3414, 8;
	shf.r.wrap.b32 	%r3809, %r3414, %r3415, 8;
	mov.b64 	%rd4853, {%r3809, %r3808};
	shr.u64 	%rd4854, %rd4280, 7;
	xor.b64  	%rd4855, %rd4852, %rd4854;
	xor.b64  	%rd4856, %rd4855, %rd4853;
	add.s64 	%rd4857, %rd4384, %rd4267;
	add.s64 	%rd4858, %rd4857, %rd4851;
	add.s64 	%rd4859, %rd4858, %rd4856;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3810,%dummy}, %rd4846;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3811}, %rd4846;
	}
	shf.r.wrap.b32 	%r3812, %r3811, %r3810, 19;
	shf.r.wrap.b32 	%r3813, %r3810, %r3811, 19;
	mov.b64 	%rd4860, {%r3813, %r3812};
	shf.l.wrap.b32 	%r3814, %r3810, %r3811, 3;
	shf.l.wrap.b32 	%r3815, %r3811, %r3810, 3;
	mov.b64 	%rd4861, {%r3815, %r3814};
	shr.u64 	%rd4862, %rd4846, 6;
	xor.b64  	%rd4863, %rd4860, %rd4862;
	xor.b64  	%rd4864, %rd4863, %rd4861;
	shf.r.wrap.b32 	%r3816, %r3425, %r3424, 1;
	shf.r.wrap.b32 	%r3817, %r3424, %r3425, 1;
	mov.b64 	%rd4865, {%r3817, %r3816};
	shf.r.wrap.b32 	%r3818, %r3425, %r3424, 8;
	shf.r.wrap.b32 	%r3819, %r3424, %r3425, 8;
	mov.b64 	%rd4866, {%r3819, %r3818};
	shr.u64 	%rd4867, %rd4293, 7;
	xor.b64  	%rd4868, %rd4865, %rd4867;
	xor.b64  	%rd4869, %rd4868, %rd4866;
	add.s64 	%rd4870, %rd4397, %rd4280;
	add.s64 	%rd4871, %rd4870, %rd4864;
	add.s64 	%rd4872, %rd4871, %rd4869;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3820,%dummy}, %rd4859;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3821}, %rd4859;
	}
	shf.r.wrap.b32 	%r3822, %r3821, %r3820, 19;
	shf.r.wrap.b32 	%r3823, %r3820, %r3821, 19;
	mov.b64 	%rd4873, {%r3823, %r3822};
	shf.l.wrap.b32 	%r3824, %r3820, %r3821, 3;
	shf.l.wrap.b32 	%r3825, %r3821, %r3820, 3;
	mov.b64 	%rd4874, {%r3825, %r3824};
	shr.u64 	%rd4875, %rd4859, 6;
	xor.b64  	%rd4876, %rd4873, %rd4875;
	xor.b64  	%rd4877, %rd4876, %rd4874;
	shf.r.wrap.b32 	%r3826, %r3435, %r3434, 1;
	shf.r.wrap.b32 	%r3827, %r3434, %r3435, 1;
	mov.b64 	%rd4878, {%r3827, %r3826};
	shf.r.wrap.b32 	%r3828, %r3435, %r3434, 8;
	shf.r.wrap.b32 	%r3829, %r3434, %r3435, 8;
	mov.b64 	%rd4879, {%r3829, %r3828};
	shr.u64 	%rd4880, %rd4306, 7;
	xor.b64  	%rd4881, %rd4878, %rd4880;
	xor.b64  	%rd4882, %rd4881, %rd4879;
	add.s64 	%rd4883, %rd4410, %rd4293;
	add.s64 	%rd4884, %rd4883, %rd4877;
	add.s64 	%rd4885, %rd4884, %rd4882;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3830,%dummy}, %rd4872;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3831}, %rd4872;
	}
	shf.r.wrap.b32 	%r3832, %r3831, %r3830, 19;
	shf.r.wrap.b32 	%r3833, %r3830, %r3831, 19;
	mov.b64 	%rd4886, {%r3833, %r3832};
	shf.l.wrap.b32 	%r3834, %r3830, %r3831, 3;
	shf.l.wrap.b32 	%r3835, %r3831, %r3830, 3;
	mov.b64 	%rd4887, {%r3835, %r3834};
	shr.u64 	%rd4888, %rd4872, 6;
	xor.b64  	%rd4889, %rd4886, %rd4888;
	xor.b64  	%rd4890, %rd4889, %rd4887;
	shf.r.wrap.b32 	%r3836, %r3445, %r3444, 1;
	shf.r.wrap.b32 	%r3837, %r3444, %r3445, 1;
	mov.b64 	%rd4891, {%r3837, %r3836};
	shf.r.wrap.b32 	%r3838, %r3445, %r3444, 8;
	shf.r.wrap.b32 	%r3839, %r3444, %r3445, 8;
	mov.b64 	%rd4892, {%r3839, %r3838};
	shr.u64 	%rd4893, %rd4319, 7;
	xor.b64  	%rd4894, %rd4891, %rd4893;
	xor.b64  	%rd4895, %rd4894, %rd4892;
	add.s64 	%rd4896, %rd4423, %rd4306;
	add.s64 	%rd4897, %rd4896, %rd4890;
	add.s64 	%rd4898, %rd4897, %rd4895;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3840,%dummy}, %rd4885;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3841}, %rd4885;
	}
	shf.r.wrap.b32 	%r3842, %r3841, %r3840, 19;
	shf.r.wrap.b32 	%r3843, %r3840, %r3841, 19;
	mov.b64 	%rd4899, {%r3843, %r3842};
	shf.l.wrap.b32 	%r3844, %r3840, %r3841, 3;
	shf.l.wrap.b32 	%r3845, %r3841, %r3840, 3;
	mov.b64 	%rd4900, {%r3845, %r3844};
	shr.u64 	%rd4901, %rd4885, 6;
	xor.b64  	%rd4902, %rd4899, %rd4901;
	xor.b64  	%rd4903, %rd4902, %rd4900;
	shf.r.wrap.b32 	%r3846, %r3455, %r3454, 1;
	shf.r.wrap.b32 	%r3847, %r3454, %r3455, 1;
	mov.b64 	%rd4904, {%r3847, %r3846};
	shf.r.wrap.b32 	%r3848, %r3455, %r3454, 8;
	shf.r.wrap.b32 	%r3849, %r3454, %r3455, 8;
	mov.b64 	%rd4905, {%r3849, %r3848};
	shr.u64 	%rd4906, %rd4332, 7;
	xor.b64  	%rd4907, %rd4904, %rd4906;
	xor.b64  	%rd4908, %rd4907, %rd4905;
	add.s64 	%rd4909, %rd4436, %rd4319;
	add.s64 	%rd4910, %rd4909, %rd4903;
	add.s64 	%rd4911, %rd4910, %rd4908;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3850,%dummy}, %rd4898;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3851}, %rd4898;
	}
	shf.r.wrap.b32 	%r3852, %r3851, %r3850, 19;
	shf.r.wrap.b32 	%r3853, %r3850, %r3851, 19;
	mov.b64 	%rd4912, {%r3853, %r3852};
	shf.l.wrap.b32 	%r3854, %r3850, %r3851, 3;
	shf.l.wrap.b32 	%r3855, %r3851, %r3850, 3;
	mov.b64 	%rd4913, {%r3855, %r3854};
	shr.u64 	%rd4914, %rd4898, 6;
	xor.b64  	%rd4915, %rd4912, %rd4914;
	xor.b64  	%rd4916, %rd4915, %rd4913;
	shf.r.wrap.b32 	%r3856, %r3465, %r3464, 1;
	shf.r.wrap.b32 	%r3857, %r3464, %r3465, 1;
	mov.b64 	%rd4917, {%r3857, %r3856};
	shf.r.wrap.b32 	%r3858, %r3465, %r3464, 8;
	shf.r.wrap.b32 	%r3859, %r3464, %r3465, 8;
	mov.b64 	%rd4918, {%r3859, %r3858};
	shr.u64 	%rd4919, %rd4345, 7;
	xor.b64  	%rd4920, %rd4917, %rd4919;
	xor.b64  	%rd4921, %rd4920, %rd4918;
	add.s64 	%rd4922, %rd4833, %rd4332;
	add.s64 	%rd4923, %rd4922, %rd4916;
	add.s64 	%rd4924, %rd4923, %rd4921;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3860,%dummy}, %rd4911;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3861}, %rd4911;
	}
	shf.r.wrap.b32 	%r3862, %r3861, %r3860, 19;
	shf.r.wrap.b32 	%r3863, %r3860, %r3861, 19;
	mov.b64 	%rd4925, {%r3863, %r3862};
	shf.l.wrap.b32 	%r3864, %r3860, %r3861, 3;
	shf.l.wrap.b32 	%r3865, %r3861, %r3860, 3;
	mov.b64 	%rd4926, {%r3865, %r3864};
	shr.u64 	%rd4927, %rd4911, 6;
	xor.b64  	%rd4928, %rd4925, %rd4927;
	xor.b64  	%rd4929, %rd4928, %rd4926;
	shf.r.wrap.b32 	%r3866, %r3475, %r3474, 1;
	shf.r.wrap.b32 	%r3867, %r3474, %r3475, 1;
	mov.b64 	%rd4930, {%r3867, %r3866};
	shf.r.wrap.b32 	%r3868, %r3475, %r3474, 8;
	shf.r.wrap.b32 	%r3869, %r3474, %r3475, 8;
	mov.b64 	%rd4931, {%r3869, %r3868};
	shr.u64 	%rd4932, %rd4358, 7;
	xor.b64  	%rd4933, %rd4930, %rd4932;
	xor.b64  	%rd4934, %rd4933, %rd4931;
	add.s64 	%rd4935, %rd4846, %rd4345;
	add.s64 	%rd4936, %rd4935, %rd4929;
	add.s64 	%rd4937, %rd4936, %rd4934;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3870,%dummy}, %rd4924;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3871}, %rd4924;
	}
	shf.r.wrap.b32 	%r3872, %r3871, %r3870, 19;
	shf.r.wrap.b32 	%r3873, %r3870, %r3871, 19;
	mov.b64 	%rd4938, {%r3873, %r3872};
	shf.l.wrap.b32 	%r3874, %r3870, %r3871, 3;
	shf.l.wrap.b32 	%r3875, %r3871, %r3870, 3;
	mov.b64 	%rd4939, {%r3875, %r3874};
	shr.u64 	%rd4940, %rd4924, 6;
	xor.b64  	%rd4941, %rd4938, %rd4940;
	xor.b64  	%rd4942, %rd4941, %rd4939;
	shf.r.wrap.b32 	%r3876, %r3485, %r3484, 1;
	shf.r.wrap.b32 	%r3877, %r3484, %r3485, 1;
	mov.b64 	%rd4943, {%r3877, %r3876};
	shf.r.wrap.b32 	%r3878, %r3485, %r3484, 8;
	shf.r.wrap.b32 	%r3879, %r3484, %r3485, 8;
	mov.b64 	%rd4944, {%r3879, %r3878};
	shr.u64 	%rd4945, %rd4371, 7;
	xor.b64  	%rd4946, %rd4943, %rd4945;
	xor.b64  	%rd4947, %rd4946, %rd4944;
	add.s64 	%rd4948, %rd4859, %rd4358;
	add.s64 	%rd4949, %rd4948, %rd4942;
	add.s64 	%rd4950, %rd4949, %rd4947;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3880,%dummy}, %rd4937;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3881}, %rd4937;
	}
	shf.r.wrap.b32 	%r3882, %r3881, %r3880, 19;
	shf.r.wrap.b32 	%r3883, %r3880, %r3881, 19;
	mov.b64 	%rd4951, {%r3883, %r3882};
	shf.l.wrap.b32 	%r3884, %r3880, %r3881, 3;
	shf.l.wrap.b32 	%r3885, %r3881, %r3880, 3;
	mov.b64 	%rd4952, {%r3885, %r3884};
	shr.u64 	%rd4953, %rd4937, 6;
	xor.b64  	%rd4954, %rd4951, %rd4953;
	xor.b64  	%rd4955, %rd4954, %rd4952;
	shf.r.wrap.b32 	%r3886, %r3495, %r3494, 1;
	shf.r.wrap.b32 	%r3887, %r3494, %r3495, 1;
	mov.b64 	%rd4956, {%r3887, %r3886};
	shf.r.wrap.b32 	%r3888, %r3495, %r3494, 8;
	shf.r.wrap.b32 	%r3889, %r3494, %r3495, 8;
	mov.b64 	%rd4957, {%r3889, %r3888};
	shr.u64 	%rd4958, %rd4384, 7;
	xor.b64  	%rd4959, %rd4956, %rd4958;
	xor.b64  	%rd4960, %rd4959, %rd4957;
	add.s64 	%rd4961, %rd4872, %rd4371;
	add.s64 	%rd4962, %rd4961, %rd4955;
	add.s64 	%rd4963, %rd4962, %rd4960;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3890,%dummy}, %rd4950;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3891}, %rd4950;
	}
	shf.r.wrap.b32 	%r3892, %r3891, %r3890, 19;
	shf.r.wrap.b32 	%r3893, %r3890, %r3891, 19;
	mov.b64 	%rd4964, {%r3893, %r3892};
	shf.l.wrap.b32 	%r3894, %r3890, %r3891, 3;
	shf.l.wrap.b32 	%r3895, %r3891, %r3890, 3;
	mov.b64 	%rd4965, {%r3895, %r3894};
	shr.u64 	%rd4966, %rd4950, 6;
	xor.b64  	%rd4967, %rd4964, %rd4966;
	xor.b64  	%rd4968, %rd4967, %rd4965;
	shf.r.wrap.b32 	%r3896, %r3505, %r3504, 1;
	shf.r.wrap.b32 	%r3897, %r3504, %r3505, 1;
	mov.b64 	%rd4969, {%r3897, %r3896};
	shf.r.wrap.b32 	%r3898, %r3505, %r3504, 8;
	shf.r.wrap.b32 	%r3899, %r3504, %r3505, 8;
	mov.b64 	%rd4970, {%r3899, %r3898};
	shr.u64 	%rd4971, %rd4397, 7;
	xor.b64  	%rd4972, %rd4969, %rd4971;
	xor.b64  	%rd4973, %rd4972, %rd4970;
	add.s64 	%rd4974, %rd4885, %rd4384;
	add.s64 	%rd4975, %rd4974, %rd4968;
	add.s64 	%rd4976, %rd4975, %rd4973;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3900,%dummy}, %rd4963;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3901}, %rd4963;
	}
	shf.r.wrap.b32 	%r3902, %r3901, %r3900, 19;
	shf.r.wrap.b32 	%r3903, %r3900, %r3901, 19;
	mov.b64 	%rd4977, {%r3903, %r3902};
	shf.l.wrap.b32 	%r3904, %r3900, %r3901, 3;
	shf.l.wrap.b32 	%r3905, %r3901, %r3900, 3;
	mov.b64 	%rd4978, {%r3905, %r3904};
	shr.u64 	%rd4979, %rd4963, 6;
	xor.b64  	%rd4980, %rd4977, %rd4979;
	xor.b64  	%rd4981, %rd4980, %rd4978;
	shf.r.wrap.b32 	%r3906, %r3515, %r3514, 1;
	shf.r.wrap.b32 	%r3907, %r3514, %r3515, 1;
	mov.b64 	%rd4982, {%r3907, %r3906};
	shf.r.wrap.b32 	%r3908, %r3515, %r3514, 8;
	shf.r.wrap.b32 	%r3909, %r3514, %r3515, 8;
	mov.b64 	%rd4983, {%r3909, %r3908};
	shr.u64 	%rd4984, %rd4410, 7;
	xor.b64  	%rd4985, %rd4982, %rd4984;
	xor.b64  	%rd4986, %rd4985, %rd4983;
	add.s64 	%rd4987, %rd4898, %rd4397;
	add.s64 	%rd4988, %rd4987, %rd4981;
	add.s64 	%rd4989, %rd4988, %rd4986;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3910,%dummy}, %rd4976;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3911}, %rd4976;
	}
	shf.r.wrap.b32 	%r3912, %r3911, %r3910, 19;
	shf.r.wrap.b32 	%r3913, %r3910, %r3911, 19;
	mov.b64 	%rd4990, {%r3913, %r3912};
	shf.l.wrap.b32 	%r3914, %r3910, %r3911, 3;
	shf.l.wrap.b32 	%r3915, %r3911, %r3910, 3;
	mov.b64 	%rd4991, {%r3915, %r3914};
	shr.u64 	%rd4992, %rd4976, 6;
	xor.b64  	%rd4993, %rd4990, %rd4992;
	xor.b64  	%rd4994, %rd4993, %rd4991;
	shf.r.wrap.b32 	%r3916, %r3781, %r3780, 1;
	shf.r.wrap.b32 	%r3917, %r3780, %r3781, 1;
	mov.b64 	%rd4995, {%r3917, %r3916};
	shf.r.wrap.b32 	%r3918, %r3781, %r3780, 8;
	shf.r.wrap.b32 	%r3919, %r3780, %r3781, 8;
	mov.b64 	%rd4996, {%r3919, %r3918};
	shr.u64 	%rd4997, %rd4423, 7;
	xor.b64  	%rd4998, %rd4995, %rd4997;
	xor.b64  	%rd4999, %rd4998, %rd4996;
	add.s64 	%rd5000, %rd4911, %rd4410;
	add.s64 	%rd5001, %rd5000, %rd4994;
	add.s64 	%rd5002, %rd5001, %rd4999;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3920,%dummy}, %rd4989;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3921}, %rd4989;
	}
	shf.r.wrap.b32 	%r3922, %r3921, %r3920, 19;
	shf.r.wrap.b32 	%r3923, %r3920, %r3921, 19;
	mov.b64 	%rd5003, {%r3923, %r3922};
	shf.l.wrap.b32 	%r3924, %r3920, %r3921, 3;
	shf.l.wrap.b32 	%r3925, %r3921, %r3920, 3;
	mov.b64 	%rd5004, {%r3925, %r3924};
	shr.u64 	%rd5005, %rd4989, 6;
	xor.b64  	%rd5006, %rd5003, %rd5005;
	xor.b64  	%rd5007, %rd5006, %rd5004;
	shf.r.wrap.b32 	%r3926, %r3791, %r3790, 1;
	shf.r.wrap.b32 	%r3927, %r3790, %r3791, 1;
	mov.b64 	%rd5008, {%r3927, %r3926};
	shf.r.wrap.b32 	%r3928, %r3791, %r3790, 8;
	shf.r.wrap.b32 	%r3929, %r3790, %r3791, 8;
	mov.b64 	%rd5009, {%r3929, %r3928};
	shr.u64 	%rd5010, %rd4436, 7;
	xor.b64  	%rd5011, %rd5008, %rd5010;
	xor.b64  	%rd5012, %rd5011, %rd5009;
	add.s64 	%rd5013, %rd4924, %rd4423;
	add.s64 	%rd5014, %rd5013, %rd5007;
	add.s64 	%rd5015, %rd5014, %rd5012;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3930,%dummy}, %rd5002;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3931}, %rd5002;
	}
	shf.r.wrap.b32 	%r3932, %r3931, %r3930, 19;
	shf.r.wrap.b32 	%r3933, %r3930, %r3931, 19;
	mov.b64 	%rd5016, {%r3933, %r3932};
	shf.l.wrap.b32 	%r3934, %r3930, %r3931, 3;
	shf.l.wrap.b32 	%r3935, %r3931, %r3930, 3;
	mov.b64 	%rd5017, {%r3935, %r3934};
	shr.u64 	%rd5018, %rd5002, 6;
	xor.b64  	%rd5019, %rd5016, %rd5018;
	xor.b64  	%rd5020, %rd5019, %rd5017;
	shf.r.wrap.b32 	%r3936, %r3801, %r3800, 1;
	shf.r.wrap.b32 	%r3937, %r3800, %r3801, 1;
	mov.b64 	%rd5021, {%r3937, %r3936};
	shf.r.wrap.b32 	%r3938, %r3801, %r3800, 8;
	shf.r.wrap.b32 	%r3939, %r3800, %r3801, 8;
	mov.b64 	%rd5022, {%r3939, %r3938};
	shr.u64 	%rd5023, %rd4833, 7;
	xor.b64  	%rd5024, %rd5021, %rd5023;
	xor.b64  	%rd5025, %rd5024, %rd5022;
	add.s64 	%rd5026, %rd4937, %rd4436;
	add.s64 	%rd5027, %rd5026, %rd5020;
	add.s64 	%rd5028, %rd5027, %rd5025;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3940,%dummy}, %rd4809;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3941}, %rd4809;
	}
	shf.r.wrap.b32 	%r3942, %r3941, %r3940, 14;
	shf.r.wrap.b32 	%r3943, %r3940, %r3941, 14;
	mov.b64 	%rd5029, {%r3943, %r3942};
	shf.r.wrap.b32 	%r3944, %r3941, %r3940, 18;
	shf.r.wrap.b32 	%r3945, %r3940, %r3941, 18;
	mov.b64 	%rd5030, {%r3945, %r3944};
	xor.b64  	%rd5031, %rd5030, %rd5029;
	shf.l.wrap.b32 	%r3946, %r3940, %r3941, 23;
	shf.l.wrap.b32 	%r3947, %r3941, %r3940, 23;
	mov.b64 	%rd5032, {%r3947, %r3946};
	xor.b64  	%rd5033, %rd5031, %rd5032;
	xor.b64  	%rd5034, %rd4785, %rd4761;
	and.b64  	%rd5035, %rd5034, %rd4809;
	xor.b64  	%rd5036, %rd5035, %rd4761;
	add.s64 	%rd5037, %rd5036, %rd4737;
	add.s64 	%rd5038, %rd5037, %rd4833;
	add.s64 	%rd5039, %rd5038, %rd12973;
	add.s64 	%rd5040, %rd5039, %rd5033;
	add.s64 	%rd5041, %rd5040, %rd4748;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3948,%dummy}, %rd4820;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3949}, %rd4820;
	}
	shf.r.wrap.b32 	%r3950, %r3949, %r3948, 28;
	shf.r.wrap.b32 	%r3951, %r3948, %r3949, 28;
	mov.b64 	%rd5042, {%r3951, %r3950};
	shf.l.wrap.b32 	%r3952, %r3948, %r3949, 30;
	shf.l.wrap.b32 	%r3953, %r3949, %r3948, 30;
	mov.b64 	%rd5043, {%r3953, %r3952};
	xor.b64  	%rd5044, %rd5043, %rd5042;
	shf.l.wrap.b32 	%r3954, %r3948, %r3949, 25;
	shf.l.wrap.b32 	%r3955, %r3949, %r3948, 25;
	mov.b64 	%rd5045, {%r3955, %r3954};
	xor.b64  	%rd5046, %rd5044, %rd5045;
	xor.b64  	%rd5047, %rd4820, %rd4772;
	xor.b64  	%rd5048, %rd4820, %rd4796;
	and.b64  	%rd5049, %rd5048, %rd5047;
	xor.b64  	%rd5050, %rd5049, %rd4820;
	add.s64 	%rd5051, %rd5040, %rd5050;
	add.s64 	%rd5052, %rd5051, %rd5046;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3956,%dummy}, %rd5041;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3957}, %rd5041;
	}
	shf.r.wrap.b32 	%r3958, %r3957, %r3956, 14;
	shf.r.wrap.b32 	%r3959, %r3956, %r3957, 14;
	mov.b64 	%rd5053, {%r3959, %r3958};
	shf.r.wrap.b32 	%r3960, %r3957, %r3956, 18;
	shf.r.wrap.b32 	%r3961, %r3956, %r3957, 18;
	mov.b64 	%rd5054, {%r3961, %r3960};
	xor.b64  	%rd5055, %rd5054, %rd5053;
	shf.l.wrap.b32 	%r3962, %r3956, %r3957, 23;
	shf.l.wrap.b32 	%r3963, %r3957, %r3956, 23;
	mov.b64 	%rd5056, {%r3963, %r3962};
	xor.b64  	%rd5057, %rd5055, %rd5056;
	xor.b64  	%rd5058, %rd4809, %rd4785;
	and.b64  	%rd5059, %rd5041, %rd5058;
	xor.b64  	%rd5060, %rd5059, %rd4785;
	add.s64 	%rd5061, %rd4846, %rd4761;
	add.s64 	%rd5062, %rd5061, %rd12972;
	add.s64 	%rd5063, %rd5062, %rd5060;
	add.s64 	%rd5064, %rd5063, %rd5057;
	add.s64 	%rd5065, %rd5064, %rd4772;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3964,%dummy}, %rd5052;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3965}, %rd5052;
	}
	shf.r.wrap.b32 	%r3966, %r3965, %r3964, 28;
	shf.r.wrap.b32 	%r3967, %r3964, %r3965, 28;
	mov.b64 	%rd5066, {%r3967, %r3966};
	shf.l.wrap.b32 	%r3968, %r3964, %r3965, 30;
	shf.l.wrap.b32 	%r3969, %r3965, %r3964, 30;
	mov.b64 	%rd5067, {%r3969, %r3968};
	xor.b64  	%rd5068, %rd5067, %rd5066;
	shf.l.wrap.b32 	%r3970, %r3964, %r3965, 25;
	shf.l.wrap.b32 	%r3971, %r3965, %r3964, 25;
	mov.b64 	%rd5069, {%r3971, %r3970};
	xor.b64  	%rd5070, %rd5068, %rd5069;
	xor.b64  	%rd5071, %rd5052, %rd4796;
	xor.b64  	%rd5072, %rd5052, %rd4820;
	and.b64  	%rd5073, %rd5072, %rd5071;
	xor.b64  	%rd5074, %rd5073, %rd5052;
	add.s64 	%rd5075, %rd5064, %rd5074;
	add.s64 	%rd5076, %rd5075, %rd5070;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3972,%dummy}, %rd5065;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3973}, %rd5065;
	}
	shf.r.wrap.b32 	%r3974, %r3973, %r3972, 14;
	shf.r.wrap.b32 	%r3975, %r3972, %r3973, 14;
	mov.b64 	%rd5077, {%r3975, %r3974};
	shf.r.wrap.b32 	%r3976, %r3973, %r3972, 18;
	shf.r.wrap.b32 	%r3977, %r3972, %r3973, 18;
	mov.b64 	%rd5078, {%r3977, %r3976};
	xor.b64  	%rd5079, %rd5078, %rd5077;
	shf.l.wrap.b32 	%r3978, %r3972, %r3973, 23;
	shf.l.wrap.b32 	%r3979, %r3973, %r3972, 23;
	mov.b64 	%rd5080, {%r3979, %r3978};
	xor.b64  	%rd5081, %rd5079, %rd5080;
	xor.b64  	%rd5082, %rd5041, %rd4809;
	and.b64  	%rd5083, %rd5065, %rd5082;
	xor.b64  	%rd5084, %rd5083, %rd4809;
	add.s64 	%rd5085, %rd4859, %rd4785;
	add.s64 	%rd5086, %rd5085, %rd12971;
	add.s64 	%rd5087, %rd5086, %rd5084;
	add.s64 	%rd5088, %rd5087, %rd5081;
	add.s64 	%rd5089, %rd5088, %rd4796;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3980,%dummy}, %rd5076;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3981}, %rd5076;
	}
	shf.r.wrap.b32 	%r3982, %r3981, %r3980, 28;
	shf.r.wrap.b32 	%r3983, %r3980, %r3981, 28;
	mov.b64 	%rd5090, {%r3983, %r3982};
	shf.l.wrap.b32 	%r3984, %r3980, %r3981, 30;
	shf.l.wrap.b32 	%r3985, %r3981, %r3980, 30;
	mov.b64 	%rd5091, {%r3985, %r3984};
	xor.b64  	%rd5092, %rd5091, %rd5090;
	shf.l.wrap.b32 	%r3986, %r3980, %r3981, 25;
	shf.l.wrap.b32 	%r3987, %r3981, %r3980, 25;
	mov.b64 	%rd5093, {%r3987, %r3986};
	xor.b64  	%rd5094, %rd5092, %rd5093;
	xor.b64  	%rd5095, %rd5076, %rd4820;
	xor.b64  	%rd5096, %rd5076, %rd5052;
	and.b64  	%rd5097, %rd5096, %rd5095;
	xor.b64  	%rd5098, %rd5097, %rd5076;
	add.s64 	%rd5099, %rd5088, %rd5098;
	add.s64 	%rd5100, %rd5099, %rd5094;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3988,%dummy}, %rd5089;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3989}, %rd5089;
	}
	shf.r.wrap.b32 	%r3990, %r3989, %r3988, 14;
	shf.r.wrap.b32 	%r3991, %r3988, %r3989, 14;
	mov.b64 	%rd5101, {%r3991, %r3990};
	shf.r.wrap.b32 	%r3992, %r3989, %r3988, 18;
	shf.r.wrap.b32 	%r3993, %r3988, %r3989, 18;
	mov.b64 	%rd5102, {%r3993, %r3992};
	xor.b64  	%rd5103, %rd5102, %rd5101;
	shf.l.wrap.b32 	%r3994, %r3988, %r3989, 23;
	shf.l.wrap.b32 	%r3995, %r3989, %r3988, 23;
	mov.b64 	%rd5104, {%r3995, %r3994};
	xor.b64  	%rd5105, %rd5103, %rd5104;
	xor.b64  	%rd5106, %rd5065, %rd5041;
	and.b64  	%rd5107, %rd5089, %rd5106;
	xor.b64  	%rd5108, %rd5107, %rd5041;
	add.s64 	%rd5109, %rd4872, %rd4809;
	add.s64 	%rd5110, %rd5109, %rd12970;
	add.s64 	%rd5111, %rd5110, %rd5108;
	add.s64 	%rd5112, %rd5111, %rd5105;
	add.s64 	%rd5113, %rd5112, %rd4820;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3996,%dummy}, %rd5100;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3997}, %rd5100;
	}
	shf.r.wrap.b32 	%r3998, %r3997, %r3996, 28;
	shf.r.wrap.b32 	%r3999, %r3996, %r3997, 28;
	mov.b64 	%rd5114, {%r3999, %r3998};
	shf.l.wrap.b32 	%r4000, %r3996, %r3997, 30;
	shf.l.wrap.b32 	%r4001, %r3997, %r3996, 30;
	mov.b64 	%rd5115, {%r4001, %r4000};
	xor.b64  	%rd5116, %rd5115, %rd5114;
	shf.l.wrap.b32 	%r4002, %r3996, %r3997, 25;
	shf.l.wrap.b32 	%r4003, %r3997, %r3996, 25;
	mov.b64 	%rd5117, {%r4003, %r4002};
	xor.b64  	%rd5118, %rd5116, %rd5117;
	xor.b64  	%rd5119, %rd5100, %rd5052;
	xor.b64  	%rd5120, %rd5100, %rd5076;
	and.b64  	%rd5121, %rd5120, %rd5119;
	xor.b64  	%rd5122, %rd5121, %rd5100;
	add.s64 	%rd5123, %rd5112, %rd5122;
	add.s64 	%rd5124, %rd5123, %rd5118;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4004,%dummy}, %rd5113;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4005}, %rd5113;
	}
	shf.r.wrap.b32 	%r4006, %r4005, %r4004, 14;
	shf.r.wrap.b32 	%r4007, %r4004, %r4005, 14;
	mov.b64 	%rd5125, {%r4007, %r4006};
	shf.r.wrap.b32 	%r4008, %r4005, %r4004, 18;
	shf.r.wrap.b32 	%r4009, %r4004, %r4005, 18;
	mov.b64 	%rd5126, {%r4009, %r4008};
	xor.b64  	%rd5127, %rd5126, %rd5125;
	shf.l.wrap.b32 	%r4010, %r4004, %r4005, 23;
	shf.l.wrap.b32 	%r4011, %r4005, %r4004, 23;
	mov.b64 	%rd5128, {%r4011, %r4010};
	xor.b64  	%rd5129, %rd5127, %rd5128;
	xor.b64  	%rd5130, %rd5089, %rd5065;
	and.b64  	%rd5131, %rd5113, %rd5130;
	xor.b64  	%rd5132, %rd5131, %rd5065;
	add.s64 	%rd5133, %rd5041, %rd4885;
	add.s64 	%rd5134, %rd5133, %rd12969;
	add.s64 	%rd5135, %rd5134, %rd5132;
	add.s64 	%rd5136, %rd5135, %rd5129;
	add.s64 	%rd5137, %rd5136, %rd5052;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4012,%dummy}, %rd5124;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4013}, %rd5124;
	}
	shf.r.wrap.b32 	%r4014, %r4013, %r4012, 28;
	shf.r.wrap.b32 	%r4015, %r4012, %r4013, 28;
	mov.b64 	%rd5138, {%r4015, %r4014};
	shf.l.wrap.b32 	%r4016, %r4012, %r4013, 30;
	shf.l.wrap.b32 	%r4017, %r4013, %r4012, 30;
	mov.b64 	%rd5139, {%r4017, %r4016};
	xor.b64  	%rd5140, %rd5139, %rd5138;
	shf.l.wrap.b32 	%r4018, %r4012, %r4013, 25;
	shf.l.wrap.b32 	%r4019, %r4013, %r4012, 25;
	mov.b64 	%rd5141, {%r4019, %r4018};
	xor.b64  	%rd5142, %rd5140, %rd5141;
	xor.b64  	%rd5143, %rd5124, %rd5076;
	xor.b64  	%rd5144, %rd5124, %rd5100;
	and.b64  	%rd5145, %rd5144, %rd5143;
	xor.b64  	%rd5146, %rd5145, %rd5124;
	add.s64 	%rd5147, %rd5136, %rd5146;
	add.s64 	%rd5148, %rd5147, %rd5142;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4020,%dummy}, %rd5137;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4021}, %rd5137;
	}
	shf.r.wrap.b32 	%r4022, %r4021, %r4020, 14;
	shf.r.wrap.b32 	%r4023, %r4020, %r4021, 14;
	mov.b64 	%rd5149, {%r4023, %r4022};
	shf.r.wrap.b32 	%r4024, %r4021, %r4020, 18;
	shf.r.wrap.b32 	%r4025, %r4020, %r4021, 18;
	mov.b64 	%rd5150, {%r4025, %r4024};
	xor.b64  	%rd5151, %rd5150, %rd5149;
	shf.l.wrap.b32 	%r4026, %r4020, %r4021, 23;
	shf.l.wrap.b32 	%r4027, %r4021, %r4020, 23;
	mov.b64 	%rd5152, {%r4027, %r4026};
	xor.b64  	%rd5153, %rd5151, %rd5152;
	xor.b64  	%rd5154, %rd5113, %rd5089;
	and.b64  	%rd5155, %rd5137, %rd5154;
	xor.b64  	%rd5156, %rd5155, %rd5089;
	add.s64 	%rd5157, %rd5065, %rd4898;
	add.s64 	%rd5158, %rd5157, %rd12968;
	add.s64 	%rd5159, %rd5158, %rd5156;
	add.s64 	%rd5160, %rd5159, %rd5153;
	add.s64 	%rd5161, %rd5160, %rd5076;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4028,%dummy}, %rd5148;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4029}, %rd5148;
	}
	shf.r.wrap.b32 	%r4030, %r4029, %r4028, 28;
	shf.r.wrap.b32 	%r4031, %r4028, %r4029, 28;
	mov.b64 	%rd5162, {%r4031, %r4030};
	shf.l.wrap.b32 	%r4032, %r4028, %r4029, 30;
	shf.l.wrap.b32 	%r4033, %r4029, %r4028, 30;
	mov.b64 	%rd5163, {%r4033, %r4032};
	xor.b64  	%rd5164, %rd5163, %rd5162;
	shf.l.wrap.b32 	%r4034, %r4028, %r4029, 25;
	shf.l.wrap.b32 	%r4035, %r4029, %r4028, 25;
	mov.b64 	%rd5165, {%r4035, %r4034};
	xor.b64  	%rd5166, %rd5164, %rd5165;
	xor.b64  	%rd5167, %rd5148, %rd5100;
	xor.b64  	%rd5168, %rd5148, %rd5124;
	and.b64  	%rd5169, %rd5168, %rd5167;
	xor.b64  	%rd5170, %rd5169, %rd5148;
	add.s64 	%rd5171, %rd5160, %rd5170;
	add.s64 	%rd5172, %rd5171, %rd5166;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4036,%dummy}, %rd5161;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4037}, %rd5161;
	}
	shf.r.wrap.b32 	%r4038, %r4037, %r4036, 14;
	shf.r.wrap.b32 	%r4039, %r4036, %r4037, 14;
	mov.b64 	%rd5173, {%r4039, %r4038};
	shf.r.wrap.b32 	%r4040, %r4037, %r4036, 18;
	shf.r.wrap.b32 	%r4041, %r4036, %r4037, 18;
	mov.b64 	%rd5174, {%r4041, %r4040};
	xor.b64  	%rd5175, %rd5174, %rd5173;
	shf.l.wrap.b32 	%r4042, %r4036, %r4037, 23;
	shf.l.wrap.b32 	%r4043, %r4037, %r4036, 23;
	mov.b64 	%rd5176, {%r4043, %r4042};
	xor.b64  	%rd5177, %rd5175, %rd5176;
	xor.b64  	%rd5178, %rd5137, %rd5113;
	and.b64  	%rd5179, %rd5161, %rd5178;
	xor.b64  	%rd5180, %rd5179, %rd5113;
	add.s64 	%rd5181, %rd5089, %rd4911;
	add.s64 	%rd5182, %rd5181, %rd12967;
	add.s64 	%rd5183, %rd5182, %rd5180;
	add.s64 	%rd5184, %rd5183, %rd5177;
	add.s64 	%rd5185, %rd5184, %rd5100;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4044,%dummy}, %rd5172;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4045}, %rd5172;
	}
	shf.r.wrap.b32 	%r4046, %r4045, %r4044, 28;
	shf.r.wrap.b32 	%r4047, %r4044, %r4045, 28;
	mov.b64 	%rd5186, {%r4047, %r4046};
	shf.l.wrap.b32 	%r4048, %r4044, %r4045, 30;
	shf.l.wrap.b32 	%r4049, %r4045, %r4044, 30;
	mov.b64 	%rd5187, {%r4049, %r4048};
	xor.b64  	%rd5188, %rd5187, %rd5186;
	shf.l.wrap.b32 	%r4050, %r4044, %r4045, 25;
	shf.l.wrap.b32 	%r4051, %r4045, %r4044, 25;
	mov.b64 	%rd5189, {%r4051, %r4050};
	xor.b64  	%rd5190, %rd5188, %rd5189;
	xor.b64  	%rd5191, %rd5172, %rd5124;
	xor.b64  	%rd5192, %rd5172, %rd5148;
	and.b64  	%rd5193, %rd5192, %rd5191;
	xor.b64  	%rd5194, %rd5193, %rd5172;
	add.s64 	%rd5195, %rd5184, %rd5194;
	add.s64 	%rd5196, %rd5195, %rd5190;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4052,%dummy}, %rd5185;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4053}, %rd5185;
	}
	shf.r.wrap.b32 	%r4054, %r4053, %r4052, 14;
	shf.r.wrap.b32 	%r4055, %r4052, %r4053, 14;
	mov.b64 	%rd5197, {%r4055, %r4054};
	shf.r.wrap.b32 	%r4056, %r4053, %r4052, 18;
	shf.r.wrap.b32 	%r4057, %r4052, %r4053, 18;
	mov.b64 	%rd5198, {%r4057, %r4056};
	xor.b64  	%rd5199, %rd5198, %rd5197;
	shf.l.wrap.b32 	%r4058, %r4052, %r4053, 23;
	shf.l.wrap.b32 	%r4059, %r4053, %r4052, 23;
	mov.b64 	%rd5200, {%r4059, %r4058};
	xor.b64  	%rd5201, %rd5199, %rd5200;
	xor.b64  	%rd5202, %rd5161, %rd5137;
	and.b64  	%rd5203, %rd5185, %rd5202;
	xor.b64  	%rd5204, %rd5203, %rd5137;
	add.s64 	%rd5205, %rd5113, %rd4924;
	add.s64 	%rd5206, %rd5205, %rd12966;
	add.s64 	%rd5207, %rd5206, %rd5204;
	add.s64 	%rd5208, %rd5207, %rd5201;
	add.s64 	%rd5209, %rd5208, %rd5124;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4060,%dummy}, %rd5196;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4061}, %rd5196;
	}
	shf.r.wrap.b32 	%r4062, %r4061, %r4060, 28;
	shf.r.wrap.b32 	%r4063, %r4060, %r4061, 28;
	mov.b64 	%rd5210, {%r4063, %r4062};
	shf.l.wrap.b32 	%r4064, %r4060, %r4061, 30;
	shf.l.wrap.b32 	%r4065, %r4061, %r4060, 30;
	mov.b64 	%rd5211, {%r4065, %r4064};
	xor.b64  	%rd5212, %rd5211, %rd5210;
	shf.l.wrap.b32 	%r4066, %r4060, %r4061, 25;
	shf.l.wrap.b32 	%r4067, %r4061, %r4060, 25;
	mov.b64 	%rd5213, {%r4067, %r4066};
	xor.b64  	%rd5214, %rd5212, %rd5213;
	xor.b64  	%rd5215, %rd5196, %rd5148;
	xor.b64  	%rd5216, %rd5196, %rd5172;
	and.b64  	%rd5217, %rd5216, %rd5215;
	xor.b64  	%rd5218, %rd5217, %rd5196;
	add.s64 	%rd5219, %rd5208, %rd5218;
	add.s64 	%rd5220, %rd5219, %rd5214;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4068,%dummy}, %rd5209;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4069}, %rd5209;
	}
	shf.r.wrap.b32 	%r4070, %r4069, %r4068, 14;
	shf.r.wrap.b32 	%r4071, %r4068, %r4069, 14;
	mov.b64 	%rd5221, {%r4071, %r4070};
	shf.r.wrap.b32 	%r4072, %r4069, %r4068, 18;
	shf.r.wrap.b32 	%r4073, %r4068, %r4069, 18;
	mov.b64 	%rd5222, {%r4073, %r4072};
	xor.b64  	%rd5223, %rd5222, %rd5221;
	shf.l.wrap.b32 	%r4074, %r4068, %r4069, 23;
	shf.l.wrap.b32 	%r4075, %r4069, %r4068, 23;
	mov.b64 	%rd5224, {%r4075, %r4074};
	xor.b64  	%rd5225, %rd5223, %rd5224;
	xor.b64  	%rd5226, %rd5185, %rd5161;
	and.b64  	%rd5227, %rd5209, %rd5226;
	xor.b64  	%rd5228, %rd5227, %rd5161;
	add.s64 	%rd5229, %rd5137, %rd4937;
	add.s64 	%rd5230, %rd5229, %rd12965;
	add.s64 	%rd5231, %rd5230, %rd5228;
	add.s64 	%rd5232, %rd5231, %rd5225;
	add.s64 	%rd5233, %rd5232, %rd5148;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4076,%dummy}, %rd5220;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4077}, %rd5220;
	}
	shf.r.wrap.b32 	%r4078, %r4077, %r4076, 28;
	shf.r.wrap.b32 	%r4079, %r4076, %r4077, 28;
	mov.b64 	%rd5234, {%r4079, %r4078};
	shf.l.wrap.b32 	%r4080, %r4076, %r4077, 30;
	shf.l.wrap.b32 	%r4081, %r4077, %r4076, 30;
	mov.b64 	%rd5235, {%r4081, %r4080};
	xor.b64  	%rd5236, %rd5235, %rd5234;
	shf.l.wrap.b32 	%r4082, %r4076, %r4077, 25;
	shf.l.wrap.b32 	%r4083, %r4077, %r4076, 25;
	mov.b64 	%rd5237, {%r4083, %r4082};
	xor.b64  	%rd5238, %rd5236, %rd5237;
	xor.b64  	%rd5239, %rd5220, %rd5172;
	xor.b64  	%rd5240, %rd5220, %rd5196;
	and.b64  	%rd5241, %rd5240, %rd5239;
	xor.b64  	%rd5242, %rd5241, %rd5220;
	add.s64 	%rd5243, %rd5232, %rd5242;
	add.s64 	%rd5244, %rd5243, %rd5238;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4084,%dummy}, %rd5233;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4085}, %rd5233;
	}
	shf.r.wrap.b32 	%r4086, %r4085, %r4084, 14;
	shf.r.wrap.b32 	%r4087, %r4084, %r4085, 14;
	mov.b64 	%rd5245, {%r4087, %r4086};
	shf.r.wrap.b32 	%r4088, %r4085, %r4084, 18;
	shf.r.wrap.b32 	%r4089, %r4084, %r4085, 18;
	mov.b64 	%rd5246, {%r4089, %r4088};
	xor.b64  	%rd5247, %rd5246, %rd5245;
	shf.l.wrap.b32 	%r4090, %r4084, %r4085, 23;
	shf.l.wrap.b32 	%r4091, %r4085, %r4084, 23;
	mov.b64 	%rd5248, {%r4091, %r4090};
	xor.b64  	%rd5249, %rd5247, %rd5248;
	xor.b64  	%rd5250, %rd5209, %rd5185;
	and.b64  	%rd5251, %rd5233, %rd5250;
	xor.b64  	%rd5252, %rd5251, %rd5185;
	add.s64 	%rd5253, %rd5161, %rd4950;
	add.s64 	%rd5254, %rd5253, %rd12964;
	add.s64 	%rd5255, %rd5254, %rd5252;
	add.s64 	%rd5256, %rd5255, %rd5249;
	add.s64 	%rd5257, %rd5256, %rd5172;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4092,%dummy}, %rd5244;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4093}, %rd5244;
	}
	shf.r.wrap.b32 	%r4094, %r4093, %r4092, 28;
	shf.r.wrap.b32 	%r4095, %r4092, %r4093, 28;
	mov.b64 	%rd5258, {%r4095, %r4094};
	shf.l.wrap.b32 	%r4096, %r4092, %r4093, 30;
	shf.l.wrap.b32 	%r4097, %r4093, %r4092, 30;
	mov.b64 	%rd5259, {%r4097, %r4096};
	xor.b64  	%rd5260, %rd5259, %rd5258;
	shf.l.wrap.b32 	%r4098, %r4092, %r4093, 25;
	shf.l.wrap.b32 	%r4099, %r4093, %r4092, 25;
	mov.b64 	%rd5261, {%r4099, %r4098};
	xor.b64  	%rd5262, %rd5260, %rd5261;
	xor.b64  	%rd5263, %rd5244, %rd5196;
	xor.b64  	%rd5264, %rd5244, %rd5220;
	and.b64  	%rd5265, %rd5264, %rd5263;
	xor.b64  	%rd5266, %rd5265, %rd5244;
	add.s64 	%rd5267, %rd5256, %rd5266;
	add.s64 	%rd5268, %rd5267, %rd5262;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4100,%dummy}, %rd5257;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4101}, %rd5257;
	}
	shf.r.wrap.b32 	%r4102, %r4101, %r4100, 14;
	shf.r.wrap.b32 	%r4103, %r4100, %r4101, 14;
	mov.b64 	%rd5269, {%r4103, %r4102};
	shf.r.wrap.b32 	%r4104, %r4101, %r4100, 18;
	shf.r.wrap.b32 	%r4105, %r4100, %r4101, 18;
	mov.b64 	%rd5270, {%r4105, %r4104};
	xor.b64  	%rd5271, %rd5270, %rd5269;
	shf.l.wrap.b32 	%r4106, %r4100, %r4101, 23;
	shf.l.wrap.b32 	%r4107, %r4101, %r4100, 23;
	mov.b64 	%rd5272, {%r4107, %r4106};
	xor.b64  	%rd5273, %rd5271, %rd5272;
	xor.b64  	%rd5274, %rd5233, %rd5209;
	and.b64  	%rd5275, %rd5257, %rd5274;
	xor.b64  	%rd5276, %rd5275, %rd5209;
	add.s64 	%rd5277, %rd5185, %rd4963;
	add.s64 	%rd5278, %rd5277, %rd12963;
	add.s64 	%rd5279, %rd5278, %rd5276;
	add.s64 	%rd5280, %rd5279, %rd5273;
	add.s64 	%rd5281, %rd5280, %rd5196;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4108,%dummy}, %rd5268;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4109}, %rd5268;
	}
	shf.r.wrap.b32 	%r4110, %r4109, %r4108, 28;
	shf.r.wrap.b32 	%r4111, %r4108, %r4109, 28;
	mov.b64 	%rd5282, {%r4111, %r4110};
	shf.l.wrap.b32 	%r4112, %r4108, %r4109, 30;
	shf.l.wrap.b32 	%r4113, %r4109, %r4108, 30;
	mov.b64 	%rd5283, {%r4113, %r4112};
	xor.b64  	%rd5284, %rd5283, %rd5282;
	shf.l.wrap.b32 	%r4114, %r4108, %r4109, 25;
	shf.l.wrap.b32 	%r4115, %r4109, %r4108, 25;
	mov.b64 	%rd5285, {%r4115, %r4114};
	xor.b64  	%rd5286, %rd5284, %rd5285;
	xor.b64  	%rd5287, %rd5268, %rd5220;
	xor.b64  	%rd5288, %rd5268, %rd5244;
	and.b64  	%rd5289, %rd5288, %rd5287;
	xor.b64  	%rd5290, %rd5289, %rd5268;
	add.s64 	%rd5291, %rd5280, %rd5290;
	add.s64 	%rd5292, %rd5291, %rd5286;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4116,%dummy}, %rd5281;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4117}, %rd5281;
	}
	shf.r.wrap.b32 	%r4118, %r4117, %r4116, 14;
	shf.r.wrap.b32 	%r4119, %r4116, %r4117, 14;
	mov.b64 	%rd5293, {%r4119, %r4118};
	shf.r.wrap.b32 	%r4120, %r4117, %r4116, 18;
	shf.r.wrap.b32 	%r4121, %r4116, %r4117, 18;
	mov.b64 	%rd5294, {%r4121, %r4120};
	xor.b64  	%rd5295, %rd5294, %rd5293;
	shf.l.wrap.b32 	%r4122, %r4116, %r4117, 23;
	shf.l.wrap.b32 	%r4123, %r4117, %r4116, 23;
	mov.b64 	%rd5296, {%r4123, %r4122};
	xor.b64  	%rd5297, %rd5295, %rd5296;
	xor.b64  	%rd5298, %rd5257, %rd5233;
	and.b64  	%rd5299, %rd5281, %rd5298;
	xor.b64  	%rd5300, %rd5299, %rd5233;
	add.s64 	%rd5301, %rd5209, %rd4976;
	add.s64 	%rd5302, %rd5301, %rd12962;
	add.s64 	%rd5303, %rd5302, %rd5300;
	add.s64 	%rd5304, %rd5303, %rd5297;
	add.s64 	%rd5305, %rd5304, %rd5220;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4124,%dummy}, %rd5292;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4125}, %rd5292;
	}
	shf.r.wrap.b32 	%r4126, %r4125, %r4124, 28;
	shf.r.wrap.b32 	%r4127, %r4124, %r4125, 28;
	mov.b64 	%rd5306, {%r4127, %r4126};
	shf.l.wrap.b32 	%r4128, %r4124, %r4125, 30;
	shf.l.wrap.b32 	%r4129, %r4125, %r4124, 30;
	mov.b64 	%rd5307, {%r4129, %r4128};
	xor.b64  	%rd5308, %rd5307, %rd5306;
	shf.l.wrap.b32 	%r4130, %r4124, %r4125, 25;
	shf.l.wrap.b32 	%r4131, %r4125, %r4124, 25;
	mov.b64 	%rd5309, {%r4131, %r4130};
	xor.b64  	%rd5310, %rd5308, %rd5309;
	xor.b64  	%rd5311, %rd5292, %rd5244;
	xor.b64  	%rd5312, %rd5292, %rd5268;
	and.b64  	%rd5313, %rd5312, %rd5311;
	xor.b64  	%rd5314, %rd5313, %rd5292;
	add.s64 	%rd5315, %rd5304, %rd5314;
	add.s64 	%rd5316, %rd5315, %rd5310;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4132,%dummy}, %rd5305;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4133}, %rd5305;
	}
	shf.r.wrap.b32 	%r4134, %r4133, %r4132, 14;
	shf.r.wrap.b32 	%r4135, %r4132, %r4133, 14;
	mov.b64 	%rd5317, {%r4135, %r4134};
	shf.r.wrap.b32 	%r4136, %r4133, %r4132, 18;
	shf.r.wrap.b32 	%r4137, %r4132, %r4133, 18;
	mov.b64 	%rd5318, {%r4137, %r4136};
	xor.b64  	%rd5319, %rd5318, %rd5317;
	shf.l.wrap.b32 	%r4138, %r4132, %r4133, 23;
	shf.l.wrap.b32 	%r4139, %r4133, %r4132, 23;
	mov.b64 	%rd5320, {%r4139, %r4138};
	xor.b64  	%rd5321, %rd5319, %rd5320;
	xor.b64  	%rd5322, %rd5281, %rd5257;
	and.b64  	%rd5323, %rd5305, %rd5322;
	xor.b64  	%rd5324, %rd5323, %rd5257;
	add.s64 	%rd5325, %rd5233, %rd4989;
	add.s64 	%rd5326, %rd5325, %rd12961;
	add.s64 	%rd5327, %rd5326, %rd5324;
	add.s64 	%rd5328, %rd5327, %rd5321;
	add.s64 	%rd5329, %rd5328, %rd5244;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4140,%dummy}, %rd5316;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4141}, %rd5316;
	}
	shf.r.wrap.b32 	%r4142, %r4141, %r4140, 28;
	shf.r.wrap.b32 	%r4143, %r4140, %r4141, 28;
	mov.b64 	%rd5330, {%r4143, %r4142};
	shf.l.wrap.b32 	%r4144, %r4140, %r4141, 30;
	shf.l.wrap.b32 	%r4145, %r4141, %r4140, 30;
	mov.b64 	%rd5331, {%r4145, %r4144};
	xor.b64  	%rd5332, %rd5331, %rd5330;
	shf.l.wrap.b32 	%r4146, %r4140, %r4141, 25;
	shf.l.wrap.b32 	%r4147, %r4141, %r4140, 25;
	mov.b64 	%rd5333, {%r4147, %r4146};
	xor.b64  	%rd5334, %rd5332, %rd5333;
	xor.b64  	%rd5335, %rd5316, %rd5268;
	xor.b64  	%rd5336, %rd5316, %rd5292;
	and.b64  	%rd5337, %rd5336, %rd5335;
	xor.b64  	%rd5338, %rd5337, %rd5316;
	add.s64 	%rd5339, %rd5328, %rd5338;
	add.s64 	%rd5340, %rd5339, %rd5334;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4148,%dummy}, %rd5329;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4149}, %rd5329;
	}
	shf.r.wrap.b32 	%r4150, %r4149, %r4148, 14;
	shf.r.wrap.b32 	%r4151, %r4148, %r4149, 14;
	mov.b64 	%rd5341, {%r4151, %r4150};
	shf.r.wrap.b32 	%r4152, %r4149, %r4148, 18;
	shf.r.wrap.b32 	%r4153, %r4148, %r4149, 18;
	mov.b64 	%rd5342, {%r4153, %r4152};
	xor.b64  	%rd5343, %rd5342, %rd5341;
	shf.l.wrap.b32 	%r4154, %r4148, %r4149, 23;
	shf.l.wrap.b32 	%r4155, %r4149, %r4148, 23;
	mov.b64 	%rd5344, {%r4155, %r4154};
	xor.b64  	%rd5345, %rd5343, %rd5344;
	xor.b64  	%rd5346, %rd5305, %rd5281;
	and.b64  	%rd5347, %rd5329, %rd5346;
	xor.b64  	%rd5348, %rd5347, %rd5281;
	add.s64 	%rd5349, %rd5257, %rd5002;
	add.s64 	%rd5350, %rd5349, %rd12960;
	add.s64 	%rd5351, %rd5350, %rd5348;
	add.s64 	%rd5352, %rd5351, %rd5345;
	add.s64 	%rd5353, %rd5352, %rd5268;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4156,%dummy}, %rd5340;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4157}, %rd5340;
	}
	shf.r.wrap.b32 	%r4158, %r4157, %r4156, 28;
	shf.r.wrap.b32 	%r4159, %r4156, %r4157, 28;
	mov.b64 	%rd5354, {%r4159, %r4158};
	shf.l.wrap.b32 	%r4160, %r4156, %r4157, 30;
	shf.l.wrap.b32 	%r4161, %r4157, %r4156, 30;
	mov.b64 	%rd5355, {%r4161, %r4160};
	xor.b64  	%rd5356, %rd5355, %rd5354;
	shf.l.wrap.b32 	%r4162, %r4156, %r4157, 25;
	shf.l.wrap.b32 	%r4163, %r4157, %r4156, 25;
	mov.b64 	%rd5357, {%r4163, %r4162};
	xor.b64  	%rd5358, %rd5356, %rd5357;
	xor.b64  	%rd5359, %rd5340, %rd5292;
	xor.b64  	%rd5360, %rd5340, %rd5316;
	and.b64  	%rd5361, %rd5360, %rd5359;
	xor.b64  	%rd5362, %rd5361, %rd5340;
	add.s64 	%rd5363, %rd5352, %rd5362;
	add.s64 	%rd5364, %rd5363, %rd5358;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4164,%dummy}, %rd5353;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4165}, %rd5353;
	}
	shf.r.wrap.b32 	%r4166, %r4165, %r4164, 14;
	shf.r.wrap.b32 	%r4167, %r4164, %r4165, 14;
	mov.b64 	%rd5365, {%r4167, %r4166};
	shf.r.wrap.b32 	%r4168, %r4165, %r4164, 18;
	shf.r.wrap.b32 	%r4169, %r4164, %r4165, 18;
	mov.b64 	%rd5366, {%r4169, %r4168};
	xor.b64  	%rd5367, %rd5366, %rd5365;
	shf.l.wrap.b32 	%r4170, %r4164, %r4165, 23;
	shf.l.wrap.b32 	%r4171, %r4165, %r4164, 23;
	mov.b64 	%rd5368, {%r4171, %r4170};
	xor.b64  	%rd5369, %rd5367, %rd5368;
	xor.b64  	%rd5370, %rd5329, %rd5305;
	and.b64  	%rd5371, %rd5353, %rd5370;
	xor.b64  	%rd5372, %rd5371, %rd5305;
	add.s64 	%rd5373, %rd5281, %rd5015;
	add.s64 	%rd5374, %rd5373, %rd12959;
	add.s64 	%rd5375, %rd5374, %rd5372;
	add.s64 	%rd5376, %rd5375, %rd5369;
	add.s64 	%rd5377, %rd5376, %rd5292;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4172,%dummy}, %rd5364;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4173}, %rd5364;
	}
	shf.r.wrap.b32 	%r4174, %r4173, %r4172, 28;
	shf.r.wrap.b32 	%r4175, %r4172, %r4173, 28;
	mov.b64 	%rd5378, {%r4175, %r4174};
	shf.l.wrap.b32 	%r4176, %r4172, %r4173, 30;
	shf.l.wrap.b32 	%r4177, %r4173, %r4172, 30;
	mov.b64 	%rd5379, {%r4177, %r4176};
	xor.b64  	%rd5380, %rd5379, %rd5378;
	shf.l.wrap.b32 	%r4178, %r4172, %r4173, 25;
	shf.l.wrap.b32 	%r4179, %r4173, %r4172, 25;
	mov.b64 	%rd5381, {%r4179, %r4178};
	xor.b64  	%rd5382, %rd5380, %rd5381;
	xor.b64  	%rd5383, %rd5364, %rd5316;
	xor.b64  	%rd5384, %rd5364, %rd5340;
	and.b64  	%rd5385, %rd5384, %rd5383;
	xor.b64  	%rd5386, %rd5385, %rd5364;
	add.s64 	%rd5387, %rd5376, %rd5386;
	add.s64 	%rd5388, %rd5387, %rd5382;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4180,%dummy}, %rd5377;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4181}, %rd5377;
	}
	shf.r.wrap.b32 	%r4182, %r4181, %r4180, 14;
	shf.r.wrap.b32 	%r4183, %r4180, %r4181, 14;
	mov.b64 	%rd5389, {%r4183, %r4182};
	shf.r.wrap.b32 	%r4184, %r4181, %r4180, 18;
	shf.r.wrap.b32 	%r4185, %r4180, %r4181, 18;
	mov.b64 	%rd5390, {%r4185, %r4184};
	xor.b64  	%rd5391, %rd5390, %rd5389;
	shf.l.wrap.b32 	%r4186, %r4180, %r4181, 23;
	shf.l.wrap.b32 	%r4187, %r4181, %r4180, 23;
	mov.b64 	%rd5392, {%r4187, %r4186};
	xor.b64  	%rd5393, %rd5391, %rd5392;
	xor.b64  	%rd5394, %rd5353, %rd5329;
	and.b64  	%rd5395, %rd5377, %rd5394;
	xor.b64  	%rd5396, %rd5395, %rd5329;
	add.s64 	%rd5397, %rd5305, %rd5028;
	add.s64 	%rd5398, %rd5397, %rd12958;
	add.s64 	%rd5399, %rd5398, %rd5396;
	add.s64 	%rd5400, %rd5399, %rd5393;
	add.s64 	%rd5401, %rd5400, %rd5316;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4188,%dummy}, %rd5388;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4189}, %rd5388;
	}
	shf.r.wrap.b32 	%r4190, %r4189, %r4188, 28;
	shf.r.wrap.b32 	%r4191, %r4188, %r4189, 28;
	mov.b64 	%rd5402, {%r4191, %r4190};
	shf.l.wrap.b32 	%r4192, %r4188, %r4189, 30;
	shf.l.wrap.b32 	%r4193, %r4189, %r4188, 30;
	mov.b64 	%rd5403, {%r4193, %r4192};
	xor.b64  	%rd5404, %rd5403, %rd5402;
	shf.l.wrap.b32 	%r4194, %r4188, %r4189, 25;
	shf.l.wrap.b32 	%r4195, %r4189, %r4188, 25;
	mov.b64 	%rd5405, {%r4195, %r4194};
	xor.b64  	%rd5406, %rd5404, %rd5405;
	xor.b64  	%rd5407, %rd5388, %rd5340;
	xor.b64  	%rd5408, %rd5388, %rd5364;
	and.b64  	%rd5409, %rd5408, %rd5407;
	xor.b64  	%rd5410, %rd5409, %rd5388;
	add.s64 	%rd5411, %rd5400, %rd5410;
	add.s64 	%rd5412, %rd5411, %rd5406;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4196,%dummy}, %rd5015;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4197}, %rd5015;
	}
	shf.r.wrap.b32 	%r4198, %r4197, %r4196, 19;
	shf.r.wrap.b32 	%r4199, %r4196, %r4197, 19;
	mov.b64 	%rd5413, {%r4199, %r4198};
	shf.l.wrap.b32 	%r4200, %r4196, %r4197, 3;
	shf.l.wrap.b32 	%r4201, %r4197, %r4196, 3;
	mov.b64 	%rd5414, {%r4201, %r4200};
	shr.u64 	%rd5415, %rd5015, 6;
	xor.b64  	%rd5416, %rd5413, %rd5415;
	xor.b64  	%rd5417, %rd5416, %rd5414;
	shf.r.wrap.b32 	%r4202, %r3811, %r3810, 1;
	shf.r.wrap.b32 	%r4203, %r3810, %r3811, 1;
	mov.b64 	%rd5418, {%r4203, %r4202};
	shf.r.wrap.b32 	%r4204, %r3811, %r3810, 8;
	shf.r.wrap.b32 	%r4205, %r3810, %r3811, 8;
	mov.b64 	%rd5419, {%r4205, %r4204};
	shr.u64 	%rd5420, %rd4846, 7;
	xor.b64  	%rd5421, %rd5418, %rd5420;
	xor.b64  	%rd5422, %rd5421, %rd5419;
	add.s64 	%rd5423, %rd4950, %rd4833;
	add.s64 	%rd5424, %rd5423, %rd5417;
	add.s64 	%rd5425, %rd5424, %rd5422;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4206,%dummy}, %rd5028;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4207}, %rd5028;
	}
	shf.r.wrap.b32 	%r4208, %r4207, %r4206, 19;
	shf.r.wrap.b32 	%r4209, %r4206, %r4207, 19;
	mov.b64 	%rd5426, {%r4209, %r4208};
	shf.l.wrap.b32 	%r4210, %r4206, %r4207, 3;
	shf.l.wrap.b32 	%r4211, %r4207, %r4206, 3;
	mov.b64 	%rd5427, {%r4211, %r4210};
	shr.u64 	%rd5428, %rd5028, 6;
	xor.b64  	%rd5429, %rd5426, %rd5428;
	xor.b64  	%rd5430, %rd5429, %rd5427;
	shf.r.wrap.b32 	%r4212, %r3821, %r3820, 1;
	shf.r.wrap.b32 	%r4213, %r3820, %r3821, 1;
	mov.b64 	%rd5431, {%r4213, %r4212};
	shf.r.wrap.b32 	%r4214, %r3821, %r3820, 8;
	shf.r.wrap.b32 	%r4215, %r3820, %r3821, 8;
	mov.b64 	%rd5432, {%r4215, %r4214};
	shr.u64 	%rd5433, %rd4859, 7;
	xor.b64  	%rd5434, %rd5431, %rd5433;
	xor.b64  	%rd5435, %rd5434, %rd5432;
	add.s64 	%rd5436, %rd4963, %rd4846;
	add.s64 	%rd5437, %rd5436, %rd5430;
	add.s64 	%rd5438, %rd5437, %rd5435;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4216,%dummy}, %rd5425;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4217}, %rd5425;
	}
	shf.r.wrap.b32 	%r4218, %r4217, %r4216, 19;
	shf.r.wrap.b32 	%r4219, %r4216, %r4217, 19;
	mov.b64 	%rd5439, {%r4219, %r4218};
	shf.l.wrap.b32 	%r4220, %r4216, %r4217, 3;
	shf.l.wrap.b32 	%r4221, %r4217, %r4216, 3;
	mov.b64 	%rd5440, {%r4221, %r4220};
	shr.u64 	%rd5441, %rd5425, 6;
	xor.b64  	%rd5442, %rd5439, %rd5441;
	xor.b64  	%rd5443, %rd5442, %rd5440;
	shf.r.wrap.b32 	%r4222, %r3831, %r3830, 1;
	shf.r.wrap.b32 	%r4223, %r3830, %r3831, 1;
	mov.b64 	%rd5444, {%r4223, %r4222};
	shf.r.wrap.b32 	%r4224, %r3831, %r3830, 8;
	shf.r.wrap.b32 	%r4225, %r3830, %r3831, 8;
	mov.b64 	%rd5445, {%r4225, %r4224};
	shr.u64 	%rd5446, %rd4872, 7;
	xor.b64  	%rd5447, %rd5444, %rd5446;
	xor.b64  	%rd5448, %rd5447, %rd5445;
	add.s64 	%rd5449, %rd4976, %rd4859;
	add.s64 	%rd5450, %rd5449, %rd5443;
	add.s64 	%rd5451, %rd5450, %rd5448;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4226,%dummy}, %rd5438;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4227}, %rd5438;
	}
	shf.r.wrap.b32 	%r4228, %r4227, %r4226, 19;
	shf.r.wrap.b32 	%r4229, %r4226, %r4227, 19;
	mov.b64 	%rd5452, {%r4229, %r4228};
	shf.l.wrap.b32 	%r4230, %r4226, %r4227, 3;
	shf.l.wrap.b32 	%r4231, %r4227, %r4226, 3;
	mov.b64 	%rd5453, {%r4231, %r4230};
	shr.u64 	%rd5454, %rd5438, 6;
	xor.b64  	%rd5455, %rd5452, %rd5454;
	xor.b64  	%rd5456, %rd5455, %rd5453;
	shf.r.wrap.b32 	%r4232, %r3841, %r3840, 1;
	shf.r.wrap.b32 	%r4233, %r3840, %r3841, 1;
	mov.b64 	%rd5457, {%r4233, %r4232};
	shf.r.wrap.b32 	%r4234, %r3841, %r3840, 8;
	shf.r.wrap.b32 	%r4235, %r3840, %r3841, 8;
	mov.b64 	%rd5458, {%r4235, %r4234};
	shr.u64 	%rd5459, %rd4885, 7;
	xor.b64  	%rd5460, %rd5457, %rd5459;
	xor.b64  	%rd5461, %rd5460, %rd5458;
	add.s64 	%rd5462, %rd4989, %rd4872;
	add.s64 	%rd5463, %rd5462, %rd5456;
	add.s64 	%rd5464, %rd5463, %rd5461;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4236,%dummy}, %rd5451;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4237}, %rd5451;
	}
	shf.r.wrap.b32 	%r4238, %r4237, %r4236, 19;
	shf.r.wrap.b32 	%r4239, %r4236, %r4237, 19;
	mov.b64 	%rd5465, {%r4239, %r4238};
	shf.l.wrap.b32 	%r4240, %r4236, %r4237, 3;
	shf.l.wrap.b32 	%r4241, %r4237, %r4236, 3;
	mov.b64 	%rd5466, {%r4241, %r4240};
	shr.u64 	%rd5467, %rd5451, 6;
	xor.b64  	%rd5468, %rd5465, %rd5467;
	xor.b64  	%rd5469, %rd5468, %rd5466;
	shf.r.wrap.b32 	%r4242, %r3851, %r3850, 1;
	shf.r.wrap.b32 	%r4243, %r3850, %r3851, 1;
	mov.b64 	%rd5470, {%r4243, %r4242};
	shf.r.wrap.b32 	%r4244, %r3851, %r3850, 8;
	shf.r.wrap.b32 	%r4245, %r3850, %r3851, 8;
	mov.b64 	%rd5471, {%r4245, %r4244};
	shr.u64 	%rd5472, %rd4898, 7;
	xor.b64  	%rd5473, %rd5470, %rd5472;
	xor.b64  	%rd5474, %rd5473, %rd5471;
	add.s64 	%rd5475, %rd5002, %rd4885;
	add.s64 	%rd5476, %rd5475, %rd5469;
	add.s64 	%rd5477, %rd5476, %rd5474;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4246,%dummy}, %rd5464;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4247}, %rd5464;
	}
	shf.r.wrap.b32 	%r4248, %r4247, %r4246, 19;
	shf.r.wrap.b32 	%r4249, %r4246, %r4247, 19;
	mov.b64 	%rd5478, {%r4249, %r4248};
	shf.l.wrap.b32 	%r4250, %r4246, %r4247, 3;
	shf.l.wrap.b32 	%r4251, %r4247, %r4246, 3;
	mov.b64 	%rd5479, {%r4251, %r4250};
	shr.u64 	%rd5480, %rd5464, 6;
	xor.b64  	%rd5481, %rd5478, %rd5480;
	xor.b64  	%rd5482, %rd5481, %rd5479;
	shf.r.wrap.b32 	%r4252, %r3861, %r3860, 1;
	shf.r.wrap.b32 	%r4253, %r3860, %r3861, 1;
	mov.b64 	%rd5483, {%r4253, %r4252};
	shf.r.wrap.b32 	%r4254, %r3861, %r3860, 8;
	shf.r.wrap.b32 	%r4255, %r3860, %r3861, 8;
	mov.b64 	%rd5484, {%r4255, %r4254};
	shr.u64 	%rd5485, %rd4911, 7;
	xor.b64  	%rd5486, %rd5483, %rd5485;
	xor.b64  	%rd5487, %rd5486, %rd5484;
	add.s64 	%rd5488, %rd5015, %rd4898;
	add.s64 	%rd5489, %rd5488, %rd5482;
	add.s64 	%rd5490, %rd5489, %rd5487;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4256,%dummy}, %rd5477;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4257}, %rd5477;
	}
	shf.r.wrap.b32 	%r4258, %r4257, %r4256, 19;
	shf.r.wrap.b32 	%r4259, %r4256, %r4257, 19;
	mov.b64 	%rd5491, {%r4259, %r4258};
	shf.l.wrap.b32 	%r4260, %r4256, %r4257, 3;
	shf.l.wrap.b32 	%r4261, %r4257, %r4256, 3;
	mov.b64 	%rd5492, {%r4261, %r4260};
	shr.u64 	%rd5493, %rd5477, 6;
	xor.b64  	%rd5494, %rd5491, %rd5493;
	xor.b64  	%rd5495, %rd5494, %rd5492;
	shf.r.wrap.b32 	%r4262, %r3871, %r3870, 1;
	shf.r.wrap.b32 	%r4263, %r3870, %r3871, 1;
	mov.b64 	%rd5496, {%r4263, %r4262};
	shf.r.wrap.b32 	%r4264, %r3871, %r3870, 8;
	shf.r.wrap.b32 	%r4265, %r3870, %r3871, 8;
	mov.b64 	%rd5497, {%r4265, %r4264};
	shr.u64 	%rd5498, %rd4924, 7;
	xor.b64  	%rd5499, %rd5496, %rd5498;
	xor.b64  	%rd5500, %rd5499, %rd5497;
	add.s64 	%rd5501, %rd5028, %rd4911;
	add.s64 	%rd5502, %rd5501, %rd5495;
	add.s64 	%rd5503, %rd5502, %rd5500;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4266,%dummy}, %rd5490;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4267}, %rd5490;
	}
	shf.r.wrap.b32 	%r4268, %r4267, %r4266, 19;
	shf.r.wrap.b32 	%r4269, %r4266, %r4267, 19;
	mov.b64 	%rd5504, {%r4269, %r4268};
	shf.l.wrap.b32 	%r4270, %r4266, %r4267, 3;
	shf.l.wrap.b32 	%r4271, %r4267, %r4266, 3;
	mov.b64 	%rd5505, {%r4271, %r4270};
	shr.u64 	%rd5506, %rd5490, 6;
	xor.b64  	%rd5507, %rd5504, %rd5506;
	xor.b64  	%rd5508, %rd5507, %rd5505;
	shf.r.wrap.b32 	%r4272, %r3881, %r3880, 1;
	shf.r.wrap.b32 	%r4273, %r3880, %r3881, 1;
	mov.b64 	%rd5509, {%r4273, %r4272};
	shf.r.wrap.b32 	%r4274, %r3881, %r3880, 8;
	shf.r.wrap.b32 	%r4275, %r3880, %r3881, 8;
	mov.b64 	%rd5510, {%r4275, %r4274};
	shr.u64 	%rd5511, %rd4937, 7;
	xor.b64  	%rd5512, %rd5509, %rd5511;
	xor.b64  	%rd5513, %rd5512, %rd5510;
	add.s64 	%rd5514, %rd5425, %rd4924;
	add.s64 	%rd5515, %rd5514, %rd5508;
	add.s64 	%rd5516, %rd5515, %rd5513;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4276,%dummy}, %rd5503;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4277}, %rd5503;
	}
	shf.r.wrap.b32 	%r4278, %r4277, %r4276, 19;
	shf.r.wrap.b32 	%r4279, %r4276, %r4277, 19;
	mov.b64 	%rd5517, {%r4279, %r4278};
	shf.l.wrap.b32 	%r4280, %r4276, %r4277, 3;
	shf.l.wrap.b32 	%r4281, %r4277, %r4276, 3;
	mov.b64 	%rd5518, {%r4281, %r4280};
	shr.u64 	%rd5519, %rd5503, 6;
	xor.b64  	%rd5520, %rd5517, %rd5519;
	xor.b64  	%rd5521, %rd5520, %rd5518;
	shf.r.wrap.b32 	%r4282, %r3891, %r3890, 1;
	shf.r.wrap.b32 	%r4283, %r3890, %r3891, 1;
	mov.b64 	%rd5522, {%r4283, %r4282};
	shf.r.wrap.b32 	%r4284, %r3891, %r3890, 8;
	shf.r.wrap.b32 	%r4285, %r3890, %r3891, 8;
	mov.b64 	%rd5523, {%r4285, %r4284};
	shr.u64 	%rd5524, %rd4950, 7;
	xor.b64  	%rd5525, %rd5522, %rd5524;
	xor.b64  	%rd5526, %rd5525, %rd5523;
	add.s64 	%rd5527, %rd5438, %rd4937;
	add.s64 	%rd5528, %rd5527, %rd5521;
	add.s64 	%rd5529, %rd5528, %rd5526;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4286,%dummy}, %rd5516;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4287}, %rd5516;
	}
	shf.r.wrap.b32 	%r4288, %r4287, %r4286, 19;
	shf.r.wrap.b32 	%r4289, %r4286, %r4287, 19;
	mov.b64 	%rd5530, {%r4289, %r4288};
	shf.l.wrap.b32 	%r4290, %r4286, %r4287, 3;
	shf.l.wrap.b32 	%r4291, %r4287, %r4286, 3;
	mov.b64 	%rd5531, {%r4291, %r4290};
	shr.u64 	%rd5532, %rd5516, 6;
	xor.b64  	%rd5533, %rd5530, %rd5532;
	xor.b64  	%rd5534, %rd5533, %rd5531;
	shf.r.wrap.b32 	%r4292, %r3901, %r3900, 1;
	shf.r.wrap.b32 	%r4293, %r3900, %r3901, 1;
	mov.b64 	%rd5535, {%r4293, %r4292};
	shf.r.wrap.b32 	%r4294, %r3901, %r3900, 8;
	shf.r.wrap.b32 	%r4295, %r3900, %r3901, 8;
	mov.b64 	%rd5536, {%r4295, %r4294};
	shr.u64 	%rd5537, %rd4963, 7;
	xor.b64  	%rd5538, %rd5535, %rd5537;
	xor.b64  	%rd5539, %rd5538, %rd5536;
	add.s64 	%rd5540, %rd5451, %rd4950;
	add.s64 	%rd5541, %rd5540, %rd5534;
	add.s64 	%rd5542, %rd5541, %rd5539;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4296,%dummy}, %rd5529;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4297}, %rd5529;
	}
	shf.r.wrap.b32 	%r4298, %r4297, %r4296, 19;
	shf.r.wrap.b32 	%r4299, %r4296, %r4297, 19;
	mov.b64 	%rd5543, {%r4299, %r4298};
	shf.l.wrap.b32 	%r4300, %r4296, %r4297, 3;
	shf.l.wrap.b32 	%r4301, %r4297, %r4296, 3;
	mov.b64 	%rd5544, {%r4301, %r4300};
	shr.u64 	%rd5545, %rd5529, 6;
	xor.b64  	%rd5546, %rd5543, %rd5545;
	xor.b64  	%rd5547, %rd5546, %rd5544;
	shf.r.wrap.b32 	%r4302, %r3911, %r3910, 1;
	shf.r.wrap.b32 	%r4303, %r3910, %r3911, 1;
	mov.b64 	%rd5548, {%r4303, %r4302};
	shf.r.wrap.b32 	%r4304, %r3911, %r3910, 8;
	shf.r.wrap.b32 	%r4305, %r3910, %r3911, 8;
	mov.b64 	%rd5549, {%r4305, %r4304};
	shr.u64 	%rd5550, %rd4976, 7;
	xor.b64  	%rd5551, %rd5548, %rd5550;
	xor.b64  	%rd5552, %rd5551, %rd5549;
	add.s64 	%rd5553, %rd5464, %rd4963;
	add.s64 	%rd5554, %rd5553, %rd5547;
	add.s64 	%rd5555, %rd5554, %rd5552;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4306,%dummy}, %rd5542;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4307}, %rd5542;
	}
	shf.r.wrap.b32 	%r4308, %r4307, %r4306, 19;
	shf.r.wrap.b32 	%r4309, %r4306, %r4307, 19;
	mov.b64 	%rd5556, {%r4309, %r4308};
	shf.l.wrap.b32 	%r4310, %r4306, %r4307, 3;
	shf.l.wrap.b32 	%r4311, %r4307, %r4306, 3;
	mov.b64 	%rd5557, {%r4311, %r4310};
	shr.u64 	%rd5558, %rd5542, 6;
	xor.b64  	%rd5559, %rd5556, %rd5558;
	xor.b64  	%rd5560, %rd5559, %rd5557;
	shf.r.wrap.b32 	%r4312, %r3921, %r3920, 1;
	shf.r.wrap.b32 	%r4313, %r3920, %r3921, 1;
	mov.b64 	%rd5561, {%r4313, %r4312};
	shf.r.wrap.b32 	%r4314, %r3921, %r3920, 8;
	shf.r.wrap.b32 	%r4315, %r3920, %r3921, 8;
	mov.b64 	%rd5562, {%r4315, %r4314};
	shr.u64 	%rd5563, %rd4989, 7;
	xor.b64  	%rd5564, %rd5561, %rd5563;
	xor.b64  	%rd5565, %rd5564, %rd5562;
	add.s64 	%rd5566, %rd5477, %rd4976;
	add.s64 	%rd5567, %rd5566, %rd5560;
	add.s64 	%rd5568, %rd5567, %rd5565;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4316,%dummy}, %rd5555;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4317}, %rd5555;
	}
	shf.r.wrap.b32 	%r4318, %r4317, %r4316, 19;
	shf.r.wrap.b32 	%r4319, %r4316, %r4317, 19;
	mov.b64 	%rd5569, {%r4319, %r4318};
	shf.l.wrap.b32 	%r4320, %r4316, %r4317, 3;
	shf.l.wrap.b32 	%r4321, %r4317, %r4316, 3;
	mov.b64 	%rd5570, {%r4321, %r4320};
	shr.u64 	%rd5571, %rd5555, 6;
	xor.b64  	%rd5572, %rd5569, %rd5571;
	xor.b64  	%rd5573, %rd5572, %rd5570;
	shf.r.wrap.b32 	%r4322, %r3931, %r3930, 1;
	shf.r.wrap.b32 	%r4323, %r3930, %r3931, 1;
	mov.b64 	%rd5574, {%r4323, %r4322};
	shf.r.wrap.b32 	%r4324, %r3931, %r3930, 8;
	shf.r.wrap.b32 	%r4325, %r3930, %r3931, 8;
	mov.b64 	%rd5575, {%r4325, %r4324};
	shr.u64 	%rd5576, %rd5002, 7;
	xor.b64  	%rd5577, %rd5574, %rd5576;
	xor.b64  	%rd5578, %rd5577, %rd5575;
	add.s64 	%rd5579, %rd5490, %rd4989;
	add.s64 	%rd5580, %rd5579, %rd5573;
	add.s64 	%rd5581, %rd5580, %rd5578;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4326,%dummy}, %rd5568;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4327}, %rd5568;
	}
	shf.r.wrap.b32 	%r4328, %r4327, %r4326, 19;
	shf.r.wrap.b32 	%r4329, %r4326, %r4327, 19;
	mov.b64 	%rd5582, {%r4329, %r4328};
	shf.l.wrap.b32 	%r4330, %r4326, %r4327, 3;
	shf.l.wrap.b32 	%r4331, %r4327, %r4326, 3;
	mov.b64 	%rd5583, {%r4331, %r4330};
	shr.u64 	%rd5584, %rd5568, 6;
	xor.b64  	%rd5585, %rd5582, %rd5584;
	xor.b64  	%rd5586, %rd5585, %rd5583;
	shf.r.wrap.b32 	%r4332, %r4197, %r4196, 1;
	shf.r.wrap.b32 	%r4333, %r4196, %r4197, 1;
	mov.b64 	%rd5587, {%r4333, %r4332};
	shf.r.wrap.b32 	%r4334, %r4197, %r4196, 8;
	shf.r.wrap.b32 	%r4335, %r4196, %r4197, 8;
	mov.b64 	%rd5588, {%r4335, %r4334};
	shr.u64 	%rd5589, %rd5015, 7;
	xor.b64  	%rd5590, %rd5587, %rd5589;
	xor.b64  	%rd5591, %rd5590, %rd5588;
	add.s64 	%rd5592, %rd5503, %rd5002;
	add.s64 	%rd5593, %rd5592, %rd5586;
	add.s64 	%rd5594, %rd5593, %rd5591;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4336,%dummy}, %rd5581;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4337}, %rd5581;
	}
	shf.r.wrap.b32 	%r4338, %r4337, %r4336, 19;
	shf.r.wrap.b32 	%r4339, %r4336, %r4337, 19;
	mov.b64 	%rd5595, {%r4339, %r4338};
	shf.l.wrap.b32 	%r4340, %r4336, %r4337, 3;
	shf.l.wrap.b32 	%r4341, %r4337, %r4336, 3;
	mov.b64 	%rd5596, {%r4341, %r4340};
	shr.u64 	%rd5597, %rd5581, 6;
	xor.b64  	%rd5598, %rd5595, %rd5597;
	xor.b64  	%rd5599, %rd5598, %rd5596;
	shf.r.wrap.b32 	%r4342, %r4207, %r4206, 1;
	shf.r.wrap.b32 	%r4343, %r4206, %r4207, 1;
	mov.b64 	%rd5600, {%r4343, %r4342};
	shf.r.wrap.b32 	%r4344, %r4207, %r4206, 8;
	shf.r.wrap.b32 	%r4345, %r4206, %r4207, 8;
	mov.b64 	%rd5601, {%r4345, %r4344};
	shr.u64 	%rd5602, %rd5028, 7;
	xor.b64  	%rd5603, %rd5600, %rd5602;
	xor.b64  	%rd5604, %rd5603, %rd5601;
	add.s64 	%rd5605, %rd5516, %rd5015;
	add.s64 	%rd5606, %rd5605, %rd5599;
	add.s64 	%rd5607, %rd5606, %rd5604;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4346,%dummy}, %rd5594;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4347}, %rd5594;
	}
	shf.r.wrap.b32 	%r4348, %r4347, %r4346, 19;
	shf.r.wrap.b32 	%r4349, %r4346, %r4347, 19;
	mov.b64 	%rd5608, {%r4349, %r4348};
	shf.l.wrap.b32 	%r4350, %r4346, %r4347, 3;
	shf.l.wrap.b32 	%r4351, %r4347, %r4346, 3;
	mov.b64 	%rd5609, {%r4351, %r4350};
	shr.u64 	%rd5610, %rd5594, 6;
	xor.b64  	%rd5611, %rd5608, %rd5610;
	xor.b64  	%rd5612, %rd5611, %rd5609;
	shf.r.wrap.b32 	%r4352, %r4217, %r4216, 1;
	shf.r.wrap.b32 	%r4353, %r4216, %r4217, 1;
	mov.b64 	%rd5613, {%r4353, %r4352};
	shf.r.wrap.b32 	%r4354, %r4217, %r4216, 8;
	shf.r.wrap.b32 	%r4355, %r4216, %r4217, 8;
	mov.b64 	%rd5614, {%r4355, %r4354};
	shr.u64 	%rd5615, %rd5425, 7;
	xor.b64  	%rd5616, %rd5613, %rd5615;
	xor.b64  	%rd5617, %rd5616, %rd5614;
	add.s64 	%rd5618, %rd5529, %rd5028;
	add.s64 	%rd5619, %rd5618, %rd5612;
	add.s64 	%rd5620, %rd5619, %rd5617;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4356,%dummy}, %rd5401;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4357}, %rd5401;
	}
	shf.r.wrap.b32 	%r4358, %r4357, %r4356, 14;
	shf.r.wrap.b32 	%r4359, %r4356, %r4357, 14;
	mov.b64 	%rd5621, {%r4359, %r4358};
	shf.r.wrap.b32 	%r4360, %r4357, %r4356, 18;
	shf.r.wrap.b32 	%r4361, %r4356, %r4357, 18;
	mov.b64 	%rd5622, {%r4361, %r4360};
	xor.b64  	%rd5623, %rd5622, %rd5621;
	shf.l.wrap.b32 	%r4362, %r4356, %r4357, 23;
	shf.l.wrap.b32 	%r4363, %r4357, %r4356, 23;
	mov.b64 	%rd5624, {%r4363, %r4362};
	xor.b64  	%rd5625, %rd5623, %rd5624;
	xor.b64  	%rd5626, %rd5377, %rd5353;
	and.b64  	%rd5627, %rd5626, %rd5401;
	xor.b64  	%rd5628, %rd5627, %rd5353;
	add.s64 	%rd5629, %rd5628, %rd5329;
	add.s64 	%rd5630, %rd5629, %rd5425;
	add.s64 	%rd5631, %rd5630, %rd12957;
	add.s64 	%rd5632, %rd5631, %rd5625;
	add.s64 	%rd5633, %rd5632, %rd5340;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4364,%dummy}, %rd5412;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4365}, %rd5412;
	}
	shf.r.wrap.b32 	%r4366, %r4365, %r4364, 28;
	shf.r.wrap.b32 	%r4367, %r4364, %r4365, 28;
	mov.b64 	%rd5634, {%r4367, %r4366};
	shf.l.wrap.b32 	%r4368, %r4364, %r4365, 30;
	shf.l.wrap.b32 	%r4369, %r4365, %r4364, 30;
	mov.b64 	%rd5635, {%r4369, %r4368};
	xor.b64  	%rd5636, %rd5635, %rd5634;
	shf.l.wrap.b32 	%r4370, %r4364, %r4365, 25;
	shf.l.wrap.b32 	%r4371, %r4365, %r4364, 25;
	mov.b64 	%rd5637, {%r4371, %r4370};
	xor.b64  	%rd5638, %rd5636, %rd5637;
	xor.b64  	%rd5639, %rd5412, %rd5364;
	xor.b64  	%rd5640, %rd5412, %rd5388;
	and.b64  	%rd5641, %rd5640, %rd5639;
	xor.b64  	%rd5642, %rd5641, %rd5412;
	add.s64 	%rd5643, %rd5632, %rd5642;
	add.s64 	%rd5644, %rd5643, %rd5638;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4372,%dummy}, %rd5633;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4373}, %rd5633;
	}
	shf.r.wrap.b32 	%r4374, %r4373, %r4372, 14;
	shf.r.wrap.b32 	%r4375, %r4372, %r4373, 14;
	mov.b64 	%rd5645, {%r4375, %r4374};
	shf.r.wrap.b32 	%r4376, %r4373, %r4372, 18;
	shf.r.wrap.b32 	%r4377, %r4372, %r4373, 18;
	mov.b64 	%rd5646, {%r4377, %r4376};
	xor.b64  	%rd5647, %rd5646, %rd5645;
	shf.l.wrap.b32 	%r4378, %r4372, %r4373, 23;
	shf.l.wrap.b32 	%r4379, %r4373, %r4372, 23;
	mov.b64 	%rd5648, {%r4379, %r4378};
	xor.b64  	%rd5649, %rd5647, %rd5648;
	xor.b64  	%rd5650, %rd5401, %rd5377;
	and.b64  	%rd5651, %rd5633, %rd5650;
	xor.b64  	%rd5652, %rd5651, %rd5377;
	add.s64 	%rd5653, %rd5438, %rd5353;
	add.s64 	%rd5654, %rd5653, %rd12956;
	add.s64 	%rd5655, %rd5654, %rd5652;
	add.s64 	%rd5656, %rd5655, %rd5649;
	add.s64 	%rd5657, %rd5656, %rd5364;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4380,%dummy}, %rd5644;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4381}, %rd5644;
	}
	shf.r.wrap.b32 	%r4382, %r4381, %r4380, 28;
	shf.r.wrap.b32 	%r4383, %r4380, %r4381, 28;
	mov.b64 	%rd5658, {%r4383, %r4382};
	shf.l.wrap.b32 	%r4384, %r4380, %r4381, 30;
	shf.l.wrap.b32 	%r4385, %r4381, %r4380, 30;
	mov.b64 	%rd5659, {%r4385, %r4384};
	xor.b64  	%rd5660, %rd5659, %rd5658;
	shf.l.wrap.b32 	%r4386, %r4380, %r4381, 25;
	shf.l.wrap.b32 	%r4387, %r4381, %r4380, 25;
	mov.b64 	%rd5661, {%r4387, %r4386};
	xor.b64  	%rd5662, %rd5660, %rd5661;
	xor.b64  	%rd5663, %rd5644, %rd5388;
	xor.b64  	%rd5664, %rd5644, %rd5412;
	and.b64  	%rd5665, %rd5664, %rd5663;
	xor.b64  	%rd5666, %rd5665, %rd5644;
	add.s64 	%rd5667, %rd5656, %rd5666;
	add.s64 	%rd5668, %rd5667, %rd5662;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4388,%dummy}, %rd5657;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4389}, %rd5657;
	}
	shf.r.wrap.b32 	%r4390, %r4389, %r4388, 14;
	shf.r.wrap.b32 	%r4391, %r4388, %r4389, 14;
	mov.b64 	%rd5669, {%r4391, %r4390};
	shf.r.wrap.b32 	%r4392, %r4389, %r4388, 18;
	shf.r.wrap.b32 	%r4393, %r4388, %r4389, 18;
	mov.b64 	%rd5670, {%r4393, %r4392};
	xor.b64  	%rd5671, %rd5670, %rd5669;
	shf.l.wrap.b32 	%r4394, %r4388, %r4389, 23;
	shf.l.wrap.b32 	%r4395, %r4389, %r4388, 23;
	mov.b64 	%rd5672, {%r4395, %r4394};
	xor.b64  	%rd5673, %rd5671, %rd5672;
	xor.b64  	%rd5674, %rd5633, %rd5401;
	and.b64  	%rd5675, %rd5657, %rd5674;
	xor.b64  	%rd5676, %rd5675, %rd5401;
	add.s64 	%rd5677, %rd5451, %rd5377;
	add.s64 	%rd5678, %rd5677, %rd12955;
	add.s64 	%rd5679, %rd5678, %rd5676;
	add.s64 	%rd5680, %rd5679, %rd5673;
	add.s64 	%rd5681, %rd5680, %rd5388;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4396,%dummy}, %rd5668;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4397}, %rd5668;
	}
	shf.r.wrap.b32 	%r4398, %r4397, %r4396, 28;
	shf.r.wrap.b32 	%r4399, %r4396, %r4397, 28;
	mov.b64 	%rd5682, {%r4399, %r4398};
	shf.l.wrap.b32 	%r4400, %r4396, %r4397, 30;
	shf.l.wrap.b32 	%r4401, %r4397, %r4396, 30;
	mov.b64 	%rd5683, {%r4401, %r4400};
	xor.b64  	%rd5684, %rd5683, %rd5682;
	shf.l.wrap.b32 	%r4402, %r4396, %r4397, 25;
	shf.l.wrap.b32 	%r4403, %r4397, %r4396, 25;
	mov.b64 	%rd5685, {%r4403, %r4402};
	xor.b64  	%rd5686, %rd5684, %rd5685;
	xor.b64  	%rd5687, %rd5668, %rd5412;
	xor.b64  	%rd5688, %rd5668, %rd5644;
	and.b64  	%rd5689, %rd5688, %rd5687;
	xor.b64  	%rd5690, %rd5689, %rd5668;
	add.s64 	%rd5691, %rd5680, %rd5690;
	add.s64 	%rd5692, %rd5691, %rd5686;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4404,%dummy}, %rd5681;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4405}, %rd5681;
	}
	shf.r.wrap.b32 	%r4406, %r4405, %r4404, 14;
	shf.r.wrap.b32 	%r4407, %r4404, %r4405, 14;
	mov.b64 	%rd5693, {%r4407, %r4406};
	shf.r.wrap.b32 	%r4408, %r4405, %r4404, 18;
	shf.r.wrap.b32 	%r4409, %r4404, %r4405, 18;
	mov.b64 	%rd5694, {%r4409, %r4408};
	xor.b64  	%rd5695, %rd5694, %rd5693;
	shf.l.wrap.b32 	%r4410, %r4404, %r4405, 23;
	shf.l.wrap.b32 	%r4411, %r4405, %r4404, 23;
	mov.b64 	%rd5696, {%r4411, %r4410};
	xor.b64  	%rd5697, %rd5695, %rd5696;
	xor.b64  	%rd5698, %rd5657, %rd5633;
	and.b64  	%rd5699, %rd5681, %rd5698;
	xor.b64  	%rd5700, %rd5699, %rd5633;
	add.s64 	%rd5701, %rd5464, %rd5401;
	add.s64 	%rd5702, %rd5701, %rd12954;
	add.s64 	%rd5703, %rd5702, %rd5700;
	add.s64 	%rd5704, %rd5703, %rd5697;
	add.s64 	%rd5705, %rd5704, %rd5412;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4412,%dummy}, %rd5692;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4413}, %rd5692;
	}
	shf.r.wrap.b32 	%r4414, %r4413, %r4412, 28;
	shf.r.wrap.b32 	%r4415, %r4412, %r4413, 28;
	mov.b64 	%rd5706, {%r4415, %r4414};
	shf.l.wrap.b32 	%r4416, %r4412, %r4413, 30;
	shf.l.wrap.b32 	%r4417, %r4413, %r4412, 30;
	mov.b64 	%rd5707, {%r4417, %r4416};
	xor.b64  	%rd5708, %rd5707, %rd5706;
	shf.l.wrap.b32 	%r4418, %r4412, %r4413, 25;
	shf.l.wrap.b32 	%r4419, %r4413, %r4412, 25;
	mov.b64 	%rd5709, {%r4419, %r4418};
	xor.b64  	%rd5710, %rd5708, %rd5709;
	xor.b64  	%rd5711, %rd5692, %rd5644;
	xor.b64  	%rd5712, %rd5692, %rd5668;
	and.b64  	%rd5713, %rd5712, %rd5711;
	xor.b64  	%rd5714, %rd5713, %rd5692;
	add.s64 	%rd5715, %rd5704, %rd5714;
	add.s64 	%rd5716, %rd5715, %rd5710;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4420,%dummy}, %rd5705;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4421}, %rd5705;
	}
	shf.r.wrap.b32 	%r4422, %r4421, %r4420, 14;
	shf.r.wrap.b32 	%r4423, %r4420, %r4421, 14;
	mov.b64 	%rd5717, {%r4423, %r4422};
	shf.r.wrap.b32 	%r4424, %r4421, %r4420, 18;
	shf.r.wrap.b32 	%r4425, %r4420, %r4421, 18;
	mov.b64 	%rd5718, {%r4425, %r4424};
	xor.b64  	%rd5719, %rd5718, %rd5717;
	shf.l.wrap.b32 	%r4426, %r4420, %r4421, 23;
	shf.l.wrap.b32 	%r4427, %r4421, %r4420, 23;
	mov.b64 	%rd5720, {%r4427, %r4426};
	xor.b64  	%rd5721, %rd5719, %rd5720;
	xor.b64  	%rd5722, %rd5681, %rd5657;
	and.b64  	%rd5723, %rd5705, %rd5722;
	xor.b64  	%rd5724, %rd5723, %rd5657;
	add.s64 	%rd5725, %rd5633, %rd5477;
	add.s64 	%rd5726, %rd5725, %rd12953;
	add.s64 	%rd5727, %rd5726, %rd5724;
	add.s64 	%rd5728, %rd5727, %rd5721;
	add.s64 	%rd5729, %rd5728, %rd5644;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4428,%dummy}, %rd5716;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4429}, %rd5716;
	}
	shf.r.wrap.b32 	%r4430, %r4429, %r4428, 28;
	shf.r.wrap.b32 	%r4431, %r4428, %r4429, 28;
	mov.b64 	%rd5730, {%r4431, %r4430};
	shf.l.wrap.b32 	%r4432, %r4428, %r4429, 30;
	shf.l.wrap.b32 	%r4433, %r4429, %r4428, 30;
	mov.b64 	%rd5731, {%r4433, %r4432};
	xor.b64  	%rd5732, %rd5731, %rd5730;
	shf.l.wrap.b32 	%r4434, %r4428, %r4429, 25;
	shf.l.wrap.b32 	%r4435, %r4429, %r4428, 25;
	mov.b64 	%rd5733, {%r4435, %r4434};
	xor.b64  	%rd5734, %rd5732, %rd5733;
	xor.b64  	%rd5735, %rd5716, %rd5668;
	xor.b64  	%rd5736, %rd5716, %rd5692;
	and.b64  	%rd5737, %rd5736, %rd5735;
	xor.b64  	%rd5738, %rd5737, %rd5716;
	add.s64 	%rd5739, %rd5728, %rd5738;
	add.s64 	%rd5740, %rd5739, %rd5734;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4436,%dummy}, %rd5729;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4437}, %rd5729;
	}
	shf.r.wrap.b32 	%r4438, %r4437, %r4436, 14;
	shf.r.wrap.b32 	%r4439, %r4436, %r4437, 14;
	mov.b64 	%rd5741, {%r4439, %r4438};
	shf.r.wrap.b32 	%r4440, %r4437, %r4436, 18;
	shf.r.wrap.b32 	%r4441, %r4436, %r4437, 18;
	mov.b64 	%rd5742, {%r4441, %r4440};
	xor.b64  	%rd5743, %rd5742, %rd5741;
	shf.l.wrap.b32 	%r4442, %r4436, %r4437, 23;
	shf.l.wrap.b32 	%r4443, %r4437, %r4436, 23;
	mov.b64 	%rd5744, {%r4443, %r4442};
	xor.b64  	%rd5745, %rd5743, %rd5744;
	xor.b64  	%rd5746, %rd5705, %rd5681;
	and.b64  	%rd5747, %rd5729, %rd5746;
	xor.b64  	%rd5748, %rd5747, %rd5681;
	add.s64 	%rd5749, %rd5657, %rd5490;
	add.s64 	%rd5750, %rd5749, %rd12952;
	add.s64 	%rd5751, %rd5750, %rd5748;
	add.s64 	%rd5752, %rd5751, %rd5745;
	add.s64 	%rd5753, %rd5752, %rd5668;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4444,%dummy}, %rd5740;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4445}, %rd5740;
	}
	shf.r.wrap.b32 	%r4446, %r4445, %r4444, 28;
	shf.r.wrap.b32 	%r4447, %r4444, %r4445, 28;
	mov.b64 	%rd5754, {%r4447, %r4446};
	shf.l.wrap.b32 	%r4448, %r4444, %r4445, 30;
	shf.l.wrap.b32 	%r4449, %r4445, %r4444, 30;
	mov.b64 	%rd5755, {%r4449, %r4448};
	xor.b64  	%rd5756, %rd5755, %rd5754;
	shf.l.wrap.b32 	%r4450, %r4444, %r4445, 25;
	shf.l.wrap.b32 	%r4451, %r4445, %r4444, 25;
	mov.b64 	%rd5757, {%r4451, %r4450};
	xor.b64  	%rd5758, %rd5756, %rd5757;
	xor.b64  	%rd5759, %rd5740, %rd5692;
	xor.b64  	%rd5760, %rd5740, %rd5716;
	and.b64  	%rd5761, %rd5760, %rd5759;
	xor.b64  	%rd5762, %rd5761, %rd5740;
	add.s64 	%rd5763, %rd5752, %rd5762;
	add.s64 	%rd5764, %rd5763, %rd5758;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4452,%dummy}, %rd5753;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4453}, %rd5753;
	}
	shf.r.wrap.b32 	%r4454, %r4453, %r4452, 14;
	shf.r.wrap.b32 	%r4455, %r4452, %r4453, 14;
	mov.b64 	%rd5765, {%r4455, %r4454};
	shf.r.wrap.b32 	%r4456, %r4453, %r4452, 18;
	shf.r.wrap.b32 	%r4457, %r4452, %r4453, 18;
	mov.b64 	%rd5766, {%r4457, %r4456};
	xor.b64  	%rd5767, %rd5766, %rd5765;
	shf.l.wrap.b32 	%r4458, %r4452, %r4453, 23;
	shf.l.wrap.b32 	%r4459, %r4453, %r4452, 23;
	mov.b64 	%rd5768, {%r4459, %r4458};
	xor.b64  	%rd5769, %rd5767, %rd5768;
	xor.b64  	%rd5770, %rd5729, %rd5705;
	and.b64  	%rd5771, %rd5753, %rd5770;
	xor.b64  	%rd5772, %rd5771, %rd5705;
	add.s64 	%rd5773, %rd5681, %rd5503;
	add.s64 	%rd5774, %rd5773, %rd12951;
	add.s64 	%rd5775, %rd5774, %rd5772;
	add.s64 	%rd5776, %rd5775, %rd5769;
	add.s64 	%rd5777, %rd5776, %rd5692;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4460,%dummy}, %rd5764;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4461}, %rd5764;
	}
	shf.r.wrap.b32 	%r4462, %r4461, %r4460, 28;
	shf.r.wrap.b32 	%r4463, %r4460, %r4461, 28;
	mov.b64 	%rd5778, {%r4463, %r4462};
	shf.l.wrap.b32 	%r4464, %r4460, %r4461, 30;
	shf.l.wrap.b32 	%r4465, %r4461, %r4460, 30;
	mov.b64 	%rd5779, {%r4465, %r4464};
	xor.b64  	%rd5780, %rd5779, %rd5778;
	shf.l.wrap.b32 	%r4466, %r4460, %r4461, 25;
	shf.l.wrap.b32 	%r4467, %r4461, %r4460, 25;
	mov.b64 	%rd5781, {%r4467, %r4466};
	xor.b64  	%rd5782, %rd5780, %rd5781;
	xor.b64  	%rd5783, %rd5764, %rd5716;
	xor.b64  	%rd5784, %rd5764, %rd5740;
	and.b64  	%rd5785, %rd5784, %rd5783;
	xor.b64  	%rd5786, %rd5785, %rd5764;
	add.s64 	%rd5787, %rd5776, %rd5786;
	add.s64 	%rd5788, %rd5787, %rd5782;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4468,%dummy}, %rd5777;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4469}, %rd5777;
	}
	shf.r.wrap.b32 	%r4470, %r4469, %r4468, 14;
	shf.r.wrap.b32 	%r4471, %r4468, %r4469, 14;
	mov.b64 	%rd5789, {%r4471, %r4470};
	shf.r.wrap.b32 	%r4472, %r4469, %r4468, 18;
	shf.r.wrap.b32 	%r4473, %r4468, %r4469, 18;
	mov.b64 	%rd5790, {%r4473, %r4472};
	xor.b64  	%rd5791, %rd5790, %rd5789;
	shf.l.wrap.b32 	%r4474, %r4468, %r4469, 23;
	shf.l.wrap.b32 	%r4475, %r4469, %r4468, 23;
	mov.b64 	%rd5792, {%r4475, %r4474};
	xor.b64  	%rd5793, %rd5791, %rd5792;
	xor.b64  	%rd5794, %rd5753, %rd5729;
	and.b64  	%rd5795, %rd5777, %rd5794;
	xor.b64  	%rd5796, %rd5795, %rd5729;
	add.s64 	%rd5797, %rd5705, %rd5516;
	add.s64 	%rd5798, %rd5797, %rd12950;
	add.s64 	%rd5799, %rd5798, %rd5796;
	add.s64 	%rd5800, %rd5799, %rd5793;
	add.s64 	%rd5801, %rd5800, %rd5716;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4476,%dummy}, %rd5788;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4477}, %rd5788;
	}
	shf.r.wrap.b32 	%r4478, %r4477, %r4476, 28;
	shf.r.wrap.b32 	%r4479, %r4476, %r4477, 28;
	mov.b64 	%rd5802, {%r4479, %r4478};
	shf.l.wrap.b32 	%r4480, %r4476, %r4477, 30;
	shf.l.wrap.b32 	%r4481, %r4477, %r4476, 30;
	mov.b64 	%rd5803, {%r4481, %r4480};
	xor.b64  	%rd5804, %rd5803, %rd5802;
	shf.l.wrap.b32 	%r4482, %r4476, %r4477, 25;
	shf.l.wrap.b32 	%r4483, %r4477, %r4476, 25;
	mov.b64 	%rd5805, {%r4483, %r4482};
	xor.b64  	%rd5806, %rd5804, %rd5805;
	xor.b64  	%rd5807, %rd5788, %rd5740;
	xor.b64  	%rd5808, %rd5788, %rd5764;
	and.b64  	%rd5809, %rd5808, %rd5807;
	xor.b64  	%rd5810, %rd5809, %rd5788;
	add.s64 	%rd5811, %rd5800, %rd5810;
	add.s64 	%rd5812, %rd5811, %rd5806;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4484,%dummy}, %rd5801;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4485}, %rd5801;
	}
	shf.r.wrap.b32 	%r4486, %r4485, %r4484, 14;
	shf.r.wrap.b32 	%r4487, %r4484, %r4485, 14;
	mov.b64 	%rd5813, {%r4487, %r4486};
	shf.r.wrap.b32 	%r4488, %r4485, %r4484, 18;
	shf.r.wrap.b32 	%r4489, %r4484, %r4485, 18;
	mov.b64 	%rd5814, {%r4489, %r4488};
	xor.b64  	%rd5815, %rd5814, %rd5813;
	shf.l.wrap.b32 	%r4490, %r4484, %r4485, 23;
	shf.l.wrap.b32 	%r4491, %r4485, %r4484, 23;
	mov.b64 	%rd5816, {%r4491, %r4490};
	xor.b64  	%rd5817, %rd5815, %rd5816;
	xor.b64  	%rd5818, %rd5777, %rd5753;
	and.b64  	%rd5819, %rd5801, %rd5818;
	xor.b64  	%rd5820, %rd5819, %rd5753;
	add.s64 	%rd5821, %rd5729, %rd5529;
	add.s64 	%rd5822, %rd5821, %rd12949;
	add.s64 	%rd5823, %rd5822, %rd5820;
	add.s64 	%rd5824, %rd5823, %rd5817;
	add.s64 	%rd5825, %rd5824, %rd5740;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4492,%dummy}, %rd5812;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4493}, %rd5812;
	}
	shf.r.wrap.b32 	%r4494, %r4493, %r4492, 28;
	shf.r.wrap.b32 	%r4495, %r4492, %r4493, 28;
	mov.b64 	%rd5826, {%r4495, %r4494};
	shf.l.wrap.b32 	%r4496, %r4492, %r4493, 30;
	shf.l.wrap.b32 	%r4497, %r4493, %r4492, 30;
	mov.b64 	%rd5827, {%r4497, %r4496};
	xor.b64  	%rd5828, %rd5827, %rd5826;
	shf.l.wrap.b32 	%r4498, %r4492, %r4493, 25;
	shf.l.wrap.b32 	%r4499, %r4493, %r4492, 25;
	mov.b64 	%rd5829, {%r4499, %r4498};
	xor.b64  	%rd5830, %rd5828, %rd5829;
	xor.b64  	%rd5831, %rd5812, %rd5764;
	xor.b64  	%rd5832, %rd5812, %rd5788;
	and.b64  	%rd5833, %rd5832, %rd5831;
	xor.b64  	%rd5834, %rd5833, %rd5812;
	add.s64 	%rd5835, %rd5824, %rd5834;
	add.s64 	%rd5836, %rd5835, %rd5830;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4500,%dummy}, %rd5825;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4501}, %rd5825;
	}
	shf.r.wrap.b32 	%r4502, %r4501, %r4500, 14;
	shf.r.wrap.b32 	%r4503, %r4500, %r4501, 14;
	mov.b64 	%rd5837, {%r4503, %r4502};
	shf.r.wrap.b32 	%r4504, %r4501, %r4500, 18;
	shf.r.wrap.b32 	%r4505, %r4500, %r4501, 18;
	mov.b64 	%rd5838, {%r4505, %r4504};
	xor.b64  	%rd5839, %rd5838, %rd5837;
	shf.l.wrap.b32 	%r4506, %r4500, %r4501, 23;
	shf.l.wrap.b32 	%r4507, %r4501, %r4500, 23;
	mov.b64 	%rd5840, {%r4507, %r4506};
	xor.b64  	%rd5841, %rd5839, %rd5840;
	xor.b64  	%rd5842, %rd5801, %rd5777;
	and.b64  	%rd5843, %rd5825, %rd5842;
	xor.b64  	%rd5844, %rd5843, %rd5777;
	add.s64 	%rd5845, %rd5753, %rd5542;
	add.s64 	%rd5846, %rd5845, %rd12948;
	add.s64 	%rd5847, %rd5846, %rd5844;
	add.s64 	%rd5848, %rd5847, %rd5841;
	add.s64 	%rd5849, %rd5848, %rd5764;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4508,%dummy}, %rd5836;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4509}, %rd5836;
	}
	shf.r.wrap.b32 	%r4510, %r4509, %r4508, 28;
	shf.r.wrap.b32 	%r4511, %r4508, %r4509, 28;
	mov.b64 	%rd5850, {%r4511, %r4510};
	shf.l.wrap.b32 	%r4512, %r4508, %r4509, 30;
	shf.l.wrap.b32 	%r4513, %r4509, %r4508, 30;
	mov.b64 	%rd5851, {%r4513, %r4512};
	xor.b64  	%rd5852, %rd5851, %rd5850;
	shf.l.wrap.b32 	%r4514, %r4508, %r4509, 25;
	shf.l.wrap.b32 	%r4515, %r4509, %r4508, 25;
	mov.b64 	%rd5853, {%r4515, %r4514};
	xor.b64  	%rd5854, %rd5852, %rd5853;
	xor.b64  	%rd5855, %rd5836, %rd5788;
	xor.b64  	%rd5856, %rd5836, %rd5812;
	and.b64  	%rd5857, %rd5856, %rd5855;
	xor.b64  	%rd5858, %rd5857, %rd5836;
	add.s64 	%rd5859, %rd5848, %rd5858;
	add.s64 	%rd5860, %rd5859, %rd5854;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4516,%dummy}, %rd5849;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4517}, %rd5849;
	}
	shf.r.wrap.b32 	%r4518, %r4517, %r4516, 14;
	shf.r.wrap.b32 	%r4519, %r4516, %r4517, 14;
	mov.b64 	%rd5861, {%r4519, %r4518};
	shf.r.wrap.b32 	%r4520, %r4517, %r4516, 18;
	shf.r.wrap.b32 	%r4521, %r4516, %r4517, 18;
	mov.b64 	%rd5862, {%r4521, %r4520};
	xor.b64  	%rd5863, %rd5862, %rd5861;
	shf.l.wrap.b32 	%r4522, %r4516, %r4517, 23;
	shf.l.wrap.b32 	%r4523, %r4517, %r4516, 23;
	mov.b64 	%rd5864, {%r4523, %r4522};
	xor.b64  	%rd5865, %rd5863, %rd5864;
	xor.b64  	%rd5866, %rd5825, %rd5801;
	and.b64  	%rd5867, %rd5849, %rd5866;
	xor.b64  	%rd5868, %rd5867, %rd5801;
	add.s64 	%rd5869, %rd5777, %rd5555;
	add.s64 	%rd5870, %rd5869, %rd12947;
	add.s64 	%rd5871, %rd5870, %rd5868;
	add.s64 	%rd5872, %rd5871, %rd5865;
	add.s64 	%rd5873, %rd5872, %rd5788;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4524,%dummy}, %rd5860;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4525}, %rd5860;
	}
	shf.r.wrap.b32 	%r4526, %r4525, %r4524, 28;
	shf.r.wrap.b32 	%r4527, %r4524, %r4525, 28;
	mov.b64 	%rd5874, {%r4527, %r4526};
	shf.l.wrap.b32 	%r4528, %r4524, %r4525, 30;
	shf.l.wrap.b32 	%r4529, %r4525, %r4524, 30;
	mov.b64 	%rd5875, {%r4529, %r4528};
	xor.b64  	%rd5876, %rd5875, %rd5874;
	shf.l.wrap.b32 	%r4530, %r4524, %r4525, 25;
	shf.l.wrap.b32 	%r4531, %r4525, %r4524, 25;
	mov.b64 	%rd5877, {%r4531, %r4530};
	xor.b64  	%rd5878, %rd5876, %rd5877;
	xor.b64  	%rd5879, %rd5860, %rd5812;
	xor.b64  	%rd5880, %rd5860, %rd5836;
	and.b64  	%rd5881, %rd5880, %rd5879;
	xor.b64  	%rd5882, %rd5881, %rd5860;
	add.s64 	%rd5883, %rd5872, %rd5882;
	add.s64 	%rd5884, %rd5883, %rd5878;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4532,%dummy}, %rd5873;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4533}, %rd5873;
	}
	shf.r.wrap.b32 	%r4534, %r4533, %r4532, 14;
	shf.r.wrap.b32 	%r4535, %r4532, %r4533, 14;
	mov.b64 	%rd5885, {%r4535, %r4534};
	shf.r.wrap.b32 	%r4536, %r4533, %r4532, 18;
	shf.r.wrap.b32 	%r4537, %r4532, %r4533, 18;
	mov.b64 	%rd5886, {%r4537, %r4536};
	xor.b64  	%rd5887, %rd5886, %rd5885;
	shf.l.wrap.b32 	%r4538, %r4532, %r4533, 23;
	shf.l.wrap.b32 	%r4539, %r4533, %r4532, 23;
	mov.b64 	%rd5888, {%r4539, %r4538};
	xor.b64  	%rd5889, %rd5887, %rd5888;
	xor.b64  	%rd5890, %rd5849, %rd5825;
	and.b64  	%rd5891, %rd5873, %rd5890;
	xor.b64  	%rd5892, %rd5891, %rd5825;
	add.s64 	%rd5893, %rd5801, %rd5568;
	add.s64 	%rd5894, %rd5893, %rd12946;
	add.s64 	%rd5895, %rd5894, %rd5892;
	add.s64 	%rd5896, %rd5895, %rd5889;
	add.s64 	%rd5897, %rd5896, %rd5812;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4540,%dummy}, %rd5884;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4541}, %rd5884;
	}
	shf.r.wrap.b32 	%r4542, %r4541, %r4540, 28;
	shf.r.wrap.b32 	%r4543, %r4540, %r4541, 28;
	mov.b64 	%rd5898, {%r4543, %r4542};
	shf.l.wrap.b32 	%r4544, %r4540, %r4541, 30;
	shf.l.wrap.b32 	%r4545, %r4541, %r4540, 30;
	mov.b64 	%rd5899, {%r4545, %r4544};
	xor.b64  	%rd5900, %rd5899, %rd5898;
	shf.l.wrap.b32 	%r4546, %r4540, %r4541, 25;
	shf.l.wrap.b32 	%r4547, %r4541, %r4540, 25;
	mov.b64 	%rd5901, {%r4547, %r4546};
	xor.b64  	%rd5902, %rd5900, %rd5901;
	xor.b64  	%rd5903, %rd5884, %rd5836;
	xor.b64  	%rd5904, %rd5884, %rd5860;
	and.b64  	%rd5905, %rd5904, %rd5903;
	xor.b64  	%rd5906, %rd5905, %rd5884;
	add.s64 	%rd5907, %rd5896, %rd5906;
	add.s64 	%rd5908, %rd5907, %rd5902;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4548,%dummy}, %rd5897;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4549}, %rd5897;
	}
	shf.r.wrap.b32 	%r4550, %r4549, %r4548, 14;
	shf.r.wrap.b32 	%r4551, %r4548, %r4549, 14;
	mov.b64 	%rd5909, {%r4551, %r4550};
	shf.r.wrap.b32 	%r4552, %r4549, %r4548, 18;
	shf.r.wrap.b32 	%r4553, %r4548, %r4549, 18;
	mov.b64 	%rd5910, {%r4553, %r4552};
	xor.b64  	%rd5911, %rd5910, %rd5909;
	shf.l.wrap.b32 	%r4554, %r4548, %r4549, 23;
	shf.l.wrap.b32 	%r4555, %r4549, %r4548, 23;
	mov.b64 	%rd5912, {%r4555, %r4554};
	xor.b64  	%rd5913, %rd5911, %rd5912;
	xor.b64  	%rd5914, %rd5873, %rd5849;
	and.b64  	%rd5915, %rd5897, %rd5914;
	xor.b64  	%rd5916, %rd5915, %rd5849;
	add.s64 	%rd5917, %rd5825, %rd5581;
	add.s64 	%rd5918, %rd5917, %rd12945;
	add.s64 	%rd5919, %rd5918, %rd5916;
	add.s64 	%rd5920, %rd5919, %rd5913;
	add.s64 	%rd5921, %rd5920, %rd5836;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4556,%dummy}, %rd5908;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4557}, %rd5908;
	}
	shf.r.wrap.b32 	%r4558, %r4557, %r4556, 28;
	shf.r.wrap.b32 	%r4559, %r4556, %r4557, 28;
	mov.b64 	%rd5922, {%r4559, %r4558};
	shf.l.wrap.b32 	%r4560, %r4556, %r4557, 30;
	shf.l.wrap.b32 	%r4561, %r4557, %r4556, 30;
	mov.b64 	%rd5923, {%r4561, %r4560};
	xor.b64  	%rd5924, %rd5923, %rd5922;
	shf.l.wrap.b32 	%r4562, %r4556, %r4557, 25;
	shf.l.wrap.b32 	%r4563, %r4557, %r4556, 25;
	mov.b64 	%rd5925, {%r4563, %r4562};
	xor.b64  	%rd5926, %rd5924, %rd5925;
	xor.b64  	%rd5927, %rd5908, %rd5860;
	xor.b64  	%rd5928, %rd5908, %rd5884;
	and.b64  	%rd5929, %rd5928, %rd5927;
	xor.b64  	%rd5930, %rd5929, %rd5908;
	add.s64 	%rd5931, %rd5920, %rd5930;
	add.s64 	%rd5932, %rd5931, %rd5926;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4564,%dummy}, %rd5921;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4565}, %rd5921;
	}
	shf.r.wrap.b32 	%r4566, %r4565, %r4564, 14;
	shf.r.wrap.b32 	%r4567, %r4564, %r4565, 14;
	mov.b64 	%rd5933, {%r4567, %r4566};
	shf.r.wrap.b32 	%r4568, %r4565, %r4564, 18;
	shf.r.wrap.b32 	%r4569, %r4564, %r4565, 18;
	mov.b64 	%rd5934, {%r4569, %r4568};
	xor.b64  	%rd5935, %rd5934, %rd5933;
	shf.l.wrap.b32 	%r4570, %r4564, %r4565, 23;
	shf.l.wrap.b32 	%r4571, %r4565, %r4564, 23;
	mov.b64 	%rd5936, {%r4571, %r4570};
	xor.b64  	%rd5937, %rd5935, %rd5936;
	xor.b64  	%rd5938, %rd5897, %rd5873;
	and.b64  	%rd5939, %rd5921, %rd5938;
	xor.b64  	%rd5940, %rd5939, %rd5873;
	add.s64 	%rd5941, %rd5849, %rd5594;
	add.s64 	%rd5942, %rd5941, %rd12944;
	add.s64 	%rd5943, %rd5942, %rd5940;
	add.s64 	%rd5944, %rd5943, %rd5937;
	add.s64 	%rd5945, %rd5944, %rd5860;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4572,%dummy}, %rd5932;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4573}, %rd5932;
	}
	shf.r.wrap.b32 	%r4574, %r4573, %r4572, 28;
	shf.r.wrap.b32 	%r4575, %r4572, %r4573, 28;
	mov.b64 	%rd5946, {%r4575, %r4574};
	shf.l.wrap.b32 	%r4576, %r4572, %r4573, 30;
	shf.l.wrap.b32 	%r4577, %r4573, %r4572, 30;
	mov.b64 	%rd5947, {%r4577, %r4576};
	xor.b64  	%rd5948, %rd5947, %rd5946;
	shf.l.wrap.b32 	%r4578, %r4572, %r4573, 25;
	shf.l.wrap.b32 	%r4579, %r4573, %r4572, 25;
	mov.b64 	%rd5949, {%r4579, %r4578};
	xor.b64  	%rd5950, %rd5948, %rd5949;
	xor.b64  	%rd5951, %rd5932, %rd5884;
	xor.b64  	%rd5952, %rd5932, %rd5908;
	and.b64  	%rd5953, %rd5952, %rd5951;
	xor.b64  	%rd5954, %rd5953, %rd5932;
	add.s64 	%rd5955, %rd5944, %rd5954;
	add.s64 	%rd5956, %rd5955, %rd5950;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4580,%dummy}, %rd5945;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4581}, %rd5945;
	}
	shf.r.wrap.b32 	%r4582, %r4581, %r4580, 14;
	shf.r.wrap.b32 	%r4583, %r4580, %r4581, 14;
	mov.b64 	%rd5957, {%r4583, %r4582};
	shf.r.wrap.b32 	%r4584, %r4581, %r4580, 18;
	shf.r.wrap.b32 	%r4585, %r4580, %r4581, 18;
	mov.b64 	%rd5958, {%r4585, %r4584};
	xor.b64  	%rd5959, %rd5958, %rd5957;
	shf.l.wrap.b32 	%r4586, %r4580, %r4581, 23;
	shf.l.wrap.b32 	%r4587, %r4581, %r4580, 23;
	mov.b64 	%rd5960, {%r4587, %r4586};
	xor.b64  	%rd5961, %rd5959, %rd5960;
	xor.b64  	%rd5962, %rd5921, %rd5897;
	and.b64  	%rd5963, %rd5945, %rd5962;
	xor.b64  	%rd5964, %rd5963, %rd5897;
	add.s64 	%rd5965, %rd5873, %rd5607;
	add.s64 	%rd5966, %rd5965, %rd12943;
	add.s64 	%rd5967, %rd5966, %rd5964;
	add.s64 	%rd5968, %rd5967, %rd5961;
	add.s64 	%rd5969, %rd5968, %rd5884;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4588,%dummy}, %rd5956;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4589}, %rd5956;
	}
	shf.r.wrap.b32 	%r4590, %r4589, %r4588, 28;
	shf.r.wrap.b32 	%r4591, %r4588, %r4589, 28;
	mov.b64 	%rd5970, {%r4591, %r4590};
	shf.l.wrap.b32 	%r4592, %r4588, %r4589, 30;
	shf.l.wrap.b32 	%r4593, %r4589, %r4588, 30;
	mov.b64 	%rd5971, {%r4593, %r4592};
	xor.b64  	%rd5972, %rd5971, %rd5970;
	shf.l.wrap.b32 	%r4594, %r4588, %r4589, 25;
	shf.l.wrap.b32 	%r4595, %r4589, %r4588, 25;
	mov.b64 	%rd5973, {%r4595, %r4594};
	xor.b64  	%rd5974, %rd5972, %rd5973;
	xor.b64  	%rd5975, %rd5956, %rd5908;
	xor.b64  	%rd5976, %rd5956, %rd5932;
	and.b64  	%rd5977, %rd5976, %rd5975;
	xor.b64  	%rd5978, %rd5977, %rd5956;
	add.s64 	%rd5979, %rd5968, %rd5978;
	add.s64 	%rd5980, %rd5979, %rd5974;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4596,%dummy}, %rd5969;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4597}, %rd5969;
	}
	shf.r.wrap.b32 	%r4598, %r4597, %r4596, 14;
	shf.r.wrap.b32 	%r4599, %r4596, %r4597, 14;
	mov.b64 	%rd5981, {%r4599, %r4598};
	shf.r.wrap.b32 	%r4600, %r4597, %r4596, 18;
	shf.r.wrap.b32 	%r4601, %r4596, %r4597, 18;
	mov.b64 	%rd5982, {%r4601, %r4600};
	xor.b64  	%rd5983, %rd5982, %rd5981;
	shf.l.wrap.b32 	%r4602, %r4596, %r4597, 23;
	shf.l.wrap.b32 	%r4603, %r4597, %r4596, 23;
	mov.b64 	%rd5984, {%r4603, %r4602};
	xor.b64  	%rd5985, %rd5983, %rd5984;
	xor.b64  	%rd5986, %rd5945, %rd5921;
	and.b64  	%rd5987, %rd5969, %rd5986;
	xor.b64  	%rd5988, %rd5987, %rd5921;
	add.s64 	%rd5989, %rd5897, %rd5620;
	add.s64 	%rd5990, %rd5989, %rd12942;
	add.s64 	%rd5991, %rd5990, %rd5988;
	add.s64 	%rd5992, %rd5991, %rd5985;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4604,%dummy}, %rd5980;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4605}, %rd5980;
	}
	shf.r.wrap.b32 	%r4606, %r4605, %r4604, 28;
	shf.r.wrap.b32 	%r4607, %r4604, %r4605, 28;
	mov.b64 	%rd5993, {%r4607, %r4606};
	shf.l.wrap.b32 	%r4608, %r4604, %r4605, 30;
	shf.l.wrap.b32 	%r4609, %r4605, %r4604, 30;
	mov.b64 	%rd5994, {%r4609, %r4608};
	xor.b64  	%rd5995, %rd5994, %rd5993;
	shf.l.wrap.b32 	%r4610, %r4604, %r4605, 25;
	shf.l.wrap.b32 	%r4611, %r4605, %r4604, 25;
	mov.b64 	%rd5996, {%r4611, %r4610};
	xor.b64  	%rd5997, %rd5995, %rd5996;
	xor.b64  	%rd5998, %rd5980, %rd5932;
	xor.b64  	%rd5999, %rd5980, %rd5956;
	and.b64  	%rd6000, %rd5999, %rd5998;
	xor.b64  	%rd6001, %rd6000, %rd5980;
	add.s64 	%rd6002, %rd5992, %rd6001;
	add.s64 	%rd6003, %rd6002, %rd5997;
	add.s64 	%rd305, %rd13029, %rd6003;
	add.s64 	%rd306, %rd13028, %rd5980;
	add.s64 	%rd307, %rd13027, %rd5956;
	add.s64 	%rd308, %rd13026, %rd5932;
	st.local.u32 	[%rd1], %r4;
	st.local.u32 	[%rd16], %r5;
	st.local.v2.u32 	[%rd16+4], {%r6, %r7};
	st.local.u32 	[%rd2], %r8;
	st.local.u32 	[%rd17], %r9;
	st.local.v2.u32 	[%rd17+4], {%r10, %r11};
	st.local.u32 	[%rd3], %r12;
	st.local.u32 	[%rd18], %r13;
	st.local.v2.u32 	[%rd18+4], {%r14, %r15};
	st.local.u32 	[%rd4], %r16;
	st.local.u32 	[%rd19], %r17;
	st.local.v2.u32 	[%rd19+4], {%r18, %r19};
	mov.u32 	%r4612, -676720787;
	st.local.u32 	[%rd5], %r4612;
	mov.u32 	%r4613, 811676750;
	st.local.u32 	[%rd20], %r4613;
	st.local.v2.u32 	[%rd20+4], {%r526, %r526};
	st.local.u32 	[%rd6], %r526;
	st.local.u32 	[%rd21], %r526;
	st.local.v2.u32 	[%rd21+4], {%r526, %r526};
	st.local.u32 	[%rd7], %r526;
	st.local.u32 	[%rd22], %r526;
	st.local.v2.u32 	[%rd22+4], {%r526, %r526};
	st.local.u32 	[%rd8], %r526;
	st.local.u32 	[%rd23], %r526;
	st.local.v2.u32 	[%rd23+4], {%r526, %r526};
	st.local.u64 	[%rd9], %rd461;
	st.local.u64 	[%rd24], %rd462;
	st.local.u64 	[%rd24+8], %rd463;
	st.local.u64 	[%rd24+16], %rd464;
	st.local.u64 	[%rd24+24], %rd465;
	st.local.u64 	[%rd24+32], %rd466;
	st.local.u64 	[%rd24+40], %rd467;
	st.local.u64 	[%rd24+48], %rd468;
	st.local.u32 	[%rd24+56], %r526;
	st.local.u32 	[%rd24+64], %r526;
	st.local.u32 	[%rd24+72], %r526;
	st.local.u32 	[%rd24+80], %r526;
	st.local.u32 	[%rd24+88], %r526;
	st.local.u32 	[%rd24+96], %r526;
	st.local.u32 	[%rd24+104], %r526;
	st.local.u32 	[%rd24+112], %r526;
	st.local.u32 	[%rd24+120], %r526;
	st.local.u32 	[%rd24+128], %r526;
	st.local.u32 	[%rd24+136], %r526;
	st.local.u32 	[%rd24+144], %r526;
	st.local.u32 	[%rd24+152], %r526;
	st.local.u32 	[%rd24+160], %r526;
	st.local.u32 	[%rd24+168], %r526;
	st.local.u32 	[%rd24+176], %r526;
	st.local.u32 	[%rd24+184], %r526;
	st.local.u32 	[%rd25+4], %r526;
	st.local.u32 	[%rd26+4], %r526;
	st.local.u32 	[%rd27+4], %r526;
	st.local.u32 	[%rd28+4], %r526;
	st.local.u32 	[%rd29+4], %r526;
	st.local.u32 	[%rd30+4], %r526;
	st.local.u32 	[%rd31+4], %r526;
	st.local.u32 	[%rd32+4], %r526;
	st.local.u32 	[%rd33+4], %r526;
	st.local.u32 	[%rd34+4], %r526;
	st.local.u32 	[%rd35+4], %r526;
	st.local.u32 	[%rd36+4], %r526;
	st.local.u32 	[%rd37+4], %r526;
	st.local.u32 	[%rd38+4], %r526;
	st.local.u32 	[%rd39+4], %r526;
	st.local.u32 	[%rd40+4], %r526;
	// Callseq Start 3
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd399;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd391;
	.param .b64 param2;
	st.param.b64	[param2+0], %rd392;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd393;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd394;
	.param .b64 param5;
	st.param.b64	[param5+0], %rd395;
	.param .b64 param6;
	st.param.b64	[param6+0], %rd396;
	.param .b64 param7;
	st.param.b64	[param7+0], %rd397;
	.param .b64 param8;
	st.param.b64	[param8+0], %rd398;
	.param .b32 param9;
	st.param.b32	[param9+0], %r531;
	call.uni 
	sha512_update_128, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7, 
	param8, 
	param9
	);
	
	//{
	}// Callseq End 3
	ld.local.u32 	%r244, [%rd24+184];
	and.b32  	%r245, %r244, 127;
	xor.b32  	%r2663, %r245, 3;
	setp.gt.s32	%p196, %r2663, 63;
	@%p196 bra 	BB6_455;

	setp.gt.s32	%p292, %r2663, 31;
	@%p292 bra 	BB6_392;

	setp.gt.s32	%p340, %r2663, 15;
	@%p340 bra 	BB6_361;

	setp.gt.s32	%p364, %r2663, 7;
	@%p364 bra 	BB6_346;

	setp.gt.s32	%p376, %r2663, 3;
	@%p376 bra 	BB6_339;

	setp.gt.s32	%p382, %r2663, 1;
	@%p382 bra 	BB6_336;

	setp.eq.s32	%p385, %r2663, 0;
	@%p385 bra 	BB6_645;
	bra.uni 	BB6_334;

BB6_645:
	ld.local.u32 	%r4869, [%rd24+56];
	or.b32  	%r4870, %r4869, 128;
	st.local.u32 	[%rd24+56], %r4870;
	bra.uni 	BB6_646;

BB6_455:
	setp.gt.s32	%p197, %r2663, 95;
	@%p197 bra 	BB6_519;

	setp.gt.s32	%p245, %r2663, 79;
	@%p245 bra 	BB6_488;

	setp.gt.s32	%p269, %r2663, 71;
	@%p269 bra 	BB6_473;

	setp.gt.s32	%p281, %r2663, 67;
	@%p281 bra 	BB6_466;

	setp.gt.s32	%p287, %r2663, 65;
	@%p287 bra 	BB6_463;

	setp.eq.s32	%p290, %r2663, 64;
	@%p290 bra 	BB6_613;
	bra.uni 	BB6_461;

BB6_613:
	ld.local.u32 	%r4741, [%rd24+120];
	or.b32  	%r4742, %r4741, 128;
	st.local.u32 	[%rd24+120], %r4742;
	bra.uni 	BB6_646;

BB6_392:
	setp.gt.s32	%p293, %r2663, 47;
	@%p293 bra 	BB6_424;

	setp.gt.s32	%p317, %r2663, 39;
	@%p317 bra 	BB6_409;

	setp.gt.s32	%p329, %r2663, 35;
	@%p329 bra 	BB6_402;

	setp.gt.s32	%p335, %r2663, 33;
	@%p335 bra 	BB6_399;

	setp.eq.s32	%p338, %r2663, 32;
	@%p338 bra 	BB6_629;
	bra.uni 	BB6_397;

BB6_629:
	ld.local.u32 	%r4805, [%rd24+88];
	or.b32  	%r4806, %r4805, 128;
	st.local.u32 	[%rd24+88], %r4806;
	bra.uni 	BB6_646;

BB6_519:
	setp.gt.s32	%p198, %r2663, 111;
	@%p198 bra 	BB6_551;

	setp.gt.s32	%p222, %r2663, 103;
	@%p222 bra 	BB6_536;

	setp.gt.s32	%p234, %r2663, 99;
	@%p234 bra 	BB6_529;

	setp.gt.s32	%p240, %r2663, 97;
	@%p240 bra 	BB6_526;

	setp.eq.s32	%p243, %r2663, 96;
	@%p243 bra 	BB6_597;
	bra.uni 	BB6_524;

BB6_597:
	ld.local.u32 	%r4677, [%rd24+152];
	or.b32  	%r4678, %r4677, 128;
	st.local.u32 	[%rd24+152], %r4678;
	bra.uni 	BB6_646;

BB6_361:
	setp.gt.s32	%p341, %r2663, 23;
	@%p341 bra 	BB6_377;

	setp.gt.s32	%p353, %r2663, 19;
	@%p353 bra 	BB6_370;

	setp.gt.s32	%p359, %r2663, 17;
	@%p359 bra 	BB6_367;

	setp.eq.s32	%p362, %r2663, 16;
	@%p362 bra 	BB6_637;
	bra.uni 	BB6_365;

BB6_637:
	ld.local.u32 	%r4837, [%rd24+72];
	or.b32  	%r4838, %r4837, 128;
	st.local.u32 	[%rd24+72], %r4838;
	bra.uni 	BB6_646;

BB6_488:
	setp.gt.s32	%p246, %r2663, 87;
	@%p246 bra 	BB6_504;

	setp.gt.s32	%p258, %r2663, 83;
	@%p258 bra 	BB6_497;

	setp.gt.s32	%p264, %r2663, 81;
	@%p264 bra 	BB6_494;

	setp.eq.s32	%p267, %r2663, 80;
	@%p267 bra 	BB6_605;
	bra.uni 	BB6_492;

BB6_605:
	ld.local.u32 	%r4709, [%rd24+136];
	or.b32  	%r4710, %r4709, 128;
	st.local.u32 	[%rd24+136], %r4710;
	bra.uni 	BB6_646;

BB6_424:
	setp.gt.s32	%p294, %r2663, 55;
	@%p294 bra 	BB6_440;

	setp.gt.s32	%p306, %r2663, 51;
	@%p306 bra 	BB6_433;

	setp.gt.s32	%p312, %r2663, 49;
	@%p312 bra 	BB6_430;

	setp.eq.s32	%p315, %r2663, 48;
	@%p315 bra 	BB6_621;
	bra.uni 	BB6_428;

BB6_621:
	ld.local.u32 	%r4773, [%rd24+104];
	or.b32  	%r4774, %r4773, 128;
	st.local.u32 	[%rd24+104], %r4774;
	bra.uni 	BB6_646;

BB6_551:
	setp.gt.s32	%p199, %r2663, 119;
	@%p199 bra 	BB6_567;

	setp.gt.s32	%p211, %r2663, 115;
	@%p211 bra 	BB6_560;

	setp.gt.s32	%p217, %r2663, 113;
	@%p217 bra 	BB6_557;

	setp.eq.s32	%p220, %r2663, 112;
	@%p220 bra 	BB6_589;
	bra.uni 	BB6_555;

BB6_589:
	ld.local.u32 	%r4645, [%rd24+168];
	or.b32  	%r4646, %r4645, 128;
	st.local.u32 	[%rd24+168], %r4646;
	bra.uni 	BB6_646;

BB6_346:
	setp.gt.s32	%p365, %r2663, 11;
	@%p365 bra 	BB6_354;

	setp.gt.s32	%p371, %r2663, 9;
	@%p371 bra 	BB6_351;

	setp.eq.s32	%p374, %r2663, 8;
	@%p374 bra 	BB6_641;
	bra.uni 	BB6_349;

BB6_641:
	ld.local.u32 	%r4853, [%rd24+64];
	or.b32  	%r4854, %r4853, 128;
	st.local.u32 	[%rd24+64], %r4854;
	bra.uni 	BB6_646;

BB6_473:
	setp.gt.s32	%p270, %r2663, 75;
	@%p270 bra 	BB6_481;

	setp.gt.s32	%p276, %r2663, 73;
	@%p276 bra 	BB6_478;

	setp.eq.s32	%p279, %r2663, 72;
	@%p279 bra 	BB6_609;
	bra.uni 	BB6_476;

BB6_609:
	ld.local.u32 	%r4725, [%rd24+128];
	or.b32  	%r4726, %r4725, 128;
	st.local.u32 	[%rd24+128], %r4726;
	bra.uni 	BB6_646;

BB6_409:
	setp.gt.s32	%p318, %r2663, 43;
	@%p318 bra 	BB6_417;

	setp.gt.s32	%p324, %r2663, 41;
	@%p324 bra 	BB6_414;

	setp.eq.s32	%p327, %r2663, 40;
	@%p327 bra 	BB6_625;
	bra.uni 	BB6_412;

BB6_625:
	ld.local.u32 	%r4789, [%rd24+96];
	or.b32  	%r4790, %r4789, 128;
	st.local.u32 	[%rd24+96], %r4790;
	bra.uni 	BB6_646;

BB6_536:
	setp.gt.s32	%p223, %r2663, 107;
	@%p223 bra 	BB6_544;

	setp.gt.s32	%p229, %r2663, 105;
	@%p229 bra 	BB6_541;

	setp.eq.s32	%p232, %r2663, 104;
	@%p232 bra 	BB6_593;
	bra.uni 	BB6_539;

BB6_593:
	ld.local.u32 	%r4661, [%rd24+160];
	or.b32  	%r4662, %r4661, 128;
	st.local.u32 	[%rd24+160], %r4662;
	bra.uni 	BB6_646;

BB6_377:
	setp.gt.s32	%p342, %r2663, 27;
	@%p342 bra 	BB6_385;

	setp.gt.s32	%p348, %r2663, 25;
	@%p348 bra 	BB6_382;

	setp.eq.s32	%p351, %r2663, 24;
	@%p351 bra 	BB6_633;
	bra.uni 	BB6_380;

BB6_633:
	ld.local.u32 	%r4821, [%rd24+80];
	or.b32  	%r4822, %r4821, 128;
	st.local.u32 	[%rd24+80], %r4822;
	bra.uni 	BB6_646;

BB6_504:
	setp.gt.s32	%p247, %r2663, 91;
	@%p247 bra 	BB6_512;

	setp.gt.s32	%p253, %r2663, 89;
	@%p253 bra 	BB6_509;

	setp.eq.s32	%p256, %r2663, 88;
	@%p256 bra 	BB6_601;
	bra.uni 	BB6_507;

BB6_601:
	ld.local.u32 	%r4693, [%rd24+144];
	or.b32  	%r4694, %r4693, 128;
	st.local.u32 	[%rd24+144], %r4694;
	bra.uni 	BB6_646;

BB6_440:
	setp.gt.s32	%p295, %r2663, 59;
	@%p295 bra 	BB6_448;

	setp.gt.s32	%p301, %r2663, 57;
	@%p301 bra 	BB6_445;

	setp.eq.s32	%p304, %r2663, 56;
	@%p304 bra 	BB6_617;
	bra.uni 	BB6_443;

BB6_617:
	ld.local.u32 	%r4757, [%rd24+112];
	or.b32  	%r4758, %r4757, 128;
	st.local.u32 	[%rd24+112], %r4758;
	bra.uni 	BB6_646;

BB6_567:
	setp.gt.s32	%p200, %r2663, 123;
	@%p200 bra 	BB6_575;

	setp.gt.s32	%p206, %r2663, 121;
	@%p206 bra 	BB6_572;

	setp.eq.s32	%p209, %r2663, 120;
	@%p209 bra 	BB6_585;
	bra.uni 	BB6_570;

BB6_585:
	ld.local.u32 	%r4629, [%rd24+176];
	or.b32  	%r4630, %r4629, 128;
	st.local.u32 	[%rd24+176], %r4630;
	bra.uni 	BB6_646;

BB6_339:
	setp.gt.s32	%p377, %r2663, 5;
	@%p377 bra 	BB6_343;

	setp.eq.s32	%p380, %r2663, 4;
	@%p380 bra 	BB6_643;
	bra.uni 	BB6_341;

BB6_643:
	ld.local.u32 	%r4861, [%rd25+4];
	or.b32  	%r4862, %r4861, 128;
	st.local.u32 	[%rd25+4], %r4862;
	bra.uni 	BB6_646;

BB6_466:
	setp.gt.s32	%p282, %r2663, 69;
	@%p282 bra 	BB6_470;

	setp.eq.s32	%p285, %r2663, 68;
	@%p285 bra 	BB6_611;
	bra.uni 	BB6_468;

BB6_611:
	ld.local.u32 	%r4733, [%rd33+4];
	or.b32  	%r4734, %r4733, 128;
	st.local.u32 	[%rd33+4], %r4734;
	bra.uni 	BB6_646;

BB6_402:
	setp.gt.s32	%p330, %r2663, 37;
	@%p330 bra 	BB6_406;

	setp.eq.s32	%p333, %r2663, 36;
	@%p333 bra 	BB6_627;
	bra.uni 	BB6_404;

BB6_627:
	ld.local.u32 	%r4797, [%rd29+4];
	or.b32  	%r4798, %r4797, 128;
	st.local.u32 	[%rd29+4], %r4798;
	bra.uni 	BB6_646;

BB6_529:
	setp.gt.s32	%p235, %r2663, 101;
	@%p235 bra 	BB6_533;

	setp.eq.s32	%p238, %r2663, 100;
	@%p238 bra 	BB6_595;
	bra.uni 	BB6_531;

BB6_595:
	ld.local.u32 	%r4669, [%rd37+4];
	or.b32  	%r4670, %r4669, 128;
	st.local.u32 	[%rd37+4], %r4670;
	bra.uni 	BB6_646;

BB6_370:
	setp.gt.s32	%p354, %r2663, 21;
	@%p354 bra 	BB6_374;

	setp.eq.s32	%p357, %r2663, 20;
	@%p357 bra 	BB6_635;
	bra.uni 	BB6_372;

BB6_635:
	ld.local.u32 	%r4829, [%rd27+4];
	or.b32  	%r4830, %r4829, 128;
	st.local.u32 	[%rd27+4], %r4830;
	bra.uni 	BB6_646;

BB6_497:
	setp.gt.s32	%p259, %r2663, 85;
	@%p259 bra 	BB6_501;

	setp.eq.s32	%p262, %r2663, 84;
	@%p262 bra 	BB6_603;
	bra.uni 	BB6_499;

BB6_603:
	ld.local.u32 	%r4701, [%rd35+4];
	or.b32  	%r4702, %r4701, 128;
	st.local.u32 	[%rd35+4], %r4702;
	bra.uni 	BB6_646;

BB6_433:
	setp.gt.s32	%p307, %r2663, 53;
	@%p307 bra 	BB6_437;

	setp.eq.s32	%p310, %r2663, 52;
	@%p310 bra 	BB6_619;
	bra.uni 	BB6_435;

BB6_619:
	ld.local.u32 	%r4765, [%rd31+4];
	or.b32  	%r4766, %r4765, 128;
	st.local.u32 	[%rd31+4], %r4766;
	bra.uni 	BB6_646;

BB6_560:
	setp.gt.s32	%p212, %r2663, 117;
	@%p212 bra 	BB6_564;

	setp.eq.s32	%p215, %r2663, 116;
	@%p215 bra 	BB6_587;
	bra.uni 	BB6_562;

BB6_587:
	ld.local.u32 	%r4637, [%rd39+4];
	or.b32  	%r4638, %r4637, 128;
	st.local.u32 	[%rd39+4], %r4638;
	bra.uni 	BB6_646;

BB6_354:
	setp.gt.s32	%p366, %r2663, 13;
	@%p366 bra 	BB6_358;

	setp.eq.s32	%p369, %r2663, 12;
	@%p369 bra 	BB6_639;
	bra.uni 	BB6_356;

BB6_639:
	ld.local.u32 	%r4845, [%rd26+4];
	or.b32  	%r4846, %r4845, 128;
	st.local.u32 	[%rd26+4], %r4846;
	bra.uni 	BB6_646;

BB6_481:
	setp.gt.s32	%p271, %r2663, 77;
	@%p271 bra 	BB6_485;

	setp.eq.s32	%p274, %r2663, 76;
	@%p274 bra 	BB6_607;
	bra.uni 	BB6_483;

BB6_607:
	ld.local.u32 	%r4717, [%rd34+4];
	or.b32  	%r4718, %r4717, 128;
	st.local.u32 	[%rd34+4], %r4718;
	bra.uni 	BB6_646;

BB6_417:
	setp.gt.s32	%p319, %r2663, 45;
	@%p319 bra 	BB6_421;

	setp.eq.s32	%p322, %r2663, 44;
	@%p322 bra 	BB6_623;
	bra.uni 	BB6_419;

BB6_623:
	ld.local.u32 	%r4781, [%rd30+4];
	or.b32  	%r4782, %r4781, 128;
	st.local.u32 	[%rd30+4], %r4782;
	bra.uni 	BB6_646;

BB6_544:
	setp.gt.s32	%p224, %r2663, 109;
	@%p224 bra 	BB6_548;

	setp.eq.s32	%p227, %r2663, 108;
	@%p227 bra 	BB6_591;
	bra.uni 	BB6_546;

BB6_591:
	ld.local.u32 	%r4653, [%rd38+4];
	or.b32  	%r4654, %r4653, 128;
	st.local.u32 	[%rd38+4], %r4654;
	bra.uni 	BB6_646;

BB6_385:
	setp.gt.s32	%p343, %r2663, 29;
	@%p343 bra 	BB6_389;

	setp.eq.s32	%p346, %r2663, 28;
	@%p346 bra 	BB6_631;
	bra.uni 	BB6_387;

BB6_631:
	ld.local.u32 	%r4813, [%rd28+4];
	or.b32  	%r4814, %r4813, 128;
	st.local.u32 	[%rd28+4], %r4814;
	bra.uni 	BB6_646;

BB6_512:
	setp.gt.s32	%p248, %r2663, 93;
	@%p248 bra 	BB6_516;

	setp.eq.s32	%p251, %r2663, 92;
	@%p251 bra 	BB6_599;
	bra.uni 	BB6_514;

BB6_599:
	ld.local.u32 	%r4685, [%rd36+4];
	or.b32  	%r4686, %r4685, 128;
	st.local.u32 	[%rd36+4], %r4686;
	bra.uni 	BB6_646;

BB6_448:
	setp.gt.s32	%p296, %r2663, 61;
	@%p296 bra 	BB6_452;

	setp.eq.s32	%p299, %r2663, 60;
	@%p299 bra 	BB6_615;
	bra.uni 	BB6_450;

BB6_615:
	ld.local.u32 	%r4749, [%rd32+4];
	or.b32  	%r4750, %r4749, 128;
	st.local.u32 	[%rd32+4], %r4750;
	bra.uni 	BB6_646;

BB6_575:
	setp.gt.s32	%p201, %r2663, 125;
	@%p201 bra 	BB6_579;

	setp.eq.s32	%p204, %r2663, 124;
	@%p204 bra 	BB6_583;
	bra.uni 	BB6_577;

BB6_583:
	ld.local.u32 	%r4621, [%rd40+4];
	or.b32  	%r4622, %r4621, 128;
	st.local.u32 	[%rd40+4], %r4622;
	bra.uni 	BB6_646;

BB6_336:
	setp.eq.s32	%p383, %r2663, 2;
	@%p383 bra 	BB6_644;
	bra.uni 	BB6_337;

BB6_644:
	ld.local.u32 	%r4865, [%rd24+56];
	or.b32  	%r4866, %r4865, 8388608;
	st.local.u32 	[%rd24+56], %r4866;
	bra.uni 	BB6_646;

BB6_463:
	setp.eq.s32	%p288, %r2663, 66;
	@%p288 bra 	BB6_612;
	bra.uni 	BB6_464;

BB6_612:
	ld.local.u32 	%r4737, [%rd24+120];
	or.b32  	%r4738, %r4737, 8388608;
	st.local.u32 	[%rd24+120], %r4738;
	bra.uni 	BB6_646;

BB6_399:
	setp.eq.s32	%p336, %r2663, 34;
	@%p336 bra 	BB6_628;
	bra.uni 	BB6_400;

BB6_628:
	ld.local.u32 	%r4801, [%rd24+88];
	or.b32  	%r4802, %r4801, 8388608;
	st.local.u32 	[%rd24+88], %r4802;
	bra.uni 	BB6_646;

BB6_526:
	setp.eq.s32	%p241, %r2663, 98;
	@%p241 bra 	BB6_596;
	bra.uni 	BB6_527;

BB6_596:
	ld.local.u32 	%r4673, [%rd24+152];
	or.b32  	%r4674, %r4673, 8388608;
	st.local.u32 	[%rd24+152], %r4674;
	bra.uni 	BB6_646;

BB6_367:
	setp.eq.s32	%p360, %r2663, 18;
	@%p360 bra 	BB6_636;
	bra.uni 	BB6_368;

BB6_636:
	ld.local.u32 	%r4833, [%rd24+72];
	or.b32  	%r4834, %r4833, 8388608;
	st.local.u32 	[%rd24+72], %r4834;
	bra.uni 	BB6_646;

BB6_494:
	setp.eq.s32	%p265, %r2663, 82;
	@%p265 bra 	BB6_604;
	bra.uni 	BB6_495;

BB6_604:
	ld.local.u32 	%r4705, [%rd24+136];
	or.b32  	%r4706, %r4705, 8388608;
	st.local.u32 	[%rd24+136], %r4706;
	bra.uni 	BB6_646;

BB6_430:
	setp.eq.s32	%p313, %r2663, 50;
	@%p313 bra 	BB6_620;
	bra.uni 	BB6_431;

BB6_620:
	ld.local.u32 	%r4769, [%rd24+104];
	or.b32  	%r4770, %r4769, 8388608;
	st.local.u32 	[%rd24+104], %r4770;
	bra.uni 	BB6_646;

BB6_557:
	setp.eq.s32	%p218, %r2663, 114;
	@%p218 bra 	BB6_588;
	bra.uni 	BB6_558;

BB6_588:
	ld.local.u32 	%r4641, [%rd24+168];
	or.b32  	%r4642, %r4641, 8388608;
	st.local.u32 	[%rd24+168], %r4642;
	bra.uni 	BB6_646;

BB6_351:
	setp.eq.s32	%p372, %r2663, 10;
	@%p372 bra 	BB6_640;
	bra.uni 	BB6_352;

BB6_640:
	ld.local.u32 	%r4849, [%rd24+64];
	or.b32  	%r4850, %r4849, 8388608;
	st.local.u32 	[%rd24+64], %r4850;
	bra.uni 	BB6_646;

BB6_478:
	setp.eq.s32	%p277, %r2663, 74;
	@%p277 bra 	BB6_608;
	bra.uni 	BB6_479;

BB6_608:
	ld.local.u32 	%r4721, [%rd24+128];
	or.b32  	%r4722, %r4721, 8388608;
	st.local.u32 	[%rd24+128], %r4722;
	bra.uni 	BB6_646;

BB6_414:
	setp.eq.s32	%p325, %r2663, 42;
	@%p325 bra 	BB6_624;
	bra.uni 	BB6_415;

BB6_624:
	ld.local.u32 	%r4785, [%rd24+96];
	or.b32  	%r4786, %r4785, 8388608;
	st.local.u32 	[%rd24+96], %r4786;
	bra.uni 	BB6_646;

BB6_541:
	setp.eq.s32	%p230, %r2663, 106;
	@%p230 bra 	BB6_592;
	bra.uni 	BB6_542;

BB6_592:
	ld.local.u32 	%r4657, [%rd24+160];
	or.b32  	%r4658, %r4657, 8388608;
	st.local.u32 	[%rd24+160], %r4658;
	bra.uni 	BB6_646;

BB6_382:
	setp.eq.s32	%p349, %r2663, 26;
	@%p349 bra 	BB6_632;
	bra.uni 	BB6_383;

BB6_632:
	ld.local.u32 	%r4817, [%rd24+80];
	or.b32  	%r4818, %r4817, 8388608;
	st.local.u32 	[%rd24+80], %r4818;
	bra.uni 	BB6_646;

BB6_509:
	setp.eq.s32	%p254, %r2663, 90;
	@%p254 bra 	BB6_600;
	bra.uni 	BB6_510;

BB6_600:
	ld.local.u32 	%r4689, [%rd24+144];
	or.b32  	%r4690, %r4689, 8388608;
	st.local.u32 	[%rd24+144], %r4690;
	bra.uni 	BB6_646;

BB6_445:
	setp.eq.s32	%p302, %r2663, 58;
	@%p302 bra 	BB6_616;
	bra.uni 	BB6_446;

BB6_616:
	ld.local.u32 	%r4753, [%rd24+112];
	or.b32  	%r4754, %r4753, 8388608;
	st.local.u32 	[%rd24+112], %r4754;
	bra.uni 	BB6_646;

BB6_572:
	setp.eq.s32	%p207, %r2663, 122;
	@%p207 bra 	BB6_584;
	bra.uni 	BB6_573;

BB6_584:
	ld.local.u32 	%r4625, [%rd24+176];
	or.b32  	%r4626, %r4625, 8388608;
	st.local.u32 	[%rd24+176], %r4626;
	bra.uni 	BB6_646;

BB6_343:
	setp.eq.s32	%p378, %r2663, 6;
	@%p378 bra 	BB6_642;
	bra.uni 	BB6_344;

BB6_642:
	ld.local.u32 	%r4857, [%rd25+4];
	or.b32  	%r4858, %r4857, 8388608;
	st.local.u32 	[%rd25+4], %r4858;
	bra.uni 	BB6_646;

BB6_470:
	setp.eq.s32	%p283, %r2663, 70;
	@%p283 bra 	BB6_610;
	bra.uni 	BB6_471;

BB6_610:
	ld.local.u32 	%r4729, [%rd33+4];
	or.b32  	%r4730, %r4729, 8388608;
	st.local.u32 	[%rd33+4], %r4730;
	bra.uni 	BB6_646;

BB6_406:
	setp.eq.s32	%p331, %r2663, 38;
	@%p331 bra 	BB6_626;
	bra.uni 	BB6_407;

BB6_626:
	ld.local.u32 	%r4793, [%rd29+4];
	or.b32  	%r4794, %r4793, 8388608;
	st.local.u32 	[%rd29+4], %r4794;
	bra.uni 	BB6_646;

BB6_533:
	setp.eq.s32	%p236, %r2663, 102;
	@%p236 bra 	BB6_594;
	bra.uni 	BB6_534;

BB6_594:
	ld.local.u32 	%r4665, [%rd37+4];
	or.b32  	%r4666, %r4665, 8388608;
	st.local.u32 	[%rd37+4], %r4666;
	bra.uni 	BB6_646;

BB6_374:
	setp.eq.s32	%p355, %r2663, 22;
	@%p355 bra 	BB6_634;
	bra.uni 	BB6_375;

BB6_634:
	ld.local.u32 	%r4825, [%rd27+4];
	or.b32  	%r4826, %r4825, 8388608;
	st.local.u32 	[%rd27+4], %r4826;
	bra.uni 	BB6_646;

BB6_501:
	setp.eq.s32	%p260, %r2663, 86;
	@%p260 bra 	BB6_602;
	bra.uni 	BB6_502;

BB6_602:
	ld.local.u32 	%r4697, [%rd35+4];
	or.b32  	%r4698, %r4697, 8388608;
	st.local.u32 	[%rd35+4], %r4698;
	bra.uni 	BB6_646;

BB6_437:
	setp.eq.s32	%p308, %r2663, 54;
	@%p308 bra 	BB6_618;
	bra.uni 	BB6_438;

BB6_618:
	ld.local.u32 	%r4761, [%rd31+4];
	or.b32  	%r4762, %r4761, 8388608;
	st.local.u32 	[%rd31+4], %r4762;
	bra.uni 	BB6_646;

BB6_564:
	setp.eq.s32	%p213, %r2663, 118;
	@%p213 bra 	BB6_586;
	bra.uni 	BB6_565;

BB6_586:
	ld.local.u32 	%r4633, [%rd39+4];
	or.b32  	%r4634, %r4633, 8388608;
	st.local.u32 	[%rd39+4], %r4634;
	bra.uni 	BB6_646;

BB6_358:
	setp.eq.s32	%p367, %r2663, 14;
	@%p367 bra 	BB6_638;
	bra.uni 	BB6_359;

BB6_638:
	ld.local.u32 	%r4841, [%rd26+4];
	or.b32  	%r4842, %r4841, 8388608;
	st.local.u32 	[%rd26+4], %r4842;
	bra.uni 	BB6_646;

BB6_485:
	setp.eq.s32	%p272, %r2663, 78;
	@%p272 bra 	BB6_606;
	bra.uni 	BB6_486;

BB6_606:
	ld.local.u32 	%r4713, [%rd34+4];
	or.b32  	%r4714, %r4713, 8388608;
	st.local.u32 	[%rd34+4], %r4714;
	bra.uni 	BB6_646;

BB6_421:
	setp.eq.s32	%p320, %r2663, 46;
	@%p320 bra 	BB6_622;
	bra.uni 	BB6_422;

BB6_622:
	ld.local.u32 	%r4777, [%rd30+4];
	or.b32  	%r4778, %r4777, 8388608;
	st.local.u32 	[%rd30+4], %r4778;
	bra.uni 	BB6_646;

BB6_548:
	setp.eq.s32	%p225, %r2663, 110;
	@%p225 bra 	BB6_590;
	bra.uni 	BB6_549;

BB6_590:
	ld.local.u32 	%r4649, [%rd38+4];
	or.b32  	%r4650, %r4649, 8388608;
	st.local.u32 	[%rd38+4], %r4650;
	bra.uni 	BB6_646;

BB6_389:
	setp.eq.s32	%p344, %r2663, 30;
	@%p344 bra 	BB6_630;
	bra.uni 	BB6_390;

BB6_630:
	ld.local.u32 	%r4809, [%rd28+4];
	or.b32  	%r4810, %r4809, 8388608;
	st.local.u32 	[%rd28+4], %r4810;
	bra.uni 	BB6_646;

BB6_516:
	setp.eq.s32	%p249, %r2663, 94;
	@%p249 bra 	BB6_598;
	bra.uni 	BB6_517;

BB6_598:
	ld.local.u32 	%r4681, [%rd36+4];
	or.b32  	%r4682, %r4681, 8388608;
	st.local.u32 	[%rd36+4], %r4682;
	bra.uni 	BB6_646;

BB6_452:
	setp.eq.s32	%p297, %r2663, 62;
	@%p297 bra 	BB6_614;
	bra.uni 	BB6_453;

BB6_614:
	ld.local.u32 	%r4745, [%rd32+4];
	or.b32  	%r4746, %r4745, 8388608;
	st.local.u32 	[%rd32+4], %r4746;
	bra.uni 	BB6_646;

BB6_579:
	setp.eq.s32	%p202, %r2663, 126;
	@%p202 bra 	BB6_582;
	bra.uni 	BB6_580;

BB6_582:
	ld.local.u32 	%r4617, [%rd40+4];
	or.b32  	%r4618, %r4617, 8388608;
	st.local.u32 	[%rd40+4], %r4618;
	bra.uni 	BB6_646;

BB6_141:
	setp.eq.s32	%p97, %r528, 67;
	@%p97 bra 	BB6_142;
	bra.uni 	BB6_324;

BB6_142:
	or.b32  	%r10615, %r10615, -2147483648;
	st.local.u32 	[%rd24+120], %r10615;
	bra.uni 	BB6_324;

BB6_77:
	setp.eq.s32	%p145, %r528, 35;
	@%p145 bra 	BB6_78;
	bra.uni 	BB6_324;

BB6_78:
	or.b32  	%r10623, %r10623, -2147483648;
	st.local.u32 	[%rd24+88], %r10623;
	bra.uni 	BB6_324;

BB6_204:
	setp.eq.s32	%p50, %r528, 99;
	@%p50 bra 	BB6_205;
	bra.uni 	BB6_324;

BB6_205:
	or.b32  	%r10607, %r10607, -2147483648;
	st.local.u32 	[%rd24+152], %r10607;
	bra.uni 	BB6_324;

BB6_45:
	setp.eq.s32	%p169, %r528, 19;
	@%p169 bra 	BB6_46;
	bra.uni 	BB6_324;

BB6_46:
	or.b32  	%r10627, %r10627, -2147483648;
	st.local.u32 	[%rd24+72], %r10627;
	bra.uni 	BB6_324;

BB6_172:
	setp.eq.s32	%p74, %r528, 83;
	@%p74 bra 	BB6_173;
	bra.uni 	BB6_324;

BB6_173:
	or.b32  	%r10611, %r10611, -2147483648;
	st.local.u32 	[%rd24+136], %r10611;
	bra.uni 	BB6_324;

BB6_108:
	setp.eq.s32	%p122, %r528, 51;
	@%p122 bra 	BB6_109;
	bra.uni 	BB6_324;

BB6_109:
	or.b32  	%r10619, %r10619, -2147483648;
	st.local.u32 	[%rd24+104], %r10619;
	bra.uni 	BB6_324;

BB6_235:
	setp.eq.s32	%p27, %r528, 115;
	@%p27 bra 	BB6_236;
	bra.uni 	BB6_324;

BB6_236:
	or.b32  	%r10603, %r10603, -2147483648;
	st.local.u32 	[%rd24+168], %r10603;
	bra.uni 	BB6_324;

BB6_29:
	setp.eq.s32	%p181, %r528, 11;
	@%p181 bra 	BB6_30;
	bra.uni 	BB6_324;

BB6_30:
	or.b32  	%r10629, %r10629, -2147483648;
	st.local.u32 	[%rd24+64], %r10629;
	bra.uni 	BB6_324;

BB6_156:
	setp.eq.s32	%p86, %r528, 75;
	@%p86 bra 	BB6_157;
	bra.uni 	BB6_324;

BB6_157:
	or.b32  	%r10613, %r10613, -2147483648;
	st.local.u32 	[%rd24+128], %r10613;
	bra.uni 	BB6_324;

BB6_92:
	setp.eq.s32	%p134, %r528, 43;
	@%p134 bra 	BB6_93;
	bra.uni 	BB6_324;

BB6_93:
	or.b32  	%r10621, %r10621, -2147483648;
	st.local.u32 	[%rd24+96], %r10621;
	bra.uni 	BB6_324;

BB6_219:
	setp.eq.s32	%p39, %r528, 107;
	@%p39 bra 	BB6_220;
	bra.uni 	BB6_324;

BB6_220:
	or.b32  	%r10605, %r10605, -2147483648;
	st.local.u32 	[%rd24+160], %r10605;
	bra.uni 	BB6_324;

BB6_60:
	setp.eq.s32	%p158, %r528, 27;
	@%p158 bra 	BB6_61;
	bra.uni 	BB6_324;

BB6_61:
	or.b32  	%r10625, %r10625, -2147483648;
	st.local.u32 	[%rd24+80], %r10625;
	bra.uni 	BB6_324;

BB6_187:
	setp.eq.s32	%p63, %r528, 91;
	@%p63 bra 	BB6_188;
	bra.uni 	BB6_324;

BB6_188:
	or.b32  	%r10609, %r10609, -2147483648;
	st.local.u32 	[%rd24+144], %r10609;
	bra.uni 	BB6_324;

BB6_123:
	setp.eq.s32	%p111, %r528, 59;
	@%p111 bra 	BB6_124;
	bra.uni 	BB6_324;

BB6_124:
	or.b32  	%r10617, %r10617, -2147483648;
	st.local.u32 	[%rd24+112], %r10617;
	bra.uni 	BB6_324;

BB6_250:
	setp.eq.s32	%p16, %r528, 123;
	@%p16 bra 	BB6_251;
	bra.uni 	BB6_324;

BB6_251:
	or.b32  	%r10601, %r10601, -2147483648;
	st.local.u32 	[%rd24+176], %r10601;
	bra.uni 	BB6_324;

BB6_21:
	setp.eq.s32	%p187, %r528, 7;
	@%p187 bra 	BB6_22;
	bra.uni 	BB6_324;

BB6_22:
	or.b32  	%r10630, %r10630, -2147483648;
	st.local.u32 	[%rd25+4], %r10630;
	bra.uni 	BB6_324;

BB6_148:
	setp.eq.s32	%p92, %r528, 71;
	@%p92 bra 	BB6_149;
	bra.uni 	BB6_324;

BB6_149:
	or.b32  	%r10614, %r10614, -2147483648;
	st.local.u32 	[%rd33+4], %r10614;
	bra.uni 	BB6_324;

BB6_84:
	setp.eq.s32	%p140, %r528, 39;
	@%p140 bra 	BB6_85;
	bra.uni 	BB6_324;

BB6_85:
	or.b32  	%r10622, %r10622, -2147483648;
	st.local.u32 	[%rd29+4], %r10622;
	bra.uni 	BB6_324;

BB6_211:
	setp.eq.s32	%p45, %r528, 103;
	@%p45 bra 	BB6_212;
	bra.uni 	BB6_324;

BB6_212:
	or.b32  	%r10606, %r10606, -2147483648;
	st.local.u32 	[%rd37+4], %r10606;
	bra.uni 	BB6_324;

BB6_52:
	setp.eq.s32	%p164, %r528, 23;
	@%p164 bra 	BB6_53;
	bra.uni 	BB6_324;

BB6_53:
	or.b32  	%r10626, %r10626, -2147483648;
	st.local.u32 	[%rd27+4], %r10626;
	bra.uni 	BB6_324;

BB6_179:
	setp.eq.s32	%p69, %r528, 87;
	@%p69 bra 	BB6_180;
	bra.uni 	BB6_324;

BB6_180:
	or.b32  	%r10610, %r10610, -2147483648;
	st.local.u32 	[%rd35+4], %r10610;
	bra.uni 	BB6_324;

BB6_115:
	setp.eq.s32	%p117, %r528, 55;
	@%p117 bra 	BB6_116;
	bra.uni 	BB6_324;

BB6_116:
	or.b32  	%r10618, %r10618, -2147483648;
	st.local.u32 	[%rd31+4], %r10618;
	bra.uni 	BB6_324;

BB6_242:
	setp.eq.s32	%p22, %r528, 119;
	@%p22 bra 	BB6_243;
	bra.uni 	BB6_324;

BB6_243:
	or.b32  	%r10602, %r10602, -2147483648;
	st.local.u32 	[%rd39+4], %r10602;
	bra.uni 	BB6_324;

BB6_36:
	setp.eq.s32	%p176, %r528, 15;
	@%p176 bra 	BB6_37;
	bra.uni 	BB6_324;

BB6_37:
	or.b32  	%r10628, %r10628, -2147483648;
	st.local.u32 	[%rd26+4], %r10628;
	bra.uni 	BB6_324;

BB6_163:
	setp.eq.s32	%p81, %r528, 79;
	@%p81 bra 	BB6_164;
	bra.uni 	BB6_324;

BB6_164:
	or.b32  	%r10612, %r10612, -2147483648;
	st.local.u32 	[%rd34+4], %r10612;
	bra.uni 	BB6_324;

BB6_99:
	setp.eq.s32	%p129, %r528, 47;
	@%p129 bra 	BB6_100;
	bra.uni 	BB6_324;

BB6_100:
	or.b32  	%r10620, %r10620, -2147483648;
	st.local.u32 	[%rd30+4], %r10620;
	bra.uni 	BB6_324;

BB6_226:
	setp.eq.s32	%p34, %r528, 111;
	@%p34 bra 	BB6_227;
	bra.uni 	BB6_324;

BB6_227:
	or.b32  	%r10604, %r10604, -2147483648;
	st.local.u32 	[%rd38+4], %r10604;
	bra.uni 	BB6_324;

BB6_67:
	setp.eq.s32	%p153, %r528, 31;
	@%p153 bra 	BB6_68;
	bra.uni 	BB6_324;

BB6_68:
	or.b32  	%r10624, %r10624, -2147483648;
	st.local.u32 	[%rd28+4], %r10624;
	bra.uni 	BB6_324;

BB6_194:
	setp.eq.s32	%p58, %r528, 95;
	@%p58 bra 	BB6_195;
	bra.uni 	BB6_324;

BB6_195:
	or.b32  	%r10608, %r10608, -2147483648;
	st.local.u32 	[%rd36+4], %r10608;
	bra.uni 	BB6_324;

BB6_130:
	setp.eq.s32	%p106, %r528, 63;
	@%p106 bra 	BB6_131;
	bra.uni 	BB6_324;

BB6_131:
	or.b32  	%r10616, %r10616, -2147483648;
	st.local.u32 	[%rd32+4], %r10616;
	bra.uni 	BB6_324;

BB6_257:
	setp.ne.s32	%p11, %r528, 127;
	@%p11 bra 	BB6_324;

	or.b32  	%r10600, %r10600, -2147483648;
	st.local.u32 	[%rd40+4], %r10600;
	bra.uni 	BB6_324;

BB6_334:
	setp.eq.s32	%p386, %r2663, 1;
	@%p386 bra 	BB6_335;
	bra.uni 	BB6_646;

BB6_335:
	ld.local.u32 	%r4867, [%rd24+56];
	or.b32  	%r4868, %r4867, 32768;
	st.local.u32 	[%rd24+56], %r4868;
	bra.uni 	BB6_646;

BB6_461:
	setp.eq.s32	%p291, %r2663, 65;
	@%p291 bra 	BB6_462;
	bra.uni 	BB6_646;

BB6_462:
	ld.local.u32 	%r4739, [%rd24+120];
	or.b32  	%r4740, %r4739, 32768;
	st.local.u32 	[%rd24+120], %r4740;
	bra.uni 	BB6_646;

BB6_397:
	setp.eq.s32	%p339, %r2663, 33;
	@%p339 bra 	BB6_398;
	bra.uni 	BB6_646;

BB6_398:
	ld.local.u32 	%r4803, [%rd24+88];
	or.b32  	%r4804, %r4803, 32768;
	st.local.u32 	[%rd24+88], %r4804;
	bra.uni 	BB6_646;

BB6_524:
	setp.eq.s32	%p244, %r2663, 97;
	@%p244 bra 	BB6_525;
	bra.uni 	BB6_646;

BB6_525:
	ld.local.u32 	%r4675, [%rd24+152];
	or.b32  	%r4676, %r4675, 32768;
	st.local.u32 	[%rd24+152], %r4676;
	bra.uni 	BB6_646;

BB6_365:
	setp.eq.s32	%p363, %r2663, 17;
	@%p363 bra 	BB6_366;
	bra.uni 	BB6_646;

BB6_366:
	ld.local.u32 	%r4835, [%rd24+72];
	or.b32  	%r4836, %r4835, 32768;
	st.local.u32 	[%rd24+72], %r4836;
	bra.uni 	BB6_646;

BB6_492:
	setp.eq.s32	%p268, %r2663, 81;
	@%p268 bra 	BB6_493;
	bra.uni 	BB6_646;

BB6_493:
	ld.local.u32 	%r4707, [%rd24+136];
	or.b32  	%r4708, %r4707, 32768;
	st.local.u32 	[%rd24+136], %r4708;
	bra.uni 	BB6_646;

BB6_428:
	setp.eq.s32	%p316, %r2663, 49;
	@%p316 bra 	BB6_429;
	bra.uni 	BB6_646;

BB6_429:
	ld.local.u32 	%r4771, [%rd24+104];
	or.b32  	%r4772, %r4771, 32768;
	st.local.u32 	[%rd24+104], %r4772;
	bra.uni 	BB6_646;

BB6_555:
	setp.eq.s32	%p221, %r2663, 113;
	@%p221 bra 	BB6_556;
	bra.uni 	BB6_646;

BB6_556:
	ld.local.u32 	%r4643, [%rd24+168];
	or.b32  	%r4644, %r4643, 32768;
	st.local.u32 	[%rd24+168], %r4644;
	bra.uni 	BB6_646;

BB6_349:
	setp.eq.s32	%p375, %r2663, 9;
	@%p375 bra 	BB6_350;
	bra.uni 	BB6_646;

BB6_350:
	ld.local.u32 	%r4851, [%rd24+64];
	or.b32  	%r4852, %r4851, 32768;
	st.local.u32 	[%rd24+64], %r4852;
	bra.uni 	BB6_646;

BB6_476:
	setp.eq.s32	%p280, %r2663, 73;
	@%p280 bra 	BB6_477;
	bra.uni 	BB6_646;

BB6_477:
	ld.local.u32 	%r4723, [%rd24+128];
	or.b32  	%r4724, %r4723, 32768;
	st.local.u32 	[%rd24+128], %r4724;
	bra.uni 	BB6_646;

BB6_412:
	setp.eq.s32	%p328, %r2663, 41;
	@%p328 bra 	BB6_413;
	bra.uni 	BB6_646;

BB6_413:
	ld.local.u32 	%r4787, [%rd24+96];
	or.b32  	%r4788, %r4787, 32768;
	st.local.u32 	[%rd24+96], %r4788;
	bra.uni 	BB6_646;

BB6_539:
	setp.eq.s32	%p233, %r2663, 105;
	@%p233 bra 	BB6_540;
	bra.uni 	BB6_646;

BB6_540:
	ld.local.u32 	%r4659, [%rd24+160];
	or.b32  	%r4660, %r4659, 32768;
	st.local.u32 	[%rd24+160], %r4660;
	bra.uni 	BB6_646;

BB6_380:
	setp.eq.s32	%p352, %r2663, 25;
	@%p352 bra 	BB6_381;
	bra.uni 	BB6_646;

BB6_381:
	ld.local.u32 	%r4819, [%rd24+80];
	or.b32  	%r4820, %r4819, 32768;
	st.local.u32 	[%rd24+80], %r4820;
	bra.uni 	BB6_646;

BB6_507:
	setp.eq.s32	%p257, %r2663, 89;
	@%p257 bra 	BB6_508;
	bra.uni 	BB6_646;

BB6_508:
	ld.local.u32 	%r4691, [%rd24+144];
	or.b32  	%r4692, %r4691, 32768;
	st.local.u32 	[%rd24+144], %r4692;
	bra.uni 	BB6_646;

BB6_443:
	setp.eq.s32	%p305, %r2663, 57;
	@%p305 bra 	BB6_444;
	bra.uni 	BB6_646;

BB6_444:
	ld.local.u32 	%r4755, [%rd24+112];
	or.b32  	%r4756, %r4755, 32768;
	st.local.u32 	[%rd24+112], %r4756;
	bra.uni 	BB6_646;

BB6_570:
	setp.eq.s32	%p210, %r2663, 121;
	@%p210 bra 	BB6_571;
	bra.uni 	BB6_646;

BB6_571:
	ld.local.u32 	%r4627, [%rd24+176];
	or.b32  	%r4628, %r4627, 32768;
	st.local.u32 	[%rd24+176], %r4628;
	bra.uni 	BB6_646;

BB6_341:
	setp.eq.s32	%p381, %r2663, 5;
	@%p381 bra 	BB6_342;
	bra.uni 	BB6_646;

BB6_342:
	ld.local.u32 	%r4859, [%rd25+4];
	or.b32  	%r4860, %r4859, 32768;
	st.local.u32 	[%rd25+4], %r4860;
	bra.uni 	BB6_646;

BB6_468:
	setp.eq.s32	%p286, %r2663, 69;
	@%p286 bra 	BB6_469;
	bra.uni 	BB6_646;

BB6_469:
	ld.local.u32 	%r4731, [%rd33+4];
	or.b32  	%r4732, %r4731, 32768;
	st.local.u32 	[%rd33+4], %r4732;
	bra.uni 	BB6_646;

BB6_404:
	setp.eq.s32	%p334, %r2663, 37;
	@%p334 bra 	BB6_405;
	bra.uni 	BB6_646;

BB6_405:
	ld.local.u32 	%r4795, [%rd29+4];
	or.b32  	%r4796, %r4795, 32768;
	st.local.u32 	[%rd29+4], %r4796;
	bra.uni 	BB6_646;

BB6_531:
	setp.eq.s32	%p239, %r2663, 101;
	@%p239 bra 	BB6_532;
	bra.uni 	BB6_646;

BB6_532:
	ld.local.u32 	%r4667, [%rd37+4];
	or.b32  	%r4668, %r4667, 32768;
	st.local.u32 	[%rd37+4], %r4668;
	bra.uni 	BB6_646;

BB6_372:
	setp.eq.s32	%p358, %r2663, 21;
	@%p358 bra 	BB6_373;
	bra.uni 	BB6_646;

BB6_373:
	ld.local.u32 	%r4827, [%rd27+4];
	or.b32  	%r4828, %r4827, 32768;
	st.local.u32 	[%rd27+4], %r4828;
	bra.uni 	BB6_646;

BB6_499:
	setp.eq.s32	%p263, %r2663, 85;
	@%p263 bra 	BB6_500;
	bra.uni 	BB6_646;

BB6_500:
	ld.local.u32 	%r4699, [%rd35+4];
	or.b32  	%r4700, %r4699, 32768;
	st.local.u32 	[%rd35+4], %r4700;
	bra.uni 	BB6_646;

BB6_435:
	setp.eq.s32	%p311, %r2663, 53;
	@%p311 bra 	BB6_436;
	bra.uni 	BB6_646;

BB6_436:
	ld.local.u32 	%r4763, [%rd31+4];
	or.b32  	%r4764, %r4763, 32768;
	st.local.u32 	[%rd31+4], %r4764;
	bra.uni 	BB6_646;

BB6_562:
	setp.eq.s32	%p216, %r2663, 117;
	@%p216 bra 	BB6_563;
	bra.uni 	BB6_646;

BB6_563:
	ld.local.u32 	%r4635, [%rd39+4];
	or.b32  	%r4636, %r4635, 32768;
	st.local.u32 	[%rd39+4], %r4636;
	bra.uni 	BB6_646;

BB6_356:
	setp.eq.s32	%p370, %r2663, 13;
	@%p370 bra 	BB6_357;
	bra.uni 	BB6_646;

BB6_357:
	ld.local.u32 	%r4843, [%rd26+4];
	or.b32  	%r4844, %r4843, 32768;
	st.local.u32 	[%rd26+4], %r4844;
	bra.uni 	BB6_646;

BB6_483:
	setp.eq.s32	%p275, %r2663, 77;
	@%p275 bra 	BB6_484;
	bra.uni 	BB6_646;

BB6_484:
	ld.local.u32 	%r4715, [%rd34+4];
	or.b32  	%r4716, %r4715, 32768;
	st.local.u32 	[%rd34+4], %r4716;
	bra.uni 	BB6_646;

BB6_419:
	setp.eq.s32	%p323, %r2663, 45;
	@%p323 bra 	BB6_420;
	bra.uni 	BB6_646;

BB6_420:
	ld.local.u32 	%r4779, [%rd30+4];
	or.b32  	%r4780, %r4779, 32768;
	st.local.u32 	[%rd30+4], %r4780;
	bra.uni 	BB6_646;

BB6_546:
	setp.eq.s32	%p228, %r2663, 109;
	@%p228 bra 	BB6_547;
	bra.uni 	BB6_646;

BB6_547:
	ld.local.u32 	%r4651, [%rd38+4];
	or.b32  	%r4652, %r4651, 32768;
	st.local.u32 	[%rd38+4], %r4652;
	bra.uni 	BB6_646;

BB6_387:
	setp.eq.s32	%p347, %r2663, 29;
	@%p347 bra 	BB6_388;
	bra.uni 	BB6_646;

BB6_388:
	ld.local.u32 	%r4811, [%rd28+4];
	or.b32  	%r4812, %r4811, 32768;
	st.local.u32 	[%rd28+4], %r4812;
	bra.uni 	BB6_646;

BB6_514:
	setp.eq.s32	%p252, %r2663, 93;
	@%p252 bra 	BB6_515;
	bra.uni 	BB6_646;

BB6_515:
	ld.local.u32 	%r4683, [%rd36+4];
	or.b32  	%r4684, %r4683, 32768;
	st.local.u32 	[%rd36+4], %r4684;
	bra.uni 	BB6_646;

BB6_450:
	setp.eq.s32	%p300, %r2663, 61;
	@%p300 bra 	BB6_451;
	bra.uni 	BB6_646;

BB6_451:
	ld.local.u32 	%r4747, [%rd32+4];
	or.b32  	%r4748, %r4747, 32768;
	st.local.u32 	[%rd32+4], %r4748;
	bra.uni 	BB6_646;

BB6_577:
	setp.eq.s32	%p205, %r2663, 125;
	@%p205 bra 	BB6_578;
	bra.uni 	BB6_646;

BB6_578:
	ld.local.u32 	%r4619, [%rd40+4];
	or.b32  	%r4620, %r4619, 32768;
	st.local.u32 	[%rd40+4], %r4620;
	bra.uni 	BB6_646;

BB6_337:
	setp.eq.s32	%p384, %r2663, 3;
	@%p384 bra 	BB6_338;
	bra.uni 	BB6_646;

BB6_338:
	ld.local.u32 	%r4863, [%rd24+56];
	or.b32  	%r4864, %r4863, -2147483648;
	st.local.u32 	[%rd24+56], %r4864;
	bra.uni 	BB6_646;

BB6_464:
	setp.eq.s32	%p289, %r2663, 67;
	@%p289 bra 	BB6_465;
	bra.uni 	BB6_646;

BB6_465:
	ld.local.u32 	%r4735, [%rd24+120];
	or.b32  	%r4736, %r4735, -2147483648;
	st.local.u32 	[%rd24+120], %r4736;
	bra.uni 	BB6_646;

BB6_400:
	setp.eq.s32	%p337, %r2663, 35;
	@%p337 bra 	BB6_401;
	bra.uni 	BB6_646;

BB6_401:
	ld.local.u32 	%r4799, [%rd24+88];
	or.b32  	%r4800, %r4799, -2147483648;
	st.local.u32 	[%rd24+88], %r4800;
	bra.uni 	BB6_646;

BB6_527:
	setp.eq.s32	%p242, %r2663, 99;
	@%p242 bra 	BB6_528;
	bra.uni 	BB6_646;

BB6_528:
	ld.local.u32 	%r4671, [%rd24+152];
	or.b32  	%r4672, %r4671, -2147483648;
	st.local.u32 	[%rd24+152], %r4672;
	bra.uni 	BB6_646;

BB6_368:
	setp.eq.s32	%p361, %r2663, 19;
	@%p361 bra 	BB6_369;
	bra.uni 	BB6_646;

BB6_369:
	ld.local.u32 	%r4831, [%rd24+72];
	or.b32  	%r4832, %r4831, -2147483648;
	st.local.u32 	[%rd24+72], %r4832;
	bra.uni 	BB6_646;

BB6_495:
	setp.eq.s32	%p266, %r2663, 83;
	@%p266 bra 	BB6_496;
	bra.uni 	BB6_646;

BB6_496:
	ld.local.u32 	%r4703, [%rd24+136];
	or.b32  	%r4704, %r4703, -2147483648;
	st.local.u32 	[%rd24+136], %r4704;
	bra.uni 	BB6_646;

BB6_431:
	setp.eq.s32	%p314, %r2663, 51;
	@%p314 bra 	BB6_432;
	bra.uni 	BB6_646;

BB6_432:
	ld.local.u32 	%r4767, [%rd24+104];
	or.b32  	%r4768, %r4767, -2147483648;
	st.local.u32 	[%rd24+104], %r4768;
	bra.uni 	BB6_646;

BB6_558:
	setp.eq.s32	%p219, %r2663, 115;
	@%p219 bra 	BB6_559;
	bra.uni 	BB6_646;

BB6_559:
	ld.local.u32 	%r4639, [%rd24+168];
	or.b32  	%r4640, %r4639, -2147483648;
	st.local.u32 	[%rd24+168], %r4640;
	bra.uni 	BB6_646;

BB6_352:
	setp.eq.s32	%p373, %r2663, 11;
	@%p373 bra 	BB6_353;
	bra.uni 	BB6_646;

BB6_353:
	ld.local.u32 	%r4847, [%rd24+64];
	or.b32  	%r4848, %r4847, -2147483648;
	st.local.u32 	[%rd24+64], %r4848;
	bra.uni 	BB6_646;

BB6_479:
	setp.eq.s32	%p278, %r2663, 75;
	@%p278 bra 	BB6_480;
	bra.uni 	BB6_646;

BB6_480:
	ld.local.u32 	%r4719, [%rd24+128];
	or.b32  	%r4720, %r4719, -2147483648;
	st.local.u32 	[%rd24+128], %r4720;
	bra.uni 	BB6_646;

BB6_415:
	setp.eq.s32	%p326, %r2663, 43;
	@%p326 bra 	BB6_416;
	bra.uni 	BB6_646;

BB6_416:
	ld.local.u32 	%r4783, [%rd24+96];
	or.b32  	%r4784, %r4783, -2147483648;
	st.local.u32 	[%rd24+96], %r4784;
	bra.uni 	BB6_646;

BB6_542:
	setp.eq.s32	%p231, %r2663, 107;
	@%p231 bra 	BB6_543;
	bra.uni 	BB6_646;

BB6_543:
	ld.local.u32 	%r4655, [%rd24+160];
	or.b32  	%r4656, %r4655, -2147483648;
	st.local.u32 	[%rd24+160], %r4656;
	bra.uni 	BB6_646;

BB6_383:
	setp.eq.s32	%p350, %r2663, 27;
	@%p350 bra 	BB6_384;
	bra.uni 	BB6_646;

BB6_384:
	ld.local.u32 	%r4815, [%rd24+80];
	or.b32  	%r4816, %r4815, -2147483648;
	st.local.u32 	[%rd24+80], %r4816;
	bra.uni 	BB6_646;

BB6_510:
	setp.eq.s32	%p255, %r2663, 91;
	@%p255 bra 	BB6_511;
	bra.uni 	BB6_646;

BB6_511:
	ld.local.u32 	%r4687, [%rd24+144];
	or.b32  	%r4688, %r4687, -2147483648;
	st.local.u32 	[%rd24+144], %r4688;
	bra.uni 	BB6_646;

BB6_446:
	setp.eq.s32	%p303, %r2663, 59;
	@%p303 bra 	BB6_447;
	bra.uni 	BB6_646;

BB6_447:
	ld.local.u32 	%r4751, [%rd24+112];
	or.b32  	%r4752, %r4751, -2147483648;
	st.local.u32 	[%rd24+112], %r4752;
	bra.uni 	BB6_646;

BB6_573:
	setp.eq.s32	%p208, %r2663, 123;
	@%p208 bra 	BB6_574;
	bra.uni 	BB6_646;

BB6_574:
	ld.local.u32 	%r4623, [%rd24+176];
	or.b32  	%r4624, %r4623, -2147483648;
	st.local.u32 	[%rd24+176], %r4624;
	bra.uni 	BB6_646;

BB6_344:
	setp.eq.s32	%p379, %r2663, 7;
	@%p379 bra 	BB6_345;
	bra.uni 	BB6_646;

BB6_345:
	ld.local.u32 	%r4855, [%rd25+4];
	or.b32  	%r4856, %r4855, -2147483648;
	st.local.u32 	[%rd25+4], %r4856;
	bra.uni 	BB6_646;

BB6_471:
	setp.eq.s32	%p284, %r2663, 71;
	@%p284 bra 	BB6_472;
	bra.uni 	BB6_646;

BB6_472:
	ld.local.u32 	%r4727, [%rd33+4];
	or.b32  	%r4728, %r4727, -2147483648;
	st.local.u32 	[%rd33+4], %r4728;
	bra.uni 	BB6_646;

BB6_407:
	setp.eq.s32	%p332, %r2663, 39;
	@%p332 bra 	BB6_408;
	bra.uni 	BB6_646;

BB6_408:
	ld.local.u32 	%r4791, [%rd29+4];
	or.b32  	%r4792, %r4791, -2147483648;
	st.local.u32 	[%rd29+4], %r4792;
	bra.uni 	BB6_646;

BB6_534:
	setp.eq.s32	%p237, %r2663, 103;
	@%p237 bra 	BB6_535;
	bra.uni 	BB6_646;

BB6_535:
	ld.local.u32 	%r4663, [%rd37+4];
	or.b32  	%r4664, %r4663, -2147483648;
	st.local.u32 	[%rd37+4], %r4664;
	bra.uni 	BB6_646;

BB6_375:
	setp.eq.s32	%p356, %r2663, 23;
	@%p356 bra 	BB6_376;
	bra.uni 	BB6_646;

BB6_376:
	ld.local.u32 	%r4823, [%rd27+4];
	or.b32  	%r4824, %r4823, -2147483648;
	st.local.u32 	[%rd27+4], %r4824;
	bra.uni 	BB6_646;

BB6_502:
	setp.eq.s32	%p261, %r2663, 87;
	@%p261 bra 	BB6_503;
	bra.uni 	BB6_646;

BB6_503:
	ld.local.u32 	%r4695, [%rd35+4];
	or.b32  	%r4696, %r4695, -2147483648;
	st.local.u32 	[%rd35+4], %r4696;
	bra.uni 	BB6_646;

BB6_438:
	setp.eq.s32	%p309, %r2663, 55;
	@%p309 bra 	BB6_439;
	bra.uni 	BB6_646;

BB6_439:
	ld.local.u32 	%r4759, [%rd31+4];
	or.b32  	%r4760, %r4759, -2147483648;
	st.local.u32 	[%rd31+4], %r4760;
	bra.uni 	BB6_646;

BB6_565:
	setp.eq.s32	%p214, %r2663, 119;
	@%p214 bra 	BB6_566;
	bra.uni 	BB6_646;

BB6_566:
	ld.local.u32 	%r4631, [%rd39+4];
	or.b32  	%r4632, %r4631, -2147483648;
	st.local.u32 	[%rd39+4], %r4632;
	bra.uni 	BB6_646;

BB6_359:
	setp.eq.s32	%p368, %r2663, 15;
	@%p368 bra 	BB6_360;
	bra.uni 	BB6_646;

BB6_360:
	ld.local.u32 	%r4839, [%rd26+4];
	or.b32  	%r4840, %r4839, -2147483648;
	st.local.u32 	[%rd26+4], %r4840;
	bra.uni 	BB6_646;

BB6_486:
	setp.eq.s32	%p273, %r2663, 79;
	@%p273 bra 	BB6_487;
	bra.uni 	BB6_646;

BB6_487:
	ld.local.u32 	%r4711, [%rd34+4];
	or.b32  	%r4712, %r4711, -2147483648;
	st.local.u32 	[%rd34+4], %r4712;
	bra.uni 	BB6_646;

BB6_422:
	setp.eq.s32	%p321, %r2663, 47;
	@%p321 bra 	BB6_423;
	bra.uni 	BB6_646;

BB6_423:
	ld.local.u32 	%r4775, [%rd30+4];
	or.b32  	%r4776, %r4775, -2147483648;
	st.local.u32 	[%rd30+4], %r4776;
	bra.uni 	BB6_646;

BB6_549:
	setp.eq.s32	%p226, %r2663, 111;
	@%p226 bra 	BB6_550;
	bra.uni 	BB6_646;

BB6_550:
	ld.local.u32 	%r4647, [%rd38+4];
	or.b32  	%r4648, %r4647, -2147483648;
	st.local.u32 	[%rd38+4], %r4648;
	bra.uni 	BB6_646;

BB6_390:
	setp.eq.s32	%p345, %r2663, 31;
	@%p345 bra 	BB6_391;
	bra.uni 	BB6_646;

BB6_391:
	ld.local.u32 	%r4807, [%rd28+4];
	or.b32  	%r4808, %r4807, -2147483648;
	st.local.u32 	[%rd28+4], %r4808;
	bra.uni 	BB6_646;

BB6_517:
	setp.eq.s32	%p250, %r2663, 95;
	@%p250 bra 	BB6_518;
	bra.uni 	BB6_646;

BB6_518:
	ld.local.u32 	%r4679, [%rd36+4];
	or.b32  	%r4680, %r4679, -2147483648;
	st.local.u32 	[%rd36+4], %r4680;
	bra.uni 	BB6_646;

BB6_453:
	setp.eq.s32	%p298, %r2663, 63;
	@%p298 bra 	BB6_454;
	bra.uni 	BB6_646;

BB6_454:
	ld.local.u32 	%r4743, [%rd32+4];
	or.b32  	%r4744, %r4743, -2147483648;
	st.local.u32 	[%rd32+4], %r4744;
	bra.uni 	BB6_646;

BB6_580:
	setp.ne.s32	%p203, %r2663, 127;
	@%p203 bra 	BB6_646;

	ld.local.u32 	%r4615, [%rd40+4];
	or.b32  	%r4616, %r4615, -2147483648;
	st.local.u32 	[%rd40+4], %r4616;

BB6_646:
	add.u64 	%rd12923, %SP, 128;
	cvta.to.local.u64 	%rd12922, %rd12923;
	and.b32  	%r10582, %r244, 127;
	ld.local.u64 	%rd13037, [%rd12922];
	ld.local.u64 	%rd13036, [%rd24];
	ld.local.u64 	%rd13035, [%rd24+8];
	ld.local.u64 	%rd13034, [%rd24+16];
	ld.local.u64 	%rd13033, [%rd24+24];
	ld.local.u64 	%rd13032, [%rd24+32];
	ld.local.u64 	%rd13031, [%rd24+40];
	ld.local.u64 	%rd13030, [%rd24+48];
	ld.local.u32 	%r10691, [%rd24+56];
	ld.local.u32 	%r10690, [%rd25+4];
	setp.gt.u32	%p387, %r10582, 111;
	@%p387 bra 	BB6_648;
	bra.uni 	BB6_647;

BB6_648:
	add.u64 	%rd12925, %SP, 128;
	cvta.to.local.u64 	%rd12924, %rd12925;
	mov.b64	%rd6021, {%r10690, %r10691};
	ld.local.u32 	%r4901, [%rd24+64];
	ld.local.u32 	%r4902, [%rd26+4];
	mov.b64	%rd6022, {%r4902, %r4901};
	ld.local.u32 	%r4903, [%rd24+72];
	ld.local.u32 	%r4904, [%rd27+4];
	mov.b64	%rd6023, {%r4904, %r4903};
	ld.local.u32 	%r4905, [%rd24+80];
	ld.local.u32 	%r4906, [%rd28+4];
	mov.b64	%rd6024, {%r4906, %r4905};
	ld.local.u32 	%r4907, [%rd24+88];
	ld.local.u32 	%r4908, [%rd29+4];
	mov.b64	%rd6025, {%r4908, %r4907};
	ld.local.u32 	%r4909, [%rd24+96];
	ld.local.u32 	%r4910, [%rd30+4];
	mov.b64	%rd6026, {%r4910, %r4909};
	ld.local.u32 	%r4911, [%rd24+104];
	ld.local.u32 	%r4912, [%rd31+4];
	mov.b64	%rd6027, {%r4912, %r4911};
	ld.local.u32 	%r4913, [%rd24+112];
	ld.local.u32 	%r4914, [%rd32+4];
	mov.b64	%rd6028, {%r4914, %r4913};
	ld.local.u32 	%r4915, [%rd24+120];
	ld.local.u32 	%r4916, [%rd33+4];
	mov.b64	%rd6029, {%r4916, %r4915};
	ld.local.u32 	%r4917, [%rd24+128];
	ld.local.u32 	%r4918, [%rd34+4];
	mov.b64	%rd6030, {%r4918, %r4917};
	ld.local.u32 	%r4919, [%rd24+136];
	ld.local.u32 	%r4920, [%rd35+4];
	mov.b64	%rd6031, {%r4920, %r4919};
	ld.local.u32 	%r4921, [%rd24+144];
	ld.local.u32 	%r4922, [%rd36+4];
	mov.b64	%rd6032, {%r4922, %r4921};
	ld.local.u32 	%r4923, [%rd24+152];
	ld.local.u32 	%r4924, [%rd37+4];
	mov.b64	%rd6033, {%r4924, %r4923};
	ld.local.u32 	%r4925, [%rd24+160];
	ld.local.u32 	%r4926, [%rd38+4];
	mov.b64	%rd6034, {%r4926, %r4925};
	ld.local.u32 	%r4927, [%rd24+168];
	ld.local.u32 	%r4928, [%rd39+4];
	mov.b64	%rd6035, {%r4928, %r4927};
	ld.local.u32 	%r4929, [%rd24+176];
	ld.local.u32 	%r4930, [%rd40+4];
	mov.b64	%rd6036, {%r4930, %r4929};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4931,%dummy}, %rd13033;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4932}, %rd13033;
	}
	shf.r.wrap.b32 	%r4933, %r4932, %r4931, 18;
	shf.r.wrap.b32 	%r4934, %r4931, %r4932, 18;
	mov.b64 	%rd6037, {%r4934, %r4933};
	shf.r.wrap.b32 	%r4935, %r4932, %r4931, 14;
	shf.r.wrap.b32 	%r4936, %r4931, %r4932, 14;
	mov.b64 	%rd6038, {%r4936, %r4935};
	xor.b64  	%rd6039, %rd6037, %rd6038;
	shf.l.wrap.b32 	%r4937, %r4931, %r4932, 23;
	shf.l.wrap.b32 	%r4938, %r4932, %r4931, 23;
	mov.b64 	%rd6040, {%r4938, %r4937};
	xor.b64  	%rd6041, %rd6039, %rd6040;
	xor.b64  	%rd6042, %rd13031, %rd13032;
	and.b64  	%rd6043, %rd6042, %rd13033;
	xor.b64  	%rd6044, %rd6043, %rd13031;
	add.s64 	%rd6045, %rd6044, %rd13030;
	add.s64 	%rd6046, %rd6045, %rd6021;
	add.s64 	%rd6047, %rd6046, %rd13021;
	add.s64 	%rd6048, %rd6047, %rd6041;
	add.s64 	%rd6049, %rd6048, %rd13034;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4939}, %rd13037;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4940,%dummy}, %rd13037;
	}
	shf.l.wrap.b32 	%r4941, %r4940, %r4939, 30;
	shf.l.wrap.b32 	%r4942, %r4939, %r4940, 30;
	mov.b64 	%rd6050, {%r4942, %r4941};
	shf.r.wrap.b32 	%r4943, %r4939, %r4940, 28;
	shf.r.wrap.b32 	%r4944, %r4940, %r4939, 28;
	mov.b64 	%rd6051, {%r4944, %r4943};
	xor.b64  	%rd6052, %rd6050, %rd6051;
	shf.l.wrap.b32 	%r4945, %r4940, %r4939, 25;
	shf.l.wrap.b32 	%r4946, %r4939, %r4940, 25;
	mov.b64 	%rd6053, {%r4946, %r4945};
	xor.b64  	%rd6054, %rd6052, %rd6053;
	xor.b64  	%rd6055, %rd13036, %rd13037;
	xor.b64  	%rd6056, %rd13035, %rd13037;
	and.b64  	%rd6057, %rd6056, %rd6055;
	xor.b64  	%rd6058, %rd6057, %rd13037;
	add.s64 	%rd6059, %rd6048, %rd6058;
	add.s64 	%rd6060, %rd6059, %rd6054;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4947,%dummy}, %rd6049;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4948}, %rd6049;
	}
	shf.r.wrap.b32 	%r4949, %r4948, %r4947, 14;
	shf.r.wrap.b32 	%r4950, %r4947, %r4948, 14;
	mov.b64 	%rd6061, {%r4950, %r4949};
	shf.r.wrap.b32 	%r4951, %r4948, %r4947, 18;
	shf.r.wrap.b32 	%r4952, %r4947, %r4948, 18;
	mov.b64 	%rd6062, {%r4952, %r4951};
	xor.b64  	%rd6063, %rd6062, %rd6061;
	shf.l.wrap.b32 	%r4953, %r4947, %r4948, 23;
	shf.l.wrap.b32 	%r4954, %r4948, %r4947, 23;
	mov.b64 	%rd6064, {%r4954, %r4953};
	xor.b64  	%rd6065, %rd6063, %rd6064;
	xor.b64  	%rd6066, %rd13032, %rd13033;
	and.b64  	%rd6067, %rd6049, %rd6066;
	xor.b64  	%rd6068, %rd6067, %rd13032;
	add.s64 	%rd6069, %rd6022, %rd13031;
	add.s64 	%rd6070, %rd6069, %rd13020;
	add.s64 	%rd6071, %rd6070, %rd6068;
	add.s64 	%rd6072, %rd6071, %rd6065;
	add.s64 	%rd6073, %rd6072, %rd13035;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4955,%dummy}, %rd6060;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4956}, %rd6060;
	}
	shf.r.wrap.b32 	%r4957, %r4956, %r4955, 28;
	shf.r.wrap.b32 	%r4958, %r4955, %r4956, 28;
	mov.b64 	%rd6074, {%r4958, %r4957};
	shf.l.wrap.b32 	%r4959, %r4955, %r4956, 30;
	shf.l.wrap.b32 	%r4960, %r4956, %r4955, 30;
	mov.b64 	%rd6075, {%r4960, %r4959};
	xor.b64  	%rd6076, %rd6075, %rd6074;
	shf.l.wrap.b32 	%r4961, %r4955, %r4956, 25;
	shf.l.wrap.b32 	%r4962, %r4956, %r4955, 25;
	mov.b64 	%rd6077, {%r4962, %r4961};
	xor.b64  	%rd6078, %rd6076, %rd6077;
	xor.b64  	%rd6079, %rd6060, %rd13036;
	xor.b64  	%rd6080, %rd6060, %rd13037;
	and.b64  	%rd6081, %rd6080, %rd6079;
	xor.b64  	%rd6082, %rd6081, %rd6060;
	add.s64 	%rd6083, %rd6072, %rd6082;
	add.s64 	%rd6084, %rd6083, %rd6078;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4963,%dummy}, %rd6073;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4964}, %rd6073;
	}
	shf.r.wrap.b32 	%r4965, %r4964, %r4963, 14;
	shf.r.wrap.b32 	%r4966, %r4963, %r4964, 14;
	mov.b64 	%rd6085, {%r4966, %r4965};
	shf.r.wrap.b32 	%r4967, %r4964, %r4963, 18;
	shf.r.wrap.b32 	%r4968, %r4963, %r4964, 18;
	mov.b64 	%rd6086, {%r4968, %r4967};
	xor.b64  	%rd6087, %rd6086, %rd6085;
	shf.l.wrap.b32 	%r4969, %r4963, %r4964, 23;
	shf.l.wrap.b32 	%r4970, %r4964, %r4963, 23;
	mov.b64 	%rd6088, {%r4970, %r4969};
	xor.b64  	%rd6089, %rd6087, %rd6088;
	xor.b64  	%rd6090, %rd6049, %rd13033;
	and.b64  	%rd6091, %rd6073, %rd6090;
	xor.b64  	%rd6092, %rd6091, %rd13033;
	add.s64 	%rd6093, %rd6023, %rd13032;
	add.s64 	%rd6094, %rd6093, %rd13019;
	add.s64 	%rd6095, %rd6094, %rd6092;
	add.s64 	%rd6096, %rd6095, %rd6089;
	add.s64 	%rd6097, %rd6096, %rd13036;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4971,%dummy}, %rd6084;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4972}, %rd6084;
	}
	shf.r.wrap.b32 	%r4973, %r4972, %r4971, 28;
	shf.r.wrap.b32 	%r4974, %r4971, %r4972, 28;
	mov.b64 	%rd6098, {%r4974, %r4973};
	shf.l.wrap.b32 	%r4975, %r4971, %r4972, 30;
	shf.l.wrap.b32 	%r4976, %r4972, %r4971, 30;
	mov.b64 	%rd6099, {%r4976, %r4975};
	xor.b64  	%rd6100, %rd6099, %rd6098;
	shf.l.wrap.b32 	%r4977, %r4971, %r4972, 25;
	shf.l.wrap.b32 	%r4978, %r4972, %r4971, 25;
	mov.b64 	%rd6101, {%r4978, %r4977};
	xor.b64  	%rd6102, %rd6100, %rd6101;
	xor.b64  	%rd6103, %rd6084, %rd13037;
	xor.b64  	%rd6104, %rd6084, %rd6060;
	and.b64  	%rd6105, %rd6104, %rd6103;
	xor.b64  	%rd6106, %rd6105, %rd6084;
	add.s64 	%rd6107, %rd6096, %rd6106;
	add.s64 	%rd6108, %rd6107, %rd6102;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4979,%dummy}, %rd6097;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4980}, %rd6097;
	}
	shf.r.wrap.b32 	%r4981, %r4980, %r4979, 14;
	shf.r.wrap.b32 	%r4982, %r4979, %r4980, 14;
	mov.b64 	%rd6109, {%r4982, %r4981};
	shf.r.wrap.b32 	%r4983, %r4980, %r4979, 18;
	shf.r.wrap.b32 	%r4984, %r4979, %r4980, 18;
	mov.b64 	%rd6110, {%r4984, %r4983};
	xor.b64  	%rd6111, %rd6110, %rd6109;
	shf.l.wrap.b32 	%r4985, %r4979, %r4980, 23;
	shf.l.wrap.b32 	%r4986, %r4980, %r4979, 23;
	mov.b64 	%rd6112, {%r4986, %r4985};
	xor.b64  	%rd6113, %rd6111, %rd6112;
	xor.b64  	%rd6114, %rd6073, %rd6049;
	and.b64  	%rd6115, %rd6097, %rd6114;
	xor.b64  	%rd6116, %rd6115, %rd6049;
	add.s64 	%rd6117, %rd6024, %rd13033;
	add.s64 	%rd6118, %rd6117, %rd13018;
	add.s64 	%rd6119, %rd6118, %rd6116;
	add.s64 	%rd6120, %rd6119, %rd6113;
	add.s64 	%rd6121, %rd6120, %rd13037;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4987,%dummy}, %rd6108;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4988}, %rd6108;
	}
	shf.r.wrap.b32 	%r4989, %r4988, %r4987, 28;
	shf.r.wrap.b32 	%r4990, %r4987, %r4988, 28;
	mov.b64 	%rd6122, {%r4990, %r4989};
	shf.l.wrap.b32 	%r4991, %r4987, %r4988, 30;
	shf.l.wrap.b32 	%r4992, %r4988, %r4987, 30;
	mov.b64 	%rd6123, {%r4992, %r4991};
	xor.b64  	%rd6124, %rd6123, %rd6122;
	shf.l.wrap.b32 	%r4993, %r4987, %r4988, 25;
	shf.l.wrap.b32 	%r4994, %r4988, %r4987, 25;
	mov.b64 	%rd6125, {%r4994, %r4993};
	xor.b64  	%rd6126, %rd6124, %rd6125;
	xor.b64  	%rd6127, %rd6108, %rd6060;
	xor.b64  	%rd6128, %rd6108, %rd6084;
	and.b64  	%rd6129, %rd6128, %rd6127;
	xor.b64  	%rd6130, %rd6129, %rd6108;
	add.s64 	%rd6131, %rd6120, %rd6130;
	add.s64 	%rd6132, %rd6131, %rd6126;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4995,%dummy}, %rd6121;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4996}, %rd6121;
	}
	shf.r.wrap.b32 	%r4997, %r4996, %r4995, 14;
	shf.r.wrap.b32 	%r4998, %r4995, %r4996, 14;
	mov.b64 	%rd6133, {%r4998, %r4997};
	shf.r.wrap.b32 	%r4999, %r4996, %r4995, 18;
	shf.r.wrap.b32 	%r5000, %r4995, %r4996, 18;
	mov.b64 	%rd6134, {%r5000, %r4999};
	xor.b64  	%rd6135, %rd6134, %rd6133;
	shf.l.wrap.b32 	%r5001, %r4995, %r4996, 23;
	shf.l.wrap.b32 	%r5002, %r4996, %r4995, 23;
	mov.b64 	%rd6136, {%r5002, %r5001};
	xor.b64  	%rd6137, %rd6135, %rd6136;
	xor.b64  	%rd6138, %rd6097, %rd6073;
	and.b64  	%rd6139, %rd6121, %rd6138;
	xor.b64  	%rd6140, %rd6139, %rd6073;
	add.s64 	%rd6141, %rd6049, %rd6025;
	add.s64 	%rd6142, %rd6141, %rd13017;
	add.s64 	%rd6143, %rd6142, %rd6140;
	add.s64 	%rd6144, %rd6143, %rd6137;
	add.s64 	%rd6145, %rd6144, %rd6060;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5003,%dummy}, %rd6132;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5004}, %rd6132;
	}
	shf.r.wrap.b32 	%r5005, %r5004, %r5003, 28;
	shf.r.wrap.b32 	%r5006, %r5003, %r5004, 28;
	mov.b64 	%rd6146, {%r5006, %r5005};
	shf.l.wrap.b32 	%r5007, %r5003, %r5004, 30;
	shf.l.wrap.b32 	%r5008, %r5004, %r5003, 30;
	mov.b64 	%rd6147, {%r5008, %r5007};
	xor.b64  	%rd6148, %rd6147, %rd6146;
	shf.l.wrap.b32 	%r5009, %r5003, %r5004, 25;
	shf.l.wrap.b32 	%r5010, %r5004, %r5003, 25;
	mov.b64 	%rd6149, {%r5010, %r5009};
	xor.b64  	%rd6150, %rd6148, %rd6149;
	xor.b64  	%rd6151, %rd6132, %rd6084;
	xor.b64  	%rd6152, %rd6132, %rd6108;
	and.b64  	%rd6153, %rd6152, %rd6151;
	xor.b64  	%rd6154, %rd6153, %rd6132;
	add.s64 	%rd6155, %rd6144, %rd6154;
	add.s64 	%rd6156, %rd6155, %rd6150;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5011,%dummy}, %rd6145;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5012}, %rd6145;
	}
	shf.r.wrap.b32 	%r5013, %r5012, %r5011, 14;
	shf.r.wrap.b32 	%r5014, %r5011, %r5012, 14;
	mov.b64 	%rd6157, {%r5014, %r5013};
	shf.r.wrap.b32 	%r5015, %r5012, %r5011, 18;
	shf.r.wrap.b32 	%r5016, %r5011, %r5012, 18;
	mov.b64 	%rd6158, {%r5016, %r5015};
	xor.b64  	%rd6159, %rd6158, %rd6157;
	shf.l.wrap.b32 	%r5017, %r5011, %r5012, 23;
	shf.l.wrap.b32 	%r5018, %r5012, %r5011, 23;
	mov.b64 	%rd6160, {%r5018, %r5017};
	xor.b64  	%rd6161, %rd6159, %rd6160;
	xor.b64  	%rd6162, %rd6121, %rd6097;
	and.b64  	%rd6163, %rd6145, %rd6162;
	xor.b64  	%rd6164, %rd6163, %rd6097;
	add.s64 	%rd6165, %rd6073, %rd6026;
	add.s64 	%rd6166, %rd6165, %rd13016;
	add.s64 	%rd6167, %rd6166, %rd6164;
	add.s64 	%rd6168, %rd6167, %rd6161;
	add.s64 	%rd6169, %rd6168, %rd6084;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5019,%dummy}, %rd6156;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5020}, %rd6156;
	}
	shf.r.wrap.b32 	%r5021, %r5020, %r5019, 28;
	shf.r.wrap.b32 	%r5022, %r5019, %r5020, 28;
	mov.b64 	%rd6170, {%r5022, %r5021};
	shf.l.wrap.b32 	%r5023, %r5019, %r5020, 30;
	shf.l.wrap.b32 	%r5024, %r5020, %r5019, 30;
	mov.b64 	%rd6171, {%r5024, %r5023};
	xor.b64  	%rd6172, %rd6171, %rd6170;
	shf.l.wrap.b32 	%r5025, %r5019, %r5020, 25;
	shf.l.wrap.b32 	%r5026, %r5020, %r5019, 25;
	mov.b64 	%rd6173, {%r5026, %r5025};
	xor.b64  	%rd6174, %rd6172, %rd6173;
	xor.b64  	%rd6175, %rd6156, %rd6108;
	xor.b64  	%rd6176, %rd6156, %rd6132;
	and.b64  	%rd6177, %rd6176, %rd6175;
	xor.b64  	%rd6178, %rd6177, %rd6156;
	add.s64 	%rd6179, %rd6168, %rd6178;
	add.s64 	%rd6180, %rd6179, %rd6174;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5027,%dummy}, %rd6169;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5028}, %rd6169;
	}
	shf.r.wrap.b32 	%r5029, %r5028, %r5027, 14;
	shf.r.wrap.b32 	%r5030, %r5027, %r5028, 14;
	mov.b64 	%rd6181, {%r5030, %r5029};
	shf.r.wrap.b32 	%r5031, %r5028, %r5027, 18;
	shf.r.wrap.b32 	%r5032, %r5027, %r5028, 18;
	mov.b64 	%rd6182, {%r5032, %r5031};
	xor.b64  	%rd6183, %rd6182, %rd6181;
	shf.l.wrap.b32 	%r5033, %r5027, %r5028, 23;
	shf.l.wrap.b32 	%r5034, %r5028, %r5027, 23;
	mov.b64 	%rd6184, {%r5034, %r5033};
	xor.b64  	%rd6185, %rd6183, %rd6184;
	xor.b64  	%rd6186, %rd6145, %rd6121;
	and.b64  	%rd6187, %rd6169, %rd6186;
	xor.b64  	%rd6188, %rd6187, %rd6121;
	add.s64 	%rd6189, %rd6097, %rd6027;
	add.s64 	%rd6190, %rd6189, %rd13015;
	add.s64 	%rd6191, %rd6190, %rd6188;
	add.s64 	%rd6192, %rd6191, %rd6185;
	add.s64 	%rd6193, %rd6192, %rd6108;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5035,%dummy}, %rd6180;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5036}, %rd6180;
	}
	shf.r.wrap.b32 	%r5037, %r5036, %r5035, 28;
	shf.r.wrap.b32 	%r5038, %r5035, %r5036, 28;
	mov.b64 	%rd6194, {%r5038, %r5037};
	shf.l.wrap.b32 	%r5039, %r5035, %r5036, 30;
	shf.l.wrap.b32 	%r5040, %r5036, %r5035, 30;
	mov.b64 	%rd6195, {%r5040, %r5039};
	xor.b64  	%rd6196, %rd6195, %rd6194;
	shf.l.wrap.b32 	%r5041, %r5035, %r5036, 25;
	shf.l.wrap.b32 	%r5042, %r5036, %r5035, 25;
	mov.b64 	%rd6197, {%r5042, %r5041};
	xor.b64  	%rd6198, %rd6196, %rd6197;
	xor.b64  	%rd6199, %rd6180, %rd6132;
	xor.b64  	%rd6200, %rd6180, %rd6156;
	and.b64  	%rd6201, %rd6200, %rd6199;
	xor.b64  	%rd6202, %rd6201, %rd6180;
	add.s64 	%rd6203, %rd6192, %rd6202;
	add.s64 	%rd6204, %rd6203, %rd6198;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5043,%dummy}, %rd6193;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5044}, %rd6193;
	}
	shf.r.wrap.b32 	%r5045, %r5044, %r5043, 14;
	shf.r.wrap.b32 	%r5046, %r5043, %r5044, 14;
	mov.b64 	%rd6205, {%r5046, %r5045};
	shf.r.wrap.b32 	%r5047, %r5044, %r5043, 18;
	shf.r.wrap.b32 	%r5048, %r5043, %r5044, 18;
	mov.b64 	%rd6206, {%r5048, %r5047};
	xor.b64  	%rd6207, %rd6206, %rd6205;
	shf.l.wrap.b32 	%r5049, %r5043, %r5044, 23;
	shf.l.wrap.b32 	%r5050, %r5044, %r5043, 23;
	mov.b64 	%rd6208, {%r5050, %r5049};
	xor.b64  	%rd6209, %rd6207, %rd6208;
	xor.b64  	%rd6210, %rd6169, %rd6145;
	and.b64  	%rd6211, %rd6193, %rd6210;
	xor.b64  	%rd6212, %rd6211, %rd6145;
	add.s64 	%rd6213, %rd6121, %rd6028;
	add.s64 	%rd6214, %rd6213, %rd13014;
	add.s64 	%rd6215, %rd6214, %rd6212;
	add.s64 	%rd6216, %rd6215, %rd6209;
	add.s64 	%rd6217, %rd6216, %rd6132;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5051,%dummy}, %rd6204;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5052}, %rd6204;
	}
	shf.r.wrap.b32 	%r5053, %r5052, %r5051, 28;
	shf.r.wrap.b32 	%r5054, %r5051, %r5052, 28;
	mov.b64 	%rd6218, {%r5054, %r5053};
	shf.l.wrap.b32 	%r5055, %r5051, %r5052, 30;
	shf.l.wrap.b32 	%r5056, %r5052, %r5051, 30;
	mov.b64 	%rd6219, {%r5056, %r5055};
	xor.b64  	%rd6220, %rd6219, %rd6218;
	shf.l.wrap.b32 	%r5057, %r5051, %r5052, 25;
	shf.l.wrap.b32 	%r5058, %r5052, %r5051, 25;
	mov.b64 	%rd6221, {%r5058, %r5057};
	xor.b64  	%rd6222, %rd6220, %rd6221;
	xor.b64  	%rd6223, %rd6204, %rd6156;
	xor.b64  	%rd6224, %rd6204, %rd6180;
	and.b64  	%rd6225, %rd6224, %rd6223;
	xor.b64  	%rd6226, %rd6225, %rd6204;
	add.s64 	%rd6227, %rd6216, %rd6226;
	add.s64 	%rd6228, %rd6227, %rd6222;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5059,%dummy}, %rd6217;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5060}, %rd6217;
	}
	shf.r.wrap.b32 	%r5061, %r5060, %r5059, 14;
	shf.r.wrap.b32 	%r5062, %r5059, %r5060, 14;
	mov.b64 	%rd6229, {%r5062, %r5061};
	shf.r.wrap.b32 	%r5063, %r5060, %r5059, 18;
	shf.r.wrap.b32 	%r5064, %r5059, %r5060, 18;
	mov.b64 	%rd6230, {%r5064, %r5063};
	xor.b64  	%rd6231, %rd6230, %rd6229;
	shf.l.wrap.b32 	%r5065, %r5059, %r5060, 23;
	shf.l.wrap.b32 	%r5066, %r5060, %r5059, 23;
	mov.b64 	%rd6232, {%r5066, %r5065};
	xor.b64  	%rd6233, %rd6231, %rd6232;
	xor.b64  	%rd6234, %rd6193, %rd6169;
	and.b64  	%rd6235, %rd6217, %rd6234;
	xor.b64  	%rd6236, %rd6235, %rd6169;
	add.s64 	%rd6237, %rd6145, %rd6029;
	add.s64 	%rd6238, %rd6237, %rd13013;
	add.s64 	%rd6239, %rd6238, %rd6236;
	add.s64 	%rd6240, %rd6239, %rd6233;
	add.s64 	%rd6241, %rd6240, %rd6156;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5067,%dummy}, %rd6228;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5068}, %rd6228;
	}
	shf.r.wrap.b32 	%r5069, %r5068, %r5067, 28;
	shf.r.wrap.b32 	%r5070, %r5067, %r5068, 28;
	mov.b64 	%rd6242, {%r5070, %r5069};
	shf.l.wrap.b32 	%r5071, %r5067, %r5068, 30;
	shf.l.wrap.b32 	%r5072, %r5068, %r5067, 30;
	mov.b64 	%rd6243, {%r5072, %r5071};
	xor.b64  	%rd6244, %rd6243, %rd6242;
	shf.l.wrap.b32 	%r5073, %r5067, %r5068, 25;
	shf.l.wrap.b32 	%r5074, %r5068, %r5067, 25;
	mov.b64 	%rd6245, {%r5074, %r5073};
	xor.b64  	%rd6246, %rd6244, %rd6245;
	xor.b64  	%rd6247, %rd6228, %rd6180;
	xor.b64  	%rd6248, %rd6228, %rd6204;
	and.b64  	%rd6249, %rd6248, %rd6247;
	xor.b64  	%rd6250, %rd6249, %rd6228;
	add.s64 	%rd6251, %rd6240, %rd6250;
	add.s64 	%rd6252, %rd6251, %rd6246;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5075,%dummy}, %rd6241;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5076}, %rd6241;
	}
	shf.r.wrap.b32 	%r5077, %r5076, %r5075, 14;
	shf.r.wrap.b32 	%r5078, %r5075, %r5076, 14;
	mov.b64 	%rd6253, {%r5078, %r5077};
	shf.r.wrap.b32 	%r5079, %r5076, %r5075, 18;
	shf.r.wrap.b32 	%r5080, %r5075, %r5076, 18;
	mov.b64 	%rd6254, {%r5080, %r5079};
	xor.b64  	%rd6255, %rd6254, %rd6253;
	shf.l.wrap.b32 	%r5081, %r5075, %r5076, 23;
	shf.l.wrap.b32 	%r5082, %r5076, %r5075, 23;
	mov.b64 	%rd6256, {%r5082, %r5081};
	xor.b64  	%rd6257, %rd6255, %rd6256;
	xor.b64  	%rd6258, %rd6217, %rd6193;
	and.b64  	%rd6259, %rd6241, %rd6258;
	xor.b64  	%rd6260, %rd6259, %rd6193;
	add.s64 	%rd6261, %rd6169, %rd6030;
	add.s64 	%rd6262, %rd6261, %rd13012;
	add.s64 	%rd6263, %rd6262, %rd6260;
	add.s64 	%rd6264, %rd6263, %rd6257;
	add.s64 	%rd6265, %rd6264, %rd6180;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5083,%dummy}, %rd6252;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5084}, %rd6252;
	}
	shf.r.wrap.b32 	%r5085, %r5084, %r5083, 28;
	shf.r.wrap.b32 	%r5086, %r5083, %r5084, 28;
	mov.b64 	%rd6266, {%r5086, %r5085};
	shf.l.wrap.b32 	%r5087, %r5083, %r5084, 30;
	shf.l.wrap.b32 	%r5088, %r5084, %r5083, 30;
	mov.b64 	%rd6267, {%r5088, %r5087};
	xor.b64  	%rd6268, %rd6267, %rd6266;
	shf.l.wrap.b32 	%r5089, %r5083, %r5084, 25;
	shf.l.wrap.b32 	%r5090, %r5084, %r5083, 25;
	mov.b64 	%rd6269, {%r5090, %r5089};
	xor.b64  	%rd6270, %rd6268, %rd6269;
	xor.b64  	%rd6271, %rd6252, %rd6204;
	xor.b64  	%rd6272, %rd6252, %rd6228;
	and.b64  	%rd6273, %rd6272, %rd6271;
	xor.b64  	%rd6274, %rd6273, %rd6252;
	add.s64 	%rd6275, %rd6264, %rd6274;
	add.s64 	%rd6276, %rd6275, %rd6270;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5091,%dummy}, %rd6265;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5092}, %rd6265;
	}
	shf.r.wrap.b32 	%r5093, %r5092, %r5091, 14;
	shf.r.wrap.b32 	%r5094, %r5091, %r5092, 14;
	mov.b64 	%rd6277, {%r5094, %r5093};
	shf.r.wrap.b32 	%r5095, %r5092, %r5091, 18;
	shf.r.wrap.b32 	%r5096, %r5091, %r5092, 18;
	mov.b64 	%rd6278, {%r5096, %r5095};
	xor.b64  	%rd6279, %rd6278, %rd6277;
	shf.l.wrap.b32 	%r5097, %r5091, %r5092, 23;
	shf.l.wrap.b32 	%r5098, %r5092, %r5091, 23;
	mov.b64 	%rd6280, {%r5098, %r5097};
	xor.b64  	%rd6281, %rd6279, %rd6280;
	xor.b64  	%rd6282, %rd6241, %rd6217;
	and.b64  	%rd6283, %rd6265, %rd6282;
	xor.b64  	%rd6284, %rd6283, %rd6217;
	add.s64 	%rd6285, %rd6193, %rd6031;
	add.s64 	%rd6286, %rd6285, %rd13011;
	add.s64 	%rd6287, %rd6286, %rd6284;
	add.s64 	%rd6288, %rd6287, %rd6281;
	add.s64 	%rd6289, %rd6288, %rd6204;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5099,%dummy}, %rd6276;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5100}, %rd6276;
	}
	shf.r.wrap.b32 	%r5101, %r5100, %r5099, 28;
	shf.r.wrap.b32 	%r5102, %r5099, %r5100, 28;
	mov.b64 	%rd6290, {%r5102, %r5101};
	shf.l.wrap.b32 	%r5103, %r5099, %r5100, 30;
	shf.l.wrap.b32 	%r5104, %r5100, %r5099, 30;
	mov.b64 	%rd6291, {%r5104, %r5103};
	xor.b64  	%rd6292, %rd6291, %rd6290;
	shf.l.wrap.b32 	%r5105, %r5099, %r5100, 25;
	shf.l.wrap.b32 	%r5106, %r5100, %r5099, 25;
	mov.b64 	%rd6293, {%r5106, %r5105};
	xor.b64  	%rd6294, %rd6292, %rd6293;
	xor.b64  	%rd6295, %rd6276, %rd6228;
	xor.b64  	%rd6296, %rd6276, %rd6252;
	and.b64  	%rd6297, %rd6296, %rd6295;
	xor.b64  	%rd6298, %rd6297, %rd6276;
	add.s64 	%rd6299, %rd6288, %rd6298;
	add.s64 	%rd6300, %rd6299, %rd6294;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5107,%dummy}, %rd6289;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5108}, %rd6289;
	}
	shf.r.wrap.b32 	%r5109, %r5108, %r5107, 14;
	shf.r.wrap.b32 	%r5110, %r5107, %r5108, 14;
	mov.b64 	%rd6301, {%r5110, %r5109};
	shf.r.wrap.b32 	%r5111, %r5108, %r5107, 18;
	shf.r.wrap.b32 	%r5112, %r5107, %r5108, 18;
	mov.b64 	%rd6302, {%r5112, %r5111};
	xor.b64  	%rd6303, %rd6302, %rd6301;
	shf.l.wrap.b32 	%r5113, %r5107, %r5108, 23;
	shf.l.wrap.b32 	%r5114, %r5108, %r5107, 23;
	mov.b64 	%rd6304, {%r5114, %r5113};
	xor.b64  	%rd6305, %rd6303, %rd6304;
	xor.b64  	%rd6306, %rd6265, %rd6241;
	and.b64  	%rd6307, %rd6289, %rd6306;
	xor.b64  	%rd6308, %rd6307, %rd6241;
	add.s64 	%rd6309, %rd6217, %rd6032;
	add.s64 	%rd6310, %rd6309, %rd13010;
	add.s64 	%rd6311, %rd6310, %rd6308;
	add.s64 	%rd6312, %rd6311, %rd6305;
	add.s64 	%rd6313, %rd6312, %rd6228;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5115,%dummy}, %rd6300;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5116}, %rd6300;
	}
	shf.r.wrap.b32 	%r5117, %r5116, %r5115, 28;
	shf.r.wrap.b32 	%r5118, %r5115, %r5116, 28;
	mov.b64 	%rd6314, {%r5118, %r5117};
	shf.l.wrap.b32 	%r5119, %r5115, %r5116, 30;
	shf.l.wrap.b32 	%r5120, %r5116, %r5115, 30;
	mov.b64 	%rd6315, {%r5120, %r5119};
	xor.b64  	%rd6316, %rd6315, %rd6314;
	shf.l.wrap.b32 	%r5121, %r5115, %r5116, 25;
	shf.l.wrap.b32 	%r5122, %r5116, %r5115, 25;
	mov.b64 	%rd6317, {%r5122, %r5121};
	xor.b64  	%rd6318, %rd6316, %rd6317;
	xor.b64  	%rd6319, %rd6300, %rd6252;
	xor.b64  	%rd6320, %rd6300, %rd6276;
	and.b64  	%rd6321, %rd6320, %rd6319;
	xor.b64  	%rd6322, %rd6321, %rd6300;
	add.s64 	%rd6323, %rd6312, %rd6322;
	add.s64 	%rd6324, %rd6323, %rd6318;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5123,%dummy}, %rd6313;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5124}, %rd6313;
	}
	shf.r.wrap.b32 	%r5125, %r5124, %r5123, 14;
	shf.r.wrap.b32 	%r5126, %r5123, %r5124, 14;
	mov.b64 	%rd6325, {%r5126, %r5125};
	shf.r.wrap.b32 	%r5127, %r5124, %r5123, 18;
	shf.r.wrap.b32 	%r5128, %r5123, %r5124, 18;
	mov.b64 	%rd6326, {%r5128, %r5127};
	xor.b64  	%rd6327, %rd6326, %rd6325;
	shf.l.wrap.b32 	%r5129, %r5123, %r5124, 23;
	shf.l.wrap.b32 	%r5130, %r5124, %r5123, 23;
	mov.b64 	%rd6328, {%r5130, %r5129};
	xor.b64  	%rd6329, %rd6327, %rd6328;
	xor.b64  	%rd6330, %rd6289, %rd6265;
	and.b64  	%rd6331, %rd6313, %rd6330;
	xor.b64  	%rd6332, %rd6331, %rd6265;
	add.s64 	%rd6333, %rd6241, %rd6033;
	add.s64 	%rd6334, %rd6333, %rd13009;
	add.s64 	%rd6335, %rd6334, %rd6332;
	add.s64 	%rd6336, %rd6335, %rd6329;
	add.s64 	%rd6337, %rd6336, %rd6252;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5131,%dummy}, %rd6324;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5132}, %rd6324;
	}
	shf.r.wrap.b32 	%r5133, %r5132, %r5131, 28;
	shf.r.wrap.b32 	%r5134, %r5131, %r5132, 28;
	mov.b64 	%rd6338, {%r5134, %r5133};
	shf.l.wrap.b32 	%r5135, %r5131, %r5132, 30;
	shf.l.wrap.b32 	%r5136, %r5132, %r5131, 30;
	mov.b64 	%rd6339, {%r5136, %r5135};
	xor.b64  	%rd6340, %rd6339, %rd6338;
	shf.l.wrap.b32 	%r5137, %r5131, %r5132, 25;
	shf.l.wrap.b32 	%r5138, %r5132, %r5131, 25;
	mov.b64 	%rd6341, {%r5138, %r5137};
	xor.b64  	%rd6342, %rd6340, %rd6341;
	xor.b64  	%rd6343, %rd6324, %rd6276;
	xor.b64  	%rd6344, %rd6324, %rd6300;
	and.b64  	%rd6345, %rd6344, %rd6343;
	xor.b64  	%rd6346, %rd6345, %rd6324;
	add.s64 	%rd6347, %rd6336, %rd6346;
	add.s64 	%rd6348, %rd6347, %rd6342;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5139,%dummy}, %rd6337;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5140}, %rd6337;
	}
	shf.r.wrap.b32 	%r5141, %r5140, %r5139, 14;
	shf.r.wrap.b32 	%r5142, %r5139, %r5140, 14;
	mov.b64 	%rd6349, {%r5142, %r5141};
	shf.r.wrap.b32 	%r5143, %r5140, %r5139, 18;
	shf.r.wrap.b32 	%r5144, %r5139, %r5140, 18;
	mov.b64 	%rd6350, {%r5144, %r5143};
	xor.b64  	%rd6351, %rd6350, %rd6349;
	shf.l.wrap.b32 	%r5145, %r5139, %r5140, 23;
	shf.l.wrap.b32 	%r5146, %r5140, %r5139, 23;
	mov.b64 	%rd6352, {%r5146, %r5145};
	xor.b64  	%rd6353, %rd6351, %rd6352;
	xor.b64  	%rd6354, %rd6313, %rd6289;
	and.b64  	%rd6355, %rd6337, %rd6354;
	xor.b64  	%rd6356, %rd6355, %rd6289;
	add.s64 	%rd6357, %rd6265, %rd6034;
	add.s64 	%rd6358, %rd6357, %rd13008;
	add.s64 	%rd6359, %rd6358, %rd6356;
	add.s64 	%rd6360, %rd6359, %rd6353;
	add.s64 	%rd6361, %rd6360, %rd6276;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5147,%dummy}, %rd6348;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5148}, %rd6348;
	}
	shf.r.wrap.b32 	%r5149, %r5148, %r5147, 28;
	shf.r.wrap.b32 	%r5150, %r5147, %r5148, 28;
	mov.b64 	%rd6362, {%r5150, %r5149};
	shf.l.wrap.b32 	%r5151, %r5147, %r5148, 30;
	shf.l.wrap.b32 	%r5152, %r5148, %r5147, 30;
	mov.b64 	%rd6363, {%r5152, %r5151};
	xor.b64  	%rd6364, %rd6363, %rd6362;
	shf.l.wrap.b32 	%r5153, %r5147, %r5148, 25;
	shf.l.wrap.b32 	%r5154, %r5148, %r5147, 25;
	mov.b64 	%rd6365, {%r5154, %r5153};
	xor.b64  	%rd6366, %rd6364, %rd6365;
	xor.b64  	%rd6367, %rd6348, %rd6300;
	xor.b64  	%rd6368, %rd6348, %rd6324;
	and.b64  	%rd6369, %rd6368, %rd6367;
	xor.b64  	%rd6370, %rd6369, %rd6348;
	add.s64 	%rd6371, %rd6360, %rd6370;
	add.s64 	%rd6372, %rd6371, %rd6366;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5155,%dummy}, %rd6361;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5156}, %rd6361;
	}
	shf.r.wrap.b32 	%r5157, %r5156, %r5155, 14;
	shf.r.wrap.b32 	%r5158, %r5155, %r5156, 14;
	mov.b64 	%rd6373, {%r5158, %r5157};
	shf.r.wrap.b32 	%r5159, %r5156, %r5155, 18;
	shf.r.wrap.b32 	%r5160, %r5155, %r5156, 18;
	mov.b64 	%rd6374, {%r5160, %r5159};
	xor.b64  	%rd6375, %rd6374, %rd6373;
	shf.l.wrap.b32 	%r5161, %r5155, %r5156, 23;
	shf.l.wrap.b32 	%r5162, %r5156, %r5155, 23;
	mov.b64 	%rd6376, {%r5162, %r5161};
	xor.b64  	%rd6377, %rd6375, %rd6376;
	xor.b64  	%rd6378, %rd6337, %rd6313;
	and.b64  	%rd6379, %rd6361, %rd6378;
	xor.b64  	%rd6380, %rd6379, %rd6313;
	add.s64 	%rd6381, %rd6289, %rd6035;
	add.s64 	%rd6382, %rd6381, %rd13007;
	add.s64 	%rd6383, %rd6382, %rd6380;
	add.s64 	%rd6384, %rd6383, %rd6377;
	add.s64 	%rd6385, %rd6384, %rd6300;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5163,%dummy}, %rd6372;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5164}, %rd6372;
	}
	shf.r.wrap.b32 	%r5165, %r5164, %r5163, 28;
	shf.r.wrap.b32 	%r5166, %r5163, %r5164, 28;
	mov.b64 	%rd6386, {%r5166, %r5165};
	shf.l.wrap.b32 	%r5167, %r5163, %r5164, 30;
	shf.l.wrap.b32 	%r5168, %r5164, %r5163, 30;
	mov.b64 	%rd6387, {%r5168, %r5167};
	xor.b64  	%rd6388, %rd6387, %rd6386;
	shf.l.wrap.b32 	%r5169, %r5163, %r5164, 25;
	shf.l.wrap.b32 	%r5170, %r5164, %r5163, 25;
	mov.b64 	%rd6389, {%r5170, %r5169};
	xor.b64  	%rd6390, %rd6388, %rd6389;
	xor.b64  	%rd6391, %rd6372, %rd6324;
	xor.b64  	%rd6392, %rd6372, %rd6348;
	and.b64  	%rd6393, %rd6392, %rd6391;
	xor.b64  	%rd6394, %rd6393, %rd6372;
	add.s64 	%rd6395, %rd6384, %rd6394;
	add.s64 	%rd6396, %rd6395, %rd6390;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5171,%dummy}, %rd6385;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5172}, %rd6385;
	}
	shf.r.wrap.b32 	%r5173, %r5172, %r5171, 14;
	shf.r.wrap.b32 	%r5174, %r5171, %r5172, 14;
	mov.b64 	%rd6397, {%r5174, %r5173};
	shf.r.wrap.b32 	%r5175, %r5172, %r5171, 18;
	shf.r.wrap.b32 	%r5176, %r5171, %r5172, 18;
	mov.b64 	%rd6398, {%r5176, %r5175};
	xor.b64  	%rd6399, %rd6398, %rd6397;
	shf.l.wrap.b32 	%r5177, %r5171, %r5172, 23;
	shf.l.wrap.b32 	%r5178, %r5172, %r5171, 23;
	mov.b64 	%rd6400, {%r5178, %r5177};
	xor.b64  	%rd6401, %rd6399, %rd6400;
	xor.b64  	%rd6402, %rd6361, %rd6337;
	and.b64  	%rd6403, %rd6385, %rd6402;
	xor.b64  	%rd6404, %rd6403, %rd6337;
	add.s64 	%rd6405, %rd6313, %rd6036;
	add.s64 	%rd6406, %rd6405, %rd13006;
	add.s64 	%rd6407, %rd6406, %rd6404;
	add.s64 	%rd6408, %rd6407, %rd6401;
	add.s64 	%rd6409, %rd6408, %rd6324;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5179,%dummy}, %rd6396;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5180}, %rd6396;
	}
	shf.r.wrap.b32 	%r5181, %r5180, %r5179, 28;
	shf.r.wrap.b32 	%r5182, %r5179, %r5180, 28;
	mov.b64 	%rd6410, {%r5182, %r5181};
	shf.l.wrap.b32 	%r5183, %r5179, %r5180, 30;
	shf.l.wrap.b32 	%r5184, %r5180, %r5179, 30;
	mov.b64 	%rd6411, {%r5184, %r5183};
	xor.b64  	%rd6412, %rd6411, %rd6410;
	shf.l.wrap.b32 	%r5185, %r5179, %r5180, 25;
	shf.l.wrap.b32 	%r5186, %r5180, %r5179, 25;
	mov.b64 	%rd6413, {%r5186, %r5185};
	xor.b64  	%rd6414, %rd6412, %rd6413;
	xor.b64  	%rd6415, %rd6396, %rd6348;
	xor.b64  	%rd6416, %rd6396, %rd6372;
	and.b64  	%rd6417, %rd6416, %rd6415;
	xor.b64  	%rd6418, %rd6417, %rd6396;
	add.s64 	%rd6419, %rd6408, %rd6418;
	add.s64 	%rd6420, %rd6419, %rd6414;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5187,%dummy}, %rd6035;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5188}, %rd6035;
	}
	shf.r.wrap.b32 	%r5189, %r5188, %r5187, 19;
	shf.r.wrap.b32 	%r5190, %r5187, %r5188, 19;
	mov.b64 	%rd6421, {%r5190, %r5189};
	shf.l.wrap.b32 	%r5191, %r5187, %r5188, 3;
	shf.l.wrap.b32 	%r5192, %r5188, %r5187, 3;
	mov.b64 	%rd6422, {%r5192, %r5191};
	shr.u64 	%rd6423, %rd6035, 6;
	xor.b64  	%rd6424, %rd6421, %rd6423;
	xor.b64  	%rd6425, %rd6424, %rd6422;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5193,%dummy}, %rd6022;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5194}, %rd6022;
	}
	shf.r.wrap.b32 	%r5195, %r5194, %r5193, 1;
	shf.r.wrap.b32 	%r5196, %r5193, %r5194, 1;
	mov.b64 	%rd6426, {%r5196, %r5195};
	shf.r.wrap.b32 	%r5197, %r5194, %r5193, 8;
	shf.r.wrap.b32 	%r5198, %r5193, %r5194, 8;
	mov.b64 	%rd6427, {%r5198, %r5197};
	shr.u64 	%rd6428, %rd6022, 7;
	xor.b64  	%rd6429, %rd6426, %rd6428;
	xor.b64  	%rd6430, %rd6429, %rd6427;
	add.s64 	%rd6431, %rd6030, %rd6021;
	add.s64 	%rd6432, %rd6431, %rd6425;
	add.s64 	%rd6433, %rd6432, %rd6430;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5199,%dummy}, %rd6036;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5200}, %rd6036;
	}
	shf.r.wrap.b32 	%r5201, %r5200, %r5199, 19;
	shf.r.wrap.b32 	%r5202, %r5199, %r5200, 19;
	mov.b64 	%rd6434, {%r5202, %r5201};
	shf.l.wrap.b32 	%r5203, %r5199, %r5200, 3;
	shf.l.wrap.b32 	%r5204, %r5200, %r5199, 3;
	mov.b64 	%rd6435, {%r5204, %r5203};
	shr.u64 	%rd6436, %rd6036, 6;
	xor.b64  	%rd6437, %rd6434, %rd6436;
	xor.b64  	%rd6438, %rd6437, %rd6435;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5205,%dummy}, %rd6023;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5206}, %rd6023;
	}
	shf.r.wrap.b32 	%r5207, %r5206, %r5205, 1;
	shf.r.wrap.b32 	%r5208, %r5205, %r5206, 1;
	mov.b64 	%rd6439, {%r5208, %r5207};
	shf.r.wrap.b32 	%r5209, %r5206, %r5205, 8;
	shf.r.wrap.b32 	%r5210, %r5205, %r5206, 8;
	mov.b64 	%rd6440, {%r5210, %r5209};
	shr.u64 	%rd6441, %rd6023, 7;
	xor.b64  	%rd6442, %rd6439, %rd6441;
	xor.b64  	%rd6443, %rd6442, %rd6440;
	add.s64 	%rd6444, %rd6031, %rd6022;
	add.s64 	%rd6445, %rd6444, %rd6438;
	add.s64 	%rd6446, %rd6445, %rd6443;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5211,%dummy}, %rd6433;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5212}, %rd6433;
	}
	shf.r.wrap.b32 	%r5213, %r5212, %r5211, 19;
	shf.r.wrap.b32 	%r5214, %r5211, %r5212, 19;
	mov.b64 	%rd6447, {%r5214, %r5213};
	shf.l.wrap.b32 	%r5215, %r5211, %r5212, 3;
	shf.l.wrap.b32 	%r5216, %r5212, %r5211, 3;
	mov.b64 	%rd6448, {%r5216, %r5215};
	shr.u64 	%rd6449, %rd6433, 6;
	xor.b64  	%rd6450, %rd6447, %rd6449;
	xor.b64  	%rd6451, %rd6450, %rd6448;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5217,%dummy}, %rd6024;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5218}, %rd6024;
	}
	shf.r.wrap.b32 	%r5219, %r5218, %r5217, 1;
	shf.r.wrap.b32 	%r5220, %r5217, %r5218, 1;
	mov.b64 	%rd6452, {%r5220, %r5219};
	shf.r.wrap.b32 	%r5221, %r5218, %r5217, 8;
	shf.r.wrap.b32 	%r5222, %r5217, %r5218, 8;
	mov.b64 	%rd6453, {%r5222, %r5221};
	shr.u64 	%rd6454, %rd6024, 7;
	xor.b64  	%rd6455, %rd6452, %rd6454;
	xor.b64  	%rd6456, %rd6455, %rd6453;
	add.s64 	%rd6457, %rd6032, %rd6023;
	add.s64 	%rd6458, %rd6457, %rd6451;
	add.s64 	%rd6459, %rd6458, %rd6456;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5223,%dummy}, %rd6446;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5224}, %rd6446;
	}
	shf.r.wrap.b32 	%r5225, %r5224, %r5223, 19;
	shf.r.wrap.b32 	%r5226, %r5223, %r5224, 19;
	mov.b64 	%rd6460, {%r5226, %r5225};
	shf.l.wrap.b32 	%r5227, %r5223, %r5224, 3;
	shf.l.wrap.b32 	%r5228, %r5224, %r5223, 3;
	mov.b64 	%rd6461, {%r5228, %r5227};
	shr.u64 	%rd6462, %rd6446, 6;
	xor.b64  	%rd6463, %rd6460, %rd6462;
	xor.b64  	%rd6464, %rd6463, %rd6461;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5229,%dummy}, %rd6025;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5230}, %rd6025;
	}
	shf.r.wrap.b32 	%r5231, %r5230, %r5229, 1;
	shf.r.wrap.b32 	%r5232, %r5229, %r5230, 1;
	mov.b64 	%rd6465, {%r5232, %r5231};
	shf.r.wrap.b32 	%r5233, %r5230, %r5229, 8;
	shf.r.wrap.b32 	%r5234, %r5229, %r5230, 8;
	mov.b64 	%rd6466, {%r5234, %r5233};
	shr.u64 	%rd6467, %rd6025, 7;
	xor.b64  	%rd6468, %rd6465, %rd6467;
	xor.b64  	%rd6469, %rd6468, %rd6466;
	add.s64 	%rd6470, %rd6033, %rd6024;
	add.s64 	%rd6471, %rd6470, %rd6464;
	add.s64 	%rd6472, %rd6471, %rd6469;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5235,%dummy}, %rd6459;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5236}, %rd6459;
	}
	shf.r.wrap.b32 	%r5237, %r5236, %r5235, 19;
	shf.r.wrap.b32 	%r5238, %r5235, %r5236, 19;
	mov.b64 	%rd6473, {%r5238, %r5237};
	shf.l.wrap.b32 	%r5239, %r5235, %r5236, 3;
	shf.l.wrap.b32 	%r5240, %r5236, %r5235, 3;
	mov.b64 	%rd6474, {%r5240, %r5239};
	shr.u64 	%rd6475, %rd6459, 6;
	xor.b64  	%rd6476, %rd6473, %rd6475;
	xor.b64  	%rd6477, %rd6476, %rd6474;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5241,%dummy}, %rd6026;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5242}, %rd6026;
	}
	shf.r.wrap.b32 	%r5243, %r5242, %r5241, 1;
	shf.r.wrap.b32 	%r5244, %r5241, %r5242, 1;
	mov.b64 	%rd6478, {%r5244, %r5243};
	shf.r.wrap.b32 	%r5245, %r5242, %r5241, 8;
	shf.r.wrap.b32 	%r5246, %r5241, %r5242, 8;
	mov.b64 	%rd6479, {%r5246, %r5245};
	shr.u64 	%rd6480, %rd6026, 7;
	xor.b64  	%rd6481, %rd6478, %rd6480;
	xor.b64  	%rd6482, %rd6481, %rd6479;
	add.s64 	%rd6483, %rd6034, %rd6025;
	add.s64 	%rd6484, %rd6483, %rd6477;
	add.s64 	%rd6485, %rd6484, %rd6482;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5247,%dummy}, %rd6472;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5248}, %rd6472;
	}
	shf.r.wrap.b32 	%r5249, %r5248, %r5247, 19;
	shf.r.wrap.b32 	%r5250, %r5247, %r5248, 19;
	mov.b64 	%rd6486, {%r5250, %r5249};
	shf.l.wrap.b32 	%r5251, %r5247, %r5248, 3;
	shf.l.wrap.b32 	%r5252, %r5248, %r5247, 3;
	mov.b64 	%rd6487, {%r5252, %r5251};
	shr.u64 	%rd6488, %rd6472, 6;
	xor.b64  	%rd6489, %rd6486, %rd6488;
	xor.b64  	%rd6490, %rd6489, %rd6487;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5253,%dummy}, %rd6027;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5254}, %rd6027;
	}
	shf.r.wrap.b32 	%r5255, %r5254, %r5253, 1;
	shf.r.wrap.b32 	%r5256, %r5253, %r5254, 1;
	mov.b64 	%rd6491, {%r5256, %r5255};
	shf.r.wrap.b32 	%r5257, %r5254, %r5253, 8;
	shf.r.wrap.b32 	%r5258, %r5253, %r5254, 8;
	mov.b64 	%rd6492, {%r5258, %r5257};
	shr.u64 	%rd6493, %rd6027, 7;
	xor.b64  	%rd6494, %rd6491, %rd6493;
	xor.b64  	%rd6495, %rd6494, %rd6492;
	add.s64 	%rd6496, %rd6035, %rd6026;
	add.s64 	%rd6497, %rd6496, %rd6490;
	add.s64 	%rd6498, %rd6497, %rd6495;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5259,%dummy}, %rd6485;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5260}, %rd6485;
	}
	shf.r.wrap.b32 	%r5261, %r5260, %r5259, 19;
	shf.r.wrap.b32 	%r5262, %r5259, %r5260, 19;
	mov.b64 	%rd6499, {%r5262, %r5261};
	shf.l.wrap.b32 	%r5263, %r5259, %r5260, 3;
	shf.l.wrap.b32 	%r5264, %r5260, %r5259, 3;
	mov.b64 	%rd6500, {%r5264, %r5263};
	shr.u64 	%rd6501, %rd6485, 6;
	xor.b64  	%rd6502, %rd6499, %rd6501;
	xor.b64  	%rd6503, %rd6502, %rd6500;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5265,%dummy}, %rd6028;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5266}, %rd6028;
	}
	shf.r.wrap.b32 	%r5267, %r5266, %r5265, 1;
	shf.r.wrap.b32 	%r5268, %r5265, %r5266, 1;
	mov.b64 	%rd6504, {%r5268, %r5267};
	shf.r.wrap.b32 	%r5269, %r5266, %r5265, 8;
	shf.r.wrap.b32 	%r5270, %r5265, %r5266, 8;
	mov.b64 	%rd6505, {%r5270, %r5269};
	shr.u64 	%rd6506, %rd6028, 7;
	xor.b64  	%rd6507, %rd6504, %rd6506;
	xor.b64  	%rd6508, %rd6507, %rd6505;
	add.s64 	%rd6509, %rd6036, %rd6027;
	add.s64 	%rd6510, %rd6509, %rd6503;
	add.s64 	%rd6511, %rd6510, %rd6508;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5271,%dummy}, %rd6498;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5272}, %rd6498;
	}
	shf.r.wrap.b32 	%r5273, %r5272, %r5271, 19;
	shf.r.wrap.b32 	%r5274, %r5271, %r5272, 19;
	mov.b64 	%rd6512, {%r5274, %r5273};
	shf.l.wrap.b32 	%r5275, %r5271, %r5272, 3;
	shf.l.wrap.b32 	%r5276, %r5272, %r5271, 3;
	mov.b64 	%rd6513, {%r5276, %r5275};
	shr.u64 	%rd6514, %rd6498, 6;
	xor.b64  	%rd6515, %rd6512, %rd6514;
	xor.b64  	%rd6516, %rd6515, %rd6513;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5277,%dummy}, %rd6029;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5278}, %rd6029;
	}
	shf.r.wrap.b32 	%r5279, %r5278, %r5277, 1;
	shf.r.wrap.b32 	%r5280, %r5277, %r5278, 1;
	mov.b64 	%rd6517, {%r5280, %r5279};
	shf.r.wrap.b32 	%r5281, %r5278, %r5277, 8;
	shf.r.wrap.b32 	%r5282, %r5277, %r5278, 8;
	mov.b64 	%rd6518, {%r5282, %r5281};
	shr.u64 	%rd6519, %rd6029, 7;
	xor.b64  	%rd6520, %rd6517, %rd6519;
	xor.b64  	%rd6521, %rd6520, %rd6518;
	add.s64 	%rd6522, %rd6433, %rd6028;
	add.s64 	%rd6523, %rd6522, %rd6516;
	add.s64 	%rd6524, %rd6523, %rd6521;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5283,%dummy}, %rd6511;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5284}, %rd6511;
	}
	shf.r.wrap.b32 	%r5285, %r5284, %r5283, 19;
	shf.r.wrap.b32 	%r5286, %r5283, %r5284, 19;
	mov.b64 	%rd6525, {%r5286, %r5285};
	shf.l.wrap.b32 	%r5287, %r5283, %r5284, 3;
	shf.l.wrap.b32 	%r5288, %r5284, %r5283, 3;
	mov.b64 	%rd6526, {%r5288, %r5287};
	shr.u64 	%rd6527, %rd6511, 6;
	xor.b64  	%rd6528, %rd6525, %rd6527;
	xor.b64  	%rd6529, %rd6528, %rd6526;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5289,%dummy}, %rd6030;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5290}, %rd6030;
	}
	shf.r.wrap.b32 	%r5291, %r5290, %r5289, 1;
	shf.r.wrap.b32 	%r5292, %r5289, %r5290, 1;
	mov.b64 	%rd6530, {%r5292, %r5291};
	shf.r.wrap.b32 	%r5293, %r5290, %r5289, 8;
	shf.r.wrap.b32 	%r5294, %r5289, %r5290, 8;
	mov.b64 	%rd6531, {%r5294, %r5293};
	shr.u64 	%rd6532, %rd6030, 7;
	xor.b64  	%rd6533, %rd6530, %rd6532;
	xor.b64  	%rd6534, %rd6533, %rd6531;
	add.s64 	%rd6535, %rd6446, %rd6029;
	add.s64 	%rd6536, %rd6535, %rd6529;
	add.s64 	%rd6537, %rd6536, %rd6534;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5295,%dummy}, %rd6524;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5296}, %rd6524;
	}
	shf.r.wrap.b32 	%r5297, %r5296, %r5295, 19;
	shf.r.wrap.b32 	%r5298, %r5295, %r5296, 19;
	mov.b64 	%rd6538, {%r5298, %r5297};
	shf.l.wrap.b32 	%r5299, %r5295, %r5296, 3;
	shf.l.wrap.b32 	%r5300, %r5296, %r5295, 3;
	mov.b64 	%rd6539, {%r5300, %r5299};
	shr.u64 	%rd6540, %rd6524, 6;
	xor.b64  	%rd6541, %rd6538, %rd6540;
	xor.b64  	%rd6542, %rd6541, %rd6539;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5301,%dummy}, %rd6031;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5302}, %rd6031;
	}
	shf.r.wrap.b32 	%r5303, %r5302, %r5301, 1;
	shf.r.wrap.b32 	%r5304, %r5301, %r5302, 1;
	mov.b64 	%rd6543, {%r5304, %r5303};
	shf.r.wrap.b32 	%r5305, %r5302, %r5301, 8;
	shf.r.wrap.b32 	%r5306, %r5301, %r5302, 8;
	mov.b64 	%rd6544, {%r5306, %r5305};
	shr.u64 	%rd6545, %rd6031, 7;
	xor.b64  	%rd6546, %rd6543, %rd6545;
	xor.b64  	%rd6547, %rd6546, %rd6544;
	add.s64 	%rd6548, %rd6459, %rd6030;
	add.s64 	%rd6549, %rd6548, %rd6542;
	add.s64 	%rd6550, %rd6549, %rd6547;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5307,%dummy}, %rd6537;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5308}, %rd6537;
	}
	shf.r.wrap.b32 	%r5309, %r5308, %r5307, 19;
	shf.r.wrap.b32 	%r5310, %r5307, %r5308, 19;
	mov.b64 	%rd6551, {%r5310, %r5309};
	shf.l.wrap.b32 	%r5311, %r5307, %r5308, 3;
	shf.l.wrap.b32 	%r5312, %r5308, %r5307, 3;
	mov.b64 	%rd6552, {%r5312, %r5311};
	shr.u64 	%rd6553, %rd6537, 6;
	xor.b64  	%rd6554, %rd6551, %rd6553;
	xor.b64  	%rd6555, %rd6554, %rd6552;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5313,%dummy}, %rd6032;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5314}, %rd6032;
	}
	shf.r.wrap.b32 	%r5315, %r5314, %r5313, 1;
	shf.r.wrap.b32 	%r5316, %r5313, %r5314, 1;
	mov.b64 	%rd6556, {%r5316, %r5315};
	shf.r.wrap.b32 	%r5317, %r5314, %r5313, 8;
	shf.r.wrap.b32 	%r5318, %r5313, %r5314, 8;
	mov.b64 	%rd6557, {%r5318, %r5317};
	shr.u64 	%rd6558, %rd6032, 7;
	xor.b64  	%rd6559, %rd6556, %rd6558;
	xor.b64  	%rd6560, %rd6559, %rd6557;
	add.s64 	%rd6561, %rd6472, %rd6031;
	add.s64 	%rd6562, %rd6561, %rd6555;
	add.s64 	%rd6563, %rd6562, %rd6560;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5319,%dummy}, %rd6550;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5320}, %rd6550;
	}
	shf.r.wrap.b32 	%r5321, %r5320, %r5319, 19;
	shf.r.wrap.b32 	%r5322, %r5319, %r5320, 19;
	mov.b64 	%rd6564, {%r5322, %r5321};
	shf.l.wrap.b32 	%r5323, %r5319, %r5320, 3;
	shf.l.wrap.b32 	%r5324, %r5320, %r5319, 3;
	mov.b64 	%rd6565, {%r5324, %r5323};
	shr.u64 	%rd6566, %rd6550, 6;
	xor.b64  	%rd6567, %rd6564, %rd6566;
	xor.b64  	%rd6568, %rd6567, %rd6565;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5325,%dummy}, %rd6033;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5326}, %rd6033;
	}
	shf.r.wrap.b32 	%r5327, %r5326, %r5325, 1;
	shf.r.wrap.b32 	%r5328, %r5325, %r5326, 1;
	mov.b64 	%rd6569, {%r5328, %r5327};
	shf.r.wrap.b32 	%r5329, %r5326, %r5325, 8;
	shf.r.wrap.b32 	%r5330, %r5325, %r5326, 8;
	mov.b64 	%rd6570, {%r5330, %r5329};
	shr.u64 	%rd6571, %rd6033, 7;
	xor.b64  	%rd6572, %rd6569, %rd6571;
	xor.b64  	%rd6573, %rd6572, %rd6570;
	add.s64 	%rd6574, %rd6485, %rd6032;
	add.s64 	%rd6575, %rd6574, %rd6568;
	add.s64 	%rd6576, %rd6575, %rd6573;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5331,%dummy}, %rd6563;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5332}, %rd6563;
	}
	shf.r.wrap.b32 	%r5333, %r5332, %r5331, 19;
	shf.r.wrap.b32 	%r5334, %r5331, %r5332, 19;
	mov.b64 	%rd6577, {%r5334, %r5333};
	shf.l.wrap.b32 	%r5335, %r5331, %r5332, 3;
	shf.l.wrap.b32 	%r5336, %r5332, %r5331, 3;
	mov.b64 	%rd6578, {%r5336, %r5335};
	shr.u64 	%rd6579, %rd6563, 6;
	xor.b64  	%rd6580, %rd6577, %rd6579;
	xor.b64  	%rd6581, %rd6580, %rd6578;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5337,%dummy}, %rd6034;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5338}, %rd6034;
	}
	shf.r.wrap.b32 	%r5339, %r5338, %r5337, 1;
	shf.r.wrap.b32 	%r5340, %r5337, %r5338, 1;
	mov.b64 	%rd6582, {%r5340, %r5339};
	shf.r.wrap.b32 	%r5341, %r5338, %r5337, 8;
	shf.r.wrap.b32 	%r5342, %r5337, %r5338, 8;
	mov.b64 	%rd6583, {%r5342, %r5341};
	shr.u64 	%rd6584, %rd6034, 7;
	xor.b64  	%rd6585, %rd6582, %rd6584;
	xor.b64  	%rd6586, %rd6585, %rd6583;
	add.s64 	%rd6587, %rd6498, %rd6033;
	add.s64 	%rd6588, %rd6587, %rd6581;
	add.s64 	%rd6589, %rd6588, %rd6586;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5343,%dummy}, %rd6576;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5344}, %rd6576;
	}
	shf.r.wrap.b32 	%r5345, %r5344, %r5343, 19;
	shf.r.wrap.b32 	%r5346, %r5343, %r5344, 19;
	mov.b64 	%rd6590, {%r5346, %r5345};
	shf.l.wrap.b32 	%r5347, %r5343, %r5344, 3;
	shf.l.wrap.b32 	%r5348, %r5344, %r5343, 3;
	mov.b64 	%rd6591, {%r5348, %r5347};
	shr.u64 	%rd6592, %rd6576, 6;
	xor.b64  	%rd6593, %rd6590, %rd6592;
	xor.b64  	%rd6594, %rd6593, %rd6591;
	shf.r.wrap.b32 	%r5349, %r5188, %r5187, 1;
	shf.r.wrap.b32 	%r5350, %r5187, %r5188, 1;
	mov.b64 	%rd6595, {%r5350, %r5349};
	shf.r.wrap.b32 	%r5351, %r5188, %r5187, 8;
	shf.r.wrap.b32 	%r5352, %r5187, %r5188, 8;
	mov.b64 	%rd6596, {%r5352, %r5351};
	shr.u64 	%rd6597, %rd6035, 7;
	xor.b64  	%rd6598, %rd6595, %rd6597;
	xor.b64  	%rd6599, %rd6598, %rd6596;
	add.s64 	%rd6600, %rd6511, %rd6034;
	add.s64 	%rd6601, %rd6600, %rd6594;
	add.s64 	%rd6602, %rd6601, %rd6599;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5353,%dummy}, %rd6589;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5354}, %rd6589;
	}
	shf.r.wrap.b32 	%r5355, %r5354, %r5353, 19;
	shf.r.wrap.b32 	%r5356, %r5353, %r5354, 19;
	mov.b64 	%rd6603, {%r5356, %r5355};
	shf.l.wrap.b32 	%r5357, %r5353, %r5354, 3;
	shf.l.wrap.b32 	%r5358, %r5354, %r5353, 3;
	mov.b64 	%rd6604, {%r5358, %r5357};
	shr.u64 	%rd6605, %rd6589, 6;
	xor.b64  	%rd6606, %rd6603, %rd6605;
	xor.b64  	%rd6607, %rd6606, %rd6604;
	shf.r.wrap.b32 	%r5359, %r5200, %r5199, 1;
	shf.r.wrap.b32 	%r5360, %r5199, %r5200, 1;
	mov.b64 	%rd6608, {%r5360, %r5359};
	shf.r.wrap.b32 	%r5361, %r5200, %r5199, 8;
	shf.r.wrap.b32 	%r5362, %r5199, %r5200, 8;
	mov.b64 	%rd6609, {%r5362, %r5361};
	shr.u64 	%rd6610, %rd6036, 7;
	xor.b64  	%rd6611, %rd6608, %rd6610;
	xor.b64  	%rd6612, %rd6611, %rd6609;
	add.s64 	%rd6613, %rd6524, %rd6035;
	add.s64 	%rd6614, %rd6613, %rd6607;
	add.s64 	%rd6615, %rd6614, %rd6612;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5363,%dummy}, %rd6602;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5364}, %rd6602;
	}
	shf.r.wrap.b32 	%r5365, %r5364, %r5363, 19;
	shf.r.wrap.b32 	%r5366, %r5363, %r5364, 19;
	mov.b64 	%rd6616, {%r5366, %r5365};
	shf.l.wrap.b32 	%r5367, %r5363, %r5364, 3;
	shf.l.wrap.b32 	%r5368, %r5364, %r5363, 3;
	mov.b64 	%rd6617, {%r5368, %r5367};
	shr.u64 	%rd6618, %rd6602, 6;
	xor.b64  	%rd6619, %rd6616, %rd6618;
	xor.b64  	%rd6620, %rd6619, %rd6617;
	shf.r.wrap.b32 	%r5369, %r5212, %r5211, 1;
	shf.r.wrap.b32 	%r5370, %r5211, %r5212, 1;
	mov.b64 	%rd6621, {%r5370, %r5369};
	shf.r.wrap.b32 	%r5371, %r5212, %r5211, 8;
	shf.r.wrap.b32 	%r5372, %r5211, %r5212, 8;
	mov.b64 	%rd6622, {%r5372, %r5371};
	shr.u64 	%rd6623, %rd6433, 7;
	xor.b64  	%rd6624, %rd6621, %rd6623;
	xor.b64  	%rd6625, %rd6624, %rd6622;
	add.s64 	%rd6626, %rd6537, %rd6036;
	add.s64 	%rd6627, %rd6626, %rd6620;
	add.s64 	%rd6628, %rd6627, %rd6625;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5373,%dummy}, %rd6409;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5374}, %rd6409;
	}
	shf.r.wrap.b32 	%r5375, %r5374, %r5373, 14;
	shf.r.wrap.b32 	%r5376, %r5373, %r5374, 14;
	mov.b64 	%rd6629, {%r5376, %r5375};
	shf.r.wrap.b32 	%r5377, %r5374, %r5373, 18;
	shf.r.wrap.b32 	%r5378, %r5373, %r5374, 18;
	mov.b64 	%rd6630, {%r5378, %r5377};
	xor.b64  	%rd6631, %rd6630, %rd6629;
	shf.l.wrap.b32 	%r5379, %r5373, %r5374, 23;
	shf.l.wrap.b32 	%r5380, %r5374, %r5373, 23;
	mov.b64 	%rd6632, {%r5380, %r5379};
	xor.b64  	%rd6633, %rd6631, %rd6632;
	xor.b64  	%rd6634, %rd6385, %rd6361;
	and.b64  	%rd6635, %rd6634, %rd6409;
	xor.b64  	%rd6636, %rd6635, %rd6361;
	add.s64 	%rd6637, %rd6636, %rd6337;
	add.s64 	%rd6638, %rd6637, %rd6433;
	add.s64 	%rd6639, %rd6638, %rd13005;
	add.s64 	%rd6640, %rd6639, %rd6633;
	add.s64 	%rd6641, %rd6640, %rd6348;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5381,%dummy}, %rd6420;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5382}, %rd6420;
	}
	shf.r.wrap.b32 	%r5383, %r5382, %r5381, 28;
	shf.r.wrap.b32 	%r5384, %r5381, %r5382, 28;
	mov.b64 	%rd6642, {%r5384, %r5383};
	shf.l.wrap.b32 	%r5385, %r5381, %r5382, 30;
	shf.l.wrap.b32 	%r5386, %r5382, %r5381, 30;
	mov.b64 	%rd6643, {%r5386, %r5385};
	xor.b64  	%rd6644, %rd6643, %rd6642;
	shf.l.wrap.b32 	%r5387, %r5381, %r5382, 25;
	shf.l.wrap.b32 	%r5388, %r5382, %r5381, 25;
	mov.b64 	%rd6645, {%r5388, %r5387};
	xor.b64  	%rd6646, %rd6644, %rd6645;
	xor.b64  	%rd6647, %rd6420, %rd6372;
	xor.b64  	%rd6648, %rd6420, %rd6396;
	and.b64  	%rd6649, %rd6648, %rd6647;
	xor.b64  	%rd6650, %rd6649, %rd6420;
	add.s64 	%rd6651, %rd6640, %rd6650;
	add.s64 	%rd6652, %rd6651, %rd6646;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5389,%dummy}, %rd6641;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5390}, %rd6641;
	}
	shf.r.wrap.b32 	%r5391, %r5390, %r5389, 14;
	shf.r.wrap.b32 	%r5392, %r5389, %r5390, 14;
	mov.b64 	%rd6653, {%r5392, %r5391};
	shf.r.wrap.b32 	%r5393, %r5390, %r5389, 18;
	shf.r.wrap.b32 	%r5394, %r5389, %r5390, 18;
	mov.b64 	%rd6654, {%r5394, %r5393};
	xor.b64  	%rd6655, %rd6654, %rd6653;
	shf.l.wrap.b32 	%r5395, %r5389, %r5390, 23;
	shf.l.wrap.b32 	%r5396, %r5390, %r5389, 23;
	mov.b64 	%rd6656, {%r5396, %r5395};
	xor.b64  	%rd6657, %rd6655, %rd6656;
	xor.b64  	%rd6658, %rd6409, %rd6385;
	and.b64  	%rd6659, %rd6641, %rd6658;
	xor.b64  	%rd6660, %rd6659, %rd6385;
	add.s64 	%rd6661, %rd6446, %rd6361;
	add.s64 	%rd6662, %rd6661, %rd13004;
	add.s64 	%rd6663, %rd6662, %rd6660;
	add.s64 	%rd6664, %rd6663, %rd6657;
	add.s64 	%rd6665, %rd6664, %rd6372;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5397,%dummy}, %rd6652;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5398}, %rd6652;
	}
	shf.r.wrap.b32 	%r5399, %r5398, %r5397, 28;
	shf.r.wrap.b32 	%r5400, %r5397, %r5398, 28;
	mov.b64 	%rd6666, {%r5400, %r5399};
	shf.l.wrap.b32 	%r5401, %r5397, %r5398, 30;
	shf.l.wrap.b32 	%r5402, %r5398, %r5397, 30;
	mov.b64 	%rd6667, {%r5402, %r5401};
	xor.b64  	%rd6668, %rd6667, %rd6666;
	shf.l.wrap.b32 	%r5403, %r5397, %r5398, 25;
	shf.l.wrap.b32 	%r5404, %r5398, %r5397, 25;
	mov.b64 	%rd6669, {%r5404, %r5403};
	xor.b64  	%rd6670, %rd6668, %rd6669;
	xor.b64  	%rd6671, %rd6652, %rd6396;
	xor.b64  	%rd6672, %rd6652, %rd6420;
	and.b64  	%rd6673, %rd6672, %rd6671;
	xor.b64  	%rd6674, %rd6673, %rd6652;
	add.s64 	%rd6675, %rd6664, %rd6674;
	add.s64 	%rd6676, %rd6675, %rd6670;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5405,%dummy}, %rd6665;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5406}, %rd6665;
	}
	shf.r.wrap.b32 	%r5407, %r5406, %r5405, 14;
	shf.r.wrap.b32 	%r5408, %r5405, %r5406, 14;
	mov.b64 	%rd6677, {%r5408, %r5407};
	shf.r.wrap.b32 	%r5409, %r5406, %r5405, 18;
	shf.r.wrap.b32 	%r5410, %r5405, %r5406, 18;
	mov.b64 	%rd6678, {%r5410, %r5409};
	xor.b64  	%rd6679, %rd6678, %rd6677;
	shf.l.wrap.b32 	%r5411, %r5405, %r5406, 23;
	shf.l.wrap.b32 	%r5412, %r5406, %r5405, 23;
	mov.b64 	%rd6680, {%r5412, %r5411};
	xor.b64  	%rd6681, %rd6679, %rd6680;
	xor.b64  	%rd6682, %rd6641, %rd6409;
	and.b64  	%rd6683, %rd6665, %rd6682;
	xor.b64  	%rd6684, %rd6683, %rd6409;
	add.s64 	%rd6685, %rd6459, %rd6385;
	add.s64 	%rd6686, %rd6685, %rd13003;
	add.s64 	%rd6687, %rd6686, %rd6684;
	add.s64 	%rd6688, %rd6687, %rd6681;
	add.s64 	%rd6689, %rd6688, %rd6396;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5413,%dummy}, %rd6676;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5414}, %rd6676;
	}
	shf.r.wrap.b32 	%r5415, %r5414, %r5413, 28;
	shf.r.wrap.b32 	%r5416, %r5413, %r5414, 28;
	mov.b64 	%rd6690, {%r5416, %r5415};
	shf.l.wrap.b32 	%r5417, %r5413, %r5414, 30;
	shf.l.wrap.b32 	%r5418, %r5414, %r5413, 30;
	mov.b64 	%rd6691, {%r5418, %r5417};
	xor.b64  	%rd6692, %rd6691, %rd6690;
	shf.l.wrap.b32 	%r5419, %r5413, %r5414, 25;
	shf.l.wrap.b32 	%r5420, %r5414, %r5413, 25;
	mov.b64 	%rd6693, {%r5420, %r5419};
	xor.b64  	%rd6694, %rd6692, %rd6693;
	xor.b64  	%rd6695, %rd6676, %rd6420;
	xor.b64  	%rd6696, %rd6676, %rd6652;
	and.b64  	%rd6697, %rd6696, %rd6695;
	xor.b64  	%rd6698, %rd6697, %rd6676;
	add.s64 	%rd6699, %rd6688, %rd6698;
	add.s64 	%rd6700, %rd6699, %rd6694;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5421,%dummy}, %rd6689;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5422}, %rd6689;
	}
	shf.r.wrap.b32 	%r5423, %r5422, %r5421, 14;
	shf.r.wrap.b32 	%r5424, %r5421, %r5422, 14;
	mov.b64 	%rd6701, {%r5424, %r5423};
	shf.r.wrap.b32 	%r5425, %r5422, %r5421, 18;
	shf.r.wrap.b32 	%r5426, %r5421, %r5422, 18;
	mov.b64 	%rd6702, {%r5426, %r5425};
	xor.b64  	%rd6703, %rd6702, %rd6701;
	shf.l.wrap.b32 	%r5427, %r5421, %r5422, 23;
	shf.l.wrap.b32 	%r5428, %r5422, %r5421, 23;
	mov.b64 	%rd6704, {%r5428, %r5427};
	xor.b64  	%rd6705, %rd6703, %rd6704;
	xor.b64  	%rd6706, %rd6665, %rd6641;
	and.b64  	%rd6707, %rd6689, %rd6706;
	xor.b64  	%rd6708, %rd6707, %rd6641;
	add.s64 	%rd6709, %rd6472, %rd6409;
	add.s64 	%rd6710, %rd6709, %rd13002;
	add.s64 	%rd6711, %rd6710, %rd6708;
	add.s64 	%rd6712, %rd6711, %rd6705;
	add.s64 	%rd6713, %rd6712, %rd6420;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5429,%dummy}, %rd6700;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5430}, %rd6700;
	}
	shf.r.wrap.b32 	%r5431, %r5430, %r5429, 28;
	shf.r.wrap.b32 	%r5432, %r5429, %r5430, 28;
	mov.b64 	%rd6714, {%r5432, %r5431};
	shf.l.wrap.b32 	%r5433, %r5429, %r5430, 30;
	shf.l.wrap.b32 	%r5434, %r5430, %r5429, 30;
	mov.b64 	%rd6715, {%r5434, %r5433};
	xor.b64  	%rd6716, %rd6715, %rd6714;
	shf.l.wrap.b32 	%r5435, %r5429, %r5430, 25;
	shf.l.wrap.b32 	%r5436, %r5430, %r5429, 25;
	mov.b64 	%rd6717, {%r5436, %r5435};
	xor.b64  	%rd6718, %rd6716, %rd6717;
	xor.b64  	%rd6719, %rd6700, %rd6652;
	xor.b64  	%rd6720, %rd6700, %rd6676;
	and.b64  	%rd6721, %rd6720, %rd6719;
	xor.b64  	%rd6722, %rd6721, %rd6700;
	add.s64 	%rd6723, %rd6712, %rd6722;
	add.s64 	%rd6724, %rd6723, %rd6718;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5437,%dummy}, %rd6713;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5438}, %rd6713;
	}
	shf.r.wrap.b32 	%r5439, %r5438, %r5437, 14;
	shf.r.wrap.b32 	%r5440, %r5437, %r5438, 14;
	mov.b64 	%rd6725, {%r5440, %r5439};
	shf.r.wrap.b32 	%r5441, %r5438, %r5437, 18;
	shf.r.wrap.b32 	%r5442, %r5437, %r5438, 18;
	mov.b64 	%rd6726, {%r5442, %r5441};
	xor.b64  	%rd6727, %rd6726, %rd6725;
	shf.l.wrap.b32 	%r5443, %r5437, %r5438, 23;
	shf.l.wrap.b32 	%r5444, %r5438, %r5437, 23;
	mov.b64 	%rd6728, {%r5444, %r5443};
	xor.b64  	%rd6729, %rd6727, %rd6728;
	xor.b64  	%rd6730, %rd6689, %rd6665;
	and.b64  	%rd6731, %rd6713, %rd6730;
	xor.b64  	%rd6732, %rd6731, %rd6665;
	add.s64 	%rd6733, %rd6641, %rd6485;
	add.s64 	%rd6734, %rd6733, %rd13001;
	add.s64 	%rd6735, %rd6734, %rd6732;
	add.s64 	%rd6736, %rd6735, %rd6729;
	add.s64 	%rd6737, %rd6736, %rd6652;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5445,%dummy}, %rd6724;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5446}, %rd6724;
	}
	shf.r.wrap.b32 	%r5447, %r5446, %r5445, 28;
	shf.r.wrap.b32 	%r5448, %r5445, %r5446, 28;
	mov.b64 	%rd6738, {%r5448, %r5447};
	shf.l.wrap.b32 	%r5449, %r5445, %r5446, 30;
	shf.l.wrap.b32 	%r5450, %r5446, %r5445, 30;
	mov.b64 	%rd6739, {%r5450, %r5449};
	xor.b64  	%rd6740, %rd6739, %rd6738;
	shf.l.wrap.b32 	%r5451, %r5445, %r5446, 25;
	shf.l.wrap.b32 	%r5452, %r5446, %r5445, 25;
	mov.b64 	%rd6741, {%r5452, %r5451};
	xor.b64  	%rd6742, %rd6740, %rd6741;
	xor.b64  	%rd6743, %rd6724, %rd6676;
	xor.b64  	%rd6744, %rd6724, %rd6700;
	and.b64  	%rd6745, %rd6744, %rd6743;
	xor.b64  	%rd6746, %rd6745, %rd6724;
	add.s64 	%rd6747, %rd6736, %rd6746;
	add.s64 	%rd6748, %rd6747, %rd6742;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5453,%dummy}, %rd6737;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5454}, %rd6737;
	}
	shf.r.wrap.b32 	%r5455, %r5454, %r5453, 14;
	shf.r.wrap.b32 	%r5456, %r5453, %r5454, 14;
	mov.b64 	%rd6749, {%r5456, %r5455};
	shf.r.wrap.b32 	%r5457, %r5454, %r5453, 18;
	shf.r.wrap.b32 	%r5458, %r5453, %r5454, 18;
	mov.b64 	%rd6750, {%r5458, %r5457};
	xor.b64  	%rd6751, %rd6750, %rd6749;
	shf.l.wrap.b32 	%r5459, %r5453, %r5454, 23;
	shf.l.wrap.b32 	%r5460, %r5454, %r5453, 23;
	mov.b64 	%rd6752, {%r5460, %r5459};
	xor.b64  	%rd6753, %rd6751, %rd6752;
	xor.b64  	%rd6754, %rd6713, %rd6689;
	and.b64  	%rd6755, %rd6737, %rd6754;
	xor.b64  	%rd6756, %rd6755, %rd6689;
	add.s64 	%rd6757, %rd6665, %rd6498;
	add.s64 	%rd6758, %rd6757, %rd13000;
	add.s64 	%rd6759, %rd6758, %rd6756;
	add.s64 	%rd6760, %rd6759, %rd6753;
	add.s64 	%rd6761, %rd6760, %rd6676;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5461,%dummy}, %rd6748;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5462}, %rd6748;
	}
	shf.r.wrap.b32 	%r5463, %r5462, %r5461, 28;
	shf.r.wrap.b32 	%r5464, %r5461, %r5462, 28;
	mov.b64 	%rd6762, {%r5464, %r5463};
	shf.l.wrap.b32 	%r5465, %r5461, %r5462, 30;
	shf.l.wrap.b32 	%r5466, %r5462, %r5461, 30;
	mov.b64 	%rd6763, {%r5466, %r5465};
	xor.b64  	%rd6764, %rd6763, %rd6762;
	shf.l.wrap.b32 	%r5467, %r5461, %r5462, 25;
	shf.l.wrap.b32 	%r5468, %r5462, %r5461, 25;
	mov.b64 	%rd6765, {%r5468, %r5467};
	xor.b64  	%rd6766, %rd6764, %rd6765;
	xor.b64  	%rd6767, %rd6748, %rd6700;
	xor.b64  	%rd6768, %rd6748, %rd6724;
	and.b64  	%rd6769, %rd6768, %rd6767;
	xor.b64  	%rd6770, %rd6769, %rd6748;
	add.s64 	%rd6771, %rd6760, %rd6770;
	add.s64 	%rd6772, %rd6771, %rd6766;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5469,%dummy}, %rd6761;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5470}, %rd6761;
	}
	shf.r.wrap.b32 	%r5471, %r5470, %r5469, 14;
	shf.r.wrap.b32 	%r5472, %r5469, %r5470, 14;
	mov.b64 	%rd6773, {%r5472, %r5471};
	shf.r.wrap.b32 	%r5473, %r5470, %r5469, 18;
	shf.r.wrap.b32 	%r5474, %r5469, %r5470, 18;
	mov.b64 	%rd6774, {%r5474, %r5473};
	xor.b64  	%rd6775, %rd6774, %rd6773;
	shf.l.wrap.b32 	%r5475, %r5469, %r5470, 23;
	shf.l.wrap.b32 	%r5476, %r5470, %r5469, 23;
	mov.b64 	%rd6776, {%r5476, %r5475};
	xor.b64  	%rd6777, %rd6775, %rd6776;
	xor.b64  	%rd6778, %rd6737, %rd6713;
	and.b64  	%rd6779, %rd6761, %rd6778;
	xor.b64  	%rd6780, %rd6779, %rd6713;
	add.s64 	%rd6781, %rd6689, %rd6511;
	add.s64 	%rd6782, %rd6781, %rd12999;
	add.s64 	%rd6783, %rd6782, %rd6780;
	add.s64 	%rd6784, %rd6783, %rd6777;
	add.s64 	%rd6785, %rd6784, %rd6700;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5477,%dummy}, %rd6772;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5478}, %rd6772;
	}
	shf.r.wrap.b32 	%r5479, %r5478, %r5477, 28;
	shf.r.wrap.b32 	%r5480, %r5477, %r5478, 28;
	mov.b64 	%rd6786, {%r5480, %r5479};
	shf.l.wrap.b32 	%r5481, %r5477, %r5478, 30;
	shf.l.wrap.b32 	%r5482, %r5478, %r5477, 30;
	mov.b64 	%rd6787, {%r5482, %r5481};
	xor.b64  	%rd6788, %rd6787, %rd6786;
	shf.l.wrap.b32 	%r5483, %r5477, %r5478, 25;
	shf.l.wrap.b32 	%r5484, %r5478, %r5477, 25;
	mov.b64 	%rd6789, {%r5484, %r5483};
	xor.b64  	%rd6790, %rd6788, %rd6789;
	xor.b64  	%rd6791, %rd6772, %rd6724;
	xor.b64  	%rd6792, %rd6772, %rd6748;
	and.b64  	%rd6793, %rd6792, %rd6791;
	xor.b64  	%rd6794, %rd6793, %rd6772;
	add.s64 	%rd6795, %rd6784, %rd6794;
	add.s64 	%rd6796, %rd6795, %rd6790;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5485,%dummy}, %rd6785;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5486}, %rd6785;
	}
	shf.r.wrap.b32 	%r5487, %r5486, %r5485, 14;
	shf.r.wrap.b32 	%r5488, %r5485, %r5486, 14;
	mov.b64 	%rd6797, {%r5488, %r5487};
	shf.r.wrap.b32 	%r5489, %r5486, %r5485, 18;
	shf.r.wrap.b32 	%r5490, %r5485, %r5486, 18;
	mov.b64 	%rd6798, {%r5490, %r5489};
	xor.b64  	%rd6799, %rd6798, %rd6797;
	shf.l.wrap.b32 	%r5491, %r5485, %r5486, 23;
	shf.l.wrap.b32 	%r5492, %r5486, %r5485, 23;
	mov.b64 	%rd6800, {%r5492, %r5491};
	xor.b64  	%rd6801, %rd6799, %rd6800;
	xor.b64  	%rd6802, %rd6761, %rd6737;
	and.b64  	%rd6803, %rd6785, %rd6802;
	xor.b64  	%rd6804, %rd6803, %rd6737;
	add.s64 	%rd6805, %rd6713, %rd6524;
	add.s64 	%rd6806, %rd6805, %rd12998;
	add.s64 	%rd6807, %rd6806, %rd6804;
	add.s64 	%rd6808, %rd6807, %rd6801;
	add.s64 	%rd6809, %rd6808, %rd6724;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5493,%dummy}, %rd6796;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5494}, %rd6796;
	}
	shf.r.wrap.b32 	%r5495, %r5494, %r5493, 28;
	shf.r.wrap.b32 	%r5496, %r5493, %r5494, 28;
	mov.b64 	%rd6810, {%r5496, %r5495};
	shf.l.wrap.b32 	%r5497, %r5493, %r5494, 30;
	shf.l.wrap.b32 	%r5498, %r5494, %r5493, 30;
	mov.b64 	%rd6811, {%r5498, %r5497};
	xor.b64  	%rd6812, %rd6811, %rd6810;
	shf.l.wrap.b32 	%r5499, %r5493, %r5494, 25;
	shf.l.wrap.b32 	%r5500, %r5494, %r5493, 25;
	mov.b64 	%rd6813, {%r5500, %r5499};
	xor.b64  	%rd6814, %rd6812, %rd6813;
	xor.b64  	%rd6815, %rd6796, %rd6748;
	xor.b64  	%rd6816, %rd6796, %rd6772;
	and.b64  	%rd6817, %rd6816, %rd6815;
	xor.b64  	%rd6818, %rd6817, %rd6796;
	add.s64 	%rd6819, %rd6808, %rd6818;
	add.s64 	%rd6820, %rd6819, %rd6814;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5501,%dummy}, %rd6809;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5502}, %rd6809;
	}
	shf.r.wrap.b32 	%r5503, %r5502, %r5501, 14;
	shf.r.wrap.b32 	%r5504, %r5501, %r5502, 14;
	mov.b64 	%rd6821, {%r5504, %r5503};
	shf.r.wrap.b32 	%r5505, %r5502, %r5501, 18;
	shf.r.wrap.b32 	%r5506, %r5501, %r5502, 18;
	mov.b64 	%rd6822, {%r5506, %r5505};
	xor.b64  	%rd6823, %rd6822, %rd6821;
	shf.l.wrap.b32 	%r5507, %r5501, %r5502, 23;
	shf.l.wrap.b32 	%r5508, %r5502, %r5501, 23;
	mov.b64 	%rd6824, {%r5508, %r5507};
	xor.b64  	%rd6825, %rd6823, %rd6824;
	xor.b64  	%rd6826, %rd6785, %rd6761;
	and.b64  	%rd6827, %rd6809, %rd6826;
	xor.b64  	%rd6828, %rd6827, %rd6761;
	add.s64 	%rd6829, %rd6737, %rd6537;
	add.s64 	%rd6830, %rd6829, %rd12997;
	add.s64 	%rd6831, %rd6830, %rd6828;
	add.s64 	%rd6832, %rd6831, %rd6825;
	add.s64 	%rd6833, %rd6832, %rd6748;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5509,%dummy}, %rd6820;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5510}, %rd6820;
	}
	shf.r.wrap.b32 	%r5511, %r5510, %r5509, 28;
	shf.r.wrap.b32 	%r5512, %r5509, %r5510, 28;
	mov.b64 	%rd6834, {%r5512, %r5511};
	shf.l.wrap.b32 	%r5513, %r5509, %r5510, 30;
	shf.l.wrap.b32 	%r5514, %r5510, %r5509, 30;
	mov.b64 	%rd6835, {%r5514, %r5513};
	xor.b64  	%rd6836, %rd6835, %rd6834;
	shf.l.wrap.b32 	%r5515, %r5509, %r5510, 25;
	shf.l.wrap.b32 	%r5516, %r5510, %r5509, 25;
	mov.b64 	%rd6837, {%r5516, %r5515};
	xor.b64  	%rd6838, %rd6836, %rd6837;
	xor.b64  	%rd6839, %rd6820, %rd6772;
	xor.b64  	%rd6840, %rd6820, %rd6796;
	and.b64  	%rd6841, %rd6840, %rd6839;
	xor.b64  	%rd6842, %rd6841, %rd6820;
	add.s64 	%rd6843, %rd6832, %rd6842;
	add.s64 	%rd6844, %rd6843, %rd6838;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5517,%dummy}, %rd6833;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5518}, %rd6833;
	}
	shf.r.wrap.b32 	%r5519, %r5518, %r5517, 14;
	shf.r.wrap.b32 	%r5520, %r5517, %r5518, 14;
	mov.b64 	%rd6845, {%r5520, %r5519};
	shf.r.wrap.b32 	%r5521, %r5518, %r5517, 18;
	shf.r.wrap.b32 	%r5522, %r5517, %r5518, 18;
	mov.b64 	%rd6846, {%r5522, %r5521};
	xor.b64  	%rd6847, %rd6846, %rd6845;
	shf.l.wrap.b32 	%r5523, %r5517, %r5518, 23;
	shf.l.wrap.b32 	%r5524, %r5518, %r5517, 23;
	mov.b64 	%rd6848, {%r5524, %r5523};
	xor.b64  	%rd6849, %rd6847, %rd6848;
	xor.b64  	%rd6850, %rd6809, %rd6785;
	and.b64  	%rd6851, %rd6833, %rd6850;
	xor.b64  	%rd6852, %rd6851, %rd6785;
	add.s64 	%rd6853, %rd6761, %rd6550;
	add.s64 	%rd6854, %rd6853, %rd12996;
	add.s64 	%rd6855, %rd6854, %rd6852;
	add.s64 	%rd6856, %rd6855, %rd6849;
	add.s64 	%rd6857, %rd6856, %rd6772;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5525,%dummy}, %rd6844;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5526}, %rd6844;
	}
	shf.r.wrap.b32 	%r5527, %r5526, %r5525, 28;
	shf.r.wrap.b32 	%r5528, %r5525, %r5526, 28;
	mov.b64 	%rd6858, {%r5528, %r5527};
	shf.l.wrap.b32 	%r5529, %r5525, %r5526, 30;
	shf.l.wrap.b32 	%r5530, %r5526, %r5525, 30;
	mov.b64 	%rd6859, {%r5530, %r5529};
	xor.b64  	%rd6860, %rd6859, %rd6858;
	shf.l.wrap.b32 	%r5531, %r5525, %r5526, 25;
	shf.l.wrap.b32 	%r5532, %r5526, %r5525, 25;
	mov.b64 	%rd6861, {%r5532, %r5531};
	xor.b64  	%rd6862, %rd6860, %rd6861;
	xor.b64  	%rd6863, %rd6844, %rd6796;
	xor.b64  	%rd6864, %rd6844, %rd6820;
	and.b64  	%rd6865, %rd6864, %rd6863;
	xor.b64  	%rd6866, %rd6865, %rd6844;
	add.s64 	%rd6867, %rd6856, %rd6866;
	add.s64 	%rd6868, %rd6867, %rd6862;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5533,%dummy}, %rd6857;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5534}, %rd6857;
	}
	shf.r.wrap.b32 	%r5535, %r5534, %r5533, 14;
	shf.r.wrap.b32 	%r5536, %r5533, %r5534, 14;
	mov.b64 	%rd6869, {%r5536, %r5535};
	shf.r.wrap.b32 	%r5537, %r5534, %r5533, 18;
	shf.r.wrap.b32 	%r5538, %r5533, %r5534, 18;
	mov.b64 	%rd6870, {%r5538, %r5537};
	xor.b64  	%rd6871, %rd6870, %rd6869;
	shf.l.wrap.b32 	%r5539, %r5533, %r5534, 23;
	shf.l.wrap.b32 	%r5540, %r5534, %r5533, 23;
	mov.b64 	%rd6872, {%r5540, %r5539};
	xor.b64  	%rd6873, %rd6871, %rd6872;
	xor.b64  	%rd6874, %rd6833, %rd6809;
	and.b64  	%rd6875, %rd6857, %rd6874;
	xor.b64  	%rd6876, %rd6875, %rd6809;
	add.s64 	%rd6877, %rd6785, %rd6563;
	add.s64 	%rd6878, %rd6877, %rd12995;
	add.s64 	%rd6879, %rd6878, %rd6876;
	add.s64 	%rd6880, %rd6879, %rd6873;
	add.s64 	%rd6881, %rd6880, %rd6796;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5541,%dummy}, %rd6868;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5542}, %rd6868;
	}
	shf.r.wrap.b32 	%r5543, %r5542, %r5541, 28;
	shf.r.wrap.b32 	%r5544, %r5541, %r5542, 28;
	mov.b64 	%rd6882, {%r5544, %r5543};
	shf.l.wrap.b32 	%r5545, %r5541, %r5542, 30;
	shf.l.wrap.b32 	%r5546, %r5542, %r5541, 30;
	mov.b64 	%rd6883, {%r5546, %r5545};
	xor.b64  	%rd6884, %rd6883, %rd6882;
	shf.l.wrap.b32 	%r5547, %r5541, %r5542, 25;
	shf.l.wrap.b32 	%r5548, %r5542, %r5541, 25;
	mov.b64 	%rd6885, {%r5548, %r5547};
	xor.b64  	%rd6886, %rd6884, %rd6885;
	xor.b64  	%rd6887, %rd6868, %rd6820;
	xor.b64  	%rd6888, %rd6868, %rd6844;
	and.b64  	%rd6889, %rd6888, %rd6887;
	xor.b64  	%rd6890, %rd6889, %rd6868;
	add.s64 	%rd6891, %rd6880, %rd6890;
	add.s64 	%rd6892, %rd6891, %rd6886;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5549,%dummy}, %rd6881;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5550}, %rd6881;
	}
	shf.r.wrap.b32 	%r5551, %r5550, %r5549, 14;
	shf.r.wrap.b32 	%r5552, %r5549, %r5550, 14;
	mov.b64 	%rd6893, {%r5552, %r5551};
	shf.r.wrap.b32 	%r5553, %r5550, %r5549, 18;
	shf.r.wrap.b32 	%r5554, %r5549, %r5550, 18;
	mov.b64 	%rd6894, {%r5554, %r5553};
	xor.b64  	%rd6895, %rd6894, %rd6893;
	shf.l.wrap.b32 	%r5555, %r5549, %r5550, 23;
	shf.l.wrap.b32 	%r5556, %r5550, %r5549, 23;
	mov.b64 	%rd6896, {%r5556, %r5555};
	xor.b64  	%rd6897, %rd6895, %rd6896;
	xor.b64  	%rd6898, %rd6857, %rd6833;
	and.b64  	%rd6899, %rd6881, %rd6898;
	xor.b64  	%rd6900, %rd6899, %rd6833;
	add.s64 	%rd6901, %rd6809, %rd6576;
	add.s64 	%rd6902, %rd6901, %rd12994;
	add.s64 	%rd6903, %rd6902, %rd6900;
	add.s64 	%rd6904, %rd6903, %rd6897;
	add.s64 	%rd6905, %rd6904, %rd6820;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5557,%dummy}, %rd6892;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5558}, %rd6892;
	}
	shf.r.wrap.b32 	%r5559, %r5558, %r5557, 28;
	shf.r.wrap.b32 	%r5560, %r5557, %r5558, 28;
	mov.b64 	%rd6906, {%r5560, %r5559};
	shf.l.wrap.b32 	%r5561, %r5557, %r5558, 30;
	shf.l.wrap.b32 	%r5562, %r5558, %r5557, 30;
	mov.b64 	%rd6907, {%r5562, %r5561};
	xor.b64  	%rd6908, %rd6907, %rd6906;
	shf.l.wrap.b32 	%r5563, %r5557, %r5558, 25;
	shf.l.wrap.b32 	%r5564, %r5558, %r5557, 25;
	mov.b64 	%rd6909, {%r5564, %r5563};
	xor.b64  	%rd6910, %rd6908, %rd6909;
	xor.b64  	%rd6911, %rd6892, %rd6844;
	xor.b64  	%rd6912, %rd6892, %rd6868;
	and.b64  	%rd6913, %rd6912, %rd6911;
	xor.b64  	%rd6914, %rd6913, %rd6892;
	add.s64 	%rd6915, %rd6904, %rd6914;
	add.s64 	%rd6916, %rd6915, %rd6910;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5565,%dummy}, %rd6905;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5566}, %rd6905;
	}
	shf.r.wrap.b32 	%r5567, %r5566, %r5565, 14;
	shf.r.wrap.b32 	%r5568, %r5565, %r5566, 14;
	mov.b64 	%rd6917, {%r5568, %r5567};
	shf.r.wrap.b32 	%r5569, %r5566, %r5565, 18;
	shf.r.wrap.b32 	%r5570, %r5565, %r5566, 18;
	mov.b64 	%rd6918, {%r5570, %r5569};
	xor.b64  	%rd6919, %rd6918, %rd6917;
	shf.l.wrap.b32 	%r5571, %r5565, %r5566, 23;
	shf.l.wrap.b32 	%r5572, %r5566, %r5565, 23;
	mov.b64 	%rd6920, {%r5572, %r5571};
	xor.b64  	%rd6921, %rd6919, %rd6920;
	xor.b64  	%rd6922, %rd6881, %rd6857;
	and.b64  	%rd6923, %rd6905, %rd6922;
	xor.b64  	%rd6924, %rd6923, %rd6857;
	add.s64 	%rd6925, %rd6833, %rd6589;
	add.s64 	%rd6926, %rd6925, %rd12993;
	add.s64 	%rd6927, %rd6926, %rd6924;
	add.s64 	%rd6928, %rd6927, %rd6921;
	add.s64 	%rd6929, %rd6928, %rd6844;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5573,%dummy}, %rd6916;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5574}, %rd6916;
	}
	shf.r.wrap.b32 	%r5575, %r5574, %r5573, 28;
	shf.r.wrap.b32 	%r5576, %r5573, %r5574, 28;
	mov.b64 	%rd6930, {%r5576, %r5575};
	shf.l.wrap.b32 	%r5577, %r5573, %r5574, 30;
	shf.l.wrap.b32 	%r5578, %r5574, %r5573, 30;
	mov.b64 	%rd6931, {%r5578, %r5577};
	xor.b64  	%rd6932, %rd6931, %rd6930;
	shf.l.wrap.b32 	%r5579, %r5573, %r5574, 25;
	shf.l.wrap.b32 	%r5580, %r5574, %r5573, 25;
	mov.b64 	%rd6933, {%r5580, %r5579};
	xor.b64  	%rd6934, %rd6932, %rd6933;
	xor.b64  	%rd6935, %rd6916, %rd6868;
	xor.b64  	%rd6936, %rd6916, %rd6892;
	and.b64  	%rd6937, %rd6936, %rd6935;
	xor.b64  	%rd6938, %rd6937, %rd6916;
	add.s64 	%rd6939, %rd6928, %rd6938;
	add.s64 	%rd6940, %rd6939, %rd6934;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5581,%dummy}, %rd6929;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5582}, %rd6929;
	}
	shf.r.wrap.b32 	%r5583, %r5582, %r5581, 14;
	shf.r.wrap.b32 	%r5584, %r5581, %r5582, 14;
	mov.b64 	%rd6941, {%r5584, %r5583};
	shf.r.wrap.b32 	%r5585, %r5582, %r5581, 18;
	shf.r.wrap.b32 	%r5586, %r5581, %r5582, 18;
	mov.b64 	%rd6942, {%r5586, %r5585};
	xor.b64  	%rd6943, %rd6942, %rd6941;
	shf.l.wrap.b32 	%r5587, %r5581, %r5582, 23;
	shf.l.wrap.b32 	%r5588, %r5582, %r5581, 23;
	mov.b64 	%rd6944, {%r5588, %r5587};
	xor.b64  	%rd6945, %rd6943, %rd6944;
	xor.b64  	%rd6946, %rd6905, %rd6881;
	and.b64  	%rd6947, %rd6929, %rd6946;
	xor.b64  	%rd6948, %rd6947, %rd6881;
	add.s64 	%rd6949, %rd6857, %rd6602;
	add.s64 	%rd6950, %rd6949, %rd12992;
	add.s64 	%rd6951, %rd6950, %rd6948;
	add.s64 	%rd6952, %rd6951, %rd6945;
	add.s64 	%rd6953, %rd6952, %rd6868;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5589,%dummy}, %rd6940;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5590}, %rd6940;
	}
	shf.r.wrap.b32 	%r5591, %r5590, %r5589, 28;
	shf.r.wrap.b32 	%r5592, %r5589, %r5590, 28;
	mov.b64 	%rd6954, {%r5592, %r5591};
	shf.l.wrap.b32 	%r5593, %r5589, %r5590, 30;
	shf.l.wrap.b32 	%r5594, %r5590, %r5589, 30;
	mov.b64 	%rd6955, {%r5594, %r5593};
	xor.b64  	%rd6956, %rd6955, %rd6954;
	shf.l.wrap.b32 	%r5595, %r5589, %r5590, 25;
	shf.l.wrap.b32 	%r5596, %r5590, %r5589, 25;
	mov.b64 	%rd6957, {%r5596, %r5595};
	xor.b64  	%rd6958, %rd6956, %rd6957;
	xor.b64  	%rd6959, %rd6940, %rd6892;
	xor.b64  	%rd6960, %rd6940, %rd6916;
	and.b64  	%rd6961, %rd6960, %rd6959;
	xor.b64  	%rd6962, %rd6961, %rd6940;
	add.s64 	%rd6963, %rd6952, %rd6962;
	add.s64 	%rd6964, %rd6963, %rd6958;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5597,%dummy}, %rd6953;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5598}, %rd6953;
	}
	shf.r.wrap.b32 	%r5599, %r5598, %r5597, 14;
	shf.r.wrap.b32 	%r5600, %r5597, %r5598, 14;
	mov.b64 	%rd6965, {%r5600, %r5599};
	shf.r.wrap.b32 	%r5601, %r5598, %r5597, 18;
	shf.r.wrap.b32 	%r5602, %r5597, %r5598, 18;
	mov.b64 	%rd6966, {%r5602, %r5601};
	xor.b64  	%rd6967, %rd6966, %rd6965;
	shf.l.wrap.b32 	%r5603, %r5597, %r5598, 23;
	shf.l.wrap.b32 	%r5604, %r5598, %r5597, 23;
	mov.b64 	%rd6968, {%r5604, %r5603};
	xor.b64  	%rd6969, %rd6967, %rd6968;
	xor.b64  	%rd6970, %rd6929, %rd6905;
	and.b64  	%rd6971, %rd6953, %rd6970;
	xor.b64  	%rd6972, %rd6971, %rd6905;
	add.s64 	%rd6973, %rd6881, %rd6615;
	add.s64 	%rd6974, %rd6973, %rd12991;
	add.s64 	%rd6975, %rd6974, %rd6972;
	add.s64 	%rd6976, %rd6975, %rd6969;
	add.s64 	%rd6977, %rd6976, %rd6892;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5605,%dummy}, %rd6964;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5606}, %rd6964;
	}
	shf.r.wrap.b32 	%r5607, %r5606, %r5605, 28;
	shf.r.wrap.b32 	%r5608, %r5605, %r5606, 28;
	mov.b64 	%rd6978, {%r5608, %r5607};
	shf.l.wrap.b32 	%r5609, %r5605, %r5606, 30;
	shf.l.wrap.b32 	%r5610, %r5606, %r5605, 30;
	mov.b64 	%rd6979, {%r5610, %r5609};
	xor.b64  	%rd6980, %rd6979, %rd6978;
	shf.l.wrap.b32 	%r5611, %r5605, %r5606, 25;
	shf.l.wrap.b32 	%r5612, %r5606, %r5605, 25;
	mov.b64 	%rd6981, {%r5612, %r5611};
	xor.b64  	%rd6982, %rd6980, %rd6981;
	xor.b64  	%rd6983, %rd6964, %rd6916;
	xor.b64  	%rd6984, %rd6964, %rd6940;
	and.b64  	%rd6985, %rd6984, %rd6983;
	xor.b64  	%rd6986, %rd6985, %rd6964;
	add.s64 	%rd6987, %rd6976, %rd6986;
	add.s64 	%rd6988, %rd6987, %rd6982;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5613,%dummy}, %rd6977;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5614}, %rd6977;
	}
	shf.r.wrap.b32 	%r5615, %r5614, %r5613, 14;
	shf.r.wrap.b32 	%r5616, %r5613, %r5614, 14;
	mov.b64 	%rd6989, {%r5616, %r5615};
	shf.r.wrap.b32 	%r5617, %r5614, %r5613, 18;
	shf.r.wrap.b32 	%r5618, %r5613, %r5614, 18;
	mov.b64 	%rd6990, {%r5618, %r5617};
	xor.b64  	%rd6991, %rd6990, %rd6989;
	shf.l.wrap.b32 	%r5619, %r5613, %r5614, 23;
	shf.l.wrap.b32 	%r5620, %r5614, %r5613, 23;
	mov.b64 	%rd6992, {%r5620, %r5619};
	xor.b64  	%rd6993, %rd6991, %rd6992;
	xor.b64  	%rd6994, %rd6953, %rd6929;
	and.b64  	%rd6995, %rd6977, %rd6994;
	xor.b64  	%rd6996, %rd6995, %rd6929;
	add.s64 	%rd6997, %rd6905, %rd6628;
	add.s64 	%rd6998, %rd6997, %rd12990;
	add.s64 	%rd6999, %rd6998, %rd6996;
	add.s64 	%rd7000, %rd6999, %rd6993;
	add.s64 	%rd7001, %rd7000, %rd6916;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5621,%dummy}, %rd6988;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5622}, %rd6988;
	}
	shf.r.wrap.b32 	%r5623, %r5622, %r5621, 28;
	shf.r.wrap.b32 	%r5624, %r5621, %r5622, 28;
	mov.b64 	%rd7002, {%r5624, %r5623};
	shf.l.wrap.b32 	%r5625, %r5621, %r5622, 30;
	shf.l.wrap.b32 	%r5626, %r5622, %r5621, 30;
	mov.b64 	%rd7003, {%r5626, %r5625};
	xor.b64  	%rd7004, %rd7003, %rd7002;
	shf.l.wrap.b32 	%r5627, %r5621, %r5622, 25;
	shf.l.wrap.b32 	%r5628, %r5622, %r5621, 25;
	mov.b64 	%rd7005, {%r5628, %r5627};
	xor.b64  	%rd7006, %rd7004, %rd7005;
	xor.b64  	%rd7007, %rd6988, %rd6940;
	xor.b64  	%rd7008, %rd6988, %rd6964;
	and.b64  	%rd7009, %rd7008, %rd7007;
	xor.b64  	%rd7010, %rd7009, %rd6988;
	add.s64 	%rd7011, %rd7000, %rd7010;
	add.s64 	%rd7012, %rd7011, %rd7006;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5629,%dummy}, %rd6615;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5630}, %rd6615;
	}
	shf.r.wrap.b32 	%r5631, %r5630, %r5629, 19;
	shf.r.wrap.b32 	%r5632, %r5629, %r5630, 19;
	mov.b64 	%rd7013, {%r5632, %r5631};
	shf.l.wrap.b32 	%r5633, %r5629, %r5630, 3;
	shf.l.wrap.b32 	%r5634, %r5630, %r5629, 3;
	mov.b64 	%rd7014, {%r5634, %r5633};
	shr.u64 	%rd7015, %rd6615, 6;
	xor.b64  	%rd7016, %rd7013, %rd7015;
	xor.b64  	%rd7017, %rd7016, %rd7014;
	shf.r.wrap.b32 	%r5635, %r5224, %r5223, 1;
	shf.r.wrap.b32 	%r5636, %r5223, %r5224, 1;
	mov.b64 	%rd7018, {%r5636, %r5635};
	shf.r.wrap.b32 	%r5637, %r5224, %r5223, 8;
	shf.r.wrap.b32 	%r5638, %r5223, %r5224, 8;
	mov.b64 	%rd7019, {%r5638, %r5637};
	shr.u64 	%rd7020, %rd6446, 7;
	xor.b64  	%rd7021, %rd7018, %rd7020;
	xor.b64  	%rd7022, %rd7021, %rd7019;
	add.s64 	%rd7023, %rd6550, %rd6433;
	add.s64 	%rd7024, %rd7023, %rd7017;
	add.s64 	%rd7025, %rd7024, %rd7022;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5639,%dummy}, %rd6628;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5640}, %rd6628;
	}
	shf.r.wrap.b32 	%r5641, %r5640, %r5639, 19;
	shf.r.wrap.b32 	%r5642, %r5639, %r5640, 19;
	mov.b64 	%rd7026, {%r5642, %r5641};
	shf.l.wrap.b32 	%r5643, %r5639, %r5640, 3;
	shf.l.wrap.b32 	%r5644, %r5640, %r5639, 3;
	mov.b64 	%rd7027, {%r5644, %r5643};
	shr.u64 	%rd7028, %rd6628, 6;
	xor.b64  	%rd7029, %rd7026, %rd7028;
	xor.b64  	%rd7030, %rd7029, %rd7027;
	shf.r.wrap.b32 	%r5645, %r5236, %r5235, 1;
	shf.r.wrap.b32 	%r5646, %r5235, %r5236, 1;
	mov.b64 	%rd7031, {%r5646, %r5645};
	shf.r.wrap.b32 	%r5647, %r5236, %r5235, 8;
	shf.r.wrap.b32 	%r5648, %r5235, %r5236, 8;
	mov.b64 	%rd7032, {%r5648, %r5647};
	shr.u64 	%rd7033, %rd6459, 7;
	xor.b64  	%rd7034, %rd7031, %rd7033;
	xor.b64  	%rd7035, %rd7034, %rd7032;
	add.s64 	%rd7036, %rd6563, %rd6446;
	add.s64 	%rd7037, %rd7036, %rd7030;
	add.s64 	%rd7038, %rd7037, %rd7035;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5649,%dummy}, %rd7025;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5650}, %rd7025;
	}
	shf.r.wrap.b32 	%r5651, %r5650, %r5649, 19;
	shf.r.wrap.b32 	%r5652, %r5649, %r5650, 19;
	mov.b64 	%rd7039, {%r5652, %r5651};
	shf.l.wrap.b32 	%r5653, %r5649, %r5650, 3;
	shf.l.wrap.b32 	%r5654, %r5650, %r5649, 3;
	mov.b64 	%rd7040, {%r5654, %r5653};
	shr.u64 	%rd7041, %rd7025, 6;
	xor.b64  	%rd7042, %rd7039, %rd7041;
	xor.b64  	%rd7043, %rd7042, %rd7040;
	shf.r.wrap.b32 	%r5655, %r5248, %r5247, 1;
	shf.r.wrap.b32 	%r5656, %r5247, %r5248, 1;
	mov.b64 	%rd7044, {%r5656, %r5655};
	shf.r.wrap.b32 	%r5657, %r5248, %r5247, 8;
	shf.r.wrap.b32 	%r5658, %r5247, %r5248, 8;
	mov.b64 	%rd7045, {%r5658, %r5657};
	shr.u64 	%rd7046, %rd6472, 7;
	xor.b64  	%rd7047, %rd7044, %rd7046;
	xor.b64  	%rd7048, %rd7047, %rd7045;
	add.s64 	%rd7049, %rd6576, %rd6459;
	add.s64 	%rd7050, %rd7049, %rd7043;
	add.s64 	%rd7051, %rd7050, %rd7048;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5659,%dummy}, %rd7038;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5660}, %rd7038;
	}
	shf.r.wrap.b32 	%r5661, %r5660, %r5659, 19;
	shf.r.wrap.b32 	%r5662, %r5659, %r5660, 19;
	mov.b64 	%rd7052, {%r5662, %r5661};
	shf.l.wrap.b32 	%r5663, %r5659, %r5660, 3;
	shf.l.wrap.b32 	%r5664, %r5660, %r5659, 3;
	mov.b64 	%rd7053, {%r5664, %r5663};
	shr.u64 	%rd7054, %rd7038, 6;
	xor.b64  	%rd7055, %rd7052, %rd7054;
	xor.b64  	%rd7056, %rd7055, %rd7053;
	shf.r.wrap.b32 	%r5665, %r5260, %r5259, 1;
	shf.r.wrap.b32 	%r5666, %r5259, %r5260, 1;
	mov.b64 	%rd7057, {%r5666, %r5665};
	shf.r.wrap.b32 	%r5667, %r5260, %r5259, 8;
	shf.r.wrap.b32 	%r5668, %r5259, %r5260, 8;
	mov.b64 	%rd7058, {%r5668, %r5667};
	shr.u64 	%rd7059, %rd6485, 7;
	xor.b64  	%rd7060, %rd7057, %rd7059;
	xor.b64  	%rd7061, %rd7060, %rd7058;
	add.s64 	%rd7062, %rd6589, %rd6472;
	add.s64 	%rd7063, %rd7062, %rd7056;
	add.s64 	%rd7064, %rd7063, %rd7061;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5669,%dummy}, %rd7051;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5670}, %rd7051;
	}
	shf.r.wrap.b32 	%r5671, %r5670, %r5669, 19;
	shf.r.wrap.b32 	%r5672, %r5669, %r5670, 19;
	mov.b64 	%rd7065, {%r5672, %r5671};
	shf.l.wrap.b32 	%r5673, %r5669, %r5670, 3;
	shf.l.wrap.b32 	%r5674, %r5670, %r5669, 3;
	mov.b64 	%rd7066, {%r5674, %r5673};
	shr.u64 	%rd7067, %rd7051, 6;
	xor.b64  	%rd7068, %rd7065, %rd7067;
	xor.b64  	%rd7069, %rd7068, %rd7066;
	shf.r.wrap.b32 	%r5675, %r5272, %r5271, 1;
	shf.r.wrap.b32 	%r5676, %r5271, %r5272, 1;
	mov.b64 	%rd7070, {%r5676, %r5675};
	shf.r.wrap.b32 	%r5677, %r5272, %r5271, 8;
	shf.r.wrap.b32 	%r5678, %r5271, %r5272, 8;
	mov.b64 	%rd7071, {%r5678, %r5677};
	shr.u64 	%rd7072, %rd6498, 7;
	xor.b64  	%rd7073, %rd7070, %rd7072;
	xor.b64  	%rd7074, %rd7073, %rd7071;
	add.s64 	%rd7075, %rd6602, %rd6485;
	add.s64 	%rd7076, %rd7075, %rd7069;
	add.s64 	%rd7077, %rd7076, %rd7074;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5679,%dummy}, %rd7064;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5680}, %rd7064;
	}
	shf.r.wrap.b32 	%r5681, %r5680, %r5679, 19;
	shf.r.wrap.b32 	%r5682, %r5679, %r5680, 19;
	mov.b64 	%rd7078, {%r5682, %r5681};
	shf.l.wrap.b32 	%r5683, %r5679, %r5680, 3;
	shf.l.wrap.b32 	%r5684, %r5680, %r5679, 3;
	mov.b64 	%rd7079, {%r5684, %r5683};
	shr.u64 	%rd7080, %rd7064, 6;
	xor.b64  	%rd7081, %rd7078, %rd7080;
	xor.b64  	%rd7082, %rd7081, %rd7079;
	shf.r.wrap.b32 	%r5685, %r5284, %r5283, 1;
	shf.r.wrap.b32 	%r5686, %r5283, %r5284, 1;
	mov.b64 	%rd7083, {%r5686, %r5685};
	shf.r.wrap.b32 	%r5687, %r5284, %r5283, 8;
	shf.r.wrap.b32 	%r5688, %r5283, %r5284, 8;
	mov.b64 	%rd7084, {%r5688, %r5687};
	shr.u64 	%rd7085, %rd6511, 7;
	xor.b64  	%rd7086, %rd7083, %rd7085;
	xor.b64  	%rd7087, %rd7086, %rd7084;
	add.s64 	%rd7088, %rd6615, %rd6498;
	add.s64 	%rd7089, %rd7088, %rd7082;
	add.s64 	%rd7090, %rd7089, %rd7087;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5689,%dummy}, %rd7077;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5690}, %rd7077;
	}
	shf.r.wrap.b32 	%r5691, %r5690, %r5689, 19;
	shf.r.wrap.b32 	%r5692, %r5689, %r5690, 19;
	mov.b64 	%rd7091, {%r5692, %r5691};
	shf.l.wrap.b32 	%r5693, %r5689, %r5690, 3;
	shf.l.wrap.b32 	%r5694, %r5690, %r5689, 3;
	mov.b64 	%rd7092, {%r5694, %r5693};
	shr.u64 	%rd7093, %rd7077, 6;
	xor.b64  	%rd7094, %rd7091, %rd7093;
	xor.b64  	%rd7095, %rd7094, %rd7092;
	shf.r.wrap.b32 	%r5695, %r5296, %r5295, 1;
	shf.r.wrap.b32 	%r5696, %r5295, %r5296, 1;
	mov.b64 	%rd7096, {%r5696, %r5695};
	shf.r.wrap.b32 	%r5697, %r5296, %r5295, 8;
	shf.r.wrap.b32 	%r5698, %r5295, %r5296, 8;
	mov.b64 	%rd7097, {%r5698, %r5697};
	shr.u64 	%rd7098, %rd6524, 7;
	xor.b64  	%rd7099, %rd7096, %rd7098;
	xor.b64  	%rd7100, %rd7099, %rd7097;
	add.s64 	%rd7101, %rd6628, %rd6511;
	add.s64 	%rd7102, %rd7101, %rd7095;
	add.s64 	%rd7103, %rd7102, %rd7100;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5699,%dummy}, %rd7090;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5700}, %rd7090;
	}
	shf.r.wrap.b32 	%r5701, %r5700, %r5699, 19;
	shf.r.wrap.b32 	%r5702, %r5699, %r5700, 19;
	mov.b64 	%rd7104, {%r5702, %r5701};
	shf.l.wrap.b32 	%r5703, %r5699, %r5700, 3;
	shf.l.wrap.b32 	%r5704, %r5700, %r5699, 3;
	mov.b64 	%rd7105, {%r5704, %r5703};
	shr.u64 	%rd7106, %rd7090, 6;
	xor.b64  	%rd7107, %rd7104, %rd7106;
	xor.b64  	%rd7108, %rd7107, %rd7105;
	shf.r.wrap.b32 	%r5705, %r5308, %r5307, 1;
	shf.r.wrap.b32 	%r5706, %r5307, %r5308, 1;
	mov.b64 	%rd7109, {%r5706, %r5705};
	shf.r.wrap.b32 	%r5707, %r5308, %r5307, 8;
	shf.r.wrap.b32 	%r5708, %r5307, %r5308, 8;
	mov.b64 	%rd7110, {%r5708, %r5707};
	shr.u64 	%rd7111, %rd6537, 7;
	xor.b64  	%rd7112, %rd7109, %rd7111;
	xor.b64  	%rd7113, %rd7112, %rd7110;
	add.s64 	%rd7114, %rd7025, %rd6524;
	add.s64 	%rd7115, %rd7114, %rd7108;
	add.s64 	%rd7116, %rd7115, %rd7113;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5709,%dummy}, %rd7103;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5710}, %rd7103;
	}
	shf.r.wrap.b32 	%r5711, %r5710, %r5709, 19;
	shf.r.wrap.b32 	%r5712, %r5709, %r5710, 19;
	mov.b64 	%rd7117, {%r5712, %r5711};
	shf.l.wrap.b32 	%r5713, %r5709, %r5710, 3;
	shf.l.wrap.b32 	%r5714, %r5710, %r5709, 3;
	mov.b64 	%rd7118, {%r5714, %r5713};
	shr.u64 	%rd7119, %rd7103, 6;
	xor.b64  	%rd7120, %rd7117, %rd7119;
	xor.b64  	%rd7121, %rd7120, %rd7118;
	shf.r.wrap.b32 	%r5715, %r5320, %r5319, 1;
	shf.r.wrap.b32 	%r5716, %r5319, %r5320, 1;
	mov.b64 	%rd7122, {%r5716, %r5715};
	shf.r.wrap.b32 	%r5717, %r5320, %r5319, 8;
	shf.r.wrap.b32 	%r5718, %r5319, %r5320, 8;
	mov.b64 	%rd7123, {%r5718, %r5717};
	shr.u64 	%rd7124, %rd6550, 7;
	xor.b64  	%rd7125, %rd7122, %rd7124;
	xor.b64  	%rd7126, %rd7125, %rd7123;
	add.s64 	%rd7127, %rd7038, %rd6537;
	add.s64 	%rd7128, %rd7127, %rd7121;
	add.s64 	%rd7129, %rd7128, %rd7126;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5719,%dummy}, %rd7116;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5720}, %rd7116;
	}
	shf.r.wrap.b32 	%r5721, %r5720, %r5719, 19;
	shf.r.wrap.b32 	%r5722, %r5719, %r5720, 19;
	mov.b64 	%rd7130, {%r5722, %r5721};
	shf.l.wrap.b32 	%r5723, %r5719, %r5720, 3;
	shf.l.wrap.b32 	%r5724, %r5720, %r5719, 3;
	mov.b64 	%rd7131, {%r5724, %r5723};
	shr.u64 	%rd7132, %rd7116, 6;
	xor.b64  	%rd7133, %rd7130, %rd7132;
	xor.b64  	%rd7134, %rd7133, %rd7131;
	shf.r.wrap.b32 	%r5725, %r5332, %r5331, 1;
	shf.r.wrap.b32 	%r5726, %r5331, %r5332, 1;
	mov.b64 	%rd7135, {%r5726, %r5725};
	shf.r.wrap.b32 	%r5727, %r5332, %r5331, 8;
	shf.r.wrap.b32 	%r5728, %r5331, %r5332, 8;
	mov.b64 	%rd7136, {%r5728, %r5727};
	shr.u64 	%rd7137, %rd6563, 7;
	xor.b64  	%rd7138, %rd7135, %rd7137;
	xor.b64  	%rd7139, %rd7138, %rd7136;
	add.s64 	%rd7140, %rd7051, %rd6550;
	add.s64 	%rd7141, %rd7140, %rd7134;
	add.s64 	%rd7142, %rd7141, %rd7139;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5729,%dummy}, %rd7129;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5730}, %rd7129;
	}
	shf.r.wrap.b32 	%r5731, %r5730, %r5729, 19;
	shf.r.wrap.b32 	%r5732, %r5729, %r5730, 19;
	mov.b64 	%rd7143, {%r5732, %r5731};
	shf.l.wrap.b32 	%r5733, %r5729, %r5730, 3;
	shf.l.wrap.b32 	%r5734, %r5730, %r5729, 3;
	mov.b64 	%rd7144, {%r5734, %r5733};
	shr.u64 	%rd7145, %rd7129, 6;
	xor.b64  	%rd7146, %rd7143, %rd7145;
	xor.b64  	%rd7147, %rd7146, %rd7144;
	shf.r.wrap.b32 	%r5735, %r5344, %r5343, 1;
	shf.r.wrap.b32 	%r5736, %r5343, %r5344, 1;
	mov.b64 	%rd7148, {%r5736, %r5735};
	shf.r.wrap.b32 	%r5737, %r5344, %r5343, 8;
	shf.r.wrap.b32 	%r5738, %r5343, %r5344, 8;
	mov.b64 	%rd7149, {%r5738, %r5737};
	shr.u64 	%rd7150, %rd6576, 7;
	xor.b64  	%rd7151, %rd7148, %rd7150;
	xor.b64  	%rd7152, %rd7151, %rd7149;
	add.s64 	%rd7153, %rd7064, %rd6563;
	add.s64 	%rd7154, %rd7153, %rd7147;
	add.s64 	%rd7155, %rd7154, %rd7152;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5739,%dummy}, %rd7142;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5740}, %rd7142;
	}
	shf.r.wrap.b32 	%r5741, %r5740, %r5739, 19;
	shf.r.wrap.b32 	%r5742, %r5739, %r5740, 19;
	mov.b64 	%rd7156, {%r5742, %r5741};
	shf.l.wrap.b32 	%r5743, %r5739, %r5740, 3;
	shf.l.wrap.b32 	%r5744, %r5740, %r5739, 3;
	mov.b64 	%rd7157, {%r5744, %r5743};
	shr.u64 	%rd7158, %rd7142, 6;
	xor.b64  	%rd7159, %rd7156, %rd7158;
	xor.b64  	%rd7160, %rd7159, %rd7157;
	shf.r.wrap.b32 	%r5745, %r5354, %r5353, 1;
	shf.r.wrap.b32 	%r5746, %r5353, %r5354, 1;
	mov.b64 	%rd7161, {%r5746, %r5745};
	shf.r.wrap.b32 	%r5747, %r5354, %r5353, 8;
	shf.r.wrap.b32 	%r5748, %r5353, %r5354, 8;
	mov.b64 	%rd7162, {%r5748, %r5747};
	shr.u64 	%rd7163, %rd6589, 7;
	xor.b64  	%rd7164, %rd7161, %rd7163;
	xor.b64  	%rd7165, %rd7164, %rd7162;
	add.s64 	%rd7166, %rd7077, %rd6576;
	add.s64 	%rd7167, %rd7166, %rd7160;
	add.s64 	%rd7168, %rd7167, %rd7165;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5749,%dummy}, %rd7155;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5750}, %rd7155;
	}
	shf.r.wrap.b32 	%r5751, %r5750, %r5749, 19;
	shf.r.wrap.b32 	%r5752, %r5749, %r5750, 19;
	mov.b64 	%rd7169, {%r5752, %r5751};
	shf.l.wrap.b32 	%r5753, %r5749, %r5750, 3;
	shf.l.wrap.b32 	%r5754, %r5750, %r5749, 3;
	mov.b64 	%rd7170, {%r5754, %r5753};
	shr.u64 	%rd7171, %rd7155, 6;
	xor.b64  	%rd7172, %rd7169, %rd7171;
	xor.b64  	%rd7173, %rd7172, %rd7170;
	shf.r.wrap.b32 	%r5755, %r5364, %r5363, 1;
	shf.r.wrap.b32 	%r5756, %r5363, %r5364, 1;
	mov.b64 	%rd7174, {%r5756, %r5755};
	shf.r.wrap.b32 	%r5757, %r5364, %r5363, 8;
	shf.r.wrap.b32 	%r5758, %r5363, %r5364, 8;
	mov.b64 	%rd7175, {%r5758, %r5757};
	shr.u64 	%rd7176, %rd6602, 7;
	xor.b64  	%rd7177, %rd7174, %rd7176;
	xor.b64  	%rd7178, %rd7177, %rd7175;
	add.s64 	%rd7179, %rd7090, %rd6589;
	add.s64 	%rd7180, %rd7179, %rd7173;
	add.s64 	%rd7181, %rd7180, %rd7178;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5759,%dummy}, %rd7168;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5760}, %rd7168;
	}
	shf.r.wrap.b32 	%r5761, %r5760, %r5759, 19;
	shf.r.wrap.b32 	%r5762, %r5759, %r5760, 19;
	mov.b64 	%rd7182, {%r5762, %r5761};
	shf.l.wrap.b32 	%r5763, %r5759, %r5760, 3;
	shf.l.wrap.b32 	%r5764, %r5760, %r5759, 3;
	mov.b64 	%rd7183, {%r5764, %r5763};
	shr.u64 	%rd7184, %rd7168, 6;
	xor.b64  	%rd7185, %rd7182, %rd7184;
	xor.b64  	%rd7186, %rd7185, %rd7183;
	shf.r.wrap.b32 	%r5765, %r5630, %r5629, 1;
	shf.r.wrap.b32 	%r5766, %r5629, %r5630, 1;
	mov.b64 	%rd7187, {%r5766, %r5765};
	shf.r.wrap.b32 	%r5767, %r5630, %r5629, 8;
	shf.r.wrap.b32 	%r5768, %r5629, %r5630, 8;
	mov.b64 	%rd7188, {%r5768, %r5767};
	shr.u64 	%rd7189, %rd6615, 7;
	xor.b64  	%rd7190, %rd7187, %rd7189;
	xor.b64  	%rd7191, %rd7190, %rd7188;
	add.s64 	%rd7192, %rd7103, %rd6602;
	add.s64 	%rd7193, %rd7192, %rd7186;
	add.s64 	%rd7194, %rd7193, %rd7191;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5769,%dummy}, %rd7181;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5770}, %rd7181;
	}
	shf.r.wrap.b32 	%r5771, %r5770, %r5769, 19;
	shf.r.wrap.b32 	%r5772, %r5769, %r5770, 19;
	mov.b64 	%rd7195, {%r5772, %r5771};
	shf.l.wrap.b32 	%r5773, %r5769, %r5770, 3;
	shf.l.wrap.b32 	%r5774, %r5770, %r5769, 3;
	mov.b64 	%rd7196, {%r5774, %r5773};
	shr.u64 	%rd7197, %rd7181, 6;
	xor.b64  	%rd7198, %rd7195, %rd7197;
	xor.b64  	%rd7199, %rd7198, %rd7196;
	shf.r.wrap.b32 	%r5775, %r5640, %r5639, 1;
	shf.r.wrap.b32 	%r5776, %r5639, %r5640, 1;
	mov.b64 	%rd7200, {%r5776, %r5775};
	shf.r.wrap.b32 	%r5777, %r5640, %r5639, 8;
	shf.r.wrap.b32 	%r5778, %r5639, %r5640, 8;
	mov.b64 	%rd7201, {%r5778, %r5777};
	shr.u64 	%rd7202, %rd6628, 7;
	xor.b64  	%rd7203, %rd7200, %rd7202;
	xor.b64  	%rd7204, %rd7203, %rd7201;
	add.s64 	%rd7205, %rd7116, %rd6615;
	add.s64 	%rd7206, %rd7205, %rd7199;
	add.s64 	%rd7207, %rd7206, %rd7204;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5779,%dummy}, %rd7194;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5780}, %rd7194;
	}
	shf.r.wrap.b32 	%r5781, %r5780, %r5779, 19;
	shf.r.wrap.b32 	%r5782, %r5779, %r5780, 19;
	mov.b64 	%rd7208, {%r5782, %r5781};
	shf.l.wrap.b32 	%r5783, %r5779, %r5780, 3;
	shf.l.wrap.b32 	%r5784, %r5780, %r5779, 3;
	mov.b64 	%rd7209, {%r5784, %r5783};
	shr.u64 	%rd7210, %rd7194, 6;
	xor.b64  	%rd7211, %rd7208, %rd7210;
	xor.b64  	%rd7212, %rd7211, %rd7209;
	shf.r.wrap.b32 	%r5785, %r5650, %r5649, 1;
	shf.r.wrap.b32 	%r5786, %r5649, %r5650, 1;
	mov.b64 	%rd7213, {%r5786, %r5785};
	shf.r.wrap.b32 	%r5787, %r5650, %r5649, 8;
	shf.r.wrap.b32 	%r5788, %r5649, %r5650, 8;
	mov.b64 	%rd7214, {%r5788, %r5787};
	shr.u64 	%rd7215, %rd7025, 7;
	xor.b64  	%rd7216, %rd7213, %rd7215;
	xor.b64  	%rd7217, %rd7216, %rd7214;
	add.s64 	%rd7218, %rd7129, %rd6628;
	add.s64 	%rd7219, %rd7218, %rd7212;
	add.s64 	%rd7220, %rd7219, %rd7217;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5789,%dummy}, %rd7001;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5790}, %rd7001;
	}
	shf.r.wrap.b32 	%r5791, %r5790, %r5789, 14;
	shf.r.wrap.b32 	%r5792, %r5789, %r5790, 14;
	mov.b64 	%rd7221, {%r5792, %r5791};
	shf.r.wrap.b32 	%r5793, %r5790, %r5789, 18;
	shf.r.wrap.b32 	%r5794, %r5789, %r5790, 18;
	mov.b64 	%rd7222, {%r5794, %r5793};
	xor.b64  	%rd7223, %rd7222, %rd7221;
	shf.l.wrap.b32 	%r5795, %r5789, %r5790, 23;
	shf.l.wrap.b32 	%r5796, %r5790, %r5789, 23;
	mov.b64 	%rd7224, {%r5796, %r5795};
	xor.b64  	%rd7225, %rd7223, %rd7224;
	xor.b64  	%rd7226, %rd6977, %rd6953;
	and.b64  	%rd7227, %rd7226, %rd7001;
	xor.b64  	%rd7228, %rd7227, %rd6953;
	add.s64 	%rd7229, %rd7228, %rd6929;
	add.s64 	%rd7230, %rd7229, %rd7025;
	add.s64 	%rd7231, %rd7230, %rd12989;
	add.s64 	%rd7232, %rd7231, %rd7225;
	add.s64 	%rd7233, %rd7232, %rd6940;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5797,%dummy}, %rd7012;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5798}, %rd7012;
	}
	shf.r.wrap.b32 	%r5799, %r5798, %r5797, 28;
	shf.r.wrap.b32 	%r5800, %r5797, %r5798, 28;
	mov.b64 	%rd7234, {%r5800, %r5799};
	shf.l.wrap.b32 	%r5801, %r5797, %r5798, 30;
	shf.l.wrap.b32 	%r5802, %r5798, %r5797, 30;
	mov.b64 	%rd7235, {%r5802, %r5801};
	xor.b64  	%rd7236, %rd7235, %rd7234;
	shf.l.wrap.b32 	%r5803, %r5797, %r5798, 25;
	shf.l.wrap.b32 	%r5804, %r5798, %r5797, 25;
	mov.b64 	%rd7237, {%r5804, %r5803};
	xor.b64  	%rd7238, %rd7236, %rd7237;
	xor.b64  	%rd7239, %rd7012, %rd6964;
	xor.b64  	%rd7240, %rd7012, %rd6988;
	and.b64  	%rd7241, %rd7240, %rd7239;
	xor.b64  	%rd7242, %rd7241, %rd7012;
	add.s64 	%rd7243, %rd7232, %rd7242;
	add.s64 	%rd7244, %rd7243, %rd7238;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5805,%dummy}, %rd7233;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5806}, %rd7233;
	}
	shf.r.wrap.b32 	%r5807, %r5806, %r5805, 14;
	shf.r.wrap.b32 	%r5808, %r5805, %r5806, 14;
	mov.b64 	%rd7245, {%r5808, %r5807};
	shf.r.wrap.b32 	%r5809, %r5806, %r5805, 18;
	shf.r.wrap.b32 	%r5810, %r5805, %r5806, 18;
	mov.b64 	%rd7246, {%r5810, %r5809};
	xor.b64  	%rd7247, %rd7246, %rd7245;
	shf.l.wrap.b32 	%r5811, %r5805, %r5806, 23;
	shf.l.wrap.b32 	%r5812, %r5806, %r5805, 23;
	mov.b64 	%rd7248, {%r5812, %r5811};
	xor.b64  	%rd7249, %rd7247, %rd7248;
	xor.b64  	%rd7250, %rd7001, %rd6977;
	and.b64  	%rd7251, %rd7233, %rd7250;
	xor.b64  	%rd7252, %rd7251, %rd6977;
	add.s64 	%rd7253, %rd7038, %rd6953;
	add.s64 	%rd7254, %rd7253, %rd12988;
	add.s64 	%rd7255, %rd7254, %rd7252;
	add.s64 	%rd7256, %rd7255, %rd7249;
	add.s64 	%rd7257, %rd7256, %rd6964;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5813,%dummy}, %rd7244;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5814}, %rd7244;
	}
	shf.r.wrap.b32 	%r5815, %r5814, %r5813, 28;
	shf.r.wrap.b32 	%r5816, %r5813, %r5814, 28;
	mov.b64 	%rd7258, {%r5816, %r5815};
	shf.l.wrap.b32 	%r5817, %r5813, %r5814, 30;
	shf.l.wrap.b32 	%r5818, %r5814, %r5813, 30;
	mov.b64 	%rd7259, {%r5818, %r5817};
	xor.b64  	%rd7260, %rd7259, %rd7258;
	shf.l.wrap.b32 	%r5819, %r5813, %r5814, 25;
	shf.l.wrap.b32 	%r5820, %r5814, %r5813, 25;
	mov.b64 	%rd7261, {%r5820, %r5819};
	xor.b64  	%rd7262, %rd7260, %rd7261;
	xor.b64  	%rd7263, %rd7244, %rd6988;
	xor.b64  	%rd7264, %rd7244, %rd7012;
	and.b64  	%rd7265, %rd7264, %rd7263;
	xor.b64  	%rd7266, %rd7265, %rd7244;
	add.s64 	%rd7267, %rd7256, %rd7266;
	add.s64 	%rd7268, %rd7267, %rd7262;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5821,%dummy}, %rd7257;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5822}, %rd7257;
	}
	shf.r.wrap.b32 	%r5823, %r5822, %r5821, 14;
	shf.r.wrap.b32 	%r5824, %r5821, %r5822, 14;
	mov.b64 	%rd7269, {%r5824, %r5823};
	shf.r.wrap.b32 	%r5825, %r5822, %r5821, 18;
	shf.r.wrap.b32 	%r5826, %r5821, %r5822, 18;
	mov.b64 	%rd7270, {%r5826, %r5825};
	xor.b64  	%rd7271, %rd7270, %rd7269;
	shf.l.wrap.b32 	%r5827, %r5821, %r5822, 23;
	shf.l.wrap.b32 	%r5828, %r5822, %r5821, 23;
	mov.b64 	%rd7272, {%r5828, %r5827};
	xor.b64  	%rd7273, %rd7271, %rd7272;
	xor.b64  	%rd7274, %rd7233, %rd7001;
	and.b64  	%rd7275, %rd7257, %rd7274;
	xor.b64  	%rd7276, %rd7275, %rd7001;
	add.s64 	%rd7277, %rd7051, %rd6977;
	add.s64 	%rd7278, %rd7277, %rd12987;
	add.s64 	%rd7279, %rd7278, %rd7276;
	add.s64 	%rd7280, %rd7279, %rd7273;
	add.s64 	%rd7281, %rd7280, %rd6988;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5829,%dummy}, %rd7268;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5830}, %rd7268;
	}
	shf.r.wrap.b32 	%r5831, %r5830, %r5829, 28;
	shf.r.wrap.b32 	%r5832, %r5829, %r5830, 28;
	mov.b64 	%rd7282, {%r5832, %r5831};
	shf.l.wrap.b32 	%r5833, %r5829, %r5830, 30;
	shf.l.wrap.b32 	%r5834, %r5830, %r5829, 30;
	mov.b64 	%rd7283, {%r5834, %r5833};
	xor.b64  	%rd7284, %rd7283, %rd7282;
	shf.l.wrap.b32 	%r5835, %r5829, %r5830, 25;
	shf.l.wrap.b32 	%r5836, %r5830, %r5829, 25;
	mov.b64 	%rd7285, {%r5836, %r5835};
	xor.b64  	%rd7286, %rd7284, %rd7285;
	xor.b64  	%rd7287, %rd7268, %rd7012;
	xor.b64  	%rd7288, %rd7268, %rd7244;
	and.b64  	%rd7289, %rd7288, %rd7287;
	xor.b64  	%rd7290, %rd7289, %rd7268;
	add.s64 	%rd7291, %rd7280, %rd7290;
	add.s64 	%rd7292, %rd7291, %rd7286;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5837,%dummy}, %rd7281;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5838}, %rd7281;
	}
	shf.r.wrap.b32 	%r5839, %r5838, %r5837, 14;
	shf.r.wrap.b32 	%r5840, %r5837, %r5838, 14;
	mov.b64 	%rd7293, {%r5840, %r5839};
	shf.r.wrap.b32 	%r5841, %r5838, %r5837, 18;
	shf.r.wrap.b32 	%r5842, %r5837, %r5838, 18;
	mov.b64 	%rd7294, {%r5842, %r5841};
	xor.b64  	%rd7295, %rd7294, %rd7293;
	shf.l.wrap.b32 	%r5843, %r5837, %r5838, 23;
	shf.l.wrap.b32 	%r5844, %r5838, %r5837, 23;
	mov.b64 	%rd7296, {%r5844, %r5843};
	xor.b64  	%rd7297, %rd7295, %rd7296;
	xor.b64  	%rd7298, %rd7257, %rd7233;
	and.b64  	%rd7299, %rd7281, %rd7298;
	xor.b64  	%rd7300, %rd7299, %rd7233;
	add.s64 	%rd7301, %rd7064, %rd7001;
	add.s64 	%rd7302, %rd7301, %rd12986;
	add.s64 	%rd7303, %rd7302, %rd7300;
	add.s64 	%rd7304, %rd7303, %rd7297;
	add.s64 	%rd7305, %rd7304, %rd7012;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5845,%dummy}, %rd7292;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5846}, %rd7292;
	}
	shf.r.wrap.b32 	%r5847, %r5846, %r5845, 28;
	shf.r.wrap.b32 	%r5848, %r5845, %r5846, 28;
	mov.b64 	%rd7306, {%r5848, %r5847};
	shf.l.wrap.b32 	%r5849, %r5845, %r5846, 30;
	shf.l.wrap.b32 	%r5850, %r5846, %r5845, 30;
	mov.b64 	%rd7307, {%r5850, %r5849};
	xor.b64  	%rd7308, %rd7307, %rd7306;
	shf.l.wrap.b32 	%r5851, %r5845, %r5846, 25;
	shf.l.wrap.b32 	%r5852, %r5846, %r5845, 25;
	mov.b64 	%rd7309, {%r5852, %r5851};
	xor.b64  	%rd7310, %rd7308, %rd7309;
	xor.b64  	%rd7311, %rd7292, %rd7244;
	xor.b64  	%rd7312, %rd7292, %rd7268;
	and.b64  	%rd7313, %rd7312, %rd7311;
	xor.b64  	%rd7314, %rd7313, %rd7292;
	add.s64 	%rd7315, %rd7304, %rd7314;
	add.s64 	%rd7316, %rd7315, %rd7310;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5853,%dummy}, %rd7305;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5854}, %rd7305;
	}
	shf.r.wrap.b32 	%r5855, %r5854, %r5853, 14;
	shf.r.wrap.b32 	%r5856, %r5853, %r5854, 14;
	mov.b64 	%rd7317, {%r5856, %r5855};
	shf.r.wrap.b32 	%r5857, %r5854, %r5853, 18;
	shf.r.wrap.b32 	%r5858, %r5853, %r5854, 18;
	mov.b64 	%rd7318, {%r5858, %r5857};
	xor.b64  	%rd7319, %rd7318, %rd7317;
	shf.l.wrap.b32 	%r5859, %r5853, %r5854, 23;
	shf.l.wrap.b32 	%r5860, %r5854, %r5853, 23;
	mov.b64 	%rd7320, {%r5860, %r5859};
	xor.b64  	%rd7321, %rd7319, %rd7320;
	xor.b64  	%rd7322, %rd7281, %rd7257;
	and.b64  	%rd7323, %rd7305, %rd7322;
	xor.b64  	%rd7324, %rd7323, %rd7257;
	add.s64 	%rd7325, %rd7233, %rd7077;
	add.s64 	%rd7326, %rd7325, %rd12985;
	add.s64 	%rd7327, %rd7326, %rd7324;
	add.s64 	%rd7328, %rd7327, %rd7321;
	add.s64 	%rd7329, %rd7328, %rd7244;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5861,%dummy}, %rd7316;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5862}, %rd7316;
	}
	shf.r.wrap.b32 	%r5863, %r5862, %r5861, 28;
	shf.r.wrap.b32 	%r5864, %r5861, %r5862, 28;
	mov.b64 	%rd7330, {%r5864, %r5863};
	shf.l.wrap.b32 	%r5865, %r5861, %r5862, 30;
	shf.l.wrap.b32 	%r5866, %r5862, %r5861, 30;
	mov.b64 	%rd7331, {%r5866, %r5865};
	xor.b64  	%rd7332, %rd7331, %rd7330;
	shf.l.wrap.b32 	%r5867, %r5861, %r5862, 25;
	shf.l.wrap.b32 	%r5868, %r5862, %r5861, 25;
	mov.b64 	%rd7333, {%r5868, %r5867};
	xor.b64  	%rd7334, %rd7332, %rd7333;
	xor.b64  	%rd7335, %rd7316, %rd7268;
	xor.b64  	%rd7336, %rd7316, %rd7292;
	and.b64  	%rd7337, %rd7336, %rd7335;
	xor.b64  	%rd7338, %rd7337, %rd7316;
	add.s64 	%rd7339, %rd7328, %rd7338;
	add.s64 	%rd7340, %rd7339, %rd7334;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5869,%dummy}, %rd7329;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5870}, %rd7329;
	}
	shf.r.wrap.b32 	%r5871, %r5870, %r5869, 14;
	shf.r.wrap.b32 	%r5872, %r5869, %r5870, 14;
	mov.b64 	%rd7341, {%r5872, %r5871};
	shf.r.wrap.b32 	%r5873, %r5870, %r5869, 18;
	shf.r.wrap.b32 	%r5874, %r5869, %r5870, 18;
	mov.b64 	%rd7342, {%r5874, %r5873};
	xor.b64  	%rd7343, %rd7342, %rd7341;
	shf.l.wrap.b32 	%r5875, %r5869, %r5870, 23;
	shf.l.wrap.b32 	%r5876, %r5870, %r5869, 23;
	mov.b64 	%rd7344, {%r5876, %r5875};
	xor.b64  	%rd7345, %rd7343, %rd7344;
	xor.b64  	%rd7346, %rd7305, %rd7281;
	and.b64  	%rd7347, %rd7329, %rd7346;
	xor.b64  	%rd7348, %rd7347, %rd7281;
	add.s64 	%rd7349, %rd7257, %rd7090;
	add.s64 	%rd7350, %rd7349, %rd12984;
	add.s64 	%rd7351, %rd7350, %rd7348;
	add.s64 	%rd7352, %rd7351, %rd7345;
	add.s64 	%rd7353, %rd7352, %rd7268;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5877,%dummy}, %rd7340;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5878}, %rd7340;
	}
	shf.r.wrap.b32 	%r5879, %r5878, %r5877, 28;
	shf.r.wrap.b32 	%r5880, %r5877, %r5878, 28;
	mov.b64 	%rd7354, {%r5880, %r5879};
	shf.l.wrap.b32 	%r5881, %r5877, %r5878, 30;
	shf.l.wrap.b32 	%r5882, %r5878, %r5877, 30;
	mov.b64 	%rd7355, {%r5882, %r5881};
	xor.b64  	%rd7356, %rd7355, %rd7354;
	shf.l.wrap.b32 	%r5883, %r5877, %r5878, 25;
	shf.l.wrap.b32 	%r5884, %r5878, %r5877, 25;
	mov.b64 	%rd7357, {%r5884, %r5883};
	xor.b64  	%rd7358, %rd7356, %rd7357;
	xor.b64  	%rd7359, %rd7340, %rd7292;
	xor.b64  	%rd7360, %rd7340, %rd7316;
	and.b64  	%rd7361, %rd7360, %rd7359;
	xor.b64  	%rd7362, %rd7361, %rd7340;
	add.s64 	%rd7363, %rd7352, %rd7362;
	add.s64 	%rd7364, %rd7363, %rd7358;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5885,%dummy}, %rd7353;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5886}, %rd7353;
	}
	shf.r.wrap.b32 	%r5887, %r5886, %r5885, 14;
	shf.r.wrap.b32 	%r5888, %r5885, %r5886, 14;
	mov.b64 	%rd7365, {%r5888, %r5887};
	shf.r.wrap.b32 	%r5889, %r5886, %r5885, 18;
	shf.r.wrap.b32 	%r5890, %r5885, %r5886, 18;
	mov.b64 	%rd7366, {%r5890, %r5889};
	xor.b64  	%rd7367, %rd7366, %rd7365;
	shf.l.wrap.b32 	%r5891, %r5885, %r5886, 23;
	shf.l.wrap.b32 	%r5892, %r5886, %r5885, 23;
	mov.b64 	%rd7368, {%r5892, %r5891};
	xor.b64  	%rd7369, %rd7367, %rd7368;
	xor.b64  	%rd7370, %rd7329, %rd7305;
	and.b64  	%rd7371, %rd7353, %rd7370;
	xor.b64  	%rd7372, %rd7371, %rd7305;
	add.s64 	%rd7373, %rd7281, %rd7103;
	add.s64 	%rd7374, %rd7373, %rd12983;
	add.s64 	%rd7375, %rd7374, %rd7372;
	add.s64 	%rd7376, %rd7375, %rd7369;
	add.s64 	%rd7377, %rd7376, %rd7292;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5893,%dummy}, %rd7364;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5894}, %rd7364;
	}
	shf.r.wrap.b32 	%r5895, %r5894, %r5893, 28;
	shf.r.wrap.b32 	%r5896, %r5893, %r5894, 28;
	mov.b64 	%rd7378, {%r5896, %r5895};
	shf.l.wrap.b32 	%r5897, %r5893, %r5894, 30;
	shf.l.wrap.b32 	%r5898, %r5894, %r5893, 30;
	mov.b64 	%rd7379, {%r5898, %r5897};
	xor.b64  	%rd7380, %rd7379, %rd7378;
	shf.l.wrap.b32 	%r5899, %r5893, %r5894, 25;
	shf.l.wrap.b32 	%r5900, %r5894, %r5893, 25;
	mov.b64 	%rd7381, {%r5900, %r5899};
	xor.b64  	%rd7382, %rd7380, %rd7381;
	xor.b64  	%rd7383, %rd7364, %rd7316;
	xor.b64  	%rd7384, %rd7364, %rd7340;
	and.b64  	%rd7385, %rd7384, %rd7383;
	xor.b64  	%rd7386, %rd7385, %rd7364;
	add.s64 	%rd7387, %rd7376, %rd7386;
	add.s64 	%rd7388, %rd7387, %rd7382;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5901,%dummy}, %rd7377;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5902}, %rd7377;
	}
	shf.r.wrap.b32 	%r5903, %r5902, %r5901, 14;
	shf.r.wrap.b32 	%r5904, %r5901, %r5902, 14;
	mov.b64 	%rd7389, {%r5904, %r5903};
	shf.r.wrap.b32 	%r5905, %r5902, %r5901, 18;
	shf.r.wrap.b32 	%r5906, %r5901, %r5902, 18;
	mov.b64 	%rd7390, {%r5906, %r5905};
	xor.b64  	%rd7391, %rd7390, %rd7389;
	shf.l.wrap.b32 	%r5907, %r5901, %r5902, 23;
	shf.l.wrap.b32 	%r5908, %r5902, %r5901, 23;
	mov.b64 	%rd7392, {%r5908, %r5907};
	xor.b64  	%rd7393, %rd7391, %rd7392;
	xor.b64  	%rd7394, %rd7353, %rd7329;
	and.b64  	%rd7395, %rd7377, %rd7394;
	xor.b64  	%rd7396, %rd7395, %rd7329;
	add.s64 	%rd7397, %rd7305, %rd7116;
	add.s64 	%rd7398, %rd7397, %rd12982;
	add.s64 	%rd7399, %rd7398, %rd7396;
	add.s64 	%rd7400, %rd7399, %rd7393;
	add.s64 	%rd7401, %rd7400, %rd7316;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5909,%dummy}, %rd7388;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5910}, %rd7388;
	}
	shf.r.wrap.b32 	%r5911, %r5910, %r5909, 28;
	shf.r.wrap.b32 	%r5912, %r5909, %r5910, 28;
	mov.b64 	%rd7402, {%r5912, %r5911};
	shf.l.wrap.b32 	%r5913, %r5909, %r5910, 30;
	shf.l.wrap.b32 	%r5914, %r5910, %r5909, 30;
	mov.b64 	%rd7403, {%r5914, %r5913};
	xor.b64  	%rd7404, %rd7403, %rd7402;
	shf.l.wrap.b32 	%r5915, %r5909, %r5910, 25;
	shf.l.wrap.b32 	%r5916, %r5910, %r5909, 25;
	mov.b64 	%rd7405, {%r5916, %r5915};
	xor.b64  	%rd7406, %rd7404, %rd7405;
	xor.b64  	%rd7407, %rd7388, %rd7340;
	xor.b64  	%rd7408, %rd7388, %rd7364;
	and.b64  	%rd7409, %rd7408, %rd7407;
	xor.b64  	%rd7410, %rd7409, %rd7388;
	add.s64 	%rd7411, %rd7400, %rd7410;
	add.s64 	%rd7412, %rd7411, %rd7406;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5917,%dummy}, %rd7401;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5918}, %rd7401;
	}
	shf.r.wrap.b32 	%r5919, %r5918, %r5917, 14;
	shf.r.wrap.b32 	%r5920, %r5917, %r5918, 14;
	mov.b64 	%rd7413, {%r5920, %r5919};
	shf.r.wrap.b32 	%r5921, %r5918, %r5917, 18;
	shf.r.wrap.b32 	%r5922, %r5917, %r5918, 18;
	mov.b64 	%rd7414, {%r5922, %r5921};
	xor.b64  	%rd7415, %rd7414, %rd7413;
	shf.l.wrap.b32 	%r5923, %r5917, %r5918, 23;
	shf.l.wrap.b32 	%r5924, %r5918, %r5917, 23;
	mov.b64 	%rd7416, {%r5924, %r5923};
	xor.b64  	%rd7417, %rd7415, %rd7416;
	xor.b64  	%rd7418, %rd7377, %rd7353;
	and.b64  	%rd7419, %rd7401, %rd7418;
	xor.b64  	%rd7420, %rd7419, %rd7353;
	add.s64 	%rd7421, %rd7329, %rd7129;
	add.s64 	%rd7422, %rd7421, %rd12981;
	add.s64 	%rd7423, %rd7422, %rd7420;
	add.s64 	%rd7424, %rd7423, %rd7417;
	add.s64 	%rd7425, %rd7424, %rd7340;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5925,%dummy}, %rd7412;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5926}, %rd7412;
	}
	shf.r.wrap.b32 	%r5927, %r5926, %r5925, 28;
	shf.r.wrap.b32 	%r5928, %r5925, %r5926, 28;
	mov.b64 	%rd7426, {%r5928, %r5927};
	shf.l.wrap.b32 	%r5929, %r5925, %r5926, 30;
	shf.l.wrap.b32 	%r5930, %r5926, %r5925, 30;
	mov.b64 	%rd7427, {%r5930, %r5929};
	xor.b64  	%rd7428, %rd7427, %rd7426;
	shf.l.wrap.b32 	%r5931, %r5925, %r5926, 25;
	shf.l.wrap.b32 	%r5932, %r5926, %r5925, 25;
	mov.b64 	%rd7429, {%r5932, %r5931};
	xor.b64  	%rd7430, %rd7428, %rd7429;
	xor.b64  	%rd7431, %rd7412, %rd7364;
	xor.b64  	%rd7432, %rd7412, %rd7388;
	and.b64  	%rd7433, %rd7432, %rd7431;
	xor.b64  	%rd7434, %rd7433, %rd7412;
	add.s64 	%rd7435, %rd7424, %rd7434;
	add.s64 	%rd7436, %rd7435, %rd7430;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5933,%dummy}, %rd7425;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5934}, %rd7425;
	}
	shf.r.wrap.b32 	%r5935, %r5934, %r5933, 14;
	shf.r.wrap.b32 	%r5936, %r5933, %r5934, 14;
	mov.b64 	%rd7437, {%r5936, %r5935};
	shf.r.wrap.b32 	%r5937, %r5934, %r5933, 18;
	shf.r.wrap.b32 	%r5938, %r5933, %r5934, 18;
	mov.b64 	%rd7438, {%r5938, %r5937};
	xor.b64  	%rd7439, %rd7438, %rd7437;
	shf.l.wrap.b32 	%r5939, %r5933, %r5934, 23;
	shf.l.wrap.b32 	%r5940, %r5934, %r5933, 23;
	mov.b64 	%rd7440, {%r5940, %r5939};
	xor.b64  	%rd7441, %rd7439, %rd7440;
	xor.b64  	%rd7442, %rd7401, %rd7377;
	and.b64  	%rd7443, %rd7425, %rd7442;
	xor.b64  	%rd7444, %rd7443, %rd7377;
	add.s64 	%rd7445, %rd7353, %rd7142;
	add.s64 	%rd7446, %rd7445, %rd12980;
	add.s64 	%rd7447, %rd7446, %rd7444;
	add.s64 	%rd7448, %rd7447, %rd7441;
	add.s64 	%rd7449, %rd7448, %rd7364;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5941,%dummy}, %rd7436;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5942}, %rd7436;
	}
	shf.r.wrap.b32 	%r5943, %r5942, %r5941, 28;
	shf.r.wrap.b32 	%r5944, %r5941, %r5942, 28;
	mov.b64 	%rd7450, {%r5944, %r5943};
	shf.l.wrap.b32 	%r5945, %r5941, %r5942, 30;
	shf.l.wrap.b32 	%r5946, %r5942, %r5941, 30;
	mov.b64 	%rd7451, {%r5946, %r5945};
	xor.b64  	%rd7452, %rd7451, %rd7450;
	shf.l.wrap.b32 	%r5947, %r5941, %r5942, 25;
	shf.l.wrap.b32 	%r5948, %r5942, %r5941, 25;
	mov.b64 	%rd7453, {%r5948, %r5947};
	xor.b64  	%rd7454, %rd7452, %rd7453;
	xor.b64  	%rd7455, %rd7436, %rd7388;
	xor.b64  	%rd7456, %rd7436, %rd7412;
	and.b64  	%rd7457, %rd7456, %rd7455;
	xor.b64  	%rd7458, %rd7457, %rd7436;
	add.s64 	%rd7459, %rd7448, %rd7458;
	add.s64 	%rd7460, %rd7459, %rd7454;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5949,%dummy}, %rd7449;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5950}, %rd7449;
	}
	shf.r.wrap.b32 	%r5951, %r5950, %r5949, 14;
	shf.r.wrap.b32 	%r5952, %r5949, %r5950, 14;
	mov.b64 	%rd7461, {%r5952, %r5951};
	shf.r.wrap.b32 	%r5953, %r5950, %r5949, 18;
	shf.r.wrap.b32 	%r5954, %r5949, %r5950, 18;
	mov.b64 	%rd7462, {%r5954, %r5953};
	xor.b64  	%rd7463, %rd7462, %rd7461;
	shf.l.wrap.b32 	%r5955, %r5949, %r5950, 23;
	shf.l.wrap.b32 	%r5956, %r5950, %r5949, 23;
	mov.b64 	%rd7464, {%r5956, %r5955};
	xor.b64  	%rd7465, %rd7463, %rd7464;
	xor.b64  	%rd7466, %rd7425, %rd7401;
	and.b64  	%rd7467, %rd7449, %rd7466;
	xor.b64  	%rd7468, %rd7467, %rd7401;
	add.s64 	%rd7469, %rd7377, %rd7155;
	add.s64 	%rd7470, %rd7469, %rd12979;
	add.s64 	%rd7471, %rd7470, %rd7468;
	add.s64 	%rd7472, %rd7471, %rd7465;
	add.s64 	%rd7473, %rd7472, %rd7388;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5957,%dummy}, %rd7460;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5958}, %rd7460;
	}
	shf.r.wrap.b32 	%r5959, %r5958, %r5957, 28;
	shf.r.wrap.b32 	%r5960, %r5957, %r5958, 28;
	mov.b64 	%rd7474, {%r5960, %r5959};
	shf.l.wrap.b32 	%r5961, %r5957, %r5958, 30;
	shf.l.wrap.b32 	%r5962, %r5958, %r5957, 30;
	mov.b64 	%rd7475, {%r5962, %r5961};
	xor.b64  	%rd7476, %rd7475, %rd7474;
	shf.l.wrap.b32 	%r5963, %r5957, %r5958, 25;
	shf.l.wrap.b32 	%r5964, %r5958, %r5957, 25;
	mov.b64 	%rd7477, {%r5964, %r5963};
	xor.b64  	%rd7478, %rd7476, %rd7477;
	xor.b64  	%rd7479, %rd7460, %rd7412;
	xor.b64  	%rd7480, %rd7460, %rd7436;
	and.b64  	%rd7481, %rd7480, %rd7479;
	xor.b64  	%rd7482, %rd7481, %rd7460;
	add.s64 	%rd7483, %rd7472, %rd7482;
	add.s64 	%rd7484, %rd7483, %rd7478;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5965,%dummy}, %rd7473;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5966}, %rd7473;
	}
	shf.r.wrap.b32 	%r5967, %r5966, %r5965, 14;
	shf.r.wrap.b32 	%r5968, %r5965, %r5966, 14;
	mov.b64 	%rd7485, {%r5968, %r5967};
	shf.r.wrap.b32 	%r5969, %r5966, %r5965, 18;
	shf.r.wrap.b32 	%r5970, %r5965, %r5966, 18;
	mov.b64 	%rd7486, {%r5970, %r5969};
	xor.b64  	%rd7487, %rd7486, %rd7485;
	shf.l.wrap.b32 	%r5971, %r5965, %r5966, 23;
	shf.l.wrap.b32 	%r5972, %r5966, %r5965, 23;
	mov.b64 	%rd7488, {%r5972, %r5971};
	xor.b64  	%rd7489, %rd7487, %rd7488;
	xor.b64  	%rd7490, %rd7449, %rd7425;
	and.b64  	%rd7491, %rd7473, %rd7490;
	xor.b64  	%rd7492, %rd7491, %rd7425;
	add.s64 	%rd7493, %rd7401, %rd7168;
	add.s64 	%rd7494, %rd7493, %rd12978;
	add.s64 	%rd7495, %rd7494, %rd7492;
	add.s64 	%rd7496, %rd7495, %rd7489;
	add.s64 	%rd7497, %rd7496, %rd7412;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5973,%dummy}, %rd7484;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5974}, %rd7484;
	}
	shf.r.wrap.b32 	%r5975, %r5974, %r5973, 28;
	shf.r.wrap.b32 	%r5976, %r5973, %r5974, 28;
	mov.b64 	%rd7498, {%r5976, %r5975};
	shf.l.wrap.b32 	%r5977, %r5973, %r5974, 30;
	shf.l.wrap.b32 	%r5978, %r5974, %r5973, 30;
	mov.b64 	%rd7499, {%r5978, %r5977};
	xor.b64  	%rd7500, %rd7499, %rd7498;
	shf.l.wrap.b32 	%r5979, %r5973, %r5974, 25;
	shf.l.wrap.b32 	%r5980, %r5974, %r5973, 25;
	mov.b64 	%rd7501, {%r5980, %r5979};
	xor.b64  	%rd7502, %rd7500, %rd7501;
	xor.b64  	%rd7503, %rd7484, %rd7436;
	xor.b64  	%rd7504, %rd7484, %rd7460;
	and.b64  	%rd7505, %rd7504, %rd7503;
	xor.b64  	%rd7506, %rd7505, %rd7484;
	add.s64 	%rd7507, %rd7496, %rd7506;
	add.s64 	%rd7508, %rd7507, %rd7502;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5981,%dummy}, %rd7497;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5982}, %rd7497;
	}
	shf.r.wrap.b32 	%r5983, %r5982, %r5981, 14;
	shf.r.wrap.b32 	%r5984, %r5981, %r5982, 14;
	mov.b64 	%rd7509, {%r5984, %r5983};
	shf.r.wrap.b32 	%r5985, %r5982, %r5981, 18;
	shf.r.wrap.b32 	%r5986, %r5981, %r5982, 18;
	mov.b64 	%rd7510, {%r5986, %r5985};
	xor.b64  	%rd7511, %rd7510, %rd7509;
	shf.l.wrap.b32 	%r5987, %r5981, %r5982, 23;
	shf.l.wrap.b32 	%r5988, %r5982, %r5981, 23;
	mov.b64 	%rd7512, {%r5988, %r5987};
	xor.b64  	%rd7513, %rd7511, %rd7512;
	xor.b64  	%rd7514, %rd7473, %rd7449;
	and.b64  	%rd7515, %rd7497, %rd7514;
	xor.b64  	%rd7516, %rd7515, %rd7449;
	add.s64 	%rd7517, %rd7425, %rd7181;
	add.s64 	%rd7518, %rd7517, %rd12977;
	add.s64 	%rd7519, %rd7518, %rd7516;
	add.s64 	%rd7520, %rd7519, %rd7513;
	add.s64 	%rd7521, %rd7520, %rd7436;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5989,%dummy}, %rd7508;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5990}, %rd7508;
	}
	shf.r.wrap.b32 	%r5991, %r5990, %r5989, 28;
	shf.r.wrap.b32 	%r5992, %r5989, %r5990, 28;
	mov.b64 	%rd7522, {%r5992, %r5991};
	shf.l.wrap.b32 	%r5993, %r5989, %r5990, 30;
	shf.l.wrap.b32 	%r5994, %r5990, %r5989, 30;
	mov.b64 	%rd7523, {%r5994, %r5993};
	xor.b64  	%rd7524, %rd7523, %rd7522;
	shf.l.wrap.b32 	%r5995, %r5989, %r5990, 25;
	shf.l.wrap.b32 	%r5996, %r5990, %r5989, 25;
	mov.b64 	%rd7525, {%r5996, %r5995};
	xor.b64  	%rd7526, %rd7524, %rd7525;
	xor.b64  	%rd7527, %rd7508, %rd7460;
	xor.b64  	%rd7528, %rd7508, %rd7484;
	and.b64  	%rd7529, %rd7528, %rd7527;
	xor.b64  	%rd7530, %rd7529, %rd7508;
	add.s64 	%rd7531, %rd7520, %rd7530;
	add.s64 	%rd7532, %rd7531, %rd7526;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5997,%dummy}, %rd7521;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5998}, %rd7521;
	}
	shf.r.wrap.b32 	%r5999, %r5998, %r5997, 14;
	shf.r.wrap.b32 	%r6000, %r5997, %r5998, 14;
	mov.b64 	%rd7533, {%r6000, %r5999};
	shf.r.wrap.b32 	%r6001, %r5998, %r5997, 18;
	shf.r.wrap.b32 	%r6002, %r5997, %r5998, 18;
	mov.b64 	%rd7534, {%r6002, %r6001};
	xor.b64  	%rd7535, %rd7534, %rd7533;
	shf.l.wrap.b32 	%r6003, %r5997, %r5998, 23;
	shf.l.wrap.b32 	%r6004, %r5998, %r5997, 23;
	mov.b64 	%rd7536, {%r6004, %r6003};
	xor.b64  	%rd7537, %rd7535, %rd7536;
	xor.b64  	%rd7538, %rd7497, %rd7473;
	and.b64  	%rd7539, %rd7521, %rd7538;
	xor.b64  	%rd7540, %rd7539, %rd7473;
	add.s64 	%rd7541, %rd7449, %rd7194;
	add.s64 	%rd7542, %rd7541, %rd12976;
	add.s64 	%rd7543, %rd7542, %rd7540;
	add.s64 	%rd7544, %rd7543, %rd7537;
	add.s64 	%rd7545, %rd7544, %rd7460;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6005,%dummy}, %rd7532;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6006}, %rd7532;
	}
	shf.r.wrap.b32 	%r6007, %r6006, %r6005, 28;
	shf.r.wrap.b32 	%r6008, %r6005, %r6006, 28;
	mov.b64 	%rd7546, {%r6008, %r6007};
	shf.l.wrap.b32 	%r6009, %r6005, %r6006, 30;
	shf.l.wrap.b32 	%r6010, %r6006, %r6005, 30;
	mov.b64 	%rd7547, {%r6010, %r6009};
	xor.b64  	%rd7548, %rd7547, %rd7546;
	shf.l.wrap.b32 	%r6011, %r6005, %r6006, 25;
	shf.l.wrap.b32 	%r6012, %r6006, %r6005, 25;
	mov.b64 	%rd7549, {%r6012, %r6011};
	xor.b64  	%rd7550, %rd7548, %rd7549;
	xor.b64  	%rd7551, %rd7532, %rd7484;
	xor.b64  	%rd7552, %rd7532, %rd7508;
	and.b64  	%rd7553, %rd7552, %rd7551;
	xor.b64  	%rd7554, %rd7553, %rd7532;
	add.s64 	%rd7555, %rd7544, %rd7554;
	add.s64 	%rd7556, %rd7555, %rd7550;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6013,%dummy}, %rd7545;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6014}, %rd7545;
	}
	shf.r.wrap.b32 	%r6015, %r6014, %r6013, 14;
	shf.r.wrap.b32 	%r6016, %r6013, %r6014, 14;
	mov.b64 	%rd7557, {%r6016, %r6015};
	shf.r.wrap.b32 	%r6017, %r6014, %r6013, 18;
	shf.r.wrap.b32 	%r6018, %r6013, %r6014, 18;
	mov.b64 	%rd7558, {%r6018, %r6017};
	xor.b64  	%rd7559, %rd7558, %rd7557;
	shf.l.wrap.b32 	%r6019, %r6013, %r6014, 23;
	shf.l.wrap.b32 	%r6020, %r6014, %r6013, 23;
	mov.b64 	%rd7560, {%r6020, %r6019};
	xor.b64  	%rd7561, %rd7559, %rd7560;
	xor.b64  	%rd7562, %rd7521, %rd7497;
	and.b64  	%rd7563, %rd7545, %rd7562;
	xor.b64  	%rd7564, %rd7563, %rd7497;
	add.s64 	%rd7565, %rd7473, %rd7207;
	add.s64 	%rd7566, %rd7565, %rd12975;
	add.s64 	%rd7567, %rd7566, %rd7564;
	add.s64 	%rd7568, %rd7567, %rd7561;
	add.s64 	%rd7569, %rd7568, %rd7484;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6021,%dummy}, %rd7556;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6022}, %rd7556;
	}
	shf.r.wrap.b32 	%r6023, %r6022, %r6021, 28;
	shf.r.wrap.b32 	%r6024, %r6021, %r6022, 28;
	mov.b64 	%rd7570, {%r6024, %r6023};
	shf.l.wrap.b32 	%r6025, %r6021, %r6022, 30;
	shf.l.wrap.b32 	%r6026, %r6022, %r6021, 30;
	mov.b64 	%rd7571, {%r6026, %r6025};
	xor.b64  	%rd7572, %rd7571, %rd7570;
	shf.l.wrap.b32 	%r6027, %r6021, %r6022, 25;
	shf.l.wrap.b32 	%r6028, %r6022, %r6021, 25;
	mov.b64 	%rd7573, {%r6028, %r6027};
	xor.b64  	%rd7574, %rd7572, %rd7573;
	xor.b64  	%rd7575, %rd7556, %rd7508;
	xor.b64  	%rd7576, %rd7556, %rd7532;
	and.b64  	%rd7577, %rd7576, %rd7575;
	xor.b64  	%rd7578, %rd7577, %rd7556;
	add.s64 	%rd7579, %rd7568, %rd7578;
	add.s64 	%rd7580, %rd7579, %rd7574;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6029,%dummy}, %rd7569;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6030}, %rd7569;
	}
	shf.r.wrap.b32 	%r6031, %r6030, %r6029, 14;
	shf.r.wrap.b32 	%r6032, %r6029, %r6030, 14;
	mov.b64 	%rd7581, {%r6032, %r6031};
	shf.r.wrap.b32 	%r6033, %r6030, %r6029, 18;
	shf.r.wrap.b32 	%r6034, %r6029, %r6030, 18;
	mov.b64 	%rd7582, {%r6034, %r6033};
	xor.b64  	%rd7583, %rd7582, %rd7581;
	shf.l.wrap.b32 	%r6035, %r6029, %r6030, 23;
	shf.l.wrap.b32 	%r6036, %r6030, %r6029, 23;
	mov.b64 	%rd7584, {%r6036, %r6035};
	xor.b64  	%rd7585, %rd7583, %rd7584;
	xor.b64  	%rd7586, %rd7545, %rd7521;
	and.b64  	%rd7587, %rd7569, %rd7586;
	xor.b64  	%rd7588, %rd7587, %rd7521;
	add.s64 	%rd7589, %rd7497, %rd7220;
	add.s64 	%rd7590, %rd7589, %rd12974;
	add.s64 	%rd7591, %rd7590, %rd7588;
	add.s64 	%rd7592, %rd7591, %rd7585;
	add.s64 	%rd7593, %rd7592, %rd7508;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6037,%dummy}, %rd7580;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6038}, %rd7580;
	}
	shf.r.wrap.b32 	%r6039, %r6038, %r6037, 28;
	shf.r.wrap.b32 	%r6040, %r6037, %r6038, 28;
	mov.b64 	%rd7594, {%r6040, %r6039};
	shf.l.wrap.b32 	%r6041, %r6037, %r6038, 30;
	shf.l.wrap.b32 	%r6042, %r6038, %r6037, 30;
	mov.b64 	%rd7595, {%r6042, %r6041};
	xor.b64  	%rd7596, %rd7595, %rd7594;
	shf.l.wrap.b32 	%r6043, %r6037, %r6038, 25;
	shf.l.wrap.b32 	%r6044, %r6038, %r6037, 25;
	mov.b64 	%rd7597, {%r6044, %r6043};
	xor.b64  	%rd7598, %rd7596, %rd7597;
	xor.b64  	%rd7599, %rd7580, %rd7532;
	xor.b64  	%rd7600, %rd7580, %rd7556;
	and.b64  	%rd7601, %rd7600, %rd7599;
	xor.b64  	%rd7602, %rd7601, %rd7580;
	add.s64 	%rd7603, %rd7592, %rd7602;
	add.s64 	%rd7604, %rd7603, %rd7598;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6045,%dummy}, %rd7207;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6046}, %rd7207;
	}
	shf.r.wrap.b32 	%r6047, %r6046, %r6045, 19;
	shf.r.wrap.b32 	%r6048, %r6045, %r6046, 19;
	mov.b64 	%rd7605, {%r6048, %r6047};
	shf.l.wrap.b32 	%r6049, %r6045, %r6046, 3;
	shf.l.wrap.b32 	%r6050, %r6046, %r6045, 3;
	mov.b64 	%rd7606, {%r6050, %r6049};
	shr.u64 	%rd7607, %rd7207, 6;
	xor.b64  	%rd7608, %rd7605, %rd7607;
	xor.b64  	%rd7609, %rd7608, %rd7606;
	shf.r.wrap.b32 	%r6051, %r5660, %r5659, 1;
	shf.r.wrap.b32 	%r6052, %r5659, %r5660, 1;
	mov.b64 	%rd7610, {%r6052, %r6051};
	shf.r.wrap.b32 	%r6053, %r5660, %r5659, 8;
	shf.r.wrap.b32 	%r6054, %r5659, %r5660, 8;
	mov.b64 	%rd7611, {%r6054, %r6053};
	shr.u64 	%rd7612, %rd7038, 7;
	xor.b64  	%rd7613, %rd7610, %rd7612;
	xor.b64  	%rd7614, %rd7613, %rd7611;
	add.s64 	%rd7615, %rd7142, %rd7025;
	add.s64 	%rd7616, %rd7615, %rd7609;
	add.s64 	%rd7617, %rd7616, %rd7614;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6055,%dummy}, %rd7220;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6056}, %rd7220;
	}
	shf.r.wrap.b32 	%r6057, %r6056, %r6055, 19;
	shf.r.wrap.b32 	%r6058, %r6055, %r6056, 19;
	mov.b64 	%rd7618, {%r6058, %r6057};
	shf.l.wrap.b32 	%r6059, %r6055, %r6056, 3;
	shf.l.wrap.b32 	%r6060, %r6056, %r6055, 3;
	mov.b64 	%rd7619, {%r6060, %r6059};
	shr.u64 	%rd7620, %rd7220, 6;
	xor.b64  	%rd7621, %rd7618, %rd7620;
	xor.b64  	%rd7622, %rd7621, %rd7619;
	shf.r.wrap.b32 	%r6061, %r5670, %r5669, 1;
	shf.r.wrap.b32 	%r6062, %r5669, %r5670, 1;
	mov.b64 	%rd7623, {%r6062, %r6061};
	shf.r.wrap.b32 	%r6063, %r5670, %r5669, 8;
	shf.r.wrap.b32 	%r6064, %r5669, %r5670, 8;
	mov.b64 	%rd7624, {%r6064, %r6063};
	shr.u64 	%rd7625, %rd7051, 7;
	xor.b64  	%rd7626, %rd7623, %rd7625;
	xor.b64  	%rd7627, %rd7626, %rd7624;
	add.s64 	%rd7628, %rd7155, %rd7038;
	add.s64 	%rd7629, %rd7628, %rd7622;
	add.s64 	%rd7630, %rd7629, %rd7627;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6065,%dummy}, %rd7617;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6066}, %rd7617;
	}
	shf.r.wrap.b32 	%r6067, %r6066, %r6065, 19;
	shf.r.wrap.b32 	%r6068, %r6065, %r6066, 19;
	mov.b64 	%rd7631, {%r6068, %r6067};
	shf.l.wrap.b32 	%r6069, %r6065, %r6066, 3;
	shf.l.wrap.b32 	%r6070, %r6066, %r6065, 3;
	mov.b64 	%rd7632, {%r6070, %r6069};
	shr.u64 	%rd7633, %rd7617, 6;
	xor.b64  	%rd7634, %rd7631, %rd7633;
	xor.b64  	%rd7635, %rd7634, %rd7632;
	shf.r.wrap.b32 	%r6071, %r5680, %r5679, 1;
	shf.r.wrap.b32 	%r6072, %r5679, %r5680, 1;
	mov.b64 	%rd7636, {%r6072, %r6071};
	shf.r.wrap.b32 	%r6073, %r5680, %r5679, 8;
	shf.r.wrap.b32 	%r6074, %r5679, %r5680, 8;
	mov.b64 	%rd7637, {%r6074, %r6073};
	shr.u64 	%rd7638, %rd7064, 7;
	xor.b64  	%rd7639, %rd7636, %rd7638;
	xor.b64  	%rd7640, %rd7639, %rd7637;
	add.s64 	%rd7641, %rd7168, %rd7051;
	add.s64 	%rd7642, %rd7641, %rd7635;
	add.s64 	%rd7643, %rd7642, %rd7640;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6075,%dummy}, %rd7630;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6076}, %rd7630;
	}
	shf.r.wrap.b32 	%r6077, %r6076, %r6075, 19;
	shf.r.wrap.b32 	%r6078, %r6075, %r6076, 19;
	mov.b64 	%rd7644, {%r6078, %r6077};
	shf.l.wrap.b32 	%r6079, %r6075, %r6076, 3;
	shf.l.wrap.b32 	%r6080, %r6076, %r6075, 3;
	mov.b64 	%rd7645, {%r6080, %r6079};
	shr.u64 	%rd7646, %rd7630, 6;
	xor.b64  	%rd7647, %rd7644, %rd7646;
	xor.b64  	%rd7648, %rd7647, %rd7645;
	shf.r.wrap.b32 	%r6081, %r5690, %r5689, 1;
	shf.r.wrap.b32 	%r6082, %r5689, %r5690, 1;
	mov.b64 	%rd7649, {%r6082, %r6081};
	shf.r.wrap.b32 	%r6083, %r5690, %r5689, 8;
	shf.r.wrap.b32 	%r6084, %r5689, %r5690, 8;
	mov.b64 	%rd7650, {%r6084, %r6083};
	shr.u64 	%rd7651, %rd7077, 7;
	xor.b64  	%rd7652, %rd7649, %rd7651;
	xor.b64  	%rd7653, %rd7652, %rd7650;
	add.s64 	%rd7654, %rd7181, %rd7064;
	add.s64 	%rd7655, %rd7654, %rd7648;
	add.s64 	%rd7656, %rd7655, %rd7653;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6085,%dummy}, %rd7643;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6086}, %rd7643;
	}
	shf.r.wrap.b32 	%r6087, %r6086, %r6085, 19;
	shf.r.wrap.b32 	%r6088, %r6085, %r6086, 19;
	mov.b64 	%rd7657, {%r6088, %r6087};
	shf.l.wrap.b32 	%r6089, %r6085, %r6086, 3;
	shf.l.wrap.b32 	%r6090, %r6086, %r6085, 3;
	mov.b64 	%rd7658, {%r6090, %r6089};
	shr.u64 	%rd7659, %rd7643, 6;
	xor.b64  	%rd7660, %rd7657, %rd7659;
	xor.b64  	%rd7661, %rd7660, %rd7658;
	shf.r.wrap.b32 	%r6091, %r5700, %r5699, 1;
	shf.r.wrap.b32 	%r6092, %r5699, %r5700, 1;
	mov.b64 	%rd7662, {%r6092, %r6091};
	shf.r.wrap.b32 	%r6093, %r5700, %r5699, 8;
	shf.r.wrap.b32 	%r6094, %r5699, %r5700, 8;
	mov.b64 	%rd7663, {%r6094, %r6093};
	shr.u64 	%rd7664, %rd7090, 7;
	xor.b64  	%rd7665, %rd7662, %rd7664;
	xor.b64  	%rd7666, %rd7665, %rd7663;
	add.s64 	%rd7667, %rd7194, %rd7077;
	add.s64 	%rd7668, %rd7667, %rd7661;
	add.s64 	%rd7669, %rd7668, %rd7666;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6095,%dummy}, %rd7656;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6096}, %rd7656;
	}
	shf.r.wrap.b32 	%r6097, %r6096, %r6095, 19;
	shf.r.wrap.b32 	%r6098, %r6095, %r6096, 19;
	mov.b64 	%rd7670, {%r6098, %r6097};
	shf.l.wrap.b32 	%r6099, %r6095, %r6096, 3;
	shf.l.wrap.b32 	%r6100, %r6096, %r6095, 3;
	mov.b64 	%rd7671, {%r6100, %r6099};
	shr.u64 	%rd7672, %rd7656, 6;
	xor.b64  	%rd7673, %rd7670, %rd7672;
	xor.b64  	%rd7674, %rd7673, %rd7671;
	shf.r.wrap.b32 	%r6101, %r5710, %r5709, 1;
	shf.r.wrap.b32 	%r6102, %r5709, %r5710, 1;
	mov.b64 	%rd7675, {%r6102, %r6101};
	shf.r.wrap.b32 	%r6103, %r5710, %r5709, 8;
	shf.r.wrap.b32 	%r6104, %r5709, %r5710, 8;
	mov.b64 	%rd7676, {%r6104, %r6103};
	shr.u64 	%rd7677, %rd7103, 7;
	xor.b64  	%rd7678, %rd7675, %rd7677;
	xor.b64  	%rd7679, %rd7678, %rd7676;
	add.s64 	%rd7680, %rd7207, %rd7090;
	add.s64 	%rd7681, %rd7680, %rd7674;
	add.s64 	%rd7682, %rd7681, %rd7679;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6105,%dummy}, %rd7669;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6106}, %rd7669;
	}
	shf.r.wrap.b32 	%r6107, %r6106, %r6105, 19;
	shf.r.wrap.b32 	%r6108, %r6105, %r6106, 19;
	mov.b64 	%rd7683, {%r6108, %r6107};
	shf.l.wrap.b32 	%r6109, %r6105, %r6106, 3;
	shf.l.wrap.b32 	%r6110, %r6106, %r6105, 3;
	mov.b64 	%rd7684, {%r6110, %r6109};
	shr.u64 	%rd7685, %rd7669, 6;
	xor.b64  	%rd7686, %rd7683, %rd7685;
	xor.b64  	%rd7687, %rd7686, %rd7684;
	shf.r.wrap.b32 	%r6111, %r5720, %r5719, 1;
	shf.r.wrap.b32 	%r6112, %r5719, %r5720, 1;
	mov.b64 	%rd7688, {%r6112, %r6111};
	shf.r.wrap.b32 	%r6113, %r5720, %r5719, 8;
	shf.r.wrap.b32 	%r6114, %r5719, %r5720, 8;
	mov.b64 	%rd7689, {%r6114, %r6113};
	shr.u64 	%rd7690, %rd7116, 7;
	xor.b64  	%rd7691, %rd7688, %rd7690;
	xor.b64  	%rd7692, %rd7691, %rd7689;
	add.s64 	%rd7693, %rd7220, %rd7103;
	add.s64 	%rd7694, %rd7693, %rd7687;
	add.s64 	%rd7695, %rd7694, %rd7692;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6115,%dummy}, %rd7682;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6116}, %rd7682;
	}
	shf.r.wrap.b32 	%r6117, %r6116, %r6115, 19;
	shf.r.wrap.b32 	%r6118, %r6115, %r6116, 19;
	mov.b64 	%rd7696, {%r6118, %r6117};
	shf.l.wrap.b32 	%r6119, %r6115, %r6116, 3;
	shf.l.wrap.b32 	%r6120, %r6116, %r6115, 3;
	mov.b64 	%rd7697, {%r6120, %r6119};
	shr.u64 	%rd7698, %rd7682, 6;
	xor.b64  	%rd7699, %rd7696, %rd7698;
	xor.b64  	%rd7700, %rd7699, %rd7697;
	shf.r.wrap.b32 	%r6121, %r5730, %r5729, 1;
	shf.r.wrap.b32 	%r6122, %r5729, %r5730, 1;
	mov.b64 	%rd7701, {%r6122, %r6121};
	shf.r.wrap.b32 	%r6123, %r5730, %r5729, 8;
	shf.r.wrap.b32 	%r6124, %r5729, %r5730, 8;
	mov.b64 	%rd7702, {%r6124, %r6123};
	shr.u64 	%rd7703, %rd7129, 7;
	xor.b64  	%rd7704, %rd7701, %rd7703;
	xor.b64  	%rd7705, %rd7704, %rd7702;
	add.s64 	%rd7706, %rd7617, %rd7116;
	add.s64 	%rd7707, %rd7706, %rd7700;
	add.s64 	%rd7708, %rd7707, %rd7705;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6125,%dummy}, %rd7695;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6126}, %rd7695;
	}
	shf.r.wrap.b32 	%r6127, %r6126, %r6125, 19;
	shf.r.wrap.b32 	%r6128, %r6125, %r6126, 19;
	mov.b64 	%rd7709, {%r6128, %r6127};
	shf.l.wrap.b32 	%r6129, %r6125, %r6126, 3;
	shf.l.wrap.b32 	%r6130, %r6126, %r6125, 3;
	mov.b64 	%rd7710, {%r6130, %r6129};
	shr.u64 	%rd7711, %rd7695, 6;
	xor.b64  	%rd7712, %rd7709, %rd7711;
	xor.b64  	%rd7713, %rd7712, %rd7710;
	shf.r.wrap.b32 	%r6131, %r5740, %r5739, 1;
	shf.r.wrap.b32 	%r6132, %r5739, %r5740, 1;
	mov.b64 	%rd7714, {%r6132, %r6131};
	shf.r.wrap.b32 	%r6133, %r5740, %r5739, 8;
	shf.r.wrap.b32 	%r6134, %r5739, %r5740, 8;
	mov.b64 	%rd7715, {%r6134, %r6133};
	shr.u64 	%rd7716, %rd7142, 7;
	xor.b64  	%rd7717, %rd7714, %rd7716;
	xor.b64  	%rd7718, %rd7717, %rd7715;
	add.s64 	%rd7719, %rd7630, %rd7129;
	add.s64 	%rd7720, %rd7719, %rd7713;
	add.s64 	%rd7721, %rd7720, %rd7718;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6135,%dummy}, %rd7708;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6136}, %rd7708;
	}
	shf.r.wrap.b32 	%r6137, %r6136, %r6135, 19;
	shf.r.wrap.b32 	%r6138, %r6135, %r6136, 19;
	mov.b64 	%rd7722, {%r6138, %r6137};
	shf.l.wrap.b32 	%r6139, %r6135, %r6136, 3;
	shf.l.wrap.b32 	%r6140, %r6136, %r6135, 3;
	mov.b64 	%rd7723, {%r6140, %r6139};
	shr.u64 	%rd7724, %rd7708, 6;
	xor.b64  	%rd7725, %rd7722, %rd7724;
	xor.b64  	%rd7726, %rd7725, %rd7723;
	shf.r.wrap.b32 	%r6141, %r5750, %r5749, 1;
	shf.r.wrap.b32 	%r6142, %r5749, %r5750, 1;
	mov.b64 	%rd7727, {%r6142, %r6141};
	shf.r.wrap.b32 	%r6143, %r5750, %r5749, 8;
	shf.r.wrap.b32 	%r6144, %r5749, %r5750, 8;
	mov.b64 	%rd7728, {%r6144, %r6143};
	shr.u64 	%rd7729, %rd7155, 7;
	xor.b64  	%rd7730, %rd7727, %rd7729;
	xor.b64  	%rd7731, %rd7730, %rd7728;
	add.s64 	%rd7732, %rd7643, %rd7142;
	add.s64 	%rd7733, %rd7732, %rd7726;
	add.s64 	%rd7734, %rd7733, %rd7731;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6145,%dummy}, %rd7721;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6146}, %rd7721;
	}
	shf.r.wrap.b32 	%r6147, %r6146, %r6145, 19;
	shf.r.wrap.b32 	%r6148, %r6145, %r6146, 19;
	mov.b64 	%rd7735, {%r6148, %r6147};
	shf.l.wrap.b32 	%r6149, %r6145, %r6146, 3;
	shf.l.wrap.b32 	%r6150, %r6146, %r6145, 3;
	mov.b64 	%rd7736, {%r6150, %r6149};
	shr.u64 	%rd7737, %rd7721, 6;
	xor.b64  	%rd7738, %rd7735, %rd7737;
	xor.b64  	%rd7739, %rd7738, %rd7736;
	shf.r.wrap.b32 	%r6151, %r5760, %r5759, 1;
	shf.r.wrap.b32 	%r6152, %r5759, %r5760, 1;
	mov.b64 	%rd7740, {%r6152, %r6151};
	shf.r.wrap.b32 	%r6153, %r5760, %r5759, 8;
	shf.r.wrap.b32 	%r6154, %r5759, %r5760, 8;
	mov.b64 	%rd7741, {%r6154, %r6153};
	shr.u64 	%rd7742, %rd7168, 7;
	xor.b64  	%rd7743, %rd7740, %rd7742;
	xor.b64  	%rd7744, %rd7743, %rd7741;
	add.s64 	%rd7745, %rd7656, %rd7155;
	add.s64 	%rd7746, %rd7745, %rd7739;
	add.s64 	%rd7747, %rd7746, %rd7744;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6155,%dummy}, %rd7734;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6156}, %rd7734;
	}
	shf.r.wrap.b32 	%r6157, %r6156, %r6155, 19;
	shf.r.wrap.b32 	%r6158, %r6155, %r6156, 19;
	mov.b64 	%rd7748, {%r6158, %r6157};
	shf.l.wrap.b32 	%r6159, %r6155, %r6156, 3;
	shf.l.wrap.b32 	%r6160, %r6156, %r6155, 3;
	mov.b64 	%rd7749, {%r6160, %r6159};
	shr.u64 	%rd7750, %rd7734, 6;
	xor.b64  	%rd7751, %rd7748, %rd7750;
	xor.b64  	%rd7752, %rd7751, %rd7749;
	shf.r.wrap.b32 	%r6161, %r5770, %r5769, 1;
	shf.r.wrap.b32 	%r6162, %r5769, %r5770, 1;
	mov.b64 	%rd7753, {%r6162, %r6161};
	shf.r.wrap.b32 	%r6163, %r5770, %r5769, 8;
	shf.r.wrap.b32 	%r6164, %r5769, %r5770, 8;
	mov.b64 	%rd7754, {%r6164, %r6163};
	shr.u64 	%rd7755, %rd7181, 7;
	xor.b64  	%rd7756, %rd7753, %rd7755;
	xor.b64  	%rd7757, %rd7756, %rd7754;
	add.s64 	%rd7758, %rd7669, %rd7168;
	add.s64 	%rd7759, %rd7758, %rd7752;
	add.s64 	%rd7760, %rd7759, %rd7757;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6165,%dummy}, %rd7747;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6166}, %rd7747;
	}
	shf.r.wrap.b32 	%r6167, %r6166, %r6165, 19;
	shf.r.wrap.b32 	%r6168, %r6165, %r6166, 19;
	mov.b64 	%rd7761, {%r6168, %r6167};
	shf.l.wrap.b32 	%r6169, %r6165, %r6166, 3;
	shf.l.wrap.b32 	%r6170, %r6166, %r6165, 3;
	mov.b64 	%rd7762, {%r6170, %r6169};
	shr.u64 	%rd7763, %rd7747, 6;
	xor.b64  	%rd7764, %rd7761, %rd7763;
	xor.b64  	%rd7765, %rd7764, %rd7762;
	shf.r.wrap.b32 	%r6171, %r5780, %r5779, 1;
	shf.r.wrap.b32 	%r6172, %r5779, %r5780, 1;
	mov.b64 	%rd7766, {%r6172, %r6171};
	shf.r.wrap.b32 	%r6173, %r5780, %r5779, 8;
	shf.r.wrap.b32 	%r6174, %r5779, %r5780, 8;
	mov.b64 	%rd7767, {%r6174, %r6173};
	shr.u64 	%rd7768, %rd7194, 7;
	xor.b64  	%rd7769, %rd7766, %rd7768;
	xor.b64  	%rd7770, %rd7769, %rd7767;
	add.s64 	%rd7771, %rd7682, %rd7181;
	add.s64 	%rd7772, %rd7771, %rd7765;
	add.s64 	%rd7773, %rd7772, %rd7770;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6175,%dummy}, %rd7760;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6176}, %rd7760;
	}
	shf.r.wrap.b32 	%r6177, %r6176, %r6175, 19;
	shf.r.wrap.b32 	%r6178, %r6175, %r6176, 19;
	mov.b64 	%rd7774, {%r6178, %r6177};
	shf.l.wrap.b32 	%r6179, %r6175, %r6176, 3;
	shf.l.wrap.b32 	%r6180, %r6176, %r6175, 3;
	mov.b64 	%rd7775, {%r6180, %r6179};
	shr.u64 	%rd7776, %rd7760, 6;
	xor.b64  	%rd7777, %rd7774, %rd7776;
	xor.b64  	%rd7778, %rd7777, %rd7775;
	shf.r.wrap.b32 	%r6181, %r6046, %r6045, 1;
	shf.r.wrap.b32 	%r6182, %r6045, %r6046, 1;
	mov.b64 	%rd7779, {%r6182, %r6181};
	shf.r.wrap.b32 	%r6183, %r6046, %r6045, 8;
	shf.r.wrap.b32 	%r6184, %r6045, %r6046, 8;
	mov.b64 	%rd7780, {%r6184, %r6183};
	shr.u64 	%rd7781, %rd7207, 7;
	xor.b64  	%rd7782, %rd7779, %rd7781;
	xor.b64  	%rd7783, %rd7782, %rd7780;
	add.s64 	%rd7784, %rd7695, %rd7194;
	add.s64 	%rd7785, %rd7784, %rd7778;
	add.s64 	%rd7786, %rd7785, %rd7783;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6185,%dummy}, %rd7773;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6186}, %rd7773;
	}
	shf.r.wrap.b32 	%r6187, %r6186, %r6185, 19;
	shf.r.wrap.b32 	%r6188, %r6185, %r6186, 19;
	mov.b64 	%rd7787, {%r6188, %r6187};
	shf.l.wrap.b32 	%r6189, %r6185, %r6186, 3;
	shf.l.wrap.b32 	%r6190, %r6186, %r6185, 3;
	mov.b64 	%rd7788, {%r6190, %r6189};
	shr.u64 	%rd7789, %rd7773, 6;
	xor.b64  	%rd7790, %rd7787, %rd7789;
	xor.b64  	%rd7791, %rd7790, %rd7788;
	shf.r.wrap.b32 	%r6191, %r6056, %r6055, 1;
	shf.r.wrap.b32 	%r6192, %r6055, %r6056, 1;
	mov.b64 	%rd7792, {%r6192, %r6191};
	shf.r.wrap.b32 	%r6193, %r6056, %r6055, 8;
	shf.r.wrap.b32 	%r6194, %r6055, %r6056, 8;
	mov.b64 	%rd7793, {%r6194, %r6193};
	shr.u64 	%rd7794, %rd7220, 7;
	xor.b64  	%rd7795, %rd7792, %rd7794;
	xor.b64  	%rd7796, %rd7795, %rd7793;
	add.s64 	%rd7797, %rd7708, %rd7207;
	add.s64 	%rd7798, %rd7797, %rd7791;
	add.s64 	%rd7799, %rd7798, %rd7796;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6195,%dummy}, %rd7786;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6196}, %rd7786;
	}
	shf.r.wrap.b32 	%r6197, %r6196, %r6195, 19;
	shf.r.wrap.b32 	%r6198, %r6195, %r6196, 19;
	mov.b64 	%rd7800, {%r6198, %r6197};
	shf.l.wrap.b32 	%r6199, %r6195, %r6196, 3;
	shf.l.wrap.b32 	%r6200, %r6196, %r6195, 3;
	mov.b64 	%rd7801, {%r6200, %r6199};
	shr.u64 	%rd7802, %rd7786, 6;
	xor.b64  	%rd7803, %rd7800, %rd7802;
	xor.b64  	%rd7804, %rd7803, %rd7801;
	shf.r.wrap.b32 	%r6201, %r6066, %r6065, 1;
	shf.r.wrap.b32 	%r6202, %r6065, %r6066, 1;
	mov.b64 	%rd7805, {%r6202, %r6201};
	shf.r.wrap.b32 	%r6203, %r6066, %r6065, 8;
	shf.r.wrap.b32 	%r6204, %r6065, %r6066, 8;
	mov.b64 	%rd7806, {%r6204, %r6203};
	shr.u64 	%rd7807, %rd7617, 7;
	xor.b64  	%rd7808, %rd7805, %rd7807;
	xor.b64  	%rd7809, %rd7808, %rd7806;
	add.s64 	%rd7810, %rd7721, %rd7220;
	add.s64 	%rd7811, %rd7810, %rd7804;
	add.s64 	%rd7812, %rd7811, %rd7809;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6205,%dummy}, %rd7593;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6206}, %rd7593;
	}
	shf.r.wrap.b32 	%r6207, %r6206, %r6205, 14;
	shf.r.wrap.b32 	%r6208, %r6205, %r6206, 14;
	mov.b64 	%rd7813, {%r6208, %r6207};
	shf.r.wrap.b32 	%r6209, %r6206, %r6205, 18;
	shf.r.wrap.b32 	%r6210, %r6205, %r6206, 18;
	mov.b64 	%rd7814, {%r6210, %r6209};
	xor.b64  	%rd7815, %rd7814, %rd7813;
	shf.l.wrap.b32 	%r6211, %r6205, %r6206, 23;
	shf.l.wrap.b32 	%r6212, %r6206, %r6205, 23;
	mov.b64 	%rd7816, {%r6212, %r6211};
	xor.b64  	%rd7817, %rd7815, %rd7816;
	xor.b64  	%rd7818, %rd7569, %rd7545;
	and.b64  	%rd7819, %rd7818, %rd7593;
	xor.b64  	%rd7820, %rd7819, %rd7545;
	add.s64 	%rd7821, %rd7820, %rd7521;
	add.s64 	%rd7822, %rd7821, %rd7617;
	add.s64 	%rd7823, %rd7822, %rd12973;
	add.s64 	%rd7824, %rd7823, %rd7817;
	add.s64 	%rd7825, %rd7824, %rd7532;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6213,%dummy}, %rd7604;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6214}, %rd7604;
	}
	shf.r.wrap.b32 	%r6215, %r6214, %r6213, 28;
	shf.r.wrap.b32 	%r6216, %r6213, %r6214, 28;
	mov.b64 	%rd7826, {%r6216, %r6215};
	shf.l.wrap.b32 	%r6217, %r6213, %r6214, 30;
	shf.l.wrap.b32 	%r6218, %r6214, %r6213, 30;
	mov.b64 	%rd7827, {%r6218, %r6217};
	xor.b64  	%rd7828, %rd7827, %rd7826;
	shf.l.wrap.b32 	%r6219, %r6213, %r6214, 25;
	shf.l.wrap.b32 	%r6220, %r6214, %r6213, 25;
	mov.b64 	%rd7829, {%r6220, %r6219};
	xor.b64  	%rd7830, %rd7828, %rd7829;
	xor.b64  	%rd7831, %rd7604, %rd7556;
	xor.b64  	%rd7832, %rd7604, %rd7580;
	and.b64  	%rd7833, %rd7832, %rd7831;
	xor.b64  	%rd7834, %rd7833, %rd7604;
	add.s64 	%rd7835, %rd7824, %rd7834;
	add.s64 	%rd7836, %rd7835, %rd7830;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6221,%dummy}, %rd7825;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6222}, %rd7825;
	}
	shf.r.wrap.b32 	%r6223, %r6222, %r6221, 14;
	shf.r.wrap.b32 	%r6224, %r6221, %r6222, 14;
	mov.b64 	%rd7837, {%r6224, %r6223};
	shf.r.wrap.b32 	%r6225, %r6222, %r6221, 18;
	shf.r.wrap.b32 	%r6226, %r6221, %r6222, 18;
	mov.b64 	%rd7838, {%r6226, %r6225};
	xor.b64  	%rd7839, %rd7838, %rd7837;
	shf.l.wrap.b32 	%r6227, %r6221, %r6222, 23;
	shf.l.wrap.b32 	%r6228, %r6222, %r6221, 23;
	mov.b64 	%rd7840, {%r6228, %r6227};
	xor.b64  	%rd7841, %rd7839, %rd7840;
	xor.b64  	%rd7842, %rd7593, %rd7569;
	and.b64  	%rd7843, %rd7825, %rd7842;
	xor.b64  	%rd7844, %rd7843, %rd7569;
	add.s64 	%rd7845, %rd7630, %rd7545;
	add.s64 	%rd7846, %rd7845, %rd12972;
	add.s64 	%rd7847, %rd7846, %rd7844;
	add.s64 	%rd7848, %rd7847, %rd7841;
	add.s64 	%rd7849, %rd7848, %rd7556;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6229,%dummy}, %rd7836;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6230}, %rd7836;
	}
	shf.r.wrap.b32 	%r6231, %r6230, %r6229, 28;
	shf.r.wrap.b32 	%r6232, %r6229, %r6230, 28;
	mov.b64 	%rd7850, {%r6232, %r6231};
	shf.l.wrap.b32 	%r6233, %r6229, %r6230, 30;
	shf.l.wrap.b32 	%r6234, %r6230, %r6229, 30;
	mov.b64 	%rd7851, {%r6234, %r6233};
	xor.b64  	%rd7852, %rd7851, %rd7850;
	shf.l.wrap.b32 	%r6235, %r6229, %r6230, 25;
	shf.l.wrap.b32 	%r6236, %r6230, %r6229, 25;
	mov.b64 	%rd7853, {%r6236, %r6235};
	xor.b64  	%rd7854, %rd7852, %rd7853;
	xor.b64  	%rd7855, %rd7836, %rd7580;
	xor.b64  	%rd7856, %rd7836, %rd7604;
	and.b64  	%rd7857, %rd7856, %rd7855;
	xor.b64  	%rd7858, %rd7857, %rd7836;
	add.s64 	%rd7859, %rd7848, %rd7858;
	add.s64 	%rd7860, %rd7859, %rd7854;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6237,%dummy}, %rd7849;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6238}, %rd7849;
	}
	shf.r.wrap.b32 	%r6239, %r6238, %r6237, 14;
	shf.r.wrap.b32 	%r6240, %r6237, %r6238, 14;
	mov.b64 	%rd7861, {%r6240, %r6239};
	shf.r.wrap.b32 	%r6241, %r6238, %r6237, 18;
	shf.r.wrap.b32 	%r6242, %r6237, %r6238, 18;
	mov.b64 	%rd7862, {%r6242, %r6241};
	xor.b64  	%rd7863, %rd7862, %rd7861;
	shf.l.wrap.b32 	%r6243, %r6237, %r6238, 23;
	shf.l.wrap.b32 	%r6244, %r6238, %r6237, 23;
	mov.b64 	%rd7864, {%r6244, %r6243};
	xor.b64  	%rd7865, %rd7863, %rd7864;
	xor.b64  	%rd7866, %rd7825, %rd7593;
	and.b64  	%rd7867, %rd7849, %rd7866;
	xor.b64  	%rd7868, %rd7867, %rd7593;
	add.s64 	%rd7869, %rd7643, %rd7569;
	add.s64 	%rd7870, %rd7869, %rd12971;
	add.s64 	%rd7871, %rd7870, %rd7868;
	add.s64 	%rd7872, %rd7871, %rd7865;
	add.s64 	%rd7873, %rd7872, %rd7580;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6245,%dummy}, %rd7860;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6246}, %rd7860;
	}
	shf.r.wrap.b32 	%r6247, %r6246, %r6245, 28;
	shf.r.wrap.b32 	%r6248, %r6245, %r6246, 28;
	mov.b64 	%rd7874, {%r6248, %r6247};
	shf.l.wrap.b32 	%r6249, %r6245, %r6246, 30;
	shf.l.wrap.b32 	%r6250, %r6246, %r6245, 30;
	mov.b64 	%rd7875, {%r6250, %r6249};
	xor.b64  	%rd7876, %rd7875, %rd7874;
	shf.l.wrap.b32 	%r6251, %r6245, %r6246, 25;
	shf.l.wrap.b32 	%r6252, %r6246, %r6245, 25;
	mov.b64 	%rd7877, {%r6252, %r6251};
	xor.b64  	%rd7878, %rd7876, %rd7877;
	xor.b64  	%rd7879, %rd7860, %rd7604;
	xor.b64  	%rd7880, %rd7860, %rd7836;
	and.b64  	%rd7881, %rd7880, %rd7879;
	xor.b64  	%rd7882, %rd7881, %rd7860;
	add.s64 	%rd7883, %rd7872, %rd7882;
	add.s64 	%rd7884, %rd7883, %rd7878;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6253,%dummy}, %rd7873;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6254}, %rd7873;
	}
	shf.r.wrap.b32 	%r6255, %r6254, %r6253, 14;
	shf.r.wrap.b32 	%r6256, %r6253, %r6254, 14;
	mov.b64 	%rd7885, {%r6256, %r6255};
	shf.r.wrap.b32 	%r6257, %r6254, %r6253, 18;
	shf.r.wrap.b32 	%r6258, %r6253, %r6254, 18;
	mov.b64 	%rd7886, {%r6258, %r6257};
	xor.b64  	%rd7887, %rd7886, %rd7885;
	shf.l.wrap.b32 	%r6259, %r6253, %r6254, 23;
	shf.l.wrap.b32 	%r6260, %r6254, %r6253, 23;
	mov.b64 	%rd7888, {%r6260, %r6259};
	xor.b64  	%rd7889, %rd7887, %rd7888;
	xor.b64  	%rd7890, %rd7849, %rd7825;
	and.b64  	%rd7891, %rd7873, %rd7890;
	xor.b64  	%rd7892, %rd7891, %rd7825;
	add.s64 	%rd7893, %rd7656, %rd7593;
	add.s64 	%rd7894, %rd7893, %rd12970;
	add.s64 	%rd7895, %rd7894, %rd7892;
	add.s64 	%rd7896, %rd7895, %rd7889;
	add.s64 	%rd7897, %rd7896, %rd7604;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6261,%dummy}, %rd7884;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6262}, %rd7884;
	}
	shf.r.wrap.b32 	%r6263, %r6262, %r6261, 28;
	shf.r.wrap.b32 	%r6264, %r6261, %r6262, 28;
	mov.b64 	%rd7898, {%r6264, %r6263};
	shf.l.wrap.b32 	%r6265, %r6261, %r6262, 30;
	shf.l.wrap.b32 	%r6266, %r6262, %r6261, 30;
	mov.b64 	%rd7899, {%r6266, %r6265};
	xor.b64  	%rd7900, %rd7899, %rd7898;
	shf.l.wrap.b32 	%r6267, %r6261, %r6262, 25;
	shf.l.wrap.b32 	%r6268, %r6262, %r6261, 25;
	mov.b64 	%rd7901, {%r6268, %r6267};
	xor.b64  	%rd7902, %rd7900, %rd7901;
	xor.b64  	%rd7903, %rd7884, %rd7836;
	xor.b64  	%rd7904, %rd7884, %rd7860;
	and.b64  	%rd7905, %rd7904, %rd7903;
	xor.b64  	%rd7906, %rd7905, %rd7884;
	add.s64 	%rd7907, %rd7896, %rd7906;
	add.s64 	%rd7908, %rd7907, %rd7902;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6269,%dummy}, %rd7897;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6270}, %rd7897;
	}
	shf.r.wrap.b32 	%r6271, %r6270, %r6269, 14;
	shf.r.wrap.b32 	%r6272, %r6269, %r6270, 14;
	mov.b64 	%rd7909, {%r6272, %r6271};
	shf.r.wrap.b32 	%r6273, %r6270, %r6269, 18;
	shf.r.wrap.b32 	%r6274, %r6269, %r6270, 18;
	mov.b64 	%rd7910, {%r6274, %r6273};
	xor.b64  	%rd7911, %rd7910, %rd7909;
	shf.l.wrap.b32 	%r6275, %r6269, %r6270, 23;
	shf.l.wrap.b32 	%r6276, %r6270, %r6269, 23;
	mov.b64 	%rd7912, {%r6276, %r6275};
	xor.b64  	%rd7913, %rd7911, %rd7912;
	xor.b64  	%rd7914, %rd7873, %rd7849;
	and.b64  	%rd7915, %rd7897, %rd7914;
	xor.b64  	%rd7916, %rd7915, %rd7849;
	add.s64 	%rd7917, %rd7825, %rd7669;
	add.s64 	%rd7918, %rd7917, %rd12969;
	add.s64 	%rd7919, %rd7918, %rd7916;
	add.s64 	%rd7920, %rd7919, %rd7913;
	add.s64 	%rd7921, %rd7920, %rd7836;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6277,%dummy}, %rd7908;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6278}, %rd7908;
	}
	shf.r.wrap.b32 	%r6279, %r6278, %r6277, 28;
	shf.r.wrap.b32 	%r6280, %r6277, %r6278, 28;
	mov.b64 	%rd7922, {%r6280, %r6279};
	shf.l.wrap.b32 	%r6281, %r6277, %r6278, 30;
	shf.l.wrap.b32 	%r6282, %r6278, %r6277, 30;
	mov.b64 	%rd7923, {%r6282, %r6281};
	xor.b64  	%rd7924, %rd7923, %rd7922;
	shf.l.wrap.b32 	%r6283, %r6277, %r6278, 25;
	shf.l.wrap.b32 	%r6284, %r6278, %r6277, 25;
	mov.b64 	%rd7925, {%r6284, %r6283};
	xor.b64  	%rd7926, %rd7924, %rd7925;
	xor.b64  	%rd7927, %rd7908, %rd7860;
	xor.b64  	%rd7928, %rd7908, %rd7884;
	and.b64  	%rd7929, %rd7928, %rd7927;
	xor.b64  	%rd7930, %rd7929, %rd7908;
	add.s64 	%rd7931, %rd7920, %rd7930;
	add.s64 	%rd7932, %rd7931, %rd7926;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6285,%dummy}, %rd7921;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6286}, %rd7921;
	}
	shf.r.wrap.b32 	%r6287, %r6286, %r6285, 14;
	shf.r.wrap.b32 	%r6288, %r6285, %r6286, 14;
	mov.b64 	%rd7933, {%r6288, %r6287};
	shf.r.wrap.b32 	%r6289, %r6286, %r6285, 18;
	shf.r.wrap.b32 	%r6290, %r6285, %r6286, 18;
	mov.b64 	%rd7934, {%r6290, %r6289};
	xor.b64  	%rd7935, %rd7934, %rd7933;
	shf.l.wrap.b32 	%r6291, %r6285, %r6286, 23;
	shf.l.wrap.b32 	%r6292, %r6286, %r6285, 23;
	mov.b64 	%rd7936, {%r6292, %r6291};
	xor.b64  	%rd7937, %rd7935, %rd7936;
	xor.b64  	%rd7938, %rd7897, %rd7873;
	and.b64  	%rd7939, %rd7921, %rd7938;
	xor.b64  	%rd7940, %rd7939, %rd7873;
	add.s64 	%rd7941, %rd7849, %rd7682;
	add.s64 	%rd7942, %rd7941, %rd12968;
	add.s64 	%rd7943, %rd7942, %rd7940;
	add.s64 	%rd7944, %rd7943, %rd7937;
	add.s64 	%rd7945, %rd7944, %rd7860;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6293,%dummy}, %rd7932;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6294}, %rd7932;
	}
	shf.r.wrap.b32 	%r6295, %r6294, %r6293, 28;
	shf.r.wrap.b32 	%r6296, %r6293, %r6294, 28;
	mov.b64 	%rd7946, {%r6296, %r6295};
	shf.l.wrap.b32 	%r6297, %r6293, %r6294, 30;
	shf.l.wrap.b32 	%r6298, %r6294, %r6293, 30;
	mov.b64 	%rd7947, {%r6298, %r6297};
	xor.b64  	%rd7948, %rd7947, %rd7946;
	shf.l.wrap.b32 	%r6299, %r6293, %r6294, 25;
	shf.l.wrap.b32 	%r6300, %r6294, %r6293, 25;
	mov.b64 	%rd7949, {%r6300, %r6299};
	xor.b64  	%rd7950, %rd7948, %rd7949;
	xor.b64  	%rd7951, %rd7932, %rd7884;
	xor.b64  	%rd7952, %rd7932, %rd7908;
	and.b64  	%rd7953, %rd7952, %rd7951;
	xor.b64  	%rd7954, %rd7953, %rd7932;
	add.s64 	%rd7955, %rd7944, %rd7954;
	add.s64 	%rd7956, %rd7955, %rd7950;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6301,%dummy}, %rd7945;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6302}, %rd7945;
	}
	shf.r.wrap.b32 	%r6303, %r6302, %r6301, 14;
	shf.r.wrap.b32 	%r6304, %r6301, %r6302, 14;
	mov.b64 	%rd7957, {%r6304, %r6303};
	shf.r.wrap.b32 	%r6305, %r6302, %r6301, 18;
	shf.r.wrap.b32 	%r6306, %r6301, %r6302, 18;
	mov.b64 	%rd7958, {%r6306, %r6305};
	xor.b64  	%rd7959, %rd7958, %rd7957;
	shf.l.wrap.b32 	%r6307, %r6301, %r6302, 23;
	shf.l.wrap.b32 	%r6308, %r6302, %r6301, 23;
	mov.b64 	%rd7960, {%r6308, %r6307};
	xor.b64  	%rd7961, %rd7959, %rd7960;
	xor.b64  	%rd7962, %rd7921, %rd7897;
	and.b64  	%rd7963, %rd7945, %rd7962;
	xor.b64  	%rd7964, %rd7963, %rd7897;
	add.s64 	%rd7965, %rd7873, %rd7695;
	add.s64 	%rd7966, %rd7965, %rd12967;
	add.s64 	%rd7967, %rd7966, %rd7964;
	add.s64 	%rd7968, %rd7967, %rd7961;
	add.s64 	%rd7969, %rd7968, %rd7884;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6309,%dummy}, %rd7956;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6310}, %rd7956;
	}
	shf.r.wrap.b32 	%r6311, %r6310, %r6309, 28;
	shf.r.wrap.b32 	%r6312, %r6309, %r6310, 28;
	mov.b64 	%rd7970, {%r6312, %r6311};
	shf.l.wrap.b32 	%r6313, %r6309, %r6310, 30;
	shf.l.wrap.b32 	%r6314, %r6310, %r6309, 30;
	mov.b64 	%rd7971, {%r6314, %r6313};
	xor.b64  	%rd7972, %rd7971, %rd7970;
	shf.l.wrap.b32 	%r6315, %r6309, %r6310, 25;
	shf.l.wrap.b32 	%r6316, %r6310, %r6309, 25;
	mov.b64 	%rd7973, {%r6316, %r6315};
	xor.b64  	%rd7974, %rd7972, %rd7973;
	xor.b64  	%rd7975, %rd7956, %rd7908;
	xor.b64  	%rd7976, %rd7956, %rd7932;
	and.b64  	%rd7977, %rd7976, %rd7975;
	xor.b64  	%rd7978, %rd7977, %rd7956;
	add.s64 	%rd7979, %rd7968, %rd7978;
	add.s64 	%rd7980, %rd7979, %rd7974;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6317,%dummy}, %rd7969;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6318}, %rd7969;
	}
	shf.r.wrap.b32 	%r6319, %r6318, %r6317, 14;
	shf.r.wrap.b32 	%r6320, %r6317, %r6318, 14;
	mov.b64 	%rd7981, {%r6320, %r6319};
	shf.r.wrap.b32 	%r6321, %r6318, %r6317, 18;
	shf.r.wrap.b32 	%r6322, %r6317, %r6318, 18;
	mov.b64 	%rd7982, {%r6322, %r6321};
	xor.b64  	%rd7983, %rd7982, %rd7981;
	shf.l.wrap.b32 	%r6323, %r6317, %r6318, 23;
	shf.l.wrap.b32 	%r6324, %r6318, %r6317, 23;
	mov.b64 	%rd7984, {%r6324, %r6323};
	xor.b64  	%rd7985, %rd7983, %rd7984;
	xor.b64  	%rd7986, %rd7945, %rd7921;
	and.b64  	%rd7987, %rd7969, %rd7986;
	xor.b64  	%rd7988, %rd7987, %rd7921;
	add.s64 	%rd7989, %rd7897, %rd7708;
	add.s64 	%rd7990, %rd7989, %rd12966;
	add.s64 	%rd7991, %rd7990, %rd7988;
	add.s64 	%rd7992, %rd7991, %rd7985;
	add.s64 	%rd7993, %rd7992, %rd7908;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6325,%dummy}, %rd7980;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6326}, %rd7980;
	}
	shf.r.wrap.b32 	%r6327, %r6326, %r6325, 28;
	shf.r.wrap.b32 	%r6328, %r6325, %r6326, 28;
	mov.b64 	%rd7994, {%r6328, %r6327};
	shf.l.wrap.b32 	%r6329, %r6325, %r6326, 30;
	shf.l.wrap.b32 	%r6330, %r6326, %r6325, 30;
	mov.b64 	%rd7995, {%r6330, %r6329};
	xor.b64  	%rd7996, %rd7995, %rd7994;
	shf.l.wrap.b32 	%r6331, %r6325, %r6326, 25;
	shf.l.wrap.b32 	%r6332, %r6326, %r6325, 25;
	mov.b64 	%rd7997, {%r6332, %r6331};
	xor.b64  	%rd7998, %rd7996, %rd7997;
	xor.b64  	%rd7999, %rd7980, %rd7932;
	xor.b64  	%rd8000, %rd7980, %rd7956;
	and.b64  	%rd8001, %rd8000, %rd7999;
	xor.b64  	%rd8002, %rd8001, %rd7980;
	add.s64 	%rd8003, %rd7992, %rd8002;
	add.s64 	%rd8004, %rd8003, %rd7998;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6333,%dummy}, %rd7993;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6334}, %rd7993;
	}
	shf.r.wrap.b32 	%r6335, %r6334, %r6333, 14;
	shf.r.wrap.b32 	%r6336, %r6333, %r6334, 14;
	mov.b64 	%rd8005, {%r6336, %r6335};
	shf.r.wrap.b32 	%r6337, %r6334, %r6333, 18;
	shf.r.wrap.b32 	%r6338, %r6333, %r6334, 18;
	mov.b64 	%rd8006, {%r6338, %r6337};
	xor.b64  	%rd8007, %rd8006, %rd8005;
	shf.l.wrap.b32 	%r6339, %r6333, %r6334, 23;
	shf.l.wrap.b32 	%r6340, %r6334, %r6333, 23;
	mov.b64 	%rd8008, {%r6340, %r6339};
	xor.b64  	%rd8009, %rd8007, %rd8008;
	xor.b64  	%rd8010, %rd7969, %rd7945;
	and.b64  	%rd8011, %rd7993, %rd8010;
	xor.b64  	%rd8012, %rd8011, %rd7945;
	add.s64 	%rd8013, %rd7921, %rd7721;
	add.s64 	%rd8014, %rd8013, %rd12965;
	add.s64 	%rd8015, %rd8014, %rd8012;
	add.s64 	%rd8016, %rd8015, %rd8009;
	add.s64 	%rd8017, %rd8016, %rd7932;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6341,%dummy}, %rd8004;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6342}, %rd8004;
	}
	shf.r.wrap.b32 	%r6343, %r6342, %r6341, 28;
	shf.r.wrap.b32 	%r6344, %r6341, %r6342, 28;
	mov.b64 	%rd8018, {%r6344, %r6343};
	shf.l.wrap.b32 	%r6345, %r6341, %r6342, 30;
	shf.l.wrap.b32 	%r6346, %r6342, %r6341, 30;
	mov.b64 	%rd8019, {%r6346, %r6345};
	xor.b64  	%rd8020, %rd8019, %rd8018;
	shf.l.wrap.b32 	%r6347, %r6341, %r6342, 25;
	shf.l.wrap.b32 	%r6348, %r6342, %r6341, 25;
	mov.b64 	%rd8021, {%r6348, %r6347};
	xor.b64  	%rd8022, %rd8020, %rd8021;
	xor.b64  	%rd8023, %rd8004, %rd7956;
	xor.b64  	%rd8024, %rd8004, %rd7980;
	and.b64  	%rd8025, %rd8024, %rd8023;
	xor.b64  	%rd8026, %rd8025, %rd8004;
	add.s64 	%rd8027, %rd8016, %rd8026;
	add.s64 	%rd8028, %rd8027, %rd8022;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6349,%dummy}, %rd8017;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6350}, %rd8017;
	}
	shf.r.wrap.b32 	%r6351, %r6350, %r6349, 14;
	shf.r.wrap.b32 	%r6352, %r6349, %r6350, 14;
	mov.b64 	%rd8029, {%r6352, %r6351};
	shf.r.wrap.b32 	%r6353, %r6350, %r6349, 18;
	shf.r.wrap.b32 	%r6354, %r6349, %r6350, 18;
	mov.b64 	%rd8030, {%r6354, %r6353};
	xor.b64  	%rd8031, %rd8030, %rd8029;
	shf.l.wrap.b32 	%r6355, %r6349, %r6350, 23;
	shf.l.wrap.b32 	%r6356, %r6350, %r6349, 23;
	mov.b64 	%rd8032, {%r6356, %r6355};
	xor.b64  	%rd8033, %rd8031, %rd8032;
	xor.b64  	%rd8034, %rd7993, %rd7969;
	and.b64  	%rd8035, %rd8017, %rd8034;
	xor.b64  	%rd8036, %rd8035, %rd7969;
	add.s64 	%rd8037, %rd7945, %rd7734;
	add.s64 	%rd8038, %rd8037, %rd12964;
	add.s64 	%rd8039, %rd8038, %rd8036;
	add.s64 	%rd8040, %rd8039, %rd8033;
	add.s64 	%rd8041, %rd8040, %rd7956;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6357,%dummy}, %rd8028;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6358}, %rd8028;
	}
	shf.r.wrap.b32 	%r6359, %r6358, %r6357, 28;
	shf.r.wrap.b32 	%r6360, %r6357, %r6358, 28;
	mov.b64 	%rd8042, {%r6360, %r6359};
	shf.l.wrap.b32 	%r6361, %r6357, %r6358, 30;
	shf.l.wrap.b32 	%r6362, %r6358, %r6357, 30;
	mov.b64 	%rd8043, {%r6362, %r6361};
	xor.b64  	%rd8044, %rd8043, %rd8042;
	shf.l.wrap.b32 	%r6363, %r6357, %r6358, 25;
	shf.l.wrap.b32 	%r6364, %r6358, %r6357, 25;
	mov.b64 	%rd8045, {%r6364, %r6363};
	xor.b64  	%rd8046, %rd8044, %rd8045;
	xor.b64  	%rd8047, %rd8028, %rd7980;
	xor.b64  	%rd8048, %rd8028, %rd8004;
	and.b64  	%rd8049, %rd8048, %rd8047;
	xor.b64  	%rd8050, %rd8049, %rd8028;
	add.s64 	%rd8051, %rd8040, %rd8050;
	add.s64 	%rd8052, %rd8051, %rd8046;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6365,%dummy}, %rd8041;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6366}, %rd8041;
	}
	shf.r.wrap.b32 	%r6367, %r6366, %r6365, 14;
	shf.r.wrap.b32 	%r6368, %r6365, %r6366, 14;
	mov.b64 	%rd8053, {%r6368, %r6367};
	shf.r.wrap.b32 	%r6369, %r6366, %r6365, 18;
	shf.r.wrap.b32 	%r6370, %r6365, %r6366, 18;
	mov.b64 	%rd8054, {%r6370, %r6369};
	xor.b64  	%rd8055, %rd8054, %rd8053;
	shf.l.wrap.b32 	%r6371, %r6365, %r6366, 23;
	shf.l.wrap.b32 	%r6372, %r6366, %r6365, 23;
	mov.b64 	%rd8056, {%r6372, %r6371};
	xor.b64  	%rd8057, %rd8055, %rd8056;
	xor.b64  	%rd8058, %rd8017, %rd7993;
	and.b64  	%rd8059, %rd8041, %rd8058;
	xor.b64  	%rd8060, %rd8059, %rd7993;
	add.s64 	%rd8061, %rd7969, %rd7747;
	add.s64 	%rd8062, %rd8061, %rd12963;
	add.s64 	%rd8063, %rd8062, %rd8060;
	add.s64 	%rd8064, %rd8063, %rd8057;
	add.s64 	%rd8065, %rd8064, %rd7980;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6373,%dummy}, %rd8052;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6374}, %rd8052;
	}
	shf.r.wrap.b32 	%r6375, %r6374, %r6373, 28;
	shf.r.wrap.b32 	%r6376, %r6373, %r6374, 28;
	mov.b64 	%rd8066, {%r6376, %r6375};
	shf.l.wrap.b32 	%r6377, %r6373, %r6374, 30;
	shf.l.wrap.b32 	%r6378, %r6374, %r6373, 30;
	mov.b64 	%rd8067, {%r6378, %r6377};
	xor.b64  	%rd8068, %rd8067, %rd8066;
	shf.l.wrap.b32 	%r6379, %r6373, %r6374, 25;
	shf.l.wrap.b32 	%r6380, %r6374, %r6373, 25;
	mov.b64 	%rd8069, {%r6380, %r6379};
	xor.b64  	%rd8070, %rd8068, %rd8069;
	xor.b64  	%rd8071, %rd8052, %rd8004;
	xor.b64  	%rd8072, %rd8052, %rd8028;
	and.b64  	%rd8073, %rd8072, %rd8071;
	xor.b64  	%rd8074, %rd8073, %rd8052;
	add.s64 	%rd8075, %rd8064, %rd8074;
	add.s64 	%rd8076, %rd8075, %rd8070;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6381,%dummy}, %rd8065;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6382}, %rd8065;
	}
	shf.r.wrap.b32 	%r6383, %r6382, %r6381, 14;
	shf.r.wrap.b32 	%r6384, %r6381, %r6382, 14;
	mov.b64 	%rd8077, {%r6384, %r6383};
	shf.r.wrap.b32 	%r6385, %r6382, %r6381, 18;
	shf.r.wrap.b32 	%r6386, %r6381, %r6382, 18;
	mov.b64 	%rd8078, {%r6386, %r6385};
	xor.b64  	%rd8079, %rd8078, %rd8077;
	shf.l.wrap.b32 	%r6387, %r6381, %r6382, 23;
	shf.l.wrap.b32 	%r6388, %r6382, %r6381, 23;
	mov.b64 	%rd8080, {%r6388, %r6387};
	xor.b64  	%rd8081, %rd8079, %rd8080;
	xor.b64  	%rd8082, %rd8041, %rd8017;
	and.b64  	%rd8083, %rd8065, %rd8082;
	xor.b64  	%rd8084, %rd8083, %rd8017;
	add.s64 	%rd8085, %rd7993, %rd7760;
	add.s64 	%rd8086, %rd8085, %rd12962;
	add.s64 	%rd8087, %rd8086, %rd8084;
	add.s64 	%rd8088, %rd8087, %rd8081;
	add.s64 	%rd8089, %rd8088, %rd8004;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6389,%dummy}, %rd8076;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6390}, %rd8076;
	}
	shf.r.wrap.b32 	%r6391, %r6390, %r6389, 28;
	shf.r.wrap.b32 	%r6392, %r6389, %r6390, 28;
	mov.b64 	%rd8090, {%r6392, %r6391};
	shf.l.wrap.b32 	%r6393, %r6389, %r6390, 30;
	shf.l.wrap.b32 	%r6394, %r6390, %r6389, 30;
	mov.b64 	%rd8091, {%r6394, %r6393};
	xor.b64  	%rd8092, %rd8091, %rd8090;
	shf.l.wrap.b32 	%r6395, %r6389, %r6390, 25;
	shf.l.wrap.b32 	%r6396, %r6390, %r6389, 25;
	mov.b64 	%rd8093, {%r6396, %r6395};
	xor.b64  	%rd8094, %rd8092, %rd8093;
	xor.b64  	%rd8095, %rd8076, %rd8028;
	xor.b64  	%rd8096, %rd8076, %rd8052;
	and.b64  	%rd8097, %rd8096, %rd8095;
	xor.b64  	%rd8098, %rd8097, %rd8076;
	add.s64 	%rd8099, %rd8088, %rd8098;
	add.s64 	%rd8100, %rd8099, %rd8094;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6397,%dummy}, %rd8089;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6398}, %rd8089;
	}
	shf.r.wrap.b32 	%r6399, %r6398, %r6397, 14;
	shf.r.wrap.b32 	%r6400, %r6397, %r6398, 14;
	mov.b64 	%rd8101, {%r6400, %r6399};
	shf.r.wrap.b32 	%r6401, %r6398, %r6397, 18;
	shf.r.wrap.b32 	%r6402, %r6397, %r6398, 18;
	mov.b64 	%rd8102, {%r6402, %r6401};
	xor.b64  	%rd8103, %rd8102, %rd8101;
	shf.l.wrap.b32 	%r6403, %r6397, %r6398, 23;
	shf.l.wrap.b32 	%r6404, %r6398, %r6397, 23;
	mov.b64 	%rd8104, {%r6404, %r6403};
	xor.b64  	%rd8105, %rd8103, %rd8104;
	xor.b64  	%rd8106, %rd8065, %rd8041;
	and.b64  	%rd8107, %rd8089, %rd8106;
	xor.b64  	%rd8108, %rd8107, %rd8041;
	add.s64 	%rd8109, %rd8017, %rd7773;
	add.s64 	%rd8110, %rd8109, %rd12961;
	add.s64 	%rd8111, %rd8110, %rd8108;
	add.s64 	%rd8112, %rd8111, %rd8105;
	add.s64 	%rd8113, %rd8112, %rd8028;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6405,%dummy}, %rd8100;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6406}, %rd8100;
	}
	shf.r.wrap.b32 	%r6407, %r6406, %r6405, 28;
	shf.r.wrap.b32 	%r6408, %r6405, %r6406, 28;
	mov.b64 	%rd8114, {%r6408, %r6407};
	shf.l.wrap.b32 	%r6409, %r6405, %r6406, 30;
	shf.l.wrap.b32 	%r6410, %r6406, %r6405, 30;
	mov.b64 	%rd8115, {%r6410, %r6409};
	xor.b64  	%rd8116, %rd8115, %rd8114;
	shf.l.wrap.b32 	%r6411, %r6405, %r6406, 25;
	shf.l.wrap.b32 	%r6412, %r6406, %r6405, 25;
	mov.b64 	%rd8117, {%r6412, %r6411};
	xor.b64  	%rd8118, %rd8116, %rd8117;
	xor.b64  	%rd8119, %rd8100, %rd8052;
	xor.b64  	%rd8120, %rd8100, %rd8076;
	and.b64  	%rd8121, %rd8120, %rd8119;
	xor.b64  	%rd8122, %rd8121, %rd8100;
	add.s64 	%rd8123, %rd8112, %rd8122;
	add.s64 	%rd8124, %rd8123, %rd8118;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6413,%dummy}, %rd8113;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6414}, %rd8113;
	}
	shf.r.wrap.b32 	%r6415, %r6414, %r6413, 14;
	shf.r.wrap.b32 	%r6416, %r6413, %r6414, 14;
	mov.b64 	%rd8125, {%r6416, %r6415};
	shf.r.wrap.b32 	%r6417, %r6414, %r6413, 18;
	shf.r.wrap.b32 	%r6418, %r6413, %r6414, 18;
	mov.b64 	%rd8126, {%r6418, %r6417};
	xor.b64  	%rd8127, %rd8126, %rd8125;
	shf.l.wrap.b32 	%r6419, %r6413, %r6414, 23;
	shf.l.wrap.b32 	%r6420, %r6414, %r6413, 23;
	mov.b64 	%rd8128, {%r6420, %r6419};
	xor.b64  	%rd8129, %rd8127, %rd8128;
	xor.b64  	%rd8130, %rd8089, %rd8065;
	and.b64  	%rd8131, %rd8113, %rd8130;
	xor.b64  	%rd8132, %rd8131, %rd8065;
	add.s64 	%rd8133, %rd8041, %rd7786;
	add.s64 	%rd8134, %rd8133, %rd12960;
	add.s64 	%rd8135, %rd8134, %rd8132;
	add.s64 	%rd8136, %rd8135, %rd8129;
	add.s64 	%rd8137, %rd8136, %rd8052;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6421,%dummy}, %rd8124;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6422}, %rd8124;
	}
	shf.r.wrap.b32 	%r6423, %r6422, %r6421, 28;
	shf.r.wrap.b32 	%r6424, %r6421, %r6422, 28;
	mov.b64 	%rd8138, {%r6424, %r6423};
	shf.l.wrap.b32 	%r6425, %r6421, %r6422, 30;
	shf.l.wrap.b32 	%r6426, %r6422, %r6421, 30;
	mov.b64 	%rd8139, {%r6426, %r6425};
	xor.b64  	%rd8140, %rd8139, %rd8138;
	shf.l.wrap.b32 	%r6427, %r6421, %r6422, 25;
	shf.l.wrap.b32 	%r6428, %r6422, %r6421, 25;
	mov.b64 	%rd8141, {%r6428, %r6427};
	xor.b64  	%rd8142, %rd8140, %rd8141;
	xor.b64  	%rd8143, %rd8124, %rd8076;
	xor.b64  	%rd8144, %rd8124, %rd8100;
	and.b64  	%rd8145, %rd8144, %rd8143;
	xor.b64  	%rd8146, %rd8145, %rd8124;
	add.s64 	%rd8147, %rd8136, %rd8146;
	add.s64 	%rd8148, %rd8147, %rd8142;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6429,%dummy}, %rd8137;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6430}, %rd8137;
	}
	shf.r.wrap.b32 	%r6431, %r6430, %r6429, 14;
	shf.r.wrap.b32 	%r6432, %r6429, %r6430, 14;
	mov.b64 	%rd8149, {%r6432, %r6431};
	shf.r.wrap.b32 	%r6433, %r6430, %r6429, 18;
	shf.r.wrap.b32 	%r6434, %r6429, %r6430, 18;
	mov.b64 	%rd8150, {%r6434, %r6433};
	xor.b64  	%rd8151, %rd8150, %rd8149;
	shf.l.wrap.b32 	%r6435, %r6429, %r6430, 23;
	shf.l.wrap.b32 	%r6436, %r6430, %r6429, 23;
	mov.b64 	%rd8152, {%r6436, %r6435};
	xor.b64  	%rd8153, %rd8151, %rd8152;
	xor.b64  	%rd8154, %rd8113, %rd8089;
	and.b64  	%rd8155, %rd8137, %rd8154;
	xor.b64  	%rd8156, %rd8155, %rd8089;
	add.s64 	%rd8157, %rd8065, %rd7799;
	add.s64 	%rd8158, %rd8157, %rd12959;
	add.s64 	%rd8159, %rd8158, %rd8156;
	add.s64 	%rd8160, %rd8159, %rd8153;
	add.s64 	%rd8161, %rd8160, %rd8076;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6437,%dummy}, %rd8148;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6438}, %rd8148;
	}
	shf.r.wrap.b32 	%r6439, %r6438, %r6437, 28;
	shf.r.wrap.b32 	%r6440, %r6437, %r6438, 28;
	mov.b64 	%rd8162, {%r6440, %r6439};
	shf.l.wrap.b32 	%r6441, %r6437, %r6438, 30;
	shf.l.wrap.b32 	%r6442, %r6438, %r6437, 30;
	mov.b64 	%rd8163, {%r6442, %r6441};
	xor.b64  	%rd8164, %rd8163, %rd8162;
	shf.l.wrap.b32 	%r6443, %r6437, %r6438, 25;
	shf.l.wrap.b32 	%r6444, %r6438, %r6437, 25;
	mov.b64 	%rd8165, {%r6444, %r6443};
	xor.b64  	%rd8166, %rd8164, %rd8165;
	xor.b64  	%rd8167, %rd8148, %rd8100;
	xor.b64  	%rd8168, %rd8148, %rd8124;
	and.b64  	%rd8169, %rd8168, %rd8167;
	xor.b64  	%rd8170, %rd8169, %rd8148;
	add.s64 	%rd8171, %rd8160, %rd8170;
	add.s64 	%rd8172, %rd8171, %rd8166;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6445,%dummy}, %rd8161;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6446}, %rd8161;
	}
	shf.r.wrap.b32 	%r6447, %r6446, %r6445, 14;
	shf.r.wrap.b32 	%r6448, %r6445, %r6446, 14;
	mov.b64 	%rd8173, {%r6448, %r6447};
	shf.r.wrap.b32 	%r6449, %r6446, %r6445, 18;
	shf.r.wrap.b32 	%r6450, %r6445, %r6446, 18;
	mov.b64 	%rd8174, {%r6450, %r6449};
	xor.b64  	%rd8175, %rd8174, %rd8173;
	shf.l.wrap.b32 	%r6451, %r6445, %r6446, 23;
	shf.l.wrap.b32 	%r6452, %r6446, %r6445, 23;
	mov.b64 	%rd8176, {%r6452, %r6451};
	xor.b64  	%rd8177, %rd8175, %rd8176;
	xor.b64  	%rd8178, %rd8137, %rd8113;
	and.b64  	%rd8179, %rd8161, %rd8178;
	xor.b64  	%rd8180, %rd8179, %rd8113;
	add.s64 	%rd8181, %rd8089, %rd7812;
	add.s64 	%rd8182, %rd8181, %rd12958;
	add.s64 	%rd8183, %rd8182, %rd8180;
	add.s64 	%rd8184, %rd8183, %rd8177;
	add.s64 	%rd8185, %rd8184, %rd8100;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6453,%dummy}, %rd8172;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6454}, %rd8172;
	}
	shf.r.wrap.b32 	%r6455, %r6454, %r6453, 28;
	shf.r.wrap.b32 	%r6456, %r6453, %r6454, 28;
	mov.b64 	%rd8186, {%r6456, %r6455};
	shf.l.wrap.b32 	%r6457, %r6453, %r6454, 30;
	shf.l.wrap.b32 	%r6458, %r6454, %r6453, 30;
	mov.b64 	%rd8187, {%r6458, %r6457};
	xor.b64  	%rd8188, %rd8187, %rd8186;
	shf.l.wrap.b32 	%r6459, %r6453, %r6454, 25;
	shf.l.wrap.b32 	%r6460, %r6454, %r6453, 25;
	mov.b64 	%rd8189, {%r6460, %r6459};
	xor.b64  	%rd8190, %rd8188, %rd8189;
	xor.b64  	%rd8191, %rd8172, %rd8124;
	xor.b64  	%rd8192, %rd8172, %rd8148;
	and.b64  	%rd8193, %rd8192, %rd8191;
	xor.b64  	%rd8194, %rd8193, %rd8172;
	add.s64 	%rd8195, %rd8184, %rd8194;
	add.s64 	%rd8196, %rd8195, %rd8190;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6461,%dummy}, %rd7799;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6462}, %rd7799;
	}
	shf.r.wrap.b32 	%r6463, %r6462, %r6461, 19;
	shf.r.wrap.b32 	%r6464, %r6461, %r6462, 19;
	mov.b64 	%rd8197, {%r6464, %r6463};
	shf.l.wrap.b32 	%r6465, %r6461, %r6462, 3;
	shf.l.wrap.b32 	%r6466, %r6462, %r6461, 3;
	mov.b64 	%rd8198, {%r6466, %r6465};
	shr.u64 	%rd8199, %rd7799, 6;
	xor.b64  	%rd8200, %rd8197, %rd8199;
	xor.b64  	%rd8201, %rd8200, %rd8198;
	shf.r.wrap.b32 	%r6467, %r6076, %r6075, 1;
	shf.r.wrap.b32 	%r6468, %r6075, %r6076, 1;
	mov.b64 	%rd8202, {%r6468, %r6467};
	shf.r.wrap.b32 	%r6469, %r6076, %r6075, 8;
	shf.r.wrap.b32 	%r6470, %r6075, %r6076, 8;
	mov.b64 	%rd8203, {%r6470, %r6469};
	shr.u64 	%rd8204, %rd7630, 7;
	xor.b64  	%rd8205, %rd8202, %rd8204;
	xor.b64  	%rd8206, %rd8205, %rd8203;
	add.s64 	%rd8207, %rd7734, %rd7617;
	add.s64 	%rd8208, %rd8207, %rd8201;
	add.s64 	%rd8209, %rd8208, %rd8206;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6471,%dummy}, %rd7812;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6472}, %rd7812;
	}
	shf.r.wrap.b32 	%r6473, %r6472, %r6471, 19;
	shf.r.wrap.b32 	%r6474, %r6471, %r6472, 19;
	mov.b64 	%rd8210, {%r6474, %r6473};
	shf.l.wrap.b32 	%r6475, %r6471, %r6472, 3;
	shf.l.wrap.b32 	%r6476, %r6472, %r6471, 3;
	mov.b64 	%rd8211, {%r6476, %r6475};
	shr.u64 	%rd8212, %rd7812, 6;
	xor.b64  	%rd8213, %rd8210, %rd8212;
	xor.b64  	%rd8214, %rd8213, %rd8211;
	shf.r.wrap.b32 	%r6477, %r6086, %r6085, 1;
	shf.r.wrap.b32 	%r6478, %r6085, %r6086, 1;
	mov.b64 	%rd8215, {%r6478, %r6477};
	shf.r.wrap.b32 	%r6479, %r6086, %r6085, 8;
	shf.r.wrap.b32 	%r6480, %r6085, %r6086, 8;
	mov.b64 	%rd8216, {%r6480, %r6479};
	shr.u64 	%rd8217, %rd7643, 7;
	xor.b64  	%rd8218, %rd8215, %rd8217;
	xor.b64  	%rd8219, %rd8218, %rd8216;
	add.s64 	%rd8220, %rd7747, %rd7630;
	add.s64 	%rd8221, %rd8220, %rd8214;
	add.s64 	%rd8222, %rd8221, %rd8219;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6481,%dummy}, %rd8209;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6482}, %rd8209;
	}
	shf.r.wrap.b32 	%r6483, %r6482, %r6481, 19;
	shf.r.wrap.b32 	%r6484, %r6481, %r6482, 19;
	mov.b64 	%rd8223, {%r6484, %r6483};
	shf.l.wrap.b32 	%r6485, %r6481, %r6482, 3;
	shf.l.wrap.b32 	%r6486, %r6482, %r6481, 3;
	mov.b64 	%rd8224, {%r6486, %r6485};
	shr.u64 	%rd8225, %rd8209, 6;
	xor.b64  	%rd8226, %rd8223, %rd8225;
	xor.b64  	%rd8227, %rd8226, %rd8224;
	shf.r.wrap.b32 	%r6487, %r6096, %r6095, 1;
	shf.r.wrap.b32 	%r6488, %r6095, %r6096, 1;
	mov.b64 	%rd8228, {%r6488, %r6487};
	shf.r.wrap.b32 	%r6489, %r6096, %r6095, 8;
	shf.r.wrap.b32 	%r6490, %r6095, %r6096, 8;
	mov.b64 	%rd8229, {%r6490, %r6489};
	shr.u64 	%rd8230, %rd7656, 7;
	xor.b64  	%rd8231, %rd8228, %rd8230;
	xor.b64  	%rd8232, %rd8231, %rd8229;
	add.s64 	%rd8233, %rd7760, %rd7643;
	add.s64 	%rd8234, %rd8233, %rd8227;
	add.s64 	%rd8235, %rd8234, %rd8232;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6491,%dummy}, %rd8222;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6492}, %rd8222;
	}
	shf.r.wrap.b32 	%r6493, %r6492, %r6491, 19;
	shf.r.wrap.b32 	%r6494, %r6491, %r6492, 19;
	mov.b64 	%rd8236, {%r6494, %r6493};
	shf.l.wrap.b32 	%r6495, %r6491, %r6492, 3;
	shf.l.wrap.b32 	%r6496, %r6492, %r6491, 3;
	mov.b64 	%rd8237, {%r6496, %r6495};
	shr.u64 	%rd8238, %rd8222, 6;
	xor.b64  	%rd8239, %rd8236, %rd8238;
	xor.b64  	%rd8240, %rd8239, %rd8237;
	shf.r.wrap.b32 	%r6497, %r6106, %r6105, 1;
	shf.r.wrap.b32 	%r6498, %r6105, %r6106, 1;
	mov.b64 	%rd8241, {%r6498, %r6497};
	shf.r.wrap.b32 	%r6499, %r6106, %r6105, 8;
	shf.r.wrap.b32 	%r6500, %r6105, %r6106, 8;
	mov.b64 	%rd8242, {%r6500, %r6499};
	shr.u64 	%rd8243, %rd7669, 7;
	xor.b64  	%rd8244, %rd8241, %rd8243;
	xor.b64  	%rd8245, %rd8244, %rd8242;
	add.s64 	%rd8246, %rd7773, %rd7656;
	add.s64 	%rd8247, %rd8246, %rd8240;
	add.s64 	%rd8248, %rd8247, %rd8245;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6501,%dummy}, %rd8235;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6502}, %rd8235;
	}
	shf.r.wrap.b32 	%r6503, %r6502, %r6501, 19;
	shf.r.wrap.b32 	%r6504, %r6501, %r6502, 19;
	mov.b64 	%rd8249, {%r6504, %r6503};
	shf.l.wrap.b32 	%r6505, %r6501, %r6502, 3;
	shf.l.wrap.b32 	%r6506, %r6502, %r6501, 3;
	mov.b64 	%rd8250, {%r6506, %r6505};
	shr.u64 	%rd8251, %rd8235, 6;
	xor.b64  	%rd8252, %rd8249, %rd8251;
	xor.b64  	%rd8253, %rd8252, %rd8250;
	shf.r.wrap.b32 	%r6507, %r6116, %r6115, 1;
	shf.r.wrap.b32 	%r6508, %r6115, %r6116, 1;
	mov.b64 	%rd8254, {%r6508, %r6507};
	shf.r.wrap.b32 	%r6509, %r6116, %r6115, 8;
	shf.r.wrap.b32 	%r6510, %r6115, %r6116, 8;
	mov.b64 	%rd8255, {%r6510, %r6509};
	shr.u64 	%rd8256, %rd7682, 7;
	xor.b64  	%rd8257, %rd8254, %rd8256;
	xor.b64  	%rd8258, %rd8257, %rd8255;
	add.s64 	%rd8259, %rd7786, %rd7669;
	add.s64 	%rd8260, %rd8259, %rd8253;
	add.s64 	%rd8261, %rd8260, %rd8258;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6511,%dummy}, %rd8248;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6512}, %rd8248;
	}
	shf.r.wrap.b32 	%r6513, %r6512, %r6511, 19;
	shf.r.wrap.b32 	%r6514, %r6511, %r6512, 19;
	mov.b64 	%rd8262, {%r6514, %r6513};
	shf.l.wrap.b32 	%r6515, %r6511, %r6512, 3;
	shf.l.wrap.b32 	%r6516, %r6512, %r6511, 3;
	mov.b64 	%rd8263, {%r6516, %r6515};
	shr.u64 	%rd8264, %rd8248, 6;
	xor.b64  	%rd8265, %rd8262, %rd8264;
	xor.b64  	%rd8266, %rd8265, %rd8263;
	shf.r.wrap.b32 	%r6517, %r6126, %r6125, 1;
	shf.r.wrap.b32 	%r6518, %r6125, %r6126, 1;
	mov.b64 	%rd8267, {%r6518, %r6517};
	shf.r.wrap.b32 	%r6519, %r6126, %r6125, 8;
	shf.r.wrap.b32 	%r6520, %r6125, %r6126, 8;
	mov.b64 	%rd8268, {%r6520, %r6519};
	shr.u64 	%rd8269, %rd7695, 7;
	xor.b64  	%rd8270, %rd8267, %rd8269;
	xor.b64  	%rd8271, %rd8270, %rd8268;
	add.s64 	%rd8272, %rd7799, %rd7682;
	add.s64 	%rd8273, %rd8272, %rd8266;
	add.s64 	%rd8274, %rd8273, %rd8271;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6521,%dummy}, %rd8261;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6522}, %rd8261;
	}
	shf.r.wrap.b32 	%r6523, %r6522, %r6521, 19;
	shf.r.wrap.b32 	%r6524, %r6521, %r6522, 19;
	mov.b64 	%rd8275, {%r6524, %r6523};
	shf.l.wrap.b32 	%r6525, %r6521, %r6522, 3;
	shf.l.wrap.b32 	%r6526, %r6522, %r6521, 3;
	mov.b64 	%rd8276, {%r6526, %r6525};
	shr.u64 	%rd8277, %rd8261, 6;
	xor.b64  	%rd8278, %rd8275, %rd8277;
	xor.b64  	%rd8279, %rd8278, %rd8276;
	shf.r.wrap.b32 	%r6527, %r6136, %r6135, 1;
	shf.r.wrap.b32 	%r6528, %r6135, %r6136, 1;
	mov.b64 	%rd8280, {%r6528, %r6527};
	shf.r.wrap.b32 	%r6529, %r6136, %r6135, 8;
	shf.r.wrap.b32 	%r6530, %r6135, %r6136, 8;
	mov.b64 	%rd8281, {%r6530, %r6529};
	shr.u64 	%rd8282, %rd7708, 7;
	xor.b64  	%rd8283, %rd8280, %rd8282;
	xor.b64  	%rd8284, %rd8283, %rd8281;
	add.s64 	%rd8285, %rd7812, %rd7695;
	add.s64 	%rd8286, %rd8285, %rd8279;
	add.s64 	%rd8287, %rd8286, %rd8284;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6531,%dummy}, %rd8274;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6532}, %rd8274;
	}
	shf.r.wrap.b32 	%r6533, %r6532, %r6531, 19;
	shf.r.wrap.b32 	%r6534, %r6531, %r6532, 19;
	mov.b64 	%rd8288, {%r6534, %r6533};
	shf.l.wrap.b32 	%r6535, %r6531, %r6532, 3;
	shf.l.wrap.b32 	%r6536, %r6532, %r6531, 3;
	mov.b64 	%rd8289, {%r6536, %r6535};
	shr.u64 	%rd8290, %rd8274, 6;
	xor.b64  	%rd8291, %rd8288, %rd8290;
	xor.b64  	%rd8292, %rd8291, %rd8289;
	shf.r.wrap.b32 	%r6537, %r6146, %r6145, 1;
	shf.r.wrap.b32 	%r6538, %r6145, %r6146, 1;
	mov.b64 	%rd8293, {%r6538, %r6537};
	shf.r.wrap.b32 	%r6539, %r6146, %r6145, 8;
	shf.r.wrap.b32 	%r6540, %r6145, %r6146, 8;
	mov.b64 	%rd8294, {%r6540, %r6539};
	shr.u64 	%rd8295, %rd7721, 7;
	xor.b64  	%rd8296, %rd8293, %rd8295;
	xor.b64  	%rd8297, %rd8296, %rd8294;
	add.s64 	%rd8298, %rd8209, %rd7708;
	add.s64 	%rd8299, %rd8298, %rd8292;
	add.s64 	%rd8300, %rd8299, %rd8297;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6541,%dummy}, %rd8287;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6542}, %rd8287;
	}
	shf.r.wrap.b32 	%r6543, %r6542, %r6541, 19;
	shf.r.wrap.b32 	%r6544, %r6541, %r6542, 19;
	mov.b64 	%rd8301, {%r6544, %r6543};
	shf.l.wrap.b32 	%r6545, %r6541, %r6542, 3;
	shf.l.wrap.b32 	%r6546, %r6542, %r6541, 3;
	mov.b64 	%rd8302, {%r6546, %r6545};
	shr.u64 	%rd8303, %rd8287, 6;
	xor.b64  	%rd8304, %rd8301, %rd8303;
	xor.b64  	%rd8305, %rd8304, %rd8302;
	shf.r.wrap.b32 	%r6547, %r6156, %r6155, 1;
	shf.r.wrap.b32 	%r6548, %r6155, %r6156, 1;
	mov.b64 	%rd8306, {%r6548, %r6547};
	shf.r.wrap.b32 	%r6549, %r6156, %r6155, 8;
	shf.r.wrap.b32 	%r6550, %r6155, %r6156, 8;
	mov.b64 	%rd8307, {%r6550, %r6549};
	shr.u64 	%rd8308, %rd7734, 7;
	xor.b64  	%rd8309, %rd8306, %rd8308;
	xor.b64  	%rd8310, %rd8309, %rd8307;
	add.s64 	%rd8311, %rd8222, %rd7721;
	add.s64 	%rd8312, %rd8311, %rd8305;
	add.s64 	%rd8313, %rd8312, %rd8310;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6551,%dummy}, %rd8300;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6552}, %rd8300;
	}
	shf.r.wrap.b32 	%r6553, %r6552, %r6551, 19;
	shf.r.wrap.b32 	%r6554, %r6551, %r6552, 19;
	mov.b64 	%rd8314, {%r6554, %r6553};
	shf.l.wrap.b32 	%r6555, %r6551, %r6552, 3;
	shf.l.wrap.b32 	%r6556, %r6552, %r6551, 3;
	mov.b64 	%rd8315, {%r6556, %r6555};
	shr.u64 	%rd8316, %rd8300, 6;
	xor.b64  	%rd8317, %rd8314, %rd8316;
	xor.b64  	%rd8318, %rd8317, %rd8315;
	shf.r.wrap.b32 	%r6557, %r6166, %r6165, 1;
	shf.r.wrap.b32 	%r6558, %r6165, %r6166, 1;
	mov.b64 	%rd8319, {%r6558, %r6557};
	shf.r.wrap.b32 	%r6559, %r6166, %r6165, 8;
	shf.r.wrap.b32 	%r6560, %r6165, %r6166, 8;
	mov.b64 	%rd8320, {%r6560, %r6559};
	shr.u64 	%rd8321, %rd7747, 7;
	xor.b64  	%rd8322, %rd8319, %rd8321;
	xor.b64  	%rd8323, %rd8322, %rd8320;
	add.s64 	%rd8324, %rd8235, %rd7734;
	add.s64 	%rd8325, %rd8324, %rd8318;
	add.s64 	%rd8326, %rd8325, %rd8323;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6561,%dummy}, %rd8313;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6562}, %rd8313;
	}
	shf.r.wrap.b32 	%r6563, %r6562, %r6561, 19;
	shf.r.wrap.b32 	%r6564, %r6561, %r6562, 19;
	mov.b64 	%rd8327, {%r6564, %r6563};
	shf.l.wrap.b32 	%r6565, %r6561, %r6562, 3;
	shf.l.wrap.b32 	%r6566, %r6562, %r6561, 3;
	mov.b64 	%rd8328, {%r6566, %r6565};
	shr.u64 	%rd8329, %rd8313, 6;
	xor.b64  	%rd8330, %rd8327, %rd8329;
	xor.b64  	%rd8331, %rd8330, %rd8328;
	shf.r.wrap.b32 	%r6567, %r6176, %r6175, 1;
	shf.r.wrap.b32 	%r6568, %r6175, %r6176, 1;
	mov.b64 	%rd8332, {%r6568, %r6567};
	shf.r.wrap.b32 	%r6569, %r6176, %r6175, 8;
	shf.r.wrap.b32 	%r6570, %r6175, %r6176, 8;
	mov.b64 	%rd8333, {%r6570, %r6569};
	shr.u64 	%rd8334, %rd7760, 7;
	xor.b64  	%rd8335, %rd8332, %rd8334;
	xor.b64  	%rd8336, %rd8335, %rd8333;
	add.s64 	%rd8337, %rd8248, %rd7747;
	add.s64 	%rd8338, %rd8337, %rd8331;
	add.s64 	%rd8339, %rd8338, %rd8336;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6571,%dummy}, %rd8326;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6572}, %rd8326;
	}
	shf.r.wrap.b32 	%r6573, %r6572, %r6571, 19;
	shf.r.wrap.b32 	%r6574, %r6571, %r6572, 19;
	mov.b64 	%rd8340, {%r6574, %r6573};
	shf.l.wrap.b32 	%r6575, %r6571, %r6572, 3;
	shf.l.wrap.b32 	%r6576, %r6572, %r6571, 3;
	mov.b64 	%rd8341, {%r6576, %r6575};
	shr.u64 	%rd8342, %rd8326, 6;
	xor.b64  	%rd8343, %rd8340, %rd8342;
	xor.b64  	%rd8344, %rd8343, %rd8341;
	shf.r.wrap.b32 	%r6577, %r6186, %r6185, 1;
	shf.r.wrap.b32 	%r6578, %r6185, %r6186, 1;
	mov.b64 	%rd8345, {%r6578, %r6577};
	shf.r.wrap.b32 	%r6579, %r6186, %r6185, 8;
	shf.r.wrap.b32 	%r6580, %r6185, %r6186, 8;
	mov.b64 	%rd8346, {%r6580, %r6579};
	shr.u64 	%rd8347, %rd7773, 7;
	xor.b64  	%rd8348, %rd8345, %rd8347;
	xor.b64  	%rd8349, %rd8348, %rd8346;
	add.s64 	%rd8350, %rd8261, %rd7760;
	add.s64 	%rd8351, %rd8350, %rd8344;
	add.s64 	%rd8352, %rd8351, %rd8349;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6581,%dummy}, %rd8339;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6582}, %rd8339;
	}
	shf.r.wrap.b32 	%r6583, %r6582, %r6581, 19;
	shf.r.wrap.b32 	%r6584, %r6581, %r6582, 19;
	mov.b64 	%rd8353, {%r6584, %r6583};
	shf.l.wrap.b32 	%r6585, %r6581, %r6582, 3;
	shf.l.wrap.b32 	%r6586, %r6582, %r6581, 3;
	mov.b64 	%rd8354, {%r6586, %r6585};
	shr.u64 	%rd8355, %rd8339, 6;
	xor.b64  	%rd8356, %rd8353, %rd8355;
	xor.b64  	%rd8357, %rd8356, %rd8354;
	shf.r.wrap.b32 	%r6587, %r6196, %r6195, 1;
	shf.r.wrap.b32 	%r6588, %r6195, %r6196, 1;
	mov.b64 	%rd8358, {%r6588, %r6587};
	shf.r.wrap.b32 	%r6589, %r6196, %r6195, 8;
	shf.r.wrap.b32 	%r6590, %r6195, %r6196, 8;
	mov.b64 	%rd8359, {%r6590, %r6589};
	shr.u64 	%rd8360, %rd7786, 7;
	xor.b64  	%rd8361, %rd8358, %rd8360;
	xor.b64  	%rd8362, %rd8361, %rd8359;
	add.s64 	%rd8363, %rd8274, %rd7773;
	add.s64 	%rd8364, %rd8363, %rd8357;
	add.s64 	%rd8365, %rd8364, %rd8362;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6591,%dummy}, %rd8352;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6592}, %rd8352;
	}
	shf.r.wrap.b32 	%r6593, %r6592, %r6591, 19;
	shf.r.wrap.b32 	%r6594, %r6591, %r6592, 19;
	mov.b64 	%rd8366, {%r6594, %r6593};
	shf.l.wrap.b32 	%r6595, %r6591, %r6592, 3;
	shf.l.wrap.b32 	%r6596, %r6592, %r6591, 3;
	mov.b64 	%rd8367, {%r6596, %r6595};
	shr.u64 	%rd8368, %rd8352, 6;
	xor.b64  	%rd8369, %rd8366, %rd8368;
	xor.b64  	%rd8370, %rd8369, %rd8367;
	shf.r.wrap.b32 	%r6597, %r6462, %r6461, 1;
	shf.r.wrap.b32 	%r6598, %r6461, %r6462, 1;
	mov.b64 	%rd8371, {%r6598, %r6597};
	shf.r.wrap.b32 	%r6599, %r6462, %r6461, 8;
	shf.r.wrap.b32 	%r6600, %r6461, %r6462, 8;
	mov.b64 	%rd8372, {%r6600, %r6599};
	shr.u64 	%rd8373, %rd7799, 7;
	xor.b64  	%rd8374, %rd8371, %rd8373;
	xor.b64  	%rd8375, %rd8374, %rd8372;
	add.s64 	%rd8376, %rd8287, %rd7786;
	add.s64 	%rd8377, %rd8376, %rd8370;
	add.s64 	%rd8378, %rd8377, %rd8375;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6601,%dummy}, %rd8365;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6602}, %rd8365;
	}
	shf.r.wrap.b32 	%r6603, %r6602, %r6601, 19;
	shf.r.wrap.b32 	%r6604, %r6601, %r6602, 19;
	mov.b64 	%rd8379, {%r6604, %r6603};
	shf.l.wrap.b32 	%r6605, %r6601, %r6602, 3;
	shf.l.wrap.b32 	%r6606, %r6602, %r6601, 3;
	mov.b64 	%rd8380, {%r6606, %r6605};
	shr.u64 	%rd8381, %rd8365, 6;
	xor.b64  	%rd8382, %rd8379, %rd8381;
	xor.b64  	%rd8383, %rd8382, %rd8380;
	shf.r.wrap.b32 	%r6607, %r6472, %r6471, 1;
	shf.r.wrap.b32 	%r6608, %r6471, %r6472, 1;
	mov.b64 	%rd8384, {%r6608, %r6607};
	shf.r.wrap.b32 	%r6609, %r6472, %r6471, 8;
	shf.r.wrap.b32 	%r6610, %r6471, %r6472, 8;
	mov.b64 	%rd8385, {%r6610, %r6609};
	shr.u64 	%rd8386, %rd7812, 7;
	xor.b64  	%rd8387, %rd8384, %rd8386;
	xor.b64  	%rd8388, %rd8387, %rd8385;
	add.s64 	%rd8389, %rd8300, %rd7799;
	add.s64 	%rd8390, %rd8389, %rd8383;
	add.s64 	%rd8391, %rd8390, %rd8388;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6611,%dummy}, %rd8378;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6612}, %rd8378;
	}
	shf.r.wrap.b32 	%r6613, %r6612, %r6611, 19;
	shf.r.wrap.b32 	%r6614, %r6611, %r6612, 19;
	mov.b64 	%rd8392, {%r6614, %r6613};
	shf.l.wrap.b32 	%r6615, %r6611, %r6612, 3;
	shf.l.wrap.b32 	%r6616, %r6612, %r6611, 3;
	mov.b64 	%rd8393, {%r6616, %r6615};
	shr.u64 	%rd8394, %rd8378, 6;
	xor.b64  	%rd8395, %rd8392, %rd8394;
	xor.b64  	%rd8396, %rd8395, %rd8393;
	shf.r.wrap.b32 	%r6617, %r6482, %r6481, 1;
	shf.r.wrap.b32 	%r6618, %r6481, %r6482, 1;
	mov.b64 	%rd8397, {%r6618, %r6617};
	shf.r.wrap.b32 	%r6619, %r6482, %r6481, 8;
	shf.r.wrap.b32 	%r6620, %r6481, %r6482, 8;
	mov.b64 	%rd8398, {%r6620, %r6619};
	shr.u64 	%rd8399, %rd8209, 7;
	xor.b64  	%rd8400, %rd8397, %rd8399;
	xor.b64  	%rd8401, %rd8400, %rd8398;
	add.s64 	%rd8402, %rd8313, %rd7812;
	add.s64 	%rd8403, %rd8402, %rd8396;
	add.s64 	%rd8404, %rd8403, %rd8401;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6621,%dummy}, %rd8185;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6622}, %rd8185;
	}
	shf.r.wrap.b32 	%r6623, %r6622, %r6621, 14;
	shf.r.wrap.b32 	%r6624, %r6621, %r6622, 14;
	mov.b64 	%rd8405, {%r6624, %r6623};
	shf.r.wrap.b32 	%r6625, %r6622, %r6621, 18;
	shf.r.wrap.b32 	%r6626, %r6621, %r6622, 18;
	mov.b64 	%rd8406, {%r6626, %r6625};
	xor.b64  	%rd8407, %rd8406, %rd8405;
	shf.l.wrap.b32 	%r6627, %r6621, %r6622, 23;
	shf.l.wrap.b32 	%r6628, %r6622, %r6621, 23;
	mov.b64 	%rd8408, {%r6628, %r6627};
	xor.b64  	%rd8409, %rd8407, %rd8408;
	xor.b64  	%rd8410, %rd8161, %rd8137;
	and.b64  	%rd8411, %rd8410, %rd8185;
	xor.b64  	%rd8412, %rd8411, %rd8137;
	add.s64 	%rd8413, %rd8412, %rd8113;
	add.s64 	%rd8414, %rd8413, %rd8209;
	add.s64 	%rd8415, %rd8414, %rd12957;
	add.s64 	%rd8416, %rd8415, %rd8409;
	add.s64 	%rd8417, %rd8416, %rd8124;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6629,%dummy}, %rd8196;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6630}, %rd8196;
	}
	shf.r.wrap.b32 	%r6631, %r6630, %r6629, 28;
	shf.r.wrap.b32 	%r6632, %r6629, %r6630, 28;
	mov.b64 	%rd8418, {%r6632, %r6631};
	shf.l.wrap.b32 	%r6633, %r6629, %r6630, 30;
	shf.l.wrap.b32 	%r6634, %r6630, %r6629, 30;
	mov.b64 	%rd8419, {%r6634, %r6633};
	xor.b64  	%rd8420, %rd8419, %rd8418;
	shf.l.wrap.b32 	%r6635, %r6629, %r6630, 25;
	shf.l.wrap.b32 	%r6636, %r6630, %r6629, 25;
	mov.b64 	%rd8421, {%r6636, %r6635};
	xor.b64  	%rd8422, %rd8420, %rd8421;
	xor.b64  	%rd8423, %rd8196, %rd8148;
	xor.b64  	%rd8424, %rd8196, %rd8172;
	and.b64  	%rd8425, %rd8424, %rd8423;
	xor.b64  	%rd8426, %rd8425, %rd8196;
	add.s64 	%rd8427, %rd8416, %rd8426;
	add.s64 	%rd8428, %rd8427, %rd8422;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6637,%dummy}, %rd8417;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6638}, %rd8417;
	}
	shf.r.wrap.b32 	%r6639, %r6638, %r6637, 14;
	shf.r.wrap.b32 	%r6640, %r6637, %r6638, 14;
	mov.b64 	%rd8429, {%r6640, %r6639};
	shf.r.wrap.b32 	%r6641, %r6638, %r6637, 18;
	shf.r.wrap.b32 	%r6642, %r6637, %r6638, 18;
	mov.b64 	%rd8430, {%r6642, %r6641};
	xor.b64  	%rd8431, %rd8430, %rd8429;
	shf.l.wrap.b32 	%r6643, %r6637, %r6638, 23;
	shf.l.wrap.b32 	%r6644, %r6638, %r6637, 23;
	mov.b64 	%rd8432, {%r6644, %r6643};
	xor.b64  	%rd8433, %rd8431, %rd8432;
	xor.b64  	%rd8434, %rd8185, %rd8161;
	and.b64  	%rd8435, %rd8417, %rd8434;
	xor.b64  	%rd8436, %rd8435, %rd8161;
	add.s64 	%rd8437, %rd8222, %rd8137;
	add.s64 	%rd8438, %rd8437, %rd12956;
	add.s64 	%rd8439, %rd8438, %rd8436;
	add.s64 	%rd8440, %rd8439, %rd8433;
	add.s64 	%rd8441, %rd8440, %rd8148;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6645,%dummy}, %rd8428;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6646}, %rd8428;
	}
	shf.r.wrap.b32 	%r6647, %r6646, %r6645, 28;
	shf.r.wrap.b32 	%r6648, %r6645, %r6646, 28;
	mov.b64 	%rd8442, {%r6648, %r6647};
	shf.l.wrap.b32 	%r6649, %r6645, %r6646, 30;
	shf.l.wrap.b32 	%r6650, %r6646, %r6645, 30;
	mov.b64 	%rd8443, {%r6650, %r6649};
	xor.b64  	%rd8444, %rd8443, %rd8442;
	shf.l.wrap.b32 	%r6651, %r6645, %r6646, 25;
	shf.l.wrap.b32 	%r6652, %r6646, %r6645, 25;
	mov.b64 	%rd8445, {%r6652, %r6651};
	xor.b64  	%rd8446, %rd8444, %rd8445;
	xor.b64  	%rd8447, %rd8428, %rd8172;
	xor.b64  	%rd8448, %rd8428, %rd8196;
	and.b64  	%rd8449, %rd8448, %rd8447;
	xor.b64  	%rd8450, %rd8449, %rd8428;
	add.s64 	%rd8451, %rd8440, %rd8450;
	add.s64 	%rd8452, %rd8451, %rd8446;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6653,%dummy}, %rd8441;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6654}, %rd8441;
	}
	shf.r.wrap.b32 	%r6655, %r6654, %r6653, 14;
	shf.r.wrap.b32 	%r6656, %r6653, %r6654, 14;
	mov.b64 	%rd8453, {%r6656, %r6655};
	shf.r.wrap.b32 	%r6657, %r6654, %r6653, 18;
	shf.r.wrap.b32 	%r6658, %r6653, %r6654, 18;
	mov.b64 	%rd8454, {%r6658, %r6657};
	xor.b64  	%rd8455, %rd8454, %rd8453;
	shf.l.wrap.b32 	%r6659, %r6653, %r6654, 23;
	shf.l.wrap.b32 	%r6660, %r6654, %r6653, 23;
	mov.b64 	%rd8456, {%r6660, %r6659};
	xor.b64  	%rd8457, %rd8455, %rd8456;
	xor.b64  	%rd8458, %rd8417, %rd8185;
	and.b64  	%rd8459, %rd8441, %rd8458;
	xor.b64  	%rd8460, %rd8459, %rd8185;
	add.s64 	%rd8461, %rd8235, %rd8161;
	add.s64 	%rd8462, %rd8461, %rd12955;
	add.s64 	%rd8463, %rd8462, %rd8460;
	add.s64 	%rd8464, %rd8463, %rd8457;
	add.s64 	%rd8465, %rd8464, %rd8172;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6661,%dummy}, %rd8452;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6662}, %rd8452;
	}
	shf.r.wrap.b32 	%r6663, %r6662, %r6661, 28;
	shf.r.wrap.b32 	%r6664, %r6661, %r6662, 28;
	mov.b64 	%rd8466, {%r6664, %r6663};
	shf.l.wrap.b32 	%r6665, %r6661, %r6662, 30;
	shf.l.wrap.b32 	%r6666, %r6662, %r6661, 30;
	mov.b64 	%rd8467, {%r6666, %r6665};
	xor.b64  	%rd8468, %rd8467, %rd8466;
	shf.l.wrap.b32 	%r6667, %r6661, %r6662, 25;
	shf.l.wrap.b32 	%r6668, %r6662, %r6661, 25;
	mov.b64 	%rd8469, {%r6668, %r6667};
	xor.b64  	%rd8470, %rd8468, %rd8469;
	xor.b64  	%rd8471, %rd8452, %rd8196;
	xor.b64  	%rd8472, %rd8452, %rd8428;
	and.b64  	%rd8473, %rd8472, %rd8471;
	xor.b64  	%rd8474, %rd8473, %rd8452;
	add.s64 	%rd8475, %rd8464, %rd8474;
	add.s64 	%rd8476, %rd8475, %rd8470;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6669,%dummy}, %rd8465;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6670}, %rd8465;
	}
	shf.r.wrap.b32 	%r6671, %r6670, %r6669, 14;
	shf.r.wrap.b32 	%r6672, %r6669, %r6670, 14;
	mov.b64 	%rd8477, {%r6672, %r6671};
	shf.r.wrap.b32 	%r6673, %r6670, %r6669, 18;
	shf.r.wrap.b32 	%r6674, %r6669, %r6670, 18;
	mov.b64 	%rd8478, {%r6674, %r6673};
	xor.b64  	%rd8479, %rd8478, %rd8477;
	shf.l.wrap.b32 	%r6675, %r6669, %r6670, 23;
	shf.l.wrap.b32 	%r6676, %r6670, %r6669, 23;
	mov.b64 	%rd8480, {%r6676, %r6675};
	xor.b64  	%rd8481, %rd8479, %rd8480;
	xor.b64  	%rd8482, %rd8441, %rd8417;
	and.b64  	%rd8483, %rd8465, %rd8482;
	xor.b64  	%rd8484, %rd8483, %rd8417;
	add.s64 	%rd8485, %rd8248, %rd8185;
	add.s64 	%rd8486, %rd8485, %rd12954;
	add.s64 	%rd8487, %rd8486, %rd8484;
	add.s64 	%rd8488, %rd8487, %rd8481;
	add.s64 	%rd8489, %rd8488, %rd8196;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6677,%dummy}, %rd8476;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6678}, %rd8476;
	}
	shf.r.wrap.b32 	%r6679, %r6678, %r6677, 28;
	shf.r.wrap.b32 	%r6680, %r6677, %r6678, 28;
	mov.b64 	%rd8490, {%r6680, %r6679};
	shf.l.wrap.b32 	%r6681, %r6677, %r6678, 30;
	shf.l.wrap.b32 	%r6682, %r6678, %r6677, 30;
	mov.b64 	%rd8491, {%r6682, %r6681};
	xor.b64  	%rd8492, %rd8491, %rd8490;
	shf.l.wrap.b32 	%r6683, %r6677, %r6678, 25;
	shf.l.wrap.b32 	%r6684, %r6678, %r6677, 25;
	mov.b64 	%rd8493, {%r6684, %r6683};
	xor.b64  	%rd8494, %rd8492, %rd8493;
	xor.b64  	%rd8495, %rd8476, %rd8428;
	xor.b64  	%rd8496, %rd8476, %rd8452;
	and.b64  	%rd8497, %rd8496, %rd8495;
	xor.b64  	%rd8498, %rd8497, %rd8476;
	add.s64 	%rd8499, %rd8488, %rd8498;
	add.s64 	%rd8500, %rd8499, %rd8494;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6685,%dummy}, %rd8489;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6686}, %rd8489;
	}
	shf.r.wrap.b32 	%r6687, %r6686, %r6685, 14;
	shf.r.wrap.b32 	%r6688, %r6685, %r6686, 14;
	mov.b64 	%rd8501, {%r6688, %r6687};
	shf.r.wrap.b32 	%r6689, %r6686, %r6685, 18;
	shf.r.wrap.b32 	%r6690, %r6685, %r6686, 18;
	mov.b64 	%rd8502, {%r6690, %r6689};
	xor.b64  	%rd8503, %rd8502, %rd8501;
	shf.l.wrap.b32 	%r6691, %r6685, %r6686, 23;
	shf.l.wrap.b32 	%r6692, %r6686, %r6685, 23;
	mov.b64 	%rd8504, {%r6692, %r6691};
	xor.b64  	%rd8505, %rd8503, %rd8504;
	xor.b64  	%rd8506, %rd8465, %rd8441;
	and.b64  	%rd8507, %rd8489, %rd8506;
	xor.b64  	%rd8508, %rd8507, %rd8441;
	add.s64 	%rd8509, %rd8417, %rd8261;
	add.s64 	%rd8510, %rd8509, %rd12953;
	add.s64 	%rd8511, %rd8510, %rd8508;
	add.s64 	%rd8512, %rd8511, %rd8505;
	add.s64 	%rd8513, %rd8512, %rd8428;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6693,%dummy}, %rd8500;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6694}, %rd8500;
	}
	shf.r.wrap.b32 	%r6695, %r6694, %r6693, 28;
	shf.r.wrap.b32 	%r6696, %r6693, %r6694, 28;
	mov.b64 	%rd8514, {%r6696, %r6695};
	shf.l.wrap.b32 	%r6697, %r6693, %r6694, 30;
	shf.l.wrap.b32 	%r6698, %r6694, %r6693, 30;
	mov.b64 	%rd8515, {%r6698, %r6697};
	xor.b64  	%rd8516, %rd8515, %rd8514;
	shf.l.wrap.b32 	%r6699, %r6693, %r6694, 25;
	shf.l.wrap.b32 	%r6700, %r6694, %r6693, 25;
	mov.b64 	%rd8517, {%r6700, %r6699};
	xor.b64  	%rd8518, %rd8516, %rd8517;
	xor.b64  	%rd8519, %rd8500, %rd8452;
	xor.b64  	%rd8520, %rd8500, %rd8476;
	and.b64  	%rd8521, %rd8520, %rd8519;
	xor.b64  	%rd8522, %rd8521, %rd8500;
	add.s64 	%rd8523, %rd8512, %rd8522;
	add.s64 	%rd8524, %rd8523, %rd8518;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6701,%dummy}, %rd8513;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6702}, %rd8513;
	}
	shf.r.wrap.b32 	%r6703, %r6702, %r6701, 14;
	shf.r.wrap.b32 	%r6704, %r6701, %r6702, 14;
	mov.b64 	%rd8525, {%r6704, %r6703};
	shf.r.wrap.b32 	%r6705, %r6702, %r6701, 18;
	shf.r.wrap.b32 	%r6706, %r6701, %r6702, 18;
	mov.b64 	%rd8526, {%r6706, %r6705};
	xor.b64  	%rd8527, %rd8526, %rd8525;
	shf.l.wrap.b32 	%r6707, %r6701, %r6702, 23;
	shf.l.wrap.b32 	%r6708, %r6702, %r6701, 23;
	mov.b64 	%rd8528, {%r6708, %r6707};
	xor.b64  	%rd8529, %rd8527, %rd8528;
	xor.b64  	%rd8530, %rd8489, %rd8465;
	and.b64  	%rd8531, %rd8513, %rd8530;
	xor.b64  	%rd8532, %rd8531, %rd8465;
	add.s64 	%rd8533, %rd8441, %rd8274;
	add.s64 	%rd8534, %rd8533, %rd12952;
	add.s64 	%rd8535, %rd8534, %rd8532;
	add.s64 	%rd8536, %rd8535, %rd8529;
	add.s64 	%rd8537, %rd8536, %rd8452;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6709,%dummy}, %rd8524;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6710}, %rd8524;
	}
	shf.r.wrap.b32 	%r6711, %r6710, %r6709, 28;
	shf.r.wrap.b32 	%r6712, %r6709, %r6710, 28;
	mov.b64 	%rd8538, {%r6712, %r6711};
	shf.l.wrap.b32 	%r6713, %r6709, %r6710, 30;
	shf.l.wrap.b32 	%r6714, %r6710, %r6709, 30;
	mov.b64 	%rd8539, {%r6714, %r6713};
	xor.b64  	%rd8540, %rd8539, %rd8538;
	shf.l.wrap.b32 	%r6715, %r6709, %r6710, 25;
	shf.l.wrap.b32 	%r6716, %r6710, %r6709, 25;
	mov.b64 	%rd8541, {%r6716, %r6715};
	xor.b64  	%rd8542, %rd8540, %rd8541;
	xor.b64  	%rd8543, %rd8524, %rd8476;
	xor.b64  	%rd8544, %rd8524, %rd8500;
	and.b64  	%rd8545, %rd8544, %rd8543;
	xor.b64  	%rd8546, %rd8545, %rd8524;
	add.s64 	%rd8547, %rd8536, %rd8546;
	add.s64 	%rd8548, %rd8547, %rd8542;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6717,%dummy}, %rd8537;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6718}, %rd8537;
	}
	shf.r.wrap.b32 	%r6719, %r6718, %r6717, 14;
	shf.r.wrap.b32 	%r6720, %r6717, %r6718, 14;
	mov.b64 	%rd8549, {%r6720, %r6719};
	shf.r.wrap.b32 	%r6721, %r6718, %r6717, 18;
	shf.r.wrap.b32 	%r6722, %r6717, %r6718, 18;
	mov.b64 	%rd8550, {%r6722, %r6721};
	xor.b64  	%rd8551, %rd8550, %rd8549;
	shf.l.wrap.b32 	%r6723, %r6717, %r6718, 23;
	shf.l.wrap.b32 	%r6724, %r6718, %r6717, 23;
	mov.b64 	%rd8552, {%r6724, %r6723};
	xor.b64  	%rd8553, %rd8551, %rd8552;
	xor.b64  	%rd8554, %rd8513, %rd8489;
	and.b64  	%rd8555, %rd8537, %rd8554;
	xor.b64  	%rd8556, %rd8555, %rd8489;
	add.s64 	%rd8557, %rd8465, %rd8287;
	add.s64 	%rd8558, %rd8557, %rd12951;
	add.s64 	%rd8559, %rd8558, %rd8556;
	add.s64 	%rd8560, %rd8559, %rd8553;
	add.s64 	%rd8561, %rd8560, %rd8476;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6725,%dummy}, %rd8548;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6726}, %rd8548;
	}
	shf.r.wrap.b32 	%r6727, %r6726, %r6725, 28;
	shf.r.wrap.b32 	%r6728, %r6725, %r6726, 28;
	mov.b64 	%rd8562, {%r6728, %r6727};
	shf.l.wrap.b32 	%r6729, %r6725, %r6726, 30;
	shf.l.wrap.b32 	%r6730, %r6726, %r6725, 30;
	mov.b64 	%rd8563, {%r6730, %r6729};
	xor.b64  	%rd8564, %rd8563, %rd8562;
	shf.l.wrap.b32 	%r6731, %r6725, %r6726, 25;
	shf.l.wrap.b32 	%r6732, %r6726, %r6725, 25;
	mov.b64 	%rd8565, {%r6732, %r6731};
	xor.b64  	%rd8566, %rd8564, %rd8565;
	xor.b64  	%rd8567, %rd8548, %rd8500;
	xor.b64  	%rd8568, %rd8548, %rd8524;
	and.b64  	%rd8569, %rd8568, %rd8567;
	xor.b64  	%rd8570, %rd8569, %rd8548;
	add.s64 	%rd8571, %rd8560, %rd8570;
	add.s64 	%rd8572, %rd8571, %rd8566;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6733,%dummy}, %rd8561;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6734}, %rd8561;
	}
	shf.r.wrap.b32 	%r6735, %r6734, %r6733, 14;
	shf.r.wrap.b32 	%r6736, %r6733, %r6734, 14;
	mov.b64 	%rd8573, {%r6736, %r6735};
	shf.r.wrap.b32 	%r6737, %r6734, %r6733, 18;
	shf.r.wrap.b32 	%r6738, %r6733, %r6734, 18;
	mov.b64 	%rd8574, {%r6738, %r6737};
	xor.b64  	%rd8575, %rd8574, %rd8573;
	shf.l.wrap.b32 	%r6739, %r6733, %r6734, 23;
	shf.l.wrap.b32 	%r6740, %r6734, %r6733, 23;
	mov.b64 	%rd8576, {%r6740, %r6739};
	xor.b64  	%rd8577, %rd8575, %rd8576;
	xor.b64  	%rd8578, %rd8537, %rd8513;
	and.b64  	%rd8579, %rd8561, %rd8578;
	xor.b64  	%rd8580, %rd8579, %rd8513;
	add.s64 	%rd8581, %rd8489, %rd8300;
	add.s64 	%rd8582, %rd8581, %rd12950;
	add.s64 	%rd8583, %rd8582, %rd8580;
	add.s64 	%rd8584, %rd8583, %rd8577;
	add.s64 	%rd8585, %rd8584, %rd8500;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6741,%dummy}, %rd8572;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6742}, %rd8572;
	}
	shf.r.wrap.b32 	%r6743, %r6742, %r6741, 28;
	shf.r.wrap.b32 	%r6744, %r6741, %r6742, 28;
	mov.b64 	%rd8586, {%r6744, %r6743};
	shf.l.wrap.b32 	%r6745, %r6741, %r6742, 30;
	shf.l.wrap.b32 	%r6746, %r6742, %r6741, 30;
	mov.b64 	%rd8587, {%r6746, %r6745};
	xor.b64  	%rd8588, %rd8587, %rd8586;
	shf.l.wrap.b32 	%r6747, %r6741, %r6742, 25;
	shf.l.wrap.b32 	%r6748, %r6742, %r6741, 25;
	mov.b64 	%rd8589, {%r6748, %r6747};
	xor.b64  	%rd8590, %rd8588, %rd8589;
	xor.b64  	%rd8591, %rd8572, %rd8524;
	xor.b64  	%rd8592, %rd8572, %rd8548;
	and.b64  	%rd8593, %rd8592, %rd8591;
	xor.b64  	%rd8594, %rd8593, %rd8572;
	add.s64 	%rd8595, %rd8584, %rd8594;
	add.s64 	%rd8596, %rd8595, %rd8590;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6749,%dummy}, %rd8585;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6750}, %rd8585;
	}
	shf.r.wrap.b32 	%r6751, %r6750, %r6749, 14;
	shf.r.wrap.b32 	%r6752, %r6749, %r6750, 14;
	mov.b64 	%rd8597, {%r6752, %r6751};
	shf.r.wrap.b32 	%r6753, %r6750, %r6749, 18;
	shf.r.wrap.b32 	%r6754, %r6749, %r6750, 18;
	mov.b64 	%rd8598, {%r6754, %r6753};
	xor.b64  	%rd8599, %rd8598, %rd8597;
	shf.l.wrap.b32 	%r6755, %r6749, %r6750, 23;
	shf.l.wrap.b32 	%r6756, %r6750, %r6749, 23;
	mov.b64 	%rd8600, {%r6756, %r6755};
	xor.b64  	%rd8601, %rd8599, %rd8600;
	xor.b64  	%rd8602, %rd8561, %rd8537;
	and.b64  	%rd8603, %rd8585, %rd8602;
	xor.b64  	%rd8604, %rd8603, %rd8537;
	add.s64 	%rd8605, %rd8513, %rd8313;
	add.s64 	%rd8606, %rd8605, %rd12949;
	add.s64 	%rd8607, %rd8606, %rd8604;
	add.s64 	%rd8608, %rd8607, %rd8601;
	add.s64 	%rd8609, %rd8608, %rd8524;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6757,%dummy}, %rd8596;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6758}, %rd8596;
	}
	shf.r.wrap.b32 	%r6759, %r6758, %r6757, 28;
	shf.r.wrap.b32 	%r6760, %r6757, %r6758, 28;
	mov.b64 	%rd8610, {%r6760, %r6759};
	shf.l.wrap.b32 	%r6761, %r6757, %r6758, 30;
	shf.l.wrap.b32 	%r6762, %r6758, %r6757, 30;
	mov.b64 	%rd8611, {%r6762, %r6761};
	xor.b64  	%rd8612, %rd8611, %rd8610;
	shf.l.wrap.b32 	%r6763, %r6757, %r6758, 25;
	shf.l.wrap.b32 	%r6764, %r6758, %r6757, 25;
	mov.b64 	%rd8613, {%r6764, %r6763};
	xor.b64  	%rd8614, %rd8612, %rd8613;
	xor.b64  	%rd8615, %rd8596, %rd8548;
	xor.b64  	%rd8616, %rd8596, %rd8572;
	and.b64  	%rd8617, %rd8616, %rd8615;
	xor.b64  	%rd8618, %rd8617, %rd8596;
	add.s64 	%rd8619, %rd8608, %rd8618;
	add.s64 	%rd8620, %rd8619, %rd8614;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6765,%dummy}, %rd8609;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6766}, %rd8609;
	}
	shf.r.wrap.b32 	%r6767, %r6766, %r6765, 14;
	shf.r.wrap.b32 	%r6768, %r6765, %r6766, 14;
	mov.b64 	%rd8621, {%r6768, %r6767};
	shf.r.wrap.b32 	%r6769, %r6766, %r6765, 18;
	shf.r.wrap.b32 	%r6770, %r6765, %r6766, 18;
	mov.b64 	%rd8622, {%r6770, %r6769};
	xor.b64  	%rd8623, %rd8622, %rd8621;
	shf.l.wrap.b32 	%r6771, %r6765, %r6766, 23;
	shf.l.wrap.b32 	%r6772, %r6766, %r6765, 23;
	mov.b64 	%rd8624, {%r6772, %r6771};
	xor.b64  	%rd8625, %rd8623, %rd8624;
	xor.b64  	%rd8626, %rd8585, %rd8561;
	and.b64  	%rd8627, %rd8609, %rd8626;
	xor.b64  	%rd8628, %rd8627, %rd8561;
	add.s64 	%rd8629, %rd8537, %rd8326;
	add.s64 	%rd8630, %rd8629, %rd12948;
	add.s64 	%rd8631, %rd8630, %rd8628;
	add.s64 	%rd8632, %rd8631, %rd8625;
	add.s64 	%rd8633, %rd8632, %rd8548;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6773,%dummy}, %rd8620;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6774}, %rd8620;
	}
	shf.r.wrap.b32 	%r6775, %r6774, %r6773, 28;
	shf.r.wrap.b32 	%r6776, %r6773, %r6774, 28;
	mov.b64 	%rd8634, {%r6776, %r6775};
	shf.l.wrap.b32 	%r6777, %r6773, %r6774, 30;
	shf.l.wrap.b32 	%r6778, %r6774, %r6773, 30;
	mov.b64 	%rd8635, {%r6778, %r6777};
	xor.b64  	%rd8636, %rd8635, %rd8634;
	shf.l.wrap.b32 	%r6779, %r6773, %r6774, 25;
	shf.l.wrap.b32 	%r6780, %r6774, %r6773, 25;
	mov.b64 	%rd8637, {%r6780, %r6779};
	xor.b64  	%rd8638, %rd8636, %rd8637;
	xor.b64  	%rd8639, %rd8620, %rd8572;
	xor.b64  	%rd8640, %rd8620, %rd8596;
	and.b64  	%rd8641, %rd8640, %rd8639;
	xor.b64  	%rd8642, %rd8641, %rd8620;
	add.s64 	%rd8643, %rd8632, %rd8642;
	add.s64 	%rd8644, %rd8643, %rd8638;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6781,%dummy}, %rd8633;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6782}, %rd8633;
	}
	shf.r.wrap.b32 	%r6783, %r6782, %r6781, 14;
	shf.r.wrap.b32 	%r6784, %r6781, %r6782, 14;
	mov.b64 	%rd8645, {%r6784, %r6783};
	shf.r.wrap.b32 	%r6785, %r6782, %r6781, 18;
	shf.r.wrap.b32 	%r6786, %r6781, %r6782, 18;
	mov.b64 	%rd8646, {%r6786, %r6785};
	xor.b64  	%rd8647, %rd8646, %rd8645;
	shf.l.wrap.b32 	%r6787, %r6781, %r6782, 23;
	shf.l.wrap.b32 	%r6788, %r6782, %r6781, 23;
	mov.b64 	%rd8648, {%r6788, %r6787};
	xor.b64  	%rd8649, %rd8647, %rd8648;
	xor.b64  	%rd8650, %rd8609, %rd8585;
	and.b64  	%rd8651, %rd8633, %rd8650;
	xor.b64  	%rd8652, %rd8651, %rd8585;
	add.s64 	%rd8653, %rd8561, %rd8339;
	add.s64 	%rd8654, %rd8653, %rd12947;
	add.s64 	%rd8655, %rd8654, %rd8652;
	add.s64 	%rd8656, %rd8655, %rd8649;
	add.s64 	%rd8657, %rd8656, %rd8572;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6789,%dummy}, %rd8644;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6790}, %rd8644;
	}
	shf.r.wrap.b32 	%r6791, %r6790, %r6789, 28;
	shf.r.wrap.b32 	%r6792, %r6789, %r6790, 28;
	mov.b64 	%rd8658, {%r6792, %r6791};
	shf.l.wrap.b32 	%r6793, %r6789, %r6790, 30;
	shf.l.wrap.b32 	%r6794, %r6790, %r6789, 30;
	mov.b64 	%rd8659, {%r6794, %r6793};
	xor.b64  	%rd8660, %rd8659, %rd8658;
	shf.l.wrap.b32 	%r6795, %r6789, %r6790, 25;
	shf.l.wrap.b32 	%r6796, %r6790, %r6789, 25;
	mov.b64 	%rd8661, {%r6796, %r6795};
	xor.b64  	%rd8662, %rd8660, %rd8661;
	xor.b64  	%rd8663, %rd8644, %rd8596;
	xor.b64  	%rd8664, %rd8644, %rd8620;
	and.b64  	%rd8665, %rd8664, %rd8663;
	xor.b64  	%rd8666, %rd8665, %rd8644;
	add.s64 	%rd8667, %rd8656, %rd8666;
	add.s64 	%rd8668, %rd8667, %rd8662;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6797,%dummy}, %rd8657;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6798}, %rd8657;
	}
	shf.r.wrap.b32 	%r6799, %r6798, %r6797, 14;
	shf.r.wrap.b32 	%r6800, %r6797, %r6798, 14;
	mov.b64 	%rd8669, {%r6800, %r6799};
	shf.r.wrap.b32 	%r6801, %r6798, %r6797, 18;
	shf.r.wrap.b32 	%r6802, %r6797, %r6798, 18;
	mov.b64 	%rd8670, {%r6802, %r6801};
	xor.b64  	%rd8671, %rd8670, %rd8669;
	shf.l.wrap.b32 	%r6803, %r6797, %r6798, 23;
	shf.l.wrap.b32 	%r6804, %r6798, %r6797, 23;
	mov.b64 	%rd8672, {%r6804, %r6803};
	xor.b64  	%rd8673, %rd8671, %rd8672;
	xor.b64  	%rd8674, %rd8633, %rd8609;
	and.b64  	%rd8675, %rd8657, %rd8674;
	xor.b64  	%rd8676, %rd8675, %rd8609;
	add.s64 	%rd8677, %rd8585, %rd8352;
	add.s64 	%rd8678, %rd8677, %rd12946;
	add.s64 	%rd8679, %rd8678, %rd8676;
	add.s64 	%rd8680, %rd8679, %rd8673;
	add.s64 	%rd8681, %rd8680, %rd8596;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6805,%dummy}, %rd8668;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6806}, %rd8668;
	}
	shf.r.wrap.b32 	%r6807, %r6806, %r6805, 28;
	shf.r.wrap.b32 	%r6808, %r6805, %r6806, 28;
	mov.b64 	%rd8682, {%r6808, %r6807};
	shf.l.wrap.b32 	%r6809, %r6805, %r6806, 30;
	shf.l.wrap.b32 	%r6810, %r6806, %r6805, 30;
	mov.b64 	%rd8683, {%r6810, %r6809};
	xor.b64  	%rd8684, %rd8683, %rd8682;
	shf.l.wrap.b32 	%r6811, %r6805, %r6806, 25;
	shf.l.wrap.b32 	%r6812, %r6806, %r6805, 25;
	mov.b64 	%rd8685, {%r6812, %r6811};
	xor.b64  	%rd8686, %rd8684, %rd8685;
	xor.b64  	%rd8687, %rd8668, %rd8620;
	xor.b64  	%rd8688, %rd8668, %rd8644;
	and.b64  	%rd8689, %rd8688, %rd8687;
	xor.b64  	%rd8690, %rd8689, %rd8668;
	add.s64 	%rd8691, %rd8680, %rd8690;
	add.s64 	%rd8692, %rd8691, %rd8686;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6813,%dummy}, %rd8681;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6814}, %rd8681;
	}
	shf.r.wrap.b32 	%r6815, %r6814, %r6813, 14;
	shf.r.wrap.b32 	%r6816, %r6813, %r6814, 14;
	mov.b64 	%rd8693, {%r6816, %r6815};
	shf.r.wrap.b32 	%r6817, %r6814, %r6813, 18;
	shf.r.wrap.b32 	%r6818, %r6813, %r6814, 18;
	mov.b64 	%rd8694, {%r6818, %r6817};
	xor.b64  	%rd8695, %rd8694, %rd8693;
	shf.l.wrap.b32 	%r6819, %r6813, %r6814, 23;
	shf.l.wrap.b32 	%r6820, %r6814, %r6813, 23;
	mov.b64 	%rd8696, {%r6820, %r6819};
	xor.b64  	%rd8697, %rd8695, %rd8696;
	xor.b64  	%rd8698, %rd8657, %rd8633;
	and.b64  	%rd8699, %rd8681, %rd8698;
	xor.b64  	%rd8700, %rd8699, %rd8633;
	add.s64 	%rd8701, %rd8609, %rd8365;
	add.s64 	%rd8702, %rd8701, %rd12945;
	add.s64 	%rd8703, %rd8702, %rd8700;
	add.s64 	%rd8704, %rd8703, %rd8697;
	add.s64 	%rd8705, %rd8704, %rd8620;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6821,%dummy}, %rd8692;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6822}, %rd8692;
	}
	shf.r.wrap.b32 	%r6823, %r6822, %r6821, 28;
	shf.r.wrap.b32 	%r6824, %r6821, %r6822, 28;
	mov.b64 	%rd8706, {%r6824, %r6823};
	shf.l.wrap.b32 	%r6825, %r6821, %r6822, 30;
	shf.l.wrap.b32 	%r6826, %r6822, %r6821, 30;
	mov.b64 	%rd8707, {%r6826, %r6825};
	xor.b64  	%rd8708, %rd8707, %rd8706;
	shf.l.wrap.b32 	%r6827, %r6821, %r6822, 25;
	shf.l.wrap.b32 	%r6828, %r6822, %r6821, 25;
	mov.b64 	%rd8709, {%r6828, %r6827};
	xor.b64  	%rd8710, %rd8708, %rd8709;
	xor.b64  	%rd8711, %rd8692, %rd8644;
	xor.b64  	%rd8712, %rd8692, %rd8668;
	and.b64  	%rd8713, %rd8712, %rd8711;
	xor.b64  	%rd8714, %rd8713, %rd8692;
	add.s64 	%rd8715, %rd8704, %rd8714;
	add.s64 	%rd8716, %rd8715, %rd8710;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6829,%dummy}, %rd8705;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6830}, %rd8705;
	}
	shf.r.wrap.b32 	%r6831, %r6830, %r6829, 14;
	shf.r.wrap.b32 	%r6832, %r6829, %r6830, 14;
	mov.b64 	%rd8717, {%r6832, %r6831};
	shf.r.wrap.b32 	%r6833, %r6830, %r6829, 18;
	shf.r.wrap.b32 	%r6834, %r6829, %r6830, 18;
	mov.b64 	%rd8718, {%r6834, %r6833};
	xor.b64  	%rd8719, %rd8718, %rd8717;
	shf.l.wrap.b32 	%r6835, %r6829, %r6830, 23;
	shf.l.wrap.b32 	%r6836, %r6830, %r6829, 23;
	mov.b64 	%rd8720, {%r6836, %r6835};
	xor.b64  	%rd8721, %rd8719, %rd8720;
	xor.b64  	%rd8722, %rd8681, %rd8657;
	and.b64  	%rd8723, %rd8705, %rd8722;
	xor.b64  	%rd8724, %rd8723, %rd8657;
	add.s64 	%rd8725, %rd8633, %rd8378;
	add.s64 	%rd8726, %rd8725, %rd12944;
	add.s64 	%rd8727, %rd8726, %rd8724;
	add.s64 	%rd8728, %rd8727, %rd8721;
	add.s64 	%rd8729, %rd8728, %rd8644;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6837,%dummy}, %rd8716;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6838}, %rd8716;
	}
	shf.r.wrap.b32 	%r6839, %r6838, %r6837, 28;
	shf.r.wrap.b32 	%r6840, %r6837, %r6838, 28;
	mov.b64 	%rd8730, {%r6840, %r6839};
	shf.l.wrap.b32 	%r6841, %r6837, %r6838, 30;
	shf.l.wrap.b32 	%r6842, %r6838, %r6837, 30;
	mov.b64 	%rd8731, {%r6842, %r6841};
	xor.b64  	%rd8732, %rd8731, %rd8730;
	shf.l.wrap.b32 	%r6843, %r6837, %r6838, 25;
	shf.l.wrap.b32 	%r6844, %r6838, %r6837, 25;
	mov.b64 	%rd8733, {%r6844, %r6843};
	xor.b64  	%rd8734, %rd8732, %rd8733;
	xor.b64  	%rd8735, %rd8716, %rd8668;
	xor.b64  	%rd8736, %rd8716, %rd8692;
	and.b64  	%rd8737, %rd8736, %rd8735;
	xor.b64  	%rd8738, %rd8737, %rd8716;
	add.s64 	%rd8739, %rd8728, %rd8738;
	add.s64 	%rd8740, %rd8739, %rd8734;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6845,%dummy}, %rd8729;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6846}, %rd8729;
	}
	shf.r.wrap.b32 	%r6847, %r6846, %r6845, 14;
	shf.r.wrap.b32 	%r6848, %r6845, %r6846, 14;
	mov.b64 	%rd8741, {%r6848, %r6847};
	shf.r.wrap.b32 	%r6849, %r6846, %r6845, 18;
	shf.r.wrap.b32 	%r6850, %r6845, %r6846, 18;
	mov.b64 	%rd8742, {%r6850, %r6849};
	xor.b64  	%rd8743, %rd8742, %rd8741;
	shf.l.wrap.b32 	%r6851, %r6845, %r6846, 23;
	shf.l.wrap.b32 	%r6852, %r6846, %r6845, 23;
	mov.b64 	%rd8744, {%r6852, %r6851};
	xor.b64  	%rd8745, %rd8743, %rd8744;
	xor.b64  	%rd8746, %rd8705, %rd8681;
	and.b64  	%rd8747, %rd8729, %rd8746;
	xor.b64  	%rd8748, %rd8747, %rd8681;
	add.s64 	%rd8749, %rd8657, %rd8391;
	add.s64 	%rd8750, %rd8749, %rd12943;
	add.s64 	%rd8751, %rd8750, %rd8748;
	add.s64 	%rd8752, %rd8751, %rd8745;
	add.s64 	%rd8753, %rd8752, %rd8668;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6853,%dummy}, %rd8740;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6854}, %rd8740;
	}
	shf.r.wrap.b32 	%r6855, %r6854, %r6853, 28;
	shf.r.wrap.b32 	%r6856, %r6853, %r6854, 28;
	mov.b64 	%rd8754, {%r6856, %r6855};
	shf.l.wrap.b32 	%r6857, %r6853, %r6854, 30;
	shf.l.wrap.b32 	%r6858, %r6854, %r6853, 30;
	mov.b64 	%rd8755, {%r6858, %r6857};
	xor.b64  	%rd8756, %rd8755, %rd8754;
	shf.l.wrap.b32 	%r6859, %r6853, %r6854, 25;
	shf.l.wrap.b32 	%r6860, %r6854, %r6853, 25;
	mov.b64 	%rd8757, {%r6860, %r6859};
	xor.b64  	%rd8758, %rd8756, %rd8757;
	xor.b64  	%rd8759, %rd8740, %rd8692;
	xor.b64  	%rd8760, %rd8740, %rd8716;
	and.b64  	%rd8761, %rd8760, %rd8759;
	xor.b64  	%rd8762, %rd8761, %rd8740;
	add.s64 	%rd8763, %rd8752, %rd8762;
	add.s64 	%rd8764, %rd8763, %rd8758;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6861,%dummy}, %rd8753;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6862}, %rd8753;
	}
	shf.r.wrap.b32 	%r6863, %r6862, %r6861, 14;
	shf.r.wrap.b32 	%r6864, %r6861, %r6862, 14;
	mov.b64 	%rd8765, {%r6864, %r6863};
	shf.r.wrap.b32 	%r6865, %r6862, %r6861, 18;
	shf.r.wrap.b32 	%r6866, %r6861, %r6862, 18;
	mov.b64 	%rd8766, {%r6866, %r6865};
	xor.b64  	%rd8767, %rd8766, %rd8765;
	shf.l.wrap.b32 	%r6867, %r6861, %r6862, 23;
	shf.l.wrap.b32 	%r6868, %r6862, %r6861, 23;
	mov.b64 	%rd8768, {%r6868, %r6867};
	xor.b64  	%rd8769, %rd8767, %rd8768;
	xor.b64  	%rd8770, %rd8729, %rd8705;
	and.b64  	%rd8771, %rd8753, %rd8770;
	xor.b64  	%rd8772, %rd8771, %rd8705;
	add.s64 	%rd8773, %rd8681, %rd8404;
	add.s64 	%rd8774, %rd8773, %rd12942;
	add.s64 	%rd8775, %rd8774, %rd8772;
	add.s64 	%rd8776, %rd8775, %rd8769;
	add.s64 	%rd8777, %rd8776, %rd8692;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6869,%dummy}, %rd8764;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6870}, %rd8764;
	}
	shf.r.wrap.b32 	%r6871, %r6870, %r6869, 28;
	shf.r.wrap.b32 	%r6872, %r6869, %r6870, 28;
	mov.b64 	%rd8778, {%r6872, %r6871};
	shf.l.wrap.b32 	%r6873, %r6869, %r6870, 30;
	shf.l.wrap.b32 	%r6874, %r6870, %r6869, 30;
	mov.b64 	%rd8779, {%r6874, %r6873};
	xor.b64  	%rd8780, %rd8779, %rd8778;
	shf.l.wrap.b32 	%r6875, %r6869, %r6870, 25;
	shf.l.wrap.b32 	%r6876, %r6870, %r6869, 25;
	mov.b64 	%rd8781, {%r6876, %r6875};
	xor.b64  	%rd8782, %rd8780, %rd8781;
	xor.b64  	%rd8783, %rd8764, %rd8716;
	xor.b64  	%rd8784, %rd8764, %rd8740;
	and.b64  	%rd8785, %rd8784, %rd8783;
	xor.b64  	%rd8786, %rd8785, %rd8764;
	add.s64 	%rd8787, %rd8776, %rd8786;
	add.s64 	%rd8788, %rd8787, %rd8782;
	add.s64 	%rd13037, %rd13037, %rd8788;
	st.local.u64 	[%rd12924], %rd13037;
	add.s64 	%rd13036, %rd13036, %rd8764;
	st.local.u64 	[%rd24], %rd13036;
	add.s64 	%rd13035, %rd13035, %rd8740;
	st.local.u64 	[%rd24+8], %rd13035;
	add.s64 	%rd13034, %rd13034, %rd8716;
	st.local.u64 	[%rd24+16], %rd13034;
	add.s64 	%rd13033, %rd13033, %rd8777;
	st.local.u64 	[%rd24+24], %rd13033;
	add.s64 	%rd13032, %rd13032, %rd8753;
	st.local.u64 	[%rd24+32], %rd13032;
	add.s64 	%rd13031, %rd13031, %rd8729;
	st.local.u64 	[%rd24+40], %rd13031;
	add.s64 	%rd13030, %rd13030, %rd8705;
	st.local.u64 	[%rd24+48], %rd13030;
	mov.u32 	%r10662, 0;
	st.local.u32 	[%rd24+56], %r10662;
	st.local.u32 	[%rd24+64], %r10662;
	st.local.u32 	[%rd24+72], %r10662;
	st.local.u32 	[%rd24+80], %r10662;
	st.local.u32 	[%rd24+88], %r10662;
	st.local.u32 	[%rd24+96], %r10662;
	st.local.u32 	[%rd24+104], %r10662;
	st.local.u32 	[%rd24+112], %r10662;
	st.local.u32 	[%rd24+120], %r10662;
	st.local.u32 	[%rd24+128], %r10662;
	st.local.u32 	[%rd24+136], %r10662;
	st.local.u32 	[%rd24+144], %r10662;
	st.local.u32 	[%rd24+152], %r10662;
	st.local.u32 	[%rd24+160], %r10662;
	st.local.u32 	[%rd24+168], %r10662;
	st.local.u32 	[%rd24+176], %r10662;
	st.local.u32 	[%rd25+4], %r10662;
	st.local.u32 	[%rd26+4], %r10662;
	st.local.u32 	[%rd27+4], %r10662;
	st.local.u32 	[%rd28+4], %r10662;
	st.local.u32 	[%rd29+4], %r10662;
	st.local.u32 	[%rd30+4], %r10662;
	st.local.u32 	[%rd31+4], %r10662;
	st.local.u32 	[%rd32+4], %r10662;
	st.local.u32 	[%rd33+4], %r10662;
	st.local.u32 	[%rd34+4], %r10662;
	st.local.u32 	[%rd35+4], %r10662;
	st.local.u32 	[%rd36+4], %r10662;
	st.local.u32 	[%rd37+4], %r10662;
	st.local.u32 	[%rd38+4], %r10662;
	st.local.u32 	[%rd39+4], %r10662;
	st.local.u32 	[%rd40+4], %r10662;
	mov.u32 	%r10663, %r10662;
	mov.u32 	%r10664, %r10662;
	mov.u32 	%r10665, %r10662;
	mov.u32 	%r10666, %r10662;
	mov.u32 	%r10667, %r10662;
	mov.u32 	%r10668, %r10662;
	mov.u32 	%r10669, %r10662;
	mov.u32 	%r10670, %r10662;
	mov.u32 	%r10671, %r10662;
	mov.u32 	%r10672, %r10662;
	mov.u32 	%r10673, %r10662;
	mov.u32 	%r10674, %r10662;
	mov.u32 	%r10675, %r10662;
	mov.u32 	%r10676, %r10662;
	mov.u32 	%r10677, %r10662;
	mov.u32 	%r10678, %r10662;
	mov.u32 	%r10679, %r10662;
	mov.u32 	%r10680, %r10662;
	mov.u32 	%r10681, %r10662;
	mov.u32 	%r10682, %r10662;
	mov.u32 	%r10683, %r10662;
	mov.u32 	%r10684, %r10662;
	mov.u32 	%r10685, %r10662;
	mov.u32 	%r10686, %r10662;
	mov.u32 	%r10687, %r10662;
	mov.u32 	%r10688, %r10662;
	mov.u32 	%r10689, %r10662;
	mov.u32 	%r10690, %r10662;
	mov.u32 	%r10691, %r10662;
	bra.uni 	BB6_649;

BB6_647:
	ld.local.u32 	%r10689, [%rd24+64];
	ld.local.u32 	%r10688, [%rd26+4];
	ld.local.u32 	%r10687, [%rd24+72];
	ld.local.u32 	%r10686, [%rd27+4];
	ld.local.u32 	%r10685, [%rd24+80];
	ld.local.u32 	%r10684, [%rd28+4];
	ld.local.u32 	%r10683, [%rd24+88];
	ld.local.u32 	%r10682, [%rd29+4];
	ld.local.u32 	%r10681, [%rd24+96];
	ld.local.u32 	%r10680, [%rd30+4];
	ld.local.u32 	%r10679, [%rd24+104];
	ld.local.u32 	%r10678, [%rd31+4];
	ld.local.u32 	%r10677, [%rd24+112];
	ld.local.u32 	%r10676, [%rd32+4];
	ld.local.u32 	%r10675, [%rd24+120];
	ld.local.u32 	%r10674, [%rd33+4];
	ld.local.u32 	%r10673, [%rd24+128];
	ld.local.u32 	%r10672, [%rd34+4];
	ld.local.u32 	%r10671, [%rd24+136];
	ld.local.u32 	%r10670, [%rd35+4];
	ld.local.u32 	%r10669, [%rd24+144];
	ld.local.u32 	%r10668, [%rd36+4];
	ld.local.u32 	%r10667, [%rd24+152];
	ld.local.u32 	%r10666, [%rd37+4];
	ld.local.u32 	%r10665, [%rd24+160];
	ld.local.u32 	%r10664, [%rd38+4];
	ld.local.u32 	%r10663, [%rd24+168];
	ld.local.u32 	%r10662, [%rd39+4];

BB6_649:
	add.u64 	%rd12903, %SP, 128;
	cvta.to.local.u64 	%rd12902, %rd12903;
	mov.u32 	%r10695, 0;
	st.local.u32 	[%rd24+176], %r10695;
	shl.b32 	%r6911, %r244, 3;
	st.local.u32 	[%rd40+4], %r6911;
	mov.b64	%rd8789, {%r10690, %r10691};
	mov.b64	%rd8790, {%r10688, %r10689};
	mov.b64	%rd8791, {%r10686, %r10687};
	mov.b64	%rd8792, {%r10684, %r10685};
	mov.b64	%rd8793, {%r10682, %r10683};
	mov.b64	%rd8794, {%r10680, %r10681};
	mov.b64	%rd8795, {%r10678, %r10679};
	mov.b64	%rd8796, {%r10676, %r10677};
	mov.b64	%rd8797, {%r10674, %r10675};
	mov.b64	%rd8798, {%r10672, %r10673};
	mov.b64	%rd8799, {%r10670, %r10671};
	mov.b64	%rd8800, {%r10668, %r10669};
	mov.b64	%rd8801, {%r10666, %r10667};
	mov.b64	%rd8802, {%r10664, %r10665};
	mov.b64	%rd8803, {%r10662, %r10663};
	mov.b64	%rd8804, {%r6911, %r10695};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6912,%dummy}, %rd13033;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6913}, %rd13033;
	}
	shf.r.wrap.b32 	%r6914, %r6913, %r6912, 18;
	shf.r.wrap.b32 	%r6915, %r6912, %r6913, 18;
	mov.b64 	%rd8805, {%r6915, %r6914};
	shf.r.wrap.b32 	%r6916, %r6913, %r6912, 14;
	shf.r.wrap.b32 	%r6917, %r6912, %r6913, 14;
	mov.b64 	%rd8806, {%r6917, %r6916};
	xor.b64  	%rd8807, %rd8805, %rd8806;
	shf.l.wrap.b32 	%r6918, %r6912, %r6913, 23;
	shf.l.wrap.b32 	%r6919, %r6913, %r6912, 23;
	mov.b64 	%rd8808, {%r6919, %r6918};
	xor.b64  	%rd8809, %rd8807, %rd8808;
	xor.b64  	%rd8810, %rd13031, %rd13032;
	and.b64  	%rd8811, %rd8810, %rd13033;
	xor.b64  	%rd8812, %rd8811, %rd13031;
	add.s64 	%rd8813, %rd8812, %rd13030;
	add.s64 	%rd8814, %rd8813, %rd8789;
	add.s64 	%rd8815, %rd8814, %rd13021;
	add.s64 	%rd8816, %rd8815, %rd8809;
	add.s64 	%rd8817, %rd8816, %rd13034;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6920}, %rd13037;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6921,%dummy}, %rd13037;
	}
	shf.l.wrap.b32 	%r6922, %r6921, %r6920, 30;
	shf.l.wrap.b32 	%r6923, %r6920, %r6921, 30;
	mov.b64 	%rd8818, {%r6923, %r6922};
	shf.r.wrap.b32 	%r6924, %r6920, %r6921, 28;
	shf.r.wrap.b32 	%r6925, %r6921, %r6920, 28;
	mov.b64 	%rd8819, {%r6925, %r6924};
	xor.b64  	%rd8820, %rd8818, %rd8819;
	shf.l.wrap.b32 	%r6926, %r6921, %r6920, 25;
	shf.l.wrap.b32 	%r6927, %r6920, %r6921, 25;
	mov.b64 	%rd8821, {%r6927, %r6926};
	xor.b64  	%rd8822, %rd8820, %rd8821;
	xor.b64  	%rd8823, %rd13036, %rd13037;
	xor.b64  	%rd8824, %rd13035, %rd13037;
	and.b64  	%rd8825, %rd8824, %rd8823;
	xor.b64  	%rd8826, %rd8825, %rd13037;
	add.s64 	%rd8827, %rd8816, %rd8826;
	add.s64 	%rd8828, %rd8827, %rd8822;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6928,%dummy}, %rd8817;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6929}, %rd8817;
	}
	shf.r.wrap.b32 	%r6930, %r6929, %r6928, 14;
	shf.r.wrap.b32 	%r6931, %r6928, %r6929, 14;
	mov.b64 	%rd8829, {%r6931, %r6930};
	shf.r.wrap.b32 	%r6932, %r6929, %r6928, 18;
	shf.r.wrap.b32 	%r6933, %r6928, %r6929, 18;
	mov.b64 	%rd8830, {%r6933, %r6932};
	xor.b64  	%rd8831, %rd8830, %rd8829;
	shf.l.wrap.b32 	%r6934, %r6928, %r6929, 23;
	shf.l.wrap.b32 	%r6935, %r6929, %r6928, 23;
	mov.b64 	%rd8832, {%r6935, %r6934};
	xor.b64  	%rd8833, %rd8831, %rd8832;
	xor.b64  	%rd8834, %rd13032, %rd13033;
	and.b64  	%rd8835, %rd8817, %rd8834;
	xor.b64  	%rd8836, %rd8835, %rd13032;
	add.s64 	%rd8837, %rd8790, %rd13031;
	add.s64 	%rd8838, %rd8837, %rd13020;
	add.s64 	%rd8839, %rd8838, %rd8836;
	add.s64 	%rd8840, %rd8839, %rd8833;
	add.s64 	%rd8841, %rd8840, %rd13035;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6936,%dummy}, %rd8828;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6937}, %rd8828;
	}
	shf.r.wrap.b32 	%r6938, %r6937, %r6936, 28;
	shf.r.wrap.b32 	%r6939, %r6936, %r6937, 28;
	mov.b64 	%rd8842, {%r6939, %r6938};
	shf.l.wrap.b32 	%r6940, %r6936, %r6937, 30;
	shf.l.wrap.b32 	%r6941, %r6937, %r6936, 30;
	mov.b64 	%rd8843, {%r6941, %r6940};
	xor.b64  	%rd8844, %rd8843, %rd8842;
	shf.l.wrap.b32 	%r6942, %r6936, %r6937, 25;
	shf.l.wrap.b32 	%r6943, %r6937, %r6936, 25;
	mov.b64 	%rd8845, {%r6943, %r6942};
	xor.b64  	%rd8846, %rd8844, %rd8845;
	xor.b64  	%rd8847, %rd8828, %rd13036;
	xor.b64  	%rd8848, %rd8828, %rd13037;
	and.b64  	%rd8849, %rd8848, %rd8847;
	xor.b64  	%rd8850, %rd8849, %rd8828;
	add.s64 	%rd8851, %rd8840, %rd8850;
	add.s64 	%rd8852, %rd8851, %rd8846;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6944,%dummy}, %rd8841;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6945}, %rd8841;
	}
	shf.r.wrap.b32 	%r6946, %r6945, %r6944, 14;
	shf.r.wrap.b32 	%r6947, %r6944, %r6945, 14;
	mov.b64 	%rd8853, {%r6947, %r6946};
	shf.r.wrap.b32 	%r6948, %r6945, %r6944, 18;
	shf.r.wrap.b32 	%r6949, %r6944, %r6945, 18;
	mov.b64 	%rd8854, {%r6949, %r6948};
	xor.b64  	%rd8855, %rd8854, %rd8853;
	shf.l.wrap.b32 	%r6950, %r6944, %r6945, 23;
	shf.l.wrap.b32 	%r6951, %r6945, %r6944, 23;
	mov.b64 	%rd8856, {%r6951, %r6950};
	xor.b64  	%rd8857, %rd8855, %rd8856;
	xor.b64  	%rd8858, %rd8817, %rd13033;
	and.b64  	%rd8859, %rd8841, %rd8858;
	xor.b64  	%rd8860, %rd8859, %rd13033;
	add.s64 	%rd8861, %rd8791, %rd13032;
	add.s64 	%rd8862, %rd8861, %rd13019;
	add.s64 	%rd8863, %rd8862, %rd8860;
	add.s64 	%rd8864, %rd8863, %rd8857;
	add.s64 	%rd8865, %rd8864, %rd13036;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6952,%dummy}, %rd8852;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6953}, %rd8852;
	}
	shf.r.wrap.b32 	%r6954, %r6953, %r6952, 28;
	shf.r.wrap.b32 	%r6955, %r6952, %r6953, 28;
	mov.b64 	%rd8866, {%r6955, %r6954};
	shf.l.wrap.b32 	%r6956, %r6952, %r6953, 30;
	shf.l.wrap.b32 	%r6957, %r6953, %r6952, 30;
	mov.b64 	%rd8867, {%r6957, %r6956};
	xor.b64  	%rd8868, %rd8867, %rd8866;
	shf.l.wrap.b32 	%r6958, %r6952, %r6953, 25;
	shf.l.wrap.b32 	%r6959, %r6953, %r6952, 25;
	mov.b64 	%rd8869, {%r6959, %r6958};
	xor.b64  	%rd8870, %rd8868, %rd8869;
	xor.b64  	%rd8871, %rd8852, %rd13037;
	xor.b64  	%rd8872, %rd8852, %rd8828;
	and.b64  	%rd8873, %rd8872, %rd8871;
	xor.b64  	%rd8874, %rd8873, %rd8852;
	add.s64 	%rd8875, %rd8864, %rd8874;
	add.s64 	%rd8876, %rd8875, %rd8870;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6960,%dummy}, %rd8865;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6961}, %rd8865;
	}
	shf.r.wrap.b32 	%r6962, %r6961, %r6960, 14;
	shf.r.wrap.b32 	%r6963, %r6960, %r6961, 14;
	mov.b64 	%rd8877, {%r6963, %r6962};
	shf.r.wrap.b32 	%r6964, %r6961, %r6960, 18;
	shf.r.wrap.b32 	%r6965, %r6960, %r6961, 18;
	mov.b64 	%rd8878, {%r6965, %r6964};
	xor.b64  	%rd8879, %rd8878, %rd8877;
	shf.l.wrap.b32 	%r6966, %r6960, %r6961, 23;
	shf.l.wrap.b32 	%r6967, %r6961, %r6960, 23;
	mov.b64 	%rd8880, {%r6967, %r6966};
	xor.b64  	%rd8881, %rd8879, %rd8880;
	xor.b64  	%rd8882, %rd8841, %rd8817;
	and.b64  	%rd8883, %rd8865, %rd8882;
	xor.b64  	%rd8884, %rd8883, %rd8817;
	add.s64 	%rd8885, %rd8792, %rd13033;
	add.s64 	%rd8886, %rd8885, %rd13018;
	add.s64 	%rd8887, %rd8886, %rd8884;
	add.s64 	%rd8888, %rd8887, %rd8881;
	add.s64 	%rd8889, %rd8888, %rd13037;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6968,%dummy}, %rd8876;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6969}, %rd8876;
	}
	shf.r.wrap.b32 	%r6970, %r6969, %r6968, 28;
	shf.r.wrap.b32 	%r6971, %r6968, %r6969, 28;
	mov.b64 	%rd8890, {%r6971, %r6970};
	shf.l.wrap.b32 	%r6972, %r6968, %r6969, 30;
	shf.l.wrap.b32 	%r6973, %r6969, %r6968, 30;
	mov.b64 	%rd8891, {%r6973, %r6972};
	xor.b64  	%rd8892, %rd8891, %rd8890;
	shf.l.wrap.b32 	%r6974, %r6968, %r6969, 25;
	shf.l.wrap.b32 	%r6975, %r6969, %r6968, 25;
	mov.b64 	%rd8893, {%r6975, %r6974};
	xor.b64  	%rd8894, %rd8892, %rd8893;
	xor.b64  	%rd8895, %rd8876, %rd8828;
	xor.b64  	%rd8896, %rd8876, %rd8852;
	and.b64  	%rd8897, %rd8896, %rd8895;
	xor.b64  	%rd8898, %rd8897, %rd8876;
	add.s64 	%rd8899, %rd8888, %rd8898;
	add.s64 	%rd8900, %rd8899, %rd8894;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6976,%dummy}, %rd8889;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6977}, %rd8889;
	}
	shf.r.wrap.b32 	%r6978, %r6977, %r6976, 14;
	shf.r.wrap.b32 	%r6979, %r6976, %r6977, 14;
	mov.b64 	%rd8901, {%r6979, %r6978};
	shf.r.wrap.b32 	%r6980, %r6977, %r6976, 18;
	shf.r.wrap.b32 	%r6981, %r6976, %r6977, 18;
	mov.b64 	%rd8902, {%r6981, %r6980};
	xor.b64  	%rd8903, %rd8902, %rd8901;
	shf.l.wrap.b32 	%r6982, %r6976, %r6977, 23;
	shf.l.wrap.b32 	%r6983, %r6977, %r6976, 23;
	mov.b64 	%rd8904, {%r6983, %r6982};
	xor.b64  	%rd8905, %rd8903, %rd8904;
	xor.b64  	%rd8906, %rd8865, %rd8841;
	and.b64  	%rd8907, %rd8889, %rd8906;
	xor.b64  	%rd8908, %rd8907, %rd8841;
	add.s64 	%rd8909, %rd8817, %rd8793;
	add.s64 	%rd8910, %rd8909, %rd13017;
	add.s64 	%rd8911, %rd8910, %rd8908;
	add.s64 	%rd8912, %rd8911, %rd8905;
	add.s64 	%rd8913, %rd8912, %rd8828;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6984,%dummy}, %rd8900;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6985}, %rd8900;
	}
	shf.r.wrap.b32 	%r6986, %r6985, %r6984, 28;
	shf.r.wrap.b32 	%r6987, %r6984, %r6985, 28;
	mov.b64 	%rd8914, {%r6987, %r6986};
	shf.l.wrap.b32 	%r6988, %r6984, %r6985, 30;
	shf.l.wrap.b32 	%r6989, %r6985, %r6984, 30;
	mov.b64 	%rd8915, {%r6989, %r6988};
	xor.b64  	%rd8916, %rd8915, %rd8914;
	shf.l.wrap.b32 	%r6990, %r6984, %r6985, 25;
	shf.l.wrap.b32 	%r6991, %r6985, %r6984, 25;
	mov.b64 	%rd8917, {%r6991, %r6990};
	xor.b64  	%rd8918, %rd8916, %rd8917;
	xor.b64  	%rd8919, %rd8900, %rd8852;
	xor.b64  	%rd8920, %rd8900, %rd8876;
	and.b64  	%rd8921, %rd8920, %rd8919;
	xor.b64  	%rd8922, %rd8921, %rd8900;
	add.s64 	%rd8923, %rd8912, %rd8922;
	add.s64 	%rd8924, %rd8923, %rd8918;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6992,%dummy}, %rd8913;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6993}, %rd8913;
	}
	shf.r.wrap.b32 	%r6994, %r6993, %r6992, 14;
	shf.r.wrap.b32 	%r6995, %r6992, %r6993, 14;
	mov.b64 	%rd8925, {%r6995, %r6994};
	shf.r.wrap.b32 	%r6996, %r6993, %r6992, 18;
	shf.r.wrap.b32 	%r6997, %r6992, %r6993, 18;
	mov.b64 	%rd8926, {%r6997, %r6996};
	xor.b64  	%rd8927, %rd8926, %rd8925;
	shf.l.wrap.b32 	%r6998, %r6992, %r6993, 23;
	shf.l.wrap.b32 	%r6999, %r6993, %r6992, 23;
	mov.b64 	%rd8928, {%r6999, %r6998};
	xor.b64  	%rd8929, %rd8927, %rd8928;
	xor.b64  	%rd8930, %rd8889, %rd8865;
	and.b64  	%rd8931, %rd8913, %rd8930;
	xor.b64  	%rd8932, %rd8931, %rd8865;
	add.s64 	%rd8933, %rd8841, %rd8794;
	add.s64 	%rd8934, %rd8933, %rd13016;
	add.s64 	%rd8935, %rd8934, %rd8932;
	add.s64 	%rd8936, %rd8935, %rd8929;
	add.s64 	%rd8937, %rd8936, %rd8852;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7000,%dummy}, %rd8924;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7001}, %rd8924;
	}
	shf.r.wrap.b32 	%r7002, %r7001, %r7000, 28;
	shf.r.wrap.b32 	%r7003, %r7000, %r7001, 28;
	mov.b64 	%rd8938, {%r7003, %r7002};
	shf.l.wrap.b32 	%r7004, %r7000, %r7001, 30;
	shf.l.wrap.b32 	%r7005, %r7001, %r7000, 30;
	mov.b64 	%rd8939, {%r7005, %r7004};
	xor.b64  	%rd8940, %rd8939, %rd8938;
	shf.l.wrap.b32 	%r7006, %r7000, %r7001, 25;
	shf.l.wrap.b32 	%r7007, %r7001, %r7000, 25;
	mov.b64 	%rd8941, {%r7007, %r7006};
	xor.b64  	%rd8942, %rd8940, %rd8941;
	xor.b64  	%rd8943, %rd8924, %rd8876;
	xor.b64  	%rd8944, %rd8924, %rd8900;
	and.b64  	%rd8945, %rd8944, %rd8943;
	xor.b64  	%rd8946, %rd8945, %rd8924;
	add.s64 	%rd8947, %rd8936, %rd8946;
	add.s64 	%rd8948, %rd8947, %rd8942;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7008,%dummy}, %rd8937;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7009}, %rd8937;
	}
	shf.r.wrap.b32 	%r7010, %r7009, %r7008, 14;
	shf.r.wrap.b32 	%r7011, %r7008, %r7009, 14;
	mov.b64 	%rd8949, {%r7011, %r7010};
	shf.r.wrap.b32 	%r7012, %r7009, %r7008, 18;
	shf.r.wrap.b32 	%r7013, %r7008, %r7009, 18;
	mov.b64 	%rd8950, {%r7013, %r7012};
	xor.b64  	%rd8951, %rd8950, %rd8949;
	shf.l.wrap.b32 	%r7014, %r7008, %r7009, 23;
	shf.l.wrap.b32 	%r7015, %r7009, %r7008, 23;
	mov.b64 	%rd8952, {%r7015, %r7014};
	xor.b64  	%rd8953, %rd8951, %rd8952;
	xor.b64  	%rd8954, %rd8913, %rd8889;
	and.b64  	%rd8955, %rd8937, %rd8954;
	xor.b64  	%rd8956, %rd8955, %rd8889;
	add.s64 	%rd8957, %rd8865, %rd8795;
	add.s64 	%rd8958, %rd8957, %rd13015;
	add.s64 	%rd8959, %rd8958, %rd8956;
	add.s64 	%rd8960, %rd8959, %rd8953;
	add.s64 	%rd8961, %rd8960, %rd8876;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7016,%dummy}, %rd8948;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7017}, %rd8948;
	}
	shf.r.wrap.b32 	%r7018, %r7017, %r7016, 28;
	shf.r.wrap.b32 	%r7019, %r7016, %r7017, 28;
	mov.b64 	%rd8962, {%r7019, %r7018};
	shf.l.wrap.b32 	%r7020, %r7016, %r7017, 30;
	shf.l.wrap.b32 	%r7021, %r7017, %r7016, 30;
	mov.b64 	%rd8963, {%r7021, %r7020};
	xor.b64  	%rd8964, %rd8963, %rd8962;
	shf.l.wrap.b32 	%r7022, %r7016, %r7017, 25;
	shf.l.wrap.b32 	%r7023, %r7017, %r7016, 25;
	mov.b64 	%rd8965, {%r7023, %r7022};
	xor.b64  	%rd8966, %rd8964, %rd8965;
	xor.b64  	%rd8967, %rd8948, %rd8900;
	xor.b64  	%rd8968, %rd8948, %rd8924;
	and.b64  	%rd8969, %rd8968, %rd8967;
	xor.b64  	%rd8970, %rd8969, %rd8948;
	add.s64 	%rd8971, %rd8960, %rd8970;
	add.s64 	%rd8972, %rd8971, %rd8966;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7024,%dummy}, %rd8961;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7025}, %rd8961;
	}
	shf.r.wrap.b32 	%r7026, %r7025, %r7024, 14;
	shf.r.wrap.b32 	%r7027, %r7024, %r7025, 14;
	mov.b64 	%rd8973, {%r7027, %r7026};
	shf.r.wrap.b32 	%r7028, %r7025, %r7024, 18;
	shf.r.wrap.b32 	%r7029, %r7024, %r7025, 18;
	mov.b64 	%rd8974, {%r7029, %r7028};
	xor.b64  	%rd8975, %rd8974, %rd8973;
	shf.l.wrap.b32 	%r7030, %r7024, %r7025, 23;
	shf.l.wrap.b32 	%r7031, %r7025, %r7024, 23;
	mov.b64 	%rd8976, {%r7031, %r7030};
	xor.b64  	%rd8977, %rd8975, %rd8976;
	xor.b64  	%rd8978, %rd8937, %rd8913;
	and.b64  	%rd8979, %rd8961, %rd8978;
	xor.b64  	%rd8980, %rd8979, %rd8913;
	add.s64 	%rd8981, %rd8889, %rd8796;
	add.s64 	%rd8982, %rd8981, %rd13014;
	add.s64 	%rd8983, %rd8982, %rd8980;
	add.s64 	%rd8984, %rd8983, %rd8977;
	add.s64 	%rd8985, %rd8984, %rd8900;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7032,%dummy}, %rd8972;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7033}, %rd8972;
	}
	shf.r.wrap.b32 	%r7034, %r7033, %r7032, 28;
	shf.r.wrap.b32 	%r7035, %r7032, %r7033, 28;
	mov.b64 	%rd8986, {%r7035, %r7034};
	shf.l.wrap.b32 	%r7036, %r7032, %r7033, 30;
	shf.l.wrap.b32 	%r7037, %r7033, %r7032, 30;
	mov.b64 	%rd8987, {%r7037, %r7036};
	xor.b64  	%rd8988, %rd8987, %rd8986;
	shf.l.wrap.b32 	%r7038, %r7032, %r7033, 25;
	shf.l.wrap.b32 	%r7039, %r7033, %r7032, 25;
	mov.b64 	%rd8989, {%r7039, %r7038};
	xor.b64  	%rd8990, %rd8988, %rd8989;
	xor.b64  	%rd8991, %rd8972, %rd8924;
	xor.b64  	%rd8992, %rd8972, %rd8948;
	and.b64  	%rd8993, %rd8992, %rd8991;
	xor.b64  	%rd8994, %rd8993, %rd8972;
	add.s64 	%rd8995, %rd8984, %rd8994;
	add.s64 	%rd8996, %rd8995, %rd8990;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7040,%dummy}, %rd8985;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7041}, %rd8985;
	}
	shf.r.wrap.b32 	%r7042, %r7041, %r7040, 14;
	shf.r.wrap.b32 	%r7043, %r7040, %r7041, 14;
	mov.b64 	%rd8997, {%r7043, %r7042};
	shf.r.wrap.b32 	%r7044, %r7041, %r7040, 18;
	shf.r.wrap.b32 	%r7045, %r7040, %r7041, 18;
	mov.b64 	%rd8998, {%r7045, %r7044};
	xor.b64  	%rd8999, %rd8998, %rd8997;
	shf.l.wrap.b32 	%r7046, %r7040, %r7041, 23;
	shf.l.wrap.b32 	%r7047, %r7041, %r7040, 23;
	mov.b64 	%rd9000, {%r7047, %r7046};
	xor.b64  	%rd9001, %rd8999, %rd9000;
	xor.b64  	%rd9002, %rd8961, %rd8937;
	and.b64  	%rd9003, %rd8985, %rd9002;
	xor.b64  	%rd9004, %rd9003, %rd8937;
	add.s64 	%rd9005, %rd8913, %rd8797;
	add.s64 	%rd9006, %rd9005, %rd13013;
	add.s64 	%rd9007, %rd9006, %rd9004;
	add.s64 	%rd9008, %rd9007, %rd9001;
	add.s64 	%rd9009, %rd9008, %rd8924;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7048,%dummy}, %rd8996;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7049}, %rd8996;
	}
	shf.r.wrap.b32 	%r7050, %r7049, %r7048, 28;
	shf.r.wrap.b32 	%r7051, %r7048, %r7049, 28;
	mov.b64 	%rd9010, {%r7051, %r7050};
	shf.l.wrap.b32 	%r7052, %r7048, %r7049, 30;
	shf.l.wrap.b32 	%r7053, %r7049, %r7048, 30;
	mov.b64 	%rd9011, {%r7053, %r7052};
	xor.b64  	%rd9012, %rd9011, %rd9010;
	shf.l.wrap.b32 	%r7054, %r7048, %r7049, 25;
	shf.l.wrap.b32 	%r7055, %r7049, %r7048, 25;
	mov.b64 	%rd9013, {%r7055, %r7054};
	xor.b64  	%rd9014, %rd9012, %rd9013;
	xor.b64  	%rd9015, %rd8996, %rd8948;
	xor.b64  	%rd9016, %rd8996, %rd8972;
	and.b64  	%rd9017, %rd9016, %rd9015;
	xor.b64  	%rd9018, %rd9017, %rd8996;
	add.s64 	%rd9019, %rd9008, %rd9018;
	add.s64 	%rd9020, %rd9019, %rd9014;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7056,%dummy}, %rd9009;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7057}, %rd9009;
	}
	shf.r.wrap.b32 	%r7058, %r7057, %r7056, 14;
	shf.r.wrap.b32 	%r7059, %r7056, %r7057, 14;
	mov.b64 	%rd9021, {%r7059, %r7058};
	shf.r.wrap.b32 	%r7060, %r7057, %r7056, 18;
	shf.r.wrap.b32 	%r7061, %r7056, %r7057, 18;
	mov.b64 	%rd9022, {%r7061, %r7060};
	xor.b64  	%rd9023, %rd9022, %rd9021;
	shf.l.wrap.b32 	%r7062, %r7056, %r7057, 23;
	shf.l.wrap.b32 	%r7063, %r7057, %r7056, 23;
	mov.b64 	%rd9024, {%r7063, %r7062};
	xor.b64  	%rd9025, %rd9023, %rd9024;
	xor.b64  	%rd9026, %rd8985, %rd8961;
	and.b64  	%rd9027, %rd9009, %rd9026;
	xor.b64  	%rd9028, %rd9027, %rd8961;
	add.s64 	%rd9029, %rd8937, %rd8798;
	add.s64 	%rd9030, %rd9029, %rd13012;
	add.s64 	%rd9031, %rd9030, %rd9028;
	add.s64 	%rd9032, %rd9031, %rd9025;
	add.s64 	%rd9033, %rd9032, %rd8948;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7064,%dummy}, %rd9020;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7065}, %rd9020;
	}
	shf.r.wrap.b32 	%r7066, %r7065, %r7064, 28;
	shf.r.wrap.b32 	%r7067, %r7064, %r7065, 28;
	mov.b64 	%rd9034, {%r7067, %r7066};
	shf.l.wrap.b32 	%r7068, %r7064, %r7065, 30;
	shf.l.wrap.b32 	%r7069, %r7065, %r7064, 30;
	mov.b64 	%rd9035, {%r7069, %r7068};
	xor.b64  	%rd9036, %rd9035, %rd9034;
	shf.l.wrap.b32 	%r7070, %r7064, %r7065, 25;
	shf.l.wrap.b32 	%r7071, %r7065, %r7064, 25;
	mov.b64 	%rd9037, {%r7071, %r7070};
	xor.b64  	%rd9038, %rd9036, %rd9037;
	xor.b64  	%rd9039, %rd9020, %rd8972;
	xor.b64  	%rd9040, %rd9020, %rd8996;
	and.b64  	%rd9041, %rd9040, %rd9039;
	xor.b64  	%rd9042, %rd9041, %rd9020;
	add.s64 	%rd9043, %rd9032, %rd9042;
	add.s64 	%rd9044, %rd9043, %rd9038;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7072,%dummy}, %rd9033;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7073}, %rd9033;
	}
	shf.r.wrap.b32 	%r7074, %r7073, %r7072, 14;
	shf.r.wrap.b32 	%r7075, %r7072, %r7073, 14;
	mov.b64 	%rd9045, {%r7075, %r7074};
	shf.r.wrap.b32 	%r7076, %r7073, %r7072, 18;
	shf.r.wrap.b32 	%r7077, %r7072, %r7073, 18;
	mov.b64 	%rd9046, {%r7077, %r7076};
	xor.b64  	%rd9047, %rd9046, %rd9045;
	shf.l.wrap.b32 	%r7078, %r7072, %r7073, 23;
	shf.l.wrap.b32 	%r7079, %r7073, %r7072, 23;
	mov.b64 	%rd9048, {%r7079, %r7078};
	xor.b64  	%rd9049, %rd9047, %rd9048;
	xor.b64  	%rd9050, %rd9009, %rd8985;
	and.b64  	%rd9051, %rd9033, %rd9050;
	xor.b64  	%rd9052, %rd9051, %rd8985;
	add.s64 	%rd9053, %rd8961, %rd8799;
	add.s64 	%rd9054, %rd9053, %rd13011;
	add.s64 	%rd9055, %rd9054, %rd9052;
	add.s64 	%rd9056, %rd9055, %rd9049;
	add.s64 	%rd9057, %rd9056, %rd8972;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7080,%dummy}, %rd9044;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7081}, %rd9044;
	}
	shf.r.wrap.b32 	%r7082, %r7081, %r7080, 28;
	shf.r.wrap.b32 	%r7083, %r7080, %r7081, 28;
	mov.b64 	%rd9058, {%r7083, %r7082};
	shf.l.wrap.b32 	%r7084, %r7080, %r7081, 30;
	shf.l.wrap.b32 	%r7085, %r7081, %r7080, 30;
	mov.b64 	%rd9059, {%r7085, %r7084};
	xor.b64  	%rd9060, %rd9059, %rd9058;
	shf.l.wrap.b32 	%r7086, %r7080, %r7081, 25;
	shf.l.wrap.b32 	%r7087, %r7081, %r7080, 25;
	mov.b64 	%rd9061, {%r7087, %r7086};
	xor.b64  	%rd9062, %rd9060, %rd9061;
	xor.b64  	%rd9063, %rd9044, %rd8996;
	xor.b64  	%rd9064, %rd9044, %rd9020;
	and.b64  	%rd9065, %rd9064, %rd9063;
	xor.b64  	%rd9066, %rd9065, %rd9044;
	add.s64 	%rd9067, %rd9056, %rd9066;
	add.s64 	%rd9068, %rd9067, %rd9062;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7088,%dummy}, %rd9057;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7089}, %rd9057;
	}
	shf.r.wrap.b32 	%r7090, %r7089, %r7088, 14;
	shf.r.wrap.b32 	%r7091, %r7088, %r7089, 14;
	mov.b64 	%rd9069, {%r7091, %r7090};
	shf.r.wrap.b32 	%r7092, %r7089, %r7088, 18;
	shf.r.wrap.b32 	%r7093, %r7088, %r7089, 18;
	mov.b64 	%rd9070, {%r7093, %r7092};
	xor.b64  	%rd9071, %rd9070, %rd9069;
	shf.l.wrap.b32 	%r7094, %r7088, %r7089, 23;
	shf.l.wrap.b32 	%r7095, %r7089, %r7088, 23;
	mov.b64 	%rd9072, {%r7095, %r7094};
	xor.b64  	%rd9073, %rd9071, %rd9072;
	xor.b64  	%rd9074, %rd9033, %rd9009;
	and.b64  	%rd9075, %rd9057, %rd9074;
	xor.b64  	%rd9076, %rd9075, %rd9009;
	add.s64 	%rd9077, %rd8985, %rd8800;
	add.s64 	%rd9078, %rd9077, %rd13010;
	add.s64 	%rd9079, %rd9078, %rd9076;
	add.s64 	%rd9080, %rd9079, %rd9073;
	add.s64 	%rd9081, %rd9080, %rd8996;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7096,%dummy}, %rd9068;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7097}, %rd9068;
	}
	shf.r.wrap.b32 	%r7098, %r7097, %r7096, 28;
	shf.r.wrap.b32 	%r7099, %r7096, %r7097, 28;
	mov.b64 	%rd9082, {%r7099, %r7098};
	shf.l.wrap.b32 	%r7100, %r7096, %r7097, 30;
	shf.l.wrap.b32 	%r7101, %r7097, %r7096, 30;
	mov.b64 	%rd9083, {%r7101, %r7100};
	xor.b64  	%rd9084, %rd9083, %rd9082;
	shf.l.wrap.b32 	%r7102, %r7096, %r7097, 25;
	shf.l.wrap.b32 	%r7103, %r7097, %r7096, 25;
	mov.b64 	%rd9085, {%r7103, %r7102};
	xor.b64  	%rd9086, %rd9084, %rd9085;
	xor.b64  	%rd9087, %rd9068, %rd9020;
	xor.b64  	%rd9088, %rd9068, %rd9044;
	and.b64  	%rd9089, %rd9088, %rd9087;
	xor.b64  	%rd9090, %rd9089, %rd9068;
	add.s64 	%rd9091, %rd9080, %rd9090;
	add.s64 	%rd9092, %rd9091, %rd9086;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7104,%dummy}, %rd9081;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7105}, %rd9081;
	}
	shf.r.wrap.b32 	%r7106, %r7105, %r7104, 14;
	shf.r.wrap.b32 	%r7107, %r7104, %r7105, 14;
	mov.b64 	%rd9093, {%r7107, %r7106};
	shf.r.wrap.b32 	%r7108, %r7105, %r7104, 18;
	shf.r.wrap.b32 	%r7109, %r7104, %r7105, 18;
	mov.b64 	%rd9094, {%r7109, %r7108};
	xor.b64  	%rd9095, %rd9094, %rd9093;
	shf.l.wrap.b32 	%r7110, %r7104, %r7105, 23;
	shf.l.wrap.b32 	%r7111, %r7105, %r7104, 23;
	mov.b64 	%rd9096, {%r7111, %r7110};
	xor.b64  	%rd9097, %rd9095, %rd9096;
	xor.b64  	%rd9098, %rd9057, %rd9033;
	and.b64  	%rd9099, %rd9081, %rd9098;
	xor.b64  	%rd9100, %rd9099, %rd9033;
	add.s64 	%rd9101, %rd9009, %rd8801;
	add.s64 	%rd9102, %rd9101, %rd13009;
	add.s64 	%rd9103, %rd9102, %rd9100;
	add.s64 	%rd9104, %rd9103, %rd9097;
	add.s64 	%rd9105, %rd9104, %rd9020;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7112,%dummy}, %rd9092;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7113}, %rd9092;
	}
	shf.r.wrap.b32 	%r7114, %r7113, %r7112, 28;
	shf.r.wrap.b32 	%r7115, %r7112, %r7113, 28;
	mov.b64 	%rd9106, {%r7115, %r7114};
	shf.l.wrap.b32 	%r7116, %r7112, %r7113, 30;
	shf.l.wrap.b32 	%r7117, %r7113, %r7112, 30;
	mov.b64 	%rd9107, {%r7117, %r7116};
	xor.b64  	%rd9108, %rd9107, %rd9106;
	shf.l.wrap.b32 	%r7118, %r7112, %r7113, 25;
	shf.l.wrap.b32 	%r7119, %r7113, %r7112, 25;
	mov.b64 	%rd9109, {%r7119, %r7118};
	xor.b64  	%rd9110, %rd9108, %rd9109;
	xor.b64  	%rd9111, %rd9092, %rd9044;
	xor.b64  	%rd9112, %rd9092, %rd9068;
	and.b64  	%rd9113, %rd9112, %rd9111;
	xor.b64  	%rd9114, %rd9113, %rd9092;
	add.s64 	%rd9115, %rd9104, %rd9114;
	add.s64 	%rd9116, %rd9115, %rd9110;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7120,%dummy}, %rd9105;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7121}, %rd9105;
	}
	shf.r.wrap.b32 	%r7122, %r7121, %r7120, 14;
	shf.r.wrap.b32 	%r7123, %r7120, %r7121, 14;
	mov.b64 	%rd9117, {%r7123, %r7122};
	shf.r.wrap.b32 	%r7124, %r7121, %r7120, 18;
	shf.r.wrap.b32 	%r7125, %r7120, %r7121, 18;
	mov.b64 	%rd9118, {%r7125, %r7124};
	xor.b64  	%rd9119, %rd9118, %rd9117;
	shf.l.wrap.b32 	%r7126, %r7120, %r7121, 23;
	shf.l.wrap.b32 	%r7127, %r7121, %r7120, 23;
	mov.b64 	%rd9120, {%r7127, %r7126};
	xor.b64  	%rd9121, %rd9119, %rd9120;
	xor.b64  	%rd9122, %rd9081, %rd9057;
	and.b64  	%rd9123, %rd9105, %rd9122;
	xor.b64  	%rd9124, %rd9123, %rd9057;
	add.s64 	%rd9125, %rd9033, %rd8802;
	add.s64 	%rd9126, %rd9125, %rd13008;
	add.s64 	%rd9127, %rd9126, %rd9124;
	add.s64 	%rd9128, %rd9127, %rd9121;
	add.s64 	%rd9129, %rd9128, %rd9044;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7128,%dummy}, %rd9116;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7129}, %rd9116;
	}
	shf.r.wrap.b32 	%r7130, %r7129, %r7128, 28;
	shf.r.wrap.b32 	%r7131, %r7128, %r7129, 28;
	mov.b64 	%rd9130, {%r7131, %r7130};
	shf.l.wrap.b32 	%r7132, %r7128, %r7129, 30;
	shf.l.wrap.b32 	%r7133, %r7129, %r7128, 30;
	mov.b64 	%rd9131, {%r7133, %r7132};
	xor.b64  	%rd9132, %rd9131, %rd9130;
	shf.l.wrap.b32 	%r7134, %r7128, %r7129, 25;
	shf.l.wrap.b32 	%r7135, %r7129, %r7128, 25;
	mov.b64 	%rd9133, {%r7135, %r7134};
	xor.b64  	%rd9134, %rd9132, %rd9133;
	xor.b64  	%rd9135, %rd9116, %rd9068;
	xor.b64  	%rd9136, %rd9116, %rd9092;
	and.b64  	%rd9137, %rd9136, %rd9135;
	xor.b64  	%rd9138, %rd9137, %rd9116;
	add.s64 	%rd9139, %rd9128, %rd9138;
	add.s64 	%rd9140, %rd9139, %rd9134;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7136,%dummy}, %rd9129;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7137}, %rd9129;
	}
	shf.r.wrap.b32 	%r7138, %r7137, %r7136, 14;
	shf.r.wrap.b32 	%r7139, %r7136, %r7137, 14;
	mov.b64 	%rd9141, {%r7139, %r7138};
	shf.r.wrap.b32 	%r7140, %r7137, %r7136, 18;
	shf.r.wrap.b32 	%r7141, %r7136, %r7137, 18;
	mov.b64 	%rd9142, {%r7141, %r7140};
	xor.b64  	%rd9143, %rd9142, %rd9141;
	shf.l.wrap.b32 	%r7142, %r7136, %r7137, 23;
	shf.l.wrap.b32 	%r7143, %r7137, %r7136, 23;
	mov.b64 	%rd9144, {%r7143, %r7142};
	xor.b64  	%rd9145, %rd9143, %rd9144;
	xor.b64  	%rd9146, %rd9105, %rd9081;
	and.b64  	%rd9147, %rd9129, %rd9146;
	xor.b64  	%rd9148, %rd9147, %rd9081;
	add.s64 	%rd9149, %rd9057, %rd8803;
	add.s64 	%rd9150, %rd9149, %rd13007;
	add.s64 	%rd9151, %rd9150, %rd9148;
	add.s64 	%rd9152, %rd9151, %rd9145;
	add.s64 	%rd9153, %rd9152, %rd9068;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7144,%dummy}, %rd9140;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7145}, %rd9140;
	}
	shf.r.wrap.b32 	%r7146, %r7145, %r7144, 28;
	shf.r.wrap.b32 	%r7147, %r7144, %r7145, 28;
	mov.b64 	%rd9154, {%r7147, %r7146};
	shf.l.wrap.b32 	%r7148, %r7144, %r7145, 30;
	shf.l.wrap.b32 	%r7149, %r7145, %r7144, 30;
	mov.b64 	%rd9155, {%r7149, %r7148};
	xor.b64  	%rd9156, %rd9155, %rd9154;
	shf.l.wrap.b32 	%r7150, %r7144, %r7145, 25;
	shf.l.wrap.b32 	%r7151, %r7145, %r7144, 25;
	mov.b64 	%rd9157, {%r7151, %r7150};
	xor.b64  	%rd9158, %rd9156, %rd9157;
	xor.b64  	%rd9159, %rd9140, %rd9092;
	xor.b64  	%rd9160, %rd9140, %rd9116;
	and.b64  	%rd9161, %rd9160, %rd9159;
	xor.b64  	%rd9162, %rd9161, %rd9140;
	add.s64 	%rd9163, %rd9152, %rd9162;
	add.s64 	%rd9164, %rd9163, %rd9158;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7152,%dummy}, %rd9153;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7153}, %rd9153;
	}
	shf.r.wrap.b32 	%r7154, %r7153, %r7152, 14;
	shf.r.wrap.b32 	%r7155, %r7152, %r7153, 14;
	mov.b64 	%rd9165, {%r7155, %r7154};
	shf.r.wrap.b32 	%r7156, %r7153, %r7152, 18;
	shf.r.wrap.b32 	%r7157, %r7152, %r7153, 18;
	mov.b64 	%rd9166, {%r7157, %r7156};
	xor.b64  	%rd9167, %rd9166, %rd9165;
	shf.l.wrap.b32 	%r7158, %r7152, %r7153, 23;
	shf.l.wrap.b32 	%r7159, %r7153, %r7152, 23;
	mov.b64 	%rd9168, {%r7159, %r7158};
	xor.b64  	%rd9169, %rd9167, %rd9168;
	xor.b64  	%rd9170, %rd9129, %rd9105;
	and.b64  	%rd9171, %rd9153, %rd9170;
	xor.b64  	%rd9172, %rd9171, %rd9105;
	add.s64 	%rd9173, %rd9081, %rd8804;
	add.s64 	%rd9174, %rd9173, %rd13006;
	add.s64 	%rd9175, %rd9174, %rd9172;
	add.s64 	%rd9176, %rd9175, %rd9169;
	add.s64 	%rd9177, %rd9176, %rd9092;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7160,%dummy}, %rd9164;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7161}, %rd9164;
	}
	shf.r.wrap.b32 	%r7162, %r7161, %r7160, 28;
	shf.r.wrap.b32 	%r7163, %r7160, %r7161, 28;
	mov.b64 	%rd9178, {%r7163, %r7162};
	shf.l.wrap.b32 	%r7164, %r7160, %r7161, 30;
	shf.l.wrap.b32 	%r7165, %r7161, %r7160, 30;
	mov.b64 	%rd9179, {%r7165, %r7164};
	xor.b64  	%rd9180, %rd9179, %rd9178;
	shf.l.wrap.b32 	%r7166, %r7160, %r7161, 25;
	shf.l.wrap.b32 	%r7167, %r7161, %r7160, 25;
	mov.b64 	%rd9181, {%r7167, %r7166};
	xor.b64  	%rd9182, %rd9180, %rd9181;
	xor.b64  	%rd9183, %rd9164, %rd9116;
	xor.b64  	%rd9184, %rd9164, %rd9140;
	and.b64  	%rd9185, %rd9184, %rd9183;
	xor.b64  	%rd9186, %rd9185, %rd9164;
	add.s64 	%rd9187, %rd9176, %rd9186;
	add.s64 	%rd9188, %rd9187, %rd9182;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7168,%dummy}, %rd8803;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7169}, %rd8803;
	}
	shf.r.wrap.b32 	%r7170, %r7169, %r7168, 19;
	shf.r.wrap.b32 	%r7171, %r7168, %r7169, 19;
	mov.b64 	%rd9189, {%r7171, %r7170};
	shf.l.wrap.b32 	%r7172, %r7168, %r7169, 3;
	shf.l.wrap.b32 	%r7173, %r7169, %r7168, 3;
	mov.b64 	%rd9190, {%r7173, %r7172};
	shr.u64 	%rd9191, %rd8803, 6;
	xor.b64  	%rd9192, %rd9189, %rd9191;
	xor.b64  	%rd9193, %rd9192, %rd9190;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7174,%dummy}, %rd8790;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7175}, %rd8790;
	}
	shf.r.wrap.b32 	%r7176, %r7175, %r7174, 1;
	shf.r.wrap.b32 	%r7177, %r7174, %r7175, 1;
	mov.b64 	%rd9194, {%r7177, %r7176};
	shf.r.wrap.b32 	%r7178, %r7175, %r7174, 8;
	shf.r.wrap.b32 	%r7179, %r7174, %r7175, 8;
	mov.b64 	%rd9195, {%r7179, %r7178};
	shr.u64 	%rd9196, %rd8790, 7;
	xor.b64  	%rd9197, %rd9194, %rd9196;
	xor.b64  	%rd9198, %rd9197, %rd9195;
	add.s64 	%rd9199, %rd8798, %rd8789;
	add.s64 	%rd9200, %rd9199, %rd9193;
	add.s64 	%rd9201, %rd9200, %rd9198;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7180,%dummy}, %rd8804;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7181}, %rd8804;
	}
	shf.r.wrap.b32 	%r7182, %r7181, %r7180, 19;
	shf.r.wrap.b32 	%r7183, %r7180, %r7181, 19;
	mov.b64 	%rd9202, {%r7183, %r7182};
	shf.l.wrap.b32 	%r7184, %r7180, %r7181, 3;
	shf.l.wrap.b32 	%r7185, %r7181, %r7180, 3;
	mov.b64 	%rd9203, {%r7185, %r7184};
	shr.u64 	%rd9204, %rd8804, 6;
	xor.b64  	%rd9205, %rd9202, %rd9204;
	xor.b64  	%rd9206, %rd9205, %rd9203;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7186,%dummy}, %rd8791;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7187}, %rd8791;
	}
	shf.r.wrap.b32 	%r7188, %r7187, %r7186, 1;
	shf.r.wrap.b32 	%r7189, %r7186, %r7187, 1;
	mov.b64 	%rd9207, {%r7189, %r7188};
	shf.r.wrap.b32 	%r7190, %r7187, %r7186, 8;
	shf.r.wrap.b32 	%r7191, %r7186, %r7187, 8;
	mov.b64 	%rd9208, {%r7191, %r7190};
	shr.u64 	%rd9209, %rd8791, 7;
	xor.b64  	%rd9210, %rd9207, %rd9209;
	xor.b64  	%rd9211, %rd9210, %rd9208;
	add.s64 	%rd9212, %rd8799, %rd8790;
	add.s64 	%rd9213, %rd9212, %rd9206;
	add.s64 	%rd9214, %rd9213, %rd9211;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7192,%dummy}, %rd9201;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7193}, %rd9201;
	}
	shf.r.wrap.b32 	%r7194, %r7193, %r7192, 19;
	shf.r.wrap.b32 	%r7195, %r7192, %r7193, 19;
	mov.b64 	%rd9215, {%r7195, %r7194};
	shf.l.wrap.b32 	%r7196, %r7192, %r7193, 3;
	shf.l.wrap.b32 	%r7197, %r7193, %r7192, 3;
	mov.b64 	%rd9216, {%r7197, %r7196};
	shr.u64 	%rd9217, %rd9201, 6;
	xor.b64  	%rd9218, %rd9215, %rd9217;
	xor.b64  	%rd9219, %rd9218, %rd9216;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7198,%dummy}, %rd8792;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7199}, %rd8792;
	}
	shf.r.wrap.b32 	%r7200, %r7199, %r7198, 1;
	shf.r.wrap.b32 	%r7201, %r7198, %r7199, 1;
	mov.b64 	%rd9220, {%r7201, %r7200};
	shf.r.wrap.b32 	%r7202, %r7199, %r7198, 8;
	shf.r.wrap.b32 	%r7203, %r7198, %r7199, 8;
	mov.b64 	%rd9221, {%r7203, %r7202};
	shr.u64 	%rd9222, %rd8792, 7;
	xor.b64  	%rd9223, %rd9220, %rd9222;
	xor.b64  	%rd9224, %rd9223, %rd9221;
	add.s64 	%rd9225, %rd8800, %rd8791;
	add.s64 	%rd9226, %rd9225, %rd9219;
	add.s64 	%rd9227, %rd9226, %rd9224;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7204,%dummy}, %rd9214;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7205}, %rd9214;
	}
	shf.r.wrap.b32 	%r7206, %r7205, %r7204, 19;
	shf.r.wrap.b32 	%r7207, %r7204, %r7205, 19;
	mov.b64 	%rd9228, {%r7207, %r7206};
	shf.l.wrap.b32 	%r7208, %r7204, %r7205, 3;
	shf.l.wrap.b32 	%r7209, %r7205, %r7204, 3;
	mov.b64 	%rd9229, {%r7209, %r7208};
	shr.u64 	%rd9230, %rd9214, 6;
	xor.b64  	%rd9231, %rd9228, %rd9230;
	xor.b64  	%rd9232, %rd9231, %rd9229;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7210,%dummy}, %rd8793;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7211}, %rd8793;
	}
	shf.r.wrap.b32 	%r7212, %r7211, %r7210, 1;
	shf.r.wrap.b32 	%r7213, %r7210, %r7211, 1;
	mov.b64 	%rd9233, {%r7213, %r7212};
	shf.r.wrap.b32 	%r7214, %r7211, %r7210, 8;
	shf.r.wrap.b32 	%r7215, %r7210, %r7211, 8;
	mov.b64 	%rd9234, {%r7215, %r7214};
	shr.u64 	%rd9235, %rd8793, 7;
	xor.b64  	%rd9236, %rd9233, %rd9235;
	xor.b64  	%rd9237, %rd9236, %rd9234;
	add.s64 	%rd9238, %rd8801, %rd8792;
	add.s64 	%rd9239, %rd9238, %rd9232;
	add.s64 	%rd9240, %rd9239, %rd9237;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7216,%dummy}, %rd9227;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7217}, %rd9227;
	}
	shf.r.wrap.b32 	%r7218, %r7217, %r7216, 19;
	shf.r.wrap.b32 	%r7219, %r7216, %r7217, 19;
	mov.b64 	%rd9241, {%r7219, %r7218};
	shf.l.wrap.b32 	%r7220, %r7216, %r7217, 3;
	shf.l.wrap.b32 	%r7221, %r7217, %r7216, 3;
	mov.b64 	%rd9242, {%r7221, %r7220};
	shr.u64 	%rd9243, %rd9227, 6;
	xor.b64  	%rd9244, %rd9241, %rd9243;
	xor.b64  	%rd9245, %rd9244, %rd9242;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7222,%dummy}, %rd8794;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7223}, %rd8794;
	}
	shf.r.wrap.b32 	%r7224, %r7223, %r7222, 1;
	shf.r.wrap.b32 	%r7225, %r7222, %r7223, 1;
	mov.b64 	%rd9246, {%r7225, %r7224};
	shf.r.wrap.b32 	%r7226, %r7223, %r7222, 8;
	shf.r.wrap.b32 	%r7227, %r7222, %r7223, 8;
	mov.b64 	%rd9247, {%r7227, %r7226};
	shr.u64 	%rd9248, %rd8794, 7;
	xor.b64  	%rd9249, %rd9246, %rd9248;
	xor.b64  	%rd9250, %rd9249, %rd9247;
	add.s64 	%rd9251, %rd8802, %rd8793;
	add.s64 	%rd9252, %rd9251, %rd9245;
	add.s64 	%rd9253, %rd9252, %rd9250;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7228,%dummy}, %rd9240;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7229}, %rd9240;
	}
	shf.r.wrap.b32 	%r7230, %r7229, %r7228, 19;
	shf.r.wrap.b32 	%r7231, %r7228, %r7229, 19;
	mov.b64 	%rd9254, {%r7231, %r7230};
	shf.l.wrap.b32 	%r7232, %r7228, %r7229, 3;
	shf.l.wrap.b32 	%r7233, %r7229, %r7228, 3;
	mov.b64 	%rd9255, {%r7233, %r7232};
	shr.u64 	%rd9256, %rd9240, 6;
	xor.b64  	%rd9257, %rd9254, %rd9256;
	xor.b64  	%rd9258, %rd9257, %rd9255;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7234,%dummy}, %rd8795;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7235}, %rd8795;
	}
	shf.r.wrap.b32 	%r7236, %r7235, %r7234, 1;
	shf.r.wrap.b32 	%r7237, %r7234, %r7235, 1;
	mov.b64 	%rd9259, {%r7237, %r7236};
	shf.r.wrap.b32 	%r7238, %r7235, %r7234, 8;
	shf.r.wrap.b32 	%r7239, %r7234, %r7235, 8;
	mov.b64 	%rd9260, {%r7239, %r7238};
	shr.u64 	%rd9261, %rd8795, 7;
	xor.b64  	%rd9262, %rd9259, %rd9261;
	xor.b64  	%rd9263, %rd9262, %rd9260;
	add.s64 	%rd9264, %rd8803, %rd8794;
	add.s64 	%rd9265, %rd9264, %rd9258;
	add.s64 	%rd9266, %rd9265, %rd9263;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7240,%dummy}, %rd9253;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7241}, %rd9253;
	}
	shf.r.wrap.b32 	%r7242, %r7241, %r7240, 19;
	shf.r.wrap.b32 	%r7243, %r7240, %r7241, 19;
	mov.b64 	%rd9267, {%r7243, %r7242};
	shf.l.wrap.b32 	%r7244, %r7240, %r7241, 3;
	shf.l.wrap.b32 	%r7245, %r7241, %r7240, 3;
	mov.b64 	%rd9268, {%r7245, %r7244};
	shr.u64 	%rd9269, %rd9253, 6;
	xor.b64  	%rd9270, %rd9267, %rd9269;
	xor.b64  	%rd9271, %rd9270, %rd9268;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7246,%dummy}, %rd8796;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7247}, %rd8796;
	}
	shf.r.wrap.b32 	%r7248, %r7247, %r7246, 1;
	shf.r.wrap.b32 	%r7249, %r7246, %r7247, 1;
	mov.b64 	%rd9272, {%r7249, %r7248};
	shf.r.wrap.b32 	%r7250, %r7247, %r7246, 8;
	shf.r.wrap.b32 	%r7251, %r7246, %r7247, 8;
	mov.b64 	%rd9273, {%r7251, %r7250};
	shr.u64 	%rd9274, %rd8796, 7;
	xor.b64  	%rd9275, %rd9272, %rd9274;
	xor.b64  	%rd9276, %rd9275, %rd9273;
	add.s64 	%rd9277, %rd8804, %rd8795;
	add.s64 	%rd9278, %rd9277, %rd9271;
	add.s64 	%rd9279, %rd9278, %rd9276;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7252,%dummy}, %rd9266;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7253}, %rd9266;
	}
	shf.r.wrap.b32 	%r7254, %r7253, %r7252, 19;
	shf.r.wrap.b32 	%r7255, %r7252, %r7253, 19;
	mov.b64 	%rd9280, {%r7255, %r7254};
	shf.l.wrap.b32 	%r7256, %r7252, %r7253, 3;
	shf.l.wrap.b32 	%r7257, %r7253, %r7252, 3;
	mov.b64 	%rd9281, {%r7257, %r7256};
	shr.u64 	%rd9282, %rd9266, 6;
	xor.b64  	%rd9283, %rd9280, %rd9282;
	xor.b64  	%rd9284, %rd9283, %rd9281;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7258,%dummy}, %rd8797;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7259}, %rd8797;
	}
	shf.r.wrap.b32 	%r7260, %r7259, %r7258, 1;
	shf.r.wrap.b32 	%r7261, %r7258, %r7259, 1;
	mov.b64 	%rd9285, {%r7261, %r7260};
	shf.r.wrap.b32 	%r7262, %r7259, %r7258, 8;
	shf.r.wrap.b32 	%r7263, %r7258, %r7259, 8;
	mov.b64 	%rd9286, {%r7263, %r7262};
	shr.u64 	%rd9287, %rd8797, 7;
	xor.b64  	%rd9288, %rd9285, %rd9287;
	xor.b64  	%rd9289, %rd9288, %rd9286;
	add.s64 	%rd9290, %rd9201, %rd8796;
	add.s64 	%rd9291, %rd9290, %rd9284;
	add.s64 	%rd9292, %rd9291, %rd9289;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7264,%dummy}, %rd9279;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7265}, %rd9279;
	}
	shf.r.wrap.b32 	%r7266, %r7265, %r7264, 19;
	shf.r.wrap.b32 	%r7267, %r7264, %r7265, 19;
	mov.b64 	%rd9293, {%r7267, %r7266};
	shf.l.wrap.b32 	%r7268, %r7264, %r7265, 3;
	shf.l.wrap.b32 	%r7269, %r7265, %r7264, 3;
	mov.b64 	%rd9294, {%r7269, %r7268};
	shr.u64 	%rd9295, %rd9279, 6;
	xor.b64  	%rd9296, %rd9293, %rd9295;
	xor.b64  	%rd9297, %rd9296, %rd9294;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7270,%dummy}, %rd8798;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7271}, %rd8798;
	}
	shf.r.wrap.b32 	%r7272, %r7271, %r7270, 1;
	shf.r.wrap.b32 	%r7273, %r7270, %r7271, 1;
	mov.b64 	%rd9298, {%r7273, %r7272};
	shf.r.wrap.b32 	%r7274, %r7271, %r7270, 8;
	shf.r.wrap.b32 	%r7275, %r7270, %r7271, 8;
	mov.b64 	%rd9299, {%r7275, %r7274};
	shr.u64 	%rd9300, %rd8798, 7;
	xor.b64  	%rd9301, %rd9298, %rd9300;
	xor.b64  	%rd9302, %rd9301, %rd9299;
	add.s64 	%rd9303, %rd9214, %rd8797;
	add.s64 	%rd9304, %rd9303, %rd9297;
	add.s64 	%rd9305, %rd9304, %rd9302;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7276,%dummy}, %rd9292;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7277}, %rd9292;
	}
	shf.r.wrap.b32 	%r7278, %r7277, %r7276, 19;
	shf.r.wrap.b32 	%r7279, %r7276, %r7277, 19;
	mov.b64 	%rd9306, {%r7279, %r7278};
	shf.l.wrap.b32 	%r7280, %r7276, %r7277, 3;
	shf.l.wrap.b32 	%r7281, %r7277, %r7276, 3;
	mov.b64 	%rd9307, {%r7281, %r7280};
	shr.u64 	%rd9308, %rd9292, 6;
	xor.b64  	%rd9309, %rd9306, %rd9308;
	xor.b64  	%rd9310, %rd9309, %rd9307;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7282,%dummy}, %rd8799;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7283}, %rd8799;
	}
	shf.r.wrap.b32 	%r7284, %r7283, %r7282, 1;
	shf.r.wrap.b32 	%r7285, %r7282, %r7283, 1;
	mov.b64 	%rd9311, {%r7285, %r7284};
	shf.r.wrap.b32 	%r7286, %r7283, %r7282, 8;
	shf.r.wrap.b32 	%r7287, %r7282, %r7283, 8;
	mov.b64 	%rd9312, {%r7287, %r7286};
	shr.u64 	%rd9313, %rd8799, 7;
	xor.b64  	%rd9314, %rd9311, %rd9313;
	xor.b64  	%rd9315, %rd9314, %rd9312;
	add.s64 	%rd9316, %rd9227, %rd8798;
	add.s64 	%rd9317, %rd9316, %rd9310;
	add.s64 	%rd9318, %rd9317, %rd9315;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7288,%dummy}, %rd9305;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7289}, %rd9305;
	}
	shf.r.wrap.b32 	%r7290, %r7289, %r7288, 19;
	shf.r.wrap.b32 	%r7291, %r7288, %r7289, 19;
	mov.b64 	%rd9319, {%r7291, %r7290};
	shf.l.wrap.b32 	%r7292, %r7288, %r7289, 3;
	shf.l.wrap.b32 	%r7293, %r7289, %r7288, 3;
	mov.b64 	%rd9320, {%r7293, %r7292};
	shr.u64 	%rd9321, %rd9305, 6;
	xor.b64  	%rd9322, %rd9319, %rd9321;
	xor.b64  	%rd9323, %rd9322, %rd9320;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7294,%dummy}, %rd8800;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7295}, %rd8800;
	}
	shf.r.wrap.b32 	%r7296, %r7295, %r7294, 1;
	shf.r.wrap.b32 	%r7297, %r7294, %r7295, 1;
	mov.b64 	%rd9324, {%r7297, %r7296};
	shf.r.wrap.b32 	%r7298, %r7295, %r7294, 8;
	shf.r.wrap.b32 	%r7299, %r7294, %r7295, 8;
	mov.b64 	%rd9325, {%r7299, %r7298};
	shr.u64 	%rd9326, %rd8800, 7;
	xor.b64  	%rd9327, %rd9324, %rd9326;
	xor.b64  	%rd9328, %rd9327, %rd9325;
	add.s64 	%rd9329, %rd9240, %rd8799;
	add.s64 	%rd9330, %rd9329, %rd9323;
	add.s64 	%rd9331, %rd9330, %rd9328;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7300,%dummy}, %rd9318;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7301}, %rd9318;
	}
	shf.r.wrap.b32 	%r7302, %r7301, %r7300, 19;
	shf.r.wrap.b32 	%r7303, %r7300, %r7301, 19;
	mov.b64 	%rd9332, {%r7303, %r7302};
	shf.l.wrap.b32 	%r7304, %r7300, %r7301, 3;
	shf.l.wrap.b32 	%r7305, %r7301, %r7300, 3;
	mov.b64 	%rd9333, {%r7305, %r7304};
	shr.u64 	%rd9334, %rd9318, 6;
	xor.b64  	%rd9335, %rd9332, %rd9334;
	xor.b64  	%rd9336, %rd9335, %rd9333;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7306,%dummy}, %rd8801;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7307}, %rd8801;
	}
	shf.r.wrap.b32 	%r7308, %r7307, %r7306, 1;
	shf.r.wrap.b32 	%r7309, %r7306, %r7307, 1;
	mov.b64 	%rd9337, {%r7309, %r7308};
	shf.r.wrap.b32 	%r7310, %r7307, %r7306, 8;
	shf.r.wrap.b32 	%r7311, %r7306, %r7307, 8;
	mov.b64 	%rd9338, {%r7311, %r7310};
	shr.u64 	%rd9339, %rd8801, 7;
	xor.b64  	%rd9340, %rd9337, %rd9339;
	xor.b64  	%rd9341, %rd9340, %rd9338;
	add.s64 	%rd9342, %rd9253, %rd8800;
	add.s64 	%rd9343, %rd9342, %rd9336;
	add.s64 	%rd9344, %rd9343, %rd9341;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7312,%dummy}, %rd9331;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7313}, %rd9331;
	}
	shf.r.wrap.b32 	%r7314, %r7313, %r7312, 19;
	shf.r.wrap.b32 	%r7315, %r7312, %r7313, 19;
	mov.b64 	%rd9345, {%r7315, %r7314};
	shf.l.wrap.b32 	%r7316, %r7312, %r7313, 3;
	shf.l.wrap.b32 	%r7317, %r7313, %r7312, 3;
	mov.b64 	%rd9346, {%r7317, %r7316};
	shr.u64 	%rd9347, %rd9331, 6;
	xor.b64  	%rd9348, %rd9345, %rd9347;
	xor.b64  	%rd9349, %rd9348, %rd9346;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7318,%dummy}, %rd8802;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7319}, %rd8802;
	}
	shf.r.wrap.b32 	%r7320, %r7319, %r7318, 1;
	shf.r.wrap.b32 	%r7321, %r7318, %r7319, 1;
	mov.b64 	%rd9350, {%r7321, %r7320};
	shf.r.wrap.b32 	%r7322, %r7319, %r7318, 8;
	shf.r.wrap.b32 	%r7323, %r7318, %r7319, 8;
	mov.b64 	%rd9351, {%r7323, %r7322};
	shr.u64 	%rd9352, %rd8802, 7;
	xor.b64  	%rd9353, %rd9350, %rd9352;
	xor.b64  	%rd9354, %rd9353, %rd9351;
	add.s64 	%rd9355, %rd9266, %rd8801;
	add.s64 	%rd9356, %rd9355, %rd9349;
	add.s64 	%rd9357, %rd9356, %rd9354;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7324,%dummy}, %rd9344;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7325}, %rd9344;
	}
	shf.r.wrap.b32 	%r7326, %r7325, %r7324, 19;
	shf.r.wrap.b32 	%r7327, %r7324, %r7325, 19;
	mov.b64 	%rd9358, {%r7327, %r7326};
	shf.l.wrap.b32 	%r7328, %r7324, %r7325, 3;
	shf.l.wrap.b32 	%r7329, %r7325, %r7324, 3;
	mov.b64 	%rd9359, {%r7329, %r7328};
	shr.u64 	%rd9360, %rd9344, 6;
	xor.b64  	%rd9361, %rd9358, %rd9360;
	xor.b64  	%rd9362, %rd9361, %rd9359;
	shf.r.wrap.b32 	%r7330, %r7169, %r7168, 1;
	shf.r.wrap.b32 	%r7331, %r7168, %r7169, 1;
	mov.b64 	%rd9363, {%r7331, %r7330};
	shf.r.wrap.b32 	%r7332, %r7169, %r7168, 8;
	shf.r.wrap.b32 	%r7333, %r7168, %r7169, 8;
	mov.b64 	%rd9364, {%r7333, %r7332};
	shr.u64 	%rd9365, %rd8803, 7;
	xor.b64  	%rd9366, %rd9363, %rd9365;
	xor.b64  	%rd9367, %rd9366, %rd9364;
	add.s64 	%rd9368, %rd9279, %rd8802;
	add.s64 	%rd9369, %rd9368, %rd9362;
	add.s64 	%rd9370, %rd9369, %rd9367;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7334,%dummy}, %rd9357;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7335}, %rd9357;
	}
	shf.r.wrap.b32 	%r7336, %r7335, %r7334, 19;
	shf.r.wrap.b32 	%r7337, %r7334, %r7335, 19;
	mov.b64 	%rd9371, {%r7337, %r7336};
	shf.l.wrap.b32 	%r7338, %r7334, %r7335, 3;
	shf.l.wrap.b32 	%r7339, %r7335, %r7334, 3;
	mov.b64 	%rd9372, {%r7339, %r7338};
	shr.u64 	%rd9373, %rd9357, 6;
	xor.b64  	%rd9374, %rd9371, %rd9373;
	xor.b64  	%rd9375, %rd9374, %rd9372;
	shf.r.wrap.b32 	%r7340, %r7181, %r7180, 1;
	shf.r.wrap.b32 	%r7341, %r7180, %r7181, 1;
	mov.b64 	%rd9376, {%r7341, %r7340};
	shf.r.wrap.b32 	%r7342, %r7181, %r7180, 8;
	shf.r.wrap.b32 	%r7343, %r7180, %r7181, 8;
	mov.b64 	%rd9377, {%r7343, %r7342};
	shr.u64 	%rd9378, %rd8804, 7;
	xor.b64  	%rd9379, %rd9376, %rd9378;
	xor.b64  	%rd9380, %rd9379, %rd9377;
	add.s64 	%rd9381, %rd9292, %rd8803;
	add.s64 	%rd9382, %rd9381, %rd9375;
	add.s64 	%rd9383, %rd9382, %rd9380;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7344,%dummy}, %rd9370;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7345}, %rd9370;
	}
	shf.r.wrap.b32 	%r7346, %r7345, %r7344, 19;
	shf.r.wrap.b32 	%r7347, %r7344, %r7345, 19;
	mov.b64 	%rd9384, {%r7347, %r7346};
	shf.l.wrap.b32 	%r7348, %r7344, %r7345, 3;
	shf.l.wrap.b32 	%r7349, %r7345, %r7344, 3;
	mov.b64 	%rd9385, {%r7349, %r7348};
	shr.u64 	%rd9386, %rd9370, 6;
	xor.b64  	%rd9387, %rd9384, %rd9386;
	xor.b64  	%rd9388, %rd9387, %rd9385;
	shf.r.wrap.b32 	%r7350, %r7193, %r7192, 1;
	shf.r.wrap.b32 	%r7351, %r7192, %r7193, 1;
	mov.b64 	%rd9389, {%r7351, %r7350};
	shf.r.wrap.b32 	%r7352, %r7193, %r7192, 8;
	shf.r.wrap.b32 	%r7353, %r7192, %r7193, 8;
	mov.b64 	%rd9390, {%r7353, %r7352};
	shr.u64 	%rd9391, %rd9201, 7;
	xor.b64  	%rd9392, %rd9389, %rd9391;
	xor.b64  	%rd9393, %rd9392, %rd9390;
	add.s64 	%rd9394, %rd9305, %rd8804;
	add.s64 	%rd9395, %rd9394, %rd9388;
	add.s64 	%rd9396, %rd9395, %rd9393;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7354,%dummy}, %rd9177;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7355}, %rd9177;
	}
	shf.r.wrap.b32 	%r7356, %r7355, %r7354, 14;
	shf.r.wrap.b32 	%r7357, %r7354, %r7355, 14;
	mov.b64 	%rd9397, {%r7357, %r7356};
	shf.r.wrap.b32 	%r7358, %r7355, %r7354, 18;
	shf.r.wrap.b32 	%r7359, %r7354, %r7355, 18;
	mov.b64 	%rd9398, {%r7359, %r7358};
	xor.b64  	%rd9399, %rd9398, %rd9397;
	shf.l.wrap.b32 	%r7360, %r7354, %r7355, 23;
	shf.l.wrap.b32 	%r7361, %r7355, %r7354, 23;
	mov.b64 	%rd9400, {%r7361, %r7360};
	xor.b64  	%rd9401, %rd9399, %rd9400;
	xor.b64  	%rd9402, %rd9153, %rd9129;
	and.b64  	%rd9403, %rd9402, %rd9177;
	xor.b64  	%rd9404, %rd9403, %rd9129;
	add.s64 	%rd9405, %rd9404, %rd9105;
	add.s64 	%rd9406, %rd9405, %rd9201;
	add.s64 	%rd9407, %rd9406, %rd13005;
	add.s64 	%rd9408, %rd9407, %rd9401;
	add.s64 	%rd9409, %rd9408, %rd9116;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7362,%dummy}, %rd9188;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7363}, %rd9188;
	}
	shf.r.wrap.b32 	%r7364, %r7363, %r7362, 28;
	shf.r.wrap.b32 	%r7365, %r7362, %r7363, 28;
	mov.b64 	%rd9410, {%r7365, %r7364};
	shf.l.wrap.b32 	%r7366, %r7362, %r7363, 30;
	shf.l.wrap.b32 	%r7367, %r7363, %r7362, 30;
	mov.b64 	%rd9411, {%r7367, %r7366};
	xor.b64  	%rd9412, %rd9411, %rd9410;
	shf.l.wrap.b32 	%r7368, %r7362, %r7363, 25;
	shf.l.wrap.b32 	%r7369, %r7363, %r7362, 25;
	mov.b64 	%rd9413, {%r7369, %r7368};
	xor.b64  	%rd9414, %rd9412, %rd9413;
	xor.b64  	%rd9415, %rd9188, %rd9140;
	xor.b64  	%rd9416, %rd9188, %rd9164;
	and.b64  	%rd9417, %rd9416, %rd9415;
	xor.b64  	%rd9418, %rd9417, %rd9188;
	add.s64 	%rd9419, %rd9408, %rd9418;
	add.s64 	%rd9420, %rd9419, %rd9414;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7370,%dummy}, %rd9409;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7371}, %rd9409;
	}
	shf.r.wrap.b32 	%r7372, %r7371, %r7370, 14;
	shf.r.wrap.b32 	%r7373, %r7370, %r7371, 14;
	mov.b64 	%rd9421, {%r7373, %r7372};
	shf.r.wrap.b32 	%r7374, %r7371, %r7370, 18;
	shf.r.wrap.b32 	%r7375, %r7370, %r7371, 18;
	mov.b64 	%rd9422, {%r7375, %r7374};
	xor.b64  	%rd9423, %rd9422, %rd9421;
	shf.l.wrap.b32 	%r7376, %r7370, %r7371, 23;
	shf.l.wrap.b32 	%r7377, %r7371, %r7370, 23;
	mov.b64 	%rd9424, {%r7377, %r7376};
	xor.b64  	%rd9425, %rd9423, %rd9424;
	xor.b64  	%rd9426, %rd9177, %rd9153;
	and.b64  	%rd9427, %rd9409, %rd9426;
	xor.b64  	%rd9428, %rd9427, %rd9153;
	add.s64 	%rd9429, %rd9214, %rd9129;
	add.s64 	%rd9430, %rd9429, %rd13004;
	add.s64 	%rd9431, %rd9430, %rd9428;
	add.s64 	%rd9432, %rd9431, %rd9425;
	add.s64 	%rd9433, %rd9432, %rd9140;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7378,%dummy}, %rd9420;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7379}, %rd9420;
	}
	shf.r.wrap.b32 	%r7380, %r7379, %r7378, 28;
	shf.r.wrap.b32 	%r7381, %r7378, %r7379, 28;
	mov.b64 	%rd9434, {%r7381, %r7380};
	shf.l.wrap.b32 	%r7382, %r7378, %r7379, 30;
	shf.l.wrap.b32 	%r7383, %r7379, %r7378, 30;
	mov.b64 	%rd9435, {%r7383, %r7382};
	xor.b64  	%rd9436, %rd9435, %rd9434;
	shf.l.wrap.b32 	%r7384, %r7378, %r7379, 25;
	shf.l.wrap.b32 	%r7385, %r7379, %r7378, 25;
	mov.b64 	%rd9437, {%r7385, %r7384};
	xor.b64  	%rd9438, %rd9436, %rd9437;
	xor.b64  	%rd9439, %rd9420, %rd9164;
	xor.b64  	%rd9440, %rd9420, %rd9188;
	and.b64  	%rd9441, %rd9440, %rd9439;
	xor.b64  	%rd9442, %rd9441, %rd9420;
	add.s64 	%rd9443, %rd9432, %rd9442;
	add.s64 	%rd9444, %rd9443, %rd9438;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7386,%dummy}, %rd9433;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7387}, %rd9433;
	}
	shf.r.wrap.b32 	%r7388, %r7387, %r7386, 14;
	shf.r.wrap.b32 	%r7389, %r7386, %r7387, 14;
	mov.b64 	%rd9445, {%r7389, %r7388};
	shf.r.wrap.b32 	%r7390, %r7387, %r7386, 18;
	shf.r.wrap.b32 	%r7391, %r7386, %r7387, 18;
	mov.b64 	%rd9446, {%r7391, %r7390};
	xor.b64  	%rd9447, %rd9446, %rd9445;
	shf.l.wrap.b32 	%r7392, %r7386, %r7387, 23;
	shf.l.wrap.b32 	%r7393, %r7387, %r7386, 23;
	mov.b64 	%rd9448, {%r7393, %r7392};
	xor.b64  	%rd9449, %rd9447, %rd9448;
	xor.b64  	%rd9450, %rd9409, %rd9177;
	and.b64  	%rd9451, %rd9433, %rd9450;
	xor.b64  	%rd9452, %rd9451, %rd9177;
	add.s64 	%rd9453, %rd9227, %rd9153;
	add.s64 	%rd9454, %rd9453, %rd13003;
	add.s64 	%rd9455, %rd9454, %rd9452;
	add.s64 	%rd9456, %rd9455, %rd9449;
	add.s64 	%rd9457, %rd9456, %rd9164;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7394,%dummy}, %rd9444;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7395}, %rd9444;
	}
	shf.r.wrap.b32 	%r7396, %r7395, %r7394, 28;
	shf.r.wrap.b32 	%r7397, %r7394, %r7395, 28;
	mov.b64 	%rd9458, {%r7397, %r7396};
	shf.l.wrap.b32 	%r7398, %r7394, %r7395, 30;
	shf.l.wrap.b32 	%r7399, %r7395, %r7394, 30;
	mov.b64 	%rd9459, {%r7399, %r7398};
	xor.b64  	%rd9460, %rd9459, %rd9458;
	shf.l.wrap.b32 	%r7400, %r7394, %r7395, 25;
	shf.l.wrap.b32 	%r7401, %r7395, %r7394, 25;
	mov.b64 	%rd9461, {%r7401, %r7400};
	xor.b64  	%rd9462, %rd9460, %rd9461;
	xor.b64  	%rd9463, %rd9444, %rd9188;
	xor.b64  	%rd9464, %rd9444, %rd9420;
	and.b64  	%rd9465, %rd9464, %rd9463;
	xor.b64  	%rd9466, %rd9465, %rd9444;
	add.s64 	%rd9467, %rd9456, %rd9466;
	add.s64 	%rd9468, %rd9467, %rd9462;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7402,%dummy}, %rd9457;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7403}, %rd9457;
	}
	shf.r.wrap.b32 	%r7404, %r7403, %r7402, 14;
	shf.r.wrap.b32 	%r7405, %r7402, %r7403, 14;
	mov.b64 	%rd9469, {%r7405, %r7404};
	shf.r.wrap.b32 	%r7406, %r7403, %r7402, 18;
	shf.r.wrap.b32 	%r7407, %r7402, %r7403, 18;
	mov.b64 	%rd9470, {%r7407, %r7406};
	xor.b64  	%rd9471, %rd9470, %rd9469;
	shf.l.wrap.b32 	%r7408, %r7402, %r7403, 23;
	shf.l.wrap.b32 	%r7409, %r7403, %r7402, 23;
	mov.b64 	%rd9472, {%r7409, %r7408};
	xor.b64  	%rd9473, %rd9471, %rd9472;
	xor.b64  	%rd9474, %rd9433, %rd9409;
	and.b64  	%rd9475, %rd9457, %rd9474;
	xor.b64  	%rd9476, %rd9475, %rd9409;
	add.s64 	%rd9477, %rd9240, %rd9177;
	add.s64 	%rd9478, %rd9477, %rd13002;
	add.s64 	%rd9479, %rd9478, %rd9476;
	add.s64 	%rd9480, %rd9479, %rd9473;
	add.s64 	%rd9481, %rd9480, %rd9188;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7410,%dummy}, %rd9468;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7411}, %rd9468;
	}
	shf.r.wrap.b32 	%r7412, %r7411, %r7410, 28;
	shf.r.wrap.b32 	%r7413, %r7410, %r7411, 28;
	mov.b64 	%rd9482, {%r7413, %r7412};
	shf.l.wrap.b32 	%r7414, %r7410, %r7411, 30;
	shf.l.wrap.b32 	%r7415, %r7411, %r7410, 30;
	mov.b64 	%rd9483, {%r7415, %r7414};
	xor.b64  	%rd9484, %rd9483, %rd9482;
	shf.l.wrap.b32 	%r7416, %r7410, %r7411, 25;
	shf.l.wrap.b32 	%r7417, %r7411, %r7410, 25;
	mov.b64 	%rd9485, {%r7417, %r7416};
	xor.b64  	%rd9486, %rd9484, %rd9485;
	xor.b64  	%rd9487, %rd9468, %rd9420;
	xor.b64  	%rd9488, %rd9468, %rd9444;
	and.b64  	%rd9489, %rd9488, %rd9487;
	xor.b64  	%rd9490, %rd9489, %rd9468;
	add.s64 	%rd9491, %rd9480, %rd9490;
	add.s64 	%rd9492, %rd9491, %rd9486;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7418,%dummy}, %rd9481;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7419}, %rd9481;
	}
	shf.r.wrap.b32 	%r7420, %r7419, %r7418, 14;
	shf.r.wrap.b32 	%r7421, %r7418, %r7419, 14;
	mov.b64 	%rd9493, {%r7421, %r7420};
	shf.r.wrap.b32 	%r7422, %r7419, %r7418, 18;
	shf.r.wrap.b32 	%r7423, %r7418, %r7419, 18;
	mov.b64 	%rd9494, {%r7423, %r7422};
	xor.b64  	%rd9495, %rd9494, %rd9493;
	shf.l.wrap.b32 	%r7424, %r7418, %r7419, 23;
	shf.l.wrap.b32 	%r7425, %r7419, %r7418, 23;
	mov.b64 	%rd9496, {%r7425, %r7424};
	xor.b64  	%rd9497, %rd9495, %rd9496;
	xor.b64  	%rd9498, %rd9457, %rd9433;
	and.b64  	%rd9499, %rd9481, %rd9498;
	xor.b64  	%rd9500, %rd9499, %rd9433;
	add.s64 	%rd9501, %rd9409, %rd9253;
	add.s64 	%rd9502, %rd9501, %rd13001;
	add.s64 	%rd9503, %rd9502, %rd9500;
	add.s64 	%rd9504, %rd9503, %rd9497;
	add.s64 	%rd9505, %rd9504, %rd9420;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7426,%dummy}, %rd9492;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7427}, %rd9492;
	}
	shf.r.wrap.b32 	%r7428, %r7427, %r7426, 28;
	shf.r.wrap.b32 	%r7429, %r7426, %r7427, 28;
	mov.b64 	%rd9506, {%r7429, %r7428};
	shf.l.wrap.b32 	%r7430, %r7426, %r7427, 30;
	shf.l.wrap.b32 	%r7431, %r7427, %r7426, 30;
	mov.b64 	%rd9507, {%r7431, %r7430};
	xor.b64  	%rd9508, %rd9507, %rd9506;
	shf.l.wrap.b32 	%r7432, %r7426, %r7427, 25;
	shf.l.wrap.b32 	%r7433, %r7427, %r7426, 25;
	mov.b64 	%rd9509, {%r7433, %r7432};
	xor.b64  	%rd9510, %rd9508, %rd9509;
	xor.b64  	%rd9511, %rd9492, %rd9444;
	xor.b64  	%rd9512, %rd9492, %rd9468;
	and.b64  	%rd9513, %rd9512, %rd9511;
	xor.b64  	%rd9514, %rd9513, %rd9492;
	add.s64 	%rd9515, %rd9504, %rd9514;
	add.s64 	%rd9516, %rd9515, %rd9510;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7434,%dummy}, %rd9505;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7435}, %rd9505;
	}
	shf.r.wrap.b32 	%r7436, %r7435, %r7434, 14;
	shf.r.wrap.b32 	%r7437, %r7434, %r7435, 14;
	mov.b64 	%rd9517, {%r7437, %r7436};
	shf.r.wrap.b32 	%r7438, %r7435, %r7434, 18;
	shf.r.wrap.b32 	%r7439, %r7434, %r7435, 18;
	mov.b64 	%rd9518, {%r7439, %r7438};
	xor.b64  	%rd9519, %rd9518, %rd9517;
	shf.l.wrap.b32 	%r7440, %r7434, %r7435, 23;
	shf.l.wrap.b32 	%r7441, %r7435, %r7434, 23;
	mov.b64 	%rd9520, {%r7441, %r7440};
	xor.b64  	%rd9521, %rd9519, %rd9520;
	xor.b64  	%rd9522, %rd9481, %rd9457;
	and.b64  	%rd9523, %rd9505, %rd9522;
	xor.b64  	%rd9524, %rd9523, %rd9457;
	add.s64 	%rd9525, %rd9433, %rd9266;
	add.s64 	%rd9526, %rd9525, %rd13000;
	add.s64 	%rd9527, %rd9526, %rd9524;
	add.s64 	%rd9528, %rd9527, %rd9521;
	add.s64 	%rd9529, %rd9528, %rd9444;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7442,%dummy}, %rd9516;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7443}, %rd9516;
	}
	shf.r.wrap.b32 	%r7444, %r7443, %r7442, 28;
	shf.r.wrap.b32 	%r7445, %r7442, %r7443, 28;
	mov.b64 	%rd9530, {%r7445, %r7444};
	shf.l.wrap.b32 	%r7446, %r7442, %r7443, 30;
	shf.l.wrap.b32 	%r7447, %r7443, %r7442, 30;
	mov.b64 	%rd9531, {%r7447, %r7446};
	xor.b64  	%rd9532, %rd9531, %rd9530;
	shf.l.wrap.b32 	%r7448, %r7442, %r7443, 25;
	shf.l.wrap.b32 	%r7449, %r7443, %r7442, 25;
	mov.b64 	%rd9533, {%r7449, %r7448};
	xor.b64  	%rd9534, %rd9532, %rd9533;
	xor.b64  	%rd9535, %rd9516, %rd9468;
	xor.b64  	%rd9536, %rd9516, %rd9492;
	and.b64  	%rd9537, %rd9536, %rd9535;
	xor.b64  	%rd9538, %rd9537, %rd9516;
	add.s64 	%rd9539, %rd9528, %rd9538;
	add.s64 	%rd9540, %rd9539, %rd9534;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7450,%dummy}, %rd9529;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7451}, %rd9529;
	}
	shf.r.wrap.b32 	%r7452, %r7451, %r7450, 14;
	shf.r.wrap.b32 	%r7453, %r7450, %r7451, 14;
	mov.b64 	%rd9541, {%r7453, %r7452};
	shf.r.wrap.b32 	%r7454, %r7451, %r7450, 18;
	shf.r.wrap.b32 	%r7455, %r7450, %r7451, 18;
	mov.b64 	%rd9542, {%r7455, %r7454};
	xor.b64  	%rd9543, %rd9542, %rd9541;
	shf.l.wrap.b32 	%r7456, %r7450, %r7451, 23;
	shf.l.wrap.b32 	%r7457, %r7451, %r7450, 23;
	mov.b64 	%rd9544, {%r7457, %r7456};
	xor.b64  	%rd9545, %rd9543, %rd9544;
	xor.b64  	%rd9546, %rd9505, %rd9481;
	and.b64  	%rd9547, %rd9529, %rd9546;
	xor.b64  	%rd9548, %rd9547, %rd9481;
	add.s64 	%rd9549, %rd9457, %rd9279;
	add.s64 	%rd9550, %rd9549, %rd12999;
	add.s64 	%rd9551, %rd9550, %rd9548;
	add.s64 	%rd9552, %rd9551, %rd9545;
	add.s64 	%rd9553, %rd9552, %rd9468;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7458,%dummy}, %rd9540;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7459}, %rd9540;
	}
	shf.r.wrap.b32 	%r7460, %r7459, %r7458, 28;
	shf.r.wrap.b32 	%r7461, %r7458, %r7459, 28;
	mov.b64 	%rd9554, {%r7461, %r7460};
	shf.l.wrap.b32 	%r7462, %r7458, %r7459, 30;
	shf.l.wrap.b32 	%r7463, %r7459, %r7458, 30;
	mov.b64 	%rd9555, {%r7463, %r7462};
	xor.b64  	%rd9556, %rd9555, %rd9554;
	shf.l.wrap.b32 	%r7464, %r7458, %r7459, 25;
	shf.l.wrap.b32 	%r7465, %r7459, %r7458, 25;
	mov.b64 	%rd9557, {%r7465, %r7464};
	xor.b64  	%rd9558, %rd9556, %rd9557;
	xor.b64  	%rd9559, %rd9540, %rd9492;
	xor.b64  	%rd9560, %rd9540, %rd9516;
	and.b64  	%rd9561, %rd9560, %rd9559;
	xor.b64  	%rd9562, %rd9561, %rd9540;
	add.s64 	%rd9563, %rd9552, %rd9562;
	add.s64 	%rd9564, %rd9563, %rd9558;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7466,%dummy}, %rd9553;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7467}, %rd9553;
	}
	shf.r.wrap.b32 	%r7468, %r7467, %r7466, 14;
	shf.r.wrap.b32 	%r7469, %r7466, %r7467, 14;
	mov.b64 	%rd9565, {%r7469, %r7468};
	shf.r.wrap.b32 	%r7470, %r7467, %r7466, 18;
	shf.r.wrap.b32 	%r7471, %r7466, %r7467, 18;
	mov.b64 	%rd9566, {%r7471, %r7470};
	xor.b64  	%rd9567, %rd9566, %rd9565;
	shf.l.wrap.b32 	%r7472, %r7466, %r7467, 23;
	shf.l.wrap.b32 	%r7473, %r7467, %r7466, 23;
	mov.b64 	%rd9568, {%r7473, %r7472};
	xor.b64  	%rd9569, %rd9567, %rd9568;
	xor.b64  	%rd9570, %rd9529, %rd9505;
	and.b64  	%rd9571, %rd9553, %rd9570;
	xor.b64  	%rd9572, %rd9571, %rd9505;
	add.s64 	%rd9573, %rd9481, %rd9292;
	add.s64 	%rd9574, %rd9573, %rd12998;
	add.s64 	%rd9575, %rd9574, %rd9572;
	add.s64 	%rd9576, %rd9575, %rd9569;
	add.s64 	%rd9577, %rd9576, %rd9492;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7474,%dummy}, %rd9564;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7475}, %rd9564;
	}
	shf.r.wrap.b32 	%r7476, %r7475, %r7474, 28;
	shf.r.wrap.b32 	%r7477, %r7474, %r7475, 28;
	mov.b64 	%rd9578, {%r7477, %r7476};
	shf.l.wrap.b32 	%r7478, %r7474, %r7475, 30;
	shf.l.wrap.b32 	%r7479, %r7475, %r7474, 30;
	mov.b64 	%rd9579, {%r7479, %r7478};
	xor.b64  	%rd9580, %rd9579, %rd9578;
	shf.l.wrap.b32 	%r7480, %r7474, %r7475, 25;
	shf.l.wrap.b32 	%r7481, %r7475, %r7474, 25;
	mov.b64 	%rd9581, {%r7481, %r7480};
	xor.b64  	%rd9582, %rd9580, %rd9581;
	xor.b64  	%rd9583, %rd9564, %rd9516;
	xor.b64  	%rd9584, %rd9564, %rd9540;
	and.b64  	%rd9585, %rd9584, %rd9583;
	xor.b64  	%rd9586, %rd9585, %rd9564;
	add.s64 	%rd9587, %rd9576, %rd9586;
	add.s64 	%rd9588, %rd9587, %rd9582;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7482,%dummy}, %rd9577;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7483}, %rd9577;
	}
	shf.r.wrap.b32 	%r7484, %r7483, %r7482, 14;
	shf.r.wrap.b32 	%r7485, %r7482, %r7483, 14;
	mov.b64 	%rd9589, {%r7485, %r7484};
	shf.r.wrap.b32 	%r7486, %r7483, %r7482, 18;
	shf.r.wrap.b32 	%r7487, %r7482, %r7483, 18;
	mov.b64 	%rd9590, {%r7487, %r7486};
	xor.b64  	%rd9591, %rd9590, %rd9589;
	shf.l.wrap.b32 	%r7488, %r7482, %r7483, 23;
	shf.l.wrap.b32 	%r7489, %r7483, %r7482, 23;
	mov.b64 	%rd9592, {%r7489, %r7488};
	xor.b64  	%rd9593, %rd9591, %rd9592;
	xor.b64  	%rd9594, %rd9553, %rd9529;
	and.b64  	%rd9595, %rd9577, %rd9594;
	xor.b64  	%rd9596, %rd9595, %rd9529;
	add.s64 	%rd9597, %rd9505, %rd9305;
	add.s64 	%rd9598, %rd9597, %rd12997;
	add.s64 	%rd9599, %rd9598, %rd9596;
	add.s64 	%rd9600, %rd9599, %rd9593;
	add.s64 	%rd9601, %rd9600, %rd9516;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7490,%dummy}, %rd9588;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7491}, %rd9588;
	}
	shf.r.wrap.b32 	%r7492, %r7491, %r7490, 28;
	shf.r.wrap.b32 	%r7493, %r7490, %r7491, 28;
	mov.b64 	%rd9602, {%r7493, %r7492};
	shf.l.wrap.b32 	%r7494, %r7490, %r7491, 30;
	shf.l.wrap.b32 	%r7495, %r7491, %r7490, 30;
	mov.b64 	%rd9603, {%r7495, %r7494};
	xor.b64  	%rd9604, %rd9603, %rd9602;
	shf.l.wrap.b32 	%r7496, %r7490, %r7491, 25;
	shf.l.wrap.b32 	%r7497, %r7491, %r7490, 25;
	mov.b64 	%rd9605, {%r7497, %r7496};
	xor.b64  	%rd9606, %rd9604, %rd9605;
	xor.b64  	%rd9607, %rd9588, %rd9540;
	xor.b64  	%rd9608, %rd9588, %rd9564;
	and.b64  	%rd9609, %rd9608, %rd9607;
	xor.b64  	%rd9610, %rd9609, %rd9588;
	add.s64 	%rd9611, %rd9600, %rd9610;
	add.s64 	%rd9612, %rd9611, %rd9606;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7498,%dummy}, %rd9601;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7499}, %rd9601;
	}
	shf.r.wrap.b32 	%r7500, %r7499, %r7498, 14;
	shf.r.wrap.b32 	%r7501, %r7498, %r7499, 14;
	mov.b64 	%rd9613, {%r7501, %r7500};
	shf.r.wrap.b32 	%r7502, %r7499, %r7498, 18;
	shf.r.wrap.b32 	%r7503, %r7498, %r7499, 18;
	mov.b64 	%rd9614, {%r7503, %r7502};
	xor.b64  	%rd9615, %rd9614, %rd9613;
	shf.l.wrap.b32 	%r7504, %r7498, %r7499, 23;
	shf.l.wrap.b32 	%r7505, %r7499, %r7498, 23;
	mov.b64 	%rd9616, {%r7505, %r7504};
	xor.b64  	%rd9617, %rd9615, %rd9616;
	xor.b64  	%rd9618, %rd9577, %rd9553;
	and.b64  	%rd9619, %rd9601, %rd9618;
	xor.b64  	%rd9620, %rd9619, %rd9553;
	add.s64 	%rd9621, %rd9529, %rd9318;
	add.s64 	%rd9622, %rd9621, %rd12996;
	add.s64 	%rd9623, %rd9622, %rd9620;
	add.s64 	%rd9624, %rd9623, %rd9617;
	add.s64 	%rd9625, %rd9624, %rd9540;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7506,%dummy}, %rd9612;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7507}, %rd9612;
	}
	shf.r.wrap.b32 	%r7508, %r7507, %r7506, 28;
	shf.r.wrap.b32 	%r7509, %r7506, %r7507, 28;
	mov.b64 	%rd9626, {%r7509, %r7508};
	shf.l.wrap.b32 	%r7510, %r7506, %r7507, 30;
	shf.l.wrap.b32 	%r7511, %r7507, %r7506, 30;
	mov.b64 	%rd9627, {%r7511, %r7510};
	xor.b64  	%rd9628, %rd9627, %rd9626;
	shf.l.wrap.b32 	%r7512, %r7506, %r7507, 25;
	shf.l.wrap.b32 	%r7513, %r7507, %r7506, 25;
	mov.b64 	%rd9629, {%r7513, %r7512};
	xor.b64  	%rd9630, %rd9628, %rd9629;
	xor.b64  	%rd9631, %rd9612, %rd9564;
	xor.b64  	%rd9632, %rd9612, %rd9588;
	and.b64  	%rd9633, %rd9632, %rd9631;
	xor.b64  	%rd9634, %rd9633, %rd9612;
	add.s64 	%rd9635, %rd9624, %rd9634;
	add.s64 	%rd9636, %rd9635, %rd9630;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7514,%dummy}, %rd9625;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7515}, %rd9625;
	}
	shf.r.wrap.b32 	%r7516, %r7515, %r7514, 14;
	shf.r.wrap.b32 	%r7517, %r7514, %r7515, 14;
	mov.b64 	%rd9637, {%r7517, %r7516};
	shf.r.wrap.b32 	%r7518, %r7515, %r7514, 18;
	shf.r.wrap.b32 	%r7519, %r7514, %r7515, 18;
	mov.b64 	%rd9638, {%r7519, %r7518};
	xor.b64  	%rd9639, %rd9638, %rd9637;
	shf.l.wrap.b32 	%r7520, %r7514, %r7515, 23;
	shf.l.wrap.b32 	%r7521, %r7515, %r7514, 23;
	mov.b64 	%rd9640, {%r7521, %r7520};
	xor.b64  	%rd9641, %rd9639, %rd9640;
	xor.b64  	%rd9642, %rd9601, %rd9577;
	and.b64  	%rd9643, %rd9625, %rd9642;
	xor.b64  	%rd9644, %rd9643, %rd9577;
	add.s64 	%rd9645, %rd9553, %rd9331;
	add.s64 	%rd9646, %rd9645, %rd12995;
	add.s64 	%rd9647, %rd9646, %rd9644;
	add.s64 	%rd9648, %rd9647, %rd9641;
	add.s64 	%rd9649, %rd9648, %rd9564;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7522,%dummy}, %rd9636;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7523}, %rd9636;
	}
	shf.r.wrap.b32 	%r7524, %r7523, %r7522, 28;
	shf.r.wrap.b32 	%r7525, %r7522, %r7523, 28;
	mov.b64 	%rd9650, {%r7525, %r7524};
	shf.l.wrap.b32 	%r7526, %r7522, %r7523, 30;
	shf.l.wrap.b32 	%r7527, %r7523, %r7522, 30;
	mov.b64 	%rd9651, {%r7527, %r7526};
	xor.b64  	%rd9652, %rd9651, %rd9650;
	shf.l.wrap.b32 	%r7528, %r7522, %r7523, 25;
	shf.l.wrap.b32 	%r7529, %r7523, %r7522, 25;
	mov.b64 	%rd9653, {%r7529, %r7528};
	xor.b64  	%rd9654, %rd9652, %rd9653;
	xor.b64  	%rd9655, %rd9636, %rd9588;
	xor.b64  	%rd9656, %rd9636, %rd9612;
	and.b64  	%rd9657, %rd9656, %rd9655;
	xor.b64  	%rd9658, %rd9657, %rd9636;
	add.s64 	%rd9659, %rd9648, %rd9658;
	add.s64 	%rd9660, %rd9659, %rd9654;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7530,%dummy}, %rd9649;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7531}, %rd9649;
	}
	shf.r.wrap.b32 	%r7532, %r7531, %r7530, 14;
	shf.r.wrap.b32 	%r7533, %r7530, %r7531, 14;
	mov.b64 	%rd9661, {%r7533, %r7532};
	shf.r.wrap.b32 	%r7534, %r7531, %r7530, 18;
	shf.r.wrap.b32 	%r7535, %r7530, %r7531, 18;
	mov.b64 	%rd9662, {%r7535, %r7534};
	xor.b64  	%rd9663, %rd9662, %rd9661;
	shf.l.wrap.b32 	%r7536, %r7530, %r7531, 23;
	shf.l.wrap.b32 	%r7537, %r7531, %r7530, 23;
	mov.b64 	%rd9664, {%r7537, %r7536};
	xor.b64  	%rd9665, %rd9663, %rd9664;
	xor.b64  	%rd9666, %rd9625, %rd9601;
	and.b64  	%rd9667, %rd9649, %rd9666;
	xor.b64  	%rd9668, %rd9667, %rd9601;
	add.s64 	%rd9669, %rd9577, %rd9344;
	add.s64 	%rd9670, %rd9669, %rd12994;
	add.s64 	%rd9671, %rd9670, %rd9668;
	add.s64 	%rd9672, %rd9671, %rd9665;
	add.s64 	%rd9673, %rd9672, %rd9588;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7538,%dummy}, %rd9660;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7539}, %rd9660;
	}
	shf.r.wrap.b32 	%r7540, %r7539, %r7538, 28;
	shf.r.wrap.b32 	%r7541, %r7538, %r7539, 28;
	mov.b64 	%rd9674, {%r7541, %r7540};
	shf.l.wrap.b32 	%r7542, %r7538, %r7539, 30;
	shf.l.wrap.b32 	%r7543, %r7539, %r7538, 30;
	mov.b64 	%rd9675, {%r7543, %r7542};
	xor.b64  	%rd9676, %rd9675, %rd9674;
	shf.l.wrap.b32 	%r7544, %r7538, %r7539, 25;
	shf.l.wrap.b32 	%r7545, %r7539, %r7538, 25;
	mov.b64 	%rd9677, {%r7545, %r7544};
	xor.b64  	%rd9678, %rd9676, %rd9677;
	xor.b64  	%rd9679, %rd9660, %rd9612;
	xor.b64  	%rd9680, %rd9660, %rd9636;
	and.b64  	%rd9681, %rd9680, %rd9679;
	xor.b64  	%rd9682, %rd9681, %rd9660;
	add.s64 	%rd9683, %rd9672, %rd9682;
	add.s64 	%rd9684, %rd9683, %rd9678;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7546,%dummy}, %rd9673;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7547}, %rd9673;
	}
	shf.r.wrap.b32 	%r7548, %r7547, %r7546, 14;
	shf.r.wrap.b32 	%r7549, %r7546, %r7547, 14;
	mov.b64 	%rd9685, {%r7549, %r7548};
	shf.r.wrap.b32 	%r7550, %r7547, %r7546, 18;
	shf.r.wrap.b32 	%r7551, %r7546, %r7547, 18;
	mov.b64 	%rd9686, {%r7551, %r7550};
	xor.b64  	%rd9687, %rd9686, %rd9685;
	shf.l.wrap.b32 	%r7552, %r7546, %r7547, 23;
	shf.l.wrap.b32 	%r7553, %r7547, %r7546, 23;
	mov.b64 	%rd9688, {%r7553, %r7552};
	xor.b64  	%rd9689, %rd9687, %rd9688;
	xor.b64  	%rd9690, %rd9649, %rd9625;
	and.b64  	%rd9691, %rd9673, %rd9690;
	xor.b64  	%rd9692, %rd9691, %rd9625;
	add.s64 	%rd9693, %rd9601, %rd9357;
	add.s64 	%rd9694, %rd9693, %rd12993;
	add.s64 	%rd9695, %rd9694, %rd9692;
	add.s64 	%rd9696, %rd9695, %rd9689;
	add.s64 	%rd9697, %rd9696, %rd9612;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7554,%dummy}, %rd9684;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7555}, %rd9684;
	}
	shf.r.wrap.b32 	%r7556, %r7555, %r7554, 28;
	shf.r.wrap.b32 	%r7557, %r7554, %r7555, 28;
	mov.b64 	%rd9698, {%r7557, %r7556};
	shf.l.wrap.b32 	%r7558, %r7554, %r7555, 30;
	shf.l.wrap.b32 	%r7559, %r7555, %r7554, 30;
	mov.b64 	%rd9699, {%r7559, %r7558};
	xor.b64  	%rd9700, %rd9699, %rd9698;
	shf.l.wrap.b32 	%r7560, %r7554, %r7555, 25;
	shf.l.wrap.b32 	%r7561, %r7555, %r7554, 25;
	mov.b64 	%rd9701, {%r7561, %r7560};
	xor.b64  	%rd9702, %rd9700, %rd9701;
	xor.b64  	%rd9703, %rd9684, %rd9636;
	xor.b64  	%rd9704, %rd9684, %rd9660;
	and.b64  	%rd9705, %rd9704, %rd9703;
	xor.b64  	%rd9706, %rd9705, %rd9684;
	add.s64 	%rd9707, %rd9696, %rd9706;
	add.s64 	%rd9708, %rd9707, %rd9702;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7562,%dummy}, %rd9697;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7563}, %rd9697;
	}
	shf.r.wrap.b32 	%r7564, %r7563, %r7562, 14;
	shf.r.wrap.b32 	%r7565, %r7562, %r7563, 14;
	mov.b64 	%rd9709, {%r7565, %r7564};
	shf.r.wrap.b32 	%r7566, %r7563, %r7562, 18;
	shf.r.wrap.b32 	%r7567, %r7562, %r7563, 18;
	mov.b64 	%rd9710, {%r7567, %r7566};
	xor.b64  	%rd9711, %rd9710, %rd9709;
	shf.l.wrap.b32 	%r7568, %r7562, %r7563, 23;
	shf.l.wrap.b32 	%r7569, %r7563, %r7562, 23;
	mov.b64 	%rd9712, {%r7569, %r7568};
	xor.b64  	%rd9713, %rd9711, %rd9712;
	xor.b64  	%rd9714, %rd9673, %rd9649;
	and.b64  	%rd9715, %rd9697, %rd9714;
	xor.b64  	%rd9716, %rd9715, %rd9649;
	add.s64 	%rd9717, %rd9625, %rd9370;
	add.s64 	%rd9718, %rd9717, %rd12992;
	add.s64 	%rd9719, %rd9718, %rd9716;
	add.s64 	%rd9720, %rd9719, %rd9713;
	add.s64 	%rd9721, %rd9720, %rd9636;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7570,%dummy}, %rd9708;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7571}, %rd9708;
	}
	shf.r.wrap.b32 	%r7572, %r7571, %r7570, 28;
	shf.r.wrap.b32 	%r7573, %r7570, %r7571, 28;
	mov.b64 	%rd9722, {%r7573, %r7572};
	shf.l.wrap.b32 	%r7574, %r7570, %r7571, 30;
	shf.l.wrap.b32 	%r7575, %r7571, %r7570, 30;
	mov.b64 	%rd9723, {%r7575, %r7574};
	xor.b64  	%rd9724, %rd9723, %rd9722;
	shf.l.wrap.b32 	%r7576, %r7570, %r7571, 25;
	shf.l.wrap.b32 	%r7577, %r7571, %r7570, 25;
	mov.b64 	%rd9725, {%r7577, %r7576};
	xor.b64  	%rd9726, %rd9724, %rd9725;
	xor.b64  	%rd9727, %rd9708, %rd9660;
	xor.b64  	%rd9728, %rd9708, %rd9684;
	and.b64  	%rd9729, %rd9728, %rd9727;
	xor.b64  	%rd9730, %rd9729, %rd9708;
	add.s64 	%rd9731, %rd9720, %rd9730;
	add.s64 	%rd9732, %rd9731, %rd9726;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7578,%dummy}, %rd9721;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7579}, %rd9721;
	}
	shf.r.wrap.b32 	%r7580, %r7579, %r7578, 14;
	shf.r.wrap.b32 	%r7581, %r7578, %r7579, 14;
	mov.b64 	%rd9733, {%r7581, %r7580};
	shf.r.wrap.b32 	%r7582, %r7579, %r7578, 18;
	shf.r.wrap.b32 	%r7583, %r7578, %r7579, 18;
	mov.b64 	%rd9734, {%r7583, %r7582};
	xor.b64  	%rd9735, %rd9734, %rd9733;
	shf.l.wrap.b32 	%r7584, %r7578, %r7579, 23;
	shf.l.wrap.b32 	%r7585, %r7579, %r7578, 23;
	mov.b64 	%rd9736, {%r7585, %r7584};
	xor.b64  	%rd9737, %rd9735, %rd9736;
	xor.b64  	%rd9738, %rd9697, %rd9673;
	and.b64  	%rd9739, %rd9721, %rd9738;
	xor.b64  	%rd9740, %rd9739, %rd9673;
	add.s64 	%rd9741, %rd9649, %rd9383;
	add.s64 	%rd9742, %rd9741, %rd12991;
	add.s64 	%rd9743, %rd9742, %rd9740;
	add.s64 	%rd9744, %rd9743, %rd9737;
	add.s64 	%rd9745, %rd9744, %rd9660;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7586,%dummy}, %rd9732;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7587}, %rd9732;
	}
	shf.r.wrap.b32 	%r7588, %r7587, %r7586, 28;
	shf.r.wrap.b32 	%r7589, %r7586, %r7587, 28;
	mov.b64 	%rd9746, {%r7589, %r7588};
	shf.l.wrap.b32 	%r7590, %r7586, %r7587, 30;
	shf.l.wrap.b32 	%r7591, %r7587, %r7586, 30;
	mov.b64 	%rd9747, {%r7591, %r7590};
	xor.b64  	%rd9748, %rd9747, %rd9746;
	shf.l.wrap.b32 	%r7592, %r7586, %r7587, 25;
	shf.l.wrap.b32 	%r7593, %r7587, %r7586, 25;
	mov.b64 	%rd9749, {%r7593, %r7592};
	xor.b64  	%rd9750, %rd9748, %rd9749;
	xor.b64  	%rd9751, %rd9732, %rd9684;
	xor.b64  	%rd9752, %rd9732, %rd9708;
	and.b64  	%rd9753, %rd9752, %rd9751;
	xor.b64  	%rd9754, %rd9753, %rd9732;
	add.s64 	%rd9755, %rd9744, %rd9754;
	add.s64 	%rd9756, %rd9755, %rd9750;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7594,%dummy}, %rd9745;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7595}, %rd9745;
	}
	shf.r.wrap.b32 	%r7596, %r7595, %r7594, 14;
	shf.r.wrap.b32 	%r7597, %r7594, %r7595, 14;
	mov.b64 	%rd9757, {%r7597, %r7596};
	shf.r.wrap.b32 	%r7598, %r7595, %r7594, 18;
	shf.r.wrap.b32 	%r7599, %r7594, %r7595, 18;
	mov.b64 	%rd9758, {%r7599, %r7598};
	xor.b64  	%rd9759, %rd9758, %rd9757;
	shf.l.wrap.b32 	%r7600, %r7594, %r7595, 23;
	shf.l.wrap.b32 	%r7601, %r7595, %r7594, 23;
	mov.b64 	%rd9760, {%r7601, %r7600};
	xor.b64  	%rd9761, %rd9759, %rd9760;
	xor.b64  	%rd9762, %rd9721, %rd9697;
	and.b64  	%rd9763, %rd9745, %rd9762;
	xor.b64  	%rd9764, %rd9763, %rd9697;
	add.s64 	%rd9765, %rd9673, %rd9396;
	add.s64 	%rd9766, %rd9765, %rd12990;
	add.s64 	%rd9767, %rd9766, %rd9764;
	add.s64 	%rd9768, %rd9767, %rd9761;
	add.s64 	%rd9769, %rd9768, %rd9684;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7602,%dummy}, %rd9756;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7603}, %rd9756;
	}
	shf.r.wrap.b32 	%r7604, %r7603, %r7602, 28;
	shf.r.wrap.b32 	%r7605, %r7602, %r7603, 28;
	mov.b64 	%rd9770, {%r7605, %r7604};
	shf.l.wrap.b32 	%r7606, %r7602, %r7603, 30;
	shf.l.wrap.b32 	%r7607, %r7603, %r7602, 30;
	mov.b64 	%rd9771, {%r7607, %r7606};
	xor.b64  	%rd9772, %rd9771, %rd9770;
	shf.l.wrap.b32 	%r7608, %r7602, %r7603, 25;
	shf.l.wrap.b32 	%r7609, %r7603, %r7602, 25;
	mov.b64 	%rd9773, {%r7609, %r7608};
	xor.b64  	%rd9774, %rd9772, %rd9773;
	xor.b64  	%rd9775, %rd9756, %rd9708;
	xor.b64  	%rd9776, %rd9756, %rd9732;
	and.b64  	%rd9777, %rd9776, %rd9775;
	xor.b64  	%rd9778, %rd9777, %rd9756;
	add.s64 	%rd9779, %rd9768, %rd9778;
	add.s64 	%rd9780, %rd9779, %rd9774;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7610,%dummy}, %rd9383;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7611}, %rd9383;
	}
	shf.r.wrap.b32 	%r7612, %r7611, %r7610, 19;
	shf.r.wrap.b32 	%r7613, %r7610, %r7611, 19;
	mov.b64 	%rd9781, {%r7613, %r7612};
	shf.l.wrap.b32 	%r7614, %r7610, %r7611, 3;
	shf.l.wrap.b32 	%r7615, %r7611, %r7610, 3;
	mov.b64 	%rd9782, {%r7615, %r7614};
	shr.u64 	%rd9783, %rd9383, 6;
	xor.b64  	%rd9784, %rd9781, %rd9783;
	xor.b64  	%rd9785, %rd9784, %rd9782;
	shf.r.wrap.b32 	%r7616, %r7205, %r7204, 1;
	shf.r.wrap.b32 	%r7617, %r7204, %r7205, 1;
	mov.b64 	%rd9786, {%r7617, %r7616};
	shf.r.wrap.b32 	%r7618, %r7205, %r7204, 8;
	shf.r.wrap.b32 	%r7619, %r7204, %r7205, 8;
	mov.b64 	%rd9787, {%r7619, %r7618};
	shr.u64 	%rd9788, %rd9214, 7;
	xor.b64  	%rd9789, %rd9786, %rd9788;
	xor.b64  	%rd9790, %rd9789, %rd9787;
	add.s64 	%rd9791, %rd9318, %rd9201;
	add.s64 	%rd9792, %rd9791, %rd9785;
	add.s64 	%rd9793, %rd9792, %rd9790;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7620,%dummy}, %rd9396;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7621}, %rd9396;
	}
	shf.r.wrap.b32 	%r7622, %r7621, %r7620, 19;
	shf.r.wrap.b32 	%r7623, %r7620, %r7621, 19;
	mov.b64 	%rd9794, {%r7623, %r7622};
	shf.l.wrap.b32 	%r7624, %r7620, %r7621, 3;
	shf.l.wrap.b32 	%r7625, %r7621, %r7620, 3;
	mov.b64 	%rd9795, {%r7625, %r7624};
	shr.u64 	%rd9796, %rd9396, 6;
	xor.b64  	%rd9797, %rd9794, %rd9796;
	xor.b64  	%rd9798, %rd9797, %rd9795;
	shf.r.wrap.b32 	%r7626, %r7217, %r7216, 1;
	shf.r.wrap.b32 	%r7627, %r7216, %r7217, 1;
	mov.b64 	%rd9799, {%r7627, %r7626};
	shf.r.wrap.b32 	%r7628, %r7217, %r7216, 8;
	shf.r.wrap.b32 	%r7629, %r7216, %r7217, 8;
	mov.b64 	%rd9800, {%r7629, %r7628};
	shr.u64 	%rd9801, %rd9227, 7;
	xor.b64  	%rd9802, %rd9799, %rd9801;
	xor.b64  	%rd9803, %rd9802, %rd9800;
	add.s64 	%rd9804, %rd9331, %rd9214;
	add.s64 	%rd9805, %rd9804, %rd9798;
	add.s64 	%rd9806, %rd9805, %rd9803;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7630,%dummy}, %rd9793;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7631}, %rd9793;
	}
	shf.r.wrap.b32 	%r7632, %r7631, %r7630, 19;
	shf.r.wrap.b32 	%r7633, %r7630, %r7631, 19;
	mov.b64 	%rd9807, {%r7633, %r7632};
	shf.l.wrap.b32 	%r7634, %r7630, %r7631, 3;
	shf.l.wrap.b32 	%r7635, %r7631, %r7630, 3;
	mov.b64 	%rd9808, {%r7635, %r7634};
	shr.u64 	%rd9809, %rd9793, 6;
	xor.b64  	%rd9810, %rd9807, %rd9809;
	xor.b64  	%rd9811, %rd9810, %rd9808;
	shf.r.wrap.b32 	%r7636, %r7229, %r7228, 1;
	shf.r.wrap.b32 	%r7637, %r7228, %r7229, 1;
	mov.b64 	%rd9812, {%r7637, %r7636};
	shf.r.wrap.b32 	%r7638, %r7229, %r7228, 8;
	shf.r.wrap.b32 	%r7639, %r7228, %r7229, 8;
	mov.b64 	%rd9813, {%r7639, %r7638};
	shr.u64 	%rd9814, %rd9240, 7;
	xor.b64  	%rd9815, %rd9812, %rd9814;
	xor.b64  	%rd9816, %rd9815, %rd9813;
	add.s64 	%rd9817, %rd9344, %rd9227;
	add.s64 	%rd9818, %rd9817, %rd9811;
	add.s64 	%rd9819, %rd9818, %rd9816;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7640,%dummy}, %rd9806;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7641}, %rd9806;
	}
	shf.r.wrap.b32 	%r7642, %r7641, %r7640, 19;
	shf.r.wrap.b32 	%r7643, %r7640, %r7641, 19;
	mov.b64 	%rd9820, {%r7643, %r7642};
	shf.l.wrap.b32 	%r7644, %r7640, %r7641, 3;
	shf.l.wrap.b32 	%r7645, %r7641, %r7640, 3;
	mov.b64 	%rd9821, {%r7645, %r7644};
	shr.u64 	%rd9822, %rd9806, 6;
	xor.b64  	%rd9823, %rd9820, %rd9822;
	xor.b64  	%rd9824, %rd9823, %rd9821;
	shf.r.wrap.b32 	%r7646, %r7241, %r7240, 1;
	shf.r.wrap.b32 	%r7647, %r7240, %r7241, 1;
	mov.b64 	%rd9825, {%r7647, %r7646};
	shf.r.wrap.b32 	%r7648, %r7241, %r7240, 8;
	shf.r.wrap.b32 	%r7649, %r7240, %r7241, 8;
	mov.b64 	%rd9826, {%r7649, %r7648};
	shr.u64 	%rd9827, %rd9253, 7;
	xor.b64  	%rd9828, %rd9825, %rd9827;
	xor.b64  	%rd9829, %rd9828, %rd9826;
	add.s64 	%rd9830, %rd9357, %rd9240;
	add.s64 	%rd9831, %rd9830, %rd9824;
	add.s64 	%rd9832, %rd9831, %rd9829;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7650,%dummy}, %rd9819;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7651}, %rd9819;
	}
	shf.r.wrap.b32 	%r7652, %r7651, %r7650, 19;
	shf.r.wrap.b32 	%r7653, %r7650, %r7651, 19;
	mov.b64 	%rd9833, {%r7653, %r7652};
	shf.l.wrap.b32 	%r7654, %r7650, %r7651, 3;
	shf.l.wrap.b32 	%r7655, %r7651, %r7650, 3;
	mov.b64 	%rd9834, {%r7655, %r7654};
	shr.u64 	%rd9835, %rd9819, 6;
	xor.b64  	%rd9836, %rd9833, %rd9835;
	xor.b64  	%rd9837, %rd9836, %rd9834;
	shf.r.wrap.b32 	%r7656, %r7253, %r7252, 1;
	shf.r.wrap.b32 	%r7657, %r7252, %r7253, 1;
	mov.b64 	%rd9838, {%r7657, %r7656};
	shf.r.wrap.b32 	%r7658, %r7253, %r7252, 8;
	shf.r.wrap.b32 	%r7659, %r7252, %r7253, 8;
	mov.b64 	%rd9839, {%r7659, %r7658};
	shr.u64 	%rd9840, %rd9266, 7;
	xor.b64  	%rd9841, %rd9838, %rd9840;
	xor.b64  	%rd9842, %rd9841, %rd9839;
	add.s64 	%rd9843, %rd9370, %rd9253;
	add.s64 	%rd9844, %rd9843, %rd9837;
	add.s64 	%rd9845, %rd9844, %rd9842;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7660,%dummy}, %rd9832;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7661}, %rd9832;
	}
	shf.r.wrap.b32 	%r7662, %r7661, %r7660, 19;
	shf.r.wrap.b32 	%r7663, %r7660, %r7661, 19;
	mov.b64 	%rd9846, {%r7663, %r7662};
	shf.l.wrap.b32 	%r7664, %r7660, %r7661, 3;
	shf.l.wrap.b32 	%r7665, %r7661, %r7660, 3;
	mov.b64 	%rd9847, {%r7665, %r7664};
	shr.u64 	%rd9848, %rd9832, 6;
	xor.b64  	%rd9849, %rd9846, %rd9848;
	xor.b64  	%rd9850, %rd9849, %rd9847;
	shf.r.wrap.b32 	%r7666, %r7265, %r7264, 1;
	shf.r.wrap.b32 	%r7667, %r7264, %r7265, 1;
	mov.b64 	%rd9851, {%r7667, %r7666};
	shf.r.wrap.b32 	%r7668, %r7265, %r7264, 8;
	shf.r.wrap.b32 	%r7669, %r7264, %r7265, 8;
	mov.b64 	%rd9852, {%r7669, %r7668};
	shr.u64 	%rd9853, %rd9279, 7;
	xor.b64  	%rd9854, %rd9851, %rd9853;
	xor.b64  	%rd9855, %rd9854, %rd9852;
	add.s64 	%rd9856, %rd9383, %rd9266;
	add.s64 	%rd9857, %rd9856, %rd9850;
	add.s64 	%rd9858, %rd9857, %rd9855;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7670,%dummy}, %rd9845;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7671}, %rd9845;
	}
	shf.r.wrap.b32 	%r7672, %r7671, %r7670, 19;
	shf.r.wrap.b32 	%r7673, %r7670, %r7671, 19;
	mov.b64 	%rd9859, {%r7673, %r7672};
	shf.l.wrap.b32 	%r7674, %r7670, %r7671, 3;
	shf.l.wrap.b32 	%r7675, %r7671, %r7670, 3;
	mov.b64 	%rd9860, {%r7675, %r7674};
	shr.u64 	%rd9861, %rd9845, 6;
	xor.b64  	%rd9862, %rd9859, %rd9861;
	xor.b64  	%rd9863, %rd9862, %rd9860;
	shf.r.wrap.b32 	%r7676, %r7277, %r7276, 1;
	shf.r.wrap.b32 	%r7677, %r7276, %r7277, 1;
	mov.b64 	%rd9864, {%r7677, %r7676};
	shf.r.wrap.b32 	%r7678, %r7277, %r7276, 8;
	shf.r.wrap.b32 	%r7679, %r7276, %r7277, 8;
	mov.b64 	%rd9865, {%r7679, %r7678};
	shr.u64 	%rd9866, %rd9292, 7;
	xor.b64  	%rd9867, %rd9864, %rd9866;
	xor.b64  	%rd9868, %rd9867, %rd9865;
	add.s64 	%rd9869, %rd9396, %rd9279;
	add.s64 	%rd9870, %rd9869, %rd9863;
	add.s64 	%rd9871, %rd9870, %rd9868;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7680,%dummy}, %rd9858;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7681}, %rd9858;
	}
	shf.r.wrap.b32 	%r7682, %r7681, %r7680, 19;
	shf.r.wrap.b32 	%r7683, %r7680, %r7681, 19;
	mov.b64 	%rd9872, {%r7683, %r7682};
	shf.l.wrap.b32 	%r7684, %r7680, %r7681, 3;
	shf.l.wrap.b32 	%r7685, %r7681, %r7680, 3;
	mov.b64 	%rd9873, {%r7685, %r7684};
	shr.u64 	%rd9874, %rd9858, 6;
	xor.b64  	%rd9875, %rd9872, %rd9874;
	xor.b64  	%rd9876, %rd9875, %rd9873;
	shf.r.wrap.b32 	%r7686, %r7289, %r7288, 1;
	shf.r.wrap.b32 	%r7687, %r7288, %r7289, 1;
	mov.b64 	%rd9877, {%r7687, %r7686};
	shf.r.wrap.b32 	%r7688, %r7289, %r7288, 8;
	shf.r.wrap.b32 	%r7689, %r7288, %r7289, 8;
	mov.b64 	%rd9878, {%r7689, %r7688};
	shr.u64 	%rd9879, %rd9305, 7;
	xor.b64  	%rd9880, %rd9877, %rd9879;
	xor.b64  	%rd9881, %rd9880, %rd9878;
	add.s64 	%rd9882, %rd9793, %rd9292;
	add.s64 	%rd9883, %rd9882, %rd9876;
	add.s64 	%rd9884, %rd9883, %rd9881;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7690,%dummy}, %rd9871;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7691}, %rd9871;
	}
	shf.r.wrap.b32 	%r7692, %r7691, %r7690, 19;
	shf.r.wrap.b32 	%r7693, %r7690, %r7691, 19;
	mov.b64 	%rd9885, {%r7693, %r7692};
	shf.l.wrap.b32 	%r7694, %r7690, %r7691, 3;
	shf.l.wrap.b32 	%r7695, %r7691, %r7690, 3;
	mov.b64 	%rd9886, {%r7695, %r7694};
	shr.u64 	%rd9887, %rd9871, 6;
	xor.b64  	%rd9888, %rd9885, %rd9887;
	xor.b64  	%rd9889, %rd9888, %rd9886;
	shf.r.wrap.b32 	%r7696, %r7301, %r7300, 1;
	shf.r.wrap.b32 	%r7697, %r7300, %r7301, 1;
	mov.b64 	%rd9890, {%r7697, %r7696};
	shf.r.wrap.b32 	%r7698, %r7301, %r7300, 8;
	shf.r.wrap.b32 	%r7699, %r7300, %r7301, 8;
	mov.b64 	%rd9891, {%r7699, %r7698};
	shr.u64 	%rd9892, %rd9318, 7;
	xor.b64  	%rd9893, %rd9890, %rd9892;
	xor.b64  	%rd9894, %rd9893, %rd9891;
	add.s64 	%rd9895, %rd9806, %rd9305;
	add.s64 	%rd9896, %rd9895, %rd9889;
	add.s64 	%rd9897, %rd9896, %rd9894;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7700,%dummy}, %rd9884;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7701}, %rd9884;
	}
	shf.r.wrap.b32 	%r7702, %r7701, %r7700, 19;
	shf.r.wrap.b32 	%r7703, %r7700, %r7701, 19;
	mov.b64 	%rd9898, {%r7703, %r7702};
	shf.l.wrap.b32 	%r7704, %r7700, %r7701, 3;
	shf.l.wrap.b32 	%r7705, %r7701, %r7700, 3;
	mov.b64 	%rd9899, {%r7705, %r7704};
	shr.u64 	%rd9900, %rd9884, 6;
	xor.b64  	%rd9901, %rd9898, %rd9900;
	xor.b64  	%rd9902, %rd9901, %rd9899;
	shf.r.wrap.b32 	%r7706, %r7313, %r7312, 1;
	shf.r.wrap.b32 	%r7707, %r7312, %r7313, 1;
	mov.b64 	%rd9903, {%r7707, %r7706};
	shf.r.wrap.b32 	%r7708, %r7313, %r7312, 8;
	shf.r.wrap.b32 	%r7709, %r7312, %r7313, 8;
	mov.b64 	%rd9904, {%r7709, %r7708};
	shr.u64 	%rd9905, %rd9331, 7;
	xor.b64  	%rd9906, %rd9903, %rd9905;
	xor.b64  	%rd9907, %rd9906, %rd9904;
	add.s64 	%rd9908, %rd9819, %rd9318;
	add.s64 	%rd9909, %rd9908, %rd9902;
	add.s64 	%rd9910, %rd9909, %rd9907;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7710,%dummy}, %rd9897;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7711}, %rd9897;
	}
	shf.r.wrap.b32 	%r7712, %r7711, %r7710, 19;
	shf.r.wrap.b32 	%r7713, %r7710, %r7711, 19;
	mov.b64 	%rd9911, {%r7713, %r7712};
	shf.l.wrap.b32 	%r7714, %r7710, %r7711, 3;
	shf.l.wrap.b32 	%r7715, %r7711, %r7710, 3;
	mov.b64 	%rd9912, {%r7715, %r7714};
	shr.u64 	%rd9913, %rd9897, 6;
	xor.b64  	%rd9914, %rd9911, %rd9913;
	xor.b64  	%rd9915, %rd9914, %rd9912;
	shf.r.wrap.b32 	%r7716, %r7325, %r7324, 1;
	shf.r.wrap.b32 	%r7717, %r7324, %r7325, 1;
	mov.b64 	%rd9916, {%r7717, %r7716};
	shf.r.wrap.b32 	%r7718, %r7325, %r7324, 8;
	shf.r.wrap.b32 	%r7719, %r7324, %r7325, 8;
	mov.b64 	%rd9917, {%r7719, %r7718};
	shr.u64 	%rd9918, %rd9344, 7;
	xor.b64  	%rd9919, %rd9916, %rd9918;
	xor.b64  	%rd9920, %rd9919, %rd9917;
	add.s64 	%rd9921, %rd9832, %rd9331;
	add.s64 	%rd9922, %rd9921, %rd9915;
	add.s64 	%rd9923, %rd9922, %rd9920;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7720,%dummy}, %rd9910;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7721}, %rd9910;
	}
	shf.r.wrap.b32 	%r7722, %r7721, %r7720, 19;
	shf.r.wrap.b32 	%r7723, %r7720, %r7721, 19;
	mov.b64 	%rd9924, {%r7723, %r7722};
	shf.l.wrap.b32 	%r7724, %r7720, %r7721, 3;
	shf.l.wrap.b32 	%r7725, %r7721, %r7720, 3;
	mov.b64 	%rd9925, {%r7725, %r7724};
	shr.u64 	%rd9926, %rd9910, 6;
	xor.b64  	%rd9927, %rd9924, %rd9926;
	xor.b64  	%rd9928, %rd9927, %rd9925;
	shf.r.wrap.b32 	%r7726, %r7335, %r7334, 1;
	shf.r.wrap.b32 	%r7727, %r7334, %r7335, 1;
	mov.b64 	%rd9929, {%r7727, %r7726};
	shf.r.wrap.b32 	%r7728, %r7335, %r7334, 8;
	shf.r.wrap.b32 	%r7729, %r7334, %r7335, 8;
	mov.b64 	%rd9930, {%r7729, %r7728};
	shr.u64 	%rd9931, %rd9357, 7;
	xor.b64  	%rd9932, %rd9929, %rd9931;
	xor.b64  	%rd9933, %rd9932, %rd9930;
	add.s64 	%rd9934, %rd9845, %rd9344;
	add.s64 	%rd9935, %rd9934, %rd9928;
	add.s64 	%rd9936, %rd9935, %rd9933;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7730,%dummy}, %rd9923;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7731}, %rd9923;
	}
	shf.r.wrap.b32 	%r7732, %r7731, %r7730, 19;
	shf.r.wrap.b32 	%r7733, %r7730, %r7731, 19;
	mov.b64 	%rd9937, {%r7733, %r7732};
	shf.l.wrap.b32 	%r7734, %r7730, %r7731, 3;
	shf.l.wrap.b32 	%r7735, %r7731, %r7730, 3;
	mov.b64 	%rd9938, {%r7735, %r7734};
	shr.u64 	%rd9939, %rd9923, 6;
	xor.b64  	%rd9940, %rd9937, %rd9939;
	xor.b64  	%rd9941, %rd9940, %rd9938;
	shf.r.wrap.b32 	%r7736, %r7345, %r7344, 1;
	shf.r.wrap.b32 	%r7737, %r7344, %r7345, 1;
	mov.b64 	%rd9942, {%r7737, %r7736};
	shf.r.wrap.b32 	%r7738, %r7345, %r7344, 8;
	shf.r.wrap.b32 	%r7739, %r7344, %r7345, 8;
	mov.b64 	%rd9943, {%r7739, %r7738};
	shr.u64 	%rd9944, %rd9370, 7;
	xor.b64  	%rd9945, %rd9942, %rd9944;
	xor.b64  	%rd9946, %rd9945, %rd9943;
	add.s64 	%rd9947, %rd9858, %rd9357;
	add.s64 	%rd9948, %rd9947, %rd9941;
	add.s64 	%rd9949, %rd9948, %rd9946;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7740,%dummy}, %rd9936;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7741}, %rd9936;
	}
	shf.r.wrap.b32 	%r7742, %r7741, %r7740, 19;
	shf.r.wrap.b32 	%r7743, %r7740, %r7741, 19;
	mov.b64 	%rd9950, {%r7743, %r7742};
	shf.l.wrap.b32 	%r7744, %r7740, %r7741, 3;
	shf.l.wrap.b32 	%r7745, %r7741, %r7740, 3;
	mov.b64 	%rd9951, {%r7745, %r7744};
	shr.u64 	%rd9952, %rd9936, 6;
	xor.b64  	%rd9953, %rd9950, %rd9952;
	xor.b64  	%rd9954, %rd9953, %rd9951;
	shf.r.wrap.b32 	%r7746, %r7611, %r7610, 1;
	shf.r.wrap.b32 	%r7747, %r7610, %r7611, 1;
	mov.b64 	%rd9955, {%r7747, %r7746};
	shf.r.wrap.b32 	%r7748, %r7611, %r7610, 8;
	shf.r.wrap.b32 	%r7749, %r7610, %r7611, 8;
	mov.b64 	%rd9956, {%r7749, %r7748};
	shr.u64 	%rd9957, %rd9383, 7;
	xor.b64  	%rd9958, %rd9955, %rd9957;
	xor.b64  	%rd9959, %rd9958, %rd9956;
	add.s64 	%rd9960, %rd9871, %rd9370;
	add.s64 	%rd9961, %rd9960, %rd9954;
	add.s64 	%rd9962, %rd9961, %rd9959;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7750,%dummy}, %rd9949;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7751}, %rd9949;
	}
	shf.r.wrap.b32 	%r7752, %r7751, %r7750, 19;
	shf.r.wrap.b32 	%r7753, %r7750, %r7751, 19;
	mov.b64 	%rd9963, {%r7753, %r7752};
	shf.l.wrap.b32 	%r7754, %r7750, %r7751, 3;
	shf.l.wrap.b32 	%r7755, %r7751, %r7750, 3;
	mov.b64 	%rd9964, {%r7755, %r7754};
	shr.u64 	%rd9965, %rd9949, 6;
	xor.b64  	%rd9966, %rd9963, %rd9965;
	xor.b64  	%rd9967, %rd9966, %rd9964;
	shf.r.wrap.b32 	%r7756, %r7621, %r7620, 1;
	shf.r.wrap.b32 	%r7757, %r7620, %r7621, 1;
	mov.b64 	%rd9968, {%r7757, %r7756};
	shf.r.wrap.b32 	%r7758, %r7621, %r7620, 8;
	shf.r.wrap.b32 	%r7759, %r7620, %r7621, 8;
	mov.b64 	%rd9969, {%r7759, %r7758};
	shr.u64 	%rd9970, %rd9396, 7;
	xor.b64  	%rd9971, %rd9968, %rd9970;
	xor.b64  	%rd9972, %rd9971, %rd9969;
	add.s64 	%rd9973, %rd9884, %rd9383;
	add.s64 	%rd9974, %rd9973, %rd9967;
	add.s64 	%rd9975, %rd9974, %rd9972;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7760,%dummy}, %rd9962;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7761}, %rd9962;
	}
	shf.r.wrap.b32 	%r7762, %r7761, %r7760, 19;
	shf.r.wrap.b32 	%r7763, %r7760, %r7761, 19;
	mov.b64 	%rd9976, {%r7763, %r7762};
	shf.l.wrap.b32 	%r7764, %r7760, %r7761, 3;
	shf.l.wrap.b32 	%r7765, %r7761, %r7760, 3;
	mov.b64 	%rd9977, {%r7765, %r7764};
	shr.u64 	%rd9978, %rd9962, 6;
	xor.b64  	%rd9979, %rd9976, %rd9978;
	xor.b64  	%rd9980, %rd9979, %rd9977;
	shf.r.wrap.b32 	%r7766, %r7631, %r7630, 1;
	shf.r.wrap.b32 	%r7767, %r7630, %r7631, 1;
	mov.b64 	%rd9981, {%r7767, %r7766};
	shf.r.wrap.b32 	%r7768, %r7631, %r7630, 8;
	shf.r.wrap.b32 	%r7769, %r7630, %r7631, 8;
	mov.b64 	%rd9982, {%r7769, %r7768};
	shr.u64 	%rd9983, %rd9793, 7;
	xor.b64  	%rd9984, %rd9981, %rd9983;
	xor.b64  	%rd9985, %rd9984, %rd9982;
	add.s64 	%rd9986, %rd9897, %rd9396;
	add.s64 	%rd9987, %rd9986, %rd9980;
	add.s64 	%rd9988, %rd9987, %rd9985;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7770,%dummy}, %rd9769;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7771}, %rd9769;
	}
	shf.r.wrap.b32 	%r7772, %r7771, %r7770, 14;
	shf.r.wrap.b32 	%r7773, %r7770, %r7771, 14;
	mov.b64 	%rd9989, {%r7773, %r7772};
	shf.r.wrap.b32 	%r7774, %r7771, %r7770, 18;
	shf.r.wrap.b32 	%r7775, %r7770, %r7771, 18;
	mov.b64 	%rd9990, {%r7775, %r7774};
	xor.b64  	%rd9991, %rd9990, %rd9989;
	shf.l.wrap.b32 	%r7776, %r7770, %r7771, 23;
	shf.l.wrap.b32 	%r7777, %r7771, %r7770, 23;
	mov.b64 	%rd9992, {%r7777, %r7776};
	xor.b64  	%rd9993, %rd9991, %rd9992;
	xor.b64  	%rd9994, %rd9745, %rd9721;
	and.b64  	%rd9995, %rd9994, %rd9769;
	xor.b64  	%rd9996, %rd9995, %rd9721;
	add.s64 	%rd9997, %rd9996, %rd9697;
	add.s64 	%rd9998, %rd9997, %rd9793;
	add.s64 	%rd9999, %rd9998, %rd12989;
	add.s64 	%rd10000, %rd9999, %rd9993;
	add.s64 	%rd10001, %rd10000, %rd9708;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7778,%dummy}, %rd9780;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7779}, %rd9780;
	}
	shf.r.wrap.b32 	%r7780, %r7779, %r7778, 28;
	shf.r.wrap.b32 	%r7781, %r7778, %r7779, 28;
	mov.b64 	%rd10002, {%r7781, %r7780};
	shf.l.wrap.b32 	%r7782, %r7778, %r7779, 30;
	shf.l.wrap.b32 	%r7783, %r7779, %r7778, 30;
	mov.b64 	%rd10003, {%r7783, %r7782};
	xor.b64  	%rd10004, %rd10003, %rd10002;
	shf.l.wrap.b32 	%r7784, %r7778, %r7779, 25;
	shf.l.wrap.b32 	%r7785, %r7779, %r7778, 25;
	mov.b64 	%rd10005, {%r7785, %r7784};
	xor.b64  	%rd10006, %rd10004, %rd10005;
	xor.b64  	%rd10007, %rd9780, %rd9732;
	xor.b64  	%rd10008, %rd9780, %rd9756;
	and.b64  	%rd10009, %rd10008, %rd10007;
	xor.b64  	%rd10010, %rd10009, %rd9780;
	add.s64 	%rd10011, %rd10000, %rd10010;
	add.s64 	%rd10012, %rd10011, %rd10006;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7786,%dummy}, %rd10001;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7787}, %rd10001;
	}
	shf.r.wrap.b32 	%r7788, %r7787, %r7786, 14;
	shf.r.wrap.b32 	%r7789, %r7786, %r7787, 14;
	mov.b64 	%rd10013, {%r7789, %r7788};
	shf.r.wrap.b32 	%r7790, %r7787, %r7786, 18;
	shf.r.wrap.b32 	%r7791, %r7786, %r7787, 18;
	mov.b64 	%rd10014, {%r7791, %r7790};
	xor.b64  	%rd10015, %rd10014, %rd10013;
	shf.l.wrap.b32 	%r7792, %r7786, %r7787, 23;
	shf.l.wrap.b32 	%r7793, %r7787, %r7786, 23;
	mov.b64 	%rd10016, {%r7793, %r7792};
	xor.b64  	%rd10017, %rd10015, %rd10016;
	xor.b64  	%rd10018, %rd9769, %rd9745;
	and.b64  	%rd10019, %rd10001, %rd10018;
	xor.b64  	%rd10020, %rd10019, %rd9745;
	add.s64 	%rd10021, %rd9806, %rd9721;
	add.s64 	%rd10022, %rd10021, %rd12988;
	add.s64 	%rd10023, %rd10022, %rd10020;
	add.s64 	%rd10024, %rd10023, %rd10017;
	add.s64 	%rd10025, %rd10024, %rd9732;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7794,%dummy}, %rd10012;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7795}, %rd10012;
	}
	shf.r.wrap.b32 	%r7796, %r7795, %r7794, 28;
	shf.r.wrap.b32 	%r7797, %r7794, %r7795, 28;
	mov.b64 	%rd10026, {%r7797, %r7796};
	shf.l.wrap.b32 	%r7798, %r7794, %r7795, 30;
	shf.l.wrap.b32 	%r7799, %r7795, %r7794, 30;
	mov.b64 	%rd10027, {%r7799, %r7798};
	xor.b64  	%rd10028, %rd10027, %rd10026;
	shf.l.wrap.b32 	%r7800, %r7794, %r7795, 25;
	shf.l.wrap.b32 	%r7801, %r7795, %r7794, 25;
	mov.b64 	%rd10029, {%r7801, %r7800};
	xor.b64  	%rd10030, %rd10028, %rd10029;
	xor.b64  	%rd10031, %rd10012, %rd9756;
	xor.b64  	%rd10032, %rd10012, %rd9780;
	and.b64  	%rd10033, %rd10032, %rd10031;
	xor.b64  	%rd10034, %rd10033, %rd10012;
	add.s64 	%rd10035, %rd10024, %rd10034;
	add.s64 	%rd10036, %rd10035, %rd10030;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7802,%dummy}, %rd10025;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7803}, %rd10025;
	}
	shf.r.wrap.b32 	%r7804, %r7803, %r7802, 14;
	shf.r.wrap.b32 	%r7805, %r7802, %r7803, 14;
	mov.b64 	%rd10037, {%r7805, %r7804};
	shf.r.wrap.b32 	%r7806, %r7803, %r7802, 18;
	shf.r.wrap.b32 	%r7807, %r7802, %r7803, 18;
	mov.b64 	%rd10038, {%r7807, %r7806};
	xor.b64  	%rd10039, %rd10038, %rd10037;
	shf.l.wrap.b32 	%r7808, %r7802, %r7803, 23;
	shf.l.wrap.b32 	%r7809, %r7803, %r7802, 23;
	mov.b64 	%rd10040, {%r7809, %r7808};
	xor.b64  	%rd10041, %rd10039, %rd10040;
	xor.b64  	%rd10042, %rd10001, %rd9769;
	and.b64  	%rd10043, %rd10025, %rd10042;
	xor.b64  	%rd10044, %rd10043, %rd9769;
	add.s64 	%rd10045, %rd9819, %rd9745;
	add.s64 	%rd10046, %rd10045, %rd12987;
	add.s64 	%rd10047, %rd10046, %rd10044;
	add.s64 	%rd10048, %rd10047, %rd10041;
	add.s64 	%rd10049, %rd10048, %rd9756;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7810,%dummy}, %rd10036;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7811}, %rd10036;
	}
	shf.r.wrap.b32 	%r7812, %r7811, %r7810, 28;
	shf.r.wrap.b32 	%r7813, %r7810, %r7811, 28;
	mov.b64 	%rd10050, {%r7813, %r7812};
	shf.l.wrap.b32 	%r7814, %r7810, %r7811, 30;
	shf.l.wrap.b32 	%r7815, %r7811, %r7810, 30;
	mov.b64 	%rd10051, {%r7815, %r7814};
	xor.b64  	%rd10052, %rd10051, %rd10050;
	shf.l.wrap.b32 	%r7816, %r7810, %r7811, 25;
	shf.l.wrap.b32 	%r7817, %r7811, %r7810, 25;
	mov.b64 	%rd10053, {%r7817, %r7816};
	xor.b64  	%rd10054, %rd10052, %rd10053;
	xor.b64  	%rd10055, %rd10036, %rd9780;
	xor.b64  	%rd10056, %rd10036, %rd10012;
	and.b64  	%rd10057, %rd10056, %rd10055;
	xor.b64  	%rd10058, %rd10057, %rd10036;
	add.s64 	%rd10059, %rd10048, %rd10058;
	add.s64 	%rd10060, %rd10059, %rd10054;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7818,%dummy}, %rd10049;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7819}, %rd10049;
	}
	shf.r.wrap.b32 	%r7820, %r7819, %r7818, 14;
	shf.r.wrap.b32 	%r7821, %r7818, %r7819, 14;
	mov.b64 	%rd10061, {%r7821, %r7820};
	shf.r.wrap.b32 	%r7822, %r7819, %r7818, 18;
	shf.r.wrap.b32 	%r7823, %r7818, %r7819, 18;
	mov.b64 	%rd10062, {%r7823, %r7822};
	xor.b64  	%rd10063, %rd10062, %rd10061;
	shf.l.wrap.b32 	%r7824, %r7818, %r7819, 23;
	shf.l.wrap.b32 	%r7825, %r7819, %r7818, 23;
	mov.b64 	%rd10064, {%r7825, %r7824};
	xor.b64  	%rd10065, %rd10063, %rd10064;
	xor.b64  	%rd10066, %rd10025, %rd10001;
	and.b64  	%rd10067, %rd10049, %rd10066;
	xor.b64  	%rd10068, %rd10067, %rd10001;
	add.s64 	%rd10069, %rd9832, %rd9769;
	add.s64 	%rd10070, %rd10069, %rd12986;
	add.s64 	%rd10071, %rd10070, %rd10068;
	add.s64 	%rd10072, %rd10071, %rd10065;
	add.s64 	%rd10073, %rd10072, %rd9780;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7826,%dummy}, %rd10060;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7827}, %rd10060;
	}
	shf.r.wrap.b32 	%r7828, %r7827, %r7826, 28;
	shf.r.wrap.b32 	%r7829, %r7826, %r7827, 28;
	mov.b64 	%rd10074, {%r7829, %r7828};
	shf.l.wrap.b32 	%r7830, %r7826, %r7827, 30;
	shf.l.wrap.b32 	%r7831, %r7827, %r7826, 30;
	mov.b64 	%rd10075, {%r7831, %r7830};
	xor.b64  	%rd10076, %rd10075, %rd10074;
	shf.l.wrap.b32 	%r7832, %r7826, %r7827, 25;
	shf.l.wrap.b32 	%r7833, %r7827, %r7826, 25;
	mov.b64 	%rd10077, {%r7833, %r7832};
	xor.b64  	%rd10078, %rd10076, %rd10077;
	xor.b64  	%rd10079, %rd10060, %rd10012;
	xor.b64  	%rd10080, %rd10060, %rd10036;
	and.b64  	%rd10081, %rd10080, %rd10079;
	xor.b64  	%rd10082, %rd10081, %rd10060;
	add.s64 	%rd10083, %rd10072, %rd10082;
	add.s64 	%rd10084, %rd10083, %rd10078;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7834,%dummy}, %rd10073;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7835}, %rd10073;
	}
	shf.r.wrap.b32 	%r7836, %r7835, %r7834, 14;
	shf.r.wrap.b32 	%r7837, %r7834, %r7835, 14;
	mov.b64 	%rd10085, {%r7837, %r7836};
	shf.r.wrap.b32 	%r7838, %r7835, %r7834, 18;
	shf.r.wrap.b32 	%r7839, %r7834, %r7835, 18;
	mov.b64 	%rd10086, {%r7839, %r7838};
	xor.b64  	%rd10087, %rd10086, %rd10085;
	shf.l.wrap.b32 	%r7840, %r7834, %r7835, 23;
	shf.l.wrap.b32 	%r7841, %r7835, %r7834, 23;
	mov.b64 	%rd10088, {%r7841, %r7840};
	xor.b64  	%rd10089, %rd10087, %rd10088;
	xor.b64  	%rd10090, %rd10049, %rd10025;
	and.b64  	%rd10091, %rd10073, %rd10090;
	xor.b64  	%rd10092, %rd10091, %rd10025;
	add.s64 	%rd10093, %rd10001, %rd9845;
	add.s64 	%rd10094, %rd10093, %rd12985;
	add.s64 	%rd10095, %rd10094, %rd10092;
	add.s64 	%rd10096, %rd10095, %rd10089;
	add.s64 	%rd10097, %rd10096, %rd10012;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7842,%dummy}, %rd10084;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7843}, %rd10084;
	}
	shf.r.wrap.b32 	%r7844, %r7843, %r7842, 28;
	shf.r.wrap.b32 	%r7845, %r7842, %r7843, 28;
	mov.b64 	%rd10098, {%r7845, %r7844};
	shf.l.wrap.b32 	%r7846, %r7842, %r7843, 30;
	shf.l.wrap.b32 	%r7847, %r7843, %r7842, 30;
	mov.b64 	%rd10099, {%r7847, %r7846};
	xor.b64  	%rd10100, %rd10099, %rd10098;
	shf.l.wrap.b32 	%r7848, %r7842, %r7843, 25;
	shf.l.wrap.b32 	%r7849, %r7843, %r7842, 25;
	mov.b64 	%rd10101, {%r7849, %r7848};
	xor.b64  	%rd10102, %rd10100, %rd10101;
	xor.b64  	%rd10103, %rd10084, %rd10036;
	xor.b64  	%rd10104, %rd10084, %rd10060;
	and.b64  	%rd10105, %rd10104, %rd10103;
	xor.b64  	%rd10106, %rd10105, %rd10084;
	add.s64 	%rd10107, %rd10096, %rd10106;
	add.s64 	%rd10108, %rd10107, %rd10102;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7850,%dummy}, %rd10097;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7851}, %rd10097;
	}
	shf.r.wrap.b32 	%r7852, %r7851, %r7850, 14;
	shf.r.wrap.b32 	%r7853, %r7850, %r7851, 14;
	mov.b64 	%rd10109, {%r7853, %r7852};
	shf.r.wrap.b32 	%r7854, %r7851, %r7850, 18;
	shf.r.wrap.b32 	%r7855, %r7850, %r7851, 18;
	mov.b64 	%rd10110, {%r7855, %r7854};
	xor.b64  	%rd10111, %rd10110, %rd10109;
	shf.l.wrap.b32 	%r7856, %r7850, %r7851, 23;
	shf.l.wrap.b32 	%r7857, %r7851, %r7850, 23;
	mov.b64 	%rd10112, {%r7857, %r7856};
	xor.b64  	%rd10113, %rd10111, %rd10112;
	xor.b64  	%rd10114, %rd10073, %rd10049;
	and.b64  	%rd10115, %rd10097, %rd10114;
	xor.b64  	%rd10116, %rd10115, %rd10049;
	add.s64 	%rd10117, %rd10025, %rd9858;
	add.s64 	%rd10118, %rd10117, %rd12984;
	add.s64 	%rd10119, %rd10118, %rd10116;
	add.s64 	%rd10120, %rd10119, %rd10113;
	add.s64 	%rd10121, %rd10120, %rd10036;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7858,%dummy}, %rd10108;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7859}, %rd10108;
	}
	shf.r.wrap.b32 	%r7860, %r7859, %r7858, 28;
	shf.r.wrap.b32 	%r7861, %r7858, %r7859, 28;
	mov.b64 	%rd10122, {%r7861, %r7860};
	shf.l.wrap.b32 	%r7862, %r7858, %r7859, 30;
	shf.l.wrap.b32 	%r7863, %r7859, %r7858, 30;
	mov.b64 	%rd10123, {%r7863, %r7862};
	xor.b64  	%rd10124, %rd10123, %rd10122;
	shf.l.wrap.b32 	%r7864, %r7858, %r7859, 25;
	shf.l.wrap.b32 	%r7865, %r7859, %r7858, 25;
	mov.b64 	%rd10125, {%r7865, %r7864};
	xor.b64  	%rd10126, %rd10124, %rd10125;
	xor.b64  	%rd10127, %rd10108, %rd10060;
	xor.b64  	%rd10128, %rd10108, %rd10084;
	and.b64  	%rd10129, %rd10128, %rd10127;
	xor.b64  	%rd10130, %rd10129, %rd10108;
	add.s64 	%rd10131, %rd10120, %rd10130;
	add.s64 	%rd10132, %rd10131, %rd10126;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7866,%dummy}, %rd10121;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7867}, %rd10121;
	}
	shf.r.wrap.b32 	%r7868, %r7867, %r7866, 14;
	shf.r.wrap.b32 	%r7869, %r7866, %r7867, 14;
	mov.b64 	%rd10133, {%r7869, %r7868};
	shf.r.wrap.b32 	%r7870, %r7867, %r7866, 18;
	shf.r.wrap.b32 	%r7871, %r7866, %r7867, 18;
	mov.b64 	%rd10134, {%r7871, %r7870};
	xor.b64  	%rd10135, %rd10134, %rd10133;
	shf.l.wrap.b32 	%r7872, %r7866, %r7867, 23;
	shf.l.wrap.b32 	%r7873, %r7867, %r7866, 23;
	mov.b64 	%rd10136, {%r7873, %r7872};
	xor.b64  	%rd10137, %rd10135, %rd10136;
	xor.b64  	%rd10138, %rd10097, %rd10073;
	and.b64  	%rd10139, %rd10121, %rd10138;
	xor.b64  	%rd10140, %rd10139, %rd10073;
	add.s64 	%rd10141, %rd10049, %rd9871;
	add.s64 	%rd10142, %rd10141, %rd12983;
	add.s64 	%rd10143, %rd10142, %rd10140;
	add.s64 	%rd10144, %rd10143, %rd10137;
	add.s64 	%rd10145, %rd10144, %rd10060;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7874,%dummy}, %rd10132;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7875}, %rd10132;
	}
	shf.r.wrap.b32 	%r7876, %r7875, %r7874, 28;
	shf.r.wrap.b32 	%r7877, %r7874, %r7875, 28;
	mov.b64 	%rd10146, {%r7877, %r7876};
	shf.l.wrap.b32 	%r7878, %r7874, %r7875, 30;
	shf.l.wrap.b32 	%r7879, %r7875, %r7874, 30;
	mov.b64 	%rd10147, {%r7879, %r7878};
	xor.b64  	%rd10148, %rd10147, %rd10146;
	shf.l.wrap.b32 	%r7880, %r7874, %r7875, 25;
	shf.l.wrap.b32 	%r7881, %r7875, %r7874, 25;
	mov.b64 	%rd10149, {%r7881, %r7880};
	xor.b64  	%rd10150, %rd10148, %rd10149;
	xor.b64  	%rd10151, %rd10132, %rd10084;
	xor.b64  	%rd10152, %rd10132, %rd10108;
	and.b64  	%rd10153, %rd10152, %rd10151;
	xor.b64  	%rd10154, %rd10153, %rd10132;
	add.s64 	%rd10155, %rd10144, %rd10154;
	add.s64 	%rd10156, %rd10155, %rd10150;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7882,%dummy}, %rd10145;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7883}, %rd10145;
	}
	shf.r.wrap.b32 	%r7884, %r7883, %r7882, 14;
	shf.r.wrap.b32 	%r7885, %r7882, %r7883, 14;
	mov.b64 	%rd10157, {%r7885, %r7884};
	shf.r.wrap.b32 	%r7886, %r7883, %r7882, 18;
	shf.r.wrap.b32 	%r7887, %r7882, %r7883, 18;
	mov.b64 	%rd10158, {%r7887, %r7886};
	xor.b64  	%rd10159, %rd10158, %rd10157;
	shf.l.wrap.b32 	%r7888, %r7882, %r7883, 23;
	shf.l.wrap.b32 	%r7889, %r7883, %r7882, 23;
	mov.b64 	%rd10160, {%r7889, %r7888};
	xor.b64  	%rd10161, %rd10159, %rd10160;
	xor.b64  	%rd10162, %rd10121, %rd10097;
	and.b64  	%rd10163, %rd10145, %rd10162;
	xor.b64  	%rd10164, %rd10163, %rd10097;
	add.s64 	%rd10165, %rd10073, %rd9884;
	add.s64 	%rd10166, %rd10165, %rd12982;
	add.s64 	%rd10167, %rd10166, %rd10164;
	add.s64 	%rd10168, %rd10167, %rd10161;
	add.s64 	%rd10169, %rd10168, %rd10084;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7890,%dummy}, %rd10156;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7891}, %rd10156;
	}
	shf.r.wrap.b32 	%r7892, %r7891, %r7890, 28;
	shf.r.wrap.b32 	%r7893, %r7890, %r7891, 28;
	mov.b64 	%rd10170, {%r7893, %r7892};
	shf.l.wrap.b32 	%r7894, %r7890, %r7891, 30;
	shf.l.wrap.b32 	%r7895, %r7891, %r7890, 30;
	mov.b64 	%rd10171, {%r7895, %r7894};
	xor.b64  	%rd10172, %rd10171, %rd10170;
	shf.l.wrap.b32 	%r7896, %r7890, %r7891, 25;
	shf.l.wrap.b32 	%r7897, %r7891, %r7890, 25;
	mov.b64 	%rd10173, {%r7897, %r7896};
	xor.b64  	%rd10174, %rd10172, %rd10173;
	xor.b64  	%rd10175, %rd10156, %rd10108;
	xor.b64  	%rd10176, %rd10156, %rd10132;
	and.b64  	%rd10177, %rd10176, %rd10175;
	xor.b64  	%rd10178, %rd10177, %rd10156;
	add.s64 	%rd10179, %rd10168, %rd10178;
	add.s64 	%rd10180, %rd10179, %rd10174;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7898,%dummy}, %rd10169;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7899}, %rd10169;
	}
	shf.r.wrap.b32 	%r7900, %r7899, %r7898, 14;
	shf.r.wrap.b32 	%r7901, %r7898, %r7899, 14;
	mov.b64 	%rd10181, {%r7901, %r7900};
	shf.r.wrap.b32 	%r7902, %r7899, %r7898, 18;
	shf.r.wrap.b32 	%r7903, %r7898, %r7899, 18;
	mov.b64 	%rd10182, {%r7903, %r7902};
	xor.b64  	%rd10183, %rd10182, %rd10181;
	shf.l.wrap.b32 	%r7904, %r7898, %r7899, 23;
	shf.l.wrap.b32 	%r7905, %r7899, %r7898, 23;
	mov.b64 	%rd10184, {%r7905, %r7904};
	xor.b64  	%rd10185, %rd10183, %rd10184;
	xor.b64  	%rd10186, %rd10145, %rd10121;
	and.b64  	%rd10187, %rd10169, %rd10186;
	xor.b64  	%rd10188, %rd10187, %rd10121;
	add.s64 	%rd10189, %rd10097, %rd9897;
	add.s64 	%rd10190, %rd10189, %rd12981;
	add.s64 	%rd10191, %rd10190, %rd10188;
	add.s64 	%rd10192, %rd10191, %rd10185;
	add.s64 	%rd10193, %rd10192, %rd10108;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7906,%dummy}, %rd10180;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7907}, %rd10180;
	}
	shf.r.wrap.b32 	%r7908, %r7907, %r7906, 28;
	shf.r.wrap.b32 	%r7909, %r7906, %r7907, 28;
	mov.b64 	%rd10194, {%r7909, %r7908};
	shf.l.wrap.b32 	%r7910, %r7906, %r7907, 30;
	shf.l.wrap.b32 	%r7911, %r7907, %r7906, 30;
	mov.b64 	%rd10195, {%r7911, %r7910};
	xor.b64  	%rd10196, %rd10195, %rd10194;
	shf.l.wrap.b32 	%r7912, %r7906, %r7907, 25;
	shf.l.wrap.b32 	%r7913, %r7907, %r7906, 25;
	mov.b64 	%rd10197, {%r7913, %r7912};
	xor.b64  	%rd10198, %rd10196, %rd10197;
	xor.b64  	%rd10199, %rd10180, %rd10132;
	xor.b64  	%rd10200, %rd10180, %rd10156;
	and.b64  	%rd10201, %rd10200, %rd10199;
	xor.b64  	%rd10202, %rd10201, %rd10180;
	add.s64 	%rd10203, %rd10192, %rd10202;
	add.s64 	%rd10204, %rd10203, %rd10198;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7914,%dummy}, %rd10193;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7915}, %rd10193;
	}
	shf.r.wrap.b32 	%r7916, %r7915, %r7914, 14;
	shf.r.wrap.b32 	%r7917, %r7914, %r7915, 14;
	mov.b64 	%rd10205, {%r7917, %r7916};
	shf.r.wrap.b32 	%r7918, %r7915, %r7914, 18;
	shf.r.wrap.b32 	%r7919, %r7914, %r7915, 18;
	mov.b64 	%rd10206, {%r7919, %r7918};
	xor.b64  	%rd10207, %rd10206, %rd10205;
	shf.l.wrap.b32 	%r7920, %r7914, %r7915, 23;
	shf.l.wrap.b32 	%r7921, %r7915, %r7914, 23;
	mov.b64 	%rd10208, {%r7921, %r7920};
	xor.b64  	%rd10209, %rd10207, %rd10208;
	xor.b64  	%rd10210, %rd10169, %rd10145;
	and.b64  	%rd10211, %rd10193, %rd10210;
	xor.b64  	%rd10212, %rd10211, %rd10145;
	add.s64 	%rd10213, %rd10121, %rd9910;
	add.s64 	%rd10214, %rd10213, %rd12980;
	add.s64 	%rd10215, %rd10214, %rd10212;
	add.s64 	%rd10216, %rd10215, %rd10209;
	add.s64 	%rd10217, %rd10216, %rd10132;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7922,%dummy}, %rd10204;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7923}, %rd10204;
	}
	shf.r.wrap.b32 	%r7924, %r7923, %r7922, 28;
	shf.r.wrap.b32 	%r7925, %r7922, %r7923, 28;
	mov.b64 	%rd10218, {%r7925, %r7924};
	shf.l.wrap.b32 	%r7926, %r7922, %r7923, 30;
	shf.l.wrap.b32 	%r7927, %r7923, %r7922, 30;
	mov.b64 	%rd10219, {%r7927, %r7926};
	xor.b64  	%rd10220, %rd10219, %rd10218;
	shf.l.wrap.b32 	%r7928, %r7922, %r7923, 25;
	shf.l.wrap.b32 	%r7929, %r7923, %r7922, 25;
	mov.b64 	%rd10221, {%r7929, %r7928};
	xor.b64  	%rd10222, %rd10220, %rd10221;
	xor.b64  	%rd10223, %rd10204, %rd10156;
	xor.b64  	%rd10224, %rd10204, %rd10180;
	and.b64  	%rd10225, %rd10224, %rd10223;
	xor.b64  	%rd10226, %rd10225, %rd10204;
	add.s64 	%rd10227, %rd10216, %rd10226;
	add.s64 	%rd10228, %rd10227, %rd10222;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7930,%dummy}, %rd10217;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7931}, %rd10217;
	}
	shf.r.wrap.b32 	%r7932, %r7931, %r7930, 14;
	shf.r.wrap.b32 	%r7933, %r7930, %r7931, 14;
	mov.b64 	%rd10229, {%r7933, %r7932};
	shf.r.wrap.b32 	%r7934, %r7931, %r7930, 18;
	shf.r.wrap.b32 	%r7935, %r7930, %r7931, 18;
	mov.b64 	%rd10230, {%r7935, %r7934};
	xor.b64  	%rd10231, %rd10230, %rd10229;
	shf.l.wrap.b32 	%r7936, %r7930, %r7931, 23;
	shf.l.wrap.b32 	%r7937, %r7931, %r7930, 23;
	mov.b64 	%rd10232, {%r7937, %r7936};
	xor.b64  	%rd10233, %rd10231, %rd10232;
	xor.b64  	%rd10234, %rd10193, %rd10169;
	and.b64  	%rd10235, %rd10217, %rd10234;
	xor.b64  	%rd10236, %rd10235, %rd10169;
	add.s64 	%rd10237, %rd10145, %rd9923;
	add.s64 	%rd10238, %rd10237, %rd12979;
	add.s64 	%rd10239, %rd10238, %rd10236;
	add.s64 	%rd10240, %rd10239, %rd10233;
	add.s64 	%rd10241, %rd10240, %rd10156;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7938,%dummy}, %rd10228;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7939}, %rd10228;
	}
	shf.r.wrap.b32 	%r7940, %r7939, %r7938, 28;
	shf.r.wrap.b32 	%r7941, %r7938, %r7939, 28;
	mov.b64 	%rd10242, {%r7941, %r7940};
	shf.l.wrap.b32 	%r7942, %r7938, %r7939, 30;
	shf.l.wrap.b32 	%r7943, %r7939, %r7938, 30;
	mov.b64 	%rd10243, {%r7943, %r7942};
	xor.b64  	%rd10244, %rd10243, %rd10242;
	shf.l.wrap.b32 	%r7944, %r7938, %r7939, 25;
	shf.l.wrap.b32 	%r7945, %r7939, %r7938, 25;
	mov.b64 	%rd10245, {%r7945, %r7944};
	xor.b64  	%rd10246, %rd10244, %rd10245;
	xor.b64  	%rd10247, %rd10228, %rd10180;
	xor.b64  	%rd10248, %rd10228, %rd10204;
	and.b64  	%rd10249, %rd10248, %rd10247;
	xor.b64  	%rd10250, %rd10249, %rd10228;
	add.s64 	%rd10251, %rd10240, %rd10250;
	add.s64 	%rd10252, %rd10251, %rd10246;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7946,%dummy}, %rd10241;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7947}, %rd10241;
	}
	shf.r.wrap.b32 	%r7948, %r7947, %r7946, 14;
	shf.r.wrap.b32 	%r7949, %r7946, %r7947, 14;
	mov.b64 	%rd10253, {%r7949, %r7948};
	shf.r.wrap.b32 	%r7950, %r7947, %r7946, 18;
	shf.r.wrap.b32 	%r7951, %r7946, %r7947, 18;
	mov.b64 	%rd10254, {%r7951, %r7950};
	xor.b64  	%rd10255, %rd10254, %rd10253;
	shf.l.wrap.b32 	%r7952, %r7946, %r7947, 23;
	shf.l.wrap.b32 	%r7953, %r7947, %r7946, 23;
	mov.b64 	%rd10256, {%r7953, %r7952};
	xor.b64  	%rd10257, %rd10255, %rd10256;
	xor.b64  	%rd10258, %rd10217, %rd10193;
	and.b64  	%rd10259, %rd10241, %rd10258;
	xor.b64  	%rd10260, %rd10259, %rd10193;
	add.s64 	%rd10261, %rd10169, %rd9936;
	add.s64 	%rd10262, %rd10261, %rd12978;
	add.s64 	%rd10263, %rd10262, %rd10260;
	add.s64 	%rd10264, %rd10263, %rd10257;
	add.s64 	%rd10265, %rd10264, %rd10180;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7954,%dummy}, %rd10252;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7955}, %rd10252;
	}
	shf.r.wrap.b32 	%r7956, %r7955, %r7954, 28;
	shf.r.wrap.b32 	%r7957, %r7954, %r7955, 28;
	mov.b64 	%rd10266, {%r7957, %r7956};
	shf.l.wrap.b32 	%r7958, %r7954, %r7955, 30;
	shf.l.wrap.b32 	%r7959, %r7955, %r7954, 30;
	mov.b64 	%rd10267, {%r7959, %r7958};
	xor.b64  	%rd10268, %rd10267, %rd10266;
	shf.l.wrap.b32 	%r7960, %r7954, %r7955, 25;
	shf.l.wrap.b32 	%r7961, %r7955, %r7954, 25;
	mov.b64 	%rd10269, {%r7961, %r7960};
	xor.b64  	%rd10270, %rd10268, %rd10269;
	xor.b64  	%rd10271, %rd10252, %rd10204;
	xor.b64  	%rd10272, %rd10252, %rd10228;
	and.b64  	%rd10273, %rd10272, %rd10271;
	xor.b64  	%rd10274, %rd10273, %rd10252;
	add.s64 	%rd10275, %rd10264, %rd10274;
	add.s64 	%rd10276, %rd10275, %rd10270;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7962,%dummy}, %rd10265;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7963}, %rd10265;
	}
	shf.r.wrap.b32 	%r7964, %r7963, %r7962, 14;
	shf.r.wrap.b32 	%r7965, %r7962, %r7963, 14;
	mov.b64 	%rd10277, {%r7965, %r7964};
	shf.r.wrap.b32 	%r7966, %r7963, %r7962, 18;
	shf.r.wrap.b32 	%r7967, %r7962, %r7963, 18;
	mov.b64 	%rd10278, {%r7967, %r7966};
	xor.b64  	%rd10279, %rd10278, %rd10277;
	shf.l.wrap.b32 	%r7968, %r7962, %r7963, 23;
	shf.l.wrap.b32 	%r7969, %r7963, %r7962, 23;
	mov.b64 	%rd10280, {%r7969, %r7968};
	xor.b64  	%rd10281, %rd10279, %rd10280;
	xor.b64  	%rd10282, %rd10241, %rd10217;
	and.b64  	%rd10283, %rd10265, %rd10282;
	xor.b64  	%rd10284, %rd10283, %rd10217;
	add.s64 	%rd10285, %rd10193, %rd9949;
	add.s64 	%rd10286, %rd10285, %rd12977;
	add.s64 	%rd10287, %rd10286, %rd10284;
	add.s64 	%rd10288, %rd10287, %rd10281;
	add.s64 	%rd10289, %rd10288, %rd10204;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7970,%dummy}, %rd10276;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7971}, %rd10276;
	}
	shf.r.wrap.b32 	%r7972, %r7971, %r7970, 28;
	shf.r.wrap.b32 	%r7973, %r7970, %r7971, 28;
	mov.b64 	%rd10290, {%r7973, %r7972};
	shf.l.wrap.b32 	%r7974, %r7970, %r7971, 30;
	shf.l.wrap.b32 	%r7975, %r7971, %r7970, 30;
	mov.b64 	%rd10291, {%r7975, %r7974};
	xor.b64  	%rd10292, %rd10291, %rd10290;
	shf.l.wrap.b32 	%r7976, %r7970, %r7971, 25;
	shf.l.wrap.b32 	%r7977, %r7971, %r7970, 25;
	mov.b64 	%rd10293, {%r7977, %r7976};
	xor.b64  	%rd10294, %rd10292, %rd10293;
	xor.b64  	%rd10295, %rd10276, %rd10228;
	xor.b64  	%rd10296, %rd10276, %rd10252;
	and.b64  	%rd10297, %rd10296, %rd10295;
	xor.b64  	%rd10298, %rd10297, %rd10276;
	add.s64 	%rd10299, %rd10288, %rd10298;
	add.s64 	%rd10300, %rd10299, %rd10294;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7978,%dummy}, %rd10289;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7979}, %rd10289;
	}
	shf.r.wrap.b32 	%r7980, %r7979, %r7978, 14;
	shf.r.wrap.b32 	%r7981, %r7978, %r7979, 14;
	mov.b64 	%rd10301, {%r7981, %r7980};
	shf.r.wrap.b32 	%r7982, %r7979, %r7978, 18;
	shf.r.wrap.b32 	%r7983, %r7978, %r7979, 18;
	mov.b64 	%rd10302, {%r7983, %r7982};
	xor.b64  	%rd10303, %rd10302, %rd10301;
	shf.l.wrap.b32 	%r7984, %r7978, %r7979, 23;
	shf.l.wrap.b32 	%r7985, %r7979, %r7978, 23;
	mov.b64 	%rd10304, {%r7985, %r7984};
	xor.b64  	%rd10305, %rd10303, %rd10304;
	xor.b64  	%rd10306, %rd10265, %rd10241;
	and.b64  	%rd10307, %rd10289, %rd10306;
	xor.b64  	%rd10308, %rd10307, %rd10241;
	add.s64 	%rd10309, %rd10217, %rd9962;
	add.s64 	%rd10310, %rd10309, %rd12976;
	add.s64 	%rd10311, %rd10310, %rd10308;
	add.s64 	%rd10312, %rd10311, %rd10305;
	add.s64 	%rd10313, %rd10312, %rd10228;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7986,%dummy}, %rd10300;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7987}, %rd10300;
	}
	shf.r.wrap.b32 	%r7988, %r7987, %r7986, 28;
	shf.r.wrap.b32 	%r7989, %r7986, %r7987, 28;
	mov.b64 	%rd10314, {%r7989, %r7988};
	shf.l.wrap.b32 	%r7990, %r7986, %r7987, 30;
	shf.l.wrap.b32 	%r7991, %r7987, %r7986, 30;
	mov.b64 	%rd10315, {%r7991, %r7990};
	xor.b64  	%rd10316, %rd10315, %rd10314;
	shf.l.wrap.b32 	%r7992, %r7986, %r7987, 25;
	shf.l.wrap.b32 	%r7993, %r7987, %r7986, 25;
	mov.b64 	%rd10317, {%r7993, %r7992};
	xor.b64  	%rd10318, %rd10316, %rd10317;
	xor.b64  	%rd10319, %rd10300, %rd10252;
	xor.b64  	%rd10320, %rd10300, %rd10276;
	and.b64  	%rd10321, %rd10320, %rd10319;
	xor.b64  	%rd10322, %rd10321, %rd10300;
	add.s64 	%rd10323, %rd10312, %rd10322;
	add.s64 	%rd10324, %rd10323, %rd10318;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7994,%dummy}, %rd10313;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7995}, %rd10313;
	}
	shf.r.wrap.b32 	%r7996, %r7995, %r7994, 14;
	shf.r.wrap.b32 	%r7997, %r7994, %r7995, 14;
	mov.b64 	%rd10325, {%r7997, %r7996};
	shf.r.wrap.b32 	%r7998, %r7995, %r7994, 18;
	shf.r.wrap.b32 	%r7999, %r7994, %r7995, 18;
	mov.b64 	%rd10326, {%r7999, %r7998};
	xor.b64  	%rd10327, %rd10326, %rd10325;
	shf.l.wrap.b32 	%r8000, %r7994, %r7995, 23;
	shf.l.wrap.b32 	%r8001, %r7995, %r7994, 23;
	mov.b64 	%rd10328, {%r8001, %r8000};
	xor.b64  	%rd10329, %rd10327, %rd10328;
	xor.b64  	%rd10330, %rd10289, %rd10265;
	and.b64  	%rd10331, %rd10313, %rd10330;
	xor.b64  	%rd10332, %rd10331, %rd10265;
	add.s64 	%rd10333, %rd10241, %rd9975;
	add.s64 	%rd10334, %rd10333, %rd12975;
	add.s64 	%rd10335, %rd10334, %rd10332;
	add.s64 	%rd10336, %rd10335, %rd10329;
	add.s64 	%rd10337, %rd10336, %rd10252;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8002,%dummy}, %rd10324;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8003}, %rd10324;
	}
	shf.r.wrap.b32 	%r8004, %r8003, %r8002, 28;
	shf.r.wrap.b32 	%r8005, %r8002, %r8003, 28;
	mov.b64 	%rd10338, {%r8005, %r8004};
	shf.l.wrap.b32 	%r8006, %r8002, %r8003, 30;
	shf.l.wrap.b32 	%r8007, %r8003, %r8002, 30;
	mov.b64 	%rd10339, {%r8007, %r8006};
	xor.b64  	%rd10340, %rd10339, %rd10338;
	shf.l.wrap.b32 	%r8008, %r8002, %r8003, 25;
	shf.l.wrap.b32 	%r8009, %r8003, %r8002, 25;
	mov.b64 	%rd10341, {%r8009, %r8008};
	xor.b64  	%rd10342, %rd10340, %rd10341;
	xor.b64  	%rd10343, %rd10324, %rd10276;
	xor.b64  	%rd10344, %rd10324, %rd10300;
	and.b64  	%rd10345, %rd10344, %rd10343;
	xor.b64  	%rd10346, %rd10345, %rd10324;
	add.s64 	%rd10347, %rd10336, %rd10346;
	add.s64 	%rd10348, %rd10347, %rd10342;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8010,%dummy}, %rd10337;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8011}, %rd10337;
	}
	shf.r.wrap.b32 	%r8012, %r8011, %r8010, 14;
	shf.r.wrap.b32 	%r8013, %r8010, %r8011, 14;
	mov.b64 	%rd10349, {%r8013, %r8012};
	shf.r.wrap.b32 	%r8014, %r8011, %r8010, 18;
	shf.r.wrap.b32 	%r8015, %r8010, %r8011, 18;
	mov.b64 	%rd10350, {%r8015, %r8014};
	xor.b64  	%rd10351, %rd10350, %rd10349;
	shf.l.wrap.b32 	%r8016, %r8010, %r8011, 23;
	shf.l.wrap.b32 	%r8017, %r8011, %r8010, 23;
	mov.b64 	%rd10352, {%r8017, %r8016};
	xor.b64  	%rd10353, %rd10351, %rd10352;
	xor.b64  	%rd10354, %rd10313, %rd10289;
	and.b64  	%rd10355, %rd10337, %rd10354;
	xor.b64  	%rd10356, %rd10355, %rd10289;
	add.s64 	%rd10357, %rd10265, %rd9988;
	add.s64 	%rd10358, %rd10357, %rd12974;
	add.s64 	%rd10359, %rd10358, %rd10356;
	add.s64 	%rd10360, %rd10359, %rd10353;
	add.s64 	%rd10361, %rd10360, %rd10276;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8018,%dummy}, %rd10348;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8019}, %rd10348;
	}
	shf.r.wrap.b32 	%r8020, %r8019, %r8018, 28;
	shf.r.wrap.b32 	%r8021, %r8018, %r8019, 28;
	mov.b64 	%rd10362, {%r8021, %r8020};
	shf.l.wrap.b32 	%r8022, %r8018, %r8019, 30;
	shf.l.wrap.b32 	%r8023, %r8019, %r8018, 30;
	mov.b64 	%rd10363, {%r8023, %r8022};
	xor.b64  	%rd10364, %rd10363, %rd10362;
	shf.l.wrap.b32 	%r8024, %r8018, %r8019, 25;
	shf.l.wrap.b32 	%r8025, %r8019, %r8018, 25;
	mov.b64 	%rd10365, {%r8025, %r8024};
	xor.b64  	%rd10366, %rd10364, %rd10365;
	xor.b64  	%rd10367, %rd10348, %rd10300;
	xor.b64  	%rd10368, %rd10348, %rd10324;
	and.b64  	%rd10369, %rd10368, %rd10367;
	xor.b64  	%rd10370, %rd10369, %rd10348;
	add.s64 	%rd10371, %rd10360, %rd10370;
	add.s64 	%rd10372, %rd10371, %rd10366;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8026,%dummy}, %rd9975;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8027}, %rd9975;
	}
	shf.r.wrap.b32 	%r8028, %r8027, %r8026, 19;
	shf.r.wrap.b32 	%r8029, %r8026, %r8027, 19;
	mov.b64 	%rd10373, {%r8029, %r8028};
	shf.l.wrap.b32 	%r8030, %r8026, %r8027, 3;
	shf.l.wrap.b32 	%r8031, %r8027, %r8026, 3;
	mov.b64 	%rd10374, {%r8031, %r8030};
	shr.u64 	%rd10375, %rd9975, 6;
	xor.b64  	%rd10376, %rd10373, %rd10375;
	xor.b64  	%rd10377, %rd10376, %rd10374;
	shf.r.wrap.b32 	%r8032, %r7641, %r7640, 1;
	shf.r.wrap.b32 	%r8033, %r7640, %r7641, 1;
	mov.b64 	%rd10378, {%r8033, %r8032};
	shf.r.wrap.b32 	%r8034, %r7641, %r7640, 8;
	shf.r.wrap.b32 	%r8035, %r7640, %r7641, 8;
	mov.b64 	%rd10379, {%r8035, %r8034};
	shr.u64 	%rd10380, %rd9806, 7;
	xor.b64  	%rd10381, %rd10378, %rd10380;
	xor.b64  	%rd10382, %rd10381, %rd10379;
	add.s64 	%rd10383, %rd9910, %rd9793;
	add.s64 	%rd10384, %rd10383, %rd10377;
	add.s64 	%rd10385, %rd10384, %rd10382;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8036,%dummy}, %rd9988;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8037}, %rd9988;
	}
	shf.r.wrap.b32 	%r8038, %r8037, %r8036, 19;
	shf.r.wrap.b32 	%r8039, %r8036, %r8037, 19;
	mov.b64 	%rd10386, {%r8039, %r8038};
	shf.l.wrap.b32 	%r8040, %r8036, %r8037, 3;
	shf.l.wrap.b32 	%r8041, %r8037, %r8036, 3;
	mov.b64 	%rd10387, {%r8041, %r8040};
	shr.u64 	%rd10388, %rd9988, 6;
	xor.b64  	%rd10389, %rd10386, %rd10388;
	xor.b64  	%rd10390, %rd10389, %rd10387;
	shf.r.wrap.b32 	%r8042, %r7651, %r7650, 1;
	shf.r.wrap.b32 	%r8043, %r7650, %r7651, 1;
	mov.b64 	%rd10391, {%r8043, %r8042};
	shf.r.wrap.b32 	%r8044, %r7651, %r7650, 8;
	shf.r.wrap.b32 	%r8045, %r7650, %r7651, 8;
	mov.b64 	%rd10392, {%r8045, %r8044};
	shr.u64 	%rd10393, %rd9819, 7;
	xor.b64  	%rd10394, %rd10391, %rd10393;
	xor.b64  	%rd10395, %rd10394, %rd10392;
	add.s64 	%rd10396, %rd9923, %rd9806;
	add.s64 	%rd10397, %rd10396, %rd10390;
	add.s64 	%rd10398, %rd10397, %rd10395;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8046,%dummy}, %rd10385;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8047}, %rd10385;
	}
	shf.r.wrap.b32 	%r8048, %r8047, %r8046, 19;
	shf.r.wrap.b32 	%r8049, %r8046, %r8047, 19;
	mov.b64 	%rd10399, {%r8049, %r8048};
	shf.l.wrap.b32 	%r8050, %r8046, %r8047, 3;
	shf.l.wrap.b32 	%r8051, %r8047, %r8046, 3;
	mov.b64 	%rd10400, {%r8051, %r8050};
	shr.u64 	%rd10401, %rd10385, 6;
	xor.b64  	%rd10402, %rd10399, %rd10401;
	xor.b64  	%rd10403, %rd10402, %rd10400;
	shf.r.wrap.b32 	%r8052, %r7661, %r7660, 1;
	shf.r.wrap.b32 	%r8053, %r7660, %r7661, 1;
	mov.b64 	%rd10404, {%r8053, %r8052};
	shf.r.wrap.b32 	%r8054, %r7661, %r7660, 8;
	shf.r.wrap.b32 	%r8055, %r7660, %r7661, 8;
	mov.b64 	%rd10405, {%r8055, %r8054};
	shr.u64 	%rd10406, %rd9832, 7;
	xor.b64  	%rd10407, %rd10404, %rd10406;
	xor.b64  	%rd10408, %rd10407, %rd10405;
	add.s64 	%rd10409, %rd9936, %rd9819;
	add.s64 	%rd10410, %rd10409, %rd10403;
	add.s64 	%rd10411, %rd10410, %rd10408;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8056,%dummy}, %rd10398;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8057}, %rd10398;
	}
	shf.r.wrap.b32 	%r8058, %r8057, %r8056, 19;
	shf.r.wrap.b32 	%r8059, %r8056, %r8057, 19;
	mov.b64 	%rd10412, {%r8059, %r8058};
	shf.l.wrap.b32 	%r8060, %r8056, %r8057, 3;
	shf.l.wrap.b32 	%r8061, %r8057, %r8056, 3;
	mov.b64 	%rd10413, {%r8061, %r8060};
	shr.u64 	%rd10414, %rd10398, 6;
	xor.b64  	%rd10415, %rd10412, %rd10414;
	xor.b64  	%rd10416, %rd10415, %rd10413;
	shf.r.wrap.b32 	%r8062, %r7671, %r7670, 1;
	shf.r.wrap.b32 	%r8063, %r7670, %r7671, 1;
	mov.b64 	%rd10417, {%r8063, %r8062};
	shf.r.wrap.b32 	%r8064, %r7671, %r7670, 8;
	shf.r.wrap.b32 	%r8065, %r7670, %r7671, 8;
	mov.b64 	%rd10418, {%r8065, %r8064};
	shr.u64 	%rd10419, %rd9845, 7;
	xor.b64  	%rd10420, %rd10417, %rd10419;
	xor.b64  	%rd10421, %rd10420, %rd10418;
	add.s64 	%rd10422, %rd9949, %rd9832;
	add.s64 	%rd10423, %rd10422, %rd10416;
	add.s64 	%rd10424, %rd10423, %rd10421;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8066,%dummy}, %rd10411;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8067}, %rd10411;
	}
	shf.r.wrap.b32 	%r8068, %r8067, %r8066, 19;
	shf.r.wrap.b32 	%r8069, %r8066, %r8067, 19;
	mov.b64 	%rd10425, {%r8069, %r8068};
	shf.l.wrap.b32 	%r8070, %r8066, %r8067, 3;
	shf.l.wrap.b32 	%r8071, %r8067, %r8066, 3;
	mov.b64 	%rd10426, {%r8071, %r8070};
	shr.u64 	%rd10427, %rd10411, 6;
	xor.b64  	%rd10428, %rd10425, %rd10427;
	xor.b64  	%rd10429, %rd10428, %rd10426;
	shf.r.wrap.b32 	%r8072, %r7681, %r7680, 1;
	shf.r.wrap.b32 	%r8073, %r7680, %r7681, 1;
	mov.b64 	%rd10430, {%r8073, %r8072};
	shf.r.wrap.b32 	%r8074, %r7681, %r7680, 8;
	shf.r.wrap.b32 	%r8075, %r7680, %r7681, 8;
	mov.b64 	%rd10431, {%r8075, %r8074};
	shr.u64 	%rd10432, %rd9858, 7;
	xor.b64  	%rd10433, %rd10430, %rd10432;
	xor.b64  	%rd10434, %rd10433, %rd10431;
	add.s64 	%rd10435, %rd9962, %rd9845;
	add.s64 	%rd10436, %rd10435, %rd10429;
	add.s64 	%rd10437, %rd10436, %rd10434;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8076,%dummy}, %rd10424;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8077}, %rd10424;
	}
	shf.r.wrap.b32 	%r8078, %r8077, %r8076, 19;
	shf.r.wrap.b32 	%r8079, %r8076, %r8077, 19;
	mov.b64 	%rd10438, {%r8079, %r8078};
	shf.l.wrap.b32 	%r8080, %r8076, %r8077, 3;
	shf.l.wrap.b32 	%r8081, %r8077, %r8076, 3;
	mov.b64 	%rd10439, {%r8081, %r8080};
	shr.u64 	%rd10440, %rd10424, 6;
	xor.b64  	%rd10441, %rd10438, %rd10440;
	xor.b64  	%rd10442, %rd10441, %rd10439;
	shf.r.wrap.b32 	%r8082, %r7691, %r7690, 1;
	shf.r.wrap.b32 	%r8083, %r7690, %r7691, 1;
	mov.b64 	%rd10443, {%r8083, %r8082};
	shf.r.wrap.b32 	%r8084, %r7691, %r7690, 8;
	shf.r.wrap.b32 	%r8085, %r7690, %r7691, 8;
	mov.b64 	%rd10444, {%r8085, %r8084};
	shr.u64 	%rd10445, %rd9871, 7;
	xor.b64  	%rd10446, %rd10443, %rd10445;
	xor.b64  	%rd10447, %rd10446, %rd10444;
	add.s64 	%rd10448, %rd9975, %rd9858;
	add.s64 	%rd10449, %rd10448, %rd10442;
	add.s64 	%rd10450, %rd10449, %rd10447;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8086,%dummy}, %rd10437;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8087}, %rd10437;
	}
	shf.r.wrap.b32 	%r8088, %r8087, %r8086, 19;
	shf.r.wrap.b32 	%r8089, %r8086, %r8087, 19;
	mov.b64 	%rd10451, {%r8089, %r8088};
	shf.l.wrap.b32 	%r8090, %r8086, %r8087, 3;
	shf.l.wrap.b32 	%r8091, %r8087, %r8086, 3;
	mov.b64 	%rd10452, {%r8091, %r8090};
	shr.u64 	%rd10453, %rd10437, 6;
	xor.b64  	%rd10454, %rd10451, %rd10453;
	xor.b64  	%rd10455, %rd10454, %rd10452;
	shf.r.wrap.b32 	%r8092, %r7701, %r7700, 1;
	shf.r.wrap.b32 	%r8093, %r7700, %r7701, 1;
	mov.b64 	%rd10456, {%r8093, %r8092};
	shf.r.wrap.b32 	%r8094, %r7701, %r7700, 8;
	shf.r.wrap.b32 	%r8095, %r7700, %r7701, 8;
	mov.b64 	%rd10457, {%r8095, %r8094};
	shr.u64 	%rd10458, %rd9884, 7;
	xor.b64  	%rd10459, %rd10456, %rd10458;
	xor.b64  	%rd10460, %rd10459, %rd10457;
	add.s64 	%rd10461, %rd9988, %rd9871;
	add.s64 	%rd10462, %rd10461, %rd10455;
	add.s64 	%rd10463, %rd10462, %rd10460;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8096,%dummy}, %rd10450;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8097}, %rd10450;
	}
	shf.r.wrap.b32 	%r8098, %r8097, %r8096, 19;
	shf.r.wrap.b32 	%r8099, %r8096, %r8097, 19;
	mov.b64 	%rd10464, {%r8099, %r8098};
	shf.l.wrap.b32 	%r8100, %r8096, %r8097, 3;
	shf.l.wrap.b32 	%r8101, %r8097, %r8096, 3;
	mov.b64 	%rd10465, {%r8101, %r8100};
	shr.u64 	%rd10466, %rd10450, 6;
	xor.b64  	%rd10467, %rd10464, %rd10466;
	xor.b64  	%rd10468, %rd10467, %rd10465;
	shf.r.wrap.b32 	%r8102, %r7711, %r7710, 1;
	shf.r.wrap.b32 	%r8103, %r7710, %r7711, 1;
	mov.b64 	%rd10469, {%r8103, %r8102};
	shf.r.wrap.b32 	%r8104, %r7711, %r7710, 8;
	shf.r.wrap.b32 	%r8105, %r7710, %r7711, 8;
	mov.b64 	%rd10470, {%r8105, %r8104};
	shr.u64 	%rd10471, %rd9897, 7;
	xor.b64  	%rd10472, %rd10469, %rd10471;
	xor.b64  	%rd10473, %rd10472, %rd10470;
	add.s64 	%rd10474, %rd10385, %rd9884;
	add.s64 	%rd10475, %rd10474, %rd10468;
	add.s64 	%rd10476, %rd10475, %rd10473;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8106,%dummy}, %rd10463;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8107}, %rd10463;
	}
	shf.r.wrap.b32 	%r8108, %r8107, %r8106, 19;
	shf.r.wrap.b32 	%r8109, %r8106, %r8107, 19;
	mov.b64 	%rd10477, {%r8109, %r8108};
	shf.l.wrap.b32 	%r8110, %r8106, %r8107, 3;
	shf.l.wrap.b32 	%r8111, %r8107, %r8106, 3;
	mov.b64 	%rd10478, {%r8111, %r8110};
	shr.u64 	%rd10479, %rd10463, 6;
	xor.b64  	%rd10480, %rd10477, %rd10479;
	xor.b64  	%rd10481, %rd10480, %rd10478;
	shf.r.wrap.b32 	%r8112, %r7721, %r7720, 1;
	shf.r.wrap.b32 	%r8113, %r7720, %r7721, 1;
	mov.b64 	%rd10482, {%r8113, %r8112};
	shf.r.wrap.b32 	%r8114, %r7721, %r7720, 8;
	shf.r.wrap.b32 	%r8115, %r7720, %r7721, 8;
	mov.b64 	%rd10483, {%r8115, %r8114};
	shr.u64 	%rd10484, %rd9910, 7;
	xor.b64  	%rd10485, %rd10482, %rd10484;
	xor.b64  	%rd10486, %rd10485, %rd10483;
	add.s64 	%rd10487, %rd10398, %rd9897;
	add.s64 	%rd10488, %rd10487, %rd10481;
	add.s64 	%rd10489, %rd10488, %rd10486;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8116,%dummy}, %rd10476;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8117}, %rd10476;
	}
	shf.r.wrap.b32 	%r8118, %r8117, %r8116, 19;
	shf.r.wrap.b32 	%r8119, %r8116, %r8117, 19;
	mov.b64 	%rd10490, {%r8119, %r8118};
	shf.l.wrap.b32 	%r8120, %r8116, %r8117, 3;
	shf.l.wrap.b32 	%r8121, %r8117, %r8116, 3;
	mov.b64 	%rd10491, {%r8121, %r8120};
	shr.u64 	%rd10492, %rd10476, 6;
	xor.b64  	%rd10493, %rd10490, %rd10492;
	xor.b64  	%rd10494, %rd10493, %rd10491;
	shf.r.wrap.b32 	%r8122, %r7731, %r7730, 1;
	shf.r.wrap.b32 	%r8123, %r7730, %r7731, 1;
	mov.b64 	%rd10495, {%r8123, %r8122};
	shf.r.wrap.b32 	%r8124, %r7731, %r7730, 8;
	shf.r.wrap.b32 	%r8125, %r7730, %r7731, 8;
	mov.b64 	%rd10496, {%r8125, %r8124};
	shr.u64 	%rd10497, %rd9923, 7;
	xor.b64  	%rd10498, %rd10495, %rd10497;
	xor.b64  	%rd10499, %rd10498, %rd10496;
	add.s64 	%rd10500, %rd10411, %rd9910;
	add.s64 	%rd10501, %rd10500, %rd10494;
	add.s64 	%rd10502, %rd10501, %rd10499;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8126,%dummy}, %rd10489;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8127}, %rd10489;
	}
	shf.r.wrap.b32 	%r8128, %r8127, %r8126, 19;
	shf.r.wrap.b32 	%r8129, %r8126, %r8127, 19;
	mov.b64 	%rd10503, {%r8129, %r8128};
	shf.l.wrap.b32 	%r8130, %r8126, %r8127, 3;
	shf.l.wrap.b32 	%r8131, %r8127, %r8126, 3;
	mov.b64 	%rd10504, {%r8131, %r8130};
	shr.u64 	%rd10505, %rd10489, 6;
	xor.b64  	%rd10506, %rd10503, %rd10505;
	xor.b64  	%rd10507, %rd10506, %rd10504;
	shf.r.wrap.b32 	%r8132, %r7741, %r7740, 1;
	shf.r.wrap.b32 	%r8133, %r7740, %r7741, 1;
	mov.b64 	%rd10508, {%r8133, %r8132};
	shf.r.wrap.b32 	%r8134, %r7741, %r7740, 8;
	shf.r.wrap.b32 	%r8135, %r7740, %r7741, 8;
	mov.b64 	%rd10509, {%r8135, %r8134};
	shr.u64 	%rd10510, %rd9936, 7;
	xor.b64  	%rd10511, %rd10508, %rd10510;
	xor.b64  	%rd10512, %rd10511, %rd10509;
	add.s64 	%rd10513, %rd10424, %rd9923;
	add.s64 	%rd10514, %rd10513, %rd10507;
	add.s64 	%rd10515, %rd10514, %rd10512;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8136,%dummy}, %rd10502;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8137}, %rd10502;
	}
	shf.r.wrap.b32 	%r8138, %r8137, %r8136, 19;
	shf.r.wrap.b32 	%r8139, %r8136, %r8137, 19;
	mov.b64 	%rd10516, {%r8139, %r8138};
	shf.l.wrap.b32 	%r8140, %r8136, %r8137, 3;
	shf.l.wrap.b32 	%r8141, %r8137, %r8136, 3;
	mov.b64 	%rd10517, {%r8141, %r8140};
	shr.u64 	%rd10518, %rd10502, 6;
	xor.b64  	%rd10519, %rd10516, %rd10518;
	xor.b64  	%rd10520, %rd10519, %rd10517;
	shf.r.wrap.b32 	%r8142, %r7751, %r7750, 1;
	shf.r.wrap.b32 	%r8143, %r7750, %r7751, 1;
	mov.b64 	%rd10521, {%r8143, %r8142};
	shf.r.wrap.b32 	%r8144, %r7751, %r7750, 8;
	shf.r.wrap.b32 	%r8145, %r7750, %r7751, 8;
	mov.b64 	%rd10522, {%r8145, %r8144};
	shr.u64 	%rd10523, %rd9949, 7;
	xor.b64  	%rd10524, %rd10521, %rd10523;
	xor.b64  	%rd10525, %rd10524, %rd10522;
	add.s64 	%rd10526, %rd10437, %rd9936;
	add.s64 	%rd10527, %rd10526, %rd10520;
	add.s64 	%rd10528, %rd10527, %rd10525;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8146,%dummy}, %rd10515;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8147}, %rd10515;
	}
	shf.r.wrap.b32 	%r8148, %r8147, %r8146, 19;
	shf.r.wrap.b32 	%r8149, %r8146, %r8147, 19;
	mov.b64 	%rd10529, {%r8149, %r8148};
	shf.l.wrap.b32 	%r8150, %r8146, %r8147, 3;
	shf.l.wrap.b32 	%r8151, %r8147, %r8146, 3;
	mov.b64 	%rd10530, {%r8151, %r8150};
	shr.u64 	%rd10531, %rd10515, 6;
	xor.b64  	%rd10532, %rd10529, %rd10531;
	xor.b64  	%rd10533, %rd10532, %rd10530;
	shf.r.wrap.b32 	%r8152, %r7761, %r7760, 1;
	shf.r.wrap.b32 	%r8153, %r7760, %r7761, 1;
	mov.b64 	%rd10534, {%r8153, %r8152};
	shf.r.wrap.b32 	%r8154, %r7761, %r7760, 8;
	shf.r.wrap.b32 	%r8155, %r7760, %r7761, 8;
	mov.b64 	%rd10535, {%r8155, %r8154};
	shr.u64 	%rd10536, %rd9962, 7;
	xor.b64  	%rd10537, %rd10534, %rd10536;
	xor.b64  	%rd10538, %rd10537, %rd10535;
	add.s64 	%rd10539, %rd10450, %rd9949;
	add.s64 	%rd10540, %rd10539, %rd10533;
	add.s64 	%rd10541, %rd10540, %rd10538;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8156,%dummy}, %rd10528;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8157}, %rd10528;
	}
	shf.r.wrap.b32 	%r8158, %r8157, %r8156, 19;
	shf.r.wrap.b32 	%r8159, %r8156, %r8157, 19;
	mov.b64 	%rd10542, {%r8159, %r8158};
	shf.l.wrap.b32 	%r8160, %r8156, %r8157, 3;
	shf.l.wrap.b32 	%r8161, %r8157, %r8156, 3;
	mov.b64 	%rd10543, {%r8161, %r8160};
	shr.u64 	%rd10544, %rd10528, 6;
	xor.b64  	%rd10545, %rd10542, %rd10544;
	xor.b64  	%rd10546, %rd10545, %rd10543;
	shf.r.wrap.b32 	%r8162, %r8027, %r8026, 1;
	shf.r.wrap.b32 	%r8163, %r8026, %r8027, 1;
	mov.b64 	%rd10547, {%r8163, %r8162};
	shf.r.wrap.b32 	%r8164, %r8027, %r8026, 8;
	shf.r.wrap.b32 	%r8165, %r8026, %r8027, 8;
	mov.b64 	%rd10548, {%r8165, %r8164};
	shr.u64 	%rd10549, %rd9975, 7;
	xor.b64  	%rd10550, %rd10547, %rd10549;
	xor.b64  	%rd10551, %rd10550, %rd10548;
	add.s64 	%rd10552, %rd10463, %rd9962;
	add.s64 	%rd10553, %rd10552, %rd10546;
	add.s64 	%rd10554, %rd10553, %rd10551;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8166,%dummy}, %rd10541;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8167}, %rd10541;
	}
	shf.r.wrap.b32 	%r8168, %r8167, %r8166, 19;
	shf.r.wrap.b32 	%r8169, %r8166, %r8167, 19;
	mov.b64 	%rd10555, {%r8169, %r8168};
	shf.l.wrap.b32 	%r8170, %r8166, %r8167, 3;
	shf.l.wrap.b32 	%r8171, %r8167, %r8166, 3;
	mov.b64 	%rd10556, {%r8171, %r8170};
	shr.u64 	%rd10557, %rd10541, 6;
	xor.b64  	%rd10558, %rd10555, %rd10557;
	xor.b64  	%rd10559, %rd10558, %rd10556;
	shf.r.wrap.b32 	%r8172, %r8037, %r8036, 1;
	shf.r.wrap.b32 	%r8173, %r8036, %r8037, 1;
	mov.b64 	%rd10560, {%r8173, %r8172};
	shf.r.wrap.b32 	%r8174, %r8037, %r8036, 8;
	shf.r.wrap.b32 	%r8175, %r8036, %r8037, 8;
	mov.b64 	%rd10561, {%r8175, %r8174};
	shr.u64 	%rd10562, %rd9988, 7;
	xor.b64  	%rd10563, %rd10560, %rd10562;
	xor.b64  	%rd10564, %rd10563, %rd10561;
	add.s64 	%rd10565, %rd10476, %rd9975;
	add.s64 	%rd10566, %rd10565, %rd10559;
	add.s64 	%rd10567, %rd10566, %rd10564;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8176,%dummy}, %rd10554;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8177}, %rd10554;
	}
	shf.r.wrap.b32 	%r8178, %r8177, %r8176, 19;
	shf.r.wrap.b32 	%r8179, %r8176, %r8177, 19;
	mov.b64 	%rd10568, {%r8179, %r8178};
	shf.l.wrap.b32 	%r8180, %r8176, %r8177, 3;
	shf.l.wrap.b32 	%r8181, %r8177, %r8176, 3;
	mov.b64 	%rd10569, {%r8181, %r8180};
	shr.u64 	%rd10570, %rd10554, 6;
	xor.b64  	%rd10571, %rd10568, %rd10570;
	xor.b64  	%rd10572, %rd10571, %rd10569;
	shf.r.wrap.b32 	%r8182, %r8047, %r8046, 1;
	shf.r.wrap.b32 	%r8183, %r8046, %r8047, 1;
	mov.b64 	%rd10573, {%r8183, %r8182};
	shf.r.wrap.b32 	%r8184, %r8047, %r8046, 8;
	shf.r.wrap.b32 	%r8185, %r8046, %r8047, 8;
	mov.b64 	%rd10574, {%r8185, %r8184};
	shr.u64 	%rd10575, %rd10385, 7;
	xor.b64  	%rd10576, %rd10573, %rd10575;
	xor.b64  	%rd10577, %rd10576, %rd10574;
	add.s64 	%rd10578, %rd10489, %rd9988;
	add.s64 	%rd10579, %rd10578, %rd10572;
	add.s64 	%rd10580, %rd10579, %rd10577;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8186,%dummy}, %rd10361;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8187}, %rd10361;
	}
	shf.r.wrap.b32 	%r8188, %r8187, %r8186, 14;
	shf.r.wrap.b32 	%r8189, %r8186, %r8187, 14;
	mov.b64 	%rd10581, {%r8189, %r8188};
	shf.r.wrap.b32 	%r8190, %r8187, %r8186, 18;
	shf.r.wrap.b32 	%r8191, %r8186, %r8187, 18;
	mov.b64 	%rd10582, {%r8191, %r8190};
	xor.b64  	%rd10583, %rd10582, %rd10581;
	shf.l.wrap.b32 	%r8192, %r8186, %r8187, 23;
	shf.l.wrap.b32 	%r8193, %r8187, %r8186, 23;
	mov.b64 	%rd10584, {%r8193, %r8192};
	xor.b64  	%rd10585, %rd10583, %rd10584;
	xor.b64  	%rd10586, %rd10337, %rd10313;
	and.b64  	%rd10587, %rd10586, %rd10361;
	xor.b64  	%rd10588, %rd10587, %rd10313;
	add.s64 	%rd10589, %rd10588, %rd10289;
	add.s64 	%rd10590, %rd10589, %rd10385;
	add.s64 	%rd10591, %rd10590, %rd12973;
	add.s64 	%rd10592, %rd10591, %rd10585;
	add.s64 	%rd10593, %rd10592, %rd10300;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8194,%dummy}, %rd10372;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8195}, %rd10372;
	}
	shf.r.wrap.b32 	%r8196, %r8195, %r8194, 28;
	shf.r.wrap.b32 	%r8197, %r8194, %r8195, 28;
	mov.b64 	%rd10594, {%r8197, %r8196};
	shf.l.wrap.b32 	%r8198, %r8194, %r8195, 30;
	shf.l.wrap.b32 	%r8199, %r8195, %r8194, 30;
	mov.b64 	%rd10595, {%r8199, %r8198};
	xor.b64  	%rd10596, %rd10595, %rd10594;
	shf.l.wrap.b32 	%r8200, %r8194, %r8195, 25;
	shf.l.wrap.b32 	%r8201, %r8195, %r8194, 25;
	mov.b64 	%rd10597, {%r8201, %r8200};
	xor.b64  	%rd10598, %rd10596, %rd10597;
	xor.b64  	%rd10599, %rd10372, %rd10324;
	xor.b64  	%rd10600, %rd10372, %rd10348;
	and.b64  	%rd10601, %rd10600, %rd10599;
	xor.b64  	%rd10602, %rd10601, %rd10372;
	add.s64 	%rd10603, %rd10592, %rd10602;
	add.s64 	%rd10604, %rd10603, %rd10598;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8202,%dummy}, %rd10593;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8203}, %rd10593;
	}
	shf.r.wrap.b32 	%r8204, %r8203, %r8202, 14;
	shf.r.wrap.b32 	%r8205, %r8202, %r8203, 14;
	mov.b64 	%rd10605, {%r8205, %r8204};
	shf.r.wrap.b32 	%r8206, %r8203, %r8202, 18;
	shf.r.wrap.b32 	%r8207, %r8202, %r8203, 18;
	mov.b64 	%rd10606, {%r8207, %r8206};
	xor.b64  	%rd10607, %rd10606, %rd10605;
	shf.l.wrap.b32 	%r8208, %r8202, %r8203, 23;
	shf.l.wrap.b32 	%r8209, %r8203, %r8202, 23;
	mov.b64 	%rd10608, {%r8209, %r8208};
	xor.b64  	%rd10609, %rd10607, %rd10608;
	xor.b64  	%rd10610, %rd10361, %rd10337;
	and.b64  	%rd10611, %rd10593, %rd10610;
	xor.b64  	%rd10612, %rd10611, %rd10337;
	add.s64 	%rd10613, %rd10398, %rd10313;
	add.s64 	%rd10614, %rd10613, %rd12972;
	add.s64 	%rd10615, %rd10614, %rd10612;
	add.s64 	%rd10616, %rd10615, %rd10609;
	add.s64 	%rd10617, %rd10616, %rd10324;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8210,%dummy}, %rd10604;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8211}, %rd10604;
	}
	shf.r.wrap.b32 	%r8212, %r8211, %r8210, 28;
	shf.r.wrap.b32 	%r8213, %r8210, %r8211, 28;
	mov.b64 	%rd10618, {%r8213, %r8212};
	shf.l.wrap.b32 	%r8214, %r8210, %r8211, 30;
	shf.l.wrap.b32 	%r8215, %r8211, %r8210, 30;
	mov.b64 	%rd10619, {%r8215, %r8214};
	xor.b64  	%rd10620, %rd10619, %rd10618;
	shf.l.wrap.b32 	%r8216, %r8210, %r8211, 25;
	shf.l.wrap.b32 	%r8217, %r8211, %r8210, 25;
	mov.b64 	%rd10621, {%r8217, %r8216};
	xor.b64  	%rd10622, %rd10620, %rd10621;
	xor.b64  	%rd10623, %rd10604, %rd10348;
	xor.b64  	%rd10624, %rd10604, %rd10372;
	and.b64  	%rd10625, %rd10624, %rd10623;
	xor.b64  	%rd10626, %rd10625, %rd10604;
	add.s64 	%rd10627, %rd10616, %rd10626;
	add.s64 	%rd10628, %rd10627, %rd10622;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8218,%dummy}, %rd10617;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8219}, %rd10617;
	}
	shf.r.wrap.b32 	%r8220, %r8219, %r8218, 14;
	shf.r.wrap.b32 	%r8221, %r8218, %r8219, 14;
	mov.b64 	%rd10629, {%r8221, %r8220};
	shf.r.wrap.b32 	%r8222, %r8219, %r8218, 18;
	shf.r.wrap.b32 	%r8223, %r8218, %r8219, 18;
	mov.b64 	%rd10630, {%r8223, %r8222};
	xor.b64  	%rd10631, %rd10630, %rd10629;
	shf.l.wrap.b32 	%r8224, %r8218, %r8219, 23;
	shf.l.wrap.b32 	%r8225, %r8219, %r8218, 23;
	mov.b64 	%rd10632, {%r8225, %r8224};
	xor.b64  	%rd10633, %rd10631, %rd10632;
	xor.b64  	%rd10634, %rd10593, %rd10361;
	and.b64  	%rd10635, %rd10617, %rd10634;
	xor.b64  	%rd10636, %rd10635, %rd10361;
	add.s64 	%rd10637, %rd10411, %rd10337;
	add.s64 	%rd10638, %rd10637, %rd12971;
	add.s64 	%rd10639, %rd10638, %rd10636;
	add.s64 	%rd10640, %rd10639, %rd10633;
	add.s64 	%rd10641, %rd10640, %rd10348;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8226,%dummy}, %rd10628;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8227}, %rd10628;
	}
	shf.r.wrap.b32 	%r8228, %r8227, %r8226, 28;
	shf.r.wrap.b32 	%r8229, %r8226, %r8227, 28;
	mov.b64 	%rd10642, {%r8229, %r8228};
	shf.l.wrap.b32 	%r8230, %r8226, %r8227, 30;
	shf.l.wrap.b32 	%r8231, %r8227, %r8226, 30;
	mov.b64 	%rd10643, {%r8231, %r8230};
	xor.b64  	%rd10644, %rd10643, %rd10642;
	shf.l.wrap.b32 	%r8232, %r8226, %r8227, 25;
	shf.l.wrap.b32 	%r8233, %r8227, %r8226, 25;
	mov.b64 	%rd10645, {%r8233, %r8232};
	xor.b64  	%rd10646, %rd10644, %rd10645;
	xor.b64  	%rd10647, %rd10628, %rd10372;
	xor.b64  	%rd10648, %rd10628, %rd10604;
	and.b64  	%rd10649, %rd10648, %rd10647;
	xor.b64  	%rd10650, %rd10649, %rd10628;
	add.s64 	%rd10651, %rd10640, %rd10650;
	add.s64 	%rd10652, %rd10651, %rd10646;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8234,%dummy}, %rd10641;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8235}, %rd10641;
	}
	shf.r.wrap.b32 	%r8236, %r8235, %r8234, 14;
	shf.r.wrap.b32 	%r8237, %r8234, %r8235, 14;
	mov.b64 	%rd10653, {%r8237, %r8236};
	shf.r.wrap.b32 	%r8238, %r8235, %r8234, 18;
	shf.r.wrap.b32 	%r8239, %r8234, %r8235, 18;
	mov.b64 	%rd10654, {%r8239, %r8238};
	xor.b64  	%rd10655, %rd10654, %rd10653;
	shf.l.wrap.b32 	%r8240, %r8234, %r8235, 23;
	shf.l.wrap.b32 	%r8241, %r8235, %r8234, 23;
	mov.b64 	%rd10656, {%r8241, %r8240};
	xor.b64  	%rd10657, %rd10655, %rd10656;
	xor.b64  	%rd10658, %rd10617, %rd10593;
	and.b64  	%rd10659, %rd10641, %rd10658;
	xor.b64  	%rd10660, %rd10659, %rd10593;
	add.s64 	%rd10661, %rd10424, %rd10361;
	add.s64 	%rd10662, %rd10661, %rd12970;
	add.s64 	%rd10663, %rd10662, %rd10660;
	add.s64 	%rd10664, %rd10663, %rd10657;
	add.s64 	%rd10665, %rd10664, %rd10372;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8242,%dummy}, %rd10652;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8243}, %rd10652;
	}
	shf.r.wrap.b32 	%r8244, %r8243, %r8242, 28;
	shf.r.wrap.b32 	%r8245, %r8242, %r8243, 28;
	mov.b64 	%rd10666, {%r8245, %r8244};
	shf.l.wrap.b32 	%r8246, %r8242, %r8243, 30;
	shf.l.wrap.b32 	%r8247, %r8243, %r8242, 30;
	mov.b64 	%rd10667, {%r8247, %r8246};
	xor.b64  	%rd10668, %rd10667, %rd10666;
	shf.l.wrap.b32 	%r8248, %r8242, %r8243, 25;
	shf.l.wrap.b32 	%r8249, %r8243, %r8242, 25;
	mov.b64 	%rd10669, {%r8249, %r8248};
	xor.b64  	%rd10670, %rd10668, %rd10669;
	xor.b64  	%rd10671, %rd10652, %rd10604;
	xor.b64  	%rd10672, %rd10652, %rd10628;
	and.b64  	%rd10673, %rd10672, %rd10671;
	xor.b64  	%rd10674, %rd10673, %rd10652;
	add.s64 	%rd10675, %rd10664, %rd10674;
	add.s64 	%rd10676, %rd10675, %rd10670;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8250,%dummy}, %rd10665;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8251}, %rd10665;
	}
	shf.r.wrap.b32 	%r8252, %r8251, %r8250, 14;
	shf.r.wrap.b32 	%r8253, %r8250, %r8251, 14;
	mov.b64 	%rd10677, {%r8253, %r8252};
	shf.r.wrap.b32 	%r8254, %r8251, %r8250, 18;
	shf.r.wrap.b32 	%r8255, %r8250, %r8251, 18;
	mov.b64 	%rd10678, {%r8255, %r8254};
	xor.b64  	%rd10679, %rd10678, %rd10677;
	shf.l.wrap.b32 	%r8256, %r8250, %r8251, 23;
	shf.l.wrap.b32 	%r8257, %r8251, %r8250, 23;
	mov.b64 	%rd10680, {%r8257, %r8256};
	xor.b64  	%rd10681, %rd10679, %rd10680;
	xor.b64  	%rd10682, %rd10641, %rd10617;
	and.b64  	%rd10683, %rd10665, %rd10682;
	xor.b64  	%rd10684, %rd10683, %rd10617;
	add.s64 	%rd10685, %rd10593, %rd10437;
	add.s64 	%rd10686, %rd10685, %rd12969;
	add.s64 	%rd10687, %rd10686, %rd10684;
	add.s64 	%rd10688, %rd10687, %rd10681;
	add.s64 	%rd10689, %rd10688, %rd10604;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8258,%dummy}, %rd10676;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8259}, %rd10676;
	}
	shf.r.wrap.b32 	%r8260, %r8259, %r8258, 28;
	shf.r.wrap.b32 	%r8261, %r8258, %r8259, 28;
	mov.b64 	%rd10690, {%r8261, %r8260};
	shf.l.wrap.b32 	%r8262, %r8258, %r8259, 30;
	shf.l.wrap.b32 	%r8263, %r8259, %r8258, 30;
	mov.b64 	%rd10691, {%r8263, %r8262};
	xor.b64  	%rd10692, %rd10691, %rd10690;
	shf.l.wrap.b32 	%r8264, %r8258, %r8259, 25;
	shf.l.wrap.b32 	%r8265, %r8259, %r8258, 25;
	mov.b64 	%rd10693, {%r8265, %r8264};
	xor.b64  	%rd10694, %rd10692, %rd10693;
	xor.b64  	%rd10695, %rd10676, %rd10628;
	xor.b64  	%rd10696, %rd10676, %rd10652;
	and.b64  	%rd10697, %rd10696, %rd10695;
	xor.b64  	%rd10698, %rd10697, %rd10676;
	add.s64 	%rd10699, %rd10688, %rd10698;
	add.s64 	%rd10700, %rd10699, %rd10694;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8266,%dummy}, %rd10689;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8267}, %rd10689;
	}
	shf.r.wrap.b32 	%r8268, %r8267, %r8266, 14;
	shf.r.wrap.b32 	%r8269, %r8266, %r8267, 14;
	mov.b64 	%rd10701, {%r8269, %r8268};
	shf.r.wrap.b32 	%r8270, %r8267, %r8266, 18;
	shf.r.wrap.b32 	%r8271, %r8266, %r8267, 18;
	mov.b64 	%rd10702, {%r8271, %r8270};
	xor.b64  	%rd10703, %rd10702, %rd10701;
	shf.l.wrap.b32 	%r8272, %r8266, %r8267, 23;
	shf.l.wrap.b32 	%r8273, %r8267, %r8266, 23;
	mov.b64 	%rd10704, {%r8273, %r8272};
	xor.b64  	%rd10705, %rd10703, %rd10704;
	xor.b64  	%rd10706, %rd10665, %rd10641;
	and.b64  	%rd10707, %rd10689, %rd10706;
	xor.b64  	%rd10708, %rd10707, %rd10641;
	add.s64 	%rd10709, %rd10617, %rd10450;
	add.s64 	%rd10710, %rd10709, %rd12968;
	add.s64 	%rd10711, %rd10710, %rd10708;
	add.s64 	%rd10712, %rd10711, %rd10705;
	add.s64 	%rd10713, %rd10712, %rd10628;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8274,%dummy}, %rd10700;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8275}, %rd10700;
	}
	shf.r.wrap.b32 	%r8276, %r8275, %r8274, 28;
	shf.r.wrap.b32 	%r8277, %r8274, %r8275, 28;
	mov.b64 	%rd10714, {%r8277, %r8276};
	shf.l.wrap.b32 	%r8278, %r8274, %r8275, 30;
	shf.l.wrap.b32 	%r8279, %r8275, %r8274, 30;
	mov.b64 	%rd10715, {%r8279, %r8278};
	xor.b64  	%rd10716, %rd10715, %rd10714;
	shf.l.wrap.b32 	%r8280, %r8274, %r8275, 25;
	shf.l.wrap.b32 	%r8281, %r8275, %r8274, 25;
	mov.b64 	%rd10717, {%r8281, %r8280};
	xor.b64  	%rd10718, %rd10716, %rd10717;
	xor.b64  	%rd10719, %rd10700, %rd10652;
	xor.b64  	%rd10720, %rd10700, %rd10676;
	and.b64  	%rd10721, %rd10720, %rd10719;
	xor.b64  	%rd10722, %rd10721, %rd10700;
	add.s64 	%rd10723, %rd10712, %rd10722;
	add.s64 	%rd10724, %rd10723, %rd10718;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8282,%dummy}, %rd10713;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8283}, %rd10713;
	}
	shf.r.wrap.b32 	%r8284, %r8283, %r8282, 14;
	shf.r.wrap.b32 	%r8285, %r8282, %r8283, 14;
	mov.b64 	%rd10725, {%r8285, %r8284};
	shf.r.wrap.b32 	%r8286, %r8283, %r8282, 18;
	shf.r.wrap.b32 	%r8287, %r8282, %r8283, 18;
	mov.b64 	%rd10726, {%r8287, %r8286};
	xor.b64  	%rd10727, %rd10726, %rd10725;
	shf.l.wrap.b32 	%r8288, %r8282, %r8283, 23;
	shf.l.wrap.b32 	%r8289, %r8283, %r8282, 23;
	mov.b64 	%rd10728, {%r8289, %r8288};
	xor.b64  	%rd10729, %rd10727, %rd10728;
	xor.b64  	%rd10730, %rd10689, %rd10665;
	and.b64  	%rd10731, %rd10713, %rd10730;
	xor.b64  	%rd10732, %rd10731, %rd10665;
	add.s64 	%rd10733, %rd10641, %rd10463;
	add.s64 	%rd10734, %rd10733, %rd12967;
	add.s64 	%rd10735, %rd10734, %rd10732;
	add.s64 	%rd10736, %rd10735, %rd10729;
	add.s64 	%rd10737, %rd10736, %rd10652;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8290,%dummy}, %rd10724;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8291}, %rd10724;
	}
	shf.r.wrap.b32 	%r8292, %r8291, %r8290, 28;
	shf.r.wrap.b32 	%r8293, %r8290, %r8291, 28;
	mov.b64 	%rd10738, {%r8293, %r8292};
	shf.l.wrap.b32 	%r8294, %r8290, %r8291, 30;
	shf.l.wrap.b32 	%r8295, %r8291, %r8290, 30;
	mov.b64 	%rd10739, {%r8295, %r8294};
	xor.b64  	%rd10740, %rd10739, %rd10738;
	shf.l.wrap.b32 	%r8296, %r8290, %r8291, 25;
	shf.l.wrap.b32 	%r8297, %r8291, %r8290, 25;
	mov.b64 	%rd10741, {%r8297, %r8296};
	xor.b64  	%rd10742, %rd10740, %rd10741;
	xor.b64  	%rd10743, %rd10724, %rd10676;
	xor.b64  	%rd10744, %rd10724, %rd10700;
	and.b64  	%rd10745, %rd10744, %rd10743;
	xor.b64  	%rd10746, %rd10745, %rd10724;
	add.s64 	%rd10747, %rd10736, %rd10746;
	add.s64 	%rd10748, %rd10747, %rd10742;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8298,%dummy}, %rd10737;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8299}, %rd10737;
	}
	shf.r.wrap.b32 	%r8300, %r8299, %r8298, 14;
	shf.r.wrap.b32 	%r8301, %r8298, %r8299, 14;
	mov.b64 	%rd10749, {%r8301, %r8300};
	shf.r.wrap.b32 	%r8302, %r8299, %r8298, 18;
	shf.r.wrap.b32 	%r8303, %r8298, %r8299, 18;
	mov.b64 	%rd10750, {%r8303, %r8302};
	xor.b64  	%rd10751, %rd10750, %rd10749;
	shf.l.wrap.b32 	%r8304, %r8298, %r8299, 23;
	shf.l.wrap.b32 	%r8305, %r8299, %r8298, 23;
	mov.b64 	%rd10752, {%r8305, %r8304};
	xor.b64  	%rd10753, %rd10751, %rd10752;
	xor.b64  	%rd10754, %rd10713, %rd10689;
	and.b64  	%rd10755, %rd10737, %rd10754;
	xor.b64  	%rd10756, %rd10755, %rd10689;
	add.s64 	%rd10757, %rd10665, %rd10476;
	add.s64 	%rd10758, %rd10757, %rd12966;
	add.s64 	%rd10759, %rd10758, %rd10756;
	add.s64 	%rd10760, %rd10759, %rd10753;
	add.s64 	%rd10761, %rd10760, %rd10676;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8306,%dummy}, %rd10748;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8307}, %rd10748;
	}
	shf.r.wrap.b32 	%r8308, %r8307, %r8306, 28;
	shf.r.wrap.b32 	%r8309, %r8306, %r8307, 28;
	mov.b64 	%rd10762, {%r8309, %r8308};
	shf.l.wrap.b32 	%r8310, %r8306, %r8307, 30;
	shf.l.wrap.b32 	%r8311, %r8307, %r8306, 30;
	mov.b64 	%rd10763, {%r8311, %r8310};
	xor.b64  	%rd10764, %rd10763, %rd10762;
	shf.l.wrap.b32 	%r8312, %r8306, %r8307, 25;
	shf.l.wrap.b32 	%r8313, %r8307, %r8306, 25;
	mov.b64 	%rd10765, {%r8313, %r8312};
	xor.b64  	%rd10766, %rd10764, %rd10765;
	xor.b64  	%rd10767, %rd10748, %rd10700;
	xor.b64  	%rd10768, %rd10748, %rd10724;
	and.b64  	%rd10769, %rd10768, %rd10767;
	xor.b64  	%rd10770, %rd10769, %rd10748;
	add.s64 	%rd10771, %rd10760, %rd10770;
	add.s64 	%rd10772, %rd10771, %rd10766;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8314,%dummy}, %rd10761;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8315}, %rd10761;
	}
	shf.r.wrap.b32 	%r8316, %r8315, %r8314, 14;
	shf.r.wrap.b32 	%r8317, %r8314, %r8315, 14;
	mov.b64 	%rd10773, {%r8317, %r8316};
	shf.r.wrap.b32 	%r8318, %r8315, %r8314, 18;
	shf.r.wrap.b32 	%r8319, %r8314, %r8315, 18;
	mov.b64 	%rd10774, {%r8319, %r8318};
	xor.b64  	%rd10775, %rd10774, %rd10773;
	shf.l.wrap.b32 	%r8320, %r8314, %r8315, 23;
	shf.l.wrap.b32 	%r8321, %r8315, %r8314, 23;
	mov.b64 	%rd10776, {%r8321, %r8320};
	xor.b64  	%rd10777, %rd10775, %rd10776;
	xor.b64  	%rd10778, %rd10737, %rd10713;
	and.b64  	%rd10779, %rd10761, %rd10778;
	xor.b64  	%rd10780, %rd10779, %rd10713;
	add.s64 	%rd10781, %rd10689, %rd10489;
	add.s64 	%rd10782, %rd10781, %rd12965;
	add.s64 	%rd10783, %rd10782, %rd10780;
	add.s64 	%rd10784, %rd10783, %rd10777;
	add.s64 	%rd10785, %rd10784, %rd10700;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8322,%dummy}, %rd10772;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8323}, %rd10772;
	}
	shf.r.wrap.b32 	%r8324, %r8323, %r8322, 28;
	shf.r.wrap.b32 	%r8325, %r8322, %r8323, 28;
	mov.b64 	%rd10786, {%r8325, %r8324};
	shf.l.wrap.b32 	%r8326, %r8322, %r8323, 30;
	shf.l.wrap.b32 	%r8327, %r8323, %r8322, 30;
	mov.b64 	%rd10787, {%r8327, %r8326};
	xor.b64  	%rd10788, %rd10787, %rd10786;
	shf.l.wrap.b32 	%r8328, %r8322, %r8323, 25;
	shf.l.wrap.b32 	%r8329, %r8323, %r8322, 25;
	mov.b64 	%rd10789, {%r8329, %r8328};
	xor.b64  	%rd10790, %rd10788, %rd10789;
	xor.b64  	%rd10791, %rd10772, %rd10724;
	xor.b64  	%rd10792, %rd10772, %rd10748;
	and.b64  	%rd10793, %rd10792, %rd10791;
	xor.b64  	%rd10794, %rd10793, %rd10772;
	add.s64 	%rd10795, %rd10784, %rd10794;
	add.s64 	%rd10796, %rd10795, %rd10790;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8330,%dummy}, %rd10785;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8331}, %rd10785;
	}
	shf.r.wrap.b32 	%r8332, %r8331, %r8330, 14;
	shf.r.wrap.b32 	%r8333, %r8330, %r8331, 14;
	mov.b64 	%rd10797, {%r8333, %r8332};
	shf.r.wrap.b32 	%r8334, %r8331, %r8330, 18;
	shf.r.wrap.b32 	%r8335, %r8330, %r8331, 18;
	mov.b64 	%rd10798, {%r8335, %r8334};
	xor.b64  	%rd10799, %rd10798, %rd10797;
	shf.l.wrap.b32 	%r8336, %r8330, %r8331, 23;
	shf.l.wrap.b32 	%r8337, %r8331, %r8330, 23;
	mov.b64 	%rd10800, {%r8337, %r8336};
	xor.b64  	%rd10801, %rd10799, %rd10800;
	xor.b64  	%rd10802, %rd10761, %rd10737;
	and.b64  	%rd10803, %rd10785, %rd10802;
	xor.b64  	%rd10804, %rd10803, %rd10737;
	add.s64 	%rd10805, %rd10713, %rd10502;
	add.s64 	%rd10806, %rd10805, %rd12964;
	add.s64 	%rd10807, %rd10806, %rd10804;
	add.s64 	%rd10808, %rd10807, %rd10801;
	add.s64 	%rd10809, %rd10808, %rd10724;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8338,%dummy}, %rd10796;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8339}, %rd10796;
	}
	shf.r.wrap.b32 	%r8340, %r8339, %r8338, 28;
	shf.r.wrap.b32 	%r8341, %r8338, %r8339, 28;
	mov.b64 	%rd10810, {%r8341, %r8340};
	shf.l.wrap.b32 	%r8342, %r8338, %r8339, 30;
	shf.l.wrap.b32 	%r8343, %r8339, %r8338, 30;
	mov.b64 	%rd10811, {%r8343, %r8342};
	xor.b64  	%rd10812, %rd10811, %rd10810;
	shf.l.wrap.b32 	%r8344, %r8338, %r8339, 25;
	shf.l.wrap.b32 	%r8345, %r8339, %r8338, 25;
	mov.b64 	%rd10813, {%r8345, %r8344};
	xor.b64  	%rd10814, %rd10812, %rd10813;
	xor.b64  	%rd10815, %rd10796, %rd10748;
	xor.b64  	%rd10816, %rd10796, %rd10772;
	and.b64  	%rd10817, %rd10816, %rd10815;
	xor.b64  	%rd10818, %rd10817, %rd10796;
	add.s64 	%rd10819, %rd10808, %rd10818;
	add.s64 	%rd10820, %rd10819, %rd10814;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8346,%dummy}, %rd10809;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8347}, %rd10809;
	}
	shf.r.wrap.b32 	%r8348, %r8347, %r8346, 14;
	shf.r.wrap.b32 	%r8349, %r8346, %r8347, 14;
	mov.b64 	%rd10821, {%r8349, %r8348};
	shf.r.wrap.b32 	%r8350, %r8347, %r8346, 18;
	shf.r.wrap.b32 	%r8351, %r8346, %r8347, 18;
	mov.b64 	%rd10822, {%r8351, %r8350};
	xor.b64  	%rd10823, %rd10822, %rd10821;
	shf.l.wrap.b32 	%r8352, %r8346, %r8347, 23;
	shf.l.wrap.b32 	%r8353, %r8347, %r8346, 23;
	mov.b64 	%rd10824, {%r8353, %r8352};
	xor.b64  	%rd10825, %rd10823, %rd10824;
	xor.b64  	%rd10826, %rd10785, %rd10761;
	and.b64  	%rd10827, %rd10809, %rd10826;
	xor.b64  	%rd10828, %rd10827, %rd10761;
	add.s64 	%rd10829, %rd10737, %rd10515;
	add.s64 	%rd10830, %rd10829, %rd12963;
	add.s64 	%rd10831, %rd10830, %rd10828;
	add.s64 	%rd10832, %rd10831, %rd10825;
	add.s64 	%rd10833, %rd10832, %rd10748;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8354,%dummy}, %rd10820;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8355}, %rd10820;
	}
	shf.r.wrap.b32 	%r8356, %r8355, %r8354, 28;
	shf.r.wrap.b32 	%r8357, %r8354, %r8355, 28;
	mov.b64 	%rd10834, {%r8357, %r8356};
	shf.l.wrap.b32 	%r8358, %r8354, %r8355, 30;
	shf.l.wrap.b32 	%r8359, %r8355, %r8354, 30;
	mov.b64 	%rd10835, {%r8359, %r8358};
	xor.b64  	%rd10836, %rd10835, %rd10834;
	shf.l.wrap.b32 	%r8360, %r8354, %r8355, 25;
	shf.l.wrap.b32 	%r8361, %r8355, %r8354, 25;
	mov.b64 	%rd10837, {%r8361, %r8360};
	xor.b64  	%rd10838, %rd10836, %rd10837;
	xor.b64  	%rd10839, %rd10820, %rd10772;
	xor.b64  	%rd10840, %rd10820, %rd10796;
	and.b64  	%rd10841, %rd10840, %rd10839;
	xor.b64  	%rd10842, %rd10841, %rd10820;
	add.s64 	%rd10843, %rd10832, %rd10842;
	add.s64 	%rd10844, %rd10843, %rd10838;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8362,%dummy}, %rd10833;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8363}, %rd10833;
	}
	shf.r.wrap.b32 	%r8364, %r8363, %r8362, 14;
	shf.r.wrap.b32 	%r8365, %r8362, %r8363, 14;
	mov.b64 	%rd10845, {%r8365, %r8364};
	shf.r.wrap.b32 	%r8366, %r8363, %r8362, 18;
	shf.r.wrap.b32 	%r8367, %r8362, %r8363, 18;
	mov.b64 	%rd10846, {%r8367, %r8366};
	xor.b64  	%rd10847, %rd10846, %rd10845;
	shf.l.wrap.b32 	%r8368, %r8362, %r8363, 23;
	shf.l.wrap.b32 	%r8369, %r8363, %r8362, 23;
	mov.b64 	%rd10848, {%r8369, %r8368};
	xor.b64  	%rd10849, %rd10847, %rd10848;
	xor.b64  	%rd10850, %rd10809, %rd10785;
	and.b64  	%rd10851, %rd10833, %rd10850;
	xor.b64  	%rd10852, %rd10851, %rd10785;
	add.s64 	%rd10853, %rd10761, %rd10528;
	add.s64 	%rd10854, %rd10853, %rd12962;
	add.s64 	%rd10855, %rd10854, %rd10852;
	add.s64 	%rd10856, %rd10855, %rd10849;
	add.s64 	%rd10857, %rd10856, %rd10772;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8370,%dummy}, %rd10844;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8371}, %rd10844;
	}
	shf.r.wrap.b32 	%r8372, %r8371, %r8370, 28;
	shf.r.wrap.b32 	%r8373, %r8370, %r8371, 28;
	mov.b64 	%rd10858, {%r8373, %r8372};
	shf.l.wrap.b32 	%r8374, %r8370, %r8371, 30;
	shf.l.wrap.b32 	%r8375, %r8371, %r8370, 30;
	mov.b64 	%rd10859, {%r8375, %r8374};
	xor.b64  	%rd10860, %rd10859, %rd10858;
	shf.l.wrap.b32 	%r8376, %r8370, %r8371, 25;
	shf.l.wrap.b32 	%r8377, %r8371, %r8370, 25;
	mov.b64 	%rd10861, {%r8377, %r8376};
	xor.b64  	%rd10862, %rd10860, %rd10861;
	xor.b64  	%rd10863, %rd10844, %rd10796;
	xor.b64  	%rd10864, %rd10844, %rd10820;
	and.b64  	%rd10865, %rd10864, %rd10863;
	xor.b64  	%rd10866, %rd10865, %rd10844;
	add.s64 	%rd10867, %rd10856, %rd10866;
	add.s64 	%rd10868, %rd10867, %rd10862;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8378,%dummy}, %rd10857;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8379}, %rd10857;
	}
	shf.r.wrap.b32 	%r8380, %r8379, %r8378, 14;
	shf.r.wrap.b32 	%r8381, %r8378, %r8379, 14;
	mov.b64 	%rd10869, {%r8381, %r8380};
	shf.r.wrap.b32 	%r8382, %r8379, %r8378, 18;
	shf.r.wrap.b32 	%r8383, %r8378, %r8379, 18;
	mov.b64 	%rd10870, {%r8383, %r8382};
	xor.b64  	%rd10871, %rd10870, %rd10869;
	shf.l.wrap.b32 	%r8384, %r8378, %r8379, 23;
	shf.l.wrap.b32 	%r8385, %r8379, %r8378, 23;
	mov.b64 	%rd10872, {%r8385, %r8384};
	xor.b64  	%rd10873, %rd10871, %rd10872;
	xor.b64  	%rd10874, %rd10833, %rd10809;
	and.b64  	%rd10875, %rd10857, %rd10874;
	xor.b64  	%rd10876, %rd10875, %rd10809;
	add.s64 	%rd10877, %rd10785, %rd10541;
	add.s64 	%rd10878, %rd10877, %rd12961;
	add.s64 	%rd10879, %rd10878, %rd10876;
	add.s64 	%rd10880, %rd10879, %rd10873;
	add.s64 	%rd10881, %rd10880, %rd10796;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8386,%dummy}, %rd10868;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8387}, %rd10868;
	}
	shf.r.wrap.b32 	%r8388, %r8387, %r8386, 28;
	shf.r.wrap.b32 	%r8389, %r8386, %r8387, 28;
	mov.b64 	%rd10882, {%r8389, %r8388};
	shf.l.wrap.b32 	%r8390, %r8386, %r8387, 30;
	shf.l.wrap.b32 	%r8391, %r8387, %r8386, 30;
	mov.b64 	%rd10883, {%r8391, %r8390};
	xor.b64  	%rd10884, %rd10883, %rd10882;
	shf.l.wrap.b32 	%r8392, %r8386, %r8387, 25;
	shf.l.wrap.b32 	%r8393, %r8387, %r8386, 25;
	mov.b64 	%rd10885, {%r8393, %r8392};
	xor.b64  	%rd10886, %rd10884, %rd10885;
	xor.b64  	%rd10887, %rd10868, %rd10820;
	xor.b64  	%rd10888, %rd10868, %rd10844;
	and.b64  	%rd10889, %rd10888, %rd10887;
	xor.b64  	%rd10890, %rd10889, %rd10868;
	add.s64 	%rd10891, %rd10880, %rd10890;
	add.s64 	%rd10892, %rd10891, %rd10886;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8394,%dummy}, %rd10881;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8395}, %rd10881;
	}
	shf.r.wrap.b32 	%r8396, %r8395, %r8394, 14;
	shf.r.wrap.b32 	%r8397, %r8394, %r8395, 14;
	mov.b64 	%rd10893, {%r8397, %r8396};
	shf.r.wrap.b32 	%r8398, %r8395, %r8394, 18;
	shf.r.wrap.b32 	%r8399, %r8394, %r8395, 18;
	mov.b64 	%rd10894, {%r8399, %r8398};
	xor.b64  	%rd10895, %rd10894, %rd10893;
	shf.l.wrap.b32 	%r8400, %r8394, %r8395, 23;
	shf.l.wrap.b32 	%r8401, %r8395, %r8394, 23;
	mov.b64 	%rd10896, {%r8401, %r8400};
	xor.b64  	%rd10897, %rd10895, %rd10896;
	xor.b64  	%rd10898, %rd10857, %rd10833;
	and.b64  	%rd10899, %rd10881, %rd10898;
	xor.b64  	%rd10900, %rd10899, %rd10833;
	add.s64 	%rd10901, %rd10809, %rd10554;
	add.s64 	%rd10902, %rd10901, %rd12960;
	add.s64 	%rd10903, %rd10902, %rd10900;
	add.s64 	%rd10904, %rd10903, %rd10897;
	add.s64 	%rd10905, %rd10904, %rd10820;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8402,%dummy}, %rd10892;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8403}, %rd10892;
	}
	shf.r.wrap.b32 	%r8404, %r8403, %r8402, 28;
	shf.r.wrap.b32 	%r8405, %r8402, %r8403, 28;
	mov.b64 	%rd10906, {%r8405, %r8404};
	shf.l.wrap.b32 	%r8406, %r8402, %r8403, 30;
	shf.l.wrap.b32 	%r8407, %r8403, %r8402, 30;
	mov.b64 	%rd10907, {%r8407, %r8406};
	xor.b64  	%rd10908, %rd10907, %rd10906;
	shf.l.wrap.b32 	%r8408, %r8402, %r8403, 25;
	shf.l.wrap.b32 	%r8409, %r8403, %r8402, 25;
	mov.b64 	%rd10909, {%r8409, %r8408};
	xor.b64  	%rd10910, %rd10908, %rd10909;
	xor.b64  	%rd10911, %rd10892, %rd10844;
	xor.b64  	%rd10912, %rd10892, %rd10868;
	and.b64  	%rd10913, %rd10912, %rd10911;
	xor.b64  	%rd10914, %rd10913, %rd10892;
	add.s64 	%rd10915, %rd10904, %rd10914;
	add.s64 	%rd10916, %rd10915, %rd10910;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8410,%dummy}, %rd10905;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8411}, %rd10905;
	}
	shf.r.wrap.b32 	%r8412, %r8411, %r8410, 14;
	shf.r.wrap.b32 	%r8413, %r8410, %r8411, 14;
	mov.b64 	%rd10917, {%r8413, %r8412};
	shf.r.wrap.b32 	%r8414, %r8411, %r8410, 18;
	shf.r.wrap.b32 	%r8415, %r8410, %r8411, 18;
	mov.b64 	%rd10918, {%r8415, %r8414};
	xor.b64  	%rd10919, %rd10918, %rd10917;
	shf.l.wrap.b32 	%r8416, %r8410, %r8411, 23;
	shf.l.wrap.b32 	%r8417, %r8411, %r8410, 23;
	mov.b64 	%rd10920, {%r8417, %r8416};
	xor.b64  	%rd10921, %rd10919, %rd10920;
	xor.b64  	%rd10922, %rd10881, %rd10857;
	and.b64  	%rd10923, %rd10905, %rd10922;
	xor.b64  	%rd10924, %rd10923, %rd10857;
	add.s64 	%rd10925, %rd10833, %rd10567;
	add.s64 	%rd10926, %rd10925, %rd12959;
	add.s64 	%rd10927, %rd10926, %rd10924;
	add.s64 	%rd10928, %rd10927, %rd10921;
	add.s64 	%rd10929, %rd10928, %rd10844;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8418,%dummy}, %rd10916;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8419}, %rd10916;
	}
	shf.r.wrap.b32 	%r8420, %r8419, %r8418, 28;
	shf.r.wrap.b32 	%r8421, %r8418, %r8419, 28;
	mov.b64 	%rd10930, {%r8421, %r8420};
	shf.l.wrap.b32 	%r8422, %r8418, %r8419, 30;
	shf.l.wrap.b32 	%r8423, %r8419, %r8418, 30;
	mov.b64 	%rd10931, {%r8423, %r8422};
	xor.b64  	%rd10932, %rd10931, %rd10930;
	shf.l.wrap.b32 	%r8424, %r8418, %r8419, 25;
	shf.l.wrap.b32 	%r8425, %r8419, %r8418, 25;
	mov.b64 	%rd10933, {%r8425, %r8424};
	xor.b64  	%rd10934, %rd10932, %rd10933;
	xor.b64  	%rd10935, %rd10916, %rd10868;
	xor.b64  	%rd10936, %rd10916, %rd10892;
	and.b64  	%rd10937, %rd10936, %rd10935;
	xor.b64  	%rd10938, %rd10937, %rd10916;
	add.s64 	%rd10939, %rd10928, %rd10938;
	add.s64 	%rd10940, %rd10939, %rd10934;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8426,%dummy}, %rd10929;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8427}, %rd10929;
	}
	shf.r.wrap.b32 	%r8428, %r8427, %r8426, 14;
	shf.r.wrap.b32 	%r8429, %r8426, %r8427, 14;
	mov.b64 	%rd10941, {%r8429, %r8428};
	shf.r.wrap.b32 	%r8430, %r8427, %r8426, 18;
	shf.r.wrap.b32 	%r8431, %r8426, %r8427, 18;
	mov.b64 	%rd10942, {%r8431, %r8430};
	xor.b64  	%rd10943, %rd10942, %rd10941;
	shf.l.wrap.b32 	%r8432, %r8426, %r8427, 23;
	shf.l.wrap.b32 	%r8433, %r8427, %r8426, 23;
	mov.b64 	%rd10944, {%r8433, %r8432};
	xor.b64  	%rd10945, %rd10943, %rd10944;
	xor.b64  	%rd10946, %rd10905, %rd10881;
	and.b64  	%rd10947, %rd10929, %rd10946;
	xor.b64  	%rd10948, %rd10947, %rd10881;
	add.s64 	%rd10949, %rd10857, %rd10580;
	add.s64 	%rd10950, %rd10949, %rd12958;
	add.s64 	%rd10951, %rd10950, %rd10948;
	add.s64 	%rd10952, %rd10951, %rd10945;
	add.s64 	%rd10953, %rd10952, %rd10868;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8434,%dummy}, %rd10940;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8435}, %rd10940;
	}
	shf.r.wrap.b32 	%r8436, %r8435, %r8434, 28;
	shf.r.wrap.b32 	%r8437, %r8434, %r8435, 28;
	mov.b64 	%rd10954, {%r8437, %r8436};
	shf.l.wrap.b32 	%r8438, %r8434, %r8435, 30;
	shf.l.wrap.b32 	%r8439, %r8435, %r8434, 30;
	mov.b64 	%rd10955, {%r8439, %r8438};
	xor.b64  	%rd10956, %rd10955, %rd10954;
	shf.l.wrap.b32 	%r8440, %r8434, %r8435, 25;
	shf.l.wrap.b32 	%r8441, %r8435, %r8434, 25;
	mov.b64 	%rd10957, {%r8441, %r8440};
	xor.b64  	%rd10958, %rd10956, %rd10957;
	xor.b64  	%rd10959, %rd10940, %rd10892;
	xor.b64  	%rd10960, %rd10940, %rd10916;
	and.b64  	%rd10961, %rd10960, %rd10959;
	xor.b64  	%rd10962, %rd10961, %rd10940;
	add.s64 	%rd10963, %rd10952, %rd10962;
	add.s64 	%rd10964, %rd10963, %rd10958;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8442,%dummy}, %rd10567;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8443}, %rd10567;
	}
	shf.r.wrap.b32 	%r8444, %r8443, %r8442, 19;
	shf.r.wrap.b32 	%r8445, %r8442, %r8443, 19;
	mov.b64 	%rd10965, {%r8445, %r8444};
	shf.l.wrap.b32 	%r8446, %r8442, %r8443, 3;
	shf.l.wrap.b32 	%r8447, %r8443, %r8442, 3;
	mov.b64 	%rd10966, {%r8447, %r8446};
	shr.u64 	%rd10967, %rd10567, 6;
	xor.b64  	%rd10968, %rd10965, %rd10967;
	xor.b64  	%rd10969, %rd10968, %rd10966;
	shf.r.wrap.b32 	%r8448, %r8057, %r8056, 1;
	shf.r.wrap.b32 	%r8449, %r8056, %r8057, 1;
	mov.b64 	%rd10970, {%r8449, %r8448};
	shf.r.wrap.b32 	%r8450, %r8057, %r8056, 8;
	shf.r.wrap.b32 	%r8451, %r8056, %r8057, 8;
	mov.b64 	%rd10971, {%r8451, %r8450};
	shr.u64 	%rd10972, %rd10398, 7;
	xor.b64  	%rd10973, %rd10970, %rd10972;
	xor.b64  	%rd10974, %rd10973, %rd10971;
	add.s64 	%rd10975, %rd10502, %rd10385;
	add.s64 	%rd10976, %rd10975, %rd10969;
	add.s64 	%rd10977, %rd10976, %rd10974;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8452,%dummy}, %rd10580;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8453}, %rd10580;
	}
	shf.r.wrap.b32 	%r8454, %r8453, %r8452, 19;
	shf.r.wrap.b32 	%r8455, %r8452, %r8453, 19;
	mov.b64 	%rd10978, {%r8455, %r8454};
	shf.l.wrap.b32 	%r8456, %r8452, %r8453, 3;
	shf.l.wrap.b32 	%r8457, %r8453, %r8452, 3;
	mov.b64 	%rd10979, {%r8457, %r8456};
	shr.u64 	%rd10980, %rd10580, 6;
	xor.b64  	%rd10981, %rd10978, %rd10980;
	xor.b64  	%rd10982, %rd10981, %rd10979;
	shf.r.wrap.b32 	%r8458, %r8067, %r8066, 1;
	shf.r.wrap.b32 	%r8459, %r8066, %r8067, 1;
	mov.b64 	%rd10983, {%r8459, %r8458};
	shf.r.wrap.b32 	%r8460, %r8067, %r8066, 8;
	shf.r.wrap.b32 	%r8461, %r8066, %r8067, 8;
	mov.b64 	%rd10984, {%r8461, %r8460};
	shr.u64 	%rd10985, %rd10411, 7;
	xor.b64  	%rd10986, %rd10983, %rd10985;
	xor.b64  	%rd10987, %rd10986, %rd10984;
	add.s64 	%rd10988, %rd10515, %rd10398;
	add.s64 	%rd10989, %rd10988, %rd10982;
	add.s64 	%rd10990, %rd10989, %rd10987;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8462,%dummy}, %rd10977;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8463}, %rd10977;
	}
	shf.r.wrap.b32 	%r8464, %r8463, %r8462, 19;
	shf.r.wrap.b32 	%r8465, %r8462, %r8463, 19;
	mov.b64 	%rd10991, {%r8465, %r8464};
	shf.l.wrap.b32 	%r8466, %r8462, %r8463, 3;
	shf.l.wrap.b32 	%r8467, %r8463, %r8462, 3;
	mov.b64 	%rd10992, {%r8467, %r8466};
	shr.u64 	%rd10993, %rd10977, 6;
	xor.b64  	%rd10994, %rd10991, %rd10993;
	xor.b64  	%rd10995, %rd10994, %rd10992;
	shf.r.wrap.b32 	%r8468, %r8077, %r8076, 1;
	shf.r.wrap.b32 	%r8469, %r8076, %r8077, 1;
	mov.b64 	%rd10996, {%r8469, %r8468};
	shf.r.wrap.b32 	%r8470, %r8077, %r8076, 8;
	shf.r.wrap.b32 	%r8471, %r8076, %r8077, 8;
	mov.b64 	%rd10997, {%r8471, %r8470};
	shr.u64 	%rd10998, %rd10424, 7;
	xor.b64  	%rd10999, %rd10996, %rd10998;
	xor.b64  	%rd11000, %rd10999, %rd10997;
	add.s64 	%rd11001, %rd10528, %rd10411;
	add.s64 	%rd11002, %rd11001, %rd10995;
	add.s64 	%rd11003, %rd11002, %rd11000;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8472,%dummy}, %rd10990;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8473}, %rd10990;
	}
	shf.r.wrap.b32 	%r8474, %r8473, %r8472, 19;
	shf.r.wrap.b32 	%r8475, %r8472, %r8473, 19;
	mov.b64 	%rd11004, {%r8475, %r8474};
	shf.l.wrap.b32 	%r8476, %r8472, %r8473, 3;
	shf.l.wrap.b32 	%r8477, %r8473, %r8472, 3;
	mov.b64 	%rd11005, {%r8477, %r8476};
	shr.u64 	%rd11006, %rd10990, 6;
	xor.b64  	%rd11007, %rd11004, %rd11006;
	xor.b64  	%rd11008, %rd11007, %rd11005;
	shf.r.wrap.b32 	%r8478, %r8087, %r8086, 1;
	shf.r.wrap.b32 	%r8479, %r8086, %r8087, 1;
	mov.b64 	%rd11009, {%r8479, %r8478};
	shf.r.wrap.b32 	%r8480, %r8087, %r8086, 8;
	shf.r.wrap.b32 	%r8481, %r8086, %r8087, 8;
	mov.b64 	%rd11010, {%r8481, %r8480};
	shr.u64 	%rd11011, %rd10437, 7;
	xor.b64  	%rd11012, %rd11009, %rd11011;
	xor.b64  	%rd11013, %rd11012, %rd11010;
	add.s64 	%rd11014, %rd10541, %rd10424;
	add.s64 	%rd11015, %rd11014, %rd11008;
	add.s64 	%rd11016, %rd11015, %rd11013;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8482,%dummy}, %rd11003;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8483}, %rd11003;
	}
	shf.r.wrap.b32 	%r8484, %r8483, %r8482, 19;
	shf.r.wrap.b32 	%r8485, %r8482, %r8483, 19;
	mov.b64 	%rd11017, {%r8485, %r8484};
	shf.l.wrap.b32 	%r8486, %r8482, %r8483, 3;
	shf.l.wrap.b32 	%r8487, %r8483, %r8482, 3;
	mov.b64 	%rd11018, {%r8487, %r8486};
	shr.u64 	%rd11019, %rd11003, 6;
	xor.b64  	%rd11020, %rd11017, %rd11019;
	xor.b64  	%rd11021, %rd11020, %rd11018;
	shf.r.wrap.b32 	%r8488, %r8097, %r8096, 1;
	shf.r.wrap.b32 	%r8489, %r8096, %r8097, 1;
	mov.b64 	%rd11022, {%r8489, %r8488};
	shf.r.wrap.b32 	%r8490, %r8097, %r8096, 8;
	shf.r.wrap.b32 	%r8491, %r8096, %r8097, 8;
	mov.b64 	%rd11023, {%r8491, %r8490};
	shr.u64 	%rd11024, %rd10450, 7;
	xor.b64  	%rd11025, %rd11022, %rd11024;
	xor.b64  	%rd11026, %rd11025, %rd11023;
	add.s64 	%rd11027, %rd10554, %rd10437;
	add.s64 	%rd11028, %rd11027, %rd11021;
	add.s64 	%rd11029, %rd11028, %rd11026;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8492,%dummy}, %rd11016;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8493}, %rd11016;
	}
	shf.r.wrap.b32 	%r8494, %r8493, %r8492, 19;
	shf.r.wrap.b32 	%r8495, %r8492, %r8493, 19;
	mov.b64 	%rd11030, {%r8495, %r8494};
	shf.l.wrap.b32 	%r8496, %r8492, %r8493, 3;
	shf.l.wrap.b32 	%r8497, %r8493, %r8492, 3;
	mov.b64 	%rd11031, {%r8497, %r8496};
	shr.u64 	%rd11032, %rd11016, 6;
	xor.b64  	%rd11033, %rd11030, %rd11032;
	xor.b64  	%rd11034, %rd11033, %rd11031;
	shf.r.wrap.b32 	%r8498, %r8107, %r8106, 1;
	shf.r.wrap.b32 	%r8499, %r8106, %r8107, 1;
	mov.b64 	%rd11035, {%r8499, %r8498};
	shf.r.wrap.b32 	%r8500, %r8107, %r8106, 8;
	shf.r.wrap.b32 	%r8501, %r8106, %r8107, 8;
	mov.b64 	%rd11036, {%r8501, %r8500};
	shr.u64 	%rd11037, %rd10463, 7;
	xor.b64  	%rd11038, %rd11035, %rd11037;
	xor.b64  	%rd11039, %rd11038, %rd11036;
	add.s64 	%rd11040, %rd10567, %rd10450;
	add.s64 	%rd11041, %rd11040, %rd11034;
	add.s64 	%rd11042, %rd11041, %rd11039;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8502,%dummy}, %rd11029;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8503}, %rd11029;
	}
	shf.r.wrap.b32 	%r8504, %r8503, %r8502, 19;
	shf.r.wrap.b32 	%r8505, %r8502, %r8503, 19;
	mov.b64 	%rd11043, {%r8505, %r8504};
	shf.l.wrap.b32 	%r8506, %r8502, %r8503, 3;
	shf.l.wrap.b32 	%r8507, %r8503, %r8502, 3;
	mov.b64 	%rd11044, {%r8507, %r8506};
	shr.u64 	%rd11045, %rd11029, 6;
	xor.b64  	%rd11046, %rd11043, %rd11045;
	xor.b64  	%rd11047, %rd11046, %rd11044;
	shf.r.wrap.b32 	%r8508, %r8117, %r8116, 1;
	shf.r.wrap.b32 	%r8509, %r8116, %r8117, 1;
	mov.b64 	%rd11048, {%r8509, %r8508};
	shf.r.wrap.b32 	%r8510, %r8117, %r8116, 8;
	shf.r.wrap.b32 	%r8511, %r8116, %r8117, 8;
	mov.b64 	%rd11049, {%r8511, %r8510};
	shr.u64 	%rd11050, %rd10476, 7;
	xor.b64  	%rd11051, %rd11048, %rd11050;
	xor.b64  	%rd11052, %rd11051, %rd11049;
	add.s64 	%rd11053, %rd10580, %rd10463;
	add.s64 	%rd11054, %rd11053, %rd11047;
	add.s64 	%rd11055, %rd11054, %rd11052;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8512,%dummy}, %rd11042;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8513}, %rd11042;
	}
	shf.r.wrap.b32 	%r8514, %r8513, %r8512, 19;
	shf.r.wrap.b32 	%r8515, %r8512, %r8513, 19;
	mov.b64 	%rd11056, {%r8515, %r8514};
	shf.l.wrap.b32 	%r8516, %r8512, %r8513, 3;
	shf.l.wrap.b32 	%r8517, %r8513, %r8512, 3;
	mov.b64 	%rd11057, {%r8517, %r8516};
	shr.u64 	%rd11058, %rd11042, 6;
	xor.b64  	%rd11059, %rd11056, %rd11058;
	xor.b64  	%rd11060, %rd11059, %rd11057;
	shf.r.wrap.b32 	%r8518, %r8127, %r8126, 1;
	shf.r.wrap.b32 	%r8519, %r8126, %r8127, 1;
	mov.b64 	%rd11061, {%r8519, %r8518};
	shf.r.wrap.b32 	%r8520, %r8127, %r8126, 8;
	shf.r.wrap.b32 	%r8521, %r8126, %r8127, 8;
	mov.b64 	%rd11062, {%r8521, %r8520};
	shr.u64 	%rd11063, %rd10489, 7;
	xor.b64  	%rd11064, %rd11061, %rd11063;
	xor.b64  	%rd11065, %rd11064, %rd11062;
	add.s64 	%rd11066, %rd10977, %rd10476;
	add.s64 	%rd11067, %rd11066, %rd11060;
	add.s64 	%rd11068, %rd11067, %rd11065;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8522,%dummy}, %rd11055;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8523}, %rd11055;
	}
	shf.r.wrap.b32 	%r8524, %r8523, %r8522, 19;
	shf.r.wrap.b32 	%r8525, %r8522, %r8523, 19;
	mov.b64 	%rd11069, {%r8525, %r8524};
	shf.l.wrap.b32 	%r8526, %r8522, %r8523, 3;
	shf.l.wrap.b32 	%r8527, %r8523, %r8522, 3;
	mov.b64 	%rd11070, {%r8527, %r8526};
	shr.u64 	%rd11071, %rd11055, 6;
	xor.b64  	%rd11072, %rd11069, %rd11071;
	xor.b64  	%rd11073, %rd11072, %rd11070;
	shf.r.wrap.b32 	%r8528, %r8137, %r8136, 1;
	shf.r.wrap.b32 	%r8529, %r8136, %r8137, 1;
	mov.b64 	%rd11074, {%r8529, %r8528};
	shf.r.wrap.b32 	%r8530, %r8137, %r8136, 8;
	shf.r.wrap.b32 	%r8531, %r8136, %r8137, 8;
	mov.b64 	%rd11075, {%r8531, %r8530};
	shr.u64 	%rd11076, %rd10502, 7;
	xor.b64  	%rd11077, %rd11074, %rd11076;
	xor.b64  	%rd11078, %rd11077, %rd11075;
	add.s64 	%rd11079, %rd10990, %rd10489;
	add.s64 	%rd11080, %rd11079, %rd11073;
	add.s64 	%rd11081, %rd11080, %rd11078;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8532,%dummy}, %rd11068;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8533}, %rd11068;
	}
	shf.r.wrap.b32 	%r8534, %r8533, %r8532, 19;
	shf.r.wrap.b32 	%r8535, %r8532, %r8533, 19;
	mov.b64 	%rd11082, {%r8535, %r8534};
	shf.l.wrap.b32 	%r8536, %r8532, %r8533, 3;
	shf.l.wrap.b32 	%r8537, %r8533, %r8532, 3;
	mov.b64 	%rd11083, {%r8537, %r8536};
	shr.u64 	%rd11084, %rd11068, 6;
	xor.b64  	%rd11085, %rd11082, %rd11084;
	xor.b64  	%rd11086, %rd11085, %rd11083;
	shf.r.wrap.b32 	%r8538, %r8147, %r8146, 1;
	shf.r.wrap.b32 	%r8539, %r8146, %r8147, 1;
	mov.b64 	%rd11087, {%r8539, %r8538};
	shf.r.wrap.b32 	%r8540, %r8147, %r8146, 8;
	shf.r.wrap.b32 	%r8541, %r8146, %r8147, 8;
	mov.b64 	%rd11088, {%r8541, %r8540};
	shr.u64 	%rd11089, %rd10515, 7;
	xor.b64  	%rd11090, %rd11087, %rd11089;
	xor.b64  	%rd11091, %rd11090, %rd11088;
	add.s64 	%rd11092, %rd11003, %rd10502;
	add.s64 	%rd11093, %rd11092, %rd11086;
	add.s64 	%rd11094, %rd11093, %rd11091;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8542,%dummy}, %rd11081;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8543}, %rd11081;
	}
	shf.r.wrap.b32 	%r8544, %r8543, %r8542, 19;
	shf.r.wrap.b32 	%r8545, %r8542, %r8543, 19;
	mov.b64 	%rd11095, {%r8545, %r8544};
	shf.l.wrap.b32 	%r8546, %r8542, %r8543, 3;
	shf.l.wrap.b32 	%r8547, %r8543, %r8542, 3;
	mov.b64 	%rd11096, {%r8547, %r8546};
	shr.u64 	%rd11097, %rd11081, 6;
	xor.b64  	%rd11098, %rd11095, %rd11097;
	xor.b64  	%rd11099, %rd11098, %rd11096;
	shf.r.wrap.b32 	%r8548, %r8157, %r8156, 1;
	shf.r.wrap.b32 	%r8549, %r8156, %r8157, 1;
	mov.b64 	%rd11100, {%r8549, %r8548};
	shf.r.wrap.b32 	%r8550, %r8157, %r8156, 8;
	shf.r.wrap.b32 	%r8551, %r8156, %r8157, 8;
	mov.b64 	%rd11101, {%r8551, %r8550};
	shr.u64 	%rd11102, %rd10528, 7;
	xor.b64  	%rd11103, %rd11100, %rd11102;
	xor.b64  	%rd11104, %rd11103, %rd11101;
	add.s64 	%rd11105, %rd11016, %rd10515;
	add.s64 	%rd11106, %rd11105, %rd11099;
	add.s64 	%rd11107, %rd11106, %rd11104;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8552,%dummy}, %rd11094;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8553}, %rd11094;
	}
	shf.r.wrap.b32 	%r8554, %r8553, %r8552, 19;
	shf.r.wrap.b32 	%r8555, %r8552, %r8553, 19;
	mov.b64 	%rd11108, {%r8555, %r8554};
	shf.l.wrap.b32 	%r8556, %r8552, %r8553, 3;
	shf.l.wrap.b32 	%r8557, %r8553, %r8552, 3;
	mov.b64 	%rd11109, {%r8557, %r8556};
	shr.u64 	%rd11110, %rd11094, 6;
	xor.b64  	%rd11111, %rd11108, %rd11110;
	xor.b64  	%rd11112, %rd11111, %rd11109;
	shf.r.wrap.b32 	%r8558, %r8167, %r8166, 1;
	shf.r.wrap.b32 	%r8559, %r8166, %r8167, 1;
	mov.b64 	%rd11113, {%r8559, %r8558};
	shf.r.wrap.b32 	%r8560, %r8167, %r8166, 8;
	shf.r.wrap.b32 	%r8561, %r8166, %r8167, 8;
	mov.b64 	%rd11114, {%r8561, %r8560};
	shr.u64 	%rd11115, %rd10541, 7;
	xor.b64  	%rd11116, %rd11113, %rd11115;
	xor.b64  	%rd11117, %rd11116, %rd11114;
	add.s64 	%rd11118, %rd11029, %rd10528;
	add.s64 	%rd11119, %rd11118, %rd11112;
	add.s64 	%rd11120, %rd11119, %rd11117;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8562,%dummy}, %rd11107;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8563}, %rd11107;
	}
	shf.r.wrap.b32 	%r8564, %r8563, %r8562, 19;
	shf.r.wrap.b32 	%r8565, %r8562, %r8563, 19;
	mov.b64 	%rd11121, {%r8565, %r8564};
	shf.l.wrap.b32 	%r8566, %r8562, %r8563, 3;
	shf.l.wrap.b32 	%r8567, %r8563, %r8562, 3;
	mov.b64 	%rd11122, {%r8567, %r8566};
	shr.u64 	%rd11123, %rd11107, 6;
	xor.b64  	%rd11124, %rd11121, %rd11123;
	xor.b64  	%rd11125, %rd11124, %rd11122;
	shf.r.wrap.b32 	%r8568, %r8177, %r8176, 1;
	shf.r.wrap.b32 	%r8569, %r8176, %r8177, 1;
	mov.b64 	%rd11126, {%r8569, %r8568};
	shf.r.wrap.b32 	%r8570, %r8177, %r8176, 8;
	shf.r.wrap.b32 	%r8571, %r8176, %r8177, 8;
	mov.b64 	%rd11127, {%r8571, %r8570};
	shr.u64 	%rd11128, %rd10554, 7;
	xor.b64  	%rd11129, %rd11126, %rd11128;
	xor.b64  	%rd11130, %rd11129, %rd11127;
	add.s64 	%rd11131, %rd11042, %rd10541;
	add.s64 	%rd11132, %rd11131, %rd11125;
	add.s64 	%rd11133, %rd11132, %rd11130;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8572,%dummy}, %rd11120;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8573}, %rd11120;
	}
	shf.r.wrap.b32 	%r8574, %r8573, %r8572, 19;
	shf.r.wrap.b32 	%r8575, %r8572, %r8573, 19;
	mov.b64 	%rd11134, {%r8575, %r8574};
	shf.l.wrap.b32 	%r8576, %r8572, %r8573, 3;
	shf.l.wrap.b32 	%r8577, %r8573, %r8572, 3;
	mov.b64 	%rd11135, {%r8577, %r8576};
	shr.u64 	%rd11136, %rd11120, 6;
	xor.b64  	%rd11137, %rd11134, %rd11136;
	xor.b64  	%rd11138, %rd11137, %rd11135;
	shf.r.wrap.b32 	%r8578, %r8443, %r8442, 1;
	shf.r.wrap.b32 	%r8579, %r8442, %r8443, 1;
	mov.b64 	%rd11139, {%r8579, %r8578};
	shf.r.wrap.b32 	%r8580, %r8443, %r8442, 8;
	shf.r.wrap.b32 	%r8581, %r8442, %r8443, 8;
	mov.b64 	%rd11140, {%r8581, %r8580};
	shr.u64 	%rd11141, %rd10567, 7;
	xor.b64  	%rd11142, %rd11139, %rd11141;
	xor.b64  	%rd11143, %rd11142, %rd11140;
	add.s64 	%rd11144, %rd11055, %rd10554;
	add.s64 	%rd11145, %rd11144, %rd11138;
	add.s64 	%rd11146, %rd11145, %rd11143;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8582,%dummy}, %rd11133;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8583}, %rd11133;
	}
	shf.r.wrap.b32 	%r8584, %r8583, %r8582, 19;
	shf.r.wrap.b32 	%r8585, %r8582, %r8583, 19;
	mov.b64 	%rd11147, {%r8585, %r8584};
	shf.l.wrap.b32 	%r8586, %r8582, %r8583, 3;
	shf.l.wrap.b32 	%r8587, %r8583, %r8582, 3;
	mov.b64 	%rd11148, {%r8587, %r8586};
	shr.u64 	%rd11149, %rd11133, 6;
	xor.b64  	%rd11150, %rd11147, %rd11149;
	xor.b64  	%rd11151, %rd11150, %rd11148;
	shf.r.wrap.b32 	%r8588, %r8453, %r8452, 1;
	shf.r.wrap.b32 	%r8589, %r8452, %r8453, 1;
	mov.b64 	%rd11152, {%r8589, %r8588};
	shf.r.wrap.b32 	%r8590, %r8453, %r8452, 8;
	shf.r.wrap.b32 	%r8591, %r8452, %r8453, 8;
	mov.b64 	%rd11153, {%r8591, %r8590};
	shr.u64 	%rd11154, %rd10580, 7;
	xor.b64  	%rd11155, %rd11152, %rd11154;
	xor.b64  	%rd11156, %rd11155, %rd11153;
	add.s64 	%rd11157, %rd11068, %rd10567;
	add.s64 	%rd11158, %rd11157, %rd11151;
	add.s64 	%rd11159, %rd11158, %rd11156;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8592,%dummy}, %rd11146;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8593}, %rd11146;
	}
	shf.r.wrap.b32 	%r8594, %r8593, %r8592, 19;
	shf.r.wrap.b32 	%r8595, %r8592, %r8593, 19;
	mov.b64 	%rd11160, {%r8595, %r8594};
	shf.l.wrap.b32 	%r8596, %r8592, %r8593, 3;
	shf.l.wrap.b32 	%r8597, %r8593, %r8592, 3;
	mov.b64 	%rd11161, {%r8597, %r8596};
	shr.u64 	%rd11162, %rd11146, 6;
	xor.b64  	%rd11163, %rd11160, %rd11162;
	xor.b64  	%rd11164, %rd11163, %rd11161;
	shf.r.wrap.b32 	%r8598, %r8463, %r8462, 1;
	shf.r.wrap.b32 	%r8599, %r8462, %r8463, 1;
	mov.b64 	%rd11165, {%r8599, %r8598};
	shf.r.wrap.b32 	%r8600, %r8463, %r8462, 8;
	shf.r.wrap.b32 	%r8601, %r8462, %r8463, 8;
	mov.b64 	%rd11166, {%r8601, %r8600};
	shr.u64 	%rd11167, %rd10977, 7;
	xor.b64  	%rd11168, %rd11165, %rd11167;
	xor.b64  	%rd11169, %rd11168, %rd11166;
	add.s64 	%rd11170, %rd11081, %rd10580;
	add.s64 	%rd11171, %rd11170, %rd11164;
	add.s64 	%rd11172, %rd11171, %rd11169;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8602,%dummy}, %rd10953;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8603}, %rd10953;
	}
	shf.r.wrap.b32 	%r8604, %r8603, %r8602, 14;
	shf.r.wrap.b32 	%r8605, %r8602, %r8603, 14;
	mov.b64 	%rd11173, {%r8605, %r8604};
	shf.r.wrap.b32 	%r8606, %r8603, %r8602, 18;
	shf.r.wrap.b32 	%r8607, %r8602, %r8603, 18;
	mov.b64 	%rd11174, {%r8607, %r8606};
	xor.b64  	%rd11175, %rd11174, %rd11173;
	shf.l.wrap.b32 	%r8608, %r8602, %r8603, 23;
	shf.l.wrap.b32 	%r8609, %r8603, %r8602, 23;
	mov.b64 	%rd11176, {%r8609, %r8608};
	xor.b64  	%rd11177, %rd11175, %rd11176;
	xor.b64  	%rd11178, %rd10929, %rd10905;
	and.b64  	%rd11179, %rd11178, %rd10953;
	xor.b64  	%rd11180, %rd11179, %rd10905;
	add.s64 	%rd11181, %rd11180, %rd10881;
	add.s64 	%rd11182, %rd11181, %rd10977;
	add.s64 	%rd11183, %rd11182, %rd12957;
	add.s64 	%rd11184, %rd11183, %rd11177;
	add.s64 	%rd11185, %rd11184, %rd10892;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8610,%dummy}, %rd10964;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8611}, %rd10964;
	}
	shf.r.wrap.b32 	%r8612, %r8611, %r8610, 28;
	shf.r.wrap.b32 	%r8613, %r8610, %r8611, 28;
	mov.b64 	%rd11186, {%r8613, %r8612};
	shf.l.wrap.b32 	%r8614, %r8610, %r8611, 30;
	shf.l.wrap.b32 	%r8615, %r8611, %r8610, 30;
	mov.b64 	%rd11187, {%r8615, %r8614};
	xor.b64  	%rd11188, %rd11187, %rd11186;
	shf.l.wrap.b32 	%r8616, %r8610, %r8611, 25;
	shf.l.wrap.b32 	%r8617, %r8611, %r8610, 25;
	mov.b64 	%rd11189, {%r8617, %r8616};
	xor.b64  	%rd11190, %rd11188, %rd11189;
	xor.b64  	%rd11191, %rd10964, %rd10916;
	xor.b64  	%rd11192, %rd10964, %rd10940;
	and.b64  	%rd11193, %rd11192, %rd11191;
	xor.b64  	%rd11194, %rd11193, %rd10964;
	add.s64 	%rd11195, %rd11184, %rd11194;
	add.s64 	%rd11196, %rd11195, %rd11190;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8618,%dummy}, %rd11185;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8619}, %rd11185;
	}
	shf.r.wrap.b32 	%r8620, %r8619, %r8618, 14;
	shf.r.wrap.b32 	%r8621, %r8618, %r8619, 14;
	mov.b64 	%rd11197, {%r8621, %r8620};
	shf.r.wrap.b32 	%r8622, %r8619, %r8618, 18;
	shf.r.wrap.b32 	%r8623, %r8618, %r8619, 18;
	mov.b64 	%rd11198, {%r8623, %r8622};
	xor.b64  	%rd11199, %rd11198, %rd11197;
	shf.l.wrap.b32 	%r8624, %r8618, %r8619, 23;
	shf.l.wrap.b32 	%r8625, %r8619, %r8618, 23;
	mov.b64 	%rd11200, {%r8625, %r8624};
	xor.b64  	%rd11201, %rd11199, %rd11200;
	xor.b64  	%rd11202, %rd10953, %rd10929;
	and.b64  	%rd11203, %rd11185, %rd11202;
	xor.b64  	%rd11204, %rd11203, %rd10929;
	add.s64 	%rd11205, %rd10990, %rd10905;
	add.s64 	%rd11206, %rd11205, %rd12956;
	add.s64 	%rd11207, %rd11206, %rd11204;
	add.s64 	%rd11208, %rd11207, %rd11201;
	add.s64 	%rd11209, %rd11208, %rd10916;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8626,%dummy}, %rd11196;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8627}, %rd11196;
	}
	shf.r.wrap.b32 	%r8628, %r8627, %r8626, 28;
	shf.r.wrap.b32 	%r8629, %r8626, %r8627, 28;
	mov.b64 	%rd11210, {%r8629, %r8628};
	shf.l.wrap.b32 	%r8630, %r8626, %r8627, 30;
	shf.l.wrap.b32 	%r8631, %r8627, %r8626, 30;
	mov.b64 	%rd11211, {%r8631, %r8630};
	xor.b64  	%rd11212, %rd11211, %rd11210;
	shf.l.wrap.b32 	%r8632, %r8626, %r8627, 25;
	shf.l.wrap.b32 	%r8633, %r8627, %r8626, 25;
	mov.b64 	%rd11213, {%r8633, %r8632};
	xor.b64  	%rd11214, %rd11212, %rd11213;
	xor.b64  	%rd11215, %rd11196, %rd10940;
	xor.b64  	%rd11216, %rd11196, %rd10964;
	and.b64  	%rd11217, %rd11216, %rd11215;
	xor.b64  	%rd11218, %rd11217, %rd11196;
	add.s64 	%rd11219, %rd11208, %rd11218;
	add.s64 	%rd11220, %rd11219, %rd11214;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8634,%dummy}, %rd11209;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8635}, %rd11209;
	}
	shf.r.wrap.b32 	%r8636, %r8635, %r8634, 14;
	shf.r.wrap.b32 	%r8637, %r8634, %r8635, 14;
	mov.b64 	%rd11221, {%r8637, %r8636};
	shf.r.wrap.b32 	%r8638, %r8635, %r8634, 18;
	shf.r.wrap.b32 	%r8639, %r8634, %r8635, 18;
	mov.b64 	%rd11222, {%r8639, %r8638};
	xor.b64  	%rd11223, %rd11222, %rd11221;
	shf.l.wrap.b32 	%r8640, %r8634, %r8635, 23;
	shf.l.wrap.b32 	%r8641, %r8635, %r8634, 23;
	mov.b64 	%rd11224, {%r8641, %r8640};
	xor.b64  	%rd11225, %rd11223, %rd11224;
	xor.b64  	%rd11226, %rd11185, %rd10953;
	and.b64  	%rd11227, %rd11209, %rd11226;
	xor.b64  	%rd11228, %rd11227, %rd10953;
	add.s64 	%rd11229, %rd11003, %rd10929;
	add.s64 	%rd11230, %rd11229, %rd12955;
	add.s64 	%rd11231, %rd11230, %rd11228;
	add.s64 	%rd11232, %rd11231, %rd11225;
	add.s64 	%rd11233, %rd11232, %rd10940;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8642,%dummy}, %rd11220;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8643}, %rd11220;
	}
	shf.r.wrap.b32 	%r8644, %r8643, %r8642, 28;
	shf.r.wrap.b32 	%r8645, %r8642, %r8643, 28;
	mov.b64 	%rd11234, {%r8645, %r8644};
	shf.l.wrap.b32 	%r8646, %r8642, %r8643, 30;
	shf.l.wrap.b32 	%r8647, %r8643, %r8642, 30;
	mov.b64 	%rd11235, {%r8647, %r8646};
	xor.b64  	%rd11236, %rd11235, %rd11234;
	shf.l.wrap.b32 	%r8648, %r8642, %r8643, 25;
	shf.l.wrap.b32 	%r8649, %r8643, %r8642, 25;
	mov.b64 	%rd11237, {%r8649, %r8648};
	xor.b64  	%rd11238, %rd11236, %rd11237;
	xor.b64  	%rd11239, %rd11220, %rd10964;
	xor.b64  	%rd11240, %rd11220, %rd11196;
	and.b64  	%rd11241, %rd11240, %rd11239;
	xor.b64  	%rd11242, %rd11241, %rd11220;
	add.s64 	%rd11243, %rd11232, %rd11242;
	add.s64 	%rd11244, %rd11243, %rd11238;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8650,%dummy}, %rd11233;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8651}, %rd11233;
	}
	shf.r.wrap.b32 	%r8652, %r8651, %r8650, 14;
	shf.r.wrap.b32 	%r8653, %r8650, %r8651, 14;
	mov.b64 	%rd11245, {%r8653, %r8652};
	shf.r.wrap.b32 	%r8654, %r8651, %r8650, 18;
	shf.r.wrap.b32 	%r8655, %r8650, %r8651, 18;
	mov.b64 	%rd11246, {%r8655, %r8654};
	xor.b64  	%rd11247, %rd11246, %rd11245;
	shf.l.wrap.b32 	%r8656, %r8650, %r8651, 23;
	shf.l.wrap.b32 	%r8657, %r8651, %r8650, 23;
	mov.b64 	%rd11248, {%r8657, %r8656};
	xor.b64  	%rd11249, %rd11247, %rd11248;
	xor.b64  	%rd11250, %rd11209, %rd11185;
	and.b64  	%rd11251, %rd11233, %rd11250;
	xor.b64  	%rd11252, %rd11251, %rd11185;
	add.s64 	%rd11253, %rd11016, %rd10953;
	add.s64 	%rd11254, %rd11253, %rd12954;
	add.s64 	%rd11255, %rd11254, %rd11252;
	add.s64 	%rd11256, %rd11255, %rd11249;
	add.s64 	%rd11257, %rd11256, %rd10964;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8658,%dummy}, %rd11244;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8659}, %rd11244;
	}
	shf.r.wrap.b32 	%r8660, %r8659, %r8658, 28;
	shf.r.wrap.b32 	%r8661, %r8658, %r8659, 28;
	mov.b64 	%rd11258, {%r8661, %r8660};
	shf.l.wrap.b32 	%r8662, %r8658, %r8659, 30;
	shf.l.wrap.b32 	%r8663, %r8659, %r8658, 30;
	mov.b64 	%rd11259, {%r8663, %r8662};
	xor.b64  	%rd11260, %rd11259, %rd11258;
	shf.l.wrap.b32 	%r8664, %r8658, %r8659, 25;
	shf.l.wrap.b32 	%r8665, %r8659, %r8658, 25;
	mov.b64 	%rd11261, {%r8665, %r8664};
	xor.b64  	%rd11262, %rd11260, %rd11261;
	xor.b64  	%rd11263, %rd11244, %rd11196;
	xor.b64  	%rd11264, %rd11244, %rd11220;
	and.b64  	%rd11265, %rd11264, %rd11263;
	xor.b64  	%rd11266, %rd11265, %rd11244;
	add.s64 	%rd11267, %rd11256, %rd11266;
	add.s64 	%rd11268, %rd11267, %rd11262;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8666,%dummy}, %rd11257;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8667}, %rd11257;
	}
	shf.r.wrap.b32 	%r8668, %r8667, %r8666, 14;
	shf.r.wrap.b32 	%r8669, %r8666, %r8667, 14;
	mov.b64 	%rd11269, {%r8669, %r8668};
	shf.r.wrap.b32 	%r8670, %r8667, %r8666, 18;
	shf.r.wrap.b32 	%r8671, %r8666, %r8667, 18;
	mov.b64 	%rd11270, {%r8671, %r8670};
	xor.b64  	%rd11271, %rd11270, %rd11269;
	shf.l.wrap.b32 	%r8672, %r8666, %r8667, 23;
	shf.l.wrap.b32 	%r8673, %r8667, %r8666, 23;
	mov.b64 	%rd11272, {%r8673, %r8672};
	xor.b64  	%rd11273, %rd11271, %rd11272;
	xor.b64  	%rd11274, %rd11233, %rd11209;
	and.b64  	%rd11275, %rd11257, %rd11274;
	xor.b64  	%rd11276, %rd11275, %rd11209;
	add.s64 	%rd11277, %rd11185, %rd11029;
	add.s64 	%rd11278, %rd11277, %rd12953;
	add.s64 	%rd11279, %rd11278, %rd11276;
	add.s64 	%rd11280, %rd11279, %rd11273;
	add.s64 	%rd11281, %rd11280, %rd11196;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8674,%dummy}, %rd11268;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8675}, %rd11268;
	}
	shf.r.wrap.b32 	%r8676, %r8675, %r8674, 28;
	shf.r.wrap.b32 	%r8677, %r8674, %r8675, 28;
	mov.b64 	%rd11282, {%r8677, %r8676};
	shf.l.wrap.b32 	%r8678, %r8674, %r8675, 30;
	shf.l.wrap.b32 	%r8679, %r8675, %r8674, 30;
	mov.b64 	%rd11283, {%r8679, %r8678};
	xor.b64  	%rd11284, %rd11283, %rd11282;
	shf.l.wrap.b32 	%r8680, %r8674, %r8675, 25;
	shf.l.wrap.b32 	%r8681, %r8675, %r8674, 25;
	mov.b64 	%rd11285, {%r8681, %r8680};
	xor.b64  	%rd11286, %rd11284, %rd11285;
	xor.b64  	%rd11287, %rd11268, %rd11220;
	xor.b64  	%rd11288, %rd11268, %rd11244;
	and.b64  	%rd11289, %rd11288, %rd11287;
	xor.b64  	%rd11290, %rd11289, %rd11268;
	add.s64 	%rd11291, %rd11280, %rd11290;
	add.s64 	%rd11292, %rd11291, %rd11286;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8682,%dummy}, %rd11281;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8683}, %rd11281;
	}
	shf.r.wrap.b32 	%r8684, %r8683, %r8682, 14;
	shf.r.wrap.b32 	%r8685, %r8682, %r8683, 14;
	mov.b64 	%rd11293, {%r8685, %r8684};
	shf.r.wrap.b32 	%r8686, %r8683, %r8682, 18;
	shf.r.wrap.b32 	%r8687, %r8682, %r8683, 18;
	mov.b64 	%rd11294, {%r8687, %r8686};
	xor.b64  	%rd11295, %rd11294, %rd11293;
	shf.l.wrap.b32 	%r8688, %r8682, %r8683, 23;
	shf.l.wrap.b32 	%r8689, %r8683, %r8682, 23;
	mov.b64 	%rd11296, {%r8689, %r8688};
	xor.b64  	%rd11297, %rd11295, %rd11296;
	xor.b64  	%rd11298, %rd11257, %rd11233;
	and.b64  	%rd11299, %rd11281, %rd11298;
	xor.b64  	%rd11300, %rd11299, %rd11233;
	add.s64 	%rd11301, %rd11209, %rd11042;
	add.s64 	%rd11302, %rd11301, %rd12952;
	add.s64 	%rd11303, %rd11302, %rd11300;
	add.s64 	%rd11304, %rd11303, %rd11297;
	add.s64 	%rd11305, %rd11304, %rd11220;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8690,%dummy}, %rd11292;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8691}, %rd11292;
	}
	shf.r.wrap.b32 	%r8692, %r8691, %r8690, 28;
	shf.r.wrap.b32 	%r8693, %r8690, %r8691, 28;
	mov.b64 	%rd11306, {%r8693, %r8692};
	shf.l.wrap.b32 	%r8694, %r8690, %r8691, 30;
	shf.l.wrap.b32 	%r8695, %r8691, %r8690, 30;
	mov.b64 	%rd11307, {%r8695, %r8694};
	xor.b64  	%rd11308, %rd11307, %rd11306;
	shf.l.wrap.b32 	%r8696, %r8690, %r8691, 25;
	shf.l.wrap.b32 	%r8697, %r8691, %r8690, 25;
	mov.b64 	%rd11309, {%r8697, %r8696};
	xor.b64  	%rd11310, %rd11308, %rd11309;
	xor.b64  	%rd11311, %rd11292, %rd11244;
	xor.b64  	%rd11312, %rd11292, %rd11268;
	and.b64  	%rd11313, %rd11312, %rd11311;
	xor.b64  	%rd11314, %rd11313, %rd11292;
	add.s64 	%rd11315, %rd11304, %rd11314;
	add.s64 	%rd11316, %rd11315, %rd11310;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8698,%dummy}, %rd11305;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8699}, %rd11305;
	}
	shf.r.wrap.b32 	%r8700, %r8699, %r8698, 14;
	shf.r.wrap.b32 	%r8701, %r8698, %r8699, 14;
	mov.b64 	%rd11317, {%r8701, %r8700};
	shf.r.wrap.b32 	%r8702, %r8699, %r8698, 18;
	shf.r.wrap.b32 	%r8703, %r8698, %r8699, 18;
	mov.b64 	%rd11318, {%r8703, %r8702};
	xor.b64  	%rd11319, %rd11318, %rd11317;
	shf.l.wrap.b32 	%r8704, %r8698, %r8699, 23;
	shf.l.wrap.b32 	%r8705, %r8699, %r8698, 23;
	mov.b64 	%rd11320, {%r8705, %r8704};
	xor.b64  	%rd11321, %rd11319, %rd11320;
	xor.b64  	%rd11322, %rd11281, %rd11257;
	and.b64  	%rd11323, %rd11305, %rd11322;
	xor.b64  	%rd11324, %rd11323, %rd11257;
	add.s64 	%rd11325, %rd11233, %rd11055;
	add.s64 	%rd11326, %rd11325, %rd12951;
	add.s64 	%rd11327, %rd11326, %rd11324;
	add.s64 	%rd11328, %rd11327, %rd11321;
	add.s64 	%rd11329, %rd11328, %rd11244;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8706,%dummy}, %rd11316;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8707}, %rd11316;
	}
	shf.r.wrap.b32 	%r8708, %r8707, %r8706, 28;
	shf.r.wrap.b32 	%r8709, %r8706, %r8707, 28;
	mov.b64 	%rd11330, {%r8709, %r8708};
	shf.l.wrap.b32 	%r8710, %r8706, %r8707, 30;
	shf.l.wrap.b32 	%r8711, %r8707, %r8706, 30;
	mov.b64 	%rd11331, {%r8711, %r8710};
	xor.b64  	%rd11332, %rd11331, %rd11330;
	shf.l.wrap.b32 	%r8712, %r8706, %r8707, 25;
	shf.l.wrap.b32 	%r8713, %r8707, %r8706, 25;
	mov.b64 	%rd11333, {%r8713, %r8712};
	xor.b64  	%rd11334, %rd11332, %rd11333;
	xor.b64  	%rd11335, %rd11316, %rd11268;
	xor.b64  	%rd11336, %rd11316, %rd11292;
	and.b64  	%rd11337, %rd11336, %rd11335;
	xor.b64  	%rd11338, %rd11337, %rd11316;
	add.s64 	%rd11339, %rd11328, %rd11338;
	add.s64 	%rd11340, %rd11339, %rd11334;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8714,%dummy}, %rd11329;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8715}, %rd11329;
	}
	shf.r.wrap.b32 	%r8716, %r8715, %r8714, 14;
	shf.r.wrap.b32 	%r8717, %r8714, %r8715, 14;
	mov.b64 	%rd11341, {%r8717, %r8716};
	shf.r.wrap.b32 	%r8718, %r8715, %r8714, 18;
	shf.r.wrap.b32 	%r8719, %r8714, %r8715, 18;
	mov.b64 	%rd11342, {%r8719, %r8718};
	xor.b64  	%rd11343, %rd11342, %rd11341;
	shf.l.wrap.b32 	%r8720, %r8714, %r8715, 23;
	shf.l.wrap.b32 	%r8721, %r8715, %r8714, 23;
	mov.b64 	%rd11344, {%r8721, %r8720};
	xor.b64  	%rd11345, %rd11343, %rd11344;
	xor.b64  	%rd11346, %rd11305, %rd11281;
	and.b64  	%rd11347, %rd11329, %rd11346;
	xor.b64  	%rd11348, %rd11347, %rd11281;
	add.s64 	%rd11349, %rd11257, %rd11068;
	add.s64 	%rd11350, %rd11349, %rd12950;
	add.s64 	%rd11351, %rd11350, %rd11348;
	add.s64 	%rd11352, %rd11351, %rd11345;
	add.s64 	%rd11353, %rd11352, %rd11268;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8722,%dummy}, %rd11340;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8723}, %rd11340;
	}
	shf.r.wrap.b32 	%r8724, %r8723, %r8722, 28;
	shf.r.wrap.b32 	%r8725, %r8722, %r8723, 28;
	mov.b64 	%rd11354, {%r8725, %r8724};
	shf.l.wrap.b32 	%r8726, %r8722, %r8723, 30;
	shf.l.wrap.b32 	%r8727, %r8723, %r8722, 30;
	mov.b64 	%rd11355, {%r8727, %r8726};
	xor.b64  	%rd11356, %rd11355, %rd11354;
	shf.l.wrap.b32 	%r8728, %r8722, %r8723, 25;
	shf.l.wrap.b32 	%r8729, %r8723, %r8722, 25;
	mov.b64 	%rd11357, {%r8729, %r8728};
	xor.b64  	%rd11358, %rd11356, %rd11357;
	xor.b64  	%rd11359, %rd11340, %rd11292;
	xor.b64  	%rd11360, %rd11340, %rd11316;
	and.b64  	%rd11361, %rd11360, %rd11359;
	xor.b64  	%rd11362, %rd11361, %rd11340;
	add.s64 	%rd11363, %rd11352, %rd11362;
	add.s64 	%rd11364, %rd11363, %rd11358;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8730,%dummy}, %rd11353;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8731}, %rd11353;
	}
	shf.r.wrap.b32 	%r8732, %r8731, %r8730, 14;
	shf.r.wrap.b32 	%r8733, %r8730, %r8731, 14;
	mov.b64 	%rd11365, {%r8733, %r8732};
	shf.r.wrap.b32 	%r8734, %r8731, %r8730, 18;
	shf.r.wrap.b32 	%r8735, %r8730, %r8731, 18;
	mov.b64 	%rd11366, {%r8735, %r8734};
	xor.b64  	%rd11367, %rd11366, %rd11365;
	shf.l.wrap.b32 	%r8736, %r8730, %r8731, 23;
	shf.l.wrap.b32 	%r8737, %r8731, %r8730, 23;
	mov.b64 	%rd11368, {%r8737, %r8736};
	xor.b64  	%rd11369, %rd11367, %rd11368;
	xor.b64  	%rd11370, %rd11329, %rd11305;
	and.b64  	%rd11371, %rd11353, %rd11370;
	xor.b64  	%rd11372, %rd11371, %rd11305;
	add.s64 	%rd11373, %rd11281, %rd11081;
	add.s64 	%rd11374, %rd11373, %rd12949;
	add.s64 	%rd11375, %rd11374, %rd11372;
	add.s64 	%rd11376, %rd11375, %rd11369;
	add.s64 	%rd11377, %rd11376, %rd11292;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8738,%dummy}, %rd11364;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8739}, %rd11364;
	}
	shf.r.wrap.b32 	%r8740, %r8739, %r8738, 28;
	shf.r.wrap.b32 	%r8741, %r8738, %r8739, 28;
	mov.b64 	%rd11378, {%r8741, %r8740};
	shf.l.wrap.b32 	%r8742, %r8738, %r8739, 30;
	shf.l.wrap.b32 	%r8743, %r8739, %r8738, 30;
	mov.b64 	%rd11379, {%r8743, %r8742};
	xor.b64  	%rd11380, %rd11379, %rd11378;
	shf.l.wrap.b32 	%r8744, %r8738, %r8739, 25;
	shf.l.wrap.b32 	%r8745, %r8739, %r8738, 25;
	mov.b64 	%rd11381, {%r8745, %r8744};
	xor.b64  	%rd11382, %rd11380, %rd11381;
	xor.b64  	%rd11383, %rd11364, %rd11316;
	xor.b64  	%rd11384, %rd11364, %rd11340;
	and.b64  	%rd11385, %rd11384, %rd11383;
	xor.b64  	%rd11386, %rd11385, %rd11364;
	add.s64 	%rd11387, %rd11376, %rd11386;
	add.s64 	%rd11388, %rd11387, %rd11382;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8746,%dummy}, %rd11377;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8747}, %rd11377;
	}
	shf.r.wrap.b32 	%r8748, %r8747, %r8746, 14;
	shf.r.wrap.b32 	%r8749, %r8746, %r8747, 14;
	mov.b64 	%rd11389, {%r8749, %r8748};
	shf.r.wrap.b32 	%r8750, %r8747, %r8746, 18;
	shf.r.wrap.b32 	%r8751, %r8746, %r8747, 18;
	mov.b64 	%rd11390, {%r8751, %r8750};
	xor.b64  	%rd11391, %rd11390, %rd11389;
	shf.l.wrap.b32 	%r8752, %r8746, %r8747, 23;
	shf.l.wrap.b32 	%r8753, %r8747, %r8746, 23;
	mov.b64 	%rd11392, {%r8753, %r8752};
	xor.b64  	%rd11393, %rd11391, %rd11392;
	xor.b64  	%rd11394, %rd11353, %rd11329;
	and.b64  	%rd11395, %rd11377, %rd11394;
	xor.b64  	%rd11396, %rd11395, %rd11329;
	add.s64 	%rd11397, %rd11305, %rd11094;
	add.s64 	%rd11398, %rd11397, %rd12948;
	add.s64 	%rd11399, %rd11398, %rd11396;
	add.s64 	%rd11400, %rd11399, %rd11393;
	add.s64 	%rd11401, %rd11400, %rd11316;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8754,%dummy}, %rd11388;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8755}, %rd11388;
	}
	shf.r.wrap.b32 	%r8756, %r8755, %r8754, 28;
	shf.r.wrap.b32 	%r8757, %r8754, %r8755, 28;
	mov.b64 	%rd11402, {%r8757, %r8756};
	shf.l.wrap.b32 	%r8758, %r8754, %r8755, 30;
	shf.l.wrap.b32 	%r8759, %r8755, %r8754, 30;
	mov.b64 	%rd11403, {%r8759, %r8758};
	xor.b64  	%rd11404, %rd11403, %rd11402;
	shf.l.wrap.b32 	%r8760, %r8754, %r8755, 25;
	shf.l.wrap.b32 	%r8761, %r8755, %r8754, 25;
	mov.b64 	%rd11405, {%r8761, %r8760};
	xor.b64  	%rd11406, %rd11404, %rd11405;
	xor.b64  	%rd11407, %rd11388, %rd11340;
	xor.b64  	%rd11408, %rd11388, %rd11364;
	and.b64  	%rd11409, %rd11408, %rd11407;
	xor.b64  	%rd11410, %rd11409, %rd11388;
	add.s64 	%rd11411, %rd11400, %rd11410;
	add.s64 	%rd11412, %rd11411, %rd11406;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8762,%dummy}, %rd11401;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8763}, %rd11401;
	}
	shf.r.wrap.b32 	%r8764, %r8763, %r8762, 14;
	shf.r.wrap.b32 	%r8765, %r8762, %r8763, 14;
	mov.b64 	%rd11413, {%r8765, %r8764};
	shf.r.wrap.b32 	%r8766, %r8763, %r8762, 18;
	shf.r.wrap.b32 	%r8767, %r8762, %r8763, 18;
	mov.b64 	%rd11414, {%r8767, %r8766};
	xor.b64  	%rd11415, %rd11414, %rd11413;
	shf.l.wrap.b32 	%r8768, %r8762, %r8763, 23;
	shf.l.wrap.b32 	%r8769, %r8763, %r8762, 23;
	mov.b64 	%rd11416, {%r8769, %r8768};
	xor.b64  	%rd11417, %rd11415, %rd11416;
	xor.b64  	%rd11418, %rd11377, %rd11353;
	and.b64  	%rd11419, %rd11401, %rd11418;
	xor.b64  	%rd11420, %rd11419, %rd11353;
	add.s64 	%rd11421, %rd11329, %rd11107;
	add.s64 	%rd11422, %rd11421, %rd12947;
	add.s64 	%rd11423, %rd11422, %rd11420;
	add.s64 	%rd11424, %rd11423, %rd11417;
	add.s64 	%rd11425, %rd11424, %rd11340;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8770,%dummy}, %rd11412;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8771}, %rd11412;
	}
	shf.r.wrap.b32 	%r8772, %r8771, %r8770, 28;
	shf.r.wrap.b32 	%r8773, %r8770, %r8771, 28;
	mov.b64 	%rd11426, {%r8773, %r8772};
	shf.l.wrap.b32 	%r8774, %r8770, %r8771, 30;
	shf.l.wrap.b32 	%r8775, %r8771, %r8770, 30;
	mov.b64 	%rd11427, {%r8775, %r8774};
	xor.b64  	%rd11428, %rd11427, %rd11426;
	shf.l.wrap.b32 	%r8776, %r8770, %r8771, 25;
	shf.l.wrap.b32 	%r8777, %r8771, %r8770, 25;
	mov.b64 	%rd11429, {%r8777, %r8776};
	xor.b64  	%rd11430, %rd11428, %rd11429;
	xor.b64  	%rd11431, %rd11412, %rd11364;
	xor.b64  	%rd11432, %rd11412, %rd11388;
	and.b64  	%rd11433, %rd11432, %rd11431;
	xor.b64  	%rd11434, %rd11433, %rd11412;
	add.s64 	%rd11435, %rd11424, %rd11434;
	add.s64 	%rd11436, %rd11435, %rd11430;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8778,%dummy}, %rd11425;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8779}, %rd11425;
	}
	shf.r.wrap.b32 	%r8780, %r8779, %r8778, 14;
	shf.r.wrap.b32 	%r8781, %r8778, %r8779, 14;
	mov.b64 	%rd11437, {%r8781, %r8780};
	shf.r.wrap.b32 	%r8782, %r8779, %r8778, 18;
	shf.r.wrap.b32 	%r8783, %r8778, %r8779, 18;
	mov.b64 	%rd11438, {%r8783, %r8782};
	xor.b64  	%rd11439, %rd11438, %rd11437;
	shf.l.wrap.b32 	%r8784, %r8778, %r8779, 23;
	shf.l.wrap.b32 	%r8785, %r8779, %r8778, 23;
	mov.b64 	%rd11440, {%r8785, %r8784};
	xor.b64  	%rd11441, %rd11439, %rd11440;
	xor.b64  	%rd11442, %rd11401, %rd11377;
	and.b64  	%rd11443, %rd11425, %rd11442;
	xor.b64  	%rd11444, %rd11443, %rd11377;
	add.s64 	%rd11445, %rd11353, %rd11120;
	add.s64 	%rd11446, %rd11445, %rd12946;
	add.s64 	%rd11447, %rd11446, %rd11444;
	add.s64 	%rd11448, %rd11447, %rd11441;
	add.s64 	%rd11449, %rd11448, %rd11364;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8786,%dummy}, %rd11436;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8787}, %rd11436;
	}
	shf.r.wrap.b32 	%r8788, %r8787, %r8786, 28;
	shf.r.wrap.b32 	%r8789, %r8786, %r8787, 28;
	mov.b64 	%rd11450, {%r8789, %r8788};
	shf.l.wrap.b32 	%r8790, %r8786, %r8787, 30;
	shf.l.wrap.b32 	%r8791, %r8787, %r8786, 30;
	mov.b64 	%rd11451, {%r8791, %r8790};
	xor.b64  	%rd11452, %rd11451, %rd11450;
	shf.l.wrap.b32 	%r8792, %r8786, %r8787, 25;
	shf.l.wrap.b32 	%r8793, %r8787, %r8786, 25;
	mov.b64 	%rd11453, {%r8793, %r8792};
	xor.b64  	%rd11454, %rd11452, %rd11453;
	xor.b64  	%rd11455, %rd11436, %rd11388;
	xor.b64  	%rd11456, %rd11436, %rd11412;
	and.b64  	%rd11457, %rd11456, %rd11455;
	xor.b64  	%rd11458, %rd11457, %rd11436;
	add.s64 	%rd11459, %rd11448, %rd11458;
	add.s64 	%rd11460, %rd11459, %rd11454;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8794,%dummy}, %rd11449;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8795}, %rd11449;
	}
	shf.r.wrap.b32 	%r8796, %r8795, %r8794, 14;
	shf.r.wrap.b32 	%r8797, %r8794, %r8795, 14;
	mov.b64 	%rd11461, {%r8797, %r8796};
	shf.r.wrap.b32 	%r8798, %r8795, %r8794, 18;
	shf.r.wrap.b32 	%r8799, %r8794, %r8795, 18;
	mov.b64 	%rd11462, {%r8799, %r8798};
	xor.b64  	%rd11463, %rd11462, %rd11461;
	shf.l.wrap.b32 	%r8800, %r8794, %r8795, 23;
	shf.l.wrap.b32 	%r8801, %r8795, %r8794, 23;
	mov.b64 	%rd11464, {%r8801, %r8800};
	xor.b64  	%rd11465, %rd11463, %rd11464;
	xor.b64  	%rd11466, %rd11425, %rd11401;
	and.b64  	%rd11467, %rd11449, %rd11466;
	xor.b64  	%rd11468, %rd11467, %rd11401;
	add.s64 	%rd11469, %rd11377, %rd11133;
	add.s64 	%rd11470, %rd11469, %rd12945;
	add.s64 	%rd11471, %rd11470, %rd11468;
	add.s64 	%rd11472, %rd11471, %rd11465;
	add.s64 	%rd11473, %rd11472, %rd11388;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8802,%dummy}, %rd11460;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8803}, %rd11460;
	}
	shf.r.wrap.b32 	%r8804, %r8803, %r8802, 28;
	shf.r.wrap.b32 	%r8805, %r8802, %r8803, 28;
	mov.b64 	%rd11474, {%r8805, %r8804};
	shf.l.wrap.b32 	%r8806, %r8802, %r8803, 30;
	shf.l.wrap.b32 	%r8807, %r8803, %r8802, 30;
	mov.b64 	%rd11475, {%r8807, %r8806};
	xor.b64  	%rd11476, %rd11475, %rd11474;
	shf.l.wrap.b32 	%r8808, %r8802, %r8803, 25;
	shf.l.wrap.b32 	%r8809, %r8803, %r8802, 25;
	mov.b64 	%rd11477, {%r8809, %r8808};
	xor.b64  	%rd11478, %rd11476, %rd11477;
	xor.b64  	%rd11479, %rd11460, %rd11412;
	xor.b64  	%rd11480, %rd11460, %rd11436;
	and.b64  	%rd11481, %rd11480, %rd11479;
	xor.b64  	%rd11482, %rd11481, %rd11460;
	add.s64 	%rd11483, %rd11472, %rd11482;
	add.s64 	%rd11484, %rd11483, %rd11478;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8810,%dummy}, %rd11473;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8811}, %rd11473;
	}
	shf.r.wrap.b32 	%r8812, %r8811, %r8810, 14;
	shf.r.wrap.b32 	%r8813, %r8810, %r8811, 14;
	mov.b64 	%rd11485, {%r8813, %r8812};
	shf.r.wrap.b32 	%r8814, %r8811, %r8810, 18;
	shf.r.wrap.b32 	%r8815, %r8810, %r8811, 18;
	mov.b64 	%rd11486, {%r8815, %r8814};
	xor.b64  	%rd11487, %rd11486, %rd11485;
	shf.l.wrap.b32 	%r8816, %r8810, %r8811, 23;
	shf.l.wrap.b32 	%r8817, %r8811, %r8810, 23;
	mov.b64 	%rd11488, {%r8817, %r8816};
	xor.b64  	%rd11489, %rd11487, %rd11488;
	xor.b64  	%rd11490, %rd11449, %rd11425;
	and.b64  	%rd11491, %rd11473, %rd11490;
	xor.b64  	%rd11492, %rd11491, %rd11425;
	add.s64 	%rd11493, %rd11401, %rd11146;
	add.s64 	%rd11494, %rd11493, %rd12944;
	add.s64 	%rd11495, %rd11494, %rd11492;
	add.s64 	%rd11496, %rd11495, %rd11489;
	add.s64 	%rd11497, %rd11496, %rd11412;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8818,%dummy}, %rd11484;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8819}, %rd11484;
	}
	shf.r.wrap.b32 	%r8820, %r8819, %r8818, 28;
	shf.r.wrap.b32 	%r8821, %r8818, %r8819, 28;
	mov.b64 	%rd11498, {%r8821, %r8820};
	shf.l.wrap.b32 	%r8822, %r8818, %r8819, 30;
	shf.l.wrap.b32 	%r8823, %r8819, %r8818, 30;
	mov.b64 	%rd11499, {%r8823, %r8822};
	xor.b64  	%rd11500, %rd11499, %rd11498;
	shf.l.wrap.b32 	%r8824, %r8818, %r8819, 25;
	shf.l.wrap.b32 	%r8825, %r8819, %r8818, 25;
	mov.b64 	%rd11501, {%r8825, %r8824};
	xor.b64  	%rd11502, %rd11500, %rd11501;
	xor.b64  	%rd11503, %rd11484, %rd11436;
	xor.b64  	%rd11504, %rd11484, %rd11460;
	and.b64  	%rd11505, %rd11504, %rd11503;
	xor.b64  	%rd11506, %rd11505, %rd11484;
	add.s64 	%rd11507, %rd11496, %rd11506;
	add.s64 	%rd11508, %rd11507, %rd11502;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8826,%dummy}, %rd11497;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8827}, %rd11497;
	}
	shf.r.wrap.b32 	%r8828, %r8827, %r8826, 14;
	shf.r.wrap.b32 	%r8829, %r8826, %r8827, 14;
	mov.b64 	%rd11509, {%r8829, %r8828};
	shf.r.wrap.b32 	%r8830, %r8827, %r8826, 18;
	shf.r.wrap.b32 	%r8831, %r8826, %r8827, 18;
	mov.b64 	%rd11510, {%r8831, %r8830};
	xor.b64  	%rd11511, %rd11510, %rd11509;
	shf.l.wrap.b32 	%r8832, %r8826, %r8827, 23;
	shf.l.wrap.b32 	%r8833, %r8827, %r8826, 23;
	mov.b64 	%rd11512, {%r8833, %r8832};
	xor.b64  	%rd11513, %rd11511, %rd11512;
	xor.b64  	%rd11514, %rd11473, %rd11449;
	and.b64  	%rd11515, %rd11497, %rd11514;
	xor.b64  	%rd11516, %rd11515, %rd11449;
	add.s64 	%rd11517, %rd11425, %rd11159;
	add.s64 	%rd11518, %rd11517, %rd12943;
	add.s64 	%rd11519, %rd11518, %rd11516;
	add.s64 	%rd11520, %rd11519, %rd11513;
	add.s64 	%rd11521, %rd11520, %rd11436;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8834,%dummy}, %rd11508;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8835}, %rd11508;
	}
	shf.r.wrap.b32 	%r8836, %r8835, %r8834, 28;
	shf.r.wrap.b32 	%r8837, %r8834, %r8835, 28;
	mov.b64 	%rd11522, {%r8837, %r8836};
	shf.l.wrap.b32 	%r8838, %r8834, %r8835, 30;
	shf.l.wrap.b32 	%r8839, %r8835, %r8834, 30;
	mov.b64 	%rd11523, {%r8839, %r8838};
	xor.b64  	%rd11524, %rd11523, %rd11522;
	shf.l.wrap.b32 	%r8840, %r8834, %r8835, 25;
	shf.l.wrap.b32 	%r8841, %r8835, %r8834, 25;
	mov.b64 	%rd11525, {%r8841, %r8840};
	xor.b64  	%rd11526, %rd11524, %rd11525;
	xor.b64  	%rd11527, %rd11508, %rd11460;
	xor.b64  	%rd11528, %rd11508, %rd11484;
	and.b64  	%rd11529, %rd11528, %rd11527;
	xor.b64  	%rd11530, %rd11529, %rd11508;
	add.s64 	%rd11531, %rd11520, %rd11530;
	add.s64 	%rd11532, %rd11531, %rd11526;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8842,%dummy}, %rd11521;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8843}, %rd11521;
	}
	shf.r.wrap.b32 	%r8844, %r8843, %r8842, 14;
	shf.r.wrap.b32 	%r8845, %r8842, %r8843, 14;
	mov.b64 	%rd11533, {%r8845, %r8844};
	shf.r.wrap.b32 	%r8846, %r8843, %r8842, 18;
	shf.r.wrap.b32 	%r8847, %r8842, %r8843, 18;
	mov.b64 	%rd11534, {%r8847, %r8846};
	xor.b64  	%rd11535, %rd11534, %rd11533;
	shf.l.wrap.b32 	%r8848, %r8842, %r8843, 23;
	shf.l.wrap.b32 	%r8849, %r8843, %r8842, 23;
	mov.b64 	%rd11536, {%r8849, %r8848};
	xor.b64  	%rd11537, %rd11535, %rd11536;
	xor.b64  	%rd11538, %rd11497, %rd11473;
	and.b64  	%rd11539, %rd11521, %rd11538;
	xor.b64  	%rd11540, %rd11539, %rd11473;
	add.s64 	%rd11541, %rd11449, %rd11172;
	add.s64 	%rd11542, %rd11541, %rd12942;
	add.s64 	%rd11543, %rd11542, %rd11540;
	add.s64 	%rd11544, %rd11543, %rd11537;
	add.s64 	%rd11545, %rd11544, %rd11460;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8850,%dummy}, %rd11532;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8851}, %rd11532;
	}
	shf.r.wrap.b32 	%r8852, %r8851, %r8850, 28;
	shf.r.wrap.b32 	%r8853, %r8850, %r8851, 28;
	mov.b64 	%rd11546, {%r8853, %r8852};
	shf.l.wrap.b32 	%r8854, %r8850, %r8851, 30;
	shf.l.wrap.b32 	%r8855, %r8851, %r8850, 30;
	mov.b64 	%rd11547, {%r8855, %r8854};
	xor.b64  	%rd11548, %rd11547, %rd11546;
	shf.l.wrap.b32 	%r8856, %r8850, %r8851, 25;
	shf.l.wrap.b32 	%r8857, %r8851, %r8850, 25;
	mov.b64 	%rd11549, {%r8857, %r8856};
	xor.b64  	%rd11550, %rd11548, %rd11549;
	xor.b64  	%rd11551, %rd11532, %rd11484;
	xor.b64  	%rd11552, %rd11532, %rd11508;
	and.b64  	%rd11553, %rd11552, %rd11551;
	xor.b64  	%rd11554, %rd11553, %rd11532;
	add.s64 	%rd11555, %rd11544, %rd11554;
	add.s64 	%rd11556, %rd11555, %rd11550;
	add.s64 	%rd333, %rd13037, %rd11556;
	st.local.u64 	[%rd12902], %rd333;
	add.s64 	%rd334, %rd13036, %rd11532;
	st.local.u64 	[%rd24], %rd334;
	add.s64 	%rd335, %rd13035, %rd11508;
	st.local.u64 	[%rd24+8], %rd335;
	add.s64 	%rd336, %rd13034, %rd11484;
	st.local.u64 	[%rd24+16], %rd336;
	add.s64 	%rd11557, %rd13033, %rd11545;
	st.local.u64 	[%rd24+24], %rd11557;
	add.s64 	%rd11558, %rd13032, %rd11521;
	st.local.u64 	[%rd24+32], %rd11558;
	add.s64 	%rd11559, %rd13031, %rd11497;
	st.local.u64 	[%rd24+40], %rd11559;
	add.s64 	%rd11560, %rd13030, %rd11473;
	st.local.u64 	[%rd24+48], %rd11560;
	shr.u64 	%rd11561, %rd305, 32;
	cvt.u32.u64	%r6878, %rd11561;
	shr.u64 	%rd11562, %rd306, 32;
	cvt.u32.u64	%r6882, %rd11562;
	shr.u64 	%rd11563, %rd307, 32;
	cvt.u32.u64	%r6886, %rd11563;
	shr.u64 	%rd11564, %rd308, 32;
	cvt.u32.u64	%r6890, %rd11564;
	// inline asm
	prmt.b32 %r6877, %r6878, 0, 0x0123;
	// inline asm
	cvt.u32.u64	%r6880, %rd305;
	// inline asm
	prmt.b32 %r6879, %r6880, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r6881, %r6882, 0, 0x0123;
	// inline asm
	cvt.u32.u64	%r6884, %rd306;
	// inline asm
	prmt.b32 %r6883, %r6884, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r6885, %r6886, 0, 0x0123;
	// inline asm
	cvt.u32.u64	%r6888, %rd307;
	// inline asm
	prmt.b32 %r6887, %r6888, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r6889, %r6890, 0, 0x0123;
	// inline asm
	cvt.u32.u64	%r6892, %rd308;
	// inline asm
	prmt.b32 %r6891, %r6892, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r10693, %r6877, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r6895, %r6879, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r6897, %r6881, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r6899, %r6883, 0, 0x0123;
	// inline asm
	add.s64 	%rd337, %rd13038, 4;
	// inline asm
	prmt.b32 %r6901, %r6885, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r6903, %r6887, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r6905, %r6889, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r6907, %r6891, 0, 0x0123;
	// inline asm
	st.local.v4.u32 	[%rd13038], {%r10693, %r6895, %r6897, %r6899};
	st.local.v4.u32 	[%rd13038+16], {%r6901, %r6903, %r6905, %r6907};
	bfe.u32 	%r8858, %r6907, 16, 8;
	mul.wide.u32 	%rd11565, %r8858, 4;
	mov.u64 	%rd11566, m09600_comp$s_te2;
	add.s64 	%rd11567, %rd11566, %rd11565;
	ld.shared.u32 	%r8859, [%rd11567];
	and.b32  	%r8860, %r8859, -16777216;
	xor.b32  	%r8861, %r8860, %r10693;
	bfe.u32 	%r8862, %r6907, 8, 8;
	mul.wide.u32 	%rd11568, %r8862, 4;
	mov.u64 	%rd11569, m09600_comp$s_te3;
	add.s64 	%rd11570, %rd11569, %rd11568;
	ld.shared.u32 	%r8863, [%rd11570];
	and.b32  	%r8864, %r8863, 16711680;
	xor.b32  	%r8865, %r8861, %r8864;
	and.b32  	%r8866, %r6907, 255;
	mul.wide.u32 	%rd11571, %r8866, 4;
	mov.u64 	%rd11572, m09600_comp$s_te0;
	add.s64 	%rd11573, %rd11572, %rd11571;
	ld.shared.u32 	%r8867, [%rd11573];
	and.b32  	%r8868, %r8867, 65280;
	xor.b32  	%r8869, %r8865, %r8868;
	shr.u32 	%r8870, %r6907, 24;
	mul.wide.u32 	%rd11574, %r8870, 4;
	mov.u64 	%rd11575, m09600_comp$s_te1;
	add.s64 	%rd11576, %rd11575, %rd11574;
	ld.shared.u8 	%r8871, [%rd11576];
	xor.b32  	%r8872, %r8869, %r8871;
	ld.const.v2.u32 	{%r8873, %r8874}, [rcon];
	xor.b32  	%r8875, %r8872, %r8873;
	xor.b32  	%r8876, %r8875, %r6895;
	xor.b32  	%r8877, %r8876, %r6897;
	xor.b32  	%r8878, %r8877, %r6899;
	st.local.v4.u32 	[%rd13038+32], {%r8875, %r8876, %r8877, %r8878};
	shr.u32 	%r8879, %r8878, 24;
	mul.wide.u32 	%rd11577, %r8879, 4;
	add.s64 	%rd11578, %rd11566, %rd11577;
	ld.shared.u32 	%r8880, [%rd11578];
	and.b32  	%r8881, %r8880, -16777216;
	xor.b32  	%r8882, %r8881, %r6901;
	bfe.u32 	%r8883, %r8878, 16, 8;
	mul.wide.u32 	%rd11579, %r8883, 4;
	add.s64 	%rd11580, %rd11569, %rd11579;
	ld.shared.u32 	%r8884, [%rd11580];
	and.b32  	%r8885, %r8884, 16711680;
	xor.b32  	%r8886, %r8882, %r8885;
	bfe.u32 	%r8887, %r8878, 8, 8;
	mul.wide.u32 	%rd11581, %r8887, 4;
	add.s64 	%rd11582, %rd11572, %rd11581;
	ld.shared.u32 	%r8888, [%rd11582];
	and.b32  	%r8889, %r8888, 65280;
	xor.b32  	%r8890, %r8886, %r8889;
	and.b32  	%r8891, %r8878, 255;
	mul.wide.u32 	%rd11583, %r8891, 4;
	add.s64 	%rd11584, %rd11575, %rd11583;
	ld.shared.u8 	%r8892, [%rd11584];
	xor.b32  	%r8893, %r8890, %r8892;
	xor.b32  	%r8894, %r8893, %r6903;
	xor.b32  	%r8895, %r8894, %r6905;
	xor.b32  	%r8896, %r8895, %r6907;
	st.local.v4.u32 	[%rd13038+48], {%r8893, %r8894, %r8895, %r8896};
	bfe.u32 	%r8897, %r8896, 16, 8;
	mul.wide.u32 	%rd11585, %r8897, 4;
	add.s64 	%rd11586, %rd11566, %rd11585;
	ld.shared.u32 	%r8898, [%rd11586];
	and.b32  	%r8899, %r8898, -16777216;
	xor.b32  	%r8900, %r8899, %r8875;
	bfe.u32 	%r8901, %r8896, 8, 8;
	mul.wide.u32 	%rd11587, %r8901, 4;
	add.s64 	%rd11588, %rd11569, %rd11587;
	ld.shared.u32 	%r8902, [%rd11588];
	and.b32  	%r8903, %r8902, 16711680;
	xor.b32  	%r8904, %r8900, %r8903;
	and.b32  	%r8905, %r8896, 255;
	mul.wide.u32 	%rd11589, %r8905, 4;
	add.s64 	%rd11590, %rd11572, %rd11589;
	ld.shared.u32 	%r8906, [%rd11590];
	and.b32  	%r8907, %r8906, 65280;
	xor.b32  	%r8908, %r8904, %r8907;
	shr.u32 	%r8909, %r8896, 24;
	mul.wide.u32 	%rd11591, %r8909, 4;
	add.s64 	%rd11592, %rd11575, %rd11591;
	ld.shared.u8 	%r8910, [%rd11592];
	xor.b32  	%r8911, %r8908, %r8910;
	xor.b32  	%r8912, %r8911, %r8874;
	xor.b32  	%r8913, %r8912, %r8876;
	xor.b32  	%r8914, %r8912, %r6897;
	xor.b32  	%r8915, %r8914, %r8878;
	st.local.v4.u32 	[%rd13038+64], {%r8912, %r8913, %r8914, %r8915};
	shr.u32 	%r8916, %r8915, 24;
	mul.wide.u32 	%rd11593, %r8916, 4;
	add.s64 	%rd11594, %rd11566, %rd11593;
	ld.shared.u32 	%r8917, [%rd11594];
	and.b32  	%r8918, %r8917, -16777216;
	xor.b32  	%r8919, %r8918, %r8893;
	bfe.u32 	%r8920, %r8915, 16, 8;
	mul.wide.u32 	%rd11595, %r8920, 4;
	add.s64 	%rd11596, %rd11569, %rd11595;
	ld.shared.u32 	%r8921, [%rd11596];
	and.b32  	%r8922, %r8921, 16711680;
	xor.b32  	%r8923, %r8919, %r8922;
	bfe.u32 	%r8924, %r8915, 8, 8;
	mul.wide.u32 	%rd11597, %r8924, 4;
	add.s64 	%rd11598, %rd11572, %rd11597;
	ld.shared.u32 	%r8925, [%rd11598];
	and.b32  	%r8926, %r8925, 65280;
	xor.b32  	%r8927, %r8923, %r8926;
	and.b32  	%r8928, %r8915, 255;
	mul.wide.u32 	%rd11599, %r8928, 4;
	add.s64 	%rd11600, %rd11575, %rd11599;
	ld.shared.u8 	%r8929, [%rd11600];
	xor.b32  	%r8930, %r8927, %r8929;
	xor.b32  	%r8931, %r8930, %r8894;
	xor.b32  	%r8932, %r8930, %r6905;
	xor.b32  	%r8933, %r8932, %r8896;
	st.local.v4.u32 	[%rd13038+80], {%r8930, %r8931, %r8932, %r8933};
	bfe.u32 	%r8934, %r8933, 16, 8;
	mul.wide.u32 	%rd11601, %r8934, 4;
	add.s64 	%rd11602, %rd11566, %rd11601;
	ld.shared.u32 	%r8935, [%rd11602];
	and.b32  	%r8936, %r8935, -16777216;
	xor.b32  	%r8937, %r8936, %r8912;
	bfe.u32 	%r8938, %r8933, 8, 8;
	mul.wide.u32 	%rd11603, %r8938, 4;
	add.s64 	%rd11604, %rd11569, %rd11603;
	ld.shared.u32 	%r8939, [%rd11604];
	and.b32  	%r8940, %r8939, 16711680;
	xor.b32  	%r8941, %r8937, %r8940;
	and.b32  	%r8942, %r8933, 255;
	mul.wide.u32 	%rd11605, %r8942, 4;
	add.s64 	%rd11606, %rd11572, %rd11605;
	ld.shared.u32 	%r8943, [%rd11606];
	and.b32  	%r8944, %r8943, 65280;
	xor.b32  	%r8945, %r8941, %r8944;
	shr.u32 	%r8946, %r8933, 24;
	mul.wide.u32 	%rd11607, %r8946, 4;
	add.s64 	%rd11608, %rd11575, %rd11607;
	ld.shared.u8 	%r8947, [%rd11608];
	xor.b32  	%r8948, %r8945, %r8947;
	ld.const.v2.u32 	{%r8949, %r8950}, [rcon+8];
	xor.b32  	%r8951, %r8948, %r8949;
	xor.b32  	%r8952, %r8951, %r8913;
	xor.b32  	%r8953, %r8952, %r8878;
	xor.b32  	%r8954, %r8952, %r8914;
	st.local.v4.u32 	[%rd13038+96], {%r8951, %r8952, %r8954, %r8953};
	shr.u32 	%r8955, %r8953, 24;
	mul.wide.u32 	%rd11609, %r8955, 4;
	add.s64 	%rd11610, %rd11566, %rd11609;
	ld.shared.u32 	%r8956, [%rd11610];
	and.b32  	%r8957, %r8956, -16777216;
	xor.b32  	%r8958, %r8957, %r8930;
	bfe.u32 	%r8959, %r8953, 16, 8;
	mul.wide.u32 	%rd11611, %r8959, 4;
	add.s64 	%rd11612, %rd11569, %rd11611;
	ld.shared.u32 	%r8960, [%rd11612];
	and.b32  	%r8961, %r8960, 16711680;
	xor.b32  	%r8962, %r8958, %r8961;
	bfe.u32 	%r8963, %r8953, 8, 8;
	mul.wide.u32 	%rd11613, %r8963, 4;
	add.s64 	%rd11614, %rd11572, %rd11613;
	ld.shared.u32 	%r8964, [%rd11614];
	and.b32  	%r8965, %r8964, 65280;
	xor.b32  	%r8966, %r8962, %r8965;
	and.b32  	%r8967, %r8953, 255;
	mul.wide.u32 	%rd11615, %r8967, 4;
	add.s64 	%rd11616, %rd11575, %rd11615;
	ld.shared.u8 	%r8968, [%rd11616];
	xor.b32  	%r8969, %r8966, %r8968;
	xor.b32  	%r8970, %r8969, %r8931;
	xor.b32  	%r8971, %r8970, %r8896;
	xor.b32  	%r8972, %r8970, %r8932;
	st.local.v4.u32 	[%rd13038+112], {%r8969, %r8970, %r8972, %r8971};
	bfe.u32 	%r8973, %r8971, 16, 8;
	mul.wide.u32 	%rd11617, %r8973, 4;
	add.s64 	%rd11618, %rd11566, %rd11617;
	ld.shared.u32 	%r8974, [%rd11618];
	and.b32  	%r8975, %r8974, -16777216;
	xor.b32  	%r8976, %r8975, %r8951;
	bfe.u32 	%r8977, %r8971, 8, 8;
	mul.wide.u32 	%rd11619, %r8977, 4;
	add.s64 	%rd11620, %rd11569, %rd11619;
	ld.shared.u32 	%r8978, [%rd11620];
	and.b32  	%r8979, %r8978, 16711680;
	xor.b32  	%r8980, %r8976, %r8979;
	and.b32  	%r8981, %r8971, 255;
	mul.wide.u32 	%rd11621, %r8981, 4;
	add.s64 	%rd11622, %rd11572, %rd11621;
	ld.shared.u32 	%r8982, [%rd11622];
	and.b32  	%r8983, %r8982, 65280;
	xor.b32  	%r8984, %r8980, %r8983;
	shr.u32 	%r8985, %r8971, 24;
	mul.wide.u32 	%rd11623, %r8985, 4;
	add.s64 	%rd11624, %rd11575, %rd11623;
	ld.shared.u8 	%r8986, [%rd11624];
	xor.b32  	%r8987, %r8984, %r8986;
	xor.b32  	%r8988, %r8987, %r8950;
	xor.b32  	%r8989, %r8988, %r8952;
	xor.b32  	%r8990, %r8988, %r8914;
	xor.b32  	%r8991, %r8990, %r8953;
	st.local.v4.u32 	[%rd13038+128], {%r8988, %r8989, %r8990, %r8991};
	shr.u32 	%r8992, %r8991, 24;
	mul.wide.u32 	%rd11625, %r8992, 4;
	add.s64 	%rd11626, %rd11566, %rd11625;
	ld.shared.u32 	%r8993, [%rd11626];
	and.b32  	%r8994, %r8993, -16777216;
	xor.b32  	%r8995, %r8994, %r8969;
	bfe.u32 	%r8996, %r8991, 16, 8;
	mul.wide.u32 	%rd11627, %r8996, 4;
	add.s64 	%rd11628, %rd11569, %rd11627;
	ld.shared.u32 	%r8997, [%rd11628];
	and.b32  	%r8998, %r8997, 16711680;
	xor.b32  	%r8999, %r8995, %r8998;
	bfe.u32 	%r9000, %r8991, 8, 8;
	mul.wide.u32 	%rd11629, %r9000, 4;
	add.s64 	%rd11630, %rd11572, %rd11629;
	ld.shared.u32 	%r9001, [%rd11630];
	and.b32  	%r9002, %r9001, 65280;
	xor.b32  	%r9003, %r8999, %r9002;
	and.b32  	%r9004, %r8991, 255;
	mul.wide.u32 	%rd11631, %r9004, 4;
	add.s64 	%rd11632, %rd11575, %rd11631;
	ld.shared.u8 	%r9005, [%rd11632];
	xor.b32  	%r9006, %r9003, %r9005;
	xor.b32  	%r9007, %r9006, %r8970;
	xor.b32  	%r9008, %r9006, %r8932;
	xor.b32  	%r9009, %r9008, %r8971;
	st.local.v4.u32 	[%rd13038+144], {%r9006, %r9007, %r9008, %r9009};
	bfe.u32 	%r9010, %r9009, 16, 8;
	mul.wide.u32 	%rd11633, %r9010, 4;
	add.s64 	%rd11634, %rd11566, %rd11633;
	ld.shared.u32 	%r9011, [%rd11634];
	and.b32  	%r9012, %r9011, -16777216;
	xor.b32  	%r9013, %r9012, %r8988;
	bfe.u32 	%r9014, %r9009, 8, 8;
	mul.wide.u32 	%rd11635, %r9014, 4;
	add.s64 	%rd11636, %rd11569, %rd11635;
	ld.shared.u32 	%r9015, [%rd11636];
	and.b32  	%r9016, %r9015, 16711680;
	xor.b32  	%r9017, %r9013, %r9016;
	and.b32  	%r9018, %r9009, 255;
	mul.wide.u32 	%rd11637, %r9018, 4;
	add.s64 	%rd11638, %rd11572, %rd11637;
	ld.shared.u32 	%r9019, [%rd11638];
	and.b32  	%r9020, %r9019, 65280;
	xor.b32  	%r9021, %r9017, %r9020;
	shr.u32 	%r9022, %r9009, 24;
	mul.wide.u32 	%rd11639, %r9022, 4;
	add.s64 	%rd11640, %rd11575, %rd11639;
	ld.shared.u8 	%r9023, [%rd11640];
	xor.b32  	%r9024, %r9021, %r9023;
	ld.const.v2.u32 	{%r9025, %r9026}, [rcon+16];
	xor.b32  	%r9027, %r9024, %r9025;
	xor.b32  	%r9028, %r9027, %r8989;
	xor.b32  	%r9029, %r9028, %r8953;
	xor.b32  	%r9030, %r9028, %r8990;
	st.local.v4.u32 	[%rd13038+160], {%r9027, %r9028, %r9030, %r9029};
	shr.u32 	%r9031, %r9029, 24;
	mul.wide.u32 	%rd11641, %r9031, 4;
	add.s64 	%rd11642, %rd11566, %rd11641;
	ld.shared.u32 	%r9032, [%rd11642];
	and.b32  	%r9033, %r9032, -16777216;
	xor.b32  	%r9034, %r9033, %r9006;
	bfe.u32 	%r9035, %r9029, 16, 8;
	mul.wide.u32 	%rd11643, %r9035, 4;
	add.s64 	%rd11644, %rd11569, %rd11643;
	ld.shared.u32 	%r9036, [%rd11644];
	and.b32  	%r9037, %r9036, 16711680;
	xor.b32  	%r9038, %r9034, %r9037;
	bfe.u32 	%r9039, %r9029, 8, 8;
	mul.wide.u32 	%rd11645, %r9039, 4;
	add.s64 	%rd11646, %rd11572, %rd11645;
	ld.shared.u32 	%r9040, [%rd11646];
	and.b32  	%r9041, %r9040, 65280;
	xor.b32  	%r9042, %r9038, %r9041;
	and.b32  	%r9043, %r9029, 255;
	mul.wide.u32 	%rd11647, %r9043, 4;
	add.s64 	%rd11648, %rd11575, %rd11647;
	ld.shared.u8 	%r9044, [%rd11648];
	xor.b32  	%r9045, %r9042, %r9044;
	xor.b32  	%r9046, %r9045, %r9007;
	xor.b32  	%r9047, %r9046, %r8971;
	xor.b32  	%r9048, %r9046, %r9008;
	st.local.v4.u32 	[%rd13038+176], {%r9045, %r9046, %r9048, %r9047};
	bfe.u32 	%r9049, %r9047, 16, 8;
	mul.wide.u32 	%rd11649, %r9049, 4;
	add.s64 	%rd11650, %rd11566, %rd11649;
	ld.shared.u32 	%r9050, [%rd11650];
	and.b32  	%r9051, %r9050, -16777216;
	xor.b32  	%r9052, %r9051, %r9027;
	bfe.u32 	%r9053, %r9047, 8, 8;
	mul.wide.u32 	%rd11651, %r9053, 4;
	add.s64 	%rd11652, %rd11569, %rd11651;
	ld.shared.u32 	%r9054, [%rd11652];
	and.b32  	%r9055, %r9054, 16711680;
	xor.b32  	%r9056, %r9052, %r9055;
	and.b32  	%r9057, %r9047, 255;
	mul.wide.u32 	%rd11653, %r9057, 4;
	add.s64 	%rd11654, %rd11572, %rd11653;
	ld.shared.u32 	%r9058, [%rd11654];
	and.b32  	%r9059, %r9058, 65280;
	xor.b32  	%r9060, %r9056, %r9059;
	shr.u32 	%r9061, %r9047, 24;
	mul.wide.u32 	%rd11655, %r9061, 4;
	add.s64 	%rd11656, %rd11575, %rd11655;
	ld.shared.u8 	%r9062, [%rd11656];
	xor.b32  	%r9063, %r9060, %r9062;
	xor.b32  	%r9064, %r9063, %r9026;
	xor.b32  	%r9065, %r9064, %r9028;
	xor.b32  	%r9066, %r9064, %r8990;
	xor.b32  	%r9067, %r9066, %r9029;
	st.local.v4.u32 	[%rd13038+192], {%r9064, %r9065, %r9066, %r9067};
	shr.u32 	%r9068, %r9067, 24;
	mul.wide.u32 	%rd11657, %r9068, 4;
	add.s64 	%rd11658, %rd11566, %rd11657;
	ld.shared.u32 	%r9069, [%rd11658];
	and.b32  	%r9070, %r9069, -16777216;
	xor.b32  	%r9071, %r9070, %r9045;
	bfe.u32 	%r9072, %r9067, 16, 8;
	mul.wide.u32 	%rd11659, %r9072, 4;
	add.s64 	%rd11660, %rd11569, %rd11659;
	ld.shared.u32 	%r9073, [%rd11660];
	and.b32  	%r9074, %r9073, 16711680;
	xor.b32  	%r9075, %r9071, %r9074;
	bfe.u32 	%r9076, %r9067, 8, 8;
	mul.wide.u32 	%rd11661, %r9076, 4;
	add.s64 	%rd11662, %rd11572, %rd11661;
	ld.shared.u32 	%r9077, [%rd11662];
	and.b32  	%r9078, %r9077, 65280;
	xor.b32  	%r9079, %r9075, %r9078;
	and.b32  	%r9080, %r9067, 255;
	mul.wide.u32 	%rd11663, %r9080, 4;
	add.s64 	%rd11664, %rd11575, %rd11663;
	ld.shared.u8 	%r9081, [%rd11664];
	xor.b32  	%r9082, %r9079, %r9081;
	xor.b32  	%r9083, %r9082, %r9046;
	xor.b32  	%r9084, %r9082, %r9008;
	xor.b32  	%r9085, %r9084, %r9047;
	st.local.v4.u32 	[%rd13038+208], {%r9082, %r9083, %r9084, %r9085};
	bfe.u32 	%r9086, %r9085, 16, 8;
	mul.wide.u32 	%rd11665, %r9086, 4;
	add.s64 	%rd11666, %rd11566, %rd11665;
	ld.shared.u32 	%r9087, [%rd11666];
	and.b32  	%r9088, %r9087, -16777216;
	xor.b32  	%r9089, %r9088, %r9064;
	bfe.u32 	%r9090, %r9085, 8, 8;
	mul.wide.u32 	%rd11667, %r9090, 4;
	add.s64 	%rd11668, %rd11569, %rd11667;
	ld.shared.u32 	%r9091, [%rd11668];
	and.b32  	%r9092, %r9091, 16711680;
	xor.b32  	%r9093, %r9089, %r9092;
	and.b32  	%r9094, %r9085, 255;
	mul.wide.u32 	%rd11669, %r9094, 4;
	add.s64 	%rd11670, %rd11572, %rd11669;
	ld.shared.u32 	%r9095, [%rd11670];
	and.b32  	%r9096, %r9095, 65280;
	xor.b32  	%r9097, %r9093, %r9096;
	shr.u32 	%r9098, %r9085, 24;
	mul.wide.u32 	%rd11671, %r9098, 4;
	add.s64 	%rd11672, %rd11575, %rd11671;
	ld.shared.u8 	%r9099, [%rd11672];
	xor.b32  	%r9100, %r9097, %r9099;
	ld.const.u32 	%r313, [rcon+24];
	xor.b32  	%r10692, %r9100, %r313;
	xor.b32  	%r9101, %r10692, %r9065;
	xor.b32  	%r9102, %r9101, %r9029;
	xor.b32  	%r9103, %r9101, %r9066;
	st.local.v4.u32 	[%rd13038+224], {%r10692, %r9101, %r9103, %r9102};
	mov.u32 	%r10694, 56;
	bra.uni 	BB6_650;

BB6_686:
	mul.wide.u32 	%rd12855, %r10695, 4;
	add.s64 	%rd12856, %rd13038, %rd12855;
	ld.local.u32 	%r10693, [%rd12856];
	mul.wide.u32 	%rd12857, %r10694, 4;
	add.s64 	%rd12858, %rd13038, %rd12857;
	ld.local.u32 	%r10692, [%rd12858];

BB6_650:
	mul.wide.u32 	%rd11673, %r10695, 4;
	add.s64 	%rd11674, %rd13038, %rd11673;
	mul.wide.u32 	%rd11675, %r10694, 4;
	add.s64 	%rd11676, %rd13038, %rd11675;
	st.local.u32 	[%rd11674], %r10692;
	st.local.u32 	[%rd11676], %r10693;
	add.s32 	%r9104, %r10695, 1;
	mul.wide.u32 	%rd11677, %r9104, 4;
	add.s64 	%rd11678, %rd13038, %rd11677;
	ld.local.u32 	%r9105, [%rd11678];
	add.s32 	%r9106, %r10694, 1;
	mul.wide.u32 	%rd11679, %r9106, 4;
	add.s64 	%rd11680, %rd13038, %rd11679;
	ld.local.u32 	%r9107, [%rd11680];
	st.local.u32 	[%rd11678], %r9107;
	st.local.u32 	[%rd11680], %r9105;
	add.s32 	%r9108, %r10695, 2;
	mul.wide.u32 	%rd11681, %r9108, 4;
	add.s64 	%rd11682, %rd13038, %rd11681;
	ld.local.u32 	%r9109, [%rd11682];
	add.s32 	%r9110, %r10694, 2;
	mul.wide.u32 	%rd11683, %r9110, 4;
	add.s64 	%rd11684, %rd13038, %rd11683;
	ld.local.u32 	%r9111, [%rd11684];
	st.local.u32 	[%rd11682], %r9111;
	st.local.u32 	[%rd11684], %r9109;
	add.s32 	%r9112, %r10695, 3;
	mul.wide.u32 	%rd11685, %r9112, 4;
	add.s64 	%rd11686, %rd13038, %rd11685;
	ld.local.u32 	%r9113, [%rd11686];
	add.s32 	%r9114, %r10694, 3;
	mul.wide.u32 	%rd11687, %r9114, 4;
	add.s64 	%rd11688, %rd13038, %rd11687;
	ld.local.u32 	%r9115, [%rd11688];
	st.local.u32 	[%rd11686], %r9115;
	st.local.u32 	[%rd11688], %r9113;
	add.s32 	%r10694, %r10694, -4;
	add.s32 	%r10695, %r10695, 4;
	setp.lt.u32	%p388, %r10695, %r10694;
	@%p388 bra 	BB6_686;

	ld.param.u64 	%rd12859, [m09600_comp_param_18];
	ld.param.u32 	%r10576, [m09600_comp_param_32];
	ld.local.v4.u32 	{%r9133, %r9134, %r9135, %r9136}, [%rd337+12];
	shr.u32 	%r9138, %r9133, 24;
	mul.wide.u32 	%rd11689, %r9138, 4;
	add.s64 	%rd11691, %rd11575, %rd11689;
	ld.shared.u8 	%r9139, [%rd11691];
	mul.wide.u32 	%rd11692, %r9139, 4;
	mov.u64 	%rd11693, m09600_comp$s_td0;
	add.s64 	%rd11694, %rd11693, %rd11692;
	bfe.u32 	%r9140, %r9133, 16, 8;
	mul.wide.u32 	%rd11695, %r9140, 4;
	add.s64 	%rd11696, %rd11575, %rd11695;
	ld.shared.u8 	%r9141, [%rd11696];
	mul.wide.u32 	%rd11697, %r9141, 4;
	mov.u64 	%rd11698, m09600_comp$s_td1;
	add.s64 	%rd11699, %rd11698, %rd11697;
	ld.shared.u32 	%r9142, [%rd11699];
	ld.shared.u32 	%r9143, [%rd11694];
	xor.b32  	%r9144, %r9142, %r9143;
	bfe.u32 	%r9145, %r9133, 8, 8;
	mul.wide.u32 	%rd11700, %r9145, 4;
	add.s64 	%rd11701, %rd11575, %rd11700;
	ld.shared.u8 	%r9146, [%rd11701];
	mul.wide.u32 	%rd11702, %r9146, 4;
	mov.u64 	%rd11703, m09600_comp$s_td2;
	add.s64 	%rd11704, %rd11703, %rd11702;
	ld.shared.u32 	%r9147, [%rd11704];
	xor.b32  	%r9148, %r9144, %r9147;
	and.b32  	%r9149, %r9133, 255;
	mul.wide.u32 	%rd11705, %r9149, 4;
	add.s64 	%rd11706, %rd11575, %rd11705;
	ld.shared.u8 	%r9150, [%rd11706];
	mul.wide.u32 	%rd11707, %r9150, 4;
	mov.u64 	%rd11708, m09600_comp$s_td3;
	add.s64 	%rd11709, %rd11708, %rd11707;
	ld.shared.u32 	%r9151, [%rd11709];
	xor.b32  	%r9152, %r9148, %r9151;
	ld.local.v4.u32 	{%r9153, %r9154, %r9155, %r9156}, [%rd337+28];
	ld.local.v4.u32 	{%r9157, %r9158, %r9159, %r9160}, [%rd337+44];
	ld.local.v4.u32 	{%r9161, %r9162, %r9163, %r9164}, [%rd337+60];
	ld.local.v4.u32 	{%r9165, %r9166, %r9167, %r9168}, [%rd337+76];
	ld.local.v4.u32 	{%r9169, %r9170, %r9171, %r9172}, [%rd337+92];
	st.local.u32 	[%rd337+12], %r9152;
	shr.u32 	%r9174, %r9134, 24;
	mul.wide.u32 	%rd11710, %r9174, 4;
	add.s64 	%rd11711, %rd11575, %rd11710;
	ld.shared.u8 	%r9175, [%rd11711];
	mul.wide.u32 	%rd11712, %r9175, 4;
	add.s64 	%rd11713, %rd11693, %rd11712;
	bfe.u32 	%r9176, %r9134, 16, 8;
	mul.wide.u32 	%rd11714, %r9176, 4;
	add.s64 	%rd11715, %rd11575, %rd11714;
	ld.shared.u8 	%r9177, [%rd11715];
	mul.wide.u32 	%rd11716, %r9177, 4;
	add.s64 	%rd11717, %rd11698, %rd11716;
	ld.shared.u32 	%r9178, [%rd11717];
	ld.shared.u32 	%r9179, [%rd11713];
	xor.b32  	%r9180, %r9178, %r9179;
	bfe.u32 	%r9181, %r9134, 8, 8;
	mul.wide.u32 	%rd11718, %r9181, 4;
	add.s64 	%rd11719, %rd11575, %rd11718;
	ld.shared.u8 	%r9182, [%rd11719];
	mul.wide.u32 	%rd11720, %r9182, 4;
	add.s64 	%rd11721, %rd11703, %rd11720;
	ld.shared.u32 	%r9183, [%rd11721];
	xor.b32  	%r9184, %r9180, %r9183;
	and.b32  	%r9185, %r9134, 255;
	mul.wide.u32 	%rd11722, %r9185, 4;
	add.s64 	%rd11723, %rd11575, %rd11722;
	ld.shared.u8 	%r9186, [%rd11723];
	mul.wide.u32 	%rd11724, %r9186, 4;
	add.s64 	%rd11725, %rd11708, %rd11724;
	ld.shared.u32 	%r9187, [%rd11725];
	xor.b32  	%r9188, %r9184, %r9187;
	st.local.u32 	[%rd337+16], %r9188;
	shr.u32 	%r9190, %r9135, 24;
	mul.wide.u32 	%rd11726, %r9190, 4;
	add.s64 	%rd11727, %rd11575, %rd11726;
	ld.shared.u8 	%r9191, [%rd11727];
	mul.wide.u32 	%rd11728, %r9191, 4;
	add.s64 	%rd11729, %rd11693, %rd11728;
	bfe.u32 	%r9192, %r9135, 16, 8;
	mul.wide.u32 	%rd11730, %r9192, 4;
	add.s64 	%rd11731, %rd11575, %rd11730;
	ld.shared.u8 	%r9193, [%rd11731];
	mul.wide.u32 	%rd11732, %r9193, 4;
	add.s64 	%rd11733, %rd11698, %rd11732;
	ld.shared.u32 	%r9194, [%rd11733];
	ld.shared.u32 	%r9195, [%rd11729];
	xor.b32  	%r9196, %r9194, %r9195;
	bfe.u32 	%r9197, %r9135, 8, 8;
	mul.wide.u32 	%rd11734, %r9197, 4;
	add.s64 	%rd11735, %rd11575, %rd11734;
	ld.shared.u8 	%r9198, [%rd11735];
	mul.wide.u32 	%rd11736, %r9198, 4;
	add.s64 	%rd11737, %rd11703, %rd11736;
	ld.shared.u32 	%r9199, [%rd11737];
	xor.b32  	%r9200, %r9196, %r9199;
	and.b32  	%r9201, %r9135, 255;
	mul.wide.u32 	%rd11738, %r9201, 4;
	add.s64 	%rd11739, %rd11575, %rd11738;
	ld.shared.u8 	%r9202, [%rd11739];
	mul.wide.u32 	%rd11740, %r9202, 4;
	add.s64 	%rd11741, %rd11708, %rd11740;
	ld.shared.u32 	%r9203, [%rd11741];
	xor.b32  	%r9204, %r9200, %r9203;
	st.local.u32 	[%rd337+20], %r9204;
	shr.u32 	%r9206, %r9136, 24;
	mul.wide.u32 	%rd11742, %r9206, 4;
	add.s64 	%rd11743, %rd11575, %rd11742;
	ld.shared.u8 	%r9207, [%rd11743];
	mul.wide.u32 	%rd11744, %r9207, 4;
	add.s64 	%rd11745, %rd11693, %rd11744;
	bfe.u32 	%r9208, %r9136, 16, 8;
	mul.wide.u32 	%rd11746, %r9208, 4;
	add.s64 	%rd11747, %rd11575, %rd11746;
	ld.shared.u8 	%r9209, [%rd11747];
	mul.wide.u32 	%rd11748, %r9209, 4;
	add.s64 	%rd11749, %rd11698, %rd11748;
	ld.shared.u32 	%r9210, [%rd11749];
	ld.shared.u32 	%r9211, [%rd11745];
	xor.b32  	%r9212, %r9210, %r9211;
	bfe.u32 	%r9213, %r9136, 8, 8;
	mul.wide.u32 	%rd11750, %r9213, 4;
	add.s64 	%rd11751, %rd11575, %rd11750;
	ld.shared.u8 	%r9214, [%rd11751];
	mul.wide.u32 	%rd11752, %r9214, 4;
	add.s64 	%rd11753, %rd11703, %rd11752;
	ld.shared.u32 	%r9215, [%rd11753];
	xor.b32  	%r9216, %r9212, %r9215;
	and.b32  	%r9217, %r9136, 255;
	mul.wide.u32 	%rd11754, %r9217, 4;
	add.s64 	%rd11755, %rd11575, %rd11754;
	ld.shared.u8 	%r9218, [%rd11755];
	mul.wide.u32 	%rd11756, %r9218, 4;
	add.s64 	%rd11757, %rd11708, %rd11756;
	ld.shared.u32 	%r9219, [%rd11757];
	xor.b32  	%r9220, %r9216, %r9219;
	st.local.u32 	[%rd337+24], %r9220;
	shr.u32 	%r9222, %r9153, 24;
	mul.wide.u32 	%rd11758, %r9222, 4;
	add.s64 	%rd11759, %rd11575, %rd11758;
	ld.shared.u8 	%r9223, [%rd11759];
	mul.wide.u32 	%rd11760, %r9223, 4;
	add.s64 	%rd11761, %rd11693, %rd11760;
	bfe.u32 	%r9224, %r9153, 16, 8;
	mul.wide.u32 	%rd11762, %r9224, 4;
	add.s64 	%rd11763, %rd11575, %rd11762;
	ld.shared.u8 	%r9225, [%rd11763];
	mul.wide.u32 	%rd11764, %r9225, 4;
	add.s64 	%rd11765, %rd11698, %rd11764;
	ld.shared.u32 	%r9226, [%rd11765];
	ld.shared.u32 	%r9227, [%rd11761];
	xor.b32  	%r9228, %r9226, %r9227;
	bfe.u32 	%r9229, %r9153, 8, 8;
	mul.wide.u32 	%rd11766, %r9229, 4;
	add.s64 	%rd11767, %rd11575, %rd11766;
	ld.shared.u8 	%r9230, [%rd11767];
	mul.wide.u32 	%rd11768, %r9230, 4;
	add.s64 	%rd11769, %rd11703, %rd11768;
	ld.shared.u32 	%r9231, [%rd11769];
	xor.b32  	%r9232, %r9228, %r9231;
	and.b32  	%r9233, %r9153, 255;
	mul.wide.u32 	%rd11770, %r9233, 4;
	add.s64 	%rd11771, %rd11575, %rd11770;
	ld.shared.u8 	%r9234, [%rd11771];
	mul.wide.u32 	%rd11772, %r9234, 4;
	add.s64 	%rd11773, %rd11708, %rd11772;
	ld.shared.u32 	%r9235, [%rd11773];
	xor.b32  	%r9236, %r9232, %r9235;
	st.local.u32 	[%rd337+28], %r9236;
	shr.u32 	%r9238, %r9154, 24;
	mul.wide.u32 	%rd11774, %r9238, 4;
	add.s64 	%rd11775, %rd11575, %rd11774;
	ld.shared.u8 	%r9239, [%rd11775];
	mul.wide.u32 	%rd11776, %r9239, 4;
	add.s64 	%rd11777, %rd11693, %rd11776;
	bfe.u32 	%r9240, %r9154, 16, 8;
	mul.wide.u32 	%rd11778, %r9240, 4;
	add.s64 	%rd11779, %rd11575, %rd11778;
	ld.shared.u8 	%r9241, [%rd11779];
	mul.wide.u32 	%rd11780, %r9241, 4;
	add.s64 	%rd11781, %rd11698, %rd11780;
	ld.shared.u32 	%r9242, [%rd11781];
	ld.shared.u32 	%r9243, [%rd11777];
	xor.b32  	%r9244, %r9242, %r9243;
	bfe.u32 	%r9245, %r9154, 8, 8;
	mul.wide.u32 	%rd11782, %r9245, 4;
	add.s64 	%rd11783, %rd11575, %rd11782;
	ld.shared.u8 	%r9246, [%rd11783];
	mul.wide.u32 	%rd11784, %r9246, 4;
	add.s64 	%rd11785, %rd11703, %rd11784;
	ld.shared.u32 	%r9247, [%rd11785];
	xor.b32  	%r9248, %r9244, %r9247;
	and.b32  	%r9249, %r9154, 255;
	mul.wide.u32 	%rd11786, %r9249, 4;
	add.s64 	%rd11787, %rd11575, %rd11786;
	ld.shared.u8 	%r9250, [%rd11787];
	mul.wide.u32 	%rd11788, %r9250, 4;
	add.s64 	%rd11789, %rd11708, %rd11788;
	ld.shared.u32 	%r9251, [%rd11789];
	xor.b32  	%r9252, %r9248, %r9251;
	st.local.u32 	[%rd337+32], %r9252;
	shr.u32 	%r9254, %r9155, 24;
	mul.wide.u32 	%rd11790, %r9254, 4;
	add.s64 	%rd11791, %rd11575, %rd11790;
	ld.shared.u8 	%r9255, [%rd11791];
	mul.wide.u32 	%rd11792, %r9255, 4;
	add.s64 	%rd11793, %rd11693, %rd11792;
	bfe.u32 	%r9256, %r9155, 16, 8;
	mul.wide.u32 	%rd11794, %r9256, 4;
	add.s64 	%rd11795, %rd11575, %rd11794;
	ld.shared.u8 	%r9257, [%rd11795];
	mul.wide.u32 	%rd11796, %r9257, 4;
	add.s64 	%rd11797, %rd11698, %rd11796;
	ld.shared.u32 	%r9258, [%rd11797];
	ld.shared.u32 	%r9259, [%rd11793];
	xor.b32  	%r9260, %r9258, %r9259;
	bfe.u32 	%r9261, %r9155, 8, 8;
	mul.wide.u32 	%rd11798, %r9261, 4;
	add.s64 	%rd11799, %rd11575, %rd11798;
	ld.shared.u8 	%r9262, [%rd11799];
	mul.wide.u32 	%rd11800, %r9262, 4;
	add.s64 	%rd11801, %rd11703, %rd11800;
	ld.shared.u32 	%r9263, [%rd11801];
	xor.b32  	%r9264, %r9260, %r9263;
	and.b32  	%r9265, %r9155, 255;
	mul.wide.u32 	%rd11802, %r9265, 4;
	add.s64 	%rd11803, %rd11575, %rd11802;
	ld.shared.u8 	%r9266, [%rd11803];
	mul.wide.u32 	%rd11804, %r9266, 4;
	add.s64 	%rd11805, %rd11708, %rd11804;
	ld.shared.u32 	%r9267, [%rd11805];
	xor.b32  	%r9268, %r9264, %r9267;
	st.local.u32 	[%rd337+36], %r9268;
	shr.u32 	%r9270, %r9156, 24;
	mul.wide.u32 	%rd11806, %r9270, 4;
	add.s64 	%rd11807, %rd11575, %rd11806;
	ld.shared.u8 	%r9271, [%rd11807];
	mul.wide.u32 	%rd11808, %r9271, 4;
	add.s64 	%rd11809, %rd11693, %rd11808;
	bfe.u32 	%r9272, %r9156, 16, 8;
	mul.wide.u32 	%rd11810, %r9272, 4;
	add.s64 	%rd11811, %rd11575, %rd11810;
	ld.shared.u8 	%r9273, [%rd11811];
	mul.wide.u32 	%rd11812, %r9273, 4;
	add.s64 	%rd11813, %rd11698, %rd11812;
	ld.shared.u32 	%r9274, [%rd11813];
	ld.shared.u32 	%r9275, [%rd11809];
	xor.b32  	%r9276, %r9274, %r9275;
	bfe.u32 	%r9277, %r9156, 8, 8;
	mul.wide.u32 	%rd11814, %r9277, 4;
	add.s64 	%rd11815, %rd11575, %rd11814;
	ld.shared.u8 	%r9278, [%rd11815];
	mul.wide.u32 	%rd11816, %r9278, 4;
	add.s64 	%rd11817, %rd11703, %rd11816;
	ld.shared.u32 	%r9279, [%rd11817];
	xor.b32  	%r9280, %r9276, %r9279;
	and.b32  	%r9281, %r9156, 255;
	mul.wide.u32 	%rd11818, %r9281, 4;
	add.s64 	%rd11819, %rd11575, %rd11818;
	ld.shared.u8 	%r9282, [%rd11819];
	mul.wide.u32 	%rd11820, %r9282, 4;
	add.s64 	%rd11821, %rd11708, %rd11820;
	ld.shared.u32 	%r9283, [%rd11821];
	xor.b32  	%r9284, %r9280, %r9283;
	st.local.u32 	[%rd337+40], %r9284;
	shr.u32 	%r9286, %r9157, 24;
	mul.wide.u32 	%rd11822, %r9286, 4;
	add.s64 	%rd11823, %rd11575, %rd11822;
	ld.shared.u8 	%r9287, [%rd11823];
	mul.wide.u32 	%rd11824, %r9287, 4;
	add.s64 	%rd11825, %rd11693, %rd11824;
	bfe.u32 	%r9288, %r9157, 16, 8;
	mul.wide.u32 	%rd11826, %r9288, 4;
	add.s64 	%rd11827, %rd11575, %rd11826;
	ld.shared.u8 	%r9289, [%rd11827];
	mul.wide.u32 	%rd11828, %r9289, 4;
	add.s64 	%rd11829, %rd11698, %rd11828;
	ld.shared.u32 	%r9290, [%rd11829];
	ld.shared.u32 	%r9291, [%rd11825];
	xor.b32  	%r9292, %r9290, %r9291;
	bfe.u32 	%r9293, %r9157, 8, 8;
	mul.wide.u32 	%rd11830, %r9293, 4;
	add.s64 	%rd11831, %rd11575, %rd11830;
	ld.shared.u8 	%r9294, [%rd11831];
	mul.wide.u32 	%rd11832, %r9294, 4;
	add.s64 	%rd11833, %rd11703, %rd11832;
	ld.shared.u32 	%r9295, [%rd11833];
	xor.b32  	%r9296, %r9292, %r9295;
	and.b32  	%r9297, %r9157, 255;
	mul.wide.u32 	%rd11834, %r9297, 4;
	add.s64 	%rd11835, %rd11575, %rd11834;
	ld.shared.u8 	%r9298, [%rd11835];
	mul.wide.u32 	%rd11836, %r9298, 4;
	add.s64 	%rd11837, %rd11708, %rd11836;
	ld.shared.u32 	%r9299, [%rd11837];
	xor.b32  	%r9300, %r9296, %r9299;
	st.local.u32 	[%rd337+44], %r9300;
	shr.u32 	%r9302, %r9158, 24;
	mul.wide.u32 	%rd11838, %r9302, 4;
	add.s64 	%rd11839, %rd11575, %rd11838;
	ld.shared.u8 	%r9303, [%rd11839];
	mul.wide.u32 	%rd11840, %r9303, 4;
	add.s64 	%rd11841, %rd11693, %rd11840;
	bfe.u32 	%r9304, %r9158, 16, 8;
	mul.wide.u32 	%rd11842, %r9304, 4;
	add.s64 	%rd11843, %rd11575, %rd11842;
	ld.shared.u8 	%r9305, [%rd11843];
	mul.wide.u32 	%rd11844, %r9305, 4;
	add.s64 	%rd11845, %rd11698, %rd11844;
	ld.shared.u32 	%r9306, [%rd11845];
	ld.shared.u32 	%r9307, [%rd11841];
	xor.b32  	%r9308, %r9306, %r9307;
	bfe.u32 	%r9309, %r9158, 8, 8;
	mul.wide.u32 	%rd11846, %r9309, 4;
	add.s64 	%rd11847, %rd11575, %rd11846;
	ld.shared.u8 	%r9310, [%rd11847];
	mul.wide.u32 	%rd11848, %r9310, 4;
	add.s64 	%rd11849, %rd11703, %rd11848;
	ld.shared.u32 	%r9311, [%rd11849];
	xor.b32  	%r9312, %r9308, %r9311;
	and.b32  	%r9313, %r9158, 255;
	mul.wide.u32 	%rd11850, %r9313, 4;
	add.s64 	%rd11851, %rd11575, %rd11850;
	ld.shared.u8 	%r9314, [%rd11851];
	mul.wide.u32 	%rd11852, %r9314, 4;
	add.s64 	%rd11853, %rd11708, %rd11852;
	ld.shared.u32 	%r9315, [%rd11853];
	xor.b32  	%r9316, %r9312, %r9315;
	st.local.u32 	[%rd337+48], %r9316;
	shr.u32 	%r9318, %r9159, 24;
	mul.wide.u32 	%rd11854, %r9318, 4;
	add.s64 	%rd11855, %rd11575, %rd11854;
	ld.shared.u8 	%r9319, [%rd11855];
	mul.wide.u32 	%rd11856, %r9319, 4;
	add.s64 	%rd11857, %rd11693, %rd11856;
	bfe.u32 	%r9320, %r9159, 16, 8;
	mul.wide.u32 	%rd11858, %r9320, 4;
	add.s64 	%rd11859, %rd11575, %rd11858;
	ld.shared.u8 	%r9321, [%rd11859];
	mul.wide.u32 	%rd11860, %r9321, 4;
	add.s64 	%rd11861, %rd11698, %rd11860;
	ld.shared.u32 	%r9322, [%rd11861];
	ld.shared.u32 	%r9323, [%rd11857];
	xor.b32  	%r9324, %r9322, %r9323;
	bfe.u32 	%r9325, %r9159, 8, 8;
	mul.wide.u32 	%rd11862, %r9325, 4;
	add.s64 	%rd11863, %rd11575, %rd11862;
	ld.shared.u8 	%r9326, [%rd11863];
	mul.wide.u32 	%rd11864, %r9326, 4;
	add.s64 	%rd11865, %rd11703, %rd11864;
	ld.shared.u32 	%r9327, [%rd11865];
	xor.b32  	%r9328, %r9324, %r9327;
	and.b32  	%r9329, %r9159, 255;
	mul.wide.u32 	%rd11866, %r9329, 4;
	add.s64 	%rd11867, %rd11575, %rd11866;
	ld.shared.u8 	%r9330, [%rd11867];
	mul.wide.u32 	%rd11868, %r9330, 4;
	add.s64 	%rd11869, %rd11708, %rd11868;
	ld.shared.u32 	%r9331, [%rd11869];
	xor.b32  	%r9332, %r9328, %r9331;
	st.local.u32 	[%rd337+52], %r9332;
	shr.u32 	%r9334, %r9160, 24;
	mul.wide.u32 	%rd11870, %r9334, 4;
	add.s64 	%rd11871, %rd11575, %rd11870;
	ld.shared.u8 	%r9335, [%rd11871];
	mul.wide.u32 	%rd11872, %r9335, 4;
	add.s64 	%rd11873, %rd11693, %rd11872;
	bfe.u32 	%r9336, %r9160, 16, 8;
	mul.wide.u32 	%rd11874, %r9336, 4;
	add.s64 	%rd11875, %rd11575, %rd11874;
	ld.shared.u8 	%r9337, [%rd11875];
	mul.wide.u32 	%rd11876, %r9337, 4;
	add.s64 	%rd11877, %rd11698, %rd11876;
	ld.shared.u32 	%r9338, [%rd11877];
	ld.shared.u32 	%r9339, [%rd11873];
	xor.b32  	%r9340, %r9338, %r9339;
	bfe.u32 	%r9341, %r9160, 8, 8;
	mul.wide.u32 	%rd11878, %r9341, 4;
	add.s64 	%rd11879, %rd11575, %rd11878;
	ld.shared.u8 	%r9342, [%rd11879];
	mul.wide.u32 	%rd11880, %r9342, 4;
	add.s64 	%rd11881, %rd11703, %rd11880;
	ld.shared.u32 	%r9343, [%rd11881];
	xor.b32  	%r9344, %r9340, %r9343;
	and.b32  	%r9345, %r9160, 255;
	mul.wide.u32 	%rd11882, %r9345, 4;
	add.s64 	%rd11883, %rd11575, %rd11882;
	ld.shared.u8 	%r9346, [%rd11883];
	mul.wide.u32 	%rd11884, %r9346, 4;
	add.s64 	%rd11885, %rd11708, %rd11884;
	ld.shared.u32 	%r9347, [%rd11885];
	xor.b32  	%r9348, %r9344, %r9347;
	st.local.u32 	[%rd337+56], %r9348;
	shr.u32 	%r9350, %r9161, 24;
	mul.wide.u32 	%rd11886, %r9350, 4;
	add.s64 	%rd11887, %rd11575, %rd11886;
	ld.shared.u8 	%r9351, [%rd11887];
	mul.wide.u32 	%rd11888, %r9351, 4;
	add.s64 	%rd11889, %rd11693, %rd11888;
	bfe.u32 	%r9352, %r9161, 16, 8;
	mul.wide.u32 	%rd11890, %r9352, 4;
	add.s64 	%rd11891, %rd11575, %rd11890;
	ld.shared.u8 	%r9353, [%rd11891];
	mul.wide.u32 	%rd11892, %r9353, 4;
	add.s64 	%rd11893, %rd11698, %rd11892;
	ld.shared.u32 	%r9354, [%rd11893];
	ld.shared.u32 	%r9355, [%rd11889];
	xor.b32  	%r9356, %r9354, %r9355;
	bfe.u32 	%r9357, %r9161, 8, 8;
	mul.wide.u32 	%rd11894, %r9357, 4;
	add.s64 	%rd11895, %rd11575, %rd11894;
	ld.shared.u8 	%r9358, [%rd11895];
	mul.wide.u32 	%rd11896, %r9358, 4;
	add.s64 	%rd11897, %rd11703, %rd11896;
	ld.shared.u32 	%r9359, [%rd11897];
	xor.b32  	%r9360, %r9356, %r9359;
	and.b32  	%r9361, %r9161, 255;
	mul.wide.u32 	%rd11898, %r9361, 4;
	add.s64 	%rd11899, %rd11575, %rd11898;
	ld.shared.u8 	%r9362, [%rd11899];
	mul.wide.u32 	%rd11900, %r9362, 4;
	add.s64 	%rd11901, %rd11708, %rd11900;
	ld.shared.u32 	%r9363, [%rd11901];
	xor.b32  	%r9364, %r9360, %r9363;
	st.local.u32 	[%rd337+60], %r9364;
	shr.u32 	%r9366, %r9162, 24;
	mul.wide.u32 	%rd11902, %r9366, 4;
	add.s64 	%rd11903, %rd11575, %rd11902;
	ld.shared.u8 	%r9367, [%rd11903];
	mul.wide.u32 	%rd11904, %r9367, 4;
	add.s64 	%rd11905, %rd11693, %rd11904;
	bfe.u32 	%r9368, %r9162, 16, 8;
	mul.wide.u32 	%rd11906, %r9368, 4;
	add.s64 	%rd11907, %rd11575, %rd11906;
	ld.shared.u8 	%r9369, [%rd11907];
	mul.wide.u32 	%rd11908, %r9369, 4;
	add.s64 	%rd11909, %rd11698, %rd11908;
	ld.shared.u32 	%r9370, [%rd11909];
	ld.shared.u32 	%r9371, [%rd11905];
	xor.b32  	%r9372, %r9370, %r9371;
	bfe.u32 	%r9373, %r9162, 8, 8;
	mul.wide.u32 	%rd11910, %r9373, 4;
	add.s64 	%rd11911, %rd11575, %rd11910;
	ld.shared.u8 	%r9374, [%rd11911];
	mul.wide.u32 	%rd11912, %r9374, 4;
	add.s64 	%rd11913, %rd11703, %rd11912;
	ld.shared.u32 	%r9375, [%rd11913];
	xor.b32  	%r9376, %r9372, %r9375;
	and.b32  	%r9377, %r9162, 255;
	mul.wide.u32 	%rd11914, %r9377, 4;
	add.s64 	%rd11915, %rd11575, %rd11914;
	ld.shared.u8 	%r9378, [%rd11915];
	mul.wide.u32 	%rd11916, %r9378, 4;
	add.s64 	%rd11917, %rd11708, %rd11916;
	ld.shared.u32 	%r9379, [%rd11917];
	xor.b32  	%r9380, %r9376, %r9379;
	st.local.u32 	[%rd337+64], %r9380;
	shr.u32 	%r9382, %r9163, 24;
	mul.wide.u32 	%rd11918, %r9382, 4;
	add.s64 	%rd11919, %rd11575, %rd11918;
	ld.shared.u8 	%r9383, [%rd11919];
	mul.wide.u32 	%rd11920, %r9383, 4;
	add.s64 	%rd11921, %rd11693, %rd11920;
	bfe.u32 	%r9384, %r9163, 16, 8;
	mul.wide.u32 	%rd11922, %r9384, 4;
	add.s64 	%rd11923, %rd11575, %rd11922;
	ld.shared.u8 	%r9385, [%rd11923];
	mul.wide.u32 	%rd11924, %r9385, 4;
	add.s64 	%rd11925, %rd11698, %rd11924;
	ld.shared.u32 	%r9386, [%rd11925];
	ld.shared.u32 	%r9387, [%rd11921];
	xor.b32  	%r9388, %r9386, %r9387;
	bfe.u32 	%r9389, %r9163, 8, 8;
	mul.wide.u32 	%rd11926, %r9389, 4;
	add.s64 	%rd11927, %rd11575, %rd11926;
	ld.shared.u8 	%r9390, [%rd11927];
	mul.wide.u32 	%rd11928, %r9390, 4;
	add.s64 	%rd11929, %rd11703, %rd11928;
	ld.shared.u32 	%r9391, [%rd11929];
	xor.b32  	%r9392, %r9388, %r9391;
	and.b32  	%r9393, %r9163, 255;
	mul.wide.u32 	%rd11930, %r9393, 4;
	add.s64 	%rd11931, %rd11575, %rd11930;
	ld.shared.u8 	%r9394, [%rd11931];
	mul.wide.u32 	%rd11932, %r9394, 4;
	add.s64 	%rd11933, %rd11708, %rd11932;
	ld.shared.u32 	%r9395, [%rd11933];
	xor.b32  	%r9396, %r9392, %r9395;
	st.local.u32 	[%rd337+68], %r9396;
	shr.u32 	%r9398, %r9164, 24;
	mul.wide.u32 	%rd11934, %r9398, 4;
	add.s64 	%rd11935, %rd11575, %rd11934;
	ld.shared.u8 	%r9399, [%rd11935];
	mul.wide.u32 	%rd11936, %r9399, 4;
	add.s64 	%rd11937, %rd11693, %rd11936;
	bfe.u32 	%r9400, %r9164, 16, 8;
	mul.wide.u32 	%rd11938, %r9400, 4;
	add.s64 	%rd11939, %rd11575, %rd11938;
	ld.shared.u8 	%r9401, [%rd11939];
	mul.wide.u32 	%rd11940, %r9401, 4;
	add.s64 	%rd11941, %rd11698, %rd11940;
	ld.shared.u32 	%r9402, [%rd11941];
	ld.shared.u32 	%r9403, [%rd11937];
	xor.b32  	%r9404, %r9402, %r9403;
	bfe.u32 	%r9405, %r9164, 8, 8;
	mul.wide.u32 	%rd11942, %r9405, 4;
	add.s64 	%rd11943, %rd11575, %rd11942;
	ld.shared.u8 	%r9406, [%rd11943];
	mul.wide.u32 	%rd11944, %r9406, 4;
	add.s64 	%rd11945, %rd11703, %rd11944;
	ld.shared.u32 	%r9407, [%rd11945];
	xor.b32  	%r9408, %r9404, %r9407;
	and.b32  	%r9409, %r9164, 255;
	mul.wide.u32 	%rd11946, %r9409, 4;
	add.s64 	%rd11947, %rd11575, %rd11946;
	ld.shared.u8 	%r9410, [%rd11947];
	mul.wide.u32 	%rd11948, %r9410, 4;
	add.s64 	%rd11949, %rd11708, %rd11948;
	ld.shared.u32 	%r9411, [%rd11949];
	xor.b32  	%r9412, %r9408, %r9411;
	st.local.u32 	[%rd337+72], %r9412;
	shr.u32 	%r9414, %r9165, 24;
	mul.wide.u32 	%rd11950, %r9414, 4;
	add.s64 	%rd11951, %rd11575, %rd11950;
	ld.shared.u8 	%r9415, [%rd11951];
	mul.wide.u32 	%rd11952, %r9415, 4;
	add.s64 	%rd11953, %rd11693, %rd11952;
	bfe.u32 	%r9416, %r9165, 16, 8;
	mul.wide.u32 	%rd11954, %r9416, 4;
	add.s64 	%rd11955, %rd11575, %rd11954;
	ld.shared.u8 	%r9417, [%rd11955];
	mul.wide.u32 	%rd11956, %r9417, 4;
	add.s64 	%rd11957, %rd11698, %rd11956;
	ld.shared.u32 	%r9418, [%rd11957];
	ld.shared.u32 	%r9419, [%rd11953];
	xor.b32  	%r9420, %r9418, %r9419;
	bfe.u32 	%r9421, %r9165, 8, 8;
	mul.wide.u32 	%rd11958, %r9421, 4;
	add.s64 	%rd11959, %rd11575, %rd11958;
	ld.shared.u8 	%r9422, [%rd11959];
	mul.wide.u32 	%rd11960, %r9422, 4;
	add.s64 	%rd11961, %rd11703, %rd11960;
	ld.shared.u32 	%r9423, [%rd11961];
	xor.b32  	%r9424, %r9420, %r9423;
	and.b32  	%r9425, %r9165, 255;
	mul.wide.u32 	%rd11962, %r9425, 4;
	add.s64 	%rd11963, %rd11575, %rd11962;
	ld.shared.u8 	%r9426, [%rd11963];
	mul.wide.u32 	%rd11964, %r9426, 4;
	add.s64 	%rd11965, %rd11708, %rd11964;
	ld.shared.u32 	%r9427, [%rd11965];
	xor.b32  	%r9428, %r9424, %r9427;
	st.local.u32 	[%rd337+76], %r9428;
	shr.u32 	%r9430, %r9166, 24;
	mul.wide.u32 	%rd11966, %r9430, 4;
	add.s64 	%rd11967, %rd11575, %rd11966;
	ld.shared.u8 	%r9431, [%rd11967];
	mul.wide.u32 	%rd11968, %r9431, 4;
	add.s64 	%rd11969, %rd11693, %rd11968;
	bfe.u32 	%r9432, %r9166, 16, 8;
	mul.wide.u32 	%rd11970, %r9432, 4;
	add.s64 	%rd11971, %rd11575, %rd11970;
	ld.shared.u8 	%r9433, [%rd11971];
	mul.wide.u32 	%rd11972, %r9433, 4;
	add.s64 	%rd11973, %rd11698, %rd11972;
	ld.shared.u32 	%r9434, [%rd11973];
	ld.shared.u32 	%r9435, [%rd11969];
	xor.b32  	%r9436, %r9434, %r9435;
	bfe.u32 	%r9437, %r9166, 8, 8;
	mul.wide.u32 	%rd11974, %r9437, 4;
	add.s64 	%rd11975, %rd11575, %rd11974;
	ld.shared.u8 	%r9438, [%rd11975];
	mul.wide.u32 	%rd11976, %r9438, 4;
	add.s64 	%rd11977, %rd11703, %rd11976;
	ld.shared.u32 	%r9439, [%rd11977];
	xor.b32  	%r9440, %r9436, %r9439;
	and.b32  	%r9441, %r9166, 255;
	mul.wide.u32 	%rd11978, %r9441, 4;
	add.s64 	%rd11979, %rd11575, %rd11978;
	ld.shared.u8 	%r9442, [%rd11979];
	mul.wide.u32 	%rd11980, %r9442, 4;
	add.s64 	%rd11981, %rd11708, %rd11980;
	ld.shared.u32 	%r9443, [%rd11981];
	xor.b32  	%r9444, %r9440, %r9443;
	st.local.u32 	[%rd337+80], %r9444;
	shr.u32 	%r9446, %r9167, 24;
	mul.wide.u32 	%rd11982, %r9446, 4;
	add.s64 	%rd11983, %rd11575, %rd11982;
	ld.shared.u8 	%r9447, [%rd11983];
	mul.wide.u32 	%rd11984, %r9447, 4;
	add.s64 	%rd11985, %rd11693, %rd11984;
	bfe.u32 	%r9448, %r9167, 16, 8;
	mul.wide.u32 	%rd11986, %r9448, 4;
	add.s64 	%rd11987, %rd11575, %rd11986;
	ld.shared.u8 	%r9449, [%rd11987];
	mul.wide.u32 	%rd11988, %r9449, 4;
	add.s64 	%rd11989, %rd11698, %rd11988;
	ld.shared.u32 	%r9450, [%rd11989];
	ld.shared.u32 	%r9451, [%rd11985];
	xor.b32  	%r9452, %r9450, %r9451;
	bfe.u32 	%r9453, %r9167, 8, 8;
	mul.wide.u32 	%rd11990, %r9453, 4;
	add.s64 	%rd11991, %rd11575, %rd11990;
	ld.shared.u8 	%r9454, [%rd11991];
	mul.wide.u32 	%rd11992, %r9454, 4;
	add.s64 	%rd11993, %rd11703, %rd11992;
	ld.shared.u32 	%r9455, [%rd11993];
	xor.b32  	%r9456, %r9452, %r9455;
	and.b32  	%r9457, %r9167, 255;
	mul.wide.u32 	%rd11994, %r9457, 4;
	add.s64 	%rd11995, %rd11575, %rd11994;
	ld.shared.u8 	%r9458, [%rd11995];
	mul.wide.u32 	%rd11996, %r9458, 4;
	add.s64 	%rd11997, %rd11708, %rd11996;
	ld.shared.u32 	%r9459, [%rd11997];
	xor.b32  	%r9460, %r9456, %r9459;
	st.local.u32 	[%rd337+84], %r9460;
	shr.u32 	%r9462, %r9168, 24;
	mul.wide.u32 	%rd11998, %r9462, 4;
	add.s64 	%rd11999, %rd11575, %rd11998;
	ld.shared.u8 	%r9463, [%rd11999];
	mul.wide.u32 	%rd12000, %r9463, 4;
	add.s64 	%rd12001, %rd11693, %rd12000;
	bfe.u32 	%r9464, %r9168, 16, 8;
	mul.wide.u32 	%rd12002, %r9464, 4;
	add.s64 	%rd12003, %rd11575, %rd12002;
	ld.shared.u8 	%r9465, [%rd12003];
	mul.wide.u32 	%rd12004, %r9465, 4;
	add.s64 	%rd12005, %rd11698, %rd12004;
	ld.shared.u32 	%r9466, [%rd12005];
	ld.shared.u32 	%r9467, [%rd12001];
	xor.b32  	%r9468, %r9466, %r9467;
	bfe.u32 	%r9469, %r9168, 8, 8;
	mul.wide.u32 	%rd12006, %r9469, 4;
	add.s64 	%rd12007, %rd11575, %rd12006;
	ld.shared.u8 	%r9470, [%rd12007];
	mul.wide.u32 	%rd12008, %r9470, 4;
	add.s64 	%rd12009, %rd11703, %rd12008;
	ld.shared.u32 	%r9471, [%rd12009];
	xor.b32  	%r9472, %r9468, %r9471;
	and.b32  	%r9473, %r9168, 255;
	mul.wide.u32 	%rd12010, %r9473, 4;
	add.s64 	%rd12011, %rd11575, %rd12010;
	ld.shared.u8 	%r9474, [%rd12011];
	mul.wide.u32 	%rd12012, %r9474, 4;
	add.s64 	%rd12013, %rd11708, %rd12012;
	ld.shared.u32 	%r9475, [%rd12013];
	xor.b32  	%r9476, %r9472, %r9475;
	st.local.u32 	[%rd337+88], %r9476;
	shr.u32 	%r9478, %r9169, 24;
	mul.wide.u32 	%rd12014, %r9478, 4;
	add.s64 	%rd12015, %rd11575, %rd12014;
	ld.shared.u8 	%r9479, [%rd12015];
	mul.wide.u32 	%rd12016, %r9479, 4;
	add.s64 	%rd12017, %rd11693, %rd12016;
	bfe.u32 	%r9480, %r9169, 16, 8;
	mul.wide.u32 	%rd12018, %r9480, 4;
	add.s64 	%rd12019, %rd11575, %rd12018;
	ld.shared.u8 	%r9481, [%rd12019];
	mul.wide.u32 	%rd12020, %r9481, 4;
	add.s64 	%rd12021, %rd11698, %rd12020;
	ld.shared.u32 	%r9482, [%rd12021];
	ld.shared.u32 	%r9483, [%rd12017];
	xor.b32  	%r9484, %r9482, %r9483;
	bfe.u32 	%r9485, %r9169, 8, 8;
	mul.wide.u32 	%rd12022, %r9485, 4;
	add.s64 	%rd12023, %rd11575, %rd12022;
	ld.shared.u8 	%r9486, [%rd12023];
	mul.wide.u32 	%rd12024, %r9486, 4;
	add.s64 	%rd12025, %rd11703, %rd12024;
	ld.shared.u32 	%r9487, [%rd12025];
	xor.b32  	%r9488, %r9484, %r9487;
	and.b32  	%r9489, %r9169, 255;
	mul.wide.u32 	%rd12026, %r9489, 4;
	add.s64 	%rd12027, %rd11575, %rd12026;
	ld.shared.u8 	%r9490, [%rd12027];
	mul.wide.u32 	%rd12028, %r9490, 4;
	add.s64 	%rd12029, %rd11708, %rd12028;
	ld.shared.u32 	%r9491, [%rd12029];
	xor.b32  	%r9492, %r9488, %r9491;
	st.local.u32 	[%rd337+92], %r9492;
	shr.u32 	%r9494, %r9170, 24;
	mul.wide.u32 	%rd12030, %r9494, 4;
	add.s64 	%rd12031, %rd11575, %rd12030;
	ld.shared.u8 	%r9495, [%rd12031];
	mul.wide.u32 	%rd12032, %r9495, 4;
	add.s64 	%rd12033, %rd11693, %rd12032;
	bfe.u32 	%r9496, %r9170, 16, 8;
	mul.wide.u32 	%rd12034, %r9496, 4;
	add.s64 	%rd12035, %rd11575, %rd12034;
	ld.shared.u8 	%r9497, [%rd12035];
	mul.wide.u32 	%rd12036, %r9497, 4;
	add.s64 	%rd12037, %rd11698, %rd12036;
	ld.shared.u32 	%r9498, [%rd12037];
	ld.shared.u32 	%r9499, [%rd12033];
	xor.b32  	%r9500, %r9498, %r9499;
	bfe.u32 	%r9501, %r9170, 8, 8;
	mul.wide.u32 	%rd12038, %r9501, 4;
	add.s64 	%rd12039, %rd11575, %rd12038;
	ld.shared.u8 	%r9502, [%rd12039];
	mul.wide.u32 	%rd12040, %r9502, 4;
	add.s64 	%rd12041, %rd11703, %rd12040;
	ld.shared.u32 	%r9503, [%rd12041];
	xor.b32  	%r9504, %r9500, %r9503;
	and.b32  	%r9505, %r9170, 255;
	mul.wide.u32 	%rd12042, %r9505, 4;
	add.s64 	%rd12043, %rd11575, %rd12042;
	ld.shared.u8 	%r9506, [%rd12043];
	mul.wide.u32 	%rd12044, %r9506, 4;
	add.s64 	%rd12045, %rd11708, %rd12044;
	ld.shared.u32 	%r9507, [%rd12045];
	xor.b32  	%r9508, %r9504, %r9507;
	st.local.u32 	[%rd337+96], %r9508;
	shr.u32 	%r9510, %r9171, 24;
	mul.wide.u32 	%rd12046, %r9510, 4;
	add.s64 	%rd12047, %rd11575, %rd12046;
	ld.shared.u8 	%r9511, [%rd12047];
	mul.wide.u32 	%rd12048, %r9511, 4;
	add.s64 	%rd12049, %rd11693, %rd12048;
	bfe.u32 	%r9512, %r9171, 16, 8;
	mul.wide.u32 	%rd12050, %r9512, 4;
	add.s64 	%rd12051, %rd11575, %rd12050;
	ld.shared.u8 	%r9513, [%rd12051];
	mul.wide.u32 	%rd12052, %r9513, 4;
	add.s64 	%rd12053, %rd11698, %rd12052;
	ld.shared.u32 	%r9514, [%rd12053];
	ld.shared.u32 	%r9515, [%rd12049];
	xor.b32  	%r9516, %r9514, %r9515;
	bfe.u32 	%r9517, %r9171, 8, 8;
	mul.wide.u32 	%rd12054, %r9517, 4;
	add.s64 	%rd12055, %rd11575, %rd12054;
	ld.shared.u8 	%r9518, [%rd12055];
	mul.wide.u32 	%rd12056, %r9518, 4;
	add.s64 	%rd12057, %rd11703, %rd12056;
	ld.shared.u32 	%r9519, [%rd12057];
	xor.b32  	%r9520, %r9516, %r9519;
	and.b32  	%r9521, %r9171, 255;
	mul.wide.u32 	%rd12058, %r9521, 4;
	add.s64 	%rd12059, %rd11575, %rd12058;
	ld.shared.u8 	%r9522, [%rd12059];
	mul.wide.u32 	%rd12060, %r9522, 4;
	add.s64 	%rd12061, %rd11708, %rd12060;
	ld.shared.u32 	%r9523, [%rd12061];
	xor.b32  	%r9524, %r9520, %r9523;
	st.local.u32 	[%rd337+100], %r9524;
	ld.local.u32 	%r9525, [%rd337+104];
	shr.u32 	%r9526, %r9525, 24;
	mul.wide.u32 	%rd12062, %r9526, 4;
	add.s64 	%rd12063, %rd11575, %rd12062;
	ld.shared.u8 	%r9527, [%rd12063];
	mul.wide.u32 	%rd12064, %r9527, 4;
	add.s64 	%rd12065, %rd11693, %rd12064;
	bfe.u32 	%r9528, %r9525, 16, 8;
	mul.wide.u32 	%rd12066, %r9528, 4;
	add.s64 	%rd12067, %rd11575, %rd12066;
	ld.shared.u8 	%r9529, [%rd12067];
	mul.wide.u32 	%rd12068, %r9529, 4;
	add.s64 	%rd12069, %rd11698, %rd12068;
	ld.shared.u32 	%r9530, [%rd12069];
	ld.shared.u32 	%r9531, [%rd12065];
	xor.b32  	%r9532, %r9530, %r9531;
	bfe.u32 	%r9533, %r9525, 8, 8;
	mul.wide.u32 	%rd12070, %r9533, 4;
	add.s64 	%rd12071, %rd11575, %rd12070;
	ld.shared.u8 	%r9534, [%rd12071];
	mul.wide.u32 	%rd12072, %r9534, 4;
	add.s64 	%rd12073, %rd11703, %rd12072;
	ld.shared.u32 	%r9535, [%rd12073];
	xor.b32  	%r9536, %r9532, %r9535;
	and.b32  	%r9537, %r9525, 255;
	mul.wide.u32 	%rd12074, %r9537, 4;
	add.s64 	%rd12075, %rd11575, %rd12074;
	ld.shared.u8 	%r9538, [%rd12075];
	mul.wide.u32 	%rd12076, %r9538, 4;
	add.s64 	%rd12077, %rd11708, %rd12076;
	ld.shared.u32 	%r9539, [%rd12077];
	xor.b32  	%r9540, %r9536, %r9539;
	ld.local.v4.u32 	{%r9541, %r9542, %r9543, %r9544}, [%rd337+108];
	ld.local.v4.u32 	{%r9545, %r9546, %r9547, %r9548}, [%rd337+124];
	ld.local.v4.u32 	{%r9549, %r9550, %r9551, %r9552}, [%rd337+140];
	ld.local.v4.u32 	{%r9553, %r9554, %r9555, %r9556}, [%rd337+156];
	ld.local.v4.u32 	{%r9557, %r9558, %r9559, %r9560}, [%rd337+172];
	ld.local.v2.u32 	{%r9561, %r9562}, [%rd337+188];
	st.local.u32 	[%rd337+104], %r9540;
	shr.u32 	%r9564, %r9541, 24;
	mul.wide.u32 	%rd12078, %r9564, 4;
	add.s64 	%rd12079, %rd11575, %rd12078;
	ld.shared.u8 	%r9565, [%rd12079];
	mul.wide.u32 	%rd12080, %r9565, 4;
	add.s64 	%rd12081, %rd11693, %rd12080;
	bfe.u32 	%r9566, %r9541, 16, 8;
	mul.wide.u32 	%rd12082, %r9566, 4;
	add.s64 	%rd12083, %rd11575, %rd12082;
	ld.shared.u8 	%r9567, [%rd12083];
	mul.wide.u32 	%rd12084, %r9567, 4;
	add.s64 	%rd12085, %rd11698, %rd12084;
	ld.shared.u32 	%r9568, [%rd12085];
	ld.shared.u32 	%r9569, [%rd12081];
	xor.b32  	%r9570, %r9568, %r9569;
	bfe.u32 	%r9571, %r9541, 8, 8;
	mul.wide.u32 	%rd12086, %r9571, 4;
	add.s64 	%rd12087, %rd11575, %rd12086;
	ld.shared.u8 	%r9572, [%rd12087];
	mul.wide.u32 	%rd12088, %r9572, 4;
	add.s64 	%rd12089, %rd11703, %rd12088;
	ld.shared.u32 	%r9573, [%rd12089];
	xor.b32  	%r9574, %r9570, %r9573;
	and.b32  	%r9575, %r9541, 255;
	mul.wide.u32 	%rd12090, %r9575, 4;
	add.s64 	%rd12091, %rd11575, %rd12090;
	ld.shared.u8 	%r9576, [%rd12091];
	mul.wide.u32 	%rd12092, %r9576, 4;
	add.s64 	%rd12093, %rd11708, %rd12092;
	ld.shared.u32 	%r9577, [%rd12093];
	xor.b32  	%r9578, %r9574, %r9577;
	st.local.u32 	[%rd337+108], %r9578;
	shr.u32 	%r9580, %r9542, 24;
	mul.wide.u32 	%rd12094, %r9580, 4;
	add.s64 	%rd12095, %rd11575, %rd12094;
	ld.shared.u8 	%r9581, [%rd12095];
	mul.wide.u32 	%rd12096, %r9581, 4;
	add.s64 	%rd12097, %rd11693, %rd12096;
	bfe.u32 	%r9582, %r9542, 16, 8;
	mul.wide.u32 	%rd12098, %r9582, 4;
	add.s64 	%rd12099, %rd11575, %rd12098;
	ld.shared.u8 	%r9583, [%rd12099];
	mul.wide.u32 	%rd12100, %r9583, 4;
	add.s64 	%rd12101, %rd11698, %rd12100;
	ld.shared.u32 	%r9584, [%rd12101];
	ld.shared.u32 	%r9585, [%rd12097];
	xor.b32  	%r9586, %r9584, %r9585;
	bfe.u32 	%r9587, %r9542, 8, 8;
	mul.wide.u32 	%rd12102, %r9587, 4;
	add.s64 	%rd12103, %rd11575, %rd12102;
	ld.shared.u8 	%r9588, [%rd12103];
	mul.wide.u32 	%rd12104, %r9588, 4;
	add.s64 	%rd12105, %rd11703, %rd12104;
	ld.shared.u32 	%r9589, [%rd12105];
	xor.b32  	%r9590, %r9586, %r9589;
	and.b32  	%r9591, %r9542, 255;
	mul.wide.u32 	%rd12106, %r9591, 4;
	add.s64 	%rd12107, %rd11575, %rd12106;
	ld.shared.u8 	%r9592, [%rd12107];
	mul.wide.u32 	%rd12108, %r9592, 4;
	add.s64 	%rd12109, %rd11708, %rd12108;
	ld.shared.u32 	%r9593, [%rd12109];
	xor.b32  	%r9594, %r9590, %r9593;
	st.local.u32 	[%rd337+112], %r9594;
	shr.u32 	%r9596, %r9543, 24;
	mul.wide.u32 	%rd12110, %r9596, 4;
	add.s64 	%rd12111, %rd11575, %rd12110;
	ld.shared.u8 	%r9597, [%rd12111];
	mul.wide.u32 	%rd12112, %r9597, 4;
	add.s64 	%rd12113, %rd11693, %rd12112;
	bfe.u32 	%r9598, %r9543, 16, 8;
	mul.wide.u32 	%rd12114, %r9598, 4;
	add.s64 	%rd12115, %rd11575, %rd12114;
	ld.shared.u8 	%r9599, [%rd12115];
	mul.wide.u32 	%rd12116, %r9599, 4;
	add.s64 	%rd12117, %rd11698, %rd12116;
	ld.shared.u32 	%r9600, [%rd12117];
	ld.shared.u32 	%r9601, [%rd12113];
	xor.b32  	%r9602, %r9600, %r9601;
	bfe.u32 	%r9603, %r9543, 8, 8;
	mul.wide.u32 	%rd12118, %r9603, 4;
	add.s64 	%rd12119, %rd11575, %rd12118;
	ld.shared.u8 	%r9604, [%rd12119];
	mul.wide.u32 	%rd12120, %r9604, 4;
	add.s64 	%rd12121, %rd11703, %rd12120;
	ld.shared.u32 	%r9605, [%rd12121];
	xor.b32  	%r9606, %r9602, %r9605;
	and.b32  	%r9607, %r9543, 255;
	mul.wide.u32 	%rd12122, %r9607, 4;
	add.s64 	%rd12123, %rd11575, %rd12122;
	ld.shared.u8 	%r9608, [%rd12123];
	mul.wide.u32 	%rd12124, %r9608, 4;
	add.s64 	%rd12125, %rd11708, %rd12124;
	ld.shared.u32 	%r9609, [%rd12125];
	xor.b32  	%r9610, %r9606, %r9609;
	st.local.u32 	[%rd337+116], %r9610;
	shr.u32 	%r9612, %r9544, 24;
	mul.wide.u32 	%rd12126, %r9612, 4;
	add.s64 	%rd12127, %rd11575, %rd12126;
	ld.shared.u8 	%r9613, [%rd12127];
	mul.wide.u32 	%rd12128, %r9613, 4;
	add.s64 	%rd12129, %rd11693, %rd12128;
	bfe.u32 	%r9614, %r9544, 16, 8;
	mul.wide.u32 	%rd12130, %r9614, 4;
	add.s64 	%rd12131, %rd11575, %rd12130;
	ld.shared.u8 	%r9615, [%rd12131];
	mul.wide.u32 	%rd12132, %r9615, 4;
	add.s64 	%rd12133, %rd11698, %rd12132;
	ld.shared.u32 	%r9616, [%rd12133];
	ld.shared.u32 	%r9617, [%rd12129];
	xor.b32  	%r9618, %r9616, %r9617;
	bfe.u32 	%r9619, %r9544, 8, 8;
	mul.wide.u32 	%rd12134, %r9619, 4;
	add.s64 	%rd12135, %rd11575, %rd12134;
	ld.shared.u8 	%r9620, [%rd12135];
	mul.wide.u32 	%rd12136, %r9620, 4;
	add.s64 	%rd12137, %rd11703, %rd12136;
	ld.shared.u32 	%r9621, [%rd12137];
	xor.b32  	%r9622, %r9618, %r9621;
	and.b32  	%r9623, %r9544, 255;
	mul.wide.u32 	%rd12138, %r9623, 4;
	add.s64 	%rd12139, %rd11575, %rd12138;
	ld.shared.u8 	%r9624, [%rd12139];
	mul.wide.u32 	%rd12140, %r9624, 4;
	add.s64 	%rd12141, %rd11708, %rd12140;
	ld.shared.u32 	%r9625, [%rd12141];
	xor.b32  	%r9626, %r9622, %r9625;
	st.local.u32 	[%rd337+120], %r9626;
	shr.u32 	%r9628, %r9545, 24;
	mul.wide.u32 	%rd12142, %r9628, 4;
	add.s64 	%rd12143, %rd11575, %rd12142;
	ld.shared.u8 	%r9629, [%rd12143];
	mul.wide.u32 	%rd12144, %r9629, 4;
	add.s64 	%rd12145, %rd11693, %rd12144;
	bfe.u32 	%r9630, %r9545, 16, 8;
	mul.wide.u32 	%rd12146, %r9630, 4;
	add.s64 	%rd12147, %rd11575, %rd12146;
	ld.shared.u8 	%r9631, [%rd12147];
	mul.wide.u32 	%rd12148, %r9631, 4;
	add.s64 	%rd12149, %rd11698, %rd12148;
	ld.shared.u32 	%r9632, [%rd12149];
	ld.shared.u32 	%r9633, [%rd12145];
	xor.b32  	%r9634, %r9632, %r9633;
	bfe.u32 	%r9635, %r9545, 8, 8;
	mul.wide.u32 	%rd12150, %r9635, 4;
	add.s64 	%rd12151, %rd11575, %rd12150;
	ld.shared.u8 	%r9636, [%rd12151];
	mul.wide.u32 	%rd12152, %r9636, 4;
	add.s64 	%rd12153, %rd11703, %rd12152;
	ld.shared.u32 	%r9637, [%rd12153];
	xor.b32  	%r9638, %r9634, %r9637;
	and.b32  	%r9639, %r9545, 255;
	mul.wide.u32 	%rd12154, %r9639, 4;
	add.s64 	%rd12155, %rd11575, %rd12154;
	ld.shared.u8 	%r9640, [%rd12155];
	mul.wide.u32 	%rd12156, %r9640, 4;
	add.s64 	%rd12157, %rd11708, %rd12156;
	ld.shared.u32 	%r9641, [%rd12157];
	xor.b32  	%r9642, %r9638, %r9641;
	st.local.u32 	[%rd337+124], %r9642;
	shr.u32 	%r9644, %r9546, 24;
	mul.wide.u32 	%rd12158, %r9644, 4;
	add.s64 	%rd12159, %rd11575, %rd12158;
	ld.shared.u8 	%r9645, [%rd12159];
	mul.wide.u32 	%rd12160, %r9645, 4;
	add.s64 	%rd12161, %rd11693, %rd12160;
	bfe.u32 	%r9646, %r9546, 16, 8;
	mul.wide.u32 	%rd12162, %r9646, 4;
	add.s64 	%rd12163, %rd11575, %rd12162;
	ld.shared.u8 	%r9647, [%rd12163];
	mul.wide.u32 	%rd12164, %r9647, 4;
	add.s64 	%rd12165, %rd11698, %rd12164;
	ld.shared.u32 	%r9648, [%rd12165];
	ld.shared.u32 	%r9649, [%rd12161];
	xor.b32  	%r9650, %r9648, %r9649;
	bfe.u32 	%r9651, %r9546, 8, 8;
	mul.wide.u32 	%rd12166, %r9651, 4;
	add.s64 	%rd12167, %rd11575, %rd12166;
	ld.shared.u8 	%r9652, [%rd12167];
	mul.wide.u32 	%rd12168, %r9652, 4;
	add.s64 	%rd12169, %rd11703, %rd12168;
	ld.shared.u32 	%r9653, [%rd12169];
	xor.b32  	%r9654, %r9650, %r9653;
	and.b32  	%r9655, %r9546, 255;
	mul.wide.u32 	%rd12170, %r9655, 4;
	add.s64 	%rd12171, %rd11575, %rd12170;
	ld.shared.u8 	%r9656, [%rd12171];
	mul.wide.u32 	%rd12172, %r9656, 4;
	add.s64 	%rd12173, %rd11708, %rd12172;
	ld.shared.u32 	%r9657, [%rd12173];
	xor.b32  	%r9658, %r9654, %r9657;
	st.local.u32 	[%rd337+128], %r9658;
	shr.u32 	%r9660, %r9547, 24;
	mul.wide.u32 	%rd12174, %r9660, 4;
	add.s64 	%rd12175, %rd11575, %rd12174;
	ld.shared.u8 	%r9661, [%rd12175];
	mul.wide.u32 	%rd12176, %r9661, 4;
	add.s64 	%rd12177, %rd11693, %rd12176;
	bfe.u32 	%r9662, %r9547, 16, 8;
	mul.wide.u32 	%rd12178, %r9662, 4;
	add.s64 	%rd12179, %rd11575, %rd12178;
	ld.shared.u8 	%r9663, [%rd12179];
	mul.wide.u32 	%rd12180, %r9663, 4;
	add.s64 	%rd12181, %rd11698, %rd12180;
	ld.shared.u32 	%r9664, [%rd12181];
	ld.shared.u32 	%r9665, [%rd12177];
	xor.b32  	%r9666, %r9664, %r9665;
	bfe.u32 	%r9667, %r9547, 8, 8;
	mul.wide.u32 	%rd12182, %r9667, 4;
	add.s64 	%rd12183, %rd11575, %rd12182;
	ld.shared.u8 	%r9668, [%rd12183];
	mul.wide.u32 	%rd12184, %r9668, 4;
	add.s64 	%rd12185, %rd11703, %rd12184;
	ld.shared.u32 	%r9669, [%rd12185];
	xor.b32  	%r9670, %r9666, %r9669;
	and.b32  	%r9671, %r9547, 255;
	mul.wide.u32 	%rd12186, %r9671, 4;
	add.s64 	%rd12187, %rd11575, %rd12186;
	ld.shared.u8 	%r9672, [%rd12187];
	mul.wide.u32 	%rd12188, %r9672, 4;
	add.s64 	%rd12189, %rd11708, %rd12188;
	ld.shared.u32 	%r9673, [%rd12189];
	xor.b32  	%r9674, %r9670, %r9673;
	st.local.u32 	[%rd337+132], %r9674;
	shr.u32 	%r9676, %r9548, 24;
	mul.wide.u32 	%rd12190, %r9676, 4;
	add.s64 	%rd12191, %rd11575, %rd12190;
	ld.shared.u8 	%r9677, [%rd12191];
	mul.wide.u32 	%rd12192, %r9677, 4;
	add.s64 	%rd12193, %rd11693, %rd12192;
	bfe.u32 	%r9678, %r9548, 16, 8;
	mul.wide.u32 	%rd12194, %r9678, 4;
	add.s64 	%rd12195, %rd11575, %rd12194;
	ld.shared.u8 	%r9679, [%rd12195];
	mul.wide.u32 	%rd12196, %r9679, 4;
	add.s64 	%rd12197, %rd11698, %rd12196;
	ld.shared.u32 	%r9680, [%rd12197];
	ld.shared.u32 	%r9681, [%rd12193];
	xor.b32  	%r9682, %r9680, %r9681;
	bfe.u32 	%r9683, %r9548, 8, 8;
	mul.wide.u32 	%rd12198, %r9683, 4;
	add.s64 	%rd12199, %rd11575, %rd12198;
	ld.shared.u8 	%r9684, [%rd12199];
	mul.wide.u32 	%rd12200, %r9684, 4;
	add.s64 	%rd12201, %rd11703, %rd12200;
	ld.shared.u32 	%r9685, [%rd12201];
	xor.b32  	%r9686, %r9682, %r9685;
	and.b32  	%r9687, %r9548, 255;
	mul.wide.u32 	%rd12202, %r9687, 4;
	add.s64 	%rd12203, %rd11575, %rd12202;
	ld.shared.u8 	%r9688, [%rd12203];
	mul.wide.u32 	%rd12204, %r9688, 4;
	add.s64 	%rd12205, %rd11708, %rd12204;
	ld.shared.u32 	%r9689, [%rd12205];
	xor.b32  	%r9690, %r9686, %r9689;
	st.local.u32 	[%rd337+136], %r9690;
	shr.u32 	%r9692, %r9549, 24;
	mul.wide.u32 	%rd12206, %r9692, 4;
	add.s64 	%rd12207, %rd11575, %rd12206;
	ld.shared.u8 	%r9693, [%rd12207];
	mul.wide.u32 	%rd12208, %r9693, 4;
	add.s64 	%rd12209, %rd11693, %rd12208;
	bfe.u32 	%r9694, %r9549, 16, 8;
	mul.wide.u32 	%rd12210, %r9694, 4;
	add.s64 	%rd12211, %rd11575, %rd12210;
	ld.shared.u8 	%r9695, [%rd12211];
	mul.wide.u32 	%rd12212, %r9695, 4;
	add.s64 	%rd12213, %rd11698, %rd12212;
	ld.shared.u32 	%r9696, [%rd12213];
	ld.shared.u32 	%r9697, [%rd12209];
	xor.b32  	%r9698, %r9696, %r9697;
	bfe.u32 	%r9699, %r9549, 8, 8;
	mul.wide.u32 	%rd12214, %r9699, 4;
	add.s64 	%rd12215, %rd11575, %rd12214;
	ld.shared.u8 	%r9700, [%rd12215];
	mul.wide.u32 	%rd12216, %r9700, 4;
	add.s64 	%rd12217, %rd11703, %rd12216;
	ld.shared.u32 	%r9701, [%rd12217];
	xor.b32  	%r9702, %r9698, %r9701;
	and.b32  	%r9703, %r9549, 255;
	mul.wide.u32 	%rd12218, %r9703, 4;
	add.s64 	%rd12219, %rd11575, %rd12218;
	ld.shared.u8 	%r9704, [%rd12219];
	mul.wide.u32 	%rd12220, %r9704, 4;
	add.s64 	%rd12221, %rd11708, %rd12220;
	ld.shared.u32 	%r9705, [%rd12221];
	xor.b32  	%r9706, %r9702, %r9705;
	st.local.u32 	[%rd337+140], %r9706;
	shr.u32 	%r9708, %r9550, 24;
	mul.wide.u32 	%rd12222, %r9708, 4;
	add.s64 	%rd12223, %rd11575, %rd12222;
	ld.shared.u8 	%r9709, [%rd12223];
	mul.wide.u32 	%rd12224, %r9709, 4;
	add.s64 	%rd12225, %rd11693, %rd12224;
	bfe.u32 	%r9710, %r9550, 16, 8;
	mul.wide.u32 	%rd12226, %r9710, 4;
	add.s64 	%rd12227, %rd11575, %rd12226;
	ld.shared.u8 	%r9711, [%rd12227];
	mul.wide.u32 	%rd12228, %r9711, 4;
	add.s64 	%rd12229, %rd11698, %rd12228;
	ld.shared.u32 	%r9712, [%rd12229];
	ld.shared.u32 	%r9713, [%rd12225];
	xor.b32  	%r9714, %r9712, %r9713;
	bfe.u32 	%r9715, %r9550, 8, 8;
	mul.wide.u32 	%rd12230, %r9715, 4;
	add.s64 	%rd12231, %rd11575, %rd12230;
	ld.shared.u8 	%r9716, [%rd12231];
	mul.wide.u32 	%rd12232, %r9716, 4;
	add.s64 	%rd12233, %rd11703, %rd12232;
	ld.shared.u32 	%r9717, [%rd12233];
	xor.b32  	%r9718, %r9714, %r9717;
	and.b32  	%r9719, %r9550, 255;
	mul.wide.u32 	%rd12234, %r9719, 4;
	add.s64 	%rd12235, %rd11575, %rd12234;
	ld.shared.u8 	%r9720, [%rd12235];
	mul.wide.u32 	%rd12236, %r9720, 4;
	add.s64 	%rd12237, %rd11708, %rd12236;
	ld.shared.u32 	%r9721, [%rd12237];
	xor.b32  	%r9722, %r9718, %r9721;
	st.local.u32 	[%rd337+144], %r9722;
	shr.u32 	%r9724, %r9551, 24;
	mul.wide.u32 	%rd12238, %r9724, 4;
	add.s64 	%rd12239, %rd11575, %rd12238;
	ld.shared.u8 	%r9725, [%rd12239];
	mul.wide.u32 	%rd12240, %r9725, 4;
	add.s64 	%rd12241, %rd11693, %rd12240;
	bfe.u32 	%r9726, %r9551, 16, 8;
	mul.wide.u32 	%rd12242, %r9726, 4;
	add.s64 	%rd12243, %rd11575, %rd12242;
	ld.shared.u8 	%r9727, [%rd12243];
	mul.wide.u32 	%rd12244, %r9727, 4;
	add.s64 	%rd12245, %rd11698, %rd12244;
	ld.shared.u32 	%r9728, [%rd12245];
	ld.shared.u32 	%r9729, [%rd12241];
	xor.b32  	%r9730, %r9728, %r9729;
	bfe.u32 	%r9731, %r9551, 8, 8;
	mul.wide.u32 	%rd12246, %r9731, 4;
	add.s64 	%rd12247, %rd11575, %rd12246;
	ld.shared.u8 	%r9732, [%rd12247];
	mul.wide.u32 	%rd12248, %r9732, 4;
	add.s64 	%rd12249, %rd11703, %rd12248;
	ld.shared.u32 	%r9733, [%rd12249];
	xor.b32  	%r9734, %r9730, %r9733;
	and.b32  	%r9735, %r9551, 255;
	mul.wide.u32 	%rd12250, %r9735, 4;
	add.s64 	%rd12251, %rd11575, %rd12250;
	ld.shared.u8 	%r9736, [%rd12251];
	mul.wide.u32 	%rd12252, %r9736, 4;
	add.s64 	%rd12253, %rd11708, %rd12252;
	ld.shared.u32 	%r9737, [%rd12253];
	xor.b32  	%r9738, %r9734, %r9737;
	st.local.u32 	[%rd337+148], %r9738;
	shr.u32 	%r9740, %r9552, 24;
	mul.wide.u32 	%rd12254, %r9740, 4;
	add.s64 	%rd12255, %rd11575, %rd12254;
	ld.shared.u8 	%r9741, [%rd12255];
	mul.wide.u32 	%rd12256, %r9741, 4;
	add.s64 	%rd12257, %rd11693, %rd12256;
	bfe.u32 	%r9742, %r9552, 16, 8;
	mul.wide.u32 	%rd12258, %r9742, 4;
	add.s64 	%rd12259, %rd11575, %rd12258;
	ld.shared.u8 	%r9743, [%rd12259];
	mul.wide.u32 	%rd12260, %r9743, 4;
	add.s64 	%rd12261, %rd11698, %rd12260;
	ld.shared.u32 	%r9744, [%rd12261];
	ld.shared.u32 	%r9745, [%rd12257];
	xor.b32  	%r9746, %r9744, %r9745;
	bfe.u32 	%r9747, %r9552, 8, 8;
	mul.wide.u32 	%rd12262, %r9747, 4;
	add.s64 	%rd12263, %rd11575, %rd12262;
	ld.shared.u8 	%r9748, [%rd12263];
	mul.wide.u32 	%rd12264, %r9748, 4;
	add.s64 	%rd12265, %rd11703, %rd12264;
	ld.shared.u32 	%r9749, [%rd12265];
	xor.b32  	%r9750, %r9746, %r9749;
	and.b32  	%r9751, %r9552, 255;
	mul.wide.u32 	%rd12266, %r9751, 4;
	add.s64 	%rd12267, %rd11575, %rd12266;
	ld.shared.u8 	%r9752, [%rd12267];
	mul.wide.u32 	%rd12268, %r9752, 4;
	add.s64 	%rd12269, %rd11708, %rd12268;
	ld.shared.u32 	%r9753, [%rd12269];
	xor.b32  	%r9754, %r9750, %r9753;
	st.local.u32 	[%rd337+152], %r9754;
	shr.u32 	%r9756, %r9553, 24;
	mul.wide.u32 	%rd12270, %r9756, 4;
	add.s64 	%rd12271, %rd11575, %rd12270;
	ld.shared.u8 	%r9757, [%rd12271];
	mul.wide.u32 	%rd12272, %r9757, 4;
	add.s64 	%rd12273, %rd11693, %rd12272;
	bfe.u32 	%r9758, %r9553, 16, 8;
	mul.wide.u32 	%rd12274, %r9758, 4;
	add.s64 	%rd12275, %rd11575, %rd12274;
	ld.shared.u8 	%r9759, [%rd12275];
	mul.wide.u32 	%rd12276, %r9759, 4;
	add.s64 	%rd12277, %rd11698, %rd12276;
	ld.shared.u32 	%r9760, [%rd12277];
	ld.shared.u32 	%r9761, [%rd12273];
	xor.b32  	%r9762, %r9760, %r9761;
	bfe.u32 	%r9763, %r9553, 8, 8;
	mul.wide.u32 	%rd12278, %r9763, 4;
	add.s64 	%rd12279, %rd11575, %rd12278;
	ld.shared.u8 	%r9764, [%rd12279];
	mul.wide.u32 	%rd12280, %r9764, 4;
	add.s64 	%rd12281, %rd11703, %rd12280;
	ld.shared.u32 	%r9765, [%rd12281];
	xor.b32  	%r9766, %r9762, %r9765;
	and.b32  	%r9767, %r9553, 255;
	mul.wide.u32 	%rd12282, %r9767, 4;
	add.s64 	%rd12283, %rd11575, %rd12282;
	ld.shared.u8 	%r9768, [%rd12283];
	mul.wide.u32 	%rd12284, %r9768, 4;
	add.s64 	%rd12285, %rd11708, %rd12284;
	ld.shared.u32 	%r9769, [%rd12285];
	xor.b32  	%r9770, %r9766, %r9769;
	st.local.u32 	[%rd337+156], %r9770;
	shr.u32 	%r9772, %r9554, 24;
	mul.wide.u32 	%rd12286, %r9772, 4;
	add.s64 	%rd12287, %rd11575, %rd12286;
	ld.shared.u8 	%r9773, [%rd12287];
	mul.wide.u32 	%rd12288, %r9773, 4;
	add.s64 	%rd12289, %rd11693, %rd12288;
	bfe.u32 	%r9774, %r9554, 16, 8;
	mul.wide.u32 	%rd12290, %r9774, 4;
	add.s64 	%rd12291, %rd11575, %rd12290;
	ld.shared.u8 	%r9775, [%rd12291];
	mul.wide.u32 	%rd12292, %r9775, 4;
	add.s64 	%rd12293, %rd11698, %rd12292;
	ld.shared.u32 	%r9776, [%rd12293];
	ld.shared.u32 	%r9777, [%rd12289];
	xor.b32  	%r9778, %r9776, %r9777;
	bfe.u32 	%r9779, %r9554, 8, 8;
	mul.wide.u32 	%rd12294, %r9779, 4;
	add.s64 	%rd12295, %rd11575, %rd12294;
	ld.shared.u8 	%r9780, [%rd12295];
	mul.wide.u32 	%rd12296, %r9780, 4;
	add.s64 	%rd12297, %rd11703, %rd12296;
	ld.shared.u32 	%r9781, [%rd12297];
	xor.b32  	%r9782, %r9778, %r9781;
	and.b32  	%r9783, %r9554, 255;
	mul.wide.u32 	%rd12298, %r9783, 4;
	add.s64 	%rd12299, %rd11575, %rd12298;
	ld.shared.u8 	%r9784, [%rd12299];
	mul.wide.u32 	%rd12300, %r9784, 4;
	add.s64 	%rd12301, %rd11708, %rd12300;
	ld.shared.u32 	%r9785, [%rd12301];
	xor.b32  	%r9786, %r9782, %r9785;
	st.local.u32 	[%rd337+160], %r9786;
	shr.u32 	%r9788, %r9555, 24;
	mul.wide.u32 	%rd12302, %r9788, 4;
	add.s64 	%rd12303, %rd11575, %rd12302;
	ld.shared.u8 	%r9789, [%rd12303];
	mul.wide.u32 	%rd12304, %r9789, 4;
	add.s64 	%rd12305, %rd11693, %rd12304;
	bfe.u32 	%r9790, %r9555, 16, 8;
	mul.wide.u32 	%rd12306, %r9790, 4;
	add.s64 	%rd12307, %rd11575, %rd12306;
	ld.shared.u8 	%r9791, [%rd12307];
	mul.wide.u32 	%rd12308, %r9791, 4;
	add.s64 	%rd12309, %rd11698, %rd12308;
	ld.shared.u32 	%r9792, [%rd12309];
	ld.shared.u32 	%r9793, [%rd12305];
	xor.b32  	%r9794, %r9792, %r9793;
	bfe.u32 	%r9795, %r9555, 8, 8;
	mul.wide.u32 	%rd12310, %r9795, 4;
	add.s64 	%rd12311, %rd11575, %rd12310;
	ld.shared.u8 	%r9796, [%rd12311];
	mul.wide.u32 	%rd12312, %r9796, 4;
	add.s64 	%rd12313, %rd11703, %rd12312;
	ld.shared.u32 	%r9797, [%rd12313];
	xor.b32  	%r9798, %r9794, %r9797;
	and.b32  	%r9799, %r9555, 255;
	mul.wide.u32 	%rd12314, %r9799, 4;
	add.s64 	%rd12315, %rd11575, %rd12314;
	ld.shared.u8 	%r9800, [%rd12315];
	mul.wide.u32 	%rd12316, %r9800, 4;
	add.s64 	%rd12317, %rd11708, %rd12316;
	ld.shared.u32 	%r9801, [%rd12317];
	xor.b32  	%r9802, %r9798, %r9801;
	st.local.u32 	[%rd337+164], %r9802;
	shr.u32 	%r9804, %r9556, 24;
	mul.wide.u32 	%rd12318, %r9804, 4;
	add.s64 	%rd12319, %rd11575, %rd12318;
	ld.shared.u8 	%r9805, [%rd12319];
	mul.wide.u32 	%rd12320, %r9805, 4;
	add.s64 	%rd12321, %rd11693, %rd12320;
	bfe.u32 	%r9806, %r9556, 16, 8;
	mul.wide.u32 	%rd12322, %r9806, 4;
	add.s64 	%rd12323, %rd11575, %rd12322;
	ld.shared.u8 	%r9807, [%rd12323];
	mul.wide.u32 	%rd12324, %r9807, 4;
	add.s64 	%rd12325, %rd11698, %rd12324;
	ld.shared.u32 	%r9808, [%rd12325];
	ld.shared.u32 	%r9809, [%rd12321];
	xor.b32  	%r9810, %r9808, %r9809;
	bfe.u32 	%r9811, %r9556, 8, 8;
	mul.wide.u32 	%rd12326, %r9811, 4;
	add.s64 	%rd12327, %rd11575, %rd12326;
	ld.shared.u8 	%r9812, [%rd12327];
	mul.wide.u32 	%rd12328, %r9812, 4;
	add.s64 	%rd12329, %rd11703, %rd12328;
	ld.shared.u32 	%r9813, [%rd12329];
	xor.b32  	%r9814, %r9810, %r9813;
	and.b32  	%r9815, %r9556, 255;
	mul.wide.u32 	%rd12330, %r9815, 4;
	add.s64 	%rd12331, %rd11575, %rd12330;
	ld.shared.u8 	%r9816, [%rd12331];
	mul.wide.u32 	%rd12332, %r9816, 4;
	add.s64 	%rd12333, %rd11708, %rd12332;
	ld.shared.u32 	%r9817, [%rd12333];
	xor.b32  	%r9818, %r9814, %r9817;
	st.local.u32 	[%rd337+168], %r9818;
	shr.u32 	%r9820, %r9557, 24;
	mul.wide.u32 	%rd12334, %r9820, 4;
	add.s64 	%rd12335, %rd11575, %rd12334;
	ld.shared.u8 	%r9821, [%rd12335];
	mul.wide.u32 	%rd12336, %r9821, 4;
	add.s64 	%rd12337, %rd11693, %rd12336;
	bfe.u32 	%r9822, %r9557, 16, 8;
	mul.wide.u32 	%rd12338, %r9822, 4;
	add.s64 	%rd12339, %rd11575, %rd12338;
	ld.shared.u8 	%r9823, [%rd12339];
	mul.wide.u32 	%rd12340, %r9823, 4;
	add.s64 	%rd12341, %rd11698, %rd12340;
	ld.shared.u32 	%r9824, [%rd12341];
	ld.shared.u32 	%r9825, [%rd12337];
	xor.b32  	%r9826, %r9824, %r9825;
	bfe.u32 	%r9827, %r9557, 8, 8;
	mul.wide.u32 	%rd12342, %r9827, 4;
	add.s64 	%rd12343, %rd11575, %rd12342;
	ld.shared.u8 	%r9828, [%rd12343];
	mul.wide.u32 	%rd12344, %r9828, 4;
	add.s64 	%rd12345, %rd11703, %rd12344;
	ld.shared.u32 	%r9829, [%rd12345];
	xor.b32  	%r9830, %r9826, %r9829;
	and.b32  	%r9831, %r9557, 255;
	mul.wide.u32 	%rd12346, %r9831, 4;
	add.s64 	%rd12347, %rd11575, %rd12346;
	ld.shared.u8 	%r9832, [%rd12347];
	mul.wide.u32 	%rd12348, %r9832, 4;
	add.s64 	%rd12349, %rd11708, %rd12348;
	ld.shared.u32 	%r9833, [%rd12349];
	xor.b32  	%r9834, %r9830, %r9833;
	st.local.u32 	[%rd337+172], %r9834;
	shr.u32 	%r9836, %r9558, 24;
	mul.wide.u32 	%rd12350, %r9836, 4;
	add.s64 	%rd12351, %rd11575, %rd12350;
	ld.shared.u8 	%r9837, [%rd12351];
	mul.wide.u32 	%rd12352, %r9837, 4;
	add.s64 	%rd12353, %rd11693, %rd12352;
	bfe.u32 	%r9838, %r9558, 16, 8;
	mul.wide.u32 	%rd12354, %r9838, 4;
	add.s64 	%rd12355, %rd11575, %rd12354;
	ld.shared.u8 	%r9839, [%rd12355];
	mul.wide.u32 	%rd12356, %r9839, 4;
	add.s64 	%rd12357, %rd11698, %rd12356;
	ld.shared.u32 	%r9840, [%rd12357];
	ld.shared.u32 	%r9841, [%rd12353];
	xor.b32  	%r9842, %r9840, %r9841;
	bfe.u32 	%r9843, %r9558, 8, 8;
	mul.wide.u32 	%rd12358, %r9843, 4;
	add.s64 	%rd12359, %rd11575, %rd12358;
	ld.shared.u8 	%r9844, [%rd12359];
	mul.wide.u32 	%rd12360, %r9844, 4;
	add.s64 	%rd12361, %rd11703, %rd12360;
	ld.shared.u32 	%r9845, [%rd12361];
	xor.b32  	%r9846, %r9842, %r9845;
	and.b32  	%r9847, %r9558, 255;
	mul.wide.u32 	%rd12362, %r9847, 4;
	add.s64 	%rd12363, %rd11575, %rd12362;
	ld.shared.u8 	%r9848, [%rd12363];
	mul.wide.u32 	%rd12364, %r9848, 4;
	add.s64 	%rd12365, %rd11708, %rd12364;
	ld.shared.u32 	%r9849, [%rd12365];
	xor.b32  	%r9850, %r9846, %r9849;
	st.local.u32 	[%rd337+176], %r9850;
	shr.u32 	%r9852, %r9559, 24;
	mul.wide.u32 	%rd12366, %r9852, 4;
	add.s64 	%rd12367, %rd11575, %rd12366;
	ld.shared.u8 	%r9853, [%rd12367];
	mul.wide.u32 	%rd12368, %r9853, 4;
	add.s64 	%rd12369, %rd11693, %rd12368;
	bfe.u32 	%r9854, %r9559, 16, 8;
	mul.wide.u32 	%rd12370, %r9854, 4;
	add.s64 	%rd12371, %rd11575, %rd12370;
	ld.shared.u8 	%r9855, [%rd12371];
	mul.wide.u32 	%rd12372, %r9855, 4;
	add.s64 	%rd12373, %rd11698, %rd12372;
	ld.shared.u32 	%r9856, [%rd12373];
	ld.shared.u32 	%r9857, [%rd12369];
	xor.b32  	%r9858, %r9856, %r9857;
	bfe.u32 	%r9859, %r9559, 8, 8;
	mul.wide.u32 	%rd12374, %r9859, 4;
	add.s64 	%rd12375, %rd11575, %rd12374;
	ld.shared.u8 	%r9860, [%rd12375];
	mul.wide.u32 	%rd12376, %r9860, 4;
	add.s64 	%rd12377, %rd11703, %rd12376;
	ld.shared.u32 	%r9861, [%rd12377];
	xor.b32  	%r9862, %r9858, %r9861;
	and.b32  	%r9863, %r9559, 255;
	mul.wide.u32 	%rd12378, %r9863, 4;
	add.s64 	%rd12379, %rd11575, %rd12378;
	ld.shared.u8 	%r9864, [%rd12379];
	mul.wide.u32 	%rd12380, %r9864, 4;
	add.s64 	%rd12381, %rd11708, %rd12380;
	ld.shared.u32 	%r9865, [%rd12381];
	xor.b32  	%r9866, %r9862, %r9865;
	st.local.u32 	[%rd337+180], %r9866;
	shr.u32 	%r9868, %r9560, 24;
	mul.wide.u32 	%rd12382, %r9868, 4;
	add.s64 	%rd12383, %rd11575, %rd12382;
	ld.shared.u8 	%r9869, [%rd12383];
	mul.wide.u32 	%rd12384, %r9869, 4;
	add.s64 	%rd12385, %rd11693, %rd12384;
	bfe.u32 	%r9870, %r9560, 16, 8;
	mul.wide.u32 	%rd12386, %r9870, 4;
	add.s64 	%rd12387, %rd11575, %rd12386;
	ld.shared.u8 	%r9871, [%rd12387];
	mul.wide.u32 	%rd12388, %r9871, 4;
	add.s64 	%rd12389, %rd11698, %rd12388;
	ld.shared.u32 	%r9872, [%rd12389];
	ld.shared.u32 	%r9873, [%rd12385];
	xor.b32  	%r9874, %r9872, %r9873;
	bfe.u32 	%r9875, %r9560, 8, 8;
	mul.wide.u32 	%rd12390, %r9875, 4;
	add.s64 	%rd12391, %rd11575, %rd12390;
	ld.shared.u8 	%r9876, [%rd12391];
	mul.wide.u32 	%rd12392, %r9876, 4;
	add.s64 	%rd12393, %rd11703, %rd12392;
	ld.shared.u32 	%r9877, [%rd12393];
	xor.b32  	%r9878, %r9874, %r9877;
	and.b32  	%r9879, %r9560, 255;
	mul.wide.u32 	%rd12394, %r9879, 4;
	add.s64 	%rd12395, %rd11575, %rd12394;
	ld.shared.u8 	%r9880, [%rd12395];
	mul.wide.u32 	%rd12396, %r9880, 4;
	add.s64 	%rd12397, %rd11708, %rd12396;
	ld.shared.u32 	%r9881, [%rd12397];
	xor.b32  	%r9882, %r9878, %r9881;
	st.local.u32 	[%rd337+184], %r9882;
	shr.u32 	%r9884, %r9561, 24;
	mul.wide.u32 	%rd12398, %r9884, 4;
	add.s64 	%rd12399, %rd11575, %rd12398;
	ld.shared.u8 	%r9885, [%rd12399];
	mul.wide.u32 	%rd12400, %r9885, 4;
	add.s64 	%rd12401, %rd11693, %rd12400;
	bfe.u32 	%r9886, %r9561, 16, 8;
	mul.wide.u32 	%rd12402, %r9886, 4;
	add.s64 	%rd12403, %rd11575, %rd12402;
	ld.shared.u8 	%r9887, [%rd12403];
	mul.wide.u32 	%rd12404, %r9887, 4;
	add.s64 	%rd12405, %rd11698, %rd12404;
	ld.shared.u32 	%r9888, [%rd12405];
	ld.shared.u32 	%r9889, [%rd12401];
	xor.b32  	%r9890, %r9888, %r9889;
	bfe.u32 	%r9891, %r9561, 8, 8;
	mul.wide.u32 	%rd12406, %r9891, 4;
	add.s64 	%rd12407, %rd11575, %rd12406;
	ld.shared.u8 	%r9892, [%rd12407];
	mul.wide.u32 	%rd12408, %r9892, 4;
	add.s64 	%rd12409, %rd11703, %rd12408;
	ld.shared.u32 	%r9893, [%rd12409];
	xor.b32  	%r9894, %r9890, %r9893;
	and.b32  	%r9895, %r9561, 255;
	mul.wide.u32 	%rd12410, %r9895, 4;
	add.s64 	%rd12411, %rd11575, %rd12410;
	ld.shared.u8 	%r9896, [%rd12411];
	mul.wide.u32 	%rd12412, %r9896, 4;
	add.s64 	%rd12413, %rd11708, %rd12412;
	ld.shared.u32 	%r9897, [%rd12413];
	xor.b32  	%r9898, %r9894, %r9897;
	st.local.u32 	[%rd337+188], %r9898;
	shr.u32 	%r9900, %r9562, 24;
	mul.wide.u32 	%rd12414, %r9900, 4;
	add.s64 	%rd12415, %rd11575, %rd12414;
	ld.shared.u8 	%r9901, [%rd12415];
	mul.wide.u32 	%rd12416, %r9901, 4;
	add.s64 	%rd12417, %rd11693, %rd12416;
	bfe.u32 	%r9902, %r9562, 16, 8;
	mul.wide.u32 	%rd12418, %r9902, 4;
	add.s64 	%rd12419, %rd11575, %rd12418;
	ld.shared.u8 	%r9903, [%rd12419];
	mul.wide.u32 	%rd12420, %r9903, 4;
	add.s64 	%rd12421, %rd11698, %rd12420;
	ld.shared.u32 	%r9904, [%rd12421];
	ld.shared.u32 	%r9905, [%rd12417];
	xor.b32  	%r9906, %r9904, %r9905;
	bfe.u32 	%r9907, %r9562, 8, 8;
	mul.wide.u32 	%rd12422, %r9907, 4;
	add.s64 	%rd12423, %rd11575, %rd12422;
	ld.shared.u8 	%r9908, [%rd12423];
	mul.wide.u32 	%rd12424, %r9908, 4;
	add.s64 	%rd12425, %rd11703, %rd12424;
	ld.shared.u32 	%r9909, [%rd12425];
	xor.b32  	%r9910, %r9906, %r9909;
	and.b32  	%r9911, %r9562, 255;
	mul.wide.u32 	%rd12426, %r9911, 4;
	add.s64 	%rd12427, %rd11575, %rd12426;
	ld.shared.u8 	%r9912, [%rd12427];
	mul.wide.u32 	%rd12428, %r9912, 4;
	add.s64 	%rd12429, %rd11708, %rd12428;
	ld.shared.u32 	%r9913, [%rd12429];
	xor.b32  	%r9914, %r9910, %r9913;
	st.local.u32 	[%rd337+192], %r9914;
	ld.local.v2.u32 	{%r9915, %r9916}, [%rd337+196];
	shr.u32 	%r9918, %r9915, 24;
	mul.wide.u32 	%rd12430, %r9918, 4;
	add.s64 	%rd12431, %rd11575, %rd12430;
	ld.shared.u8 	%r9919, [%rd12431];
	mul.wide.u32 	%rd12432, %r9919, 4;
	add.s64 	%rd12433, %rd11693, %rd12432;
	bfe.u32 	%r9920, %r9915, 16, 8;
	mul.wide.u32 	%rd12434, %r9920, 4;
	add.s64 	%rd12435, %rd11575, %rd12434;
	ld.shared.u8 	%r9921, [%rd12435];
	mul.wide.u32 	%rd12436, %r9921, 4;
	add.s64 	%rd12437, %rd11698, %rd12436;
	ld.shared.u32 	%r9922, [%rd12437];
	ld.shared.u32 	%r9923, [%rd12433];
	xor.b32  	%r9924, %r9922, %r9923;
	bfe.u32 	%r9925, %r9915, 8, 8;
	mul.wide.u32 	%rd12438, %r9925, 4;
	add.s64 	%rd12439, %rd11575, %rd12438;
	ld.shared.u8 	%r9926, [%rd12439];
	mul.wide.u32 	%rd12440, %r9926, 4;
	add.s64 	%rd12441, %rd11703, %rd12440;
	ld.shared.u32 	%r9927, [%rd12441];
	xor.b32  	%r9928, %r9924, %r9927;
	and.b32  	%r9929, %r9915, 255;
	mul.wide.u32 	%rd12442, %r9929, 4;
	add.s64 	%rd12443, %rd11575, %rd12442;
	ld.shared.u8 	%r9930, [%rd12443];
	mul.wide.u32 	%rd12444, %r9930, 4;
	add.s64 	%rd12445, %rd11708, %rd12444;
	ld.shared.u32 	%r9931, [%rd12445];
	xor.b32  	%r9932, %r9928, %r9931;
	ld.local.v4.u32 	{%r9933, %r9934, %r9935, %r9936}, [%rd337+204];
	st.local.u32 	[%rd337+196], %r9932;
	shr.u32 	%r9938, %r9916, 24;
	mul.wide.u32 	%rd12446, %r9938, 4;
	add.s64 	%rd12447, %rd11575, %rd12446;
	ld.shared.u8 	%r9939, [%rd12447];
	mul.wide.u32 	%rd12448, %r9939, 4;
	add.s64 	%rd12449, %rd11693, %rd12448;
	bfe.u32 	%r9940, %r9916, 16, 8;
	mul.wide.u32 	%rd12450, %r9940, 4;
	add.s64 	%rd12451, %rd11575, %rd12450;
	ld.shared.u8 	%r9941, [%rd12451];
	mul.wide.u32 	%rd12452, %r9941, 4;
	add.s64 	%rd12453, %rd11698, %rd12452;
	ld.shared.u32 	%r9942, [%rd12453];
	ld.shared.u32 	%r9943, [%rd12449];
	xor.b32  	%r9944, %r9942, %r9943;
	bfe.u32 	%r9945, %r9916, 8, 8;
	mul.wide.u32 	%rd12454, %r9945, 4;
	add.s64 	%rd12455, %rd11575, %rd12454;
	ld.shared.u8 	%r9946, [%rd12455];
	mul.wide.u32 	%rd12456, %r9946, 4;
	add.s64 	%rd12457, %rd11703, %rd12456;
	ld.shared.u32 	%r9947, [%rd12457];
	xor.b32  	%r9948, %r9944, %r9947;
	and.b32  	%r9949, %r9916, 255;
	mul.wide.u32 	%rd12458, %r9949, 4;
	add.s64 	%rd12459, %rd11575, %rd12458;
	ld.shared.u8 	%r9950, [%rd12459];
	mul.wide.u32 	%rd12460, %r9950, 4;
	add.s64 	%rd12461, %rd11708, %rd12460;
	ld.shared.u32 	%r9951, [%rd12461];
	xor.b32  	%r9952, %r9948, %r9951;
	st.local.u32 	[%rd337+200], %r9952;
	shr.u32 	%r9954, %r9933, 24;
	mul.wide.u32 	%rd12462, %r9954, 4;
	add.s64 	%rd12463, %rd11575, %rd12462;
	ld.shared.u8 	%r9955, [%rd12463];
	mul.wide.u32 	%rd12464, %r9955, 4;
	add.s64 	%rd12465, %rd11693, %rd12464;
	bfe.u32 	%r9956, %r9933, 16, 8;
	mul.wide.u32 	%rd12466, %r9956, 4;
	add.s64 	%rd12467, %rd11575, %rd12466;
	ld.shared.u8 	%r9957, [%rd12467];
	mul.wide.u32 	%rd12468, %r9957, 4;
	add.s64 	%rd12469, %rd11698, %rd12468;
	ld.shared.u32 	%r9958, [%rd12469];
	ld.shared.u32 	%r9959, [%rd12465];
	xor.b32  	%r9960, %r9958, %r9959;
	bfe.u32 	%r9961, %r9933, 8, 8;
	mul.wide.u32 	%rd12470, %r9961, 4;
	add.s64 	%rd12471, %rd11575, %rd12470;
	ld.shared.u8 	%r9962, [%rd12471];
	mul.wide.u32 	%rd12472, %r9962, 4;
	add.s64 	%rd12473, %rd11703, %rd12472;
	ld.shared.u32 	%r9963, [%rd12473];
	xor.b32  	%r9964, %r9960, %r9963;
	and.b32  	%r9965, %r9933, 255;
	mul.wide.u32 	%rd12474, %r9965, 4;
	add.s64 	%rd12475, %rd11575, %rd12474;
	ld.shared.u8 	%r9966, [%rd12475];
	mul.wide.u32 	%rd12476, %r9966, 4;
	add.s64 	%rd12477, %rd11708, %rd12476;
	ld.shared.u32 	%r9967, [%rd12477];
	xor.b32  	%r9968, %r9964, %r9967;
	st.local.u32 	[%rd337+204], %r9968;
	shr.u32 	%r9970, %r9934, 24;
	mul.wide.u32 	%rd12478, %r9970, 4;
	add.s64 	%rd12479, %rd11575, %rd12478;
	ld.shared.u8 	%r9971, [%rd12479];
	mul.wide.u32 	%rd12480, %r9971, 4;
	add.s64 	%rd12481, %rd11693, %rd12480;
	bfe.u32 	%r9972, %r9934, 16, 8;
	mul.wide.u32 	%rd12482, %r9972, 4;
	add.s64 	%rd12483, %rd11575, %rd12482;
	ld.shared.u8 	%r9973, [%rd12483];
	mul.wide.u32 	%rd12484, %r9973, 4;
	add.s64 	%rd12485, %rd11698, %rd12484;
	ld.shared.u32 	%r9974, [%rd12485];
	ld.shared.u32 	%r9975, [%rd12481];
	xor.b32  	%r9976, %r9974, %r9975;
	bfe.u32 	%r9977, %r9934, 8, 8;
	mul.wide.u32 	%rd12486, %r9977, 4;
	add.s64 	%rd12487, %rd11575, %rd12486;
	ld.shared.u8 	%r9978, [%rd12487];
	mul.wide.u32 	%rd12488, %r9978, 4;
	add.s64 	%rd12489, %rd11703, %rd12488;
	ld.shared.u32 	%r9979, [%rd12489];
	xor.b32  	%r9980, %r9976, %r9979;
	and.b32  	%r9981, %r9934, 255;
	mul.wide.u32 	%rd12490, %r9981, 4;
	add.s64 	%rd12491, %rd11575, %rd12490;
	ld.shared.u8 	%r9982, [%rd12491];
	mul.wide.u32 	%rd12492, %r9982, 4;
	add.s64 	%rd12493, %rd11708, %rd12492;
	ld.shared.u32 	%r9983, [%rd12493];
	xor.b32  	%r9984, %r9980, %r9983;
	st.local.u32 	[%rd337+208], %r9984;
	shr.u32 	%r9986, %r9935, 24;
	mul.wide.u32 	%rd12494, %r9986, 4;
	add.s64 	%rd12495, %rd11575, %rd12494;
	ld.shared.u8 	%r9987, [%rd12495];
	mul.wide.u32 	%rd12496, %r9987, 4;
	add.s64 	%rd12497, %rd11693, %rd12496;
	bfe.u32 	%r9988, %r9935, 16, 8;
	mul.wide.u32 	%rd12498, %r9988, 4;
	add.s64 	%rd12499, %rd11575, %rd12498;
	ld.shared.u8 	%r9989, [%rd12499];
	mul.wide.u32 	%rd12500, %r9989, 4;
	add.s64 	%rd12501, %rd11698, %rd12500;
	ld.shared.u32 	%r9990, [%rd12501];
	ld.shared.u32 	%r9991, [%rd12497];
	xor.b32  	%r9992, %r9990, %r9991;
	bfe.u32 	%r9993, %r9935, 8, 8;
	mul.wide.u32 	%rd12502, %r9993, 4;
	add.s64 	%rd12503, %rd11575, %rd12502;
	ld.shared.u8 	%r9994, [%rd12503];
	mul.wide.u32 	%rd12504, %r9994, 4;
	add.s64 	%rd12505, %rd11703, %rd12504;
	ld.shared.u32 	%r9995, [%rd12505];
	xor.b32  	%r9996, %r9992, %r9995;
	and.b32  	%r9997, %r9935, 255;
	mul.wide.u32 	%rd12506, %r9997, 4;
	add.s64 	%rd12507, %rd11575, %rd12506;
	ld.shared.u8 	%r9998, [%rd12507];
	mul.wide.u32 	%rd12508, %r9998, 4;
	add.s64 	%rd12509, %rd11708, %rd12508;
	ld.shared.u32 	%r9999, [%rd12509];
	xor.b32  	%r10000, %r9996, %r9999;
	st.local.u32 	[%rd337+212], %r10000;
	shr.u32 	%r10002, %r9936, 24;
	mul.wide.u32 	%rd12510, %r10002, 4;
	add.s64 	%rd12511, %rd11575, %rd12510;
	ld.shared.u8 	%r10003, [%rd12511];
	mul.wide.u32 	%rd12512, %r10003, 4;
	add.s64 	%rd12513, %rd11693, %rd12512;
	bfe.u32 	%r10004, %r9936, 16, 8;
	mul.wide.u32 	%rd12514, %r10004, 4;
	add.s64 	%rd12515, %rd11575, %rd12514;
	ld.shared.u8 	%r10005, [%rd12515];
	mul.wide.u32 	%rd12516, %r10005, 4;
	add.s64 	%rd12517, %rd11698, %rd12516;
	ld.shared.u32 	%r10006, [%rd12517];
	ld.shared.u32 	%r10007, [%rd12513];
	xor.b32  	%r10008, %r10006, %r10007;
	bfe.u32 	%r10009, %r9936, 8, 8;
	mul.wide.u32 	%rd12518, %r10009, 4;
	add.s64 	%rd12519, %rd11575, %rd12518;
	ld.shared.u8 	%r10010, [%rd12519];
	mul.wide.u32 	%rd12520, %r10010, 4;
	add.s64 	%rd12521, %rd11703, %rd12520;
	ld.shared.u32 	%r10011, [%rd12521];
	xor.b32  	%r10012, %r10008, %r10011;
	and.b32  	%r10013, %r9936, 255;
	mul.wide.u32 	%rd12522, %r10013, 4;
	add.s64 	%rd12523, %rd11575, %rd12522;
	ld.shared.u8 	%r10014, [%rd12523];
	mul.wide.u32 	%rd12524, %r10014, 4;
	add.s64 	%rd12525, %rd11708, %rd12524;
	ld.shared.u32 	%r10015, [%rd12525];
	xor.b32  	%r10016, %r10012, %r10015;
	st.local.u32 	[%rd337+216], %r10016;
	cvt.u64.u32	%rd338, %r10576;
	mul.wide.u32 	%rd12526, %r10576, 48;
	add.s64 	%rd12527, %rd12859, %rd12526;
	ld.global.u32 	%r9117, [%rd12527];
	ld.global.u32 	%r9119, [%rd12527+4];
	ld.global.u32 	%r9121, [%rd12527+8];
	ld.global.u32 	%r9123, [%rd12527+12];
	// inline asm
	prmt.b32 %r9116, %r9117, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r9118, %r9119, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r9120, %r9121, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r9122, %r9123, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r9124, %r9116, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r9126, %r9118, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r9128, %r9120, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r9130, %r9122, 0, 0x0123;
	// inline asm
	ld.local.u32 	%r10017, [%rd13038];
	xor.b32  	%r10696, %r10017, %r9124;
	ld.local.u32 	%r10018, [%rd337];
	xor.b32  	%r10697, %r10018, %r9126;
	ld.local.v2.u32 	{%r10019, %r10020}, [%rd337+4];
	xor.b32  	%r10698, %r10019, %r9128;
	xor.b32  	%r10699, %r10020, %r9130;
	mov.u32 	%r10700, 4;
	bra.uni 	BB6_652;

BB6_685:
	shl.b64 	%rd12811, %rd339, 2;
	add.s64 	%rd12813, %rd11693, %rd12811;
	shl.b64 	%rd12814, %rd340, 2;
	add.s64 	%rd12816, %rd11698, %rd12814;
	ld.shared.u32 	%r10540, [%rd12816];
	ld.shared.u32 	%r10541, [%rd12813];
	xor.b32  	%r10542, %r10540, %r10541;
	shl.b64 	%rd12817, %rd341, 2;
	add.s64 	%rd12819, %rd11703, %rd12817;
	ld.shared.u32 	%r10543, [%rd12819];
	xor.b32  	%r10544, %r10542, %r10543;
	shl.b64 	%rd12820, %rd342, 2;
	add.s64 	%rd12822, %rd11708, %rd12820;
	ld.shared.u32 	%r10545, [%rd12822];
	xor.b32  	%r10546, %r10544, %r10545;
	mul.wide.s32 	%rd12823, %r10700, 4;
	add.s64 	%rd12824, %rd13038, %rd12823;
	ld.local.u32 	%r10547, [%rd12824];
	xor.b32  	%r10696, %r10546, %r10547;
	shl.b64 	%rd12825, %rd344, 2;
	add.s64 	%rd12826, %rd11698, %rd12825;
	ld.shared.u32 	%r10548, [%rd12826];
	shl.b64 	%rd12827, %rd343, 2;
	add.s64 	%rd12828, %rd11693, %rd12827;
	ld.shared.u32 	%r10549, [%rd12828];
	xor.b32  	%r10550, %r10548, %r10549;
	shl.b64 	%rd12829, %rd345, 2;
	add.s64 	%rd12830, %rd11703, %rd12829;
	ld.shared.u32 	%r10551, [%rd12830];
	xor.b32  	%r10552, %r10550, %r10551;
	shl.b64 	%rd12831, %rd346, 2;
	add.s64 	%rd12832, %rd11708, %rd12831;
	ld.shared.u32 	%r10553, [%rd12832];
	xor.b32  	%r10554, %r10552, %r10553;
	add.s32 	%r10555, %r10700, 1;
	mul.wide.s32 	%rd12833, %r10555, 4;
	add.s64 	%rd12834, %rd13038, %rd12833;
	ld.local.u32 	%r10556, [%rd12834];
	xor.b32  	%r10697, %r10554, %r10556;
	shl.b64 	%rd12835, %rd348, 2;
	add.s64 	%rd12836, %rd11698, %rd12835;
	ld.shared.u32 	%r10557, [%rd12836];
	shl.b64 	%rd12837, %rd347, 2;
	add.s64 	%rd12838, %rd11693, %rd12837;
	ld.shared.u32 	%r10558, [%rd12838];
	xor.b32  	%r10559, %r10557, %r10558;
	shl.b64 	%rd12839, %rd349, 2;
	add.s64 	%rd12840, %rd11703, %rd12839;
	ld.shared.u32 	%r10560, [%rd12840];
	xor.b32  	%r10561, %r10559, %r10560;
	shl.b64 	%rd12841, %rd350, 2;
	add.s64 	%rd12842, %rd11708, %rd12841;
	ld.shared.u32 	%r10562, [%rd12842];
	xor.b32  	%r10563, %r10561, %r10562;
	add.s32 	%r10564, %r10700, 2;
	mul.wide.s32 	%rd12843, %r10564, 4;
	add.s64 	%rd12844, %rd13038, %rd12843;
	ld.local.u32 	%r10565, [%rd12844];
	xor.b32  	%r10698, %r10563, %r10565;
	shl.b64 	%rd12845, %rd352, 2;
	add.s64 	%rd12846, %rd11698, %rd12845;
	ld.shared.u32 	%r10566, [%rd12846];
	shl.b64 	%rd12847, %rd351, 2;
	add.s64 	%rd12848, %rd11693, %rd12847;
	ld.shared.u32 	%r10567, [%rd12848];
	xor.b32  	%r10568, %r10566, %r10567;
	shl.b64 	%rd12849, %rd353, 2;
	add.s64 	%rd12850, %rd11703, %rd12849;
	ld.shared.u32 	%r10569, [%rd12850];
	xor.b32  	%r10570, %r10568, %r10569;
	shl.b64 	%rd12851, %rd354, 2;
	add.s64 	%rd12852, %rd11708, %rd12851;
	ld.shared.u32 	%r10571, [%rd12852];
	xor.b32  	%r10572, %r10570, %r10571;
	add.s32 	%r10573, %r10700, 3;
	mul.wide.s32 	%rd12853, %r10573, 4;
	add.s64 	%rd12854, %rd13038, %rd12853;
	ld.local.u32 	%r10574, [%rd12854];
	xor.b32  	%r10699, %r10572, %r10574;
	add.s32 	%r10700, %r10700, 4;

BB6_652:
	mov.b32	{%rs1, %rs2}, %r10696;
	shr.u16 	%rs3, %rs2, 8;
	cvt.u64.u16	%rd339, %rs3;
	mov.b32	{%rs4, %rs5}, %r10699;
	cvt.u64.u16	%rd12528, %rs5;
	and.b64  	%rd340, %rd12528, 255;
	mov.b32	{%rs6, %rs7}, %r10698;
	shr.u16 	%rs8, %rs6, 8;
	cvt.u64.u16	%rd341, %rs8;
	mov.b32	{%rs9, %rs10}, %r10697;
	cvt.u64.u16	%rd12529, %rs9;
	and.b64  	%rd342, %rd12529, 255;
	shr.u16 	%rs11, %rs10, 8;
	cvt.u64.u16	%rd343, %rs11;
	cvt.u64.u16	%rd12530, %rs2;
	and.b64  	%rd344, %rd12530, 255;
	shr.u16 	%rs12, %rs4, 8;
	cvt.u64.u16	%rd345, %rs12;
	cvt.u64.u16	%rd12531, %rs6;
	and.b64  	%rd346, %rd12531, 255;
	shr.u16 	%rs13, %rs7, 8;
	cvt.u64.u16	%rd347, %rs13;
	cvt.u64.u16	%rd12532, %rs10;
	and.b64  	%rd348, %rd12532, 255;
	shr.u16 	%rs14, %rs1, 8;
	cvt.u64.u16	%rd349, %rs14;
	cvt.u64.u16	%rd12533, %rs4;
	and.b64  	%rd350, %rd12533, 255;
	shr.u16 	%rs15, %rs5, 8;
	cvt.u64.u16	%rd351, %rs15;
	cvt.u64.u16	%rd12534, %rs7;
	and.b64  	%rd352, %rd12534, 255;
	shr.u16 	%rs16, %rs9, 8;
	cvt.u64.u16	%rd353, %rs16;
	cvt.u64.u16	%rd12535, %rs1;
	and.b64  	%rd354, %rd12535, 255;
	setp.lt.s32	%p389, %r10700, 56;
	@%p389 bra 	BB6_685;

	add.u64 	%rd12940, %SP, 128;
	cvta.to.local.u64 	%rd12939, %rd12940;
	add.s64 	%rd12938, %rd12939, 88;
	add.s64 	%rd12937, %rd12939, 96;
	add.s64 	%rd12936, %rd12939, 104;
	add.s64 	%rd12935, %rd12939, 112;
	add.u64 	%rd12934, %SP, 128;
	cvta.to.local.u64 	%rd12933, %rd12934;
	add.s64 	%rd12932, %rd12933, 120;
	add.s64 	%rd12931, %rd12933, 128;
	add.s64 	%rd12930, %rd12933, 136;
	add.s64 	%rd12929, %rd12933, 144;
	add.s64 	%rd12928, %rd12933, 152;
	add.s64 	%rd12927, %rd12933, 160;
	add.s64 	%rd12926, %rd12933, 168;
	add.u64 	%rd12908, %SP, 128;
	cvta.to.local.u64 	%rd12907, %rd12908;
	add.s64 	%rd12906, %rd12907, 64;
	add.s64 	%rd12905, %rd12907, 72;
	add.s64 	%rd12904, %rd12907, 176;
	add.u64 	%rd12900, %SP, 64;
	cvta.to.local.u64 	%rd12899, %rd12900;
	add.u64 	%rd12894, %SP, 32;
	cvta.to.local.u64 	%rd12891, %rd12894;
	add.u64 	%rd12890, %SP, 16;
	cvta.to.local.u64 	%rd12889, %rd12890;
	add.u64 	%rd12888, %SP, 0;
	cvta.to.local.u64 	%rd12887, %rd12888;
	add.u64 	%rd12886, %SP, 112;
	cvta.to.local.u64 	%rd12885, %rd12886;
	add.u64 	%rd12884, %SP, 96;
	cvta.to.local.u64 	%rd12883, %rd12884;
	add.u64 	%rd12882, %SP, 80;
	cvta.to.local.u64 	%rd12881, %rd12882;
	ld.param.u64 	%rd12880, [m09600_comp_param_17];
	ld.param.u32 	%r10577, [m09600_comp_param_27];
	add.u64 	%rd12878, %SP, 128;
	mov.u64 	%rd12877, 6620516959819538809;
	mov.u64 	%rd12876, 2270897969802886507;
	mov.u64 	%rd12875, -7276294671716946913;
	mov.u64 	%rd12874, 5840696475078001361;
	mov.u64 	%rd12873, -6534734903238641935;
	mov.u64 	%rd12872, 4354685564936845355;
	mov.u64 	%rd12871, -4942790177534073029;
	mov.u64 	%rd12870, 7640891576956012808;
	add.s64 	%rd12869, %rd12885, 4;
	add.s64 	%rd12868, %rd12883, 4;
	add.s64 	%rd12867, %rd12881, 4;
	add.s64 	%rd12866, %rd12899, 4;
	add.u64 	%rd12865, %SP, 48;
	cvta.to.local.u64 	%rd12864, %rd12865;
	add.s64 	%rd12863, %rd12864, 4;
	add.s64 	%rd12862, %rd12891, 4;
	add.s64 	%rd12861, %rd12889, 4;
	add.s64 	%rd12860, %rd12887, 4;
	shl.b64 	%rd12544, %rd339, 2;
	mov.u64 	%rd12545, m09600_comp$s_td4;
	add.s64 	%rd12546, %rd12545, %rd12544;
	ld.shared.u32 	%r10088, [%rd12546];
	and.b32  	%r10089, %r10088, -16777216;
	shl.b64 	%rd12547, %rd340, 2;
	add.s64 	%rd12548, %rd12545, %rd12547;
	ld.shared.u32 	%r10090, [%rd12548];
	and.b32  	%r10091, %r10090, 16711680;
	or.b32  	%r10092, %r10091, %r10089;
	shl.b64 	%rd12549, %rd341, 2;
	add.s64 	%rd12550, %rd12545, %rd12549;
	ld.shared.u32 	%r10093, [%rd12550];
	and.b32  	%r10094, %r10093, 65280;
	or.b32  	%r10095, %r10092, %r10094;
	shl.b64 	%rd12551, %rd342, 2;
	add.s64 	%rd12552, %rd12545, %rd12551;
	ld.shared.u8 	%r10096, [%rd12552];
	or.b32  	%r10097, %r10095, %r10096;
	ld.local.v4.u32 	{%r10098, %r10099, %r10100, %r10101}, [%rd337+220];
	xor.b32  	%r10024, %r10097, %r10098;
	shl.b64 	%rd12553, %rd343, 2;
	add.s64 	%rd12554, %rd12545, %rd12553;
	ld.shared.u32 	%r10103, [%rd12554];
	and.b32  	%r10104, %r10103, -16777216;
	shl.b64 	%rd12555, %rd344, 2;
	add.s64 	%rd12556, %rd12545, %rd12555;
	ld.shared.u32 	%r10105, [%rd12556];
	and.b32  	%r10106, %r10105, 16711680;
	or.b32  	%r10107, %r10106, %r10104;
	shl.b64 	%rd12557, %rd345, 2;
	add.s64 	%rd12558, %rd12545, %rd12557;
	ld.shared.u32 	%r10108, [%rd12558];
	and.b32  	%r10109, %r10108, 65280;
	or.b32  	%r10110, %r10107, %r10109;
	shl.b64 	%rd12559, %rd346, 2;
	add.s64 	%rd12560, %rd12545, %rd12559;
	ld.shared.u8 	%r10111, [%rd12560];
	or.b32  	%r10112, %r10110, %r10111;
	xor.b32  	%r10026, %r10112, %r10099;
	shl.b64 	%rd12561, %rd347, 2;
	add.s64 	%rd12562, %rd12545, %rd12561;
	ld.shared.u32 	%r10114, [%rd12562];
	and.b32  	%r10115, %r10114, -16777216;
	shl.b64 	%rd12563, %rd348, 2;
	add.s64 	%rd12564, %rd12545, %rd12563;
	ld.shared.u32 	%r10116, [%rd12564];
	and.b32  	%r10117, %r10116, 16711680;
	or.b32  	%r10118, %r10117, %r10115;
	shl.b64 	%rd12565, %rd349, 2;
	add.s64 	%rd12566, %rd12545, %rd12565;
	ld.shared.u32 	%r10119, [%rd12566];
	and.b32  	%r10120, %r10119, 65280;
	or.b32  	%r10121, %r10118, %r10120;
	shl.b64 	%rd12567, %rd350, 2;
	add.s64 	%rd12568, %rd12545, %rd12567;
	ld.shared.u8 	%r10122, [%rd12568];
	or.b32  	%r10123, %r10121, %r10122;
	xor.b32  	%r10028, %r10123, %r10100;
	shl.b64 	%rd12569, %rd351, 2;
	add.s64 	%rd12570, %rd12545, %rd12569;
	ld.shared.u32 	%r10125, [%rd12570];
	and.b32  	%r10126, %r10125, -16777216;
	shl.b64 	%rd12571, %rd352, 2;
	add.s64 	%rd12572, %rd12545, %rd12571;
	ld.shared.u32 	%r10127, [%rd12572];
	and.b32  	%r10128, %r10127, 16711680;
	or.b32  	%r10129, %r10128, %r10126;
	shl.b64 	%rd12573, %rd353, 2;
	add.s64 	%rd12574, %rd12545, %rd12573;
	ld.shared.u32 	%r10130, [%rd12574];
	and.b32  	%r10131, %r10130, 65280;
	or.b32  	%r10132, %r10129, %r10131;
	shl.b64 	%rd12575, %rd354, 2;
	add.s64 	%rd12576, %rd12545, %rd12575;
	ld.shared.u8 	%r10133, [%rd12576];
	or.b32  	%r10134, %r10132, %r10133;
	xor.b32  	%r10030, %r10134, %r10101;
	// inline asm
	prmt.b32 %r10023, %r10024, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r10025, %r10026, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r10027, %r10028, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r10029, %r10030, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r10031, %r10023, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r10033, %r10025, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r10035, %r10027, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r10037, %r10029, 0, 0x0123;
	// inline asm
	mul.wide.u32 	%rd12577, %r10577, 564;
	add.s64 	%rd12578, %rd12880, %rd12577;
	ld.global.u32 	%r10136, [%rd12578];
	xor.b32  	%r10137, %r10136, %r10031;
	ld.global.u32 	%r10138, [%rd12578+4];
	xor.b32  	%r10139, %r10138, %r10033;
	ld.global.u32 	%r10140, [%rd12578+8];
	ld.global.u32 	%r10141, [%rd12578+12];
	st.local.u32 	[%rd12887], %r10137;
	st.local.u32 	[%rd12860], %r10139;
	xor.b32  	%r10142, %r10141, %r10037;
	xor.b32  	%r10143, %r10140, %r10035;
	st.local.v2.u32 	[%rd12860+4], {%r10143, %r10142};
	mov.u32 	%r10707, 0;
	st.local.u32 	[%rd12889], %r10707;
	st.local.u32 	[%rd12861], %r10707;
	st.local.v2.u32 	[%rd12861+4], {%r10707, %r10707};
	st.local.u32 	[%rd12891], %r10707;
	st.local.u32 	[%rd12862], %r10707;
	st.local.v2.u32 	[%rd12862+4], {%r10707, %r10707};
	st.local.u32 	[%rd12864], %r10707;
	st.local.u32 	[%rd12863], %r10707;
	st.local.v2.u32 	[%rd12863+4], {%r10707, %r10707};
	st.local.u32 	[%rd12899], %r10707;
	st.local.u32 	[%rd12866], %r10707;
	st.local.v2.u32 	[%rd12866+4], {%r10707, %r10707};
	st.local.u32 	[%rd12881], %r10707;
	st.local.u32 	[%rd12867], %r10707;
	st.local.v2.u32 	[%rd12867+4], {%r10707, %r10707};
	st.local.u32 	[%rd12883], %r10707;
	st.local.u32 	[%rd12868], %r10707;
	st.local.v2.u32 	[%rd12868+4], {%r10707, %r10707};
	st.local.u32 	[%rd12885], %r10707;
	st.local.u32 	[%rd12869], %r10707;
	st.local.v2.u32 	[%rd12869+4], {%r10707, %r10707};
	st.local.u64 	[%rd12907], %rd12870;
	st.local.u64 	[%rd24], %rd12871;
	st.local.u64 	[%rd24+8], %rd12872;
	st.local.u64 	[%rd24+16], %rd12873;
	st.local.u64 	[%rd24+24], %rd12874;
	st.local.u64 	[%rd24+32], %rd12875;
	st.local.u64 	[%rd24+40], %rd12876;
	st.local.u64 	[%rd24+48], %rd12877;
	st.local.u32 	[%rd24+56], %r10707;
	st.local.u32 	[%rd24+64], %r10707;
	st.local.u32 	[%rd24+72], %r10707;
	st.local.u32 	[%rd24+80], %r10707;
	st.local.u32 	[%rd24+88], %r10707;
	st.local.u32 	[%rd24+96], %r10707;
	st.local.u32 	[%rd24+104], %r10707;
	st.local.u32 	[%rd24+112], %r10707;
	st.local.u32 	[%rd24+120], %r10707;
	st.local.u32 	[%rd24+128], %r10707;
	st.local.u32 	[%rd24+136], %r10707;
	st.local.u32 	[%rd24+144], %r10707;
	st.local.u32 	[%rd24+152], %r10707;
	st.local.u32 	[%rd24+160], %r10707;
	st.local.u32 	[%rd24+168], %r10707;
	st.local.u32 	[%rd24+176], %r10707;
	st.local.u32 	[%rd24+184], %r10707;
	st.local.u32 	[%rd12906+4], %r10707;
	st.local.u32 	[%rd12905+4], %r10707;
	st.local.u32 	[%rd27+4], %r10707;
	st.local.u32 	[%rd12938+4], %r10707;
	st.local.u32 	[%rd12937+4], %r10707;
	st.local.u32 	[%rd12936+4], %r10707;
	st.local.u32 	[%rd12935+4], %r10707;
	st.local.u32 	[%rd12932+4], %r10707;
	st.local.u32 	[%rd12931+4], %r10707;
	st.local.u32 	[%rd12930+4], %r10707;
	st.local.u32 	[%rd12929+4], %r10707;
	st.local.u32 	[%rd12928+4], %r10707;
	st.local.u32 	[%rd12927+4], %r10707;
	st.local.u32 	[%rd12926+4], %r10707;
	st.local.u32 	[%rd12904+4], %r10707;
	st.local.u32 	[%rd40+4], %r10707;
	mov.u32 	%r10145, 16;
	// Callseq Start 4
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd12878;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd12888;
	.param .b64 param2;
	st.param.b64	[param2+0], %rd12890;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd12894;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd12865;
	.param .b64 param5;
	st.param.b64	[param5+0], %rd12900;
	.param .b64 param6;
	st.param.b64	[param6+0], %rd12882;
	.param .b64 param7;
	st.param.b64	[param7+0], %rd12884;
	.param .b64 param8;
	st.param.b64	[param8+0], %rd12886;
	.param .b32 param9;
	st.param.b32	[param9+0], %r10145;
	call.uni 
	sha512_update_128, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7, 
	param8, 
	param9
	);
	
	//{
	}// Callseq End 4
	// Callseq Start 5
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd12878;
	call.uni 
	sha512_final, 
	(
	param0
	);
	
	//{
	}// Callseq End 5
	ld.local.u64 	%rd12592, [%rd12907];
	ld.local.u64 	%rd12593, [%rd24];
	shr.u64 	%rd12594, %rd333, 32;
	cvt.u32.u64	%r10040, %rd12594;
	shr.u64 	%rd12595, %rd334, 32;
	cvt.u32.u64	%r10044, %rd12595;
	shr.u64 	%rd12596, %rd335, 32;
	cvt.u32.u64	%r10048, %rd12596;
	shr.u64 	%rd12597, %rd336, 32;
	cvt.u32.u64	%r10052, %rd12597;
	// inline asm
	prmt.b32 %r10039, %r10040, 0, 0x0123;
	// inline asm
	cvt.u32.u64	%r10042, %rd333;
	// inline asm
	prmt.b32 %r10041, %r10042, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r10043, %r10044, 0, 0x0123;
	// inline asm
	cvt.u32.u64	%r10046, %rd334;
	// inline asm
	prmt.b32 %r10045, %r10046, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r10047, %r10048, 0, 0x0123;
	// inline asm
	cvt.u32.u64	%r10050, %rd335;
	// inline asm
	prmt.b32 %r10049, %r10050, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r10051, %r10052, 0, 0x0123;
	// inline asm
	cvt.u32.u64	%r10054, %rd336;
	// inline asm
	prmt.b32 %r10053, %r10054, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r10055, %r10039, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r10057, %r10041, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r10059, %r10043, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r10061, %r10045, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r10063, %r10047, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r10065, %r10049, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r10067, %r10051, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r10069, %r10053, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd13038], %r10055;
	st.local.u32 	[%rd337], %r10057;
	st.local.v2.u32 	[%rd337+4], {%r10059, %r10061};
	st.local.v4.u32 	[%rd337+12], {%r10063, %r10065, %r10067, %r10069};
	bfe.u32 	%r10146, %r10069, 16, 8;
	mul.wide.u32 	%rd12598, %r10146, 4;
	add.s64 	%rd12600, %rd11566, %rd12598;
	ld.shared.u32 	%r10147, [%rd12600];
	and.b32  	%r10148, %r10147, -16777216;
	xor.b32  	%r10149, %r10148, %r10055;
	bfe.u32 	%r10150, %r10069, 8, 8;
	mul.wide.u32 	%rd12601, %r10150, 4;
	add.s64 	%rd12603, %rd11569, %rd12601;
	ld.shared.u32 	%r10151, [%rd12603];
	and.b32  	%r10152, %r10151, 16711680;
	xor.b32  	%r10153, %r10149, %r10152;
	and.b32  	%r10154, %r10069, 255;
	mul.wide.u32 	%rd12604, %r10154, 4;
	add.s64 	%rd12606, %rd11572, %rd12604;
	ld.shared.u32 	%r10155, [%rd12606];
	and.b32  	%r10156, %r10155, 65280;
	xor.b32  	%r10157, %r10153, %r10156;
	shr.u32 	%r10158, %r10069, 24;
	mul.wide.u32 	%rd12607, %r10158, 4;
	add.s64 	%rd12609, %rd11575, %rd12607;
	ld.shared.u8 	%r10159, [%rd12609];
	xor.b32  	%r10160, %r10157, %r10159;
	xor.b32  	%r10161, %r10160, %r8873;
	xor.b32  	%r10162, %r10161, %r10057;
	xor.b32  	%r10163, %r10162, %r10059;
	xor.b32  	%r10164, %r10163, %r10061;
	st.local.v4.u32 	[%rd337+28], {%r10161, %r10162, %r10163, %r10164};
	shr.u32 	%r10165, %r10164, 24;
	mul.wide.u32 	%rd12610, %r10165, 4;
	add.s64 	%rd12611, %rd11566, %rd12610;
	ld.shared.u32 	%r10166, [%rd12611];
	and.b32  	%r10167, %r10166, -16777216;
	xor.b32  	%r10168, %r10167, %r10063;
	bfe.u32 	%r10169, %r10164, 16, 8;
	mul.wide.u32 	%rd12612, %r10169, 4;
	add.s64 	%rd12613, %rd11569, %rd12612;
	ld.shared.u32 	%r10170, [%rd12613];
	and.b32  	%r10171, %r10170, 16711680;
	xor.b32  	%r10172, %r10168, %r10171;
	bfe.u32 	%r10173, %r10164, 8, 8;
	mul.wide.u32 	%rd12614, %r10173, 4;
	add.s64 	%rd12615, %rd11572, %rd12614;
	ld.shared.u32 	%r10174, [%rd12615];
	and.b32  	%r10175, %r10174, 65280;
	xor.b32  	%r10176, %r10172, %r10175;
	and.b32  	%r10177, %r10164, 255;
	mul.wide.u32 	%rd12616, %r10177, 4;
	add.s64 	%rd12617, %rd11575, %rd12616;
	ld.shared.u8 	%r10178, [%rd12617];
	xor.b32  	%r10179, %r10176, %r10178;
	xor.b32  	%r10180, %r10179, %r10065;
	xor.b32  	%r10181, %r10180, %r10067;
	xor.b32  	%r10182, %r10181, %r10069;
	st.local.v4.u32 	[%rd337+44], {%r10179, %r10180, %r10181, %r10182};
	bfe.u32 	%r10183, %r10182, 16, 8;
	mul.wide.u32 	%rd12618, %r10183, 4;
	add.s64 	%rd12619, %rd11566, %rd12618;
	ld.shared.u32 	%r10184, [%rd12619];
	and.b32  	%r10185, %r10184, -16777216;
	xor.b32  	%r10186, %r10185, %r10161;
	bfe.u32 	%r10187, %r10182, 8, 8;
	mul.wide.u32 	%rd12620, %r10187, 4;
	add.s64 	%rd12621, %rd11569, %rd12620;
	ld.shared.u32 	%r10188, [%rd12621];
	and.b32  	%r10189, %r10188, 16711680;
	xor.b32  	%r10190, %r10186, %r10189;
	and.b32  	%r10191, %r10182, 255;
	mul.wide.u32 	%rd12622, %r10191, 4;
	add.s64 	%rd12623, %rd11572, %rd12622;
	ld.shared.u32 	%r10192, [%rd12623];
	and.b32  	%r10193, %r10192, 65280;
	xor.b32  	%r10194, %r10190, %r10193;
	shr.u32 	%r10195, %r10182, 24;
	mul.wide.u32 	%rd12624, %r10195, 4;
	add.s64 	%rd12625, %rd11575, %rd12624;
	ld.shared.u8 	%r10196, [%rd12625];
	xor.b32  	%r10197, %r10194, %r10196;
	xor.b32  	%r10198, %r10197, %r8874;
	xor.b32  	%r10199, %r10198, %r10162;
	xor.b32  	%r10200, %r10198, %r10059;
	xor.b32  	%r10201, %r10200, %r10164;
	st.local.v4.u32 	[%rd337+60], {%r10198, %r10199, %r10200, %r10201};
	shr.u32 	%r10202, %r10201, 24;
	mul.wide.u32 	%rd12626, %r10202, 4;
	add.s64 	%rd12627, %rd11566, %rd12626;
	ld.shared.u32 	%r10203, [%rd12627];
	and.b32  	%r10204, %r10203, -16777216;
	xor.b32  	%r10205, %r10204, %r10179;
	bfe.u32 	%r10206, %r10201, 16, 8;
	mul.wide.u32 	%rd12628, %r10206, 4;
	add.s64 	%rd12629, %rd11569, %rd12628;
	ld.shared.u32 	%r10207, [%rd12629];
	and.b32  	%r10208, %r10207, 16711680;
	xor.b32  	%r10209, %r10205, %r10208;
	bfe.u32 	%r10210, %r10201, 8, 8;
	mul.wide.u32 	%rd12630, %r10210, 4;
	add.s64 	%rd12631, %rd11572, %rd12630;
	ld.shared.u32 	%r10211, [%rd12631];
	and.b32  	%r10212, %r10211, 65280;
	xor.b32  	%r10213, %r10209, %r10212;
	and.b32  	%r10214, %r10201, 255;
	mul.wide.u32 	%rd12632, %r10214, 4;
	add.s64 	%rd12633, %rd11575, %rd12632;
	ld.shared.u8 	%r10215, [%rd12633];
	xor.b32  	%r10216, %r10213, %r10215;
	xor.b32  	%r10217, %r10216, %r10180;
	xor.b32  	%r10218, %r10216, %r10067;
	xor.b32  	%r10219, %r10218, %r10182;
	st.local.v4.u32 	[%rd337+76], {%r10216, %r10217, %r10218, %r10219};
	bfe.u32 	%r10220, %r10219, 16, 8;
	mul.wide.u32 	%rd12634, %r10220, 4;
	add.s64 	%rd12635, %rd11566, %rd12634;
	ld.shared.u32 	%r10221, [%rd12635];
	and.b32  	%r10222, %r10221, -16777216;
	xor.b32  	%r10223, %r10222, %r10198;
	bfe.u32 	%r10224, %r10219, 8, 8;
	mul.wide.u32 	%rd12636, %r10224, 4;
	add.s64 	%rd12637, %rd11569, %rd12636;
	ld.shared.u32 	%r10225, [%rd12637];
	and.b32  	%r10226, %r10225, 16711680;
	xor.b32  	%r10227, %r10223, %r10226;
	and.b32  	%r10228, %r10219, 255;
	mul.wide.u32 	%rd12638, %r10228, 4;
	add.s64 	%rd12639, %rd11572, %rd12638;
	ld.shared.u32 	%r10229, [%rd12639];
	and.b32  	%r10230, %r10229, 65280;
	xor.b32  	%r10231, %r10227, %r10230;
	shr.u32 	%r10232, %r10219, 24;
	mul.wide.u32 	%rd12640, %r10232, 4;
	add.s64 	%rd12641, %rd11575, %rd12640;
	ld.shared.u8 	%r10233, [%rd12641];
	xor.b32  	%r10234, %r10231, %r10233;
	xor.b32  	%r10235, %r10234, %r8949;
	xor.b32  	%r10236, %r10235, %r10199;
	xor.b32  	%r10237, %r10236, %r10164;
	xor.b32  	%r10238, %r10236, %r10200;
	st.local.v4.u32 	[%rd337+92], {%r10235, %r10236, %r10238, %r10237};
	shr.u32 	%r10239, %r10237, 24;
	mul.wide.u32 	%rd12642, %r10239, 4;
	add.s64 	%rd12643, %rd11566, %rd12642;
	ld.shared.u32 	%r10240, [%rd12643];
	and.b32  	%r10241, %r10240, -16777216;
	xor.b32  	%r10242, %r10241, %r10216;
	bfe.u32 	%r10243, %r10237, 16, 8;
	mul.wide.u32 	%rd12644, %r10243, 4;
	add.s64 	%rd12645, %rd11569, %rd12644;
	ld.shared.u32 	%r10244, [%rd12645];
	and.b32  	%r10245, %r10244, 16711680;
	xor.b32  	%r10246, %r10242, %r10245;
	bfe.u32 	%r10247, %r10237, 8, 8;
	mul.wide.u32 	%rd12646, %r10247, 4;
	add.s64 	%rd12647, %rd11572, %rd12646;
	ld.shared.u32 	%r10248, [%rd12647];
	and.b32  	%r10249, %r10248, 65280;
	xor.b32  	%r10250, %r10246, %r10249;
	and.b32  	%r10251, %r10237, 255;
	mul.wide.u32 	%rd12648, %r10251, 4;
	add.s64 	%rd12649, %rd11575, %rd12648;
	ld.shared.u8 	%r10252, [%rd12649];
	xor.b32  	%r10253, %r10250, %r10252;
	xor.b32  	%r10254, %r10253, %r10217;
	xor.b32  	%r10255, %r10254, %r10182;
	xor.b32  	%r10256, %r10254, %r10218;
	st.local.v4.u32 	[%rd337+108], {%r10253, %r10254, %r10256, %r10255};
	bfe.u32 	%r10257, %r10255, 16, 8;
	mul.wide.u32 	%rd12650, %r10257, 4;
	add.s64 	%rd12651, %rd11566, %rd12650;
	ld.shared.u32 	%r10258, [%rd12651];
	and.b32  	%r10259, %r10258, -16777216;
	xor.b32  	%r10260, %r10259, %r10235;
	bfe.u32 	%r10261, %r10255, 8, 8;
	mul.wide.u32 	%rd12652, %r10261, 4;
	add.s64 	%rd12653, %rd11569, %rd12652;
	ld.shared.u32 	%r10262, [%rd12653];
	and.b32  	%r10263, %r10262, 16711680;
	xor.b32  	%r10264, %r10260, %r10263;
	and.b32  	%r10265, %r10255, 255;
	mul.wide.u32 	%rd12654, %r10265, 4;
	add.s64 	%rd12655, %rd11572, %rd12654;
	ld.shared.u32 	%r10266, [%rd12655];
	and.b32  	%r10267, %r10266, 65280;
	xor.b32  	%r10268, %r10264, %r10267;
	shr.u32 	%r10269, %r10255, 24;
	mul.wide.u32 	%rd12656, %r10269, 4;
	add.s64 	%rd12657, %rd11575, %rd12656;
	ld.shared.u8 	%r10270, [%rd12657];
	xor.b32  	%r10271, %r10268, %r10270;
	xor.b32  	%r10272, %r10271, %r8950;
	xor.b32  	%r10273, %r10272, %r10236;
	xor.b32  	%r10274, %r10272, %r10200;
	xor.b32  	%r10275, %r10274, %r10237;
	st.local.v4.u32 	[%rd337+124], {%r10272, %r10273, %r10274, %r10275};
	shr.u32 	%r10276, %r10275, 24;
	mul.wide.u32 	%rd12658, %r10276, 4;
	add.s64 	%rd12659, %rd11566, %rd12658;
	ld.shared.u32 	%r10277, [%rd12659];
	and.b32  	%r10278, %r10277, -16777216;
	xor.b32  	%r10279, %r10278, %r10253;
	bfe.u32 	%r10280, %r10275, 16, 8;
	mul.wide.u32 	%rd12660, %r10280, 4;
	add.s64 	%rd12661, %rd11569, %rd12660;
	ld.shared.u32 	%r10281, [%rd12661];
	and.b32  	%r10282, %r10281, 16711680;
	xor.b32  	%r10283, %r10279, %r10282;
	bfe.u32 	%r10284, %r10275, 8, 8;
	mul.wide.u32 	%rd12662, %r10284, 4;
	add.s64 	%rd12663, %rd11572, %rd12662;
	ld.shared.u32 	%r10285, [%rd12663];
	and.b32  	%r10286, %r10285, 65280;
	xor.b32  	%r10287, %r10283, %r10286;
	and.b32  	%r10288, %r10275, 255;
	mul.wide.u32 	%rd12664, %r10288, 4;
	add.s64 	%rd12665, %rd11575, %rd12664;
	ld.shared.u8 	%r10289, [%rd12665];
	xor.b32  	%r10290, %r10287, %r10289;
	xor.b32  	%r10291, %r10290, %r10254;
	xor.b32  	%r10292, %r10290, %r10218;
	xor.b32  	%r10293, %r10292, %r10255;
	st.local.v4.u32 	[%rd337+140], {%r10290, %r10291, %r10292, %r10293};
	bfe.u32 	%r10294, %r10293, 16, 8;
	mul.wide.u32 	%rd12666, %r10294, 4;
	add.s64 	%rd12667, %rd11566, %rd12666;
	ld.shared.u32 	%r10295, [%rd12667];
	and.b32  	%r10296, %r10295, -16777216;
	xor.b32  	%r10297, %r10296, %r10272;
	bfe.u32 	%r10298, %r10293, 8, 8;
	mul.wide.u32 	%rd12668, %r10298, 4;
	add.s64 	%rd12669, %rd11569, %rd12668;
	ld.shared.u32 	%r10299, [%rd12669];
	and.b32  	%r10300, %r10299, 16711680;
	xor.b32  	%r10301, %r10297, %r10300;
	and.b32  	%r10302, %r10293, 255;
	mul.wide.u32 	%rd12670, %r10302, 4;
	add.s64 	%rd12671, %rd11572, %rd12670;
	ld.shared.u32 	%r10303, [%rd12671];
	and.b32  	%r10304, %r10303, 65280;
	xor.b32  	%r10305, %r10301, %r10304;
	shr.u32 	%r10306, %r10293, 24;
	mul.wide.u32 	%rd12672, %r10306, 4;
	add.s64 	%rd12673, %rd11575, %rd12672;
	ld.shared.u8 	%r10307, [%rd12673];
	xor.b32  	%r10308, %r10305, %r10307;
	xor.b32  	%r10309, %r10308, %r9025;
	xor.b32  	%r10310, %r10309, %r10273;
	xor.b32  	%r10311, %r10310, %r10237;
	xor.b32  	%r10312, %r10310, %r10274;
	st.local.v4.u32 	[%rd337+156], {%r10309, %r10310, %r10312, %r10311};
	shr.u32 	%r10313, %r10311, 24;
	mul.wide.u32 	%rd12674, %r10313, 4;
	add.s64 	%rd12675, %rd11566, %rd12674;
	ld.shared.u32 	%r10314, [%rd12675];
	and.b32  	%r10315, %r10314, -16777216;
	xor.b32  	%r10316, %r10315, %r10290;
	bfe.u32 	%r10317, %r10311, 16, 8;
	mul.wide.u32 	%rd12676, %r10317, 4;
	add.s64 	%rd12677, %rd11569, %rd12676;
	ld.shared.u32 	%r10318, [%rd12677];
	and.b32  	%r10319, %r10318, 16711680;
	xor.b32  	%r10320, %r10316, %r10319;
	bfe.u32 	%r10321, %r10311, 8, 8;
	mul.wide.u32 	%rd12678, %r10321, 4;
	add.s64 	%rd12679, %rd11572, %rd12678;
	ld.shared.u32 	%r10322, [%rd12679];
	and.b32  	%r10323, %r10322, 65280;
	xor.b32  	%r10324, %r10320, %r10323;
	and.b32  	%r10325, %r10311, 255;
	mul.wide.u32 	%rd12680, %r10325, 4;
	add.s64 	%rd12681, %rd11575, %rd12680;
	ld.shared.u8 	%r10326, [%rd12681];
	xor.b32  	%r10327, %r10324, %r10326;
	xor.b32  	%r10328, %r10327, %r10291;
	xor.b32  	%r10329, %r10328, %r10255;
	xor.b32  	%r10330, %r10328, %r10292;
	st.local.v4.u32 	[%rd337+172], {%r10327, %r10328, %r10330, %r10329};
	bfe.u32 	%r10331, %r10329, 16, 8;
	mul.wide.u32 	%rd12682, %r10331, 4;
	add.s64 	%rd12683, %rd11566, %rd12682;
	ld.shared.u32 	%r10332, [%rd12683];
	and.b32  	%r10333, %r10332, -16777216;
	xor.b32  	%r10334, %r10333, %r10309;
	bfe.u32 	%r10335, %r10329, 8, 8;
	mul.wide.u32 	%rd12684, %r10335, 4;
	add.s64 	%rd12685, %rd11569, %rd12684;
	ld.shared.u32 	%r10336, [%rd12685];
	and.b32  	%r10337, %r10336, 16711680;
	xor.b32  	%r10338, %r10334, %r10337;
	and.b32  	%r10339, %r10329, 255;
	mul.wide.u32 	%rd12686, %r10339, 4;
	add.s64 	%rd12687, %rd11572, %rd12686;
	ld.shared.u32 	%r10340, [%rd12687];
	and.b32  	%r10341, %r10340, 65280;
	xor.b32  	%r10342, %r10338, %r10341;
	shr.u32 	%r10343, %r10329, 24;
	mul.wide.u32 	%rd12688, %r10343, 4;
	add.s64 	%rd12689, %rd11575, %rd12688;
	ld.shared.u8 	%r10344, [%rd12689];
	xor.b32  	%r10345, %r10342, %r10344;
	xor.b32  	%r10346, %r10345, %r9026;
	xor.b32  	%r10347, %r10346, %r10310;
	xor.b32  	%r10348, %r10346, %r10274;
	xor.b32  	%r10349, %r10348, %r10311;
	st.local.v4.u32 	[%rd337+188], {%r10346, %r10347, %r10348, %r10349};
	shr.u32 	%r10350, %r10349, 24;
	mul.wide.u32 	%rd12690, %r10350, 4;
	add.s64 	%rd12691, %rd11566, %rd12690;
	ld.shared.u32 	%r10351, [%rd12691];
	and.b32  	%r10352, %r10351, -16777216;
	xor.b32  	%r10353, %r10352, %r10327;
	bfe.u32 	%r10354, %r10349, 16, 8;
	mul.wide.u32 	%rd12692, %r10354, 4;
	add.s64 	%rd12693, %rd11569, %rd12692;
	ld.shared.u32 	%r10355, [%rd12693];
	and.b32  	%r10356, %r10355, 16711680;
	xor.b32  	%r10357, %r10353, %r10356;
	bfe.u32 	%r10358, %r10349, 8, 8;
	mul.wide.u32 	%rd12694, %r10358, 4;
	add.s64 	%rd12695, %rd11572, %rd12694;
	ld.shared.u32 	%r10359, [%rd12695];
	and.b32  	%r10360, %r10359, 65280;
	xor.b32  	%r10361, %r10357, %r10360;
	and.b32  	%r10362, %r10349, 255;
	mul.wide.u32 	%rd12696, %r10362, 4;
	add.s64 	%rd12697, %rd11575, %rd12696;
	ld.shared.u8 	%r10363, [%rd12697];
	xor.b32  	%r10364, %r10361, %r10363;
	xor.b32  	%r10365, %r10364, %r10328;
	xor.b32  	%r10366, %r10364, %r10292;
	xor.b32  	%r10367, %r10366, %r10329;
	st.local.v4.u32 	[%rd337+204], {%r10364, %r10365, %r10366, %r10367};
	bfe.u32 	%r10368, %r10367, 16, 8;
	mul.wide.u32 	%rd12698, %r10368, 4;
	add.s64 	%rd12699, %rd11566, %rd12698;
	ld.shared.u32 	%r10369, [%rd12699];
	and.b32  	%r10370, %r10369, -16777216;
	xor.b32  	%r10371, %r10370, %r10346;
	bfe.u32 	%r10372, %r10367, 8, 8;
	mul.wide.u32 	%rd12700, %r10372, 4;
	add.s64 	%rd12701, %rd11569, %rd12700;
	ld.shared.u32 	%r10373, [%rd12701];
	and.b32  	%r10374, %r10373, 16711680;
	xor.b32  	%r10375, %r10371, %r10374;
	and.b32  	%r10376, %r10367, 255;
	mul.wide.u32 	%rd12702, %r10376, 4;
	add.s64 	%rd12703, %rd11572, %rd12702;
	ld.shared.u32 	%r10377, [%rd12703];
	and.b32  	%r10378, %r10377, 65280;
	xor.b32  	%r10379, %r10375, %r10378;
	shr.u32 	%r10380, %r10367, 24;
	mul.wide.u32 	%rd12704, %r10380, 4;
	add.s64 	%rd12705, %rd11575, %rd12704;
	ld.shared.u8 	%r10381, [%rd12705];
	xor.b32  	%r10382, %r10379, %r10381;
	xor.b32  	%r330, %r10382, %r313;
	xor.b32  	%r331, %r330, %r10347;
	xor.b32  	%r333, %r331, %r10311;
	xor.b32  	%r332, %r331, %r10348;
	st.local.v4.u32 	[%rd337+220], {%r330, %r331, %r332, %r333};
	shr.u64 	%rd12706, %rd12592, 32;
	cvt.u32.u64	%r10383, %rd12706;
	ld.global.u32 	%r10384, [%rd12578];
	xor.b32  	%r10072, %r10384, %r10383;
	cvt.u32.u64	%r10385, %rd12592;
	ld.global.u32 	%r10386, [%rd12578+4];
	xor.b32  	%r10074, %r10386, %r10385;
	shr.u64 	%rd12707, %rd12593, 32;
	cvt.u32.u64	%r10387, %rd12707;
	ld.global.u32 	%r10388, [%rd12578+8];
	xor.b32  	%r10076, %r10388, %r10387;
	cvt.u32.u64	%r10389, %rd12593;
	ld.global.u32 	%r10390, [%rd12578+12];
	xor.b32  	%r10078, %r10390, %r10389;
	// inline asm
	prmt.b32 %r10071, %r10072, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r10073, %r10074, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r10075, %r10076, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r10077, %r10078, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r10079, %r10071, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r10081, %r10073, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r10083, %r10075, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r10085, %r10077, 0, 0x0123;
	// inline asm
	xor.b32  	%r10701, %r10055, %r10079;
	xor.b32  	%r10702, %r10057, %r10081;
	xor.b32  	%r10703, %r10059, %r10083;
	xor.b32  	%r10704, %r10061, %r10085;
	mov.u32 	%r10705, 4;
	bra.uni 	BB6_654;

BB6_684:
	shl.b64 	%rd12775, %rd356, 2;
	add.s64 	%rd12777, %rd11572, %rd12775;
	shl.b64 	%rd12778, %rd357, 2;
	add.s64 	%rd12780, %rd11575, %rd12778;
	ld.shared.u32 	%r10504, [%rd12780];
	ld.shared.u32 	%r10505, [%rd12777];
	xor.b32  	%r10506, %r10504, %r10505;
	shl.b64 	%rd12781, %rd358, 2;
	add.s64 	%rd12783, %rd11566, %rd12781;
	ld.shared.u32 	%r10507, [%rd12783];
	xor.b32  	%r10508, %r10506, %r10507;
	shl.b64 	%rd12784, %rd359, 2;
	add.s64 	%rd12786, %rd11569, %rd12784;
	ld.shared.u32 	%r10509, [%rd12786];
	xor.b32  	%r10510, %r10508, %r10509;
	add.s64 	%rd374, %rd13038, 16;
	ld.local.v4.u32 	{%r10511, %r10512, %r10513, %r10514}, [%rd13038+16];
	xor.b32  	%r10701, %r10510, %r10511;
	shl.b64 	%rd12787, %rd361, 2;
	add.s64 	%rd12788, %rd11575, %rd12787;
	ld.shared.u32 	%r10516, [%rd12788];
	shl.b64 	%rd12789, %rd360, 2;
	add.s64 	%rd12790, %rd11572, %rd12789;
	ld.shared.u32 	%r10517, [%rd12790];
	xor.b32  	%r10518, %r10516, %r10517;
	shl.b64 	%rd12791, %rd362, 2;
	add.s64 	%rd12792, %rd11566, %rd12791;
	ld.shared.u32 	%r10519, [%rd12792];
	xor.b32  	%r10520, %r10518, %r10519;
	shl.b64 	%rd12793, %rd363, 2;
	add.s64 	%rd12794, %rd11569, %rd12793;
	ld.shared.u32 	%r10521, [%rd12794];
	xor.b32  	%r10522, %r10520, %r10521;
	xor.b32  	%r10702, %r10522, %r10512;
	shl.b64 	%rd12795, %rd365, 2;
	add.s64 	%rd12796, %rd11575, %rd12795;
	ld.shared.u32 	%r10524, [%rd12796];
	shl.b64 	%rd12797, %rd364, 2;
	add.s64 	%rd12798, %rd11572, %rd12797;
	ld.shared.u32 	%r10525, [%rd12798];
	xor.b32  	%r10526, %r10524, %r10525;
	shl.b64 	%rd12799, %rd366, 2;
	add.s64 	%rd12800, %rd11566, %rd12799;
	ld.shared.u32 	%r10527, [%rd12800];
	xor.b32  	%r10528, %r10526, %r10527;
	shl.b64 	%rd12801, %rd367, 2;
	add.s64 	%rd12802, %rd11569, %rd12801;
	ld.shared.u32 	%r10529, [%rd12802];
	xor.b32  	%r10530, %r10528, %r10529;
	xor.b32  	%r10703, %r10530, %r10513;
	shl.b64 	%rd12803, %rd369, 2;
	add.s64 	%rd12804, %rd11575, %rd12803;
	ld.shared.u32 	%r10532, [%rd12804];
	shl.b64 	%rd12805, %rd368, 2;
	add.s64 	%rd12806, %rd11572, %rd12805;
	ld.shared.u32 	%r10533, [%rd12806];
	xor.b32  	%r10534, %r10532, %r10533;
	shl.b64 	%rd12807, %rd370, 2;
	add.s64 	%rd12808, %rd11566, %rd12807;
	ld.shared.u32 	%r10535, [%rd12808];
	xor.b32  	%r10536, %r10534, %r10535;
	shl.b64 	%rd12809, %rd371, 2;
	add.s64 	%rd12810, %rd11569, %rd12809;
	ld.shared.u32 	%r10537, [%rd12810];
	xor.b32  	%r10538, %r10536, %r10537;
	xor.b32  	%r10704, %r10538, %r10514;
	add.s32 	%r10705, %r10705, 4;
	mov.u64 	%rd13038, %rd374;

BB6_654:
	mov.b32	{%rs17, %rs18}, %r10701;
	shr.u16 	%rs19, %rs18, 8;
	cvt.u64.u16	%rd356, %rs19;
	mov.b32	{%rs20, %rs21}, %r10702;
	cvt.u64.u16	%rd12708, %rs21;
	and.b64  	%rd357, %rd12708, 255;
	mov.b32	{%rs22, %rs23}, %r10703;
	shr.u16 	%rs24, %rs22, 8;
	cvt.u64.u16	%rd358, %rs24;
	mov.b32	{%rs25, %rs26}, %r10704;
	cvt.u64.u16	%rd12709, %rs25;
	and.b64  	%rd359, %rd12709, 255;
	shr.u16 	%rs27, %rs21, 8;
	cvt.u64.u16	%rd360, %rs27;
	cvt.u64.u16	%rd12710, %rs23;
	and.b64  	%rd361, %rd12710, 255;
	shr.u16 	%rs28, %rs25, 8;
	cvt.u64.u16	%rd362, %rs28;
	cvt.u64.u16	%rd12711, %rs17;
	and.b64  	%rd363, %rd12711, 255;
	shr.u16 	%rs29, %rs23, 8;
	cvt.u64.u16	%rd364, %rs29;
	cvt.u64.u16	%rd12712, %rs26;
	and.b64  	%rd365, %rd12712, 255;
	shr.u16 	%rs30, %rs17, 8;
	cvt.u64.u16	%rd366, %rs30;
	cvt.u64.u16	%rd12713, %rs20;
	and.b64  	%rd367, %rd12713, 255;
	shr.u16 	%rs31, %rs26, 8;
	cvt.u64.u16	%rd368, %rs31;
	cvt.u64.u16	%rd12714, %rs18;
	and.b64  	%rd369, %rd12714, 255;
	shr.u16 	%rs32, %rs20, 8;
	cvt.u64.u16	%rd370, %rs32;
	cvt.u64.u16	%rd12715, %rs22;
	and.b64  	%rd371, %rd12715, 255;
	setp.lt.s32	%p390, %r10705, 56;
	@%p390 bra 	BB6_684;

	ld.param.u32 	%r10592, [m09600_comp_param_24];
	ld.param.u64 	%rd12909, [m09600_comp_param_6];
	ld.param.u32 	%r10578, [m09600_comp_param_25];
	shl.b64 	%rd12716, %rd356, 2;
	mov.u64 	%rd12717, m09600_comp$s_te4;
	add.s64 	%rd12718, %rd12717, %rd12716;
	ld.shared.u32 	%r10407, [%rd12718];
	and.b32  	%r10408, %r10407, -16777216;
	shl.b64 	%rd12719, %rd357, 2;
	add.s64 	%rd12720, %rd12717, %rd12719;
	ld.shared.u32 	%r10409, [%rd12720];
	and.b32  	%r10410, %r10409, 16711680;
	or.b32  	%r10411, %r10410, %r10408;
	shl.b64 	%rd12721, %rd358, 2;
	add.s64 	%rd12722, %rd12717, %rd12721;
	ld.shared.u32 	%r10412, [%rd12722];
	and.b32  	%r10413, %r10412, 65280;
	or.b32  	%r10414, %r10411, %r10413;
	shl.b64 	%rd12723, %rd359, 2;
	add.s64 	%rd12724, %rd12717, %rd12723;
	ld.shared.u8 	%r10415, [%rd12724];
	or.b32  	%r10416, %r10414, %r10415;
	xor.b32  	%r10392, %r10416, %r330;
	shl.b64 	%rd12725, %rd360, 2;
	add.s64 	%rd12726, %rd12717, %rd12725;
	ld.shared.u32 	%r10417, [%rd12726];
	and.b32  	%r10418, %r10417, -16777216;
	shl.b64 	%rd12727, %rd361, 2;
	add.s64 	%rd12728, %rd12717, %rd12727;
	ld.shared.u32 	%r10419, [%rd12728];
	and.b32  	%r10420, %r10419, 16711680;
	or.b32  	%r10421, %r10420, %r10418;
	shl.b64 	%rd12729, %rd362, 2;
	add.s64 	%rd12730, %rd12717, %rd12729;
	ld.shared.u32 	%r10422, [%rd12730];
	and.b32  	%r10423, %r10422, 65280;
	or.b32  	%r10424, %r10421, %r10423;
	shl.b64 	%rd12731, %rd363, 2;
	add.s64 	%rd12732, %rd12717, %rd12731;
	ld.shared.u8 	%r10425, [%rd12732];
	or.b32  	%r10426, %r10424, %r10425;
	xor.b32  	%r10394, %r10426, %r331;
	shl.b64 	%rd12733, %rd364, 2;
	add.s64 	%rd12734, %rd12717, %rd12733;
	ld.shared.u32 	%r10427, [%rd12734];
	and.b32  	%r10428, %r10427, -16777216;
	shl.b64 	%rd12735, %rd365, 2;
	add.s64 	%rd12736, %rd12717, %rd12735;
	ld.shared.u32 	%r10429, [%rd12736];
	and.b32  	%r10430, %r10429, 16711680;
	or.b32  	%r10431, %r10430, %r10428;
	shl.b64 	%rd12737, %rd366, 2;
	add.s64 	%rd12738, %rd12717, %rd12737;
	ld.shared.u32 	%r10432, [%rd12738];
	and.b32  	%r10433, %r10432, 65280;
	or.b32  	%r10434, %r10431, %r10433;
	shl.b64 	%rd12739, %rd367, 2;
	add.s64 	%rd12740, %rd12717, %rd12739;
	ld.shared.u8 	%r10435, [%rd12740];
	or.b32  	%r10436, %r10434, %r10435;
	xor.b32  	%r10396, %r10436, %r332;
	shl.b64 	%rd12741, %rd368, 2;
	add.s64 	%rd12742, %rd12717, %rd12741;
	ld.shared.u32 	%r10437, [%rd12742];
	and.b32  	%r10438, %r10437, -16777216;
	shl.b64 	%rd12743, %rd369, 2;
	add.s64 	%rd12744, %rd12717, %rd12743;
	ld.shared.u32 	%r10439, [%rd12744];
	and.b32  	%r10440, %r10439, 16711680;
	or.b32  	%r10441, %r10440, %r10438;
	shl.b64 	%rd12745, %rd370, 2;
	add.s64 	%rd12746, %rd12717, %rd12745;
	ld.shared.u32 	%r10442, [%rd12746];
	and.b32  	%r10443, %r10442, 65280;
	or.b32  	%r10444, %r10441, %r10443;
	shl.b64 	%rd12747, %rd371, 2;
	add.s64 	%rd12748, %rd12717, %rd12747;
	ld.shared.u8 	%r10445, [%rd12748];
	or.b32  	%r10446, %r10444, %r10445;
	xor.b32  	%r10398, %r10446, %r333;
	// inline asm
	prmt.b32 %r10391, %r10392, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r10393, %r10394, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r10395, %r10396, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r10397, %r10398, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r10399, %r10391, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r10401, %r10393, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r10403, %r10395, 0, 0x0123;
	// inline asm
	// inline asm
	prmt.b32 %r10405, %r10397, 0, 0x0123;
	// inline asm
	and.b32  	%r347, %r10578, 31;
	shr.u32 	%r10447, %r10399, %r347;
	and.b32  	%r10448, %r10447, %r10592;
	mul.wide.u32 	%rd12749, %r10448, 4;
	add.s64 	%rd12750, %rd12909, %rd12749;
	and.b32  	%r10449, %r10399, 31;
	mov.u32 	%r10450, 1;
	shl.b32 	%r348, %r10450, %r10449;
	ld.global.u32 	%r10451, [%rd12750];
	and.b32  	%r10452, %r10451, %r348;
	setp.eq.s32	%p391, %r10452, 0;
	@%p391 bra 	BB6_683;

	ld.param.u32 	%r10593, [m09600_comp_param_24];
	ld.param.u64 	%rd12910, [m09600_comp_param_7];
	shr.u32 	%r10453, %r10401, %r347;
	and.b32  	%r10454, %r10453, %r10593;
	mul.wide.u32 	%rd12751, %r10454, 4;
	add.s64 	%rd12752, %rd12910, %rd12751;
	and.b32  	%r10455, %r10401, 31;
	shl.b32 	%r349, %r10450, %r10455;
	ld.global.u32 	%r10457, [%rd12752];
	and.b32  	%r10458, %r10457, %r349;
	setp.eq.s32	%p392, %r10458, 0;
	@%p392 bra 	BB6_683;

	ld.param.u32 	%r10594, [m09600_comp_param_24];
	ld.param.u64 	%rd12911, [m09600_comp_param_8];
	shr.u32 	%r10459, %r10403, %r347;
	and.b32  	%r10460, %r10459, %r10594;
	mul.wide.u32 	%rd12753, %r10460, 4;
	add.s64 	%rd12754, %rd12911, %rd12753;
	and.b32  	%r10461, %r10403, 31;
	shl.b32 	%r350, %r10450, %r10461;
	ld.global.u32 	%r10463, [%rd12754];
	and.b32  	%r10464, %r10463, %r350;
	setp.eq.s32	%p393, %r10464, 0;
	@%p393 bra 	BB6_683;

	ld.param.u32 	%r10595, [m09600_comp_param_24];
	ld.param.u64 	%rd12912, [m09600_comp_param_9];
	shr.u32 	%r10465, %r10405, %r347;
	and.b32  	%r10466, %r10465, %r10595;
	mul.wide.u32 	%rd12755, %r10466, 4;
	add.s64 	%rd12756, %rd12912, %rd12755;
	and.b32  	%r10467, %r10405, 31;
	shl.b32 	%r351, %r10450, %r10467;
	ld.global.u32 	%r10469, [%rd12756];
	and.b32  	%r10470, %r10469, %r351;
	setp.eq.s32	%p394, %r10470, 0;
	@%p394 bra 	BB6_683;

	ld.param.u32 	%r10596, [m09600_comp_param_24];
	ld.param.u64 	%rd12913, [m09600_comp_param_10];
	ld.param.u32 	%r10579, [m09600_comp_param_26];
	and.b32  	%r352, %r10579, 31;
	shr.u32 	%r10471, %r10399, %r352;
	and.b32  	%r10472, %r10471, %r10596;
	mul.wide.u32 	%rd12757, %r10472, 4;
	add.s64 	%rd12758, %rd12913, %rd12757;
	ld.global.u32 	%r10473, [%rd12758];
	and.b32  	%r10474, %r10473, %r348;
	setp.eq.s32	%p395, %r10474, 0;
	@%p395 bra 	BB6_683;

	ld.param.u32 	%r10597, [m09600_comp_param_24];
	ld.param.u64 	%rd12914, [m09600_comp_param_11];
	shr.u32 	%r10475, %r10401, %r352;
	and.b32  	%r10476, %r10475, %r10597;
	mul.wide.u32 	%rd12759, %r10476, 4;
	add.s64 	%rd12760, %rd12914, %rd12759;
	ld.global.u32 	%r10477, [%rd12760];
	and.b32  	%r10478, %r10477, %r349;
	setp.eq.s32	%p396, %r10478, 0;
	@%p396 bra 	BB6_683;

	ld.param.u32 	%r10598, [m09600_comp_param_24];
	ld.param.u64 	%rd12915, [m09600_comp_param_12];
	shr.u32 	%r10479, %r10403, %r352;
	and.b32  	%r10480, %r10479, %r10598;
	mul.wide.u32 	%rd12761, %r10480, 4;
	add.s64 	%rd12762, %rd12915, %rd12761;
	ld.global.u32 	%r10481, [%rd12762];
	and.b32  	%r10482, %r10481, %r350;
	setp.eq.s32	%p397, %r10482, 0;
	@%p397 bra 	BB6_683;

	ld.param.u32 	%r10599, [m09600_comp_param_24];
	ld.param.u64 	%rd12916, [m09600_comp_param_13];
	shr.u32 	%r10483, %r10405, %r352;
	and.b32  	%r10484, %r10483, %r10599;
	mul.wide.u32 	%rd12763, %r10484, 4;
	add.s64 	%rd12764, %rd12916, %rd12763;
	ld.global.u32 	%r10485, [%rd12764];
	and.b32  	%r10486, %r10485, %r351;
	setp.eq.s32	%p398, %r10486, 0;
	@%p398 bra 	BB6_683;

	ld.param.u32 	%r10583, [m09600_comp_param_31];
	setp.eq.s32	%p399, %r10583, 0;
	mov.u32 	%r10487, -1;
	@%p399 bra 	BB6_677;

	ld.param.u32 	%r10706, [m09600_comp_param_31];

BB6_665:
	ld.param.u64 	%rd12917, [m09600_comp_param_15];
	shr.u32 	%r355, %r10706, 1;
	add.s32 	%r10709, %r355, %r10707;
	cvt.u64.u32	%rd12765, %r10709;
	add.s64 	%rd372, %rd12765, %rd338;
	shl.b64 	%rd12766, %rd372, 4;
	add.s64 	%rd373, %rd12917, %rd12766;
	ld.global.u32 	%r357, [%rd373+12];
	setp.gt.u32	%p400, %r10405, %r357;
	mov.u32 	%r10708, %r10450;
	@%p400 bra 	BB6_675;

	setp.lt.u32	%p401, %r10405, %r357;
	mov.u32 	%r10490, -1;
	@%p401 bra 	BB6_667;
	bra.uni 	BB6_668;

BB6_667:
	mov.u32 	%r10708, %r10490;
	bra.uni 	BB6_675;

BB6_668:
	ld.global.u32 	%r358, [%rd373+8];
	setp.gt.u32	%p402, %r10403, %r358;
	mov.u32 	%r10708, %r10450;
	@%p402 bra 	BB6_675;

	setp.lt.u32	%p403, %r10403, %r358;
	@%p403 bra 	BB6_670;
	bra.uni 	BB6_671;

BB6_670:
	mov.u32 	%r10708, %r10490;
	bra.uni 	BB6_675;

BB6_671:
	ld.global.u32 	%r359, [%rd373+4];
	setp.gt.u32	%p404, %r10401, %r359;
	mov.u32 	%r10708, %r10450;
	@%p404 bra 	BB6_675;

	setp.lt.u32	%p405, %r10401, %r359;
	mov.u32 	%r10708, %r10490;
	@%p405 bra 	BB6_675;

	ld.global.u32 	%r360, [%rd373];
	setp.gt.u32	%p406, %r10399, %r360;
	mov.u32 	%r10708, %r10450;
	@%p406 bra 	BB6_675;

	setp.lt.u32	%p407, %r10399, %r360;
	selp.b32	%r10708, -1, 0, %p407;

BB6_675:
	add.s32 	%r10496, %r355, 1;
	setp.gt.s32	%p408, %r10708, 0;
	selp.b32	%r10497, %r10496, 0, %p408;
	add.s32 	%r10707, %r10497, %r10707;
	selp.b32	%r10498, -1, 0, %p408;
	add.s32 	%r10499, %r10498, %r10706;
	shr.u32 	%r10706, %r10499, 1;
	setp.eq.s32	%p409, %r10708, 0;
	@%p409 bra 	BB6_678;

	setp.ne.s32	%p410, %r10706, 0;
	@%p410 bra 	BB6_665;

BB6_677:
	mov.u32 	%r10709, %r10487;

BB6_678:
	setp.eq.s32	%p411, %r10709, -1;
	@%p411 bra 	BB6_683;

	ld.param.u64 	%rd12918, [m09600_comp_param_16];
	ld.param.u32 	%r10580, [m09600_comp_param_32];
	add.s32 	%r366, %r10709, %r10580;
	mul.wide.u32 	%rd12771, %r366, 4;
	add.s64 	%rd12772, %rd12918, %rd12771;
	atom.global.add.u32 	%r10501, [%rd12772], 1;
	setp.ne.s32	%p412, %r10501, 0;
	@%p412 bra 	BB6_683;

	ld.param.u64 	%rd12919, [m09600_comp_param_19];
	ld.param.u32 	%r10585, [m09600_comp_param_31];
	atom.global.add.u32 	%r367, [%rd12919], 1;
	setp.lt.u32	%p413, %r367, %r10585;
	@%p413 bra 	BB6_682;
	bra.uni 	BB6_681;

BB6_682:
	mov.b32	%r10591, %envreg3;
	mov.u32 	%r10590, %ntid.x;
	mov.u32 	%r10589, %ctaid.x;
	mov.u32 	%r10588, %tid.x;
	mad.lo.s32 	%r10587, %r10589, %r10590, %r10591;
	add.s32 	%r10586, %r10587, %r10588;
	ld.param.u64 	%rd12921, [m09600_comp_param_14];
	ld.param.u32 	%r10581, [m09600_comp_param_27];
	mul.wide.u32 	%rd12773, %r367, 20;
	add.s64 	%rd12774, %rd12921, %rd12773;
	st.global.u32 	[%rd12774], %r10581;
	st.global.u32 	[%rd12774+4], %r10709;
	st.global.u32 	[%rd12774+8], %r366;
	st.global.u32 	[%rd12774+12], %r10586;
	mov.u32 	%r10503, 0;
	st.global.u32 	[%rd12774+16], %r10503;
	bra.uni 	BB6_683;

BB6_681:
	ld.param.u64 	%rd12920, [m09600_comp_param_19];
	atom.global.add.u32 	%r10502, [%rd12920], -1;

BB6_683:
	ret;
}


  