//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: UNKNOWN
// Driver 
// Based on LLVM 3.4svn
//

.version 6.2
.target sm_61, texmode_independent
.address_size 64

	// .globl	gpu_memset
.const .align 4 .b8 c_append_helper[4096] = {255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255};
.const .align 8 .b8 k_sha512[640] = {34, 174, 40, 215, 152, 47, 138, 66, 205, 101, 239, 35, 145, 68, 55, 113, 47, 59, 77, 236, 207, 251, 192, 181, 188, 219, 137, 129, 165, 219, 181, 233, 56, 181, 72, 243, 91, 194, 86, 57, 25, 208, 5, 182, 241, 17, 241, 89, 155, 79, 25, 175, 164, 130, 63, 146, 24, 129, 109, 218, 213, 94, 28, 171, 66, 2, 3, 163, 152, 170, 7, 216, 190, 111, 112, 69, 1, 91, 131, 18, 140, 178, 228, 78, 190, 133, 49, 36, 226, 180, 255, 213, 195, 125, 12, 85, 111, 137, 123, 242, 116, 93, 190, 114, 177, 150, 22, 59, 254, 177, 222, 128, 53, 18, 199, 37, 167, 6, 220, 155, 148, 38, 105, 207, 116, 241, 155, 193, 210, 74, 241, 158, 193, 105, 155, 228, 227, 37, 79, 56, 134, 71, 190, 239, 181, 213, 140, 139, 198, 157, 193, 15, 101, 156, 172, 119, 204, 161, 12, 36, 117, 2, 43, 89, 111, 44, 233, 45, 131, 228, 166, 110, 170, 132, 116, 74, 212, 251, 65, 189, 220, 169, 176, 92, 181, 83, 17, 131, 218, 136, 249, 118, 171, 223, 102, 238, 82, 81, 62, 152, 16, 50, 180, 45, 109, 198, 49, 168, 63, 33, 251, 152, 200, 39, 3, 176, 228, 14, 239, 190, 199, 127, 89, 191, 194, 143, 168, 61, 243, 11, 224, 198, 37, 167, 10, 147, 71, 145, 167, 213, 111, 130, 3, 224, 81, 99, 202, 6, 112, 110, 14, 10, 103, 41, 41, 20, 252, 47, 210, 70, 133, 10, 183, 39, 38, 201, 38, 92, 56, 33, 27, 46, 237, 42, 196, 90, 252, 109, 44, 77, 223, 179, 149, 157, 19, 13, 56, 83, 222, 99, 175, 139, 84, 115, 10, 101, 168, 178, 119, 60, 187, 10, 106, 118, 230, 174, 237, 71, 46, 201, 194, 129, 59, 53, 130, 20, 133, 44, 114, 146, 100, 3, 241, 76, 161, 232, 191, 162, 1, 48, 66, 188, 75, 102, 26, 168, 145, 151, 248, 208, 112, 139, 75, 194, 48, 190, 84, 6, 163, 81, 108, 199, 24, 82, 239, 214, 25, 232, 146, 209, 16, 169, 101, 85, 36, 6, 153, 214, 42, 32, 113, 87, 133, 53, 14, 244, 184, 209, 187, 50, 112, 160, 106, 16, 200, 208, 210, 184, 22, 193, 164, 25, 83, 171, 65, 81, 8, 108, 55, 30, 153, 235, 142, 223, 76, 119, 72, 39, 168, 72, 155, 225, 181, 188, 176, 52, 99, 90, 201, 197, 179, 12, 28, 57, 203, 138, 65, 227, 74, 170, 216, 78, 115, 227, 99, 119, 79, 202, 156, 91, 163, 184, 178, 214, 243, 111, 46, 104, 252, 178, 239, 93, 238, 130, 143, 116, 96, 47, 23, 67, 111, 99, 165, 120, 114, 171, 240, 161, 20, 120, 200, 132, 236, 57, 100, 26, 8, 2, 199, 140, 40, 30, 99, 35, 250, 255, 190, 144, 233, 189, 130, 222, 235, 108, 80, 164, 21, 121, 198, 178, 247, 163, 249, 190, 43, 83, 114, 227, 242, 120, 113, 198, 156, 97, 38, 234, 206, 62, 39, 202, 7, 194, 192, 33, 199, 184, 134, 209, 30, 235, 224, 205, 214, 125, 218, 234, 120, 209, 110, 238, 127, 79, 125, 245, 186, 111, 23, 114, 170, 103, 240, 6, 166, 152, 200, 162, 197, 125, 99, 10, 174, 13, 249, 190, 4, 152, 63, 17, 27, 71, 28, 19, 53, 11, 113, 27, 132, 125, 4, 35, 245, 119, 219, 40, 147, 36, 199, 64, 123, 171, 202, 50, 188, 190, 201, 21, 10, 190, 158, 60, 76, 13, 16, 156, 196, 103, 29, 67, 182, 66, 62, 203, 190, 212, 197, 76, 42, 126, 101, 252, 156, 41, 127, 89, 236, 250, 214, 58, 171, 111, 203, 95, 23, 88, 71, 74, 140, 25, 68, 108};

.entry gpu_memset(
	.param .u64 .ptr .global .align 16 gpu_memset_param_0,
	.param .u32 gpu_memset_param_1,
	.param .u64 gpu_memset_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<8>;
	.reg .b64 	%rd<6>;


	ld.param.u64 	%rd1, [gpu_memset_param_0];
	ld.param.u32 	%r2, [gpu_memset_param_1];
	ld.param.u64 	%rd2, [gpu_memset_param_2];
	mov.b32	%r3, %envreg3;
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %ntid.x;
	mad.lo.s32 	%r6, %r4, %r5, %r3;
	mov.u32 	%r7, %tid.x;
	add.s32 	%r1, %r6, %r7;
	cvt.s64.s32	%rd3, %r1;
	setp.ge.u64	%p1, %rd3, %rd2;
	@%p1 bra 	BB0_2;

	mul.wide.s32 	%rd4, %r1, 16;
	add.s64 	%rd5, %rd1, %rd4;
	st.global.v4.u32 	[%rd5], {%r2, %r2, %r2, %r2};

BB0_2:
	ret;
}

.func sha512_update_128(
	.param .b64 sha512_update_128_param_0,
	.param .b64 sha512_update_128_param_1,
	.param .b64 sha512_update_128_param_2,
	.param .b64 sha512_update_128_param_3,
	.param .b64 sha512_update_128_param_4,
	.param .b64 sha512_update_128_param_5,
	.param .b64 sha512_update_128_param_6,
	.param .b64 sha512_update_128_param_7,
	.param .b64 sha512_update_128_param_8,
	.param .b32 sha512_update_128_param_9
)
{
	.reg .pred 	%p<97>;
	.reg .b32 	%r<8477>;
	.reg .b64 	%rd<1202>;


	ld.param.u64 	%rd90, [sha512_update_128_param_0];
	ld.param.u64 	%rd91, [sha512_update_128_param_1];
	ld.param.u64 	%rd92, [sha512_update_128_param_2];
	ld.param.u64 	%rd93, [sha512_update_128_param_3];
	ld.param.u64 	%rd94, [sha512_update_128_param_4];
	ld.param.u64 	%rd95, [sha512_update_128_param_5];
	ld.param.u64 	%rd96, [sha512_update_128_param_6];
	ld.param.u64 	%rd97, [sha512_update_128_param_7];
	ld.param.u64 	%rd98, [sha512_update_128_param_8];
	ld.param.u32 	%r571, [sha512_update_128_param_9];
	cvta.to.local.u64 	%rd1, %rd91;
	cvta.to.local.u64 	%rd2, %rd92;
	cvta.to.local.u64 	%rd3, %rd93;
	cvta.to.local.u64 	%rd4, %rd94;
	cvta.to.local.u64 	%rd5, %rd95;
	cvta.to.local.u64 	%rd6, %rd96;
	cvta.to.local.u64 	%rd7, %rd97;
	cvta.to.local.u64 	%rd8, %rd98;
	add.s64 	%rd9, %rd90, 192;
	ld.u32 	%r572, [%rd90+192];
	and.b32  	%r573, %r572, 127;
	add.s32 	%r574, %r572, %r571;
	st.u32 	[%rd90+192], %r574;
	add.s32 	%r575, %r573, %r571;
	setp.lt.s32	%p1, %r575, 128;
	bfe.u32 	%r1, %r572, 2, 5;
	and.b32  	%r576, %r572, 3;
	shl.b32 	%r577, %r576, 2;
	mov.u32 	%r578, 1985229328;
	shr.u32 	%r579, %r578, %r577;
	and.b32  	%r2, %r579, 65535;
	@%p1 bra 	BB1_92;
	bra.uni 	BB1_1;

BB1_92:
	setp.gt.s32	%p50, %r1, 15;
	@%p50 bra 	BB1_124;

	setp.gt.s32	%p74, %r1, 7;
	@%p74 bra 	BB1_109;

	setp.gt.s32	%p86, %r1, 3;
	@%p86 bra 	BB1_102;

	setp.gt.s32	%p92, %r1, 1;
	@%p92 bra 	BB1_99;

	setp.eq.s32	%p95, %r1, 0;
	@%p95 bra 	BB1_170;
	bra.uni 	BB1_97;

BB1_170:
	ld.local.u32 	%r8220, [%rd8+12];
	ld.local.u32 	%r8221, [%rd8+8];
	// inline asm
	prmt.b32 %r8219, %r8220, %r8221, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r8219;
	ld.local.u32 	%r8224, [%rd8+8];
	ld.local.u32 	%r8225, [%rd8+4];
	// inline asm
	prmt.b32 %r8223, %r8224, %r8225, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r8223;
	ld.local.u32 	%r8228, [%rd8+4];
	ld.local.u32 	%r8229, [%rd8];
	// inline asm
	prmt.b32 %r8227, %r8228, %r8229, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r8227;
	ld.local.u32 	%r8232, [%rd8];
	ld.local.u32 	%r8233, [%rd7+12];
	// inline asm
	prmt.b32 %r8231, %r8232, %r8233, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r8231;
	ld.local.u32 	%r8236, [%rd7+12];
	ld.local.u32 	%r8237, [%rd7+8];
	// inline asm
	prmt.b32 %r8235, %r8236, %r8237, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r8235;
	ld.local.u32 	%r8240, [%rd7+8];
	ld.local.u32 	%r8241, [%rd7+4];
	// inline asm
	prmt.b32 %r8239, %r8240, %r8241, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r8239;
	ld.local.u32 	%r8244, [%rd7+4];
	ld.local.u32 	%r8245, [%rd7];
	// inline asm
	prmt.b32 %r8243, %r8244, %r8245, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r8243;
	ld.local.u32 	%r8248, [%rd7];
	ld.local.u32 	%r8249, [%rd6+12];
	// inline asm
	prmt.b32 %r8247, %r8248, %r8249, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r8247;
	ld.local.u32 	%r8252, [%rd6+12];
	ld.local.u32 	%r8253, [%rd6+8];
	// inline asm
	prmt.b32 %r8251, %r8252, %r8253, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r8251;
	ld.local.u32 	%r8256, [%rd6+8];
	ld.local.u32 	%r8257, [%rd6+4];
	// inline asm
	prmt.b32 %r8255, %r8256, %r8257, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r8255;
	ld.local.u32 	%r8260, [%rd6+4];
	ld.local.u32 	%r8261, [%rd6];
	// inline asm
	prmt.b32 %r8259, %r8260, %r8261, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r8259;
	ld.local.u32 	%r8264, [%rd6];
	ld.local.u32 	%r8265, [%rd5+12];
	// inline asm
	prmt.b32 %r8263, %r8264, %r8265, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r8263;
	ld.local.u32 	%r8268, [%rd5+12];
	ld.local.u32 	%r8269, [%rd5+8];
	// inline asm
	prmt.b32 %r8267, %r8268, %r8269, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r8267;
	ld.local.u32 	%r8272, [%rd5+8];
	ld.local.u32 	%r8273, [%rd5+4];
	// inline asm
	prmt.b32 %r8271, %r8272, %r8273, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r8271;
	ld.local.u32 	%r8276, [%rd5+4];
	ld.local.u32 	%r8277, [%rd5];
	// inline asm
	prmt.b32 %r8275, %r8276, %r8277, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r8275;
	ld.local.u32 	%r8280, [%rd5];
	ld.local.u32 	%r8281, [%rd4+12];
	// inline asm
	prmt.b32 %r8279, %r8280, %r8281, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r8279;
	ld.local.u32 	%r8284, [%rd4+12];
	ld.local.u32 	%r8285, [%rd4+8];
	// inline asm
	prmt.b32 %r8283, %r8284, %r8285, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r8283;
	ld.local.u32 	%r8288, [%rd4+8];
	ld.local.u32 	%r8289, [%rd4+4];
	// inline asm
	prmt.b32 %r8287, %r8288, %r8289, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r8287;
	ld.local.u32 	%r8292, [%rd4+4];
	ld.local.u32 	%r8293, [%rd4];
	// inline asm
	prmt.b32 %r8291, %r8292, %r8293, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r8291;
	ld.local.u32 	%r8296, [%rd4];
	ld.local.u32 	%r8297, [%rd3+12];
	// inline asm
	prmt.b32 %r8295, %r8296, %r8297, %r2;
	// inline asm
	st.local.u32 	[%rd4], %r8295;
	ld.local.u32 	%r8300, [%rd3+12];
	ld.local.u32 	%r8301, [%rd3+8];
	// inline asm
	prmt.b32 %r8299, %r8300, %r8301, %r2;
	// inline asm
	st.local.u32 	[%rd3+12], %r8299;
	ld.local.u32 	%r8304, [%rd3+8];
	ld.local.u32 	%r8305, [%rd3+4];
	// inline asm
	prmt.b32 %r8303, %r8304, %r8305, %r2;
	// inline asm
	st.local.u32 	[%rd3+8], %r8303;
	ld.local.u32 	%r8308, [%rd3+4];
	ld.local.u32 	%r8309, [%rd3];
	// inline asm
	prmt.b32 %r8307, %r8308, %r8309, %r2;
	// inline asm
	st.local.u32 	[%rd3+4], %r8307;
	ld.local.u32 	%r8312, [%rd3];
	ld.local.u32 	%r8313, [%rd2+12];
	// inline asm
	prmt.b32 %r8311, %r8312, %r8313, %r2;
	// inline asm
	st.local.u32 	[%rd3], %r8311;
	ld.local.u32 	%r8316, [%rd2+12];
	ld.local.u32 	%r8317, [%rd2+8];
	// inline asm
	prmt.b32 %r8315, %r8316, %r8317, %r2;
	// inline asm
	st.local.u32 	[%rd2+12], %r8315;
	ld.local.u32 	%r8320, [%rd2+8];
	ld.local.u32 	%r8321, [%rd2+4];
	// inline asm
	prmt.b32 %r8319, %r8320, %r8321, %r2;
	// inline asm
	st.local.u32 	[%rd2+8], %r8319;
	ld.local.u32 	%r8324, [%rd2+4];
	ld.local.u32 	%r8325, [%rd2];
	// inline asm
	prmt.b32 %r8323, %r8324, %r8325, %r2;
	// inline asm
	st.local.u32 	[%rd2+4], %r8323;
	ld.local.u32 	%r8328, [%rd2];
	ld.local.u32 	%r8329, [%rd1+12];
	// inline asm
	prmt.b32 %r8327, %r8328, %r8329, %r2;
	// inline asm
	st.local.u32 	[%rd2], %r8327;
	ld.local.u32 	%r8332, [%rd1+12];
	ld.local.u32 	%r8333, [%rd1+8];
	// inline asm
	prmt.b32 %r8331, %r8332, %r8333, %r2;
	// inline asm
	st.local.u32 	[%rd1+12], %r8331;
	ld.local.u32 	%r8336, [%rd1+8];
	ld.local.u32 	%r8337, [%rd1+4];
	// inline asm
	prmt.b32 %r8335, %r8336, %r8337, %r2;
	// inline asm
	st.local.u32 	[%rd1+8], %r8335;
	ld.local.u32 	%r8340, [%rd1+4];
	ld.local.u32 	%r8341, [%rd1];
	// inline asm
	prmt.b32 %r8339, %r8340, %r8341, %r2;
	// inline asm
	st.local.u32 	[%rd1+4], %r8339;
	ld.local.u32 	%r8344, [%rd1];
	mov.u32 	%r8345, 0;
	// inline asm
	prmt.b32 %r8476, %r8344, %r8345, %r2;
	// inline asm
	st.local.u32 	[%rd1], %r8476;
	bra.uni 	BB1_172;

BB1_1:
	setp.gt.s32	%p2, %r1, 15;
	@%p2 bra 	BB1_34;

	setp.gt.s32	%p26, %r1, 7;
	@%p26 bra 	BB1_19;

	setp.gt.s32	%p38, %r1, 3;
	@%p38 bra 	BB1_12;

	setp.gt.s32	%p44, %r1, 1;
	@%p44 bra 	BB1_8;

	setp.eq.s32	%p47, %r1, 0;
	@%p47 bra 	BB1_86;
	bra.uni 	BB1_6;

BB1_86:
	ld.local.u32 	%r5170, [%rd8+12];
	mov.u32 	%r8443, 0;
	// inline asm
	prmt.b32 %r8446, %r8443, %r5170, %r2;
	// inline asm
	ld.local.u32 	%r5173, [%rd8+12];
	ld.local.u32 	%r5174, [%rd8+8];
	// inline asm
	prmt.b32 %r5172, %r5173, %r5174, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r5172;
	ld.local.u32 	%r5177, [%rd8+8];
	ld.local.u32 	%r5178, [%rd8+4];
	// inline asm
	prmt.b32 %r5176, %r5177, %r5178, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r5176;
	ld.local.u32 	%r5181, [%rd8+4];
	ld.local.u32 	%r5182, [%rd8];
	// inline asm
	prmt.b32 %r5180, %r5181, %r5182, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r5180;
	ld.local.u32 	%r5185, [%rd8];
	ld.local.u32 	%r5186, [%rd7+12];
	// inline asm
	prmt.b32 %r5184, %r5185, %r5186, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r5184;
	ld.local.u32 	%r5189, [%rd7+12];
	ld.local.u32 	%r5190, [%rd7+8];
	// inline asm
	prmt.b32 %r5188, %r5189, %r5190, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r5188;
	ld.local.u32 	%r5193, [%rd7+8];
	ld.local.u32 	%r5194, [%rd7+4];
	// inline asm
	prmt.b32 %r5192, %r5193, %r5194, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r5192;
	ld.local.u32 	%r5197, [%rd7+4];
	ld.local.u32 	%r5198, [%rd7];
	// inline asm
	prmt.b32 %r5196, %r5197, %r5198, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r5196;
	ld.local.u32 	%r5201, [%rd7];
	ld.local.u32 	%r5202, [%rd6+12];
	// inline asm
	prmt.b32 %r5200, %r5201, %r5202, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r5200;
	ld.local.u32 	%r5205, [%rd6+12];
	ld.local.u32 	%r5206, [%rd6+8];
	// inline asm
	prmt.b32 %r5204, %r5205, %r5206, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r5204;
	ld.local.u32 	%r5209, [%rd6+8];
	ld.local.u32 	%r5210, [%rd6+4];
	// inline asm
	prmt.b32 %r5208, %r5209, %r5210, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r5208;
	ld.local.u32 	%r5213, [%rd6+4];
	ld.local.u32 	%r5214, [%rd6];
	// inline asm
	prmt.b32 %r5212, %r5213, %r5214, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r5212;
	ld.local.u32 	%r5217, [%rd6];
	ld.local.u32 	%r5218, [%rd5+12];
	// inline asm
	prmt.b32 %r5216, %r5217, %r5218, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r5216;
	ld.local.u32 	%r5221, [%rd5+12];
	ld.local.u32 	%r5222, [%rd5+8];
	// inline asm
	prmt.b32 %r5220, %r5221, %r5222, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r5220;
	ld.local.u32 	%r5225, [%rd5+8];
	ld.local.u32 	%r5226, [%rd5+4];
	// inline asm
	prmt.b32 %r5224, %r5225, %r5226, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r5224;
	ld.local.u32 	%r5229, [%rd5+4];
	ld.local.u32 	%r5230, [%rd5];
	// inline asm
	prmt.b32 %r5228, %r5229, %r5230, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r5228;
	ld.local.u32 	%r5233, [%rd5];
	ld.local.u32 	%r5234, [%rd4+12];
	// inline asm
	prmt.b32 %r5232, %r5233, %r5234, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r5232;
	ld.local.u32 	%r5237, [%rd4+12];
	ld.local.u32 	%r5238, [%rd4+8];
	// inline asm
	prmt.b32 %r5236, %r5237, %r5238, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r5236;
	ld.local.u32 	%r5241, [%rd4+8];
	ld.local.u32 	%r5242, [%rd4+4];
	// inline asm
	prmt.b32 %r5240, %r5241, %r5242, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r5240;
	ld.local.u32 	%r5245, [%rd4+4];
	ld.local.u32 	%r5246, [%rd4];
	// inline asm
	prmt.b32 %r5244, %r5245, %r5246, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r5244;
	ld.local.u32 	%r5249, [%rd4];
	ld.local.u32 	%r5250, [%rd3+12];
	// inline asm
	prmt.b32 %r5248, %r5249, %r5250, %r2;
	// inline asm
	st.local.u32 	[%rd4], %r5248;
	ld.local.u32 	%r5253, [%rd3+12];
	ld.local.u32 	%r5254, [%rd3+8];
	// inline asm
	prmt.b32 %r5252, %r5253, %r5254, %r2;
	// inline asm
	st.local.u32 	[%rd3+12], %r5252;
	ld.local.u32 	%r5257, [%rd3+8];
	ld.local.u32 	%r5258, [%rd3+4];
	// inline asm
	prmt.b32 %r5256, %r5257, %r5258, %r2;
	// inline asm
	st.local.u32 	[%rd3+8], %r5256;
	ld.local.u32 	%r5261, [%rd3+4];
	ld.local.u32 	%r5262, [%rd3];
	// inline asm
	prmt.b32 %r5260, %r5261, %r5262, %r2;
	// inline asm
	st.local.u32 	[%rd3+4], %r5260;
	ld.local.u32 	%r5265, [%rd3];
	ld.local.u32 	%r5266, [%rd2+12];
	// inline asm
	prmt.b32 %r5264, %r5265, %r5266, %r2;
	// inline asm
	st.local.u32 	[%rd3], %r5264;
	ld.local.u32 	%r5269, [%rd2+12];
	ld.local.u32 	%r5270, [%rd2+8];
	// inline asm
	prmt.b32 %r5268, %r5269, %r5270, %r2;
	// inline asm
	st.local.u32 	[%rd2+12], %r5268;
	ld.local.u32 	%r5273, [%rd2+8];
	ld.local.u32 	%r5274, [%rd2+4];
	// inline asm
	prmt.b32 %r5272, %r5273, %r5274, %r2;
	// inline asm
	st.local.u32 	[%rd2+8], %r5272;
	ld.local.u32 	%r5277, [%rd2+4];
	ld.local.u32 	%r5278, [%rd2];
	// inline asm
	prmt.b32 %r5276, %r5277, %r5278, %r2;
	// inline asm
	st.local.u32 	[%rd2+4], %r5276;
	ld.local.u32 	%r5281, [%rd2];
	ld.local.u32 	%r5282, [%rd1+12];
	// inline asm
	prmt.b32 %r5280, %r5281, %r5282, %r2;
	// inline asm
	st.local.u32 	[%rd2], %r5280;
	ld.local.u32 	%r5285, [%rd1+12];
	ld.local.u32 	%r5286, [%rd1+8];
	// inline asm
	prmt.b32 %r5284, %r5285, %r5286, %r2;
	// inline asm
	st.local.u32 	[%rd1+12], %r5284;
	ld.local.u32 	%r5289, [%rd1+8];
	ld.local.u32 	%r5290, [%rd1+4];
	// inline asm
	prmt.b32 %r5288, %r5289, %r5290, %r2;
	// inline asm
	st.local.u32 	[%rd1+8], %r5288;
	ld.local.u32 	%r5293, [%rd1+4];
	ld.local.u32 	%r5294, [%rd1];
	// inline asm
	prmt.b32 %r5292, %r5293, %r5294, %r2;
	// inline asm
	st.local.u32 	[%rd1+4], %r5292;
	ld.local.u32 	%r5297, [%rd1];
	// inline asm
	prmt.b32 %r8442, %r5297, %r8443, %r2;
	// inline asm
	st.local.u32 	[%rd1], %r8442;
	mov.u32 	%r8444, %r8443;
	mov.u32 	%r8445, %r8443;
	bra.uni 	BB1_88;

BB1_124:
	setp.gt.s32	%p51, %r1, 23;
	@%p51 bra 	BB1_140;

	setp.gt.s32	%p63, %r1, 19;
	@%p63 bra 	BB1_133;

	setp.gt.s32	%p69, %r1, 17;
	@%p69 bra 	BB1_130;

	setp.eq.s32	%p72, %r1, 16;
	@%p72 bra 	BB1_162;
	bra.uni 	BB1_128;

BB1_162:
	ld.local.u32 	%r6700, [%rd4+12];
	ld.local.u32 	%r6701, [%rd4+8];
	// inline asm
	prmt.b32 %r6699, %r6700, %r6701, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r6699;
	ld.local.u32 	%r6704, [%rd4+8];
	ld.local.u32 	%r6705, [%rd4+4];
	// inline asm
	prmt.b32 %r6703, %r6704, %r6705, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r6703;
	ld.local.u32 	%r6708, [%rd4+4];
	ld.local.u32 	%r6709, [%rd4];
	// inline asm
	prmt.b32 %r6707, %r6708, %r6709, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r6707;
	ld.local.u32 	%r6712, [%rd4];
	ld.local.u32 	%r6713, [%rd3+12];
	// inline asm
	prmt.b32 %r6711, %r6712, %r6713, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r6711;
	ld.local.u32 	%r6716, [%rd3+12];
	ld.local.u32 	%r6717, [%rd3+8];
	// inline asm
	prmt.b32 %r6715, %r6716, %r6717, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r6715;
	ld.local.u32 	%r6720, [%rd3+8];
	ld.local.u32 	%r6721, [%rd3+4];
	// inline asm
	prmt.b32 %r6719, %r6720, %r6721, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r6719;
	ld.local.u32 	%r6724, [%rd3+4];
	ld.local.u32 	%r6725, [%rd3];
	// inline asm
	prmt.b32 %r6723, %r6724, %r6725, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r6723;
	ld.local.u32 	%r6728, [%rd3];
	ld.local.u32 	%r6729, [%rd2+12];
	// inline asm
	prmt.b32 %r6727, %r6728, %r6729, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r6727;
	ld.local.u32 	%r6732, [%rd2+12];
	ld.local.u32 	%r6733, [%rd2+8];
	// inline asm
	prmt.b32 %r6731, %r6732, %r6733, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r6731;
	ld.local.u32 	%r6736, [%rd2+8];
	ld.local.u32 	%r6737, [%rd2+4];
	// inline asm
	prmt.b32 %r6735, %r6736, %r6737, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r6735;
	ld.local.u32 	%r6740, [%rd2+4];
	ld.local.u32 	%r6741, [%rd2];
	// inline asm
	prmt.b32 %r6739, %r6740, %r6741, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r6739;
	ld.local.u32 	%r6744, [%rd2];
	ld.local.u32 	%r6745, [%rd1+12];
	// inline asm
	prmt.b32 %r6743, %r6744, %r6745, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r6743;
	ld.local.u32 	%r6748, [%rd1+12];
	ld.local.u32 	%r6749, [%rd1+8];
	// inline asm
	prmt.b32 %r6747, %r6748, %r6749, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r6747;
	ld.local.u32 	%r6752, [%rd1+8];
	ld.local.u32 	%r6753, [%rd1+4];
	// inline asm
	prmt.b32 %r6751, %r6752, %r6753, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r6751;
	ld.local.u32 	%r6756, [%rd1+4];
	ld.local.u32 	%r6757, [%rd1];
	// inline asm
	prmt.b32 %r6755, %r6756, %r6757, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r6755;
	ld.local.u32 	%r6760, [%rd1];
	mov.u32 	%r8476, 0;
	// inline asm
	prmt.b32 %r6759, %r6760, %r8476, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r6759;
	st.local.u32 	[%rd4+12], %r8476;
	st.local.u32 	[%rd4+8], %r8476;
	st.local.u32 	[%rd4+4], %r8476;
	st.local.u32 	[%rd4], %r8476;
	st.local.u32 	[%rd3+12], %r8476;
	st.local.u32 	[%rd3+8], %r8476;
	st.local.u32 	[%rd3+4], %r8476;
	st.local.u32 	[%rd3], %r8476;
	st.local.u32 	[%rd2+12], %r8476;
	st.local.u32 	[%rd2+8], %r8476;
	st.local.u32 	[%rd2+4], %r8476;
	st.local.u32 	[%rd2], %r8476;
	st.local.u32 	[%rd1+12], %r8476;
	st.local.u32 	[%rd1+8], %r8476;
	mov.u64 	%rd1161, 0;
	st.local.u32 	[%rd1+4], %rd1161;
	st.local.u32 	[%rd1], %rd1161;
	bra.uni 	BB1_172;

BB1_34:
	setp.gt.s32	%p3, %r1, 23;
	@%p3 bra 	BB1_50;

	setp.gt.s32	%p15, %r1, 19;
	@%p15 bra 	BB1_43;

	setp.gt.s32	%p21, %r1, 17;
	@%p21 bra 	BB1_40;

	setp.eq.s32	%p24, %r1, 16;
	@%p24 bra 	BB1_72;
	bra.uni 	BB1_38;

BB1_72:
	ld.local.u32 	%r2682, [%rd8+12];
	mov.u32 	%r8442, 0;
	// inline asm
	prmt.b32 %r8462, %r8442, %r2682, %r2;
	// inline asm
	ld.local.u32 	%r2685, [%rd8+12];
	ld.local.u32 	%r2686, [%rd8+8];
	// inline asm
	prmt.b32 %r8455, %r2685, %r2686, %r2;
	// inline asm
	ld.local.u32 	%r2689, [%rd8+8];
	ld.local.u32 	%r2690, [%rd8+4];
	// inline asm
	prmt.b32 %r8456, %r2689, %r2690, %r2;
	// inline asm
	ld.local.u32 	%r2693, [%rd8+4];
	ld.local.u32 	%r2694, [%rd8];
	// inline asm
	prmt.b32 %r8457, %r2693, %r2694, %r2;
	// inline asm
	ld.local.u32 	%r2697, [%rd8];
	ld.local.u32 	%r2698, [%rd7+12];
	// inline asm
	prmt.b32 %r8458, %r2697, %r2698, %r2;
	// inline asm
	ld.local.u32 	%r2701, [%rd7+12];
	ld.local.u32 	%r2702, [%rd7+8];
	// inline asm
	prmt.b32 %r8451, %r2701, %r2702, %r2;
	// inline asm
	ld.local.u32 	%r2705, [%rd7+8];
	ld.local.u32 	%r2706, [%rd7+4];
	// inline asm
	prmt.b32 %r8452, %r2705, %r2706, %r2;
	// inline asm
	ld.local.u32 	%r2709, [%rd7+4];
	ld.local.u32 	%r2710, [%rd7];
	// inline asm
	prmt.b32 %r8453, %r2709, %r2710, %r2;
	// inline asm
	ld.local.u32 	%r2713, [%rd7];
	ld.local.u32 	%r2714, [%rd6+12];
	// inline asm
	prmt.b32 %r8454, %r2713, %r2714, %r2;
	// inline asm
	ld.local.u32 	%r2717, [%rd6+12];
	ld.local.u32 	%r2718, [%rd6+8];
	// inline asm
	prmt.b32 %r8447, %r2717, %r2718, %r2;
	// inline asm
	ld.local.u32 	%r2721, [%rd6+8];
	ld.local.u32 	%r2722, [%rd6+4];
	// inline asm
	prmt.b32 %r8448, %r2721, %r2722, %r2;
	// inline asm
	ld.local.u32 	%r2725, [%rd6+4];
	ld.local.u32 	%r2726, [%rd6];
	// inline asm
	prmt.b32 %r8449, %r2725, %r2726, %r2;
	// inline asm
	ld.local.u32 	%r2729, [%rd6];
	ld.local.u32 	%r2730, [%rd5+12];
	// inline asm
	prmt.b32 %r8450, %r2729, %r2730, %r2;
	// inline asm
	ld.local.u32 	%r2733, [%rd5+12];
	ld.local.u32 	%r2734, [%rd5+8];
	// inline asm
	prmt.b32 %r8443, %r2733, %r2734, %r2;
	// inline asm
	ld.local.u32 	%r2737, [%rd5+8];
	ld.local.u32 	%r2738, [%rd5+4];
	// inline asm
	prmt.b32 %r8444, %r2737, %r2738, %r2;
	// inline asm
	ld.local.u32 	%r2741, [%rd5+4];
	ld.local.u32 	%r2742, [%rd5];
	// inline asm
	prmt.b32 %r8445, %r2741, %r2742, %r2;
	// inline asm
	ld.local.u32 	%r2745, [%rd5];
	ld.local.u32 	%r2746, [%rd4+12];
	// inline asm
	prmt.b32 %r8446, %r2745, %r2746, %r2;
	// inline asm
	ld.local.u32 	%r2749, [%rd4+12];
	ld.local.u32 	%r2750, [%rd4+8];
	// inline asm
	prmt.b32 %r2748, %r2749, %r2750, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r2748;
	ld.local.u32 	%r2753, [%rd4+8];
	ld.local.u32 	%r2754, [%rd4+4];
	// inline asm
	prmt.b32 %r2752, %r2753, %r2754, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r2752;
	ld.local.u32 	%r2757, [%rd4+4];
	ld.local.u32 	%r2758, [%rd4];
	// inline asm
	prmt.b32 %r2756, %r2757, %r2758, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r2756;
	ld.local.u32 	%r2761, [%rd4];
	ld.local.u32 	%r2762, [%rd3+12];
	// inline asm
	prmt.b32 %r2760, %r2761, %r2762, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r2760;
	ld.local.u32 	%r2765, [%rd3+12];
	ld.local.u32 	%r2766, [%rd3+8];
	// inline asm
	prmt.b32 %r2764, %r2765, %r2766, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r2764;
	ld.local.u32 	%r2769, [%rd3+8];
	ld.local.u32 	%r2770, [%rd3+4];
	// inline asm
	prmt.b32 %r2768, %r2769, %r2770, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r2768;
	ld.local.u32 	%r2773, [%rd3+4];
	ld.local.u32 	%r2774, [%rd3];
	// inline asm
	prmt.b32 %r2772, %r2773, %r2774, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r2772;
	ld.local.u32 	%r2777, [%rd3];
	ld.local.u32 	%r2778, [%rd2+12];
	// inline asm
	prmt.b32 %r2776, %r2777, %r2778, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r2776;
	ld.local.u32 	%r2781, [%rd2+12];
	ld.local.u32 	%r2782, [%rd2+8];
	// inline asm
	prmt.b32 %r2780, %r2781, %r2782, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r2780;
	ld.local.u32 	%r2785, [%rd2+8];
	ld.local.u32 	%r2786, [%rd2+4];
	// inline asm
	prmt.b32 %r2784, %r2785, %r2786, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r2784;
	ld.local.u32 	%r2789, [%rd2+4];
	ld.local.u32 	%r2790, [%rd2];
	// inline asm
	prmt.b32 %r2788, %r2789, %r2790, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r2788;
	ld.local.u32 	%r2793, [%rd2];
	ld.local.u32 	%r2794, [%rd1+12];
	// inline asm
	prmt.b32 %r2792, %r2793, %r2794, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r2792;
	ld.local.u32 	%r2797, [%rd1+12];
	ld.local.u32 	%r2798, [%rd1+8];
	// inline asm
	prmt.b32 %r2796, %r2797, %r2798, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r2796;
	ld.local.u32 	%r2801, [%rd1+8];
	ld.local.u32 	%r2802, [%rd1+4];
	// inline asm
	prmt.b32 %r2800, %r2801, %r2802, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r2800;
	ld.local.u32 	%r2805, [%rd1+4];
	ld.local.u32 	%r2806, [%rd1];
	// inline asm
	prmt.b32 %r2804, %r2805, %r2806, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r2804;
	ld.local.u32 	%r2809, [%rd1];
	// inline asm
	prmt.b32 %r2808, %r2809, %r8442, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r2808;
	st.local.u32 	[%rd4+12], %r8442;
	st.local.u32 	[%rd4+8], %r8442;
	st.local.u32 	[%rd4+4], %r8442;
	st.local.u32 	[%rd4], %r8442;
	st.local.u32 	[%rd3+12], %r8442;
	st.local.u32 	[%rd3+8], %r8442;
	st.local.u32 	[%rd3+4], %r8442;
	st.local.u32 	[%rd3], %r8442;
	st.local.u32 	[%rd2+12], %r8442;
	st.local.u32 	[%rd2+8], %r8442;
	st.local.u32 	[%rd2+4], %r8442;
	st.local.u32 	[%rd2], %r8442;
	st.local.u32 	[%rd1+12], %r8442;
	st.local.u32 	[%rd1+8], %r8442;
	mov.u64 	%rd114, 0;
	st.local.u32 	[%rd1+4], %rd114;
	st.local.u32 	[%rd1], %rd114;
	mov.u32 	%r8459, %r8442;
	mov.u32 	%r8460, %r8442;
	mov.u32 	%r8461, %r8442;
	bra.uni 	BB1_82;

BB1_109:
	setp.gt.s32	%p75, %r1, 11;
	@%p75 bra 	BB1_117;

	setp.gt.s32	%p81, %r1, 9;
	@%p81 bra 	BB1_114;

	setp.eq.s32	%p84, %r1, 8;
	@%p84 bra 	BB1_166;
	bra.uni 	BB1_112;

BB1_166:
	ld.local.u32 	%r7332, [%rd6+12];
	ld.local.u32 	%r7333, [%rd6+8];
	// inline asm
	prmt.b32 %r7331, %r7332, %r7333, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r7331;
	ld.local.u32 	%r7336, [%rd6+8];
	ld.local.u32 	%r7337, [%rd6+4];
	// inline asm
	prmt.b32 %r7335, %r7336, %r7337, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r7335;
	ld.local.u32 	%r7340, [%rd6+4];
	ld.local.u32 	%r7341, [%rd6];
	// inline asm
	prmt.b32 %r7339, %r7340, %r7341, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r7339;
	ld.local.u32 	%r7344, [%rd6];
	ld.local.u32 	%r7345, [%rd5+12];
	// inline asm
	prmt.b32 %r7343, %r7344, %r7345, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r7343;
	ld.local.u32 	%r7348, [%rd5+12];
	ld.local.u32 	%r7349, [%rd5+8];
	// inline asm
	prmt.b32 %r7347, %r7348, %r7349, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r7347;
	ld.local.u32 	%r7352, [%rd5+8];
	ld.local.u32 	%r7353, [%rd5+4];
	// inline asm
	prmt.b32 %r7351, %r7352, %r7353, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r7351;
	ld.local.u32 	%r7356, [%rd5+4];
	ld.local.u32 	%r7357, [%rd5];
	// inline asm
	prmt.b32 %r7355, %r7356, %r7357, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r7355;
	ld.local.u32 	%r7360, [%rd5];
	ld.local.u32 	%r7361, [%rd4+12];
	// inline asm
	prmt.b32 %r7359, %r7360, %r7361, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r7359;
	ld.local.u32 	%r7364, [%rd4+12];
	ld.local.u32 	%r7365, [%rd4+8];
	// inline asm
	prmt.b32 %r7363, %r7364, %r7365, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r7363;
	ld.local.u32 	%r7368, [%rd4+8];
	ld.local.u32 	%r7369, [%rd4+4];
	// inline asm
	prmt.b32 %r7367, %r7368, %r7369, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r7367;
	ld.local.u32 	%r7372, [%rd4+4];
	ld.local.u32 	%r7373, [%rd4];
	// inline asm
	prmt.b32 %r7371, %r7372, %r7373, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r7371;
	ld.local.u32 	%r7376, [%rd4];
	ld.local.u32 	%r7377, [%rd3+12];
	// inline asm
	prmt.b32 %r7375, %r7376, %r7377, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r7375;
	ld.local.u32 	%r7380, [%rd3+12];
	ld.local.u32 	%r7381, [%rd3+8];
	// inline asm
	prmt.b32 %r7379, %r7380, %r7381, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r7379;
	ld.local.u32 	%r7384, [%rd3+8];
	ld.local.u32 	%r7385, [%rd3+4];
	// inline asm
	prmt.b32 %r7383, %r7384, %r7385, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r7383;
	ld.local.u32 	%r7388, [%rd3+4];
	ld.local.u32 	%r7389, [%rd3];
	// inline asm
	prmt.b32 %r7387, %r7388, %r7389, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r7387;
	ld.local.u32 	%r7392, [%rd3];
	ld.local.u32 	%r7393, [%rd2+12];
	// inline asm
	prmt.b32 %r7391, %r7392, %r7393, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r7391;
	ld.local.u32 	%r7396, [%rd2+12];
	ld.local.u32 	%r7397, [%rd2+8];
	// inline asm
	prmt.b32 %r7395, %r7396, %r7397, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r7395;
	ld.local.u32 	%r7400, [%rd2+8];
	ld.local.u32 	%r7401, [%rd2+4];
	// inline asm
	prmt.b32 %r7399, %r7400, %r7401, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r7399;
	ld.local.u32 	%r7404, [%rd2+4];
	ld.local.u32 	%r7405, [%rd2];
	// inline asm
	prmt.b32 %r7403, %r7404, %r7405, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r7403;
	ld.local.u32 	%r7408, [%rd2];
	ld.local.u32 	%r7409, [%rd1+12];
	// inline asm
	prmt.b32 %r7407, %r7408, %r7409, %r2;
	// inline asm
	st.local.u32 	[%rd4], %r7407;
	ld.local.u32 	%r7412, [%rd1+12];
	ld.local.u32 	%r7413, [%rd1+8];
	// inline asm
	prmt.b32 %r7411, %r7412, %r7413, %r2;
	// inline asm
	st.local.u32 	[%rd3+12], %r7411;
	ld.local.u32 	%r7416, [%rd1+8];
	ld.local.u32 	%r7417, [%rd1+4];
	// inline asm
	prmt.b32 %r7415, %r7416, %r7417, %r2;
	// inline asm
	st.local.u32 	[%rd3+8], %r7415;
	ld.local.u32 	%r7420, [%rd1+4];
	ld.local.u32 	%r7421, [%rd1];
	// inline asm
	prmt.b32 %r7419, %r7420, %r7421, %r2;
	// inline asm
	st.local.u32 	[%rd3+4], %r7419;
	ld.local.u32 	%r7424, [%rd1];
	mov.u32 	%r8476, 0;
	// inline asm
	prmt.b32 %r7423, %r7424, %r8476, %r2;
	// inline asm
	st.local.u32 	[%rd3], %r7423;
	st.local.u32 	[%rd2+12], %r8476;
	st.local.u32 	[%rd2+8], %r8476;
	st.local.u32 	[%rd2+4], %r8476;
	st.local.u32 	[%rd2], %r8476;
	st.local.u32 	[%rd1+12], %r8476;
	st.local.u32 	[%rd1+8], %r8476;
	mov.u64 	%rd1169, 0;
	st.local.u32 	[%rd1+4], %rd1169;
	st.local.u32 	[%rd1], %rd1169;
	bra.uni 	BB1_172;

BB1_19:
	setp.gt.s32	%p27, %r1, 11;
	@%p27 bra 	BB1_27;

	setp.gt.s32	%p33, %r1, 9;
	@%p33 bra 	BB1_24;

	setp.eq.s32	%p36, %r1, 8;
	@%p36 bra 	BB1_76;
	bra.uni 	BB1_22;

BB1_76:
	ld.local.u32 	%r3894, [%rd8+12];
	mov.u32 	%r8442, 0;
	// inline asm
	prmt.b32 %r8454, %r8442, %r3894, %r2;
	// inline asm
	ld.local.u32 	%r3897, [%rd8+12];
	ld.local.u32 	%r3898, [%rd8+8];
	// inline asm
	prmt.b32 %r8447, %r3897, %r3898, %r2;
	// inline asm
	ld.local.u32 	%r3901, [%rd8+8];
	ld.local.u32 	%r3902, [%rd8+4];
	// inline asm
	prmt.b32 %r8448, %r3901, %r3902, %r2;
	// inline asm
	ld.local.u32 	%r3905, [%rd8+4];
	ld.local.u32 	%r3906, [%rd8];
	// inline asm
	prmt.b32 %r8449, %r3905, %r3906, %r2;
	// inline asm
	ld.local.u32 	%r3909, [%rd8];
	ld.local.u32 	%r3910, [%rd7+12];
	// inline asm
	prmt.b32 %r8450, %r3909, %r3910, %r2;
	// inline asm
	ld.local.u32 	%r3913, [%rd7+12];
	ld.local.u32 	%r3914, [%rd7+8];
	// inline asm
	prmt.b32 %r8443, %r3913, %r3914, %r2;
	// inline asm
	ld.local.u32 	%r3917, [%rd7+8];
	ld.local.u32 	%r3918, [%rd7+4];
	// inline asm
	prmt.b32 %r8444, %r3917, %r3918, %r2;
	// inline asm
	ld.local.u32 	%r3921, [%rd7+4];
	ld.local.u32 	%r3922, [%rd7];
	// inline asm
	prmt.b32 %r8445, %r3921, %r3922, %r2;
	// inline asm
	ld.local.u32 	%r3925, [%rd7];
	ld.local.u32 	%r3926, [%rd6+12];
	// inline asm
	prmt.b32 %r8446, %r3925, %r3926, %r2;
	// inline asm
	ld.local.u32 	%r3929, [%rd6+12];
	ld.local.u32 	%r3930, [%rd6+8];
	// inline asm
	prmt.b32 %r3928, %r3929, %r3930, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r3928;
	ld.local.u32 	%r3933, [%rd6+8];
	ld.local.u32 	%r3934, [%rd6+4];
	// inline asm
	prmt.b32 %r3932, %r3933, %r3934, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r3932;
	ld.local.u32 	%r3937, [%rd6+4];
	ld.local.u32 	%r3938, [%rd6];
	// inline asm
	prmt.b32 %r3936, %r3937, %r3938, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r3936;
	ld.local.u32 	%r3941, [%rd6];
	ld.local.u32 	%r3942, [%rd5+12];
	// inline asm
	prmt.b32 %r3940, %r3941, %r3942, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r3940;
	ld.local.u32 	%r3945, [%rd5+12];
	ld.local.u32 	%r3946, [%rd5+8];
	// inline asm
	prmt.b32 %r3944, %r3945, %r3946, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r3944;
	ld.local.u32 	%r3949, [%rd5+8];
	ld.local.u32 	%r3950, [%rd5+4];
	// inline asm
	prmt.b32 %r3948, %r3949, %r3950, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r3948;
	ld.local.u32 	%r3953, [%rd5+4];
	ld.local.u32 	%r3954, [%rd5];
	// inline asm
	prmt.b32 %r3952, %r3953, %r3954, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r3952;
	ld.local.u32 	%r3957, [%rd5];
	ld.local.u32 	%r3958, [%rd4+12];
	// inline asm
	prmt.b32 %r3956, %r3957, %r3958, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r3956;
	ld.local.u32 	%r3961, [%rd4+12];
	ld.local.u32 	%r3962, [%rd4+8];
	// inline asm
	prmt.b32 %r3960, %r3961, %r3962, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r3960;
	ld.local.u32 	%r3965, [%rd4+8];
	ld.local.u32 	%r3966, [%rd4+4];
	// inline asm
	prmt.b32 %r3964, %r3965, %r3966, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r3964;
	ld.local.u32 	%r3969, [%rd4+4];
	ld.local.u32 	%r3970, [%rd4];
	// inline asm
	prmt.b32 %r3968, %r3969, %r3970, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r3968;
	ld.local.u32 	%r3973, [%rd4];
	ld.local.u32 	%r3974, [%rd3+12];
	// inline asm
	prmt.b32 %r3972, %r3973, %r3974, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r3972;
	ld.local.u32 	%r3977, [%rd3+12];
	ld.local.u32 	%r3978, [%rd3+8];
	// inline asm
	prmt.b32 %r3976, %r3977, %r3978, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r3976;
	ld.local.u32 	%r3981, [%rd3+8];
	ld.local.u32 	%r3982, [%rd3+4];
	// inline asm
	prmt.b32 %r3980, %r3981, %r3982, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r3980;
	ld.local.u32 	%r3985, [%rd3+4];
	ld.local.u32 	%r3986, [%rd3];
	// inline asm
	prmt.b32 %r3984, %r3985, %r3986, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r3984;
	ld.local.u32 	%r3989, [%rd3];
	ld.local.u32 	%r3990, [%rd2+12];
	// inline asm
	prmt.b32 %r3988, %r3989, %r3990, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r3988;
	ld.local.u32 	%r3993, [%rd2+12];
	ld.local.u32 	%r3994, [%rd2+8];
	// inline asm
	prmt.b32 %r3992, %r3993, %r3994, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r3992;
	ld.local.u32 	%r3997, [%rd2+8];
	ld.local.u32 	%r3998, [%rd2+4];
	// inline asm
	prmt.b32 %r3996, %r3997, %r3998, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r3996;
	ld.local.u32 	%r4001, [%rd2+4];
	ld.local.u32 	%r4002, [%rd2];
	// inline asm
	prmt.b32 %r4000, %r4001, %r4002, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r4000;
	ld.local.u32 	%r4005, [%rd2];
	ld.local.u32 	%r4006, [%rd1+12];
	// inline asm
	prmt.b32 %r4004, %r4005, %r4006, %r2;
	// inline asm
	st.local.u32 	[%rd4], %r4004;
	ld.local.u32 	%r4009, [%rd1+12];
	ld.local.u32 	%r4010, [%rd1+8];
	// inline asm
	prmt.b32 %r4008, %r4009, %r4010, %r2;
	// inline asm
	st.local.u32 	[%rd3+12], %r4008;
	ld.local.u32 	%r4013, [%rd1+8];
	ld.local.u32 	%r4014, [%rd1+4];
	// inline asm
	prmt.b32 %r4012, %r4013, %r4014, %r2;
	// inline asm
	st.local.u32 	[%rd3+8], %r4012;
	ld.local.u32 	%r4017, [%rd1+4];
	ld.local.u32 	%r4018, [%rd1];
	// inline asm
	prmt.b32 %r4016, %r4017, %r4018, %r2;
	// inline asm
	st.local.u32 	[%rd3+4], %r4016;
	ld.local.u32 	%r4021, [%rd1];
	// inline asm
	prmt.b32 %r4020, %r4021, %r8442, %r2;
	// inline asm
	st.local.u32 	[%rd3], %r4020;
	st.local.u32 	[%rd2+12], %r8442;
	st.local.u32 	[%rd2+8], %r8442;
	st.local.u32 	[%rd2+4], %r8442;
	st.local.u32 	[%rd2], %r8442;
	st.local.u32 	[%rd1+12], %r8442;
	st.local.u32 	[%rd1+8], %r8442;
	mov.u64 	%rd122, 0;
	st.local.u32 	[%rd1+4], %rd122;
	st.local.u32 	[%rd1], %rd122;
	mov.u32 	%r8451, %r8442;
	mov.u32 	%r8452, %r8442;
	mov.u32 	%r8453, %r8442;
	bra.uni 	BB1_80;

BB1_140:
	setp.gt.s32	%p52, %r1, 27;
	@%p52 bra 	BB1_148;

	setp.gt.s32	%p58, %r1, 25;
	@%p58 bra 	BB1_145;

	setp.eq.s32	%p61, %r1, 24;
	@%p61 bra 	BB1_158;
	bra.uni 	BB1_143;

BB1_158:
	ld.local.u32 	%r6324, [%rd2+12];
	ld.local.u32 	%r6325, [%rd2+8];
	// inline asm
	prmt.b32 %r6323, %r6324, %r6325, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r6323;
	ld.local.u32 	%r6328, [%rd2+8];
	ld.local.u32 	%r6329, [%rd2+4];
	// inline asm
	prmt.b32 %r6327, %r6328, %r6329, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r6327;
	ld.local.u32 	%r6332, [%rd2+4];
	ld.local.u32 	%r6333, [%rd2];
	// inline asm
	prmt.b32 %r6331, %r6332, %r6333, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r6331;
	ld.local.u32 	%r6336, [%rd2];
	ld.local.u32 	%r6337, [%rd1+12];
	// inline asm
	prmt.b32 %r6335, %r6336, %r6337, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r6335;
	ld.local.u32 	%r6340, [%rd1+12];
	ld.local.u32 	%r6341, [%rd1+8];
	// inline asm
	prmt.b32 %r6339, %r6340, %r6341, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r6339;
	ld.local.u32 	%r6344, [%rd1+8];
	ld.local.u32 	%r6345, [%rd1+4];
	// inline asm
	prmt.b32 %r6343, %r6344, %r6345, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r6343;
	ld.local.u32 	%r6348, [%rd1+4];
	ld.local.u32 	%r6349, [%rd1];
	// inline asm
	prmt.b32 %r6347, %r6348, %r6349, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r6347;
	ld.local.u32 	%r6352, [%rd1];
	mov.u32 	%r8476, 0;
	// inline asm
	prmt.b32 %r6351, %r6352, %r8476, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r6351;
	st.local.u32 	[%rd6+12], %r8476;
	st.local.u32 	[%rd6+8], %r8476;
	st.local.u32 	[%rd6+4], %r8476;
	st.local.u32 	[%rd6], %r8476;
	st.local.u32 	[%rd5+12], %r8476;
	st.local.u32 	[%rd5+8], %r8476;
	st.local.u32 	[%rd5+4], %r8476;
	st.local.u32 	[%rd5], %r8476;
	st.local.u32 	[%rd4+12], %r8476;
	st.local.u32 	[%rd4+8], %r8476;
	st.local.u32 	[%rd4+4], %r8476;
	st.local.u32 	[%rd4], %r8476;
	st.local.u32 	[%rd3+12], %r8476;
	st.local.u32 	[%rd3+8], %r8476;
	st.local.u32 	[%rd3+4], %r8476;
	st.local.u32 	[%rd3], %r8476;
	st.local.u32 	[%rd2+12], %r8476;
	st.local.u32 	[%rd2+8], %r8476;
	st.local.u32 	[%rd2+4], %r8476;
	st.local.u32 	[%rd2], %r8476;
	st.local.u32 	[%rd1+12], %r8476;
	st.local.u32 	[%rd1+8], %r8476;
	mov.u64 	%rd1153, 0;
	st.local.u32 	[%rd1+4], %rd1153;
	st.local.u32 	[%rd1], %rd1153;
	bra.uni 	BB1_172;

BB1_50:
	setp.gt.s32	%p4, %r1, 27;
	@%p4 bra 	BB1_58;

	setp.gt.s32	%p10, %r1, 25;
	@%p10 bra 	BB1_55;

	setp.eq.s32	%p13, %r1, 24;
	@%p13 bra 	BB1_68;
	bra.uni 	BB1_53;

BB1_68:
	ld.local.u32 	%r1534, [%rd8+12];
	mov.u32 	%r8442, 0;
	// inline asm
	prmt.b32 %r8470, %r8442, %r1534, %r2;
	// inline asm
	ld.local.u32 	%r1537, [%rd8+12];
	ld.local.u32 	%r1538, [%rd8+8];
	// inline asm
	prmt.b32 %r8463, %r1537, %r1538, %r2;
	// inline asm
	ld.local.u32 	%r1541, [%rd8+8];
	ld.local.u32 	%r1542, [%rd8+4];
	// inline asm
	prmt.b32 %r8464, %r1541, %r1542, %r2;
	// inline asm
	ld.local.u32 	%r1545, [%rd8+4];
	ld.local.u32 	%r1546, [%rd8];
	// inline asm
	prmt.b32 %r8465, %r1545, %r1546, %r2;
	// inline asm
	ld.local.u32 	%r1549, [%rd8];
	ld.local.u32 	%r1550, [%rd7+12];
	// inline asm
	prmt.b32 %r8466, %r1549, %r1550, %r2;
	// inline asm
	ld.local.u32 	%r1553, [%rd7+12];
	ld.local.u32 	%r1554, [%rd7+8];
	// inline asm
	prmt.b32 %r8459, %r1553, %r1554, %r2;
	// inline asm
	ld.local.u32 	%r1557, [%rd7+8];
	ld.local.u32 	%r1558, [%rd7+4];
	// inline asm
	prmt.b32 %r8460, %r1557, %r1558, %r2;
	// inline asm
	ld.local.u32 	%r1561, [%rd7+4];
	ld.local.u32 	%r1562, [%rd7];
	// inline asm
	prmt.b32 %r8461, %r1561, %r1562, %r2;
	// inline asm
	ld.local.u32 	%r1565, [%rd7];
	ld.local.u32 	%r1566, [%rd6+12];
	// inline asm
	prmt.b32 %r8462, %r1565, %r1566, %r2;
	// inline asm
	ld.local.u32 	%r1569, [%rd6+12];
	ld.local.u32 	%r1570, [%rd6+8];
	// inline asm
	prmt.b32 %r8455, %r1569, %r1570, %r2;
	// inline asm
	ld.local.u32 	%r1573, [%rd6+8];
	ld.local.u32 	%r1574, [%rd6+4];
	// inline asm
	prmt.b32 %r8456, %r1573, %r1574, %r2;
	// inline asm
	ld.local.u32 	%r1577, [%rd6+4];
	ld.local.u32 	%r1578, [%rd6];
	// inline asm
	prmt.b32 %r8457, %r1577, %r1578, %r2;
	// inline asm
	ld.local.u32 	%r1581, [%rd6];
	ld.local.u32 	%r1582, [%rd5+12];
	// inline asm
	prmt.b32 %r8458, %r1581, %r1582, %r2;
	// inline asm
	ld.local.u32 	%r1585, [%rd5+12];
	ld.local.u32 	%r1586, [%rd5+8];
	// inline asm
	prmt.b32 %r8451, %r1585, %r1586, %r2;
	// inline asm
	ld.local.u32 	%r1589, [%rd5+8];
	ld.local.u32 	%r1590, [%rd5+4];
	// inline asm
	prmt.b32 %r8452, %r1589, %r1590, %r2;
	// inline asm
	ld.local.u32 	%r1593, [%rd5+4];
	ld.local.u32 	%r1594, [%rd5];
	// inline asm
	prmt.b32 %r8453, %r1593, %r1594, %r2;
	// inline asm
	ld.local.u32 	%r1597, [%rd5];
	ld.local.u32 	%r1598, [%rd4+12];
	// inline asm
	prmt.b32 %r8454, %r1597, %r1598, %r2;
	// inline asm
	ld.local.u32 	%r1601, [%rd4+12];
	ld.local.u32 	%r1602, [%rd4+8];
	// inline asm
	prmt.b32 %r8447, %r1601, %r1602, %r2;
	// inline asm
	ld.local.u32 	%r1605, [%rd4+8];
	ld.local.u32 	%r1606, [%rd4+4];
	// inline asm
	prmt.b32 %r8448, %r1605, %r1606, %r2;
	// inline asm
	ld.local.u32 	%r1609, [%rd4+4];
	ld.local.u32 	%r1610, [%rd4];
	// inline asm
	prmt.b32 %r8449, %r1609, %r1610, %r2;
	// inline asm
	ld.local.u32 	%r1613, [%rd4];
	ld.local.u32 	%r1614, [%rd3+12];
	// inline asm
	prmt.b32 %r8450, %r1613, %r1614, %r2;
	// inline asm
	ld.local.u32 	%r1617, [%rd3+12];
	ld.local.u32 	%r1618, [%rd3+8];
	// inline asm
	prmt.b32 %r8443, %r1617, %r1618, %r2;
	// inline asm
	ld.local.u32 	%r1621, [%rd3+8];
	ld.local.u32 	%r1622, [%rd3+4];
	// inline asm
	prmt.b32 %r8444, %r1621, %r1622, %r2;
	// inline asm
	ld.local.u32 	%r1625, [%rd3+4];
	ld.local.u32 	%r1626, [%rd3];
	// inline asm
	prmt.b32 %r8445, %r1625, %r1626, %r2;
	// inline asm
	ld.local.u32 	%r1629, [%rd3];
	ld.local.u32 	%r1630, [%rd2+12];
	// inline asm
	prmt.b32 %r8446, %r1629, %r1630, %r2;
	// inline asm
	ld.local.u32 	%r1633, [%rd2+12];
	ld.local.u32 	%r1634, [%rd2+8];
	// inline asm
	prmt.b32 %r1632, %r1633, %r1634, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r1632;
	ld.local.u32 	%r1637, [%rd2+8];
	ld.local.u32 	%r1638, [%rd2+4];
	// inline asm
	prmt.b32 %r1636, %r1637, %r1638, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r1636;
	ld.local.u32 	%r1641, [%rd2+4];
	ld.local.u32 	%r1642, [%rd2];
	// inline asm
	prmt.b32 %r1640, %r1641, %r1642, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r1640;
	ld.local.u32 	%r1645, [%rd2];
	ld.local.u32 	%r1646, [%rd1+12];
	// inline asm
	prmt.b32 %r1644, %r1645, %r1646, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r1644;
	ld.local.u32 	%r1649, [%rd1+12];
	ld.local.u32 	%r1650, [%rd1+8];
	// inline asm
	prmt.b32 %r1648, %r1649, %r1650, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r1648;
	ld.local.u32 	%r1653, [%rd1+8];
	ld.local.u32 	%r1654, [%rd1+4];
	// inline asm
	prmt.b32 %r1652, %r1653, %r1654, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r1652;
	ld.local.u32 	%r1657, [%rd1+4];
	ld.local.u32 	%r1658, [%rd1];
	// inline asm
	prmt.b32 %r1656, %r1657, %r1658, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r1656;
	ld.local.u32 	%r1661, [%rd1];
	// inline asm
	prmt.b32 %r1660, %r1661, %r8442, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r1660;
	st.local.u32 	[%rd6+12], %r8442;
	st.local.u32 	[%rd6+8], %r8442;
	st.local.u32 	[%rd6+4], %r8442;
	st.local.u32 	[%rd6], %r8442;
	st.local.u32 	[%rd5+12], %r8442;
	st.local.u32 	[%rd5+8], %r8442;
	st.local.u32 	[%rd5+4], %r8442;
	st.local.u32 	[%rd5], %r8442;
	st.local.u32 	[%rd4+12], %r8442;
	st.local.u32 	[%rd4+8], %r8442;
	st.local.u32 	[%rd4+4], %r8442;
	st.local.u32 	[%rd4], %r8442;
	st.local.u32 	[%rd3+12], %r8442;
	st.local.u32 	[%rd3+8], %r8442;
	st.local.u32 	[%rd3+4], %r8442;
	st.local.u32 	[%rd3], %r8442;
	st.local.u32 	[%rd2+12], %r8442;
	st.local.u32 	[%rd2+8], %r8442;
	st.local.u32 	[%rd2+4], %r8442;
	st.local.u32 	[%rd2], %r8442;
	st.local.u32 	[%rd1+12], %r8442;
	st.local.u32 	[%rd1+8], %r8442;
	mov.u64 	%rd106, 0;
	st.local.u32 	[%rd1+4], %rd106;
	st.local.u32 	[%rd1], %rd106;
	mov.u32 	%r8467, %r8442;
	mov.u32 	%r8468, %r8442;
	mov.u32 	%r8469, %r8442;
	bra.uni 	BB1_84;

BB1_102:
	setp.gt.s32	%p87, %r1, 5;
	@%p87 bra 	BB1_106;

	setp.eq.s32	%p90, %r1, 4;
	@%p90 bra 	BB1_168;
	bra.uni 	BB1_104;

BB1_168:
	ld.local.u32 	%r7744, [%rd7+12];
	ld.local.u32 	%r7745, [%rd7+8];
	// inline asm
	prmt.b32 %r7743, %r7744, %r7745, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r7743;
	ld.local.u32 	%r7748, [%rd7+8];
	ld.local.u32 	%r7749, [%rd7+4];
	// inline asm
	prmt.b32 %r7747, %r7748, %r7749, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r7747;
	ld.local.u32 	%r7752, [%rd7+4];
	ld.local.u32 	%r7753, [%rd7];
	// inline asm
	prmt.b32 %r7751, %r7752, %r7753, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r7751;
	ld.local.u32 	%r7756, [%rd7];
	ld.local.u32 	%r7757, [%rd6+12];
	// inline asm
	prmt.b32 %r7755, %r7756, %r7757, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r7755;
	ld.local.u32 	%r7760, [%rd6+12];
	ld.local.u32 	%r7761, [%rd6+8];
	// inline asm
	prmt.b32 %r7759, %r7760, %r7761, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r7759;
	ld.local.u32 	%r7764, [%rd6+8];
	ld.local.u32 	%r7765, [%rd6+4];
	// inline asm
	prmt.b32 %r7763, %r7764, %r7765, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r7763;
	ld.local.u32 	%r7768, [%rd6+4];
	ld.local.u32 	%r7769, [%rd6];
	// inline asm
	prmt.b32 %r7767, %r7768, %r7769, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r7767;
	ld.local.u32 	%r7772, [%rd6];
	ld.local.u32 	%r7773, [%rd5+12];
	// inline asm
	prmt.b32 %r7771, %r7772, %r7773, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r7771;
	ld.local.u32 	%r7776, [%rd5+12];
	ld.local.u32 	%r7777, [%rd5+8];
	// inline asm
	prmt.b32 %r7775, %r7776, %r7777, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r7775;
	ld.local.u32 	%r7780, [%rd5+8];
	ld.local.u32 	%r7781, [%rd5+4];
	// inline asm
	prmt.b32 %r7779, %r7780, %r7781, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r7779;
	ld.local.u32 	%r7784, [%rd5+4];
	ld.local.u32 	%r7785, [%rd5];
	// inline asm
	prmt.b32 %r7783, %r7784, %r7785, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r7783;
	ld.local.u32 	%r7788, [%rd5];
	ld.local.u32 	%r7789, [%rd4+12];
	// inline asm
	prmt.b32 %r7787, %r7788, %r7789, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r7787;
	ld.local.u32 	%r7792, [%rd4+12];
	ld.local.u32 	%r7793, [%rd4+8];
	// inline asm
	prmt.b32 %r7791, %r7792, %r7793, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r7791;
	ld.local.u32 	%r7796, [%rd4+8];
	ld.local.u32 	%r7797, [%rd4+4];
	// inline asm
	prmt.b32 %r7795, %r7796, %r7797, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r7795;
	ld.local.u32 	%r7800, [%rd4+4];
	ld.local.u32 	%r7801, [%rd4];
	// inline asm
	prmt.b32 %r7799, %r7800, %r7801, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r7799;
	ld.local.u32 	%r7804, [%rd4];
	ld.local.u32 	%r7805, [%rd3+12];
	// inline asm
	prmt.b32 %r7803, %r7804, %r7805, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r7803;
	ld.local.u32 	%r7808, [%rd3+12];
	ld.local.u32 	%r7809, [%rd3+8];
	// inline asm
	prmt.b32 %r7807, %r7808, %r7809, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r7807;
	ld.local.u32 	%r7812, [%rd3+8];
	ld.local.u32 	%r7813, [%rd3+4];
	// inline asm
	prmt.b32 %r7811, %r7812, %r7813, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r7811;
	ld.local.u32 	%r7816, [%rd3+4];
	ld.local.u32 	%r7817, [%rd3];
	// inline asm
	prmt.b32 %r7815, %r7816, %r7817, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r7815;
	ld.local.u32 	%r7820, [%rd3];
	ld.local.u32 	%r7821, [%rd2+12];
	// inline asm
	prmt.b32 %r7819, %r7820, %r7821, %r2;
	// inline asm
	st.local.u32 	[%rd4], %r7819;
	ld.local.u32 	%r7824, [%rd2+12];
	ld.local.u32 	%r7825, [%rd2+8];
	// inline asm
	prmt.b32 %r7823, %r7824, %r7825, %r2;
	// inline asm
	st.local.u32 	[%rd3+12], %r7823;
	ld.local.u32 	%r7828, [%rd2+8];
	ld.local.u32 	%r7829, [%rd2+4];
	// inline asm
	prmt.b32 %r7827, %r7828, %r7829, %r2;
	// inline asm
	st.local.u32 	[%rd3+8], %r7827;
	ld.local.u32 	%r7832, [%rd2+4];
	ld.local.u32 	%r7833, [%rd2];
	// inline asm
	prmt.b32 %r7831, %r7832, %r7833, %r2;
	// inline asm
	st.local.u32 	[%rd3+4], %r7831;
	ld.local.u32 	%r7836, [%rd2];
	ld.local.u32 	%r7837, [%rd1+12];
	// inline asm
	prmt.b32 %r7835, %r7836, %r7837, %r2;
	// inline asm
	st.local.u32 	[%rd3], %r7835;
	ld.local.u32 	%r7840, [%rd1+12];
	ld.local.u32 	%r7841, [%rd1+8];
	// inline asm
	prmt.b32 %r7839, %r7840, %r7841, %r2;
	// inline asm
	st.local.u32 	[%rd2+12], %r7839;
	ld.local.u32 	%r7844, [%rd1+8];
	ld.local.u32 	%r7845, [%rd1+4];
	// inline asm
	prmt.b32 %r7843, %r7844, %r7845, %r2;
	// inline asm
	st.local.u32 	[%rd2+8], %r7843;
	ld.local.u32 	%r7848, [%rd1+4];
	ld.local.u32 	%r7849, [%rd1];
	// inline asm
	prmt.b32 %r7847, %r7848, %r7849, %r2;
	// inline asm
	st.local.u32 	[%rd2+4], %r7847;
	ld.local.u32 	%r7852, [%rd1];
	mov.u32 	%r8476, 0;
	// inline asm
	prmt.b32 %r7851, %r7852, %r8476, %r2;
	// inline asm
	st.local.u32 	[%rd2], %r7851;
	st.local.u32 	[%rd1+12], %r8476;
	st.local.u32 	[%rd1+8], %r8476;
	mov.u64 	%rd1173, 0;
	st.local.u32 	[%rd1+4], %rd1173;
	st.local.u32 	[%rd1], %rd1173;
	bra.uni 	BB1_172;

BB1_12:
	setp.gt.s32	%p39, %r1, 5;
	@%p39 bra 	BB1_16;

	setp.eq.s32	%p42, %r1, 4;
	@%p42 bra 	BB1_78;
	bra.uni 	BB1_14;

BB1_78:
	ld.local.u32 	%r4524, [%rd8+12];
	mov.u32 	%r8442, 0;
	// inline asm
	prmt.b32 %r8450, %r8442, %r4524, %r2;
	// inline asm
	ld.local.u32 	%r4527, [%rd8+12];
	ld.local.u32 	%r4528, [%rd8+8];
	// inline asm
	prmt.b32 %r8443, %r4527, %r4528, %r2;
	// inline asm
	ld.local.u32 	%r4531, [%rd8+8];
	ld.local.u32 	%r4532, [%rd8+4];
	// inline asm
	prmt.b32 %r8444, %r4531, %r4532, %r2;
	// inline asm
	ld.local.u32 	%r4535, [%rd8+4];
	ld.local.u32 	%r4536, [%rd8];
	// inline asm
	prmt.b32 %r8445, %r4535, %r4536, %r2;
	// inline asm
	ld.local.u32 	%r4539, [%rd8];
	ld.local.u32 	%r4540, [%rd7+12];
	// inline asm
	prmt.b32 %r8446, %r4539, %r4540, %r2;
	// inline asm
	ld.local.u32 	%r4543, [%rd7+12];
	ld.local.u32 	%r4544, [%rd7+8];
	// inline asm
	prmt.b32 %r4542, %r4543, %r4544, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r4542;
	ld.local.u32 	%r4547, [%rd7+8];
	ld.local.u32 	%r4548, [%rd7+4];
	// inline asm
	prmt.b32 %r4546, %r4547, %r4548, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r4546;
	ld.local.u32 	%r4551, [%rd7+4];
	ld.local.u32 	%r4552, [%rd7];
	// inline asm
	prmt.b32 %r4550, %r4551, %r4552, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r4550;
	ld.local.u32 	%r4555, [%rd7];
	ld.local.u32 	%r4556, [%rd6+12];
	// inline asm
	prmt.b32 %r4554, %r4555, %r4556, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r4554;
	ld.local.u32 	%r4559, [%rd6+12];
	ld.local.u32 	%r4560, [%rd6+8];
	// inline asm
	prmt.b32 %r4558, %r4559, %r4560, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r4558;
	ld.local.u32 	%r4563, [%rd6+8];
	ld.local.u32 	%r4564, [%rd6+4];
	// inline asm
	prmt.b32 %r4562, %r4563, %r4564, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r4562;
	ld.local.u32 	%r4567, [%rd6+4];
	ld.local.u32 	%r4568, [%rd6];
	// inline asm
	prmt.b32 %r4566, %r4567, %r4568, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r4566;
	ld.local.u32 	%r4571, [%rd6];
	ld.local.u32 	%r4572, [%rd5+12];
	// inline asm
	prmt.b32 %r4570, %r4571, %r4572, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r4570;
	ld.local.u32 	%r4575, [%rd5+12];
	ld.local.u32 	%r4576, [%rd5+8];
	// inline asm
	prmt.b32 %r4574, %r4575, %r4576, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r4574;
	ld.local.u32 	%r4579, [%rd5+8];
	ld.local.u32 	%r4580, [%rd5+4];
	// inline asm
	prmt.b32 %r4578, %r4579, %r4580, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r4578;
	ld.local.u32 	%r4583, [%rd5+4];
	ld.local.u32 	%r4584, [%rd5];
	// inline asm
	prmt.b32 %r4582, %r4583, %r4584, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r4582;
	ld.local.u32 	%r4587, [%rd5];
	ld.local.u32 	%r4588, [%rd4+12];
	// inline asm
	prmt.b32 %r4586, %r4587, %r4588, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r4586;
	ld.local.u32 	%r4591, [%rd4+12];
	ld.local.u32 	%r4592, [%rd4+8];
	// inline asm
	prmt.b32 %r4590, %r4591, %r4592, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r4590;
	ld.local.u32 	%r4595, [%rd4+8];
	ld.local.u32 	%r4596, [%rd4+4];
	// inline asm
	prmt.b32 %r4594, %r4595, %r4596, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r4594;
	ld.local.u32 	%r4599, [%rd4+4];
	ld.local.u32 	%r4600, [%rd4];
	// inline asm
	prmt.b32 %r4598, %r4599, %r4600, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r4598;
	ld.local.u32 	%r4603, [%rd4];
	ld.local.u32 	%r4604, [%rd3+12];
	// inline asm
	prmt.b32 %r4602, %r4603, %r4604, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r4602;
	ld.local.u32 	%r4607, [%rd3+12];
	ld.local.u32 	%r4608, [%rd3+8];
	// inline asm
	prmt.b32 %r4606, %r4607, %r4608, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r4606;
	ld.local.u32 	%r4611, [%rd3+8];
	ld.local.u32 	%r4612, [%rd3+4];
	// inline asm
	prmt.b32 %r4610, %r4611, %r4612, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r4610;
	ld.local.u32 	%r4615, [%rd3+4];
	ld.local.u32 	%r4616, [%rd3];
	// inline asm
	prmt.b32 %r4614, %r4615, %r4616, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r4614;
	ld.local.u32 	%r4619, [%rd3];
	ld.local.u32 	%r4620, [%rd2+12];
	// inline asm
	prmt.b32 %r4618, %r4619, %r4620, %r2;
	// inline asm
	st.local.u32 	[%rd4], %r4618;
	ld.local.u32 	%r4623, [%rd2+12];
	ld.local.u32 	%r4624, [%rd2+8];
	// inline asm
	prmt.b32 %r4622, %r4623, %r4624, %r2;
	// inline asm
	st.local.u32 	[%rd3+12], %r4622;
	ld.local.u32 	%r4627, [%rd2+8];
	ld.local.u32 	%r4628, [%rd2+4];
	// inline asm
	prmt.b32 %r4626, %r4627, %r4628, %r2;
	// inline asm
	st.local.u32 	[%rd3+8], %r4626;
	ld.local.u32 	%r4631, [%rd2+4];
	ld.local.u32 	%r4632, [%rd2];
	// inline asm
	prmt.b32 %r4630, %r4631, %r4632, %r2;
	// inline asm
	st.local.u32 	[%rd3+4], %r4630;
	ld.local.u32 	%r4635, [%rd2];
	ld.local.u32 	%r4636, [%rd1+12];
	// inline asm
	prmt.b32 %r4634, %r4635, %r4636, %r2;
	// inline asm
	st.local.u32 	[%rd3], %r4634;
	ld.local.u32 	%r4639, [%rd1+12];
	ld.local.u32 	%r4640, [%rd1+8];
	// inline asm
	prmt.b32 %r4638, %r4639, %r4640, %r2;
	// inline asm
	st.local.u32 	[%rd2+12], %r4638;
	ld.local.u32 	%r4643, [%rd1+8];
	ld.local.u32 	%r4644, [%rd1+4];
	// inline asm
	prmt.b32 %r4642, %r4643, %r4644, %r2;
	// inline asm
	st.local.u32 	[%rd2+8], %r4642;
	ld.local.u32 	%r4647, [%rd1+4];
	ld.local.u32 	%r4648, [%rd1];
	// inline asm
	prmt.b32 %r4646, %r4647, %r4648, %r2;
	// inline asm
	st.local.u32 	[%rd2+4], %r4646;
	ld.local.u32 	%r4651, [%rd1];
	// inline asm
	prmt.b32 %r4650, %r4651, %r8442, %r2;
	// inline asm
	st.local.u32 	[%rd2], %r4650;
	st.local.u32 	[%rd1+12], %r8442;
	st.local.u32 	[%rd1+8], %r8442;
	mov.u64 	%rd126, 0;
	st.local.u32 	[%rd1+4], %rd126;
	st.local.u32 	[%rd1], %rd126;
	mov.u32 	%r8447, %r8442;
	mov.u32 	%r8448, %r8442;
	mov.u32 	%r8449, %r8442;
	bra.uni 	BB1_79;

BB1_133:
	setp.gt.s32	%p64, %r1, 21;
	@%p64 bra 	BB1_137;

	setp.eq.s32	%p67, %r1, 20;
	@%p67 bra 	BB1_160;
	bra.uni 	BB1_135;

BB1_160:
	ld.local.u32 	%r6480, [%rd3+12];
	ld.local.u32 	%r6481, [%rd3+8];
	// inline asm
	prmt.b32 %r6479, %r6480, %r6481, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r6479;
	ld.local.u32 	%r6484, [%rd3+8];
	ld.local.u32 	%r6485, [%rd3+4];
	// inline asm
	prmt.b32 %r6483, %r6484, %r6485, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r6483;
	ld.local.u32 	%r6488, [%rd3+4];
	ld.local.u32 	%r6489, [%rd3];
	// inline asm
	prmt.b32 %r6487, %r6488, %r6489, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r6487;
	ld.local.u32 	%r6492, [%rd3];
	ld.local.u32 	%r6493, [%rd2+12];
	// inline asm
	prmt.b32 %r6491, %r6492, %r6493, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r6491;
	ld.local.u32 	%r6496, [%rd2+12];
	ld.local.u32 	%r6497, [%rd2+8];
	// inline asm
	prmt.b32 %r6495, %r6496, %r6497, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r6495;
	ld.local.u32 	%r6500, [%rd2+8];
	ld.local.u32 	%r6501, [%rd2+4];
	// inline asm
	prmt.b32 %r6499, %r6500, %r6501, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r6499;
	ld.local.u32 	%r6504, [%rd2+4];
	ld.local.u32 	%r6505, [%rd2];
	// inline asm
	prmt.b32 %r6503, %r6504, %r6505, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r6503;
	ld.local.u32 	%r6508, [%rd2];
	ld.local.u32 	%r6509, [%rd1+12];
	// inline asm
	prmt.b32 %r6507, %r6508, %r6509, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r6507;
	ld.local.u32 	%r6512, [%rd1+12];
	ld.local.u32 	%r6513, [%rd1+8];
	// inline asm
	prmt.b32 %r6511, %r6512, %r6513, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r6511;
	ld.local.u32 	%r6516, [%rd1+8];
	ld.local.u32 	%r6517, [%rd1+4];
	// inline asm
	prmt.b32 %r6515, %r6516, %r6517, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r6515;
	ld.local.u32 	%r6520, [%rd1+4];
	ld.local.u32 	%r6521, [%rd1];
	// inline asm
	prmt.b32 %r6519, %r6520, %r6521, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r6519;
	ld.local.u32 	%r6524, [%rd1];
	mov.u32 	%r8476, 0;
	// inline asm
	prmt.b32 %r6523, %r6524, %r8476, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r6523;
	st.local.u32 	[%rd5+12], %r8476;
	st.local.u32 	[%rd5+8], %r8476;
	st.local.u32 	[%rd5+4], %r8476;
	st.local.u32 	[%rd5], %r8476;
	st.local.u32 	[%rd4+12], %r8476;
	st.local.u32 	[%rd4+8], %r8476;
	st.local.u32 	[%rd4+4], %r8476;
	st.local.u32 	[%rd4], %r8476;
	st.local.u32 	[%rd3+12], %r8476;
	st.local.u32 	[%rd3+8], %r8476;
	st.local.u32 	[%rd3+4], %r8476;
	st.local.u32 	[%rd3], %r8476;
	st.local.u32 	[%rd2+12], %r8476;
	st.local.u32 	[%rd2+8], %r8476;
	st.local.u32 	[%rd2+4], %r8476;
	st.local.u32 	[%rd2], %r8476;
	st.local.u32 	[%rd1+12], %r8476;
	st.local.u32 	[%rd1+8], %r8476;
	mov.u64 	%rd1157, 0;
	st.local.u32 	[%rd1+4], %rd1157;
	st.local.u32 	[%rd1], %rd1157;
	bra.uni 	BB1_172;

BB1_43:
	setp.gt.s32	%p16, %r1, 21;
	@%p16 bra 	BB1_47;

	setp.eq.s32	%p19, %r1, 20;
	@%p19 bra 	BB1_70;
	bra.uni 	BB1_45;

BB1_70:
	ld.local.u32 	%r2100, [%rd8+12];
	mov.u32 	%r8442, 0;
	// inline asm
	prmt.b32 %r8466, %r8442, %r2100, %r2;
	// inline asm
	ld.local.u32 	%r2103, [%rd8+12];
	ld.local.u32 	%r2104, [%rd8+8];
	// inline asm
	prmt.b32 %r8459, %r2103, %r2104, %r2;
	// inline asm
	ld.local.u32 	%r2107, [%rd8+8];
	ld.local.u32 	%r2108, [%rd8+4];
	// inline asm
	prmt.b32 %r8460, %r2107, %r2108, %r2;
	// inline asm
	ld.local.u32 	%r2111, [%rd8+4];
	ld.local.u32 	%r2112, [%rd8];
	// inline asm
	prmt.b32 %r8461, %r2111, %r2112, %r2;
	// inline asm
	ld.local.u32 	%r2115, [%rd8];
	ld.local.u32 	%r2116, [%rd7+12];
	// inline asm
	prmt.b32 %r8462, %r2115, %r2116, %r2;
	// inline asm
	ld.local.u32 	%r2119, [%rd7+12];
	ld.local.u32 	%r2120, [%rd7+8];
	// inline asm
	prmt.b32 %r8455, %r2119, %r2120, %r2;
	// inline asm
	ld.local.u32 	%r2123, [%rd7+8];
	ld.local.u32 	%r2124, [%rd7+4];
	// inline asm
	prmt.b32 %r8456, %r2123, %r2124, %r2;
	// inline asm
	ld.local.u32 	%r2127, [%rd7+4];
	ld.local.u32 	%r2128, [%rd7];
	// inline asm
	prmt.b32 %r8457, %r2127, %r2128, %r2;
	// inline asm
	ld.local.u32 	%r2131, [%rd7];
	ld.local.u32 	%r2132, [%rd6+12];
	// inline asm
	prmt.b32 %r8458, %r2131, %r2132, %r2;
	// inline asm
	ld.local.u32 	%r2135, [%rd6+12];
	ld.local.u32 	%r2136, [%rd6+8];
	// inline asm
	prmt.b32 %r8451, %r2135, %r2136, %r2;
	// inline asm
	ld.local.u32 	%r2139, [%rd6+8];
	ld.local.u32 	%r2140, [%rd6+4];
	// inline asm
	prmt.b32 %r8452, %r2139, %r2140, %r2;
	// inline asm
	ld.local.u32 	%r2143, [%rd6+4];
	ld.local.u32 	%r2144, [%rd6];
	// inline asm
	prmt.b32 %r8453, %r2143, %r2144, %r2;
	// inline asm
	ld.local.u32 	%r2147, [%rd6];
	ld.local.u32 	%r2148, [%rd5+12];
	// inline asm
	prmt.b32 %r8454, %r2147, %r2148, %r2;
	// inline asm
	ld.local.u32 	%r2151, [%rd5+12];
	ld.local.u32 	%r2152, [%rd5+8];
	// inline asm
	prmt.b32 %r8447, %r2151, %r2152, %r2;
	// inline asm
	ld.local.u32 	%r2155, [%rd5+8];
	ld.local.u32 	%r2156, [%rd5+4];
	// inline asm
	prmt.b32 %r8448, %r2155, %r2156, %r2;
	// inline asm
	ld.local.u32 	%r2159, [%rd5+4];
	ld.local.u32 	%r2160, [%rd5];
	// inline asm
	prmt.b32 %r8449, %r2159, %r2160, %r2;
	// inline asm
	ld.local.u32 	%r2163, [%rd5];
	ld.local.u32 	%r2164, [%rd4+12];
	// inline asm
	prmt.b32 %r8450, %r2163, %r2164, %r2;
	// inline asm
	ld.local.u32 	%r2167, [%rd4+12];
	ld.local.u32 	%r2168, [%rd4+8];
	// inline asm
	prmt.b32 %r8443, %r2167, %r2168, %r2;
	// inline asm
	ld.local.u32 	%r2171, [%rd4+8];
	ld.local.u32 	%r2172, [%rd4+4];
	// inline asm
	prmt.b32 %r8444, %r2171, %r2172, %r2;
	// inline asm
	ld.local.u32 	%r2175, [%rd4+4];
	ld.local.u32 	%r2176, [%rd4];
	// inline asm
	prmt.b32 %r8445, %r2175, %r2176, %r2;
	// inline asm
	ld.local.u32 	%r2179, [%rd4];
	ld.local.u32 	%r2180, [%rd3+12];
	// inline asm
	prmt.b32 %r8446, %r2179, %r2180, %r2;
	// inline asm
	ld.local.u32 	%r2183, [%rd3+12];
	ld.local.u32 	%r2184, [%rd3+8];
	// inline asm
	prmt.b32 %r2182, %r2183, %r2184, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r2182;
	ld.local.u32 	%r2187, [%rd3+8];
	ld.local.u32 	%r2188, [%rd3+4];
	// inline asm
	prmt.b32 %r2186, %r2187, %r2188, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r2186;
	ld.local.u32 	%r2191, [%rd3+4];
	ld.local.u32 	%r2192, [%rd3];
	// inline asm
	prmt.b32 %r2190, %r2191, %r2192, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r2190;
	ld.local.u32 	%r2195, [%rd3];
	ld.local.u32 	%r2196, [%rd2+12];
	// inline asm
	prmt.b32 %r2194, %r2195, %r2196, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r2194;
	ld.local.u32 	%r2199, [%rd2+12];
	ld.local.u32 	%r2200, [%rd2+8];
	// inline asm
	prmt.b32 %r2198, %r2199, %r2200, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r2198;
	ld.local.u32 	%r2203, [%rd2+8];
	ld.local.u32 	%r2204, [%rd2+4];
	// inline asm
	prmt.b32 %r2202, %r2203, %r2204, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r2202;
	ld.local.u32 	%r2207, [%rd2+4];
	ld.local.u32 	%r2208, [%rd2];
	// inline asm
	prmt.b32 %r2206, %r2207, %r2208, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r2206;
	ld.local.u32 	%r2211, [%rd2];
	ld.local.u32 	%r2212, [%rd1+12];
	// inline asm
	prmt.b32 %r2210, %r2211, %r2212, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r2210;
	ld.local.u32 	%r2215, [%rd1+12];
	ld.local.u32 	%r2216, [%rd1+8];
	// inline asm
	prmt.b32 %r2214, %r2215, %r2216, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r2214;
	ld.local.u32 	%r2219, [%rd1+8];
	ld.local.u32 	%r2220, [%rd1+4];
	// inline asm
	prmt.b32 %r2218, %r2219, %r2220, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r2218;
	ld.local.u32 	%r2223, [%rd1+4];
	ld.local.u32 	%r2224, [%rd1];
	// inline asm
	prmt.b32 %r2222, %r2223, %r2224, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r2222;
	ld.local.u32 	%r2227, [%rd1];
	// inline asm
	prmt.b32 %r2226, %r2227, %r8442, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r2226;
	st.local.u32 	[%rd5+12], %r8442;
	st.local.u32 	[%rd5+8], %r8442;
	st.local.u32 	[%rd5+4], %r8442;
	st.local.u32 	[%rd5], %r8442;
	st.local.u32 	[%rd4+12], %r8442;
	st.local.u32 	[%rd4+8], %r8442;
	st.local.u32 	[%rd4+4], %r8442;
	st.local.u32 	[%rd4], %r8442;
	st.local.u32 	[%rd3+12], %r8442;
	st.local.u32 	[%rd3+8], %r8442;
	st.local.u32 	[%rd3+4], %r8442;
	st.local.u32 	[%rd3], %r8442;
	st.local.u32 	[%rd2+12], %r8442;
	st.local.u32 	[%rd2+8], %r8442;
	st.local.u32 	[%rd2+4], %r8442;
	st.local.u32 	[%rd2], %r8442;
	st.local.u32 	[%rd1+12], %r8442;
	st.local.u32 	[%rd1+8], %r8442;
	mov.u64 	%rd110, 0;
	st.local.u32 	[%rd1+4], %rd110;
	st.local.u32 	[%rd1], %rd110;
	mov.u32 	%r8463, %r8442;
	mov.u32 	%r8464, %r8442;
	mov.u32 	%r8465, %r8442;
	bra.uni 	BB1_83;

BB1_117:
	setp.gt.s32	%p76, %r1, 13;
	@%p76 bra 	BB1_121;

	setp.eq.s32	%p79, %r1, 12;
	@%p79 bra 	BB1_164;
	bra.uni 	BB1_119;

BB1_164:
	ld.local.u32 	%r6984, [%rd5+12];
	ld.local.u32 	%r6985, [%rd5+8];
	// inline asm
	prmt.b32 %r6983, %r6984, %r6985, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r6983;
	ld.local.u32 	%r6988, [%rd5+8];
	ld.local.u32 	%r6989, [%rd5+4];
	// inline asm
	prmt.b32 %r6987, %r6988, %r6989, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r6987;
	ld.local.u32 	%r6992, [%rd5+4];
	ld.local.u32 	%r6993, [%rd5];
	// inline asm
	prmt.b32 %r6991, %r6992, %r6993, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r6991;
	ld.local.u32 	%r6996, [%rd5];
	ld.local.u32 	%r6997, [%rd4+12];
	// inline asm
	prmt.b32 %r6995, %r6996, %r6997, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r6995;
	ld.local.u32 	%r7000, [%rd4+12];
	ld.local.u32 	%r7001, [%rd4+8];
	// inline asm
	prmt.b32 %r6999, %r7000, %r7001, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r6999;
	ld.local.u32 	%r7004, [%rd4+8];
	ld.local.u32 	%r7005, [%rd4+4];
	// inline asm
	prmt.b32 %r7003, %r7004, %r7005, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r7003;
	ld.local.u32 	%r7008, [%rd4+4];
	ld.local.u32 	%r7009, [%rd4];
	// inline asm
	prmt.b32 %r7007, %r7008, %r7009, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r7007;
	ld.local.u32 	%r7012, [%rd4];
	ld.local.u32 	%r7013, [%rd3+12];
	// inline asm
	prmt.b32 %r7011, %r7012, %r7013, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r7011;
	ld.local.u32 	%r7016, [%rd3+12];
	ld.local.u32 	%r7017, [%rd3+8];
	// inline asm
	prmt.b32 %r7015, %r7016, %r7017, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r7015;
	ld.local.u32 	%r7020, [%rd3+8];
	ld.local.u32 	%r7021, [%rd3+4];
	// inline asm
	prmt.b32 %r7019, %r7020, %r7021, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r7019;
	ld.local.u32 	%r7024, [%rd3+4];
	ld.local.u32 	%r7025, [%rd3];
	// inline asm
	prmt.b32 %r7023, %r7024, %r7025, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r7023;
	ld.local.u32 	%r7028, [%rd3];
	ld.local.u32 	%r7029, [%rd2+12];
	// inline asm
	prmt.b32 %r7027, %r7028, %r7029, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r7027;
	ld.local.u32 	%r7032, [%rd2+12];
	ld.local.u32 	%r7033, [%rd2+8];
	// inline asm
	prmt.b32 %r7031, %r7032, %r7033, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r7031;
	ld.local.u32 	%r7036, [%rd2+8];
	ld.local.u32 	%r7037, [%rd2+4];
	// inline asm
	prmt.b32 %r7035, %r7036, %r7037, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r7035;
	ld.local.u32 	%r7040, [%rd2+4];
	ld.local.u32 	%r7041, [%rd2];
	// inline asm
	prmt.b32 %r7039, %r7040, %r7041, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r7039;
	ld.local.u32 	%r7044, [%rd2];
	ld.local.u32 	%r7045, [%rd1+12];
	// inline asm
	prmt.b32 %r7043, %r7044, %r7045, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r7043;
	ld.local.u32 	%r7048, [%rd1+12];
	ld.local.u32 	%r7049, [%rd1+8];
	// inline asm
	prmt.b32 %r7047, %r7048, %r7049, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r7047;
	ld.local.u32 	%r7052, [%rd1+8];
	ld.local.u32 	%r7053, [%rd1+4];
	// inline asm
	prmt.b32 %r7051, %r7052, %r7053, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r7051;
	ld.local.u32 	%r7056, [%rd1+4];
	ld.local.u32 	%r7057, [%rd1];
	// inline asm
	prmt.b32 %r7055, %r7056, %r7057, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r7055;
	ld.local.u32 	%r7060, [%rd1];
	mov.u32 	%r8476, 0;
	// inline asm
	prmt.b32 %r7059, %r7060, %r8476, %r2;
	// inline asm
	st.local.u32 	[%rd4], %r7059;
	st.local.u32 	[%rd3+12], %r8476;
	st.local.u32 	[%rd3+8], %r8476;
	st.local.u32 	[%rd3+4], %r8476;
	st.local.u32 	[%rd3], %r8476;
	st.local.u32 	[%rd2+12], %r8476;
	st.local.u32 	[%rd2+8], %r8476;
	st.local.u32 	[%rd2+4], %r8476;
	st.local.u32 	[%rd2], %r8476;
	st.local.u32 	[%rd1+12], %r8476;
	st.local.u32 	[%rd1+8], %r8476;
	mov.u64 	%rd1165, 0;
	st.local.u32 	[%rd1+4], %rd1165;
	st.local.u32 	[%rd1], %rd1165;
	bra.uni 	BB1_172;

BB1_27:
	setp.gt.s32	%p28, %r1, 13;
	@%p28 bra 	BB1_31;

	setp.eq.s32	%p31, %r1, 12;
	@%p31 bra 	BB1_74;
	bra.uni 	BB1_29;

BB1_74:
	ld.local.u32 	%r3280, [%rd8+12];
	mov.u32 	%r8442, 0;
	// inline asm
	prmt.b32 %r8458, %r8442, %r3280, %r2;
	// inline asm
	ld.local.u32 	%r3283, [%rd8+12];
	ld.local.u32 	%r3284, [%rd8+8];
	// inline asm
	prmt.b32 %r8451, %r3283, %r3284, %r2;
	// inline asm
	ld.local.u32 	%r3287, [%rd8+8];
	ld.local.u32 	%r3288, [%rd8+4];
	// inline asm
	prmt.b32 %r8452, %r3287, %r3288, %r2;
	// inline asm
	ld.local.u32 	%r3291, [%rd8+4];
	ld.local.u32 	%r3292, [%rd8];
	// inline asm
	prmt.b32 %r8453, %r3291, %r3292, %r2;
	// inline asm
	ld.local.u32 	%r3295, [%rd8];
	ld.local.u32 	%r3296, [%rd7+12];
	// inline asm
	prmt.b32 %r8454, %r3295, %r3296, %r2;
	// inline asm
	ld.local.u32 	%r3299, [%rd7+12];
	ld.local.u32 	%r3300, [%rd7+8];
	// inline asm
	prmt.b32 %r8447, %r3299, %r3300, %r2;
	// inline asm
	ld.local.u32 	%r3303, [%rd7+8];
	ld.local.u32 	%r3304, [%rd7+4];
	// inline asm
	prmt.b32 %r8448, %r3303, %r3304, %r2;
	// inline asm
	ld.local.u32 	%r3307, [%rd7+4];
	ld.local.u32 	%r3308, [%rd7];
	// inline asm
	prmt.b32 %r8449, %r3307, %r3308, %r2;
	// inline asm
	ld.local.u32 	%r3311, [%rd7];
	ld.local.u32 	%r3312, [%rd6+12];
	// inline asm
	prmt.b32 %r8450, %r3311, %r3312, %r2;
	// inline asm
	ld.local.u32 	%r3315, [%rd6+12];
	ld.local.u32 	%r3316, [%rd6+8];
	// inline asm
	prmt.b32 %r8443, %r3315, %r3316, %r2;
	// inline asm
	ld.local.u32 	%r3319, [%rd6+8];
	ld.local.u32 	%r3320, [%rd6+4];
	// inline asm
	prmt.b32 %r8444, %r3319, %r3320, %r2;
	// inline asm
	ld.local.u32 	%r3323, [%rd6+4];
	ld.local.u32 	%r3324, [%rd6];
	// inline asm
	prmt.b32 %r8445, %r3323, %r3324, %r2;
	// inline asm
	ld.local.u32 	%r3327, [%rd6];
	ld.local.u32 	%r3328, [%rd5+12];
	// inline asm
	prmt.b32 %r8446, %r3327, %r3328, %r2;
	// inline asm
	ld.local.u32 	%r3331, [%rd5+12];
	ld.local.u32 	%r3332, [%rd5+8];
	// inline asm
	prmt.b32 %r3330, %r3331, %r3332, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r3330;
	ld.local.u32 	%r3335, [%rd5+8];
	ld.local.u32 	%r3336, [%rd5+4];
	// inline asm
	prmt.b32 %r3334, %r3335, %r3336, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r3334;
	ld.local.u32 	%r3339, [%rd5+4];
	ld.local.u32 	%r3340, [%rd5];
	// inline asm
	prmt.b32 %r3338, %r3339, %r3340, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r3338;
	ld.local.u32 	%r3343, [%rd5];
	ld.local.u32 	%r3344, [%rd4+12];
	// inline asm
	prmt.b32 %r3342, %r3343, %r3344, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r3342;
	ld.local.u32 	%r3347, [%rd4+12];
	ld.local.u32 	%r3348, [%rd4+8];
	// inline asm
	prmt.b32 %r3346, %r3347, %r3348, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r3346;
	ld.local.u32 	%r3351, [%rd4+8];
	ld.local.u32 	%r3352, [%rd4+4];
	// inline asm
	prmt.b32 %r3350, %r3351, %r3352, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r3350;
	ld.local.u32 	%r3355, [%rd4+4];
	ld.local.u32 	%r3356, [%rd4];
	// inline asm
	prmt.b32 %r3354, %r3355, %r3356, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r3354;
	ld.local.u32 	%r3359, [%rd4];
	ld.local.u32 	%r3360, [%rd3+12];
	// inline asm
	prmt.b32 %r3358, %r3359, %r3360, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r3358;
	ld.local.u32 	%r3363, [%rd3+12];
	ld.local.u32 	%r3364, [%rd3+8];
	// inline asm
	prmt.b32 %r3362, %r3363, %r3364, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r3362;
	ld.local.u32 	%r3367, [%rd3+8];
	ld.local.u32 	%r3368, [%rd3+4];
	// inline asm
	prmt.b32 %r3366, %r3367, %r3368, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r3366;
	ld.local.u32 	%r3371, [%rd3+4];
	ld.local.u32 	%r3372, [%rd3];
	// inline asm
	prmt.b32 %r3370, %r3371, %r3372, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r3370;
	ld.local.u32 	%r3375, [%rd3];
	ld.local.u32 	%r3376, [%rd2+12];
	// inline asm
	prmt.b32 %r3374, %r3375, %r3376, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r3374;
	ld.local.u32 	%r3379, [%rd2+12];
	ld.local.u32 	%r3380, [%rd2+8];
	// inline asm
	prmt.b32 %r3378, %r3379, %r3380, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r3378;
	ld.local.u32 	%r3383, [%rd2+8];
	ld.local.u32 	%r3384, [%rd2+4];
	// inline asm
	prmt.b32 %r3382, %r3383, %r3384, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r3382;
	ld.local.u32 	%r3387, [%rd2+4];
	ld.local.u32 	%r3388, [%rd2];
	// inline asm
	prmt.b32 %r3386, %r3387, %r3388, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r3386;
	ld.local.u32 	%r3391, [%rd2];
	ld.local.u32 	%r3392, [%rd1+12];
	// inline asm
	prmt.b32 %r3390, %r3391, %r3392, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r3390;
	ld.local.u32 	%r3395, [%rd1+12];
	ld.local.u32 	%r3396, [%rd1+8];
	// inline asm
	prmt.b32 %r3394, %r3395, %r3396, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r3394;
	ld.local.u32 	%r3399, [%rd1+8];
	ld.local.u32 	%r3400, [%rd1+4];
	// inline asm
	prmt.b32 %r3398, %r3399, %r3400, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r3398;
	ld.local.u32 	%r3403, [%rd1+4];
	ld.local.u32 	%r3404, [%rd1];
	// inline asm
	prmt.b32 %r3402, %r3403, %r3404, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r3402;
	ld.local.u32 	%r3407, [%rd1];
	// inline asm
	prmt.b32 %r3406, %r3407, %r8442, %r2;
	// inline asm
	st.local.u32 	[%rd4], %r3406;
	st.local.u32 	[%rd3+12], %r8442;
	st.local.u32 	[%rd3+8], %r8442;
	st.local.u32 	[%rd3+4], %r8442;
	st.local.u32 	[%rd3], %r8442;
	st.local.u32 	[%rd2+12], %r8442;
	st.local.u32 	[%rd2+8], %r8442;
	st.local.u32 	[%rd2+4], %r8442;
	st.local.u32 	[%rd2], %r8442;
	st.local.u32 	[%rd1+12], %r8442;
	st.local.u32 	[%rd1+8], %r8442;
	mov.u64 	%rd118, 0;
	st.local.u32 	[%rd1+4], %rd118;
	st.local.u32 	[%rd1], %rd118;
	mov.u32 	%r8455, %r8442;
	mov.u32 	%r8456, %r8442;
	mov.u32 	%r8457, %r8442;
	bra.uni 	BB1_81;

BB1_148:
	setp.gt.s32	%p53, %r1, 29;
	@%p53 bra 	BB1_152;

	setp.eq.s32	%p56, %r1, 28;
	@%p56 bra 	BB1_156;
	bra.uni 	BB1_150;

BB1_156:
	ld.local.u32 	%r6232, [%rd1+12];
	ld.local.u32 	%r6233, [%rd1+8];
	// inline asm
	prmt.b32 %r6231, %r6232, %r6233, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r6231;
	ld.local.u32 	%r6236, [%rd1+8];
	ld.local.u32 	%r6237, [%rd1+4];
	// inline asm
	prmt.b32 %r6235, %r6236, %r6237, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r6235;
	ld.local.u32 	%r6240, [%rd1+4];
	ld.local.u32 	%r6241, [%rd1];
	// inline asm
	prmt.b32 %r6239, %r6240, %r6241, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r6239;
	ld.local.u32 	%r6244, [%rd1];
	mov.u32 	%r8476, 0;
	// inline asm
	prmt.b32 %r6243, %r6244, %r8476, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r6243;
	st.local.u32 	[%rd7+12], %r8476;
	st.local.u32 	[%rd7+8], %r8476;
	st.local.u32 	[%rd7+4], %r8476;
	st.local.u32 	[%rd7], %r8476;
	st.local.u32 	[%rd6+12], %r8476;
	st.local.u32 	[%rd6+8], %r8476;
	st.local.u32 	[%rd6+4], %r8476;
	st.local.u32 	[%rd6], %r8476;
	st.local.u32 	[%rd5+12], %r8476;
	st.local.u32 	[%rd5+8], %r8476;
	st.local.u32 	[%rd5+4], %r8476;
	st.local.u32 	[%rd5], %r8476;
	st.local.u32 	[%rd4+12], %r8476;
	st.local.u32 	[%rd4+8], %r8476;
	st.local.u32 	[%rd4+4], %r8476;
	st.local.u32 	[%rd4], %r8476;
	st.local.u32 	[%rd3+12], %r8476;
	st.local.u32 	[%rd3+8], %r8476;
	st.local.u32 	[%rd3+4], %r8476;
	st.local.u32 	[%rd3], %r8476;
	st.local.u32 	[%rd2+12], %r8476;
	st.local.u32 	[%rd2+8], %r8476;
	st.local.u32 	[%rd2+4], %r8476;
	st.local.u32 	[%rd2], %r8476;
	st.local.u32 	[%rd1+12], %r8476;
	st.local.u32 	[%rd1+8], %r8476;
	mov.u64 	%rd1149, 0;
	st.local.u32 	[%rd1+4], %rd1149;
	st.local.u32 	[%rd1], %rd1149;
	bra.uni 	BB1_172;

BB1_58:
	setp.gt.s32	%p5, %r1, 29;
	@%p5 bra 	BB1_62;

	setp.eq.s32	%p8, %r1, 28;
	@%p8 bra 	BB1_66;
	bra.uni 	BB1_60;

BB1_66:
	ld.local.u32 	%r984, [%rd8+12];
	mov.u32 	%r8442, 0;
	// inline asm
	prmt.b32 %r8474, %r8442, %r984, %r2;
	// inline asm
	ld.local.u32 	%r987, [%rd8+12];
	ld.local.u32 	%r988, [%rd8+8];
	// inline asm
	prmt.b32 %r8467, %r987, %r988, %r2;
	// inline asm
	ld.local.u32 	%r991, [%rd8+8];
	ld.local.u32 	%r992, [%rd8+4];
	// inline asm
	prmt.b32 %r8468, %r991, %r992, %r2;
	// inline asm
	ld.local.u32 	%r995, [%rd8+4];
	ld.local.u32 	%r996, [%rd8];
	// inline asm
	prmt.b32 %r8469, %r995, %r996, %r2;
	// inline asm
	ld.local.u32 	%r999, [%rd8];
	ld.local.u32 	%r1000, [%rd7+12];
	// inline asm
	prmt.b32 %r8470, %r999, %r1000, %r2;
	// inline asm
	ld.local.u32 	%r1003, [%rd7+12];
	ld.local.u32 	%r1004, [%rd7+8];
	// inline asm
	prmt.b32 %r8463, %r1003, %r1004, %r2;
	// inline asm
	ld.local.u32 	%r1007, [%rd7+8];
	ld.local.u32 	%r1008, [%rd7+4];
	// inline asm
	prmt.b32 %r8464, %r1007, %r1008, %r2;
	// inline asm
	ld.local.u32 	%r1011, [%rd7+4];
	ld.local.u32 	%r1012, [%rd7];
	// inline asm
	prmt.b32 %r8465, %r1011, %r1012, %r2;
	// inline asm
	ld.local.u32 	%r1015, [%rd7];
	ld.local.u32 	%r1016, [%rd6+12];
	// inline asm
	prmt.b32 %r8466, %r1015, %r1016, %r2;
	// inline asm
	ld.local.u32 	%r1019, [%rd6+12];
	ld.local.u32 	%r1020, [%rd6+8];
	// inline asm
	prmt.b32 %r8459, %r1019, %r1020, %r2;
	// inline asm
	ld.local.u32 	%r1023, [%rd6+8];
	ld.local.u32 	%r1024, [%rd6+4];
	// inline asm
	prmt.b32 %r8460, %r1023, %r1024, %r2;
	// inline asm
	ld.local.u32 	%r1027, [%rd6+4];
	ld.local.u32 	%r1028, [%rd6];
	// inline asm
	prmt.b32 %r8461, %r1027, %r1028, %r2;
	// inline asm
	ld.local.u32 	%r1031, [%rd6];
	ld.local.u32 	%r1032, [%rd5+12];
	// inline asm
	prmt.b32 %r8462, %r1031, %r1032, %r2;
	// inline asm
	ld.local.u32 	%r1035, [%rd5+12];
	ld.local.u32 	%r1036, [%rd5+8];
	// inline asm
	prmt.b32 %r8455, %r1035, %r1036, %r2;
	// inline asm
	ld.local.u32 	%r1039, [%rd5+8];
	ld.local.u32 	%r1040, [%rd5+4];
	// inline asm
	prmt.b32 %r8456, %r1039, %r1040, %r2;
	// inline asm
	ld.local.u32 	%r1043, [%rd5+4];
	ld.local.u32 	%r1044, [%rd5];
	// inline asm
	prmt.b32 %r8457, %r1043, %r1044, %r2;
	// inline asm
	ld.local.u32 	%r1047, [%rd5];
	ld.local.u32 	%r1048, [%rd4+12];
	// inline asm
	prmt.b32 %r8458, %r1047, %r1048, %r2;
	// inline asm
	ld.local.u32 	%r1051, [%rd4+12];
	ld.local.u32 	%r1052, [%rd4+8];
	// inline asm
	prmt.b32 %r8451, %r1051, %r1052, %r2;
	// inline asm
	ld.local.u32 	%r1055, [%rd4+8];
	ld.local.u32 	%r1056, [%rd4+4];
	// inline asm
	prmt.b32 %r8452, %r1055, %r1056, %r2;
	// inline asm
	ld.local.u32 	%r1059, [%rd4+4];
	ld.local.u32 	%r1060, [%rd4];
	// inline asm
	prmt.b32 %r8453, %r1059, %r1060, %r2;
	// inline asm
	ld.local.u32 	%r1063, [%rd4];
	ld.local.u32 	%r1064, [%rd3+12];
	// inline asm
	prmt.b32 %r8454, %r1063, %r1064, %r2;
	// inline asm
	ld.local.u32 	%r1067, [%rd3+12];
	ld.local.u32 	%r1068, [%rd3+8];
	// inline asm
	prmt.b32 %r8447, %r1067, %r1068, %r2;
	// inline asm
	ld.local.u32 	%r1071, [%rd3+8];
	ld.local.u32 	%r1072, [%rd3+4];
	// inline asm
	prmt.b32 %r8448, %r1071, %r1072, %r2;
	// inline asm
	ld.local.u32 	%r1075, [%rd3+4];
	ld.local.u32 	%r1076, [%rd3];
	// inline asm
	prmt.b32 %r8449, %r1075, %r1076, %r2;
	// inline asm
	ld.local.u32 	%r1079, [%rd3];
	ld.local.u32 	%r1080, [%rd2+12];
	// inline asm
	prmt.b32 %r8450, %r1079, %r1080, %r2;
	// inline asm
	ld.local.u32 	%r1083, [%rd2+12];
	ld.local.u32 	%r1084, [%rd2+8];
	// inline asm
	prmt.b32 %r8443, %r1083, %r1084, %r2;
	// inline asm
	ld.local.u32 	%r1087, [%rd2+8];
	ld.local.u32 	%r1088, [%rd2+4];
	// inline asm
	prmt.b32 %r8444, %r1087, %r1088, %r2;
	// inline asm
	ld.local.u32 	%r1091, [%rd2+4];
	ld.local.u32 	%r1092, [%rd2];
	// inline asm
	prmt.b32 %r8445, %r1091, %r1092, %r2;
	// inline asm
	ld.local.u32 	%r1095, [%rd2];
	ld.local.u32 	%r1096, [%rd1+12];
	// inline asm
	prmt.b32 %r8446, %r1095, %r1096, %r2;
	// inline asm
	ld.local.u32 	%r1099, [%rd1+12];
	ld.local.u32 	%r1100, [%rd1+8];
	// inline asm
	prmt.b32 %r1098, %r1099, %r1100, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r1098;
	ld.local.u32 	%r1103, [%rd1+8];
	ld.local.u32 	%r1104, [%rd1+4];
	// inline asm
	prmt.b32 %r1102, %r1103, %r1104, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r1102;
	ld.local.u32 	%r1107, [%rd1+4];
	ld.local.u32 	%r1108, [%rd1];
	// inline asm
	prmt.b32 %r1106, %r1107, %r1108, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r1106;
	ld.local.u32 	%r1111, [%rd1];
	// inline asm
	prmt.b32 %r1110, %r1111, %r8442, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r1110;
	st.local.u32 	[%rd7+12], %r8442;
	st.local.u32 	[%rd7+8], %r8442;
	st.local.u32 	[%rd7+4], %r8442;
	st.local.u32 	[%rd7], %r8442;
	st.local.u32 	[%rd6+12], %r8442;
	st.local.u32 	[%rd6+8], %r8442;
	st.local.u32 	[%rd6+4], %r8442;
	st.local.u32 	[%rd6], %r8442;
	st.local.u32 	[%rd5+12], %r8442;
	st.local.u32 	[%rd5+8], %r8442;
	st.local.u32 	[%rd5+4], %r8442;
	st.local.u32 	[%rd5], %r8442;
	st.local.u32 	[%rd4+12], %r8442;
	st.local.u32 	[%rd4+8], %r8442;
	st.local.u32 	[%rd4+4], %r8442;
	st.local.u32 	[%rd4], %r8442;
	st.local.u32 	[%rd3+12], %r8442;
	st.local.u32 	[%rd3+8], %r8442;
	st.local.u32 	[%rd3+4], %r8442;
	st.local.u32 	[%rd3], %r8442;
	st.local.u32 	[%rd2+12], %r8442;
	st.local.u32 	[%rd2+8], %r8442;
	st.local.u32 	[%rd2+4], %r8442;
	st.local.u32 	[%rd2], %r8442;
	st.local.u32 	[%rd1+12], %r8442;
	st.local.u32 	[%rd1+8], %r8442;
	mov.u64 	%rd102, 0;
	st.local.u32 	[%rd1+4], %rd102;
	st.local.u32 	[%rd1], %rd102;
	mov.u32 	%r8471, %r8442;
	mov.u32 	%r8472, %r8442;
	mov.u32 	%r8473, %r8442;
	bra.uni 	BB1_89;

BB1_99:
	setp.eq.s32	%p93, %r1, 2;
	@%p93 bra 	BB1_169;
	bra.uni 	BB1_100;

BB1_169:
	ld.local.u32 	%r7974, [%rd8+4];
	ld.local.u32 	%r7975, [%rd8];
	// inline asm
	prmt.b32 %r7973, %r7974, %r7975, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r7973;
	ld.local.u32 	%r7978, [%rd8];
	ld.local.u32 	%r7979, [%rd7+12];
	// inline asm
	prmt.b32 %r7977, %r7978, %r7979, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r7977;
	ld.local.u32 	%r7982, [%rd7+12];
	ld.local.u32 	%r7983, [%rd7+8];
	// inline asm
	prmt.b32 %r7981, %r7982, %r7983, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r7981;
	ld.local.u32 	%r7986, [%rd7+8];
	ld.local.u32 	%r7987, [%rd7+4];
	// inline asm
	prmt.b32 %r7985, %r7986, %r7987, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r7985;
	ld.local.u32 	%r7990, [%rd7+4];
	ld.local.u32 	%r7991, [%rd7];
	// inline asm
	prmt.b32 %r7989, %r7990, %r7991, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r7989;
	ld.local.u32 	%r7994, [%rd7];
	ld.local.u32 	%r7995, [%rd6+12];
	// inline asm
	prmt.b32 %r7993, %r7994, %r7995, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r7993;
	ld.local.u32 	%r7998, [%rd6+12];
	ld.local.u32 	%r7999, [%rd6+8];
	// inline asm
	prmt.b32 %r7997, %r7998, %r7999, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r7997;
	ld.local.u32 	%r8002, [%rd6+8];
	ld.local.u32 	%r8003, [%rd6+4];
	// inline asm
	prmt.b32 %r8001, %r8002, %r8003, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r8001;
	ld.local.u32 	%r8006, [%rd6+4];
	ld.local.u32 	%r8007, [%rd6];
	// inline asm
	prmt.b32 %r8005, %r8006, %r8007, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r8005;
	ld.local.u32 	%r8010, [%rd6];
	ld.local.u32 	%r8011, [%rd5+12];
	// inline asm
	prmt.b32 %r8009, %r8010, %r8011, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r8009;
	ld.local.u32 	%r8014, [%rd5+12];
	ld.local.u32 	%r8015, [%rd5+8];
	// inline asm
	prmt.b32 %r8013, %r8014, %r8015, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r8013;
	ld.local.u32 	%r8018, [%rd5+8];
	ld.local.u32 	%r8019, [%rd5+4];
	// inline asm
	prmt.b32 %r8017, %r8018, %r8019, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r8017;
	ld.local.u32 	%r8022, [%rd5+4];
	ld.local.u32 	%r8023, [%rd5];
	// inline asm
	prmt.b32 %r8021, %r8022, %r8023, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r8021;
	ld.local.u32 	%r8026, [%rd5];
	ld.local.u32 	%r8027, [%rd4+12];
	// inline asm
	prmt.b32 %r8025, %r8026, %r8027, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r8025;
	ld.local.u32 	%r8030, [%rd4+12];
	ld.local.u32 	%r8031, [%rd4+8];
	// inline asm
	prmt.b32 %r8029, %r8030, %r8031, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r8029;
	ld.local.u32 	%r8034, [%rd4+8];
	ld.local.u32 	%r8035, [%rd4+4];
	// inline asm
	prmt.b32 %r8033, %r8034, %r8035, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r8033;
	ld.local.u32 	%r8038, [%rd4+4];
	ld.local.u32 	%r8039, [%rd4];
	// inline asm
	prmt.b32 %r8037, %r8038, %r8039, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r8037;
	ld.local.u32 	%r8042, [%rd4];
	ld.local.u32 	%r8043, [%rd3+12];
	// inline asm
	prmt.b32 %r8041, %r8042, %r8043, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r8041;
	ld.local.u32 	%r8046, [%rd3+12];
	ld.local.u32 	%r8047, [%rd3+8];
	// inline asm
	prmt.b32 %r8045, %r8046, %r8047, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r8045;
	ld.local.u32 	%r8050, [%rd3+8];
	ld.local.u32 	%r8051, [%rd3+4];
	// inline asm
	prmt.b32 %r8049, %r8050, %r8051, %r2;
	// inline asm
	st.local.u32 	[%rd4], %r8049;
	ld.local.u32 	%r8054, [%rd3+4];
	ld.local.u32 	%r8055, [%rd3];
	// inline asm
	prmt.b32 %r8053, %r8054, %r8055, %r2;
	// inline asm
	st.local.u32 	[%rd3+12], %r8053;
	ld.local.u32 	%r8058, [%rd3];
	ld.local.u32 	%r8059, [%rd2+12];
	// inline asm
	prmt.b32 %r8057, %r8058, %r8059, %r2;
	// inline asm
	st.local.u32 	[%rd3+8], %r8057;
	ld.local.u32 	%r8062, [%rd2+12];
	ld.local.u32 	%r8063, [%rd2+8];
	// inline asm
	prmt.b32 %r8061, %r8062, %r8063, %r2;
	// inline asm
	st.local.u32 	[%rd3+4], %r8061;
	ld.local.u32 	%r8066, [%rd2+8];
	ld.local.u32 	%r8067, [%rd2+4];
	// inline asm
	prmt.b32 %r8065, %r8066, %r8067, %r2;
	// inline asm
	st.local.u32 	[%rd3], %r8065;
	ld.local.u32 	%r8070, [%rd2+4];
	ld.local.u32 	%r8071, [%rd2];
	// inline asm
	prmt.b32 %r8069, %r8070, %r8071, %r2;
	// inline asm
	st.local.u32 	[%rd2+12], %r8069;
	ld.local.u32 	%r8074, [%rd2];
	ld.local.u32 	%r8075, [%rd1+12];
	// inline asm
	prmt.b32 %r8073, %r8074, %r8075, %r2;
	// inline asm
	st.local.u32 	[%rd2+8], %r8073;
	ld.local.u32 	%r8078, [%rd1+12];
	ld.local.u32 	%r8079, [%rd1+8];
	// inline asm
	prmt.b32 %r8077, %r8078, %r8079, %r2;
	// inline asm
	st.local.u32 	[%rd2+4], %r8077;
	ld.local.u32 	%r8082, [%rd1+8];
	ld.local.u32 	%r8083, [%rd1+4];
	// inline asm
	prmt.b32 %r8081, %r8082, %r8083, %r2;
	// inline asm
	st.local.u32 	[%rd2], %r8081;
	ld.local.u32 	%r8086, [%rd1+4];
	ld.local.u32 	%r8087, [%rd1];
	// inline asm
	prmt.b32 %r8085, %r8086, %r8087, %r2;
	// inline asm
	st.local.u32 	[%rd1+12], %r8085;
	ld.local.u32 	%r8090, [%rd1];
	mov.u32 	%r8476, 0;
	// inline asm
	prmt.b32 %r8089, %r8090, %r8476, %r2;
	// inline asm
	st.local.u32 	[%rd1+8], %r8089;
	mov.u64 	%rd1175, 0;
	st.local.u32 	[%rd1+4], %rd1175;
	st.local.u32 	[%rd1], %rd1175;
	bra.uni 	BB1_172;

BB1_8:
	setp.eq.s32	%p45, %r1, 2;
	@%p45 bra 	BB1_85;
	bra.uni 	BB1_9;

BB1_85:
	ld.local.u32 	%r4845, [%rd8+12];
	mov.u32 	%r8442, 0;
	// inline asm
	prmt.b32 %r8444, %r8442, %r4845, %r2;
	// inline asm
	ld.local.u32 	%r4848, [%rd8+12];
	ld.local.u32 	%r4849, [%rd8+8];
	// inline asm
	prmt.b32 %r8445, %r4848, %r4849, %r2;
	// inline asm
	ld.local.u32 	%r4852, [%rd8+8];
	ld.local.u32 	%r4853, [%rd8+4];
	// inline asm
	prmt.b32 %r8446, %r4852, %r4853, %r2;
	// inline asm
	ld.local.u32 	%r4856, [%rd8+4];
	ld.local.u32 	%r4857, [%rd8];
	// inline asm
	prmt.b32 %r4855, %r4856, %r4857, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r4855;
	ld.local.u32 	%r4860, [%rd8];
	ld.local.u32 	%r4861, [%rd7+12];
	// inline asm
	prmt.b32 %r4859, %r4860, %r4861, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r4859;
	ld.local.u32 	%r4864, [%rd7+12];
	ld.local.u32 	%r4865, [%rd7+8];
	// inline asm
	prmt.b32 %r4863, %r4864, %r4865, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r4863;
	ld.local.u32 	%r4868, [%rd7+8];
	ld.local.u32 	%r4869, [%rd7+4];
	// inline asm
	prmt.b32 %r4867, %r4868, %r4869, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r4867;
	ld.local.u32 	%r4872, [%rd7+4];
	ld.local.u32 	%r4873, [%rd7];
	// inline asm
	prmt.b32 %r4871, %r4872, %r4873, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r4871;
	ld.local.u32 	%r4876, [%rd7];
	ld.local.u32 	%r4877, [%rd6+12];
	// inline asm
	prmt.b32 %r4875, %r4876, %r4877, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r4875;
	ld.local.u32 	%r4880, [%rd6+12];
	ld.local.u32 	%r4881, [%rd6+8];
	// inline asm
	prmt.b32 %r4879, %r4880, %r4881, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r4879;
	ld.local.u32 	%r4884, [%rd6+8];
	ld.local.u32 	%r4885, [%rd6+4];
	// inline asm
	prmt.b32 %r4883, %r4884, %r4885, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r4883;
	ld.local.u32 	%r4888, [%rd6+4];
	ld.local.u32 	%r4889, [%rd6];
	// inline asm
	prmt.b32 %r4887, %r4888, %r4889, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r4887;
	ld.local.u32 	%r4892, [%rd6];
	ld.local.u32 	%r4893, [%rd5+12];
	// inline asm
	prmt.b32 %r4891, %r4892, %r4893, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r4891;
	ld.local.u32 	%r4896, [%rd5+12];
	ld.local.u32 	%r4897, [%rd5+8];
	// inline asm
	prmt.b32 %r4895, %r4896, %r4897, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r4895;
	ld.local.u32 	%r4900, [%rd5+8];
	ld.local.u32 	%r4901, [%rd5+4];
	// inline asm
	prmt.b32 %r4899, %r4900, %r4901, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r4899;
	ld.local.u32 	%r4904, [%rd5+4];
	ld.local.u32 	%r4905, [%rd5];
	// inline asm
	prmt.b32 %r4903, %r4904, %r4905, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r4903;
	ld.local.u32 	%r4908, [%rd5];
	ld.local.u32 	%r4909, [%rd4+12];
	// inline asm
	prmt.b32 %r4907, %r4908, %r4909, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r4907;
	ld.local.u32 	%r4912, [%rd4+12];
	ld.local.u32 	%r4913, [%rd4+8];
	// inline asm
	prmt.b32 %r4911, %r4912, %r4913, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r4911;
	ld.local.u32 	%r4916, [%rd4+8];
	ld.local.u32 	%r4917, [%rd4+4];
	// inline asm
	prmt.b32 %r4915, %r4916, %r4917, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r4915;
	ld.local.u32 	%r4920, [%rd4+4];
	ld.local.u32 	%r4921, [%rd4];
	// inline asm
	prmt.b32 %r4919, %r4920, %r4921, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r4919;
	ld.local.u32 	%r4924, [%rd4];
	ld.local.u32 	%r4925, [%rd3+12];
	// inline asm
	prmt.b32 %r4923, %r4924, %r4925, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r4923;
	ld.local.u32 	%r4928, [%rd3+12];
	ld.local.u32 	%r4929, [%rd3+8];
	// inline asm
	prmt.b32 %r4927, %r4928, %r4929, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r4927;
	ld.local.u32 	%r4932, [%rd3+8];
	ld.local.u32 	%r4933, [%rd3+4];
	// inline asm
	prmt.b32 %r4931, %r4932, %r4933, %r2;
	// inline asm
	st.local.u32 	[%rd4], %r4931;
	ld.local.u32 	%r4936, [%rd3+4];
	ld.local.u32 	%r4937, [%rd3];
	// inline asm
	prmt.b32 %r4935, %r4936, %r4937, %r2;
	// inline asm
	st.local.u32 	[%rd3+12], %r4935;
	ld.local.u32 	%r4940, [%rd3];
	ld.local.u32 	%r4941, [%rd2+12];
	// inline asm
	prmt.b32 %r4939, %r4940, %r4941, %r2;
	// inline asm
	st.local.u32 	[%rd3+8], %r4939;
	ld.local.u32 	%r4944, [%rd2+12];
	ld.local.u32 	%r4945, [%rd2+8];
	// inline asm
	prmt.b32 %r4943, %r4944, %r4945, %r2;
	// inline asm
	st.local.u32 	[%rd3+4], %r4943;
	ld.local.u32 	%r4948, [%rd2+8];
	ld.local.u32 	%r4949, [%rd2+4];
	// inline asm
	prmt.b32 %r4947, %r4948, %r4949, %r2;
	// inline asm
	st.local.u32 	[%rd3], %r4947;
	ld.local.u32 	%r4952, [%rd2+4];
	ld.local.u32 	%r4953, [%rd2];
	// inline asm
	prmt.b32 %r4951, %r4952, %r4953, %r2;
	// inline asm
	st.local.u32 	[%rd2+12], %r4951;
	ld.local.u32 	%r4956, [%rd2];
	ld.local.u32 	%r4957, [%rd1+12];
	// inline asm
	prmt.b32 %r4955, %r4956, %r4957, %r2;
	// inline asm
	st.local.u32 	[%rd2+8], %r4955;
	ld.local.u32 	%r4960, [%rd1+12];
	ld.local.u32 	%r4961, [%rd1+8];
	// inline asm
	prmt.b32 %r4959, %r4960, %r4961, %r2;
	// inline asm
	st.local.u32 	[%rd2+4], %r4959;
	ld.local.u32 	%r4964, [%rd1+8];
	ld.local.u32 	%r4965, [%rd1+4];
	// inline asm
	prmt.b32 %r4963, %r4964, %r4965, %r2;
	// inline asm
	st.local.u32 	[%rd2], %r4963;
	ld.local.u32 	%r4968, [%rd1+4];
	ld.local.u32 	%r4969, [%rd1];
	// inline asm
	prmt.b32 %r4967, %r4968, %r4969, %r2;
	// inline asm
	st.local.u32 	[%rd1+12], %r4967;
	ld.local.u32 	%r4972, [%rd1];
	// inline asm
	prmt.b32 %r4971, %r4972, %r8442, %r2;
	// inline asm
	st.local.u32 	[%rd1+8], %r4971;
	mov.u64 	%rd128, 0;
	st.local.u32 	[%rd1+4], %rd128;
	st.local.u32 	[%rd1], %rd128;
	mov.u32 	%r8443, %r8442;
	bra.uni 	BB1_11;

BB1_130:
	setp.eq.s32	%p70, %r1, 18;
	@%p70 bra 	BB1_161;
	bra.uni 	BB1_131;

BB1_161:
	ld.local.u32 	%r6582, [%rd4+4];
	ld.local.u32 	%r6583, [%rd4];
	// inline asm
	prmt.b32 %r6581, %r6582, %r6583, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r6581;
	ld.local.u32 	%r6586, [%rd4];
	ld.local.u32 	%r6587, [%rd3+12];
	// inline asm
	prmt.b32 %r6585, %r6586, %r6587, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r6585;
	ld.local.u32 	%r6590, [%rd3+12];
	ld.local.u32 	%r6591, [%rd3+8];
	// inline asm
	prmt.b32 %r6589, %r6590, %r6591, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r6589;
	ld.local.u32 	%r6594, [%rd3+8];
	ld.local.u32 	%r6595, [%rd3+4];
	// inline asm
	prmt.b32 %r6593, %r6594, %r6595, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r6593;
	ld.local.u32 	%r6598, [%rd3+4];
	ld.local.u32 	%r6599, [%rd3];
	// inline asm
	prmt.b32 %r6597, %r6598, %r6599, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r6597;
	ld.local.u32 	%r6602, [%rd3];
	ld.local.u32 	%r6603, [%rd2+12];
	// inline asm
	prmt.b32 %r6601, %r6602, %r6603, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r6601;
	ld.local.u32 	%r6606, [%rd2+12];
	ld.local.u32 	%r6607, [%rd2+8];
	// inline asm
	prmt.b32 %r6605, %r6606, %r6607, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r6605;
	ld.local.u32 	%r6610, [%rd2+8];
	ld.local.u32 	%r6611, [%rd2+4];
	// inline asm
	prmt.b32 %r6609, %r6610, %r6611, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r6609;
	ld.local.u32 	%r6614, [%rd2+4];
	ld.local.u32 	%r6615, [%rd2];
	// inline asm
	prmt.b32 %r6613, %r6614, %r6615, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r6613;
	ld.local.u32 	%r6618, [%rd2];
	ld.local.u32 	%r6619, [%rd1+12];
	// inline asm
	prmt.b32 %r6617, %r6618, %r6619, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r6617;
	ld.local.u32 	%r6622, [%rd1+12];
	ld.local.u32 	%r6623, [%rd1+8];
	// inline asm
	prmt.b32 %r6621, %r6622, %r6623, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r6621;
	ld.local.u32 	%r6626, [%rd1+8];
	ld.local.u32 	%r6627, [%rd1+4];
	// inline asm
	prmt.b32 %r6625, %r6626, %r6627, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r6625;
	ld.local.u32 	%r6630, [%rd1+4];
	ld.local.u32 	%r6631, [%rd1];
	// inline asm
	prmt.b32 %r6629, %r6630, %r6631, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r6629;
	ld.local.u32 	%r6634, [%rd1];
	mov.u32 	%r8476, 0;
	// inline asm
	prmt.b32 %r6633, %r6634, %r8476, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r6633;
	st.local.u32 	[%rd5+4], %r8476;
	st.local.u32 	[%rd5], %r8476;
	st.local.u32 	[%rd4+12], %r8476;
	st.local.u32 	[%rd4+8], %r8476;
	st.local.u32 	[%rd4+4], %r8476;
	st.local.u32 	[%rd4], %r8476;
	st.local.u32 	[%rd3+12], %r8476;
	st.local.u32 	[%rd3+8], %r8476;
	st.local.u32 	[%rd3+4], %r8476;
	st.local.u32 	[%rd3], %r8476;
	st.local.u32 	[%rd2+12], %r8476;
	st.local.u32 	[%rd2+8], %r8476;
	st.local.u32 	[%rd2+4], %r8476;
	st.local.u32 	[%rd2], %r8476;
	st.local.u32 	[%rd1+12], %r8476;
	st.local.u32 	[%rd1+8], %r8476;
	mov.u64 	%rd1159, 0;
	st.local.u32 	[%rd1+4], %rd1159;
	st.local.u32 	[%rd1], %rd1159;
	bra.uni 	BB1_172;

BB1_40:
	setp.eq.s32	%p22, %r1, 18;
	@%p22 bra 	BB1_71;
	bra.uni 	BB1_41;

BB1_71:
	ld.local.u32 	%r2389, [%rd8+12];
	mov.u32 	%r8442, 0;
	// inline asm
	prmt.b32 %r8460, %r8442, %r2389, %r2;
	// inline asm
	ld.local.u32 	%r2392, [%rd8+12];
	ld.local.u32 	%r2393, [%rd8+8];
	// inline asm
	prmt.b32 %r8461, %r2392, %r2393, %r2;
	// inline asm
	ld.local.u32 	%r2396, [%rd8+8];
	ld.local.u32 	%r2397, [%rd8+4];
	// inline asm
	prmt.b32 %r8462, %r2396, %r2397, %r2;
	// inline asm
	ld.local.u32 	%r2400, [%rd8+4];
	ld.local.u32 	%r2401, [%rd8];
	// inline asm
	prmt.b32 %r8455, %r2400, %r2401, %r2;
	// inline asm
	ld.local.u32 	%r2404, [%rd8];
	ld.local.u32 	%r2405, [%rd7+12];
	// inline asm
	prmt.b32 %r8456, %r2404, %r2405, %r2;
	// inline asm
	ld.local.u32 	%r2408, [%rd7+12];
	ld.local.u32 	%r2409, [%rd7+8];
	// inline asm
	prmt.b32 %r8457, %r2408, %r2409, %r2;
	// inline asm
	ld.local.u32 	%r2412, [%rd7+8];
	ld.local.u32 	%r2413, [%rd7+4];
	// inline asm
	prmt.b32 %r8458, %r2412, %r2413, %r2;
	// inline asm
	ld.local.u32 	%r2416, [%rd7+4];
	ld.local.u32 	%r2417, [%rd7];
	// inline asm
	prmt.b32 %r8451, %r2416, %r2417, %r2;
	// inline asm
	ld.local.u32 	%r2420, [%rd7];
	ld.local.u32 	%r2421, [%rd6+12];
	// inline asm
	prmt.b32 %r8452, %r2420, %r2421, %r2;
	// inline asm
	ld.local.u32 	%r2424, [%rd6+12];
	ld.local.u32 	%r2425, [%rd6+8];
	// inline asm
	prmt.b32 %r8453, %r2424, %r2425, %r2;
	// inline asm
	ld.local.u32 	%r2428, [%rd6+8];
	ld.local.u32 	%r2429, [%rd6+4];
	// inline asm
	prmt.b32 %r8454, %r2428, %r2429, %r2;
	// inline asm
	ld.local.u32 	%r2432, [%rd6+4];
	ld.local.u32 	%r2433, [%rd6];
	// inline asm
	prmt.b32 %r8447, %r2432, %r2433, %r2;
	// inline asm
	ld.local.u32 	%r2436, [%rd6];
	ld.local.u32 	%r2437, [%rd5+12];
	// inline asm
	prmt.b32 %r8448, %r2436, %r2437, %r2;
	// inline asm
	ld.local.u32 	%r2440, [%rd5+12];
	ld.local.u32 	%r2441, [%rd5+8];
	// inline asm
	prmt.b32 %r8449, %r2440, %r2441, %r2;
	// inline asm
	ld.local.u32 	%r2444, [%rd5+8];
	ld.local.u32 	%r2445, [%rd5+4];
	// inline asm
	prmt.b32 %r8450, %r2444, %r2445, %r2;
	// inline asm
	ld.local.u32 	%r2448, [%rd5+4];
	ld.local.u32 	%r2449, [%rd5];
	// inline asm
	prmt.b32 %r8443, %r2448, %r2449, %r2;
	// inline asm
	ld.local.u32 	%r2452, [%rd5];
	ld.local.u32 	%r2453, [%rd4+12];
	// inline asm
	prmt.b32 %r8444, %r2452, %r2453, %r2;
	// inline asm
	ld.local.u32 	%r2456, [%rd4+12];
	ld.local.u32 	%r2457, [%rd4+8];
	// inline asm
	prmt.b32 %r8445, %r2456, %r2457, %r2;
	// inline asm
	ld.local.u32 	%r2460, [%rd4+8];
	ld.local.u32 	%r2461, [%rd4+4];
	// inline asm
	prmt.b32 %r8446, %r2460, %r2461, %r2;
	// inline asm
	ld.local.u32 	%r2464, [%rd4+4];
	ld.local.u32 	%r2465, [%rd4];
	// inline asm
	prmt.b32 %r2463, %r2464, %r2465, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r2463;
	ld.local.u32 	%r2468, [%rd4];
	ld.local.u32 	%r2469, [%rd3+12];
	// inline asm
	prmt.b32 %r2467, %r2468, %r2469, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r2467;
	ld.local.u32 	%r2472, [%rd3+12];
	ld.local.u32 	%r2473, [%rd3+8];
	// inline asm
	prmt.b32 %r2471, %r2472, %r2473, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r2471;
	ld.local.u32 	%r2476, [%rd3+8];
	ld.local.u32 	%r2477, [%rd3+4];
	// inline asm
	prmt.b32 %r2475, %r2476, %r2477, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r2475;
	ld.local.u32 	%r2480, [%rd3+4];
	ld.local.u32 	%r2481, [%rd3];
	// inline asm
	prmt.b32 %r2479, %r2480, %r2481, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r2479;
	ld.local.u32 	%r2484, [%rd3];
	ld.local.u32 	%r2485, [%rd2+12];
	// inline asm
	prmt.b32 %r2483, %r2484, %r2485, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r2483;
	ld.local.u32 	%r2488, [%rd2+12];
	ld.local.u32 	%r2489, [%rd2+8];
	// inline asm
	prmt.b32 %r2487, %r2488, %r2489, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r2487;
	ld.local.u32 	%r2492, [%rd2+8];
	ld.local.u32 	%r2493, [%rd2+4];
	// inline asm
	prmt.b32 %r2491, %r2492, %r2493, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r2491;
	ld.local.u32 	%r2496, [%rd2+4];
	ld.local.u32 	%r2497, [%rd2];
	// inline asm
	prmt.b32 %r2495, %r2496, %r2497, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r2495;
	ld.local.u32 	%r2500, [%rd2];
	ld.local.u32 	%r2501, [%rd1+12];
	// inline asm
	prmt.b32 %r2499, %r2500, %r2501, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r2499;
	ld.local.u32 	%r2504, [%rd1+12];
	ld.local.u32 	%r2505, [%rd1+8];
	// inline asm
	prmt.b32 %r2503, %r2504, %r2505, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r2503;
	ld.local.u32 	%r2508, [%rd1+8];
	ld.local.u32 	%r2509, [%rd1+4];
	// inline asm
	prmt.b32 %r2507, %r2508, %r2509, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r2507;
	ld.local.u32 	%r2512, [%rd1+4];
	ld.local.u32 	%r2513, [%rd1];
	// inline asm
	prmt.b32 %r2511, %r2512, %r2513, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r2511;
	ld.local.u32 	%r2516, [%rd1];
	// inline asm
	prmt.b32 %r2515, %r2516, %r8442, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r2515;
	st.local.u32 	[%rd5+4], %r8442;
	st.local.u32 	[%rd5], %r8442;
	st.local.u32 	[%rd4+12], %r8442;
	st.local.u32 	[%rd4+8], %r8442;
	st.local.u32 	[%rd4+4], %r8442;
	st.local.u32 	[%rd4], %r8442;
	st.local.u32 	[%rd3+12], %r8442;
	st.local.u32 	[%rd3+8], %r8442;
	st.local.u32 	[%rd3+4], %r8442;
	st.local.u32 	[%rd3], %r8442;
	st.local.u32 	[%rd2+12], %r8442;
	st.local.u32 	[%rd2+8], %r8442;
	st.local.u32 	[%rd2+4], %r8442;
	st.local.u32 	[%rd2], %r8442;
	st.local.u32 	[%rd1+12], %r8442;
	st.local.u32 	[%rd1+8], %r8442;
	mov.u64 	%rd112, 0;
	st.local.u32 	[%rd1+4], %rd112;
	st.local.u32 	[%rd1], %rd112;
	mov.u32 	%r8459, %r8442;
	bra.uni 	BB1_82;

BB1_114:
	setp.eq.s32	%p82, %r1, 10;
	@%p82 bra 	BB1_165;
	bra.uni 	BB1_115;

BB1_165:
	ld.local.u32 	%r7150, [%rd6+4];
	ld.local.u32 	%r7151, [%rd6];
	// inline asm
	prmt.b32 %r7149, %r7150, %r7151, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r7149;
	ld.local.u32 	%r7154, [%rd6];
	ld.local.u32 	%r7155, [%rd5+12];
	// inline asm
	prmt.b32 %r7153, %r7154, %r7155, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r7153;
	ld.local.u32 	%r7158, [%rd5+12];
	ld.local.u32 	%r7159, [%rd5+8];
	// inline asm
	prmt.b32 %r7157, %r7158, %r7159, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r7157;
	ld.local.u32 	%r7162, [%rd5+8];
	ld.local.u32 	%r7163, [%rd5+4];
	// inline asm
	prmt.b32 %r7161, %r7162, %r7163, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r7161;
	ld.local.u32 	%r7166, [%rd5+4];
	ld.local.u32 	%r7167, [%rd5];
	// inline asm
	prmt.b32 %r7165, %r7166, %r7167, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r7165;
	ld.local.u32 	%r7170, [%rd5];
	ld.local.u32 	%r7171, [%rd4+12];
	// inline asm
	prmt.b32 %r7169, %r7170, %r7171, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r7169;
	ld.local.u32 	%r7174, [%rd4+12];
	ld.local.u32 	%r7175, [%rd4+8];
	// inline asm
	prmt.b32 %r7173, %r7174, %r7175, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r7173;
	ld.local.u32 	%r7178, [%rd4+8];
	ld.local.u32 	%r7179, [%rd4+4];
	// inline asm
	prmt.b32 %r7177, %r7178, %r7179, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r7177;
	ld.local.u32 	%r7182, [%rd4+4];
	ld.local.u32 	%r7183, [%rd4];
	// inline asm
	prmt.b32 %r7181, %r7182, %r7183, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r7181;
	ld.local.u32 	%r7186, [%rd4];
	ld.local.u32 	%r7187, [%rd3+12];
	// inline asm
	prmt.b32 %r7185, %r7186, %r7187, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r7185;
	ld.local.u32 	%r7190, [%rd3+12];
	ld.local.u32 	%r7191, [%rd3+8];
	// inline asm
	prmt.b32 %r7189, %r7190, %r7191, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r7189;
	ld.local.u32 	%r7194, [%rd3+8];
	ld.local.u32 	%r7195, [%rd3+4];
	// inline asm
	prmt.b32 %r7193, %r7194, %r7195, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r7193;
	ld.local.u32 	%r7198, [%rd3+4];
	ld.local.u32 	%r7199, [%rd3];
	// inline asm
	prmt.b32 %r7197, %r7198, %r7199, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r7197;
	ld.local.u32 	%r7202, [%rd3];
	ld.local.u32 	%r7203, [%rd2+12];
	// inline asm
	prmt.b32 %r7201, %r7202, %r7203, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r7201;
	ld.local.u32 	%r7206, [%rd2+12];
	ld.local.u32 	%r7207, [%rd2+8];
	// inline asm
	prmt.b32 %r7205, %r7206, %r7207, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r7205;
	ld.local.u32 	%r7210, [%rd2+8];
	ld.local.u32 	%r7211, [%rd2+4];
	// inline asm
	prmt.b32 %r7209, %r7210, %r7211, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r7209;
	ld.local.u32 	%r7214, [%rd2+4];
	ld.local.u32 	%r7215, [%rd2];
	// inline asm
	prmt.b32 %r7213, %r7214, %r7215, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r7213;
	ld.local.u32 	%r7218, [%rd2];
	ld.local.u32 	%r7219, [%rd1+12];
	// inline asm
	prmt.b32 %r7217, %r7218, %r7219, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r7217;
	ld.local.u32 	%r7222, [%rd1+12];
	ld.local.u32 	%r7223, [%rd1+8];
	// inline asm
	prmt.b32 %r7221, %r7222, %r7223, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r7221;
	ld.local.u32 	%r7226, [%rd1+8];
	ld.local.u32 	%r7227, [%rd1+4];
	// inline asm
	prmt.b32 %r7225, %r7226, %r7227, %r2;
	// inline asm
	st.local.u32 	[%rd4], %r7225;
	ld.local.u32 	%r7230, [%rd1+4];
	ld.local.u32 	%r7231, [%rd1];
	// inline asm
	prmt.b32 %r7229, %r7230, %r7231, %r2;
	// inline asm
	st.local.u32 	[%rd3+12], %r7229;
	ld.local.u32 	%r7234, [%rd1];
	mov.u32 	%r8476, 0;
	// inline asm
	prmt.b32 %r7233, %r7234, %r8476, %r2;
	// inline asm
	st.local.u32 	[%rd3+8], %r7233;
	st.local.u32 	[%rd3+4], %r8476;
	st.local.u32 	[%rd3], %r8476;
	st.local.u32 	[%rd2+12], %r8476;
	st.local.u32 	[%rd2+8], %r8476;
	st.local.u32 	[%rd2+4], %r8476;
	st.local.u32 	[%rd2], %r8476;
	st.local.u32 	[%rd1+12], %r8476;
	st.local.u32 	[%rd1+8], %r8476;
	mov.u64 	%rd1167, 0;
	st.local.u32 	[%rd1+4], %rd1167;
	st.local.u32 	[%rd1], %rd1167;
	bra.uni 	BB1_172;

BB1_24:
	setp.eq.s32	%p34, %r1, 10;
	@%p34 bra 	BB1_75;
	bra.uni 	BB1_25;

BB1_75:
	ld.local.u32 	%r3585, [%rd8+12];
	mov.u32 	%r8442, 0;
	// inline asm
	prmt.b32 %r8452, %r8442, %r3585, %r2;
	// inline asm
	ld.local.u32 	%r3588, [%rd8+12];
	ld.local.u32 	%r3589, [%rd8+8];
	// inline asm
	prmt.b32 %r8453, %r3588, %r3589, %r2;
	// inline asm
	ld.local.u32 	%r3592, [%rd8+8];
	ld.local.u32 	%r3593, [%rd8+4];
	// inline asm
	prmt.b32 %r8454, %r3592, %r3593, %r2;
	// inline asm
	ld.local.u32 	%r3596, [%rd8+4];
	ld.local.u32 	%r3597, [%rd8];
	// inline asm
	prmt.b32 %r8447, %r3596, %r3597, %r2;
	// inline asm
	ld.local.u32 	%r3600, [%rd8];
	ld.local.u32 	%r3601, [%rd7+12];
	// inline asm
	prmt.b32 %r8448, %r3600, %r3601, %r2;
	// inline asm
	ld.local.u32 	%r3604, [%rd7+12];
	ld.local.u32 	%r3605, [%rd7+8];
	// inline asm
	prmt.b32 %r8449, %r3604, %r3605, %r2;
	// inline asm
	ld.local.u32 	%r3608, [%rd7+8];
	ld.local.u32 	%r3609, [%rd7+4];
	// inline asm
	prmt.b32 %r8450, %r3608, %r3609, %r2;
	// inline asm
	ld.local.u32 	%r3612, [%rd7+4];
	ld.local.u32 	%r3613, [%rd7];
	// inline asm
	prmt.b32 %r8443, %r3612, %r3613, %r2;
	// inline asm
	ld.local.u32 	%r3616, [%rd7];
	ld.local.u32 	%r3617, [%rd6+12];
	// inline asm
	prmt.b32 %r8444, %r3616, %r3617, %r2;
	// inline asm
	ld.local.u32 	%r3620, [%rd6+12];
	ld.local.u32 	%r3621, [%rd6+8];
	// inline asm
	prmt.b32 %r8445, %r3620, %r3621, %r2;
	// inline asm
	ld.local.u32 	%r3624, [%rd6+8];
	ld.local.u32 	%r3625, [%rd6+4];
	// inline asm
	prmt.b32 %r8446, %r3624, %r3625, %r2;
	// inline asm
	ld.local.u32 	%r3628, [%rd6+4];
	ld.local.u32 	%r3629, [%rd6];
	// inline asm
	prmt.b32 %r3627, %r3628, %r3629, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r3627;
	ld.local.u32 	%r3632, [%rd6];
	ld.local.u32 	%r3633, [%rd5+12];
	// inline asm
	prmt.b32 %r3631, %r3632, %r3633, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r3631;
	ld.local.u32 	%r3636, [%rd5+12];
	ld.local.u32 	%r3637, [%rd5+8];
	// inline asm
	prmt.b32 %r3635, %r3636, %r3637, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r3635;
	ld.local.u32 	%r3640, [%rd5+8];
	ld.local.u32 	%r3641, [%rd5+4];
	// inline asm
	prmt.b32 %r3639, %r3640, %r3641, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r3639;
	ld.local.u32 	%r3644, [%rd5+4];
	ld.local.u32 	%r3645, [%rd5];
	// inline asm
	prmt.b32 %r3643, %r3644, %r3645, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r3643;
	ld.local.u32 	%r3648, [%rd5];
	ld.local.u32 	%r3649, [%rd4+12];
	// inline asm
	prmt.b32 %r3647, %r3648, %r3649, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r3647;
	ld.local.u32 	%r3652, [%rd4+12];
	ld.local.u32 	%r3653, [%rd4+8];
	// inline asm
	prmt.b32 %r3651, %r3652, %r3653, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r3651;
	ld.local.u32 	%r3656, [%rd4+8];
	ld.local.u32 	%r3657, [%rd4+4];
	// inline asm
	prmt.b32 %r3655, %r3656, %r3657, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r3655;
	ld.local.u32 	%r3660, [%rd4+4];
	ld.local.u32 	%r3661, [%rd4];
	// inline asm
	prmt.b32 %r3659, %r3660, %r3661, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r3659;
	ld.local.u32 	%r3664, [%rd4];
	ld.local.u32 	%r3665, [%rd3+12];
	// inline asm
	prmt.b32 %r3663, %r3664, %r3665, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r3663;
	ld.local.u32 	%r3668, [%rd3+12];
	ld.local.u32 	%r3669, [%rd3+8];
	// inline asm
	prmt.b32 %r3667, %r3668, %r3669, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r3667;
	ld.local.u32 	%r3672, [%rd3+8];
	ld.local.u32 	%r3673, [%rd3+4];
	// inline asm
	prmt.b32 %r3671, %r3672, %r3673, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r3671;
	ld.local.u32 	%r3676, [%rd3+4];
	ld.local.u32 	%r3677, [%rd3];
	// inline asm
	prmt.b32 %r3675, %r3676, %r3677, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r3675;
	ld.local.u32 	%r3680, [%rd3];
	ld.local.u32 	%r3681, [%rd2+12];
	// inline asm
	prmt.b32 %r3679, %r3680, %r3681, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r3679;
	ld.local.u32 	%r3684, [%rd2+12];
	ld.local.u32 	%r3685, [%rd2+8];
	// inline asm
	prmt.b32 %r3683, %r3684, %r3685, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r3683;
	ld.local.u32 	%r3688, [%rd2+8];
	ld.local.u32 	%r3689, [%rd2+4];
	// inline asm
	prmt.b32 %r3687, %r3688, %r3689, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r3687;
	ld.local.u32 	%r3692, [%rd2+4];
	ld.local.u32 	%r3693, [%rd2];
	// inline asm
	prmt.b32 %r3691, %r3692, %r3693, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r3691;
	ld.local.u32 	%r3696, [%rd2];
	ld.local.u32 	%r3697, [%rd1+12];
	// inline asm
	prmt.b32 %r3695, %r3696, %r3697, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r3695;
	ld.local.u32 	%r3700, [%rd1+12];
	ld.local.u32 	%r3701, [%rd1+8];
	// inline asm
	prmt.b32 %r3699, %r3700, %r3701, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r3699;
	ld.local.u32 	%r3704, [%rd1+8];
	ld.local.u32 	%r3705, [%rd1+4];
	// inline asm
	prmt.b32 %r3703, %r3704, %r3705, %r2;
	// inline asm
	st.local.u32 	[%rd4], %r3703;
	ld.local.u32 	%r3708, [%rd1+4];
	ld.local.u32 	%r3709, [%rd1];
	// inline asm
	prmt.b32 %r3707, %r3708, %r3709, %r2;
	// inline asm
	st.local.u32 	[%rd3+12], %r3707;
	ld.local.u32 	%r3712, [%rd1];
	// inline asm
	prmt.b32 %r3711, %r3712, %r8442, %r2;
	// inline asm
	st.local.u32 	[%rd3+8], %r3711;
	st.local.u32 	[%rd3+4], %r8442;
	st.local.u32 	[%rd3], %r8442;
	st.local.u32 	[%rd2+12], %r8442;
	st.local.u32 	[%rd2+8], %r8442;
	st.local.u32 	[%rd2+4], %r8442;
	st.local.u32 	[%rd2], %r8442;
	st.local.u32 	[%rd1+12], %r8442;
	st.local.u32 	[%rd1+8], %r8442;
	mov.u64 	%rd120, 0;
	st.local.u32 	[%rd1+4], %rd120;
	st.local.u32 	[%rd1], %rd120;
	mov.u32 	%r8451, %r8442;
	bra.uni 	BB1_80;

BB1_145:
	setp.eq.s32	%p59, %r1, 26;
	@%p59 bra 	BB1_157;
	bra.uni 	BB1_146;

BB1_157:
	ld.local.u32 	%r6270, [%rd2+4];
	ld.local.u32 	%r6271, [%rd2];
	// inline asm
	prmt.b32 %r6269, %r6270, %r6271, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r6269;
	ld.local.u32 	%r6274, [%rd2];
	ld.local.u32 	%r6275, [%rd1+12];
	// inline asm
	prmt.b32 %r6273, %r6274, %r6275, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r6273;
	ld.local.u32 	%r6278, [%rd1+12];
	ld.local.u32 	%r6279, [%rd1+8];
	// inline asm
	prmt.b32 %r6277, %r6278, %r6279, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r6277;
	ld.local.u32 	%r6282, [%rd1+8];
	ld.local.u32 	%r6283, [%rd1+4];
	// inline asm
	prmt.b32 %r6281, %r6282, %r6283, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r6281;
	ld.local.u32 	%r6286, [%rd1+4];
	ld.local.u32 	%r6287, [%rd1];
	// inline asm
	prmt.b32 %r6285, %r6286, %r6287, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r6285;
	ld.local.u32 	%r6290, [%rd1];
	mov.u32 	%r8476, 0;
	// inline asm
	prmt.b32 %r6289, %r6290, %r8476, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r6289;
	st.local.u32 	[%rd7+4], %r8476;
	st.local.u32 	[%rd7], %r8476;
	st.local.u32 	[%rd6+12], %r8476;
	st.local.u32 	[%rd6+8], %r8476;
	st.local.u32 	[%rd6+4], %r8476;
	st.local.u32 	[%rd6], %r8476;
	st.local.u32 	[%rd5+12], %r8476;
	st.local.u32 	[%rd5+8], %r8476;
	st.local.u32 	[%rd5+4], %r8476;
	st.local.u32 	[%rd5], %r8476;
	st.local.u32 	[%rd4+12], %r8476;
	st.local.u32 	[%rd4+8], %r8476;
	st.local.u32 	[%rd4+4], %r8476;
	st.local.u32 	[%rd4], %r8476;
	st.local.u32 	[%rd3+12], %r8476;
	st.local.u32 	[%rd3+8], %r8476;
	st.local.u32 	[%rd3+4], %r8476;
	st.local.u32 	[%rd3], %r8476;
	st.local.u32 	[%rd2+12], %r8476;
	st.local.u32 	[%rd2+8], %r8476;
	st.local.u32 	[%rd2+4], %r8476;
	st.local.u32 	[%rd2], %r8476;
	st.local.u32 	[%rd1+12], %r8476;
	st.local.u32 	[%rd1+8], %r8476;
	mov.u64 	%rd1151, 0;
	st.local.u32 	[%rd1+4], %rd1151;
	st.local.u32 	[%rd1], %rd1151;
	bra.uni 	BB1_172;

BB1_55:
	setp.eq.s32	%p11, %r1, 26;
	@%p11 bra 	BB1_67;
	bra.uni 	BB1_56;

BB1_67:
	ld.local.u32 	%r1257, [%rd8+12];
	mov.u32 	%r8442, 0;
	// inline asm
	prmt.b32 %r8468, %r8442, %r1257, %r2;
	// inline asm
	ld.local.u32 	%r1260, [%rd8+12];
	ld.local.u32 	%r1261, [%rd8+8];
	// inline asm
	prmt.b32 %r8469, %r1260, %r1261, %r2;
	// inline asm
	ld.local.u32 	%r1264, [%rd8+8];
	ld.local.u32 	%r1265, [%rd8+4];
	// inline asm
	prmt.b32 %r8470, %r1264, %r1265, %r2;
	// inline asm
	ld.local.u32 	%r1268, [%rd8+4];
	ld.local.u32 	%r1269, [%rd8];
	// inline asm
	prmt.b32 %r8463, %r1268, %r1269, %r2;
	// inline asm
	ld.local.u32 	%r1272, [%rd8];
	ld.local.u32 	%r1273, [%rd7+12];
	// inline asm
	prmt.b32 %r8464, %r1272, %r1273, %r2;
	// inline asm
	ld.local.u32 	%r1276, [%rd7+12];
	ld.local.u32 	%r1277, [%rd7+8];
	// inline asm
	prmt.b32 %r8465, %r1276, %r1277, %r2;
	// inline asm
	ld.local.u32 	%r1280, [%rd7+8];
	ld.local.u32 	%r1281, [%rd7+4];
	// inline asm
	prmt.b32 %r8466, %r1280, %r1281, %r2;
	// inline asm
	ld.local.u32 	%r1284, [%rd7+4];
	ld.local.u32 	%r1285, [%rd7];
	// inline asm
	prmt.b32 %r8459, %r1284, %r1285, %r2;
	// inline asm
	ld.local.u32 	%r1288, [%rd7];
	ld.local.u32 	%r1289, [%rd6+12];
	// inline asm
	prmt.b32 %r8460, %r1288, %r1289, %r2;
	// inline asm
	ld.local.u32 	%r1292, [%rd6+12];
	ld.local.u32 	%r1293, [%rd6+8];
	// inline asm
	prmt.b32 %r8461, %r1292, %r1293, %r2;
	// inline asm
	ld.local.u32 	%r1296, [%rd6+8];
	ld.local.u32 	%r1297, [%rd6+4];
	// inline asm
	prmt.b32 %r8462, %r1296, %r1297, %r2;
	// inline asm
	ld.local.u32 	%r1300, [%rd6+4];
	ld.local.u32 	%r1301, [%rd6];
	// inline asm
	prmt.b32 %r8455, %r1300, %r1301, %r2;
	// inline asm
	ld.local.u32 	%r1304, [%rd6];
	ld.local.u32 	%r1305, [%rd5+12];
	// inline asm
	prmt.b32 %r8456, %r1304, %r1305, %r2;
	// inline asm
	ld.local.u32 	%r1308, [%rd5+12];
	ld.local.u32 	%r1309, [%rd5+8];
	// inline asm
	prmt.b32 %r8457, %r1308, %r1309, %r2;
	// inline asm
	ld.local.u32 	%r1312, [%rd5+8];
	ld.local.u32 	%r1313, [%rd5+4];
	// inline asm
	prmt.b32 %r8458, %r1312, %r1313, %r2;
	// inline asm
	ld.local.u32 	%r1316, [%rd5+4];
	ld.local.u32 	%r1317, [%rd5];
	// inline asm
	prmt.b32 %r8451, %r1316, %r1317, %r2;
	// inline asm
	ld.local.u32 	%r1320, [%rd5];
	ld.local.u32 	%r1321, [%rd4+12];
	// inline asm
	prmt.b32 %r8452, %r1320, %r1321, %r2;
	// inline asm
	ld.local.u32 	%r1324, [%rd4+12];
	ld.local.u32 	%r1325, [%rd4+8];
	// inline asm
	prmt.b32 %r8453, %r1324, %r1325, %r2;
	// inline asm
	ld.local.u32 	%r1328, [%rd4+8];
	ld.local.u32 	%r1329, [%rd4+4];
	// inline asm
	prmt.b32 %r8454, %r1328, %r1329, %r2;
	// inline asm
	ld.local.u32 	%r1332, [%rd4+4];
	ld.local.u32 	%r1333, [%rd4];
	// inline asm
	prmt.b32 %r8447, %r1332, %r1333, %r2;
	// inline asm
	ld.local.u32 	%r1336, [%rd4];
	ld.local.u32 	%r1337, [%rd3+12];
	// inline asm
	prmt.b32 %r8448, %r1336, %r1337, %r2;
	// inline asm
	ld.local.u32 	%r1340, [%rd3+12];
	ld.local.u32 	%r1341, [%rd3+8];
	// inline asm
	prmt.b32 %r8449, %r1340, %r1341, %r2;
	// inline asm
	ld.local.u32 	%r1344, [%rd3+8];
	ld.local.u32 	%r1345, [%rd3+4];
	// inline asm
	prmt.b32 %r8450, %r1344, %r1345, %r2;
	// inline asm
	ld.local.u32 	%r1348, [%rd3+4];
	ld.local.u32 	%r1349, [%rd3];
	// inline asm
	prmt.b32 %r8443, %r1348, %r1349, %r2;
	// inline asm
	ld.local.u32 	%r1352, [%rd3];
	ld.local.u32 	%r1353, [%rd2+12];
	// inline asm
	prmt.b32 %r8444, %r1352, %r1353, %r2;
	// inline asm
	ld.local.u32 	%r1356, [%rd2+12];
	ld.local.u32 	%r1357, [%rd2+8];
	// inline asm
	prmt.b32 %r8445, %r1356, %r1357, %r2;
	// inline asm
	ld.local.u32 	%r1360, [%rd2+8];
	ld.local.u32 	%r1361, [%rd2+4];
	// inline asm
	prmt.b32 %r8446, %r1360, %r1361, %r2;
	// inline asm
	ld.local.u32 	%r1364, [%rd2+4];
	ld.local.u32 	%r1365, [%rd2];
	// inline asm
	prmt.b32 %r1363, %r1364, %r1365, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r1363;
	ld.local.u32 	%r1368, [%rd2];
	ld.local.u32 	%r1369, [%rd1+12];
	// inline asm
	prmt.b32 %r1367, %r1368, %r1369, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r1367;
	ld.local.u32 	%r1372, [%rd1+12];
	ld.local.u32 	%r1373, [%rd1+8];
	// inline asm
	prmt.b32 %r1371, %r1372, %r1373, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r1371;
	ld.local.u32 	%r1376, [%rd1+8];
	ld.local.u32 	%r1377, [%rd1+4];
	// inline asm
	prmt.b32 %r1375, %r1376, %r1377, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r1375;
	ld.local.u32 	%r1380, [%rd1+4];
	ld.local.u32 	%r1381, [%rd1];
	// inline asm
	prmt.b32 %r1379, %r1380, %r1381, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r1379;
	ld.local.u32 	%r1384, [%rd1];
	// inline asm
	prmt.b32 %r1383, %r1384, %r8442, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r1383;
	st.local.u32 	[%rd7+4], %r8442;
	st.local.u32 	[%rd7], %r8442;
	st.local.u32 	[%rd6+12], %r8442;
	st.local.u32 	[%rd6+8], %r8442;
	st.local.u32 	[%rd6+4], %r8442;
	st.local.u32 	[%rd6], %r8442;
	st.local.u32 	[%rd5+12], %r8442;
	st.local.u32 	[%rd5+8], %r8442;
	st.local.u32 	[%rd5+4], %r8442;
	st.local.u32 	[%rd5], %r8442;
	st.local.u32 	[%rd4+12], %r8442;
	st.local.u32 	[%rd4+8], %r8442;
	st.local.u32 	[%rd4+4], %r8442;
	st.local.u32 	[%rd4], %r8442;
	st.local.u32 	[%rd3+12], %r8442;
	st.local.u32 	[%rd3+8], %r8442;
	st.local.u32 	[%rd3+4], %r8442;
	st.local.u32 	[%rd3], %r8442;
	st.local.u32 	[%rd2+12], %r8442;
	st.local.u32 	[%rd2+8], %r8442;
	st.local.u32 	[%rd2+4], %r8442;
	st.local.u32 	[%rd2], %r8442;
	st.local.u32 	[%rd1+12], %r8442;
	st.local.u32 	[%rd1+8], %r8442;
	mov.u64 	%rd104, 0;
	st.local.u32 	[%rd1+4], %rd104;
	st.local.u32 	[%rd1], %rd104;
	mov.u32 	%r8467, %r8442;
	bra.uni 	BB1_84;

BB1_106:
	setp.eq.s32	%p88, %r1, 6;
	@%p88 bra 	BB1_167;
	bra.uni 	BB1_107;

BB1_167:
	ld.local.u32 	%r7530, [%rd7+4];
	ld.local.u32 	%r7531, [%rd7];
	// inline asm
	prmt.b32 %r7529, %r7530, %r7531, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r7529;
	ld.local.u32 	%r7534, [%rd7];
	ld.local.u32 	%r7535, [%rd6+12];
	// inline asm
	prmt.b32 %r7533, %r7534, %r7535, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r7533;
	ld.local.u32 	%r7538, [%rd6+12];
	ld.local.u32 	%r7539, [%rd6+8];
	// inline asm
	prmt.b32 %r7537, %r7538, %r7539, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r7537;
	ld.local.u32 	%r7542, [%rd6+8];
	ld.local.u32 	%r7543, [%rd6+4];
	// inline asm
	prmt.b32 %r7541, %r7542, %r7543, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r7541;
	ld.local.u32 	%r7546, [%rd6+4];
	ld.local.u32 	%r7547, [%rd6];
	// inline asm
	prmt.b32 %r7545, %r7546, %r7547, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r7545;
	ld.local.u32 	%r7550, [%rd6];
	ld.local.u32 	%r7551, [%rd5+12];
	// inline asm
	prmt.b32 %r7549, %r7550, %r7551, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r7549;
	ld.local.u32 	%r7554, [%rd5+12];
	ld.local.u32 	%r7555, [%rd5+8];
	// inline asm
	prmt.b32 %r7553, %r7554, %r7555, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r7553;
	ld.local.u32 	%r7558, [%rd5+8];
	ld.local.u32 	%r7559, [%rd5+4];
	// inline asm
	prmt.b32 %r7557, %r7558, %r7559, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r7557;
	ld.local.u32 	%r7562, [%rd5+4];
	ld.local.u32 	%r7563, [%rd5];
	// inline asm
	prmt.b32 %r7561, %r7562, %r7563, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r7561;
	ld.local.u32 	%r7566, [%rd5];
	ld.local.u32 	%r7567, [%rd4+12];
	// inline asm
	prmt.b32 %r7565, %r7566, %r7567, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r7565;
	ld.local.u32 	%r7570, [%rd4+12];
	ld.local.u32 	%r7571, [%rd4+8];
	// inline asm
	prmt.b32 %r7569, %r7570, %r7571, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r7569;
	ld.local.u32 	%r7574, [%rd4+8];
	ld.local.u32 	%r7575, [%rd4+4];
	// inline asm
	prmt.b32 %r7573, %r7574, %r7575, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r7573;
	ld.local.u32 	%r7578, [%rd4+4];
	ld.local.u32 	%r7579, [%rd4];
	// inline asm
	prmt.b32 %r7577, %r7578, %r7579, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r7577;
	ld.local.u32 	%r7582, [%rd4];
	ld.local.u32 	%r7583, [%rd3+12];
	// inline asm
	prmt.b32 %r7581, %r7582, %r7583, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r7581;
	ld.local.u32 	%r7586, [%rd3+12];
	ld.local.u32 	%r7587, [%rd3+8];
	// inline asm
	prmt.b32 %r7585, %r7586, %r7587, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r7585;
	ld.local.u32 	%r7590, [%rd3+8];
	ld.local.u32 	%r7591, [%rd3+4];
	// inline asm
	prmt.b32 %r7589, %r7590, %r7591, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r7589;
	ld.local.u32 	%r7594, [%rd3+4];
	ld.local.u32 	%r7595, [%rd3];
	// inline asm
	prmt.b32 %r7593, %r7594, %r7595, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r7593;
	ld.local.u32 	%r7598, [%rd3];
	ld.local.u32 	%r7599, [%rd2+12];
	// inline asm
	prmt.b32 %r7597, %r7598, %r7599, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r7597;
	ld.local.u32 	%r7602, [%rd2+12];
	ld.local.u32 	%r7603, [%rd2+8];
	// inline asm
	prmt.b32 %r7601, %r7602, %r7603, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r7601;
	ld.local.u32 	%r7606, [%rd2+8];
	ld.local.u32 	%r7607, [%rd2+4];
	// inline asm
	prmt.b32 %r7605, %r7606, %r7607, %r2;
	// inline asm
	st.local.u32 	[%rd4], %r7605;
	ld.local.u32 	%r7610, [%rd2+4];
	ld.local.u32 	%r7611, [%rd2];
	// inline asm
	prmt.b32 %r7609, %r7610, %r7611, %r2;
	// inline asm
	st.local.u32 	[%rd3+12], %r7609;
	ld.local.u32 	%r7614, [%rd2];
	ld.local.u32 	%r7615, [%rd1+12];
	// inline asm
	prmt.b32 %r7613, %r7614, %r7615, %r2;
	// inline asm
	st.local.u32 	[%rd3+8], %r7613;
	ld.local.u32 	%r7618, [%rd1+12];
	ld.local.u32 	%r7619, [%rd1+8];
	// inline asm
	prmt.b32 %r7617, %r7618, %r7619, %r2;
	// inline asm
	st.local.u32 	[%rd3+4], %r7617;
	ld.local.u32 	%r7622, [%rd1+8];
	ld.local.u32 	%r7623, [%rd1+4];
	// inline asm
	prmt.b32 %r7621, %r7622, %r7623, %r2;
	// inline asm
	st.local.u32 	[%rd3], %r7621;
	ld.local.u32 	%r7626, [%rd1+4];
	ld.local.u32 	%r7627, [%rd1];
	// inline asm
	prmt.b32 %r7625, %r7626, %r7627, %r2;
	// inline asm
	st.local.u32 	[%rd2+12], %r7625;
	ld.local.u32 	%r7630, [%rd1];
	mov.u32 	%r8476, 0;
	// inline asm
	prmt.b32 %r7629, %r7630, %r8476, %r2;
	// inline asm
	st.local.u32 	[%rd2+8], %r7629;
	st.local.u32 	[%rd2+4], %r8476;
	st.local.u32 	[%rd2], %r8476;
	st.local.u32 	[%rd1+12], %r8476;
	st.local.u32 	[%rd1+8], %r8476;
	mov.u64 	%rd1171, 0;
	st.local.u32 	[%rd1+4], %rd1171;
	st.local.u32 	[%rd1], %rd1171;
	bra.uni 	BB1_172;

BB1_16:
	setp.eq.s32	%p40, %r1, 6;
	@%p40 bra 	BB1_77;
	bra.uni 	BB1_17;

BB1_77:
	ld.local.u32 	%r4207, [%rd8+12];
	mov.u32 	%r8442, 0;
	// inline asm
	prmt.b32 %r8448, %r8442, %r4207, %r2;
	// inline asm
	ld.local.u32 	%r4210, [%rd8+12];
	ld.local.u32 	%r4211, [%rd8+8];
	// inline asm
	prmt.b32 %r8449, %r4210, %r4211, %r2;
	// inline asm
	ld.local.u32 	%r4214, [%rd8+8];
	ld.local.u32 	%r4215, [%rd8+4];
	// inline asm
	prmt.b32 %r8450, %r4214, %r4215, %r2;
	// inline asm
	ld.local.u32 	%r4218, [%rd8+4];
	ld.local.u32 	%r4219, [%rd8];
	// inline asm
	prmt.b32 %r8443, %r4218, %r4219, %r2;
	// inline asm
	ld.local.u32 	%r4222, [%rd8];
	ld.local.u32 	%r4223, [%rd7+12];
	// inline asm
	prmt.b32 %r8444, %r4222, %r4223, %r2;
	// inline asm
	ld.local.u32 	%r4226, [%rd7+12];
	ld.local.u32 	%r4227, [%rd7+8];
	// inline asm
	prmt.b32 %r8445, %r4226, %r4227, %r2;
	// inline asm
	ld.local.u32 	%r4230, [%rd7+8];
	ld.local.u32 	%r4231, [%rd7+4];
	// inline asm
	prmt.b32 %r8446, %r4230, %r4231, %r2;
	// inline asm
	ld.local.u32 	%r4234, [%rd7+4];
	ld.local.u32 	%r4235, [%rd7];
	// inline asm
	prmt.b32 %r4233, %r4234, %r4235, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r4233;
	ld.local.u32 	%r4238, [%rd7];
	ld.local.u32 	%r4239, [%rd6+12];
	// inline asm
	prmt.b32 %r4237, %r4238, %r4239, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r4237;
	ld.local.u32 	%r4242, [%rd6+12];
	ld.local.u32 	%r4243, [%rd6+8];
	// inline asm
	prmt.b32 %r4241, %r4242, %r4243, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r4241;
	ld.local.u32 	%r4246, [%rd6+8];
	ld.local.u32 	%r4247, [%rd6+4];
	// inline asm
	prmt.b32 %r4245, %r4246, %r4247, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r4245;
	ld.local.u32 	%r4250, [%rd6+4];
	ld.local.u32 	%r4251, [%rd6];
	// inline asm
	prmt.b32 %r4249, %r4250, %r4251, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r4249;
	ld.local.u32 	%r4254, [%rd6];
	ld.local.u32 	%r4255, [%rd5+12];
	// inline asm
	prmt.b32 %r4253, %r4254, %r4255, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r4253;
	ld.local.u32 	%r4258, [%rd5+12];
	ld.local.u32 	%r4259, [%rd5+8];
	// inline asm
	prmt.b32 %r4257, %r4258, %r4259, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r4257;
	ld.local.u32 	%r4262, [%rd5+8];
	ld.local.u32 	%r4263, [%rd5+4];
	// inline asm
	prmt.b32 %r4261, %r4262, %r4263, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r4261;
	ld.local.u32 	%r4266, [%rd5+4];
	ld.local.u32 	%r4267, [%rd5];
	// inline asm
	prmt.b32 %r4265, %r4266, %r4267, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r4265;
	ld.local.u32 	%r4270, [%rd5];
	ld.local.u32 	%r4271, [%rd4+12];
	// inline asm
	prmt.b32 %r4269, %r4270, %r4271, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r4269;
	ld.local.u32 	%r4274, [%rd4+12];
	ld.local.u32 	%r4275, [%rd4+8];
	// inline asm
	prmt.b32 %r4273, %r4274, %r4275, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r4273;
	ld.local.u32 	%r4278, [%rd4+8];
	ld.local.u32 	%r4279, [%rd4+4];
	// inline asm
	prmt.b32 %r4277, %r4278, %r4279, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r4277;
	ld.local.u32 	%r4282, [%rd4+4];
	ld.local.u32 	%r4283, [%rd4];
	// inline asm
	prmt.b32 %r4281, %r4282, %r4283, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r4281;
	ld.local.u32 	%r4286, [%rd4];
	ld.local.u32 	%r4287, [%rd3+12];
	// inline asm
	prmt.b32 %r4285, %r4286, %r4287, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r4285;
	ld.local.u32 	%r4290, [%rd3+12];
	ld.local.u32 	%r4291, [%rd3+8];
	// inline asm
	prmt.b32 %r4289, %r4290, %r4291, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r4289;
	ld.local.u32 	%r4294, [%rd3+8];
	ld.local.u32 	%r4295, [%rd3+4];
	// inline asm
	prmt.b32 %r4293, %r4294, %r4295, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r4293;
	ld.local.u32 	%r4298, [%rd3+4];
	ld.local.u32 	%r4299, [%rd3];
	// inline asm
	prmt.b32 %r4297, %r4298, %r4299, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r4297;
	ld.local.u32 	%r4302, [%rd3];
	ld.local.u32 	%r4303, [%rd2+12];
	// inline asm
	prmt.b32 %r4301, %r4302, %r4303, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r4301;
	ld.local.u32 	%r4306, [%rd2+12];
	ld.local.u32 	%r4307, [%rd2+8];
	// inline asm
	prmt.b32 %r4305, %r4306, %r4307, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r4305;
	ld.local.u32 	%r4310, [%rd2+8];
	ld.local.u32 	%r4311, [%rd2+4];
	// inline asm
	prmt.b32 %r4309, %r4310, %r4311, %r2;
	// inline asm
	st.local.u32 	[%rd4], %r4309;
	ld.local.u32 	%r4314, [%rd2+4];
	ld.local.u32 	%r4315, [%rd2];
	// inline asm
	prmt.b32 %r4313, %r4314, %r4315, %r2;
	// inline asm
	st.local.u32 	[%rd3+12], %r4313;
	ld.local.u32 	%r4318, [%rd2];
	ld.local.u32 	%r4319, [%rd1+12];
	// inline asm
	prmt.b32 %r4317, %r4318, %r4319, %r2;
	// inline asm
	st.local.u32 	[%rd3+8], %r4317;
	ld.local.u32 	%r4322, [%rd1+12];
	ld.local.u32 	%r4323, [%rd1+8];
	// inline asm
	prmt.b32 %r4321, %r4322, %r4323, %r2;
	// inline asm
	st.local.u32 	[%rd3+4], %r4321;
	ld.local.u32 	%r4326, [%rd1+8];
	ld.local.u32 	%r4327, [%rd1+4];
	// inline asm
	prmt.b32 %r4325, %r4326, %r4327, %r2;
	// inline asm
	st.local.u32 	[%rd3], %r4325;
	ld.local.u32 	%r4330, [%rd1+4];
	ld.local.u32 	%r4331, [%rd1];
	// inline asm
	prmt.b32 %r4329, %r4330, %r4331, %r2;
	// inline asm
	st.local.u32 	[%rd2+12], %r4329;
	ld.local.u32 	%r4334, [%rd1];
	// inline asm
	prmt.b32 %r4333, %r4334, %r8442, %r2;
	// inline asm
	st.local.u32 	[%rd2+8], %r4333;
	st.local.u32 	[%rd2+4], %r8442;
	st.local.u32 	[%rd2], %r8442;
	st.local.u32 	[%rd1+12], %r8442;
	st.local.u32 	[%rd1+8], %r8442;
	mov.u64 	%rd124, 0;
	st.local.u32 	[%rd1+4], %rd124;
	st.local.u32 	[%rd1], %rd124;
	mov.u32 	%r8447, %r8442;
	bra.uni 	BB1_79;

BB1_137:
	setp.eq.s32	%p65, %r1, 22;
	@%p65 bra 	BB1_159;
	bra.uni 	BB1_138;

BB1_159:
	ld.local.u32 	%r6394, [%rd3+4];
	ld.local.u32 	%r6395, [%rd3];
	// inline asm
	prmt.b32 %r6393, %r6394, %r6395, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r6393;
	ld.local.u32 	%r6398, [%rd3];
	ld.local.u32 	%r6399, [%rd2+12];
	// inline asm
	prmt.b32 %r6397, %r6398, %r6399, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r6397;
	ld.local.u32 	%r6402, [%rd2+12];
	ld.local.u32 	%r6403, [%rd2+8];
	// inline asm
	prmt.b32 %r6401, %r6402, %r6403, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r6401;
	ld.local.u32 	%r6406, [%rd2+8];
	ld.local.u32 	%r6407, [%rd2+4];
	// inline asm
	prmt.b32 %r6405, %r6406, %r6407, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r6405;
	ld.local.u32 	%r6410, [%rd2+4];
	ld.local.u32 	%r6411, [%rd2];
	// inline asm
	prmt.b32 %r6409, %r6410, %r6411, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r6409;
	ld.local.u32 	%r6414, [%rd2];
	ld.local.u32 	%r6415, [%rd1+12];
	// inline asm
	prmt.b32 %r6413, %r6414, %r6415, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r6413;
	ld.local.u32 	%r6418, [%rd1+12];
	ld.local.u32 	%r6419, [%rd1+8];
	// inline asm
	prmt.b32 %r6417, %r6418, %r6419, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r6417;
	ld.local.u32 	%r6422, [%rd1+8];
	ld.local.u32 	%r6423, [%rd1+4];
	// inline asm
	prmt.b32 %r6421, %r6422, %r6423, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r6421;
	ld.local.u32 	%r6426, [%rd1+4];
	ld.local.u32 	%r6427, [%rd1];
	// inline asm
	prmt.b32 %r6425, %r6426, %r6427, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r6425;
	ld.local.u32 	%r6430, [%rd1];
	mov.u32 	%r8476, 0;
	// inline asm
	prmt.b32 %r6429, %r6430, %r8476, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r6429;
	st.local.u32 	[%rd6+4], %r8476;
	st.local.u32 	[%rd6], %r8476;
	st.local.u32 	[%rd5+12], %r8476;
	st.local.u32 	[%rd5+8], %r8476;
	st.local.u32 	[%rd5+4], %r8476;
	st.local.u32 	[%rd5], %r8476;
	st.local.u32 	[%rd4+12], %r8476;
	st.local.u32 	[%rd4+8], %r8476;
	st.local.u32 	[%rd4+4], %r8476;
	st.local.u32 	[%rd4], %r8476;
	st.local.u32 	[%rd3+12], %r8476;
	st.local.u32 	[%rd3+8], %r8476;
	st.local.u32 	[%rd3+4], %r8476;
	st.local.u32 	[%rd3], %r8476;
	st.local.u32 	[%rd2+12], %r8476;
	st.local.u32 	[%rd2+8], %r8476;
	st.local.u32 	[%rd2+4], %r8476;
	st.local.u32 	[%rd2], %r8476;
	st.local.u32 	[%rd1+12], %r8476;
	st.local.u32 	[%rd1+8], %r8476;
	mov.u64 	%rd1155, 0;
	st.local.u32 	[%rd1+4], %rd1155;
	st.local.u32 	[%rd1], %rd1155;
	bra.uni 	BB1_172;

BB1_47:
	setp.eq.s32	%p17, %r1, 22;
	@%p17 bra 	BB1_69;
	bra.uni 	BB1_48;

BB1_69:
	ld.local.u32 	%r1815, [%rd8+12];
	mov.u32 	%r8442, 0;
	// inline asm
	prmt.b32 %r8464, %r8442, %r1815, %r2;
	// inline asm
	ld.local.u32 	%r1818, [%rd8+12];
	ld.local.u32 	%r1819, [%rd8+8];
	// inline asm
	prmt.b32 %r8465, %r1818, %r1819, %r2;
	// inline asm
	ld.local.u32 	%r1822, [%rd8+8];
	ld.local.u32 	%r1823, [%rd8+4];
	// inline asm
	prmt.b32 %r8466, %r1822, %r1823, %r2;
	// inline asm
	ld.local.u32 	%r1826, [%rd8+4];
	ld.local.u32 	%r1827, [%rd8];
	// inline asm
	prmt.b32 %r8459, %r1826, %r1827, %r2;
	// inline asm
	ld.local.u32 	%r1830, [%rd8];
	ld.local.u32 	%r1831, [%rd7+12];
	// inline asm
	prmt.b32 %r8460, %r1830, %r1831, %r2;
	// inline asm
	ld.local.u32 	%r1834, [%rd7+12];
	ld.local.u32 	%r1835, [%rd7+8];
	// inline asm
	prmt.b32 %r8461, %r1834, %r1835, %r2;
	// inline asm
	ld.local.u32 	%r1838, [%rd7+8];
	ld.local.u32 	%r1839, [%rd7+4];
	// inline asm
	prmt.b32 %r8462, %r1838, %r1839, %r2;
	// inline asm
	ld.local.u32 	%r1842, [%rd7+4];
	ld.local.u32 	%r1843, [%rd7];
	// inline asm
	prmt.b32 %r8455, %r1842, %r1843, %r2;
	// inline asm
	ld.local.u32 	%r1846, [%rd7];
	ld.local.u32 	%r1847, [%rd6+12];
	// inline asm
	prmt.b32 %r8456, %r1846, %r1847, %r2;
	// inline asm
	ld.local.u32 	%r1850, [%rd6+12];
	ld.local.u32 	%r1851, [%rd6+8];
	// inline asm
	prmt.b32 %r8457, %r1850, %r1851, %r2;
	// inline asm
	ld.local.u32 	%r1854, [%rd6+8];
	ld.local.u32 	%r1855, [%rd6+4];
	// inline asm
	prmt.b32 %r8458, %r1854, %r1855, %r2;
	// inline asm
	ld.local.u32 	%r1858, [%rd6+4];
	ld.local.u32 	%r1859, [%rd6];
	// inline asm
	prmt.b32 %r8451, %r1858, %r1859, %r2;
	// inline asm
	ld.local.u32 	%r1862, [%rd6];
	ld.local.u32 	%r1863, [%rd5+12];
	// inline asm
	prmt.b32 %r8452, %r1862, %r1863, %r2;
	// inline asm
	ld.local.u32 	%r1866, [%rd5+12];
	ld.local.u32 	%r1867, [%rd5+8];
	// inline asm
	prmt.b32 %r8453, %r1866, %r1867, %r2;
	// inline asm
	ld.local.u32 	%r1870, [%rd5+8];
	ld.local.u32 	%r1871, [%rd5+4];
	// inline asm
	prmt.b32 %r8454, %r1870, %r1871, %r2;
	// inline asm
	ld.local.u32 	%r1874, [%rd5+4];
	ld.local.u32 	%r1875, [%rd5];
	// inline asm
	prmt.b32 %r8447, %r1874, %r1875, %r2;
	// inline asm
	ld.local.u32 	%r1878, [%rd5];
	ld.local.u32 	%r1879, [%rd4+12];
	// inline asm
	prmt.b32 %r8448, %r1878, %r1879, %r2;
	// inline asm
	ld.local.u32 	%r1882, [%rd4+12];
	ld.local.u32 	%r1883, [%rd4+8];
	// inline asm
	prmt.b32 %r8449, %r1882, %r1883, %r2;
	// inline asm
	ld.local.u32 	%r1886, [%rd4+8];
	ld.local.u32 	%r1887, [%rd4+4];
	// inline asm
	prmt.b32 %r8450, %r1886, %r1887, %r2;
	// inline asm
	ld.local.u32 	%r1890, [%rd4+4];
	ld.local.u32 	%r1891, [%rd4];
	// inline asm
	prmt.b32 %r8443, %r1890, %r1891, %r2;
	// inline asm
	ld.local.u32 	%r1894, [%rd4];
	ld.local.u32 	%r1895, [%rd3+12];
	// inline asm
	prmt.b32 %r8444, %r1894, %r1895, %r2;
	// inline asm
	ld.local.u32 	%r1898, [%rd3+12];
	ld.local.u32 	%r1899, [%rd3+8];
	// inline asm
	prmt.b32 %r8445, %r1898, %r1899, %r2;
	// inline asm
	ld.local.u32 	%r1902, [%rd3+8];
	ld.local.u32 	%r1903, [%rd3+4];
	// inline asm
	prmt.b32 %r8446, %r1902, %r1903, %r2;
	// inline asm
	ld.local.u32 	%r1906, [%rd3+4];
	ld.local.u32 	%r1907, [%rd3];
	// inline asm
	prmt.b32 %r1905, %r1906, %r1907, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r1905;
	ld.local.u32 	%r1910, [%rd3];
	ld.local.u32 	%r1911, [%rd2+12];
	// inline asm
	prmt.b32 %r1909, %r1910, %r1911, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r1909;
	ld.local.u32 	%r1914, [%rd2+12];
	ld.local.u32 	%r1915, [%rd2+8];
	// inline asm
	prmt.b32 %r1913, %r1914, %r1915, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r1913;
	ld.local.u32 	%r1918, [%rd2+8];
	ld.local.u32 	%r1919, [%rd2+4];
	// inline asm
	prmt.b32 %r1917, %r1918, %r1919, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r1917;
	ld.local.u32 	%r1922, [%rd2+4];
	ld.local.u32 	%r1923, [%rd2];
	// inline asm
	prmt.b32 %r1921, %r1922, %r1923, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r1921;
	ld.local.u32 	%r1926, [%rd2];
	ld.local.u32 	%r1927, [%rd1+12];
	// inline asm
	prmt.b32 %r1925, %r1926, %r1927, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r1925;
	ld.local.u32 	%r1930, [%rd1+12];
	ld.local.u32 	%r1931, [%rd1+8];
	// inline asm
	prmt.b32 %r1929, %r1930, %r1931, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r1929;
	ld.local.u32 	%r1934, [%rd1+8];
	ld.local.u32 	%r1935, [%rd1+4];
	// inline asm
	prmt.b32 %r1933, %r1934, %r1935, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r1933;
	ld.local.u32 	%r1938, [%rd1+4];
	ld.local.u32 	%r1939, [%rd1];
	// inline asm
	prmt.b32 %r1937, %r1938, %r1939, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r1937;
	ld.local.u32 	%r1942, [%rd1];
	// inline asm
	prmt.b32 %r1941, %r1942, %r8442, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r1941;
	st.local.u32 	[%rd6+4], %r8442;
	st.local.u32 	[%rd6], %r8442;
	st.local.u32 	[%rd5+12], %r8442;
	st.local.u32 	[%rd5+8], %r8442;
	st.local.u32 	[%rd5+4], %r8442;
	st.local.u32 	[%rd5], %r8442;
	st.local.u32 	[%rd4+12], %r8442;
	st.local.u32 	[%rd4+8], %r8442;
	st.local.u32 	[%rd4+4], %r8442;
	st.local.u32 	[%rd4], %r8442;
	st.local.u32 	[%rd3+12], %r8442;
	st.local.u32 	[%rd3+8], %r8442;
	st.local.u32 	[%rd3+4], %r8442;
	st.local.u32 	[%rd3], %r8442;
	st.local.u32 	[%rd2+12], %r8442;
	st.local.u32 	[%rd2+8], %r8442;
	st.local.u32 	[%rd2+4], %r8442;
	st.local.u32 	[%rd2], %r8442;
	st.local.u32 	[%rd1+12], %r8442;
	st.local.u32 	[%rd1+8], %r8442;
	mov.u64 	%rd108, 0;
	st.local.u32 	[%rd1+4], %rd108;
	st.local.u32 	[%rd1], %rd108;
	mov.u32 	%r8463, %r8442;
	bra.uni 	BB1_83;

BB1_121:
	setp.eq.s32	%p77, %r1, 14;
	@%p77 bra 	BB1_163;
	bra.uni 	BB1_122;

BB1_163:
	ld.local.u32 	%r6834, [%rd5+4];
	ld.local.u32 	%r6835, [%rd5];
	// inline asm
	prmt.b32 %r6833, %r6834, %r6835, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r6833;
	ld.local.u32 	%r6838, [%rd5];
	ld.local.u32 	%r6839, [%rd4+12];
	// inline asm
	prmt.b32 %r6837, %r6838, %r6839, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r6837;
	ld.local.u32 	%r6842, [%rd4+12];
	ld.local.u32 	%r6843, [%rd4+8];
	// inline asm
	prmt.b32 %r6841, %r6842, %r6843, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r6841;
	ld.local.u32 	%r6846, [%rd4+8];
	ld.local.u32 	%r6847, [%rd4+4];
	// inline asm
	prmt.b32 %r6845, %r6846, %r6847, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r6845;
	ld.local.u32 	%r6850, [%rd4+4];
	ld.local.u32 	%r6851, [%rd4];
	// inline asm
	prmt.b32 %r6849, %r6850, %r6851, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r6849;
	ld.local.u32 	%r6854, [%rd4];
	ld.local.u32 	%r6855, [%rd3+12];
	// inline asm
	prmt.b32 %r6853, %r6854, %r6855, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r6853;
	ld.local.u32 	%r6858, [%rd3+12];
	ld.local.u32 	%r6859, [%rd3+8];
	// inline asm
	prmt.b32 %r6857, %r6858, %r6859, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r6857;
	ld.local.u32 	%r6862, [%rd3+8];
	ld.local.u32 	%r6863, [%rd3+4];
	// inline asm
	prmt.b32 %r6861, %r6862, %r6863, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r6861;
	ld.local.u32 	%r6866, [%rd3+4];
	ld.local.u32 	%r6867, [%rd3];
	// inline asm
	prmt.b32 %r6865, %r6866, %r6867, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r6865;
	ld.local.u32 	%r6870, [%rd3];
	ld.local.u32 	%r6871, [%rd2+12];
	// inline asm
	prmt.b32 %r6869, %r6870, %r6871, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r6869;
	ld.local.u32 	%r6874, [%rd2+12];
	ld.local.u32 	%r6875, [%rd2+8];
	// inline asm
	prmt.b32 %r6873, %r6874, %r6875, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r6873;
	ld.local.u32 	%r6878, [%rd2+8];
	ld.local.u32 	%r6879, [%rd2+4];
	// inline asm
	prmt.b32 %r6877, %r6878, %r6879, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r6877;
	ld.local.u32 	%r6882, [%rd2+4];
	ld.local.u32 	%r6883, [%rd2];
	// inline asm
	prmt.b32 %r6881, %r6882, %r6883, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r6881;
	ld.local.u32 	%r6886, [%rd2];
	ld.local.u32 	%r6887, [%rd1+12];
	// inline asm
	prmt.b32 %r6885, %r6886, %r6887, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r6885;
	ld.local.u32 	%r6890, [%rd1+12];
	ld.local.u32 	%r6891, [%rd1+8];
	// inline asm
	prmt.b32 %r6889, %r6890, %r6891, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r6889;
	ld.local.u32 	%r6894, [%rd1+8];
	ld.local.u32 	%r6895, [%rd1+4];
	// inline asm
	prmt.b32 %r6893, %r6894, %r6895, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r6893;
	ld.local.u32 	%r6898, [%rd1+4];
	ld.local.u32 	%r6899, [%rd1];
	// inline asm
	prmt.b32 %r6897, %r6898, %r6899, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r6897;
	ld.local.u32 	%r6902, [%rd1];
	mov.u32 	%r8476, 0;
	// inline asm
	prmt.b32 %r6901, %r6902, %r8476, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r6901;
	st.local.u32 	[%rd4+4], %r8476;
	st.local.u32 	[%rd4], %r8476;
	st.local.u32 	[%rd3+12], %r8476;
	st.local.u32 	[%rd3+8], %r8476;
	st.local.u32 	[%rd3+4], %r8476;
	st.local.u32 	[%rd3], %r8476;
	st.local.u32 	[%rd2+12], %r8476;
	st.local.u32 	[%rd2+8], %r8476;
	st.local.u32 	[%rd2+4], %r8476;
	st.local.u32 	[%rd2], %r8476;
	st.local.u32 	[%rd1+12], %r8476;
	st.local.u32 	[%rd1+8], %r8476;
	mov.u64 	%rd1163, 0;
	st.local.u32 	[%rd1+4], %rd1163;
	st.local.u32 	[%rd1], %rd1163;
	bra.uni 	BB1_172;

BB1_31:
	setp.eq.s32	%p29, %r1, 14;
	@%p29 bra 	BB1_73;
	bra.uni 	BB1_32;

BB1_73:
	ld.local.u32 	%r2979, [%rd8+12];
	mov.u32 	%r8442, 0;
	// inline asm
	prmt.b32 %r8456, %r8442, %r2979, %r2;
	// inline asm
	ld.local.u32 	%r2982, [%rd8+12];
	ld.local.u32 	%r2983, [%rd8+8];
	// inline asm
	prmt.b32 %r8457, %r2982, %r2983, %r2;
	// inline asm
	ld.local.u32 	%r2986, [%rd8+8];
	ld.local.u32 	%r2987, [%rd8+4];
	// inline asm
	prmt.b32 %r8458, %r2986, %r2987, %r2;
	// inline asm
	ld.local.u32 	%r2990, [%rd8+4];
	ld.local.u32 	%r2991, [%rd8];
	// inline asm
	prmt.b32 %r8451, %r2990, %r2991, %r2;
	// inline asm
	ld.local.u32 	%r2994, [%rd8];
	ld.local.u32 	%r2995, [%rd7+12];
	// inline asm
	prmt.b32 %r8452, %r2994, %r2995, %r2;
	// inline asm
	ld.local.u32 	%r2998, [%rd7+12];
	ld.local.u32 	%r2999, [%rd7+8];
	// inline asm
	prmt.b32 %r8453, %r2998, %r2999, %r2;
	// inline asm
	ld.local.u32 	%r3002, [%rd7+8];
	ld.local.u32 	%r3003, [%rd7+4];
	// inline asm
	prmt.b32 %r8454, %r3002, %r3003, %r2;
	// inline asm
	ld.local.u32 	%r3006, [%rd7+4];
	ld.local.u32 	%r3007, [%rd7];
	// inline asm
	prmt.b32 %r8447, %r3006, %r3007, %r2;
	// inline asm
	ld.local.u32 	%r3010, [%rd7];
	ld.local.u32 	%r3011, [%rd6+12];
	// inline asm
	prmt.b32 %r8448, %r3010, %r3011, %r2;
	// inline asm
	ld.local.u32 	%r3014, [%rd6+12];
	ld.local.u32 	%r3015, [%rd6+8];
	// inline asm
	prmt.b32 %r8449, %r3014, %r3015, %r2;
	// inline asm
	ld.local.u32 	%r3018, [%rd6+8];
	ld.local.u32 	%r3019, [%rd6+4];
	// inline asm
	prmt.b32 %r8450, %r3018, %r3019, %r2;
	// inline asm
	ld.local.u32 	%r3022, [%rd6+4];
	ld.local.u32 	%r3023, [%rd6];
	// inline asm
	prmt.b32 %r8443, %r3022, %r3023, %r2;
	// inline asm
	ld.local.u32 	%r3026, [%rd6];
	ld.local.u32 	%r3027, [%rd5+12];
	// inline asm
	prmt.b32 %r8444, %r3026, %r3027, %r2;
	// inline asm
	ld.local.u32 	%r3030, [%rd5+12];
	ld.local.u32 	%r3031, [%rd5+8];
	// inline asm
	prmt.b32 %r8445, %r3030, %r3031, %r2;
	// inline asm
	ld.local.u32 	%r3034, [%rd5+8];
	ld.local.u32 	%r3035, [%rd5+4];
	// inline asm
	prmt.b32 %r8446, %r3034, %r3035, %r2;
	// inline asm
	ld.local.u32 	%r3038, [%rd5+4];
	ld.local.u32 	%r3039, [%rd5];
	// inline asm
	prmt.b32 %r3037, %r3038, %r3039, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r3037;
	ld.local.u32 	%r3042, [%rd5];
	ld.local.u32 	%r3043, [%rd4+12];
	// inline asm
	prmt.b32 %r3041, %r3042, %r3043, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r3041;
	ld.local.u32 	%r3046, [%rd4+12];
	ld.local.u32 	%r3047, [%rd4+8];
	// inline asm
	prmt.b32 %r3045, %r3046, %r3047, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r3045;
	ld.local.u32 	%r3050, [%rd4+8];
	ld.local.u32 	%r3051, [%rd4+4];
	// inline asm
	prmt.b32 %r3049, %r3050, %r3051, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r3049;
	ld.local.u32 	%r3054, [%rd4+4];
	ld.local.u32 	%r3055, [%rd4];
	// inline asm
	prmt.b32 %r3053, %r3054, %r3055, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r3053;
	ld.local.u32 	%r3058, [%rd4];
	ld.local.u32 	%r3059, [%rd3+12];
	// inline asm
	prmt.b32 %r3057, %r3058, %r3059, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r3057;
	ld.local.u32 	%r3062, [%rd3+12];
	ld.local.u32 	%r3063, [%rd3+8];
	// inline asm
	prmt.b32 %r3061, %r3062, %r3063, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r3061;
	ld.local.u32 	%r3066, [%rd3+8];
	ld.local.u32 	%r3067, [%rd3+4];
	// inline asm
	prmt.b32 %r3065, %r3066, %r3067, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r3065;
	ld.local.u32 	%r3070, [%rd3+4];
	ld.local.u32 	%r3071, [%rd3];
	// inline asm
	prmt.b32 %r3069, %r3070, %r3071, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r3069;
	ld.local.u32 	%r3074, [%rd3];
	ld.local.u32 	%r3075, [%rd2+12];
	// inline asm
	prmt.b32 %r3073, %r3074, %r3075, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r3073;
	ld.local.u32 	%r3078, [%rd2+12];
	ld.local.u32 	%r3079, [%rd2+8];
	// inline asm
	prmt.b32 %r3077, %r3078, %r3079, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r3077;
	ld.local.u32 	%r3082, [%rd2+8];
	ld.local.u32 	%r3083, [%rd2+4];
	// inline asm
	prmt.b32 %r3081, %r3082, %r3083, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r3081;
	ld.local.u32 	%r3086, [%rd2+4];
	ld.local.u32 	%r3087, [%rd2];
	// inline asm
	prmt.b32 %r3085, %r3086, %r3087, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r3085;
	ld.local.u32 	%r3090, [%rd2];
	ld.local.u32 	%r3091, [%rd1+12];
	// inline asm
	prmt.b32 %r3089, %r3090, %r3091, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r3089;
	ld.local.u32 	%r3094, [%rd1+12];
	ld.local.u32 	%r3095, [%rd1+8];
	// inline asm
	prmt.b32 %r3093, %r3094, %r3095, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r3093;
	ld.local.u32 	%r3098, [%rd1+8];
	ld.local.u32 	%r3099, [%rd1+4];
	// inline asm
	prmt.b32 %r3097, %r3098, %r3099, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r3097;
	ld.local.u32 	%r3102, [%rd1+4];
	ld.local.u32 	%r3103, [%rd1];
	// inline asm
	prmt.b32 %r3101, %r3102, %r3103, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r3101;
	ld.local.u32 	%r3106, [%rd1];
	// inline asm
	prmt.b32 %r3105, %r3106, %r8442, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r3105;
	st.local.u32 	[%rd4+4], %r8442;
	st.local.u32 	[%rd4], %r8442;
	st.local.u32 	[%rd3+12], %r8442;
	st.local.u32 	[%rd3+8], %r8442;
	st.local.u32 	[%rd3+4], %r8442;
	st.local.u32 	[%rd3], %r8442;
	st.local.u32 	[%rd2+12], %r8442;
	st.local.u32 	[%rd2+8], %r8442;
	st.local.u32 	[%rd2+4], %r8442;
	st.local.u32 	[%rd2], %r8442;
	st.local.u32 	[%rd1+12], %r8442;
	st.local.u32 	[%rd1+8], %r8442;
	mov.u64 	%rd116, 0;
	st.local.u32 	[%rd1+4], %rd116;
	st.local.u32 	[%rd1], %rd116;
	mov.u32 	%r8455, %r8442;
	bra.uni 	BB1_81;

BB1_152:
	setp.eq.s32	%p54, %r1, 30;
	@%p54 bra 	BB1_155;
	bra.uni 	BB1_153;

BB1_155:
	ld.local.u32 	%r6210, [%rd1+4];
	ld.local.u32 	%r6211, [%rd1];
	// inline asm
	prmt.b32 %r6209, %r6210, %r6211, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r6209;
	ld.local.u32 	%r6214, [%rd1];
	mov.u32 	%r8476, 0;
	// inline asm
	prmt.b32 %r6213, %r6214, %r8476, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r6213;
	st.local.u32 	[%rd8+4], %r8476;
	st.local.u32 	[%rd8], %r8476;
	st.local.u32 	[%rd7+12], %r8476;
	st.local.u32 	[%rd7+8], %r8476;
	st.local.u32 	[%rd7+4], %r8476;
	st.local.u32 	[%rd7], %r8476;
	st.local.u32 	[%rd6+12], %r8476;
	st.local.u32 	[%rd6+8], %r8476;
	st.local.u32 	[%rd6+4], %r8476;
	st.local.u32 	[%rd6], %r8476;
	st.local.u32 	[%rd5+12], %r8476;
	st.local.u32 	[%rd5+8], %r8476;
	st.local.u32 	[%rd5+4], %r8476;
	st.local.u32 	[%rd5], %r8476;
	st.local.u32 	[%rd4+12], %r8476;
	st.local.u32 	[%rd4+8], %r8476;
	st.local.u32 	[%rd4+4], %r8476;
	st.local.u32 	[%rd4], %r8476;
	st.local.u32 	[%rd3+12], %r8476;
	st.local.u32 	[%rd3+8], %r8476;
	st.local.u32 	[%rd3+4], %r8476;
	st.local.u32 	[%rd3], %r8476;
	st.local.u32 	[%rd2+12], %r8476;
	st.local.u32 	[%rd2+8], %r8476;
	st.local.u32 	[%rd2+4], %r8476;
	st.local.u32 	[%rd2], %r8476;
	st.local.u32 	[%rd1+12], %r8476;
	st.local.u32 	[%rd1+8], %r8476;
	mov.u64 	%rd1147, 0;
	st.local.u32 	[%rd1+4], %rd1147;
	st.local.u32 	[%rd1], %rd1147;
	bra.uni 	BB1_172;

BB1_62:
	setp.eq.s32	%p6, %r1, 30;
	@%p6 bra 	BB1_65;
	bra.uni 	BB1_63;

BB1_65:
	ld.local.u32 	%r715, [%rd8+12];
	mov.u32 	%r8442, 0;
	// inline asm
	prmt.b32 %r8472, %r8442, %r715, %r2;
	// inline asm
	ld.local.u32 	%r718, [%rd8+12];
	ld.local.u32 	%r719, [%rd8+8];
	// inline asm
	prmt.b32 %r8473, %r718, %r719, %r2;
	// inline asm
	ld.local.u32 	%r722, [%rd8+8];
	ld.local.u32 	%r723, [%rd8+4];
	// inline asm
	prmt.b32 %r8474, %r722, %r723, %r2;
	// inline asm
	ld.local.u32 	%r726, [%rd8+4];
	ld.local.u32 	%r727, [%rd8];
	// inline asm
	prmt.b32 %r8467, %r726, %r727, %r2;
	// inline asm
	ld.local.u32 	%r730, [%rd8];
	ld.local.u32 	%r731, [%rd7+12];
	// inline asm
	prmt.b32 %r8468, %r730, %r731, %r2;
	// inline asm
	ld.local.u32 	%r734, [%rd7+12];
	ld.local.u32 	%r735, [%rd7+8];
	// inline asm
	prmt.b32 %r8469, %r734, %r735, %r2;
	// inline asm
	ld.local.u32 	%r738, [%rd7+8];
	ld.local.u32 	%r739, [%rd7+4];
	// inline asm
	prmt.b32 %r8470, %r738, %r739, %r2;
	// inline asm
	ld.local.u32 	%r742, [%rd7+4];
	ld.local.u32 	%r743, [%rd7];
	// inline asm
	prmt.b32 %r8463, %r742, %r743, %r2;
	// inline asm
	ld.local.u32 	%r746, [%rd7];
	ld.local.u32 	%r747, [%rd6+12];
	// inline asm
	prmt.b32 %r8464, %r746, %r747, %r2;
	// inline asm
	ld.local.u32 	%r750, [%rd6+12];
	ld.local.u32 	%r751, [%rd6+8];
	// inline asm
	prmt.b32 %r8465, %r750, %r751, %r2;
	// inline asm
	ld.local.u32 	%r754, [%rd6+8];
	ld.local.u32 	%r755, [%rd6+4];
	// inline asm
	prmt.b32 %r8466, %r754, %r755, %r2;
	// inline asm
	ld.local.u32 	%r758, [%rd6+4];
	ld.local.u32 	%r759, [%rd6];
	// inline asm
	prmt.b32 %r8459, %r758, %r759, %r2;
	// inline asm
	ld.local.u32 	%r762, [%rd6];
	ld.local.u32 	%r763, [%rd5+12];
	// inline asm
	prmt.b32 %r8460, %r762, %r763, %r2;
	// inline asm
	ld.local.u32 	%r766, [%rd5+12];
	ld.local.u32 	%r767, [%rd5+8];
	// inline asm
	prmt.b32 %r8461, %r766, %r767, %r2;
	// inline asm
	ld.local.u32 	%r770, [%rd5+8];
	ld.local.u32 	%r771, [%rd5+4];
	// inline asm
	prmt.b32 %r8462, %r770, %r771, %r2;
	// inline asm
	ld.local.u32 	%r774, [%rd5+4];
	ld.local.u32 	%r775, [%rd5];
	// inline asm
	prmt.b32 %r8455, %r774, %r775, %r2;
	// inline asm
	ld.local.u32 	%r778, [%rd5];
	ld.local.u32 	%r779, [%rd4+12];
	// inline asm
	prmt.b32 %r8456, %r778, %r779, %r2;
	// inline asm
	ld.local.u32 	%r782, [%rd4+12];
	ld.local.u32 	%r783, [%rd4+8];
	// inline asm
	prmt.b32 %r8457, %r782, %r783, %r2;
	// inline asm
	ld.local.u32 	%r786, [%rd4+8];
	ld.local.u32 	%r787, [%rd4+4];
	// inline asm
	prmt.b32 %r8458, %r786, %r787, %r2;
	// inline asm
	ld.local.u32 	%r790, [%rd4+4];
	ld.local.u32 	%r791, [%rd4];
	// inline asm
	prmt.b32 %r8451, %r790, %r791, %r2;
	// inline asm
	ld.local.u32 	%r794, [%rd4];
	ld.local.u32 	%r795, [%rd3+12];
	// inline asm
	prmt.b32 %r8452, %r794, %r795, %r2;
	// inline asm
	ld.local.u32 	%r798, [%rd3+12];
	ld.local.u32 	%r799, [%rd3+8];
	// inline asm
	prmt.b32 %r8453, %r798, %r799, %r2;
	// inline asm
	ld.local.u32 	%r802, [%rd3+8];
	ld.local.u32 	%r803, [%rd3+4];
	// inline asm
	prmt.b32 %r8454, %r802, %r803, %r2;
	// inline asm
	ld.local.u32 	%r806, [%rd3+4];
	ld.local.u32 	%r807, [%rd3];
	// inline asm
	prmt.b32 %r8447, %r806, %r807, %r2;
	// inline asm
	ld.local.u32 	%r810, [%rd3];
	ld.local.u32 	%r811, [%rd2+12];
	// inline asm
	prmt.b32 %r8448, %r810, %r811, %r2;
	// inline asm
	ld.local.u32 	%r814, [%rd2+12];
	ld.local.u32 	%r815, [%rd2+8];
	// inline asm
	prmt.b32 %r8449, %r814, %r815, %r2;
	// inline asm
	ld.local.u32 	%r818, [%rd2+8];
	ld.local.u32 	%r819, [%rd2+4];
	// inline asm
	prmt.b32 %r8450, %r818, %r819, %r2;
	// inline asm
	ld.local.u32 	%r822, [%rd2+4];
	ld.local.u32 	%r823, [%rd2];
	// inline asm
	prmt.b32 %r8443, %r822, %r823, %r2;
	// inline asm
	ld.local.u32 	%r826, [%rd2];
	ld.local.u32 	%r827, [%rd1+12];
	// inline asm
	prmt.b32 %r8444, %r826, %r827, %r2;
	// inline asm
	ld.local.u32 	%r830, [%rd1+12];
	ld.local.u32 	%r831, [%rd1+8];
	// inline asm
	prmt.b32 %r8445, %r830, %r831, %r2;
	// inline asm
	ld.local.u32 	%r834, [%rd1+8];
	ld.local.u32 	%r835, [%rd1+4];
	// inline asm
	prmt.b32 %r8446, %r834, %r835, %r2;
	// inline asm
	ld.local.u32 	%r838, [%rd1+4];
	ld.local.u32 	%r839, [%rd1];
	// inline asm
	prmt.b32 %r837, %r838, %r839, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r837;
	ld.local.u32 	%r842, [%rd1];
	// inline asm
	prmt.b32 %r841, %r842, %r8442, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r841;
	st.local.u32 	[%rd8+4], %r8442;
	st.local.u32 	[%rd8], %r8442;
	st.local.u32 	[%rd7+12], %r8442;
	st.local.u32 	[%rd7+8], %r8442;
	st.local.u32 	[%rd7+4], %r8442;
	st.local.u32 	[%rd7], %r8442;
	st.local.u32 	[%rd6+12], %r8442;
	st.local.u32 	[%rd6+8], %r8442;
	st.local.u32 	[%rd6+4], %r8442;
	st.local.u32 	[%rd6], %r8442;
	st.local.u32 	[%rd5+12], %r8442;
	st.local.u32 	[%rd5+8], %r8442;
	st.local.u32 	[%rd5+4], %r8442;
	st.local.u32 	[%rd5], %r8442;
	st.local.u32 	[%rd4+12], %r8442;
	st.local.u32 	[%rd4+8], %r8442;
	st.local.u32 	[%rd4+4], %r8442;
	st.local.u32 	[%rd4], %r8442;
	st.local.u32 	[%rd3+12], %r8442;
	st.local.u32 	[%rd3+8], %r8442;
	st.local.u32 	[%rd3+4], %r8442;
	st.local.u32 	[%rd3], %r8442;
	st.local.u32 	[%rd2+12], %r8442;
	st.local.u32 	[%rd2+8], %r8442;
	st.local.u32 	[%rd2+4], %r8442;
	st.local.u32 	[%rd2], %r8442;
	st.local.u32 	[%rd1+12], %r8442;
	st.local.u32 	[%rd1+8], %r8442;
	mov.u64 	%rd100, 0;
	st.local.u32 	[%rd1+4], %rd100;
	st.local.u32 	[%rd1], %rd100;
	mov.u32 	%r8471, %r8442;
	bra.uni 	BB1_89;

BB1_97:
	setp.eq.s32	%p96, %r1, 1;
	@%p96 bra 	BB1_98;
	bra.uni 	BB1_171;

BB1_98:
	ld.local.u32 	%r8095, [%rd8+8];
	ld.local.u32 	%r8096, [%rd8+4];
	// inline asm
	prmt.b32 %r8094, %r8095, %r8096, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r8094;
	ld.local.u32 	%r8099, [%rd8+4];
	ld.local.u32 	%r8100, [%rd8];
	// inline asm
	prmt.b32 %r8098, %r8099, %r8100, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r8098;
	ld.local.u32 	%r8103, [%rd8];
	ld.local.u32 	%r8104, [%rd7+12];
	// inline asm
	prmt.b32 %r8102, %r8103, %r8104, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r8102;
	ld.local.u32 	%r8107, [%rd7+12];
	ld.local.u32 	%r8108, [%rd7+8];
	// inline asm
	prmt.b32 %r8106, %r8107, %r8108, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r8106;
	ld.local.u32 	%r8111, [%rd7+8];
	ld.local.u32 	%r8112, [%rd7+4];
	// inline asm
	prmt.b32 %r8110, %r8111, %r8112, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r8110;
	ld.local.u32 	%r8115, [%rd7+4];
	ld.local.u32 	%r8116, [%rd7];
	// inline asm
	prmt.b32 %r8114, %r8115, %r8116, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r8114;
	ld.local.u32 	%r8119, [%rd7];
	ld.local.u32 	%r8120, [%rd6+12];
	// inline asm
	prmt.b32 %r8118, %r8119, %r8120, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r8118;
	ld.local.u32 	%r8123, [%rd6+12];
	ld.local.u32 	%r8124, [%rd6+8];
	// inline asm
	prmt.b32 %r8122, %r8123, %r8124, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r8122;
	ld.local.u32 	%r8127, [%rd6+8];
	ld.local.u32 	%r8128, [%rd6+4];
	// inline asm
	prmt.b32 %r8126, %r8127, %r8128, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r8126;
	ld.local.u32 	%r8131, [%rd6+4];
	ld.local.u32 	%r8132, [%rd6];
	// inline asm
	prmt.b32 %r8130, %r8131, %r8132, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r8130;
	ld.local.u32 	%r8135, [%rd6];
	ld.local.u32 	%r8136, [%rd5+12];
	// inline asm
	prmt.b32 %r8134, %r8135, %r8136, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r8134;
	ld.local.u32 	%r8139, [%rd5+12];
	ld.local.u32 	%r8140, [%rd5+8];
	// inline asm
	prmt.b32 %r8138, %r8139, %r8140, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r8138;
	ld.local.u32 	%r8143, [%rd5+8];
	ld.local.u32 	%r8144, [%rd5+4];
	// inline asm
	prmt.b32 %r8142, %r8143, %r8144, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r8142;
	ld.local.u32 	%r8147, [%rd5+4];
	ld.local.u32 	%r8148, [%rd5];
	// inline asm
	prmt.b32 %r8146, %r8147, %r8148, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r8146;
	ld.local.u32 	%r8151, [%rd5];
	ld.local.u32 	%r8152, [%rd4+12];
	// inline asm
	prmt.b32 %r8150, %r8151, %r8152, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r8150;
	ld.local.u32 	%r8155, [%rd4+12];
	ld.local.u32 	%r8156, [%rd4+8];
	// inline asm
	prmt.b32 %r8154, %r8155, %r8156, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r8154;
	ld.local.u32 	%r8159, [%rd4+8];
	ld.local.u32 	%r8160, [%rd4+4];
	// inline asm
	prmt.b32 %r8158, %r8159, %r8160, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r8158;
	ld.local.u32 	%r8163, [%rd4+4];
	ld.local.u32 	%r8164, [%rd4];
	// inline asm
	prmt.b32 %r8162, %r8163, %r8164, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r8162;
	ld.local.u32 	%r8167, [%rd4];
	ld.local.u32 	%r8168, [%rd3+12];
	// inline asm
	prmt.b32 %r8166, %r8167, %r8168, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r8166;
	ld.local.u32 	%r8171, [%rd3+12];
	ld.local.u32 	%r8172, [%rd3+8];
	// inline asm
	prmt.b32 %r8170, %r8171, %r8172, %r2;
	// inline asm
	st.local.u32 	[%rd4], %r8170;
	ld.local.u32 	%r8175, [%rd3+8];
	ld.local.u32 	%r8176, [%rd3+4];
	// inline asm
	prmt.b32 %r8174, %r8175, %r8176, %r2;
	// inline asm
	st.local.u32 	[%rd3+12], %r8174;
	ld.local.u32 	%r8179, [%rd3+4];
	ld.local.u32 	%r8180, [%rd3];
	// inline asm
	prmt.b32 %r8178, %r8179, %r8180, %r2;
	// inline asm
	st.local.u32 	[%rd3+8], %r8178;
	ld.local.u32 	%r8183, [%rd3];
	ld.local.u32 	%r8184, [%rd2+12];
	// inline asm
	prmt.b32 %r8182, %r8183, %r8184, %r2;
	// inline asm
	st.local.u32 	[%rd3+4], %r8182;
	ld.local.u32 	%r8187, [%rd2+12];
	ld.local.u32 	%r8188, [%rd2+8];
	// inline asm
	prmt.b32 %r8186, %r8187, %r8188, %r2;
	// inline asm
	st.local.u32 	[%rd3], %r8186;
	ld.local.u32 	%r8191, [%rd2+8];
	ld.local.u32 	%r8192, [%rd2+4];
	// inline asm
	prmt.b32 %r8190, %r8191, %r8192, %r2;
	// inline asm
	st.local.u32 	[%rd2+12], %r8190;
	ld.local.u32 	%r8195, [%rd2+4];
	ld.local.u32 	%r8196, [%rd2];
	// inline asm
	prmt.b32 %r8194, %r8195, %r8196, %r2;
	// inline asm
	st.local.u32 	[%rd2+8], %r8194;
	ld.local.u32 	%r8199, [%rd2];
	ld.local.u32 	%r8200, [%rd1+12];
	// inline asm
	prmt.b32 %r8198, %r8199, %r8200, %r2;
	// inline asm
	st.local.u32 	[%rd2+4], %r8198;
	ld.local.u32 	%r8203, [%rd1+12];
	ld.local.u32 	%r8204, [%rd1+8];
	// inline asm
	prmt.b32 %r8202, %r8203, %r8204, %r2;
	// inline asm
	st.local.u32 	[%rd2], %r8202;
	ld.local.u32 	%r8207, [%rd1+8];
	ld.local.u32 	%r8208, [%rd1+4];
	// inline asm
	prmt.b32 %r8206, %r8207, %r8208, %r2;
	// inline asm
	st.local.u32 	[%rd1+12], %r8206;
	ld.local.u32 	%r8211, [%rd1+4];
	ld.local.u32 	%r8212, [%rd1];
	// inline asm
	prmt.b32 %r8210, %r8211, %r8212, %r2;
	// inline asm
	st.local.u32 	[%rd1+8], %r8210;
	ld.local.u32 	%r8215, [%rd1];
	mov.u32 	%r8476, 0;
	// inline asm
	prmt.b32 %r8214, %r8215, %r8476, %r2;
	// inline asm
	st.local.u32 	[%rd1+4], %r8214;
	st.local.u32 	[%rd1], %r8476;
	bra.uni 	BB1_172;

BB1_6:
	setp.eq.s32	%p48, %r1, 1;
	@%p48 bra 	BB1_7;
	bra.uni 	BB1_87;

BB1_7:
	ld.local.u32 	%r5007, [%rd8+12];
	mov.u32 	%r8442, 0;
	// inline asm
	prmt.b32 %r8445, %r8442, %r5007, %r2;
	// inline asm
	ld.local.u32 	%r5010, [%rd8+12];
	ld.local.u32 	%r5011, [%rd8+8];
	// inline asm
	prmt.b32 %r8446, %r5010, %r5011, %r2;
	// inline asm
	ld.local.u32 	%r5014, [%rd8+8];
	ld.local.u32 	%r5015, [%rd8+4];
	// inline asm
	prmt.b32 %r5013, %r5014, %r5015, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r5013;
	ld.local.u32 	%r5018, [%rd8+4];
	ld.local.u32 	%r5019, [%rd8];
	// inline asm
	prmt.b32 %r5017, %r5018, %r5019, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r5017;
	ld.local.u32 	%r5022, [%rd8];
	ld.local.u32 	%r5023, [%rd7+12];
	// inline asm
	prmt.b32 %r5021, %r5022, %r5023, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r5021;
	ld.local.u32 	%r5026, [%rd7+12];
	ld.local.u32 	%r5027, [%rd7+8];
	// inline asm
	prmt.b32 %r5025, %r5026, %r5027, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r5025;
	ld.local.u32 	%r5030, [%rd7+8];
	ld.local.u32 	%r5031, [%rd7+4];
	// inline asm
	prmt.b32 %r5029, %r5030, %r5031, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r5029;
	ld.local.u32 	%r5034, [%rd7+4];
	ld.local.u32 	%r5035, [%rd7];
	// inline asm
	prmt.b32 %r5033, %r5034, %r5035, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r5033;
	ld.local.u32 	%r5038, [%rd7];
	ld.local.u32 	%r5039, [%rd6+12];
	// inline asm
	prmt.b32 %r5037, %r5038, %r5039, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r5037;
	ld.local.u32 	%r5042, [%rd6+12];
	ld.local.u32 	%r5043, [%rd6+8];
	// inline asm
	prmt.b32 %r5041, %r5042, %r5043, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r5041;
	ld.local.u32 	%r5046, [%rd6+8];
	ld.local.u32 	%r5047, [%rd6+4];
	// inline asm
	prmt.b32 %r5045, %r5046, %r5047, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r5045;
	ld.local.u32 	%r5050, [%rd6+4];
	ld.local.u32 	%r5051, [%rd6];
	// inline asm
	prmt.b32 %r5049, %r5050, %r5051, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r5049;
	ld.local.u32 	%r5054, [%rd6];
	ld.local.u32 	%r5055, [%rd5+12];
	// inline asm
	prmt.b32 %r5053, %r5054, %r5055, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r5053;
	ld.local.u32 	%r5058, [%rd5+12];
	ld.local.u32 	%r5059, [%rd5+8];
	// inline asm
	prmt.b32 %r5057, %r5058, %r5059, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r5057;
	ld.local.u32 	%r5062, [%rd5+8];
	ld.local.u32 	%r5063, [%rd5+4];
	// inline asm
	prmt.b32 %r5061, %r5062, %r5063, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r5061;
	ld.local.u32 	%r5066, [%rd5+4];
	ld.local.u32 	%r5067, [%rd5];
	// inline asm
	prmt.b32 %r5065, %r5066, %r5067, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r5065;
	ld.local.u32 	%r5070, [%rd5];
	ld.local.u32 	%r5071, [%rd4+12];
	// inline asm
	prmt.b32 %r5069, %r5070, %r5071, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r5069;
	ld.local.u32 	%r5074, [%rd4+12];
	ld.local.u32 	%r5075, [%rd4+8];
	// inline asm
	prmt.b32 %r5073, %r5074, %r5075, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r5073;
	ld.local.u32 	%r5078, [%rd4+8];
	ld.local.u32 	%r5079, [%rd4+4];
	// inline asm
	prmt.b32 %r5077, %r5078, %r5079, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r5077;
	ld.local.u32 	%r5082, [%rd4+4];
	ld.local.u32 	%r5083, [%rd4];
	// inline asm
	prmt.b32 %r5081, %r5082, %r5083, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r5081;
	ld.local.u32 	%r5086, [%rd4];
	ld.local.u32 	%r5087, [%rd3+12];
	// inline asm
	prmt.b32 %r5085, %r5086, %r5087, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r5085;
	ld.local.u32 	%r5090, [%rd3+12];
	ld.local.u32 	%r5091, [%rd3+8];
	// inline asm
	prmt.b32 %r5089, %r5090, %r5091, %r2;
	// inline asm
	st.local.u32 	[%rd4], %r5089;
	ld.local.u32 	%r5094, [%rd3+8];
	ld.local.u32 	%r5095, [%rd3+4];
	// inline asm
	prmt.b32 %r5093, %r5094, %r5095, %r2;
	// inline asm
	st.local.u32 	[%rd3+12], %r5093;
	ld.local.u32 	%r5098, [%rd3+4];
	ld.local.u32 	%r5099, [%rd3];
	// inline asm
	prmt.b32 %r5097, %r5098, %r5099, %r2;
	// inline asm
	st.local.u32 	[%rd3+8], %r5097;
	ld.local.u32 	%r5102, [%rd3];
	ld.local.u32 	%r5103, [%rd2+12];
	// inline asm
	prmt.b32 %r5101, %r5102, %r5103, %r2;
	// inline asm
	st.local.u32 	[%rd3+4], %r5101;
	ld.local.u32 	%r5106, [%rd2+12];
	ld.local.u32 	%r5107, [%rd2+8];
	// inline asm
	prmt.b32 %r5105, %r5106, %r5107, %r2;
	// inline asm
	st.local.u32 	[%rd3], %r5105;
	ld.local.u32 	%r5110, [%rd2+8];
	ld.local.u32 	%r5111, [%rd2+4];
	// inline asm
	prmt.b32 %r5109, %r5110, %r5111, %r2;
	// inline asm
	st.local.u32 	[%rd2+12], %r5109;
	ld.local.u32 	%r5114, [%rd2+4];
	ld.local.u32 	%r5115, [%rd2];
	// inline asm
	prmt.b32 %r5113, %r5114, %r5115, %r2;
	// inline asm
	st.local.u32 	[%rd2+8], %r5113;
	ld.local.u32 	%r5118, [%rd2];
	ld.local.u32 	%r5119, [%rd1+12];
	// inline asm
	prmt.b32 %r5117, %r5118, %r5119, %r2;
	// inline asm
	st.local.u32 	[%rd2+4], %r5117;
	ld.local.u32 	%r5122, [%rd1+12];
	ld.local.u32 	%r5123, [%rd1+8];
	// inline asm
	prmt.b32 %r5121, %r5122, %r5123, %r2;
	// inline asm
	st.local.u32 	[%rd2], %r5121;
	ld.local.u32 	%r5126, [%rd1+8];
	ld.local.u32 	%r5127, [%rd1+4];
	// inline asm
	prmt.b32 %r5125, %r5126, %r5127, %r2;
	// inline asm
	st.local.u32 	[%rd1+12], %r5125;
	ld.local.u32 	%r5130, [%rd1+4];
	ld.local.u32 	%r5131, [%rd1];
	// inline asm
	prmt.b32 %r5129, %r5130, %r5131, %r2;
	// inline asm
	st.local.u32 	[%rd1+8], %r5129;
	ld.local.u32 	%r5134, [%rd1];
	// inline asm
	prmt.b32 %r5133, %r5134, %r8442, %r2;
	// inline asm
	st.local.u32 	[%rd1+4], %r5133;
	st.local.u32 	[%rd1], %r8442;
	mov.u32 	%r8443, %r8442;
	mov.u32 	%r8444, %r8442;
	bra.uni 	BB1_11;

BB1_128:
	setp.eq.s32	%p73, %r1, 17;
	@%p73 bra 	BB1_129;
	bra.uni 	BB1_171;

BB1_129:
	ld.local.u32 	%r6639, [%rd4+8];
	ld.local.u32 	%r6640, [%rd4+4];
	// inline asm
	prmt.b32 %r6638, %r6639, %r6640, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r6638;
	ld.local.u32 	%r6643, [%rd4+4];
	ld.local.u32 	%r6644, [%rd4];
	// inline asm
	prmt.b32 %r6642, %r6643, %r6644, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r6642;
	ld.local.u32 	%r6647, [%rd4];
	ld.local.u32 	%r6648, [%rd3+12];
	// inline asm
	prmt.b32 %r6646, %r6647, %r6648, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r6646;
	ld.local.u32 	%r6651, [%rd3+12];
	ld.local.u32 	%r6652, [%rd3+8];
	// inline asm
	prmt.b32 %r6650, %r6651, %r6652, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r6650;
	ld.local.u32 	%r6655, [%rd3+8];
	ld.local.u32 	%r6656, [%rd3+4];
	// inline asm
	prmt.b32 %r6654, %r6655, %r6656, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r6654;
	ld.local.u32 	%r6659, [%rd3+4];
	ld.local.u32 	%r6660, [%rd3];
	// inline asm
	prmt.b32 %r6658, %r6659, %r6660, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r6658;
	ld.local.u32 	%r6663, [%rd3];
	ld.local.u32 	%r6664, [%rd2+12];
	// inline asm
	prmt.b32 %r6662, %r6663, %r6664, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r6662;
	ld.local.u32 	%r6667, [%rd2+12];
	ld.local.u32 	%r6668, [%rd2+8];
	// inline asm
	prmt.b32 %r6666, %r6667, %r6668, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r6666;
	ld.local.u32 	%r6671, [%rd2+8];
	ld.local.u32 	%r6672, [%rd2+4];
	// inline asm
	prmt.b32 %r6670, %r6671, %r6672, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r6670;
	ld.local.u32 	%r6675, [%rd2+4];
	ld.local.u32 	%r6676, [%rd2];
	// inline asm
	prmt.b32 %r6674, %r6675, %r6676, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r6674;
	ld.local.u32 	%r6679, [%rd2];
	ld.local.u32 	%r6680, [%rd1+12];
	// inline asm
	prmt.b32 %r6678, %r6679, %r6680, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r6678;
	ld.local.u32 	%r6683, [%rd1+12];
	ld.local.u32 	%r6684, [%rd1+8];
	// inline asm
	prmt.b32 %r6682, %r6683, %r6684, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r6682;
	ld.local.u32 	%r6687, [%rd1+8];
	ld.local.u32 	%r6688, [%rd1+4];
	// inline asm
	prmt.b32 %r6686, %r6687, %r6688, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r6686;
	ld.local.u32 	%r6691, [%rd1+4];
	ld.local.u32 	%r6692, [%rd1];
	// inline asm
	prmt.b32 %r6690, %r6691, %r6692, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r6690;
	ld.local.u32 	%r6695, [%rd1];
	mov.u32 	%r8476, 0;
	// inline asm
	prmt.b32 %r6694, %r6695, %r8476, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r6694;
	st.local.u32 	[%rd5], %r8476;
	st.local.u32 	[%rd4+12], %r8476;
	st.local.u32 	[%rd4+8], %r8476;
	st.local.u32 	[%rd4+4], %r8476;
	st.local.u32 	[%rd4], %r8476;
	st.local.u32 	[%rd3+12], %r8476;
	st.local.u32 	[%rd3+8], %r8476;
	st.local.u32 	[%rd3+4], %r8476;
	st.local.u32 	[%rd3], %r8476;
	st.local.u32 	[%rd2+12], %r8476;
	st.local.u32 	[%rd2+8], %r8476;
	st.local.u32 	[%rd2+4], %r8476;
	st.local.u32 	[%rd2], %r8476;
	st.local.u32 	[%rd1+12], %r8476;
	st.local.u32 	[%rd1+8], %r8476;
	mov.u64 	%rd1160, 0;
	st.local.u32 	[%rd1+4], %rd1160;
	st.local.u32 	[%rd1], %rd1160;
	bra.uni 	BB1_172;

BB1_38:
	setp.eq.s32	%p25, %r1, 17;
	@%p25 bra 	BB1_39;
	bra.uni 	BB1_87;

BB1_39:
	ld.local.u32 	%r2535, [%rd8+12];
	mov.u32 	%r8442, 0;
	// inline asm
	prmt.b32 %r8461, %r8442, %r2535, %r2;
	// inline asm
	ld.local.u32 	%r2538, [%rd8+12];
	ld.local.u32 	%r2539, [%rd8+8];
	// inline asm
	prmt.b32 %r8462, %r2538, %r2539, %r2;
	// inline asm
	ld.local.u32 	%r2542, [%rd8+8];
	ld.local.u32 	%r2543, [%rd8+4];
	// inline asm
	prmt.b32 %r8455, %r2542, %r2543, %r2;
	// inline asm
	ld.local.u32 	%r2546, [%rd8+4];
	ld.local.u32 	%r2547, [%rd8];
	// inline asm
	prmt.b32 %r8456, %r2546, %r2547, %r2;
	// inline asm
	ld.local.u32 	%r2550, [%rd8];
	ld.local.u32 	%r2551, [%rd7+12];
	// inline asm
	prmt.b32 %r8457, %r2550, %r2551, %r2;
	// inline asm
	ld.local.u32 	%r2554, [%rd7+12];
	ld.local.u32 	%r2555, [%rd7+8];
	// inline asm
	prmt.b32 %r8458, %r2554, %r2555, %r2;
	// inline asm
	ld.local.u32 	%r2558, [%rd7+8];
	ld.local.u32 	%r2559, [%rd7+4];
	// inline asm
	prmt.b32 %r8451, %r2558, %r2559, %r2;
	// inline asm
	ld.local.u32 	%r2562, [%rd7+4];
	ld.local.u32 	%r2563, [%rd7];
	// inline asm
	prmt.b32 %r8452, %r2562, %r2563, %r2;
	// inline asm
	ld.local.u32 	%r2566, [%rd7];
	ld.local.u32 	%r2567, [%rd6+12];
	// inline asm
	prmt.b32 %r8453, %r2566, %r2567, %r2;
	// inline asm
	ld.local.u32 	%r2570, [%rd6+12];
	ld.local.u32 	%r2571, [%rd6+8];
	// inline asm
	prmt.b32 %r8454, %r2570, %r2571, %r2;
	// inline asm
	ld.local.u32 	%r2574, [%rd6+8];
	ld.local.u32 	%r2575, [%rd6+4];
	// inline asm
	prmt.b32 %r8447, %r2574, %r2575, %r2;
	// inline asm
	ld.local.u32 	%r2578, [%rd6+4];
	ld.local.u32 	%r2579, [%rd6];
	// inline asm
	prmt.b32 %r8448, %r2578, %r2579, %r2;
	// inline asm
	ld.local.u32 	%r2582, [%rd6];
	ld.local.u32 	%r2583, [%rd5+12];
	// inline asm
	prmt.b32 %r8449, %r2582, %r2583, %r2;
	// inline asm
	ld.local.u32 	%r2586, [%rd5+12];
	ld.local.u32 	%r2587, [%rd5+8];
	// inline asm
	prmt.b32 %r8450, %r2586, %r2587, %r2;
	// inline asm
	ld.local.u32 	%r2590, [%rd5+8];
	ld.local.u32 	%r2591, [%rd5+4];
	// inline asm
	prmt.b32 %r8443, %r2590, %r2591, %r2;
	// inline asm
	ld.local.u32 	%r2594, [%rd5+4];
	ld.local.u32 	%r2595, [%rd5];
	// inline asm
	prmt.b32 %r8444, %r2594, %r2595, %r2;
	// inline asm
	ld.local.u32 	%r2598, [%rd5];
	ld.local.u32 	%r2599, [%rd4+12];
	// inline asm
	prmt.b32 %r8445, %r2598, %r2599, %r2;
	// inline asm
	ld.local.u32 	%r2602, [%rd4+12];
	ld.local.u32 	%r2603, [%rd4+8];
	// inline asm
	prmt.b32 %r8446, %r2602, %r2603, %r2;
	// inline asm
	ld.local.u32 	%r2606, [%rd4+8];
	ld.local.u32 	%r2607, [%rd4+4];
	// inline asm
	prmt.b32 %r2605, %r2606, %r2607, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r2605;
	ld.local.u32 	%r2610, [%rd4+4];
	ld.local.u32 	%r2611, [%rd4];
	// inline asm
	prmt.b32 %r2609, %r2610, %r2611, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r2609;
	ld.local.u32 	%r2614, [%rd4];
	ld.local.u32 	%r2615, [%rd3+12];
	// inline asm
	prmt.b32 %r2613, %r2614, %r2615, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r2613;
	ld.local.u32 	%r2618, [%rd3+12];
	ld.local.u32 	%r2619, [%rd3+8];
	// inline asm
	prmt.b32 %r2617, %r2618, %r2619, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r2617;
	ld.local.u32 	%r2622, [%rd3+8];
	ld.local.u32 	%r2623, [%rd3+4];
	// inline asm
	prmt.b32 %r2621, %r2622, %r2623, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r2621;
	ld.local.u32 	%r2626, [%rd3+4];
	ld.local.u32 	%r2627, [%rd3];
	// inline asm
	prmt.b32 %r2625, %r2626, %r2627, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r2625;
	ld.local.u32 	%r2630, [%rd3];
	ld.local.u32 	%r2631, [%rd2+12];
	// inline asm
	prmt.b32 %r2629, %r2630, %r2631, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r2629;
	ld.local.u32 	%r2634, [%rd2+12];
	ld.local.u32 	%r2635, [%rd2+8];
	// inline asm
	prmt.b32 %r2633, %r2634, %r2635, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r2633;
	ld.local.u32 	%r2638, [%rd2+8];
	ld.local.u32 	%r2639, [%rd2+4];
	// inline asm
	prmt.b32 %r2637, %r2638, %r2639, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r2637;
	ld.local.u32 	%r2642, [%rd2+4];
	ld.local.u32 	%r2643, [%rd2];
	// inline asm
	prmt.b32 %r2641, %r2642, %r2643, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r2641;
	ld.local.u32 	%r2646, [%rd2];
	ld.local.u32 	%r2647, [%rd1+12];
	// inline asm
	prmt.b32 %r2645, %r2646, %r2647, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r2645;
	ld.local.u32 	%r2650, [%rd1+12];
	ld.local.u32 	%r2651, [%rd1+8];
	// inline asm
	prmt.b32 %r2649, %r2650, %r2651, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r2649;
	ld.local.u32 	%r2654, [%rd1+8];
	ld.local.u32 	%r2655, [%rd1+4];
	// inline asm
	prmt.b32 %r2653, %r2654, %r2655, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r2653;
	ld.local.u32 	%r2658, [%rd1+4];
	ld.local.u32 	%r2659, [%rd1];
	// inline asm
	prmt.b32 %r2657, %r2658, %r2659, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r2657;
	ld.local.u32 	%r2662, [%rd1];
	// inline asm
	prmt.b32 %r2661, %r2662, %r8442, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r2661;
	st.local.u32 	[%rd5], %r8442;
	st.local.u32 	[%rd4+12], %r8442;
	st.local.u32 	[%rd4+8], %r8442;
	st.local.u32 	[%rd4+4], %r8442;
	st.local.u32 	[%rd4], %r8442;
	st.local.u32 	[%rd3+12], %r8442;
	st.local.u32 	[%rd3+8], %r8442;
	st.local.u32 	[%rd3+4], %r8442;
	st.local.u32 	[%rd3], %r8442;
	st.local.u32 	[%rd2+12], %r8442;
	st.local.u32 	[%rd2+8], %r8442;
	st.local.u32 	[%rd2+4], %r8442;
	st.local.u32 	[%rd2], %r8442;
	st.local.u32 	[%rd1+12], %r8442;
	st.local.u32 	[%rd1+8], %r8442;
	mov.u64 	%rd113, 0;
	st.local.u32 	[%rd1+4], %rd113;
	st.local.u32 	[%rd1], %rd113;
	mov.u32 	%r8459, %r8442;
	mov.u32 	%r8460, %r8442;
	bra.uni 	BB1_82;

BB1_112:
	setp.eq.s32	%p85, %r1, 9;
	@%p85 bra 	BB1_113;
	bra.uni 	BB1_171;

BB1_113:
	ld.local.u32 	%r7239, [%rd6+8];
	ld.local.u32 	%r7240, [%rd6+4];
	// inline asm
	prmt.b32 %r7238, %r7239, %r7240, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r7238;
	ld.local.u32 	%r7243, [%rd6+4];
	ld.local.u32 	%r7244, [%rd6];
	// inline asm
	prmt.b32 %r7242, %r7243, %r7244, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r7242;
	ld.local.u32 	%r7247, [%rd6];
	ld.local.u32 	%r7248, [%rd5+12];
	// inline asm
	prmt.b32 %r7246, %r7247, %r7248, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r7246;
	ld.local.u32 	%r7251, [%rd5+12];
	ld.local.u32 	%r7252, [%rd5+8];
	// inline asm
	prmt.b32 %r7250, %r7251, %r7252, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r7250;
	ld.local.u32 	%r7255, [%rd5+8];
	ld.local.u32 	%r7256, [%rd5+4];
	// inline asm
	prmt.b32 %r7254, %r7255, %r7256, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r7254;
	ld.local.u32 	%r7259, [%rd5+4];
	ld.local.u32 	%r7260, [%rd5];
	// inline asm
	prmt.b32 %r7258, %r7259, %r7260, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r7258;
	ld.local.u32 	%r7263, [%rd5];
	ld.local.u32 	%r7264, [%rd4+12];
	// inline asm
	prmt.b32 %r7262, %r7263, %r7264, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r7262;
	ld.local.u32 	%r7267, [%rd4+12];
	ld.local.u32 	%r7268, [%rd4+8];
	// inline asm
	prmt.b32 %r7266, %r7267, %r7268, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r7266;
	ld.local.u32 	%r7271, [%rd4+8];
	ld.local.u32 	%r7272, [%rd4+4];
	// inline asm
	prmt.b32 %r7270, %r7271, %r7272, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r7270;
	ld.local.u32 	%r7275, [%rd4+4];
	ld.local.u32 	%r7276, [%rd4];
	// inline asm
	prmt.b32 %r7274, %r7275, %r7276, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r7274;
	ld.local.u32 	%r7279, [%rd4];
	ld.local.u32 	%r7280, [%rd3+12];
	// inline asm
	prmt.b32 %r7278, %r7279, %r7280, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r7278;
	ld.local.u32 	%r7283, [%rd3+12];
	ld.local.u32 	%r7284, [%rd3+8];
	// inline asm
	prmt.b32 %r7282, %r7283, %r7284, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r7282;
	ld.local.u32 	%r7287, [%rd3+8];
	ld.local.u32 	%r7288, [%rd3+4];
	// inline asm
	prmt.b32 %r7286, %r7287, %r7288, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r7286;
	ld.local.u32 	%r7291, [%rd3+4];
	ld.local.u32 	%r7292, [%rd3];
	// inline asm
	prmt.b32 %r7290, %r7291, %r7292, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r7290;
	ld.local.u32 	%r7295, [%rd3];
	ld.local.u32 	%r7296, [%rd2+12];
	// inline asm
	prmt.b32 %r7294, %r7295, %r7296, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r7294;
	ld.local.u32 	%r7299, [%rd2+12];
	ld.local.u32 	%r7300, [%rd2+8];
	// inline asm
	prmt.b32 %r7298, %r7299, %r7300, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r7298;
	ld.local.u32 	%r7303, [%rd2+8];
	ld.local.u32 	%r7304, [%rd2+4];
	// inline asm
	prmt.b32 %r7302, %r7303, %r7304, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r7302;
	ld.local.u32 	%r7307, [%rd2+4];
	ld.local.u32 	%r7308, [%rd2];
	// inline asm
	prmt.b32 %r7306, %r7307, %r7308, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r7306;
	ld.local.u32 	%r7311, [%rd2];
	ld.local.u32 	%r7312, [%rd1+12];
	// inline asm
	prmt.b32 %r7310, %r7311, %r7312, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r7310;
	ld.local.u32 	%r7315, [%rd1+12];
	ld.local.u32 	%r7316, [%rd1+8];
	// inline asm
	prmt.b32 %r7314, %r7315, %r7316, %r2;
	// inline asm
	st.local.u32 	[%rd4], %r7314;
	ld.local.u32 	%r7319, [%rd1+8];
	ld.local.u32 	%r7320, [%rd1+4];
	// inline asm
	prmt.b32 %r7318, %r7319, %r7320, %r2;
	// inline asm
	st.local.u32 	[%rd3+12], %r7318;
	ld.local.u32 	%r7323, [%rd1+4];
	ld.local.u32 	%r7324, [%rd1];
	// inline asm
	prmt.b32 %r7322, %r7323, %r7324, %r2;
	// inline asm
	st.local.u32 	[%rd3+8], %r7322;
	ld.local.u32 	%r7327, [%rd1];
	mov.u32 	%r8476, 0;
	// inline asm
	prmt.b32 %r7326, %r7327, %r8476, %r2;
	// inline asm
	st.local.u32 	[%rd3+4], %r7326;
	st.local.u32 	[%rd3], %r8476;
	st.local.u32 	[%rd2+12], %r8476;
	st.local.u32 	[%rd2+8], %r8476;
	st.local.u32 	[%rd2+4], %r8476;
	st.local.u32 	[%rd2], %r8476;
	st.local.u32 	[%rd1+12], %r8476;
	st.local.u32 	[%rd1+8], %r8476;
	mov.u64 	%rd1168, 0;
	st.local.u32 	[%rd1+4], %rd1168;
	st.local.u32 	[%rd1], %rd1168;
	bra.uni 	BB1_172;

BB1_22:
	setp.eq.s32	%p37, %r1, 9;
	@%p37 bra 	BB1_23;
	bra.uni 	BB1_87;

BB1_23:
	ld.local.u32 	%r3739, [%rd8+12];
	mov.u32 	%r8442, 0;
	// inline asm
	prmt.b32 %r8453, %r8442, %r3739, %r2;
	// inline asm
	ld.local.u32 	%r3742, [%rd8+12];
	ld.local.u32 	%r3743, [%rd8+8];
	// inline asm
	prmt.b32 %r8454, %r3742, %r3743, %r2;
	// inline asm
	ld.local.u32 	%r3746, [%rd8+8];
	ld.local.u32 	%r3747, [%rd8+4];
	// inline asm
	prmt.b32 %r8447, %r3746, %r3747, %r2;
	// inline asm
	ld.local.u32 	%r3750, [%rd8+4];
	ld.local.u32 	%r3751, [%rd8];
	// inline asm
	prmt.b32 %r8448, %r3750, %r3751, %r2;
	// inline asm
	ld.local.u32 	%r3754, [%rd8];
	ld.local.u32 	%r3755, [%rd7+12];
	// inline asm
	prmt.b32 %r8449, %r3754, %r3755, %r2;
	// inline asm
	ld.local.u32 	%r3758, [%rd7+12];
	ld.local.u32 	%r3759, [%rd7+8];
	// inline asm
	prmt.b32 %r8450, %r3758, %r3759, %r2;
	// inline asm
	ld.local.u32 	%r3762, [%rd7+8];
	ld.local.u32 	%r3763, [%rd7+4];
	// inline asm
	prmt.b32 %r8443, %r3762, %r3763, %r2;
	// inline asm
	ld.local.u32 	%r3766, [%rd7+4];
	ld.local.u32 	%r3767, [%rd7];
	// inline asm
	prmt.b32 %r8444, %r3766, %r3767, %r2;
	// inline asm
	ld.local.u32 	%r3770, [%rd7];
	ld.local.u32 	%r3771, [%rd6+12];
	// inline asm
	prmt.b32 %r8445, %r3770, %r3771, %r2;
	// inline asm
	ld.local.u32 	%r3774, [%rd6+12];
	ld.local.u32 	%r3775, [%rd6+8];
	// inline asm
	prmt.b32 %r8446, %r3774, %r3775, %r2;
	// inline asm
	ld.local.u32 	%r3778, [%rd6+8];
	ld.local.u32 	%r3779, [%rd6+4];
	// inline asm
	prmt.b32 %r3777, %r3778, %r3779, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r3777;
	ld.local.u32 	%r3782, [%rd6+4];
	ld.local.u32 	%r3783, [%rd6];
	// inline asm
	prmt.b32 %r3781, %r3782, %r3783, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r3781;
	ld.local.u32 	%r3786, [%rd6];
	ld.local.u32 	%r3787, [%rd5+12];
	// inline asm
	prmt.b32 %r3785, %r3786, %r3787, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r3785;
	ld.local.u32 	%r3790, [%rd5+12];
	ld.local.u32 	%r3791, [%rd5+8];
	// inline asm
	prmt.b32 %r3789, %r3790, %r3791, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r3789;
	ld.local.u32 	%r3794, [%rd5+8];
	ld.local.u32 	%r3795, [%rd5+4];
	// inline asm
	prmt.b32 %r3793, %r3794, %r3795, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r3793;
	ld.local.u32 	%r3798, [%rd5+4];
	ld.local.u32 	%r3799, [%rd5];
	// inline asm
	prmt.b32 %r3797, %r3798, %r3799, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r3797;
	ld.local.u32 	%r3802, [%rd5];
	ld.local.u32 	%r3803, [%rd4+12];
	// inline asm
	prmt.b32 %r3801, %r3802, %r3803, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r3801;
	ld.local.u32 	%r3806, [%rd4+12];
	ld.local.u32 	%r3807, [%rd4+8];
	// inline asm
	prmt.b32 %r3805, %r3806, %r3807, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r3805;
	ld.local.u32 	%r3810, [%rd4+8];
	ld.local.u32 	%r3811, [%rd4+4];
	// inline asm
	prmt.b32 %r3809, %r3810, %r3811, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r3809;
	ld.local.u32 	%r3814, [%rd4+4];
	ld.local.u32 	%r3815, [%rd4];
	// inline asm
	prmt.b32 %r3813, %r3814, %r3815, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r3813;
	ld.local.u32 	%r3818, [%rd4];
	ld.local.u32 	%r3819, [%rd3+12];
	// inline asm
	prmt.b32 %r3817, %r3818, %r3819, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r3817;
	ld.local.u32 	%r3822, [%rd3+12];
	ld.local.u32 	%r3823, [%rd3+8];
	// inline asm
	prmt.b32 %r3821, %r3822, %r3823, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r3821;
	ld.local.u32 	%r3826, [%rd3+8];
	ld.local.u32 	%r3827, [%rd3+4];
	// inline asm
	prmt.b32 %r3825, %r3826, %r3827, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r3825;
	ld.local.u32 	%r3830, [%rd3+4];
	ld.local.u32 	%r3831, [%rd3];
	// inline asm
	prmt.b32 %r3829, %r3830, %r3831, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r3829;
	ld.local.u32 	%r3834, [%rd3];
	ld.local.u32 	%r3835, [%rd2+12];
	// inline asm
	prmt.b32 %r3833, %r3834, %r3835, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r3833;
	ld.local.u32 	%r3838, [%rd2+12];
	ld.local.u32 	%r3839, [%rd2+8];
	// inline asm
	prmt.b32 %r3837, %r3838, %r3839, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r3837;
	ld.local.u32 	%r3842, [%rd2+8];
	ld.local.u32 	%r3843, [%rd2+4];
	// inline asm
	prmt.b32 %r3841, %r3842, %r3843, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r3841;
	ld.local.u32 	%r3846, [%rd2+4];
	ld.local.u32 	%r3847, [%rd2];
	// inline asm
	prmt.b32 %r3845, %r3846, %r3847, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r3845;
	ld.local.u32 	%r3850, [%rd2];
	ld.local.u32 	%r3851, [%rd1+12];
	// inline asm
	prmt.b32 %r3849, %r3850, %r3851, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r3849;
	ld.local.u32 	%r3854, [%rd1+12];
	ld.local.u32 	%r3855, [%rd1+8];
	// inline asm
	prmt.b32 %r3853, %r3854, %r3855, %r2;
	// inline asm
	st.local.u32 	[%rd4], %r3853;
	ld.local.u32 	%r3858, [%rd1+8];
	ld.local.u32 	%r3859, [%rd1+4];
	// inline asm
	prmt.b32 %r3857, %r3858, %r3859, %r2;
	// inline asm
	st.local.u32 	[%rd3+12], %r3857;
	ld.local.u32 	%r3862, [%rd1+4];
	ld.local.u32 	%r3863, [%rd1];
	// inline asm
	prmt.b32 %r3861, %r3862, %r3863, %r2;
	// inline asm
	st.local.u32 	[%rd3+8], %r3861;
	ld.local.u32 	%r3866, [%rd1];
	// inline asm
	prmt.b32 %r3865, %r3866, %r8442, %r2;
	// inline asm
	st.local.u32 	[%rd3+4], %r3865;
	st.local.u32 	[%rd3], %r8442;
	st.local.u32 	[%rd2+12], %r8442;
	st.local.u32 	[%rd2+8], %r8442;
	st.local.u32 	[%rd2+4], %r8442;
	st.local.u32 	[%rd2], %r8442;
	st.local.u32 	[%rd1+12], %r8442;
	st.local.u32 	[%rd1+8], %r8442;
	mov.u64 	%rd121, 0;
	st.local.u32 	[%rd1+4], %rd121;
	st.local.u32 	[%rd1], %rd121;
	mov.u32 	%r8451, %r8442;
	mov.u32 	%r8452, %r8442;
	bra.uni 	BB1_80;

BB1_143:
	setp.eq.s32	%p62, %r1, 25;
	@%p62 bra 	BB1_144;
	bra.uni 	BB1_171;

BB1_144:
	ld.local.u32 	%r6295, [%rd2+8];
	ld.local.u32 	%r6296, [%rd2+4];
	// inline asm
	prmt.b32 %r6294, %r6295, %r6296, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r6294;
	ld.local.u32 	%r6299, [%rd2+4];
	ld.local.u32 	%r6300, [%rd2];
	// inline asm
	prmt.b32 %r6298, %r6299, %r6300, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r6298;
	ld.local.u32 	%r6303, [%rd2];
	ld.local.u32 	%r6304, [%rd1+12];
	// inline asm
	prmt.b32 %r6302, %r6303, %r6304, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r6302;
	ld.local.u32 	%r6307, [%rd1+12];
	ld.local.u32 	%r6308, [%rd1+8];
	// inline asm
	prmt.b32 %r6306, %r6307, %r6308, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r6306;
	ld.local.u32 	%r6311, [%rd1+8];
	ld.local.u32 	%r6312, [%rd1+4];
	// inline asm
	prmt.b32 %r6310, %r6311, %r6312, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r6310;
	ld.local.u32 	%r6315, [%rd1+4];
	ld.local.u32 	%r6316, [%rd1];
	// inline asm
	prmt.b32 %r6314, %r6315, %r6316, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r6314;
	ld.local.u32 	%r6319, [%rd1];
	mov.u32 	%r8476, 0;
	// inline asm
	prmt.b32 %r6318, %r6319, %r8476, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r6318;
	st.local.u32 	[%rd7], %r8476;
	st.local.u32 	[%rd6+12], %r8476;
	st.local.u32 	[%rd6+8], %r8476;
	st.local.u32 	[%rd6+4], %r8476;
	st.local.u32 	[%rd6], %r8476;
	st.local.u32 	[%rd5+12], %r8476;
	st.local.u32 	[%rd5+8], %r8476;
	st.local.u32 	[%rd5+4], %r8476;
	st.local.u32 	[%rd5], %r8476;
	st.local.u32 	[%rd4+12], %r8476;
	st.local.u32 	[%rd4+8], %r8476;
	st.local.u32 	[%rd4+4], %r8476;
	st.local.u32 	[%rd4], %r8476;
	st.local.u32 	[%rd3+12], %r8476;
	st.local.u32 	[%rd3+8], %r8476;
	st.local.u32 	[%rd3+4], %r8476;
	st.local.u32 	[%rd3], %r8476;
	st.local.u32 	[%rd2+12], %r8476;
	st.local.u32 	[%rd2+8], %r8476;
	st.local.u32 	[%rd2+4], %r8476;
	st.local.u32 	[%rd2], %r8476;
	st.local.u32 	[%rd1+12], %r8476;
	st.local.u32 	[%rd1+8], %r8476;
	mov.u64 	%rd1152, 0;
	st.local.u32 	[%rd1+4], %rd1152;
	st.local.u32 	[%rd1], %rd1152;
	bra.uni 	BB1_172;

BB1_53:
	setp.eq.s32	%p14, %r1, 25;
	@%p14 bra 	BB1_54;
	bra.uni 	BB1_87;

BB1_54:
	ld.local.u32 	%r1395, [%rd8+12];
	mov.u32 	%r8442, 0;
	// inline asm
	prmt.b32 %r8469, %r8442, %r1395, %r2;
	// inline asm
	ld.local.u32 	%r1398, [%rd8+12];
	ld.local.u32 	%r1399, [%rd8+8];
	// inline asm
	prmt.b32 %r8470, %r1398, %r1399, %r2;
	// inline asm
	ld.local.u32 	%r1402, [%rd8+8];
	ld.local.u32 	%r1403, [%rd8+4];
	// inline asm
	prmt.b32 %r8463, %r1402, %r1403, %r2;
	// inline asm
	ld.local.u32 	%r1406, [%rd8+4];
	ld.local.u32 	%r1407, [%rd8];
	// inline asm
	prmt.b32 %r8464, %r1406, %r1407, %r2;
	// inline asm
	ld.local.u32 	%r1410, [%rd8];
	ld.local.u32 	%r1411, [%rd7+12];
	// inline asm
	prmt.b32 %r8465, %r1410, %r1411, %r2;
	// inline asm
	ld.local.u32 	%r1414, [%rd7+12];
	ld.local.u32 	%r1415, [%rd7+8];
	// inline asm
	prmt.b32 %r8466, %r1414, %r1415, %r2;
	// inline asm
	ld.local.u32 	%r1418, [%rd7+8];
	ld.local.u32 	%r1419, [%rd7+4];
	// inline asm
	prmt.b32 %r8459, %r1418, %r1419, %r2;
	// inline asm
	ld.local.u32 	%r1422, [%rd7+4];
	ld.local.u32 	%r1423, [%rd7];
	// inline asm
	prmt.b32 %r8460, %r1422, %r1423, %r2;
	// inline asm
	ld.local.u32 	%r1426, [%rd7];
	ld.local.u32 	%r1427, [%rd6+12];
	// inline asm
	prmt.b32 %r8461, %r1426, %r1427, %r2;
	// inline asm
	ld.local.u32 	%r1430, [%rd6+12];
	ld.local.u32 	%r1431, [%rd6+8];
	// inline asm
	prmt.b32 %r8462, %r1430, %r1431, %r2;
	// inline asm
	ld.local.u32 	%r1434, [%rd6+8];
	ld.local.u32 	%r1435, [%rd6+4];
	// inline asm
	prmt.b32 %r8455, %r1434, %r1435, %r2;
	// inline asm
	ld.local.u32 	%r1438, [%rd6+4];
	ld.local.u32 	%r1439, [%rd6];
	// inline asm
	prmt.b32 %r8456, %r1438, %r1439, %r2;
	// inline asm
	ld.local.u32 	%r1442, [%rd6];
	ld.local.u32 	%r1443, [%rd5+12];
	// inline asm
	prmt.b32 %r8457, %r1442, %r1443, %r2;
	// inline asm
	ld.local.u32 	%r1446, [%rd5+12];
	ld.local.u32 	%r1447, [%rd5+8];
	// inline asm
	prmt.b32 %r8458, %r1446, %r1447, %r2;
	// inline asm
	ld.local.u32 	%r1450, [%rd5+8];
	ld.local.u32 	%r1451, [%rd5+4];
	// inline asm
	prmt.b32 %r8451, %r1450, %r1451, %r2;
	// inline asm
	ld.local.u32 	%r1454, [%rd5+4];
	ld.local.u32 	%r1455, [%rd5];
	// inline asm
	prmt.b32 %r8452, %r1454, %r1455, %r2;
	// inline asm
	ld.local.u32 	%r1458, [%rd5];
	ld.local.u32 	%r1459, [%rd4+12];
	// inline asm
	prmt.b32 %r8453, %r1458, %r1459, %r2;
	// inline asm
	ld.local.u32 	%r1462, [%rd4+12];
	ld.local.u32 	%r1463, [%rd4+8];
	// inline asm
	prmt.b32 %r8454, %r1462, %r1463, %r2;
	// inline asm
	ld.local.u32 	%r1466, [%rd4+8];
	ld.local.u32 	%r1467, [%rd4+4];
	// inline asm
	prmt.b32 %r8447, %r1466, %r1467, %r2;
	// inline asm
	ld.local.u32 	%r1470, [%rd4+4];
	ld.local.u32 	%r1471, [%rd4];
	// inline asm
	prmt.b32 %r8448, %r1470, %r1471, %r2;
	// inline asm
	ld.local.u32 	%r1474, [%rd4];
	ld.local.u32 	%r1475, [%rd3+12];
	// inline asm
	prmt.b32 %r8449, %r1474, %r1475, %r2;
	// inline asm
	ld.local.u32 	%r1478, [%rd3+12];
	ld.local.u32 	%r1479, [%rd3+8];
	// inline asm
	prmt.b32 %r8450, %r1478, %r1479, %r2;
	// inline asm
	ld.local.u32 	%r1482, [%rd3+8];
	ld.local.u32 	%r1483, [%rd3+4];
	// inline asm
	prmt.b32 %r8443, %r1482, %r1483, %r2;
	// inline asm
	ld.local.u32 	%r1486, [%rd3+4];
	ld.local.u32 	%r1487, [%rd3];
	// inline asm
	prmt.b32 %r8444, %r1486, %r1487, %r2;
	// inline asm
	ld.local.u32 	%r1490, [%rd3];
	ld.local.u32 	%r1491, [%rd2+12];
	// inline asm
	prmt.b32 %r8445, %r1490, %r1491, %r2;
	// inline asm
	ld.local.u32 	%r1494, [%rd2+12];
	ld.local.u32 	%r1495, [%rd2+8];
	// inline asm
	prmt.b32 %r8446, %r1494, %r1495, %r2;
	// inline asm
	ld.local.u32 	%r1498, [%rd2+8];
	ld.local.u32 	%r1499, [%rd2+4];
	// inline asm
	prmt.b32 %r1497, %r1498, %r1499, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r1497;
	ld.local.u32 	%r1502, [%rd2+4];
	ld.local.u32 	%r1503, [%rd2];
	// inline asm
	prmt.b32 %r1501, %r1502, %r1503, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r1501;
	ld.local.u32 	%r1506, [%rd2];
	ld.local.u32 	%r1507, [%rd1+12];
	// inline asm
	prmt.b32 %r1505, %r1506, %r1507, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r1505;
	ld.local.u32 	%r1510, [%rd1+12];
	ld.local.u32 	%r1511, [%rd1+8];
	// inline asm
	prmt.b32 %r1509, %r1510, %r1511, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r1509;
	ld.local.u32 	%r1514, [%rd1+8];
	ld.local.u32 	%r1515, [%rd1+4];
	// inline asm
	prmt.b32 %r1513, %r1514, %r1515, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r1513;
	ld.local.u32 	%r1518, [%rd1+4];
	ld.local.u32 	%r1519, [%rd1];
	// inline asm
	prmt.b32 %r1517, %r1518, %r1519, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r1517;
	ld.local.u32 	%r1522, [%rd1];
	// inline asm
	prmt.b32 %r1521, %r1522, %r8442, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r1521;
	st.local.u32 	[%rd7], %r8442;
	st.local.u32 	[%rd6+12], %r8442;
	st.local.u32 	[%rd6+8], %r8442;
	st.local.u32 	[%rd6+4], %r8442;
	st.local.u32 	[%rd6], %r8442;
	st.local.u32 	[%rd5+12], %r8442;
	st.local.u32 	[%rd5+8], %r8442;
	st.local.u32 	[%rd5+4], %r8442;
	st.local.u32 	[%rd5], %r8442;
	st.local.u32 	[%rd4+12], %r8442;
	st.local.u32 	[%rd4+8], %r8442;
	st.local.u32 	[%rd4+4], %r8442;
	st.local.u32 	[%rd4], %r8442;
	st.local.u32 	[%rd3+12], %r8442;
	st.local.u32 	[%rd3+8], %r8442;
	st.local.u32 	[%rd3+4], %r8442;
	st.local.u32 	[%rd3], %r8442;
	st.local.u32 	[%rd2+12], %r8442;
	st.local.u32 	[%rd2+8], %r8442;
	st.local.u32 	[%rd2+4], %r8442;
	st.local.u32 	[%rd2], %r8442;
	st.local.u32 	[%rd1+12], %r8442;
	st.local.u32 	[%rd1+8], %r8442;
	mov.u64 	%rd105, 0;
	st.local.u32 	[%rd1+4], %rd105;
	st.local.u32 	[%rd1], %rd105;
	mov.u32 	%r8467, %r8442;
	mov.u32 	%r8468, %r8442;
	bra.uni 	BB1_84;

BB1_104:
	setp.eq.s32	%p91, %r1, 5;
	@%p91 bra 	BB1_105;
	bra.uni 	BB1_171;

BB1_105:
	ld.local.u32 	%r7635, [%rd7+8];
	ld.local.u32 	%r7636, [%rd7+4];
	// inline asm
	prmt.b32 %r7634, %r7635, %r7636, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r7634;
	ld.local.u32 	%r7639, [%rd7+4];
	ld.local.u32 	%r7640, [%rd7];
	// inline asm
	prmt.b32 %r7638, %r7639, %r7640, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r7638;
	ld.local.u32 	%r7643, [%rd7];
	ld.local.u32 	%r7644, [%rd6+12];
	// inline asm
	prmt.b32 %r7642, %r7643, %r7644, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r7642;
	ld.local.u32 	%r7647, [%rd6+12];
	ld.local.u32 	%r7648, [%rd6+8];
	// inline asm
	prmt.b32 %r7646, %r7647, %r7648, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r7646;
	ld.local.u32 	%r7651, [%rd6+8];
	ld.local.u32 	%r7652, [%rd6+4];
	// inline asm
	prmt.b32 %r7650, %r7651, %r7652, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r7650;
	ld.local.u32 	%r7655, [%rd6+4];
	ld.local.u32 	%r7656, [%rd6];
	// inline asm
	prmt.b32 %r7654, %r7655, %r7656, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r7654;
	ld.local.u32 	%r7659, [%rd6];
	ld.local.u32 	%r7660, [%rd5+12];
	// inline asm
	prmt.b32 %r7658, %r7659, %r7660, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r7658;
	ld.local.u32 	%r7663, [%rd5+12];
	ld.local.u32 	%r7664, [%rd5+8];
	// inline asm
	prmt.b32 %r7662, %r7663, %r7664, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r7662;
	ld.local.u32 	%r7667, [%rd5+8];
	ld.local.u32 	%r7668, [%rd5+4];
	// inline asm
	prmt.b32 %r7666, %r7667, %r7668, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r7666;
	ld.local.u32 	%r7671, [%rd5+4];
	ld.local.u32 	%r7672, [%rd5];
	// inline asm
	prmt.b32 %r7670, %r7671, %r7672, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r7670;
	ld.local.u32 	%r7675, [%rd5];
	ld.local.u32 	%r7676, [%rd4+12];
	// inline asm
	prmt.b32 %r7674, %r7675, %r7676, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r7674;
	ld.local.u32 	%r7679, [%rd4+12];
	ld.local.u32 	%r7680, [%rd4+8];
	// inline asm
	prmt.b32 %r7678, %r7679, %r7680, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r7678;
	ld.local.u32 	%r7683, [%rd4+8];
	ld.local.u32 	%r7684, [%rd4+4];
	// inline asm
	prmt.b32 %r7682, %r7683, %r7684, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r7682;
	ld.local.u32 	%r7687, [%rd4+4];
	ld.local.u32 	%r7688, [%rd4];
	// inline asm
	prmt.b32 %r7686, %r7687, %r7688, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r7686;
	ld.local.u32 	%r7691, [%rd4];
	ld.local.u32 	%r7692, [%rd3+12];
	// inline asm
	prmt.b32 %r7690, %r7691, %r7692, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r7690;
	ld.local.u32 	%r7695, [%rd3+12];
	ld.local.u32 	%r7696, [%rd3+8];
	// inline asm
	prmt.b32 %r7694, %r7695, %r7696, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r7694;
	ld.local.u32 	%r7699, [%rd3+8];
	ld.local.u32 	%r7700, [%rd3+4];
	// inline asm
	prmt.b32 %r7698, %r7699, %r7700, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r7698;
	ld.local.u32 	%r7703, [%rd3+4];
	ld.local.u32 	%r7704, [%rd3];
	// inline asm
	prmt.b32 %r7702, %r7703, %r7704, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r7702;
	ld.local.u32 	%r7707, [%rd3];
	ld.local.u32 	%r7708, [%rd2+12];
	// inline asm
	prmt.b32 %r7706, %r7707, %r7708, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r7706;
	ld.local.u32 	%r7711, [%rd2+12];
	ld.local.u32 	%r7712, [%rd2+8];
	// inline asm
	prmt.b32 %r7710, %r7711, %r7712, %r2;
	// inline asm
	st.local.u32 	[%rd4], %r7710;
	ld.local.u32 	%r7715, [%rd2+8];
	ld.local.u32 	%r7716, [%rd2+4];
	// inline asm
	prmt.b32 %r7714, %r7715, %r7716, %r2;
	// inline asm
	st.local.u32 	[%rd3+12], %r7714;
	ld.local.u32 	%r7719, [%rd2+4];
	ld.local.u32 	%r7720, [%rd2];
	// inline asm
	prmt.b32 %r7718, %r7719, %r7720, %r2;
	// inline asm
	st.local.u32 	[%rd3+8], %r7718;
	ld.local.u32 	%r7723, [%rd2];
	ld.local.u32 	%r7724, [%rd1+12];
	// inline asm
	prmt.b32 %r7722, %r7723, %r7724, %r2;
	// inline asm
	st.local.u32 	[%rd3+4], %r7722;
	ld.local.u32 	%r7727, [%rd1+12];
	ld.local.u32 	%r7728, [%rd1+8];
	// inline asm
	prmt.b32 %r7726, %r7727, %r7728, %r2;
	// inline asm
	st.local.u32 	[%rd3], %r7726;
	ld.local.u32 	%r7731, [%rd1+8];
	ld.local.u32 	%r7732, [%rd1+4];
	// inline asm
	prmt.b32 %r7730, %r7731, %r7732, %r2;
	// inline asm
	st.local.u32 	[%rd2+12], %r7730;
	ld.local.u32 	%r7735, [%rd1+4];
	ld.local.u32 	%r7736, [%rd1];
	// inline asm
	prmt.b32 %r7734, %r7735, %r7736, %r2;
	// inline asm
	st.local.u32 	[%rd2+8], %r7734;
	ld.local.u32 	%r7739, [%rd1];
	mov.u32 	%r8476, 0;
	// inline asm
	prmt.b32 %r7738, %r7739, %r8476, %r2;
	// inline asm
	st.local.u32 	[%rd2+4], %r7738;
	st.local.u32 	[%rd2], %r8476;
	st.local.u32 	[%rd1+12], %r8476;
	st.local.u32 	[%rd1+8], %r8476;
	mov.u64 	%rd1172, 0;
	st.local.u32 	[%rd1+4], %rd1172;
	st.local.u32 	[%rd1], %rd1172;
	bra.uni 	BB1_172;

BB1_14:
	setp.eq.s32	%p43, %r1, 5;
	@%p43 bra 	BB1_15;
	bra.uni 	BB1_87;

BB1_15:
	ld.local.u32 	%r4365, [%rd8+12];
	mov.u32 	%r8442, 0;
	// inline asm
	prmt.b32 %r8449, %r8442, %r4365, %r2;
	// inline asm
	ld.local.u32 	%r4368, [%rd8+12];
	ld.local.u32 	%r4369, [%rd8+8];
	// inline asm
	prmt.b32 %r8450, %r4368, %r4369, %r2;
	// inline asm
	ld.local.u32 	%r4372, [%rd8+8];
	ld.local.u32 	%r4373, [%rd8+4];
	// inline asm
	prmt.b32 %r8443, %r4372, %r4373, %r2;
	// inline asm
	ld.local.u32 	%r4376, [%rd8+4];
	ld.local.u32 	%r4377, [%rd8];
	// inline asm
	prmt.b32 %r8444, %r4376, %r4377, %r2;
	// inline asm
	ld.local.u32 	%r4380, [%rd8];
	ld.local.u32 	%r4381, [%rd7+12];
	// inline asm
	prmt.b32 %r8445, %r4380, %r4381, %r2;
	// inline asm
	ld.local.u32 	%r4384, [%rd7+12];
	ld.local.u32 	%r4385, [%rd7+8];
	// inline asm
	prmt.b32 %r8446, %r4384, %r4385, %r2;
	// inline asm
	ld.local.u32 	%r4388, [%rd7+8];
	ld.local.u32 	%r4389, [%rd7+4];
	// inline asm
	prmt.b32 %r4387, %r4388, %r4389, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r4387;
	ld.local.u32 	%r4392, [%rd7+4];
	ld.local.u32 	%r4393, [%rd7];
	// inline asm
	prmt.b32 %r4391, %r4392, %r4393, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r4391;
	ld.local.u32 	%r4396, [%rd7];
	ld.local.u32 	%r4397, [%rd6+12];
	// inline asm
	prmt.b32 %r4395, %r4396, %r4397, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r4395;
	ld.local.u32 	%r4400, [%rd6+12];
	ld.local.u32 	%r4401, [%rd6+8];
	// inline asm
	prmt.b32 %r4399, %r4400, %r4401, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r4399;
	ld.local.u32 	%r4404, [%rd6+8];
	ld.local.u32 	%r4405, [%rd6+4];
	// inline asm
	prmt.b32 %r4403, %r4404, %r4405, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r4403;
	ld.local.u32 	%r4408, [%rd6+4];
	ld.local.u32 	%r4409, [%rd6];
	// inline asm
	prmt.b32 %r4407, %r4408, %r4409, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r4407;
	ld.local.u32 	%r4412, [%rd6];
	ld.local.u32 	%r4413, [%rd5+12];
	// inline asm
	prmt.b32 %r4411, %r4412, %r4413, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r4411;
	ld.local.u32 	%r4416, [%rd5+12];
	ld.local.u32 	%r4417, [%rd5+8];
	// inline asm
	prmt.b32 %r4415, %r4416, %r4417, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r4415;
	ld.local.u32 	%r4420, [%rd5+8];
	ld.local.u32 	%r4421, [%rd5+4];
	// inline asm
	prmt.b32 %r4419, %r4420, %r4421, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r4419;
	ld.local.u32 	%r4424, [%rd5+4];
	ld.local.u32 	%r4425, [%rd5];
	// inline asm
	prmt.b32 %r4423, %r4424, %r4425, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r4423;
	ld.local.u32 	%r4428, [%rd5];
	ld.local.u32 	%r4429, [%rd4+12];
	// inline asm
	prmt.b32 %r4427, %r4428, %r4429, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r4427;
	ld.local.u32 	%r4432, [%rd4+12];
	ld.local.u32 	%r4433, [%rd4+8];
	// inline asm
	prmt.b32 %r4431, %r4432, %r4433, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r4431;
	ld.local.u32 	%r4436, [%rd4+8];
	ld.local.u32 	%r4437, [%rd4+4];
	// inline asm
	prmt.b32 %r4435, %r4436, %r4437, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r4435;
	ld.local.u32 	%r4440, [%rd4+4];
	ld.local.u32 	%r4441, [%rd4];
	// inline asm
	prmt.b32 %r4439, %r4440, %r4441, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r4439;
	ld.local.u32 	%r4444, [%rd4];
	ld.local.u32 	%r4445, [%rd3+12];
	// inline asm
	prmt.b32 %r4443, %r4444, %r4445, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r4443;
	ld.local.u32 	%r4448, [%rd3+12];
	ld.local.u32 	%r4449, [%rd3+8];
	// inline asm
	prmt.b32 %r4447, %r4448, %r4449, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r4447;
	ld.local.u32 	%r4452, [%rd3+8];
	ld.local.u32 	%r4453, [%rd3+4];
	// inline asm
	prmt.b32 %r4451, %r4452, %r4453, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r4451;
	ld.local.u32 	%r4456, [%rd3+4];
	ld.local.u32 	%r4457, [%rd3];
	// inline asm
	prmt.b32 %r4455, %r4456, %r4457, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r4455;
	ld.local.u32 	%r4460, [%rd3];
	ld.local.u32 	%r4461, [%rd2+12];
	// inline asm
	prmt.b32 %r4459, %r4460, %r4461, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r4459;
	ld.local.u32 	%r4464, [%rd2+12];
	ld.local.u32 	%r4465, [%rd2+8];
	// inline asm
	prmt.b32 %r4463, %r4464, %r4465, %r2;
	// inline asm
	st.local.u32 	[%rd4], %r4463;
	ld.local.u32 	%r4468, [%rd2+8];
	ld.local.u32 	%r4469, [%rd2+4];
	// inline asm
	prmt.b32 %r4467, %r4468, %r4469, %r2;
	// inline asm
	st.local.u32 	[%rd3+12], %r4467;
	ld.local.u32 	%r4472, [%rd2+4];
	ld.local.u32 	%r4473, [%rd2];
	// inline asm
	prmt.b32 %r4471, %r4472, %r4473, %r2;
	// inline asm
	st.local.u32 	[%rd3+8], %r4471;
	ld.local.u32 	%r4476, [%rd2];
	ld.local.u32 	%r4477, [%rd1+12];
	// inline asm
	prmt.b32 %r4475, %r4476, %r4477, %r2;
	// inline asm
	st.local.u32 	[%rd3+4], %r4475;
	ld.local.u32 	%r4480, [%rd1+12];
	ld.local.u32 	%r4481, [%rd1+8];
	// inline asm
	prmt.b32 %r4479, %r4480, %r4481, %r2;
	// inline asm
	st.local.u32 	[%rd3], %r4479;
	ld.local.u32 	%r4484, [%rd1+8];
	ld.local.u32 	%r4485, [%rd1+4];
	// inline asm
	prmt.b32 %r4483, %r4484, %r4485, %r2;
	// inline asm
	st.local.u32 	[%rd2+12], %r4483;
	ld.local.u32 	%r4488, [%rd1+4];
	ld.local.u32 	%r4489, [%rd1];
	// inline asm
	prmt.b32 %r4487, %r4488, %r4489, %r2;
	// inline asm
	st.local.u32 	[%rd2+8], %r4487;
	ld.local.u32 	%r4492, [%rd1];
	// inline asm
	prmt.b32 %r4491, %r4492, %r8442, %r2;
	// inline asm
	st.local.u32 	[%rd2+4], %r4491;
	st.local.u32 	[%rd2], %r8442;
	st.local.u32 	[%rd1+12], %r8442;
	st.local.u32 	[%rd1+8], %r8442;
	mov.u64 	%rd125, 0;
	st.local.u32 	[%rd1+4], %rd125;
	st.local.u32 	[%rd1], %rd125;
	mov.u32 	%r8447, %r8442;
	mov.u32 	%r8448, %r8442;
	bra.uni 	BB1_79;

BB1_135:
	setp.eq.s32	%p68, %r1, 21;
	@%p68 bra 	BB1_136;
	bra.uni 	BB1_171;

BB1_136:
	ld.local.u32 	%r6435, [%rd3+8];
	ld.local.u32 	%r6436, [%rd3+4];
	// inline asm
	prmt.b32 %r6434, %r6435, %r6436, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r6434;
	ld.local.u32 	%r6439, [%rd3+4];
	ld.local.u32 	%r6440, [%rd3];
	// inline asm
	prmt.b32 %r6438, %r6439, %r6440, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r6438;
	ld.local.u32 	%r6443, [%rd3];
	ld.local.u32 	%r6444, [%rd2+12];
	// inline asm
	prmt.b32 %r6442, %r6443, %r6444, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r6442;
	ld.local.u32 	%r6447, [%rd2+12];
	ld.local.u32 	%r6448, [%rd2+8];
	// inline asm
	prmt.b32 %r6446, %r6447, %r6448, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r6446;
	ld.local.u32 	%r6451, [%rd2+8];
	ld.local.u32 	%r6452, [%rd2+4];
	// inline asm
	prmt.b32 %r6450, %r6451, %r6452, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r6450;
	ld.local.u32 	%r6455, [%rd2+4];
	ld.local.u32 	%r6456, [%rd2];
	// inline asm
	prmt.b32 %r6454, %r6455, %r6456, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r6454;
	ld.local.u32 	%r6459, [%rd2];
	ld.local.u32 	%r6460, [%rd1+12];
	// inline asm
	prmt.b32 %r6458, %r6459, %r6460, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r6458;
	ld.local.u32 	%r6463, [%rd1+12];
	ld.local.u32 	%r6464, [%rd1+8];
	// inline asm
	prmt.b32 %r6462, %r6463, %r6464, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r6462;
	ld.local.u32 	%r6467, [%rd1+8];
	ld.local.u32 	%r6468, [%rd1+4];
	// inline asm
	prmt.b32 %r6466, %r6467, %r6468, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r6466;
	ld.local.u32 	%r6471, [%rd1+4];
	ld.local.u32 	%r6472, [%rd1];
	// inline asm
	prmt.b32 %r6470, %r6471, %r6472, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r6470;
	ld.local.u32 	%r6475, [%rd1];
	mov.u32 	%r8476, 0;
	// inline asm
	prmt.b32 %r6474, %r6475, %r8476, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r6474;
	st.local.u32 	[%rd6], %r8476;
	st.local.u32 	[%rd5+12], %r8476;
	st.local.u32 	[%rd5+8], %r8476;
	st.local.u32 	[%rd5+4], %r8476;
	st.local.u32 	[%rd5], %r8476;
	st.local.u32 	[%rd4+12], %r8476;
	st.local.u32 	[%rd4+8], %r8476;
	st.local.u32 	[%rd4+4], %r8476;
	st.local.u32 	[%rd4], %r8476;
	st.local.u32 	[%rd3+12], %r8476;
	st.local.u32 	[%rd3+8], %r8476;
	st.local.u32 	[%rd3+4], %r8476;
	st.local.u32 	[%rd3], %r8476;
	st.local.u32 	[%rd2+12], %r8476;
	st.local.u32 	[%rd2+8], %r8476;
	st.local.u32 	[%rd2+4], %r8476;
	st.local.u32 	[%rd2], %r8476;
	st.local.u32 	[%rd1+12], %r8476;
	st.local.u32 	[%rd1+8], %r8476;
	mov.u64 	%rd1156, 0;
	st.local.u32 	[%rd1+4], %rd1156;
	st.local.u32 	[%rd1], %rd1156;
	bra.uni 	BB1_172;

BB1_45:
	setp.eq.s32	%p20, %r1, 21;
	@%p20 bra 	BB1_46;
	bra.uni 	BB1_87;

BB1_46:
	ld.local.u32 	%r1957, [%rd8+12];
	mov.u32 	%r8442, 0;
	// inline asm
	prmt.b32 %r8465, %r8442, %r1957, %r2;
	// inline asm
	ld.local.u32 	%r1960, [%rd8+12];
	ld.local.u32 	%r1961, [%rd8+8];
	// inline asm
	prmt.b32 %r8466, %r1960, %r1961, %r2;
	// inline asm
	ld.local.u32 	%r1964, [%rd8+8];
	ld.local.u32 	%r1965, [%rd8+4];
	// inline asm
	prmt.b32 %r8459, %r1964, %r1965, %r2;
	// inline asm
	ld.local.u32 	%r1968, [%rd8+4];
	ld.local.u32 	%r1969, [%rd8];
	// inline asm
	prmt.b32 %r8460, %r1968, %r1969, %r2;
	// inline asm
	ld.local.u32 	%r1972, [%rd8];
	ld.local.u32 	%r1973, [%rd7+12];
	// inline asm
	prmt.b32 %r8461, %r1972, %r1973, %r2;
	// inline asm
	ld.local.u32 	%r1976, [%rd7+12];
	ld.local.u32 	%r1977, [%rd7+8];
	// inline asm
	prmt.b32 %r8462, %r1976, %r1977, %r2;
	// inline asm
	ld.local.u32 	%r1980, [%rd7+8];
	ld.local.u32 	%r1981, [%rd7+4];
	// inline asm
	prmt.b32 %r8455, %r1980, %r1981, %r2;
	// inline asm
	ld.local.u32 	%r1984, [%rd7+4];
	ld.local.u32 	%r1985, [%rd7];
	// inline asm
	prmt.b32 %r8456, %r1984, %r1985, %r2;
	// inline asm
	ld.local.u32 	%r1988, [%rd7];
	ld.local.u32 	%r1989, [%rd6+12];
	// inline asm
	prmt.b32 %r8457, %r1988, %r1989, %r2;
	// inline asm
	ld.local.u32 	%r1992, [%rd6+12];
	ld.local.u32 	%r1993, [%rd6+8];
	// inline asm
	prmt.b32 %r8458, %r1992, %r1993, %r2;
	// inline asm
	ld.local.u32 	%r1996, [%rd6+8];
	ld.local.u32 	%r1997, [%rd6+4];
	// inline asm
	prmt.b32 %r8451, %r1996, %r1997, %r2;
	// inline asm
	ld.local.u32 	%r2000, [%rd6+4];
	ld.local.u32 	%r2001, [%rd6];
	// inline asm
	prmt.b32 %r8452, %r2000, %r2001, %r2;
	// inline asm
	ld.local.u32 	%r2004, [%rd6];
	ld.local.u32 	%r2005, [%rd5+12];
	// inline asm
	prmt.b32 %r8453, %r2004, %r2005, %r2;
	// inline asm
	ld.local.u32 	%r2008, [%rd5+12];
	ld.local.u32 	%r2009, [%rd5+8];
	// inline asm
	prmt.b32 %r8454, %r2008, %r2009, %r2;
	// inline asm
	ld.local.u32 	%r2012, [%rd5+8];
	ld.local.u32 	%r2013, [%rd5+4];
	// inline asm
	prmt.b32 %r8447, %r2012, %r2013, %r2;
	// inline asm
	ld.local.u32 	%r2016, [%rd5+4];
	ld.local.u32 	%r2017, [%rd5];
	// inline asm
	prmt.b32 %r8448, %r2016, %r2017, %r2;
	// inline asm
	ld.local.u32 	%r2020, [%rd5];
	ld.local.u32 	%r2021, [%rd4+12];
	// inline asm
	prmt.b32 %r8449, %r2020, %r2021, %r2;
	// inline asm
	ld.local.u32 	%r2024, [%rd4+12];
	ld.local.u32 	%r2025, [%rd4+8];
	// inline asm
	prmt.b32 %r8450, %r2024, %r2025, %r2;
	// inline asm
	ld.local.u32 	%r2028, [%rd4+8];
	ld.local.u32 	%r2029, [%rd4+4];
	// inline asm
	prmt.b32 %r8443, %r2028, %r2029, %r2;
	// inline asm
	ld.local.u32 	%r2032, [%rd4+4];
	ld.local.u32 	%r2033, [%rd4];
	// inline asm
	prmt.b32 %r8444, %r2032, %r2033, %r2;
	// inline asm
	ld.local.u32 	%r2036, [%rd4];
	ld.local.u32 	%r2037, [%rd3+12];
	// inline asm
	prmt.b32 %r8445, %r2036, %r2037, %r2;
	// inline asm
	ld.local.u32 	%r2040, [%rd3+12];
	ld.local.u32 	%r2041, [%rd3+8];
	// inline asm
	prmt.b32 %r8446, %r2040, %r2041, %r2;
	// inline asm
	ld.local.u32 	%r2044, [%rd3+8];
	ld.local.u32 	%r2045, [%rd3+4];
	// inline asm
	prmt.b32 %r2043, %r2044, %r2045, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r2043;
	ld.local.u32 	%r2048, [%rd3+4];
	ld.local.u32 	%r2049, [%rd3];
	// inline asm
	prmt.b32 %r2047, %r2048, %r2049, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r2047;
	ld.local.u32 	%r2052, [%rd3];
	ld.local.u32 	%r2053, [%rd2+12];
	// inline asm
	prmt.b32 %r2051, %r2052, %r2053, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r2051;
	ld.local.u32 	%r2056, [%rd2+12];
	ld.local.u32 	%r2057, [%rd2+8];
	// inline asm
	prmt.b32 %r2055, %r2056, %r2057, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r2055;
	ld.local.u32 	%r2060, [%rd2+8];
	ld.local.u32 	%r2061, [%rd2+4];
	// inline asm
	prmt.b32 %r2059, %r2060, %r2061, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r2059;
	ld.local.u32 	%r2064, [%rd2+4];
	ld.local.u32 	%r2065, [%rd2];
	// inline asm
	prmt.b32 %r2063, %r2064, %r2065, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r2063;
	ld.local.u32 	%r2068, [%rd2];
	ld.local.u32 	%r2069, [%rd1+12];
	// inline asm
	prmt.b32 %r2067, %r2068, %r2069, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r2067;
	ld.local.u32 	%r2072, [%rd1+12];
	ld.local.u32 	%r2073, [%rd1+8];
	// inline asm
	prmt.b32 %r2071, %r2072, %r2073, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r2071;
	ld.local.u32 	%r2076, [%rd1+8];
	ld.local.u32 	%r2077, [%rd1+4];
	// inline asm
	prmt.b32 %r2075, %r2076, %r2077, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r2075;
	ld.local.u32 	%r2080, [%rd1+4];
	ld.local.u32 	%r2081, [%rd1];
	// inline asm
	prmt.b32 %r2079, %r2080, %r2081, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r2079;
	ld.local.u32 	%r2084, [%rd1];
	// inline asm
	prmt.b32 %r2083, %r2084, %r8442, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r2083;
	st.local.u32 	[%rd6], %r8442;
	st.local.u32 	[%rd5+12], %r8442;
	st.local.u32 	[%rd5+8], %r8442;
	st.local.u32 	[%rd5+4], %r8442;
	st.local.u32 	[%rd5], %r8442;
	st.local.u32 	[%rd4+12], %r8442;
	st.local.u32 	[%rd4+8], %r8442;
	st.local.u32 	[%rd4+4], %r8442;
	st.local.u32 	[%rd4], %r8442;
	st.local.u32 	[%rd3+12], %r8442;
	st.local.u32 	[%rd3+8], %r8442;
	st.local.u32 	[%rd3+4], %r8442;
	st.local.u32 	[%rd3], %r8442;
	st.local.u32 	[%rd2+12], %r8442;
	st.local.u32 	[%rd2+8], %r8442;
	st.local.u32 	[%rd2+4], %r8442;
	st.local.u32 	[%rd2], %r8442;
	st.local.u32 	[%rd1+12], %r8442;
	st.local.u32 	[%rd1+8], %r8442;
	mov.u64 	%rd109, 0;
	st.local.u32 	[%rd1+4], %rd109;
	st.local.u32 	[%rd1], %rd109;
	mov.u32 	%r8463, %r8442;
	mov.u32 	%r8464, %r8442;
	bra.uni 	BB1_83;

BB1_119:
	setp.eq.s32	%p80, %r1, 13;
	@%p80 bra 	BB1_120;
	bra.uni 	BB1_171;

BB1_120:
	ld.local.u32 	%r6907, [%rd5+8];
	ld.local.u32 	%r6908, [%rd5+4];
	// inline asm
	prmt.b32 %r6906, %r6907, %r6908, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r6906;
	ld.local.u32 	%r6911, [%rd5+4];
	ld.local.u32 	%r6912, [%rd5];
	// inline asm
	prmt.b32 %r6910, %r6911, %r6912, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r6910;
	ld.local.u32 	%r6915, [%rd5];
	ld.local.u32 	%r6916, [%rd4+12];
	// inline asm
	prmt.b32 %r6914, %r6915, %r6916, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r6914;
	ld.local.u32 	%r6919, [%rd4+12];
	ld.local.u32 	%r6920, [%rd4+8];
	// inline asm
	prmt.b32 %r6918, %r6919, %r6920, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r6918;
	ld.local.u32 	%r6923, [%rd4+8];
	ld.local.u32 	%r6924, [%rd4+4];
	// inline asm
	prmt.b32 %r6922, %r6923, %r6924, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r6922;
	ld.local.u32 	%r6927, [%rd4+4];
	ld.local.u32 	%r6928, [%rd4];
	// inline asm
	prmt.b32 %r6926, %r6927, %r6928, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r6926;
	ld.local.u32 	%r6931, [%rd4];
	ld.local.u32 	%r6932, [%rd3+12];
	// inline asm
	prmt.b32 %r6930, %r6931, %r6932, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r6930;
	ld.local.u32 	%r6935, [%rd3+12];
	ld.local.u32 	%r6936, [%rd3+8];
	// inline asm
	prmt.b32 %r6934, %r6935, %r6936, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r6934;
	ld.local.u32 	%r6939, [%rd3+8];
	ld.local.u32 	%r6940, [%rd3+4];
	// inline asm
	prmt.b32 %r6938, %r6939, %r6940, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r6938;
	ld.local.u32 	%r6943, [%rd3+4];
	ld.local.u32 	%r6944, [%rd3];
	// inline asm
	prmt.b32 %r6942, %r6943, %r6944, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r6942;
	ld.local.u32 	%r6947, [%rd3];
	ld.local.u32 	%r6948, [%rd2+12];
	// inline asm
	prmt.b32 %r6946, %r6947, %r6948, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r6946;
	ld.local.u32 	%r6951, [%rd2+12];
	ld.local.u32 	%r6952, [%rd2+8];
	// inline asm
	prmt.b32 %r6950, %r6951, %r6952, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r6950;
	ld.local.u32 	%r6955, [%rd2+8];
	ld.local.u32 	%r6956, [%rd2+4];
	// inline asm
	prmt.b32 %r6954, %r6955, %r6956, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r6954;
	ld.local.u32 	%r6959, [%rd2+4];
	ld.local.u32 	%r6960, [%rd2];
	// inline asm
	prmt.b32 %r6958, %r6959, %r6960, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r6958;
	ld.local.u32 	%r6963, [%rd2];
	ld.local.u32 	%r6964, [%rd1+12];
	// inline asm
	prmt.b32 %r6962, %r6963, %r6964, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r6962;
	ld.local.u32 	%r6967, [%rd1+12];
	ld.local.u32 	%r6968, [%rd1+8];
	// inline asm
	prmt.b32 %r6966, %r6967, %r6968, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r6966;
	ld.local.u32 	%r6971, [%rd1+8];
	ld.local.u32 	%r6972, [%rd1+4];
	// inline asm
	prmt.b32 %r6970, %r6971, %r6972, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r6970;
	ld.local.u32 	%r6975, [%rd1+4];
	ld.local.u32 	%r6976, [%rd1];
	// inline asm
	prmt.b32 %r6974, %r6975, %r6976, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r6974;
	ld.local.u32 	%r6979, [%rd1];
	mov.u32 	%r8476, 0;
	// inline asm
	prmt.b32 %r6978, %r6979, %r8476, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r6978;
	st.local.u32 	[%rd4], %r8476;
	st.local.u32 	[%rd3+12], %r8476;
	st.local.u32 	[%rd3+8], %r8476;
	st.local.u32 	[%rd3+4], %r8476;
	st.local.u32 	[%rd3], %r8476;
	st.local.u32 	[%rd2+12], %r8476;
	st.local.u32 	[%rd2+8], %r8476;
	st.local.u32 	[%rd2+4], %r8476;
	st.local.u32 	[%rd2], %r8476;
	st.local.u32 	[%rd1+12], %r8476;
	st.local.u32 	[%rd1+8], %r8476;
	mov.u64 	%rd1164, 0;
	st.local.u32 	[%rd1+4], %rd1164;
	st.local.u32 	[%rd1], %rd1164;
	bra.uni 	BB1_172;

BB1_29:
	setp.eq.s32	%p32, %r1, 13;
	@%p32 bra 	BB1_30;
	bra.uni 	BB1_87;

BB1_30:
	ld.local.u32 	%r3129, [%rd8+12];
	mov.u32 	%r8442, 0;
	// inline asm
	prmt.b32 %r8457, %r8442, %r3129, %r2;
	// inline asm
	ld.local.u32 	%r3132, [%rd8+12];
	ld.local.u32 	%r3133, [%rd8+8];
	// inline asm
	prmt.b32 %r8458, %r3132, %r3133, %r2;
	// inline asm
	ld.local.u32 	%r3136, [%rd8+8];
	ld.local.u32 	%r3137, [%rd8+4];
	// inline asm
	prmt.b32 %r8451, %r3136, %r3137, %r2;
	// inline asm
	ld.local.u32 	%r3140, [%rd8+4];
	ld.local.u32 	%r3141, [%rd8];
	// inline asm
	prmt.b32 %r8452, %r3140, %r3141, %r2;
	// inline asm
	ld.local.u32 	%r3144, [%rd8];
	ld.local.u32 	%r3145, [%rd7+12];
	// inline asm
	prmt.b32 %r8453, %r3144, %r3145, %r2;
	// inline asm
	ld.local.u32 	%r3148, [%rd7+12];
	ld.local.u32 	%r3149, [%rd7+8];
	// inline asm
	prmt.b32 %r8454, %r3148, %r3149, %r2;
	// inline asm
	ld.local.u32 	%r3152, [%rd7+8];
	ld.local.u32 	%r3153, [%rd7+4];
	// inline asm
	prmt.b32 %r8447, %r3152, %r3153, %r2;
	// inline asm
	ld.local.u32 	%r3156, [%rd7+4];
	ld.local.u32 	%r3157, [%rd7];
	// inline asm
	prmt.b32 %r8448, %r3156, %r3157, %r2;
	// inline asm
	ld.local.u32 	%r3160, [%rd7];
	ld.local.u32 	%r3161, [%rd6+12];
	// inline asm
	prmt.b32 %r8449, %r3160, %r3161, %r2;
	// inline asm
	ld.local.u32 	%r3164, [%rd6+12];
	ld.local.u32 	%r3165, [%rd6+8];
	// inline asm
	prmt.b32 %r8450, %r3164, %r3165, %r2;
	// inline asm
	ld.local.u32 	%r3168, [%rd6+8];
	ld.local.u32 	%r3169, [%rd6+4];
	// inline asm
	prmt.b32 %r8443, %r3168, %r3169, %r2;
	// inline asm
	ld.local.u32 	%r3172, [%rd6+4];
	ld.local.u32 	%r3173, [%rd6];
	// inline asm
	prmt.b32 %r8444, %r3172, %r3173, %r2;
	// inline asm
	ld.local.u32 	%r3176, [%rd6];
	ld.local.u32 	%r3177, [%rd5+12];
	// inline asm
	prmt.b32 %r8445, %r3176, %r3177, %r2;
	// inline asm
	ld.local.u32 	%r3180, [%rd5+12];
	ld.local.u32 	%r3181, [%rd5+8];
	// inline asm
	prmt.b32 %r8446, %r3180, %r3181, %r2;
	// inline asm
	ld.local.u32 	%r3184, [%rd5+8];
	ld.local.u32 	%r3185, [%rd5+4];
	// inline asm
	prmt.b32 %r3183, %r3184, %r3185, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r3183;
	ld.local.u32 	%r3188, [%rd5+4];
	ld.local.u32 	%r3189, [%rd5];
	// inline asm
	prmt.b32 %r3187, %r3188, %r3189, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r3187;
	ld.local.u32 	%r3192, [%rd5];
	ld.local.u32 	%r3193, [%rd4+12];
	// inline asm
	prmt.b32 %r3191, %r3192, %r3193, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r3191;
	ld.local.u32 	%r3196, [%rd4+12];
	ld.local.u32 	%r3197, [%rd4+8];
	// inline asm
	prmt.b32 %r3195, %r3196, %r3197, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r3195;
	ld.local.u32 	%r3200, [%rd4+8];
	ld.local.u32 	%r3201, [%rd4+4];
	// inline asm
	prmt.b32 %r3199, %r3200, %r3201, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r3199;
	ld.local.u32 	%r3204, [%rd4+4];
	ld.local.u32 	%r3205, [%rd4];
	// inline asm
	prmt.b32 %r3203, %r3204, %r3205, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r3203;
	ld.local.u32 	%r3208, [%rd4];
	ld.local.u32 	%r3209, [%rd3+12];
	// inline asm
	prmt.b32 %r3207, %r3208, %r3209, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r3207;
	ld.local.u32 	%r3212, [%rd3+12];
	ld.local.u32 	%r3213, [%rd3+8];
	// inline asm
	prmt.b32 %r3211, %r3212, %r3213, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r3211;
	ld.local.u32 	%r3216, [%rd3+8];
	ld.local.u32 	%r3217, [%rd3+4];
	// inline asm
	prmt.b32 %r3215, %r3216, %r3217, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r3215;
	ld.local.u32 	%r3220, [%rd3+4];
	ld.local.u32 	%r3221, [%rd3];
	// inline asm
	prmt.b32 %r3219, %r3220, %r3221, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r3219;
	ld.local.u32 	%r3224, [%rd3];
	ld.local.u32 	%r3225, [%rd2+12];
	// inline asm
	prmt.b32 %r3223, %r3224, %r3225, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r3223;
	ld.local.u32 	%r3228, [%rd2+12];
	ld.local.u32 	%r3229, [%rd2+8];
	// inline asm
	prmt.b32 %r3227, %r3228, %r3229, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r3227;
	ld.local.u32 	%r3232, [%rd2+8];
	ld.local.u32 	%r3233, [%rd2+4];
	// inline asm
	prmt.b32 %r3231, %r3232, %r3233, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r3231;
	ld.local.u32 	%r3236, [%rd2+4];
	ld.local.u32 	%r3237, [%rd2];
	// inline asm
	prmt.b32 %r3235, %r3236, %r3237, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r3235;
	ld.local.u32 	%r3240, [%rd2];
	ld.local.u32 	%r3241, [%rd1+12];
	// inline asm
	prmt.b32 %r3239, %r3240, %r3241, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r3239;
	ld.local.u32 	%r3244, [%rd1+12];
	ld.local.u32 	%r3245, [%rd1+8];
	// inline asm
	prmt.b32 %r3243, %r3244, %r3245, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r3243;
	ld.local.u32 	%r3248, [%rd1+8];
	ld.local.u32 	%r3249, [%rd1+4];
	// inline asm
	prmt.b32 %r3247, %r3248, %r3249, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r3247;
	ld.local.u32 	%r3252, [%rd1+4];
	ld.local.u32 	%r3253, [%rd1];
	// inline asm
	prmt.b32 %r3251, %r3252, %r3253, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r3251;
	ld.local.u32 	%r3256, [%rd1];
	// inline asm
	prmt.b32 %r3255, %r3256, %r8442, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r3255;
	st.local.u32 	[%rd4], %r8442;
	st.local.u32 	[%rd3+12], %r8442;
	st.local.u32 	[%rd3+8], %r8442;
	st.local.u32 	[%rd3+4], %r8442;
	st.local.u32 	[%rd3], %r8442;
	st.local.u32 	[%rd2+12], %r8442;
	st.local.u32 	[%rd2+8], %r8442;
	st.local.u32 	[%rd2+4], %r8442;
	st.local.u32 	[%rd2], %r8442;
	st.local.u32 	[%rd1+12], %r8442;
	st.local.u32 	[%rd1+8], %r8442;
	mov.u64 	%rd117, 0;
	st.local.u32 	[%rd1+4], %rd117;
	st.local.u32 	[%rd1], %rd117;
	mov.u32 	%r8455, %r8442;
	mov.u32 	%r8456, %r8442;
	bra.uni 	BB1_81;

BB1_150:
	setp.eq.s32	%p57, %r1, 29;
	@%p57 bra 	BB1_151;
	bra.uni 	BB1_171;

BB1_151:
	ld.local.u32 	%r6219, [%rd1+8];
	ld.local.u32 	%r6220, [%rd1+4];
	// inline asm
	prmt.b32 %r6218, %r6219, %r6220, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r6218;
	ld.local.u32 	%r6223, [%rd1+4];
	ld.local.u32 	%r6224, [%rd1];
	// inline asm
	prmt.b32 %r6222, %r6223, %r6224, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r6222;
	ld.local.u32 	%r6227, [%rd1];
	mov.u32 	%r8476, 0;
	// inline asm
	prmt.b32 %r6226, %r6227, %r8476, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r6226;
	st.local.u32 	[%rd8], %r8476;
	st.local.u32 	[%rd7+12], %r8476;
	st.local.u32 	[%rd7+8], %r8476;
	st.local.u32 	[%rd7+4], %r8476;
	st.local.u32 	[%rd7], %r8476;
	st.local.u32 	[%rd6+12], %r8476;
	st.local.u32 	[%rd6+8], %r8476;
	st.local.u32 	[%rd6+4], %r8476;
	st.local.u32 	[%rd6], %r8476;
	st.local.u32 	[%rd5+12], %r8476;
	st.local.u32 	[%rd5+8], %r8476;
	st.local.u32 	[%rd5+4], %r8476;
	st.local.u32 	[%rd5], %r8476;
	st.local.u32 	[%rd4+12], %r8476;
	st.local.u32 	[%rd4+8], %r8476;
	st.local.u32 	[%rd4+4], %r8476;
	st.local.u32 	[%rd4], %r8476;
	st.local.u32 	[%rd3+12], %r8476;
	st.local.u32 	[%rd3+8], %r8476;
	st.local.u32 	[%rd3+4], %r8476;
	st.local.u32 	[%rd3], %r8476;
	st.local.u32 	[%rd2+12], %r8476;
	st.local.u32 	[%rd2+8], %r8476;
	st.local.u32 	[%rd2+4], %r8476;
	st.local.u32 	[%rd2], %r8476;
	st.local.u32 	[%rd1+12], %r8476;
	st.local.u32 	[%rd1+8], %r8476;
	mov.u64 	%rd1148, 0;
	st.local.u32 	[%rd1+4], %rd1148;
	st.local.u32 	[%rd1], %rd1148;
	bra.uni 	BB1_172;

BB1_60:
	setp.eq.s32	%p9, %r1, 29;
	@%p9 bra 	BB1_61;
	bra.uni 	BB1_87;

BB1_61:
	ld.local.u32 	%r849, [%rd8+12];
	mov.u32 	%r8442, 0;
	// inline asm
	prmt.b32 %r8473, %r8442, %r849, %r2;
	// inline asm
	ld.local.u32 	%r852, [%rd8+12];
	ld.local.u32 	%r853, [%rd8+8];
	// inline asm
	prmt.b32 %r8474, %r852, %r853, %r2;
	// inline asm
	ld.local.u32 	%r856, [%rd8+8];
	ld.local.u32 	%r857, [%rd8+4];
	// inline asm
	prmt.b32 %r8467, %r856, %r857, %r2;
	// inline asm
	ld.local.u32 	%r860, [%rd8+4];
	ld.local.u32 	%r861, [%rd8];
	// inline asm
	prmt.b32 %r8468, %r860, %r861, %r2;
	// inline asm
	ld.local.u32 	%r864, [%rd8];
	ld.local.u32 	%r865, [%rd7+12];
	// inline asm
	prmt.b32 %r8469, %r864, %r865, %r2;
	// inline asm
	ld.local.u32 	%r868, [%rd7+12];
	ld.local.u32 	%r869, [%rd7+8];
	// inline asm
	prmt.b32 %r8470, %r868, %r869, %r2;
	// inline asm
	ld.local.u32 	%r872, [%rd7+8];
	ld.local.u32 	%r873, [%rd7+4];
	// inline asm
	prmt.b32 %r8463, %r872, %r873, %r2;
	// inline asm
	ld.local.u32 	%r876, [%rd7+4];
	ld.local.u32 	%r877, [%rd7];
	// inline asm
	prmt.b32 %r8464, %r876, %r877, %r2;
	// inline asm
	ld.local.u32 	%r880, [%rd7];
	ld.local.u32 	%r881, [%rd6+12];
	// inline asm
	prmt.b32 %r8465, %r880, %r881, %r2;
	// inline asm
	ld.local.u32 	%r884, [%rd6+12];
	ld.local.u32 	%r885, [%rd6+8];
	// inline asm
	prmt.b32 %r8466, %r884, %r885, %r2;
	// inline asm
	ld.local.u32 	%r888, [%rd6+8];
	ld.local.u32 	%r889, [%rd6+4];
	// inline asm
	prmt.b32 %r8459, %r888, %r889, %r2;
	// inline asm
	ld.local.u32 	%r892, [%rd6+4];
	ld.local.u32 	%r893, [%rd6];
	// inline asm
	prmt.b32 %r8460, %r892, %r893, %r2;
	// inline asm
	ld.local.u32 	%r896, [%rd6];
	ld.local.u32 	%r897, [%rd5+12];
	// inline asm
	prmt.b32 %r8461, %r896, %r897, %r2;
	// inline asm
	ld.local.u32 	%r900, [%rd5+12];
	ld.local.u32 	%r901, [%rd5+8];
	// inline asm
	prmt.b32 %r8462, %r900, %r901, %r2;
	// inline asm
	ld.local.u32 	%r904, [%rd5+8];
	ld.local.u32 	%r905, [%rd5+4];
	// inline asm
	prmt.b32 %r8455, %r904, %r905, %r2;
	// inline asm
	ld.local.u32 	%r908, [%rd5+4];
	ld.local.u32 	%r909, [%rd5];
	// inline asm
	prmt.b32 %r8456, %r908, %r909, %r2;
	// inline asm
	ld.local.u32 	%r912, [%rd5];
	ld.local.u32 	%r913, [%rd4+12];
	// inline asm
	prmt.b32 %r8457, %r912, %r913, %r2;
	// inline asm
	ld.local.u32 	%r916, [%rd4+12];
	ld.local.u32 	%r917, [%rd4+8];
	// inline asm
	prmt.b32 %r8458, %r916, %r917, %r2;
	// inline asm
	ld.local.u32 	%r920, [%rd4+8];
	ld.local.u32 	%r921, [%rd4+4];
	// inline asm
	prmt.b32 %r8451, %r920, %r921, %r2;
	// inline asm
	ld.local.u32 	%r924, [%rd4+4];
	ld.local.u32 	%r925, [%rd4];
	// inline asm
	prmt.b32 %r8452, %r924, %r925, %r2;
	// inline asm
	ld.local.u32 	%r928, [%rd4];
	ld.local.u32 	%r929, [%rd3+12];
	// inline asm
	prmt.b32 %r8453, %r928, %r929, %r2;
	// inline asm
	ld.local.u32 	%r932, [%rd3+12];
	ld.local.u32 	%r933, [%rd3+8];
	// inline asm
	prmt.b32 %r8454, %r932, %r933, %r2;
	// inline asm
	ld.local.u32 	%r936, [%rd3+8];
	ld.local.u32 	%r937, [%rd3+4];
	// inline asm
	prmt.b32 %r8447, %r936, %r937, %r2;
	// inline asm
	ld.local.u32 	%r940, [%rd3+4];
	ld.local.u32 	%r941, [%rd3];
	// inline asm
	prmt.b32 %r8448, %r940, %r941, %r2;
	// inline asm
	ld.local.u32 	%r944, [%rd3];
	ld.local.u32 	%r945, [%rd2+12];
	// inline asm
	prmt.b32 %r8449, %r944, %r945, %r2;
	// inline asm
	ld.local.u32 	%r948, [%rd2+12];
	ld.local.u32 	%r949, [%rd2+8];
	// inline asm
	prmt.b32 %r8450, %r948, %r949, %r2;
	// inline asm
	ld.local.u32 	%r952, [%rd2+8];
	ld.local.u32 	%r953, [%rd2+4];
	// inline asm
	prmt.b32 %r8443, %r952, %r953, %r2;
	// inline asm
	ld.local.u32 	%r956, [%rd2+4];
	ld.local.u32 	%r957, [%rd2];
	// inline asm
	prmt.b32 %r8444, %r956, %r957, %r2;
	// inline asm
	ld.local.u32 	%r960, [%rd2];
	ld.local.u32 	%r961, [%rd1+12];
	// inline asm
	prmt.b32 %r8445, %r960, %r961, %r2;
	// inline asm
	ld.local.u32 	%r964, [%rd1+12];
	ld.local.u32 	%r965, [%rd1+8];
	// inline asm
	prmt.b32 %r8446, %r964, %r965, %r2;
	// inline asm
	ld.local.u32 	%r968, [%rd1+8];
	ld.local.u32 	%r969, [%rd1+4];
	// inline asm
	prmt.b32 %r967, %r968, %r969, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r967;
	ld.local.u32 	%r972, [%rd1+4];
	ld.local.u32 	%r973, [%rd1];
	// inline asm
	prmt.b32 %r971, %r972, %r973, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r971;
	ld.local.u32 	%r976, [%rd1];
	// inline asm
	prmt.b32 %r975, %r976, %r8442, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r975;
	st.local.u32 	[%rd8], %r8442;
	st.local.u32 	[%rd7+12], %r8442;
	st.local.u32 	[%rd7+8], %r8442;
	st.local.u32 	[%rd7+4], %r8442;
	st.local.u32 	[%rd7], %r8442;
	st.local.u32 	[%rd6+12], %r8442;
	st.local.u32 	[%rd6+8], %r8442;
	st.local.u32 	[%rd6+4], %r8442;
	st.local.u32 	[%rd6], %r8442;
	st.local.u32 	[%rd5+12], %r8442;
	st.local.u32 	[%rd5+8], %r8442;
	st.local.u32 	[%rd5+4], %r8442;
	st.local.u32 	[%rd5], %r8442;
	st.local.u32 	[%rd4+12], %r8442;
	st.local.u32 	[%rd4+8], %r8442;
	st.local.u32 	[%rd4+4], %r8442;
	st.local.u32 	[%rd4], %r8442;
	st.local.u32 	[%rd3+12], %r8442;
	st.local.u32 	[%rd3+8], %r8442;
	st.local.u32 	[%rd3+4], %r8442;
	st.local.u32 	[%rd3], %r8442;
	st.local.u32 	[%rd2+12], %r8442;
	st.local.u32 	[%rd2+8], %r8442;
	st.local.u32 	[%rd2+4], %r8442;
	st.local.u32 	[%rd2], %r8442;
	st.local.u32 	[%rd1+12], %r8442;
	st.local.u32 	[%rd1+8], %r8442;
	mov.u64 	%rd101, 0;
	st.local.u32 	[%rd1+4], %rd101;
	st.local.u32 	[%rd1], %rd101;
	mov.u32 	%r8471, %r8442;
	mov.u32 	%r8472, %r8442;
	bra.uni 	BB1_89;

BB1_100:
	setp.eq.s32	%p94, %r1, 3;
	@%p94 bra 	BB1_101;
	bra.uni 	BB1_171;

BB1_101:
	ld.local.u32 	%r7857, [%rd8];
	ld.local.u32 	%r7858, [%rd7+12];
	// inline asm
	prmt.b32 %r7856, %r7857, %r7858, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r7856;
	ld.local.u32 	%r7861, [%rd7+12];
	ld.local.u32 	%r7862, [%rd7+8];
	// inline asm
	prmt.b32 %r7860, %r7861, %r7862, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r7860;
	ld.local.u32 	%r7865, [%rd7+8];
	ld.local.u32 	%r7866, [%rd7+4];
	// inline asm
	prmt.b32 %r7864, %r7865, %r7866, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r7864;
	ld.local.u32 	%r7869, [%rd7+4];
	ld.local.u32 	%r7870, [%rd7];
	// inline asm
	prmt.b32 %r7868, %r7869, %r7870, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r7868;
	ld.local.u32 	%r7873, [%rd7];
	ld.local.u32 	%r7874, [%rd6+12];
	// inline asm
	prmt.b32 %r7872, %r7873, %r7874, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r7872;
	ld.local.u32 	%r7877, [%rd6+12];
	ld.local.u32 	%r7878, [%rd6+8];
	// inline asm
	prmt.b32 %r7876, %r7877, %r7878, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r7876;
	ld.local.u32 	%r7881, [%rd6+8];
	ld.local.u32 	%r7882, [%rd6+4];
	// inline asm
	prmt.b32 %r7880, %r7881, %r7882, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r7880;
	ld.local.u32 	%r7885, [%rd6+4];
	ld.local.u32 	%r7886, [%rd6];
	// inline asm
	prmt.b32 %r7884, %r7885, %r7886, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r7884;
	ld.local.u32 	%r7889, [%rd6];
	ld.local.u32 	%r7890, [%rd5+12];
	// inline asm
	prmt.b32 %r7888, %r7889, %r7890, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r7888;
	ld.local.u32 	%r7893, [%rd5+12];
	ld.local.u32 	%r7894, [%rd5+8];
	// inline asm
	prmt.b32 %r7892, %r7893, %r7894, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r7892;
	ld.local.u32 	%r7897, [%rd5+8];
	ld.local.u32 	%r7898, [%rd5+4];
	// inline asm
	prmt.b32 %r7896, %r7897, %r7898, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r7896;
	ld.local.u32 	%r7901, [%rd5+4];
	ld.local.u32 	%r7902, [%rd5];
	// inline asm
	prmt.b32 %r7900, %r7901, %r7902, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r7900;
	ld.local.u32 	%r7905, [%rd5];
	ld.local.u32 	%r7906, [%rd4+12];
	// inline asm
	prmt.b32 %r7904, %r7905, %r7906, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r7904;
	ld.local.u32 	%r7909, [%rd4+12];
	ld.local.u32 	%r7910, [%rd4+8];
	// inline asm
	prmt.b32 %r7908, %r7909, %r7910, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r7908;
	ld.local.u32 	%r7913, [%rd4+8];
	ld.local.u32 	%r7914, [%rd4+4];
	// inline asm
	prmt.b32 %r7912, %r7913, %r7914, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r7912;
	ld.local.u32 	%r7917, [%rd4+4];
	ld.local.u32 	%r7918, [%rd4];
	// inline asm
	prmt.b32 %r7916, %r7917, %r7918, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r7916;
	ld.local.u32 	%r7921, [%rd4];
	ld.local.u32 	%r7922, [%rd3+12];
	// inline asm
	prmt.b32 %r7920, %r7921, %r7922, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r7920;
	ld.local.u32 	%r7925, [%rd3+12];
	ld.local.u32 	%r7926, [%rd3+8];
	// inline asm
	prmt.b32 %r7924, %r7925, %r7926, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r7924;
	ld.local.u32 	%r7929, [%rd3+8];
	ld.local.u32 	%r7930, [%rd3+4];
	// inline asm
	prmt.b32 %r7928, %r7929, %r7930, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r7928;
	ld.local.u32 	%r7933, [%rd3+4];
	ld.local.u32 	%r7934, [%rd3];
	// inline asm
	prmt.b32 %r7932, %r7933, %r7934, %r2;
	// inline asm
	st.local.u32 	[%rd4], %r7932;
	ld.local.u32 	%r7937, [%rd3];
	ld.local.u32 	%r7938, [%rd2+12];
	// inline asm
	prmt.b32 %r7936, %r7937, %r7938, %r2;
	// inline asm
	st.local.u32 	[%rd3+12], %r7936;
	ld.local.u32 	%r7941, [%rd2+12];
	ld.local.u32 	%r7942, [%rd2+8];
	// inline asm
	prmt.b32 %r7940, %r7941, %r7942, %r2;
	// inline asm
	st.local.u32 	[%rd3+8], %r7940;
	ld.local.u32 	%r7945, [%rd2+8];
	ld.local.u32 	%r7946, [%rd2+4];
	// inline asm
	prmt.b32 %r7944, %r7945, %r7946, %r2;
	// inline asm
	st.local.u32 	[%rd3+4], %r7944;
	ld.local.u32 	%r7949, [%rd2+4];
	ld.local.u32 	%r7950, [%rd2];
	// inline asm
	prmt.b32 %r7948, %r7949, %r7950, %r2;
	// inline asm
	st.local.u32 	[%rd3], %r7948;
	ld.local.u32 	%r7953, [%rd2];
	ld.local.u32 	%r7954, [%rd1+12];
	// inline asm
	prmt.b32 %r7952, %r7953, %r7954, %r2;
	// inline asm
	st.local.u32 	[%rd2+12], %r7952;
	ld.local.u32 	%r7957, [%rd1+12];
	ld.local.u32 	%r7958, [%rd1+8];
	// inline asm
	prmt.b32 %r7956, %r7957, %r7958, %r2;
	// inline asm
	st.local.u32 	[%rd2+8], %r7956;
	ld.local.u32 	%r7961, [%rd1+8];
	ld.local.u32 	%r7962, [%rd1+4];
	// inline asm
	prmt.b32 %r7960, %r7961, %r7962, %r2;
	// inline asm
	st.local.u32 	[%rd2+4], %r7960;
	ld.local.u32 	%r7965, [%rd1+4];
	ld.local.u32 	%r7966, [%rd1];
	// inline asm
	prmt.b32 %r7964, %r7965, %r7966, %r2;
	// inline asm
	st.local.u32 	[%rd2], %r7964;
	ld.local.u32 	%r7969, [%rd1];
	mov.u32 	%r8476, 0;
	// inline asm
	prmt.b32 %r7968, %r7969, %r8476, %r2;
	// inline asm
	st.local.u32 	[%rd1+12], %r7968;
	st.local.u32 	[%rd1+8], %r8476;
	mov.u64 	%rd1174, 0;
	st.local.u32 	[%rd1+4], %rd1174;
	st.local.u32 	[%rd1], %rd1174;
	bra.uni 	BB1_172;

BB1_9:
	setp.eq.s32	%p46, %r1, 3;
	@%p46 bra 	BB1_10;
	bra.uni 	BB1_87;

BB1_10:
	ld.local.u32 	%r4684, [%rd8+12];
	mov.u32 	%r8442, 0;
	// inline asm
	prmt.b32 %r8443, %r8442, %r4684, %r2;
	// inline asm
	ld.local.u32 	%r4687, [%rd8+12];
	ld.local.u32 	%r4688, [%rd8+8];
	// inline asm
	prmt.b32 %r8444, %r4687, %r4688, %r2;
	// inline asm
	ld.local.u32 	%r4691, [%rd8+8];
	ld.local.u32 	%r4692, [%rd8+4];
	// inline asm
	prmt.b32 %r8445, %r4691, %r4692, %r2;
	// inline asm
	ld.local.u32 	%r4695, [%rd8+4];
	ld.local.u32 	%r4696, [%rd8];
	// inline asm
	prmt.b32 %r8446, %r4695, %r4696, %r2;
	// inline asm
	ld.local.u32 	%r4699, [%rd8];
	ld.local.u32 	%r4700, [%rd7+12];
	// inline asm
	prmt.b32 %r4698, %r4699, %r4700, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r4698;
	ld.local.u32 	%r4703, [%rd7+12];
	ld.local.u32 	%r4704, [%rd7+8];
	// inline asm
	prmt.b32 %r4702, %r4703, %r4704, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r4702;
	ld.local.u32 	%r4707, [%rd7+8];
	ld.local.u32 	%r4708, [%rd7+4];
	// inline asm
	prmt.b32 %r4706, %r4707, %r4708, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r4706;
	ld.local.u32 	%r4711, [%rd7+4];
	ld.local.u32 	%r4712, [%rd7];
	// inline asm
	prmt.b32 %r4710, %r4711, %r4712, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r4710;
	ld.local.u32 	%r4715, [%rd7];
	ld.local.u32 	%r4716, [%rd6+12];
	// inline asm
	prmt.b32 %r4714, %r4715, %r4716, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r4714;
	ld.local.u32 	%r4719, [%rd6+12];
	ld.local.u32 	%r4720, [%rd6+8];
	// inline asm
	prmt.b32 %r4718, %r4719, %r4720, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r4718;
	ld.local.u32 	%r4723, [%rd6+8];
	ld.local.u32 	%r4724, [%rd6+4];
	// inline asm
	prmt.b32 %r4722, %r4723, %r4724, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r4722;
	ld.local.u32 	%r4727, [%rd6+4];
	ld.local.u32 	%r4728, [%rd6];
	// inline asm
	prmt.b32 %r4726, %r4727, %r4728, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r4726;
	ld.local.u32 	%r4731, [%rd6];
	ld.local.u32 	%r4732, [%rd5+12];
	// inline asm
	prmt.b32 %r4730, %r4731, %r4732, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r4730;
	ld.local.u32 	%r4735, [%rd5+12];
	ld.local.u32 	%r4736, [%rd5+8];
	// inline asm
	prmt.b32 %r4734, %r4735, %r4736, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r4734;
	ld.local.u32 	%r4739, [%rd5+8];
	ld.local.u32 	%r4740, [%rd5+4];
	// inline asm
	prmt.b32 %r4738, %r4739, %r4740, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r4738;
	ld.local.u32 	%r4743, [%rd5+4];
	ld.local.u32 	%r4744, [%rd5];
	// inline asm
	prmt.b32 %r4742, %r4743, %r4744, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r4742;
	ld.local.u32 	%r4747, [%rd5];
	ld.local.u32 	%r4748, [%rd4+12];
	// inline asm
	prmt.b32 %r4746, %r4747, %r4748, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r4746;
	ld.local.u32 	%r4751, [%rd4+12];
	ld.local.u32 	%r4752, [%rd4+8];
	// inline asm
	prmt.b32 %r4750, %r4751, %r4752, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r4750;
	ld.local.u32 	%r4755, [%rd4+8];
	ld.local.u32 	%r4756, [%rd4+4];
	// inline asm
	prmt.b32 %r4754, %r4755, %r4756, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r4754;
	ld.local.u32 	%r4759, [%rd4+4];
	ld.local.u32 	%r4760, [%rd4];
	// inline asm
	prmt.b32 %r4758, %r4759, %r4760, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r4758;
	ld.local.u32 	%r4763, [%rd4];
	ld.local.u32 	%r4764, [%rd3+12];
	// inline asm
	prmt.b32 %r4762, %r4763, %r4764, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r4762;
	ld.local.u32 	%r4767, [%rd3+12];
	ld.local.u32 	%r4768, [%rd3+8];
	// inline asm
	prmt.b32 %r4766, %r4767, %r4768, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r4766;
	ld.local.u32 	%r4771, [%rd3+8];
	ld.local.u32 	%r4772, [%rd3+4];
	// inline asm
	prmt.b32 %r4770, %r4771, %r4772, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r4770;
	ld.local.u32 	%r4775, [%rd3+4];
	ld.local.u32 	%r4776, [%rd3];
	// inline asm
	prmt.b32 %r4774, %r4775, %r4776, %r2;
	// inline asm
	st.local.u32 	[%rd4], %r4774;
	ld.local.u32 	%r4779, [%rd3];
	ld.local.u32 	%r4780, [%rd2+12];
	// inline asm
	prmt.b32 %r4778, %r4779, %r4780, %r2;
	// inline asm
	st.local.u32 	[%rd3+12], %r4778;
	ld.local.u32 	%r4783, [%rd2+12];
	ld.local.u32 	%r4784, [%rd2+8];
	// inline asm
	prmt.b32 %r4782, %r4783, %r4784, %r2;
	// inline asm
	st.local.u32 	[%rd3+8], %r4782;
	ld.local.u32 	%r4787, [%rd2+8];
	ld.local.u32 	%r4788, [%rd2+4];
	// inline asm
	prmt.b32 %r4786, %r4787, %r4788, %r2;
	// inline asm
	st.local.u32 	[%rd3+4], %r4786;
	ld.local.u32 	%r4791, [%rd2+4];
	ld.local.u32 	%r4792, [%rd2];
	// inline asm
	prmt.b32 %r4790, %r4791, %r4792, %r2;
	// inline asm
	st.local.u32 	[%rd3], %r4790;
	ld.local.u32 	%r4795, [%rd2];
	ld.local.u32 	%r4796, [%rd1+12];
	// inline asm
	prmt.b32 %r4794, %r4795, %r4796, %r2;
	// inline asm
	st.local.u32 	[%rd2+12], %r4794;
	ld.local.u32 	%r4799, [%rd1+12];
	ld.local.u32 	%r4800, [%rd1+8];
	// inline asm
	prmt.b32 %r4798, %r4799, %r4800, %r2;
	// inline asm
	st.local.u32 	[%rd2+8], %r4798;
	ld.local.u32 	%r4803, [%rd1+8];
	ld.local.u32 	%r4804, [%rd1+4];
	// inline asm
	prmt.b32 %r4802, %r4803, %r4804, %r2;
	// inline asm
	st.local.u32 	[%rd2+4], %r4802;
	ld.local.u32 	%r4807, [%rd1+4];
	ld.local.u32 	%r4808, [%rd1];
	// inline asm
	prmt.b32 %r4806, %r4807, %r4808, %r2;
	// inline asm
	st.local.u32 	[%rd2], %r4806;
	ld.local.u32 	%r4811, [%rd1];
	// inline asm
	prmt.b32 %r4810, %r4811, %r8442, %r2;
	// inline asm
	st.local.u32 	[%rd1+12], %r4810;
	st.local.u32 	[%rd1+8], %r8442;
	mov.u64 	%rd127, 0;
	st.local.u32 	[%rd1+4], %rd127;
	st.local.u32 	[%rd1], %rd127;

BB1_11:
	mov.u32 	%r8447, %r8442;
	mov.u32 	%r8448, %r8442;
	mov.u32 	%r8449, %r8442;
	mov.u32 	%r8450, %r8442;
	bra.uni 	BB1_79;

BB1_131:
	setp.eq.s32	%p71, %r1, 19;
	@%p71 bra 	BB1_132;
	bra.uni 	BB1_171;

BB1_132:
	ld.local.u32 	%r6529, [%rd4];
	ld.local.u32 	%r6530, [%rd3+12];
	// inline asm
	prmt.b32 %r6528, %r6529, %r6530, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r6528;
	ld.local.u32 	%r6533, [%rd3+12];
	ld.local.u32 	%r6534, [%rd3+8];
	// inline asm
	prmt.b32 %r6532, %r6533, %r6534, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r6532;
	ld.local.u32 	%r6537, [%rd3+8];
	ld.local.u32 	%r6538, [%rd3+4];
	// inline asm
	prmt.b32 %r6536, %r6537, %r6538, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r6536;
	ld.local.u32 	%r6541, [%rd3+4];
	ld.local.u32 	%r6542, [%rd3];
	// inline asm
	prmt.b32 %r6540, %r6541, %r6542, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r6540;
	ld.local.u32 	%r6545, [%rd3];
	ld.local.u32 	%r6546, [%rd2+12];
	// inline asm
	prmt.b32 %r6544, %r6545, %r6546, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r6544;
	ld.local.u32 	%r6549, [%rd2+12];
	ld.local.u32 	%r6550, [%rd2+8];
	// inline asm
	prmt.b32 %r6548, %r6549, %r6550, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r6548;
	ld.local.u32 	%r6553, [%rd2+8];
	ld.local.u32 	%r6554, [%rd2+4];
	// inline asm
	prmt.b32 %r6552, %r6553, %r6554, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r6552;
	ld.local.u32 	%r6557, [%rd2+4];
	ld.local.u32 	%r6558, [%rd2];
	// inline asm
	prmt.b32 %r6556, %r6557, %r6558, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r6556;
	ld.local.u32 	%r6561, [%rd2];
	ld.local.u32 	%r6562, [%rd1+12];
	// inline asm
	prmt.b32 %r6560, %r6561, %r6562, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r6560;
	ld.local.u32 	%r6565, [%rd1+12];
	ld.local.u32 	%r6566, [%rd1+8];
	// inline asm
	prmt.b32 %r6564, %r6565, %r6566, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r6564;
	ld.local.u32 	%r6569, [%rd1+8];
	ld.local.u32 	%r6570, [%rd1+4];
	// inline asm
	prmt.b32 %r6568, %r6569, %r6570, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r6568;
	ld.local.u32 	%r6573, [%rd1+4];
	ld.local.u32 	%r6574, [%rd1];
	// inline asm
	prmt.b32 %r6572, %r6573, %r6574, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r6572;
	ld.local.u32 	%r6577, [%rd1];
	mov.u32 	%r8476, 0;
	// inline asm
	prmt.b32 %r6576, %r6577, %r8476, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r6576;
	st.local.u32 	[%rd5+8], %r8476;
	st.local.u32 	[%rd5+4], %r8476;
	st.local.u32 	[%rd5], %r8476;
	st.local.u32 	[%rd4+12], %r8476;
	st.local.u32 	[%rd4+8], %r8476;
	st.local.u32 	[%rd4+4], %r8476;
	st.local.u32 	[%rd4], %r8476;
	st.local.u32 	[%rd3+12], %r8476;
	st.local.u32 	[%rd3+8], %r8476;
	st.local.u32 	[%rd3+4], %r8476;
	st.local.u32 	[%rd3], %r8476;
	st.local.u32 	[%rd2+12], %r8476;
	st.local.u32 	[%rd2+8], %r8476;
	st.local.u32 	[%rd2+4], %r8476;
	st.local.u32 	[%rd2], %r8476;
	st.local.u32 	[%rd1+12], %r8476;
	st.local.u32 	[%rd1+8], %r8476;
	mov.u64 	%rd1158, 0;
	st.local.u32 	[%rd1+4], %rd1158;
	st.local.u32 	[%rd1], %rd1158;
	bra.uni 	BB1_172;

BB1_41:
	setp.eq.s32	%p23, %r1, 19;
	@%p23 bra 	BB1_42;
	bra.uni 	BB1_87;

BB1_42:
	ld.local.u32 	%r2244, [%rd8+12];
	mov.u32 	%r8442, 0;
	// inline asm
	prmt.b32 %r8459, %r8442, %r2244, %r2;
	// inline asm
	ld.local.u32 	%r2247, [%rd8+12];
	ld.local.u32 	%r2248, [%rd8+8];
	// inline asm
	prmt.b32 %r8460, %r2247, %r2248, %r2;
	// inline asm
	ld.local.u32 	%r2251, [%rd8+8];
	ld.local.u32 	%r2252, [%rd8+4];
	// inline asm
	prmt.b32 %r8461, %r2251, %r2252, %r2;
	// inline asm
	ld.local.u32 	%r2255, [%rd8+4];
	ld.local.u32 	%r2256, [%rd8];
	// inline asm
	prmt.b32 %r8462, %r2255, %r2256, %r2;
	// inline asm
	ld.local.u32 	%r2259, [%rd8];
	ld.local.u32 	%r2260, [%rd7+12];
	// inline asm
	prmt.b32 %r8455, %r2259, %r2260, %r2;
	// inline asm
	ld.local.u32 	%r2263, [%rd7+12];
	ld.local.u32 	%r2264, [%rd7+8];
	// inline asm
	prmt.b32 %r8456, %r2263, %r2264, %r2;
	// inline asm
	ld.local.u32 	%r2267, [%rd7+8];
	ld.local.u32 	%r2268, [%rd7+4];
	// inline asm
	prmt.b32 %r8457, %r2267, %r2268, %r2;
	// inline asm
	ld.local.u32 	%r2271, [%rd7+4];
	ld.local.u32 	%r2272, [%rd7];
	// inline asm
	prmt.b32 %r8458, %r2271, %r2272, %r2;
	// inline asm
	ld.local.u32 	%r2275, [%rd7];
	ld.local.u32 	%r2276, [%rd6+12];
	// inline asm
	prmt.b32 %r8451, %r2275, %r2276, %r2;
	// inline asm
	ld.local.u32 	%r2279, [%rd6+12];
	ld.local.u32 	%r2280, [%rd6+8];
	// inline asm
	prmt.b32 %r8452, %r2279, %r2280, %r2;
	// inline asm
	ld.local.u32 	%r2283, [%rd6+8];
	ld.local.u32 	%r2284, [%rd6+4];
	// inline asm
	prmt.b32 %r8453, %r2283, %r2284, %r2;
	// inline asm
	ld.local.u32 	%r2287, [%rd6+4];
	ld.local.u32 	%r2288, [%rd6];
	// inline asm
	prmt.b32 %r8454, %r2287, %r2288, %r2;
	// inline asm
	ld.local.u32 	%r2291, [%rd6];
	ld.local.u32 	%r2292, [%rd5+12];
	// inline asm
	prmt.b32 %r8447, %r2291, %r2292, %r2;
	// inline asm
	ld.local.u32 	%r2295, [%rd5+12];
	ld.local.u32 	%r2296, [%rd5+8];
	// inline asm
	prmt.b32 %r8448, %r2295, %r2296, %r2;
	// inline asm
	ld.local.u32 	%r2299, [%rd5+8];
	ld.local.u32 	%r2300, [%rd5+4];
	// inline asm
	prmt.b32 %r8449, %r2299, %r2300, %r2;
	// inline asm
	ld.local.u32 	%r2303, [%rd5+4];
	ld.local.u32 	%r2304, [%rd5];
	// inline asm
	prmt.b32 %r8450, %r2303, %r2304, %r2;
	// inline asm
	ld.local.u32 	%r2307, [%rd5];
	ld.local.u32 	%r2308, [%rd4+12];
	// inline asm
	prmt.b32 %r8443, %r2307, %r2308, %r2;
	// inline asm
	ld.local.u32 	%r2311, [%rd4+12];
	ld.local.u32 	%r2312, [%rd4+8];
	// inline asm
	prmt.b32 %r8444, %r2311, %r2312, %r2;
	// inline asm
	ld.local.u32 	%r2315, [%rd4+8];
	ld.local.u32 	%r2316, [%rd4+4];
	// inline asm
	prmt.b32 %r8445, %r2315, %r2316, %r2;
	// inline asm
	ld.local.u32 	%r2319, [%rd4+4];
	ld.local.u32 	%r2320, [%rd4];
	// inline asm
	prmt.b32 %r8446, %r2319, %r2320, %r2;
	// inline asm
	ld.local.u32 	%r2323, [%rd4];
	ld.local.u32 	%r2324, [%rd3+12];
	// inline asm
	prmt.b32 %r2322, %r2323, %r2324, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r2322;
	ld.local.u32 	%r2327, [%rd3+12];
	ld.local.u32 	%r2328, [%rd3+8];
	// inline asm
	prmt.b32 %r2326, %r2327, %r2328, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r2326;
	ld.local.u32 	%r2331, [%rd3+8];
	ld.local.u32 	%r2332, [%rd3+4];
	// inline asm
	prmt.b32 %r2330, %r2331, %r2332, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r2330;
	ld.local.u32 	%r2335, [%rd3+4];
	ld.local.u32 	%r2336, [%rd3];
	// inline asm
	prmt.b32 %r2334, %r2335, %r2336, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r2334;
	ld.local.u32 	%r2339, [%rd3];
	ld.local.u32 	%r2340, [%rd2+12];
	// inline asm
	prmt.b32 %r2338, %r2339, %r2340, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r2338;
	ld.local.u32 	%r2343, [%rd2+12];
	ld.local.u32 	%r2344, [%rd2+8];
	// inline asm
	prmt.b32 %r2342, %r2343, %r2344, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r2342;
	ld.local.u32 	%r2347, [%rd2+8];
	ld.local.u32 	%r2348, [%rd2+4];
	// inline asm
	prmt.b32 %r2346, %r2347, %r2348, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r2346;
	ld.local.u32 	%r2351, [%rd2+4];
	ld.local.u32 	%r2352, [%rd2];
	// inline asm
	prmt.b32 %r2350, %r2351, %r2352, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r2350;
	ld.local.u32 	%r2355, [%rd2];
	ld.local.u32 	%r2356, [%rd1+12];
	// inline asm
	prmt.b32 %r2354, %r2355, %r2356, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r2354;
	ld.local.u32 	%r2359, [%rd1+12];
	ld.local.u32 	%r2360, [%rd1+8];
	// inline asm
	prmt.b32 %r2358, %r2359, %r2360, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r2358;
	ld.local.u32 	%r2363, [%rd1+8];
	ld.local.u32 	%r2364, [%rd1+4];
	// inline asm
	prmt.b32 %r2362, %r2363, %r2364, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r2362;
	ld.local.u32 	%r2367, [%rd1+4];
	ld.local.u32 	%r2368, [%rd1];
	// inline asm
	prmt.b32 %r2366, %r2367, %r2368, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r2366;
	ld.local.u32 	%r2371, [%rd1];
	// inline asm
	prmt.b32 %r2370, %r2371, %r8442, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r2370;
	st.local.u32 	[%rd5+8], %r8442;
	st.local.u32 	[%rd5+4], %r8442;
	st.local.u32 	[%rd5], %r8442;
	st.local.u32 	[%rd4+12], %r8442;
	st.local.u32 	[%rd4+8], %r8442;
	st.local.u32 	[%rd4+4], %r8442;
	st.local.u32 	[%rd4], %r8442;
	st.local.u32 	[%rd3+12], %r8442;
	st.local.u32 	[%rd3+8], %r8442;
	st.local.u32 	[%rd3+4], %r8442;
	st.local.u32 	[%rd3], %r8442;
	st.local.u32 	[%rd2+12], %r8442;
	st.local.u32 	[%rd2+8], %r8442;
	st.local.u32 	[%rd2+4], %r8442;
	st.local.u32 	[%rd2], %r8442;
	st.local.u32 	[%rd1+12], %r8442;
	st.local.u32 	[%rd1+8], %r8442;
	mov.u64 	%rd111, 0;
	st.local.u32 	[%rd1+4], %rd111;
	st.local.u32 	[%rd1], %rd111;
	bra.uni 	BB1_82;

BB1_115:
	setp.eq.s32	%p83, %r1, 11;
	@%p83 bra 	BB1_116;
	bra.uni 	BB1_171;

BB1_116:
	ld.local.u32 	%r7065, [%rd6];
	ld.local.u32 	%r7066, [%rd5+12];
	// inline asm
	prmt.b32 %r7064, %r7065, %r7066, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r7064;
	ld.local.u32 	%r7069, [%rd5+12];
	ld.local.u32 	%r7070, [%rd5+8];
	// inline asm
	prmt.b32 %r7068, %r7069, %r7070, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r7068;
	ld.local.u32 	%r7073, [%rd5+8];
	ld.local.u32 	%r7074, [%rd5+4];
	// inline asm
	prmt.b32 %r7072, %r7073, %r7074, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r7072;
	ld.local.u32 	%r7077, [%rd5+4];
	ld.local.u32 	%r7078, [%rd5];
	// inline asm
	prmt.b32 %r7076, %r7077, %r7078, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r7076;
	ld.local.u32 	%r7081, [%rd5];
	ld.local.u32 	%r7082, [%rd4+12];
	// inline asm
	prmt.b32 %r7080, %r7081, %r7082, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r7080;
	ld.local.u32 	%r7085, [%rd4+12];
	ld.local.u32 	%r7086, [%rd4+8];
	// inline asm
	prmt.b32 %r7084, %r7085, %r7086, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r7084;
	ld.local.u32 	%r7089, [%rd4+8];
	ld.local.u32 	%r7090, [%rd4+4];
	// inline asm
	prmt.b32 %r7088, %r7089, %r7090, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r7088;
	ld.local.u32 	%r7093, [%rd4+4];
	ld.local.u32 	%r7094, [%rd4];
	// inline asm
	prmt.b32 %r7092, %r7093, %r7094, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r7092;
	ld.local.u32 	%r7097, [%rd4];
	ld.local.u32 	%r7098, [%rd3+12];
	// inline asm
	prmt.b32 %r7096, %r7097, %r7098, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r7096;
	ld.local.u32 	%r7101, [%rd3+12];
	ld.local.u32 	%r7102, [%rd3+8];
	// inline asm
	prmt.b32 %r7100, %r7101, %r7102, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r7100;
	ld.local.u32 	%r7105, [%rd3+8];
	ld.local.u32 	%r7106, [%rd3+4];
	// inline asm
	prmt.b32 %r7104, %r7105, %r7106, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r7104;
	ld.local.u32 	%r7109, [%rd3+4];
	ld.local.u32 	%r7110, [%rd3];
	// inline asm
	prmt.b32 %r7108, %r7109, %r7110, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r7108;
	ld.local.u32 	%r7113, [%rd3];
	ld.local.u32 	%r7114, [%rd2+12];
	// inline asm
	prmt.b32 %r7112, %r7113, %r7114, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r7112;
	ld.local.u32 	%r7117, [%rd2+12];
	ld.local.u32 	%r7118, [%rd2+8];
	// inline asm
	prmt.b32 %r7116, %r7117, %r7118, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r7116;
	ld.local.u32 	%r7121, [%rd2+8];
	ld.local.u32 	%r7122, [%rd2+4];
	// inline asm
	prmt.b32 %r7120, %r7121, %r7122, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r7120;
	ld.local.u32 	%r7125, [%rd2+4];
	ld.local.u32 	%r7126, [%rd2];
	// inline asm
	prmt.b32 %r7124, %r7125, %r7126, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r7124;
	ld.local.u32 	%r7129, [%rd2];
	ld.local.u32 	%r7130, [%rd1+12];
	// inline asm
	prmt.b32 %r7128, %r7129, %r7130, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r7128;
	ld.local.u32 	%r7133, [%rd1+12];
	ld.local.u32 	%r7134, [%rd1+8];
	// inline asm
	prmt.b32 %r7132, %r7133, %r7134, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r7132;
	ld.local.u32 	%r7137, [%rd1+8];
	ld.local.u32 	%r7138, [%rd1+4];
	// inline asm
	prmt.b32 %r7136, %r7137, %r7138, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r7136;
	ld.local.u32 	%r7141, [%rd1+4];
	ld.local.u32 	%r7142, [%rd1];
	// inline asm
	prmt.b32 %r7140, %r7141, %r7142, %r2;
	// inline asm
	st.local.u32 	[%rd4], %r7140;
	ld.local.u32 	%r7145, [%rd1];
	mov.u32 	%r8476, 0;
	// inline asm
	prmt.b32 %r7144, %r7145, %r8476, %r2;
	// inline asm
	st.local.u32 	[%rd3+12], %r7144;
	st.local.u32 	[%rd3+8], %r8476;
	st.local.u32 	[%rd3+4], %r8476;
	st.local.u32 	[%rd3], %r8476;
	st.local.u32 	[%rd2+12], %r8476;
	st.local.u32 	[%rd2+8], %r8476;
	st.local.u32 	[%rd2+4], %r8476;
	st.local.u32 	[%rd2], %r8476;
	st.local.u32 	[%rd1+12], %r8476;
	st.local.u32 	[%rd1+8], %r8476;
	mov.u64 	%rd1166, 0;
	st.local.u32 	[%rd1+4], %rd1166;
	st.local.u32 	[%rd1], %rd1166;
	bra.uni 	BB1_172;

BB1_25:
	setp.eq.s32	%p35, %r1, 11;
	@%p35 bra 	BB1_26;
	bra.uni 	BB1_87;

BB1_26:
	ld.local.u32 	%r3432, [%rd8+12];
	mov.u32 	%r8442, 0;
	// inline asm
	prmt.b32 %r8451, %r8442, %r3432, %r2;
	// inline asm
	ld.local.u32 	%r3435, [%rd8+12];
	ld.local.u32 	%r3436, [%rd8+8];
	// inline asm
	prmt.b32 %r8452, %r3435, %r3436, %r2;
	// inline asm
	ld.local.u32 	%r3439, [%rd8+8];
	ld.local.u32 	%r3440, [%rd8+4];
	// inline asm
	prmt.b32 %r8453, %r3439, %r3440, %r2;
	// inline asm
	ld.local.u32 	%r3443, [%rd8+4];
	ld.local.u32 	%r3444, [%rd8];
	// inline asm
	prmt.b32 %r8454, %r3443, %r3444, %r2;
	// inline asm
	ld.local.u32 	%r3447, [%rd8];
	ld.local.u32 	%r3448, [%rd7+12];
	// inline asm
	prmt.b32 %r8447, %r3447, %r3448, %r2;
	// inline asm
	ld.local.u32 	%r3451, [%rd7+12];
	ld.local.u32 	%r3452, [%rd7+8];
	// inline asm
	prmt.b32 %r8448, %r3451, %r3452, %r2;
	// inline asm
	ld.local.u32 	%r3455, [%rd7+8];
	ld.local.u32 	%r3456, [%rd7+4];
	// inline asm
	prmt.b32 %r8449, %r3455, %r3456, %r2;
	// inline asm
	ld.local.u32 	%r3459, [%rd7+4];
	ld.local.u32 	%r3460, [%rd7];
	// inline asm
	prmt.b32 %r8450, %r3459, %r3460, %r2;
	// inline asm
	ld.local.u32 	%r3463, [%rd7];
	ld.local.u32 	%r3464, [%rd6+12];
	// inline asm
	prmt.b32 %r8443, %r3463, %r3464, %r2;
	// inline asm
	ld.local.u32 	%r3467, [%rd6+12];
	ld.local.u32 	%r3468, [%rd6+8];
	// inline asm
	prmt.b32 %r8444, %r3467, %r3468, %r2;
	// inline asm
	ld.local.u32 	%r3471, [%rd6+8];
	ld.local.u32 	%r3472, [%rd6+4];
	// inline asm
	prmt.b32 %r8445, %r3471, %r3472, %r2;
	// inline asm
	ld.local.u32 	%r3475, [%rd6+4];
	ld.local.u32 	%r3476, [%rd6];
	// inline asm
	prmt.b32 %r8446, %r3475, %r3476, %r2;
	// inline asm
	ld.local.u32 	%r3479, [%rd6];
	ld.local.u32 	%r3480, [%rd5+12];
	// inline asm
	prmt.b32 %r3478, %r3479, %r3480, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r3478;
	ld.local.u32 	%r3483, [%rd5+12];
	ld.local.u32 	%r3484, [%rd5+8];
	// inline asm
	prmt.b32 %r3482, %r3483, %r3484, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r3482;
	ld.local.u32 	%r3487, [%rd5+8];
	ld.local.u32 	%r3488, [%rd5+4];
	// inline asm
	prmt.b32 %r3486, %r3487, %r3488, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r3486;
	ld.local.u32 	%r3491, [%rd5+4];
	ld.local.u32 	%r3492, [%rd5];
	// inline asm
	prmt.b32 %r3490, %r3491, %r3492, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r3490;
	ld.local.u32 	%r3495, [%rd5];
	ld.local.u32 	%r3496, [%rd4+12];
	// inline asm
	prmt.b32 %r3494, %r3495, %r3496, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r3494;
	ld.local.u32 	%r3499, [%rd4+12];
	ld.local.u32 	%r3500, [%rd4+8];
	// inline asm
	prmt.b32 %r3498, %r3499, %r3500, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r3498;
	ld.local.u32 	%r3503, [%rd4+8];
	ld.local.u32 	%r3504, [%rd4+4];
	// inline asm
	prmt.b32 %r3502, %r3503, %r3504, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r3502;
	ld.local.u32 	%r3507, [%rd4+4];
	ld.local.u32 	%r3508, [%rd4];
	// inline asm
	prmt.b32 %r3506, %r3507, %r3508, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r3506;
	ld.local.u32 	%r3511, [%rd4];
	ld.local.u32 	%r3512, [%rd3+12];
	// inline asm
	prmt.b32 %r3510, %r3511, %r3512, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r3510;
	ld.local.u32 	%r3515, [%rd3+12];
	ld.local.u32 	%r3516, [%rd3+8];
	// inline asm
	prmt.b32 %r3514, %r3515, %r3516, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r3514;
	ld.local.u32 	%r3519, [%rd3+8];
	ld.local.u32 	%r3520, [%rd3+4];
	// inline asm
	prmt.b32 %r3518, %r3519, %r3520, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r3518;
	ld.local.u32 	%r3523, [%rd3+4];
	ld.local.u32 	%r3524, [%rd3];
	// inline asm
	prmt.b32 %r3522, %r3523, %r3524, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r3522;
	ld.local.u32 	%r3527, [%rd3];
	ld.local.u32 	%r3528, [%rd2+12];
	// inline asm
	prmt.b32 %r3526, %r3527, %r3528, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r3526;
	ld.local.u32 	%r3531, [%rd2+12];
	ld.local.u32 	%r3532, [%rd2+8];
	// inline asm
	prmt.b32 %r3530, %r3531, %r3532, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r3530;
	ld.local.u32 	%r3535, [%rd2+8];
	ld.local.u32 	%r3536, [%rd2+4];
	// inline asm
	prmt.b32 %r3534, %r3535, %r3536, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r3534;
	ld.local.u32 	%r3539, [%rd2+4];
	ld.local.u32 	%r3540, [%rd2];
	// inline asm
	prmt.b32 %r3538, %r3539, %r3540, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r3538;
	ld.local.u32 	%r3543, [%rd2];
	ld.local.u32 	%r3544, [%rd1+12];
	// inline asm
	prmt.b32 %r3542, %r3543, %r3544, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r3542;
	ld.local.u32 	%r3547, [%rd1+12];
	ld.local.u32 	%r3548, [%rd1+8];
	// inline asm
	prmt.b32 %r3546, %r3547, %r3548, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r3546;
	ld.local.u32 	%r3551, [%rd1+8];
	ld.local.u32 	%r3552, [%rd1+4];
	// inline asm
	prmt.b32 %r3550, %r3551, %r3552, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r3550;
	ld.local.u32 	%r3555, [%rd1+4];
	ld.local.u32 	%r3556, [%rd1];
	// inline asm
	prmt.b32 %r3554, %r3555, %r3556, %r2;
	// inline asm
	st.local.u32 	[%rd4], %r3554;
	ld.local.u32 	%r3559, [%rd1];
	// inline asm
	prmt.b32 %r3558, %r3559, %r8442, %r2;
	// inline asm
	st.local.u32 	[%rd3+12], %r3558;
	st.local.u32 	[%rd3+8], %r8442;
	st.local.u32 	[%rd3+4], %r8442;
	st.local.u32 	[%rd3], %r8442;
	st.local.u32 	[%rd2+12], %r8442;
	st.local.u32 	[%rd2+8], %r8442;
	st.local.u32 	[%rd2+4], %r8442;
	st.local.u32 	[%rd2], %r8442;
	st.local.u32 	[%rd1+12], %r8442;
	st.local.u32 	[%rd1+8], %r8442;
	mov.u64 	%rd119, 0;
	st.local.u32 	[%rd1+4], %rd119;
	st.local.u32 	[%rd1], %rd119;
	bra.uni 	BB1_80;

BB1_146:
	setp.eq.s32	%p60, %r1, 27;
	@%p60 bra 	BB1_147;
	bra.uni 	BB1_171;

BB1_147:
	ld.local.u32 	%r6249, [%rd2];
	ld.local.u32 	%r6250, [%rd1+12];
	// inline asm
	prmt.b32 %r6248, %r6249, %r6250, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r6248;
	ld.local.u32 	%r6253, [%rd1+12];
	ld.local.u32 	%r6254, [%rd1+8];
	// inline asm
	prmt.b32 %r6252, %r6253, %r6254, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r6252;
	ld.local.u32 	%r6257, [%rd1+8];
	ld.local.u32 	%r6258, [%rd1+4];
	// inline asm
	prmt.b32 %r6256, %r6257, %r6258, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r6256;
	ld.local.u32 	%r6261, [%rd1+4];
	ld.local.u32 	%r6262, [%rd1];
	// inline asm
	prmt.b32 %r6260, %r6261, %r6262, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r6260;
	ld.local.u32 	%r6265, [%rd1];
	mov.u32 	%r8476, 0;
	// inline asm
	prmt.b32 %r6264, %r6265, %r8476, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r6264;
	st.local.u32 	[%rd7+8], %r8476;
	st.local.u32 	[%rd7+4], %r8476;
	st.local.u32 	[%rd7], %r8476;
	st.local.u32 	[%rd6+12], %r8476;
	st.local.u32 	[%rd6+8], %r8476;
	st.local.u32 	[%rd6+4], %r8476;
	st.local.u32 	[%rd6], %r8476;
	st.local.u32 	[%rd5+12], %r8476;
	st.local.u32 	[%rd5+8], %r8476;
	st.local.u32 	[%rd5+4], %r8476;
	st.local.u32 	[%rd5], %r8476;
	st.local.u32 	[%rd4+12], %r8476;
	st.local.u32 	[%rd4+8], %r8476;
	st.local.u32 	[%rd4+4], %r8476;
	st.local.u32 	[%rd4], %r8476;
	st.local.u32 	[%rd3+12], %r8476;
	st.local.u32 	[%rd3+8], %r8476;
	st.local.u32 	[%rd3+4], %r8476;
	st.local.u32 	[%rd3], %r8476;
	st.local.u32 	[%rd2+12], %r8476;
	st.local.u32 	[%rd2+8], %r8476;
	st.local.u32 	[%rd2+4], %r8476;
	st.local.u32 	[%rd2], %r8476;
	st.local.u32 	[%rd1+12], %r8476;
	st.local.u32 	[%rd1+8], %r8476;
	mov.u64 	%rd1150, 0;
	st.local.u32 	[%rd1+4], %rd1150;
	st.local.u32 	[%rd1], %rd1150;
	bra.uni 	BB1_172;

BB1_56:
	setp.eq.s32	%p12, %r1, 27;
	@%p12 bra 	BB1_57;
	bra.uni 	BB1_87;

BB1_57:
	ld.local.u32 	%r1120, [%rd8+12];
	mov.u32 	%r8442, 0;
	// inline asm
	prmt.b32 %r8467, %r8442, %r1120, %r2;
	// inline asm
	ld.local.u32 	%r1123, [%rd8+12];
	ld.local.u32 	%r1124, [%rd8+8];
	// inline asm
	prmt.b32 %r8468, %r1123, %r1124, %r2;
	// inline asm
	ld.local.u32 	%r1127, [%rd8+8];
	ld.local.u32 	%r1128, [%rd8+4];
	// inline asm
	prmt.b32 %r8469, %r1127, %r1128, %r2;
	// inline asm
	ld.local.u32 	%r1131, [%rd8+4];
	ld.local.u32 	%r1132, [%rd8];
	// inline asm
	prmt.b32 %r8470, %r1131, %r1132, %r2;
	// inline asm
	ld.local.u32 	%r1135, [%rd8];
	ld.local.u32 	%r1136, [%rd7+12];
	// inline asm
	prmt.b32 %r8463, %r1135, %r1136, %r2;
	// inline asm
	ld.local.u32 	%r1139, [%rd7+12];
	ld.local.u32 	%r1140, [%rd7+8];
	// inline asm
	prmt.b32 %r8464, %r1139, %r1140, %r2;
	// inline asm
	ld.local.u32 	%r1143, [%rd7+8];
	ld.local.u32 	%r1144, [%rd7+4];
	// inline asm
	prmt.b32 %r8465, %r1143, %r1144, %r2;
	// inline asm
	ld.local.u32 	%r1147, [%rd7+4];
	ld.local.u32 	%r1148, [%rd7];
	// inline asm
	prmt.b32 %r8466, %r1147, %r1148, %r2;
	// inline asm
	ld.local.u32 	%r1151, [%rd7];
	ld.local.u32 	%r1152, [%rd6+12];
	// inline asm
	prmt.b32 %r8459, %r1151, %r1152, %r2;
	// inline asm
	ld.local.u32 	%r1155, [%rd6+12];
	ld.local.u32 	%r1156, [%rd6+8];
	// inline asm
	prmt.b32 %r8460, %r1155, %r1156, %r2;
	// inline asm
	ld.local.u32 	%r1159, [%rd6+8];
	ld.local.u32 	%r1160, [%rd6+4];
	// inline asm
	prmt.b32 %r8461, %r1159, %r1160, %r2;
	// inline asm
	ld.local.u32 	%r1163, [%rd6+4];
	ld.local.u32 	%r1164, [%rd6];
	// inline asm
	prmt.b32 %r8462, %r1163, %r1164, %r2;
	// inline asm
	ld.local.u32 	%r1167, [%rd6];
	ld.local.u32 	%r1168, [%rd5+12];
	// inline asm
	prmt.b32 %r8455, %r1167, %r1168, %r2;
	// inline asm
	ld.local.u32 	%r1171, [%rd5+12];
	ld.local.u32 	%r1172, [%rd5+8];
	// inline asm
	prmt.b32 %r8456, %r1171, %r1172, %r2;
	// inline asm
	ld.local.u32 	%r1175, [%rd5+8];
	ld.local.u32 	%r1176, [%rd5+4];
	// inline asm
	prmt.b32 %r8457, %r1175, %r1176, %r2;
	// inline asm
	ld.local.u32 	%r1179, [%rd5+4];
	ld.local.u32 	%r1180, [%rd5];
	// inline asm
	prmt.b32 %r8458, %r1179, %r1180, %r2;
	// inline asm
	ld.local.u32 	%r1183, [%rd5];
	ld.local.u32 	%r1184, [%rd4+12];
	// inline asm
	prmt.b32 %r8451, %r1183, %r1184, %r2;
	// inline asm
	ld.local.u32 	%r1187, [%rd4+12];
	ld.local.u32 	%r1188, [%rd4+8];
	// inline asm
	prmt.b32 %r8452, %r1187, %r1188, %r2;
	// inline asm
	ld.local.u32 	%r1191, [%rd4+8];
	ld.local.u32 	%r1192, [%rd4+4];
	// inline asm
	prmt.b32 %r8453, %r1191, %r1192, %r2;
	// inline asm
	ld.local.u32 	%r1195, [%rd4+4];
	ld.local.u32 	%r1196, [%rd4];
	// inline asm
	prmt.b32 %r8454, %r1195, %r1196, %r2;
	// inline asm
	ld.local.u32 	%r1199, [%rd4];
	ld.local.u32 	%r1200, [%rd3+12];
	// inline asm
	prmt.b32 %r8447, %r1199, %r1200, %r2;
	// inline asm
	ld.local.u32 	%r1203, [%rd3+12];
	ld.local.u32 	%r1204, [%rd3+8];
	// inline asm
	prmt.b32 %r8448, %r1203, %r1204, %r2;
	// inline asm
	ld.local.u32 	%r1207, [%rd3+8];
	ld.local.u32 	%r1208, [%rd3+4];
	// inline asm
	prmt.b32 %r8449, %r1207, %r1208, %r2;
	// inline asm
	ld.local.u32 	%r1211, [%rd3+4];
	ld.local.u32 	%r1212, [%rd3];
	// inline asm
	prmt.b32 %r8450, %r1211, %r1212, %r2;
	// inline asm
	ld.local.u32 	%r1215, [%rd3];
	ld.local.u32 	%r1216, [%rd2+12];
	// inline asm
	prmt.b32 %r8443, %r1215, %r1216, %r2;
	// inline asm
	ld.local.u32 	%r1219, [%rd2+12];
	ld.local.u32 	%r1220, [%rd2+8];
	// inline asm
	prmt.b32 %r8444, %r1219, %r1220, %r2;
	// inline asm
	ld.local.u32 	%r1223, [%rd2+8];
	ld.local.u32 	%r1224, [%rd2+4];
	// inline asm
	prmt.b32 %r8445, %r1223, %r1224, %r2;
	// inline asm
	ld.local.u32 	%r1227, [%rd2+4];
	ld.local.u32 	%r1228, [%rd2];
	// inline asm
	prmt.b32 %r8446, %r1227, %r1228, %r2;
	// inline asm
	ld.local.u32 	%r1231, [%rd2];
	ld.local.u32 	%r1232, [%rd1+12];
	// inline asm
	prmt.b32 %r1230, %r1231, %r1232, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r1230;
	ld.local.u32 	%r1235, [%rd1+12];
	ld.local.u32 	%r1236, [%rd1+8];
	// inline asm
	prmt.b32 %r1234, %r1235, %r1236, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r1234;
	ld.local.u32 	%r1239, [%rd1+8];
	ld.local.u32 	%r1240, [%rd1+4];
	// inline asm
	prmt.b32 %r1238, %r1239, %r1240, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r1238;
	ld.local.u32 	%r1243, [%rd1+4];
	ld.local.u32 	%r1244, [%rd1];
	// inline asm
	prmt.b32 %r1242, %r1243, %r1244, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r1242;
	ld.local.u32 	%r1247, [%rd1];
	// inline asm
	prmt.b32 %r1246, %r1247, %r8442, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r1246;
	st.local.u32 	[%rd7+8], %r8442;
	st.local.u32 	[%rd7+4], %r8442;
	st.local.u32 	[%rd7], %r8442;
	st.local.u32 	[%rd6+12], %r8442;
	st.local.u32 	[%rd6+8], %r8442;
	st.local.u32 	[%rd6+4], %r8442;
	st.local.u32 	[%rd6], %r8442;
	st.local.u32 	[%rd5+12], %r8442;
	st.local.u32 	[%rd5+8], %r8442;
	st.local.u32 	[%rd5+4], %r8442;
	st.local.u32 	[%rd5], %r8442;
	st.local.u32 	[%rd4+12], %r8442;
	st.local.u32 	[%rd4+8], %r8442;
	st.local.u32 	[%rd4+4], %r8442;
	st.local.u32 	[%rd4], %r8442;
	st.local.u32 	[%rd3+12], %r8442;
	st.local.u32 	[%rd3+8], %r8442;
	st.local.u32 	[%rd3+4], %r8442;
	st.local.u32 	[%rd3], %r8442;
	st.local.u32 	[%rd2+12], %r8442;
	st.local.u32 	[%rd2+8], %r8442;
	st.local.u32 	[%rd2+4], %r8442;
	st.local.u32 	[%rd2], %r8442;
	st.local.u32 	[%rd1+12], %r8442;
	st.local.u32 	[%rd1+8], %r8442;
	mov.u64 	%rd103, 0;
	st.local.u32 	[%rd1+4], %rd103;
	st.local.u32 	[%rd1], %rd103;
	bra.uni 	BB1_84;

BB1_107:
	setp.eq.s32	%p89, %r1, 7;
	@%p89 bra 	BB1_108;
	bra.uni 	BB1_171;

BB1_108:
	ld.local.u32 	%r7429, [%rd7];
	ld.local.u32 	%r7430, [%rd6+12];
	// inline asm
	prmt.b32 %r7428, %r7429, %r7430, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r7428;
	ld.local.u32 	%r7433, [%rd6+12];
	ld.local.u32 	%r7434, [%rd6+8];
	// inline asm
	prmt.b32 %r7432, %r7433, %r7434, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r7432;
	ld.local.u32 	%r7437, [%rd6+8];
	ld.local.u32 	%r7438, [%rd6+4];
	// inline asm
	prmt.b32 %r7436, %r7437, %r7438, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r7436;
	ld.local.u32 	%r7441, [%rd6+4];
	ld.local.u32 	%r7442, [%rd6];
	// inline asm
	prmt.b32 %r7440, %r7441, %r7442, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r7440;
	ld.local.u32 	%r7445, [%rd6];
	ld.local.u32 	%r7446, [%rd5+12];
	// inline asm
	prmt.b32 %r7444, %r7445, %r7446, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r7444;
	ld.local.u32 	%r7449, [%rd5+12];
	ld.local.u32 	%r7450, [%rd5+8];
	// inline asm
	prmt.b32 %r7448, %r7449, %r7450, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r7448;
	ld.local.u32 	%r7453, [%rd5+8];
	ld.local.u32 	%r7454, [%rd5+4];
	// inline asm
	prmt.b32 %r7452, %r7453, %r7454, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r7452;
	ld.local.u32 	%r7457, [%rd5+4];
	ld.local.u32 	%r7458, [%rd5];
	// inline asm
	prmt.b32 %r7456, %r7457, %r7458, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r7456;
	ld.local.u32 	%r7461, [%rd5];
	ld.local.u32 	%r7462, [%rd4+12];
	// inline asm
	prmt.b32 %r7460, %r7461, %r7462, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r7460;
	ld.local.u32 	%r7465, [%rd4+12];
	ld.local.u32 	%r7466, [%rd4+8];
	// inline asm
	prmt.b32 %r7464, %r7465, %r7466, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r7464;
	ld.local.u32 	%r7469, [%rd4+8];
	ld.local.u32 	%r7470, [%rd4+4];
	// inline asm
	prmt.b32 %r7468, %r7469, %r7470, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r7468;
	ld.local.u32 	%r7473, [%rd4+4];
	ld.local.u32 	%r7474, [%rd4];
	// inline asm
	prmt.b32 %r7472, %r7473, %r7474, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r7472;
	ld.local.u32 	%r7477, [%rd4];
	ld.local.u32 	%r7478, [%rd3+12];
	// inline asm
	prmt.b32 %r7476, %r7477, %r7478, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r7476;
	ld.local.u32 	%r7481, [%rd3+12];
	ld.local.u32 	%r7482, [%rd3+8];
	// inline asm
	prmt.b32 %r7480, %r7481, %r7482, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r7480;
	ld.local.u32 	%r7485, [%rd3+8];
	ld.local.u32 	%r7486, [%rd3+4];
	// inline asm
	prmt.b32 %r7484, %r7485, %r7486, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r7484;
	ld.local.u32 	%r7489, [%rd3+4];
	ld.local.u32 	%r7490, [%rd3];
	// inline asm
	prmt.b32 %r7488, %r7489, %r7490, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r7488;
	ld.local.u32 	%r7493, [%rd3];
	ld.local.u32 	%r7494, [%rd2+12];
	// inline asm
	prmt.b32 %r7492, %r7493, %r7494, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r7492;
	ld.local.u32 	%r7497, [%rd2+12];
	ld.local.u32 	%r7498, [%rd2+8];
	// inline asm
	prmt.b32 %r7496, %r7497, %r7498, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r7496;
	ld.local.u32 	%r7501, [%rd2+8];
	ld.local.u32 	%r7502, [%rd2+4];
	// inline asm
	prmt.b32 %r7500, %r7501, %r7502, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r7500;
	ld.local.u32 	%r7505, [%rd2+4];
	ld.local.u32 	%r7506, [%rd2];
	// inline asm
	prmt.b32 %r7504, %r7505, %r7506, %r2;
	// inline asm
	st.local.u32 	[%rd4], %r7504;
	ld.local.u32 	%r7509, [%rd2];
	ld.local.u32 	%r7510, [%rd1+12];
	// inline asm
	prmt.b32 %r7508, %r7509, %r7510, %r2;
	// inline asm
	st.local.u32 	[%rd3+12], %r7508;
	ld.local.u32 	%r7513, [%rd1+12];
	ld.local.u32 	%r7514, [%rd1+8];
	// inline asm
	prmt.b32 %r7512, %r7513, %r7514, %r2;
	// inline asm
	st.local.u32 	[%rd3+8], %r7512;
	ld.local.u32 	%r7517, [%rd1+8];
	ld.local.u32 	%r7518, [%rd1+4];
	// inline asm
	prmt.b32 %r7516, %r7517, %r7518, %r2;
	// inline asm
	st.local.u32 	[%rd3+4], %r7516;
	ld.local.u32 	%r7521, [%rd1+4];
	ld.local.u32 	%r7522, [%rd1];
	// inline asm
	prmt.b32 %r7520, %r7521, %r7522, %r2;
	// inline asm
	st.local.u32 	[%rd3], %r7520;
	ld.local.u32 	%r7525, [%rd1];
	mov.u32 	%r8476, 0;
	// inline asm
	prmt.b32 %r7524, %r7525, %r8476, %r2;
	// inline asm
	st.local.u32 	[%rd2+12], %r7524;
	st.local.u32 	[%rd2+8], %r8476;
	st.local.u32 	[%rd2+4], %r8476;
	st.local.u32 	[%rd2], %r8476;
	st.local.u32 	[%rd1+12], %r8476;
	st.local.u32 	[%rd1+8], %r8476;
	mov.u64 	%rd1170, 0;
	st.local.u32 	[%rd1+4], %rd1170;
	st.local.u32 	[%rd1], %rd1170;
	bra.uni 	BB1_172;

BB1_17:
	setp.eq.s32	%p41, %r1, 7;
	@%p41 bra 	BB1_18;
	bra.uni 	BB1_87;

BB1_18:
	ld.local.u32 	%r4050, [%rd8+12];
	mov.u32 	%r8442, 0;
	// inline asm
	prmt.b32 %r8447, %r8442, %r4050, %r2;
	// inline asm
	ld.local.u32 	%r4053, [%rd8+12];
	ld.local.u32 	%r4054, [%rd8+8];
	// inline asm
	prmt.b32 %r8448, %r4053, %r4054, %r2;
	// inline asm
	ld.local.u32 	%r4057, [%rd8+8];
	ld.local.u32 	%r4058, [%rd8+4];
	// inline asm
	prmt.b32 %r8449, %r4057, %r4058, %r2;
	// inline asm
	ld.local.u32 	%r4061, [%rd8+4];
	ld.local.u32 	%r4062, [%rd8];
	// inline asm
	prmt.b32 %r8450, %r4061, %r4062, %r2;
	// inline asm
	ld.local.u32 	%r4065, [%rd8];
	ld.local.u32 	%r4066, [%rd7+12];
	// inline asm
	prmt.b32 %r8443, %r4065, %r4066, %r2;
	// inline asm
	ld.local.u32 	%r4069, [%rd7+12];
	ld.local.u32 	%r4070, [%rd7+8];
	// inline asm
	prmt.b32 %r8444, %r4069, %r4070, %r2;
	// inline asm
	ld.local.u32 	%r4073, [%rd7+8];
	ld.local.u32 	%r4074, [%rd7+4];
	// inline asm
	prmt.b32 %r8445, %r4073, %r4074, %r2;
	// inline asm
	ld.local.u32 	%r4077, [%rd7+4];
	ld.local.u32 	%r4078, [%rd7];
	// inline asm
	prmt.b32 %r8446, %r4077, %r4078, %r2;
	// inline asm
	ld.local.u32 	%r4081, [%rd7];
	ld.local.u32 	%r4082, [%rd6+12];
	// inline asm
	prmt.b32 %r4080, %r4081, %r4082, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r4080;
	ld.local.u32 	%r4085, [%rd6+12];
	ld.local.u32 	%r4086, [%rd6+8];
	// inline asm
	prmt.b32 %r4084, %r4085, %r4086, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r4084;
	ld.local.u32 	%r4089, [%rd6+8];
	ld.local.u32 	%r4090, [%rd6+4];
	// inline asm
	prmt.b32 %r4088, %r4089, %r4090, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r4088;
	ld.local.u32 	%r4093, [%rd6+4];
	ld.local.u32 	%r4094, [%rd6];
	// inline asm
	prmt.b32 %r4092, %r4093, %r4094, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r4092;
	ld.local.u32 	%r4097, [%rd6];
	ld.local.u32 	%r4098, [%rd5+12];
	// inline asm
	prmt.b32 %r4096, %r4097, %r4098, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r4096;
	ld.local.u32 	%r4101, [%rd5+12];
	ld.local.u32 	%r4102, [%rd5+8];
	// inline asm
	prmt.b32 %r4100, %r4101, %r4102, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r4100;
	ld.local.u32 	%r4105, [%rd5+8];
	ld.local.u32 	%r4106, [%rd5+4];
	// inline asm
	prmt.b32 %r4104, %r4105, %r4106, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r4104;
	ld.local.u32 	%r4109, [%rd5+4];
	ld.local.u32 	%r4110, [%rd5];
	// inline asm
	prmt.b32 %r4108, %r4109, %r4110, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r4108;
	ld.local.u32 	%r4113, [%rd5];
	ld.local.u32 	%r4114, [%rd4+12];
	// inline asm
	prmt.b32 %r4112, %r4113, %r4114, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r4112;
	ld.local.u32 	%r4117, [%rd4+12];
	ld.local.u32 	%r4118, [%rd4+8];
	// inline asm
	prmt.b32 %r4116, %r4117, %r4118, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r4116;
	ld.local.u32 	%r4121, [%rd4+8];
	ld.local.u32 	%r4122, [%rd4+4];
	// inline asm
	prmt.b32 %r4120, %r4121, %r4122, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r4120;
	ld.local.u32 	%r4125, [%rd4+4];
	ld.local.u32 	%r4126, [%rd4];
	// inline asm
	prmt.b32 %r4124, %r4125, %r4126, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r4124;
	ld.local.u32 	%r4129, [%rd4];
	ld.local.u32 	%r4130, [%rd3+12];
	// inline asm
	prmt.b32 %r4128, %r4129, %r4130, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r4128;
	ld.local.u32 	%r4133, [%rd3+12];
	ld.local.u32 	%r4134, [%rd3+8];
	// inline asm
	prmt.b32 %r4132, %r4133, %r4134, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r4132;
	ld.local.u32 	%r4137, [%rd3+8];
	ld.local.u32 	%r4138, [%rd3+4];
	// inline asm
	prmt.b32 %r4136, %r4137, %r4138, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r4136;
	ld.local.u32 	%r4141, [%rd3+4];
	ld.local.u32 	%r4142, [%rd3];
	// inline asm
	prmt.b32 %r4140, %r4141, %r4142, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r4140;
	ld.local.u32 	%r4145, [%rd3];
	ld.local.u32 	%r4146, [%rd2+12];
	// inline asm
	prmt.b32 %r4144, %r4145, %r4146, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r4144;
	ld.local.u32 	%r4149, [%rd2+12];
	ld.local.u32 	%r4150, [%rd2+8];
	// inline asm
	prmt.b32 %r4148, %r4149, %r4150, %r2;
	// inline asm
	st.local.u32 	[%rd4+8], %r4148;
	ld.local.u32 	%r4153, [%rd2+8];
	ld.local.u32 	%r4154, [%rd2+4];
	// inline asm
	prmt.b32 %r4152, %r4153, %r4154, %r2;
	// inline asm
	st.local.u32 	[%rd4+4], %r4152;
	ld.local.u32 	%r4157, [%rd2+4];
	ld.local.u32 	%r4158, [%rd2];
	// inline asm
	prmt.b32 %r4156, %r4157, %r4158, %r2;
	// inline asm
	st.local.u32 	[%rd4], %r4156;
	ld.local.u32 	%r4161, [%rd2];
	ld.local.u32 	%r4162, [%rd1+12];
	// inline asm
	prmt.b32 %r4160, %r4161, %r4162, %r2;
	// inline asm
	st.local.u32 	[%rd3+12], %r4160;
	ld.local.u32 	%r4165, [%rd1+12];
	ld.local.u32 	%r4166, [%rd1+8];
	// inline asm
	prmt.b32 %r4164, %r4165, %r4166, %r2;
	// inline asm
	st.local.u32 	[%rd3+8], %r4164;
	ld.local.u32 	%r4169, [%rd1+8];
	ld.local.u32 	%r4170, [%rd1+4];
	// inline asm
	prmt.b32 %r4168, %r4169, %r4170, %r2;
	// inline asm
	st.local.u32 	[%rd3+4], %r4168;
	ld.local.u32 	%r4173, [%rd1+4];
	ld.local.u32 	%r4174, [%rd1];
	// inline asm
	prmt.b32 %r4172, %r4173, %r4174, %r2;
	// inline asm
	st.local.u32 	[%rd3], %r4172;
	ld.local.u32 	%r4177, [%rd1];
	// inline asm
	prmt.b32 %r4176, %r4177, %r8442, %r2;
	// inline asm
	st.local.u32 	[%rd2+12], %r4176;
	st.local.u32 	[%rd2+8], %r8442;
	st.local.u32 	[%rd2+4], %r8442;
	st.local.u32 	[%rd2], %r8442;
	st.local.u32 	[%rd1+12], %r8442;
	st.local.u32 	[%rd1+8], %r8442;
	mov.u64 	%rd123, 0;
	st.local.u32 	[%rd1+4], %rd123;
	st.local.u32 	[%rd1], %rd123;

BB1_79:
	mov.u32 	%r8451, %r8442;
	mov.u32 	%r8452, %r8442;
	mov.u32 	%r8453, %r8442;
	mov.u32 	%r8454, %r8442;

BB1_80:
	mov.u32 	%r8455, %r8442;
	mov.u32 	%r8456, %r8442;
	mov.u32 	%r8457, %r8442;
	mov.u32 	%r8458, %r8442;

BB1_81:
	mov.u32 	%r8459, %r8442;
	mov.u32 	%r8460, %r8442;
	mov.u32 	%r8461, %r8442;
	mov.u32 	%r8462, %r8442;

BB1_82:
	mov.u32 	%r8463, %r8442;
	mov.u32 	%r8464, %r8442;
	mov.u32 	%r8465, %r8442;
	mov.u32 	%r8466, %r8442;

BB1_83:
	mov.u32 	%r8467, %r8442;
	mov.u32 	%r8468, %r8442;
	mov.u32 	%r8469, %r8442;
	mov.u32 	%r8470, %r8442;

BB1_84:
	mov.u32 	%r8471, %r8442;
	mov.u32 	%r8472, %r8442;
	mov.u32 	%r8473, %r8442;
	mov.u32 	%r8474, %r8442;
	bra.uni 	BB1_89;

BB1_138:
	setp.eq.s32	%p66, %r1, 23;
	@%p66 bra 	BB1_139;
	bra.uni 	BB1_171;

BB1_139:
	ld.local.u32 	%r6357, [%rd3];
	ld.local.u32 	%r6358, [%rd2+12];
	// inline asm
	prmt.b32 %r6356, %r6357, %r6358, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r6356;
	ld.local.u32 	%r6361, [%rd2+12];
	ld.local.u32 	%r6362, [%rd2+8];
	// inline asm
	prmt.b32 %r6360, %r6361, %r6362, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r6360;
	ld.local.u32 	%r6365, [%rd2+8];
	ld.local.u32 	%r6366, [%rd2+4];
	// inline asm
	prmt.b32 %r6364, %r6365, %r6366, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r6364;
	ld.local.u32 	%r6369, [%rd2+4];
	ld.local.u32 	%r6370, [%rd2];
	// inline asm
	prmt.b32 %r6368, %r6369, %r6370, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r6368;
	ld.local.u32 	%r6373, [%rd2];
	ld.local.u32 	%r6374, [%rd1+12];
	// inline asm
	prmt.b32 %r6372, %r6373, %r6374, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r6372;
	ld.local.u32 	%r6377, [%rd1+12];
	ld.local.u32 	%r6378, [%rd1+8];
	// inline asm
	prmt.b32 %r6376, %r6377, %r6378, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r6376;
	ld.local.u32 	%r6381, [%rd1+8];
	ld.local.u32 	%r6382, [%rd1+4];
	// inline asm
	prmt.b32 %r6380, %r6381, %r6382, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r6380;
	ld.local.u32 	%r6385, [%rd1+4];
	ld.local.u32 	%r6386, [%rd1];
	// inline asm
	prmt.b32 %r6384, %r6385, %r6386, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r6384;
	ld.local.u32 	%r6389, [%rd1];
	mov.u32 	%r8476, 0;
	// inline asm
	prmt.b32 %r6388, %r6389, %r8476, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r6388;
	st.local.u32 	[%rd6+8], %r8476;
	st.local.u32 	[%rd6+4], %r8476;
	st.local.u32 	[%rd6], %r8476;
	st.local.u32 	[%rd5+12], %r8476;
	st.local.u32 	[%rd5+8], %r8476;
	st.local.u32 	[%rd5+4], %r8476;
	st.local.u32 	[%rd5], %r8476;
	st.local.u32 	[%rd4+12], %r8476;
	st.local.u32 	[%rd4+8], %r8476;
	st.local.u32 	[%rd4+4], %r8476;
	st.local.u32 	[%rd4], %r8476;
	st.local.u32 	[%rd3+12], %r8476;
	st.local.u32 	[%rd3+8], %r8476;
	st.local.u32 	[%rd3+4], %r8476;
	st.local.u32 	[%rd3], %r8476;
	st.local.u32 	[%rd2+12], %r8476;
	st.local.u32 	[%rd2+8], %r8476;
	st.local.u32 	[%rd2+4], %r8476;
	st.local.u32 	[%rd2], %r8476;
	st.local.u32 	[%rd1+12], %r8476;
	st.local.u32 	[%rd1+8], %r8476;
	mov.u64 	%rd1154, 0;
	st.local.u32 	[%rd1+4], %rd1154;
	st.local.u32 	[%rd1], %rd1154;
	bra.uni 	BB1_172;

BB1_48:
	setp.eq.s32	%p18, %r1, 23;
	@%p18 bra 	BB1_49;
	bra.uni 	BB1_87;

BB1_49:
	ld.local.u32 	%r1674, [%rd8+12];
	mov.u32 	%r8442, 0;
	// inline asm
	prmt.b32 %r8463, %r8442, %r1674, %r2;
	// inline asm
	ld.local.u32 	%r1677, [%rd8+12];
	ld.local.u32 	%r1678, [%rd8+8];
	// inline asm
	prmt.b32 %r8464, %r1677, %r1678, %r2;
	// inline asm
	ld.local.u32 	%r1681, [%rd8+8];
	ld.local.u32 	%r1682, [%rd8+4];
	// inline asm
	prmt.b32 %r8465, %r1681, %r1682, %r2;
	// inline asm
	ld.local.u32 	%r1685, [%rd8+4];
	ld.local.u32 	%r1686, [%rd8];
	// inline asm
	prmt.b32 %r8466, %r1685, %r1686, %r2;
	// inline asm
	ld.local.u32 	%r1689, [%rd8];
	ld.local.u32 	%r1690, [%rd7+12];
	// inline asm
	prmt.b32 %r8459, %r1689, %r1690, %r2;
	// inline asm
	ld.local.u32 	%r1693, [%rd7+12];
	ld.local.u32 	%r1694, [%rd7+8];
	// inline asm
	prmt.b32 %r8460, %r1693, %r1694, %r2;
	// inline asm
	ld.local.u32 	%r1697, [%rd7+8];
	ld.local.u32 	%r1698, [%rd7+4];
	// inline asm
	prmt.b32 %r8461, %r1697, %r1698, %r2;
	// inline asm
	ld.local.u32 	%r1701, [%rd7+4];
	ld.local.u32 	%r1702, [%rd7];
	// inline asm
	prmt.b32 %r8462, %r1701, %r1702, %r2;
	// inline asm
	ld.local.u32 	%r1705, [%rd7];
	ld.local.u32 	%r1706, [%rd6+12];
	// inline asm
	prmt.b32 %r8455, %r1705, %r1706, %r2;
	// inline asm
	ld.local.u32 	%r1709, [%rd6+12];
	ld.local.u32 	%r1710, [%rd6+8];
	// inline asm
	prmt.b32 %r8456, %r1709, %r1710, %r2;
	// inline asm
	ld.local.u32 	%r1713, [%rd6+8];
	ld.local.u32 	%r1714, [%rd6+4];
	// inline asm
	prmt.b32 %r8457, %r1713, %r1714, %r2;
	// inline asm
	ld.local.u32 	%r1717, [%rd6+4];
	ld.local.u32 	%r1718, [%rd6];
	// inline asm
	prmt.b32 %r8458, %r1717, %r1718, %r2;
	// inline asm
	ld.local.u32 	%r1721, [%rd6];
	ld.local.u32 	%r1722, [%rd5+12];
	// inline asm
	prmt.b32 %r8451, %r1721, %r1722, %r2;
	// inline asm
	ld.local.u32 	%r1725, [%rd5+12];
	ld.local.u32 	%r1726, [%rd5+8];
	// inline asm
	prmt.b32 %r8452, %r1725, %r1726, %r2;
	// inline asm
	ld.local.u32 	%r1729, [%rd5+8];
	ld.local.u32 	%r1730, [%rd5+4];
	// inline asm
	prmt.b32 %r8453, %r1729, %r1730, %r2;
	// inline asm
	ld.local.u32 	%r1733, [%rd5+4];
	ld.local.u32 	%r1734, [%rd5];
	// inline asm
	prmt.b32 %r8454, %r1733, %r1734, %r2;
	// inline asm
	ld.local.u32 	%r1737, [%rd5];
	ld.local.u32 	%r1738, [%rd4+12];
	// inline asm
	prmt.b32 %r8447, %r1737, %r1738, %r2;
	// inline asm
	ld.local.u32 	%r1741, [%rd4+12];
	ld.local.u32 	%r1742, [%rd4+8];
	// inline asm
	prmt.b32 %r8448, %r1741, %r1742, %r2;
	// inline asm
	ld.local.u32 	%r1745, [%rd4+8];
	ld.local.u32 	%r1746, [%rd4+4];
	// inline asm
	prmt.b32 %r8449, %r1745, %r1746, %r2;
	// inline asm
	ld.local.u32 	%r1749, [%rd4+4];
	ld.local.u32 	%r1750, [%rd4];
	// inline asm
	prmt.b32 %r8450, %r1749, %r1750, %r2;
	// inline asm
	ld.local.u32 	%r1753, [%rd4];
	ld.local.u32 	%r1754, [%rd3+12];
	// inline asm
	prmt.b32 %r8443, %r1753, %r1754, %r2;
	// inline asm
	ld.local.u32 	%r1757, [%rd3+12];
	ld.local.u32 	%r1758, [%rd3+8];
	// inline asm
	prmt.b32 %r8444, %r1757, %r1758, %r2;
	// inline asm
	ld.local.u32 	%r1761, [%rd3+8];
	ld.local.u32 	%r1762, [%rd3+4];
	// inline asm
	prmt.b32 %r8445, %r1761, %r1762, %r2;
	// inline asm
	ld.local.u32 	%r1765, [%rd3+4];
	ld.local.u32 	%r1766, [%rd3];
	// inline asm
	prmt.b32 %r8446, %r1765, %r1766, %r2;
	// inline asm
	ld.local.u32 	%r1769, [%rd3];
	ld.local.u32 	%r1770, [%rd2+12];
	// inline asm
	prmt.b32 %r1768, %r1769, %r1770, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r1768;
	ld.local.u32 	%r1773, [%rd2+12];
	ld.local.u32 	%r1774, [%rd2+8];
	// inline asm
	prmt.b32 %r1772, %r1773, %r1774, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r1772;
	ld.local.u32 	%r1777, [%rd2+8];
	ld.local.u32 	%r1778, [%rd2+4];
	// inline asm
	prmt.b32 %r1776, %r1777, %r1778, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r1776;
	ld.local.u32 	%r1781, [%rd2+4];
	ld.local.u32 	%r1782, [%rd2];
	// inline asm
	prmt.b32 %r1780, %r1781, %r1782, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r1780;
	ld.local.u32 	%r1785, [%rd2];
	ld.local.u32 	%r1786, [%rd1+12];
	// inline asm
	prmt.b32 %r1784, %r1785, %r1786, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r1784;
	ld.local.u32 	%r1789, [%rd1+12];
	ld.local.u32 	%r1790, [%rd1+8];
	// inline asm
	prmt.b32 %r1788, %r1789, %r1790, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r1788;
	ld.local.u32 	%r1793, [%rd1+8];
	ld.local.u32 	%r1794, [%rd1+4];
	// inline asm
	prmt.b32 %r1792, %r1793, %r1794, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r1792;
	ld.local.u32 	%r1797, [%rd1+4];
	ld.local.u32 	%r1798, [%rd1];
	// inline asm
	prmt.b32 %r1796, %r1797, %r1798, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r1796;
	ld.local.u32 	%r1801, [%rd1];
	// inline asm
	prmt.b32 %r1800, %r1801, %r8442, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r1800;
	st.local.u32 	[%rd6+8], %r8442;
	st.local.u32 	[%rd6+4], %r8442;
	st.local.u32 	[%rd6], %r8442;
	st.local.u32 	[%rd5+12], %r8442;
	st.local.u32 	[%rd5+8], %r8442;
	st.local.u32 	[%rd5+4], %r8442;
	st.local.u32 	[%rd5], %r8442;
	st.local.u32 	[%rd4+12], %r8442;
	st.local.u32 	[%rd4+8], %r8442;
	st.local.u32 	[%rd4+4], %r8442;
	st.local.u32 	[%rd4], %r8442;
	st.local.u32 	[%rd3+12], %r8442;
	st.local.u32 	[%rd3+8], %r8442;
	st.local.u32 	[%rd3+4], %r8442;
	st.local.u32 	[%rd3], %r8442;
	st.local.u32 	[%rd2+12], %r8442;
	st.local.u32 	[%rd2+8], %r8442;
	st.local.u32 	[%rd2+4], %r8442;
	st.local.u32 	[%rd2], %r8442;
	st.local.u32 	[%rd1+12], %r8442;
	st.local.u32 	[%rd1+8], %r8442;
	mov.u64 	%rd107, 0;
	st.local.u32 	[%rd1+4], %rd107;
	st.local.u32 	[%rd1], %rd107;
	bra.uni 	BB1_83;

BB1_122:
	setp.eq.s32	%p78, %r1, 15;
	@%p78 bra 	BB1_123;
	bra.uni 	BB1_171;

BB1_123:
	ld.local.u32 	%r6765, [%rd5];
	ld.local.u32 	%r6766, [%rd4+12];
	// inline asm
	prmt.b32 %r6764, %r6765, %r6766, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r6764;
	ld.local.u32 	%r6769, [%rd4+12];
	ld.local.u32 	%r6770, [%rd4+8];
	// inline asm
	prmt.b32 %r6768, %r6769, %r6770, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r6768;
	ld.local.u32 	%r6773, [%rd4+8];
	ld.local.u32 	%r6774, [%rd4+4];
	// inline asm
	prmt.b32 %r6772, %r6773, %r6774, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r6772;
	ld.local.u32 	%r6777, [%rd4+4];
	ld.local.u32 	%r6778, [%rd4];
	// inline asm
	prmt.b32 %r6776, %r6777, %r6778, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r6776;
	ld.local.u32 	%r6781, [%rd4];
	ld.local.u32 	%r6782, [%rd3+12];
	// inline asm
	prmt.b32 %r6780, %r6781, %r6782, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r6780;
	ld.local.u32 	%r6785, [%rd3+12];
	ld.local.u32 	%r6786, [%rd3+8];
	// inline asm
	prmt.b32 %r6784, %r6785, %r6786, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r6784;
	ld.local.u32 	%r6789, [%rd3+8];
	ld.local.u32 	%r6790, [%rd3+4];
	// inline asm
	prmt.b32 %r6788, %r6789, %r6790, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r6788;
	ld.local.u32 	%r6793, [%rd3+4];
	ld.local.u32 	%r6794, [%rd3];
	// inline asm
	prmt.b32 %r6792, %r6793, %r6794, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r6792;
	ld.local.u32 	%r6797, [%rd3];
	ld.local.u32 	%r6798, [%rd2+12];
	// inline asm
	prmt.b32 %r6796, %r6797, %r6798, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r6796;
	ld.local.u32 	%r6801, [%rd2+12];
	ld.local.u32 	%r6802, [%rd2+8];
	// inline asm
	prmt.b32 %r6800, %r6801, %r6802, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r6800;
	ld.local.u32 	%r6805, [%rd2+8];
	ld.local.u32 	%r6806, [%rd2+4];
	// inline asm
	prmt.b32 %r6804, %r6805, %r6806, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r6804;
	ld.local.u32 	%r6809, [%rd2+4];
	ld.local.u32 	%r6810, [%rd2];
	// inline asm
	prmt.b32 %r6808, %r6809, %r6810, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r6808;
	ld.local.u32 	%r6813, [%rd2];
	ld.local.u32 	%r6814, [%rd1+12];
	// inline asm
	prmt.b32 %r6812, %r6813, %r6814, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r6812;
	ld.local.u32 	%r6817, [%rd1+12];
	ld.local.u32 	%r6818, [%rd1+8];
	// inline asm
	prmt.b32 %r6816, %r6817, %r6818, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r6816;
	ld.local.u32 	%r6821, [%rd1+8];
	ld.local.u32 	%r6822, [%rd1+4];
	// inline asm
	prmt.b32 %r6820, %r6821, %r6822, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r6820;
	ld.local.u32 	%r6825, [%rd1+4];
	ld.local.u32 	%r6826, [%rd1];
	// inline asm
	prmt.b32 %r6824, %r6825, %r6826, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r6824;
	ld.local.u32 	%r6829, [%rd1];
	mov.u32 	%r8476, 0;
	// inline asm
	prmt.b32 %r6828, %r6829, %r8476, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r6828;
	st.local.u32 	[%rd4+8], %r8476;
	st.local.u32 	[%rd4+4], %r8476;
	st.local.u32 	[%rd4], %r8476;
	st.local.u32 	[%rd3+12], %r8476;
	st.local.u32 	[%rd3+8], %r8476;
	st.local.u32 	[%rd3+4], %r8476;
	st.local.u32 	[%rd3], %r8476;
	st.local.u32 	[%rd2+12], %r8476;
	st.local.u32 	[%rd2+8], %r8476;
	st.local.u32 	[%rd2+4], %r8476;
	st.local.u32 	[%rd2], %r8476;
	st.local.u32 	[%rd1+12], %r8476;
	st.local.u32 	[%rd1+8], %r8476;
	mov.u64 	%rd1162, 0;
	st.local.u32 	[%rd1+4], %rd1162;
	st.local.u32 	[%rd1], %rd1162;
	bra.uni 	BB1_172;

BB1_32:
	setp.eq.s32	%p30, %r1, 15;
	@%p30 bra 	BB1_33;
	bra.uni 	BB1_87;

BB1_33:
	ld.local.u32 	%r2830, [%rd8+12];
	mov.u32 	%r8442, 0;
	// inline asm
	prmt.b32 %r8455, %r8442, %r2830, %r2;
	// inline asm
	ld.local.u32 	%r2833, [%rd8+12];
	ld.local.u32 	%r2834, [%rd8+8];
	// inline asm
	prmt.b32 %r8456, %r2833, %r2834, %r2;
	// inline asm
	ld.local.u32 	%r2837, [%rd8+8];
	ld.local.u32 	%r2838, [%rd8+4];
	// inline asm
	prmt.b32 %r8457, %r2837, %r2838, %r2;
	// inline asm
	ld.local.u32 	%r2841, [%rd8+4];
	ld.local.u32 	%r2842, [%rd8];
	// inline asm
	prmt.b32 %r8458, %r2841, %r2842, %r2;
	// inline asm
	ld.local.u32 	%r2845, [%rd8];
	ld.local.u32 	%r2846, [%rd7+12];
	// inline asm
	prmt.b32 %r8451, %r2845, %r2846, %r2;
	// inline asm
	ld.local.u32 	%r2849, [%rd7+12];
	ld.local.u32 	%r2850, [%rd7+8];
	// inline asm
	prmt.b32 %r8452, %r2849, %r2850, %r2;
	// inline asm
	ld.local.u32 	%r2853, [%rd7+8];
	ld.local.u32 	%r2854, [%rd7+4];
	// inline asm
	prmt.b32 %r8453, %r2853, %r2854, %r2;
	// inline asm
	ld.local.u32 	%r2857, [%rd7+4];
	ld.local.u32 	%r2858, [%rd7];
	// inline asm
	prmt.b32 %r8454, %r2857, %r2858, %r2;
	// inline asm
	ld.local.u32 	%r2861, [%rd7];
	ld.local.u32 	%r2862, [%rd6+12];
	// inline asm
	prmt.b32 %r8447, %r2861, %r2862, %r2;
	// inline asm
	ld.local.u32 	%r2865, [%rd6+12];
	ld.local.u32 	%r2866, [%rd6+8];
	// inline asm
	prmt.b32 %r8448, %r2865, %r2866, %r2;
	// inline asm
	ld.local.u32 	%r2869, [%rd6+8];
	ld.local.u32 	%r2870, [%rd6+4];
	// inline asm
	prmt.b32 %r8449, %r2869, %r2870, %r2;
	// inline asm
	ld.local.u32 	%r2873, [%rd6+4];
	ld.local.u32 	%r2874, [%rd6];
	// inline asm
	prmt.b32 %r8450, %r2873, %r2874, %r2;
	// inline asm
	ld.local.u32 	%r2877, [%rd6];
	ld.local.u32 	%r2878, [%rd5+12];
	// inline asm
	prmt.b32 %r8443, %r2877, %r2878, %r2;
	// inline asm
	ld.local.u32 	%r2881, [%rd5+12];
	ld.local.u32 	%r2882, [%rd5+8];
	// inline asm
	prmt.b32 %r8444, %r2881, %r2882, %r2;
	// inline asm
	ld.local.u32 	%r2885, [%rd5+8];
	ld.local.u32 	%r2886, [%rd5+4];
	// inline asm
	prmt.b32 %r8445, %r2885, %r2886, %r2;
	// inline asm
	ld.local.u32 	%r2889, [%rd5+4];
	ld.local.u32 	%r2890, [%rd5];
	// inline asm
	prmt.b32 %r8446, %r2889, %r2890, %r2;
	// inline asm
	ld.local.u32 	%r2893, [%rd5];
	ld.local.u32 	%r2894, [%rd4+12];
	// inline asm
	prmt.b32 %r2892, %r2893, %r2894, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r2892;
	ld.local.u32 	%r2897, [%rd4+12];
	ld.local.u32 	%r2898, [%rd4+8];
	// inline asm
	prmt.b32 %r2896, %r2897, %r2898, %r2;
	// inline asm
	st.local.u32 	[%rd8+8], %r2896;
	ld.local.u32 	%r2901, [%rd4+8];
	ld.local.u32 	%r2902, [%rd4+4];
	// inline asm
	prmt.b32 %r2900, %r2901, %r2902, %r2;
	// inline asm
	st.local.u32 	[%rd8+4], %r2900;
	ld.local.u32 	%r2905, [%rd4+4];
	ld.local.u32 	%r2906, [%rd4];
	// inline asm
	prmt.b32 %r2904, %r2905, %r2906, %r2;
	// inline asm
	st.local.u32 	[%rd8], %r2904;
	ld.local.u32 	%r2909, [%rd4];
	ld.local.u32 	%r2910, [%rd3+12];
	// inline asm
	prmt.b32 %r2908, %r2909, %r2910, %r2;
	// inline asm
	st.local.u32 	[%rd7+12], %r2908;
	ld.local.u32 	%r2913, [%rd3+12];
	ld.local.u32 	%r2914, [%rd3+8];
	// inline asm
	prmt.b32 %r2912, %r2913, %r2914, %r2;
	// inline asm
	st.local.u32 	[%rd7+8], %r2912;
	ld.local.u32 	%r2917, [%rd3+8];
	ld.local.u32 	%r2918, [%rd3+4];
	// inline asm
	prmt.b32 %r2916, %r2917, %r2918, %r2;
	// inline asm
	st.local.u32 	[%rd7+4], %r2916;
	ld.local.u32 	%r2921, [%rd3+4];
	ld.local.u32 	%r2922, [%rd3];
	// inline asm
	prmt.b32 %r2920, %r2921, %r2922, %r2;
	// inline asm
	st.local.u32 	[%rd7], %r2920;
	ld.local.u32 	%r2925, [%rd3];
	ld.local.u32 	%r2926, [%rd2+12];
	// inline asm
	prmt.b32 %r2924, %r2925, %r2926, %r2;
	// inline asm
	st.local.u32 	[%rd6+12], %r2924;
	ld.local.u32 	%r2929, [%rd2+12];
	ld.local.u32 	%r2930, [%rd2+8];
	// inline asm
	prmt.b32 %r2928, %r2929, %r2930, %r2;
	// inline asm
	st.local.u32 	[%rd6+8], %r2928;
	ld.local.u32 	%r2933, [%rd2+8];
	ld.local.u32 	%r2934, [%rd2+4];
	// inline asm
	prmt.b32 %r2932, %r2933, %r2934, %r2;
	// inline asm
	st.local.u32 	[%rd6+4], %r2932;
	ld.local.u32 	%r2937, [%rd2+4];
	ld.local.u32 	%r2938, [%rd2];
	// inline asm
	prmt.b32 %r2936, %r2937, %r2938, %r2;
	// inline asm
	st.local.u32 	[%rd6], %r2936;
	ld.local.u32 	%r2941, [%rd2];
	ld.local.u32 	%r2942, [%rd1+12];
	// inline asm
	prmt.b32 %r2940, %r2941, %r2942, %r2;
	// inline asm
	st.local.u32 	[%rd5+12], %r2940;
	ld.local.u32 	%r2945, [%rd1+12];
	ld.local.u32 	%r2946, [%rd1+8];
	// inline asm
	prmt.b32 %r2944, %r2945, %r2946, %r2;
	// inline asm
	st.local.u32 	[%rd5+8], %r2944;
	ld.local.u32 	%r2949, [%rd1+8];
	ld.local.u32 	%r2950, [%rd1+4];
	// inline asm
	prmt.b32 %r2948, %r2949, %r2950, %r2;
	// inline asm
	st.local.u32 	[%rd5+4], %r2948;
	ld.local.u32 	%r2953, [%rd1+4];
	ld.local.u32 	%r2954, [%rd1];
	// inline asm
	prmt.b32 %r2952, %r2953, %r2954, %r2;
	// inline asm
	st.local.u32 	[%rd5], %r2952;
	ld.local.u32 	%r2957, [%rd1];
	// inline asm
	prmt.b32 %r2956, %r2957, %r8442, %r2;
	// inline asm
	st.local.u32 	[%rd4+12], %r2956;
	st.local.u32 	[%rd4+8], %r8442;
	st.local.u32 	[%rd4+4], %r8442;
	st.local.u32 	[%rd4], %r8442;
	st.local.u32 	[%rd3+12], %r8442;
	st.local.u32 	[%rd3+8], %r8442;
	st.local.u32 	[%rd3+4], %r8442;
	st.local.u32 	[%rd3], %r8442;
	st.local.u32 	[%rd2+12], %r8442;
	st.local.u32 	[%rd2+8], %r8442;
	st.local.u32 	[%rd2+4], %r8442;
	st.local.u32 	[%rd2], %r8442;
	st.local.u32 	[%rd1+12], %r8442;
	st.local.u32 	[%rd1+8], %r8442;
	mov.u64 	%rd115, 0;
	st.local.u32 	[%rd1+4], %rd115;
	st.local.u32 	[%rd1], %rd115;
	bra.uni 	BB1_81;

BB1_153:
	setp.ne.s32	%p55, %r1, 31;
	@%p55 bra 	BB1_171;

	ld.local.u32 	%r6205, [%rd1];
	mov.u32 	%r8476, 0;
	// inline asm
	prmt.b32 %r6204, %r6205, %r8476, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r6204;
	st.local.u32 	[%rd8+8], %r8476;
	st.local.u32 	[%rd8+4], %r8476;
	st.local.u32 	[%rd8], %r8476;
	st.local.u32 	[%rd7+12], %r8476;
	st.local.u32 	[%rd7+8], %r8476;
	st.local.u32 	[%rd7+4], %r8476;
	st.local.u32 	[%rd7], %r8476;
	st.local.u32 	[%rd6+12], %r8476;
	st.local.u32 	[%rd6+8], %r8476;
	st.local.u32 	[%rd6+4], %r8476;
	st.local.u32 	[%rd6], %r8476;
	st.local.u32 	[%rd5+12], %r8476;
	st.local.u32 	[%rd5+8], %r8476;
	st.local.u32 	[%rd5+4], %r8476;
	st.local.u32 	[%rd5], %r8476;
	st.local.u32 	[%rd4+12], %r8476;
	st.local.u32 	[%rd4+8], %r8476;
	st.local.u32 	[%rd4+4], %r8476;
	st.local.u32 	[%rd4], %r8476;
	st.local.u32 	[%rd3+12], %r8476;
	st.local.u32 	[%rd3+8], %r8476;
	st.local.u32 	[%rd3+4], %r8476;
	st.local.u32 	[%rd3], %r8476;
	st.local.u32 	[%rd2+12], %r8476;
	st.local.u32 	[%rd2+8], %r8476;
	st.local.u32 	[%rd2+4], %r8476;
	st.local.u32 	[%rd2], %r8476;
	st.local.u32 	[%rd1+12], %r8476;
	st.local.u32 	[%rd1+8], %r8476;
	mov.u64 	%rd1146, 0;
	st.local.u32 	[%rd1+4], %rd1146;
	st.local.u32 	[%rd1], %rd1146;
	bra.uni 	BB1_172;

BB1_171:
	ld.local.u32 	%r8476, [%rd1];

BB1_172:
	ld.u32 	%r8347, [%rd9+-128];
	or.b32  	%r8348, %r8347, %r8476;
	ld.u32 	%r8349, [%rd9+-124];
	ld.u32 	%r8350, [%rd9+-120];
	ld.u32 	%r8351, [%rd9+-116];
	ld.u32 	%r8352, [%rd9+-112];
	ld.u32 	%r8353, [%rd9+-108];
	ld.u32 	%r8354, [%rd9+-104];
	ld.u32 	%r8355, [%rd9+-100];
	ld.u32 	%r8356, [%rd9+-96];
	ld.u32 	%r8357, [%rd9+-92];
	ld.u32 	%r8358, [%rd9+-88];
	ld.u32 	%r8359, [%rd9+-84];
	ld.u32 	%r8360, [%rd9+-80];
	ld.u32 	%r8361, [%rd9+-76];
	ld.u32 	%r8362, [%rd9+-72];
	ld.u32 	%r8363, [%rd9+-68];
	ld.u32 	%r8364, [%rd9+-64];
	ld.u32 	%r8365, [%rd9+-60];
	ld.u32 	%r8366, [%rd9+-56];
	ld.u32 	%r8367, [%rd9+-52];
	ld.u32 	%r8368, [%rd9+-48];
	ld.u32 	%r8369, [%rd9+-44];
	ld.u32 	%r8370, [%rd9+-40];
	ld.u32 	%r8371, [%rd9+-36];
	ld.u32 	%r8372, [%rd9+-32];
	ld.u32 	%r8373, [%rd9+-28];
	ld.u32 	%r8374, [%rd9+-24];
	ld.u32 	%r8375, [%rd9+-20];
	ld.u32 	%r8376, [%rd9+-16];
	ld.u32 	%r8377, [%rd9+-12];
	ld.u32 	%r8378, [%rd9+-8];
	ld.u32 	%r8379, [%rd9+-4];
	st.u32 	[%rd9+-128], %r8348;
	ld.local.u32 	%r8380, [%rd1+4];
	or.b32  	%r8381, %r8349, %r8380;
	st.u32 	[%rd9+-124], %r8381;
	ld.local.u32 	%r8382, [%rd1+8];
	or.b32  	%r8383, %r8350, %r8382;
	st.u32 	[%rd9+-120], %r8383;
	ld.local.u32 	%r8384, [%rd1+12];
	or.b32  	%r8385, %r8351, %r8384;
	st.u32 	[%rd9+-116], %r8385;
	ld.local.u32 	%r8386, [%rd2];
	or.b32  	%r8387, %r8352, %r8386;
	st.u32 	[%rd9+-112], %r8387;
	ld.local.u32 	%r8388, [%rd2+4];
	or.b32  	%r8389, %r8353, %r8388;
	st.u32 	[%rd9+-108], %r8389;
	ld.local.u32 	%r8390, [%rd2+8];
	or.b32  	%r8391, %r8354, %r8390;
	st.u32 	[%rd9+-104], %r8391;
	ld.local.u32 	%r8392, [%rd2+12];
	or.b32  	%r8393, %r8355, %r8392;
	st.u32 	[%rd9+-100], %r8393;
	ld.local.u32 	%r8394, [%rd3];
	or.b32  	%r8395, %r8356, %r8394;
	st.u32 	[%rd9+-96], %r8395;
	ld.local.u32 	%r8396, [%rd3+4];
	or.b32  	%r8397, %r8357, %r8396;
	st.u32 	[%rd9+-92], %r8397;
	ld.local.u32 	%r8398, [%rd3+8];
	or.b32  	%r8399, %r8358, %r8398;
	st.u32 	[%rd9+-88], %r8399;
	ld.local.u32 	%r8400, [%rd3+12];
	or.b32  	%r8401, %r8359, %r8400;
	st.u32 	[%rd9+-84], %r8401;
	ld.local.u32 	%r8402, [%rd4];
	or.b32  	%r8403, %r8360, %r8402;
	st.u32 	[%rd9+-80], %r8403;
	ld.local.u32 	%r8404, [%rd4+4];
	or.b32  	%r8405, %r8361, %r8404;
	st.u32 	[%rd9+-76], %r8405;
	ld.local.u32 	%r8406, [%rd4+8];
	or.b32  	%r8407, %r8362, %r8406;
	st.u32 	[%rd9+-72], %r8407;
	ld.local.u32 	%r8408, [%rd4+12];
	or.b32  	%r8409, %r8363, %r8408;
	st.u32 	[%rd9+-68], %r8409;
	ld.local.u32 	%r8410, [%rd5];
	or.b32  	%r8411, %r8364, %r8410;
	st.u32 	[%rd9+-64], %r8411;
	ld.local.u32 	%r8412, [%rd5+4];
	or.b32  	%r8413, %r8365, %r8412;
	st.u32 	[%rd9+-60], %r8413;
	ld.local.u32 	%r8414, [%rd5+8];
	or.b32  	%r8415, %r8366, %r8414;
	st.u32 	[%rd9+-56], %r8415;
	ld.local.u32 	%r8416, [%rd5+12];
	or.b32  	%r8417, %r8367, %r8416;
	st.u32 	[%rd9+-52], %r8417;
	ld.local.u32 	%r8418, [%rd6];
	or.b32  	%r8419, %r8368, %r8418;
	st.u32 	[%rd9+-48], %r8419;
	ld.local.u32 	%r8420, [%rd6+4];
	or.b32  	%r8421, %r8369, %r8420;
	st.u32 	[%rd9+-44], %r8421;
	ld.local.u32 	%r8422, [%rd6+8];
	or.b32  	%r8423, %r8370, %r8422;
	st.u32 	[%rd9+-40], %r8423;
	ld.local.u32 	%r8424, [%rd6+12];
	or.b32  	%r8425, %r8371, %r8424;
	st.u32 	[%rd9+-36], %r8425;
	ld.local.u32 	%r8426, [%rd7];
	or.b32  	%r8427, %r8372, %r8426;
	st.u32 	[%rd9+-32], %r8427;
	ld.local.u32 	%r8428, [%rd7+4];
	or.b32  	%r8429, %r8373, %r8428;
	st.u32 	[%rd9+-28], %r8429;
	ld.local.u32 	%r8430, [%rd7+8];
	or.b32  	%r8431, %r8374, %r8430;
	st.u32 	[%rd9+-24], %r8431;
	ld.local.u32 	%r8432, [%rd7+12];
	or.b32  	%r8433, %r8375, %r8432;
	st.u32 	[%rd9+-20], %r8433;
	ld.local.u32 	%r8434, [%rd8];
	or.b32  	%r8435, %r8376, %r8434;
	st.u32 	[%rd9+-16], %r8435;
	ld.local.u32 	%r8436, [%rd8+4];
	or.b32  	%r8437, %r8377, %r8436;
	st.u32 	[%rd9+-12], %r8437;
	ld.local.u32 	%r8438, [%rd8+8];
	or.b32  	%r8439, %r8378, %r8438;
	st.u32 	[%rd9+-8], %r8439;
	ld.local.u32 	%r8440, [%rd8+12];
	or.b32  	%r8441, %r8379, %r8440;
	st.u32 	[%rd9+-4], %r8441;
	bra.uni 	BB1_173;

BB1_63:
	setp.ne.s32	%p7, %r1, 31;
	@%p7 bra 	BB1_87;

	ld.local.u32 	%r582, [%rd8+12];
	mov.u32 	%r8442, 0;
	// inline asm
	prmt.b32 %r8471, %r8442, %r582, %r2;
	// inline asm
	ld.local.u32 	%r585, [%rd8+12];
	ld.local.u32 	%r586, [%rd8+8];
	// inline asm
	prmt.b32 %r8472, %r585, %r586, %r2;
	// inline asm
	ld.local.u32 	%r589, [%rd8+8];
	ld.local.u32 	%r590, [%rd8+4];
	// inline asm
	prmt.b32 %r8473, %r589, %r590, %r2;
	// inline asm
	ld.local.u32 	%r593, [%rd8+4];
	ld.local.u32 	%r594, [%rd8];
	// inline asm
	prmt.b32 %r8474, %r593, %r594, %r2;
	// inline asm
	ld.local.u32 	%r597, [%rd8];
	ld.local.u32 	%r598, [%rd7+12];
	// inline asm
	prmt.b32 %r8467, %r597, %r598, %r2;
	// inline asm
	ld.local.u32 	%r601, [%rd7+12];
	ld.local.u32 	%r602, [%rd7+8];
	// inline asm
	prmt.b32 %r8468, %r601, %r602, %r2;
	// inline asm
	ld.local.u32 	%r605, [%rd7+8];
	ld.local.u32 	%r606, [%rd7+4];
	// inline asm
	prmt.b32 %r8469, %r605, %r606, %r2;
	// inline asm
	ld.local.u32 	%r609, [%rd7+4];
	ld.local.u32 	%r610, [%rd7];
	// inline asm
	prmt.b32 %r8470, %r609, %r610, %r2;
	// inline asm
	ld.local.u32 	%r613, [%rd7];
	ld.local.u32 	%r614, [%rd6+12];
	// inline asm
	prmt.b32 %r8463, %r613, %r614, %r2;
	// inline asm
	ld.local.u32 	%r617, [%rd6+12];
	ld.local.u32 	%r618, [%rd6+8];
	// inline asm
	prmt.b32 %r8464, %r617, %r618, %r2;
	// inline asm
	ld.local.u32 	%r621, [%rd6+8];
	ld.local.u32 	%r622, [%rd6+4];
	// inline asm
	prmt.b32 %r8465, %r621, %r622, %r2;
	// inline asm
	ld.local.u32 	%r625, [%rd6+4];
	ld.local.u32 	%r626, [%rd6];
	// inline asm
	prmt.b32 %r8466, %r625, %r626, %r2;
	// inline asm
	ld.local.u32 	%r629, [%rd6];
	ld.local.u32 	%r630, [%rd5+12];
	// inline asm
	prmt.b32 %r8459, %r629, %r630, %r2;
	// inline asm
	ld.local.u32 	%r633, [%rd5+12];
	ld.local.u32 	%r634, [%rd5+8];
	// inline asm
	prmt.b32 %r8460, %r633, %r634, %r2;
	// inline asm
	ld.local.u32 	%r637, [%rd5+8];
	ld.local.u32 	%r638, [%rd5+4];
	// inline asm
	prmt.b32 %r8461, %r637, %r638, %r2;
	// inline asm
	ld.local.u32 	%r641, [%rd5+4];
	ld.local.u32 	%r642, [%rd5];
	// inline asm
	prmt.b32 %r8462, %r641, %r642, %r2;
	// inline asm
	ld.local.u32 	%r645, [%rd5];
	ld.local.u32 	%r646, [%rd4+12];
	// inline asm
	prmt.b32 %r8455, %r645, %r646, %r2;
	// inline asm
	ld.local.u32 	%r649, [%rd4+12];
	ld.local.u32 	%r650, [%rd4+8];
	// inline asm
	prmt.b32 %r8456, %r649, %r650, %r2;
	// inline asm
	ld.local.u32 	%r653, [%rd4+8];
	ld.local.u32 	%r654, [%rd4+4];
	// inline asm
	prmt.b32 %r8457, %r653, %r654, %r2;
	// inline asm
	ld.local.u32 	%r657, [%rd4+4];
	ld.local.u32 	%r658, [%rd4];
	// inline asm
	prmt.b32 %r8458, %r657, %r658, %r2;
	// inline asm
	ld.local.u32 	%r661, [%rd4];
	ld.local.u32 	%r662, [%rd3+12];
	// inline asm
	prmt.b32 %r8451, %r661, %r662, %r2;
	// inline asm
	ld.local.u32 	%r665, [%rd3+12];
	ld.local.u32 	%r666, [%rd3+8];
	// inline asm
	prmt.b32 %r8452, %r665, %r666, %r2;
	// inline asm
	ld.local.u32 	%r669, [%rd3+8];
	ld.local.u32 	%r670, [%rd3+4];
	// inline asm
	prmt.b32 %r8453, %r669, %r670, %r2;
	// inline asm
	ld.local.u32 	%r673, [%rd3+4];
	ld.local.u32 	%r674, [%rd3];
	// inline asm
	prmt.b32 %r8454, %r673, %r674, %r2;
	// inline asm
	ld.local.u32 	%r677, [%rd3];
	ld.local.u32 	%r678, [%rd2+12];
	// inline asm
	prmt.b32 %r8447, %r677, %r678, %r2;
	// inline asm
	ld.local.u32 	%r681, [%rd2+12];
	ld.local.u32 	%r682, [%rd2+8];
	// inline asm
	prmt.b32 %r8448, %r681, %r682, %r2;
	// inline asm
	ld.local.u32 	%r685, [%rd2+8];
	ld.local.u32 	%r686, [%rd2+4];
	// inline asm
	prmt.b32 %r8449, %r685, %r686, %r2;
	// inline asm
	ld.local.u32 	%r689, [%rd2+4];
	ld.local.u32 	%r690, [%rd2];
	// inline asm
	prmt.b32 %r8450, %r689, %r690, %r2;
	// inline asm
	ld.local.u32 	%r693, [%rd2];
	ld.local.u32 	%r694, [%rd1+12];
	// inline asm
	prmt.b32 %r8443, %r693, %r694, %r2;
	// inline asm
	ld.local.u32 	%r697, [%rd1+12];
	ld.local.u32 	%r698, [%rd1+8];
	// inline asm
	prmt.b32 %r8444, %r697, %r698, %r2;
	// inline asm
	ld.local.u32 	%r701, [%rd1+8];
	ld.local.u32 	%r702, [%rd1+4];
	// inline asm
	prmt.b32 %r8445, %r701, %r702, %r2;
	// inline asm
	ld.local.u32 	%r705, [%rd1+4];
	ld.local.u32 	%r706, [%rd1];
	// inline asm
	prmt.b32 %r8446, %r705, %r706, %r2;
	// inline asm
	ld.local.u32 	%r709, [%rd1];
	// inline asm
	prmt.b32 %r708, %r709, %r8442, %r2;
	// inline asm
	st.local.u32 	[%rd8+12], %r708;
	st.local.u32 	[%rd8+8], %r8442;
	st.local.u32 	[%rd8+4], %r8442;
	st.local.u32 	[%rd8], %r8442;
	st.local.u32 	[%rd7+12], %r8442;
	st.local.u32 	[%rd7+8], %r8442;
	st.local.u32 	[%rd7+4], %r8442;
	st.local.u32 	[%rd7], %r8442;
	st.local.u32 	[%rd6+12], %r8442;
	st.local.u32 	[%rd6+8], %r8442;
	st.local.u32 	[%rd6+4], %r8442;
	st.local.u32 	[%rd6], %r8442;
	st.local.u32 	[%rd5+12], %r8442;
	st.local.u32 	[%rd5+8], %r8442;
	st.local.u32 	[%rd5+4], %r8442;
	st.local.u32 	[%rd5], %r8442;
	st.local.u32 	[%rd4+12], %r8442;
	st.local.u32 	[%rd4+8], %r8442;
	st.local.u32 	[%rd4+4], %r8442;
	st.local.u32 	[%rd4], %r8442;
	st.local.u32 	[%rd3+12], %r8442;
	st.local.u32 	[%rd3+8], %r8442;
	st.local.u32 	[%rd3+4], %r8442;
	st.local.u32 	[%rd3], %r8442;
	st.local.u32 	[%rd2+12], %r8442;
	st.local.u32 	[%rd2+8], %r8442;
	st.local.u32 	[%rd2+4], %r8442;
	st.local.u32 	[%rd2], %r8442;
	st.local.u32 	[%rd1+12], %r8442;
	st.local.u32 	[%rd1+8], %r8442;
	mov.u64 	%rd99, 0;
	st.local.u32 	[%rd1+4], %rd99;
	st.local.u32 	[%rd1], %rd99;
	bra.uni 	BB1_89;

BB1_87:
	ld.local.u32 	%r8442, [%rd1];
	mov.u32 	%r8443, 0;
	mov.u32 	%r8444, %r8443;
	mov.u32 	%r8445, %r8443;
	mov.u32 	%r8446, %r8443;

BB1_88:
	mov.u32 	%r8447, %r8443;
	mov.u32 	%r8448, %r8443;
	mov.u32 	%r8449, %r8443;
	mov.u32 	%r8450, %r8443;
	mov.u32 	%r8451, %r8443;
	mov.u32 	%r8452, %r8443;
	mov.u32 	%r8453, %r8443;
	mov.u32 	%r8454, %r8443;
	mov.u32 	%r8455, %r8443;
	mov.u32 	%r8456, %r8443;
	mov.u32 	%r8457, %r8443;
	mov.u32 	%r8458, %r8443;
	mov.u32 	%r8459, %r8443;
	mov.u32 	%r8460, %r8443;
	mov.u32 	%r8461, %r8443;
	mov.u32 	%r8462, %r8443;
	mov.u32 	%r8463, %r8443;
	mov.u32 	%r8464, %r8443;
	mov.u32 	%r8465, %r8443;
	mov.u32 	%r8466, %r8443;
	mov.u32 	%r8467, %r8443;
	mov.u32 	%r8468, %r8443;
	mov.u32 	%r8469, %r8443;
	mov.u32 	%r8470, %r8443;
	mov.u32 	%r8471, %r8443;
	mov.u32 	%r8472, %r8443;
	mov.u32 	%r8473, %r8443;
	mov.u32 	%r8474, %r8443;

BB1_89:
	ld.v2.u32 	{%r5364, %r5365}, [%rd9+-128];
	ld.v2.u32 	{%r5367, %r5368}, [%rd9+-120];
	ld.v2.u32 	{%r5369, %r5370}, [%rd9+-112];
	ld.v2.u32 	{%r5371, %r5372}, [%rd9+-104];
	ld.v2.u32 	{%r5373, %r5374}, [%rd9+-96];
	ld.v2.u32 	{%r5375, %r5376}, [%rd9+-88];
	ld.v2.u32 	{%r5377, %r5378}, [%rd9+-80];
	ld.v2.u32 	{%r5379, %r5380}, [%rd9+-72];
	ld.v2.u32 	{%r5381, %r5382}, [%rd9+-64];
	ld.v2.u32 	{%r5383, %r5384}, [%rd9+-56];
	ld.v2.u32 	{%r5385, %r5386}, [%rd9+-48];
	ld.v2.u32 	{%r5387, %r5388}, [%rd9+-40];
	ld.v2.u32 	{%r5389, %r5390}, [%rd9+-32];
	ld.v2.u32 	{%r5391, %r5392}, [%rd9+-24];
	ld.v2.u32 	{%r5393, %r5394}, [%rd9+-16];
	ld.v2.u32 	{%r5395, %r5396}, [%rd9+-8];
	or.b32  	%r5397, %r5364, %r8442;
	st.u32 	[%rd9+-128], %r5397;
	ld.local.u32 	%r5399, [%rd1+4];
	or.b32  	%r5400, %r5365, %r5399;
	st.u32 	[%rd9+-124], %r5400;
	ld.local.u32 	%r5401, [%rd1+8];
	or.b32  	%r5403, %r5367, %r5401;
	st.u32 	[%rd9+-120], %r5403;
	ld.local.u32 	%r5405, [%rd1+12];
	or.b32  	%r5406, %r5368, %r5405;
	st.u32 	[%rd9+-116], %r5406;
	ld.local.u32 	%r5407, [%rd2];
	or.b32  	%r5409, %r5369, %r5407;
	st.u32 	[%rd9+-112], %r5409;
	ld.local.u32 	%r5411, [%rd2+4];
	or.b32  	%r5412, %r5370, %r5411;
	st.u32 	[%rd9+-108], %r5412;
	ld.local.u32 	%r5413, [%rd2+8];
	or.b32  	%r5415, %r5371, %r5413;
	st.u32 	[%rd9+-104], %r5415;
	ld.local.u32 	%r5417, [%rd2+12];
	or.b32  	%r5418, %r5372, %r5417;
	st.u32 	[%rd9+-100], %r5418;
	ld.local.u32 	%r5419, [%rd3];
	or.b32  	%r5421, %r5373, %r5419;
	st.u32 	[%rd9+-96], %r5421;
	ld.local.u32 	%r5423, [%rd3+4];
	or.b32  	%r5424, %r5374, %r5423;
	st.u32 	[%rd9+-92], %r5424;
	ld.local.u32 	%r5425, [%rd3+8];
	or.b32  	%r5427, %r5375, %r5425;
	st.u32 	[%rd9+-88], %r5427;
	ld.local.u32 	%r5429, [%rd3+12];
	or.b32  	%r5430, %r5376, %r5429;
	st.u32 	[%rd9+-84], %r5430;
	ld.local.u32 	%r5431, [%rd4];
	or.b32  	%r5433, %r5377, %r5431;
	st.u32 	[%rd9+-80], %r5433;
	ld.local.u32 	%r5435, [%rd4+4];
	or.b32  	%r5436, %r5378, %r5435;
	st.u32 	[%rd9+-76], %r5436;
	ld.local.u32 	%r5437, [%rd4+8];
	or.b32  	%r5439, %r5379, %r5437;
	st.u32 	[%rd9+-72], %r5439;
	ld.local.u32 	%r5441, [%rd4+12];
	or.b32  	%r5442, %r5380, %r5441;
	st.u32 	[%rd9+-68], %r5442;
	ld.local.u32 	%r5443, [%rd5];
	or.b32  	%r5445, %r5381, %r5443;
	st.u32 	[%rd9+-64], %r5445;
	ld.local.u32 	%r5447, [%rd5+4];
	or.b32  	%r5448, %r5382, %r5447;
	st.u32 	[%rd9+-60], %r5448;
	ld.local.u32 	%r5449, [%rd5+8];
	or.b32  	%r5451, %r5383, %r5449;
	st.u32 	[%rd9+-56], %r5451;
	ld.local.u32 	%r5453, [%rd5+12];
	or.b32  	%r5454, %r5384, %r5453;
	st.u32 	[%rd9+-52], %r5454;
	ld.local.u32 	%r5455, [%rd6];
	or.b32  	%r5457, %r5385, %r5455;
	st.u32 	[%rd9+-48], %r5457;
	ld.local.u32 	%r5459, [%rd6+4];
	or.b32  	%r5460, %r5386, %r5459;
	st.u32 	[%rd9+-44], %r5460;
	ld.local.u32 	%r5461, [%rd6+8];
	or.b32  	%r5463, %r5387, %r5461;
	st.u32 	[%rd9+-40], %r5463;
	ld.local.u32 	%r5465, [%rd6+12];
	or.b32  	%r5466, %r5388, %r5465;
	st.u32 	[%rd9+-36], %r5466;
	ld.local.u32 	%r5467, [%rd7];
	or.b32  	%r5469, %r5389, %r5467;
	st.u32 	[%rd9+-32], %r5469;
	ld.local.u32 	%r5471, [%rd7+4];
	or.b32  	%r5472, %r5390, %r5471;
	st.u32 	[%rd9+-28], %r5472;
	ld.local.u32 	%r5473, [%rd7+8];
	or.b32  	%r5475, %r5391, %r5473;
	st.u32 	[%rd9+-24], %r5475;
	ld.local.u32 	%r5477, [%rd7+12];
	or.b32  	%r5478, %r5392, %r5477;
	st.u32 	[%rd9+-20], %r5478;
	ld.local.u32 	%r5479, [%rd8];
	or.b32  	%r5481, %r5393, %r5479;
	st.u32 	[%rd9+-16], %r5481;
	ld.local.u32 	%r5483, [%rd8+4];
	or.b32  	%r5484, %r5394, %r5483;
	st.u32 	[%rd9+-12], %r5484;
	ld.local.u32 	%r5485, [%rd8+8];
	or.b32  	%r5487, %r5395, %r5485;
	st.u32 	[%rd9+-8], %r5487;
	ld.local.u32 	%r5489, [%rd8+12];
	or.b32  	%r5490, %r5396, %r5489;
	st.u32 	[%rd9+-4], %r5490;
	mov.b64	%rd1194, {%r5400, %r5397};
	mov.b64	%rd1195, {%r5406, %r5403};
	mov.b64	%rd1196, {%r5412, %r5409};
	mov.b64	%rd1197, {%r5418, %r5415};
	mov.b64	%rd1198, {%r5424, %r5421};
	mov.b64	%rd1199, {%r5430, %r5427};
	mov.b64	%rd1200, {%r5436, %r5433};
	mov.b64	%rd1201, {%r5442, %r5439};
	mov.b64	%rd1185, {%r5448, %r5445};
	mov.b64	%rd1184, {%r5454, %r5451};
	mov.b64	%rd1183, {%r5460, %r5457};
	mov.b64	%rd1182, {%r5466, %r5463};
	mov.b64	%rd1181, {%r5472, %r5469};
	mov.b64	%rd1180, {%r5478, %r5475};
	mov.b64	%rd1179, {%r5484, %r5481};
	mov.b64	%rd1178, {%r5490, %r5487};
	ld.u64 	%rd26, [%rd9+-160];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5491,%dummy}, %rd26;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5492}, %rd26;
	}
	shf.r.wrap.b32 	%r5493, %r5492, %r5491, 14;
	shf.r.wrap.b32 	%r5494, %r5491, %r5492, 14;
	mov.b64 	%rd129, {%r5494, %r5493};
	shf.r.wrap.b32 	%r5495, %r5492, %r5491, 18;
	shf.r.wrap.b32 	%r5496, %r5491, %r5492, 18;
	mov.b64 	%rd130, {%r5496, %r5495};
	xor.b64  	%rd131, %rd130, %rd129;
	shf.l.wrap.b32 	%r5497, %r5491, %r5492, 23;
	shf.l.wrap.b32 	%r5498, %r5492, %r5491, 23;
	mov.b64 	%rd132, {%r5498, %r5497};
	xor.b64  	%rd133, %rd131, %rd132;
	ld.u64 	%rd27, [%rd9+-144];
	ld.u64 	%rd28, [%rd9+-152];
	xor.b64  	%rd134, %rd27, %rd28;
	and.b64  	%rd135, %rd134, %rd26;
	xor.b64  	%rd136, %rd135, %rd27;
	ld.u64 	%rd29, [%rd9+-136];
	add.s64 	%rd137, %rd136, %rd29;
	add.s64 	%rd138, %rd137, %rd1194;
	ld.const.u64 	%rd139, [k_sha512];
	add.s64 	%rd140, %rd138, %rd139;
	add.s64 	%rd141, %rd140, %rd133;
	ld.u64 	%rd30, [%rd9+-168];
	add.s64 	%rd142, %rd141, %rd30;
	ld.u64 	%rd31, [%rd9+-192];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5499,%dummy}, %rd31;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5500}, %rd31;
	}
	shf.r.wrap.b32 	%r5501, %r5500, %r5499, 28;
	shf.r.wrap.b32 	%r5502, %r5499, %r5500, 28;
	mov.b64 	%rd143, {%r5502, %r5501};
	shf.l.wrap.b32 	%r5503, %r5499, %r5500, 30;
	shf.l.wrap.b32 	%r5504, %r5500, %r5499, 30;
	mov.b64 	%rd144, {%r5504, %r5503};
	xor.b64  	%rd145, %rd144, %rd143;
	shf.l.wrap.b32 	%r5505, %r5499, %r5500, 25;
	shf.l.wrap.b32 	%r5506, %r5500, %r5499, 25;
	mov.b64 	%rd146, {%r5506, %r5505};
	xor.b64  	%rd147, %rd145, %rd146;
	ld.u64 	%rd32, [%rd9+-176];
	xor.b64  	%rd148, %rd32, %rd31;
	ld.u64 	%rd33, [%rd9+-184];
	xor.b64  	%rd149, %rd33, %rd31;
	and.b64  	%rd150, %rd148, %rd149;
	xor.b64  	%rd151, %rd150, %rd31;
	add.s64 	%rd152, %rd141, %rd151;
	add.s64 	%rd153, %rd152, %rd147;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5507,%dummy}, %rd142;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5508}, %rd142;
	}
	shf.r.wrap.b32 	%r5509, %r5508, %r5507, 14;
	shf.r.wrap.b32 	%r5510, %r5507, %r5508, 14;
	mov.b64 	%rd154, {%r5510, %r5509};
	shf.r.wrap.b32 	%r5511, %r5508, %r5507, 18;
	shf.r.wrap.b32 	%r5512, %r5507, %r5508, 18;
	mov.b64 	%rd155, {%r5512, %r5511};
	xor.b64  	%rd156, %rd155, %rd154;
	shf.l.wrap.b32 	%r5513, %r5507, %r5508, 23;
	shf.l.wrap.b32 	%r5514, %r5508, %r5507, 23;
	mov.b64 	%rd157, {%r5514, %r5513};
	xor.b64  	%rd158, %rd156, %rd157;
	xor.b64  	%rd159, %rd28, %rd26;
	and.b64  	%rd160, %rd142, %rd159;
	xor.b64  	%rd161, %rd160, %rd28;
	add.s64 	%rd162, %rd1195, %rd27;
	ld.const.u64 	%rd163, [k_sha512+8];
	add.s64 	%rd164, %rd162, %rd163;
	add.s64 	%rd165, %rd164, %rd161;
	add.s64 	%rd166, %rd165, %rd158;
	add.s64 	%rd167, %rd166, %rd32;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5515,%dummy}, %rd153;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5516}, %rd153;
	}
	shf.r.wrap.b32 	%r5517, %r5516, %r5515, 28;
	shf.r.wrap.b32 	%r5518, %r5515, %r5516, 28;
	mov.b64 	%rd168, {%r5518, %r5517};
	shf.l.wrap.b32 	%r5519, %r5515, %r5516, 30;
	shf.l.wrap.b32 	%r5520, %r5516, %r5515, 30;
	mov.b64 	%rd169, {%r5520, %r5519};
	xor.b64  	%rd170, %rd169, %rd168;
	shf.l.wrap.b32 	%r5521, %r5515, %r5516, 25;
	shf.l.wrap.b32 	%r5522, %r5516, %r5515, 25;
	mov.b64 	%rd171, {%r5522, %r5521};
	xor.b64  	%rd172, %rd170, %rd171;
	xor.b64  	%rd173, %rd153, %rd33;
	xor.b64  	%rd174, %rd153, %rd31;
	and.b64  	%rd175, %rd174, %rd173;
	xor.b64  	%rd176, %rd175, %rd153;
	add.s64 	%rd177, %rd166, %rd176;
	add.s64 	%rd178, %rd177, %rd172;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5523,%dummy}, %rd167;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5524}, %rd167;
	}
	shf.r.wrap.b32 	%r5525, %r5524, %r5523, 14;
	shf.r.wrap.b32 	%r5526, %r5523, %r5524, 14;
	mov.b64 	%rd179, {%r5526, %r5525};
	shf.r.wrap.b32 	%r5527, %r5524, %r5523, 18;
	shf.r.wrap.b32 	%r5528, %r5523, %r5524, 18;
	mov.b64 	%rd180, {%r5528, %r5527};
	xor.b64  	%rd181, %rd180, %rd179;
	shf.l.wrap.b32 	%r5529, %r5523, %r5524, 23;
	shf.l.wrap.b32 	%r5530, %r5524, %r5523, 23;
	mov.b64 	%rd182, {%r5530, %r5529};
	xor.b64  	%rd183, %rd181, %rd182;
	xor.b64  	%rd184, %rd142, %rd26;
	and.b64  	%rd185, %rd167, %rd184;
	xor.b64  	%rd186, %rd185, %rd26;
	add.s64 	%rd187, %rd1196, %rd28;
	ld.const.u64 	%rd188, [k_sha512+16];
	add.s64 	%rd189, %rd187, %rd188;
	add.s64 	%rd190, %rd189, %rd186;
	add.s64 	%rd191, %rd190, %rd183;
	add.s64 	%rd192, %rd191, %rd33;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5531,%dummy}, %rd178;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5532}, %rd178;
	}
	shf.r.wrap.b32 	%r5533, %r5532, %r5531, 28;
	shf.r.wrap.b32 	%r5534, %r5531, %r5532, 28;
	mov.b64 	%rd193, {%r5534, %r5533};
	shf.l.wrap.b32 	%r5535, %r5531, %r5532, 30;
	shf.l.wrap.b32 	%r5536, %r5532, %r5531, 30;
	mov.b64 	%rd194, {%r5536, %r5535};
	xor.b64  	%rd195, %rd194, %rd193;
	shf.l.wrap.b32 	%r5537, %r5531, %r5532, 25;
	shf.l.wrap.b32 	%r5538, %r5532, %r5531, 25;
	mov.b64 	%rd196, {%r5538, %r5537};
	xor.b64  	%rd197, %rd195, %rd196;
	xor.b64  	%rd198, %rd178, %rd31;
	xor.b64  	%rd199, %rd178, %rd153;
	and.b64  	%rd200, %rd199, %rd198;
	xor.b64  	%rd201, %rd200, %rd178;
	add.s64 	%rd202, %rd191, %rd201;
	add.s64 	%rd203, %rd202, %rd197;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5539,%dummy}, %rd192;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5540}, %rd192;
	}
	shf.r.wrap.b32 	%r5541, %r5540, %r5539, 14;
	shf.r.wrap.b32 	%r5542, %r5539, %r5540, 14;
	mov.b64 	%rd204, {%r5542, %r5541};
	shf.r.wrap.b32 	%r5543, %r5540, %r5539, 18;
	shf.r.wrap.b32 	%r5544, %r5539, %r5540, 18;
	mov.b64 	%rd205, {%r5544, %r5543};
	xor.b64  	%rd206, %rd205, %rd204;
	shf.l.wrap.b32 	%r5545, %r5539, %r5540, 23;
	shf.l.wrap.b32 	%r5546, %r5540, %r5539, 23;
	mov.b64 	%rd207, {%r5546, %r5545};
	xor.b64  	%rd208, %rd206, %rd207;
	xor.b64  	%rd209, %rd167, %rd142;
	and.b64  	%rd210, %rd192, %rd209;
	xor.b64  	%rd211, %rd210, %rd142;
	add.s64 	%rd212, %rd1197, %rd26;
	ld.const.u64 	%rd213, [k_sha512+24];
	add.s64 	%rd214, %rd212, %rd213;
	add.s64 	%rd215, %rd214, %rd211;
	add.s64 	%rd216, %rd215, %rd208;
	add.s64 	%rd217, %rd216, %rd31;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5547,%dummy}, %rd203;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5548}, %rd203;
	}
	shf.r.wrap.b32 	%r5549, %r5548, %r5547, 28;
	shf.r.wrap.b32 	%r5550, %r5547, %r5548, 28;
	mov.b64 	%rd218, {%r5550, %r5549};
	shf.l.wrap.b32 	%r5551, %r5547, %r5548, 30;
	shf.l.wrap.b32 	%r5552, %r5548, %r5547, 30;
	mov.b64 	%rd219, {%r5552, %r5551};
	xor.b64  	%rd220, %rd219, %rd218;
	shf.l.wrap.b32 	%r5553, %r5547, %r5548, 25;
	shf.l.wrap.b32 	%r5554, %r5548, %r5547, 25;
	mov.b64 	%rd221, {%r5554, %r5553};
	xor.b64  	%rd222, %rd220, %rd221;
	xor.b64  	%rd223, %rd203, %rd153;
	xor.b64  	%rd224, %rd203, %rd178;
	and.b64  	%rd225, %rd224, %rd223;
	xor.b64  	%rd226, %rd225, %rd203;
	add.s64 	%rd227, %rd216, %rd226;
	add.s64 	%rd228, %rd227, %rd222;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5555,%dummy}, %rd217;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5556}, %rd217;
	}
	shf.r.wrap.b32 	%r5557, %r5556, %r5555, 14;
	shf.r.wrap.b32 	%r5558, %r5555, %r5556, 14;
	mov.b64 	%rd229, {%r5558, %r5557};
	shf.r.wrap.b32 	%r5559, %r5556, %r5555, 18;
	shf.r.wrap.b32 	%r5560, %r5555, %r5556, 18;
	mov.b64 	%rd230, {%r5560, %r5559};
	xor.b64  	%rd231, %rd230, %rd229;
	shf.l.wrap.b32 	%r5561, %r5555, %r5556, 23;
	shf.l.wrap.b32 	%r5562, %r5556, %r5555, 23;
	mov.b64 	%rd232, {%r5562, %r5561};
	xor.b64  	%rd233, %rd231, %rd232;
	xor.b64  	%rd234, %rd192, %rd167;
	and.b64  	%rd235, %rd217, %rd234;
	xor.b64  	%rd236, %rd235, %rd167;
	add.s64 	%rd237, %rd142, %rd1198;
	ld.const.u64 	%rd238, [k_sha512+32];
	add.s64 	%rd239, %rd237, %rd238;
	add.s64 	%rd240, %rd239, %rd236;
	add.s64 	%rd241, %rd240, %rd233;
	add.s64 	%rd242, %rd241, %rd153;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5563,%dummy}, %rd228;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5564}, %rd228;
	}
	shf.r.wrap.b32 	%r5565, %r5564, %r5563, 28;
	shf.r.wrap.b32 	%r5566, %r5563, %r5564, 28;
	mov.b64 	%rd243, {%r5566, %r5565};
	shf.l.wrap.b32 	%r5567, %r5563, %r5564, 30;
	shf.l.wrap.b32 	%r5568, %r5564, %r5563, 30;
	mov.b64 	%rd244, {%r5568, %r5567};
	xor.b64  	%rd245, %rd244, %rd243;
	shf.l.wrap.b32 	%r5569, %r5563, %r5564, 25;
	shf.l.wrap.b32 	%r5570, %r5564, %r5563, 25;
	mov.b64 	%rd246, {%r5570, %r5569};
	xor.b64  	%rd247, %rd245, %rd246;
	xor.b64  	%rd248, %rd228, %rd178;
	xor.b64  	%rd249, %rd228, %rd203;
	and.b64  	%rd250, %rd249, %rd248;
	xor.b64  	%rd251, %rd250, %rd228;
	add.s64 	%rd252, %rd241, %rd251;
	add.s64 	%rd253, %rd252, %rd247;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5571,%dummy}, %rd242;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5572}, %rd242;
	}
	shf.r.wrap.b32 	%r5573, %r5572, %r5571, 14;
	shf.r.wrap.b32 	%r5574, %r5571, %r5572, 14;
	mov.b64 	%rd254, {%r5574, %r5573};
	shf.r.wrap.b32 	%r5575, %r5572, %r5571, 18;
	shf.r.wrap.b32 	%r5576, %r5571, %r5572, 18;
	mov.b64 	%rd255, {%r5576, %r5575};
	xor.b64  	%rd256, %rd255, %rd254;
	shf.l.wrap.b32 	%r5577, %r5571, %r5572, 23;
	shf.l.wrap.b32 	%r5578, %r5572, %r5571, 23;
	mov.b64 	%rd257, {%r5578, %r5577};
	xor.b64  	%rd258, %rd256, %rd257;
	xor.b64  	%rd259, %rd217, %rd192;
	and.b64  	%rd260, %rd242, %rd259;
	xor.b64  	%rd261, %rd260, %rd192;
	add.s64 	%rd262, %rd167, %rd1199;
	ld.const.u64 	%rd263, [k_sha512+40];
	add.s64 	%rd264, %rd262, %rd263;
	add.s64 	%rd265, %rd264, %rd261;
	add.s64 	%rd266, %rd265, %rd258;
	add.s64 	%rd267, %rd266, %rd178;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5579,%dummy}, %rd253;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5580}, %rd253;
	}
	shf.r.wrap.b32 	%r5581, %r5580, %r5579, 28;
	shf.r.wrap.b32 	%r5582, %r5579, %r5580, 28;
	mov.b64 	%rd268, {%r5582, %r5581};
	shf.l.wrap.b32 	%r5583, %r5579, %r5580, 30;
	shf.l.wrap.b32 	%r5584, %r5580, %r5579, 30;
	mov.b64 	%rd269, {%r5584, %r5583};
	xor.b64  	%rd270, %rd269, %rd268;
	shf.l.wrap.b32 	%r5585, %r5579, %r5580, 25;
	shf.l.wrap.b32 	%r5586, %r5580, %r5579, 25;
	mov.b64 	%rd271, {%r5586, %r5585};
	xor.b64  	%rd272, %rd270, %rd271;
	xor.b64  	%rd273, %rd253, %rd203;
	xor.b64  	%rd274, %rd253, %rd228;
	and.b64  	%rd275, %rd274, %rd273;
	xor.b64  	%rd276, %rd275, %rd253;
	add.s64 	%rd277, %rd266, %rd276;
	add.s64 	%rd278, %rd277, %rd272;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5587,%dummy}, %rd267;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5588}, %rd267;
	}
	shf.r.wrap.b32 	%r5589, %r5588, %r5587, 14;
	shf.r.wrap.b32 	%r5590, %r5587, %r5588, 14;
	mov.b64 	%rd279, {%r5590, %r5589};
	shf.r.wrap.b32 	%r5591, %r5588, %r5587, 18;
	shf.r.wrap.b32 	%r5592, %r5587, %r5588, 18;
	mov.b64 	%rd280, {%r5592, %r5591};
	xor.b64  	%rd281, %rd280, %rd279;
	shf.l.wrap.b32 	%r5593, %r5587, %r5588, 23;
	shf.l.wrap.b32 	%r5594, %r5588, %r5587, 23;
	mov.b64 	%rd282, {%r5594, %r5593};
	xor.b64  	%rd283, %rd281, %rd282;
	xor.b64  	%rd284, %rd242, %rd217;
	and.b64  	%rd285, %rd267, %rd284;
	xor.b64  	%rd286, %rd285, %rd217;
	add.s64 	%rd287, %rd192, %rd1200;
	ld.const.u64 	%rd288, [k_sha512+48];
	add.s64 	%rd289, %rd287, %rd288;
	add.s64 	%rd290, %rd289, %rd286;
	add.s64 	%rd291, %rd290, %rd283;
	add.s64 	%rd292, %rd291, %rd203;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5595,%dummy}, %rd278;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5596}, %rd278;
	}
	shf.r.wrap.b32 	%r5597, %r5596, %r5595, 28;
	shf.r.wrap.b32 	%r5598, %r5595, %r5596, 28;
	mov.b64 	%rd293, {%r5598, %r5597};
	shf.l.wrap.b32 	%r5599, %r5595, %r5596, 30;
	shf.l.wrap.b32 	%r5600, %r5596, %r5595, 30;
	mov.b64 	%rd294, {%r5600, %r5599};
	xor.b64  	%rd295, %rd294, %rd293;
	shf.l.wrap.b32 	%r5601, %r5595, %r5596, 25;
	shf.l.wrap.b32 	%r5602, %r5596, %r5595, 25;
	mov.b64 	%rd296, {%r5602, %r5601};
	xor.b64  	%rd297, %rd295, %rd296;
	xor.b64  	%rd298, %rd278, %rd228;
	xor.b64  	%rd299, %rd278, %rd253;
	and.b64  	%rd300, %rd299, %rd298;
	xor.b64  	%rd301, %rd300, %rd278;
	add.s64 	%rd302, %rd291, %rd301;
	add.s64 	%rd303, %rd302, %rd297;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5603,%dummy}, %rd292;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5604}, %rd292;
	}
	shf.r.wrap.b32 	%r5605, %r5604, %r5603, 14;
	shf.r.wrap.b32 	%r5606, %r5603, %r5604, 14;
	mov.b64 	%rd304, {%r5606, %r5605};
	shf.r.wrap.b32 	%r5607, %r5604, %r5603, 18;
	shf.r.wrap.b32 	%r5608, %r5603, %r5604, 18;
	mov.b64 	%rd305, {%r5608, %r5607};
	xor.b64  	%rd306, %rd305, %rd304;
	shf.l.wrap.b32 	%r5609, %r5603, %r5604, 23;
	shf.l.wrap.b32 	%r5610, %r5604, %r5603, 23;
	mov.b64 	%rd307, {%r5610, %r5609};
	xor.b64  	%rd308, %rd306, %rd307;
	xor.b64  	%rd309, %rd267, %rd242;
	and.b64  	%rd310, %rd292, %rd309;
	xor.b64  	%rd311, %rd310, %rd242;
	add.s64 	%rd312, %rd217, %rd1201;
	ld.const.u64 	%rd313, [k_sha512+56];
	add.s64 	%rd314, %rd312, %rd313;
	add.s64 	%rd315, %rd314, %rd311;
	add.s64 	%rd316, %rd315, %rd308;
	add.s64 	%rd317, %rd316, %rd228;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5611,%dummy}, %rd303;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5612}, %rd303;
	}
	shf.r.wrap.b32 	%r5613, %r5612, %r5611, 28;
	shf.r.wrap.b32 	%r5614, %r5611, %r5612, 28;
	mov.b64 	%rd318, {%r5614, %r5613};
	shf.l.wrap.b32 	%r5615, %r5611, %r5612, 30;
	shf.l.wrap.b32 	%r5616, %r5612, %r5611, 30;
	mov.b64 	%rd319, {%r5616, %r5615};
	xor.b64  	%rd320, %rd319, %rd318;
	shf.l.wrap.b32 	%r5617, %r5611, %r5612, 25;
	shf.l.wrap.b32 	%r5618, %r5612, %r5611, 25;
	mov.b64 	%rd321, {%r5618, %r5617};
	xor.b64  	%rd322, %rd320, %rd321;
	xor.b64  	%rd323, %rd303, %rd253;
	xor.b64  	%rd324, %rd303, %rd278;
	and.b64  	%rd325, %rd324, %rd323;
	xor.b64  	%rd326, %rd325, %rd303;
	add.s64 	%rd327, %rd316, %rd326;
	add.s64 	%rd328, %rd327, %rd322;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5619,%dummy}, %rd317;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5620}, %rd317;
	}
	shf.r.wrap.b32 	%r5621, %r5620, %r5619, 14;
	shf.r.wrap.b32 	%r5622, %r5619, %r5620, 14;
	mov.b64 	%rd329, {%r5622, %r5621};
	shf.r.wrap.b32 	%r5623, %r5620, %r5619, 18;
	shf.r.wrap.b32 	%r5624, %r5619, %r5620, 18;
	mov.b64 	%rd330, {%r5624, %r5623};
	xor.b64  	%rd331, %rd330, %rd329;
	shf.l.wrap.b32 	%r5625, %r5619, %r5620, 23;
	shf.l.wrap.b32 	%r5626, %r5620, %r5619, 23;
	mov.b64 	%rd332, {%r5626, %r5625};
	xor.b64  	%rd333, %rd331, %rd332;
	xor.b64  	%rd334, %rd292, %rd267;
	and.b64  	%rd335, %rd317, %rd334;
	xor.b64  	%rd336, %rd335, %rd267;
	add.s64 	%rd337, %rd242, %rd1185;
	ld.const.u64 	%rd338, [k_sha512+64];
	add.s64 	%rd339, %rd337, %rd338;
	add.s64 	%rd340, %rd339, %rd336;
	add.s64 	%rd341, %rd340, %rd333;
	add.s64 	%rd342, %rd341, %rd253;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5627,%dummy}, %rd328;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5628}, %rd328;
	}
	shf.r.wrap.b32 	%r5629, %r5628, %r5627, 28;
	shf.r.wrap.b32 	%r5630, %r5627, %r5628, 28;
	mov.b64 	%rd343, {%r5630, %r5629};
	shf.l.wrap.b32 	%r5631, %r5627, %r5628, 30;
	shf.l.wrap.b32 	%r5632, %r5628, %r5627, 30;
	mov.b64 	%rd344, {%r5632, %r5631};
	xor.b64  	%rd345, %rd344, %rd343;
	shf.l.wrap.b32 	%r5633, %r5627, %r5628, 25;
	shf.l.wrap.b32 	%r5634, %r5628, %r5627, 25;
	mov.b64 	%rd346, {%r5634, %r5633};
	xor.b64  	%rd347, %rd345, %rd346;
	xor.b64  	%rd348, %rd328, %rd278;
	xor.b64  	%rd349, %rd328, %rd303;
	and.b64  	%rd350, %rd349, %rd348;
	xor.b64  	%rd351, %rd350, %rd328;
	add.s64 	%rd352, %rd341, %rd351;
	add.s64 	%rd353, %rd352, %rd347;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5635,%dummy}, %rd342;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5636}, %rd342;
	}
	shf.r.wrap.b32 	%r5637, %r5636, %r5635, 14;
	shf.r.wrap.b32 	%r5638, %r5635, %r5636, 14;
	mov.b64 	%rd354, {%r5638, %r5637};
	shf.r.wrap.b32 	%r5639, %r5636, %r5635, 18;
	shf.r.wrap.b32 	%r5640, %r5635, %r5636, 18;
	mov.b64 	%rd355, {%r5640, %r5639};
	xor.b64  	%rd356, %rd355, %rd354;
	shf.l.wrap.b32 	%r5641, %r5635, %r5636, 23;
	shf.l.wrap.b32 	%r5642, %r5636, %r5635, 23;
	mov.b64 	%rd357, {%r5642, %r5641};
	xor.b64  	%rd358, %rd356, %rd357;
	xor.b64  	%rd359, %rd317, %rd292;
	and.b64  	%rd360, %rd342, %rd359;
	xor.b64  	%rd361, %rd360, %rd292;
	add.s64 	%rd362, %rd267, %rd1184;
	ld.const.u64 	%rd363, [k_sha512+72];
	add.s64 	%rd364, %rd362, %rd363;
	add.s64 	%rd365, %rd364, %rd361;
	add.s64 	%rd366, %rd365, %rd358;
	add.s64 	%rd367, %rd366, %rd278;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5643,%dummy}, %rd353;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5644}, %rd353;
	}
	shf.r.wrap.b32 	%r5645, %r5644, %r5643, 28;
	shf.r.wrap.b32 	%r5646, %r5643, %r5644, 28;
	mov.b64 	%rd368, {%r5646, %r5645};
	shf.l.wrap.b32 	%r5647, %r5643, %r5644, 30;
	shf.l.wrap.b32 	%r5648, %r5644, %r5643, 30;
	mov.b64 	%rd369, {%r5648, %r5647};
	xor.b64  	%rd370, %rd369, %rd368;
	shf.l.wrap.b32 	%r5649, %r5643, %r5644, 25;
	shf.l.wrap.b32 	%r5650, %r5644, %r5643, 25;
	mov.b64 	%rd371, {%r5650, %r5649};
	xor.b64  	%rd372, %rd370, %rd371;
	xor.b64  	%rd373, %rd353, %rd303;
	xor.b64  	%rd374, %rd353, %rd328;
	and.b64  	%rd375, %rd374, %rd373;
	xor.b64  	%rd376, %rd375, %rd353;
	add.s64 	%rd377, %rd366, %rd376;
	add.s64 	%rd378, %rd377, %rd372;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5651,%dummy}, %rd367;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5652}, %rd367;
	}
	shf.r.wrap.b32 	%r5653, %r5652, %r5651, 14;
	shf.r.wrap.b32 	%r5654, %r5651, %r5652, 14;
	mov.b64 	%rd379, {%r5654, %r5653};
	shf.r.wrap.b32 	%r5655, %r5652, %r5651, 18;
	shf.r.wrap.b32 	%r5656, %r5651, %r5652, 18;
	mov.b64 	%rd380, {%r5656, %r5655};
	xor.b64  	%rd381, %rd380, %rd379;
	shf.l.wrap.b32 	%r5657, %r5651, %r5652, 23;
	shf.l.wrap.b32 	%r5658, %r5652, %r5651, 23;
	mov.b64 	%rd382, {%r5658, %r5657};
	xor.b64  	%rd383, %rd381, %rd382;
	xor.b64  	%rd384, %rd342, %rd317;
	and.b64  	%rd385, %rd367, %rd384;
	xor.b64  	%rd386, %rd385, %rd317;
	add.s64 	%rd387, %rd292, %rd1183;
	ld.const.u64 	%rd388, [k_sha512+80];
	add.s64 	%rd389, %rd387, %rd388;
	add.s64 	%rd390, %rd389, %rd386;
	add.s64 	%rd391, %rd390, %rd383;
	add.s64 	%rd392, %rd391, %rd303;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5659,%dummy}, %rd378;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5660}, %rd378;
	}
	shf.r.wrap.b32 	%r5661, %r5660, %r5659, 28;
	shf.r.wrap.b32 	%r5662, %r5659, %r5660, 28;
	mov.b64 	%rd393, {%r5662, %r5661};
	shf.l.wrap.b32 	%r5663, %r5659, %r5660, 30;
	shf.l.wrap.b32 	%r5664, %r5660, %r5659, 30;
	mov.b64 	%rd394, {%r5664, %r5663};
	xor.b64  	%rd395, %rd394, %rd393;
	shf.l.wrap.b32 	%r5665, %r5659, %r5660, 25;
	shf.l.wrap.b32 	%r5666, %r5660, %r5659, 25;
	mov.b64 	%rd396, {%r5666, %r5665};
	xor.b64  	%rd397, %rd395, %rd396;
	xor.b64  	%rd398, %rd378, %rd328;
	xor.b64  	%rd399, %rd378, %rd353;
	and.b64  	%rd400, %rd399, %rd398;
	xor.b64  	%rd401, %rd400, %rd378;
	add.s64 	%rd402, %rd391, %rd401;
	add.s64 	%rd403, %rd402, %rd397;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5667,%dummy}, %rd392;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5668}, %rd392;
	}
	shf.r.wrap.b32 	%r5669, %r5668, %r5667, 14;
	shf.r.wrap.b32 	%r5670, %r5667, %r5668, 14;
	mov.b64 	%rd404, {%r5670, %r5669};
	shf.r.wrap.b32 	%r5671, %r5668, %r5667, 18;
	shf.r.wrap.b32 	%r5672, %r5667, %r5668, 18;
	mov.b64 	%rd405, {%r5672, %r5671};
	xor.b64  	%rd406, %rd405, %rd404;
	shf.l.wrap.b32 	%r5673, %r5667, %r5668, 23;
	shf.l.wrap.b32 	%r5674, %r5668, %r5667, 23;
	mov.b64 	%rd407, {%r5674, %r5673};
	xor.b64  	%rd408, %rd406, %rd407;
	xor.b64  	%rd409, %rd367, %rd342;
	and.b64  	%rd410, %rd392, %rd409;
	xor.b64  	%rd411, %rd410, %rd342;
	add.s64 	%rd412, %rd317, %rd1182;
	ld.const.u64 	%rd413, [k_sha512+88];
	add.s64 	%rd414, %rd412, %rd413;
	add.s64 	%rd415, %rd414, %rd411;
	add.s64 	%rd416, %rd415, %rd408;
	add.s64 	%rd417, %rd416, %rd328;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5675,%dummy}, %rd403;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5676}, %rd403;
	}
	shf.r.wrap.b32 	%r5677, %r5676, %r5675, 28;
	shf.r.wrap.b32 	%r5678, %r5675, %r5676, 28;
	mov.b64 	%rd418, {%r5678, %r5677};
	shf.l.wrap.b32 	%r5679, %r5675, %r5676, 30;
	shf.l.wrap.b32 	%r5680, %r5676, %r5675, 30;
	mov.b64 	%rd419, {%r5680, %r5679};
	xor.b64  	%rd420, %rd419, %rd418;
	shf.l.wrap.b32 	%r5681, %r5675, %r5676, 25;
	shf.l.wrap.b32 	%r5682, %r5676, %r5675, 25;
	mov.b64 	%rd421, {%r5682, %r5681};
	xor.b64  	%rd422, %rd420, %rd421;
	xor.b64  	%rd423, %rd403, %rd353;
	xor.b64  	%rd424, %rd403, %rd378;
	and.b64  	%rd425, %rd424, %rd423;
	xor.b64  	%rd426, %rd425, %rd403;
	add.s64 	%rd427, %rd416, %rd426;
	add.s64 	%rd428, %rd427, %rd422;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5683,%dummy}, %rd417;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5684}, %rd417;
	}
	shf.r.wrap.b32 	%r5685, %r5684, %r5683, 14;
	shf.r.wrap.b32 	%r5686, %r5683, %r5684, 14;
	mov.b64 	%rd429, {%r5686, %r5685};
	shf.r.wrap.b32 	%r5687, %r5684, %r5683, 18;
	shf.r.wrap.b32 	%r5688, %r5683, %r5684, 18;
	mov.b64 	%rd430, {%r5688, %r5687};
	xor.b64  	%rd431, %rd430, %rd429;
	shf.l.wrap.b32 	%r5689, %r5683, %r5684, 23;
	shf.l.wrap.b32 	%r5690, %r5684, %r5683, 23;
	mov.b64 	%rd432, {%r5690, %r5689};
	xor.b64  	%rd433, %rd431, %rd432;
	xor.b64  	%rd434, %rd392, %rd367;
	and.b64  	%rd435, %rd417, %rd434;
	xor.b64  	%rd436, %rd435, %rd367;
	add.s64 	%rd437, %rd342, %rd1181;
	ld.const.u64 	%rd438, [k_sha512+96];
	add.s64 	%rd439, %rd437, %rd438;
	add.s64 	%rd440, %rd439, %rd436;
	add.s64 	%rd441, %rd440, %rd433;
	add.s64 	%rd1193, %rd441, %rd353;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5691,%dummy}, %rd428;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5692}, %rd428;
	}
	shf.r.wrap.b32 	%r5693, %r5692, %r5691, 28;
	shf.r.wrap.b32 	%r5694, %r5691, %r5692, 28;
	mov.b64 	%rd442, {%r5694, %r5693};
	shf.l.wrap.b32 	%r5695, %r5691, %r5692, 30;
	shf.l.wrap.b32 	%r5696, %r5692, %r5691, 30;
	mov.b64 	%rd443, {%r5696, %r5695};
	xor.b64  	%rd444, %rd443, %rd442;
	shf.l.wrap.b32 	%r5697, %r5691, %r5692, 25;
	shf.l.wrap.b32 	%r5698, %r5692, %r5691, 25;
	mov.b64 	%rd445, {%r5698, %r5697};
	xor.b64  	%rd446, %rd444, %rd445;
	xor.b64  	%rd447, %rd428, %rd378;
	xor.b64  	%rd448, %rd428, %rd403;
	and.b64  	%rd449, %rd448, %rd447;
	xor.b64  	%rd450, %rd449, %rd428;
	add.s64 	%rd451, %rd441, %rd450;
	add.s64 	%rd1189, %rd451, %rd446;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5699,%dummy}, %rd1193;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5700}, %rd1193;
	}
	shf.r.wrap.b32 	%r5701, %r5700, %r5699, 14;
	shf.r.wrap.b32 	%r5702, %r5699, %r5700, 14;
	mov.b64 	%rd452, {%r5702, %r5701};
	shf.r.wrap.b32 	%r5703, %r5700, %r5699, 18;
	shf.r.wrap.b32 	%r5704, %r5699, %r5700, 18;
	mov.b64 	%rd453, {%r5704, %r5703};
	xor.b64  	%rd454, %rd453, %rd452;
	shf.l.wrap.b32 	%r5705, %r5699, %r5700, 23;
	shf.l.wrap.b32 	%r5706, %r5700, %r5699, 23;
	mov.b64 	%rd455, {%r5706, %r5705};
	xor.b64  	%rd456, %rd454, %rd455;
	xor.b64  	%rd457, %rd417, %rd392;
	and.b64  	%rd458, %rd1193, %rd457;
	xor.b64  	%rd459, %rd458, %rd392;
	add.s64 	%rd460, %rd367, %rd1180;
	ld.const.u64 	%rd461, [k_sha512+104];
	add.s64 	%rd462, %rd460, %rd461;
	add.s64 	%rd463, %rd462, %rd459;
	add.s64 	%rd464, %rd463, %rd456;
	add.s64 	%rd1192, %rd464, %rd378;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5707,%dummy}, %rd1189;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5708}, %rd1189;
	}
	shf.r.wrap.b32 	%r5709, %r5708, %r5707, 28;
	shf.r.wrap.b32 	%r5710, %r5707, %r5708, 28;
	mov.b64 	%rd465, {%r5710, %r5709};
	shf.l.wrap.b32 	%r5711, %r5707, %r5708, 30;
	shf.l.wrap.b32 	%r5712, %r5708, %r5707, 30;
	mov.b64 	%rd466, {%r5712, %r5711};
	xor.b64  	%rd467, %rd466, %rd465;
	shf.l.wrap.b32 	%r5713, %r5707, %r5708, 25;
	shf.l.wrap.b32 	%r5714, %r5708, %r5707, 25;
	mov.b64 	%rd468, {%r5714, %r5713};
	xor.b64  	%rd469, %rd467, %rd468;
	xor.b64  	%rd470, %rd1189, %rd403;
	xor.b64  	%rd471, %rd1189, %rd428;
	and.b64  	%rd472, %rd471, %rd470;
	xor.b64  	%rd473, %rd472, %rd1189;
	add.s64 	%rd474, %rd464, %rd473;
	add.s64 	%rd1188, %rd474, %rd469;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5715,%dummy}, %rd1192;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5716}, %rd1192;
	}
	shf.r.wrap.b32 	%r5717, %r5716, %r5715, 14;
	shf.r.wrap.b32 	%r5718, %r5715, %r5716, 14;
	mov.b64 	%rd475, {%r5718, %r5717};
	shf.r.wrap.b32 	%r5719, %r5716, %r5715, 18;
	shf.r.wrap.b32 	%r5720, %r5715, %r5716, 18;
	mov.b64 	%rd476, {%r5720, %r5719};
	xor.b64  	%rd477, %rd476, %rd475;
	shf.l.wrap.b32 	%r5721, %r5715, %r5716, 23;
	shf.l.wrap.b32 	%r5722, %r5716, %r5715, 23;
	mov.b64 	%rd478, {%r5722, %r5721};
	xor.b64  	%rd479, %rd477, %rd478;
	xor.b64  	%rd480, %rd1193, %rd417;
	and.b64  	%rd481, %rd1192, %rd480;
	xor.b64  	%rd482, %rd481, %rd417;
	add.s64 	%rd483, %rd392, %rd1179;
	ld.const.u64 	%rd484, [k_sha512+112];
	add.s64 	%rd485, %rd483, %rd484;
	add.s64 	%rd486, %rd485, %rd482;
	add.s64 	%rd487, %rd486, %rd479;
	add.s64 	%rd1191, %rd487, %rd403;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5723,%dummy}, %rd1188;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5724}, %rd1188;
	}
	shf.r.wrap.b32 	%r5725, %r5724, %r5723, 28;
	shf.r.wrap.b32 	%r5726, %r5723, %r5724, 28;
	mov.b64 	%rd488, {%r5726, %r5725};
	shf.l.wrap.b32 	%r5727, %r5723, %r5724, 30;
	shf.l.wrap.b32 	%r5728, %r5724, %r5723, 30;
	mov.b64 	%rd489, {%r5728, %r5727};
	xor.b64  	%rd490, %rd489, %rd488;
	shf.l.wrap.b32 	%r5729, %r5723, %r5724, 25;
	shf.l.wrap.b32 	%r5730, %r5724, %r5723, 25;
	mov.b64 	%rd491, {%r5730, %r5729};
	xor.b64  	%rd492, %rd490, %rd491;
	xor.b64  	%rd493, %rd1188, %rd428;
	xor.b64  	%rd494, %rd1188, %rd1189;
	and.b64  	%rd495, %rd494, %rd493;
	xor.b64  	%rd496, %rd495, %rd1188;
	add.s64 	%rd497, %rd487, %rd496;
	add.s64 	%rd1187, %rd497, %rd492;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5731,%dummy}, %rd1191;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5732}, %rd1191;
	}
	shf.r.wrap.b32 	%r5733, %r5732, %r5731, 14;
	shf.r.wrap.b32 	%r5734, %r5731, %r5732, 14;
	mov.b64 	%rd498, {%r5734, %r5733};
	shf.r.wrap.b32 	%r5735, %r5732, %r5731, 18;
	shf.r.wrap.b32 	%r5736, %r5731, %r5732, 18;
	mov.b64 	%rd499, {%r5736, %r5735};
	xor.b64  	%rd500, %rd499, %rd498;
	shf.l.wrap.b32 	%r5737, %r5731, %r5732, 23;
	shf.l.wrap.b32 	%r5738, %r5732, %r5731, 23;
	mov.b64 	%rd501, {%r5738, %r5737};
	xor.b64  	%rd502, %rd500, %rd501;
	xor.b64  	%rd503, %rd1192, %rd1193;
	and.b64  	%rd504, %rd1191, %rd503;
	xor.b64  	%rd505, %rd504, %rd1193;
	add.s64 	%rd506, %rd417, %rd1178;
	ld.const.u64 	%rd507, [k_sha512+120];
	add.s64 	%rd508, %rd506, %rd507;
	add.s64 	%rd509, %rd508, %rd505;
	add.s64 	%rd510, %rd509, %rd502;
	add.s64 	%rd1190, %rd510, %rd428;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5739,%dummy}, %rd1187;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5740}, %rd1187;
	}
	shf.r.wrap.b32 	%r5741, %r5740, %r5739, 28;
	shf.r.wrap.b32 	%r5742, %r5739, %r5740, 28;
	mov.b64 	%rd511, {%r5742, %r5741};
	shf.l.wrap.b32 	%r5743, %r5739, %r5740, 30;
	shf.l.wrap.b32 	%r5744, %r5740, %r5739, 30;
	mov.b64 	%rd512, {%r5744, %r5743};
	xor.b64  	%rd513, %rd512, %rd511;
	shf.l.wrap.b32 	%r5745, %r5739, %r5740, 25;
	shf.l.wrap.b32 	%r5746, %r5740, %r5739, 25;
	mov.b64 	%rd514, {%r5746, %r5745};
	xor.b64  	%rd515, %rd513, %rd514;
	xor.b64  	%rd516, %rd1187, %rd1189;
	xor.b64  	%rd517, %rd1187, %rd1188;
	and.b64  	%rd518, %rd517, %rd516;
	xor.b64  	%rd519, %rd518, %rd1187;
	add.s64 	%rd520, %rd510, %rd519;
	add.s64 	%rd1186, %rd520, %rd515;
	mov.u32 	%r8475, 16;

BB1_90:
	shr.u64 	%rd521, %rd1179, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5747,%dummy}, %rd1179;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5748}, %rd1179;
	}
	shf.r.wrap.b32 	%r5749, %r5748, %r5747, 19;
	shf.r.wrap.b32 	%r5750, %r5747, %r5748, 19;
	mov.b64 	%rd522, {%r5750, %r5749};
	xor.b64  	%rd523, %rd522, %rd521;
	shf.l.wrap.b32 	%r5751, %r5747, %r5748, 3;
	shf.l.wrap.b32 	%r5752, %r5748, %r5747, 3;
	mov.b64 	%rd524, {%r5752, %r5751};
	xor.b64  	%rd525, %rd523, %rd524;
	shr.u64 	%rd526, %rd1195, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5753,%dummy}, %rd1195;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5754}, %rd1195;
	}
	shf.r.wrap.b32 	%r5755, %r5754, %r5753, 1;
	shf.r.wrap.b32 	%r5756, %r5753, %r5754, 1;
	mov.b64 	%rd527, {%r5756, %r5755};
	xor.b64  	%rd528, %rd527, %rd526;
	shf.r.wrap.b32 	%r5757, %r5754, %r5753, 8;
	shf.r.wrap.b32 	%r5758, %r5753, %r5754, 8;
	mov.b64 	%rd529, {%r5758, %r5757};
	xor.b64  	%rd530, %rd528, %rd529;
	add.s64 	%rd531, %rd1184, %rd1194;
	add.s64 	%rd532, %rd531, %rd525;
	add.s64 	%rd1194, %rd532, %rd530;
	shr.u64 	%rd533, %rd1178, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5759,%dummy}, %rd1178;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5760}, %rd1178;
	}
	shf.r.wrap.b32 	%r5761, %r5760, %r5759, 19;
	shf.r.wrap.b32 	%r5762, %r5759, %r5760, 19;
	mov.b64 	%rd534, {%r5762, %r5761};
	xor.b64  	%rd535, %rd534, %rd533;
	shf.l.wrap.b32 	%r5763, %r5759, %r5760, 3;
	shf.l.wrap.b32 	%r5764, %r5760, %r5759, 3;
	mov.b64 	%rd536, {%r5764, %r5763};
	xor.b64  	%rd537, %rd535, %rd536;
	shr.u64 	%rd538, %rd1196, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5765,%dummy}, %rd1196;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5766}, %rd1196;
	}
	shf.r.wrap.b32 	%r5767, %r5766, %r5765, 1;
	shf.r.wrap.b32 	%r5768, %r5765, %r5766, 1;
	mov.b64 	%rd539, {%r5768, %r5767};
	xor.b64  	%rd540, %rd539, %rd538;
	shf.r.wrap.b32 	%r5769, %r5766, %r5765, 8;
	shf.r.wrap.b32 	%r5770, %r5765, %r5766, 8;
	mov.b64 	%rd541, {%r5770, %r5769};
	xor.b64  	%rd542, %rd540, %rd541;
	add.s64 	%rd543, %rd1183, %rd1195;
	add.s64 	%rd544, %rd543, %rd537;
	add.s64 	%rd1195, %rd544, %rd542;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5771,%dummy}, %rd1194;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5772}, %rd1194;
	}
	shf.r.wrap.b32 	%r5773, %r5772, %r5771, 19;
	shf.r.wrap.b32 	%r5774, %r5771, %r5772, 19;
	mov.b64 	%rd545, {%r5774, %r5773};
	shf.l.wrap.b32 	%r5775, %r5771, %r5772, 3;
	shf.l.wrap.b32 	%r5776, %r5772, %r5771, 3;
	mov.b64 	%rd546, {%r5776, %r5775};
	shr.u64 	%rd547, %rd1194, 6;
	xor.b64  	%rd548, %rd545, %rd547;
	xor.b64  	%rd549, %rd548, %rd546;
	shr.u64 	%rd550, %rd1197, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5777,%dummy}, %rd1197;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5778}, %rd1197;
	}
	shf.r.wrap.b32 	%r5779, %r5778, %r5777, 1;
	shf.r.wrap.b32 	%r5780, %r5777, %r5778, 1;
	mov.b64 	%rd551, {%r5780, %r5779};
	xor.b64  	%rd552, %rd551, %rd550;
	shf.r.wrap.b32 	%r5781, %r5778, %r5777, 8;
	shf.r.wrap.b32 	%r5782, %r5777, %r5778, 8;
	mov.b64 	%rd553, {%r5782, %r5781};
	xor.b64  	%rd554, %rd552, %rd553;
	add.s64 	%rd555, %rd1182, %rd1196;
	add.s64 	%rd556, %rd555, %rd549;
	add.s64 	%rd1196, %rd556, %rd554;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5783,%dummy}, %rd1195;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5784}, %rd1195;
	}
	shf.r.wrap.b32 	%r5785, %r5784, %r5783, 19;
	shf.r.wrap.b32 	%r5786, %r5783, %r5784, 19;
	mov.b64 	%rd557, {%r5786, %r5785};
	shf.l.wrap.b32 	%r5787, %r5783, %r5784, 3;
	shf.l.wrap.b32 	%r5788, %r5784, %r5783, 3;
	mov.b64 	%rd558, {%r5788, %r5787};
	shr.u64 	%rd559, %rd1195, 6;
	xor.b64  	%rd560, %rd557, %rd559;
	xor.b64  	%rd561, %rd560, %rd558;
	shr.u64 	%rd562, %rd1198, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5789,%dummy}, %rd1198;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5790}, %rd1198;
	}
	shf.r.wrap.b32 	%r5791, %r5790, %r5789, 1;
	shf.r.wrap.b32 	%r5792, %r5789, %r5790, 1;
	mov.b64 	%rd563, {%r5792, %r5791};
	xor.b64  	%rd564, %rd563, %rd562;
	shf.r.wrap.b32 	%r5793, %r5790, %r5789, 8;
	shf.r.wrap.b32 	%r5794, %r5789, %r5790, 8;
	mov.b64 	%rd565, {%r5794, %r5793};
	xor.b64  	%rd566, %rd564, %rd565;
	add.s64 	%rd567, %rd1181, %rd1197;
	add.s64 	%rd568, %rd567, %rd561;
	add.s64 	%rd1197, %rd568, %rd566;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5795,%dummy}, %rd1196;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5796}, %rd1196;
	}
	shf.r.wrap.b32 	%r5797, %r5796, %r5795, 19;
	shf.r.wrap.b32 	%r5798, %r5795, %r5796, 19;
	mov.b64 	%rd569, {%r5798, %r5797};
	shf.l.wrap.b32 	%r5799, %r5795, %r5796, 3;
	shf.l.wrap.b32 	%r5800, %r5796, %r5795, 3;
	mov.b64 	%rd570, {%r5800, %r5799};
	shr.u64 	%rd571, %rd1196, 6;
	xor.b64  	%rd572, %rd569, %rd571;
	xor.b64  	%rd573, %rd572, %rd570;
	shr.u64 	%rd574, %rd1199, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5801,%dummy}, %rd1199;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5802}, %rd1199;
	}
	shf.r.wrap.b32 	%r5803, %r5802, %r5801, 1;
	shf.r.wrap.b32 	%r5804, %r5801, %r5802, 1;
	mov.b64 	%rd575, {%r5804, %r5803};
	xor.b64  	%rd576, %rd575, %rd574;
	shf.r.wrap.b32 	%r5805, %r5802, %r5801, 8;
	shf.r.wrap.b32 	%r5806, %r5801, %r5802, 8;
	mov.b64 	%rd577, {%r5806, %r5805};
	xor.b64  	%rd578, %rd576, %rd577;
	add.s64 	%rd579, %rd1180, %rd1198;
	add.s64 	%rd580, %rd579, %rd573;
	add.s64 	%rd1198, %rd580, %rd578;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5807,%dummy}, %rd1197;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5808}, %rd1197;
	}
	shf.r.wrap.b32 	%r5809, %r5808, %r5807, 19;
	shf.r.wrap.b32 	%r5810, %r5807, %r5808, 19;
	mov.b64 	%rd581, {%r5810, %r5809};
	shf.l.wrap.b32 	%r5811, %r5807, %r5808, 3;
	shf.l.wrap.b32 	%r5812, %r5808, %r5807, 3;
	mov.b64 	%rd582, {%r5812, %r5811};
	shr.u64 	%rd583, %rd1197, 6;
	xor.b64  	%rd584, %rd581, %rd583;
	xor.b64  	%rd585, %rd584, %rd582;
	shr.u64 	%rd586, %rd1200, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5813,%dummy}, %rd1200;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5814}, %rd1200;
	}
	shf.r.wrap.b32 	%r5815, %r5814, %r5813, 1;
	shf.r.wrap.b32 	%r5816, %r5813, %r5814, 1;
	mov.b64 	%rd587, {%r5816, %r5815};
	xor.b64  	%rd588, %rd587, %rd586;
	shf.r.wrap.b32 	%r5817, %r5814, %r5813, 8;
	shf.r.wrap.b32 	%r5818, %r5813, %r5814, 8;
	mov.b64 	%rd589, {%r5818, %r5817};
	xor.b64  	%rd590, %rd588, %rd589;
	add.s64 	%rd591, %rd1179, %rd1199;
	add.s64 	%rd592, %rd591, %rd585;
	add.s64 	%rd1199, %rd592, %rd590;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5819,%dummy}, %rd1198;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5820}, %rd1198;
	}
	shf.r.wrap.b32 	%r5821, %r5820, %r5819, 19;
	shf.r.wrap.b32 	%r5822, %r5819, %r5820, 19;
	mov.b64 	%rd593, {%r5822, %r5821};
	shf.l.wrap.b32 	%r5823, %r5819, %r5820, 3;
	shf.l.wrap.b32 	%r5824, %r5820, %r5819, 3;
	mov.b64 	%rd594, {%r5824, %r5823};
	shr.u64 	%rd595, %rd1198, 6;
	xor.b64  	%rd596, %rd593, %rd595;
	xor.b64  	%rd597, %rd596, %rd594;
	shr.u64 	%rd598, %rd1201, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5825,%dummy}, %rd1201;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5826}, %rd1201;
	}
	shf.r.wrap.b32 	%r5827, %r5826, %r5825, 1;
	shf.r.wrap.b32 	%r5828, %r5825, %r5826, 1;
	mov.b64 	%rd599, {%r5828, %r5827};
	xor.b64  	%rd600, %rd599, %rd598;
	shf.r.wrap.b32 	%r5829, %r5826, %r5825, 8;
	shf.r.wrap.b32 	%r5830, %r5825, %r5826, 8;
	mov.b64 	%rd601, {%r5830, %r5829};
	xor.b64  	%rd602, %rd600, %rd601;
	add.s64 	%rd603, %rd1178, %rd1200;
	add.s64 	%rd604, %rd603, %rd597;
	add.s64 	%rd1200, %rd604, %rd602;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5831,%dummy}, %rd1199;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5832}, %rd1199;
	}
	shf.r.wrap.b32 	%r5833, %r5832, %r5831, 19;
	shf.r.wrap.b32 	%r5834, %r5831, %r5832, 19;
	mov.b64 	%rd605, {%r5834, %r5833};
	shf.l.wrap.b32 	%r5835, %r5831, %r5832, 3;
	shf.l.wrap.b32 	%r5836, %r5832, %r5831, 3;
	mov.b64 	%rd606, {%r5836, %r5835};
	shr.u64 	%rd607, %rd1199, 6;
	xor.b64  	%rd608, %rd605, %rd607;
	xor.b64  	%rd609, %rd608, %rd606;
	shr.u64 	%rd610, %rd1185, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5837,%dummy}, %rd1185;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5838}, %rd1185;
	}
	shf.r.wrap.b32 	%r5839, %r5838, %r5837, 1;
	shf.r.wrap.b32 	%r5840, %r5837, %r5838, 1;
	mov.b64 	%rd611, {%r5840, %r5839};
	xor.b64  	%rd612, %rd611, %rd610;
	shf.r.wrap.b32 	%r5841, %r5838, %r5837, 8;
	shf.r.wrap.b32 	%r5842, %r5837, %r5838, 8;
	mov.b64 	%rd613, {%r5842, %r5841};
	xor.b64  	%rd614, %rd612, %rd613;
	add.s64 	%rd615, %rd1194, %rd1201;
	add.s64 	%rd616, %rd615, %rd609;
	add.s64 	%rd1201, %rd616, %rd614;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5843,%dummy}, %rd1200;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5844}, %rd1200;
	}
	shf.r.wrap.b32 	%r5845, %r5844, %r5843, 19;
	shf.r.wrap.b32 	%r5846, %r5843, %r5844, 19;
	mov.b64 	%rd617, {%r5846, %r5845};
	shf.l.wrap.b32 	%r5847, %r5843, %r5844, 3;
	shf.l.wrap.b32 	%r5848, %r5844, %r5843, 3;
	mov.b64 	%rd618, {%r5848, %r5847};
	shr.u64 	%rd619, %rd1200, 6;
	xor.b64  	%rd620, %rd617, %rd619;
	xor.b64  	%rd621, %rd620, %rd618;
	shr.u64 	%rd622, %rd1184, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5849,%dummy}, %rd1184;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5850}, %rd1184;
	}
	shf.r.wrap.b32 	%r5851, %r5850, %r5849, 1;
	shf.r.wrap.b32 	%r5852, %r5849, %r5850, 1;
	mov.b64 	%rd623, {%r5852, %r5851};
	xor.b64  	%rd624, %rd623, %rd622;
	shf.r.wrap.b32 	%r5853, %r5850, %r5849, 8;
	shf.r.wrap.b32 	%r5854, %r5849, %r5850, 8;
	mov.b64 	%rd625, {%r5854, %r5853};
	xor.b64  	%rd626, %rd624, %rd625;
	add.s64 	%rd627, %rd1195, %rd1185;
	add.s64 	%rd628, %rd627, %rd621;
	add.s64 	%rd1185, %rd628, %rd626;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5855,%dummy}, %rd1201;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5856}, %rd1201;
	}
	shf.r.wrap.b32 	%r5857, %r5856, %r5855, 19;
	shf.r.wrap.b32 	%r5858, %r5855, %r5856, 19;
	mov.b64 	%rd629, {%r5858, %r5857};
	shf.l.wrap.b32 	%r5859, %r5855, %r5856, 3;
	shf.l.wrap.b32 	%r5860, %r5856, %r5855, 3;
	mov.b64 	%rd630, {%r5860, %r5859};
	shr.u64 	%rd631, %rd1201, 6;
	xor.b64  	%rd632, %rd629, %rd631;
	xor.b64  	%rd633, %rd632, %rd630;
	shr.u64 	%rd634, %rd1183, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5861,%dummy}, %rd1183;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5862}, %rd1183;
	}
	shf.r.wrap.b32 	%r5863, %r5862, %r5861, 1;
	shf.r.wrap.b32 	%r5864, %r5861, %r5862, 1;
	mov.b64 	%rd635, {%r5864, %r5863};
	xor.b64  	%rd636, %rd635, %rd634;
	shf.r.wrap.b32 	%r5865, %r5862, %r5861, 8;
	shf.r.wrap.b32 	%r5866, %r5861, %r5862, 8;
	mov.b64 	%rd637, {%r5866, %r5865};
	xor.b64  	%rd638, %rd636, %rd637;
	add.s64 	%rd639, %rd1196, %rd1184;
	add.s64 	%rd640, %rd639, %rd633;
	add.s64 	%rd1184, %rd640, %rd638;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5867,%dummy}, %rd1185;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5868}, %rd1185;
	}
	shf.r.wrap.b32 	%r5869, %r5868, %r5867, 19;
	shf.r.wrap.b32 	%r5870, %r5867, %r5868, 19;
	mov.b64 	%rd641, {%r5870, %r5869};
	shf.l.wrap.b32 	%r5871, %r5867, %r5868, 3;
	shf.l.wrap.b32 	%r5872, %r5868, %r5867, 3;
	mov.b64 	%rd642, {%r5872, %r5871};
	shr.u64 	%rd643, %rd1185, 6;
	xor.b64  	%rd644, %rd641, %rd643;
	xor.b64  	%rd645, %rd644, %rd642;
	shr.u64 	%rd646, %rd1182, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5873,%dummy}, %rd1182;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5874}, %rd1182;
	}
	shf.r.wrap.b32 	%r5875, %r5874, %r5873, 1;
	shf.r.wrap.b32 	%r5876, %r5873, %r5874, 1;
	mov.b64 	%rd647, {%r5876, %r5875};
	xor.b64  	%rd648, %rd647, %rd646;
	shf.r.wrap.b32 	%r5877, %r5874, %r5873, 8;
	shf.r.wrap.b32 	%r5878, %r5873, %r5874, 8;
	mov.b64 	%rd649, {%r5878, %r5877};
	xor.b64  	%rd650, %rd648, %rd649;
	add.s64 	%rd651, %rd1197, %rd1183;
	add.s64 	%rd652, %rd651, %rd645;
	add.s64 	%rd1183, %rd652, %rd650;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5879,%dummy}, %rd1184;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5880}, %rd1184;
	}
	shf.r.wrap.b32 	%r5881, %r5880, %r5879, 19;
	shf.r.wrap.b32 	%r5882, %r5879, %r5880, 19;
	mov.b64 	%rd653, {%r5882, %r5881};
	shf.l.wrap.b32 	%r5883, %r5879, %r5880, 3;
	shf.l.wrap.b32 	%r5884, %r5880, %r5879, 3;
	mov.b64 	%rd654, {%r5884, %r5883};
	shr.u64 	%rd655, %rd1184, 6;
	xor.b64  	%rd656, %rd653, %rd655;
	xor.b64  	%rd657, %rd656, %rd654;
	shr.u64 	%rd658, %rd1181, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5885,%dummy}, %rd1181;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5886}, %rd1181;
	}
	shf.r.wrap.b32 	%r5887, %r5886, %r5885, 1;
	shf.r.wrap.b32 	%r5888, %r5885, %r5886, 1;
	mov.b64 	%rd659, {%r5888, %r5887};
	xor.b64  	%rd660, %rd659, %rd658;
	shf.r.wrap.b32 	%r5889, %r5886, %r5885, 8;
	shf.r.wrap.b32 	%r5890, %r5885, %r5886, 8;
	mov.b64 	%rd661, {%r5890, %r5889};
	xor.b64  	%rd662, %rd660, %rd661;
	add.s64 	%rd663, %rd1198, %rd1182;
	add.s64 	%rd664, %rd663, %rd657;
	add.s64 	%rd1182, %rd664, %rd662;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5891,%dummy}, %rd1183;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5892}, %rd1183;
	}
	shf.r.wrap.b32 	%r5893, %r5892, %r5891, 19;
	shf.r.wrap.b32 	%r5894, %r5891, %r5892, 19;
	mov.b64 	%rd665, {%r5894, %r5893};
	shf.l.wrap.b32 	%r5895, %r5891, %r5892, 3;
	shf.l.wrap.b32 	%r5896, %r5892, %r5891, 3;
	mov.b64 	%rd666, {%r5896, %r5895};
	shr.u64 	%rd667, %rd1183, 6;
	xor.b64  	%rd668, %rd665, %rd667;
	xor.b64  	%rd669, %rd668, %rd666;
	shr.u64 	%rd670, %rd1180, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5897,%dummy}, %rd1180;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5898}, %rd1180;
	}
	shf.r.wrap.b32 	%r5899, %r5898, %r5897, 1;
	shf.r.wrap.b32 	%r5900, %r5897, %r5898, 1;
	mov.b64 	%rd671, {%r5900, %r5899};
	xor.b64  	%rd672, %rd671, %rd670;
	shf.r.wrap.b32 	%r5901, %r5898, %r5897, 8;
	shf.r.wrap.b32 	%r5902, %r5897, %r5898, 8;
	mov.b64 	%rd673, {%r5902, %r5901};
	xor.b64  	%rd674, %rd672, %rd673;
	add.s64 	%rd675, %rd1199, %rd1181;
	add.s64 	%rd676, %rd675, %rd669;
	add.s64 	%rd1181, %rd676, %rd674;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5903,%dummy}, %rd1182;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5904}, %rd1182;
	}
	shf.r.wrap.b32 	%r5905, %r5904, %r5903, 19;
	shf.r.wrap.b32 	%r5906, %r5903, %r5904, 19;
	mov.b64 	%rd677, {%r5906, %r5905};
	shf.l.wrap.b32 	%r5907, %r5903, %r5904, 3;
	shf.l.wrap.b32 	%r5908, %r5904, %r5903, 3;
	mov.b64 	%rd678, {%r5908, %r5907};
	shr.u64 	%rd679, %rd1182, 6;
	xor.b64  	%rd680, %rd677, %rd679;
	xor.b64  	%rd681, %rd680, %rd678;
	shr.u64 	%rd682, %rd1179, 7;
	shf.r.wrap.b32 	%r5909, %r5748, %r5747, 1;
	shf.r.wrap.b32 	%r5910, %r5747, %r5748, 1;
	mov.b64 	%rd683, {%r5910, %r5909};
	xor.b64  	%rd684, %rd683, %rd682;
	shf.r.wrap.b32 	%r5911, %r5748, %r5747, 8;
	shf.r.wrap.b32 	%r5912, %r5747, %r5748, 8;
	mov.b64 	%rd685, {%r5912, %r5911};
	xor.b64  	%rd686, %rd684, %rd685;
	add.s64 	%rd687, %rd1200, %rd1180;
	add.s64 	%rd688, %rd687, %rd681;
	add.s64 	%rd1180, %rd688, %rd686;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5913,%dummy}, %rd1181;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5914}, %rd1181;
	}
	shf.r.wrap.b32 	%r5915, %r5914, %r5913, 19;
	shf.r.wrap.b32 	%r5916, %r5913, %r5914, 19;
	mov.b64 	%rd689, {%r5916, %r5915};
	shf.l.wrap.b32 	%r5917, %r5913, %r5914, 3;
	shf.l.wrap.b32 	%r5918, %r5914, %r5913, 3;
	mov.b64 	%rd690, {%r5918, %r5917};
	shr.u64 	%rd691, %rd1181, 6;
	xor.b64  	%rd692, %rd689, %rd691;
	xor.b64  	%rd693, %rd692, %rd690;
	shr.u64 	%rd694, %rd1178, 7;
	shf.r.wrap.b32 	%r5919, %r5760, %r5759, 1;
	shf.r.wrap.b32 	%r5920, %r5759, %r5760, 1;
	mov.b64 	%rd695, {%r5920, %r5919};
	xor.b64  	%rd696, %rd695, %rd694;
	shf.r.wrap.b32 	%r5921, %r5760, %r5759, 8;
	shf.r.wrap.b32 	%r5922, %r5759, %r5760, 8;
	mov.b64 	%rd697, {%r5922, %r5921};
	xor.b64  	%rd698, %rd696, %rd697;
	add.s64 	%rd699, %rd1201, %rd1179;
	add.s64 	%rd700, %rd699, %rd693;
	add.s64 	%rd1179, %rd700, %rd698;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5923,%dummy}, %rd1180;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5924}, %rd1180;
	}
	shf.r.wrap.b32 	%r5925, %r5924, %r5923, 19;
	shf.r.wrap.b32 	%r5926, %r5923, %r5924, 19;
	mov.b64 	%rd701, {%r5926, %r5925};
	shf.l.wrap.b32 	%r5927, %r5923, %r5924, 3;
	shf.l.wrap.b32 	%r5928, %r5924, %r5923, 3;
	mov.b64 	%rd702, {%r5928, %r5927};
	shr.u64 	%rd703, %rd1180, 6;
	xor.b64  	%rd704, %rd701, %rd703;
	xor.b64  	%rd705, %rd704, %rd702;
	shf.r.wrap.b32 	%r5929, %r5772, %r5771, 1;
	shf.r.wrap.b32 	%r5930, %r5771, %r5772, 1;
	mov.b64 	%rd706, {%r5930, %r5929};
	shf.r.wrap.b32 	%r5931, %r5772, %r5771, 8;
	shf.r.wrap.b32 	%r5932, %r5771, %r5772, 8;
	mov.b64 	%rd707, {%r5932, %r5931};
	shr.u64 	%rd708, %rd1194, 7;
	xor.b64  	%rd709, %rd706, %rd708;
	xor.b64  	%rd710, %rd709, %rd707;
	add.s64 	%rd711, %rd1185, %rd1178;
	add.s64 	%rd712, %rd711, %rd705;
	add.s64 	%rd1178, %rd712, %rd710;
	mul.wide.s32 	%rd713, %r8475, 8;
	mov.u64 	%rd714, k_sha512;
	add.s64 	%rd715, %rd714, %rd713;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5933,%dummy}, %rd1190;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5934}, %rd1190;
	}
	shf.r.wrap.b32 	%r5935, %r5934, %r5933, 18;
	shf.r.wrap.b32 	%r5936, %r5933, %r5934, 18;
	mov.b64 	%rd716, {%r5936, %r5935};
	shf.r.wrap.b32 	%r5937, %r5934, %r5933, 14;
	shf.r.wrap.b32 	%r5938, %r5933, %r5934, 14;
	mov.b64 	%rd717, {%r5938, %r5937};
	xor.b64  	%rd718, %rd716, %rd717;
	shf.l.wrap.b32 	%r5939, %r5933, %r5934, 23;
	shf.l.wrap.b32 	%r5940, %r5934, %r5933, 23;
	mov.b64 	%rd719, {%r5940, %r5939};
	xor.b64  	%rd720, %rd718, %rd719;
	xor.b64  	%rd721, %rd1191, %rd1192;
	and.b64  	%rd722, %rd721, %rd1190;
	xor.b64  	%rd723, %rd722, %rd1192;
	add.s64 	%rd724, %rd723, %rd1193;
	add.s64 	%rd725, %rd724, %rd1194;
	ld.const.u64 	%rd726, [%rd715];
	add.s64 	%rd727, %rd725, %rd726;
	add.s64 	%rd728, %rd727, %rd720;
	add.s64 	%rd729, %rd728, %rd1189;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5941}, %rd1186;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5942,%dummy}, %rd1186;
	}
	shf.l.wrap.b32 	%r5943, %r5942, %r5941, 30;
	shf.l.wrap.b32 	%r5944, %r5941, %r5942, 30;
	mov.b64 	%rd730, {%r5944, %r5943};
	shf.r.wrap.b32 	%r5945, %r5941, %r5942, 28;
	shf.r.wrap.b32 	%r5946, %r5942, %r5941, 28;
	mov.b64 	%rd731, {%r5946, %r5945};
	xor.b64  	%rd732, %rd730, %rd731;
	shf.l.wrap.b32 	%r5947, %r5942, %r5941, 25;
	shf.l.wrap.b32 	%r5948, %r5941, %r5942, 25;
	mov.b64 	%rd733, {%r5948, %r5947};
	xor.b64  	%rd734, %rd732, %rd733;
	xor.b64  	%rd735, %rd1186, %rd1187;
	xor.b64  	%rd736, %rd1186, %rd1188;
	and.b64  	%rd737, %rd735, %rd736;
	xor.b64  	%rd738, %rd737, %rd1186;
	add.s64 	%rd739, %rd728, %rd738;
	add.s64 	%rd740, %rd739, %rd734;
	add.s32 	%r5949, %r8475, 1;
	mul.wide.s32 	%rd741, %r5949, 8;
	add.s64 	%rd742, %rd714, %rd741;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5950,%dummy}, %rd729;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5951}, %rd729;
	}
	shf.r.wrap.b32 	%r5952, %r5951, %r5950, 14;
	shf.r.wrap.b32 	%r5953, %r5950, %r5951, 14;
	mov.b64 	%rd743, {%r5953, %r5952};
	shf.r.wrap.b32 	%r5954, %r5951, %r5950, 18;
	shf.r.wrap.b32 	%r5955, %r5950, %r5951, 18;
	mov.b64 	%rd744, {%r5955, %r5954};
	xor.b64  	%rd745, %rd744, %rd743;
	shf.l.wrap.b32 	%r5956, %r5950, %r5951, 23;
	shf.l.wrap.b32 	%r5957, %r5951, %r5950, 23;
	mov.b64 	%rd746, {%r5957, %r5956};
	xor.b64  	%rd747, %rd745, %rd746;
	xor.b64  	%rd748, %rd1190, %rd1191;
	and.b64  	%rd749, %rd729, %rd748;
	xor.b64  	%rd750, %rd749, %rd1191;
	add.s64 	%rd751, %rd1195, %rd1192;
	ld.const.u64 	%rd752, [%rd742];
	add.s64 	%rd753, %rd751, %rd752;
	add.s64 	%rd754, %rd753, %rd750;
	add.s64 	%rd755, %rd754, %rd747;
	add.s64 	%rd756, %rd755, %rd1188;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5958,%dummy}, %rd740;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5959}, %rd740;
	}
	shf.r.wrap.b32 	%r5960, %r5959, %r5958, 28;
	shf.r.wrap.b32 	%r5961, %r5958, %r5959, 28;
	mov.b64 	%rd757, {%r5961, %r5960};
	shf.l.wrap.b32 	%r5962, %r5958, %r5959, 30;
	shf.l.wrap.b32 	%r5963, %r5959, %r5958, 30;
	mov.b64 	%rd758, {%r5963, %r5962};
	xor.b64  	%rd759, %rd758, %rd757;
	shf.l.wrap.b32 	%r5964, %r5958, %r5959, 25;
	shf.l.wrap.b32 	%r5965, %r5959, %r5958, 25;
	mov.b64 	%rd760, {%r5965, %r5964};
	xor.b64  	%rd761, %rd759, %rd760;
	xor.b64  	%rd762, %rd740, %rd1187;
	xor.b64  	%rd763, %rd740, %rd1186;
	and.b64  	%rd764, %rd763, %rd762;
	xor.b64  	%rd765, %rd764, %rd740;
	add.s64 	%rd766, %rd755, %rd765;
	add.s64 	%rd767, %rd766, %rd761;
	add.s32 	%r5966, %r8475, 2;
	mul.wide.s32 	%rd768, %r5966, 8;
	add.s64 	%rd769, %rd714, %rd768;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5967,%dummy}, %rd756;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5968}, %rd756;
	}
	shf.r.wrap.b32 	%r5969, %r5968, %r5967, 14;
	shf.r.wrap.b32 	%r5970, %r5967, %r5968, 14;
	mov.b64 	%rd770, {%r5970, %r5969};
	shf.r.wrap.b32 	%r5971, %r5968, %r5967, 18;
	shf.r.wrap.b32 	%r5972, %r5967, %r5968, 18;
	mov.b64 	%rd771, {%r5972, %r5971};
	xor.b64  	%rd772, %rd771, %rd770;
	shf.l.wrap.b32 	%r5973, %r5967, %r5968, 23;
	shf.l.wrap.b32 	%r5974, %r5968, %r5967, 23;
	mov.b64 	%rd773, {%r5974, %r5973};
	xor.b64  	%rd774, %rd772, %rd773;
	xor.b64  	%rd775, %rd729, %rd1190;
	and.b64  	%rd776, %rd756, %rd775;
	xor.b64  	%rd777, %rd776, %rd1190;
	add.s64 	%rd778, %rd1196, %rd1191;
	ld.const.u64 	%rd779, [%rd769];
	add.s64 	%rd780, %rd778, %rd779;
	add.s64 	%rd781, %rd780, %rd777;
	add.s64 	%rd782, %rd781, %rd774;
	add.s64 	%rd783, %rd782, %rd1187;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5975,%dummy}, %rd767;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5976}, %rd767;
	}
	shf.r.wrap.b32 	%r5977, %r5976, %r5975, 28;
	shf.r.wrap.b32 	%r5978, %r5975, %r5976, 28;
	mov.b64 	%rd784, {%r5978, %r5977};
	shf.l.wrap.b32 	%r5979, %r5975, %r5976, 30;
	shf.l.wrap.b32 	%r5980, %r5976, %r5975, 30;
	mov.b64 	%rd785, {%r5980, %r5979};
	xor.b64  	%rd786, %rd785, %rd784;
	shf.l.wrap.b32 	%r5981, %r5975, %r5976, 25;
	shf.l.wrap.b32 	%r5982, %r5976, %r5975, 25;
	mov.b64 	%rd787, {%r5982, %r5981};
	xor.b64  	%rd788, %rd786, %rd787;
	xor.b64  	%rd789, %rd767, %rd1186;
	xor.b64  	%rd790, %rd767, %rd740;
	and.b64  	%rd791, %rd790, %rd789;
	xor.b64  	%rd792, %rd791, %rd767;
	add.s64 	%rd793, %rd782, %rd792;
	add.s64 	%rd794, %rd793, %rd788;
	add.s32 	%r5983, %r8475, 3;
	mul.wide.s32 	%rd795, %r5983, 8;
	add.s64 	%rd796, %rd714, %rd795;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5984,%dummy}, %rd783;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5985}, %rd783;
	}
	shf.r.wrap.b32 	%r5986, %r5985, %r5984, 14;
	shf.r.wrap.b32 	%r5987, %r5984, %r5985, 14;
	mov.b64 	%rd797, {%r5987, %r5986};
	shf.r.wrap.b32 	%r5988, %r5985, %r5984, 18;
	shf.r.wrap.b32 	%r5989, %r5984, %r5985, 18;
	mov.b64 	%rd798, {%r5989, %r5988};
	xor.b64  	%rd799, %rd798, %rd797;
	shf.l.wrap.b32 	%r5990, %r5984, %r5985, 23;
	shf.l.wrap.b32 	%r5991, %r5985, %r5984, 23;
	mov.b64 	%rd800, {%r5991, %r5990};
	xor.b64  	%rd801, %rd799, %rd800;
	xor.b64  	%rd802, %rd756, %rd729;
	and.b64  	%rd803, %rd783, %rd802;
	xor.b64  	%rd804, %rd803, %rd729;
	add.s64 	%rd805, %rd1197, %rd1190;
	ld.const.u64 	%rd806, [%rd796];
	add.s64 	%rd807, %rd805, %rd806;
	add.s64 	%rd808, %rd807, %rd804;
	add.s64 	%rd809, %rd808, %rd801;
	add.s64 	%rd810, %rd809, %rd1186;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5992,%dummy}, %rd794;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5993}, %rd794;
	}
	shf.r.wrap.b32 	%r5994, %r5993, %r5992, 28;
	shf.r.wrap.b32 	%r5995, %r5992, %r5993, 28;
	mov.b64 	%rd811, {%r5995, %r5994};
	shf.l.wrap.b32 	%r5996, %r5992, %r5993, 30;
	shf.l.wrap.b32 	%r5997, %r5993, %r5992, 30;
	mov.b64 	%rd812, {%r5997, %r5996};
	xor.b64  	%rd813, %rd812, %rd811;
	shf.l.wrap.b32 	%r5998, %r5992, %r5993, 25;
	shf.l.wrap.b32 	%r5999, %r5993, %r5992, 25;
	mov.b64 	%rd814, {%r5999, %r5998};
	xor.b64  	%rd815, %rd813, %rd814;
	xor.b64  	%rd816, %rd794, %rd740;
	xor.b64  	%rd817, %rd794, %rd767;
	and.b64  	%rd818, %rd817, %rd816;
	xor.b64  	%rd819, %rd818, %rd794;
	add.s64 	%rd820, %rd809, %rd819;
	add.s64 	%rd821, %rd820, %rd815;
	add.s32 	%r6000, %r8475, 4;
	mul.wide.s32 	%rd822, %r6000, 8;
	add.s64 	%rd823, %rd714, %rd822;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6001,%dummy}, %rd810;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6002}, %rd810;
	}
	shf.r.wrap.b32 	%r6003, %r6002, %r6001, 14;
	shf.r.wrap.b32 	%r6004, %r6001, %r6002, 14;
	mov.b64 	%rd824, {%r6004, %r6003};
	shf.r.wrap.b32 	%r6005, %r6002, %r6001, 18;
	shf.r.wrap.b32 	%r6006, %r6001, %r6002, 18;
	mov.b64 	%rd825, {%r6006, %r6005};
	xor.b64  	%rd826, %rd825, %rd824;
	shf.l.wrap.b32 	%r6007, %r6001, %r6002, 23;
	shf.l.wrap.b32 	%r6008, %r6002, %r6001, 23;
	mov.b64 	%rd827, {%r6008, %r6007};
	xor.b64  	%rd828, %rd826, %rd827;
	xor.b64  	%rd829, %rd783, %rd756;
	and.b64  	%rd830, %rd810, %rd829;
	xor.b64  	%rd831, %rd830, %rd756;
	add.s64 	%rd832, %rd729, %rd1198;
	ld.const.u64 	%rd833, [%rd823];
	add.s64 	%rd834, %rd832, %rd833;
	add.s64 	%rd835, %rd834, %rd831;
	add.s64 	%rd836, %rd835, %rd828;
	add.s64 	%rd837, %rd836, %rd740;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6009,%dummy}, %rd821;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6010}, %rd821;
	}
	shf.r.wrap.b32 	%r6011, %r6010, %r6009, 28;
	shf.r.wrap.b32 	%r6012, %r6009, %r6010, 28;
	mov.b64 	%rd838, {%r6012, %r6011};
	shf.l.wrap.b32 	%r6013, %r6009, %r6010, 30;
	shf.l.wrap.b32 	%r6014, %r6010, %r6009, 30;
	mov.b64 	%rd839, {%r6014, %r6013};
	xor.b64  	%rd840, %rd839, %rd838;
	shf.l.wrap.b32 	%r6015, %r6009, %r6010, 25;
	shf.l.wrap.b32 	%r6016, %r6010, %r6009, 25;
	mov.b64 	%rd841, {%r6016, %r6015};
	xor.b64  	%rd842, %rd840, %rd841;
	xor.b64  	%rd843, %rd821, %rd767;
	xor.b64  	%rd844, %rd821, %rd794;
	and.b64  	%rd845, %rd844, %rd843;
	xor.b64  	%rd846, %rd845, %rd821;
	add.s64 	%rd847, %rd836, %rd846;
	add.s64 	%rd848, %rd847, %rd842;
	add.s32 	%r6017, %r8475, 5;
	mul.wide.s32 	%rd849, %r6017, 8;
	add.s64 	%rd850, %rd714, %rd849;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6018,%dummy}, %rd837;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6019}, %rd837;
	}
	shf.r.wrap.b32 	%r6020, %r6019, %r6018, 14;
	shf.r.wrap.b32 	%r6021, %r6018, %r6019, 14;
	mov.b64 	%rd851, {%r6021, %r6020};
	shf.r.wrap.b32 	%r6022, %r6019, %r6018, 18;
	shf.r.wrap.b32 	%r6023, %r6018, %r6019, 18;
	mov.b64 	%rd852, {%r6023, %r6022};
	xor.b64  	%rd853, %rd852, %rd851;
	shf.l.wrap.b32 	%r6024, %r6018, %r6019, 23;
	shf.l.wrap.b32 	%r6025, %r6019, %r6018, 23;
	mov.b64 	%rd854, {%r6025, %r6024};
	xor.b64  	%rd855, %rd853, %rd854;
	xor.b64  	%rd856, %rd810, %rd783;
	and.b64  	%rd857, %rd837, %rd856;
	xor.b64  	%rd858, %rd857, %rd783;
	add.s64 	%rd859, %rd756, %rd1199;
	ld.const.u64 	%rd860, [%rd850];
	add.s64 	%rd861, %rd859, %rd860;
	add.s64 	%rd862, %rd861, %rd858;
	add.s64 	%rd863, %rd862, %rd855;
	add.s64 	%rd864, %rd863, %rd767;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6026,%dummy}, %rd848;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6027}, %rd848;
	}
	shf.r.wrap.b32 	%r6028, %r6027, %r6026, 28;
	shf.r.wrap.b32 	%r6029, %r6026, %r6027, 28;
	mov.b64 	%rd865, {%r6029, %r6028};
	shf.l.wrap.b32 	%r6030, %r6026, %r6027, 30;
	shf.l.wrap.b32 	%r6031, %r6027, %r6026, 30;
	mov.b64 	%rd866, {%r6031, %r6030};
	xor.b64  	%rd867, %rd866, %rd865;
	shf.l.wrap.b32 	%r6032, %r6026, %r6027, 25;
	shf.l.wrap.b32 	%r6033, %r6027, %r6026, 25;
	mov.b64 	%rd868, {%r6033, %r6032};
	xor.b64  	%rd869, %rd867, %rd868;
	xor.b64  	%rd870, %rd848, %rd794;
	xor.b64  	%rd871, %rd848, %rd821;
	and.b64  	%rd872, %rd871, %rd870;
	xor.b64  	%rd873, %rd872, %rd848;
	add.s64 	%rd874, %rd863, %rd873;
	add.s64 	%rd875, %rd874, %rd869;
	add.s32 	%r6034, %r8475, 6;
	mul.wide.s32 	%rd876, %r6034, 8;
	add.s64 	%rd877, %rd714, %rd876;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6035,%dummy}, %rd864;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6036}, %rd864;
	}
	shf.r.wrap.b32 	%r6037, %r6036, %r6035, 14;
	shf.r.wrap.b32 	%r6038, %r6035, %r6036, 14;
	mov.b64 	%rd878, {%r6038, %r6037};
	shf.r.wrap.b32 	%r6039, %r6036, %r6035, 18;
	shf.r.wrap.b32 	%r6040, %r6035, %r6036, 18;
	mov.b64 	%rd879, {%r6040, %r6039};
	xor.b64  	%rd880, %rd879, %rd878;
	shf.l.wrap.b32 	%r6041, %r6035, %r6036, 23;
	shf.l.wrap.b32 	%r6042, %r6036, %r6035, 23;
	mov.b64 	%rd881, {%r6042, %r6041};
	xor.b64  	%rd882, %rd880, %rd881;
	xor.b64  	%rd883, %rd837, %rd810;
	and.b64  	%rd884, %rd864, %rd883;
	xor.b64  	%rd885, %rd884, %rd810;
	add.s64 	%rd886, %rd783, %rd1200;
	ld.const.u64 	%rd887, [%rd877];
	add.s64 	%rd888, %rd886, %rd887;
	add.s64 	%rd889, %rd888, %rd885;
	add.s64 	%rd890, %rd889, %rd882;
	add.s64 	%rd891, %rd890, %rd794;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6043,%dummy}, %rd875;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6044}, %rd875;
	}
	shf.r.wrap.b32 	%r6045, %r6044, %r6043, 28;
	shf.r.wrap.b32 	%r6046, %r6043, %r6044, 28;
	mov.b64 	%rd892, {%r6046, %r6045};
	shf.l.wrap.b32 	%r6047, %r6043, %r6044, 30;
	shf.l.wrap.b32 	%r6048, %r6044, %r6043, 30;
	mov.b64 	%rd893, {%r6048, %r6047};
	xor.b64  	%rd894, %rd893, %rd892;
	shf.l.wrap.b32 	%r6049, %r6043, %r6044, 25;
	shf.l.wrap.b32 	%r6050, %r6044, %r6043, 25;
	mov.b64 	%rd895, {%r6050, %r6049};
	xor.b64  	%rd896, %rd894, %rd895;
	xor.b64  	%rd897, %rd875, %rd821;
	xor.b64  	%rd898, %rd875, %rd848;
	and.b64  	%rd899, %rd898, %rd897;
	xor.b64  	%rd900, %rd899, %rd875;
	add.s64 	%rd901, %rd890, %rd900;
	add.s64 	%rd902, %rd901, %rd896;
	add.s32 	%r6051, %r8475, 7;
	mul.wide.s32 	%rd903, %r6051, 8;
	add.s64 	%rd904, %rd714, %rd903;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6052,%dummy}, %rd891;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6053}, %rd891;
	}
	shf.r.wrap.b32 	%r6054, %r6053, %r6052, 14;
	shf.r.wrap.b32 	%r6055, %r6052, %r6053, 14;
	mov.b64 	%rd905, {%r6055, %r6054};
	shf.r.wrap.b32 	%r6056, %r6053, %r6052, 18;
	shf.r.wrap.b32 	%r6057, %r6052, %r6053, 18;
	mov.b64 	%rd906, {%r6057, %r6056};
	xor.b64  	%rd907, %rd906, %rd905;
	shf.l.wrap.b32 	%r6058, %r6052, %r6053, 23;
	shf.l.wrap.b32 	%r6059, %r6053, %r6052, 23;
	mov.b64 	%rd908, {%r6059, %r6058};
	xor.b64  	%rd909, %rd907, %rd908;
	xor.b64  	%rd910, %rd864, %rd837;
	and.b64  	%rd911, %rd891, %rd910;
	xor.b64  	%rd912, %rd911, %rd837;
	add.s64 	%rd913, %rd810, %rd1201;
	ld.const.u64 	%rd914, [%rd904];
	add.s64 	%rd915, %rd913, %rd914;
	add.s64 	%rd916, %rd915, %rd912;
	add.s64 	%rd917, %rd916, %rd909;
	add.s64 	%rd918, %rd917, %rd821;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6060,%dummy}, %rd902;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6061}, %rd902;
	}
	shf.r.wrap.b32 	%r6062, %r6061, %r6060, 28;
	shf.r.wrap.b32 	%r6063, %r6060, %r6061, 28;
	mov.b64 	%rd919, {%r6063, %r6062};
	shf.l.wrap.b32 	%r6064, %r6060, %r6061, 30;
	shf.l.wrap.b32 	%r6065, %r6061, %r6060, 30;
	mov.b64 	%rd920, {%r6065, %r6064};
	xor.b64  	%rd921, %rd920, %rd919;
	shf.l.wrap.b32 	%r6066, %r6060, %r6061, 25;
	shf.l.wrap.b32 	%r6067, %r6061, %r6060, 25;
	mov.b64 	%rd922, {%r6067, %r6066};
	xor.b64  	%rd923, %rd921, %rd922;
	xor.b64  	%rd924, %rd902, %rd848;
	xor.b64  	%rd925, %rd902, %rd875;
	and.b64  	%rd926, %rd925, %rd924;
	xor.b64  	%rd927, %rd926, %rd902;
	add.s64 	%rd928, %rd917, %rd927;
	add.s64 	%rd929, %rd928, %rd923;
	add.s32 	%r6068, %r8475, 8;
	mul.wide.s32 	%rd930, %r6068, 8;
	add.s64 	%rd931, %rd714, %rd930;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6069,%dummy}, %rd918;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6070}, %rd918;
	}
	shf.r.wrap.b32 	%r6071, %r6070, %r6069, 14;
	shf.r.wrap.b32 	%r6072, %r6069, %r6070, 14;
	mov.b64 	%rd932, {%r6072, %r6071};
	shf.r.wrap.b32 	%r6073, %r6070, %r6069, 18;
	shf.r.wrap.b32 	%r6074, %r6069, %r6070, 18;
	mov.b64 	%rd933, {%r6074, %r6073};
	xor.b64  	%rd934, %rd933, %rd932;
	shf.l.wrap.b32 	%r6075, %r6069, %r6070, 23;
	shf.l.wrap.b32 	%r6076, %r6070, %r6069, 23;
	mov.b64 	%rd935, {%r6076, %r6075};
	xor.b64  	%rd936, %rd934, %rd935;
	xor.b64  	%rd937, %rd891, %rd864;
	and.b64  	%rd938, %rd918, %rd937;
	xor.b64  	%rd939, %rd938, %rd864;
	add.s64 	%rd940, %rd837, %rd1185;
	ld.const.u64 	%rd941, [%rd931];
	add.s64 	%rd942, %rd940, %rd941;
	add.s64 	%rd943, %rd942, %rd939;
	add.s64 	%rd944, %rd943, %rd936;
	add.s64 	%rd945, %rd944, %rd848;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6077,%dummy}, %rd929;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6078}, %rd929;
	}
	shf.r.wrap.b32 	%r6079, %r6078, %r6077, 28;
	shf.r.wrap.b32 	%r6080, %r6077, %r6078, 28;
	mov.b64 	%rd946, {%r6080, %r6079};
	shf.l.wrap.b32 	%r6081, %r6077, %r6078, 30;
	shf.l.wrap.b32 	%r6082, %r6078, %r6077, 30;
	mov.b64 	%rd947, {%r6082, %r6081};
	xor.b64  	%rd948, %rd947, %rd946;
	shf.l.wrap.b32 	%r6083, %r6077, %r6078, 25;
	shf.l.wrap.b32 	%r6084, %r6078, %r6077, 25;
	mov.b64 	%rd949, {%r6084, %r6083};
	xor.b64  	%rd950, %rd948, %rd949;
	xor.b64  	%rd951, %rd929, %rd875;
	xor.b64  	%rd952, %rd929, %rd902;
	and.b64  	%rd953, %rd952, %rd951;
	xor.b64  	%rd954, %rd953, %rd929;
	add.s64 	%rd955, %rd944, %rd954;
	add.s64 	%rd956, %rd955, %rd950;
	add.s32 	%r6085, %r8475, 9;
	mul.wide.s32 	%rd957, %r6085, 8;
	add.s64 	%rd958, %rd714, %rd957;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6086,%dummy}, %rd945;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6087}, %rd945;
	}
	shf.r.wrap.b32 	%r6088, %r6087, %r6086, 14;
	shf.r.wrap.b32 	%r6089, %r6086, %r6087, 14;
	mov.b64 	%rd959, {%r6089, %r6088};
	shf.r.wrap.b32 	%r6090, %r6087, %r6086, 18;
	shf.r.wrap.b32 	%r6091, %r6086, %r6087, 18;
	mov.b64 	%rd960, {%r6091, %r6090};
	xor.b64  	%rd961, %rd960, %rd959;
	shf.l.wrap.b32 	%r6092, %r6086, %r6087, 23;
	shf.l.wrap.b32 	%r6093, %r6087, %r6086, 23;
	mov.b64 	%rd962, {%r6093, %r6092};
	xor.b64  	%rd963, %rd961, %rd962;
	xor.b64  	%rd964, %rd918, %rd891;
	and.b64  	%rd965, %rd945, %rd964;
	xor.b64  	%rd966, %rd965, %rd891;
	add.s64 	%rd967, %rd864, %rd1184;
	ld.const.u64 	%rd968, [%rd958];
	add.s64 	%rd969, %rd967, %rd968;
	add.s64 	%rd970, %rd969, %rd966;
	add.s64 	%rd971, %rd970, %rd963;
	add.s64 	%rd972, %rd971, %rd875;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6094,%dummy}, %rd956;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6095}, %rd956;
	}
	shf.r.wrap.b32 	%r6096, %r6095, %r6094, 28;
	shf.r.wrap.b32 	%r6097, %r6094, %r6095, 28;
	mov.b64 	%rd973, {%r6097, %r6096};
	shf.l.wrap.b32 	%r6098, %r6094, %r6095, 30;
	shf.l.wrap.b32 	%r6099, %r6095, %r6094, 30;
	mov.b64 	%rd974, {%r6099, %r6098};
	xor.b64  	%rd975, %rd974, %rd973;
	shf.l.wrap.b32 	%r6100, %r6094, %r6095, 25;
	shf.l.wrap.b32 	%r6101, %r6095, %r6094, 25;
	mov.b64 	%rd976, {%r6101, %r6100};
	xor.b64  	%rd977, %rd975, %rd976;
	xor.b64  	%rd978, %rd956, %rd902;
	xor.b64  	%rd979, %rd956, %rd929;
	and.b64  	%rd980, %rd979, %rd978;
	xor.b64  	%rd981, %rd980, %rd956;
	add.s64 	%rd982, %rd971, %rd981;
	add.s64 	%rd983, %rd982, %rd977;
	add.s32 	%r6102, %r8475, 10;
	mul.wide.s32 	%rd984, %r6102, 8;
	add.s64 	%rd985, %rd714, %rd984;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6103,%dummy}, %rd972;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6104}, %rd972;
	}
	shf.r.wrap.b32 	%r6105, %r6104, %r6103, 14;
	shf.r.wrap.b32 	%r6106, %r6103, %r6104, 14;
	mov.b64 	%rd986, {%r6106, %r6105};
	shf.r.wrap.b32 	%r6107, %r6104, %r6103, 18;
	shf.r.wrap.b32 	%r6108, %r6103, %r6104, 18;
	mov.b64 	%rd987, {%r6108, %r6107};
	xor.b64  	%rd988, %rd987, %rd986;
	shf.l.wrap.b32 	%r6109, %r6103, %r6104, 23;
	shf.l.wrap.b32 	%r6110, %r6104, %r6103, 23;
	mov.b64 	%rd989, {%r6110, %r6109};
	xor.b64  	%rd990, %rd988, %rd989;
	xor.b64  	%rd991, %rd945, %rd918;
	and.b64  	%rd992, %rd972, %rd991;
	xor.b64  	%rd993, %rd992, %rd918;
	add.s64 	%rd994, %rd891, %rd1183;
	ld.const.u64 	%rd995, [%rd985];
	add.s64 	%rd996, %rd994, %rd995;
	add.s64 	%rd997, %rd996, %rd993;
	add.s64 	%rd998, %rd997, %rd990;
	add.s64 	%rd999, %rd998, %rd902;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6111,%dummy}, %rd983;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6112}, %rd983;
	}
	shf.r.wrap.b32 	%r6113, %r6112, %r6111, 28;
	shf.r.wrap.b32 	%r6114, %r6111, %r6112, 28;
	mov.b64 	%rd1000, {%r6114, %r6113};
	shf.l.wrap.b32 	%r6115, %r6111, %r6112, 30;
	shf.l.wrap.b32 	%r6116, %r6112, %r6111, 30;
	mov.b64 	%rd1001, {%r6116, %r6115};
	xor.b64  	%rd1002, %rd1001, %rd1000;
	shf.l.wrap.b32 	%r6117, %r6111, %r6112, 25;
	shf.l.wrap.b32 	%r6118, %r6112, %r6111, 25;
	mov.b64 	%rd1003, {%r6118, %r6117};
	xor.b64  	%rd1004, %rd1002, %rd1003;
	xor.b64  	%rd1005, %rd983, %rd929;
	xor.b64  	%rd1006, %rd983, %rd956;
	and.b64  	%rd1007, %rd1006, %rd1005;
	xor.b64  	%rd1008, %rd1007, %rd983;
	add.s64 	%rd1009, %rd998, %rd1008;
	add.s64 	%rd1010, %rd1009, %rd1004;
	add.s32 	%r6119, %r8475, 11;
	mul.wide.s32 	%rd1011, %r6119, 8;
	add.s64 	%rd1012, %rd714, %rd1011;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6120,%dummy}, %rd999;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6121}, %rd999;
	}
	shf.r.wrap.b32 	%r6122, %r6121, %r6120, 14;
	shf.r.wrap.b32 	%r6123, %r6120, %r6121, 14;
	mov.b64 	%rd1013, {%r6123, %r6122};
	shf.r.wrap.b32 	%r6124, %r6121, %r6120, 18;
	shf.r.wrap.b32 	%r6125, %r6120, %r6121, 18;
	mov.b64 	%rd1014, {%r6125, %r6124};
	xor.b64  	%rd1015, %rd1014, %rd1013;
	shf.l.wrap.b32 	%r6126, %r6120, %r6121, 23;
	shf.l.wrap.b32 	%r6127, %r6121, %r6120, 23;
	mov.b64 	%rd1016, {%r6127, %r6126};
	xor.b64  	%rd1017, %rd1015, %rd1016;
	xor.b64  	%rd1018, %rd972, %rd945;
	and.b64  	%rd1019, %rd999, %rd1018;
	xor.b64  	%rd1020, %rd1019, %rd945;
	add.s64 	%rd1021, %rd918, %rd1182;
	ld.const.u64 	%rd1022, [%rd1012];
	add.s64 	%rd1023, %rd1021, %rd1022;
	add.s64 	%rd1024, %rd1023, %rd1020;
	add.s64 	%rd1025, %rd1024, %rd1017;
	add.s64 	%rd1026, %rd1025, %rd929;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6128,%dummy}, %rd1010;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6129}, %rd1010;
	}
	shf.r.wrap.b32 	%r6130, %r6129, %r6128, 28;
	shf.r.wrap.b32 	%r6131, %r6128, %r6129, 28;
	mov.b64 	%rd1027, {%r6131, %r6130};
	shf.l.wrap.b32 	%r6132, %r6128, %r6129, 30;
	shf.l.wrap.b32 	%r6133, %r6129, %r6128, 30;
	mov.b64 	%rd1028, {%r6133, %r6132};
	xor.b64  	%rd1029, %rd1028, %rd1027;
	shf.l.wrap.b32 	%r6134, %r6128, %r6129, 25;
	shf.l.wrap.b32 	%r6135, %r6129, %r6128, 25;
	mov.b64 	%rd1030, {%r6135, %r6134};
	xor.b64  	%rd1031, %rd1029, %rd1030;
	xor.b64  	%rd1032, %rd1010, %rd956;
	xor.b64  	%rd1033, %rd1010, %rd983;
	and.b64  	%rd1034, %rd1033, %rd1032;
	xor.b64  	%rd1035, %rd1034, %rd1010;
	add.s64 	%rd1036, %rd1025, %rd1035;
	add.s64 	%rd1037, %rd1036, %rd1031;
	add.s32 	%r6136, %r8475, 12;
	mul.wide.s32 	%rd1038, %r6136, 8;
	add.s64 	%rd1039, %rd714, %rd1038;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6137,%dummy}, %rd1026;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6138}, %rd1026;
	}
	shf.r.wrap.b32 	%r6139, %r6138, %r6137, 14;
	shf.r.wrap.b32 	%r6140, %r6137, %r6138, 14;
	mov.b64 	%rd1040, {%r6140, %r6139};
	shf.r.wrap.b32 	%r6141, %r6138, %r6137, 18;
	shf.r.wrap.b32 	%r6142, %r6137, %r6138, 18;
	mov.b64 	%rd1041, {%r6142, %r6141};
	xor.b64  	%rd1042, %rd1041, %rd1040;
	shf.l.wrap.b32 	%r6143, %r6137, %r6138, 23;
	shf.l.wrap.b32 	%r6144, %r6138, %r6137, 23;
	mov.b64 	%rd1043, {%r6144, %r6143};
	xor.b64  	%rd1044, %rd1042, %rd1043;
	xor.b64  	%rd1045, %rd999, %rd972;
	and.b64  	%rd1046, %rd1026, %rd1045;
	xor.b64  	%rd1047, %rd1046, %rd972;
	add.s64 	%rd1048, %rd945, %rd1181;
	ld.const.u64 	%rd1049, [%rd1039];
	add.s64 	%rd1050, %rd1048, %rd1049;
	add.s64 	%rd1051, %rd1050, %rd1047;
	add.s64 	%rd1052, %rd1051, %rd1044;
	add.s64 	%rd1193, %rd1052, %rd956;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6145,%dummy}, %rd1037;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6146}, %rd1037;
	}
	shf.r.wrap.b32 	%r6147, %r6146, %r6145, 28;
	shf.r.wrap.b32 	%r6148, %r6145, %r6146, 28;
	mov.b64 	%rd1053, {%r6148, %r6147};
	shf.l.wrap.b32 	%r6149, %r6145, %r6146, 30;
	shf.l.wrap.b32 	%r6150, %r6146, %r6145, 30;
	mov.b64 	%rd1054, {%r6150, %r6149};
	xor.b64  	%rd1055, %rd1054, %rd1053;
	shf.l.wrap.b32 	%r6151, %r6145, %r6146, 25;
	shf.l.wrap.b32 	%r6152, %r6146, %r6145, 25;
	mov.b64 	%rd1056, {%r6152, %r6151};
	xor.b64  	%rd1057, %rd1055, %rd1056;
	xor.b64  	%rd1058, %rd1037, %rd983;
	xor.b64  	%rd1059, %rd1037, %rd1010;
	and.b64  	%rd1060, %rd1059, %rd1058;
	xor.b64  	%rd1061, %rd1060, %rd1037;
	add.s64 	%rd1062, %rd1052, %rd1061;
	add.s64 	%rd1189, %rd1062, %rd1057;
	add.s32 	%r6153, %r8475, 13;
	mul.wide.s32 	%rd1063, %r6153, 8;
	add.s64 	%rd1064, %rd714, %rd1063;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6154,%dummy}, %rd1193;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6155}, %rd1193;
	}
	shf.r.wrap.b32 	%r6156, %r6155, %r6154, 14;
	shf.r.wrap.b32 	%r6157, %r6154, %r6155, 14;
	mov.b64 	%rd1065, {%r6157, %r6156};
	shf.r.wrap.b32 	%r6158, %r6155, %r6154, 18;
	shf.r.wrap.b32 	%r6159, %r6154, %r6155, 18;
	mov.b64 	%rd1066, {%r6159, %r6158};
	xor.b64  	%rd1067, %rd1066, %rd1065;
	shf.l.wrap.b32 	%r6160, %r6154, %r6155, 23;
	shf.l.wrap.b32 	%r6161, %r6155, %r6154, 23;
	mov.b64 	%rd1068, {%r6161, %r6160};
	xor.b64  	%rd1069, %rd1067, %rd1068;
	xor.b64  	%rd1070, %rd1026, %rd999;
	and.b64  	%rd1071, %rd1193, %rd1070;
	xor.b64  	%rd1072, %rd1071, %rd999;
	add.s64 	%rd1073, %rd972, %rd1180;
	ld.const.u64 	%rd1074, [%rd1064];
	add.s64 	%rd1075, %rd1073, %rd1074;
	add.s64 	%rd1076, %rd1075, %rd1072;
	add.s64 	%rd1077, %rd1076, %rd1069;
	add.s64 	%rd1192, %rd1077, %rd983;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6162,%dummy}, %rd1189;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6163}, %rd1189;
	}
	shf.r.wrap.b32 	%r6164, %r6163, %r6162, 28;
	shf.r.wrap.b32 	%r6165, %r6162, %r6163, 28;
	mov.b64 	%rd1078, {%r6165, %r6164};
	shf.l.wrap.b32 	%r6166, %r6162, %r6163, 30;
	shf.l.wrap.b32 	%r6167, %r6163, %r6162, 30;
	mov.b64 	%rd1079, {%r6167, %r6166};
	xor.b64  	%rd1080, %rd1079, %rd1078;
	shf.l.wrap.b32 	%r6168, %r6162, %r6163, 25;
	shf.l.wrap.b32 	%r6169, %r6163, %r6162, 25;
	mov.b64 	%rd1081, {%r6169, %r6168};
	xor.b64  	%rd1082, %rd1080, %rd1081;
	xor.b64  	%rd1083, %rd1189, %rd1010;
	xor.b64  	%rd1084, %rd1189, %rd1037;
	and.b64  	%rd1085, %rd1084, %rd1083;
	xor.b64  	%rd1086, %rd1085, %rd1189;
	add.s64 	%rd1087, %rd1077, %rd1086;
	add.s64 	%rd1188, %rd1087, %rd1082;
	add.s32 	%r6170, %r8475, 14;
	mul.wide.s32 	%rd1088, %r6170, 8;
	add.s64 	%rd1089, %rd714, %rd1088;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6171,%dummy}, %rd1192;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6172}, %rd1192;
	}
	shf.r.wrap.b32 	%r6173, %r6172, %r6171, 14;
	shf.r.wrap.b32 	%r6174, %r6171, %r6172, 14;
	mov.b64 	%rd1090, {%r6174, %r6173};
	shf.r.wrap.b32 	%r6175, %r6172, %r6171, 18;
	shf.r.wrap.b32 	%r6176, %r6171, %r6172, 18;
	mov.b64 	%rd1091, {%r6176, %r6175};
	xor.b64  	%rd1092, %rd1091, %rd1090;
	shf.l.wrap.b32 	%r6177, %r6171, %r6172, 23;
	shf.l.wrap.b32 	%r6178, %r6172, %r6171, 23;
	mov.b64 	%rd1093, {%r6178, %r6177};
	xor.b64  	%rd1094, %rd1092, %rd1093;
	xor.b64  	%rd1095, %rd1193, %rd1026;
	and.b64  	%rd1096, %rd1192, %rd1095;
	xor.b64  	%rd1097, %rd1096, %rd1026;
	add.s64 	%rd1098, %rd999, %rd1179;
	ld.const.u64 	%rd1099, [%rd1089];
	add.s64 	%rd1100, %rd1098, %rd1099;
	add.s64 	%rd1101, %rd1100, %rd1097;
	add.s64 	%rd1102, %rd1101, %rd1094;
	add.s64 	%rd1191, %rd1102, %rd1010;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6179,%dummy}, %rd1188;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6180}, %rd1188;
	}
	shf.r.wrap.b32 	%r6181, %r6180, %r6179, 28;
	shf.r.wrap.b32 	%r6182, %r6179, %r6180, 28;
	mov.b64 	%rd1103, {%r6182, %r6181};
	shf.l.wrap.b32 	%r6183, %r6179, %r6180, 30;
	shf.l.wrap.b32 	%r6184, %r6180, %r6179, 30;
	mov.b64 	%rd1104, {%r6184, %r6183};
	xor.b64  	%rd1105, %rd1104, %rd1103;
	shf.l.wrap.b32 	%r6185, %r6179, %r6180, 25;
	shf.l.wrap.b32 	%r6186, %r6180, %r6179, 25;
	mov.b64 	%rd1106, {%r6186, %r6185};
	xor.b64  	%rd1107, %rd1105, %rd1106;
	xor.b64  	%rd1108, %rd1188, %rd1037;
	xor.b64  	%rd1109, %rd1188, %rd1189;
	and.b64  	%rd1110, %rd1109, %rd1108;
	xor.b64  	%rd1111, %rd1110, %rd1188;
	add.s64 	%rd1112, %rd1102, %rd1111;
	add.s64 	%rd1187, %rd1112, %rd1107;
	add.s32 	%r6187, %r8475, 15;
	mul.wide.s32 	%rd1113, %r6187, 8;
	add.s64 	%rd1114, %rd714, %rd1113;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6188,%dummy}, %rd1191;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6189}, %rd1191;
	}
	shf.r.wrap.b32 	%r6190, %r6189, %r6188, 14;
	shf.r.wrap.b32 	%r6191, %r6188, %r6189, 14;
	mov.b64 	%rd1115, {%r6191, %r6190};
	shf.r.wrap.b32 	%r6192, %r6189, %r6188, 18;
	shf.r.wrap.b32 	%r6193, %r6188, %r6189, 18;
	mov.b64 	%rd1116, {%r6193, %r6192};
	xor.b64  	%rd1117, %rd1116, %rd1115;
	shf.l.wrap.b32 	%r6194, %r6188, %r6189, 23;
	shf.l.wrap.b32 	%r6195, %r6189, %r6188, 23;
	mov.b64 	%rd1118, {%r6195, %r6194};
	xor.b64  	%rd1119, %rd1117, %rd1118;
	xor.b64  	%rd1120, %rd1192, %rd1193;
	and.b64  	%rd1121, %rd1191, %rd1120;
	xor.b64  	%rd1122, %rd1121, %rd1193;
	add.s64 	%rd1123, %rd1026, %rd1178;
	ld.const.u64 	%rd1124, [%rd1114];
	add.s64 	%rd1125, %rd1123, %rd1124;
	add.s64 	%rd1126, %rd1125, %rd1122;
	add.s64 	%rd1127, %rd1126, %rd1119;
	add.s64 	%rd1190, %rd1127, %rd1037;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6196,%dummy}, %rd1187;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6197}, %rd1187;
	}
	shf.r.wrap.b32 	%r6198, %r6197, %r6196, 28;
	shf.r.wrap.b32 	%r6199, %r6196, %r6197, 28;
	mov.b64 	%rd1128, {%r6199, %r6198};
	shf.l.wrap.b32 	%r6200, %r6196, %r6197, 30;
	shf.l.wrap.b32 	%r6201, %r6197, %r6196, 30;
	mov.b64 	%rd1129, {%r6201, %r6200};
	xor.b64  	%rd1130, %rd1129, %rd1128;
	shf.l.wrap.b32 	%r6202, %r6196, %r6197, 25;
	shf.l.wrap.b32 	%r6203, %r6197, %r6196, 25;
	mov.b64 	%rd1131, {%r6203, %r6202};
	xor.b64  	%rd1132, %rd1130, %rd1131;
	xor.b64  	%rd1133, %rd1187, %rd1189;
	xor.b64  	%rd1134, %rd1187, %rd1188;
	and.b64  	%rd1135, %rd1134, %rd1133;
	xor.b64  	%rd1136, %rd1135, %rd1187;
	add.s64 	%rd1137, %rd1127, %rd1136;
	add.s64 	%rd1186, %rd1137, %rd1132;
	add.s32 	%r8475, %r8475, 16;
	setp.lt.s32	%p49, %r8475, 80;
	@%p49 bra 	BB1_90;

	ld.param.u64 	%rd1177, [sha512_update_128_param_0];
	add.s64 	%rd1176, %rd1177, 192;
	add.s64 	%rd1138, %rd31, %rd1186;
	st.u64 	[%rd1177], %rd1138;
	add.s64 	%rd1139, %rd33, %rd1187;
	st.u64 	[%rd1176+-184], %rd1139;
	add.s64 	%rd1140, %rd32, %rd1188;
	st.u64 	[%rd1176+-176], %rd1140;
	add.s64 	%rd1141, %rd30, %rd1189;
	st.u64 	[%rd1176+-168], %rd1141;
	add.s64 	%rd1142, %rd26, %rd1190;
	st.u64 	[%rd1176+-160], %rd1142;
	add.s64 	%rd1143, %rd28, %rd1191;
	st.u64 	[%rd1176+-152], %rd1143;
	add.s64 	%rd1144, %rd27, %rd1192;
	st.u64 	[%rd1176+-144], %rd1144;
	add.s64 	%rd1145, %rd29, %rd1193;
	st.u64 	[%rd1176+-136], %rd1145;
	st.v2.u32 	[%rd1176+-128], {%r8446, %r8445};
	st.v2.u32 	[%rd1176+-120], {%r8444, %r8443};
	st.v2.u32 	[%rd1176+-112], {%r8450, %r8449};
	st.v2.u32 	[%rd1176+-104], {%r8448, %r8447};
	st.v2.u32 	[%rd1176+-96], {%r8454, %r8453};
	st.v2.u32 	[%rd1176+-88], {%r8452, %r8451};
	st.v2.u32 	[%rd1176+-80], {%r8458, %r8457};
	st.v2.u32 	[%rd1176+-72], {%r8456, %r8455};
	st.v2.u32 	[%rd1176+-64], {%r8462, %r8461};
	st.v2.u32 	[%rd1176+-56], {%r8460, %r8459};
	st.v2.u32 	[%rd1176+-48], {%r8466, %r8465};
	st.v2.u32 	[%rd1176+-40], {%r8464, %r8463};
	st.v2.u32 	[%rd1176+-32], {%r8470, %r8469};
	st.v2.u32 	[%rd1176+-24], {%r8468, %r8467};
	st.v2.u32 	[%rd1176+-16], {%r8474, %r8473};
	st.v2.u32 	[%rd1176+-8], {%r8472, %r8471};

BB1_173:
	ret;
}

.func sha512_update(
	.param .b64 sha512_update_param_0,
	.param .b64 sha512_update_param_1,
	.param .b32 sha512_update_param_2
)
{
	.local .align 16 .b8 	__local_depot2[128];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<50>;
	.reg .b32 	%r<7395>;
	.reg .b64 	%rd<1268>;


	mov.u64 	%SPL, __local_depot2;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd107, [sha512_update_param_0];
	ld.param.u64 	%rd108, [sha512_update_param_1];
	cvta.to.local.u64 	%rd1, %rd108;
	add.u64 	%rd109, %SP, 0;
	cvta.to.local.u64 	%rd2, %rd109;
	add.u64 	%rd110, %SP, 16;
	cvta.to.local.u64 	%rd3, %rd110;
	add.u64 	%rd111, %SP, 32;
	cvta.to.local.u64 	%rd4, %rd111;
	add.u64 	%rd112, %SP, 48;
	cvta.to.local.u64 	%rd5, %rd112;
	add.u64 	%rd113, %SP, 64;
	cvta.to.local.u64 	%rd6, %rd113;
	add.u64 	%rd114, %SP, 80;
	cvta.to.local.u64 	%rd7, %rd114;
	add.u64 	%rd115, %SP, 96;
	cvta.to.local.u64 	%rd8, %rd115;
	add.u64 	%rd116, %SP, 112;
	cvta.to.local.u64 	%rd9, %rd116;
	add.s64 	%rd10, %rd107, 192;
	mov.u32 	%r7358, 0;
	mov.u32 	%r7359, %r7358;
	bra.uni 	BB2_1;

BB2_91:
	add.s64 	%rd1212, %rd48, %rd1252;
	st.u64 	[%rd107], %rd1212;
	add.s64 	%rd1213, %rd50, %rd1253;
	st.u64 	[%rd10+-184], %rd1213;
	add.s64 	%rd1214, %rd49, %rd1254;
	st.u64 	[%rd10+-176], %rd1214;
	add.s64 	%rd1215, %rd47, %rd1255;
	st.u64 	[%rd10+-168], %rd1215;
	add.s64 	%rd1216, %rd43, %rd1256;
	st.u64 	[%rd10+-160], %rd1216;
	add.s64 	%rd1217, %rd45, %rd1257;
	st.u64 	[%rd10+-152], %rd1217;
	add.s64 	%rd1218, %rd44, %rd1258;
	st.u64 	[%rd10+-144], %rd1218;
	add.s64 	%rd1219, %rd46, %rd1259;
	st.u64 	[%rd10+-136], %rd1219;
	st.v2.u32 	[%rd10+-128], {%r7365, %r7364};
	st.v2.u32 	[%rd10+-120], {%r7363, %r7362};
	st.v2.u32 	[%rd10+-112], {%r7369, %r7368};
	st.v2.u32 	[%rd10+-104], {%r7367, %r7366};
	st.v2.u32 	[%rd10+-96], {%r7373, %r7372};
	st.v2.u32 	[%rd10+-88], {%r7371, %r7370};
	st.v2.u32 	[%rd10+-80], {%r7377, %r7376};
	st.v2.u32 	[%rd10+-72], {%r7375, %r7374};
	st.v2.u32 	[%rd10+-64], {%r7381, %r7380};
	st.v2.u32 	[%rd10+-56], {%r7379, %r7378};
	st.v2.u32 	[%rd10+-48], {%r7385, %r7384};
	st.v2.u32 	[%rd10+-40], {%r7383, %r7382};
	st.v2.u32 	[%rd10+-32], {%r7389, %r7388};
	st.v2.u32 	[%rd10+-24], {%r7387, %r7386};
	st.v2.u32 	[%rd10+-16], {%r7393, %r7392};
	st.v2.u32 	[%rd10+-8], {%r7391, %r7390};
	add.s32 	%r7358, %r7358, 128;
	add.s32 	%r7359, %r7359, 32;

BB2_1:
	ld.param.u32 	%r7356, [sha512_update_param_2];
	add.s32 	%r7355, %r7356, -128;
	mul.wide.s32 	%rd117, %r7359, 4;
	add.s64 	%rd118, %rd1, %rd117;
	ld.local.u32 	%r7361, [%rd118];
	st.local.u32 	[%rd2], %r7361;
	add.s32 	%r580, %r7359, 1;
	mul.wide.s32 	%rd119, %r580, 4;
	add.s64 	%rd120, %rd1, %rd119;
	ld.local.u32 	%r7360, [%rd120];
	st.local.u32 	[%rd2+4], %r7360;
	add.s32 	%r581, %r7359, 2;
	mul.wide.s32 	%rd121, %r581, 4;
	add.s64 	%rd122, %rd1, %rd121;
	ld.local.u32 	%r582, [%rd122];
	st.local.u32 	[%rd2+8], %r582;
	add.s32 	%r583, %r7359, 3;
	mul.wide.s32 	%rd123, %r583, 4;
	add.s64 	%rd124, %rd1, %rd123;
	ld.local.u32 	%r584, [%rd124];
	st.local.u32 	[%rd2+12], %r584;
	add.s32 	%r585, %r7359, 4;
	mul.wide.s32 	%rd125, %r585, 4;
	add.s64 	%rd126, %rd1, %rd125;
	ld.local.u32 	%r586, [%rd126];
	st.local.u32 	[%rd3], %r586;
	add.s32 	%r587, %r7359, 5;
	mul.wide.s32 	%rd127, %r587, 4;
	add.s64 	%rd128, %rd1, %rd127;
	ld.local.u32 	%r588, [%rd128];
	st.local.u32 	[%rd3+4], %r588;
	add.s32 	%r589, %r7359, 6;
	mul.wide.s32 	%rd129, %r589, 4;
	add.s64 	%rd130, %rd1, %rd129;
	ld.local.u32 	%r590, [%rd130];
	st.local.u32 	[%rd3+8], %r590;
	add.s32 	%r591, %r7359, 7;
	mul.wide.s32 	%rd131, %r591, 4;
	add.s64 	%rd132, %rd1, %rd131;
	ld.local.u32 	%r592, [%rd132];
	st.local.u32 	[%rd3+12], %r592;
	add.s32 	%r593, %r7359, 8;
	mul.wide.s32 	%rd133, %r593, 4;
	add.s64 	%rd134, %rd1, %rd133;
	ld.local.u32 	%r594, [%rd134];
	st.local.u32 	[%rd4], %r594;
	add.s32 	%r595, %r7359, 9;
	mul.wide.s32 	%rd135, %r595, 4;
	add.s64 	%rd136, %rd1, %rd135;
	ld.local.u32 	%r596, [%rd136];
	st.local.u32 	[%rd4+4], %r596;
	add.s32 	%r597, %r7359, 10;
	mul.wide.s32 	%rd137, %r597, 4;
	add.s64 	%rd138, %rd1, %rd137;
	ld.local.u32 	%r598, [%rd138];
	st.local.u32 	[%rd4+8], %r598;
	add.s32 	%r599, %r7359, 11;
	mul.wide.s32 	%rd139, %r599, 4;
	add.s64 	%rd140, %rd1, %rd139;
	ld.local.u32 	%r600, [%rd140];
	st.local.u32 	[%rd4+12], %r600;
	add.s32 	%r601, %r7359, 12;
	mul.wide.s32 	%rd141, %r601, 4;
	add.s64 	%rd142, %rd1, %rd141;
	ld.local.u32 	%r602, [%rd142];
	st.local.u32 	[%rd5], %r602;
	add.s32 	%r603, %r7359, 13;
	mul.wide.s32 	%rd143, %r603, 4;
	add.s64 	%rd144, %rd1, %rd143;
	ld.local.u32 	%r604, [%rd144];
	st.local.u32 	[%rd5+4], %r604;
	add.s32 	%r605, %r7359, 14;
	mul.wide.s32 	%rd145, %r605, 4;
	add.s64 	%rd146, %rd1, %rd145;
	ld.local.u32 	%r606, [%rd146];
	st.local.u32 	[%rd5+8], %r606;
	add.s32 	%r607, %r7359, 15;
	mul.wide.s32 	%rd147, %r607, 4;
	add.s64 	%rd148, %rd1, %rd147;
	ld.local.u32 	%r608, [%rd148];
	st.local.u32 	[%rd5+12], %r608;
	add.s32 	%r609, %r7359, 16;
	mul.wide.s32 	%rd149, %r609, 4;
	add.s64 	%rd150, %rd1, %rd149;
	ld.local.u32 	%r610, [%rd150];
	st.local.u32 	[%rd6], %r610;
	add.s32 	%r611, %r7359, 17;
	mul.wide.s32 	%rd151, %r611, 4;
	add.s64 	%rd152, %rd1, %rd151;
	ld.local.u32 	%r612, [%rd152];
	st.local.u32 	[%rd6+4], %r612;
	add.s32 	%r613, %r7359, 18;
	mul.wide.s32 	%rd153, %r613, 4;
	add.s64 	%rd154, %rd1, %rd153;
	ld.local.u32 	%r614, [%rd154];
	st.local.u32 	[%rd6+8], %r614;
	add.s32 	%r615, %r7359, 19;
	mul.wide.s32 	%rd155, %r615, 4;
	add.s64 	%rd156, %rd1, %rd155;
	ld.local.u32 	%r616, [%rd156];
	st.local.u32 	[%rd6+12], %r616;
	add.s32 	%r617, %r7359, 20;
	mul.wide.s32 	%rd157, %r617, 4;
	add.s64 	%rd158, %rd1, %rd157;
	ld.local.u32 	%r618, [%rd158];
	st.local.u32 	[%rd7], %r618;
	add.s32 	%r619, %r7359, 21;
	mul.wide.s32 	%rd159, %r619, 4;
	add.s64 	%rd160, %rd1, %rd159;
	ld.local.u32 	%r620, [%rd160];
	st.local.u32 	[%rd7+4], %r620;
	add.s32 	%r621, %r7359, 22;
	mul.wide.s32 	%rd161, %r621, 4;
	add.s64 	%rd162, %rd1, %rd161;
	ld.local.u32 	%r622, [%rd162];
	st.local.u32 	[%rd7+8], %r622;
	add.s32 	%r623, %r7359, 23;
	mul.wide.s32 	%rd163, %r623, 4;
	add.s64 	%rd164, %rd1, %rd163;
	ld.local.u32 	%r624, [%rd164];
	st.local.u32 	[%rd7+12], %r624;
	add.s32 	%r625, %r7359, 24;
	mul.wide.s32 	%rd165, %r625, 4;
	add.s64 	%rd166, %rd1, %rd165;
	ld.local.u32 	%r626, [%rd166];
	st.local.u32 	[%rd8], %r626;
	add.s32 	%r627, %r7359, 25;
	mul.wide.s32 	%rd167, %r627, 4;
	add.s64 	%rd168, %rd1, %rd167;
	ld.local.u32 	%r628, [%rd168];
	st.local.u32 	[%rd8+4], %r628;
	add.s32 	%r629, %r7359, 26;
	mul.wide.s32 	%rd169, %r629, 4;
	add.s64 	%rd170, %rd1, %rd169;
	ld.local.u32 	%r630, [%rd170];
	st.local.u32 	[%rd8+8], %r630;
	add.s32 	%r631, %r7359, 27;
	mul.wide.s32 	%rd171, %r631, 4;
	add.s64 	%rd172, %rd1, %rd171;
	ld.local.u32 	%r632, [%rd172];
	st.local.u32 	[%rd8+12], %r632;
	add.s32 	%r633, %r7359, 28;
	mul.wide.s32 	%rd173, %r633, 4;
	add.s64 	%rd174, %rd1, %rd173;
	ld.local.u32 	%r634, [%rd174];
	st.local.u32 	[%rd9], %r634;
	add.s32 	%r635, %r7359, 29;
	mul.wide.s32 	%rd175, %r635, 4;
	add.s64 	%rd176, %rd1, %rd175;
	ld.local.u32 	%r636, [%rd176];
	st.local.u32 	[%rd9+4], %r636;
	add.s32 	%r637, %r7359, 30;
	mul.wide.s32 	%rd177, %r637, 4;
	add.s64 	%rd178, %rd1, %rd177;
	ld.local.u32 	%r638, [%rd178];
	st.local.u32 	[%rd9+8], %r638;
	add.s32 	%r639, %r7359, 31;
	mul.wide.s32 	%rd179, %r639, 4;
	add.s64 	%rd180, %rd1, %rd179;
	ld.local.u32 	%r6, [%rd180];
	st.local.u32 	[%rd9+12], %r6;
	setp.lt.s32	%p1, %r7358, %r7355;
	@%p1 bra 	BB2_3;
	bra.uni 	BB2_2;

BB2_3:
	ld.u32 	%r674, [%rd10];
	add.s32 	%r675, %r674, 128;
	st.u32 	[%rd10], %r675;
	bfe.u32 	%r673, %r674, 2, 5;
	and.b32  	%r676, %r674, 3;
	shl.b32 	%r677, %r676, 2;
	mov.u32 	%r678, 1985229328;
	shr.u32 	%r679, %r678, %r677;
	and.b32  	%r7, %r679, 65535;
	mov.u32 	%r7362, 0;
	setp.gt.s32	%p2, %r673, 15;
	@%p2 bra 	BB2_36;

	setp.gt.s32	%p26, %r673, 7;
	@%p26 bra 	BB2_21;

	setp.gt.s32	%p38, %r673, 3;
	@%p38 bra 	BB2_14;

	setp.gt.s32	%p44, %r673, 1;
	@%p44 bra 	BB2_10;

	setp.eq.s32	%p47, %r673, 0;
	@%p47 bra 	BB2_88;
	bra.uni 	BB2_8;

BB2_88:
	mov.u32 	%r7362, 0;
	// inline asm
	prmt.b32 %r7365, %r7362, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r6453, %r6454}, [%rd9+8];
	// inline asm
	prmt.b32 %r6294, %r6454, %r6453, %r7;
	// inline asm
	st.local.u32 	[%rd9+12], %r6294;
	ld.local.u32 	%r6299, [%rd9+8];
	ld.local.u32 	%r6300, [%rd9+4];
	// inline asm
	prmt.b32 %r6298, %r6299, %r6300, %r7;
	// inline asm
	st.local.u32 	[%rd9+8], %r6298;
	ld.local.v2.u32 	{%r6455, %r6456}, [%rd9];
	// inline asm
	prmt.b32 %r6302, %r6456, %r6455, %r7;
	// inline asm
	st.local.u32 	[%rd9+4], %r6302;
	ld.local.u32 	%r6307, [%rd9];
	ld.local.u32 	%r6308, [%rd8+12];
	// inline asm
	prmt.b32 %r6306, %r6307, %r6308, %r7;
	// inline asm
	st.local.u32 	[%rd9], %r6306;
	ld.local.v2.u32 	{%r6457, %r6458}, [%rd8+8];
	// inline asm
	prmt.b32 %r6310, %r6458, %r6457, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r6310;
	ld.local.u32 	%r6315, [%rd8+8];
	ld.local.u32 	%r6316, [%rd8+4];
	// inline asm
	prmt.b32 %r6314, %r6315, %r6316, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r6314;
	ld.local.v2.u32 	{%r6459, %r6460}, [%rd8];
	// inline asm
	prmt.b32 %r6318, %r6460, %r6459, %r7;
	// inline asm
	st.local.u32 	[%rd8+4], %r6318;
	ld.local.u32 	%r6323, [%rd8];
	ld.local.u32 	%r6324, [%rd7+12];
	// inline asm
	prmt.b32 %r6322, %r6323, %r6324, %r7;
	// inline asm
	st.local.u32 	[%rd8], %r6322;
	ld.local.v2.u32 	{%r6461, %r6462}, [%rd7+8];
	// inline asm
	prmt.b32 %r6326, %r6462, %r6461, %r7;
	// inline asm
	st.local.u32 	[%rd7+12], %r6326;
	ld.local.u32 	%r6331, [%rd7+8];
	ld.local.u32 	%r6332, [%rd7+4];
	// inline asm
	prmt.b32 %r6330, %r6331, %r6332, %r7;
	// inline asm
	st.local.u32 	[%rd7+8], %r6330;
	ld.local.v2.u32 	{%r6463, %r6464}, [%rd7];
	// inline asm
	prmt.b32 %r6334, %r6464, %r6463, %r7;
	// inline asm
	st.local.u32 	[%rd7+4], %r6334;
	ld.local.u32 	%r6339, [%rd7];
	ld.local.u32 	%r6340, [%rd6+12];
	// inline asm
	prmt.b32 %r6338, %r6339, %r6340, %r7;
	// inline asm
	st.local.u32 	[%rd7], %r6338;
	ld.local.v2.u32 	{%r6465, %r6466}, [%rd6+8];
	// inline asm
	prmt.b32 %r6342, %r6466, %r6465, %r7;
	// inline asm
	st.local.u32 	[%rd6+12], %r6342;
	ld.local.u32 	%r6347, [%rd6+8];
	ld.local.u32 	%r6348, [%rd6+4];
	// inline asm
	prmt.b32 %r6346, %r6347, %r6348, %r7;
	// inline asm
	st.local.u32 	[%rd6+8], %r6346;
	ld.local.v2.u32 	{%r6467, %r6468}, [%rd6];
	// inline asm
	prmt.b32 %r6350, %r6468, %r6467, %r7;
	// inline asm
	st.local.u32 	[%rd6+4], %r6350;
	ld.local.u32 	%r6355, [%rd6];
	ld.local.u32 	%r6356, [%rd5+12];
	// inline asm
	prmt.b32 %r6354, %r6355, %r6356, %r7;
	// inline asm
	st.local.u32 	[%rd6], %r6354;
	ld.local.v2.u32 	{%r6469, %r6470}, [%rd5+8];
	// inline asm
	prmt.b32 %r6358, %r6470, %r6469, %r7;
	// inline asm
	st.local.u32 	[%rd5+12], %r6358;
	ld.local.u32 	%r6363, [%rd5+8];
	ld.local.u32 	%r6364, [%rd5+4];
	// inline asm
	prmt.b32 %r6362, %r6363, %r6364, %r7;
	// inline asm
	st.local.u32 	[%rd5+8], %r6362;
	ld.local.v2.u32 	{%r6471, %r6472}, [%rd5];
	// inline asm
	prmt.b32 %r6366, %r6472, %r6471, %r7;
	// inline asm
	st.local.u32 	[%rd5+4], %r6366;
	ld.local.u32 	%r6371, [%rd5];
	ld.local.u32 	%r6372, [%rd4+12];
	// inline asm
	prmt.b32 %r6370, %r6371, %r6372, %r7;
	// inline asm
	st.local.u32 	[%rd5], %r6370;
	ld.local.v2.u32 	{%r6473, %r6474}, [%rd4+8];
	// inline asm
	prmt.b32 %r6374, %r6474, %r6473, %r7;
	// inline asm
	st.local.u32 	[%rd4+12], %r6374;
	ld.local.u32 	%r6379, [%rd4+8];
	ld.local.u32 	%r6380, [%rd4+4];
	// inline asm
	prmt.b32 %r6378, %r6379, %r6380, %r7;
	// inline asm
	st.local.u32 	[%rd4+8], %r6378;
	ld.local.v2.u32 	{%r6475, %r6476}, [%rd4];
	// inline asm
	prmt.b32 %r6382, %r6476, %r6475, %r7;
	// inline asm
	st.local.u32 	[%rd4+4], %r6382;
	ld.local.u32 	%r6387, [%rd4];
	ld.local.u32 	%r6388, [%rd3+12];
	// inline asm
	prmt.b32 %r6386, %r6387, %r6388, %r7;
	// inline asm
	st.local.u32 	[%rd4], %r6386;
	ld.local.v2.u32 	{%r6477, %r6478}, [%rd3+8];
	// inline asm
	prmt.b32 %r6390, %r6478, %r6477, %r7;
	// inline asm
	st.local.u32 	[%rd3+12], %r6390;
	ld.local.u32 	%r6395, [%rd3+8];
	ld.local.u32 	%r6396, [%rd3+4];
	// inline asm
	prmt.b32 %r6394, %r6395, %r6396, %r7;
	// inline asm
	st.local.u32 	[%rd3+8], %r6394;
	ld.local.v2.u32 	{%r6479, %r6480}, [%rd3];
	// inline asm
	prmt.b32 %r6398, %r6480, %r6479, %r7;
	// inline asm
	st.local.u32 	[%rd3+4], %r6398;
	ld.local.u32 	%r6403, [%rd3];
	ld.local.u32 	%r6404, [%rd2+12];
	// inline asm
	prmt.b32 %r6402, %r6403, %r6404, %r7;
	// inline asm
	st.local.u32 	[%rd3], %r6402;
	ld.local.v2.u32 	{%r6481, %r6482}, [%rd2+8];
	// inline asm
	prmt.b32 %r6406, %r6482, %r6481, %r7;
	// inline asm
	st.local.u32 	[%rd2+12], %r6406;
	ld.local.u32 	%r6411, [%rd2+8];
	ld.local.u32 	%r6412, [%rd2+4];
	// inline asm
	prmt.b32 %r6410, %r6411, %r6412, %r7;
	// inline asm
	st.local.u32 	[%rd2+8], %r6410;
	ld.local.v2.u32 	{%r6483, %r6484}, [%rd2];
	// inline asm
	prmt.b32 %r6414, %r6484, %r6483, %r7;
	// inline asm
	st.local.u32 	[%rd2+4], %r6414;
	ld.local.u32 	%r6419, [%rd2];
	// inline asm
	prmt.b32 %r7361, %r6419, %r7362, %r7;
	// inline asm
	st.local.u32 	[%rd2], %r7361;
	ld.local.u32 	%r7360, [%rd2+4];
	mov.u32 	%r7363, %r7362;
	mov.u32 	%r7364, %r7362;
	mov.u32 	%r7366, %r7362;
	mov.u32 	%r7367, %r7362;
	mov.u32 	%r7368, %r7362;
	mov.u32 	%r7369, %r7362;
	mov.u32 	%r7370, %r7362;
	mov.u32 	%r7371, %r7362;
	mov.u32 	%r7372, %r7362;
	mov.u32 	%r7373, %r7362;
	mov.u32 	%r7374, %r7362;
	mov.u32 	%r7375, %r7362;
	mov.u32 	%r7376, %r7362;
	mov.u32 	%r7377, %r7362;
	mov.u32 	%r7378, %r7362;
	mov.u32 	%r7379, %r7362;
	mov.u32 	%r7380, %r7362;
	mov.u32 	%r7381, %r7362;
	mov.u32 	%r7382, %r7362;
	mov.u32 	%r7383, %r7362;
	mov.u32 	%r7384, %r7362;
	mov.u32 	%r7385, %r7362;
	mov.u32 	%r7386, %r7362;
	mov.u32 	%r7387, %r7362;
	mov.u32 	%r7388, %r7362;
	mov.u32 	%r7389, %r7362;
	mov.u32 	%r7390, %r7362;
	mov.u32 	%r7391, %r7362;
	mov.u32 	%r7392, %r7362;
	mov.u32 	%r7393, %r7362;
	bra.uni 	BB2_89;

BB2_36:
	setp.gt.s32	%p3, %r673, 23;
	@%p3 bra 	BB2_52;

	setp.gt.s32	%p15, %r673, 19;
	@%p15 bra 	BB2_45;

	setp.gt.s32	%p21, %r673, 17;
	@%p21 bra 	BB2_42;

	setp.eq.s32	%p24, %r673, 16;
	@%p24 bra 	BB2_74;
	bra.uni 	BB2_40;

BB2_74:
	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7381, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3424, %r3425}, [%rd9+8];
	// inline asm
	prmt.b32 %r7374, %r3425, %r3424, %r7;
	// inline asm
	ld.local.u32 	%r3284, [%rd9+8];
	ld.local.u32 	%r3285, [%rd9+4];
	// inline asm
	prmt.b32 %r7375, %r3284, %r3285, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3426, %r3427}, [%rd9];
	// inline asm
	prmt.b32 %r7376, %r3427, %r3426, %r7;
	// inline asm
	ld.local.u32 	%r3292, [%rd9];
	ld.local.u32 	%r3293, [%rd8+12];
	// inline asm
	prmt.b32 %r7377, %r3292, %r3293, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3428, %r3429}, [%rd8+8];
	// inline asm
	prmt.b32 %r7370, %r3429, %r3428, %r7;
	// inline asm
	ld.local.u32 	%r3300, [%rd8+8];
	ld.local.u32 	%r3301, [%rd8+4];
	// inline asm
	prmt.b32 %r7371, %r3300, %r3301, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3430, %r3431}, [%rd8];
	// inline asm
	prmt.b32 %r7372, %r3431, %r3430, %r7;
	// inline asm
	ld.local.u32 	%r3308, [%rd8];
	ld.local.u32 	%r3309, [%rd7+12];
	// inline asm
	prmt.b32 %r7373, %r3308, %r3309, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3432, %r3433}, [%rd7+8];
	// inline asm
	prmt.b32 %r7366, %r3433, %r3432, %r7;
	// inline asm
	ld.local.u32 	%r3316, [%rd7+8];
	ld.local.u32 	%r3317, [%rd7+4];
	// inline asm
	prmt.b32 %r7367, %r3316, %r3317, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3434, %r3435}, [%rd7];
	// inline asm
	prmt.b32 %r7368, %r3435, %r3434, %r7;
	// inline asm
	ld.local.u32 	%r3324, [%rd7];
	ld.local.u32 	%r3325, [%rd6+12];
	// inline asm
	prmt.b32 %r7369, %r3324, %r3325, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3436, %r3437}, [%rd6+8];
	// inline asm
	prmt.b32 %r7362, %r3437, %r3436, %r7;
	// inline asm
	ld.local.u32 	%r3332, [%rd6+8];
	ld.local.u32 	%r3333, [%rd6+4];
	// inline asm
	prmt.b32 %r7363, %r3332, %r3333, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3438, %r3439}, [%rd6];
	// inline asm
	prmt.b32 %r7364, %r3439, %r3438, %r7;
	// inline asm
	ld.local.u32 	%r3340, [%rd6];
	ld.local.u32 	%r3341, [%rd5+12];
	// inline asm
	prmt.b32 %r7365, %r3340, %r3341, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3440, %r3441}, [%rd5+8];
	// inline asm
	prmt.b32 %r3343, %r3441, %r3440, %r7;
	// inline asm
	st.local.u32 	[%rd9+12], %r3343;
	ld.local.u32 	%r3348, [%rd5+8];
	ld.local.u32 	%r3349, [%rd5+4];
	// inline asm
	prmt.b32 %r3347, %r3348, %r3349, %r7;
	// inline asm
	st.local.u32 	[%rd9+8], %r3347;
	ld.local.v2.u32 	{%r3442, %r3443}, [%rd5];
	// inline asm
	prmt.b32 %r3351, %r3443, %r3442, %r7;
	// inline asm
	st.local.u32 	[%rd9+4], %r3351;
	ld.local.u32 	%r3356, [%rd5];
	ld.local.u32 	%r3357, [%rd4+12];
	// inline asm
	prmt.b32 %r3355, %r3356, %r3357, %r7;
	// inline asm
	st.local.u32 	[%rd9], %r3355;
	ld.local.v2.u32 	{%r3444, %r3445}, [%rd4+8];
	// inline asm
	prmt.b32 %r3359, %r3445, %r3444, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r3359;
	ld.local.u32 	%r3364, [%rd4+8];
	ld.local.u32 	%r3365, [%rd4+4];
	// inline asm
	prmt.b32 %r3363, %r3364, %r3365, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r3363;
	ld.local.v2.u32 	{%r3446, %r3447}, [%rd4];
	// inline asm
	prmt.b32 %r3367, %r3447, %r3446, %r7;
	// inline asm
	st.local.u32 	[%rd8+4], %r3367;
	ld.local.u32 	%r3372, [%rd4];
	ld.local.u32 	%r3373, [%rd3+12];
	// inline asm
	prmt.b32 %r3371, %r3372, %r3373, %r7;
	// inline asm
	st.local.u32 	[%rd8], %r3371;
	ld.local.v2.u32 	{%r3448, %r3449}, [%rd3+8];
	// inline asm
	prmt.b32 %r3375, %r3449, %r3448, %r7;
	// inline asm
	st.local.u32 	[%rd7+12], %r3375;
	ld.local.u32 	%r3380, [%rd3+8];
	ld.local.u32 	%r3381, [%rd3+4];
	// inline asm
	prmt.b32 %r3379, %r3380, %r3381, %r7;
	// inline asm
	st.local.u32 	[%rd7+8], %r3379;
	ld.local.v2.u32 	{%r3450, %r3451}, [%rd3];
	// inline asm
	prmt.b32 %r3383, %r3451, %r3450, %r7;
	// inline asm
	st.local.u32 	[%rd7+4], %r3383;
	ld.local.u32 	%r3388, [%rd3];
	ld.local.u32 	%r3389, [%rd2+12];
	// inline asm
	prmt.b32 %r3387, %r3388, %r3389, %r7;
	// inline asm
	st.local.u32 	[%rd7], %r3387;
	ld.local.v2.u32 	{%r3452, %r3453}, [%rd2+8];
	// inline asm
	prmt.b32 %r3391, %r3453, %r3452, %r7;
	// inline asm
	st.local.u32 	[%rd6+12], %r3391;
	ld.local.u32 	%r3396, [%rd2+8];
	ld.local.u32 	%r3397, [%rd2+4];
	// inline asm
	prmt.b32 %r3395, %r3396, %r3397, %r7;
	// inline asm
	st.local.u32 	[%rd6+8], %r3395;
	ld.local.v2.u32 	{%r3454, %r3455}, [%rd2];
	// inline asm
	prmt.b32 %r3399, %r3455, %r3454, %r7;
	// inline asm
	st.local.u32 	[%rd6+4], %r3399;
	ld.local.u32 	%r3404, [%rd2];
	// inline asm
	prmt.b32 %r3403, %r3404, %r7360, %r7;
	// inline asm
	st.local.u32 	[%rd6], %r3403;
	st.local.v4.u32 	[%rd5], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd4], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd3], {%r7360, %r7360, %r7360, %r7360};
	st.local.v2.u32 	[%rd2+8], {%r7360, %r7360};
	mov.u64 	%rd204, 0;
	st.local.u64 	[%rd2], %rd204;
	mov.u32 	%r7361, %r7360;
	mov.u32 	%r7378, %r7360;
	mov.u32 	%r7379, %r7360;
	mov.u32 	%r7380, %r7360;
	bra.uni 	BB2_84;

BB2_21:
	setp.gt.s32	%p27, %r673, 11;
	@%p27 bra 	BB2_29;

	setp.gt.s32	%p33, %r673, 9;
	@%p33 bra 	BB2_26;

	setp.eq.s32	%p36, %r673, 8;
	@%p36 bra 	BB2_78;
	bra.uni 	BB2_24;

BB2_78:
	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7373, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r4908, %r4909}, [%rd9+8];
	// inline asm
	prmt.b32 %r7366, %r4909, %r4908, %r7;
	// inline asm
	ld.local.u32 	%r4760, [%rd9+8];
	ld.local.u32 	%r4761, [%rd9+4];
	// inline asm
	prmt.b32 %r7367, %r4760, %r4761, %r7;
	// inline asm
	ld.local.v2.u32 	{%r4910, %r4911}, [%rd9];
	// inline asm
	prmt.b32 %r7368, %r4911, %r4910, %r7;
	// inline asm
	ld.local.u32 	%r4768, [%rd9];
	ld.local.u32 	%r4769, [%rd8+12];
	// inline asm
	prmt.b32 %r7369, %r4768, %r4769, %r7;
	// inline asm
	ld.local.v2.u32 	{%r4912, %r4913}, [%rd8+8];
	// inline asm
	prmt.b32 %r7362, %r4913, %r4912, %r7;
	// inline asm
	ld.local.u32 	%r4776, [%rd8+8];
	ld.local.u32 	%r4777, [%rd8+4];
	// inline asm
	prmt.b32 %r7363, %r4776, %r4777, %r7;
	// inline asm
	ld.local.v2.u32 	{%r4914, %r4915}, [%rd8];
	// inline asm
	prmt.b32 %r7364, %r4915, %r4914, %r7;
	// inline asm
	ld.local.u32 	%r4784, [%rd8];
	ld.local.u32 	%r4785, [%rd7+12];
	// inline asm
	prmt.b32 %r7365, %r4784, %r4785, %r7;
	// inline asm
	ld.local.v2.u32 	{%r4916, %r4917}, [%rd7+8];
	// inline asm
	prmt.b32 %r4787, %r4917, %r4916, %r7;
	// inline asm
	st.local.u32 	[%rd9+12], %r4787;
	ld.local.u32 	%r4792, [%rd7+8];
	ld.local.u32 	%r4793, [%rd7+4];
	// inline asm
	prmt.b32 %r4791, %r4792, %r4793, %r7;
	// inline asm
	st.local.u32 	[%rd9+8], %r4791;
	ld.local.v2.u32 	{%r4918, %r4919}, [%rd7];
	// inline asm
	prmt.b32 %r4795, %r4919, %r4918, %r7;
	// inline asm
	st.local.u32 	[%rd9+4], %r4795;
	ld.local.u32 	%r4800, [%rd7];
	ld.local.u32 	%r4801, [%rd6+12];
	// inline asm
	prmt.b32 %r4799, %r4800, %r4801, %r7;
	// inline asm
	st.local.u32 	[%rd9], %r4799;
	ld.local.v2.u32 	{%r4920, %r4921}, [%rd6+8];
	// inline asm
	prmt.b32 %r4803, %r4921, %r4920, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r4803;
	ld.local.u32 	%r4808, [%rd6+8];
	ld.local.u32 	%r4809, [%rd6+4];
	// inline asm
	prmt.b32 %r4807, %r4808, %r4809, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r4807;
	ld.local.v2.u32 	{%r4922, %r4923}, [%rd6];
	// inline asm
	prmt.b32 %r4811, %r4923, %r4922, %r7;
	// inline asm
	st.local.u32 	[%rd8+4], %r4811;
	ld.local.u32 	%r4816, [%rd6];
	ld.local.u32 	%r4817, [%rd5+12];
	// inline asm
	prmt.b32 %r4815, %r4816, %r4817, %r7;
	// inline asm
	st.local.u32 	[%rd8], %r4815;
	ld.local.v2.u32 	{%r4924, %r4925}, [%rd5+8];
	// inline asm
	prmt.b32 %r4819, %r4925, %r4924, %r7;
	// inline asm
	st.local.u32 	[%rd7+12], %r4819;
	ld.local.u32 	%r4824, [%rd5+8];
	ld.local.u32 	%r4825, [%rd5+4];
	// inline asm
	prmt.b32 %r4823, %r4824, %r4825, %r7;
	// inline asm
	st.local.u32 	[%rd7+8], %r4823;
	ld.local.v2.u32 	{%r4926, %r4927}, [%rd5];
	// inline asm
	prmt.b32 %r4827, %r4927, %r4926, %r7;
	// inline asm
	st.local.u32 	[%rd7+4], %r4827;
	ld.local.u32 	%r4832, [%rd5];
	ld.local.u32 	%r4833, [%rd4+12];
	// inline asm
	prmt.b32 %r4831, %r4832, %r4833, %r7;
	// inline asm
	st.local.u32 	[%rd7], %r4831;
	ld.local.v2.u32 	{%r4928, %r4929}, [%rd4+8];
	// inline asm
	prmt.b32 %r4835, %r4929, %r4928, %r7;
	// inline asm
	st.local.u32 	[%rd6+12], %r4835;
	ld.local.u32 	%r4840, [%rd4+8];
	ld.local.u32 	%r4841, [%rd4+4];
	// inline asm
	prmt.b32 %r4839, %r4840, %r4841, %r7;
	// inline asm
	st.local.u32 	[%rd6+8], %r4839;
	ld.local.v2.u32 	{%r4930, %r4931}, [%rd4];
	// inline asm
	prmt.b32 %r4843, %r4931, %r4930, %r7;
	// inline asm
	st.local.u32 	[%rd6+4], %r4843;
	ld.local.u32 	%r4848, [%rd4];
	ld.local.u32 	%r4849, [%rd3+12];
	// inline asm
	prmt.b32 %r4847, %r4848, %r4849, %r7;
	// inline asm
	st.local.u32 	[%rd6], %r4847;
	ld.local.v2.u32 	{%r4932, %r4933}, [%rd3+8];
	// inline asm
	prmt.b32 %r4851, %r4933, %r4932, %r7;
	// inline asm
	st.local.u32 	[%rd5+12], %r4851;
	ld.local.u32 	%r4856, [%rd3+8];
	ld.local.u32 	%r4857, [%rd3+4];
	// inline asm
	prmt.b32 %r4855, %r4856, %r4857, %r7;
	// inline asm
	st.local.u32 	[%rd5+8], %r4855;
	ld.local.v2.u32 	{%r4934, %r4935}, [%rd3];
	// inline asm
	prmt.b32 %r4859, %r4935, %r4934, %r7;
	// inline asm
	st.local.u32 	[%rd5+4], %r4859;
	ld.local.u32 	%r4864, [%rd3];
	ld.local.u32 	%r4865, [%rd2+12];
	// inline asm
	prmt.b32 %r4863, %r4864, %r4865, %r7;
	// inline asm
	st.local.u32 	[%rd5], %r4863;
	ld.local.v2.u32 	{%r4936, %r4937}, [%rd2+8];
	// inline asm
	prmt.b32 %r4867, %r4937, %r4936, %r7;
	// inline asm
	st.local.u32 	[%rd4+12], %r4867;
	ld.local.u32 	%r4872, [%rd2+8];
	ld.local.u32 	%r4873, [%rd2+4];
	// inline asm
	prmt.b32 %r4871, %r4872, %r4873, %r7;
	// inline asm
	st.local.u32 	[%rd4+8], %r4871;
	ld.local.v2.u32 	{%r4938, %r4939}, [%rd2];
	// inline asm
	prmt.b32 %r4875, %r4939, %r4938, %r7;
	// inline asm
	st.local.u32 	[%rd4+4], %r4875;
	ld.local.u32 	%r4880, [%rd2];
	// inline asm
	prmt.b32 %r4879, %r4880, %r7360, %r7;
	// inline asm
	st.local.u32 	[%rd4], %r4879;
	st.local.v4.u32 	[%rd3], {%r7360, %r7360, %r7360, %r7360};
	st.local.v2.u32 	[%rd2+8], {%r7360, %r7360};
	mov.u64 	%rd212, 0;
	st.local.u64 	[%rd2], %rd212;
	mov.u32 	%r7361, %r7360;
	mov.u32 	%r7370, %r7360;
	mov.u32 	%r7371, %r7360;
	mov.u32 	%r7372, %r7360;
	bra.uni 	BB2_82;

BB2_52:
	setp.gt.s32	%p4, %r673, 27;
	@%p4 bra 	BB2_60;

	setp.gt.s32	%p10, %r673, 25;
	@%p10 bra 	BB2_57;

	setp.eq.s32	%p13, %r673, 24;
	@%p13 bra 	BB2_70;
	bra.uni 	BB2_55;

BB2_70:
	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7389, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2004, %r2005}, [%rd9+8];
	// inline asm
	prmt.b32 %r7382, %r2005, %r2004, %r7;
	// inline asm
	ld.local.u32 	%r1872, [%rd9+8];
	ld.local.u32 	%r1873, [%rd9+4];
	// inline asm
	prmt.b32 %r7383, %r1872, %r1873, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2006, %r2007}, [%rd9];
	// inline asm
	prmt.b32 %r7384, %r2007, %r2006, %r7;
	// inline asm
	ld.local.u32 	%r1880, [%rd9];
	ld.local.u32 	%r1881, [%rd8+12];
	// inline asm
	prmt.b32 %r7385, %r1880, %r1881, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2008, %r2009}, [%rd8+8];
	// inline asm
	prmt.b32 %r7378, %r2009, %r2008, %r7;
	// inline asm
	ld.local.u32 	%r1888, [%rd8+8];
	ld.local.u32 	%r1889, [%rd8+4];
	// inline asm
	prmt.b32 %r7379, %r1888, %r1889, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2010, %r2011}, [%rd8];
	// inline asm
	prmt.b32 %r7380, %r2011, %r2010, %r7;
	// inline asm
	ld.local.u32 	%r1896, [%rd8];
	ld.local.u32 	%r1897, [%rd7+12];
	// inline asm
	prmt.b32 %r7381, %r1896, %r1897, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2012, %r2013}, [%rd7+8];
	// inline asm
	prmt.b32 %r7374, %r2013, %r2012, %r7;
	// inline asm
	ld.local.u32 	%r1904, [%rd7+8];
	ld.local.u32 	%r1905, [%rd7+4];
	// inline asm
	prmt.b32 %r7375, %r1904, %r1905, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2014, %r2015}, [%rd7];
	// inline asm
	prmt.b32 %r7376, %r2015, %r2014, %r7;
	// inline asm
	ld.local.u32 	%r1912, [%rd7];
	ld.local.u32 	%r1913, [%rd6+12];
	// inline asm
	prmt.b32 %r7377, %r1912, %r1913, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2016, %r2017}, [%rd6+8];
	// inline asm
	prmt.b32 %r7370, %r2017, %r2016, %r7;
	// inline asm
	ld.local.u32 	%r1920, [%rd6+8];
	ld.local.u32 	%r1921, [%rd6+4];
	// inline asm
	prmt.b32 %r7371, %r1920, %r1921, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2018, %r2019}, [%rd6];
	// inline asm
	prmt.b32 %r7372, %r2019, %r2018, %r7;
	// inline asm
	ld.local.u32 	%r1928, [%rd6];
	ld.local.u32 	%r1929, [%rd5+12];
	// inline asm
	prmt.b32 %r7373, %r1928, %r1929, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2020, %r2021}, [%rd5+8];
	// inline asm
	prmt.b32 %r7366, %r2021, %r2020, %r7;
	// inline asm
	ld.local.u32 	%r1936, [%rd5+8];
	ld.local.u32 	%r1937, [%rd5+4];
	// inline asm
	prmt.b32 %r7367, %r1936, %r1937, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2022, %r2023}, [%rd5];
	// inline asm
	prmt.b32 %r7368, %r2023, %r2022, %r7;
	// inline asm
	ld.local.u32 	%r1944, [%rd5];
	ld.local.u32 	%r1945, [%rd4+12];
	// inline asm
	prmt.b32 %r7369, %r1944, %r1945, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2024, %r2025}, [%rd4+8];
	// inline asm
	prmt.b32 %r7362, %r2025, %r2024, %r7;
	// inline asm
	ld.local.u32 	%r1952, [%rd4+8];
	ld.local.u32 	%r1953, [%rd4+4];
	// inline asm
	prmt.b32 %r7363, %r1952, %r1953, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2026, %r2027}, [%rd4];
	// inline asm
	prmt.b32 %r7364, %r2027, %r2026, %r7;
	// inline asm
	ld.local.u32 	%r1960, [%rd4];
	ld.local.u32 	%r1961, [%rd3+12];
	// inline asm
	prmt.b32 %r7365, %r1960, %r1961, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2028, %r2029}, [%rd3+8];
	// inline asm
	prmt.b32 %r1963, %r2029, %r2028, %r7;
	// inline asm
	st.local.u32 	[%rd9+12], %r1963;
	ld.local.u32 	%r1968, [%rd3+8];
	ld.local.u32 	%r1969, [%rd3+4];
	// inline asm
	prmt.b32 %r1967, %r1968, %r1969, %r7;
	// inline asm
	st.local.u32 	[%rd9+8], %r1967;
	ld.local.v2.u32 	{%r2030, %r2031}, [%rd3];
	// inline asm
	prmt.b32 %r1971, %r2031, %r2030, %r7;
	// inline asm
	st.local.u32 	[%rd9+4], %r1971;
	ld.local.u32 	%r1976, [%rd3];
	ld.local.u32 	%r1977, [%rd2+12];
	// inline asm
	prmt.b32 %r1975, %r1976, %r1977, %r7;
	// inline asm
	st.local.u32 	[%rd9], %r1975;
	ld.local.v2.u32 	{%r2032, %r2033}, [%rd2+8];
	// inline asm
	prmt.b32 %r1979, %r2033, %r2032, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r1979;
	ld.local.u32 	%r1984, [%rd2+8];
	ld.local.u32 	%r1985, [%rd2+4];
	// inline asm
	prmt.b32 %r1983, %r1984, %r1985, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r1983;
	ld.local.v2.u32 	{%r2034, %r2035}, [%rd2];
	// inline asm
	prmt.b32 %r1987, %r2035, %r2034, %r7;
	// inline asm
	st.local.u32 	[%rd8+4], %r1987;
	ld.local.u32 	%r1992, [%rd2];
	// inline asm
	prmt.b32 %r1991, %r1992, %r7360, %r7;
	// inline asm
	st.local.u32 	[%rd8], %r1991;
	st.local.v4.u32 	[%rd7], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd6], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd5], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd4], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd3], {%r7360, %r7360, %r7360, %r7360};
	st.local.v2.u32 	[%rd2+8], {%r7360, %r7360};
	mov.u64 	%rd196, 0;
	st.local.u64 	[%rd2], %rd196;
	mov.u32 	%r7361, %r7360;
	mov.u32 	%r7386, %r7360;
	mov.u32 	%r7387, %r7360;
	mov.u32 	%r7388, %r7360;
	bra.uni 	BB2_86;

BB2_14:
	setp.gt.s32	%p39, %r673, 5;
	@%p39 bra 	BB2_18;

	setp.eq.s32	%p42, %r673, 4;
	@%p42 bra 	BB2_80;
	bra.uni 	BB2_16;

BB2_80:
	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7369, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r5674, %r5675}, [%rd9+8];
	// inline asm
	prmt.b32 %r7362, %r5675, %r5674, %r7;
	// inline asm
	ld.local.u32 	%r5522, [%rd9+8];
	ld.local.u32 	%r5523, [%rd9+4];
	// inline asm
	prmt.b32 %r7363, %r5522, %r5523, %r7;
	// inline asm
	ld.local.v2.u32 	{%r5676, %r5677}, [%rd9];
	// inline asm
	prmt.b32 %r7364, %r5677, %r5676, %r7;
	// inline asm
	ld.local.u32 	%r5530, [%rd9];
	ld.local.u32 	%r5531, [%rd8+12];
	// inline asm
	prmt.b32 %r7365, %r5530, %r5531, %r7;
	// inline asm
	ld.local.v2.u32 	{%r5678, %r5679}, [%rd8+8];
	// inline asm
	prmt.b32 %r5533, %r5679, %r5678, %r7;
	// inline asm
	st.local.u32 	[%rd9+12], %r5533;
	ld.local.u32 	%r5538, [%rd8+8];
	ld.local.u32 	%r5539, [%rd8+4];
	// inline asm
	prmt.b32 %r5537, %r5538, %r5539, %r7;
	// inline asm
	st.local.u32 	[%rd9+8], %r5537;
	ld.local.v2.u32 	{%r5680, %r5681}, [%rd8];
	// inline asm
	prmt.b32 %r5541, %r5681, %r5680, %r7;
	// inline asm
	st.local.u32 	[%rd9+4], %r5541;
	ld.local.u32 	%r5546, [%rd8];
	ld.local.u32 	%r5547, [%rd7+12];
	// inline asm
	prmt.b32 %r5545, %r5546, %r5547, %r7;
	// inline asm
	st.local.u32 	[%rd9], %r5545;
	ld.local.v2.u32 	{%r5682, %r5683}, [%rd7+8];
	// inline asm
	prmt.b32 %r5549, %r5683, %r5682, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r5549;
	ld.local.u32 	%r5554, [%rd7+8];
	ld.local.u32 	%r5555, [%rd7+4];
	// inline asm
	prmt.b32 %r5553, %r5554, %r5555, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r5553;
	ld.local.v2.u32 	{%r5684, %r5685}, [%rd7];
	// inline asm
	prmt.b32 %r5557, %r5685, %r5684, %r7;
	// inline asm
	st.local.u32 	[%rd8+4], %r5557;
	ld.local.u32 	%r5562, [%rd7];
	ld.local.u32 	%r5563, [%rd6+12];
	// inline asm
	prmt.b32 %r5561, %r5562, %r5563, %r7;
	// inline asm
	st.local.u32 	[%rd8], %r5561;
	ld.local.v2.u32 	{%r5686, %r5687}, [%rd6+8];
	// inline asm
	prmt.b32 %r5565, %r5687, %r5686, %r7;
	// inline asm
	st.local.u32 	[%rd7+12], %r5565;
	ld.local.u32 	%r5570, [%rd6+8];
	ld.local.u32 	%r5571, [%rd6+4];
	// inline asm
	prmt.b32 %r5569, %r5570, %r5571, %r7;
	// inline asm
	st.local.u32 	[%rd7+8], %r5569;
	ld.local.v2.u32 	{%r5688, %r5689}, [%rd6];
	// inline asm
	prmt.b32 %r5573, %r5689, %r5688, %r7;
	// inline asm
	st.local.u32 	[%rd7+4], %r5573;
	ld.local.u32 	%r5578, [%rd6];
	ld.local.u32 	%r5579, [%rd5+12];
	// inline asm
	prmt.b32 %r5577, %r5578, %r5579, %r7;
	// inline asm
	st.local.u32 	[%rd7], %r5577;
	ld.local.v2.u32 	{%r5690, %r5691}, [%rd5+8];
	// inline asm
	prmt.b32 %r5581, %r5691, %r5690, %r7;
	// inline asm
	st.local.u32 	[%rd6+12], %r5581;
	ld.local.u32 	%r5586, [%rd5+8];
	ld.local.u32 	%r5587, [%rd5+4];
	// inline asm
	prmt.b32 %r5585, %r5586, %r5587, %r7;
	// inline asm
	st.local.u32 	[%rd6+8], %r5585;
	ld.local.v2.u32 	{%r5692, %r5693}, [%rd5];
	// inline asm
	prmt.b32 %r5589, %r5693, %r5692, %r7;
	// inline asm
	st.local.u32 	[%rd6+4], %r5589;
	ld.local.u32 	%r5594, [%rd5];
	ld.local.u32 	%r5595, [%rd4+12];
	// inline asm
	prmt.b32 %r5593, %r5594, %r5595, %r7;
	// inline asm
	st.local.u32 	[%rd6], %r5593;
	ld.local.v2.u32 	{%r5694, %r5695}, [%rd4+8];
	// inline asm
	prmt.b32 %r5597, %r5695, %r5694, %r7;
	// inline asm
	st.local.u32 	[%rd5+12], %r5597;
	ld.local.u32 	%r5602, [%rd4+8];
	ld.local.u32 	%r5603, [%rd4+4];
	// inline asm
	prmt.b32 %r5601, %r5602, %r5603, %r7;
	// inline asm
	st.local.u32 	[%rd5+8], %r5601;
	ld.local.v2.u32 	{%r5696, %r5697}, [%rd4];
	// inline asm
	prmt.b32 %r5605, %r5697, %r5696, %r7;
	// inline asm
	st.local.u32 	[%rd5+4], %r5605;
	ld.local.u32 	%r5610, [%rd4];
	ld.local.u32 	%r5611, [%rd3+12];
	// inline asm
	prmt.b32 %r5609, %r5610, %r5611, %r7;
	// inline asm
	st.local.u32 	[%rd5], %r5609;
	ld.local.v2.u32 	{%r5698, %r5699}, [%rd3+8];
	// inline asm
	prmt.b32 %r5613, %r5699, %r5698, %r7;
	// inline asm
	st.local.u32 	[%rd4+12], %r5613;
	ld.local.u32 	%r5618, [%rd3+8];
	ld.local.u32 	%r5619, [%rd3+4];
	// inline asm
	prmt.b32 %r5617, %r5618, %r5619, %r7;
	// inline asm
	st.local.u32 	[%rd4+8], %r5617;
	ld.local.v2.u32 	{%r5700, %r5701}, [%rd3];
	// inline asm
	prmt.b32 %r5621, %r5701, %r5700, %r7;
	// inline asm
	st.local.u32 	[%rd4+4], %r5621;
	ld.local.u32 	%r5626, [%rd3];
	ld.local.u32 	%r5627, [%rd2+12];
	// inline asm
	prmt.b32 %r5625, %r5626, %r5627, %r7;
	// inline asm
	st.local.u32 	[%rd4], %r5625;
	ld.local.v2.u32 	{%r5702, %r5703}, [%rd2+8];
	// inline asm
	prmt.b32 %r5629, %r5703, %r5702, %r7;
	// inline asm
	st.local.u32 	[%rd3+12], %r5629;
	ld.local.u32 	%r5634, [%rd2+8];
	ld.local.u32 	%r5635, [%rd2+4];
	// inline asm
	prmt.b32 %r5633, %r5634, %r5635, %r7;
	// inline asm
	st.local.u32 	[%rd3+8], %r5633;
	ld.local.v2.u32 	{%r5704, %r5705}, [%rd2];
	// inline asm
	prmt.b32 %r5637, %r5705, %r5704, %r7;
	// inline asm
	st.local.u32 	[%rd3+4], %r5637;
	ld.local.u32 	%r5642, [%rd2];
	// inline asm
	prmt.b32 %r5641, %r5642, %r7360, %r7;
	// inline asm
	st.local.u32 	[%rd3], %r5641;
	st.local.v2.u32 	[%rd2+8], {%r7360, %r7360};
	mov.u64 	%rd216, 0;
	st.local.u64 	[%rd2], %rd216;
	mov.u32 	%r7361, %r7360;
	mov.u32 	%r7366, %r7360;
	mov.u32 	%r7367, %r7360;
	mov.u32 	%r7368, %r7360;
	bra.uni 	BB2_81;

BB2_45:
	setp.gt.s32	%p16, %r673, 21;
	@%p16 bra 	BB2_49;

	setp.eq.s32	%p19, %r673, 20;
	@%p19 bra 	BB2_72;
	bra.uni 	BB2_47;

BB2_72:
	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7385, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2706, %r2707}, [%rd9+8];
	// inline asm
	prmt.b32 %r7378, %r2707, %r2706, %r7;
	// inline asm
	ld.local.u32 	%r2570, [%rd9+8];
	ld.local.u32 	%r2571, [%rd9+4];
	// inline asm
	prmt.b32 %r7379, %r2570, %r2571, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2708, %r2709}, [%rd9];
	// inline asm
	prmt.b32 %r7380, %r2709, %r2708, %r7;
	// inline asm
	ld.local.u32 	%r2578, [%rd9];
	ld.local.u32 	%r2579, [%rd8+12];
	// inline asm
	prmt.b32 %r7381, %r2578, %r2579, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2710, %r2711}, [%rd8+8];
	// inline asm
	prmt.b32 %r7374, %r2711, %r2710, %r7;
	// inline asm
	ld.local.u32 	%r2586, [%rd8+8];
	ld.local.u32 	%r2587, [%rd8+4];
	// inline asm
	prmt.b32 %r7375, %r2586, %r2587, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2712, %r2713}, [%rd8];
	// inline asm
	prmt.b32 %r7376, %r2713, %r2712, %r7;
	// inline asm
	ld.local.u32 	%r2594, [%rd8];
	ld.local.u32 	%r2595, [%rd7+12];
	// inline asm
	prmt.b32 %r7377, %r2594, %r2595, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2714, %r2715}, [%rd7+8];
	// inline asm
	prmt.b32 %r7370, %r2715, %r2714, %r7;
	// inline asm
	ld.local.u32 	%r2602, [%rd7+8];
	ld.local.u32 	%r2603, [%rd7+4];
	// inline asm
	prmt.b32 %r7371, %r2602, %r2603, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2716, %r2717}, [%rd7];
	// inline asm
	prmt.b32 %r7372, %r2717, %r2716, %r7;
	// inline asm
	ld.local.u32 	%r2610, [%rd7];
	ld.local.u32 	%r2611, [%rd6+12];
	// inline asm
	prmt.b32 %r7373, %r2610, %r2611, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2718, %r2719}, [%rd6+8];
	// inline asm
	prmt.b32 %r7366, %r2719, %r2718, %r7;
	// inline asm
	ld.local.u32 	%r2618, [%rd6+8];
	ld.local.u32 	%r2619, [%rd6+4];
	// inline asm
	prmt.b32 %r7367, %r2618, %r2619, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2720, %r2721}, [%rd6];
	// inline asm
	prmt.b32 %r7368, %r2721, %r2720, %r7;
	// inline asm
	ld.local.u32 	%r2626, [%rd6];
	ld.local.u32 	%r2627, [%rd5+12];
	// inline asm
	prmt.b32 %r7369, %r2626, %r2627, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2722, %r2723}, [%rd5+8];
	// inline asm
	prmt.b32 %r7362, %r2723, %r2722, %r7;
	// inline asm
	ld.local.u32 	%r2634, [%rd5+8];
	ld.local.u32 	%r2635, [%rd5+4];
	// inline asm
	prmt.b32 %r7363, %r2634, %r2635, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2724, %r2725}, [%rd5];
	// inline asm
	prmt.b32 %r7364, %r2725, %r2724, %r7;
	// inline asm
	ld.local.u32 	%r2642, [%rd5];
	ld.local.u32 	%r2643, [%rd4+12];
	// inline asm
	prmt.b32 %r7365, %r2642, %r2643, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2726, %r2727}, [%rd4+8];
	// inline asm
	prmt.b32 %r2645, %r2727, %r2726, %r7;
	// inline asm
	st.local.u32 	[%rd9+12], %r2645;
	ld.local.u32 	%r2650, [%rd4+8];
	ld.local.u32 	%r2651, [%rd4+4];
	// inline asm
	prmt.b32 %r2649, %r2650, %r2651, %r7;
	// inline asm
	st.local.u32 	[%rd9+8], %r2649;
	ld.local.v2.u32 	{%r2728, %r2729}, [%rd4];
	// inline asm
	prmt.b32 %r2653, %r2729, %r2728, %r7;
	// inline asm
	st.local.u32 	[%rd9+4], %r2653;
	ld.local.u32 	%r2658, [%rd4];
	ld.local.u32 	%r2659, [%rd3+12];
	// inline asm
	prmt.b32 %r2657, %r2658, %r2659, %r7;
	// inline asm
	st.local.u32 	[%rd9], %r2657;
	ld.local.v2.u32 	{%r2730, %r2731}, [%rd3+8];
	// inline asm
	prmt.b32 %r2661, %r2731, %r2730, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r2661;
	ld.local.u32 	%r2666, [%rd3+8];
	ld.local.u32 	%r2667, [%rd3+4];
	// inline asm
	prmt.b32 %r2665, %r2666, %r2667, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r2665;
	ld.local.v2.u32 	{%r2732, %r2733}, [%rd3];
	// inline asm
	prmt.b32 %r2669, %r2733, %r2732, %r7;
	// inline asm
	st.local.u32 	[%rd8+4], %r2669;
	ld.local.u32 	%r2674, [%rd3];
	ld.local.u32 	%r2675, [%rd2+12];
	// inline asm
	prmt.b32 %r2673, %r2674, %r2675, %r7;
	// inline asm
	st.local.u32 	[%rd8], %r2673;
	ld.local.v2.u32 	{%r2734, %r2735}, [%rd2+8];
	// inline asm
	prmt.b32 %r2677, %r2735, %r2734, %r7;
	// inline asm
	st.local.u32 	[%rd7+12], %r2677;
	ld.local.u32 	%r2682, [%rd2+8];
	ld.local.u32 	%r2683, [%rd2+4];
	// inline asm
	prmt.b32 %r2681, %r2682, %r2683, %r7;
	// inline asm
	st.local.u32 	[%rd7+8], %r2681;
	ld.local.v2.u32 	{%r2736, %r2737}, [%rd2];
	// inline asm
	prmt.b32 %r2685, %r2737, %r2736, %r7;
	// inline asm
	st.local.u32 	[%rd7+4], %r2685;
	ld.local.u32 	%r2690, [%rd2];
	// inline asm
	prmt.b32 %r2689, %r2690, %r7360, %r7;
	// inline asm
	st.local.u32 	[%rd7], %r2689;
	st.local.v4.u32 	[%rd6], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd5], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd4], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd3], {%r7360, %r7360, %r7360, %r7360};
	st.local.v2.u32 	[%rd2+8], {%r7360, %r7360};
	mov.u64 	%rd200, 0;
	st.local.u64 	[%rd2], %rd200;
	mov.u32 	%r7361, %r7360;
	mov.u32 	%r7382, %r7360;
	mov.u32 	%r7383, %r7360;
	mov.u32 	%r7384, %r7360;
	bra.uni 	BB2_85;

BB2_29:
	setp.gt.s32	%p28, %r673, 13;
	@%p28 bra 	BB2_33;

	setp.eq.s32	%p31, %r673, 12;
	@%p31 bra 	BB2_76;
	bra.uni 	BB2_31;

BB2_76:
	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7377, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r4158, %r4159}, [%rd9+8];
	// inline asm
	prmt.b32 %r7370, %r4159, %r4158, %r7;
	// inline asm
	ld.local.u32 	%r4014, [%rd9+8];
	ld.local.u32 	%r4015, [%rd9+4];
	// inline asm
	prmt.b32 %r7371, %r4014, %r4015, %r7;
	// inline asm
	ld.local.v2.u32 	{%r4160, %r4161}, [%rd9];
	// inline asm
	prmt.b32 %r7372, %r4161, %r4160, %r7;
	// inline asm
	ld.local.u32 	%r4022, [%rd9];
	ld.local.u32 	%r4023, [%rd8+12];
	// inline asm
	prmt.b32 %r7373, %r4022, %r4023, %r7;
	// inline asm
	ld.local.v2.u32 	{%r4162, %r4163}, [%rd8+8];
	// inline asm
	prmt.b32 %r7366, %r4163, %r4162, %r7;
	// inline asm
	ld.local.u32 	%r4030, [%rd8+8];
	ld.local.u32 	%r4031, [%rd8+4];
	// inline asm
	prmt.b32 %r7367, %r4030, %r4031, %r7;
	// inline asm
	ld.local.v2.u32 	{%r4164, %r4165}, [%rd8];
	// inline asm
	prmt.b32 %r7368, %r4165, %r4164, %r7;
	// inline asm
	ld.local.u32 	%r4038, [%rd8];
	ld.local.u32 	%r4039, [%rd7+12];
	// inline asm
	prmt.b32 %r7369, %r4038, %r4039, %r7;
	// inline asm
	ld.local.v2.u32 	{%r4166, %r4167}, [%rd7+8];
	// inline asm
	prmt.b32 %r7362, %r4167, %r4166, %r7;
	// inline asm
	ld.local.u32 	%r4046, [%rd7+8];
	ld.local.u32 	%r4047, [%rd7+4];
	// inline asm
	prmt.b32 %r7363, %r4046, %r4047, %r7;
	// inline asm
	ld.local.v2.u32 	{%r4168, %r4169}, [%rd7];
	// inline asm
	prmt.b32 %r7364, %r4169, %r4168, %r7;
	// inline asm
	ld.local.u32 	%r4054, [%rd7];
	ld.local.u32 	%r4055, [%rd6+12];
	// inline asm
	prmt.b32 %r7365, %r4054, %r4055, %r7;
	// inline asm
	ld.local.v2.u32 	{%r4170, %r4171}, [%rd6+8];
	// inline asm
	prmt.b32 %r4057, %r4171, %r4170, %r7;
	// inline asm
	st.local.u32 	[%rd9+12], %r4057;
	ld.local.u32 	%r4062, [%rd6+8];
	ld.local.u32 	%r4063, [%rd6+4];
	// inline asm
	prmt.b32 %r4061, %r4062, %r4063, %r7;
	// inline asm
	st.local.u32 	[%rd9+8], %r4061;
	ld.local.v2.u32 	{%r4172, %r4173}, [%rd6];
	// inline asm
	prmt.b32 %r4065, %r4173, %r4172, %r7;
	// inline asm
	st.local.u32 	[%rd9+4], %r4065;
	ld.local.u32 	%r4070, [%rd6];
	ld.local.u32 	%r4071, [%rd5+12];
	// inline asm
	prmt.b32 %r4069, %r4070, %r4071, %r7;
	// inline asm
	st.local.u32 	[%rd9], %r4069;
	ld.local.v2.u32 	{%r4174, %r4175}, [%rd5+8];
	// inline asm
	prmt.b32 %r4073, %r4175, %r4174, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r4073;
	ld.local.u32 	%r4078, [%rd5+8];
	ld.local.u32 	%r4079, [%rd5+4];
	// inline asm
	prmt.b32 %r4077, %r4078, %r4079, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r4077;
	ld.local.v2.u32 	{%r4176, %r4177}, [%rd5];
	// inline asm
	prmt.b32 %r4081, %r4177, %r4176, %r7;
	// inline asm
	st.local.u32 	[%rd8+4], %r4081;
	ld.local.u32 	%r4086, [%rd5];
	ld.local.u32 	%r4087, [%rd4+12];
	// inline asm
	prmt.b32 %r4085, %r4086, %r4087, %r7;
	// inline asm
	st.local.u32 	[%rd8], %r4085;
	ld.local.v2.u32 	{%r4178, %r4179}, [%rd4+8];
	// inline asm
	prmt.b32 %r4089, %r4179, %r4178, %r7;
	// inline asm
	st.local.u32 	[%rd7+12], %r4089;
	ld.local.u32 	%r4094, [%rd4+8];
	ld.local.u32 	%r4095, [%rd4+4];
	// inline asm
	prmt.b32 %r4093, %r4094, %r4095, %r7;
	// inline asm
	st.local.u32 	[%rd7+8], %r4093;
	ld.local.v2.u32 	{%r4180, %r4181}, [%rd4];
	// inline asm
	prmt.b32 %r4097, %r4181, %r4180, %r7;
	// inline asm
	st.local.u32 	[%rd7+4], %r4097;
	ld.local.u32 	%r4102, [%rd4];
	ld.local.u32 	%r4103, [%rd3+12];
	// inline asm
	prmt.b32 %r4101, %r4102, %r4103, %r7;
	// inline asm
	st.local.u32 	[%rd7], %r4101;
	ld.local.v2.u32 	{%r4182, %r4183}, [%rd3+8];
	// inline asm
	prmt.b32 %r4105, %r4183, %r4182, %r7;
	// inline asm
	st.local.u32 	[%rd6+12], %r4105;
	ld.local.u32 	%r4110, [%rd3+8];
	ld.local.u32 	%r4111, [%rd3+4];
	// inline asm
	prmt.b32 %r4109, %r4110, %r4111, %r7;
	// inline asm
	st.local.u32 	[%rd6+8], %r4109;
	ld.local.v2.u32 	{%r4184, %r4185}, [%rd3];
	// inline asm
	prmt.b32 %r4113, %r4185, %r4184, %r7;
	// inline asm
	st.local.u32 	[%rd6+4], %r4113;
	ld.local.u32 	%r4118, [%rd3];
	ld.local.u32 	%r4119, [%rd2+12];
	// inline asm
	prmt.b32 %r4117, %r4118, %r4119, %r7;
	// inline asm
	st.local.u32 	[%rd6], %r4117;
	ld.local.v2.u32 	{%r4186, %r4187}, [%rd2+8];
	// inline asm
	prmt.b32 %r4121, %r4187, %r4186, %r7;
	// inline asm
	st.local.u32 	[%rd5+12], %r4121;
	ld.local.u32 	%r4126, [%rd2+8];
	ld.local.u32 	%r4127, [%rd2+4];
	// inline asm
	prmt.b32 %r4125, %r4126, %r4127, %r7;
	// inline asm
	st.local.u32 	[%rd5+8], %r4125;
	ld.local.v2.u32 	{%r4188, %r4189}, [%rd2];
	// inline asm
	prmt.b32 %r4129, %r4189, %r4188, %r7;
	// inline asm
	st.local.u32 	[%rd5+4], %r4129;
	ld.local.u32 	%r4134, [%rd2];
	// inline asm
	prmt.b32 %r4133, %r4134, %r7360, %r7;
	// inline asm
	st.local.u32 	[%rd5], %r4133;
	st.local.v4.u32 	[%rd4], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd3], {%r7360, %r7360, %r7360, %r7360};
	st.local.v2.u32 	[%rd2+8], {%r7360, %r7360};
	mov.u64 	%rd208, 0;
	st.local.u64 	[%rd2], %rd208;
	mov.u32 	%r7361, %r7360;
	mov.u32 	%r7374, %r7360;
	mov.u32 	%r7375, %r7360;
	mov.u32 	%r7376, %r7360;
	bra.uni 	BB2_83;

BB2_60:
	setp.gt.s32	%p5, %r673, 29;
	@%p5 bra 	BB2_64;

	setp.eq.s32	%p8, %r673, 28;
	@%p8 bra 	BB2_68;
	bra.uni 	BB2_62;

BB2_68:
	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7393, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1318, %r1319}, [%rd9+8];
	// inline asm
	prmt.b32 %r7386, %r1319, %r1318, %r7;
	// inline asm
	ld.local.u32 	%r1190, [%rd9+8];
	ld.local.u32 	%r1191, [%rd9+4];
	// inline asm
	prmt.b32 %r7387, %r1190, %r1191, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1320, %r1321}, [%rd9];
	// inline asm
	prmt.b32 %r7388, %r1321, %r1320, %r7;
	// inline asm
	ld.local.u32 	%r1198, [%rd9];
	ld.local.u32 	%r1199, [%rd8+12];
	// inline asm
	prmt.b32 %r7389, %r1198, %r1199, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1322, %r1323}, [%rd8+8];
	// inline asm
	prmt.b32 %r7382, %r1323, %r1322, %r7;
	// inline asm
	ld.local.u32 	%r1206, [%rd8+8];
	ld.local.u32 	%r1207, [%rd8+4];
	// inline asm
	prmt.b32 %r7383, %r1206, %r1207, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1324, %r1325}, [%rd8];
	// inline asm
	prmt.b32 %r7384, %r1325, %r1324, %r7;
	// inline asm
	ld.local.u32 	%r1214, [%rd8];
	ld.local.u32 	%r1215, [%rd7+12];
	// inline asm
	prmt.b32 %r7385, %r1214, %r1215, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1326, %r1327}, [%rd7+8];
	// inline asm
	prmt.b32 %r7378, %r1327, %r1326, %r7;
	// inline asm
	ld.local.u32 	%r1222, [%rd7+8];
	ld.local.u32 	%r1223, [%rd7+4];
	// inline asm
	prmt.b32 %r7379, %r1222, %r1223, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1328, %r1329}, [%rd7];
	// inline asm
	prmt.b32 %r7380, %r1329, %r1328, %r7;
	// inline asm
	ld.local.u32 	%r1230, [%rd7];
	ld.local.u32 	%r1231, [%rd6+12];
	// inline asm
	prmt.b32 %r7381, %r1230, %r1231, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1330, %r1331}, [%rd6+8];
	// inline asm
	prmt.b32 %r7374, %r1331, %r1330, %r7;
	// inline asm
	ld.local.u32 	%r1238, [%rd6+8];
	ld.local.u32 	%r1239, [%rd6+4];
	// inline asm
	prmt.b32 %r7375, %r1238, %r1239, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1332, %r1333}, [%rd6];
	// inline asm
	prmt.b32 %r7376, %r1333, %r1332, %r7;
	// inline asm
	ld.local.u32 	%r1246, [%rd6];
	ld.local.u32 	%r1247, [%rd5+12];
	// inline asm
	prmt.b32 %r7377, %r1246, %r1247, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1334, %r1335}, [%rd5+8];
	// inline asm
	prmt.b32 %r7370, %r1335, %r1334, %r7;
	// inline asm
	ld.local.u32 	%r1254, [%rd5+8];
	ld.local.u32 	%r1255, [%rd5+4];
	// inline asm
	prmt.b32 %r7371, %r1254, %r1255, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1336, %r1337}, [%rd5];
	// inline asm
	prmt.b32 %r7372, %r1337, %r1336, %r7;
	// inline asm
	ld.local.u32 	%r1262, [%rd5];
	ld.local.u32 	%r1263, [%rd4+12];
	// inline asm
	prmt.b32 %r7373, %r1262, %r1263, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1338, %r1339}, [%rd4+8];
	// inline asm
	prmt.b32 %r7366, %r1339, %r1338, %r7;
	// inline asm
	ld.local.u32 	%r1270, [%rd4+8];
	ld.local.u32 	%r1271, [%rd4+4];
	// inline asm
	prmt.b32 %r7367, %r1270, %r1271, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1340, %r1341}, [%rd4];
	// inline asm
	prmt.b32 %r7368, %r1341, %r1340, %r7;
	// inline asm
	ld.local.u32 	%r1278, [%rd4];
	ld.local.u32 	%r1279, [%rd3+12];
	// inline asm
	prmt.b32 %r7369, %r1278, %r1279, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1342, %r1343}, [%rd3+8];
	// inline asm
	prmt.b32 %r7362, %r1343, %r1342, %r7;
	// inline asm
	ld.local.u32 	%r1286, [%rd3+8];
	ld.local.u32 	%r1287, [%rd3+4];
	// inline asm
	prmt.b32 %r7363, %r1286, %r1287, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1344, %r1345}, [%rd3];
	// inline asm
	prmt.b32 %r7364, %r1345, %r1344, %r7;
	// inline asm
	ld.local.u32 	%r1294, [%rd3];
	ld.local.u32 	%r1295, [%rd2+12];
	// inline asm
	prmt.b32 %r7365, %r1294, %r1295, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1346, %r1347}, [%rd2+8];
	// inline asm
	prmt.b32 %r1297, %r1347, %r1346, %r7;
	// inline asm
	st.local.u32 	[%rd9+12], %r1297;
	ld.local.u32 	%r1302, [%rd2+8];
	ld.local.u32 	%r1303, [%rd2+4];
	// inline asm
	prmt.b32 %r1301, %r1302, %r1303, %r7;
	// inline asm
	st.local.u32 	[%rd9+8], %r1301;
	ld.local.v2.u32 	{%r1348, %r1349}, [%rd2];
	// inline asm
	prmt.b32 %r1305, %r1349, %r1348, %r7;
	// inline asm
	st.local.u32 	[%rd9+4], %r1305;
	ld.local.u32 	%r1310, [%rd2];
	// inline asm
	prmt.b32 %r1309, %r1310, %r7360, %r7;
	// inline asm
	st.local.u32 	[%rd9], %r1309;
	st.local.v4.u32 	[%rd8], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd7], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd6], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd5], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd4], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd3], {%r7360, %r7360, %r7360, %r7360};
	st.local.v2.u32 	[%rd2+8], {%r7360, %r7360};
	mov.u64 	%rd192, 0;
	st.local.u64 	[%rd2], %rd192;
	mov.u32 	%r7361, %r7360;
	mov.u32 	%r7390, %r7360;
	mov.u32 	%r7391, %r7360;
	mov.u32 	%r7392, %r7360;
	bra.uni 	BB2_89;

BB2_10:
	setp.eq.s32	%p45, %r673, 2;
	@%p45 bra 	BB2_87;
	bra.uni 	BB2_11;

BB2_87:
	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7363, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r6063, %r6064}, [%rd9+8];
	// inline asm
	prmt.b32 %r7364, %r6064, %r6063, %r7;
	// inline asm
	ld.local.u32 	%r5909, [%rd9+8];
	ld.local.u32 	%r5910, [%rd9+4];
	// inline asm
	prmt.b32 %r7365, %r5909, %r5910, %r7;
	// inline asm
	ld.local.v2.u32 	{%r6065, %r6066}, [%rd9];
	// inline asm
	prmt.b32 %r5912, %r6066, %r6065, %r7;
	// inline asm
	st.local.u32 	[%rd9+12], %r5912;
	ld.local.u32 	%r5917, [%rd9];
	ld.local.u32 	%r5918, [%rd8+12];
	// inline asm
	prmt.b32 %r5916, %r5917, %r5918, %r7;
	// inline asm
	st.local.u32 	[%rd9+8], %r5916;
	ld.local.v2.u32 	{%r6067, %r6068}, [%rd8+8];
	// inline asm
	prmt.b32 %r5920, %r6068, %r6067, %r7;
	// inline asm
	st.local.u32 	[%rd9+4], %r5920;
	ld.local.u32 	%r5925, [%rd8+8];
	ld.local.u32 	%r5926, [%rd8+4];
	// inline asm
	prmt.b32 %r5924, %r5925, %r5926, %r7;
	// inline asm
	st.local.u32 	[%rd9], %r5924;
	ld.local.v2.u32 	{%r6069, %r6070}, [%rd8];
	// inline asm
	prmt.b32 %r5928, %r6070, %r6069, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r5928;
	ld.local.u32 	%r5933, [%rd8];
	ld.local.u32 	%r5934, [%rd7+12];
	// inline asm
	prmt.b32 %r5932, %r5933, %r5934, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r5932;
	ld.local.v2.u32 	{%r6071, %r6072}, [%rd7+8];
	// inline asm
	prmt.b32 %r5936, %r6072, %r6071, %r7;
	// inline asm
	st.local.u32 	[%rd8+4], %r5936;
	ld.local.u32 	%r5941, [%rd7+8];
	ld.local.u32 	%r5942, [%rd7+4];
	// inline asm
	prmt.b32 %r5940, %r5941, %r5942, %r7;
	// inline asm
	st.local.u32 	[%rd8], %r5940;
	ld.local.v2.u32 	{%r6073, %r6074}, [%rd7];
	// inline asm
	prmt.b32 %r5944, %r6074, %r6073, %r7;
	// inline asm
	st.local.u32 	[%rd7+12], %r5944;
	ld.local.u32 	%r5949, [%rd7];
	ld.local.u32 	%r5950, [%rd6+12];
	// inline asm
	prmt.b32 %r5948, %r5949, %r5950, %r7;
	// inline asm
	st.local.u32 	[%rd7+8], %r5948;
	ld.local.v2.u32 	{%r6075, %r6076}, [%rd6+8];
	// inline asm
	prmt.b32 %r5952, %r6076, %r6075, %r7;
	// inline asm
	st.local.u32 	[%rd7+4], %r5952;
	ld.local.u32 	%r5957, [%rd6+8];
	ld.local.u32 	%r5958, [%rd6+4];
	// inline asm
	prmt.b32 %r5956, %r5957, %r5958, %r7;
	// inline asm
	st.local.u32 	[%rd7], %r5956;
	ld.local.v2.u32 	{%r6077, %r6078}, [%rd6];
	// inline asm
	prmt.b32 %r5960, %r6078, %r6077, %r7;
	// inline asm
	st.local.u32 	[%rd6+12], %r5960;
	ld.local.u32 	%r5965, [%rd6];
	ld.local.u32 	%r5966, [%rd5+12];
	// inline asm
	prmt.b32 %r5964, %r5965, %r5966, %r7;
	// inline asm
	st.local.u32 	[%rd6+8], %r5964;
	ld.local.v2.u32 	{%r6079, %r6080}, [%rd5+8];
	// inline asm
	prmt.b32 %r5968, %r6080, %r6079, %r7;
	// inline asm
	st.local.u32 	[%rd6+4], %r5968;
	ld.local.u32 	%r5973, [%rd5+8];
	ld.local.u32 	%r5974, [%rd5+4];
	// inline asm
	prmt.b32 %r5972, %r5973, %r5974, %r7;
	// inline asm
	st.local.u32 	[%rd6], %r5972;
	ld.local.v2.u32 	{%r6081, %r6082}, [%rd5];
	// inline asm
	prmt.b32 %r5976, %r6082, %r6081, %r7;
	// inline asm
	st.local.u32 	[%rd5+12], %r5976;
	ld.local.u32 	%r5981, [%rd5];
	ld.local.u32 	%r5982, [%rd4+12];
	// inline asm
	prmt.b32 %r5980, %r5981, %r5982, %r7;
	// inline asm
	st.local.u32 	[%rd5+8], %r5980;
	ld.local.v2.u32 	{%r6083, %r6084}, [%rd4+8];
	// inline asm
	prmt.b32 %r5984, %r6084, %r6083, %r7;
	// inline asm
	st.local.u32 	[%rd5+4], %r5984;
	ld.local.u32 	%r5989, [%rd4+8];
	ld.local.u32 	%r5990, [%rd4+4];
	// inline asm
	prmt.b32 %r5988, %r5989, %r5990, %r7;
	// inline asm
	st.local.u32 	[%rd5], %r5988;
	ld.local.v2.u32 	{%r6085, %r6086}, [%rd4];
	// inline asm
	prmt.b32 %r5992, %r6086, %r6085, %r7;
	// inline asm
	st.local.u32 	[%rd4+12], %r5992;
	ld.local.u32 	%r5997, [%rd4];
	ld.local.u32 	%r5998, [%rd3+12];
	// inline asm
	prmt.b32 %r5996, %r5997, %r5998, %r7;
	// inline asm
	st.local.u32 	[%rd4+8], %r5996;
	ld.local.v2.u32 	{%r6087, %r6088}, [%rd3+8];
	// inline asm
	prmt.b32 %r6000, %r6088, %r6087, %r7;
	// inline asm
	st.local.u32 	[%rd4+4], %r6000;
	ld.local.u32 	%r6005, [%rd3+8];
	ld.local.u32 	%r6006, [%rd3+4];
	// inline asm
	prmt.b32 %r6004, %r6005, %r6006, %r7;
	// inline asm
	st.local.u32 	[%rd4], %r6004;
	ld.local.v2.u32 	{%r6089, %r6090}, [%rd3];
	// inline asm
	prmt.b32 %r6008, %r6090, %r6089, %r7;
	// inline asm
	st.local.u32 	[%rd3+12], %r6008;
	ld.local.u32 	%r6013, [%rd3];
	ld.local.u32 	%r6014, [%rd2+12];
	// inline asm
	prmt.b32 %r6012, %r6013, %r6014, %r7;
	// inline asm
	st.local.u32 	[%rd3+8], %r6012;
	ld.local.v2.u32 	{%r6091, %r6092}, [%rd2+8];
	// inline asm
	prmt.b32 %r6016, %r6092, %r6091, %r7;
	// inline asm
	st.local.u32 	[%rd3+4], %r6016;
	ld.local.u32 	%r6021, [%rd2+8];
	ld.local.u32 	%r6022, [%rd2+4];
	// inline asm
	prmt.b32 %r6020, %r6021, %r6022, %r7;
	// inline asm
	st.local.u32 	[%rd3], %r6020;
	ld.local.v2.u32 	{%r6093, %r6094}, [%rd2];
	// inline asm
	prmt.b32 %r6024, %r6094, %r6093, %r7;
	// inline asm
	st.local.u32 	[%rd2+12], %r6024;
	ld.local.u32 	%r6029, [%rd2];
	// inline asm
	prmt.b32 %r6028, %r6029, %r7360, %r7;
	// inline asm
	st.local.u32 	[%rd2+8], %r6028;
	mov.u64 	%rd218, 0;
	st.local.u64 	[%rd2], %rd218;
	mov.u32 	%r7361, %r7360;
	mov.u32 	%r7362, %r7360;
	bra.uni 	BB2_13;

BB2_42:
	setp.eq.s32	%p22, %r673, 18;
	@%p22 bra 	BB2_73;
	bra.uni 	BB2_43;

BB2_73:
	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7379, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3063, %r3064}, [%rd9+8];
	// inline asm
	prmt.b32 %r7380, %r3064, %r3063, %r7;
	// inline asm
	ld.local.u32 	%r2925, [%rd9+8];
	ld.local.u32 	%r2926, [%rd9+4];
	// inline asm
	prmt.b32 %r7381, %r2925, %r2926, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3065, %r3066}, [%rd9];
	// inline asm
	prmt.b32 %r7374, %r3066, %r3065, %r7;
	// inline asm
	ld.local.u32 	%r2933, [%rd9];
	ld.local.u32 	%r2934, [%rd8+12];
	// inline asm
	prmt.b32 %r7375, %r2933, %r2934, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3067, %r3068}, [%rd8+8];
	// inline asm
	prmt.b32 %r7376, %r3068, %r3067, %r7;
	// inline asm
	ld.local.u32 	%r2941, [%rd8+8];
	ld.local.u32 	%r2942, [%rd8+4];
	// inline asm
	prmt.b32 %r7377, %r2941, %r2942, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3069, %r3070}, [%rd8];
	// inline asm
	prmt.b32 %r7370, %r3070, %r3069, %r7;
	// inline asm
	ld.local.u32 	%r2949, [%rd8];
	ld.local.u32 	%r2950, [%rd7+12];
	// inline asm
	prmt.b32 %r7371, %r2949, %r2950, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3071, %r3072}, [%rd7+8];
	// inline asm
	prmt.b32 %r7372, %r3072, %r3071, %r7;
	// inline asm
	ld.local.u32 	%r2957, [%rd7+8];
	ld.local.u32 	%r2958, [%rd7+4];
	// inline asm
	prmt.b32 %r7373, %r2957, %r2958, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3073, %r3074}, [%rd7];
	// inline asm
	prmt.b32 %r7366, %r3074, %r3073, %r7;
	// inline asm
	ld.local.u32 	%r2965, [%rd7];
	ld.local.u32 	%r2966, [%rd6+12];
	// inline asm
	prmt.b32 %r7367, %r2965, %r2966, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3075, %r3076}, [%rd6+8];
	// inline asm
	prmt.b32 %r7368, %r3076, %r3075, %r7;
	// inline asm
	ld.local.u32 	%r2973, [%rd6+8];
	ld.local.u32 	%r2974, [%rd6+4];
	// inline asm
	prmt.b32 %r7369, %r2973, %r2974, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3077, %r3078}, [%rd6];
	// inline asm
	prmt.b32 %r7362, %r3078, %r3077, %r7;
	// inline asm
	ld.local.u32 	%r2981, [%rd6];
	ld.local.u32 	%r2982, [%rd5+12];
	// inline asm
	prmt.b32 %r7363, %r2981, %r2982, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3079, %r3080}, [%rd5+8];
	// inline asm
	prmt.b32 %r7364, %r3080, %r3079, %r7;
	// inline asm
	ld.local.u32 	%r2989, [%rd5+8];
	ld.local.u32 	%r2990, [%rd5+4];
	// inline asm
	prmt.b32 %r7365, %r2989, %r2990, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3081, %r3082}, [%rd5];
	// inline asm
	prmt.b32 %r2992, %r3082, %r3081, %r7;
	// inline asm
	st.local.u32 	[%rd9+12], %r2992;
	ld.local.u32 	%r2997, [%rd5];
	ld.local.u32 	%r2998, [%rd4+12];
	// inline asm
	prmt.b32 %r2996, %r2997, %r2998, %r7;
	// inline asm
	st.local.u32 	[%rd9+8], %r2996;
	ld.local.v2.u32 	{%r3083, %r3084}, [%rd4+8];
	// inline asm
	prmt.b32 %r3000, %r3084, %r3083, %r7;
	// inline asm
	st.local.u32 	[%rd9+4], %r3000;
	ld.local.u32 	%r3005, [%rd4+8];
	ld.local.u32 	%r3006, [%rd4+4];
	// inline asm
	prmt.b32 %r3004, %r3005, %r3006, %r7;
	// inline asm
	st.local.u32 	[%rd9], %r3004;
	ld.local.v2.u32 	{%r3085, %r3086}, [%rd4];
	// inline asm
	prmt.b32 %r3008, %r3086, %r3085, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r3008;
	ld.local.u32 	%r3013, [%rd4];
	ld.local.u32 	%r3014, [%rd3+12];
	// inline asm
	prmt.b32 %r3012, %r3013, %r3014, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r3012;
	ld.local.v2.u32 	{%r3087, %r3088}, [%rd3+8];
	// inline asm
	prmt.b32 %r3016, %r3088, %r3087, %r7;
	// inline asm
	st.local.u32 	[%rd8+4], %r3016;
	ld.local.u32 	%r3021, [%rd3+8];
	ld.local.u32 	%r3022, [%rd3+4];
	// inline asm
	prmt.b32 %r3020, %r3021, %r3022, %r7;
	// inline asm
	st.local.u32 	[%rd8], %r3020;
	ld.local.v2.u32 	{%r3089, %r3090}, [%rd3];
	// inline asm
	prmt.b32 %r3024, %r3090, %r3089, %r7;
	// inline asm
	st.local.u32 	[%rd7+12], %r3024;
	ld.local.u32 	%r3029, [%rd3];
	ld.local.u32 	%r3030, [%rd2+12];
	// inline asm
	prmt.b32 %r3028, %r3029, %r3030, %r7;
	// inline asm
	st.local.u32 	[%rd7+8], %r3028;
	ld.local.v2.u32 	{%r3091, %r3092}, [%rd2+8];
	// inline asm
	prmt.b32 %r3032, %r3092, %r3091, %r7;
	// inline asm
	st.local.u32 	[%rd7+4], %r3032;
	ld.local.u32 	%r3037, [%rd2+8];
	ld.local.u32 	%r3038, [%rd2+4];
	// inline asm
	prmt.b32 %r3036, %r3037, %r3038, %r7;
	// inline asm
	st.local.u32 	[%rd7], %r3036;
	ld.local.v2.u32 	{%r3093, %r3094}, [%rd2];
	// inline asm
	prmt.b32 %r3040, %r3094, %r3093, %r7;
	// inline asm
	st.local.u32 	[%rd6+12], %r3040;
	ld.local.u32 	%r3045, [%rd2];
	// inline asm
	prmt.b32 %r3044, %r3045, %r7360, %r7;
	// inline asm
	st.local.u32 	[%rd6+8], %r3044;
	st.local.v2.u32 	[%rd6], {%r7360, %r7360};
	st.local.u32 	[%rd5+12], %r7360;
	st.local.u32 	[%rd5+8], %r7360;
	st.local.u32 	[%rd5+4], %r7360;
	st.local.u32 	[%rd5], %r7360;
	st.local.u32 	[%rd4+12], %r7360;
	st.local.u32 	[%rd4+8], %r7360;
	st.local.u32 	[%rd4+4], %r7360;
	st.local.u32 	[%rd4], %r7360;
	st.local.u32 	[%rd3+12], %r7360;
	st.local.u32 	[%rd3+8], %r7360;
	st.local.u32 	[%rd3+4], %r7360;
	st.local.u32 	[%rd3], %r7360;
	st.local.u32 	[%rd2+12], %r7360;
	st.local.u32 	[%rd2+8], %r7360;
	mov.u64 	%rd202, 0;
	st.local.u32 	[%rd2+4], %rd202;
	st.local.u32 	[%rd2], %rd202;
	mov.u32 	%r7361, %r7360;
	mov.u32 	%r7378, %r7360;
	bra.uni 	BB2_84;

BB2_26:
	setp.eq.s32	%p34, %r673, 10;
	@%p34 bra 	BB2_77;
	bra.uni 	BB2_27;

BB2_77:
	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7371, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r4531, %r4532}, [%rd9+8];
	// inline asm
	prmt.b32 %r7372, %r4532, %r4531, %r7;
	// inline asm
	ld.local.u32 	%r4385, [%rd9+8];
	ld.local.u32 	%r4386, [%rd9+4];
	// inline asm
	prmt.b32 %r7373, %r4385, %r4386, %r7;
	// inline asm
	ld.local.v2.u32 	{%r4533, %r4534}, [%rd9];
	// inline asm
	prmt.b32 %r7366, %r4534, %r4533, %r7;
	// inline asm
	ld.local.u32 	%r4393, [%rd9];
	ld.local.u32 	%r4394, [%rd8+12];
	// inline asm
	prmt.b32 %r7367, %r4393, %r4394, %r7;
	// inline asm
	ld.local.v2.u32 	{%r4535, %r4536}, [%rd8+8];
	// inline asm
	prmt.b32 %r7368, %r4536, %r4535, %r7;
	// inline asm
	ld.local.u32 	%r4401, [%rd8+8];
	ld.local.u32 	%r4402, [%rd8+4];
	// inline asm
	prmt.b32 %r7369, %r4401, %r4402, %r7;
	// inline asm
	ld.local.v2.u32 	{%r4537, %r4538}, [%rd8];
	// inline asm
	prmt.b32 %r7362, %r4538, %r4537, %r7;
	// inline asm
	ld.local.u32 	%r4409, [%rd8];
	ld.local.u32 	%r4410, [%rd7+12];
	// inline asm
	prmt.b32 %r7363, %r4409, %r4410, %r7;
	// inline asm
	ld.local.v2.u32 	{%r4539, %r4540}, [%rd7+8];
	// inline asm
	prmt.b32 %r7364, %r4540, %r4539, %r7;
	// inline asm
	ld.local.u32 	%r4417, [%rd7+8];
	ld.local.u32 	%r4418, [%rd7+4];
	// inline asm
	prmt.b32 %r7365, %r4417, %r4418, %r7;
	// inline asm
	ld.local.v2.u32 	{%r4541, %r4542}, [%rd7];
	// inline asm
	prmt.b32 %r4420, %r4542, %r4541, %r7;
	// inline asm
	st.local.u32 	[%rd9+12], %r4420;
	ld.local.u32 	%r4425, [%rd7];
	ld.local.u32 	%r4426, [%rd6+12];
	// inline asm
	prmt.b32 %r4424, %r4425, %r4426, %r7;
	// inline asm
	st.local.u32 	[%rd9+8], %r4424;
	ld.local.v2.u32 	{%r4543, %r4544}, [%rd6+8];
	// inline asm
	prmt.b32 %r4428, %r4544, %r4543, %r7;
	// inline asm
	st.local.u32 	[%rd9+4], %r4428;
	ld.local.u32 	%r4433, [%rd6+8];
	ld.local.u32 	%r4434, [%rd6+4];
	// inline asm
	prmt.b32 %r4432, %r4433, %r4434, %r7;
	// inline asm
	st.local.u32 	[%rd9], %r4432;
	ld.local.v2.u32 	{%r4545, %r4546}, [%rd6];
	// inline asm
	prmt.b32 %r4436, %r4546, %r4545, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r4436;
	ld.local.u32 	%r4441, [%rd6];
	ld.local.u32 	%r4442, [%rd5+12];
	// inline asm
	prmt.b32 %r4440, %r4441, %r4442, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r4440;
	ld.local.v2.u32 	{%r4547, %r4548}, [%rd5+8];
	// inline asm
	prmt.b32 %r4444, %r4548, %r4547, %r7;
	// inline asm
	st.local.u32 	[%rd8+4], %r4444;
	ld.local.u32 	%r4449, [%rd5+8];
	ld.local.u32 	%r4450, [%rd5+4];
	// inline asm
	prmt.b32 %r4448, %r4449, %r4450, %r7;
	// inline asm
	st.local.u32 	[%rd8], %r4448;
	ld.local.v2.u32 	{%r4549, %r4550}, [%rd5];
	// inline asm
	prmt.b32 %r4452, %r4550, %r4549, %r7;
	// inline asm
	st.local.u32 	[%rd7+12], %r4452;
	ld.local.u32 	%r4457, [%rd5];
	ld.local.u32 	%r4458, [%rd4+12];
	// inline asm
	prmt.b32 %r4456, %r4457, %r4458, %r7;
	// inline asm
	st.local.u32 	[%rd7+8], %r4456;
	ld.local.v2.u32 	{%r4551, %r4552}, [%rd4+8];
	// inline asm
	prmt.b32 %r4460, %r4552, %r4551, %r7;
	// inline asm
	st.local.u32 	[%rd7+4], %r4460;
	ld.local.u32 	%r4465, [%rd4+8];
	ld.local.u32 	%r4466, [%rd4+4];
	// inline asm
	prmt.b32 %r4464, %r4465, %r4466, %r7;
	// inline asm
	st.local.u32 	[%rd7], %r4464;
	ld.local.v2.u32 	{%r4553, %r4554}, [%rd4];
	// inline asm
	prmt.b32 %r4468, %r4554, %r4553, %r7;
	// inline asm
	st.local.u32 	[%rd6+12], %r4468;
	ld.local.u32 	%r4473, [%rd4];
	ld.local.u32 	%r4474, [%rd3+12];
	// inline asm
	prmt.b32 %r4472, %r4473, %r4474, %r7;
	// inline asm
	st.local.u32 	[%rd6+8], %r4472;
	ld.local.v2.u32 	{%r4555, %r4556}, [%rd3+8];
	// inline asm
	prmt.b32 %r4476, %r4556, %r4555, %r7;
	// inline asm
	st.local.u32 	[%rd6+4], %r4476;
	ld.local.u32 	%r4481, [%rd3+8];
	ld.local.u32 	%r4482, [%rd3+4];
	// inline asm
	prmt.b32 %r4480, %r4481, %r4482, %r7;
	// inline asm
	st.local.u32 	[%rd6], %r4480;
	ld.local.v2.u32 	{%r4557, %r4558}, [%rd3];
	// inline asm
	prmt.b32 %r4484, %r4558, %r4557, %r7;
	// inline asm
	st.local.u32 	[%rd5+12], %r4484;
	ld.local.u32 	%r4489, [%rd3];
	ld.local.u32 	%r4490, [%rd2+12];
	// inline asm
	prmt.b32 %r4488, %r4489, %r4490, %r7;
	// inline asm
	st.local.u32 	[%rd5+8], %r4488;
	ld.local.v2.u32 	{%r4559, %r4560}, [%rd2+8];
	// inline asm
	prmt.b32 %r4492, %r4560, %r4559, %r7;
	// inline asm
	st.local.u32 	[%rd5+4], %r4492;
	ld.local.u32 	%r4497, [%rd2+8];
	ld.local.u32 	%r4498, [%rd2+4];
	// inline asm
	prmt.b32 %r4496, %r4497, %r4498, %r7;
	// inline asm
	st.local.u32 	[%rd5], %r4496;
	ld.local.v2.u32 	{%r4561, %r4562}, [%rd2];
	// inline asm
	prmt.b32 %r4500, %r4562, %r4561, %r7;
	// inline asm
	st.local.u32 	[%rd4+12], %r4500;
	ld.local.u32 	%r4505, [%rd2];
	// inline asm
	prmt.b32 %r4504, %r4505, %r7360, %r7;
	// inline asm
	st.local.u32 	[%rd4+8], %r4504;
	st.local.v2.u32 	[%rd4], {%r7360, %r7360};
	st.local.u32 	[%rd3+12], %r7360;
	st.local.u32 	[%rd3+8], %r7360;
	st.local.u32 	[%rd3+4], %r7360;
	st.local.u32 	[%rd3], %r7360;
	st.local.u32 	[%rd2+12], %r7360;
	st.local.u32 	[%rd2+8], %r7360;
	mov.u64 	%rd210, 0;
	st.local.u32 	[%rd2+4], %rd210;
	st.local.u32 	[%rd2], %rd210;
	mov.u32 	%r7361, %r7360;
	mov.u32 	%r7370, %r7360;
	bra.uni 	BB2_82;

BB2_57:
	setp.eq.s32	%p11, %r673, 26;
	@%p11 bra 	BB2_69;
	bra.uni 	BB2_58;

BB2_69:
	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7387, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1659, %r1660}, [%rd9+8];
	// inline asm
	prmt.b32 %r7388, %r1660, %r1659, %r7;
	// inline asm
	ld.local.u32 	%r1529, [%rd9+8];
	ld.local.u32 	%r1530, [%rd9+4];
	// inline asm
	prmt.b32 %r7389, %r1529, %r1530, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1661, %r1662}, [%rd9];
	// inline asm
	prmt.b32 %r7382, %r1662, %r1661, %r7;
	// inline asm
	ld.local.u32 	%r1537, [%rd9];
	ld.local.u32 	%r1538, [%rd8+12];
	// inline asm
	prmt.b32 %r7383, %r1537, %r1538, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1663, %r1664}, [%rd8+8];
	// inline asm
	prmt.b32 %r7384, %r1664, %r1663, %r7;
	// inline asm
	ld.local.u32 	%r1545, [%rd8+8];
	ld.local.u32 	%r1546, [%rd8+4];
	// inline asm
	prmt.b32 %r7385, %r1545, %r1546, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1665, %r1666}, [%rd8];
	// inline asm
	prmt.b32 %r7378, %r1666, %r1665, %r7;
	// inline asm
	ld.local.u32 	%r1553, [%rd8];
	ld.local.u32 	%r1554, [%rd7+12];
	// inline asm
	prmt.b32 %r7379, %r1553, %r1554, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1667, %r1668}, [%rd7+8];
	// inline asm
	prmt.b32 %r7380, %r1668, %r1667, %r7;
	// inline asm
	ld.local.u32 	%r1561, [%rd7+8];
	ld.local.u32 	%r1562, [%rd7+4];
	// inline asm
	prmt.b32 %r7381, %r1561, %r1562, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1669, %r1670}, [%rd7];
	// inline asm
	prmt.b32 %r7374, %r1670, %r1669, %r7;
	// inline asm
	ld.local.u32 	%r1569, [%rd7];
	ld.local.u32 	%r1570, [%rd6+12];
	// inline asm
	prmt.b32 %r7375, %r1569, %r1570, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1671, %r1672}, [%rd6+8];
	// inline asm
	prmt.b32 %r7376, %r1672, %r1671, %r7;
	// inline asm
	ld.local.u32 	%r1577, [%rd6+8];
	ld.local.u32 	%r1578, [%rd6+4];
	// inline asm
	prmt.b32 %r7377, %r1577, %r1578, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1673, %r1674}, [%rd6];
	// inline asm
	prmt.b32 %r7370, %r1674, %r1673, %r7;
	// inline asm
	ld.local.u32 	%r1585, [%rd6];
	ld.local.u32 	%r1586, [%rd5+12];
	// inline asm
	prmt.b32 %r7371, %r1585, %r1586, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1675, %r1676}, [%rd5+8];
	// inline asm
	prmt.b32 %r7372, %r1676, %r1675, %r7;
	// inline asm
	ld.local.u32 	%r1593, [%rd5+8];
	ld.local.u32 	%r1594, [%rd5+4];
	// inline asm
	prmt.b32 %r7373, %r1593, %r1594, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1677, %r1678}, [%rd5];
	// inline asm
	prmt.b32 %r7366, %r1678, %r1677, %r7;
	// inline asm
	ld.local.u32 	%r1601, [%rd5];
	ld.local.u32 	%r1602, [%rd4+12];
	// inline asm
	prmt.b32 %r7367, %r1601, %r1602, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1679, %r1680}, [%rd4+8];
	// inline asm
	prmt.b32 %r7368, %r1680, %r1679, %r7;
	// inline asm
	ld.local.u32 	%r1609, [%rd4+8];
	ld.local.u32 	%r1610, [%rd4+4];
	// inline asm
	prmt.b32 %r7369, %r1609, %r1610, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1681, %r1682}, [%rd4];
	// inline asm
	prmt.b32 %r7362, %r1682, %r1681, %r7;
	// inline asm
	ld.local.u32 	%r1617, [%rd4];
	ld.local.u32 	%r1618, [%rd3+12];
	// inline asm
	prmt.b32 %r7363, %r1617, %r1618, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1683, %r1684}, [%rd3+8];
	// inline asm
	prmt.b32 %r7364, %r1684, %r1683, %r7;
	// inline asm
	ld.local.u32 	%r1625, [%rd3+8];
	ld.local.u32 	%r1626, [%rd3+4];
	// inline asm
	prmt.b32 %r7365, %r1625, %r1626, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1685, %r1686}, [%rd3];
	// inline asm
	prmt.b32 %r1628, %r1686, %r1685, %r7;
	// inline asm
	st.local.u32 	[%rd9+12], %r1628;
	ld.local.u32 	%r1633, [%rd3];
	ld.local.u32 	%r1634, [%rd2+12];
	// inline asm
	prmt.b32 %r1632, %r1633, %r1634, %r7;
	// inline asm
	st.local.u32 	[%rd9+8], %r1632;
	ld.local.v2.u32 	{%r1687, %r1688}, [%rd2+8];
	// inline asm
	prmt.b32 %r1636, %r1688, %r1687, %r7;
	// inline asm
	st.local.u32 	[%rd9+4], %r1636;
	ld.local.u32 	%r1641, [%rd2+8];
	ld.local.u32 	%r1642, [%rd2+4];
	// inline asm
	prmt.b32 %r1640, %r1641, %r1642, %r7;
	// inline asm
	st.local.u32 	[%rd9], %r1640;
	ld.local.v2.u32 	{%r1689, %r1690}, [%rd2];
	// inline asm
	prmt.b32 %r1644, %r1690, %r1689, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r1644;
	ld.local.u32 	%r1649, [%rd2];
	// inline asm
	prmt.b32 %r1648, %r1649, %r7360, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r1648;
	st.local.v2.u32 	[%rd8], {%r7360, %r7360};
	st.local.u32 	[%rd7+12], %r7360;
	st.local.u32 	[%rd7+8], %r7360;
	st.local.u32 	[%rd7+4], %r7360;
	st.local.u32 	[%rd7], %r7360;
	st.local.u32 	[%rd6+12], %r7360;
	st.local.u32 	[%rd6+8], %r7360;
	st.local.u32 	[%rd6+4], %r7360;
	st.local.u32 	[%rd6], %r7360;
	st.local.u32 	[%rd5+12], %r7360;
	st.local.u32 	[%rd5+8], %r7360;
	st.local.u32 	[%rd5+4], %r7360;
	st.local.u32 	[%rd5], %r7360;
	st.local.u32 	[%rd4+12], %r7360;
	st.local.u32 	[%rd4+8], %r7360;
	st.local.u32 	[%rd4+4], %r7360;
	st.local.u32 	[%rd4], %r7360;
	st.local.u32 	[%rd3+12], %r7360;
	st.local.u32 	[%rd3+8], %r7360;
	st.local.u32 	[%rd3+4], %r7360;
	st.local.u32 	[%rd3], %r7360;
	st.local.u32 	[%rd2+12], %r7360;
	st.local.u32 	[%rd2+8], %r7360;
	mov.u64 	%rd194, 0;
	st.local.u32 	[%rd2+4], %rd194;
	st.local.u32 	[%rd2], %rd194;
	mov.u32 	%r7361, %r7360;
	mov.u32 	%r7386, %r7360;
	bra.uni 	BB2_86;

BB2_18:
	setp.eq.s32	%p40, %r673, 6;
	@%p40 bra 	BB2_79;
	bra.uni 	BB2_19;

BB2_79:
	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7367, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r5289, %r5290}, [%rd9+8];
	// inline asm
	prmt.b32 %r7368, %r5290, %r5289, %r7;
	// inline asm
	ld.local.u32 	%r5139, [%rd9+8];
	ld.local.u32 	%r5140, [%rd9+4];
	// inline asm
	prmt.b32 %r7369, %r5139, %r5140, %r7;
	// inline asm
	ld.local.v2.u32 	{%r5291, %r5292}, [%rd9];
	// inline asm
	prmt.b32 %r7362, %r5292, %r5291, %r7;
	// inline asm
	ld.local.u32 	%r5147, [%rd9];
	ld.local.u32 	%r5148, [%rd8+12];
	// inline asm
	prmt.b32 %r7363, %r5147, %r5148, %r7;
	// inline asm
	ld.local.v2.u32 	{%r5293, %r5294}, [%rd8+8];
	// inline asm
	prmt.b32 %r7364, %r5294, %r5293, %r7;
	// inline asm
	ld.local.u32 	%r5155, [%rd8+8];
	ld.local.u32 	%r5156, [%rd8+4];
	// inline asm
	prmt.b32 %r7365, %r5155, %r5156, %r7;
	// inline asm
	ld.local.v2.u32 	{%r5295, %r5296}, [%rd8];
	// inline asm
	prmt.b32 %r5158, %r5296, %r5295, %r7;
	// inline asm
	st.local.u32 	[%rd9+12], %r5158;
	ld.local.u32 	%r5163, [%rd8];
	ld.local.u32 	%r5164, [%rd7+12];
	// inline asm
	prmt.b32 %r5162, %r5163, %r5164, %r7;
	// inline asm
	st.local.u32 	[%rd9+8], %r5162;
	ld.local.v2.u32 	{%r5297, %r5298}, [%rd7+8];
	// inline asm
	prmt.b32 %r5166, %r5298, %r5297, %r7;
	// inline asm
	st.local.u32 	[%rd9+4], %r5166;
	ld.local.u32 	%r5171, [%rd7+8];
	ld.local.u32 	%r5172, [%rd7+4];
	// inline asm
	prmt.b32 %r5170, %r5171, %r5172, %r7;
	// inline asm
	st.local.u32 	[%rd9], %r5170;
	ld.local.v2.u32 	{%r5299, %r5300}, [%rd7];
	// inline asm
	prmt.b32 %r5174, %r5300, %r5299, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r5174;
	ld.local.u32 	%r5179, [%rd7];
	ld.local.u32 	%r5180, [%rd6+12];
	// inline asm
	prmt.b32 %r5178, %r5179, %r5180, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r5178;
	ld.local.v2.u32 	{%r5301, %r5302}, [%rd6+8];
	// inline asm
	prmt.b32 %r5182, %r5302, %r5301, %r7;
	// inline asm
	st.local.u32 	[%rd8+4], %r5182;
	ld.local.u32 	%r5187, [%rd6+8];
	ld.local.u32 	%r5188, [%rd6+4];
	// inline asm
	prmt.b32 %r5186, %r5187, %r5188, %r7;
	// inline asm
	st.local.u32 	[%rd8], %r5186;
	ld.local.v2.u32 	{%r5303, %r5304}, [%rd6];
	// inline asm
	prmt.b32 %r5190, %r5304, %r5303, %r7;
	// inline asm
	st.local.u32 	[%rd7+12], %r5190;
	ld.local.u32 	%r5195, [%rd6];
	ld.local.u32 	%r5196, [%rd5+12];
	// inline asm
	prmt.b32 %r5194, %r5195, %r5196, %r7;
	// inline asm
	st.local.u32 	[%rd7+8], %r5194;
	ld.local.v2.u32 	{%r5305, %r5306}, [%rd5+8];
	// inline asm
	prmt.b32 %r5198, %r5306, %r5305, %r7;
	// inline asm
	st.local.u32 	[%rd7+4], %r5198;
	ld.local.u32 	%r5203, [%rd5+8];
	ld.local.u32 	%r5204, [%rd5+4];
	// inline asm
	prmt.b32 %r5202, %r5203, %r5204, %r7;
	// inline asm
	st.local.u32 	[%rd7], %r5202;
	ld.local.v2.u32 	{%r5307, %r5308}, [%rd5];
	// inline asm
	prmt.b32 %r5206, %r5308, %r5307, %r7;
	// inline asm
	st.local.u32 	[%rd6+12], %r5206;
	ld.local.u32 	%r5211, [%rd5];
	ld.local.u32 	%r5212, [%rd4+12];
	// inline asm
	prmt.b32 %r5210, %r5211, %r5212, %r7;
	// inline asm
	st.local.u32 	[%rd6+8], %r5210;
	ld.local.v2.u32 	{%r5309, %r5310}, [%rd4+8];
	// inline asm
	prmt.b32 %r5214, %r5310, %r5309, %r7;
	// inline asm
	st.local.u32 	[%rd6+4], %r5214;
	ld.local.u32 	%r5219, [%rd4+8];
	ld.local.u32 	%r5220, [%rd4+4];
	// inline asm
	prmt.b32 %r5218, %r5219, %r5220, %r7;
	// inline asm
	st.local.u32 	[%rd6], %r5218;
	ld.local.v2.u32 	{%r5311, %r5312}, [%rd4];
	// inline asm
	prmt.b32 %r5222, %r5312, %r5311, %r7;
	// inline asm
	st.local.u32 	[%rd5+12], %r5222;
	ld.local.u32 	%r5227, [%rd4];
	ld.local.u32 	%r5228, [%rd3+12];
	// inline asm
	prmt.b32 %r5226, %r5227, %r5228, %r7;
	// inline asm
	st.local.u32 	[%rd5+8], %r5226;
	ld.local.v2.u32 	{%r5313, %r5314}, [%rd3+8];
	// inline asm
	prmt.b32 %r5230, %r5314, %r5313, %r7;
	// inline asm
	st.local.u32 	[%rd5+4], %r5230;
	ld.local.u32 	%r5235, [%rd3+8];
	ld.local.u32 	%r5236, [%rd3+4];
	// inline asm
	prmt.b32 %r5234, %r5235, %r5236, %r7;
	// inline asm
	st.local.u32 	[%rd5], %r5234;
	ld.local.v2.u32 	{%r5315, %r5316}, [%rd3];
	// inline asm
	prmt.b32 %r5238, %r5316, %r5315, %r7;
	// inline asm
	st.local.u32 	[%rd4+12], %r5238;
	ld.local.u32 	%r5243, [%rd3];
	ld.local.u32 	%r5244, [%rd2+12];
	// inline asm
	prmt.b32 %r5242, %r5243, %r5244, %r7;
	// inline asm
	st.local.u32 	[%rd4+8], %r5242;
	ld.local.v2.u32 	{%r5317, %r5318}, [%rd2+8];
	// inline asm
	prmt.b32 %r5246, %r5318, %r5317, %r7;
	// inline asm
	st.local.u32 	[%rd4+4], %r5246;
	ld.local.u32 	%r5251, [%rd2+8];
	ld.local.u32 	%r5252, [%rd2+4];
	// inline asm
	prmt.b32 %r5250, %r5251, %r5252, %r7;
	// inline asm
	st.local.u32 	[%rd4], %r5250;
	ld.local.v2.u32 	{%r5319, %r5320}, [%rd2];
	// inline asm
	prmt.b32 %r5254, %r5320, %r5319, %r7;
	// inline asm
	st.local.u32 	[%rd3+12], %r5254;
	ld.local.u32 	%r5259, [%rd2];
	// inline asm
	prmt.b32 %r5258, %r5259, %r7360, %r7;
	// inline asm
	st.local.u32 	[%rd3+8], %r5258;
	st.local.v2.u32 	[%rd3], {%r7360, %r7360};
	st.local.u32 	[%rd2+12], %r7360;
	st.local.u32 	[%rd2+8], %r7360;
	mov.u64 	%rd214, 0;
	st.local.u32 	[%rd2+4], %rd214;
	st.local.u32 	[%rd2], %rd214;
	mov.u32 	%r7361, %r7360;
	mov.u32 	%r7366, %r7360;
	bra.uni 	BB2_81;

BB2_49:
	setp.eq.s32	%p17, %r673, 22;
	@%p17 bra 	BB2_71;
	bra.uni 	BB2_50;

BB2_71:
	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7383, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2353, %r2354}, [%rd9+8];
	// inline asm
	prmt.b32 %r7384, %r2354, %r2353, %r7;
	// inline asm
	ld.local.u32 	%r2219, [%rd9+8];
	ld.local.u32 	%r2220, [%rd9+4];
	// inline asm
	prmt.b32 %r7385, %r2219, %r2220, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2355, %r2356}, [%rd9];
	// inline asm
	prmt.b32 %r7378, %r2356, %r2355, %r7;
	// inline asm
	ld.local.u32 	%r2227, [%rd9];
	ld.local.u32 	%r2228, [%rd8+12];
	// inline asm
	prmt.b32 %r7379, %r2227, %r2228, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2357, %r2358}, [%rd8+8];
	// inline asm
	prmt.b32 %r7380, %r2358, %r2357, %r7;
	// inline asm
	ld.local.u32 	%r2235, [%rd8+8];
	ld.local.u32 	%r2236, [%rd8+4];
	// inline asm
	prmt.b32 %r7381, %r2235, %r2236, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2359, %r2360}, [%rd8];
	// inline asm
	prmt.b32 %r7374, %r2360, %r2359, %r7;
	// inline asm
	ld.local.u32 	%r2243, [%rd8];
	ld.local.u32 	%r2244, [%rd7+12];
	// inline asm
	prmt.b32 %r7375, %r2243, %r2244, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2361, %r2362}, [%rd7+8];
	// inline asm
	prmt.b32 %r7376, %r2362, %r2361, %r7;
	// inline asm
	ld.local.u32 	%r2251, [%rd7+8];
	ld.local.u32 	%r2252, [%rd7+4];
	// inline asm
	prmt.b32 %r7377, %r2251, %r2252, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2363, %r2364}, [%rd7];
	// inline asm
	prmt.b32 %r7370, %r2364, %r2363, %r7;
	// inline asm
	ld.local.u32 	%r2259, [%rd7];
	ld.local.u32 	%r2260, [%rd6+12];
	// inline asm
	prmt.b32 %r7371, %r2259, %r2260, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2365, %r2366}, [%rd6+8];
	// inline asm
	prmt.b32 %r7372, %r2366, %r2365, %r7;
	// inline asm
	ld.local.u32 	%r2267, [%rd6+8];
	ld.local.u32 	%r2268, [%rd6+4];
	// inline asm
	prmt.b32 %r7373, %r2267, %r2268, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2367, %r2368}, [%rd6];
	// inline asm
	prmt.b32 %r7366, %r2368, %r2367, %r7;
	// inline asm
	ld.local.u32 	%r2275, [%rd6];
	ld.local.u32 	%r2276, [%rd5+12];
	// inline asm
	prmt.b32 %r7367, %r2275, %r2276, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2369, %r2370}, [%rd5+8];
	// inline asm
	prmt.b32 %r7368, %r2370, %r2369, %r7;
	// inline asm
	ld.local.u32 	%r2283, [%rd5+8];
	ld.local.u32 	%r2284, [%rd5+4];
	// inline asm
	prmt.b32 %r7369, %r2283, %r2284, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2371, %r2372}, [%rd5];
	// inline asm
	prmt.b32 %r7362, %r2372, %r2371, %r7;
	// inline asm
	ld.local.u32 	%r2291, [%rd5];
	ld.local.u32 	%r2292, [%rd4+12];
	// inline asm
	prmt.b32 %r7363, %r2291, %r2292, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2373, %r2374}, [%rd4+8];
	// inline asm
	prmt.b32 %r7364, %r2374, %r2373, %r7;
	// inline asm
	ld.local.u32 	%r2299, [%rd4+8];
	ld.local.u32 	%r2300, [%rd4+4];
	// inline asm
	prmt.b32 %r7365, %r2299, %r2300, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2375, %r2376}, [%rd4];
	// inline asm
	prmt.b32 %r2302, %r2376, %r2375, %r7;
	// inline asm
	st.local.u32 	[%rd9+12], %r2302;
	ld.local.u32 	%r2307, [%rd4];
	ld.local.u32 	%r2308, [%rd3+12];
	// inline asm
	prmt.b32 %r2306, %r2307, %r2308, %r7;
	// inline asm
	st.local.u32 	[%rd9+8], %r2306;
	ld.local.v2.u32 	{%r2377, %r2378}, [%rd3+8];
	// inline asm
	prmt.b32 %r2310, %r2378, %r2377, %r7;
	// inline asm
	st.local.u32 	[%rd9+4], %r2310;
	ld.local.u32 	%r2315, [%rd3+8];
	ld.local.u32 	%r2316, [%rd3+4];
	// inline asm
	prmt.b32 %r2314, %r2315, %r2316, %r7;
	// inline asm
	st.local.u32 	[%rd9], %r2314;
	ld.local.v2.u32 	{%r2379, %r2380}, [%rd3];
	// inline asm
	prmt.b32 %r2318, %r2380, %r2379, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r2318;
	ld.local.u32 	%r2323, [%rd3];
	ld.local.u32 	%r2324, [%rd2+12];
	// inline asm
	prmt.b32 %r2322, %r2323, %r2324, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r2322;
	ld.local.v2.u32 	{%r2381, %r2382}, [%rd2+8];
	// inline asm
	prmt.b32 %r2326, %r2382, %r2381, %r7;
	// inline asm
	st.local.u32 	[%rd8+4], %r2326;
	ld.local.u32 	%r2331, [%rd2+8];
	ld.local.u32 	%r2332, [%rd2+4];
	// inline asm
	prmt.b32 %r2330, %r2331, %r2332, %r7;
	// inline asm
	st.local.u32 	[%rd8], %r2330;
	ld.local.v2.u32 	{%r2383, %r2384}, [%rd2];
	// inline asm
	prmt.b32 %r2334, %r2384, %r2383, %r7;
	// inline asm
	st.local.u32 	[%rd7+12], %r2334;
	ld.local.u32 	%r2339, [%rd2];
	// inline asm
	prmt.b32 %r2338, %r2339, %r7360, %r7;
	// inline asm
	st.local.u32 	[%rd7+8], %r2338;
	st.local.v2.u32 	[%rd7], {%r7360, %r7360};
	st.local.u32 	[%rd6+12], %r7360;
	st.local.u32 	[%rd6+8], %r7360;
	st.local.u32 	[%rd6+4], %r7360;
	st.local.u32 	[%rd6], %r7360;
	st.local.u32 	[%rd5+12], %r7360;
	st.local.u32 	[%rd5+8], %r7360;
	st.local.u32 	[%rd5+4], %r7360;
	st.local.u32 	[%rd5], %r7360;
	st.local.u32 	[%rd4+12], %r7360;
	st.local.u32 	[%rd4+8], %r7360;
	st.local.u32 	[%rd4+4], %r7360;
	st.local.u32 	[%rd4], %r7360;
	st.local.u32 	[%rd3+12], %r7360;
	st.local.u32 	[%rd3+8], %r7360;
	st.local.u32 	[%rd3+4], %r7360;
	st.local.u32 	[%rd3], %r7360;
	st.local.u32 	[%rd2+12], %r7360;
	st.local.u32 	[%rd2+8], %r7360;
	mov.u64 	%rd198, 0;
	st.local.u32 	[%rd2+4], %rd198;
	st.local.u32 	[%rd2], %rd198;
	mov.u32 	%r7361, %r7360;
	mov.u32 	%r7382, %r7360;
	bra.uni 	BB2_85;

BB2_33:
	setp.eq.s32	%p29, %r673, 14;
	@%p29 bra 	BB2_75;
	bra.uni 	BB2_34;

BB2_75:
	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7375, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3789, %r3790}, [%rd9+8];
	// inline asm
	prmt.b32 %r7376, %r3790, %r3789, %r7;
	// inline asm
	ld.local.u32 	%r3647, [%rd9+8];
	ld.local.u32 	%r3648, [%rd9+4];
	// inline asm
	prmt.b32 %r7377, %r3647, %r3648, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3791, %r3792}, [%rd9];
	// inline asm
	prmt.b32 %r7370, %r3792, %r3791, %r7;
	// inline asm
	ld.local.u32 	%r3655, [%rd9];
	ld.local.u32 	%r3656, [%rd8+12];
	// inline asm
	prmt.b32 %r7371, %r3655, %r3656, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3793, %r3794}, [%rd8+8];
	// inline asm
	prmt.b32 %r7372, %r3794, %r3793, %r7;
	// inline asm
	ld.local.u32 	%r3663, [%rd8+8];
	ld.local.u32 	%r3664, [%rd8+4];
	// inline asm
	prmt.b32 %r7373, %r3663, %r3664, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3795, %r3796}, [%rd8];
	// inline asm
	prmt.b32 %r7366, %r3796, %r3795, %r7;
	// inline asm
	ld.local.u32 	%r3671, [%rd8];
	ld.local.u32 	%r3672, [%rd7+12];
	// inline asm
	prmt.b32 %r7367, %r3671, %r3672, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3797, %r3798}, [%rd7+8];
	// inline asm
	prmt.b32 %r7368, %r3798, %r3797, %r7;
	// inline asm
	ld.local.u32 	%r3679, [%rd7+8];
	ld.local.u32 	%r3680, [%rd7+4];
	// inline asm
	prmt.b32 %r7369, %r3679, %r3680, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3799, %r3800}, [%rd7];
	// inline asm
	prmt.b32 %r7362, %r3800, %r3799, %r7;
	// inline asm
	ld.local.u32 	%r3687, [%rd7];
	ld.local.u32 	%r3688, [%rd6+12];
	// inline asm
	prmt.b32 %r7363, %r3687, %r3688, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3801, %r3802}, [%rd6+8];
	// inline asm
	prmt.b32 %r7364, %r3802, %r3801, %r7;
	// inline asm
	ld.local.u32 	%r3695, [%rd6+8];
	ld.local.u32 	%r3696, [%rd6+4];
	// inline asm
	prmt.b32 %r7365, %r3695, %r3696, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3803, %r3804}, [%rd6];
	// inline asm
	prmt.b32 %r3698, %r3804, %r3803, %r7;
	// inline asm
	st.local.u32 	[%rd9+12], %r3698;
	ld.local.u32 	%r3703, [%rd6];
	ld.local.u32 	%r3704, [%rd5+12];
	// inline asm
	prmt.b32 %r3702, %r3703, %r3704, %r7;
	// inline asm
	st.local.u32 	[%rd9+8], %r3702;
	ld.local.v2.u32 	{%r3805, %r3806}, [%rd5+8];
	// inline asm
	prmt.b32 %r3706, %r3806, %r3805, %r7;
	// inline asm
	st.local.u32 	[%rd9+4], %r3706;
	ld.local.u32 	%r3711, [%rd5+8];
	ld.local.u32 	%r3712, [%rd5+4];
	// inline asm
	prmt.b32 %r3710, %r3711, %r3712, %r7;
	// inline asm
	st.local.u32 	[%rd9], %r3710;
	ld.local.v2.u32 	{%r3807, %r3808}, [%rd5];
	// inline asm
	prmt.b32 %r3714, %r3808, %r3807, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r3714;
	ld.local.u32 	%r3719, [%rd5];
	ld.local.u32 	%r3720, [%rd4+12];
	// inline asm
	prmt.b32 %r3718, %r3719, %r3720, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r3718;
	ld.local.v2.u32 	{%r3809, %r3810}, [%rd4+8];
	// inline asm
	prmt.b32 %r3722, %r3810, %r3809, %r7;
	// inline asm
	st.local.u32 	[%rd8+4], %r3722;
	ld.local.u32 	%r3727, [%rd4+8];
	ld.local.u32 	%r3728, [%rd4+4];
	// inline asm
	prmt.b32 %r3726, %r3727, %r3728, %r7;
	// inline asm
	st.local.u32 	[%rd8], %r3726;
	ld.local.v2.u32 	{%r3811, %r3812}, [%rd4];
	// inline asm
	prmt.b32 %r3730, %r3812, %r3811, %r7;
	// inline asm
	st.local.u32 	[%rd7+12], %r3730;
	ld.local.u32 	%r3735, [%rd4];
	ld.local.u32 	%r3736, [%rd3+12];
	// inline asm
	prmt.b32 %r3734, %r3735, %r3736, %r7;
	// inline asm
	st.local.u32 	[%rd7+8], %r3734;
	ld.local.v2.u32 	{%r3813, %r3814}, [%rd3+8];
	// inline asm
	prmt.b32 %r3738, %r3814, %r3813, %r7;
	// inline asm
	st.local.u32 	[%rd7+4], %r3738;
	ld.local.u32 	%r3743, [%rd3+8];
	ld.local.u32 	%r3744, [%rd3+4];
	// inline asm
	prmt.b32 %r3742, %r3743, %r3744, %r7;
	// inline asm
	st.local.u32 	[%rd7], %r3742;
	ld.local.v2.u32 	{%r3815, %r3816}, [%rd3];
	// inline asm
	prmt.b32 %r3746, %r3816, %r3815, %r7;
	// inline asm
	st.local.u32 	[%rd6+12], %r3746;
	ld.local.u32 	%r3751, [%rd3];
	ld.local.u32 	%r3752, [%rd2+12];
	// inline asm
	prmt.b32 %r3750, %r3751, %r3752, %r7;
	// inline asm
	st.local.u32 	[%rd6+8], %r3750;
	ld.local.v2.u32 	{%r3817, %r3818}, [%rd2+8];
	// inline asm
	prmt.b32 %r3754, %r3818, %r3817, %r7;
	// inline asm
	st.local.u32 	[%rd6+4], %r3754;
	ld.local.u32 	%r3759, [%rd2+8];
	ld.local.u32 	%r3760, [%rd2+4];
	// inline asm
	prmt.b32 %r3758, %r3759, %r3760, %r7;
	// inline asm
	st.local.u32 	[%rd6], %r3758;
	ld.local.v2.u32 	{%r3819, %r3820}, [%rd2];
	// inline asm
	prmt.b32 %r3762, %r3820, %r3819, %r7;
	// inline asm
	st.local.u32 	[%rd5+12], %r3762;
	ld.local.u32 	%r3767, [%rd2];
	// inline asm
	prmt.b32 %r3766, %r3767, %r7360, %r7;
	// inline asm
	st.local.u32 	[%rd5+8], %r3766;
	st.local.v2.u32 	[%rd5], {%r7360, %r7360};
	st.local.u32 	[%rd4+12], %r7360;
	st.local.u32 	[%rd4+8], %r7360;
	st.local.u32 	[%rd4+4], %r7360;
	st.local.u32 	[%rd4], %r7360;
	st.local.u32 	[%rd3+12], %r7360;
	st.local.u32 	[%rd3+8], %r7360;
	st.local.u32 	[%rd3+4], %r7360;
	st.local.u32 	[%rd3], %r7360;
	st.local.u32 	[%rd2+12], %r7360;
	st.local.u32 	[%rd2+8], %r7360;
	mov.u64 	%rd206, 0;
	st.local.u32 	[%rd2+4], %rd206;
	st.local.u32 	[%rd2], %rd206;
	mov.u32 	%r7361, %r7360;
	mov.u32 	%r7374, %r7360;
	bra.uni 	BB2_83;

BB2_64:
	setp.eq.s32	%p6, %r673, 30;
	@%p6 bra 	BB2_67;
	bra.uni 	BB2_65;

BB2_67:
	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7391, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r981, %r982}, [%rd9+8];
	// inline asm
	prmt.b32 %r7392, %r982, %r981, %r7;
	// inline asm
	ld.local.u32 	%r855, [%rd9+8];
	ld.local.u32 	%r856, [%rd9+4];
	// inline asm
	prmt.b32 %r7393, %r855, %r856, %r7;
	// inline asm
	ld.local.v2.u32 	{%r983, %r984}, [%rd9];
	// inline asm
	prmt.b32 %r7386, %r984, %r983, %r7;
	// inline asm
	ld.local.u32 	%r863, [%rd9];
	ld.local.u32 	%r864, [%rd8+12];
	// inline asm
	prmt.b32 %r7387, %r863, %r864, %r7;
	// inline asm
	ld.local.v2.u32 	{%r985, %r986}, [%rd8+8];
	// inline asm
	prmt.b32 %r7388, %r986, %r985, %r7;
	// inline asm
	ld.local.u32 	%r871, [%rd8+8];
	ld.local.u32 	%r872, [%rd8+4];
	// inline asm
	prmt.b32 %r7389, %r871, %r872, %r7;
	// inline asm
	ld.local.v2.u32 	{%r987, %r988}, [%rd8];
	// inline asm
	prmt.b32 %r7382, %r988, %r987, %r7;
	// inline asm
	ld.local.u32 	%r879, [%rd8];
	ld.local.u32 	%r880, [%rd7+12];
	// inline asm
	prmt.b32 %r7383, %r879, %r880, %r7;
	// inline asm
	ld.local.v2.u32 	{%r989, %r990}, [%rd7+8];
	// inline asm
	prmt.b32 %r7384, %r990, %r989, %r7;
	// inline asm
	ld.local.u32 	%r887, [%rd7+8];
	ld.local.u32 	%r888, [%rd7+4];
	// inline asm
	prmt.b32 %r7385, %r887, %r888, %r7;
	// inline asm
	ld.local.v2.u32 	{%r991, %r992}, [%rd7];
	// inline asm
	prmt.b32 %r7378, %r992, %r991, %r7;
	// inline asm
	ld.local.u32 	%r895, [%rd7];
	ld.local.u32 	%r896, [%rd6+12];
	// inline asm
	prmt.b32 %r7379, %r895, %r896, %r7;
	// inline asm
	ld.local.v2.u32 	{%r993, %r994}, [%rd6+8];
	// inline asm
	prmt.b32 %r7380, %r994, %r993, %r7;
	// inline asm
	ld.local.u32 	%r903, [%rd6+8];
	ld.local.u32 	%r904, [%rd6+4];
	// inline asm
	prmt.b32 %r7381, %r903, %r904, %r7;
	// inline asm
	ld.local.v2.u32 	{%r995, %r996}, [%rd6];
	// inline asm
	prmt.b32 %r7374, %r996, %r995, %r7;
	// inline asm
	ld.local.u32 	%r911, [%rd6];
	ld.local.u32 	%r912, [%rd5+12];
	// inline asm
	prmt.b32 %r7375, %r911, %r912, %r7;
	// inline asm
	ld.local.v2.u32 	{%r997, %r998}, [%rd5+8];
	// inline asm
	prmt.b32 %r7376, %r998, %r997, %r7;
	// inline asm
	ld.local.u32 	%r919, [%rd5+8];
	ld.local.u32 	%r920, [%rd5+4];
	// inline asm
	prmt.b32 %r7377, %r919, %r920, %r7;
	// inline asm
	ld.local.v2.u32 	{%r999, %r1000}, [%rd5];
	// inline asm
	prmt.b32 %r7370, %r1000, %r999, %r7;
	// inline asm
	ld.local.u32 	%r927, [%rd5];
	ld.local.u32 	%r928, [%rd4+12];
	// inline asm
	prmt.b32 %r7371, %r927, %r928, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1001, %r1002}, [%rd4+8];
	// inline asm
	prmt.b32 %r7372, %r1002, %r1001, %r7;
	// inline asm
	ld.local.u32 	%r935, [%rd4+8];
	ld.local.u32 	%r936, [%rd4+4];
	// inline asm
	prmt.b32 %r7373, %r935, %r936, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1003, %r1004}, [%rd4];
	// inline asm
	prmt.b32 %r7366, %r1004, %r1003, %r7;
	// inline asm
	ld.local.u32 	%r943, [%rd4];
	ld.local.u32 	%r944, [%rd3+12];
	// inline asm
	prmt.b32 %r7367, %r943, %r944, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1005, %r1006}, [%rd3+8];
	// inline asm
	prmt.b32 %r7368, %r1006, %r1005, %r7;
	// inline asm
	ld.local.u32 	%r951, [%rd3+8];
	ld.local.u32 	%r952, [%rd3+4];
	// inline asm
	prmt.b32 %r7369, %r951, %r952, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1007, %r1008}, [%rd3];
	// inline asm
	prmt.b32 %r7362, %r1008, %r1007, %r7;
	// inline asm
	ld.local.u32 	%r959, [%rd3];
	ld.local.u32 	%r960, [%rd2+12];
	// inline asm
	prmt.b32 %r7363, %r959, %r960, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1009, %r1010}, [%rd2+8];
	// inline asm
	prmt.b32 %r7364, %r1010, %r1009, %r7;
	// inline asm
	ld.local.u32 	%r967, [%rd2+8];
	ld.local.u32 	%r968, [%rd2+4];
	// inline asm
	prmt.b32 %r7365, %r967, %r968, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1011, %r1012}, [%rd2];
	// inline asm
	prmt.b32 %r970, %r1012, %r1011, %r7;
	// inline asm
	st.local.u32 	[%rd9+12], %r970;
	ld.local.u32 	%r975, [%rd2];
	// inline asm
	prmt.b32 %r974, %r975, %r7360, %r7;
	// inline asm
	st.local.u32 	[%rd9+8], %r974;
	st.local.v2.u32 	[%rd9], {%r7360, %r7360};
	st.local.u32 	[%rd8+12], %r7360;
	st.local.u32 	[%rd8+8], %r7360;
	st.local.u32 	[%rd8+4], %r7360;
	st.local.u32 	[%rd8], %r7360;
	st.local.u32 	[%rd7+12], %r7360;
	st.local.u32 	[%rd7+8], %r7360;
	st.local.u32 	[%rd7+4], %r7360;
	st.local.u32 	[%rd7], %r7360;
	st.local.u32 	[%rd6+12], %r7360;
	st.local.u32 	[%rd6+8], %r7360;
	st.local.u32 	[%rd6+4], %r7360;
	st.local.u32 	[%rd6], %r7360;
	st.local.u32 	[%rd5+12], %r7360;
	st.local.u32 	[%rd5+8], %r7360;
	st.local.u32 	[%rd5+4], %r7360;
	st.local.u32 	[%rd5], %r7360;
	st.local.u32 	[%rd4+12], %r7360;
	st.local.u32 	[%rd4+8], %r7360;
	st.local.u32 	[%rd4+4], %r7360;
	st.local.u32 	[%rd4], %r7360;
	st.local.u32 	[%rd3+12], %r7360;
	st.local.u32 	[%rd3+8], %r7360;
	st.local.u32 	[%rd3+4], %r7360;
	st.local.u32 	[%rd3], %r7360;
	st.local.u32 	[%rd2+12], %r7360;
	st.local.u32 	[%rd2+8], %r7360;
	mov.u64 	%rd190, 0;
	st.local.u32 	[%rd2+4], %rd190;
	st.local.u32 	[%rd2], %rd190;
	mov.u32 	%r7361, %r7360;
	mov.u32 	%r7390, %r7360;
	bra.uni 	BB2_89;

BB2_8:
	setp.eq.s32	%p48, %r673, 1;
	mov.u32 	%r7363, %r7362;
	mov.u32 	%r7364, %r7362;
	mov.u32 	%r7365, %r7362;
	mov.u32 	%r7366, %r7362;
	mov.u32 	%r7367, %r7362;
	mov.u32 	%r7368, %r7362;
	mov.u32 	%r7369, %r7362;
	mov.u32 	%r7370, %r7362;
	mov.u32 	%r7371, %r7362;
	mov.u32 	%r7372, %r7362;
	mov.u32 	%r7373, %r7362;
	mov.u32 	%r7374, %r7362;
	mov.u32 	%r7375, %r7362;
	mov.u32 	%r7376, %r7362;
	mov.u32 	%r7377, %r7362;
	mov.u32 	%r7378, %r7362;
	mov.u32 	%r7379, %r7362;
	mov.u32 	%r7380, %r7362;
	mov.u32 	%r7381, %r7362;
	mov.u32 	%r7382, %r7362;
	mov.u32 	%r7383, %r7362;
	mov.u32 	%r7384, %r7362;
	mov.u32 	%r7385, %r7362;
	mov.u32 	%r7386, %r7362;
	mov.u32 	%r7387, %r7362;
	mov.u32 	%r7388, %r7362;
	mov.u32 	%r7389, %r7362;
	mov.u32 	%r7390, %r7362;
	mov.u32 	%r7391, %r7362;
	mov.u32 	%r7392, %r7362;
	mov.u32 	%r7393, %r7362;
	@%p48 bra 	BB2_9;
	bra.uni 	BB2_89;

BB2_9:
	mov.u32 	%r7361, 0;
	// inline asm
	prmt.b32 %r7364, %r7361, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r6258, %r6259}, [%rd9+8];
	// inline asm
	prmt.b32 %r7365, %r6259, %r6258, %r7;
	// inline asm
	ld.local.u32 	%r6104, [%rd9+8];
	ld.local.u32 	%r6105, [%rd9+4];
	// inline asm
	prmt.b32 %r6103, %r6104, %r6105, %r7;
	// inline asm
	st.local.u32 	[%rd9+12], %r6103;
	ld.local.v2.u32 	{%r6260, %r6261}, [%rd9];
	// inline asm
	prmt.b32 %r6107, %r6261, %r6260, %r7;
	// inline asm
	st.local.u32 	[%rd9+8], %r6107;
	ld.local.u32 	%r6112, [%rd9];
	ld.local.u32 	%r6113, [%rd8+12];
	// inline asm
	prmt.b32 %r6111, %r6112, %r6113, %r7;
	// inline asm
	st.local.u32 	[%rd9+4], %r6111;
	ld.local.v2.u32 	{%r6262, %r6263}, [%rd8+8];
	// inline asm
	prmt.b32 %r6115, %r6263, %r6262, %r7;
	// inline asm
	st.local.u32 	[%rd9], %r6115;
	ld.local.u32 	%r6120, [%rd8+8];
	ld.local.u32 	%r6121, [%rd8+4];
	// inline asm
	prmt.b32 %r6119, %r6120, %r6121, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r6119;
	ld.local.v2.u32 	{%r6264, %r6265}, [%rd8];
	// inline asm
	prmt.b32 %r6123, %r6265, %r6264, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r6123;
	ld.local.u32 	%r6128, [%rd8];
	ld.local.u32 	%r6129, [%rd7+12];
	// inline asm
	prmt.b32 %r6127, %r6128, %r6129, %r7;
	// inline asm
	st.local.u32 	[%rd8+4], %r6127;
	ld.local.v2.u32 	{%r6266, %r6267}, [%rd7+8];
	// inline asm
	prmt.b32 %r6131, %r6267, %r6266, %r7;
	// inline asm
	st.local.u32 	[%rd8], %r6131;
	ld.local.u32 	%r6136, [%rd7+8];
	ld.local.u32 	%r6137, [%rd7+4];
	// inline asm
	prmt.b32 %r6135, %r6136, %r6137, %r7;
	// inline asm
	st.local.u32 	[%rd7+12], %r6135;
	ld.local.v2.u32 	{%r6268, %r6269}, [%rd7];
	// inline asm
	prmt.b32 %r6139, %r6269, %r6268, %r7;
	// inline asm
	st.local.u32 	[%rd7+8], %r6139;
	ld.local.u32 	%r6144, [%rd7];
	ld.local.u32 	%r6145, [%rd6+12];
	// inline asm
	prmt.b32 %r6143, %r6144, %r6145, %r7;
	// inline asm
	st.local.u32 	[%rd7+4], %r6143;
	ld.local.v2.u32 	{%r6270, %r6271}, [%rd6+8];
	// inline asm
	prmt.b32 %r6147, %r6271, %r6270, %r7;
	// inline asm
	st.local.u32 	[%rd7], %r6147;
	ld.local.u32 	%r6152, [%rd6+8];
	ld.local.u32 	%r6153, [%rd6+4];
	// inline asm
	prmt.b32 %r6151, %r6152, %r6153, %r7;
	// inline asm
	st.local.u32 	[%rd6+12], %r6151;
	ld.local.v2.u32 	{%r6272, %r6273}, [%rd6];
	// inline asm
	prmt.b32 %r6155, %r6273, %r6272, %r7;
	// inline asm
	st.local.u32 	[%rd6+8], %r6155;
	ld.local.u32 	%r6160, [%rd6];
	ld.local.u32 	%r6161, [%rd5+12];
	// inline asm
	prmt.b32 %r6159, %r6160, %r6161, %r7;
	// inline asm
	st.local.u32 	[%rd6+4], %r6159;
	ld.local.v2.u32 	{%r6274, %r6275}, [%rd5+8];
	// inline asm
	prmt.b32 %r6163, %r6275, %r6274, %r7;
	// inline asm
	st.local.u32 	[%rd6], %r6163;
	ld.local.u32 	%r6168, [%rd5+8];
	ld.local.u32 	%r6169, [%rd5+4];
	// inline asm
	prmt.b32 %r6167, %r6168, %r6169, %r7;
	// inline asm
	st.local.u32 	[%rd5+12], %r6167;
	ld.local.v2.u32 	{%r6276, %r6277}, [%rd5];
	// inline asm
	prmt.b32 %r6171, %r6277, %r6276, %r7;
	// inline asm
	st.local.u32 	[%rd5+8], %r6171;
	ld.local.u32 	%r6176, [%rd5];
	ld.local.u32 	%r6177, [%rd4+12];
	// inline asm
	prmt.b32 %r6175, %r6176, %r6177, %r7;
	// inline asm
	st.local.u32 	[%rd5+4], %r6175;
	ld.local.v2.u32 	{%r6278, %r6279}, [%rd4+8];
	// inline asm
	prmt.b32 %r6179, %r6279, %r6278, %r7;
	// inline asm
	st.local.u32 	[%rd5], %r6179;
	ld.local.u32 	%r6184, [%rd4+8];
	ld.local.u32 	%r6185, [%rd4+4];
	// inline asm
	prmt.b32 %r6183, %r6184, %r6185, %r7;
	// inline asm
	st.local.u32 	[%rd4+12], %r6183;
	ld.local.v2.u32 	{%r6280, %r6281}, [%rd4];
	// inline asm
	prmt.b32 %r6187, %r6281, %r6280, %r7;
	// inline asm
	st.local.u32 	[%rd4+8], %r6187;
	ld.local.u32 	%r6192, [%rd4];
	ld.local.u32 	%r6193, [%rd3+12];
	// inline asm
	prmt.b32 %r6191, %r6192, %r6193, %r7;
	// inline asm
	st.local.u32 	[%rd4+4], %r6191;
	ld.local.v2.u32 	{%r6282, %r6283}, [%rd3+8];
	// inline asm
	prmt.b32 %r6195, %r6283, %r6282, %r7;
	// inline asm
	st.local.u32 	[%rd4], %r6195;
	ld.local.u32 	%r6200, [%rd3+8];
	ld.local.u32 	%r6201, [%rd3+4];
	// inline asm
	prmt.b32 %r6199, %r6200, %r6201, %r7;
	// inline asm
	st.local.u32 	[%rd3+12], %r6199;
	ld.local.v2.u32 	{%r6284, %r6285}, [%rd3];
	// inline asm
	prmt.b32 %r6203, %r6285, %r6284, %r7;
	// inline asm
	st.local.u32 	[%rd3+8], %r6203;
	ld.local.u32 	%r6208, [%rd3];
	ld.local.u32 	%r6209, [%rd2+12];
	// inline asm
	prmt.b32 %r6207, %r6208, %r6209, %r7;
	// inline asm
	st.local.u32 	[%rd3+4], %r6207;
	ld.local.v2.u32 	{%r6286, %r6287}, [%rd2+8];
	// inline asm
	prmt.b32 %r6211, %r6287, %r6286, %r7;
	// inline asm
	st.local.u32 	[%rd3], %r6211;
	ld.local.u32 	%r6216, [%rd2+8];
	ld.local.u32 	%r6217, [%rd2+4];
	// inline asm
	prmt.b32 %r6215, %r6216, %r6217, %r7;
	// inline asm
	st.local.u32 	[%rd2+12], %r6215;
	ld.local.v2.u32 	{%r6288, %r6289}, [%rd2];
	// inline asm
	prmt.b32 %r6219, %r6289, %r6288, %r7;
	// inline asm
	st.local.u32 	[%rd2+8], %r6219;
	ld.local.u32 	%r6224, [%rd2];
	// inline asm
	prmt.b32 %r7360, %r6224, %r7361, %r7;
	// inline asm
	st.local.v2.u32 	[%rd2], {%r7361, %r7360};
	mov.u32 	%r7362, %r7361;
	mov.u32 	%r7363, %r7361;
	mov.u32 	%r7366, %r7361;
	mov.u32 	%r7367, %r7361;
	mov.u32 	%r7368, %r7361;
	mov.u32 	%r7369, %r7361;
	mov.u32 	%r7370, %r7361;
	mov.u32 	%r7371, %r7361;
	mov.u32 	%r7372, %r7361;
	mov.u32 	%r7373, %r7361;
	mov.u32 	%r7374, %r7361;
	mov.u32 	%r7375, %r7361;
	mov.u32 	%r7376, %r7361;
	mov.u32 	%r7377, %r7361;
	mov.u32 	%r7378, %r7361;
	mov.u32 	%r7379, %r7361;
	mov.u32 	%r7380, %r7361;
	mov.u32 	%r7381, %r7361;
	mov.u32 	%r7382, %r7361;
	mov.u32 	%r7383, %r7361;
	mov.u32 	%r7384, %r7361;
	mov.u32 	%r7385, %r7361;
	mov.u32 	%r7386, %r7361;
	mov.u32 	%r7387, %r7361;
	mov.u32 	%r7388, %r7361;
	mov.u32 	%r7389, %r7361;
	mov.u32 	%r7390, %r7361;
	mov.u32 	%r7391, %r7361;
	mov.u32 	%r7392, %r7361;
	mov.u32 	%r7393, %r7361;
	bra.uni 	BB2_89;

BB2_40:
	setp.eq.s32	%p25, %r673, 17;
	mov.u32 	%r7363, %r7362;
	mov.u32 	%r7364, %r7362;
	mov.u32 	%r7365, %r7362;
	mov.u32 	%r7366, %r7362;
	mov.u32 	%r7367, %r7362;
	mov.u32 	%r7368, %r7362;
	mov.u32 	%r7369, %r7362;
	mov.u32 	%r7370, %r7362;
	mov.u32 	%r7371, %r7362;
	mov.u32 	%r7372, %r7362;
	mov.u32 	%r7373, %r7362;
	mov.u32 	%r7374, %r7362;
	mov.u32 	%r7375, %r7362;
	mov.u32 	%r7376, %r7362;
	mov.u32 	%r7377, %r7362;
	mov.u32 	%r7378, %r7362;
	mov.u32 	%r7379, %r7362;
	mov.u32 	%r7380, %r7362;
	mov.u32 	%r7381, %r7362;
	mov.u32 	%r7382, %r7362;
	mov.u32 	%r7383, %r7362;
	mov.u32 	%r7384, %r7362;
	mov.u32 	%r7385, %r7362;
	mov.u32 	%r7386, %r7362;
	mov.u32 	%r7387, %r7362;
	mov.u32 	%r7388, %r7362;
	mov.u32 	%r7389, %r7362;
	mov.u32 	%r7390, %r7362;
	mov.u32 	%r7391, %r7362;
	mov.u32 	%r7392, %r7362;
	mov.u32 	%r7393, %r7362;
	@%p25 bra 	BB2_41;
	bra.uni 	BB2_89;

BB2_41:
	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7380, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3243, %r3244}, [%rd9+8];
	// inline asm
	prmt.b32 %r7381, %r3244, %r3243, %r7;
	// inline asm
	ld.local.u32 	%r3104, [%rd9+8];
	ld.local.u32 	%r3105, [%rd9+4];
	// inline asm
	prmt.b32 %r7374, %r3104, %r3105, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3245, %r3246}, [%rd9];
	// inline asm
	prmt.b32 %r7375, %r3246, %r3245, %r7;
	// inline asm
	ld.local.u32 	%r3112, [%rd9];
	ld.local.u32 	%r3113, [%rd8+12];
	// inline asm
	prmt.b32 %r7376, %r3112, %r3113, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3247, %r3248}, [%rd8+8];
	// inline asm
	prmt.b32 %r7377, %r3248, %r3247, %r7;
	// inline asm
	ld.local.u32 	%r3120, [%rd8+8];
	ld.local.u32 	%r3121, [%rd8+4];
	// inline asm
	prmt.b32 %r7370, %r3120, %r3121, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3249, %r3250}, [%rd8];
	// inline asm
	prmt.b32 %r7371, %r3250, %r3249, %r7;
	// inline asm
	ld.local.u32 	%r3128, [%rd8];
	ld.local.u32 	%r3129, [%rd7+12];
	// inline asm
	prmt.b32 %r7372, %r3128, %r3129, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3251, %r3252}, [%rd7+8];
	// inline asm
	prmt.b32 %r7373, %r3252, %r3251, %r7;
	// inline asm
	ld.local.u32 	%r3136, [%rd7+8];
	ld.local.u32 	%r3137, [%rd7+4];
	// inline asm
	prmt.b32 %r7366, %r3136, %r3137, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3253, %r3254}, [%rd7];
	// inline asm
	prmt.b32 %r7367, %r3254, %r3253, %r7;
	// inline asm
	ld.local.u32 	%r3144, [%rd7];
	ld.local.u32 	%r3145, [%rd6+12];
	// inline asm
	prmt.b32 %r7368, %r3144, %r3145, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3255, %r3256}, [%rd6+8];
	// inline asm
	prmt.b32 %r7369, %r3256, %r3255, %r7;
	// inline asm
	ld.local.u32 	%r3152, [%rd6+8];
	ld.local.u32 	%r3153, [%rd6+4];
	// inline asm
	prmt.b32 %r7362, %r3152, %r3153, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3257, %r3258}, [%rd6];
	// inline asm
	prmt.b32 %r7363, %r3258, %r3257, %r7;
	// inline asm
	ld.local.u32 	%r3160, [%rd6];
	ld.local.u32 	%r3161, [%rd5+12];
	// inline asm
	prmt.b32 %r7364, %r3160, %r3161, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3259, %r3260}, [%rd5+8];
	// inline asm
	prmt.b32 %r7365, %r3260, %r3259, %r7;
	// inline asm
	ld.local.u32 	%r3168, [%rd5+8];
	ld.local.u32 	%r3169, [%rd5+4];
	// inline asm
	prmt.b32 %r3167, %r3168, %r3169, %r7;
	// inline asm
	st.local.u32 	[%rd9+12], %r3167;
	ld.local.v2.u32 	{%r3261, %r3262}, [%rd5];
	// inline asm
	prmt.b32 %r3171, %r3262, %r3261, %r7;
	// inline asm
	st.local.u32 	[%rd9+8], %r3171;
	ld.local.u32 	%r3176, [%rd5];
	ld.local.u32 	%r3177, [%rd4+12];
	// inline asm
	prmt.b32 %r3175, %r3176, %r3177, %r7;
	// inline asm
	st.local.u32 	[%rd9+4], %r3175;
	ld.local.v2.u32 	{%r3263, %r3264}, [%rd4+8];
	// inline asm
	prmt.b32 %r3179, %r3264, %r3263, %r7;
	// inline asm
	st.local.u32 	[%rd9], %r3179;
	ld.local.u32 	%r3184, [%rd4+8];
	ld.local.u32 	%r3185, [%rd4+4];
	// inline asm
	prmt.b32 %r3183, %r3184, %r3185, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r3183;
	ld.local.v2.u32 	{%r3265, %r3266}, [%rd4];
	// inline asm
	prmt.b32 %r3187, %r3266, %r3265, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r3187;
	ld.local.u32 	%r3192, [%rd4];
	ld.local.u32 	%r3193, [%rd3+12];
	// inline asm
	prmt.b32 %r3191, %r3192, %r3193, %r7;
	// inline asm
	st.local.u32 	[%rd8+4], %r3191;
	ld.local.v2.u32 	{%r3267, %r3268}, [%rd3+8];
	// inline asm
	prmt.b32 %r3195, %r3268, %r3267, %r7;
	// inline asm
	st.local.u32 	[%rd8], %r3195;
	ld.local.u32 	%r3200, [%rd3+8];
	ld.local.u32 	%r3201, [%rd3+4];
	// inline asm
	prmt.b32 %r3199, %r3200, %r3201, %r7;
	// inline asm
	st.local.u32 	[%rd7+12], %r3199;
	ld.local.v2.u32 	{%r3269, %r3270}, [%rd3];
	// inline asm
	prmt.b32 %r3203, %r3270, %r3269, %r7;
	// inline asm
	st.local.u32 	[%rd7+8], %r3203;
	ld.local.u32 	%r3208, [%rd3];
	ld.local.u32 	%r3209, [%rd2+12];
	// inline asm
	prmt.b32 %r3207, %r3208, %r3209, %r7;
	// inline asm
	st.local.u32 	[%rd7+4], %r3207;
	ld.local.v2.u32 	{%r3271, %r3272}, [%rd2+8];
	// inline asm
	prmt.b32 %r3211, %r3272, %r3271, %r7;
	// inline asm
	st.local.u32 	[%rd7], %r3211;
	ld.local.u32 	%r3216, [%rd2+8];
	ld.local.u32 	%r3217, [%rd2+4];
	// inline asm
	prmt.b32 %r3215, %r3216, %r3217, %r7;
	// inline asm
	st.local.u32 	[%rd6+12], %r3215;
	ld.local.v2.u32 	{%r3273, %r3274}, [%rd2];
	// inline asm
	prmt.b32 %r3219, %r3274, %r3273, %r7;
	// inline asm
	st.local.u32 	[%rd6+8], %r3219;
	ld.local.u32 	%r3224, [%rd2];
	// inline asm
	prmt.b32 %r3223, %r3224, %r7360, %r7;
	// inline asm
	st.local.v2.u32 	[%rd6], {%r7360, %r3223};
	st.local.v4.u32 	[%rd5], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd4], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd3], {%r7360, %r7360, %r7360, %r7360};
	st.local.v2.u32 	[%rd2+8], {%r7360, %r7360};
	mov.u64 	%rd203, 0;
	st.local.u64 	[%rd2], %rd203;
	mov.u32 	%r7361, %r7360;
	mov.u32 	%r7378, %r7360;
	mov.u32 	%r7379, %r7360;
	bra.uni 	BB2_84;

BB2_24:
	setp.eq.s32	%p37, %r673, 9;
	mov.u32 	%r7363, %r7362;
	mov.u32 	%r7364, %r7362;
	mov.u32 	%r7365, %r7362;
	mov.u32 	%r7366, %r7362;
	mov.u32 	%r7367, %r7362;
	mov.u32 	%r7368, %r7362;
	mov.u32 	%r7369, %r7362;
	mov.u32 	%r7370, %r7362;
	mov.u32 	%r7371, %r7362;
	mov.u32 	%r7372, %r7362;
	mov.u32 	%r7373, %r7362;
	mov.u32 	%r7374, %r7362;
	mov.u32 	%r7375, %r7362;
	mov.u32 	%r7376, %r7362;
	mov.u32 	%r7377, %r7362;
	mov.u32 	%r7378, %r7362;
	mov.u32 	%r7379, %r7362;
	mov.u32 	%r7380, %r7362;
	mov.u32 	%r7381, %r7362;
	mov.u32 	%r7382, %r7362;
	mov.u32 	%r7383, %r7362;
	mov.u32 	%r7384, %r7362;
	mov.u32 	%r7385, %r7362;
	mov.u32 	%r7386, %r7362;
	mov.u32 	%r7387, %r7362;
	mov.u32 	%r7388, %r7362;
	mov.u32 	%r7389, %r7362;
	mov.u32 	%r7390, %r7362;
	mov.u32 	%r7391, %r7362;
	mov.u32 	%r7392, %r7362;
	mov.u32 	%r7393, %r7362;
	@%p37 bra 	BB2_25;
	bra.uni 	BB2_89;

BB2_25:
	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7372, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r4719, %r4720}, [%rd9+8];
	// inline asm
	prmt.b32 %r7373, %r4720, %r4719, %r7;
	// inline asm
	ld.local.u32 	%r4572, [%rd9+8];
	ld.local.u32 	%r4573, [%rd9+4];
	// inline asm
	prmt.b32 %r7366, %r4572, %r4573, %r7;
	// inline asm
	ld.local.v2.u32 	{%r4721, %r4722}, [%rd9];
	// inline asm
	prmt.b32 %r7367, %r4722, %r4721, %r7;
	// inline asm
	ld.local.u32 	%r4580, [%rd9];
	ld.local.u32 	%r4581, [%rd8+12];
	// inline asm
	prmt.b32 %r7368, %r4580, %r4581, %r7;
	// inline asm
	ld.local.v2.u32 	{%r4723, %r4724}, [%rd8+8];
	// inline asm
	prmt.b32 %r7369, %r4724, %r4723, %r7;
	// inline asm
	ld.local.u32 	%r4588, [%rd8+8];
	ld.local.u32 	%r4589, [%rd8+4];
	// inline asm
	prmt.b32 %r7362, %r4588, %r4589, %r7;
	// inline asm
	ld.local.v2.u32 	{%r4725, %r4726}, [%rd8];
	// inline asm
	prmt.b32 %r7363, %r4726, %r4725, %r7;
	// inline asm
	ld.local.u32 	%r4596, [%rd8];
	ld.local.u32 	%r4597, [%rd7+12];
	// inline asm
	prmt.b32 %r7364, %r4596, %r4597, %r7;
	// inline asm
	ld.local.v2.u32 	{%r4727, %r4728}, [%rd7+8];
	// inline asm
	prmt.b32 %r7365, %r4728, %r4727, %r7;
	// inline asm
	ld.local.u32 	%r4604, [%rd7+8];
	ld.local.u32 	%r4605, [%rd7+4];
	// inline asm
	prmt.b32 %r4603, %r4604, %r4605, %r7;
	// inline asm
	st.local.u32 	[%rd9+12], %r4603;
	ld.local.v2.u32 	{%r4729, %r4730}, [%rd7];
	// inline asm
	prmt.b32 %r4607, %r4730, %r4729, %r7;
	// inline asm
	st.local.u32 	[%rd9+8], %r4607;
	ld.local.u32 	%r4612, [%rd7];
	ld.local.u32 	%r4613, [%rd6+12];
	// inline asm
	prmt.b32 %r4611, %r4612, %r4613, %r7;
	// inline asm
	st.local.u32 	[%rd9+4], %r4611;
	ld.local.v2.u32 	{%r4731, %r4732}, [%rd6+8];
	// inline asm
	prmt.b32 %r4615, %r4732, %r4731, %r7;
	// inline asm
	st.local.u32 	[%rd9], %r4615;
	ld.local.u32 	%r4620, [%rd6+8];
	ld.local.u32 	%r4621, [%rd6+4];
	// inline asm
	prmt.b32 %r4619, %r4620, %r4621, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r4619;
	ld.local.v2.u32 	{%r4733, %r4734}, [%rd6];
	// inline asm
	prmt.b32 %r4623, %r4734, %r4733, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r4623;
	ld.local.u32 	%r4628, [%rd6];
	ld.local.u32 	%r4629, [%rd5+12];
	// inline asm
	prmt.b32 %r4627, %r4628, %r4629, %r7;
	// inline asm
	st.local.u32 	[%rd8+4], %r4627;
	ld.local.v2.u32 	{%r4735, %r4736}, [%rd5+8];
	// inline asm
	prmt.b32 %r4631, %r4736, %r4735, %r7;
	// inline asm
	st.local.u32 	[%rd8], %r4631;
	ld.local.u32 	%r4636, [%rd5+8];
	ld.local.u32 	%r4637, [%rd5+4];
	// inline asm
	prmt.b32 %r4635, %r4636, %r4637, %r7;
	// inline asm
	st.local.u32 	[%rd7+12], %r4635;
	ld.local.v2.u32 	{%r4737, %r4738}, [%rd5];
	// inline asm
	prmt.b32 %r4639, %r4738, %r4737, %r7;
	// inline asm
	st.local.u32 	[%rd7+8], %r4639;
	ld.local.u32 	%r4644, [%rd5];
	ld.local.u32 	%r4645, [%rd4+12];
	// inline asm
	prmt.b32 %r4643, %r4644, %r4645, %r7;
	// inline asm
	st.local.u32 	[%rd7+4], %r4643;
	ld.local.v2.u32 	{%r4739, %r4740}, [%rd4+8];
	// inline asm
	prmt.b32 %r4647, %r4740, %r4739, %r7;
	// inline asm
	st.local.u32 	[%rd7], %r4647;
	ld.local.u32 	%r4652, [%rd4+8];
	ld.local.u32 	%r4653, [%rd4+4];
	// inline asm
	prmt.b32 %r4651, %r4652, %r4653, %r7;
	// inline asm
	st.local.u32 	[%rd6+12], %r4651;
	ld.local.v2.u32 	{%r4741, %r4742}, [%rd4];
	// inline asm
	prmt.b32 %r4655, %r4742, %r4741, %r7;
	// inline asm
	st.local.u32 	[%rd6+8], %r4655;
	ld.local.u32 	%r4660, [%rd4];
	ld.local.u32 	%r4661, [%rd3+12];
	// inline asm
	prmt.b32 %r4659, %r4660, %r4661, %r7;
	// inline asm
	st.local.u32 	[%rd6+4], %r4659;
	ld.local.v2.u32 	{%r4743, %r4744}, [%rd3+8];
	// inline asm
	prmt.b32 %r4663, %r4744, %r4743, %r7;
	// inline asm
	st.local.u32 	[%rd6], %r4663;
	ld.local.u32 	%r4668, [%rd3+8];
	ld.local.u32 	%r4669, [%rd3+4];
	// inline asm
	prmt.b32 %r4667, %r4668, %r4669, %r7;
	// inline asm
	st.local.u32 	[%rd5+12], %r4667;
	ld.local.v2.u32 	{%r4745, %r4746}, [%rd3];
	// inline asm
	prmt.b32 %r4671, %r4746, %r4745, %r7;
	// inline asm
	st.local.u32 	[%rd5+8], %r4671;
	ld.local.u32 	%r4676, [%rd3];
	ld.local.u32 	%r4677, [%rd2+12];
	// inline asm
	prmt.b32 %r4675, %r4676, %r4677, %r7;
	// inline asm
	st.local.u32 	[%rd5+4], %r4675;
	ld.local.v2.u32 	{%r4747, %r4748}, [%rd2+8];
	// inline asm
	prmt.b32 %r4679, %r4748, %r4747, %r7;
	// inline asm
	st.local.u32 	[%rd5], %r4679;
	ld.local.u32 	%r4684, [%rd2+8];
	ld.local.u32 	%r4685, [%rd2+4];
	// inline asm
	prmt.b32 %r4683, %r4684, %r4685, %r7;
	// inline asm
	st.local.u32 	[%rd4+12], %r4683;
	ld.local.v2.u32 	{%r4749, %r4750}, [%rd2];
	// inline asm
	prmt.b32 %r4687, %r4750, %r4749, %r7;
	// inline asm
	st.local.u32 	[%rd4+8], %r4687;
	ld.local.u32 	%r4692, [%rd2];
	// inline asm
	prmt.b32 %r4691, %r4692, %r7360, %r7;
	// inline asm
	st.local.v2.u32 	[%rd4], {%r7360, %r4691};
	st.local.v4.u32 	[%rd3], {%r7360, %r7360, %r7360, %r7360};
	st.local.v2.u32 	[%rd2+8], {%r7360, %r7360};
	mov.u64 	%rd211, 0;
	st.local.u64 	[%rd2], %rd211;
	mov.u32 	%r7361, %r7360;
	mov.u32 	%r7370, %r7360;
	mov.u32 	%r7371, %r7360;
	bra.uni 	BB2_82;

BB2_55:
	setp.eq.s32	%p14, %r673, 25;
	mov.u32 	%r7363, %r7362;
	mov.u32 	%r7364, %r7362;
	mov.u32 	%r7365, %r7362;
	mov.u32 	%r7366, %r7362;
	mov.u32 	%r7367, %r7362;
	mov.u32 	%r7368, %r7362;
	mov.u32 	%r7369, %r7362;
	mov.u32 	%r7370, %r7362;
	mov.u32 	%r7371, %r7362;
	mov.u32 	%r7372, %r7362;
	mov.u32 	%r7373, %r7362;
	mov.u32 	%r7374, %r7362;
	mov.u32 	%r7375, %r7362;
	mov.u32 	%r7376, %r7362;
	mov.u32 	%r7377, %r7362;
	mov.u32 	%r7378, %r7362;
	mov.u32 	%r7379, %r7362;
	mov.u32 	%r7380, %r7362;
	mov.u32 	%r7381, %r7362;
	mov.u32 	%r7382, %r7362;
	mov.u32 	%r7383, %r7362;
	mov.u32 	%r7384, %r7362;
	mov.u32 	%r7385, %r7362;
	mov.u32 	%r7386, %r7362;
	mov.u32 	%r7387, %r7362;
	mov.u32 	%r7388, %r7362;
	mov.u32 	%r7389, %r7362;
	mov.u32 	%r7390, %r7362;
	mov.u32 	%r7391, %r7362;
	mov.u32 	%r7392, %r7362;
	mov.u32 	%r7393, %r7362;
	@%p14 bra 	BB2_56;
	bra.uni 	BB2_89;

BB2_56:
	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7388, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1831, %r1832}, [%rd9+8];
	// inline asm
	prmt.b32 %r7389, %r1832, %r1831, %r7;
	// inline asm
	ld.local.u32 	%r1700, [%rd9+8];
	ld.local.u32 	%r1701, [%rd9+4];
	// inline asm
	prmt.b32 %r7382, %r1700, %r1701, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1833, %r1834}, [%rd9];
	// inline asm
	prmt.b32 %r7383, %r1834, %r1833, %r7;
	// inline asm
	ld.local.u32 	%r1708, [%rd9];
	ld.local.u32 	%r1709, [%rd8+12];
	// inline asm
	prmt.b32 %r7384, %r1708, %r1709, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1835, %r1836}, [%rd8+8];
	// inline asm
	prmt.b32 %r7385, %r1836, %r1835, %r7;
	// inline asm
	ld.local.u32 	%r1716, [%rd8+8];
	ld.local.u32 	%r1717, [%rd8+4];
	// inline asm
	prmt.b32 %r7378, %r1716, %r1717, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1837, %r1838}, [%rd8];
	// inline asm
	prmt.b32 %r7379, %r1838, %r1837, %r7;
	// inline asm
	ld.local.u32 	%r1724, [%rd8];
	ld.local.u32 	%r1725, [%rd7+12];
	// inline asm
	prmt.b32 %r7380, %r1724, %r1725, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1839, %r1840}, [%rd7+8];
	// inline asm
	prmt.b32 %r7381, %r1840, %r1839, %r7;
	// inline asm
	ld.local.u32 	%r1732, [%rd7+8];
	ld.local.u32 	%r1733, [%rd7+4];
	// inline asm
	prmt.b32 %r7374, %r1732, %r1733, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1841, %r1842}, [%rd7];
	// inline asm
	prmt.b32 %r7375, %r1842, %r1841, %r7;
	// inline asm
	ld.local.u32 	%r1740, [%rd7];
	ld.local.u32 	%r1741, [%rd6+12];
	// inline asm
	prmt.b32 %r7376, %r1740, %r1741, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1843, %r1844}, [%rd6+8];
	// inline asm
	prmt.b32 %r7377, %r1844, %r1843, %r7;
	// inline asm
	ld.local.u32 	%r1748, [%rd6+8];
	ld.local.u32 	%r1749, [%rd6+4];
	// inline asm
	prmt.b32 %r7370, %r1748, %r1749, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1845, %r1846}, [%rd6];
	// inline asm
	prmt.b32 %r7371, %r1846, %r1845, %r7;
	// inline asm
	ld.local.u32 	%r1756, [%rd6];
	ld.local.u32 	%r1757, [%rd5+12];
	// inline asm
	prmt.b32 %r7372, %r1756, %r1757, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1847, %r1848}, [%rd5+8];
	// inline asm
	prmt.b32 %r7373, %r1848, %r1847, %r7;
	// inline asm
	ld.local.u32 	%r1764, [%rd5+8];
	ld.local.u32 	%r1765, [%rd5+4];
	// inline asm
	prmt.b32 %r7366, %r1764, %r1765, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1849, %r1850}, [%rd5];
	// inline asm
	prmt.b32 %r7367, %r1850, %r1849, %r7;
	// inline asm
	ld.local.u32 	%r1772, [%rd5];
	ld.local.u32 	%r1773, [%rd4+12];
	// inline asm
	prmt.b32 %r7368, %r1772, %r1773, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1851, %r1852}, [%rd4+8];
	// inline asm
	prmt.b32 %r7369, %r1852, %r1851, %r7;
	// inline asm
	ld.local.u32 	%r1780, [%rd4+8];
	ld.local.u32 	%r1781, [%rd4+4];
	// inline asm
	prmt.b32 %r7362, %r1780, %r1781, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1853, %r1854}, [%rd4];
	// inline asm
	prmt.b32 %r7363, %r1854, %r1853, %r7;
	// inline asm
	ld.local.u32 	%r1788, [%rd4];
	ld.local.u32 	%r1789, [%rd3+12];
	// inline asm
	prmt.b32 %r7364, %r1788, %r1789, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1855, %r1856}, [%rd3+8];
	// inline asm
	prmt.b32 %r7365, %r1856, %r1855, %r7;
	// inline asm
	ld.local.u32 	%r1796, [%rd3+8];
	ld.local.u32 	%r1797, [%rd3+4];
	// inline asm
	prmt.b32 %r1795, %r1796, %r1797, %r7;
	// inline asm
	st.local.u32 	[%rd9+12], %r1795;
	ld.local.v2.u32 	{%r1857, %r1858}, [%rd3];
	// inline asm
	prmt.b32 %r1799, %r1858, %r1857, %r7;
	// inline asm
	st.local.u32 	[%rd9+8], %r1799;
	ld.local.u32 	%r1804, [%rd3];
	ld.local.u32 	%r1805, [%rd2+12];
	// inline asm
	prmt.b32 %r1803, %r1804, %r1805, %r7;
	// inline asm
	st.local.u32 	[%rd9+4], %r1803;
	ld.local.v2.u32 	{%r1859, %r1860}, [%rd2+8];
	// inline asm
	prmt.b32 %r1807, %r1860, %r1859, %r7;
	// inline asm
	st.local.u32 	[%rd9], %r1807;
	ld.local.u32 	%r1812, [%rd2+8];
	ld.local.u32 	%r1813, [%rd2+4];
	// inline asm
	prmt.b32 %r1811, %r1812, %r1813, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r1811;
	ld.local.v2.u32 	{%r1861, %r1862}, [%rd2];
	// inline asm
	prmt.b32 %r1815, %r1862, %r1861, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r1815;
	ld.local.u32 	%r1820, [%rd2];
	// inline asm
	prmt.b32 %r1819, %r1820, %r7360, %r7;
	// inline asm
	st.local.v2.u32 	[%rd8], {%r7360, %r1819};
	st.local.v4.u32 	[%rd7], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd6], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd5], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd4], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd3], {%r7360, %r7360, %r7360, %r7360};
	st.local.v2.u32 	[%rd2+8], {%r7360, %r7360};
	mov.u64 	%rd195, 0;
	st.local.u64 	[%rd2], %rd195;
	mov.u32 	%r7361, %r7360;
	mov.u32 	%r7386, %r7360;
	mov.u32 	%r7387, %r7360;
	bra.uni 	BB2_86;

BB2_16:
	setp.eq.s32	%p43, %r673, 5;
	mov.u32 	%r7363, %r7362;
	mov.u32 	%r7364, %r7362;
	mov.u32 	%r7365, %r7362;
	mov.u32 	%r7366, %r7362;
	mov.u32 	%r7367, %r7362;
	mov.u32 	%r7368, %r7362;
	mov.u32 	%r7369, %r7362;
	mov.u32 	%r7370, %r7362;
	mov.u32 	%r7371, %r7362;
	mov.u32 	%r7372, %r7362;
	mov.u32 	%r7373, %r7362;
	mov.u32 	%r7374, %r7362;
	mov.u32 	%r7375, %r7362;
	mov.u32 	%r7376, %r7362;
	mov.u32 	%r7377, %r7362;
	mov.u32 	%r7378, %r7362;
	mov.u32 	%r7379, %r7362;
	mov.u32 	%r7380, %r7362;
	mov.u32 	%r7381, %r7362;
	mov.u32 	%r7382, %r7362;
	mov.u32 	%r7383, %r7362;
	mov.u32 	%r7384, %r7362;
	mov.u32 	%r7385, %r7362;
	mov.u32 	%r7386, %r7362;
	mov.u32 	%r7387, %r7362;
	mov.u32 	%r7388, %r7362;
	mov.u32 	%r7389, %r7362;
	mov.u32 	%r7390, %r7362;
	mov.u32 	%r7391, %r7362;
	mov.u32 	%r7392, %r7362;
	mov.u32 	%r7393, %r7362;
	@%p43 bra 	BB2_17;
	bra.uni 	BB2_89;

BB2_17:
	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7368, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r5481, %r5482}, [%rd9+8];
	// inline asm
	prmt.b32 %r7369, %r5482, %r5481, %r7;
	// inline asm
	ld.local.u32 	%r5330, [%rd9+8];
	ld.local.u32 	%r5331, [%rd9+4];
	// inline asm
	prmt.b32 %r7362, %r5330, %r5331, %r7;
	// inline asm
	ld.local.v2.u32 	{%r5483, %r5484}, [%rd9];
	// inline asm
	prmt.b32 %r7363, %r5484, %r5483, %r7;
	// inline asm
	ld.local.u32 	%r5338, [%rd9];
	ld.local.u32 	%r5339, [%rd8+12];
	// inline asm
	prmt.b32 %r7364, %r5338, %r5339, %r7;
	// inline asm
	ld.local.v2.u32 	{%r5485, %r5486}, [%rd8+8];
	// inline asm
	prmt.b32 %r7365, %r5486, %r5485, %r7;
	// inline asm
	ld.local.u32 	%r5346, [%rd8+8];
	ld.local.u32 	%r5347, [%rd8+4];
	// inline asm
	prmt.b32 %r5345, %r5346, %r5347, %r7;
	// inline asm
	st.local.u32 	[%rd9+12], %r5345;
	ld.local.v2.u32 	{%r5487, %r5488}, [%rd8];
	// inline asm
	prmt.b32 %r5349, %r5488, %r5487, %r7;
	// inline asm
	st.local.u32 	[%rd9+8], %r5349;
	ld.local.u32 	%r5354, [%rd8];
	ld.local.u32 	%r5355, [%rd7+12];
	// inline asm
	prmt.b32 %r5353, %r5354, %r5355, %r7;
	// inline asm
	st.local.u32 	[%rd9+4], %r5353;
	ld.local.v2.u32 	{%r5489, %r5490}, [%rd7+8];
	// inline asm
	prmt.b32 %r5357, %r5490, %r5489, %r7;
	// inline asm
	st.local.u32 	[%rd9], %r5357;
	ld.local.u32 	%r5362, [%rd7+8];
	ld.local.u32 	%r5363, [%rd7+4];
	// inline asm
	prmt.b32 %r5361, %r5362, %r5363, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r5361;
	ld.local.v2.u32 	{%r5491, %r5492}, [%rd7];
	// inline asm
	prmt.b32 %r5365, %r5492, %r5491, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r5365;
	ld.local.u32 	%r5370, [%rd7];
	ld.local.u32 	%r5371, [%rd6+12];
	// inline asm
	prmt.b32 %r5369, %r5370, %r5371, %r7;
	// inline asm
	st.local.u32 	[%rd8+4], %r5369;
	ld.local.v2.u32 	{%r5493, %r5494}, [%rd6+8];
	// inline asm
	prmt.b32 %r5373, %r5494, %r5493, %r7;
	// inline asm
	st.local.u32 	[%rd8], %r5373;
	ld.local.u32 	%r5378, [%rd6+8];
	ld.local.u32 	%r5379, [%rd6+4];
	// inline asm
	prmt.b32 %r5377, %r5378, %r5379, %r7;
	// inline asm
	st.local.u32 	[%rd7+12], %r5377;
	ld.local.v2.u32 	{%r5495, %r5496}, [%rd6];
	// inline asm
	prmt.b32 %r5381, %r5496, %r5495, %r7;
	// inline asm
	st.local.u32 	[%rd7+8], %r5381;
	ld.local.u32 	%r5386, [%rd6];
	ld.local.u32 	%r5387, [%rd5+12];
	// inline asm
	prmt.b32 %r5385, %r5386, %r5387, %r7;
	// inline asm
	st.local.u32 	[%rd7+4], %r5385;
	ld.local.v2.u32 	{%r5497, %r5498}, [%rd5+8];
	// inline asm
	prmt.b32 %r5389, %r5498, %r5497, %r7;
	// inline asm
	st.local.u32 	[%rd7], %r5389;
	ld.local.u32 	%r5394, [%rd5+8];
	ld.local.u32 	%r5395, [%rd5+4];
	// inline asm
	prmt.b32 %r5393, %r5394, %r5395, %r7;
	// inline asm
	st.local.u32 	[%rd6+12], %r5393;
	ld.local.v2.u32 	{%r5499, %r5500}, [%rd5];
	// inline asm
	prmt.b32 %r5397, %r5500, %r5499, %r7;
	// inline asm
	st.local.u32 	[%rd6+8], %r5397;
	ld.local.u32 	%r5402, [%rd5];
	ld.local.u32 	%r5403, [%rd4+12];
	// inline asm
	prmt.b32 %r5401, %r5402, %r5403, %r7;
	// inline asm
	st.local.u32 	[%rd6+4], %r5401;
	ld.local.v2.u32 	{%r5501, %r5502}, [%rd4+8];
	// inline asm
	prmt.b32 %r5405, %r5502, %r5501, %r7;
	// inline asm
	st.local.u32 	[%rd6], %r5405;
	ld.local.u32 	%r5410, [%rd4+8];
	ld.local.u32 	%r5411, [%rd4+4];
	// inline asm
	prmt.b32 %r5409, %r5410, %r5411, %r7;
	// inline asm
	st.local.u32 	[%rd5+12], %r5409;
	ld.local.v2.u32 	{%r5503, %r5504}, [%rd4];
	// inline asm
	prmt.b32 %r5413, %r5504, %r5503, %r7;
	// inline asm
	st.local.u32 	[%rd5+8], %r5413;
	ld.local.u32 	%r5418, [%rd4];
	ld.local.u32 	%r5419, [%rd3+12];
	// inline asm
	prmt.b32 %r5417, %r5418, %r5419, %r7;
	// inline asm
	st.local.u32 	[%rd5+4], %r5417;
	ld.local.v2.u32 	{%r5505, %r5506}, [%rd3+8];
	// inline asm
	prmt.b32 %r5421, %r5506, %r5505, %r7;
	// inline asm
	st.local.u32 	[%rd5], %r5421;
	ld.local.u32 	%r5426, [%rd3+8];
	ld.local.u32 	%r5427, [%rd3+4];
	// inline asm
	prmt.b32 %r5425, %r5426, %r5427, %r7;
	// inline asm
	st.local.u32 	[%rd4+12], %r5425;
	ld.local.v2.u32 	{%r5507, %r5508}, [%rd3];
	// inline asm
	prmt.b32 %r5429, %r5508, %r5507, %r7;
	// inline asm
	st.local.u32 	[%rd4+8], %r5429;
	ld.local.u32 	%r5434, [%rd3];
	ld.local.u32 	%r5435, [%rd2+12];
	// inline asm
	prmt.b32 %r5433, %r5434, %r5435, %r7;
	// inline asm
	st.local.u32 	[%rd4+4], %r5433;
	ld.local.v2.u32 	{%r5509, %r5510}, [%rd2+8];
	// inline asm
	prmt.b32 %r5437, %r5510, %r5509, %r7;
	// inline asm
	st.local.u32 	[%rd4], %r5437;
	ld.local.u32 	%r5442, [%rd2+8];
	ld.local.u32 	%r5443, [%rd2+4];
	// inline asm
	prmt.b32 %r5441, %r5442, %r5443, %r7;
	// inline asm
	st.local.u32 	[%rd3+12], %r5441;
	ld.local.v2.u32 	{%r5511, %r5512}, [%rd2];
	// inline asm
	prmt.b32 %r5445, %r5512, %r5511, %r7;
	// inline asm
	st.local.u32 	[%rd3+8], %r5445;
	ld.local.u32 	%r5450, [%rd2];
	// inline asm
	prmt.b32 %r5449, %r5450, %r7360, %r7;
	// inline asm
	st.local.v2.u32 	[%rd3], {%r7360, %r5449};
	st.local.v2.u32 	[%rd2+8], {%r7360, %r7360};
	mov.u64 	%rd215, 0;
	st.local.u64 	[%rd2], %rd215;
	mov.u32 	%r7361, %r7360;
	mov.u32 	%r7366, %r7360;
	mov.u32 	%r7367, %r7360;
	bra.uni 	BB2_81;

BB2_47:
	setp.eq.s32	%p20, %r673, 21;
	mov.u32 	%r7363, %r7362;
	mov.u32 	%r7364, %r7362;
	mov.u32 	%r7365, %r7362;
	mov.u32 	%r7366, %r7362;
	mov.u32 	%r7367, %r7362;
	mov.u32 	%r7368, %r7362;
	mov.u32 	%r7369, %r7362;
	mov.u32 	%r7370, %r7362;
	mov.u32 	%r7371, %r7362;
	mov.u32 	%r7372, %r7362;
	mov.u32 	%r7373, %r7362;
	mov.u32 	%r7374, %r7362;
	mov.u32 	%r7375, %r7362;
	mov.u32 	%r7376, %r7362;
	mov.u32 	%r7377, %r7362;
	mov.u32 	%r7378, %r7362;
	mov.u32 	%r7379, %r7362;
	mov.u32 	%r7380, %r7362;
	mov.u32 	%r7381, %r7362;
	mov.u32 	%r7382, %r7362;
	mov.u32 	%r7383, %r7362;
	mov.u32 	%r7384, %r7362;
	mov.u32 	%r7385, %r7362;
	mov.u32 	%r7386, %r7362;
	mov.u32 	%r7387, %r7362;
	mov.u32 	%r7388, %r7362;
	mov.u32 	%r7389, %r7362;
	mov.u32 	%r7390, %r7362;
	mov.u32 	%r7391, %r7362;
	mov.u32 	%r7392, %r7362;
	mov.u32 	%r7393, %r7362;
	@%p20 bra 	BB2_48;
	bra.uni 	BB2_89;

BB2_48:
	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7384, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2529, %r2530}, [%rd9+8];
	// inline asm
	prmt.b32 %r7385, %r2530, %r2529, %r7;
	// inline asm
	ld.local.u32 	%r2394, [%rd9+8];
	ld.local.u32 	%r2395, [%rd9+4];
	// inline asm
	prmt.b32 %r7378, %r2394, %r2395, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2531, %r2532}, [%rd9];
	// inline asm
	prmt.b32 %r7379, %r2532, %r2531, %r7;
	// inline asm
	ld.local.u32 	%r2402, [%rd9];
	ld.local.u32 	%r2403, [%rd8+12];
	// inline asm
	prmt.b32 %r7380, %r2402, %r2403, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2533, %r2534}, [%rd8+8];
	// inline asm
	prmt.b32 %r7381, %r2534, %r2533, %r7;
	// inline asm
	ld.local.u32 	%r2410, [%rd8+8];
	ld.local.u32 	%r2411, [%rd8+4];
	// inline asm
	prmt.b32 %r7374, %r2410, %r2411, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2535, %r2536}, [%rd8];
	// inline asm
	prmt.b32 %r7375, %r2536, %r2535, %r7;
	// inline asm
	ld.local.u32 	%r2418, [%rd8];
	ld.local.u32 	%r2419, [%rd7+12];
	// inline asm
	prmt.b32 %r7376, %r2418, %r2419, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2537, %r2538}, [%rd7+8];
	// inline asm
	prmt.b32 %r7377, %r2538, %r2537, %r7;
	// inline asm
	ld.local.u32 	%r2426, [%rd7+8];
	ld.local.u32 	%r2427, [%rd7+4];
	// inline asm
	prmt.b32 %r7370, %r2426, %r2427, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2539, %r2540}, [%rd7];
	// inline asm
	prmt.b32 %r7371, %r2540, %r2539, %r7;
	// inline asm
	ld.local.u32 	%r2434, [%rd7];
	ld.local.u32 	%r2435, [%rd6+12];
	// inline asm
	prmt.b32 %r7372, %r2434, %r2435, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2541, %r2542}, [%rd6+8];
	// inline asm
	prmt.b32 %r7373, %r2542, %r2541, %r7;
	// inline asm
	ld.local.u32 	%r2442, [%rd6+8];
	ld.local.u32 	%r2443, [%rd6+4];
	// inline asm
	prmt.b32 %r7366, %r2442, %r2443, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2543, %r2544}, [%rd6];
	// inline asm
	prmt.b32 %r7367, %r2544, %r2543, %r7;
	// inline asm
	ld.local.u32 	%r2450, [%rd6];
	ld.local.u32 	%r2451, [%rd5+12];
	// inline asm
	prmt.b32 %r7368, %r2450, %r2451, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2545, %r2546}, [%rd5+8];
	// inline asm
	prmt.b32 %r7369, %r2546, %r2545, %r7;
	// inline asm
	ld.local.u32 	%r2458, [%rd5+8];
	ld.local.u32 	%r2459, [%rd5+4];
	// inline asm
	prmt.b32 %r7362, %r2458, %r2459, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2547, %r2548}, [%rd5];
	// inline asm
	prmt.b32 %r7363, %r2548, %r2547, %r7;
	// inline asm
	ld.local.u32 	%r2466, [%rd5];
	ld.local.u32 	%r2467, [%rd4+12];
	// inline asm
	prmt.b32 %r7364, %r2466, %r2467, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2549, %r2550}, [%rd4+8];
	// inline asm
	prmt.b32 %r7365, %r2550, %r2549, %r7;
	// inline asm
	ld.local.u32 	%r2474, [%rd4+8];
	ld.local.u32 	%r2475, [%rd4+4];
	// inline asm
	prmt.b32 %r2473, %r2474, %r2475, %r7;
	// inline asm
	st.local.u32 	[%rd9+12], %r2473;
	ld.local.v2.u32 	{%r2551, %r2552}, [%rd4];
	// inline asm
	prmt.b32 %r2477, %r2552, %r2551, %r7;
	// inline asm
	st.local.u32 	[%rd9+8], %r2477;
	ld.local.u32 	%r2482, [%rd4];
	ld.local.u32 	%r2483, [%rd3+12];
	// inline asm
	prmt.b32 %r2481, %r2482, %r2483, %r7;
	// inline asm
	st.local.u32 	[%rd9+4], %r2481;
	ld.local.v2.u32 	{%r2553, %r2554}, [%rd3+8];
	// inline asm
	prmt.b32 %r2485, %r2554, %r2553, %r7;
	// inline asm
	st.local.u32 	[%rd9], %r2485;
	ld.local.u32 	%r2490, [%rd3+8];
	ld.local.u32 	%r2491, [%rd3+4];
	// inline asm
	prmt.b32 %r2489, %r2490, %r2491, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r2489;
	ld.local.v2.u32 	{%r2555, %r2556}, [%rd3];
	// inline asm
	prmt.b32 %r2493, %r2556, %r2555, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r2493;
	ld.local.u32 	%r2498, [%rd3];
	ld.local.u32 	%r2499, [%rd2+12];
	// inline asm
	prmt.b32 %r2497, %r2498, %r2499, %r7;
	// inline asm
	st.local.u32 	[%rd8+4], %r2497;
	ld.local.v2.u32 	{%r2557, %r2558}, [%rd2+8];
	// inline asm
	prmt.b32 %r2501, %r2558, %r2557, %r7;
	// inline asm
	st.local.u32 	[%rd8], %r2501;
	ld.local.u32 	%r2506, [%rd2+8];
	ld.local.u32 	%r2507, [%rd2+4];
	// inline asm
	prmt.b32 %r2505, %r2506, %r2507, %r7;
	// inline asm
	st.local.u32 	[%rd7+12], %r2505;
	ld.local.v2.u32 	{%r2559, %r2560}, [%rd2];
	// inline asm
	prmt.b32 %r2509, %r2560, %r2559, %r7;
	// inline asm
	st.local.u32 	[%rd7+8], %r2509;
	ld.local.u32 	%r2514, [%rd2];
	// inline asm
	prmt.b32 %r2513, %r2514, %r7360, %r7;
	// inline asm
	st.local.v2.u32 	[%rd7], {%r7360, %r2513};
	st.local.v4.u32 	[%rd6], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd5], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd4], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd3], {%r7360, %r7360, %r7360, %r7360};
	st.local.v2.u32 	[%rd2+8], {%r7360, %r7360};
	mov.u64 	%rd199, 0;
	st.local.u64 	[%rd2], %rd199;
	mov.u32 	%r7361, %r7360;
	mov.u32 	%r7382, %r7360;
	mov.u32 	%r7383, %r7360;
	bra.uni 	BB2_85;

BB2_31:
	setp.eq.s32	%p32, %r673, 13;
	mov.u32 	%r7363, %r7362;
	mov.u32 	%r7364, %r7362;
	mov.u32 	%r7365, %r7362;
	mov.u32 	%r7366, %r7362;
	mov.u32 	%r7367, %r7362;
	mov.u32 	%r7368, %r7362;
	mov.u32 	%r7369, %r7362;
	mov.u32 	%r7370, %r7362;
	mov.u32 	%r7371, %r7362;
	mov.u32 	%r7372, %r7362;
	mov.u32 	%r7373, %r7362;
	mov.u32 	%r7374, %r7362;
	mov.u32 	%r7375, %r7362;
	mov.u32 	%r7376, %r7362;
	mov.u32 	%r7377, %r7362;
	mov.u32 	%r7378, %r7362;
	mov.u32 	%r7379, %r7362;
	mov.u32 	%r7380, %r7362;
	mov.u32 	%r7381, %r7362;
	mov.u32 	%r7382, %r7362;
	mov.u32 	%r7383, %r7362;
	mov.u32 	%r7384, %r7362;
	mov.u32 	%r7385, %r7362;
	mov.u32 	%r7386, %r7362;
	mov.u32 	%r7387, %r7362;
	mov.u32 	%r7388, %r7362;
	mov.u32 	%r7389, %r7362;
	mov.u32 	%r7390, %r7362;
	mov.u32 	%r7391, %r7362;
	mov.u32 	%r7392, %r7362;
	mov.u32 	%r7393, %r7362;
	@%p32 bra 	BB2_32;
	bra.uni 	BB2_89;

BB2_32:
	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7376, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3973, %r3974}, [%rd9+8];
	// inline asm
	prmt.b32 %r7377, %r3974, %r3973, %r7;
	// inline asm
	ld.local.u32 	%r3830, [%rd9+8];
	ld.local.u32 	%r3831, [%rd9+4];
	// inline asm
	prmt.b32 %r7370, %r3830, %r3831, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3975, %r3976}, [%rd9];
	// inline asm
	prmt.b32 %r7371, %r3976, %r3975, %r7;
	// inline asm
	ld.local.u32 	%r3838, [%rd9];
	ld.local.u32 	%r3839, [%rd8+12];
	// inline asm
	prmt.b32 %r7372, %r3838, %r3839, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3977, %r3978}, [%rd8+8];
	// inline asm
	prmt.b32 %r7373, %r3978, %r3977, %r7;
	// inline asm
	ld.local.u32 	%r3846, [%rd8+8];
	ld.local.u32 	%r3847, [%rd8+4];
	// inline asm
	prmt.b32 %r7366, %r3846, %r3847, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3979, %r3980}, [%rd8];
	// inline asm
	prmt.b32 %r7367, %r3980, %r3979, %r7;
	// inline asm
	ld.local.u32 	%r3854, [%rd8];
	ld.local.u32 	%r3855, [%rd7+12];
	// inline asm
	prmt.b32 %r7368, %r3854, %r3855, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3981, %r3982}, [%rd7+8];
	// inline asm
	prmt.b32 %r7369, %r3982, %r3981, %r7;
	// inline asm
	ld.local.u32 	%r3862, [%rd7+8];
	ld.local.u32 	%r3863, [%rd7+4];
	// inline asm
	prmt.b32 %r7362, %r3862, %r3863, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3983, %r3984}, [%rd7];
	// inline asm
	prmt.b32 %r7363, %r3984, %r3983, %r7;
	// inline asm
	ld.local.u32 	%r3870, [%rd7];
	ld.local.u32 	%r3871, [%rd6+12];
	// inline asm
	prmt.b32 %r7364, %r3870, %r3871, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3985, %r3986}, [%rd6+8];
	// inline asm
	prmt.b32 %r7365, %r3986, %r3985, %r7;
	// inline asm
	ld.local.u32 	%r3878, [%rd6+8];
	ld.local.u32 	%r3879, [%rd6+4];
	// inline asm
	prmt.b32 %r3877, %r3878, %r3879, %r7;
	// inline asm
	st.local.u32 	[%rd9+12], %r3877;
	ld.local.v2.u32 	{%r3987, %r3988}, [%rd6];
	// inline asm
	prmt.b32 %r3881, %r3988, %r3987, %r7;
	// inline asm
	st.local.u32 	[%rd9+8], %r3881;
	ld.local.u32 	%r3886, [%rd6];
	ld.local.u32 	%r3887, [%rd5+12];
	// inline asm
	prmt.b32 %r3885, %r3886, %r3887, %r7;
	// inline asm
	st.local.u32 	[%rd9+4], %r3885;
	ld.local.v2.u32 	{%r3989, %r3990}, [%rd5+8];
	// inline asm
	prmt.b32 %r3889, %r3990, %r3989, %r7;
	// inline asm
	st.local.u32 	[%rd9], %r3889;
	ld.local.u32 	%r3894, [%rd5+8];
	ld.local.u32 	%r3895, [%rd5+4];
	// inline asm
	prmt.b32 %r3893, %r3894, %r3895, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r3893;
	ld.local.v2.u32 	{%r3991, %r3992}, [%rd5];
	// inline asm
	prmt.b32 %r3897, %r3992, %r3991, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r3897;
	ld.local.u32 	%r3902, [%rd5];
	ld.local.u32 	%r3903, [%rd4+12];
	// inline asm
	prmt.b32 %r3901, %r3902, %r3903, %r7;
	// inline asm
	st.local.u32 	[%rd8+4], %r3901;
	ld.local.v2.u32 	{%r3993, %r3994}, [%rd4+8];
	// inline asm
	prmt.b32 %r3905, %r3994, %r3993, %r7;
	// inline asm
	st.local.u32 	[%rd8], %r3905;
	ld.local.u32 	%r3910, [%rd4+8];
	ld.local.u32 	%r3911, [%rd4+4];
	// inline asm
	prmt.b32 %r3909, %r3910, %r3911, %r7;
	// inline asm
	st.local.u32 	[%rd7+12], %r3909;
	ld.local.v2.u32 	{%r3995, %r3996}, [%rd4];
	// inline asm
	prmt.b32 %r3913, %r3996, %r3995, %r7;
	// inline asm
	st.local.u32 	[%rd7+8], %r3913;
	ld.local.u32 	%r3918, [%rd4];
	ld.local.u32 	%r3919, [%rd3+12];
	// inline asm
	prmt.b32 %r3917, %r3918, %r3919, %r7;
	// inline asm
	st.local.u32 	[%rd7+4], %r3917;
	ld.local.v2.u32 	{%r3997, %r3998}, [%rd3+8];
	// inline asm
	prmt.b32 %r3921, %r3998, %r3997, %r7;
	// inline asm
	st.local.u32 	[%rd7], %r3921;
	ld.local.u32 	%r3926, [%rd3+8];
	ld.local.u32 	%r3927, [%rd3+4];
	// inline asm
	prmt.b32 %r3925, %r3926, %r3927, %r7;
	// inline asm
	st.local.u32 	[%rd6+12], %r3925;
	ld.local.v2.u32 	{%r3999, %r4000}, [%rd3];
	// inline asm
	prmt.b32 %r3929, %r4000, %r3999, %r7;
	// inline asm
	st.local.u32 	[%rd6+8], %r3929;
	ld.local.u32 	%r3934, [%rd3];
	ld.local.u32 	%r3935, [%rd2+12];
	// inline asm
	prmt.b32 %r3933, %r3934, %r3935, %r7;
	// inline asm
	st.local.u32 	[%rd6+4], %r3933;
	ld.local.v2.u32 	{%r4001, %r4002}, [%rd2+8];
	// inline asm
	prmt.b32 %r3937, %r4002, %r4001, %r7;
	// inline asm
	st.local.u32 	[%rd6], %r3937;
	ld.local.u32 	%r3942, [%rd2+8];
	ld.local.u32 	%r3943, [%rd2+4];
	// inline asm
	prmt.b32 %r3941, %r3942, %r3943, %r7;
	// inline asm
	st.local.u32 	[%rd5+12], %r3941;
	ld.local.v2.u32 	{%r4003, %r4004}, [%rd2];
	// inline asm
	prmt.b32 %r3945, %r4004, %r4003, %r7;
	// inline asm
	st.local.u32 	[%rd5+8], %r3945;
	ld.local.u32 	%r3950, [%rd2];
	// inline asm
	prmt.b32 %r3949, %r3950, %r7360, %r7;
	// inline asm
	st.local.v2.u32 	[%rd5], {%r7360, %r3949};
	st.local.v4.u32 	[%rd4], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd3], {%r7360, %r7360, %r7360, %r7360};
	st.local.v2.u32 	[%rd2+8], {%r7360, %r7360};
	mov.u64 	%rd207, 0;
	st.local.u64 	[%rd2], %rd207;
	mov.u32 	%r7361, %r7360;
	mov.u32 	%r7374, %r7360;
	mov.u32 	%r7375, %r7360;
	bra.uni 	BB2_83;

BB2_62:
	setp.eq.s32	%p9, %r673, 29;
	mov.u32 	%r7363, %r7362;
	mov.u32 	%r7364, %r7362;
	mov.u32 	%r7365, %r7362;
	mov.u32 	%r7366, %r7362;
	mov.u32 	%r7367, %r7362;
	mov.u32 	%r7368, %r7362;
	mov.u32 	%r7369, %r7362;
	mov.u32 	%r7370, %r7362;
	mov.u32 	%r7371, %r7362;
	mov.u32 	%r7372, %r7362;
	mov.u32 	%r7373, %r7362;
	mov.u32 	%r7374, %r7362;
	mov.u32 	%r7375, %r7362;
	mov.u32 	%r7376, %r7362;
	mov.u32 	%r7377, %r7362;
	mov.u32 	%r7378, %r7362;
	mov.u32 	%r7379, %r7362;
	mov.u32 	%r7380, %r7362;
	mov.u32 	%r7381, %r7362;
	mov.u32 	%r7382, %r7362;
	mov.u32 	%r7383, %r7362;
	mov.u32 	%r7384, %r7362;
	mov.u32 	%r7385, %r7362;
	mov.u32 	%r7386, %r7362;
	mov.u32 	%r7387, %r7362;
	mov.u32 	%r7388, %r7362;
	mov.u32 	%r7389, %r7362;
	mov.u32 	%r7390, %r7362;
	mov.u32 	%r7391, %r7362;
	mov.u32 	%r7392, %r7362;
	mov.u32 	%r7393, %r7362;
	@%p9 bra 	BB2_63;
	bra.uni 	BB2_89;

BB2_63:
	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7392, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1149, %r1150}, [%rd9+8];
	// inline asm
	prmt.b32 %r7393, %r1150, %r1149, %r7;
	// inline asm
	ld.local.u32 	%r1022, [%rd9+8];
	ld.local.u32 	%r1023, [%rd9+4];
	// inline asm
	prmt.b32 %r7386, %r1022, %r1023, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1151, %r1152}, [%rd9];
	// inline asm
	prmt.b32 %r7387, %r1152, %r1151, %r7;
	// inline asm
	ld.local.u32 	%r1030, [%rd9];
	ld.local.u32 	%r1031, [%rd8+12];
	// inline asm
	prmt.b32 %r7388, %r1030, %r1031, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1153, %r1154}, [%rd8+8];
	// inline asm
	prmt.b32 %r7389, %r1154, %r1153, %r7;
	// inline asm
	ld.local.u32 	%r1038, [%rd8+8];
	ld.local.u32 	%r1039, [%rd8+4];
	// inline asm
	prmt.b32 %r7382, %r1038, %r1039, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1155, %r1156}, [%rd8];
	// inline asm
	prmt.b32 %r7383, %r1156, %r1155, %r7;
	// inline asm
	ld.local.u32 	%r1046, [%rd8];
	ld.local.u32 	%r1047, [%rd7+12];
	// inline asm
	prmt.b32 %r7384, %r1046, %r1047, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1157, %r1158}, [%rd7+8];
	// inline asm
	prmt.b32 %r7385, %r1158, %r1157, %r7;
	// inline asm
	ld.local.u32 	%r1054, [%rd7+8];
	ld.local.u32 	%r1055, [%rd7+4];
	// inline asm
	prmt.b32 %r7378, %r1054, %r1055, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1159, %r1160}, [%rd7];
	// inline asm
	prmt.b32 %r7379, %r1160, %r1159, %r7;
	// inline asm
	ld.local.u32 	%r1062, [%rd7];
	ld.local.u32 	%r1063, [%rd6+12];
	// inline asm
	prmt.b32 %r7380, %r1062, %r1063, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1161, %r1162}, [%rd6+8];
	// inline asm
	prmt.b32 %r7381, %r1162, %r1161, %r7;
	// inline asm
	ld.local.u32 	%r1070, [%rd6+8];
	ld.local.u32 	%r1071, [%rd6+4];
	// inline asm
	prmt.b32 %r7374, %r1070, %r1071, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1163, %r1164}, [%rd6];
	// inline asm
	prmt.b32 %r7375, %r1164, %r1163, %r7;
	// inline asm
	ld.local.u32 	%r1078, [%rd6];
	ld.local.u32 	%r1079, [%rd5+12];
	// inline asm
	prmt.b32 %r7376, %r1078, %r1079, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1165, %r1166}, [%rd5+8];
	// inline asm
	prmt.b32 %r7377, %r1166, %r1165, %r7;
	// inline asm
	ld.local.u32 	%r1086, [%rd5+8];
	ld.local.u32 	%r1087, [%rd5+4];
	// inline asm
	prmt.b32 %r7370, %r1086, %r1087, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1167, %r1168}, [%rd5];
	// inline asm
	prmt.b32 %r7371, %r1168, %r1167, %r7;
	// inline asm
	ld.local.u32 	%r1094, [%rd5];
	ld.local.u32 	%r1095, [%rd4+12];
	// inline asm
	prmt.b32 %r7372, %r1094, %r1095, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1169, %r1170}, [%rd4+8];
	// inline asm
	prmt.b32 %r7373, %r1170, %r1169, %r7;
	// inline asm
	ld.local.u32 	%r1102, [%rd4+8];
	ld.local.u32 	%r1103, [%rd4+4];
	// inline asm
	prmt.b32 %r7366, %r1102, %r1103, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1171, %r1172}, [%rd4];
	// inline asm
	prmt.b32 %r7367, %r1172, %r1171, %r7;
	// inline asm
	ld.local.u32 	%r1110, [%rd4];
	ld.local.u32 	%r1111, [%rd3+12];
	// inline asm
	prmt.b32 %r7368, %r1110, %r1111, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1173, %r1174}, [%rd3+8];
	// inline asm
	prmt.b32 %r7369, %r1174, %r1173, %r7;
	// inline asm
	ld.local.u32 	%r1118, [%rd3+8];
	ld.local.u32 	%r1119, [%rd3+4];
	// inline asm
	prmt.b32 %r7362, %r1118, %r1119, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1175, %r1176}, [%rd3];
	// inline asm
	prmt.b32 %r7363, %r1176, %r1175, %r7;
	// inline asm
	ld.local.u32 	%r1126, [%rd3];
	ld.local.u32 	%r1127, [%rd2+12];
	// inline asm
	prmt.b32 %r7364, %r1126, %r1127, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1177, %r1178}, [%rd2+8];
	// inline asm
	prmt.b32 %r7365, %r1178, %r1177, %r7;
	// inline asm
	ld.local.u32 	%r1134, [%rd2+8];
	ld.local.u32 	%r1135, [%rd2+4];
	// inline asm
	prmt.b32 %r1133, %r1134, %r1135, %r7;
	// inline asm
	st.local.u32 	[%rd9+12], %r1133;
	ld.local.v2.u32 	{%r1179, %r1180}, [%rd2];
	// inline asm
	prmt.b32 %r1137, %r1180, %r1179, %r7;
	// inline asm
	st.local.u32 	[%rd9+8], %r1137;
	ld.local.u32 	%r1142, [%rd2];
	// inline asm
	prmt.b32 %r1141, %r1142, %r7360, %r7;
	// inline asm
	st.local.v2.u32 	[%rd9], {%r7360, %r1141};
	st.local.v4.u32 	[%rd8], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd7], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd6], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd5], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd4], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd3], {%r7360, %r7360, %r7360, %r7360};
	st.local.v2.u32 	[%rd2+8], {%r7360, %r7360};
	mov.u64 	%rd191, 0;
	st.local.u64 	[%rd2], %rd191;
	mov.u32 	%r7361, %r7360;
	mov.u32 	%r7390, %r7360;
	mov.u32 	%r7391, %r7360;
	bra.uni 	BB2_89;

BB2_11:
	setp.eq.s32	%p46, %r673, 3;
	mov.u32 	%r7363, %r7362;
	mov.u32 	%r7364, %r7362;
	mov.u32 	%r7365, %r7362;
	mov.u32 	%r7366, %r7362;
	mov.u32 	%r7367, %r7362;
	mov.u32 	%r7368, %r7362;
	mov.u32 	%r7369, %r7362;
	mov.u32 	%r7370, %r7362;
	mov.u32 	%r7371, %r7362;
	mov.u32 	%r7372, %r7362;
	mov.u32 	%r7373, %r7362;
	mov.u32 	%r7374, %r7362;
	mov.u32 	%r7375, %r7362;
	mov.u32 	%r7376, %r7362;
	mov.u32 	%r7377, %r7362;
	mov.u32 	%r7378, %r7362;
	mov.u32 	%r7379, %r7362;
	mov.u32 	%r7380, %r7362;
	mov.u32 	%r7381, %r7362;
	mov.u32 	%r7382, %r7362;
	mov.u32 	%r7383, %r7362;
	mov.u32 	%r7384, %r7362;
	mov.u32 	%r7385, %r7362;
	mov.u32 	%r7386, %r7362;
	mov.u32 	%r7387, %r7362;
	mov.u32 	%r7388, %r7362;
	mov.u32 	%r7389, %r7362;
	mov.u32 	%r7390, %r7362;
	mov.u32 	%r7391, %r7362;
	mov.u32 	%r7392, %r7362;
	mov.u32 	%r7393, %r7362;
	@%p46 bra 	BB2_12;
	bra.uni 	BB2_89;

BB2_12:
	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7362, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r5868, %r5869}, [%rd9+8];
	// inline asm
	prmt.b32 %r7363, %r5869, %r5868, %r7;
	// inline asm
	ld.local.u32 	%r5715, [%rd9+8];
	ld.local.u32 	%r5716, [%rd9+4];
	// inline asm
	prmt.b32 %r7364, %r5715, %r5716, %r7;
	// inline asm
	ld.local.v2.u32 	{%r5870, %r5871}, [%rd9];
	// inline asm
	prmt.b32 %r7365, %r5871, %r5870, %r7;
	// inline asm
	ld.local.u32 	%r5723, [%rd9];
	ld.local.u32 	%r5724, [%rd8+12];
	// inline asm
	prmt.b32 %r5722, %r5723, %r5724, %r7;
	// inline asm
	st.local.u32 	[%rd9+12], %r5722;
	ld.local.v2.u32 	{%r5872, %r5873}, [%rd8+8];
	// inline asm
	prmt.b32 %r5726, %r5873, %r5872, %r7;
	// inline asm
	st.local.u32 	[%rd9+8], %r5726;
	ld.local.u32 	%r5731, [%rd8+8];
	ld.local.u32 	%r5732, [%rd8+4];
	// inline asm
	prmt.b32 %r5730, %r5731, %r5732, %r7;
	// inline asm
	st.local.u32 	[%rd9+4], %r5730;
	ld.local.v2.u32 	{%r5874, %r5875}, [%rd8];
	// inline asm
	prmt.b32 %r5734, %r5875, %r5874, %r7;
	// inline asm
	st.local.u32 	[%rd9], %r5734;
	ld.local.u32 	%r5739, [%rd8];
	ld.local.u32 	%r5740, [%rd7+12];
	// inline asm
	prmt.b32 %r5738, %r5739, %r5740, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r5738;
	ld.local.v2.u32 	{%r5876, %r5877}, [%rd7+8];
	// inline asm
	prmt.b32 %r5742, %r5877, %r5876, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r5742;
	ld.local.u32 	%r5747, [%rd7+8];
	ld.local.u32 	%r5748, [%rd7+4];
	// inline asm
	prmt.b32 %r5746, %r5747, %r5748, %r7;
	// inline asm
	st.local.u32 	[%rd8+4], %r5746;
	ld.local.v2.u32 	{%r5878, %r5879}, [%rd7];
	// inline asm
	prmt.b32 %r5750, %r5879, %r5878, %r7;
	// inline asm
	st.local.u32 	[%rd8], %r5750;
	ld.local.u32 	%r5755, [%rd7];
	ld.local.u32 	%r5756, [%rd6+12];
	// inline asm
	prmt.b32 %r5754, %r5755, %r5756, %r7;
	// inline asm
	st.local.u32 	[%rd7+12], %r5754;
	ld.local.v2.u32 	{%r5880, %r5881}, [%rd6+8];
	// inline asm
	prmt.b32 %r5758, %r5881, %r5880, %r7;
	// inline asm
	st.local.u32 	[%rd7+8], %r5758;
	ld.local.u32 	%r5763, [%rd6+8];
	ld.local.u32 	%r5764, [%rd6+4];
	// inline asm
	prmt.b32 %r5762, %r5763, %r5764, %r7;
	// inline asm
	st.local.u32 	[%rd7+4], %r5762;
	ld.local.v2.u32 	{%r5882, %r5883}, [%rd6];
	// inline asm
	prmt.b32 %r5766, %r5883, %r5882, %r7;
	// inline asm
	st.local.u32 	[%rd7], %r5766;
	ld.local.u32 	%r5771, [%rd6];
	ld.local.u32 	%r5772, [%rd5+12];
	// inline asm
	prmt.b32 %r5770, %r5771, %r5772, %r7;
	// inline asm
	st.local.u32 	[%rd6+12], %r5770;
	ld.local.v2.u32 	{%r5884, %r5885}, [%rd5+8];
	// inline asm
	prmt.b32 %r5774, %r5885, %r5884, %r7;
	// inline asm
	st.local.u32 	[%rd6+8], %r5774;
	ld.local.u32 	%r5779, [%rd5+8];
	ld.local.u32 	%r5780, [%rd5+4];
	// inline asm
	prmt.b32 %r5778, %r5779, %r5780, %r7;
	// inline asm
	st.local.u32 	[%rd6+4], %r5778;
	ld.local.v2.u32 	{%r5886, %r5887}, [%rd5];
	// inline asm
	prmt.b32 %r5782, %r5887, %r5886, %r7;
	// inline asm
	st.local.u32 	[%rd6], %r5782;
	ld.local.u32 	%r5787, [%rd5];
	ld.local.u32 	%r5788, [%rd4+12];
	// inline asm
	prmt.b32 %r5786, %r5787, %r5788, %r7;
	// inline asm
	st.local.u32 	[%rd5+12], %r5786;
	ld.local.v2.u32 	{%r5888, %r5889}, [%rd4+8];
	// inline asm
	prmt.b32 %r5790, %r5889, %r5888, %r7;
	// inline asm
	st.local.u32 	[%rd5+8], %r5790;
	ld.local.u32 	%r5795, [%rd4+8];
	ld.local.u32 	%r5796, [%rd4+4];
	// inline asm
	prmt.b32 %r5794, %r5795, %r5796, %r7;
	// inline asm
	st.local.u32 	[%rd5+4], %r5794;
	ld.local.v2.u32 	{%r5890, %r5891}, [%rd4];
	// inline asm
	prmt.b32 %r5798, %r5891, %r5890, %r7;
	// inline asm
	st.local.u32 	[%rd5], %r5798;
	ld.local.u32 	%r5803, [%rd4];
	ld.local.u32 	%r5804, [%rd3+12];
	// inline asm
	prmt.b32 %r5802, %r5803, %r5804, %r7;
	// inline asm
	st.local.u32 	[%rd4+12], %r5802;
	ld.local.v2.u32 	{%r5892, %r5893}, [%rd3+8];
	// inline asm
	prmt.b32 %r5806, %r5893, %r5892, %r7;
	// inline asm
	st.local.u32 	[%rd4+8], %r5806;
	ld.local.u32 	%r5811, [%rd3+8];
	ld.local.u32 	%r5812, [%rd3+4];
	// inline asm
	prmt.b32 %r5810, %r5811, %r5812, %r7;
	// inline asm
	st.local.u32 	[%rd4+4], %r5810;
	ld.local.v2.u32 	{%r5894, %r5895}, [%rd3];
	// inline asm
	prmt.b32 %r5814, %r5895, %r5894, %r7;
	// inline asm
	st.local.u32 	[%rd4], %r5814;
	ld.local.u32 	%r5819, [%rd3];
	ld.local.u32 	%r5820, [%rd2+12];
	// inline asm
	prmt.b32 %r5818, %r5819, %r5820, %r7;
	// inline asm
	st.local.u32 	[%rd3+12], %r5818;
	ld.local.v2.u32 	{%r5896, %r5897}, [%rd2+8];
	// inline asm
	prmt.b32 %r5822, %r5897, %r5896, %r7;
	// inline asm
	st.local.u32 	[%rd3+8], %r5822;
	ld.local.u32 	%r5827, [%rd2+8];
	ld.local.u32 	%r5828, [%rd2+4];
	// inline asm
	prmt.b32 %r5826, %r5827, %r5828, %r7;
	// inline asm
	st.local.u32 	[%rd3+4], %r5826;
	ld.local.v2.u32 	{%r5898, %r5899}, [%rd2];
	// inline asm
	prmt.b32 %r5830, %r5899, %r5898, %r7;
	// inline asm
	st.local.u32 	[%rd3], %r5830;
	ld.local.u32 	%r5835, [%rd2];
	// inline asm
	prmt.b32 %r5834, %r5835, %r7360, %r7;
	// inline asm
	st.local.v2.u32 	[%rd2+8], {%r7360, %r5834};
	mov.u64 	%rd217, 0;
	st.local.u64 	[%rd2], %rd217;
	mov.u32 	%r7361, %r7360;

BB2_13:
	mov.u32 	%r7366, %r7360;
	mov.u32 	%r7367, %r7360;
	mov.u32 	%r7368, %r7360;
	mov.u32 	%r7369, %r7360;
	bra.uni 	BB2_81;

BB2_43:
	setp.eq.s32	%p23, %r673, 19;
	mov.u32 	%r7363, %r7362;
	mov.u32 	%r7364, %r7362;
	mov.u32 	%r7365, %r7362;
	mov.u32 	%r7366, %r7362;
	mov.u32 	%r7367, %r7362;
	mov.u32 	%r7368, %r7362;
	mov.u32 	%r7369, %r7362;
	mov.u32 	%r7370, %r7362;
	mov.u32 	%r7371, %r7362;
	mov.u32 	%r7372, %r7362;
	mov.u32 	%r7373, %r7362;
	mov.u32 	%r7374, %r7362;
	mov.u32 	%r7375, %r7362;
	mov.u32 	%r7376, %r7362;
	mov.u32 	%r7377, %r7362;
	mov.u32 	%r7378, %r7362;
	mov.u32 	%r7379, %r7362;
	mov.u32 	%r7380, %r7362;
	mov.u32 	%r7381, %r7362;
	mov.u32 	%r7382, %r7362;
	mov.u32 	%r7383, %r7362;
	mov.u32 	%r7384, %r7362;
	mov.u32 	%r7385, %r7362;
	mov.u32 	%r7386, %r7362;
	mov.u32 	%r7387, %r7362;
	mov.u32 	%r7388, %r7362;
	mov.u32 	%r7389, %r7362;
	mov.u32 	%r7390, %r7362;
	mov.u32 	%r7391, %r7362;
	mov.u32 	%r7392, %r7362;
	mov.u32 	%r7393, %r7362;
	@%p23 bra 	BB2_44;
	bra.uni 	BB2_89;

BB2_44:
	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7378, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2884, %r2885}, [%rd9+8];
	// inline asm
	prmt.b32 %r7379, %r2885, %r2884, %r7;
	// inline asm
	ld.local.u32 	%r2747, [%rd9+8];
	ld.local.u32 	%r2748, [%rd9+4];
	// inline asm
	prmt.b32 %r7380, %r2747, %r2748, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2886, %r2887}, [%rd9];
	// inline asm
	prmt.b32 %r7381, %r2887, %r2886, %r7;
	// inline asm
	ld.local.u32 	%r2755, [%rd9];
	ld.local.u32 	%r2756, [%rd8+12];
	// inline asm
	prmt.b32 %r7374, %r2755, %r2756, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2888, %r2889}, [%rd8+8];
	// inline asm
	prmt.b32 %r7375, %r2889, %r2888, %r7;
	// inline asm
	ld.local.u32 	%r2763, [%rd8+8];
	ld.local.u32 	%r2764, [%rd8+4];
	// inline asm
	prmt.b32 %r7376, %r2763, %r2764, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2890, %r2891}, [%rd8];
	// inline asm
	prmt.b32 %r7377, %r2891, %r2890, %r7;
	// inline asm
	ld.local.u32 	%r2771, [%rd8];
	ld.local.u32 	%r2772, [%rd7+12];
	// inline asm
	prmt.b32 %r7370, %r2771, %r2772, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2892, %r2893}, [%rd7+8];
	// inline asm
	prmt.b32 %r7371, %r2893, %r2892, %r7;
	// inline asm
	ld.local.u32 	%r2779, [%rd7+8];
	ld.local.u32 	%r2780, [%rd7+4];
	// inline asm
	prmt.b32 %r7372, %r2779, %r2780, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2894, %r2895}, [%rd7];
	// inline asm
	prmt.b32 %r7373, %r2895, %r2894, %r7;
	// inline asm
	ld.local.u32 	%r2787, [%rd7];
	ld.local.u32 	%r2788, [%rd6+12];
	// inline asm
	prmt.b32 %r7366, %r2787, %r2788, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2896, %r2897}, [%rd6+8];
	// inline asm
	prmt.b32 %r7367, %r2897, %r2896, %r7;
	// inline asm
	ld.local.u32 	%r2795, [%rd6+8];
	ld.local.u32 	%r2796, [%rd6+4];
	// inline asm
	prmt.b32 %r7368, %r2795, %r2796, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2898, %r2899}, [%rd6];
	// inline asm
	prmt.b32 %r7369, %r2899, %r2898, %r7;
	// inline asm
	ld.local.u32 	%r2803, [%rd6];
	ld.local.u32 	%r2804, [%rd5+12];
	// inline asm
	prmt.b32 %r7362, %r2803, %r2804, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2900, %r2901}, [%rd5+8];
	// inline asm
	prmt.b32 %r7363, %r2901, %r2900, %r7;
	// inline asm
	ld.local.u32 	%r2811, [%rd5+8];
	ld.local.u32 	%r2812, [%rd5+4];
	// inline asm
	prmt.b32 %r7364, %r2811, %r2812, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2902, %r2903}, [%rd5];
	// inline asm
	prmt.b32 %r7365, %r2903, %r2902, %r7;
	// inline asm
	ld.local.u32 	%r2819, [%rd5];
	ld.local.u32 	%r2820, [%rd4+12];
	// inline asm
	prmt.b32 %r2818, %r2819, %r2820, %r7;
	// inline asm
	st.local.u32 	[%rd9+12], %r2818;
	ld.local.v2.u32 	{%r2904, %r2905}, [%rd4+8];
	// inline asm
	prmt.b32 %r2822, %r2905, %r2904, %r7;
	// inline asm
	st.local.u32 	[%rd9+8], %r2822;
	ld.local.u32 	%r2827, [%rd4+8];
	ld.local.u32 	%r2828, [%rd4+4];
	// inline asm
	prmt.b32 %r2826, %r2827, %r2828, %r7;
	// inline asm
	st.local.u32 	[%rd9+4], %r2826;
	ld.local.v2.u32 	{%r2906, %r2907}, [%rd4];
	// inline asm
	prmt.b32 %r2830, %r2907, %r2906, %r7;
	// inline asm
	st.local.u32 	[%rd9], %r2830;
	ld.local.u32 	%r2835, [%rd4];
	ld.local.u32 	%r2836, [%rd3+12];
	// inline asm
	prmt.b32 %r2834, %r2835, %r2836, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r2834;
	ld.local.v2.u32 	{%r2908, %r2909}, [%rd3+8];
	// inline asm
	prmt.b32 %r2838, %r2909, %r2908, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r2838;
	ld.local.u32 	%r2843, [%rd3+8];
	ld.local.u32 	%r2844, [%rd3+4];
	// inline asm
	prmt.b32 %r2842, %r2843, %r2844, %r7;
	// inline asm
	st.local.u32 	[%rd8+4], %r2842;
	ld.local.v2.u32 	{%r2910, %r2911}, [%rd3];
	// inline asm
	prmt.b32 %r2846, %r2911, %r2910, %r7;
	// inline asm
	st.local.u32 	[%rd8], %r2846;
	ld.local.u32 	%r2851, [%rd3];
	ld.local.u32 	%r2852, [%rd2+12];
	// inline asm
	prmt.b32 %r2850, %r2851, %r2852, %r7;
	// inline asm
	st.local.u32 	[%rd7+12], %r2850;
	ld.local.v2.u32 	{%r2912, %r2913}, [%rd2+8];
	// inline asm
	prmt.b32 %r2854, %r2913, %r2912, %r7;
	// inline asm
	st.local.u32 	[%rd7+8], %r2854;
	ld.local.u32 	%r2859, [%rd2+8];
	ld.local.u32 	%r2860, [%rd2+4];
	// inline asm
	prmt.b32 %r2858, %r2859, %r2860, %r7;
	// inline asm
	st.local.u32 	[%rd7+4], %r2858;
	ld.local.v2.u32 	{%r2914, %r2915}, [%rd2];
	// inline asm
	prmt.b32 %r2862, %r2915, %r2914, %r7;
	// inline asm
	st.local.u32 	[%rd7], %r2862;
	ld.local.u32 	%r2867, [%rd2];
	// inline asm
	prmt.b32 %r2866, %r2867, %r7360, %r7;
	// inline asm
	st.local.v4.u32 	[%rd6], {%r7360, %r7360, %r7360, %r2866};
	st.local.v4.u32 	[%rd5], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd4], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd3], {%r7360, %r7360, %r7360, %r7360};
	st.local.v2.u32 	[%rd2+8], {%r7360, %r7360};
	mov.u64 	%rd201, 0;
	st.local.u64 	[%rd2], %rd201;
	mov.u32 	%r7361, %r7360;
	bra.uni 	BB2_84;

BB2_27:
	setp.eq.s32	%p35, %r673, 11;
	mov.u32 	%r7363, %r7362;
	mov.u32 	%r7364, %r7362;
	mov.u32 	%r7365, %r7362;
	mov.u32 	%r7366, %r7362;
	mov.u32 	%r7367, %r7362;
	mov.u32 	%r7368, %r7362;
	mov.u32 	%r7369, %r7362;
	mov.u32 	%r7370, %r7362;
	mov.u32 	%r7371, %r7362;
	mov.u32 	%r7372, %r7362;
	mov.u32 	%r7373, %r7362;
	mov.u32 	%r7374, %r7362;
	mov.u32 	%r7375, %r7362;
	mov.u32 	%r7376, %r7362;
	mov.u32 	%r7377, %r7362;
	mov.u32 	%r7378, %r7362;
	mov.u32 	%r7379, %r7362;
	mov.u32 	%r7380, %r7362;
	mov.u32 	%r7381, %r7362;
	mov.u32 	%r7382, %r7362;
	mov.u32 	%r7383, %r7362;
	mov.u32 	%r7384, %r7362;
	mov.u32 	%r7385, %r7362;
	mov.u32 	%r7386, %r7362;
	mov.u32 	%r7387, %r7362;
	mov.u32 	%r7388, %r7362;
	mov.u32 	%r7389, %r7362;
	mov.u32 	%r7390, %r7362;
	mov.u32 	%r7391, %r7362;
	mov.u32 	%r7392, %r7362;
	mov.u32 	%r7393, %r7362;
	@%p35 bra 	BB2_28;
	bra.uni 	BB2_89;

BB2_28:
	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7370, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r4344, %r4345}, [%rd9+8];
	// inline asm
	prmt.b32 %r7371, %r4345, %r4344, %r7;
	// inline asm
	ld.local.u32 	%r4199, [%rd9+8];
	ld.local.u32 	%r4200, [%rd9+4];
	// inline asm
	prmt.b32 %r7372, %r4199, %r4200, %r7;
	// inline asm
	ld.local.v2.u32 	{%r4346, %r4347}, [%rd9];
	// inline asm
	prmt.b32 %r7373, %r4347, %r4346, %r7;
	// inline asm
	ld.local.u32 	%r4207, [%rd9];
	ld.local.u32 	%r4208, [%rd8+12];
	// inline asm
	prmt.b32 %r7366, %r4207, %r4208, %r7;
	// inline asm
	ld.local.v2.u32 	{%r4348, %r4349}, [%rd8+8];
	// inline asm
	prmt.b32 %r7367, %r4349, %r4348, %r7;
	// inline asm
	ld.local.u32 	%r4215, [%rd8+8];
	ld.local.u32 	%r4216, [%rd8+4];
	// inline asm
	prmt.b32 %r7368, %r4215, %r4216, %r7;
	// inline asm
	ld.local.v2.u32 	{%r4350, %r4351}, [%rd8];
	// inline asm
	prmt.b32 %r7369, %r4351, %r4350, %r7;
	// inline asm
	ld.local.u32 	%r4223, [%rd8];
	ld.local.u32 	%r4224, [%rd7+12];
	// inline asm
	prmt.b32 %r7362, %r4223, %r4224, %r7;
	// inline asm
	ld.local.v2.u32 	{%r4352, %r4353}, [%rd7+8];
	// inline asm
	prmt.b32 %r7363, %r4353, %r4352, %r7;
	// inline asm
	ld.local.u32 	%r4231, [%rd7+8];
	ld.local.u32 	%r4232, [%rd7+4];
	// inline asm
	prmt.b32 %r7364, %r4231, %r4232, %r7;
	// inline asm
	ld.local.v2.u32 	{%r4354, %r4355}, [%rd7];
	// inline asm
	prmt.b32 %r7365, %r4355, %r4354, %r7;
	// inline asm
	ld.local.u32 	%r4239, [%rd7];
	ld.local.u32 	%r4240, [%rd6+12];
	// inline asm
	prmt.b32 %r4238, %r4239, %r4240, %r7;
	// inline asm
	st.local.u32 	[%rd9+12], %r4238;
	ld.local.v2.u32 	{%r4356, %r4357}, [%rd6+8];
	// inline asm
	prmt.b32 %r4242, %r4357, %r4356, %r7;
	// inline asm
	st.local.u32 	[%rd9+8], %r4242;
	ld.local.u32 	%r4247, [%rd6+8];
	ld.local.u32 	%r4248, [%rd6+4];
	// inline asm
	prmt.b32 %r4246, %r4247, %r4248, %r7;
	// inline asm
	st.local.u32 	[%rd9+4], %r4246;
	ld.local.v2.u32 	{%r4358, %r4359}, [%rd6];
	// inline asm
	prmt.b32 %r4250, %r4359, %r4358, %r7;
	// inline asm
	st.local.u32 	[%rd9], %r4250;
	ld.local.u32 	%r4255, [%rd6];
	ld.local.u32 	%r4256, [%rd5+12];
	// inline asm
	prmt.b32 %r4254, %r4255, %r4256, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r4254;
	ld.local.v2.u32 	{%r4360, %r4361}, [%rd5+8];
	// inline asm
	prmt.b32 %r4258, %r4361, %r4360, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r4258;
	ld.local.u32 	%r4263, [%rd5+8];
	ld.local.u32 	%r4264, [%rd5+4];
	// inline asm
	prmt.b32 %r4262, %r4263, %r4264, %r7;
	// inline asm
	st.local.u32 	[%rd8+4], %r4262;
	ld.local.v2.u32 	{%r4362, %r4363}, [%rd5];
	// inline asm
	prmt.b32 %r4266, %r4363, %r4362, %r7;
	// inline asm
	st.local.u32 	[%rd8], %r4266;
	ld.local.u32 	%r4271, [%rd5];
	ld.local.u32 	%r4272, [%rd4+12];
	// inline asm
	prmt.b32 %r4270, %r4271, %r4272, %r7;
	// inline asm
	st.local.u32 	[%rd7+12], %r4270;
	ld.local.v2.u32 	{%r4364, %r4365}, [%rd4+8];
	// inline asm
	prmt.b32 %r4274, %r4365, %r4364, %r7;
	// inline asm
	st.local.u32 	[%rd7+8], %r4274;
	ld.local.u32 	%r4279, [%rd4+8];
	ld.local.u32 	%r4280, [%rd4+4];
	// inline asm
	prmt.b32 %r4278, %r4279, %r4280, %r7;
	// inline asm
	st.local.u32 	[%rd7+4], %r4278;
	ld.local.v2.u32 	{%r4366, %r4367}, [%rd4];
	// inline asm
	prmt.b32 %r4282, %r4367, %r4366, %r7;
	// inline asm
	st.local.u32 	[%rd7], %r4282;
	ld.local.u32 	%r4287, [%rd4];
	ld.local.u32 	%r4288, [%rd3+12];
	// inline asm
	prmt.b32 %r4286, %r4287, %r4288, %r7;
	// inline asm
	st.local.u32 	[%rd6+12], %r4286;
	ld.local.v2.u32 	{%r4368, %r4369}, [%rd3+8];
	// inline asm
	prmt.b32 %r4290, %r4369, %r4368, %r7;
	// inline asm
	st.local.u32 	[%rd6+8], %r4290;
	ld.local.u32 	%r4295, [%rd3+8];
	ld.local.u32 	%r4296, [%rd3+4];
	// inline asm
	prmt.b32 %r4294, %r4295, %r4296, %r7;
	// inline asm
	st.local.u32 	[%rd6+4], %r4294;
	ld.local.v2.u32 	{%r4370, %r4371}, [%rd3];
	// inline asm
	prmt.b32 %r4298, %r4371, %r4370, %r7;
	// inline asm
	st.local.u32 	[%rd6], %r4298;
	ld.local.u32 	%r4303, [%rd3];
	ld.local.u32 	%r4304, [%rd2+12];
	// inline asm
	prmt.b32 %r4302, %r4303, %r4304, %r7;
	// inline asm
	st.local.u32 	[%rd5+12], %r4302;
	ld.local.v2.u32 	{%r4372, %r4373}, [%rd2+8];
	// inline asm
	prmt.b32 %r4306, %r4373, %r4372, %r7;
	// inline asm
	st.local.u32 	[%rd5+8], %r4306;
	ld.local.u32 	%r4311, [%rd2+8];
	ld.local.u32 	%r4312, [%rd2+4];
	// inline asm
	prmt.b32 %r4310, %r4311, %r4312, %r7;
	// inline asm
	st.local.u32 	[%rd5+4], %r4310;
	ld.local.v2.u32 	{%r4374, %r4375}, [%rd2];
	// inline asm
	prmt.b32 %r4314, %r4375, %r4374, %r7;
	// inline asm
	st.local.u32 	[%rd5], %r4314;
	ld.local.u32 	%r4319, [%rd2];
	// inline asm
	prmt.b32 %r4318, %r4319, %r7360, %r7;
	// inline asm
	st.local.v4.u32 	[%rd4], {%r7360, %r7360, %r7360, %r4318};
	st.local.v4.u32 	[%rd3], {%r7360, %r7360, %r7360, %r7360};
	st.local.v2.u32 	[%rd2+8], {%r7360, %r7360};
	mov.u64 	%rd209, 0;
	st.local.u64 	[%rd2], %rd209;
	mov.u32 	%r7361, %r7360;
	bra.uni 	BB2_82;

BB2_58:
	setp.eq.s32	%p12, %r673, 27;
	mov.u32 	%r7363, %r7362;
	mov.u32 	%r7364, %r7362;
	mov.u32 	%r7365, %r7362;
	mov.u32 	%r7366, %r7362;
	mov.u32 	%r7367, %r7362;
	mov.u32 	%r7368, %r7362;
	mov.u32 	%r7369, %r7362;
	mov.u32 	%r7370, %r7362;
	mov.u32 	%r7371, %r7362;
	mov.u32 	%r7372, %r7362;
	mov.u32 	%r7373, %r7362;
	mov.u32 	%r7374, %r7362;
	mov.u32 	%r7375, %r7362;
	mov.u32 	%r7376, %r7362;
	mov.u32 	%r7377, %r7362;
	mov.u32 	%r7378, %r7362;
	mov.u32 	%r7379, %r7362;
	mov.u32 	%r7380, %r7362;
	mov.u32 	%r7381, %r7362;
	mov.u32 	%r7382, %r7362;
	mov.u32 	%r7383, %r7362;
	mov.u32 	%r7384, %r7362;
	mov.u32 	%r7385, %r7362;
	mov.u32 	%r7386, %r7362;
	mov.u32 	%r7387, %r7362;
	mov.u32 	%r7388, %r7362;
	mov.u32 	%r7389, %r7362;
	mov.u32 	%r7390, %r7362;
	mov.u32 	%r7391, %r7362;
	mov.u32 	%r7392, %r7362;
	mov.u32 	%r7393, %r7362;
	@%p12 bra 	BB2_59;
	bra.uni 	BB2_89;

BB2_59:
	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7386, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1488, %r1489}, [%rd9+8];
	// inline asm
	prmt.b32 %r7387, %r1489, %r1488, %r7;
	// inline asm
	ld.local.u32 	%r1359, [%rd9+8];
	ld.local.u32 	%r1360, [%rd9+4];
	// inline asm
	prmt.b32 %r7388, %r1359, %r1360, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1490, %r1491}, [%rd9];
	// inline asm
	prmt.b32 %r7389, %r1491, %r1490, %r7;
	// inline asm
	ld.local.u32 	%r1367, [%rd9];
	ld.local.u32 	%r1368, [%rd8+12];
	// inline asm
	prmt.b32 %r7382, %r1367, %r1368, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1492, %r1493}, [%rd8+8];
	// inline asm
	prmt.b32 %r7383, %r1493, %r1492, %r7;
	// inline asm
	ld.local.u32 	%r1375, [%rd8+8];
	ld.local.u32 	%r1376, [%rd8+4];
	// inline asm
	prmt.b32 %r7384, %r1375, %r1376, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1494, %r1495}, [%rd8];
	// inline asm
	prmt.b32 %r7385, %r1495, %r1494, %r7;
	// inline asm
	ld.local.u32 	%r1383, [%rd8];
	ld.local.u32 	%r1384, [%rd7+12];
	// inline asm
	prmt.b32 %r7378, %r1383, %r1384, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1496, %r1497}, [%rd7+8];
	// inline asm
	prmt.b32 %r7379, %r1497, %r1496, %r7;
	// inline asm
	ld.local.u32 	%r1391, [%rd7+8];
	ld.local.u32 	%r1392, [%rd7+4];
	// inline asm
	prmt.b32 %r7380, %r1391, %r1392, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1498, %r1499}, [%rd7];
	// inline asm
	prmt.b32 %r7381, %r1499, %r1498, %r7;
	// inline asm
	ld.local.u32 	%r1399, [%rd7];
	ld.local.u32 	%r1400, [%rd6+12];
	// inline asm
	prmt.b32 %r7374, %r1399, %r1400, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1500, %r1501}, [%rd6+8];
	// inline asm
	prmt.b32 %r7375, %r1501, %r1500, %r7;
	// inline asm
	ld.local.u32 	%r1407, [%rd6+8];
	ld.local.u32 	%r1408, [%rd6+4];
	// inline asm
	prmt.b32 %r7376, %r1407, %r1408, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1502, %r1503}, [%rd6];
	// inline asm
	prmt.b32 %r7377, %r1503, %r1502, %r7;
	// inline asm
	ld.local.u32 	%r1415, [%rd6];
	ld.local.u32 	%r1416, [%rd5+12];
	// inline asm
	prmt.b32 %r7370, %r1415, %r1416, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1504, %r1505}, [%rd5+8];
	// inline asm
	prmt.b32 %r7371, %r1505, %r1504, %r7;
	// inline asm
	ld.local.u32 	%r1423, [%rd5+8];
	ld.local.u32 	%r1424, [%rd5+4];
	// inline asm
	prmt.b32 %r7372, %r1423, %r1424, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1506, %r1507}, [%rd5];
	// inline asm
	prmt.b32 %r7373, %r1507, %r1506, %r7;
	// inline asm
	ld.local.u32 	%r1431, [%rd5];
	ld.local.u32 	%r1432, [%rd4+12];
	// inline asm
	prmt.b32 %r7366, %r1431, %r1432, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1508, %r1509}, [%rd4+8];
	// inline asm
	prmt.b32 %r7367, %r1509, %r1508, %r7;
	// inline asm
	ld.local.u32 	%r1439, [%rd4+8];
	ld.local.u32 	%r1440, [%rd4+4];
	// inline asm
	prmt.b32 %r7368, %r1439, %r1440, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1510, %r1511}, [%rd4];
	// inline asm
	prmt.b32 %r7369, %r1511, %r1510, %r7;
	// inline asm
	ld.local.u32 	%r1447, [%rd4];
	ld.local.u32 	%r1448, [%rd3+12];
	// inline asm
	prmt.b32 %r7362, %r1447, %r1448, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1512, %r1513}, [%rd3+8];
	// inline asm
	prmt.b32 %r7363, %r1513, %r1512, %r7;
	// inline asm
	ld.local.u32 	%r1455, [%rd3+8];
	ld.local.u32 	%r1456, [%rd3+4];
	// inline asm
	prmt.b32 %r7364, %r1455, %r1456, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1514, %r1515}, [%rd3];
	// inline asm
	prmt.b32 %r7365, %r1515, %r1514, %r7;
	// inline asm
	ld.local.u32 	%r1463, [%rd3];
	ld.local.u32 	%r1464, [%rd2+12];
	// inline asm
	prmt.b32 %r1462, %r1463, %r1464, %r7;
	// inline asm
	st.local.u32 	[%rd9+12], %r1462;
	ld.local.v2.u32 	{%r1516, %r1517}, [%rd2+8];
	// inline asm
	prmt.b32 %r1466, %r1517, %r1516, %r7;
	// inline asm
	st.local.u32 	[%rd9+8], %r1466;
	ld.local.u32 	%r1471, [%rd2+8];
	ld.local.u32 	%r1472, [%rd2+4];
	// inline asm
	prmt.b32 %r1470, %r1471, %r1472, %r7;
	// inline asm
	st.local.u32 	[%rd9+4], %r1470;
	ld.local.v2.u32 	{%r1518, %r1519}, [%rd2];
	// inline asm
	prmt.b32 %r1474, %r1519, %r1518, %r7;
	// inline asm
	st.local.u32 	[%rd9], %r1474;
	ld.local.u32 	%r1479, [%rd2];
	// inline asm
	prmt.b32 %r1478, %r1479, %r7360, %r7;
	// inline asm
	st.local.v4.u32 	[%rd8], {%r7360, %r7360, %r7360, %r1478};
	st.local.v4.u32 	[%rd7], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd6], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd5], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd4], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd3], {%r7360, %r7360, %r7360, %r7360};
	st.local.v2.u32 	[%rd2+8], {%r7360, %r7360};
	mov.u64 	%rd193, 0;
	st.local.u64 	[%rd2], %rd193;
	mov.u32 	%r7361, %r7360;
	bra.uni 	BB2_86;

BB2_19:
	setp.eq.s32	%p41, %r673, 7;
	mov.u32 	%r7363, %r7362;
	mov.u32 	%r7364, %r7362;
	mov.u32 	%r7365, %r7362;
	mov.u32 	%r7366, %r7362;
	mov.u32 	%r7367, %r7362;
	mov.u32 	%r7368, %r7362;
	mov.u32 	%r7369, %r7362;
	mov.u32 	%r7370, %r7362;
	mov.u32 	%r7371, %r7362;
	mov.u32 	%r7372, %r7362;
	mov.u32 	%r7373, %r7362;
	mov.u32 	%r7374, %r7362;
	mov.u32 	%r7375, %r7362;
	mov.u32 	%r7376, %r7362;
	mov.u32 	%r7377, %r7362;
	mov.u32 	%r7378, %r7362;
	mov.u32 	%r7379, %r7362;
	mov.u32 	%r7380, %r7362;
	mov.u32 	%r7381, %r7362;
	mov.u32 	%r7382, %r7362;
	mov.u32 	%r7383, %r7362;
	mov.u32 	%r7384, %r7362;
	mov.u32 	%r7385, %r7362;
	mov.u32 	%r7386, %r7362;
	mov.u32 	%r7387, %r7362;
	mov.u32 	%r7388, %r7362;
	mov.u32 	%r7389, %r7362;
	mov.u32 	%r7390, %r7362;
	mov.u32 	%r7391, %r7362;
	mov.u32 	%r7392, %r7362;
	mov.u32 	%r7393, %r7362;
	@%p41 bra 	BB2_20;
	bra.uni 	BB2_89;

BB2_20:
	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7366, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r5098, %r5099}, [%rd9+8];
	// inline asm
	prmt.b32 %r7367, %r5099, %r5098, %r7;
	// inline asm
	ld.local.u32 	%r4949, [%rd9+8];
	ld.local.u32 	%r4950, [%rd9+4];
	// inline asm
	prmt.b32 %r7368, %r4949, %r4950, %r7;
	// inline asm
	ld.local.v2.u32 	{%r5100, %r5101}, [%rd9];
	// inline asm
	prmt.b32 %r7369, %r5101, %r5100, %r7;
	// inline asm
	ld.local.u32 	%r4957, [%rd9];
	ld.local.u32 	%r4958, [%rd8+12];
	// inline asm
	prmt.b32 %r7362, %r4957, %r4958, %r7;
	// inline asm
	ld.local.v2.u32 	{%r5102, %r5103}, [%rd8+8];
	// inline asm
	prmt.b32 %r7363, %r5103, %r5102, %r7;
	// inline asm
	ld.local.u32 	%r4965, [%rd8+8];
	ld.local.u32 	%r4966, [%rd8+4];
	// inline asm
	prmt.b32 %r7364, %r4965, %r4966, %r7;
	// inline asm
	ld.local.v2.u32 	{%r5104, %r5105}, [%rd8];
	// inline asm
	prmt.b32 %r7365, %r5105, %r5104, %r7;
	// inline asm
	ld.local.u32 	%r4973, [%rd8];
	ld.local.u32 	%r4974, [%rd7+12];
	// inline asm
	prmt.b32 %r4972, %r4973, %r4974, %r7;
	// inline asm
	st.local.u32 	[%rd9+12], %r4972;
	ld.local.v2.u32 	{%r5106, %r5107}, [%rd7+8];
	// inline asm
	prmt.b32 %r4976, %r5107, %r5106, %r7;
	// inline asm
	st.local.u32 	[%rd9+8], %r4976;
	ld.local.u32 	%r4981, [%rd7+8];
	ld.local.u32 	%r4982, [%rd7+4];
	// inline asm
	prmt.b32 %r4980, %r4981, %r4982, %r7;
	// inline asm
	st.local.u32 	[%rd9+4], %r4980;
	ld.local.v2.u32 	{%r5108, %r5109}, [%rd7];
	// inline asm
	prmt.b32 %r4984, %r5109, %r5108, %r7;
	// inline asm
	st.local.u32 	[%rd9], %r4984;
	ld.local.u32 	%r4989, [%rd7];
	ld.local.u32 	%r4990, [%rd6+12];
	// inline asm
	prmt.b32 %r4988, %r4989, %r4990, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r4988;
	ld.local.v2.u32 	{%r5110, %r5111}, [%rd6+8];
	// inline asm
	prmt.b32 %r4992, %r5111, %r5110, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r4992;
	ld.local.u32 	%r4997, [%rd6+8];
	ld.local.u32 	%r4998, [%rd6+4];
	// inline asm
	prmt.b32 %r4996, %r4997, %r4998, %r7;
	// inline asm
	st.local.u32 	[%rd8+4], %r4996;
	ld.local.v2.u32 	{%r5112, %r5113}, [%rd6];
	// inline asm
	prmt.b32 %r5000, %r5113, %r5112, %r7;
	// inline asm
	st.local.u32 	[%rd8], %r5000;
	ld.local.u32 	%r5005, [%rd6];
	ld.local.u32 	%r5006, [%rd5+12];
	// inline asm
	prmt.b32 %r5004, %r5005, %r5006, %r7;
	// inline asm
	st.local.u32 	[%rd7+12], %r5004;
	ld.local.v2.u32 	{%r5114, %r5115}, [%rd5+8];
	// inline asm
	prmt.b32 %r5008, %r5115, %r5114, %r7;
	// inline asm
	st.local.u32 	[%rd7+8], %r5008;
	ld.local.u32 	%r5013, [%rd5+8];
	ld.local.u32 	%r5014, [%rd5+4];
	// inline asm
	prmt.b32 %r5012, %r5013, %r5014, %r7;
	// inline asm
	st.local.u32 	[%rd7+4], %r5012;
	ld.local.v2.u32 	{%r5116, %r5117}, [%rd5];
	// inline asm
	prmt.b32 %r5016, %r5117, %r5116, %r7;
	// inline asm
	st.local.u32 	[%rd7], %r5016;
	ld.local.u32 	%r5021, [%rd5];
	ld.local.u32 	%r5022, [%rd4+12];
	// inline asm
	prmt.b32 %r5020, %r5021, %r5022, %r7;
	// inline asm
	st.local.u32 	[%rd6+12], %r5020;
	ld.local.v2.u32 	{%r5118, %r5119}, [%rd4+8];
	// inline asm
	prmt.b32 %r5024, %r5119, %r5118, %r7;
	// inline asm
	st.local.u32 	[%rd6+8], %r5024;
	ld.local.u32 	%r5029, [%rd4+8];
	ld.local.u32 	%r5030, [%rd4+4];
	// inline asm
	prmt.b32 %r5028, %r5029, %r5030, %r7;
	// inline asm
	st.local.u32 	[%rd6+4], %r5028;
	ld.local.v2.u32 	{%r5120, %r5121}, [%rd4];
	// inline asm
	prmt.b32 %r5032, %r5121, %r5120, %r7;
	// inline asm
	st.local.u32 	[%rd6], %r5032;
	ld.local.u32 	%r5037, [%rd4];
	ld.local.u32 	%r5038, [%rd3+12];
	// inline asm
	prmt.b32 %r5036, %r5037, %r5038, %r7;
	// inline asm
	st.local.u32 	[%rd5+12], %r5036;
	ld.local.v2.u32 	{%r5122, %r5123}, [%rd3+8];
	// inline asm
	prmt.b32 %r5040, %r5123, %r5122, %r7;
	// inline asm
	st.local.u32 	[%rd5+8], %r5040;
	ld.local.u32 	%r5045, [%rd3+8];
	ld.local.u32 	%r5046, [%rd3+4];
	// inline asm
	prmt.b32 %r5044, %r5045, %r5046, %r7;
	// inline asm
	st.local.u32 	[%rd5+4], %r5044;
	ld.local.v2.u32 	{%r5124, %r5125}, [%rd3];
	// inline asm
	prmt.b32 %r5048, %r5125, %r5124, %r7;
	// inline asm
	st.local.u32 	[%rd5], %r5048;
	ld.local.u32 	%r5053, [%rd3];
	ld.local.u32 	%r5054, [%rd2+12];
	// inline asm
	prmt.b32 %r5052, %r5053, %r5054, %r7;
	// inline asm
	st.local.u32 	[%rd4+12], %r5052;
	ld.local.v2.u32 	{%r5126, %r5127}, [%rd2+8];
	// inline asm
	prmt.b32 %r5056, %r5127, %r5126, %r7;
	// inline asm
	st.local.u32 	[%rd4+8], %r5056;
	ld.local.u32 	%r5061, [%rd2+8];
	ld.local.u32 	%r5062, [%rd2+4];
	// inline asm
	prmt.b32 %r5060, %r5061, %r5062, %r7;
	// inline asm
	st.local.u32 	[%rd4+4], %r5060;
	ld.local.v2.u32 	{%r5128, %r5129}, [%rd2];
	// inline asm
	prmt.b32 %r5064, %r5129, %r5128, %r7;
	// inline asm
	st.local.u32 	[%rd4], %r5064;
	ld.local.u32 	%r5069, [%rd2];
	// inline asm
	prmt.b32 %r5068, %r5069, %r7360, %r7;
	// inline asm
	st.local.v4.u32 	[%rd3], {%r7360, %r7360, %r7360, %r5068};
	st.local.v2.u32 	[%rd2+8], {%r7360, %r7360};
	mov.u64 	%rd213, 0;
	st.local.u64 	[%rd2], %rd213;
	mov.u32 	%r7361, %r7360;

BB2_81:
	mov.u32 	%r7370, %r7360;
	mov.u32 	%r7371, %r7360;
	mov.u32 	%r7372, %r7360;
	mov.u32 	%r7373, %r7360;

BB2_82:
	mov.u32 	%r7374, %r7360;
	mov.u32 	%r7375, %r7360;
	mov.u32 	%r7376, %r7360;
	mov.u32 	%r7377, %r7360;

BB2_83:
	mov.u32 	%r7378, %r7360;
	mov.u32 	%r7379, %r7360;
	mov.u32 	%r7380, %r7360;
	mov.u32 	%r7381, %r7360;

BB2_84:
	mov.u32 	%r7382, %r7360;
	mov.u32 	%r7383, %r7360;
	mov.u32 	%r7384, %r7360;
	mov.u32 	%r7385, %r7360;

BB2_85:
	mov.u32 	%r7386, %r7360;
	mov.u32 	%r7387, %r7360;
	mov.u32 	%r7388, %r7360;
	mov.u32 	%r7389, %r7360;

BB2_86:
	mov.u32 	%r7390, %r7360;
	mov.u32 	%r7391, %r7360;
	mov.u32 	%r7392, %r7360;
	mov.u32 	%r7393, %r7360;

BB2_89:
	ld.const.u64 	%rd1243, [k_sha512+120];
	ld.const.u64 	%rd1242, [k_sha512+112];
	ld.const.u64 	%rd1241, [k_sha512+104];
	ld.const.u64 	%rd1240, [k_sha512+96];
	ld.const.u64 	%rd1239, [k_sha512+88];
	ld.const.u64 	%rd1238, [k_sha512+80];
	ld.const.u64 	%rd1237, [k_sha512+72];
	ld.const.u64 	%rd1236, [k_sha512+64];
	ld.const.u64 	%rd1235, [k_sha512+56];
	ld.const.u64 	%rd1234, [k_sha512+48];
	ld.const.u64 	%rd1233, [k_sha512+40];
	ld.const.u64 	%rd1232, [k_sha512+32];
	ld.const.u64 	%rd1231, [k_sha512+24];
	ld.const.u64 	%rd1230, [k_sha512+16];
	ld.const.u64 	%rd1229, [k_sha512+8];
	ld.const.u64 	%rd1228, [k_sha512];
	ld.v2.u32 	{%r6486, %r6487}, [%rd10+-128];
	or.b32  	%r6489, %r6487, %r7360;
	ld.v2.u32 	{%r6491, %r6492}, [%rd10+-120];
	ld.v2.u32 	{%r6493, %r6494}, [%rd10+-112];
	ld.v2.u32 	{%r6495, %r6496}, [%rd10+-104];
	ld.v2.u32 	{%r6497, %r6498}, [%rd10+-96];
	ld.v2.u32 	{%r6499, %r6500}, [%rd10+-88];
	ld.v2.u32 	{%r6501, %r6502}, [%rd10+-80];
	ld.v2.u32 	{%r6503, %r6504}, [%rd10+-72];
	ld.v2.u32 	{%r6505, %r6506}, [%rd10+-64];
	ld.v2.u32 	{%r6507, %r6508}, [%rd10+-56];
	ld.v2.u32 	{%r6509, %r6510}, [%rd10+-48];
	ld.v2.u32 	{%r6511, %r6512}, [%rd10+-40];
	ld.v2.u32 	{%r6513, %r6514}, [%rd10+-32];
	ld.v2.u32 	{%r6515, %r6516}, [%rd10+-24];
	ld.v2.u32 	{%r6517, %r6518}, [%rd10+-16];
	ld.v2.u32 	{%r6519, %r6520}, [%rd10+-8];
	or.b32  	%r6521, %r6486, %r7361;
	st.v2.u32 	[%rd10+-128], {%r6521, %r6489};
	ld.local.v2.u32 	{%r6522, %r6523}, [%rd2+8];
	or.b32  	%r6526, %r6492, %r6523;
	or.b32  	%r6529, %r6491, %r6522;
	st.v2.u32 	[%rd10+-120], {%r6529, %r6526};
	ld.local.v4.u32 	{%r6530, %r6531, %r6532, %r6533}, [%rd3];
	or.b32  	%r6536, %r6494, %r6531;
	or.b32  	%r6539, %r6493, %r6530;
	st.v2.u32 	[%rd10+-112], {%r6539, %r6536};
	or.b32  	%r6542, %r6496, %r6533;
	or.b32  	%r6545, %r6495, %r6532;
	st.v2.u32 	[%rd10+-104], {%r6545, %r6542};
	ld.local.v4.u32 	{%r6546, %r6547, %r6548, %r6549}, [%rd4];
	or.b32  	%r6552, %r6498, %r6547;
	or.b32  	%r6555, %r6497, %r6546;
	st.v2.u32 	[%rd10+-96], {%r6555, %r6552};
	or.b32  	%r6558, %r6500, %r6549;
	or.b32  	%r6561, %r6499, %r6548;
	st.v2.u32 	[%rd10+-88], {%r6561, %r6558};
	ld.local.v4.u32 	{%r6562, %r6563, %r6564, %r6565}, [%rd5];
	or.b32  	%r6568, %r6502, %r6563;
	or.b32  	%r6571, %r6501, %r6562;
	st.v2.u32 	[%rd10+-80], {%r6571, %r6568};
	or.b32  	%r6574, %r6504, %r6565;
	or.b32  	%r6577, %r6503, %r6564;
	st.v2.u32 	[%rd10+-72], {%r6577, %r6574};
	ld.local.v4.u32 	{%r6578, %r6579, %r6580, %r6581}, [%rd6];
	or.b32  	%r6584, %r6506, %r6579;
	or.b32  	%r6587, %r6505, %r6578;
	st.v2.u32 	[%rd10+-64], {%r6587, %r6584};
	or.b32  	%r6590, %r6508, %r6581;
	or.b32  	%r6593, %r6507, %r6580;
	st.v2.u32 	[%rd10+-56], {%r6593, %r6590};
	ld.local.v4.u32 	{%r6594, %r6595, %r6596, %r6597}, [%rd7];
	or.b32  	%r6600, %r6510, %r6595;
	or.b32  	%r6603, %r6509, %r6594;
	st.v2.u32 	[%rd10+-48], {%r6603, %r6600};
	or.b32  	%r6606, %r6512, %r6597;
	or.b32  	%r6609, %r6511, %r6596;
	st.v2.u32 	[%rd10+-40], {%r6609, %r6606};
	ld.local.v4.u32 	{%r6610, %r6611, %r6612, %r6613}, [%rd8];
	or.b32  	%r6616, %r6514, %r6611;
	or.b32  	%r6619, %r6513, %r6610;
	st.v2.u32 	[%rd10+-32], {%r6619, %r6616};
	or.b32  	%r6622, %r6516, %r6613;
	or.b32  	%r6625, %r6515, %r6612;
	st.v2.u32 	[%rd10+-24], {%r6625, %r6622};
	ld.local.v4.u32 	{%r6626, %r6627, %r6628, %r6629}, [%rd9];
	or.b32  	%r6632, %r6518, %r6627;
	or.b32  	%r6635, %r6517, %r6626;
	st.v2.u32 	[%rd10+-16], {%r6635, %r6632};
	or.b32  	%r6638, %r6520, %r6629;
	or.b32  	%r6641, %r6519, %r6628;
	st.v2.u32 	[%rd10+-8], {%r6641, %r6638};
	mov.b64	%rd1260, {%r6489, %r6521};
	mov.b64	%rd1261, {%r6526, %r6529};
	mov.b64	%rd1262, {%r6536, %r6539};
	mov.b64	%rd1263, {%r6542, %r6545};
	mov.b64	%rd1264, {%r6552, %r6555};
	mov.b64	%rd1265, {%r6558, %r6561};
	mov.b64	%rd1266, {%r6568, %r6571};
	mov.b64	%rd1267, {%r6574, %r6577};
	mov.b64	%rd1251, {%r6584, %r6587};
	mov.b64	%rd1250, {%r6590, %r6593};
	mov.b64	%rd1249, {%r6600, %r6603};
	mov.b64	%rd1248, {%r6606, %r6609};
	mov.b64	%rd1247, {%r6616, %r6619};
	mov.b64	%rd1246, {%r6622, %r6625};
	mov.b64	%rd1245, {%r6632, %r6635};
	mov.b64	%rd1244, {%r6638, %r6641};
	ld.u64 	%rd43, [%rd10+-160];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6642,%dummy}, %rd43;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6643}, %rd43;
	}
	shf.r.wrap.b32 	%r6644, %r6643, %r6642, 14;
	shf.r.wrap.b32 	%r6645, %r6642, %r6643, 14;
	mov.b64 	%rd219, {%r6645, %r6644};
	shf.r.wrap.b32 	%r6646, %r6643, %r6642, 18;
	shf.r.wrap.b32 	%r6647, %r6642, %r6643, 18;
	mov.b64 	%rd220, {%r6647, %r6646};
	xor.b64  	%rd221, %rd220, %rd219;
	shf.l.wrap.b32 	%r6648, %r6642, %r6643, 23;
	shf.l.wrap.b32 	%r6649, %r6643, %r6642, 23;
	mov.b64 	%rd222, {%r6649, %r6648};
	xor.b64  	%rd223, %rd221, %rd222;
	ld.u64 	%rd44, [%rd10+-144];
	ld.u64 	%rd45, [%rd10+-152];
	xor.b64  	%rd224, %rd44, %rd45;
	and.b64  	%rd225, %rd224, %rd43;
	xor.b64  	%rd226, %rd225, %rd44;
	ld.u64 	%rd46, [%rd10+-136];
	add.s64 	%rd227, %rd226, %rd46;
	add.s64 	%rd228, %rd227, %rd1260;
	add.s64 	%rd229, %rd228, %rd1228;
	add.s64 	%rd230, %rd229, %rd223;
	ld.u64 	%rd47, [%rd10+-168];
	add.s64 	%rd231, %rd230, %rd47;
	ld.u64 	%rd48, [%rd107];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6650,%dummy}, %rd48;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6651}, %rd48;
	}
	shf.r.wrap.b32 	%r6652, %r6651, %r6650, 28;
	shf.r.wrap.b32 	%r6653, %r6650, %r6651, 28;
	mov.b64 	%rd232, {%r6653, %r6652};
	shf.l.wrap.b32 	%r6654, %r6650, %r6651, 30;
	shf.l.wrap.b32 	%r6655, %r6651, %r6650, 30;
	mov.b64 	%rd233, {%r6655, %r6654};
	xor.b64  	%rd234, %rd233, %rd232;
	shf.l.wrap.b32 	%r6656, %r6650, %r6651, 25;
	shf.l.wrap.b32 	%r6657, %r6651, %r6650, 25;
	mov.b64 	%rd235, {%r6657, %r6656};
	xor.b64  	%rd236, %rd234, %rd235;
	ld.u64 	%rd49, [%rd10+-176];
	xor.b64  	%rd237, %rd49, %rd48;
	ld.u64 	%rd50, [%rd10+-184];
	xor.b64  	%rd238, %rd50, %rd48;
	and.b64  	%rd239, %rd237, %rd238;
	xor.b64  	%rd240, %rd239, %rd48;
	add.s64 	%rd241, %rd230, %rd240;
	add.s64 	%rd242, %rd241, %rd236;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6658,%dummy}, %rd231;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6659}, %rd231;
	}
	shf.r.wrap.b32 	%r6660, %r6659, %r6658, 14;
	shf.r.wrap.b32 	%r6661, %r6658, %r6659, 14;
	mov.b64 	%rd243, {%r6661, %r6660};
	shf.r.wrap.b32 	%r6662, %r6659, %r6658, 18;
	shf.r.wrap.b32 	%r6663, %r6658, %r6659, 18;
	mov.b64 	%rd244, {%r6663, %r6662};
	xor.b64  	%rd245, %rd244, %rd243;
	shf.l.wrap.b32 	%r6664, %r6658, %r6659, 23;
	shf.l.wrap.b32 	%r6665, %r6659, %r6658, 23;
	mov.b64 	%rd246, {%r6665, %r6664};
	xor.b64  	%rd247, %rd245, %rd246;
	xor.b64  	%rd248, %rd45, %rd43;
	and.b64  	%rd249, %rd231, %rd248;
	xor.b64  	%rd250, %rd249, %rd45;
	add.s64 	%rd251, %rd1261, %rd44;
	add.s64 	%rd252, %rd251, %rd1229;
	add.s64 	%rd253, %rd252, %rd250;
	add.s64 	%rd254, %rd253, %rd247;
	add.s64 	%rd255, %rd254, %rd49;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6666,%dummy}, %rd242;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6667}, %rd242;
	}
	shf.r.wrap.b32 	%r6668, %r6667, %r6666, 28;
	shf.r.wrap.b32 	%r6669, %r6666, %r6667, 28;
	mov.b64 	%rd256, {%r6669, %r6668};
	shf.l.wrap.b32 	%r6670, %r6666, %r6667, 30;
	shf.l.wrap.b32 	%r6671, %r6667, %r6666, 30;
	mov.b64 	%rd257, {%r6671, %r6670};
	xor.b64  	%rd258, %rd257, %rd256;
	shf.l.wrap.b32 	%r6672, %r6666, %r6667, 25;
	shf.l.wrap.b32 	%r6673, %r6667, %r6666, 25;
	mov.b64 	%rd259, {%r6673, %r6672};
	xor.b64  	%rd260, %rd258, %rd259;
	xor.b64  	%rd261, %rd242, %rd50;
	xor.b64  	%rd262, %rd242, %rd48;
	and.b64  	%rd263, %rd262, %rd261;
	xor.b64  	%rd264, %rd263, %rd242;
	add.s64 	%rd265, %rd254, %rd264;
	add.s64 	%rd266, %rd265, %rd260;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6674,%dummy}, %rd255;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6675}, %rd255;
	}
	shf.r.wrap.b32 	%r6676, %r6675, %r6674, 14;
	shf.r.wrap.b32 	%r6677, %r6674, %r6675, 14;
	mov.b64 	%rd267, {%r6677, %r6676};
	shf.r.wrap.b32 	%r6678, %r6675, %r6674, 18;
	shf.r.wrap.b32 	%r6679, %r6674, %r6675, 18;
	mov.b64 	%rd268, {%r6679, %r6678};
	xor.b64  	%rd269, %rd268, %rd267;
	shf.l.wrap.b32 	%r6680, %r6674, %r6675, 23;
	shf.l.wrap.b32 	%r6681, %r6675, %r6674, 23;
	mov.b64 	%rd270, {%r6681, %r6680};
	xor.b64  	%rd271, %rd269, %rd270;
	xor.b64  	%rd272, %rd231, %rd43;
	and.b64  	%rd273, %rd255, %rd272;
	xor.b64  	%rd274, %rd273, %rd43;
	add.s64 	%rd275, %rd1262, %rd45;
	add.s64 	%rd276, %rd275, %rd1230;
	add.s64 	%rd277, %rd276, %rd274;
	add.s64 	%rd278, %rd277, %rd271;
	add.s64 	%rd279, %rd278, %rd50;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6682,%dummy}, %rd266;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6683}, %rd266;
	}
	shf.r.wrap.b32 	%r6684, %r6683, %r6682, 28;
	shf.r.wrap.b32 	%r6685, %r6682, %r6683, 28;
	mov.b64 	%rd280, {%r6685, %r6684};
	shf.l.wrap.b32 	%r6686, %r6682, %r6683, 30;
	shf.l.wrap.b32 	%r6687, %r6683, %r6682, 30;
	mov.b64 	%rd281, {%r6687, %r6686};
	xor.b64  	%rd282, %rd281, %rd280;
	shf.l.wrap.b32 	%r6688, %r6682, %r6683, 25;
	shf.l.wrap.b32 	%r6689, %r6683, %r6682, 25;
	mov.b64 	%rd283, {%r6689, %r6688};
	xor.b64  	%rd284, %rd282, %rd283;
	xor.b64  	%rd285, %rd266, %rd48;
	xor.b64  	%rd286, %rd266, %rd242;
	and.b64  	%rd287, %rd286, %rd285;
	xor.b64  	%rd288, %rd287, %rd266;
	add.s64 	%rd289, %rd278, %rd288;
	add.s64 	%rd290, %rd289, %rd284;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6690,%dummy}, %rd279;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6691}, %rd279;
	}
	shf.r.wrap.b32 	%r6692, %r6691, %r6690, 14;
	shf.r.wrap.b32 	%r6693, %r6690, %r6691, 14;
	mov.b64 	%rd291, {%r6693, %r6692};
	shf.r.wrap.b32 	%r6694, %r6691, %r6690, 18;
	shf.r.wrap.b32 	%r6695, %r6690, %r6691, 18;
	mov.b64 	%rd292, {%r6695, %r6694};
	xor.b64  	%rd293, %rd292, %rd291;
	shf.l.wrap.b32 	%r6696, %r6690, %r6691, 23;
	shf.l.wrap.b32 	%r6697, %r6691, %r6690, 23;
	mov.b64 	%rd294, {%r6697, %r6696};
	xor.b64  	%rd295, %rd293, %rd294;
	xor.b64  	%rd296, %rd255, %rd231;
	and.b64  	%rd297, %rd279, %rd296;
	xor.b64  	%rd298, %rd297, %rd231;
	add.s64 	%rd299, %rd1263, %rd43;
	add.s64 	%rd300, %rd299, %rd1231;
	add.s64 	%rd301, %rd300, %rd298;
	add.s64 	%rd302, %rd301, %rd295;
	add.s64 	%rd303, %rd302, %rd48;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6698,%dummy}, %rd290;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6699}, %rd290;
	}
	shf.r.wrap.b32 	%r6700, %r6699, %r6698, 28;
	shf.r.wrap.b32 	%r6701, %r6698, %r6699, 28;
	mov.b64 	%rd304, {%r6701, %r6700};
	shf.l.wrap.b32 	%r6702, %r6698, %r6699, 30;
	shf.l.wrap.b32 	%r6703, %r6699, %r6698, 30;
	mov.b64 	%rd305, {%r6703, %r6702};
	xor.b64  	%rd306, %rd305, %rd304;
	shf.l.wrap.b32 	%r6704, %r6698, %r6699, 25;
	shf.l.wrap.b32 	%r6705, %r6699, %r6698, 25;
	mov.b64 	%rd307, {%r6705, %r6704};
	xor.b64  	%rd308, %rd306, %rd307;
	xor.b64  	%rd309, %rd290, %rd242;
	xor.b64  	%rd310, %rd290, %rd266;
	and.b64  	%rd311, %rd310, %rd309;
	xor.b64  	%rd312, %rd311, %rd290;
	add.s64 	%rd313, %rd302, %rd312;
	add.s64 	%rd314, %rd313, %rd308;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6706,%dummy}, %rd303;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6707}, %rd303;
	}
	shf.r.wrap.b32 	%r6708, %r6707, %r6706, 14;
	shf.r.wrap.b32 	%r6709, %r6706, %r6707, 14;
	mov.b64 	%rd315, {%r6709, %r6708};
	shf.r.wrap.b32 	%r6710, %r6707, %r6706, 18;
	shf.r.wrap.b32 	%r6711, %r6706, %r6707, 18;
	mov.b64 	%rd316, {%r6711, %r6710};
	xor.b64  	%rd317, %rd316, %rd315;
	shf.l.wrap.b32 	%r6712, %r6706, %r6707, 23;
	shf.l.wrap.b32 	%r6713, %r6707, %r6706, 23;
	mov.b64 	%rd318, {%r6713, %r6712};
	xor.b64  	%rd319, %rd317, %rd318;
	xor.b64  	%rd320, %rd279, %rd255;
	and.b64  	%rd321, %rd303, %rd320;
	xor.b64  	%rd322, %rd321, %rd255;
	add.s64 	%rd323, %rd231, %rd1264;
	add.s64 	%rd324, %rd323, %rd1232;
	add.s64 	%rd325, %rd324, %rd322;
	add.s64 	%rd326, %rd325, %rd319;
	add.s64 	%rd327, %rd326, %rd242;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6714,%dummy}, %rd314;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6715}, %rd314;
	}
	shf.r.wrap.b32 	%r6716, %r6715, %r6714, 28;
	shf.r.wrap.b32 	%r6717, %r6714, %r6715, 28;
	mov.b64 	%rd328, {%r6717, %r6716};
	shf.l.wrap.b32 	%r6718, %r6714, %r6715, 30;
	shf.l.wrap.b32 	%r6719, %r6715, %r6714, 30;
	mov.b64 	%rd329, {%r6719, %r6718};
	xor.b64  	%rd330, %rd329, %rd328;
	shf.l.wrap.b32 	%r6720, %r6714, %r6715, 25;
	shf.l.wrap.b32 	%r6721, %r6715, %r6714, 25;
	mov.b64 	%rd331, {%r6721, %r6720};
	xor.b64  	%rd332, %rd330, %rd331;
	xor.b64  	%rd333, %rd314, %rd266;
	xor.b64  	%rd334, %rd314, %rd290;
	and.b64  	%rd335, %rd334, %rd333;
	xor.b64  	%rd336, %rd335, %rd314;
	add.s64 	%rd337, %rd326, %rd336;
	add.s64 	%rd338, %rd337, %rd332;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6722,%dummy}, %rd327;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6723}, %rd327;
	}
	shf.r.wrap.b32 	%r6724, %r6723, %r6722, 14;
	shf.r.wrap.b32 	%r6725, %r6722, %r6723, 14;
	mov.b64 	%rd339, {%r6725, %r6724};
	shf.r.wrap.b32 	%r6726, %r6723, %r6722, 18;
	shf.r.wrap.b32 	%r6727, %r6722, %r6723, 18;
	mov.b64 	%rd340, {%r6727, %r6726};
	xor.b64  	%rd341, %rd340, %rd339;
	shf.l.wrap.b32 	%r6728, %r6722, %r6723, 23;
	shf.l.wrap.b32 	%r6729, %r6723, %r6722, 23;
	mov.b64 	%rd342, {%r6729, %r6728};
	xor.b64  	%rd343, %rd341, %rd342;
	xor.b64  	%rd344, %rd303, %rd279;
	and.b64  	%rd345, %rd327, %rd344;
	xor.b64  	%rd346, %rd345, %rd279;
	add.s64 	%rd347, %rd255, %rd1265;
	add.s64 	%rd348, %rd347, %rd1233;
	add.s64 	%rd349, %rd348, %rd346;
	add.s64 	%rd350, %rd349, %rd343;
	add.s64 	%rd351, %rd350, %rd266;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6730,%dummy}, %rd338;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6731}, %rd338;
	}
	shf.r.wrap.b32 	%r6732, %r6731, %r6730, 28;
	shf.r.wrap.b32 	%r6733, %r6730, %r6731, 28;
	mov.b64 	%rd352, {%r6733, %r6732};
	shf.l.wrap.b32 	%r6734, %r6730, %r6731, 30;
	shf.l.wrap.b32 	%r6735, %r6731, %r6730, 30;
	mov.b64 	%rd353, {%r6735, %r6734};
	xor.b64  	%rd354, %rd353, %rd352;
	shf.l.wrap.b32 	%r6736, %r6730, %r6731, 25;
	shf.l.wrap.b32 	%r6737, %r6731, %r6730, 25;
	mov.b64 	%rd355, {%r6737, %r6736};
	xor.b64  	%rd356, %rd354, %rd355;
	xor.b64  	%rd357, %rd338, %rd290;
	xor.b64  	%rd358, %rd338, %rd314;
	and.b64  	%rd359, %rd358, %rd357;
	xor.b64  	%rd360, %rd359, %rd338;
	add.s64 	%rd361, %rd350, %rd360;
	add.s64 	%rd362, %rd361, %rd356;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6738,%dummy}, %rd351;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6739}, %rd351;
	}
	shf.r.wrap.b32 	%r6740, %r6739, %r6738, 14;
	shf.r.wrap.b32 	%r6741, %r6738, %r6739, 14;
	mov.b64 	%rd363, {%r6741, %r6740};
	shf.r.wrap.b32 	%r6742, %r6739, %r6738, 18;
	shf.r.wrap.b32 	%r6743, %r6738, %r6739, 18;
	mov.b64 	%rd364, {%r6743, %r6742};
	xor.b64  	%rd365, %rd364, %rd363;
	shf.l.wrap.b32 	%r6744, %r6738, %r6739, 23;
	shf.l.wrap.b32 	%r6745, %r6739, %r6738, 23;
	mov.b64 	%rd366, {%r6745, %r6744};
	xor.b64  	%rd367, %rd365, %rd366;
	xor.b64  	%rd368, %rd327, %rd303;
	and.b64  	%rd369, %rd351, %rd368;
	xor.b64  	%rd370, %rd369, %rd303;
	add.s64 	%rd371, %rd279, %rd1266;
	add.s64 	%rd372, %rd371, %rd1234;
	add.s64 	%rd373, %rd372, %rd370;
	add.s64 	%rd374, %rd373, %rd367;
	add.s64 	%rd375, %rd374, %rd290;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6746,%dummy}, %rd362;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6747}, %rd362;
	}
	shf.r.wrap.b32 	%r6748, %r6747, %r6746, 28;
	shf.r.wrap.b32 	%r6749, %r6746, %r6747, 28;
	mov.b64 	%rd376, {%r6749, %r6748};
	shf.l.wrap.b32 	%r6750, %r6746, %r6747, 30;
	shf.l.wrap.b32 	%r6751, %r6747, %r6746, 30;
	mov.b64 	%rd377, {%r6751, %r6750};
	xor.b64  	%rd378, %rd377, %rd376;
	shf.l.wrap.b32 	%r6752, %r6746, %r6747, 25;
	shf.l.wrap.b32 	%r6753, %r6747, %r6746, 25;
	mov.b64 	%rd379, {%r6753, %r6752};
	xor.b64  	%rd380, %rd378, %rd379;
	xor.b64  	%rd381, %rd362, %rd314;
	xor.b64  	%rd382, %rd362, %rd338;
	and.b64  	%rd383, %rd382, %rd381;
	xor.b64  	%rd384, %rd383, %rd362;
	add.s64 	%rd385, %rd374, %rd384;
	add.s64 	%rd386, %rd385, %rd380;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6754,%dummy}, %rd375;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6755}, %rd375;
	}
	shf.r.wrap.b32 	%r6756, %r6755, %r6754, 14;
	shf.r.wrap.b32 	%r6757, %r6754, %r6755, 14;
	mov.b64 	%rd387, {%r6757, %r6756};
	shf.r.wrap.b32 	%r6758, %r6755, %r6754, 18;
	shf.r.wrap.b32 	%r6759, %r6754, %r6755, 18;
	mov.b64 	%rd388, {%r6759, %r6758};
	xor.b64  	%rd389, %rd388, %rd387;
	shf.l.wrap.b32 	%r6760, %r6754, %r6755, 23;
	shf.l.wrap.b32 	%r6761, %r6755, %r6754, 23;
	mov.b64 	%rd390, {%r6761, %r6760};
	xor.b64  	%rd391, %rd389, %rd390;
	xor.b64  	%rd392, %rd351, %rd327;
	and.b64  	%rd393, %rd375, %rd392;
	xor.b64  	%rd394, %rd393, %rd327;
	add.s64 	%rd395, %rd303, %rd1267;
	add.s64 	%rd396, %rd395, %rd1235;
	add.s64 	%rd397, %rd396, %rd394;
	add.s64 	%rd398, %rd397, %rd391;
	add.s64 	%rd399, %rd398, %rd314;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6762,%dummy}, %rd386;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6763}, %rd386;
	}
	shf.r.wrap.b32 	%r6764, %r6763, %r6762, 28;
	shf.r.wrap.b32 	%r6765, %r6762, %r6763, 28;
	mov.b64 	%rd400, {%r6765, %r6764};
	shf.l.wrap.b32 	%r6766, %r6762, %r6763, 30;
	shf.l.wrap.b32 	%r6767, %r6763, %r6762, 30;
	mov.b64 	%rd401, {%r6767, %r6766};
	xor.b64  	%rd402, %rd401, %rd400;
	shf.l.wrap.b32 	%r6768, %r6762, %r6763, 25;
	shf.l.wrap.b32 	%r6769, %r6763, %r6762, 25;
	mov.b64 	%rd403, {%r6769, %r6768};
	xor.b64  	%rd404, %rd402, %rd403;
	xor.b64  	%rd405, %rd386, %rd338;
	xor.b64  	%rd406, %rd386, %rd362;
	and.b64  	%rd407, %rd406, %rd405;
	xor.b64  	%rd408, %rd407, %rd386;
	add.s64 	%rd409, %rd398, %rd408;
	add.s64 	%rd410, %rd409, %rd404;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6770,%dummy}, %rd399;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6771}, %rd399;
	}
	shf.r.wrap.b32 	%r6772, %r6771, %r6770, 14;
	shf.r.wrap.b32 	%r6773, %r6770, %r6771, 14;
	mov.b64 	%rd411, {%r6773, %r6772};
	shf.r.wrap.b32 	%r6774, %r6771, %r6770, 18;
	shf.r.wrap.b32 	%r6775, %r6770, %r6771, 18;
	mov.b64 	%rd412, {%r6775, %r6774};
	xor.b64  	%rd413, %rd412, %rd411;
	shf.l.wrap.b32 	%r6776, %r6770, %r6771, 23;
	shf.l.wrap.b32 	%r6777, %r6771, %r6770, 23;
	mov.b64 	%rd414, {%r6777, %r6776};
	xor.b64  	%rd415, %rd413, %rd414;
	xor.b64  	%rd416, %rd375, %rd351;
	and.b64  	%rd417, %rd399, %rd416;
	xor.b64  	%rd418, %rd417, %rd351;
	add.s64 	%rd419, %rd327, %rd1251;
	add.s64 	%rd420, %rd419, %rd1236;
	add.s64 	%rd421, %rd420, %rd418;
	add.s64 	%rd422, %rd421, %rd415;
	add.s64 	%rd423, %rd422, %rd338;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6778,%dummy}, %rd410;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6779}, %rd410;
	}
	shf.r.wrap.b32 	%r6780, %r6779, %r6778, 28;
	shf.r.wrap.b32 	%r6781, %r6778, %r6779, 28;
	mov.b64 	%rd424, {%r6781, %r6780};
	shf.l.wrap.b32 	%r6782, %r6778, %r6779, 30;
	shf.l.wrap.b32 	%r6783, %r6779, %r6778, 30;
	mov.b64 	%rd425, {%r6783, %r6782};
	xor.b64  	%rd426, %rd425, %rd424;
	shf.l.wrap.b32 	%r6784, %r6778, %r6779, 25;
	shf.l.wrap.b32 	%r6785, %r6779, %r6778, 25;
	mov.b64 	%rd427, {%r6785, %r6784};
	xor.b64  	%rd428, %rd426, %rd427;
	xor.b64  	%rd429, %rd410, %rd362;
	xor.b64  	%rd430, %rd410, %rd386;
	and.b64  	%rd431, %rd430, %rd429;
	xor.b64  	%rd432, %rd431, %rd410;
	add.s64 	%rd433, %rd422, %rd432;
	add.s64 	%rd434, %rd433, %rd428;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6786,%dummy}, %rd423;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6787}, %rd423;
	}
	shf.r.wrap.b32 	%r6788, %r6787, %r6786, 14;
	shf.r.wrap.b32 	%r6789, %r6786, %r6787, 14;
	mov.b64 	%rd435, {%r6789, %r6788};
	shf.r.wrap.b32 	%r6790, %r6787, %r6786, 18;
	shf.r.wrap.b32 	%r6791, %r6786, %r6787, 18;
	mov.b64 	%rd436, {%r6791, %r6790};
	xor.b64  	%rd437, %rd436, %rd435;
	shf.l.wrap.b32 	%r6792, %r6786, %r6787, 23;
	shf.l.wrap.b32 	%r6793, %r6787, %r6786, 23;
	mov.b64 	%rd438, {%r6793, %r6792};
	xor.b64  	%rd439, %rd437, %rd438;
	xor.b64  	%rd440, %rd399, %rd375;
	and.b64  	%rd441, %rd423, %rd440;
	xor.b64  	%rd442, %rd441, %rd375;
	add.s64 	%rd443, %rd351, %rd1250;
	add.s64 	%rd444, %rd443, %rd1237;
	add.s64 	%rd445, %rd444, %rd442;
	add.s64 	%rd446, %rd445, %rd439;
	add.s64 	%rd447, %rd446, %rd362;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6794,%dummy}, %rd434;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6795}, %rd434;
	}
	shf.r.wrap.b32 	%r6796, %r6795, %r6794, 28;
	shf.r.wrap.b32 	%r6797, %r6794, %r6795, 28;
	mov.b64 	%rd448, {%r6797, %r6796};
	shf.l.wrap.b32 	%r6798, %r6794, %r6795, 30;
	shf.l.wrap.b32 	%r6799, %r6795, %r6794, 30;
	mov.b64 	%rd449, {%r6799, %r6798};
	xor.b64  	%rd450, %rd449, %rd448;
	shf.l.wrap.b32 	%r6800, %r6794, %r6795, 25;
	shf.l.wrap.b32 	%r6801, %r6795, %r6794, 25;
	mov.b64 	%rd451, {%r6801, %r6800};
	xor.b64  	%rd452, %rd450, %rd451;
	xor.b64  	%rd453, %rd434, %rd386;
	xor.b64  	%rd454, %rd434, %rd410;
	and.b64  	%rd455, %rd454, %rd453;
	xor.b64  	%rd456, %rd455, %rd434;
	add.s64 	%rd457, %rd446, %rd456;
	add.s64 	%rd458, %rd457, %rd452;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6802,%dummy}, %rd447;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6803}, %rd447;
	}
	shf.r.wrap.b32 	%r6804, %r6803, %r6802, 14;
	shf.r.wrap.b32 	%r6805, %r6802, %r6803, 14;
	mov.b64 	%rd459, {%r6805, %r6804};
	shf.r.wrap.b32 	%r6806, %r6803, %r6802, 18;
	shf.r.wrap.b32 	%r6807, %r6802, %r6803, 18;
	mov.b64 	%rd460, {%r6807, %r6806};
	xor.b64  	%rd461, %rd460, %rd459;
	shf.l.wrap.b32 	%r6808, %r6802, %r6803, 23;
	shf.l.wrap.b32 	%r6809, %r6803, %r6802, 23;
	mov.b64 	%rd462, {%r6809, %r6808};
	xor.b64  	%rd463, %rd461, %rd462;
	xor.b64  	%rd464, %rd423, %rd399;
	and.b64  	%rd465, %rd447, %rd464;
	xor.b64  	%rd466, %rd465, %rd399;
	add.s64 	%rd467, %rd375, %rd1249;
	add.s64 	%rd468, %rd467, %rd1238;
	add.s64 	%rd469, %rd468, %rd466;
	add.s64 	%rd470, %rd469, %rd463;
	add.s64 	%rd471, %rd470, %rd386;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6810,%dummy}, %rd458;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6811}, %rd458;
	}
	shf.r.wrap.b32 	%r6812, %r6811, %r6810, 28;
	shf.r.wrap.b32 	%r6813, %r6810, %r6811, 28;
	mov.b64 	%rd472, {%r6813, %r6812};
	shf.l.wrap.b32 	%r6814, %r6810, %r6811, 30;
	shf.l.wrap.b32 	%r6815, %r6811, %r6810, 30;
	mov.b64 	%rd473, {%r6815, %r6814};
	xor.b64  	%rd474, %rd473, %rd472;
	shf.l.wrap.b32 	%r6816, %r6810, %r6811, 25;
	shf.l.wrap.b32 	%r6817, %r6811, %r6810, 25;
	mov.b64 	%rd475, {%r6817, %r6816};
	xor.b64  	%rd476, %rd474, %rd475;
	xor.b64  	%rd477, %rd458, %rd410;
	xor.b64  	%rd478, %rd458, %rd434;
	and.b64  	%rd479, %rd478, %rd477;
	xor.b64  	%rd480, %rd479, %rd458;
	add.s64 	%rd481, %rd470, %rd480;
	add.s64 	%rd482, %rd481, %rd476;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6818,%dummy}, %rd471;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6819}, %rd471;
	}
	shf.r.wrap.b32 	%r6820, %r6819, %r6818, 14;
	shf.r.wrap.b32 	%r6821, %r6818, %r6819, 14;
	mov.b64 	%rd483, {%r6821, %r6820};
	shf.r.wrap.b32 	%r6822, %r6819, %r6818, 18;
	shf.r.wrap.b32 	%r6823, %r6818, %r6819, 18;
	mov.b64 	%rd484, {%r6823, %r6822};
	xor.b64  	%rd485, %rd484, %rd483;
	shf.l.wrap.b32 	%r6824, %r6818, %r6819, 23;
	shf.l.wrap.b32 	%r6825, %r6819, %r6818, 23;
	mov.b64 	%rd486, {%r6825, %r6824};
	xor.b64  	%rd487, %rd485, %rd486;
	xor.b64  	%rd488, %rd447, %rd423;
	and.b64  	%rd489, %rd471, %rd488;
	xor.b64  	%rd490, %rd489, %rd423;
	add.s64 	%rd491, %rd399, %rd1248;
	add.s64 	%rd492, %rd491, %rd1239;
	add.s64 	%rd493, %rd492, %rd490;
	add.s64 	%rd494, %rd493, %rd487;
	add.s64 	%rd495, %rd494, %rd410;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6826,%dummy}, %rd482;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6827}, %rd482;
	}
	shf.r.wrap.b32 	%r6828, %r6827, %r6826, 28;
	shf.r.wrap.b32 	%r6829, %r6826, %r6827, 28;
	mov.b64 	%rd496, {%r6829, %r6828};
	shf.l.wrap.b32 	%r6830, %r6826, %r6827, 30;
	shf.l.wrap.b32 	%r6831, %r6827, %r6826, 30;
	mov.b64 	%rd497, {%r6831, %r6830};
	xor.b64  	%rd498, %rd497, %rd496;
	shf.l.wrap.b32 	%r6832, %r6826, %r6827, 25;
	shf.l.wrap.b32 	%r6833, %r6827, %r6826, 25;
	mov.b64 	%rd499, {%r6833, %r6832};
	xor.b64  	%rd500, %rd498, %rd499;
	xor.b64  	%rd501, %rd482, %rd434;
	xor.b64  	%rd502, %rd482, %rd458;
	and.b64  	%rd503, %rd502, %rd501;
	xor.b64  	%rd504, %rd503, %rd482;
	add.s64 	%rd505, %rd494, %rd504;
	add.s64 	%rd506, %rd505, %rd500;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6834,%dummy}, %rd495;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6835}, %rd495;
	}
	shf.r.wrap.b32 	%r6836, %r6835, %r6834, 14;
	shf.r.wrap.b32 	%r6837, %r6834, %r6835, 14;
	mov.b64 	%rd507, {%r6837, %r6836};
	shf.r.wrap.b32 	%r6838, %r6835, %r6834, 18;
	shf.r.wrap.b32 	%r6839, %r6834, %r6835, 18;
	mov.b64 	%rd508, {%r6839, %r6838};
	xor.b64  	%rd509, %rd508, %rd507;
	shf.l.wrap.b32 	%r6840, %r6834, %r6835, 23;
	shf.l.wrap.b32 	%r6841, %r6835, %r6834, 23;
	mov.b64 	%rd510, {%r6841, %r6840};
	xor.b64  	%rd511, %rd509, %rd510;
	xor.b64  	%rd512, %rd471, %rd447;
	and.b64  	%rd513, %rd495, %rd512;
	xor.b64  	%rd514, %rd513, %rd447;
	add.s64 	%rd515, %rd423, %rd1247;
	add.s64 	%rd516, %rd515, %rd1240;
	add.s64 	%rd517, %rd516, %rd514;
	add.s64 	%rd518, %rd517, %rd511;
	add.s64 	%rd1259, %rd518, %rd434;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6842,%dummy}, %rd506;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6843}, %rd506;
	}
	shf.r.wrap.b32 	%r6844, %r6843, %r6842, 28;
	shf.r.wrap.b32 	%r6845, %r6842, %r6843, 28;
	mov.b64 	%rd519, {%r6845, %r6844};
	shf.l.wrap.b32 	%r6846, %r6842, %r6843, 30;
	shf.l.wrap.b32 	%r6847, %r6843, %r6842, 30;
	mov.b64 	%rd520, {%r6847, %r6846};
	xor.b64  	%rd521, %rd520, %rd519;
	shf.l.wrap.b32 	%r6848, %r6842, %r6843, 25;
	shf.l.wrap.b32 	%r6849, %r6843, %r6842, 25;
	mov.b64 	%rd522, {%r6849, %r6848};
	xor.b64  	%rd523, %rd521, %rd522;
	xor.b64  	%rd524, %rd506, %rd458;
	xor.b64  	%rd525, %rd506, %rd482;
	and.b64  	%rd526, %rd525, %rd524;
	xor.b64  	%rd527, %rd526, %rd506;
	add.s64 	%rd528, %rd518, %rd527;
	add.s64 	%rd1255, %rd528, %rd523;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6850,%dummy}, %rd1259;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6851}, %rd1259;
	}
	shf.r.wrap.b32 	%r6852, %r6851, %r6850, 14;
	shf.r.wrap.b32 	%r6853, %r6850, %r6851, 14;
	mov.b64 	%rd529, {%r6853, %r6852};
	shf.r.wrap.b32 	%r6854, %r6851, %r6850, 18;
	shf.r.wrap.b32 	%r6855, %r6850, %r6851, 18;
	mov.b64 	%rd530, {%r6855, %r6854};
	xor.b64  	%rd531, %rd530, %rd529;
	shf.l.wrap.b32 	%r6856, %r6850, %r6851, 23;
	shf.l.wrap.b32 	%r6857, %r6851, %r6850, 23;
	mov.b64 	%rd532, {%r6857, %r6856};
	xor.b64  	%rd533, %rd531, %rd532;
	xor.b64  	%rd534, %rd495, %rd471;
	and.b64  	%rd535, %rd1259, %rd534;
	xor.b64  	%rd536, %rd535, %rd471;
	add.s64 	%rd537, %rd447, %rd1246;
	add.s64 	%rd538, %rd537, %rd1241;
	add.s64 	%rd539, %rd538, %rd536;
	add.s64 	%rd540, %rd539, %rd533;
	add.s64 	%rd1258, %rd540, %rd458;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6858,%dummy}, %rd1255;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6859}, %rd1255;
	}
	shf.r.wrap.b32 	%r6860, %r6859, %r6858, 28;
	shf.r.wrap.b32 	%r6861, %r6858, %r6859, 28;
	mov.b64 	%rd541, {%r6861, %r6860};
	shf.l.wrap.b32 	%r6862, %r6858, %r6859, 30;
	shf.l.wrap.b32 	%r6863, %r6859, %r6858, 30;
	mov.b64 	%rd542, {%r6863, %r6862};
	xor.b64  	%rd543, %rd542, %rd541;
	shf.l.wrap.b32 	%r6864, %r6858, %r6859, 25;
	shf.l.wrap.b32 	%r6865, %r6859, %r6858, 25;
	mov.b64 	%rd544, {%r6865, %r6864};
	xor.b64  	%rd545, %rd543, %rd544;
	xor.b64  	%rd546, %rd1255, %rd482;
	xor.b64  	%rd547, %rd1255, %rd506;
	and.b64  	%rd548, %rd547, %rd546;
	xor.b64  	%rd549, %rd548, %rd1255;
	add.s64 	%rd550, %rd540, %rd549;
	add.s64 	%rd1254, %rd550, %rd545;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6866,%dummy}, %rd1258;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6867}, %rd1258;
	}
	shf.r.wrap.b32 	%r6868, %r6867, %r6866, 14;
	shf.r.wrap.b32 	%r6869, %r6866, %r6867, 14;
	mov.b64 	%rd551, {%r6869, %r6868};
	shf.r.wrap.b32 	%r6870, %r6867, %r6866, 18;
	shf.r.wrap.b32 	%r6871, %r6866, %r6867, 18;
	mov.b64 	%rd552, {%r6871, %r6870};
	xor.b64  	%rd553, %rd552, %rd551;
	shf.l.wrap.b32 	%r6872, %r6866, %r6867, 23;
	shf.l.wrap.b32 	%r6873, %r6867, %r6866, 23;
	mov.b64 	%rd554, {%r6873, %r6872};
	xor.b64  	%rd555, %rd553, %rd554;
	xor.b64  	%rd556, %rd1259, %rd495;
	and.b64  	%rd557, %rd1258, %rd556;
	xor.b64  	%rd558, %rd557, %rd495;
	add.s64 	%rd559, %rd471, %rd1245;
	add.s64 	%rd560, %rd559, %rd1242;
	add.s64 	%rd561, %rd560, %rd558;
	add.s64 	%rd562, %rd561, %rd555;
	add.s64 	%rd1257, %rd562, %rd482;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6874,%dummy}, %rd1254;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6875}, %rd1254;
	}
	shf.r.wrap.b32 	%r6876, %r6875, %r6874, 28;
	shf.r.wrap.b32 	%r6877, %r6874, %r6875, 28;
	mov.b64 	%rd563, {%r6877, %r6876};
	shf.l.wrap.b32 	%r6878, %r6874, %r6875, 30;
	shf.l.wrap.b32 	%r6879, %r6875, %r6874, 30;
	mov.b64 	%rd564, {%r6879, %r6878};
	xor.b64  	%rd565, %rd564, %rd563;
	shf.l.wrap.b32 	%r6880, %r6874, %r6875, 25;
	shf.l.wrap.b32 	%r6881, %r6875, %r6874, 25;
	mov.b64 	%rd566, {%r6881, %r6880};
	xor.b64  	%rd567, %rd565, %rd566;
	xor.b64  	%rd568, %rd1254, %rd506;
	xor.b64  	%rd569, %rd1254, %rd1255;
	and.b64  	%rd570, %rd569, %rd568;
	xor.b64  	%rd571, %rd570, %rd1254;
	add.s64 	%rd572, %rd562, %rd571;
	add.s64 	%rd1253, %rd572, %rd567;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6882,%dummy}, %rd1257;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6883}, %rd1257;
	}
	shf.r.wrap.b32 	%r6884, %r6883, %r6882, 14;
	shf.r.wrap.b32 	%r6885, %r6882, %r6883, 14;
	mov.b64 	%rd573, {%r6885, %r6884};
	shf.r.wrap.b32 	%r6886, %r6883, %r6882, 18;
	shf.r.wrap.b32 	%r6887, %r6882, %r6883, 18;
	mov.b64 	%rd574, {%r6887, %r6886};
	xor.b64  	%rd575, %rd574, %rd573;
	shf.l.wrap.b32 	%r6888, %r6882, %r6883, 23;
	shf.l.wrap.b32 	%r6889, %r6883, %r6882, 23;
	mov.b64 	%rd576, {%r6889, %r6888};
	xor.b64  	%rd577, %rd575, %rd576;
	xor.b64  	%rd578, %rd1258, %rd1259;
	and.b64  	%rd579, %rd1257, %rd578;
	xor.b64  	%rd580, %rd579, %rd1259;
	add.s64 	%rd581, %rd495, %rd1244;
	add.s64 	%rd582, %rd581, %rd1243;
	add.s64 	%rd583, %rd582, %rd580;
	add.s64 	%rd584, %rd583, %rd577;
	add.s64 	%rd1256, %rd584, %rd506;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6890,%dummy}, %rd1253;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6891}, %rd1253;
	}
	shf.r.wrap.b32 	%r6892, %r6891, %r6890, 28;
	shf.r.wrap.b32 	%r6893, %r6890, %r6891, 28;
	mov.b64 	%rd585, {%r6893, %r6892};
	shf.l.wrap.b32 	%r6894, %r6890, %r6891, 30;
	shf.l.wrap.b32 	%r6895, %r6891, %r6890, 30;
	mov.b64 	%rd586, {%r6895, %r6894};
	xor.b64  	%rd587, %rd586, %rd585;
	shf.l.wrap.b32 	%r6896, %r6890, %r6891, 25;
	shf.l.wrap.b32 	%r6897, %r6891, %r6890, 25;
	mov.b64 	%rd588, {%r6897, %r6896};
	xor.b64  	%rd589, %rd587, %rd588;
	xor.b64  	%rd590, %rd1253, %rd1255;
	xor.b64  	%rd591, %rd1253, %rd1254;
	and.b64  	%rd592, %rd591, %rd590;
	xor.b64  	%rd593, %rd592, %rd1253;
	add.s64 	%rd594, %rd584, %rd593;
	add.s64 	%rd1252, %rd594, %rd589;
	mov.u32 	%r7394, 16;

BB2_90:
	shr.u64 	%rd595, %rd1245, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6898,%dummy}, %rd1245;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6899}, %rd1245;
	}
	shf.r.wrap.b32 	%r6900, %r6899, %r6898, 19;
	shf.r.wrap.b32 	%r6901, %r6898, %r6899, 19;
	mov.b64 	%rd596, {%r6901, %r6900};
	xor.b64  	%rd597, %rd596, %rd595;
	shf.l.wrap.b32 	%r6902, %r6898, %r6899, 3;
	shf.l.wrap.b32 	%r6903, %r6899, %r6898, 3;
	mov.b64 	%rd598, {%r6903, %r6902};
	xor.b64  	%rd599, %rd597, %rd598;
	shr.u64 	%rd600, %rd1261, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6904,%dummy}, %rd1261;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6905}, %rd1261;
	}
	shf.r.wrap.b32 	%r6906, %r6905, %r6904, 1;
	shf.r.wrap.b32 	%r6907, %r6904, %r6905, 1;
	mov.b64 	%rd601, {%r6907, %r6906};
	xor.b64  	%rd602, %rd601, %rd600;
	shf.r.wrap.b32 	%r6908, %r6905, %r6904, 8;
	shf.r.wrap.b32 	%r6909, %r6904, %r6905, 8;
	mov.b64 	%rd603, {%r6909, %r6908};
	xor.b64  	%rd604, %rd602, %rd603;
	add.s64 	%rd605, %rd1250, %rd1260;
	add.s64 	%rd606, %rd605, %rd599;
	add.s64 	%rd1260, %rd606, %rd604;
	shr.u64 	%rd607, %rd1244, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6910,%dummy}, %rd1244;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6911}, %rd1244;
	}
	shf.r.wrap.b32 	%r6912, %r6911, %r6910, 19;
	shf.r.wrap.b32 	%r6913, %r6910, %r6911, 19;
	mov.b64 	%rd608, {%r6913, %r6912};
	xor.b64  	%rd609, %rd608, %rd607;
	shf.l.wrap.b32 	%r6914, %r6910, %r6911, 3;
	shf.l.wrap.b32 	%r6915, %r6911, %r6910, 3;
	mov.b64 	%rd610, {%r6915, %r6914};
	xor.b64  	%rd611, %rd609, %rd610;
	shr.u64 	%rd612, %rd1262, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6916,%dummy}, %rd1262;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6917}, %rd1262;
	}
	shf.r.wrap.b32 	%r6918, %r6917, %r6916, 1;
	shf.r.wrap.b32 	%r6919, %r6916, %r6917, 1;
	mov.b64 	%rd613, {%r6919, %r6918};
	xor.b64  	%rd614, %rd613, %rd612;
	shf.r.wrap.b32 	%r6920, %r6917, %r6916, 8;
	shf.r.wrap.b32 	%r6921, %r6916, %r6917, 8;
	mov.b64 	%rd615, {%r6921, %r6920};
	xor.b64  	%rd616, %rd614, %rd615;
	add.s64 	%rd617, %rd1249, %rd1261;
	add.s64 	%rd618, %rd617, %rd611;
	add.s64 	%rd1261, %rd618, %rd616;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6922,%dummy}, %rd1260;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6923}, %rd1260;
	}
	shf.r.wrap.b32 	%r6924, %r6923, %r6922, 19;
	shf.r.wrap.b32 	%r6925, %r6922, %r6923, 19;
	mov.b64 	%rd619, {%r6925, %r6924};
	shf.l.wrap.b32 	%r6926, %r6922, %r6923, 3;
	shf.l.wrap.b32 	%r6927, %r6923, %r6922, 3;
	mov.b64 	%rd620, {%r6927, %r6926};
	shr.u64 	%rd621, %rd1260, 6;
	xor.b64  	%rd622, %rd619, %rd621;
	xor.b64  	%rd623, %rd622, %rd620;
	shr.u64 	%rd624, %rd1263, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6928,%dummy}, %rd1263;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6929}, %rd1263;
	}
	shf.r.wrap.b32 	%r6930, %r6929, %r6928, 1;
	shf.r.wrap.b32 	%r6931, %r6928, %r6929, 1;
	mov.b64 	%rd625, {%r6931, %r6930};
	xor.b64  	%rd626, %rd625, %rd624;
	shf.r.wrap.b32 	%r6932, %r6929, %r6928, 8;
	shf.r.wrap.b32 	%r6933, %r6928, %r6929, 8;
	mov.b64 	%rd627, {%r6933, %r6932};
	xor.b64  	%rd628, %rd626, %rd627;
	add.s64 	%rd629, %rd1248, %rd1262;
	add.s64 	%rd630, %rd629, %rd623;
	add.s64 	%rd1262, %rd630, %rd628;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6934,%dummy}, %rd1261;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6935}, %rd1261;
	}
	shf.r.wrap.b32 	%r6936, %r6935, %r6934, 19;
	shf.r.wrap.b32 	%r6937, %r6934, %r6935, 19;
	mov.b64 	%rd631, {%r6937, %r6936};
	shf.l.wrap.b32 	%r6938, %r6934, %r6935, 3;
	shf.l.wrap.b32 	%r6939, %r6935, %r6934, 3;
	mov.b64 	%rd632, {%r6939, %r6938};
	shr.u64 	%rd633, %rd1261, 6;
	xor.b64  	%rd634, %rd631, %rd633;
	xor.b64  	%rd635, %rd634, %rd632;
	shr.u64 	%rd636, %rd1264, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6940,%dummy}, %rd1264;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6941}, %rd1264;
	}
	shf.r.wrap.b32 	%r6942, %r6941, %r6940, 1;
	shf.r.wrap.b32 	%r6943, %r6940, %r6941, 1;
	mov.b64 	%rd637, {%r6943, %r6942};
	xor.b64  	%rd638, %rd637, %rd636;
	shf.r.wrap.b32 	%r6944, %r6941, %r6940, 8;
	shf.r.wrap.b32 	%r6945, %r6940, %r6941, 8;
	mov.b64 	%rd639, {%r6945, %r6944};
	xor.b64  	%rd640, %rd638, %rd639;
	add.s64 	%rd641, %rd1247, %rd1263;
	add.s64 	%rd642, %rd641, %rd635;
	add.s64 	%rd1263, %rd642, %rd640;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6946,%dummy}, %rd1262;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6947}, %rd1262;
	}
	shf.r.wrap.b32 	%r6948, %r6947, %r6946, 19;
	shf.r.wrap.b32 	%r6949, %r6946, %r6947, 19;
	mov.b64 	%rd643, {%r6949, %r6948};
	shf.l.wrap.b32 	%r6950, %r6946, %r6947, 3;
	shf.l.wrap.b32 	%r6951, %r6947, %r6946, 3;
	mov.b64 	%rd644, {%r6951, %r6950};
	shr.u64 	%rd645, %rd1262, 6;
	xor.b64  	%rd646, %rd643, %rd645;
	xor.b64  	%rd647, %rd646, %rd644;
	shr.u64 	%rd648, %rd1265, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6952,%dummy}, %rd1265;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6953}, %rd1265;
	}
	shf.r.wrap.b32 	%r6954, %r6953, %r6952, 1;
	shf.r.wrap.b32 	%r6955, %r6952, %r6953, 1;
	mov.b64 	%rd649, {%r6955, %r6954};
	xor.b64  	%rd650, %rd649, %rd648;
	shf.r.wrap.b32 	%r6956, %r6953, %r6952, 8;
	shf.r.wrap.b32 	%r6957, %r6952, %r6953, 8;
	mov.b64 	%rd651, {%r6957, %r6956};
	xor.b64  	%rd652, %rd650, %rd651;
	add.s64 	%rd653, %rd1246, %rd1264;
	add.s64 	%rd654, %rd653, %rd647;
	add.s64 	%rd1264, %rd654, %rd652;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6958,%dummy}, %rd1263;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6959}, %rd1263;
	}
	shf.r.wrap.b32 	%r6960, %r6959, %r6958, 19;
	shf.r.wrap.b32 	%r6961, %r6958, %r6959, 19;
	mov.b64 	%rd655, {%r6961, %r6960};
	shf.l.wrap.b32 	%r6962, %r6958, %r6959, 3;
	shf.l.wrap.b32 	%r6963, %r6959, %r6958, 3;
	mov.b64 	%rd656, {%r6963, %r6962};
	shr.u64 	%rd657, %rd1263, 6;
	xor.b64  	%rd658, %rd655, %rd657;
	xor.b64  	%rd659, %rd658, %rd656;
	shr.u64 	%rd660, %rd1266, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6964,%dummy}, %rd1266;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6965}, %rd1266;
	}
	shf.r.wrap.b32 	%r6966, %r6965, %r6964, 1;
	shf.r.wrap.b32 	%r6967, %r6964, %r6965, 1;
	mov.b64 	%rd661, {%r6967, %r6966};
	xor.b64  	%rd662, %rd661, %rd660;
	shf.r.wrap.b32 	%r6968, %r6965, %r6964, 8;
	shf.r.wrap.b32 	%r6969, %r6964, %r6965, 8;
	mov.b64 	%rd663, {%r6969, %r6968};
	xor.b64  	%rd664, %rd662, %rd663;
	add.s64 	%rd665, %rd1245, %rd1265;
	add.s64 	%rd666, %rd665, %rd659;
	add.s64 	%rd1265, %rd666, %rd664;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6970,%dummy}, %rd1264;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6971}, %rd1264;
	}
	shf.r.wrap.b32 	%r6972, %r6971, %r6970, 19;
	shf.r.wrap.b32 	%r6973, %r6970, %r6971, 19;
	mov.b64 	%rd667, {%r6973, %r6972};
	shf.l.wrap.b32 	%r6974, %r6970, %r6971, 3;
	shf.l.wrap.b32 	%r6975, %r6971, %r6970, 3;
	mov.b64 	%rd668, {%r6975, %r6974};
	shr.u64 	%rd669, %rd1264, 6;
	xor.b64  	%rd670, %rd667, %rd669;
	xor.b64  	%rd671, %rd670, %rd668;
	shr.u64 	%rd672, %rd1267, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6976,%dummy}, %rd1267;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6977}, %rd1267;
	}
	shf.r.wrap.b32 	%r6978, %r6977, %r6976, 1;
	shf.r.wrap.b32 	%r6979, %r6976, %r6977, 1;
	mov.b64 	%rd673, {%r6979, %r6978};
	xor.b64  	%rd674, %rd673, %rd672;
	shf.r.wrap.b32 	%r6980, %r6977, %r6976, 8;
	shf.r.wrap.b32 	%r6981, %r6976, %r6977, 8;
	mov.b64 	%rd675, {%r6981, %r6980};
	xor.b64  	%rd676, %rd674, %rd675;
	add.s64 	%rd677, %rd1244, %rd1266;
	add.s64 	%rd678, %rd677, %rd671;
	add.s64 	%rd1266, %rd678, %rd676;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6982,%dummy}, %rd1265;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6983}, %rd1265;
	}
	shf.r.wrap.b32 	%r6984, %r6983, %r6982, 19;
	shf.r.wrap.b32 	%r6985, %r6982, %r6983, 19;
	mov.b64 	%rd679, {%r6985, %r6984};
	shf.l.wrap.b32 	%r6986, %r6982, %r6983, 3;
	shf.l.wrap.b32 	%r6987, %r6983, %r6982, 3;
	mov.b64 	%rd680, {%r6987, %r6986};
	shr.u64 	%rd681, %rd1265, 6;
	xor.b64  	%rd682, %rd679, %rd681;
	xor.b64  	%rd683, %rd682, %rd680;
	shr.u64 	%rd684, %rd1251, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6988,%dummy}, %rd1251;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6989}, %rd1251;
	}
	shf.r.wrap.b32 	%r6990, %r6989, %r6988, 1;
	shf.r.wrap.b32 	%r6991, %r6988, %r6989, 1;
	mov.b64 	%rd685, {%r6991, %r6990};
	xor.b64  	%rd686, %rd685, %rd684;
	shf.r.wrap.b32 	%r6992, %r6989, %r6988, 8;
	shf.r.wrap.b32 	%r6993, %r6988, %r6989, 8;
	mov.b64 	%rd687, {%r6993, %r6992};
	xor.b64  	%rd688, %rd686, %rd687;
	add.s64 	%rd689, %rd1260, %rd1267;
	add.s64 	%rd690, %rd689, %rd683;
	add.s64 	%rd1267, %rd690, %rd688;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6994,%dummy}, %rd1266;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6995}, %rd1266;
	}
	shf.r.wrap.b32 	%r6996, %r6995, %r6994, 19;
	shf.r.wrap.b32 	%r6997, %r6994, %r6995, 19;
	mov.b64 	%rd691, {%r6997, %r6996};
	shf.l.wrap.b32 	%r6998, %r6994, %r6995, 3;
	shf.l.wrap.b32 	%r6999, %r6995, %r6994, 3;
	mov.b64 	%rd692, {%r6999, %r6998};
	shr.u64 	%rd693, %rd1266, 6;
	xor.b64  	%rd694, %rd691, %rd693;
	xor.b64  	%rd695, %rd694, %rd692;
	shr.u64 	%rd696, %rd1250, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7000,%dummy}, %rd1250;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7001}, %rd1250;
	}
	shf.r.wrap.b32 	%r7002, %r7001, %r7000, 1;
	shf.r.wrap.b32 	%r7003, %r7000, %r7001, 1;
	mov.b64 	%rd697, {%r7003, %r7002};
	xor.b64  	%rd698, %rd697, %rd696;
	shf.r.wrap.b32 	%r7004, %r7001, %r7000, 8;
	shf.r.wrap.b32 	%r7005, %r7000, %r7001, 8;
	mov.b64 	%rd699, {%r7005, %r7004};
	xor.b64  	%rd700, %rd698, %rd699;
	add.s64 	%rd701, %rd1261, %rd1251;
	add.s64 	%rd702, %rd701, %rd695;
	add.s64 	%rd1251, %rd702, %rd700;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7006,%dummy}, %rd1267;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7007}, %rd1267;
	}
	shf.r.wrap.b32 	%r7008, %r7007, %r7006, 19;
	shf.r.wrap.b32 	%r7009, %r7006, %r7007, 19;
	mov.b64 	%rd703, {%r7009, %r7008};
	shf.l.wrap.b32 	%r7010, %r7006, %r7007, 3;
	shf.l.wrap.b32 	%r7011, %r7007, %r7006, 3;
	mov.b64 	%rd704, {%r7011, %r7010};
	shr.u64 	%rd705, %rd1267, 6;
	xor.b64  	%rd706, %rd703, %rd705;
	xor.b64  	%rd707, %rd706, %rd704;
	shr.u64 	%rd708, %rd1249, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7012,%dummy}, %rd1249;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7013}, %rd1249;
	}
	shf.r.wrap.b32 	%r7014, %r7013, %r7012, 1;
	shf.r.wrap.b32 	%r7015, %r7012, %r7013, 1;
	mov.b64 	%rd709, {%r7015, %r7014};
	xor.b64  	%rd710, %rd709, %rd708;
	shf.r.wrap.b32 	%r7016, %r7013, %r7012, 8;
	shf.r.wrap.b32 	%r7017, %r7012, %r7013, 8;
	mov.b64 	%rd711, {%r7017, %r7016};
	xor.b64  	%rd712, %rd710, %rd711;
	add.s64 	%rd713, %rd1262, %rd1250;
	add.s64 	%rd714, %rd713, %rd707;
	add.s64 	%rd1250, %rd714, %rd712;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7018,%dummy}, %rd1251;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7019}, %rd1251;
	}
	shf.r.wrap.b32 	%r7020, %r7019, %r7018, 19;
	shf.r.wrap.b32 	%r7021, %r7018, %r7019, 19;
	mov.b64 	%rd715, {%r7021, %r7020};
	shf.l.wrap.b32 	%r7022, %r7018, %r7019, 3;
	shf.l.wrap.b32 	%r7023, %r7019, %r7018, 3;
	mov.b64 	%rd716, {%r7023, %r7022};
	shr.u64 	%rd717, %rd1251, 6;
	xor.b64  	%rd718, %rd715, %rd717;
	xor.b64  	%rd719, %rd718, %rd716;
	shr.u64 	%rd720, %rd1248, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7024,%dummy}, %rd1248;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7025}, %rd1248;
	}
	shf.r.wrap.b32 	%r7026, %r7025, %r7024, 1;
	shf.r.wrap.b32 	%r7027, %r7024, %r7025, 1;
	mov.b64 	%rd721, {%r7027, %r7026};
	xor.b64  	%rd722, %rd721, %rd720;
	shf.r.wrap.b32 	%r7028, %r7025, %r7024, 8;
	shf.r.wrap.b32 	%r7029, %r7024, %r7025, 8;
	mov.b64 	%rd723, {%r7029, %r7028};
	xor.b64  	%rd724, %rd722, %rd723;
	add.s64 	%rd725, %rd1263, %rd1249;
	add.s64 	%rd726, %rd725, %rd719;
	add.s64 	%rd1249, %rd726, %rd724;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7030,%dummy}, %rd1250;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7031}, %rd1250;
	}
	shf.r.wrap.b32 	%r7032, %r7031, %r7030, 19;
	shf.r.wrap.b32 	%r7033, %r7030, %r7031, 19;
	mov.b64 	%rd727, {%r7033, %r7032};
	shf.l.wrap.b32 	%r7034, %r7030, %r7031, 3;
	shf.l.wrap.b32 	%r7035, %r7031, %r7030, 3;
	mov.b64 	%rd728, {%r7035, %r7034};
	shr.u64 	%rd729, %rd1250, 6;
	xor.b64  	%rd730, %rd727, %rd729;
	xor.b64  	%rd731, %rd730, %rd728;
	shr.u64 	%rd732, %rd1247, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7036,%dummy}, %rd1247;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7037}, %rd1247;
	}
	shf.r.wrap.b32 	%r7038, %r7037, %r7036, 1;
	shf.r.wrap.b32 	%r7039, %r7036, %r7037, 1;
	mov.b64 	%rd733, {%r7039, %r7038};
	xor.b64  	%rd734, %rd733, %rd732;
	shf.r.wrap.b32 	%r7040, %r7037, %r7036, 8;
	shf.r.wrap.b32 	%r7041, %r7036, %r7037, 8;
	mov.b64 	%rd735, {%r7041, %r7040};
	xor.b64  	%rd736, %rd734, %rd735;
	add.s64 	%rd737, %rd1264, %rd1248;
	add.s64 	%rd738, %rd737, %rd731;
	add.s64 	%rd1248, %rd738, %rd736;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7042,%dummy}, %rd1249;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7043}, %rd1249;
	}
	shf.r.wrap.b32 	%r7044, %r7043, %r7042, 19;
	shf.r.wrap.b32 	%r7045, %r7042, %r7043, 19;
	mov.b64 	%rd739, {%r7045, %r7044};
	shf.l.wrap.b32 	%r7046, %r7042, %r7043, 3;
	shf.l.wrap.b32 	%r7047, %r7043, %r7042, 3;
	mov.b64 	%rd740, {%r7047, %r7046};
	shr.u64 	%rd741, %rd1249, 6;
	xor.b64  	%rd742, %rd739, %rd741;
	xor.b64  	%rd743, %rd742, %rd740;
	shr.u64 	%rd744, %rd1246, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7048,%dummy}, %rd1246;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7049}, %rd1246;
	}
	shf.r.wrap.b32 	%r7050, %r7049, %r7048, 1;
	shf.r.wrap.b32 	%r7051, %r7048, %r7049, 1;
	mov.b64 	%rd745, {%r7051, %r7050};
	xor.b64  	%rd746, %rd745, %rd744;
	shf.r.wrap.b32 	%r7052, %r7049, %r7048, 8;
	shf.r.wrap.b32 	%r7053, %r7048, %r7049, 8;
	mov.b64 	%rd747, {%r7053, %r7052};
	xor.b64  	%rd748, %rd746, %rd747;
	add.s64 	%rd749, %rd1265, %rd1247;
	add.s64 	%rd750, %rd749, %rd743;
	add.s64 	%rd1247, %rd750, %rd748;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7054,%dummy}, %rd1248;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7055}, %rd1248;
	}
	shf.r.wrap.b32 	%r7056, %r7055, %r7054, 19;
	shf.r.wrap.b32 	%r7057, %r7054, %r7055, 19;
	mov.b64 	%rd751, {%r7057, %r7056};
	shf.l.wrap.b32 	%r7058, %r7054, %r7055, 3;
	shf.l.wrap.b32 	%r7059, %r7055, %r7054, 3;
	mov.b64 	%rd752, {%r7059, %r7058};
	shr.u64 	%rd753, %rd1248, 6;
	xor.b64  	%rd754, %rd751, %rd753;
	xor.b64  	%rd755, %rd754, %rd752;
	shr.u64 	%rd756, %rd1245, 7;
	shf.r.wrap.b32 	%r7060, %r6899, %r6898, 1;
	shf.r.wrap.b32 	%r7061, %r6898, %r6899, 1;
	mov.b64 	%rd757, {%r7061, %r7060};
	xor.b64  	%rd758, %rd757, %rd756;
	shf.r.wrap.b32 	%r7062, %r6899, %r6898, 8;
	shf.r.wrap.b32 	%r7063, %r6898, %r6899, 8;
	mov.b64 	%rd759, {%r7063, %r7062};
	xor.b64  	%rd760, %rd758, %rd759;
	add.s64 	%rd761, %rd1266, %rd1246;
	add.s64 	%rd762, %rd761, %rd755;
	add.s64 	%rd1246, %rd762, %rd760;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7064,%dummy}, %rd1247;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7065}, %rd1247;
	}
	shf.r.wrap.b32 	%r7066, %r7065, %r7064, 19;
	shf.r.wrap.b32 	%r7067, %r7064, %r7065, 19;
	mov.b64 	%rd763, {%r7067, %r7066};
	shf.l.wrap.b32 	%r7068, %r7064, %r7065, 3;
	shf.l.wrap.b32 	%r7069, %r7065, %r7064, 3;
	mov.b64 	%rd764, {%r7069, %r7068};
	shr.u64 	%rd765, %rd1247, 6;
	xor.b64  	%rd766, %rd763, %rd765;
	xor.b64  	%rd767, %rd766, %rd764;
	shr.u64 	%rd768, %rd1244, 7;
	shf.r.wrap.b32 	%r7070, %r6911, %r6910, 1;
	shf.r.wrap.b32 	%r7071, %r6910, %r6911, 1;
	mov.b64 	%rd769, {%r7071, %r7070};
	xor.b64  	%rd770, %rd769, %rd768;
	shf.r.wrap.b32 	%r7072, %r6911, %r6910, 8;
	shf.r.wrap.b32 	%r7073, %r6910, %r6911, 8;
	mov.b64 	%rd771, {%r7073, %r7072};
	xor.b64  	%rd772, %rd770, %rd771;
	add.s64 	%rd773, %rd1267, %rd1245;
	add.s64 	%rd774, %rd773, %rd767;
	add.s64 	%rd1245, %rd774, %rd772;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7074,%dummy}, %rd1246;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7075}, %rd1246;
	}
	shf.r.wrap.b32 	%r7076, %r7075, %r7074, 19;
	shf.r.wrap.b32 	%r7077, %r7074, %r7075, 19;
	mov.b64 	%rd775, {%r7077, %r7076};
	shf.l.wrap.b32 	%r7078, %r7074, %r7075, 3;
	shf.l.wrap.b32 	%r7079, %r7075, %r7074, 3;
	mov.b64 	%rd776, {%r7079, %r7078};
	shr.u64 	%rd777, %rd1246, 6;
	xor.b64  	%rd778, %rd775, %rd777;
	xor.b64  	%rd779, %rd778, %rd776;
	shf.r.wrap.b32 	%r7080, %r6923, %r6922, 1;
	shf.r.wrap.b32 	%r7081, %r6922, %r6923, 1;
	mov.b64 	%rd780, {%r7081, %r7080};
	shf.r.wrap.b32 	%r7082, %r6923, %r6922, 8;
	shf.r.wrap.b32 	%r7083, %r6922, %r6923, 8;
	mov.b64 	%rd781, {%r7083, %r7082};
	shr.u64 	%rd782, %rd1260, 7;
	xor.b64  	%rd783, %rd780, %rd782;
	xor.b64  	%rd784, %rd783, %rd781;
	add.s64 	%rd785, %rd1251, %rd1244;
	add.s64 	%rd786, %rd785, %rd779;
	add.s64 	%rd1244, %rd786, %rd784;
	mul.wide.s32 	%rd787, %r7394, 8;
	mov.u64 	%rd788, k_sha512;
	add.s64 	%rd789, %rd788, %rd787;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7084,%dummy}, %rd1256;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7085}, %rd1256;
	}
	shf.r.wrap.b32 	%r7086, %r7085, %r7084, 18;
	shf.r.wrap.b32 	%r7087, %r7084, %r7085, 18;
	mov.b64 	%rd790, {%r7087, %r7086};
	shf.r.wrap.b32 	%r7088, %r7085, %r7084, 14;
	shf.r.wrap.b32 	%r7089, %r7084, %r7085, 14;
	mov.b64 	%rd791, {%r7089, %r7088};
	xor.b64  	%rd792, %rd790, %rd791;
	shf.l.wrap.b32 	%r7090, %r7084, %r7085, 23;
	shf.l.wrap.b32 	%r7091, %r7085, %r7084, 23;
	mov.b64 	%rd793, {%r7091, %r7090};
	xor.b64  	%rd794, %rd792, %rd793;
	xor.b64  	%rd795, %rd1257, %rd1258;
	and.b64  	%rd796, %rd795, %rd1256;
	xor.b64  	%rd797, %rd796, %rd1258;
	add.s64 	%rd798, %rd797, %rd1259;
	add.s64 	%rd799, %rd798, %rd1260;
	ld.const.u64 	%rd800, [%rd789];
	add.s64 	%rd801, %rd799, %rd800;
	add.s64 	%rd802, %rd801, %rd794;
	add.s64 	%rd803, %rd802, %rd1255;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7092}, %rd1252;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7093,%dummy}, %rd1252;
	}
	shf.l.wrap.b32 	%r7094, %r7093, %r7092, 30;
	shf.l.wrap.b32 	%r7095, %r7092, %r7093, 30;
	mov.b64 	%rd804, {%r7095, %r7094};
	shf.r.wrap.b32 	%r7096, %r7092, %r7093, 28;
	shf.r.wrap.b32 	%r7097, %r7093, %r7092, 28;
	mov.b64 	%rd805, {%r7097, %r7096};
	xor.b64  	%rd806, %rd804, %rd805;
	shf.l.wrap.b32 	%r7098, %r7093, %r7092, 25;
	shf.l.wrap.b32 	%r7099, %r7092, %r7093, 25;
	mov.b64 	%rd807, {%r7099, %r7098};
	xor.b64  	%rd808, %rd806, %rd807;
	xor.b64  	%rd809, %rd1252, %rd1253;
	xor.b64  	%rd810, %rd1252, %rd1254;
	and.b64  	%rd811, %rd809, %rd810;
	xor.b64  	%rd812, %rd811, %rd1252;
	add.s64 	%rd813, %rd802, %rd812;
	add.s64 	%rd814, %rd813, %rd808;
	add.s32 	%r7100, %r7394, 1;
	mul.wide.s32 	%rd815, %r7100, 8;
	add.s64 	%rd816, %rd788, %rd815;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7101,%dummy}, %rd803;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7102}, %rd803;
	}
	shf.r.wrap.b32 	%r7103, %r7102, %r7101, 14;
	shf.r.wrap.b32 	%r7104, %r7101, %r7102, 14;
	mov.b64 	%rd817, {%r7104, %r7103};
	shf.r.wrap.b32 	%r7105, %r7102, %r7101, 18;
	shf.r.wrap.b32 	%r7106, %r7101, %r7102, 18;
	mov.b64 	%rd818, {%r7106, %r7105};
	xor.b64  	%rd819, %rd818, %rd817;
	shf.l.wrap.b32 	%r7107, %r7101, %r7102, 23;
	shf.l.wrap.b32 	%r7108, %r7102, %r7101, 23;
	mov.b64 	%rd820, {%r7108, %r7107};
	xor.b64  	%rd821, %rd819, %rd820;
	xor.b64  	%rd822, %rd1256, %rd1257;
	and.b64  	%rd823, %rd803, %rd822;
	xor.b64  	%rd824, %rd823, %rd1257;
	add.s64 	%rd825, %rd1261, %rd1258;
	ld.const.u64 	%rd826, [%rd816];
	add.s64 	%rd827, %rd825, %rd826;
	add.s64 	%rd828, %rd827, %rd824;
	add.s64 	%rd829, %rd828, %rd821;
	add.s64 	%rd830, %rd829, %rd1254;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7109,%dummy}, %rd814;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7110}, %rd814;
	}
	shf.r.wrap.b32 	%r7111, %r7110, %r7109, 28;
	shf.r.wrap.b32 	%r7112, %r7109, %r7110, 28;
	mov.b64 	%rd831, {%r7112, %r7111};
	shf.l.wrap.b32 	%r7113, %r7109, %r7110, 30;
	shf.l.wrap.b32 	%r7114, %r7110, %r7109, 30;
	mov.b64 	%rd832, {%r7114, %r7113};
	xor.b64  	%rd833, %rd832, %rd831;
	shf.l.wrap.b32 	%r7115, %r7109, %r7110, 25;
	shf.l.wrap.b32 	%r7116, %r7110, %r7109, 25;
	mov.b64 	%rd834, {%r7116, %r7115};
	xor.b64  	%rd835, %rd833, %rd834;
	xor.b64  	%rd836, %rd814, %rd1253;
	xor.b64  	%rd837, %rd814, %rd1252;
	and.b64  	%rd838, %rd837, %rd836;
	xor.b64  	%rd839, %rd838, %rd814;
	add.s64 	%rd840, %rd829, %rd839;
	add.s64 	%rd841, %rd840, %rd835;
	add.s32 	%r7117, %r7394, 2;
	mul.wide.s32 	%rd842, %r7117, 8;
	add.s64 	%rd843, %rd788, %rd842;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7118,%dummy}, %rd830;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7119}, %rd830;
	}
	shf.r.wrap.b32 	%r7120, %r7119, %r7118, 14;
	shf.r.wrap.b32 	%r7121, %r7118, %r7119, 14;
	mov.b64 	%rd844, {%r7121, %r7120};
	shf.r.wrap.b32 	%r7122, %r7119, %r7118, 18;
	shf.r.wrap.b32 	%r7123, %r7118, %r7119, 18;
	mov.b64 	%rd845, {%r7123, %r7122};
	xor.b64  	%rd846, %rd845, %rd844;
	shf.l.wrap.b32 	%r7124, %r7118, %r7119, 23;
	shf.l.wrap.b32 	%r7125, %r7119, %r7118, 23;
	mov.b64 	%rd847, {%r7125, %r7124};
	xor.b64  	%rd848, %rd846, %rd847;
	xor.b64  	%rd849, %rd803, %rd1256;
	and.b64  	%rd850, %rd830, %rd849;
	xor.b64  	%rd851, %rd850, %rd1256;
	add.s64 	%rd852, %rd1262, %rd1257;
	ld.const.u64 	%rd853, [%rd843];
	add.s64 	%rd854, %rd852, %rd853;
	add.s64 	%rd855, %rd854, %rd851;
	add.s64 	%rd856, %rd855, %rd848;
	add.s64 	%rd857, %rd856, %rd1253;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7126,%dummy}, %rd841;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7127}, %rd841;
	}
	shf.r.wrap.b32 	%r7128, %r7127, %r7126, 28;
	shf.r.wrap.b32 	%r7129, %r7126, %r7127, 28;
	mov.b64 	%rd858, {%r7129, %r7128};
	shf.l.wrap.b32 	%r7130, %r7126, %r7127, 30;
	shf.l.wrap.b32 	%r7131, %r7127, %r7126, 30;
	mov.b64 	%rd859, {%r7131, %r7130};
	xor.b64  	%rd860, %rd859, %rd858;
	shf.l.wrap.b32 	%r7132, %r7126, %r7127, 25;
	shf.l.wrap.b32 	%r7133, %r7127, %r7126, 25;
	mov.b64 	%rd861, {%r7133, %r7132};
	xor.b64  	%rd862, %rd860, %rd861;
	xor.b64  	%rd863, %rd841, %rd1252;
	xor.b64  	%rd864, %rd841, %rd814;
	and.b64  	%rd865, %rd864, %rd863;
	xor.b64  	%rd866, %rd865, %rd841;
	add.s64 	%rd867, %rd856, %rd866;
	add.s64 	%rd868, %rd867, %rd862;
	add.s32 	%r7134, %r7394, 3;
	mul.wide.s32 	%rd869, %r7134, 8;
	add.s64 	%rd870, %rd788, %rd869;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7135,%dummy}, %rd857;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7136}, %rd857;
	}
	shf.r.wrap.b32 	%r7137, %r7136, %r7135, 14;
	shf.r.wrap.b32 	%r7138, %r7135, %r7136, 14;
	mov.b64 	%rd871, {%r7138, %r7137};
	shf.r.wrap.b32 	%r7139, %r7136, %r7135, 18;
	shf.r.wrap.b32 	%r7140, %r7135, %r7136, 18;
	mov.b64 	%rd872, {%r7140, %r7139};
	xor.b64  	%rd873, %rd872, %rd871;
	shf.l.wrap.b32 	%r7141, %r7135, %r7136, 23;
	shf.l.wrap.b32 	%r7142, %r7136, %r7135, 23;
	mov.b64 	%rd874, {%r7142, %r7141};
	xor.b64  	%rd875, %rd873, %rd874;
	xor.b64  	%rd876, %rd830, %rd803;
	and.b64  	%rd877, %rd857, %rd876;
	xor.b64  	%rd878, %rd877, %rd803;
	add.s64 	%rd879, %rd1263, %rd1256;
	ld.const.u64 	%rd880, [%rd870];
	add.s64 	%rd881, %rd879, %rd880;
	add.s64 	%rd882, %rd881, %rd878;
	add.s64 	%rd883, %rd882, %rd875;
	add.s64 	%rd884, %rd883, %rd1252;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7143,%dummy}, %rd868;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7144}, %rd868;
	}
	shf.r.wrap.b32 	%r7145, %r7144, %r7143, 28;
	shf.r.wrap.b32 	%r7146, %r7143, %r7144, 28;
	mov.b64 	%rd885, {%r7146, %r7145};
	shf.l.wrap.b32 	%r7147, %r7143, %r7144, 30;
	shf.l.wrap.b32 	%r7148, %r7144, %r7143, 30;
	mov.b64 	%rd886, {%r7148, %r7147};
	xor.b64  	%rd887, %rd886, %rd885;
	shf.l.wrap.b32 	%r7149, %r7143, %r7144, 25;
	shf.l.wrap.b32 	%r7150, %r7144, %r7143, 25;
	mov.b64 	%rd888, {%r7150, %r7149};
	xor.b64  	%rd889, %rd887, %rd888;
	xor.b64  	%rd890, %rd868, %rd814;
	xor.b64  	%rd891, %rd868, %rd841;
	and.b64  	%rd892, %rd891, %rd890;
	xor.b64  	%rd893, %rd892, %rd868;
	add.s64 	%rd894, %rd883, %rd893;
	add.s64 	%rd895, %rd894, %rd889;
	add.s32 	%r7151, %r7394, 4;
	mul.wide.s32 	%rd896, %r7151, 8;
	add.s64 	%rd897, %rd788, %rd896;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7152,%dummy}, %rd884;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7153}, %rd884;
	}
	shf.r.wrap.b32 	%r7154, %r7153, %r7152, 14;
	shf.r.wrap.b32 	%r7155, %r7152, %r7153, 14;
	mov.b64 	%rd898, {%r7155, %r7154};
	shf.r.wrap.b32 	%r7156, %r7153, %r7152, 18;
	shf.r.wrap.b32 	%r7157, %r7152, %r7153, 18;
	mov.b64 	%rd899, {%r7157, %r7156};
	xor.b64  	%rd900, %rd899, %rd898;
	shf.l.wrap.b32 	%r7158, %r7152, %r7153, 23;
	shf.l.wrap.b32 	%r7159, %r7153, %r7152, 23;
	mov.b64 	%rd901, {%r7159, %r7158};
	xor.b64  	%rd902, %rd900, %rd901;
	xor.b64  	%rd903, %rd857, %rd830;
	and.b64  	%rd904, %rd884, %rd903;
	xor.b64  	%rd905, %rd904, %rd830;
	add.s64 	%rd906, %rd803, %rd1264;
	ld.const.u64 	%rd907, [%rd897];
	add.s64 	%rd908, %rd906, %rd907;
	add.s64 	%rd909, %rd908, %rd905;
	add.s64 	%rd910, %rd909, %rd902;
	add.s64 	%rd911, %rd910, %rd814;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7160,%dummy}, %rd895;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7161}, %rd895;
	}
	shf.r.wrap.b32 	%r7162, %r7161, %r7160, 28;
	shf.r.wrap.b32 	%r7163, %r7160, %r7161, 28;
	mov.b64 	%rd912, {%r7163, %r7162};
	shf.l.wrap.b32 	%r7164, %r7160, %r7161, 30;
	shf.l.wrap.b32 	%r7165, %r7161, %r7160, 30;
	mov.b64 	%rd913, {%r7165, %r7164};
	xor.b64  	%rd914, %rd913, %rd912;
	shf.l.wrap.b32 	%r7166, %r7160, %r7161, 25;
	shf.l.wrap.b32 	%r7167, %r7161, %r7160, 25;
	mov.b64 	%rd915, {%r7167, %r7166};
	xor.b64  	%rd916, %rd914, %rd915;
	xor.b64  	%rd917, %rd895, %rd841;
	xor.b64  	%rd918, %rd895, %rd868;
	and.b64  	%rd919, %rd918, %rd917;
	xor.b64  	%rd920, %rd919, %rd895;
	add.s64 	%rd921, %rd910, %rd920;
	add.s64 	%rd922, %rd921, %rd916;
	add.s32 	%r7168, %r7394, 5;
	mul.wide.s32 	%rd923, %r7168, 8;
	add.s64 	%rd924, %rd788, %rd923;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7169,%dummy}, %rd911;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7170}, %rd911;
	}
	shf.r.wrap.b32 	%r7171, %r7170, %r7169, 14;
	shf.r.wrap.b32 	%r7172, %r7169, %r7170, 14;
	mov.b64 	%rd925, {%r7172, %r7171};
	shf.r.wrap.b32 	%r7173, %r7170, %r7169, 18;
	shf.r.wrap.b32 	%r7174, %r7169, %r7170, 18;
	mov.b64 	%rd926, {%r7174, %r7173};
	xor.b64  	%rd927, %rd926, %rd925;
	shf.l.wrap.b32 	%r7175, %r7169, %r7170, 23;
	shf.l.wrap.b32 	%r7176, %r7170, %r7169, 23;
	mov.b64 	%rd928, {%r7176, %r7175};
	xor.b64  	%rd929, %rd927, %rd928;
	xor.b64  	%rd930, %rd884, %rd857;
	and.b64  	%rd931, %rd911, %rd930;
	xor.b64  	%rd932, %rd931, %rd857;
	add.s64 	%rd933, %rd830, %rd1265;
	ld.const.u64 	%rd934, [%rd924];
	add.s64 	%rd935, %rd933, %rd934;
	add.s64 	%rd936, %rd935, %rd932;
	add.s64 	%rd937, %rd936, %rd929;
	add.s64 	%rd938, %rd937, %rd841;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7177,%dummy}, %rd922;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7178}, %rd922;
	}
	shf.r.wrap.b32 	%r7179, %r7178, %r7177, 28;
	shf.r.wrap.b32 	%r7180, %r7177, %r7178, 28;
	mov.b64 	%rd939, {%r7180, %r7179};
	shf.l.wrap.b32 	%r7181, %r7177, %r7178, 30;
	shf.l.wrap.b32 	%r7182, %r7178, %r7177, 30;
	mov.b64 	%rd940, {%r7182, %r7181};
	xor.b64  	%rd941, %rd940, %rd939;
	shf.l.wrap.b32 	%r7183, %r7177, %r7178, 25;
	shf.l.wrap.b32 	%r7184, %r7178, %r7177, 25;
	mov.b64 	%rd942, {%r7184, %r7183};
	xor.b64  	%rd943, %rd941, %rd942;
	xor.b64  	%rd944, %rd922, %rd868;
	xor.b64  	%rd945, %rd922, %rd895;
	and.b64  	%rd946, %rd945, %rd944;
	xor.b64  	%rd947, %rd946, %rd922;
	add.s64 	%rd948, %rd937, %rd947;
	add.s64 	%rd949, %rd948, %rd943;
	add.s32 	%r7185, %r7394, 6;
	mul.wide.s32 	%rd950, %r7185, 8;
	add.s64 	%rd951, %rd788, %rd950;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7186,%dummy}, %rd938;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7187}, %rd938;
	}
	shf.r.wrap.b32 	%r7188, %r7187, %r7186, 14;
	shf.r.wrap.b32 	%r7189, %r7186, %r7187, 14;
	mov.b64 	%rd952, {%r7189, %r7188};
	shf.r.wrap.b32 	%r7190, %r7187, %r7186, 18;
	shf.r.wrap.b32 	%r7191, %r7186, %r7187, 18;
	mov.b64 	%rd953, {%r7191, %r7190};
	xor.b64  	%rd954, %rd953, %rd952;
	shf.l.wrap.b32 	%r7192, %r7186, %r7187, 23;
	shf.l.wrap.b32 	%r7193, %r7187, %r7186, 23;
	mov.b64 	%rd955, {%r7193, %r7192};
	xor.b64  	%rd956, %rd954, %rd955;
	xor.b64  	%rd957, %rd911, %rd884;
	and.b64  	%rd958, %rd938, %rd957;
	xor.b64  	%rd959, %rd958, %rd884;
	add.s64 	%rd960, %rd857, %rd1266;
	ld.const.u64 	%rd961, [%rd951];
	add.s64 	%rd962, %rd960, %rd961;
	add.s64 	%rd963, %rd962, %rd959;
	add.s64 	%rd964, %rd963, %rd956;
	add.s64 	%rd965, %rd964, %rd868;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7194,%dummy}, %rd949;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7195}, %rd949;
	}
	shf.r.wrap.b32 	%r7196, %r7195, %r7194, 28;
	shf.r.wrap.b32 	%r7197, %r7194, %r7195, 28;
	mov.b64 	%rd966, {%r7197, %r7196};
	shf.l.wrap.b32 	%r7198, %r7194, %r7195, 30;
	shf.l.wrap.b32 	%r7199, %r7195, %r7194, 30;
	mov.b64 	%rd967, {%r7199, %r7198};
	xor.b64  	%rd968, %rd967, %rd966;
	shf.l.wrap.b32 	%r7200, %r7194, %r7195, 25;
	shf.l.wrap.b32 	%r7201, %r7195, %r7194, 25;
	mov.b64 	%rd969, {%r7201, %r7200};
	xor.b64  	%rd970, %rd968, %rd969;
	xor.b64  	%rd971, %rd949, %rd895;
	xor.b64  	%rd972, %rd949, %rd922;
	and.b64  	%rd973, %rd972, %rd971;
	xor.b64  	%rd974, %rd973, %rd949;
	add.s64 	%rd975, %rd964, %rd974;
	add.s64 	%rd976, %rd975, %rd970;
	add.s32 	%r7202, %r7394, 7;
	mul.wide.s32 	%rd977, %r7202, 8;
	add.s64 	%rd978, %rd788, %rd977;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7203,%dummy}, %rd965;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7204}, %rd965;
	}
	shf.r.wrap.b32 	%r7205, %r7204, %r7203, 14;
	shf.r.wrap.b32 	%r7206, %r7203, %r7204, 14;
	mov.b64 	%rd979, {%r7206, %r7205};
	shf.r.wrap.b32 	%r7207, %r7204, %r7203, 18;
	shf.r.wrap.b32 	%r7208, %r7203, %r7204, 18;
	mov.b64 	%rd980, {%r7208, %r7207};
	xor.b64  	%rd981, %rd980, %rd979;
	shf.l.wrap.b32 	%r7209, %r7203, %r7204, 23;
	shf.l.wrap.b32 	%r7210, %r7204, %r7203, 23;
	mov.b64 	%rd982, {%r7210, %r7209};
	xor.b64  	%rd983, %rd981, %rd982;
	xor.b64  	%rd984, %rd938, %rd911;
	and.b64  	%rd985, %rd965, %rd984;
	xor.b64  	%rd986, %rd985, %rd911;
	add.s64 	%rd987, %rd884, %rd1267;
	ld.const.u64 	%rd988, [%rd978];
	add.s64 	%rd989, %rd987, %rd988;
	add.s64 	%rd990, %rd989, %rd986;
	add.s64 	%rd991, %rd990, %rd983;
	add.s64 	%rd992, %rd991, %rd895;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7211,%dummy}, %rd976;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7212}, %rd976;
	}
	shf.r.wrap.b32 	%r7213, %r7212, %r7211, 28;
	shf.r.wrap.b32 	%r7214, %r7211, %r7212, 28;
	mov.b64 	%rd993, {%r7214, %r7213};
	shf.l.wrap.b32 	%r7215, %r7211, %r7212, 30;
	shf.l.wrap.b32 	%r7216, %r7212, %r7211, 30;
	mov.b64 	%rd994, {%r7216, %r7215};
	xor.b64  	%rd995, %rd994, %rd993;
	shf.l.wrap.b32 	%r7217, %r7211, %r7212, 25;
	shf.l.wrap.b32 	%r7218, %r7212, %r7211, 25;
	mov.b64 	%rd996, {%r7218, %r7217};
	xor.b64  	%rd997, %rd995, %rd996;
	xor.b64  	%rd998, %rd976, %rd922;
	xor.b64  	%rd999, %rd976, %rd949;
	and.b64  	%rd1000, %rd999, %rd998;
	xor.b64  	%rd1001, %rd1000, %rd976;
	add.s64 	%rd1002, %rd991, %rd1001;
	add.s64 	%rd1003, %rd1002, %rd997;
	add.s32 	%r7219, %r7394, 8;
	mul.wide.s32 	%rd1004, %r7219, 8;
	add.s64 	%rd1005, %rd788, %rd1004;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7220,%dummy}, %rd992;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7221}, %rd992;
	}
	shf.r.wrap.b32 	%r7222, %r7221, %r7220, 14;
	shf.r.wrap.b32 	%r7223, %r7220, %r7221, 14;
	mov.b64 	%rd1006, {%r7223, %r7222};
	shf.r.wrap.b32 	%r7224, %r7221, %r7220, 18;
	shf.r.wrap.b32 	%r7225, %r7220, %r7221, 18;
	mov.b64 	%rd1007, {%r7225, %r7224};
	xor.b64  	%rd1008, %rd1007, %rd1006;
	shf.l.wrap.b32 	%r7226, %r7220, %r7221, 23;
	shf.l.wrap.b32 	%r7227, %r7221, %r7220, 23;
	mov.b64 	%rd1009, {%r7227, %r7226};
	xor.b64  	%rd1010, %rd1008, %rd1009;
	xor.b64  	%rd1011, %rd965, %rd938;
	and.b64  	%rd1012, %rd992, %rd1011;
	xor.b64  	%rd1013, %rd1012, %rd938;
	add.s64 	%rd1014, %rd911, %rd1251;
	ld.const.u64 	%rd1015, [%rd1005];
	add.s64 	%rd1016, %rd1014, %rd1015;
	add.s64 	%rd1017, %rd1016, %rd1013;
	add.s64 	%rd1018, %rd1017, %rd1010;
	add.s64 	%rd1019, %rd1018, %rd922;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7228,%dummy}, %rd1003;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7229}, %rd1003;
	}
	shf.r.wrap.b32 	%r7230, %r7229, %r7228, 28;
	shf.r.wrap.b32 	%r7231, %r7228, %r7229, 28;
	mov.b64 	%rd1020, {%r7231, %r7230};
	shf.l.wrap.b32 	%r7232, %r7228, %r7229, 30;
	shf.l.wrap.b32 	%r7233, %r7229, %r7228, 30;
	mov.b64 	%rd1021, {%r7233, %r7232};
	xor.b64  	%rd1022, %rd1021, %rd1020;
	shf.l.wrap.b32 	%r7234, %r7228, %r7229, 25;
	shf.l.wrap.b32 	%r7235, %r7229, %r7228, 25;
	mov.b64 	%rd1023, {%r7235, %r7234};
	xor.b64  	%rd1024, %rd1022, %rd1023;
	xor.b64  	%rd1025, %rd1003, %rd949;
	xor.b64  	%rd1026, %rd1003, %rd976;
	and.b64  	%rd1027, %rd1026, %rd1025;
	xor.b64  	%rd1028, %rd1027, %rd1003;
	add.s64 	%rd1029, %rd1018, %rd1028;
	add.s64 	%rd1030, %rd1029, %rd1024;
	add.s32 	%r7236, %r7394, 9;
	mul.wide.s32 	%rd1031, %r7236, 8;
	add.s64 	%rd1032, %rd788, %rd1031;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7237,%dummy}, %rd1019;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7238}, %rd1019;
	}
	shf.r.wrap.b32 	%r7239, %r7238, %r7237, 14;
	shf.r.wrap.b32 	%r7240, %r7237, %r7238, 14;
	mov.b64 	%rd1033, {%r7240, %r7239};
	shf.r.wrap.b32 	%r7241, %r7238, %r7237, 18;
	shf.r.wrap.b32 	%r7242, %r7237, %r7238, 18;
	mov.b64 	%rd1034, {%r7242, %r7241};
	xor.b64  	%rd1035, %rd1034, %rd1033;
	shf.l.wrap.b32 	%r7243, %r7237, %r7238, 23;
	shf.l.wrap.b32 	%r7244, %r7238, %r7237, 23;
	mov.b64 	%rd1036, {%r7244, %r7243};
	xor.b64  	%rd1037, %rd1035, %rd1036;
	xor.b64  	%rd1038, %rd992, %rd965;
	and.b64  	%rd1039, %rd1019, %rd1038;
	xor.b64  	%rd1040, %rd1039, %rd965;
	add.s64 	%rd1041, %rd938, %rd1250;
	ld.const.u64 	%rd1042, [%rd1032];
	add.s64 	%rd1043, %rd1041, %rd1042;
	add.s64 	%rd1044, %rd1043, %rd1040;
	add.s64 	%rd1045, %rd1044, %rd1037;
	add.s64 	%rd1046, %rd1045, %rd949;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7245,%dummy}, %rd1030;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7246}, %rd1030;
	}
	shf.r.wrap.b32 	%r7247, %r7246, %r7245, 28;
	shf.r.wrap.b32 	%r7248, %r7245, %r7246, 28;
	mov.b64 	%rd1047, {%r7248, %r7247};
	shf.l.wrap.b32 	%r7249, %r7245, %r7246, 30;
	shf.l.wrap.b32 	%r7250, %r7246, %r7245, 30;
	mov.b64 	%rd1048, {%r7250, %r7249};
	xor.b64  	%rd1049, %rd1048, %rd1047;
	shf.l.wrap.b32 	%r7251, %r7245, %r7246, 25;
	shf.l.wrap.b32 	%r7252, %r7246, %r7245, 25;
	mov.b64 	%rd1050, {%r7252, %r7251};
	xor.b64  	%rd1051, %rd1049, %rd1050;
	xor.b64  	%rd1052, %rd1030, %rd976;
	xor.b64  	%rd1053, %rd1030, %rd1003;
	and.b64  	%rd1054, %rd1053, %rd1052;
	xor.b64  	%rd1055, %rd1054, %rd1030;
	add.s64 	%rd1056, %rd1045, %rd1055;
	add.s64 	%rd1057, %rd1056, %rd1051;
	add.s32 	%r7253, %r7394, 10;
	mul.wide.s32 	%rd1058, %r7253, 8;
	add.s64 	%rd1059, %rd788, %rd1058;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7254,%dummy}, %rd1046;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7255}, %rd1046;
	}
	shf.r.wrap.b32 	%r7256, %r7255, %r7254, 14;
	shf.r.wrap.b32 	%r7257, %r7254, %r7255, 14;
	mov.b64 	%rd1060, {%r7257, %r7256};
	shf.r.wrap.b32 	%r7258, %r7255, %r7254, 18;
	shf.r.wrap.b32 	%r7259, %r7254, %r7255, 18;
	mov.b64 	%rd1061, {%r7259, %r7258};
	xor.b64  	%rd1062, %rd1061, %rd1060;
	shf.l.wrap.b32 	%r7260, %r7254, %r7255, 23;
	shf.l.wrap.b32 	%r7261, %r7255, %r7254, 23;
	mov.b64 	%rd1063, {%r7261, %r7260};
	xor.b64  	%rd1064, %rd1062, %rd1063;
	xor.b64  	%rd1065, %rd1019, %rd992;
	and.b64  	%rd1066, %rd1046, %rd1065;
	xor.b64  	%rd1067, %rd1066, %rd992;
	add.s64 	%rd1068, %rd965, %rd1249;
	ld.const.u64 	%rd1069, [%rd1059];
	add.s64 	%rd1070, %rd1068, %rd1069;
	add.s64 	%rd1071, %rd1070, %rd1067;
	add.s64 	%rd1072, %rd1071, %rd1064;
	add.s64 	%rd1073, %rd1072, %rd976;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7262,%dummy}, %rd1057;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7263}, %rd1057;
	}
	shf.r.wrap.b32 	%r7264, %r7263, %r7262, 28;
	shf.r.wrap.b32 	%r7265, %r7262, %r7263, 28;
	mov.b64 	%rd1074, {%r7265, %r7264};
	shf.l.wrap.b32 	%r7266, %r7262, %r7263, 30;
	shf.l.wrap.b32 	%r7267, %r7263, %r7262, 30;
	mov.b64 	%rd1075, {%r7267, %r7266};
	xor.b64  	%rd1076, %rd1075, %rd1074;
	shf.l.wrap.b32 	%r7268, %r7262, %r7263, 25;
	shf.l.wrap.b32 	%r7269, %r7263, %r7262, 25;
	mov.b64 	%rd1077, {%r7269, %r7268};
	xor.b64  	%rd1078, %rd1076, %rd1077;
	xor.b64  	%rd1079, %rd1057, %rd1003;
	xor.b64  	%rd1080, %rd1057, %rd1030;
	and.b64  	%rd1081, %rd1080, %rd1079;
	xor.b64  	%rd1082, %rd1081, %rd1057;
	add.s64 	%rd1083, %rd1072, %rd1082;
	add.s64 	%rd1084, %rd1083, %rd1078;
	add.s32 	%r7270, %r7394, 11;
	mul.wide.s32 	%rd1085, %r7270, 8;
	add.s64 	%rd1086, %rd788, %rd1085;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7271,%dummy}, %rd1073;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7272}, %rd1073;
	}
	shf.r.wrap.b32 	%r7273, %r7272, %r7271, 14;
	shf.r.wrap.b32 	%r7274, %r7271, %r7272, 14;
	mov.b64 	%rd1087, {%r7274, %r7273};
	shf.r.wrap.b32 	%r7275, %r7272, %r7271, 18;
	shf.r.wrap.b32 	%r7276, %r7271, %r7272, 18;
	mov.b64 	%rd1088, {%r7276, %r7275};
	xor.b64  	%rd1089, %rd1088, %rd1087;
	shf.l.wrap.b32 	%r7277, %r7271, %r7272, 23;
	shf.l.wrap.b32 	%r7278, %r7272, %r7271, 23;
	mov.b64 	%rd1090, {%r7278, %r7277};
	xor.b64  	%rd1091, %rd1089, %rd1090;
	xor.b64  	%rd1092, %rd1046, %rd1019;
	and.b64  	%rd1093, %rd1073, %rd1092;
	xor.b64  	%rd1094, %rd1093, %rd1019;
	add.s64 	%rd1095, %rd992, %rd1248;
	ld.const.u64 	%rd1096, [%rd1086];
	add.s64 	%rd1097, %rd1095, %rd1096;
	add.s64 	%rd1098, %rd1097, %rd1094;
	add.s64 	%rd1099, %rd1098, %rd1091;
	add.s64 	%rd1100, %rd1099, %rd1003;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7279,%dummy}, %rd1084;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7280}, %rd1084;
	}
	shf.r.wrap.b32 	%r7281, %r7280, %r7279, 28;
	shf.r.wrap.b32 	%r7282, %r7279, %r7280, 28;
	mov.b64 	%rd1101, {%r7282, %r7281};
	shf.l.wrap.b32 	%r7283, %r7279, %r7280, 30;
	shf.l.wrap.b32 	%r7284, %r7280, %r7279, 30;
	mov.b64 	%rd1102, {%r7284, %r7283};
	xor.b64  	%rd1103, %rd1102, %rd1101;
	shf.l.wrap.b32 	%r7285, %r7279, %r7280, 25;
	shf.l.wrap.b32 	%r7286, %r7280, %r7279, 25;
	mov.b64 	%rd1104, {%r7286, %r7285};
	xor.b64  	%rd1105, %rd1103, %rd1104;
	xor.b64  	%rd1106, %rd1084, %rd1030;
	xor.b64  	%rd1107, %rd1084, %rd1057;
	and.b64  	%rd1108, %rd1107, %rd1106;
	xor.b64  	%rd1109, %rd1108, %rd1084;
	add.s64 	%rd1110, %rd1099, %rd1109;
	add.s64 	%rd1111, %rd1110, %rd1105;
	add.s32 	%r7287, %r7394, 12;
	mul.wide.s32 	%rd1112, %r7287, 8;
	add.s64 	%rd1113, %rd788, %rd1112;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7288,%dummy}, %rd1100;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7289}, %rd1100;
	}
	shf.r.wrap.b32 	%r7290, %r7289, %r7288, 14;
	shf.r.wrap.b32 	%r7291, %r7288, %r7289, 14;
	mov.b64 	%rd1114, {%r7291, %r7290};
	shf.r.wrap.b32 	%r7292, %r7289, %r7288, 18;
	shf.r.wrap.b32 	%r7293, %r7288, %r7289, 18;
	mov.b64 	%rd1115, {%r7293, %r7292};
	xor.b64  	%rd1116, %rd1115, %rd1114;
	shf.l.wrap.b32 	%r7294, %r7288, %r7289, 23;
	shf.l.wrap.b32 	%r7295, %r7289, %r7288, 23;
	mov.b64 	%rd1117, {%r7295, %r7294};
	xor.b64  	%rd1118, %rd1116, %rd1117;
	xor.b64  	%rd1119, %rd1073, %rd1046;
	and.b64  	%rd1120, %rd1100, %rd1119;
	xor.b64  	%rd1121, %rd1120, %rd1046;
	add.s64 	%rd1122, %rd1019, %rd1247;
	ld.const.u64 	%rd1123, [%rd1113];
	add.s64 	%rd1124, %rd1122, %rd1123;
	add.s64 	%rd1125, %rd1124, %rd1121;
	add.s64 	%rd1126, %rd1125, %rd1118;
	add.s64 	%rd1259, %rd1126, %rd1030;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7296,%dummy}, %rd1111;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7297}, %rd1111;
	}
	shf.r.wrap.b32 	%r7298, %r7297, %r7296, 28;
	shf.r.wrap.b32 	%r7299, %r7296, %r7297, 28;
	mov.b64 	%rd1127, {%r7299, %r7298};
	shf.l.wrap.b32 	%r7300, %r7296, %r7297, 30;
	shf.l.wrap.b32 	%r7301, %r7297, %r7296, 30;
	mov.b64 	%rd1128, {%r7301, %r7300};
	xor.b64  	%rd1129, %rd1128, %rd1127;
	shf.l.wrap.b32 	%r7302, %r7296, %r7297, 25;
	shf.l.wrap.b32 	%r7303, %r7297, %r7296, 25;
	mov.b64 	%rd1130, {%r7303, %r7302};
	xor.b64  	%rd1131, %rd1129, %rd1130;
	xor.b64  	%rd1132, %rd1111, %rd1057;
	xor.b64  	%rd1133, %rd1111, %rd1084;
	and.b64  	%rd1134, %rd1133, %rd1132;
	xor.b64  	%rd1135, %rd1134, %rd1111;
	add.s64 	%rd1136, %rd1126, %rd1135;
	add.s64 	%rd1255, %rd1136, %rd1131;
	add.s32 	%r7304, %r7394, 13;
	mul.wide.s32 	%rd1137, %r7304, 8;
	add.s64 	%rd1138, %rd788, %rd1137;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7305,%dummy}, %rd1259;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7306}, %rd1259;
	}
	shf.r.wrap.b32 	%r7307, %r7306, %r7305, 14;
	shf.r.wrap.b32 	%r7308, %r7305, %r7306, 14;
	mov.b64 	%rd1139, {%r7308, %r7307};
	shf.r.wrap.b32 	%r7309, %r7306, %r7305, 18;
	shf.r.wrap.b32 	%r7310, %r7305, %r7306, 18;
	mov.b64 	%rd1140, {%r7310, %r7309};
	xor.b64  	%rd1141, %rd1140, %rd1139;
	shf.l.wrap.b32 	%r7311, %r7305, %r7306, 23;
	shf.l.wrap.b32 	%r7312, %r7306, %r7305, 23;
	mov.b64 	%rd1142, {%r7312, %r7311};
	xor.b64  	%rd1143, %rd1141, %rd1142;
	xor.b64  	%rd1144, %rd1100, %rd1073;
	and.b64  	%rd1145, %rd1259, %rd1144;
	xor.b64  	%rd1146, %rd1145, %rd1073;
	add.s64 	%rd1147, %rd1046, %rd1246;
	ld.const.u64 	%rd1148, [%rd1138];
	add.s64 	%rd1149, %rd1147, %rd1148;
	add.s64 	%rd1150, %rd1149, %rd1146;
	add.s64 	%rd1151, %rd1150, %rd1143;
	add.s64 	%rd1258, %rd1151, %rd1057;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7313,%dummy}, %rd1255;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7314}, %rd1255;
	}
	shf.r.wrap.b32 	%r7315, %r7314, %r7313, 28;
	shf.r.wrap.b32 	%r7316, %r7313, %r7314, 28;
	mov.b64 	%rd1152, {%r7316, %r7315};
	shf.l.wrap.b32 	%r7317, %r7313, %r7314, 30;
	shf.l.wrap.b32 	%r7318, %r7314, %r7313, 30;
	mov.b64 	%rd1153, {%r7318, %r7317};
	xor.b64  	%rd1154, %rd1153, %rd1152;
	shf.l.wrap.b32 	%r7319, %r7313, %r7314, 25;
	shf.l.wrap.b32 	%r7320, %r7314, %r7313, 25;
	mov.b64 	%rd1155, {%r7320, %r7319};
	xor.b64  	%rd1156, %rd1154, %rd1155;
	xor.b64  	%rd1157, %rd1255, %rd1084;
	xor.b64  	%rd1158, %rd1255, %rd1111;
	and.b64  	%rd1159, %rd1158, %rd1157;
	xor.b64  	%rd1160, %rd1159, %rd1255;
	add.s64 	%rd1161, %rd1151, %rd1160;
	add.s64 	%rd1254, %rd1161, %rd1156;
	add.s32 	%r7321, %r7394, 14;
	mul.wide.s32 	%rd1162, %r7321, 8;
	add.s64 	%rd1163, %rd788, %rd1162;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7322,%dummy}, %rd1258;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7323}, %rd1258;
	}
	shf.r.wrap.b32 	%r7324, %r7323, %r7322, 14;
	shf.r.wrap.b32 	%r7325, %r7322, %r7323, 14;
	mov.b64 	%rd1164, {%r7325, %r7324};
	shf.r.wrap.b32 	%r7326, %r7323, %r7322, 18;
	shf.r.wrap.b32 	%r7327, %r7322, %r7323, 18;
	mov.b64 	%rd1165, {%r7327, %r7326};
	xor.b64  	%rd1166, %rd1165, %rd1164;
	shf.l.wrap.b32 	%r7328, %r7322, %r7323, 23;
	shf.l.wrap.b32 	%r7329, %r7323, %r7322, 23;
	mov.b64 	%rd1167, {%r7329, %r7328};
	xor.b64  	%rd1168, %rd1166, %rd1167;
	xor.b64  	%rd1169, %rd1259, %rd1100;
	and.b64  	%rd1170, %rd1258, %rd1169;
	xor.b64  	%rd1171, %rd1170, %rd1100;
	add.s64 	%rd1172, %rd1073, %rd1245;
	ld.const.u64 	%rd1173, [%rd1163];
	add.s64 	%rd1174, %rd1172, %rd1173;
	add.s64 	%rd1175, %rd1174, %rd1171;
	add.s64 	%rd1176, %rd1175, %rd1168;
	add.s64 	%rd1257, %rd1176, %rd1084;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7330,%dummy}, %rd1254;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7331}, %rd1254;
	}
	shf.r.wrap.b32 	%r7332, %r7331, %r7330, 28;
	shf.r.wrap.b32 	%r7333, %r7330, %r7331, 28;
	mov.b64 	%rd1177, {%r7333, %r7332};
	shf.l.wrap.b32 	%r7334, %r7330, %r7331, 30;
	shf.l.wrap.b32 	%r7335, %r7331, %r7330, 30;
	mov.b64 	%rd1178, {%r7335, %r7334};
	xor.b64  	%rd1179, %rd1178, %rd1177;
	shf.l.wrap.b32 	%r7336, %r7330, %r7331, 25;
	shf.l.wrap.b32 	%r7337, %r7331, %r7330, 25;
	mov.b64 	%rd1180, {%r7337, %r7336};
	xor.b64  	%rd1181, %rd1179, %rd1180;
	xor.b64  	%rd1182, %rd1254, %rd1111;
	xor.b64  	%rd1183, %rd1254, %rd1255;
	and.b64  	%rd1184, %rd1183, %rd1182;
	xor.b64  	%rd1185, %rd1184, %rd1254;
	add.s64 	%rd1186, %rd1176, %rd1185;
	add.s64 	%rd1253, %rd1186, %rd1181;
	add.s32 	%r7338, %r7394, 15;
	mul.wide.s32 	%rd1187, %r7338, 8;
	add.s64 	%rd1188, %rd788, %rd1187;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7339,%dummy}, %rd1257;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7340}, %rd1257;
	}
	shf.r.wrap.b32 	%r7341, %r7340, %r7339, 14;
	shf.r.wrap.b32 	%r7342, %r7339, %r7340, 14;
	mov.b64 	%rd1189, {%r7342, %r7341};
	shf.r.wrap.b32 	%r7343, %r7340, %r7339, 18;
	shf.r.wrap.b32 	%r7344, %r7339, %r7340, 18;
	mov.b64 	%rd1190, {%r7344, %r7343};
	xor.b64  	%rd1191, %rd1190, %rd1189;
	shf.l.wrap.b32 	%r7345, %r7339, %r7340, 23;
	shf.l.wrap.b32 	%r7346, %r7340, %r7339, 23;
	mov.b64 	%rd1192, {%r7346, %r7345};
	xor.b64  	%rd1193, %rd1191, %rd1192;
	xor.b64  	%rd1194, %rd1258, %rd1259;
	and.b64  	%rd1195, %rd1257, %rd1194;
	xor.b64  	%rd1196, %rd1195, %rd1259;
	add.s64 	%rd1197, %rd1100, %rd1244;
	ld.const.u64 	%rd1198, [%rd1188];
	add.s64 	%rd1199, %rd1197, %rd1198;
	add.s64 	%rd1200, %rd1199, %rd1196;
	add.s64 	%rd1201, %rd1200, %rd1193;
	add.s64 	%rd1256, %rd1201, %rd1111;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7347,%dummy}, %rd1253;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7348}, %rd1253;
	}
	shf.r.wrap.b32 	%r7349, %r7348, %r7347, 28;
	shf.r.wrap.b32 	%r7350, %r7347, %r7348, 28;
	mov.b64 	%rd1202, {%r7350, %r7349};
	shf.l.wrap.b32 	%r7351, %r7347, %r7348, 30;
	shf.l.wrap.b32 	%r7352, %r7348, %r7347, 30;
	mov.b64 	%rd1203, {%r7352, %r7351};
	xor.b64  	%rd1204, %rd1203, %rd1202;
	shf.l.wrap.b32 	%r7353, %r7347, %r7348, 25;
	shf.l.wrap.b32 	%r7354, %r7348, %r7347, 25;
	mov.b64 	%rd1205, {%r7354, %r7353};
	xor.b64  	%rd1206, %rd1204, %rd1205;
	xor.b64  	%rd1207, %rd1253, %rd1255;
	xor.b64  	%rd1208, %rd1253, %rd1254;
	and.b64  	%rd1209, %rd1208, %rd1207;
	xor.b64  	%rd1210, %rd1209, %rd1253;
	add.s64 	%rd1211, %rd1201, %rd1210;
	add.s64 	%rd1252, %rd1211, %rd1206;
	add.s32 	%r7394, %r7394, 16;
	setp.lt.s32	%p49, %r7394, 80;
	@%p49 bra 	BB2_90;
	bra.uni 	BB2_91;

BB2_50:
	setp.eq.s32	%p18, %r673, 23;
	mov.u32 	%r7363, %r7362;
	mov.u32 	%r7364, %r7362;
	mov.u32 	%r7365, %r7362;
	mov.u32 	%r7366, %r7362;
	mov.u32 	%r7367, %r7362;
	mov.u32 	%r7368, %r7362;
	mov.u32 	%r7369, %r7362;
	mov.u32 	%r7370, %r7362;
	mov.u32 	%r7371, %r7362;
	mov.u32 	%r7372, %r7362;
	mov.u32 	%r7373, %r7362;
	mov.u32 	%r7374, %r7362;
	mov.u32 	%r7375, %r7362;
	mov.u32 	%r7376, %r7362;
	mov.u32 	%r7377, %r7362;
	mov.u32 	%r7378, %r7362;
	mov.u32 	%r7379, %r7362;
	mov.u32 	%r7380, %r7362;
	mov.u32 	%r7381, %r7362;
	mov.u32 	%r7382, %r7362;
	mov.u32 	%r7383, %r7362;
	mov.u32 	%r7384, %r7362;
	mov.u32 	%r7385, %r7362;
	mov.u32 	%r7386, %r7362;
	mov.u32 	%r7387, %r7362;
	mov.u32 	%r7388, %r7362;
	mov.u32 	%r7389, %r7362;
	mov.u32 	%r7390, %r7362;
	mov.u32 	%r7391, %r7362;
	mov.u32 	%r7392, %r7362;
	mov.u32 	%r7393, %r7362;
	@%p18 bra 	BB2_51;
	bra.uni 	BB2_89;

BB2_51:
	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7382, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2178, %r2179}, [%rd9+8];
	// inline asm
	prmt.b32 %r7383, %r2179, %r2178, %r7;
	// inline asm
	ld.local.u32 	%r2045, [%rd9+8];
	ld.local.u32 	%r2046, [%rd9+4];
	// inline asm
	prmt.b32 %r7384, %r2045, %r2046, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2180, %r2181}, [%rd9];
	// inline asm
	prmt.b32 %r7385, %r2181, %r2180, %r7;
	// inline asm
	ld.local.u32 	%r2053, [%rd9];
	ld.local.u32 	%r2054, [%rd8+12];
	// inline asm
	prmt.b32 %r7378, %r2053, %r2054, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2182, %r2183}, [%rd8+8];
	// inline asm
	prmt.b32 %r7379, %r2183, %r2182, %r7;
	// inline asm
	ld.local.u32 	%r2061, [%rd8+8];
	ld.local.u32 	%r2062, [%rd8+4];
	// inline asm
	prmt.b32 %r7380, %r2061, %r2062, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2184, %r2185}, [%rd8];
	// inline asm
	prmt.b32 %r7381, %r2185, %r2184, %r7;
	// inline asm
	ld.local.u32 	%r2069, [%rd8];
	ld.local.u32 	%r2070, [%rd7+12];
	// inline asm
	prmt.b32 %r7374, %r2069, %r2070, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2186, %r2187}, [%rd7+8];
	// inline asm
	prmt.b32 %r7375, %r2187, %r2186, %r7;
	// inline asm
	ld.local.u32 	%r2077, [%rd7+8];
	ld.local.u32 	%r2078, [%rd7+4];
	// inline asm
	prmt.b32 %r7376, %r2077, %r2078, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2188, %r2189}, [%rd7];
	// inline asm
	prmt.b32 %r7377, %r2189, %r2188, %r7;
	// inline asm
	ld.local.u32 	%r2085, [%rd7];
	ld.local.u32 	%r2086, [%rd6+12];
	// inline asm
	prmt.b32 %r7370, %r2085, %r2086, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2190, %r2191}, [%rd6+8];
	// inline asm
	prmt.b32 %r7371, %r2191, %r2190, %r7;
	// inline asm
	ld.local.u32 	%r2093, [%rd6+8];
	ld.local.u32 	%r2094, [%rd6+4];
	// inline asm
	prmt.b32 %r7372, %r2093, %r2094, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2192, %r2193}, [%rd6];
	// inline asm
	prmt.b32 %r7373, %r2193, %r2192, %r7;
	// inline asm
	ld.local.u32 	%r2101, [%rd6];
	ld.local.u32 	%r2102, [%rd5+12];
	// inline asm
	prmt.b32 %r7366, %r2101, %r2102, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2194, %r2195}, [%rd5+8];
	// inline asm
	prmt.b32 %r7367, %r2195, %r2194, %r7;
	// inline asm
	ld.local.u32 	%r2109, [%rd5+8];
	ld.local.u32 	%r2110, [%rd5+4];
	// inline asm
	prmt.b32 %r7368, %r2109, %r2110, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2196, %r2197}, [%rd5];
	// inline asm
	prmt.b32 %r7369, %r2197, %r2196, %r7;
	// inline asm
	ld.local.u32 	%r2117, [%rd5];
	ld.local.u32 	%r2118, [%rd4+12];
	// inline asm
	prmt.b32 %r7362, %r2117, %r2118, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2198, %r2199}, [%rd4+8];
	// inline asm
	prmt.b32 %r7363, %r2199, %r2198, %r7;
	// inline asm
	ld.local.u32 	%r2125, [%rd4+8];
	ld.local.u32 	%r2126, [%rd4+4];
	// inline asm
	prmt.b32 %r7364, %r2125, %r2126, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2200, %r2201}, [%rd4];
	// inline asm
	prmt.b32 %r7365, %r2201, %r2200, %r7;
	// inline asm
	ld.local.u32 	%r2133, [%rd4];
	ld.local.u32 	%r2134, [%rd3+12];
	// inline asm
	prmt.b32 %r2132, %r2133, %r2134, %r7;
	// inline asm
	st.local.u32 	[%rd9+12], %r2132;
	ld.local.v2.u32 	{%r2202, %r2203}, [%rd3+8];
	// inline asm
	prmt.b32 %r2136, %r2203, %r2202, %r7;
	// inline asm
	st.local.u32 	[%rd9+8], %r2136;
	ld.local.u32 	%r2141, [%rd3+8];
	ld.local.u32 	%r2142, [%rd3+4];
	// inline asm
	prmt.b32 %r2140, %r2141, %r2142, %r7;
	// inline asm
	st.local.u32 	[%rd9+4], %r2140;
	ld.local.v2.u32 	{%r2204, %r2205}, [%rd3];
	// inline asm
	prmt.b32 %r2144, %r2205, %r2204, %r7;
	// inline asm
	st.local.u32 	[%rd9], %r2144;
	ld.local.u32 	%r2149, [%rd3];
	ld.local.u32 	%r2150, [%rd2+12];
	// inline asm
	prmt.b32 %r2148, %r2149, %r2150, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r2148;
	ld.local.v2.u32 	{%r2206, %r2207}, [%rd2+8];
	// inline asm
	prmt.b32 %r2152, %r2207, %r2206, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r2152;
	ld.local.u32 	%r2157, [%rd2+8];
	ld.local.u32 	%r2158, [%rd2+4];
	// inline asm
	prmt.b32 %r2156, %r2157, %r2158, %r7;
	// inline asm
	st.local.u32 	[%rd8+4], %r2156;
	ld.local.v2.u32 	{%r2208, %r2209}, [%rd2];
	// inline asm
	prmt.b32 %r2160, %r2209, %r2208, %r7;
	// inline asm
	st.local.u32 	[%rd8], %r2160;
	ld.local.u32 	%r2165, [%rd2];
	// inline asm
	prmt.b32 %r2164, %r2165, %r7360, %r7;
	// inline asm
	st.local.v4.u32 	[%rd7], {%r7360, %r7360, %r7360, %r2164};
	st.local.v4.u32 	[%rd6], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd5], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd4], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd3], {%r7360, %r7360, %r7360, %r7360};
	st.local.v2.u32 	[%rd2+8], {%r7360, %r7360};
	mov.u64 	%rd197, 0;
	st.local.u64 	[%rd2], %rd197;
	mov.u32 	%r7361, %r7360;
	bra.uni 	BB2_85;

BB2_34:
	setp.eq.s32	%p30, %r673, 15;
	mov.u32 	%r7363, %r7362;
	mov.u32 	%r7364, %r7362;
	mov.u32 	%r7365, %r7362;
	mov.u32 	%r7366, %r7362;
	mov.u32 	%r7367, %r7362;
	mov.u32 	%r7368, %r7362;
	mov.u32 	%r7369, %r7362;
	mov.u32 	%r7370, %r7362;
	mov.u32 	%r7371, %r7362;
	mov.u32 	%r7372, %r7362;
	mov.u32 	%r7373, %r7362;
	mov.u32 	%r7374, %r7362;
	mov.u32 	%r7375, %r7362;
	mov.u32 	%r7376, %r7362;
	mov.u32 	%r7377, %r7362;
	mov.u32 	%r7378, %r7362;
	mov.u32 	%r7379, %r7362;
	mov.u32 	%r7380, %r7362;
	mov.u32 	%r7381, %r7362;
	mov.u32 	%r7382, %r7362;
	mov.u32 	%r7383, %r7362;
	mov.u32 	%r7384, %r7362;
	mov.u32 	%r7385, %r7362;
	mov.u32 	%r7386, %r7362;
	mov.u32 	%r7387, %r7362;
	mov.u32 	%r7388, %r7362;
	mov.u32 	%r7389, %r7362;
	mov.u32 	%r7390, %r7362;
	mov.u32 	%r7391, %r7362;
	mov.u32 	%r7392, %r7362;
	mov.u32 	%r7393, %r7362;
	@%p30 bra 	BB2_35;
	bra.uni 	BB2_89;

BB2_35:
	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7374, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3606, %r3607}, [%rd9+8];
	// inline asm
	prmt.b32 %r7375, %r3607, %r3606, %r7;
	// inline asm
	ld.local.u32 	%r3465, [%rd9+8];
	ld.local.u32 	%r3466, [%rd9+4];
	// inline asm
	prmt.b32 %r7376, %r3465, %r3466, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3608, %r3609}, [%rd9];
	// inline asm
	prmt.b32 %r7377, %r3609, %r3608, %r7;
	// inline asm
	ld.local.u32 	%r3473, [%rd9];
	ld.local.u32 	%r3474, [%rd8+12];
	// inline asm
	prmt.b32 %r7370, %r3473, %r3474, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3610, %r3611}, [%rd8+8];
	// inline asm
	prmt.b32 %r7371, %r3611, %r3610, %r7;
	// inline asm
	ld.local.u32 	%r3481, [%rd8+8];
	ld.local.u32 	%r3482, [%rd8+4];
	// inline asm
	prmt.b32 %r7372, %r3481, %r3482, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3612, %r3613}, [%rd8];
	// inline asm
	prmt.b32 %r7373, %r3613, %r3612, %r7;
	// inline asm
	ld.local.u32 	%r3489, [%rd8];
	ld.local.u32 	%r3490, [%rd7+12];
	// inline asm
	prmt.b32 %r7366, %r3489, %r3490, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3614, %r3615}, [%rd7+8];
	// inline asm
	prmt.b32 %r7367, %r3615, %r3614, %r7;
	// inline asm
	ld.local.u32 	%r3497, [%rd7+8];
	ld.local.u32 	%r3498, [%rd7+4];
	// inline asm
	prmt.b32 %r7368, %r3497, %r3498, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3616, %r3617}, [%rd7];
	// inline asm
	prmt.b32 %r7369, %r3617, %r3616, %r7;
	// inline asm
	ld.local.u32 	%r3505, [%rd7];
	ld.local.u32 	%r3506, [%rd6+12];
	// inline asm
	prmt.b32 %r7362, %r3505, %r3506, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3618, %r3619}, [%rd6+8];
	// inline asm
	prmt.b32 %r7363, %r3619, %r3618, %r7;
	// inline asm
	ld.local.u32 	%r3513, [%rd6+8];
	ld.local.u32 	%r3514, [%rd6+4];
	// inline asm
	prmt.b32 %r7364, %r3513, %r3514, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3620, %r3621}, [%rd6];
	// inline asm
	prmt.b32 %r7365, %r3621, %r3620, %r7;
	// inline asm
	ld.local.u32 	%r3521, [%rd6];
	ld.local.u32 	%r3522, [%rd5+12];
	// inline asm
	prmt.b32 %r3520, %r3521, %r3522, %r7;
	// inline asm
	st.local.u32 	[%rd9+12], %r3520;
	ld.local.v2.u32 	{%r3622, %r3623}, [%rd5+8];
	// inline asm
	prmt.b32 %r3524, %r3623, %r3622, %r7;
	// inline asm
	st.local.u32 	[%rd9+8], %r3524;
	ld.local.u32 	%r3529, [%rd5+8];
	ld.local.u32 	%r3530, [%rd5+4];
	// inline asm
	prmt.b32 %r3528, %r3529, %r3530, %r7;
	// inline asm
	st.local.u32 	[%rd9+4], %r3528;
	ld.local.v2.u32 	{%r3624, %r3625}, [%rd5];
	// inline asm
	prmt.b32 %r3532, %r3625, %r3624, %r7;
	// inline asm
	st.local.u32 	[%rd9], %r3532;
	ld.local.u32 	%r3537, [%rd5];
	ld.local.u32 	%r3538, [%rd4+12];
	// inline asm
	prmt.b32 %r3536, %r3537, %r3538, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r3536;
	ld.local.v2.u32 	{%r3626, %r3627}, [%rd4+8];
	// inline asm
	prmt.b32 %r3540, %r3627, %r3626, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r3540;
	ld.local.u32 	%r3545, [%rd4+8];
	ld.local.u32 	%r3546, [%rd4+4];
	// inline asm
	prmt.b32 %r3544, %r3545, %r3546, %r7;
	// inline asm
	st.local.u32 	[%rd8+4], %r3544;
	ld.local.v2.u32 	{%r3628, %r3629}, [%rd4];
	// inline asm
	prmt.b32 %r3548, %r3629, %r3628, %r7;
	// inline asm
	st.local.u32 	[%rd8], %r3548;
	ld.local.u32 	%r3553, [%rd4];
	ld.local.u32 	%r3554, [%rd3+12];
	// inline asm
	prmt.b32 %r3552, %r3553, %r3554, %r7;
	// inline asm
	st.local.u32 	[%rd7+12], %r3552;
	ld.local.v2.u32 	{%r3630, %r3631}, [%rd3+8];
	// inline asm
	prmt.b32 %r3556, %r3631, %r3630, %r7;
	// inline asm
	st.local.u32 	[%rd7+8], %r3556;
	ld.local.u32 	%r3561, [%rd3+8];
	ld.local.u32 	%r3562, [%rd3+4];
	// inline asm
	prmt.b32 %r3560, %r3561, %r3562, %r7;
	// inline asm
	st.local.u32 	[%rd7+4], %r3560;
	ld.local.v2.u32 	{%r3632, %r3633}, [%rd3];
	// inline asm
	prmt.b32 %r3564, %r3633, %r3632, %r7;
	// inline asm
	st.local.u32 	[%rd7], %r3564;
	ld.local.u32 	%r3569, [%rd3];
	ld.local.u32 	%r3570, [%rd2+12];
	// inline asm
	prmt.b32 %r3568, %r3569, %r3570, %r7;
	// inline asm
	st.local.u32 	[%rd6+12], %r3568;
	ld.local.v2.u32 	{%r3634, %r3635}, [%rd2+8];
	// inline asm
	prmt.b32 %r3572, %r3635, %r3634, %r7;
	// inline asm
	st.local.u32 	[%rd6+8], %r3572;
	ld.local.u32 	%r3577, [%rd2+8];
	ld.local.u32 	%r3578, [%rd2+4];
	// inline asm
	prmt.b32 %r3576, %r3577, %r3578, %r7;
	// inline asm
	st.local.u32 	[%rd6+4], %r3576;
	ld.local.v2.u32 	{%r3636, %r3637}, [%rd2];
	// inline asm
	prmt.b32 %r3580, %r3637, %r3636, %r7;
	// inline asm
	st.local.u32 	[%rd6], %r3580;
	ld.local.u32 	%r3585, [%rd2];
	// inline asm
	prmt.b32 %r3584, %r3585, %r7360, %r7;
	// inline asm
	st.local.v4.u32 	[%rd5], {%r7360, %r7360, %r7360, %r3584};
	st.local.v4.u32 	[%rd4], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd3], {%r7360, %r7360, %r7360, %r7360};
	st.local.v2.u32 	[%rd2+8], {%r7360, %r7360};
	mov.u64 	%rd205, 0;
	st.local.u64 	[%rd2], %rd205;
	mov.u32 	%r7361, %r7360;
	bra.uni 	BB2_83;

BB2_65:
	setp.ne.s32	%p7, %r673, 31;
	mov.u32 	%r7363, %r7362;
	mov.u32 	%r7364, %r7362;
	mov.u32 	%r7365, %r7362;
	mov.u32 	%r7366, %r7362;
	mov.u32 	%r7367, %r7362;
	mov.u32 	%r7368, %r7362;
	mov.u32 	%r7369, %r7362;
	mov.u32 	%r7370, %r7362;
	mov.u32 	%r7371, %r7362;
	mov.u32 	%r7372, %r7362;
	mov.u32 	%r7373, %r7362;
	mov.u32 	%r7374, %r7362;
	mov.u32 	%r7375, %r7362;
	mov.u32 	%r7376, %r7362;
	mov.u32 	%r7377, %r7362;
	mov.u32 	%r7378, %r7362;
	mov.u32 	%r7379, %r7362;
	mov.u32 	%r7380, %r7362;
	mov.u32 	%r7381, %r7362;
	mov.u32 	%r7382, %r7362;
	mov.u32 	%r7383, %r7362;
	mov.u32 	%r7384, %r7362;
	mov.u32 	%r7385, %r7362;
	mov.u32 	%r7386, %r7362;
	mov.u32 	%r7387, %r7362;
	mov.u32 	%r7388, %r7362;
	mov.u32 	%r7389, %r7362;
	mov.u32 	%r7390, %r7362;
	mov.u32 	%r7391, %r7362;
	mov.u32 	%r7392, %r7362;
	mov.u32 	%r7393, %r7362;
	@%p7 bra 	BB2_89;

	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7390, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r814, %r815}, [%rd9+8];
	// inline asm
	prmt.b32 %r7391, %r815, %r814, %r7;
	// inline asm
	ld.local.u32 	%r689, [%rd9+8];
	ld.local.u32 	%r690, [%rd9+4];
	// inline asm
	prmt.b32 %r7392, %r689, %r690, %r7;
	// inline asm
	ld.local.v2.u32 	{%r816, %r817}, [%rd9];
	// inline asm
	prmt.b32 %r7393, %r817, %r816, %r7;
	// inline asm
	ld.local.u32 	%r697, [%rd9];
	ld.local.u32 	%r698, [%rd8+12];
	// inline asm
	prmt.b32 %r7386, %r697, %r698, %r7;
	// inline asm
	ld.local.v2.u32 	{%r818, %r819}, [%rd8+8];
	// inline asm
	prmt.b32 %r7387, %r819, %r818, %r7;
	// inline asm
	ld.local.u32 	%r705, [%rd8+8];
	ld.local.u32 	%r706, [%rd8+4];
	// inline asm
	prmt.b32 %r7388, %r705, %r706, %r7;
	// inline asm
	ld.local.v2.u32 	{%r820, %r821}, [%rd8];
	// inline asm
	prmt.b32 %r7389, %r821, %r820, %r7;
	// inline asm
	ld.local.u32 	%r713, [%rd8];
	ld.local.u32 	%r714, [%rd7+12];
	// inline asm
	prmt.b32 %r7382, %r713, %r714, %r7;
	// inline asm
	ld.local.v2.u32 	{%r822, %r823}, [%rd7+8];
	// inline asm
	prmt.b32 %r7383, %r823, %r822, %r7;
	// inline asm
	ld.local.u32 	%r721, [%rd7+8];
	ld.local.u32 	%r722, [%rd7+4];
	// inline asm
	prmt.b32 %r7384, %r721, %r722, %r7;
	// inline asm
	ld.local.v2.u32 	{%r824, %r825}, [%rd7];
	// inline asm
	prmt.b32 %r7385, %r825, %r824, %r7;
	// inline asm
	ld.local.u32 	%r729, [%rd7];
	ld.local.u32 	%r730, [%rd6+12];
	// inline asm
	prmt.b32 %r7378, %r729, %r730, %r7;
	// inline asm
	ld.local.v2.u32 	{%r826, %r827}, [%rd6+8];
	// inline asm
	prmt.b32 %r7379, %r827, %r826, %r7;
	// inline asm
	ld.local.u32 	%r737, [%rd6+8];
	ld.local.u32 	%r738, [%rd6+4];
	// inline asm
	prmt.b32 %r7380, %r737, %r738, %r7;
	// inline asm
	ld.local.v2.u32 	{%r828, %r829}, [%rd6];
	// inline asm
	prmt.b32 %r7381, %r829, %r828, %r7;
	// inline asm
	ld.local.u32 	%r745, [%rd6];
	ld.local.u32 	%r746, [%rd5+12];
	// inline asm
	prmt.b32 %r7374, %r745, %r746, %r7;
	// inline asm
	ld.local.v2.u32 	{%r830, %r831}, [%rd5+8];
	// inline asm
	prmt.b32 %r7375, %r831, %r830, %r7;
	// inline asm
	ld.local.u32 	%r753, [%rd5+8];
	ld.local.u32 	%r754, [%rd5+4];
	// inline asm
	prmt.b32 %r7376, %r753, %r754, %r7;
	// inline asm
	ld.local.v2.u32 	{%r832, %r833}, [%rd5];
	// inline asm
	prmt.b32 %r7377, %r833, %r832, %r7;
	// inline asm
	ld.local.u32 	%r761, [%rd5];
	ld.local.u32 	%r762, [%rd4+12];
	// inline asm
	prmt.b32 %r7370, %r761, %r762, %r7;
	// inline asm
	ld.local.v2.u32 	{%r834, %r835}, [%rd4+8];
	// inline asm
	prmt.b32 %r7371, %r835, %r834, %r7;
	// inline asm
	ld.local.u32 	%r769, [%rd4+8];
	ld.local.u32 	%r770, [%rd4+4];
	// inline asm
	prmt.b32 %r7372, %r769, %r770, %r7;
	// inline asm
	ld.local.v2.u32 	{%r836, %r837}, [%rd4];
	// inline asm
	prmt.b32 %r7373, %r837, %r836, %r7;
	// inline asm
	ld.local.u32 	%r777, [%rd4];
	ld.local.u32 	%r778, [%rd3+12];
	// inline asm
	prmt.b32 %r7366, %r777, %r778, %r7;
	// inline asm
	ld.local.v2.u32 	{%r838, %r839}, [%rd3+8];
	// inline asm
	prmt.b32 %r7367, %r839, %r838, %r7;
	// inline asm
	ld.local.u32 	%r785, [%rd3+8];
	ld.local.u32 	%r786, [%rd3+4];
	// inline asm
	prmt.b32 %r7368, %r785, %r786, %r7;
	// inline asm
	ld.local.v2.u32 	{%r840, %r841}, [%rd3];
	// inline asm
	prmt.b32 %r7369, %r841, %r840, %r7;
	// inline asm
	ld.local.u32 	%r793, [%rd3];
	ld.local.u32 	%r794, [%rd2+12];
	// inline asm
	prmt.b32 %r7362, %r793, %r794, %r7;
	// inline asm
	ld.local.v2.u32 	{%r842, %r843}, [%rd2+8];
	// inline asm
	prmt.b32 %r7363, %r843, %r842, %r7;
	// inline asm
	ld.local.u32 	%r801, [%rd2+8];
	ld.local.u32 	%r802, [%rd2+4];
	// inline asm
	prmt.b32 %r7364, %r801, %r802, %r7;
	// inline asm
	ld.local.v2.u32 	{%r844, %r845}, [%rd2];
	// inline asm
	prmt.b32 %r7365, %r845, %r844, %r7;
	// inline asm
	ld.local.u32 	%r809, [%rd2];
	// inline asm
	prmt.b32 %r808, %r809, %r7360, %r7;
	// inline asm
	st.local.v4.u32 	[%rd9], {%r7360, %r7360, %r7360, %r808};
	st.local.v4.u32 	[%rd8], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd7], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd6], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd5], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd4], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd3], {%r7360, %r7360, %r7360, %r7360};
	st.local.v2.u32 	[%rd2+8], {%r7360, %r7360};
	mov.u64 	%rd189, 0;
	st.local.u64 	[%rd2], %rd189;
	mov.u32 	%r7361, %r7360;
	bra.uni 	BB2_89;

BB2_2:
	add.u64 	%rd1227, %SP, 112;
	add.u64 	%rd1226, %SP, 96;
	add.u64 	%rd1225, %SP, 80;
	add.u64 	%rd1224, %SP, 64;
	add.u64 	%rd1223, %SP, 48;
	add.u64 	%rd1222, %SP, 32;
	add.u64 	%rd1221, %SP, 16;
	add.u64 	%rd1220, %SP, 0;
	ld.param.u32 	%r7357, [sha512_update_param_2];
	sub.s32 	%r640, %r7357, %r7358;
	// Callseq Start 6
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd107;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd1220;
	.param .b64 param2;
	st.param.b64	[param2+0], %rd1221;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd1222;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd1223;
	.param .b64 param5;
	st.param.b64	[param5+0], %rd1224;
	.param .b64 param6;
	st.param.b64	[param6+0], %rd1225;
	.param .b64 param7;
	st.param.b64	[param7+0], %rd1226;
	.param .b64 param8;
	st.param.b64	[param8+0], %rd1227;
	.param .b32 param9;
	st.param.b32	[param9+0], %r640;
	call.uni 
	sha512_update_128, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7, 
	param8, 
	param9
	);
	
	//{
	}// Callseq End 6
	ret;
}

.func sha512_update_global_swap(
	.param .b64 sha512_update_global_swap_param_0,
	.param .b64 sha512_update_global_swap_param_1,
	.param .b32 sha512_update_global_swap_param_2
)
{
	.local .align 16 .b8 	__local_depot3[128];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<50>;
	.reg .b32 	%r<7492>;
	.reg .b64 	%rd<1269>;


	mov.u64 	%SPL, __local_depot3;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd106, [sha512_update_global_swap_param_0];
	cvta.to.local.u64 	%rd1, %rd106;
	add.u64 	%rd108, %SP, 0;
	cvta.to.local.u64 	%rd2, %rd108;
	add.u64 	%rd109, %SP, 16;
	cvta.to.local.u64 	%rd3, %rd109;
	add.u64 	%rd110, %SP, 32;
	cvta.to.local.u64 	%rd4, %rd110;
	add.u64 	%rd111, %SP, 48;
	cvta.to.local.u64 	%rd5, %rd111;
	add.u64 	%rd112, %SP, 64;
	cvta.to.local.u64 	%rd6, %rd112;
	add.u64 	%rd113, %SP, 80;
	cvta.to.local.u64 	%rd7, %rd113;
	add.u64 	%rd114, %SP, 96;
	cvta.to.local.u64 	%rd8, %rd114;
	add.u64 	%rd115, %SP, 112;
	cvta.to.local.u64 	%rd9, %rd115;
	mov.u32 	%r7456, 0;
	mov.u32 	%r7457, %r7456;
	bra.uni 	BB3_1;

BB3_93:
	add.s64 	%rd1211, %rd47, %rd1253;
	st.local.u64 	[%rd1], %rd1211;
	add.s64 	%rd1212, %rd49, %rd1254;
	st.local.u64 	[%rd1+8], %rd1212;
	add.s64 	%rd1213, %rd48, %rd1255;
	st.local.u64 	[%rd1+16], %rd1213;
	add.s64 	%rd1214, %rd46, %rd1256;
	st.local.u64 	[%rd1+24], %rd1214;
	add.s64 	%rd1215, %rd42, %rd1257;
	st.local.u64 	[%rd1+32], %rd1215;
	add.s64 	%rd1216, %rd44, %rd1258;
	st.local.u64 	[%rd1+40], %rd1216;
	add.s64 	%rd1217, %rd43, %rd1259;
	st.local.u64 	[%rd1+48], %rd1217;
	add.s64 	%rd1218, %rd45, %rd1260;
	st.local.u64 	[%rd1+56], %rd1218;
	st.local.v2.u32 	[%rd1+64], {%r7462, %r7461};
	st.local.v2.u32 	[%rd1+72], {%r7460, %r7459};
	st.local.v2.u32 	[%rd1+80], {%r7466, %r7465};
	st.local.v2.u32 	[%rd1+88], {%r7464, %r7463};
	st.local.v2.u32 	[%rd1+96], {%r7470, %r7469};
	st.local.v2.u32 	[%rd1+104], {%r7468, %r7467};
	st.local.v2.u32 	[%rd1+112], {%r7474, %r7473};
	st.local.v2.u32 	[%rd1+120], {%r7472, %r7471};
	st.local.v2.u32 	[%rd1+128], {%r7478, %r7477};
	st.local.v2.u32 	[%rd1+136], {%r7476, %r7475};
	st.local.v2.u32 	[%rd1+144], {%r7482, %r7481};
	st.local.v2.u32 	[%rd1+152], {%r7480, %r7479};
	st.local.v2.u32 	[%rd1+160], {%r7486, %r7485};
	st.local.v2.u32 	[%rd1+168], {%r7484, %r7483};
	st.local.v2.u32 	[%rd1+176], {%r7490, %r7489};
	st.local.v2.u32 	[%rd1+184], {%r7488, %r7487};
	add.s32 	%r7456, %r7456, 128;
	add.s32 	%r7457, %r7457, 32;

BB3_1:
	ld.param.u32 	%r7454, [sha512_update_global_swap_param_2];
	add.s32 	%r7453, %r7454, -128;
	ld.param.u64 	%rd1219, [sha512_update_global_swap_param_1];
	mul.wide.s32 	%rd116, %r7457, 4;
	add.s64 	%rd117, %rd1219, %rd116;
	ld.global.u32 	%r4, [%rd117];
	st.local.u32 	[%rd2], %r4;
	add.s32 	%r577, %r7457, 1;
	mul.wide.s32 	%rd118, %r577, 4;
	add.s64 	%rd119, %rd1219, %rd118;
	ld.global.u32 	%r578, [%rd119];
	st.local.u32 	[%rd2+4], %r578;
	add.s32 	%r579, %r7457, 2;
	mul.wide.s32 	%rd120, %r579, 4;
	add.s64 	%rd121, %rd1219, %rd120;
	ld.global.u32 	%r580, [%rd121];
	st.local.u32 	[%rd2+8], %r580;
	add.s32 	%r581, %r7457, 3;
	mul.wide.s32 	%rd122, %r581, 4;
	add.s64 	%rd123, %rd1219, %rd122;
	ld.global.u32 	%r582, [%rd123];
	st.local.u32 	[%rd2+12], %r582;
	add.s32 	%r583, %r7457, 4;
	mul.wide.s32 	%rd124, %r583, 4;
	add.s64 	%rd125, %rd1219, %rd124;
	ld.global.u32 	%r584, [%rd125];
	st.local.u32 	[%rd3], %r584;
	add.s32 	%r585, %r7457, 5;
	mul.wide.s32 	%rd126, %r585, 4;
	add.s64 	%rd127, %rd1219, %rd126;
	ld.global.u32 	%r586, [%rd127];
	st.local.u32 	[%rd3+4], %r586;
	add.s32 	%r587, %r7457, 6;
	mul.wide.s32 	%rd128, %r587, 4;
	add.s64 	%rd129, %rd1219, %rd128;
	ld.global.u32 	%r588, [%rd129];
	st.local.u32 	[%rd3+8], %r588;
	add.s32 	%r589, %r7457, 7;
	mul.wide.s32 	%rd130, %r589, 4;
	add.s64 	%rd131, %rd1219, %rd130;
	ld.global.u32 	%r590, [%rd131];
	st.local.u32 	[%rd3+12], %r590;
	add.s32 	%r591, %r7457, 8;
	mul.wide.s32 	%rd132, %r591, 4;
	add.s64 	%rd133, %rd1219, %rd132;
	ld.global.u32 	%r592, [%rd133];
	st.local.u32 	[%rd4], %r592;
	add.s32 	%r593, %r7457, 9;
	mul.wide.s32 	%rd134, %r593, 4;
	add.s64 	%rd135, %rd1219, %rd134;
	ld.global.u32 	%r594, [%rd135];
	st.local.u32 	[%rd4+4], %r594;
	add.s32 	%r595, %r7457, 10;
	mul.wide.s32 	%rd136, %r595, 4;
	add.s64 	%rd137, %rd1219, %rd136;
	ld.global.u32 	%r596, [%rd137];
	st.local.u32 	[%rd4+8], %r596;
	add.s32 	%r597, %r7457, 11;
	mul.wide.s32 	%rd138, %r597, 4;
	add.s64 	%rd139, %rd1219, %rd138;
	ld.global.u32 	%r598, [%rd139];
	st.local.u32 	[%rd4+12], %r598;
	add.s32 	%r599, %r7457, 12;
	mul.wide.s32 	%rd140, %r599, 4;
	add.s64 	%rd141, %rd1219, %rd140;
	ld.global.u32 	%r600, [%rd141];
	st.local.u32 	[%rd5], %r600;
	add.s32 	%r601, %r7457, 13;
	mul.wide.s32 	%rd142, %r601, 4;
	add.s64 	%rd143, %rd1219, %rd142;
	ld.global.u32 	%r602, [%rd143];
	st.local.u32 	[%rd5+4], %r602;
	add.s32 	%r603, %r7457, 14;
	mul.wide.s32 	%rd144, %r603, 4;
	add.s64 	%rd145, %rd1219, %rd144;
	ld.global.u32 	%r604, [%rd145];
	st.local.u32 	[%rd5+8], %r604;
	add.s32 	%r605, %r7457, 15;
	mul.wide.s32 	%rd146, %r605, 4;
	add.s64 	%rd147, %rd1219, %rd146;
	ld.global.u32 	%r606, [%rd147];
	st.local.u32 	[%rd5+12], %r606;
	add.s32 	%r607, %r7457, 16;
	mul.wide.s32 	%rd148, %r607, 4;
	add.s64 	%rd149, %rd1219, %rd148;
	ld.global.u32 	%r608, [%rd149];
	st.local.u32 	[%rd6], %r608;
	add.s32 	%r609, %r7457, 17;
	mul.wide.s32 	%rd150, %r609, 4;
	add.s64 	%rd151, %rd1219, %rd150;
	ld.global.u32 	%r610, [%rd151];
	st.local.u32 	[%rd6+4], %r610;
	add.s32 	%r611, %r7457, 18;
	mul.wide.s32 	%rd152, %r611, 4;
	add.s64 	%rd153, %rd1219, %rd152;
	ld.global.u32 	%r612, [%rd153];
	st.local.u32 	[%rd6+8], %r612;
	add.s32 	%r613, %r7457, 19;
	mul.wide.s32 	%rd154, %r613, 4;
	add.s64 	%rd155, %rd1219, %rd154;
	ld.global.u32 	%r614, [%rd155];
	st.local.u32 	[%rd6+12], %r614;
	add.s32 	%r615, %r7457, 20;
	mul.wide.s32 	%rd156, %r615, 4;
	add.s64 	%rd157, %rd1219, %rd156;
	ld.global.u32 	%r616, [%rd157];
	st.local.u32 	[%rd7], %r616;
	add.s32 	%r617, %r7457, 21;
	mul.wide.s32 	%rd158, %r617, 4;
	add.s64 	%rd159, %rd1219, %rd158;
	ld.global.u32 	%r618, [%rd159];
	st.local.u32 	[%rd7+4], %r618;
	add.s32 	%r619, %r7457, 22;
	mul.wide.s32 	%rd160, %r619, 4;
	add.s64 	%rd161, %rd1219, %rd160;
	ld.global.u32 	%r620, [%rd161];
	st.local.u32 	[%rd7+8], %r620;
	add.s32 	%r621, %r7457, 23;
	mul.wide.s32 	%rd162, %r621, 4;
	add.s64 	%rd163, %rd1219, %rd162;
	ld.global.u32 	%r622, [%rd163];
	st.local.u32 	[%rd7+12], %r622;
	add.s32 	%r623, %r7457, 24;
	mul.wide.s32 	%rd164, %r623, 4;
	add.s64 	%rd165, %rd1219, %rd164;
	ld.global.u32 	%r624, [%rd165];
	st.local.u32 	[%rd8], %r624;
	add.s32 	%r625, %r7457, 25;
	mul.wide.s32 	%rd166, %r625, 4;
	add.s64 	%rd167, %rd1219, %rd166;
	ld.global.u32 	%r626, [%rd167];
	st.local.u32 	[%rd8+4], %r626;
	add.s32 	%r627, %r7457, 26;
	mul.wide.s32 	%rd168, %r627, 4;
	add.s64 	%rd169, %rd1219, %rd168;
	ld.global.u32 	%r628, [%rd169];
	st.local.u32 	[%rd8+8], %r628;
	add.s32 	%r629, %r7457, 27;
	mul.wide.s32 	%rd170, %r629, 4;
	add.s64 	%rd171, %rd1219, %rd170;
	ld.global.u32 	%r630, [%rd171];
	st.local.u32 	[%rd8+12], %r630;
	add.s32 	%r631, %r7457, 28;
	mul.wide.s32 	%rd172, %r631, 4;
	add.s64 	%rd173, %rd1219, %rd172;
	ld.global.u32 	%r632, [%rd173];
	st.local.u32 	[%rd9], %r632;
	add.s32 	%r633, %r7457, 29;
	mul.wide.s32 	%rd174, %r633, 4;
	add.s64 	%rd175, %rd1219, %rd174;
	ld.global.u32 	%r634, [%rd175];
	st.local.u32 	[%rd9+4], %r634;
	add.s32 	%r635, %r7457, 30;
	mul.wide.s32 	%rd176, %r635, 4;
	add.s64 	%rd177, %rd1219, %rd176;
	ld.global.u32 	%r636, [%rd177];
	st.local.u32 	[%rd9+8], %r636;
	add.s32 	%r637, %r7457, 31;
	mul.wide.s32 	%rd178, %r637, 4;
	add.s64 	%rd179, %rd1219, %rd178;
	ld.global.u32 	%r638, [%rd179];
	st.local.u32 	[%rd9+12], %r638;
	setp.lt.s32	%p1, %r7456, %r7453;
	@%p1 bra 	BB3_3;
	bra.uni 	BB3_2;

BB3_3:
	// inline asm
	prmt.b32 %r704, %r4, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd2], %r704;
	ld.local.u32 	%r707, [%rd2+4];
	// inline asm
	prmt.b32 %r706, %r707, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd2+4], %r706;
	ld.local.u32 	%r709, [%rd2+8];
	// inline asm
	prmt.b32 %r708, %r709, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd2+8], %r708;
	ld.local.u32 	%r711, [%rd2+12];
	// inline asm
	prmt.b32 %r710, %r711, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd2+12], %r710;
	ld.local.u32 	%r713, [%rd3];
	// inline asm
	prmt.b32 %r712, %r713, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd3], %r712;
	ld.local.u32 	%r715, [%rd3+4];
	// inline asm
	prmt.b32 %r714, %r715, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd3+4], %r714;
	ld.local.u32 	%r717, [%rd3+8];
	// inline asm
	prmt.b32 %r716, %r717, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd3+8], %r716;
	ld.local.u32 	%r719, [%rd3+12];
	// inline asm
	prmt.b32 %r718, %r719, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd3+12], %r718;
	ld.local.u32 	%r721, [%rd4];
	// inline asm
	prmt.b32 %r720, %r721, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd4], %r720;
	ld.local.u32 	%r723, [%rd4+4];
	// inline asm
	prmt.b32 %r722, %r723, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd4+4], %r722;
	ld.local.u32 	%r725, [%rd4+8];
	// inline asm
	prmt.b32 %r724, %r725, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd4+8], %r724;
	ld.local.u32 	%r727, [%rd4+12];
	// inline asm
	prmt.b32 %r726, %r727, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd4+12], %r726;
	ld.local.u32 	%r729, [%rd5];
	// inline asm
	prmt.b32 %r728, %r729, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd5], %r728;
	ld.local.u32 	%r731, [%rd5+4];
	// inline asm
	prmt.b32 %r730, %r731, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd5+4], %r730;
	ld.local.u32 	%r733, [%rd5+8];
	// inline asm
	prmt.b32 %r732, %r733, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd5+8], %r732;
	ld.local.u32 	%r735, [%rd5+12];
	// inline asm
	prmt.b32 %r734, %r735, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd5+12], %r734;
	ld.local.u32 	%r737, [%rd6];
	// inline asm
	prmt.b32 %r736, %r737, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd6], %r736;
	ld.local.u32 	%r739, [%rd6+4];
	// inline asm
	prmt.b32 %r738, %r739, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd6+4], %r738;
	ld.local.u32 	%r741, [%rd6+8];
	// inline asm
	prmt.b32 %r740, %r741, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd6+8], %r740;
	ld.local.u32 	%r743, [%rd6+12];
	// inline asm
	prmt.b32 %r742, %r743, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd6+12], %r742;
	ld.local.u32 	%r745, [%rd7];
	// inline asm
	prmt.b32 %r744, %r745, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd7], %r744;
	ld.local.u32 	%r747, [%rd7+4];
	// inline asm
	prmt.b32 %r746, %r747, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd7+4], %r746;
	ld.local.u32 	%r749, [%rd7+8];
	// inline asm
	prmt.b32 %r748, %r749, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd7+8], %r748;
	ld.local.u32 	%r751, [%rd7+12];
	// inline asm
	prmt.b32 %r750, %r751, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd7+12], %r750;
	ld.local.u32 	%r753, [%rd8];
	// inline asm
	prmt.b32 %r752, %r753, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd8], %r752;
	ld.local.u32 	%r755, [%rd8+4];
	// inline asm
	prmt.b32 %r754, %r755, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd8+4], %r754;
	ld.local.u32 	%r757, [%rd8+8];
	// inline asm
	prmt.b32 %r756, %r757, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd8+8], %r756;
	ld.local.u32 	%r759, [%rd8+12];
	// inline asm
	prmt.b32 %r758, %r759, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd8+12], %r758;
	ld.local.u32 	%r761, [%rd9];
	// inline asm
	prmt.b32 %r760, %r761, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd9], %r760;
	ld.local.u32 	%r763, [%rd9+4];
	// inline asm
	prmt.b32 %r762, %r763, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd9+4], %r762;
	ld.local.u32 	%r765, [%rd9+8];
	// inline asm
	prmt.b32 %r764, %r765, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd9+8], %r764;
	ld.local.u32 	%r767, [%rd9+12];
	// inline asm
	prmt.b32 %r766, %r767, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd9+12], %r766;
	ld.local.u32 	%r769, [%rd1+192];
	add.s32 	%r770, %r769, 128;
	st.local.u32 	[%rd1+192], %r770;
	bfe.u32 	%r768, %r769, 2, 5;
	and.b32  	%r771, %r769, 3;
	shl.b32 	%r772, %r771, 2;
	mov.u32 	%r773, 1985229328;
	shr.u32 	%r774, %r773, %r772;
	and.b32  	%r6, %r774, 65535;
	setp.gt.s32	%p2, %r768, 15;
	@%p2 bra 	BB3_36;

	setp.gt.s32	%p26, %r768, 7;
	@%p26 bra 	BB3_21;

	setp.gt.s32	%p38, %r768, 3;
	@%p38 bra 	BB3_14;

	setp.gt.s32	%p44, %r768, 1;
	@%p44 bra 	BB3_10;

	setp.eq.s32	%p47, %r768, 0;
	@%p47 bra 	BB3_88;
	bra.uni 	BB3_8;

BB3_88:
	mov.u32 	%r7459, 0;
	// inline asm
	prmt.b32 %r7462, %r7459, %r766, %r6;
	// inline asm
	ld.local.v2.u32 	{%r6518, %r6519}, [%rd9+8];
	// inline asm
	prmt.b32 %r6359, %r6519, %r6518, %r6;
	// inline asm
	st.local.u32 	[%rd9+12], %r6359;
	ld.local.u32 	%r6364, [%rd9+8];
	ld.local.u32 	%r6365, [%rd9+4];
	// inline asm
	prmt.b32 %r6363, %r6364, %r6365, %r6;
	// inline asm
	st.local.u32 	[%rd9+8], %r6363;
	ld.local.v2.u32 	{%r6520, %r6521}, [%rd9];
	// inline asm
	prmt.b32 %r6367, %r6521, %r6520, %r6;
	// inline asm
	st.local.u32 	[%rd9+4], %r6367;
	ld.local.u32 	%r6372, [%rd9];
	ld.local.u32 	%r6373, [%rd8+12];
	// inline asm
	prmt.b32 %r6371, %r6372, %r6373, %r6;
	// inline asm
	st.local.u32 	[%rd9], %r6371;
	ld.local.v2.u32 	{%r6522, %r6523}, [%rd8+8];
	// inline asm
	prmt.b32 %r6375, %r6523, %r6522, %r6;
	// inline asm
	st.local.u32 	[%rd8+12], %r6375;
	ld.local.u32 	%r6380, [%rd8+8];
	ld.local.u32 	%r6381, [%rd8+4];
	// inline asm
	prmt.b32 %r6379, %r6380, %r6381, %r6;
	// inline asm
	st.local.u32 	[%rd8+8], %r6379;
	ld.local.v2.u32 	{%r6524, %r6525}, [%rd8];
	// inline asm
	prmt.b32 %r6383, %r6525, %r6524, %r6;
	// inline asm
	st.local.u32 	[%rd8+4], %r6383;
	ld.local.u32 	%r6388, [%rd8];
	ld.local.u32 	%r6389, [%rd7+12];
	// inline asm
	prmt.b32 %r6387, %r6388, %r6389, %r6;
	// inline asm
	st.local.u32 	[%rd8], %r6387;
	ld.local.v2.u32 	{%r6526, %r6527}, [%rd7+8];
	// inline asm
	prmt.b32 %r6391, %r6527, %r6526, %r6;
	// inline asm
	st.local.u32 	[%rd7+12], %r6391;
	ld.local.u32 	%r6396, [%rd7+8];
	ld.local.u32 	%r6397, [%rd7+4];
	// inline asm
	prmt.b32 %r6395, %r6396, %r6397, %r6;
	// inline asm
	st.local.u32 	[%rd7+8], %r6395;
	ld.local.v2.u32 	{%r6528, %r6529}, [%rd7];
	// inline asm
	prmt.b32 %r6399, %r6529, %r6528, %r6;
	// inline asm
	st.local.u32 	[%rd7+4], %r6399;
	ld.local.u32 	%r6404, [%rd7];
	ld.local.u32 	%r6405, [%rd6+12];
	// inline asm
	prmt.b32 %r6403, %r6404, %r6405, %r6;
	// inline asm
	st.local.u32 	[%rd7], %r6403;
	ld.local.v2.u32 	{%r6530, %r6531}, [%rd6+8];
	// inline asm
	prmt.b32 %r6407, %r6531, %r6530, %r6;
	// inline asm
	st.local.u32 	[%rd6+12], %r6407;
	ld.local.u32 	%r6412, [%rd6+8];
	ld.local.u32 	%r6413, [%rd6+4];
	// inline asm
	prmt.b32 %r6411, %r6412, %r6413, %r6;
	// inline asm
	st.local.u32 	[%rd6+8], %r6411;
	ld.local.v2.u32 	{%r6532, %r6533}, [%rd6];
	// inline asm
	prmt.b32 %r6415, %r6533, %r6532, %r6;
	// inline asm
	st.local.u32 	[%rd6+4], %r6415;
	ld.local.u32 	%r6420, [%rd6];
	ld.local.u32 	%r6421, [%rd5+12];
	// inline asm
	prmt.b32 %r6419, %r6420, %r6421, %r6;
	// inline asm
	st.local.u32 	[%rd6], %r6419;
	ld.local.v2.u32 	{%r6534, %r6535}, [%rd5+8];
	// inline asm
	prmt.b32 %r6423, %r6535, %r6534, %r6;
	// inline asm
	st.local.u32 	[%rd5+12], %r6423;
	ld.local.u32 	%r6428, [%rd5+8];
	ld.local.u32 	%r6429, [%rd5+4];
	// inline asm
	prmt.b32 %r6427, %r6428, %r6429, %r6;
	// inline asm
	st.local.u32 	[%rd5+8], %r6427;
	ld.local.v2.u32 	{%r6536, %r6537}, [%rd5];
	// inline asm
	prmt.b32 %r6431, %r6537, %r6536, %r6;
	// inline asm
	st.local.u32 	[%rd5+4], %r6431;
	ld.local.u32 	%r6436, [%rd5];
	ld.local.u32 	%r6437, [%rd4+12];
	// inline asm
	prmt.b32 %r6435, %r6436, %r6437, %r6;
	// inline asm
	st.local.u32 	[%rd5], %r6435;
	ld.local.v2.u32 	{%r6538, %r6539}, [%rd4+8];
	// inline asm
	prmt.b32 %r6439, %r6539, %r6538, %r6;
	// inline asm
	st.local.u32 	[%rd4+12], %r6439;
	ld.local.u32 	%r6444, [%rd4+8];
	ld.local.u32 	%r6445, [%rd4+4];
	// inline asm
	prmt.b32 %r6443, %r6444, %r6445, %r6;
	// inline asm
	st.local.u32 	[%rd4+8], %r6443;
	ld.local.v2.u32 	{%r6540, %r6541}, [%rd4];
	// inline asm
	prmt.b32 %r6447, %r6541, %r6540, %r6;
	// inline asm
	st.local.u32 	[%rd4+4], %r6447;
	ld.local.u32 	%r6452, [%rd4];
	ld.local.u32 	%r6453, [%rd3+12];
	// inline asm
	prmt.b32 %r6451, %r6452, %r6453, %r6;
	// inline asm
	st.local.u32 	[%rd4], %r6451;
	ld.local.v2.u32 	{%r6542, %r6543}, [%rd3+8];
	// inline asm
	prmt.b32 %r6455, %r6543, %r6542, %r6;
	// inline asm
	st.local.u32 	[%rd3+12], %r6455;
	ld.local.u32 	%r6460, [%rd3+8];
	ld.local.u32 	%r6461, [%rd3+4];
	// inline asm
	prmt.b32 %r6459, %r6460, %r6461, %r6;
	// inline asm
	st.local.u32 	[%rd3+8], %r6459;
	ld.local.v2.u32 	{%r6544, %r6545}, [%rd3];
	// inline asm
	prmt.b32 %r6463, %r6545, %r6544, %r6;
	// inline asm
	st.local.u32 	[%rd3+4], %r6463;
	ld.local.u32 	%r6468, [%rd3];
	ld.local.u32 	%r6469, [%rd2+12];
	// inline asm
	prmt.b32 %r6467, %r6468, %r6469, %r6;
	// inline asm
	st.local.u32 	[%rd3], %r6467;
	ld.local.v2.u32 	{%r6546, %r6547}, [%rd2+8];
	// inline asm
	prmt.b32 %r6471, %r6547, %r6546, %r6;
	// inline asm
	st.local.u32 	[%rd2+12], %r6471;
	ld.local.u32 	%r6476, [%rd2+8];
	ld.local.u32 	%r6477, [%rd2+4];
	// inline asm
	prmt.b32 %r6475, %r6476, %r6477, %r6;
	// inline asm
	st.local.u32 	[%rd2+8], %r6475;
	ld.local.v2.u32 	{%r6548, %r6549}, [%rd2];
	// inline asm
	prmt.b32 %r6479, %r6549, %r6548, %r6;
	// inline asm
	st.local.u32 	[%rd2+4], %r6479;
	ld.local.u32 	%r6484, [%rd2];
	// inline asm
	prmt.b32 %r7458, %r6484, %r7459, %r6;
	// inline asm
	st.local.u32 	[%rd2], %r7458;
	mov.u32 	%r7460, %r7459;
	mov.u32 	%r7461, %r7459;
	bra.uni 	BB3_90;

BB3_36:
	setp.gt.s32	%p3, %r768, 23;
	@%p3 bra 	BB3_52;

	setp.gt.s32	%p15, %r768, 19;
	@%p15 bra 	BB3_45;

	setp.gt.s32	%p21, %r768, 17;
	@%p21 bra 	BB3_42;

	setp.eq.s32	%p24, %r768, 16;
	@%p24 bra 	BB3_74;
	bra.uni 	BB3_40;

BB3_74:
	mov.u32 	%r7458, 0;
	// inline asm
	prmt.b32 %r7478, %r7458, %r766, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3503, %r3504}, [%rd9+8];
	// inline asm
	prmt.b32 %r7471, %r3504, %r3503, %r6;
	// inline asm
	ld.local.u32 	%r3364, [%rd9+8];
	ld.local.u32 	%r3365, [%rd9+4];
	// inline asm
	prmt.b32 %r7472, %r3364, %r3365, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3505, %r3506}, [%rd9];
	// inline asm
	prmt.b32 %r7473, %r3506, %r3505, %r6;
	// inline asm
	ld.local.u32 	%r3372, [%rd9];
	ld.local.u32 	%r3373, [%rd8+12];
	// inline asm
	prmt.b32 %r7474, %r3372, %r3373, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3507, %r3508}, [%rd8+8];
	// inline asm
	prmt.b32 %r7467, %r3508, %r3507, %r6;
	// inline asm
	ld.local.u32 	%r3380, [%rd8+8];
	ld.local.u32 	%r3381, [%rd8+4];
	// inline asm
	prmt.b32 %r7468, %r3380, %r3381, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3509, %r3510}, [%rd8];
	// inline asm
	prmt.b32 %r7469, %r3510, %r3509, %r6;
	// inline asm
	ld.local.u32 	%r3388, [%rd8];
	ld.local.u32 	%r3389, [%rd7+12];
	// inline asm
	prmt.b32 %r7470, %r3388, %r3389, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3511, %r3512}, [%rd7+8];
	// inline asm
	prmt.b32 %r7463, %r3512, %r3511, %r6;
	// inline asm
	ld.local.u32 	%r3396, [%rd7+8];
	ld.local.u32 	%r3397, [%rd7+4];
	// inline asm
	prmt.b32 %r7464, %r3396, %r3397, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3513, %r3514}, [%rd7];
	// inline asm
	prmt.b32 %r7465, %r3514, %r3513, %r6;
	// inline asm
	ld.local.u32 	%r3404, [%rd7];
	ld.local.u32 	%r3405, [%rd6+12];
	// inline asm
	prmt.b32 %r7466, %r3404, %r3405, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3515, %r3516}, [%rd6+8];
	// inline asm
	prmt.b32 %r7459, %r3516, %r3515, %r6;
	// inline asm
	ld.local.u32 	%r3412, [%rd6+8];
	ld.local.u32 	%r3413, [%rd6+4];
	// inline asm
	prmt.b32 %r7460, %r3412, %r3413, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3517, %r3518}, [%rd6];
	// inline asm
	prmt.b32 %r7461, %r3518, %r3517, %r6;
	// inline asm
	ld.local.u32 	%r3420, [%rd6];
	ld.local.u32 	%r3421, [%rd5+12];
	// inline asm
	prmt.b32 %r7462, %r3420, %r3421, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3519, %r3520}, [%rd5+8];
	// inline asm
	prmt.b32 %r3423, %r3520, %r3519, %r6;
	// inline asm
	st.local.u32 	[%rd9+12], %r3423;
	ld.local.u32 	%r3428, [%rd5+8];
	ld.local.u32 	%r3429, [%rd5+4];
	// inline asm
	prmt.b32 %r3427, %r3428, %r3429, %r6;
	// inline asm
	st.local.u32 	[%rd9+8], %r3427;
	ld.local.v2.u32 	{%r3521, %r3522}, [%rd5];
	// inline asm
	prmt.b32 %r3431, %r3522, %r3521, %r6;
	// inline asm
	st.local.u32 	[%rd9+4], %r3431;
	ld.local.u32 	%r3436, [%rd5];
	ld.local.u32 	%r3437, [%rd4+12];
	// inline asm
	prmt.b32 %r3435, %r3436, %r3437, %r6;
	// inline asm
	st.local.u32 	[%rd9], %r3435;
	ld.local.v2.u32 	{%r3523, %r3524}, [%rd4+8];
	// inline asm
	prmt.b32 %r3439, %r3524, %r3523, %r6;
	// inline asm
	st.local.u32 	[%rd8+12], %r3439;
	ld.local.u32 	%r3444, [%rd4+8];
	ld.local.u32 	%r3445, [%rd4+4];
	// inline asm
	prmt.b32 %r3443, %r3444, %r3445, %r6;
	// inline asm
	st.local.u32 	[%rd8+8], %r3443;
	ld.local.v2.u32 	{%r3525, %r3526}, [%rd4];
	// inline asm
	prmt.b32 %r3447, %r3526, %r3525, %r6;
	// inline asm
	st.local.u32 	[%rd8+4], %r3447;
	ld.local.u32 	%r3452, [%rd4];
	ld.local.u32 	%r3453, [%rd3+12];
	// inline asm
	prmt.b32 %r3451, %r3452, %r3453, %r6;
	// inline asm
	st.local.u32 	[%rd8], %r3451;
	ld.local.v2.u32 	{%r3527, %r3528}, [%rd3+8];
	// inline asm
	prmt.b32 %r3455, %r3528, %r3527, %r6;
	// inline asm
	st.local.u32 	[%rd7+12], %r3455;
	ld.local.u32 	%r3460, [%rd3+8];
	ld.local.u32 	%r3461, [%rd3+4];
	// inline asm
	prmt.b32 %r3459, %r3460, %r3461, %r6;
	// inline asm
	st.local.u32 	[%rd7+8], %r3459;
	ld.local.v2.u32 	{%r3529, %r3530}, [%rd3];
	// inline asm
	prmt.b32 %r3463, %r3530, %r3529, %r6;
	// inline asm
	st.local.u32 	[%rd7+4], %r3463;
	ld.local.u32 	%r3468, [%rd3];
	ld.local.u32 	%r3469, [%rd2+12];
	// inline asm
	prmt.b32 %r3467, %r3468, %r3469, %r6;
	// inline asm
	st.local.u32 	[%rd7], %r3467;
	ld.local.v2.u32 	{%r3531, %r3532}, [%rd2+8];
	// inline asm
	prmt.b32 %r3471, %r3532, %r3531, %r6;
	// inline asm
	st.local.u32 	[%rd6+12], %r3471;
	ld.local.u32 	%r3476, [%rd2+8];
	ld.local.u32 	%r3477, [%rd2+4];
	// inline asm
	prmt.b32 %r3475, %r3476, %r3477, %r6;
	// inline asm
	st.local.u32 	[%rd6+8], %r3475;
	ld.local.v2.u32 	{%r3533, %r3534}, [%rd2];
	// inline asm
	prmt.b32 %r3479, %r3534, %r3533, %r6;
	// inline asm
	st.local.u32 	[%rd6+4], %r3479;
	ld.local.u32 	%r3484, [%rd2];
	// inline asm
	prmt.b32 %r3483, %r3484, %r7458, %r6;
	// inline asm
	st.local.u32 	[%rd6], %r3483;
	st.local.v4.u32 	[%rd5], {%r7458, %r7458, %r7458, %r7458};
	st.local.v4.u32 	[%rd4], {%r7458, %r7458, %r7458, %r7458};
	st.local.v4.u32 	[%rd3], {%r7458, %r7458, %r7458, %r7458};
	st.local.v2.u32 	[%rd2+8], {%r7458, %r7458};
	mov.u64 	%rd203, 0;
	st.local.u64 	[%rd2], %rd203;
	mov.u32 	%r7475, %r7458;
	mov.u32 	%r7476, %r7458;
	mov.u32 	%r7477, %r7458;
	bra.uni 	BB3_84;

BB3_21:
	setp.gt.s32	%p27, %r768, 11;
	@%p27 bra 	BB3_29;

	setp.gt.s32	%p33, %r768, 9;
	@%p33 bra 	BB3_26;

	setp.eq.s32	%p36, %r768, 8;
	@%p36 bra 	BB3_78;
	bra.uni 	BB3_24;

BB3_78:
	mov.u32 	%r7458, 0;
	// inline asm
	prmt.b32 %r7470, %r7458, %r766, %r6;
	// inline asm
	ld.local.v2.u32 	{%r4979, %r4980}, [%rd9+8];
	// inline asm
	prmt.b32 %r7463, %r4980, %r4979, %r6;
	// inline asm
	ld.local.u32 	%r4832, [%rd9+8];
	ld.local.u32 	%r4833, [%rd9+4];
	// inline asm
	prmt.b32 %r7464, %r4832, %r4833, %r6;
	// inline asm
	ld.local.v2.u32 	{%r4981, %r4982}, [%rd9];
	// inline asm
	prmt.b32 %r7465, %r4982, %r4981, %r6;
	// inline asm
	ld.local.u32 	%r4840, [%rd9];
	ld.local.u32 	%r4841, [%rd8+12];
	// inline asm
	prmt.b32 %r7466, %r4840, %r4841, %r6;
	// inline asm
	ld.local.v2.u32 	{%r4983, %r4984}, [%rd8+8];
	// inline asm
	prmt.b32 %r7459, %r4984, %r4983, %r6;
	// inline asm
	ld.local.u32 	%r4848, [%rd8+8];
	ld.local.u32 	%r4849, [%rd8+4];
	// inline asm
	prmt.b32 %r7460, %r4848, %r4849, %r6;
	// inline asm
	ld.local.v2.u32 	{%r4985, %r4986}, [%rd8];
	// inline asm
	prmt.b32 %r7461, %r4986, %r4985, %r6;
	// inline asm
	ld.local.u32 	%r4856, [%rd8];
	ld.local.u32 	%r4857, [%rd7+12];
	// inline asm
	prmt.b32 %r7462, %r4856, %r4857, %r6;
	// inline asm
	ld.local.v2.u32 	{%r4987, %r4988}, [%rd7+8];
	// inline asm
	prmt.b32 %r4859, %r4988, %r4987, %r6;
	// inline asm
	st.local.u32 	[%rd9+12], %r4859;
	ld.local.u32 	%r4864, [%rd7+8];
	ld.local.u32 	%r4865, [%rd7+4];
	// inline asm
	prmt.b32 %r4863, %r4864, %r4865, %r6;
	// inline asm
	st.local.u32 	[%rd9+8], %r4863;
	ld.local.v2.u32 	{%r4989, %r4990}, [%rd7];
	// inline asm
	prmt.b32 %r4867, %r4990, %r4989, %r6;
	// inline asm
	st.local.u32 	[%rd9+4], %r4867;
	ld.local.u32 	%r4872, [%rd7];
	ld.local.u32 	%r4873, [%rd6+12];
	// inline asm
	prmt.b32 %r4871, %r4872, %r4873, %r6;
	// inline asm
	st.local.u32 	[%rd9], %r4871;
	ld.local.v2.u32 	{%r4991, %r4992}, [%rd6+8];
	// inline asm
	prmt.b32 %r4875, %r4992, %r4991, %r6;
	// inline asm
	st.local.u32 	[%rd8+12], %r4875;
	ld.local.u32 	%r4880, [%rd6+8];
	ld.local.u32 	%r4881, [%rd6+4];
	// inline asm
	prmt.b32 %r4879, %r4880, %r4881, %r6;
	// inline asm
	st.local.u32 	[%rd8+8], %r4879;
	ld.local.v2.u32 	{%r4993, %r4994}, [%rd6];
	// inline asm
	prmt.b32 %r4883, %r4994, %r4993, %r6;
	// inline asm
	st.local.u32 	[%rd8+4], %r4883;
	ld.local.u32 	%r4888, [%rd6];
	ld.local.u32 	%r4889, [%rd5+12];
	// inline asm
	prmt.b32 %r4887, %r4888, %r4889, %r6;
	// inline asm
	st.local.u32 	[%rd8], %r4887;
	ld.local.v2.u32 	{%r4995, %r4996}, [%rd5+8];
	// inline asm
	prmt.b32 %r4891, %r4996, %r4995, %r6;
	// inline asm
	st.local.u32 	[%rd7+12], %r4891;
	ld.local.u32 	%r4896, [%rd5+8];
	ld.local.u32 	%r4897, [%rd5+4];
	// inline asm
	prmt.b32 %r4895, %r4896, %r4897, %r6;
	// inline asm
	st.local.u32 	[%rd7+8], %r4895;
	ld.local.v2.u32 	{%r4997, %r4998}, [%rd5];
	// inline asm
	prmt.b32 %r4899, %r4998, %r4997, %r6;
	// inline asm
	st.local.u32 	[%rd7+4], %r4899;
	ld.local.u32 	%r4904, [%rd5];
	ld.local.u32 	%r4905, [%rd4+12];
	// inline asm
	prmt.b32 %r4903, %r4904, %r4905, %r6;
	// inline asm
	st.local.u32 	[%rd7], %r4903;
	ld.local.v2.u32 	{%r4999, %r5000}, [%rd4+8];
	// inline asm
	prmt.b32 %r4907, %r5000, %r4999, %r6;
	// inline asm
	st.local.u32 	[%rd6+12], %r4907;
	ld.local.u32 	%r4912, [%rd4+8];
	ld.local.u32 	%r4913, [%rd4+4];
	// inline asm
	prmt.b32 %r4911, %r4912, %r4913, %r6;
	// inline asm
	st.local.u32 	[%rd6+8], %r4911;
	ld.local.v2.u32 	{%r5001, %r5002}, [%rd4];
	// inline asm
	prmt.b32 %r4915, %r5002, %r5001, %r6;
	// inline asm
	st.local.u32 	[%rd6+4], %r4915;
	ld.local.u32 	%r4920, [%rd4];
	ld.local.u32 	%r4921, [%rd3+12];
	// inline asm
	prmt.b32 %r4919, %r4920, %r4921, %r6;
	// inline asm
	st.local.u32 	[%rd6], %r4919;
	ld.local.v2.u32 	{%r5003, %r5004}, [%rd3+8];
	// inline asm
	prmt.b32 %r4923, %r5004, %r5003, %r6;
	// inline asm
	st.local.u32 	[%rd5+12], %r4923;
	ld.local.u32 	%r4928, [%rd3+8];
	ld.local.u32 	%r4929, [%rd3+4];
	// inline asm
	prmt.b32 %r4927, %r4928, %r4929, %r6;
	// inline asm
	st.local.u32 	[%rd5+8], %r4927;
	ld.local.v2.u32 	{%r5005, %r5006}, [%rd3];
	// inline asm
	prmt.b32 %r4931, %r5006, %r5005, %r6;
	// inline asm
	st.local.u32 	[%rd5+4], %r4931;
	ld.local.u32 	%r4936, [%rd3];
	ld.local.u32 	%r4937, [%rd2+12];
	// inline asm
	prmt.b32 %r4935, %r4936, %r4937, %r6;
	// inline asm
	st.local.u32 	[%rd5], %r4935;
	ld.local.v2.u32 	{%r5007, %r5008}, [%rd2+8];
	// inline asm
	prmt.b32 %r4939, %r5008, %r5007, %r6;
	// inline asm
	st.local.u32 	[%rd4+12], %r4939;
	ld.local.u32 	%r4944, [%rd2+8];
	ld.local.u32 	%r4945, [%rd2+4];
	// inline asm
	prmt.b32 %r4943, %r4944, %r4945, %r6;
	// inline asm
	st.local.u32 	[%rd4+8], %r4943;
	ld.local.v2.u32 	{%r5009, %r5010}, [%rd2];
	// inline asm
	prmt.b32 %r4947, %r5010, %r5009, %r6;
	// inline asm
	st.local.u32 	[%rd4+4], %r4947;
	ld.local.u32 	%r4952, [%rd2];
	// inline asm
	prmt.b32 %r4951, %r4952, %r7458, %r6;
	// inline asm
	st.local.u32 	[%rd4], %r4951;
	st.local.v4.u32 	[%rd3], {%r7458, %r7458, %r7458, %r7458};
	st.local.v2.u32 	[%rd2+8], {%r7458, %r7458};
	mov.u64 	%rd211, 0;
	st.local.u64 	[%rd2], %rd211;
	mov.u32 	%r7467, %r7458;
	mov.u32 	%r7468, %r7458;
	mov.u32 	%r7469, %r7458;
	bra.uni 	BB3_82;

BB3_52:
	setp.gt.s32	%p4, %r768, 27;
	@%p4 bra 	BB3_60;

	setp.gt.s32	%p10, %r768, 25;
	@%p10 bra 	BB3_57;

	setp.eq.s32	%p13, %r768, 24;
	@%p13 bra 	BB3_70;
	bra.uni 	BB3_55;

BB3_70:
	mov.u32 	%r7458, 0;
	// inline asm
	prmt.b32 %r7486, %r7458, %r766, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2091, %r2092}, [%rd9+8];
	// inline asm
	prmt.b32 %r7479, %r2092, %r2091, %r6;
	// inline asm
	ld.local.u32 	%r1960, [%rd9+8];
	ld.local.u32 	%r1961, [%rd9+4];
	// inline asm
	prmt.b32 %r7480, %r1960, %r1961, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2093, %r2094}, [%rd9];
	// inline asm
	prmt.b32 %r7481, %r2094, %r2093, %r6;
	// inline asm
	ld.local.u32 	%r1968, [%rd9];
	ld.local.u32 	%r1969, [%rd8+12];
	// inline asm
	prmt.b32 %r7482, %r1968, %r1969, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2095, %r2096}, [%rd8+8];
	// inline asm
	prmt.b32 %r7475, %r2096, %r2095, %r6;
	// inline asm
	ld.local.u32 	%r1976, [%rd8+8];
	ld.local.u32 	%r1977, [%rd8+4];
	// inline asm
	prmt.b32 %r7476, %r1976, %r1977, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2097, %r2098}, [%rd8];
	// inline asm
	prmt.b32 %r7477, %r2098, %r2097, %r6;
	// inline asm
	ld.local.u32 	%r1984, [%rd8];
	ld.local.u32 	%r1985, [%rd7+12];
	// inline asm
	prmt.b32 %r7478, %r1984, %r1985, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2099, %r2100}, [%rd7+8];
	// inline asm
	prmt.b32 %r7471, %r2100, %r2099, %r6;
	// inline asm
	ld.local.u32 	%r1992, [%rd7+8];
	ld.local.u32 	%r1993, [%rd7+4];
	// inline asm
	prmt.b32 %r7472, %r1992, %r1993, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2101, %r2102}, [%rd7];
	// inline asm
	prmt.b32 %r7473, %r2102, %r2101, %r6;
	// inline asm
	ld.local.u32 	%r2000, [%rd7];
	ld.local.u32 	%r2001, [%rd6+12];
	// inline asm
	prmt.b32 %r7474, %r2000, %r2001, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2103, %r2104}, [%rd6+8];
	// inline asm
	prmt.b32 %r7467, %r2104, %r2103, %r6;
	// inline asm
	ld.local.u32 	%r2008, [%rd6+8];
	ld.local.u32 	%r2009, [%rd6+4];
	// inline asm
	prmt.b32 %r7468, %r2008, %r2009, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2105, %r2106}, [%rd6];
	// inline asm
	prmt.b32 %r7469, %r2106, %r2105, %r6;
	// inline asm
	ld.local.u32 	%r2016, [%rd6];
	ld.local.u32 	%r2017, [%rd5+12];
	// inline asm
	prmt.b32 %r7470, %r2016, %r2017, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2107, %r2108}, [%rd5+8];
	// inline asm
	prmt.b32 %r7463, %r2108, %r2107, %r6;
	// inline asm
	ld.local.u32 	%r2024, [%rd5+8];
	ld.local.u32 	%r2025, [%rd5+4];
	// inline asm
	prmt.b32 %r7464, %r2024, %r2025, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2109, %r2110}, [%rd5];
	// inline asm
	prmt.b32 %r7465, %r2110, %r2109, %r6;
	// inline asm
	ld.local.u32 	%r2032, [%rd5];
	ld.local.u32 	%r2033, [%rd4+12];
	// inline asm
	prmt.b32 %r7466, %r2032, %r2033, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2111, %r2112}, [%rd4+8];
	// inline asm
	prmt.b32 %r7459, %r2112, %r2111, %r6;
	// inline asm
	ld.local.u32 	%r2040, [%rd4+8];
	ld.local.u32 	%r2041, [%rd4+4];
	// inline asm
	prmt.b32 %r7460, %r2040, %r2041, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2113, %r2114}, [%rd4];
	// inline asm
	prmt.b32 %r7461, %r2114, %r2113, %r6;
	// inline asm
	ld.local.u32 	%r2048, [%rd4];
	ld.local.u32 	%r2049, [%rd3+12];
	// inline asm
	prmt.b32 %r7462, %r2048, %r2049, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2115, %r2116}, [%rd3+8];
	// inline asm
	prmt.b32 %r2051, %r2116, %r2115, %r6;
	// inline asm
	st.local.u32 	[%rd9+12], %r2051;
	ld.local.u32 	%r2056, [%rd3+8];
	ld.local.u32 	%r2057, [%rd3+4];
	// inline asm
	prmt.b32 %r2055, %r2056, %r2057, %r6;
	// inline asm
	st.local.u32 	[%rd9+8], %r2055;
	ld.local.v2.u32 	{%r2117, %r2118}, [%rd3];
	// inline asm
	prmt.b32 %r2059, %r2118, %r2117, %r6;
	// inline asm
	st.local.u32 	[%rd9+4], %r2059;
	ld.local.u32 	%r2064, [%rd3];
	ld.local.u32 	%r2065, [%rd2+12];
	// inline asm
	prmt.b32 %r2063, %r2064, %r2065, %r6;
	// inline asm
	st.local.u32 	[%rd9], %r2063;
	ld.local.v2.u32 	{%r2119, %r2120}, [%rd2+8];
	// inline asm
	prmt.b32 %r2067, %r2120, %r2119, %r6;
	// inline asm
	st.local.u32 	[%rd8+12], %r2067;
	ld.local.u32 	%r2072, [%rd2+8];
	ld.local.u32 	%r2073, [%rd2+4];
	// inline asm
	prmt.b32 %r2071, %r2072, %r2073, %r6;
	// inline asm
	st.local.u32 	[%rd8+8], %r2071;
	ld.local.v2.u32 	{%r2121, %r2122}, [%rd2];
	// inline asm
	prmt.b32 %r2075, %r2122, %r2121, %r6;
	// inline asm
	st.local.u32 	[%rd8+4], %r2075;
	ld.local.u32 	%r2080, [%rd2];
	// inline asm
	prmt.b32 %r2079, %r2080, %r7458, %r6;
	// inline asm
	st.local.u32 	[%rd8], %r2079;
	st.local.v4.u32 	[%rd7], {%r7458, %r7458, %r7458, %r7458};
	st.local.v4.u32 	[%rd6], {%r7458, %r7458, %r7458, %r7458};
	st.local.v4.u32 	[%rd5], {%r7458, %r7458, %r7458, %r7458};
	st.local.v4.u32 	[%rd4], {%r7458, %r7458, %r7458, %r7458};
	st.local.v4.u32 	[%rd3], {%r7458, %r7458, %r7458, %r7458};
	st.local.v2.u32 	[%rd2+8], {%r7458, %r7458};
	mov.u64 	%rd195, 0;
	st.local.u64 	[%rd2], %rd195;
	mov.u32 	%r7483, %r7458;
	mov.u32 	%r7484, %r7458;
	mov.u32 	%r7485, %r7458;
	bra.uni 	BB3_86;

BB3_14:
	setp.gt.s32	%p39, %r768, 5;
	@%p39 bra 	BB3_18;

	setp.eq.s32	%p42, %r768, 4;
	@%p42 bra 	BB3_80;
	bra.uni 	BB3_16;

BB3_80:
	mov.u32 	%r7458, 0;
	// inline asm
	prmt.b32 %r7466, %r7458, %r766, %r6;
	// inline asm
	ld.local.v2.u32 	{%r5741, %r5742}, [%rd9+8];
	// inline asm
	prmt.b32 %r7459, %r5742, %r5741, %r6;
	// inline asm
	ld.local.u32 	%r5590, [%rd9+8];
	ld.local.u32 	%r5591, [%rd9+4];
	// inline asm
	prmt.b32 %r7460, %r5590, %r5591, %r6;
	// inline asm
	ld.local.v2.u32 	{%r5743, %r5744}, [%rd9];
	// inline asm
	prmt.b32 %r7461, %r5744, %r5743, %r6;
	// inline asm
	ld.local.u32 	%r5598, [%rd9];
	ld.local.u32 	%r5599, [%rd8+12];
	// inline asm
	prmt.b32 %r7462, %r5598, %r5599, %r6;
	// inline asm
	ld.local.v2.u32 	{%r5745, %r5746}, [%rd8+8];
	// inline asm
	prmt.b32 %r5601, %r5746, %r5745, %r6;
	// inline asm
	st.local.u32 	[%rd9+12], %r5601;
	ld.local.u32 	%r5606, [%rd8+8];
	ld.local.u32 	%r5607, [%rd8+4];
	// inline asm
	prmt.b32 %r5605, %r5606, %r5607, %r6;
	// inline asm
	st.local.u32 	[%rd9+8], %r5605;
	ld.local.v2.u32 	{%r5747, %r5748}, [%rd8];
	// inline asm
	prmt.b32 %r5609, %r5748, %r5747, %r6;
	// inline asm
	st.local.u32 	[%rd9+4], %r5609;
	ld.local.u32 	%r5614, [%rd8];
	ld.local.u32 	%r5615, [%rd7+12];
	// inline asm
	prmt.b32 %r5613, %r5614, %r5615, %r6;
	// inline asm
	st.local.u32 	[%rd9], %r5613;
	ld.local.v2.u32 	{%r5749, %r5750}, [%rd7+8];
	// inline asm
	prmt.b32 %r5617, %r5750, %r5749, %r6;
	// inline asm
	st.local.u32 	[%rd8+12], %r5617;
	ld.local.u32 	%r5622, [%rd7+8];
	ld.local.u32 	%r5623, [%rd7+4];
	// inline asm
	prmt.b32 %r5621, %r5622, %r5623, %r6;
	// inline asm
	st.local.u32 	[%rd8+8], %r5621;
	ld.local.v2.u32 	{%r5751, %r5752}, [%rd7];
	// inline asm
	prmt.b32 %r5625, %r5752, %r5751, %r6;
	// inline asm
	st.local.u32 	[%rd8+4], %r5625;
	ld.local.u32 	%r5630, [%rd7];
	ld.local.u32 	%r5631, [%rd6+12];
	// inline asm
	prmt.b32 %r5629, %r5630, %r5631, %r6;
	// inline asm
	st.local.u32 	[%rd8], %r5629;
	ld.local.v2.u32 	{%r5753, %r5754}, [%rd6+8];
	// inline asm
	prmt.b32 %r5633, %r5754, %r5753, %r6;
	// inline asm
	st.local.u32 	[%rd7+12], %r5633;
	ld.local.u32 	%r5638, [%rd6+8];
	ld.local.u32 	%r5639, [%rd6+4];
	// inline asm
	prmt.b32 %r5637, %r5638, %r5639, %r6;
	// inline asm
	st.local.u32 	[%rd7+8], %r5637;
	ld.local.v2.u32 	{%r5755, %r5756}, [%rd6];
	// inline asm
	prmt.b32 %r5641, %r5756, %r5755, %r6;
	// inline asm
	st.local.u32 	[%rd7+4], %r5641;
	ld.local.u32 	%r5646, [%rd6];
	ld.local.u32 	%r5647, [%rd5+12];
	// inline asm
	prmt.b32 %r5645, %r5646, %r5647, %r6;
	// inline asm
	st.local.u32 	[%rd7], %r5645;
	ld.local.v2.u32 	{%r5757, %r5758}, [%rd5+8];
	// inline asm
	prmt.b32 %r5649, %r5758, %r5757, %r6;
	// inline asm
	st.local.u32 	[%rd6+12], %r5649;
	ld.local.u32 	%r5654, [%rd5+8];
	ld.local.u32 	%r5655, [%rd5+4];
	// inline asm
	prmt.b32 %r5653, %r5654, %r5655, %r6;
	// inline asm
	st.local.u32 	[%rd6+8], %r5653;
	ld.local.v2.u32 	{%r5759, %r5760}, [%rd5];
	// inline asm
	prmt.b32 %r5657, %r5760, %r5759, %r6;
	// inline asm
	st.local.u32 	[%rd6+4], %r5657;
	ld.local.u32 	%r5662, [%rd5];
	ld.local.u32 	%r5663, [%rd4+12];
	// inline asm
	prmt.b32 %r5661, %r5662, %r5663, %r6;
	// inline asm
	st.local.u32 	[%rd6], %r5661;
	ld.local.v2.u32 	{%r5761, %r5762}, [%rd4+8];
	// inline asm
	prmt.b32 %r5665, %r5762, %r5761, %r6;
	// inline asm
	st.local.u32 	[%rd5+12], %r5665;
	ld.local.u32 	%r5670, [%rd4+8];
	ld.local.u32 	%r5671, [%rd4+4];
	// inline asm
	prmt.b32 %r5669, %r5670, %r5671, %r6;
	// inline asm
	st.local.u32 	[%rd5+8], %r5669;
	ld.local.v2.u32 	{%r5763, %r5764}, [%rd4];
	// inline asm
	prmt.b32 %r5673, %r5764, %r5763, %r6;
	// inline asm
	st.local.u32 	[%rd5+4], %r5673;
	ld.local.u32 	%r5678, [%rd4];
	ld.local.u32 	%r5679, [%rd3+12];
	// inline asm
	prmt.b32 %r5677, %r5678, %r5679, %r6;
	// inline asm
	st.local.u32 	[%rd5], %r5677;
	ld.local.v2.u32 	{%r5765, %r5766}, [%rd3+8];
	// inline asm
	prmt.b32 %r5681, %r5766, %r5765, %r6;
	// inline asm
	st.local.u32 	[%rd4+12], %r5681;
	ld.local.u32 	%r5686, [%rd3+8];
	ld.local.u32 	%r5687, [%rd3+4];
	// inline asm
	prmt.b32 %r5685, %r5686, %r5687, %r6;
	// inline asm
	st.local.u32 	[%rd4+8], %r5685;
	ld.local.v2.u32 	{%r5767, %r5768}, [%rd3];
	// inline asm
	prmt.b32 %r5689, %r5768, %r5767, %r6;
	// inline asm
	st.local.u32 	[%rd4+4], %r5689;
	ld.local.u32 	%r5694, [%rd3];
	ld.local.u32 	%r5695, [%rd2+12];
	// inline asm
	prmt.b32 %r5693, %r5694, %r5695, %r6;
	// inline asm
	st.local.u32 	[%rd4], %r5693;
	ld.local.v2.u32 	{%r5769, %r5770}, [%rd2+8];
	// inline asm
	prmt.b32 %r5697, %r5770, %r5769, %r6;
	// inline asm
	st.local.u32 	[%rd3+12], %r5697;
	ld.local.u32 	%r5702, [%rd2+8];
	ld.local.u32 	%r5703, [%rd2+4];
	// inline asm
	prmt.b32 %r5701, %r5702, %r5703, %r6;
	// inline asm
	st.local.u32 	[%rd3+8], %r5701;
	ld.local.v2.u32 	{%r5771, %r5772}, [%rd2];
	// inline asm
	prmt.b32 %r5705, %r5772, %r5771, %r6;
	// inline asm
	st.local.u32 	[%rd3+4], %r5705;
	ld.local.u32 	%r5710, [%rd2];
	// inline asm
	prmt.b32 %r5709, %r5710, %r7458, %r6;
	// inline asm
	st.local.u32 	[%rd3], %r5709;
	st.local.v2.u32 	[%rd2+8], {%r7458, %r7458};
	mov.u64 	%rd215, 0;
	st.local.u64 	[%rd2], %rd215;
	mov.u32 	%r7463, %r7458;
	mov.u32 	%r7464, %r7458;
	mov.u32 	%r7465, %r7458;
	bra.uni 	BB3_81;

BB3_45:
	setp.gt.s32	%p16, %r768, 21;
	@%p16 bra 	BB3_49;

	setp.eq.s32	%p19, %r768, 20;
	@%p19 bra 	BB3_72;
	bra.uni 	BB3_47;

BB3_72:
	mov.u32 	%r7458, 0;
	// inline asm
	prmt.b32 %r7482, %r7458, %r766, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2789, %r2790}, [%rd9+8];
	// inline asm
	prmt.b32 %r7475, %r2790, %r2789, %r6;
	// inline asm
	ld.local.u32 	%r2654, [%rd9+8];
	ld.local.u32 	%r2655, [%rd9+4];
	// inline asm
	prmt.b32 %r7476, %r2654, %r2655, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2791, %r2792}, [%rd9];
	// inline asm
	prmt.b32 %r7477, %r2792, %r2791, %r6;
	// inline asm
	ld.local.u32 	%r2662, [%rd9];
	ld.local.u32 	%r2663, [%rd8+12];
	// inline asm
	prmt.b32 %r7478, %r2662, %r2663, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2793, %r2794}, [%rd8+8];
	// inline asm
	prmt.b32 %r7471, %r2794, %r2793, %r6;
	// inline asm
	ld.local.u32 	%r2670, [%rd8+8];
	ld.local.u32 	%r2671, [%rd8+4];
	// inline asm
	prmt.b32 %r7472, %r2670, %r2671, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2795, %r2796}, [%rd8];
	// inline asm
	prmt.b32 %r7473, %r2796, %r2795, %r6;
	// inline asm
	ld.local.u32 	%r2678, [%rd8];
	ld.local.u32 	%r2679, [%rd7+12];
	// inline asm
	prmt.b32 %r7474, %r2678, %r2679, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2797, %r2798}, [%rd7+8];
	// inline asm
	prmt.b32 %r7467, %r2798, %r2797, %r6;
	// inline asm
	ld.local.u32 	%r2686, [%rd7+8];
	ld.local.u32 	%r2687, [%rd7+4];
	// inline asm
	prmt.b32 %r7468, %r2686, %r2687, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2799, %r2800}, [%rd7];
	// inline asm
	prmt.b32 %r7469, %r2800, %r2799, %r6;
	// inline asm
	ld.local.u32 	%r2694, [%rd7];
	ld.local.u32 	%r2695, [%rd6+12];
	// inline asm
	prmt.b32 %r7470, %r2694, %r2695, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2801, %r2802}, [%rd6+8];
	// inline asm
	prmt.b32 %r7463, %r2802, %r2801, %r6;
	// inline asm
	ld.local.u32 	%r2702, [%rd6+8];
	ld.local.u32 	%r2703, [%rd6+4];
	// inline asm
	prmt.b32 %r7464, %r2702, %r2703, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2803, %r2804}, [%rd6];
	// inline asm
	prmt.b32 %r7465, %r2804, %r2803, %r6;
	// inline asm
	ld.local.u32 	%r2710, [%rd6];
	ld.local.u32 	%r2711, [%rd5+12];
	// inline asm
	prmt.b32 %r7466, %r2710, %r2711, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2805, %r2806}, [%rd5+8];
	// inline asm
	prmt.b32 %r7459, %r2806, %r2805, %r6;
	// inline asm
	ld.local.u32 	%r2718, [%rd5+8];
	ld.local.u32 	%r2719, [%rd5+4];
	// inline asm
	prmt.b32 %r7460, %r2718, %r2719, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2807, %r2808}, [%rd5];
	// inline asm
	prmt.b32 %r7461, %r2808, %r2807, %r6;
	// inline asm
	ld.local.u32 	%r2726, [%rd5];
	ld.local.u32 	%r2727, [%rd4+12];
	// inline asm
	prmt.b32 %r7462, %r2726, %r2727, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2809, %r2810}, [%rd4+8];
	// inline asm
	prmt.b32 %r2729, %r2810, %r2809, %r6;
	// inline asm
	st.local.u32 	[%rd9+12], %r2729;
	ld.local.u32 	%r2734, [%rd4+8];
	ld.local.u32 	%r2735, [%rd4+4];
	// inline asm
	prmt.b32 %r2733, %r2734, %r2735, %r6;
	// inline asm
	st.local.u32 	[%rd9+8], %r2733;
	ld.local.v2.u32 	{%r2811, %r2812}, [%rd4];
	// inline asm
	prmt.b32 %r2737, %r2812, %r2811, %r6;
	// inline asm
	st.local.u32 	[%rd9+4], %r2737;
	ld.local.u32 	%r2742, [%rd4];
	ld.local.u32 	%r2743, [%rd3+12];
	// inline asm
	prmt.b32 %r2741, %r2742, %r2743, %r6;
	// inline asm
	st.local.u32 	[%rd9], %r2741;
	ld.local.v2.u32 	{%r2813, %r2814}, [%rd3+8];
	// inline asm
	prmt.b32 %r2745, %r2814, %r2813, %r6;
	// inline asm
	st.local.u32 	[%rd8+12], %r2745;
	ld.local.u32 	%r2750, [%rd3+8];
	ld.local.u32 	%r2751, [%rd3+4];
	// inline asm
	prmt.b32 %r2749, %r2750, %r2751, %r6;
	// inline asm
	st.local.u32 	[%rd8+8], %r2749;
	ld.local.v2.u32 	{%r2815, %r2816}, [%rd3];
	// inline asm
	prmt.b32 %r2753, %r2816, %r2815, %r6;
	// inline asm
	st.local.u32 	[%rd8+4], %r2753;
	ld.local.u32 	%r2758, [%rd3];
	ld.local.u32 	%r2759, [%rd2+12];
	// inline asm
	prmt.b32 %r2757, %r2758, %r2759, %r6;
	// inline asm
	st.local.u32 	[%rd8], %r2757;
	ld.local.v2.u32 	{%r2817, %r2818}, [%rd2+8];
	// inline asm
	prmt.b32 %r2761, %r2818, %r2817, %r6;
	// inline asm
	st.local.u32 	[%rd7+12], %r2761;
	ld.local.u32 	%r2766, [%rd2+8];
	ld.local.u32 	%r2767, [%rd2+4];
	// inline asm
	prmt.b32 %r2765, %r2766, %r2767, %r6;
	// inline asm
	st.local.u32 	[%rd7+8], %r2765;
	ld.local.v2.u32 	{%r2819, %r2820}, [%rd2];
	// inline asm
	prmt.b32 %r2769, %r2820, %r2819, %r6;
	// inline asm
	st.local.u32 	[%rd7+4], %r2769;
	ld.local.u32 	%r2774, [%rd2];
	// inline asm
	prmt.b32 %r2773, %r2774, %r7458, %r6;
	// inline asm
	st.local.u32 	[%rd7], %r2773;
	st.local.v4.u32 	[%rd6], {%r7458, %r7458, %r7458, %r7458};
	st.local.v4.u32 	[%rd5], {%r7458, %r7458, %r7458, %r7458};
	st.local.v4.u32 	[%rd4], {%r7458, %r7458, %r7458, %r7458};
	st.local.v4.u32 	[%rd3], {%r7458, %r7458, %r7458, %r7458};
	st.local.v2.u32 	[%rd2+8], {%r7458, %r7458};
	mov.u64 	%rd199, 0;
	st.local.u64 	[%rd2], %rd199;
	mov.u32 	%r7479, %r7458;
	mov.u32 	%r7480, %r7458;
	mov.u32 	%r7481, %r7458;
	bra.uni 	BB3_85;

BB3_29:
	setp.gt.s32	%p28, %r768, 13;
	@%p28 bra 	BB3_33;

	setp.eq.s32	%p31, %r768, 12;
	@%p31 bra 	BB3_76;
	bra.uni 	BB3_31;

BB3_76:
	mov.u32 	%r7458, 0;
	// inline asm
	prmt.b32 %r7474, %r7458, %r766, %r6;
	// inline asm
	ld.local.v2.u32 	{%r4233, %r4234}, [%rd9+8];
	// inline asm
	prmt.b32 %r7467, %r4234, %r4233, %r6;
	// inline asm
	ld.local.u32 	%r4090, [%rd9+8];
	ld.local.u32 	%r4091, [%rd9+4];
	// inline asm
	prmt.b32 %r7468, %r4090, %r4091, %r6;
	// inline asm
	ld.local.v2.u32 	{%r4235, %r4236}, [%rd9];
	// inline asm
	prmt.b32 %r7469, %r4236, %r4235, %r6;
	// inline asm
	ld.local.u32 	%r4098, [%rd9];
	ld.local.u32 	%r4099, [%rd8+12];
	// inline asm
	prmt.b32 %r7470, %r4098, %r4099, %r6;
	// inline asm
	ld.local.v2.u32 	{%r4237, %r4238}, [%rd8+8];
	// inline asm
	prmt.b32 %r7463, %r4238, %r4237, %r6;
	// inline asm
	ld.local.u32 	%r4106, [%rd8+8];
	ld.local.u32 	%r4107, [%rd8+4];
	// inline asm
	prmt.b32 %r7464, %r4106, %r4107, %r6;
	// inline asm
	ld.local.v2.u32 	{%r4239, %r4240}, [%rd8];
	// inline asm
	prmt.b32 %r7465, %r4240, %r4239, %r6;
	// inline asm
	ld.local.u32 	%r4114, [%rd8];
	ld.local.u32 	%r4115, [%rd7+12];
	// inline asm
	prmt.b32 %r7466, %r4114, %r4115, %r6;
	// inline asm
	ld.local.v2.u32 	{%r4241, %r4242}, [%rd7+8];
	// inline asm
	prmt.b32 %r7459, %r4242, %r4241, %r6;
	// inline asm
	ld.local.u32 	%r4122, [%rd7+8];
	ld.local.u32 	%r4123, [%rd7+4];
	// inline asm
	prmt.b32 %r7460, %r4122, %r4123, %r6;
	// inline asm
	ld.local.v2.u32 	{%r4243, %r4244}, [%rd7];
	// inline asm
	prmt.b32 %r7461, %r4244, %r4243, %r6;
	// inline asm
	ld.local.u32 	%r4130, [%rd7];
	ld.local.u32 	%r4131, [%rd6+12];
	// inline asm
	prmt.b32 %r7462, %r4130, %r4131, %r6;
	// inline asm
	ld.local.v2.u32 	{%r4245, %r4246}, [%rd6+8];
	// inline asm
	prmt.b32 %r4133, %r4246, %r4245, %r6;
	// inline asm
	st.local.u32 	[%rd9+12], %r4133;
	ld.local.u32 	%r4138, [%rd6+8];
	ld.local.u32 	%r4139, [%rd6+4];
	// inline asm
	prmt.b32 %r4137, %r4138, %r4139, %r6;
	// inline asm
	st.local.u32 	[%rd9+8], %r4137;
	ld.local.v2.u32 	{%r4247, %r4248}, [%rd6];
	// inline asm
	prmt.b32 %r4141, %r4248, %r4247, %r6;
	// inline asm
	st.local.u32 	[%rd9+4], %r4141;
	ld.local.u32 	%r4146, [%rd6];
	ld.local.u32 	%r4147, [%rd5+12];
	// inline asm
	prmt.b32 %r4145, %r4146, %r4147, %r6;
	// inline asm
	st.local.u32 	[%rd9], %r4145;
	ld.local.v2.u32 	{%r4249, %r4250}, [%rd5+8];
	// inline asm
	prmt.b32 %r4149, %r4250, %r4249, %r6;
	// inline asm
	st.local.u32 	[%rd8+12], %r4149;
	ld.local.u32 	%r4154, [%rd5+8];
	ld.local.u32 	%r4155, [%rd5+4];
	// inline asm
	prmt.b32 %r4153, %r4154, %r4155, %r6;
	// inline asm
	st.local.u32 	[%rd8+8], %r4153;
	ld.local.v2.u32 	{%r4251, %r4252}, [%rd5];
	// inline asm
	prmt.b32 %r4157, %r4252, %r4251, %r6;
	// inline asm
	st.local.u32 	[%rd8+4], %r4157;
	ld.local.u32 	%r4162, [%rd5];
	ld.local.u32 	%r4163, [%rd4+12];
	// inline asm
	prmt.b32 %r4161, %r4162, %r4163, %r6;
	// inline asm
	st.local.u32 	[%rd8], %r4161;
	ld.local.v2.u32 	{%r4253, %r4254}, [%rd4+8];
	// inline asm
	prmt.b32 %r4165, %r4254, %r4253, %r6;
	// inline asm
	st.local.u32 	[%rd7+12], %r4165;
	ld.local.u32 	%r4170, [%rd4+8];
	ld.local.u32 	%r4171, [%rd4+4];
	// inline asm
	prmt.b32 %r4169, %r4170, %r4171, %r6;
	// inline asm
	st.local.u32 	[%rd7+8], %r4169;
	ld.local.v2.u32 	{%r4255, %r4256}, [%rd4];
	// inline asm
	prmt.b32 %r4173, %r4256, %r4255, %r6;
	// inline asm
	st.local.u32 	[%rd7+4], %r4173;
	ld.local.u32 	%r4178, [%rd4];
	ld.local.u32 	%r4179, [%rd3+12];
	// inline asm
	prmt.b32 %r4177, %r4178, %r4179, %r6;
	// inline asm
	st.local.u32 	[%rd7], %r4177;
	ld.local.v2.u32 	{%r4257, %r4258}, [%rd3+8];
	// inline asm
	prmt.b32 %r4181, %r4258, %r4257, %r6;
	// inline asm
	st.local.u32 	[%rd6+12], %r4181;
	ld.local.u32 	%r4186, [%rd3+8];
	ld.local.u32 	%r4187, [%rd3+4];
	// inline asm
	prmt.b32 %r4185, %r4186, %r4187, %r6;
	// inline asm
	st.local.u32 	[%rd6+8], %r4185;
	ld.local.v2.u32 	{%r4259, %r4260}, [%rd3];
	// inline asm
	prmt.b32 %r4189, %r4260, %r4259, %r6;
	// inline asm
	st.local.u32 	[%rd6+4], %r4189;
	ld.local.u32 	%r4194, [%rd3];
	ld.local.u32 	%r4195, [%rd2+12];
	// inline asm
	prmt.b32 %r4193, %r4194, %r4195, %r6;
	// inline asm
	st.local.u32 	[%rd6], %r4193;
	ld.local.v2.u32 	{%r4261, %r4262}, [%rd2+8];
	// inline asm
	prmt.b32 %r4197, %r4262, %r4261, %r6;
	// inline asm
	st.local.u32 	[%rd5+12], %r4197;
	ld.local.u32 	%r4202, [%rd2+8];
	ld.local.u32 	%r4203, [%rd2+4];
	// inline asm
	prmt.b32 %r4201, %r4202, %r4203, %r6;
	// inline asm
	st.local.u32 	[%rd5+8], %r4201;
	ld.local.v2.u32 	{%r4263, %r4264}, [%rd2];
	// inline asm
	prmt.b32 %r4205, %r4264, %r4263, %r6;
	// inline asm
	st.local.u32 	[%rd5+4], %r4205;
	ld.local.u32 	%r4210, [%rd2];
	// inline asm
	prmt.b32 %r4209, %r4210, %r7458, %r6;
	// inline asm
	st.local.u32 	[%rd5], %r4209;
	st.local.v4.u32 	[%rd4], {%r7458, %r7458, %r7458, %r7458};
	st.local.v4.u32 	[%rd3], {%r7458, %r7458, %r7458, %r7458};
	st.local.v2.u32 	[%rd2+8], {%r7458, %r7458};
	mov.u64 	%rd207, 0;
	st.local.u64 	[%rd2], %rd207;
	mov.u32 	%r7471, %r7458;
	mov.u32 	%r7472, %r7458;
	mov.u32 	%r7473, %r7458;
	bra.uni 	BB3_83;

BB3_60:
	setp.gt.s32	%p5, %r768, 29;
	@%p5 bra 	BB3_64;

	setp.eq.s32	%p8, %r768, 28;
	@%p8 bra 	BB3_68;
	bra.uni 	BB3_62;

BB3_68:
	mov.u32 	%r7458, 0;
	// inline asm
	prmt.b32 %r7490, %r7458, %r766, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1409, %r1410}, [%rd9+8];
	// inline asm
	prmt.b32 %r7483, %r1410, %r1409, %r6;
	// inline asm
	ld.local.u32 	%r1282, [%rd9+8];
	ld.local.u32 	%r1283, [%rd9+4];
	// inline asm
	prmt.b32 %r7484, %r1282, %r1283, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1411, %r1412}, [%rd9];
	// inline asm
	prmt.b32 %r7485, %r1412, %r1411, %r6;
	// inline asm
	ld.local.u32 	%r1290, [%rd9];
	ld.local.u32 	%r1291, [%rd8+12];
	// inline asm
	prmt.b32 %r7486, %r1290, %r1291, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1413, %r1414}, [%rd8+8];
	// inline asm
	prmt.b32 %r7479, %r1414, %r1413, %r6;
	// inline asm
	ld.local.u32 	%r1298, [%rd8+8];
	ld.local.u32 	%r1299, [%rd8+4];
	// inline asm
	prmt.b32 %r7480, %r1298, %r1299, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1415, %r1416}, [%rd8];
	// inline asm
	prmt.b32 %r7481, %r1416, %r1415, %r6;
	// inline asm
	ld.local.u32 	%r1306, [%rd8];
	ld.local.u32 	%r1307, [%rd7+12];
	// inline asm
	prmt.b32 %r7482, %r1306, %r1307, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1417, %r1418}, [%rd7+8];
	// inline asm
	prmt.b32 %r7475, %r1418, %r1417, %r6;
	// inline asm
	ld.local.u32 	%r1314, [%rd7+8];
	ld.local.u32 	%r1315, [%rd7+4];
	// inline asm
	prmt.b32 %r7476, %r1314, %r1315, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1419, %r1420}, [%rd7];
	// inline asm
	prmt.b32 %r7477, %r1420, %r1419, %r6;
	// inline asm
	ld.local.u32 	%r1322, [%rd7];
	ld.local.u32 	%r1323, [%rd6+12];
	// inline asm
	prmt.b32 %r7478, %r1322, %r1323, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1421, %r1422}, [%rd6+8];
	// inline asm
	prmt.b32 %r7471, %r1422, %r1421, %r6;
	// inline asm
	ld.local.u32 	%r1330, [%rd6+8];
	ld.local.u32 	%r1331, [%rd6+4];
	// inline asm
	prmt.b32 %r7472, %r1330, %r1331, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1423, %r1424}, [%rd6];
	// inline asm
	prmt.b32 %r7473, %r1424, %r1423, %r6;
	// inline asm
	ld.local.u32 	%r1338, [%rd6];
	ld.local.u32 	%r1339, [%rd5+12];
	// inline asm
	prmt.b32 %r7474, %r1338, %r1339, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1425, %r1426}, [%rd5+8];
	// inline asm
	prmt.b32 %r7467, %r1426, %r1425, %r6;
	// inline asm
	ld.local.u32 	%r1346, [%rd5+8];
	ld.local.u32 	%r1347, [%rd5+4];
	// inline asm
	prmt.b32 %r7468, %r1346, %r1347, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1427, %r1428}, [%rd5];
	// inline asm
	prmt.b32 %r7469, %r1428, %r1427, %r6;
	// inline asm
	ld.local.u32 	%r1354, [%rd5];
	ld.local.u32 	%r1355, [%rd4+12];
	// inline asm
	prmt.b32 %r7470, %r1354, %r1355, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1429, %r1430}, [%rd4+8];
	// inline asm
	prmt.b32 %r7463, %r1430, %r1429, %r6;
	// inline asm
	ld.local.u32 	%r1362, [%rd4+8];
	ld.local.u32 	%r1363, [%rd4+4];
	// inline asm
	prmt.b32 %r7464, %r1362, %r1363, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1431, %r1432}, [%rd4];
	// inline asm
	prmt.b32 %r7465, %r1432, %r1431, %r6;
	// inline asm
	ld.local.u32 	%r1370, [%rd4];
	ld.local.u32 	%r1371, [%rd3+12];
	// inline asm
	prmt.b32 %r7466, %r1370, %r1371, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1433, %r1434}, [%rd3+8];
	// inline asm
	prmt.b32 %r7459, %r1434, %r1433, %r6;
	// inline asm
	ld.local.u32 	%r1378, [%rd3+8];
	ld.local.u32 	%r1379, [%rd3+4];
	// inline asm
	prmt.b32 %r7460, %r1378, %r1379, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1435, %r1436}, [%rd3];
	// inline asm
	prmt.b32 %r7461, %r1436, %r1435, %r6;
	// inline asm
	ld.local.u32 	%r1386, [%rd3];
	ld.local.u32 	%r1387, [%rd2+12];
	// inline asm
	prmt.b32 %r7462, %r1386, %r1387, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1437, %r1438}, [%rd2+8];
	// inline asm
	prmt.b32 %r1389, %r1438, %r1437, %r6;
	// inline asm
	st.local.u32 	[%rd9+12], %r1389;
	ld.local.u32 	%r1394, [%rd2+8];
	ld.local.u32 	%r1395, [%rd2+4];
	// inline asm
	prmt.b32 %r1393, %r1394, %r1395, %r6;
	// inline asm
	st.local.u32 	[%rd9+8], %r1393;
	ld.local.v2.u32 	{%r1439, %r1440}, [%rd2];
	// inline asm
	prmt.b32 %r1397, %r1440, %r1439, %r6;
	// inline asm
	st.local.u32 	[%rd9+4], %r1397;
	ld.local.u32 	%r1402, [%rd2];
	// inline asm
	prmt.b32 %r1401, %r1402, %r7458, %r6;
	// inline asm
	st.local.u32 	[%rd9], %r1401;
	st.local.v4.u32 	[%rd8], {%r7458, %r7458, %r7458, %r7458};
	st.local.v4.u32 	[%rd7], {%r7458, %r7458, %r7458, %r7458};
	st.local.v4.u32 	[%rd6], {%r7458, %r7458, %r7458, %r7458};
	st.local.v4.u32 	[%rd5], {%r7458, %r7458, %r7458, %r7458};
	st.local.v4.u32 	[%rd4], {%r7458, %r7458, %r7458, %r7458};
	st.local.v4.u32 	[%rd3], {%r7458, %r7458, %r7458, %r7458};
	st.local.v2.u32 	[%rd2+8], {%r7458, %r7458};
	mov.u64 	%rd191, 0;
	st.local.u64 	[%rd2], %rd191;
	mov.u32 	%r7487, %r7458;
	mov.u32 	%r7488, %r7458;
	mov.u32 	%r7489, %r7458;
	bra.uni 	BB3_91;

BB3_10:
	setp.eq.s32	%p45, %r768, 2;
	@%p45 bra 	BB3_87;
	bra.uni 	BB3_11;

BB3_87:
	mov.u32 	%r7458, 0;
	// inline asm
	prmt.b32 %r7460, %r7458, %r766, %r6;
	// inline asm
	ld.local.v2.u32 	{%r6128, %r6129}, [%rd9+8];
	// inline asm
	prmt.b32 %r7461, %r6129, %r6128, %r6;
	// inline asm
	ld.local.u32 	%r5975, [%rd9+8];
	ld.local.u32 	%r5976, [%rd9+4];
	// inline asm
	prmt.b32 %r7462, %r5975, %r5976, %r6;
	// inline asm
	ld.local.v2.u32 	{%r6130, %r6131}, [%rd9];
	// inline asm
	prmt.b32 %r5978, %r6131, %r6130, %r6;
	// inline asm
	st.local.u32 	[%rd9+12], %r5978;
	ld.local.u32 	%r5983, [%rd9];
	ld.local.u32 	%r5984, [%rd8+12];
	// inline asm
	prmt.b32 %r5982, %r5983, %r5984, %r6;
	// inline asm
	st.local.u32 	[%rd9+8], %r5982;
	ld.local.v2.u32 	{%r6132, %r6133}, [%rd8+8];
	// inline asm
	prmt.b32 %r5986, %r6133, %r6132, %r6;
	// inline asm
	st.local.u32 	[%rd9+4], %r5986;
	ld.local.u32 	%r5991, [%rd8+8];
	ld.local.u32 	%r5992, [%rd8+4];
	// inline asm
	prmt.b32 %r5990, %r5991, %r5992, %r6;
	// inline asm
	st.local.u32 	[%rd9], %r5990;
	ld.local.v2.u32 	{%r6134, %r6135}, [%rd8];
	// inline asm
	prmt.b32 %r5994, %r6135, %r6134, %r6;
	// inline asm
	st.local.u32 	[%rd8+12], %r5994;
	ld.local.u32 	%r5999, [%rd8];
	ld.local.u32 	%r6000, [%rd7+12];
	// inline asm
	prmt.b32 %r5998, %r5999, %r6000, %r6;
	// inline asm
	st.local.u32 	[%rd8+8], %r5998;
	ld.local.v2.u32 	{%r6136, %r6137}, [%rd7+8];
	// inline asm
	prmt.b32 %r6002, %r6137, %r6136, %r6;
	// inline asm
	st.local.u32 	[%rd8+4], %r6002;
	ld.local.u32 	%r6007, [%rd7+8];
	ld.local.u32 	%r6008, [%rd7+4];
	// inline asm
	prmt.b32 %r6006, %r6007, %r6008, %r6;
	// inline asm
	st.local.u32 	[%rd8], %r6006;
	ld.local.v2.u32 	{%r6138, %r6139}, [%rd7];
	// inline asm
	prmt.b32 %r6010, %r6139, %r6138, %r6;
	// inline asm
	st.local.u32 	[%rd7+12], %r6010;
	ld.local.u32 	%r6015, [%rd7];
	ld.local.u32 	%r6016, [%rd6+12];
	// inline asm
	prmt.b32 %r6014, %r6015, %r6016, %r6;
	// inline asm
	st.local.u32 	[%rd7+8], %r6014;
	ld.local.v2.u32 	{%r6140, %r6141}, [%rd6+8];
	// inline asm
	prmt.b32 %r6018, %r6141, %r6140, %r6;
	// inline asm
	st.local.u32 	[%rd7+4], %r6018;
	ld.local.u32 	%r6023, [%rd6+8];
	ld.local.u32 	%r6024, [%rd6+4];
	// inline asm
	prmt.b32 %r6022, %r6023, %r6024, %r6;
	// inline asm
	st.local.u32 	[%rd7], %r6022;
	ld.local.v2.u32 	{%r6142, %r6143}, [%rd6];
	// inline asm
	prmt.b32 %r6026, %r6143, %r6142, %r6;
	// inline asm
	st.local.u32 	[%rd6+12], %r6026;
	ld.local.u32 	%r6031, [%rd6];
	ld.local.u32 	%r6032, [%rd5+12];
	// inline asm
	prmt.b32 %r6030, %r6031, %r6032, %r6;
	// inline asm
	st.local.u32 	[%rd6+8], %r6030;
	ld.local.v2.u32 	{%r6144, %r6145}, [%rd5+8];
	// inline asm
	prmt.b32 %r6034, %r6145, %r6144, %r6;
	// inline asm
	st.local.u32 	[%rd6+4], %r6034;
	ld.local.u32 	%r6039, [%rd5+8];
	ld.local.u32 	%r6040, [%rd5+4];
	// inline asm
	prmt.b32 %r6038, %r6039, %r6040, %r6;
	// inline asm
	st.local.u32 	[%rd6], %r6038;
	ld.local.v2.u32 	{%r6146, %r6147}, [%rd5];
	// inline asm
	prmt.b32 %r6042, %r6147, %r6146, %r6;
	// inline asm
	st.local.u32 	[%rd5+12], %r6042;
	ld.local.u32 	%r6047, [%rd5];
	ld.local.u32 	%r6048, [%rd4+12];
	// inline asm
	prmt.b32 %r6046, %r6047, %r6048, %r6;
	// inline asm
	st.local.u32 	[%rd5+8], %r6046;
	ld.local.v2.u32 	{%r6148, %r6149}, [%rd4+8];
	// inline asm
	prmt.b32 %r6050, %r6149, %r6148, %r6;
	// inline asm
	st.local.u32 	[%rd5+4], %r6050;
	ld.local.u32 	%r6055, [%rd4+8];
	ld.local.u32 	%r6056, [%rd4+4];
	// inline asm
	prmt.b32 %r6054, %r6055, %r6056, %r6;
	// inline asm
	st.local.u32 	[%rd5], %r6054;
	ld.local.v2.u32 	{%r6150, %r6151}, [%rd4];
	// inline asm
	prmt.b32 %r6058, %r6151, %r6150, %r6;
	// inline asm
	st.local.u32 	[%rd4+12], %r6058;
	ld.local.u32 	%r6063, [%rd4];
	ld.local.u32 	%r6064, [%rd3+12];
	// inline asm
	prmt.b32 %r6062, %r6063, %r6064, %r6;
	// inline asm
	st.local.u32 	[%rd4+8], %r6062;
	ld.local.v2.u32 	{%r6152, %r6153}, [%rd3+8];
	// inline asm
	prmt.b32 %r6066, %r6153, %r6152, %r6;
	// inline asm
	st.local.u32 	[%rd4+4], %r6066;
	ld.local.u32 	%r6071, [%rd3+8];
	ld.local.u32 	%r6072, [%rd3+4];
	// inline asm
	prmt.b32 %r6070, %r6071, %r6072, %r6;
	// inline asm
	st.local.u32 	[%rd4], %r6070;
	ld.local.v2.u32 	{%r6154, %r6155}, [%rd3];
	// inline asm
	prmt.b32 %r6074, %r6155, %r6154, %r6;
	// inline asm
	st.local.u32 	[%rd3+12], %r6074;
	ld.local.u32 	%r6079, [%rd3];
	ld.local.u32 	%r6080, [%rd2+12];
	// inline asm
	prmt.b32 %r6078, %r6079, %r6080, %r6;
	// inline asm
	st.local.u32 	[%rd3+8], %r6078;
	ld.local.v2.u32 	{%r6156, %r6157}, [%rd2+8];
	// inline asm
	prmt.b32 %r6082, %r6157, %r6156, %r6;
	// inline asm
	st.local.u32 	[%rd3+4], %r6082;
	ld.local.u32 	%r6087, [%rd2+8];
	ld.local.u32 	%r6088, [%rd2+4];
	// inline asm
	prmt.b32 %r6086, %r6087, %r6088, %r6;
	// inline asm
	st.local.u32 	[%rd3], %r6086;
	ld.local.v2.u32 	{%r6158, %r6159}, [%rd2];
	// inline asm
	prmt.b32 %r6090, %r6159, %r6158, %r6;
	// inline asm
	st.local.u32 	[%rd2+12], %r6090;
	ld.local.u32 	%r6095, [%rd2];
	// inline asm
	prmt.b32 %r6094, %r6095, %r7458, %r6;
	// inline asm
	st.local.u32 	[%rd2+8], %r6094;
	mov.u64 	%rd217, 0;
	st.local.u64 	[%rd2], %rd217;
	mov.u32 	%r7459, %r7458;
	bra.uni 	BB3_13;

BB3_42:
	setp.eq.s32	%p22, %r768, 18;
	@%p22 bra 	BB3_73;
	bra.uni 	BB3_43;

BB3_73:
	mov.u32 	%r7458, 0;
	// inline asm
	prmt.b32 %r7476, %r7458, %r766, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3144, %r3145}, [%rd9+8];
	// inline asm
	prmt.b32 %r7477, %r3145, %r3144, %r6;
	// inline asm
	ld.local.u32 	%r3007, [%rd9+8];
	ld.local.u32 	%r3008, [%rd9+4];
	// inline asm
	prmt.b32 %r7478, %r3007, %r3008, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3146, %r3147}, [%rd9];
	// inline asm
	prmt.b32 %r7471, %r3147, %r3146, %r6;
	// inline asm
	ld.local.u32 	%r3015, [%rd9];
	ld.local.u32 	%r3016, [%rd8+12];
	// inline asm
	prmt.b32 %r7472, %r3015, %r3016, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3148, %r3149}, [%rd8+8];
	// inline asm
	prmt.b32 %r7473, %r3149, %r3148, %r6;
	// inline asm
	ld.local.u32 	%r3023, [%rd8+8];
	ld.local.u32 	%r3024, [%rd8+4];
	// inline asm
	prmt.b32 %r7474, %r3023, %r3024, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3150, %r3151}, [%rd8];
	// inline asm
	prmt.b32 %r7467, %r3151, %r3150, %r6;
	// inline asm
	ld.local.u32 	%r3031, [%rd8];
	ld.local.u32 	%r3032, [%rd7+12];
	// inline asm
	prmt.b32 %r7468, %r3031, %r3032, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3152, %r3153}, [%rd7+8];
	// inline asm
	prmt.b32 %r7469, %r3153, %r3152, %r6;
	// inline asm
	ld.local.u32 	%r3039, [%rd7+8];
	ld.local.u32 	%r3040, [%rd7+4];
	// inline asm
	prmt.b32 %r7470, %r3039, %r3040, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3154, %r3155}, [%rd7];
	// inline asm
	prmt.b32 %r7463, %r3155, %r3154, %r6;
	// inline asm
	ld.local.u32 	%r3047, [%rd7];
	ld.local.u32 	%r3048, [%rd6+12];
	// inline asm
	prmt.b32 %r7464, %r3047, %r3048, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3156, %r3157}, [%rd6+8];
	// inline asm
	prmt.b32 %r7465, %r3157, %r3156, %r6;
	// inline asm
	ld.local.u32 	%r3055, [%rd6+8];
	ld.local.u32 	%r3056, [%rd6+4];
	// inline asm
	prmt.b32 %r7466, %r3055, %r3056, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3158, %r3159}, [%rd6];
	// inline asm
	prmt.b32 %r7459, %r3159, %r3158, %r6;
	// inline asm
	ld.local.u32 	%r3063, [%rd6];
	ld.local.u32 	%r3064, [%rd5+12];
	// inline asm
	prmt.b32 %r7460, %r3063, %r3064, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3160, %r3161}, [%rd5+8];
	// inline asm
	prmt.b32 %r7461, %r3161, %r3160, %r6;
	// inline asm
	ld.local.u32 	%r3071, [%rd5+8];
	ld.local.u32 	%r3072, [%rd5+4];
	// inline asm
	prmt.b32 %r7462, %r3071, %r3072, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3162, %r3163}, [%rd5];
	// inline asm
	prmt.b32 %r3074, %r3163, %r3162, %r6;
	// inline asm
	st.local.u32 	[%rd9+12], %r3074;
	ld.local.u32 	%r3079, [%rd5];
	ld.local.u32 	%r3080, [%rd4+12];
	// inline asm
	prmt.b32 %r3078, %r3079, %r3080, %r6;
	// inline asm
	st.local.u32 	[%rd9+8], %r3078;
	ld.local.v2.u32 	{%r3164, %r3165}, [%rd4+8];
	// inline asm
	prmt.b32 %r3082, %r3165, %r3164, %r6;
	// inline asm
	st.local.u32 	[%rd9+4], %r3082;
	ld.local.u32 	%r3087, [%rd4+8];
	ld.local.u32 	%r3088, [%rd4+4];
	// inline asm
	prmt.b32 %r3086, %r3087, %r3088, %r6;
	// inline asm
	st.local.u32 	[%rd9], %r3086;
	ld.local.v2.u32 	{%r3166, %r3167}, [%rd4];
	// inline asm
	prmt.b32 %r3090, %r3167, %r3166, %r6;
	// inline asm
	st.local.u32 	[%rd8+12], %r3090;
	ld.local.u32 	%r3095, [%rd4];
	ld.local.u32 	%r3096, [%rd3+12];
	// inline asm
	prmt.b32 %r3094, %r3095, %r3096, %r6;
	// inline asm
	st.local.u32 	[%rd8+8], %r3094;
	ld.local.v2.u32 	{%r3168, %r3169}, [%rd3+8];
	// inline asm
	prmt.b32 %r3098, %r3169, %r3168, %r6;
	// inline asm
	st.local.u32 	[%rd8+4], %r3098;
	ld.local.u32 	%r3103, [%rd3+8];
	ld.local.u32 	%r3104, [%rd3+4];
	// inline asm
	prmt.b32 %r3102, %r3103, %r3104, %r6;
	// inline asm
	st.local.u32 	[%rd8], %r3102;
	ld.local.v2.u32 	{%r3170, %r3171}, [%rd3];
	// inline asm
	prmt.b32 %r3106, %r3171, %r3170, %r6;
	// inline asm
	st.local.u32 	[%rd7+12], %r3106;
	ld.local.u32 	%r3111, [%rd3];
	ld.local.u32 	%r3112, [%rd2+12];
	// inline asm
	prmt.b32 %r3110, %r3111, %r3112, %r6;
	// inline asm
	st.local.u32 	[%rd7+8], %r3110;
	ld.local.v2.u32 	{%r3172, %r3173}, [%rd2+8];
	// inline asm
	prmt.b32 %r3114, %r3173, %r3172, %r6;
	// inline asm
	st.local.u32 	[%rd7+4], %r3114;
	ld.local.u32 	%r3119, [%rd2+8];
	ld.local.u32 	%r3120, [%rd2+4];
	// inline asm
	prmt.b32 %r3118, %r3119, %r3120, %r6;
	// inline asm
	st.local.u32 	[%rd7], %r3118;
	ld.local.v2.u32 	{%r3174, %r3175}, [%rd2];
	// inline asm
	prmt.b32 %r3122, %r3175, %r3174, %r6;
	// inline asm
	st.local.u32 	[%rd6+12], %r3122;
	ld.local.u32 	%r3127, [%rd2];
	// inline asm
	prmt.b32 %r3126, %r3127, %r7458, %r6;
	// inline asm
	st.local.u32 	[%rd6+8], %r3126;
	st.local.v2.u32 	[%rd6], {%r7458, %r7458};
	st.local.u32 	[%rd5+12], %r7458;
	st.local.u32 	[%rd5+8], %r7458;
	st.local.u32 	[%rd5+4], %r7458;
	st.local.u32 	[%rd5], %r7458;
	st.local.u32 	[%rd4+12], %r7458;
	st.local.u32 	[%rd4+8], %r7458;
	st.local.u32 	[%rd4+4], %r7458;
	st.local.u32 	[%rd4], %r7458;
	st.local.u32 	[%rd3+12], %r7458;
	st.local.u32 	[%rd3+8], %r7458;
	st.local.u32 	[%rd3+4], %r7458;
	st.local.u32 	[%rd3], %r7458;
	st.local.u32 	[%rd2+12], %r7458;
	st.local.u32 	[%rd2+8], %r7458;
	mov.u64 	%rd201, 0;
	st.local.u32 	[%rd2+4], %rd201;
	st.local.u32 	[%rd2], %rd201;
	mov.u32 	%r7475, %r7458;
	bra.uni 	BB3_84;

BB3_26:
	setp.eq.s32	%p34, %r768, 10;
	@%p34 bra 	BB3_77;
	bra.uni 	BB3_27;

BB3_77:
	mov.u32 	%r7458, 0;
	// inline asm
	prmt.b32 %r7468, %r7458, %r766, %r6;
	// inline asm
	ld.local.v2.u32 	{%r4604, %r4605}, [%rd9+8];
	// inline asm
	prmt.b32 %r7469, %r4605, %r4604, %r6;
	// inline asm
	ld.local.u32 	%r4459, [%rd9+8];
	ld.local.u32 	%r4460, [%rd9+4];
	// inline asm
	prmt.b32 %r7470, %r4459, %r4460, %r6;
	// inline asm
	ld.local.v2.u32 	{%r4606, %r4607}, [%rd9];
	// inline asm
	prmt.b32 %r7463, %r4607, %r4606, %r6;
	// inline asm
	ld.local.u32 	%r4467, [%rd9];
	ld.local.u32 	%r4468, [%rd8+12];
	// inline asm
	prmt.b32 %r7464, %r4467, %r4468, %r6;
	// inline asm
	ld.local.v2.u32 	{%r4608, %r4609}, [%rd8+8];
	// inline asm
	prmt.b32 %r7465, %r4609, %r4608, %r6;
	// inline asm
	ld.local.u32 	%r4475, [%rd8+8];
	ld.local.u32 	%r4476, [%rd8+4];
	// inline asm
	prmt.b32 %r7466, %r4475, %r4476, %r6;
	// inline asm
	ld.local.v2.u32 	{%r4610, %r4611}, [%rd8];
	// inline asm
	prmt.b32 %r7459, %r4611, %r4610, %r6;
	// inline asm
	ld.local.u32 	%r4483, [%rd8];
	ld.local.u32 	%r4484, [%rd7+12];
	// inline asm
	prmt.b32 %r7460, %r4483, %r4484, %r6;
	// inline asm
	ld.local.v2.u32 	{%r4612, %r4613}, [%rd7+8];
	// inline asm
	prmt.b32 %r7461, %r4613, %r4612, %r6;
	// inline asm
	ld.local.u32 	%r4491, [%rd7+8];
	ld.local.u32 	%r4492, [%rd7+4];
	// inline asm
	prmt.b32 %r7462, %r4491, %r4492, %r6;
	// inline asm
	ld.local.v2.u32 	{%r4614, %r4615}, [%rd7];
	// inline asm
	prmt.b32 %r4494, %r4615, %r4614, %r6;
	// inline asm
	st.local.u32 	[%rd9+12], %r4494;
	ld.local.u32 	%r4499, [%rd7];
	ld.local.u32 	%r4500, [%rd6+12];
	// inline asm
	prmt.b32 %r4498, %r4499, %r4500, %r6;
	// inline asm
	st.local.u32 	[%rd9+8], %r4498;
	ld.local.v2.u32 	{%r4616, %r4617}, [%rd6+8];
	// inline asm
	prmt.b32 %r4502, %r4617, %r4616, %r6;
	// inline asm
	st.local.u32 	[%rd9+4], %r4502;
	ld.local.u32 	%r4507, [%rd6+8];
	ld.local.u32 	%r4508, [%rd6+4];
	// inline asm
	prmt.b32 %r4506, %r4507, %r4508, %r6;
	// inline asm
	st.local.u32 	[%rd9], %r4506;
	ld.local.v2.u32 	{%r4618, %r4619}, [%rd6];
	// inline asm
	prmt.b32 %r4510, %r4619, %r4618, %r6;
	// inline asm
	st.local.u32 	[%rd8+12], %r4510;
	ld.local.u32 	%r4515, [%rd6];
	ld.local.u32 	%r4516, [%rd5+12];
	// inline asm
	prmt.b32 %r4514, %r4515, %r4516, %r6;
	// inline asm
	st.local.u32 	[%rd8+8], %r4514;
	ld.local.v2.u32 	{%r4620, %r4621}, [%rd5+8];
	// inline asm
	prmt.b32 %r4518, %r4621, %r4620, %r6;
	// inline asm
	st.local.u32 	[%rd8+4], %r4518;
	ld.local.u32 	%r4523, [%rd5+8];
	ld.local.u32 	%r4524, [%rd5+4];
	// inline asm
	prmt.b32 %r4522, %r4523, %r4524, %r6;
	// inline asm
	st.local.u32 	[%rd8], %r4522;
	ld.local.v2.u32 	{%r4622, %r4623}, [%rd5];
	// inline asm
	prmt.b32 %r4526, %r4623, %r4622, %r6;
	// inline asm
	st.local.u32 	[%rd7+12], %r4526;
	ld.local.u32 	%r4531, [%rd5];
	ld.local.u32 	%r4532, [%rd4+12];
	// inline asm
	prmt.b32 %r4530, %r4531, %r4532, %r6;
	// inline asm
	st.local.u32 	[%rd7+8], %r4530;
	ld.local.v2.u32 	{%r4624, %r4625}, [%rd4+8];
	// inline asm
	prmt.b32 %r4534, %r4625, %r4624, %r6;
	// inline asm
	st.local.u32 	[%rd7+4], %r4534;
	ld.local.u32 	%r4539, [%rd4+8];
	ld.local.u32 	%r4540, [%rd4+4];
	// inline asm
	prmt.b32 %r4538, %r4539, %r4540, %r6;
	// inline asm
	st.local.u32 	[%rd7], %r4538;
	ld.local.v2.u32 	{%r4626, %r4627}, [%rd4];
	// inline asm
	prmt.b32 %r4542, %r4627, %r4626, %r6;
	// inline asm
	st.local.u32 	[%rd6+12], %r4542;
	ld.local.u32 	%r4547, [%rd4];
	ld.local.u32 	%r4548, [%rd3+12];
	// inline asm
	prmt.b32 %r4546, %r4547, %r4548, %r6;
	// inline asm
	st.local.u32 	[%rd6+8], %r4546;
	ld.local.v2.u32 	{%r4628, %r4629}, [%rd3+8];
	// inline asm
	prmt.b32 %r4550, %r4629, %r4628, %r6;
	// inline asm
	st.local.u32 	[%rd6+4], %r4550;
	ld.local.u32 	%r4555, [%rd3+8];
	ld.local.u32 	%r4556, [%rd3+4];
	// inline asm
	prmt.b32 %r4554, %r4555, %r4556, %r6;
	// inline asm
	st.local.u32 	[%rd6], %r4554;
	ld.local.v2.u32 	{%r4630, %r4631}, [%rd3];
	// inline asm
	prmt.b32 %r4558, %r4631, %r4630, %r6;
	// inline asm
	st.local.u32 	[%rd5+12], %r4558;
	ld.local.u32 	%r4563, [%rd3];
	ld.local.u32 	%r4564, [%rd2+12];
	// inline asm
	prmt.b32 %r4562, %r4563, %r4564, %r6;
	// inline asm
	st.local.u32 	[%rd5+8], %r4562;
	ld.local.v2.u32 	{%r4632, %r4633}, [%rd2+8];
	// inline asm
	prmt.b32 %r4566, %r4633, %r4632, %r6;
	// inline asm
	st.local.u32 	[%rd5+4], %r4566;
	ld.local.u32 	%r4571, [%rd2+8];
	ld.local.u32 	%r4572, [%rd2+4];
	// inline asm
	prmt.b32 %r4570, %r4571, %r4572, %r6;
	// inline asm
	st.local.u32 	[%rd5], %r4570;
	ld.local.v2.u32 	{%r4634, %r4635}, [%rd2];
	// inline asm
	prmt.b32 %r4574, %r4635, %r4634, %r6;
	// inline asm
	st.local.u32 	[%rd4+12], %r4574;
	ld.local.u32 	%r4579, [%rd2];
	// inline asm
	prmt.b32 %r4578, %r4579, %r7458, %r6;
	// inline asm
	st.local.u32 	[%rd4+8], %r4578;
	st.local.v2.u32 	[%rd4], {%r7458, %r7458};
	st.local.u32 	[%rd3+12], %r7458;
	st.local.u32 	[%rd3+8], %r7458;
	st.local.u32 	[%rd3+4], %r7458;
	st.local.u32 	[%rd3], %r7458;
	st.local.u32 	[%rd2+12], %r7458;
	st.local.u32 	[%rd2+8], %r7458;
	mov.u64 	%rd209, 0;
	st.local.u32 	[%rd2+4], %rd209;
	st.local.u32 	[%rd2], %rd209;
	mov.u32 	%r7467, %r7458;
	bra.uni 	BB3_82;

BB3_57:
	setp.eq.s32	%p11, %r768, 26;
	@%p11 bra 	BB3_69;
	bra.uni 	BB3_58;

BB3_69:
	mov.u32 	%r7458, 0;
	// inline asm
	prmt.b32 %r7484, %r7458, %r766, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1748, %r1749}, [%rd9+8];
	// inline asm
	prmt.b32 %r7485, %r1749, %r1748, %r6;
	// inline asm
	ld.local.u32 	%r1619, [%rd9+8];
	ld.local.u32 	%r1620, [%rd9+4];
	// inline asm
	prmt.b32 %r7486, %r1619, %r1620, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1750, %r1751}, [%rd9];
	// inline asm
	prmt.b32 %r7479, %r1751, %r1750, %r6;
	// inline asm
	ld.local.u32 	%r1627, [%rd9];
	ld.local.u32 	%r1628, [%rd8+12];
	// inline asm
	prmt.b32 %r7480, %r1627, %r1628, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1752, %r1753}, [%rd8+8];
	// inline asm
	prmt.b32 %r7481, %r1753, %r1752, %r6;
	// inline asm
	ld.local.u32 	%r1635, [%rd8+8];
	ld.local.u32 	%r1636, [%rd8+4];
	// inline asm
	prmt.b32 %r7482, %r1635, %r1636, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1754, %r1755}, [%rd8];
	// inline asm
	prmt.b32 %r7475, %r1755, %r1754, %r6;
	// inline asm
	ld.local.u32 	%r1643, [%rd8];
	ld.local.u32 	%r1644, [%rd7+12];
	// inline asm
	prmt.b32 %r7476, %r1643, %r1644, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1756, %r1757}, [%rd7+8];
	// inline asm
	prmt.b32 %r7477, %r1757, %r1756, %r6;
	// inline asm
	ld.local.u32 	%r1651, [%rd7+8];
	ld.local.u32 	%r1652, [%rd7+4];
	// inline asm
	prmt.b32 %r7478, %r1651, %r1652, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1758, %r1759}, [%rd7];
	// inline asm
	prmt.b32 %r7471, %r1759, %r1758, %r6;
	// inline asm
	ld.local.u32 	%r1659, [%rd7];
	ld.local.u32 	%r1660, [%rd6+12];
	// inline asm
	prmt.b32 %r7472, %r1659, %r1660, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1760, %r1761}, [%rd6+8];
	// inline asm
	prmt.b32 %r7473, %r1761, %r1760, %r6;
	// inline asm
	ld.local.u32 	%r1667, [%rd6+8];
	ld.local.u32 	%r1668, [%rd6+4];
	// inline asm
	prmt.b32 %r7474, %r1667, %r1668, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1762, %r1763}, [%rd6];
	// inline asm
	prmt.b32 %r7467, %r1763, %r1762, %r6;
	// inline asm
	ld.local.u32 	%r1675, [%rd6];
	ld.local.u32 	%r1676, [%rd5+12];
	// inline asm
	prmt.b32 %r7468, %r1675, %r1676, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1764, %r1765}, [%rd5+8];
	// inline asm
	prmt.b32 %r7469, %r1765, %r1764, %r6;
	// inline asm
	ld.local.u32 	%r1683, [%rd5+8];
	ld.local.u32 	%r1684, [%rd5+4];
	// inline asm
	prmt.b32 %r7470, %r1683, %r1684, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1766, %r1767}, [%rd5];
	// inline asm
	prmt.b32 %r7463, %r1767, %r1766, %r6;
	// inline asm
	ld.local.u32 	%r1691, [%rd5];
	ld.local.u32 	%r1692, [%rd4+12];
	// inline asm
	prmt.b32 %r7464, %r1691, %r1692, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1768, %r1769}, [%rd4+8];
	// inline asm
	prmt.b32 %r7465, %r1769, %r1768, %r6;
	// inline asm
	ld.local.u32 	%r1699, [%rd4+8];
	ld.local.u32 	%r1700, [%rd4+4];
	// inline asm
	prmt.b32 %r7466, %r1699, %r1700, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1770, %r1771}, [%rd4];
	// inline asm
	prmt.b32 %r7459, %r1771, %r1770, %r6;
	// inline asm
	ld.local.u32 	%r1707, [%rd4];
	ld.local.u32 	%r1708, [%rd3+12];
	// inline asm
	prmt.b32 %r7460, %r1707, %r1708, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1772, %r1773}, [%rd3+8];
	// inline asm
	prmt.b32 %r7461, %r1773, %r1772, %r6;
	// inline asm
	ld.local.u32 	%r1715, [%rd3+8];
	ld.local.u32 	%r1716, [%rd3+4];
	// inline asm
	prmt.b32 %r7462, %r1715, %r1716, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1774, %r1775}, [%rd3];
	// inline asm
	prmt.b32 %r1718, %r1775, %r1774, %r6;
	// inline asm
	st.local.u32 	[%rd9+12], %r1718;
	ld.local.u32 	%r1723, [%rd3];
	ld.local.u32 	%r1724, [%rd2+12];
	// inline asm
	prmt.b32 %r1722, %r1723, %r1724, %r6;
	// inline asm
	st.local.u32 	[%rd9+8], %r1722;
	ld.local.v2.u32 	{%r1776, %r1777}, [%rd2+8];
	// inline asm
	prmt.b32 %r1726, %r1777, %r1776, %r6;
	// inline asm
	st.local.u32 	[%rd9+4], %r1726;
	ld.local.u32 	%r1731, [%rd2+8];
	ld.local.u32 	%r1732, [%rd2+4];
	// inline asm
	prmt.b32 %r1730, %r1731, %r1732, %r6;
	// inline asm
	st.local.u32 	[%rd9], %r1730;
	ld.local.v2.u32 	{%r1778, %r1779}, [%rd2];
	// inline asm
	prmt.b32 %r1734, %r1779, %r1778, %r6;
	// inline asm
	st.local.u32 	[%rd8+12], %r1734;
	ld.local.u32 	%r1739, [%rd2];
	// inline asm
	prmt.b32 %r1738, %r1739, %r7458, %r6;
	// inline asm
	st.local.u32 	[%rd8+8], %r1738;
	st.local.v2.u32 	[%rd8], {%r7458, %r7458};
	st.local.u32 	[%rd7+12], %r7458;
	st.local.u32 	[%rd7+8], %r7458;
	st.local.u32 	[%rd7+4], %r7458;
	st.local.u32 	[%rd7], %r7458;
	st.local.u32 	[%rd6+12], %r7458;
	st.local.u32 	[%rd6+8], %r7458;
	st.local.u32 	[%rd6+4], %r7458;
	st.local.u32 	[%rd6], %r7458;
	st.local.u32 	[%rd5+12], %r7458;
	st.local.u32 	[%rd5+8], %r7458;
	st.local.u32 	[%rd5+4], %r7458;
	st.local.u32 	[%rd5], %r7458;
	st.local.u32 	[%rd4+12], %r7458;
	st.local.u32 	[%rd4+8], %r7458;
	st.local.u32 	[%rd4+4], %r7458;
	st.local.u32 	[%rd4], %r7458;
	st.local.u32 	[%rd3+12], %r7458;
	st.local.u32 	[%rd3+8], %r7458;
	st.local.u32 	[%rd3+4], %r7458;
	st.local.u32 	[%rd3], %r7458;
	st.local.u32 	[%rd2+12], %r7458;
	st.local.u32 	[%rd2+8], %r7458;
	mov.u64 	%rd193, 0;
	st.local.u32 	[%rd2+4], %rd193;
	st.local.u32 	[%rd2], %rd193;
	mov.u32 	%r7483, %r7458;
	bra.uni 	BB3_86;

BB3_18:
	setp.eq.s32	%p40, %r768, 6;
	@%p40 bra 	BB3_79;
	bra.uni 	BB3_19;

BB3_79:
	mov.u32 	%r7458, 0;
	// inline asm
	prmt.b32 %r7464, %r7458, %r766, %r6;
	// inline asm
	ld.local.v2.u32 	{%r5358, %r5359}, [%rd9+8];
	// inline asm
	prmt.b32 %r7465, %r5359, %r5358, %r6;
	// inline asm
	ld.local.u32 	%r5209, [%rd9+8];
	ld.local.u32 	%r5210, [%rd9+4];
	// inline asm
	prmt.b32 %r7466, %r5209, %r5210, %r6;
	// inline asm
	ld.local.v2.u32 	{%r5360, %r5361}, [%rd9];
	// inline asm
	prmt.b32 %r7459, %r5361, %r5360, %r6;
	// inline asm
	ld.local.u32 	%r5217, [%rd9];
	ld.local.u32 	%r5218, [%rd8+12];
	// inline asm
	prmt.b32 %r7460, %r5217, %r5218, %r6;
	// inline asm
	ld.local.v2.u32 	{%r5362, %r5363}, [%rd8+8];
	// inline asm
	prmt.b32 %r7461, %r5363, %r5362, %r6;
	// inline asm
	ld.local.u32 	%r5225, [%rd8+8];
	ld.local.u32 	%r5226, [%rd8+4];
	// inline asm
	prmt.b32 %r7462, %r5225, %r5226, %r6;
	// inline asm
	ld.local.v2.u32 	{%r5364, %r5365}, [%rd8];
	// inline asm
	prmt.b32 %r5228, %r5365, %r5364, %r6;
	// inline asm
	st.local.u32 	[%rd9+12], %r5228;
	ld.local.u32 	%r5233, [%rd8];
	ld.local.u32 	%r5234, [%rd7+12];
	// inline asm
	prmt.b32 %r5232, %r5233, %r5234, %r6;
	// inline asm
	st.local.u32 	[%rd9+8], %r5232;
	ld.local.v2.u32 	{%r5366, %r5367}, [%rd7+8];
	// inline asm
	prmt.b32 %r5236, %r5367, %r5366, %r6;
	// inline asm
	st.local.u32 	[%rd9+4], %r5236;
	ld.local.u32 	%r5241, [%rd7+8];
	ld.local.u32 	%r5242, [%rd7+4];
	// inline asm
	prmt.b32 %r5240, %r5241, %r5242, %r6;
	// inline asm
	st.local.u32 	[%rd9], %r5240;
	ld.local.v2.u32 	{%r5368, %r5369}, [%rd7];
	// inline asm
	prmt.b32 %r5244, %r5369, %r5368, %r6;
	// inline asm
	st.local.u32 	[%rd8+12], %r5244;
	ld.local.u32 	%r5249, [%rd7];
	ld.local.u32 	%r5250, [%rd6+12];
	// inline asm
	prmt.b32 %r5248, %r5249, %r5250, %r6;
	// inline asm
	st.local.u32 	[%rd8+8], %r5248;
	ld.local.v2.u32 	{%r5370, %r5371}, [%rd6+8];
	// inline asm
	prmt.b32 %r5252, %r5371, %r5370, %r6;
	// inline asm
	st.local.u32 	[%rd8+4], %r5252;
	ld.local.u32 	%r5257, [%rd6+8];
	ld.local.u32 	%r5258, [%rd6+4];
	// inline asm
	prmt.b32 %r5256, %r5257, %r5258, %r6;
	// inline asm
	st.local.u32 	[%rd8], %r5256;
	ld.local.v2.u32 	{%r5372, %r5373}, [%rd6];
	// inline asm
	prmt.b32 %r5260, %r5373, %r5372, %r6;
	// inline asm
	st.local.u32 	[%rd7+12], %r5260;
	ld.local.u32 	%r5265, [%rd6];
	ld.local.u32 	%r5266, [%rd5+12];
	// inline asm
	prmt.b32 %r5264, %r5265, %r5266, %r6;
	// inline asm
	st.local.u32 	[%rd7+8], %r5264;
	ld.local.v2.u32 	{%r5374, %r5375}, [%rd5+8];
	// inline asm
	prmt.b32 %r5268, %r5375, %r5374, %r6;
	// inline asm
	st.local.u32 	[%rd7+4], %r5268;
	ld.local.u32 	%r5273, [%rd5+8];
	ld.local.u32 	%r5274, [%rd5+4];
	// inline asm
	prmt.b32 %r5272, %r5273, %r5274, %r6;
	// inline asm
	st.local.u32 	[%rd7], %r5272;
	ld.local.v2.u32 	{%r5376, %r5377}, [%rd5];
	// inline asm
	prmt.b32 %r5276, %r5377, %r5376, %r6;
	// inline asm
	st.local.u32 	[%rd6+12], %r5276;
	ld.local.u32 	%r5281, [%rd5];
	ld.local.u32 	%r5282, [%rd4+12];
	// inline asm
	prmt.b32 %r5280, %r5281, %r5282, %r6;
	// inline asm
	st.local.u32 	[%rd6+8], %r5280;
	ld.local.v2.u32 	{%r5378, %r5379}, [%rd4+8];
	// inline asm
	prmt.b32 %r5284, %r5379, %r5378, %r6;
	// inline asm
	st.local.u32 	[%rd6+4], %r5284;
	ld.local.u32 	%r5289, [%rd4+8];
	ld.local.u32 	%r5290, [%rd4+4];
	// inline asm
	prmt.b32 %r5288, %r5289, %r5290, %r6;
	// inline asm
	st.local.u32 	[%rd6], %r5288;
	ld.local.v2.u32 	{%r5380, %r5381}, [%rd4];
	// inline asm
	prmt.b32 %r5292, %r5381, %r5380, %r6;
	// inline asm
	st.local.u32 	[%rd5+12], %r5292;
	ld.local.u32 	%r5297, [%rd4];
	ld.local.u32 	%r5298, [%rd3+12];
	// inline asm
	prmt.b32 %r5296, %r5297, %r5298, %r6;
	// inline asm
	st.local.u32 	[%rd5+8], %r5296;
	ld.local.v2.u32 	{%r5382, %r5383}, [%rd3+8];
	// inline asm
	prmt.b32 %r5300, %r5383, %r5382, %r6;
	// inline asm
	st.local.u32 	[%rd5+4], %r5300;
	ld.local.u32 	%r5305, [%rd3+8];
	ld.local.u32 	%r5306, [%rd3+4];
	// inline asm
	prmt.b32 %r5304, %r5305, %r5306, %r6;
	// inline asm
	st.local.u32 	[%rd5], %r5304;
	ld.local.v2.u32 	{%r5384, %r5385}, [%rd3];
	// inline asm
	prmt.b32 %r5308, %r5385, %r5384, %r6;
	// inline asm
	st.local.u32 	[%rd4+12], %r5308;
	ld.local.u32 	%r5313, [%rd3];
	ld.local.u32 	%r5314, [%rd2+12];
	// inline asm
	prmt.b32 %r5312, %r5313, %r5314, %r6;
	// inline asm
	st.local.u32 	[%rd4+8], %r5312;
	ld.local.v2.u32 	{%r5386, %r5387}, [%rd2+8];
	// inline asm
	prmt.b32 %r5316, %r5387, %r5386, %r6;
	// inline asm
	st.local.u32 	[%rd4+4], %r5316;
	ld.local.u32 	%r5321, [%rd2+8];
	ld.local.u32 	%r5322, [%rd2+4];
	// inline asm
	prmt.b32 %r5320, %r5321, %r5322, %r6;
	// inline asm
	st.local.u32 	[%rd4], %r5320;
	ld.local.v2.u32 	{%r5388, %r5389}, [%rd2];
	// inline asm
	prmt.b32 %r5324, %r5389, %r5388, %r6;
	// inline asm
	st.local.u32 	[%rd3+12], %r5324;
	ld.local.u32 	%r5329, [%rd2];
	// inline asm
	prmt.b32 %r5328, %r5329, %r7458, %r6;
	// inline asm
	st.local.u32 	[%rd3+8], %r5328;
	st.local.v2.u32 	[%rd3], {%r7458, %r7458};
	st.local.u32 	[%rd2+12], %r7458;
	st.local.u32 	[%rd2+8], %r7458;
	mov.u64 	%rd213, 0;
	st.local.u32 	[%rd2+4], %rd213;
	st.local.u32 	[%rd2], %rd213;
	mov.u32 	%r7463, %r7458;
	bra.uni 	BB3_81;

BB3_49:
	setp.eq.s32	%p17, %r768, 22;
	@%p17 bra 	BB3_71;
	bra.uni 	BB3_50;

BB3_71:
	mov.u32 	%r7458, 0;
	// inline asm
	prmt.b32 %r7480, %r7458, %r766, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2438, %r2439}, [%rd9+8];
	// inline asm
	prmt.b32 %r7481, %r2439, %r2438, %r6;
	// inline asm
	ld.local.u32 	%r2305, [%rd9+8];
	ld.local.u32 	%r2306, [%rd9+4];
	// inline asm
	prmt.b32 %r7482, %r2305, %r2306, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2440, %r2441}, [%rd9];
	// inline asm
	prmt.b32 %r7475, %r2441, %r2440, %r6;
	// inline asm
	ld.local.u32 	%r2313, [%rd9];
	ld.local.u32 	%r2314, [%rd8+12];
	// inline asm
	prmt.b32 %r7476, %r2313, %r2314, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2442, %r2443}, [%rd8+8];
	// inline asm
	prmt.b32 %r7477, %r2443, %r2442, %r6;
	// inline asm
	ld.local.u32 	%r2321, [%rd8+8];
	ld.local.u32 	%r2322, [%rd8+4];
	// inline asm
	prmt.b32 %r7478, %r2321, %r2322, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2444, %r2445}, [%rd8];
	// inline asm
	prmt.b32 %r7471, %r2445, %r2444, %r6;
	// inline asm
	ld.local.u32 	%r2329, [%rd8];
	ld.local.u32 	%r2330, [%rd7+12];
	// inline asm
	prmt.b32 %r7472, %r2329, %r2330, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2446, %r2447}, [%rd7+8];
	// inline asm
	prmt.b32 %r7473, %r2447, %r2446, %r6;
	// inline asm
	ld.local.u32 	%r2337, [%rd7+8];
	ld.local.u32 	%r2338, [%rd7+4];
	// inline asm
	prmt.b32 %r7474, %r2337, %r2338, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2448, %r2449}, [%rd7];
	// inline asm
	prmt.b32 %r7467, %r2449, %r2448, %r6;
	// inline asm
	ld.local.u32 	%r2345, [%rd7];
	ld.local.u32 	%r2346, [%rd6+12];
	// inline asm
	prmt.b32 %r7468, %r2345, %r2346, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2450, %r2451}, [%rd6+8];
	// inline asm
	prmt.b32 %r7469, %r2451, %r2450, %r6;
	// inline asm
	ld.local.u32 	%r2353, [%rd6+8];
	ld.local.u32 	%r2354, [%rd6+4];
	// inline asm
	prmt.b32 %r7470, %r2353, %r2354, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2452, %r2453}, [%rd6];
	// inline asm
	prmt.b32 %r7463, %r2453, %r2452, %r6;
	// inline asm
	ld.local.u32 	%r2361, [%rd6];
	ld.local.u32 	%r2362, [%rd5+12];
	// inline asm
	prmt.b32 %r7464, %r2361, %r2362, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2454, %r2455}, [%rd5+8];
	// inline asm
	prmt.b32 %r7465, %r2455, %r2454, %r6;
	// inline asm
	ld.local.u32 	%r2369, [%rd5+8];
	ld.local.u32 	%r2370, [%rd5+4];
	// inline asm
	prmt.b32 %r7466, %r2369, %r2370, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2456, %r2457}, [%rd5];
	// inline asm
	prmt.b32 %r7459, %r2457, %r2456, %r6;
	// inline asm
	ld.local.u32 	%r2377, [%rd5];
	ld.local.u32 	%r2378, [%rd4+12];
	// inline asm
	prmt.b32 %r7460, %r2377, %r2378, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2458, %r2459}, [%rd4+8];
	// inline asm
	prmt.b32 %r7461, %r2459, %r2458, %r6;
	// inline asm
	ld.local.u32 	%r2385, [%rd4+8];
	ld.local.u32 	%r2386, [%rd4+4];
	// inline asm
	prmt.b32 %r7462, %r2385, %r2386, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2460, %r2461}, [%rd4];
	// inline asm
	prmt.b32 %r2388, %r2461, %r2460, %r6;
	// inline asm
	st.local.u32 	[%rd9+12], %r2388;
	ld.local.u32 	%r2393, [%rd4];
	ld.local.u32 	%r2394, [%rd3+12];
	// inline asm
	prmt.b32 %r2392, %r2393, %r2394, %r6;
	// inline asm
	st.local.u32 	[%rd9+8], %r2392;
	ld.local.v2.u32 	{%r2462, %r2463}, [%rd3+8];
	// inline asm
	prmt.b32 %r2396, %r2463, %r2462, %r6;
	// inline asm
	st.local.u32 	[%rd9+4], %r2396;
	ld.local.u32 	%r2401, [%rd3+8];
	ld.local.u32 	%r2402, [%rd3+4];
	// inline asm
	prmt.b32 %r2400, %r2401, %r2402, %r6;
	// inline asm
	st.local.u32 	[%rd9], %r2400;
	ld.local.v2.u32 	{%r2464, %r2465}, [%rd3];
	// inline asm
	prmt.b32 %r2404, %r2465, %r2464, %r6;
	// inline asm
	st.local.u32 	[%rd8+12], %r2404;
	ld.local.u32 	%r2409, [%rd3];
	ld.local.u32 	%r2410, [%rd2+12];
	// inline asm
	prmt.b32 %r2408, %r2409, %r2410, %r6;
	// inline asm
	st.local.u32 	[%rd8+8], %r2408;
	ld.local.v2.u32 	{%r2466, %r2467}, [%rd2+8];
	// inline asm
	prmt.b32 %r2412, %r2467, %r2466, %r6;
	// inline asm
	st.local.u32 	[%rd8+4], %r2412;
	ld.local.u32 	%r2417, [%rd2+8];
	ld.local.u32 	%r2418, [%rd2+4];
	// inline asm
	prmt.b32 %r2416, %r2417, %r2418, %r6;
	// inline asm
	st.local.u32 	[%rd8], %r2416;
	ld.local.v2.u32 	{%r2468, %r2469}, [%rd2];
	// inline asm
	prmt.b32 %r2420, %r2469, %r2468, %r6;
	// inline asm
	st.local.u32 	[%rd7+12], %r2420;
	ld.local.u32 	%r2425, [%rd2];
	// inline asm
	prmt.b32 %r2424, %r2425, %r7458, %r6;
	// inline asm
	st.local.u32 	[%rd7+8], %r2424;
	st.local.v2.u32 	[%rd7], {%r7458, %r7458};
	st.local.u32 	[%rd6+12], %r7458;
	st.local.u32 	[%rd6+8], %r7458;
	st.local.u32 	[%rd6+4], %r7458;
	st.local.u32 	[%rd6], %r7458;
	st.local.u32 	[%rd5+12], %r7458;
	st.local.u32 	[%rd5+8], %r7458;
	st.local.u32 	[%rd5+4], %r7458;
	st.local.u32 	[%rd5], %r7458;
	st.local.u32 	[%rd4+12], %r7458;
	st.local.u32 	[%rd4+8], %r7458;
	st.local.u32 	[%rd4+4], %r7458;
	st.local.u32 	[%rd4], %r7458;
	st.local.u32 	[%rd3+12], %r7458;
	st.local.u32 	[%rd3+8], %r7458;
	st.local.u32 	[%rd3+4], %r7458;
	st.local.u32 	[%rd3], %r7458;
	st.local.u32 	[%rd2+12], %r7458;
	st.local.u32 	[%rd2+8], %r7458;
	mov.u64 	%rd197, 0;
	st.local.u32 	[%rd2+4], %rd197;
	st.local.u32 	[%rd2], %rd197;
	mov.u32 	%r7479, %r7458;
	bra.uni 	BB3_85;

BB3_33:
	setp.eq.s32	%p29, %r768, 14;
	@%p29 bra 	BB3_75;
	bra.uni 	BB3_34;

BB3_75:
	mov.u32 	%r7458, 0;
	// inline asm
	prmt.b32 %r7472, %r7458, %r766, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3866, %r3867}, [%rd9+8];
	// inline asm
	prmt.b32 %r7473, %r3867, %r3866, %r6;
	// inline asm
	ld.local.u32 	%r3725, [%rd9+8];
	ld.local.u32 	%r3726, [%rd9+4];
	// inline asm
	prmt.b32 %r7474, %r3725, %r3726, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3868, %r3869}, [%rd9];
	// inline asm
	prmt.b32 %r7467, %r3869, %r3868, %r6;
	// inline asm
	ld.local.u32 	%r3733, [%rd9];
	ld.local.u32 	%r3734, [%rd8+12];
	// inline asm
	prmt.b32 %r7468, %r3733, %r3734, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3870, %r3871}, [%rd8+8];
	// inline asm
	prmt.b32 %r7469, %r3871, %r3870, %r6;
	// inline asm
	ld.local.u32 	%r3741, [%rd8+8];
	ld.local.u32 	%r3742, [%rd8+4];
	// inline asm
	prmt.b32 %r7470, %r3741, %r3742, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3872, %r3873}, [%rd8];
	// inline asm
	prmt.b32 %r7463, %r3873, %r3872, %r6;
	// inline asm
	ld.local.u32 	%r3749, [%rd8];
	ld.local.u32 	%r3750, [%rd7+12];
	// inline asm
	prmt.b32 %r7464, %r3749, %r3750, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3874, %r3875}, [%rd7+8];
	// inline asm
	prmt.b32 %r7465, %r3875, %r3874, %r6;
	// inline asm
	ld.local.u32 	%r3757, [%rd7+8];
	ld.local.u32 	%r3758, [%rd7+4];
	// inline asm
	prmt.b32 %r7466, %r3757, %r3758, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3876, %r3877}, [%rd7];
	// inline asm
	prmt.b32 %r7459, %r3877, %r3876, %r6;
	// inline asm
	ld.local.u32 	%r3765, [%rd7];
	ld.local.u32 	%r3766, [%rd6+12];
	// inline asm
	prmt.b32 %r7460, %r3765, %r3766, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3878, %r3879}, [%rd6+8];
	// inline asm
	prmt.b32 %r7461, %r3879, %r3878, %r6;
	// inline asm
	ld.local.u32 	%r3773, [%rd6+8];
	ld.local.u32 	%r3774, [%rd6+4];
	// inline asm
	prmt.b32 %r7462, %r3773, %r3774, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3880, %r3881}, [%rd6];
	// inline asm
	prmt.b32 %r3776, %r3881, %r3880, %r6;
	// inline asm
	st.local.u32 	[%rd9+12], %r3776;
	ld.local.u32 	%r3781, [%rd6];
	ld.local.u32 	%r3782, [%rd5+12];
	// inline asm
	prmt.b32 %r3780, %r3781, %r3782, %r6;
	// inline asm
	st.local.u32 	[%rd9+8], %r3780;
	ld.local.v2.u32 	{%r3882, %r3883}, [%rd5+8];
	// inline asm
	prmt.b32 %r3784, %r3883, %r3882, %r6;
	// inline asm
	st.local.u32 	[%rd9+4], %r3784;
	ld.local.u32 	%r3789, [%rd5+8];
	ld.local.u32 	%r3790, [%rd5+4];
	// inline asm
	prmt.b32 %r3788, %r3789, %r3790, %r6;
	// inline asm
	st.local.u32 	[%rd9], %r3788;
	ld.local.v2.u32 	{%r3884, %r3885}, [%rd5];
	// inline asm
	prmt.b32 %r3792, %r3885, %r3884, %r6;
	// inline asm
	st.local.u32 	[%rd8+12], %r3792;
	ld.local.u32 	%r3797, [%rd5];
	ld.local.u32 	%r3798, [%rd4+12];
	// inline asm
	prmt.b32 %r3796, %r3797, %r3798, %r6;
	// inline asm
	st.local.u32 	[%rd8+8], %r3796;
	ld.local.v2.u32 	{%r3886, %r3887}, [%rd4+8];
	// inline asm
	prmt.b32 %r3800, %r3887, %r3886, %r6;
	// inline asm
	st.local.u32 	[%rd8+4], %r3800;
	ld.local.u32 	%r3805, [%rd4+8];
	ld.local.u32 	%r3806, [%rd4+4];
	// inline asm
	prmt.b32 %r3804, %r3805, %r3806, %r6;
	// inline asm
	st.local.u32 	[%rd8], %r3804;
	ld.local.v2.u32 	{%r3888, %r3889}, [%rd4];
	// inline asm
	prmt.b32 %r3808, %r3889, %r3888, %r6;
	// inline asm
	st.local.u32 	[%rd7+12], %r3808;
	ld.local.u32 	%r3813, [%rd4];
	ld.local.u32 	%r3814, [%rd3+12];
	// inline asm
	prmt.b32 %r3812, %r3813, %r3814, %r6;
	// inline asm
	st.local.u32 	[%rd7+8], %r3812;
	ld.local.v2.u32 	{%r3890, %r3891}, [%rd3+8];
	// inline asm
	prmt.b32 %r3816, %r3891, %r3890, %r6;
	// inline asm
	st.local.u32 	[%rd7+4], %r3816;
	ld.local.u32 	%r3821, [%rd3+8];
	ld.local.u32 	%r3822, [%rd3+4];
	// inline asm
	prmt.b32 %r3820, %r3821, %r3822, %r6;
	// inline asm
	st.local.u32 	[%rd7], %r3820;
	ld.local.v2.u32 	{%r3892, %r3893}, [%rd3];
	// inline asm
	prmt.b32 %r3824, %r3893, %r3892, %r6;
	// inline asm
	st.local.u32 	[%rd6+12], %r3824;
	ld.local.u32 	%r3829, [%rd3];
	ld.local.u32 	%r3830, [%rd2+12];
	// inline asm
	prmt.b32 %r3828, %r3829, %r3830, %r6;
	// inline asm
	st.local.u32 	[%rd6+8], %r3828;
	ld.local.v2.u32 	{%r3894, %r3895}, [%rd2+8];
	// inline asm
	prmt.b32 %r3832, %r3895, %r3894, %r6;
	// inline asm
	st.local.u32 	[%rd6+4], %r3832;
	ld.local.u32 	%r3837, [%rd2+8];
	ld.local.u32 	%r3838, [%rd2+4];
	// inline asm
	prmt.b32 %r3836, %r3837, %r3838, %r6;
	// inline asm
	st.local.u32 	[%rd6], %r3836;
	ld.local.v2.u32 	{%r3896, %r3897}, [%rd2];
	// inline asm
	prmt.b32 %r3840, %r3897, %r3896, %r6;
	// inline asm
	st.local.u32 	[%rd5+12], %r3840;
	ld.local.u32 	%r3845, [%rd2];
	// inline asm
	prmt.b32 %r3844, %r3845, %r7458, %r6;
	// inline asm
	st.local.u32 	[%rd5+8], %r3844;
	st.local.v2.u32 	[%rd5], {%r7458, %r7458};
	st.local.u32 	[%rd4+12], %r7458;
	st.local.u32 	[%rd4+8], %r7458;
	st.local.u32 	[%rd4+4], %r7458;
	st.local.u32 	[%rd4], %r7458;
	st.local.u32 	[%rd3+12], %r7458;
	st.local.u32 	[%rd3+8], %r7458;
	st.local.u32 	[%rd3+4], %r7458;
	st.local.u32 	[%rd3], %r7458;
	st.local.u32 	[%rd2+12], %r7458;
	st.local.u32 	[%rd2+8], %r7458;
	mov.u64 	%rd205, 0;
	st.local.u32 	[%rd2+4], %rd205;
	st.local.u32 	[%rd2], %rd205;
	mov.u32 	%r7471, %r7458;
	bra.uni 	BB3_83;

BB3_64:
	setp.eq.s32	%p6, %r768, 30;
	@%p6 bra 	BB3_67;
	bra.uni 	BB3_65;

BB3_67:
	mov.u32 	%r7458, 0;
	// inline asm
	prmt.b32 %r7488, %r7458, %r766, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1074, %r1075}, [%rd9+8];
	// inline asm
	prmt.b32 %r7489, %r1075, %r1074, %r6;
	// inline asm
	ld.local.u32 	%r949, [%rd9+8];
	ld.local.u32 	%r950, [%rd9+4];
	// inline asm
	prmt.b32 %r7490, %r949, %r950, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1076, %r1077}, [%rd9];
	// inline asm
	prmt.b32 %r7483, %r1077, %r1076, %r6;
	// inline asm
	ld.local.u32 	%r957, [%rd9];
	ld.local.u32 	%r958, [%rd8+12];
	// inline asm
	prmt.b32 %r7484, %r957, %r958, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1078, %r1079}, [%rd8+8];
	// inline asm
	prmt.b32 %r7485, %r1079, %r1078, %r6;
	// inline asm
	ld.local.u32 	%r965, [%rd8+8];
	ld.local.u32 	%r966, [%rd8+4];
	// inline asm
	prmt.b32 %r7486, %r965, %r966, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1080, %r1081}, [%rd8];
	// inline asm
	prmt.b32 %r7479, %r1081, %r1080, %r6;
	// inline asm
	ld.local.u32 	%r973, [%rd8];
	ld.local.u32 	%r974, [%rd7+12];
	// inline asm
	prmt.b32 %r7480, %r973, %r974, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1082, %r1083}, [%rd7+8];
	// inline asm
	prmt.b32 %r7481, %r1083, %r1082, %r6;
	// inline asm
	ld.local.u32 	%r981, [%rd7+8];
	ld.local.u32 	%r982, [%rd7+4];
	// inline asm
	prmt.b32 %r7482, %r981, %r982, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1084, %r1085}, [%rd7];
	// inline asm
	prmt.b32 %r7475, %r1085, %r1084, %r6;
	// inline asm
	ld.local.u32 	%r989, [%rd7];
	ld.local.u32 	%r990, [%rd6+12];
	// inline asm
	prmt.b32 %r7476, %r989, %r990, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1086, %r1087}, [%rd6+8];
	// inline asm
	prmt.b32 %r7477, %r1087, %r1086, %r6;
	// inline asm
	ld.local.u32 	%r997, [%rd6+8];
	ld.local.u32 	%r998, [%rd6+4];
	// inline asm
	prmt.b32 %r7478, %r997, %r998, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1088, %r1089}, [%rd6];
	// inline asm
	prmt.b32 %r7471, %r1089, %r1088, %r6;
	// inline asm
	ld.local.u32 	%r1005, [%rd6];
	ld.local.u32 	%r1006, [%rd5+12];
	// inline asm
	prmt.b32 %r7472, %r1005, %r1006, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1090, %r1091}, [%rd5+8];
	// inline asm
	prmt.b32 %r7473, %r1091, %r1090, %r6;
	// inline asm
	ld.local.u32 	%r1013, [%rd5+8];
	ld.local.u32 	%r1014, [%rd5+4];
	// inline asm
	prmt.b32 %r7474, %r1013, %r1014, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1092, %r1093}, [%rd5];
	// inline asm
	prmt.b32 %r7467, %r1093, %r1092, %r6;
	// inline asm
	ld.local.u32 	%r1021, [%rd5];
	ld.local.u32 	%r1022, [%rd4+12];
	// inline asm
	prmt.b32 %r7468, %r1021, %r1022, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1094, %r1095}, [%rd4+8];
	// inline asm
	prmt.b32 %r7469, %r1095, %r1094, %r6;
	// inline asm
	ld.local.u32 	%r1029, [%rd4+8];
	ld.local.u32 	%r1030, [%rd4+4];
	// inline asm
	prmt.b32 %r7470, %r1029, %r1030, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1096, %r1097}, [%rd4];
	// inline asm
	prmt.b32 %r7463, %r1097, %r1096, %r6;
	// inline asm
	ld.local.u32 	%r1037, [%rd4];
	ld.local.u32 	%r1038, [%rd3+12];
	// inline asm
	prmt.b32 %r7464, %r1037, %r1038, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1098, %r1099}, [%rd3+8];
	// inline asm
	prmt.b32 %r7465, %r1099, %r1098, %r6;
	// inline asm
	ld.local.u32 	%r1045, [%rd3+8];
	ld.local.u32 	%r1046, [%rd3+4];
	// inline asm
	prmt.b32 %r7466, %r1045, %r1046, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1100, %r1101}, [%rd3];
	// inline asm
	prmt.b32 %r7459, %r1101, %r1100, %r6;
	// inline asm
	ld.local.u32 	%r1053, [%rd3];
	ld.local.u32 	%r1054, [%rd2+12];
	// inline asm
	prmt.b32 %r7460, %r1053, %r1054, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1102, %r1103}, [%rd2+8];
	// inline asm
	prmt.b32 %r7461, %r1103, %r1102, %r6;
	// inline asm
	ld.local.u32 	%r1061, [%rd2+8];
	ld.local.u32 	%r1062, [%rd2+4];
	// inline asm
	prmt.b32 %r7462, %r1061, %r1062, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1104, %r1105}, [%rd2];
	// inline asm
	prmt.b32 %r1064, %r1105, %r1104, %r6;
	// inline asm
	st.local.u32 	[%rd9+12], %r1064;
	ld.local.u32 	%r1069, [%rd2];
	// inline asm
	prmt.b32 %r1068, %r1069, %r7458, %r6;
	// inline asm
	st.local.u32 	[%rd9+8], %r1068;
	st.local.v2.u32 	[%rd9], {%r7458, %r7458};
	st.local.u32 	[%rd8+12], %r7458;
	st.local.u32 	[%rd8+8], %r7458;
	st.local.u32 	[%rd8+4], %r7458;
	st.local.u32 	[%rd8], %r7458;
	st.local.u32 	[%rd7+12], %r7458;
	st.local.u32 	[%rd7+8], %r7458;
	st.local.u32 	[%rd7+4], %r7458;
	st.local.u32 	[%rd7], %r7458;
	st.local.u32 	[%rd6+12], %r7458;
	st.local.u32 	[%rd6+8], %r7458;
	st.local.u32 	[%rd6+4], %r7458;
	st.local.u32 	[%rd6], %r7458;
	st.local.u32 	[%rd5+12], %r7458;
	st.local.u32 	[%rd5+8], %r7458;
	st.local.u32 	[%rd5+4], %r7458;
	st.local.u32 	[%rd5], %r7458;
	st.local.u32 	[%rd4+12], %r7458;
	st.local.u32 	[%rd4+8], %r7458;
	st.local.u32 	[%rd4+4], %r7458;
	st.local.u32 	[%rd4], %r7458;
	st.local.u32 	[%rd3+12], %r7458;
	st.local.u32 	[%rd3+8], %r7458;
	st.local.u32 	[%rd3+4], %r7458;
	st.local.u32 	[%rd3], %r7458;
	st.local.u32 	[%rd2+12], %r7458;
	st.local.u32 	[%rd2+8], %r7458;
	mov.u64 	%rd189, 0;
	st.local.u32 	[%rd2+4], %rd189;
	st.local.u32 	[%rd2], %rd189;
	mov.u32 	%r7487, %r7458;
	bra.uni 	BB3_91;

BB3_8:
	setp.eq.s32	%p48, %r768, 1;
	@%p48 bra 	BB3_9;
	bra.uni 	BB3_89;

BB3_9:
	mov.u32 	%r7458, 0;
	// inline asm
	prmt.b32 %r7461, %r7458, %r766, %r6;
	// inline asm
	ld.local.v2.u32 	{%r6323, %r6324}, [%rd9+8];
	// inline asm
	prmt.b32 %r7462, %r6324, %r6323, %r6;
	// inline asm
	ld.local.u32 	%r6169, [%rd9+8];
	ld.local.u32 	%r6170, [%rd9+4];
	// inline asm
	prmt.b32 %r6168, %r6169, %r6170, %r6;
	// inline asm
	st.local.u32 	[%rd9+12], %r6168;
	ld.local.v2.u32 	{%r6325, %r6326}, [%rd9];
	// inline asm
	prmt.b32 %r6172, %r6326, %r6325, %r6;
	// inline asm
	st.local.u32 	[%rd9+8], %r6172;
	ld.local.u32 	%r6177, [%rd9];
	ld.local.u32 	%r6178, [%rd8+12];
	// inline asm
	prmt.b32 %r6176, %r6177, %r6178, %r6;
	// inline asm
	st.local.u32 	[%rd9+4], %r6176;
	ld.local.v2.u32 	{%r6327, %r6328}, [%rd8+8];
	// inline asm
	prmt.b32 %r6180, %r6328, %r6327, %r6;
	// inline asm
	st.local.u32 	[%rd9], %r6180;
	ld.local.u32 	%r6185, [%rd8+8];
	ld.local.u32 	%r6186, [%rd8+4];
	// inline asm
	prmt.b32 %r6184, %r6185, %r6186, %r6;
	// inline asm
	st.local.u32 	[%rd8+12], %r6184;
	ld.local.v2.u32 	{%r6329, %r6330}, [%rd8];
	// inline asm
	prmt.b32 %r6188, %r6330, %r6329, %r6;
	// inline asm
	st.local.u32 	[%rd8+8], %r6188;
	ld.local.u32 	%r6193, [%rd8];
	ld.local.u32 	%r6194, [%rd7+12];
	// inline asm
	prmt.b32 %r6192, %r6193, %r6194, %r6;
	// inline asm
	st.local.u32 	[%rd8+4], %r6192;
	ld.local.v2.u32 	{%r6331, %r6332}, [%rd7+8];
	// inline asm
	prmt.b32 %r6196, %r6332, %r6331, %r6;
	// inline asm
	st.local.u32 	[%rd8], %r6196;
	ld.local.u32 	%r6201, [%rd7+8];
	ld.local.u32 	%r6202, [%rd7+4];
	// inline asm
	prmt.b32 %r6200, %r6201, %r6202, %r6;
	// inline asm
	st.local.u32 	[%rd7+12], %r6200;
	ld.local.v2.u32 	{%r6333, %r6334}, [%rd7];
	// inline asm
	prmt.b32 %r6204, %r6334, %r6333, %r6;
	// inline asm
	st.local.u32 	[%rd7+8], %r6204;
	ld.local.u32 	%r6209, [%rd7];
	ld.local.u32 	%r6210, [%rd6+12];
	// inline asm
	prmt.b32 %r6208, %r6209, %r6210, %r6;
	// inline asm
	st.local.u32 	[%rd7+4], %r6208;
	ld.local.v2.u32 	{%r6335, %r6336}, [%rd6+8];
	// inline asm
	prmt.b32 %r6212, %r6336, %r6335, %r6;
	// inline asm
	st.local.u32 	[%rd7], %r6212;
	ld.local.u32 	%r6217, [%rd6+8];
	ld.local.u32 	%r6218, [%rd6+4];
	// inline asm
	prmt.b32 %r6216, %r6217, %r6218, %r6;
	// inline asm
	st.local.u32 	[%rd6+12], %r6216;
	ld.local.v2.u32 	{%r6337, %r6338}, [%rd6];
	// inline asm
	prmt.b32 %r6220, %r6338, %r6337, %r6;
	// inline asm
	st.local.u32 	[%rd6+8], %r6220;
	ld.local.u32 	%r6225, [%rd6];
	ld.local.u32 	%r6226, [%rd5+12];
	// inline asm
	prmt.b32 %r6224, %r6225, %r6226, %r6;
	// inline asm
	st.local.u32 	[%rd6+4], %r6224;
	ld.local.v2.u32 	{%r6339, %r6340}, [%rd5+8];
	// inline asm
	prmt.b32 %r6228, %r6340, %r6339, %r6;
	// inline asm
	st.local.u32 	[%rd6], %r6228;
	ld.local.u32 	%r6233, [%rd5+8];
	ld.local.u32 	%r6234, [%rd5+4];
	// inline asm
	prmt.b32 %r6232, %r6233, %r6234, %r6;
	// inline asm
	st.local.u32 	[%rd5+12], %r6232;
	ld.local.v2.u32 	{%r6341, %r6342}, [%rd5];
	// inline asm
	prmt.b32 %r6236, %r6342, %r6341, %r6;
	// inline asm
	st.local.u32 	[%rd5+8], %r6236;
	ld.local.u32 	%r6241, [%rd5];
	ld.local.u32 	%r6242, [%rd4+12];
	// inline asm
	prmt.b32 %r6240, %r6241, %r6242, %r6;
	// inline asm
	st.local.u32 	[%rd5+4], %r6240;
	ld.local.v2.u32 	{%r6343, %r6344}, [%rd4+8];
	// inline asm
	prmt.b32 %r6244, %r6344, %r6343, %r6;
	// inline asm
	st.local.u32 	[%rd5], %r6244;
	ld.local.u32 	%r6249, [%rd4+8];
	ld.local.u32 	%r6250, [%rd4+4];
	// inline asm
	prmt.b32 %r6248, %r6249, %r6250, %r6;
	// inline asm
	st.local.u32 	[%rd4+12], %r6248;
	ld.local.v2.u32 	{%r6345, %r6346}, [%rd4];
	// inline asm
	prmt.b32 %r6252, %r6346, %r6345, %r6;
	// inline asm
	st.local.u32 	[%rd4+8], %r6252;
	ld.local.u32 	%r6257, [%rd4];
	ld.local.u32 	%r6258, [%rd3+12];
	// inline asm
	prmt.b32 %r6256, %r6257, %r6258, %r6;
	// inline asm
	st.local.u32 	[%rd4+4], %r6256;
	ld.local.v2.u32 	{%r6347, %r6348}, [%rd3+8];
	// inline asm
	prmt.b32 %r6260, %r6348, %r6347, %r6;
	// inline asm
	st.local.u32 	[%rd4], %r6260;
	ld.local.u32 	%r6265, [%rd3+8];
	ld.local.u32 	%r6266, [%rd3+4];
	// inline asm
	prmt.b32 %r6264, %r6265, %r6266, %r6;
	// inline asm
	st.local.u32 	[%rd3+12], %r6264;
	ld.local.v2.u32 	{%r6349, %r6350}, [%rd3];
	// inline asm
	prmt.b32 %r6268, %r6350, %r6349, %r6;
	// inline asm
	st.local.u32 	[%rd3+8], %r6268;
	ld.local.u32 	%r6273, [%rd3];
	ld.local.u32 	%r6274, [%rd2+12];
	// inline asm
	prmt.b32 %r6272, %r6273, %r6274, %r6;
	// inline asm
	st.local.u32 	[%rd3+4], %r6272;
	ld.local.v2.u32 	{%r6351, %r6352}, [%rd2+8];
	// inline asm
	prmt.b32 %r6276, %r6352, %r6351, %r6;
	// inline asm
	st.local.u32 	[%rd3], %r6276;
	ld.local.u32 	%r6281, [%rd2+8];
	ld.local.u32 	%r6282, [%rd2+4];
	// inline asm
	prmt.b32 %r6280, %r6281, %r6282, %r6;
	// inline asm
	st.local.u32 	[%rd2+12], %r6280;
	ld.local.v2.u32 	{%r6353, %r6354}, [%rd2];
	// inline asm
	prmt.b32 %r6284, %r6354, %r6353, %r6;
	// inline asm
	st.local.u32 	[%rd2+8], %r6284;
	ld.local.u32 	%r6289, [%rd2];
	// inline asm
	prmt.b32 %r6288, %r6289, %r7458, %r6;
	// inline asm
	st.local.v2.u32 	[%rd2], {%r7458, %r6288};
	mov.u32 	%r7459, %r7458;
	mov.u32 	%r7460, %r7458;
	bra.uni 	BB3_13;

BB3_40:
	setp.eq.s32	%p25, %r768, 17;
	@%p25 bra 	BB3_41;
	bra.uni 	BB3_89;

BB3_41:
	mov.u32 	%r7458, 0;
	// inline asm
	prmt.b32 %r7477, %r7458, %r766, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3323, %r3324}, [%rd9+8];
	// inline asm
	prmt.b32 %r7478, %r3324, %r3323, %r6;
	// inline asm
	ld.local.u32 	%r3185, [%rd9+8];
	ld.local.u32 	%r3186, [%rd9+4];
	// inline asm
	prmt.b32 %r7471, %r3185, %r3186, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3325, %r3326}, [%rd9];
	// inline asm
	prmt.b32 %r7472, %r3326, %r3325, %r6;
	// inline asm
	ld.local.u32 	%r3193, [%rd9];
	ld.local.u32 	%r3194, [%rd8+12];
	// inline asm
	prmt.b32 %r7473, %r3193, %r3194, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3327, %r3328}, [%rd8+8];
	// inline asm
	prmt.b32 %r7474, %r3328, %r3327, %r6;
	// inline asm
	ld.local.u32 	%r3201, [%rd8+8];
	ld.local.u32 	%r3202, [%rd8+4];
	// inline asm
	prmt.b32 %r7467, %r3201, %r3202, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3329, %r3330}, [%rd8];
	// inline asm
	prmt.b32 %r7468, %r3330, %r3329, %r6;
	// inline asm
	ld.local.u32 	%r3209, [%rd8];
	ld.local.u32 	%r3210, [%rd7+12];
	// inline asm
	prmt.b32 %r7469, %r3209, %r3210, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3331, %r3332}, [%rd7+8];
	// inline asm
	prmt.b32 %r7470, %r3332, %r3331, %r6;
	// inline asm
	ld.local.u32 	%r3217, [%rd7+8];
	ld.local.u32 	%r3218, [%rd7+4];
	// inline asm
	prmt.b32 %r7463, %r3217, %r3218, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3333, %r3334}, [%rd7];
	// inline asm
	prmt.b32 %r7464, %r3334, %r3333, %r6;
	// inline asm
	ld.local.u32 	%r3225, [%rd7];
	ld.local.u32 	%r3226, [%rd6+12];
	// inline asm
	prmt.b32 %r7465, %r3225, %r3226, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3335, %r3336}, [%rd6+8];
	// inline asm
	prmt.b32 %r7466, %r3336, %r3335, %r6;
	// inline asm
	ld.local.u32 	%r3233, [%rd6+8];
	ld.local.u32 	%r3234, [%rd6+4];
	// inline asm
	prmt.b32 %r7459, %r3233, %r3234, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3337, %r3338}, [%rd6];
	// inline asm
	prmt.b32 %r7460, %r3338, %r3337, %r6;
	// inline asm
	ld.local.u32 	%r3241, [%rd6];
	ld.local.u32 	%r3242, [%rd5+12];
	// inline asm
	prmt.b32 %r7461, %r3241, %r3242, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3339, %r3340}, [%rd5+8];
	// inline asm
	prmt.b32 %r7462, %r3340, %r3339, %r6;
	// inline asm
	ld.local.u32 	%r3249, [%rd5+8];
	ld.local.u32 	%r3250, [%rd5+4];
	// inline asm
	prmt.b32 %r3248, %r3249, %r3250, %r6;
	// inline asm
	st.local.u32 	[%rd9+12], %r3248;
	ld.local.v2.u32 	{%r3341, %r3342}, [%rd5];
	// inline asm
	prmt.b32 %r3252, %r3342, %r3341, %r6;
	// inline asm
	st.local.u32 	[%rd9+8], %r3252;
	ld.local.u32 	%r3257, [%rd5];
	ld.local.u32 	%r3258, [%rd4+12];
	// inline asm
	prmt.b32 %r3256, %r3257, %r3258, %r6;
	// inline asm
	st.local.u32 	[%rd9+4], %r3256;
	ld.local.v2.u32 	{%r3343, %r3344}, [%rd4+8];
	// inline asm
	prmt.b32 %r3260, %r3344, %r3343, %r6;
	// inline asm
	st.local.u32 	[%rd9], %r3260;
	ld.local.u32 	%r3265, [%rd4+8];
	ld.local.u32 	%r3266, [%rd4+4];
	// inline asm
	prmt.b32 %r3264, %r3265, %r3266, %r6;
	// inline asm
	st.local.u32 	[%rd8+12], %r3264;
	ld.local.v2.u32 	{%r3345, %r3346}, [%rd4];
	// inline asm
	prmt.b32 %r3268, %r3346, %r3345, %r6;
	// inline asm
	st.local.u32 	[%rd8+8], %r3268;
	ld.local.u32 	%r3273, [%rd4];
	ld.local.u32 	%r3274, [%rd3+12];
	// inline asm
	prmt.b32 %r3272, %r3273, %r3274, %r6;
	// inline asm
	st.local.u32 	[%rd8+4], %r3272;
	ld.local.v2.u32 	{%r3347, %r3348}, [%rd3+8];
	// inline asm
	prmt.b32 %r3276, %r3348, %r3347, %r6;
	// inline asm
	st.local.u32 	[%rd8], %r3276;
	ld.local.u32 	%r3281, [%rd3+8];
	ld.local.u32 	%r3282, [%rd3+4];
	// inline asm
	prmt.b32 %r3280, %r3281, %r3282, %r6;
	// inline asm
	st.local.u32 	[%rd7+12], %r3280;
	ld.local.v2.u32 	{%r3349, %r3350}, [%rd3];
	// inline asm
	prmt.b32 %r3284, %r3350, %r3349, %r6;
	// inline asm
	st.local.u32 	[%rd7+8], %r3284;
	ld.local.u32 	%r3289, [%rd3];
	ld.local.u32 	%r3290, [%rd2+12];
	// inline asm
	prmt.b32 %r3288, %r3289, %r3290, %r6;
	// inline asm
	st.local.u32 	[%rd7+4], %r3288;
	ld.local.v2.u32 	{%r3351, %r3352}, [%rd2+8];
	// inline asm
	prmt.b32 %r3292, %r3352, %r3351, %r6;
	// inline asm
	st.local.u32 	[%rd7], %r3292;
	ld.local.u32 	%r3297, [%rd2+8];
	ld.local.u32 	%r3298, [%rd2+4];
	// inline asm
	prmt.b32 %r3296, %r3297, %r3298, %r6;
	// inline asm
	st.local.u32 	[%rd6+12], %r3296;
	ld.local.v2.u32 	{%r3353, %r3354}, [%rd2];
	// inline asm
	prmt.b32 %r3300, %r3354, %r3353, %r6;
	// inline asm
	st.local.u32 	[%rd6+8], %r3300;
	ld.local.u32 	%r3305, [%rd2];
	// inline asm
	prmt.b32 %r3304, %r3305, %r7458, %r6;
	// inline asm
	st.local.v2.u32 	[%rd6], {%r7458, %r3304};
	st.local.v4.u32 	[%rd5], {%r7458, %r7458, %r7458, %r7458};
	st.local.v4.u32 	[%rd4], {%r7458, %r7458, %r7458, %r7458};
	st.local.v4.u32 	[%rd3], {%r7458, %r7458, %r7458, %r7458};
	st.local.v2.u32 	[%rd2+8], {%r7458, %r7458};
	mov.u64 	%rd202, 0;
	st.local.u64 	[%rd2], %rd202;
	mov.u32 	%r7475, %r7458;
	mov.u32 	%r7476, %r7458;
	bra.uni 	BB3_84;

BB3_24:
	setp.eq.s32	%p37, %r768, 9;
	@%p37 bra 	BB3_25;
	bra.uni 	BB3_89;

BB3_25:
	mov.u32 	%r7458, 0;
	// inline asm
	prmt.b32 %r7469, %r7458, %r766, %r6;
	// inline asm
	ld.local.v2.u32 	{%r4791, %r4792}, [%rd9+8];
	// inline asm
	prmt.b32 %r7470, %r4792, %r4791, %r6;
	// inline asm
	ld.local.u32 	%r4645, [%rd9+8];
	ld.local.u32 	%r4646, [%rd9+4];
	// inline asm
	prmt.b32 %r7463, %r4645, %r4646, %r6;
	// inline asm
	ld.local.v2.u32 	{%r4793, %r4794}, [%rd9];
	// inline asm
	prmt.b32 %r7464, %r4794, %r4793, %r6;
	// inline asm
	ld.local.u32 	%r4653, [%rd9];
	ld.local.u32 	%r4654, [%rd8+12];
	// inline asm
	prmt.b32 %r7465, %r4653, %r4654, %r6;
	// inline asm
	ld.local.v2.u32 	{%r4795, %r4796}, [%rd8+8];
	// inline asm
	prmt.b32 %r7466, %r4796, %r4795, %r6;
	// inline asm
	ld.local.u32 	%r4661, [%rd8+8];
	ld.local.u32 	%r4662, [%rd8+4];
	// inline asm
	prmt.b32 %r7459, %r4661, %r4662, %r6;
	// inline asm
	ld.local.v2.u32 	{%r4797, %r4798}, [%rd8];
	// inline asm
	prmt.b32 %r7460, %r4798, %r4797, %r6;
	// inline asm
	ld.local.u32 	%r4669, [%rd8];
	ld.local.u32 	%r4670, [%rd7+12];
	// inline asm
	prmt.b32 %r7461, %r4669, %r4670, %r6;
	// inline asm
	ld.local.v2.u32 	{%r4799, %r4800}, [%rd7+8];
	// inline asm
	prmt.b32 %r7462, %r4800, %r4799, %r6;
	// inline asm
	ld.local.u32 	%r4677, [%rd7+8];
	ld.local.u32 	%r4678, [%rd7+4];
	// inline asm
	prmt.b32 %r4676, %r4677, %r4678, %r6;
	// inline asm
	st.local.u32 	[%rd9+12], %r4676;
	ld.local.v2.u32 	{%r4801, %r4802}, [%rd7];
	// inline asm
	prmt.b32 %r4680, %r4802, %r4801, %r6;
	// inline asm
	st.local.u32 	[%rd9+8], %r4680;
	ld.local.u32 	%r4685, [%rd7];
	ld.local.u32 	%r4686, [%rd6+12];
	// inline asm
	prmt.b32 %r4684, %r4685, %r4686, %r6;
	// inline asm
	st.local.u32 	[%rd9+4], %r4684;
	ld.local.v2.u32 	{%r4803, %r4804}, [%rd6+8];
	// inline asm
	prmt.b32 %r4688, %r4804, %r4803, %r6;
	// inline asm
	st.local.u32 	[%rd9], %r4688;
	ld.local.u32 	%r4693, [%rd6+8];
	ld.local.u32 	%r4694, [%rd6+4];
	// inline asm
	prmt.b32 %r4692, %r4693, %r4694, %r6;
	// inline asm
	st.local.u32 	[%rd8+12], %r4692;
	ld.local.v2.u32 	{%r4805, %r4806}, [%rd6];
	// inline asm
	prmt.b32 %r4696, %r4806, %r4805, %r6;
	// inline asm
	st.local.u32 	[%rd8+8], %r4696;
	ld.local.u32 	%r4701, [%rd6];
	ld.local.u32 	%r4702, [%rd5+12];
	// inline asm
	prmt.b32 %r4700, %r4701, %r4702, %r6;
	// inline asm
	st.local.u32 	[%rd8+4], %r4700;
	ld.local.v2.u32 	{%r4807, %r4808}, [%rd5+8];
	// inline asm
	prmt.b32 %r4704, %r4808, %r4807, %r6;
	// inline asm
	st.local.u32 	[%rd8], %r4704;
	ld.local.u32 	%r4709, [%rd5+8];
	ld.local.u32 	%r4710, [%rd5+4];
	// inline asm
	prmt.b32 %r4708, %r4709, %r4710, %r6;
	// inline asm
	st.local.u32 	[%rd7+12], %r4708;
	ld.local.v2.u32 	{%r4809, %r4810}, [%rd5];
	// inline asm
	prmt.b32 %r4712, %r4810, %r4809, %r6;
	// inline asm
	st.local.u32 	[%rd7+8], %r4712;
	ld.local.u32 	%r4717, [%rd5];
	ld.local.u32 	%r4718, [%rd4+12];
	// inline asm
	prmt.b32 %r4716, %r4717, %r4718, %r6;
	// inline asm
	st.local.u32 	[%rd7+4], %r4716;
	ld.local.v2.u32 	{%r4811, %r4812}, [%rd4+8];
	// inline asm
	prmt.b32 %r4720, %r4812, %r4811, %r6;
	// inline asm
	st.local.u32 	[%rd7], %r4720;
	ld.local.u32 	%r4725, [%rd4+8];
	ld.local.u32 	%r4726, [%rd4+4];
	// inline asm
	prmt.b32 %r4724, %r4725, %r4726, %r6;
	// inline asm
	st.local.u32 	[%rd6+12], %r4724;
	ld.local.v2.u32 	{%r4813, %r4814}, [%rd4];
	// inline asm
	prmt.b32 %r4728, %r4814, %r4813, %r6;
	// inline asm
	st.local.u32 	[%rd6+8], %r4728;
	ld.local.u32 	%r4733, [%rd4];
	ld.local.u32 	%r4734, [%rd3+12];
	// inline asm
	prmt.b32 %r4732, %r4733, %r4734, %r6;
	// inline asm
	st.local.u32 	[%rd6+4], %r4732;
	ld.local.v2.u32 	{%r4815, %r4816}, [%rd3+8];
	// inline asm
	prmt.b32 %r4736, %r4816, %r4815, %r6;
	// inline asm
	st.local.u32 	[%rd6], %r4736;
	ld.local.u32 	%r4741, [%rd3+8];
	ld.local.u32 	%r4742, [%rd3+4];
	// inline asm
	prmt.b32 %r4740, %r4741, %r4742, %r6;
	// inline asm
	st.local.u32 	[%rd5+12], %r4740;
	ld.local.v2.u32 	{%r4817, %r4818}, [%rd3];
	// inline asm
	prmt.b32 %r4744, %r4818, %r4817, %r6;
	// inline asm
	st.local.u32 	[%rd5+8], %r4744;
	ld.local.u32 	%r4749, [%rd3];
	ld.local.u32 	%r4750, [%rd2+12];
	// inline asm
	prmt.b32 %r4748, %r4749, %r4750, %r6;
	// inline asm
	st.local.u32 	[%rd5+4], %r4748;
	ld.local.v2.u32 	{%r4819, %r4820}, [%rd2+8];
	// inline asm
	prmt.b32 %r4752, %r4820, %r4819, %r6;
	// inline asm
	st.local.u32 	[%rd5], %r4752;
	ld.local.u32 	%r4757, [%rd2+8];
	ld.local.u32 	%r4758, [%rd2+4];
	// inline asm
	prmt.b32 %r4756, %r4757, %r4758, %r6;
	// inline asm
	st.local.u32 	[%rd4+12], %r4756;
	ld.local.v2.u32 	{%r4821, %r4822}, [%rd2];
	// inline asm
	prmt.b32 %r4760, %r4822, %r4821, %r6;
	// inline asm
	st.local.u32 	[%rd4+8], %r4760;
	ld.local.u32 	%r4765, [%rd2];
	// inline asm
	prmt.b32 %r4764, %r4765, %r7458, %r6;
	// inline asm
	st.local.v2.u32 	[%rd4], {%r7458, %r4764};
	st.local.v4.u32 	[%rd3], {%r7458, %r7458, %r7458, %r7458};
	st.local.v2.u32 	[%rd2+8], {%r7458, %r7458};
	mov.u64 	%rd210, 0;
	st.local.u64 	[%rd2], %rd210;
	mov.u32 	%r7467, %r7458;
	mov.u32 	%r7468, %r7458;
	bra.uni 	BB3_82;

BB3_55:
	setp.eq.s32	%p14, %r768, 25;
	@%p14 bra 	BB3_56;
	bra.uni 	BB3_89;

BB3_56:
	mov.u32 	%r7458, 0;
	// inline asm
	prmt.b32 %r7485, %r7458, %r766, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1919, %r1920}, [%rd9+8];
	// inline asm
	prmt.b32 %r7486, %r1920, %r1919, %r6;
	// inline asm
	ld.local.u32 	%r1789, [%rd9+8];
	ld.local.u32 	%r1790, [%rd9+4];
	// inline asm
	prmt.b32 %r7479, %r1789, %r1790, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1921, %r1922}, [%rd9];
	// inline asm
	prmt.b32 %r7480, %r1922, %r1921, %r6;
	// inline asm
	ld.local.u32 	%r1797, [%rd9];
	ld.local.u32 	%r1798, [%rd8+12];
	// inline asm
	prmt.b32 %r7481, %r1797, %r1798, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1923, %r1924}, [%rd8+8];
	// inline asm
	prmt.b32 %r7482, %r1924, %r1923, %r6;
	// inline asm
	ld.local.u32 	%r1805, [%rd8+8];
	ld.local.u32 	%r1806, [%rd8+4];
	// inline asm
	prmt.b32 %r7475, %r1805, %r1806, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1925, %r1926}, [%rd8];
	// inline asm
	prmt.b32 %r7476, %r1926, %r1925, %r6;
	// inline asm
	ld.local.u32 	%r1813, [%rd8];
	ld.local.u32 	%r1814, [%rd7+12];
	// inline asm
	prmt.b32 %r7477, %r1813, %r1814, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1927, %r1928}, [%rd7+8];
	// inline asm
	prmt.b32 %r7478, %r1928, %r1927, %r6;
	// inline asm
	ld.local.u32 	%r1821, [%rd7+8];
	ld.local.u32 	%r1822, [%rd7+4];
	// inline asm
	prmt.b32 %r7471, %r1821, %r1822, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1929, %r1930}, [%rd7];
	// inline asm
	prmt.b32 %r7472, %r1930, %r1929, %r6;
	// inline asm
	ld.local.u32 	%r1829, [%rd7];
	ld.local.u32 	%r1830, [%rd6+12];
	// inline asm
	prmt.b32 %r7473, %r1829, %r1830, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1931, %r1932}, [%rd6+8];
	// inline asm
	prmt.b32 %r7474, %r1932, %r1931, %r6;
	// inline asm
	ld.local.u32 	%r1837, [%rd6+8];
	ld.local.u32 	%r1838, [%rd6+4];
	// inline asm
	prmt.b32 %r7467, %r1837, %r1838, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1933, %r1934}, [%rd6];
	// inline asm
	prmt.b32 %r7468, %r1934, %r1933, %r6;
	// inline asm
	ld.local.u32 	%r1845, [%rd6];
	ld.local.u32 	%r1846, [%rd5+12];
	// inline asm
	prmt.b32 %r7469, %r1845, %r1846, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1935, %r1936}, [%rd5+8];
	// inline asm
	prmt.b32 %r7470, %r1936, %r1935, %r6;
	// inline asm
	ld.local.u32 	%r1853, [%rd5+8];
	ld.local.u32 	%r1854, [%rd5+4];
	// inline asm
	prmt.b32 %r7463, %r1853, %r1854, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1937, %r1938}, [%rd5];
	// inline asm
	prmt.b32 %r7464, %r1938, %r1937, %r6;
	// inline asm
	ld.local.u32 	%r1861, [%rd5];
	ld.local.u32 	%r1862, [%rd4+12];
	// inline asm
	prmt.b32 %r7465, %r1861, %r1862, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1939, %r1940}, [%rd4+8];
	// inline asm
	prmt.b32 %r7466, %r1940, %r1939, %r6;
	// inline asm
	ld.local.u32 	%r1869, [%rd4+8];
	ld.local.u32 	%r1870, [%rd4+4];
	// inline asm
	prmt.b32 %r7459, %r1869, %r1870, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1941, %r1942}, [%rd4];
	// inline asm
	prmt.b32 %r7460, %r1942, %r1941, %r6;
	// inline asm
	ld.local.u32 	%r1877, [%rd4];
	ld.local.u32 	%r1878, [%rd3+12];
	// inline asm
	prmt.b32 %r7461, %r1877, %r1878, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1943, %r1944}, [%rd3+8];
	// inline asm
	prmt.b32 %r7462, %r1944, %r1943, %r6;
	// inline asm
	ld.local.u32 	%r1885, [%rd3+8];
	ld.local.u32 	%r1886, [%rd3+4];
	// inline asm
	prmt.b32 %r1884, %r1885, %r1886, %r6;
	// inline asm
	st.local.u32 	[%rd9+12], %r1884;
	ld.local.v2.u32 	{%r1945, %r1946}, [%rd3];
	// inline asm
	prmt.b32 %r1888, %r1946, %r1945, %r6;
	// inline asm
	st.local.u32 	[%rd9+8], %r1888;
	ld.local.u32 	%r1893, [%rd3];
	ld.local.u32 	%r1894, [%rd2+12];
	// inline asm
	prmt.b32 %r1892, %r1893, %r1894, %r6;
	// inline asm
	st.local.u32 	[%rd9+4], %r1892;
	ld.local.v2.u32 	{%r1947, %r1948}, [%rd2+8];
	// inline asm
	prmt.b32 %r1896, %r1948, %r1947, %r6;
	// inline asm
	st.local.u32 	[%rd9], %r1896;
	ld.local.u32 	%r1901, [%rd2+8];
	ld.local.u32 	%r1902, [%rd2+4];
	// inline asm
	prmt.b32 %r1900, %r1901, %r1902, %r6;
	// inline asm
	st.local.u32 	[%rd8+12], %r1900;
	ld.local.v2.u32 	{%r1949, %r1950}, [%rd2];
	// inline asm
	prmt.b32 %r1904, %r1950, %r1949, %r6;
	// inline asm
	st.local.u32 	[%rd8+8], %r1904;
	ld.local.u32 	%r1909, [%rd2];
	// inline asm
	prmt.b32 %r1908, %r1909, %r7458, %r6;
	// inline asm
	st.local.v2.u32 	[%rd8], {%r7458, %r1908};
	st.local.v4.u32 	[%rd7], {%r7458, %r7458, %r7458, %r7458};
	st.local.v4.u32 	[%rd6], {%r7458, %r7458, %r7458, %r7458};
	st.local.v4.u32 	[%rd5], {%r7458, %r7458, %r7458, %r7458};
	st.local.v4.u32 	[%rd4], {%r7458, %r7458, %r7458, %r7458};
	st.local.v4.u32 	[%rd3], {%r7458, %r7458, %r7458, %r7458};
	st.local.v2.u32 	[%rd2+8], {%r7458, %r7458};
	mov.u64 	%rd194, 0;
	st.local.u64 	[%rd2], %rd194;
	mov.u32 	%r7483, %r7458;
	mov.u32 	%r7484, %r7458;
	bra.uni 	BB3_86;

BB3_16:
	setp.eq.s32	%p43, %r768, 5;
	@%p43 bra 	BB3_17;
	bra.uni 	BB3_89;

BB3_17:
	mov.u32 	%r7458, 0;
	// inline asm
	prmt.b32 %r7465, %r7458, %r766, %r6;
	// inline asm
	ld.local.v2.u32 	{%r5549, %r5550}, [%rd9+8];
	// inline asm
	prmt.b32 %r7466, %r5550, %r5549, %r6;
	// inline asm
	ld.local.u32 	%r5399, [%rd9+8];
	ld.local.u32 	%r5400, [%rd9+4];
	// inline asm
	prmt.b32 %r7459, %r5399, %r5400, %r6;
	// inline asm
	ld.local.v2.u32 	{%r5551, %r5552}, [%rd9];
	// inline asm
	prmt.b32 %r7460, %r5552, %r5551, %r6;
	// inline asm
	ld.local.u32 	%r5407, [%rd9];
	ld.local.u32 	%r5408, [%rd8+12];
	// inline asm
	prmt.b32 %r7461, %r5407, %r5408, %r6;
	// inline asm
	ld.local.v2.u32 	{%r5553, %r5554}, [%rd8+8];
	// inline asm
	prmt.b32 %r7462, %r5554, %r5553, %r6;
	// inline asm
	ld.local.u32 	%r5415, [%rd8+8];
	ld.local.u32 	%r5416, [%rd8+4];
	// inline asm
	prmt.b32 %r5414, %r5415, %r5416, %r6;
	// inline asm
	st.local.u32 	[%rd9+12], %r5414;
	ld.local.v2.u32 	{%r5555, %r5556}, [%rd8];
	// inline asm
	prmt.b32 %r5418, %r5556, %r5555, %r6;
	// inline asm
	st.local.u32 	[%rd9+8], %r5418;
	ld.local.u32 	%r5423, [%rd8];
	ld.local.u32 	%r5424, [%rd7+12];
	// inline asm
	prmt.b32 %r5422, %r5423, %r5424, %r6;
	// inline asm
	st.local.u32 	[%rd9+4], %r5422;
	ld.local.v2.u32 	{%r5557, %r5558}, [%rd7+8];
	// inline asm
	prmt.b32 %r5426, %r5558, %r5557, %r6;
	// inline asm
	st.local.u32 	[%rd9], %r5426;
	ld.local.u32 	%r5431, [%rd7+8];
	ld.local.u32 	%r5432, [%rd7+4];
	// inline asm
	prmt.b32 %r5430, %r5431, %r5432, %r6;
	// inline asm
	st.local.u32 	[%rd8+12], %r5430;
	ld.local.v2.u32 	{%r5559, %r5560}, [%rd7];
	// inline asm
	prmt.b32 %r5434, %r5560, %r5559, %r6;
	// inline asm
	st.local.u32 	[%rd8+8], %r5434;
	ld.local.u32 	%r5439, [%rd7];
	ld.local.u32 	%r5440, [%rd6+12];
	// inline asm
	prmt.b32 %r5438, %r5439, %r5440, %r6;
	// inline asm
	st.local.u32 	[%rd8+4], %r5438;
	ld.local.v2.u32 	{%r5561, %r5562}, [%rd6+8];
	// inline asm
	prmt.b32 %r5442, %r5562, %r5561, %r6;
	// inline asm
	st.local.u32 	[%rd8], %r5442;
	ld.local.u32 	%r5447, [%rd6+8];
	ld.local.u32 	%r5448, [%rd6+4];
	// inline asm
	prmt.b32 %r5446, %r5447, %r5448, %r6;
	// inline asm
	st.local.u32 	[%rd7+12], %r5446;
	ld.local.v2.u32 	{%r5563, %r5564}, [%rd6];
	// inline asm
	prmt.b32 %r5450, %r5564, %r5563, %r6;
	// inline asm
	st.local.u32 	[%rd7+8], %r5450;
	ld.local.u32 	%r5455, [%rd6];
	ld.local.u32 	%r5456, [%rd5+12];
	// inline asm
	prmt.b32 %r5454, %r5455, %r5456, %r6;
	// inline asm
	st.local.u32 	[%rd7+4], %r5454;
	ld.local.v2.u32 	{%r5565, %r5566}, [%rd5+8];
	// inline asm
	prmt.b32 %r5458, %r5566, %r5565, %r6;
	// inline asm
	st.local.u32 	[%rd7], %r5458;
	ld.local.u32 	%r5463, [%rd5+8];
	ld.local.u32 	%r5464, [%rd5+4];
	// inline asm
	prmt.b32 %r5462, %r5463, %r5464, %r6;
	// inline asm
	st.local.u32 	[%rd6+12], %r5462;
	ld.local.v2.u32 	{%r5567, %r5568}, [%rd5];
	// inline asm
	prmt.b32 %r5466, %r5568, %r5567, %r6;
	// inline asm
	st.local.u32 	[%rd6+8], %r5466;
	ld.local.u32 	%r5471, [%rd5];
	ld.local.u32 	%r5472, [%rd4+12];
	// inline asm
	prmt.b32 %r5470, %r5471, %r5472, %r6;
	// inline asm
	st.local.u32 	[%rd6+4], %r5470;
	ld.local.v2.u32 	{%r5569, %r5570}, [%rd4+8];
	// inline asm
	prmt.b32 %r5474, %r5570, %r5569, %r6;
	// inline asm
	st.local.u32 	[%rd6], %r5474;
	ld.local.u32 	%r5479, [%rd4+8];
	ld.local.u32 	%r5480, [%rd4+4];
	// inline asm
	prmt.b32 %r5478, %r5479, %r5480, %r6;
	// inline asm
	st.local.u32 	[%rd5+12], %r5478;
	ld.local.v2.u32 	{%r5571, %r5572}, [%rd4];
	// inline asm
	prmt.b32 %r5482, %r5572, %r5571, %r6;
	// inline asm
	st.local.u32 	[%rd5+8], %r5482;
	ld.local.u32 	%r5487, [%rd4];
	ld.local.u32 	%r5488, [%rd3+12];
	// inline asm
	prmt.b32 %r5486, %r5487, %r5488, %r6;
	// inline asm
	st.local.u32 	[%rd5+4], %r5486;
	ld.local.v2.u32 	{%r5573, %r5574}, [%rd3+8];
	// inline asm
	prmt.b32 %r5490, %r5574, %r5573, %r6;
	// inline asm
	st.local.u32 	[%rd5], %r5490;
	ld.local.u32 	%r5495, [%rd3+8];
	ld.local.u32 	%r5496, [%rd3+4];
	// inline asm
	prmt.b32 %r5494, %r5495, %r5496, %r6;
	// inline asm
	st.local.u32 	[%rd4+12], %r5494;
	ld.local.v2.u32 	{%r5575, %r5576}, [%rd3];
	// inline asm
	prmt.b32 %r5498, %r5576, %r5575, %r6;
	// inline asm
	st.local.u32 	[%rd4+8], %r5498;
	ld.local.u32 	%r5503, [%rd3];
	ld.local.u32 	%r5504, [%rd2+12];
	// inline asm
	prmt.b32 %r5502, %r5503, %r5504, %r6;
	// inline asm
	st.local.u32 	[%rd4+4], %r5502;
	ld.local.v2.u32 	{%r5577, %r5578}, [%rd2+8];
	// inline asm
	prmt.b32 %r5506, %r5578, %r5577, %r6;
	// inline asm
	st.local.u32 	[%rd4], %r5506;
	ld.local.u32 	%r5511, [%rd2+8];
	ld.local.u32 	%r5512, [%rd2+4];
	// inline asm
	prmt.b32 %r5510, %r5511, %r5512, %r6;
	// inline asm
	st.local.u32 	[%rd3+12], %r5510;
	ld.local.v2.u32 	{%r5579, %r5580}, [%rd2];
	// inline asm
	prmt.b32 %r5514, %r5580, %r5579, %r6;
	// inline asm
	st.local.u32 	[%rd3+8], %r5514;
	ld.local.u32 	%r5519, [%rd2];
	// inline asm
	prmt.b32 %r5518, %r5519, %r7458, %r6;
	// inline asm
	st.local.v2.u32 	[%rd3], {%r7458, %r5518};
	st.local.v2.u32 	[%rd2+8], {%r7458, %r7458};
	mov.u64 	%rd214, 0;
	st.local.u64 	[%rd2], %rd214;
	mov.u32 	%r7463, %r7458;
	mov.u32 	%r7464, %r7458;
	bra.uni 	BB3_81;

BB3_47:
	setp.eq.s32	%p20, %r768, 21;
	@%p20 bra 	BB3_48;
	bra.uni 	BB3_89;

BB3_48:
	mov.u32 	%r7458, 0;
	// inline asm
	prmt.b32 %r7481, %r7458, %r766, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2613, %r2614}, [%rd9+8];
	// inline asm
	prmt.b32 %r7482, %r2614, %r2613, %r6;
	// inline asm
	ld.local.u32 	%r2479, [%rd9+8];
	ld.local.u32 	%r2480, [%rd9+4];
	// inline asm
	prmt.b32 %r7475, %r2479, %r2480, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2615, %r2616}, [%rd9];
	// inline asm
	prmt.b32 %r7476, %r2616, %r2615, %r6;
	// inline asm
	ld.local.u32 	%r2487, [%rd9];
	ld.local.u32 	%r2488, [%rd8+12];
	// inline asm
	prmt.b32 %r7477, %r2487, %r2488, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2617, %r2618}, [%rd8+8];
	// inline asm
	prmt.b32 %r7478, %r2618, %r2617, %r6;
	// inline asm
	ld.local.u32 	%r2495, [%rd8+8];
	ld.local.u32 	%r2496, [%rd8+4];
	// inline asm
	prmt.b32 %r7471, %r2495, %r2496, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2619, %r2620}, [%rd8];
	// inline asm
	prmt.b32 %r7472, %r2620, %r2619, %r6;
	// inline asm
	ld.local.u32 	%r2503, [%rd8];
	ld.local.u32 	%r2504, [%rd7+12];
	// inline asm
	prmt.b32 %r7473, %r2503, %r2504, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2621, %r2622}, [%rd7+8];
	// inline asm
	prmt.b32 %r7474, %r2622, %r2621, %r6;
	// inline asm
	ld.local.u32 	%r2511, [%rd7+8];
	ld.local.u32 	%r2512, [%rd7+4];
	// inline asm
	prmt.b32 %r7467, %r2511, %r2512, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2623, %r2624}, [%rd7];
	// inline asm
	prmt.b32 %r7468, %r2624, %r2623, %r6;
	// inline asm
	ld.local.u32 	%r2519, [%rd7];
	ld.local.u32 	%r2520, [%rd6+12];
	// inline asm
	prmt.b32 %r7469, %r2519, %r2520, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2625, %r2626}, [%rd6+8];
	// inline asm
	prmt.b32 %r7470, %r2626, %r2625, %r6;
	// inline asm
	ld.local.u32 	%r2527, [%rd6+8];
	ld.local.u32 	%r2528, [%rd6+4];
	// inline asm
	prmt.b32 %r7463, %r2527, %r2528, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2627, %r2628}, [%rd6];
	// inline asm
	prmt.b32 %r7464, %r2628, %r2627, %r6;
	// inline asm
	ld.local.u32 	%r2535, [%rd6];
	ld.local.u32 	%r2536, [%rd5+12];
	// inline asm
	prmt.b32 %r7465, %r2535, %r2536, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2629, %r2630}, [%rd5+8];
	// inline asm
	prmt.b32 %r7466, %r2630, %r2629, %r6;
	// inline asm
	ld.local.u32 	%r2543, [%rd5+8];
	ld.local.u32 	%r2544, [%rd5+4];
	// inline asm
	prmt.b32 %r7459, %r2543, %r2544, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2631, %r2632}, [%rd5];
	// inline asm
	prmt.b32 %r7460, %r2632, %r2631, %r6;
	// inline asm
	ld.local.u32 	%r2551, [%rd5];
	ld.local.u32 	%r2552, [%rd4+12];
	// inline asm
	prmt.b32 %r7461, %r2551, %r2552, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2633, %r2634}, [%rd4+8];
	// inline asm
	prmt.b32 %r7462, %r2634, %r2633, %r6;
	// inline asm
	ld.local.u32 	%r2559, [%rd4+8];
	ld.local.u32 	%r2560, [%rd4+4];
	// inline asm
	prmt.b32 %r2558, %r2559, %r2560, %r6;
	// inline asm
	st.local.u32 	[%rd9+12], %r2558;
	ld.local.v2.u32 	{%r2635, %r2636}, [%rd4];
	// inline asm
	prmt.b32 %r2562, %r2636, %r2635, %r6;
	// inline asm
	st.local.u32 	[%rd9+8], %r2562;
	ld.local.u32 	%r2567, [%rd4];
	ld.local.u32 	%r2568, [%rd3+12];
	// inline asm
	prmt.b32 %r2566, %r2567, %r2568, %r6;
	// inline asm
	st.local.u32 	[%rd9+4], %r2566;
	ld.local.v2.u32 	{%r2637, %r2638}, [%rd3+8];
	// inline asm
	prmt.b32 %r2570, %r2638, %r2637, %r6;
	// inline asm
	st.local.u32 	[%rd9], %r2570;
	ld.local.u32 	%r2575, [%rd3+8];
	ld.local.u32 	%r2576, [%rd3+4];
	// inline asm
	prmt.b32 %r2574, %r2575, %r2576, %r6;
	// inline asm
	st.local.u32 	[%rd8+12], %r2574;
	ld.local.v2.u32 	{%r2639, %r2640}, [%rd3];
	// inline asm
	prmt.b32 %r2578, %r2640, %r2639, %r6;
	// inline asm
	st.local.u32 	[%rd8+8], %r2578;
	ld.local.u32 	%r2583, [%rd3];
	ld.local.u32 	%r2584, [%rd2+12];
	// inline asm
	prmt.b32 %r2582, %r2583, %r2584, %r6;
	// inline asm
	st.local.u32 	[%rd8+4], %r2582;
	ld.local.v2.u32 	{%r2641, %r2642}, [%rd2+8];
	// inline asm
	prmt.b32 %r2586, %r2642, %r2641, %r6;
	// inline asm
	st.local.u32 	[%rd8], %r2586;
	ld.local.u32 	%r2591, [%rd2+8];
	ld.local.u32 	%r2592, [%rd2+4];
	// inline asm
	prmt.b32 %r2590, %r2591, %r2592, %r6;
	// inline asm
	st.local.u32 	[%rd7+12], %r2590;
	ld.local.v2.u32 	{%r2643, %r2644}, [%rd2];
	// inline asm
	prmt.b32 %r2594, %r2644, %r2643, %r6;
	// inline asm
	st.local.u32 	[%rd7+8], %r2594;
	ld.local.u32 	%r2599, [%rd2];
	// inline asm
	prmt.b32 %r2598, %r2599, %r7458, %r6;
	// inline asm
	st.local.v2.u32 	[%rd7], {%r7458, %r2598};
	st.local.v4.u32 	[%rd6], {%r7458, %r7458, %r7458, %r7458};
	st.local.v4.u32 	[%rd5], {%r7458, %r7458, %r7458, %r7458};
	st.local.v4.u32 	[%rd4], {%r7458, %r7458, %r7458, %r7458};
	st.local.v4.u32 	[%rd3], {%r7458, %r7458, %r7458, %r7458};
	st.local.v2.u32 	[%rd2+8], {%r7458, %r7458};
	mov.u64 	%rd198, 0;
	st.local.u64 	[%rd2], %rd198;
	mov.u32 	%r7479, %r7458;
	mov.u32 	%r7480, %r7458;
	bra.uni 	BB3_85;

BB3_31:
	setp.eq.s32	%p32, %r768, 13;
	@%p32 bra 	BB3_32;
	bra.uni 	BB3_89;

BB3_32:
	mov.u32 	%r7458, 0;
	// inline asm
	prmt.b32 %r7473, %r7458, %r766, %r6;
	// inline asm
	ld.local.v2.u32 	{%r4049, %r4050}, [%rd9+8];
	// inline asm
	prmt.b32 %r7474, %r4050, %r4049, %r6;
	// inline asm
	ld.local.u32 	%r3907, [%rd9+8];
	ld.local.u32 	%r3908, [%rd9+4];
	// inline asm
	prmt.b32 %r7467, %r3907, %r3908, %r6;
	// inline asm
	ld.local.v2.u32 	{%r4051, %r4052}, [%rd9];
	// inline asm
	prmt.b32 %r7468, %r4052, %r4051, %r6;
	// inline asm
	ld.local.u32 	%r3915, [%rd9];
	ld.local.u32 	%r3916, [%rd8+12];
	// inline asm
	prmt.b32 %r7469, %r3915, %r3916, %r6;
	// inline asm
	ld.local.v2.u32 	{%r4053, %r4054}, [%rd8+8];
	// inline asm
	prmt.b32 %r7470, %r4054, %r4053, %r6;
	// inline asm
	ld.local.u32 	%r3923, [%rd8+8];
	ld.local.u32 	%r3924, [%rd8+4];
	// inline asm
	prmt.b32 %r7463, %r3923, %r3924, %r6;
	// inline asm
	ld.local.v2.u32 	{%r4055, %r4056}, [%rd8];
	// inline asm
	prmt.b32 %r7464, %r4056, %r4055, %r6;
	// inline asm
	ld.local.u32 	%r3931, [%rd8];
	ld.local.u32 	%r3932, [%rd7+12];
	// inline asm
	prmt.b32 %r7465, %r3931, %r3932, %r6;
	// inline asm
	ld.local.v2.u32 	{%r4057, %r4058}, [%rd7+8];
	// inline asm
	prmt.b32 %r7466, %r4058, %r4057, %r6;
	// inline asm
	ld.local.u32 	%r3939, [%rd7+8];
	ld.local.u32 	%r3940, [%rd7+4];
	// inline asm
	prmt.b32 %r7459, %r3939, %r3940, %r6;
	// inline asm
	ld.local.v2.u32 	{%r4059, %r4060}, [%rd7];
	// inline asm
	prmt.b32 %r7460, %r4060, %r4059, %r6;
	// inline asm
	ld.local.u32 	%r3947, [%rd7];
	ld.local.u32 	%r3948, [%rd6+12];
	// inline asm
	prmt.b32 %r7461, %r3947, %r3948, %r6;
	// inline asm
	ld.local.v2.u32 	{%r4061, %r4062}, [%rd6+8];
	// inline asm
	prmt.b32 %r7462, %r4062, %r4061, %r6;
	// inline asm
	ld.local.u32 	%r3955, [%rd6+8];
	ld.local.u32 	%r3956, [%rd6+4];
	// inline asm
	prmt.b32 %r3954, %r3955, %r3956, %r6;
	// inline asm
	st.local.u32 	[%rd9+12], %r3954;
	ld.local.v2.u32 	{%r4063, %r4064}, [%rd6];
	// inline asm
	prmt.b32 %r3958, %r4064, %r4063, %r6;
	// inline asm
	st.local.u32 	[%rd9+8], %r3958;
	ld.local.u32 	%r3963, [%rd6];
	ld.local.u32 	%r3964, [%rd5+12];
	// inline asm
	prmt.b32 %r3962, %r3963, %r3964, %r6;
	// inline asm
	st.local.u32 	[%rd9+4], %r3962;
	ld.local.v2.u32 	{%r4065, %r4066}, [%rd5+8];
	// inline asm
	prmt.b32 %r3966, %r4066, %r4065, %r6;
	// inline asm
	st.local.u32 	[%rd9], %r3966;
	ld.local.u32 	%r3971, [%rd5+8];
	ld.local.u32 	%r3972, [%rd5+4];
	// inline asm
	prmt.b32 %r3970, %r3971, %r3972, %r6;
	// inline asm
	st.local.u32 	[%rd8+12], %r3970;
	ld.local.v2.u32 	{%r4067, %r4068}, [%rd5];
	// inline asm
	prmt.b32 %r3974, %r4068, %r4067, %r6;
	// inline asm
	st.local.u32 	[%rd8+8], %r3974;
	ld.local.u32 	%r3979, [%rd5];
	ld.local.u32 	%r3980, [%rd4+12];
	// inline asm
	prmt.b32 %r3978, %r3979, %r3980, %r6;
	// inline asm
	st.local.u32 	[%rd8+4], %r3978;
	ld.local.v2.u32 	{%r4069, %r4070}, [%rd4+8];
	// inline asm
	prmt.b32 %r3982, %r4070, %r4069, %r6;
	// inline asm
	st.local.u32 	[%rd8], %r3982;
	ld.local.u32 	%r3987, [%rd4+8];
	ld.local.u32 	%r3988, [%rd4+4];
	// inline asm
	prmt.b32 %r3986, %r3987, %r3988, %r6;
	// inline asm
	st.local.u32 	[%rd7+12], %r3986;
	ld.local.v2.u32 	{%r4071, %r4072}, [%rd4];
	// inline asm
	prmt.b32 %r3990, %r4072, %r4071, %r6;
	// inline asm
	st.local.u32 	[%rd7+8], %r3990;
	ld.local.u32 	%r3995, [%rd4];
	ld.local.u32 	%r3996, [%rd3+12];
	// inline asm
	prmt.b32 %r3994, %r3995, %r3996, %r6;
	// inline asm
	st.local.u32 	[%rd7+4], %r3994;
	ld.local.v2.u32 	{%r4073, %r4074}, [%rd3+8];
	// inline asm
	prmt.b32 %r3998, %r4074, %r4073, %r6;
	// inline asm
	st.local.u32 	[%rd7], %r3998;
	ld.local.u32 	%r4003, [%rd3+8];
	ld.local.u32 	%r4004, [%rd3+4];
	// inline asm
	prmt.b32 %r4002, %r4003, %r4004, %r6;
	// inline asm
	st.local.u32 	[%rd6+12], %r4002;
	ld.local.v2.u32 	{%r4075, %r4076}, [%rd3];
	// inline asm
	prmt.b32 %r4006, %r4076, %r4075, %r6;
	// inline asm
	st.local.u32 	[%rd6+8], %r4006;
	ld.local.u32 	%r4011, [%rd3];
	ld.local.u32 	%r4012, [%rd2+12];
	// inline asm
	prmt.b32 %r4010, %r4011, %r4012, %r6;
	// inline asm
	st.local.u32 	[%rd6+4], %r4010;
	ld.local.v2.u32 	{%r4077, %r4078}, [%rd2+8];
	// inline asm
	prmt.b32 %r4014, %r4078, %r4077, %r6;
	// inline asm
	st.local.u32 	[%rd6], %r4014;
	ld.local.u32 	%r4019, [%rd2+8];
	ld.local.u32 	%r4020, [%rd2+4];
	// inline asm
	prmt.b32 %r4018, %r4019, %r4020, %r6;
	// inline asm
	st.local.u32 	[%rd5+12], %r4018;
	ld.local.v2.u32 	{%r4079, %r4080}, [%rd2];
	// inline asm
	prmt.b32 %r4022, %r4080, %r4079, %r6;
	// inline asm
	st.local.u32 	[%rd5+8], %r4022;
	ld.local.u32 	%r4027, [%rd2];
	// inline asm
	prmt.b32 %r4026, %r4027, %r7458, %r6;
	// inline asm
	st.local.v2.u32 	[%rd5], {%r7458, %r4026};
	st.local.v4.u32 	[%rd4], {%r7458, %r7458, %r7458, %r7458};
	st.local.v4.u32 	[%rd3], {%r7458, %r7458, %r7458, %r7458};
	st.local.v2.u32 	[%rd2+8], {%r7458, %r7458};
	mov.u64 	%rd206, 0;
	st.local.u64 	[%rd2], %rd206;
	mov.u32 	%r7471, %r7458;
	mov.u32 	%r7472, %r7458;
	bra.uni 	BB3_83;

BB3_62:
	setp.eq.s32	%p9, %r768, 29;
	@%p9 bra 	BB3_63;
	bra.uni 	BB3_89;

BB3_63:
	mov.u32 	%r7458, 0;
	// inline asm
	prmt.b32 %r7489, %r7458, %r766, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1241, %r1242}, [%rd9+8];
	// inline asm
	prmt.b32 %r7490, %r1242, %r1241, %r6;
	// inline asm
	ld.local.u32 	%r1115, [%rd9+8];
	ld.local.u32 	%r1116, [%rd9+4];
	// inline asm
	prmt.b32 %r7483, %r1115, %r1116, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1243, %r1244}, [%rd9];
	// inline asm
	prmt.b32 %r7484, %r1244, %r1243, %r6;
	// inline asm
	ld.local.u32 	%r1123, [%rd9];
	ld.local.u32 	%r1124, [%rd8+12];
	// inline asm
	prmt.b32 %r7485, %r1123, %r1124, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1245, %r1246}, [%rd8+8];
	// inline asm
	prmt.b32 %r7486, %r1246, %r1245, %r6;
	// inline asm
	ld.local.u32 	%r1131, [%rd8+8];
	ld.local.u32 	%r1132, [%rd8+4];
	// inline asm
	prmt.b32 %r7479, %r1131, %r1132, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1247, %r1248}, [%rd8];
	// inline asm
	prmt.b32 %r7480, %r1248, %r1247, %r6;
	// inline asm
	ld.local.u32 	%r1139, [%rd8];
	ld.local.u32 	%r1140, [%rd7+12];
	// inline asm
	prmt.b32 %r7481, %r1139, %r1140, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1249, %r1250}, [%rd7+8];
	// inline asm
	prmt.b32 %r7482, %r1250, %r1249, %r6;
	// inline asm
	ld.local.u32 	%r1147, [%rd7+8];
	ld.local.u32 	%r1148, [%rd7+4];
	// inline asm
	prmt.b32 %r7475, %r1147, %r1148, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1251, %r1252}, [%rd7];
	// inline asm
	prmt.b32 %r7476, %r1252, %r1251, %r6;
	// inline asm
	ld.local.u32 	%r1155, [%rd7];
	ld.local.u32 	%r1156, [%rd6+12];
	// inline asm
	prmt.b32 %r7477, %r1155, %r1156, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1253, %r1254}, [%rd6+8];
	// inline asm
	prmt.b32 %r7478, %r1254, %r1253, %r6;
	// inline asm
	ld.local.u32 	%r1163, [%rd6+8];
	ld.local.u32 	%r1164, [%rd6+4];
	// inline asm
	prmt.b32 %r7471, %r1163, %r1164, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1255, %r1256}, [%rd6];
	// inline asm
	prmt.b32 %r7472, %r1256, %r1255, %r6;
	// inline asm
	ld.local.u32 	%r1171, [%rd6];
	ld.local.u32 	%r1172, [%rd5+12];
	// inline asm
	prmt.b32 %r7473, %r1171, %r1172, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1257, %r1258}, [%rd5+8];
	// inline asm
	prmt.b32 %r7474, %r1258, %r1257, %r6;
	// inline asm
	ld.local.u32 	%r1179, [%rd5+8];
	ld.local.u32 	%r1180, [%rd5+4];
	// inline asm
	prmt.b32 %r7467, %r1179, %r1180, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1259, %r1260}, [%rd5];
	// inline asm
	prmt.b32 %r7468, %r1260, %r1259, %r6;
	// inline asm
	ld.local.u32 	%r1187, [%rd5];
	ld.local.u32 	%r1188, [%rd4+12];
	// inline asm
	prmt.b32 %r7469, %r1187, %r1188, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1261, %r1262}, [%rd4+8];
	// inline asm
	prmt.b32 %r7470, %r1262, %r1261, %r6;
	// inline asm
	ld.local.u32 	%r1195, [%rd4+8];
	ld.local.u32 	%r1196, [%rd4+4];
	// inline asm
	prmt.b32 %r7463, %r1195, %r1196, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1263, %r1264}, [%rd4];
	// inline asm
	prmt.b32 %r7464, %r1264, %r1263, %r6;
	// inline asm
	ld.local.u32 	%r1203, [%rd4];
	ld.local.u32 	%r1204, [%rd3+12];
	// inline asm
	prmt.b32 %r7465, %r1203, %r1204, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1265, %r1266}, [%rd3+8];
	// inline asm
	prmt.b32 %r7466, %r1266, %r1265, %r6;
	// inline asm
	ld.local.u32 	%r1211, [%rd3+8];
	ld.local.u32 	%r1212, [%rd3+4];
	// inline asm
	prmt.b32 %r7459, %r1211, %r1212, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1267, %r1268}, [%rd3];
	// inline asm
	prmt.b32 %r7460, %r1268, %r1267, %r6;
	// inline asm
	ld.local.u32 	%r1219, [%rd3];
	ld.local.u32 	%r1220, [%rd2+12];
	// inline asm
	prmt.b32 %r7461, %r1219, %r1220, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1269, %r1270}, [%rd2+8];
	// inline asm
	prmt.b32 %r7462, %r1270, %r1269, %r6;
	// inline asm
	ld.local.u32 	%r1227, [%rd2+8];
	ld.local.u32 	%r1228, [%rd2+4];
	// inline asm
	prmt.b32 %r1226, %r1227, %r1228, %r6;
	// inline asm
	st.local.u32 	[%rd9+12], %r1226;
	ld.local.v2.u32 	{%r1271, %r1272}, [%rd2];
	// inline asm
	prmt.b32 %r1230, %r1272, %r1271, %r6;
	// inline asm
	st.local.u32 	[%rd9+8], %r1230;
	ld.local.u32 	%r1235, [%rd2];
	// inline asm
	prmt.b32 %r1234, %r1235, %r7458, %r6;
	// inline asm
	st.local.v2.u32 	[%rd9], {%r7458, %r1234};
	st.local.v4.u32 	[%rd8], {%r7458, %r7458, %r7458, %r7458};
	st.local.v4.u32 	[%rd7], {%r7458, %r7458, %r7458, %r7458};
	st.local.v4.u32 	[%rd6], {%r7458, %r7458, %r7458, %r7458};
	st.local.v4.u32 	[%rd5], {%r7458, %r7458, %r7458, %r7458};
	st.local.v4.u32 	[%rd4], {%r7458, %r7458, %r7458, %r7458};
	st.local.v4.u32 	[%rd3], {%r7458, %r7458, %r7458, %r7458};
	st.local.v2.u32 	[%rd2+8], {%r7458, %r7458};
	mov.u64 	%rd190, 0;
	st.local.u64 	[%rd2], %rd190;
	mov.u32 	%r7487, %r7458;
	mov.u32 	%r7488, %r7458;
	bra.uni 	BB3_91;

BB3_11:
	setp.eq.s32	%p46, %r768, 3;
	@%p46 bra 	BB3_12;
	bra.uni 	BB3_89;

BB3_12:
	mov.u32 	%r7458, 0;
	// inline asm
	prmt.b32 %r7459, %r7458, %r766, %r6;
	// inline asm
	ld.local.v2.u32 	{%r5934, %r5935}, [%rd9+8];
	// inline asm
	prmt.b32 %r7460, %r5935, %r5934, %r6;
	// inline asm
	ld.local.u32 	%r5782, [%rd9+8];
	ld.local.u32 	%r5783, [%rd9+4];
	// inline asm
	prmt.b32 %r7461, %r5782, %r5783, %r6;
	// inline asm
	ld.local.v2.u32 	{%r5936, %r5937}, [%rd9];
	// inline asm
	prmt.b32 %r7462, %r5937, %r5936, %r6;
	// inline asm
	ld.local.u32 	%r5790, [%rd9];
	ld.local.u32 	%r5791, [%rd8+12];
	// inline asm
	prmt.b32 %r5789, %r5790, %r5791, %r6;
	// inline asm
	st.local.u32 	[%rd9+12], %r5789;
	ld.local.v2.u32 	{%r5938, %r5939}, [%rd8+8];
	// inline asm
	prmt.b32 %r5793, %r5939, %r5938, %r6;
	// inline asm
	st.local.u32 	[%rd9+8], %r5793;
	ld.local.u32 	%r5798, [%rd8+8];
	ld.local.u32 	%r5799, [%rd8+4];
	// inline asm
	prmt.b32 %r5797, %r5798, %r5799, %r6;
	// inline asm
	st.local.u32 	[%rd9+4], %r5797;
	ld.local.v2.u32 	{%r5940, %r5941}, [%rd8];
	// inline asm
	prmt.b32 %r5801, %r5941, %r5940, %r6;
	// inline asm
	st.local.u32 	[%rd9], %r5801;
	ld.local.u32 	%r5806, [%rd8];
	ld.local.u32 	%r5807, [%rd7+12];
	// inline asm
	prmt.b32 %r5805, %r5806, %r5807, %r6;
	// inline asm
	st.local.u32 	[%rd8+12], %r5805;
	ld.local.v2.u32 	{%r5942, %r5943}, [%rd7+8];
	// inline asm
	prmt.b32 %r5809, %r5943, %r5942, %r6;
	// inline asm
	st.local.u32 	[%rd8+8], %r5809;
	ld.local.u32 	%r5814, [%rd7+8];
	ld.local.u32 	%r5815, [%rd7+4];
	// inline asm
	prmt.b32 %r5813, %r5814, %r5815, %r6;
	// inline asm
	st.local.u32 	[%rd8+4], %r5813;
	ld.local.v2.u32 	{%r5944, %r5945}, [%rd7];
	// inline asm
	prmt.b32 %r5817, %r5945, %r5944, %r6;
	// inline asm
	st.local.u32 	[%rd8], %r5817;
	ld.local.u32 	%r5822, [%rd7];
	ld.local.u32 	%r5823, [%rd6+12];
	// inline asm
	prmt.b32 %r5821, %r5822, %r5823, %r6;
	// inline asm
	st.local.u32 	[%rd7+12], %r5821;
	ld.local.v2.u32 	{%r5946, %r5947}, [%rd6+8];
	// inline asm
	prmt.b32 %r5825, %r5947, %r5946, %r6;
	// inline asm
	st.local.u32 	[%rd7+8], %r5825;
	ld.local.u32 	%r5830, [%rd6+8];
	ld.local.u32 	%r5831, [%rd6+4];
	// inline asm
	prmt.b32 %r5829, %r5830, %r5831, %r6;
	// inline asm
	st.local.u32 	[%rd7+4], %r5829;
	ld.local.v2.u32 	{%r5948, %r5949}, [%rd6];
	// inline asm
	prmt.b32 %r5833, %r5949, %r5948, %r6;
	// inline asm
	st.local.u32 	[%rd7], %r5833;
	ld.local.u32 	%r5838, [%rd6];
	ld.local.u32 	%r5839, [%rd5+12];
	// inline asm
	prmt.b32 %r5837, %r5838, %r5839, %r6;
	// inline asm
	st.local.u32 	[%rd6+12], %r5837;
	ld.local.v2.u32 	{%r5950, %r5951}, [%rd5+8];
	// inline asm
	prmt.b32 %r5841, %r5951, %r5950, %r6;
	// inline asm
	st.local.u32 	[%rd6+8], %r5841;
	ld.local.u32 	%r5846, [%rd5+8];
	ld.local.u32 	%r5847, [%rd5+4];
	// inline asm
	prmt.b32 %r5845, %r5846, %r5847, %r6;
	// inline asm
	st.local.u32 	[%rd6+4], %r5845;
	ld.local.v2.u32 	{%r5952, %r5953}, [%rd5];
	// inline asm
	prmt.b32 %r5849, %r5953, %r5952, %r6;
	// inline asm
	st.local.u32 	[%rd6], %r5849;
	ld.local.u32 	%r5854, [%rd5];
	ld.local.u32 	%r5855, [%rd4+12];
	// inline asm
	prmt.b32 %r5853, %r5854, %r5855, %r6;
	// inline asm
	st.local.u32 	[%rd5+12], %r5853;
	ld.local.v2.u32 	{%r5954, %r5955}, [%rd4+8];
	// inline asm
	prmt.b32 %r5857, %r5955, %r5954, %r6;
	// inline asm
	st.local.u32 	[%rd5+8], %r5857;
	ld.local.u32 	%r5862, [%rd4+8];
	ld.local.u32 	%r5863, [%rd4+4];
	// inline asm
	prmt.b32 %r5861, %r5862, %r5863, %r6;
	// inline asm
	st.local.u32 	[%rd5+4], %r5861;
	ld.local.v2.u32 	{%r5956, %r5957}, [%rd4];
	// inline asm
	prmt.b32 %r5865, %r5957, %r5956, %r6;
	// inline asm
	st.local.u32 	[%rd5], %r5865;
	ld.local.u32 	%r5870, [%rd4];
	ld.local.u32 	%r5871, [%rd3+12];
	// inline asm
	prmt.b32 %r5869, %r5870, %r5871, %r6;
	// inline asm
	st.local.u32 	[%rd4+12], %r5869;
	ld.local.v2.u32 	{%r5958, %r5959}, [%rd3+8];
	// inline asm
	prmt.b32 %r5873, %r5959, %r5958, %r6;
	// inline asm
	st.local.u32 	[%rd4+8], %r5873;
	ld.local.u32 	%r5878, [%rd3+8];
	ld.local.u32 	%r5879, [%rd3+4];
	// inline asm
	prmt.b32 %r5877, %r5878, %r5879, %r6;
	// inline asm
	st.local.u32 	[%rd4+4], %r5877;
	ld.local.v2.u32 	{%r5960, %r5961}, [%rd3];
	// inline asm
	prmt.b32 %r5881, %r5961, %r5960, %r6;
	// inline asm
	st.local.u32 	[%rd4], %r5881;
	ld.local.u32 	%r5886, [%rd3];
	ld.local.u32 	%r5887, [%rd2+12];
	// inline asm
	prmt.b32 %r5885, %r5886, %r5887, %r6;
	// inline asm
	st.local.u32 	[%rd3+12], %r5885;
	ld.local.v2.u32 	{%r5962, %r5963}, [%rd2+8];
	// inline asm
	prmt.b32 %r5889, %r5963, %r5962, %r6;
	// inline asm
	st.local.u32 	[%rd3+8], %r5889;
	ld.local.u32 	%r5894, [%rd2+8];
	ld.local.u32 	%r5895, [%rd2+4];
	// inline asm
	prmt.b32 %r5893, %r5894, %r5895, %r6;
	// inline asm
	st.local.u32 	[%rd3+4], %r5893;
	ld.local.v2.u32 	{%r5964, %r5965}, [%rd2];
	// inline asm
	prmt.b32 %r5897, %r5965, %r5964, %r6;
	// inline asm
	st.local.u32 	[%rd3], %r5897;
	ld.local.u32 	%r5902, [%rd2];
	// inline asm
	prmt.b32 %r5901, %r5902, %r7458, %r6;
	// inline asm
	st.local.v2.u32 	[%rd2+8], {%r7458, %r5901};
	mov.u64 	%rd216, 0;
	st.local.u64 	[%rd2], %rd216;

BB3_13:
	mov.u32 	%r7463, %r7458;
	mov.u32 	%r7464, %r7458;
	mov.u32 	%r7465, %r7458;
	mov.u32 	%r7466, %r7458;
	bra.uni 	BB3_81;

BB3_43:
	setp.eq.s32	%p23, %r768, 19;
	@%p23 bra 	BB3_44;
	bra.uni 	BB3_89;

BB3_44:
	mov.u32 	%r7458, 0;
	// inline asm
	prmt.b32 %r7475, %r7458, %r766, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2966, %r2967}, [%rd9+8];
	// inline asm
	prmt.b32 %r7476, %r2967, %r2966, %r6;
	// inline asm
	ld.local.u32 	%r2830, [%rd9+8];
	ld.local.u32 	%r2831, [%rd9+4];
	// inline asm
	prmt.b32 %r7477, %r2830, %r2831, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2968, %r2969}, [%rd9];
	// inline asm
	prmt.b32 %r7478, %r2969, %r2968, %r6;
	// inline asm
	ld.local.u32 	%r2838, [%rd9];
	ld.local.u32 	%r2839, [%rd8+12];
	// inline asm
	prmt.b32 %r7471, %r2838, %r2839, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2970, %r2971}, [%rd8+8];
	// inline asm
	prmt.b32 %r7472, %r2971, %r2970, %r6;
	// inline asm
	ld.local.u32 	%r2846, [%rd8+8];
	ld.local.u32 	%r2847, [%rd8+4];
	// inline asm
	prmt.b32 %r7473, %r2846, %r2847, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2972, %r2973}, [%rd8];
	// inline asm
	prmt.b32 %r7474, %r2973, %r2972, %r6;
	// inline asm
	ld.local.u32 	%r2854, [%rd8];
	ld.local.u32 	%r2855, [%rd7+12];
	// inline asm
	prmt.b32 %r7467, %r2854, %r2855, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2974, %r2975}, [%rd7+8];
	// inline asm
	prmt.b32 %r7468, %r2975, %r2974, %r6;
	// inline asm
	ld.local.u32 	%r2862, [%rd7+8];
	ld.local.u32 	%r2863, [%rd7+4];
	// inline asm
	prmt.b32 %r7469, %r2862, %r2863, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2976, %r2977}, [%rd7];
	// inline asm
	prmt.b32 %r7470, %r2977, %r2976, %r6;
	// inline asm
	ld.local.u32 	%r2870, [%rd7];
	ld.local.u32 	%r2871, [%rd6+12];
	// inline asm
	prmt.b32 %r7463, %r2870, %r2871, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2978, %r2979}, [%rd6+8];
	// inline asm
	prmt.b32 %r7464, %r2979, %r2978, %r6;
	// inline asm
	ld.local.u32 	%r2878, [%rd6+8];
	ld.local.u32 	%r2879, [%rd6+4];
	// inline asm
	prmt.b32 %r7465, %r2878, %r2879, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2980, %r2981}, [%rd6];
	// inline asm
	prmt.b32 %r7466, %r2981, %r2980, %r6;
	// inline asm
	ld.local.u32 	%r2886, [%rd6];
	ld.local.u32 	%r2887, [%rd5+12];
	// inline asm
	prmt.b32 %r7459, %r2886, %r2887, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2982, %r2983}, [%rd5+8];
	// inline asm
	prmt.b32 %r7460, %r2983, %r2982, %r6;
	// inline asm
	ld.local.u32 	%r2894, [%rd5+8];
	ld.local.u32 	%r2895, [%rd5+4];
	// inline asm
	prmt.b32 %r7461, %r2894, %r2895, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2984, %r2985}, [%rd5];
	// inline asm
	prmt.b32 %r7462, %r2985, %r2984, %r6;
	// inline asm
	ld.local.u32 	%r2902, [%rd5];
	ld.local.u32 	%r2903, [%rd4+12];
	// inline asm
	prmt.b32 %r2901, %r2902, %r2903, %r6;
	// inline asm
	st.local.u32 	[%rd9+12], %r2901;
	ld.local.v2.u32 	{%r2986, %r2987}, [%rd4+8];
	// inline asm
	prmt.b32 %r2905, %r2987, %r2986, %r6;
	// inline asm
	st.local.u32 	[%rd9+8], %r2905;
	ld.local.u32 	%r2910, [%rd4+8];
	ld.local.u32 	%r2911, [%rd4+4];
	// inline asm
	prmt.b32 %r2909, %r2910, %r2911, %r6;
	// inline asm
	st.local.u32 	[%rd9+4], %r2909;
	ld.local.v2.u32 	{%r2988, %r2989}, [%rd4];
	// inline asm
	prmt.b32 %r2913, %r2989, %r2988, %r6;
	// inline asm
	st.local.u32 	[%rd9], %r2913;
	ld.local.u32 	%r2918, [%rd4];
	ld.local.u32 	%r2919, [%rd3+12];
	// inline asm
	prmt.b32 %r2917, %r2918, %r2919, %r6;
	// inline asm
	st.local.u32 	[%rd8+12], %r2917;
	ld.local.v2.u32 	{%r2990, %r2991}, [%rd3+8];
	// inline asm
	prmt.b32 %r2921, %r2991, %r2990, %r6;
	// inline asm
	st.local.u32 	[%rd8+8], %r2921;
	ld.local.u32 	%r2926, [%rd3+8];
	ld.local.u32 	%r2927, [%rd3+4];
	// inline asm
	prmt.b32 %r2925, %r2926, %r2927, %r6;
	// inline asm
	st.local.u32 	[%rd8+4], %r2925;
	ld.local.v2.u32 	{%r2992, %r2993}, [%rd3];
	// inline asm
	prmt.b32 %r2929, %r2993, %r2992, %r6;
	// inline asm
	st.local.u32 	[%rd8], %r2929;
	ld.local.u32 	%r2934, [%rd3];
	ld.local.u32 	%r2935, [%rd2+12];
	// inline asm
	prmt.b32 %r2933, %r2934, %r2935, %r6;
	// inline asm
	st.local.u32 	[%rd7+12], %r2933;
	ld.local.v2.u32 	{%r2994, %r2995}, [%rd2+8];
	// inline asm
	prmt.b32 %r2937, %r2995, %r2994, %r6;
	// inline asm
	st.local.u32 	[%rd7+8], %r2937;
	ld.local.u32 	%r2942, [%rd2+8];
	ld.local.u32 	%r2943, [%rd2+4];
	// inline asm
	prmt.b32 %r2941, %r2942, %r2943, %r6;
	// inline asm
	st.local.u32 	[%rd7+4], %r2941;
	ld.local.v2.u32 	{%r2996, %r2997}, [%rd2];
	// inline asm
	prmt.b32 %r2945, %r2997, %r2996, %r6;
	// inline asm
	st.local.u32 	[%rd7], %r2945;
	ld.local.u32 	%r2950, [%rd2];
	// inline asm
	prmt.b32 %r2949, %r2950, %r7458, %r6;
	// inline asm
	st.local.v4.u32 	[%rd6], {%r7458, %r7458, %r7458, %r2949};
	st.local.v4.u32 	[%rd5], {%r7458, %r7458, %r7458, %r7458};
	st.local.v4.u32 	[%rd4], {%r7458, %r7458, %r7458, %r7458};
	st.local.v4.u32 	[%rd3], {%r7458, %r7458, %r7458, %r7458};
	st.local.v2.u32 	[%rd2+8], {%r7458, %r7458};
	mov.u64 	%rd200, 0;
	st.local.u64 	[%rd2], %rd200;
	bra.uni 	BB3_84;

BB3_27:
	setp.eq.s32	%p35, %r768, 11;
	@%p35 bra 	BB3_28;
	bra.uni 	BB3_89;

BB3_28:
	mov.u32 	%r7458, 0;
	// inline asm
	prmt.b32 %r7467, %r7458, %r766, %r6;
	// inline asm
	ld.local.v2.u32 	{%r4418, %r4419}, [%rd9+8];
	// inline asm
	prmt.b32 %r7468, %r4419, %r4418, %r6;
	// inline asm
	ld.local.u32 	%r4274, [%rd9+8];
	ld.local.u32 	%r4275, [%rd9+4];
	// inline asm
	prmt.b32 %r7469, %r4274, %r4275, %r6;
	// inline asm
	ld.local.v2.u32 	{%r4420, %r4421}, [%rd9];
	// inline asm
	prmt.b32 %r7470, %r4421, %r4420, %r6;
	// inline asm
	ld.local.u32 	%r4282, [%rd9];
	ld.local.u32 	%r4283, [%rd8+12];
	// inline asm
	prmt.b32 %r7463, %r4282, %r4283, %r6;
	// inline asm
	ld.local.v2.u32 	{%r4422, %r4423}, [%rd8+8];
	// inline asm
	prmt.b32 %r7464, %r4423, %r4422, %r6;
	// inline asm
	ld.local.u32 	%r4290, [%rd8+8];
	ld.local.u32 	%r4291, [%rd8+4];
	// inline asm
	prmt.b32 %r7465, %r4290, %r4291, %r6;
	// inline asm
	ld.local.v2.u32 	{%r4424, %r4425}, [%rd8];
	// inline asm
	prmt.b32 %r7466, %r4425, %r4424, %r6;
	// inline asm
	ld.local.u32 	%r4298, [%rd8];
	ld.local.u32 	%r4299, [%rd7+12];
	// inline asm
	prmt.b32 %r7459, %r4298, %r4299, %r6;
	// inline asm
	ld.local.v2.u32 	{%r4426, %r4427}, [%rd7+8];
	// inline asm
	prmt.b32 %r7460, %r4427, %r4426, %r6;
	// inline asm
	ld.local.u32 	%r4306, [%rd7+8];
	ld.local.u32 	%r4307, [%rd7+4];
	// inline asm
	prmt.b32 %r7461, %r4306, %r4307, %r6;
	// inline asm
	ld.local.v2.u32 	{%r4428, %r4429}, [%rd7];
	// inline asm
	prmt.b32 %r7462, %r4429, %r4428, %r6;
	// inline asm
	ld.local.u32 	%r4314, [%rd7];
	ld.local.u32 	%r4315, [%rd6+12];
	// inline asm
	prmt.b32 %r4313, %r4314, %r4315, %r6;
	// inline asm
	st.local.u32 	[%rd9+12], %r4313;
	ld.local.v2.u32 	{%r4430, %r4431}, [%rd6+8];
	// inline asm
	prmt.b32 %r4317, %r4431, %r4430, %r6;
	// inline asm
	st.local.u32 	[%rd9+8], %r4317;
	ld.local.u32 	%r4322, [%rd6+8];
	ld.local.u32 	%r4323, [%rd6+4];
	// inline asm
	prmt.b32 %r4321, %r4322, %r4323, %r6;
	// inline asm
	st.local.u32 	[%rd9+4], %r4321;
	ld.local.v2.u32 	{%r4432, %r4433}, [%rd6];
	// inline asm
	prmt.b32 %r4325, %r4433, %r4432, %r6;
	// inline asm
	st.local.u32 	[%rd9], %r4325;
	ld.local.u32 	%r4330, [%rd6];
	ld.local.u32 	%r4331, [%rd5+12];
	// inline asm
	prmt.b32 %r4329, %r4330, %r4331, %r6;
	// inline asm
	st.local.u32 	[%rd8+12], %r4329;
	ld.local.v2.u32 	{%r4434, %r4435}, [%rd5+8];
	// inline asm
	prmt.b32 %r4333, %r4435, %r4434, %r6;
	// inline asm
	st.local.u32 	[%rd8+8], %r4333;
	ld.local.u32 	%r4338, [%rd5+8];
	ld.local.u32 	%r4339, [%rd5+4];
	// inline asm
	prmt.b32 %r4337, %r4338, %r4339, %r6;
	// inline asm
	st.local.u32 	[%rd8+4], %r4337;
	ld.local.v2.u32 	{%r4436, %r4437}, [%rd5];
	// inline asm
	prmt.b32 %r4341, %r4437, %r4436, %r6;
	// inline asm
	st.local.u32 	[%rd8], %r4341;
	ld.local.u32 	%r4346, [%rd5];
	ld.local.u32 	%r4347, [%rd4+12];
	// inline asm
	prmt.b32 %r4345, %r4346, %r4347, %r6;
	// inline asm
	st.local.u32 	[%rd7+12], %r4345;
	ld.local.v2.u32 	{%r4438, %r4439}, [%rd4+8];
	// inline asm
	prmt.b32 %r4349, %r4439, %r4438, %r6;
	// inline asm
	st.local.u32 	[%rd7+8], %r4349;
	ld.local.u32 	%r4354, [%rd4+8];
	ld.local.u32 	%r4355, [%rd4+4];
	// inline asm
	prmt.b32 %r4353, %r4354, %r4355, %r6;
	// inline asm
	st.local.u32 	[%rd7+4], %r4353;
	ld.local.v2.u32 	{%r4440, %r4441}, [%rd4];
	// inline asm
	prmt.b32 %r4357, %r4441, %r4440, %r6;
	// inline asm
	st.local.u32 	[%rd7], %r4357;
	ld.local.u32 	%r4362, [%rd4];
	ld.local.u32 	%r4363, [%rd3+12];
	// inline asm
	prmt.b32 %r4361, %r4362, %r4363, %r6;
	// inline asm
	st.local.u32 	[%rd6+12], %r4361;
	ld.local.v2.u32 	{%r4442, %r4443}, [%rd3+8];
	// inline asm
	prmt.b32 %r4365, %r4443, %r4442, %r6;
	// inline asm
	st.local.u32 	[%rd6+8], %r4365;
	ld.local.u32 	%r4370, [%rd3+8];
	ld.local.u32 	%r4371, [%rd3+4];
	// inline asm
	prmt.b32 %r4369, %r4370, %r4371, %r6;
	// inline asm
	st.local.u32 	[%rd6+4], %r4369;
	ld.local.v2.u32 	{%r4444, %r4445}, [%rd3];
	// inline asm
	prmt.b32 %r4373, %r4445, %r4444, %r6;
	// inline asm
	st.local.u32 	[%rd6], %r4373;
	ld.local.u32 	%r4378, [%rd3];
	ld.local.u32 	%r4379, [%rd2+12];
	// inline asm
	prmt.b32 %r4377, %r4378, %r4379, %r6;
	// inline asm
	st.local.u32 	[%rd5+12], %r4377;
	ld.local.v2.u32 	{%r4446, %r4447}, [%rd2+8];
	// inline asm
	prmt.b32 %r4381, %r4447, %r4446, %r6;
	// inline asm
	st.local.u32 	[%rd5+8], %r4381;
	ld.local.u32 	%r4386, [%rd2+8];
	ld.local.u32 	%r4387, [%rd2+4];
	// inline asm
	prmt.b32 %r4385, %r4386, %r4387, %r6;
	// inline asm
	st.local.u32 	[%rd5+4], %r4385;
	ld.local.v2.u32 	{%r4448, %r4449}, [%rd2];
	// inline asm
	prmt.b32 %r4389, %r4449, %r4448, %r6;
	// inline asm
	st.local.u32 	[%rd5], %r4389;
	ld.local.u32 	%r4394, [%rd2];
	// inline asm
	prmt.b32 %r4393, %r4394, %r7458, %r6;
	// inline asm
	st.local.v4.u32 	[%rd4], {%r7458, %r7458, %r7458, %r4393};
	st.local.v4.u32 	[%rd3], {%r7458, %r7458, %r7458, %r7458};
	st.local.v2.u32 	[%rd2+8], {%r7458, %r7458};
	mov.u64 	%rd208, 0;
	st.local.u64 	[%rd2], %rd208;
	bra.uni 	BB3_82;

BB3_58:
	setp.eq.s32	%p12, %r768, 27;
	@%p12 bra 	BB3_59;
	bra.uni 	BB3_89;

BB3_59:
	mov.u32 	%r7458, 0;
	// inline asm
	prmt.b32 %r7483, %r7458, %r766, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1578, %r1579}, [%rd9+8];
	// inline asm
	prmt.b32 %r7484, %r1579, %r1578, %r6;
	// inline asm
	ld.local.u32 	%r1450, [%rd9+8];
	ld.local.u32 	%r1451, [%rd9+4];
	// inline asm
	prmt.b32 %r7485, %r1450, %r1451, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1580, %r1581}, [%rd9];
	// inline asm
	prmt.b32 %r7486, %r1581, %r1580, %r6;
	// inline asm
	ld.local.u32 	%r1458, [%rd9];
	ld.local.u32 	%r1459, [%rd8+12];
	// inline asm
	prmt.b32 %r7479, %r1458, %r1459, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1582, %r1583}, [%rd8+8];
	// inline asm
	prmt.b32 %r7480, %r1583, %r1582, %r6;
	// inline asm
	ld.local.u32 	%r1466, [%rd8+8];
	ld.local.u32 	%r1467, [%rd8+4];
	// inline asm
	prmt.b32 %r7481, %r1466, %r1467, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1584, %r1585}, [%rd8];
	// inline asm
	prmt.b32 %r7482, %r1585, %r1584, %r6;
	// inline asm
	ld.local.u32 	%r1474, [%rd8];
	ld.local.u32 	%r1475, [%rd7+12];
	// inline asm
	prmt.b32 %r7475, %r1474, %r1475, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1586, %r1587}, [%rd7+8];
	// inline asm
	prmt.b32 %r7476, %r1587, %r1586, %r6;
	// inline asm
	ld.local.u32 	%r1482, [%rd7+8];
	ld.local.u32 	%r1483, [%rd7+4];
	// inline asm
	prmt.b32 %r7477, %r1482, %r1483, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1588, %r1589}, [%rd7];
	// inline asm
	prmt.b32 %r7478, %r1589, %r1588, %r6;
	// inline asm
	ld.local.u32 	%r1490, [%rd7];
	ld.local.u32 	%r1491, [%rd6+12];
	// inline asm
	prmt.b32 %r7471, %r1490, %r1491, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1590, %r1591}, [%rd6+8];
	// inline asm
	prmt.b32 %r7472, %r1591, %r1590, %r6;
	// inline asm
	ld.local.u32 	%r1498, [%rd6+8];
	ld.local.u32 	%r1499, [%rd6+4];
	// inline asm
	prmt.b32 %r7473, %r1498, %r1499, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1592, %r1593}, [%rd6];
	// inline asm
	prmt.b32 %r7474, %r1593, %r1592, %r6;
	// inline asm
	ld.local.u32 	%r1506, [%rd6];
	ld.local.u32 	%r1507, [%rd5+12];
	// inline asm
	prmt.b32 %r7467, %r1506, %r1507, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1594, %r1595}, [%rd5+8];
	// inline asm
	prmt.b32 %r7468, %r1595, %r1594, %r6;
	// inline asm
	ld.local.u32 	%r1514, [%rd5+8];
	ld.local.u32 	%r1515, [%rd5+4];
	// inline asm
	prmt.b32 %r7469, %r1514, %r1515, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1596, %r1597}, [%rd5];
	// inline asm
	prmt.b32 %r7470, %r1597, %r1596, %r6;
	// inline asm
	ld.local.u32 	%r1522, [%rd5];
	ld.local.u32 	%r1523, [%rd4+12];
	// inline asm
	prmt.b32 %r7463, %r1522, %r1523, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1598, %r1599}, [%rd4+8];
	// inline asm
	prmt.b32 %r7464, %r1599, %r1598, %r6;
	// inline asm
	ld.local.u32 	%r1530, [%rd4+8];
	ld.local.u32 	%r1531, [%rd4+4];
	// inline asm
	prmt.b32 %r7465, %r1530, %r1531, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1600, %r1601}, [%rd4];
	// inline asm
	prmt.b32 %r7466, %r1601, %r1600, %r6;
	// inline asm
	ld.local.u32 	%r1538, [%rd4];
	ld.local.u32 	%r1539, [%rd3+12];
	// inline asm
	prmt.b32 %r7459, %r1538, %r1539, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1602, %r1603}, [%rd3+8];
	// inline asm
	prmt.b32 %r7460, %r1603, %r1602, %r6;
	// inline asm
	ld.local.u32 	%r1546, [%rd3+8];
	ld.local.u32 	%r1547, [%rd3+4];
	// inline asm
	prmt.b32 %r7461, %r1546, %r1547, %r6;
	// inline asm
	ld.local.v2.u32 	{%r1604, %r1605}, [%rd3];
	// inline asm
	prmt.b32 %r7462, %r1605, %r1604, %r6;
	// inline asm
	ld.local.u32 	%r1554, [%rd3];
	ld.local.u32 	%r1555, [%rd2+12];
	// inline asm
	prmt.b32 %r1553, %r1554, %r1555, %r6;
	// inline asm
	st.local.u32 	[%rd9+12], %r1553;
	ld.local.v2.u32 	{%r1606, %r1607}, [%rd2+8];
	// inline asm
	prmt.b32 %r1557, %r1607, %r1606, %r6;
	// inline asm
	st.local.u32 	[%rd9+8], %r1557;
	ld.local.u32 	%r1562, [%rd2+8];
	ld.local.u32 	%r1563, [%rd2+4];
	// inline asm
	prmt.b32 %r1561, %r1562, %r1563, %r6;
	// inline asm
	st.local.u32 	[%rd9+4], %r1561;
	ld.local.v2.u32 	{%r1608, %r1609}, [%rd2];
	// inline asm
	prmt.b32 %r1565, %r1609, %r1608, %r6;
	// inline asm
	st.local.u32 	[%rd9], %r1565;
	ld.local.u32 	%r1570, [%rd2];
	// inline asm
	prmt.b32 %r1569, %r1570, %r7458, %r6;
	// inline asm
	st.local.v4.u32 	[%rd8], {%r7458, %r7458, %r7458, %r1569};
	st.local.v4.u32 	[%rd7], {%r7458, %r7458, %r7458, %r7458};
	st.local.v4.u32 	[%rd6], {%r7458, %r7458, %r7458, %r7458};
	st.local.v4.u32 	[%rd5], {%r7458, %r7458, %r7458, %r7458};
	st.local.v4.u32 	[%rd4], {%r7458, %r7458, %r7458, %r7458};
	st.local.v4.u32 	[%rd3], {%r7458, %r7458, %r7458, %r7458};
	st.local.v2.u32 	[%rd2+8], {%r7458, %r7458};
	mov.u64 	%rd192, 0;
	st.local.u64 	[%rd2], %rd192;
	bra.uni 	BB3_86;

BB3_19:
	setp.eq.s32	%p41, %r768, 7;
	@%p41 bra 	BB3_20;
	bra.uni 	BB3_89;

BB3_20:
	mov.u32 	%r7458, 0;
	// inline asm
	prmt.b32 %r7463, %r7458, %r766, %r6;
	// inline asm
	ld.local.v2.u32 	{%r5168, %r5169}, [%rd9+8];
	// inline asm
	prmt.b32 %r7464, %r5169, %r5168, %r6;
	// inline asm
	ld.local.u32 	%r5020, [%rd9+8];
	ld.local.u32 	%r5021, [%rd9+4];
	// inline asm
	prmt.b32 %r7465, %r5020, %r5021, %r6;
	// inline asm
	ld.local.v2.u32 	{%r5170, %r5171}, [%rd9];
	// inline asm
	prmt.b32 %r7466, %r5171, %r5170, %r6;
	// inline asm
	ld.local.u32 	%r5028, [%rd9];
	ld.local.u32 	%r5029, [%rd8+12];
	// inline asm
	prmt.b32 %r7459, %r5028, %r5029, %r6;
	// inline asm
	ld.local.v2.u32 	{%r5172, %r5173}, [%rd8+8];
	// inline asm
	prmt.b32 %r7460, %r5173, %r5172, %r6;
	// inline asm
	ld.local.u32 	%r5036, [%rd8+8];
	ld.local.u32 	%r5037, [%rd8+4];
	// inline asm
	prmt.b32 %r7461, %r5036, %r5037, %r6;
	// inline asm
	ld.local.v2.u32 	{%r5174, %r5175}, [%rd8];
	// inline asm
	prmt.b32 %r7462, %r5175, %r5174, %r6;
	// inline asm
	ld.local.u32 	%r5044, [%rd8];
	ld.local.u32 	%r5045, [%rd7+12];
	// inline asm
	prmt.b32 %r5043, %r5044, %r5045, %r6;
	// inline asm
	st.local.u32 	[%rd9+12], %r5043;
	ld.local.v2.u32 	{%r5176, %r5177}, [%rd7+8];
	// inline asm
	prmt.b32 %r5047, %r5177, %r5176, %r6;
	// inline asm
	st.local.u32 	[%rd9+8], %r5047;
	ld.local.u32 	%r5052, [%rd7+8];
	ld.local.u32 	%r5053, [%rd7+4];
	// inline asm
	prmt.b32 %r5051, %r5052, %r5053, %r6;
	// inline asm
	st.local.u32 	[%rd9+4], %r5051;
	ld.local.v2.u32 	{%r5178, %r5179}, [%rd7];
	// inline asm
	prmt.b32 %r5055, %r5179, %r5178, %r6;
	// inline asm
	st.local.u32 	[%rd9], %r5055;
	ld.local.u32 	%r5060, [%rd7];
	ld.local.u32 	%r5061, [%rd6+12];
	// inline asm
	prmt.b32 %r5059, %r5060, %r5061, %r6;
	// inline asm
	st.local.u32 	[%rd8+12], %r5059;
	ld.local.v2.u32 	{%r5180, %r5181}, [%rd6+8];
	// inline asm
	prmt.b32 %r5063, %r5181, %r5180, %r6;
	// inline asm
	st.local.u32 	[%rd8+8], %r5063;
	ld.local.u32 	%r5068, [%rd6+8];
	ld.local.u32 	%r5069, [%rd6+4];
	// inline asm
	prmt.b32 %r5067, %r5068, %r5069, %r6;
	// inline asm
	st.local.u32 	[%rd8+4], %r5067;
	ld.local.v2.u32 	{%r5182, %r5183}, [%rd6];
	// inline asm
	prmt.b32 %r5071, %r5183, %r5182, %r6;
	// inline asm
	st.local.u32 	[%rd8], %r5071;
	ld.local.u32 	%r5076, [%rd6];
	ld.local.u32 	%r5077, [%rd5+12];
	// inline asm
	prmt.b32 %r5075, %r5076, %r5077, %r6;
	// inline asm
	st.local.u32 	[%rd7+12], %r5075;
	ld.local.v2.u32 	{%r5184, %r5185}, [%rd5+8];
	// inline asm
	prmt.b32 %r5079, %r5185, %r5184, %r6;
	// inline asm
	st.local.u32 	[%rd7+8], %r5079;
	ld.local.u32 	%r5084, [%rd5+8];
	ld.local.u32 	%r5085, [%rd5+4];
	// inline asm
	prmt.b32 %r5083, %r5084, %r5085, %r6;
	// inline asm
	st.local.u32 	[%rd7+4], %r5083;
	ld.local.v2.u32 	{%r5186, %r5187}, [%rd5];
	// inline asm
	prmt.b32 %r5087, %r5187, %r5186, %r6;
	// inline asm
	st.local.u32 	[%rd7], %r5087;
	ld.local.u32 	%r5092, [%rd5];
	ld.local.u32 	%r5093, [%rd4+12];
	// inline asm
	prmt.b32 %r5091, %r5092, %r5093, %r6;
	// inline asm
	st.local.u32 	[%rd6+12], %r5091;
	ld.local.v2.u32 	{%r5188, %r5189}, [%rd4+8];
	// inline asm
	prmt.b32 %r5095, %r5189, %r5188, %r6;
	// inline asm
	st.local.u32 	[%rd6+8], %r5095;
	ld.local.u32 	%r5100, [%rd4+8];
	ld.local.u32 	%r5101, [%rd4+4];
	// inline asm
	prmt.b32 %r5099, %r5100, %r5101, %r6;
	// inline asm
	st.local.u32 	[%rd6+4], %r5099;
	ld.local.v2.u32 	{%r5190, %r5191}, [%rd4];
	// inline asm
	prmt.b32 %r5103, %r5191, %r5190, %r6;
	// inline asm
	st.local.u32 	[%rd6], %r5103;
	ld.local.u32 	%r5108, [%rd4];
	ld.local.u32 	%r5109, [%rd3+12];
	// inline asm
	prmt.b32 %r5107, %r5108, %r5109, %r6;
	// inline asm
	st.local.u32 	[%rd5+12], %r5107;
	ld.local.v2.u32 	{%r5192, %r5193}, [%rd3+8];
	// inline asm
	prmt.b32 %r5111, %r5193, %r5192, %r6;
	// inline asm
	st.local.u32 	[%rd5+8], %r5111;
	ld.local.u32 	%r5116, [%rd3+8];
	ld.local.u32 	%r5117, [%rd3+4];
	// inline asm
	prmt.b32 %r5115, %r5116, %r5117, %r6;
	// inline asm
	st.local.u32 	[%rd5+4], %r5115;
	ld.local.v2.u32 	{%r5194, %r5195}, [%rd3];
	// inline asm
	prmt.b32 %r5119, %r5195, %r5194, %r6;
	// inline asm
	st.local.u32 	[%rd5], %r5119;
	ld.local.u32 	%r5124, [%rd3];
	ld.local.u32 	%r5125, [%rd2+12];
	// inline asm
	prmt.b32 %r5123, %r5124, %r5125, %r6;
	// inline asm
	st.local.u32 	[%rd4+12], %r5123;
	ld.local.v2.u32 	{%r5196, %r5197}, [%rd2+8];
	// inline asm
	prmt.b32 %r5127, %r5197, %r5196, %r6;
	// inline asm
	st.local.u32 	[%rd4+8], %r5127;
	ld.local.u32 	%r5132, [%rd2+8];
	ld.local.u32 	%r5133, [%rd2+4];
	// inline asm
	prmt.b32 %r5131, %r5132, %r5133, %r6;
	// inline asm
	st.local.u32 	[%rd4+4], %r5131;
	ld.local.v2.u32 	{%r5198, %r5199}, [%rd2];
	// inline asm
	prmt.b32 %r5135, %r5199, %r5198, %r6;
	// inline asm
	st.local.u32 	[%rd4], %r5135;
	ld.local.u32 	%r5140, [%rd2];
	// inline asm
	prmt.b32 %r5139, %r5140, %r7458, %r6;
	// inline asm
	st.local.v4.u32 	[%rd3], {%r7458, %r7458, %r7458, %r5139};
	st.local.v2.u32 	[%rd2+8], {%r7458, %r7458};
	mov.u64 	%rd212, 0;
	st.local.u64 	[%rd2], %rd212;

BB3_81:
	mov.u32 	%r7467, %r7458;
	mov.u32 	%r7468, %r7458;
	mov.u32 	%r7469, %r7458;
	mov.u32 	%r7470, %r7458;

BB3_82:
	mov.u32 	%r7471, %r7458;
	mov.u32 	%r7472, %r7458;
	mov.u32 	%r7473, %r7458;
	mov.u32 	%r7474, %r7458;

BB3_83:
	mov.u32 	%r7475, %r7458;
	mov.u32 	%r7476, %r7458;
	mov.u32 	%r7477, %r7458;
	mov.u32 	%r7478, %r7458;

BB3_84:
	mov.u32 	%r7479, %r7458;
	mov.u32 	%r7480, %r7458;
	mov.u32 	%r7481, %r7458;
	mov.u32 	%r7482, %r7458;

BB3_85:
	mov.u32 	%r7483, %r7458;
	mov.u32 	%r7484, %r7458;
	mov.u32 	%r7485, %r7458;
	mov.u32 	%r7486, %r7458;

BB3_86:
	mov.u32 	%r7487, %r7458;
	mov.u32 	%r7488, %r7458;
	mov.u32 	%r7489, %r7458;
	mov.u32 	%r7490, %r7458;
	bra.uni 	BB3_91;

BB3_50:
	setp.eq.s32	%p18, %r768, 23;
	@%p18 bra 	BB3_51;
	bra.uni 	BB3_89;

BB3_51:
	mov.u32 	%r7458, 0;
	// inline asm
	prmt.b32 %r7479, %r7458, %r766, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2264, %r2265}, [%rd9+8];
	// inline asm
	prmt.b32 %r7480, %r2265, %r2264, %r6;
	// inline asm
	ld.local.u32 	%r2132, [%rd9+8];
	ld.local.u32 	%r2133, [%rd9+4];
	// inline asm
	prmt.b32 %r7481, %r2132, %r2133, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2266, %r2267}, [%rd9];
	// inline asm
	prmt.b32 %r7482, %r2267, %r2266, %r6;
	// inline asm
	ld.local.u32 	%r2140, [%rd9];
	ld.local.u32 	%r2141, [%rd8+12];
	// inline asm
	prmt.b32 %r7475, %r2140, %r2141, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2268, %r2269}, [%rd8+8];
	// inline asm
	prmt.b32 %r7476, %r2269, %r2268, %r6;
	// inline asm
	ld.local.u32 	%r2148, [%rd8+8];
	ld.local.u32 	%r2149, [%rd8+4];
	// inline asm
	prmt.b32 %r7477, %r2148, %r2149, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2270, %r2271}, [%rd8];
	// inline asm
	prmt.b32 %r7478, %r2271, %r2270, %r6;
	// inline asm
	ld.local.u32 	%r2156, [%rd8];
	ld.local.u32 	%r2157, [%rd7+12];
	// inline asm
	prmt.b32 %r7471, %r2156, %r2157, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2272, %r2273}, [%rd7+8];
	// inline asm
	prmt.b32 %r7472, %r2273, %r2272, %r6;
	// inline asm
	ld.local.u32 	%r2164, [%rd7+8];
	ld.local.u32 	%r2165, [%rd7+4];
	// inline asm
	prmt.b32 %r7473, %r2164, %r2165, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2274, %r2275}, [%rd7];
	// inline asm
	prmt.b32 %r7474, %r2275, %r2274, %r6;
	// inline asm
	ld.local.u32 	%r2172, [%rd7];
	ld.local.u32 	%r2173, [%rd6+12];
	// inline asm
	prmt.b32 %r7467, %r2172, %r2173, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2276, %r2277}, [%rd6+8];
	// inline asm
	prmt.b32 %r7468, %r2277, %r2276, %r6;
	// inline asm
	ld.local.u32 	%r2180, [%rd6+8];
	ld.local.u32 	%r2181, [%rd6+4];
	// inline asm
	prmt.b32 %r7469, %r2180, %r2181, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2278, %r2279}, [%rd6];
	// inline asm
	prmt.b32 %r7470, %r2279, %r2278, %r6;
	// inline asm
	ld.local.u32 	%r2188, [%rd6];
	ld.local.u32 	%r2189, [%rd5+12];
	// inline asm
	prmt.b32 %r7463, %r2188, %r2189, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2280, %r2281}, [%rd5+8];
	// inline asm
	prmt.b32 %r7464, %r2281, %r2280, %r6;
	// inline asm
	ld.local.u32 	%r2196, [%rd5+8];
	ld.local.u32 	%r2197, [%rd5+4];
	// inline asm
	prmt.b32 %r7465, %r2196, %r2197, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2282, %r2283}, [%rd5];
	// inline asm
	prmt.b32 %r7466, %r2283, %r2282, %r6;
	// inline asm
	ld.local.u32 	%r2204, [%rd5];
	ld.local.u32 	%r2205, [%rd4+12];
	// inline asm
	prmt.b32 %r7459, %r2204, %r2205, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2284, %r2285}, [%rd4+8];
	// inline asm
	prmt.b32 %r7460, %r2285, %r2284, %r6;
	// inline asm
	ld.local.u32 	%r2212, [%rd4+8];
	ld.local.u32 	%r2213, [%rd4+4];
	// inline asm
	prmt.b32 %r7461, %r2212, %r2213, %r6;
	// inline asm
	ld.local.v2.u32 	{%r2286, %r2287}, [%rd4];
	// inline asm
	prmt.b32 %r7462, %r2287, %r2286, %r6;
	// inline asm
	ld.local.u32 	%r2220, [%rd4];
	ld.local.u32 	%r2221, [%rd3+12];
	// inline asm
	prmt.b32 %r2219, %r2220, %r2221, %r6;
	// inline asm
	st.local.u32 	[%rd9+12], %r2219;
	ld.local.v2.u32 	{%r2288, %r2289}, [%rd3+8];
	// inline asm
	prmt.b32 %r2223, %r2289, %r2288, %r6;
	// inline asm
	st.local.u32 	[%rd9+8], %r2223;
	ld.local.u32 	%r2228, [%rd3+8];
	ld.local.u32 	%r2229, [%rd3+4];
	// inline asm
	prmt.b32 %r2227, %r2228, %r2229, %r6;
	// inline asm
	st.local.u32 	[%rd9+4], %r2227;
	ld.local.v2.u32 	{%r2290, %r2291}, [%rd3];
	// inline asm
	prmt.b32 %r2231, %r2291, %r2290, %r6;
	// inline asm
	st.local.u32 	[%rd9], %r2231;
	ld.local.u32 	%r2236, [%rd3];
	ld.local.u32 	%r2237, [%rd2+12];
	// inline asm
	prmt.b32 %r2235, %r2236, %r2237, %r6;
	// inline asm
	st.local.u32 	[%rd8+12], %r2235;
	ld.local.v2.u32 	{%r2292, %r2293}, [%rd2+8];
	// inline asm
	prmt.b32 %r2239, %r2293, %r2292, %r6;
	// inline asm
	st.local.u32 	[%rd8+8], %r2239;
	ld.local.u32 	%r2244, [%rd2+8];
	ld.local.u32 	%r2245, [%rd2+4];
	// inline asm
	prmt.b32 %r2243, %r2244, %r2245, %r6;
	// inline asm
	st.local.u32 	[%rd8+4], %r2243;
	ld.local.v2.u32 	{%r2294, %r2295}, [%rd2];
	// inline asm
	prmt.b32 %r2247, %r2295, %r2294, %r6;
	// inline asm
	st.local.u32 	[%rd8], %r2247;
	ld.local.u32 	%r2252, [%rd2];
	// inline asm
	prmt.b32 %r2251, %r2252, %r7458, %r6;
	// inline asm
	st.local.v4.u32 	[%rd7], {%r7458, %r7458, %r7458, %r2251};
	st.local.v4.u32 	[%rd6], {%r7458, %r7458, %r7458, %r7458};
	st.local.v4.u32 	[%rd5], {%r7458, %r7458, %r7458, %r7458};
	st.local.v4.u32 	[%rd4], {%r7458, %r7458, %r7458, %r7458};
	st.local.v4.u32 	[%rd3], {%r7458, %r7458, %r7458, %r7458};
	st.local.v2.u32 	[%rd2+8], {%r7458, %r7458};
	mov.u64 	%rd196, 0;
	st.local.u64 	[%rd2], %rd196;
	bra.uni 	BB3_85;

BB3_34:
	setp.eq.s32	%p30, %r768, 15;
	@%p30 bra 	BB3_35;
	bra.uni 	BB3_89;

BB3_35:
	mov.u32 	%r7458, 0;
	// inline asm
	prmt.b32 %r7471, %r7458, %r766, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3684, %r3685}, [%rd9+8];
	// inline asm
	prmt.b32 %r7472, %r3685, %r3684, %r6;
	// inline asm
	ld.local.u32 	%r3544, [%rd9+8];
	ld.local.u32 	%r3545, [%rd9+4];
	// inline asm
	prmt.b32 %r7473, %r3544, %r3545, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3686, %r3687}, [%rd9];
	// inline asm
	prmt.b32 %r7474, %r3687, %r3686, %r6;
	// inline asm
	ld.local.u32 	%r3552, [%rd9];
	ld.local.u32 	%r3553, [%rd8+12];
	// inline asm
	prmt.b32 %r7467, %r3552, %r3553, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3688, %r3689}, [%rd8+8];
	// inline asm
	prmt.b32 %r7468, %r3689, %r3688, %r6;
	// inline asm
	ld.local.u32 	%r3560, [%rd8+8];
	ld.local.u32 	%r3561, [%rd8+4];
	// inline asm
	prmt.b32 %r7469, %r3560, %r3561, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3690, %r3691}, [%rd8];
	// inline asm
	prmt.b32 %r7470, %r3691, %r3690, %r6;
	// inline asm
	ld.local.u32 	%r3568, [%rd8];
	ld.local.u32 	%r3569, [%rd7+12];
	// inline asm
	prmt.b32 %r7463, %r3568, %r3569, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3692, %r3693}, [%rd7+8];
	// inline asm
	prmt.b32 %r7464, %r3693, %r3692, %r6;
	// inline asm
	ld.local.u32 	%r3576, [%rd7+8];
	ld.local.u32 	%r3577, [%rd7+4];
	// inline asm
	prmt.b32 %r7465, %r3576, %r3577, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3694, %r3695}, [%rd7];
	// inline asm
	prmt.b32 %r7466, %r3695, %r3694, %r6;
	// inline asm
	ld.local.u32 	%r3584, [%rd7];
	ld.local.u32 	%r3585, [%rd6+12];
	// inline asm
	prmt.b32 %r7459, %r3584, %r3585, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3696, %r3697}, [%rd6+8];
	// inline asm
	prmt.b32 %r7460, %r3697, %r3696, %r6;
	// inline asm
	ld.local.u32 	%r3592, [%rd6+8];
	ld.local.u32 	%r3593, [%rd6+4];
	// inline asm
	prmt.b32 %r7461, %r3592, %r3593, %r6;
	// inline asm
	ld.local.v2.u32 	{%r3698, %r3699}, [%rd6];
	// inline asm
	prmt.b32 %r7462, %r3699, %r3698, %r6;
	// inline asm
	ld.local.u32 	%r3600, [%rd6];
	ld.local.u32 	%r3601, [%rd5+12];
	// inline asm
	prmt.b32 %r3599, %r3600, %r3601, %r6;
	// inline asm
	st.local.u32 	[%rd9+12], %r3599;
	ld.local.v2.u32 	{%r3700, %r3701}, [%rd5+8];
	// inline asm
	prmt.b32 %r3603, %r3701, %r3700, %r6;
	// inline asm
	st.local.u32 	[%rd9+8], %r3603;
	ld.local.u32 	%r3608, [%rd5+8];
	ld.local.u32 	%r3609, [%rd5+4];
	// inline asm
	prmt.b32 %r3607, %r3608, %r3609, %r6;
	// inline asm
	st.local.u32 	[%rd9+4], %r3607;
	ld.local.v2.u32 	{%r3702, %r3703}, [%rd5];
	// inline asm
	prmt.b32 %r3611, %r3703, %r3702, %r6;
	// inline asm
	st.local.u32 	[%rd9], %r3611;
	ld.local.u32 	%r3616, [%rd5];
	ld.local.u32 	%r3617, [%rd4+12];
	// inline asm
	prmt.b32 %r3615, %r3616, %r3617, %r6;
	// inline asm
	st.local.u32 	[%rd8+12], %r3615;
	ld.local.v2.u32 	{%r3704, %r3705}, [%rd4+8];
	// inline asm
	prmt.b32 %r3619, %r3705, %r3704, %r6;
	// inline asm
	st.local.u32 	[%rd8+8], %r3619;
	ld.local.u32 	%r3624, [%rd4+8];
	ld.local.u32 	%r3625, [%rd4+4];
	// inline asm
	prmt.b32 %r3623, %r3624, %r3625, %r6;
	// inline asm
	st.local.u32 	[%rd8+4], %r3623;
	ld.local.v2.u32 	{%r3706, %r3707}, [%rd4];
	// inline asm
	prmt.b32 %r3627, %r3707, %r3706, %r6;
	// inline asm
	st.local.u32 	[%rd8], %r3627;
	ld.local.u32 	%r3632, [%rd4];
	ld.local.u32 	%r3633, [%rd3+12];
	// inline asm
	prmt.b32 %r3631, %r3632, %r3633, %r6;
	// inline asm
	st.local.u32 	[%rd7+12], %r3631;
	ld.local.v2.u32 	{%r3708, %r3709}, [%rd3+8];
	// inline asm
	prmt.b32 %r3635, %r3709, %r3708, %r6;
	// inline asm
	st.local.u32 	[%rd7+8], %r3635;
	ld.local.u32 	%r3640, [%rd3+8];
	ld.local.u32 	%r3641, [%rd3+4];
	// inline asm
	prmt.b32 %r3639, %r3640, %r3641, %r6;
	// inline asm
	st.local.u32 	[%rd7+4], %r3639;
	ld.local.v2.u32 	{%r3710, %r3711}, [%rd3];
	// inline asm
	prmt.b32 %r3643, %r3711, %r3710, %r6;
	// inline asm
	st.local.u32 	[%rd7], %r3643;
	ld.local.u32 	%r3648, [%rd3];
	ld.local.u32 	%r3649, [%rd2+12];
	// inline asm
	prmt.b32 %r3647, %r3648, %r3649, %r6;
	// inline asm
	st.local.u32 	[%rd6+12], %r3647;
	ld.local.v2.u32 	{%r3712, %r3713}, [%rd2+8];
	// inline asm
	prmt.b32 %r3651, %r3713, %r3712, %r6;
	// inline asm
	st.local.u32 	[%rd6+8], %r3651;
	ld.local.u32 	%r3656, [%rd2+8];
	ld.local.u32 	%r3657, [%rd2+4];
	// inline asm
	prmt.b32 %r3655, %r3656, %r3657, %r6;
	// inline asm
	st.local.u32 	[%rd6+4], %r3655;
	ld.local.v2.u32 	{%r3714, %r3715}, [%rd2];
	// inline asm
	prmt.b32 %r3659, %r3715, %r3714, %r6;
	// inline asm
	st.local.u32 	[%rd6], %r3659;
	ld.local.u32 	%r3664, [%rd2];
	// inline asm
	prmt.b32 %r3663, %r3664, %r7458, %r6;
	// inline asm
	st.local.v4.u32 	[%rd5], {%r7458, %r7458, %r7458, %r3663};
	st.local.v4.u32 	[%rd4], {%r7458, %r7458, %r7458, %r7458};
	st.local.v4.u32 	[%rd3], {%r7458, %r7458, %r7458, %r7458};
	st.local.v2.u32 	[%rd2+8], {%r7458, %r7458};
	mov.u64 	%rd204, 0;
	st.local.u64 	[%rd2], %rd204;
	bra.uni 	BB3_83;

BB3_65:
	setp.ne.s32	%p7, %r768, 31;
	@%p7 bra 	BB3_89;

	mov.u32 	%r7458, 0;
	// inline asm
	prmt.b32 %r7487, %r7458, %r766, %r6;
	// inline asm
	ld.local.v2.u32 	{%r908, %r909}, [%rd9+8];
	// inline asm
	prmt.b32 %r7488, %r909, %r908, %r6;
	// inline asm
	ld.local.u32 	%r784, [%rd9+8];
	ld.local.u32 	%r785, [%rd9+4];
	// inline asm
	prmt.b32 %r7489, %r784, %r785, %r6;
	// inline asm
	ld.local.v2.u32 	{%r910, %r911}, [%rd9];
	// inline asm
	prmt.b32 %r7490, %r911, %r910, %r6;
	// inline asm
	ld.local.u32 	%r792, [%rd9];
	ld.local.u32 	%r793, [%rd8+12];
	// inline asm
	prmt.b32 %r7483, %r792, %r793, %r6;
	// inline asm
	ld.local.v2.u32 	{%r912, %r913}, [%rd8+8];
	// inline asm
	prmt.b32 %r7484, %r913, %r912, %r6;
	// inline asm
	ld.local.u32 	%r800, [%rd8+8];
	ld.local.u32 	%r801, [%rd8+4];
	// inline asm
	prmt.b32 %r7485, %r800, %r801, %r6;
	// inline asm
	ld.local.v2.u32 	{%r914, %r915}, [%rd8];
	// inline asm
	prmt.b32 %r7486, %r915, %r914, %r6;
	// inline asm
	ld.local.u32 	%r808, [%rd8];
	ld.local.u32 	%r809, [%rd7+12];
	// inline asm
	prmt.b32 %r7479, %r808, %r809, %r6;
	// inline asm
	ld.local.v2.u32 	{%r916, %r917}, [%rd7+8];
	// inline asm
	prmt.b32 %r7480, %r917, %r916, %r6;
	// inline asm
	ld.local.u32 	%r816, [%rd7+8];
	ld.local.u32 	%r817, [%rd7+4];
	// inline asm
	prmt.b32 %r7481, %r816, %r817, %r6;
	// inline asm
	ld.local.v2.u32 	{%r918, %r919}, [%rd7];
	// inline asm
	prmt.b32 %r7482, %r919, %r918, %r6;
	// inline asm
	ld.local.u32 	%r824, [%rd7];
	ld.local.u32 	%r825, [%rd6+12];
	// inline asm
	prmt.b32 %r7475, %r824, %r825, %r6;
	// inline asm
	ld.local.v2.u32 	{%r920, %r921}, [%rd6+8];
	// inline asm
	prmt.b32 %r7476, %r921, %r920, %r6;
	// inline asm
	ld.local.u32 	%r832, [%rd6+8];
	ld.local.u32 	%r833, [%rd6+4];
	// inline asm
	prmt.b32 %r7477, %r832, %r833, %r6;
	// inline asm
	ld.local.v2.u32 	{%r922, %r923}, [%rd6];
	// inline asm
	prmt.b32 %r7478, %r923, %r922, %r6;
	// inline asm
	ld.local.u32 	%r840, [%rd6];
	ld.local.u32 	%r841, [%rd5+12];
	// inline asm
	prmt.b32 %r7471, %r840, %r841, %r6;
	// inline asm
	ld.local.v2.u32 	{%r924, %r925}, [%rd5+8];
	// inline asm
	prmt.b32 %r7472, %r925, %r924, %r6;
	// inline asm
	ld.local.u32 	%r848, [%rd5+8];
	ld.local.u32 	%r849, [%rd5+4];
	// inline asm
	prmt.b32 %r7473, %r848, %r849, %r6;
	// inline asm
	ld.local.v2.u32 	{%r926, %r927}, [%rd5];
	// inline asm
	prmt.b32 %r7474, %r927, %r926, %r6;
	// inline asm
	ld.local.u32 	%r856, [%rd5];
	ld.local.u32 	%r857, [%rd4+12];
	// inline asm
	prmt.b32 %r7467, %r856, %r857, %r6;
	// inline asm
	ld.local.v2.u32 	{%r928, %r929}, [%rd4+8];
	// inline asm
	prmt.b32 %r7468, %r929, %r928, %r6;
	// inline asm
	ld.local.u32 	%r864, [%rd4+8];
	ld.local.u32 	%r865, [%rd4+4];
	// inline asm
	prmt.b32 %r7469, %r864, %r865, %r6;
	// inline asm
	ld.local.v2.u32 	{%r930, %r931}, [%rd4];
	// inline asm
	prmt.b32 %r7470, %r931, %r930, %r6;
	// inline asm
	ld.local.u32 	%r872, [%rd4];
	ld.local.u32 	%r873, [%rd3+12];
	// inline asm
	prmt.b32 %r7463, %r872, %r873, %r6;
	// inline asm
	ld.local.v2.u32 	{%r932, %r933}, [%rd3+8];
	// inline asm
	prmt.b32 %r7464, %r933, %r932, %r6;
	// inline asm
	ld.local.u32 	%r880, [%rd3+8];
	ld.local.u32 	%r881, [%rd3+4];
	// inline asm
	prmt.b32 %r7465, %r880, %r881, %r6;
	// inline asm
	ld.local.v2.u32 	{%r934, %r935}, [%rd3];
	// inline asm
	prmt.b32 %r7466, %r935, %r934, %r6;
	// inline asm
	ld.local.u32 	%r888, [%rd3];
	ld.local.u32 	%r889, [%rd2+12];
	// inline asm
	prmt.b32 %r7459, %r888, %r889, %r6;
	// inline asm
	ld.local.v2.u32 	{%r936, %r937}, [%rd2+8];
	// inline asm
	prmt.b32 %r7460, %r937, %r936, %r6;
	// inline asm
	ld.local.u32 	%r896, [%rd2+8];
	ld.local.u32 	%r897, [%rd2+4];
	// inline asm
	prmt.b32 %r7461, %r896, %r897, %r6;
	// inline asm
	ld.local.v2.u32 	{%r938, %r939}, [%rd2];
	// inline asm
	prmt.b32 %r7462, %r939, %r938, %r6;
	// inline asm
	ld.local.u32 	%r904, [%rd2];
	// inline asm
	prmt.b32 %r903, %r904, %r7458, %r6;
	// inline asm
	st.local.v4.u32 	[%rd9], {%r7458, %r7458, %r7458, %r903};
	st.local.v4.u32 	[%rd8], {%r7458, %r7458, %r7458, %r7458};
	st.local.v4.u32 	[%rd7], {%r7458, %r7458, %r7458, %r7458};
	st.local.v4.u32 	[%rd6], {%r7458, %r7458, %r7458, %r7458};
	st.local.v4.u32 	[%rd5], {%r7458, %r7458, %r7458, %r7458};
	st.local.v4.u32 	[%rd4], {%r7458, %r7458, %r7458, %r7458};
	st.local.v4.u32 	[%rd3], {%r7458, %r7458, %r7458, %r7458};
	st.local.v2.u32 	[%rd2+8], {%r7458, %r7458};
	mov.u64 	%rd188, 0;
	st.local.u64 	[%rd2], %rd188;
	bra.uni 	BB3_91;

BB3_89:
	ld.local.u32 	%r7458, [%rd2];
	mov.u32 	%r7459, 0;
	mov.u32 	%r7460, %r7459;
	mov.u32 	%r7461, %r7459;
	mov.u32 	%r7462, %r7459;

BB3_90:
	mov.u32 	%r7463, %r7459;
	mov.u32 	%r7464, %r7459;
	mov.u32 	%r7465, %r7459;
	mov.u32 	%r7466, %r7459;
	mov.u32 	%r7467, %r7459;
	mov.u32 	%r7468, %r7459;
	mov.u32 	%r7469, %r7459;
	mov.u32 	%r7470, %r7459;
	mov.u32 	%r7471, %r7459;
	mov.u32 	%r7472, %r7459;
	mov.u32 	%r7473, %r7459;
	mov.u32 	%r7474, %r7459;
	mov.u32 	%r7475, %r7459;
	mov.u32 	%r7476, %r7459;
	mov.u32 	%r7477, %r7459;
	mov.u32 	%r7478, %r7459;
	mov.u32 	%r7479, %r7459;
	mov.u32 	%r7480, %r7459;
	mov.u32 	%r7481, %r7459;
	mov.u32 	%r7482, %r7459;
	mov.u32 	%r7483, %r7459;
	mov.u32 	%r7484, %r7459;
	mov.u32 	%r7485, %r7459;
	mov.u32 	%r7486, %r7459;
	mov.u32 	%r7487, %r7459;
	mov.u32 	%r7488, %r7459;
	mov.u32 	%r7489, %r7459;
	mov.u32 	%r7490, %r7459;

BB3_91:
	ld.const.u64 	%rd1244, [k_sha512+120];
	ld.const.u64 	%rd1243, [k_sha512+112];
	ld.const.u64 	%rd1242, [k_sha512+104];
	ld.const.u64 	%rd1241, [k_sha512+96];
	ld.const.u64 	%rd1240, [k_sha512+88];
	ld.const.u64 	%rd1239, [k_sha512+80];
	ld.const.u64 	%rd1238, [k_sha512+72];
	ld.const.u64 	%rd1237, [k_sha512+64];
	ld.const.u64 	%rd1236, [k_sha512+56];
	ld.const.u64 	%rd1235, [k_sha512+48];
	ld.const.u64 	%rd1234, [k_sha512+40];
	ld.const.u64 	%rd1233, [k_sha512+32];
	ld.const.u64 	%rd1232, [k_sha512+24];
	ld.const.u64 	%rd1231, [k_sha512+16];
	ld.const.u64 	%rd1230, [k_sha512+8];
	ld.const.u64 	%rd1229, [k_sha512];
	ld.local.v2.u32 	{%r6583, %r6584}, [%rd1+64];
	ld.local.v2.u32 	{%r6586, %r6587}, [%rd1+72];
	ld.local.v2.u32 	{%r6588, %r6589}, [%rd1+80];
	ld.local.v2.u32 	{%r6590, %r6591}, [%rd1+88];
	ld.local.v2.u32 	{%r6592, %r6593}, [%rd1+96];
	ld.local.v2.u32 	{%r6594, %r6595}, [%rd1+104];
	ld.local.v2.u32 	{%r6596, %r6597}, [%rd1+112];
	ld.local.v2.u32 	{%r6598, %r6599}, [%rd1+120];
	ld.local.v2.u32 	{%r6600, %r6601}, [%rd1+128];
	ld.local.v2.u32 	{%r6602, %r6603}, [%rd1+136];
	ld.local.v2.u32 	{%r6604, %r6605}, [%rd1+144];
	ld.local.v2.u32 	{%r6606, %r6607}, [%rd1+152];
	ld.local.v2.u32 	{%r6608, %r6609}, [%rd1+160];
	ld.local.v2.u32 	{%r6610, %r6611}, [%rd1+168];
	ld.local.v2.u32 	{%r6612, %r6613}, [%rd1+176];
	ld.local.v2.u32 	{%r6614, %r6615}, [%rd1+184];
	or.b32  	%r6616, %r6583, %r7458;
	st.local.u32 	[%rd1+64], %r6616;
	ld.local.u32 	%r6618, [%rd2+4];
	ld.local.v2.u32 	{%r6619, %r6620}, [%rd2+8];
	or.b32  	%r6621, %r6584, %r6618;
	st.local.u32 	[%rd1+68], %r6621;
	or.b32  	%r6624, %r6587, %r6620;
	or.b32  	%r6627, %r6586, %r6619;
	st.local.v2.u32 	[%rd1+72], {%r6627, %r6624};
	ld.local.v4.u32 	{%r6628, %r6629, %r6630, %r6631}, [%rd3];
	or.b32  	%r6634, %r6589, %r6629;
	or.b32  	%r6637, %r6588, %r6628;
	st.local.v2.u32 	[%rd1+80], {%r6637, %r6634};
	or.b32  	%r6640, %r6591, %r6631;
	or.b32  	%r6643, %r6590, %r6630;
	st.local.v2.u32 	[%rd1+88], {%r6643, %r6640};
	ld.local.v4.u32 	{%r6644, %r6645, %r6646, %r6647}, [%rd4];
	or.b32  	%r6650, %r6593, %r6645;
	or.b32  	%r6653, %r6592, %r6644;
	st.local.v2.u32 	[%rd1+96], {%r6653, %r6650};
	or.b32  	%r6656, %r6595, %r6647;
	or.b32  	%r6659, %r6594, %r6646;
	st.local.v2.u32 	[%rd1+104], {%r6659, %r6656};
	ld.local.v4.u32 	{%r6660, %r6661, %r6662, %r6663}, [%rd5];
	or.b32  	%r6666, %r6597, %r6661;
	or.b32  	%r6669, %r6596, %r6660;
	st.local.v2.u32 	[%rd1+112], {%r6669, %r6666};
	or.b32  	%r6672, %r6599, %r6663;
	or.b32  	%r6675, %r6598, %r6662;
	st.local.v2.u32 	[%rd1+120], {%r6675, %r6672};
	ld.local.v4.u32 	{%r6676, %r6677, %r6678, %r6679}, [%rd6];
	or.b32  	%r6682, %r6601, %r6677;
	or.b32  	%r6685, %r6600, %r6676;
	st.local.v2.u32 	[%rd1+128], {%r6685, %r6682};
	or.b32  	%r6688, %r6603, %r6679;
	or.b32  	%r6691, %r6602, %r6678;
	st.local.v2.u32 	[%rd1+136], {%r6691, %r6688};
	ld.local.v4.u32 	{%r6692, %r6693, %r6694, %r6695}, [%rd7];
	or.b32  	%r6698, %r6605, %r6693;
	or.b32  	%r6701, %r6604, %r6692;
	st.local.v2.u32 	[%rd1+144], {%r6701, %r6698};
	or.b32  	%r6704, %r6607, %r6695;
	or.b32  	%r6707, %r6606, %r6694;
	st.local.v2.u32 	[%rd1+152], {%r6707, %r6704};
	ld.local.v4.u32 	{%r6708, %r6709, %r6710, %r6711}, [%rd8];
	or.b32  	%r6714, %r6609, %r6709;
	or.b32  	%r6717, %r6608, %r6708;
	st.local.v2.u32 	[%rd1+160], {%r6717, %r6714};
	or.b32  	%r6720, %r6611, %r6711;
	or.b32  	%r6723, %r6610, %r6710;
	st.local.v2.u32 	[%rd1+168], {%r6723, %r6720};
	ld.local.v4.u32 	{%r6724, %r6725, %r6726, %r6727}, [%rd9];
	or.b32  	%r6730, %r6613, %r6725;
	or.b32  	%r6733, %r6612, %r6724;
	st.local.v2.u32 	[%rd1+176], {%r6733, %r6730};
	or.b32  	%r6736, %r6615, %r6727;
	or.b32  	%r6739, %r6614, %r6726;
	st.local.v2.u32 	[%rd1+184], {%r6739, %r6736};
	mov.b64	%rd1261, {%r6621, %r6616};
	mov.b64	%rd1262, {%r6624, %r6627};
	mov.b64	%rd1263, {%r6634, %r6637};
	mov.b64	%rd1264, {%r6640, %r6643};
	mov.b64	%rd1265, {%r6650, %r6653};
	mov.b64	%rd1266, {%r6656, %r6659};
	mov.b64	%rd1267, {%r6666, %r6669};
	mov.b64	%rd1268, {%r6672, %r6675};
	mov.b64	%rd1252, {%r6682, %r6685};
	mov.b64	%rd1251, {%r6688, %r6691};
	mov.b64	%rd1250, {%r6698, %r6701};
	mov.b64	%rd1249, {%r6704, %r6707};
	mov.b64	%rd1248, {%r6714, %r6717};
	mov.b64	%rd1247, {%r6720, %r6723};
	mov.b64	%rd1246, {%r6730, %r6733};
	mov.b64	%rd1245, {%r6736, %r6739};
	ld.local.u64 	%rd42, [%rd1+32];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6740,%dummy}, %rd42;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6741}, %rd42;
	}
	shf.r.wrap.b32 	%r6742, %r6741, %r6740, 14;
	shf.r.wrap.b32 	%r6743, %r6740, %r6741, 14;
	mov.b64 	%rd218, {%r6743, %r6742};
	shf.r.wrap.b32 	%r6744, %r6741, %r6740, 18;
	shf.r.wrap.b32 	%r6745, %r6740, %r6741, 18;
	mov.b64 	%rd219, {%r6745, %r6744};
	xor.b64  	%rd220, %rd219, %rd218;
	shf.l.wrap.b32 	%r6746, %r6740, %r6741, 23;
	shf.l.wrap.b32 	%r6747, %r6741, %r6740, 23;
	mov.b64 	%rd221, {%r6747, %r6746};
	xor.b64  	%rd222, %rd220, %rd221;
	ld.local.u64 	%rd43, [%rd1+48];
	ld.local.u64 	%rd44, [%rd1+40];
	xor.b64  	%rd223, %rd43, %rd44;
	and.b64  	%rd224, %rd223, %rd42;
	xor.b64  	%rd225, %rd224, %rd43;
	ld.local.u64 	%rd45, [%rd1+56];
	add.s64 	%rd226, %rd225, %rd45;
	add.s64 	%rd227, %rd226, %rd1261;
	add.s64 	%rd228, %rd227, %rd1229;
	add.s64 	%rd229, %rd228, %rd222;
	ld.local.u64 	%rd46, [%rd1+24];
	add.s64 	%rd230, %rd229, %rd46;
	ld.local.u64 	%rd47, [%rd1];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6748,%dummy}, %rd47;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6749}, %rd47;
	}
	shf.r.wrap.b32 	%r6750, %r6749, %r6748, 28;
	shf.r.wrap.b32 	%r6751, %r6748, %r6749, 28;
	mov.b64 	%rd231, {%r6751, %r6750};
	shf.l.wrap.b32 	%r6752, %r6748, %r6749, 30;
	shf.l.wrap.b32 	%r6753, %r6749, %r6748, 30;
	mov.b64 	%rd232, {%r6753, %r6752};
	xor.b64  	%rd233, %rd232, %rd231;
	shf.l.wrap.b32 	%r6754, %r6748, %r6749, 25;
	shf.l.wrap.b32 	%r6755, %r6749, %r6748, 25;
	mov.b64 	%rd234, {%r6755, %r6754};
	xor.b64  	%rd235, %rd233, %rd234;
	ld.local.u64 	%rd48, [%rd1+16];
	xor.b64  	%rd236, %rd48, %rd47;
	ld.local.u64 	%rd49, [%rd1+8];
	xor.b64  	%rd237, %rd49, %rd47;
	and.b64  	%rd238, %rd236, %rd237;
	xor.b64  	%rd239, %rd238, %rd47;
	add.s64 	%rd240, %rd229, %rd239;
	add.s64 	%rd241, %rd240, %rd235;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6756,%dummy}, %rd230;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6757}, %rd230;
	}
	shf.r.wrap.b32 	%r6758, %r6757, %r6756, 14;
	shf.r.wrap.b32 	%r6759, %r6756, %r6757, 14;
	mov.b64 	%rd242, {%r6759, %r6758};
	shf.r.wrap.b32 	%r6760, %r6757, %r6756, 18;
	shf.r.wrap.b32 	%r6761, %r6756, %r6757, 18;
	mov.b64 	%rd243, {%r6761, %r6760};
	xor.b64  	%rd244, %rd243, %rd242;
	shf.l.wrap.b32 	%r6762, %r6756, %r6757, 23;
	shf.l.wrap.b32 	%r6763, %r6757, %r6756, 23;
	mov.b64 	%rd245, {%r6763, %r6762};
	xor.b64  	%rd246, %rd244, %rd245;
	xor.b64  	%rd247, %rd44, %rd42;
	and.b64  	%rd248, %rd230, %rd247;
	xor.b64  	%rd249, %rd248, %rd44;
	add.s64 	%rd250, %rd1262, %rd43;
	add.s64 	%rd251, %rd250, %rd1230;
	add.s64 	%rd252, %rd251, %rd249;
	add.s64 	%rd253, %rd252, %rd246;
	add.s64 	%rd254, %rd253, %rd48;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6764,%dummy}, %rd241;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6765}, %rd241;
	}
	shf.r.wrap.b32 	%r6766, %r6765, %r6764, 28;
	shf.r.wrap.b32 	%r6767, %r6764, %r6765, 28;
	mov.b64 	%rd255, {%r6767, %r6766};
	shf.l.wrap.b32 	%r6768, %r6764, %r6765, 30;
	shf.l.wrap.b32 	%r6769, %r6765, %r6764, 30;
	mov.b64 	%rd256, {%r6769, %r6768};
	xor.b64  	%rd257, %rd256, %rd255;
	shf.l.wrap.b32 	%r6770, %r6764, %r6765, 25;
	shf.l.wrap.b32 	%r6771, %r6765, %r6764, 25;
	mov.b64 	%rd258, {%r6771, %r6770};
	xor.b64  	%rd259, %rd257, %rd258;
	xor.b64  	%rd260, %rd241, %rd49;
	xor.b64  	%rd261, %rd241, %rd47;
	and.b64  	%rd262, %rd261, %rd260;
	xor.b64  	%rd263, %rd262, %rd241;
	add.s64 	%rd264, %rd253, %rd263;
	add.s64 	%rd265, %rd264, %rd259;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6772,%dummy}, %rd254;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6773}, %rd254;
	}
	shf.r.wrap.b32 	%r6774, %r6773, %r6772, 14;
	shf.r.wrap.b32 	%r6775, %r6772, %r6773, 14;
	mov.b64 	%rd266, {%r6775, %r6774};
	shf.r.wrap.b32 	%r6776, %r6773, %r6772, 18;
	shf.r.wrap.b32 	%r6777, %r6772, %r6773, 18;
	mov.b64 	%rd267, {%r6777, %r6776};
	xor.b64  	%rd268, %rd267, %rd266;
	shf.l.wrap.b32 	%r6778, %r6772, %r6773, 23;
	shf.l.wrap.b32 	%r6779, %r6773, %r6772, 23;
	mov.b64 	%rd269, {%r6779, %r6778};
	xor.b64  	%rd270, %rd268, %rd269;
	xor.b64  	%rd271, %rd230, %rd42;
	and.b64  	%rd272, %rd254, %rd271;
	xor.b64  	%rd273, %rd272, %rd42;
	add.s64 	%rd274, %rd1263, %rd44;
	add.s64 	%rd275, %rd274, %rd1231;
	add.s64 	%rd276, %rd275, %rd273;
	add.s64 	%rd277, %rd276, %rd270;
	add.s64 	%rd278, %rd277, %rd49;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6780,%dummy}, %rd265;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6781}, %rd265;
	}
	shf.r.wrap.b32 	%r6782, %r6781, %r6780, 28;
	shf.r.wrap.b32 	%r6783, %r6780, %r6781, 28;
	mov.b64 	%rd279, {%r6783, %r6782};
	shf.l.wrap.b32 	%r6784, %r6780, %r6781, 30;
	shf.l.wrap.b32 	%r6785, %r6781, %r6780, 30;
	mov.b64 	%rd280, {%r6785, %r6784};
	xor.b64  	%rd281, %rd280, %rd279;
	shf.l.wrap.b32 	%r6786, %r6780, %r6781, 25;
	shf.l.wrap.b32 	%r6787, %r6781, %r6780, 25;
	mov.b64 	%rd282, {%r6787, %r6786};
	xor.b64  	%rd283, %rd281, %rd282;
	xor.b64  	%rd284, %rd265, %rd47;
	xor.b64  	%rd285, %rd265, %rd241;
	and.b64  	%rd286, %rd285, %rd284;
	xor.b64  	%rd287, %rd286, %rd265;
	add.s64 	%rd288, %rd277, %rd287;
	add.s64 	%rd289, %rd288, %rd283;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6788,%dummy}, %rd278;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6789}, %rd278;
	}
	shf.r.wrap.b32 	%r6790, %r6789, %r6788, 14;
	shf.r.wrap.b32 	%r6791, %r6788, %r6789, 14;
	mov.b64 	%rd290, {%r6791, %r6790};
	shf.r.wrap.b32 	%r6792, %r6789, %r6788, 18;
	shf.r.wrap.b32 	%r6793, %r6788, %r6789, 18;
	mov.b64 	%rd291, {%r6793, %r6792};
	xor.b64  	%rd292, %rd291, %rd290;
	shf.l.wrap.b32 	%r6794, %r6788, %r6789, 23;
	shf.l.wrap.b32 	%r6795, %r6789, %r6788, 23;
	mov.b64 	%rd293, {%r6795, %r6794};
	xor.b64  	%rd294, %rd292, %rd293;
	xor.b64  	%rd295, %rd254, %rd230;
	and.b64  	%rd296, %rd278, %rd295;
	xor.b64  	%rd297, %rd296, %rd230;
	add.s64 	%rd298, %rd1264, %rd42;
	add.s64 	%rd299, %rd298, %rd1232;
	add.s64 	%rd300, %rd299, %rd297;
	add.s64 	%rd301, %rd300, %rd294;
	add.s64 	%rd302, %rd301, %rd47;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6796,%dummy}, %rd289;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6797}, %rd289;
	}
	shf.r.wrap.b32 	%r6798, %r6797, %r6796, 28;
	shf.r.wrap.b32 	%r6799, %r6796, %r6797, 28;
	mov.b64 	%rd303, {%r6799, %r6798};
	shf.l.wrap.b32 	%r6800, %r6796, %r6797, 30;
	shf.l.wrap.b32 	%r6801, %r6797, %r6796, 30;
	mov.b64 	%rd304, {%r6801, %r6800};
	xor.b64  	%rd305, %rd304, %rd303;
	shf.l.wrap.b32 	%r6802, %r6796, %r6797, 25;
	shf.l.wrap.b32 	%r6803, %r6797, %r6796, 25;
	mov.b64 	%rd306, {%r6803, %r6802};
	xor.b64  	%rd307, %rd305, %rd306;
	xor.b64  	%rd308, %rd289, %rd241;
	xor.b64  	%rd309, %rd289, %rd265;
	and.b64  	%rd310, %rd309, %rd308;
	xor.b64  	%rd311, %rd310, %rd289;
	add.s64 	%rd312, %rd301, %rd311;
	add.s64 	%rd313, %rd312, %rd307;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6804,%dummy}, %rd302;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6805}, %rd302;
	}
	shf.r.wrap.b32 	%r6806, %r6805, %r6804, 14;
	shf.r.wrap.b32 	%r6807, %r6804, %r6805, 14;
	mov.b64 	%rd314, {%r6807, %r6806};
	shf.r.wrap.b32 	%r6808, %r6805, %r6804, 18;
	shf.r.wrap.b32 	%r6809, %r6804, %r6805, 18;
	mov.b64 	%rd315, {%r6809, %r6808};
	xor.b64  	%rd316, %rd315, %rd314;
	shf.l.wrap.b32 	%r6810, %r6804, %r6805, 23;
	shf.l.wrap.b32 	%r6811, %r6805, %r6804, 23;
	mov.b64 	%rd317, {%r6811, %r6810};
	xor.b64  	%rd318, %rd316, %rd317;
	xor.b64  	%rd319, %rd278, %rd254;
	and.b64  	%rd320, %rd302, %rd319;
	xor.b64  	%rd321, %rd320, %rd254;
	add.s64 	%rd322, %rd230, %rd1265;
	add.s64 	%rd323, %rd322, %rd1233;
	add.s64 	%rd324, %rd323, %rd321;
	add.s64 	%rd325, %rd324, %rd318;
	add.s64 	%rd326, %rd325, %rd241;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6812,%dummy}, %rd313;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6813}, %rd313;
	}
	shf.r.wrap.b32 	%r6814, %r6813, %r6812, 28;
	shf.r.wrap.b32 	%r6815, %r6812, %r6813, 28;
	mov.b64 	%rd327, {%r6815, %r6814};
	shf.l.wrap.b32 	%r6816, %r6812, %r6813, 30;
	shf.l.wrap.b32 	%r6817, %r6813, %r6812, 30;
	mov.b64 	%rd328, {%r6817, %r6816};
	xor.b64  	%rd329, %rd328, %rd327;
	shf.l.wrap.b32 	%r6818, %r6812, %r6813, 25;
	shf.l.wrap.b32 	%r6819, %r6813, %r6812, 25;
	mov.b64 	%rd330, {%r6819, %r6818};
	xor.b64  	%rd331, %rd329, %rd330;
	xor.b64  	%rd332, %rd313, %rd265;
	xor.b64  	%rd333, %rd313, %rd289;
	and.b64  	%rd334, %rd333, %rd332;
	xor.b64  	%rd335, %rd334, %rd313;
	add.s64 	%rd336, %rd325, %rd335;
	add.s64 	%rd337, %rd336, %rd331;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6820,%dummy}, %rd326;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6821}, %rd326;
	}
	shf.r.wrap.b32 	%r6822, %r6821, %r6820, 14;
	shf.r.wrap.b32 	%r6823, %r6820, %r6821, 14;
	mov.b64 	%rd338, {%r6823, %r6822};
	shf.r.wrap.b32 	%r6824, %r6821, %r6820, 18;
	shf.r.wrap.b32 	%r6825, %r6820, %r6821, 18;
	mov.b64 	%rd339, {%r6825, %r6824};
	xor.b64  	%rd340, %rd339, %rd338;
	shf.l.wrap.b32 	%r6826, %r6820, %r6821, 23;
	shf.l.wrap.b32 	%r6827, %r6821, %r6820, 23;
	mov.b64 	%rd341, {%r6827, %r6826};
	xor.b64  	%rd342, %rd340, %rd341;
	xor.b64  	%rd343, %rd302, %rd278;
	and.b64  	%rd344, %rd326, %rd343;
	xor.b64  	%rd345, %rd344, %rd278;
	add.s64 	%rd346, %rd254, %rd1266;
	add.s64 	%rd347, %rd346, %rd1234;
	add.s64 	%rd348, %rd347, %rd345;
	add.s64 	%rd349, %rd348, %rd342;
	add.s64 	%rd350, %rd349, %rd265;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6828,%dummy}, %rd337;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6829}, %rd337;
	}
	shf.r.wrap.b32 	%r6830, %r6829, %r6828, 28;
	shf.r.wrap.b32 	%r6831, %r6828, %r6829, 28;
	mov.b64 	%rd351, {%r6831, %r6830};
	shf.l.wrap.b32 	%r6832, %r6828, %r6829, 30;
	shf.l.wrap.b32 	%r6833, %r6829, %r6828, 30;
	mov.b64 	%rd352, {%r6833, %r6832};
	xor.b64  	%rd353, %rd352, %rd351;
	shf.l.wrap.b32 	%r6834, %r6828, %r6829, 25;
	shf.l.wrap.b32 	%r6835, %r6829, %r6828, 25;
	mov.b64 	%rd354, {%r6835, %r6834};
	xor.b64  	%rd355, %rd353, %rd354;
	xor.b64  	%rd356, %rd337, %rd289;
	xor.b64  	%rd357, %rd337, %rd313;
	and.b64  	%rd358, %rd357, %rd356;
	xor.b64  	%rd359, %rd358, %rd337;
	add.s64 	%rd360, %rd349, %rd359;
	add.s64 	%rd361, %rd360, %rd355;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6836,%dummy}, %rd350;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6837}, %rd350;
	}
	shf.r.wrap.b32 	%r6838, %r6837, %r6836, 14;
	shf.r.wrap.b32 	%r6839, %r6836, %r6837, 14;
	mov.b64 	%rd362, {%r6839, %r6838};
	shf.r.wrap.b32 	%r6840, %r6837, %r6836, 18;
	shf.r.wrap.b32 	%r6841, %r6836, %r6837, 18;
	mov.b64 	%rd363, {%r6841, %r6840};
	xor.b64  	%rd364, %rd363, %rd362;
	shf.l.wrap.b32 	%r6842, %r6836, %r6837, 23;
	shf.l.wrap.b32 	%r6843, %r6837, %r6836, 23;
	mov.b64 	%rd365, {%r6843, %r6842};
	xor.b64  	%rd366, %rd364, %rd365;
	xor.b64  	%rd367, %rd326, %rd302;
	and.b64  	%rd368, %rd350, %rd367;
	xor.b64  	%rd369, %rd368, %rd302;
	add.s64 	%rd370, %rd278, %rd1267;
	add.s64 	%rd371, %rd370, %rd1235;
	add.s64 	%rd372, %rd371, %rd369;
	add.s64 	%rd373, %rd372, %rd366;
	add.s64 	%rd374, %rd373, %rd289;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6844,%dummy}, %rd361;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6845}, %rd361;
	}
	shf.r.wrap.b32 	%r6846, %r6845, %r6844, 28;
	shf.r.wrap.b32 	%r6847, %r6844, %r6845, 28;
	mov.b64 	%rd375, {%r6847, %r6846};
	shf.l.wrap.b32 	%r6848, %r6844, %r6845, 30;
	shf.l.wrap.b32 	%r6849, %r6845, %r6844, 30;
	mov.b64 	%rd376, {%r6849, %r6848};
	xor.b64  	%rd377, %rd376, %rd375;
	shf.l.wrap.b32 	%r6850, %r6844, %r6845, 25;
	shf.l.wrap.b32 	%r6851, %r6845, %r6844, 25;
	mov.b64 	%rd378, {%r6851, %r6850};
	xor.b64  	%rd379, %rd377, %rd378;
	xor.b64  	%rd380, %rd361, %rd313;
	xor.b64  	%rd381, %rd361, %rd337;
	and.b64  	%rd382, %rd381, %rd380;
	xor.b64  	%rd383, %rd382, %rd361;
	add.s64 	%rd384, %rd373, %rd383;
	add.s64 	%rd385, %rd384, %rd379;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6852,%dummy}, %rd374;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6853}, %rd374;
	}
	shf.r.wrap.b32 	%r6854, %r6853, %r6852, 14;
	shf.r.wrap.b32 	%r6855, %r6852, %r6853, 14;
	mov.b64 	%rd386, {%r6855, %r6854};
	shf.r.wrap.b32 	%r6856, %r6853, %r6852, 18;
	shf.r.wrap.b32 	%r6857, %r6852, %r6853, 18;
	mov.b64 	%rd387, {%r6857, %r6856};
	xor.b64  	%rd388, %rd387, %rd386;
	shf.l.wrap.b32 	%r6858, %r6852, %r6853, 23;
	shf.l.wrap.b32 	%r6859, %r6853, %r6852, 23;
	mov.b64 	%rd389, {%r6859, %r6858};
	xor.b64  	%rd390, %rd388, %rd389;
	xor.b64  	%rd391, %rd350, %rd326;
	and.b64  	%rd392, %rd374, %rd391;
	xor.b64  	%rd393, %rd392, %rd326;
	add.s64 	%rd394, %rd302, %rd1268;
	add.s64 	%rd395, %rd394, %rd1236;
	add.s64 	%rd396, %rd395, %rd393;
	add.s64 	%rd397, %rd396, %rd390;
	add.s64 	%rd398, %rd397, %rd313;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6860,%dummy}, %rd385;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6861}, %rd385;
	}
	shf.r.wrap.b32 	%r6862, %r6861, %r6860, 28;
	shf.r.wrap.b32 	%r6863, %r6860, %r6861, 28;
	mov.b64 	%rd399, {%r6863, %r6862};
	shf.l.wrap.b32 	%r6864, %r6860, %r6861, 30;
	shf.l.wrap.b32 	%r6865, %r6861, %r6860, 30;
	mov.b64 	%rd400, {%r6865, %r6864};
	xor.b64  	%rd401, %rd400, %rd399;
	shf.l.wrap.b32 	%r6866, %r6860, %r6861, 25;
	shf.l.wrap.b32 	%r6867, %r6861, %r6860, 25;
	mov.b64 	%rd402, {%r6867, %r6866};
	xor.b64  	%rd403, %rd401, %rd402;
	xor.b64  	%rd404, %rd385, %rd337;
	xor.b64  	%rd405, %rd385, %rd361;
	and.b64  	%rd406, %rd405, %rd404;
	xor.b64  	%rd407, %rd406, %rd385;
	add.s64 	%rd408, %rd397, %rd407;
	add.s64 	%rd409, %rd408, %rd403;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6868,%dummy}, %rd398;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6869}, %rd398;
	}
	shf.r.wrap.b32 	%r6870, %r6869, %r6868, 14;
	shf.r.wrap.b32 	%r6871, %r6868, %r6869, 14;
	mov.b64 	%rd410, {%r6871, %r6870};
	shf.r.wrap.b32 	%r6872, %r6869, %r6868, 18;
	shf.r.wrap.b32 	%r6873, %r6868, %r6869, 18;
	mov.b64 	%rd411, {%r6873, %r6872};
	xor.b64  	%rd412, %rd411, %rd410;
	shf.l.wrap.b32 	%r6874, %r6868, %r6869, 23;
	shf.l.wrap.b32 	%r6875, %r6869, %r6868, 23;
	mov.b64 	%rd413, {%r6875, %r6874};
	xor.b64  	%rd414, %rd412, %rd413;
	xor.b64  	%rd415, %rd374, %rd350;
	and.b64  	%rd416, %rd398, %rd415;
	xor.b64  	%rd417, %rd416, %rd350;
	add.s64 	%rd418, %rd326, %rd1252;
	add.s64 	%rd419, %rd418, %rd1237;
	add.s64 	%rd420, %rd419, %rd417;
	add.s64 	%rd421, %rd420, %rd414;
	add.s64 	%rd422, %rd421, %rd337;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6876,%dummy}, %rd409;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6877}, %rd409;
	}
	shf.r.wrap.b32 	%r6878, %r6877, %r6876, 28;
	shf.r.wrap.b32 	%r6879, %r6876, %r6877, 28;
	mov.b64 	%rd423, {%r6879, %r6878};
	shf.l.wrap.b32 	%r6880, %r6876, %r6877, 30;
	shf.l.wrap.b32 	%r6881, %r6877, %r6876, 30;
	mov.b64 	%rd424, {%r6881, %r6880};
	xor.b64  	%rd425, %rd424, %rd423;
	shf.l.wrap.b32 	%r6882, %r6876, %r6877, 25;
	shf.l.wrap.b32 	%r6883, %r6877, %r6876, 25;
	mov.b64 	%rd426, {%r6883, %r6882};
	xor.b64  	%rd427, %rd425, %rd426;
	xor.b64  	%rd428, %rd409, %rd361;
	xor.b64  	%rd429, %rd409, %rd385;
	and.b64  	%rd430, %rd429, %rd428;
	xor.b64  	%rd431, %rd430, %rd409;
	add.s64 	%rd432, %rd421, %rd431;
	add.s64 	%rd433, %rd432, %rd427;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6884,%dummy}, %rd422;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6885}, %rd422;
	}
	shf.r.wrap.b32 	%r6886, %r6885, %r6884, 14;
	shf.r.wrap.b32 	%r6887, %r6884, %r6885, 14;
	mov.b64 	%rd434, {%r6887, %r6886};
	shf.r.wrap.b32 	%r6888, %r6885, %r6884, 18;
	shf.r.wrap.b32 	%r6889, %r6884, %r6885, 18;
	mov.b64 	%rd435, {%r6889, %r6888};
	xor.b64  	%rd436, %rd435, %rd434;
	shf.l.wrap.b32 	%r6890, %r6884, %r6885, 23;
	shf.l.wrap.b32 	%r6891, %r6885, %r6884, 23;
	mov.b64 	%rd437, {%r6891, %r6890};
	xor.b64  	%rd438, %rd436, %rd437;
	xor.b64  	%rd439, %rd398, %rd374;
	and.b64  	%rd440, %rd422, %rd439;
	xor.b64  	%rd441, %rd440, %rd374;
	add.s64 	%rd442, %rd350, %rd1251;
	add.s64 	%rd443, %rd442, %rd1238;
	add.s64 	%rd444, %rd443, %rd441;
	add.s64 	%rd445, %rd444, %rd438;
	add.s64 	%rd446, %rd445, %rd361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6892,%dummy}, %rd433;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6893}, %rd433;
	}
	shf.r.wrap.b32 	%r6894, %r6893, %r6892, 28;
	shf.r.wrap.b32 	%r6895, %r6892, %r6893, 28;
	mov.b64 	%rd447, {%r6895, %r6894};
	shf.l.wrap.b32 	%r6896, %r6892, %r6893, 30;
	shf.l.wrap.b32 	%r6897, %r6893, %r6892, 30;
	mov.b64 	%rd448, {%r6897, %r6896};
	xor.b64  	%rd449, %rd448, %rd447;
	shf.l.wrap.b32 	%r6898, %r6892, %r6893, 25;
	shf.l.wrap.b32 	%r6899, %r6893, %r6892, 25;
	mov.b64 	%rd450, {%r6899, %r6898};
	xor.b64  	%rd451, %rd449, %rd450;
	xor.b64  	%rd452, %rd433, %rd385;
	xor.b64  	%rd453, %rd433, %rd409;
	and.b64  	%rd454, %rd453, %rd452;
	xor.b64  	%rd455, %rd454, %rd433;
	add.s64 	%rd456, %rd445, %rd455;
	add.s64 	%rd457, %rd456, %rd451;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6900,%dummy}, %rd446;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6901}, %rd446;
	}
	shf.r.wrap.b32 	%r6902, %r6901, %r6900, 14;
	shf.r.wrap.b32 	%r6903, %r6900, %r6901, 14;
	mov.b64 	%rd458, {%r6903, %r6902};
	shf.r.wrap.b32 	%r6904, %r6901, %r6900, 18;
	shf.r.wrap.b32 	%r6905, %r6900, %r6901, 18;
	mov.b64 	%rd459, {%r6905, %r6904};
	xor.b64  	%rd460, %rd459, %rd458;
	shf.l.wrap.b32 	%r6906, %r6900, %r6901, 23;
	shf.l.wrap.b32 	%r6907, %r6901, %r6900, 23;
	mov.b64 	%rd461, {%r6907, %r6906};
	xor.b64  	%rd462, %rd460, %rd461;
	xor.b64  	%rd463, %rd422, %rd398;
	and.b64  	%rd464, %rd446, %rd463;
	xor.b64  	%rd465, %rd464, %rd398;
	add.s64 	%rd466, %rd374, %rd1250;
	add.s64 	%rd467, %rd466, %rd1239;
	add.s64 	%rd468, %rd467, %rd465;
	add.s64 	%rd469, %rd468, %rd462;
	add.s64 	%rd470, %rd469, %rd385;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6908,%dummy}, %rd457;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6909}, %rd457;
	}
	shf.r.wrap.b32 	%r6910, %r6909, %r6908, 28;
	shf.r.wrap.b32 	%r6911, %r6908, %r6909, 28;
	mov.b64 	%rd471, {%r6911, %r6910};
	shf.l.wrap.b32 	%r6912, %r6908, %r6909, 30;
	shf.l.wrap.b32 	%r6913, %r6909, %r6908, 30;
	mov.b64 	%rd472, {%r6913, %r6912};
	xor.b64  	%rd473, %rd472, %rd471;
	shf.l.wrap.b32 	%r6914, %r6908, %r6909, 25;
	shf.l.wrap.b32 	%r6915, %r6909, %r6908, 25;
	mov.b64 	%rd474, {%r6915, %r6914};
	xor.b64  	%rd475, %rd473, %rd474;
	xor.b64  	%rd476, %rd457, %rd409;
	xor.b64  	%rd477, %rd457, %rd433;
	and.b64  	%rd478, %rd477, %rd476;
	xor.b64  	%rd479, %rd478, %rd457;
	add.s64 	%rd480, %rd469, %rd479;
	add.s64 	%rd481, %rd480, %rd475;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6916,%dummy}, %rd470;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6917}, %rd470;
	}
	shf.r.wrap.b32 	%r6918, %r6917, %r6916, 14;
	shf.r.wrap.b32 	%r6919, %r6916, %r6917, 14;
	mov.b64 	%rd482, {%r6919, %r6918};
	shf.r.wrap.b32 	%r6920, %r6917, %r6916, 18;
	shf.r.wrap.b32 	%r6921, %r6916, %r6917, 18;
	mov.b64 	%rd483, {%r6921, %r6920};
	xor.b64  	%rd484, %rd483, %rd482;
	shf.l.wrap.b32 	%r6922, %r6916, %r6917, 23;
	shf.l.wrap.b32 	%r6923, %r6917, %r6916, 23;
	mov.b64 	%rd485, {%r6923, %r6922};
	xor.b64  	%rd486, %rd484, %rd485;
	xor.b64  	%rd487, %rd446, %rd422;
	and.b64  	%rd488, %rd470, %rd487;
	xor.b64  	%rd489, %rd488, %rd422;
	add.s64 	%rd490, %rd398, %rd1249;
	add.s64 	%rd491, %rd490, %rd1240;
	add.s64 	%rd492, %rd491, %rd489;
	add.s64 	%rd493, %rd492, %rd486;
	add.s64 	%rd494, %rd493, %rd409;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6924,%dummy}, %rd481;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6925}, %rd481;
	}
	shf.r.wrap.b32 	%r6926, %r6925, %r6924, 28;
	shf.r.wrap.b32 	%r6927, %r6924, %r6925, 28;
	mov.b64 	%rd495, {%r6927, %r6926};
	shf.l.wrap.b32 	%r6928, %r6924, %r6925, 30;
	shf.l.wrap.b32 	%r6929, %r6925, %r6924, 30;
	mov.b64 	%rd496, {%r6929, %r6928};
	xor.b64  	%rd497, %rd496, %rd495;
	shf.l.wrap.b32 	%r6930, %r6924, %r6925, 25;
	shf.l.wrap.b32 	%r6931, %r6925, %r6924, 25;
	mov.b64 	%rd498, {%r6931, %r6930};
	xor.b64  	%rd499, %rd497, %rd498;
	xor.b64  	%rd500, %rd481, %rd433;
	xor.b64  	%rd501, %rd481, %rd457;
	and.b64  	%rd502, %rd501, %rd500;
	xor.b64  	%rd503, %rd502, %rd481;
	add.s64 	%rd504, %rd493, %rd503;
	add.s64 	%rd505, %rd504, %rd499;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6932,%dummy}, %rd494;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6933}, %rd494;
	}
	shf.r.wrap.b32 	%r6934, %r6933, %r6932, 14;
	shf.r.wrap.b32 	%r6935, %r6932, %r6933, 14;
	mov.b64 	%rd506, {%r6935, %r6934};
	shf.r.wrap.b32 	%r6936, %r6933, %r6932, 18;
	shf.r.wrap.b32 	%r6937, %r6932, %r6933, 18;
	mov.b64 	%rd507, {%r6937, %r6936};
	xor.b64  	%rd508, %rd507, %rd506;
	shf.l.wrap.b32 	%r6938, %r6932, %r6933, 23;
	shf.l.wrap.b32 	%r6939, %r6933, %r6932, 23;
	mov.b64 	%rd509, {%r6939, %r6938};
	xor.b64  	%rd510, %rd508, %rd509;
	xor.b64  	%rd511, %rd470, %rd446;
	and.b64  	%rd512, %rd494, %rd511;
	xor.b64  	%rd513, %rd512, %rd446;
	add.s64 	%rd514, %rd422, %rd1248;
	add.s64 	%rd515, %rd514, %rd1241;
	add.s64 	%rd516, %rd515, %rd513;
	add.s64 	%rd517, %rd516, %rd510;
	add.s64 	%rd1260, %rd517, %rd433;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6940,%dummy}, %rd505;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6941}, %rd505;
	}
	shf.r.wrap.b32 	%r6942, %r6941, %r6940, 28;
	shf.r.wrap.b32 	%r6943, %r6940, %r6941, 28;
	mov.b64 	%rd518, {%r6943, %r6942};
	shf.l.wrap.b32 	%r6944, %r6940, %r6941, 30;
	shf.l.wrap.b32 	%r6945, %r6941, %r6940, 30;
	mov.b64 	%rd519, {%r6945, %r6944};
	xor.b64  	%rd520, %rd519, %rd518;
	shf.l.wrap.b32 	%r6946, %r6940, %r6941, 25;
	shf.l.wrap.b32 	%r6947, %r6941, %r6940, 25;
	mov.b64 	%rd521, {%r6947, %r6946};
	xor.b64  	%rd522, %rd520, %rd521;
	xor.b64  	%rd523, %rd505, %rd457;
	xor.b64  	%rd524, %rd505, %rd481;
	and.b64  	%rd525, %rd524, %rd523;
	xor.b64  	%rd526, %rd525, %rd505;
	add.s64 	%rd527, %rd517, %rd526;
	add.s64 	%rd1256, %rd527, %rd522;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6948,%dummy}, %rd1260;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6949}, %rd1260;
	}
	shf.r.wrap.b32 	%r6950, %r6949, %r6948, 14;
	shf.r.wrap.b32 	%r6951, %r6948, %r6949, 14;
	mov.b64 	%rd528, {%r6951, %r6950};
	shf.r.wrap.b32 	%r6952, %r6949, %r6948, 18;
	shf.r.wrap.b32 	%r6953, %r6948, %r6949, 18;
	mov.b64 	%rd529, {%r6953, %r6952};
	xor.b64  	%rd530, %rd529, %rd528;
	shf.l.wrap.b32 	%r6954, %r6948, %r6949, 23;
	shf.l.wrap.b32 	%r6955, %r6949, %r6948, 23;
	mov.b64 	%rd531, {%r6955, %r6954};
	xor.b64  	%rd532, %rd530, %rd531;
	xor.b64  	%rd533, %rd494, %rd470;
	and.b64  	%rd534, %rd1260, %rd533;
	xor.b64  	%rd535, %rd534, %rd470;
	add.s64 	%rd536, %rd446, %rd1247;
	add.s64 	%rd537, %rd536, %rd1242;
	add.s64 	%rd538, %rd537, %rd535;
	add.s64 	%rd539, %rd538, %rd532;
	add.s64 	%rd1259, %rd539, %rd457;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6956,%dummy}, %rd1256;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6957}, %rd1256;
	}
	shf.r.wrap.b32 	%r6958, %r6957, %r6956, 28;
	shf.r.wrap.b32 	%r6959, %r6956, %r6957, 28;
	mov.b64 	%rd540, {%r6959, %r6958};
	shf.l.wrap.b32 	%r6960, %r6956, %r6957, 30;
	shf.l.wrap.b32 	%r6961, %r6957, %r6956, 30;
	mov.b64 	%rd541, {%r6961, %r6960};
	xor.b64  	%rd542, %rd541, %rd540;
	shf.l.wrap.b32 	%r6962, %r6956, %r6957, 25;
	shf.l.wrap.b32 	%r6963, %r6957, %r6956, 25;
	mov.b64 	%rd543, {%r6963, %r6962};
	xor.b64  	%rd544, %rd542, %rd543;
	xor.b64  	%rd545, %rd1256, %rd481;
	xor.b64  	%rd546, %rd1256, %rd505;
	and.b64  	%rd547, %rd546, %rd545;
	xor.b64  	%rd548, %rd547, %rd1256;
	add.s64 	%rd549, %rd539, %rd548;
	add.s64 	%rd1255, %rd549, %rd544;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6964,%dummy}, %rd1259;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6965}, %rd1259;
	}
	shf.r.wrap.b32 	%r6966, %r6965, %r6964, 14;
	shf.r.wrap.b32 	%r6967, %r6964, %r6965, 14;
	mov.b64 	%rd550, {%r6967, %r6966};
	shf.r.wrap.b32 	%r6968, %r6965, %r6964, 18;
	shf.r.wrap.b32 	%r6969, %r6964, %r6965, 18;
	mov.b64 	%rd551, {%r6969, %r6968};
	xor.b64  	%rd552, %rd551, %rd550;
	shf.l.wrap.b32 	%r6970, %r6964, %r6965, 23;
	shf.l.wrap.b32 	%r6971, %r6965, %r6964, 23;
	mov.b64 	%rd553, {%r6971, %r6970};
	xor.b64  	%rd554, %rd552, %rd553;
	xor.b64  	%rd555, %rd1260, %rd494;
	and.b64  	%rd556, %rd1259, %rd555;
	xor.b64  	%rd557, %rd556, %rd494;
	add.s64 	%rd558, %rd470, %rd1246;
	add.s64 	%rd559, %rd558, %rd1243;
	add.s64 	%rd560, %rd559, %rd557;
	add.s64 	%rd561, %rd560, %rd554;
	add.s64 	%rd1258, %rd561, %rd481;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6972,%dummy}, %rd1255;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6973}, %rd1255;
	}
	shf.r.wrap.b32 	%r6974, %r6973, %r6972, 28;
	shf.r.wrap.b32 	%r6975, %r6972, %r6973, 28;
	mov.b64 	%rd562, {%r6975, %r6974};
	shf.l.wrap.b32 	%r6976, %r6972, %r6973, 30;
	shf.l.wrap.b32 	%r6977, %r6973, %r6972, 30;
	mov.b64 	%rd563, {%r6977, %r6976};
	xor.b64  	%rd564, %rd563, %rd562;
	shf.l.wrap.b32 	%r6978, %r6972, %r6973, 25;
	shf.l.wrap.b32 	%r6979, %r6973, %r6972, 25;
	mov.b64 	%rd565, {%r6979, %r6978};
	xor.b64  	%rd566, %rd564, %rd565;
	xor.b64  	%rd567, %rd1255, %rd505;
	xor.b64  	%rd568, %rd1255, %rd1256;
	and.b64  	%rd569, %rd568, %rd567;
	xor.b64  	%rd570, %rd569, %rd1255;
	add.s64 	%rd571, %rd561, %rd570;
	add.s64 	%rd1254, %rd571, %rd566;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6980,%dummy}, %rd1258;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6981}, %rd1258;
	}
	shf.r.wrap.b32 	%r6982, %r6981, %r6980, 14;
	shf.r.wrap.b32 	%r6983, %r6980, %r6981, 14;
	mov.b64 	%rd572, {%r6983, %r6982};
	shf.r.wrap.b32 	%r6984, %r6981, %r6980, 18;
	shf.r.wrap.b32 	%r6985, %r6980, %r6981, 18;
	mov.b64 	%rd573, {%r6985, %r6984};
	xor.b64  	%rd574, %rd573, %rd572;
	shf.l.wrap.b32 	%r6986, %r6980, %r6981, 23;
	shf.l.wrap.b32 	%r6987, %r6981, %r6980, 23;
	mov.b64 	%rd575, {%r6987, %r6986};
	xor.b64  	%rd576, %rd574, %rd575;
	xor.b64  	%rd577, %rd1259, %rd1260;
	and.b64  	%rd578, %rd1258, %rd577;
	xor.b64  	%rd579, %rd578, %rd1260;
	add.s64 	%rd580, %rd494, %rd1245;
	add.s64 	%rd581, %rd580, %rd1244;
	add.s64 	%rd582, %rd581, %rd579;
	add.s64 	%rd583, %rd582, %rd576;
	add.s64 	%rd1257, %rd583, %rd505;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6988,%dummy}, %rd1254;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6989}, %rd1254;
	}
	shf.r.wrap.b32 	%r6990, %r6989, %r6988, 28;
	shf.r.wrap.b32 	%r6991, %r6988, %r6989, 28;
	mov.b64 	%rd584, {%r6991, %r6990};
	shf.l.wrap.b32 	%r6992, %r6988, %r6989, 30;
	shf.l.wrap.b32 	%r6993, %r6989, %r6988, 30;
	mov.b64 	%rd585, {%r6993, %r6992};
	xor.b64  	%rd586, %rd585, %rd584;
	shf.l.wrap.b32 	%r6994, %r6988, %r6989, 25;
	shf.l.wrap.b32 	%r6995, %r6989, %r6988, 25;
	mov.b64 	%rd587, {%r6995, %r6994};
	xor.b64  	%rd588, %rd586, %rd587;
	xor.b64  	%rd589, %rd1254, %rd1256;
	xor.b64  	%rd590, %rd1254, %rd1255;
	and.b64  	%rd591, %rd590, %rd589;
	xor.b64  	%rd592, %rd591, %rd1254;
	add.s64 	%rd593, %rd583, %rd592;
	add.s64 	%rd1253, %rd593, %rd588;
	mov.u32 	%r7491, 16;

BB3_92:
	shr.u64 	%rd594, %rd1246, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6996,%dummy}, %rd1246;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6997}, %rd1246;
	}
	shf.r.wrap.b32 	%r6998, %r6997, %r6996, 19;
	shf.r.wrap.b32 	%r6999, %r6996, %r6997, 19;
	mov.b64 	%rd595, {%r6999, %r6998};
	xor.b64  	%rd596, %rd595, %rd594;
	shf.l.wrap.b32 	%r7000, %r6996, %r6997, 3;
	shf.l.wrap.b32 	%r7001, %r6997, %r6996, 3;
	mov.b64 	%rd597, {%r7001, %r7000};
	xor.b64  	%rd598, %rd596, %rd597;
	shr.u64 	%rd599, %rd1262, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7002,%dummy}, %rd1262;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7003}, %rd1262;
	}
	shf.r.wrap.b32 	%r7004, %r7003, %r7002, 1;
	shf.r.wrap.b32 	%r7005, %r7002, %r7003, 1;
	mov.b64 	%rd600, {%r7005, %r7004};
	xor.b64  	%rd601, %rd600, %rd599;
	shf.r.wrap.b32 	%r7006, %r7003, %r7002, 8;
	shf.r.wrap.b32 	%r7007, %r7002, %r7003, 8;
	mov.b64 	%rd602, {%r7007, %r7006};
	xor.b64  	%rd603, %rd601, %rd602;
	add.s64 	%rd604, %rd1251, %rd1261;
	add.s64 	%rd605, %rd604, %rd598;
	add.s64 	%rd1261, %rd605, %rd603;
	shr.u64 	%rd606, %rd1245, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7008,%dummy}, %rd1245;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7009}, %rd1245;
	}
	shf.r.wrap.b32 	%r7010, %r7009, %r7008, 19;
	shf.r.wrap.b32 	%r7011, %r7008, %r7009, 19;
	mov.b64 	%rd607, {%r7011, %r7010};
	xor.b64  	%rd608, %rd607, %rd606;
	shf.l.wrap.b32 	%r7012, %r7008, %r7009, 3;
	shf.l.wrap.b32 	%r7013, %r7009, %r7008, 3;
	mov.b64 	%rd609, {%r7013, %r7012};
	xor.b64  	%rd610, %rd608, %rd609;
	shr.u64 	%rd611, %rd1263, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7014,%dummy}, %rd1263;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7015}, %rd1263;
	}
	shf.r.wrap.b32 	%r7016, %r7015, %r7014, 1;
	shf.r.wrap.b32 	%r7017, %r7014, %r7015, 1;
	mov.b64 	%rd612, {%r7017, %r7016};
	xor.b64  	%rd613, %rd612, %rd611;
	shf.r.wrap.b32 	%r7018, %r7015, %r7014, 8;
	shf.r.wrap.b32 	%r7019, %r7014, %r7015, 8;
	mov.b64 	%rd614, {%r7019, %r7018};
	xor.b64  	%rd615, %rd613, %rd614;
	add.s64 	%rd616, %rd1250, %rd1262;
	add.s64 	%rd617, %rd616, %rd610;
	add.s64 	%rd1262, %rd617, %rd615;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7020,%dummy}, %rd1261;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7021}, %rd1261;
	}
	shf.r.wrap.b32 	%r7022, %r7021, %r7020, 19;
	shf.r.wrap.b32 	%r7023, %r7020, %r7021, 19;
	mov.b64 	%rd618, {%r7023, %r7022};
	shf.l.wrap.b32 	%r7024, %r7020, %r7021, 3;
	shf.l.wrap.b32 	%r7025, %r7021, %r7020, 3;
	mov.b64 	%rd619, {%r7025, %r7024};
	shr.u64 	%rd620, %rd1261, 6;
	xor.b64  	%rd621, %rd618, %rd620;
	xor.b64  	%rd622, %rd621, %rd619;
	shr.u64 	%rd623, %rd1264, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7026,%dummy}, %rd1264;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7027}, %rd1264;
	}
	shf.r.wrap.b32 	%r7028, %r7027, %r7026, 1;
	shf.r.wrap.b32 	%r7029, %r7026, %r7027, 1;
	mov.b64 	%rd624, {%r7029, %r7028};
	xor.b64  	%rd625, %rd624, %rd623;
	shf.r.wrap.b32 	%r7030, %r7027, %r7026, 8;
	shf.r.wrap.b32 	%r7031, %r7026, %r7027, 8;
	mov.b64 	%rd626, {%r7031, %r7030};
	xor.b64  	%rd627, %rd625, %rd626;
	add.s64 	%rd628, %rd1249, %rd1263;
	add.s64 	%rd629, %rd628, %rd622;
	add.s64 	%rd1263, %rd629, %rd627;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7032,%dummy}, %rd1262;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7033}, %rd1262;
	}
	shf.r.wrap.b32 	%r7034, %r7033, %r7032, 19;
	shf.r.wrap.b32 	%r7035, %r7032, %r7033, 19;
	mov.b64 	%rd630, {%r7035, %r7034};
	shf.l.wrap.b32 	%r7036, %r7032, %r7033, 3;
	shf.l.wrap.b32 	%r7037, %r7033, %r7032, 3;
	mov.b64 	%rd631, {%r7037, %r7036};
	shr.u64 	%rd632, %rd1262, 6;
	xor.b64  	%rd633, %rd630, %rd632;
	xor.b64  	%rd634, %rd633, %rd631;
	shr.u64 	%rd635, %rd1265, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7038,%dummy}, %rd1265;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7039}, %rd1265;
	}
	shf.r.wrap.b32 	%r7040, %r7039, %r7038, 1;
	shf.r.wrap.b32 	%r7041, %r7038, %r7039, 1;
	mov.b64 	%rd636, {%r7041, %r7040};
	xor.b64  	%rd637, %rd636, %rd635;
	shf.r.wrap.b32 	%r7042, %r7039, %r7038, 8;
	shf.r.wrap.b32 	%r7043, %r7038, %r7039, 8;
	mov.b64 	%rd638, {%r7043, %r7042};
	xor.b64  	%rd639, %rd637, %rd638;
	add.s64 	%rd640, %rd1248, %rd1264;
	add.s64 	%rd641, %rd640, %rd634;
	add.s64 	%rd1264, %rd641, %rd639;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7044,%dummy}, %rd1263;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7045}, %rd1263;
	}
	shf.r.wrap.b32 	%r7046, %r7045, %r7044, 19;
	shf.r.wrap.b32 	%r7047, %r7044, %r7045, 19;
	mov.b64 	%rd642, {%r7047, %r7046};
	shf.l.wrap.b32 	%r7048, %r7044, %r7045, 3;
	shf.l.wrap.b32 	%r7049, %r7045, %r7044, 3;
	mov.b64 	%rd643, {%r7049, %r7048};
	shr.u64 	%rd644, %rd1263, 6;
	xor.b64  	%rd645, %rd642, %rd644;
	xor.b64  	%rd646, %rd645, %rd643;
	shr.u64 	%rd647, %rd1266, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7050,%dummy}, %rd1266;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7051}, %rd1266;
	}
	shf.r.wrap.b32 	%r7052, %r7051, %r7050, 1;
	shf.r.wrap.b32 	%r7053, %r7050, %r7051, 1;
	mov.b64 	%rd648, {%r7053, %r7052};
	xor.b64  	%rd649, %rd648, %rd647;
	shf.r.wrap.b32 	%r7054, %r7051, %r7050, 8;
	shf.r.wrap.b32 	%r7055, %r7050, %r7051, 8;
	mov.b64 	%rd650, {%r7055, %r7054};
	xor.b64  	%rd651, %rd649, %rd650;
	add.s64 	%rd652, %rd1247, %rd1265;
	add.s64 	%rd653, %rd652, %rd646;
	add.s64 	%rd1265, %rd653, %rd651;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7056,%dummy}, %rd1264;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7057}, %rd1264;
	}
	shf.r.wrap.b32 	%r7058, %r7057, %r7056, 19;
	shf.r.wrap.b32 	%r7059, %r7056, %r7057, 19;
	mov.b64 	%rd654, {%r7059, %r7058};
	shf.l.wrap.b32 	%r7060, %r7056, %r7057, 3;
	shf.l.wrap.b32 	%r7061, %r7057, %r7056, 3;
	mov.b64 	%rd655, {%r7061, %r7060};
	shr.u64 	%rd656, %rd1264, 6;
	xor.b64  	%rd657, %rd654, %rd656;
	xor.b64  	%rd658, %rd657, %rd655;
	shr.u64 	%rd659, %rd1267, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7062,%dummy}, %rd1267;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7063}, %rd1267;
	}
	shf.r.wrap.b32 	%r7064, %r7063, %r7062, 1;
	shf.r.wrap.b32 	%r7065, %r7062, %r7063, 1;
	mov.b64 	%rd660, {%r7065, %r7064};
	xor.b64  	%rd661, %rd660, %rd659;
	shf.r.wrap.b32 	%r7066, %r7063, %r7062, 8;
	shf.r.wrap.b32 	%r7067, %r7062, %r7063, 8;
	mov.b64 	%rd662, {%r7067, %r7066};
	xor.b64  	%rd663, %rd661, %rd662;
	add.s64 	%rd664, %rd1246, %rd1266;
	add.s64 	%rd665, %rd664, %rd658;
	add.s64 	%rd1266, %rd665, %rd663;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7068,%dummy}, %rd1265;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7069}, %rd1265;
	}
	shf.r.wrap.b32 	%r7070, %r7069, %r7068, 19;
	shf.r.wrap.b32 	%r7071, %r7068, %r7069, 19;
	mov.b64 	%rd666, {%r7071, %r7070};
	shf.l.wrap.b32 	%r7072, %r7068, %r7069, 3;
	shf.l.wrap.b32 	%r7073, %r7069, %r7068, 3;
	mov.b64 	%rd667, {%r7073, %r7072};
	shr.u64 	%rd668, %rd1265, 6;
	xor.b64  	%rd669, %rd666, %rd668;
	xor.b64  	%rd670, %rd669, %rd667;
	shr.u64 	%rd671, %rd1268, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7074,%dummy}, %rd1268;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7075}, %rd1268;
	}
	shf.r.wrap.b32 	%r7076, %r7075, %r7074, 1;
	shf.r.wrap.b32 	%r7077, %r7074, %r7075, 1;
	mov.b64 	%rd672, {%r7077, %r7076};
	xor.b64  	%rd673, %rd672, %rd671;
	shf.r.wrap.b32 	%r7078, %r7075, %r7074, 8;
	shf.r.wrap.b32 	%r7079, %r7074, %r7075, 8;
	mov.b64 	%rd674, {%r7079, %r7078};
	xor.b64  	%rd675, %rd673, %rd674;
	add.s64 	%rd676, %rd1245, %rd1267;
	add.s64 	%rd677, %rd676, %rd670;
	add.s64 	%rd1267, %rd677, %rd675;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7080,%dummy}, %rd1266;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7081}, %rd1266;
	}
	shf.r.wrap.b32 	%r7082, %r7081, %r7080, 19;
	shf.r.wrap.b32 	%r7083, %r7080, %r7081, 19;
	mov.b64 	%rd678, {%r7083, %r7082};
	shf.l.wrap.b32 	%r7084, %r7080, %r7081, 3;
	shf.l.wrap.b32 	%r7085, %r7081, %r7080, 3;
	mov.b64 	%rd679, {%r7085, %r7084};
	shr.u64 	%rd680, %rd1266, 6;
	xor.b64  	%rd681, %rd678, %rd680;
	xor.b64  	%rd682, %rd681, %rd679;
	shr.u64 	%rd683, %rd1252, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7086,%dummy}, %rd1252;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7087}, %rd1252;
	}
	shf.r.wrap.b32 	%r7088, %r7087, %r7086, 1;
	shf.r.wrap.b32 	%r7089, %r7086, %r7087, 1;
	mov.b64 	%rd684, {%r7089, %r7088};
	xor.b64  	%rd685, %rd684, %rd683;
	shf.r.wrap.b32 	%r7090, %r7087, %r7086, 8;
	shf.r.wrap.b32 	%r7091, %r7086, %r7087, 8;
	mov.b64 	%rd686, {%r7091, %r7090};
	xor.b64  	%rd687, %rd685, %rd686;
	add.s64 	%rd688, %rd1261, %rd1268;
	add.s64 	%rd689, %rd688, %rd682;
	add.s64 	%rd1268, %rd689, %rd687;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7092,%dummy}, %rd1267;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7093}, %rd1267;
	}
	shf.r.wrap.b32 	%r7094, %r7093, %r7092, 19;
	shf.r.wrap.b32 	%r7095, %r7092, %r7093, 19;
	mov.b64 	%rd690, {%r7095, %r7094};
	shf.l.wrap.b32 	%r7096, %r7092, %r7093, 3;
	shf.l.wrap.b32 	%r7097, %r7093, %r7092, 3;
	mov.b64 	%rd691, {%r7097, %r7096};
	shr.u64 	%rd692, %rd1267, 6;
	xor.b64  	%rd693, %rd690, %rd692;
	xor.b64  	%rd694, %rd693, %rd691;
	shr.u64 	%rd695, %rd1251, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7098,%dummy}, %rd1251;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7099}, %rd1251;
	}
	shf.r.wrap.b32 	%r7100, %r7099, %r7098, 1;
	shf.r.wrap.b32 	%r7101, %r7098, %r7099, 1;
	mov.b64 	%rd696, {%r7101, %r7100};
	xor.b64  	%rd697, %rd696, %rd695;
	shf.r.wrap.b32 	%r7102, %r7099, %r7098, 8;
	shf.r.wrap.b32 	%r7103, %r7098, %r7099, 8;
	mov.b64 	%rd698, {%r7103, %r7102};
	xor.b64  	%rd699, %rd697, %rd698;
	add.s64 	%rd700, %rd1262, %rd1252;
	add.s64 	%rd701, %rd700, %rd694;
	add.s64 	%rd1252, %rd701, %rd699;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7104,%dummy}, %rd1268;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7105}, %rd1268;
	}
	shf.r.wrap.b32 	%r7106, %r7105, %r7104, 19;
	shf.r.wrap.b32 	%r7107, %r7104, %r7105, 19;
	mov.b64 	%rd702, {%r7107, %r7106};
	shf.l.wrap.b32 	%r7108, %r7104, %r7105, 3;
	shf.l.wrap.b32 	%r7109, %r7105, %r7104, 3;
	mov.b64 	%rd703, {%r7109, %r7108};
	shr.u64 	%rd704, %rd1268, 6;
	xor.b64  	%rd705, %rd702, %rd704;
	xor.b64  	%rd706, %rd705, %rd703;
	shr.u64 	%rd707, %rd1250, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7110,%dummy}, %rd1250;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7111}, %rd1250;
	}
	shf.r.wrap.b32 	%r7112, %r7111, %r7110, 1;
	shf.r.wrap.b32 	%r7113, %r7110, %r7111, 1;
	mov.b64 	%rd708, {%r7113, %r7112};
	xor.b64  	%rd709, %rd708, %rd707;
	shf.r.wrap.b32 	%r7114, %r7111, %r7110, 8;
	shf.r.wrap.b32 	%r7115, %r7110, %r7111, 8;
	mov.b64 	%rd710, {%r7115, %r7114};
	xor.b64  	%rd711, %rd709, %rd710;
	add.s64 	%rd712, %rd1263, %rd1251;
	add.s64 	%rd713, %rd712, %rd706;
	add.s64 	%rd1251, %rd713, %rd711;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7116,%dummy}, %rd1252;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7117}, %rd1252;
	}
	shf.r.wrap.b32 	%r7118, %r7117, %r7116, 19;
	shf.r.wrap.b32 	%r7119, %r7116, %r7117, 19;
	mov.b64 	%rd714, {%r7119, %r7118};
	shf.l.wrap.b32 	%r7120, %r7116, %r7117, 3;
	shf.l.wrap.b32 	%r7121, %r7117, %r7116, 3;
	mov.b64 	%rd715, {%r7121, %r7120};
	shr.u64 	%rd716, %rd1252, 6;
	xor.b64  	%rd717, %rd714, %rd716;
	xor.b64  	%rd718, %rd717, %rd715;
	shr.u64 	%rd719, %rd1249, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7122,%dummy}, %rd1249;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7123}, %rd1249;
	}
	shf.r.wrap.b32 	%r7124, %r7123, %r7122, 1;
	shf.r.wrap.b32 	%r7125, %r7122, %r7123, 1;
	mov.b64 	%rd720, {%r7125, %r7124};
	xor.b64  	%rd721, %rd720, %rd719;
	shf.r.wrap.b32 	%r7126, %r7123, %r7122, 8;
	shf.r.wrap.b32 	%r7127, %r7122, %r7123, 8;
	mov.b64 	%rd722, {%r7127, %r7126};
	xor.b64  	%rd723, %rd721, %rd722;
	add.s64 	%rd724, %rd1264, %rd1250;
	add.s64 	%rd725, %rd724, %rd718;
	add.s64 	%rd1250, %rd725, %rd723;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7128,%dummy}, %rd1251;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7129}, %rd1251;
	}
	shf.r.wrap.b32 	%r7130, %r7129, %r7128, 19;
	shf.r.wrap.b32 	%r7131, %r7128, %r7129, 19;
	mov.b64 	%rd726, {%r7131, %r7130};
	shf.l.wrap.b32 	%r7132, %r7128, %r7129, 3;
	shf.l.wrap.b32 	%r7133, %r7129, %r7128, 3;
	mov.b64 	%rd727, {%r7133, %r7132};
	shr.u64 	%rd728, %rd1251, 6;
	xor.b64  	%rd729, %rd726, %rd728;
	xor.b64  	%rd730, %rd729, %rd727;
	shr.u64 	%rd731, %rd1248, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7134,%dummy}, %rd1248;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7135}, %rd1248;
	}
	shf.r.wrap.b32 	%r7136, %r7135, %r7134, 1;
	shf.r.wrap.b32 	%r7137, %r7134, %r7135, 1;
	mov.b64 	%rd732, {%r7137, %r7136};
	xor.b64  	%rd733, %rd732, %rd731;
	shf.r.wrap.b32 	%r7138, %r7135, %r7134, 8;
	shf.r.wrap.b32 	%r7139, %r7134, %r7135, 8;
	mov.b64 	%rd734, {%r7139, %r7138};
	xor.b64  	%rd735, %rd733, %rd734;
	add.s64 	%rd736, %rd1265, %rd1249;
	add.s64 	%rd737, %rd736, %rd730;
	add.s64 	%rd1249, %rd737, %rd735;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7140,%dummy}, %rd1250;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7141}, %rd1250;
	}
	shf.r.wrap.b32 	%r7142, %r7141, %r7140, 19;
	shf.r.wrap.b32 	%r7143, %r7140, %r7141, 19;
	mov.b64 	%rd738, {%r7143, %r7142};
	shf.l.wrap.b32 	%r7144, %r7140, %r7141, 3;
	shf.l.wrap.b32 	%r7145, %r7141, %r7140, 3;
	mov.b64 	%rd739, {%r7145, %r7144};
	shr.u64 	%rd740, %rd1250, 6;
	xor.b64  	%rd741, %rd738, %rd740;
	xor.b64  	%rd742, %rd741, %rd739;
	shr.u64 	%rd743, %rd1247, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7146,%dummy}, %rd1247;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7147}, %rd1247;
	}
	shf.r.wrap.b32 	%r7148, %r7147, %r7146, 1;
	shf.r.wrap.b32 	%r7149, %r7146, %r7147, 1;
	mov.b64 	%rd744, {%r7149, %r7148};
	xor.b64  	%rd745, %rd744, %rd743;
	shf.r.wrap.b32 	%r7150, %r7147, %r7146, 8;
	shf.r.wrap.b32 	%r7151, %r7146, %r7147, 8;
	mov.b64 	%rd746, {%r7151, %r7150};
	xor.b64  	%rd747, %rd745, %rd746;
	add.s64 	%rd748, %rd1266, %rd1248;
	add.s64 	%rd749, %rd748, %rd742;
	add.s64 	%rd1248, %rd749, %rd747;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7152,%dummy}, %rd1249;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7153}, %rd1249;
	}
	shf.r.wrap.b32 	%r7154, %r7153, %r7152, 19;
	shf.r.wrap.b32 	%r7155, %r7152, %r7153, 19;
	mov.b64 	%rd750, {%r7155, %r7154};
	shf.l.wrap.b32 	%r7156, %r7152, %r7153, 3;
	shf.l.wrap.b32 	%r7157, %r7153, %r7152, 3;
	mov.b64 	%rd751, {%r7157, %r7156};
	shr.u64 	%rd752, %rd1249, 6;
	xor.b64  	%rd753, %rd750, %rd752;
	xor.b64  	%rd754, %rd753, %rd751;
	shr.u64 	%rd755, %rd1246, 7;
	shf.r.wrap.b32 	%r7158, %r6997, %r6996, 1;
	shf.r.wrap.b32 	%r7159, %r6996, %r6997, 1;
	mov.b64 	%rd756, {%r7159, %r7158};
	xor.b64  	%rd757, %rd756, %rd755;
	shf.r.wrap.b32 	%r7160, %r6997, %r6996, 8;
	shf.r.wrap.b32 	%r7161, %r6996, %r6997, 8;
	mov.b64 	%rd758, {%r7161, %r7160};
	xor.b64  	%rd759, %rd757, %rd758;
	add.s64 	%rd760, %rd1267, %rd1247;
	add.s64 	%rd761, %rd760, %rd754;
	add.s64 	%rd1247, %rd761, %rd759;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7162,%dummy}, %rd1248;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7163}, %rd1248;
	}
	shf.r.wrap.b32 	%r7164, %r7163, %r7162, 19;
	shf.r.wrap.b32 	%r7165, %r7162, %r7163, 19;
	mov.b64 	%rd762, {%r7165, %r7164};
	shf.l.wrap.b32 	%r7166, %r7162, %r7163, 3;
	shf.l.wrap.b32 	%r7167, %r7163, %r7162, 3;
	mov.b64 	%rd763, {%r7167, %r7166};
	shr.u64 	%rd764, %rd1248, 6;
	xor.b64  	%rd765, %rd762, %rd764;
	xor.b64  	%rd766, %rd765, %rd763;
	shr.u64 	%rd767, %rd1245, 7;
	shf.r.wrap.b32 	%r7168, %r7009, %r7008, 1;
	shf.r.wrap.b32 	%r7169, %r7008, %r7009, 1;
	mov.b64 	%rd768, {%r7169, %r7168};
	xor.b64  	%rd769, %rd768, %rd767;
	shf.r.wrap.b32 	%r7170, %r7009, %r7008, 8;
	shf.r.wrap.b32 	%r7171, %r7008, %r7009, 8;
	mov.b64 	%rd770, {%r7171, %r7170};
	xor.b64  	%rd771, %rd769, %rd770;
	add.s64 	%rd772, %rd1268, %rd1246;
	add.s64 	%rd773, %rd772, %rd766;
	add.s64 	%rd1246, %rd773, %rd771;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7172,%dummy}, %rd1247;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7173}, %rd1247;
	}
	shf.r.wrap.b32 	%r7174, %r7173, %r7172, 19;
	shf.r.wrap.b32 	%r7175, %r7172, %r7173, 19;
	mov.b64 	%rd774, {%r7175, %r7174};
	shf.l.wrap.b32 	%r7176, %r7172, %r7173, 3;
	shf.l.wrap.b32 	%r7177, %r7173, %r7172, 3;
	mov.b64 	%rd775, {%r7177, %r7176};
	shr.u64 	%rd776, %rd1247, 6;
	xor.b64  	%rd777, %rd774, %rd776;
	xor.b64  	%rd778, %rd777, %rd775;
	shf.r.wrap.b32 	%r7178, %r7021, %r7020, 1;
	shf.r.wrap.b32 	%r7179, %r7020, %r7021, 1;
	mov.b64 	%rd779, {%r7179, %r7178};
	shf.r.wrap.b32 	%r7180, %r7021, %r7020, 8;
	shf.r.wrap.b32 	%r7181, %r7020, %r7021, 8;
	mov.b64 	%rd780, {%r7181, %r7180};
	shr.u64 	%rd781, %rd1261, 7;
	xor.b64  	%rd782, %rd779, %rd781;
	xor.b64  	%rd783, %rd782, %rd780;
	add.s64 	%rd784, %rd1252, %rd1245;
	add.s64 	%rd785, %rd784, %rd778;
	add.s64 	%rd1245, %rd785, %rd783;
	mul.wide.s32 	%rd786, %r7491, 8;
	mov.u64 	%rd787, k_sha512;
	add.s64 	%rd788, %rd787, %rd786;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7182,%dummy}, %rd1257;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7183}, %rd1257;
	}
	shf.r.wrap.b32 	%r7184, %r7183, %r7182, 18;
	shf.r.wrap.b32 	%r7185, %r7182, %r7183, 18;
	mov.b64 	%rd789, {%r7185, %r7184};
	shf.r.wrap.b32 	%r7186, %r7183, %r7182, 14;
	shf.r.wrap.b32 	%r7187, %r7182, %r7183, 14;
	mov.b64 	%rd790, {%r7187, %r7186};
	xor.b64  	%rd791, %rd789, %rd790;
	shf.l.wrap.b32 	%r7188, %r7182, %r7183, 23;
	shf.l.wrap.b32 	%r7189, %r7183, %r7182, 23;
	mov.b64 	%rd792, {%r7189, %r7188};
	xor.b64  	%rd793, %rd791, %rd792;
	xor.b64  	%rd794, %rd1258, %rd1259;
	and.b64  	%rd795, %rd794, %rd1257;
	xor.b64  	%rd796, %rd795, %rd1259;
	add.s64 	%rd797, %rd796, %rd1260;
	add.s64 	%rd798, %rd797, %rd1261;
	ld.const.u64 	%rd799, [%rd788];
	add.s64 	%rd800, %rd798, %rd799;
	add.s64 	%rd801, %rd800, %rd793;
	add.s64 	%rd802, %rd801, %rd1256;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7190}, %rd1253;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7191,%dummy}, %rd1253;
	}
	shf.l.wrap.b32 	%r7192, %r7191, %r7190, 30;
	shf.l.wrap.b32 	%r7193, %r7190, %r7191, 30;
	mov.b64 	%rd803, {%r7193, %r7192};
	shf.r.wrap.b32 	%r7194, %r7190, %r7191, 28;
	shf.r.wrap.b32 	%r7195, %r7191, %r7190, 28;
	mov.b64 	%rd804, {%r7195, %r7194};
	xor.b64  	%rd805, %rd803, %rd804;
	shf.l.wrap.b32 	%r7196, %r7191, %r7190, 25;
	shf.l.wrap.b32 	%r7197, %r7190, %r7191, 25;
	mov.b64 	%rd806, {%r7197, %r7196};
	xor.b64  	%rd807, %rd805, %rd806;
	xor.b64  	%rd808, %rd1253, %rd1254;
	xor.b64  	%rd809, %rd1253, %rd1255;
	and.b64  	%rd810, %rd808, %rd809;
	xor.b64  	%rd811, %rd810, %rd1253;
	add.s64 	%rd812, %rd801, %rd811;
	add.s64 	%rd813, %rd812, %rd807;
	add.s32 	%r7198, %r7491, 1;
	mul.wide.s32 	%rd814, %r7198, 8;
	add.s64 	%rd815, %rd787, %rd814;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7199,%dummy}, %rd802;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7200}, %rd802;
	}
	shf.r.wrap.b32 	%r7201, %r7200, %r7199, 14;
	shf.r.wrap.b32 	%r7202, %r7199, %r7200, 14;
	mov.b64 	%rd816, {%r7202, %r7201};
	shf.r.wrap.b32 	%r7203, %r7200, %r7199, 18;
	shf.r.wrap.b32 	%r7204, %r7199, %r7200, 18;
	mov.b64 	%rd817, {%r7204, %r7203};
	xor.b64  	%rd818, %rd817, %rd816;
	shf.l.wrap.b32 	%r7205, %r7199, %r7200, 23;
	shf.l.wrap.b32 	%r7206, %r7200, %r7199, 23;
	mov.b64 	%rd819, {%r7206, %r7205};
	xor.b64  	%rd820, %rd818, %rd819;
	xor.b64  	%rd821, %rd1257, %rd1258;
	and.b64  	%rd822, %rd802, %rd821;
	xor.b64  	%rd823, %rd822, %rd1258;
	add.s64 	%rd824, %rd1262, %rd1259;
	ld.const.u64 	%rd825, [%rd815];
	add.s64 	%rd826, %rd824, %rd825;
	add.s64 	%rd827, %rd826, %rd823;
	add.s64 	%rd828, %rd827, %rd820;
	add.s64 	%rd829, %rd828, %rd1255;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7207,%dummy}, %rd813;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7208}, %rd813;
	}
	shf.r.wrap.b32 	%r7209, %r7208, %r7207, 28;
	shf.r.wrap.b32 	%r7210, %r7207, %r7208, 28;
	mov.b64 	%rd830, {%r7210, %r7209};
	shf.l.wrap.b32 	%r7211, %r7207, %r7208, 30;
	shf.l.wrap.b32 	%r7212, %r7208, %r7207, 30;
	mov.b64 	%rd831, {%r7212, %r7211};
	xor.b64  	%rd832, %rd831, %rd830;
	shf.l.wrap.b32 	%r7213, %r7207, %r7208, 25;
	shf.l.wrap.b32 	%r7214, %r7208, %r7207, 25;
	mov.b64 	%rd833, {%r7214, %r7213};
	xor.b64  	%rd834, %rd832, %rd833;
	xor.b64  	%rd835, %rd813, %rd1254;
	xor.b64  	%rd836, %rd813, %rd1253;
	and.b64  	%rd837, %rd836, %rd835;
	xor.b64  	%rd838, %rd837, %rd813;
	add.s64 	%rd839, %rd828, %rd838;
	add.s64 	%rd840, %rd839, %rd834;
	add.s32 	%r7215, %r7491, 2;
	mul.wide.s32 	%rd841, %r7215, 8;
	add.s64 	%rd842, %rd787, %rd841;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7216,%dummy}, %rd829;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7217}, %rd829;
	}
	shf.r.wrap.b32 	%r7218, %r7217, %r7216, 14;
	shf.r.wrap.b32 	%r7219, %r7216, %r7217, 14;
	mov.b64 	%rd843, {%r7219, %r7218};
	shf.r.wrap.b32 	%r7220, %r7217, %r7216, 18;
	shf.r.wrap.b32 	%r7221, %r7216, %r7217, 18;
	mov.b64 	%rd844, {%r7221, %r7220};
	xor.b64  	%rd845, %rd844, %rd843;
	shf.l.wrap.b32 	%r7222, %r7216, %r7217, 23;
	shf.l.wrap.b32 	%r7223, %r7217, %r7216, 23;
	mov.b64 	%rd846, {%r7223, %r7222};
	xor.b64  	%rd847, %rd845, %rd846;
	xor.b64  	%rd848, %rd802, %rd1257;
	and.b64  	%rd849, %rd829, %rd848;
	xor.b64  	%rd850, %rd849, %rd1257;
	add.s64 	%rd851, %rd1263, %rd1258;
	ld.const.u64 	%rd852, [%rd842];
	add.s64 	%rd853, %rd851, %rd852;
	add.s64 	%rd854, %rd853, %rd850;
	add.s64 	%rd855, %rd854, %rd847;
	add.s64 	%rd856, %rd855, %rd1254;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7224,%dummy}, %rd840;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7225}, %rd840;
	}
	shf.r.wrap.b32 	%r7226, %r7225, %r7224, 28;
	shf.r.wrap.b32 	%r7227, %r7224, %r7225, 28;
	mov.b64 	%rd857, {%r7227, %r7226};
	shf.l.wrap.b32 	%r7228, %r7224, %r7225, 30;
	shf.l.wrap.b32 	%r7229, %r7225, %r7224, 30;
	mov.b64 	%rd858, {%r7229, %r7228};
	xor.b64  	%rd859, %rd858, %rd857;
	shf.l.wrap.b32 	%r7230, %r7224, %r7225, 25;
	shf.l.wrap.b32 	%r7231, %r7225, %r7224, 25;
	mov.b64 	%rd860, {%r7231, %r7230};
	xor.b64  	%rd861, %rd859, %rd860;
	xor.b64  	%rd862, %rd840, %rd1253;
	xor.b64  	%rd863, %rd840, %rd813;
	and.b64  	%rd864, %rd863, %rd862;
	xor.b64  	%rd865, %rd864, %rd840;
	add.s64 	%rd866, %rd855, %rd865;
	add.s64 	%rd867, %rd866, %rd861;
	add.s32 	%r7232, %r7491, 3;
	mul.wide.s32 	%rd868, %r7232, 8;
	add.s64 	%rd869, %rd787, %rd868;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7233,%dummy}, %rd856;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7234}, %rd856;
	}
	shf.r.wrap.b32 	%r7235, %r7234, %r7233, 14;
	shf.r.wrap.b32 	%r7236, %r7233, %r7234, 14;
	mov.b64 	%rd870, {%r7236, %r7235};
	shf.r.wrap.b32 	%r7237, %r7234, %r7233, 18;
	shf.r.wrap.b32 	%r7238, %r7233, %r7234, 18;
	mov.b64 	%rd871, {%r7238, %r7237};
	xor.b64  	%rd872, %rd871, %rd870;
	shf.l.wrap.b32 	%r7239, %r7233, %r7234, 23;
	shf.l.wrap.b32 	%r7240, %r7234, %r7233, 23;
	mov.b64 	%rd873, {%r7240, %r7239};
	xor.b64  	%rd874, %rd872, %rd873;
	xor.b64  	%rd875, %rd829, %rd802;
	and.b64  	%rd876, %rd856, %rd875;
	xor.b64  	%rd877, %rd876, %rd802;
	add.s64 	%rd878, %rd1264, %rd1257;
	ld.const.u64 	%rd879, [%rd869];
	add.s64 	%rd880, %rd878, %rd879;
	add.s64 	%rd881, %rd880, %rd877;
	add.s64 	%rd882, %rd881, %rd874;
	add.s64 	%rd883, %rd882, %rd1253;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7241,%dummy}, %rd867;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7242}, %rd867;
	}
	shf.r.wrap.b32 	%r7243, %r7242, %r7241, 28;
	shf.r.wrap.b32 	%r7244, %r7241, %r7242, 28;
	mov.b64 	%rd884, {%r7244, %r7243};
	shf.l.wrap.b32 	%r7245, %r7241, %r7242, 30;
	shf.l.wrap.b32 	%r7246, %r7242, %r7241, 30;
	mov.b64 	%rd885, {%r7246, %r7245};
	xor.b64  	%rd886, %rd885, %rd884;
	shf.l.wrap.b32 	%r7247, %r7241, %r7242, 25;
	shf.l.wrap.b32 	%r7248, %r7242, %r7241, 25;
	mov.b64 	%rd887, {%r7248, %r7247};
	xor.b64  	%rd888, %rd886, %rd887;
	xor.b64  	%rd889, %rd867, %rd813;
	xor.b64  	%rd890, %rd867, %rd840;
	and.b64  	%rd891, %rd890, %rd889;
	xor.b64  	%rd892, %rd891, %rd867;
	add.s64 	%rd893, %rd882, %rd892;
	add.s64 	%rd894, %rd893, %rd888;
	add.s32 	%r7249, %r7491, 4;
	mul.wide.s32 	%rd895, %r7249, 8;
	add.s64 	%rd896, %rd787, %rd895;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7250,%dummy}, %rd883;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7251}, %rd883;
	}
	shf.r.wrap.b32 	%r7252, %r7251, %r7250, 14;
	shf.r.wrap.b32 	%r7253, %r7250, %r7251, 14;
	mov.b64 	%rd897, {%r7253, %r7252};
	shf.r.wrap.b32 	%r7254, %r7251, %r7250, 18;
	shf.r.wrap.b32 	%r7255, %r7250, %r7251, 18;
	mov.b64 	%rd898, {%r7255, %r7254};
	xor.b64  	%rd899, %rd898, %rd897;
	shf.l.wrap.b32 	%r7256, %r7250, %r7251, 23;
	shf.l.wrap.b32 	%r7257, %r7251, %r7250, 23;
	mov.b64 	%rd900, {%r7257, %r7256};
	xor.b64  	%rd901, %rd899, %rd900;
	xor.b64  	%rd902, %rd856, %rd829;
	and.b64  	%rd903, %rd883, %rd902;
	xor.b64  	%rd904, %rd903, %rd829;
	add.s64 	%rd905, %rd802, %rd1265;
	ld.const.u64 	%rd906, [%rd896];
	add.s64 	%rd907, %rd905, %rd906;
	add.s64 	%rd908, %rd907, %rd904;
	add.s64 	%rd909, %rd908, %rd901;
	add.s64 	%rd910, %rd909, %rd813;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7258,%dummy}, %rd894;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7259}, %rd894;
	}
	shf.r.wrap.b32 	%r7260, %r7259, %r7258, 28;
	shf.r.wrap.b32 	%r7261, %r7258, %r7259, 28;
	mov.b64 	%rd911, {%r7261, %r7260};
	shf.l.wrap.b32 	%r7262, %r7258, %r7259, 30;
	shf.l.wrap.b32 	%r7263, %r7259, %r7258, 30;
	mov.b64 	%rd912, {%r7263, %r7262};
	xor.b64  	%rd913, %rd912, %rd911;
	shf.l.wrap.b32 	%r7264, %r7258, %r7259, 25;
	shf.l.wrap.b32 	%r7265, %r7259, %r7258, 25;
	mov.b64 	%rd914, {%r7265, %r7264};
	xor.b64  	%rd915, %rd913, %rd914;
	xor.b64  	%rd916, %rd894, %rd840;
	xor.b64  	%rd917, %rd894, %rd867;
	and.b64  	%rd918, %rd917, %rd916;
	xor.b64  	%rd919, %rd918, %rd894;
	add.s64 	%rd920, %rd909, %rd919;
	add.s64 	%rd921, %rd920, %rd915;
	add.s32 	%r7266, %r7491, 5;
	mul.wide.s32 	%rd922, %r7266, 8;
	add.s64 	%rd923, %rd787, %rd922;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7267,%dummy}, %rd910;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7268}, %rd910;
	}
	shf.r.wrap.b32 	%r7269, %r7268, %r7267, 14;
	shf.r.wrap.b32 	%r7270, %r7267, %r7268, 14;
	mov.b64 	%rd924, {%r7270, %r7269};
	shf.r.wrap.b32 	%r7271, %r7268, %r7267, 18;
	shf.r.wrap.b32 	%r7272, %r7267, %r7268, 18;
	mov.b64 	%rd925, {%r7272, %r7271};
	xor.b64  	%rd926, %rd925, %rd924;
	shf.l.wrap.b32 	%r7273, %r7267, %r7268, 23;
	shf.l.wrap.b32 	%r7274, %r7268, %r7267, 23;
	mov.b64 	%rd927, {%r7274, %r7273};
	xor.b64  	%rd928, %rd926, %rd927;
	xor.b64  	%rd929, %rd883, %rd856;
	and.b64  	%rd930, %rd910, %rd929;
	xor.b64  	%rd931, %rd930, %rd856;
	add.s64 	%rd932, %rd829, %rd1266;
	ld.const.u64 	%rd933, [%rd923];
	add.s64 	%rd934, %rd932, %rd933;
	add.s64 	%rd935, %rd934, %rd931;
	add.s64 	%rd936, %rd935, %rd928;
	add.s64 	%rd937, %rd936, %rd840;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7275,%dummy}, %rd921;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7276}, %rd921;
	}
	shf.r.wrap.b32 	%r7277, %r7276, %r7275, 28;
	shf.r.wrap.b32 	%r7278, %r7275, %r7276, 28;
	mov.b64 	%rd938, {%r7278, %r7277};
	shf.l.wrap.b32 	%r7279, %r7275, %r7276, 30;
	shf.l.wrap.b32 	%r7280, %r7276, %r7275, 30;
	mov.b64 	%rd939, {%r7280, %r7279};
	xor.b64  	%rd940, %rd939, %rd938;
	shf.l.wrap.b32 	%r7281, %r7275, %r7276, 25;
	shf.l.wrap.b32 	%r7282, %r7276, %r7275, 25;
	mov.b64 	%rd941, {%r7282, %r7281};
	xor.b64  	%rd942, %rd940, %rd941;
	xor.b64  	%rd943, %rd921, %rd867;
	xor.b64  	%rd944, %rd921, %rd894;
	and.b64  	%rd945, %rd944, %rd943;
	xor.b64  	%rd946, %rd945, %rd921;
	add.s64 	%rd947, %rd936, %rd946;
	add.s64 	%rd948, %rd947, %rd942;
	add.s32 	%r7283, %r7491, 6;
	mul.wide.s32 	%rd949, %r7283, 8;
	add.s64 	%rd950, %rd787, %rd949;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7284,%dummy}, %rd937;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7285}, %rd937;
	}
	shf.r.wrap.b32 	%r7286, %r7285, %r7284, 14;
	shf.r.wrap.b32 	%r7287, %r7284, %r7285, 14;
	mov.b64 	%rd951, {%r7287, %r7286};
	shf.r.wrap.b32 	%r7288, %r7285, %r7284, 18;
	shf.r.wrap.b32 	%r7289, %r7284, %r7285, 18;
	mov.b64 	%rd952, {%r7289, %r7288};
	xor.b64  	%rd953, %rd952, %rd951;
	shf.l.wrap.b32 	%r7290, %r7284, %r7285, 23;
	shf.l.wrap.b32 	%r7291, %r7285, %r7284, 23;
	mov.b64 	%rd954, {%r7291, %r7290};
	xor.b64  	%rd955, %rd953, %rd954;
	xor.b64  	%rd956, %rd910, %rd883;
	and.b64  	%rd957, %rd937, %rd956;
	xor.b64  	%rd958, %rd957, %rd883;
	add.s64 	%rd959, %rd856, %rd1267;
	ld.const.u64 	%rd960, [%rd950];
	add.s64 	%rd961, %rd959, %rd960;
	add.s64 	%rd962, %rd961, %rd958;
	add.s64 	%rd963, %rd962, %rd955;
	add.s64 	%rd964, %rd963, %rd867;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7292,%dummy}, %rd948;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7293}, %rd948;
	}
	shf.r.wrap.b32 	%r7294, %r7293, %r7292, 28;
	shf.r.wrap.b32 	%r7295, %r7292, %r7293, 28;
	mov.b64 	%rd965, {%r7295, %r7294};
	shf.l.wrap.b32 	%r7296, %r7292, %r7293, 30;
	shf.l.wrap.b32 	%r7297, %r7293, %r7292, 30;
	mov.b64 	%rd966, {%r7297, %r7296};
	xor.b64  	%rd967, %rd966, %rd965;
	shf.l.wrap.b32 	%r7298, %r7292, %r7293, 25;
	shf.l.wrap.b32 	%r7299, %r7293, %r7292, 25;
	mov.b64 	%rd968, {%r7299, %r7298};
	xor.b64  	%rd969, %rd967, %rd968;
	xor.b64  	%rd970, %rd948, %rd894;
	xor.b64  	%rd971, %rd948, %rd921;
	and.b64  	%rd972, %rd971, %rd970;
	xor.b64  	%rd973, %rd972, %rd948;
	add.s64 	%rd974, %rd963, %rd973;
	add.s64 	%rd975, %rd974, %rd969;
	add.s32 	%r7300, %r7491, 7;
	mul.wide.s32 	%rd976, %r7300, 8;
	add.s64 	%rd977, %rd787, %rd976;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7301,%dummy}, %rd964;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7302}, %rd964;
	}
	shf.r.wrap.b32 	%r7303, %r7302, %r7301, 14;
	shf.r.wrap.b32 	%r7304, %r7301, %r7302, 14;
	mov.b64 	%rd978, {%r7304, %r7303};
	shf.r.wrap.b32 	%r7305, %r7302, %r7301, 18;
	shf.r.wrap.b32 	%r7306, %r7301, %r7302, 18;
	mov.b64 	%rd979, {%r7306, %r7305};
	xor.b64  	%rd980, %rd979, %rd978;
	shf.l.wrap.b32 	%r7307, %r7301, %r7302, 23;
	shf.l.wrap.b32 	%r7308, %r7302, %r7301, 23;
	mov.b64 	%rd981, {%r7308, %r7307};
	xor.b64  	%rd982, %rd980, %rd981;
	xor.b64  	%rd983, %rd937, %rd910;
	and.b64  	%rd984, %rd964, %rd983;
	xor.b64  	%rd985, %rd984, %rd910;
	add.s64 	%rd986, %rd883, %rd1268;
	ld.const.u64 	%rd987, [%rd977];
	add.s64 	%rd988, %rd986, %rd987;
	add.s64 	%rd989, %rd988, %rd985;
	add.s64 	%rd990, %rd989, %rd982;
	add.s64 	%rd991, %rd990, %rd894;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7309,%dummy}, %rd975;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7310}, %rd975;
	}
	shf.r.wrap.b32 	%r7311, %r7310, %r7309, 28;
	shf.r.wrap.b32 	%r7312, %r7309, %r7310, 28;
	mov.b64 	%rd992, {%r7312, %r7311};
	shf.l.wrap.b32 	%r7313, %r7309, %r7310, 30;
	shf.l.wrap.b32 	%r7314, %r7310, %r7309, 30;
	mov.b64 	%rd993, {%r7314, %r7313};
	xor.b64  	%rd994, %rd993, %rd992;
	shf.l.wrap.b32 	%r7315, %r7309, %r7310, 25;
	shf.l.wrap.b32 	%r7316, %r7310, %r7309, 25;
	mov.b64 	%rd995, {%r7316, %r7315};
	xor.b64  	%rd996, %rd994, %rd995;
	xor.b64  	%rd997, %rd975, %rd921;
	xor.b64  	%rd998, %rd975, %rd948;
	and.b64  	%rd999, %rd998, %rd997;
	xor.b64  	%rd1000, %rd999, %rd975;
	add.s64 	%rd1001, %rd990, %rd1000;
	add.s64 	%rd1002, %rd1001, %rd996;
	add.s32 	%r7317, %r7491, 8;
	mul.wide.s32 	%rd1003, %r7317, 8;
	add.s64 	%rd1004, %rd787, %rd1003;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7318,%dummy}, %rd991;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7319}, %rd991;
	}
	shf.r.wrap.b32 	%r7320, %r7319, %r7318, 14;
	shf.r.wrap.b32 	%r7321, %r7318, %r7319, 14;
	mov.b64 	%rd1005, {%r7321, %r7320};
	shf.r.wrap.b32 	%r7322, %r7319, %r7318, 18;
	shf.r.wrap.b32 	%r7323, %r7318, %r7319, 18;
	mov.b64 	%rd1006, {%r7323, %r7322};
	xor.b64  	%rd1007, %rd1006, %rd1005;
	shf.l.wrap.b32 	%r7324, %r7318, %r7319, 23;
	shf.l.wrap.b32 	%r7325, %r7319, %r7318, 23;
	mov.b64 	%rd1008, {%r7325, %r7324};
	xor.b64  	%rd1009, %rd1007, %rd1008;
	xor.b64  	%rd1010, %rd964, %rd937;
	and.b64  	%rd1011, %rd991, %rd1010;
	xor.b64  	%rd1012, %rd1011, %rd937;
	add.s64 	%rd1013, %rd910, %rd1252;
	ld.const.u64 	%rd1014, [%rd1004];
	add.s64 	%rd1015, %rd1013, %rd1014;
	add.s64 	%rd1016, %rd1015, %rd1012;
	add.s64 	%rd1017, %rd1016, %rd1009;
	add.s64 	%rd1018, %rd1017, %rd921;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7326,%dummy}, %rd1002;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7327}, %rd1002;
	}
	shf.r.wrap.b32 	%r7328, %r7327, %r7326, 28;
	shf.r.wrap.b32 	%r7329, %r7326, %r7327, 28;
	mov.b64 	%rd1019, {%r7329, %r7328};
	shf.l.wrap.b32 	%r7330, %r7326, %r7327, 30;
	shf.l.wrap.b32 	%r7331, %r7327, %r7326, 30;
	mov.b64 	%rd1020, {%r7331, %r7330};
	xor.b64  	%rd1021, %rd1020, %rd1019;
	shf.l.wrap.b32 	%r7332, %r7326, %r7327, 25;
	shf.l.wrap.b32 	%r7333, %r7327, %r7326, 25;
	mov.b64 	%rd1022, {%r7333, %r7332};
	xor.b64  	%rd1023, %rd1021, %rd1022;
	xor.b64  	%rd1024, %rd1002, %rd948;
	xor.b64  	%rd1025, %rd1002, %rd975;
	and.b64  	%rd1026, %rd1025, %rd1024;
	xor.b64  	%rd1027, %rd1026, %rd1002;
	add.s64 	%rd1028, %rd1017, %rd1027;
	add.s64 	%rd1029, %rd1028, %rd1023;
	add.s32 	%r7334, %r7491, 9;
	mul.wide.s32 	%rd1030, %r7334, 8;
	add.s64 	%rd1031, %rd787, %rd1030;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7335,%dummy}, %rd1018;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7336}, %rd1018;
	}
	shf.r.wrap.b32 	%r7337, %r7336, %r7335, 14;
	shf.r.wrap.b32 	%r7338, %r7335, %r7336, 14;
	mov.b64 	%rd1032, {%r7338, %r7337};
	shf.r.wrap.b32 	%r7339, %r7336, %r7335, 18;
	shf.r.wrap.b32 	%r7340, %r7335, %r7336, 18;
	mov.b64 	%rd1033, {%r7340, %r7339};
	xor.b64  	%rd1034, %rd1033, %rd1032;
	shf.l.wrap.b32 	%r7341, %r7335, %r7336, 23;
	shf.l.wrap.b32 	%r7342, %r7336, %r7335, 23;
	mov.b64 	%rd1035, {%r7342, %r7341};
	xor.b64  	%rd1036, %rd1034, %rd1035;
	xor.b64  	%rd1037, %rd991, %rd964;
	and.b64  	%rd1038, %rd1018, %rd1037;
	xor.b64  	%rd1039, %rd1038, %rd964;
	add.s64 	%rd1040, %rd937, %rd1251;
	ld.const.u64 	%rd1041, [%rd1031];
	add.s64 	%rd1042, %rd1040, %rd1041;
	add.s64 	%rd1043, %rd1042, %rd1039;
	add.s64 	%rd1044, %rd1043, %rd1036;
	add.s64 	%rd1045, %rd1044, %rd948;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7343,%dummy}, %rd1029;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7344}, %rd1029;
	}
	shf.r.wrap.b32 	%r7345, %r7344, %r7343, 28;
	shf.r.wrap.b32 	%r7346, %r7343, %r7344, 28;
	mov.b64 	%rd1046, {%r7346, %r7345};
	shf.l.wrap.b32 	%r7347, %r7343, %r7344, 30;
	shf.l.wrap.b32 	%r7348, %r7344, %r7343, 30;
	mov.b64 	%rd1047, {%r7348, %r7347};
	xor.b64  	%rd1048, %rd1047, %rd1046;
	shf.l.wrap.b32 	%r7349, %r7343, %r7344, 25;
	shf.l.wrap.b32 	%r7350, %r7344, %r7343, 25;
	mov.b64 	%rd1049, {%r7350, %r7349};
	xor.b64  	%rd1050, %rd1048, %rd1049;
	xor.b64  	%rd1051, %rd1029, %rd975;
	xor.b64  	%rd1052, %rd1029, %rd1002;
	and.b64  	%rd1053, %rd1052, %rd1051;
	xor.b64  	%rd1054, %rd1053, %rd1029;
	add.s64 	%rd1055, %rd1044, %rd1054;
	add.s64 	%rd1056, %rd1055, %rd1050;
	add.s32 	%r7351, %r7491, 10;
	mul.wide.s32 	%rd1057, %r7351, 8;
	add.s64 	%rd1058, %rd787, %rd1057;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7352,%dummy}, %rd1045;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7353}, %rd1045;
	}
	shf.r.wrap.b32 	%r7354, %r7353, %r7352, 14;
	shf.r.wrap.b32 	%r7355, %r7352, %r7353, 14;
	mov.b64 	%rd1059, {%r7355, %r7354};
	shf.r.wrap.b32 	%r7356, %r7353, %r7352, 18;
	shf.r.wrap.b32 	%r7357, %r7352, %r7353, 18;
	mov.b64 	%rd1060, {%r7357, %r7356};
	xor.b64  	%rd1061, %rd1060, %rd1059;
	shf.l.wrap.b32 	%r7358, %r7352, %r7353, 23;
	shf.l.wrap.b32 	%r7359, %r7353, %r7352, 23;
	mov.b64 	%rd1062, {%r7359, %r7358};
	xor.b64  	%rd1063, %rd1061, %rd1062;
	xor.b64  	%rd1064, %rd1018, %rd991;
	and.b64  	%rd1065, %rd1045, %rd1064;
	xor.b64  	%rd1066, %rd1065, %rd991;
	add.s64 	%rd1067, %rd964, %rd1250;
	ld.const.u64 	%rd1068, [%rd1058];
	add.s64 	%rd1069, %rd1067, %rd1068;
	add.s64 	%rd1070, %rd1069, %rd1066;
	add.s64 	%rd1071, %rd1070, %rd1063;
	add.s64 	%rd1072, %rd1071, %rd975;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7360,%dummy}, %rd1056;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7361}, %rd1056;
	}
	shf.r.wrap.b32 	%r7362, %r7361, %r7360, 28;
	shf.r.wrap.b32 	%r7363, %r7360, %r7361, 28;
	mov.b64 	%rd1073, {%r7363, %r7362};
	shf.l.wrap.b32 	%r7364, %r7360, %r7361, 30;
	shf.l.wrap.b32 	%r7365, %r7361, %r7360, 30;
	mov.b64 	%rd1074, {%r7365, %r7364};
	xor.b64  	%rd1075, %rd1074, %rd1073;
	shf.l.wrap.b32 	%r7366, %r7360, %r7361, 25;
	shf.l.wrap.b32 	%r7367, %r7361, %r7360, 25;
	mov.b64 	%rd1076, {%r7367, %r7366};
	xor.b64  	%rd1077, %rd1075, %rd1076;
	xor.b64  	%rd1078, %rd1056, %rd1002;
	xor.b64  	%rd1079, %rd1056, %rd1029;
	and.b64  	%rd1080, %rd1079, %rd1078;
	xor.b64  	%rd1081, %rd1080, %rd1056;
	add.s64 	%rd1082, %rd1071, %rd1081;
	add.s64 	%rd1083, %rd1082, %rd1077;
	add.s32 	%r7368, %r7491, 11;
	mul.wide.s32 	%rd1084, %r7368, 8;
	add.s64 	%rd1085, %rd787, %rd1084;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7369,%dummy}, %rd1072;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7370}, %rd1072;
	}
	shf.r.wrap.b32 	%r7371, %r7370, %r7369, 14;
	shf.r.wrap.b32 	%r7372, %r7369, %r7370, 14;
	mov.b64 	%rd1086, {%r7372, %r7371};
	shf.r.wrap.b32 	%r7373, %r7370, %r7369, 18;
	shf.r.wrap.b32 	%r7374, %r7369, %r7370, 18;
	mov.b64 	%rd1087, {%r7374, %r7373};
	xor.b64  	%rd1088, %rd1087, %rd1086;
	shf.l.wrap.b32 	%r7375, %r7369, %r7370, 23;
	shf.l.wrap.b32 	%r7376, %r7370, %r7369, 23;
	mov.b64 	%rd1089, {%r7376, %r7375};
	xor.b64  	%rd1090, %rd1088, %rd1089;
	xor.b64  	%rd1091, %rd1045, %rd1018;
	and.b64  	%rd1092, %rd1072, %rd1091;
	xor.b64  	%rd1093, %rd1092, %rd1018;
	add.s64 	%rd1094, %rd991, %rd1249;
	ld.const.u64 	%rd1095, [%rd1085];
	add.s64 	%rd1096, %rd1094, %rd1095;
	add.s64 	%rd1097, %rd1096, %rd1093;
	add.s64 	%rd1098, %rd1097, %rd1090;
	add.s64 	%rd1099, %rd1098, %rd1002;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7377,%dummy}, %rd1083;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7378}, %rd1083;
	}
	shf.r.wrap.b32 	%r7379, %r7378, %r7377, 28;
	shf.r.wrap.b32 	%r7380, %r7377, %r7378, 28;
	mov.b64 	%rd1100, {%r7380, %r7379};
	shf.l.wrap.b32 	%r7381, %r7377, %r7378, 30;
	shf.l.wrap.b32 	%r7382, %r7378, %r7377, 30;
	mov.b64 	%rd1101, {%r7382, %r7381};
	xor.b64  	%rd1102, %rd1101, %rd1100;
	shf.l.wrap.b32 	%r7383, %r7377, %r7378, 25;
	shf.l.wrap.b32 	%r7384, %r7378, %r7377, 25;
	mov.b64 	%rd1103, {%r7384, %r7383};
	xor.b64  	%rd1104, %rd1102, %rd1103;
	xor.b64  	%rd1105, %rd1083, %rd1029;
	xor.b64  	%rd1106, %rd1083, %rd1056;
	and.b64  	%rd1107, %rd1106, %rd1105;
	xor.b64  	%rd1108, %rd1107, %rd1083;
	add.s64 	%rd1109, %rd1098, %rd1108;
	add.s64 	%rd1110, %rd1109, %rd1104;
	add.s32 	%r7385, %r7491, 12;
	mul.wide.s32 	%rd1111, %r7385, 8;
	add.s64 	%rd1112, %rd787, %rd1111;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7386,%dummy}, %rd1099;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7387}, %rd1099;
	}
	shf.r.wrap.b32 	%r7388, %r7387, %r7386, 14;
	shf.r.wrap.b32 	%r7389, %r7386, %r7387, 14;
	mov.b64 	%rd1113, {%r7389, %r7388};
	shf.r.wrap.b32 	%r7390, %r7387, %r7386, 18;
	shf.r.wrap.b32 	%r7391, %r7386, %r7387, 18;
	mov.b64 	%rd1114, {%r7391, %r7390};
	xor.b64  	%rd1115, %rd1114, %rd1113;
	shf.l.wrap.b32 	%r7392, %r7386, %r7387, 23;
	shf.l.wrap.b32 	%r7393, %r7387, %r7386, 23;
	mov.b64 	%rd1116, {%r7393, %r7392};
	xor.b64  	%rd1117, %rd1115, %rd1116;
	xor.b64  	%rd1118, %rd1072, %rd1045;
	and.b64  	%rd1119, %rd1099, %rd1118;
	xor.b64  	%rd1120, %rd1119, %rd1045;
	add.s64 	%rd1121, %rd1018, %rd1248;
	ld.const.u64 	%rd1122, [%rd1112];
	add.s64 	%rd1123, %rd1121, %rd1122;
	add.s64 	%rd1124, %rd1123, %rd1120;
	add.s64 	%rd1125, %rd1124, %rd1117;
	add.s64 	%rd1260, %rd1125, %rd1029;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7394,%dummy}, %rd1110;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7395}, %rd1110;
	}
	shf.r.wrap.b32 	%r7396, %r7395, %r7394, 28;
	shf.r.wrap.b32 	%r7397, %r7394, %r7395, 28;
	mov.b64 	%rd1126, {%r7397, %r7396};
	shf.l.wrap.b32 	%r7398, %r7394, %r7395, 30;
	shf.l.wrap.b32 	%r7399, %r7395, %r7394, 30;
	mov.b64 	%rd1127, {%r7399, %r7398};
	xor.b64  	%rd1128, %rd1127, %rd1126;
	shf.l.wrap.b32 	%r7400, %r7394, %r7395, 25;
	shf.l.wrap.b32 	%r7401, %r7395, %r7394, 25;
	mov.b64 	%rd1129, {%r7401, %r7400};
	xor.b64  	%rd1130, %rd1128, %rd1129;
	xor.b64  	%rd1131, %rd1110, %rd1056;
	xor.b64  	%rd1132, %rd1110, %rd1083;
	and.b64  	%rd1133, %rd1132, %rd1131;
	xor.b64  	%rd1134, %rd1133, %rd1110;
	add.s64 	%rd1135, %rd1125, %rd1134;
	add.s64 	%rd1256, %rd1135, %rd1130;
	add.s32 	%r7402, %r7491, 13;
	mul.wide.s32 	%rd1136, %r7402, 8;
	add.s64 	%rd1137, %rd787, %rd1136;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7403,%dummy}, %rd1260;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7404}, %rd1260;
	}
	shf.r.wrap.b32 	%r7405, %r7404, %r7403, 14;
	shf.r.wrap.b32 	%r7406, %r7403, %r7404, 14;
	mov.b64 	%rd1138, {%r7406, %r7405};
	shf.r.wrap.b32 	%r7407, %r7404, %r7403, 18;
	shf.r.wrap.b32 	%r7408, %r7403, %r7404, 18;
	mov.b64 	%rd1139, {%r7408, %r7407};
	xor.b64  	%rd1140, %rd1139, %rd1138;
	shf.l.wrap.b32 	%r7409, %r7403, %r7404, 23;
	shf.l.wrap.b32 	%r7410, %r7404, %r7403, 23;
	mov.b64 	%rd1141, {%r7410, %r7409};
	xor.b64  	%rd1142, %rd1140, %rd1141;
	xor.b64  	%rd1143, %rd1099, %rd1072;
	and.b64  	%rd1144, %rd1260, %rd1143;
	xor.b64  	%rd1145, %rd1144, %rd1072;
	add.s64 	%rd1146, %rd1045, %rd1247;
	ld.const.u64 	%rd1147, [%rd1137];
	add.s64 	%rd1148, %rd1146, %rd1147;
	add.s64 	%rd1149, %rd1148, %rd1145;
	add.s64 	%rd1150, %rd1149, %rd1142;
	add.s64 	%rd1259, %rd1150, %rd1056;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7411,%dummy}, %rd1256;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7412}, %rd1256;
	}
	shf.r.wrap.b32 	%r7413, %r7412, %r7411, 28;
	shf.r.wrap.b32 	%r7414, %r7411, %r7412, 28;
	mov.b64 	%rd1151, {%r7414, %r7413};
	shf.l.wrap.b32 	%r7415, %r7411, %r7412, 30;
	shf.l.wrap.b32 	%r7416, %r7412, %r7411, 30;
	mov.b64 	%rd1152, {%r7416, %r7415};
	xor.b64  	%rd1153, %rd1152, %rd1151;
	shf.l.wrap.b32 	%r7417, %r7411, %r7412, 25;
	shf.l.wrap.b32 	%r7418, %r7412, %r7411, 25;
	mov.b64 	%rd1154, {%r7418, %r7417};
	xor.b64  	%rd1155, %rd1153, %rd1154;
	xor.b64  	%rd1156, %rd1256, %rd1083;
	xor.b64  	%rd1157, %rd1256, %rd1110;
	and.b64  	%rd1158, %rd1157, %rd1156;
	xor.b64  	%rd1159, %rd1158, %rd1256;
	add.s64 	%rd1160, %rd1150, %rd1159;
	add.s64 	%rd1255, %rd1160, %rd1155;
	add.s32 	%r7419, %r7491, 14;
	mul.wide.s32 	%rd1161, %r7419, 8;
	add.s64 	%rd1162, %rd787, %rd1161;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7420,%dummy}, %rd1259;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7421}, %rd1259;
	}
	shf.r.wrap.b32 	%r7422, %r7421, %r7420, 14;
	shf.r.wrap.b32 	%r7423, %r7420, %r7421, 14;
	mov.b64 	%rd1163, {%r7423, %r7422};
	shf.r.wrap.b32 	%r7424, %r7421, %r7420, 18;
	shf.r.wrap.b32 	%r7425, %r7420, %r7421, 18;
	mov.b64 	%rd1164, {%r7425, %r7424};
	xor.b64  	%rd1165, %rd1164, %rd1163;
	shf.l.wrap.b32 	%r7426, %r7420, %r7421, 23;
	shf.l.wrap.b32 	%r7427, %r7421, %r7420, 23;
	mov.b64 	%rd1166, {%r7427, %r7426};
	xor.b64  	%rd1167, %rd1165, %rd1166;
	xor.b64  	%rd1168, %rd1260, %rd1099;
	and.b64  	%rd1169, %rd1259, %rd1168;
	xor.b64  	%rd1170, %rd1169, %rd1099;
	add.s64 	%rd1171, %rd1072, %rd1246;
	ld.const.u64 	%rd1172, [%rd1162];
	add.s64 	%rd1173, %rd1171, %rd1172;
	add.s64 	%rd1174, %rd1173, %rd1170;
	add.s64 	%rd1175, %rd1174, %rd1167;
	add.s64 	%rd1258, %rd1175, %rd1083;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7428,%dummy}, %rd1255;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7429}, %rd1255;
	}
	shf.r.wrap.b32 	%r7430, %r7429, %r7428, 28;
	shf.r.wrap.b32 	%r7431, %r7428, %r7429, 28;
	mov.b64 	%rd1176, {%r7431, %r7430};
	shf.l.wrap.b32 	%r7432, %r7428, %r7429, 30;
	shf.l.wrap.b32 	%r7433, %r7429, %r7428, 30;
	mov.b64 	%rd1177, {%r7433, %r7432};
	xor.b64  	%rd1178, %rd1177, %rd1176;
	shf.l.wrap.b32 	%r7434, %r7428, %r7429, 25;
	shf.l.wrap.b32 	%r7435, %r7429, %r7428, 25;
	mov.b64 	%rd1179, {%r7435, %r7434};
	xor.b64  	%rd1180, %rd1178, %rd1179;
	xor.b64  	%rd1181, %rd1255, %rd1110;
	xor.b64  	%rd1182, %rd1255, %rd1256;
	and.b64  	%rd1183, %rd1182, %rd1181;
	xor.b64  	%rd1184, %rd1183, %rd1255;
	add.s64 	%rd1185, %rd1175, %rd1184;
	add.s64 	%rd1254, %rd1185, %rd1180;
	add.s32 	%r7436, %r7491, 15;
	mul.wide.s32 	%rd1186, %r7436, 8;
	add.s64 	%rd1187, %rd787, %rd1186;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7437,%dummy}, %rd1258;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7438}, %rd1258;
	}
	shf.r.wrap.b32 	%r7439, %r7438, %r7437, 14;
	shf.r.wrap.b32 	%r7440, %r7437, %r7438, 14;
	mov.b64 	%rd1188, {%r7440, %r7439};
	shf.r.wrap.b32 	%r7441, %r7438, %r7437, 18;
	shf.r.wrap.b32 	%r7442, %r7437, %r7438, 18;
	mov.b64 	%rd1189, {%r7442, %r7441};
	xor.b64  	%rd1190, %rd1189, %rd1188;
	shf.l.wrap.b32 	%r7443, %r7437, %r7438, 23;
	shf.l.wrap.b32 	%r7444, %r7438, %r7437, 23;
	mov.b64 	%rd1191, {%r7444, %r7443};
	xor.b64  	%rd1192, %rd1190, %rd1191;
	xor.b64  	%rd1193, %rd1259, %rd1260;
	and.b64  	%rd1194, %rd1258, %rd1193;
	xor.b64  	%rd1195, %rd1194, %rd1260;
	add.s64 	%rd1196, %rd1099, %rd1245;
	ld.const.u64 	%rd1197, [%rd1187];
	add.s64 	%rd1198, %rd1196, %rd1197;
	add.s64 	%rd1199, %rd1198, %rd1195;
	add.s64 	%rd1200, %rd1199, %rd1192;
	add.s64 	%rd1257, %rd1200, %rd1110;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7445,%dummy}, %rd1254;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7446}, %rd1254;
	}
	shf.r.wrap.b32 	%r7447, %r7446, %r7445, 28;
	shf.r.wrap.b32 	%r7448, %r7445, %r7446, 28;
	mov.b64 	%rd1201, {%r7448, %r7447};
	shf.l.wrap.b32 	%r7449, %r7445, %r7446, 30;
	shf.l.wrap.b32 	%r7450, %r7446, %r7445, 30;
	mov.b64 	%rd1202, {%r7450, %r7449};
	xor.b64  	%rd1203, %rd1202, %rd1201;
	shf.l.wrap.b32 	%r7451, %r7445, %r7446, 25;
	shf.l.wrap.b32 	%r7452, %r7446, %r7445, 25;
	mov.b64 	%rd1204, {%r7452, %r7451};
	xor.b64  	%rd1205, %rd1203, %rd1204;
	xor.b64  	%rd1206, %rd1254, %rd1256;
	xor.b64  	%rd1207, %rd1254, %rd1255;
	and.b64  	%rd1208, %rd1207, %rd1206;
	xor.b64  	%rd1209, %rd1208, %rd1254;
	add.s64 	%rd1210, %rd1200, %rd1209;
	add.s64 	%rd1253, %rd1210, %rd1205;
	add.s32 	%r7491, %r7491, 16;
	setp.lt.s32	%p49, %r7491, 80;
	@%p49 bra 	BB3_92;
	bra.uni 	BB3_93;

BB3_2:
	add.u64 	%rd1228, %SP, 112;
	add.u64 	%rd1227, %SP, 96;
	add.u64 	%rd1226, %SP, 80;
	add.u64 	%rd1225, %SP, 64;
	add.u64 	%rd1224, %SP, 48;
	add.u64 	%rd1223, %SP, 32;
	add.u64 	%rd1222, %SP, 16;
	add.u64 	%rd1221, %SP, 0;
	ld.param.u64 	%rd1220, [sha512_update_global_swap_param_0];
	ld.param.u32 	%r7455, [sha512_update_global_swap_param_2];
	// inline asm
	prmt.b32 %r639, %r4, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd2], %r639;
	ld.local.u32 	%r642, [%rd2+4];
	// inline asm
	prmt.b32 %r641, %r642, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd2+4], %r641;
	ld.local.u32 	%r644, [%rd2+8];
	// inline asm
	prmt.b32 %r643, %r644, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd2+8], %r643;
	ld.local.u32 	%r646, [%rd2+12];
	// inline asm
	prmt.b32 %r645, %r646, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd2+12], %r645;
	ld.local.u32 	%r648, [%rd3];
	// inline asm
	prmt.b32 %r647, %r648, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd3], %r647;
	ld.local.u32 	%r650, [%rd3+4];
	// inline asm
	prmt.b32 %r649, %r650, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd3+4], %r649;
	ld.local.u32 	%r652, [%rd3+8];
	// inline asm
	prmt.b32 %r651, %r652, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd3+8], %r651;
	ld.local.u32 	%r654, [%rd3+12];
	// inline asm
	prmt.b32 %r653, %r654, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd3+12], %r653;
	ld.local.u32 	%r656, [%rd4];
	// inline asm
	prmt.b32 %r655, %r656, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd4], %r655;
	ld.local.u32 	%r658, [%rd4+4];
	// inline asm
	prmt.b32 %r657, %r658, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd4+4], %r657;
	ld.local.u32 	%r660, [%rd4+8];
	// inline asm
	prmt.b32 %r659, %r660, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd4+8], %r659;
	ld.local.u32 	%r662, [%rd4+12];
	// inline asm
	prmt.b32 %r661, %r662, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd4+12], %r661;
	ld.local.u32 	%r664, [%rd5];
	// inline asm
	prmt.b32 %r663, %r664, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd5], %r663;
	ld.local.u32 	%r666, [%rd5+4];
	// inline asm
	prmt.b32 %r665, %r666, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd5+4], %r665;
	ld.local.u32 	%r668, [%rd5+8];
	// inline asm
	prmt.b32 %r667, %r668, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd5+8], %r667;
	ld.local.u32 	%r670, [%rd5+12];
	// inline asm
	prmt.b32 %r669, %r670, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd5+12], %r669;
	ld.local.u32 	%r672, [%rd6];
	// inline asm
	prmt.b32 %r671, %r672, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd6], %r671;
	ld.local.u32 	%r674, [%rd6+4];
	// inline asm
	prmt.b32 %r673, %r674, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd6+4], %r673;
	ld.local.u32 	%r676, [%rd6+8];
	// inline asm
	prmt.b32 %r675, %r676, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd6+8], %r675;
	ld.local.u32 	%r678, [%rd6+12];
	// inline asm
	prmt.b32 %r677, %r678, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd6+12], %r677;
	ld.local.u32 	%r680, [%rd7];
	// inline asm
	prmt.b32 %r679, %r680, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd7], %r679;
	ld.local.u32 	%r682, [%rd7+4];
	// inline asm
	prmt.b32 %r681, %r682, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd7+4], %r681;
	ld.local.u32 	%r684, [%rd7+8];
	// inline asm
	prmt.b32 %r683, %r684, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd7+8], %r683;
	ld.local.u32 	%r686, [%rd7+12];
	// inline asm
	prmt.b32 %r685, %r686, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd7+12], %r685;
	ld.local.u32 	%r688, [%rd8];
	// inline asm
	prmt.b32 %r687, %r688, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd8], %r687;
	ld.local.u32 	%r690, [%rd8+4];
	// inline asm
	prmt.b32 %r689, %r690, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd8+4], %r689;
	ld.local.u32 	%r692, [%rd8+8];
	// inline asm
	prmt.b32 %r691, %r692, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd8+8], %r691;
	ld.local.u32 	%r694, [%rd8+12];
	// inline asm
	prmt.b32 %r693, %r694, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd8+12], %r693;
	ld.local.u32 	%r696, [%rd9];
	// inline asm
	prmt.b32 %r695, %r696, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd9], %r695;
	ld.local.u32 	%r698, [%rd9+4];
	// inline asm
	prmt.b32 %r697, %r698, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd9+4], %r697;
	ld.local.u32 	%r700, [%rd9+8];
	// inline asm
	prmt.b32 %r699, %r700, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd9+8], %r699;
	ld.local.u32 	%r702, [%rd9+12];
	// inline asm
	prmt.b32 %r701, %r702, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd9+12], %r701;
	sub.s32 	%r703, %r7455, %r7456;
	// Callseq Start 7
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd1220;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd1221;
	.param .b64 param2;
	st.param.b64	[param2+0], %rd1222;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd1223;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd1224;
	.param .b64 param5;
	st.param.b64	[param5+0], %rd1225;
	.param .b64 param6;
	st.param.b64	[param6+0], %rd1226;
	.param .b64 param7;
	st.param.b64	[param7+0], %rd1227;
	.param .b64 param8;
	st.param.b64	[param8+0], %rd1228;
	.param .b32 param9;
	st.param.b32	[param9+0], %r703;
	call.uni 
	sha512_update_128, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7, 
	param8, 
	param9
	);
	
	//{
	}// Callseq End 7
	ret;
}

	// .globl	m07900_init
.entry m07900_init(
	.param .u64 .ptr .global .align 4 m07900_init_param_0,
	.param .u64 .ptr .global .align 4 m07900_init_param_1,
	.param .u64 .ptr .global .align 4 m07900_init_param_2,
	.param .u64 .ptr .global .align 4 m07900_init_param_3,
	.param .u64 .ptr .global .align 8 m07900_init_param_4,
	.param .u64 .ptr .global .align 1 m07900_init_param_5,
	.param .u64 .ptr .global .align 4 m07900_init_param_6,
	.param .u64 .ptr .global .align 4 m07900_init_param_7,
	.param .u64 .ptr .global .align 4 m07900_init_param_8,
	.param .u64 .ptr .global .align 4 m07900_init_param_9,
	.param .u64 .ptr .global .align 4 m07900_init_param_10,
	.param .u64 .ptr .global .align 4 m07900_init_param_11,
	.param .u64 .ptr .global .align 4 m07900_init_param_12,
	.param .u64 .ptr .global .align 4 m07900_init_param_13,
	.param .u64 .ptr .global .align 4 m07900_init_param_14,
	.param .u64 .ptr .global .align 4 m07900_init_param_15,
	.param .u64 .ptr .global .align 4 m07900_init_param_16,
	.param .u64 .ptr .global .align 4 m07900_init_param_17,
	.param .u64 .ptr .global .align 1 m07900_init_param_18,
	.param .u64 .ptr .global .align 4 m07900_init_param_19,
	.param .u64 .ptr .global .align 4 m07900_init_param_20,
	.param .u64 .ptr .global .align 4 m07900_init_param_21,
	.param .u64 .ptr .global .align 4 m07900_init_param_22,
	.param .u64 .ptr .global .align 4 m07900_init_param_23,
	.param .u32 m07900_init_param_24,
	.param .u32 m07900_init_param_25,
	.param .u32 m07900_init_param_26,
	.param .u32 m07900_init_param_27,
	.param .u32 m07900_init_param_28,
	.param .u32 m07900_init_param_29,
	.param .u32 m07900_init_param_30,
	.param .u32 m07900_init_param_31,
	.param .u32 m07900_init_param_32,
	.param .u32 m07900_init_param_33,
	.param .u64 m07900_init_param_34
)
{
	.local .align 16 .b8 	__local_depot4[336];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<245>;
	.reg .b32 	%r<8769>;
	.reg .b64 	%rd<3460>;


	mov.u64 	%SPL, __local_depot4;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd304, [m07900_init_param_17];
	ld.param.u32 	%r641, [m07900_init_param_27];
	ld.param.u64 	%rd305, [m07900_init_param_34];
	add.u64 	%rd306, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd306;
	add.u64 	%rd307, %SP, 16;
	cvta.to.local.u64 	%rd2, %rd307;
	add.u64 	%rd308, %SP, 32;
	cvta.to.local.u64 	%rd3, %rd308;
	add.u64 	%rd309, %SP, 48;
	cvta.to.local.u64 	%rd4, %rd309;
	add.u64 	%rd310, %SP, 64;
	cvta.to.local.u64 	%rd5, %rd310;
	add.u64 	%rd311, %SP, 80;
	cvta.to.local.u64 	%rd6, %rd311;
	add.u64 	%rd312, %SP, 96;
	cvta.to.local.u64 	%rd7, %rd312;
	add.u64 	%rd313, %SP, 112;
	cvta.to.local.u64 	%rd8, %rd313;
	add.u64 	%rd314, %SP, 128;
	cvta.to.local.u64 	%rd9, %rd314;
	mov.u32 	%r642, %ctaid.x;
	mov.u32 	%r643, %ntid.x;
	mov.b32	%r644, %envreg3;
	mad.lo.s32 	%r645, %r642, %r643, %r644;
	mov.u32 	%r646, %tid.x;
	add.s32 	%r1, %r645, %r646;
	cvt.s64.s32	%rd315, %r1;
	setp.ge.u64	%p1, %rd315, %rd305;
	@%p1 bra 	BB4_330;

	mov.u64 	%rd316, 7640891576956012808;
	st.local.u64 	[%rd9], %rd316;
	add.s64 	%rd10, %rd9, 8;
	mov.u64 	%rd317, -4942790177534073029;
	st.local.u64 	[%rd9+8], %rd317;
	mov.u64 	%rd318, 4354685564936845355;
	st.local.u64 	[%rd9+16], %rd318;
	mov.u64 	%rd319, -6534734903238641935;
	st.local.u64 	[%rd9+24], %rd319;
	mov.u64 	%rd320, 5840696475078001361;
	st.local.u64 	[%rd9+32], %rd320;
	mov.u64 	%rd321, -7276294671716946913;
	st.local.u64 	[%rd9+40], %rd321;
	mov.u64 	%rd322, 2270897969802886507;
	st.local.u64 	[%rd9+48], %rd322;
	mov.u64 	%rd323, 6620516959819538809;
	st.local.u64 	[%rd9+56], %rd323;
	add.s64 	%rd11, %rd9, 64;
	mov.u32 	%r8701, 0;
	st.local.v2.u32 	[%rd9+64], {%r8701, %r8701};
	add.s64 	%rd12, %rd9, 72;
	st.local.v2.u32 	[%rd9+72], {%r8701, %r8701};
	add.s64 	%rd13, %rd9, 80;
	st.local.v2.u32 	[%rd9+80], {%r8701, %r8701};
	add.s64 	%rd14, %rd9, 88;
	st.local.v2.u32 	[%rd9+88], {%r8701, %r8701};
	add.s64 	%rd15, %rd9, 96;
	st.local.v2.u32 	[%rd9+96], {%r8701, %r8701};
	add.s64 	%rd16, %rd9, 104;
	st.local.v2.u32 	[%rd9+104], {%r8701, %r8701};
	add.s64 	%rd17, %rd9, 112;
	st.local.v2.u32 	[%rd9+112], {%r8701, %r8701};
	add.s64 	%rd18, %rd9, 120;
	st.local.v2.u32 	[%rd9+120], {%r8701, %r8701};
	add.s64 	%rd19, %rd9, 128;
	st.local.v2.u32 	[%rd9+128], {%r8701, %r8701};
	add.s64 	%rd20, %rd9, 136;
	st.local.v2.u32 	[%rd9+136], {%r8701, %r8701};
	add.s64 	%rd21, %rd9, 144;
	st.local.v2.u32 	[%rd9+144], {%r8701, %r8701};
	add.s64 	%rd22, %rd9, 152;
	st.local.v2.u32 	[%rd9+152], {%r8701, %r8701};
	add.s64 	%rd23, %rd9, 160;
	st.local.v2.u32 	[%rd9+160], {%r8701, %r8701};
	add.s64 	%rd24, %rd9, 168;
	st.local.v2.u32 	[%rd9+168], {%r8701, %r8701};
	add.s64 	%rd25, %rd9, 176;
	st.local.v2.u32 	[%rd9+176], {%r8701, %r8701};
	add.s64 	%rd26, %rd9, 184;
	st.local.v2.u32 	[%rd9+184], {%r8701, %r8701};
	st.local.u32 	[%rd9+192], %r8701;
	cvt.u64.u32	%rd27, %r641;
	mul.wide.u32 	%rd324, %r641, 564;
	add.s64 	%rd325, %rd304, %rd324;
	ld.global.u32 	%r2, [%rd325+512];
	add.s64 	%rd28, %rd1, 4;
	add.s64 	%rd29, %rd2, 4;
	add.s64 	%rd30, %rd3, 4;
	add.s64 	%rd31, %rd4, 4;
	add.s64 	%rd32, %rd5, 4;
	add.s64 	%rd33, %rd6, 4;
	add.s64 	%rd34, %rd7, 4;
	add.s64 	%rd35, %rd8, 4;
	ld.const.u64 	%rd36, [k_sha512];
	ld.const.u64 	%rd37, [k_sha512+8];
	ld.const.u64 	%rd38, [k_sha512+16];
	ld.const.u64 	%rd39, [k_sha512+24];
	ld.const.u64 	%rd40, [k_sha512+32];
	ld.const.u64 	%rd41, [k_sha512+40];
	ld.const.u64 	%rd42, [k_sha512+48];
	ld.const.u64 	%rd43, [k_sha512+56];
	ld.const.u64 	%rd44, [k_sha512+64];
	ld.const.u64 	%rd45, [k_sha512+72];
	ld.const.u64 	%rd46, [k_sha512+80];
	ld.const.u64 	%rd47, [k_sha512+88];
	ld.const.u64 	%rd48, [k_sha512+96];
	ld.const.u64 	%rd49, [k_sha512+104];
	ld.const.u64 	%rd50, [k_sha512+112];
	ld.const.u64 	%rd51, [k_sha512+120];
	mul.lo.s64 	%rd326, %rd27, 564;
	add.s64 	%rd327, %rd304, %rd326;
	mov.u32 	%r8702, %r8701;
	bra.uni 	BB4_2;

BB4_421:
	add.s64 	%rd3360, %rd243, %rd3444;
	st.local.u64 	[%rd9], %rd3360;
	add.s64 	%rd3361, %rd245, %rd3445;
	st.local.u64 	[%rd10], %rd3361;
	add.s64 	%rd3362, %rd244, %rd3446;
	st.local.u64 	[%rd10+8], %rd3362;
	add.s64 	%rd3363, %rd242, %rd3447;
	st.local.u64 	[%rd10+16], %rd3363;
	add.s64 	%rd3364, %rd238, %rd3448;
	st.local.u64 	[%rd10+24], %rd3364;
	add.s64 	%rd3365, %rd240, %rd3449;
	st.local.u64 	[%rd10+32], %rd3365;
	add.s64 	%rd3366, %rd239, %rd3450;
	st.local.u64 	[%rd10+40], %rd3366;
	add.s64 	%rd3367, %rd241, %rd3451;
	st.local.u64 	[%rd10+48], %rd3367;
	st.local.u32 	[%rd10+56], %r8739;
	st.local.u32 	[%rd10+64], %r8737;
	st.local.u32 	[%rd10+72], %r8743;
	st.local.u32 	[%rd10+80], %r8741;
	st.local.u32 	[%rd10+88], %r8747;
	st.local.u32 	[%rd10+96], %r8745;
	st.local.u32 	[%rd10+104], %r8751;
	st.local.u32 	[%rd10+112], %r8749;
	st.local.u32 	[%rd10+120], %r8755;
	st.local.u32 	[%rd10+128], %r8753;
	st.local.u32 	[%rd10+136], %r8759;
	st.local.u32 	[%rd10+144], %r8757;
	st.local.u32 	[%rd10+152], %r8763;
	st.local.u32 	[%rd10+160], %r8761;
	st.local.u32 	[%rd10+168], %r8767;
	st.local.u32 	[%rd10+176], %r8765;
	st.local.u32 	[%rd11+4], %r8738;
	st.local.u32 	[%rd12+4], %r8736;
	st.local.u32 	[%rd13+4], %r8742;
	st.local.u32 	[%rd14+4], %r8740;
	st.local.u32 	[%rd15+4], %r8746;
	st.local.u32 	[%rd16+4], %r8744;
	st.local.u32 	[%rd17+4], %r8750;
	st.local.u32 	[%rd18+4], %r8748;
	st.local.u32 	[%rd19+4], %r8754;
	st.local.u32 	[%rd20+4], %r8752;
	st.local.u32 	[%rd21+4], %r8758;
	st.local.u32 	[%rd22+4], %r8756;
	st.local.u32 	[%rd23+4], %r8762;
	st.local.u32 	[%rd24+4], %r8760;
	st.local.u32 	[%rd25+4], %r8766;
	st.local.u32 	[%rd26+4], %r8764;
	add.s32 	%r8701, %r8701, 128;
	add.s32 	%r8702, %r8702, 32;

BB4_2:
	add.s32 	%r649, %r2, -128;
	setp.lt.s32	%p2, %r8701, %r649;
	mul.wide.s32 	%rd328, %r8702, 4;
	add.s64 	%rd329, %rd327, %rd328;
	ld.global.u32 	%r5, [%rd329];
	st.local.u32 	[%rd1], %r5;
	add.s32 	%r650, %r8702, 1;
	mul.wide.s32 	%rd330, %r650, 4;
	add.s64 	%rd331, %rd327, %rd330;
	ld.global.u32 	%r651, [%rd331];
	st.local.u32 	[%rd28], %r651;
	add.s32 	%r652, %r8702, 2;
	mul.wide.s32 	%rd332, %r652, 4;
	add.s64 	%rd333, %rd327, %rd332;
	ld.global.u32 	%r653, [%rd333];
	st.local.u32 	[%rd28+4], %r653;
	add.s32 	%r654, %r8702, 3;
	mul.wide.s32 	%rd334, %r654, 4;
	add.s64 	%rd335, %rd327, %rd334;
	ld.global.u32 	%r655, [%rd335];
	st.local.u32 	[%rd28+8], %r655;
	add.s32 	%r656, %r8702, 4;
	mul.wide.s32 	%rd336, %r656, 4;
	add.s64 	%rd337, %rd327, %rd336;
	ld.global.u32 	%r657, [%rd337];
	st.local.u32 	[%rd2], %r657;
	add.s32 	%r658, %r8702, 5;
	mul.wide.s32 	%rd338, %r658, 4;
	add.s64 	%rd339, %rd327, %rd338;
	ld.global.u32 	%r659, [%rd339];
	st.local.u32 	[%rd29], %r659;
	add.s32 	%r660, %r8702, 6;
	mul.wide.s32 	%rd340, %r660, 4;
	add.s64 	%rd341, %rd327, %rd340;
	ld.global.u32 	%r661, [%rd341];
	st.local.u32 	[%rd29+4], %r661;
	add.s32 	%r662, %r8702, 7;
	mul.wide.s32 	%rd342, %r662, 4;
	add.s64 	%rd343, %rd327, %rd342;
	ld.global.u32 	%r663, [%rd343];
	st.local.u32 	[%rd29+8], %r663;
	add.s32 	%r664, %r8702, 8;
	mul.wide.s32 	%rd344, %r664, 4;
	add.s64 	%rd345, %rd327, %rd344;
	ld.global.u32 	%r665, [%rd345];
	st.local.u32 	[%rd3], %r665;
	add.s32 	%r666, %r8702, 9;
	mul.wide.s32 	%rd346, %r666, 4;
	add.s64 	%rd347, %rd327, %rd346;
	ld.global.u32 	%r667, [%rd347];
	st.local.u32 	[%rd30], %r667;
	add.s32 	%r668, %r8702, 10;
	mul.wide.s32 	%rd348, %r668, 4;
	add.s64 	%rd349, %rd327, %rd348;
	ld.global.u32 	%r669, [%rd349];
	st.local.u32 	[%rd30+4], %r669;
	add.s32 	%r670, %r8702, 11;
	mul.wide.s32 	%rd350, %r670, 4;
	add.s64 	%rd351, %rd327, %rd350;
	ld.global.u32 	%r671, [%rd351];
	st.local.u32 	[%rd30+8], %r671;
	add.s32 	%r672, %r8702, 12;
	mul.wide.s32 	%rd352, %r672, 4;
	add.s64 	%rd353, %rd327, %rd352;
	ld.global.u32 	%r673, [%rd353];
	st.local.u32 	[%rd4], %r673;
	add.s32 	%r674, %r8702, 13;
	mul.wide.s32 	%rd354, %r674, 4;
	add.s64 	%rd355, %rd327, %rd354;
	ld.global.u32 	%r675, [%rd355];
	st.local.u32 	[%rd31], %r675;
	add.s32 	%r676, %r8702, 14;
	mul.wide.s32 	%rd356, %r676, 4;
	add.s64 	%rd357, %rd327, %rd356;
	ld.global.u32 	%r677, [%rd357];
	st.local.u32 	[%rd31+4], %r677;
	add.s32 	%r678, %r8702, 15;
	mul.wide.s32 	%rd358, %r678, 4;
	add.s64 	%rd359, %rd327, %rd358;
	ld.global.u32 	%r679, [%rd359];
	st.local.u32 	[%rd31+8], %r679;
	add.s32 	%r680, %r8702, 16;
	mul.wide.s32 	%rd360, %r680, 4;
	add.s64 	%rd361, %rd327, %rd360;
	ld.global.u32 	%r681, [%rd361];
	st.local.u32 	[%rd5], %r681;
	add.s32 	%r682, %r8702, 17;
	mul.wide.s32 	%rd362, %r682, 4;
	add.s64 	%rd363, %rd327, %rd362;
	ld.global.u32 	%r683, [%rd363];
	st.local.u32 	[%rd32], %r683;
	add.s32 	%r684, %r8702, 18;
	mul.wide.s32 	%rd364, %r684, 4;
	add.s64 	%rd365, %rd327, %rd364;
	ld.global.u32 	%r685, [%rd365];
	st.local.u32 	[%rd32+4], %r685;
	add.s32 	%r686, %r8702, 19;
	mul.wide.s32 	%rd366, %r686, 4;
	add.s64 	%rd367, %rd327, %rd366;
	ld.global.u32 	%r687, [%rd367];
	st.local.u32 	[%rd32+8], %r687;
	add.s32 	%r688, %r8702, 20;
	mul.wide.s32 	%rd368, %r688, 4;
	add.s64 	%rd369, %rd327, %rd368;
	ld.global.u32 	%r689, [%rd369];
	st.local.u32 	[%rd6], %r689;
	add.s32 	%r690, %r8702, 21;
	mul.wide.s32 	%rd370, %r690, 4;
	add.s64 	%rd371, %rd327, %rd370;
	ld.global.u32 	%r691, [%rd371];
	st.local.u32 	[%rd33], %r691;
	add.s32 	%r692, %r8702, 22;
	mul.wide.s32 	%rd372, %r692, 4;
	add.s64 	%rd373, %rd327, %rd372;
	ld.global.u32 	%r693, [%rd373];
	st.local.u32 	[%rd33+4], %r693;
	add.s32 	%r694, %r8702, 23;
	mul.wide.s32 	%rd374, %r694, 4;
	add.s64 	%rd375, %rd327, %rd374;
	ld.global.u32 	%r695, [%rd375];
	st.local.u32 	[%rd33+8], %r695;
	add.s32 	%r696, %r8702, 24;
	mul.wide.s32 	%rd376, %r696, 4;
	add.s64 	%rd377, %rd327, %rd376;
	ld.global.u32 	%r697, [%rd377];
	st.local.u32 	[%rd7], %r697;
	add.s32 	%r698, %r8702, 25;
	mul.wide.s32 	%rd378, %r698, 4;
	add.s64 	%rd379, %rd327, %rd378;
	ld.global.u32 	%r699, [%rd379];
	st.local.u32 	[%rd34], %r699;
	add.s32 	%r700, %r8702, 26;
	mul.wide.s32 	%rd380, %r700, 4;
	add.s64 	%rd381, %rd327, %rd380;
	ld.global.u32 	%r701, [%rd381];
	st.local.u32 	[%rd34+4], %r701;
	add.s32 	%r702, %r8702, 27;
	mul.wide.s32 	%rd382, %r702, 4;
	add.s64 	%rd383, %rd327, %rd382;
	ld.global.u32 	%r703, [%rd383];
	st.local.u32 	[%rd34+8], %r703;
	add.s32 	%r704, %r8702, 28;
	mul.wide.s32 	%rd384, %r704, 4;
	add.s64 	%rd385, %rd327, %rd384;
	ld.global.u32 	%r705, [%rd385];
	st.local.u32 	[%rd8], %r705;
	add.s32 	%r706, %r8702, 29;
	mul.wide.s32 	%rd386, %r706, 4;
	add.s64 	%rd387, %rd327, %rd386;
	ld.global.u32 	%r707, [%rd387];
	st.local.u32 	[%rd35], %r707;
	add.s32 	%r708, %r8702, 30;
	mul.wide.s32 	%rd388, %r708, 4;
	add.s64 	%rd389, %rd327, %rd388;
	ld.global.u32 	%r709, [%rd389];
	st.local.u32 	[%rd35+4], %r709;
	add.s32 	%r710, %r8702, 31;
	mul.wide.s32 	%rd390, %r710, 4;
	add.s64 	%rd391, %rd327, %rd390;
	ld.global.u32 	%r711, [%rd391];
	st.local.u32 	[%rd35+8], %r711;
	@%p2 bra 	BB4_331;
	bra.uni 	BB4_3;

BB4_331:
	// inline asm
	prmt.b32 %r2510, %r5, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd1], %r2510;
	ld.local.u32 	%r2513, [%rd28];
	// inline asm
	prmt.b32 %r2512, %r2513, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd28], %r2512;
	ld.local.u32 	%r2515, [%rd28+4];
	// inline asm
	prmt.b32 %r2514, %r2515, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd28+4], %r2514;
	ld.local.u32 	%r2517, [%rd28+8];
	// inline asm
	prmt.b32 %r2516, %r2517, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd28+8], %r2516;
	ld.local.u32 	%r2519, [%rd2];
	// inline asm
	prmt.b32 %r2518, %r2519, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd2], %r2518;
	ld.local.u32 	%r2521, [%rd29];
	// inline asm
	prmt.b32 %r2520, %r2521, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd29], %r2520;
	ld.local.u32 	%r2523, [%rd29+4];
	// inline asm
	prmt.b32 %r2522, %r2523, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd29+4], %r2522;
	ld.local.u32 	%r2525, [%rd29+8];
	// inline asm
	prmt.b32 %r2524, %r2525, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd29+8], %r2524;
	ld.local.u32 	%r2527, [%rd3];
	// inline asm
	prmt.b32 %r2526, %r2527, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd3], %r2526;
	ld.local.u32 	%r2529, [%rd30];
	// inline asm
	prmt.b32 %r2528, %r2529, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd30], %r2528;
	ld.local.u32 	%r2531, [%rd30+4];
	// inline asm
	prmt.b32 %r2530, %r2531, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd30+4], %r2530;
	ld.local.u32 	%r2533, [%rd30+8];
	// inline asm
	prmt.b32 %r2532, %r2533, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd30+8], %r2532;
	ld.local.u32 	%r2535, [%rd4];
	// inline asm
	prmt.b32 %r2534, %r2535, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd4], %r2534;
	ld.local.u32 	%r2537, [%rd31];
	// inline asm
	prmt.b32 %r2536, %r2537, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd31], %r2536;
	ld.local.u32 	%r2539, [%rd31+4];
	// inline asm
	prmt.b32 %r2538, %r2539, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd31+4], %r2538;
	ld.local.u32 	%r2541, [%rd31+8];
	// inline asm
	prmt.b32 %r2540, %r2541, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd31+8], %r2540;
	ld.local.u32 	%r2543, [%rd5];
	// inline asm
	prmt.b32 %r2542, %r2543, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd5], %r2542;
	ld.local.u32 	%r2545, [%rd32];
	// inline asm
	prmt.b32 %r2544, %r2545, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd32], %r2544;
	ld.local.u32 	%r2547, [%rd32+4];
	// inline asm
	prmt.b32 %r2546, %r2547, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd32+4], %r2546;
	ld.local.u32 	%r2549, [%rd32+8];
	// inline asm
	prmt.b32 %r2548, %r2549, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd32+8], %r2548;
	ld.local.u32 	%r2551, [%rd6];
	// inline asm
	prmt.b32 %r2550, %r2551, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd6], %r2550;
	ld.local.u32 	%r2553, [%rd33];
	// inline asm
	prmt.b32 %r2552, %r2553, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd33], %r2552;
	ld.local.u32 	%r2555, [%rd33+4];
	// inline asm
	prmt.b32 %r2554, %r2555, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd33+4], %r2554;
	ld.local.u32 	%r2557, [%rd33+8];
	// inline asm
	prmt.b32 %r2556, %r2557, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd33+8], %r2556;
	ld.local.u32 	%r2559, [%rd7];
	// inline asm
	prmt.b32 %r2558, %r2559, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd7], %r2558;
	ld.local.u32 	%r2561, [%rd34];
	// inline asm
	prmt.b32 %r2560, %r2561, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd34], %r2560;
	ld.local.u32 	%r2563, [%rd34+4];
	// inline asm
	prmt.b32 %r2562, %r2563, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd34+4], %r2562;
	ld.local.u32 	%r2565, [%rd34+8];
	// inline asm
	prmt.b32 %r2564, %r2565, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd34+8], %r2564;
	ld.local.u32 	%r2567, [%rd8];
	// inline asm
	prmt.b32 %r2566, %r2567, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd8], %r2566;
	ld.local.u32 	%r2569, [%rd35];
	// inline asm
	prmt.b32 %r2568, %r2569, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd35], %r2568;
	ld.local.u32 	%r2571, [%rd35+4];
	// inline asm
	prmt.b32 %r2570, %r2571, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd35+4], %r2570;
	ld.local.u32 	%r2573, [%rd35+8];
	// inline asm
	prmt.b32 %r2572, %r2573, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd35+8], %r2572;
	ld.local.u32 	%r2575, [%rd10+184];
	add.s32 	%r2576, %r2575, 128;
	st.local.u32 	[%rd10+184], %r2576;
	bfe.u32 	%r2574, %r2575, 2, 5;
	and.b32  	%r2577, %r2575, 3;
	shl.b32 	%r2578, %r2577, 2;
	mov.u32 	%r2579, 1985229328;
	shr.u32 	%r2580, %r2579, %r2578;
	and.b32  	%r73, %r2580, 65535;
	setp.gt.s32	%p197, %r2574, 15;
	@%p197 bra 	BB4_364;

	setp.gt.s32	%p221, %r2574, 7;
	@%p221 bra 	BB4_349;

	setp.gt.s32	%p233, %r2574, 3;
	@%p233 bra 	BB4_342;

	setp.gt.s32	%p239, %r2574, 1;
	@%p239 bra 	BB4_338;

	setp.eq.s32	%p242, %r2574, 0;
	@%p242 bra 	BB4_416;
	bra.uni 	BB4_336;

BB4_416:
	mov.u32 	%r8736, 0;
	// inline asm
	prmt.b32 %r8739, %r8736, %r2572, %r73;
	// inline asm
	ld.local.v2.u32 	{%r7828, %r7829}, [%rd35+4];
	// inline asm
	prmt.b32 %r7669, %r7829, %r7828, %r73;
	// inline asm
	st.local.u32 	[%rd35+8], %r7669;
	ld.local.u32 	%r7674, [%rd35+4];
	ld.local.u32 	%r7675, [%rd35];
	// inline asm
	prmt.b32 %r7673, %r7674, %r7675, %r73;
	// inline asm
	st.local.u32 	[%rd35+4], %r7673;
	ld.local.u32 	%r7678, [%rd35];
	ld.local.u32 	%r7679, [%rd8];
	// inline asm
	prmt.b32 %r7677, %r7678, %r7679, %r73;
	// inline asm
	st.local.u32 	[%rd35], %r7677;
	ld.local.u32 	%r7682, [%rd8];
	ld.local.u32 	%r7683, [%rd34+8];
	// inline asm
	prmt.b32 %r7681, %r7682, %r7683, %r73;
	// inline asm
	st.local.u32 	[%rd8], %r7681;
	ld.local.v2.u32 	{%r7830, %r7831}, [%rd34+4];
	// inline asm
	prmt.b32 %r7685, %r7831, %r7830, %r73;
	// inline asm
	st.local.u32 	[%rd34+8], %r7685;
	ld.local.u32 	%r7690, [%rd34+4];
	ld.local.u32 	%r7691, [%rd34];
	// inline asm
	prmt.b32 %r7689, %r7690, %r7691, %r73;
	// inline asm
	st.local.u32 	[%rd34+4], %r7689;
	ld.local.u32 	%r7694, [%rd34];
	ld.local.u32 	%r7695, [%rd7];
	// inline asm
	prmt.b32 %r7693, %r7694, %r7695, %r73;
	// inline asm
	st.local.u32 	[%rd34], %r7693;
	ld.local.u32 	%r7698, [%rd7];
	ld.local.u32 	%r7699, [%rd33+8];
	// inline asm
	prmt.b32 %r7697, %r7698, %r7699, %r73;
	// inline asm
	st.local.u32 	[%rd7], %r7697;
	ld.local.v2.u32 	{%r7832, %r7833}, [%rd33+4];
	// inline asm
	prmt.b32 %r7701, %r7833, %r7832, %r73;
	// inline asm
	st.local.u32 	[%rd33+8], %r7701;
	ld.local.u32 	%r7706, [%rd33+4];
	ld.local.u32 	%r7707, [%rd33];
	// inline asm
	prmt.b32 %r7705, %r7706, %r7707, %r73;
	// inline asm
	st.local.u32 	[%rd33+4], %r7705;
	ld.local.u32 	%r7710, [%rd33];
	ld.local.u32 	%r7711, [%rd6];
	// inline asm
	prmt.b32 %r7709, %r7710, %r7711, %r73;
	// inline asm
	st.local.u32 	[%rd33], %r7709;
	ld.local.u32 	%r7714, [%rd6];
	ld.local.u32 	%r7715, [%rd32+8];
	// inline asm
	prmt.b32 %r7713, %r7714, %r7715, %r73;
	// inline asm
	st.local.u32 	[%rd6], %r7713;
	ld.local.v2.u32 	{%r7834, %r7835}, [%rd32+4];
	// inline asm
	prmt.b32 %r7717, %r7835, %r7834, %r73;
	// inline asm
	st.local.u32 	[%rd32+8], %r7717;
	ld.local.u32 	%r7722, [%rd32+4];
	ld.local.u32 	%r7723, [%rd32];
	// inline asm
	prmt.b32 %r7721, %r7722, %r7723, %r73;
	// inline asm
	st.local.u32 	[%rd32+4], %r7721;
	ld.local.u32 	%r7726, [%rd32];
	ld.local.u32 	%r7727, [%rd5];
	// inline asm
	prmt.b32 %r7725, %r7726, %r7727, %r73;
	// inline asm
	st.local.u32 	[%rd32], %r7725;
	ld.local.u32 	%r7730, [%rd5];
	ld.local.u32 	%r7731, [%rd31+8];
	// inline asm
	prmt.b32 %r7729, %r7730, %r7731, %r73;
	// inline asm
	st.local.u32 	[%rd5], %r7729;
	ld.local.v2.u32 	{%r7836, %r7837}, [%rd31+4];
	// inline asm
	prmt.b32 %r7733, %r7837, %r7836, %r73;
	// inline asm
	st.local.u32 	[%rd31+8], %r7733;
	ld.local.u32 	%r7738, [%rd31+4];
	ld.local.u32 	%r7739, [%rd31];
	// inline asm
	prmt.b32 %r7737, %r7738, %r7739, %r73;
	// inline asm
	st.local.u32 	[%rd31+4], %r7737;
	ld.local.u32 	%r7742, [%rd31];
	ld.local.u32 	%r7743, [%rd4];
	// inline asm
	prmt.b32 %r7741, %r7742, %r7743, %r73;
	// inline asm
	st.local.u32 	[%rd31], %r7741;
	ld.local.u32 	%r7746, [%rd4];
	ld.local.u32 	%r7747, [%rd30+8];
	// inline asm
	prmt.b32 %r7745, %r7746, %r7747, %r73;
	// inline asm
	st.local.u32 	[%rd4], %r7745;
	ld.local.v2.u32 	{%r7838, %r7839}, [%rd30+4];
	// inline asm
	prmt.b32 %r7749, %r7839, %r7838, %r73;
	// inline asm
	st.local.u32 	[%rd30+8], %r7749;
	ld.local.u32 	%r7754, [%rd30+4];
	ld.local.u32 	%r7755, [%rd30];
	// inline asm
	prmt.b32 %r7753, %r7754, %r7755, %r73;
	// inline asm
	st.local.u32 	[%rd30+4], %r7753;
	ld.local.u32 	%r7758, [%rd30];
	ld.local.u32 	%r7759, [%rd3];
	// inline asm
	prmt.b32 %r7757, %r7758, %r7759, %r73;
	// inline asm
	st.local.u32 	[%rd30], %r7757;
	ld.local.u32 	%r7762, [%rd3];
	ld.local.u32 	%r7763, [%rd29+8];
	// inline asm
	prmt.b32 %r7761, %r7762, %r7763, %r73;
	// inline asm
	st.local.u32 	[%rd3], %r7761;
	ld.local.v2.u32 	{%r7840, %r7841}, [%rd29+4];
	// inline asm
	prmt.b32 %r7765, %r7841, %r7840, %r73;
	// inline asm
	st.local.u32 	[%rd29+8], %r7765;
	ld.local.u32 	%r7770, [%rd29+4];
	ld.local.u32 	%r7771, [%rd29];
	// inline asm
	prmt.b32 %r7769, %r7770, %r7771, %r73;
	// inline asm
	st.local.u32 	[%rd29+4], %r7769;
	ld.local.u32 	%r7774, [%rd29];
	ld.local.u32 	%r7775, [%rd2];
	// inline asm
	prmt.b32 %r7773, %r7774, %r7775, %r73;
	// inline asm
	st.local.u32 	[%rd29], %r7773;
	ld.local.u32 	%r7778, [%rd2];
	ld.local.u32 	%r7779, [%rd28+8];
	// inline asm
	prmt.b32 %r7777, %r7778, %r7779, %r73;
	// inline asm
	st.local.u32 	[%rd2], %r7777;
	ld.local.v2.u32 	{%r7842, %r7843}, [%rd28+4];
	// inline asm
	prmt.b32 %r7781, %r7843, %r7842, %r73;
	// inline asm
	st.local.u32 	[%rd28+8], %r7781;
	ld.local.u32 	%r7786, [%rd28+4];
	ld.local.u32 	%r7787, [%rd28];
	// inline asm
	prmt.b32 %r7785, %r7786, %r7787, %r73;
	// inline asm
	st.local.u32 	[%rd28+4], %r7785;
	ld.local.u32 	%r7790, [%rd28];
	ld.local.u32 	%r7791, [%rd1];
	// inline asm
	prmt.b32 %r7789, %r7790, %r7791, %r73;
	// inline asm
	st.local.u32 	[%rd28], %r7789;
	ld.local.u32 	%r7794, [%rd1];
	// inline asm
	prmt.b32 %r8735, %r7794, %r8736, %r73;
	// inline asm
	st.local.u32 	[%rd1], %r8735;
	mov.u32 	%r8737, %r8736;
	mov.u32 	%r8738, %r8736;
	bra.uni 	BB4_418;

BB4_364:
	setp.gt.s32	%p198, %r2574, 23;
	@%p198 bra 	BB4_380;

	setp.gt.s32	%p210, %r2574, 19;
	@%p210 bra 	BB4_373;

	setp.gt.s32	%p216, %r2574, 17;
	@%p216 bra 	BB4_370;

	setp.eq.s32	%p219, %r2574, 16;
	@%p219 bra 	BB4_402;
	bra.uni 	BB4_368;

BB4_402:
	mov.u32 	%r8735, 0;
	// inline asm
	prmt.b32 %r8755, %r8735, %r2572, %r73;
	// inline asm
	ld.local.v2.u32 	{%r5069, %r5070}, [%rd35+4];
	// inline asm
	prmt.b32 %r8748, %r5070, %r5069, %r73;
	// inline asm
	ld.local.u32 	%r4930, [%rd35+4];
	ld.local.u32 	%r4931, [%rd35];
	// inline asm
	prmt.b32 %r8749, %r4930, %r4931, %r73;
	// inline asm
	ld.local.u32 	%r4934, [%rd35];
	ld.local.u32 	%r4935, [%rd8];
	// inline asm
	prmt.b32 %r8750, %r4934, %r4935, %r73;
	// inline asm
	ld.local.u32 	%r4938, [%rd8];
	ld.local.u32 	%r4939, [%rd34+8];
	// inline asm
	prmt.b32 %r8751, %r4938, %r4939, %r73;
	// inline asm
	ld.local.v2.u32 	{%r5071, %r5072}, [%rd34+4];
	// inline asm
	prmt.b32 %r8744, %r5072, %r5071, %r73;
	// inline asm
	ld.local.u32 	%r4946, [%rd34+4];
	ld.local.u32 	%r4947, [%rd34];
	// inline asm
	prmt.b32 %r8745, %r4946, %r4947, %r73;
	// inline asm
	ld.local.u32 	%r4950, [%rd34];
	ld.local.u32 	%r4951, [%rd7];
	// inline asm
	prmt.b32 %r8746, %r4950, %r4951, %r73;
	// inline asm
	ld.local.u32 	%r4954, [%rd7];
	ld.local.u32 	%r4955, [%rd33+8];
	// inline asm
	prmt.b32 %r8747, %r4954, %r4955, %r73;
	// inline asm
	ld.local.v2.u32 	{%r5073, %r5074}, [%rd33+4];
	// inline asm
	prmt.b32 %r8740, %r5074, %r5073, %r73;
	// inline asm
	ld.local.u32 	%r4962, [%rd33+4];
	ld.local.u32 	%r4963, [%rd33];
	// inline asm
	prmt.b32 %r8741, %r4962, %r4963, %r73;
	// inline asm
	ld.local.u32 	%r4966, [%rd33];
	ld.local.u32 	%r4967, [%rd6];
	// inline asm
	prmt.b32 %r8742, %r4966, %r4967, %r73;
	// inline asm
	ld.local.u32 	%r4970, [%rd6];
	ld.local.u32 	%r4971, [%rd32+8];
	// inline asm
	prmt.b32 %r8743, %r4970, %r4971, %r73;
	// inline asm
	ld.local.v2.u32 	{%r5075, %r5076}, [%rd32+4];
	// inline asm
	prmt.b32 %r8736, %r5076, %r5075, %r73;
	// inline asm
	ld.local.u32 	%r4978, [%rd32+4];
	ld.local.u32 	%r4979, [%rd32];
	// inline asm
	prmt.b32 %r8737, %r4978, %r4979, %r73;
	// inline asm
	ld.local.u32 	%r4982, [%rd32];
	ld.local.u32 	%r4983, [%rd5];
	// inline asm
	prmt.b32 %r8738, %r4982, %r4983, %r73;
	// inline asm
	ld.local.u32 	%r4986, [%rd5];
	ld.local.u32 	%r4987, [%rd31+8];
	// inline asm
	prmt.b32 %r8739, %r4986, %r4987, %r73;
	// inline asm
	ld.local.v2.u32 	{%r5077, %r5078}, [%rd31+4];
	// inline asm
	prmt.b32 %r4989, %r5078, %r5077, %r73;
	// inline asm
	st.local.u32 	[%rd35+8], %r4989;
	ld.local.u32 	%r4994, [%rd31+4];
	ld.local.u32 	%r4995, [%rd31];
	// inline asm
	prmt.b32 %r4993, %r4994, %r4995, %r73;
	// inline asm
	st.local.u32 	[%rd35+4], %r4993;
	ld.local.u32 	%r4998, [%rd31];
	ld.local.u32 	%r4999, [%rd4];
	// inline asm
	prmt.b32 %r4997, %r4998, %r4999, %r73;
	// inline asm
	st.local.u32 	[%rd35], %r4997;
	ld.local.u32 	%r5002, [%rd4];
	ld.local.u32 	%r5003, [%rd30+8];
	// inline asm
	prmt.b32 %r5001, %r5002, %r5003, %r73;
	// inline asm
	st.local.u32 	[%rd8], %r5001;
	ld.local.v2.u32 	{%r5079, %r5080}, [%rd30+4];
	// inline asm
	prmt.b32 %r5005, %r5080, %r5079, %r73;
	// inline asm
	st.local.u32 	[%rd34+8], %r5005;
	ld.local.u32 	%r5010, [%rd30+4];
	ld.local.u32 	%r5011, [%rd30];
	// inline asm
	prmt.b32 %r5009, %r5010, %r5011, %r73;
	// inline asm
	st.local.u32 	[%rd34+4], %r5009;
	ld.local.u32 	%r5014, [%rd30];
	ld.local.u32 	%r5015, [%rd3];
	// inline asm
	prmt.b32 %r5013, %r5014, %r5015, %r73;
	// inline asm
	st.local.u32 	[%rd34], %r5013;
	ld.local.u32 	%r5018, [%rd3];
	ld.local.u32 	%r5019, [%rd29+8];
	// inline asm
	prmt.b32 %r5017, %r5018, %r5019, %r73;
	// inline asm
	st.local.u32 	[%rd7], %r5017;
	ld.local.v2.u32 	{%r5081, %r5082}, [%rd29+4];
	// inline asm
	prmt.b32 %r5021, %r5082, %r5081, %r73;
	// inline asm
	st.local.u32 	[%rd33+8], %r5021;
	ld.local.u32 	%r5026, [%rd29+4];
	ld.local.u32 	%r5027, [%rd29];
	// inline asm
	prmt.b32 %r5025, %r5026, %r5027, %r73;
	// inline asm
	st.local.u32 	[%rd33+4], %r5025;
	ld.local.u32 	%r5030, [%rd29];
	ld.local.u32 	%r5031, [%rd2];
	// inline asm
	prmt.b32 %r5029, %r5030, %r5031, %r73;
	// inline asm
	st.local.u32 	[%rd33], %r5029;
	ld.local.u32 	%r5034, [%rd2];
	ld.local.u32 	%r5035, [%rd28+8];
	// inline asm
	prmt.b32 %r5033, %r5034, %r5035, %r73;
	// inline asm
	st.local.u32 	[%rd6], %r5033;
	ld.local.v2.u32 	{%r5083, %r5084}, [%rd28+4];
	// inline asm
	prmt.b32 %r5037, %r5084, %r5083, %r73;
	// inline asm
	st.local.u32 	[%rd32+8], %r5037;
	ld.local.u32 	%r5042, [%rd28+4];
	ld.local.u32 	%r5043, [%rd28];
	// inline asm
	prmt.b32 %r5041, %r5042, %r5043, %r73;
	// inline asm
	st.local.u32 	[%rd32+4], %r5041;
	ld.local.u32 	%r5046, [%rd28];
	ld.local.u32 	%r5047, [%rd1];
	// inline asm
	prmt.b32 %r5045, %r5046, %r5047, %r73;
	// inline asm
	st.local.u32 	[%rd32], %r5045;
	ld.local.u32 	%r5050, [%rd1];
	// inline asm
	prmt.b32 %r5049, %r5050, %r8735, %r73;
	// inline asm
	st.local.u32 	[%rd5], %r5049;
	st.local.v2.u32 	[%rd31+4], {%r8735, %r8735};
	st.local.u32 	[%rd31], %r8735;
	st.local.u32 	[%rd4], %r8735;
	st.local.v2.u32 	[%rd30+4], {%r8735, %r8735};
	st.local.u32 	[%rd30], %r8735;
	st.local.u32 	[%rd3], %r8735;
	st.local.v2.u32 	[%rd29+4], {%r8735, %r8735};
	st.local.u32 	[%rd29], %r8735;
	st.local.u32 	[%rd2], %r8735;
	st.local.v2.u32 	[%rd28+4], {%r8735, %r8735};
	st.local.u32 	[%rd28], %r8735;
	st.local.u32 	[%rd1], %r8735;
	mov.u32 	%r8752, %r8735;
	mov.u32 	%r8753, %r8735;
	mov.u32 	%r8754, %r8735;
	bra.uni 	BB4_412;

BB4_349:
	setp.gt.s32	%p222, %r2574, 11;
	@%p222 bra 	BB4_357;

	setp.gt.s32	%p228, %r2574, 9;
	@%p228 bra 	BB4_354;

	setp.eq.s32	%p231, %r2574, 8;
	@%p231 bra 	BB4_406;
	bra.uni 	BB4_352;

BB4_406:
	mov.u32 	%r8735, 0;
	// inline asm
	prmt.b32 %r8747, %r8735, %r2572, %r73;
	// inline asm
	ld.local.v2.u32 	{%r6417, %r6418}, [%rd35+4];
	// inline asm
	prmt.b32 %r8740, %r6418, %r6417, %r73;
	// inline asm
	ld.local.u32 	%r6270, [%rd35+4];
	ld.local.u32 	%r6271, [%rd35];
	// inline asm
	prmt.b32 %r8741, %r6270, %r6271, %r73;
	// inline asm
	ld.local.u32 	%r6274, [%rd35];
	ld.local.u32 	%r6275, [%rd8];
	// inline asm
	prmt.b32 %r8742, %r6274, %r6275, %r73;
	// inline asm
	ld.local.u32 	%r6278, [%rd8];
	ld.local.u32 	%r6279, [%rd34+8];
	// inline asm
	prmt.b32 %r8743, %r6278, %r6279, %r73;
	// inline asm
	ld.local.v2.u32 	{%r6419, %r6420}, [%rd34+4];
	// inline asm
	prmt.b32 %r8736, %r6420, %r6419, %r73;
	// inline asm
	ld.local.u32 	%r6286, [%rd34+4];
	ld.local.u32 	%r6287, [%rd34];
	// inline asm
	prmt.b32 %r8737, %r6286, %r6287, %r73;
	// inline asm
	ld.local.u32 	%r6290, [%rd34];
	ld.local.u32 	%r6291, [%rd7];
	// inline asm
	prmt.b32 %r8738, %r6290, %r6291, %r73;
	// inline asm
	ld.local.u32 	%r6294, [%rd7];
	ld.local.u32 	%r6295, [%rd33+8];
	// inline asm
	prmt.b32 %r8739, %r6294, %r6295, %r73;
	// inline asm
	ld.local.v2.u32 	{%r6421, %r6422}, [%rd33+4];
	// inline asm
	prmt.b32 %r6297, %r6422, %r6421, %r73;
	// inline asm
	st.local.u32 	[%rd35+8], %r6297;
	ld.local.u32 	%r6302, [%rd33+4];
	ld.local.u32 	%r6303, [%rd33];
	// inline asm
	prmt.b32 %r6301, %r6302, %r6303, %r73;
	// inline asm
	st.local.u32 	[%rd35+4], %r6301;
	ld.local.u32 	%r6306, [%rd33];
	ld.local.u32 	%r6307, [%rd6];
	// inline asm
	prmt.b32 %r6305, %r6306, %r6307, %r73;
	// inline asm
	st.local.u32 	[%rd35], %r6305;
	ld.local.u32 	%r6310, [%rd6];
	ld.local.u32 	%r6311, [%rd32+8];
	// inline asm
	prmt.b32 %r6309, %r6310, %r6311, %r73;
	// inline asm
	st.local.u32 	[%rd8], %r6309;
	ld.local.v2.u32 	{%r6423, %r6424}, [%rd32+4];
	// inline asm
	prmt.b32 %r6313, %r6424, %r6423, %r73;
	// inline asm
	st.local.u32 	[%rd34+8], %r6313;
	ld.local.u32 	%r6318, [%rd32+4];
	ld.local.u32 	%r6319, [%rd32];
	// inline asm
	prmt.b32 %r6317, %r6318, %r6319, %r73;
	// inline asm
	st.local.u32 	[%rd34+4], %r6317;
	ld.local.u32 	%r6322, [%rd32];
	ld.local.u32 	%r6323, [%rd5];
	// inline asm
	prmt.b32 %r6321, %r6322, %r6323, %r73;
	// inline asm
	st.local.u32 	[%rd34], %r6321;
	ld.local.u32 	%r6326, [%rd5];
	ld.local.u32 	%r6327, [%rd31+8];
	// inline asm
	prmt.b32 %r6325, %r6326, %r6327, %r73;
	// inline asm
	st.local.u32 	[%rd7], %r6325;
	ld.local.v2.u32 	{%r6425, %r6426}, [%rd31+4];
	// inline asm
	prmt.b32 %r6329, %r6426, %r6425, %r73;
	// inline asm
	st.local.u32 	[%rd33+8], %r6329;
	ld.local.u32 	%r6334, [%rd31+4];
	ld.local.u32 	%r6335, [%rd31];
	// inline asm
	prmt.b32 %r6333, %r6334, %r6335, %r73;
	// inline asm
	st.local.u32 	[%rd33+4], %r6333;
	ld.local.u32 	%r6338, [%rd31];
	ld.local.u32 	%r6339, [%rd4];
	// inline asm
	prmt.b32 %r6337, %r6338, %r6339, %r73;
	// inline asm
	st.local.u32 	[%rd33], %r6337;
	ld.local.u32 	%r6342, [%rd4];
	ld.local.u32 	%r6343, [%rd30+8];
	// inline asm
	prmt.b32 %r6341, %r6342, %r6343, %r73;
	// inline asm
	st.local.u32 	[%rd6], %r6341;
	ld.local.v2.u32 	{%r6427, %r6428}, [%rd30+4];
	// inline asm
	prmt.b32 %r6345, %r6428, %r6427, %r73;
	// inline asm
	st.local.u32 	[%rd32+8], %r6345;
	ld.local.u32 	%r6350, [%rd30+4];
	ld.local.u32 	%r6351, [%rd30];
	// inline asm
	prmt.b32 %r6349, %r6350, %r6351, %r73;
	// inline asm
	st.local.u32 	[%rd32+4], %r6349;
	ld.local.u32 	%r6354, [%rd30];
	ld.local.u32 	%r6355, [%rd3];
	// inline asm
	prmt.b32 %r6353, %r6354, %r6355, %r73;
	// inline asm
	st.local.u32 	[%rd32], %r6353;
	ld.local.u32 	%r6358, [%rd3];
	ld.local.u32 	%r6359, [%rd29+8];
	// inline asm
	prmt.b32 %r6357, %r6358, %r6359, %r73;
	// inline asm
	st.local.u32 	[%rd5], %r6357;
	ld.local.v2.u32 	{%r6429, %r6430}, [%rd29+4];
	// inline asm
	prmt.b32 %r6361, %r6430, %r6429, %r73;
	// inline asm
	st.local.u32 	[%rd31+8], %r6361;
	ld.local.u32 	%r6366, [%rd29+4];
	ld.local.u32 	%r6367, [%rd29];
	// inline asm
	prmt.b32 %r6365, %r6366, %r6367, %r73;
	// inline asm
	st.local.u32 	[%rd31+4], %r6365;
	ld.local.u32 	%r6370, [%rd29];
	ld.local.u32 	%r6371, [%rd2];
	// inline asm
	prmt.b32 %r6369, %r6370, %r6371, %r73;
	// inline asm
	st.local.u32 	[%rd31], %r6369;
	ld.local.u32 	%r6374, [%rd2];
	ld.local.u32 	%r6375, [%rd28+8];
	// inline asm
	prmt.b32 %r6373, %r6374, %r6375, %r73;
	// inline asm
	st.local.u32 	[%rd4], %r6373;
	ld.local.v2.u32 	{%r6431, %r6432}, [%rd28+4];
	// inline asm
	prmt.b32 %r6377, %r6432, %r6431, %r73;
	// inline asm
	st.local.u32 	[%rd30+8], %r6377;
	ld.local.u32 	%r6382, [%rd28+4];
	ld.local.u32 	%r6383, [%rd28];
	// inline asm
	prmt.b32 %r6381, %r6382, %r6383, %r73;
	// inline asm
	st.local.u32 	[%rd30+4], %r6381;
	ld.local.u32 	%r6386, [%rd28];
	ld.local.u32 	%r6387, [%rd1];
	// inline asm
	prmt.b32 %r6385, %r6386, %r6387, %r73;
	// inline asm
	st.local.u32 	[%rd30], %r6385;
	ld.local.u32 	%r6390, [%rd1];
	// inline asm
	prmt.b32 %r6389, %r6390, %r8735, %r73;
	// inline asm
	st.local.u32 	[%rd3], %r6389;
	st.local.v2.u32 	[%rd29+4], {%r8735, %r8735};
	st.local.u32 	[%rd29], %r8735;
	st.local.u32 	[%rd2], %r8735;
	st.local.v2.u32 	[%rd28+4], {%r8735, %r8735};
	st.local.u32 	[%rd28], %r8735;
	st.local.u32 	[%rd1], %r8735;
	mov.u32 	%r8744, %r8735;
	mov.u32 	%r8745, %r8735;
	mov.u32 	%r8746, %r8735;
	bra.uni 	BB4_410;

BB4_380:
	setp.gt.s32	%p199, %r2574, 27;
	@%p199 bra 	BB4_388;

	setp.gt.s32	%p205, %r2574, 25;
	@%p205 bra 	BB4_385;

	setp.eq.s32	%p208, %r2574, 24;
	@%p208 bra 	BB4_398;
	bra.uni 	BB4_383;

BB4_398:
	mov.u32 	%r8735, 0;
	// inline asm
	prmt.b32 %r8763, %r8735, %r2572, %r73;
	// inline asm
	ld.local.v2.u32 	{%r3785, %r3786}, [%rd35+4];
	// inline asm
	prmt.b32 %r8756, %r3786, %r3785, %r73;
	// inline asm
	ld.local.u32 	%r3654, [%rd35+4];
	ld.local.u32 	%r3655, [%rd35];
	// inline asm
	prmt.b32 %r8757, %r3654, %r3655, %r73;
	// inline asm
	ld.local.u32 	%r3658, [%rd35];
	ld.local.u32 	%r3659, [%rd8];
	// inline asm
	prmt.b32 %r8758, %r3658, %r3659, %r73;
	// inline asm
	ld.local.u32 	%r3662, [%rd8];
	ld.local.u32 	%r3663, [%rd34+8];
	// inline asm
	prmt.b32 %r8759, %r3662, %r3663, %r73;
	// inline asm
	ld.local.v2.u32 	{%r3787, %r3788}, [%rd34+4];
	// inline asm
	prmt.b32 %r8752, %r3788, %r3787, %r73;
	// inline asm
	ld.local.u32 	%r3670, [%rd34+4];
	ld.local.u32 	%r3671, [%rd34];
	// inline asm
	prmt.b32 %r8753, %r3670, %r3671, %r73;
	// inline asm
	ld.local.u32 	%r3674, [%rd34];
	ld.local.u32 	%r3675, [%rd7];
	// inline asm
	prmt.b32 %r8754, %r3674, %r3675, %r73;
	// inline asm
	ld.local.u32 	%r3678, [%rd7];
	ld.local.u32 	%r3679, [%rd33+8];
	// inline asm
	prmt.b32 %r8755, %r3678, %r3679, %r73;
	// inline asm
	ld.local.v2.u32 	{%r3789, %r3790}, [%rd33+4];
	// inline asm
	prmt.b32 %r8748, %r3790, %r3789, %r73;
	// inline asm
	ld.local.u32 	%r3686, [%rd33+4];
	ld.local.u32 	%r3687, [%rd33];
	// inline asm
	prmt.b32 %r8749, %r3686, %r3687, %r73;
	// inline asm
	ld.local.u32 	%r3690, [%rd33];
	ld.local.u32 	%r3691, [%rd6];
	// inline asm
	prmt.b32 %r8750, %r3690, %r3691, %r73;
	// inline asm
	ld.local.u32 	%r3694, [%rd6];
	ld.local.u32 	%r3695, [%rd32+8];
	// inline asm
	prmt.b32 %r8751, %r3694, %r3695, %r73;
	// inline asm
	ld.local.v2.u32 	{%r3791, %r3792}, [%rd32+4];
	// inline asm
	prmt.b32 %r8744, %r3792, %r3791, %r73;
	// inline asm
	ld.local.u32 	%r3702, [%rd32+4];
	ld.local.u32 	%r3703, [%rd32];
	// inline asm
	prmt.b32 %r8745, %r3702, %r3703, %r73;
	// inline asm
	ld.local.u32 	%r3706, [%rd32];
	ld.local.u32 	%r3707, [%rd5];
	// inline asm
	prmt.b32 %r8746, %r3706, %r3707, %r73;
	// inline asm
	ld.local.u32 	%r3710, [%rd5];
	ld.local.u32 	%r3711, [%rd31+8];
	// inline asm
	prmt.b32 %r8747, %r3710, %r3711, %r73;
	// inline asm
	ld.local.v2.u32 	{%r3793, %r3794}, [%rd31+4];
	// inline asm
	prmt.b32 %r8740, %r3794, %r3793, %r73;
	// inline asm
	ld.local.u32 	%r3718, [%rd31+4];
	ld.local.u32 	%r3719, [%rd31];
	// inline asm
	prmt.b32 %r8741, %r3718, %r3719, %r73;
	// inline asm
	ld.local.u32 	%r3722, [%rd31];
	ld.local.u32 	%r3723, [%rd4];
	// inline asm
	prmt.b32 %r8742, %r3722, %r3723, %r73;
	// inline asm
	ld.local.u32 	%r3726, [%rd4];
	ld.local.u32 	%r3727, [%rd30+8];
	// inline asm
	prmt.b32 %r8743, %r3726, %r3727, %r73;
	// inline asm
	ld.local.v2.u32 	{%r3795, %r3796}, [%rd30+4];
	// inline asm
	prmt.b32 %r8736, %r3796, %r3795, %r73;
	// inline asm
	ld.local.u32 	%r3734, [%rd30+4];
	ld.local.u32 	%r3735, [%rd30];
	// inline asm
	prmt.b32 %r8737, %r3734, %r3735, %r73;
	// inline asm
	ld.local.u32 	%r3738, [%rd30];
	ld.local.u32 	%r3739, [%rd3];
	// inline asm
	prmt.b32 %r8738, %r3738, %r3739, %r73;
	// inline asm
	ld.local.u32 	%r3742, [%rd3];
	ld.local.u32 	%r3743, [%rd29+8];
	// inline asm
	prmt.b32 %r8739, %r3742, %r3743, %r73;
	// inline asm
	ld.local.v2.u32 	{%r3797, %r3798}, [%rd29+4];
	// inline asm
	prmt.b32 %r3745, %r3798, %r3797, %r73;
	// inline asm
	st.local.u32 	[%rd35+8], %r3745;
	ld.local.u32 	%r3750, [%rd29+4];
	ld.local.u32 	%r3751, [%rd29];
	// inline asm
	prmt.b32 %r3749, %r3750, %r3751, %r73;
	// inline asm
	st.local.u32 	[%rd35+4], %r3749;
	ld.local.u32 	%r3754, [%rd29];
	ld.local.u32 	%r3755, [%rd2];
	// inline asm
	prmt.b32 %r3753, %r3754, %r3755, %r73;
	// inline asm
	st.local.u32 	[%rd35], %r3753;
	ld.local.u32 	%r3758, [%rd2];
	ld.local.u32 	%r3759, [%rd28+8];
	// inline asm
	prmt.b32 %r3757, %r3758, %r3759, %r73;
	// inline asm
	st.local.u32 	[%rd8], %r3757;
	ld.local.v2.u32 	{%r3799, %r3800}, [%rd28+4];
	// inline asm
	prmt.b32 %r3761, %r3800, %r3799, %r73;
	// inline asm
	st.local.u32 	[%rd34+8], %r3761;
	ld.local.u32 	%r3766, [%rd28+4];
	ld.local.u32 	%r3767, [%rd28];
	// inline asm
	prmt.b32 %r3765, %r3766, %r3767, %r73;
	// inline asm
	st.local.u32 	[%rd34+4], %r3765;
	ld.local.u32 	%r3770, [%rd28];
	ld.local.u32 	%r3771, [%rd1];
	// inline asm
	prmt.b32 %r3769, %r3770, %r3771, %r73;
	// inline asm
	st.local.u32 	[%rd34], %r3769;
	ld.local.u32 	%r3774, [%rd1];
	// inline asm
	prmt.b32 %r3773, %r3774, %r8735, %r73;
	// inline asm
	st.local.u32 	[%rd7], %r3773;
	st.local.v2.u32 	[%rd33+4], {%r8735, %r8735};
	st.local.u32 	[%rd33], %r8735;
	st.local.u32 	[%rd6], %r8735;
	st.local.v2.u32 	[%rd32+4], {%r8735, %r8735};
	st.local.u32 	[%rd32], %r8735;
	st.local.u32 	[%rd5], %r8735;
	st.local.v2.u32 	[%rd31+4], {%r8735, %r8735};
	st.local.u32 	[%rd31], %r8735;
	st.local.u32 	[%rd4], %r8735;
	st.local.v2.u32 	[%rd30+4], {%r8735, %r8735};
	st.local.u32 	[%rd30], %r8735;
	st.local.u32 	[%rd3], %r8735;
	st.local.v2.u32 	[%rd29+4], {%r8735, %r8735};
	st.local.u32 	[%rd29], %r8735;
	st.local.u32 	[%rd2], %r8735;
	st.local.v2.u32 	[%rd28+4], {%r8735, %r8735};
	st.local.u32 	[%rd28], %r8735;
	st.local.u32 	[%rd1], %r8735;
	mov.u32 	%r8760, %r8735;
	mov.u32 	%r8761, %r8735;
	mov.u32 	%r8762, %r8735;
	bra.uni 	BB4_414;

BB4_342:
	setp.gt.s32	%p234, %r2574, 5;
	@%p234 bra 	BB4_346;

	setp.eq.s32	%p237, %r2574, 4;
	@%p237 bra 	BB4_408;
	bra.uni 	BB4_344;

BB4_408:
	mov.u32 	%r8735, 0;
	// inline asm
	prmt.b32 %r8743, %r8735, %r2572, %r73;
	// inline asm
	ld.local.v2.u32 	{%r7115, %r7116}, [%rd35+4];
	// inline asm
	prmt.b32 %r8736, %r7116, %r7115, %r73;
	// inline asm
	ld.local.u32 	%r6964, [%rd35+4];
	ld.local.u32 	%r6965, [%rd35];
	// inline asm
	prmt.b32 %r8737, %r6964, %r6965, %r73;
	// inline asm
	ld.local.u32 	%r6968, [%rd35];
	ld.local.u32 	%r6969, [%rd8];
	// inline asm
	prmt.b32 %r8738, %r6968, %r6969, %r73;
	// inline asm
	ld.local.u32 	%r6972, [%rd8];
	ld.local.u32 	%r6973, [%rd34+8];
	// inline asm
	prmt.b32 %r8739, %r6972, %r6973, %r73;
	// inline asm
	ld.local.v2.u32 	{%r7117, %r7118}, [%rd34+4];
	// inline asm
	prmt.b32 %r6975, %r7118, %r7117, %r73;
	// inline asm
	st.local.u32 	[%rd35+8], %r6975;
	ld.local.u32 	%r6980, [%rd34+4];
	ld.local.u32 	%r6981, [%rd34];
	// inline asm
	prmt.b32 %r6979, %r6980, %r6981, %r73;
	// inline asm
	st.local.u32 	[%rd35+4], %r6979;
	ld.local.u32 	%r6984, [%rd34];
	ld.local.u32 	%r6985, [%rd7];
	// inline asm
	prmt.b32 %r6983, %r6984, %r6985, %r73;
	// inline asm
	st.local.u32 	[%rd35], %r6983;
	ld.local.u32 	%r6988, [%rd7];
	ld.local.u32 	%r6989, [%rd33+8];
	// inline asm
	prmt.b32 %r6987, %r6988, %r6989, %r73;
	// inline asm
	st.local.u32 	[%rd8], %r6987;
	ld.local.v2.u32 	{%r7119, %r7120}, [%rd33+4];
	// inline asm
	prmt.b32 %r6991, %r7120, %r7119, %r73;
	// inline asm
	st.local.u32 	[%rd34+8], %r6991;
	ld.local.u32 	%r6996, [%rd33+4];
	ld.local.u32 	%r6997, [%rd33];
	// inline asm
	prmt.b32 %r6995, %r6996, %r6997, %r73;
	// inline asm
	st.local.u32 	[%rd34+4], %r6995;
	ld.local.u32 	%r7000, [%rd33];
	ld.local.u32 	%r7001, [%rd6];
	// inline asm
	prmt.b32 %r6999, %r7000, %r7001, %r73;
	// inline asm
	st.local.u32 	[%rd34], %r6999;
	ld.local.u32 	%r7004, [%rd6];
	ld.local.u32 	%r7005, [%rd32+8];
	// inline asm
	prmt.b32 %r7003, %r7004, %r7005, %r73;
	// inline asm
	st.local.u32 	[%rd7], %r7003;
	ld.local.v2.u32 	{%r7121, %r7122}, [%rd32+4];
	// inline asm
	prmt.b32 %r7007, %r7122, %r7121, %r73;
	// inline asm
	st.local.u32 	[%rd33+8], %r7007;
	ld.local.u32 	%r7012, [%rd32+4];
	ld.local.u32 	%r7013, [%rd32];
	// inline asm
	prmt.b32 %r7011, %r7012, %r7013, %r73;
	// inline asm
	st.local.u32 	[%rd33+4], %r7011;
	ld.local.u32 	%r7016, [%rd32];
	ld.local.u32 	%r7017, [%rd5];
	// inline asm
	prmt.b32 %r7015, %r7016, %r7017, %r73;
	// inline asm
	st.local.u32 	[%rd33], %r7015;
	ld.local.u32 	%r7020, [%rd5];
	ld.local.u32 	%r7021, [%rd31+8];
	// inline asm
	prmt.b32 %r7019, %r7020, %r7021, %r73;
	// inline asm
	st.local.u32 	[%rd6], %r7019;
	ld.local.v2.u32 	{%r7123, %r7124}, [%rd31+4];
	// inline asm
	prmt.b32 %r7023, %r7124, %r7123, %r73;
	// inline asm
	st.local.u32 	[%rd32+8], %r7023;
	ld.local.u32 	%r7028, [%rd31+4];
	ld.local.u32 	%r7029, [%rd31];
	// inline asm
	prmt.b32 %r7027, %r7028, %r7029, %r73;
	// inline asm
	st.local.u32 	[%rd32+4], %r7027;
	ld.local.u32 	%r7032, [%rd31];
	ld.local.u32 	%r7033, [%rd4];
	// inline asm
	prmt.b32 %r7031, %r7032, %r7033, %r73;
	// inline asm
	st.local.u32 	[%rd32], %r7031;
	ld.local.u32 	%r7036, [%rd4];
	ld.local.u32 	%r7037, [%rd30+8];
	// inline asm
	prmt.b32 %r7035, %r7036, %r7037, %r73;
	// inline asm
	st.local.u32 	[%rd5], %r7035;
	ld.local.v2.u32 	{%r7125, %r7126}, [%rd30+4];
	// inline asm
	prmt.b32 %r7039, %r7126, %r7125, %r73;
	// inline asm
	st.local.u32 	[%rd31+8], %r7039;
	ld.local.u32 	%r7044, [%rd30+4];
	ld.local.u32 	%r7045, [%rd30];
	// inline asm
	prmt.b32 %r7043, %r7044, %r7045, %r73;
	// inline asm
	st.local.u32 	[%rd31+4], %r7043;
	ld.local.u32 	%r7048, [%rd30];
	ld.local.u32 	%r7049, [%rd3];
	// inline asm
	prmt.b32 %r7047, %r7048, %r7049, %r73;
	// inline asm
	st.local.u32 	[%rd31], %r7047;
	ld.local.u32 	%r7052, [%rd3];
	ld.local.u32 	%r7053, [%rd29+8];
	// inline asm
	prmt.b32 %r7051, %r7052, %r7053, %r73;
	// inline asm
	st.local.u32 	[%rd4], %r7051;
	ld.local.v2.u32 	{%r7127, %r7128}, [%rd29+4];
	// inline asm
	prmt.b32 %r7055, %r7128, %r7127, %r73;
	// inline asm
	st.local.u32 	[%rd30+8], %r7055;
	ld.local.u32 	%r7060, [%rd29+4];
	ld.local.u32 	%r7061, [%rd29];
	// inline asm
	prmt.b32 %r7059, %r7060, %r7061, %r73;
	// inline asm
	st.local.u32 	[%rd30+4], %r7059;
	ld.local.u32 	%r7064, [%rd29];
	ld.local.u32 	%r7065, [%rd2];
	// inline asm
	prmt.b32 %r7063, %r7064, %r7065, %r73;
	// inline asm
	st.local.u32 	[%rd30], %r7063;
	ld.local.u32 	%r7068, [%rd2];
	ld.local.u32 	%r7069, [%rd28+8];
	// inline asm
	prmt.b32 %r7067, %r7068, %r7069, %r73;
	// inline asm
	st.local.u32 	[%rd3], %r7067;
	ld.local.v2.u32 	{%r7129, %r7130}, [%rd28+4];
	// inline asm
	prmt.b32 %r7071, %r7130, %r7129, %r73;
	// inline asm
	st.local.u32 	[%rd29+8], %r7071;
	ld.local.u32 	%r7076, [%rd28+4];
	ld.local.u32 	%r7077, [%rd28];
	// inline asm
	prmt.b32 %r7075, %r7076, %r7077, %r73;
	// inline asm
	st.local.u32 	[%rd29+4], %r7075;
	ld.local.u32 	%r7080, [%rd28];
	ld.local.u32 	%r7081, [%rd1];
	// inline asm
	prmt.b32 %r7079, %r7080, %r7081, %r73;
	// inline asm
	st.local.u32 	[%rd29], %r7079;
	ld.local.u32 	%r7084, [%rd1];
	// inline asm
	prmt.b32 %r7083, %r7084, %r8735, %r73;
	// inline asm
	st.local.u32 	[%rd2], %r7083;
	st.local.v2.u32 	[%rd28+4], {%r8735, %r8735};
	st.local.u32 	[%rd28], %r8735;
	st.local.u32 	[%rd1], %r8735;
	mov.u32 	%r8740, %r8735;
	mov.u32 	%r8741, %r8735;
	mov.u32 	%r8742, %r8735;
	bra.uni 	BB4_409;

BB4_373:
	setp.gt.s32	%p211, %r2574, 21;
	@%p211 bra 	BB4_377;

	setp.eq.s32	%p214, %r2574, 20;
	@%p214 bra 	BB4_400;
	bra.uni 	BB4_375;

BB4_400:
	mov.u32 	%r8735, 0;
	// inline asm
	prmt.b32 %r8759, %r8735, %r2572, %r73;
	// inline asm
	ld.local.v2.u32 	{%r4419, %r4420}, [%rd35+4];
	// inline asm
	prmt.b32 %r8752, %r4420, %r4419, %r73;
	// inline asm
	ld.local.u32 	%r4284, [%rd35+4];
	ld.local.u32 	%r4285, [%rd35];
	// inline asm
	prmt.b32 %r8753, %r4284, %r4285, %r73;
	// inline asm
	ld.local.u32 	%r4288, [%rd35];
	ld.local.u32 	%r4289, [%rd8];
	// inline asm
	prmt.b32 %r8754, %r4288, %r4289, %r73;
	// inline asm
	ld.local.u32 	%r4292, [%rd8];
	ld.local.u32 	%r4293, [%rd34+8];
	// inline asm
	prmt.b32 %r8755, %r4292, %r4293, %r73;
	// inline asm
	ld.local.v2.u32 	{%r4421, %r4422}, [%rd34+4];
	// inline asm
	prmt.b32 %r8748, %r4422, %r4421, %r73;
	// inline asm
	ld.local.u32 	%r4300, [%rd34+4];
	ld.local.u32 	%r4301, [%rd34];
	// inline asm
	prmt.b32 %r8749, %r4300, %r4301, %r73;
	// inline asm
	ld.local.u32 	%r4304, [%rd34];
	ld.local.u32 	%r4305, [%rd7];
	// inline asm
	prmt.b32 %r8750, %r4304, %r4305, %r73;
	// inline asm
	ld.local.u32 	%r4308, [%rd7];
	ld.local.u32 	%r4309, [%rd33+8];
	// inline asm
	prmt.b32 %r8751, %r4308, %r4309, %r73;
	// inline asm
	ld.local.v2.u32 	{%r4423, %r4424}, [%rd33+4];
	// inline asm
	prmt.b32 %r8744, %r4424, %r4423, %r73;
	// inline asm
	ld.local.u32 	%r4316, [%rd33+4];
	ld.local.u32 	%r4317, [%rd33];
	// inline asm
	prmt.b32 %r8745, %r4316, %r4317, %r73;
	// inline asm
	ld.local.u32 	%r4320, [%rd33];
	ld.local.u32 	%r4321, [%rd6];
	// inline asm
	prmt.b32 %r8746, %r4320, %r4321, %r73;
	// inline asm
	ld.local.u32 	%r4324, [%rd6];
	ld.local.u32 	%r4325, [%rd32+8];
	// inline asm
	prmt.b32 %r8747, %r4324, %r4325, %r73;
	// inline asm
	ld.local.v2.u32 	{%r4425, %r4426}, [%rd32+4];
	// inline asm
	prmt.b32 %r8740, %r4426, %r4425, %r73;
	// inline asm
	ld.local.u32 	%r4332, [%rd32+4];
	ld.local.u32 	%r4333, [%rd32];
	// inline asm
	prmt.b32 %r8741, %r4332, %r4333, %r73;
	// inline asm
	ld.local.u32 	%r4336, [%rd32];
	ld.local.u32 	%r4337, [%rd5];
	// inline asm
	prmt.b32 %r8742, %r4336, %r4337, %r73;
	// inline asm
	ld.local.u32 	%r4340, [%rd5];
	ld.local.u32 	%r4341, [%rd31+8];
	// inline asm
	prmt.b32 %r8743, %r4340, %r4341, %r73;
	// inline asm
	ld.local.v2.u32 	{%r4427, %r4428}, [%rd31+4];
	// inline asm
	prmt.b32 %r8736, %r4428, %r4427, %r73;
	// inline asm
	ld.local.u32 	%r4348, [%rd31+4];
	ld.local.u32 	%r4349, [%rd31];
	// inline asm
	prmt.b32 %r8737, %r4348, %r4349, %r73;
	// inline asm
	ld.local.u32 	%r4352, [%rd31];
	ld.local.u32 	%r4353, [%rd4];
	// inline asm
	prmt.b32 %r8738, %r4352, %r4353, %r73;
	// inline asm
	ld.local.u32 	%r4356, [%rd4];
	ld.local.u32 	%r4357, [%rd30+8];
	// inline asm
	prmt.b32 %r8739, %r4356, %r4357, %r73;
	// inline asm
	ld.local.v2.u32 	{%r4429, %r4430}, [%rd30+4];
	// inline asm
	prmt.b32 %r4359, %r4430, %r4429, %r73;
	// inline asm
	st.local.u32 	[%rd35+8], %r4359;
	ld.local.u32 	%r4364, [%rd30+4];
	ld.local.u32 	%r4365, [%rd30];
	// inline asm
	prmt.b32 %r4363, %r4364, %r4365, %r73;
	// inline asm
	st.local.u32 	[%rd35+4], %r4363;
	ld.local.u32 	%r4368, [%rd30];
	ld.local.u32 	%r4369, [%rd3];
	// inline asm
	prmt.b32 %r4367, %r4368, %r4369, %r73;
	// inline asm
	st.local.u32 	[%rd35], %r4367;
	ld.local.u32 	%r4372, [%rd3];
	ld.local.u32 	%r4373, [%rd29+8];
	// inline asm
	prmt.b32 %r4371, %r4372, %r4373, %r73;
	// inline asm
	st.local.u32 	[%rd8], %r4371;
	ld.local.v2.u32 	{%r4431, %r4432}, [%rd29+4];
	// inline asm
	prmt.b32 %r4375, %r4432, %r4431, %r73;
	// inline asm
	st.local.u32 	[%rd34+8], %r4375;
	ld.local.u32 	%r4380, [%rd29+4];
	ld.local.u32 	%r4381, [%rd29];
	// inline asm
	prmt.b32 %r4379, %r4380, %r4381, %r73;
	// inline asm
	st.local.u32 	[%rd34+4], %r4379;
	ld.local.u32 	%r4384, [%rd29];
	ld.local.u32 	%r4385, [%rd2];
	// inline asm
	prmt.b32 %r4383, %r4384, %r4385, %r73;
	// inline asm
	st.local.u32 	[%rd34], %r4383;
	ld.local.u32 	%r4388, [%rd2];
	ld.local.u32 	%r4389, [%rd28+8];
	// inline asm
	prmt.b32 %r4387, %r4388, %r4389, %r73;
	// inline asm
	st.local.u32 	[%rd7], %r4387;
	ld.local.v2.u32 	{%r4433, %r4434}, [%rd28+4];
	// inline asm
	prmt.b32 %r4391, %r4434, %r4433, %r73;
	// inline asm
	st.local.u32 	[%rd33+8], %r4391;
	ld.local.u32 	%r4396, [%rd28+4];
	ld.local.u32 	%r4397, [%rd28];
	// inline asm
	prmt.b32 %r4395, %r4396, %r4397, %r73;
	// inline asm
	st.local.u32 	[%rd33+4], %r4395;
	ld.local.u32 	%r4400, [%rd28];
	ld.local.u32 	%r4401, [%rd1];
	// inline asm
	prmt.b32 %r4399, %r4400, %r4401, %r73;
	// inline asm
	st.local.u32 	[%rd33], %r4399;
	ld.local.u32 	%r4404, [%rd1];
	// inline asm
	prmt.b32 %r4403, %r4404, %r8735, %r73;
	// inline asm
	st.local.u32 	[%rd6], %r4403;
	st.local.v2.u32 	[%rd32+4], {%r8735, %r8735};
	st.local.u32 	[%rd32], %r8735;
	st.local.u32 	[%rd5], %r8735;
	st.local.v2.u32 	[%rd31+4], {%r8735, %r8735};
	st.local.u32 	[%rd31], %r8735;
	st.local.u32 	[%rd4], %r8735;
	st.local.v2.u32 	[%rd30+4], {%r8735, %r8735};
	st.local.u32 	[%rd30], %r8735;
	st.local.u32 	[%rd3], %r8735;
	st.local.v2.u32 	[%rd29+4], {%r8735, %r8735};
	st.local.u32 	[%rd29], %r8735;
	st.local.u32 	[%rd2], %r8735;
	st.local.v2.u32 	[%rd28+4], {%r8735, %r8735};
	st.local.u32 	[%rd28], %r8735;
	st.local.u32 	[%rd1], %r8735;
	mov.u32 	%r8756, %r8735;
	mov.u32 	%r8757, %r8735;
	mov.u32 	%r8758, %r8735;
	bra.uni 	BB4_413;

BB4_357:
	setp.gt.s32	%p223, %r2574, 13;
	@%p223 bra 	BB4_361;

	setp.eq.s32	%p226, %r2574, 12;
	@%p226 bra 	BB4_404;
	bra.uni 	BB4_359;

BB4_404:
	mov.u32 	%r8735, 0;
	// inline asm
	prmt.b32 %r8751, %r8735, %r2572, %r73;
	// inline asm
	ld.local.v2.u32 	{%r5735, %r5736}, [%rd35+4];
	// inline asm
	prmt.b32 %r8744, %r5736, %r5735, %r73;
	// inline asm
	ld.local.u32 	%r5592, [%rd35+4];
	ld.local.u32 	%r5593, [%rd35];
	// inline asm
	prmt.b32 %r8745, %r5592, %r5593, %r73;
	// inline asm
	ld.local.u32 	%r5596, [%rd35];
	ld.local.u32 	%r5597, [%rd8];
	// inline asm
	prmt.b32 %r8746, %r5596, %r5597, %r73;
	// inline asm
	ld.local.u32 	%r5600, [%rd8];
	ld.local.u32 	%r5601, [%rd34+8];
	// inline asm
	prmt.b32 %r8747, %r5600, %r5601, %r73;
	// inline asm
	ld.local.v2.u32 	{%r5737, %r5738}, [%rd34+4];
	// inline asm
	prmt.b32 %r8740, %r5738, %r5737, %r73;
	// inline asm
	ld.local.u32 	%r5608, [%rd34+4];
	ld.local.u32 	%r5609, [%rd34];
	// inline asm
	prmt.b32 %r8741, %r5608, %r5609, %r73;
	// inline asm
	ld.local.u32 	%r5612, [%rd34];
	ld.local.u32 	%r5613, [%rd7];
	// inline asm
	prmt.b32 %r8742, %r5612, %r5613, %r73;
	// inline asm
	ld.local.u32 	%r5616, [%rd7];
	ld.local.u32 	%r5617, [%rd33+8];
	// inline asm
	prmt.b32 %r8743, %r5616, %r5617, %r73;
	// inline asm
	ld.local.v2.u32 	{%r5739, %r5740}, [%rd33+4];
	// inline asm
	prmt.b32 %r8736, %r5740, %r5739, %r73;
	// inline asm
	ld.local.u32 	%r5624, [%rd33+4];
	ld.local.u32 	%r5625, [%rd33];
	// inline asm
	prmt.b32 %r8737, %r5624, %r5625, %r73;
	// inline asm
	ld.local.u32 	%r5628, [%rd33];
	ld.local.u32 	%r5629, [%rd6];
	// inline asm
	prmt.b32 %r8738, %r5628, %r5629, %r73;
	// inline asm
	ld.local.u32 	%r5632, [%rd6];
	ld.local.u32 	%r5633, [%rd32+8];
	// inline asm
	prmt.b32 %r8739, %r5632, %r5633, %r73;
	// inline asm
	ld.local.v2.u32 	{%r5741, %r5742}, [%rd32+4];
	// inline asm
	prmt.b32 %r5635, %r5742, %r5741, %r73;
	// inline asm
	st.local.u32 	[%rd35+8], %r5635;
	ld.local.u32 	%r5640, [%rd32+4];
	ld.local.u32 	%r5641, [%rd32];
	// inline asm
	prmt.b32 %r5639, %r5640, %r5641, %r73;
	// inline asm
	st.local.u32 	[%rd35+4], %r5639;
	ld.local.u32 	%r5644, [%rd32];
	ld.local.u32 	%r5645, [%rd5];
	// inline asm
	prmt.b32 %r5643, %r5644, %r5645, %r73;
	// inline asm
	st.local.u32 	[%rd35], %r5643;
	ld.local.u32 	%r5648, [%rd5];
	ld.local.u32 	%r5649, [%rd31+8];
	// inline asm
	prmt.b32 %r5647, %r5648, %r5649, %r73;
	// inline asm
	st.local.u32 	[%rd8], %r5647;
	ld.local.v2.u32 	{%r5743, %r5744}, [%rd31+4];
	// inline asm
	prmt.b32 %r5651, %r5744, %r5743, %r73;
	// inline asm
	st.local.u32 	[%rd34+8], %r5651;
	ld.local.u32 	%r5656, [%rd31+4];
	ld.local.u32 	%r5657, [%rd31];
	// inline asm
	prmt.b32 %r5655, %r5656, %r5657, %r73;
	// inline asm
	st.local.u32 	[%rd34+4], %r5655;
	ld.local.u32 	%r5660, [%rd31];
	ld.local.u32 	%r5661, [%rd4];
	// inline asm
	prmt.b32 %r5659, %r5660, %r5661, %r73;
	// inline asm
	st.local.u32 	[%rd34], %r5659;
	ld.local.u32 	%r5664, [%rd4];
	ld.local.u32 	%r5665, [%rd30+8];
	// inline asm
	prmt.b32 %r5663, %r5664, %r5665, %r73;
	// inline asm
	st.local.u32 	[%rd7], %r5663;
	ld.local.v2.u32 	{%r5745, %r5746}, [%rd30+4];
	// inline asm
	prmt.b32 %r5667, %r5746, %r5745, %r73;
	// inline asm
	st.local.u32 	[%rd33+8], %r5667;
	ld.local.u32 	%r5672, [%rd30+4];
	ld.local.u32 	%r5673, [%rd30];
	// inline asm
	prmt.b32 %r5671, %r5672, %r5673, %r73;
	// inline asm
	st.local.u32 	[%rd33+4], %r5671;
	ld.local.u32 	%r5676, [%rd30];
	ld.local.u32 	%r5677, [%rd3];
	// inline asm
	prmt.b32 %r5675, %r5676, %r5677, %r73;
	// inline asm
	st.local.u32 	[%rd33], %r5675;
	ld.local.u32 	%r5680, [%rd3];
	ld.local.u32 	%r5681, [%rd29+8];
	// inline asm
	prmt.b32 %r5679, %r5680, %r5681, %r73;
	// inline asm
	st.local.u32 	[%rd6], %r5679;
	ld.local.v2.u32 	{%r5747, %r5748}, [%rd29+4];
	// inline asm
	prmt.b32 %r5683, %r5748, %r5747, %r73;
	// inline asm
	st.local.u32 	[%rd32+8], %r5683;
	ld.local.u32 	%r5688, [%rd29+4];
	ld.local.u32 	%r5689, [%rd29];
	// inline asm
	prmt.b32 %r5687, %r5688, %r5689, %r73;
	// inline asm
	st.local.u32 	[%rd32+4], %r5687;
	ld.local.u32 	%r5692, [%rd29];
	ld.local.u32 	%r5693, [%rd2];
	// inline asm
	prmt.b32 %r5691, %r5692, %r5693, %r73;
	// inline asm
	st.local.u32 	[%rd32], %r5691;
	ld.local.u32 	%r5696, [%rd2];
	ld.local.u32 	%r5697, [%rd28+8];
	// inline asm
	prmt.b32 %r5695, %r5696, %r5697, %r73;
	// inline asm
	st.local.u32 	[%rd5], %r5695;
	ld.local.v2.u32 	{%r5749, %r5750}, [%rd28+4];
	// inline asm
	prmt.b32 %r5699, %r5750, %r5749, %r73;
	// inline asm
	st.local.u32 	[%rd31+8], %r5699;
	ld.local.u32 	%r5704, [%rd28+4];
	ld.local.u32 	%r5705, [%rd28];
	// inline asm
	prmt.b32 %r5703, %r5704, %r5705, %r73;
	// inline asm
	st.local.u32 	[%rd31+4], %r5703;
	ld.local.u32 	%r5708, [%rd28];
	ld.local.u32 	%r5709, [%rd1];
	// inline asm
	prmt.b32 %r5707, %r5708, %r5709, %r73;
	// inline asm
	st.local.u32 	[%rd31], %r5707;
	ld.local.u32 	%r5712, [%rd1];
	// inline asm
	prmt.b32 %r5711, %r5712, %r8735, %r73;
	// inline asm
	st.local.u32 	[%rd4], %r5711;
	st.local.v2.u32 	[%rd30+4], {%r8735, %r8735};
	st.local.u32 	[%rd30], %r8735;
	st.local.u32 	[%rd3], %r8735;
	st.local.v2.u32 	[%rd29+4], {%r8735, %r8735};
	st.local.u32 	[%rd29], %r8735;
	st.local.u32 	[%rd2], %r8735;
	st.local.v2.u32 	[%rd28+4], {%r8735, %r8735};
	st.local.u32 	[%rd28], %r8735;
	st.local.u32 	[%rd1], %r8735;
	mov.u32 	%r8748, %r8735;
	mov.u32 	%r8749, %r8735;
	mov.u32 	%r8750, %r8735;
	bra.uni 	BB4_411;

BB4_388:
	setp.gt.s32	%p200, %r2574, 29;
	@%p200 bra 	BB4_392;

	setp.eq.s32	%p203, %r2574, 28;
	@%p203 bra 	BB4_396;
	bra.uni 	BB4_390;

BB4_396:
	mov.u32 	%r8735, 0;
	// inline asm
	prmt.b32 %r8767, %r8735, %r2572, %r73;
	// inline asm
	ld.local.v2.u32 	{%r3167, %r3168}, [%rd35+4];
	// inline asm
	prmt.b32 %r8760, %r3168, %r3167, %r73;
	// inline asm
	ld.local.u32 	%r3040, [%rd35+4];
	ld.local.u32 	%r3041, [%rd35];
	// inline asm
	prmt.b32 %r8761, %r3040, %r3041, %r73;
	// inline asm
	ld.local.u32 	%r3044, [%rd35];
	ld.local.u32 	%r3045, [%rd8];
	// inline asm
	prmt.b32 %r8762, %r3044, %r3045, %r73;
	// inline asm
	ld.local.u32 	%r3048, [%rd8];
	ld.local.u32 	%r3049, [%rd34+8];
	// inline asm
	prmt.b32 %r8763, %r3048, %r3049, %r73;
	// inline asm
	ld.local.v2.u32 	{%r3169, %r3170}, [%rd34+4];
	// inline asm
	prmt.b32 %r8756, %r3170, %r3169, %r73;
	// inline asm
	ld.local.u32 	%r3056, [%rd34+4];
	ld.local.u32 	%r3057, [%rd34];
	// inline asm
	prmt.b32 %r8757, %r3056, %r3057, %r73;
	// inline asm
	ld.local.u32 	%r3060, [%rd34];
	ld.local.u32 	%r3061, [%rd7];
	// inline asm
	prmt.b32 %r8758, %r3060, %r3061, %r73;
	// inline asm
	ld.local.u32 	%r3064, [%rd7];
	ld.local.u32 	%r3065, [%rd33+8];
	// inline asm
	prmt.b32 %r8759, %r3064, %r3065, %r73;
	// inline asm
	ld.local.v2.u32 	{%r3171, %r3172}, [%rd33+4];
	// inline asm
	prmt.b32 %r8752, %r3172, %r3171, %r73;
	// inline asm
	ld.local.u32 	%r3072, [%rd33+4];
	ld.local.u32 	%r3073, [%rd33];
	// inline asm
	prmt.b32 %r8753, %r3072, %r3073, %r73;
	// inline asm
	ld.local.u32 	%r3076, [%rd33];
	ld.local.u32 	%r3077, [%rd6];
	// inline asm
	prmt.b32 %r8754, %r3076, %r3077, %r73;
	// inline asm
	ld.local.u32 	%r3080, [%rd6];
	ld.local.u32 	%r3081, [%rd32+8];
	// inline asm
	prmt.b32 %r8755, %r3080, %r3081, %r73;
	// inline asm
	ld.local.v2.u32 	{%r3173, %r3174}, [%rd32+4];
	// inline asm
	prmt.b32 %r8748, %r3174, %r3173, %r73;
	// inline asm
	ld.local.u32 	%r3088, [%rd32+4];
	ld.local.u32 	%r3089, [%rd32];
	// inline asm
	prmt.b32 %r8749, %r3088, %r3089, %r73;
	// inline asm
	ld.local.u32 	%r3092, [%rd32];
	ld.local.u32 	%r3093, [%rd5];
	// inline asm
	prmt.b32 %r8750, %r3092, %r3093, %r73;
	// inline asm
	ld.local.u32 	%r3096, [%rd5];
	ld.local.u32 	%r3097, [%rd31+8];
	// inline asm
	prmt.b32 %r8751, %r3096, %r3097, %r73;
	// inline asm
	ld.local.v2.u32 	{%r3175, %r3176}, [%rd31+4];
	// inline asm
	prmt.b32 %r8744, %r3176, %r3175, %r73;
	// inline asm
	ld.local.u32 	%r3104, [%rd31+4];
	ld.local.u32 	%r3105, [%rd31];
	// inline asm
	prmt.b32 %r8745, %r3104, %r3105, %r73;
	// inline asm
	ld.local.u32 	%r3108, [%rd31];
	ld.local.u32 	%r3109, [%rd4];
	// inline asm
	prmt.b32 %r8746, %r3108, %r3109, %r73;
	// inline asm
	ld.local.u32 	%r3112, [%rd4];
	ld.local.u32 	%r3113, [%rd30+8];
	// inline asm
	prmt.b32 %r8747, %r3112, %r3113, %r73;
	// inline asm
	ld.local.v2.u32 	{%r3177, %r3178}, [%rd30+4];
	// inline asm
	prmt.b32 %r8740, %r3178, %r3177, %r73;
	// inline asm
	ld.local.u32 	%r3120, [%rd30+4];
	ld.local.u32 	%r3121, [%rd30];
	// inline asm
	prmt.b32 %r8741, %r3120, %r3121, %r73;
	// inline asm
	ld.local.u32 	%r3124, [%rd30];
	ld.local.u32 	%r3125, [%rd3];
	// inline asm
	prmt.b32 %r8742, %r3124, %r3125, %r73;
	// inline asm
	ld.local.u32 	%r3128, [%rd3];
	ld.local.u32 	%r3129, [%rd29+8];
	// inline asm
	prmt.b32 %r8743, %r3128, %r3129, %r73;
	// inline asm
	ld.local.v2.u32 	{%r3179, %r3180}, [%rd29+4];
	// inline asm
	prmt.b32 %r8736, %r3180, %r3179, %r73;
	// inline asm
	ld.local.u32 	%r3136, [%rd29+4];
	ld.local.u32 	%r3137, [%rd29];
	// inline asm
	prmt.b32 %r8737, %r3136, %r3137, %r73;
	// inline asm
	ld.local.u32 	%r3140, [%rd29];
	ld.local.u32 	%r3141, [%rd2];
	// inline asm
	prmt.b32 %r8738, %r3140, %r3141, %r73;
	// inline asm
	ld.local.u32 	%r3144, [%rd2];
	ld.local.u32 	%r3145, [%rd28+8];
	// inline asm
	prmt.b32 %r8739, %r3144, %r3145, %r73;
	// inline asm
	ld.local.v2.u32 	{%r3181, %r3182}, [%rd28+4];
	// inline asm
	prmt.b32 %r3147, %r3182, %r3181, %r73;
	// inline asm
	st.local.u32 	[%rd35+8], %r3147;
	ld.local.u32 	%r3152, [%rd28+4];
	ld.local.u32 	%r3153, [%rd28];
	// inline asm
	prmt.b32 %r3151, %r3152, %r3153, %r73;
	// inline asm
	st.local.u32 	[%rd35+4], %r3151;
	ld.local.u32 	%r3156, [%rd28];
	ld.local.u32 	%r3157, [%rd1];
	// inline asm
	prmt.b32 %r3155, %r3156, %r3157, %r73;
	// inline asm
	st.local.u32 	[%rd35], %r3155;
	ld.local.u32 	%r3160, [%rd1];
	// inline asm
	prmt.b32 %r3159, %r3160, %r8735, %r73;
	// inline asm
	st.local.u32 	[%rd8], %r3159;
	st.local.v2.u32 	[%rd34+4], {%r8735, %r8735};
	st.local.u32 	[%rd34], %r8735;
	st.local.u32 	[%rd7], %r8735;
	st.local.v2.u32 	[%rd33+4], {%r8735, %r8735};
	st.local.u32 	[%rd33], %r8735;
	st.local.u32 	[%rd6], %r8735;
	st.local.v2.u32 	[%rd32+4], {%r8735, %r8735};
	st.local.u32 	[%rd32], %r8735;
	st.local.u32 	[%rd5], %r8735;
	st.local.v2.u32 	[%rd31+4], {%r8735, %r8735};
	st.local.u32 	[%rd31], %r8735;
	st.local.u32 	[%rd4], %r8735;
	st.local.v2.u32 	[%rd30+4], {%r8735, %r8735};
	st.local.u32 	[%rd30], %r8735;
	st.local.u32 	[%rd3], %r8735;
	st.local.v2.u32 	[%rd29+4], {%r8735, %r8735};
	st.local.u32 	[%rd29], %r8735;
	st.local.u32 	[%rd2], %r8735;
	st.local.v2.u32 	[%rd28+4], {%r8735, %r8735};
	st.local.u32 	[%rd28], %r8735;
	st.local.u32 	[%rd1], %r8735;
	mov.u32 	%r8764, %r8735;
	mov.u32 	%r8765, %r8735;
	mov.u32 	%r8766, %r8735;
	bra.uni 	BB4_419;

BB4_338:
	setp.eq.s32	%p240, %r2574, 2;
	@%p240 bra 	BB4_415;
	bra.uni 	BB4_339;

BB4_415:
	mov.u32 	%r8735, 0;
	// inline asm
	prmt.b32 %r8737, %r8735, %r2572, %r73;
	// inline asm
	ld.local.v2.u32 	{%r7470, %r7471}, [%rd35+4];
	// inline asm
	prmt.b32 %r8738, %r7471, %r7470, %r73;
	// inline asm
	ld.local.u32 	%r7317, [%rd35+4];
	ld.local.u32 	%r7318, [%rd35];
	// inline asm
	prmt.b32 %r8739, %r7317, %r7318, %r73;
	// inline asm
	ld.local.u32 	%r7321, [%rd35];
	ld.local.u32 	%r7322, [%rd8];
	// inline asm
	prmt.b32 %r7320, %r7321, %r7322, %r73;
	// inline asm
	st.local.u32 	[%rd35+8], %r7320;
	ld.local.u32 	%r7325, [%rd8];
	ld.local.u32 	%r7326, [%rd34+8];
	// inline asm
	prmt.b32 %r7324, %r7325, %r7326, %r73;
	// inline asm
	st.local.u32 	[%rd35+4], %r7324;
	ld.local.v2.u32 	{%r7472, %r7473}, [%rd34+4];
	// inline asm
	prmt.b32 %r7328, %r7473, %r7472, %r73;
	// inline asm
	st.local.u32 	[%rd35], %r7328;
	ld.local.u32 	%r7333, [%rd34+4];
	ld.local.u32 	%r7334, [%rd34];
	// inline asm
	prmt.b32 %r7332, %r7333, %r7334, %r73;
	// inline asm
	st.local.u32 	[%rd8], %r7332;
	ld.local.u32 	%r7337, [%rd34];
	ld.local.u32 	%r7338, [%rd7];
	// inline asm
	prmt.b32 %r7336, %r7337, %r7338, %r73;
	// inline asm
	st.local.u32 	[%rd34+8], %r7336;
	ld.local.u32 	%r7341, [%rd7];
	ld.local.u32 	%r7342, [%rd33+8];
	// inline asm
	prmt.b32 %r7340, %r7341, %r7342, %r73;
	// inline asm
	st.local.u32 	[%rd34+4], %r7340;
	ld.local.v2.u32 	{%r7474, %r7475}, [%rd33+4];
	// inline asm
	prmt.b32 %r7344, %r7475, %r7474, %r73;
	// inline asm
	st.local.u32 	[%rd34], %r7344;
	ld.local.u32 	%r7349, [%rd33+4];
	ld.local.u32 	%r7350, [%rd33];
	// inline asm
	prmt.b32 %r7348, %r7349, %r7350, %r73;
	// inline asm
	st.local.u32 	[%rd7], %r7348;
	ld.local.u32 	%r7353, [%rd33];
	ld.local.u32 	%r7354, [%rd6];
	// inline asm
	prmt.b32 %r7352, %r7353, %r7354, %r73;
	// inline asm
	st.local.u32 	[%rd33+8], %r7352;
	ld.local.u32 	%r7357, [%rd6];
	ld.local.u32 	%r7358, [%rd32+8];
	// inline asm
	prmt.b32 %r7356, %r7357, %r7358, %r73;
	// inline asm
	st.local.u32 	[%rd33+4], %r7356;
	ld.local.v2.u32 	{%r7476, %r7477}, [%rd32+4];
	// inline asm
	prmt.b32 %r7360, %r7477, %r7476, %r73;
	// inline asm
	st.local.u32 	[%rd33], %r7360;
	ld.local.u32 	%r7365, [%rd32+4];
	ld.local.u32 	%r7366, [%rd32];
	// inline asm
	prmt.b32 %r7364, %r7365, %r7366, %r73;
	// inline asm
	st.local.u32 	[%rd6], %r7364;
	ld.local.u32 	%r7369, [%rd32];
	ld.local.u32 	%r7370, [%rd5];
	// inline asm
	prmt.b32 %r7368, %r7369, %r7370, %r73;
	// inline asm
	st.local.u32 	[%rd32+8], %r7368;
	ld.local.u32 	%r7373, [%rd5];
	ld.local.u32 	%r7374, [%rd31+8];
	// inline asm
	prmt.b32 %r7372, %r7373, %r7374, %r73;
	// inline asm
	st.local.u32 	[%rd32+4], %r7372;
	ld.local.v2.u32 	{%r7478, %r7479}, [%rd31+4];
	// inline asm
	prmt.b32 %r7376, %r7479, %r7478, %r73;
	// inline asm
	st.local.u32 	[%rd32], %r7376;
	ld.local.u32 	%r7381, [%rd31+4];
	ld.local.u32 	%r7382, [%rd31];
	// inline asm
	prmt.b32 %r7380, %r7381, %r7382, %r73;
	// inline asm
	st.local.u32 	[%rd5], %r7380;
	ld.local.u32 	%r7385, [%rd31];
	ld.local.u32 	%r7386, [%rd4];
	// inline asm
	prmt.b32 %r7384, %r7385, %r7386, %r73;
	// inline asm
	st.local.u32 	[%rd31+8], %r7384;
	ld.local.u32 	%r7389, [%rd4];
	ld.local.u32 	%r7390, [%rd30+8];
	// inline asm
	prmt.b32 %r7388, %r7389, %r7390, %r73;
	// inline asm
	st.local.u32 	[%rd31+4], %r7388;
	ld.local.v2.u32 	{%r7480, %r7481}, [%rd30+4];
	// inline asm
	prmt.b32 %r7392, %r7481, %r7480, %r73;
	// inline asm
	st.local.u32 	[%rd31], %r7392;
	ld.local.u32 	%r7397, [%rd30+4];
	ld.local.u32 	%r7398, [%rd30];
	// inline asm
	prmt.b32 %r7396, %r7397, %r7398, %r73;
	// inline asm
	st.local.u32 	[%rd4], %r7396;
	ld.local.u32 	%r7401, [%rd30];
	ld.local.u32 	%r7402, [%rd3];
	// inline asm
	prmt.b32 %r7400, %r7401, %r7402, %r73;
	// inline asm
	st.local.u32 	[%rd30+8], %r7400;
	ld.local.u32 	%r7405, [%rd3];
	ld.local.u32 	%r7406, [%rd29+8];
	// inline asm
	prmt.b32 %r7404, %r7405, %r7406, %r73;
	// inline asm
	st.local.u32 	[%rd30+4], %r7404;
	ld.local.v2.u32 	{%r7482, %r7483}, [%rd29+4];
	// inline asm
	prmt.b32 %r7408, %r7483, %r7482, %r73;
	// inline asm
	st.local.u32 	[%rd30], %r7408;
	ld.local.u32 	%r7413, [%rd29+4];
	ld.local.u32 	%r7414, [%rd29];
	// inline asm
	prmt.b32 %r7412, %r7413, %r7414, %r73;
	// inline asm
	st.local.u32 	[%rd3], %r7412;
	ld.local.u32 	%r7417, [%rd29];
	ld.local.u32 	%r7418, [%rd2];
	// inline asm
	prmt.b32 %r7416, %r7417, %r7418, %r73;
	// inline asm
	st.local.u32 	[%rd29+8], %r7416;
	ld.local.u32 	%r7421, [%rd2];
	ld.local.u32 	%r7422, [%rd28+8];
	// inline asm
	prmt.b32 %r7420, %r7421, %r7422, %r73;
	// inline asm
	st.local.u32 	[%rd29+4], %r7420;
	ld.local.v2.u32 	{%r7484, %r7485}, [%rd28+4];
	// inline asm
	prmt.b32 %r7424, %r7485, %r7484, %r73;
	// inline asm
	st.local.u32 	[%rd29], %r7424;
	ld.local.u32 	%r7429, [%rd28+4];
	ld.local.u32 	%r7430, [%rd28];
	// inline asm
	prmt.b32 %r7428, %r7429, %r7430, %r73;
	// inline asm
	st.local.u32 	[%rd2], %r7428;
	ld.local.u32 	%r7433, [%rd28];
	ld.local.u32 	%r7434, [%rd1];
	// inline asm
	prmt.b32 %r7432, %r7433, %r7434, %r73;
	// inline asm
	st.local.u32 	[%rd28+8], %r7432;
	ld.local.u32 	%r7437, [%rd1];
	// inline asm
	prmt.b32 %r7436, %r7437, %r8735, %r73;
	// inline asm
	st.local.u32 	[%rd28+4], %r7436;
	st.local.u32 	[%rd28], %r8735;
	st.local.u32 	[%rd1], %r8735;
	mov.u32 	%r8736, %r8735;
	bra.uni 	BB4_341;

BB4_370:
	setp.eq.s32	%p217, %r2574, 18;
	@%p217 bra 	BB4_401;
	bra.uni 	BB4_371;

BB4_401:
	mov.u32 	%r8735, 0;
	// inline asm
	prmt.b32 %r8753, %r8735, %r2572, %r73;
	// inline asm
	ld.local.v2.u32 	{%r4742, %r4743}, [%rd35+4];
	// inline asm
	prmt.b32 %r8754, %r4743, %r4742, %r73;
	// inline asm
	ld.local.u32 	%r4605, [%rd35+4];
	ld.local.u32 	%r4606, [%rd35];
	// inline asm
	prmt.b32 %r8755, %r4605, %r4606, %r73;
	// inline asm
	ld.local.u32 	%r4609, [%rd35];
	ld.local.u32 	%r4610, [%rd8];
	// inline asm
	prmt.b32 %r8748, %r4609, %r4610, %r73;
	// inline asm
	ld.local.u32 	%r4613, [%rd8];
	ld.local.u32 	%r4614, [%rd34+8];
	// inline asm
	prmt.b32 %r8749, %r4613, %r4614, %r73;
	// inline asm
	ld.local.v2.u32 	{%r4744, %r4745}, [%rd34+4];
	// inline asm
	prmt.b32 %r8750, %r4745, %r4744, %r73;
	// inline asm
	ld.local.u32 	%r4621, [%rd34+4];
	ld.local.u32 	%r4622, [%rd34];
	// inline asm
	prmt.b32 %r8751, %r4621, %r4622, %r73;
	// inline asm
	ld.local.u32 	%r4625, [%rd34];
	ld.local.u32 	%r4626, [%rd7];
	// inline asm
	prmt.b32 %r8744, %r4625, %r4626, %r73;
	// inline asm
	ld.local.u32 	%r4629, [%rd7];
	ld.local.u32 	%r4630, [%rd33+8];
	// inline asm
	prmt.b32 %r8745, %r4629, %r4630, %r73;
	// inline asm
	ld.local.v2.u32 	{%r4746, %r4747}, [%rd33+4];
	// inline asm
	prmt.b32 %r8746, %r4747, %r4746, %r73;
	// inline asm
	ld.local.u32 	%r4637, [%rd33+4];
	ld.local.u32 	%r4638, [%rd33];
	// inline asm
	prmt.b32 %r8747, %r4637, %r4638, %r73;
	// inline asm
	ld.local.u32 	%r4641, [%rd33];
	ld.local.u32 	%r4642, [%rd6];
	// inline asm
	prmt.b32 %r8740, %r4641, %r4642, %r73;
	// inline asm
	ld.local.u32 	%r4645, [%rd6];
	ld.local.u32 	%r4646, [%rd32+8];
	// inline asm
	prmt.b32 %r8741, %r4645, %r4646, %r73;
	// inline asm
	ld.local.v2.u32 	{%r4748, %r4749}, [%rd32+4];
	// inline asm
	prmt.b32 %r8742, %r4749, %r4748, %r73;
	// inline asm
	ld.local.u32 	%r4653, [%rd32+4];
	ld.local.u32 	%r4654, [%rd32];
	// inline asm
	prmt.b32 %r8743, %r4653, %r4654, %r73;
	// inline asm
	ld.local.u32 	%r4657, [%rd32];
	ld.local.u32 	%r4658, [%rd5];
	// inline asm
	prmt.b32 %r8736, %r4657, %r4658, %r73;
	// inline asm
	ld.local.u32 	%r4661, [%rd5];
	ld.local.u32 	%r4662, [%rd31+8];
	// inline asm
	prmt.b32 %r8737, %r4661, %r4662, %r73;
	// inline asm
	ld.local.v2.u32 	{%r4750, %r4751}, [%rd31+4];
	// inline asm
	prmt.b32 %r8738, %r4751, %r4750, %r73;
	// inline asm
	ld.local.u32 	%r4669, [%rd31+4];
	ld.local.u32 	%r4670, [%rd31];
	// inline asm
	prmt.b32 %r8739, %r4669, %r4670, %r73;
	// inline asm
	ld.local.u32 	%r4673, [%rd31];
	ld.local.u32 	%r4674, [%rd4];
	// inline asm
	prmt.b32 %r4672, %r4673, %r4674, %r73;
	// inline asm
	st.local.u32 	[%rd35+8], %r4672;
	ld.local.u32 	%r4677, [%rd4];
	ld.local.u32 	%r4678, [%rd30+8];
	// inline asm
	prmt.b32 %r4676, %r4677, %r4678, %r73;
	// inline asm
	st.local.u32 	[%rd35+4], %r4676;
	ld.local.v2.u32 	{%r4752, %r4753}, [%rd30+4];
	// inline asm
	prmt.b32 %r4680, %r4753, %r4752, %r73;
	// inline asm
	st.local.u32 	[%rd35], %r4680;
	ld.local.u32 	%r4685, [%rd30+4];
	ld.local.u32 	%r4686, [%rd30];
	// inline asm
	prmt.b32 %r4684, %r4685, %r4686, %r73;
	// inline asm
	st.local.u32 	[%rd8], %r4684;
	ld.local.u32 	%r4689, [%rd30];
	ld.local.u32 	%r4690, [%rd3];
	// inline asm
	prmt.b32 %r4688, %r4689, %r4690, %r73;
	// inline asm
	st.local.u32 	[%rd34+8], %r4688;
	ld.local.u32 	%r4693, [%rd3];
	ld.local.u32 	%r4694, [%rd29+8];
	// inline asm
	prmt.b32 %r4692, %r4693, %r4694, %r73;
	// inline asm
	st.local.u32 	[%rd34+4], %r4692;
	ld.local.v2.u32 	{%r4754, %r4755}, [%rd29+4];
	// inline asm
	prmt.b32 %r4696, %r4755, %r4754, %r73;
	// inline asm
	st.local.u32 	[%rd34], %r4696;
	ld.local.u32 	%r4701, [%rd29+4];
	ld.local.u32 	%r4702, [%rd29];
	// inline asm
	prmt.b32 %r4700, %r4701, %r4702, %r73;
	// inline asm
	st.local.u32 	[%rd7], %r4700;
	ld.local.u32 	%r4705, [%rd29];
	ld.local.u32 	%r4706, [%rd2];
	// inline asm
	prmt.b32 %r4704, %r4705, %r4706, %r73;
	// inline asm
	st.local.u32 	[%rd33+8], %r4704;
	ld.local.u32 	%r4709, [%rd2];
	ld.local.u32 	%r4710, [%rd28+8];
	// inline asm
	prmt.b32 %r4708, %r4709, %r4710, %r73;
	// inline asm
	st.local.u32 	[%rd33+4], %r4708;
	ld.local.v2.u32 	{%r4756, %r4757}, [%rd28+4];
	// inline asm
	prmt.b32 %r4712, %r4757, %r4756, %r73;
	// inline asm
	st.local.u32 	[%rd33], %r4712;
	ld.local.u32 	%r4717, [%rd28+4];
	ld.local.u32 	%r4718, [%rd28];
	// inline asm
	prmt.b32 %r4716, %r4717, %r4718, %r73;
	// inline asm
	st.local.u32 	[%rd6], %r4716;
	ld.local.u32 	%r4721, [%rd28];
	ld.local.u32 	%r4722, [%rd1];
	// inline asm
	prmt.b32 %r4720, %r4721, %r4722, %r73;
	// inline asm
	st.local.u32 	[%rd32+8], %r4720;
	ld.local.u32 	%r4725, [%rd1];
	// inline asm
	prmt.b32 %r4724, %r4725, %r8735, %r73;
	// inline asm
	st.local.u32 	[%rd32+4], %r4724;
	st.local.u32 	[%rd32], %r8735;
	st.local.u32 	[%rd5], %r8735;
	st.local.v2.u32 	[%rd31+4], {%r8735, %r8735};
	st.local.u32 	[%rd31], %r8735;
	st.local.u32 	[%rd4], %r8735;
	st.local.v2.u32 	[%rd30+4], {%r8735, %r8735};
	st.local.u32 	[%rd30], %r8735;
	st.local.u32 	[%rd3], %r8735;
	st.local.v2.u32 	[%rd29+4], {%r8735, %r8735};
	st.local.u32 	[%rd29], %r8735;
	st.local.u32 	[%rd2], %r8735;
	st.local.v2.u32 	[%rd28+4], {%r8735, %r8735};
	st.local.u32 	[%rd28], %r8735;
	st.local.u32 	[%rd1], %r8735;
	mov.u32 	%r8752, %r8735;
	bra.uni 	BB4_412;

BB4_354:
	setp.eq.s32	%p229, %r2574, 10;
	@%p229 bra 	BB4_405;
	bra.uni 	BB4_355;

BB4_405:
	mov.u32 	%r8735, 0;
	// inline asm
	prmt.b32 %r8745, %r8735, %r2572, %r73;
	// inline asm
	ld.local.v2.u32 	{%r6074, %r6075}, [%rd35+4];
	// inline asm
	prmt.b32 %r8746, %r6075, %r6074, %r73;
	// inline asm
	ld.local.u32 	%r5929, [%rd35+4];
	ld.local.u32 	%r5930, [%rd35];
	// inline asm
	prmt.b32 %r8747, %r5929, %r5930, %r73;
	// inline asm
	ld.local.u32 	%r5933, [%rd35];
	ld.local.u32 	%r5934, [%rd8];
	// inline asm
	prmt.b32 %r8740, %r5933, %r5934, %r73;
	// inline asm
	ld.local.u32 	%r5937, [%rd8];
	ld.local.u32 	%r5938, [%rd34+8];
	// inline asm
	prmt.b32 %r8741, %r5937, %r5938, %r73;
	// inline asm
	ld.local.v2.u32 	{%r6076, %r6077}, [%rd34+4];
	// inline asm
	prmt.b32 %r8742, %r6077, %r6076, %r73;
	// inline asm
	ld.local.u32 	%r5945, [%rd34+4];
	ld.local.u32 	%r5946, [%rd34];
	// inline asm
	prmt.b32 %r8743, %r5945, %r5946, %r73;
	// inline asm
	ld.local.u32 	%r5949, [%rd34];
	ld.local.u32 	%r5950, [%rd7];
	// inline asm
	prmt.b32 %r8736, %r5949, %r5950, %r73;
	// inline asm
	ld.local.u32 	%r5953, [%rd7];
	ld.local.u32 	%r5954, [%rd33+8];
	// inline asm
	prmt.b32 %r8737, %r5953, %r5954, %r73;
	// inline asm
	ld.local.v2.u32 	{%r6078, %r6079}, [%rd33+4];
	// inline asm
	prmt.b32 %r8738, %r6079, %r6078, %r73;
	// inline asm
	ld.local.u32 	%r5961, [%rd33+4];
	ld.local.u32 	%r5962, [%rd33];
	// inline asm
	prmt.b32 %r8739, %r5961, %r5962, %r73;
	// inline asm
	ld.local.u32 	%r5965, [%rd33];
	ld.local.u32 	%r5966, [%rd6];
	// inline asm
	prmt.b32 %r5964, %r5965, %r5966, %r73;
	// inline asm
	st.local.u32 	[%rd35+8], %r5964;
	ld.local.u32 	%r5969, [%rd6];
	ld.local.u32 	%r5970, [%rd32+8];
	// inline asm
	prmt.b32 %r5968, %r5969, %r5970, %r73;
	// inline asm
	st.local.u32 	[%rd35+4], %r5968;
	ld.local.v2.u32 	{%r6080, %r6081}, [%rd32+4];
	// inline asm
	prmt.b32 %r5972, %r6081, %r6080, %r73;
	// inline asm
	st.local.u32 	[%rd35], %r5972;
	ld.local.u32 	%r5977, [%rd32+4];
	ld.local.u32 	%r5978, [%rd32];
	// inline asm
	prmt.b32 %r5976, %r5977, %r5978, %r73;
	// inline asm
	st.local.u32 	[%rd8], %r5976;
	ld.local.u32 	%r5981, [%rd32];
	ld.local.u32 	%r5982, [%rd5];
	// inline asm
	prmt.b32 %r5980, %r5981, %r5982, %r73;
	// inline asm
	st.local.u32 	[%rd34+8], %r5980;
	ld.local.u32 	%r5985, [%rd5];
	ld.local.u32 	%r5986, [%rd31+8];
	// inline asm
	prmt.b32 %r5984, %r5985, %r5986, %r73;
	// inline asm
	st.local.u32 	[%rd34+4], %r5984;
	ld.local.v2.u32 	{%r6082, %r6083}, [%rd31+4];
	// inline asm
	prmt.b32 %r5988, %r6083, %r6082, %r73;
	// inline asm
	st.local.u32 	[%rd34], %r5988;
	ld.local.u32 	%r5993, [%rd31+4];
	ld.local.u32 	%r5994, [%rd31];
	// inline asm
	prmt.b32 %r5992, %r5993, %r5994, %r73;
	// inline asm
	st.local.u32 	[%rd7], %r5992;
	ld.local.u32 	%r5997, [%rd31];
	ld.local.u32 	%r5998, [%rd4];
	// inline asm
	prmt.b32 %r5996, %r5997, %r5998, %r73;
	// inline asm
	st.local.u32 	[%rd33+8], %r5996;
	ld.local.u32 	%r6001, [%rd4];
	ld.local.u32 	%r6002, [%rd30+8];
	// inline asm
	prmt.b32 %r6000, %r6001, %r6002, %r73;
	// inline asm
	st.local.u32 	[%rd33+4], %r6000;
	ld.local.v2.u32 	{%r6084, %r6085}, [%rd30+4];
	// inline asm
	prmt.b32 %r6004, %r6085, %r6084, %r73;
	// inline asm
	st.local.u32 	[%rd33], %r6004;
	ld.local.u32 	%r6009, [%rd30+4];
	ld.local.u32 	%r6010, [%rd30];
	// inline asm
	prmt.b32 %r6008, %r6009, %r6010, %r73;
	// inline asm
	st.local.u32 	[%rd6], %r6008;
	ld.local.u32 	%r6013, [%rd30];
	ld.local.u32 	%r6014, [%rd3];
	// inline asm
	prmt.b32 %r6012, %r6013, %r6014, %r73;
	// inline asm
	st.local.u32 	[%rd32+8], %r6012;
	ld.local.u32 	%r6017, [%rd3];
	ld.local.u32 	%r6018, [%rd29+8];
	// inline asm
	prmt.b32 %r6016, %r6017, %r6018, %r73;
	// inline asm
	st.local.u32 	[%rd32+4], %r6016;
	ld.local.v2.u32 	{%r6086, %r6087}, [%rd29+4];
	// inline asm
	prmt.b32 %r6020, %r6087, %r6086, %r73;
	// inline asm
	st.local.u32 	[%rd32], %r6020;
	ld.local.u32 	%r6025, [%rd29+4];
	ld.local.u32 	%r6026, [%rd29];
	// inline asm
	prmt.b32 %r6024, %r6025, %r6026, %r73;
	// inline asm
	st.local.u32 	[%rd5], %r6024;
	ld.local.u32 	%r6029, [%rd29];
	ld.local.u32 	%r6030, [%rd2];
	// inline asm
	prmt.b32 %r6028, %r6029, %r6030, %r73;
	// inline asm
	st.local.u32 	[%rd31+8], %r6028;
	ld.local.u32 	%r6033, [%rd2];
	ld.local.u32 	%r6034, [%rd28+8];
	// inline asm
	prmt.b32 %r6032, %r6033, %r6034, %r73;
	// inline asm
	st.local.u32 	[%rd31+4], %r6032;
	ld.local.v2.u32 	{%r6088, %r6089}, [%rd28+4];
	// inline asm
	prmt.b32 %r6036, %r6089, %r6088, %r73;
	// inline asm
	st.local.u32 	[%rd31], %r6036;
	ld.local.u32 	%r6041, [%rd28+4];
	ld.local.u32 	%r6042, [%rd28];
	// inline asm
	prmt.b32 %r6040, %r6041, %r6042, %r73;
	// inline asm
	st.local.u32 	[%rd4], %r6040;
	ld.local.u32 	%r6045, [%rd28];
	ld.local.u32 	%r6046, [%rd1];
	// inline asm
	prmt.b32 %r6044, %r6045, %r6046, %r73;
	// inline asm
	st.local.u32 	[%rd30+8], %r6044;
	ld.local.u32 	%r6049, [%rd1];
	// inline asm
	prmt.b32 %r6048, %r6049, %r8735, %r73;
	// inline asm
	st.local.u32 	[%rd30+4], %r6048;
	st.local.u32 	[%rd30], %r8735;
	st.local.u32 	[%rd3], %r8735;
	st.local.v2.u32 	[%rd29+4], {%r8735, %r8735};
	st.local.u32 	[%rd29], %r8735;
	st.local.u32 	[%rd2], %r8735;
	st.local.v2.u32 	[%rd28+4], {%r8735, %r8735};
	st.local.u32 	[%rd28], %r8735;
	st.local.u32 	[%rd1], %r8735;
	mov.u32 	%r8744, %r8735;
	bra.uni 	BB4_410;

BB4_385:
	setp.eq.s32	%p206, %r2574, 26;
	@%p206 bra 	BB4_397;
	bra.uni 	BB4_386;

BB4_397:
	mov.u32 	%r8735, 0;
	// inline asm
	prmt.b32 %r8761, %r8735, %r2572, %r73;
	// inline asm
	ld.local.v2.u32 	{%r3474, %r3475}, [%rd35+4];
	// inline asm
	prmt.b32 %r8762, %r3475, %r3474, %r73;
	// inline asm
	ld.local.u32 	%r3345, [%rd35+4];
	ld.local.u32 	%r3346, [%rd35];
	// inline asm
	prmt.b32 %r8763, %r3345, %r3346, %r73;
	// inline asm
	ld.local.u32 	%r3349, [%rd35];
	ld.local.u32 	%r3350, [%rd8];
	// inline asm
	prmt.b32 %r8756, %r3349, %r3350, %r73;
	// inline asm
	ld.local.u32 	%r3353, [%rd8];
	ld.local.u32 	%r3354, [%rd34+8];
	// inline asm
	prmt.b32 %r8757, %r3353, %r3354, %r73;
	// inline asm
	ld.local.v2.u32 	{%r3476, %r3477}, [%rd34+4];
	// inline asm
	prmt.b32 %r8758, %r3477, %r3476, %r73;
	// inline asm
	ld.local.u32 	%r3361, [%rd34+4];
	ld.local.u32 	%r3362, [%rd34];
	// inline asm
	prmt.b32 %r8759, %r3361, %r3362, %r73;
	// inline asm
	ld.local.u32 	%r3365, [%rd34];
	ld.local.u32 	%r3366, [%rd7];
	// inline asm
	prmt.b32 %r8752, %r3365, %r3366, %r73;
	// inline asm
	ld.local.u32 	%r3369, [%rd7];
	ld.local.u32 	%r3370, [%rd33+8];
	// inline asm
	prmt.b32 %r8753, %r3369, %r3370, %r73;
	// inline asm
	ld.local.v2.u32 	{%r3478, %r3479}, [%rd33+4];
	// inline asm
	prmt.b32 %r8754, %r3479, %r3478, %r73;
	// inline asm
	ld.local.u32 	%r3377, [%rd33+4];
	ld.local.u32 	%r3378, [%rd33];
	// inline asm
	prmt.b32 %r8755, %r3377, %r3378, %r73;
	// inline asm
	ld.local.u32 	%r3381, [%rd33];
	ld.local.u32 	%r3382, [%rd6];
	// inline asm
	prmt.b32 %r8748, %r3381, %r3382, %r73;
	// inline asm
	ld.local.u32 	%r3385, [%rd6];
	ld.local.u32 	%r3386, [%rd32+8];
	// inline asm
	prmt.b32 %r8749, %r3385, %r3386, %r73;
	// inline asm
	ld.local.v2.u32 	{%r3480, %r3481}, [%rd32+4];
	// inline asm
	prmt.b32 %r8750, %r3481, %r3480, %r73;
	// inline asm
	ld.local.u32 	%r3393, [%rd32+4];
	ld.local.u32 	%r3394, [%rd32];
	// inline asm
	prmt.b32 %r8751, %r3393, %r3394, %r73;
	// inline asm
	ld.local.u32 	%r3397, [%rd32];
	ld.local.u32 	%r3398, [%rd5];
	// inline asm
	prmt.b32 %r8744, %r3397, %r3398, %r73;
	// inline asm
	ld.local.u32 	%r3401, [%rd5];
	ld.local.u32 	%r3402, [%rd31+8];
	// inline asm
	prmt.b32 %r8745, %r3401, %r3402, %r73;
	// inline asm
	ld.local.v2.u32 	{%r3482, %r3483}, [%rd31+4];
	// inline asm
	prmt.b32 %r8746, %r3483, %r3482, %r73;
	// inline asm
	ld.local.u32 	%r3409, [%rd31+4];
	ld.local.u32 	%r3410, [%rd31];
	// inline asm
	prmt.b32 %r8747, %r3409, %r3410, %r73;
	// inline asm
	ld.local.u32 	%r3413, [%rd31];
	ld.local.u32 	%r3414, [%rd4];
	// inline asm
	prmt.b32 %r8740, %r3413, %r3414, %r73;
	// inline asm
	ld.local.u32 	%r3417, [%rd4];
	ld.local.u32 	%r3418, [%rd30+8];
	// inline asm
	prmt.b32 %r8741, %r3417, %r3418, %r73;
	// inline asm
	ld.local.v2.u32 	{%r3484, %r3485}, [%rd30+4];
	// inline asm
	prmt.b32 %r8742, %r3485, %r3484, %r73;
	// inline asm
	ld.local.u32 	%r3425, [%rd30+4];
	ld.local.u32 	%r3426, [%rd30];
	// inline asm
	prmt.b32 %r8743, %r3425, %r3426, %r73;
	// inline asm
	ld.local.u32 	%r3429, [%rd30];
	ld.local.u32 	%r3430, [%rd3];
	// inline asm
	prmt.b32 %r8736, %r3429, %r3430, %r73;
	// inline asm
	ld.local.u32 	%r3433, [%rd3];
	ld.local.u32 	%r3434, [%rd29+8];
	// inline asm
	prmt.b32 %r8737, %r3433, %r3434, %r73;
	// inline asm
	ld.local.v2.u32 	{%r3486, %r3487}, [%rd29+4];
	// inline asm
	prmt.b32 %r8738, %r3487, %r3486, %r73;
	// inline asm
	ld.local.u32 	%r3441, [%rd29+4];
	ld.local.u32 	%r3442, [%rd29];
	// inline asm
	prmt.b32 %r8739, %r3441, %r3442, %r73;
	// inline asm
	ld.local.u32 	%r3445, [%rd29];
	ld.local.u32 	%r3446, [%rd2];
	// inline asm
	prmt.b32 %r3444, %r3445, %r3446, %r73;
	// inline asm
	st.local.u32 	[%rd35+8], %r3444;
	ld.local.u32 	%r3449, [%rd2];
	ld.local.u32 	%r3450, [%rd28+8];
	// inline asm
	prmt.b32 %r3448, %r3449, %r3450, %r73;
	// inline asm
	st.local.u32 	[%rd35+4], %r3448;
	ld.local.v2.u32 	{%r3488, %r3489}, [%rd28+4];
	// inline asm
	prmt.b32 %r3452, %r3489, %r3488, %r73;
	// inline asm
	st.local.u32 	[%rd35], %r3452;
	ld.local.u32 	%r3457, [%rd28+4];
	ld.local.u32 	%r3458, [%rd28];
	// inline asm
	prmt.b32 %r3456, %r3457, %r3458, %r73;
	// inline asm
	st.local.u32 	[%rd8], %r3456;
	ld.local.u32 	%r3461, [%rd28];
	ld.local.u32 	%r3462, [%rd1];
	// inline asm
	prmt.b32 %r3460, %r3461, %r3462, %r73;
	// inline asm
	st.local.u32 	[%rd34+8], %r3460;
	ld.local.u32 	%r3465, [%rd1];
	// inline asm
	prmt.b32 %r3464, %r3465, %r8735, %r73;
	// inline asm
	st.local.u32 	[%rd34+4], %r3464;
	st.local.u32 	[%rd34], %r8735;
	st.local.u32 	[%rd7], %r8735;
	st.local.v2.u32 	[%rd33+4], {%r8735, %r8735};
	st.local.u32 	[%rd33], %r8735;
	st.local.u32 	[%rd6], %r8735;
	st.local.v2.u32 	[%rd32+4], {%r8735, %r8735};
	st.local.u32 	[%rd32], %r8735;
	st.local.u32 	[%rd5], %r8735;
	st.local.v2.u32 	[%rd31+4], {%r8735, %r8735};
	st.local.u32 	[%rd31], %r8735;
	st.local.u32 	[%rd4], %r8735;
	st.local.v2.u32 	[%rd30+4], {%r8735, %r8735};
	st.local.u32 	[%rd30], %r8735;
	st.local.u32 	[%rd3], %r8735;
	st.local.v2.u32 	[%rd29+4], {%r8735, %r8735};
	st.local.u32 	[%rd29], %r8735;
	st.local.u32 	[%rd2], %r8735;
	st.local.v2.u32 	[%rd28+4], {%r8735, %r8735};
	st.local.u32 	[%rd28], %r8735;
	st.local.u32 	[%rd1], %r8735;
	mov.u32 	%r8760, %r8735;
	bra.uni 	BB4_414;

BB4_346:
	setp.eq.s32	%p235, %r2574, 6;
	@%p235 bra 	BB4_407;
	bra.uni 	BB4_347;

BB4_407:
	mov.u32 	%r8735, 0;
	// inline asm
	prmt.b32 %r8741, %r8735, %r2572, %r73;
	// inline asm
	ld.local.v2.u32 	{%r6764, %r6765}, [%rd35+4];
	// inline asm
	prmt.b32 %r8742, %r6765, %r6764, %r73;
	// inline asm
	ld.local.u32 	%r6615, [%rd35+4];
	ld.local.u32 	%r6616, [%rd35];
	// inline asm
	prmt.b32 %r8743, %r6615, %r6616, %r73;
	// inline asm
	ld.local.u32 	%r6619, [%rd35];
	ld.local.u32 	%r6620, [%rd8];
	// inline asm
	prmt.b32 %r8736, %r6619, %r6620, %r73;
	// inline asm
	ld.local.u32 	%r6623, [%rd8];
	ld.local.u32 	%r6624, [%rd34+8];
	// inline asm
	prmt.b32 %r8737, %r6623, %r6624, %r73;
	// inline asm
	ld.local.v2.u32 	{%r6766, %r6767}, [%rd34+4];
	// inline asm
	prmt.b32 %r8738, %r6767, %r6766, %r73;
	// inline asm
	ld.local.u32 	%r6631, [%rd34+4];
	ld.local.u32 	%r6632, [%rd34];
	// inline asm
	prmt.b32 %r8739, %r6631, %r6632, %r73;
	// inline asm
	ld.local.u32 	%r6635, [%rd34];
	ld.local.u32 	%r6636, [%rd7];
	// inline asm
	prmt.b32 %r6634, %r6635, %r6636, %r73;
	// inline asm
	st.local.u32 	[%rd35+8], %r6634;
	ld.local.u32 	%r6639, [%rd7];
	ld.local.u32 	%r6640, [%rd33+8];
	// inline asm
	prmt.b32 %r6638, %r6639, %r6640, %r73;
	// inline asm
	st.local.u32 	[%rd35+4], %r6638;
	ld.local.v2.u32 	{%r6768, %r6769}, [%rd33+4];
	// inline asm
	prmt.b32 %r6642, %r6769, %r6768, %r73;
	// inline asm
	st.local.u32 	[%rd35], %r6642;
	ld.local.u32 	%r6647, [%rd33+4];
	ld.local.u32 	%r6648, [%rd33];
	// inline asm
	prmt.b32 %r6646, %r6647, %r6648, %r73;
	// inline asm
	st.local.u32 	[%rd8], %r6646;
	ld.local.u32 	%r6651, [%rd33];
	ld.local.u32 	%r6652, [%rd6];
	// inline asm
	prmt.b32 %r6650, %r6651, %r6652, %r73;
	// inline asm
	st.local.u32 	[%rd34+8], %r6650;
	ld.local.u32 	%r6655, [%rd6];
	ld.local.u32 	%r6656, [%rd32+8];
	// inline asm
	prmt.b32 %r6654, %r6655, %r6656, %r73;
	// inline asm
	st.local.u32 	[%rd34+4], %r6654;
	ld.local.v2.u32 	{%r6770, %r6771}, [%rd32+4];
	// inline asm
	prmt.b32 %r6658, %r6771, %r6770, %r73;
	// inline asm
	st.local.u32 	[%rd34], %r6658;
	ld.local.u32 	%r6663, [%rd32+4];
	ld.local.u32 	%r6664, [%rd32];
	// inline asm
	prmt.b32 %r6662, %r6663, %r6664, %r73;
	// inline asm
	st.local.u32 	[%rd7], %r6662;
	ld.local.u32 	%r6667, [%rd32];
	ld.local.u32 	%r6668, [%rd5];
	// inline asm
	prmt.b32 %r6666, %r6667, %r6668, %r73;
	// inline asm
	st.local.u32 	[%rd33+8], %r6666;
	ld.local.u32 	%r6671, [%rd5];
	ld.local.u32 	%r6672, [%rd31+8];
	// inline asm
	prmt.b32 %r6670, %r6671, %r6672, %r73;
	// inline asm
	st.local.u32 	[%rd33+4], %r6670;
	ld.local.v2.u32 	{%r6772, %r6773}, [%rd31+4];
	// inline asm
	prmt.b32 %r6674, %r6773, %r6772, %r73;
	// inline asm
	st.local.u32 	[%rd33], %r6674;
	ld.local.u32 	%r6679, [%rd31+4];
	ld.local.u32 	%r6680, [%rd31];
	// inline asm
	prmt.b32 %r6678, %r6679, %r6680, %r73;
	// inline asm
	st.local.u32 	[%rd6], %r6678;
	ld.local.u32 	%r6683, [%rd31];
	ld.local.u32 	%r6684, [%rd4];
	// inline asm
	prmt.b32 %r6682, %r6683, %r6684, %r73;
	// inline asm
	st.local.u32 	[%rd32+8], %r6682;
	ld.local.u32 	%r6687, [%rd4];
	ld.local.u32 	%r6688, [%rd30+8];
	// inline asm
	prmt.b32 %r6686, %r6687, %r6688, %r73;
	// inline asm
	st.local.u32 	[%rd32+4], %r6686;
	ld.local.v2.u32 	{%r6774, %r6775}, [%rd30+4];
	// inline asm
	prmt.b32 %r6690, %r6775, %r6774, %r73;
	// inline asm
	st.local.u32 	[%rd32], %r6690;
	ld.local.u32 	%r6695, [%rd30+4];
	ld.local.u32 	%r6696, [%rd30];
	// inline asm
	prmt.b32 %r6694, %r6695, %r6696, %r73;
	// inline asm
	st.local.u32 	[%rd5], %r6694;
	ld.local.u32 	%r6699, [%rd30];
	ld.local.u32 	%r6700, [%rd3];
	// inline asm
	prmt.b32 %r6698, %r6699, %r6700, %r73;
	// inline asm
	st.local.u32 	[%rd31+8], %r6698;
	ld.local.u32 	%r6703, [%rd3];
	ld.local.u32 	%r6704, [%rd29+8];
	// inline asm
	prmt.b32 %r6702, %r6703, %r6704, %r73;
	// inline asm
	st.local.u32 	[%rd31+4], %r6702;
	ld.local.v2.u32 	{%r6776, %r6777}, [%rd29+4];
	// inline asm
	prmt.b32 %r6706, %r6777, %r6776, %r73;
	// inline asm
	st.local.u32 	[%rd31], %r6706;
	ld.local.u32 	%r6711, [%rd29+4];
	ld.local.u32 	%r6712, [%rd29];
	// inline asm
	prmt.b32 %r6710, %r6711, %r6712, %r73;
	// inline asm
	st.local.u32 	[%rd4], %r6710;
	ld.local.u32 	%r6715, [%rd29];
	ld.local.u32 	%r6716, [%rd2];
	// inline asm
	prmt.b32 %r6714, %r6715, %r6716, %r73;
	// inline asm
	st.local.u32 	[%rd30+8], %r6714;
	ld.local.u32 	%r6719, [%rd2];
	ld.local.u32 	%r6720, [%rd28+8];
	// inline asm
	prmt.b32 %r6718, %r6719, %r6720, %r73;
	// inline asm
	st.local.u32 	[%rd30+4], %r6718;
	ld.local.v2.u32 	{%r6778, %r6779}, [%rd28+4];
	// inline asm
	prmt.b32 %r6722, %r6779, %r6778, %r73;
	// inline asm
	st.local.u32 	[%rd30], %r6722;
	ld.local.u32 	%r6727, [%rd28+4];
	ld.local.u32 	%r6728, [%rd28];
	// inline asm
	prmt.b32 %r6726, %r6727, %r6728, %r73;
	// inline asm
	st.local.u32 	[%rd3], %r6726;
	ld.local.u32 	%r6731, [%rd28];
	ld.local.u32 	%r6732, [%rd1];
	// inline asm
	prmt.b32 %r6730, %r6731, %r6732, %r73;
	// inline asm
	st.local.u32 	[%rd29+8], %r6730;
	ld.local.u32 	%r6735, [%rd1];
	// inline asm
	prmt.b32 %r6734, %r6735, %r8735, %r73;
	// inline asm
	st.local.u32 	[%rd29+4], %r6734;
	st.local.u32 	[%rd29], %r8735;
	st.local.u32 	[%rd2], %r8735;
	st.local.v2.u32 	[%rd28+4], {%r8735, %r8735};
	st.local.u32 	[%rd28], %r8735;
	st.local.u32 	[%rd1], %r8735;
	mov.u32 	%r8740, %r8735;
	bra.uni 	BB4_409;

BB4_377:
	setp.eq.s32	%p212, %r2574, 22;
	@%p212 bra 	BB4_399;
	bra.uni 	BB4_378;

BB4_399:
	mov.u32 	%r8735, 0;
	// inline asm
	prmt.b32 %r8757, %r8735, %r2572, %r73;
	// inline asm
	ld.local.v2.u32 	{%r4100, %r4101}, [%rd35+4];
	// inline asm
	prmt.b32 %r8758, %r4101, %r4100, %r73;
	// inline asm
	ld.local.u32 	%r3967, [%rd35+4];
	ld.local.u32 	%r3968, [%rd35];
	// inline asm
	prmt.b32 %r8759, %r3967, %r3968, %r73;
	// inline asm
	ld.local.u32 	%r3971, [%rd35];
	ld.local.u32 	%r3972, [%rd8];
	// inline asm
	prmt.b32 %r8752, %r3971, %r3972, %r73;
	// inline asm
	ld.local.u32 	%r3975, [%rd8];
	ld.local.u32 	%r3976, [%rd34+8];
	// inline asm
	prmt.b32 %r8753, %r3975, %r3976, %r73;
	// inline asm
	ld.local.v2.u32 	{%r4102, %r4103}, [%rd34+4];
	// inline asm
	prmt.b32 %r8754, %r4103, %r4102, %r73;
	// inline asm
	ld.local.u32 	%r3983, [%rd34+4];
	ld.local.u32 	%r3984, [%rd34];
	// inline asm
	prmt.b32 %r8755, %r3983, %r3984, %r73;
	// inline asm
	ld.local.u32 	%r3987, [%rd34];
	ld.local.u32 	%r3988, [%rd7];
	// inline asm
	prmt.b32 %r8748, %r3987, %r3988, %r73;
	// inline asm
	ld.local.u32 	%r3991, [%rd7];
	ld.local.u32 	%r3992, [%rd33+8];
	// inline asm
	prmt.b32 %r8749, %r3991, %r3992, %r73;
	// inline asm
	ld.local.v2.u32 	{%r4104, %r4105}, [%rd33+4];
	// inline asm
	prmt.b32 %r8750, %r4105, %r4104, %r73;
	// inline asm
	ld.local.u32 	%r3999, [%rd33+4];
	ld.local.u32 	%r4000, [%rd33];
	// inline asm
	prmt.b32 %r8751, %r3999, %r4000, %r73;
	// inline asm
	ld.local.u32 	%r4003, [%rd33];
	ld.local.u32 	%r4004, [%rd6];
	// inline asm
	prmt.b32 %r8744, %r4003, %r4004, %r73;
	// inline asm
	ld.local.u32 	%r4007, [%rd6];
	ld.local.u32 	%r4008, [%rd32+8];
	// inline asm
	prmt.b32 %r8745, %r4007, %r4008, %r73;
	// inline asm
	ld.local.v2.u32 	{%r4106, %r4107}, [%rd32+4];
	// inline asm
	prmt.b32 %r8746, %r4107, %r4106, %r73;
	// inline asm
	ld.local.u32 	%r4015, [%rd32+4];
	ld.local.u32 	%r4016, [%rd32];
	// inline asm
	prmt.b32 %r8747, %r4015, %r4016, %r73;
	// inline asm
	ld.local.u32 	%r4019, [%rd32];
	ld.local.u32 	%r4020, [%rd5];
	// inline asm
	prmt.b32 %r8740, %r4019, %r4020, %r73;
	// inline asm
	ld.local.u32 	%r4023, [%rd5];
	ld.local.u32 	%r4024, [%rd31+8];
	// inline asm
	prmt.b32 %r8741, %r4023, %r4024, %r73;
	// inline asm
	ld.local.v2.u32 	{%r4108, %r4109}, [%rd31+4];
	// inline asm
	prmt.b32 %r8742, %r4109, %r4108, %r73;
	// inline asm
	ld.local.u32 	%r4031, [%rd31+4];
	ld.local.u32 	%r4032, [%rd31];
	// inline asm
	prmt.b32 %r8743, %r4031, %r4032, %r73;
	// inline asm
	ld.local.u32 	%r4035, [%rd31];
	ld.local.u32 	%r4036, [%rd4];
	// inline asm
	prmt.b32 %r8736, %r4035, %r4036, %r73;
	// inline asm
	ld.local.u32 	%r4039, [%rd4];
	ld.local.u32 	%r4040, [%rd30+8];
	// inline asm
	prmt.b32 %r8737, %r4039, %r4040, %r73;
	// inline asm
	ld.local.v2.u32 	{%r4110, %r4111}, [%rd30+4];
	// inline asm
	prmt.b32 %r8738, %r4111, %r4110, %r73;
	// inline asm
	ld.local.u32 	%r4047, [%rd30+4];
	ld.local.u32 	%r4048, [%rd30];
	// inline asm
	prmt.b32 %r8739, %r4047, %r4048, %r73;
	// inline asm
	ld.local.u32 	%r4051, [%rd30];
	ld.local.u32 	%r4052, [%rd3];
	// inline asm
	prmt.b32 %r4050, %r4051, %r4052, %r73;
	// inline asm
	st.local.u32 	[%rd35+8], %r4050;
	ld.local.u32 	%r4055, [%rd3];
	ld.local.u32 	%r4056, [%rd29+8];
	// inline asm
	prmt.b32 %r4054, %r4055, %r4056, %r73;
	// inline asm
	st.local.u32 	[%rd35+4], %r4054;
	ld.local.v2.u32 	{%r4112, %r4113}, [%rd29+4];
	// inline asm
	prmt.b32 %r4058, %r4113, %r4112, %r73;
	// inline asm
	st.local.u32 	[%rd35], %r4058;
	ld.local.u32 	%r4063, [%rd29+4];
	ld.local.u32 	%r4064, [%rd29];
	// inline asm
	prmt.b32 %r4062, %r4063, %r4064, %r73;
	// inline asm
	st.local.u32 	[%rd8], %r4062;
	ld.local.u32 	%r4067, [%rd29];
	ld.local.u32 	%r4068, [%rd2];
	// inline asm
	prmt.b32 %r4066, %r4067, %r4068, %r73;
	// inline asm
	st.local.u32 	[%rd34+8], %r4066;
	ld.local.u32 	%r4071, [%rd2];
	ld.local.u32 	%r4072, [%rd28+8];
	// inline asm
	prmt.b32 %r4070, %r4071, %r4072, %r73;
	// inline asm
	st.local.u32 	[%rd34+4], %r4070;
	ld.local.v2.u32 	{%r4114, %r4115}, [%rd28+4];
	// inline asm
	prmt.b32 %r4074, %r4115, %r4114, %r73;
	// inline asm
	st.local.u32 	[%rd34], %r4074;
	ld.local.u32 	%r4079, [%rd28+4];
	ld.local.u32 	%r4080, [%rd28];
	// inline asm
	prmt.b32 %r4078, %r4079, %r4080, %r73;
	// inline asm
	st.local.u32 	[%rd7], %r4078;
	ld.local.u32 	%r4083, [%rd28];
	ld.local.u32 	%r4084, [%rd1];
	// inline asm
	prmt.b32 %r4082, %r4083, %r4084, %r73;
	// inline asm
	st.local.u32 	[%rd33+8], %r4082;
	ld.local.u32 	%r4087, [%rd1];
	// inline asm
	prmt.b32 %r4086, %r4087, %r8735, %r73;
	// inline asm
	st.local.u32 	[%rd33+4], %r4086;
	st.local.u32 	[%rd33], %r8735;
	st.local.u32 	[%rd6], %r8735;
	st.local.v2.u32 	[%rd32+4], {%r8735, %r8735};
	st.local.u32 	[%rd32], %r8735;
	st.local.u32 	[%rd5], %r8735;
	st.local.v2.u32 	[%rd31+4], {%r8735, %r8735};
	st.local.u32 	[%rd31], %r8735;
	st.local.u32 	[%rd4], %r8735;
	st.local.v2.u32 	[%rd30+4], {%r8735, %r8735};
	st.local.u32 	[%rd30], %r8735;
	st.local.u32 	[%rd3], %r8735;
	st.local.v2.u32 	[%rd29+4], {%r8735, %r8735};
	st.local.u32 	[%rd29], %r8735;
	st.local.u32 	[%rd2], %r8735;
	st.local.v2.u32 	[%rd28+4], {%r8735, %r8735};
	st.local.u32 	[%rd28], %r8735;
	st.local.u32 	[%rd1], %r8735;
	mov.u32 	%r8756, %r8735;
	bra.uni 	BB4_413;

BB4_361:
	setp.eq.s32	%p224, %r2574, 14;
	@%p224 bra 	BB4_403;
	bra.uni 	BB4_362;

BB4_403:
	mov.u32 	%r8735, 0;
	// inline asm
	prmt.b32 %r8749, %r8735, %r2572, %r73;
	// inline asm
	ld.local.v2.u32 	{%r5400, %r5401}, [%rd35+4];
	// inline asm
	prmt.b32 %r8750, %r5401, %r5400, %r73;
	// inline asm
	ld.local.u32 	%r5259, [%rd35+4];
	ld.local.u32 	%r5260, [%rd35];
	// inline asm
	prmt.b32 %r8751, %r5259, %r5260, %r73;
	// inline asm
	ld.local.u32 	%r5263, [%rd35];
	ld.local.u32 	%r5264, [%rd8];
	// inline asm
	prmt.b32 %r8744, %r5263, %r5264, %r73;
	// inline asm
	ld.local.u32 	%r5267, [%rd8];
	ld.local.u32 	%r5268, [%rd34+8];
	// inline asm
	prmt.b32 %r8745, %r5267, %r5268, %r73;
	// inline asm
	ld.local.v2.u32 	{%r5402, %r5403}, [%rd34+4];
	// inline asm
	prmt.b32 %r8746, %r5403, %r5402, %r73;
	// inline asm
	ld.local.u32 	%r5275, [%rd34+4];
	ld.local.u32 	%r5276, [%rd34];
	// inline asm
	prmt.b32 %r8747, %r5275, %r5276, %r73;
	// inline asm
	ld.local.u32 	%r5279, [%rd34];
	ld.local.u32 	%r5280, [%rd7];
	// inline asm
	prmt.b32 %r8740, %r5279, %r5280, %r73;
	// inline asm
	ld.local.u32 	%r5283, [%rd7];
	ld.local.u32 	%r5284, [%rd33+8];
	// inline asm
	prmt.b32 %r8741, %r5283, %r5284, %r73;
	// inline asm
	ld.local.v2.u32 	{%r5404, %r5405}, [%rd33+4];
	// inline asm
	prmt.b32 %r8742, %r5405, %r5404, %r73;
	// inline asm
	ld.local.u32 	%r5291, [%rd33+4];
	ld.local.u32 	%r5292, [%rd33];
	// inline asm
	prmt.b32 %r8743, %r5291, %r5292, %r73;
	// inline asm
	ld.local.u32 	%r5295, [%rd33];
	ld.local.u32 	%r5296, [%rd6];
	// inline asm
	prmt.b32 %r8736, %r5295, %r5296, %r73;
	// inline asm
	ld.local.u32 	%r5299, [%rd6];
	ld.local.u32 	%r5300, [%rd32+8];
	// inline asm
	prmt.b32 %r8737, %r5299, %r5300, %r73;
	// inline asm
	ld.local.v2.u32 	{%r5406, %r5407}, [%rd32+4];
	// inline asm
	prmt.b32 %r8738, %r5407, %r5406, %r73;
	// inline asm
	ld.local.u32 	%r5307, [%rd32+4];
	ld.local.u32 	%r5308, [%rd32];
	// inline asm
	prmt.b32 %r8739, %r5307, %r5308, %r73;
	// inline asm
	ld.local.u32 	%r5311, [%rd32];
	ld.local.u32 	%r5312, [%rd5];
	// inline asm
	prmt.b32 %r5310, %r5311, %r5312, %r73;
	// inline asm
	st.local.u32 	[%rd35+8], %r5310;
	ld.local.u32 	%r5315, [%rd5];
	ld.local.u32 	%r5316, [%rd31+8];
	// inline asm
	prmt.b32 %r5314, %r5315, %r5316, %r73;
	// inline asm
	st.local.u32 	[%rd35+4], %r5314;
	ld.local.v2.u32 	{%r5408, %r5409}, [%rd31+4];
	// inline asm
	prmt.b32 %r5318, %r5409, %r5408, %r73;
	// inline asm
	st.local.u32 	[%rd35], %r5318;
	ld.local.u32 	%r5323, [%rd31+4];
	ld.local.u32 	%r5324, [%rd31];
	// inline asm
	prmt.b32 %r5322, %r5323, %r5324, %r73;
	// inline asm
	st.local.u32 	[%rd8], %r5322;
	ld.local.u32 	%r5327, [%rd31];
	ld.local.u32 	%r5328, [%rd4];
	// inline asm
	prmt.b32 %r5326, %r5327, %r5328, %r73;
	// inline asm
	st.local.u32 	[%rd34+8], %r5326;
	ld.local.u32 	%r5331, [%rd4];
	ld.local.u32 	%r5332, [%rd30+8];
	// inline asm
	prmt.b32 %r5330, %r5331, %r5332, %r73;
	// inline asm
	st.local.u32 	[%rd34+4], %r5330;
	ld.local.v2.u32 	{%r5410, %r5411}, [%rd30+4];
	// inline asm
	prmt.b32 %r5334, %r5411, %r5410, %r73;
	// inline asm
	st.local.u32 	[%rd34], %r5334;
	ld.local.u32 	%r5339, [%rd30+4];
	ld.local.u32 	%r5340, [%rd30];
	// inline asm
	prmt.b32 %r5338, %r5339, %r5340, %r73;
	// inline asm
	st.local.u32 	[%rd7], %r5338;
	ld.local.u32 	%r5343, [%rd30];
	ld.local.u32 	%r5344, [%rd3];
	// inline asm
	prmt.b32 %r5342, %r5343, %r5344, %r73;
	// inline asm
	st.local.u32 	[%rd33+8], %r5342;
	ld.local.u32 	%r5347, [%rd3];
	ld.local.u32 	%r5348, [%rd29+8];
	// inline asm
	prmt.b32 %r5346, %r5347, %r5348, %r73;
	// inline asm
	st.local.u32 	[%rd33+4], %r5346;
	ld.local.v2.u32 	{%r5412, %r5413}, [%rd29+4];
	// inline asm
	prmt.b32 %r5350, %r5413, %r5412, %r73;
	// inline asm
	st.local.u32 	[%rd33], %r5350;
	ld.local.u32 	%r5355, [%rd29+4];
	ld.local.u32 	%r5356, [%rd29];
	// inline asm
	prmt.b32 %r5354, %r5355, %r5356, %r73;
	// inline asm
	st.local.u32 	[%rd6], %r5354;
	ld.local.u32 	%r5359, [%rd29];
	ld.local.u32 	%r5360, [%rd2];
	// inline asm
	prmt.b32 %r5358, %r5359, %r5360, %r73;
	// inline asm
	st.local.u32 	[%rd32+8], %r5358;
	ld.local.u32 	%r5363, [%rd2];
	ld.local.u32 	%r5364, [%rd28+8];
	// inline asm
	prmt.b32 %r5362, %r5363, %r5364, %r73;
	// inline asm
	st.local.u32 	[%rd32+4], %r5362;
	ld.local.v2.u32 	{%r5414, %r5415}, [%rd28+4];
	// inline asm
	prmt.b32 %r5366, %r5415, %r5414, %r73;
	// inline asm
	st.local.u32 	[%rd32], %r5366;
	ld.local.u32 	%r5371, [%rd28+4];
	ld.local.u32 	%r5372, [%rd28];
	// inline asm
	prmt.b32 %r5370, %r5371, %r5372, %r73;
	// inline asm
	st.local.u32 	[%rd5], %r5370;
	ld.local.u32 	%r5375, [%rd28];
	ld.local.u32 	%r5376, [%rd1];
	// inline asm
	prmt.b32 %r5374, %r5375, %r5376, %r73;
	// inline asm
	st.local.u32 	[%rd31+8], %r5374;
	ld.local.u32 	%r5379, [%rd1];
	// inline asm
	prmt.b32 %r5378, %r5379, %r8735, %r73;
	// inline asm
	st.local.u32 	[%rd31+4], %r5378;
	st.local.u32 	[%rd31], %r8735;
	st.local.u32 	[%rd4], %r8735;
	st.local.v2.u32 	[%rd30+4], {%r8735, %r8735};
	st.local.u32 	[%rd30], %r8735;
	st.local.u32 	[%rd3], %r8735;
	st.local.v2.u32 	[%rd29+4], {%r8735, %r8735};
	st.local.u32 	[%rd29], %r8735;
	st.local.u32 	[%rd2], %r8735;
	st.local.v2.u32 	[%rd28+4], {%r8735, %r8735};
	st.local.u32 	[%rd28], %r8735;
	st.local.u32 	[%rd1], %r8735;
	mov.u32 	%r8748, %r8735;
	bra.uni 	BB4_411;

BB4_392:
	setp.eq.s32	%p201, %r2574, 30;
	@%p201 bra 	BB4_395;
	bra.uni 	BB4_393;

BB4_395:
	mov.u32 	%r8735, 0;
	// inline asm
	prmt.b32 %r8765, %r8735, %r2572, %r73;
	// inline asm
	ld.local.v2.u32 	{%r2864, %r2865}, [%rd35+4];
	// inline asm
	prmt.b32 %r8766, %r2865, %r2864, %r73;
	// inline asm
	ld.local.u32 	%r2739, [%rd35+4];
	ld.local.u32 	%r2740, [%rd35];
	// inline asm
	prmt.b32 %r8767, %r2739, %r2740, %r73;
	// inline asm
	ld.local.u32 	%r2743, [%rd35];
	ld.local.u32 	%r2744, [%rd8];
	// inline asm
	prmt.b32 %r8760, %r2743, %r2744, %r73;
	// inline asm
	ld.local.u32 	%r2747, [%rd8];
	ld.local.u32 	%r2748, [%rd34+8];
	// inline asm
	prmt.b32 %r8761, %r2747, %r2748, %r73;
	// inline asm
	ld.local.v2.u32 	{%r2866, %r2867}, [%rd34+4];
	// inline asm
	prmt.b32 %r8762, %r2867, %r2866, %r73;
	// inline asm
	ld.local.u32 	%r2755, [%rd34+4];
	ld.local.u32 	%r2756, [%rd34];
	// inline asm
	prmt.b32 %r8763, %r2755, %r2756, %r73;
	// inline asm
	ld.local.u32 	%r2759, [%rd34];
	ld.local.u32 	%r2760, [%rd7];
	// inline asm
	prmt.b32 %r8756, %r2759, %r2760, %r73;
	// inline asm
	ld.local.u32 	%r2763, [%rd7];
	ld.local.u32 	%r2764, [%rd33+8];
	// inline asm
	prmt.b32 %r8757, %r2763, %r2764, %r73;
	// inline asm
	ld.local.v2.u32 	{%r2868, %r2869}, [%rd33+4];
	// inline asm
	prmt.b32 %r8758, %r2869, %r2868, %r73;
	// inline asm
	ld.local.u32 	%r2771, [%rd33+4];
	ld.local.u32 	%r2772, [%rd33];
	// inline asm
	prmt.b32 %r8759, %r2771, %r2772, %r73;
	// inline asm
	ld.local.u32 	%r2775, [%rd33];
	ld.local.u32 	%r2776, [%rd6];
	// inline asm
	prmt.b32 %r8752, %r2775, %r2776, %r73;
	// inline asm
	ld.local.u32 	%r2779, [%rd6];
	ld.local.u32 	%r2780, [%rd32+8];
	// inline asm
	prmt.b32 %r8753, %r2779, %r2780, %r73;
	// inline asm
	ld.local.v2.u32 	{%r2870, %r2871}, [%rd32+4];
	// inline asm
	prmt.b32 %r8754, %r2871, %r2870, %r73;
	// inline asm
	ld.local.u32 	%r2787, [%rd32+4];
	ld.local.u32 	%r2788, [%rd32];
	// inline asm
	prmt.b32 %r8755, %r2787, %r2788, %r73;
	// inline asm
	ld.local.u32 	%r2791, [%rd32];
	ld.local.u32 	%r2792, [%rd5];
	// inline asm
	prmt.b32 %r8748, %r2791, %r2792, %r73;
	// inline asm
	ld.local.u32 	%r2795, [%rd5];
	ld.local.u32 	%r2796, [%rd31+8];
	// inline asm
	prmt.b32 %r8749, %r2795, %r2796, %r73;
	// inline asm
	ld.local.v2.u32 	{%r2872, %r2873}, [%rd31+4];
	// inline asm
	prmt.b32 %r8750, %r2873, %r2872, %r73;
	// inline asm
	ld.local.u32 	%r2803, [%rd31+4];
	ld.local.u32 	%r2804, [%rd31];
	// inline asm
	prmt.b32 %r8751, %r2803, %r2804, %r73;
	// inline asm
	ld.local.u32 	%r2807, [%rd31];
	ld.local.u32 	%r2808, [%rd4];
	// inline asm
	prmt.b32 %r8744, %r2807, %r2808, %r73;
	// inline asm
	ld.local.u32 	%r2811, [%rd4];
	ld.local.u32 	%r2812, [%rd30+8];
	// inline asm
	prmt.b32 %r8745, %r2811, %r2812, %r73;
	// inline asm
	ld.local.v2.u32 	{%r2874, %r2875}, [%rd30+4];
	// inline asm
	prmt.b32 %r8746, %r2875, %r2874, %r73;
	// inline asm
	ld.local.u32 	%r2819, [%rd30+4];
	ld.local.u32 	%r2820, [%rd30];
	// inline asm
	prmt.b32 %r8747, %r2819, %r2820, %r73;
	// inline asm
	ld.local.u32 	%r2823, [%rd30];
	ld.local.u32 	%r2824, [%rd3];
	// inline asm
	prmt.b32 %r8740, %r2823, %r2824, %r73;
	// inline asm
	ld.local.u32 	%r2827, [%rd3];
	ld.local.u32 	%r2828, [%rd29+8];
	// inline asm
	prmt.b32 %r8741, %r2827, %r2828, %r73;
	// inline asm
	ld.local.v2.u32 	{%r2876, %r2877}, [%rd29+4];
	// inline asm
	prmt.b32 %r8742, %r2877, %r2876, %r73;
	// inline asm
	ld.local.u32 	%r2835, [%rd29+4];
	ld.local.u32 	%r2836, [%rd29];
	// inline asm
	prmt.b32 %r8743, %r2835, %r2836, %r73;
	// inline asm
	ld.local.u32 	%r2839, [%rd29];
	ld.local.u32 	%r2840, [%rd2];
	// inline asm
	prmt.b32 %r8736, %r2839, %r2840, %r73;
	// inline asm
	ld.local.u32 	%r2843, [%rd2];
	ld.local.u32 	%r2844, [%rd28+8];
	// inline asm
	prmt.b32 %r8737, %r2843, %r2844, %r73;
	// inline asm
	ld.local.v2.u32 	{%r2878, %r2879}, [%rd28+4];
	// inline asm
	prmt.b32 %r8738, %r2879, %r2878, %r73;
	// inline asm
	ld.local.u32 	%r2851, [%rd28+4];
	ld.local.u32 	%r2852, [%rd28];
	// inline asm
	prmt.b32 %r8739, %r2851, %r2852, %r73;
	// inline asm
	ld.local.u32 	%r2855, [%rd28];
	ld.local.u32 	%r2856, [%rd1];
	// inline asm
	prmt.b32 %r2854, %r2855, %r2856, %r73;
	// inline asm
	st.local.u32 	[%rd35+8], %r2854;
	ld.local.u32 	%r2859, [%rd1];
	// inline asm
	prmt.b32 %r2858, %r2859, %r8735, %r73;
	// inline asm
	st.local.u32 	[%rd35+4], %r2858;
	st.local.u32 	[%rd35], %r8735;
	st.local.u32 	[%rd8], %r8735;
	st.local.v2.u32 	[%rd34+4], {%r8735, %r8735};
	st.local.u32 	[%rd34], %r8735;
	st.local.u32 	[%rd7], %r8735;
	st.local.v2.u32 	[%rd33+4], {%r8735, %r8735};
	st.local.u32 	[%rd33], %r8735;
	st.local.u32 	[%rd6], %r8735;
	st.local.v2.u32 	[%rd32+4], {%r8735, %r8735};
	st.local.u32 	[%rd32], %r8735;
	st.local.u32 	[%rd5], %r8735;
	st.local.v2.u32 	[%rd31+4], {%r8735, %r8735};
	st.local.u32 	[%rd31], %r8735;
	st.local.u32 	[%rd4], %r8735;
	st.local.v2.u32 	[%rd30+4], {%r8735, %r8735};
	st.local.u32 	[%rd30], %r8735;
	st.local.u32 	[%rd3], %r8735;
	st.local.v2.u32 	[%rd29+4], {%r8735, %r8735};
	st.local.u32 	[%rd29], %r8735;
	st.local.u32 	[%rd2], %r8735;
	st.local.v2.u32 	[%rd28+4], {%r8735, %r8735};
	st.local.u32 	[%rd28], %r8735;
	st.local.u32 	[%rd1], %r8735;
	mov.u32 	%r8764, %r8735;
	bra.uni 	BB4_419;

BB4_336:
	setp.eq.s32	%p243, %r2574, 1;
	@%p243 bra 	BB4_337;
	bra.uni 	BB4_417;

BB4_337:
	mov.u32 	%r8735, 0;
	// inline asm
	prmt.b32 %r8738, %r8735, %r2572, %r73;
	// inline asm
	ld.local.v2.u32 	{%r7649, %r7650}, [%rd35+4];
	// inline asm
	prmt.b32 %r8739, %r7650, %r7649, %r73;
	// inline asm
	ld.local.u32 	%r7495, [%rd35+4];
	ld.local.u32 	%r7496, [%rd35];
	// inline asm
	prmt.b32 %r7494, %r7495, %r7496, %r73;
	// inline asm
	st.local.u32 	[%rd35+8], %r7494;
	ld.local.u32 	%r7499, [%rd35];
	ld.local.u32 	%r7500, [%rd8];
	// inline asm
	prmt.b32 %r7498, %r7499, %r7500, %r73;
	// inline asm
	st.local.u32 	[%rd35+4], %r7498;
	ld.local.u32 	%r7503, [%rd8];
	ld.local.u32 	%r7504, [%rd34+8];
	// inline asm
	prmt.b32 %r7502, %r7503, %r7504, %r73;
	// inline asm
	st.local.u32 	[%rd35], %r7502;
	ld.local.v2.u32 	{%r7651, %r7652}, [%rd34+4];
	// inline asm
	prmt.b32 %r7506, %r7652, %r7651, %r73;
	// inline asm
	st.local.u32 	[%rd8], %r7506;
	ld.local.u32 	%r7511, [%rd34+4];
	ld.local.u32 	%r7512, [%rd34];
	// inline asm
	prmt.b32 %r7510, %r7511, %r7512, %r73;
	// inline asm
	st.local.u32 	[%rd34+8], %r7510;
	ld.local.u32 	%r7515, [%rd34];
	ld.local.u32 	%r7516, [%rd7];
	// inline asm
	prmt.b32 %r7514, %r7515, %r7516, %r73;
	// inline asm
	st.local.u32 	[%rd34+4], %r7514;
	ld.local.u32 	%r7519, [%rd7];
	ld.local.u32 	%r7520, [%rd33+8];
	// inline asm
	prmt.b32 %r7518, %r7519, %r7520, %r73;
	// inline asm
	st.local.u32 	[%rd34], %r7518;
	ld.local.v2.u32 	{%r7653, %r7654}, [%rd33+4];
	// inline asm
	prmt.b32 %r7522, %r7654, %r7653, %r73;
	// inline asm
	st.local.u32 	[%rd7], %r7522;
	ld.local.u32 	%r7527, [%rd33+4];
	ld.local.u32 	%r7528, [%rd33];
	// inline asm
	prmt.b32 %r7526, %r7527, %r7528, %r73;
	// inline asm
	st.local.u32 	[%rd33+8], %r7526;
	ld.local.u32 	%r7531, [%rd33];
	ld.local.u32 	%r7532, [%rd6];
	// inline asm
	prmt.b32 %r7530, %r7531, %r7532, %r73;
	// inline asm
	st.local.u32 	[%rd33+4], %r7530;
	ld.local.u32 	%r7535, [%rd6];
	ld.local.u32 	%r7536, [%rd32+8];
	// inline asm
	prmt.b32 %r7534, %r7535, %r7536, %r73;
	// inline asm
	st.local.u32 	[%rd33], %r7534;
	ld.local.v2.u32 	{%r7655, %r7656}, [%rd32+4];
	// inline asm
	prmt.b32 %r7538, %r7656, %r7655, %r73;
	// inline asm
	st.local.u32 	[%rd6], %r7538;
	ld.local.u32 	%r7543, [%rd32+4];
	ld.local.u32 	%r7544, [%rd32];
	// inline asm
	prmt.b32 %r7542, %r7543, %r7544, %r73;
	// inline asm
	st.local.u32 	[%rd32+8], %r7542;
	ld.local.u32 	%r7547, [%rd32];
	ld.local.u32 	%r7548, [%rd5];
	// inline asm
	prmt.b32 %r7546, %r7547, %r7548, %r73;
	// inline asm
	st.local.u32 	[%rd32+4], %r7546;
	ld.local.u32 	%r7551, [%rd5];
	ld.local.u32 	%r7552, [%rd31+8];
	// inline asm
	prmt.b32 %r7550, %r7551, %r7552, %r73;
	// inline asm
	st.local.u32 	[%rd32], %r7550;
	ld.local.v2.u32 	{%r7657, %r7658}, [%rd31+4];
	// inline asm
	prmt.b32 %r7554, %r7658, %r7657, %r73;
	// inline asm
	st.local.u32 	[%rd5], %r7554;
	ld.local.u32 	%r7559, [%rd31+4];
	ld.local.u32 	%r7560, [%rd31];
	// inline asm
	prmt.b32 %r7558, %r7559, %r7560, %r73;
	// inline asm
	st.local.u32 	[%rd31+8], %r7558;
	ld.local.u32 	%r7563, [%rd31];
	ld.local.u32 	%r7564, [%rd4];
	// inline asm
	prmt.b32 %r7562, %r7563, %r7564, %r73;
	// inline asm
	st.local.u32 	[%rd31+4], %r7562;
	ld.local.u32 	%r7567, [%rd4];
	ld.local.u32 	%r7568, [%rd30+8];
	// inline asm
	prmt.b32 %r7566, %r7567, %r7568, %r73;
	// inline asm
	st.local.u32 	[%rd31], %r7566;
	ld.local.v2.u32 	{%r7659, %r7660}, [%rd30+4];
	// inline asm
	prmt.b32 %r7570, %r7660, %r7659, %r73;
	// inline asm
	st.local.u32 	[%rd4], %r7570;
	ld.local.u32 	%r7575, [%rd30+4];
	ld.local.u32 	%r7576, [%rd30];
	// inline asm
	prmt.b32 %r7574, %r7575, %r7576, %r73;
	// inline asm
	st.local.u32 	[%rd30+8], %r7574;
	ld.local.u32 	%r7579, [%rd30];
	ld.local.u32 	%r7580, [%rd3];
	// inline asm
	prmt.b32 %r7578, %r7579, %r7580, %r73;
	// inline asm
	st.local.u32 	[%rd30+4], %r7578;
	ld.local.u32 	%r7583, [%rd3];
	ld.local.u32 	%r7584, [%rd29+8];
	// inline asm
	prmt.b32 %r7582, %r7583, %r7584, %r73;
	// inline asm
	st.local.u32 	[%rd30], %r7582;
	ld.local.v2.u32 	{%r7661, %r7662}, [%rd29+4];
	// inline asm
	prmt.b32 %r7586, %r7662, %r7661, %r73;
	// inline asm
	st.local.u32 	[%rd3], %r7586;
	ld.local.u32 	%r7591, [%rd29+4];
	ld.local.u32 	%r7592, [%rd29];
	// inline asm
	prmt.b32 %r7590, %r7591, %r7592, %r73;
	// inline asm
	st.local.u32 	[%rd29+8], %r7590;
	ld.local.u32 	%r7595, [%rd29];
	ld.local.u32 	%r7596, [%rd2];
	// inline asm
	prmt.b32 %r7594, %r7595, %r7596, %r73;
	// inline asm
	st.local.u32 	[%rd29+4], %r7594;
	ld.local.u32 	%r7599, [%rd2];
	ld.local.u32 	%r7600, [%rd28+8];
	// inline asm
	prmt.b32 %r7598, %r7599, %r7600, %r73;
	// inline asm
	st.local.u32 	[%rd29], %r7598;
	ld.local.v2.u32 	{%r7663, %r7664}, [%rd28+4];
	// inline asm
	prmt.b32 %r7602, %r7664, %r7663, %r73;
	// inline asm
	st.local.u32 	[%rd2], %r7602;
	ld.local.u32 	%r7607, [%rd28+4];
	ld.local.u32 	%r7608, [%rd28];
	// inline asm
	prmt.b32 %r7606, %r7607, %r7608, %r73;
	// inline asm
	st.local.u32 	[%rd28+8], %r7606;
	ld.local.u32 	%r7611, [%rd28];
	ld.local.u32 	%r7612, [%rd1];
	// inline asm
	prmt.b32 %r7610, %r7611, %r7612, %r73;
	// inline asm
	st.local.u32 	[%rd28+4], %r7610;
	ld.local.u32 	%r7615, [%rd1];
	// inline asm
	prmt.b32 %r7614, %r7615, %r8735, %r73;
	// inline asm
	st.local.u32 	[%rd28], %r7614;
	st.local.u32 	[%rd1], %r8735;
	mov.u32 	%r8736, %r8735;
	mov.u32 	%r8737, %r8735;
	bra.uni 	BB4_341;

BB4_368:
	setp.eq.s32	%p220, %r2574, 17;
	@%p220 bra 	BB4_369;
	bra.uni 	BB4_417;

BB4_369:
	mov.u32 	%r8735, 0;
	// inline asm
	prmt.b32 %r8754, %r8735, %r2572, %r73;
	// inline asm
	ld.local.v2.u32 	{%r4905, %r4906}, [%rd35+4];
	// inline asm
	prmt.b32 %r8755, %r4906, %r4905, %r73;
	// inline asm
	ld.local.u32 	%r4767, [%rd35+4];
	ld.local.u32 	%r4768, [%rd35];
	// inline asm
	prmt.b32 %r8748, %r4767, %r4768, %r73;
	// inline asm
	ld.local.u32 	%r4771, [%rd35];
	ld.local.u32 	%r4772, [%rd8];
	// inline asm
	prmt.b32 %r8749, %r4771, %r4772, %r73;
	// inline asm
	ld.local.u32 	%r4775, [%rd8];
	ld.local.u32 	%r4776, [%rd34+8];
	// inline asm
	prmt.b32 %r8750, %r4775, %r4776, %r73;
	// inline asm
	ld.local.v2.u32 	{%r4907, %r4908}, [%rd34+4];
	// inline asm
	prmt.b32 %r8751, %r4908, %r4907, %r73;
	// inline asm
	ld.local.u32 	%r4783, [%rd34+4];
	ld.local.u32 	%r4784, [%rd34];
	// inline asm
	prmt.b32 %r8744, %r4783, %r4784, %r73;
	// inline asm
	ld.local.u32 	%r4787, [%rd34];
	ld.local.u32 	%r4788, [%rd7];
	// inline asm
	prmt.b32 %r8745, %r4787, %r4788, %r73;
	// inline asm
	ld.local.u32 	%r4791, [%rd7];
	ld.local.u32 	%r4792, [%rd33+8];
	// inline asm
	prmt.b32 %r8746, %r4791, %r4792, %r73;
	// inline asm
	ld.local.v2.u32 	{%r4909, %r4910}, [%rd33+4];
	// inline asm
	prmt.b32 %r8747, %r4910, %r4909, %r73;
	// inline asm
	ld.local.u32 	%r4799, [%rd33+4];
	ld.local.u32 	%r4800, [%rd33];
	// inline asm
	prmt.b32 %r8740, %r4799, %r4800, %r73;
	// inline asm
	ld.local.u32 	%r4803, [%rd33];
	ld.local.u32 	%r4804, [%rd6];
	// inline asm
	prmt.b32 %r8741, %r4803, %r4804, %r73;
	// inline asm
	ld.local.u32 	%r4807, [%rd6];
	ld.local.u32 	%r4808, [%rd32+8];
	// inline asm
	prmt.b32 %r8742, %r4807, %r4808, %r73;
	// inline asm
	ld.local.v2.u32 	{%r4911, %r4912}, [%rd32+4];
	// inline asm
	prmt.b32 %r8743, %r4912, %r4911, %r73;
	// inline asm
	ld.local.u32 	%r4815, [%rd32+4];
	ld.local.u32 	%r4816, [%rd32];
	// inline asm
	prmt.b32 %r8736, %r4815, %r4816, %r73;
	// inline asm
	ld.local.u32 	%r4819, [%rd32];
	ld.local.u32 	%r4820, [%rd5];
	// inline asm
	prmt.b32 %r8737, %r4819, %r4820, %r73;
	// inline asm
	ld.local.u32 	%r4823, [%rd5];
	ld.local.u32 	%r4824, [%rd31+8];
	// inline asm
	prmt.b32 %r8738, %r4823, %r4824, %r73;
	// inline asm
	ld.local.v2.u32 	{%r4913, %r4914}, [%rd31+4];
	// inline asm
	prmt.b32 %r8739, %r4914, %r4913, %r73;
	// inline asm
	ld.local.u32 	%r4831, [%rd31+4];
	ld.local.u32 	%r4832, [%rd31];
	// inline asm
	prmt.b32 %r4830, %r4831, %r4832, %r73;
	// inline asm
	st.local.u32 	[%rd35+8], %r4830;
	ld.local.u32 	%r4835, [%rd31];
	ld.local.u32 	%r4836, [%rd4];
	// inline asm
	prmt.b32 %r4834, %r4835, %r4836, %r73;
	// inline asm
	st.local.u32 	[%rd35+4], %r4834;
	ld.local.u32 	%r4839, [%rd4];
	ld.local.u32 	%r4840, [%rd30+8];
	// inline asm
	prmt.b32 %r4838, %r4839, %r4840, %r73;
	// inline asm
	st.local.u32 	[%rd35], %r4838;
	ld.local.v2.u32 	{%r4915, %r4916}, [%rd30+4];
	// inline asm
	prmt.b32 %r4842, %r4916, %r4915, %r73;
	// inline asm
	st.local.u32 	[%rd8], %r4842;
	ld.local.u32 	%r4847, [%rd30+4];
	ld.local.u32 	%r4848, [%rd30];
	// inline asm
	prmt.b32 %r4846, %r4847, %r4848, %r73;
	// inline asm
	st.local.u32 	[%rd34+8], %r4846;
	ld.local.u32 	%r4851, [%rd30];
	ld.local.u32 	%r4852, [%rd3];
	// inline asm
	prmt.b32 %r4850, %r4851, %r4852, %r73;
	// inline asm
	st.local.u32 	[%rd34+4], %r4850;
	ld.local.u32 	%r4855, [%rd3];
	ld.local.u32 	%r4856, [%rd29+8];
	// inline asm
	prmt.b32 %r4854, %r4855, %r4856, %r73;
	// inline asm
	st.local.u32 	[%rd34], %r4854;
	ld.local.v2.u32 	{%r4917, %r4918}, [%rd29+4];
	// inline asm
	prmt.b32 %r4858, %r4918, %r4917, %r73;
	// inline asm
	st.local.u32 	[%rd7], %r4858;
	ld.local.u32 	%r4863, [%rd29+4];
	ld.local.u32 	%r4864, [%rd29];
	// inline asm
	prmt.b32 %r4862, %r4863, %r4864, %r73;
	// inline asm
	st.local.u32 	[%rd33+8], %r4862;
	ld.local.u32 	%r4867, [%rd29];
	ld.local.u32 	%r4868, [%rd2];
	// inline asm
	prmt.b32 %r4866, %r4867, %r4868, %r73;
	// inline asm
	st.local.u32 	[%rd33+4], %r4866;
	ld.local.u32 	%r4871, [%rd2];
	ld.local.u32 	%r4872, [%rd28+8];
	// inline asm
	prmt.b32 %r4870, %r4871, %r4872, %r73;
	// inline asm
	st.local.u32 	[%rd33], %r4870;
	ld.local.v2.u32 	{%r4919, %r4920}, [%rd28+4];
	// inline asm
	prmt.b32 %r4874, %r4920, %r4919, %r73;
	// inline asm
	st.local.u32 	[%rd6], %r4874;
	ld.local.u32 	%r4879, [%rd28+4];
	ld.local.u32 	%r4880, [%rd28];
	// inline asm
	prmt.b32 %r4878, %r4879, %r4880, %r73;
	// inline asm
	st.local.u32 	[%rd32+8], %r4878;
	ld.local.u32 	%r4883, [%rd28];
	ld.local.u32 	%r4884, [%rd1];
	// inline asm
	prmt.b32 %r4882, %r4883, %r4884, %r73;
	// inline asm
	st.local.u32 	[%rd32+4], %r4882;
	ld.local.u32 	%r4887, [%rd1];
	// inline asm
	prmt.b32 %r4886, %r4887, %r8735, %r73;
	// inline asm
	st.local.u32 	[%rd32], %r4886;
	st.local.u32 	[%rd5], %r8735;
	st.local.v2.u32 	[%rd31+4], {%r8735, %r8735};
	st.local.u32 	[%rd31], %r8735;
	st.local.u32 	[%rd4], %r8735;
	st.local.v2.u32 	[%rd30+4], {%r8735, %r8735};
	st.local.u32 	[%rd30], %r8735;
	st.local.u32 	[%rd3], %r8735;
	st.local.v2.u32 	[%rd29+4], {%r8735, %r8735};
	st.local.u32 	[%rd29], %r8735;
	st.local.u32 	[%rd2], %r8735;
	st.local.v2.u32 	[%rd28+4], {%r8735, %r8735};
	st.local.u32 	[%rd28], %r8735;
	st.local.u32 	[%rd1], %r8735;
	mov.u32 	%r8752, %r8735;
	mov.u32 	%r8753, %r8735;
	bra.uni 	BB4_412;

BB4_352:
	setp.eq.s32	%p232, %r2574, 9;
	@%p232 bra 	BB4_353;
	bra.uni 	BB4_417;

BB4_353:
	mov.u32 	%r8735, 0;
	// inline asm
	prmt.b32 %r8746, %r8735, %r2572, %r73;
	// inline asm
	ld.local.v2.u32 	{%r6245, %r6246}, [%rd35+4];
	// inline asm
	prmt.b32 %r8747, %r6246, %r6245, %r73;
	// inline asm
	ld.local.u32 	%r6099, [%rd35+4];
	ld.local.u32 	%r6100, [%rd35];
	// inline asm
	prmt.b32 %r8740, %r6099, %r6100, %r73;
	// inline asm
	ld.local.u32 	%r6103, [%rd35];
	ld.local.u32 	%r6104, [%rd8];
	// inline asm
	prmt.b32 %r8741, %r6103, %r6104, %r73;
	// inline asm
	ld.local.u32 	%r6107, [%rd8];
	ld.local.u32 	%r6108, [%rd34+8];
	// inline asm
	prmt.b32 %r8742, %r6107, %r6108, %r73;
	// inline asm
	ld.local.v2.u32 	{%r6247, %r6248}, [%rd34+4];
	// inline asm
	prmt.b32 %r8743, %r6248, %r6247, %r73;
	// inline asm
	ld.local.u32 	%r6115, [%rd34+4];
	ld.local.u32 	%r6116, [%rd34];
	// inline asm
	prmt.b32 %r8736, %r6115, %r6116, %r73;
	// inline asm
	ld.local.u32 	%r6119, [%rd34];
	ld.local.u32 	%r6120, [%rd7];
	// inline asm
	prmt.b32 %r8737, %r6119, %r6120, %r73;
	// inline asm
	ld.local.u32 	%r6123, [%rd7];
	ld.local.u32 	%r6124, [%rd33+8];
	// inline asm
	prmt.b32 %r8738, %r6123, %r6124, %r73;
	// inline asm
	ld.local.v2.u32 	{%r6249, %r6250}, [%rd33+4];
	// inline asm
	prmt.b32 %r8739, %r6250, %r6249, %r73;
	// inline asm
	ld.local.u32 	%r6131, [%rd33+4];
	ld.local.u32 	%r6132, [%rd33];
	// inline asm
	prmt.b32 %r6130, %r6131, %r6132, %r73;
	// inline asm
	st.local.u32 	[%rd35+8], %r6130;
	ld.local.u32 	%r6135, [%rd33];
	ld.local.u32 	%r6136, [%rd6];
	// inline asm
	prmt.b32 %r6134, %r6135, %r6136, %r73;
	// inline asm
	st.local.u32 	[%rd35+4], %r6134;
	ld.local.u32 	%r6139, [%rd6];
	ld.local.u32 	%r6140, [%rd32+8];
	// inline asm
	prmt.b32 %r6138, %r6139, %r6140, %r73;
	// inline asm
	st.local.u32 	[%rd35], %r6138;
	ld.local.v2.u32 	{%r6251, %r6252}, [%rd32+4];
	// inline asm
	prmt.b32 %r6142, %r6252, %r6251, %r73;
	// inline asm
	st.local.u32 	[%rd8], %r6142;
	ld.local.u32 	%r6147, [%rd32+4];
	ld.local.u32 	%r6148, [%rd32];
	// inline asm
	prmt.b32 %r6146, %r6147, %r6148, %r73;
	// inline asm
	st.local.u32 	[%rd34+8], %r6146;
	ld.local.u32 	%r6151, [%rd32];
	ld.local.u32 	%r6152, [%rd5];
	// inline asm
	prmt.b32 %r6150, %r6151, %r6152, %r73;
	// inline asm
	st.local.u32 	[%rd34+4], %r6150;
	ld.local.u32 	%r6155, [%rd5];
	ld.local.u32 	%r6156, [%rd31+8];
	// inline asm
	prmt.b32 %r6154, %r6155, %r6156, %r73;
	// inline asm
	st.local.u32 	[%rd34], %r6154;
	ld.local.v2.u32 	{%r6253, %r6254}, [%rd31+4];
	// inline asm
	prmt.b32 %r6158, %r6254, %r6253, %r73;
	// inline asm
	st.local.u32 	[%rd7], %r6158;
	ld.local.u32 	%r6163, [%rd31+4];
	ld.local.u32 	%r6164, [%rd31];
	// inline asm
	prmt.b32 %r6162, %r6163, %r6164, %r73;
	// inline asm
	st.local.u32 	[%rd33+8], %r6162;
	ld.local.u32 	%r6167, [%rd31];
	ld.local.u32 	%r6168, [%rd4];
	// inline asm
	prmt.b32 %r6166, %r6167, %r6168, %r73;
	// inline asm
	st.local.u32 	[%rd33+4], %r6166;
	ld.local.u32 	%r6171, [%rd4];
	ld.local.u32 	%r6172, [%rd30+8];
	// inline asm
	prmt.b32 %r6170, %r6171, %r6172, %r73;
	// inline asm
	st.local.u32 	[%rd33], %r6170;
	ld.local.v2.u32 	{%r6255, %r6256}, [%rd30+4];
	// inline asm
	prmt.b32 %r6174, %r6256, %r6255, %r73;
	// inline asm
	st.local.u32 	[%rd6], %r6174;
	ld.local.u32 	%r6179, [%rd30+4];
	ld.local.u32 	%r6180, [%rd30];
	// inline asm
	prmt.b32 %r6178, %r6179, %r6180, %r73;
	// inline asm
	st.local.u32 	[%rd32+8], %r6178;
	ld.local.u32 	%r6183, [%rd30];
	ld.local.u32 	%r6184, [%rd3];
	// inline asm
	prmt.b32 %r6182, %r6183, %r6184, %r73;
	// inline asm
	st.local.u32 	[%rd32+4], %r6182;
	ld.local.u32 	%r6187, [%rd3];
	ld.local.u32 	%r6188, [%rd29+8];
	// inline asm
	prmt.b32 %r6186, %r6187, %r6188, %r73;
	// inline asm
	st.local.u32 	[%rd32], %r6186;
	ld.local.v2.u32 	{%r6257, %r6258}, [%rd29+4];
	// inline asm
	prmt.b32 %r6190, %r6258, %r6257, %r73;
	// inline asm
	st.local.u32 	[%rd5], %r6190;
	ld.local.u32 	%r6195, [%rd29+4];
	ld.local.u32 	%r6196, [%rd29];
	// inline asm
	prmt.b32 %r6194, %r6195, %r6196, %r73;
	// inline asm
	st.local.u32 	[%rd31+8], %r6194;
	ld.local.u32 	%r6199, [%rd29];
	ld.local.u32 	%r6200, [%rd2];
	// inline asm
	prmt.b32 %r6198, %r6199, %r6200, %r73;
	// inline asm
	st.local.u32 	[%rd31+4], %r6198;
	ld.local.u32 	%r6203, [%rd2];
	ld.local.u32 	%r6204, [%rd28+8];
	// inline asm
	prmt.b32 %r6202, %r6203, %r6204, %r73;
	// inline asm
	st.local.u32 	[%rd31], %r6202;
	ld.local.v2.u32 	{%r6259, %r6260}, [%rd28+4];
	// inline asm
	prmt.b32 %r6206, %r6260, %r6259, %r73;
	// inline asm
	st.local.u32 	[%rd4], %r6206;
	ld.local.u32 	%r6211, [%rd28+4];
	ld.local.u32 	%r6212, [%rd28];
	// inline asm
	prmt.b32 %r6210, %r6211, %r6212, %r73;
	// inline asm
	st.local.u32 	[%rd30+8], %r6210;
	ld.local.u32 	%r6215, [%rd28];
	ld.local.u32 	%r6216, [%rd1];
	// inline asm
	prmt.b32 %r6214, %r6215, %r6216, %r73;
	// inline asm
	st.local.u32 	[%rd30+4], %r6214;
	ld.local.u32 	%r6219, [%rd1];
	// inline asm
	prmt.b32 %r6218, %r6219, %r8735, %r73;
	// inline asm
	st.local.u32 	[%rd30], %r6218;
	st.local.u32 	[%rd3], %r8735;
	st.local.v2.u32 	[%rd29+4], {%r8735, %r8735};
	st.local.u32 	[%rd29], %r8735;
	st.local.u32 	[%rd2], %r8735;
	st.local.v2.u32 	[%rd28+4], {%r8735, %r8735};
	st.local.u32 	[%rd28], %r8735;
	st.local.u32 	[%rd1], %r8735;
	mov.u32 	%r8744, %r8735;
	mov.u32 	%r8745, %r8735;
	bra.uni 	BB4_410;

BB4_383:
	setp.eq.s32	%p209, %r2574, 25;
	@%p209 bra 	BB4_384;
	bra.uni 	BB4_417;

BB4_384:
	mov.u32 	%r8735, 0;
	// inline asm
	prmt.b32 %r8762, %r8735, %r2572, %r73;
	// inline asm
	ld.local.v2.u32 	{%r3629, %r3630}, [%rd35+4];
	// inline asm
	prmt.b32 %r8763, %r3630, %r3629, %r73;
	// inline asm
	ld.local.u32 	%r3499, [%rd35+4];
	ld.local.u32 	%r3500, [%rd35];
	// inline asm
	prmt.b32 %r8756, %r3499, %r3500, %r73;
	// inline asm
	ld.local.u32 	%r3503, [%rd35];
	ld.local.u32 	%r3504, [%rd8];
	// inline asm
	prmt.b32 %r8757, %r3503, %r3504, %r73;
	// inline asm
	ld.local.u32 	%r3507, [%rd8];
	ld.local.u32 	%r3508, [%rd34+8];
	// inline asm
	prmt.b32 %r8758, %r3507, %r3508, %r73;
	// inline asm
	ld.local.v2.u32 	{%r3631, %r3632}, [%rd34+4];
	// inline asm
	prmt.b32 %r8759, %r3632, %r3631, %r73;
	// inline asm
	ld.local.u32 	%r3515, [%rd34+4];
	ld.local.u32 	%r3516, [%rd34];
	// inline asm
	prmt.b32 %r8752, %r3515, %r3516, %r73;
	// inline asm
	ld.local.u32 	%r3519, [%rd34];
	ld.local.u32 	%r3520, [%rd7];
	// inline asm
	prmt.b32 %r8753, %r3519, %r3520, %r73;
	// inline asm
	ld.local.u32 	%r3523, [%rd7];
	ld.local.u32 	%r3524, [%rd33+8];
	// inline asm
	prmt.b32 %r8754, %r3523, %r3524, %r73;
	// inline asm
	ld.local.v2.u32 	{%r3633, %r3634}, [%rd33+4];
	// inline asm
	prmt.b32 %r8755, %r3634, %r3633, %r73;
	// inline asm
	ld.local.u32 	%r3531, [%rd33+4];
	ld.local.u32 	%r3532, [%rd33];
	// inline asm
	prmt.b32 %r8748, %r3531, %r3532, %r73;
	// inline asm
	ld.local.u32 	%r3535, [%rd33];
	ld.local.u32 	%r3536, [%rd6];
	// inline asm
	prmt.b32 %r8749, %r3535, %r3536, %r73;
	// inline asm
	ld.local.u32 	%r3539, [%rd6];
	ld.local.u32 	%r3540, [%rd32+8];
	// inline asm
	prmt.b32 %r8750, %r3539, %r3540, %r73;
	// inline asm
	ld.local.v2.u32 	{%r3635, %r3636}, [%rd32+4];
	// inline asm
	prmt.b32 %r8751, %r3636, %r3635, %r73;
	// inline asm
	ld.local.u32 	%r3547, [%rd32+4];
	ld.local.u32 	%r3548, [%rd32];
	// inline asm
	prmt.b32 %r8744, %r3547, %r3548, %r73;
	// inline asm
	ld.local.u32 	%r3551, [%rd32];
	ld.local.u32 	%r3552, [%rd5];
	// inline asm
	prmt.b32 %r8745, %r3551, %r3552, %r73;
	// inline asm
	ld.local.u32 	%r3555, [%rd5];
	ld.local.u32 	%r3556, [%rd31+8];
	// inline asm
	prmt.b32 %r8746, %r3555, %r3556, %r73;
	// inline asm
	ld.local.v2.u32 	{%r3637, %r3638}, [%rd31+4];
	// inline asm
	prmt.b32 %r8747, %r3638, %r3637, %r73;
	// inline asm
	ld.local.u32 	%r3563, [%rd31+4];
	ld.local.u32 	%r3564, [%rd31];
	// inline asm
	prmt.b32 %r8740, %r3563, %r3564, %r73;
	// inline asm
	ld.local.u32 	%r3567, [%rd31];
	ld.local.u32 	%r3568, [%rd4];
	// inline asm
	prmt.b32 %r8741, %r3567, %r3568, %r73;
	// inline asm
	ld.local.u32 	%r3571, [%rd4];
	ld.local.u32 	%r3572, [%rd30+8];
	// inline asm
	prmt.b32 %r8742, %r3571, %r3572, %r73;
	// inline asm
	ld.local.v2.u32 	{%r3639, %r3640}, [%rd30+4];
	// inline asm
	prmt.b32 %r8743, %r3640, %r3639, %r73;
	// inline asm
	ld.local.u32 	%r3579, [%rd30+4];
	ld.local.u32 	%r3580, [%rd30];
	// inline asm
	prmt.b32 %r8736, %r3579, %r3580, %r73;
	// inline asm
	ld.local.u32 	%r3583, [%rd30];
	ld.local.u32 	%r3584, [%rd3];
	// inline asm
	prmt.b32 %r8737, %r3583, %r3584, %r73;
	// inline asm
	ld.local.u32 	%r3587, [%rd3];
	ld.local.u32 	%r3588, [%rd29+8];
	// inline asm
	prmt.b32 %r8738, %r3587, %r3588, %r73;
	// inline asm
	ld.local.v2.u32 	{%r3641, %r3642}, [%rd29+4];
	// inline asm
	prmt.b32 %r8739, %r3642, %r3641, %r73;
	// inline asm
	ld.local.u32 	%r3595, [%rd29+4];
	ld.local.u32 	%r3596, [%rd29];
	// inline asm
	prmt.b32 %r3594, %r3595, %r3596, %r73;
	// inline asm
	st.local.u32 	[%rd35+8], %r3594;
	ld.local.u32 	%r3599, [%rd29];
	ld.local.u32 	%r3600, [%rd2];
	// inline asm
	prmt.b32 %r3598, %r3599, %r3600, %r73;
	// inline asm
	st.local.u32 	[%rd35+4], %r3598;
	ld.local.u32 	%r3603, [%rd2];
	ld.local.u32 	%r3604, [%rd28+8];
	// inline asm
	prmt.b32 %r3602, %r3603, %r3604, %r73;
	// inline asm
	st.local.u32 	[%rd35], %r3602;
	ld.local.v2.u32 	{%r3643, %r3644}, [%rd28+4];
	// inline asm
	prmt.b32 %r3606, %r3644, %r3643, %r73;
	// inline asm
	st.local.u32 	[%rd8], %r3606;
	ld.local.u32 	%r3611, [%rd28+4];
	ld.local.u32 	%r3612, [%rd28];
	// inline asm
	prmt.b32 %r3610, %r3611, %r3612, %r73;
	// inline asm
	st.local.u32 	[%rd34+8], %r3610;
	ld.local.u32 	%r3615, [%rd28];
	ld.local.u32 	%r3616, [%rd1];
	// inline asm
	prmt.b32 %r3614, %r3615, %r3616, %r73;
	// inline asm
	st.local.u32 	[%rd34+4], %r3614;
	ld.local.u32 	%r3619, [%rd1];
	// inline asm
	prmt.b32 %r3618, %r3619, %r8735, %r73;
	// inline asm
	st.local.u32 	[%rd34], %r3618;
	st.local.u32 	[%rd7], %r8735;
	st.local.v2.u32 	[%rd33+4], {%r8735, %r8735};
	st.local.u32 	[%rd33], %r8735;
	st.local.u32 	[%rd6], %r8735;
	st.local.v2.u32 	[%rd32+4], {%r8735, %r8735};
	st.local.u32 	[%rd32], %r8735;
	st.local.u32 	[%rd5], %r8735;
	st.local.v2.u32 	[%rd31+4], {%r8735, %r8735};
	st.local.u32 	[%rd31], %r8735;
	st.local.u32 	[%rd4], %r8735;
	st.local.v2.u32 	[%rd30+4], {%r8735, %r8735};
	st.local.u32 	[%rd30], %r8735;
	st.local.u32 	[%rd3], %r8735;
	st.local.v2.u32 	[%rd29+4], {%r8735, %r8735};
	st.local.u32 	[%rd29], %r8735;
	st.local.u32 	[%rd2], %r8735;
	st.local.v2.u32 	[%rd28+4], {%r8735, %r8735};
	st.local.u32 	[%rd28], %r8735;
	st.local.u32 	[%rd1], %r8735;
	mov.u32 	%r8760, %r8735;
	mov.u32 	%r8761, %r8735;
	bra.uni 	BB4_414;

BB4_344:
	setp.eq.s32	%p238, %r2574, 5;
	@%p238 bra 	BB4_345;
	bra.uni 	BB4_417;

BB4_345:
	mov.u32 	%r8735, 0;
	// inline asm
	prmt.b32 %r8742, %r8735, %r2572, %r73;
	// inline asm
	ld.local.v2.u32 	{%r6939, %r6940}, [%rd35+4];
	// inline asm
	prmt.b32 %r8743, %r6940, %r6939, %r73;
	// inline asm
	ld.local.u32 	%r6789, [%rd35+4];
	ld.local.u32 	%r6790, [%rd35];
	// inline asm
	prmt.b32 %r8736, %r6789, %r6790, %r73;
	// inline asm
	ld.local.u32 	%r6793, [%rd35];
	ld.local.u32 	%r6794, [%rd8];
	// inline asm
	prmt.b32 %r8737, %r6793, %r6794, %r73;
	// inline asm
	ld.local.u32 	%r6797, [%rd8];
	ld.local.u32 	%r6798, [%rd34+8];
	// inline asm
	prmt.b32 %r8738, %r6797, %r6798, %r73;
	// inline asm
	ld.local.v2.u32 	{%r6941, %r6942}, [%rd34+4];
	// inline asm
	prmt.b32 %r8739, %r6942, %r6941, %r73;
	// inline asm
	ld.local.u32 	%r6805, [%rd34+4];
	ld.local.u32 	%r6806, [%rd34];
	// inline asm
	prmt.b32 %r6804, %r6805, %r6806, %r73;
	// inline asm
	st.local.u32 	[%rd35+8], %r6804;
	ld.local.u32 	%r6809, [%rd34];
	ld.local.u32 	%r6810, [%rd7];
	// inline asm
	prmt.b32 %r6808, %r6809, %r6810, %r73;
	// inline asm
	st.local.u32 	[%rd35+4], %r6808;
	ld.local.u32 	%r6813, [%rd7];
	ld.local.u32 	%r6814, [%rd33+8];
	// inline asm
	prmt.b32 %r6812, %r6813, %r6814, %r73;
	// inline asm
	st.local.u32 	[%rd35], %r6812;
	ld.local.v2.u32 	{%r6943, %r6944}, [%rd33+4];
	// inline asm
	prmt.b32 %r6816, %r6944, %r6943, %r73;
	// inline asm
	st.local.u32 	[%rd8], %r6816;
	ld.local.u32 	%r6821, [%rd33+4];
	ld.local.u32 	%r6822, [%rd33];
	// inline asm
	prmt.b32 %r6820, %r6821, %r6822, %r73;
	// inline asm
	st.local.u32 	[%rd34+8], %r6820;
	ld.local.u32 	%r6825, [%rd33];
	ld.local.u32 	%r6826, [%rd6];
	// inline asm
	prmt.b32 %r6824, %r6825, %r6826, %r73;
	// inline asm
	st.local.u32 	[%rd34+4], %r6824;
	ld.local.u32 	%r6829, [%rd6];
	ld.local.u32 	%r6830, [%rd32+8];
	// inline asm
	prmt.b32 %r6828, %r6829, %r6830, %r73;
	// inline asm
	st.local.u32 	[%rd34], %r6828;
	ld.local.v2.u32 	{%r6945, %r6946}, [%rd32+4];
	// inline asm
	prmt.b32 %r6832, %r6946, %r6945, %r73;
	// inline asm
	st.local.u32 	[%rd7], %r6832;
	ld.local.u32 	%r6837, [%rd32+4];
	ld.local.u32 	%r6838, [%rd32];
	// inline asm
	prmt.b32 %r6836, %r6837, %r6838, %r73;
	// inline asm
	st.local.u32 	[%rd33+8], %r6836;
	ld.local.u32 	%r6841, [%rd32];
	ld.local.u32 	%r6842, [%rd5];
	// inline asm
	prmt.b32 %r6840, %r6841, %r6842, %r73;
	// inline asm
	st.local.u32 	[%rd33+4], %r6840;
	ld.local.u32 	%r6845, [%rd5];
	ld.local.u32 	%r6846, [%rd31+8];
	// inline asm
	prmt.b32 %r6844, %r6845, %r6846, %r73;
	// inline asm
	st.local.u32 	[%rd33], %r6844;
	ld.local.v2.u32 	{%r6947, %r6948}, [%rd31+4];
	// inline asm
	prmt.b32 %r6848, %r6948, %r6947, %r73;
	// inline asm
	st.local.u32 	[%rd6], %r6848;
	ld.local.u32 	%r6853, [%rd31+4];
	ld.local.u32 	%r6854, [%rd31];
	// inline asm
	prmt.b32 %r6852, %r6853, %r6854, %r73;
	// inline asm
	st.local.u32 	[%rd32+8], %r6852;
	ld.local.u32 	%r6857, [%rd31];
	ld.local.u32 	%r6858, [%rd4];
	// inline asm
	prmt.b32 %r6856, %r6857, %r6858, %r73;
	// inline asm
	st.local.u32 	[%rd32+4], %r6856;
	ld.local.u32 	%r6861, [%rd4];
	ld.local.u32 	%r6862, [%rd30+8];
	// inline asm
	prmt.b32 %r6860, %r6861, %r6862, %r73;
	// inline asm
	st.local.u32 	[%rd32], %r6860;
	ld.local.v2.u32 	{%r6949, %r6950}, [%rd30+4];
	// inline asm
	prmt.b32 %r6864, %r6950, %r6949, %r73;
	// inline asm
	st.local.u32 	[%rd5], %r6864;
	ld.local.u32 	%r6869, [%rd30+4];
	ld.local.u32 	%r6870, [%rd30];
	// inline asm
	prmt.b32 %r6868, %r6869, %r6870, %r73;
	// inline asm
	st.local.u32 	[%rd31+8], %r6868;
	ld.local.u32 	%r6873, [%rd30];
	ld.local.u32 	%r6874, [%rd3];
	// inline asm
	prmt.b32 %r6872, %r6873, %r6874, %r73;
	// inline asm
	st.local.u32 	[%rd31+4], %r6872;
	ld.local.u32 	%r6877, [%rd3];
	ld.local.u32 	%r6878, [%rd29+8];
	// inline asm
	prmt.b32 %r6876, %r6877, %r6878, %r73;
	// inline asm
	st.local.u32 	[%rd31], %r6876;
	ld.local.v2.u32 	{%r6951, %r6952}, [%rd29+4];
	// inline asm
	prmt.b32 %r6880, %r6952, %r6951, %r73;
	// inline asm
	st.local.u32 	[%rd4], %r6880;
	ld.local.u32 	%r6885, [%rd29+4];
	ld.local.u32 	%r6886, [%rd29];
	// inline asm
	prmt.b32 %r6884, %r6885, %r6886, %r73;
	// inline asm
	st.local.u32 	[%rd30+8], %r6884;
	ld.local.u32 	%r6889, [%rd29];
	ld.local.u32 	%r6890, [%rd2];
	// inline asm
	prmt.b32 %r6888, %r6889, %r6890, %r73;
	// inline asm
	st.local.u32 	[%rd30+4], %r6888;
	ld.local.u32 	%r6893, [%rd2];
	ld.local.u32 	%r6894, [%rd28+8];
	// inline asm
	prmt.b32 %r6892, %r6893, %r6894, %r73;
	// inline asm
	st.local.u32 	[%rd30], %r6892;
	ld.local.v2.u32 	{%r6953, %r6954}, [%rd28+4];
	// inline asm
	prmt.b32 %r6896, %r6954, %r6953, %r73;
	// inline asm
	st.local.u32 	[%rd3], %r6896;
	ld.local.u32 	%r6901, [%rd28+4];
	ld.local.u32 	%r6902, [%rd28];
	// inline asm
	prmt.b32 %r6900, %r6901, %r6902, %r73;
	// inline asm
	st.local.u32 	[%rd29+8], %r6900;
	ld.local.u32 	%r6905, [%rd28];
	ld.local.u32 	%r6906, [%rd1];
	// inline asm
	prmt.b32 %r6904, %r6905, %r6906, %r73;
	// inline asm
	st.local.u32 	[%rd29+4], %r6904;
	ld.local.u32 	%r6909, [%rd1];
	// inline asm
	prmt.b32 %r6908, %r6909, %r8735, %r73;
	// inline asm
	st.local.u32 	[%rd29], %r6908;
	st.local.u32 	[%rd2], %r8735;
	st.local.v2.u32 	[%rd28+4], {%r8735, %r8735};
	st.local.u32 	[%rd28], %r8735;
	st.local.u32 	[%rd1], %r8735;
	mov.u32 	%r8740, %r8735;
	mov.u32 	%r8741, %r8735;
	bra.uni 	BB4_409;

BB4_375:
	setp.eq.s32	%p215, %r2574, 21;
	@%p215 bra 	BB4_376;
	bra.uni 	BB4_417;

BB4_376:
	mov.u32 	%r8735, 0;
	// inline asm
	prmt.b32 %r8758, %r8735, %r2572, %r73;
	// inline asm
	ld.local.v2.u32 	{%r4259, %r4260}, [%rd35+4];
	// inline asm
	prmt.b32 %r8759, %r4260, %r4259, %r73;
	// inline asm
	ld.local.u32 	%r4125, [%rd35+4];
	ld.local.u32 	%r4126, [%rd35];
	// inline asm
	prmt.b32 %r8752, %r4125, %r4126, %r73;
	// inline asm
	ld.local.u32 	%r4129, [%rd35];
	ld.local.u32 	%r4130, [%rd8];
	// inline asm
	prmt.b32 %r8753, %r4129, %r4130, %r73;
	// inline asm
	ld.local.u32 	%r4133, [%rd8];
	ld.local.u32 	%r4134, [%rd34+8];
	// inline asm
	prmt.b32 %r8754, %r4133, %r4134, %r73;
	// inline asm
	ld.local.v2.u32 	{%r4261, %r4262}, [%rd34+4];
	// inline asm
	prmt.b32 %r8755, %r4262, %r4261, %r73;
	// inline asm
	ld.local.u32 	%r4141, [%rd34+4];
	ld.local.u32 	%r4142, [%rd34];
	// inline asm
	prmt.b32 %r8748, %r4141, %r4142, %r73;
	// inline asm
	ld.local.u32 	%r4145, [%rd34];
	ld.local.u32 	%r4146, [%rd7];
	// inline asm
	prmt.b32 %r8749, %r4145, %r4146, %r73;
	// inline asm
	ld.local.u32 	%r4149, [%rd7];
	ld.local.u32 	%r4150, [%rd33+8];
	// inline asm
	prmt.b32 %r8750, %r4149, %r4150, %r73;
	// inline asm
	ld.local.v2.u32 	{%r4263, %r4264}, [%rd33+4];
	// inline asm
	prmt.b32 %r8751, %r4264, %r4263, %r73;
	// inline asm
	ld.local.u32 	%r4157, [%rd33+4];
	ld.local.u32 	%r4158, [%rd33];
	// inline asm
	prmt.b32 %r8744, %r4157, %r4158, %r73;
	// inline asm
	ld.local.u32 	%r4161, [%rd33];
	ld.local.u32 	%r4162, [%rd6];
	// inline asm
	prmt.b32 %r8745, %r4161, %r4162, %r73;
	// inline asm
	ld.local.u32 	%r4165, [%rd6];
	ld.local.u32 	%r4166, [%rd32+8];
	// inline asm
	prmt.b32 %r8746, %r4165, %r4166, %r73;
	// inline asm
	ld.local.v2.u32 	{%r4265, %r4266}, [%rd32+4];
	// inline asm
	prmt.b32 %r8747, %r4266, %r4265, %r73;
	// inline asm
	ld.local.u32 	%r4173, [%rd32+4];
	ld.local.u32 	%r4174, [%rd32];
	// inline asm
	prmt.b32 %r8740, %r4173, %r4174, %r73;
	// inline asm
	ld.local.u32 	%r4177, [%rd32];
	ld.local.u32 	%r4178, [%rd5];
	// inline asm
	prmt.b32 %r8741, %r4177, %r4178, %r73;
	// inline asm
	ld.local.u32 	%r4181, [%rd5];
	ld.local.u32 	%r4182, [%rd31+8];
	// inline asm
	prmt.b32 %r8742, %r4181, %r4182, %r73;
	// inline asm
	ld.local.v2.u32 	{%r4267, %r4268}, [%rd31+4];
	// inline asm
	prmt.b32 %r8743, %r4268, %r4267, %r73;
	// inline asm
	ld.local.u32 	%r4189, [%rd31+4];
	ld.local.u32 	%r4190, [%rd31];
	// inline asm
	prmt.b32 %r8736, %r4189, %r4190, %r73;
	// inline asm
	ld.local.u32 	%r4193, [%rd31];
	ld.local.u32 	%r4194, [%rd4];
	// inline asm
	prmt.b32 %r8737, %r4193, %r4194, %r73;
	// inline asm
	ld.local.u32 	%r4197, [%rd4];
	ld.local.u32 	%r4198, [%rd30+8];
	// inline asm
	prmt.b32 %r8738, %r4197, %r4198, %r73;
	// inline asm
	ld.local.v2.u32 	{%r4269, %r4270}, [%rd30+4];
	// inline asm
	prmt.b32 %r8739, %r4270, %r4269, %r73;
	// inline asm
	ld.local.u32 	%r4205, [%rd30+4];
	ld.local.u32 	%r4206, [%rd30];
	// inline asm
	prmt.b32 %r4204, %r4205, %r4206, %r73;
	// inline asm
	st.local.u32 	[%rd35+8], %r4204;
	ld.local.u32 	%r4209, [%rd30];
	ld.local.u32 	%r4210, [%rd3];
	// inline asm
	prmt.b32 %r4208, %r4209, %r4210, %r73;
	// inline asm
	st.local.u32 	[%rd35+4], %r4208;
	ld.local.u32 	%r4213, [%rd3];
	ld.local.u32 	%r4214, [%rd29+8];
	// inline asm
	prmt.b32 %r4212, %r4213, %r4214, %r73;
	// inline asm
	st.local.u32 	[%rd35], %r4212;
	ld.local.v2.u32 	{%r4271, %r4272}, [%rd29+4];
	// inline asm
	prmt.b32 %r4216, %r4272, %r4271, %r73;
	// inline asm
	st.local.u32 	[%rd8], %r4216;
	ld.local.u32 	%r4221, [%rd29+4];
	ld.local.u32 	%r4222, [%rd29];
	// inline asm
	prmt.b32 %r4220, %r4221, %r4222, %r73;
	// inline asm
	st.local.u32 	[%rd34+8], %r4220;
	ld.local.u32 	%r4225, [%rd29];
	ld.local.u32 	%r4226, [%rd2];
	// inline asm
	prmt.b32 %r4224, %r4225, %r4226, %r73;
	// inline asm
	st.local.u32 	[%rd34+4], %r4224;
	ld.local.u32 	%r4229, [%rd2];
	ld.local.u32 	%r4230, [%rd28+8];
	// inline asm
	prmt.b32 %r4228, %r4229, %r4230, %r73;
	// inline asm
	st.local.u32 	[%rd34], %r4228;
	ld.local.v2.u32 	{%r4273, %r4274}, [%rd28+4];
	// inline asm
	prmt.b32 %r4232, %r4274, %r4273, %r73;
	// inline asm
	st.local.u32 	[%rd7], %r4232;
	ld.local.u32 	%r4237, [%rd28+4];
	ld.local.u32 	%r4238, [%rd28];
	// inline asm
	prmt.b32 %r4236, %r4237, %r4238, %r73;
	// inline asm
	st.local.u32 	[%rd33+8], %r4236;
	ld.local.u32 	%r4241, [%rd28];
	ld.local.u32 	%r4242, [%rd1];
	// inline asm
	prmt.b32 %r4240, %r4241, %r4242, %r73;
	// inline asm
	st.local.u32 	[%rd33+4], %r4240;
	ld.local.u32 	%r4245, [%rd1];
	// inline asm
	prmt.b32 %r4244, %r4245, %r8735, %r73;
	// inline asm
	st.local.u32 	[%rd33], %r4244;
	st.local.u32 	[%rd6], %r8735;
	st.local.v2.u32 	[%rd32+4], {%r8735, %r8735};
	st.local.u32 	[%rd32], %r8735;
	st.local.u32 	[%rd5], %r8735;
	st.local.v2.u32 	[%rd31+4], {%r8735, %r8735};
	st.local.u32 	[%rd31], %r8735;
	st.local.u32 	[%rd4], %r8735;
	st.local.v2.u32 	[%rd30+4], {%r8735, %r8735};
	st.local.u32 	[%rd30], %r8735;
	st.local.u32 	[%rd3], %r8735;
	st.local.v2.u32 	[%rd29+4], {%r8735, %r8735};
	st.local.u32 	[%rd29], %r8735;
	st.local.u32 	[%rd2], %r8735;
	st.local.v2.u32 	[%rd28+4], {%r8735, %r8735};
	st.local.u32 	[%rd28], %r8735;
	st.local.u32 	[%rd1], %r8735;
	mov.u32 	%r8756, %r8735;
	mov.u32 	%r8757, %r8735;
	bra.uni 	BB4_413;

BB4_359:
	setp.eq.s32	%p227, %r2574, 13;
	@%p227 bra 	BB4_360;
	bra.uni 	BB4_417;

BB4_360:
	mov.u32 	%r8735, 0;
	// inline asm
	prmt.b32 %r8750, %r8735, %r2572, %r73;
	// inline asm
	ld.local.v2.u32 	{%r5567, %r5568}, [%rd35+4];
	// inline asm
	prmt.b32 %r8751, %r5568, %r5567, %r73;
	// inline asm
	ld.local.u32 	%r5425, [%rd35+4];
	ld.local.u32 	%r5426, [%rd35];
	// inline asm
	prmt.b32 %r8744, %r5425, %r5426, %r73;
	// inline asm
	ld.local.u32 	%r5429, [%rd35];
	ld.local.u32 	%r5430, [%rd8];
	// inline asm
	prmt.b32 %r8745, %r5429, %r5430, %r73;
	// inline asm
	ld.local.u32 	%r5433, [%rd8];
	ld.local.u32 	%r5434, [%rd34+8];
	// inline asm
	prmt.b32 %r8746, %r5433, %r5434, %r73;
	// inline asm
	ld.local.v2.u32 	{%r5569, %r5570}, [%rd34+4];
	// inline asm
	prmt.b32 %r8747, %r5570, %r5569, %r73;
	// inline asm
	ld.local.u32 	%r5441, [%rd34+4];
	ld.local.u32 	%r5442, [%rd34];
	// inline asm
	prmt.b32 %r8740, %r5441, %r5442, %r73;
	// inline asm
	ld.local.u32 	%r5445, [%rd34];
	ld.local.u32 	%r5446, [%rd7];
	// inline asm
	prmt.b32 %r8741, %r5445, %r5446, %r73;
	// inline asm
	ld.local.u32 	%r5449, [%rd7];
	ld.local.u32 	%r5450, [%rd33+8];
	// inline asm
	prmt.b32 %r8742, %r5449, %r5450, %r73;
	// inline asm
	ld.local.v2.u32 	{%r5571, %r5572}, [%rd33+4];
	// inline asm
	prmt.b32 %r8743, %r5572, %r5571, %r73;
	// inline asm
	ld.local.u32 	%r5457, [%rd33+4];
	ld.local.u32 	%r5458, [%rd33];
	// inline asm
	prmt.b32 %r8736, %r5457, %r5458, %r73;
	// inline asm
	ld.local.u32 	%r5461, [%rd33];
	ld.local.u32 	%r5462, [%rd6];
	// inline asm
	prmt.b32 %r8737, %r5461, %r5462, %r73;
	// inline asm
	ld.local.u32 	%r5465, [%rd6];
	ld.local.u32 	%r5466, [%rd32+8];
	// inline asm
	prmt.b32 %r8738, %r5465, %r5466, %r73;
	// inline asm
	ld.local.v2.u32 	{%r5573, %r5574}, [%rd32+4];
	// inline asm
	prmt.b32 %r8739, %r5574, %r5573, %r73;
	// inline asm
	ld.local.u32 	%r5473, [%rd32+4];
	ld.local.u32 	%r5474, [%rd32];
	// inline asm
	prmt.b32 %r5472, %r5473, %r5474, %r73;
	// inline asm
	st.local.u32 	[%rd35+8], %r5472;
	ld.local.u32 	%r5477, [%rd32];
	ld.local.u32 	%r5478, [%rd5];
	// inline asm
	prmt.b32 %r5476, %r5477, %r5478, %r73;
	// inline asm
	st.local.u32 	[%rd35+4], %r5476;
	ld.local.u32 	%r5481, [%rd5];
	ld.local.u32 	%r5482, [%rd31+8];
	// inline asm
	prmt.b32 %r5480, %r5481, %r5482, %r73;
	// inline asm
	st.local.u32 	[%rd35], %r5480;
	ld.local.v2.u32 	{%r5575, %r5576}, [%rd31+4];
	// inline asm
	prmt.b32 %r5484, %r5576, %r5575, %r73;
	// inline asm
	st.local.u32 	[%rd8], %r5484;
	ld.local.u32 	%r5489, [%rd31+4];
	ld.local.u32 	%r5490, [%rd31];
	// inline asm
	prmt.b32 %r5488, %r5489, %r5490, %r73;
	// inline asm
	st.local.u32 	[%rd34+8], %r5488;
	ld.local.u32 	%r5493, [%rd31];
	ld.local.u32 	%r5494, [%rd4];
	// inline asm
	prmt.b32 %r5492, %r5493, %r5494, %r73;
	// inline asm
	st.local.u32 	[%rd34+4], %r5492;
	ld.local.u32 	%r5497, [%rd4];
	ld.local.u32 	%r5498, [%rd30+8];
	// inline asm
	prmt.b32 %r5496, %r5497, %r5498, %r73;
	// inline asm
	st.local.u32 	[%rd34], %r5496;
	ld.local.v2.u32 	{%r5577, %r5578}, [%rd30+4];
	// inline asm
	prmt.b32 %r5500, %r5578, %r5577, %r73;
	// inline asm
	st.local.u32 	[%rd7], %r5500;
	ld.local.u32 	%r5505, [%rd30+4];
	ld.local.u32 	%r5506, [%rd30];
	// inline asm
	prmt.b32 %r5504, %r5505, %r5506, %r73;
	// inline asm
	st.local.u32 	[%rd33+8], %r5504;
	ld.local.u32 	%r5509, [%rd30];
	ld.local.u32 	%r5510, [%rd3];
	// inline asm
	prmt.b32 %r5508, %r5509, %r5510, %r73;
	// inline asm
	st.local.u32 	[%rd33+4], %r5508;
	ld.local.u32 	%r5513, [%rd3];
	ld.local.u32 	%r5514, [%rd29+8];
	// inline asm
	prmt.b32 %r5512, %r5513, %r5514, %r73;
	// inline asm
	st.local.u32 	[%rd33], %r5512;
	ld.local.v2.u32 	{%r5579, %r5580}, [%rd29+4];
	// inline asm
	prmt.b32 %r5516, %r5580, %r5579, %r73;
	// inline asm
	st.local.u32 	[%rd6], %r5516;
	ld.local.u32 	%r5521, [%rd29+4];
	ld.local.u32 	%r5522, [%rd29];
	// inline asm
	prmt.b32 %r5520, %r5521, %r5522, %r73;
	// inline asm
	st.local.u32 	[%rd32+8], %r5520;
	ld.local.u32 	%r5525, [%rd29];
	ld.local.u32 	%r5526, [%rd2];
	// inline asm
	prmt.b32 %r5524, %r5525, %r5526, %r73;
	// inline asm
	st.local.u32 	[%rd32+4], %r5524;
	ld.local.u32 	%r5529, [%rd2];
	ld.local.u32 	%r5530, [%rd28+8];
	// inline asm
	prmt.b32 %r5528, %r5529, %r5530, %r73;
	// inline asm
	st.local.u32 	[%rd32], %r5528;
	ld.local.v2.u32 	{%r5581, %r5582}, [%rd28+4];
	// inline asm
	prmt.b32 %r5532, %r5582, %r5581, %r73;
	// inline asm
	st.local.u32 	[%rd5], %r5532;
	ld.local.u32 	%r5537, [%rd28+4];
	ld.local.u32 	%r5538, [%rd28];
	// inline asm
	prmt.b32 %r5536, %r5537, %r5538, %r73;
	// inline asm
	st.local.u32 	[%rd31+8], %r5536;
	ld.local.u32 	%r5541, [%rd28];
	ld.local.u32 	%r5542, [%rd1];
	// inline asm
	prmt.b32 %r5540, %r5541, %r5542, %r73;
	// inline asm
	st.local.u32 	[%rd31+4], %r5540;
	ld.local.u32 	%r5545, [%rd1];
	// inline asm
	prmt.b32 %r5544, %r5545, %r8735, %r73;
	// inline asm
	st.local.u32 	[%rd31], %r5544;
	st.local.u32 	[%rd4], %r8735;
	st.local.v2.u32 	[%rd30+4], {%r8735, %r8735};
	st.local.u32 	[%rd30], %r8735;
	st.local.u32 	[%rd3], %r8735;
	st.local.v2.u32 	[%rd29+4], {%r8735, %r8735};
	st.local.u32 	[%rd29], %r8735;
	st.local.u32 	[%rd2], %r8735;
	st.local.v2.u32 	[%rd28+4], {%r8735, %r8735};
	st.local.u32 	[%rd28], %r8735;
	st.local.u32 	[%rd1], %r8735;
	mov.u32 	%r8748, %r8735;
	mov.u32 	%r8749, %r8735;
	bra.uni 	BB4_411;

BB4_390:
	setp.eq.s32	%p204, %r2574, 29;
	@%p204 bra 	BB4_391;
	bra.uni 	BB4_417;

BB4_391:
	mov.u32 	%r8735, 0;
	// inline asm
	prmt.b32 %r8766, %r8735, %r2572, %r73;
	// inline asm
	ld.local.v2.u32 	{%r3015, %r3016}, [%rd35+4];
	// inline asm
	prmt.b32 %r8767, %r3016, %r3015, %r73;
	// inline asm
	ld.local.u32 	%r2889, [%rd35+4];
	ld.local.u32 	%r2890, [%rd35];
	// inline asm
	prmt.b32 %r8760, %r2889, %r2890, %r73;
	// inline asm
	ld.local.u32 	%r2893, [%rd35];
	ld.local.u32 	%r2894, [%rd8];
	// inline asm
	prmt.b32 %r8761, %r2893, %r2894, %r73;
	// inline asm
	ld.local.u32 	%r2897, [%rd8];
	ld.local.u32 	%r2898, [%rd34+8];
	// inline asm
	prmt.b32 %r8762, %r2897, %r2898, %r73;
	// inline asm
	ld.local.v2.u32 	{%r3017, %r3018}, [%rd34+4];
	// inline asm
	prmt.b32 %r8763, %r3018, %r3017, %r73;
	// inline asm
	ld.local.u32 	%r2905, [%rd34+4];
	ld.local.u32 	%r2906, [%rd34];
	// inline asm
	prmt.b32 %r8756, %r2905, %r2906, %r73;
	// inline asm
	ld.local.u32 	%r2909, [%rd34];
	ld.local.u32 	%r2910, [%rd7];
	// inline asm
	prmt.b32 %r8757, %r2909, %r2910, %r73;
	// inline asm
	ld.local.u32 	%r2913, [%rd7];
	ld.local.u32 	%r2914, [%rd33+8];
	// inline asm
	prmt.b32 %r8758, %r2913, %r2914, %r73;
	// inline asm
	ld.local.v2.u32 	{%r3019, %r3020}, [%rd33+4];
	// inline asm
	prmt.b32 %r8759, %r3020, %r3019, %r73;
	// inline asm
	ld.local.u32 	%r2921, [%rd33+4];
	ld.local.u32 	%r2922, [%rd33];
	// inline asm
	prmt.b32 %r8752, %r2921, %r2922, %r73;
	// inline asm
	ld.local.u32 	%r2925, [%rd33];
	ld.local.u32 	%r2926, [%rd6];
	// inline asm
	prmt.b32 %r8753, %r2925, %r2926, %r73;
	// inline asm
	ld.local.u32 	%r2929, [%rd6];
	ld.local.u32 	%r2930, [%rd32+8];
	// inline asm
	prmt.b32 %r8754, %r2929, %r2930, %r73;
	// inline asm
	ld.local.v2.u32 	{%r3021, %r3022}, [%rd32+4];
	// inline asm
	prmt.b32 %r8755, %r3022, %r3021, %r73;
	// inline asm
	ld.local.u32 	%r2937, [%rd32+4];
	ld.local.u32 	%r2938, [%rd32];
	// inline asm
	prmt.b32 %r8748, %r2937, %r2938, %r73;
	// inline asm
	ld.local.u32 	%r2941, [%rd32];
	ld.local.u32 	%r2942, [%rd5];
	// inline asm
	prmt.b32 %r8749, %r2941, %r2942, %r73;
	// inline asm
	ld.local.u32 	%r2945, [%rd5];
	ld.local.u32 	%r2946, [%rd31+8];
	// inline asm
	prmt.b32 %r8750, %r2945, %r2946, %r73;
	// inline asm
	ld.local.v2.u32 	{%r3023, %r3024}, [%rd31+4];
	// inline asm
	prmt.b32 %r8751, %r3024, %r3023, %r73;
	// inline asm
	ld.local.u32 	%r2953, [%rd31+4];
	ld.local.u32 	%r2954, [%rd31];
	// inline asm
	prmt.b32 %r8744, %r2953, %r2954, %r73;
	// inline asm
	ld.local.u32 	%r2957, [%rd31];
	ld.local.u32 	%r2958, [%rd4];
	// inline asm
	prmt.b32 %r8745, %r2957, %r2958, %r73;
	// inline asm
	ld.local.u32 	%r2961, [%rd4];
	ld.local.u32 	%r2962, [%rd30+8];
	// inline asm
	prmt.b32 %r8746, %r2961, %r2962, %r73;
	// inline asm
	ld.local.v2.u32 	{%r3025, %r3026}, [%rd30+4];
	// inline asm
	prmt.b32 %r8747, %r3026, %r3025, %r73;
	// inline asm
	ld.local.u32 	%r2969, [%rd30+4];
	ld.local.u32 	%r2970, [%rd30];
	// inline asm
	prmt.b32 %r8740, %r2969, %r2970, %r73;
	// inline asm
	ld.local.u32 	%r2973, [%rd30];
	ld.local.u32 	%r2974, [%rd3];
	// inline asm
	prmt.b32 %r8741, %r2973, %r2974, %r73;
	// inline asm
	ld.local.u32 	%r2977, [%rd3];
	ld.local.u32 	%r2978, [%rd29+8];
	// inline asm
	prmt.b32 %r8742, %r2977, %r2978, %r73;
	// inline asm
	ld.local.v2.u32 	{%r3027, %r3028}, [%rd29+4];
	// inline asm
	prmt.b32 %r8743, %r3028, %r3027, %r73;
	// inline asm
	ld.local.u32 	%r2985, [%rd29+4];
	ld.local.u32 	%r2986, [%rd29];
	// inline asm
	prmt.b32 %r8736, %r2985, %r2986, %r73;
	// inline asm
	ld.local.u32 	%r2989, [%rd29];
	ld.local.u32 	%r2990, [%rd2];
	// inline asm
	prmt.b32 %r8737, %r2989, %r2990, %r73;
	// inline asm
	ld.local.u32 	%r2993, [%rd2];
	ld.local.u32 	%r2994, [%rd28+8];
	// inline asm
	prmt.b32 %r8738, %r2993, %r2994, %r73;
	// inline asm
	ld.local.v2.u32 	{%r3029, %r3030}, [%rd28+4];
	// inline asm
	prmt.b32 %r8739, %r3030, %r3029, %r73;
	// inline asm
	ld.local.u32 	%r3001, [%rd28+4];
	ld.local.u32 	%r3002, [%rd28];
	// inline asm
	prmt.b32 %r3000, %r3001, %r3002, %r73;
	// inline asm
	st.local.u32 	[%rd35+8], %r3000;
	ld.local.u32 	%r3005, [%rd28];
	ld.local.u32 	%r3006, [%rd1];
	// inline asm
	prmt.b32 %r3004, %r3005, %r3006, %r73;
	// inline asm
	st.local.u32 	[%rd35+4], %r3004;
	ld.local.u32 	%r3009, [%rd1];
	// inline asm
	prmt.b32 %r3008, %r3009, %r8735, %r73;
	// inline asm
	st.local.u32 	[%rd35], %r3008;
	st.local.u32 	[%rd8], %r8735;
	st.local.v2.u32 	[%rd34+4], {%r8735, %r8735};
	st.local.u32 	[%rd34], %r8735;
	st.local.u32 	[%rd7], %r8735;
	st.local.v2.u32 	[%rd33+4], {%r8735, %r8735};
	st.local.u32 	[%rd33], %r8735;
	st.local.u32 	[%rd6], %r8735;
	st.local.v2.u32 	[%rd32+4], {%r8735, %r8735};
	st.local.u32 	[%rd32], %r8735;
	st.local.u32 	[%rd5], %r8735;
	st.local.v2.u32 	[%rd31+4], {%r8735, %r8735};
	st.local.u32 	[%rd31], %r8735;
	st.local.u32 	[%rd4], %r8735;
	st.local.v2.u32 	[%rd30+4], {%r8735, %r8735};
	st.local.u32 	[%rd30], %r8735;
	st.local.u32 	[%rd3], %r8735;
	st.local.v2.u32 	[%rd29+4], {%r8735, %r8735};
	st.local.u32 	[%rd29], %r8735;
	st.local.u32 	[%rd2], %r8735;
	st.local.v2.u32 	[%rd28+4], {%r8735, %r8735};
	st.local.u32 	[%rd28], %r8735;
	st.local.u32 	[%rd1], %r8735;
	mov.u32 	%r8764, %r8735;
	mov.u32 	%r8765, %r8735;
	bra.uni 	BB4_419;

BB4_339:
	setp.eq.s32	%p241, %r2574, 3;
	@%p241 bra 	BB4_340;
	bra.uni 	BB4_417;

BB4_340:
	mov.u32 	%r8735, 0;
	// inline asm
	prmt.b32 %r8736, %r8735, %r2572, %r73;
	// inline asm
	ld.local.v2.u32 	{%r7292, %r7293}, [%rd35+4];
	// inline asm
	prmt.b32 %r8737, %r7293, %r7292, %r73;
	// inline asm
	ld.local.u32 	%r7140, [%rd35+4];
	ld.local.u32 	%r7141, [%rd35];
	// inline asm
	prmt.b32 %r8738, %r7140, %r7141, %r73;
	// inline asm
	ld.local.u32 	%r7144, [%rd35];
	ld.local.u32 	%r7145, [%rd8];
	// inline asm
	prmt.b32 %r8739, %r7144, %r7145, %r73;
	// inline asm
	ld.local.u32 	%r7148, [%rd8];
	ld.local.u32 	%r7149, [%rd34+8];
	// inline asm
	prmt.b32 %r7147, %r7148, %r7149, %r73;
	// inline asm
	st.local.u32 	[%rd35+8], %r7147;
	ld.local.v2.u32 	{%r7294, %r7295}, [%rd34+4];
	// inline asm
	prmt.b32 %r7151, %r7295, %r7294, %r73;
	// inline asm
	st.local.u32 	[%rd35+4], %r7151;
	ld.local.u32 	%r7156, [%rd34+4];
	ld.local.u32 	%r7157, [%rd34];
	// inline asm
	prmt.b32 %r7155, %r7156, %r7157, %r73;
	// inline asm
	st.local.u32 	[%rd35], %r7155;
	ld.local.u32 	%r7160, [%rd34];
	ld.local.u32 	%r7161, [%rd7];
	// inline asm
	prmt.b32 %r7159, %r7160, %r7161, %r73;
	// inline asm
	st.local.u32 	[%rd8], %r7159;
	ld.local.u32 	%r7164, [%rd7];
	ld.local.u32 	%r7165, [%rd33+8];
	// inline asm
	prmt.b32 %r7163, %r7164, %r7165, %r73;
	// inline asm
	st.local.u32 	[%rd34+8], %r7163;
	ld.local.v2.u32 	{%r7296, %r7297}, [%rd33+4];
	// inline asm
	prmt.b32 %r7167, %r7297, %r7296, %r73;
	// inline asm
	st.local.u32 	[%rd34+4], %r7167;
	ld.local.u32 	%r7172, [%rd33+4];
	ld.local.u32 	%r7173, [%rd33];
	// inline asm
	prmt.b32 %r7171, %r7172, %r7173, %r73;
	// inline asm
	st.local.u32 	[%rd34], %r7171;
	ld.local.u32 	%r7176, [%rd33];
	ld.local.u32 	%r7177, [%rd6];
	// inline asm
	prmt.b32 %r7175, %r7176, %r7177, %r73;
	// inline asm
	st.local.u32 	[%rd7], %r7175;
	ld.local.u32 	%r7180, [%rd6];
	ld.local.u32 	%r7181, [%rd32+8];
	// inline asm
	prmt.b32 %r7179, %r7180, %r7181, %r73;
	// inline asm
	st.local.u32 	[%rd33+8], %r7179;
	ld.local.v2.u32 	{%r7298, %r7299}, [%rd32+4];
	// inline asm
	prmt.b32 %r7183, %r7299, %r7298, %r73;
	// inline asm
	st.local.u32 	[%rd33+4], %r7183;
	ld.local.u32 	%r7188, [%rd32+4];
	ld.local.u32 	%r7189, [%rd32];
	// inline asm
	prmt.b32 %r7187, %r7188, %r7189, %r73;
	// inline asm
	st.local.u32 	[%rd33], %r7187;
	ld.local.u32 	%r7192, [%rd32];
	ld.local.u32 	%r7193, [%rd5];
	// inline asm
	prmt.b32 %r7191, %r7192, %r7193, %r73;
	// inline asm
	st.local.u32 	[%rd6], %r7191;
	ld.local.u32 	%r7196, [%rd5];
	ld.local.u32 	%r7197, [%rd31+8];
	// inline asm
	prmt.b32 %r7195, %r7196, %r7197, %r73;
	// inline asm
	st.local.u32 	[%rd32+8], %r7195;
	ld.local.v2.u32 	{%r7300, %r7301}, [%rd31+4];
	// inline asm
	prmt.b32 %r7199, %r7301, %r7300, %r73;
	// inline asm
	st.local.u32 	[%rd32+4], %r7199;
	ld.local.u32 	%r7204, [%rd31+4];
	ld.local.u32 	%r7205, [%rd31];
	// inline asm
	prmt.b32 %r7203, %r7204, %r7205, %r73;
	// inline asm
	st.local.u32 	[%rd32], %r7203;
	ld.local.u32 	%r7208, [%rd31];
	ld.local.u32 	%r7209, [%rd4];
	// inline asm
	prmt.b32 %r7207, %r7208, %r7209, %r73;
	// inline asm
	st.local.u32 	[%rd5], %r7207;
	ld.local.u32 	%r7212, [%rd4];
	ld.local.u32 	%r7213, [%rd30+8];
	// inline asm
	prmt.b32 %r7211, %r7212, %r7213, %r73;
	// inline asm
	st.local.u32 	[%rd31+8], %r7211;
	ld.local.v2.u32 	{%r7302, %r7303}, [%rd30+4];
	// inline asm
	prmt.b32 %r7215, %r7303, %r7302, %r73;
	// inline asm
	st.local.u32 	[%rd31+4], %r7215;
	ld.local.u32 	%r7220, [%rd30+4];
	ld.local.u32 	%r7221, [%rd30];
	// inline asm
	prmt.b32 %r7219, %r7220, %r7221, %r73;
	// inline asm
	st.local.u32 	[%rd31], %r7219;
	ld.local.u32 	%r7224, [%rd30];
	ld.local.u32 	%r7225, [%rd3];
	// inline asm
	prmt.b32 %r7223, %r7224, %r7225, %r73;
	// inline asm
	st.local.u32 	[%rd4], %r7223;
	ld.local.u32 	%r7228, [%rd3];
	ld.local.u32 	%r7229, [%rd29+8];
	// inline asm
	prmt.b32 %r7227, %r7228, %r7229, %r73;
	// inline asm
	st.local.u32 	[%rd30+8], %r7227;
	ld.local.v2.u32 	{%r7304, %r7305}, [%rd29+4];
	// inline asm
	prmt.b32 %r7231, %r7305, %r7304, %r73;
	// inline asm
	st.local.u32 	[%rd30+4], %r7231;
	ld.local.u32 	%r7236, [%rd29+4];
	ld.local.u32 	%r7237, [%rd29];
	// inline asm
	prmt.b32 %r7235, %r7236, %r7237, %r73;
	// inline asm
	st.local.u32 	[%rd30], %r7235;
	ld.local.u32 	%r7240, [%rd29];
	ld.local.u32 	%r7241, [%rd2];
	// inline asm
	prmt.b32 %r7239, %r7240, %r7241, %r73;
	// inline asm
	st.local.u32 	[%rd3], %r7239;
	ld.local.u32 	%r7244, [%rd2];
	ld.local.u32 	%r7245, [%rd28+8];
	// inline asm
	prmt.b32 %r7243, %r7244, %r7245, %r73;
	// inline asm
	st.local.u32 	[%rd29+8], %r7243;
	ld.local.v2.u32 	{%r7306, %r7307}, [%rd28+4];
	// inline asm
	prmt.b32 %r7247, %r7307, %r7306, %r73;
	// inline asm
	st.local.u32 	[%rd29+4], %r7247;
	ld.local.u32 	%r7252, [%rd28+4];
	ld.local.u32 	%r7253, [%rd28];
	// inline asm
	prmt.b32 %r7251, %r7252, %r7253, %r73;
	// inline asm
	st.local.u32 	[%rd29], %r7251;
	ld.local.u32 	%r7256, [%rd28];
	ld.local.u32 	%r7257, [%rd1];
	// inline asm
	prmt.b32 %r7255, %r7256, %r7257, %r73;
	// inline asm
	st.local.u32 	[%rd2], %r7255;
	ld.local.u32 	%r7260, [%rd1];
	// inline asm
	prmt.b32 %r7259, %r7260, %r8735, %r73;
	// inline asm
	st.local.v2.u32 	[%rd28+4], {%r8735, %r7259};
	st.local.u32 	[%rd28], %r8735;
	st.local.u32 	[%rd1], %r8735;

BB4_341:
	mov.u32 	%r8740, %r8735;
	mov.u32 	%r8741, %r8735;
	mov.u32 	%r8742, %r8735;
	mov.u32 	%r8743, %r8735;
	bra.uni 	BB4_409;

BB4_371:
	setp.eq.s32	%p218, %r2574, 19;
	@%p218 bra 	BB4_372;
	bra.uni 	BB4_417;

BB4_372:
	mov.u32 	%r8735, 0;
	// inline asm
	prmt.b32 %r8752, %r8735, %r2572, %r73;
	// inline asm
	ld.local.v2.u32 	{%r4580, %r4581}, [%rd35+4];
	// inline asm
	prmt.b32 %r8753, %r4581, %r4580, %r73;
	// inline asm
	ld.local.u32 	%r4444, [%rd35+4];
	ld.local.u32 	%r4445, [%rd35];
	// inline asm
	prmt.b32 %r8754, %r4444, %r4445, %r73;
	// inline asm
	ld.local.u32 	%r4448, [%rd35];
	ld.local.u32 	%r4449, [%rd8];
	// inline asm
	prmt.b32 %r8755, %r4448, %r4449, %r73;
	// inline asm
	ld.local.u32 	%r4452, [%rd8];
	ld.local.u32 	%r4453, [%rd34+8];
	// inline asm
	prmt.b32 %r8748, %r4452, %r4453, %r73;
	// inline asm
	ld.local.v2.u32 	{%r4582, %r4583}, [%rd34+4];
	// inline asm
	prmt.b32 %r8749, %r4583, %r4582, %r73;
	// inline asm
	ld.local.u32 	%r4460, [%rd34+4];
	ld.local.u32 	%r4461, [%rd34];
	// inline asm
	prmt.b32 %r8750, %r4460, %r4461, %r73;
	// inline asm
	ld.local.u32 	%r4464, [%rd34];
	ld.local.u32 	%r4465, [%rd7];
	// inline asm
	prmt.b32 %r8751, %r4464, %r4465, %r73;
	// inline asm
	ld.local.u32 	%r4468, [%rd7];
	ld.local.u32 	%r4469, [%rd33+8];
	// inline asm
	prmt.b32 %r8744, %r4468, %r4469, %r73;
	// inline asm
	ld.local.v2.u32 	{%r4584, %r4585}, [%rd33+4];
	// inline asm
	prmt.b32 %r8745, %r4585, %r4584, %r73;
	// inline asm
	ld.local.u32 	%r4476, [%rd33+4];
	ld.local.u32 	%r4477, [%rd33];
	// inline asm
	prmt.b32 %r8746, %r4476, %r4477, %r73;
	// inline asm
	ld.local.u32 	%r4480, [%rd33];
	ld.local.u32 	%r4481, [%rd6];
	// inline asm
	prmt.b32 %r8747, %r4480, %r4481, %r73;
	// inline asm
	ld.local.u32 	%r4484, [%rd6];
	ld.local.u32 	%r4485, [%rd32+8];
	// inline asm
	prmt.b32 %r8740, %r4484, %r4485, %r73;
	// inline asm
	ld.local.v2.u32 	{%r4586, %r4587}, [%rd32+4];
	// inline asm
	prmt.b32 %r8741, %r4587, %r4586, %r73;
	// inline asm
	ld.local.u32 	%r4492, [%rd32+4];
	ld.local.u32 	%r4493, [%rd32];
	// inline asm
	prmt.b32 %r8742, %r4492, %r4493, %r73;
	// inline asm
	ld.local.u32 	%r4496, [%rd32];
	ld.local.u32 	%r4497, [%rd5];
	// inline asm
	prmt.b32 %r8743, %r4496, %r4497, %r73;
	// inline asm
	ld.local.u32 	%r4500, [%rd5];
	ld.local.u32 	%r4501, [%rd31+8];
	// inline asm
	prmt.b32 %r8736, %r4500, %r4501, %r73;
	// inline asm
	ld.local.v2.u32 	{%r4588, %r4589}, [%rd31+4];
	// inline asm
	prmt.b32 %r8737, %r4589, %r4588, %r73;
	// inline asm
	ld.local.u32 	%r4508, [%rd31+4];
	ld.local.u32 	%r4509, [%rd31];
	// inline asm
	prmt.b32 %r8738, %r4508, %r4509, %r73;
	// inline asm
	ld.local.u32 	%r4512, [%rd31];
	ld.local.u32 	%r4513, [%rd4];
	// inline asm
	prmt.b32 %r8739, %r4512, %r4513, %r73;
	// inline asm
	ld.local.u32 	%r4516, [%rd4];
	ld.local.u32 	%r4517, [%rd30+8];
	// inline asm
	prmt.b32 %r4515, %r4516, %r4517, %r73;
	// inline asm
	st.local.u32 	[%rd35+8], %r4515;
	ld.local.v2.u32 	{%r4590, %r4591}, [%rd30+4];
	// inline asm
	prmt.b32 %r4519, %r4591, %r4590, %r73;
	// inline asm
	st.local.u32 	[%rd35+4], %r4519;
	ld.local.u32 	%r4524, [%rd30+4];
	ld.local.u32 	%r4525, [%rd30];
	// inline asm
	prmt.b32 %r4523, %r4524, %r4525, %r73;
	// inline asm
	st.local.u32 	[%rd35], %r4523;
	ld.local.u32 	%r4528, [%rd30];
	ld.local.u32 	%r4529, [%rd3];
	// inline asm
	prmt.b32 %r4527, %r4528, %r4529, %r73;
	// inline asm
	st.local.u32 	[%rd8], %r4527;
	ld.local.u32 	%r4532, [%rd3];
	ld.local.u32 	%r4533, [%rd29+8];
	// inline asm
	prmt.b32 %r4531, %r4532, %r4533, %r73;
	// inline asm
	st.local.u32 	[%rd34+8], %r4531;
	ld.local.v2.u32 	{%r4592, %r4593}, [%rd29+4];
	// inline asm
	prmt.b32 %r4535, %r4593, %r4592, %r73;
	// inline asm
	st.local.u32 	[%rd34+4], %r4535;
	ld.local.u32 	%r4540, [%rd29+4];
	ld.local.u32 	%r4541, [%rd29];
	// inline asm
	prmt.b32 %r4539, %r4540, %r4541, %r73;
	// inline asm
	st.local.u32 	[%rd34], %r4539;
	ld.local.u32 	%r4544, [%rd29];
	ld.local.u32 	%r4545, [%rd2];
	// inline asm
	prmt.b32 %r4543, %r4544, %r4545, %r73;
	// inline asm
	st.local.u32 	[%rd7], %r4543;
	ld.local.u32 	%r4548, [%rd2];
	ld.local.u32 	%r4549, [%rd28+8];
	// inline asm
	prmt.b32 %r4547, %r4548, %r4549, %r73;
	// inline asm
	st.local.u32 	[%rd33+8], %r4547;
	ld.local.v2.u32 	{%r4594, %r4595}, [%rd28+4];
	// inline asm
	prmt.b32 %r4551, %r4595, %r4594, %r73;
	// inline asm
	st.local.u32 	[%rd33+4], %r4551;
	ld.local.u32 	%r4556, [%rd28+4];
	ld.local.u32 	%r4557, [%rd28];
	// inline asm
	prmt.b32 %r4555, %r4556, %r4557, %r73;
	// inline asm
	st.local.u32 	[%rd33], %r4555;
	ld.local.u32 	%r4560, [%rd28];
	ld.local.u32 	%r4561, [%rd1];
	// inline asm
	prmt.b32 %r4559, %r4560, %r4561, %r73;
	// inline asm
	st.local.u32 	[%rd6], %r4559;
	ld.local.u32 	%r4564, [%rd1];
	// inline asm
	prmt.b32 %r4563, %r4564, %r8735, %r73;
	// inline asm
	st.local.v2.u32 	[%rd32+4], {%r8735, %r4563};
	st.local.u32 	[%rd32], %r8735;
	st.local.u32 	[%rd5], %r8735;
	st.local.v2.u32 	[%rd31+4], {%r8735, %r8735};
	st.local.u32 	[%rd31], %r8735;
	st.local.u32 	[%rd4], %r8735;
	st.local.v2.u32 	[%rd30+4], {%r8735, %r8735};
	st.local.u32 	[%rd30], %r8735;
	st.local.u32 	[%rd3], %r8735;
	st.local.v2.u32 	[%rd29+4], {%r8735, %r8735};
	st.local.u32 	[%rd29], %r8735;
	st.local.u32 	[%rd2], %r8735;
	st.local.v2.u32 	[%rd28+4], {%r8735, %r8735};
	st.local.u32 	[%rd28], %r8735;
	st.local.u32 	[%rd1], %r8735;
	bra.uni 	BB4_412;

BB4_355:
	setp.eq.s32	%p230, %r2574, 11;
	@%p230 bra 	BB4_356;
	bra.uni 	BB4_417;

BB4_356:
	mov.u32 	%r8735, 0;
	// inline asm
	prmt.b32 %r8744, %r8735, %r2572, %r73;
	// inline asm
	ld.local.v2.u32 	{%r5904, %r5905}, [%rd35+4];
	// inline asm
	prmt.b32 %r8745, %r5905, %r5904, %r73;
	// inline asm
	ld.local.u32 	%r5760, [%rd35+4];
	ld.local.u32 	%r5761, [%rd35];
	// inline asm
	prmt.b32 %r8746, %r5760, %r5761, %r73;
	// inline asm
	ld.local.u32 	%r5764, [%rd35];
	ld.local.u32 	%r5765, [%rd8];
	// inline asm
	prmt.b32 %r8747, %r5764, %r5765, %r73;
	// inline asm
	ld.local.u32 	%r5768, [%rd8];
	ld.local.u32 	%r5769, [%rd34+8];
	// inline asm
	prmt.b32 %r8740, %r5768, %r5769, %r73;
	// inline asm
	ld.local.v2.u32 	{%r5906, %r5907}, [%rd34+4];
	// inline asm
	prmt.b32 %r8741, %r5907, %r5906, %r73;
	// inline asm
	ld.local.u32 	%r5776, [%rd34+4];
	ld.local.u32 	%r5777, [%rd34];
	// inline asm
	prmt.b32 %r8742, %r5776, %r5777, %r73;
	// inline asm
	ld.local.u32 	%r5780, [%rd34];
	ld.local.u32 	%r5781, [%rd7];
	// inline asm
	prmt.b32 %r8743, %r5780, %r5781, %r73;
	// inline asm
	ld.local.u32 	%r5784, [%rd7];
	ld.local.u32 	%r5785, [%rd33+8];
	// inline asm
	prmt.b32 %r8736, %r5784, %r5785, %r73;
	// inline asm
	ld.local.v2.u32 	{%r5908, %r5909}, [%rd33+4];
	// inline asm
	prmt.b32 %r8737, %r5909, %r5908, %r73;
	// inline asm
	ld.local.u32 	%r5792, [%rd33+4];
	ld.local.u32 	%r5793, [%rd33];
	// inline asm
	prmt.b32 %r8738, %r5792, %r5793, %r73;
	// inline asm
	ld.local.u32 	%r5796, [%rd33];
	ld.local.u32 	%r5797, [%rd6];
	// inline asm
	prmt.b32 %r8739, %r5796, %r5797, %r73;
	// inline asm
	ld.local.u32 	%r5800, [%rd6];
	ld.local.u32 	%r5801, [%rd32+8];
	// inline asm
	prmt.b32 %r5799, %r5800, %r5801, %r73;
	// inline asm
	st.local.u32 	[%rd35+8], %r5799;
	ld.local.v2.u32 	{%r5910, %r5911}, [%rd32+4];
	// inline asm
	prmt.b32 %r5803, %r5911, %r5910, %r73;
	// inline asm
	st.local.u32 	[%rd35+4], %r5803;
	ld.local.u32 	%r5808, [%rd32+4];
	ld.local.u32 	%r5809, [%rd32];
	// inline asm
	prmt.b32 %r5807, %r5808, %r5809, %r73;
	// inline asm
	st.local.u32 	[%rd35], %r5807;
	ld.local.u32 	%r5812, [%rd32];
	ld.local.u32 	%r5813, [%rd5];
	// inline asm
	prmt.b32 %r5811, %r5812, %r5813, %r73;
	// inline asm
	st.local.u32 	[%rd8], %r5811;
	ld.local.u32 	%r5816, [%rd5];
	ld.local.u32 	%r5817, [%rd31+8];
	// inline asm
	prmt.b32 %r5815, %r5816, %r5817, %r73;
	// inline asm
	st.local.u32 	[%rd34+8], %r5815;
	ld.local.v2.u32 	{%r5912, %r5913}, [%rd31+4];
	// inline asm
	prmt.b32 %r5819, %r5913, %r5912, %r73;
	// inline asm
	st.local.u32 	[%rd34+4], %r5819;
	ld.local.u32 	%r5824, [%rd31+4];
	ld.local.u32 	%r5825, [%rd31];
	// inline asm
	prmt.b32 %r5823, %r5824, %r5825, %r73;
	// inline asm
	st.local.u32 	[%rd34], %r5823;
	ld.local.u32 	%r5828, [%rd31];
	ld.local.u32 	%r5829, [%rd4];
	// inline asm
	prmt.b32 %r5827, %r5828, %r5829, %r73;
	// inline asm
	st.local.u32 	[%rd7], %r5827;
	ld.local.u32 	%r5832, [%rd4];
	ld.local.u32 	%r5833, [%rd30+8];
	// inline asm
	prmt.b32 %r5831, %r5832, %r5833, %r73;
	// inline asm
	st.local.u32 	[%rd33+8], %r5831;
	ld.local.v2.u32 	{%r5914, %r5915}, [%rd30+4];
	// inline asm
	prmt.b32 %r5835, %r5915, %r5914, %r73;
	// inline asm
	st.local.u32 	[%rd33+4], %r5835;
	ld.local.u32 	%r5840, [%rd30+4];
	ld.local.u32 	%r5841, [%rd30];
	// inline asm
	prmt.b32 %r5839, %r5840, %r5841, %r73;
	// inline asm
	st.local.u32 	[%rd33], %r5839;
	ld.local.u32 	%r5844, [%rd30];
	ld.local.u32 	%r5845, [%rd3];
	// inline asm
	prmt.b32 %r5843, %r5844, %r5845, %r73;
	// inline asm
	st.local.u32 	[%rd6], %r5843;
	ld.local.u32 	%r5848, [%rd3];
	ld.local.u32 	%r5849, [%rd29+8];
	// inline asm
	prmt.b32 %r5847, %r5848, %r5849, %r73;
	// inline asm
	st.local.u32 	[%rd32+8], %r5847;
	ld.local.v2.u32 	{%r5916, %r5917}, [%rd29+4];
	// inline asm
	prmt.b32 %r5851, %r5917, %r5916, %r73;
	// inline asm
	st.local.u32 	[%rd32+4], %r5851;
	ld.local.u32 	%r5856, [%rd29+4];
	ld.local.u32 	%r5857, [%rd29];
	// inline asm
	prmt.b32 %r5855, %r5856, %r5857, %r73;
	// inline asm
	st.local.u32 	[%rd32], %r5855;
	ld.local.u32 	%r5860, [%rd29];
	ld.local.u32 	%r5861, [%rd2];
	// inline asm
	prmt.b32 %r5859, %r5860, %r5861, %r73;
	// inline asm
	st.local.u32 	[%rd5], %r5859;
	ld.local.u32 	%r5864, [%rd2];
	ld.local.u32 	%r5865, [%rd28+8];
	// inline asm
	prmt.b32 %r5863, %r5864, %r5865, %r73;
	// inline asm
	st.local.u32 	[%rd31+8], %r5863;
	ld.local.v2.u32 	{%r5918, %r5919}, [%rd28+4];
	// inline asm
	prmt.b32 %r5867, %r5919, %r5918, %r73;
	// inline asm
	st.local.u32 	[%rd31+4], %r5867;
	ld.local.u32 	%r5872, [%rd28+4];
	ld.local.u32 	%r5873, [%rd28];
	// inline asm
	prmt.b32 %r5871, %r5872, %r5873, %r73;
	// inline asm
	st.local.u32 	[%rd31], %r5871;
	ld.local.u32 	%r5876, [%rd28];
	ld.local.u32 	%r5877, [%rd1];
	// inline asm
	prmt.b32 %r5875, %r5876, %r5877, %r73;
	// inline asm
	st.local.u32 	[%rd4], %r5875;
	ld.local.u32 	%r5880, [%rd1];
	// inline asm
	prmt.b32 %r5879, %r5880, %r8735, %r73;
	// inline asm
	st.local.v2.u32 	[%rd30+4], {%r8735, %r5879};
	st.local.u32 	[%rd30], %r8735;
	st.local.u32 	[%rd3], %r8735;
	st.local.v2.u32 	[%rd29+4], {%r8735, %r8735};
	st.local.u32 	[%rd29], %r8735;
	st.local.u32 	[%rd2], %r8735;
	st.local.v2.u32 	[%rd28+4], {%r8735, %r8735};
	st.local.u32 	[%rd28], %r8735;
	st.local.u32 	[%rd1], %r8735;
	bra.uni 	BB4_410;

BB4_386:
	setp.eq.s32	%p207, %r2574, 27;
	@%p207 bra 	BB4_387;
	bra.uni 	BB4_417;

BB4_387:
	mov.u32 	%r8735, 0;
	// inline asm
	prmt.b32 %r8760, %r8735, %r2572, %r73;
	// inline asm
	ld.local.v2.u32 	{%r3320, %r3321}, [%rd35+4];
	// inline asm
	prmt.b32 %r8761, %r3321, %r3320, %r73;
	// inline asm
	ld.local.u32 	%r3192, [%rd35+4];
	ld.local.u32 	%r3193, [%rd35];
	// inline asm
	prmt.b32 %r8762, %r3192, %r3193, %r73;
	// inline asm
	ld.local.u32 	%r3196, [%rd35];
	ld.local.u32 	%r3197, [%rd8];
	// inline asm
	prmt.b32 %r8763, %r3196, %r3197, %r73;
	// inline asm
	ld.local.u32 	%r3200, [%rd8];
	ld.local.u32 	%r3201, [%rd34+8];
	// inline asm
	prmt.b32 %r8756, %r3200, %r3201, %r73;
	// inline asm
	ld.local.v2.u32 	{%r3322, %r3323}, [%rd34+4];
	// inline asm
	prmt.b32 %r8757, %r3323, %r3322, %r73;
	// inline asm
	ld.local.u32 	%r3208, [%rd34+4];
	ld.local.u32 	%r3209, [%rd34];
	// inline asm
	prmt.b32 %r8758, %r3208, %r3209, %r73;
	// inline asm
	ld.local.u32 	%r3212, [%rd34];
	ld.local.u32 	%r3213, [%rd7];
	// inline asm
	prmt.b32 %r8759, %r3212, %r3213, %r73;
	// inline asm
	ld.local.u32 	%r3216, [%rd7];
	ld.local.u32 	%r3217, [%rd33+8];
	// inline asm
	prmt.b32 %r8752, %r3216, %r3217, %r73;
	// inline asm
	ld.local.v2.u32 	{%r3324, %r3325}, [%rd33+4];
	// inline asm
	prmt.b32 %r8753, %r3325, %r3324, %r73;
	// inline asm
	ld.local.u32 	%r3224, [%rd33+4];
	ld.local.u32 	%r3225, [%rd33];
	// inline asm
	prmt.b32 %r8754, %r3224, %r3225, %r73;
	// inline asm
	ld.local.u32 	%r3228, [%rd33];
	ld.local.u32 	%r3229, [%rd6];
	// inline asm
	prmt.b32 %r8755, %r3228, %r3229, %r73;
	// inline asm
	ld.local.u32 	%r3232, [%rd6];
	ld.local.u32 	%r3233, [%rd32+8];
	// inline asm
	prmt.b32 %r8748, %r3232, %r3233, %r73;
	// inline asm
	ld.local.v2.u32 	{%r3326, %r3327}, [%rd32+4];
	// inline asm
	prmt.b32 %r8749, %r3327, %r3326, %r73;
	// inline asm
	ld.local.u32 	%r3240, [%rd32+4];
	ld.local.u32 	%r3241, [%rd32];
	// inline asm
	prmt.b32 %r8750, %r3240, %r3241, %r73;
	// inline asm
	ld.local.u32 	%r3244, [%rd32];
	ld.local.u32 	%r3245, [%rd5];
	// inline asm
	prmt.b32 %r8751, %r3244, %r3245, %r73;
	// inline asm
	ld.local.u32 	%r3248, [%rd5];
	ld.local.u32 	%r3249, [%rd31+8];
	// inline asm
	prmt.b32 %r8744, %r3248, %r3249, %r73;
	// inline asm
	ld.local.v2.u32 	{%r3328, %r3329}, [%rd31+4];
	// inline asm
	prmt.b32 %r8745, %r3329, %r3328, %r73;
	// inline asm
	ld.local.u32 	%r3256, [%rd31+4];
	ld.local.u32 	%r3257, [%rd31];
	// inline asm
	prmt.b32 %r8746, %r3256, %r3257, %r73;
	// inline asm
	ld.local.u32 	%r3260, [%rd31];
	ld.local.u32 	%r3261, [%rd4];
	// inline asm
	prmt.b32 %r8747, %r3260, %r3261, %r73;
	// inline asm
	ld.local.u32 	%r3264, [%rd4];
	ld.local.u32 	%r3265, [%rd30+8];
	// inline asm
	prmt.b32 %r8740, %r3264, %r3265, %r73;
	// inline asm
	ld.local.v2.u32 	{%r3330, %r3331}, [%rd30+4];
	// inline asm
	prmt.b32 %r8741, %r3331, %r3330, %r73;
	// inline asm
	ld.local.u32 	%r3272, [%rd30+4];
	ld.local.u32 	%r3273, [%rd30];
	// inline asm
	prmt.b32 %r8742, %r3272, %r3273, %r73;
	// inline asm
	ld.local.u32 	%r3276, [%rd30];
	ld.local.u32 	%r3277, [%rd3];
	// inline asm
	prmt.b32 %r8743, %r3276, %r3277, %r73;
	// inline asm
	ld.local.u32 	%r3280, [%rd3];
	ld.local.u32 	%r3281, [%rd29+8];
	// inline asm
	prmt.b32 %r8736, %r3280, %r3281, %r73;
	// inline asm
	ld.local.v2.u32 	{%r3332, %r3333}, [%rd29+4];
	// inline asm
	prmt.b32 %r8737, %r3333, %r3332, %r73;
	// inline asm
	ld.local.u32 	%r3288, [%rd29+4];
	ld.local.u32 	%r3289, [%rd29];
	// inline asm
	prmt.b32 %r8738, %r3288, %r3289, %r73;
	// inline asm
	ld.local.u32 	%r3292, [%rd29];
	ld.local.u32 	%r3293, [%rd2];
	// inline asm
	prmt.b32 %r8739, %r3292, %r3293, %r73;
	// inline asm
	ld.local.u32 	%r3296, [%rd2];
	ld.local.u32 	%r3297, [%rd28+8];
	// inline asm
	prmt.b32 %r3295, %r3296, %r3297, %r73;
	// inline asm
	st.local.u32 	[%rd35+8], %r3295;
	ld.local.v2.u32 	{%r3334, %r3335}, [%rd28+4];
	// inline asm
	prmt.b32 %r3299, %r3335, %r3334, %r73;
	// inline asm
	st.local.u32 	[%rd35+4], %r3299;
	ld.local.u32 	%r3304, [%rd28+4];
	ld.local.u32 	%r3305, [%rd28];
	// inline asm
	prmt.b32 %r3303, %r3304, %r3305, %r73;
	// inline asm
	st.local.u32 	[%rd35], %r3303;
	ld.local.u32 	%r3308, [%rd28];
	ld.local.u32 	%r3309, [%rd1];
	// inline asm
	prmt.b32 %r3307, %r3308, %r3309, %r73;
	// inline asm
	st.local.u32 	[%rd8], %r3307;
	ld.local.u32 	%r3312, [%rd1];
	// inline asm
	prmt.b32 %r3311, %r3312, %r8735, %r73;
	// inline asm
	st.local.v2.u32 	[%rd34+4], {%r8735, %r3311};
	st.local.u32 	[%rd34], %r8735;
	st.local.u32 	[%rd7], %r8735;
	st.local.v2.u32 	[%rd33+4], {%r8735, %r8735};
	st.local.u32 	[%rd33], %r8735;
	st.local.u32 	[%rd6], %r8735;
	st.local.v2.u32 	[%rd32+4], {%r8735, %r8735};
	st.local.u32 	[%rd32], %r8735;
	st.local.u32 	[%rd5], %r8735;
	st.local.v2.u32 	[%rd31+4], {%r8735, %r8735};
	st.local.u32 	[%rd31], %r8735;
	st.local.u32 	[%rd4], %r8735;
	st.local.v2.u32 	[%rd30+4], {%r8735, %r8735};
	st.local.u32 	[%rd30], %r8735;
	st.local.u32 	[%rd3], %r8735;
	st.local.v2.u32 	[%rd29+4], {%r8735, %r8735};
	st.local.u32 	[%rd29], %r8735;
	st.local.u32 	[%rd2], %r8735;
	st.local.v2.u32 	[%rd28+4], {%r8735, %r8735};
	st.local.u32 	[%rd28], %r8735;
	st.local.u32 	[%rd1], %r8735;
	bra.uni 	BB4_414;

BB4_347:
	setp.eq.s32	%p236, %r2574, 7;
	@%p236 bra 	BB4_348;
	bra.uni 	BB4_417;

BB4_348:
	mov.u32 	%r8735, 0;
	// inline asm
	prmt.b32 %r8740, %r8735, %r2572, %r73;
	// inline asm
	ld.local.v2.u32 	{%r6590, %r6591}, [%rd35+4];
	// inline asm
	prmt.b32 %r8741, %r6591, %r6590, %r73;
	// inline asm
	ld.local.u32 	%r6442, [%rd35+4];
	ld.local.u32 	%r6443, [%rd35];
	// inline asm
	prmt.b32 %r8742, %r6442, %r6443, %r73;
	// inline asm
	ld.local.u32 	%r6446, [%rd35];
	ld.local.u32 	%r6447, [%rd8];
	// inline asm
	prmt.b32 %r8743, %r6446, %r6447, %r73;
	// inline asm
	ld.local.u32 	%r6450, [%rd8];
	ld.local.u32 	%r6451, [%rd34+8];
	// inline asm
	prmt.b32 %r8736, %r6450, %r6451, %r73;
	// inline asm
	ld.local.v2.u32 	{%r6592, %r6593}, [%rd34+4];
	// inline asm
	prmt.b32 %r8737, %r6593, %r6592, %r73;
	// inline asm
	ld.local.u32 	%r6458, [%rd34+4];
	ld.local.u32 	%r6459, [%rd34];
	// inline asm
	prmt.b32 %r8738, %r6458, %r6459, %r73;
	// inline asm
	ld.local.u32 	%r6462, [%rd34];
	ld.local.u32 	%r6463, [%rd7];
	// inline asm
	prmt.b32 %r8739, %r6462, %r6463, %r73;
	// inline asm
	ld.local.u32 	%r6466, [%rd7];
	ld.local.u32 	%r6467, [%rd33+8];
	// inline asm
	prmt.b32 %r6465, %r6466, %r6467, %r73;
	// inline asm
	st.local.u32 	[%rd35+8], %r6465;
	ld.local.v2.u32 	{%r6594, %r6595}, [%rd33+4];
	// inline asm
	prmt.b32 %r6469, %r6595, %r6594, %r73;
	// inline asm
	st.local.u32 	[%rd35+4], %r6469;
	ld.local.u32 	%r6474, [%rd33+4];
	ld.local.u32 	%r6475, [%rd33];
	// inline asm
	prmt.b32 %r6473, %r6474, %r6475, %r73;
	// inline asm
	st.local.u32 	[%rd35], %r6473;
	ld.local.u32 	%r6478, [%rd33];
	ld.local.u32 	%r6479, [%rd6];
	// inline asm
	prmt.b32 %r6477, %r6478, %r6479, %r73;
	// inline asm
	st.local.u32 	[%rd8], %r6477;
	ld.local.u32 	%r6482, [%rd6];
	ld.local.u32 	%r6483, [%rd32+8];
	// inline asm
	prmt.b32 %r6481, %r6482, %r6483, %r73;
	// inline asm
	st.local.u32 	[%rd34+8], %r6481;
	ld.local.v2.u32 	{%r6596, %r6597}, [%rd32+4];
	// inline asm
	prmt.b32 %r6485, %r6597, %r6596, %r73;
	// inline asm
	st.local.u32 	[%rd34+4], %r6485;
	ld.local.u32 	%r6490, [%rd32+4];
	ld.local.u32 	%r6491, [%rd32];
	// inline asm
	prmt.b32 %r6489, %r6490, %r6491, %r73;
	// inline asm
	st.local.u32 	[%rd34], %r6489;
	ld.local.u32 	%r6494, [%rd32];
	ld.local.u32 	%r6495, [%rd5];
	// inline asm
	prmt.b32 %r6493, %r6494, %r6495, %r73;
	// inline asm
	st.local.u32 	[%rd7], %r6493;
	ld.local.u32 	%r6498, [%rd5];
	ld.local.u32 	%r6499, [%rd31+8];
	// inline asm
	prmt.b32 %r6497, %r6498, %r6499, %r73;
	// inline asm
	st.local.u32 	[%rd33+8], %r6497;
	ld.local.v2.u32 	{%r6598, %r6599}, [%rd31+4];
	// inline asm
	prmt.b32 %r6501, %r6599, %r6598, %r73;
	// inline asm
	st.local.u32 	[%rd33+4], %r6501;
	ld.local.u32 	%r6506, [%rd31+4];
	ld.local.u32 	%r6507, [%rd31];
	// inline asm
	prmt.b32 %r6505, %r6506, %r6507, %r73;
	// inline asm
	st.local.u32 	[%rd33], %r6505;
	ld.local.u32 	%r6510, [%rd31];
	ld.local.u32 	%r6511, [%rd4];
	// inline asm
	prmt.b32 %r6509, %r6510, %r6511, %r73;
	// inline asm
	st.local.u32 	[%rd6], %r6509;
	ld.local.u32 	%r6514, [%rd4];
	ld.local.u32 	%r6515, [%rd30+8];
	// inline asm
	prmt.b32 %r6513, %r6514, %r6515, %r73;
	// inline asm
	st.local.u32 	[%rd32+8], %r6513;
	ld.local.v2.u32 	{%r6600, %r6601}, [%rd30+4];
	// inline asm
	prmt.b32 %r6517, %r6601, %r6600, %r73;
	// inline asm
	st.local.u32 	[%rd32+4], %r6517;
	ld.local.u32 	%r6522, [%rd30+4];
	ld.local.u32 	%r6523, [%rd30];
	// inline asm
	prmt.b32 %r6521, %r6522, %r6523, %r73;
	// inline asm
	st.local.u32 	[%rd32], %r6521;
	ld.local.u32 	%r6526, [%rd30];
	ld.local.u32 	%r6527, [%rd3];
	// inline asm
	prmt.b32 %r6525, %r6526, %r6527, %r73;
	// inline asm
	st.local.u32 	[%rd5], %r6525;
	ld.local.u32 	%r6530, [%rd3];
	ld.local.u32 	%r6531, [%rd29+8];
	// inline asm
	prmt.b32 %r6529, %r6530, %r6531, %r73;
	// inline asm
	st.local.u32 	[%rd31+8], %r6529;
	ld.local.v2.u32 	{%r6602, %r6603}, [%rd29+4];
	// inline asm
	prmt.b32 %r6533, %r6603, %r6602, %r73;
	// inline asm
	st.local.u32 	[%rd31+4], %r6533;
	ld.local.u32 	%r6538, [%rd29+4];
	ld.local.u32 	%r6539, [%rd29];
	// inline asm
	prmt.b32 %r6537, %r6538, %r6539, %r73;
	// inline asm
	st.local.u32 	[%rd31], %r6537;
	ld.local.u32 	%r6542, [%rd29];
	ld.local.u32 	%r6543, [%rd2];
	// inline asm
	prmt.b32 %r6541, %r6542, %r6543, %r73;
	// inline asm
	st.local.u32 	[%rd4], %r6541;
	ld.local.u32 	%r6546, [%rd2];
	ld.local.u32 	%r6547, [%rd28+8];
	// inline asm
	prmt.b32 %r6545, %r6546, %r6547, %r73;
	// inline asm
	st.local.u32 	[%rd30+8], %r6545;
	ld.local.v2.u32 	{%r6604, %r6605}, [%rd28+4];
	// inline asm
	prmt.b32 %r6549, %r6605, %r6604, %r73;
	// inline asm
	st.local.u32 	[%rd30+4], %r6549;
	ld.local.u32 	%r6554, [%rd28+4];
	ld.local.u32 	%r6555, [%rd28];
	// inline asm
	prmt.b32 %r6553, %r6554, %r6555, %r73;
	// inline asm
	st.local.u32 	[%rd30], %r6553;
	ld.local.u32 	%r6558, [%rd28];
	ld.local.u32 	%r6559, [%rd1];
	// inline asm
	prmt.b32 %r6557, %r6558, %r6559, %r73;
	// inline asm
	st.local.u32 	[%rd3], %r6557;
	ld.local.u32 	%r6562, [%rd1];
	// inline asm
	prmt.b32 %r6561, %r6562, %r8735, %r73;
	// inline asm
	st.local.v2.u32 	[%rd29+4], {%r8735, %r6561};
	st.local.u32 	[%rd29], %r8735;
	st.local.u32 	[%rd2], %r8735;
	st.local.v2.u32 	[%rd28+4], {%r8735, %r8735};
	st.local.u32 	[%rd28], %r8735;
	st.local.u32 	[%rd1], %r8735;

BB4_409:
	mov.u32 	%r8744, %r8735;
	mov.u32 	%r8745, %r8735;
	mov.u32 	%r8746, %r8735;
	mov.u32 	%r8747, %r8735;

BB4_410:
	mov.u32 	%r8748, %r8735;
	mov.u32 	%r8749, %r8735;
	mov.u32 	%r8750, %r8735;
	mov.u32 	%r8751, %r8735;

BB4_411:
	mov.u32 	%r8752, %r8735;
	mov.u32 	%r8753, %r8735;
	mov.u32 	%r8754, %r8735;
	mov.u32 	%r8755, %r8735;

BB4_412:
	mov.u32 	%r8756, %r8735;
	mov.u32 	%r8757, %r8735;
	mov.u32 	%r8758, %r8735;
	mov.u32 	%r8759, %r8735;

BB4_413:
	mov.u32 	%r8760, %r8735;
	mov.u32 	%r8761, %r8735;
	mov.u32 	%r8762, %r8735;
	mov.u32 	%r8763, %r8735;

BB4_414:
	mov.u32 	%r8764, %r8735;
	mov.u32 	%r8765, %r8735;
	mov.u32 	%r8766, %r8735;
	mov.u32 	%r8767, %r8735;
	bra.uni 	BB4_419;

BB4_378:
	setp.eq.s32	%p213, %r2574, 23;
	@%p213 bra 	BB4_379;
	bra.uni 	BB4_417;

BB4_379:
	mov.u32 	%r8735, 0;
	// inline asm
	prmt.b32 %r8756, %r8735, %r2572, %r73;
	// inline asm
	ld.local.v2.u32 	{%r3942, %r3943}, [%rd35+4];
	// inline asm
	prmt.b32 %r8757, %r3943, %r3942, %r73;
	// inline asm
	ld.local.u32 	%r3810, [%rd35+4];
	ld.local.u32 	%r3811, [%rd35];
	// inline asm
	prmt.b32 %r8758, %r3810, %r3811, %r73;
	// inline asm
	ld.local.u32 	%r3814, [%rd35];
	ld.local.u32 	%r3815, [%rd8];
	// inline asm
	prmt.b32 %r8759, %r3814, %r3815, %r73;
	// inline asm
	ld.local.u32 	%r3818, [%rd8];
	ld.local.u32 	%r3819, [%rd34+8];
	// inline asm
	prmt.b32 %r8752, %r3818, %r3819, %r73;
	// inline asm
	ld.local.v2.u32 	{%r3944, %r3945}, [%rd34+4];
	// inline asm
	prmt.b32 %r8753, %r3945, %r3944, %r73;
	// inline asm
	ld.local.u32 	%r3826, [%rd34+4];
	ld.local.u32 	%r3827, [%rd34];
	// inline asm
	prmt.b32 %r8754, %r3826, %r3827, %r73;
	// inline asm
	ld.local.u32 	%r3830, [%rd34];
	ld.local.u32 	%r3831, [%rd7];
	// inline asm
	prmt.b32 %r8755, %r3830, %r3831, %r73;
	// inline asm
	ld.local.u32 	%r3834, [%rd7];
	ld.local.u32 	%r3835, [%rd33+8];
	// inline asm
	prmt.b32 %r8748, %r3834, %r3835, %r73;
	// inline asm
	ld.local.v2.u32 	{%r3946, %r3947}, [%rd33+4];
	// inline asm
	prmt.b32 %r8749, %r3947, %r3946, %r73;
	// inline asm
	ld.local.u32 	%r3842, [%rd33+4];
	ld.local.u32 	%r3843, [%rd33];
	// inline asm
	prmt.b32 %r8750, %r3842, %r3843, %r73;
	// inline asm
	ld.local.u32 	%r3846, [%rd33];
	ld.local.u32 	%r3847, [%rd6];
	// inline asm
	prmt.b32 %r8751, %r3846, %r3847, %r73;
	// inline asm
	ld.local.u32 	%r3850, [%rd6];
	ld.local.u32 	%r3851, [%rd32+8];
	// inline asm
	prmt.b32 %r8744, %r3850, %r3851, %r73;
	// inline asm
	ld.local.v2.u32 	{%r3948, %r3949}, [%rd32+4];
	// inline asm
	prmt.b32 %r8745, %r3949, %r3948, %r73;
	// inline asm
	ld.local.u32 	%r3858, [%rd32+4];
	ld.local.u32 	%r3859, [%rd32];
	// inline asm
	prmt.b32 %r8746, %r3858, %r3859, %r73;
	// inline asm
	ld.local.u32 	%r3862, [%rd32];
	ld.local.u32 	%r3863, [%rd5];
	// inline asm
	prmt.b32 %r8747, %r3862, %r3863, %r73;
	// inline asm
	ld.local.u32 	%r3866, [%rd5];
	ld.local.u32 	%r3867, [%rd31+8];
	// inline asm
	prmt.b32 %r8740, %r3866, %r3867, %r73;
	// inline asm
	ld.local.v2.u32 	{%r3950, %r3951}, [%rd31+4];
	// inline asm
	prmt.b32 %r8741, %r3951, %r3950, %r73;
	// inline asm
	ld.local.u32 	%r3874, [%rd31+4];
	ld.local.u32 	%r3875, [%rd31];
	// inline asm
	prmt.b32 %r8742, %r3874, %r3875, %r73;
	// inline asm
	ld.local.u32 	%r3878, [%rd31];
	ld.local.u32 	%r3879, [%rd4];
	// inline asm
	prmt.b32 %r8743, %r3878, %r3879, %r73;
	// inline asm
	ld.local.u32 	%r3882, [%rd4];
	ld.local.u32 	%r3883, [%rd30+8];
	// inline asm
	prmt.b32 %r8736, %r3882, %r3883, %r73;
	// inline asm
	ld.local.v2.u32 	{%r3952, %r3953}, [%rd30+4];
	// inline asm
	prmt.b32 %r8737, %r3953, %r3952, %r73;
	// inline asm
	ld.local.u32 	%r3890, [%rd30+4];
	ld.local.u32 	%r3891, [%rd30];
	// inline asm
	prmt.b32 %r8738, %r3890, %r3891, %r73;
	// inline asm
	ld.local.u32 	%r3894, [%rd30];
	ld.local.u32 	%r3895, [%rd3];
	// inline asm
	prmt.b32 %r8739, %r3894, %r3895, %r73;
	// inline asm
	ld.local.u32 	%r3898, [%rd3];
	ld.local.u32 	%r3899, [%rd29+8];
	// inline asm
	prmt.b32 %r3897, %r3898, %r3899, %r73;
	// inline asm
	st.local.u32 	[%rd35+8], %r3897;
	ld.local.v2.u32 	{%r3954, %r3955}, [%rd29+4];
	// inline asm
	prmt.b32 %r3901, %r3955, %r3954, %r73;
	// inline asm
	st.local.u32 	[%rd35+4], %r3901;
	ld.local.u32 	%r3906, [%rd29+4];
	ld.local.u32 	%r3907, [%rd29];
	// inline asm
	prmt.b32 %r3905, %r3906, %r3907, %r73;
	// inline asm
	st.local.u32 	[%rd35], %r3905;
	ld.local.u32 	%r3910, [%rd29];
	ld.local.u32 	%r3911, [%rd2];
	// inline asm
	prmt.b32 %r3909, %r3910, %r3911, %r73;
	// inline asm
	st.local.u32 	[%rd8], %r3909;
	ld.local.u32 	%r3914, [%rd2];
	ld.local.u32 	%r3915, [%rd28+8];
	// inline asm
	prmt.b32 %r3913, %r3914, %r3915, %r73;
	// inline asm
	st.local.u32 	[%rd34+8], %r3913;
	ld.local.v2.u32 	{%r3956, %r3957}, [%rd28+4];
	// inline asm
	prmt.b32 %r3917, %r3957, %r3956, %r73;
	// inline asm
	st.local.u32 	[%rd34+4], %r3917;
	ld.local.u32 	%r3922, [%rd28+4];
	ld.local.u32 	%r3923, [%rd28];
	// inline asm
	prmt.b32 %r3921, %r3922, %r3923, %r73;
	// inline asm
	st.local.u32 	[%rd34], %r3921;
	ld.local.u32 	%r3926, [%rd28];
	ld.local.u32 	%r3927, [%rd1];
	// inline asm
	prmt.b32 %r3925, %r3926, %r3927, %r73;
	// inline asm
	st.local.u32 	[%rd7], %r3925;
	ld.local.u32 	%r3930, [%rd1];
	// inline asm
	prmt.b32 %r3929, %r3930, %r8735, %r73;
	// inline asm
	st.local.v2.u32 	[%rd33+4], {%r8735, %r3929};
	st.local.u32 	[%rd33], %r8735;
	st.local.u32 	[%rd6], %r8735;
	st.local.v2.u32 	[%rd32+4], {%r8735, %r8735};
	st.local.u32 	[%rd32], %r8735;
	st.local.u32 	[%rd5], %r8735;
	st.local.v2.u32 	[%rd31+4], {%r8735, %r8735};
	st.local.u32 	[%rd31], %r8735;
	st.local.u32 	[%rd4], %r8735;
	st.local.v2.u32 	[%rd30+4], {%r8735, %r8735};
	st.local.u32 	[%rd30], %r8735;
	st.local.u32 	[%rd3], %r8735;
	st.local.v2.u32 	[%rd29+4], {%r8735, %r8735};
	st.local.u32 	[%rd29], %r8735;
	st.local.u32 	[%rd2], %r8735;
	st.local.v2.u32 	[%rd28+4], {%r8735, %r8735};
	st.local.u32 	[%rd28], %r8735;
	st.local.u32 	[%rd1], %r8735;
	bra.uni 	BB4_413;

BB4_362:
	setp.eq.s32	%p225, %r2574, 15;
	@%p225 bra 	BB4_363;
	bra.uni 	BB4_417;

BB4_363:
	mov.u32 	%r8735, 0;
	// inline asm
	prmt.b32 %r8748, %r8735, %r2572, %r73;
	// inline asm
	ld.local.v2.u32 	{%r5234, %r5235}, [%rd35+4];
	// inline asm
	prmt.b32 %r8749, %r5235, %r5234, %r73;
	// inline asm
	ld.local.u32 	%r5094, [%rd35+4];
	ld.local.u32 	%r5095, [%rd35];
	// inline asm
	prmt.b32 %r8750, %r5094, %r5095, %r73;
	// inline asm
	ld.local.u32 	%r5098, [%rd35];
	ld.local.u32 	%r5099, [%rd8];
	// inline asm
	prmt.b32 %r8751, %r5098, %r5099, %r73;
	// inline asm
	ld.local.u32 	%r5102, [%rd8];
	ld.local.u32 	%r5103, [%rd34+8];
	// inline asm
	prmt.b32 %r8744, %r5102, %r5103, %r73;
	// inline asm
	ld.local.v2.u32 	{%r5236, %r5237}, [%rd34+4];
	// inline asm
	prmt.b32 %r8745, %r5237, %r5236, %r73;
	// inline asm
	ld.local.u32 	%r5110, [%rd34+4];
	ld.local.u32 	%r5111, [%rd34];
	// inline asm
	prmt.b32 %r8746, %r5110, %r5111, %r73;
	// inline asm
	ld.local.u32 	%r5114, [%rd34];
	ld.local.u32 	%r5115, [%rd7];
	// inline asm
	prmt.b32 %r8747, %r5114, %r5115, %r73;
	// inline asm
	ld.local.u32 	%r5118, [%rd7];
	ld.local.u32 	%r5119, [%rd33+8];
	// inline asm
	prmt.b32 %r8740, %r5118, %r5119, %r73;
	// inline asm
	ld.local.v2.u32 	{%r5238, %r5239}, [%rd33+4];
	// inline asm
	prmt.b32 %r8741, %r5239, %r5238, %r73;
	// inline asm
	ld.local.u32 	%r5126, [%rd33+4];
	ld.local.u32 	%r5127, [%rd33];
	// inline asm
	prmt.b32 %r8742, %r5126, %r5127, %r73;
	// inline asm
	ld.local.u32 	%r5130, [%rd33];
	ld.local.u32 	%r5131, [%rd6];
	// inline asm
	prmt.b32 %r8743, %r5130, %r5131, %r73;
	// inline asm
	ld.local.u32 	%r5134, [%rd6];
	ld.local.u32 	%r5135, [%rd32+8];
	// inline asm
	prmt.b32 %r8736, %r5134, %r5135, %r73;
	// inline asm
	ld.local.v2.u32 	{%r5240, %r5241}, [%rd32+4];
	// inline asm
	prmt.b32 %r8737, %r5241, %r5240, %r73;
	// inline asm
	ld.local.u32 	%r5142, [%rd32+4];
	ld.local.u32 	%r5143, [%rd32];
	// inline asm
	prmt.b32 %r8738, %r5142, %r5143, %r73;
	// inline asm
	ld.local.u32 	%r5146, [%rd32];
	ld.local.u32 	%r5147, [%rd5];
	// inline asm
	prmt.b32 %r8739, %r5146, %r5147, %r73;
	// inline asm
	ld.local.u32 	%r5150, [%rd5];
	ld.local.u32 	%r5151, [%rd31+8];
	// inline asm
	prmt.b32 %r5149, %r5150, %r5151, %r73;
	// inline asm
	st.local.u32 	[%rd35+8], %r5149;
	ld.local.v2.u32 	{%r5242, %r5243}, [%rd31+4];
	// inline asm
	prmt.b32 %r5153, %r5243, %r5242, %r73;
	// inline asm
	st.local.u32 	[%rd35+4], %r5153;
	ld.local.u32 	%r5158, [%rd31+4];
	ld.local.u32 	%r5159, [%rd31];
	// inline asm
	prmt.b32 %r5157, %r5158, %r5159, %r73;
	// inline asm
	st.local.u32 	[%rd35], %r5157;
	ld.local.u32 	%r5162, [%rd31];
	ld.local.u32 	%r5163, [%rd4];
	// inline asm
	prmt.b32 %r5161, %r5162, %r5163, %r73;
	// inline asm
	st.local.u32 	[%rd8], %r5161;
	ld.local.u32 	%r5166, [%rd4];
	ld.local.u32 	%r5167, [%rd30+8];
	// inline asm
	prmt.b32 %r5165, %r5166, %r5167, %r73;
	// inline asm
	st.local.u32 	[%rd34+8], %r5165;
	ld.local.v2.u32 	{%r5244, %r5245}, [%rd30+4];
	// inline asm
	prmt.b32 %r5169, %r5245, %r5244, %r73;
	// inline asm
	st.local.u32 	[%rd34+4], %r5169;
	ld.local.u32 	%r5174, [%rd30+4];
	ld.local.u32 	%r5175, [%rd30];
	// inline asm
	prmt.b32 %r5173, %r5174, %r5175, %r73;
	// inline asm
	st.local.u32 	[%rd34], %r5173;
	ld.local.u32 	%r5178, [%rd30];
	ld.local.u32 	%r5179, [%rd3];
	// inline asm
	prmt.b32 %r5177, %r5178, %r5179, %r73;
	// inline asm
	st.local.u32 	[%rd7], %r5177;
	ld.local.u32 	%r5182, [%rd3];
	ld.local.u32 	%r5183, [%rd29+8];
	// inline asm
	prmt.b32 %r5181, %r5182, %r5183, %r73;
	// inline asm
	st.local.u32 	[%rd33+8], %r5181;
	ld.local.v2.u32 	{%r5246, %r5247}, [%rd29+4];
	// inline asm
	prmt.b32 %r5185, %r5247, %r5246, %r73;
	// inline asm
	st.local.u32 	[%rd33+4], %r5185;
	ld.local.u32 	%r5190, [%rd29+4];
	ld.local.u32 	%r5191, [%rd29];
	// inline asm
	prmt.b32 %r5189, %r5190, %r5191, %r73;
	// inline asm
	st.local.u32 	[%rd33], %r5189;
	ld.local.u32 	%r5194, [%rd29];
	ld.local.u32 	%r5195, [%rd2];
	// inline asm
	prmt.b32 %r5193, %r5194, %r5195, %r73;
	// inline asm
	st.local.u32 	[%rd6], %r5193;
	ld.local.u32 	%r5198, [%rd2];
	ld.local.u32 	%r5199, [%rd28+8];
	// inline asm
	prmt.b32 %r5197, %r5198, %r5199, %r73;
	// inline asm
	st.local.u32 	[%rd32+8], %r5197;
	ld.local.v2.u32 	{%r5248, %r5249}, [%rd28+4];
	// inline asm
	prmt.b32 %r5201, %r5249, %r5248, %r73;
	// inline asm
	st.local.u32 	[%rd32+4], %r5201;
	ld.local.u32 	%r5206, [%rd28+4];
	ld.local.u32 	%r5207, [%rd28];
	// inline asm
	prmt.b32 %r5205, %r5206, %r5207, %r73;
	// inline asm
	st.local.u32 	[%rd32], %r5205;
	ld.local.u32 	%r5210, [%rd28];
	ld.local.u32 	%r5211, [%rd1];
	// inline asm
	prmt.b32 %r5209, %r5210, %r5211, %r73;
	// inline asm
	st.local.u32 	[%rd5], %r5209;
	ld.local.u32 	%r5214, [%rd1];
	// inline asm
	prmt.b32 %r5213, %r5214, %r8735, %r73;
	// inline asm
	st.local.v2.u32 	[%rd31+4], {%r8735, %r5213};
	st.local.u32 	[%rd31], %r8735;
	st.local.u32 	[%rd4], %r8735;
	st.local.v2.u32 	[%rd30+4], {%r8735, %r8735};
	st.local.u32 	[%rd30], %r8735;
	st.local.u32 	[%rd3], %r8735;
	st.local.v2.u32 	[%rd29+4], {%r8735, %r8735};
	st.local.u32 	[%rd29], %r8735;
	st.local.u32 	[%rd2], %r8735;
	st.local.v2.u32 	[%rd28+4], {%r8735, %r8735};
	st.local.u32 	[%rd28], %r8735;
	st.local.u32 	[%rd1], %r8735;
	bra.uni 	BB4_411;

BB4_393:
	setp.ne.s32	%p202, %r2574, 31;
	@%p202 bra 	BB4_417;

	mov.u32 	%r8735, 0;
	// inline asm
	prmt.b32 %r8764, %r8735, %r2572, %r73;
	// inline asm
	ld.local.v2.u32 	{%r2714, %r2715}, [%rd35+4];
	// inline asm
	prmt.b32 %r8765, %r2715, %r2714, %r73;
	// inline asm
	ld.local.u32 	%r2590, [%rd35+4];
	ld.local.u32 	%r2591, [%rd35];
	// inline asm
	prmt.b32 %r8766, %r2590, %r2591, %r73;
	// inline asm
	ld.local.u32 	%r2594, [%rd35];
	ld.local.u32 	%r2595, [%rd8];
	// inline asm
	prmt.b32 %r8767, %r2594, %r2595, %r73;
	// inline asm
	ld.local.u32 	%r2598, [%rd8];
	ld.local.u32 	%r2599, [%rd34+8];
	// inline asm
	prmt.b32 %r8760, %r2598, %r2599, %r73;
	// inline asm
	ld.local.v2.u32 	{%r2716, %r2717}, [%rd34+4];
	// inline asm
	prmt.b32 %r8761, %r2717, %r2716, %r73;
	// inline asm
	ld.local.u32 	%r2606, [%rd34+4];
	ld.local.u32 	%r2607, [%rd34];
	// inline asm
	prmt.b32 %r8762, %r2606, %r2607, %r73;
	// inline asm
	ld.local.u32 	%r2610, [%rd34];
	ld.local.u32 	%r2611, [%rd7];
	// inline asm
	prmt.b32 %r8763, %r2610, %r2611, %r73;
	// inline asm
	ld.local.u32 	%r2614, [%rd7];
	ld.local.u32 	%r2615, [%rd33+8];
	// inline asm
	prmt.b32 %r8756, %r2614, %r2615, %r73;
	// inline asm
	ld.local.v2.u32 	{%r2718, %r2719}, [%rd33+4];
	// inline asm
	prmt.b32 %r8757, %r2719, %r2718, %r73;
	// inline asm
	ld.local.u32 	%r2622, [%rd33+4];
	ld.local.u32 	%r2623, [%rd33];
	// inline asm
	prmt.b32 %r8758, %r2622, %r2623, %r73;
	// inline asm
	ld.local.u32 	%r2626, [%rd33];
	ld.local.u32 	%r2627, [%rd6];
	// inline asm
	prmt.b32 %r8759, %r2626, %r2627, %r73;
	// inline asm
	ld.local.u32 	%r2630, [%rd6];
	ld.local.u32 	%r2631, [%rd32+8];
	// inline asm
	prmt.b32 %r8752, %r2630, %r2631, %r73;
	// inline asm
	ld.local.v2.u32 	{%r2720, %r2721}, [%rd32+4];
	// inline asm
	prmt.b32 %r8753, %r2721, %r2720, %r73;
	// inline asm
	ld.local.u32 	%r2638, [%rd32+4];
	ld.local.u32 	%r2639, [%rd32];
	// inline asm
	prmt.b32 %r8754, %r2638, %r2639, %r73;
	// inline asm
	ld.local.u32 	%r2642, [%rd32];
	ld.local.u32 	%r2643, [%rd5];
	// inline asm
	prmt.b32 %r8755, %r2642, %r2643, %r73;
	// inline asm
	ld.local.u32 	%r2646, [%rd5];
	ld.local.u32 	%r2647, [%rd31+8];
	// inline asm
	prmt.b32 %r8748, %r2646, %r2647, %r73;
	// inline asm
	ld.local.v2.u32 	{%r2722, %r2723}, [%rd31+4];
	// inline asm
	prmt.b32 %r8749, %r2723, %r2722, %r73;
	// inline asm
	ld.local.u32 	%r2654, [%rd31+4];
	ld.local.u32 	%r2655, [%rd31];
	// inline asm
	prmt.b32 %r8750, %r2654, %r2655, %r73;
	// inline asm
	ld.local.u32 	%r2658, [%rd31];
	ld.local.u32 	%r2659, [%rd4];
	// inline asm
	prmt.b32 %r8751, %r2658, %r2659, %r73;
	// inline asm
	ld.local.u32 	%r2662, [%rd4];
	ld.local.u32 	%r2663, [%rd30+8];
	// inline asm
	prmt.b32 %r8744, %r2662, %r2663, %r73;
	// inline asm
	ld.local.v2.u32 	{%r2724, %r2725}, [%rd30+4];
	// inline asm
	prmt.b32 %r8745, %r2725, %r2724, %r73;
	// inline asm
	ld.local.u32 	%r2670, [%rd30+4];
	ld.local.u32 	%r2671, [%rd30];
	// inline asm
	prmt.b32 %r8746, %r2670, %r2671, %r73;
	// inline asm
	ld.local.u32 	%r2674, [%rd30];
	ld.local.u32 	%r2675, [%rd3];
	// inline asm
	prmt.b32 %r8747, %r2674, %r2675, %r73;
	// inline asm
	ld.local.u32 	%r2678, [%rd3];
	ld.local.u32 	%r2679, [%rd29+8];
	// inline asm
	prmt.b32 %r8740, %r2678, %r2679, %r73;
	// inline asm
	ld.local.v2.u32 	{%r2726, %r2727}, [%rd29+4];
	// inline asm
	prmt.b32 %r8741, %r2727, %r2726, %r73;
	// inline asm
	ld.local.u32 	%r2686, [%rd29+4];
	ld.local.u32 	%r2687, [%rd29];
	// inline asm
	prmt.b32 %r8742, %r2686, %r2687, %r73;
	// inline asm
	ld.local.u32 	%r2690, [%rd29];
	ld.local.u32 	%r2691, [%rd2];
	// inline asm
	prmt.b32 %r8743, %r2690, %r2691, %r73;
	// inline asm
	ld.local.u32 	%r2694, [%rd2];
	ld.local.u32 	%r2695, [%rd28+8];
	// inline asm
	prmt.b32 %r8736, %r2694, %r2695, %r73;
	// inline asm
	ld.local.v2.u32 	{%r2728, %r2729}, [%rd28+4];
	// inline asm
	prmt.b32 %r8737, %r2729, %r2728, %r73;
	// inline asm
	ld.local.u32 	%r2702, [%rd28+4];
	ld.local.u32 	%r2703, [%rd28];
	// inline asm
	prmt.b32 %r8738, %r2702, %r2703, %r73;
	// inline asm
	ld.local.u32 	%r2706, [%rd28];
	ld.local.u32 	%r2707, [%rd1];
	// inline asm
	prmt.b32 %r8739, %r2706, %r2707, %r73;
	// inline asm
	ld.local.u32 	%r2710, [%rd1];
	// inline asm
	prmt.b32 %r2709, %r2710, %r8735, %r73;
	// inline asm
	st.local.v2.u32 	[%rd35+4], {%r8735, %r2709};
	st.local.u32 	[%rd35], %r8735;
	st.local.u32 	[%rd8], %r8735;
	st.local.v2.u32 	[%rd34+4], {%r8735, %r8735};
	st.local.u32 	[%rd34], %r8735;
	st.local.u32 	[%rd7], %r8735;
	st.local.v2.u32 	[%rd33+4], {%r8735, %r8735};
	st.local.u32 	[%rd33], %r8735;
	st.local.u32 	[%rd6], %r8735;
	st.local.v2.u32 	[%rd32+4], {%r8735, %r8735};
	st.local.u32 	[%rd32], %r8735;
	st.local.u32 	[%rd5], %r8735;
	st.local.v2.u32 	[%rd31+4], {%r8735, %r8735};
	st.local.u32 	[%rd31], %r8735;
	st.local.u32 	[%rd4], %r8735;
	st.local.v2.u32 	[%rd30+4], {%r8735, %r8735};
	st.local.u32 	[%rd30], %r8735;
	st.local.u32 	[%rd3], %r8735;
	st.local.v2.u32 	[%rd29+4], {%r8735, %r8735};
	st.local.u32 	[%rd29], %r8735;
	st.local.u32 	[%rd2], %r8735;
	st.local.v2.u32 	[%rd28+4], {%r8735, %r8735};
	st.local.u32 	[%rd28], %r8735;
	st.local.u32 	[%rd1], %r8735;
	bra.uni 	BB4_419;

BB4_417:
	ld.local.u32 	%r8735, [%rd1];
	mov.u32 	%r8736, 0;
	mov.u32 	%r8737, %r8736;
	mov.u32 	%r8738, %r8736;
	mov.u32 	%r8739, %r8736;

BB4_418:
	mov.u32 	%r8740, %r8736;
	mov.u32 	%r8741, %r8736;
	mov.u32 	%r8742, %r8736;
	mov.u32 	%r8743, %r8736;
	mov.u32 	%r8744, %r8736;
	mov.u32 	%r8745, %r8736;
	mov.u32 	%r8746, %r8736;
	mov.u32 	%r8747, %r8736;
	mov.u32 	%r8748, %r8736;
	mov.u32 	%r8749, %r8736;
	mov.u32 	%r8750, %r8736;
	mov.u32 	%r8751, %r8736;
	mov.u32 	%r8752, %r8736;
	mov.u32 	%r8753, %r8736;
	mov.u32 	%r8754, %r8736;
	mov.u32 	%r8755, %r8736;
	mov.u32 	%r8756, %r8736;
	mov.u32 	%r8757, %r8736;
	mov.u32 	%r8758, %r8736;
	mov.u32 	%r8759, %r8736;
	mov.u32 	%r8760, %r8736;
	mov.u32 	%r8761, %r8736;
	mov.u32 	%r8762, %r8736;
	mov.u32 	%r8763, %r8736;
	mov.u32 	%r8764, %r8736;
	mov.u32 	%r8765, %r8736;
	mov.u32 	%r8766, %r8736;
	mov.u32 	%r8767, %r8736;

BB4_419:
	ld.local.u32 	%r7877, [%rd10+56];
	ld.local.u32 	%r7878, [%rd10+64];
	ld.local.u32 	%r7879, [%rd10+72];
	ld.local.u32 	%r7880, [%rd10+80];
	ld.local.u32 	%r7881, [%rd10+88];
	ld.local.u32 	%r7882, [%rd10+96];
	ld.local.u32 	%r7883, [%rd10+104];
	ld.local.u32 	%r7884, [%rd10+112];
	ld.local.u32 	%r7885, [%rd10+120];
	ld.local.u32 	%r7886, [%rd10+128];
	ld.local.u32 	%r7887, [%rd10+136];
	ld.local.u32 	%r7888, [%rd10+144];
	ld.local.u32 	%r7889, [%rd10+152];
	ld.local.u32 	%r7890, [%rd10+160];
	ld.local.u32 	%r7891, [%rd10+168];
	ld.local.u32 	%r7892, [%rd10+176];
	or.b32  	%r7893, %r7877, %r8735;
	st.local.u32 	[%rd10+56], %r7893;
	ld.local.u32 	%r7894, [%rd11+4];
	ld.local.u32 	%r7895, [%rd28];
	ld.local.v2.u32 	{%r7896, %r7897}, [%rd28+4];
	or.b32  	%r7898, %r7894, %r7895;
	st.local.u32 	[%rd11+4], %r7898;
	or.b32  	%r7900, %r7878, %r7896;
	st.local.u32 	[%rd10+64], %r7900;
	ld.local.u32 	%r7902, [%rd12+4];
	or.b32  	%r7903, %r7902, %r7897;
	st.local.u32 	[%rd12+4], %r7903;
	ld.local.u32 	%r7904, [%rd2];
	or.b32  	%r7905, %r7879, %r7904;
	st.local.u32 	[%rd10+72], %r7905;
	ld.local.u32 	%r7906, [%rd13+4];
	ld.local.u32 	%r7907, [%rd29];
	ld.local.v2.u32 	{%r7908, %r7909}, [%rd29+4];
	or.b32  	%r7910, %r7906, %r7907;
	st.local.u32 	[%rd13+4], %r7910;
	or.b32  	%r7912, %r7880, %r7908;
	st.local.u32 	[%rd10+80], %r7912;
	ld.local.u32 	%r7914, [%rd14+4];
	or.b32  	%r7915, %r7914, %r7909;
	st.local.u32 	[%rd14+4], %r7915;
	ld.local.u32 	%r7916, [%rd3];
	or.b32  	%r7917, %r7881, %r7916;
	st.local.u32 	[%rd10+88], %r7917;
	ld.local.u32 	%r7918, [%rd15+4];
	ld.local.u32 	%r7919, [%rd30];
	ld.local.v2.u32 	{%r7920, %r7921}, [%rd30+4];
	or.b32  	%r7922, %r7918, %r7919;
	st.local.u32 	[%rd15+4], %r7922;
	or.b32  	%r7924, %r7882, %r7920;
	st.local.u32 	[%rd10+96], %r7924;
	ld.local.u32 	%r7926, [%rd16+4];
	or.b32  	%r7927, %r7926, %r7921;
	st.local.u32 	[%rd16+4], %r7927;
	ld.local.u32 	%r7928, [%rd4];
	or.b32  	%r7929, %r7883, %r7928;
	st.local.u32 	[%rd10+104], %r7929;
	ld.local.u32 	%r7930, [%rd17+4];
	ld.local.u32 	%r7931, [%rd31];
	ld.local.v2.u32 	{%r7932, %r7933}, [%rd31+4];
	or.b32  	%r7934, %r7930, %r7931;
	st.local.u32 	[%rd17+4], %r7934;
	or.b32  	%r7936, %r7884, %r7932;
	st.local.u32 	[%rd10+112], %r7936;
	ld.local.u32 	%r7938, [%rd18+4];
	or.b32  	%r7939, %r7938, %r7933;
	st.local.u32 	[%rd18+4], %r7939;
	ld.local.u32 	%r7940, [%rd5];
	or.b32  	%r7941, %r7885, %r7940;
	st.local.u32 	[%rd10+120], %r7941;
	ld.local.u32 	%r7942, [%rd19+4];
	ld.local.u32 	%r7943, [%rd32];
	ld.local.v2.u32 	{%r7944, %r7945}, [%rd32+4];
	or.b32  	%r7946, %r7942, %r7943;
	st.local.u32 	[%rd19+4], %r7946;
	or.b32  	%r7948, %r7886, %r7944;
	st.local.u32 	[%rd10+128], %r7948;
	ld.local.u32 	%r7950, [%rd20+4];
	or.b32  	%r7951, %r7950, %r7945;
	st.local.u32 	[%rd20+4], %r7951;
	ld.local.u32 	%r7952, [%rd6];
	or.b32  	%r7953, %r7887, %r7952;
	st.local.u32 	[%rd10+136], %r7953;
	ld.local.u32 	%r7954, [%rd21+4];
	ld.local.u32 	%r7955, [%rd33];
	ld.local.v2.u32 	{%r7956, %r7957}, [%rd33+4];
	or.b32  	%r7958, %r7954, %r7955;
	st.local.u32 	[%rd21+4], %r7958;
	or.b32  	%r7960, %r7888, %r7956;
	st.local.u32 	[%rd10+144], %r7960;
	ld.local.u32 	%r7962, [%rd22+4];
	or.b32  	%r7963, %r7962, %r7957;
	st.local.u32 	[%rd22+4], %r7963;
	ld.local.u32 	%r7964, [%rd7];
	or.b32  	%r7965, %r7889, %r7964;
	st.local.u32 	[%rd10+152], %r7965;
	ld.local.u32 	%r7966, [%rd23+4];
	ld.local.u32 	%r7967, [%rd34];
	ld.local.v2.u32 	{%r7968, %r7969}, [%rd34+4];
	or.b32  	%r7970, %r7966, %r7967;
	st.local.u32 	[%rd23+4], %r7970;
	or.b32  	%r7972, %r7890, %r7968;
	st.local.u32 	[%rd10+160], %r7972;
	ld.local.u32 	%r7974, [%rd24+4];
	or.b32  	%r7975, %r7974, %r7969;
	st.local.u32 	[%rd24+4], %r7975;
	ld.local.u32 	%r7976, [%rd8];
	or.b32  	%r7977, %r7891, %r7976;
	st.local.u32 	[%rd10+168], %r7977;
	ld.local.u32 	%r7978, [%rd25+4];
	ld.local.u32 	%r7979, [%rd35];
	ld.local.v2.u32 	{%r7980, %r7981}, [%rd35+4];
	or.b32  	%r7982, %r7978, %r7979;
	st.local.u32 	[%rd25+4], %r7982;
	or.b32  	%r7984, %r7892, %r7980;
	st.local.u32 	[%rd10+176], %r7984;
	ld.local.u32 	%r7986, [%rd26+4];
	or.b32  	%r7987, %r7986, %r7981;
	st.local.u32 	[%rd26+4], %r7987;
	mov.b64	%rd3452, {%r7898, %r7893};
	mov.b64	%rd3453, {%r7903, %r7900};
	mov.b64	%rd3454, {%r7910, %r7905};
	mov.b64	%rd3455, {%r7915, %r7912};
	mov.b64	%rd3456, {%r7922, %r7917};
	mov.b64	%rd3457, {%r7927, %r7924};
	mov.b64	%rd3458, {%r7934, %r7929};
	mov.b64	%rd3459, {%r7939, %r7936};
	mov.b64	%rd3443, {%r7946, %r7941};
	mov.b64	%rd3442, {%r7951, %r7948};
	mov.b64	%rd3441, {%r7958, %r7953};
	mov.b64	%rd3440, {%r7963, %r7960};
	mov.b64	%rd3439, {%r7970, %r7965};
	mov.b64	%rd3438, {%r7975, %r7972};
	mov.b64	%rd3437, {%r7982, %r7977};
	mov.b64	%rd3436, {%r7987, %r7984};
	ld.local.u64 	%rd238, [%rd10+24];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7988,%dummy}, %rd238;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7989}, %rd238;
	}
	shf.r.wrap.b32 	%r7990, %r7989, %r7988, 14;
	shf.r.wrap.b32 	%r7991, %r7988, %r7989, 14;
	mov.b64 	%rd2367, {%r7991, %r7990};
	shf.r.wrap.b32 	%r7992, %r7989, %r7988, 18;
	shf.r.wrap.b32 	%r7993, %r7988, %r7989, 18;
	mov.b64 	%rd2368, {%r7993, %r7992};
	xor.b64  	%rd2369, %rd2368, %rd2367;
	shf.l.wrap.b32 	%r7994, %r7988, %r7989, 23;
	shf.l.wrap.b32 	%r7995, %r7989, %r7988, 23;
	mov.b64 	%rd2370, {%r7995, %r7994};
	xor.b64  	%rd2371, %rd2369, %rd2370;
	ld.local.u64 	%rd239, [%rd10+40];
	ld.local.u64 	%rd240, [%rd10+32];
	xor.b64  	%rd2372, %rd239, %rd240;
	and.b64  	%rd2373, %rd2372, %rd238;
	xor.b64  	%rd2374, %rd2373, %rd239;
	ld.local.u64 	%rd241, [%rd10+48];
	add.s64 	%rd2375, %rd2374, %rd241;
	add.s64 	%rd2376, %rd2375, %rd3452;
	add.s64 	%rd2377, %rd2376, %rd36;
	add.s64 	%rd2378, %rd2377, %rd2371;
	ld.local.u64 	%rd242, [%rd10+16];
	add.s64 	%rd2379, %rd2378, %rd242;
	ld.local.u64 	%rd243, [%rd9];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7996,%dummy}, %rd243;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7997}, %rd243;
	}
	shf.r.wrap.b32 	%r7998, %r7997, %r7996, 28;
	shf.r.wrap.b32 	%r7999, %r7996, %r7997, 28;
	mov.b64 	%rd2380, {%r7999, %r7998};
	shf.l.wrap.b32 	%r8000, %r7996, %r7997, 30;
	shf.l.wrap.b32 	%r8001, %r7997, %r7996, 30;
	mov.b64 	%rd2381, {%r8001, %r8000};
	xor.b64  	%rd2382, %rd2381, %rd2380;
	shf.l.wrap.b32 	%r8002, %r7996, %r7997, 25;
	shf.l.wrap.b32 	%r8003, %r7997, %r7996, 25;
	mov.b64 	%rd2383, {%r8003, %r8002};
	xor.b64  	%rd2384, %rd2382, %rd2383;
	ld.local.u64 	%rd244, [%rd10+8];
	xor.b64  	%rd2385, %rd244, %rd243;
	ld.local.u64 	%rd245, [%rd10];
	xor.b64  	%rd2386, %rd245, %rd243;
	and.b64  	%rd2387, %rd2385, %rd2386;
	xor.b64  	%rd2388, %rd2387, %rd243;
	add.s64 	%rd2389, %rd2378, %rd2388;
	add.s64 	%rd2390, %rd2389, %rd2384;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8004,%dummy}, %rd2379;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8005}, %rd2379;
	}
	shf.r.wrap.b32 	%r8006, %r8005, %r8004, 14;
	shf.r.wrap.b32 	%r8007, %r8004, %r8005, 14;
	mov.b64 	%rd2391, {%r8007, %r8006};
	shf.r.wrap.b32 	%r8008, %r8005, %r8004, 18;
	shf.r.wrap.b32 	%r8009, %r8004, %r8005, 18;
	mov.b64 	%rd2392, {%r8009, %r8008};
	xor.b64  	%rd2393, %rd2392, %rd2391;
	shf.l.wrap.b32 	%r8010, %r8004, %r8005, 23;
	shf.l.wrap.b32 	%r8011, %r8005, %r8004, 23;
	mov.b64 	%rd2394, {%r8011, %r8010};
	xor.b64  	%rd2395, %rd2393, %rd2394;
	xor.b64  	%rd2396, %rd240, %rd238;
	and.b64  	%rd2397, %rd2379, %rd2396;
	xor.b64  	%rd2398, %rd2397, %rd240;
	add.s64 	%rd2399, %rd3453, %rd239;
	add.s64 	%rd2400, %rd2399, %rd37;
	add.s64 	%rd2401, %rd2400, %rd2398;
	add.s64 	%rd2402, %rd2401, %rd2395;
	add.s64 	%rd2403, %rd2402, %rd244;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8012,%dummy}, %rd2390;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8013}, %rd2390;
	}
	shf.r.wrap.b32 	%r8014, %r8013, %r8012, 28;
	shf.r.wrap.b32 	%r8015, %r8012, %r8013, 28;
	mov.b64 	%rd2404, {%r8015, %r8014};
	shf.l.wrap.b32 	%r8016, %r8012, %r8013, 30;
	shf.l.wrap.b32 	%r8017, %r8013, %r8012, 30;
	mov.b64 	%rd2405, {%r8017, %r8016};
	xor.b64  	%rd2406, %rd2405, %rd2404;
	shf.l.wrap.b32 	%r8018, %r8012, %r8013, 25;
	shf.l.wrap.b32 	%r8019, %r8013, %r8012, 25;
	mov.b64 	%rd2407, {%r8019, %r8018};
	xor.b64  	%rd2408, %rd2406, %rd2407;
	xor.b64  	%rd2409, %rd2390, %rd245;
	xor.b64  	%rd2410, %rd2390, %rd243;
	and.b64  	%rd2411, %rd2410, %rd2409;
	xor.b64  	%rd2412, %rd2411, %rd2390;
	add.s64 	%rd2413, %rd2402, %rd2412;
	add.s64 	%rd2414, %rd2413, %rd2408;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8020,%dummy}, %rd2403;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8021}, %rd2403;
	}
	shf.r.wrap.b32 	%r8022, %r8021, %r8020, 14;
	shf.r.wrap.b32 	%r8023, %r8020, %r8021, 14;
	mov.b64 	%rd2415, {%r8023, %r8022};
	shf.r.wrap.b32 	%r8024, %r8021, %r8020, 18;
	shf.r.wrap.b32 	%r8025, %r8020, %r8021, 18;
	mov.b64 	%rd2416, {%r8025, %r8024};
	xor.b64  	%rd2417, %rd2416, %rd2415;
	shf.l.wrap.b32 	%r8026, %r8020, %r8021, 23;
	shf.l.wrap.b32 	%r8027, %r8021, %r8020, 23;
	mov.b64 	%rd2418, {%r8027, %r8026};
	xor.b64  	%rd2419, %rd2417, %rd2418;
	xor.b64  	%rd2420, %rd2379, %rd238;
	and.b64  	%rd2421, %rd2403, %rd2420;
	xor.b64  	%rd2422, %rd2421, %rd238;
	add.s64 	%rd2423, %rd3454, %rd240;
	add.s64 	%rd2424, %rd2423, %rd38;
	add.s64 	%rd2425, %rd2424, %rd2422;
	add.s64 	%rd2426, %rd2425, %rd2419;
	add.s64 	%rd2427, %rd2426, %rd245;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8028,%dummy}, %rd2414;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8029}, %rd2414;
	}
	shf.r.wrap.b32 	%r8030, %r8029, %r8028, 28;
	shf.r.wrap.b32 	%r8031, %r8028, %r8029, 28;
	mov.b64 	%rd2428, {%r8031, %r8030};
	shf.l.wrap.b32 	%r8032, %r8028, %r8029, 30;
	shf.l.wrap.b32 	%r8033, %r8029, %r8028, 30;
	mov.b64 	%rd2429, {%r8033, %r8032};
	xor.b64  	%rd2430, %rd2429, %rd2428;
	shf.l.wrap.b32 	%r8034, %r8028, %r8029, 25;
	shf.l.wrap.b32 	%r8035, %r8029, %r8028, 25;
	mov.b64 	%rd2431, {%r8035, %r8034};
	xor.b64  	%rd2432, %rd2430, %rd2431;
	xor.b64  	%rd2433, %rd2414, %rd243;
	xor.b64  	%rd2434, %rd2414, %rd2390;
	and.b64  	%rd2435, %rd2434, %rd2433;
	xor.b64  	%rd2436, %rd2435, %rd2414;
	add.s64 	%rd2437, %rd2426, %rd2436;
	add.s64 	%rd2438, %rd2437, %rd2432;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8036,%dummy}, %rd2427;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8037}, %rd2427;
	}
	shf.r.wrap.b32 	%r8038, %r8037, %r8036, 14;
	shf.r.wrap.b32 	%r8039, %r8036, %r8037, 14;
	mov.b64 	%rd2439, {%r8039, %r8038};
	shf.r.wrap.b32 	%r8040, %r8037, %r8036, 18;
	shf.r.wrap.b32 	%r8041, %r8036, %r8037, 18;
	mov.b64 	%rd2440, {%r8041, %r8040};
	xor.b64  	%rd2441, %rd2440, %rd2439;
	shf.l.wrap.b32 	%r8042, %r8036, %r8037, 23;
	shf.l.wrap.b32 	%r8043, %r8037, %r8036, 23;
	mov.b64 	%rd2442, {%r8043, %r8042};
	xor.b64  	%rd2443, %rd2441, %rd2442;
	xor.b64  	%rd2444, %rd2403, %rd2379;
	and.b64  	%rd2445, %rd2427, %rd2444;
	xor.b64  	%rd2446, %rd2445, %rd2379;
	add.s64 	%rd2447, %rd3455, %rd238;
	add.s64 	%rd2448, %rd2447, %rd39;
	add.s64 	%rd2449, %rd2448, %rd2446;
	add.s64 	%rd2450, %rd2449, %rd2443;
	add.s64 	%rd2451, %rd2450, %rd243;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8044,%dummy}, %rd2438;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8045}, %rd2438;
	}
	shf.r.wrap.b32 	%r8046, %r8045, %r8044, 28;
	shf.r.wrap.b32 	%r8047, %r8044, %r8045, 28;
	mov.b64 	%rd2452, {%r8047, %r8046};
	shf.l.wrap.b32 	%r8048, %r8044, %r8045, 30;
	shf.l.wrap.b32 	%r8049, %r8045, %r8044, 30;
	mov.b64 	%rd2453, {%r8049, %r8048};
	xor.b64  	%rd2454, %rd2453, %rd2452;
	shf.l.wrap.b32 	%r8050, %r8044, %r8045, 25;
	shf.l.wrap.b32 	%r8051, %r8045, %r8044, 25;
	mov.b64 	%rd2455, {%r8051, %r8050};
	xor.b64  	%rd2456, %rd2454, %rd2455;
	xor.b64  	%rd2457, %rd2438, %rd2390;
	xor.b64  	%rd2458, %rd2438, %rd2414;
	and.b64  	%rd2459, %rd2458, %rd2457;
	xor.b64  	%rd2460, %rd2459, %rd2438;
	add.s64 	%rd2461, %rd2450, %rd2460;
	add.s64 	%rd2462, %rd2461, %rd2456;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8052,%dummy}, %rd2451;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8053}, %rd2451;
	}
	shf.r.wrap.b32 	%r8054, %r8053, %r8052, 14;
	shf.r.wrap.b32 	%r8055, %r8052, %r8053, 14;
	mov.b64 	%rd2463, {%r8055, %r8054};
	shf.r.wrap.b32 	%r8056, %r8053, %r8052, 18;
	shf.r.wrap.b32 	%r8057, %r8052, %r8053, 18;
	mov.b64 	%rd2464, {%r8057, %r8056};
	xor.b64  	%rd2465, %rd2464, %rd2463;
	shf.l.wrap.b32 	%r8058, %r8052, %r8053, 23;
	shf.l.wrap.b32 	%r8059, %r8053, %r8052, 23;
	mov.b64 	%rd2466, {%r8059, %r8058};
	xor.b64  	%rd2467, %rd2465, %rd2466;
	xor.b64  	%rd2468, %rd2427, %rd2403;
	and.b64  	%rd2469, %rd2451, %rd2468;
	xor.b64  	%rd2470, %rd2469, %rd2403;
	add.s64 	%rd2471, %rd2379, %rd3456;
	add.s64 	%rd2472, %rd2471, %rd40;
	add.s64 	%rd2473, %rd2472, %rd2470;
	add.s64 	%rd2474, %rd2473, %rd2467;
	add.s64 	%rd2475, %rd2474, %rd2390;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8060,%dummy}, %rd2462;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8061}, %rd2462;
	}
	shf.r.wrap.b32 	%r8062, %r8061, %r8060, 28;
	shf.r.wrap.b32 	%r8063, %r8060, %r8061, 28;
	mov.b64 	%rd2476, {%r8063, %r8062};
	shf.l.wrap.b32 	%r8064, %r8060, %r8061, 30;
	shf.l.wrap.b32 	%r8065, %r8061, %r8060, 30;
	mov.b64 	%rd2477, {%r8065, %r8064};
	xor.b64  	%rd2478, %rd2477, %rd2476;
	shf.l.wrap.b32 	%r8066, %r8060, %r8061, 25;
	shf.l.wrap.b32 	%r8067, %r8061, %r8060, 25;
	mov.b64 	%rd2479, {%r8067, %r8066};
	xor.b64  	%rd2480, %rd2478, %rd2479;
	xor.b64  	%rd2481, %rd2462, %rd2414;
	xor.b64  	%rd2482, %rd2462, %rd2438;
	and.b64  	%rd2483, %rd2482, %rd2481;
	xor.b64  	%rd2484, %rd2483, %rd2462;
	add.s64 	%rd2485, %rd2474, %rd2484;
	add.s64 	%rd2486, %rd2485, %rd2480;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8068,%dummy}, %rd2475;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8069}, %rd2475;
	}
	shf.r.wrap.b32 	%r8070, %r8069, %r8068, 14;
	shf.r.wrap.b32 	%r8071, %r8068, %r8069, 14;
	mov.b64 	%rd2487, {%r8071, %r8070};
	shf.r.wrap.b32 	%r8072, %r8069, %r8068, 18;
	shf.r.wrap.b32 	%r8073, %r8068, %r8069, 18;
	mov.b64 	%rd2488, {%r8073, %r8072};
	xor.b64  	%rd2489, %rd2488, %rd2487;
	shf.l.wrap.b32 	%r8074, %r8068, %r8069, 23;
	shf.l.wrap.b32 	%r8075, %r8069, %r8068, 23;
	mov.b64 	%rd2490, {%r8075, %r8074};
	xor.b64  	%rd2491, %rd2489, %rd2490;
	xor.b64  	%rd2492, %rd2451, %rd2427;
	and.b64  	%rd2493, %rd2475, %rd2492;
	xor.b64  	%rd2494, %rd2493, %rd2427;
	add.s64 	%rd2495, %rd2403, %rd3457;
	add.s64 	%rd2496, %rd2495, %rd41;
	add.s64 	%rd2497, %rd2496, %rd2494;
	add.s64 	%rd2498, %rd2497, %rd2491;
	add.s64 	%rd2499, %rd2498, %rd2414;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8076,%dummy}, %rd2486;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8077}, %rd2486;
	}
	shf.r.wrap.b32 	%r8078, %r8077, %r8076, 28;
	shf.r.wrap.b32 	%r8079, %r8076, %r8077, 28;
	mov.b64 	%rd2500, {%r8079, %r8078};
	shf.l.wrap.b32 	%r8080, %r8076, %r8077, 30;
	shf.l.wrap.b32 	%r8081, %r8077, %r8076, 30;
	mov.b64 	%rd2501, {%r8081, %r8080};
	xor.b64  	%rd2502, %rd2501, %rd2500;
	shf.l.wrap.b32 	%r8082, %r8076, %r8077, 25;
	shf.l.wrap.b32 	%r8083, %r8077, %r8076, 25;
	mov.b64 	%rd2503, {%r8083, %r8082};
	xor.b64  	%rd2504, %rd2502, %rd2503;
	xor.b64  	%rd2505, %rd2486, %rd2438;
	xor.b64  	%rd2506, %rd2486, %rd2462;
	and.b64  	%rd2507, %rd2506, %rd2505;
	xor.b64  	%rd2508, %rd2507, %rd2486;
	add.s64 	%rd2509, %rd2498, %rd2508;
	add.s64 	%rd2510, %rd2509, %rd2504;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8084,%dummy}, %rd2499;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8085}, %rd2499;
	}
	shf.r.wrap.b32 	%r8086, %r8085, %r8084, 14;
	shf.r.wrap.b32 	%r8087, %r8084, %r8085, 14;
	mov.b64 	%rd2511, {%r8087, %r8086};
	shf.r.wrap.b32 	%r8088, %r8085, %r8084, 18;
	shf.r.wrap.b32 	%r8089, %r8084, %r8085, 18;
	mov.b64 	%rd2512, {%r8089, %r8088};
	xor.b64  	%rd2513, %rd2512, %rd2511;
	shf.l.wrap.b32 	%r8090, %r8084, %r8085, 23;
	shf.l.wrap.b32 	%r8091, %r8085, %r8084, 23;
	mov.b64 	%rd2514, {%r8091, %r8090};
	xor.b64  	%rd2515, %rd2513, %rd2514;
	xor.b64  	%rd2516, %rd2475, %rd2451;
	and.b64  	%rd2517, %rd2499, %rd2516;
	xor.b64  	%rd2518, %rd2517, %rd2451;
	add.s64 	%rd2519, %rd2427, %rd3458;
	add.s64 	%rd2520, %rd2519, %rd42;
	add.s64 	%rd2521, %rd2520, %rd2518;
	add.s64 	%rd2522, %rd2521, %rd2515;
	add.s64 	%rd2523, %rd2522, %rd2438;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8092,%dummy}, %rd2510;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8093}, %rd2510;
	}
	shf.r.wrap.b32 	%r8094, %r8093, %r8092, 28;
	shf.r.wrap.b32 	%r8095, %r8092, %r8093, 28;
	mov.b64 	%rd2524, {%r8095, %r8094};
	shf.l.wrap.b32 	%r8096, %r8092, %r8093, 30;
	shf.l.wrap.b32 	%r8097, %r8093, %r8092, 30;
	mov.b64 	%rd2525, {%r8097, %r8096};
	xor.b64  	%rd2526, %rd2525, %rd2524;
	shf.l.wrap.b32 	%r8098, %r8092, %r8093, 25;
	shf.l.wrap.b32 	%r8099, %r8093, %r8092, 25;
	mov.b64 	%rd2527, {%r8099, %r8098};
	xor.b64  	%rd2528, %rd2526, %rd2527;
	xor.b64  	%rd2529, %rd2510, %rd2462;
	xor.b64  	%rd2530, %rd2510, %rd2486;
	and.b64  	%rd2531, %rd2530, %rd2529;
	xor.b64  	%rd2532, %rd2531, %rd2510;
	add.s64 	%rd2533, %rd2522, %rd2532;
	add.s64 	%rd2534, %rd2533, %rd2528;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8100,%dummy}, %rd2523;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8101}, %rd2523;
	}
	shf.r.wrap.b32 	%r8102, %r8101, %r8100, 14;
	shf.r.wrap.b32 	%r8103, %r8100, %r8101, 14;
	mov.b64 	%rd2535, {%r8103, %r8102};
	shf.r.wrap.b32 	%r8104, %r8101, %r8100, 18;
	shf.r.wrap.b32 	%r8105, %r8100, %r8101, 18;
	mov.b64 	%rd2536, {%r8105, %r8104};
	xor.b64  	%rd2537, %rd2536, %rd2535;
	shf.l.wrap.b32 	%r8106, %r8100, %r8101, 23;
	shf.l.wrap.b32 	%r8107, %r8101, %r8100, 23;
	mov.b64 	%rd2538, {%r8107, %r8106};
	xor.b64  	%rd2539, %rd2537, %rd2538;
	xor.b64  	%rd2540, %rd2499, %rd2475;
	and.b64  	%rd2541, %rd2523, %rd2540;
	xor.b64  	%rd2542, %rd2541, %rd2475;
	add.s64 	%rd2543, %rd2451, %rd3459;
	add.s64 	%rd2544, %rd2543, %rd43;
	add.s64 	%rd2545, %rd2544, %rd2542;
	add.s64 	%rd2546, %rd2545, %rd2539;
	add.s64 	%rd2547, %rd2546, %rd2462;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8108,%dummy}, %rd2534;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8109}, %rd2534;
	}
	shf.r.wrap.b32 	%r8110, %r8109, %r8108, 28;
	shf.r.wrap.b32 	%r8111, %r8108, %r8109, 28;
	mov.b64 	%rd2548, {%r8111, %r8110};
	shf.l.wrap.b32 	%r8112, %r8108, %r8109, 30;
	shf.l.wrap.b32 	%r8113, %r8109, %r8108, 30;
	mov.b64 	%rd2549, {%r8113, %r8112};
	xor.b64  	%rd2550, %rd2549, %rd2548;
	shf.l.wrap.b32 	%r8114, %r8108, %r8109, 25;
	shf.l.wrap.b32 	%r8115, %r8109, %r8108, 25;
	mov.b64 	%rd2551, {%r8115, %r8114};
	xor.b64  	%rd2552, %rd2550, %rd2551;
	xor.b64  	%rd2553, %rd2534, %rd2486;
	xor.b64  	%rd2554, %rd2534, %rd2510;
	and.b64  	%rd2555, %rd2554, %rd2553;
	xor.b64  	%rd2556, %rd2555, %rd2534;
	add.s64 	%rd2557, %rd2546, %rd2556;
	add.s64 	%rd2558, %rd2557, %rd2552;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8116,%dummy}, %rd2547;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8117}, %rd2547;
	}
	shf.r.wrap.b32 	%r8118, %r8117, %r8116, 14;
	shf.r.wrap.b32 	%r8119, %r8116, %r8117, 14;
	mov.b64 	%rd2559, {%r8119, %r8118};
	shf.r.wrap.b32 	%r8120, %r8117, %r8116, 18;
	shf.r.wrap.b32 	%r8121, %r8116, %r8117, 18;
	mov.b64 	%rd2560, {%r8121, %r8120};
	xor.b64  	%rd2561, %rd2560, %rd2559;
	shf.l.wrap.b32 	%r8122, %r8116, %r8117, 23;
	shf.l.wrap.b32 	%r8123, %r8117, %r8116, 23;
	mov.b64 	%rd2562, {%r8123, %r8122};
	xor.b64  	%rd2563, %rd2561, %rd2562;
	xor.b64  	%rd2564, %rd2523, %rd2499;
	and.b64  	%rd2565, %rd2547, %rd2564;
	xor.b64  	%rd2566, %rd2565, %rd2499;
	add.s64 	%rd2567, %rd2475, %rd3443;
	add.s64 	%rd2568, %rd2567, %rd44;
	add.s64 	%rd2569, %rd2568, %rd2566;
	add.s64 	%rd2570, %rd2569, %rd2563;
	add.s64 	%rd2571, %rd2570, %rd2486;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8124,%dummy}, %rd2558;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8125}, %rd2558;
	}
	shf.r.wrap.b32 	%r8126, %r8125, %r8124, 28;
	shf.r.wrap.b32 	%r8127, %r8124, %r8125, 28;
	mov.b64 	%rd2572, {%r8127, %r8126};
	shf.l.wrap.b32 	%r8128, %r8124, %r8125, 30;
	shf.l.wrap.b32 	%r8129, %r8125, %r8124, 30;
	mov.b64 	%rd2573, {%r8129, %r8128};
	xor.b64  	%rd2574, %rd2573, %rd2572;
	shf.l.wrap.b32 	%r8130, %r8124, %r8125, 25;
	shf.l.wrap.b32 	%r8131, %r8125, %r8124, 25;
	mov.b64 	%rd2575, {%r8131, %r8130};
	xor.b64  	%rd2576, %rd2574, %rd2575;
	xor.b64  	%rd2577, %rd2558, %rd2510;
	xor.b64  	%rd2578, %rd2558, %rd2534;
	and.b64  	%rd2579, %rd2578, %rd2577;
	xor.b64  	%rd2580, %rd2579, %rd2558;
	add.s64 	%rd2581, %rd2570, %rd2580;
	add.s64 	%rd2582, %rd2581, %rd2576;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8132,%dummy}, %rd2571;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8133}, %rd2571;
	}
	shf.r.wrap.b32 	%r8134, %r8133, %r8132, 14;
	shf.r.wrap.b32 	%r8135, %r8132, %r8133, 14;
	mov.b64 	%rd2583, {%r8135, %r8134};
	shf.r.wrap.b32 	%r8136, %r8133, %r8132, 18;
	shf.r.wrap.b32 	%r8137, %r8132, %r8133, 18;
	mov.b64 	%rd2584, {%r8137, %r8136};
	xor.b64  	%rd2585, %rd2584, %rd2583;
	shf.l.wrap.b32 	%r8138, %r8132, %r8133, 23;
	shf.l.wrap.b32 	%r8139, %r8133, %r8132, 23;
	mov.b64 	%rd2586, {%r8139, %r8138};
	xor.b64  	%rd2587, %rd2585, %rd2586;
	xor.b64  	%rd2588, %rd2547, %rd2523;
	and.b64  	%rd2589, %rd2571, %rd2588;
	xor.b64  	%rd2590, %rd2589, %rd2523;
	add.s64 	%rd2591, %rd2499, %rd3442;
	add.s64 	%rd2592, %rd2591, %rd45;
	add.s64 	%rd2593, %rd2592, %rd2590;
	add.s64 	%rd2594, %rd2593, %rd2587;
	add.s64 	%rd2595, %rd2594, %rd2510;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8140,%dummy}, %rd2582;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8141}, %rd2582;
	}
	shf.r.wrap.b32 	%r8142, %r8141, %r8140, 28;
	shf.r.wrap.b32 	%r8143, %r8140, %r8141, 28;
	mov.b64 	%rd2596, {%r8143, %r8142};
	shf.l.wrap.b32 	%r8144, %r8140, %r8141, 30;
	shf.l.wrap.b32 	%r8145, %r8141, %r8140, 30;
	mov.b64 	%rd2597, {%r8145, %r8144};
	xor.b64  	%rd2598, %rd2597, %rd2596;
	shf.l.wrap.b32 	%r8146, %r8140, %r8141, 25;
	shf.l.wrap.b32 	%r8147, %r8141, %r8140, 25;
	mov.b64 	%rd2599, {%r8147, %r8146};
	xor.b64  	%rd2600, %rd2598, %rd2599;
	xor.b64  	%rd2601, %rd2582, %rd2534;
	xor.b64  	%rd2602, %rd2582, %rd2558;
	and.b64  	%rd2603, %rd2602, %rd2601;
	xor.b64  	%rd2604, %rd2603, %rd2582;
	add.s64 	%rd2605, %rd2594, %rd2604;
	add.s64 	%rd2606, %rd2605, %rd2600;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8148,%dummy}, %rd2595;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8149}, %rd2595;
	}
	shf.r.wrap.b32 	%r8150, %r8149, %r8148, 14;
	shf.r.wrap.b32 	%r8151, %r8148, %r8149, 14;
	mov.b64 	%rd2607, {%r8151, %r8150};
	shf.r.wrap.b32 	%r8152, %r8149, %r8148, 18;
	shf.r.wrap.b32 	%r8153, %r8148, %r8149, 18;
	mov.b64 	%rd2608, {%r8153, %r8152};
	xor.b64  	%rd2609, %rd2608, %rd2607;
	shf.l.wrap.b32 	%r8154, %r8148, %r8149, 23;
	shf.l.wrap.b32 	%r8155, %r8149, %r8148, 23;
	mov.b64 	%rd2610, {%r8155, %r8154};
	xor.b64  	%rd2611, %rd2609, %rd2610;
	xor.b64  	%rd2612, %rd2571, %rd2547;
	and.b64  	%rd2613, %rd2595, %rd2612;
	xor.b64  	%rd2614, %rd2613, %rd2547;
	add.s64 	%rd2615, %rd2523, %rd3441;
	add.s64 	%rd2616, %rd2615, %rd46;
	add.s64 	%rd2617, %rd2616, %rd2614;
	add.s64 	%rd2618, %rd2617, %rd2611;
	add.s64 	%rd2619, %rd2618, %rd2534;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8156,%dummy}, %rd2606;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8157}, %rd2606;
	}
	shf.r.wrap.b32 	%r8158, %r8157, %r8156, 28;
	shf.r.wrap.b32 	%r8159, %r8156, %r8157, 28;
	mov.b64 	%rd2620, {%r8159, %r8158};
	shf.l.wrap.b32 	%r8160, %r8156, %r8157, 30;
	shf.l.wrap.b32 	%r8161, %r8157, %r8156, 30;
	mov.b64 	%rd2621, {%r8161, %r8160};
	xor.b64  	%rd2622, %rd2621, %rd2620;
	shf.l.wrap.b32 	%r8162, %r8156, %r8157, 25;
	shf.l.wrap.b32 	%r8163, %r8157, %r8156, 25;
	mov.b64 	%rd2623, {%r8163, %r8162};
	xor.b64  	%rd2624, %rd2622, %rd2623;
	xor.b64  	%rd2625, %rd2606, %rd2558;
	xor.b64  	%rd2626, %rd2606, %rd2582;
	and.b64  	%rd2627, %rd2626, %rd2625;
	xor.b64  	%rd2628, %rd2627, %rd2606;
	add.s64 	%rd2629, %rd2618, %rd2628;
	add.s64 	%rd2630, %rd2629, %rd2624;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8164,%dummy}, %rd2619;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8165}, %rd2619;
	}
	shf.r.wrap.b32 	%r8166, %r8165, %r8164, 14;
	shf.r.wrap.b32 	%r8167, %r8164, %r8165, 14;
	mov.b64 	%rd2631, {%r8167, %r8166};
	shf.r.wrap.b32 	%r8168, %r8165, %r8164, 18;
	shf.r.wrap.b32 	%r8169, %r8164, %r8165, 18;
	mov.b64 	%rd2632, {%r8169, %r8168};
	xor.b64  	%rd2633, %rd2632, %rd2631;
	shf.l.wrap.b32 	%r8170, %r8164, %r8165, 23;
	shf.l.wrap.b32 	%r8171, %r8165, %r8164, 23;
	mov.b64 	%rd2634, {%r8171, %r8170};
	xor.b64  	%rd2635, %rd2633, %rd2634;
	xor.b64  	%rd2636, %rd2595, %rd2571;
	and.b64  	%rd2637, %rd2619, %rd2636;
	xor.b64  	%rd2638, %rd2637, %rd2571;
	add.s64 	%rd2639, %rd2547, %rd3440;
	add.s64 	%rd2640, %rd2639, %rd47;
	add.s64 	%rd2641, %rd2640, %rd2638;
	add.s64 	%rd2642, %rd2641, %rd2635;
	add.s64 	%rd2643, %rd2642, %rd2558;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8172,%dummy}, %rd2630;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8173}, %rd2630;
	}
	shf.r.wrap.b32 	%r8174, %r8173, %r8172, 28;
	shf.r.wrap.b32 	%r8175, %r8172, %r8173, 28;
	mov.b64 	%rd2644, {%r8175, %r8174};
	shf.l.wrap.b32 	%r8176, %r8172, %r8173, 30;
	shf.l.wrap.b32 	%r8177, %r8173, %r8172, 30;
	mov.b64 	%rd2645, {%r8177, %r8176};
	xor.b64  	%rd2646, %rd2645, %rd2644;
	shf.l.wrap.b32 	%r8178, %r8172, %r8173, 25;
	shf.l.wrap.b32 	%r8179, %r8173, %r8172, 25;
	mov.b64 	%rd2647, {%r8179, %r8178};
	xor.b64  	%rd2648, %rd2646, %rd2647;
	xor.b64  	%rd2649, %rd2630, %rd2582;
	xor.b64  	%rd2650, %rd2630, %rd2606;
	and.b64  	%rd2651, %rd2650, %rd2649;
	xor.b64  	%rd2652, %rd2651, %rd2630;
	add.s64 	%rd2653, %rd2642, %rd2652;
	add.s64 	%rd2654, %rd2653, %rd2648;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8180,%dummy}, %rd2643;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8181}, %rd2643;
	}
	shf.r.wrap.b32 	%r8182, %r8181, %r8180, 14;
	shf.r.wrap.b32 	%r8183, %r8180, %r8181, 14;
	mov.b64 	%rd2655, {%r8183, %r8182};
	shf.r.wrap.b32 	%r8184, %r8181, %r8180, 18;
	shf.r.wrap.b32 	%r8185, %r8180, %r8181, 18;
	mov.b64 	%rd2656, {%r8185, %r8184};
	xor.b64  	%rd2657, %rd2656, %rd2655;
	shf.l.wrap.b32 	%r8186, %r8180, %r8181, 23;
	shf.l.wrap.b32 	%r8187, %r8181, %r8180, 23;
	mov.b64 	%rd2658, {%r8187, %r8186};
	xor.b64  	%rd2659, %rd2657, %rd2658;
	xor.b64  	%rd2660, %rd2619, %rd2595;
	and.b64  	%rd2661, %rd2643, %rd2660;
	xor.b64  	%rd2662, %rd2661, %rd2595;
	add.s64 	%rd2663, %rd2571, %rd3439;
	add.s64 	%rd2664, %rd2663, %rd48;
	add.s64 	%rd2665, %rd2664, %rd2662;
	add.s64 	%rd2666, %rd2665, %rd2659;
	add.s64 	%rd3451, %rd2666, %rd2582;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8188,%dummy}, %rd2654;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8189}, %rd2654;
	}
	shf.r.wrap.b32 	%r8190, %r8189, %r8188, 28;
	shf.r.wrap.b32 	%r8191, %r8188, %r8189, 28;
	mov.b64 	%rd2667, {%r8191, %r8190};
	shf.l.wrap.b32 	%r8192, %r8188, %r8189, 30;
	shf.l.wrap.b32 	%r8193, %r8189, %r8188, 30;
	mov.b64 	%rd2668, {%r8193, %r8192};
	xor.b64  	%rd2669, %rd2668, %rd2667;
	shf.l.wrap.b32 	%r8194, %r8188, %r8189, 25;
	shf.l.wrap.b32 	%r8195, %r8189, %r8188, 25;
	mov.b64 	%rd2670, {%r8195, %r8194};
	xor.b64  	%rd2671, %rd2669, %rd2670;
	xor.b64  	%rd2672, %rd2654, %rd2606;
	xor.b64  	%rd2673, %rd2654, %rd2630;
	and.b64  	%rd2674, %rd2673, %rd2672;
	xor.b64  	%rd2675, %rd2674, %rd2654;
	add.s64 	%rd2676, %rd2666, %rd2675;
	add.s64 	%rd3447, %rd2676, %rd2671;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8196,%dummy}, %rd3451;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8197}, %rd3451;
	}
	shf.r.wrap.b32 	%r8198, %r8197, %r8196, 14;
	shf.r.wrap.b32 	%r8199, %r8196, %r8197, 14;
	mov.b64 	%rd2677, {%r8199, %r8198};
	shf.r.wrap.b32 	%r8200, %r8197, %r8196, 18;
	shf.r.wrap.b32 	%r8201, %r8196, %r8197, 18;
	mov.b64 	%rd2678, {%r8201, %r8200};
	xor.b64  	%rd2679, %rd2678, %rd2677;
	shf.l.wrap.b32 	%r8202, %r8196, %r8197, 23;
	shf.l.wrap.b32 	%r8203, %r8197, %r8196, 23;
	mov.b64 	%rd2680, {%r8203, %r8202};
	xor.b64  	%rd2681, %rd2679, %rd2680;
	xor.b64  	%rd2682, %rd2643, %rd2619;
	and.b64  	%rd2683, %rd3451, %rd2682;
	xor.b64  	%rd2684, %rd2683, %rd2619;
	add.s64 	%rd2685, %rd2595, %rd3438;
	add.s64 	%rd2686, %rd2685, %rd49;
	add.s64 	%rd2687, %rd2686, %rd2684;
	add.s64 	%rd2688, %rd2687, %rd2681;
	add.s64 	%rd3450, %rd2688, %rd2606;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8204,%dummy}, %rd3447;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8205}, %rd3447;
	}
	shf.r.wrap.b32 	%r8206, %r8205, %r8204, 28;
	shf.r.wrap.b32 	%r8207, %r8204, %r8205, 28;
	mov.b64 	%rd2689, {%r8207, %r8206};
	shf.l.wrap.b32 	%r8208, %r8204, %r8205, 30;
	shf.l.wrap.b32 	%r8209, %r8205, %r8204, 30;
	mov.b64 	%rd2690, {%r8209, %r8208};
	xor.b64  	%rd2691, %rd2690, %rd2689;
	shf.l.wrap.b32 	%r8210, %r8204, %r8205, 25;
	shf.l.wrap.b32 	%r8211, %r8205, %r8204, 25;
	mov.b64 	%rd2692, {%r8211, %r8210};
	xor.b64  	%rd2693, %rd2691, %rd2692;
	xor.b64  	%rd2694, %rd3447, %rd2630;
	xor.b64  	%rd2695, %rd3447, %rd2654;
	and.b64  	%rd2696, %rd2695, %rd2694;
	xor.b64  	%rd2697, %rd2696, %rd3447;
	add.s64 	%rd2698, %rd2688, %rd2697;
	add.s64 	%rd3446, %rd2698, %rd2693;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8212,%dummy}, %rd3450;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8213}, %rd3450;
	}
	shf.r.wrap.b32 	%r8214, %r8213, %r8212, 14;
	shf.r.wrap.b32 	%r8215, %r8212, %r8213, 14;
	mov.b64 	%rd2699, {%r8215, %r8214};
	shf.r.wrap.b32 	%r8216, %r8213, %r8212, 18;
	shf.r.wrap.b32 	%r8217, %r8212, %r8213, 18;
	mov.b64 	%rd2700, {%r8217, %r8216};
	xor.b64  	%rd2701, %rd2700, %rd2699;
	shf.l.wrap.b32 	%r8218, %r8212, %r8213, 23;
	shf.l.wrap.b32 	%r8219, %r8213, %r8212, 23;
	mov.b64 	%rd2702, {%r8219, %r8218};
	xor.b64  	%rd2703, %rd2701, %rd2702;
	xor.b64  	%rd2704, %rd3451, %rd2643;
	and.b64  	%rd2705, %rd3450, %rd2704;
	xor.b64  	%rd2706, %rd2705, %rd2643;
	add.s64 	%rd2707, %rd2619, %rd3437;
	add.s64 	%rd2708, %rd2707, %rd50;
	add.s64 	%rd2709, %rd2708, %rd2706;
	add.s64 	%rd2710, %rd2709, %rd2703;
	add.s64 	%rd3449, %rd2710, %rd2630;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8220,%dummy}, %rd3446;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8221}, %rd3446;
	}
	shf.r.wrap.b32 	%r8222, %r8221, %r8220, 28;
	shf.r.wrap.b32 	%r8223, %r8220, %r8221, 28;
	mov.b64 	%rd2711, {%r8223, %r8222};
	shf.l.wrap.b32 	%r8224, %r8220, %r8221, 30;
	shf.l.wrap.b32 	%r8225, %r8221, %r8220, 30;
	mov.b64 	%rd2712, {%r8225, %r8224};
	xor.b64  	%rd2713, %rd2712, %rd2711;
	shf.l.wrap.b32 	%r8226, %r8220, %r8221, 25;
	shf.l.wrap.b32 	%r8227, %r8221, %r8220, 25;
	mov.b64 	%rd2714, {%r8227, %r8226};
	xor.b64  	%rd2715, %rd2713, %rd2714;
	xor.b64  	%rd2716, %rd3446, %rd2654;
	xor.b64  	%rd2717, %rd3446, %rd3447;
	and.b64  	%rd2718, %rd2717, %rd2716;
	xor.b64  	%rd2719, %rd2718, %rd3446;
	add.s64 	%rd2720, %rd2710, %rd2719;
	add.s64 	%rd3445, %rd2720, %rd2715;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8228,%dummy}, %rd3449;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8229}, %rd3449;
	}
	shf.r.wrap.b32 	%r8230, %r8229, %r8228, 14;
	shf.r.wrap.b32 	%r8231, %r8228, %r8229, 14;
	mov.b64 	%rd2721, {%r8231, %r8230};
	shf.r.wrap.b32 	%r8232, %r8229, %r8228, 18;
	shf.r.wrap.b32 	%r8233, %r8228, %r8229, 18;
	mov.b64 	%rd2722, {%r8233, %r8232};
	xor.b64  	%rd2723, %rd2722, %rd2721;
	shf.l.wrap.b32 	%r8234, %r8228, %r8229, 23;
	shf.l.wrap.b32 	%r8235, %r8229, %r8228, 23;
	mov.b64 	%rd2724, {%r8235, %r8234};
	xor.b64  	%rd2725, %rd2723, %rd2724;
	xor.b64  	%rd2726, %rd3450, %rd3451;
	and.b64  	%rd2727, %rd3449, %rd2726;
	xor.b64  	%rd2728, %rd2727, %rd3451;
	add.s64 	%rd2729, %rd2643, %rd3436;
	add.s64 	%rd2730, %rd2729, %rd51;
	add.s64 	%rd2731, %rd2730, %rd2728;
	add.s64 	%rd2732, %rd2731, %rd2725;
	add.s64 	%rd3448, %rd2732, %rd2654;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8236,%dummy}, %rd3445;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8237}, %rd3445;
	}
	shf.r.wrap.b32 	%r8238, %r8237, %r8236, 28;
	shf.r.wrap.b32 	%r8239, %r8236, %r8237, 28;
	mov.b64 	%rd2733, {%r8239, %r8238};
	shf.l.wrap.b32 	%r8240, %r8236, %r8237, 30;
	shf.l.wrap.b32 	%r8241, %r8237, %r8236, 30;
	mov.b64 	%rd2734, {%r8241, %r8240};
	xor.b64  	%rd2735, %rd2734, %rd2733;
	shf.l.wrap.b32 	%r8242, %r8236, %r8237, 25;
	shf.l.wrap.b32 	%r8243, %r8237, %r8236, 25;
	mov.b64 	%rd2736, {%r8243, %r8242};
	xor.b64  	%rd2737, %rd2735, %rd2736;
	xor.b64  	%rd2738, %rd3445, %rd3447;
	xor.b64  	%rd2739, %rd3445, %rd3446;
	and.b64  	%rd2740, %rd2739, %rd2738;
	xor.b64  	%rd2741, %rd2740, %rd3445;
	add.s64 	%rd2742, %rd2732, %rd2741;
	add.s64 	%rd3444, %rd2742, %rd2737;
	mov.u32 	%r8768, 16;

BB4_420:
	shr.u64 	%rd2743, %rd3437, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8244,%dummy}, %rd3437;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8245}, %rd3437;
	}
	shf.r.wrap.b32 	%r8246, %r8245, %r8244, 19;
	shf.r.wrap.b32 	%r8247, %r8244, %r8245, 19;
	mov.b64 	%rd2744, {%r8247, %r8246};
	xor.b64  	%rd2745, %rd2744, %rd2743;
	shf.l.wrap.b32 	%r8248, %r8244, %r8245, 3;
	shf.l.wrap.b32 	%r8249, %r8245, %r8244, 3;
	mov.b64 	%rd2746, {%r8249, %r8248};
	xor.b64  	%rd2747, %rd2745, %rd2746;
	shr.u64 	%rd2748, %rd3453, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8250,%dummy}, %rd3453;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8251}, %rd3453;
	}
	shf.r.wrap.b32 	%r8252, %r8251, %r8250, 1;
	shf.r.wrap.b32 	%r8253, %r8250, %r8251, 1;
	mov.b64 	%rd2749, {%r8253, %r8252};
	xor.b64  	%rd2750, %rd2749, %rd2748;
	shf.r.wrap.b32 	%r8254, %r8251, %r8250, 8;
	shf.r.wrap.b32 	%r8255, %r8250, %r8251, 8;
	mov.b64 	%rd2751, {%r8255, %r8254};
	xor.b64  	%rd2752, %rd2750, %rd2751;
	add.s64 	%rd2753, %rd3442, %rd3452;
	add.s64 	%rd2754, %rd2753, %rd2747;
	add.s64 	%rd3452, %rd2754, %rd2752;
	shr.u64 	%rd2755, %rd3436, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8256,%dummy}, %rd3436;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8257}, %rd3436;
	}
	shf.r.wrap.b32 	%r8258, %r8257, %r8256, 19;
	shf.r.wrap.b32 	%r8259, %r8256, %r8257, 19;
	mov.b64 	%rd2756, {%r8259, %r8258};
	xor.b64  	%rd2757, %rd2756, %rd2755;
	shf.l.wrap.b32 	%r8260, %r8256, %r8257, 3;
	shf.l.wrap.b32 	%r8261, %r8257, %r8256, 3;
	mov.b64 	%rd2758, {%r8261, %r8260};
	xor.b64  	%rd2759, %rd2757, %rd2758;
	shr.u64 	%rd2760, %rd3454, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8262,%dummy}, %rd3454;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8263}, %rd3454;
	}
	shf.r.wrap.b32 	%r8264, %r8263, %r8262, 1;
	shf.r.wrap.b32 	%r8265, %r8262, %r8263, 1;
	mov.b64 	%rd2761, {%r8265, %r8264};
	xor.b64  	%rd2762, %rd2761, %rd2760;
	shf.r.wrap.b32 	%r8266, %r8263, %r8262, 8;
	shf.r.wrap.b32 	%r8267, %r8262, %r8263, 8;
	mov.b64 	%rd2763, {%r8267, %r8266};
	xor.b64  	%rd2764, %rd2762, %rd2763;
	add.s64 	%rd2765, %rd3441, %rd3453;
	add.s64 	%rd2766, %rd2765, %rd2759;
	add.s64 	%rd3453, %rd2766, %rd2764;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8268,%dummy}, %rd3452;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8269}, %rd3452;
	}
	shf.r.wrap.b32 	%r8270, %r8269, %r8268, 19;
	shf.r.wrap.b32 	%r8271, %r8268, %r8269, 19;
	mov.b64 	%rd2767, {%r8271, %r8270};
	shf.l.wrap.b32 	%r8272, %r8268, %r8269, 3;
	shf.l.wrap.b32 	%r8273, %r8269, %r8268, 3;
	mov.b64 	%rd2768, {%r8273, %r8272};
	shr.u64 	%rd2769, %rd3452, 6;
	xor.b64  	%rd2770, %rd2767, %rd2769;
	xor.b64  	%rd2771, %rd2770, %rd2768;
	shr.u64 	%rd2772, %rd3455, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8274,%dummy}, %rd3455;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8275}, %rd3455;
	}
	shf.r.wrap.b32 	%r8276, %r8275, %r8274, 1;
	shf.r.wrap.b32 	%r8277, %r8274, %r8275, 1;
	mov.b64 	%rd2773, {%r8277, %r8276};
	xor.b64  	%rd2774, %rd2773, %rd2772;
	shf.r.wrap.b32 	%r8278, %r8275, %r8274, 8;
	shf.r.wrap.b32 	%r8279, %r8274, %r8275, 8;
	mov.b64 	%rd2775, {%r8279, %r8278};
	xor.b64  	%rd2776, %rd2774, %rd2775;
	add.s64 	%rd2777, %rd3440, %rd3454;
	add.s64 	%rd2778, %rd2777, %rd2771;
	add.s64 	%rd3454, %rd2778, %rd2776;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8280,%dummy}, %rd3453;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8281}, %rd3453;
	}
	shf.r.wrap.b32 	%r8282, %r8281, %r8280, 19;
	shf.r.wrap.b32 	%r8283, %r8280, %r8281, 19;
	mov.b64 	%rd2779, {%r8283, %r8282};
	shf.l.wrap.b32 	%r8284, %r8280, %r8281, 3;
	shf.l.wrap.b32 	%r8285, %r8281, %r8280, 3;
	mov.b64 	%rd2780, {%r8285, %r8284};
	shr.u64 	%rd2781, %rd3453, 6;
	xor.b64  	%rd2782, %rd2779, %rd2781;
	xor.b64  	%rd2783, %rd2782, %rd2780;
	shr.u64 	%rd2784, %rd3456, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8286,%dummy}, %rd3456;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8287}, %rd3456;
	}
	shf.r.wrap.b32 	%r8288, %r8287, %r8286, 1;
	shf.r.wrap.b32 	%r8289, %r8286, %r8287, 1;
	mov.b64 	%rd2785, {%r8289, %r8288};
	xor.b64  	%rd2786, %rd2785, %rd2784;
	shf.r.wrap.b32 	%r8290, %r8287, %r8286, 8;
	shf.r.wrap.b32 	%r8291, %r8286, %r8287, 8;
	mov.b64 	%rd2787, {%r8291, %r8290};
	xor.b64  	%rd2788, %rd2786, %rd2787;
	add.s64 	%rd2789, %rd3439, %rd3455;
	add.s64 	%rd2790, %rd2789, %rd2783;
	add.s64 	%rd3455, %rd2790, %rd2788;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8292,%dummy}, %rd3454;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8293}, %rd3454;
	}
	shf.r.wrap.b32 	%r8294, %r8293, %r8292, 19;
	shf.r.wrap.b32 	%r8295, %r8292, %r8293, 19;
	mov.b64 	%rd2791, {%r8295, %r8294};
	shf.l.wrap.b32 	%r8296, %r8292, %r8293, 3;
	shf.l.wrap.b32 	%r8297, %r8293, %r8292, 3;
	mov.b64 	%rd2792, {%r8297, %r8296};
	shr.u64 	%rd2793, %rd3454, 6;
	xor.b64  	%rd2794, %rd2791, %rd2793;
	xor.b64  	%rd2795, %rd2794, %rd2792;
	shr.u64 	%rd2796, %rd3457, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8298,%dummy}, %rd3457;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8299}, %rd3457;
	}
	shf.r.wrap.b32 	%r8300, %r8299, %r8298, 1;
	shf.r.wrap.b32 	%r8301, %r8298, %r8299, 1;
	mov.b64 	%rd2797, {%r8301, %r8300};
	xor.b64  	%rd2798, %rd2797, %rd2796;
	shf.r.wrap.b32 	%r8302, %r8299, %r8298, 8;
	shf.r.wrap.b32 	%r8303, %r8298, %r8299, 8;
	mov.b64 	%rd2799, {%r8303, %r8302};
	xor.b64  	%rd2800, %rd2798, %rd2799;
	add.s64 	%rd2801, %rd3438, %rd3456;
	add.s64 	%rd2802, %rd2801, %rd2795;
	add.s64 	%rd3456, %rd2802, %rd2800;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8304,%dummy}, %rd3455;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8305}, %rd3455;
	}
	shf.r.wrap.b32 	%r8306, %r8305, %r8304, 19;
	shf.r.wrap.b32 	%r8307, %r8304, %r8305, 19;
	mov.b64 	%rd2803, {%r8307, %r8306};
	shf.l.wrap.b32 	%r8308, %r8304, %r8305, 3;
	shf.l.wrap.b32 	%r8309, %r8305, %r8304, 3;
	mov.b64 	%rd2804, {%r8309, %r8308};
	shr.u64 	%rd2805, %rd3455, 6;
	xor.b64  	%rd2806, %rd2803, %rd2805;
	xor.b64  	%rd2807, %rd2806, %rd2804;
	shr.u64 	%rd2808, %rd3458, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8310,%dummy}, %rd3458;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8311}, %rd3458;
	}
	shf.r.wrap.b32 	%r8312, %r8311, %r8310, 1;
	shf.r.wrap.b32 	%r8313, %r8310, %r8311, 1;
	mov.b64 	%rd2809, {%r8313, %r8312};
	xor.b64  	%rd2810, %rd2809, %rd2808;
	shf.r.wrap.b32 	%r8314, %r8311, %r8310, 8;
	shf.r.wrap.b32 	%r8315, %r8310, %r8311, 8;
	mov.b64 	%rd2811, {%r8315, %r8314};
	xor.b64  	%rd2812, %rd2810, %rd2811;
	add.s64 	%rd2813, %rd3437, %rd3457;
	add.s64 	%rd2814, %rd2813, %rd2807;
	add.s64 	%rd3457, %rd2814, %rd2812;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8316,%dummy}, %rd3456;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8317}, %rd3456;
	}
	shf.r.wrap.b32 	%r8318, %r8317, %r8316, 19;
	shf.r.wrap.b32 	%r8319, %r8316, %r8317, 19;
	mov.b64 	%rd2815, {%r8319, %r8318};
	shf.l.wrap.b32 	%r8320, %r8316, %r8317, 3;
	shf.l.wrap.b32 	%r8321, %r8317, %r8316, 3;
	mov.b64 	%rd2816, {%r8321, %r8320};
	shr.u64 	%rd2817, %rd3456, 6;
	xor.b64  	%rd2818, %rd2815, %rd2817;
	xor.b64  	%rd2819, %rd2818, %rd2816;
	shr.u64 	%rd2820, %rd3459, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8322,%dummy}, %rd3459;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8323}, %rd3459;
	}
	shf.r.wrap.b32 	%r8324, %r8323, %r8322, 1;
	shf.r.wrap.b32 	%r8325, %r8322, %r8323, 1;
	mov.b64 	%rd2821, {%r8325, %r8324};
	xor.b64  	%rd2822, %rd2821, %rd2820;
	shf.r.wrap.b32 	%r8326, %r8323, %r8322, 8;
	shf.r.wrap.b32 	%r8327, %r8322, %r8323, 8;
	mov.b64 	%rd2823, {%r8327, %r8326};
	xor.b64  	%rd2824, %rd2822, %rd2823;
	add.s64 	%rd2825, %rd3436, %rd3458;
	add.s64 	%rd2826, %rd2825, %rd2819;
	add.s64 	%rd3458, %rd2826, %rd2824;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8328,%dummy}, %rd3457;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8329}, %rd3457;
	}
	shf.r.wrap.b32 	%r8330, %r8329, %r8328, 19;
	shf.r.wrap.b32 	%r8331, %r8328, %r8329, 19;
	mov.b64 	%rd2827, {%r8331, %r8330};
	shf.l.wrap.b32 	%r8332, %r8328, %r8329, 3;
	shf.l.wrap.b32 	%r8333, %r8329, %r8328, 3;
	mov.b64 	%rd2828, {%r8333, %r8332};
	shr.u64 	%rd2829, %rd3457, 6;
	xor.b64  	%rd2830, %rd2827, %rd2829;
	xor.b64  	%rd2831, %rd2830, %rd2828;
	shr.u64 	%rd2832, %rd3443, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8334,%dummy}, %rd3443;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8335}, %rd3443;
	}
	shf.r.wrap.b32 	%r8336, %r8335, %r8334, 1;
	shf.r.wrap.b32 	%r8337, %r8334, %r8335, 1;
	mov.b64 	%rd2833, {%r8337, %r8336};
	xor.b64  	%rd2834, %rd2833, %rd2832;
	shf.r.wrap.b32 	%r8338, %r8335, %r8334, 8;
	shf.r.wrap.b32 	%r8339, %r8334, %r8335, 8;
	mov.b64 	%rd2835, {%r8339, %r8338};
	xor.b64  	%rd2836, %rd2834, %rd2835;
	add.s64 	%rd2837, %rd3452, %rd3459;
	add.s64 	%rd2838, %rd2837, %rd2831;
	add.s64 	%rd3459, %rd2838, %rd2836;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8340,%dummy}, %rd3458;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8341}, %rd3458;
	}
	shf.r.wrap.b32 	%r8342, %r8341, %r8340, 19;
	shf.r.wrap.b32 	%r8343, %r8340, %r8341, 19;
	mov.b64 	%rd2839, {%r8343, %r8342};
	shf.l.wrap.b32 	%r8344, %r8340, %r8341, 3;
	shf.l.wrap.b32 	%r8345, %r8341, %r8340, 3;
	mov.b64 	%rd2840, {%r8345, %r8344};
	shr.u64 	%rd2841, %rd3458, 6;
	xor.b64  	%rd2842, %rd2839, %rd2841;
	xor.b64  	%rd2843, %rd2842, %rd2840;
	shr.u64 	%rd2844, %rd3442, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8346,%dummy}, %rd3442;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8347}, %rd3442;
	}
	shf.r.wrap.b32 	%r8348, %r8347, %r8346, 1;
	shf.r.wrap.b32 	%r8349, %r8346, %r8347, 1;
	mov.b64 	%rd2845, {%r8349, %r8348};
	xor.b64  	%rd2846, %rd2845, %rd2844;
	shf.r.wrap.b32 	%r8350, %r8347, %r8346, 8;
	shf.r.wrap.b32 	%r8351, %r8346, %r8347, 8;
	mov.b64 	%rd2847, {%r8351, %r8350};
	xor.b64  	%rd2848, %rd2846, %rd2847;
	add.s64 	%rd2849, %rd3453, %rd3443;
	add.s64 	%rd2850, %rd2849, %rd2843;
	add.s64 	%rd3443, %rd2850, %rd2848;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8352,%dummy}, %rd3459;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8353}, %rd3459;
	}
	shf.r.wrap.b32 	%r8354, %r8353, %r8352, 19;
	shf.r.wrap.b32 	%r8355, %r8352, %r8353, 19;
	mov.b64 	%rd2851, {%r8355, %r8354};
	shf.l.wrap.b32 	%r8356, %r8352, %r8353, 3;
	shf.l.wrap.b32 	%r8357, %r8353, %r8352, 3;
	mov.b64 	%rd2852, {%r8357, %r8356};
	shr.u64 	%rd2853, %rd3459, 6;
	xor.b64  	%rd2854, %rd2851, %rd2853;
	xor.b64  	%rd2855, %rd2854, %rd2852;
	shr.u64 	%rd2856, %rd3441, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8358,%dummy}, %rd3441;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8359}, %rd3441;
	}
	shf.r.wrap.b32 	%r8360, %r8359, %r8358, 1;
	shf.r.wrap.b32 	%r8361, %r8358, %r8359, 1;
	mov.b64 	%rd2857, {%r8361, %r8360};
	xor.b64  	%rd2858, %rd2857, %rd2856;
	shf.r.wrap.b32 	%r8362, %r8359, %r8358, 8;
	shf.r.wrap.b32 	%r8363, %r8358, %r8359, 8;
	mov.b64 	%rd2859, {%r8363, %r8362};
	xor.b64  	%rd2860, %rd2858, %rd2859;
	add.s64 	%rd2861, %rd3454, %rd3442;
	add.s64 	%rd2862, %rd2861, %rd2855;
	add.s64 	%rd3442, %rd2862, %rd2860;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8364,%dummy}, %rd3443;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8365}, %rd3443;
	}
	shf.r.wrap.b32 	%r8366, %r8365, %r8364, 19;
	shf.r.wrap.b32 	%r8367, %r8364, %r8365, 19;
	mov.b64 	%rd2863, {%r8367, %r8366};
	shf.l.wrap.b32 	%r8368, %r8364, %r8365, 3;
	shf.l.wrap.b32 	%r8369, %r8365, %r8364, 3;
	mov.b64 	%rd2864, {%r8369, %r8368};
	shr.u64 	%rd2865, %rd3443, 6;
	xor.b64  	%rd2866, %rd2863, %rd2865;
	xor.b64  	%rd2867, %rd2866, %rd2864;
	shr.u64 	%rd2868, %rd3440, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8370,%dummy}, %rd3440;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8371}, %rd3440;
	}
	shf.r.wrap.b32 	%r8372, %r8371, %r8370, 1;
	shf.r.wrap.b32 	%r8373, %r8370, %r8371, 1;
	mov.b64 	%rd2869, {%r8373, %r8372};
	xor.b64  	%rd2870, %rd2869, %rd2868;
	shf.r.wrap.b32 	%r8374, %r8371, %r8370, 8;
	shf.r.wrap.b32 	%r8375, %r8370, %r8371, 8;
	mov.b64 	%rd2871, {%r8375, %r8374};
	xor.b64  	%rd2872, %rd2870, %rd2871;
	add.s64 	%rd2873, %rd3455, %rd3441;
	add.s64 	%rd2874, %rd2873, %rd2867;
	add.s64 	%rd3441, %rd2874, %rd2872;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8376,%dummy}, %rd3442;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8377}, %rd3442;
	}
	shf.r.wrap.b32 	%r8378, %r8377, %r8376, 19;
	shf.r.wrap.b32 	%r8379, %r8376, %r8377, 19;
	mov.b64 	%rd2875, {%r8379, %r8378};
	shf.l.wrap.b32 	%r8380, %r8376, %r8377, 3;
	shf.l.wrap.b32 	%r8381, %r8377, %r8376, 3;
	mov.b64 	%rd2876, {%r8381, %r8380};
	shr.u64 	%rd2877, %rd3442, 6;
	xor.b64  	%rd2878, %rd2875, %rd2877;
	xor.b64  	%rd2879, %rd2878, %rd2876;
	shr.u64 	%rd2880, %rd3439, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8382,%dummy}, %rd3439;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8383}, %rd3439;
	}
	shf.r.wrap.b32 	%r8384, %r8383, %r8382, 1;
	shf.r.wrap.b32 	%r8385, %r8382, %r8383, 1;
	mov.b64 	%rd2881, {%r8385, %r8384};
	xor.b64  	%rd2882, %rd2881, %rd2880;
	shf.r.wrap.b32 	%r8386, %r8383, %r8382, 8;
	shf.r.wrap.b32 	%r8387, %r8382, %r8383, 8;
	mov.b64 	%rd2883, {%r8387, %r8386};
	xor.b64  	%rd2884, %rd2882, %rd2883;
	add.s64 	%rd2885, %rd3456, %rd3440;
	add.s64 	%rd2886, %rd2885, %rd2879;
	add.s64 	%rd3440, %rd2886, %rd2884;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8388,%dummy}, %rd3441;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8389}, %rd3441;
	}
	shf.r.wrap.b32 	%r8390, %r8389, %r8388, 19;
	shf.r.wrap.b32 	%r8391, %r8388, %r8389, 19;
	mov.b64 	%rd2887, {%r8391, %r8390};
	shf.l.wrap.b32 	%r8392, %r8388, %r8389, 3;
	shf.l.wrap.b32 	%r8393, %r8389, %r8388, 3;
	mov.b64 	%rd2888, {%r8393, %r8392};
	shr.u64 	%rd2889, %rd3441, 6;
	xor.b64  	%rd2890, %rd2887, %rd2889;
	xor.b64  	%rd2891, %rd2890, %rd2888;
	shr.u64 	%rd2892, %rd3438, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8394,%dummy}, %rd3438;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8395}, %rd3438;
	}
	shf.r.wrap.b32 	%r8396, %r8395, %r8394, 1;
	shf.r.wrap.b32 	%r8397, %r8394, %r8395, 1;
	mov.b64 	%rd2893, {%r8397, %r8396};
	xor.b64  	%rd2894, %rd2893, %rd2892;
	shf.r.wrap.b32 	%r8398, %r8395, %r8394, 8;
	shf.r.wrap.b32 	%r8399, %r8394, %r8395, 8;
	mov.b64 	%rd2895, {%r8399, %r8398};
	xor.b64  	%rd2896, %rd2894, %rd2895;
	add.s64 	%rd2897, %rd3457, %rd3439;
	add.s64 	%rd2898, %rd2897, %rd2891;
	add.s64 	%rd3439, %rd2898, %rd2896;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8400,%dummy}, %rd3440;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8401}, %rd3440;
	}
	shf.r.wrap.b32 	%r8402, %r8401, %r8400, 19;
	shf.r.wrap.b32 	%r8403, %r8400, %r8401, 19;
	mov.b64 	%rd2899, {%r8403, %r8402};
	shf.l.wrap.b32 	%r8404, %r8400, %r8401, 3;
	shf.l.wrap.b32 	%r8405, %r8401, %r8400, 3;
	mov.b64 	%rd2900, {%r8405, %r8404};
	shr.u64 	%rd2901, %rd3440, 6;
	xor.b64  	%rd2902, %rd2899, %rd2901;
	xor.b64  	%rd2903, %rd2902, %rd2900;
	shr.u64 	%rd2904, %rd3437, 7;
	shf.r.wrap.b32 	%r8406, %r8245, %r8244, 1;
	shf.r.wrap.b32 	%r8407, %r8244, %r8245, 1;
	mov.b64 	%rd2905, {%r8407, %r8406};
	xor.b64  	%rd2906, %rd2905, %rd2904;
	shf.r.wrap.b32 	%r8408, %r8245, %r8244, 8;
	shf.r.wrap.b32 	%r8409, %r8244, %r8245, 8;
	mov.b64 	%rd2907, {%r8409, %r8408};
	xor.b64  	%rd2908, %rd2906, %rd2907;
	add.s64 	%rd2909, %rd3458, %rd3438;
	add.s64 	%rd2910, %rd2909, %rd2903;
	add.s64 	%rd3438, %rd2910, %rd2908;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8410,%dummy}, %rd3439;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8411}, %rd3439;
	}
	shf.r.wrap.b32 	%r8412, %r8411, %r8410, 19;
	shf.r.wrap.b32 	%r8413, %r8410, %r8411, 19;
	mov.b64 	%rd2911, {%r8413, %r8412};
	shf.l.wrap.b32 	%r8414, %r8410, %r8411, 3;
	shf.l.wrap.b32 	%r8415, %r8411, %r8410, 3;
	mov.b64 	%rd2912, {%r8415, %r8414};
	shr.u64 	%rd2913, %rd3439, 6;
	xor.b64  	%rd2914, %rd2911, %rd2913;
	xor.b64  	%rd2915, %rd2914, %rd2912;
	shr.u64 	%rd2916, %rd3436, 7;
	shf.r.wrap.b32 	%r8416, %r8257, %r8256, 1;
	shf.r.wrap.b32 	%r8417, %r8256, %r8257, 1;
	mov.b64 	%rd2917, {%r8417, %r8416};
	xor.b64  	%rd2918, %rd2917, %rd2916;
	shf.r.wrap.b32 	%r8418, %r8257, %r8256, 8;
	shf.r.wrap.b32 	%r8419, %r8256, %r8257, 8;
	mov.b64 	%rd2919, {%r8419, %r8418};
	xor.b64  	%rd2920, %rd2918, %rd2919;
	add.s64 	%rd2921, %rd3459, %rd3437;
	add.s64 	%rd2922, %rd2921, %rd2915;
	add.s64 	%rd3437, %rd2922, %rd2920;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8420,%dummy}, %rd3438;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8421}, %rd3438;
	}
	shf.r.wrap.b32 	%r8422, %r8421, %r8420, 19;
	shf.r.wrap.b32 	%r8423, %r8420, %r8421, 19;
	mov.b64 	%rd2923, {%r8423, %r8422};
	shf.l.wrap.b32 	%r8424, %r8420, %r8421, 3;
	shf.l.wrap.b32 	%r8425, %r8421, %r8420, 3;
	mov.b64 	%rd2924, {%r8425, %r8424};
	shr.u64 	%rd2925, %rd3438, 6;
	xor.b64  	%rd2926, %rd2923, %rd2925;
	xor.b64  	%rd2927, %rd2926, %rd2924;
	shf.r.wrap.b32 	%r8426, %r8269, %r8268, 1;
	shf.r.wrap.b32 	%r8427, %r8268, %r8269, 1;
	mov.b64 	%rd2928, {%r8427, %r8426};
	shf.r.wrap.b32 	%r8428, %r8269, %r8268, 8;
	shf.r.wrap.b32 	%r8429, %r8268, %r8269, 8;
	mov.b64 	%rd2929, {%r8429, %r8428};
	shr.u64 	%rd2930, %rd3452, 7;
	xor.b64  	%rd2931, %rd2928, %rd2930;
	xor.b64  	%rd2932, %rd2931, %rd2929;
	add.s64 	%rd2933, %rd3443, %rd3436;
	add.s64 	%rd2934, %rd2933, %rd2927;
	add.s64 	%rd3436, %rd2934, %rd2932;
	mul.wide.s32 	%rd2935, %r8768, 8;
	mov.u64 	%rd2936, k_sha512;
	add.s64 	%rd2937, %rd2936, %rd2935;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8430,%dummy}, %rd3448;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8431}, %rd3448;
	}
	shf.r.wrap.b32 	%r8432, %r8431, %r8430, 18;
	shf.r.wrap.b32 	%r8433, %r8430, %r8431, 18;
	mov.b64 	%rd2938, {%r8433, %r8432};
	shf.r.wrap.b32 	%r8434, %r8431, %r8430, 14;
	shf.r.wrap.b32 	%r8435, %r8430, %r8431, 14;
	mov.b64 	%rd2939, {%r8435, %r8434};
	xor.b64  	%rd2940, %rd2938, %rd2939;
	shf.l.wrap.b32 	%r8436, %r8430, %r8431, 23;
	shf.l.wrap.b32 	%r8437, %r8431, %r8430, 23;
	mov.b64 	%rd2941, {%r8437, %r8436};
	xor.b64  	%rd2942, %rd2940, %rd2941;
	xor.b64  	%rd2943, %rd3449, %rd3450;
	and.b64  	%rd2944, %rd2943, %rd3448;
	xor.b64  	%rd2945, %rd2944, %rd3450;
	add.s64 	%rd2946, %rd2945, %rd3451;
	add.s64 	%rd2947, %rd2946, %rd3452;
	ld.const.u64 	%rd2948, [%rd2937];
	add.s64 	%rd2949, %rd2947, %rd2948;
	add.s64 	%rd2950, %rd2949, %rd2942;
	add.s64 	%rd2951, %rd2950, %rd3447;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8438}, %rd3444;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8439,%dummy}, %rd3444;
	}
	shf.l.wrap.b32 	%r8440, %r8439, %r8438, 30;
	shf.l.wrap.b32 	%r8441, %r8438, %r8439, 30;
	mov.b64 	%rd2952, {%r8441, %r8440};
	shf.r.wrap.b32 	%r8442, %r8438, %r8439, 28;
	shf.r.wrap.b32 	%r8443, %r8439, %r8438, 28;
	mov.b64 	%rd2953, {%r8443, %r8442};
	xor.b64  	%rd2954, %rd2952, %rd2953;
	shf.l.wrap.b32 	%r8444, %r8439, %r8438, 25;
	shf.l.wrap.b32 	%r8445, %r8438, %r8439, 25;
	mov.b64 	%rd2955, {%r8445, %r8444};
	xor.b64  	%rd2956, %rd2954, %rd2955;
	xor.b64  	%rd2957, %rd3444, %rd3445;
	xor.b64  	%rd2958, %rd3444, %rd3446;
	and.b64  	%rd2959, %rd2957, %rd2958;
	xor.b64  	%rd2960, %rd2959, %rd3444;
	add.s64 	%rd2961, %rd2950, %rd2960;
	add.s64 	%rd2962, %rd2961, %rd2956;
	add.s32 	%r8446, %r8768, 1;
	mul.wide.s32 	%rd2963, %r8446, 8;
	add.s64 	%rd2964, %rd2936, %rd2963;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8447,%dummy}, %rd2951;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8448}, %rd2951;
	}
	shf.r.wrap.b32 	%r8449, %r8448, %r8447, 14;
	shf.r.wrap.b32 	%r8450, %r8447, %r8448, 14;
	mov.b64 	%rd2965, {%r8450, %r8449};
	shf.r.wrap.b32 	%r8451, %r8448, %r8447, 18;
	shf.r.wrap.b32 	%r8452, %r8447, %r8448, 18;
	mov.b64 	%rd2966, {%r8452, %r8451};
	xor.b64  	%rd2967, %rd2966, %rd2965;
	shf.l.wrap.b32 	%r8453, %r8447, %r8448, 23;
	shf.l.wrap.b32 	%r8454, %r8448, %r8447, 23;
	mov.b64 	%rd2968, {%r8454, %r8453};
	xor.b64  	%rd2969, %rd2967, %rd2968;
	xor.b64  	%rd2970, %rd3448, %rd3449;
	and.b64  	%rd2971, %rd2951, %rd2970;
	xor.b64  	%rd2972, %rd2971, %rd3449;
	add.s64 	%rd2973, %rd3453, %rd3450;
	ld.const.u64 	%rd2974, [%rd2964];
	add.s64 	%rd2975, %rd2973, %rd2974;
	add.s64 	%rd2976, %rd2975, %rd2972;
	add.s64 	%rd2977, %rd2976, %rd2969;
	add.s64 	%rd2978, %rd2977, %rd3446;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8455,%dummy}, %rd2962;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8456}, %rd2962;
	}
	shf.r.wrap.b32 	%r8457, %r8456, %r8455, 28;
	shf.r.wrap.b32 	%r8458, %r8455, %r8456, 28;
	mov.b64 	%rd2979, {%r8458, %r8457};
	shf.l.wrap.b32 	%r8459, %r8455, %r8456, 30;
	shf.l.wrap.b32 	%r8460, %r8456, %r8455, 30;
	mov.b64 	%rd2980, {%r8460, %r8459};
	xor.b64  	%rd2981, %rd2980, %rd2979;
	shf.l.wrap.b32 	%r8461, %r8455, %r8456, 25;
	shf.l.wrap.b32 	%r8462, %r8456, %r8455, 25;
	mov.b64 	%rd2982, {%r8462, %r8461};
	xor.b64  	%rd2983, %rd2981, %rd2982;
	xor.b64  	%rd2984, %rd2962, %rd3445;
	xor.b64  	%rd2985, %rd2962, %rd3444;
	and.b64  	%rd2986, %rd2985, %rd2984;
	xor.b64  	%rd2987, %rd2986, %rd2962;
	add.s64 	%rd2988, %rd2977, %rd2987;
	add.s64 	%rd2989, %rd2988, %rd2983;
	add.s32 	%r8463, %r8768, 2;
	mul.wide.s32 	%rd2990, %r8463, 8;
	add.s64 	%rd2991, %rd2936, %rd2990;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8464,%dummy}, %rd2978;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8465}, %rd2978;
	}
	shf.r.wrap.b32 	%r8466, %r8465, %r8464, 14;
	shf.r.wrap.b32 	%r8467, %r8464, %r8465, 14;
	mov.b64 	%rd2992, {%r8467, %r8466};
	shf.r.wrap.b32 	%r8468, %r8465, %r8464, 18;
	shf.r.wrap.b32 	%r8469, %r8464, %r8465, 18;
	mov.b64 	%rd2993, {%r8469, %r8468};
	xor.b64  	%rd2994, %rd2993, %rd2992;
	shf.l.wrap.b32 	%r8470, %r8464, %r8465, 23;
	shf.l.wrap.b32 	%r8471, %r8465, %r8464, 23;
	mov.b64 	%rd2995, {%r8471, %r8470};
	xor.b64  	%rd2996, %rd2994, %rd2995;
	xor.b64  	%rd2997, %rd2951, %rd3448;
	and.b64  	%rd2998, %rd2978, %rd2997;
	xor.b64  	%rd2999, %rd2998, %rd3448;
	add.s64 	%rd3000, %rd3454, %rd3449;
	ld.const.u64 	%rd3001, [%rd2991];
	add.s64 	%rd3002, %rd3000, %rd3001;
	add.s64 	%rd3003, %rd3002, %rd2999;
	add.s64 	%rd3004, %rd3003, %rd2996;
	add.s64 	%rd3005, %rd3004, %rd3445;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8472,%dummy}, %rd2989;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8473}, %rd2989;
	}
	shf.r.wrap.b32 	%r8474, %r8473, %r8472, 28;
	shf.r.wrap.b32 	%r8475, %r8472, %r8473, 28;
	mov.b64 	%rd3006, {%r8475, %r8474};
	shf.l.wrap.b32 	%r8476, %r8472, %r8473, 30;
	shf.l.wrap.b32 	%r8477, %r8473, %r8472, 30;
	mov.b64 	%rd3007, {%r8477, %r8476};
	xor.b64  	%rd3008, %rd3007, %rd3006;
	shf.l.wrap.b32 	%r8478, %r8472, %r8473, 25;
	shf.l.wrap.b32 	%r8479, %r8473, %r8472, 25;
	mov.b64 	%rd3009, {%r8479, %r8478};
	xor.b64  	%rd3010, %rd3008, %rd3009;
	xor.b64  	%rd3011, %rd2989, %rd3444;
	xor.b64  	%rd3012, %rd2989, %rd2962;
	and.b64  	%rd3013, %rd3012, %rd3011;
	xor.b64  	%rd3014, %rd3013, %rd2989;
	add.s64 	%rd3015, %rd3004, %rd3014;
	add.s64 	%rd3016, %rd3015, %rd3010;
	add.s32 	%r8480, %r8768, 3;
	mul.wide.s32 	%rd3017, %r8480, 8;
	add.s64 	%rd3018, %rd2936, %rd3017;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8481,%dummy}, %rd3005;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8482}, %rd3005;
	}
	shf.r.wrap.b32 	%r8483, %r8482, %r8481, 14;
	shf.r.wrap.b32 	%r8484, %r8481, %r8482, 14;
	mov.b64 	%rd3019, {%r8484, %r8483};
	shf.r.wrap.b32 	%r8485, %r8482, %r8481, 18;
	shf.r.wrap.b32 	%r8486, %r8481, %r8482, 18;
	mov.b64 	%rd3020, {%r8486, %r8485};
	xor.b64  	%rd3021, %rd3020, %rd3019;
	shf.l.wrap.b32 	%r8487, %r8481, %r8482, 23;
	shf.l.wrap.b32 	%r8488, %r8482, %r8481, 23;
	mov.b64 	%rd3022, {%r8488, %r8487};
	xor.b64  	%rd3023, %rd3021, %rd3022;
	xor.b64  	%rd3024, %rd2978, %rd2951;
	and.b64  	%rd3025, %rd3005, %rd3024;
	xor.b64  	%rd3026, %rd3025, %rd2951;
	add.s64 	%rd3027, %rd3455, %rd3448;
	ld.const.u64 	%rd3028, [%rd3018];
	add.s64 	%rd3029, %rd3027, %rd3028;
	add.s64 	%rd3030, %rd3029, %rd3026;
	add.s64 	%rd3031, %rd3030, %rd3023;
	add.s64 	%rd3032, %rd3031, %rd3444;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8489,%dummy}, %rd3016;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8490}, %rd3016;
	}
	shf.r.wrap.b32 	%r8491, %r8490, %r8489, 28;
	shf.r.wrap.b32 	%r8492, %r8489, %r8490, 28;
	mov.b64 	%rd3033, {%r8492, %r8491};
	shf.l.wrap.b32 	%r8493, %r8489, %r8490, 30;
	shf.l.wrap.b32 	%r8494, %r8490, %r8489, 30;
	mov.b64 	%rd3034, {%r8494, %r8493};
	xor.b64  	%rd3035, %rd3034, %rd3033;
	shf.l.wrap.b32 	%r8495, %r8489, %r8490, 25;
	shf.l.wrap.b32 	%r8496, %r8490, %r8489, 25;
	mov.b64 	%rd3036, {%r8496, %r8495};
	xor.b64  	%rd3037, %rd3035, %rd3036;
	xor.b64  	%rd3038, %rd3016, %rd2962;
	xor.b64  	%rd3039, %rd3016, %rd2989;
	and.b64  	%rd3040, %rd3039, %rd3038;
	xor.b64  	%rd3041, %rd3040, %rd3016;
	add.s64 	%rd3042, %rd3031, %rd3041;
	add.s64 	%rd3043, %rd3042, %rd3037;
	add.s32 	%r8497, %r8768, 4;
	mul.wide.s32 	%rd3044, %r8497, 8;
	add.s64 	%rd3045, %rd2936, %rd3044;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8498,%dummy}, %rd3032;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8499}, %rd3032;
	}
	shf.r.wrap.b32 	%r8500, %r8499, %r8498, 14;
	shf.r.wrap.b32 	%r8501, %r8498, %r8499, 14;
	mov.b64 	%rd3046, {%r8501, %r8500};
	shf.r.wrap.b32 	%r8502, %r8499, %r8498, 18;
	shf.r.wrap.b32 	%r8503, %r8498, %r8499, 18;
	mov.b64 	%rd3047, {%r8503, %r8502};
	xor.b64  	%rd3048, %rd3047, %rd3046;
	shf.l.wrap.b32 	%r8504, %r8498, %r8499, 23;
	shf.l.wrap.b32 	%r8505, %r8499, %r8498, 23;
	mov.b64 	%rd3049, {%r8505, %r8504};
	xor.b64  	%rd3050, %rd3048, %rd3049;
	xor.b64  	%rd3051, %rd3005, %rd2978;
	and.b64  	%rd3052, %rd3032, %rd3051;
	xor.b64  	%rd3053, %rd3052, %rd2978;
	add.s64 	%rd3054, %rd2951, %rd3456;
	ld.const.u64 	%rd3055, [%rd3045];
	add.s64 	%rd3056, %rd3054, %rd3055;
	add.s64 	%rd3057, %rd3056, %rd3053;
	add.s64 	%rd3058, %rd3057, %rd3050;
	add.s64 	%rd3059, %rd3058, %rd2962;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8506,%dummy}, %rd3043;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8507}, %rd3043;
	}
	shf.r.wrap.b32 	%r8508, %r8507, %r8506, 28;
	shf.r.wrap.b32 	%r8509, %r8506, %r8507, 28;
	mov.b64 	%rd3060, {%r8509, %r8508};
	shf.l.wrap.b32 	%r8510, %r8506, %r8507, 30;
	shf.l.wrap.b32 	%r8511, %r8507, %r8506, 30;
	mov.b64 	%rd3061, {%r8511, %r8510};
	xor.b64  	%rd3062, %rd3061, %rd3060;
	shf.l.wrap.b32 	%r8512, %r8506, %r8507, 25;
	shf.l.wrap.b32 	%r8513, %r8507, %r8506, 25;
	mov.b64 	%rd3063, {%r8513, %r8512};
	xor.b64  	%rd3064, %rd3062, %rd3063;
	xor.b64  	%rd3065, %rd3043, %rd2989;
	xor.b64  	%rd3066, %rd3043, %rd3016;
	and.b64  	%rd3067, %rd3066, %rd3065;
	xor.b64  	%rd3068, %rd3067, %rd3043;
	add.s64 	%rd3069, %rd3058, %rd3068;
	add.s64 	%rd3070, %rd3069, %rd3064;
	add.s32 	%r8514, %r8768, 5;
	mul.wide.s32 	%rd3071, %r8514, 8;
	add.s64 	%rd3072, %rd2936, %rd3071;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8515,%dummy}, %rd3059;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8516}, %rd3059;
	}
	shf.r.wrap.b32 	%r8517, %r8516, %r8515, 14;
	shf.r.wrap.b32 	%r8518, %r8515, %r8516, 14;
	mov.b64 	%rd3073, {%r8518, %r8517};
	shf.r.wrap.b32 	%r8519, %r8516, %r8515, 18;
	shf.r.wrap.b32 	%r8520, %r8515, %r8516, 18;
	mov.b64 	%rd3074, {%r8520, %r8519};
	xor.b64  	%rd3075, %rd3074, %rd3073;
	shf.l.wrap.b32 	%r8521, %r8515, %r8516, 23;
	shf.l.wrap.b32 	%r8522, %r8516, %r8515, 23;
	mov.b64 	%rd3076, {%r8522, %r8521};
	xor.b64  	%rd3077, %rd3075, %rd3076;
	xor.b64  	%rd3078, %rd3032, %rd3005;
	and.b64  	%rd3079, %rd3059, %rd3078;
	xor.b64  	%rd3080, %rd3079, %rd3005;
	add.s64 	%rd3081, %rd2978, %rd3457;
	ld.const.u64 	%rd3082, [%rd3072];
	add.s64 	%rd3083, %rd3081, %rd3082;
	add.s64 	%rd3084, %rd3083, %rd3080;
	add.s64 	%rd3085, %rd3084, %rd3077;
	add.s64 	%rd3086, %rd3085, %rd2989;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8523,%dummy}, %rd3070;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8524}, %rd3070;
	}
	shf.r.wrap.b32 	%r8525, %r8524, %r8523, 28;
	shf.r.wrap.b32 	%r8526, %r8523, %r8524, 28;
	mov.b64 	%rd3087, {%r8526, %r8525};
	shf.l.wrap.b32 	%r8527, %r8523, %r8524, 30;
	shf.l.wrap.b32 	%r8528, %r8524, %r8523, 30;
	mov.b64 	%rd3088, {%r8528, %r8527};
	xor.b64  	%rd3089, %rd3088, %rd3087;
	shf.l.wrap.b32 	%r8529, %r8523, %r8524, 25;
	shf.l.wrap.b32 	%r8530, %r8524, %r8523, 25;
	mov.b64 	%rd3090, {%r8530, %r8529};
	xor.b64  	%rd3091, %rd3089, %rd3090;
	xor.b64  	%rd3092, %rd3070, %rd3016;
	xor.b64  	%rd3093, %rd3070, %rd3043;
	and.b64  	%rd3094, %rd3093, %rd3092;
	xor.b64  	%rd3095, %rd3094, %rd3070;
	add.s64 	%rd3096, %rd3085, %rd3095;
	add.s64 	%rd3097, %rd3096, %rd3091;
	add.s32 	%r8531, %r8768, 6;
	mul.wide.s32 	%rd3098, %r8531, 8;
	add.s64 	%rd3099, %rd2936, %rd3098;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8532,%dummy}, %rd3086;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8533}, %rd3086;
	}
	shf.r.wrap.b32 	%r8534, %r8533, %r8532, 14;
	shf.r.wrap.b32 	%r8535, %r8532, %r8533, 14;
	mov.b64 	%rd3100, {%r8535, %r8534};
	shf.r.wrap.b32 	%r8536, %r8533, %r8532, 18;
	shf.r.wrap.b32 	%r8537, %r8532, %r8533, 18;
	mov.b64 	%rd3101, {%r8537, %r8536};
	xor.b64  	%rd3102, %rd3101, %rd3100;
	shf.l.wrap.b32 	%r8538, %r8532, %r8533, 23;
	shf.l.wrap.b32 	%r8539, %r8533, %r8532, 23;
	mov.b64 	%rd3103, {%r8539, %r8538};
	xor.b64  	%rd3104, %rd3102, %rd3103;
	xor.b64  	%rd3105, %rd3059, %rd3032;
	and.b64  	%rd3106, %rd3086, %rd3105;
	xor.b64  	%rd3107, %rd3106, %rd3032;
	add.s64 	%rd3108, %rd3005, %rd3458;
	ld.const.u64 	%rd3109, [%rd3099];
	add.s64 	%rd3110, %rd3108, %rd3109;
	add.s64 	%rd3111, %rd3110, %rd3107;
	add.s64 	%rd3112, %rd3111, %rd3104;
	add.s64 	%rd3113, %rd3112, %rd3016;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8540,%dummy}, %rd3097;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8541}, %rd3097;
	}
	shf.r.wrap.b32 	%r8542, %r8541, %r8540, 28;
	shf.r.wrap.b32 	%r8543, %r8540, %r8541, 28;
	mov.b64 	%rd3114, {%r8543, %r8542};
	shf.l.wrap.b32 	%r8544, %r8540, %r8541, 30;
	shf.l.wrap.b32 	%r8545, %r8541, %r8540, 30;
	mov.b64 	%rd3115, {%r8545, %r8544};
	xor.b64  	%rd3116, %rd3115, %rd3114;
	shf.l.wrap.b32 	%r8546, %r8540, %r8541, 25;
	shf.l.wrap.b32 	%r8547, %r8541, %r8540, 25;
	mov.b64 	%rd3117, {%r8547, %r8546};
	xor.b64  	%rd3118, %rd3116, %rd3117;
	xor.b64  	%rd3119, %rd3097, %rd3043;
	xor.b64  	%rd3120, %rd3097, %rd3070;
	and.b64  	%rd3121, %rd3120, %rd3119;
	xor.b64  	%rd3122, %rd3121, %rd3097;
	add.s64 	%rd3123, %rd3112, %rd3122;
	add.s64 	%rd3124, %rd3123, %rd3118;
	add.s32 	%r8548, %r8768, 7;
	mul.wide.s32 	%rd3125, %r8548, 8;
	add.s64 	%rd3126, %rd2936, %rd3125;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8549,%dummy}, %rd3113;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8550}, %rd3113;
	}
	shf.r.wrap.b32 	%r8551, %r8550, %r8549, 14;
	shf.r.wrap.b32 	%r8552, %r8549, %r8550, 14;
	mov.b64 	%rd3127, {%r8552, %r8551};
	shf.r.wrap.b32 	%r8553, %r8550, %r8549, 18;
	shf.r.wrap.b32 	%r8554, %r8549, %r8550, 18;
	mov.b64 	%rd3128, {%r8554, %r8553};
	xor.b64  	%rd3129, %rd3128, %rd3127;
	shf.l.wrap.b32 	%r8555, %r8549, %r8550, 23;
	shf.l.wrap.b32 	%r8556, %r8550, %r8549, 23;
	mov.b64 	%rd3130, {%r8556, %r8555};
	xor.b64  	%rd3131, %rd3129, %rd3130;
	xor.b64  	%rd3132, %rd3086, %rd3059;
	and.b64  	%rd3133, %rd3113, %rd3132;
	xor.b64  	%rd3134, %rd3133, %rd3059;
	add.s64 	%rd3135, %rd3032, %rd3459;
	ld.const.u64 	%rd3136, [%rd3126];
	add.s64 	%rd3137, %rd3135, %rd3136;
	add.s64 	%rd3138, %rd3137, %rd3134;
	add.s64 	%rd3139, %rd3138, %rd3131;
	add.s64 	%rd3140, %rd3139, %rd3043;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8557,%dummy}, %rd3124;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8558}, %rd3124;
	}
	shf.r.wrap.b32 	%r8559, %r8558, %r8557, 28;
	shf.r.wrap.b32 	%r8560, %r8557, %r8558, 28;
	mov.b64 	%rd3141, {%r8560, %r8559};
	shf.l.wrap.b32 	%r8561, %r8557, %r8558, 30;
	shf.l.wrap.b32 	%r8562, %r8558, %r8557, 30;
	mov.b64 	%rd3142, {%r8562, %r8561};
	xor.b64  	%rd3143, %rd3142, %rd3141;
	shf.l.wrap.b32 	%r8563, %r8557, %r8558, 25;
	shf.l.wrap.b32 	%r8564, %r8558, %r8557, 25;
	mov.b64 	%rd3144, {%r8564, %r8563};
	xor.b64  	%rd3145, %rd3143, %rd3144;
	xor.b64  	%rd3146, %rd3124, %rd3070;
	xor.b64  	%rd3147, %rd3124, %rd3097;
	and.b64  	%rd3148, %rd3147, %rd3146;
	xor.b64  	%rd3149, %rd3148, %rd3124;
	add.s64 	%rd3150, %rd3139, %rd3149;
	add.s64 	%rd3151, %rd3150, %rd3145;
	add.s32 	%r8565, %r8768, 8;
	mul.wide.s32 	%rd3152, %r8565, 8;
	add.s64 	%rd3153, %rd2936, %rd3152;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8566,%dummy}, %rd3140;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8567}, %rd3140;
	}
	shf.r.wrap.b32 	%r8568, %r8567, %r8566, 14;
	shf.r.wrap.b32 	%r8569, %r8566, %r8567, 14;
	mov.b64 	%rd3154, {%r8569, %r8568};
	shf.r.wrap.b32 	%r8570, %r8567, %r8566, 18;
	shf.r.wrap.b32 	%r8571, %r8566, %r8567, 18;
	mov.b64 	%rd3155, {%r8571, %r8570};
	xor.b64  	%rd3156, %rd3155, %rd3154;
	shf.l.wrap.b32 	%r8572, %r8566, %r8567, 23;
	shf.l.wrap.b32 	%r8573, %r8567, %r8566, 23;
	mov.b64 	%rd3157, {%r8573, %r8572};
	xor.b64  	%rd3158, %rd3156, %rd3157;
	xor.b64  	%rd3159, %rd3113, %rd3086;
	and.b64  	%rd3160, %rd3140, %rd3159;
	xor.b64  	%rd3161, %rd3160, %rd3086;
	add.s64 	%rd3162, %rd3059, %rd3443;
	ld.const.u64 	%rd3163, [%rd3153];
	add.s64 	%rd3164, %rd3162, %rd3163;
	add.s64 	%rd3165, %rd3164, %rd3161;
	add.s64 	%rd3166, %rd3165, %rd3158;
	add.s64 	%rd3167, %rd3166, %rd3070;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8574,%dummy}, %rd3151;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8575}, %rd3151;
	}
	shf.r.wrap.b32 	%r8576, %r8575, %r8574, 28;
	shf.r.wrap.b32 	%r8577, %r8574, %r8575, 28;
	mov.b64 	%rd3168, {%r8577, %r8576};
	shf.l.wrap.b32 	%r8578, %r8574, %r8575, 30;
	shf.l.wrap.b32 	%r8579, %r8575, %r8574, 30;
	mov.b64 	%rd3169, {%r8579, %r8578};
	xor.b64  	%rd3170, %rd3169, %rd3168;
	shf.l.wrap.b32 	%r8580, %r8574, %r8575, 25;
	shf.l.wrap.b32 	%r8581, %r8575, %r8574, 25;
	mov.b64 	%rd3171, {%r8581, %r8580};
	xor.b64  	%rd3172, %rd3170, %rd3171;
	xor.b64  	%rd3173, %rd3151, %rd3097;
	xor.b64  	%rd3174, %rd3151, %rd3124;
	and.b64  	%rd3175, %rd3174, %rd3173;
	xor.b64  	%rd3176, %rd3175, %rd3151;
	add.s64 	%rd3177, %rd3166, %rd3176;
	add.s64 	%rd3178, %rd3177, %rd3172;
	add.s32 	%r8582, %r8768, 9;
	mul.wide.s32 	%rd3179, %r8582, 8;
	add.s64 	%rd3180, %rd2936, %rd3179;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8583,%dummy}, %rd3167;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8584}, %rd3167;
	}
	shf.r.wrap.b32 	%r8585, %r8584, %r8583, 14;
	shf.r.wrap.b32 	%r8586, %r8583, %r8584, 14;
	mov.b64 	%rd3181, {%r8586, %r8585};
	shf.r.wrap.b32 	%r8587, %r8584, %r8583, 18;
	shf.r.wrap.b32 	%r8588, %r8583, %r8584, 18;
	mov.b64 	%rd3182, {%r8588, %r8587};
	xor.b64  	%rd3183, %rd3182, %rd3181;
	shf.l.wrap.b32 	%r8589, %r8583, %r8584, 23;
	shf.l.wrap.b32 	%r8590, %r8584, %r8583, 23;
	mov.b64 	%rd3184, {%r8590, %r8589};
	xor.b64  	%rd3185, %rd3183, %rd3184;
	xor.b64  	%rd3186, %rd3140, %rd3113;
	and.b64  	%rd3187, %rd3167, %rd3186;
	xor.b64  	%rd3188, %rd3187, %rd3113;
	add.s64 	%rd3189, %rd3086, %rd3442;
	ld.const.u64 	%rd3190, [%rd3180];
	add.s64 	%rd3191, %rd3189, %rd3190;
	add.s64 	%rd3192, %rd3191, %rd3188;
	add.s64 	%rd3193, %rd3192, %rd3185;
	add.s64 	%rd3194, %rd3193, %rd3097;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8591,%dummy}, %rd3178;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8592}, %rd3178;
	}
	shf.r.wrap.b32 	%r8593, %r8592, %r8591, 28;
	shf.r.wrap.b32 	%r8594, %r8591, %r8592, 28;
	mov.b64 	%rd3195, {%r8594, %r8593};
	shf.l.wrap.b32 	%r8595, %r8591, %r8592, 30;
	shf.l.wrap.b32 	%r8596, %r8592, %r8591, 30;
	mov.b64 	%rd3196, {%r8596, %r8595};
	xor.b64  	%rd3197, %rd3196, %rd3195;
	shf.l.wrap.b32 	%r8597, %r8591, %r8592, 25;
	shf.l.wrap.b32 	%r8598, %r8592, %r8591, 25;
	mov.b64 	%rd3198, {%r8598, %r8597};
	xor.b64  	%rd3199, %rd3197, %rd3198;
	xor.b64  	%rd3200, %rd3178, %rd3124;
	xor.b64  	%rd3201, %rd3178, %rd3151;
	and.b64  	%rd3202, %rd3201, %rd3200;
	xor.b64  	%rd3203, %rd3202, %rd3178;
	add.s64 	%rd3204, %rd3193, %rd3203;
	add.s64 	%rd3205, %rd3204, %rd3199;
	add.s32 	%r8599, %r8768, 10;
	mul.wide.s32 	%rd3206, %r8599, 8;
	add.s64 	%rd3207, %rd2936, %rd3206;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8600,%dummy}, %rd3194;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8601}, %rd3194;
	}
	shf.r.wrap.b32 	%r8602, %r8601, %r8600, 14;
	shf.r.wrap.b32 	%r8603, %r8600, %r8601, 14;
	mov.b64 	%rd3208, {%r8603, %r8602};
	shf.r.wrap.b32 	%r8604, %r8601, %r8600, 18;
	shf.r.wrap.b32 	%r8605, %r8600, %r8601, 18;
	mov.b64 	%rd3209, {%r8605, %r8604};
	xor.b64  	%rd3210, %rd3209, %rd3208;
	shf.l.wrap.b32 	%r8606, %r8600, %r8601, 23;
	shf.l.wrap.b32 	%r8607, %r8601, %r8600, 23;
	mov.b64 	%rd3211, {%r8607, %r8606};
	xor.b64  	%rd3212, %rd3210, %rd3211;
	xor.b64  	%rd3213, %rd3167, %rd3140;
	and.b64  	%rd3214, %rd3194, %rd3213;
	xor.b64  	%rd3215, %rd3214, %rd3140;
	add.s64 	%rd3216, %rd3113, %rd3441;
	ld.const.u64 	%rd3217, [%rd3207];
	add.s64 	%rd3218, %rd3216, %rd3217;
	add.s64 	%rd3219, %rd3218, %rd3215;
	add.s64 	%rd3220, %rd3219, %rd3212;
	add.s64 	%rd3221, %rd3220, %rd3124;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8608,%dummy}, %rd3205;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8609}, %rd3205;
	}
	shf.r.wrap.b32 	%r8610, %r8609, %r8608, 28;
	shf.r.wrap.b32 	%r8611, %r8608, %r8609, 28;
	mov.b64 	%rd3222, {%r8611, %r8610};
	shf.l.wrap.b32 	%r8612, %r8608, %r8609, 30;
	shf.l.wrap.b32 	%r8613, %r8609, %r8608, 30;
	mov.b64 	%rd3223, {%r8613, %r8612};
	xor.b64  	%rd3224, %rd3223, %rd3222;
	shf.l.wrap.b32 	%r8614, %r8608, %r8609, 25;
	shf.l.wrap.b32 	%r8615, %r8609, %r8608, 25;
	mov.b64 	%rd3225, {%r8615, %r8614};
	xor.b64  	%rd3226, %rd3224, %rd3225;
	xor.b64  	%rd3227, %rd3205, %rd3151;
	xor.b64  	%rd3228, %rd3205, %rd3178;
	and.b64  	%rd3229, %rd3228, %rd3227;
	xor.b64  	%rd3230, %rd3229, %rd3205;
	add.s64 	%rd3231, %rd3220, %rd3230;
	add.s64 	%rd3232, %rd3231, %rd3226;
	add.s32 	%r8616, %r8768, 11;
	mul.wide.s32 	%rd3233, %r8616, 8;
	add.s64 	%rd3234, %rd2936, %rd3233;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8617,%dummy}, %rd3221;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8618}, %rd3221;
	}
	shf.r.wrap.b32 	%r8619, %r8618, %r8617, 14;
	shf.r.wrap.b32 	%r8620, %r8617, %r8618, 14;
	mov.b64 	%rd3235, {%r8620, %r8619};
	shf.r.wrap.b32 	%r8621, %r8618, %r8617, 18;
	shf.r.wrap.b32 	%r8622, %r8617, %r8618, 18;
	mov.b64 	%rd3236, {%r8622, %r8621};
	xor.b64  	%rd3237, %rd3236, %rd3235;
	shf.l.wrap.b32 	%r8623, %r8617, %r8618, 23;
	shf.l.wrap.b32 	%r8624, %r8618, %r8617, 23;
	mov.b64 	%rd3238, {%r8624, %r8623};
	xor.b64  	%rd3239, %rd3237, %rd3238;
	xor.b64  	%rd3240, %rd3194, %rd3167;
	and.b64  	%rd3241, %rd3221, %rd3240;
	xor.b64  	%rd3242, %rd3241, %rd3167;
	add.s64 	%rd3243, %rd3140, %rd3440;
	ld.const.u64 	%rd3244, [%rd3234];
	add.s64 	%rd3245, %rd3243, %rd3244;
	add.s64 	%rd3246, %rd3245, %rd3242;
	add.s64 	%rd3247, %rd3246, %rd3239;
	add.s64 	%rd3248, %rd3247, %rd3151;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8625,%dummy}, %rd3232;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8626}, %rd3232;
	}
	shf.r.wrap.b32 	%r8627, %r8626, %r8625, 28;
	shf.r.wrap.b32 	%r8628, %r8625, %r8626, 28;
	mov.b64 	%rd3249, {%r8628, %r8627};
	shf.l.wrap.b32 	%r8629, %r8625, %r8626, 30;
	shf.l.wrap.b32 	%r8630, %r8626, %r8625, 30;
	mov.b64 	%rd3250, {%r8630, %r8629};
	xor.b64  	%rd3251, %rd3250, %rd3249;
	shf.l.wrap.b32 	%r8631, %r8625, %r8626, 25;
	shf.l.wrap.b32 	%r8632, %r8626, %r8625, 25;
	mov.b64 	%rd3252, {%r8632, %r8631};
	xor.b64  	%rd3253, %rd3251, %rd3252;
	xor.b64  	%rd3254, %rd3232, %rd3178;
	xor.b64  	%rd3255, %rd3232, %rd3205;
	and.b64  	%rd3256, %rd3255, %rd3254;
	xor.b64  	%rd3257, %rd3256, %rd3232;
	add.s64 	%rd3258, %rd3247, %rd3257;
	add.s64 	%rd3259, %rd3258, %rd3253;
	add.s32 	%r8633, %r8768, 12;
	mul.wide.s32 	%rd3260, %r8633, 8;
	add.s64 	%rd3261, %rd2936, %rd3260;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8634,%dummy}, %rd3248;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8635}, %rd3248;
	}
	shf.r.wrap.b32 	%r8636, %r8635, %r8634, 14;
	shf.r.wrap.b32 	%r8637, %r8634, %r8635, 14;
	mov.b64 	%rd3262, {%r8637, %r8636};
	shf.r.wrap.b32 	%r8638, %r8635, %r8634, 18;
	shf.r.wrap.b32 	%r8639, %r8634, %r8635, 18;
	mov.b64 	%rd3263, {%r8639, %r8638};
	xor.b64  	%rd3264, %rd3263, %rd3262;
	shf.l.wrap.b32 	%r8640, %r8634, %r8635, 23;
	shf.l.wrap.b32 	%r8641, %r8635, %r8634, 23;
	mov.b64 	%rd3265, {%r8641, %r8640};
	xor.b64  	%rd3266, %rd3264, %rd3265;
	xor.b64  	%rd3267, %rd3221, %rd3194;
	and.b64  	%rd3268, %rd3248, %rd3267;
	xor.b64  	%rd3269, %rd3268, %rd3194;
	add.s64 	%rd3270, %rd3167, %rd3439;
	ld.const.u64 	%rd3271, [%rd3261];
	add.s64 	%rd3272, %rd3270, %rd3271;
	add.s64 	%rd3273, %rd3272, %rd3269;
	add.s64 	%rd3274, %rd3273, %rd3266;
	add.s64 	%rd3451, %rd3274, %rd3178;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8642,%dummy}, %rd3259;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8643}, %rd3259;
	}
	shf.r.wrap.b32 	%r8644, %r8643, %r8642, 28;
	shf.r.wrap.b32 	%r8645, %r8642, %r8643, 28;
	mov.b64 	%rd3275, {%r8645, %r8644};
	shf.l.wrap.b32 	%r8646, %r8642, %r8643, 30;
	shf.l.wrap.b32 	%r8647, %r8643, %r8642, 30;
	mov.b64 	%rd3276, {%r8647, %r8646};
	xor.b64  	%rd3277, %rd3276, %rd3275;
	shf.l.wrap.b32 	%r8648, %r8642, %r8643, 25;
	shf.l.wrap.b32 	%r8649, %r8643, %r8642, 25;
	mov.b64 	%rd3278, {%r8649, %r8648};
	xor.b64  	%rd3279, %rd3277, %rd3278;
	xor.b64  	%rd3280, %rd3259, %rd3205;
	xor.b64  	%rd3281, %rd3259, %rd3232;
	and.b64  	%rd3282, %rd3281, %rd3280;
	xor.b64  	%rd3283, %rd3282, %rd3259;
	add.s64 	%rd3284, %rd3274, %rd3283;
	add.s64 	%rd3447, %rd3284, %rd3279;
	add.s32 	%r8650, %r8768, 13;
	mul.wide.s32 	%rd3285, %r8650, 8;
	add.s64 	%rd3286, %rd2936, %rd3285;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8651,%dummy}, %rd3451;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8652}, %rd3451;
	}
	shf.r.wrap.b32 	%r8653, %r8652, %r8651, 14;
	shf.r.wrap.b32 	%r8654, %r8651, %r8652, 14;
	mov.b64 	%rd3287, {%r8654, %r8653};
	shf.r.wrap.b32 	%r8655, %r8652, %r8651, 18;
	shf.r.wrap.b32 	%r8656, %r8651, %r8652, 18;
	mov.b64 	%rd3288, {%r8656, %r8655};
	xor.b64  	%rd3289, %rd3288, %rd3287;
	shf.l.wrap.b32 	%r8657, %r8651, %r8652, 23;
	shf.l.wrap.b32 	%r8658, %r8652, %r8651, 23;
	mov.b64 	%rd3290, {%r8658, %r8657};
	xor.b64  	%rd3291, %rd3289, %rd3290;
	xor.b64  	%rd3292, %rd3248, %rd3221;
	and.b64  	%rd3293, %rd3451, %rd3292;
	xor.b64  	%rd3294, %rd3293, %rd3221;
	add.s64 	%rd3295, %rd3194, %rd3438;
	ld.const.u64 	%rd3296, [%rd3286];
	add.s64 	%rd3297, %rd3295, %rd3296;
	add.s64 	%rd3298, %rd3297, %rd3294;
	add.s64 	%rd3299, %rd3298, %rd3291;
	add.s64 	%rd3450, %rd3299, %rd3205;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8659,%dummy}, %rd3447;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8660}, %rd3447;
	}
	shf.r.wrap.b32 	%r8661, %r8660, %r8659, 28;
	shf.r.wrap.b32 	%r8662, %r8659, %r8660, 28;
	mov.b64 	%rd3300, {%r8662, %r8661};
	shf.l.wrap.b32 	%r8663, %r8659, %r8660, 30;
	shf.l.wrap.b32 	%r8664, %r8660, %r8659, 30;
	mov.b64 	%rd3301, {%r8664, %r8663};
	xor.b64  	%rd3302, %rd3301, %rd3300;
	shf.l.wrap.b32 	%r8665, %r8659, %r8660, 25;
	shf.l.wrap.b32 	%r8666, %r8660, %r8659, 25;
	mov.b64 	%rd3303, {%r8666, %r8665};
	xor.b64  	%rd3304, %rd3302, %rd3303;
	xor.b64  	%rd3305, %rd3447, %rd3232;
	xor.b64  	%rd3306, %rd3447, %rd3259;
	and.b64  	%rd3307, %rd3306, %rd3305;
	xor.b64  	%rd3308, %rd3307, %rd3447;
	add.s64 	%rd3309, %rd3299, %rd3308;
	add.s64 	%rd3446, %rd3309, %rd3304;
	add.s32 	%r8667, %r8768, 14;
	mul.wide.s32 	%rd3310, %r8667, 8;
	add.s64 	%rd3311, %rd2936, %rd3310;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8668,%dummy}, %rd3450;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8669}, %rd3450;
	}
	shf.r.wrap.b32 	%r8670, %r8669, %r8668, 14;
	shf.r.wrap.b32 	%r8671, %r8668, %r8669, 14;
	mov.b64 	%rd3312, {%r8671, %r8670};
	shf.r.wrap.b32 	%r8672, %r8669, %r8668, 18;
	shf.r.wrap.b32 	%r8673, %r8668, %r8669, 18;
	mov.b64 	%rd3313, {%r8673, %r8672};
	xor.b64  	%rd3314, %rd3313, %rd3312;
	shf.l.wrap.b32 	%r8674, %r8668, %r8669, 23;
	shf.l.wrap.b32 	%r8675, %r8669, %r8668, 23;
	mov.b64 	%rd3315, {%r8675, %r8674};
	xor.b64  	%rd3316, %rd3314, %rd3315;
	xor.b64  	%rd3317, %rd3451, %rd3248;
	and.b64  	%rd3318, %rd3450, %rd3317;
	xor.b64  	%rd3319, %rd3318, %rd3248;
	add.s64 	%rd3320, %rd3221, %rd3437;
	ld.const.u64 	%rd3321, [%rd3311];
	add.s64 	%rd3322, %rd3320, %rd3321;
	add.s64 	%rd3323, %rd3322, %rd3319;
	add.s64 	%rd3324, %rd3323, %rd3316;
	add.s64 	%rd3449, %rd3324, %rd3232;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8676,%dummy}, %rd3446;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8677}, %rd3446;
	}
	shf.r.wrap.b32 	%r8678, %r8677, %r8676, 28;
	shf.r.wrap.b32 	%r8679, %r8676, %r8677, 28;
	mov.b64 	%rd3325, {%r8679, %r8678};
	shf.l.wrap.b32 	%r8680, %r8676, %r8677, 30;
	shf.l.wrap.b32 	%r8681, %r8677, %r8676, 30;
	mov.b64 	%rd3326, {%r8681, %r8680};
	xor.b64  	%rd3327, %rd3326, %rd3325;
	shf.l.wrap.b32 	%r8682, %r8676, %r8677, 25;
	shf.l.wrap.b32 	%r8683, %r8677, %r8676, 25;
	mov.b64 	%rd3328, {%r8683, %r8682};
	xor.b64  	%rd3329, %rd3327, %rd3328;
	xor.b64  	%rd3330, %rd3446, %rd3259;
	xor.b64  	%rd3331, %rd3446, %rd3447;
	and.b64  	%rd3332, %rd3331, %rd3330;
	xor.b64  	%rd3333, %rd3332, %rd3446;
	add.s64 	%rd3334, %rd3324, %rd3333;
	add.s64 	%rd3445, %rd3334, %rd3329;
	add.s32 	%r8684, %r8768, 15;
	mul.wide.s32 	%rd3335, %r8684, 8;
	add.s64 	%rd3336, %rd2936, %rd3335;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8685,%dummy}, %rd3449;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8686}, %rd3449;
	}
	shf.r.wrap.b32 	%r8687, %r8686, %r8685, 14;
	shf.r.wrap.b32 	%r8688, %r8685, %r8686, 14;
	mov.b64 	%rd3337, {%r8688, %r8687};
	shf.r.wrap.b32 	%r8689, %r8686, %r8685, 18;
	shf.r.wrap.b32 	%r8690, %r8685, %r8686, 18;
	mov.b64 	%rd3338, {%r8690, %r8689};
	xor.b64  	%rd3339, %rd3338, %rd3337;
	shf.l.wrap.b32 	%r8691, %r8685, %r8686, 23;
	shf.l.wrap.b32 	%r8692, %r8686, %r8685, 23;
	mov.b64 	%rd3340, {%r8692, %r8691};
	xor.b64  	%rd3341, %rd3339, %rd3340;
	xor.b64  	%rd3342, %rd3450, %rd3451;
	and.b64  	%rd3343, %rd3449, %rd3342;
	xor.b64  	%rd3344, %rd3343, %rd3451;
	add.s64 	%rd3345, %rd3248, %rd3436;
	ld.const.u64 	%rd3346, [%rd3336];
	add.s64 	%rd3347, %rd3345, %rd3346;
	add.s64 	%rd3348, %rd3347, %rd3344;
	add.s64 	%rd3349, %rd3348, %rd3341;
	add.s64 	%rd3448, %rd3349, %rd3259;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8693,%dummy}, %rd3445;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8694}, %rd3445;
	}
	shf.r.wrap.b32 	%r8695, %r8694, %r8693, 28;
	shf.r.wrap.b32 	%r8696, %r8693, %r8694, 28;
	mov.b64 	%rd3350, {%r8696, %r8695};
	shf.l.wrap.b32 	%r8697, %r8693, %r8694, 30;
	shf.l.wrap.b32 	%r8698, %r8694, %r8693, 30;
	mov.b64 	%rd3351, {%r8698, %r8697};
	xor.b64  	%rd3352, %rd3351, %rd3350;
	shf.l.wrap.b32 	%r8699, %r8693, %r8694, 25;
	shf.l.wrap.b32 	%r8700, %r8694, %r8693, 25;
	mov.b64 	%rd3353, {%r8700, %r8699};
	xor.b64  	%rd3354, %rd3352, %rd3353;
	xor.b64  	%rd3355, %rd3445, %rd3447;
	xor.b64  	%rd3356, %rd3445, %rd3446;
	and.b64  	%rd3357, %rd3356, %rd3355;
	xor.b64  	%rd3358, %rd3357, %rd3445;
	add.s64 	%rd3359, %rd3349, %rd3358;
	add.s64 	%rd3444, %rd3359, %rd3354;
	add.s32 	%r8768, %r8768, 16;
	setp.lt.s32	%p244, %r8768, 80;
	@%p244 bra 	BB4_420;
	bra.uni 	BB4_421;

BB4_3:
	ld.param.u64 	%rd3377, [m07900_init_param_0];
	add.u64 	%rd3376, %SP, 112;
	add.u64 	%rd3375, %SP, 96;
	add.u64 	%rd3374, %SP, 80;
	add.u64 	%rd3373, %SP, 64;
	add.u64 	%rd3372, %SP, 48;
	add.u64 	%rd3371, %SP, 32;
	add.u64 	%rd3370, %SP, 16;
	add.u64 	%rd3369, %SP, 0;
	add.u64 	%rd3368, %SP, 128;
	// inline asm
	prmt.b32 %r712, %r5, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd1], %r712;
	ld.local.u32 	%r715, [%rd28];
	// inline asm
	prmt.b32 %r714, %r715, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd28], %r714;
	ld.local.u32 	%r717, [%rd28+4];
	// inline asm
	prmt.b32 %r716, %r717, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd28+4], %r716;
	ld.local.u32 	%r719, [%rd28+8];
	// inline asm
	prmt.b32 %r718, %r719, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd28+8], %r718;
	ld.local.u32 	%r721, [%rd2];
	// inline asm
	prmt.b32 %r720, %r721, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd2], %r720;
	ld.local.u32 	%r723, [%rd29];
	// inline asm
	prmt.b32 %r722, %r723, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd29], %r722;
	ld.local.u32 	%r725, [%rd29+4];
	// inline asm
	prmt.b32 %r724, %r725, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd29+4], %r724;
	ld.local.u32 	%r727, [%rd29+8];
	// inline asm
	prmt.b32 %r726, %r727, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd29+8], %r726;
	ld.local.u32 	%r729, [%rd3];
	// inline asm
	prmt.b32 %r728, %r729, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd3], %r728;
	ld.local.u32 	%r731, [%rd30];
	// inline asm
	prmt.b32 %r730, %r731, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd30], %r730;
	ld.local.u32 	%r733, [%rd30+4];
	// inline asm
	prmt.b32 %r732, %r733, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd30+4], %r732;
	ld.local.u32 	%r735, [%rd30+8];
	// inline asm
	prmt.b32 %r734, %r735, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd30+8], %r734;
	ld.local.u32 	%r737, [%rd4];
	// inline asm
	prmt.b32 %r736, %r737, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd4], %r736;
	ld.local.u32 	%r739, [%rd31];
	// inline asm
	prmt.b32 %r738, %r739, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd31], %r738;
	ld.local.u32 	%r741, [%rd31+4];
	// inline asm
	prmt.b32 %r740, %r741, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd31+4], %r740;
	ld.local.u32 	%r743, [%rd31+8];
	// inline asm
	prmt.b32 %r742, %r743, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd31+8], %r742;
	ld.local.u32 	%r745, [%rd5];
	// inline asm
	prmt.b32 %r744, %r745, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd5], %r744;
	ld.local.u32 	%r747, [%rd32];
	// inline asm
	prmt.b32 %r746, %r747, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd32], %r746;
	ld.local.u32 	%r749, [%rd32+4];
	// inline asm
	prmt.b32 %r748, %r749, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd32+4], %r748;
	ld.local.u32 	%r751, [%rd32+8];
	// inline asm
	prmt.b32 %r750, %r751, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd32+8], %r750;
	ld.local.u32 	%r753, [%rd6];
	// inline asm
	prmt.b32 %r752, %r753, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd6], %r752;
	ld.local.u32 	%r755, [%rd33];
	// inline asm
	prmt.b32 %r754, %r755, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd33], %r754;
	ld.local.u32 	%r757, [%rd33+4];
	// inline asm
	prmt.b32 %r756, %r757, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd33+4], %r756;
	ld.local.u32 	%r759, [%rd33+8];
	// inline asm
	prmt.b32 %r758, %r759, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd33+8], %r758;
	ld.local.u32 	%r761, [%rd7];
	// inline asm
	prmt.b32 %r760, %r761, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd7], %r760;
	ld.local.u32 	%r763, [%rd34];
	// inline asm
	prmt.b32 %r762, %r763, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd34], %r762;
	ld.local.u32 	%r765, [%rd34+4];
	// inline asm
	prmt.b32 %r764, %r765, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd34+4], %r764;
	ld.local.u32 	%r767, [%rd34+8];
	// inline asm
	prmt.b32 %r766, %r767, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd34+8], %r766;
	ld.local.u32 	%r769, [%rd8];
	// inline asm
	prmt.b32 %r768, %r769, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd8], %r768;
	ld.local.u32 	%r771, [%rd35];
	// inline asm
	prmt.b32 %r770, %r771, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd35], %r770;
	ld.local.u32 	%r773, [%rd35+4];
	// inline asm
	prmt.b32 %r772, %r773, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd35+4], %r772;
	ld.local.u32 	%r775, [%rd35+8];
	// inline asm
	prmt.b32 %r774, %r775, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd35+8], %r774;
	sub.s32 	%r777, %r2, %r8701;
	// Callseq Start 8
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd3368;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd3369;
	.param .b64 param2;
	st.param.b64	[param2+0], %rd3370;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd3371;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd3372;
	.param .b64 param5;
	st.param.b64	[param5+0], %rd3373;
	.param .b64 param6;
	st.param.b64	[param6+0], %rd3374;
	.param .b64 param7;
	st.param.b64	[param7+0], %rd3375;
	.param .b64 param8;
	st.param.b64	[param8+0], %rd3376;
	.param .b32 param9;
	st.param.b32	[param9+0], %r777;
	call.uni 
	sha512_update_128, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7, 
	param8, 
	param9
	);
	
	//{
	}// Callseq End 8
	mul.wide.s32 	%rd401, %r1, 260;
	add.s64 	%rd402, %rd3377, %rd401;
	ld.global.u32 	%r778, [%rd402+256];
	// Callseq Start 9
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd3368;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd402;
	.param .b32 param2;
	st.param.b32	[param2+0], %r778;
	call.uni 
	sha512_update_global_swap, 
	(
	param0, 
	param1, 
	param2
	);
	
	//{
	}// Callseq End 9
	ld.local.u32 	%r6, [%rd10+184];
	and.b32  	%r7, %r6, 127;
	xor.b32  	%r776, %r7, 3;
	setp.gt.s32	%p3, %r776, 63;
	@%p3 bra 	BB4_131;

	setp.gt.s32	%p99, %r776, 31;
	@%p99 bra 	BB4_68;

	setp.gt.s32	%p147, %r776, 15;
	@%p147 bra 	BB4_37;

	setp.gt.s32	%p171, %r776, 7;
	@%p171 bra 	BB4_22;

	setp.gt.s32	%p183, %r776, 3;
	@%p183 bra 	BB4_15;

	setp.gt.s32	%p189, %r776, 1;
	@%p189 bra 	BB4_12;

	setp.eq.s32	%p192, %r776, 0;
	@%p192 bra 	BB4_321;
	bra.uni 	BB4_10;

BB4_321:
	ld.local.u32 	%r1033, [%rd10+56];
	or.b32  	%r1034, %r1033, 128;
	st.local.u32 	[%rd10+56], %r1034;
	bra.uni 	BB4_322;

BB4_131:
	setp.gt.s32	%p4, %r776, 95;
	@%p4 bra 	BB4_195;

	setp.gt.s32	%p52, %r776, 79;
	@%p52 bra 	BB4_164;

	setp.gt.s32	%p76, %r776, 71;
	@%p76 bra 	BB4_149;

	setp.gt.s32	%p88, %r776, 67;
	@%p88 bra 	BB4_142;

	setp.gt.s32	%p94, %r776, 65;
	@%p94 bra 	BB4_139;

	setp.eq.s32	%p97, %r776, 64;
	@%p97 bra 	BB4_289;
	bra.uni 	BB4_137;

BB4_289:
	ld.local.u32 	%r905, [%rd10+120];
	or.b32  	%r906, %r905, 128;
	st.local.u32 	[%rd10+120], %r906;
	bra.uni 	BB4_322;

BB4_68:
	setp.gt.s32	%p100, %r776, 47;
	@%p100 bra 	BB4_100;

	setp.gt.s32	%p124, %r776, 39;
	@%p124 bra 	BB4_85;

	setp.gt.s32	%p136, %r776, 35;
	@%p136 bra 	BB4_78;

	setp.gt.s32	%p142, %r776, 33;
	@%p142 bra 	BB4_75;

	setp.eq.s32	%p145, %r776, 32;
	@%p145 bra 	BB4_305;
	bra.uni 	BB4_73;

BB4_305:
	ld.local.u32 	%r969, [%rd10+88];
	or.b32  	%r970, %r969, 128;
	st.local.u32 	[%rd10+88], %r970;
	bra.uni 	BB4_322;

BB4_195:
	setp.gt.s32	%p5, %r776, 111;
	@%p5 bra 	BB4_227;

	setp.gt.s32	%p29, %r776, 103;
	@%p29 bra 	BB4_212;

	setp.gt.s32	%p41, %r776, 99;
	@%p41 bra 	BB4_205;

	setp.gt.s32	%p47, %r776, 97;
	@%p47 bra 	BB4_202;

	setp.eq.s32	%p50, %r776, 96;
	@%p50 bra 	BB4_273;
	bra.uni 	BB4_200;

BB4_273:
	ld.local.u32 	%r841, [%rd10+152];
	or.b32  	%r842, %r841, 128;
	st.local.u32 	[%rd10+152], %r842;
	bra.uni 	BB4_322;

BB4_37:
	setp.gt.s32	%p148, %r776, 23;
	@%p148 bra 	BB4_53;

	setp.gt.s32	%p160, %r776, 19;
	@%p160 bra 	BB4_46;

	setp.gt.s32	%p166, %r776, 17;
	@%p166 bra 	BB4_43;

	setp.eq.s32	%p169, %r776, 16;
	@%p169 bra 	BB4_313;
	bra.uni 	BB4_41;

BB4_313:
	ld.local.u32 	%r1001, [%rd10+72];
	or.b32  	%r1002, %r1001, 128;
	st.local.u32 	[%rd10+72], %r1002;
	bra.uni 	BB4_322;

BB4_164:
	setp.gt.s32	%p53, %r776, 87;
	@%p53 bra 	BB4_180;

	setp.gt.s32	%p65, %r776, 83;
	@%p65 bra 	BB4_173;

	setp.gt.s32	%p71, %r776, 81;
	@%p71 bra 	BB4_170;

	setp.eq.s32	%p74, %r776, 80;
	@%p74 bra 	BB4_281;
	bra.uni 	BB4_168;

BB4_281:
	ld.local.u32 	%r873, [%rd10+136];
	or.b32  	%r874, %r873, 128;
	st.local.u32 	[%rd10+136], %r874;
	bra.uni 	BB4_322;

BB4_100:
	setp.gt.s32	%p101, %r776, 55;
	@%p101 bra 	BB4_116;

	setp.gt.s32	%p113, %r776, 51;
	@%p113 bra 	BB4_109;

	setp.gt.s32	%p119, %r776, 49;
	@%p119 bra 	BB4_106;

	setp.eq.s32	%p122, %r776, 48;
	@%p122 bra 	BB4_297;
	bra.uni 	BB4_104;

BB4_297:
	ld.local.u32 	%r937, [%rd10+104];
	or.b32  	%r938, %r937, 128;
	st.local.u32 	[%rd10+104], %r938;
	bra.uni 	BB4_322;

BB4_227:
	setp.gt.s32	%p6, %r776, 119;
	@%p6 bra 	BB4_243;

	setp.gt.s32	%p18, %r776, 115;
	@%p18 bra 	BB4_236;

	setp.gt.s32	%p24, %r776, 113;
	@%p24 bra 	BB4_233;

	setp.eq.s32	%p27, %r776, 112;
	@%p27 bra 	BB4_265;
	bra.uni 	BB4_231;

BB4_265:
	ld.local.u32 	%r809, [%rd10+168];
	or.b32  	%r810, %r809, 128;
	st.local.u32 	[%rd10+168], %r810;
	bra.uni 	BB4_322;

BB4_22:
	setp.gt.s32	%p172, %r776, 11;
	@%p172 bra 	BB4_30;

	setp.gt.s32	%p178, %r776, 9;
	@%p178 bra 	BB4_27;

	setp.eq.s32	%p181, %r776, 8;
	@%p181 bra 	BB4_317;
	bra.uni 	BB4_25;

BB4_317:
	ld.local.u32 	%r1017, [%rd10+64];
	or.b32  	%r1018, %r1017, 128;
	st.local.u32 	[%rd10+64], %r1018;
	bra.uni 	BB4_322;

BB4_149:
	setp.gt.s32	%p77, %r776, 75;
	@%p77 bra 	BB4_157;

	setp.gt.s32	%p83, %r776, 73;
	@%p83 bra 	BB4_154;

	setp.eq.s32	%p86, %r776, 72;
	@%p86 bra 	BB4_285;
	bra.uni 	BB4_152;

BB4_285:
	ld.local.u32 	%r889, [%rd10+128];
	or.b32  	%r890, %r889, 128;
	st.local.u32 	[%rd10+128], %r890;
	bra.uni 	BB4_322;

BB4_85:
	setp.gt.s32	%p125, %r776, 43;
	@%p125 bra 	BB4_93;

	setp.gt.s32	%p131, %r776, 41;
	@%p131 bra 	BB4_90;

	setp.eq.s32	%p134, %r776, 40;
	@%p134 bra 	BB4_301;
	bra.uni 	BB4_88;

BB4_301:
	ld.local.u32 	%r953, [%rd10+96];
	or.b32  	%r954, %r953, 128;
	st.local.u32 	[%rd10+96], %r954;
	bra.uni 	BB4_322;

BB4_212:
	setp.gt.s32	%p30, %r776, 107;
	@%p30 bra 	BB4_220;

	setp.gt.s32	%p36, %r776, 105;
	@%p36 bra 	BB4_217;

	setp.eq.s32	%p39, %r776, 104;
	@%p39 bra 	BB4_269;
	bra.uni 	BB4_215;

BB4_269:
	ld.local.u32 	%r825, [%rd10+160];
	or.b32  	%r826, %r825, 128;
	st.local.u32 	[%rd10+160], %r826;
	bra.uni 	BB4_322;

BB4_53:
	setp.gt.s32	%p149, %r776, 27;
	@%p149 bra 	BB4_61;

	setp.gt.s32	%p155, %r776, 25;
	@%p155 bra 	BB4_58;

	setp.eq.s32	%p158, %r776, 24;
	@%p158 bra 	BB4_309;
	bra.uni 	BB4_56;

BB4_309:
	ld.local.u32 	%r985, [%rd10+80];
	or.b32  	%r986, %r985, 128;
	st.local.u32 	[%rd10+80], %r986;
	bra.uni 	BB4_322;

BB4_180:
	setp.gt.s32	%p54, %r776, 91;
	@%p54 bra 	BB4_188;

	setp.gt.s32	%p60, %r776, 89;
	@%p60 bra 	BB4_185;

	setp.eq.s32	%p63, %r776, 88;
	@%p63 bra 	BB4_277;
	bra.uni 	BB4_183;

BB4_277:
	ld.local.u32 	%r857, [%rd10+144];
	or.b32  	%r858, %r857, 128;
	st.local.u32 	[%rd10+144], %r858;
	bra.uni 	BB4_322;

BB4_116:
	setp.gt.s32	%p102, %r776, 59;
	@%p102 bra 	BB4_124;

	setp.gt.s32	%p108, %r776, 57;
	@%p108 bra 	BB4_121;

	setp.eq.s32	%p111, %r776, 56;
	@%p111 bra 	BB4_293;
	bra.uni 	BB4_119;

BB4_293:
	ld.local.u32 	%r921, [%rd10+112];
	or.b32  	%r922, %r921, 128;
	st.local.u32 	[%rd10+112], %r922;
	bra.uni 	BB4_322;

BB4_243:
	setp.gt.s32	%p7, %r776, 123;
	@%p7 bra 	BB4_251;

	setp.gt.s32	%p13, %r776, 121;
	@%p13 bra 	BB4_248;

	setp.eq.s32	%p16, %r776, 120;
	@%p16 bra 	BB4_261;
	bra.uni 	BB4_246;

BB4_261:
	ld.local.u32 	%r793, [%rd10+176];
	or.b32  	%r794, %r793, 128;
	st.local.u32 	[%rd10+176], %r794;
	bra.uni 	BB4_322;

BB4_15:
	setp.gt.s32	%p184, %r776, 5;
	@%p184 bra 	BB4_19;

	setp.eq.s32	%p187, %r776, 4;
	@%p187 bra 	BB4_319;
	bra.uni 	BB4_17;

BB4_319:
	ld.local.u32 	%r1025, [%rd11+4];
	or.b32  	%r1026, %r1025, 128;
	st.local.u32 	[%rd11+4], %r1026;
	bra.uni 	BB4_322;

BB4_142:
	setp.gt.s32	%p89, %r776, 69;
	@%p89 bra 	BB4_146;

	setp.eq.s32	%p92, %r776, 68;
	@%p92 bra 	BB4_287;
	bra.uni 	BB4_144;

BB4_287:
	ld.local.u32 	%r897, [%rd19+4];
	or.b32  	%r898, %r897, 128;
	st.local.u32 	[%rd19+4], %r898;
	bra.uni 	BB4_322;

BB4_78:
	setp.gt.s32	%p137, %r776, 37;
	@%p137 bra 	BB4_82;

	setp.eq.s32	%p140, %r776, 36;
	@%p140 bra 	BB4_303;
	bra.uni 	BB4_80;

BB4_303:
	ld.local.u32 	%r961, [%rd15+4];
	or.b32  	%r962, %r961, 128;
	st.local.u32 	[%rd15+4], %r962;
	bra.uni 	BB4_322;

BB4_205:
	setp.gt.s32	%p42, %r776, 101;
	@%p42 bra 	BB4_209;

	setp.eq.s32	%p45, %r776, 100;
	@%p45 bra 	BB4_271;
	bra.uni 	BB4_207;

BB4_271:
	ld.local.u32 	%r833, [%rd23+4];
	or.b32  	%r834, %r833, 128;
	st.local.u32 	[%rd23+4], %r834;
	bra.uni 	BB4_322;

BB4_46:
	setp.gt.s32	%p161, %r776, 21;
	@%p161 bra 	BB4_50;

	setp.eq.s32	%p164, %r776, 20;
	@%p164 bra 	BB4_311;
	bra.uni 	BB4_48;

BB4_311:
	ld.local.u32 	%r993, [%rd13+4];
	or.b32  	%r994, %r993, 128;
	st.local.u32 	[%rd13+4], %r994;
	bra.uni 	BB4_322;

BB4_173:
	setp.gt.s32	%p66, %r776, 85;
	@%p66 bra 	BB4_177;

	setp.eq.s32	%p69, %r776, 84;
	@%p69 bra 	BB4_279;
	bra.uni 	BB4_175;

BB4_279:
	ld.local.u32 	%r865, [%rd21+4];
	or.b32  	%r866, %r865, 128;
	st.local.u32 	[%rd21+4], %r866;
	bra.uni 	BB4_322;

BB4_109:
	setp.gt.s32	%p114, %r776, 53;
	@%p114 bra 	BB4_113;

	setp.eq.s32	%p117, %r776, 52;
	@%p117 bra 	BB4_295;
	bra.uni 	BB4_111;

BB4_295:
	ld.local.u32 	%r929, [%rd17+4];
	or.b32  	%r930, %r929, 128;
	st.local.u32 	[%rd17+4], %r930;
	bra.uni 	BB4_322;

BB4_236:
	setp.gt.s32	%p19, %r776, 117;
	@%p19 bra 	BB4_240;

	setp.eq.s32	%p22, %r776, 116;
	@%p22 bra 	BB4_263;
	bra.uni 	BB4_238;

BB4_263:
	ld.local.u32 	%r801, [%rd25+4];
	or.b32  	%r802, %r801, 128;
	st.local.u32 	[%rd25+4], %r802;
	bra.uni 	BB4_322;

BB4_30:
	setp.gt.s32	%p173, %r776, 13;
	@%p173 bra 	BB4_34;

	setp.eq.s32	%p176, %r776, 12;
	@%p176 bra 	BB4_315;
	bra.uni 	BB4_32;

BB4_315:
	ld.local.u32 	%r1009, [%rd12+4];
	or.b32  	%r1010, %r1009, 128;
	st.local.u32 	[%rd12+4], %r1010;
	bra.uni 	BB4_322;

BB4_157:
	setp.gt.s32	%p78, %r776, 77;
	@%p78 bra 	BB4_161;

	setp.eq.s32	%p81, %r776, 76;
	@%p81 bra 	BB4_283;
	bra.uni 	BB4_159;

BB4_283:
	ld.local.u32 	%r881, [%rd20+4];
	or.b32  	%r882, %r881, 128;
	st.local.u32 	[%rd20+4], %r882;
	bra.uni 	BB4_322;

BB4_93:
	setp.gt.s32	%p126, %r776, 45;
	@%p126 bra 	BB4_97;

	setp.eq.s32	%p129, %r776, 44;
	@%p129 bra 	BB4_299;
	bra.uni 	BB4_95;

BB4_299:
	ld.local.u32 	%r945, [%rd16+4];
	or.b32  	%r946, %r945, 128;
	st.local.u32 	[%rd16+4], %r946;
	bra.uni 	BB4_322;

BB4_220:
	setp.gt.s32	%p31, %r776, 109;
	@%p31 bra 	BB4_224;

	setp.eq.s32	%p34, %r776, 108;
	@%p34 bra 	BB4_267;
	bra.uni 	BB4_222;

BB4_267:
	ld.local.u32 	%r817, [%rd24+4];
	or.b32  	%r818, %r817, 128;
	st.local.u32 	[%rd24+4], %r818;
	bra.uni 	BB4_322;

BB4_61:
	setp.gt.s32	%p150, %r776, 29;
	@%p150 bra 	BB4_65;

	setp.eq.s32	%p153, %r776, 28;
	@%p153 bra 	BB4_307;
	bra.uni 	BB4_63;

BB4_307:
	ld.local.u32 	%r977, [%rd14+4];
	or.b32  	%r978, %r977, 128;
	st.local.u32 	[%rd14+4], %r978;
	bra.uni 	BB4_322;

BB4_188:
	setp.gt.s32	%p55, %r776, 93;
	@%p55 bra 	BB4_192;

	setp.eq.s32	%p58, %r776, 92;
	@%p58 bra 	BB4_275;
	bra.uni 	BB4_190;

BB4_275:
	ld.local.u32 	%r849, [%rd22+4];
	or.b32  	%r850, %r849, 128;
	st.local.u32 	[%rd22+4], %r850;
	bra.uni 	BB4_322;

BB4_124:
	setp.gt.s32	%p103, %r776, 61;
	@%p103 bra 	BB4_128;

	setp.eq.s32	%p106, %r776, 60;
	@%p106 bra 	BB4_291;
	bra.uni 	BB4_126;

BB4_291:
	ld.local.u32 	%r913, [%rd18+4];
	or.b32  	%r914, %r913, 128;
	st.local.u32 	[%rd18+4], %r914;
	bra.uni 	BB4_322;

BB4_251:
	setp.gt.s32	%p8, %r776, 125;
	@%p8 bra 	BB4_255;

	setp.eq.s32	%p11, %r776, 124;
	@%p11 bra 	BB4_259;
	bra.uni 	BB4_253;

BB4_259:
	ld.local.u32 	%r785, [%rd26+4];
	or.b32  	%r786, %r785, 128;
	st.local.u32 	[%rd26+4], %r786;
	bra.uni 	BB4_322;

BB4_12:
	setp.eq.s32	%p190, %r776, 2;
	@%p190 bra 	BB4_320;
	bra.uni 	BB4_13;

BB4_320:
	ld.local.u32 	%r1029, [%rd10+56];
	or.b32  	%r1030, %r1029, 8388608;
	st.local.u32 	[%rd10+56], %r1030;
	bra.uni 	BB4_322;

BB4_139:
	setp.eq.s32	%p95, %r776, 66;
	@%p95 bra 	BB4_288;
	bra.uni 	BB4_140;

BB4_288:
	ld.local.u32 	%r901, [%rd10+120];
	or.b32  	%r902, %r901, 8388608;
	st.local.u32 	[%rd10+120], %r902;
	bra.uni 	BB4_322;

BB4_75:
	setp.eq.s32	%p143, %r776, 34;
	@%p143 bra 	BB4_304;
	bra.uni 	BB4_76;

BB4_304:
	ld.local.u32 	%r965, [%rd10+88];
	or.b32  	%r966, %r965, 8388608;
	st.local.u32 	[%rd10+88], %r966;
	bra.uni 	BB4_322;

BB4_202:
	setp.eq.s32	%p48, %r776, 98;
	@%p48 bra 	BB4_272;
	bra.uni 	BB4_203;

BB4_272:
	ld.local.u32 	%r837, [%rd10+152];
	or.b32  	%r838, %r837, 8388608;
	st.local.u32 	[%rd10+152], %r838;
	bra.uni 	BB4_322;

BB4_43:
	setp.eq.s32	%p167, %r776, 18;
	@%p167 bra 	BB4_312;
	bra.uni 	BB4_44;

BB4_312:
	ld.local.u32 	%r997, [%rd10+72];
	or.b32  	%r998, %r997, 8388608;
	st.local.u32 	[%rd10+72], %r998;
	bra.uni 	BB4_322;

BB4_170:
	setp.eq.s32	%p72, %r776, 82;
	@%p72 bra 	BB4_280;
	bra.uni 	BB4_171;

BB4_280:
	ld.local.u32 	%r869, [%rd10+136];
	or.b32  	%r870, %r869, 8388608;
	st.local.u32 	[%rd10+136], %r870;
	bra.uni 	BB4_322;

BB4_106:
	setp.eq.s32	%p120, %r776, 50;
	@%p120 bra 	BB4_296;
	bra.uni 	BB4_107;

BB4_296:
	ld.local.u32 	%r933, [%rd10+104];
	or.b32  	%r934, %r933, 8388608;
	st.local.u32 	[%rd10+104], %r934;
	bra.uni 	BB4_322;

BB4_233:
	setp.eq.s32	%p25, %r776, 114;
	@%p25 bra 	BB4_264;
	bra.uni 	BB4_234;

BB4_264:
	ld.local.u32 	%r805, [%rd10+168];
	or.b32  	%r806, %r805, 8388608;
	st.local.u32 	[%rd10+168], %r806;
	bra.uni 	BB4_322;

BB4_27:
	setp.eq.s32	%p179, %r776, 10;
	@%p179 bra 	BB4_316;
	bra.uni 	BB4_28;

BB4_316:
	ld.local.u32 	%r1013, [%rd10+64];
	or.b32  	%r1014, %r1013, 8388608;
	st.local.u32 	[%rd10+64], %r1014;
	bra.uni 	BB4_322;

BB4_154:
	setp.eq.s32	%p84, %r776, 74;
	@%p84 bra 	BB4_284;
	bra.uni 	BB4_155;

BB4_284:
	ld.local.u32 	%r885, [%rd10+128];
	or.b32  	%r886, %r885, 8388608;
	st.local.u32 	[%rd10+128], %r886;
	bra.uni 	BB4_322;

BB4_90:
	setp.eq.s32	%p132, %r776, 42;
	@%p132 bra 	BB4_300;
	bra.uni 	BB4_91;

BB4_300:
	ld.local.u32 	%r949, [%rd10+96];
	or.b32  	%r950, %r949, 8388608;
	st.local.u32 	[%rd10+96], %r950;
	bra.uni 	BB4_322;

BB4_217:
	setp.eq.s32	%p37, %r776, 106;
	@%p37 bra 	BB4_268;
	bra.uni 	BB4_218;

BB4_268:
	ld.local.u32 	%r821, [%rd10+160];
	or.b32  	%r822, %r821, 8388608;
	st.local.u32 	[%rd10+160], %r822;
	bra.uni 	BB4_322;

BB4_58:
	setp.eq.s32	%p156, %r776, 26;
	@%p156 bra 	BB4_308;
	bra.uni 	BB4_59;

BB4_308:
	ld.local.u32 	%r981, [%rd10+80];
	or.b32  	%r982, %r981, 8388608;
	st.local.u32 	[%rd10+80], %r982;
	bra.uni 	BB4_322;

BB4_185:
	setp.eq.s32	%p61, %r776, 90;
	@%p61 bra 	BB4_276;
	bra.uni 	BB4_186;

BB4_276:
	ld.local.u32 	%r853, [%rd10+144];
	or.b32  	%r854, %r853, 8388608;
	st.local.u32 	[%rd10+144], %r854;
	bra.uni 	BB4_322;

BB4_121:
	setp.eq.s32	%p109, %r776, 58;
	@%p109 bra 	BB4_292;
	bra.uni 	BB4_122;

BB4_292:
	ld.local.u32 	%r917, [%rd10+112];
	or.b32  	%r918, %r917, 8388608;
	st.local.u32 	[%rd10+112], %r918;
	bra.uni 	BB4_322;

BB4_248:
	setp.eq.s32	%p14, %r776, 122;
	@%p14 bra 	BB4_260;
	bra.uni 	BB4_249;

BB4_260:
	ld.local.u32 	%r789, [%rd10+176];
	or.b32  	%r790, %r789, 8388608;
	st.local.u32 	[%rd10+176], %r790;
	bra.uni 	BB4_322;

BB4_19:
	setp.eq.s32	%p185, %r776, 6;
	@%p185 bra 	BB4_318;
	bra.uni 	BB4_20;

BB4_318:
	ld.local.u32 	%r1021, [%rd11+4];
	or.b32  	%r1022, %r1021, 8388608;
	st.local.u32 	[%rd11+4], %r1022;
	bra.uni 	BB4_322;

BB4_146:
	setp.eq.s32	%p90, %r776, 70;
	@%p90 bra 	BB4_286;
	bra.uni 	BB4_147;

BB4_286:
	ld.local.u32 	%r893, [%rd19+4];
	or.b32  	%r894, %r893, 8388608;
	st.local.u32 	[%rd19+4], %r894;
	bra.uni 	BB4_322;

BB4_82:
	setp.eq.s32	%p138, %r776, 38;
	@%p138 bra 	BB4_302;
	bra.uni 	BB4_83;

BB4_302:
	ld.local.u32 	%r957, [%rd15+4];
	or.b32  	%r958, %r957, 8388608;
	st.local.u32 	[%rd15+4], %r958;
	bra.uni 	BB4_322;

BB4_209:
	setp.eq.s32	%p43, %r776, 102;
	@%p43 bra 	BB4_270;
	bra.uni 	BB4_210;

BB4_270:
	ld.local.u32 	%r829, [%rd23+4];
	or.b32  	%r830, %r829, 8388608;
	st.local.u32 	[%rd23+4], %r830;
	bra.uni 	BB4_322;

BB4_50:
	setp.eq.s32	%p162, %r776, 22;
	@%p162 bra 	BB4_310;
	bra.uni 	BB4_51;

BB4_310:
	ld.local.u32 	%r989, [%rd13+4];
	or.b32  	%r990, %r989, 8388608;
	st.local.u32 	[%rd13+4], %r990;
	bra.uni 	BB4_322;

BB4_177:
	setp.eq.s32	%p67, %r776, 86;
	@%p67 bra 	BB4_278;
	bra.uni 	BB4_178;

BB4_278:
	ld.local.u32 	%r861, [%rd21+4];
	or.b32  	%r862, %r861, 8388608;
	st.local.u32 	[%rd21+4], %r862;
	bra.uni 	BB4_322;

BB4_113:
	setp.eq.s32	%p115, %r776, 54;
	@%p115 bra 	BB4_294;
	bra.uni 	BB4_114;

BB4_294:
	ld.local.u32 	%r925, [%rd17+4];
	or.b32  	%r926, %r925, 8388608;
	st.local.u32 	[%rd17+4], %r926;
	bra.uni 	BB4_322;

BB4_240:
	setp.eq.s32	%p20, %r776, 118;
	@%p20 bra 	BB4_262;
	bra.uni 	BB4_241;

BB4_262:
	ld.local.u32 	%r797, [%rd25+4];
	or.b32  	%r798, %r797, 8388608;
	st.local.u32 	[%rd25+4], %r798;
	bra.uni 	BB4_322;

BB4_34:
	setp.eq.s32	%p174, %r776, 14;
	@%p174 bra 	BB4_314;
	bra.uni 	BB4_35;

BB4_314:
	ld.local.u32 	%r1005, [%rd12+4];
	or.b32  	%r1006, %r1005, 8388608;
	st.local.u32 	[%rd12+4], %r1006;
	bra.uni 	BB4_322;

BB4_161:
	setp.eq.s32	%p79, %r776, 78;
	@%p79 bra 	BB4_282;
	bra.uni 	BB4_162;

BB4_282:
	ld.local.u32 	%r877, [%rd20+4];
	or.b32  	%r878, %r877, 8388608;
	st.local.u32 	[%rd20+4], %r878;
	bra.uni 	BB4_322;

BB4_97:
	setp.eq.s32	%p127, %r776, 46;
	@%p127 bra 	BB4_298;
	bra.uni 	BB4_98;

BB4_298:
	ld.local.u32 	%r941, [%rd16+4];
	or.b32  	%r942, %r941, 8388608;
	st.local.u32 	[%rd16+4], %r942;
	bra.uni 	BB4_322;

BB4_224:
	setp.eq.s32	%p32, %r776, 110;
	@%p32 bra 	BB4_266;
	bra.uni 	BB4_225;

BB4_266:
	ld.local.u32 	%r813, [%rd24+4];
	or.b32  	%r814, %r813, 8388608;
	st.local.u32 	[%rd24+4], %r814;
	bra.uni 	BB4_322;

BB4_65:
	setp.eq.s32	%p151, %r776, 30;
	@%p151 bra 	BB4_306;
	bra.uni 	BB4_66;

BB4_306:
	ld.local.u32 	%r973, [%rd14+4];
	or.b32  	%r974, %r973, 8388608;
	st.local.u32 	[%rd14+4], %r974;
	bra.uni 	BB4_322;

BB4_192:
	setp.eq.s32	%p56, %r776, 94;
	@%p56 bra 	BB4_274;
	bra.uni 	BB4_193;

BB4_274:
	ld.local.u32 	%r845, [%rd22+4];
	or.b32  	%r846, %r845, 8388608;
	st.local.u32 	[%rd22+4], %r846;
	bra.uni 	BB4_322;

BB4_128:
	setp.eq.s32	%p104, %r776, 62;
	@%p104 bra 	BB4_290;
	bra.uni 	BB4_129;

BB4_290:
	ld.local.u32 	%r909, [%rd18+4];
	or.b32  	%r910, %r909, 8388608;
	st.local.u32 	[%rd18+4], %r910;
	bra.uni 	BB4_322;

BB4_255:
	setp.eq.s32	%p9, %r776, 126;
	@%p9 bra 	BB4_258;
	bra.uni 	BB4_256;

BB4_258:
	ld.local.u32 	%r781, [%rd26+4];
	or.b32  	%r782, %r781, 8388608;
	st.local.u32 	[%rd26+4], %r782;
	bra.uni 	BB4_322;

BB4_10:
	setp.eq.s32	%p193, %r776, 1;
	@%p193 bra 	BB4_11;
	bra.uni 	BB4_322;

BB4_11:
	ld.local.u32 	%r1031, [%rd10+56];
	or.b32  	%r1032, %r1031, 32768;
	st.local.u32 	[%rd10+56], %r1032;
	bra.uni 	BB4_322;

BB4_137:
	setp.eq.s32	%p98, %r776, 65;
	@%p98 bra 	BB4_138;
	bra.uni 	BB4_322;

BB4_138:
	ld.local.u32 	%r903, [%rd10+120];
	or.b32  	%r904, %r903, 32768;
	st.local.u32 	[%rd10+120], %r904;
	bra.uni 	BB4_322;

BB4_73:
	setp.eq.s32	%p146, %r776, 33;
	@%p146 bra 	BB4_74;
	bra.uni 	BB4_322;

BB4_74:
	ld.local.u32 	%r967, [%rd10+88];
	or.b32  	%r968, %r967, 32768;
	st.local.u32 	[%rd10+88], %r968;
	bra.uni 	BB4_322;

BB4_200:
	setp.eq.s32	%p51, %r776, 97;
	@%p51 bra 	BB4_201;
	bra.uni 	BB4_322;

BB4_201:
	ld.local.u32 	%r839, [%rd10+152];
	or.b32  	%r840, %r839, 32768;
	st.local.u32 	[%rd10+152], %r840;
	bra.uni 	BB4_322;

BB4_41:
	setp.eq.s32	%p170, %r776, 17;
	@%p170 bra 	BB4_42;
	bra.uni 	BB4_322;

BB4_42:
	ld.local.u32 	%r999, [%rd10+72];
	or.b32  	%r1000, %r999, 32768;
	st.local.u32 	[%rd10+72], %r1000;
	bra.uni 	BB4_322;

BB4_168:
	setp.eq.s32	%p75, %r776, 81;
	@%p75 bra 	BB4_169;
	bra.uni 	BB4_322;

BB4_169:
	ld.local.u32 	%r871, [%rd10+136];
	or.b32  	%r872, %r871, 32768;
	st.local.u32 	[%rd10+136], %r872;
	bra.uni 	BB4_322;

BB4_104:
	setp.eq.s32	%p123, %r776, 49;
	@%p123 bra 	BB4_105;
	bra.uni 	BB4_322;

BB4_105:
	ld.local.u32 	%r935, [%rd10+104];
	or.b32  	%r936, %r935, 32768;
	st.local.u32 	[%rd10+104], %r936;
	bra.uni 	BB4_322;

BB4_231:
	setp.eq.s32	%p28, %r776, 113;
	@%p28 bra 	BB4_232;
	bra.uni 	BB4_322;

BB4_232:
	ld.local.u32 	%r807, [%rd10+168];
	or.b32  	%r808, %r807, 32768;
	st.local.u32 	[%rd10+168], %r808;
	bra.uni 	BB4_322;

BB4_25:
	setp.eq.s32	%p182, %r776, 9;
	@%p182 bra 	BB4_26;
	bra.uni 	BB4_322;

BB4_26:
	ld.local.u32 	%r1015, [%rd10+64];
	or.b32  	%r1016, %r1015, 32768;
	st.local.u32 	[%rd10+64], %r1016;
	bra.uni 	BB4_322;

BB4_152:
	setp.eq.s32	%p87, %r776, 73;
	@%p87 bra 	BB4_153;
	bra.uni 	BB4_322;

BB4_153:
	ld.local.u32 	%r887, [%rd10+128];
	or.b32  	%r888, %r887, 32768;
	st.local.u32 	[%rd10+128], %r888;
	bra.uni 	BB4_322;

BB4_88:
	setp.eq.s32	%p135, %r776, 41;
	@%p135 bra 	BB4_89;
	bra.uni 	BB4_322;

BB4_89:
	ld.local.u32 	%r951, [%rd10+96];
	or.b32  	%r952, %r951, 32768;
	st.local.u32 	[%rd10+96], %r952;
	bra.uni 	BB4_322;

BB4_215:
	setp.eq.s32	%p40, %r776, 105;
	@%p40 bra 	BB4_216;
	bra.uni 	BB4_322;

BB4_216:
	ld.local.u32 	%r823, [%rd10+160];
	or.b32  	%r824, %r823, 32768;
	st.local.u32 	[%rd10+160], %r824;
	bra.uni 	BB4_322;

BB4_56:
	setp.eq.s32	%p159, %r776, 25;
	@%p159 bra 	BB4_57;
	bra.uni 	BB4_322;

BB4_57:
	ld.local.u32 	%r983, [%rd10+80];
	or.b32  	%r984, %r983, 32768;
	st.local.u32 	[%rd10+80], %r984;
	bra.uni 	BB4_322;

BB4_183:
	setp.eq.s32	%p64, %r776, 89;
	@%p64 bra 	BB4_184;
	bra.uni 	BB4_322;

BB4_184:
	ld.local.u32 	%r855, [%rd10+144];
	or.b32  	%r856, %r855, 32768;
	st.local.u32 	[%rd10+144], %r856;
	bra.uni 	BB4_322;

BB4_119:
	setp.eq.s32	%p112, %r776, 57;
	@%p112 bra 	BB4_120;
	bra.uni 	BB4_322;

BB4_120:
	ld.local.u32 	%r919, [%rd10+112];
	or.b32  	%r920, %r919, 32768;
	st.local.u32 	[%rd10+112], %r920;
	bra.uni 	BB4_322;

BB4_246:
	setp.eq.s32	%p17, %r776, 121;
	@%p17 bra 	BB4_247;
	bra.uni 	BB4_322;

BB4_247:
	ld.local.u32 	%r791, [%rd10+176];
	or.b32  	%r792, %r791, 32768;
	st.local.u32 	[%rd10+176], %r792;
	bra.uni 	BB4_322;

BB4_17:
	setp.eq.s32	%p188, %r776, 5;
	@%p188 bra 	BB4_18;
	bra.uni 	BB4_322;

BB4_18:
	ld.local.u32 	%r1023, [%rd11+4];
	or.b32  	%r1024, %r1023, 32768;
	st.local.u32 	[%rd11+4], %r1024;
	bra.uni 	BB4_322;

BB4_144:
	setp.eq.s32	%p93, %r776, 69;
	@%p93 bra 	BB4_145;
	bra.uni 	BB4_322;

BB4_145:
	ld.local.u32 	%r895, [%rd19+4];
	or.b32  	%r896, %r895, 32768;
	st.local.u32 	[%rd19+4], %r896;
	bra.uni 	BB4_322;

BB4_80:
	setp.eq.s32	%p141, %r776, 37;
	@%p141 bra 	BB4_81;
	bra.uni 	BB4_322;

BB4_81:
	ld.local.u32 	%r959, [%rd15+4];
	or.b32  	%r960, %r959, 32768;
	st.local.u32 	[%rd15+4], %r960;
	bra.uni 	BB4_322;

BB4_207:
	setp.eq.s32	%p46, %r776, 101;
	@%p46 bra 	BB4_208;
	bra.uni 	BB4_322;

BB4_208:
	ld.local.u32 	%r831, [%rd23+4];
	or.b32  	%r832, %r831, 32768;
	st.local.u32 	[%rd23+4], %r832;
	bra.uni 	BB4_322;

BB4_48:
	setp.eq.s32	%p165, %r776, 21;
	@%p165 bra 	BB4_49;
	bra.uni 	BB4_322;

BB4_49:
	ld.local.u32 	%r991, [%rd13+4];
	or.b32  	%r992, %r991, 32768;
	st.local.u32 	[%rd13+4], %r992;
	bra.uni 	BB4_322;

BB4_175:
	setp.eq.s32	%p70, %r776, 85;
	@%p70 bra 	BB4_176;
	bra.uni 	BB4_322;

BB4_176:
	ld.local.u32 	%r863, [%rd21+4];
	or.b32  	%r864, %r863, 32768;
	st.local.u32 	[%rd21+4], %r864;
	bra.uni 	BB4_322;

BB4_111:
	setp.eq.s32	%p118, %r776, 53;
	@%p118 bra 	BB4_112;
	bra.uni 	BB4_322;

BB4_112:
	ld.local.u32 	%r927, [%rd17+4];
	or.b32  	%r928, %r927, 32768;
	st.local.u32 	[%rd17+4], %r928;
	bra.uni 	BB4_322;

BB4_238:
	setp.eq.s32	%p23, %r776, 117;
	@%p23 bra 	BB4_239;
	bra.uni 	BB4_322;

BB4_239:
	ld.local.u32 	%r799, [%rd25+4];
	or.b32  	%r800, %r799, 32768;
	st.local.u32 	[%rd25+4], %r800;
	bra.uni 	BB4_322;

BB4_32:
	setp.eq.s32	%p177, %r776, 13;
	@%p177 bra 	BB4_33;
	bra.uni 	BB4_322;

BB4_33:
	ld.local.u32 	%r1007, [%rd12+4];
	or.b32  	%r1008, %r1007, 32768;
	st.local.u32 	[%rd12+4], %r1008;
	bra.uni 	BB4_322;

BB4_159:
	setp.eq.s32	%p82, %r776, 77;
	@%p82 bra 	BB4_160;
	bra.uni 	BB4_322;

BB4_160:
	ld.local.u32 	%r879, [%rd20+4];
	or.b32  	%r880, %r879, 32768;
	st.local.u32 	[%rd20+4], %r880;
	bra.uni 	BB4_322;

BB4_95:
	setp.eq.s32	%p130, %r776, 45;
	@%p130 bra 	BB4_96;
	bra.uni 	BB4_322;

BB4_96:
	ld.local.u32 	%r943, [%rd16+4];
	or.b32  	%r944, %r943, 32768;
	st.local.u32 	[%rd16+4], %r944;
	bra.uni 	BB4_322;

BB4_222:
	setp.eq.s32	%p35, %r776, 109;
	@%p35 bra 	BB4_223;
	bra.uni 	BB4_322;

BB4_223:
	ld.local.u32 	%r815, [%rd24+4];
	or.b32  	%r816, %r815, 32768;
	st.local.u32 	[%rd24+4], %r816;
	bra.uni 	BB4_322;

BB4_63:
	setp.eq.s32	%p154, %r776, 29;
	@%p154 bra 	BB4_64;
	bra.uni 	BB4_322;

BB4_64:
	ld.local.u32 	%r975, [%rd14+4];
	or.b32  	%r976, %r975, 32768;
	st.local.u32 	[%rd14+4], %r976;
	bra.uni 	BB4_322;

BB4_190:
	setp.eq.s32	%p59, %r776, 93;
	@%p59 bra 	BB4_191;
	bra.uni 	BB4_322;

BB4_191:
	ld.local.u32 	%r847, [%rd22+4];
	or.b32  	%r848, %r847, 32768;
	st.local.u32 	[%rd22+4], %r848;
	bra.uni 	BB4_322;

BB4_126:
	setp.eq.s32	%p107, %r776, 61;
	@%p107 bra 	BB4_127;
	bra.uni 	BB4_322;

BB4_127:
	ld.local.u32 	%r911, [%rd18+4];
	or.b32  	%r912, %r911, 32768;
	st.local.u32 	[%rd18+4], %r912;
	bra.uni 	BB4_322;

BB4_253:
	setp.eq.s32	%p12, %r776, 125;
	@%p12 bra 	BB4_254;
	bra.uni 	BB4_322;

BB4_254:
	ld.local.u32 	%r783, [%rd26+4];
	or.b32  	%r784, %r783, 32768;
	st.local.u32 	[%rd26+4], %r784;
	bra.uni 	BB4_322;

BB4_13:
	setp.eq.s32	%p191, %r776, 3;
	@%p191 bra 	BB4_14;
	bra.uni 	BB4_322;

BB4_14:
	ld.local.u32 	%r1027, [%rd10+56];
	or.b32  	%r1028, %r1027, -2147483648;
	st.local.u32 	[%rd10+56], %r1028;
	bra.uni 	BB4_322;

BB4_140:
	setp.eq.s32	%p96, %r776, 67;
	@%p96 bra 	BB4_141;
	bra.uni 	BB4_322;

BB4_141:
	ld.local.u32 	%r899, [%rd10+120];
	or.b32  	%r900, %r899, -2147483648;
	st.local.u32 	[%rd10+120], %r900;
	bra.uni 	BB4_322;

BB4_76:
	setp.eq.s32	%p144, %r776, 35;
	@%p144 bra 	BB4_77;
	bra.uni 	BB4_322;

BB4_77:
	ld.local.u32 	%r963, [%rd10+88];
	or.b32  	%r964, %r963, -2147483648;
	st.local.u32 	[%rd10+88], %r964;
	bra.uni 	BB4_322;

BB4_203:
	setp.eq.s32	%p49, %r776, 99;
	@%p49 bra 	BB4_204;
	bra.uni 	BB4_322;

BB4_204:
	ld.local.u32 	%r835, [%rd10+152];
	or.b32  	%r836, %r835, -2147483648;
	st.local.u32 	[%rd10+152], %r836;
	bra.uni 	BB4_322;

BB4_44:
	setp.eq.s32	%p168, %r776, 19;
	@%p168 bra 	BB4_45;
	bra.uni 	BB4_322;

BB4_45:
	ld.local.u32 	%r995, [%rd10+72];
	or.b32  	%r996, %r995, -2147483648;
	st.local.u32 	[%rd10+72], %r996;
	bra.uni 	BB4_322;

BB4_171:
	setp.eq.s32	%p73, %r776, 83;
	@%p73 bra 	BB4_172;
	bra.uni 	BB4_322;

BB4_172:
	ld.local.u32 	%r867, [%rd10+136];
	or.b32  	%r868, %r867, -2147483648;
	st.local.u32 	[%rd10+136], %r868;
	bra.uni 	BB4_322;

BB4_107:
	setp.eq.s32	%p121, %r776, 51;
	@%p121 bra 	BB4_108;
	bra.uni 	BB4_322;

BB4_108:
	ld.local.u32 	%r931, [%rd10+104];
	or.b32  	%r932, %r931, -2147483648;
	st.local.u32 	[%rd10+104], %r932;
	bra.uni 	BB4_322;

BB4_234:
	setp.eq.s32	%p26, %r776, 115;
	@%p26 bra 	BB4_235;
	bra.uni 	BB4_322;

BB4_235:
	ld.local.u32 	%r803, [%rd10+168];
	or.b32  	%r804, %r803, -2147483648;
	st.local.u32 	[%rd10+168], %r804;
	bra.uni 	BB4_322;

BB4_28:
	setp.eq.s32	%p180, %r776, 11;
	@%p180 bra 	BB4_29;
	bra.uni 	BB4_322;

BB4_29:
	ld.local.u32 	%r1011, [%rd10+64];
	or.b32  	%r1012, %r1011, -2147483648;
	st.local.u32 	[%rd10+64], %r1012;
	bra.uni 	BB4_322;

BB4_155:
	setp.eq.s32	%p85, %r776, 75;
	@%p85 bra 	BB4_156;
	bra.uni 	BB4_322;

BB4_156:
	ld.local.u32 	%r883, [%rd10+128];
	or.b32  	%r884, %r883, -2147483648;
	st.local.u32 	[%rd10+128], %r884;
	bra.uni 	BB4_322;

BB4_91:
	setp.eq.s32	%p133, %r776, 43;
	@%p133 bra 	BB4_92;
	bra.uni 	BB4_322;

BB4_92:
	ld.local.u32 	%r947, [%rd10+96];
	or.b32  	%r948, %r947, -2147483648;
	st.local.u32 	[%rd10+96], %r948;
	bra.uni 	BB4_322;

BB4_218:
	setp.eq.s32	%p38, %r776, 107;
	@%p38 bra 	BB4_219;
	bra.uni 	BB4_322;

BB4_219:
	ld.local.u32 	%r819, [%rd10+160];
	or.b32  	%r820, %r819, -2147483648;
	st.local.u32 	[%rd10+160], %r820;
	bra.uni 	BB4_322;

BB4_59:
	setp.eq.s32	%p157, %r776, 27;
	@%p157 bra 	BB4_60;
	bra.uni 	BB4_322;

BB4_60:
	ld.local.u32 	%r979, [%rd10+80];
	or.b32  	%r980, %r979, -2147483648;
	st.local.u32 	[%rd10+80], %r980;
	bra.uni 	BB4_322;

BB4_186:
	setp.eq.s32	%p62, %r776, 91;
	@%p62 bra 	BB4_187;
	bra.uni 	BB4_322;

BB4_187:
	ld.local.u32 	%r851, [%rd10+144];
	or.b32  	%r852, %r851, -2147483648;
	st.local.u32 	[%rd10+144], %r852;
	bra.uni 	BB4_322;

BB4_122:
	setp.eq.s32	%p110, %r776, 59;
	@%p110 bra 	BB4_123;
	bra.uni 	BB4_322;

BB4_123:
	ld.local.u32 	%r915, [%rd10+112];
	or.b32  	%r916, %r915, -2147483648;
	st.local.u32 	[%rd10+112], %r916;
	bra.uni 	BB4_322;

BB4_249:
	setp.eq.s32	%p15, %r776, 123;
	@%p15 bra 	BB4_250;
	bra.uni 	BB4_322;

BB4_250:
	ld.local.u32 	%r787, [%rd10+176];
	or.b32  	%r788, %r787, -2147483648;
	st.local.u32 	[%rd10+176], %r788;
	bra.uni 	BB4_322;

BB4_20:
	setp.eq.s32	%p186, %r776, 7;
	@%p186 bra 	BB4_21;
	bra.uni 	BB4_322;

BB4_21:
	ld.local.u32 	%r1019, [%rd11+4];
	or.b32  	%r1020, %r1019, -2147483648;
	st.local.u32 	[%rd11+4], %r1020;
	bra.uni 	BB4_322;

BB4_147:
	setp.eq.s32	%p91, %r776, 71;
	@%p91 bra 	BB4_148;
	bra.uni 	BB4_322;

BB4_148:
	ld.local.u32 	%r891, [%rd19+4];
	or.b32  	%r892, %r891, -2147483648;
	st.local.u32 	[%rd19+4], %r892;
	bra.uni 	BB4_322;

BB4_83:
	setp.eq.s32	%p139, %r776, 39;
	@%p139 bra 	BB4_84;
	bra.uni 	BB4_322;

BB4_84:
	ld.local.u32 	%r955, [%rd15+4];
	or.b32  	%r956, %r955, -2147483648;
	st.local.u32 	[%rd15+4], %r956;
	bra.uni 	BB4_322;

BB4_210:
	setp.eq.s32	%p44, %r776, 103;
	@%p44 bra 	BB4_211;
	bra.uni 	BB4_322;

BB4_211:
	ld.local.u32 	%r827, [%rd23+4];
	or.b32  	%r828, %r827, -2147483648;
	st.local.u32 	[%rd23+4], %r828;
	bra.uni 	BB4_322;

BB4_51:
	setp.eq.s32	%p163, %r776, 23;
	@%p163 bra 	BB4_52;
	bra.uni 	BB4_322;

BB4_52:
	ld.local.u32 	%r987, [%rd13+4];
	or.b32  	%r988, %r987, -2147483648;
	st.local.u32 	[%rd13+4], %r988;
	bra.uni 	BB4_322;

BB4_178:
	setp.eq.s32	%p68, %r776, 87;
	@%p68 bra 	BB4_179;
	bra.uni 	BB4_322;

BB4_179:
	ld.local.u32 	%r859, [%rd21+4];
	or.b32  	%r860, %r859, -2147483648;
	st.local.u32 	[%rd21+4], %r860;
	bra.uni 	BB4_322;

BB4_114:
	setp.eq.s32	%p116, %r776, 55;
	@%p116 bra 	BB4_115;
	bra.uni 	BB4_322;

BB4_115:
	ld.local.u32 	%r923, [%rd17+4];
	or.b32  	%r924, %r923, -2147483648;
	st.local.u32 	[%rd17+4], %r924;
	bra.uni 	BB4_322;

BB4_241:
	setp.eq.s32	%p21, %r776, 119;
	@%p21 bra 	BB4_242;
	bra.uni 	BB4_322;

BB4_242:
	ld.local.u32 	%r795, [%rd25+4];
	or.b32  	%r796, %r795, -2147483648;
	st.local.u32 	[%rd25+4], %r796;
	bra.uni 	BB4_322;

BB4_35:
	setp.eq.s32	%p175, %r776, 15;
	@%p175 bra 	BB4_36;
	bra.uni 	BB4_322;

BB4_36:
	ld.local.u32 	%r1003, [%rd12+4];
	or.b32  	%r1004, %r1003, -2147483648;
	st.local.u32 	[%rd12+4], %r1004;
	bra.uni 	BB4_322;

BB4_162:
	setp.eq.s32	%p80, %r776, 79;
	@%p80 bra 	BB4_163;
	bra.uni 	BB4_322;

BB4_163:
	ld.local.u32 	%r875, [%rd20+4];
	or.b32  	%r876, %r875, -2147483648;
	st.local.u32 	[%rd20+4], %r876;
	bra.uni 	BB4_322;

BB4_98:
	setp.eq.s32	%p128, %r776, 47;
	@%p128 bra 	BB4_99;
	bra.uni 	BB4_322;

BB4_99:
	ld.local.u32 	%r939, [%rd16+4];
	or.b32  	%r940, %r939, -2147483648;
	st.local.u32 	[%rd16+4], %r940;
	bra.uni 	BB4_322;

BB4_225:
	setp.eq.s32	%p33, %r776, 111;
	@%p33 bra 	BB4_226;
	bra.uni 	BB4_322;

BB4_226:
	ld.local.u32 	%r811, [%rd24+4];
	or.b32  	%r812, %r811, -2147483648;
	st.local.u32 	[%rd24+4], %r812;
	bra.uni 	BB4_322;

BB4_66:
	setp.eq.s32	%p152, %r776, 31;
	@%p152 bra 	BB4_67;
	bra.uni 	BB4_322;

BB4_67:
	ld.local.u32 	%r971, [%rd14+4];
	or.b32  	%r972, %r971, -2147483648;
	st.local.u32 	[%rd14+4], %r972;
	bra.uni 	BB4_322;

BB4_193:
	setp.eq.s32	%p57, %r776, 95;
	@%p57 bra 	BB4_194;
	bra.uni 	BB4_322;

BB4_194:
	ld.local.u32 	%r843, [%rd22+4];
	or.b32  	%r844, %r843, -2147483648;
	st.local.u32 	[%rd22+4], %r844;
	bra.uni 	BB4_322;

BB4_129:
	setp.eq.s32	%p105, %r776, 63;
	@%p105 bra 	BB4_130;
	bra.uni 	BB4_322;

BB4_130:
	ld.local.u32 	%r907, [%rd18+4];
	or.b32  	%r908, %r907, -2147483648;
	st.local.u32 	[%rd18+4], %r908;
	bra.uni 	BB4_322;

BB4_256:
	setp.ne.s32	%p10, %r776, 127;
	@%p10 bra 	BB4_322;

	ld.local.u32 	%r779, [%rd26+4];
	or.b32  	%r780, %r779, -2147483648;
	st.local.u32 	[%rd26+4], %r780;

BB4_322:
	ld.local.u64 	%rd3410, [%rd9];
	ld.local.u64 	%rd3409, [%rd10];
	ld.local.u64 	%rd3408, [%rd10+8];
	ld.local.u64 	%rd3407, [%rd10+16];
	ld.local.u64 	%rd3406, [%rd10+24];
	ld.local.u64 	%rd3405, [%rd10+32];
	ld.local.u64 	%rd3404, [%rd10+40];
	ld.local.u64 	%rd3403, [%rd10+48];
	ld.local.u32 	%r8733, [%rd10+56];
	ld.local.u32 	%r8732, [%rd11+4];
	setp.gt.u32	%p194, %r7, 111;
	@%p194 bra 	BB4_324;
	bra.uni 	BB4_323;

BB4_324:
	mov.b64	%rd3395, {%r8732, %r8733};
	ld.local.u32 	%r1036, [%rd10+64];
	ld.local.u32 	%r1037, [%rd12+4];
	mov.b64	%rd3396, {%r1037, %r1036};
	ld.local.u32 	%r1038, [%rd10+72];
	ld.local.u32 	%r1039, [%rd13+4];
	mov.b64	%rd3397, {%r1039, %r1038};
	ld.local.u32 	%r1040, [%rd10+80];
	ld.local.u32 	%r1041, [%rd14+4];
	mov.b64	%rd3398, {%r1041, %r1040};
	ld.local.u32 	%r1042, [%rd10+88];
	ld.local.u32 	%r1043, [%rd15+4];
	mov.b64	%rd3399, {%r1043, %r1042};
	ld.local.u32 	%r1044, [%rd10+96];
	ld.local.u32 	%r1045, [%rd16+4];
	mov.b64	%rd3400, {%r1045, %r1044};
	ld.local.u32 	%r1046, [%rd10+104];
	ld.local.u32 	%r1047, [%rd17+4];
	mov.b64	%rd3401, {%r1047, %r1046};
	ld.local.u32 	%r1048, [%rd10+112];
	ld.local.u32 	%r1049, [%rd18+4];
	mov.b64	%rd3402, {%r1049, %r1048};
	ld.local.u32 	%r1050, [%rd10+120];
	ld.local.u32 	%r1051, [%rd19+4];
	mov.b64	%rd3386, {%r1051, %r1050};
	ld.local.u32 	%r1052, [%rd10+128];
	ld.local.u32 	%r1053, [%rd20+4];
	mov.b64	%rd3385, {%r1053, %r1052};
	ld.local.u32 	%r1054, [%rd10+136];
	ld.local.u32 	%r1055, [%rd21+4];
	mov.b64	%rd3384, {%r1055, %r1054};
	ld.local.u32 	%r1056, [%rd10+144];
	ld.local.u32 	%r1057, [%rd22+4];
	mov.b64	%rd3383, {%r1057, %r1056};
	ld.local.u32 	%r1058, [%rd10+152];
	ld.local.u32 	%r1059, [%rd23+4];
	mov.b64	%rd3382, {%r1059, %r1058};
	ld.local.u32 	%r1060, [%rd10+160];
	ld.local.u32 	%r1061, [%rd24+4];
	mov.b64	%rd3381, {%r1061, %r1060};
	ld.local.u32 	%r1062, [%rd10+168];
	ld.local.u32 	%r1063, [%rd25+4];
	mov.b64	%rd3380, {%r1063, %r1062};
	ld.local.u32 	%r1064, [%rd10+176];
	ld.local.u32 	%r1065, [%rd26+4];
	mov.b64	%rd3379, {%r1065, %r1064};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1066,%dummy}, %rd3406;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1067}, %rd3406;
	}
	shf.r.wrap.b32 	%r1068, %r1067, %r1066, 18;
	shf.r.wrap.b32 	%r1069, %r1066, %r1067, 18;
	mov.b64 	%rd403, {%r1069, %r1068};
	shf.r.wrap.b32 	%r1070, %r1067, %r1066, 14;
	shf.r.wrap.b32 	%r1071, %r1066, %r1067, 14;
	mov.b64 	%rd404, {%r1071, %r1070};
	xor.b64  	%rd405, %rd403, %rd404;
	shf.l.wrap.b32 	%r1072, %r1066, %r1067, 23;
	shf.l.wrap.b32 	%r1073, %r1067, %r1066, 23;
	mov.b64 	%rd406, {%r1073, %r1072};
	xor.b64  	%rd407, %rd405, %rd406;
	xor.b64  	%rd408, %rd3404, %rd3405;
	and.b64  	%rd409, %rd408, %rd3406;
	xor.b64  	%rd410, %rd409, %rd3404;
	add.s64 	%rd411, %rd410, %rd3403;
	add.s64 	%rd412, %rd411, %rd3395;
	add.s64 	%rd413, %rd412, %rd36;
	add.s64 	%rd414, %rd413, %rd407;
	add.s64 	%rd415, %rd414, %rd3407;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1074}, %rd3410;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1075,%dummy}, %rd3410;
	}
	shf.l.wrap.b32 	%r1076, %r1075, %r1074, 30;
	shf.l.wrap.b32 	%r1077, %r1074, %r1075, 30;
	mov.b64 	%rd416, {%r1077, %r1076};
	shf.r.wrap.b32 	%r1078, %r1074, %r1075, 28;
	shf.r.wrap.b32 	%r1079, %r1075, %r1074, 28;
	mov.b64 	%rd417, {%r1079, %r1078};
	xor.b64  	%rd418, %rd416, %rd417;
	shf.l.wrap.b32 	%r1080, %r1075, %r1074, 25;
	shf.l.wrap.b32 	%r1081, %r1074, %r1075, 25;
	mov.b64 	%rd419, {%r1081, %r1080};
	xor.b64  	%rd420, %rd418, %rd419;
	xor.b64  	%rd421, %rd3409, %rd3410;
	xor.b64  	%rd422, %rd3408, %rd3410;
	and.b64  	%rd423, %rd422, %rd421;
	xor.b64  	%rd424, %rd423, %rd3410;
	add.s64 	%rd425, %rd414, %rd424;
	add.s64 	%rd426, %rd425, %rd420;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1082,%dummy}, %rd415;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1083}, %rd415;
	}
	shf.r.wrap.b32 	%r1084, %r1083, %r1082, 14;
	shf.r.wrap.b32 	%r1085, %r1082, %r1083, 14;
	mov.b64 	%rd427, {%r1085, %r1084};
	shf.r.wrap.b32 	%r1086, %r1083, %r1082, 18;
	shf.r.wrap.b32 	%r1087, %r1082, %r1083, 18;
	mov.b64 	%rd428, {%r1087, %r1086};
	xor.b64  	%rd429, %rd428, %rd427;
	shf.l.wrap.b32 	%r1088, %r1082, %r1083, 23;
	shf.l.wrap.b32 	%r1089, %r1083, %r1082, 23;
	mov.b64 	%rd430, {%r1089, %r1088};
	xor.b64  	%rd431, %rd429, %rd430;
	xor.b64  	%rd432, %rd3405, %rd3406;
	and.b64  	%rd433, %rd415, %rd432;
	xor.b64  	%rd434, %rd433, %rd3405;
	add.s64 	%rd435, %rd3396, %rd3404;
	add.s64 	%rd436, %rd435, %rd37;
	add.s64 	%rd437, %rd436, %rd434;
	add.s64 	%rd438, %rd437, %rd431;
	add.s64 	%rd439, %rd438, %rd3408;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1090,%dummy}, %rd426;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1091}, %rd426;
	}
	shf.r.wrap.b32 	%r1092, %r1091, %r1090, 28;
	shf.r.wrap.b32 	%r1093, %r1090, %r1091, 28;
	mov.b64 	%rd440, {%r1093, %r1092};
	shf.l.wrap.b32 	%r1094, %r1090, %r1091, 30;
	shf.l.wrap.b32 	%r1095, %r1091, %r1090, 30;
	mov.b64 	%rd441, {%r1095, %r1094};
	xor.b64  	%rd442, %rd441, %rd440;
	shf.l.wrap.b32 	%r1096, %r1090, %r1091, 25;
	shf.l.wrap.b32 	%r1097, %r1091, %r1090, 25;
	mov.b64 	%rd443, {%r1097, %r1096};
	xor.b64  	%rd444, %rd442, %rd443;
	xor.b64  	%rd445, %rd426, %rd3409;
	xor.b64  	%rd446, %rd426, %rd3410;
	and.b64  	%rd447, %rd446, %rd445;
	xor.b64  	%rd448, %rd447, %rd426;
	add.s64 	%rd449, %rd438, %rd448;
	add.s64 	%rd450, %rd449, %rd444;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1098,%dummy}, %rd439;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1099}, %rd439;
	}
	shf.r.wrap.b32 	%r1100, %r1099, %r1098, 14;
	shf.r.wrap.b32 	%r1101, %r1098, %r1099, 14;
	mov.b64 	%rd451, {%r1101, %r1100};
	shf.r.wrap.b32 	%r1102, %r1099, %r1098, 18;
	shf.r.wrap.b32 	%r1103, %r1098, %r1099, 18;
	mov.b64 	%rd452, {%r1103, %r1102};
	xor.b64  	%rd453, %rd452, %rd451;
	shf.l.wrap.b32 	%r1104, %r1098, %r1099, 23;
	shf.l.wrap.b32 	%r1105, %r1099, %r1098, 23;
	mov.b64 	%rd454, {%r1105, %r1104};
	xor.b64  	%rd455, %rd453, %rd454;
	xor.b64  	%rd456, %rd415, %rd3406;
	and.b64  	%rd457, %rd439, %rd456;
	xor.b64  	%rd458, %rd457, %rd3406;
	add.s64 	%rd459, %rd3397, %rd3405;
	add.s64 	%rd460, %rd459, %rd38;
	add.s64 	%rd461, %rd460, %rd458;
	add.s64 	%rd462, %rd461, %rd455;
	add.s64 	%rd463, %rd462, %rd3409;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1106,%dummy}, %rd450;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1107}, %rd450;
	}
	shf.r.wrap.b32 	%r1108, %r1107, %r1106, 28;
	shf.r.wrap.b32 	%r1109, %r1106, %r1107, 28;
	mov.b64 	%rd464, {%r1109, %r1108};
	shf.l.wrap.b32 	%r1110, %r1106, %r1107, 30;
	shf.l.wrap.b32 	%r1111, %r1107, %r1106, 30;
	mov.b64 	%rd465, {%r1111, %r1110};
	xor.b64  	%rd466, %rd465, %rd464;
	shf.l.wrap.b32 	%r1112, %r1106, %r1107, 25;
	shf.l.wrap.b32 	%r1113, %r1107, %r1106, 25;
	mov.b64 	%rd467, {%r1113, %r1112};
	xor.b64  	%rd468, %rd466, %rd467;
	xor.b64  	%rd469, %rd450, %rd3410;
	xor.b64  	%rd470, %rd450, %rd426;
	and.b64  	%rd471, %rd470, %rd469;
	xor.b64  	%rd472, %rd471, %rd450;
	add.s64 	%rd473, %rd462, %rd472;
	add.s64 	%rd474, %rd473, %rd468;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1114,%dummy}, %rd463;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1115}, %rd463;
	}
	shf.r.wrap.b32 	%r1116, %r1115, %r1114, 14;
	shf.r.wrap.b32 	%r1117, %r1114, %r1115, 14;
	mov.b64 	%rd475, {%r1117, %r1116};
	shf.r.wrap.b32 	%r1118, %r1115, %r1114, 18;
	shf.r.wrap.b32 	%r1119, %r1114, %r1115, 18;
	mov.b64 	%rd476, {%r1119, %r1118};
	xor.b64  	%rd477, %rd476, %rd475;
	shf.l.wrap.b32 	%r1120, %r1114, %r1115, 23;
	shf.l.wrap.b32 	%r1121, %r1115, %r1114, 23;
	mov.b64 	%rd478, {%r1121, %r1120};
	xor.b64  	%rd479, %rd477, %rd478;
	xor.b64  	%rd480, %rd439, %rd415;
	and.b64  	%rd481, %rd463, %rd480;
	xor.b64  	%rd482, %rd481, %rd415;
	add.s64 	%rd483, %rd3398, %rd3406;
	add.s64 	%rd484, %rd483, %rd39;
	add.s64 	%rd485, %rd484, %rd482;
	add.s64 	%rd486, %rd485, %rd479;
	add.s64 	%rd487, %rd486, %rd3410;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1122,%dummy}, %rd474;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1123}, %rd474;
	}
	shf.r.wrap.b32 	%r1124, %r1123, %r1122, 28;
	shf.r.wrap.b32 	%r1125, %r1122, %r1123, 28;
	mov.b64 	%rd488, {%r1125, %r1124};
	shf.l.wrap.b32 	%r1126, %r1122, %r1123, 30;
	shf.l.wrap.b32 	%r1127, %r1123, %r1122, 30;
	mov.b64 	%rd489, {%r1127, %r1126};
	xor.b64  	%rd490, %rd489, %rd488;
	shf.l.wrap.b32 	%r1128, %r1122, %r1123, 25;
	shf.l.wrap.b32 	%r1129, %r1123, %r1122, 25;
	mov.b64 	%rd491, {%r1129, %r1128};
	xor.b64  	%rd492, %rd490, %rd491;
	xor.b64  	%rd493, %rd474, %rd426;
	xor.b64  	%rd494, %rd474, %rd450;
	and.b64  	%rd495, %rd494, %rd493;
	xor.b64  	%rd496, %rd495, %rd474;
	add.s64 	%rd497, %rd486, %rd496;
	add.s64 	%rd498, %rd497, %rd492;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1130,%dummy}, %rd487;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1131}, %rd487;
	}
	shf.r.wrap.b32 	%r1132, %r1131, %r1130, 14;
	shf.r.wrap.b32 	%r1133, %r1130, %r1131, 14;
	mov.b64 	%rd499, {%r1133, %r1132};
	shf.r.wrap.b32 	%r1134, %r1131, %r1130, 18;
	shf.r.wrap.b32 	%r1135, %r1130, %r1131, 18;
	mov.b64 	%rd500, {%r1135, %r1134};
	xor.b64  	%rd501, %rd500, %rd499;
	shf.l.wrap.b32 	%r1136, %r1130, %r1131, 23;
	shf.l.wrap.b32 	%r1137, %r1131, %r1130, 23;
	mov.b64 	%rd502, {%r1137, %r1136};
	xor.b64  	%rd503, %rd501, %rd502;
	xor.b64  	%rd504, %rd463, %rd439;
	and.b64  	%rd505, %rd487, %rd504;
	xor.b64  	%rd506, %rd505, %rd439;
	add.s64 	%rd507, %rd415, %rd3399;
	add.s64 	%rd508, %rd507, %rd40;
	add.s64 	%rd509, %rd508, %rd506;
	add.s64 	%rd510, %rd509, %rd503;
	add.s64 	%rd511, %rd510, %rd426;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1138,%dummy}, %rd498;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1139}, %rd498;
	}
	shf.r.wrap.b32 	%r1140, %r1139, %r1138, 28;
	shf.r.wrap.b32 	%r1141, %r1138, %r1139, 28;
	mov.b64 	%rd512, {%r1141, %r1140};
	shf.l.wrap.b32 	%r1142, %r1138, %r1139, 30;
	shf.l.wrap.b32 	%r1143, %r1139, %r1138, 30;
	mov.b64 	%rd513, {%r1143, %r1142};
	xor.b64  	%rd514, %rd513, %rd512;
	shf.l.wrap.b32 	%r1144, %r1138, %r1139, 25;
	shf.l.wrap.b32 	%r1145, %r1139, %r1138, 25;
	mov.b64 	%rd515, {%r1145, %r1144};
	xor.b64  	%rd516, %rd514, %rd515;
	xor.b64  	%rd517, %rd498, %rd450;
	xor.b64  	%rd518, %rd498, %rd474;
	and.b64  	%rd519, %rd518, %rd517;
	xor.b64  	%rd520, %rd519, %rd498;
	add.s64 	%rd521, %rd510, %rd520;
	add.s64 	%rd522, %rd521, %rd516;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1146,%dummy}, %rd511;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1147}, %rd511;
	}
	shf.r.wrap.b32 	%r1148, %r1147, %r1146, 14;
	shf.r.wrap.b32 	%r1149, %r1146, %r1147, 14;
	mov.b64 	%rd523, {%r1149, %r1148};
	shf.r.wrap.b32 	%r1150, %r1147, %r1146, 18;
	shf.r.wrap.b32 	%r1151, %r1146, %r1147, 18;
	mov.b64 	%rd524, {%r1151, %r1150};
	xor.b64  	%rd525, %rd524, %rd523;
	shf.l.wrap.b32 	%r1152, %r1146, %r1147, 23;
	shf.l.wrap.b32 	%r1153, %r1147, %r1146, 23;
	mov.b64 	%rd526, {%r1153, %r1152};
	xor.b64  	%rd527, %rd525, %rd526;
	xor.b64  	%rd528, %rd487, %rd463;
	and.b64  	%rd529, %rd511, %rd528;
	xor.b64  	%rd530, %rd529, %rd463;
	add.s64 	%rd531, %rd439, %rd3400;
	add.s64 	%rd532, %rd531, %rd41;
	add.s64 	%rd533, %rd532, %rd530;
	add.s64 	%rd534, %rd533, %rd527;
	add.s64 	%rd535, %rd534, %rd450;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1154,%dummy}, %rd522;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1155}, %rd522;
	}
	shf.r.wrap.b32 	%r1156, %r1155, %r1154, 28;
	shf.r.wrap.b32 	%r1157, %r1154, %r1155, 28;
	mov.b64 	%rd536, {%r1157, %r1156};
	shf.l.wrap.b32 	%r1158, %r1154, %r1155, 30;
	shf.l.wrap.b32 	%r1159, %r1155, %r1154, 30;
	mov.b64 	%rd537, {%r1159, %r1158};
	xor.b64  	%rd538, %rd537, %rd536;
	shf.l.wrap.b32 	%r1160, %r1154, %r1155, 25;
	shf.l.wrap.b32 	%r1161, %r1155, %r1154, 25;
	mov.b64 	%rd539, {%r1161, %r1160};
	xor.b64  	%rd540, %rd538, %rd539;
	xor.b64  	%rd541, %rd522, %rd474;
	xor.b64  	%rd542, %rd522, %rd498;
	and.b64  	%rd543, %rd542, %rd541;
	xor.b64  	%rd544, %rd543, %rd522;
	add.s64 	%rd545, %rd534, %rd544;
	add.s64 	%rd546, %rd545, %rd540;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1162,%dummy}, %rd535;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1163}, %rd535;
	}
	shf.r.wrap.b32 	%r1164, %r1163, %r1162, 14;
	shf.r.wrap.b32 	%r1165, %r1162, %r1163, 14;
	mov.b64 	%rd547, {%r1165, %r1164};
	shf.r.wrap.b32 	%r1166, %r1163, %r1162, 18;
	shf.r.wrap.b32 	%r1167, %r1162, %r1163, 18;
	mov.b64 	%rd548, {%r1167, %r1166};
	xor.b64  	%rd549, %rd548, %rd547;
	shf.l.wrap.b32 	%r1168, %r1162, %r1163, 23;
	shf.l.wrap.b32 	%r1169, %r1163, %r1162, 23;
	mov.b64 	%rd550, {%r1169, %r1168};
	xor.b64  	%rd551, %rd549, %rd550;
	xor.b64  	%rd552, %rd511, %rd487;
	and.b64  	%rd553, %rd535, %rd552;
	xor.b64  	%rd554, %rd553, %rd487;
	add.s64 	%rd555, %rd463, %rd3401;
	add.s64 	%rd556, %rd555, %rd42;
	add.s64 	%rd557, %rd556, %rd554;
	add.s64 	%rd558, %rd557, %rd551;
	add.s64 	%rd559, %rd558, %rd474;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1170,%dummy}, %rd546;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1171}, %rd546;
	}
	shf.r.wrap.b32 	%r1172, %r1171, %r1170, 28;
	shf.r.wrap.b32 	%r1173, %r1170, %r1171, 28;
	mov.b64 	%rd560, {%r1173, %r1172};
	shf.l.wrap.b32 	%r1174, %r1170, %r1171, 30;
	shf.l.wrap.b32 	%r1175, %r1171, %r1170, 30;
	mov.b64 	%rd561, {%r1175, %r1174};
	xor.b64  	%rd562, %rd561, %rd560;
	shf.l.wrap.b32 	%r1176, %r1170, %r1171, 25;
	shf.l.wrap.b32 	%r1177, %r1171, %r1170, 25;
	mov.b64 	%rd563, {%r1177, %r1176};
	xor.b64  	%rd564, %rd562, %rd563;
	xor.b64  	%rd565, %rd546, %rd498;
	xor.b64  	%rd566, %rd546, %rd522;
	and.b64  	%rd567, %rd566, %rd565;
	xor.b64  	%rd568, %rd567, %rd546;
	add.s64 	%rd569, %rd558, %rd568;
	add.s64 	%rd570, %rd569, %rd564;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1178,%dummy}, %rd559;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1179}, %rd559;
	}
	shf.r.wrap.b32 	%r1180, %r1179, %r1178, 14;
	shf.r.wrap.b32 	%r1181, %r1178, %r1179, 14;
	mov.b64 	%rd571, {%r1181, %r1180};
	shf.r.wrap.b32 	%r1182, %r1179, %r1178, 18;
	shf.r.wrap.b32 	%r1183, %r1178, %r1179, 18;
	mov.b64 	%rd572, {%r1183, %r1182};
	xor.b64  	%rd573, %rd572, %rd571;
	shf.l.wrap.b32 	%r1184, %r1178, %r1179, 23;
	shf.l.wrap.b32 	%r1185, %r1179, %r1178, 23;
	mov.b64 	%rd574, {%r1185, %r1184};
	xor.b64  	%rd575, %rd573, %rd574;
	xor.b64  	%rd576, %rd535, %rd511;
	and.b64  	%rd577, %rd559, %rd576;
	xor.b64  	%rd578, %rd577, %rd511;
	add.s64 	%rd579, %rd487, %rd3402;
	add.s64 	%rd580, %rd579, %rd43;
	add.s64 	%rd581, %rd580, %rd578;
	add.s64 	%rd582, %rd581, %rd575;
	add.s64 	%rd583, %rd582, %rd498;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1186,%dummy}, %rd570;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1187}, %rd570;
	}
	shf.r.wrap.b32 	%r1188, %r1187, %r1186, 28;
	shf.r.wrap.b32 	%r1189, %r1186, %r1187, 28;
	mov.b64 	%rd584, {%r1189, %r1188};
	shf.l.wrap.b32 	%r1190, %r1186, %r1187, 30;
	shf.l.wrap.b32 	%r1191, %r1187, %r1186, 30;
	mov.b64 	%rd585, {%r1191, %r1190};
	xor.b64  	%rd586, %rd585, %rd584;
	shf.l.wrap.b32 	%r1192, %r1186, %r1187, 25;
	shf.l.wrap.b32 	%r1193, %r1187, %r1186, 25;
	mov.b64 	%rd587, {%r1193, %r1192};
	xor.b64  	%rd588, %rd586, %rd587;
	xor.b64  	%rd589, %rd570, %rd522;
	xor.b64  	%rd590, %rd570, %rd546;
	and.b64  	%rd591, %rd590, %rd589;
	xor.b64  	%rd592, %rd591, %rd570;
	add.s64 	%rd593, %rd582, %rd592;
	add.s64 	%rd594, %rd593, %rd588;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1194,%dummy}, %rd583;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1195}, %rd583;
	}
	shf.r.wrap.b32 	%r1196, %r1195, %r1194, 14;
	shf.r.wrap.b32 	%r1197, %r1194, %r1195, 14;
	mov.b64 	%rd595, {%r1197, %r1196};
	shf.r.wrap.b32 	%r1198, %r1195, %r1194, 18;
	shf.r.wrap.b32 	%r1199, %r1194, %r1195, 18;
	mov.b64 	%rd596, {%r1199, %r1198};
	xor.b64  	%rd597, %rd596, %rd595;
	shf.l.wrap.b32 	%r1200, %r1194, %r1195, 23;
	shf.l.wrap.b32 	%r1201, %r1195, %r1194, 23;
	mov.b64 	%rd598, {%r1201, %r1200};
	xor.b64  	%rd599, %rd597, %rd598;
	xor.b64  	%rd600, %rd559, %rd535;
	and.b64  	%rd601, %rd583, %rd600;
	xor.b64  	%rd602, %rd601, %rd535;
	add.s64 	%rd603, %rd511, %rd3386;
	add.s64 	%rd604, %rd603, %rd44;
	add.s64 	%rd605, %rd604, %rd602;
	add.s64 	%rd606, %rd605, %rd599;
	add.s64 	%rd607, %rd606, %rd522;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1202,%dummy}, %rd594;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1203}, %rd594;
	}
	shf.r.wrap.b32 	%r1204, %r1203, %r1202, 28;
	shf.r.wrap.b32 	%r1205, %r1202, %r1203, 28;
	mov.b64 	%rd608, {%r1205, %r1204};
	shf.l.wrap.b32 	%r1206, %r1202, %r1203, 30;
	shf.l.wrap.b32 	%r1207, %r1203, %r1202, 30;
	mov.b64 	%rd609, {%r1207, %r1206};
	xor.b64  	%rd610, %rd609, %rd608;
	shf.l.wrap.b32 	%r1208, %r1202, %r1203, 25;
	shf.l.wrap.b32 	%r1209, %r1203, %r1202, 25;
	mov.b64 	%rd611, {%r1209, %r1208};
	xor.b64  	%rd612, %rd610, %rd611;
	xor.b64  	%rd613, %rd594, %rd546;
	xor.b64  	%rd614, %rd594, %rd570;
	and.b64  	%rd615, %rd614, %rd613;
	xor.b64  	%rd616, %rd615, %rd594;
	add.s64 	%rd617, %rd606, %rd616;
	add.s64 	%rd618, %rd617, %rd612;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1210,%dummy}, %rd607;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1211}, %rd607;
	}
	shf.r.wrap.b32 	%r1212, %r1211, %r1210, 14;
	shf.r.wrap.b32 	%r1213, %r1210, %r1211, 14;
	mov.b64 	%rd619, {%r1213, %r1212};
	shf.r.wrap.b32 	%r1214, %r1211, %r1210, 18;
	shf.r.wrap.b32 	%r1215, %r1210, %r1211, 18;
	mov.b64 	%rd620, {%r1215, %r1214};
	xor.b64  	%rd621, %rd620, %rd619;
	shf.l.wrap.b32 	%r1216, %r1210, %r1211, 23;
	shf.l.wrap.b32 	%r1217, %r1211, %r1210, 23;
	mov.b64 	%rd622, {%r1217, %r1216};
	xor.b64  	%rd623, %rd621, %rd622;
	xor.b64  	%rd624, %rd583, %rd559;
	and.b64  	%rd625, %rd607, %rd624;
	xor.b64  	%rd626, %rd625, %rd559;
	add.s64 	%rd627, %rd535, %rd3385;
	add.s64 	%rd628, %rd627, %rd45;
	add.s64 	%rd629, %rd628, %rd626;
	add.s64 	%rd630, %rd629, %rd623;
	add.s64 	%rd631, %rd630, %rd546;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1218,%dummy}, %rd618;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1219}, %rd618;
	}
	shf.r.wrap.b32 	%r1220, %r1219, %r1218, 28;
	shf.r.wrap.b32 	%r1221, %r1218, %r1219, 28;
	mov.b64 	%rd632, {%r1221, %r1220};
	shf.l.wrap.b32 	%r1222, %r1218, %r1219, 30;
	shf.l.wrap.b32 	%r1223, %r1219, %r1218, 30;
	mov.b64 	%rd633, {%r1223, %r1222};
	xor.b64  	%rd634, %rd633, %rd632;
	shf.l.wrap.b32 	%r1224, %r1218, %r1219, 25;
	shf.l.wrap.b32 	%r1225, %r1219, %r1218, 25;
	mov.b64 	%rd635, {%r1225, %r1224};
	xor.b64  	%rd636, %rd634, %rd635;
	xor.b64  	%rd637, %rd618, %rd570;
	xor.b64  	%rd638, %rd618, %rd594;
	and.b64  	%rd639, %rd638, %rd637;
	xor.b64  	%rd640, %rd639, %rd618;
	add.s64 	%rd641, %rd630, %rd640;
	add.s64 	%rd642, %rd641, %rd636;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1226,%dummy}, %rd631;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1227}, %rd631;
	}
	shf.r.wrap.b32 	%r1228, %r1227, %r1226, 14;
	shf.r.wrap.b32 	%r1229, %r1226, %r1227, 14;
	mov.b64 	%rd643, {%r1229, %r1228};
	shf.r.wrap.b32 	%r1230, %r1227, %r1226, 18;
	shf.r.wrap.b32 	%r1231, %r1226, %r1227, 18;
	mov.b64 	%rd644, {%r1231, %r1230};
	xor.b64  	%rd645, %rd644, %rd643;
	shf.l.wrap.b32 	%r1232, %r1226, %r1227, 23;
	shf.l.wrap.b32 	%r1233, %r1227, %r1226, 23;
	mov.b64 	%rd646, {%r1233, %r1232};
	xor.b64  	%rd647, %rd645, %rd646;
	xor.b64  	%rd648, %rd607, %rd583;
	and.b64  	%rd649, %rd631, %rd648;
	xor.b64  	%rd650, %rd649, %rd583;
	add.s64 	%rd651, %rd559, %rd3384;
	add.s64 	%rd652, %rd651, %rd46;
	add.s64 	%rd653, %rd652, %rd650;
	add.s64 	%rd654, %rd653, %rd647;
	add.s64 	%rd655, %rd654, %rd570;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1234,%dummy}, %rd642;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1235}, %rd642;
	}
	shf.r.wrap.b32 	%r1236, %r1235, %r1234, 28;
	shf.r.wrap.b32 	%r1237, %r1234, %r1235, 28;
	mov.b64 	%rd656, {%r1237, %r1236};
	shf.l.wrap.b32 	%r1238, %r1234, %r1235, 30;
	shf.l.wrap.b32 	%r1239, %r1235, %r1234, 30;
	mov.b64 	%rd657, {%r1239, %r1238};
	xor.b64  	%rd658, %rd657, %rd656;
	shf.l.wrap.b32 	%r1240, %r1234, %r1235, 25;
	shf.l.wrap.b32 	%r1241, %r1235, %r1234, 25;
	mov.b64 	%rd659, {%r1241, %r1240};
	xor.b64  	%rd660, %rd658, %rd659;
	xor.b64  	%rd661, %rd642, %rd594;
	xor.b64  	%rd662, %rd642, %rd618;
	and.b64  	%rd663, %rd662, %rd661;
	xor.b64  	%rd664, %rd663, %rd642;
	add.s64 	%rd665, %rd654, %rd664;
	add.s64 	%rd666, %rd665, %rd660;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1242,%dummy}, %rd655;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1243}, %rd655;
	}
	shf.r.wrap.b32 	%r1244, %r1243, %r1242, 14;
	shf.r.wrap.b32 	%r1245, %r1242, %r1243, 14;
	mov.b64 	%rd667, {%r1245, %r1244};
	shf.r.wrap.b32 	%r1246, %r1243, %r1242, 18;
	shf.r.wrap.b32 	%r1247, %r1242, %r1243, 18;
	mov.b64 	%rd668, {%r1247, %r1246};
	xor.b64  	%rd669, %rd668, %rd667;
	shf.l.wrap.b32 	%r1248, %r1242, %r1243, 23;
	shf.l.wrap.b32 	%r1249, %r1243, %r1242, 23;
	mov.b64 	%rd670, {%r1249, %r1248};
	xor.b64  	%rd671, %rd669, %rd670;
	xor.b64  	%rd672, %rd631, %rd607;
	and.b64  	%rd673, %rd655, %rd672;
	xor.b64  	%rd674, %rd673, %rd607;
	add.s64 	%rd675, %rd583, %rd3383;
	add.s64 	%rd676, %rd675, %rd47;
	add.s64 	%rd677, %rd676, %rd674;
	add.s64 	%rd678, %rd677, %rd671;
	add.s64 	%rd679, %rd678, %rd594;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1250,%dummy}, %rd666;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1251}, %rd666;
	}
	shf.r.wrap.b32 	%r1252, %r1251, %r1250, 28;
	shf.r.wrap.b32 	%r1253, %r1250, %r1251, 28;
	mov.b64 	%rd680, {%r1253, %r1252};
	shf.l.wrap.b32 	%r1254, %r1250, %r1251, 30;
	shf.l.wrap.b32 	%r1255, %r1251, %r1250, 30;
	mov.b64 	%rd681, {%r1255, %r1254};
	xor.b64  	%rd682, %rd681, %rd680;
	shf.l.wrap.b32 	%r1256, %r1250, %r1251, 25;
	shf.l.wrap.b32 	%r1257, %r1251, %r1250, 25;
	mov.b64 	%rd683, {%r1257, %r1256};
	xor.b64  	%rd684, %rd682, %rd683;
	xor.b64  	%rd685, %rd666, %rd618;
	xor.b64  	%rd686, %rd666, %rd642;
	and.b64  	%rd687, %rd686, %rd685;
	xor.b64  	%rd688, %rd687, %rd666;
	add.s64 	%rd689, %rd678, %rd688;
	add.s64 	%rd690, %rd689, %rd684;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1258,%dummy}, %rd679;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1259}, %rd679;
	}
	shf.r.wrap.b32 	%r1260, %r1259, %r1258, 14;
	shf.r.wrap.b32 	%r1261, %r1258, %r1259, 14;
	mov.b64 	%rd691, {%r1261, %r1260};
	shf.r.wrap.b32 	%r1262, %r1259, %r1258, 18;
	shf.r.wrap.b32 	%r1263, %r1258, %r1259, 18;
	mov.b64 	%rd692, {%r1263, %r1262};
	xor.b64  	%rd693, %rd692, %rd691;
	shf.l.wrap.b32 	%r1264, %r1258, %r1259, 23;
	shf.l.wrap.b32 	%r1265, %r1259, %r1258, 23;
	mov.b64 	%rd694, {%r1265, %r1264};
	xor.b64  	%rd695, %rd693, %rd694;
	xor.b64  	%rd696, %rd655, %rd631;
	and.b64  	%rd697, %rd679, %rd696;
	xor.b64  	%rd698, %rd697, %rd631;
	add.s64 	%rd699, %rd607, %rd3382;
	add.s64 	%rd700, %rd699, %rd48;
	add.s64 	%rd701, %rd700, %rd698;
	add.s64 	%rd702, %rd701, %rd695;
	add.s64 	%rd3394, %rd702, %rd618;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1266,%dummy}, %rd690;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1267}, %rd690;
	}
	shf.r.wrap.b32 	%r1268, %r1267, %r1266, 28;
	shf.r.wrap.b32 	%r1269, %r1266, %r1267, 28;
	mov.b64 	%rd703, {%r1269, %r1268};
	shf.l.wrap.b32 	%r1270, %r1266, %r1267, 30;
	shf.l.wrap.b32 	%r1271, %r1267, %r1266, 30;
	mov.b64 	%rd704, {%r1271, %r1270};
	xor.b64  	%rd705, %rd704, %rd703;
	shf.l.wrap.b32 	%r1272, %r1266, %r1267, 25;
	shf.l.wrap.b32 	%r1273, %r1267, %r1266, 25;
	mov.b64 	%rd706, {%r1273, %r1272};
	xor.b64  	%rd707, %rd705, %rd706;
	xor.b64  	%rd708, %rd690, %rd642;
	xor.b64  	%rd709, %rd690, %rd666;
	and.b64  	%rd710, %rd709, %rd708;
	xor.b64  	%rd711, %rd710, %rd690;
	add.s64 	%rd712, %rd702, %rd711;
	add.s64 	%rd3390, %rd712, %rd707;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1274,%dummy}, %rd3394;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1275}, %rd3394;
	}
	shf.r.wrap.b32 	%r1276, %r1275, %r1274, 14;
	shf.r.wrap.b32 	%r1277, %r1274, %r1275, 14;
	mov.b64 	%rd713, {%r1277, %r1276};
	shf.r.wrap.b32 	%r1278, %r1275, %r1274, 18;
	shf.r.wrap.b32 	%r1279, %r1274, %r1275, 18;
	mov.b64 	%rd714, {%r1279, %r1278};
	xor.b64  	%rd715, %rd714, %rd713;
	shf.l.wrap.b32 	%r1280, %r1274, %r1275, 23;
	shf.l.wrap.b32 	%r1281, %r1275, %r1274, 23;
	mov.b64 	%rd716, {%r1281, %r1280};
	xor.b64  	%rd717, %rd715, %rd716;
	xor.b64  	%rd718, %rd679, %rd655;
	and.b64  	%rd719, %rd3394, %rd718;
	xor.b64  	%rd720, %rd719, %rd655;
	add.s64 	%rd721, %rd631, %rd3381;
	add.s64 	%rd722, %rd721, %rd49;
	add.s64 	%rd723, %rd722, %rd720;
	add.s64 	%rd724, %rd723, %rd717;
	add.s64 	%rd3393, %rd724, %rd642;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1282,%dummy}, %rd3390;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1283}, %rd3390;
	}
	shf.r.wrap.b32 	%r1284, %r1283, %r1282, 28;
	shf.r.wrap.b32 	%r1285, %r1282, %r1283, 28;
	mov.b64 	%rd725, {%r1285, %r1284};
	shf.l.wrap.b32 	%r1286, %r1282, %r1283, 30;
	shf.l.wrap.b32 	%r1287, %r1283, %r1282, 30;
	mov.b64 	%rd726, {%r1287, %r1286};
	xor.b64  	%rd727, %rd726, %rd725;
	shf.l.wrap.b32 	%r1288, %r1282, %r1283, 25;
	shf.l.wrap.b32 	%r1289, %r1283, %r1282, 25;
	mov.b64 	%rd728, {%r1289, %r1288};
	xor.b64  	%rd729, %rd727, %rd728;
	xor.b64  	%rd730, %rd3390, %rd666;
	xor.b64  	%rd731, %rd3390, %rd690;
	and.b64  	%rd732, %rd731, %rd730;
	xor.b64  	%rd733, %rd732, %rd3390;
	add.s64 	%rd734, %rd724, %rd733;
	add.s64 	%rd3389, %rd734, %rd729;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1290,%dummy}, %rd3393;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1291}, %rd3393;
	}
	shf.r.wrap.b32 	%r1292, %r1291, %r1290, 14;
	shf.r.wrap.b32 	%r1293, %r1290, %r1291, 14;
	mov.b64 	%rd735, {%r1293, %r1292};
	shf.r.wrap.b32 	%r1294, %r1291, %r1290, 18;
	shf.r.wrap.b32 	%r1295, %r1290, %r1291, 18;
	mov.b64 	%rd736, {%r1295, %r1294};
	xor.b64  	%rd737, %rd736, %rd735;
	shf.l.wrap.b32 	%r1296, %r1290, %r1291, 23;
	shf.l.wrap.b32 	%r1297, %r1291, %r1290, 23;
	mov.b64 	%rd738, {%r1297, %r1296};
	xor.b64  	%rd739, %rd737, %rd738;
	xor.b64  	%rd740, %rd3394, %rd679;
	and.b64  	%rd741, %rd3393, %rd740;
	xor.b64  	%rd742, %rd741, %rd679;
	add.s64 	%rd743, %rd655, %rd3380;
	add.s64 	%rd744, %rd743, %rd50;
	add.s64 	%rd745, %rd744, %rd742;
	add.s64 	%rd746, %rd745, %rd739;
	add.s64 	%rd3392, %rd746, %rd666;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1298,%dummy}, %rd3389;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1299}, %rd3389;
	}
	shf.r.wrap.b32 	%r1300, %r1299, %r1298, 28;
	shf.r.wrap.b32 	%r1301, %r1298, %r1299, 28;
	mov.b64 	%rd747, {%r1301, %r1300};
	shf.l.wrap.b32 	%r1302, %r1298, %r1299, 30;
	shf.l.wrap.b32 	%r1303, %r1299, %r1298, 30;
	mov.b64 	%rd748, {%r1303, %r1302};
	xor.b64  	%rd749, %rd748, %rd747;
	shf.l.wrap.b32 	%r1304, %r1298, %r1299, 25;
	shf.l.wrap.b32 	%r1305, %r1299, %r1298, 25;
	mov.b64 	%rd750, {%r1305, %r1304};
	xor.b64  	%rd751, %rd749, %rd750;
	xor.b64  	%rd752, %rd3389, %rd690;
	xor.b64  	%rd753, %rd3389, %rd3390;
	and.b64  	%rd754, %rd753, %rd752;
	xor.b64  	%rd755, %rd754, %rd3389;
	add.s64 	%rd756, %rd746, %rd755;
	add.s64 	%rd3388, %rd756, %rd751;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1306,%dummy}, %rd3392;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1307}, %rd3392;
	}
	shf.r.wrap.b32 	%r1308, %r1307, %r1306, 14;
	shf.r.wrap.b32 	%r1309, %r1306, %r1307, 14;
	mov.b64 	%rd757, {%r1309, %r1308};
	shf.r.wrap.b32 	%r1310, %r1307, %r1306, 18;
	shf.r.wrap.b32 	%r1311, %r1306, %r1307, 18;
	mov.b64 	%rd758, {%r1311, %r1310};
	xor.b64  	%rd759, %rd758, %rd757;
	shf.l.wrap.b32 	%r1312, %r1306, %r1307, 23;
	shf.l.wrap.b32 	%r1313, %r1307, %r1306, 23;
	mov.b64 	%rd760, {%r1313, %r1312};
	xor.b64  	%rd761, %rd759, %rd760;
	xor.b64  	%rd762, %rd3393, %rd3394;
	and.b64  	%rd763, %rd3392, %rd762;
	xor.b64  	%rd764, %rd763, %rd3394;
	add.s64 	%rd765, %rd679, %rd3379;
	add.s64 	%rd766, %rd765, %rd51;
	add.s64 	%rd767, %rd766, %rd764;
	add.s64 	%rd768, %rd767, %rd761;
	add.s64 	%rd3391, %rd768, %rd690;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1314,%dummy}, %rd3388;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1315}, %rd3388;
	}
	shf.r.wrap.b32 	%r1316, %r1315, %r1314, 28;
	shf.r.wrap.b32 	%r1317, %r1314, %r1315, 28;
	mov.b64 	%rd769, {%r1317, %r1316};
	shf.l.wrap.b32 	%r1318, %r1314, %r1315, 30;
	shf.l.wrap.b32 	%r1319, %r1315, %r1314, 30;
	mov.b64 	%rd770, {%r1319, %r1318};
	xor.b64  	%rd771, %rd770, %rd769;
	shf.l.wrap.b32 	%r1320, %r1314, %r1315, 25;
	shf.l.wrap.b32 	%r1321, %r1315, %r1314, 25;
	mov.b64 	%rd772, {%r1321, %r1320};
	xor.b64  	%rd773, %rd771, %rd772;
	xor.b64  	%rd774, %rd3388, %rd3390;
	xor.b64  	%rd775, %rd3388, %rd3389;
	and.b64  	%rd776, %rd775, %rd774;
	xor.b64  	%rd777, %rd776, %rd3388;
	add.s64 	%rd778, %rd768, %rd777;
	add.s64 	%rd3387, %rd778, %rd773;
	mov.u32 	%r8703, 16;

BB4_325:
	shr.u64 	%rd779, %rd3380, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1322,%dummy}, %rd3380;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1323}, %rd3380;
	}
	shf.r.wrap.b32 	%r1324, %r1323, %r1322, 19;
	shf.r.wrap.b32 	%r1325, %r1322, %r1323, 19;
	mov.b64 	%rd780, {%r1325, %r1324};
	xor.b64  	%rd781, %rd780, %rd779;
	shf.l.wrap.b32 	%r1326, %r1322, %r1323, 3;
	shf.l.wrap.b32 	%r1327, %r1323, %r1322, 3;
	mov.b64 	%rd782, {%r1327, %r1326};
	xor.b64  	%rd783, %rd781, %rd782;
	shr.u64 	%rd784, %rd3396, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1328,%dummy}, %rd3396;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1329}, %rd3396;
	}
	shf.r.wrap.b32 	%r1330, %r1329, %r1328, 1;
	shf.r.wrap.b32 	%r1331, %r1328, %r1329, 1;
	mov.b64 	%rd785, {%r1331, %r1330};
	xor.b64  	%rd786, %rd785, %rd784;
	shf.r.wrap.b32 	%r1332, %r1329, %r1328, 8;
	shf.r.wrap.b32 	%r1333, %r1328, %r1329, 8;
	mov.b64 	%rd787, {%r1333, %r1332};
	xor.b64  	%rd788, %rd786, %rd787;
	add.s64 	%rd789, %rd3385, %rd3395;
	add.s64 	%rd790, %rd789, %rd783;
	add.s64 	%rd3395, %rd790, %rd788;
	shr.u64 	%rd791, %rd3379, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1334,%dummy}, %rd3379;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1335}, %rd3379;
	}
	shf.r.wrap.b32 	%r1336, %r1335, %r1334, 19;
	shf.r.wrap.b32 	%r1337, %r1334, %r1335, 19;
	mov.b64 	%rd792, {%r1337, %r1336};
	xor.b64  	%rd793, %rd792, %rd791;
	shf.l.wrap.b32 	%r1338, %r1334, %r1335, 3;
	shf.l.wrap.b32 	%r1339, %r1335, %r1334, 3;
	mov.b64 	%rd794, {%r1339, %r1338};
	xor.b64  	%rd795, %rd793, %rd794;
	shr.u64 	%rd796, %rd3397, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1340,%dummy}, %rd3397;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1341}, %rd3397;
	}
	shf.r.wrap.b32 	%r1342, %r1341, %r1340, 1;
	shf.r.wrap.b32 	%r1343, %r1340, %r1341, 1;
	mov.b64 	%rd797, {%r1343, %r1342};
	xor.b64  	%rd798, %rd797, %rd796;
	shf.r.wrap.b32 	%r1344, %r1341, %r1340, 8;
	shf.r.wrap.b32 	%r1345, %r1340, %r1341, 8;
	mov.b64 	%rd799, {%r1345, %r1344};
	xor.b64  	%rd800, %rd798, %rd799;
	add.s64 	%rd801, %rd3384, %rd3396;
	add.s64 	%rd802, %rd801, %rd795;
	add.s64 	%rd3396, %rd802, %rd800;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1346,%dummy}, %rd3395;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1347}, %rd3395;
	}
	shf.r.wrap.b32 	%r1348, %r1347, %r1346, 19;
	shf.r.wrap.b32 	%r1349, %r1346, %r1347, 19;
	mov.b64 	%rd803, {%r1349, %r1348};
	shf.l.wrap.b32 	%r1350, %r1346, %r1347, 3;
	shf.l.wrap.b32 	%r1351, %r1347, %r1346, 3;
	mov.b64 	%rd804, {%r1351, %r1350};
	shr.u64 	%rd805, %rd3395, 6;
	xor.b64  	%rd806, %rd803, %rd805;
	xor.b64  	%rd807, %rd806, %rd804;
	shr.u64 	%rd808, %rd3398, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1352,%dummy}, %rd3398;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1353}, %rd3398;
	}
	shf.r.wrap.b32 	%r1354, %r1353, %r1352, 1;
	shf.r.wrap.b32 	%r1355, %r1352, %r1353, 1;
	mov.b64 	%rd809, {%r1355, %r1354};
	xor.b64  	%rd810, %rd809, %rd808;
	shf.r.wrap.b32 	%r1356, %r1353, %r1352, 8;
	shf.r.wrap.b32 	%r1357, %r1352, %r1353, 8;
	mov.b64 	%rd811, {%r1357, %r1356};
	xor.b64  	%rd812, %rd810, %rd811;
	add.s64 	%rd813, %rd3383, %rd3397;
	add.s64 	%rd814, %rd813, %rd807;
	add.s64 	%rd3397, %rd814, %rd812;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1358,%dummy}, %rd3396;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1359}, %rd3396;
	}
	shf.r.wrap.b32 	%r1360, %r1359, %r1358, 19;
	shf.r.wrap.b32 	%r1361, %r1358, %r1359, 19;
	mov.b64 	%rd815, {%r1361, %r1360};
	shf.l.wrap.b32 	%r1362, %r1358, %r1359, 3;
	shf.l.wrap.b32 	%r1363, %r1359, %r1358, 3;
	mov.b64 	%rd816, {%r1363, %r1362};
	shr.u64 	%rd817, %rd3396, 6;
	xor.b64  	%rd818, %rd815, %rd817;
	xor.b64  	%rd819, %rd818, %rd816;
	shr.u64 	%rd820, %rd3399, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1364,%dummy}, %rd3399;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1365}, %rd3399;
	}
	shf.r.wrap.b32 	%r1366, %r1365, %r1364, 1;
	shf.r.wrap.b32 	%r1367, %r1364, %r1365, 1;
	mov.b64 	%rd821, {%r1367, %r1366};
	xor.b64  	%rd822, %rd821, %rd820;
	shf.r.wrap.b32 	%r1368, %r1365, %r1364, 8;
	shf.r.wrap.b32 	%r1369, %r1364, %r1365, 8;
	mov.b64 	%rd823, {%r1369, %r1368};
	xor.b64  	%rd824, %rd822, %rd823;
	add.s64 	%rd825, %rd3382, %rd3398;
	add.s64 	%rd826, %rd825, %rd819;
	add.s64 	%rd3398, %rd826, %rd824;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1370,%dummy}, %rd3397;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1371}, %rd3397;
	}
	shf.r.wrap.b32 	%r1372, %r1371, %r1370, 19;
	shf.r.wrap.b32 	%r1373, %r1370, %r1371, 19;
	mov.b64 	%rd827, {%r1373, %r1372};
	shf.l.wrap.b32 	%r1374, %r1370, %r1371, 3;
	shf.l.wrap.b32 	%r1375, %r1371, %r1370, 3;
	mov.b64 	%rd828, {%r1375, %r1374};
	shr.u64 	%rd829, %rd3397, 6;
	xor.b64  	%rd830, %rd827, %rd829;
	xor.b64  	%rd831, %rd830, %rd828;
	shr.u64 	%rd832, %rd3400, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1376,%dummy}, %rd3400;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1377}, %rd3400;
	}
	shf.r.wrap.b32 	%r1378, %r1377, %r1376, 1;
	shf.r.wrap.b32 	%r1379, %r1376, %r1377, 1;
	mov.b64 	%rd833, {%r1379, %r1378};
	xor.b64  	%rd834, %rd833, %rd832;
	shf.r.wrap.b32 	%r1380, %r1377, %r1376, 8;
	shf.r.wrap.b32 	%r1381, %r1376, %r1377, 8;
	mov.b64 	%rd835, {%r1381, %r1380};
	xor.b64  	%rd836, %rd834, %rd835;
	add.s64 	%rd837, %rd3381, %rd3399;
	add.s64 	%rd838, %rd837, %rd831;
	add.s64 	%rd3399, %rd838, %rd836;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1382,%dummy}, %rd3398;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1383}, %rd3398;
	}
	shf.r.wrap.b32 	%r1384, %r1383, %r1382, 19;
	shf.r.wrap.b32 	%r1385, %r1382, %r1383, 19;
	mov.b64 	%rd839, {%r1385, %r1384};
	shf.l.wrap.b32 	%r1386, %r1382, %r1383, 3;
	shf.l.wrap.b32 	%r1387, %r1383, %r1382, 3;
	mov.b64 	%rd840, {%r1387, %r1386};
	shr.u64 	%rd841, %rd3398, 6;
	xor.b64  	%rd842, %rd839, %rd841;
	xor.b64  	%rd843, %rd842, %rd840;
	shr.u64 	%rd844, %rd3401, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1388,%dummy}, %rd3401;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1389}, %rd3401;
	}
	shf.r.wrap.b32 	%r1390, %r1389, %r1388, 1;
	shf.r.wrap.b32 	%r1391, %r1388, %r1389, 1;
	mov.b64 	%rd845, {%r1391, %r1390};
	xor.b64  	%rd846, %rd845, %rd844;
	shf.r.wrap.b32 	%r1392, %r1389, %r1388, 8;
	shf.r.wrap.b32 	%r1393, %r1388, %r1389, 8;
	mov.b64 	%rd847, {%r1393, %r1392};
	xor.b64  	%rd848, %rd846, %rd847;
	add.s64 	%rd849, %rd3380, %rd3400;
	add.s64 	%rd850, %rd849, %rd843;
	add.s64 	%rd3400, %rd850, %rd848;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1394,%dummy}, %rd3399;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1395}, %rd3399;
	}
	shf.r.wrap.b32 	%r1396, %r1395, %r1394, 19;
	shf.r.wrap.b32 	%r1397, %r1394, %r1395, 19;
	mov.b64 	%rd851, {%r1397, %r1396};
	shf.l.wrap.b32 	%r1398, %r1394, %r1395, 3;
	shf.l.wrap.b32 	%r1399, %r1395, %r1394, 3;
	mov.b64 	%rd852, {%r1399, %r1398};
	shr.u64 	%rd853, %rd3399, 6;
	xor.b64  	%rd854, %rd851, %rd853;
	xor.b64  	%rd855, %rd854, %rd852;
	shr.u64 	%rd856, %rd3402, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1400,%dummy}, %rd3402;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1401}, %rd3402;
	}
	shf.r.wrap.b32 	%r1402, %r1401, %r1400, 1;
	shf.r.wrap.b32 	%r1403, %r1400, %r1401, 1;
	mov.b64 	%rd857, {%r1403, %r1402};
	xor.b64  	%rd858, %rd857, %rd856;
	shf.r.wrap.b32 	%r1404, %r1401, %r1400, 8;
	shf.r.wrap.b32 	%r1405, %r1400, %r1401, 8;
	mov.b64 	%rd859, {%r1405, %r1404};
	xor.b64  	%rd860, %rd858, %rd859;
	add.s64 	%rd861, %rd3379, %rd3401;
	add.s64 	%rd862, %rd861, %rd855;
	add.s64 	%rd3401, %rd862, %rd860;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1406,%dummy}, %rd3400;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1407}, %rd3400;
	}
	shf.r.wrap.b32 	%r1408, %r1407, %r1406, 19;
	shf.r.wrap.b32 	%r1409, %r1406, %r1407, 19;
	mov.b64 	%rd863, {%r1409, %r1408};
	shf.l.wrap.b32 	%r1410, %r1406, %r1407, 3;
	shf.l.wrap.b32 	%r1411, %r1407, %r1406, 3;
	mov.b64 	%rd864, {%r1411, %r1410};
	shr.u64 	%rd865, %rd3400, 6;
	xor.b64  	%rd866, %rd863, %rd865;
	xor.b64  	%rd867, %rd866, %rd864;
	shr.u64 	%rd868, %rd3386, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1412,%dummy}, %rd3386;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1413}, %rd3386;
	}
	shf.r.wrap.b32 	%r1414, %r1413, %r1412, 1;
	shf.r.wrap.b32 	%r1415, %r1412, %r1413, 1;
	mov.b64 	%rd869, {%r1415, %r1414};
	xor.b64  	%rd870, %rd869, %rd868;
	shf.r.wrap.b32 	%r1416, %r1413, %r1412, 8;
	shf.r.wrap.b32 	%r1417, %r1412, %r1413, 8;
	mov.b64 	%rd871, {%r1417, %r1416};
	xor.b64  	%rd872, %rd870, %rd871;
	add.s64 	%rd873, %rd3395, %rd3402;
	add.s64 	%rd874, %rd873, %rd867;
	add.s64 	%rd3402, %rd874, %rd872;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1418,%dummy}, %rd3401;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1419}, %rd3401;
	}
	shf.r.wrap.b32 	%r1420, %r1419, %r1418, 19;
	shf.r.wrap.b32 	%r1421, %r1418, %r1419, 19;
	mov.b64 	%rd875, {%r1421, %r1420};
	shf.l.wrap.b32 	%r1422, %r1418, %r1419, 3;
	shf.l.wrap.b32 	%r1423, %r1419, %r1418, 3;
	mov.b64 	%rd876, {%r1423, %r1422};
	shr.u64 	%rd877, %rd3401, 6;
	xor.b64  	%rd878, %rd875, %rd877;
	xor.b64  	%rd879, %rd878, %rd876;
	shr.u64 	%rd880, %rd3385, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1424,%dummy}, %rd3385;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1425}, %rd3385;
	}
	shf.r.wrap.b32 	%r1426, %r1425, %r1424, 1;
	shf.r.wrap.b32 	%r1427, %r1424, %r1425, 1;
	mov.b64 	%rd881, {%r1427, %r1426};
	xor.b64  	%rd882, %rd881, %rd880;
	shf.r.wrap.b32 	%r1428, %r1425, %r1424, 8;
	shf.r.wrap.b32 	%r1429, %r1424, %r1425, 8;
	mov.b64 	%rd883, {%r1429, %r1428};
	xor.b64  	%rd884, %rd882, %rd883;
	add.s64 	%rd885, %rd3396, %rd3386;
	add.s64 	%rd886, %rd885, %rd879;
	add.s64 	%rd3386, %rd886, %rd884;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1430,%dummy}, %rd3402;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1431}, %rd3402;
	}
	shf.r.wrap.b32 	%r1432, %r1431, %r1430, 19;
	shf.r.wrap.b32 	%r1433, %r1430, %r1431, 19;
	mov.b64 	%rd887, {%r1433, %r1432};
	shf.l.wrap.b32 	%r1434, %r1430, %r1431, 3;
	shf.l.wrap.b32 	%r1435, %r1431, %r1430, 3;
	mov.b64 	%rd888, {%r1435, %r1434};
	shr.u64 	%rd889, %rd3402, 6;
	xor.b64  	%rd890, %rd887, %rd889;
	xor.b64  	%rd891, %rd890, %rd888;
	shr.u64 	%rd892, %rd3384, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1436,%dummy}, %rd3384;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1437}, %rd3384;
	}
	shf.r.wrap.b32 	%r1438, %r1437, %r1436, 1;
	shf.r.wrap.b32 	%r1439, %r1436, %r1437, 1;
	mov.b64 	%rd893, {%r1439, %r1438};
	xor.b64  	%rd894, %rd893, %rd892;
	shf.r.wrap.b32 	%r1440, %r1437, %r1436, 8;
	shf.r.wrap.b32 	%r1441, %r1436, %r1437, 8;
	mov.b64 	%rd895, {%r1441, %r1440};
	xor.b64  	%rd896, %rd894, %rd895;
	add.s64 	%rd897, %rd3397, %rd3385;
	add.s64 	%rd898, %rd897, %rd891;
	add.s64 	%rd3385, %rd898, %rd896;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1442,%dummy}, %rd3386;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1443}, %rd3386;
	}
	shf.r.wrap.b32 	%r1444, %r1443, %r1442, 19;
	shf.r.wrap.b32 	%r1445, %r1442, %r1443, 19;
	mov.b64 	%rd899, {%r1445, %r1444};
	shf.l.wrap.b32 	%r1446, %r1442, %r1443, 3;
	shf.l.wrap.b32 	%r1447, %r1443, %r1442, 3;
	mov.b64 	%rd900, {%r1447, %r1446};
	shr.u64 	%rd901, %rd3386, 6;
	xor.b64  	%rd902, %rd899, %rd901;
	xor.b64  	%rd903, %rd902, %rd900;
	shr.u64 	%rd904, %rd3383, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1448,%dummy}, %rd3383;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1449}, %rd3383;
	}
	shf.r.wrap.b32 	%r1450, %r1449, %r1448, 1;
	shf.r.wrap.b32 	%r1451, %r1448, %r1449, 1;
	mov.b64 	%rd905, {%r1451, %r1450};
	xor.b64  	%rd906, %rd905, %rd904;
	shf.r.wrap.b32 	%r1452, %r1449, %r1448, 8;
	shf.r.wrap.b32 	%r1453, %r1448, %r1449, 8;
	mov.b64 	%rd907, {%r1453, %r1452};
	xor.b64  	%rd908, %rd906, %rd907;
	add.s64 	%rd909, %rd3398, %rd3384;
	add.s64 	%rd910, %rd909, %rd903;
	add.s64 	%rd3384, %rd910, %rd908;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1454,%dummy}, %rd3385;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1455}, %rd3385;
	}
	shf.r.wrap.b32 	%r1456, %r1455, %r1454, 19;
	shf.r.wrap.b32 	%r1457, %r1454, %r1455, 19;
	mov.b64 	%rd911, {%r1457, %r1456};
	shf.l.wrap.b32 	%r1458, %r1454, %r1455, 3;
	shf.l.wrap.b32 	%r1459, %r1455, %r1454, 3;
	mov.b64 	%rd912, {%r1459, %r1458};
	shr.u64 	%rd913, %rd3385, 6;
	xor.b64  	%rd914, %rd911, %rd913;
	xor.b64  	%rd915, %rd914, %rd912;
	shr.u64 	%rd916, %rd3382, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1460,%dummy}, %rd3382;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1461}, %rd3382;
	}
	shf.r.wrap.b32 	%r1462, %r1461, %r1460, 1;
	shf.r.wrap.b32 	%r1463, %r1460, %r1461, 1;
	mov.b64 	%rd917, {%r1463, %r1462};
	xor.b64  	%rd918, %rd917, %rd916;
	shf.r.wrap.b32 	%r1464, %r1461, %r1460, 8;
	shf.r.wrap.b32 	%r1465, %r1460, %r1461, 8;
	mov.b64 	%rd919, {%r1465, %r1464};
	xor.b64  	%rd920, %rd918, %rd919;
	add.s64 	%rd921, %rd3399, %rd3383;
	add.s64 	%rd922, %rd921, %rd915;
	add.s64 	%rd3383, %rd922, %rd920;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1466,%dummy}, %rd3384;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1467}, %rd3384;
	}
	shf.r.wrap.b32 	%r1468, %r1467, %r1466, 19;
	shf.r.wrap.b32 	%r1469, %r1466, %r1467, 19;
	mov.b64 	%rd923, {%r1469, %r1468};
	shf.l.wrap.b32 	%r1470, %r1466, %r1467, 3;
	shf.l.wrap.b32 	%r1471, %r1467, %r1466, 3;
	mov.b64 	%rd924, {%r1471, %r1470};
	shr.u64 	%rd925, %rd3384, 6;
	xor.b64  	%rd926, %rd923, %rd925;
	xor.b64  	%rd927, %rd926, %rd924;
	shr.u64 	%rd928, %rd3381, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1472,%dummy}, %rd3381;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1473}, %rd3381;
	}
	shf.r.wrap.b32 	%r1474, %r1473, %r1472, 1;
	shf.r.wrap.b32 	%r1475, %r1472, %r1473, 1;
	mov.b64 	%rd929, {%r1475, %r1474};
	xor.b64  	%rd930, %rd929, %rd928;
	shf.r.wrap.b32 	%r1476, %r1473, %r1472, 8;
	shf.r.wrap.b32 	%r1477, %r1472, %r1473, 8;
	mov.b64 	%rd931, {%r1477, %r1476};
	xor.b64  	%rd932, %rd930, %rd931;
	add.s64 	%rd933, %rd3400, %rd3382;
	add.s64 	%rd934, %rd933, %rd927;
	add.s64 	%rd3382, %rd934, %rd932;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1478,%dummy}, %rd3383;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1479}, %rd3383;
	}
	shf.r.wrap.b32 	%r1480, %r1479, %r1478, 19;
	shf.r.wrap.b32 	%r1481, %r1478, %r1479, 19;
	mov.b64 	%rd935, {%r1481, %r1480};
	shf.l.wrap.b32 	%r1482, %r1478, %r1479, 3;
	shf.l.wrap.b32 	%r1483, %r1479, %r1478, 3;
	mov.b64 	%rd936, {%r1483, %r1482};
	shr.u64 	%rd937, %rd3383, 6;
	xor.b64  	%rd938, %rd935, %rd937;
	xor.b64  	%rd939, %rd938, %rd936;
	shr.u64 	%rd940, %rd3380, 7;
	shf.r.wrap.b32 	%r1484, %r1323, %r1322, 1;
	shf.r.wrap.b32 	%r1485, %r1322, %r1323, 1;
	mov.b64 	%rd941, {%r1485, %r1484};
	xor.b64  	%rd942, %rd941, %rd940;
	shf.r.wrap.b32 	%r1486, %r1323, %r1322, 8;
	shf.r.wrap.b32 	%r1487, %r1322, %r1323, 8;
	mov.b64 	%rd943, {%r1487, %r1486};
	xor.b64  	%rd944, %rd942, %rd943;
	add.s64 	%rd945, %rd3401, %rd3381;
	add.s64 	%rd946, %rd945, %rd939;
	add.s64 	%rd3381, %rd946, %rd944;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1488,%dummy}, %rd3382;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1489}, %rd3382;
	}
	shf.r.wrap.b32 	%r1490, %r1489, %r1488, 19;
	shf.r.wrap.b32 	%r1491, %r1488, %r1489, 19;
	mov.b64 	%rd947, {%r1491, %r1490};
	shf.l.wrap.b32 	%r1492, %r1488, %r1489, 3;
	shf.l.wrap.b32 	%r1493, %r1489, %r1488, 3;
	mov.b64 	%rd948, {%r1493, %r1492};
	shr.u64 	%rd949, %rd3382, 6;
	xor.b64  	%rd950, %rd947, %rd949;
	xor.b64  	%rd951, %rd950, %rd948;
	shr.u64 	%rd952, %rd3379, 7;
	shf.r.wrap.b32 	%r1494, %r1335, %r1334, 1;
	shf.r.wrap.b32 	%r1495, %r1334, %r1335, 1;
	mov.b64 	%rd953, {%r1495, %r1494};
	xor.b64  	%rd954, %rd953, %rd952;
	shf.r.wrap.b32 	%r1496, %r1335, %r1334, 8;
	shf.r.wrap.b32 	%r1497, %r1334, %r1335, 8;
	mov.b64 	%rd955, {%r1497, %r1496};
	xor.b64  	%rd956, %rd954, %rd955;
	add.s64 	%rd957, %rd3402, %rd3380;
	add.s64 	%rd958, %rd957, %rd951;
	add.s64 	%rd3380, %rd958, %rd956;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1498,%dummy}, %rd3381;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1499}, %rd3381;
	}
	shf.r.wrap.b32 	%r1500, %r1499, %r1498, 19;
	shf.r.wrap.b32 	%r1501, %r1498, %r1499, 19;
	mov.b64 	%rd959, {%r1501, %r1500};
	shf.l.wrap.b32 	%r1502, %r1498, %r1499, 3;
	shf.l.wrap.b32 	%r1503, %r1499, %r1498, 3;
	mov.b64 	%rd960, {%r1503, %r1502};
	shr.u64 	%rd961, %rd3381, 6;
	xor.b64  	%rd962, %rd959, %rd961;
	xor.b64  	%rd963, %rd962, %rd960;
	shf.r.wrap.b32 	%r1504, %r1347, %r1346, 1;
	shf.r.wrap.b32 	%r1505, %r1346, %r1347, 1;
	mov.b64 	%rd964, {%r1505, %r1504};
	shf.r.wrap.b32 	%r1506, %r1347, %r1346, 8;
	shf.r.wrap.b32 	%r1507, %r1346, %r1347, 8;
	mov.b64 	%rd965, {%r1507, %r1506};
	shr.u64 	%rd966, %rd3395, 7;
	xor.b64  	%rd967, %rd964, %rd966;
	xor.b64  	%rd968, %rd967, %rd965;
	add.s64 	%rd969, %rd3386, %rd3379;
	add.s64 	%rd970, %rd969, %rd963;
	add.s64 	%rd3379, %rd970, %rd968;
	mul.wide.s32 	%rd971, %r8703, 8;
	mov.u64 	%rd972, k_sha512;
	add.s64 	%rd973, %rd972, %rd971;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1508,%dummy}, %rd3391;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1509}, %rd3391;
	}
	shf.r.wrap.b32 	%r1510, %r1509, %r1508, 18;
	shf.r.wrap.b32 	%r1511, %r1508, %r1509, 18;
	mov.b64 	%rd974, {%r1511, %r1510};
	shf.r.wrap.b32 	%r1512, %r1509, %r1508, 14;
	shf.r.wrap.b32 	%r1513, %r1508, %r1509, 14;
	mov.b64 	%rd975, {%r1513, %r1512};
	xor.b64  	%rd976, %rd974, %rd975;
	shf.l.wrap.b32 	%r1514, %r1508, %r1509, 23;
	shf.l.wrap.b32 	%r1515, %r1509, %r1508, 23;
	mov.b64 	%rd977, {%r1515, %r1514};
	xor.b64  	%rd978, %rd976, %rd977;
	xor.b64  	%rd979, %rd3392, %rd3393;
	and.b64  	%rd980, %rd979, %rd3391;
	xor.b64  	%rd981, %rd980, %rd3393;
	add.s64 	%rd982, %rd981, %rd3394;
	add.s64 	%rd983, %rd982, %rd3395;
	ld.const.u64 	%rd984, [%rd973];
	add.s64 	%rd985, %rd983, %rd984;
	add.s64 	%rd986, %rd985, %rd978;
	add.s64 	%rd987, %rd986, %rd3390;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1516}, %rd3387;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1517,%dummy}, %rd3387;
	}
	shf.l.wrap.b32 	%r1518, %r1517, %r1516, 30;
	shf.l.wrap.b32 	%r1519, %r1516, %r1517, 30;
	mov.b64 	%rd988, {%r1519, %r1518};
	shf.r.wrap.b32 	%r1520, %r1516, %r1517, 28;
	shf.r.wrap.b32 	%r1521, %r1517, %r1516, 28;
	mov.b64 	%rd989, {%r1521, %r1520};
	xor.b64  	%rd990, %rd988, %rd989;
	shf.l.wrap.b32 	%r1522, %r1517, %r1516, 25;
	shf.l.wrap.b32 	%r1523, %r1516, %r1517, 25;
	mov.b64 	%rd991, {%r1523, %r1522};
	xor.b64  	%rd992, %rd990, %rd991;
	xor.b64  	%rd993, %rd3387, %rd3388;
	xor.b64  	%rd994, %rd3387, %rd3389;
	and.b64  	%rd995, %rd993, %rd994;
	xor.b64  	%rd996, %rd995, %rd3387;
	add.s64 	%rd997, %rd986, %rd996;
	add.s64 	%rd998, %rd997, %rd992;
	add.s32 	%r1524, %r8703, 1;
	mul.wide.s32 	%rd999, %r1524, 8;
	add.s64 	%rd1000, %rd972, %rd999;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1525,%dummy}, %rd987;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1526}, %rd987;
	}
	shf.r.wrap.b32 	%r1527, %r1526, %r1525, 14;
	shf.r.wrap.b32 	%r1528, %r1525, %r1526, 14;
	mov.b64 	%rd1001, {%r1528, %r1527};
	shf.r.wrap.b32 	%r1529, %r1526, %r1525, 18;
	shf.r.wrap.b32 	%r1530, %r1525, %r1526, 18;
	mov.b64 	%rd1002, {%r1530, %r1529};
	xor.b64  	%rd1003, %rd1002, %rd1001;
	shf.l.wrap.b32 	%r1531, %r1525, %r1526, 23;
	shf.l.wrap.b32 	%r1532, %r1526, %r1525, 23;
	mov.b64 	%rd1004, {%r1532, %r1531};
	xor.b64  	%rd1005, %rd1003, %rd1004;
	xor.b64  	%rd1006, %rd3391, %rd3392;
	and.b64  	%rd1007, %rd987, %rd1006;
	xor.b64  	%rd1008, %rd1007, %rd3392;
	add.s64 	%rd1009, %rd3396, %rd3393;
	ld.const.u64 	%rd1010, [%rd1000];
	add.s64 	%rd1011, %rd1009, %rd1010;
	add.s64 	%rd1012, %rd1011, %rd1008;
	add.s64 	%rd1013, %rd1012, %rd1005;
	add.s64 	%rd1014, %rd1013, %rd3389;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1533,%dummy}, %rd998;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1534}, %rd998;
	}
	shf.r.wrap.b32 	%r1535, %r1534, %r1533, 28;
	shf.r.wrap.b32 	%r1536, %r1533, %r1534, 28;
	mov.b64 	%rd1015, {%r1536, %r1535};
	shf.l.wrap.b32 	%r1537, %r1533, %r1534, 30;
	shf.l.wrap.b32 	%r1538, %r1534, %r1533, 30;
	mov.b64 	%rd1016, {%r1538, %r1537};
	xor.b64  	%rd1017, %rd1016, %rd1015;
	shf.l.wrap.b32 	%r1539, %r1533, %r1534, 25;
	shf.l.wrap.b32 	%r1540, %r1534, %r1533, 25;
	mov.b64 	%rd1018, {%r1540, %r1539};
	xor.b64  	%rd1019, %rd1017, %rd1018;
	xor.b64  	%rd1020, %rd998, %rd3388;
	xor.b64  	%rd1021, %rd998, %rd3387;
	and.b64  	%rd1022, %rd1021, %rd1020;
	xor.b64  	%rd1023, %rd1022, %rd998;
	add.s64 	%rd1024, %rd1013, %rd1023;
	add.s64 	%rd1025, %rd1024, %rd1019;
	add.s32 	%r1541, %r8703, 2;
	mul.wide.s32 	%rd1026, %r1541, 8;
	add.s64 	%rd1027, %rd972, %rd1026;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1542,%dummy}, %rd1014;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1543}, %rd1014;
	}
	shf.r.wrap.b32 	%r1544, %r1543, %r1542, 14;
	shf.r.wrap.b32 	%r1545, %r1542, %r1543, 14;
	mov.b64 	%rd1028, {%r1545, %r1544};
	shf.r.wrap.b32 	%r1546, %r1543, %r1542, 18;
	shf.r.wrap.b32 	%r1547, %r1542, %r1543, 18;
	mov.b64 	%rd1029, {%r1547, %r1546};
	xor.b64  	%rd1030, %rd1029, %rd1028;
	shf.l.wrap.b32 	%r1548, %r1542, %r1543, 23;
	shf.l.wrap.b32 	%r1549, %r1543, %r1542, 23;
	mov.b64 	%rd1031, {%r1549, %r1548};
	xor.b64  	%rd1032, %rd1030, %rd1031;
	xor.b64  	%rd1033, %rd987, %rd3391;
	and.b64  	%rd1034, %rd1014, %rd1033;
	xor.b64  	%rd1035, %rd1034, %rd3391;
	add.s64 	%rd1036, %rd3397, %rd3392;
	ld.const.u64 	%rd1037, [%rd1027];
	add.s64 	%rd1038, %rd1036, %rd1037;
	add.s64 	%rd1039, %rd1038, %rd1035;
	add.s64 	%rd1040, %rd1039, %rd1032;
	add.s64 	%rd1041, %rd1040, %rd3388;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1550,%dummy}, %rd1025;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1551}, %rd1025;
	}
	shf.r.wrap.b32 	%r1552, %r1551, %r1550, 28;
	shf.r.wrap.b32 	%r1553, %r1550, %r1551, 28;
	mov.b64 	%rd1042, {%r1553, %r1552};
	shf.l.wrap.b32 	%r1554, %r1550, %r1551, 30;
	shf.l.wrap.b32 	%r1555, %r1551, %r1550, 30;
	mov.b64 	%rd1043, {%r1555, %r1554};
	xor.b64  	%rd1044, %rd1043, %rd1042;
	shf.l.wrap.b32 	%r1556, %r1550, %r1551, 25;
	shf.l.wrap.b32 	%r1557, %r1551, %r1550, 25;
	mov.b64 	%rd1045, {%r1557, %r1556};
	xor.b64  	%rd1046, %rd1044, %rd1045;
	xor.b64  	%rd1047, %rd1025, %rd3387;
	xor.b64  	%rd1048, %rd1025, %rd998;
	and.b64  	%rd1049, %rd1048, %rd1047;
	xor.b64  	%rd1050, %rd1049, %rd1025;
	add.s64 	%rd1051, %rd1040, %rd1050;
	add.s64 	%rd1052, %rd1051, %rd1046;
	add.s32 	%r1558, %r8703, 3;
	mul.wide.s32 	%rd1053, %r1558, 8;
	add.s64 	%rd1054, %rd972, %rd1053;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1559,%dummy}, %rd1041;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1560}, %rd1041;
	}
	shf.r.wrap.b32 	%r1561, %r1560, %r1559, 14;
	shf.r.wrap.b32 	%r1562, %r1559, %r1560, 14;
	mov.b64 	%rd1055, {%r1562, %r1561};
	shf.r.wrap.b32 	%r1563, %r1560, %r1559, 18;
	shf.r.wrap.b32 	%r1564, %r1559, %r1560, 18;
	mov.b64 	%rd1056, {%r1564, %r1563};
	xor.b64  	%rd1057, %rd1056, %rd1055;
	shf.l.wrap.b32 	%r1565, %r1559, %r1560, 23;
	shf.l.wrap.b32 	%r1566, %r1560, %r1559, 23;
	mov.b64 	%rd1058, {%r1566, %r1565};
	xor.b64  	%rd1059, %rd1057, %rd1058;
	xor.b64  	%rd1060, %rd1014, %rd987;
	and.b64  	%rd1061, %rd1041, %rd1060;
	xor.b64  	%rd1062, %rd1061, %rd987;
	add.s64 	%rd1063, %rd3398, %rd3391;
	ld.const.u64 	%rd1064, [%rd1054];
	add.s64 	%rd1065, %rd1063, %rd1064;
	add.s64 	%rd1066, %rd1065, %rd1062;
	add.s64 	%rd1067, %rd1066, %rd1059;
	add.s64 	%rd1068, %rd1067, %rd3387;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1567,%dummy}, %rd1052;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1568}, %rd1052;
	}
	shf.r.wrap.b32 	%r1569, %r1568, %r1567, 28;
	shf.r.wrap.b32 	%r1570, %r1567, %r1568, 28;
	mov.b64 	%rd1069, {%r1570, %r1569};
	shf.l.wrap.b32 	%r1571, %r1567, %r1568, 30;
	shf.l.wrap.b32 	%r1572, %r1568, %r1567, 30;
	mov.b64 	%rd1070, {%r1572, %r1571};
	xor.b64  	%rd1071, %rd1070, %rd1069;
	shf.l.wrap.b32 	%r1573, %r1567, %r1568, 25;
	shf.l.wrap.b32 	%r1574, %r1568, %r1567, 25;
	mov.b64 	%rd1072, {%r1574, %r1573};
	xor.b64  	%rd1073, %rd1071, %rd1072;
	xor.b64  	%rd1074, %rd1052, %rd998;
	xor.b64  	%rd1075, %rd1052, %rd1025;
	and.b64  	%rd1076, %rd1075, %rd1074;
	xor.b64  	%rd1077, %rd1076, %rd1052;
	add.s64 	%rd1078, %rd1067, %rd1077;
	add.s64 	%rd1079, %rd1078, %rd1073;
	add.s32 	%r1575, %r8703, 4;
	mul.wide.s32 	%rd1080, %r1575, 8;
	add.s64 	%rd1081, %rd972, %rd1080;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1576,%dummy}, %rd1068;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1577}, %rd1068;
	}
	shf.r.wrap.b32 	%r1578, %r1577, %r1576, 14;
	shf.r.wrap.b32 	%r1579, %r1576, %r1577, 14;
	mov.b64 	%rd1082, {%r1579, %r1578};
	shf.r.wrap.b32 	%r1580, %r1577, %r1576, 18;
	shf.r.wrap.b32 	%r1581, %r1576, %r1577, 18;
	mov.b64 	%rd1083, {%r1581, %r1580};
	xor.b64  	%rd1084, %rd1083, %rd1082;
	shf.l.wrap.b32 	%r1582, %r1576, %r1577, 23;
	shf.l.wrap.b32 	%r1583, %r1577, %r1576, 23;
	mov.b64 	%rd1085, {%r1583, %r1582};
	xor.b64  	%rd1086, %rd1084, %rd1085;
	xor.b64  	%rd1087, %rd1041, %rd1014;
	and.b64  	%rd1088, %rd1068, %rd1087;
	xor.b64  	%rd1089, %rd1088, %rd1014;
	add.s64 	%rd1090, %rd987, %rd3399;
	ld.const.u64 	%rd1091, [%rd1081];
	add.s64 	%rd1092, %rd1090, %rd1091;
	add.s64 	%rd1093, %rd1092, %rd1089;
	add.s64 	%rd1094, %rd1093, %rd1086;
	add.s64 	%rd1095, %rd1094, %rd998;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1584,%dummy}, %rd1079;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1585}, %rd1079;
	}
	shf.r.wrap.b32 	%r1586, %r1585, %r1584, 28;
	shf.r.wrap.b32 	%r1587, %r1584, %r1585, 28;
	mov.b64 	%rd1096, {%r1587, %r1586};
	shf.l.wrap.b32 	%r1588, %r1584, %r1585, 30;
	shf.l.wrap.b32 	%r1589, %r1585, %r1584, 30;
	mov.b64 	%rd1097, {%r1589, %r1588};
	xor.b64  	%rd1098, %rd1097, %rd1096;
	shf.l.wrap.b32 	%r1590, %r1584, %r1585, 25;
	shf.l.wrap.b32 	%r1591, %r1585, %r1584, 25;
	mov.b64 	%rd1099, {%r1591, %r1590};
	xor.b64  	%rd1100, %rd1098, %rd1099;
	xor.b64  	%rd1101, %rd1079, %rd1025;
	xor.b64  	%rd1102, %rd1079, %rd1052;
	and.b64  	%rd1103, %rd1102, %rd1101;
	xor.b64  	%rd1104, %rd1103, %rd1079;
	add.s64 	%rd1105, %rd1094, %rd1104;
	add.s64 	%rd1106, %rd1105, %rd1100;
	add.s32 	%r1592, %r8703, 5;
	mul.wide.s32 	%rd1107, %r1592, 8;
	add.s64 	%rd1108, %rd972, %rd1107;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1593,%dummy}, %rd1095;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1594}, %rd1095;
	}
	shf.r.wrap.b32 	%r1595, %r1594, %r1593, 14;
	shf.r.wrap.b32 	%r1596, %r1593, %r1594, 14;
	mov.b64 	%rd1109, {%r1596, %r1595};
	shf.r.wrap.b32 	%r1597, %r1594, %r1593, 18;
	shf.r.wrap.b32 	%r1598, %r1593, %r1594, 18;
	mov.b64 	%rd1110, {%r1598, %r1597};
	xor.b64  	%rd1111, %rd1110, %rd1109;
	shf.l.wrap.b32 	%r1599, %r1593, %r1594, 23;
	shf.l.wrap.b32 	%r1600, %r1594, %r1593, 23;
	mov.b64 	%rd1112, {%r1600, %r1599};
	xor.b64  	%rd1113, %rd1111, %rd1112;
	xor.b64  	%rd1114, %rd1068, %rd1041;
	and.b64  	%rd1115, %rd1095, %rd1114;
	xor.b64  	%rd1116, %rd1115, %rd1041;
	add.s64 	%rd1117, %rd1014, %rd3400;
	ld.const.u64 	%rd1118, [%rd1108];
	add.s64 	%rd1119, %rd1117, %rd1118;
	add.s64 	%rd1120, %rd1119, %rd1116;
	add.s64 	%rd1121, %rd1120, %rd1113;
	add.s64 	%rd1122, %rd1121, %rd1025;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1601,%dummy}, %rd1106;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1602}, %rd1106;
	}
	shf.r.wrap.b32 	%r1603, %r1602, %r1601, 28;
	shf.r.wrap.b32 	%r1604, %r1601, %r1602, 28;
	mov.b64 	%rd1123, {%r1604, %r1603};
	shf.l.wrap.b32 	%r1605, %r1601, %r1602, 30;
	shf.l.wrap.b32 	%r1606, %r1602, %r1601, 30;
	mov.b64 	%rd1124, {%r1606, %r1605};
	xor.b64  	%rd1125, %rd1124, %rd1123;
	shf.l.wrap.b32 	%r1607, %r1601, %r1602, 25;
	shf.l.wrap.b32 	%r1608, %r1602, %r1601, 25;
	mov.b64 	%rd1126, {%r1608, %r1607};
	xor.b64  	%rd1127, %rd1125, %rd1126;
	xor.b64  	%rd1128, %rd1106, %rd1052;
	xor.b64  	%rd1129, %rd1106, %rd1079;
	and.b64  	%rd1130, %rd1129, %rd1128;
	xor.b64  	%rd1131, %rd1130, %rd1106;
	add.s64 	%rd1132, %rd1121, %rd1131;
	add.s64 	%rd1133, %rd1132, %rd1127;
	add.s32 	%r1609, %r8703, 6;
	mul.wide.s32 	%rd1134, %r1609, 8;
	add.s64 	%rd1135, %rd972, %rd1134;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1610,%dummy}, %rd1122;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1611}, %rd1122;
	}
	shf.r.wrap.b32 	%r1612, %r1611, %r1610, 14;
	shf.r.wrap.b32 	%r1613, %r1610, %r1611, 14;
	mov.b64 	%rd1136, {%r1613, %r1612};
	shf.r.wrap.b32 	%r1614, %r1611, %r1610, 18;
	shf.r.wrap.b32 	%r1615, %r1610, %r1611, 18;
	mov.b64 	%rd1137, {%r1615, %r1614};
	xor.b64  	%rd1138, %rd1137, %rd1136;
	shf.l.wrap.b32 	%r1616, %r1610, %r1611, 23;
	shf.l.wrap.b32 	%r1617, %r1611, %r1610, 23;
	mov.b64 	%rd1139, {%r1617, %r1616};
	xor.b64  	%rd1140, %rd1138, %rd1139;
	xor.b64  	%rd1141, %rd1095, %rd1068;
	and.b64  	%rd1142, %rd1122, %rd1141;
	xor.b64  	%rd1143, %rd1142, %rd1068;
	add.s64 	%rd1144, %rd1041, %rd3401;
	ld.const.u64 	%rd1145, [%rd1135];
	add.s64 	%rd1146, %rd1144, %rd1145;
	add.s64 	%rd1147, %rd1146, %rd1143;
	add.s64 	%rd1148, %rd1147, %rd1140;
	add.s64 	%rd1149, %rd1148, %rd1052;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1618,%dummy}, %rd1133;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1619}, %rd1133;
	}
	shf.r.wrap.b32 	%r1620, %r1619, %r1618, 28;
	shf.r.wrap.b32 	%r1621, %r1618, %r1619, 28;
	mov.b64 	%rd1150, {%r1621, %r1620};
	shf.l.wrap.b32 	%r1622, %r1618, %r1619, 30;
	shf.l.wrap.b32 	%r1623, %r1619, %r1618, 30;
	mov.b64 	%rd1151, {%r1623, %r1622};
	xor.b64  	%rd1152, %rd1151, %rd1150;
	shf.l.wrap.b32 	%r1624, %r1618, %r1619, 25;
	shf.l.wrap.b32 	%r1625, %r1619, %r1618, 25;
	mov.b64 	%rd1153, {%r1625, %r1624};
	xor.b64  	%rd1154, %rd1152, %rd1153;
	xor.b64  	%rd1155, %rd1133, %rd1079;
	xor.b64  	%rd1156, %rd1133, %rd1106;
	and.b64  	%rd1157, %rd1156, %rd1155;
	xor.b64  	%rd1158, %rd1157, %rd1133;
	add.s64 	%rd1159, %rd1148, %rd1158;
	add.s64 	%rd1160, %rd1159, %rd1154;
	add.s32 	%r1626, %r8703, 7;
	mul.wide.s32 	%rd1161, %r1626, 8;
	add.s64 	%rd1162, %rd972, %rd1161;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1627,%dummy}, %rd1149;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1628}, %rd1149;
	}
	shf.r.wrap.b32 	%r1629, %r1628, %r1627, 14;
	shf.r.wrap.b32 	%r1630, %r1627, %r1628, 14;
	mov.b64 	%rd1163, {%r1630, %r1629};
	shf.r.wrap.b32 	%r1631, %r1628, %r1627, 18;
	shf.r.wrap.b32 	%r1632, %r1627, %r1628, 18;
	mov.b64 	%rd1164, {%r1632, %r1631};
	xor.b64  	%rd1165, %rd1164, %rd1163;
	shf.l.wrap.b32 	%r1633, %r1627, %r1628, 23;
	shf.l.wrap.b32 	%r1634, %r1628, %r1627, 23;
	mov.b64 	%rd1166, {%r1634, %r1633};
	xor.b64  	%rd1167, %rd1165, %rd1166;
	xor.b64  	%rd1168, %rd1122, %rd1095;
	and.b64  	%rd1169, %rd1149, %rd1168;
	xor.b64  	%rd1170, %rd1169, %rd1095;
	add.s64 	%rd1171, %rd1068, %rd3402;
	ld.const.u64 	%rd1172, [%rd1162];
	add.s64 	%rd1173, %rd1171, %rd1172;
	add.s64 	%rd1174, %rd1173, %rd1170;
	add.s64 	%rd1175, %rd1174, %rd1167;
	add.s64 	%rd1176, %rd1175, %rd1079;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1635,%dummy}, %rd1160;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1636}, %rd1160;
	}
	shf.r.wrap.b32 	%r1637, %r1636, %r1635, 28;
	shf.r.wrap.b32 	%r1638, %r1635, %r1636, 28;
	mov.b64 	%rd1177, {%r1638, %r1637};
	shf.l.wrap.b32 	%r1639, %r1635, %r1636, 30;
	shf.l.wrap.b32 	%r1640, %r1636, %r1635, 30;
	mov.b64 	%rd1178, {%r1640, %r1639};
	xor.b64  	%rd1179, %rd1178, %rd1177;
	shf.l.wrap.b32 	%r1641, %r1635, %r1636, 25;
	shf.l.wrap.b32 	%r1642, %r1636, %r1635, 25;
	mov.b64 	%rd1180, {%r1642, %r1641};
	xor.b64  	%rd1181, %rd1179, %rd1180;
	xor.b64  	%rd1182, %rd1160, %rd1106;
	xor.b64  	%rd1183, %rd1160, %rd1133;
	and.b64  	%rd1184, %rd1183, %rd1182;
	xor.b64  	%rd1185, %rd1184, %rd1160;
	add.s64 	%rd1186, %rd1175, %rd1185;
	add.s64 	%rd1187, %rd1186, %rd1181;
	add.s32 	%r1643, %r8703, 8;
	mul.wide.s32 	%rd1188, %r1643, 8;
	add.s64 	%rd1189, %rd972, %rd1188;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1644,%dummy}, %rd1176;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1645}, %rd1176;
	}
	shf.r.wrap.b32 	%r1646, %r1645, %r1644, 14;
	shf.r.wrap.b32 	%r1647, %r1644, %r1645, 14;
	mov.b64 	%rd1190, {%r1647, %r1646};
	shf.r.wrap.b32 	%r1648, %r1645, %r1644, 18;
	shf.r.wrap.b32 	%r1649, %r1644, %r1645, 18;
	mov.b64 	%rd1191, {%r1649, %r1648};
	xor.b64  	%rd1192, %rd1191, %rd1190;
	shf.l.wrap.b32 	%r1650, %r1644, %r1645, 23;
	shf.l.wrap.b32 	%r1651, %r1645, %r1644, 23;
	mov.b64 	%rd1193, {%r1651, %r1650};
	xor.b64  	%rd1194, %rd1192, %rd1193;
	xor.b64  	%rd1195, %rd1149, %rd1122;
	and.b64  	%rd1196, %rd1176, %rd1195;
	xor.b64  	%rd1197, %rd1196, %rd1122;
	add.s64 	%rd1198, %rd1095, %rd3386;
	ld.const.u64 	%rd1199, [%rd1189];
	add.s64 	%rd1200, %rd1198, %rd1199;
	add.s64 	%rd1201, %rd1200, %rd1197;
	add.s64 	%rd1202, %rd1201, %rd1194;
	add.s64 	%rd1203, %rd1202, %rd1106;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1652,%dummy}, %rd1187;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1653}, %rd1187;
	}
	shf.r.wrap.b32 	%r1654, %r1653, %r1652, 28;
	shf.r.wrap.b32 	%r1655, %r1652, %r1653, 28;
	mov.b64 	%rd1204, {%r1655, %r1654};
	shf.l.wrap.b32 	%r1656, %r1652, %r1653, 30;
	shf.l.wrap.b32 	%r1657, %r1653, %r1652, 30;
	mov.b64 	%rd1205, {%r1657, %r1656};
	xor.b64  	%rd1206, %rd1205, %rd1204;
	shf.l.wrap.b32 	%r1658, %r1652, %r1653, 25;
	shf.l.wrap.b32 	%r1659, %r1653, %r1652, 25;
	mov.b64 	%rd1207, {%r1659, %r1658};
	xor.b64  	%rd1208, %rd1206, %rd1207;
	xor.b64  	%rd1209, %rd1187, %rd1133;
	xor.b64  	%rd1210, %rd1187, %rd1160;
	and.b64  	%rd1211, %rd1210, %rd1209;
	xor.b64  	%rd1212, %rd1211, %rd1187;
	add.s64 	%rd1213, %rd1202, %rd1212;
	add.s64 	%rd1214, %rd1213, %rd1208;
	add.s32 	%r1660, %r8703, 9;
	mul.wide.s32 	%rd1215, %r1660, 8;
	add.s64 	%rd1216, %rd972, %rd1215;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1661,%dummy}, %rd1203;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1662}, %rd1203;
	}
	shf.r.wrap.b32 	%r1663, %r1662, %r1661, 14;
	shf.r.wrap.b32 	%r1664, %r1661, %r1662, 14;
	mov.b64 	%rd1217, {%r1664, %r1663};
	shf.r.wrap.b32 	%r1665, %r1662, %r1661, 18;
	shf.r.wrap.b32 	%r1666, %r1661, %r1662, 18;
	mov.b64 	%rd1218, {%r1666, %r1665};
	xor.b64  	%rd1219, %rd1218, %rd1217;
	shf.l.wrap.b32 	%r1667, %r1661, %r1662, 23;
	shf.l.wrap.b32 	%r1668, %r1662, %r1661, 23;
	mov.b64 	%rd1220, {%r1668, %r1667};
	xor.b64  	%rd1221, %rd1219, %rd1220;
	xor.b64  	%rd1222, %rd1176, %rd1149;
	and.b64  	%rd1223, %rd1203, %rd1222;
	xor.b64  	%rd1224, %rd1223, %rd1149;
	add.s64 	%rd1225, %rd1122, %rd3385;
	ld.const.u64 	%rd1226, [%rd1216];
	add.s64 	%rd1227, %rd1225, %rd1226;
	add.s64 	%rd1228, %rd1227, %rd1224;
	add.s64 	%rd1229, %rd1228, %rd1221;
	add.s64 	%rd1230, %rd1229, %rd1133;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1669,%dummy}, %rd1214;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1670}, %rd1214;
	}
	shf.r.wrap.b32 	%r1671, %r1670, %r1669, 28;
	shf.r.wrap.b32 	%r1672, %r1669, %r1670, 28;
	mov.b64 	%rd1231, {%r1672, %r1671};
	shf.l.wrap.b32 	%r1673, %r1669, %r1670, 30;
	shf.l.wrap.b32 	%r1674, %r1670, %r1669, 30;
	mov.b64 	%rd1232, {%r1674, %r1673};
	xor.b64  	%rd1233, %rd1232, %rd1231;
	shf.l.wrap.b32 	%r1675, %r1669, %r1670, 25;
	shf.l.wrap.b32 	%r1676, %r1670, %r1669, 25;
	mov.b64 	%rd1234, {%r1676, %r1675};
	xor.b64  	%rd1235, %rd1233, %rd1234;
	xor.b64  	%rd1236, %rd1214, %rd1160;
	xor.b64  	%rd1237, %rd1214, %rd1187;
	and.b64  	%rd1238, %rd1237, %rd1236;
	xor.b64  	%rd1239, %rd1238, %rd1214;
	add.s64 	%rd1240, %rd1229, %rd1239;
	add.s64 	%rd1241, %rd1240, %rd1235;
	add.s32 	%r1677, %r8703, 10;
	mul.wide.s32 	%rd1242, %r1677, 8;
	add.s64 	%rd1243, %rd972, %rd1242;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1678,%dummy}, %rd1230;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1679}, %rd1230;
	}
	shf.r.wrap.b32 	%r1680, %r1679, %r1678, 14;
	shf.r.wrap.b32 	%r1681, %r1678, %r1679, 14;
	mov.b64 	%rd1244, {%r1681, %r1680};
	shf.r.wrap.b32 	%r1682, %r1679, %r1678, 18;
	shf.r.wrap.b32 	%r1683, %r1678, %r1679, 18;
	mov.b64 	%rd1245, {%r1683, %r1682};
	xor.b64  	%rd1246, %rd1245, %rd1244;
	shf.l.wrap.b32 	%r1684, %r1678, %r1679, 23;
	shf.l.wrap.b32 	%r1685, %r1679, %r1678, 23;
	mov.b64 	%rd1247, {%r1685, %r1684};
	xor.b64  	%rd1248, %rd1246, %rd1247;
	xor.b64  	%rd1249, %rd1203, %rd1176;
	and.b64  	%rd1250, %rd1230, %rd1249;
	xor.b64  	%rd1251, %rd1250, %rd1176;
	add.s64 	%rd1252, %rd1149, %rd3384;
	ld.const.u64 	%rd1253, [%rd1243];
	add.s64 	%rd1254, %rd1252, %rd1253;
	add.s64 	%rd1255, %rd1254, %rd1251;
	add.s64 	%rd1256, %rd1255, %rd1248;
	add.s64 	%rd1257, %rd1256, %rd1160;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1686,%dummy}, %rd1241;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1687}, %rd1241;
	}
	shf.r.wrap.b32 	%r1688, %r1687, %r1686, 28;
	shf.r.wrap.b32 	%r1689, %r1686, %r1687, 28;
	mov.b64 	%rd1258, {%r1689, %r1688};
	shf.l.wrap.b32 	%r1690, %r1686, %r1687, 30;
	shf.l.wrap.b32 	%r1691, %r1687, %r1686, 30;
	mov.b64 	%rd1259, {%r1691, %r1690};
	xor.b64  	%rd1260, %rd1259, %rd1258;
	shf.l.wrap.b32 	%r1692, %r1686, %r1687, 25;
	shf.l.wrap.b32 	%r1693, %r1687, %r1686, 25;
	mov.b64 	%rd1261, {%r1693, %r1692};
	xor.b64  	%rd1262, %rd1260, %rd1261;
	xor.b64  	%rd1263, %rd1241, %rd1187;
	xor.b64  	%rd1264, %rd1241, %rd1214;
	and.b64  	%rd1265, %rd1264, %rd1263;
	xor.b64  	%rd1266, %rd1265, %rd1241;
	add.s64 	%rd1267, %rd1256, %rd1266;
	add.s64 	%rd1268, %rd1267, %rd1262;
	add.s32 	%r1694, %r8703, 11;
	mul.wide.s32 	%rd1269, %r1694, 8;
	add.s64 	%rd1270, %rd972, %rd1269;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1695,%dummy}, %rd1257;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1696}, %rd1257;
	}
	shf.r.wrap.b32 	%r1697, %r1696, %r1695, 14;
	shf.r.wrap.b32 	%r1698, %r1695, %r1696, 14;
	mov.b64 	%rd1271, {%r1698, %r1697};
	shf.r.wrap.b32 	%r1699, %r1696, %r1695, 18;
	shf.r.wrap.b32 	%r1700, %r1695, %r1696, 18;
	mov.b64 	%rd1272, {%r1700, %r1699};
	xor.b64  	%rd1273, %rd1272, %rd1271;
	shf.l.wrap.b32 	%r1701, %r1695, %r1696, 23;
	shf.l.wrap.b32 	%r1702, %r1696, %r1695, 23;
	mov.b64 	%rd1274, {%r1702, %r1701};
	xor.b64  	%rd1275, %rd1273, %rd1274;
	xor.b64  	%rd1276, %rd1230, %rd1203;
	and.b64  	%rd1277, %rd1257, %rd1276;
	xor.b64  	%rd1278, %rd1277, %rd1203;
	add.s64 	%rd1279, %rd1176, %rd3383;
	ld.const.u64 	%rd1280, [%rd1270];
	add.s64 	%rd1281, %rd1279, %rd1280;
	add.s64 	%rd1282, %rd1281, %rd1278;
	add.s64 	%rd1283, %rd1282, %rd1275;
	add.s64 	%rd1284, %rd1283, %rd1187;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1703,%dummy}, %rd1268;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1704}, %rd1268;
	}
	shf.r.wrap.b32 	%r1705, %r1704, %r1703, 28;
	shf.r.wrap.b32 	%r1706, %r1703, %r1704, 28;
	mov.b64 	%rd1285, {%r1706, %r1705};
	shf.l.wrap.b32 	%r1707, %r1703, %r1704, 30;
	shf.l.wrap.b32 	%r1708, %r1704, %r1703, 30;
	mov.b64 	%rd1286, {%r1708, %r1707};
	xor.b64  	%rd1287, %rd1286, %rd1285;
	shf.l.wrap.b32 	%r1709, %r1703, %r1704, 25;
	shf.l.wrap.b32 	%r1710, %r1704, %r1703, 25;
	mov.b64 	%rd1288, {%r1710, %r1709};
	xor.b64  	%rd1289, %rd1287, %rd1288;
	xor.b64  	%rd1290, %rd1268, %rd1214;
	xor.b64  	%rd1291, %rd1268, %rd1241;
	and.b64  	%rd1292, %rd1291, %rd1290;
	xor.b64  	%rd1293, %rd1292, %rd1268;
	add.s64 	%rd1294, %rd1283, %rd1293;
	add.s64 	%rd1295, %rd1294, %rd1289;
	add.s32 	%r1711, %r8703, 12;
	mul.wide.s32 	%rd1296, %r1711, 8;
	add.s64 	%rd1297, %rd972, %rd1296;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1712,%dummy}, %rd1284;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1713}, %rd1284;
	}
	shf.r.wrap.b32 	%r1714, %r1713, %r1712, 14;
	shf.r.wrap.b32 	%r1715, %r1712, %r1713, 14;
	mov.b64 	%rd1298, {%r1715, %r1714};
	shf.r.wrap.b32 	%r1716, %r1713, %r1712, 18;
	shf.r.wrap.b32 	%r1717, %r1712, %r1713, 18;
	mov.b64 	%rd1299, {%r1717, %r1716};
	xor.b64  	%rd1300, %rd1299, %rd1298;
	shf.l.wrap.b32 	%r1718, %r1712, %r1713, 23;
	shf.l.wrap.b32 	%r1719, %r1713, %r1712, 23;
	mov.b64 	%rd1301, {%r1719, %r1718};
	xor.b64  	%rd1302, %rd1300, %rd1301;
	xor.b64  	%rd1303, %rd1257, %rd1230;
	and.b64  	%rd1304, %rd1284, %rd1303;
	xor.b64  	%rd1305, %rd1304, %rd1230;
	add.s64 	%rd1306, %rd1203, %rd3382;
	ld.const.u64 	%rd1307, [%rd1297];
	add.s64 	%rd1308, %rd1306, %rd1307;
	add.s64 	%rd1309, %rd1308, %rd1305;
	add.s64 	%rd1310, %rd1309, %rd1302;
	add.s64 	%rd3394, %rd1310, %rd1214;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1720,%dummy}, %rd1295;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1721}, %rd1295;
	}
	shf.r.wrap.b32 	%r1722, %r1721, %r1720, 28;
	shf.r.wrap.b32 	%r1723, %r1720, %r1721, 28;
	mov.b64 	%rd1311, {%r1723, %r1722};
	shf.l.wrap.b32 	%r1724, %r1720, %r1721, 30;
	shf.l.wrap.b32 	%r1725, %r1721, %r1720, 30;
	mov.b64 	%rd1312, {%r1725, %r1724};
	xor.b64  	%rd1313, %rd1312, %rd1311;
	shf.l.wrap.b32 	%r1726, %r1720, %r1721, 25;
	shf.l.wrap.b32 	%r1727, %r1721, %r1720, 25;
	mov.b64 	%rd1314, {%r1727, %r1726};
	xor.b64  	%rd1315, %rd1313, %rd1314;
	xor.b64  	%rd1316, %rd1295, %rd1241;
	xor.b64  	%rd1317, %rd1295, %rd1268;
	and.b64  	%rd1318, %rd1317, %rd1316;
	xor.b64  	%rd1319, %rd1318, %rd1295;
	add.s64 	%rd1320, %rd1310, %rd1319;
	add.s64 	%rd3390, %rd1320, %rd1315;
	add.s32 	%r1728, %r8703, 13;
	mul.wide.s32 	%rd1321, %r1728, 8;
	add.s64 	%rd1322, %rd972, %rd1321;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1729,%dummy}, %rd3394;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1730}, %rd3394;
	}
	shf.r.wrap.b32 	%r1731, %r1730, %r1729, 14;
	shf.r.wrap.b32 	%r1732, %r1729, %r1730, 14;
	mov.b64 	%rd1323, {%r1732, %r1731};
	shf.r.wrap.b32 	%r1733, %r1730, %r1729, 18;
	shf.r.wrap.b32 	%r1734, %r1729, %r1730, 18;
	mov.b64 	%rd1324, {%r1734, %r1733};
	xor.b64  	%rd1325, %rd1324, %rd1323;
	shf.l.wrap.b32 	%r1735, %r1729, %r1730, 23;
	shf.l.wrap.b32 	%r1736, %r1730, %r1729, 23;
	mov.b64 	%rd1326, {%r1736, %r1735};
	xor.b64  	%rd1327, %rd1325, %rd1326;
	xor.b64  	%rd1328, %rd1284, %rd1257;
	and.b64  	%rd1329, %rd3394, %rd1328;
	xor.b64  	%rd1330, %rd1329, %rd1257;
	add.s64 	%rd1331, %rd1230, %rd3381;
	ld.const.u64 	%rd1332, [%rd1322];
	add.s64 	%rd1333, %rd1331, %rd1332;
	add.s64 	%rd1334, %rd1333, %rd1330;
	add.s64 	%rd1335, %rd1334, %rd1327;
	add.s64 	%rd3393, %rd1335, %rd1241;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1737,%dummy}, %rd3390;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1738}, %rd3390;
	}
	shf.r.wrap.b32 	%r1739, %r1738, %r1737, 28;
	shf.r.wrap.b32 	%r1740, %r1737, %r1738, 28;
	mov.b64 	%rd1336, {%r1740, %r1739};
	shf.l.wrap.b32 	%r1741, %r1737, %r1738, 30;
	shf.l.wrap.b32 	%r1742, %r1738, %r1737, 30;
	mov.b64 	%rd1337, {%r1742, %r1741};
	xor.b64  	%rd1338, %rd1337, %rd1336;
	shf.l.wrap.b32 	%r1743, %r1737, %r1738, 25;
	shf.l.wrap.b32 	%r1744, %r1738, %r1737, 25;
	mov.b64 	%rd1339, {%r1744, %r1743};
	xor.b64  	%rd1340, %rd1338, %rd1339;
	xor.b64  	%rd1341, %rd3390, %rd1268;
	xor.b64  	%rd1342, %rd3390, %rd1295;
	and.b64  	%rd1343, %rd1342, %rd1341;
	xor.b64  	%rd1344, %rd1343, %rd3390;
	add.s64 	%rd1345, %rd1335, %rd1344;
	add.s64 	%rd3389, %rd1345, %rd1340;
	add.s32 	%r1745, %r8703, 14;
	mul.wide.s32 	%rd1346, %r1745, 8;
	add.s64 	%rd1347, %rd972, %rd1346;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1746,%dummy}, %rd3393;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1747}, %rd3393;
	}
	shf.r.wrap.b32 	%r1748, %r1747, %r1746, 14;
	shf.r.wrap.b32 	%r1749, %r1746, %r1747, 14;
	mov.b64 	%rd1348, {%r1749, %r1748};
	shf.r.wrap.b32 	%r1750, %r1747, %r1746, 18;
	shf.r.wrap.b32 	%r1751, %r1746, %r1747, 18;
	mov.b64 	%rd1349, {%r1751, %r1750};
	xor.b64  	%rd1350, %rd1349, %rd1348;
	shf.l.wrap.b32 	%r1752, %r1746, %r1747, 23;
	shf.l.wrap.b32 	%r1753, %r1747, %r1746, 23;
	mov.b64 	%rd1351, {%r1753, %r1752};
	xor.b64  	%rd1352, %rd1350, %rd1351;
	xor.b64  	%rd1353, %rd3394, %rd1284;
	and.b64  	%rd1354, %rd3393, %rd1353;
	xor.b64  	%rd1355, %rd1354, %rd1284;
	add.s64 	%rd1356, %rd1257, %rd3380;
	ld.const.u64 	%rd1357, [%rd1347];
	add.s64 	%rd1358, %rd1356, %rd1357;
	add.s64 	%rd1359, %rd1358, %rd1355;
	add.s64 	%rd1360, %rd1359, %rd1352;
	add.s64 	%rd3392, %rd1360, %rd1268;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1754,%dummy}, %rd3389;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1755}, %rd3389;
	}
	shf.r.wrap.b32 	%r1756, %r1755, %r1754, 28;
	shf.r.wrap.b32 	%r1757, %r1754, %r1755, 28;
	mov.b64 	%rd1361, {%r1757, %r1756};
	shf.l.wrap.b32 	%r1758, %r1754, %r1755, 30;
	shf.l.wrap.b32 	%r1759, %r1755, %r1754, 30;
	mov.b64 	%rd1362, {%r1759, %r1758};
	xor.b64  	%rd1363, %rd1362, %rd1361;
	shf.l.wrap.b32 	%r1760, %r1754, %r1755, 25;
	shf.l.wrap.b32 	%r1761, %r1755, %r1754, 25;
	mov.b64 	%rd1364, {%r1761, %r1760};
	xor.b64  	%rd1365, %rd1363, %rd1364;
	xor.b64  	%rd1366, %rd3389, %rd1295;
	xor.b64  	%rd1367, %rd3389, %rd3390;
	and.b64  	%rd1368, %rd1367, %rd1366;
	xor.b64  	%rd1369, %rd1368, %rd3389;
	add.s64 	%rd1370, %rd1360, %rd1369;
	add.s64 	%rd3388, %rd1370, %rd1365;
	add.s32 	%r1762, %r8703, 15;
	mul.wide.s32 	%rd1371, %r1762, 8;
	add.s64 	%rd1372, %rd972, %rd1371;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1763,%dummy}, %rd3392;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1764}, %rd3392;
	}
	shf.r.wrap.b32 	%r1765, %r1764, %r1763, 14;
	shf.r.wrap.b32 	%r1766, %r1763, %r1764, 14;
	mov.b64 	%rd1373, {%r1766, %r1765};
	shf.r.wrap.b32 	%r1767, %r1764, %r1763, 18;
	shf.r.wrap.b32 	%r1768, %r1763, %r1764, 18;
	mov.b64 	%rd1374, {%r1768, %r1767};
	xor.b64  	%rd1375, %rd1374, %rd1373;
	shf.l.wrap.b32 	%r1769, %r1763, %r1764, 23;
	shf.l.wrap.b32 	%r1770, %r1764, %r1763, 23;
	mov.b64 	%rd1376, {%r1770, %r1769};
	xor.b64  	%rd1377, %rd1375, %rd1376;
	xor.b64  	%rd1378, %rd3393, %rd3394;
	and.b64  	%rd1379, %rd3392, %rd1378;
	xor.b64  	%rd1380, %rd1379, %rd3394;
	add.s64 	%rd1381, %rd1284, %rd3379;
	ld.const.u64 	%rd1382, [%rd1372];
	add.s64 	%rd1383, %rd1381, %rd1382;
	add.s64 	%rd1384, %rd1383, %rd1380;
	add.s64 	%rd1385, %rd1384, %rd1377;
	add.s64 	%rd3391, %rd1385, %rd1295;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1771,%dummy}, %rd3388;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1772}, %rd3388;
	}
	shf.r.wrap.b32 	%r1773, %r1772, %r1771, 28;
	shf.r.wrap.b32 	%r1774, %r1771, %r1772, 28;
	mov.b64 	%rd1386, {%r1774, %r1773};
	shf.l.wrap.b32 	%r1775, %r1771, %r1772, 30;
	shf.l.wrap.b32 	%r1776, %r1772, %r1771, 30;
	mov.b64 	%rd1387, {%r1776, %r1775};
	xor.b64  	%rd1388, %rd1387, %rd1386;
	shf.l.wrap.b32 	%r1777, %r1771, %r1772, 25;
	shf.l.wrap.b32 	%r1778, %r1772, %r1771, 25;
	mov.b64 	%rd1389, {%r1778, %r1777};
	xor.b64  	%rd1390, %rd1388, %rd1389;
	xor.b64  	%rd1391, %rd3388, %rd3390;
	xor.b64  	%rd1392, %rd3388, %rd3389;
	and.b64  	%rd1393, %rd1392, %rd1391;
	xor.b64  	%rd1394, %rd1393, %rd3388;
	add.s64 	%rd1395, %rd1385, %rd1394;
	add.s64 	%rd3387, %rd1395, %rd1390;
	add.s32 	%r8703, %r8703, 16;
	setp.lt.s32	%p195, %r8703, 80;
	@%p195 bra 	BB4_325;

	add.s64 	%rd3410, %rd3410, %rd3387;
	st.local.u64 	[%rd9], %rd3410;
	add.s64 	%rd3409, %rd3409, %rd3388;
	st.local.u64 	[%rd10], %rd3409;
	add.s64 	%rd3408, %rd3408, %rd3389;
	st.local.u64 	[%rd10+8], %rd3408;
	add.s64 	%rd3407, %rd3407, %rd3390;
	st.local.u64 	[%rd10+16], %rd3407;
	add.s64 	%rd3406, %rd3406, %rd3391;
	st.local.u64 	[%rd10+24], %rd3406;
	add.s64 	%rd3405, %rd3405, %rd3392;
	st.local.u64 	[%rd10+32], %rd3405;
	add.s64 	%rd3404, %rd3404, %rd3393;
	st.local.u64 	[%rd10+40], %rd3404;
	add.s64 	%rd3403, %rd3403, %rd3394;
	st.local.u64 	[%rd10+48], %rd3403;
	mov.u32 	%r8704, 0;
	st.local.u32 	[%rd10+56], %r8704;
	st.local.u32 	[%rd10+64], %r8704;
	st.local.u32 	[%rd10+72], %r8704;
	st.local.u32 	[%rd10+80], %r8704;
	st.local.u32 	[%rd10+88], %r8704;
	st.local.u32 	[%rd10+96], %r8704;
	st.local.u32 	[%rd10+104], %r8704;
	st.local.u32 	[%rd10+112], %r8704;
	st.local.u32 	[%rd10+120], %r8704;
	st.local.u32 	[%rd10+128], %r8704;
	st.local.u32 	[%rd10+136], %r8704;
	st.local.u32 	[%rd10+144], %r8704;
	st.local.u32 	[%rd10+152], %r8704;
	st.local.u32 	[%rd10+160], %r8704;
	st.local.u32 	[%rd10+168], %r8704;
	st.local.u32 	[%rd10+176], %r8704;
	st.local.u32 	[%rd11+4], %r8704;
	st.local.u32 	[%rd12+4], %r8704;
	st.local.u32 	[%rd13+4], %r8704;
	st.local.u32 	[%rd14+4], %r8704;
	st.local.u32 	[%rd15+4], %r8704;
	st.local.u32 	[%rd16+4], %r8704;
	st.local.u32 	[%rd17+4], %r8704;
	st.local.u32 	[%rd18+4], %r8704;
	st.local.u32 	[%rd19+4], %r8704;
	st.local.u32 	[%rd20+4], %r8704;
	st.local.u32 	[%rd21+4], %r8704;
	st.local.u32 	[%rd22+4], %r8704;
	st.local.u32 	[%rd23+4], %r8704;
	st.local.u32 	[%rd24+4], %r8704;
	st.local.u32 	[%rd25+4], %r8704;
	st.local.u32 	[%rd26+4], %r8704;
	mov.u32 	%r8705, %r8704;
	mov.u32 	%r8706, %r8704;
	mov.u32 	%r8707, %r8704;
	mov.u32 	%r8708, %r8704;
	mov.u32 	%r8709, %r8704;
	mov.u32 	%r8710, %r8704;
	mov.u32 	%r8711, %r8704;
	mov.u32 	%r8712, %r8704;
	mov.u32 	%r8713, %r8704;
	mov.u32 	%r8714, %r8704;
	mov.u32 	%r8715, %r8704;
	mov.u32 	%r8716, %r8704;
	mov.u32 	%r8717, %r8704;
	mov.u32 	%r8718, %r8704;
	mov.u32 	%r8719, %r8704;
	mov.u32 	%r8720, %r8704;
	mov.u32 	%r8721, %r8704;
	mov.u32 	%r8722, %r8704;
	mov.u32 	%r8723, %r8704;
	mov.u32 	%r8724, %r8704;
	mov.u32 	%r8725, %r8704;
	mov.u32 	%r8726, %r8704;
	mov.u32 	%r8727, %r8704;
	mov.u32 	%r8728, %r8704;
	mov.u32 	%r8729, %r8704;
	mov.u32 	%r8730, %r8704;
	mov.u32 	%r8731, %r8704;
	mov.u32 	%r8732, %r8704;
	mov.u32 	%r8733, %r8704;
	bra.uni 	BB4_327;

BB4_323:
	ld.local.u32 	%r8731, [%rd10+64];
	ld.local.u32 	%r8730, [%rd12+4];
	ld.local.u32 	%r8729, [%rd10+72];
	ld.local.u32 	%r8728, [%rd13+4];
	ld.local.u32 	%r8727, [%rd10+80];
	ld.local.u32 	%r8726, [%rd14+4];
	ld.local.u32 	%r8725, [%rd10+88];
	ld.local.u32 	%r8724, [%rd15+4];
	ld.local.u32 	%r8723, [%rd10+96];
	ld.local.u32 	%r8722, [%rd16+4];
	ld.local.u32 	%r8721, [%rd10+104];
	ld.local.u32 	%r8720, [%rd17+4];
	ld.local.u32 	%r8719, [%rd10+112];
	ld.local.u32 	%r8718, [%rd18+4];
	ld.local.u32 	%r8717, [%rd10+120];
	ld.local.u32 	%r8716, [%rd19+4];
	ld.local.u32 	%r8715, [%rd10+128];
	ld.local.u32 	%r8714, [%rd20+4];
	ld.local.u32 	%r8713, [%rd10+136];
	ld.local.u32 	%r8712, [%rd21+4];
	ld.local.u32 	%r8711, [%rd10+144];
	ld.local.u32 	%r8710, [%rd22+4];
	ld.local.u32 	%r8709, [%rd10+152];
	ld.local.u32 	%r8708, [%rd23+4];
	ld.local.u32 	%r8707, [%rd10+160];
	ld.local.u32 	%r8706, [%rd24+4];
	ld.local.u32 	%r8705, [%rd10+168];
	ld.local.u32 	%r8704, [%rd25+4];

BB4_327:
	mov.u32 	%r1810, 0;
	st.local.u32 	[%rd10+176], %r1810;
	shl.b32 	%r1811, %r6, 3;
	st.local.u32 	[%rd26+4], %r1811;
	mov.b64	%rd3428, {%r8732, %r8733};
	mov.b64	%rd3429, {%r8730, %r8731};
	mov.b64	%rd3430, {%r8728, %r8729};
	mov.b64	%rd3431, {%r8726, %r8727};
	mov.b64	%rd3432, {%r8724, %r8725};
	mov.b64	%rd3433, {%r8722, %r8723};
	mov.b64	%rd3434, {%r8720, %r8721};
	mov.b64	%rd3435, {%r8718, %r8719};
	mov.b64	%rd3419, {%r8716, %r8717};
	mov.b64	%rd3418, {%r8714, %r8715};
	mov.b64	%rd3417, {%r8712, %r8713};
	mov.b64	%rd3416, {%r8710, %r8711};
	mov.b64	%rd3415, {%r8708, %r8709};
	mov.b64	%rd3414, {%r8706, %r8707};
	mov.b64	%rd3413, {%r8704, %r8705};
	mov.b64	%rd3412, {%r1811, %r1810};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1812,%dummy}, %rd3406;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1813}, %rd3406;
	}
	shf.r.wrap.b32 	%r1814, %r1813, %r1812, 18;
	shf.r.wrap.b32 	%r1815, %r1812, %r1813, 18;
	mov.b64 	%rd1397, {%r1815, %r1814};
	shf.r.wrap.b32 	%r1816, %r1813, %r1812, 14;
	shf.r.wrap.b32 	%r1817, %r1812, %r1813, 14;
	mov.b64 	%rd1398, {%r1817, %r1816};
	xor.b64  	%rd1399, %rd1397, %rd1398;
	shf.l.wrap.b32 	%r1818, %r1812, %r1813, 23;
	shf.l.wrap.b32 	%r1819, %r1813, %r1812, 23;
	mov.b64 	%rd1400, {%r1819, %r1818};
	xor.b64  	%rd1401, %rd1399, %rd1400;
	xor.b64  	%rd1402, %rd3404, %rd3405;
	and.b64  	%rd1403, %rd1402, %rd3406;
	xor.b64  	%rd1404, %rd1403, %rd3404;
	add.s64 	%rd1405, %rd1404, %rd3403;
	add.s64 	%rd1406, %rd1405, %rd3428;
	add.s64 	%rd1407, %rd1406, %rd36;
	add.s64 	%rd1408, %rd1407, %rd1401;
	add.s64 	%rd1409, %rd1408, %rd3407;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1820}, %rd3410;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1821,%dummy}, %rd3410;
	}
	shf.l.wrap.b32 	%r1822, %r1821, %r1820, 30;
	shf.l.wrap.b32 	%r1823, %r1820, %r1821, 30;
	mov.b64 	%rd1410, {%r1823, %r1822};
	shf.r.wrap.b32 	%r1824, %r1820, %r1821, 28;
	shf.r.wrap.b32 	%r1825, %r1821, %r1820, 28;
	mov.b64 	%rd1411, {%r1825, %r1824};
	xor.b64  	%rd1412, %rd1410, %rd1411;
	shf.l.wrap.b32 	%r1826, %r1821, %r1820, 25;
	shf.l.wrap.b32 	%r1827, %r1820, %r1821, 25;
	mov.b64 	%rd1413, {%r1827, %r1826};
	xor.b64  	%rd1414, %rd1412, %rd1413;
	xor.b64  	%rd1415, %rd3409, %rd3410;
	xor.b64  	%rd1416, %rd3408, %rd3410;
	and.b64  	%rd1417, %rd1416, %rd1415;
	xor.b64  	%rd1418, %rd1417, %rd3410;
	add.s64 	%rd1419, %rd1408, %rd1418;
	add.s64 	%rd1420, %rd1419, %rd1414;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1828,%dummy}, %rd1409;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1829}, %rd1409;
	}
	shf.r.wrap.b32 	%r1830, %r1829, %r1828, 14;
	shf.r.wrap.b32 	%r1831, %r1828, %r1829, 14;
	mov.b64 	%rd1421, {%r1831, %r1830};
	shf.r.wrap.b32 	%r1832, %r1829, %r1828, 18;
	shf.r.wrap.b32 	%r1833, %r1828, %r1829, 18;
	mov.b64 	%rd1422, {%r1833, %r1832};
	xor.b64  	%rd1423, %rd1422, %rd1421;
	shf.l.wrap.b32 	%r1834, %r1828, %r1829, 23;
	shf.l.wrap.b32 	%r1835, %r1829, %r1828, 23;
	mov.b64 	%rd1424, {%r1835, %r1834};
	xor.b64  	%rd1425, %rd1423, %rd1424;
	xor.b64  	%rd1426, %rd3405, %rd3406;
	and.b64  	%rd1427, %rd1409, %rd1426;
	xor.b64  	%rd1428, %rd1427, %rd3405;
	add.s64 	%rd1429, %rd3429, %rd3404;
	add.s64 	%rd1430, %rd1429, %rd37;
	add.s64 	%rd1431, %rd1430, %rd1428;
	add.s64 	%rd1432, %rd1431, %rd1425;
	add.s64 	%rd1433, %rd1432, %rd3408;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1836,%dummy}, %rd1420;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1837}, %rd1420;
	}
	shf.r.wrap.b32 	%r1838, %r1837, %r1836, 28;
	shf.r.wrap.b32 	%r1839, %r1836, %r1837, 28;
	mov.b64 	%rd1434, {%r1839, %r1838};
	shf.l.wrap.b32 	%r1840, %r1836, %r1837, 30;
	shf.l.wrap.b32 	%r1841, %r1837, %r1836, 30;
	mov.b64 	%rd1435, {%r1841, %r1840};
	xor.b64  	%rd1436, %rd1435, %rd1434;
	shf.l.wrap.b32 	%r1842, %r1836, %r1837, 25;
	shf.l.wrap.b32 	%r1843, %r1837, %r1836, 25;
	mov.b64 	%rd1437, {%r1843, %r1842};
	xor.b64  	%rd1438, %rd1436, %rd1437;
	xor.b64  	%rd1439, %rd1420, %rd3409;
	xor.b64  	%rd1440, %rd1420, %rd3410;
	and.b64  	%rd1441, %rd1440, %rd1439;
	xor.b64  	%rd1442, %rd1441, %rd1420;
	add.s64 	%rd1443, %rd1432, %rd1442;
	add.s64 	%rd1444, %rd1443, %rd1438;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1844,%dummy}, %rd1433;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1845}, %rd1433;
	}
	shf.r.wrap.b32 	%r1846, %r1845, %r1844, 14;
	shf.r.wrap.b32 	%r1847, %r1844, %r1845, 14;
	mov.b64 	%rd1445, {%r1847, %r1846};
	shf.r.wrap.b32 	%r1848, %r1845, %r1844, 18;
	shf.r.wrap.b32 	%r1849, %r1844, %r1845, 18;
	mov.b64 	%rd1446, {%r1849, %r1848};
	xor.b64  	%rd1447, %rd1446, %rd1445;
	shf.l.wrap.b32 	%r1850, %r1844, %r1845, 23;
	shf.l.wrap.b32 	%r1851, %r1845, %r1844, 23;
	mov.b64 	%rd1448, {%r1851, %r1850};
	xor.b64  	%rd1449, %rd1447, %rd1448;
	xor.b64  	%rd1450, %rd1409, %rd3406;
	and.b64  	%rd1451, %rd1433, %rd1450;
	xor.b64  	%rd1452, %rd1451, %rd3406;
	add.s64 	%rd1453, %rd3430, %rd3405;
	add.s64 	%rd1454, %rd1453, %rd38;
	add.s64 	%rd1455, %rd1454, %rd1452;
	add.s64 	%rd1456, %rd1455, %rd1449;
	add.s64 	%rd1457, %rd1456, %rd3409;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1852,%dummy}, %rd1444;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1853}, %rd1444;
	}
	shf.r.wrap.b32 	%r1854, %r1853, %r1852, 28;
	shf.r.wrap.b32 	%r1855, %r1852, %r1853, 28;
	mov.b64 	%rd1458, {%r1855, %r1854};
	shf.l.wrap.b32 	%r1856, %r1852, %r1853, 30;
	shf.l.wrap.b32 	%r1857, %r1853, %r1852, 30;
	mov.b64 	%rd1459, {%r1857, %r1856};
	xor.b64  	%rd1460, %rd1459, %rd1458;
	shf.l.wrap.b32 	%r1858, %r1852, %r1853, 25;
	shf.l.wrap.b32 	%r1859, %r1853, %r1852, 25;
	mov.b64 	%rd1461, {%r1859, %r1858};
	xor.b64  	%rd1462, %rd1460, %rd1461;
	xor.b64  	%rd1463, %rd1444, %rd3410;
	xor.b64  	%rd1464, %rd1444, %rd1420;
	and.b64  	%rd1465, %rd1464, %rd1463;
	xor.b64  	%rd1466, %rd1465, %rd1444;
	add.s64 	%rd1467, %rd1456, %rd1466;
	add.s64 	%rd1468, %rd1467, %rd1462;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1860,%dummy}, %rd1457;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1861}, %rd1457;
	}
	shf.r.wrap.b32 	%r1862, %r1861, %r1860, 14;
	shf.r.wrap.b32 	%r1863, %r1860, %r1861, 14;
	mov.b64 	%rd1469, {%r1863, %r1862};
	shf.r.wrap.b32 	%r1864, %r1861, %r1860, 18;
	shf.r.wrap.b32 	%r1865, %r1860, %r1861, 18;
	mov.b64 	%rd1470, {%r1865, %r1864};
	xor.b64  	%rd1471, %rd1470, %rd1469;
	shf.l.wrap.b32 	%r1866, %r1860, %r1861, 23;
	shf.l.wrap.b32 	%r1867, %r1861, %r1860, 23;
	mov.b64 	%rd1472, {%r1867, %r1866};
	xor.b64  	%rd1473, %rd1471, %rd1472;
	xor.b64  	%rd1474, %rd1433, %rd1409;
	and.b64  	%rd1475, %rd1457, %rd1474;
	xor.b64  	%rd1476, %rd1475, %rd1409;
	add.s64 	%rd1477, %rd3431, %rd3406;
	add.s64 	%rd1478, %rd1477, %rd39;
	add.s64 	%rd1479, %rd1478, %rd1476;
	add.s64 	%rd1480, %rd1479, %rd1473;
	add.s64 	%rd1481, %rd1480, %rd3410;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1868,%dummy}, %rd1468;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1869}, %rd1468;
	}
	shf.r.wrap.b32 	%r1870, %r1869, %r1868, 28;
	shf.r.wrap.b32 	%r1871, %r1868, %r1869, 28;
	mov.b64 	%rd1482, {%r1871, %r1870};
	shf.l.wrap.b32 	%r1872, %r1868, %r1869, 30;
	shf.l.wrap.b32 	%r1873, %r1869, %r1868, 30;
	mov.b64 	%rd1483, {%r1873, %r1872};
	xor.b64  	%rd1484, %rd1483, %rd1482;
	shf.l.wrap.b32 	%r1874, %r1868, %r1869, 25;
	shf.l.wrap.b32 	%r1875, %r1869, %r1868, 25;
	mov.b64 	%rd1485, {%r1875, %r1874};
	xor.b64  	%rd1486, %rd1484, %rd1485;
	xor.b64  	%rd1487, %rd1468, %rd1420;
	xor.b64  	%rd1488, %rd1468, %rd1444;
	and.b64  	%rd1489, %rd1488, %rd1487;
	xor.b64  	%rd1490, %rd1489, %rd1468;
	add.s64 	%rd1491, %rd1480, %rd1490;
	add.s64 	%rd1492, %rd1491, %rd1486;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1876,%dummy}, %rd1481;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1877}, %rd1481;
	}
	shf.r.wrap.b32 	%r1878, %r1877, %r1876, 14;
	shf.r.wrap.b32 	%r1879, %r1876, %r1877, 14;
	mov.b64 	%rd1493, {%r1879, %r1878};
	shf.r.wrap.b32 	%r1880, %r1877, %r1876, 18;
	shf.r.wrap.b32 	%r1881, %r1876, %r1877, 18;
	mov.b64 	%rd1494, {%r1881, %r1880};
	xor.b64  	%rd1495, %rd1494, %rd1493;
	shf.l.wrap.b32 	%r1882, %r1876, %r1877, 23;
	shf.l.wrap.b32 	%r1883, %r1877, %r1876, 23;
	mov.b64 	%rd1496, {%r1883, %r1882};
	xor.b64  	%rd1497, %rd1495, %rd1496;
	xor.b64  	%rd1498, %rd1457, %rd1433;
	and.b64  	%rd1499, %rd1481, %rd1498;
	xor.b64  	%rd1500, %rd1499, %rd1433;
	add.s64 	%rd1501, %rd1409, %rd3432;
	add.s64 	%rd1502, %rd1501, %rd40;
	add.s64 	%rd1503, %rd1502, %rd1500;
	add.s64 	%rd1504, %rd1503, %rd1497;
	add.s64 	%rd1505, %rd1504, %rd1420;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1884,%dummy}, %rd1492;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1885}, %rd1492;
	}
	shf.r.wrap.b32 	%r1886, %r1885, %r1884, 28;
	shf.r.wrap.b32 	%r1887, %r1884, %r1885, 28;
	mov.b64 	%rd1506, {%r1887, %r1886};
	shf.l.wrap.b32 	%r1888, %r1884, %r1885, 30;
	shf.l.wrap.b32 	%r1889, %r1885, %r1884, 30;
	mov.b64 	%rd1507, {%r1889, %r1888};
	xor.b64  	%rd1508, %rd1507, %rd1506;
	shf.l.wrap.b32 	%r1890, %r1884, %r1885, 25;
	shf.l.wrap.b32 	%r1891, %r1885, %r1884, 25;
	mov.b64 	%rd1509, {%r1891, %r1890};
	xor.b64  	%rd1510, %rd1508, %rd1509;
	xor.b64  	%rd1511, %rd1492, %rd1444;
	xor.b64  	%rd1512, %rd1492, %rd1468;
	and.b64  	%rd1513, %rd1512, %rd1511;
	xor.b64  	%rd1514, %rd1513, %rd1492;
	add.s64 	%rd1515, %rd1504, %rd1514;
	add.s64 	%rd1516, %rd1515, %rd1510;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1892,%dummy}, %rd1505;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1893}, %rd1505;
	}
	shf.r.wrap.b32 	%r1894, %r1893, %r1892, 14;
	shf.r.wrap.b32 	%r1895, %r1892, %r1893, 14;
	mov.b64 	%rd1517, {%r1895, %r1894};
	shf.r.wrap.b32 	%r1896, %r1893, %r1892, 18;
	shf.r.wrap.b32 	%r1897, %r1892, %r1893, 18;
	mov.b64 	%rd1518, {%r1897, %r1896};
	xor.b64  	%rd1519, %rd1518, %rd1517;
	shf.l.wrap.b32 	%r1898, %r1892, %r1893, 23;
	shf.l.wrap.b32 	%r1899, %r1893, %r1892, 23;
	mov.b64 	%rd1520, {%r1899, %r1898};
	xor.b64  	%rd1521, %rd1519, %rd1520;
	xor.b64  	%rd1522, %rd1481, %rd1457;
	and.b64  	%rd1523, %rd1505, %rd1522;
	xor.b64  	%rd1524, %rd1523, %rd1457;
	add.s64 	%rd1525, %rd1433, %rd3433;
	add.s64 	%rd1526, %rd1525, %rd41;
	add.s64 	%rd1527, %rd1526, %rd1524;
	add.s64 	%rd1528, %rd1527, %rd1521;
	add.s64 	%rd1529, %rd1528, %rd1444;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1900,%dummy}, %rd1516;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1901}, %rd1516;
	}
	shf.r.wrap.b32 	%r1902, %r1901, %r1900, 28;
	shf.r.wrap.b32 	%r1903, %r1900, %r1901, 28;
	mov.b64 	%rd1530, {%r1903, %r1902};
	shf.l.wrap.b32 	%r1904, %r1900, %r1901, 30;
	shf.l.wrap.b32 	%r1905, %r1901, %r1900, 30;
	mov.b64 	%rd1531, {%r1905, %r1904};
	xor.b64  	%rd1532, %rd1531, %rd1530;
	shf.l.wrap.b32 	%r1906, %r1900, %r1901, 25;
	shf.l.wrap.b32 	%r1907, %r1901, %r1900, 25;
	mov.b64 	%rd1533, {%r1907, %r1906};
	xor.b64  	%rd1534, %rd1532, %rd1533;
	xor.b64  	%rd1535, %rd1516, %rd1468;
	xor.b64  	%rd1536, %rd1516, %rd1492;
	and.b64  	%rd1537, %rd1536, %rd1535;
	xor.b64  	%rd1538, %rd1537, %rd1516;
	add.s64 	%rd1539, %rd1528, %rd1538;
	add.s64 	%rd1540, %rd1539, %rd1534;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1908,%dummy}, %rd1529;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1909}, %rd1529;
	}
	shf.r.wrap.b32 	%r1910, %r1909, %r1908, 14;
	shf.r.wrap.b32 	%r1911, %r1908, %r1909, 14;
	mov.b64 	%rd1541, {%r1911, %r1910};
	shf.r.wrap.b32 	%r1912, %r1909, %r1908, 18;
	shf.r.wrap.b32 	%r1913, %r1908, %r1909, 18;
	mov.b64 	%rd1542, {%r1913, %r1912};
	xor.b64  	%rd1543, %rd1542, %rd1541;
	shf.l.wrap.b32 	%r1914, %r1908, %r1909, 23;
	shf.l.wrap.b32 	%r1915, %r1909, %r1908, 23;
	mov.b64 	%rd1544, {%r1915, %r1914};
	xor.b64  	%rd1545, %rd1543, %rd1544;
	xor.b64  	%rd1546, %rd1505, %rd1481;
	and.b64  	%rd1547, %rd1529, %rd1546;
	xor.b64  	%rd1548, %rd1547, %rd1481;
	add.s64 	%rd1549, %rd1457, %rd3434;
	add.s64 	%rd1550, %rd1549, %rd42;
	add.s64 	%rd1551, %rd1550, %rd1548;
	add.s64 	%rd1552, %rd1551, %rd1545;
	add.s64 	%rd1553, %rd1552, %rd1468;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1916,%dummy}, %rd1540;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1917}, %rd1540;
	}
	shf.r.wrap.b32 	%r1918, %r1917, %r1916, 28;
	shf.r.wrap.b32 	%r1919, %r1916, %r1917, 28;
	mov.b64 	%rd1554, {%r1919, %r1918};
	shf.l.wrap.b32 	%r1920, %r1916, %r1917, 30;
	shf.l.wrap.b32 	%r1921, %r1917, %r1916, 30;
	mov.b64 	%rd1555, {%r1921, %r1920};
	xor.b64  	%rd1556, %rd1555, %rd1554;
	shf.l.wrap.b32 	%r1922, %r1916, %r1917, 25;
	shf.l.wrap.b32 	%r1923, %r1917, %r1916, 25;
	mov.b64 	%rd1557, {%r1923, %r1922};
	xor.b64  	%rd1558, %rd1556, %rd1557;
	xor.b64  	%rd1559, %rd1540, %rd1492;
	xor.b64  	%rd1560, %rd1540, %rd1516;
	and.b64  	%rd1561, %rd1560, %rd1559;
	xor.b64  	%rd1562, %rd1561, %rd1540;
	add.s64 	%rd1563, %rd1552, %rd1562;
	add.s64 	%rd1564, %rd1563, %rd1558;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1924,%dummy}, %rd1553;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1925}, %rd1553;
	}
	shf.r.wrap.b32 	%r1926, %r1925, %r1924, 14;
	shf.r.wrap.b32 	%r1927, %r1924, %r1925, 14;
	mov.b64 	%rd1565, {%r1927, %r1926};
	shf.r.wrap.b32 	%r1928, %r1925, %r1924, 18;
	shf.r.wrap.b32 	%r1929, %r1924, %r1925, 18;
	mov.b64 	%rd1566, {%r1929, %r1928};
	xor.b64  	%rd1567, %rd1566, %rd1565;
	shf.l.wrap.b32 	%r1930, %r1924, %r1925, 23;
	shf.l.wrap.b32 	%r1931, %r1925, %r1924, 23;
	mov.b64 	%rd1568, {%r1931, %r1930};
	xor.b64  	%rd1569, %rd1567, %rd1568;
	xor.b64  	%rd1570, %rd1529, %rd1505;
	and.b64  	%rd1571, %rd1553, %rd1570;
	xor.b64  	%rd1572, %rd1571, %rd1505;
	add.s64 	%rd1573, %rd1481, %rd3435;
	add.s64 	%rd1574, %rd1573, %rd43;
	add.s64 	%rd1575, %rd1574, %rd1572;
	add.s64 	%rd1576, %rd1575, %rd1569;
	add.s64 	%rd1577, %rd1576, %rd1492;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1932,%dummy}, %rd1564;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1933}, %rd1564;
	}
	shf.r.wrap.b32 	%r1934, %r1933, %r1932, 28;
	shf.r.wrap.b32 	%r1935, %r1932, %r1933, 28;
	mov.b64 	%rd1578, {%r1935, %r1934};
	shf.l.wrap.b32 	%r1936, %r1932, %r1933, 30;
	shf.l.wrap.b32 	%r1937, %r1933, %r1932, 30;
	mov.b64 	%rd1579, {%r1937, %r1936};
	xor.b64  	%rd1580, %rd1579, %rd1578;
	shf.l.wrap.b32 	%r1938, %r1932, %r1933, 25;
	shf.l.wrap.b32 	%r1939, %r1933, %r1932, 25;
	mov.b64 	%rd1581, {%r1939, %r1938};
	xor.b64  	%rd1582, %rd1580, %rd1581;
	xor.b64  	%rd1583, %rd1564, %rd1516;
	xor.b64  	%rd1584, %rd1564, %rd1540;
	and.b64  	%rd1585, %rd1584, %rd1583;
	xor.b64  	%rd1586, %rd1585, %rd1564;
	add.s64 	%rd1587, %rd1576, %rd1586;
	add.s64 	%rd1588, %rd1587, %rd1582;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1940,%dummy}, %rd1577;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1941}, %rd1577;
	}
	shf.r.wrap.b32 	%r1942, %r1941, %r1940, 14;
	shf.r.wrap.b32 	%r1943, %r1940, %r1941, 14;
	mov.b64 	%rd1589, {%r1943, %r1942};
	shf.r.wrap.b32 	%r1944, %r1941, %r1940, 18;
	shf.r.wrap.b32 	%r1945, %r1940, %r1941, 18;
	mov.b64 	%rd1590, {%r1945, %r1944};
	xor.b64  	%rd1591, %rd1590, %rd1589;
	shf.l.wrap.b32 	%r1946, %r1940, %r1941, 23;
	shf.l.wrap.b32 	%r1947, %r1941, %r1940, 23;
	mov.b64 	%rd1592, {%r1947, %r1946};
	xor.b64  	%rd1593, %rd1591, %rd1592;
	xor.b64  	%rd1594, %rd1553, %rd1529;
	and.b64  	%rd1595, %rd1577, %rd1594;
	xor.b64  	%rd1596, %rd1595, %rd1529;
	add.s64 	%rd1597, %rd1505, %rd3419;
	add.s64 	%rd1598, %rd1597, %rd44;
	add.s64 	%rd1599, %rd1598, %rd1596;
	add.s64 	%rd1600, %rd1599, %rd1593;
	add.s64 	%rd1601, %rd1600, %rd1516;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1948,%dummy}, %rd1588;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1949}, %rd1588;
	}
	shf.r.wrap.b32 	%r1950, %r1949, %r1948, 28;
	shf.r.wrap.b32 	%r1951, %r1948, %r1949, 28;
	mov.b64 	%rd1602, {%r1951, %r1950};
	shf.l.wrap.b32 	%r1952, %r1948, %r1949, 30;
	shf.l.wrap.b32 	%r1953, %r1949, %r1948, 30;
	mov.b64 	%rd1603, {%r1953, %r1952};
	xor.b64  	%rd1604, %rd1603, %rd1602;
	shf.l.wrap.b32 	%r1954, %r1948, %r1949, 25;
	shf.l.wrap.b32 	%r1955, %r1949, %r1948, 25;
	mov.b64 	%rd1605, {%r1955, %r1954};
	xor.b64  	%rd1606, %rd1604, %rd1605;
	xor.b64  	%rd1607, %rd1588, %rd1540;
	xor.b64  	%rd1608, %rd1588, %rd1564;
	and.b64  	%rd1609, %rd1608, %rd1607;
	xor.b64  	%rd1610, %rd1609, %rd1588;
	add.s64 	%rd1611, %rd1600, %rd1610;
	add.s64 	%rd1612, %rd1611, %rd1606;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1956,%dummy}, %rd1601;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1957}, %rd1601;
	}
	shf.r.wrap.b32 	%r1958, %r1957, %r1956, 14;
	shf.r.wrap.b32 	%r1959, %r1956, %r1957, 14;
	mov.b64 	%rd1613, {%r1959, %r1958};
	shf.r.wrap.b32 	%r1960, %r1957, %r1956, 18;
	shf.r.wrap.b32 	%r1961, %r1956, %r1957, 18;
	mov.b64 	%rd1614, {%r1961, %r1960};
	xor.b64  	%rd1615, %rd1614, %rd1613;
	shf.l.wrap.b32 	%r1962, %r1956, %r1957, 23;
	shf.l.wrap.b32 	%r1963, %r1957, %r1956, 23;
	mov.b64 	%rd1616, {%r1963, %r1962};
	xor.b64  	%rd1617, %rd1615, %rd1616;
	xor.b64  	%rd1618, %rd1577, %rd1553;
	and.b64  	%rd1619, %rd1601, %rd1618;
	xor.b64  	%rd1620, %rd1619, %rd1553;
	add.s64 	%rd1621, %rd1529, %rd3418;
	add.s64 	%rd1622, %rd1621, %rd45;
	add.s64 	%rd1623, %rd1622, %rd1620;
	add.s64 	%rd1624, %rd1623, %rd1617;
	add.s64 	%rd1625, %rd1624, %rd1540;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1964,%dummy}, %rd1612;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1965}, %rd1612;
	}
	shf.r.wrap.b32 	%r1966, %r1965, %r1964, 28;
	shf.r.wrap.b32 	%r1967, %r1964, %r1965, 28;
	mov.b64 	%rd1626, {%r1967, %r1966};
	shf.l.wrap.b32 	%r1968, %r1964, %r1965, 30;
	shf.l.wrap.b32 	%r1969, %r1965, %r1964, 30;
	mov.b64 	%rd1627, {%r1969, %r1968};
	xor.b64  	%rd1628, %rd1627, %rd1626;
	shf.l.wrap.b32 	%r1970, %r1964, %r1965, 25;
	shf.l.wrap.b32 	%r1971, %r1965, %r1964, 25;
	mov.b64 	%rd1629, {%r1971, %r1970};
	xor.b64  	%rd1630, %rd1628, %rd1629;
	xor.b64  	%rd1631, %rd1612, %rd1564;
	xor.b64  	%rd1632, %rd1612, %rd1588;
	and.b64  	%rd1633, %rd1632, %rd1631;
	xor.b64  	%rd1634, %rd1633, %rd1612;
	add.s64 	%rd1635, %rd1624, %rd1634;
	add.s64 	%rd1636, %rd1635, %rd1630;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1972,%dummy}, %rd1625;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1973}, %rd1625;
	}
	shf.r.wrap.b32 	%r1974, %r1973, %r1972, 14;
	shf.r.wrap.b32 	%r1975, %r1972, %r1973, 14;
	mov.b64 	%rd1637, {%r1975, %r1974};
	shf.r.wrap.b32 	%r1976, %r1973, %r1972, 18;
	shf.r.wrap.b32 	%r1977, %r1972, %r1973, 18;
	mov.b64 	%rd1638, {%r1977, %r1976};
	xor.b64  	%rd1639, %rd1638, %rd1637;
	shf.l.wrap.b32 	%r1978, %r1972, %r1973, 23;
	shf.l.wrap.b32 	%r1979, %r1973, %r1972, 23;
	mov.b64 	%rd1640, {%r1979, %r1978};
	xor.b64  	%rd1641, %rd1639, %rd1640;
	xor.b64  	%rd1642, %rd1601, %rd1577;
	and.b64  	%rd1643, %rd1625, %rd1642;
	xor.b64  	%rd1644, %rd1643, %rd1577;
	add.s64 	%rd1645, %rd1553, %rd3417;
	add.s64 	%rd1646, %rd1645, %rd46;
	add.s64 	%rd1647, %rd1646, %rd1644;
	add.s64 	%rd1648, %rd1647, %rd1641;
	add.s64 	%rd1649, %rd1648, %rd1564;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1980,%dummy}, %rd1636;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1981}, %rd1636;
	}
	shf.r.wrap.b32 	%r1982, %r1981, %r1980, 28;
	shf.r.wrap.b32 	%r1983, %r1980, %r1981, 28;
	mov.b64 	%rd1650, {%r1983, %r1982};
	shf.l.wrap.b32 	%r1984, %r1980, %r1981, 30;
	shf.l.wrap.b32 	%r1985, %r1981, %r1980, 30;
	mov.b64 	%rd1651, {%r1985, %r1984};
	xor.b64  	%rd1652, %rd1651, %rd1650;
	shf.l.wrap.b32 	%r1986, %r1980, %r1981, 25;
	shf.l.wrap.b32 	%r1987, %r1981, %r1980, 25;
	mov.b64 	%rd1653, {%r1987, %r1986};
	xor.b64  	%rd1654, %rd1652, %rd1653;
	xor.b64  	%rd1655, %rd1636, %rd1588;
	xor.b64  	%rd1656, %rd1636, %rd1612;
	and.b64  	%rd1657, %rd1656, %rd1655;
	xor.b64  	%rd1658, %rd1657, %rd1636;
	add.s64 	%rd1659, %rd1648, %rd1658;
	add.s64 	%rd1660, %rd1659, %rd1654;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1988,%dummy}, %rd1649;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1989}, %rd1649;
	}
	shf.r.wrap.b32 	%r1990, %r1989, %r1988, 14;
	shf.r.wrap.b32 	%r1991, %r1988, %r1989, 14;
	mov.b64 	%rd1661, {%r1991, %r1990};
	shf.r.wrap.b32 	%r1992, %r1989, %r1988, 18;
	shf.r.wrap.b32 	%r1993, %r1988, %r1989, 18;
	mov.b64 	%rd1662, {%r1993, %r1992};
	xor.b64  	%rd1663, %rd1662, %rd1661;
	shf.l.wrap.b32 	%r1994, %r1988, %r1989, 23;
	shf.l.wrap.b32 	%r1995, %r1989, %r1988, 23;
	mov.b64 	%rd1664, {%r1995, %r1994};
	xor.b64  	%rd1665, %rd1663, %rd1664;
	xor.b64  	%rd1666, %rd1625, %rd1601;
	and.b64  	%rd1667, %rd1649, %rd1666;
	xor.b64  	%rd1668, %rd1667, %rd1601;
	add.s64 	%rd1669, %rd1577, %rd3416;
	add.s64 	%rd1670, %rd1669, %rd47;
	add.s64 	%rd1671, %rd1670, %rd1668;
	add.s64 	%rd1672, %rd1671, %rd1665;
	add.s64 	%rd1673, %rd1672, %rd1588;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1996,%dummy}, %rd1660;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1997}, %rd1660;
	}
	shf.r.wrap.b32 	%r1998, %r1997, %r1996, 28;
	shf.r.wrap.b32 	%r1999, %r1996, %r1997, 28;
	mov.b64 	%rd1674, {%r1999, %r1998};
	shf.l.wrap.b32 	%r2000, %r1996, %r1997, 30;
	shf.l.wrap.b32 	%r2001, %r1997, %r1996, 30;
	mov.b64 	%rd1675, {%r2001, %r2000};
	xor.b64  	%rd1676, %rd1675, %rd1674;
	shf.l.wrap.b32 	%r2002, %r1996, %r1997, 25;
	shf.l.wrap.b32 	%r2003, %r1997, %r1996, 25;
	mov.b64 	%rd1677, {%r2003, %r2002};
	xor.b64  	%rd1678, %rd1676, %rd1677;
	xor.b64  	%rd1679, %rd1660, %rd1612;
	xor.b64  	%rd1680, %rd1660, %rd1636;
	and.b64  	%rd1681, %rd1680, %rd1679;
	xor.b64  	%rd1682, %rd1681, %rd1660;
	add.s64 	%rd1683, %rd1672, %rd1682;
	add.s64 	%rd1684, %rd1683, %rd1678;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2004,%dummy}, %rd1673;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2005}, %rd1673;
	}
	shf.r.wrap.b32 	%r2006, %r2005, %r2004, 14;
	shf.r.wrap.b32 	%r2007, %r2004, %r2005, 14;
	mov.b64 	%rd1685, {%r2007, %r2006};
	shf.r.wrap.b32 	%r2008, %r2005, %r2004, 18;
	shf.r.wrap.b32 	%r2009, %r2004, %r2005, 18;
	mov.b64 	%rd1686, {%r2009, %r2008};
	xor.b64  	%rd1687, %rd1686, %rd1685;
	shf.l.wrap.b32 	%r2010, %r2004, %r2005, 23;
	shf.l.wrap.b32 	%r2011, %r2005, %r2004, 23;
	mov.b64 	%rd1688, {%r2011, %r2010};
	xor.b64  	%rd1689, %rd1687, %rd1688;
	xor.b64  	%rd1690, %rd1649, %rd1625;
	and.b64  	%rd1691, %rd1673, %rd1690;
	xor.b64  	%rd1692, %rd1691, %rd1625;
	add.s64 	%rd1693, %rd1601, %rd3415;
	add.s64 	%rd1694, %rd1693, %rd48;
	add.s64 	%rd1695, %rd1694, %rd1692;
	add.s64 	%rd1696, %rd1695, %rd1689;
	add.s64 	%rd3427, %rd1696, %rd1612;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2012,%dummy}, %rd1684;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2013}, %rd1684;
	}
	shf.r.wrap.b32 	%r2014, %r2013, %r2012, 28;
	shf.r.wrap.b32 	%r2015, %r2012, %r2013, 28;
	mov.b64 	%rd1697, {%r2015, %r2014};
	shf.l.wrap.b32 	%r2016, %r2012, %r2013, 30;
	shf.l.wrap.b32 	%r2017, %r2013, %r2012, 30;
	mov.b64 	%rd1698, {%r2017, %r2016};
	xor.b64  	%rd1699, %rd1698, %rd1697;
	shf.l.wrap.b32 	%r2018, %r2012, %r2013, 25;
	shf.l.wrap.b32 	%r2019, %r2013, %r2012, 25;
	mov.b64 	%rd1700, {%r2019, %r2018};
	xor.b64  	%rd1701, %rd1699, %rd1700;
	xor.b64  	%rd1702, %rd1684, %rd1636;
	xor.b64  	%rd1703, %rd1684, %rd1660;
	and.b64  	%rd1704, %rd1703, %rd1702;
	xor.b64  	%rd1705, %rd1704, %rd1684;
	add.s64 	%rd1706, %rd1696, %rd1705;
	add.s64 	%rd3423, %rd1706, %rd1701;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2020,%dummy}, %rd3427;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2021}, %rd3427;
	}
	shf.r.wrap.b32 	%r2022, %r2021, %r2020, 14;
	shf.r.wrap.b32 	%r2023, %r2020, %r2021, 14;
	mov.b64 	%rd1707, {%r2023, %r2022};
	shf.r.wrap.b32 	%r2024, %r2021, %r2020, 18;
	shf.r.wrap.b32 	%r2025, %r2020, %r2021, 18;
	mov.b64 	%rd1708, {%r2025, %r2024};
	xor.b64  	%rd1709, %rd1708, %rd1707;
	shf.l.wrap.b32 	%r2026, %r2020, %r2021, 23;
	shf.l.wrap.b32 	%r2027, %r2021, %r2020, 23;
	mov.b64 	%rd1710, {%r2027, %r2026};
	xor.b64  	%rd1711, %rd1709, %rd1710;
	xor.b64  	%rd1712, %rd1673, %rd1649;
	and.b64  	%rd1713, %rd3427, %rd1712;
	xor.b64  	%rd1714, %rd1713, %rd1649;
	add.s64 	%rd1715, %rd1625, %rd3414;
	add.s64 	%rd1716, %rd1715, %rd49;
	add.s64 	%rd1717, %rd1716, %rd1714;
	add.s64 	%rd1718, %rd1717, %rd1711;
	add.s64 	%rd3426, %rd1718, %rd1636;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2028,%dummy}, %rd3423;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2029}, %rd3423;
	}
	shf.r.wrap.b32 	%r2030, %r2029, %r2028, 28;
	shf.r.wrap.b32 	%r2031, %r2028, %r2029, 28;
	mov.b64 	%rd1719, {%r2031, %r2030};
	shf.l.wrap.b32 	%r2032, %r2028, %r2029, 30;
	shf.l.wrap.b32 	%r2033, %r2029, %r2028, 30;
	mov.b64 	%rd1720, {%r2033, %r2032};
	xor.b64  	%rd1721, %rd1720, %rd1719;
	shf.l.wrap.b32 	%r2034, %r2028, %r2029, 25;
	shf.l.wrap.b32 	%r2035, %r2029, %r2028, 25;
	mov.b64 	%rd1722, {%r2035, %r2034};
	xor.b64  	%rd1723, %rd1721, %rd1722;
	xor.b64  	%rd1724, %rd3423, %rd1660;
	xor.b64  	%rd1725, %rd3423, %rd1684;
	and.b64  	%rd1726, %rd1725, %rd1724;
	xor.b64  	%rd1727, %rd1726, %rd3423;
	add.s64 	%rd1728, %rd1718, %rd1727;
	add.s64 	%rd3422, %rd1728, %rd1723;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2036,%dummy}, %rd3426;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2037}, %rd3426;
	}
	shf.r.wrap.b32 	%r2038, %r2037, %r2036, 14;
	shf.r.wrap.b32 	%r2039, %r2036, %r2037, 14;
	mov.b64 	%rd1729, {%r2039, %r2038};
	shf.r.wrap.b32 	%r2040, %r2037, %r2036, 18;
	shf.r.wrap.b32 	%r2041, %r2036, %r2037, 18;
	mov.b64 	%rd1730, {%r2041, %r2040};
	xor.b64  	%rd1731, %rd1730, %rd1729;
	shf.l.wrap.b32 	%r2042, %r2036, %r2037, 23;
	shf.l.wrap.b32 	%r2043, %r2037, %r2036, 23;
	mov.b64 	%rd1732, {%r2043, %r2042};
	xor.b64  	%rd1733, %rd1731, %rd1732;
	xor.b64  	%rd1734, %rd3427, %rd1673;
	and.b64  	%rd1735, %rd3426, %rd1734;
	xor.b64  	%rd1736, %rd1735, %rd1673;
	add.s64 	%rd1737, %rd1649, %rd3413;
	add.s64 	%rd1738, %rd1737, %rd50;
	add.s64 	%rd1739, %rd1738, %rd1736;
	add.s64 	%rd1740, %rd1739, %rd1733;
	add.s64 	%rd3425, %rd1740, %rd1660;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2044,%dummy}, %rd3422;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2045}, %rd3422;
	}
	shf.r.wrap.b32 	%r2046, %r2045, %r2044, 28;
	shf.r.wrap.b32 	%r2047, %r2044, %r2045, 28;
	mov.b64 	%rd1741, {%r2047, %r2046};
	shf.l.wrap.b32 	%r2048, %r2044, %r2045, 30;
	shf.l.wrap.b32 	%r2049, %r2045, %r2044, 30;
	mov.b64 	%rd1742, {%r2049, %r2048};
	xor.b64  	%rd1743, %rd1742, %rd1741;
	shf.l.wrap.b32 	%r2050, %r2044, %r2045, 25;
	shf.l.wrap.b32 	%r2051, %r2045, %r2044, 25;
	mov.b64 	%rd1744, {%r2051, %r2050};
	xor.b64  	%rd1745, %rd1743, %rd1744;
	xor.b64  	%rd1746, %rd3422, %rd1684;
	xor.b64  	%rd1747, %rd3422, %rd3423;
	and.b64  	%rd1748, %rd1747, %rd1746;
	xor.b64  	%rd1749, %rd1748, %rd3422;
	add.s64 	%rd1750, %rd1740, %rd1749;
	add.s64 	%rd3421, %rd1750, %rd1745;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2052,%dummy}, %rd3425;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2053}, %rd3425;
	}
	shf.r.wrap.b32 	%r2054, %r2053, %r2052, 14;
	shf.r.wrap.b32 	%r2055, %r2052, %r2053, 14;
	mov.b64 	%rd1751, {%r2055, %r2054};
	shf.r.wrap.b32 	%r2056, %r2053, %r2052, 18;
	shf.r.wrap.b32 	%r2057, %r2052, %r2053, 18;
	mov.b64 	%rd1752, {%r2057, %r2056};
	xor.b64  	%rd1753, %rd1752, %rd1751;
	shf.l.wrap.b32 	%r2058, %r2052, %r2053, 23;
	shf.l.wrap.b32 	%r2059, %r2053, %r2052, 23;
	mov.b64 	%rd1754, {%r2059, %r2058};
	xor.b64  	%rd1755, %rd1753, %rd1754;
	xor.b64  	%rd1756, %rd3426, %rd3427;
	and.b64  	%rd1757, %rd3425, %rd1756;
	xor.b64  	%rd1758, %rd1757, %rd3427;
	add.s64 	%rd1759, %rd1673, %rd3412;
	add.s64 	%rd1760, %rd1759, %rd51;
	add.s64 	%rd1761, %rd1760, %rd1758;
	add.s64 	%rd1762, %rd1761, %rd1755;
	add.s64 	%rd3424, %rd1762, %rd1684;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2060,%dummy}, %rd3421;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2061}, %rd3421;
	}
	shf.r.wrap.b32 	%r2062, %r2061, %r2060, 28;
	shf.r.wrap.b32 	%r2063, %r2060, %r2061, 28;
	mov.b64 	%rd1763, {%r2063, %r2062};
	shf.l.wrap.b32 	%r2064, %r2060, %r2061, 30;
	shf.l.wrap.b32 	%r2065, %r2061, %r2060, 30;
	mov.b64 	%rd1764, {%r2065, %r2064};
	xor.b64  	%rd1765, %rd1764, %rd1763;
	shf.l.wrap.b32 	%r2066, %r2060, %r2061, 25;
	shf.l.wrap.b32 	%r2067, %r2061, %r2060, 25;
	mov.b64 	%rd1766, {%r2067, %r2066};
	xor.b64  	%rd1767, %rd1765, %rd1766;
	xor.b64  	%rd1768, %rd3421, %rd3423;
	xor.b64  	%rd1769, %rd3421, %rd3422;
	and.b64  	%rd1770, %rd1769, %rd1768;
	xor.b64  	%rd1771, %rd1770, %rd3421;
	add.s64 	%rd1772, %rd1762, %rd1771;
	add.s64 	%rd3420, %rd1772, %rd1767;
	mov.u32 	%r8734, 16;
	mov.u64 	%rd3411, k_sha512;

BB4_328:
	shr.u64 	%rd1773, %rd3413, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2068,%dummy}, %rd3413;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2069}, %rd3413;
	}
	shf.r.wrap.b32 	%r2070, %r2069, %r2068, 19;
	shf.r.wrap.b32 	%r2071, %r2068, %r2069, 19;
	mov.b64 	%rd1774, {%r2071, %r2070};
	xor.b64  	%rd1775, %rd1774, %rd1773;
	shf.l.wrap.b32 	%r2072, %r2068, %r2069, 3;
	shf.l.wrap.b32 	%r2073, %r2069, %r2068, 3;
	mov.b64 	%rd1776, {%r2073, %r2072};
	xor.b64  	%rd1777, %rd1775, %rd1776;
	shr.u64 	%rd1778, %rd3429, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2074,%dummy}, %rd3429;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2075}, %rd3429;
	}
	shf.r.wrap.b32 	%r2076, %r2075, %r2074, 1;
	shf.r.wrap.b32 	%r2077, %r2074, %r2075, 1;
	mov.b64 	%rd1779, {%r2077, %r2076};
	xor.b64  	%rd1780, %rd1779, %rd1778;
	shf.r.wrap.b32 	%r2078, %r2075, %r2074, 8;
	shf.r.wrap.b32 	%r2079, %r2074, %r2075, 8;
	mov.b64 	%rd1781, {%r2079, %r2078};
	xor.b64  	%rd1782, %rd1780, %rd1781;
	add.s64 	%rd1783, %rd3418, %rd3428;
	add.s64 	%rd1784, %rd1783, %rd1777;
	add.s64 	%rd3428, %rd1784, %rd1782;
	shr.u64 	%rd1785, %rd3412, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2080,%dummy}, %rd3412;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2081}, %rd3412;
	}
	shf.r.wrap.b32 	%r2082, %r2081, %r2080, 19;
	shf.r.wrap.b32 	%r2083, %r2080, %r2081, 19;
	mov.b64 	%rd1786, {%r2083, %r2082};
	xor.b64  	%rd1787, %rd1786, %rd1785;
	shf.l.wrap.b32 	%r2084, %r2080, %r2081, 3;
	shf.l.wrap.b32 	%r2085, %r2081, %r2080, 3;
	mov.b64 	%rd1788, {%r2085, %r2084};
	xor.b64  	%rd1789, %rd1787, %rd1788;
	shr.u64 	%rd1790, %rd3430, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2086,%dummy}, %rd3430;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2087}, %rd3430;
	}
	shf.r.wrap.b32 	%r2088, %r2087, %r2086, 1;
	shf.r.wrap.b32 	%r2089, %r2086, %r2087, 1;
	mov.b64 	%rd1791, {%r2089, %r2088};
	xor.b64  	%rd1792, %rd1791, %rd1790;
	shf.r.wrap.b32 	%r2090, %r2087, %r2086, 8;
	shf.r.wrap.b32 	%r2091, %r2086, %r2087, 8;
	mov.b64 	%rd1793, {%r2091, %r2090};
	xor.b64  	%rd1794, %rd1792, %rd1793;
	add.s64 	%rd1795, %rd3417, %rd3429;
	add.s64 	%rd1796, %rd1795, %rd1789;
	add.s64 	%rd3429, %rd1796, %rd1794;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2092,%dummy}, %rd3428;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2093}, %rd3428;
	}
	shf.r.wrap.b32 	%r2094, %r2093, %r2092, 19;
	shf.r.wrap.b32 	%r2095, %r2092, %r2093, 19;
	mov.b64 	%rd1797, {%r2095, %r2094};
	shf.l.wrap.b32 	%r2096, %r2092, %r2093, 3;
	shf.l.wrap.b32 	%r2097, %r2093, %r2092, 3;
	mov.b64 	%rd1798, {%r2097, %r2096};
	shr.u64 	%rd1799, %rd3428, 6;
	xor.b64  	%rd1800, %rd1797, %rd1799;
	xor.b64  	%rd1801, %rd1800, %rd1798;
	shr.u64 	%rd1802, %rd3431, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2098,%dummy}, %rd3431;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2099}, %rd3431;
	}
	shf.r.wrap.b32 	%r2100, %r2099, %r2098, 1;
	shf.r.wrap.b32 	%r2101, %r2098, %r2099, 1;
	mov.b64 	%rd1803, {%r2101, %r2100};
	xor.b64  	%rd1804, %rd1803, %rd1802;
	shf.r.wrap.b32 	%r2102, %r2099, %r2098, 8;
	shf.r.wrap.b32 	%r2103, %r2098, %r2099, 8;
	mov.b64 	%rd1805, {%r2103, %r2102};
	xor.b64  	%rd1806, %rd1804, %rd1805;
	add.s64 	%rd1807, %rd3416, %rd3430;
	add.s64 	%rd1808, %rd1807, %rd1801;
	add.s64 	%rd3430, %rd1808, %rd1806;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2104,%dummy}, %rd3429;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2105}, %rd3429;
	}
	shf.r.wrap.b32 	%r2106, %r2105, %r2104, 19;
	shf.r.wrap.b32 	%r2107, %r2104, %r2105, 19;
	mov.b64 	%rd1809, {%r2107, %r2106};
	shf.l.wrap.b32 	%r2108, %r2104, %r2105, 3;
	shf.l.wrap.b32 	%r2109, %r2105, %r2104, 3;
	mov.b64 	%rd1810, {%r2109, %r2108};
	shr.u64 	%rd1811, %rd3429, 6;
	xor.b64  	%rd1812, %rd1809, %rd1811;
	xor.b64  	%rd1813, %rd1812, %rd1810;
	shr.u64 	%rd1814, %rd3432, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2110,%dummy}, %rd3432;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2111}, %rd3432;
	}
	shf.r.wrap.b32 	%r2112, %r2111, %r2110, 1;
	shf.r.wrap.b32 	%r2113, %r2110, %r2111, 1;
	mov.b64 	%rd1815, {%r2113, %r2112};
	xor.b64  	%rd1816, %rd1815, %rd1814;
	shf.r.wrap.b32 	%r2114, %r2111, %r2110, 8;
	shf.r.wrap.b32 	%r2115, %r2110, %r2111, 8;
	mov.b64 	%rd1817, {%r2115, %r2114};
	xor.b64  	%rd1818, %rd1816, %rd1817;
	add.s64 	%rd1819, %rd3415, %rd3431;
	add.s64 	%rd1820, %rd1819, %rd1813;
	add.s64 	%rd3431, %rd1820, %rd1818;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2116,%dummy}, %rd3430;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2117}, %rd3430;
	}
	shf.r.wrap.b32 	%r2118, %r2117, %r2116, 19;
	shf.r.wrap.b32 	%r2119, %r2116, %r2117, 19;
	mov.b64 	%rd1821, {%r2119, %r2118};
	shf.l.wrap.b32 	%r2120, %r2116, %r2117, 3;
	shf.l.wrap.b32 	%r2121, %r2117, %r2116, 3;
	mov.b64 	%rd1822, {%r2121, %r2120};
	shr.u64 	%rd1823, %rd3430, 6;
	xor.b64  	%rd1824, %rd1821, %rd1823;
	xor.b64  	%rd1825, %rd1824, %rd1822;
	shr.u64 	%rd1826, %rd3433, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2122,%dummy}, %rd3433;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2123}, %rd3433;
	}
	shf.r.wrap.b32 	%r2124, %r2123, %r2122, 1;
	shf.r.wrap.b32 	%r2125, %r2122, %r2123, 1;
	mov.b64 	%rd1827, {%r2125, %r2124};
	xor.b64  	%rd1828, %rd1827, %rd1826;
	shf.r.wrap.b32 	%r2126, %r2123, %r2122, 8;
	shf.r.wrap.b32 	%r2127, %r2122, %r2123, 8;
	mov.b64 	%rd1829, {%r2127, %r2126};
	xor.b64  	%rd1830, %rd1828, %rd1829;
	add.s64 	%rd1831, %rd3414, %rd3432;
	add.s64 	%rd1832, %rd1831, %rd1825;
	add.s64 	%rd3432, %rd1832, %rd1830;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2128,%dummy}, %rd3431;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2129}, %rd3431;
	}
	shf.r.wrap.b32 	%r2130, %r2129, %r2128, 19;
	shf.r.wrap.b32 	%r2131, %r2128, %r2129, 19;
	mov.b64 	%rd1833, {%r2131, %r2130};
	shf.l.wrap.b32 	%r2132, %r2128, %r2129, 3;
	shf.l.wrap.b32 	%r2133, %r2129, %r2128, 3;
	mov.b64 	%rd1834, {%r2133, %r2132};
	shr.u64 	%rd1835, %rd3431, 6;
	xor.b64  	%rd1836, %rd1833, %rd1835;
	xor.b64  	%rd1837, %rd1836, %rd1834;
	shr.u64 	%rd1838, %rd3434, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2134,%dummy}, %rd3434;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2135}, %rd3434;
	}
	shf.r.wrap.b32 	%r2136, %r2135, %r2134, 1;
	shf.r.wrap.b32 	%r2137, %r2134, %r2135, 1;
	mov.b64 	%rd1839, {%r2137, %r2136};
	xor.b64  	%rd1840, %rd1839, %rd1838;
	shf.r.wrap.b32 	%r2138, %r2135, %r2134, 8;
	shf.r.wrap.b32 	%r2139, %r2134, %r2135, 8;
	mov.b64 	%rd1841, {%r2139, %r2138};
	xor.b64  	%rd1842, %rd1840, %rd1841;
	add.s64 	%rd1843, %rd3413, %rd3433;
	add.s64 	%rd1844, %rd1843, %rd1837;
	add.s64 	%rd3433, %rd1844, %rd1842;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2140,%dummy}, %rd3432;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2141}, %rd3432;
	}
	shf.r.wrap.b32 	%r2142, %r2141, %r2140, 19;
	shf.r.wrap.b32 	%r2143, %r2140, %r2141, 19;
	mov.b64 	%rd1845, {%r2143, %r2142};
	shf.l.wrap.b32 	%r2144, %r2140, %r2141, 3;
	shf.l.wrap.b32 	%r2145, %r2141, %r2140, 3;
	mov.b64 	%rd1846, {%r2145, %r2144};
	shr.u64 	%rd1847, %rd3432, 6;
	xor.b64  	%rd1848, %rd1845, %rd1847;
	xor.b64  	%rd1849, %rd1848, %rd1846;
	shr.u64 	%rd1850, %rd3435, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2146,%dummy}, %rd3435;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2147}, %rd3435;
	}
	shf.r.wrap.b32 	%r2148, %r2147, %r2146, 1;
	shf.r.wrap.b32 	%r2149, %r2146, %r2147, 1;
	mov.b64 	%rd1851, {%r2149, %r2148};
	xor.b64  	%rd1852, %rd1851, %rd1850;
	shf.r.wrap.b32 	%r2150, %r2147, %r2146, 8;
	shf.r.wrap.b32 	%r2151, %r2146, %r2147, 8;
	mov.b64 	%rd1853, {%r2151, %r2150};
	xor.b64  	%rd1854, %rd1852, %rd1853;
	add.s64 	%rd1855, %rd3412, %rd3434;
	add.s64 	%rd1856, %rd1855, %rd1849;
	add.s64 	%rd3434, %rd1856, %rd1854;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2152,%dummy}, %rd3433;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2153}, %rd3433;
	}
	shf.r.wrap.b32 	%r2154, %r2153, %r2152, 19;
	shf.r.wrap.b32 	%r2155, %r2152, %r2153, 19;
	mov.b64 	%rd1857, {%r2155, %r2154};
	shf.l.wrap.b32 	%r2156, %r2152, %r2153, 3;
	shf.l.wrap.b32 	%r2157, %r2153, %r2152, 3;
	mov.b64 	%rd1858, {%r2157, %r2156};
	shr.u64 	%rd1859, %rd3433, 6;
	xor.b64  	%rd1860, %rd1857, %rd1859;
	xor.b64  	%rd1861, %rd1860, %rd1858;
	shr.u64 	%rd1862, %rd3419, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2158,%dummy}, %rd3419;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2159}, %rd3419;
	}
	shf.r.wrap.b32 	%r2160, %r2159, %r2158, 1;
	shf.r.wrap.b32 	%r2161, %r2158, %r2159, 1;
	mov.b64 	%rd1863, {%r2161, %r2160};
	xor.b64  	%rd1864, %rd1863, %rd1862;
	shf.r.wrap.b32 	%r2162, %r2159, %r2158, 8;
	shf.r.wrap.b32 	%r2163, %r2158, %r2159, 8;
	mov.b64 	%rd1865, {%r2163, %r2162};
	xor.b64  	%rd1866, %rd1864, %rd1865;
	add.s64 	%rd1867, %rd3428, %rd3435;
	add.s64 	%rd1868, %rd1867, %rd1861;
	add.s64 	%rd3435, %rd1868, %rd1866;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2164,%dummy}, %rd3434;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2165}, %rd3434;
	}
	shf.r.wrap.b32 	%r2166, %r2165, %r2164, 19;
	shf.r.wrap.b32 	%r2167, %r2164, %r2165, 19;
	mov.b64 	%rd1869, {%r2167, %r2166};
	shf.l.wrap.b32 	%r2168, %r2164, %r2165, 3;
	shf.l.wrap.b32 	%r2169, %r2165, %r2164, 3;
	mov.b64 	%rd1870, {%r2169, %r2168};
	shr.u64 	%rd1871, %rd3434, 6;
	xor.b64  	%rd1872, %rd1869, %rd1871;
	xor.b64  	%rd1873, %rd1872, %rd1870;
	shr.u64 	%rd1874, %rd3418, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2170,%dummy}, %rd3418;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2171}, %rd3418;
	}
	shf.r.wrap.b32 	%r2172, %r2171, %r2170, 1;
	shf.r.wrap.b32 	%r2173, %r2170, %r2171, 1;
	mov.b64 	%rd1875, {%r2173, %r2172};
	xor.b64  	%rd1876, %rd1875, %rd1874;
	shf.r.wrap.b32 	%r2174, %r2171, %r2170, 8;
	shf.r.wrap.b32 	%r2175, %r2170, %r2171, 8;
	mov.b64 	%rd1877, {%r2175, %r2174};
	xor.b64  	%rd1878, %rd1876, %rd1877;
	add.s64 	%rd1879, %rd3429, %rd3419;
	add.s64 	%rd1880, %rd1879, %rd1873;
	add.s64 	%rd3419, %rd1880, %rd1878;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2176,%dummy}, %rd3435;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2177}, %rd3435;
	}
	shf.r.wrap.b32 	%r2178, %r2177, %r2176, 19;
	shf.r.wrap.b32 	%r2179, %r2176, %r2177, 19;
	mov.b64 	%rd1881, {%r2179, %r2178};
	shf.l.wrap.b32 	%r2180, %r2176, %r2177, 3;
	shf.l.wrap.b32 	%r2181, %r2177, %r2176, 3;
	mov.b64 	%rd1882, {%r2181, %r2180};
	shr.u64 	%rd1883, %rd3435, 6;
	xor.b64  	%rd1884, %rd1881, %rd1883;
	xor.b64  	%rd1885, %rd1884, %rd1882;
	shr.u64 	%rd1886, %rd3417, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2182,%dummy}, %rd3417;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2183}, %rd3417;
	}
	shf.r.wrap.b32 	%r2184, %r2183, %r2182, 1;
	shf.r.wrap.b32 	%r2185, %r2182, %r2183, 1;
	mov.b64 	%rd1887, {%r2185, %r2184};
	xor.b64  	%rd1888, %rd1887, %rd1886;
	shf.r.wrap.b32 	%r2186, %r2183, %r2182, 8;
	shf.r.wrap.b32 	%r2187, %r2182, %r2183, 8;
	mov.b64 	%rd1889, {%r2187, %r2186};
	xor.b64  	%rd1890, %rd1888, %rd1889;
	add.s64 	%rd1891, %rd3430, %rd3418;
	add.s64 	%rd1892, %rd1891, %rd1885;
	add.s64 	%rd3418, %rd1892, %rd1890;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2188,%dummy}, %rd3419;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2189}, %rd3419;
	}
	shf.r.wrap.b32 	%r2190, %r2189, %r2188, 19;
	shf.r.wrap.b32 	%r2191, %r2188, %r2189, 19;
	mov.b64 	%rd1893, {%r2191, %r2190};
	shf.l.wrap.b32 	%r2192, %r2188, %r2189, 3;
	shf.l.wrap.b32 	%r2193, %r2189, %r2188, 3;
	mov.b64 	%rd1894, {%r2193, %r2192};
	shr.u64 	%rd1895, %rd3419, 6;
	xor.b64  	%rd1896, %rd1893, %rd1895;
	xor.b64  	%rd1897, %rd1896, %rd1894;
	shr.u64 	%rd1898, %rd3416, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2194,%dummy}, %rd3416;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2195}, %rd3416;
	}
	shf.r.wrap.b32 	%r2196, %r2195, %r2194, 1;
	shf.r.wrap.b32 	%r2197, %r2194, %r2195, 1;
	mov.b64 	%rd1899, {%r2197, %r2196};
	xor.b64  	%rd1900, %rd1899, %rd1898;
	shf.r.wrap.b32 	%r2198, %r2195, %r2194, 8;
	shf.r.wrap.b32 	%r2199, %r2194, %r2195, 8;
	mov.b64 	%rd1901, {%r2199, %r2198};
	xor.b64  	%rd1902, %rd1900, %rd1901;
	add.s64 	%rd1903, %rd3431, %rd3417;
	add.s64 	%rd1904, %rd1903, %rd1897;
	add.s64 	%rd3417, %rd1904, %rd1902;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2200,%dummy}, %rd3418;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2201}, %rd3418;
	}
	shf.r.wrap.b32 	%r2202, %r2201, %r2200, 19;
	shf.r.wrap.b32 	%r2203, %r2200, %r2201, 19;
	mov.b64 	%rd1905, {%r2203, %r2202};
	shf.l.wrap.b32 	%r2204, %r2200, %r2201, 3;
	shf.l.wrap.b32 	%r2205, %r2201, %r2200, 3;
	mov.b64 	%rd1906, {%r2205, %r2204};
	shr.u64 	%rd1907, %rd3418, 6;
	xor.b64  	%rd1908, %rd1905, %rd1907;
	xor.b64  	%rd1909, %rd1908, %rd1906;
	shr.u64 	%rd1910, %rd3415, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2206,%dummy}, %rd3415;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2207}, %rd3415;
	}
	shf.r.wrap.b32 	%r2208, %r2207, %r2206, 1;
	shf.r.wrap.b32 	%r2209, %r2206, %r2207, 1;
	mov.b64 	%rd1911, {%r2209, %r2208};
	xor.b64  	%rd1912, %rd1911, %rd1910;
	shf.r.wrap.b32 	%r2210, %r2207, %r2206, 8;
	shf.r.wrap.b32 	%r2211, %r2206, %r2207, 8;
	mov.b64 	%rd1913, {%r2211, %r2210};
	xor.b64  	%rd1914, %rd1912, %rd1913;
	add.s64 	%rd1915, %rd3432, %rd3416;
	add.s64 	%rd1916, %rd1915, %rd1909;
	add.s64 	%rd3416, %rd1916, %rd1914;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2212,%dummy}, %rd3417;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2213}, %rd3417;
	}
	shf.r.wrap.b32 	%r2214, %r2213, %r2212, 19;
	shf.r.wrap.b32 	%r2215, %r2212, %r2213, 19;
	mov.b64 	%rd1917, {%r2215, %r2214};
	shf.l.wrap.b32 	%r2216, %r2212, %r2213, 3;
	shf.l.wrap.b32 	%r2217, %r2213, %r2212, 3;
	mov.b64 	%rd1918, {%r2217, %r2216};
	shr.u64 	%rd1919, %rd3417, 6;
	xor.b64  	%rd1920, %rd1917, %rd1919;
	xor.b64  	%rd1921, %rd1920, %rd1918;
	shr.u64 	%rd1922, %rd3414, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2218,%dummy}, %rd3414;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2219}, %rd3414;
	}
	shf.r.wrap.b32 	%r2220, %r2219, %r2218, 1;
	shf.r.wrap.b32 	%r2221, %r2218, %r2219, 1;
	mov.b64 	%rd1923, {%r2221, %r2220};
	xor.b64  	%rd1924, %rd1923, %rd1922;
	shf.r.wrap.b32 	%r2222, %r2219, %r2218, 8;
	shf.r.wrap.b32 	%r2223, %r2218, %r2219, 8;
	mov.b64 	%rd1925, {%r2223, %r2222};
	xor.b64  	%rd1926, %rd1924, %rd1925;
	add.s64 	%rd1927, %rd3433, %rd3415;
	add.s64 	%rd1928, %rd1927, %rd1921;
	add.s64 	%rd3415, %rd1928, %rd1926;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2224,%dummy}, %rd3416;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2225}, %rd3416;
	}
	shf.r.wrap.b32 	%r2226, %r2225, %r2224, 19;
	shf.r.wrap.b32 	%r2227, %r2224, %r2225, 19;
	mov.b64 	%rd1929, {%r2227, %r2226};
	shf.l.wrap.b32 	%r2228, %r2224, %r2225, 3;
	shf.l.wrap.b32 	%r2229, %r2225, %r2224, 3;
	mov.b64 	%rd1930, {%r2229, %r2228};
	shr.u64 	%rd1931, %rd3416, 6;
	xor.b64  	%rd1932, %rd1929, %rd1931;
	xor.b64  	%rd1933, %rd1932, %rd1930;
	shr.u64 	%rd1934, %rd3413, 7;
	shf.r.wrap.b32 	%r2230, %r2069, %r2068, 1;
	shf.r.wrap.b32 	%r2231, %r2068, %r2069, 1;
	mov.b64 	%rd1935, {%r2231, %r2230};
	xor.b64  	%rd1936, %rd1935, %rd1934;
	shf.r.wrap.b32 	%r2232, %r2069, %r2068, 8;
	shf.r.wrap.b32 	%r2233, %r2068, %r2069, 8;
	mov.b64 	%rd1937, {%r2233, %r2232};
	xor.b64  	%rd1938, %rd1936, %rd1937;
	add.s64 	%rd1939, %rd3434, %rd3414;
	add.s64 	%rd1940, %rd1939, %rd1933;
	add.s64 	%rd3414, %rd1940, %rd1938;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2234,%dummy}, %rd3415;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2235}, %rd3415;
	}
	shf.r.wrap.b32 	%r2236, %r2235, %r2234, 19;
	shf.r.wrap.b32 	%r2237, %r2234, %r2235, 19;
	mov.b64 	%rd1941, {%r2237, %r2236};
	shf.l.wrap.b32 	%r2238, %r2234, %r2235, 3;
	shf.l.wrap.b32 	%r2239, %r2235, %r2234, 3;
	mov.b64 	%rd1942, {%r2239, %r2238};
	shr.u64 	%rd1943, %rd3415, 6;
	xor.b64  	%rd1944, %rd1941, %rd1943;
	xor.b64  	%rd1945, %rd1944, %rd1942;
	shr.u64 	%rd1946, %rd3412, 7;
	shf.r.wrap.b32 	%r2240, %r2081, %r2080, 1;
	shf.r.wrap.b32 	%r2241, %r2080, %r2081, 1;
	mov.b64 	%rd1947, {%r2241, %r2240};
	xor.b64  	%rd1948, %rd1947, %rd1946;
	shf.r.wrap.b32 	%r2242, %r2081, %r2080, 8;
	shf.r.wrap.b32 	%r2243, %r2080, %r2081, 8;
	mov.b64 	%rd1949, {%r2243, %r2242};
	xor.b64  	%rd1950, %rd1948, %rd1949;
	add.s64 	%rd1951, %rd3435, %rd3413;
	add.s64 	%rd1952, %rd1951, %rd1945;
	add.s64 	%rd3413, %rd1952, %rd1950;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2244,%dummy}, %rd3414;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2245}, %rd3414;
	}
	shf.r.wrap.b32 	%r2246, %r2245, %r2244, 19;
	shf.r.wrap.b32 	%r2247, %r2244, %r2245, 19;
	mov.b64 	%rd1953, {%r2247, %r2246};
	shf.l.wrap.b32 	%r2248, %r2244, %r2245, 3;
	shf.l.wrap.b32 	%r2249, %r2245, %r2244, 3;
	mov.b64 	%rd1954, {%r2249, %r2248};
	shr.u64 	%rd1955, %rd3414, 6;
	xor.b64  	%rd1956, %rd1953, %rd1955;
	xor.b64  	%rd1957, %rd1956, %rd1954;
	shf.r.wrap.b32 	%r2250, %r2093, %r2092, 1;
	shf.r.wrap.b32 	%r2251, %r2092, %r2093, 1;
	mov.b64 	%rd1958, {%r2251, %r2250};
	shf.r.wrap.b32 	%r2252, %r2093, %r2092, 8;
	shf.r.wrap.b32 	%r2253, %r2092, %r2093, 8;
	mov.b64 	%rd1959, {%r2253, %r2252};
	shr.u64 	%rd1960, %rd3428, 7;
	xor.b64  	%rd1961, %rd1958, %rd1960;
	xor.b64  	%rd1962, %rd1961, %rd1959;
	add.s64 	%rd1963, %rd3419, %rd3412;
	add.s64 	%rd1964, %rd1963, %rd1957;
	add.s64 	%rd3412, %rd1964, %rd1962;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2254,%dummy}, %rd3424;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2255}, %rd3424;
	}
	shf.r.wrap.b32 	%r2256, %r2255, %r2254, 18;
	shf.r.wrap.b32 	%r2257, %r2254, %r2255, 18;
	mov.b64 	%rd1965, {%r2257, %r2256};
	shf.r.wrap.b32 	%r2258, %r2255, %r2254, 14;
	shf.r.wrap.b32 	%r2259, %r2254, %r2255, 14;
	mov.b64 	%rd1966, {%r2259, %r2258};
	xor.b64  	%rd1967, %rd1965, %rd1966;
	shf.l.wrap.b32 	%r2260, %r2254, %r2255, 23;
	shf.l.wrap.b32 	%r2261, %r2255, %r2254, 23;
	mov.b64 	%rd1968, {%r2261, %r2260};
	xor.b64  	%rd1969, %rd1967, %rd1968;
	xor.b64  	%rd1970, %rd3425, %rd3426;
	and.b64  	%rd1971, %rd1970, %rd3424;
	xor.b64  	%rd1972, %rd1971, %rd3426;
	add.s64 	%rd1973, %rd1972, %rd3427;
	add.s64 	%rd1974, %rd1973, %rd3428;
	add.s64 	%rd221, %rd3411, 128;
	ld.const.u64 	%rd1975, [%rd3411+128];
	add.s64 	%rd1976, %rd1974, %rd1975;
	add.s64 	%rd1977, %rd1976, %rd1969;
	add.s64 	%rd1978, %rd1977, %rd3423;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2262}, %rd3420;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2263,%dummy}, %rd3420;
	}
	shf.l.wrap.b32 	%r2264, %r2263, %r2262, 30;
	shf.l.wrap.b32 	%r2265, %r2262, %r2263, 30;
	mov.b64 	%rd1979, {%r2265, %r2264};
	shf.r.wrap.b32 	%r2266, %r2262, %r2263, 28;
	shf.r.wrap.b32 	%r2267, %r2263, %r2262, 28;
	mov.b64 	%rd1980, {%r2267, %r2266};
	xor.b64  	%rd1981, %rd1979, %rd1980;
	shf.l.wrap.b32 	%r2268, %r2263, %r2262, 25;
	shf.l.wrap.b32 	%r2269, %r2262, %r2263, 25;
	mov.b64 	%rd1982, {%r2269, %r2268};
	xor.b64  	%rd1983, %rd1981, %rd1982;
	xor.b64  	%rd1984, %rd3420, %rd3421;
	xor.b64  	%rd1985, %rd3420, %rd3422;
	and.b64  	%rd1986, %rd1984, %rd1985;
	xor.b64  	%rd1987, %rd1986, %rd3420;
	add.s64 	%rd1988, %rd1977, %rd1987;
	add.s64 	%rd1989, %rd1988, %rd1983;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2270,%dummy}, %rd1978;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2271}, %rd1978;
	}
	shf.r.wrap.b32 	%r2272, %r2271, %r2270, 14;
	shf.r.wrap.b32 	%r2273, %r2270, %r2271, 14;
	mov.b64 	%rd1990, {%r2273, %r2272};
	shf.r.wrap.b32 	%r2274, %r2271, %r2270, 18;
	shf.r.wrap.b32 	%r2275, %r2270, %r2271, 18;
	mov.b64 	%rd1991, {%r2275, %r2274};
	xor.b64  	%rd1992, %rd1991, %rd1990;
	shf.l.wrap.b32 	%r2276, %r2270, %r2271, 23;
	shf.l.wrap.b32 	%r2277, %r2271, %r2270, 23;
	mov.b64 	%rd1993, {%r2277, %r2276};
	xor.b64  	%rd1994, %rd1992, %rd1993;
	xor.b64  	%rd1995, %rd3424, %rd3425;
	and.b64  	%rd1996, %rd1978, %rd1995;
	xor.b64  	%rd1997, %rd1996, %rd3425;
	add.s64 	%rd1998, %rd3429, %rd3426;
	ld.const.u64 	%rd1999, [%rd3411+136];
	add.s64 	%rd2000, %rd1998, %rd1999;
	add.s64 	%rd2001, %rd2000, %rd1997;
	add.s64 	%rd2002, %rd2001, %rd1994;
	add.s64 	%rd2003, %rd2002, %rd3422;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2278,%dummy}, %rd1989;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2279}, %rd1989;
	}
	shf.r.wrap.b32 	%r2280, %r2279, %r2278, 28;
	shf.r.wrap.b32 	%r2281, %r2278, %r2279, 28;
	mov.b64 	%rd2004, {%r2281, %r2280};
	shf.l.wrap.b32 	%r2282, %r2278, %r2279, 30;
	shf.l.wrap.b32 	%r2283, %r2279, %r2278, 30;
	mov.b64 	%rd2005, {%r2283, %r2282};
	xor.b64  	%rd2006, %rd2005, %rd2004;
	shf.l.wrap.b32 	%r2284, %r2278, %r2279, 25;
	shf.l.wrap.b32 	%r2285, %r2279, %r2278, 25;
	mov.b64 	%rd2007, {%r2285, %r2284};
	xor.b64  	%rd2008, %rd2006, %rd2007;
	xor.b64  	%rd2009, %rd1989, %rd3421;
	xor.b64  	%rd2010, %rd1989, %rd3420;
	and.b64  	%rd2011, %rd2010, %rd2009;
	xor.b64  	%rd2012, %rd2011, %rd1989;
	add.s64 	%rd2013, %rd2002, %rd2012;
	add.s64 	%rd2014, %rd2013, %rd2008;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2286,%dummy}, %rd2003;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2287}, %rd2003;
	}
	shf.r.wrap.b32 	%r2288, %r2287, %r2286, 14;
	shf.r.wrap.b32 	%r2289, %r2286, %r2287, 14;
	mov.b64 	%rd2015, {%r2289, %r2288};
	shf.r.wrap.b32 	%r2290, %r2287, %r2286, 18;
	shf.r.wrap.b32 	%r2291, %r2286, %r2287, 18;
	mov.b64 	%rd2016, {%r2291, %r2290};
	xor.b64  	%rd2017, %rd2016, %rd2015;
	shf.l.wrap.b32 	%r2292, %r2286, %r2287, 23;
	shf.l.wrap.b32 	%r2293, %r2287, %r2286, 23;
	mov.b64 	%rd2018, {%r2293, %r2292};
	xor.b64  	%rd2019, %rd2017, %rd2018;
	xor.b64  	%rd2020, %rd1978, %rd3424;
	and.b64  	%rd2021, %rd2003, %rd2020;
	xor.b64  	%rd2022, %rd2021, %rd3424;
	add.s64 	%rd2023, %rd3430, %rd3425;
	ld.const.u64 	%rd2024, [%rd3411+144];
	add.s64 	%rd2025, %rd2023, %rd2024;
	add.s64 	%rd2026, %rd2025, %rd2022;
	add.s64 	%rd2027, %rd2026, %rd2019;
	add.s64 	%rd2028, %rd2027, %rd3421;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2294,%dummy}, %rd2014;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2295}, %rd2014;
	}
	shf.r.wrap.b32 	%r2296, %r2295, %r2294, 28;
	shf.r.wrap.b32 	%r2297, %r2294, %r2295, 28;
	mov.b64 	%rd2029, {%r2297, %r2296};
	shf.l.wrap.b32 	%r2298, %r2294, %r2295, 30;
	shf.l.wrap.b32 	%r2299, %r2295, %r2294, 30;
	mov.b64 	%rd2030, {%r2299, %r2298};
	xor.b64  	%rd2031, %rd2030, %rd2029;
	shf.l.wrap.b32 	%r2300, %r2294, %r2295, 25;
	shf.l.wrap.b32 	%r2301, %r2295, %r2294, 25;
	mov.b64 	%rd2032, {%r2301, %r2300};
	xor.b64  	%rd2033, %rd2031, %rd2032;
	xor.b64  	%rd2034, %rd2014, %rd3420;
	xor.b64  	%rd2035, %rd2014, %rd1989;
	and.b64  	%rd2036, %rd2035, %rd2034;
	xor.b64  	%rd2037, %rd2036, %rd2014;
	add.s64 	%rd2038, %rd2027, %rd2037;
	add.s64 	%rd2039, %rd2038, %rd2033;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2302,%dummy}, %rd2028;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2303}, %rd2028;
	}
	shf.r.wrap.b32 	%r2304, %r2303, %r2302, 14;
	shf.r.wrap.b32 	%r2305, %r2302, %r2303, 14;
	mov.b64 	%rd2040, {%r2305, %r2304};
	shf.r.wrap.b32 	%r2306, %r2303, %r2302, 18;
	shf.r.wrap.b32 	%r2307, %r2302, %r2303, 18;
	mov.b64 	%rd2041, {%r2307, %r2306};
	xor.b64  	%rd2042, %rd2041, %rd2040;
	shf.l.wrap.b32 	%r2308, %r2302, %r2303, 23;
	shf.l.wrap.b32 	%r2309, %r2303, %r2302, 23;
	mov.b64 	%rd2043, {%r2309, %r2308};
	xor.b64  	%rd2044, %rd2042, %rd2043;
	xor.b64  	%rd2045, %rd2003, %rd1978;
	and.b64  	%rd2046, %rd2028, %rd2045;
	xor.b64  	%rd2047, %rd2046, %rd1978;
	add.s64 	%rd2048, %rd3431, %rd3424;
	ld.const.u64 	%rd2049, [%rd3411+152];
	add.s64 	%rd2050, %rd2048, %rd2049;
	add.s64 	%rd2051, %rd2050, %rd2047;
	add.s64 	%rd2052, %rd2051, %rd2044;
	add.s64 	%rd2053, %rd2052, %rd3420;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2310,%dummy}, %rd2039;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2311}, %rd2039;
	}
	shf.r.wrap.b32 	%r2312, %r2311, %r2310, 28;
	shf.r.wrap.b32 	%r2313, %r2310, %r2311, 28;
	mov.b64 	%rd2054, {%r2313, %r2312};
	shf.l.wrap.b32 	%r2314, %r2310, %r2311, 30;
	shf.l.wrap.b32 	%r2315, %r2311, %r2310, 30;
	mov.b64 	%rd2055, {%r2315, %r2314};
	xor.b64  	%rd2056, %rd2055, %rd2054;
	shf.l.wrap.b32 	%r2316, %r2310, %r2311, 25;
	shf.l.wrap.b32 	%r2317, %r2311, %r2310, 25;
	mov.b64 	%rd2057, {%r2317, %r2316};
	xor.b64  	%rd2058, %rd2056, %rd2057;
	xor.b64  	%rd2059, %rd2039, %rd1989;
	xor.b64  	%rd2060, %rd2039, %rd2014;
	and.b64  	%rd2061, %rd2060, %rd2059;
	xor.b64  	%rd2062, %rd2061, %rd2039;
	add.s64 	%rd2063, %rd2052, %rd2062;
	add.s64 	%rd2064, %rd2063, %rd2058;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2318,%dummy}, %rd2053;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2319}, %rd2053;
	}
	shf.r.wrap.b32 	%r2320, %r2319, %r2318, 14;
	shf.r.wrap.b32 	%r2321, %r2318, %r2319, 14;
	mov.b64 	%rd2065, {%r2321, %r2320};
	shf.r.wrap.b32 	%r2322, %r2319, %r2318, 18;
	shf.r.wrap.b32 	%r2323, %r2318, %r2319, 18;
	mov.b64 	%rd2066, {%r2323, %r2322};
	xor.b64  	%rd2067, %rd2066, %rd2065;
	shf.l.wrap.b32 	%r2324, %r2318, %r2319, 23;
	shf.l.wrap.b32 	%r2325, %r2319, %r2318, 23;
	mov.b64 	%rd2068, {%r2325, %r2324};
	xor.b64  	%rd2069, %rd2067, %rd2068;
	xor.b64  	%rd2070, %rd2028, %rd2003;
	and.b64  	%rd2071, %rd2053, %rd2070;
	xor.b64  	%rd2072, %rd2071, %rd2003;
	add.s64 	%rd2073, %rd1978, %rd3432;
	ld.const.u64 	%rd2074, [%rd3411+160];
	add.s64 	%rd2075, %rd2073, %rd2074;
	add.s64 	%rd2076, %rd2075, %rd2072;
	add.s64 	%rd2077, %rd2076, %rd2069;
	add.s64 	%rd2078, %rd2077, %rd1989;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2326,%dummy}, %rd2064;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2327}, %rd2064;
	}
	shf.r.wrap.b32 	%r2328, %r2327, %r2326, 28;
	shf.r.wrap.b32 	%r2329, %r2326, %r2327, 28;
	mov.b64 	%rd2079, {%r2329, %r2328};
	shf.l.wrap.b32 	%r2330, %r2326, %r2327, 30;
	shf.l.wrap.b32 	%r2331, %r2327, %r2326, 30;
	mov.b64 	%rd2080, {%r2331, %r2330};
	xor.b64  	%rd2081, %rd2080, %rd2079;
	shf.l.wrap.b32 	%r2332, %r2326, %r2327, 25;
	shf.l.wrap.b32 	%r2333, %r2327, %r2326, 25;
	mov.b64 	%rd2082, {%r2333, %r2332};
	xor.b64  	%rd2083, %rd2081, %rd2082;
	xor.b64  	%rd2084, %rd2064, %rd2014;
	xor.b64  	%rd2085, %rd2064, %rd2039;
	and.b64  	%rd2086, %rd2085, %rd2084;
	xor.b64  	%rd2087, %rd2086, %rd2064;
	add.s64 	%rd2088, %rd2077, %rd2087;
	add.s64 	%rd2089, %rd2088, %rd2083;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2334,%dummy}, %rd2078;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2335}, %rd2078;
	}
	shf.r.wrap.b32 	%r2336, %r2335, %r2334, 14;
	shf.r.wrap.b32 	%r2337, %r2334, %r2335, 14;
	mov.b64 	%rd2090, {%r2337, %r2336};
	shf.r.wrap.b32 	%r2338, %r2335, %r2334, 18;
	shf.r.wrap.b32 	%r2339, %r2334, %r2335, 18;
	mov.b64 	%rd2091, {%r2339, %r2338};
	xor.b64  	%rd2092, %rd2091, %rd2090;
	shf.l.wrap.b32 	%r2340, %r2334, %r2335, 23;
	shf.l.wrap.b32 	%r2341, %r2335, %r2334, 23;
	mov.b64 	%rd2093, {%r2341, %r2340};
	xor.b64  	%rd2094, %rd2092, %rd2093;
	xor.b64  	%rd2095, %rd2053, %rd2028;
	and.b64  	%rd2096, %rd2078, %rd2095;
	xor.b64  	%rd2097, %rd2096, %rd2028;
	add.s64 	%rd2098, %rd2003, %rd3433;
	ld.const.u64 	%rd2099, [%rd3411+168];
	add.s64 	%rd2100, %rd2098, %rd2099;
	add.s64 	%rd2101, %rd2100, %rd2097;
	add.s64 	%rd2102, %rd2101, %rd2094;
	add.s64 	%rd2103, %rd2102, %rd2014;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2342,%dummy}, %rd2089;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2343}, %rd2089;
	}
	shf.r.wrap.b32 	%r2344, %r2343, %r2342, 28;
	shf.r.wrap.b32 	%r2345, %r2342, %r2343, 28;
	mov.b64 	%rd2104, {%r2345, %r2344};
	shf.l.wrap.b32 	%r2346, %r2342, %r2343, 30;
	shf.l.wrap.b32 	%r2347, %r2343, %r2342, 30;
	mov.b64 	%rd2105, {%r2347, %r2346};
	xor.b64  	%rd2106, %rd2105, %rd2104;
	shf.l.wrap.b32 	%r2348, %r2342, %r2343, 25;
	shf.l.wrap.b32 	%r2349, %r2343, %r2342, 25;
	mov.b64 	%rd2107, {%r2349, %r2348};
	xor.b64  	%rd2108, %rd2106, %rd2107;
	xor.b64  	%rd2109, %rd2089, %rd2039;
	xor.b64  	%rd2110, %rd2089, %rd2064;
	and.b64  	%rd2111, %rd2110, %rd2109;
	xor.b64  	%rd2112, %rd2111, %rd2089;
	add.s64 	%rd2113, %rd2102, %rd2112;
	add.s64 	%rd2114, %rd2113, %rd2108;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2350,%dummy}, %rd2103;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2351}, %rd2103;
	}
	shf.r.wrap.b32 	%r2352, %r2351, %r2350, 14;
	shf.r.wrap.b32 	%r2353, %r2350, %r2351, 14;
	mov.b64 	%rd2115, {%r2353, %r2352};
	shf.r.wrap.b32 	%r2354, %r2351, %r2350, 18;
	shf.r.wrap.b32 	%r2355, %r2350, %r2351, 18;
	mov.b64 	%rd2116, {%r2355, %r2354};
	xor.b64  	%rd2117, %rd2116, %rd2115;
	shf.l.wrap.b32 	%r2356, %r2350, %r2351, 23;
	shf.l.wrap.b32 	%r2357, %r2351, %r2350, 23;
	mov.b64 	%rd2118, {%r2357, %r2356};
	xor.b64  	%rd2119, %rd2117, %rd2118;
	xor.b64  	%rd2120, %rd2078, %rd2053;
	and.b64  	%rd2121, %rd2103, %rd2120;
	xor.b64  	%rd2122, %rd2121, %rd2053;
	add.s64 	%rd2123, %rd2028, %rd3434;
	ld.const.u64 	%rd2124, [%rd3411+176];
	add.s64 	%rd2125, %rd2123, %rd2124;
	add.s64 	%rd2126, %rd2125, %rd2122;
	add.s64 	%rd2127, %rd2126, %rd2119;
	add.s64 	%rd2128, %rd2127, %rd2039;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2358,%dummy}, %rd2114;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2359}, %rd2114;
	}
	shf.r.wrap.b32 	%r2360, %r2359, %r2358, 28;
	shf.r.wrap.b32 	%r2361, %r2358, %r2359, 28;
	mov.b64 	%rd2129, {%r2361, %r2360};
	shf.l.wrap.b32 	%r2362, %r2358, %r2359, 30;
	shf.l.wrap.b32 	%r2363, %r2359, %r2358, 30;
	mov.b64 	%rd2130, {%r2363, %r2362};
	xor.b64  	%rd2131, %rd2130, %rd2129;
	shf.l.wrap.b32 	%r2364, %r2358, %r2359, 25;
	shf.l.wrap.b32 	%r2365, %r2359, %r2358, 25;
	mov.b64 	%rd2132, {%r2365, %r2364};
	xor.b64  	%rd2133, %rd2131, %rd2132;
	xor.b64  	%rd2134, %rd2114, %rd2064;
	xor.b64  	%rd2135, %rd2114, %rd2089;
	and.b64  	%rd2136, %rd2135, %rd2134;
	xor.b64  	%rd2137, %rd2136, %rd2114;
	add.s64 	%rd2138, %rd2127, %rd2137;
	add.s64 	%rd2139, %rd2138, %rd2133;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2366,%dummy}, %rd2128;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2367}, %rd2128;
	}
	shf.r.wrap.b32 	%r2368, %r2367, %r2366, 14;
	shf.r.wrap.b32 	%r2369, %r2366, %r2367, 14;
	mov.b64 	%rd2140, {%r2369, %r2368};
	shf.r.wrap.b32 	%r2370, %r2367, %r2366, 18;
	shf.r.wrap.b32 	%r2371, %r2366, %r2367, 18;
	mov.b64 	%rd2141, {%r2371, %r2370};
	xor.b64  	%rd2142, %rd2141, %rd2140;
	shf.l.wrap.b32 	%r2372, %r2366, %r2367, 23;
	shf.l.wrap.b32 	%r2373, %r2367, %r2366, 23;
	mov.b64 	%rd2143, {%r2373, %r2372};
	xor.b64  	%rd2144, %rd2142, %rd2143;
	xor.b64  	%rd2145, %rd2103, %rd2078;
	and.b64  	%rd2146, %rd2128, %rd2145;
	xor.b64  	%rd2147, %rd2146, %rd2078;
	add.s64 	%rd2148, %rd2053, %rd3435;
	ld.const.u64 	%rd2149, [%rd3411+184];
	add.s64 	%rd2150, %rd2148, %rd2149;
	add.s64 	%rd2151, %rd2150, %rd2147;
	add.s64 	%rd2152, %rd2151, %rd2144;
	add.s64 	%rd2153, %rd2152, %rd2064;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2374,%dummy}, %rd2139;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2375}, %rd2139;
	}
	shf.r.wrap.b32 	%r2376, %r2375, %r2374, 28;
	shf.r.wrap.b32 	%r2377, %r2374, %r2375, 28;
	mov.b64 	%rd2154, {%r2377, %r2376};
	shf.l.wrap.b32 	%r2378, %r2374, %r2375, 30;
	shf.l.wrap.b32 	%r2379, %r2375, %r2374, 30;
	mov.b64 	%rd2155, {%r2379, %r2378};
	xor.b64  	%rd2156, %rd2155, %rd2154;
	shf.l.wrap.b32 	%r2380, %r2374, %r2375, 25;
	shf.l.wrap.b32 	%r2381, %r2375, %r2374, 25;
	mov.b64 	%rd2157, {%r2381, %r2380};
	xor.b64  	%rd2158, %rd2156, %rd2157;
	xor.b64  	%rd2159, %rd2139, %rd2089;
	xor.b64  	%rd2160, %rd2139, %rd2114;
	and.b64  	%rd2161, %rd2160, %rd2159;
	xor.b64  	%rd2162, %rd2161, %rd2139;
	add.s64 	%rd2163, %rd2152, %rd2162;
	add.s64 	%rd2164, %rd2163, %rd2158;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2382,%dummy}, %rd2153;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2383}, %rd2153;
	}
	shf.r.wrap.b32 	%r2384, %r2383, %r2382, 14;
	shf.r.wrap.b32 	%r2385, %r2382, %r2383, 14;
	mov.b64 	%rd2165, {%r2385, %r2384};
	shf.r.wrap.b32 	%r2386, %r2383, %r2382, 18;
	shf.r.wrap.b32 	%r2387, %r2382, %r2383, 18;
	mov.b64 	%rd2166, {%r2387, %r2386};
	xor.b64  	%rd2167, %rd2166, %rd2165;
	shf.l.wrap.b32 	%r2388, %r2382, %r2383, 23;
	shf.l.wrap.b32 	%r2389, %r2383, %r2382, 23;
	mov.b64 	%rd2168, {%r2389, %r2388};
	xor.b64  	%rd2169, %rd2167, %rd2168;
	xor.b64  	%rd2170, %rd2128, %rd2103;
	and.b64  	%rd2171, %rd2153, %rd2170;
	xor.b64  	%rd2172, %rd2171, %rd2103;
	add.s64 	%rd2173, %rd2078, %rd3419;
	ld.const.u64 	%rd2174, [%rd3411+192];
	add.s64 	%rd2175, %rd2173, %rd2174;
	add.s64 	%rd2176, %rd2175, %rd2172;
	add.s64 	%rd2177, %rd2176, %rd2169;
	add.s64 	%rd2178, %rd2177, %rd2089;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2390,%dummy}, %rd2164;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2391}, %rd2164;
	}
	shf.r.wrap.b32 	%r2392, %r2391, %r2390, 28;
	shf.r.wrap.b32 	%r2393, %r2390, %r2391, 28;
	mov.b64 	%rd2179, {%r2393, %r2392};
	shf.l.wrap.b32 	%r2394, %r2390, %r2391, 30;
	shf.l.wrap.b32 	%r2395, %r2391, %r2390, 30;
	mov.b64 	%rd2180, {%r2395, %r2394};
	xor.b64  	%rd2181, %rd2180, %rd2179;
	shf.l.wrap.b32 	%r2396, %r2390, %r2391, 25;
	shf.l.wrap.b32 	%r2397, %r2391, %r2390, 25;
	mov.b64 	%rd2182, {%r2397, %r2396};
	xor.b64  	%rd2183, %rd2181, %rd2182;
	xor.b64  	%rd2184, %rd2164, %rd2114;
	xor.b64  	%rd2185, %rd2164, %rd2139;
	and.b64  	%rd2186, %rd2185, %rd2184;
	xor.b64  	%rd2187, %rd2186, %rd2164;
	add.s64 	%rd2188, %rd2177, %rd2187;
	add.s64 	%rd2189, %rd2188, %rd2183;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2398,%dummy}, %rd2178;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2399}, %rd2178;
	}
	shf.r.wrap.b32 	%r2400, %r2399, %r2398, 14;
	shf.r.wrap.b32 	%r2401, %r2398, %r2399, 14;
	mov.b64 	%rd2190, {%r2401, %r2400};
	shf.r.wrap.b32 	%r2402, %r2399, %r2398, 18;
	shf.r.wrap.b32 	%r2403, %r2398, %r2399, 18;
	mov.b64 	%rd2191, {%r2403, %r2402};
	xor.b64  	%rd2192, %rd2191, %rd2190;
	shf.l.wrap.b32 	%r2404, %r2398, %r2399, 23;
	shf.l.wrap.b32 	%r2405, %r2399, %r2398, 23;
	mov.b64 	%rd2193, {%r2405, %r2404};
	xor.b64  	%rd2194, %rd2192, %rd2193;
	xor.b64  	%rd2195, %rd2153, %rd2128;
	and.b64  	%rd2196, %rd2178, %rd2195;
	xor.b64  	%rd2197, %rd2196, %rd2128;
	add.s64 	%rd2198, %rd2103, %rd3418;
	ld.const.u64 	%rd2199, [%rd3411+200];
	add.s64 	%rd2200, %rd2198, %rd2199;
	add.s64 	%rd2201, %rd2200, %rd2197;
	add.s64 	%rd2202, %rd2201, %rd2194;
	add.s64 	%rd2203, %rd2202, %rd2114;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2406,%dummy}, %rd2189;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2407}, %rd2189;
	}
	shf.r.wrap.b32 	%r2408, %r2407, %r2406, 28;
	shf.r.wrap.b32 	%r2409, %r2406, %r2407, 28;
	mov.b64 	%rd2204, {%r2409, %r2408};
	shf.l.wrap.b32 	%r2410, %r2406, %r2407, 30;
	shf.l.wrap.b32 	%r2411, %r2407, %r2406, 30;
	mov.b64 	%rd2205, {%r2411, %r2410};
	xor.b64  	%rd2206, %rd2205, %rd2204;
	shf.l.wrap.b32 	%r2412, %r2406, %r2407, 25;
	shf.l.wrap.b32 	%r2413, %r2407, %r2406, 25;
	mov.b64 	%rd2207, {%r2413, %r2412};
	xor.b64  	%rd2208, %rd2206, %rd2207;
	xor.b64  	%rd2209, %rd2189, %rd2139;
	xor.b64  	%rd2210, %rd2189, %rd2164;
	and.b64  	%rd2211, %rd2210, %rd2209;
	xor.b64  	%rd2212, %rd2211, %rd2189;
	add.s64 	%rd2213, %rd2202, %rd2212;
	add.s64 	%rd2214, %rd2213, %rd2208;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2414,%dummy}, %rd2203;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2415}, %rd2203;
	}
	shf.r.wrap.b32 	%r2416, %r2415, %r2414, 14;
	shf.r.wrap.b32 	%r2417, %r2414, %r2415, 14;
	mov.b64 	%rd2215, {%r2417, %r2416};
	shf.r.wrap.b32 	%r2418, %r2415, %r2414, 18;
	shf.r.wrap.b32 	%r2419, %r2414, %r2415, 18;
	mov.b64 	%rd2216, {%r2419, %r2418};
	xor.b64  	%rd2217, %rd2216, %rd2215;
	shf.l.wrap.b32 	%r2420, %r2414, %r2415, 23;
	shf.l.wrap.b32 	%r2421, %r2415, %r2414, 23;
	mov.b64 	%rd2218, {%r2421, %r2420};
	xor.b64  	%rd2219, %rd2217, %rd2218;
	xor.b64  	%rd2220, %rd2178, %rd2153;
	and.b64  	%rd2221, %rd2203, %rd2220;
	xor.b64  	%rd2222, %rd2221, %rd2153;
	add.s64 	%rd2223, %rd2128, %rd3417;
	ld.const.u64 	%rd2224, [%rd3411+208];
	add.s64 	%rd2225, %rd2223, %rd2224;
	add.s64 	%rd2226, %rd2225, %rd2222;
	add.s64 	%rd2227, %rd2226, %rd2219;
	add.s64 	%rd2228, %rd2227, %rd2139;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2422,%dummy}, %rd2214;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2423}, %rd2214;
	}
	shf.r.wrap.b32 	%r2424, %r2423, %r2422, 28;
	shf.r.wrap.b32 	%r2425, %r2422, %r2423, 28;
	mov.b64 	%rd2229, {%r2425, %r2424};
	shf.l.wrap.b32 	%r2426, %r2422, %r2423, 30;
	shf.l.wrap.b32 	%r2427, %r2423, %r2422, 30;
	mov.b64 	%rd2230, {%r2427, %r2426};
	xor.b64  	%rd2231, %rd2230, %rd2229;
	shf.l.wrap.b32 	%r2428, %r2422, %r2423, 25;
	shf.l.wrap.b32 	%r2429, %r2423, %r2422, 25;
	mov.b64 	%rd2232, {%r2429, %r2428};
	xor.b64  	%rd2233, %rd2231, %rd2232;
	xor.b64  	%rd2234, %rd2214, %rd2164;
	xor.b64  	%rd2235, %rd2214, %rd2189;
	and.b64  	%rd2236, %rd2235, %rd2234;
	xor.b64  	%rd2237, %rd2236, %rd2214;
	add.s64 	%rd2238, %rd2227, %rd2237;
	add.s64 	%rd2239, %rd2238, %rd2233;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2430,%dummy}, %rd2228;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2431}, %rd2228;
	}
	shf.r.wrap.b32 	%r2432, %r2431, %r2430, 14;
	shf.r.wrap.b32 	%r2433, %r2430, %r2431, 14;
	mov.b64 	%rd2240, {%r2433, %r2432};
	shf.r.wrap.b32 	%r2434, %r2431, %r2430, 18;
	shf.r.wrap.b32 	%r2435, %r2430, %r2431, 18;
	mov.b64 	%rd2241, {%r2435, %r2434};
	xor.b64  	%rd2242, %rd2241, %rd2240;
	shf.l.wrap.b32 	%r2436, %r2430, %r2431, 23;
	shf.l.wrap.b32 	%r2437, %r2431, %r2430, 23;
	mov.b64 	%rd2243, {%r2437, %r2436};
	xor.b64  	%rd2244, %rd2242, %rd2243;
	xor.b64  	%rd2245, %rd2203, %rd2178;
	and.b64  	%rd2246, %rd2228, %rd2245;
	xor.b64  	%rd2247, %rd2246, %rd2178;
	add.s64 	%rd2248, %rd2153, %rd3416;
	ld.const.u64 	%rd2249, [%rd3411+216];
	add.s64 	%rd2250, %rd2248, %rd2249;
	add.s64 	%rd2251, %rd2250, %rd2247;
	add.s64 	%rd2252, %rd2251, %rd2244;
	add.s64 	%rd2253, %rd2252, %rd2164;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2438,%dummy}, %rd2239;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2439}, %rd2239;
	}
	shf.r.wrap.b32 	%r2440, %r2439, %r2438, 28;
	shf.r.wrap.b32 	%r2441, %r2438, %r2439, 28;
	mov.b64 	%rd2254, {%r2441, %r2440};
	shf.l.wrap.b32 	%r2442, %r2438, %r2439, 30;
	shf.l.wrap.b32 	%r2443, %r2439, %r2438, 30;
	mov.b64 	%rd2255, {%r2443, %r2442};
	xor.b64  	%rd2256, %rd2255, %rd2254;
	shf.l.wrap.b32 	%r2444, %r2438, %r2439, 25;
	shf.l.wrap.b32 	%r2445, %r2439, %r2438, 25;
	mov.b64 	%rd2257, {%r2445, %r2444};
	xor.b64  	%rd2258, %rd2256, %rd2257;
	xor.b64  	%rd2259, %rd2239, %rd2189;
	xor.b64  	%rd2260, %rd2239, %rd2214;
	and.b64  	%rd2261, %rd2260, %rd2259;
	xor.b64  	%rd2262, %rd2261, %rd2239;
	add.s64 	%rd2263, %rd2252, %rd2262;
	add.s64 	%rd2264, %rd2263, %rd2258;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2446,%dummy}, %rd2253;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2447}, %rd2253;
	}
	shf.r.wrap.b32 	%r2448, %r2447, %r2446, 14;
	shf.r.wrap.b32 	%r2449, %r2446, %r2447, 14;
	mov.b64 	%rd2265, {%r2449, %r2448};
	shf.r.wrap.b32 	%r2450, %r2447, %r2446, 18;
	shf.r.wrap.b32 	%r2451, %r2446, %r2447, 18;
	mov.b64 	%rd2266, {%r2451, %r2450};
	xor.b64  	%rd2267, %rd2266, %rd2265;
	shf.l.wrap.b32 	%r2452, %r2446, %r2447, 23;
	shf.l.wrap.b32 	%r2453, %r2447, %r2446, 23;
	mov.b64 	%rd2268, {%r2453, %r2452};
	xor.b64  	%rd2269, %rd2267, %rd2268;
	xor.b64  	%rd2270, %rd2228, %rd2203;
	and.b64  	%rd2271, %rd2253, %rd2270;
	xor.b64  	%rd2272, %rd2271, %rd2203;
	add.s64 	%rd2273, %rd2178, %rd3415;
	ld.const.u64 	%rd2274, [%rd3411+224];
	add.s64 	%rd2275, %rd2273, %rd2274;
	add.s64 	%rd2276, %rd2275, %rd2272;
	add.s64 	%rd2277, %rd2276, %rd2269;
	add.s64 	%rd3427, %rd2277, %rd2189;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2454,%dummy}, %rd2264;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2455}, %rd2264;
	}
	shf.r.wrap.b32 	%r2456, %r2455, %r2454, 28;
	shf.r.wrap.b32 	%r2457, %r2454, %r2455, 28;
	mov.b64 	%rd2278, {%r2457, %r2456};
	shf.l.wrap.b32 	%r2458, %r2454, %r2455, 30;
	shf.l.wrap.b32 	%r2459, %r2455, %r2454, 30;
	mov.b64 	%rd2279, {%r2459, %r2458};
	xor.b64  	%rd2280, %rd2279, %rd2278;
	shf.l.wrap.b32 	%r2460, %r2454, %r2455, 25;
	shf.l.wrap.b32 	%r2461, %r2455, %r2454, 25;
	mov.b64 	%rd2281, {%r2461, %r2460};
	xor.b64  	%rd2282, %rd2280, %rd2281;
	xor.b64  	%rd2283, %rd2264, %rd2214;
	xor.b64  	%rd2284, %rd2264, %rd2239;
	and.b64  	%rd2285, %rd2284, %rd2283;
	xor.b64  	%rd2286, %rd2285, %rd2264;
	add.s64 	%rd2287, %rd2277, %rd2286;
	add.s64 	%rd3423, %rd2287, %rd2282;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2462,%dummy}, %rd3427;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2463}, %rd3427;
	}
	shf.r.wrap.b32 	%r2464, %r2463, %r2462, 14;
	shf.r.wrap.b32 	%r2465, %r2462, %r2463, 14;
	mov.b64 	%rd2288, {%r2465, %r2464};
	shf.r.wrap.b32 	%r2466, %r2463, %r2462, 18;
	shf.r.wrap.b32 	%r2467, %r2462, %r2463, 18;
	mov.b64 	%rd2289, {%r2467, %r2466};
	xor.b64  	%rd2290, %rd2289, %rd2288;
	shf.l.wrap.b32 	%r2468, %r2462, %r2463, 23;
	shf.l.wrap.b32 	%r2469, %r2463, %r2462, 23;
	mov.b64 	%rd2291, {%r2469, %r2468};
	xor.b64  	%rd2292, %rd2290, %rd2291;
	xor.b64  	%rd2293, %rd2253, %rd2228;
	and.b64  	%rd2294, %rd3427, %rd2293;
	xor.b64  	%rd2295, %rd2294, %rd2228;
	add.s64 	%rd2296, %rd2203, %rd3414;
	ld.const.u64 	%rd2297, [%rd3411+232];
	add.s64 	%rd2298, %rd2296, %rd2297;
	add.s64 	%rd2299, %rd2298, %rd2295;
	add.s64 	%rd2300, %rd2299, %rd2292;
	add.s64 	%rd3426, %rd2300, %rd2214;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2470,%dummy}, %rd3423;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2471}, %rd3423;
	}
	shf.r.wrap.b32 	%r2472, %r2471, %r2470, 28;
	shf.r.wrap.b32 	%r2473, %r2470, %r2471, 28;
	mov.b64 	%rd2301, {%r2473, %r2472};
	shf.l.wrap.b32 	%r2474, %r2470, %r2471, 30;
	shf.l.wrap.b32 	%r2475, %r2471, %r2470, 30;
	mov.b64 	%rd2302, {%r2475, %r2474};
	xor.b64  	%rd2303, %rd2302, %rd2301;
	shf.l.wrap.b32 	%r2476, %r2470, %r2471, 25;
	shf.l.wrap.b32 	%r2477, %r2471, %r2470, 25;
	mov.b64 	%rd2304, {%r2477, %r2476};
	xor.b64  	%rd2305, %rd2303, %rd2304;
	xor.b64  	%rd2306, %rd3423, %rd2239;
	xor.b64  	%rd2307, %rd3423, %rd2264;
	and.b64  	%rd2308, %rd2307, %rd2306;
	xor.b64  	%rd2309, %rd2308, %rd3423;
	add.s64 	%rd2310, %rd2300, %rd2309;
	add.s64 	%rd3422, %rd2310, %rd2305;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2478,%dummy}, %rd3426;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2479}, %rd3426;
	}
	shf.r.wrap.b32 	%r2480, %r2479, %r2478, 14;
	shf.r.wrap.b32 	%r2481, %r2478, %r2479, 14;
	mov.b64 	%rd2311, {%r2481, %r2480};
	shf.r.wrap.b32 	%r2482, %r2479, %r2478, 18;
	shf.r.wrap.b32 	%r2483, %r2478, %r2479, 18;
	mov.b64 	%rd2312, {%r2483, %r2482};
	xor.b64  	%rd2313, %rd2312, %rd2311;
	shf.l.wrap.b32 	%r2484, %r2478, %r2479, 23;
	shf.l.wrap.b32 	%r2485, %r2479, %r2478, 23;
	mov.b64 	%rd2314, {%r2485, %r2484};
	xor.b64  	%rd2315, %rd2313, %rd2314;
	xor.b64  	%rd2316, %rd3427, %rd2253;
	and.b64  	%rd2317, %rd3426, %rd2316;
	xor.b64  	%rd2318, %rd2317, %rd2253;
	add.s64 	%rd2319, %rd2228, %rd3413;
	ld.const.u64 	%rd2320, [%rd3411+240];
	add.s64 	%rd2321, %rd2319, %rd2320;
	add.s64 	%rd2322, %rd2321, %rd2318;
	add.s64 	%rd2323, %rd2322, %rd2315;
	add.s64 	%rd3425, %rd2323, %rd2239;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2486,%dummy}, %rd3422;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2487}, %rd3422;
	}
	shf.r.wrap.b32 	%r2488, %r2487, %r2486, 28;
	shf.r.wrap.b32 	%r2489, %r2486, %r2487, 28;
	mov.b64 	%rd2324, {%r2489, %r2488};
	shf.l.wrap.b32 	%r2490, %r2486, %r2487, 30;
	shf.l.wrap.b32 	%r2491, %r2487, %r2486, 30;
	mov.b64 	%rd2325, {%r2491, %r2490};
	xor.b64  	%rd2326, %rd2325, %rd2324;
	shf.l.wrap.b32 	%r2492, %r2486, %r2487, 25;
	shf.l.wrap.b32 	%r2493, %r2487, %r2486, 25;
	mov.b64 	%rd2327, {%r2493, %r2492};
	xor.b64  	%rd2328, %rd2326, %rd2327;
	xor.b64  	%rd2329, %rd3422, %rd2264;
	xor.b64  	%rd2330, %rd3422, %rd3423;
	and.b64  	%rd2331, %rd2330, %rd2329;
	xor.b64  	%rd2332, %rd2331, %rd3422;
	add.s64 	%rd2333, %rd2323, %rd2332;
	add.s64 	%rd3421, %rd2333, %rd2328;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2494,%dummy}, %rd3425;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2495}, %rd3425;
	}
	shf.r.wrap.b32 	%r2496, %r2495, %r2494, 14;
	shf.r.wrap.b32 	%r2497, %r2494, %r2495, 14;
	mov.b64 	%rd2334, {%r2497, %r2496};
	shf.r.wrap.b32 	%r2498, %r2495, %r2494, 18;
	shf.r.wrap.b32 	%r2499, %r2494, %r2495, 18;
	mov.b64 	%rd2335, {%r2499, %r2498};
	xor.b64  	%rd2336, %rd2335, %rd2334;
	shf.l.wrap.b32 	%r2500, %r2494, %r2495, 23;
	shf.l.wrap.b32 	%r2501, %r2495, %r2494, 23;
	mov.b64 	%rd2337, {%r2501, %r2500};
	xor.b64  	%rd2338, %rd2336, %rd2337;
	xor.b64  	%rd2339, %rd3426, %rd3427;
	and.b64  	%rd2340, %rd3425, %rd2339;
	xor.b64  	%rd2341, %rd2340, %rd3427;
	add.s64 	%rd2342, %rd2253, %rd3412;
	ld.const.u64 	%rd2343, [%rd3411+248];
	add.s64 	%rd2344, %rd2342, %rd2343;
	add.s64 	%rd2345, %rd2344, %rd2341;
	add.s64 	%rd2346, %rd2345, %rd2338;
	add.s64 	%rd3424, %rd2346, %rd2264;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2502,%dummy}, %rd3421;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2503}, %rd3421;
	}
	shf.r.wrap.b32 	%r2504, %r2503, %r2502, 28;
	shf.r.wrap.b32 	%r2505, %r2502, %r2503, 28;
	mov.b64 	%rd2347, {%r2505, %r2504};
	shf.l.wrap.b32 	%r2506, %r2502, %r2503, 30;
	shf.l.wrap.b32 	%r2507, %r2503, %r2502, 30;
	mov.b64 	%rd2348, {%r2507, %r2506};
	xor.b64  	%rd2349, %rd2348, %rd2347;
	shf.l.wrap.b32 	%r2508, %r2502, %r2503, 25;
	shf.l.wrap.b32 	%r2509, %r2503, %r2502, 25;
	mov.b64 	%rd2350, {%r2509, %r2508};
	xor.b64  	%rd2351, %rd2349, %rd2350;
	xor.b64  	%rd2352, %rd3421, %rd3423;
	xor.b64  	%rd2353, %rd3421, %rd3422;
	and.b64  	%rd2354, %rd2353, %rd2352;
	xor.b64  	%rd2355, %rd2354, %rd3421;
	add.s64 	%rd2356, %rd2346, %rd2355;
	add.s64 	%rd3420, %rd2356, %rd2351;
	add.s32 	%r8734, %r8734, 16;
	setp.lt.s32	%p196, %r8734, 80;
	mov.u64 	%rd3411, %rd221;
	@%p196 bra 	BB4_328;

	ld.param.u64 	%rd3378, [m07900_init_param_4];
	add.s64 	%rd2357, %rd3410, %rd3420;
	st.local.u64 	[%rd9], %rd2357;
	add.s64 	%rd2358, %rd3409, %rd3421;
	st.local.u64 	[%rd10], %rd2358;
	add.s64 	%rd2359, %rd3408, %rd3422;
	st.local.u64 	[%rd10+8], %rd2359;
	add.s64 	%rd2360, %rd3407, %rd3423;
	st.local.u64 	[%rd10+16], %rd2360;
	add.s64 	%rd2361, %rd3406, %rd3424;
	st.local.u64 	[%rd10+24], %rd2361;
	add.s64 	%rd2362, %rd3405, %rd3425;
	st.local.u64 	[%rd10+32], %rd2362;
	add.s64 	%rd2363, %rd3404, %rd3426;
	st.local.u64 	[%rd10+40], %rd2363;
	add.s64 	%rd2364, %rd3403, %rd3427;
	st.local.u64 	[%rd10+48], %rd2364;
	mul.wide.s32 	%rd2365, %r1, 64;
	add.s64 	%rd2366, %rd3378, %rd2365;
	st.global.u64 	[%rd2366], %rd2357;
	st.global.u64 	[%rd2366+8], %rd2358;
	st.global.u64 	[%rd2366+16], %rd2359;
	st.global.u64 	[%rd2366+24], %rd2360;
	st.global.u64 	[%rd2366+32], %rd2361;
	st.global.u64 	[%rd2366+40], %rd2362;
	st.global.u64 	[%rd2366+48], %rd2363;
	st.global.u64 	[%rd2366+56], %rd2364;

BB4_330:
	ret;
}

	// .globl	m07900_loop
.entry m07900_loop(
	.param .u64 .ptr .global .align 4 m07900_loop_param_0,
	.param .u64 .ptr .global .align 4 m07900_loop_param_1,
	.param .u64 .ptr .global .align 4 m07900_loop_param_2,
	.param .u64 .ptr .global .align 4 m07900_loop_param_3,
	.param .u64 .ptr .global .align 8 m07900_loop_param_4,
	.param .u64 .ptr .global .align 1 m07900_loop_param_5,
	.param .u64 .ptr .global .align 4 m07900_loop_param_6,
	.param .u64 .ptr .global .align 4 m07900_loop_param_7,
	.param .u64 .ptr .global .align 4 m07900_loop_param_8,
	.param .u64 .ptr .global .align 4 m07900_loop_param_9,
	.param .u64 .ptr .global .align 4 m07900_loop_param_10,
	.param .u64 .ptr .global .align 4 m07900_loop_param_11,
	.param .u64 .ptr .global .align 4 m07900_loop_param_12,
	.param .u64 .ptr .global .align 4 m07900_loop_param_13,
	.param .u64 .ptr .global .align 4 m07900_loop_param_14,
	.param .u64 .ptr .global .align 4 m07900_loop_param_15,
	.param .u64 .ptr .global .align 4 m07900_loop_param_16,
	.param .u64 .ptr .global .align 4 m07900_loop_param_17,
	.param .u64 .ptr .global .align 1 m07900_loop_param_18,
	.param .u64 .ptr .global .align 4 m07900_loop_param_19,
	.param .u64 .ptr .global .align 4 m07900_loop_param_20,
	.param .u64 .ptr .global .align 4 m07900_loop_param_21,
	.param .u64 .ptr .global .align 4 m07900_loop_param_22,
	.param .u64 .ptr .global .align 4 m07900_loop_param_23,
	.param .u32 m07900_loop_param_24,
	.param .u32 m07900_loop_param_25,
	.param .u32 m07900_loop_param_26,
	.param .u32 m07900_loop_param_27,
	.param .u32 m07900_loop_param_28,
	.param .u32 m07900_loop_param_29,
	.param .u32 m07900_loop_param_30,
	.param .u32 m07900_loop_param_31,
	.param .u32 m07900_loop_param_32,
	.param .u32 m07900_loop_param_33,
	.param .u64 m07900_loop_param_34
)
{
	.local .align 16 .b8 	__local_depot5[592];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<459>;
	.reg .b32 	%r<11873>;
	.reg .b64 	%rd<6998>;


	mov.u64 	%SPL, __local_depot5;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd609, [m07900_loop_param_0];
	ld.param.u64 	%rd610, [m07900_loop_param_4];
	ld.param.u32 	%r763, [m07900_loop_param_29];
	ld.param.u64 	%rd611, [m07900_loop_param_34];
	add.u64 	%rd612, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd612;
	add.u64 	%rd613, %SP, 16;
	cvta.to.local.u64 	%rd2, %rd613;
	add.u64 	%rd614, %SP, 32;
	cvta.to.local.u64 	%rd3, %rd614;
	add.u64 	%rd615, %SP, 48;
	cvta.to.local.u64 	%rd4, %rd615;
	add.u64 	%rd616, %SP, 64;
	cvta.to.local.u64 	%rd5, %rd616;
	add.u64 	%rd617, %SP, 80;
	cvta.to.local.u64 	%rd6, %rd617;
	add.u64 	%rd618, %SP, 96;
	cvta.to.local.u64 	%rd7, %rd618;
	add.u64 	%rd619, %SP, 112;
	cvta.to.local.u64 	%rd8, %rd619;
	add.u64 	%rd620, %SP, 128;
	cvta.to.local.u64 	%rd9, %rd620;
	add.u64 	%rd621, %SP, 384;
	cvta.to.local.u64 	%rd10, %rd621;
	mov.u32 	%r764, %ctaid.x;
	mov.u32 	%r765, %ntid.x;
	mov.b32	%r766, %envreg3;
	mad.lo.s32 	%r767, %r764, %r765, %r766;
	mov.u32 	%r768, %tid.x;
	add.s32 	%r1, %r767, %r768;
	cvt.s64.s32	%rd622, %r1;
	setp.ge.u64	%p1, %rd622, %rd611;
	@%p1 bra 	BB5_686;

	mul.wide.s32 	%rd624, %r1, 260;
	add.s64 	%rd625, %rd609, %rd624;
	ld.global.u32 	%r2, [%rd625+256];
	mov.u64 	%rd6813, 0;
	mov.pred 	%p2, 0;
	@%p2 bra 	BB5_3;

BB5_2:
	shl.b64 	%rd627, %rd6813, 2;
	add.s64 	%rd628, %rd9, %rd627;
	mov.u32 	%r769, 0;
	st.local.u32 	[%rd628], %r769;
	add.s64 	%rd6813, %rd6813, 1;
	setp.lt.u64	%p3, %rd6813, 64;
	@%p3 bra 	BB5_2;

BB5_3:
	setp.eq.s32	%p4, %r2, 0;
	@%p4 bra 	BB5_12;

	add.s32 	%r772, %r2, -1;
	shr.u32 	%r773, %r772, 2;
	add.s32 	%r3, %r773, 1;
	and.b32  	%r4, %r3, 3;
	setp.eq.s32	%p5, %r4, 0;
	mov.u32 	%r11759, 0;
	mov.u32 	%r11760, %r11759;
	@%p5 bra 	BB5_10;

	setp.eq.s32	%p6, %r4, 1;
	mov.u32 	%r11755, 0;
	mov.u32 	%r11756, %r11755;
	@%p6 bra 	BB5_9;

	setp.eq.s32	%p7, %r4, 2;
	mov.u32 	%r11756, 4;
	mov.u32 	%r11753, 0;
	@%p7 bra 	BB5_8;

	ld.global.u32 	%r780, [%rd625];
	st.local.u32 	[%rd9], %r780;
	mov.u32 	%r11756, 8;
	mov.u32 	%r11753, 1;

BB5_8:
	mul.wide.u32 	%rd633, %r11753, 4;
	add.s64 	%rd634, %rd625, %rd633;
	ld.global.u32 	%r781, [%rd634];
	add.s64 	%rd635, %rd9, %rd633;
	st.local.u32 	[%rd635], %r781;
	add.s32 	%r11755, %r11753, 1;

BB5_9:
	mul.wide.s32 	%rd638, %r11755, 4;
	add.s64 	%rd639, %rd625, %rd638;
	ld.global.u32 	%r782, [%rd639];
	add.s64 	%rd640, %rd9, %rd638;
	st.local.u32 	[%rd640], %r782;
	add.s32 	%r11760, %r11756, 4;
	add.s32 	%r11759, %r11755, 1;

BB5_10:
	setp.lt.u32	%p8, %r3, 4;
	@%p8 bra 	BB5_12;

BB5_11:
	mul.wide.s32 	%rd643, %r11759, 4;
	add.s64 	%rd644, %rd625, %rd643;
	ld.global.u32 	%r783, [%rd644];
	add.s64 	%rd645, %rd9, %rd643;
	st.local.u32 	[%rd645], %r783;
	add.s32 	%r784, %r11759, 1;
	mul.wide.s32 	%rd646, %r784, 4;
	add.s64 	%rd647, %rd625, %rd646;
	ld.global.u32 	%r785, [%rd647];
	add.s64 	%rd648, %rd9, %rd646;
	st.local.u32 	[%rd648], %r785;
	add.s32 	%r786, %r11759, 2;
	mul.wide.s32 	%rd649, %r786, 4;
	add.s64 	%rd650, %rd625, %rd649;
	ld.global.u32 	%r787, [%rd650];
	add.s64 	%rd651, %rd9, %rd649;
	st.local.u32 	[%rd651], %r787;
	add.s32 	%r788, %r11759, 3;
	mul.wide.s32 	%rd652, %r788, 4;
	add.s64 	%rd653, %rd625, %rd652;
	ld.global.u32 	%r789, [%rd653];
	add.s64 	%rd654, %rd9, %rd652;
	st.local.u32 	[%rd654], %r789;
	add.s32 	%r11759, %r11759, 4;
	add.s32 	%r11760, %r11760, 16;
	setp.lt.u32	%p9, %r11760, %r2;
	@%p9 bra 	BB5_11;

BB5_12:
	@%p4 bra 	BB5_21;

	add.s32 	%r792, %r2, -1;
	shr.u32 	%r793, %r792, 2;
	add.s32 	%r18, %r793, 1;
	and.b32  	%r19, %r18, 3;
	setp.eq.s32	%p11, %r19, 0;
	mov.u32 	%r11767, 0;
	mov.u32 	%r11768, %r11767;
	@%p11 bra 	BB5_19;

	setp.eq.s32	%p12, %r19, 1;
	mov.u32 	%r11763, 0;
	mov.u32 	%r11764, %r11763;
	@%p12 bra 	BB5_18;

	setp.eq.s32	%p13, %r19, 2;
	mov.u32 	%r11764, 4;
	mov.u32 	%r11761, 0;
	@%p13 bra 	BB5_17;

	ld.local.u32 	%r799, [%rd9];
	// inline asm
	prmt.b32 %r798, %r799, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd9], %r798;
	mov.u32 	%r11764, 8;
	mov.u32 	%r11761, 1;

BB5_17:
	mul.wide.u32 	%rd655, %r11761, 4;
	add.s64 	%rd656, %rd9, %rd655;
	ld.local.u32 	%r803, [%rd656];
	// inline asm
	prmt.b32 %r802, %r803, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd656], %r802;
	add.s32 	%r11763, %r11761, 1;

BB5_18:
	mul.wide.s32 	%rd657, %r11763, 4;
	add.s64 	%rd658, %rd9, %rd657;
	ld.local.u32 	%r805, [%rd658];
	// inline asm
	prmt.b32 %r804, %r805, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd658], %r804;
	add.s32 	%r11768, %r11764, 4;
	add.s32 	%r11767, %r11763, 1;

BB5_19:
	setp.lt.u32	%p14, %r18, 4;
	@%p14 bra 	BB5_21;

BB5_20:
	mul.wide.s32 	%rd659, %r11767, 4;
	add.s64 	%rd660, %rd9, %rd659;
	ld.local.u32 	%r807, [%rd660];
	// inline asm
	prmt.b32 %r806, %r807, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd660], %r806;
	add.s32 	%r814, %r11767, 1;
	mul.wide.s32 	%rd661, %r814, 4;
	add.s64 	%rd662, %rd9, %rd661;
	ld.local.u32 	%r809, [%rd662];
	// inline asm
	prmt.b32 %r808, %r809, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd662], %r808;
	add.s32 	%r815, %r11767, 2;
	mul.wide.s32 	%rd663, %r815, 4;
	add.s64 	%rd664, %rd9, %rd663;
	ld.local.u32 	%r811, [%rd664];
	// inline asm
	prmt.b32 %r810, %r811, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd664], %r810;
	add.s32 	%r816, %r11767, 3;
	mul.wide.s32 	%rd665, %r816, 4;
	add.s64 	%rd666, %rd9, %rd665;
	ld.local.u32 	%r813, [%rd666];
	// inline asm
	prmt.b32 %r812, %r813, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd666], %r812;
	add.s32 	%r11767, %r11767, 4;
	add.s32 	%r11768, %r11768, 16;
	setp.lt.u32	%p15, %r11768, %r2;
	@%p15 bra 	BB5_20;

BB5_21:
	mul.wide.s32 	%rd667, %r1, 64;
	add.s64 	%rd14, %rd610, %rd667;
	ld.global.u64 	%rd668, [%rd14];
	ld.global.u64 	%rd669, [%rd14+8];
	ld.global.u64 	%rd670, [%rd14+16];
	ld.global.u64 	%rd671, [%rd14+24];
	ld.global.u64 	%rd672, [%rd14+32];
	ld.global.u64 	%rd673, [%rd14+40];
	ld.global.u64 	%rd674, [%rd14+48];
	ld.global.u64 	%rd675, [%rd14+56];
	mov.u64 	%rd676, 7640891576956012808;
	st.local.u64 	[%rd10], %rd676;
	add.s64 	%rd22, %rd10, 8;
	mov.u64 	%rd677, -4942790177534073029;
	st.local.u64 	[%rd10+8], %rd677;
	add.s64 	%rd23, %rd10, 16;
	mov.u64 	%rd678, 4354685564936845355;
	st.local.u64 	[%rd10+16], %rd678;
	add.s64 	%rd24, %rd10, 24;
	mov.u64 	%rd679, -6534734903238641935;
	st.local.u64 	[%rd10+24], %rd679;
	add.s64 	%rd25, %rd10, 32;
	mov.u64 	%rd680, 5840696475078001361;
	st.local.u64 	[%rd10+32], %rd680;
	add.s64 	%rd26, %rd10, 40;
	mov.u64 	%rd681, -7276294671716946913;
	st.local.u64 	[%rd10+40], %rd681;
	add.s64 	%rd27, %rd10, 48;
	mov.u64 	%rd682, 2270897969802886507;
	st.local.u64 	[%rd10+48], %rd682;
	add.s64 	%rd28, %rd10, 56;
	mov.u64 	%rd683, 6620516959819538809;
	st.local.u64 	[%rd10+56], %rd683;
	add.s64 	%rd29, %rd10, 128;
	mov.u32 	%r11769, 0;
	add.s64 	%rd30, %rd10, 132;
	st.local.v2.u32 	[%rd10+128], {%r11769, %r11769};
	add.s64 	%rd31, %rd10, 136;
	add.s64 	%rd32, %rd10, 140;
	st.local.v2.u32 	[%rd10+136], {%r11769, %r11769};
	add.s64 	%rd33, %rd10, 144;
	add.s64 	%rd34, %rd10, 148;
	st.local.v2.u32 	[%rd10+144], {%r11769, %r11769};
	add.s64 	%rd35, %rd10, 152;
	add.s64 	%rd36, %rd10, 156;
	st.local.v2.u32 	[%rd10+152], {%r11769, %r11769};
	add.s64 	%rd37, %rd10, 160;
	add.s64 	%rd38, %rd10, 164;
	st.local.v2.u32 	[%rd10+160], {%r11769, %r11769};
	add.s64 	%rd39, %rd10, 168;
	add.s64 	%rd40, %rd10, 172;
	st.local.v2.u32 	[%rd10+168], {%r11769, %r11769};
	add.s64 	%rd41, %rd10, 176;
	add.s64 	%rd42, %rd10, 180;
	st.local.v2.u32 	[%rd10+176], {%r11769, %r11769};
	add.s64 	%rd43, %rd10, 184;
	add.s64 	%rd44, %rd10, 188;
	st.local.v2.u32 	[%rd10+184], {%r11769, %r11769};
	shr.u64 	%rd684, %rd668, 32;
	add.s64 	%rd45, %rd10, 64;
	cvt.u32.u64	%r819, %rd668;
	cvt.u32.u64	%r820, %rd684;
	add.s64 	%rd46, %rd10, 68;
	st.local.v2.u32 	[%rd10+64], {%r820, %r819};
	shr.u64 	%rd685, %rd669, 32;
	add.s64 	%rd47, %rd10, 72;
	cvt.u32.u64	%r821, %rd669;
	cvt.u32.u64	%r822, %rd685;
	add.s64 	%rd48, %rd10, 76;
	st.local.v2.u32 	[%rd10+72], {%r822, %r821};
	shr.u64 	%rd686, %rd670, 32;
	add.s64 	%rd49, %rd10, 80;
	cvt.u32.u64	%r823, %rd670;
	cvt.u32.u64	%r824, %rd686;
	add.s64 	%rd50, %rd10, 84;
	st.local.v2.u32 	[%rd10+80], {%r824, %r823};
	shr.u64 	%rd687, %rd671, 32;
	add.s64 	%rd51, %rd10, 88;
	cvt.u32.u64	%r825, %rd671;
	cvt.u32.u64	%r826, %rd687;
	add.s64 	%rd52, %rd10, 92;
	st.local.v2.u32 	[%rd10+88], {%r826, %r825};
	shr.u64 	%rd688, %rd672, 32;
	add.s64 	%rd53, %rd10, 96;
	cvt.u32.u64	%r827, %rd672;
	cvt.u32.u64	%r828, %rd688;
	add.s64 	%rd54, %rd10, 100;
	st.local.v2.u32 	[%rd10+96], {%r828, %r827};
	shr.u64 	%rd689, %rd673, 32;
	add.s64 	%rd55, %rd10, 104;
	cvt.u32.u64	%r829, %rd673;
	cvt.u32.u64	%r830, %rd689;
	add.s64 	%rd56, %rd10, 108;
	st.local.v2.u32 	[%rd10+104], {%r830, %r829};
	shr.u64 	%rd690, %rd674, 32;
	add.s64 	%rd57, %rd10, 112;
	cvt.u32.u64	%r831, %rd674;
	cvt.u32.u64	%r832, %rd690;
	add.s64 	%rd58, %rd10, 116;
	st.local.v2.u32 	[%rd10+112], {%r832, %r831};
	shr.u64 	%rd691, %rd675, 32;
	add.s64 	%rd59, %rd10, 120;
	cvt.u32.u64	%r833, %rd675;
	cvt.u32.u64	%r834, %rd691;
	add.s64 	%rd60, %rd10, 124;
	st.local.v2.u32 	[%rd10+120], {%r834, %r833};
	add.s64 	%rd61, %rd10, 192;
	mov.u32 	%r835, 64;
	st.local.u32 	[%rd10+192], %r835;
	add.s32 	%r33, %r2, -128;
	add.s64 	%rd62, %rd8, 12;
	ld.const.u64 	%rd63, [k_sha512];
	ld.const.u64 	%rd64, [k_sha512+8];
	ld.const.u64 	%rd65, [k_sha512+16];
	ld.const.u64 	%rd66, [k_sha512+24];
	ld.const.u64 	%rd67, [k_sha512+32];
	ld.const.u64 	%rd68, [k_sha512+40];
	ld.const.u64 	%rd69, [k_sha512+48];
	ld.const.u64 	%rd70, [k_sha512+56];
	ld.const.u64 	%rd71, [k_sha512+64];
	ld.const.u64 	%rd72, [k_sha512+72];
	ld.const.u64 	%rd73, [k_sha512+80];
	ld.const.u64 	%rd74, [k_sha512+88];
	ld.const.u64 	%rd75, [k_sha512+96];
	ld.const.u64 	%rd76, [k_sha512+104];
	ld.const.u64 	%rd77, [k_sha512+112];
	ld.const.u64 	%rd78, [k_sha512+120];
	mov.u32 	%r11770, %r11769;
	bra.uni 	BB5_22;

BB5_775:
	add.s64 	%rd6771, %rd550, %rd6982;
	st.local.u64 	[%rd10], %rd6771;
	add.s64 	%rd6772, %rd552, %rd6983;
	st.local.u64 	[%rd22], %rd6772;
	add.s64 	%rd6773, %rd551, %rd6984;
	st.local.u64 	[%rd23], %rd6773;
	add.s64 	%rd6774, %rd549, %rd6985;
	st.local.u64 	[%rd24], %rd6774;
	add.s64 	%rd6775, %rd545, %rd6986;
	st.local.u64 	[%rd25], %rd6775;
	add.s64 	%rd6776, %rd547, %rd6987;
	st.local.u64 	[%rd26], %rd6776;
	add.s64 	%rd6777, %rd546, %rd6988;
	st.local.u64 	[%rd27], %rd6777;
	add.s64 	%rd6778, %rd548, %rd6989;
	st.local.u64 	[%rd28], %rd6778;
	st.local.u32 	[%rd45], %r11843;
	st.local.u32 	[%rd46], %r11842;
	st.local.u32 	[%rd47], %r11841;
	st.local.u32 	[%rd48], %r11840;
	st.local.u32 	[%rd49], %r11847;
	st.local.u32 	[%rd50], %r11846;
	st.local.u32 	[%rd51], %r11845;
	st.local.u32 	[%rd52], %r11844;
	st.local.u32 	[%rd53], %r11851;
	st.local.u32 	[%rd54], %r11850;
	st.local.u32 	[%rd55], %r11849;
	st.local.u32 	[%rd56], %r11848;
	st.local.u32 	[%rd57], %r11855;
	st.local.u32 	[%rd58], %r11854;
	st.local.u32 	[%rd59], %r11853;
	st.local.u32 	[%rd60], %r11852;
	st.local.u32 	[%rd29], %r11859;
	st.local.u32 	[%rd30], %r11858;
	st.local.u32 	[%rd31], %r11857;
	st.local.u32 	[%rd32], %r11856;
	st.local.u32 	[%rd33], %r11863;
	st.local.u32 	[%rd34], %r11862;
	st.local.u32 	[%rd35], %r11861;
	st.local.u32 	[%rd36], %r11860;
	st.local.u32 	[%rd37], %r11867;
	st.local.u32 	[%rd38], %r11866;
	st.local.u32 	[%rd39], %r11865;
	st.local.u32 	[%rd40], %r11864;
	st.local.u32 	[%rd41], %r11871;
	st.local.u32 	[%rd42], %r11870;
	st.local.u32 	[%rd43], %r11869;
	st.local.u32 	[%rd44], %r11868;
	add.s32 	%r11769, %r11769, 128;
	add.s32 	%r11770, %r11770, 32;

BB5_22:
	mul.wide.s32 	%rd694, %r11770, 4;
	add.s64 	%rd695, %rd9, %rd694;
	ld.local.u32 	%r11839, [%rd695];
	st.local.u32 	[%rd1], %r11839;
	add.s32 	%r836, %r11770, 1;
	mul.wide.s32 	%rd696, %r836, 4;
	add.s64 	%rd697, %rd9, %rd696;
	ld.local.u32 	%r11838, [%rd697];
	st.local.u32 	[%rd1+4], %r11838;
	add.s32 	%r837, %r11770, 2;
	mul.wide.s32 	%rd698, %r837, 4;
	add.s64 	%rd699, %rd9, %rd698;
	ld.local.u32 	%r838, [%rd699];
	st.local.u32 	[%rd1+8], %r838;
	add.s32 	%r839, %r11770, 3;
	mul.wide.s32 	%rd700, %r839, 4;
	add.s64 	%rd701, %rd9, %rd700;
	ld.local.u32 	%r840, [%rd701];
	st.local.u32 	[%rd1+12], %r840;
	add.s32 	%r841, %r11770, 4;
	mul.wide.s32 	%rd702, %r841, 4;
	add.s64 	%rd703, %rd9, %rd702;
	ld.local.u32 	%r842, [%rd703];
	st.local.u32 	[%rd2], %r842;
	add.s32 	%r843, %r11770, 5;
	mul.wide.s32 	%rd704, %r843, 4;
	add.s64 	%rd705, %rd9, %rd704;
	ld.local.u32 	%r844, [%rd705];
	st.local.u32 	[%rd2+4], %r844;
	add.s32 	%r845, %r11770, 6;
	mul.wide.s32 	%rd706, %r845, 4;
	add.s64 	%rd707, %rd9, %rd706;
	ld.local.u32 	%r846, [%rd707];
	st.local.u32 	[%rd2+8], %r846;
	add.s32 	%r847, %r11770, 7;
	mul.wide.s32 	%rd708, %r847, 4;
	add.s64 	%rd709, %rd9, %rd708;
	ld.local.u32 	%r848, [%rd709];
	st.local.u32 	[%rd2+12], %r848;
	add.s32 	%r849, %r11770, 8;
	mul.wide.s32 	%rd710, %r849, 4;
	add.s64 	%rd711, %rd9, %rd710;
	ld.local.u32 	%r850, [%rd711];
	st.local.u32 	[%rd3], %r850;
	add.s32 	%r851, %r11770, 9;
	mul.wide.s32 	%rd712, %r851, 4;
	add.s64 	%rd713, %rd9, %rd712;
	ld.local.u32 	%r852, [%rd713];
	st.local.u32 	[%rd3+4], %r852;
	add.s32 	%r853, %r11770, 10;
	mul.wide.s32 	%rd714, %r853, 4;
	add.s64 	%rd715, %rd9, %rd714;
	ld.local.u32 	%r854, [%rd715];
	st.local.u32 	[%rd3+8], %r854;
	add.s32 	%r855, %r11770, 11;
	mul.wide.s32 	%rd716, %r855, 4;
	add.s64 	%rd717, %rd9, %rd716;
	ld.local.u32 	%r856, [%rd717];
	st.local.u32 	[%rd3+12], %r856;
	add.s32 	%r857, %r11770, 12;
	mul.wide.s32 	%rd718, %r857, 4;
	add.s64 	%rd719, %rd9, %rd718;
	ld.local.u32 	%r858, [%rd719];
	st.local.u32 	[%rd4], %r858;
	add.s32 	%r859, %r11770, 13;
	mul.wide.s32 	%rd720, %r859, 4;
	add.s64 	%rd721, %rd9, %rd720;
	ld.local.u32 	%r860, [%rd721];
	st.local.u32 	[%rd4+4], %r860;
	add.s32 	%r861, %r11770, 14;
	mul.wide.s32 	%rd722, %r861, 4;
	add.s64 	%rd723, %rd9, %rd722;
	ld.local.u32 	%r862, [%rd723];
	st.local.u32 	[%rd4+8], %r862;
	add.s32 	%r863, %r11770, 15;
	mul.wide.s32 	%rd724, %r863, 4;
	add.s64 	%rd725, %rd9, %rd724;
	ld.local.u32 	%r864, [%rd725];
	st.local.u32 	[%rd4+12], %r864;
	add.s32 	%r865, %r11770, 16;
	mul.wide.s32 	%rd726, %r865, 4;
	add.s64 	%rd727, %rd9, %rd726;
	ld.local.u32 	%r866, [%rd727];
	st.local.u32 	[%rd5], %r866;
	add.s32 	%r867, %r11770, 17;
	mul.wide.s32 	%rd728, %r867, 4;
	add.s64 	%rd729, %rd9, %rd728;
	ld.local.u32 	%r868, [%rd729];
	st.local.u32 	[%rd5+4], %r868;
	add.s32 	%r869, %r11770, 18;
	mul.wide.s32 	%rd730, %r869, 4;
	add.s64 	%rd731, %rd9, %rd730;
	ld.local.u32 	%r870, [%rd731];
	st.local.u32 	[%rd5+8], %r870;
	add.s32 	%r871, %r11770, 19;
	mul.wide.s32 	%rd732, %r871, 4;
	add.s64 	%rd733, %rd9, %rd732;
	ld.local.u32 	%r872, [%rd733];
	st.local.u32 	[%rd5+12], %r872;
	add.s32 	%r873, %r11770, 20;
	mul.wide.s32 	%rd734, %r873, 4;
	add.s64 	%rd735, %rd9, %rd734;
	ld.local.u32 	%r874, [%rd735];
	st.local.u32 	[%rd6], %r874;
	add.s32 	%r875, %r11770, 21;
	mul.wide.s32 	%rd736, %r875, 4;
	add.s64 	%rd737, %rd9, %rd736;
	ld.local.u32 	%r876, [%rd737];
	st.local.u32 	[%rd6+4], %r876;
	add.s32 	%r877, %r11770, 22;
	mul.wide.s32 	%rd738, %r877, 4;
	add.s64 	%rd739, %rd9, %rd738;
	ld.local.u32 	%r878, [%rd739];
	st.local.u32 	[%rd6+8], %r878;
	add.s32 	%r879, %r11770, 23;
	mul.wide.s32 	%rd740, %r879, 4;
	add.s64 	%rd741, %rd9, %rd740;
	ld.local.u32 	%r880, [%rd741];
	st.local.u32 	[%rd6+12], %r880;
	add.s32 	%r881, %r11770, 24;
	mul.wide.s32 	%rd742, %r881, 4;
	add.s64 	%rd743, %rd9, %rd742;
	ld.local.u32 	%r882, [%rd743];
	st.local.u32 	[%rd7], %r882;
	add.s32 	%r883, %r11770, 25;
	mul.wide.s32 	%rd744, %r883, 4;
	add.s64 	%rd745, %rd9, %rd744;
	ld.local.u32 	%r884, [%rd745];
	st.local.u32 	[%rd7+4], %r884;
	add.s32 	%r885, %r11770, 26;
	mul.wide.s32 	%rd746, %r885, 4;
	add.s64 	%rd747, %rd9, %rd746;
	ld.local.u32 	%r886, [%rd747];
	st.local.u32 	[%rd7+8], %r886;
	add.s32 	%r887, %r11770, 27;
	mul.wide.s32 	%rd748, %r887, 4;
	add.s64 	%rd749, %rd9, %rd748;
	ld.local.u32 	%r888, [%rd749];
	st.local.u32 	[%rd7+12], %r888;
	add.s32 	%r889, %r11770, 28;
	mul.wide.s32 	%rd750, %r889, 4;
	add.s64 	%rd751, %rd9, %rd750;
	ld.local.u32 	%r890, [%rd751];
	st.local.u32 	[%rd8], %r890;
	add.s32 	%r891, %r11770, 29;
	mul.wide.s32 	%rd752, %r891, 4;
	add.s64 	%rd753, %rd9, %rd752;
	ld.local.u32 	%r892, [%rd753];
	st.local.u32 	[%rd8+4], %r892;
	add.s32 	%r893, %r11770, 30;
	mul.wide.s32 	%rd754, %r893, 4;
	add.s64 	%rd755, %rd9, %rd754;
	ld.local.u32 	%r894, [%rd755];
	st.local.u32 	[%rd8+8], %r894;
	add.s32 	%r895, %r11770, 31;
	mul.wide.s32 	%rd756, %r895, 4;
	add.s64 	%rd757, %rd9, %rd756;
	ld.local.u32 	%r38, [%rd757];
	st.local.u32 	[%rd62], %r38;
	setp.lt.s32	%p16, %r11769, %r33;
	@%p16 bra 	BB5_687;
	bra.uni 	BB5_23;

BB5_687:
	ld.local.u32 	%r5143, [%rd61];
	add.s32 	%r5144, %r5143, 128;
	st.local.u32 	[%rd61], %r5144;
	bfe.u32 	%r5142, %r5143, 2, 5;
	and.b32  	%r5145, %r5143, 3;
	shl.b32 	%r5146, %r5145, 2;
	mov.u32 	%r5147, 1985229328;
	shr.u32 	%r5148, %r5147, %r5146;
	and.b32  	%r193, %r5148, 65535;
	mov.u32 	%r11840, 0;
	setp.gt.s32	%p411, %r5142, 15;
	@%p411 bra 	BB5_720;

	setp.gt.s32	%p435, %r5142, 7;
	@%p435 bra 	BB5_705;

	setp.gt.s32	%p447, %r5142, 3;
	@%p447 bra 	BB5_698;

	setp.gt.s32	%p453, %r5142, 1;
	@%p453 bra 	BB5_694;

	setp.eq.s32	%p456, %r5142, 0;
	@%p456 bra 	BB5_772;
	bra.uni 	BB5_692;

BB5_772:
	mov.u32 	%r11840, 0;
	// inline asm
	prmt.b32 %r11843, %r11840, %r38, %r193;
	// inline asm
	ld.local.u32 	%r10702, [%rd62];
	ld.local.u32 	%r10703, [%rd8+8];
	// inline asm
	prmt.b32 %r10701, %r10702, %r10703, %r193;
	// inline asm
	st.local.u32 	[%rd62], %r10701;
	ld.local.u32 	%r10706, [%rd8+8];
	ld.local.u32 	%r10707, [%rd8+4];
	// inline asm
	prmt.b32 %r10705, %r10706, %r10707, %r193;
	// inline asm
	st.local.u32 	[%rd8+8], %r10705;
	ld.local.v2.u32 	{%r10860, %r10861}, [%rd8];
	// inline asm
	prmt.b32 %r10709, %r10861, %r10860, %r193;
	// inline asm
	st.local.u32 	[%rd8+4], %r10709;
	ld.local.u32 	%r10714, [%rd8];
	ld.local.u32 	%r10715, [%rd7+12];
	// inline asm
	prmt.b32 %r10713, %r10714, %r10715, %r193;
	// inline asm
	st.local.u32 	[%rd8], %r10713;
	ld.local.v2.u32 	{%r10862, %r10863}, [%rd7+8];
	// inline asm
	prmt.b32 %r10717, %r10863, %r10862, %r193;
	// inline asm
	st.local.u32 	[%rd7+12], %r10717;
	ld.local.u32 	%r10722, [%rd7+8];
	ld.local.u32 	%r10723, [%rd7+4];
	// inline asm
	prmt.b32 %r10721, %r10722, %r10723, %r193;
	// inline asm
	st.local.u32 	[%rd7+8], %r10721;
	ld.local.v2.u32 	{%r10864, %r10865}, [%rd7];
	// inline asm
	prmt.b32 %r10725, %r10865, %r10864, %r193;
	// inline asm
	st.local.u32 	[%rd7+4], %r10725;
	ld.local.u32 	%r10730, [%rd7];
	ld.local.u32 	%r10731, [%rd6+12];
	// inline asm
	prmt.b32 %r10729, %r10730, %r10731, %r193;
	// inline asm
	st.local.u32 	[%rd7], %r10729;
	ld.local.v2.u32 	{%r10866, %r10867}, [%rd6+8];
	// inline asm
	prmt.b32 %r10733, %r10867, %r10866, %r193;
	// inline asm
	st.local.u32 	[%rd6+12], %r10733;
	ld.local.u32 	%r10738, [%rd6+8];
	ld.local.u32 	%r10739, [%rd6+4];
	// inline asm
	prmt.b32 %r10737, %r10738, %r10739, %r193;
	// inline asm
	st.local.u32 	[%rd6+8], %r10737;
	ld.local.v2.u32 	{%r10868, %r10869}, [%rd6];
	// inline asm
	prmt.b32 %r10741, %r10869, %r10868, %r193;
	// inline asm
	st.local.u32 	[%rd6+4], %r10741;
	ld.local.u32 	%r10746, [%rd6];
	ld.local.u32 	%r10747, [%rd5+12];
	// inline asm
	prmt.b32 %r10745, %r10746, %r10747, %r193;
	// inline asm
	st.local.u32 	[%rd6], %r10745;
	ld.local.v2.u32 	{%r10870, %r10871}, [%rd5+8];
	// inline asm
	prmt.b32 %r10749, %r10871, %r10870, %r193;
	// inline asm
	st.local.u32 	[%rd5+12], %r10749;
	ld.local.u32 	%r10754, [%rd5+8];
	ld.local.u32 	%r10755, [%rd5+4];
	// inline asm
	prmt.b32 %r10753, %r10754, %r10755, %r193;
	// inline asm
	st.local.u32 	[%rd5+8], %r10753;
	ld.local.v2.u32 	{%r10872, %r10873}, [%rd5];
	// inline asm
	prmt.b32 %r10757, %r10873, %r10872, %r193;
	// inline asm
	st.local.u32 	[%rd5+4], %r10757;
	ld.local.u32 	%r10762, [%rd5];
	ld.local.u32 	%r10763, [%rd4+12];
	// inline asm
	prmt.b32 %r10761, %r10762, %r10763, %r193;
	// inline asm
	st.local.u32 	[%rd5], %r10761;
	ld.local.v2.u32 	{%r10874, %r10875}, [%rd4+8];
	// inline asm
	prmt.b32 %r10765, %r10875, %r10874, %r193;
	// inline asm
	st.local.u32 	[%rd4+12], %r10765;
	ld.local.u32 	%r10770, [%rd4+8];
	ld.local.u32 	%r10771, [%rd4+4];
	// inline asm
	prmt.b32 %r10769, %r10770, %r10771, %r193;
	// inline asm
	st.local.u32 	[%rd4+8], %r10769;
	ld.local.v2.u32 	{%r10876, %r10877}, [%rd4];
	// inline asm
	prmt.b32 %r10773, %r10877, %r10876, %r193;
	// inline asm
	st.local.u32 	[%rd4+4], %r10773;
	ld.local.u32 	%r10778, [%rd4];
	ld.local.u32 	%r10779, [%rd3+12];
	// inline asm
	prmt.b32 %r10777, %r10778, %r10779, %r193;
	// inline asm
	st.local.u32 	[%rd4], %r10777;
	ld.local.v2.u32 	{%r10878, %r10879}, [%rd3+8];
	// inline asm
	prmt.b32 %r10781, %r10879, %r10878, %r193;
	// inline asm
	st.local.u32 	[%rd3+12], %r10781;
	ld.local.u32 	%r10786, [%rd3+8];
	ld.local.u32 	%r10787, [%rd3+4];
	// inline asm
	prmt.b32 %r10785, %r10786, %r10787, %r193;
	// inline asm
	st.local.u32 	[%rd3+8], %r10785;
	ld.local.v2.u32 	{%r10880, %r10881}, [%rd3];
	// inline asm
	prmt.b32 %r10789, %r10881, %r10880, %r193;
	// inline asm
	st.local.u32 	[%rd3+4], %r10789;
	ld.local.u32 	%r10794, [%rd3];
	ld.local.u32 	%r10795, [%rd2+12];
	// inline asm
	prmt.b32 %r10793, %r10794, %r10795, %r193;
	// inline asm
	st.local.u32 	[%rd3], %r10793;
	ld.local.v2.u32 	{%r10882, %r10883}, [%rd2+8];
	// inline asm
	prmt.b32 %r10797, %r10883, %r10882, %r193;
	// inline asm
	st.local.u32 	[%rd2+12], %r10797;
	ld.local.u32 	%r10802, [%rd2+8];
	ld.local.u32 	%r10803, [%rd2+4];
	// inline asm
	prmt.b32 %r10801, %r10802, %r10803, %r193;
	// inline asm
	st.local.u32 	[%rd2+8], %r10801;
	ld.local.v2.u32 	{%r10884, %r10885}, [%rd2];
	// inline asm
	prmt.b32 %r10805, %r10885, %r10884, %r193;
	// inline asm
	st.local.u32 	[%rd2+4], %r10805;
	ld.local.u32 	%r10810, [%rd2];
	ld.local.u32 	%r10811, [%rd1+12];
	// inline asm
	prmt.b32 %r10809, %r10810, %r10811, %r193;
	// inline asm
	st.local.u32 	[%rd2], %r10809;
	ld.local.v2.u32 	{%r10886, %r10887}, [%rd1+8];
	// inline asm
	prmt.b32 %r10813, %r10887, %r10886, %r193;
	// inline asm
	st.local.u32 	[%rd1+12], %r10813;
	ld.local.u32 	%r10818, [%rd1+8];
	ld.local.u32 	%r10819, [%rd1+4];
	// inline asm
	prmt.b32 %r10817, %r10818, %r10819, %r193;
	// inline asm
	st.local.u32 	[%rd1+8], %r10817;
	ld.local.v2.u32 	{%r10888, %r10889}, [%rd1];
	// inline asm
	prmt.b32 %r10821, %r10889, %r10888, %r193;
	// inline asm
	st.local.u32 	[%rd1+4], %r10821;
	ld.local.u32 	%r10826, [%rd1];
	// inline asm
	prmt.b32 %r11839, %r10826, %r11840, %r193;
	// inline asm
	st.local.u32 	[%rd1], %r11839;
	ld.local.u32 	%r11838, [%rd1+4];
	mov.u32 	%r11841, %r11840;
	mov.u32 	%r11842, %r11840;
	mov.u32 	%r11844, %r11840;
	mov.u32 	%r11845, %r11840;
	mov.u32 	%r11846, %r11840;
	mov.u32 	%r11847, %r11840;
	mov.u32 	%r11848, %r11840;
	mov.u32 	%r11849, %r11840;
	mov.u32 	%r11850, %r11840;
	mov.u32 	%r11851, %r11840;
	mov.u32 	%r11852, %r11840;
	mov.u32 	%r11853, %r11840;
	mov.u32 	%r11854, %r11840;
	mov.u32 	%r11855, %r11840;
	mov.u32 	%r11856, %r11840;
	mov.u32 	%r11857, %r11840;
	mov.u32 	%r11858, %r11840;
	mov.u32 	%r11859, %r11840;
	mov.u32 	%r11860, %r11840;
	mov.u32 	%r11861, %r11840;
	mov.u32 	%r11862, %r11840;
	mov.u32 	%r11863, %r11840;
	mov.u32 	%r11864, %r11840;
	mov.u32 	%r11865, %r11840;
	mov.u32 	%r11866, %r11840;
	mov.u32 	%r11867, %r11840;
	mov.u32 	%r11868, %r11840;
	mov.u32 	%r11869, %r11840;
	mov.u32 	%r11870, %r11840;
	mov.u32 	%r11871, %r11840;
	bra.uni 	BB5_773;

BB5_720:
	setp.gt.s32	%p412, %r5142, 23;
	@%p412 bra 	BB5_736;

	setp.gt.s32	%p424, %r5142, 19;
	@%p424 bra 	BB5_729;

	setp.gt.s32	%p430, %r5142, 17;
	@%p430 bra 	BB5_726;

	setp.eq.s32	%p433, %r5142, 16;
	@%p433 bra 	BB5_758;
	bra.uni 	BB5_724;

BB5_758:
	mov.u32 	%r11838, 0;
	// inline asm
	prmt.b32 %r11859, %r11838, %r38, %r193;
	// inline asm
	ld.local.u32 	%r7719, [%rd62];
	ld.local.u32 	%r7720, [%rd8+8];
	// inline asm
	prmt.b32 %r11852, %r7719, %r7720, %r193;
	// inline asm
	ld.local.u32 	%r7723, [%rd8+8];
	ld.local.u32 	%r7724, [%rd8+4];
	// inline asm
	prmt.b32 %r11853, %r7723, %r7724, %r193;
	// inline asm
	ld.local.v2.u32 	{%r7863, %r7864}, [%rd8];
	// inline asm
	prmt.b32 %r11854, %r7864, %r7863, %r193;
	// inline asm
	ld.local.u32 	%r7731, [%rd8];
	ld.local.u32 	%r7732, [%rd7+12];
	// inline asm
	prmt.b32 %r11855, %r7731, %r7732, %r193;
	// inline asm
	ld.local.v2.u32 	{%r7865, %r7866}, [%rd7+8];
	// inline asm
	prmt.b32 %r11848, %r7866, %r7865, %r193;
	// inline asm
	ld.local.u32 	%r7739, [%rd7+8];
	ld.local.u32 	%r7740, [%rd7+4];
	// inline asm
	prmt.b32 %r11849, %r7739, %r7740, %r193;
	// inline asm
	ld.local.v2.u32 	{%r7867, %r7868}, [%rd7];
	// inline asm
	prmt.b32 %r11850, %r7868, %r7867, %r193;
	// inline asm
	ld.local.u32 	%r7747, [%rd7];
	ld.local.u32 	%r7748, [%rd6+12];
	// inline asm
	prmt.b32 %r11851, %r7747, %r7748, %r193;
	// inline asm
	ld.local.v2.u32 	{%r7869, %r7870}, [%rd6+8];
	// inline asm
	prmt.b32 %r11844, %r7870, %r7869, %r193;
	// inline asm
	ld.local.u32 	%r7755, [%rd6+8];
	ld.local.u32 	%r7756, [%rd6+4];
	// inline asm
	prmt.b32 %r11845, %r7755, %r7756, %r193;
	// inline asm
	ld.local.v2.u32 	{%r7871, %r7872}, [%rd6];
	// inline asm
	prmt.b32 %r11846, %r7872, %r7871, %r193;
	// inline asm
	ld.local.u32 	%r7763, [%rd6];
	ld.local.u32 	%r7764, [%rd5+12];
	// inline asm
	prmt.b32 %r11847, %r7763, %r7764, %r193;
	// inline asm
	ld.local.v2.u32 	{%r7873, %r7874}, [%rd5+8];
	// inline asm
	prmt.b32 %r11840, %r7874, %r7873, %r193;
	// inline asm
	ld.local.u32 	%r7771, [%rd5+8];
	ld.local.u32 	%r7772, [%rd5+4];
	// inline asm
	prmt.b32 %r11841, %r7771, %r7772, %r193;
	// inline asm
	ld.local.v2.u32 	{%r7875, %r7876}, [%rd5];
	// inline asm
	prmt.b32 %r11842, %r7876, %r7875, %r193;
	// inline asm
	ld.local.u32 	%r7779, [%rd5];
	ld.local.u32 	%r7780, [%rd4+12];
	// inline asm
	prmt.b32 %r11843, %r7779, %r7780, %r193;
	// inline asm
	ld.local.v2.u32 	{%r7877, %r7878}, [%rd4+8];
	// inline asm
	prmt.b32 %r7782, %r7878, %r7877, %r193;
	// inline asm
	st.local.u32 	[%rd62], %r7782;
	ld.local.u32 	%r7787, [%rd4+8];
	ld.local.u32 	%r7788, [%rd4+4];
	// inline asm
	prmt.b32 %r7786, %r7787, %r7788, %r193;
	// inline asm
	st.local.u32 	[%rd8+8], %r7786;
	ld.local.v2.u32 	{%r7879, %r7880}, [%rd4];
	// inline asm
	prmt.b32 %r7790, %r7880, %r7879, %r193;
	// inline asm
	st.local.u32 	[%rd8+4], %r7790;
	ld.local.u32 	%r7795, [%rd4];
	ld.local.u32 	%r7796, [%rd3+12];
	// inline asm
	prmt.b32 %r7794, %r7795, %r7796, %r193;
	// inline asm
	st.local.u32 	[%rd8], %r7794;
	ld.local.v2.u32 	{%r7881, %r7882}, [%rd3+8];
	// inline asm
	prmt.b32 %r7798, %r7882, %r7881, %r193;
	// inline asm
	st.local.u32 	[%rd7+12], %r7798;
	ld.local.u32 	%r7803, [%rd3+8];
	ld.local.u32 	%r7804, [%rd3+4];
	// inline asm
	prmt.b32 %r7802, %r7803, %r7804, %r193;
	// inline asm
	st.local.u32 	[%rd7+8], %r7802;
	ld.local.v2.u32 	{%r7883, %r7884}, [%rd3];
	// inline asm
	prmt.b32 %r7806, %r7884, %r7883, %r193;
	// inline asm
	st.local.u32 	[%rd7+4], %r7806;
	ld.local.u32 	%r7811, [%rd3];
	ld.local.u32 	%r7812, [%rd2+12];
	// inline asm
	prmt.b32 %r7810, %r7811, %r7812, %r193;
	// inline asm
	st.local.u32 	[%rd7], %r7810;
	ld.local.v2.u32 	{%r7885, %r7886}, [%rd2+8];
	// inline asm
	prmt.b32 %r7814, %r7886, %r7885, %r193;
	// inline asm
	st.local.u32 	[%rd6+12], %r7814;
	ld.local.u32 	%r7819, [%rd2+8];
	ld.local.u32 	%r7820, [%rd2+4];
	// inline asm
	prmt.b32 %r7818, %r7819, %r7820, %r193;
	// inline asm
	st.local.u32 	[%rd6+8], %r7818;
	ld.local.v2.u32 	{%r7887, %r7888}, [%rd2];
	// inline asm
	prmt.b32 %r7822, %r7888, %r7887, %r193;
	// inline asm
	st.local.u32 	[%rd6+4], %r7822;
	ld.local.u32 	%r7827, [%rd2];
	ld.local.u32 	%r7828, [%rd1+12];
	// inline asm
	prmt.b32 %r7826, %r7827, %r7828, %r193;
	// inline asm
	st.local.u32 	[%rd6], %r7826;
	ld.local.v2.u32 	{%r7889, %r7890}, [%rd1+8];
	// inline asm
	prmt.b32 %r7830, %r7890, %r7889, %r193;
	// inline asm
	st.local.u32 	[%rd5+12], %r7830;
	ld.local.u32 	%r7835, [%rd1+8];
	ld.local.u32 	%r7836, [%rd1+4];
	// inline asm
	prmt.b32 %r7834, %r7835, %r7836, %r193;
	// inline asm
	st.local.u32 	[%rd5+8], %r7834;
	ld.local.v2.u32 	{%r7891, %r7892}, [%rd1];
	// inline asm
	prmt.b32 %r7838, %r7892, %r7891, %r193;
	// inline asm
	st.local.u32 	[%rd5+4], %r7838;
	ld.local.u32 	%r7843, [%rd1];
	// inline asm
	prmt.b32 %r7842, %r7843, %r11838, %r193;
	// inline asm
	st.local.u32 	[%rd5], %r7842;
	st.local.v4.u32 	[%rd4], {%r11838, %r11838, %r11838, %r11838};
	st.local.v4.u32 	[%rd3], {%r11838, %r11838, %r11838, %r11838};
	st.local.v4.u32 	[%rd2], {%r11838, %r11838, %r11838, %r11838};
	st.local.v2.u32 	[%rd1+8], {%r11838, %r11838};
	mov.u64 	%rd5763, 0;
	st.local.u64 	[%rd1], %rd5763;
	mov.u32 	%r11839, %r11838;
	mov.u32 	%r11856, %r11838;
	mov.u32 	%r11857, %r11838;
	mov.u32 	%r11858, %r11838;
	bra.uni 	BB5_768;

BB5_705:
	setp.gt.s32	%p436, %r5142, 11;
	@%p436 bra 	BB5_713;

	setp.gt.s32	%p442, %r5142, 9;
	@%p442 bra 	BB5_710;

	setp.eq.s32	%p445, %r5142, 8;
	@%p445 bra 	BB5_762;
	bra.uni 	BB5_708;

BB5_762:
	mov.u32 	%r11838, 0;
	// inline asm
	prmt.b32 %r11851, %r11838, %r38, %r193;
	// inline asm
	ld.local.u32 	%r9179, [%rd62];
	ld.local.u32 	%r9180, [%rd8+8];
	// inline asm
	prmt.b32 %r11844, %r9179, %r9180, %r193;
	// inline asm
	ld.local.u32 	%r9183, [%rd8+8];
	ld.local.u32 	%r9184, [%rd8+4];
	// inline asm
	prmt.b32 %r11845, %r9183, %r9184, %r193;
	// inline asm
	ld.local.v2.u32 	{%r9331, %r9332}, [%rd8];
	// inline asm
	prmt.b32 %r11846, %r9332, %r9331, %r193;
	// inline asm
	ld.local.u32 	%r9191, [%rd8];
	ld.local.u32 	%r9192, [%rd7+12];
	// inline asm
	prmt.b32 %r11847, %r9191, %r9192, %r193;
	// inline asm
	ld.local.v2.u32 	{%r9333, %r9334}, [%rd7+8];
	// inline asm
	prmt.b32 %r11840, %r9334, %r9333, %r193;
	// inline asm
	ld.local.u32 	%r9199, [%rd7+8];
	ld.local.u32 	%r9200, [%rd7+4];
	// inline asm
	prmt.b32 %r11841, %r9199, %r9200, %r193;
	// inline asm
	ld.local.v2.u32 	{%r9335, %r9336}, [%rd7];
	// inline asm
	prmt.b32 %r11842, %r9336, %r9335, %r193;
	// inline asm
	ld.local.u32 	%r9207, [%rd7];
	ld.local.u32 	%r9208, [%rd6+12];
	// inline asm
	prmt.b32 %r11843, %r9207, %r9208, %r193;
	// inline asm
	ld.local.v2.u32 	{%r9337, %r9338}, [%rd6+8];
	// inline asm
	prmt.b32 %r9210, %r9338, %r9337, %r193;
	// inline asm
	st.local.u32 	[%rd62], %r9210;
	ld.local.u32 	%r9215, [%rd6+8];
	ld.local.u32 	%r9216, [%rd6+4];
	// inline asm
	prmt.b32 %r9214, %r9215, %r9216, %r193;
	// inline asm
	st.local.u32 	[%rd8+8], %r9214;
	ld.local.v2.u32 	{%r9339, %r9340}, [%rd6];
	// inline asm
	prmt.b32 %r9218, %r9340, %r9339, %r193;
	// inline asm
	st.local.u32 	[%rd8+4], %r9218;
	ld.local.u32 	%r9223, [%rd6];
	ld.local.u32 	%r9224, [%rd5+12];
	// inline asm
	prmt.b32 %r9222, %r9223, %r9224, %r193;
	// inline asm
	st.local.u32 	[%rd8], %r9222;
	ld.local.v2.u32 	{%r9341, %r9342}, [%rd5+8];
	// inline asm
	prmt.b32 %r9226, %r9342, %r9341, %r193;
	// inline asm
	st.local.u32 	[%rd7+12], %r9226;
	ld.local.u32 	%r9231, [%rd5+8];
	ld.local.u32 	%r9232, [%rd5+4];
	// inline asm
	prmt.b32 %r9230, %r9231, %r9232, %r193;
	// inline asm
	st.local.u32 	[%rd7+8], %r9230;
	ld.local.v2.u32 	{%r9343, %r9344}, [%rd5];
	// inline asm
	prmt.b32 %r9234, %r9344, %r9343, %r193;
	// inline asm
	st.local.u32 	[%rd7+4], %r9234;
	ld.local.u32 	%r9239, [%rd5];
	ld.local.u32 	%r9240, [%rd4+12];
	// inline asm
	prmt.b32 %r9238, %r9239, %r9240, %r193;
	// inline asm
	st.local.u32 	[%rd7], %r9238;
	ld.local.v2.u32 	{%r9345, %r9346}, [%rd4+8];
	// inline asm
	prmt.b32 %r9242, %r9346, %r9345, %r193;
	// inline asm
	st.local.u32 	[%rd6+12], %r9242;
	ld.local.u32 	%r9247, [%rd4+8];
	ld.local.u32 	%r9248, [%rd4+4];
	// inline asm
	prmt.b32 %r9246, %r9247, %r9248, %r193;
	// inline asm
	st.local.u32 	[%rd6+8], %r9246;
	ld.local.v2.u32 	{%r9347, %r9348}, [%rd4];
	// inline asm
	prmt.b32 %r9250, %r9348, %r9347, %r193;
	// inline asm
	st.local.u32 	[%rd6+4], %r9250;
	ld.local.u32 	%r9255, [%rd4];
	ld.local.u32 	%r9256, [%rd3+12];
	// inline asm
	prmt.b32 %r9254, %r9255, %r9256, %r193;
	// inline asm
	st.local.u32 	[%rd6], %r9254;
	ld.local.v2.u32 	{%r9349, %r9350}, [%rd3+8];
	// inline asm
	prmt.b32 %r9258, %r9350, %r9349, %r193;
	// inline asm
	st.local.u32 	[%rd5+12], %r9258;
	ld.local.u32 	%r9263, [%rd3+8];
	ld.local.u32 	%r9264, [%rd3+4];
	// inline asm
	prmt.b32 %r9262, %r9263, %r9264, %r193;
	// inline asm
	st.local.u32 	[%rd5+8], %r9262;
	ld.local.v2.u32 	{%r9351, %r9352}, [%rd3];
	// inline asm
	prmt.b32 %r9266, %r9352, %r9351, %r193;
	// inline asm
	st.local.u32 	[%rd5+4], %r9266;
	ld.local.u32 	%r9271, [%rd3];
	ld.local.u32 	%r9272, [%rd2+12];
	// inline asm
	prmt.b32 %r9270, %r9271, %r9272, %r193;
	// inline asm
	st.local.u32 	[%rd5], %r9270;
	ld.local.v2.u32 	{%r9353, %r9354}, [%rd2+8];
	// inline asm
	prmt.b32 %r9274, %r9354, %r9353, %r193;
	// inline asm
	st.local.u32 	[%rd4+12], %r9274;
	ld.local.u32 	%r9279, [%rd2+8];
	ld.local.u32 	%r9280, [%rd2+4];
	// inline asm
	prmt.b32 %r9278, %r9279, %r9280, %r193;
	// inline asm
	st.local.u32 	[%rd4+8], %r9278;
	ld.local.v2.u32 	{%r9355, %r9356}, [%rd2];
	// inline asm
	prmt.b32 %r9282, %r9356, %r9355, %r193;
	// inline asm
	st.local.u32 	[%rd4+4], %r9282;
	ld.local.u32 	%r9287, [%rd2];
	ld.local.u32 	%r9288, [%rd1+12];
	// inline asm
	prmt.b32 %r9286, %r9287, %r9288, %r193;
	// inline asm
	st.local.u32 	[%rd4], %r9286;
	ld.local.v2.u32 	{%r9357, %r9358}, [%rd1+8];
	// inline asm
	prmt.b32 %r9290, %r9358, %r9357, %r193;
	// inline asm
	st.local.u32 	[%rd3+12], %r9290;
	ld.local.u32 	%r9295, [%rd1+8];
	ld.local.u32 	%r9296, [%rd1+4];
	// inline asm
	prmt.b32 %r9294, %r9295, %r9296, %r193;
	// inline asm
	st.local.u32 	[%rd3+8], %r9294;
	ld.local.v2.u32 	{%r9359, %r9360}, [%rd1];
	// inline asm
	prmt.b32 %r9298, %r9360, %r9359, %r193;
	// inline asm
	st.local.u32 	[%rd3+4], %r9298;
	ld.local.u32 	%r9303, [%rd1];
	// inline asm
	prmt.b32 %r9302, %r9303, %r11838, %r193;
	// inline asm
	st.local.u32 	[%rd3], %r9302;
	st.local.v4.u32 	[%rd2], {%r11838, %r11838, %r11838, %r11838};
	st.local.v2.u32 	[%rd1+8], {%r11838, %r11838};
	mov.u64 	%rd5771, 0;
	st.local.u64 	[%rd1], %rd5771;
	mov.u32 	%r11839, %r11838;
	mov.u32 	%r11848, %r11838;
	mov.u32 	%r11849, %r11838;
	mov.u32 	%r11850, %r11838;
	bra.uni 	BB5_766;

BB5_736:
	setp.gt.s32	%p413, %r5142, 27;
	@%p413 bra 	BB5_744;

	setp.gt.s32	%p419, %r5142, 25;
	@%p419 bra 	BB5_741;

	setp.eq.s32	%p422, %r5142, 24;
	@%p422 bra 	BB5_754;
	bra.uni 	BB5_739;

BB5_754:
	mov.u32 	%r11838, 0;
	// inline asm
	prmt.b32 %r11867, %r11838, %r38, %r193;
	// inline asm
	ld.local.u32 	%r6323, [%rd62];
	ld.local.u32 	%r6324, [%rd8+8];
	// inline asm
	prmt.b32 %r11860, %r6323, %r6324, %r193;
	// inline asm
	ld.local.u32 	%r6327, [%rd8+8];
	ld.local.u32 	%r6328, [%rd8+4];
	// inline asm
	prmt.b32 %r11861, %r6327, %r6328, %r193;
	// inline asm
	ld.local.v2.u32 	{%r6459, %r6460}, [%rd8];
	// inline asm
	prmt.b32 %r11862, %r6460, %r6459, %r193;
	// inline asm
	ld.local.u32 	%r6335, [%rd8];
	ld.local.u32 	%r6336, [%rd7+12];
	// inline asm
	prmt.b32 %r11863, %r6335, %r6336, %r193;
	// inline asm
	ld.local.v2.u32 	{%r6461, %r6462}, [%rd7+8];
	// inline asm
	prmt.b32 %r11856, %r6462, %r6461, %r193;
	// inline asm
	ld.local.u32 	%r6343, [%rd7+8];
	ld.local.u32 	%r6344, [%rd7+4];
	// inline asm
	prmt.b32 %r11857, %r6343, %r6344, %r193;
	// inline asm
	ld.local.v2.u32 	{%r6463, %r6464}, [%rd7];
	// inline asm
	prmt.b32 %r11858, %r6464, %r6463, %r193;
	// inline asm
	ld.local.u32 	%r6351, [%rd7];
	ld.local.u32 	%r6352, [%rd6+12];
	// inline asm
	prmt.b32 %r11859, %r6351, %r6352, %r193;
	// inline asm
	ld.local.v2.u32 	{%r6465, %r6466}, [%rd6+8];
	// inline asm
	prmt.b32 %r11852, %r6466, %r6465, %r193;
	// inline asm
	ld.local.u32 	%r6359, [%rd6+8];
	ld.local.u32 	%r6360, [%rd6+4];
	// inline asm
	prmt.b32 %r11853, %r6359, %r6360, %r193;
	// inline asm
	ld.local.v2.u32 	{%r6467, %r6468}, [%rd6];
	// inline asm
	prmt.b32 %r11854, %r6468, %r6467, %r193;
	// inline asm
	ld.local.u32 	%r6367, [%rd6];
	ld.local.u32 	%r6368, [%rd5+12];
	// inline asm
	prmt.b32 %r11855, %r6367, %r6368, %r193;
	// inline asm
	ld.local.v2.u32 	{%r6469, %r6470}, [%rd5+8];
	// inline asm
	prmt.b32 %r11848, %r6470, %r6469, %r193;
	// inline asm
	ld.local.u32 	%r6375, [%rd5+8];
	ld.local.u32 	%r6376, [%rd5+4];
	// inline asm
	prmt.b32 %r11849, %r6375, %r6376, %r193;
	// inline asm
	ld.local.v2.u32 	{%r6471, %r6472}, [%rd5];
	// inline asm
	prmt.b32 %r11850, %r6472, %r6471, %r193;
	// inline asm
	ld.local.u32 	%r6383, [%rd5];
	ld.local.u32 	%r6384, [%rd4+12];
	// inline asm
	prmt.b32 %r11851, %r6383, %r6384, %r193;
	// inline asm
	ld.local.v2.u32 	{%r6473, %r6474}, [%rd4+8];
	// inline asm
	prmt.b32 %r11844, %r6474, %r6473, %r193;
	// inline asm
	ld.local.u32 	%r6391, [%rd4+8];
	ld.local.u32 	%r6392, [%rd4+4];
	// inline asm
	prmt.b32 %r11845, %r6391, %r6392, %r193;
	// inline asm
	ld.local.v2.u32 	{%r6475, %r6476}, [%rd4];
	// inline asm
	prmt.b32 %r11846, %r6476, %r6475, %r193;
	// inline asm
	ld.local.u32 	%r6399, [%rd4];
	ld.local.u32 	%r6400, [%rd3+12];
	// inline asm
	prmt.b32 %r11847, %r6399, %r6400, %r193;
	// inline asm
	ld.local.v2.u32 	{%r6477, %r6478}, [%rd3+8];
	// inline asm
	prmt.b32 %r11840, %r6478, %r6477, %r193;
	// inline asm
	ld.local.u32 	%r6407, [%rd3+8];
	ld.local.u32 	%r6408, [%rd3+4];
	// inline asm
	prmt.b32 %r11841, %r6407, %r6408, %r193;
	// inline asm
	ld.local.v2.u32 	{%r6479, %r6480}, [%rd3];
	// inline asm
	prmt.b32 %r11842, %r6480, %r6479, %r193;
	// inline asm
	ld.local.u32 	%r6415, [%rd3];
	ld.local.u32 	%r6416, [%rd2+12];
	// inline asm
	prmt.b32 %r11843, %r6415, %r6416, %r193;
	// inline asm
	ld.local.v2.u32 	{%r6481, %r6482}, [%rd2+8];
	// inline asm
	prmt.b32 %r6418, %r6482, %r6481, %r193;
	// inline asm
	st.local.u32 	[%rd62], %r6418;
	ld.local.u32 	%r6423, [%rd2+8];
	ld.local.u32 	%r6424, [%rd2+4];
	// inline asm
	prmt.b32 %r6422, %r6423, %r6424, %r193;
	// inline asm
	st.local.u32 	[%rd8+8], %r6422;
	ld.local.v2.u32 	{%r6483, %r6484}, [%rd2];
	// inline asm
	prmt.b32 %r6426, %r6484, %r6483, %r193;
	// inline asm
	st.local.u32 	[%rd8+4], %r6426;
	ld.local.u32 	%r6431, [%rd2];
	ld.local.u32 	%r6432, [%rd1+12];
	// inline asm
	prmt.b32 %r6430, %r6431, %r6432, %r193;
	// inline asm
	st.local.u32 	[%rd8], %r6430;
	ld.local.v2.u32 	{%r6485, %r6486}, [%rd1+8];
	// inline asm
	prmt.b32 %r6434, %r6486, %r6485, %r193;
	// inline asm
	st.local.u32 	[%rd7+12], %r6434;
	ld.local.u32 	%r6439, [%rd1+8];
	ld.local.u32 	%r6440, [%rd1+4];
	// inline asm
	prmt.b32 %r6438, %r6439, %r6440, %r193;
	// inline asm
	st.local.u32 	[%rd7+8], %r6438;
	ld.local.v2.u32 	{%r6487, %r6488}, [%rd1];
	// inline asm
	prmt.b32 %r6442, %r6488, %r6487, %r193;
	// inline asm
	st.local.u32 	[%rd7+4], %r6442;
	ld.local.u32 	%r6447, [%rd1];
	// inline asm
	prmt.b32 %r6446, %r6447, %r11838, %r193;
	// inline asm
	st.local.u32 	[%rd7], %r6446;
	st.local.v4.u32 	[%rd6], {%r11838, %r11838, %r11838, %r11838};
	st.local.v4.u32 	[%rd5], {%r11838, %r11838, %r11838, %r11838};
	st.local.v4.u32 	[%rd4], {%r11838, %r11838, %r11838, %r11838};
	st.local.v4.u32 	[%rd3], {%r11838, %r11838, %r11838, %r11838};
	st.local.v4.u32 	[%rd2], {%r11838, %r11838, %r11838, %r11838};
	st.local.v2.u32 	[%rd1+8], {%r11838, %r11838};
	mov.u64 	%rd5755, 0;
	st.local.u64 	[%rd1], %rd5755;
	mov.u32 	%r11839, %r11838;
	mov.u32 	%r11864, %r11838;
	mov.u32 	%r11865, %r11838;
	mov.u32 	%r11866, %r11838;
	bra.uni 	BB5_770;

BB5_698:
	setp.gt.s32	%p448, %r5142, 5;
	@%p448 bra 	BB5_702;

	setp.eq.s32	%p451, %r5142, 4;
	@%p451 bra 	BB5_764;
	bra.uni 	BB5_700;

BB5_764:
	mov.u32 	%r11838, 0;
	// inline asm
	prmt.b32 %r11847, %r11838, %r38, %r193;
	// inline asm
	ld.local.u32 	%r9933, [%rd62];
	ld.local.u32 	%r9934, [%rd8+8];
	// inline asm
	prmt.b32 %r11840, %r9933, %r9934, %r193;
	// inline asm
	ld.local.u32 	%r9937, [%rd8+8];
	ld.local.u32 	%r9938, [%rd8+4];
	// inline asm
	prmt.b32 %r11841, %r9937, %r9938, %r193;
	// inline asm
	ld.local.v2.u32 	{%r10089, %r10090}, [%rd8];
	// inline asm
	prmt.b32 %r11842, %r10090, %r10089, %r193;
	// inline asm
	ld.local.u32 	%r9945, [%rd8];
	ld.local.u32 	%r9946, [%rd7+12];
	// inline asm
	prmt.b32 %r11843, %r9945, %r9946, %r193;
	// inline asm
	ld.local.v2.u32 	{%r10091, %r10092}, [%rd7+8];
	// inline asm
	prmt.b32 %r9948, %r10092, %r10091, %r193;
	// inline asm
	st.local.u32 	[%rd62], %r9948;
	ld.local.u32 	%r9953, [%rd7+8];
	ld.local.u32 	%r9954, [%rd7+4];
	// inline asm
	prmt.b32 %r9952, %r9953, %r9954, %r193;
	// inline asm
	st.local.u32 	[%rd8+8], %r9952;
	ld.local.v2.u32 	{%r10093, %r10094}, [%rd7];
	// inline asm
	prmt.b32 %r9956, %r10094, %r10093, %r193;
	// inline asm
	st.local.u32 	[%rd8+4], %r9956;
	ld.local.u32 	%r9961, [%rd7];
	ld.local.u32 	%r9962, [%rd6+12];
	// inline asm
	prmt.b32 %r9960, %r9961, %r9962, %r193;
	// inline asm
	st.local.u32 	[%rd8], %r9960;
	ld.local.v2.u32 	{%r10095, %r10096}, [%rd6+8];
	// inline asm
	prmt.b32 %r9964, %r10096, %r10095, %r193;
	// inline asm
	st.local.u32 	[%rd7+12], %r9964;
	ld.local.u32 	%r9969, [%rd6+8];
	ld.local.u32 	%r9970, [%rd6+4];
	// inline asm
	prmt.b32 %r9968, %r9969, %r9970, %r193;
	// inline asm
	st.local.u32 	[%rd7+8], %r9968;
	ld.local.v2.u32 	{%r10097, %r10098}, [%rd6];
	// inline asm
	prmt.b32 %r9972, %r10098, %r10097, %r193;
	// inline asm
	st.local.u32 	[%rd7+4], %r9972;
	ld.local.u32 	%r9977, [%rd6];
	ld.local.u32 	%r9978, [%rd5+12];
	// inline asm
	prmt.b32 %r9976, %r9977, %r9978, %r193;
	// inline asm
	st.local.u32 	[%rd7], %r9976;
	ld.local.v2.u32 	{%r10099, %r10100}, [%rd5+8];
	// inline asm
	prmt.b32 %r9980, %r10100, %r10099, %r193;
	// inline asm
	st.local.u32 	[%rd6+12], %r9980;
	ld.local.u32 	%r9985, [%rd5+8];
	ld.local.u32 	%r9986, [%rd5+4];
	// inline asm
	prmt.b32 %r9984, %r9985, %r9986, %r193;
	// inline asm
	st.local.u32 	[%rd6+8], %r9984;
	ld.local.v2.u32 	{%r10101, %r10102}, [%rd5];
	// inline asm
	prmt.b32 %r9988, %r10102, %r10101, %r193;
	// inline asm
	st.local.u32 	[%rd6+4], %r9988;
	ld.local.u32 	%r9993, [%rd5];
	ld.local.u32 	%r9994, [%rd4+12];
	// inline asm
	prmt.b32 %r9992, %r9993, %r9994, %r193;
	// inline asm
	st.local.u32 	[%rd6], %r9992;
	ld.local.v2.u32 	{%r10103, %r10104}, [%rd4+8];
	// inline asm
	prmt.b32 %r9996, %r10104, %r10103, %r193;
	// inline asm
	st.local.u32 	[%rd5+12], %r9996;
	ld.local.u32 	%r10001, [%rd4+8];
	ld.local.u32 	%r10002, [%rd4+4];
	// inline asm
	prmt.b32 %r10000, %r10001, %r10002, %r193;
	// inline asm
	st.local.u32 	[%rd5+8], %r10000;
	ld.local.v2.u32 	{%r10105, %r10106}, [%rd4];
	// inline asm
	prmt.b32 %r10004, %r10106, %r10105, %r193;
	// inline asm
	st.local.u32 	[%rd5+4], %r10004;
	ld.local.u32 	%r10009, [%rd4];
	ld.local.u32 	%r10010, [%rd3+12];
	// inline asm
	prmt.b32 %r10008, %r10009, %r10010, %r193;
	// inline asm
	st.local.u32 	[%rd5], %r10008;
	ld.local.v2.u32 	{%r10107, %r10108}, [%rd3+8];
	// inline asm
	prmt.b32 %r10012, %r10108, %r10107, %r193;
	// inline asm
	st.local.u32 	[%rd4+12], %r10012;
	ld.local.u32 	%r10017, [%rd3+8];
	ld.local.u32 	%r10018, [%rd3+4];
	// inline asm
	prmt.b32 %r10016, %r10017, %r10018, %r193;
	// inline asm
	st.local.u32 	[%rd4+8], %r10016;
	ld.local.v2.u32 	{%r10109, %r10110}, [%rd3];
	// inline asm
	prmt.b32 %r10020, %r10110, %r10109, %r193;
	// inline asm
	st.local.u32 	[%rd4+4], %r10020;
	ld.local.u32 	%r10025, [%rd3];
	ld.local.u32 	%r10026, [%rd2+12];
	// inline asm
	prmt.b32 %r10024, %r10025, %r10026, %r193;
	// inline asm
	st.local.u32 	[%rd4], %r10024;
	ld.local.v2.u32 	{%r10111, %r10112}, [%rd2+8];
	// inline asm
	prmt.b32 %r10028, %r10112, %r10111, %r193;
	// inline asm
	st.local.u32 	[%rd3+12], %r10028;
	ld.local.u32 	%r10033, [%rd2+8];
	ld.local.u32 	%r10034, [%rd2+4];
	// inline asm
	prmt.b32 %r10032, %r10033, %r10034, %r193;
	// inline asm
	st.local.u32 	[%rd3+8], %r10032;
	ld.local.v2.u32 	{%r10113, %r10114}, [%rd2];
	// inline asm
	prmt.b32 %r10036, %r10114, %r10113, %r193;
	// inline asm
	st.local.u32 	[%rd3+4], %r10036;
	ld.local.u32 	%r10041, [%rd2];
	ld.local.u32 	%r10042, [%rd1+12];
	// inline asm
	prmt.b32 %r10040, %r10041, %r10042, %r193;
	// inline asm
	st.local.u32 	[%rd3], %r10040;
	ld.local.v2.u32 	{%r10115, %r10116}, [%rd1+8];
	// inline asm
	prmt.b32 %r10044, %r10116, %r10115, %r193;
	// inline asm
	st.local.u32 	[%rd2+12], %r10044;
	ld.local.u32 	%r10049, [%rd1+8];
	ld.local.u32 	%r10050, [%rd1+4];
	// inline asm
	prmt.b32 %r10048, %r10049, %r10050, %r193;
	// inline asm
	st.local.u32 	[%rd2+8], %r10048;
	ld.local.v2.u32 	{%r10117, %r10118}, [%rd1];
	// inline asm
	prmt.b32 %r10052, %r10118, %r10117, %r193;
	// inline asm
	st.local.u32 	[%rd2+4], %r10052;
	ld.local.u32 	%r10057, [%rd1];
	// inline asm
	prmt.b32 %r10056, %r10057, %r11838, %r193;
	// inline asm
	st.local.u32 	[%rd2], %r10056;
	st.local.v2.u32 	[%rd1+8], {%r11838, %r11838};
	mov.u64 	%rd5775, 0;
	st.local.u64 	[%rd1], %rd5775;
	mov.u32 	%r11839, %r11838;
	mov.u32 	%r11844, %r11838;
	mov.u32 	%r11845, %r11838;
	mov.u32 	%r11846, %r11838;
	bra.uni 	BB5_765;

BB5_729:
	setp.gt.s32	%p425, %r5142, 21;
	@%p425 bra 	BB5_733;

	setp.eq.s32	%p428, %r5142, 20;
	@%p428 bra 	BB5_756;
	bra.uni 	BB5_731;

BB5_756:
	mov.u32 	%r11838, 0;
	// inline asm
	prmt.b32 %r11863, %r11838, %r38, %r193;
	// inline asm
	ld.local.u32 	%r7013, [%rd62];
	ld.local.u32 	%r7014, [%rd8+8];
	// inline asm
	prmt.b32 %r11856, %r7013, %r7014, %r193;
	// inline asm
	ld.local.u32 	%r7017, [%rd8+8];
	ld.local.u32 	%r7018, [%rd8+4];
	// inline asm
	prmt.b32 %r11857, %r7017, %r7018, %r193;
	// inline asm
	ld.local.v2.u32 	{%r7153, %r7154}, [%rd8];
	// inline asm
	prmt.b32 %r11858, %r7154, %r7153, %r193;
	// inline asm
	ld.local.u32 	%r7025, [%rd8];
	ld.local.u32 	%r7026, [%rd7+12];
	// inline asm
	prmt.b32 %r11859, %r7025, %r7026, %r193;
	// inline asm
	ld.local.v2.u32 	{%r7155, %r7156}, [%rd7+8];
	// inline asm
	prmt.b32 %r11852, %r7156, %r7155, %r193;
	// inline asm
	ld.local.u32 	%r7033, [%rd7+8];
	ld.local.u32 	%r7034, [%rd7+4];
	// inline asm
	prmt.b32 %r11853, %r7033, %r7034, %r193;
	// inline asm
	ld.local.v2.u32 	{%r7157, %r7158}, [%rd7];
	// inline asm
	prmt.b32 %r11854, %r7158, %r7157, %r193;
	// inline asm
	ld.local.u32 	%r7041, [%rd7];
	ld.local.u32 	%r7042, [%rd6+12];
	// inline asm
	prmt.b32 %r11855, %r7041, %r7042, %r193;
	// inline asm
	ld.local.v2.u32 	{%r7159, %r7160}, [%rd6+8];
	// inline asm
	prmt.b32 %r11848, %r7160, %r7159, %r193;
	// inline asm
	ld.local.u32 	%r7049, [%rd6+8];
	ld.local.u32 	%r7050, [%rd6+4];
	// inline asm
	prmt.b32 %r11849, %r7049, %r7050, %r193;
	// inline asm
	ld.local.v2.u32 	{%r7161, %r7162}, [%rd6];
	// inline asm
	prmt.b32 %r11850, %r7162, %r7161, %r193;
	// inline asm
	ld.local.u32 	%r7057, [%rd6];
	ld.local.u32 	%r7058, [%rd5+12];
	// inline asm
	prmt.b32 %r11851, %r7057, %r7058, %r193;
	// inline asm
	ld.local.v2.u32 	{%r7163, %r7164}, [%rd5+8];
	// inline asm
	prmt.b32 %r11844, %r7164, %r7163, %r193;
	// inline asm
	ld.local.u32 	%r7065, [%rd5+8];
	ld.local.u32 	%r7066, [%rd5+4];
	// inline asm
	prmt.b32 %r11845, %r7065, %r7066, %r193;
	// inline asm
	ld.local.v2.u32 	{%r7165, %r7166}, [%rd5];
	// inline asm
	prmt.b32 %r11846, %r7166, %r7165, %r193;
	// inline asm
	ld.local.u32 	%r7073, [%rd5];
	ld.local.u32 	%r7074, [%rd4+12];
	// inline asm
	prmt.b32 %r11847, %r7073, %r7074, %r193;
	// inline asm
	ld.local.v2.u32 	{%r7167, %r7168}, [%rd4+8];
	// inline asm
	prmt.b32 %r11840, %r7168, %r7167, %r193;
	// inline asm
	ld.local.u32 	%r7081, [%rd4+8];
	ld.local.u32 	%r7082, [%rd4+4];
	// inline asm
	prmt.b32 %r11841, %r7081, %r7082, %r193;
	// inline asm
	ld.local.v2.u32 	{%r7169, %r7170}, [%rd4];
	// inline asm
	prmt.b32 %r11842, %r7170, %r7169, %r193;
	// inline asm
	ld.local.u32 	%r7089, [%rd4];
	ld.local.u32 	%r7090, [%rd3+12];
	// inline asm
	prmt.b32 %r11843, %r7089, %r7090, %r193;
	// inline asm
	ld.local.v2.u32 	{%r7171, %r7172}, [%rd3+8];
	// inline asm
	prmt.b32 %r7092, %r7172, %r7171, %r193;
	// inline asm
	st.local.u32 	[%rd62], %r7092;
	ld.local.u32 	%r7097, [%rd3+8];
	ld.local.u32 	%r7098, [%rd3+4];
	// inline asm
	prmt.b32 %r7096, %r7097, %r7098, %r193;
	// inline asm
	st.local.u32 	[%rd8+8], %r7096;
	ld.local.v2.u32 	{%r7173, %r7174}, [%rd3];
	// inline asm
	prmt.b32 %r7100, %r7174, %r7173, %r193;
	// inline asm
	st.local.u32 	[%rd8+4], %r7100;
	ld.local.u32 	%r7105, [%rd3];
	ld.local.u32 	%r7106, [%rd2+12];
	// inline asm
	prmt.b32 %r7104, %r7105, %r7106, %r193;
	// inline asm
	st.local.u32 	[%rd8], %r7104;
	ld.local.v2.u32 	{%r7175, %r7176}, [%rd2+8];
	// inline asm
	prmt.b32 %r7108, %r7176, %r7175, %r193;
	// inline asm
	st.local.u32 	[%rd7+12], %r7108;
	ld.local.u32 	%r7113, [%rd2+8];
	ld.local.u32 	%r7114, [%rd2+4];
	// inline asm
	prmt.b32 %r7112, %r7113, %r7114, %r193;
	// inline asm
	st.local.u32 	[%rd7+8], %r7112;
	ld.local.v2.u32 	{%r7177, %r7178}, [%rd2];
	// inline asm
	prmt.b32 %r7116, %r7178, %r7177, %r193;
	// inline asm
	st.local.u32 	[%rd7+4], %r7116;
	ld.local.u32 	%r7121, [%rd2];
	ld.local.u32 	%r7122, [%rd1+12];
	// inline asm
	prmt.b32 %r7120, %r7121, %r7122, %r193;
	// inline asm
	st.local.u32 	[%rd7], %r7120;
	ld.local.v2.u32 	{%r7179, %r7180}, [%rd1+8];
	// inline asm
	prmt.b32 %r7124, %r7180, %r7179, %r193;
	// inline asm
	st.local.u32 	[%rd6+12], %r7124;
	ld.local.u32 	%r7129, [%rd1+8];
	ld.local.u32 	%r7130, [%rd1+4];
	// inline asm
	prmt.b32 %r7128, %r7129, %r7130, %r193;
	// inline asm
	st.local.u32 	[%rd6+8], %r7128;
	ld.local.v2.u32 	{%r7181, %r7182}, [%rd1];
	// inline asm
	prmt.b32 %r7132, %r7182, %r7181, %r193;
	// inline asm
	st.local.u32 	[%rd6+4], %r7132;
	ld.local.u32 	%r7137, [%rd1];
	// inline asm
	prmt.b32 %r7136, %r7137, %r11838, %r193;
	// inline asm
	st.local.u32 	[%rd6], %r7136;
	st.local.v4.u32 	[%rd5], {%r11838, %r11838, %r11838, %r11838};
	st.local.v4.u32 	[%rd4], {%r11838, %r11838, %r11838, %r11838};
	st.local.v4.u32 	[%rd3], {%r11838, %r11838, %r11838, %r11838};
	st.local.v4.u32 	[%rd2], {%r11838, %r11838, %r11838, %r11838};
	st.local.v2.u32 	[%rd1+8], {%r11838, %r11838};
	mov.u64 	%rd5759, 0;
	st.local.u64 	[%rd1], %rd5759;
	mov.u32 	%r11839, %r11838;
	mov.u32 	%r11860, %r11838;
	mov.u32 	%r11861, %r11838;
	mov.u32 	%r11862, %r11838;
	bra.uni 	BB5_769;

BB5_713:
	setp.gt.s32	%p437, %r5142, 13;
	@%p437 bra 	BB5_717;

	setp.eq.s32	%p440, %r5142, 12;
	@%p440 bra 	BB5_760;
	bra.uni 	BB5_715;

BB5_760:
	mov.u32 	%r11838, 0;
	// inline asm
	prmt.b32 %r11855, %r11838, %r38, %r193;
	// inline asm
	ld.local.u32 	%r8441, [%rd62];
	ld.local.u32 	%r8442, [%rd8+8];
	// inline asm
	prmt.b32 %r11848, %r8441, %r8442, %r193;
	// inline asm
	ld.local.u32 	%r8445, [%rd8+8];
	ld.local.u32 	%r8446, [%rd8+4];
	// inline asm
	prmt.b32 %r11849, %r8445, %r8446, %r193;
	// inline asm
	ld.local.v2.u32 	{%r8589, %r8590}, [%rd8];
	// inline asm
	prmt.b32 %r11850, %r8590, %r8589, %r193;
	// inline asm
	ld.local.u32 	%r8453, [%rd8];
	ld.local.u32 	%r8454, [%rd7+12];
	// inline asm
	prmt.b32 %r11851, %r8453, %r8454, %r193;
	// inline asm
	ld.local.v2.u32 	{%r8591, %r8592}, [%rd7+8];
	// inline asm
	prmt.b32 %r11844, %r8592, %r8591, %r193;
	// inline asm
	ld.local.u32 	%r8461, [%rd7+8];
	ld.local.u32 	%r8462, [%rd7+4];
	// inline asm
	prmt.b32 %r11845, %r8461, %r8462, %r193;
	// inline asm
	ld.local.v2.u32 	{%r8593, %r8594}, [%rd7];
	// inline asm
	prmt.b32 %r11846, %r8594, %r8593, %r193;
	// inline asm
	ld.local.u32 	%r8469, [%rd7];
	ld.local.u32 	%r8470, [%rd6+12];
	// inline asm
	prmt.b32 %r11847, %r8469, %r8470, %r193;
	// inline asm
	ld.local.v2.u32 	{%r8595, %r8596}, [%rd6+8];
	// inline asm
	prmt.b32 %r11840, %r8596, %r8595, %r193;
	// inline asm
	ld.local.u32 	%r8477, [%rd6+8];
	ld.local.u32 	%r8478, [%rd6+4];
	// inline asm
	prmt.b32 %r11841, %r8477, %r8478, %r193;
	// inline asm
	ld.local.v2.u32 	{%r8597, %r8598}, [%rd6];
	// inline asm
	prmt.b32 %r11842, %r8598, %r8597, %r193;
	// inline asm
	ld.local.u32 	%r8485, [%rd6];
	ld.local.u32 	%r8486, [%rd5+12];
	// inline asm
	prmt.b32 %r11843, %r8485, %r8486, %r193;
	// inline asm
	ld.local.v2.u32 	{%r8599, %r8600}, [%rd5+8];
	// inline asm
	prmt.b32 %r8488, %r8600, %r8599, %r193;
	// inline asm
	st.local.u32 	[%rd62], %r8488;
	ld.local.u32 	%r8493, [%rd5+8];
	ld.local.u32 	%r8494, [%rd5+4];
	// inline asm
	prmt.b32 %r8492, %r8493, %r8494, %r193;
	// inline asm
	st.local.u32 	[%rd8+8], %r8492;
	ld.local.v2.u32 	{%r8601, %r8602}, [%rd5];
	// inline asm
	prmt.b32 %r8496, %r8602, %r8601, %r193;
	// inline asm
	st.local.u32 	[%rd8+4], %r8496;
	ld.local.u32 	%r8501, [%rd5];
	ld.local.u32 	%r8502, [%rd4+12];
	// inline asm
	prmt.b32 %r8500, %r8501, %r8502, %r193;
	// inline asm
	st.local.u32 	[%rd8], %r8500;
	ld.local.v2.u32 	{%r8603, %r8604}, [%rd4+8];
	// inline asm
	prmt.b32 %r8504, %r8604, %r8603, %r193;
	// inline asm
	st.local.u32 	[%rd7+12], %r8504;
	ld.local.u32 	%r8509, [%rd4+8];
	ld.local.u32 	%r8510, [%rd4+4];
	// inline asm
	prmt.b32 %r8508, %r8509, %r8510, %r193;
	// inline asm
	st.local.u32 	[%rd7+8], %r8508;
	ld.local.v2.u32 	{%r8605, %r8606}, [%rd4];
	// inline asm
	prmt.b32 %r8512, %r8606, %r8605, %r193;
	// inline asm
	st.local.u32 	[%rd7+4], %r8512;
	ld.local.u32 	%r8517, [%rd4];
	ld.local.u32 	%r8518, [%rd3+12];
	// inline asm
	prmt.b32 %r8516, %r8517, %r8518, %r193;
	// inline asm
	st.local.u32 	[%rd7], %r8516;
	ld.local.v2.u32 	{%r8607, %r8608}, [%rd3+8];
	// inline asm
	prmt.b32 %r8520, %r8608, %r8607, %r193;
	// inline asm
	st.local.u32 	[%rd6+12], %r8520;
	ld.local.u32 	%r8525, [%rd3+8];
	ld.local.u32 	%r8526, [%rd3+4];
	// inline asm
	prmt.b32 %r8524, %r8525, %r8526, %r193;
	// inline asm
	st.local.u32 	[%rd6+8], %r8524;
	ld.local.v2.u32 	{%r8609, %r8610}, [%rd3];
	// inline asm
	prmt.b32 %r8528, %r8610, %r8609, %r193;
	// inline asm
	st.local.u32 	[%rd6+4], %r8528;
	ld.local.u32 	%r8533, [%rd3];
	ld.local.u32 	%r8534, [%rd2+12];
	// inline asm
	prmt.b32 %r8532, %r8533, %r8534, %r193;
	// inline asm
	st.local.u32 	[%rd6], %r8532;
	ld.local.v2.u32 	{%r8611, %r8612}, [%rd2+8];
	// inline asm
	prmt.b32 %r8536, %r8612, %r8611, %r193;
	// inline asm
	st.local.u32 	[%rd5+12], %r8536;
	ld.local.u32 	%r8541, [%rd2+8];
	ld.local.u32 	%r8542, [%rd2+4];
	// inline asm
	prmt.b32 %r8540, %r8541, %r8542, %r193;
	// inline asm
	st.local.u32 	[%rd5+8], %r8540;
	ld.local.v2.u32 	{%r8613, %r8614}, [%rd2];
	// inline asm
	prmt.b32 %r8544, %r8614, %r8613, %r193;
	// inline asm
	st.local.u32 	[%rd5+4], %r8544;
	ld.local.u32 	%r8549, [%rd2];
	ld.local.u32 	%r8550, [%rd1+12];
	// inline asm
	prmt.b32 %r8548, %r8549, %r8550, %r193;
	// inline asm
	st.local.u32 	[%rd5], %r8548;
	ld.local.v2.u32 	{%r8615, %r8616}, [%rd1+8];
	// inline asm
	prmt.b32 %r8552, %r8616, %r8615, %r193;
	// inline asm
	st.local.u32 	[%rd4+12], %r8552;
	ld.local.u32 	%r8557, [%rd1+8];
	ld.local.u32 	%r8558, [%rd1+4];
	// inline asm
	prmt.b32 %r8556, %r8557, %r8558, %r193;
	// inline asm
	st.local.u32 	[%rd4+8], %r8556;
	ld.local.v2.u32 	{%r8617, %r8618}, [%rd1];
	// inline asm
	prmt.b32 %r8560, %r8618, %r8617, %r193;
	// inline asm
	st.local.u32 	[%rd4+4], %r8560;
	ld.local.u32 	%r8565, [%rd1];
	// inline asm
	prmt.b32 %r8564, %r8565, %r11838, %r193;
	// inline asm
	st.local.u32 	[%rd4], %r8564;
	st.local.v4.u32 	[%rd3], {%r11838, %r11838, %r11838, %r11838};
	st.local.v4.u32 	[%rd2], {%r11838, %r11838, %r11838, %r11838};
	st.local.v2.u32 	[%rd1+8], {%r11838, %r11838};
	mov.u64 	%rd5767, 0;
	st.local.u64 	[%rd1], %rd5767;
	mov.u32 	%r11839, %r11838;
	mov.u32 	%r11852, %r11838;
	mov.u32 	%r11853, %r11838;
	mov.u32 	%r11854, %r11838;
	bra.uni 	BB5_767;

BB5_744:
	setp.gt.s32	%p414, %r5142, 29;
	@%p414 bra 	BB5_748;

	setp.eq.s32	%p417, %r5142, 28;
	@%p417 bra 	BB5_752;
	bra.uni 	BB5_746;

BB5_752:
	mov.u32 	%r11838, 0;
	// inline asm
	prmt.b32 %r11871, %r11838, %r38, %r193;
	// inline asm
	ld.local.u32 	%r5649, [%rd62];
	ld.local.u32 	%r5650, [%rd8+8];
	// inline asm
	prmt.b32 %r11864, %r5649, %r5650, %r193;
	// inline asm
	ld.local.u32 	%r5653, [%rd8+8];
	ld.local.u32 	%r5654, [%rd8+4];
	// inline asm
	prmt.b32 %r11865, %r5653, %r5654, %r193;
	// inline asm
	ld.local.v2.u32 	{%r5781, %r5782}, [%rd8];
	// inline asm
	prmt.b32 %r11866, %r5782, %r5781, %r193;
	// inline asm
	ld.local.u32 	%r5661, [%rd8];
	ld.local.u32 	%r5662, [%rd7+12];
	// inline asm
	prmt.b32 %r11867, %r5661, %r5662, %r193;
	// inline asm
	ld.local.v2.u32 	{%r5783, %r5784}, [%rd7+8];
	// inline asm
	prmt.b32 %r11860, %r5784, %r5783, %r193;
	// inline asm
	ld.local.u32 	%r5669, [%rd7+8];
	ld.local.u32 	%r5670, [%rd7+4];
	// inline asm
	prmt.b32 %r11861, %r5669, %r5670, %r193;
	// inline asm
	ld.local.v2.u32 	{%r5785, %r5786}, [%rd7];
	// inline asm
	prmt.b32 %r11862, %r5786, %r5785, %r193;
	// inline asm
	ld.local.u32 	%r5677, [%rd7];
	ld.local.u32 	%r5678, [%rd6+12];
	// inline asm
	prmt.b32 %r11863, %r5677, %r5678, %r193;
	// inline asm
	ld.local.v2.u32 	{%r5787, %r5788}, [%rd6+8];
	// inline asm
	prmt.b32 %r11856, %r5788, %r5787, %r193;
	// inline asm
	ld.local.u32 	%r5685, [%rd6+8];
	ld.local.u32 	%r5686, [%rd6+4];
	// inline asm
	prmt.b32 %r11857, %r5685, %r5686, %r193;
	// inline asm
	ld.local.v2.u32 	{%r5789, %r5790}, [%rd6];
	// inline asm
	prmt.b32 %r11858, %r5790, %r5789, %r193;
	// inline asm
	ld.local.u32 	%r5693, [%rd6];
	ld.local.u32 	%r5694, [%rd5+12];
	// inline asm
	prmt.b32 %r11859, %r5693, %r5694, %r193;
	// inline asm
	ld.local.v2.u32 	{%r5791, %r5792}, [%rd5+8];
	// inline asm
	prmt.b32 %r11852, %r5792, %r5791, %r193;
	// inline asm
	ld.local.u32 	%r5701, [%rd5+8];
	ld.local.u32 	%r5702, [%rd5+4];
	// inline asm
	prmt.b32 %r11853, %r5701, %r5702, %r193;
	// inline asm
	ld.local.v2.u32 	{%r5793, %r5794}, [%rd5];
	// inline asm
	prmt.b32 %r11854, %r5794, %r5793, %r193;
	// inline asm
	ld.local.u32 	%r5709, [%rd5];
	ld.local.u32 	%r5710, [%rd4+12];
	// inline asm
	prmt.b32 %r11855, %r5709, %r5710, %r193;
	// inline asm
	ld.local.v2.u32 	{%r5795, %r5796}, [%rd4+8];
	// inline asm
	prmt.b32 %r11848, %r5796, %r5795, %r193;
	// inline asm
	ld.local.u32 	%r5717, [%rd4+8];
	ld.local.u32 	%r5718, [%rd4+4];
	// inline asm
	prmt.b32 %r11849, %r5717, %r5718, %r193;
	// inline asm
	ld.local.v2.u32 	{%r5797, %r5798}, [%rd4];
	// inline asm
	prmt.b32 %r11850, %r5798, %r5797, %r193;
	// inline asm
	ld.local.u32 	%r5725, [%rd4];
	ld.local.u32 	%r5726, [%rd3+12];
	// inline asm
	prmt.b32 %r11851, %r5725, %r5726, %r193;
	// inline asm
	ld.local.v2.u32 	{%r5799, %r5800}, [%rd3+8];
	// inline asm
	prmt.b32 %r11844, %r5800, %r5799, %r193;
	// inline asm
	ld.local.u32 	%r5733, [%rd3+8];
	ld.local.u32 	%r5734, [%rd3+4];
	// inline asm
	prmt.b32 %r11845, %r5733, %r5734, %r193;
	// inline asm
	ld.local.v2.u32 	{%r5801, %r5802}, [%rd3];
	// inline asm
	prmt.b32 %r11846, %r5802, %r5801, %r193;
	// inline asm
	ld.local.u32 	%r5741, [%rd3];
	ld.local.u32 	%r5742, [%rd2+12];
	// inline asm
	prmt.b32 %r11847, %r5741, %r5742, %r193;
	// inline asm
	ld.local.v2.u32 	{%r5803, %r5804}, [%rd2+8];
	// inline asm
	prmt.b32 %r11840, %r5804, %r5803, %r193;
	// inline asm
	ld.local.u32 	%r5749, [%rd2+8];
	ld.local.u32 	%r5750, [%rd2+4];
	// inline asm
	prmt.b32 %r11841, %r5749, %r5750, %r193;
	// inline asm
	ld.local.v2.u32 	{%r5805, %r5806}, [%rd2];
	// inline asm
	prmt.b32 %r11842, %r5806, %r5805, %r193;
	// inline asm
	ld.local.u32 	%r5757, [%rd2];
	ld.local.u32 	%r5758, [%rd1+12];
	// inline asm
	prmt.b32 %r11843, %r5757, %r5758, %r193;
	// inline asm
	ld.local.v2.u32 	{%r5807, %r5808}, [%rd1+8];
	// inline asm
	prmt.b32 %r5760, %r5808, %r5807, %r193;
	// inline asm
	st.local.u32 	[%rd62], %r5760;
	ld.local.u32 	%r5765, [%rd1+8];
	ld.local.u32 	%r5766, [%rd1+4];
	// inline asm
	prmt.b32 %r5764, %r5765, %r5766, %r193;
	// inline asm
	st.local.u32 	[%rd8+8], %r5764;
	ld.local.v2.u32 	{%r5809, %r5810}, [%rd1];
	// inline asm
	prmt.b32 %r5768, %r5810, %r5809, %r193;
	// inline asm
	st.local.u32 	[%rd8+4], %r5768;
	ld.local.u32 	%r5773, [%rd1];
	// inline asm
	prmt.b32 %r5772, %r5773, %r11838, %r193;
	// inline asm
	st.local.u32 	[%rd8], %r5772;
	st.local.v4.u32 	[%rd7], {%r11838, %r11838, %r11838, %r11838};
	st.local.v4.u32 	[%rd6], {%r11838, %r11838, %r11838, %r11838};
	st.local.v4.u32 	[%rd5], {%r11838, %r11838, %r11838, %r11838};
	st.local.v4.u32 	[%rd4], {%r11838, %r11838, %r11838, %r11838};
	st.local.v4.u32 	[%rd3], {%r11838, %r11838, %r11838, %r11838};
	st.local.v4.u32 	[%rd2], {%r11838, %r11838, %r11838, %r11838};
	st.local.v2.u32 	[%rd1+8], {%r11838, %r11838};
	mov.u64 	%rd5751, 0;
	st.local.u64 	[%rd1], %rd5751;
	mov.u32 	%r11839, %r11838;
	mov.u32 	%r11868, %r11838;
	mov.u32 	%r11869, %r11838;
	mov.u32 	%r11870, %r11838;
	bra.uni 	BB5_773;

BB5_694:
	setp.eq.s32	%p454, %r5142, 2;
	@%p454 bra 	BB5_771;
	bra.uni 	BB5_695;

BB5_771:
	mov.u32 	%r11838, 0;
	// inline asm
	prmt.b32 %r11841, %r11838, %r38, %r193;
	// inline asm
	ld.local.u32 	%r10316, [%rd62];
	ld.local.u32 	%r10317, [%rd8+8];
	// inline asm
	prmt.b32 %r11842, %r10316, %r10317, %r193;
	// inline asm
	ld.local.u32 	%r10320, [%rd8+8];
	ld.local.u32 	%r10321, [%rd8+4];
	// inline asm
	prmt.b32 %r11843, %r10320, %r10321, %r193;
	// inline asm
	ld.local.v2.u32 	{%r10474, %r10475}, [%rd8];
	// inline asm
	prmt.b32 %r10323, %r10475, %r10474, %r193;
	// inline asm
	st.local.u32 	[%rd62], %r10323;
	ld.local.u32 	%r10328, [%rd8];
	ld.local.u32 	%r10329, [%rd7+12];
	// inline asm
	prmt.b32 %r10327, %r10328, %r10329, %r193;
	// inline asm
	st.local.u32 	[%rd8+8], %r10327;
	ld.local.v2.u32 	{%r10476, %r10477}, [%rd7+8];
	// inline asm
	prmt.b32 %r10331, %r10477, %r10476, %r193;
	// inline asm
	st.local.u32 	[%rd8+4], %r10331;
	ld.local.u32 	%r10336, [%rd7+8];
	ld.local.u32 	%r10337, [%rd7+4];
	// inline asm
	prmt.b32 %r10335, %r10336, %r10337, %r193;
	// inline asm
	st.local.u32 	[%rd8], %r10335;
	ld.local.v2.u32 	{%r10478, %r10479}, [%rd7];
	// inline asm
	prmt.b32 %r10339, %r10479, %r10478, %r193;
	// inline asm
	st.local.u32 	[%rd7+12], %r10339;
	ld.local.u32 	%r10344, [%rd7];
	ld.local.u32 	%r10345, [%rd6+12];
	// inline asm
	prmt.b32 %r10343, %r10344, %r10345, %r193;
	// inline asm
	st.local.u32 	[%rd7+8], %r10343;
	ld.local.v2.u32 	{%r10480, %r10481}, [%rd6+8];
	// inline asm
	prmt.b32 %r10347, %r10481, %r10480, %r193;
	// inline asm
	st.local.u32 	[%rd7+4], %r10347;
	ld.local.u32 	%r10352, [%rd6+8];
	ld.local.u32 	%r10353, [%rd6+4];
	// inline asm
	prmt.b32 %r10351, %r10352, %r10353, %r193;
	// inline asm
	st.local.u32 	[%rd7], %r10351;
	ld.local.v2.u32 	{%r10482, %r10483}, [%rd6];
	// inline asm
	prmt.b32 %r10355, %r10483, %r10482, %r193;
	// inline asm
	st.local.u32 	[%rd6+12], %r10355;
	ld.local.u32 	%r10360, [%rd6];
	ld.local.u32 	%r10361, [%rd5+12];
	// inline asm
	prmt.b32 %r10359, %r10360, %r10361, %r193;
	// inline asm
	st.local.u32 	[%rd6+8], %r10359;
	ld.local.v2.u32 	{%r10484, %r10485}, [%rd5+8];
	// inline asm
	prmt.b32 %r10363, %r10485, %r10484, %r193;
	// inline asm
	st.local.u32 	[%rd6+4], %r10363;
	ld.local.u32 	%r10368, [%rd5+8];
	ld.local.u32 	%r10369, [%rd5+4];
	// inline asm
	prmt.b32 %r10367, %r10368, %r10369, %r193;
	// inline asm
	st.local.u32 	[%rd6], %r10367;
	ld.local.v2.u32 	{%r10486, %r10487}, [%rd5];
	// inline asm
	prmt.b32 %r10371, %r10487, %r10486, %r193;
	// inline asm
	st.local.u32 	[%rd5+12], %r10371;
	ld.local.u32 	%r10376, [%rd5];
	ld.local.u32 	%r10377, [%rd4+12];
	// inline asm
	prmt.b32 %r10375, %r10376, %r10377, %r193;
	// inline asm
	st.local.u32 	[%rd5+8], %r10375;
	ld.local.v2.u32 	{%r10488, %r10489}, [%rd4+8];
	// inline asm
	prmt.b32 %r10379, %r10489, %r10488, %r193;
	// inline asm
	st.local.u32 	[%rd5+4], %r10379;
	ld.local.u32 	%r10384, [%rd4+8];
	ld.local.u32 	%r10385, [%rd4+4];
	// inline asm
	prmt.b32 %r10383, %r10384, %r10385, %r193;
	// inline asm
	st.local.u32 	[%rd5], %r10383;
	ld.local.v2.u32 	{%r10490, %r10491}, [%rd4];
	// inline asm
	prmt.b32 %r10387, %r10491, %r10490, %r193;
	// inline asm
	st.local.u32 	[%rd4+12], %r10387;
	ld.local.u32 	%r10392, [%rd4];
	ld.local.u32 	%r10393, [%rd3+12];
	// inline asm
	prmt.b32 %r10391, %r10392, %r10393, %r193;
	// inline asm
	st.local.u32 	[%rd4+8], %r10391;
	ld.local.v2.u32 	{%r10492, %r10493}, [%rd3+8];
	// inline asm
	prmt.b32 %r10395, %r10493, %r10492, %r193;
	// inline asm
	st.local.u32 	[%rd4+4], %r10395;
	ld.local.u32 	%r10400, [%rd3+8];
	ld.local.u32 	%r10401, [%rd3+4];
	// inline asm
	prmt.b32 %r10399, %r10400, %r10401, %r193;
	// inline asm
	st.local.u32 	[%rd4], %r10399;
	ld.local.v2.u32 	{%r10494, %r10495}, [%rd3];
	// inline asm
	prmt.b32 %r10403, %r10495, %r10494, %r193;
	// inline asm
	st.local.u32 	[%rd3+12], %r10403;
	ld.local.u32 	%r10408, [%rd3];
	ld.local.u32 	%r10409, [%rd2+12];
	// inline asm
	prmt.b32 %r10407, %r10408, %r10409, %r193;
	// inline asm
	st.local.u32 	[%rd3+8], %r10407;
	ld.local.v2.u32 	{%r10496, %r10497}, [%rd2+8];
	// inline asm
	prmt.b32 %r10411, %r10497, %r10496, %r193;
	// inline asm
	st.local.u32 	[%rd3+4], %r10411;
	ld.local.u32 	%r10416, [%rd2+8];
	ld.local.u32 	%r10417, [%rd2+4];
	// inline asm
	prmt.b32 %r10415, %r10416, %r10417, %r193;
	// inline asm
	st.local.u32 	[%rd3], %r10415;
	ld.local.v2.u32 	{%r10498, %r10499}, [%rd2];
	// inline asm
	prmt.b32 %r10419, %r10499, %r10498, %r193;
	// inline asm
	st.local.u32 	[%rd2+12], %r10419;
	ld.local.u32 	%r10424, [%rd2];
	ld.local.u32 	%r10425, [%rd1+12];
	// inline asm
	prmt.b32 %r10423, %r10424, %r10425, %r193;
	// inline asm
	st.local.u32 	[%rd2+8], %r10423;
	ld.local.v2.u32 	{%r10500, %r10501}, [%rd1+8];
	// inline asm
	prmt.b32 %r10427, %r10501, %r10500, %r193;
	// inline asm
	st.local.u32 	[%rd2+4], %r10427;
	ld.local.u32 	%r10432, [%rd1+8];
	ld.local.u32 	%r10433, [%rd1+4];
	// inline asm
	prmt.b32 %r10431, %r10432, %r10433, %r193;
	// inline asm
	st.local.u32 	[%rd2], %r10431;
	ld.local.v2.u32 	{%r10502, %r10503}, [%rd1];
	// inline asm
	prmt.b32 %r10435, %r10503, %r10502, %r193;
	// inline asm
	st.local.u32 	[%rd1+12], %r10435;
	ld.local.u32 	%r10440, [%rd1];
	// inline asm
	prmt.b32 %r10439, %r10440, %r11838, %r193;
	// inline asm
	st.local.u32 	[%rd1+8], %r10439;
	mov.u64 	%rd5777, 0;
	st.local.u64 	[%rd1], %rd5777;
	mov.u32 	%r11839, %r11838;
	mov.u32 	%r11840, %r11838;
	bra.uni 	BB5_697;

BB5_726:
	setp.eq.s32	%p431, %r5142, 18;
	@%p431 bra 	BB5_757;
	bra.uni 	BB5_727;

BB5_757:
	mov.u32 	%r11838, 0;
	// inline asm
	prmt.b32 %r11857, %r11838, %r38, %r193;
	// inline asm
	ld.local.u32 	%r7364, [%rd62];
	ld.local.u32 	%r7365, [%rd8+8];
	// inline asm
	prmt.b32 %r11858, %r7364, %r7365, %r193;
	// inline asm
	ld.local.u32 	%r7368, [%rd8+8];
	ld.local.u32 	%r7369, [%rd8+4];
	// inline asm
	prmt.b32 %r11859, %r7368, %r7369, %r193;
	// inline asm
	ld.local.v2.u32 	{%r7506, %r7507}, [%rd8];
	// inline asm
	prmt.b32 %r11852, %r7507, %r7506, %r193;
	// inline asm
	ld.local.u32 	%r7376, [%rd8];
	ld.local.u32 	%r7377, [%rd7+12];
	// inline asm
	prmt.b32 %r11853, %r7376, %r7377, %r193;
	// inline asm
	ld.local.v2.u32 	{%r7508, %r7509}, [%rd7+8];
	// inline asm
	prmt.b32 %r11854, %r7509, %r7508, %r193;
	// inline asm
	ld.local.u32 	%r7384, [%rd7+8];
	ld.local.u32 	%r7385, [%rd7+4];
	// inline asm
	prmt.b32 %r11855, %r7384, %r7385, %r193;
	// inline asm
	ld.local.v2.u32 	{%r7510, %r7511}, [%rd7];
	// inline asm
	prmt.b32 %r11848, %r7511, %r7510, %r193;
	// inline asm
	ld.local.u32 	%r7392, [%rd7];
	ld.local.u32 	%r7393, [%rd6+12];
	// inline asm
	prmt.b32 %r11849, %r7392, %r7393, %r193;
	// inline asm
	ld.local.v2.u32 	{%r7512, %r7513}, [%rd6+8];
	// inline asm
	prmt.b32 %r11850, %r7513, %r7512, %r193;
	// inline asm
	ld.local.u32 	%r7400, [%rd6+8];
	ld.local.u32 	%r7401, [%rd6+4];
	// inline asm
	prmt.b32 %r11851, %r7400, %r7401, %r193;
	// inline asm
	ld.local.v2.u32 	{%r7514, %r7515}, [%rd6];
	// inline asm
	prmt.b32 %r11844, %r7515, %r7514, %r193;
	// inline asm
	ld.local.u32 	%r7408, [%rd6];
	ld.local.u32 	%r7409, [%rd5+12];
	// inline asm
	prmt.b32 %r11845, %r7408, %r7409, %r193;
	// inline asm
	ld.local.v2.u32 	{%r7516, %r7517}, [%rd5+8];
	// inline asm
	prmt.b32 %r11846, %r7517, %r7516, %r193;
	// inline asm
	ld.local.u32 	%r7416, [%rd5+8];
	ld.local.u32 	%r7417, [%rd5+4];
	// inline asm
	prmt.b32 %r11847, %r7416, %r7417, %r193;
	// inline asm
	ld.local.v2.u32 	{%r7518, %r7519}, [%rd5];
	// inline asm
	prmt.b32 %r11840, %r7519, %r7518, %r193;
	// inline asm
	ld.local.u32 	%r7424, [%rd5];
	ld.local.u32 	%r7425, [%rd4+12];
	// inline asm
	prmt.b32 %r11841, %r7424, %r7425, %r193;
	// inline asm
	ld.local.v2.u32 	{%r7520, %r7521}, [%rd4+8];
	// inline asm
	prmt.b32 %r11842, %r7521, %r7520, %r193;
	// inline asm
	ld.local.u32 	%r7432, [%rd4+8];
	ld.local.u32 	%r7433, [%rd4+4];
	// inline asm
	prmt.b32 %r11843, %r7432, %r7433, %r193;
	// inline asm
	ld.local.v2.u32 	{%r7522, %r7523}, [%rd4];
	// inline asm
	prmt.b32 %r7435, %r7523, %r7522, %r193;
	// inline asm
	st.local.u32 	[%rd62], %r7435;
	ld.local.u32 	%r7440, [%rd4];
	ld.local.u32 	%r7441, [%rd3+12];
	// inline asm
	prmt.b32 %r7439, %r7440, %r7441, %r193;
	// inline asm
	st.local.u32 	[%rd8+8], %r7439;
	ld.local.v2.u32 	{%r7524, %r7525}, [%rd3+8];
	// inline asm
	prmt.b32 %r7443, %r7525, %r7524, %r193;
	// inline asm
	st.local.u32 	[%rd8+4], %r7443;
	ld.local.u32 	%r7448, [%rd3+8];
	ld.local.u32 	%r7449, [%rd3+4];
	// inline asm
	prmt.b32 %r7447, %r7448, %r7449, %r193;
	// inline asm
	st.local.u32 	[%rd8], %r7447;
	ld.local.v2.u32 	{%r7526, %r7527}, [%rd3];
	// inline asm
	prmt.b32 %r7451, %r7527, %r7526, %r193;
	// inline asm
	st.local.u32 	[%rd7+12], %r7451;
	ld.local.u32 	%r7456, [%rd3];
	ld.local.u32 	%r7457, [%rd2+12];
	// inline asm
	prmt.b32 %r7455, %r7456, %r7457, %r193;
	// inline asm
	st.local.u32 	[%rd7+8], %r7455;
	ld.local.v2.u32 	{%r7528, %r7529}, [%rd2+8];
	// inline asm
	prmt.b32 %r7459, %r7529, %r7528, %r193;
	// inline asm
	st.local.u32 	[%rd7+4], %r7459;
	ld.local.u32 	%r7464, [%rd2+8];
	ld.local.u32 	%r7465, [%rd2+4];
	// inline asm
	prmt.b32 %r7463, %r7464, %r7465, %r193;
	// inline asm
	st.local.u32 	[%rd7], %r7463;
	ld.local.v2.u32 	{%r7530, %r7531}, [%rd2];
	// inline asm
	prmt.b32 %r7467, %r7531, %r7530, %r193;
	// inline asm
	st.local.u32 	[%rd6+12], %r7467;
	ld.local.u32 	%r7472, [%rd2];
	ld.local.u32 	%r7473, [%rd1+12];
	// inline asm
	prmt.b32 %r7471, %r7472, %r7473, %r193;
	// inline asm
	st.local.u32 	[%rd6+8], %r7471;
	ld.local.v2.u32 	{%r7532, %r7533}, [%rd1+8];
	// inline asm
	prmt.b32 %r7475, %r7533, %r7532, %r193;
	// inline asm
	st.local.u32 	[%rd6+4], %r7475;
	ld.local.u32 	%r7480, [%rd1+8];
	ld.local.u32 	%r7481, [%rd1+4];
	// inline asm
	prmt.b32 %r7479, %r7480, %r7481, %r193;
	// inline asm
	st.local.u32 	[%rd6], %r7479;
	ld.local.v2.u32 	{%r7534, %r7535}, [%rd1];
	// inline asm
	prmt.b32 %r7483, %r7535, %r7534, %r193;
	// inline asm
	st.local.u32 	[%rd5+12], %r7483;
	ld.local.u32 	%r7488, [%rd1];
	// inline asm
	prmt.b32 %r7487, %r7488, %r11838, %r193;
	// inline asm
	st.local.u32 	[%rd5+8], %r7487;
	st.local.v2.u32 	[%rd5], {%r11838, %r11838};
	st.local.u32 	[%rd4+12], %r11838;
	st.local.u32 	[%rd4+8], %r11838;
	st.local.u32 	[%rd4+4], %r11838;
	st.local.u32 	[%rd4], %r11838;
	st.local.u32 	[%rd3+12], %r11838;
	st.local.u32 	[%rd3+8], %r11838;
	st.local.u32 	[%rd3+4], %r11838;
	st.local.u32 	[%rd3], %r11838;
	st.local.u32 	[%rd2+12], %r11838;
	st.local.u32 	[%rd2+8], %r11838;
	st.local.u32 	[%rd2+4], %r11838;
	st.local.u32 	[%rd2], %r11838;
	st.local.u32 	[%rd1+12], %r11838;
	st.local.u32 	[%rd1+8], %r11838;
	mov.u64 	%rd5761, 0;
	st.local.u32 	[%rd1+4], %rd5761;
	st.local.u32 	[%rd1], %rd5761;
	mov.u32 	%r11839, %r11838;
	mov.u32 	%r11856, %r11838;
	bra.uni 	BB5_768;

BB5_710:
	setp.eq.s32	%p443, %r5142, 10;
	@%p443 bra 	BB5_761;
	bra.uni 	BB5_711;

BB5_761:
	mov.u32 	%r11838, 0;
	// inline asm
	prmt.b32 %r11849, %r11838, %r38, %r193;
	// inline asm
	ld.local.u32 	%r8808, [%rd62];
	ld.local.u32 	%r8809, [%rd8+8];
	// inline asm
	prmt.b32 %r11850, %r8808, %r8809, %r193;
	// inline asm
	ld.local.u32 	%r8812, [%rd8+8];
	ld.local.u32 	%r8813, [%rd8+4];
	// inline asm
	prmt.b32 %r11851, %r8812, %r8813, %r193;
	// inline asm
	ld.local.v2.u32 	{%r8958, %r8959}, [%rd8];
	// inline asm
	prmt.b32 %r11844, %r8959, %r8958, %r193;
	// inline asm
	ld.local.u32 	%r8820, [%rd8];
	ld.local.u32 	%r8821, [%rd7+12];
	// inline asm
	prmt.b32 %r11845, %r8820, %r8821, %r193;
	// inline asm
	ld.local.v2.u32 	{%r8960, %r8961}, [%rd7+8];
	// inline asm
	prmt.b32 %r11846, %r8961, %r8960, %r193;
	// inline asm
	ld.local.u32 	%r8828, [%rd7+8];
	ld.local.u32 	%r8829, [%rd7+4];
	// inline asm
	prmt.b32 %r11847, %r8828, %r8829, %r193;
	// inline asm
	ld.local.v2.u32 	{%r8962, %r8963}, [%rd7];
	// inline asm
	prmt.b32 %r11840, %r8963, %r8962, %r193;
	// inline asm
	ld.local.u32 	%r8836, [%rd7];
	ld.local.u32 	%r8837, [%rd6+12];
	// inline asm
	prmt.b32 %r11841, %r8836, %r8837, %r193;
	// inline asm
	ld.local.v2.u32 	{%r8964, %r8965}, [%rd6+8];
	// inline asm
	prmt.b32 %r11842, %r8965, %r8964, %r193;
	// inline asm
	ld.local.u32 	%r8844, [%rd6+8];
	ld.local.u32 	%r8845, [%rd6+4];
	// inline asm
	prmt.b32 %r11843, %r8844, %r8845, %r193;
	// inline asm
	ld.local.v2.u32 	{%r8966, %r8967}, [%rd6];
	// inline asm
	prmt.b32 %r8847, %r8967, %r8966, %r193;
	// inline asm
	st.local.u32 	[%rd62], %r8847;
	ld.local.u32 	%r8852, [%rd6];
	ld.local.u32 	%r8853, [%rd5+12];
	// inline asm
	prmt.b32 %r8851, %r8852, %r8853, %r193;
	// inline asm
	st.local.u32 	[%rd8+8], %r8851;
	ld.local.v2.u32 	{%r8968, %r8969}, [%rd5+8];
	// inline asm
	prmt.b32 %r8855, %r8969, %r8968, %r193;
	// inline asm
	st.local.u32 	[%rd8+4], %r8855;
	ld.local.u32 	%r8860, [%rd5+8];
	ld.local.u32 	%r8861, [%rd5+4];
	// inline asm
	prmt.b32 %r8859, %r8860, %r8861, %r193;
	// inline asm
	st.local.u32 	[%rd8], %r8859;
	ld.local.v2.u32 	{%r8970, %r8971}, [%rd5];
	// inline asm
	prmt.b32 %r8863, %r8971, %r8970, %r193;
	// inline asm
	st.local.u32 	[%rd7+12], %r8863;
	ld.local.u32 	%r8868, [%rd5];
	ld.local.u32 	%r8869, [%rd4+12];
	// inline asm
	prmt.b32 %r8867, %r8868, %r8869, %r193;
	// inline asm
	st.local.u32 	[%rd7+8], %r8867;
	ld.local.v2.u32 	{%r8972, %r8973}, [%rd4+8];
	// inline asm
	prmt.b32 %r8871, %r8973, %r8972, %r193;
	// inline asm
	st.local.u32 	[%rd7+4], %r8871;
	ld.local.u32 	%r8876, [%rd4+8];
	ld.local.u32 	%r8877, [%rd4+4];
	// inline asm
	prmt.b32 %r8875, %r8876, %r8877, %r193;
	// inline asm
	st.local.u32 	[%rd7], %r8875;
	ld.local.v2.u32 	{%r8974, %r8975}, [%rd4];
	// inline asm
	prmt.b32 %r8879, %r8975, %r8974, %r193;
	// inline asm
	st.local.u32 	[%rd6+12], %r8879;
	ld.local.u32 	%r8884, [%rd4];
	ld.local.u32 	%r8885, [%rd3+12];
	// inline asm
	prmt.b32 %r8883, %r8884, %r8885, %r193;
	// inline asm
	st.local.u32 	[%rd6+8], %r8883;
	ld.local.v2.u32 	{%r8976, %r8977}, [%rd3+8];
	// inline asm
	prmt.b32 %r8887, %r8977, %r8976, %r193;
	// inline asm
	st.local.u32 	[%rd6+4], %r8887;
	ld.local.u32 	%r8892, [%rd3+8];
	ld.local.u32 	%r8893, [%rd3+4];
	// inline asm
	prmt.b32 %r8891, %r8892, %r8893, %r193;
	// inline asm
	st.local.u32 	[%rd6], %r8891;
	ld.local.v2.u32 	{%r8978, %r8979}, [%rd3];
	// inline asm
	prmt.b32 %r8895, %r8979, %r8978, %r193;
	// inline asm
	st.local.u32 	[%rd5+12], %r8895;
	ld.local.u32 	%r8900, [%rd3];
	ld.local.u32 	%r8901, [%rd2+12];
	// inline asm
	prmt.b32 %r8899, %r8900, %r8901, %r193;
	// inline asm
	st.local.u32 	[%rd5+8], %r8899;
	ld.local.v2.u32 	{%r8980, %r8981}, [%rd2+8];
	// inline asm
	prmt.b32 %r8903, %r8981, %r8980, %r193;
	// inline asm
	st.local.u32 	[%rd5+4], %r8903;
	ld.local.u32 	%r8908, [%rd2+8];
	ld.local.u32 	%r8909, [%rd2+4];
	// inline asm
	prmt.b32 %r8907, %r8908, %r8909, %r193;
	// inline asm
	st.local.u32 	[%rd5], %r8907;
	ld.local.v2.u32 	{%r8982, %r8983}, [%rd2];
	// inline asm
	prmt.b32 %r8911, %r8983, %r8982, %r193;
	// inline asm
	st.local.u32 	[%rd4+12], %r8911;
	ld.local.u32 	%r8916, [%rd2];
	ld.local.u32 	%r8917, [%rd1+12];
	// inline asm
	prmt.b32 %r8915, %r8916, %r8917, %r193;
	// inline asm
	st.local.u32 	[%rd4+8], %r8915;
	ld.local.v2.u32 	{%r8984, %r8985}, [%rd1+8];
	// inline asm
	prmt.b32 %r8919, %r8985, %r8984, %r193;
	// inline asm
	st.local.u32 	[%rd4+4], %r8919;
	ld.local.u32 	%r8924, [%rd1+8];
	ld.local.u32 	%r8925, [%rd1+4];
	// inline asm
	prmt.b32 %r8923, %r8924, %r8925, %r193;
	// inline asm
	st.local.u32 	[%rd4], %r8923;
	ld.local.v2.u32 	{%r8986, %r8987}, [%rd1];
	// inline asm
	prmt.b32 %r8927, %r8987, %r8986, %r193;
	// inline asm
	st.local.u32 	[%rd3+12], %r8927;
	ld.local.u32 	%r8932, [%rd1];
	// inline asm
	prmt.b32 %r8931, %r8932, %r11838, %r193;
	// inline asm
	st.local.u32 	[%rd3+8], %r8931;
	st.local.v2.u32 	[%rd3], {%r11838, %r11838};
	st.local.u32 	[%rd2+12], %r11838;
	st.local.u32 	[%rd2+8], %r11838;
	st.local.u32 	[%rd2+4], %r11838;
	st.local.u32 	[%rd2], %r11838;
	st.local.u32 	[%rd1+12], %r11838;
	st.local.u32 	[%rd1+8], %r11838;
	mov.u64 	%rd5769, 0;
	st.local.u32 	[%rd1+4], %rd5769;
	st.local.u32 	[%rd1], %rd5769;
	mov.u32 	%r11839, %r11838;
	mov.u32 	%r11848, %r11838;
	bra.uni 	BB5_766;

BB5_741:
	setp.eq.s32	%p420, %r5142, 26;
	@%p420 bra 	BB5_753;
	bra.uni 	BB5_742;

BB5_753:
	mov.u32 	%r11838, 0;
	// inline asm
	prmt.b32 %r11865, %r11838, %r38, %r193;
	// inline asm
	ld.local.u32 	%r5984, [%rd62];
	ld.local.u32 	%r5985, [%rd8+8];
	// inline asm
	prmt.b32 %r11866, %r5984, %r5985, %r193;
	// inline asm
	ld.local.u32 	%r5988, [%rd8+8];
	ld.local.u32 	%r5989, [%rd8+4];
	// inline asm
	prmt.b32 %r11867, %r5988, %r5989, %r193;
	// inline asm
	ld.local.v2.u32 	{%r6118, %r6119}, [%rd8];
	// inline asm
	prmt.b32 %r11860, %r6119, %r6118, %r193;
	// inline asm
	ld.local.u32 	%r5996, [%rd8];
	ld.local.u32 	%r5997, [%rd7+12];
	// inline asm
	prmt.b32 %r11861, %r5996, %r5997, %r193;
	// inline asm
	ld.local.v2.u32 	{%r6120, %r6121}, [%rd7+8];
	// inline asm
	prmt.b32 %r11862, %r6121, %r6120, %r193;
	// inline asm
	ld.local.u32 	%r6004, [%rd7+8];
	ld.local.u32 	%r6005, [%rd7+4];
	// inline asm
	prmt.b32 %r11863, %r6004, %r6005, %r193;
	// inline asm
	ld.local.v2.u32 	{%r6122, %r6123}, [%rd7];
	// inline asm
	prmt.b32 %r11856, %r6123, %r6122, %r193;
	// inline asm
	ld.local.u32 	%r6012, [%rd7];
	ld.local.u32 	%r6013, [%rd6+12];
	// inline asm
	prmt.b32 %r11857, %r6012, %r6013, %r193;
	// inline asm
	ld.local.v2.u32 	{%r6124, %r6125}, [%rd6+8];
	// inline asm
	prmt.b32 %r11858, %r6125, %r6124, %r193;
	// inline asm
	ld.local.u32 	%r6020, [%rd6+8];
	ld.local.u32 	%r6021, [%rd6+4];
	// inline asm
	prmt.b32 %r11859, %r6020, %r6021, %r193;
	// inline asm
	ld.local.v2.u32 	{%r6126, %r6127}, [%rd6];
	// inline asm
	prmt.b32 %r11852, %r6127, %r6126, %r193;
	// inline asm
	ld.local.u32 	%r6028, [%rd6];
	ld.local.u32 	%r6029, [%rd5+12];
	// inline asm
	prmt.b32 %r11853, %r6028, %r6029, %r193;
	// inline asm
	ld.local.v2.u32 	{%r6128, %r6129}, [%rd5+8];
	// inline asm
	prmt.b32 %r11854, %r6129, %r6128, %r193;
	// inline asm
	ld.local.u32 	%r6036, [%rd5+8];
	ld.local.u32 	%r6037, [%rd5+4];
	// inline asm
	prmt.b32 %r11855, %r6036, %r6037, %r193;
	// inline asm
	ld.local.v2.u32 	{%r6130, %r6131}, [%rd5];
	// inline asm
	prmt.b32 %r11848, %r6131, %r6130, %r193;
	// inline asm
	ld.local.u32 	%r6044, [%rd5];
	ld.local.u32 	%r6045, [%rd4+12];
	// inline asm
	prmt.b32 %r11849, %r6044, %r6045, %r193;
	// inline asm
	ld.local.v2.u32 	{%r6132, %r6133}, [%rd4+8];
	// inline asm
	prmt.b32 %r11850, %r6133, %r6132, %r193;
	// inline asm
	ld.local.u32 	%r6052, [%rd4+8];
	ld.local.u32 	%r6053, [%rd4+4];
	// inline asm
	prmt.b32 %r11851, %r6052, %r6053, %r193;
	// inline asm
	ld.local.v2.u32 	{%r6134, %r6135}, [%rd4];
	// inline asm
	prmt.b32 %r11844, %r6135, %r6134, %r193;
	// inline asm
	ld.local.u32 	%r6060, [%rd4];
	ld.local.u32 	%r6061, [%rd3+12];
	// inline asm
	prmt.b32 %r11845, %r6060, %r6061, %r193;
	// inline asm
	ld.local.v2.u32 	{%r6136, %r6137}, [%rd3+8];
	// inline asm
	prmt.b32 %r11846, %r6137, %r6136, %r193;
	// inline asm
	ld.local.u32 	%r6068, [%rd3+8];
	ld.local.u32 	%r6069, [%rd3+4];
	// inline asm
	prmt.b32 %r11847, %r6068, %r6069, %r193;
	// inline asm
	ld.local.v2.u32 	{%r6138, %r6139}, [%rd3];
	// inline asm
	prmt.b32 %r11840, %r6139, %r6138, %r193;
	// inline asm
	ld.local.u32 	%r6076, [%rd3];
	ld.local.u32 	%r6077, [%rd2+12];
	// inline asm
	prmt.b32 %r11841, %r6076, %r6077, %r193;
	// inline asm
	ld.local.v2.u32 	{%r6140, %r6141}, [%rd2+8];
	// inline asm
	prmt.b32 %r11842, %r6141, %r6140, %r193;
	// inline asm
	ld.local.u32 	%r6084, [%rd2+8];
	ld.local.u32 	%r6085, [%rd2+4];
	// inline asm
	prmt.b32 %r11843, %r6084, %r6085, %r193;
	// inline asm
	ld.local.v2.u32 	{%r6142, %r6143}, [%rd2];
	// inline asm
	prmt.b32 %r6087, %r6143, %r6142, %r193;
	// inline asm
	st.local.u32 	[%rd62], %r6087;
	ld.local.u32 	%r6092, [%rd2];
	ld.local.u32 	%r6093, [%rd1+12];
	// inline asm
	prmt.b32 %r6091, %r6092, %r6093, %r193;
	// inline asm
	st.local.u32 	[%rd8+8], %r6091;
	ld.local.v2.u32 	{%r6144, %r6145}, [%rd1+8];
	// inline asm
	prmt.b32 %r6095, %r6145, %r6144, %r193;
	// inline asm
	st.local.u32 	[%rd8+4], %r6095;
	ld.local.u32 	%r6100, [%rd1+8];
	ld.local.u32 	%r6101, [%rd1+4];
	// inline asm
	prmt.b32 %r6099, %r6100, %r6101, %r193;
	// inline asm
	st.local.u32 	[%rd8], %r6099;
	ld.local.v2.u32 	{%r6146, %r6147}, [%rd1];
	// inline asm
	prmt.b32 %r6103, %r6147, %r6146, %r193;
	// inline asm
	st.local.u32 	[%rd7+12], %r6103;
	ld.local.u32 	%r6108, [%rd1];
	// inline asm
	prmt.b32 %r6107, %r6108, %r11838, %r193;
	// inline asm
	st.local.u32 	[%rd7+8], %r6107;
	st.local.v2.u32 	[%rd7], {%r11838, %r11838};
	st.local.u32 	[%rd6+12], %r11838;
	st.local.u32 	[%rd6+8], %r11838;
	st.local.u32 	[%rd6+4], %r11838;
	st.local.u32 	[%rd6], %r11838;
	st.local.u32 	[%rd5+12], %r11838;
	st.local.u32 	[%rd5+8], %r11838;
	st.local.u32 	[%rd5+4], %r11838;
	st.local.u32 	[%rd5], %r11838;
	st.local.u32 	[%rd4+12], %r11838;
	st.local.u32 	[%rd4+8], %r11838;
	st.local.u32 	[%rd4+4], %r11838;
	st.local.u32 	[%rd4], %r11838;
	st.local.u32 	[%rd3+12], %r11838;
	st.local.u32 	[%rd3+8], %r11838;
	st.local.u32 	[%rd3+4], %r11838;
	st.local.u32 	[%rd3], %r11838;
	st.local.u32 	[%rd2+12], %r11838;
	st.local.u32 	[%rd2+8], %r11838;
	st.local.u32 	[%rd2+4], %r11838;
	st.local.u32 	[%rd2], %r11838;
	st.local.u32 	[%rd1+12], %r11838;
	st.local.u32 	[%rd1+8], %r11838;
	mov.u64 	%rd5753, 0;
	st.local.u32 	[%rd1+4], %rd5753;
	st.local.u32 	[%rd1], %rd5753;
	mov.u32 	%r11839, %r11838;
	mov.u32 	%r11864, %r11838;
	bra.uni 	BB5_770;

BB5_702:
	setp.eq.s32	%p449, %r5142, 6;
	@%p449 bra 	BB5_763;
	bra.uni 	BB5_703;

BB5_763:
	mov.u32 	%r11838, 0;
	// inline asm
	prmt.b32 %r11845, %r11838, %r38, %r193;
	// inline asm
	ld.local.u32 	%r9554, [%rd62];
	ld.local.u32 	%r9555, [%rd8+8];
	// inline asm
	prmt.b32 %r11846, %r9554, %r9555, %r193;
	// inline asm
	ld.local.u32 	%r9558, [%rd8+8];
	ld.local.u32 	%r9559, [%rd8+4];
	// inline asm
	prmt.b32 %r11847, %r9558, %r9559, %r193;
	// inline asm
	ld.local.v2.u32 	{%r9708, %r9709}, [%rd8];
	// inline asm
	prmt.b32 %r11840, %r9709, %r9708, %r193;
	// inline asm
	ld.local.u32 	%r9566, [%rd8];
	ld.local.u32 	%r9567, [%rd7+12];
	// inline asm
	prmt.b32 %r11841, %r9566, %r9567, %r193;
	// inline asm
	ld.local.v2.u32 	{%r9710, %r9711}, [%rd7+8];
	// inline asm
	prmt.b32 %r11842, %r9711, %r9710, %r193;
	// inline asm
	ld.local.u32 	%r9574, [%rd7+8];
	ld.local.u32 	%r9575, [%rd7+4];
	// inline asm
	prmt.b32 %r11843, %r9574, %r9575, %r193;
	// inline asm
	ld.local.v2.u32 	{%r9712, %r9713}, [%rd7];
	// inline asm
	prmt.b32 %r9577, %r9713, %r9712, %r193;
	// inline asm
	st.local.u32 	[%rd62], %r9577;
	ld.local.u32 	%r9582, [%rd7];
	ld.local.u32 	%r9583, [%rd6+12];
	// inline asm
	prmt.b32 %r9581, %r9582, %r9583, %r193;
	// inline asm
	st.local.u32 	[%rd8+8], %r9581;
	ld.local.v2.u32 	{%r9714, %r9715}, [%rd6+8];
	// inline asm
	prmt.b32 %r9585, %r9715, %r9714, %r193;
	// inline asm
	st.local.u32 	[%rd8+4], %r9585;
	ld.local.u32 	%r9590, [%rd6+8];
	ld.local.u32 	%r9591, [%rd6+4];
	// inline asm
	prmt.b32 %r9589, %r9590, %r9591, %r193;
	// inline asm
	st.local.u32 	[%rd8], %r9589;
	ld.local.v2.u32 	{%r9716, %r9717}, [%rd6];
	// inline asm
	prmt.b32 %r9593, %r9717, %r9716, %r193;
	// inline asm
	st.local.u32 	[%rd7+12], %r9593;
	ld.local.u32 	%r9598, [%rd6];
	ld.local.u32 	%r9599, [%rd5+12];
	// inline asm
	prmt.b32 %r9597, %r9598, %r9599, %r193;
	// inline asm
	st.local.u32 	[%rd7+8], %r9597;
	ld.local.v2.u32 	{%r9718, %r9719}, [%rd5+8];
	// inline asm
	prmt.b32 %r9601, %r9719, %r9718, %r193;
	// inline asm
	st.local.u32 	[%rd7+4], %r9601;
	ld.local.u32 	%r9606, [%rd5+8];
	ld.local.u32 	%r9607, [%rd5+4];
	// inline asm
	prmt.b32 %r9605, %r9606, %r9607, %r193;
	// inline asm
	st.local.u32 	[%rd7], %r9605;
	ld.local.v2.u32 	{%r9720, %r9721}, [%rd5];
	// inline asm
	prmt.b32 %r9609, %r9721, %r9720, %r193;
	// inline asm
	st.local.u32 	[%rd6+12], %r9609;
	ld.local.u32 	%r9614, [%rd5];
	ld.local.u32 	%r9615, [%rd4+12];
	// inline asm
	prmt.b32 %r9613, %r9614, %r9615, %r193;
	// inline asm
	st.local.u32 	[%rd6+8], %r9613;
	ld.local.v2.u32 	{%r9722, %r9723}, [%rd4+8];
	// inline asm
	prmt.b32 %r9617, %r9723, %r9722, %r193;
	// inline asm
	st.local.u32 	[%rd6+4], %r9617;
	ld.local.u32 	%r9622, [%rd4+8];
	ld.local.u32 	%r9623, [%rd4+4];
	// inline asm
	prmt.b32 %r9621, %r9622, %r9623, %r193;
	// inline asm
	st.local.u32 	[%rd6], %r9621;
	ld.local.v2.u32 	{%r9724, %r9725}, [%rd4];
	// inline asm
	prmt.b32 %r9625, %r9725, %r9724, %r193;
	// inline asm
	st.local.u32 	[%rd5+12], %r9625;
	ld.local.u32 	%r9630, [%rd4];
	ld.local.u32 	%r9631, [%rd3+12];
	// inline asm
	prmt.b32 %r9629, %r9630, %r9631, %r193;
	// inline asm
	st.local.u32 	[%rd5+8], %r9629;
	ld.local.v2.u32 	{%r9726, %r9727}, [%rd3+8];
	// inline asm
	prmt.b32 %r9633, %r9727, %r9726, %r193;
	// inline asm
	st.local.u32 	[%rd5+4], %r9633;
	ld.local.u32 	%r9638, [%rd3+8];
	ld.local.u32 	%r9639, [%rd3+4];
	// inline asm
	prmt.b32 %r9637, %r9638, %r9639, %r193;
	// inline asm
	st.local.u32 	[%rd5], %r9637;
	ld.local.v2.u32 	{%r9728, %r9729}, [%rd3];
	// inline asm
	prmt.b32 %r9641, %r9729, %r9728, %r193;
	// inline asm
	st.local.u32 	[%rd4+12], %r9641;
	ld.local.u32 	%r9646, [%rd3];
	ld.local.u32 	%r9647, [%rd2+12];
	// inline asm
	prmt.b32 %r9645, %r9646, %r9647, %r193;
	// inline asm
	st.local.u32 	[%rd4+8], %r9645;
	ld.local.v2.u32 	{%r9730, %r9731}, [%rd2+8];
	// inline asm
	prmt.b32 %r9649, %r9731, %r9730, %r193;
	// inline asm
	st.local.u32 	[%rd4+4], %r9649;
	ld.local.u32 	%r9654, [%rd2+8];
	ld.local.u32 	%r9655, [%rd2+4];
	// inline asm
	prmt.b32 %r9653, %r9654, %r9655, %r193;
	// inline asm
	st.local.u32 	[%rd4], %r9653;
	ld.local.v2.u32 	{%r9732, %r9733}, [%rd2];
	// inline asm
	prmt.b32 %r9657, %r9733, %r9732, %r193;
	// inline asm
	st.local.u32 	[%rd3+12], %r9657;
	ld.local.u32 	%r9662, [%rd2];
	ld.local.u32 	%r9663, [%rd1+12];
	// inline asm
	prmt.b32 %r9661, %r9662, %r9663, %r193;
	// inline asm
	st.local.u32 	[%rd3+8], %r9661;
	ld.local.v2.u32 	{%r9734, %r9735}, [%rd1+8];
	// inline asm
	prmt.b32 %r9665, %r9735, %r9734, %r193;
	// inline asm
	st.local.u32 	[%rd3+4], %r9665;
	ld.local.u32 	%r9670, [%rd1+8];
	ld.local.u32 	%r9671, [%rd1+4];
	// inline asm
	prmt.b32 %r9669, %r9670, %r9671, %r193;
	// inline asm
	st.local.u32 	[%rd3], %r9669;
	ld.local.v2.u32 	{%r9736, %r9737}, [%rd1];
	// inline asm
	prmt.b32 %r9673, %r9737, %r9736, %r193;
	// inline asm
	st.local.u32 	[%rd2+12], %r9673;
	ld.local.u32 	%r9678, [%rd1];
	// inline asm
	prmt.b32 %r9677, %r9678, %r11838, %r193;
	// inline asm
	st.local.u32 	[%rd2+8], %r9677;
	st.local.v2.u32 	[%rd2], {%r11838, %r11838};
	st.local.u32 	[%rd1+12], %r11838;
	st.local.u32 	[%rd1+8], %r11838;
	mov.u64 	%rd5773, 0;
	st.local.u32 	[%rd1+4], %rd5773;
	st.local.u32 	[%rd1], %rd5773;
	mov.u32 	%r11839, %r11838;
	mov.u32 	%r11844, %r11838;
	bra.uni 	BB5_765;

BB5_733:
	setp.eq.s32	%p426, %r5142, 22;
	@%p426 bra 	BB5_755;
	bra.uni 	BB5_734;

BB5_755:
	mov.u32 	%r11838, 0;
	// inline asm
	prmt.b32 %r11861, %r11838, %r38, %r193;
	// inline asm
	ld.local.u32 	%r6666, [%rd62];
	ld.local.u32 	%r6667, [%rd8+8];
	// inline asm
	prmt.b32 %r11862, %r6666, %r6667, %r193;
	// inline asm
	ld.local.u32 	%r6670, [%rd8+8];
	ld.local.u32 	%r6671, [%rd8+4];
	// inline asm
	prmt.b32 %r11863, %r6670, %r6671, %r193;
	// inline asm
	ld.local.v2.u32 	{%r6804, %r6805}, [%rd8];
	// inline asm
	prmt.b32 %r11856, %r6805, %r6804, %r193;
	// inline asm
	ld.local.u32 	%r6678, [%rd8];
	ld.local.u32 	%r6679, [%rd7+12];
	// inline asm
	prmt.b32 %r11857, %r6678, %r6679, %r193;
	// inline asm
	ld.local.v2.u32 	{%r6806, %r6807}, [%rd7+8];
	// inline asm
	prmt.b32 %r11858, %r6807, %r6806, %r193;
	// inline asm
	ld.local.u32 	%r6686, [%rd7+8];
	ld.local.u32 	%r6687, [%rd7+4];
	// inline asm
	prmt.b32 %r11859, %r6686, %r6687, %r193;
	// inline asm
	ld.local.v2.u32 	{%r6808, %r6809}, [%rd7];
	// inline asm
	prmt.b32 %r11852, %r6809, %r6808, %r193;
	// inline asm
	ld.local.u32 	%r6694, [%rd7];
	ld.local.u32 	%r6695, [%rd6+12];
	// inline asm
	prmt.b32 %r11853, %r6694, %r6695, %r193;
	// inline asm
	ld.local.v2.u32 	{%r6810, %r6811}, [%rd6+8];
	// inline asm
	prmt.b32 %r11854, %r6811, %r6810, %r193;
	// inline asm
	ld.local.u32 	%r6702, [%rd6+8];
	ld.local.u32 	%r6703, [%rd6+4];
	// inline asm
	prmt.b32 %r11855, %r6702, %r6703, %r193;
	// inline asm
	ld.local.v2.u32 	{%r6812, %r6813}, [%rd6];
	// inline asm
	prmt.b32 %r11848, %r6813, %r6812, %r193;
	// inline asm
	ld.local.u32 	%r6710, [%rd6];
	ld.local.u32 	%r6711, [%rd5+12];
	// inline asm
	prmt.b32 %r11849, %r6710, %r6711, %r193;
	// inline asm
	ld.local.v2.u32 	{%r6814, %r6815}, [%rd5+8];
	// inline asm
	prmt.b32 %r11850, %r6815, %r6814, %r193;
	// inline asm
	ld.local.u32 	%r6718, [%rd5+8];
	ld.local.u32 	%r6719, [%rd5+4];
	// inline asm
	prmt.b32 %r11851, %r6718, %r6719, %r193;
	// inline asm
	ld.local.v2.u32 	{%r6816, %r6817}, [%rd5];
	// inline asm
	prmt.b32 %r11844, %r6817, %r6816, %r193;
	// inline asm
	ld.local.u32 	%r6726, [%rd5];
	ld.local.u32 	%r6727, [%rd4+12];
	// inline asm
	prmt.b32 %r11845, %r6726, %r6727, %r193;
	// inline asm
	ld.local.v2.u32 	{%r6818, %r6819}, [%rd4+8];
	// inline asm
	prmt.b32 %r11846, %r6819, %r6818, %r193;
	// inline asm
	ld.local.u32 	%r6734, [%rd4+8];
	ld.local.u32 	%r6735, [%rd4+4];
	// inline asm
	prmt.b32 %r11847, %r6734, %r6735, %r193;
	// inline asm
	ld.local.v2.u32 	{%r6820, %r6821}, [%rd4];
	// inline asm
	prmt.b32 %r11840, %r6821, %r6820, %r193;
	// inline asm
	ld.local.u32 	%r6742, [%rd4];
	ld.local.u32 	%r6743, [%rd3+12];
	// inline asm
	prmt.b32 %r11841, %r6742, %r6743, %r193;
	// inline asm
	ld.local.v2.u32 	{%r6822, %r6823}, [%rd3+8];
	// inline asm
	prmt.b32 %r11842, %r6823, %r6822, %r193;
	// inline asm
	ld.local.u32 	%r6750, [%rd3+8];
	ld.local.u32 	%r6751, [%rd3+4];
	// inline asm
	prmt.b32 %r11843, %r6750, %r6751, %r193;
	// inline asm
	ld.local.v2.u32 	{%r6824, %r6825}, [%rd3];
	// inline asm
	prmt.b32 %r6753, %r6825, %r6824, %r193;
	// inline asm
	st.local.u32 	[%rd62], %r6753;
	ld.local.u32 	%r6758, [%rd3];
	ld.local.u32 	%r6759, [%rd2+12];
	// inline asm
	prmt.b32 %r6757, %r6758, %r6759, %r193;
	// inline asm
	st.local.u32 	[%rd8+8], %r6757;
	ld.local.v2.u32 	{%r6826, %r6827}, [%rd2+8];
	// inline asm
	prmt.b32 %r6761, %r6827, %r6826, %r193;
	// inline asm
	st.local.u32 	[%rd8+4], %r6761;
	ld.local.u32 	%r6766, [%rd2+8];
	ld.local.u32 	%r6767, [%rd2+4];
	// inline asm
	prmt.b32 %r6765, %r6766, %r6767, %r193;
	// inline asm
	st.local.u32 	[%rd8], %r6765;
	ld.local.v2.u32 	{%r6828, %r6829}, [%rd2];
	// inline asm
	prmt.b32 %r6769, %r6829, %r6828, %r193;
	// inline asm
	st.local.u32 	[%rd7+12], %r6769;
	ld.local.u32 	%r6774, [%rd2];
	ld.local.u32 	%r6775, [%rd1+12];
	// inline asm
	prmt.b32 %r6773, %r6774, %r6775, %r193;
	// inline asm
	st.local.u32 	[%rd7+8], %r6773;
	ld.local.v2.u32 	{%r6830, %r6831}, [%rd1+8];
	// inline asm
	prmt.b32 %r6777, %r6831, %r6830, %r193;
	// inline asm
	st.local.u32 	[%rd7+4], %r6777;
	ld.local.u32 	%r6782, [%rd1+8];
	ld.local.u32 	%r6783, [%rd1+4];
	// inline asm
	prmt.b32 %r6781, %r6782, %r6783, %r193;
	// inline asm
	st.local.u32 	[%rd7], %r6781;
	ld.local.v2.u32 	{%r6832, %r6833}, [%rd1];
	// inline asm
	prmt.b32 %r6785, %r6833, %r6832, %r193;
	// inline asm
	st.local.u32 	[%rd6+12], %r6785;
	ld.local.u32 	%r6790, [%rd1];
	// inline asm
	prmt.b32 %r6789, %r6790, %r11838, %r193;
	// inline asm
	st.local.u32 	[%rd6+8], %r6789;
	st.local.v2.u32 	[%rd6], {%r11838, %r11838};
	st.local.u32 	[%rd5+12], %r11838;
	st.local.u32 	[%rd5+8], %r11838;
	st.local.u32 	[%rd5+4], %r11838;
	st.local.u32 	[%rd5], %r11838;
	st.local.u32 	[%rd4+12], %r11838;
	st.local.u32 	[%rd4+8], %r11838;
	st.local.u32 	[%rd4+4], %r11838;
	st.local.u32 	[%rd4], %r11838;
	st.local.u32 	[%rd3+12], %r11838;
	st.local.u32 	[%rd3+8], %r11838;
	st.local.u32 	[%rd3+4], %r11838;
	st.local.u32 	[%rd3], %r11838;
	st.local.u32 	[%rd2+12], %r11838;
	st.local.u32 	[%rd2+8], %r11838;
	st.local.u32 	[%rd2+4], %r11838;
	st.local.u32 	[%rd2], %r11838;
	st.local.u32 	[%rd1+12], %r11838;
	st.local.u32 	[%rd1+8], %r11838;
	mov.u64 	%rd5757, 0;
	st.local.u32 	[%rd1+4], %rd5757;
	st.local.u32 	[%rd1], %rd5757;
	mov.u32 	%r11839, %r11838;
	mov.u32 	%r11860, %r11838;
	bra.uni 	BB5_769;

BB5_717:
	setp.eq.s32	%p438, %r5142, 14;
	@%p438 bra 	BB5_759;
	bra.uni 	BB5_718;

BB5_759:
	mov.u32 	%r11838, 0;
	// inline asm
	prmt.b32 %r11853, %r11838, %r38, %r193;
	// inline asm
	ld.local.u32 	%r8078, [%rd62];
	ld.local.u32 	%r8079, [%rd8+8];
	// inline asm
	prmt.b32 %r11854, %r8078, %r8079, %r193;
	// inline asm
	ld.local.u32 	%r8082, [%rd8+8];
	ld.local.u32 	%r8083, [%rd8+4];
	// inline asm
	prmt.b32 %r11855, %r8082, %r8083, %r193;
	// inline asm
	ld.local.v2.u32 	{%r8224, %r8225}, [%rd8];
	// inline asm
	prmt.b32 %r11848, %r8225, %r8224, %r193;
	// inline asm
	ld.local.u32 	%r8090, [%rd8];
	ld.local.u32 	%r8091, [%rd7+12];
	// inline asm
	prmt.b32 %r11849, %r8090, %r8091, %r193;
	// inline asm
	ld.local.v2.u32 	{%r8226, %r8227}, [%rd7+8];
	// inline asm
	prmt.b32 %r11850, %r8227, %r8226, %r193;
	// inline asm
	ld.local.u32 	%r8098, [%rd7+8];
	ld.local.u32 	%r8099, [%rd7+4];
	// inline asm
	prmt.b32 %r11851, %r8098, %r8099, %r193;
	// inline asm
	ld.local.v2.u32 	{%r8228, %r8229}, [%rd7];
	// inline asm
	prmt.b32 %r11844, %r8229, %r8228, %r193;
	// inline asm
	ld.local.u32 	%r8106, [%rd7];
	ld.local.u32 	%r8107, [%rd6+12];
	// inline asm
	prmt.b32 %r11845, %r8106, %r8107, %r193;
	// inline asm
	ld.local.v2.u32 	{%r8230, %r8231}, [%rd6+8];
	// inline asm
	prmt.b32 %r11846, %r8231, %r8230, %r193;
	// inline asm
	ld.local.u32 	%r8114, [%rd6+8];
	ld.local.u32 	%r8115, [%rd6+4];
	// inline asm
	prmt.b32 %r11847, %r8114, %r8115, %r193;
	// inline asm
	ld.local.v2.u32 	{%r8232, %r8233}, [%rd6];
	// inline asm
	prmt.b32 %r11840, %r8233, %r8232, %r193;
	// inline asm
	ld.local.u32 	%r8122, [%rd6];
	ld.local.u32 	%r8123, [%rd5+12];
	// inline asm
	prmt.b32 %r11841, %r8122, %r8123, %r193;
	// inline asm
	ld.local.v2.u32 	{%r8234, %r8235}, [%rd5+8];
	// inline asm
	prmt.b32 %r11842, %r8235, %r8234, %r193;
	// inline asm
	ld.local.u32 	%r8130, [%rd5+8];
	ld.local.u32 	%r8131, [%rd5+4];
	// inline asm
	prmt.b32 %r11843, %r8130, %r8131, %r193;
	// inline asm
	ld.local.v2.u32 	{%r8236, %r8237}, [%rd5];
	// inline asm
	prmt.b32 %r8133, %r8237, %r8236, %r193;
	// inline asm
	st.local.u32 	[%rd62], %r8133;
	ld.local.u32 	%r8138, [%rd5];
	ld.local.u32 	%r8139, [%rd4+12];
	// inline asm
	prmt.b32 %r8137, %r8138, %r8139, %r193;
	// inline asm
	st.local.u32 	[%rd8+8], %r8137;
	ld.local.v2.u32 	{%r8238, %r8239}, [%rd4+8];
	// inline asm
	prmt.b32 %r8141, %r8239, %r8238, %r193;
	// inline asm
	st.local.u32 	[%rd8+4], %r8141;
	ld.local.u32 	%r8146, [%rd4+8];
	ld.local.u32 	%r8147, [%rd4+4];
	// inline asm
	prmt.b32 %r8145, %r8146, %r8147, %r193;
	// inline asm
	st.local.u32 	[%rd8], %r8145;
	ld.local.v2.u32 	{%r8240, %r8241}, [%rd4];
	// inline asm
	prmt.b32 %r8149, %r8241, %r8240, %r193;
	// inline asm
	st.local.u32 	[%rd7+12], %r8149;
	ld.local.u32 	%r8154, [%rd4];
	ld.local.u32 	%r8155, [%rd3+12];
	// inline asm
	prmt.b32 %r8153, %r8154, %r8155, %r193;
	// inline asm
	st.local.u32 	[%rd7+8], %r8153;
	ld.local.v2.u32 	{%r8242, %r8243}, [%rd3+8];
	// inline asm
	prmt.b32 %r8157, %r8243, %r8242, %r193;
	// inline asm
	st.local.u32 	[%rd7+4], %r8157;
	ld.local.u32 	%r8162, [%rd3+8];
	ld.local.u32 	%r8163, [%rd3+4];
	// inline asm
	prmt.b32 %r8161, %r8162, %r8163, %r193;
	// inline asm
	st.local.u32 	[%rd7], %r8161;
	ld.local.v2.u32 	{%r8244, %r8245}, [%rd3];
	// inline asm
	prmt.b32 %r8165, %r8245, %r8244, %r193;
	// inline asm
	st.local.u32 	[%rd6+12], %r8165;
	ld.local.u32 	%r8170, [%rd3];
	ld.local.u32 	%r8171, [%rd2+12];
	// inline asm
	prmt.b32 %r8169, %r8170, %r8171, %r193;
	// inline asm
	st.local.u32 	[%rd6+8], %r8169;
	ld.local.v2.u32 	{%r8246, %r8247}, [%rd2+8];
	// inline asm
	prmt.b32 %r8173, %r8247, %r8246, %r193;
	// inline asm
	st.local.u32 	[%rd6+4], %r8173;
	ld.local.u32 	%r8178, [%rd2+8];
	ld.local.u32 	%r8179, [%rd2+4];
	// inline asm
	prmt.b32 %r8177, %r8178, %r8179, %r193;
	// inline asm
	st.local.u32 	[%rd6], %r8177;
	ld.local.v2.u32 	{%r8248, %r8249}, [%rd2];
	// inline asm
	prmt.b32 %r8181, %r8249, %r8248, %r193;
	// inline asm
	st.local.u32 	[%rd5+12], %r8181;
	ld.local.u32 	%r8186, [%rd2];
	ld.local.u32 	%r8187, [%rd1+12];
	// inline asm
	prmt.b32 %r8185, %r8186, %r8187, %r193;
	// inline asm
	st.local.u32 	[%rd5+8], %r8185;
	ld.local.v2.u32 	{%r8250, %r8251}, [%rd1+8];
	// inline asm
	prmt.b32 %r8189, %r8251, %r8250, %r193;
	// inline asm
	st.local.u32 	[%rd5+4], %r8189;
	ld.local.u32 	%r8194, [%rd1+8];
	ld.local.u32 	%r8195, [%rd1+4];
	// inline asm
	prmt.b32 %r8193, %r8194, %r8195, %r193;
	// inline asm
	st.local.u32 	[%rd5], %r8193;
	ld.local.v2.u32 	{%r8252, %r8253}, [%rd1];
	// inline asm
	prmt.b32 %r8197, %r8253, %r8252, %r193;
	// inline asm
	st.local.u32 	[%rd4+12], %r8197;
	ld.local.u32 	%r8202, [%rd1];
	// inline asm
	prmt.b32 %r8201, %r8202, %r11838, %r193;
	// inline asm
	st.local.u32 	[%rd4+8], %r8201;
	st.local.v2.u32 	[%rd4], {%r11838, %r11838};
	st.local.u32 	[%rd3+12], %r11838;
	st.local.u32 	[%rd3+8], %r11838;
	st.local.u32 	[%rd3+4], %r11838;
	st.local.u32 	[%rd3], %r11838;
	st.local.u32 	[%rd2+12], %r11838;
	st.local.u32 	[%rd2+8], %r11838;
	st.local.u32 	[%rd2+4], %r11838;
	st.local.u32 	[%rd2], %r11838;
	st.local.u32 	[%rd1+12], %r11838;
	st.local.u32 	[%rd1+8], %r11838;
	mov.u64 	%rd5765, 0;
	st.local.u32 	[%rd1+4], %rd5765;
	st.local.u32 	[%rd1], %rd5765;
	mov.u32 	%r11839, %r11838;
	mov.u32 	%r11852, %r11838;
	bra.uni 	BB5_767;

BB5_748:
	setp.eq.s32	%p415, %r5142, 30;
	@%p415 bra 	BB5_751;
	bra.uni 	BB5_749;

BB5_751:
	mov.u32 	%r11838, 0;
	// inline asm
	prmt.b32 %r11869, %r11838, %r38, %r193;
	// inline asm
	ld.local.u32 	%r5318, [%rd62];
	ld.local.u32 	%r5319, [%rd8+8];
	// inline asm
	prmt.b32 %r11870, %r5318, %r5319, %r193;
	// inline asm
	ld.local.u32 	%r5322, [%rd8+8];
	ld.local.u32 	%r5323, [%rd8+4];
	// inline asm
	prmt.b32 %r11871, %r5322, %r5323, %r193;
	// inline asm
	ld.local.v2.u32 	{%r5448, %r5449}, [%rd8];
	// inline asm
	prmt.b32 %r11864, %r5449, %r5448, %r193;
	// inline asm
	ld.local.u32 	%r5330, [%rd8];
	ld.local.u32 	%r5331, [%rd7+12];
	// inline asm
	prmt.b32 %r11865, %r5330, %r5331, %r193;
	// inline asm
	ld.local.v2.u32 	{%r5450, %r5451}, [%rd7+8];
	// inline asm
	prmt.b32 %r11866, %r5451, %r5450, %r193;
	// inline asm
	ld.local.u32 	%r5338, [%rd7+8];
	ld.local.u32 	%r5339, [%rd7+4];
	// inline asm
	prmt.b32 %r11867, %r5338, %r5339, %r193;
	// inline asm
	ld.local.v2.u32 	{%r5452, %r5453}, [%rd7];
	// inline asm
	prmt.b32 %r11860, %r5453, %r5452, %r193;
	// inline asm
	ld.local.u32 	%r5346, [%rd7];
	ld.local.u32 	%r5347, [%rd6+12];
	// inline asm
	prmt.b32 %r11861, %r5346, %r5347, %r193;
	// inline asm
	ld.local.v2.u32 	{%r5454, %r5455}, [%rd6+8];
	// inline asm
	prmt.b32 %r11862, %r5455, %r5454, %r193;
	// inline asm
	ld.local.u32 	%r5354, [%rd6+8];
	ld.local.u32 	%r5355, [%rd6+4];
	// inline asm
	prmt.b32 %r11863, %r5354, %r5355, %r193;
	// inline asm
	ld.local.v2.u32 	{%r5456, %r5457}, [%rd6];
	// inline asm
	prmt.b32 %r11856, %r5457, %r5456, %r193;
	// inline asm
	ld.local.u32 	%r5362, [%rd6];
	ld.local.u32 	%r5363, [%rd5+12];
	// inline asm
	prmt.b32 %r11857, %r5362, %r5363, %r193;
	// inline asm
	ld.local.v2.u32 	{%r5458, %r5459}, [%rd5+8];
	// inline asm
	prmt.b32 %r11858, %r5459, %r5458, %r193;
	// inline asm
	ld.local.u32 	%r5370, [%rd5+8];
	ld.local.u32 	%r5371, [%rd5+4];
	// inline asm
	prmt.b32 %r11859, %r5370, %r5371, %r193;
	// inline asm
	ld.local.v2.u32 	{%r5460, %r5461}, [%rd5];
	// inline asm
	prmt.b32 %r11852, %r5461, %r5460, %r193;
	// inline asm
	ld.local.u32 	%r5378, [%rd5];
	ld.local.u32 	%r5379, [%rd4+12];
	// inline asm
	prmt.b32 %r11853, %r5378, %r5379, %r193;
	// inline asm
	ld.local.v2.u32 	{%r5462, %r5463}, [%rd4+8];
	// inline asm
	prmt.b32 %r11854, %r5463, %r5462, %r193;
	// inline asm
	ld.local.u32 	%r5386, [%rd4+8];
	ld.local.u32 	%r5387, [%rd4+4];
	// inline asm
	prmt.b32 %r11855, %r5386, %r5387, %r193;
	// inline asm
	ld.local.v2.u32 	{%r5464, %r5465}, [%rd4];
	// inline asm
	prmt.b32 %r11848, %r5465, %r5464, %r193;
	// inline asm
	ld.local.u32 	%r5394, [%rd4];
	ld.local.u32 	%r5395, [%rd3+12];
	// inline asm
	prmt.b32 %r11849, %r5394, %r5395, %r193;
	// inline asm
	ld.local.v2.u32 	{%r5466, %r5467}, [%rd3+8];
	// inline asm
	prmt.b32 %r11850, %r5467, %r5466, %r193;
	// inline asm
	ld.local.u32 	%r5402, [%rd3+8];
	ld.local.u32 	%r5403, [%rd3+4];
	// inline asm
	prmt.b32 %r11851, %r5402, %r5403, %r193;
	// inline asm
	ld.local.v2.u32 	{%r5468, %r5469}, [%rd3];
	// inline asm
	prmt.b32 %r11844, %r5469, %r5468, %r193;
	// inline asm
	ld.local.u32 	%r5410, [%rd3];
	ld.local.u32 	%r5411, [%rd2+12];
	// inline asm
	prmt.b32 %r11845, %r5410, %r5411, %r193;
	// inline asm
	ld.local.v2.u32 	{%r5470, %r5471}, [%rd2+8];
	// inline asm
	prmt.b32 %r11846, %r5471, %r5470, %r193;
	// inline asm
	ld.local.u32 	%r5418, [%rd2+8];
	ld.local.u32 	%r5419, [%rd2+4];
	// inline asm
	prmt.b32 %r11847, %r5418, %r5419, %r193;
	// inline asm
	ld.local.v2.u32 	{%r5472, %r5473}, [%rd2];
	// inline asm
	prmt.b32 %r11840, %r5473, %r5472, %r193;
	// inline asm
	ld.local.u32 	%r5426, [%rd2];
	ld.local.u32 	%r5427, [%rd1+12];
	// inline asm
	prmt.b32 %r11841, %r5426, %r5427, %r193;
	// inline asm
	ld.local.v2.u32 	{%r5474, %r5475}, [%rd1+8];
	// inline asm
	prmt.b32 %r11842, %r5475, %r5474, %r193;
	// inline asm
	ld.local.u32 	%r5434, [%rd1+8];
	ld.local.u32 	%r5435, [%rd1+4];
	// inline asm
	prmt.b32 %r11843, %r5434, %r5435, %r193;
	// inline asm
	ld.local.v2.u32 	{%r5476, %r5477}, [%rd1];
	// inline asm
	prmt.b32 %r5437, %r5477, %r5476, %r193;
	// inline asm
	st.local.u32 	[%rd62], %r5437;
	ld.local.u32 	%r5442, [%rd1];
	// inline asm
	prmt.b32 %r5441, %r5442, %r11838, %r193;
	// inline asm
	st.local.u32 	[%rd8+8], %r5441;
	st.local.v2.u32 	[%rd8], {%r11838, %r11838};
	st.local.u32 	[%rd7+12], %r11838;
	st.local.u32 	[%rd7+8], %r11838;
	st.local.u32 	[%rd7+4], %r11838;
	st.local.u32 	[%rd7], %r11838;
	st.local.u32 	[%rd6+12], %r11838;
	st.local.u32 	[%rd6+8], %r11838;
	st.local.u32 	[%rd6+4], %r11838;
	st.local.u32 	[%rd6], %r11838;
	st.local.u32 	[%rd5+12], %r11838;
	st.local.u32 	[%rd5+8], %r11838;
	st.local.u32 	[%rd5+4], %r11838;
	st.local.u32 	[%rd5], %r11838;
	st.local.u32 	[%rd4+12], %r11838;
	st.local.u32 	[%rd4+8], %r11838;
	st.local.u32 	[%rd4+4], %r11838;
	st.local.u32 	[%rd4], %r11838;
	st.local.u32 	[%rd3+12], %r11838;
	st.local.u32 	[%rd3+8], %r11838;
	st.local.u32 	[%rd3+4], %r11838;
	st.local.u32 	[%rd3], %r11838;
	st.local.u32 	[%rd2+12], %r11838;
	st.local.u32 	[%rd2+8], %r11838;
	st.local.u32 	[%rd2+4], %r11838;
	st.local.u32 	[%rd2], %r11838;
	st.local.u32 	[%rd1+12], %r11838;
	st.local.u32 	[%rd1+8], %r11838;
	mov.u64 	%rd5749, 0;
	st.local.u32 	[%rd1+4], %rd5749;
	st.local.u32 	[%rd1], %rd5749;
	mov.u32 	%r11839, %r11838;
	mov.u32 	%r11868, %r11838;
	bra.uni 	BB5_773;

BB5_692:
	setp.eq.s32	%p457, %r5142, 1;
	mov.u32 	%r11841, %r11840;
	mov.u32 	%r11842, %r11840;
	mov.u32 	%r11843, %r11840;
	mov.u32 	%r11844, %r11840;
	mov.u32 	%r11845, %r11840;
	mov.u32 	%r11846, %r11840;
	mov.u32 	%r11847, %r11840;
	mov.u32 	%r11848, %r11840;
	mov.u32 	%r11849, %r11840;
	mov.u32 	%r11850, %r11840;
	mov.u32 	%r11851, %r11840;
	mov.u32 	%r11852, %r11840;
	mov.u32 	%r11853, %r11840;
	mov.u32 	%r11854, %r11840;
	mov.u32 	%r11855, %r11840;
	mov.u32 	%r11856, %r11840;
	mov.u32 	%r11857, %r11840;
	mov.u32 	%r11858, %r11840;
	mov.u32 	%r11859, %r11840;
	mov.u32 	%r11860, %r11840;
	mov.u32 	%r11861, %r11840;
	mov.u32 	%r11862, %r11840;
	mov.u32 	%r11863, %r11840;
	mov.u32 	%r11864, %r11840;
	mov.u32 	%r11865, %r11840;
	mov.u32 	%r11866, %r11840;
	mov.u32 	%r11867, %r11840;
	mov.u32 	%r11868, %r11840;
	mov.u32 	%r11869, %r11840;
	mov.u32 	%r11870, %r11840;
	mov.u32 	%r11871, %r11840;
	@%p457 bra 	BB5_693;
	bra.uni 	BB5_773;

BB5_693:
	mov.u32 	%r11839, 0;
	// inline asm
	prmt.b32 %r11842, %r11839, %r38, %r193;
	// inline asm
	ld.local.u32 	%r10509, [%rd62];
	ld.local.u32 	%r10510, [%rd8+8];
	// inline asm
	prmt.b32 %r11843, %r10509, %r10510, %r193;
	// inline asm
	ld.local.u32 	%r10513, [%rd8+8];
	ld.local.u32 	%r10514, [%rd8+4];
	// inline asm
	prmt.b32 %r10512, %r10513, %r10514, %r193;
	// inline asm
	st.local.u32 	[%rd62], %r10512;
	ld.local.v2.u32 	{%r10667, %r10668}, [%rd8];
	// inline asm
	prmt.b32 %r10516, %r10668, %r10667, %r193;
	// inline asm
	st.local.u32 	[%rd8+8], %r10516;
	ld.local.u32 	%r10521, [%rd8];
	ld.local.u32 	%r10522, [%rd7+12];
	// inline asm
	prmt.b32 %r10520, %r10521, %r10522, %r193;
	// inline asm
	st.local.u32 	[%rd8+4], %r10520;
	ld.local.v2.u32 	{%r10669, %r10670}, [%rd7+8];
	// inline asm
	prmt.b32 %r10524, %r10670, %r10669, %r193;
	// inline asm
	st.local.u32 	[%rd8], %r10524;
	ld.local.u32 	%r10529, [%rd7+8];
	ld.local.u32 	%r10530, [%rd7+4];
	// inline asm
	prmt.b32 %r10528, %r10529, %r10530, %r193;
	// inline asm
	st.local.u32 	[%rd7+12], %r10528;
	ld.local.v2.u32 	{%r10671, %r10672}, [%rd7];
	// inline asm
	prmt.b32 %r10532, %r10672, %r10671, %r193;
	// inline asm
	st.local.u32 	[%rd7+8], %r10532;
	ld.local.u32 	%r10537, [%rd7];
	ld.local.u32 	%r10538, [%rd6+12];
	// inline asm
	prmt.b32 %r10536, %r10537, %r10538, %r193;
	// inline asm
	st.local.u32 	[%rd7+4], %r10536;
	ld.local.v2.u32 	{%r10673, %r10674}, [%rd6+8];
	// inline asm
	prmt.b32 %r10540, %r10674, %r10673, %r193;
	// inline asm
	st.local.u32 	[%rd7], %r10540;
	ld.local.u32 	%r10545, [%rd6+8];
	ld.local.u32 	%r10546, [%rd6+4];
	// inline asm
	prmt.b32 %r10544, %r10545, %r10546, %r193;
	// inline asm
	st.local.u32 	[%rd6+12], %r10544;
	ld.local.v2.u32 	{%r10675, %r10676}, [%rd6];
	// inline asm
	prmt.b32 %r10548, %r10676, %r10675, %r193;
	// inline asm
	st.local.u32 	[%rd6+8], %r10548;
	ld.local.u32 	%r10553, [%rd6];
	ld.local.u32 	%r10554, [%rd5+12];
	// inline asm
	prmt.b32 %r10552, %r10553, %r10554, %r193;
	// inline asm
	st.local.u32 	[%rd6+4], %r10552;
	ld.local.v2.u32 	{%r10677, %r10678}, [%rd5+8];
	// inline asm
	prmt.b32 %r10556, %r10678, %r10677, %r193;
	// inline asm
	st.local.u32 	[%rd6], %r10556;
	ld.local.u32 	%r10561, [%rd5+8];
	ld.local.u32 	%r10562, [%rd5+4];
	// inline asm
	prmt.b32 %r10560, %r10561, %r10562, %r193;
	// inline asm
	st.local.u32 	[%rd5+12], %r10560;
	ld.local.v2.u32 	{%r10679, %r10680}, [%rd5];
	// inline asm
	prmt.b32 %r10564, %r10680, %r10679, %r193;
	// inline asm
	st.local.u32 	[%rd5+8], %r10564;
	ld.local.u32 	%r10569, [%rd5];
	ld.local.u32 	%r10570, [%rd4+12];
	// inline asm
	prmt.b32 %r10568, %r10569, %r10570, %r193;
	// inline asm
	st.local.u32 	[%rd5+4], %r10568;
	ld.local.v2.u32 	{%r10681, %r10682}, [%rd4+8];
	// inline asm
	prmt.b32 %r10572, %r10682, %r10681, %r193;
	// inline asm
	st.local.u32 	[%rd5], %r10572;
	ld.local.u32 	%r10577, [%rd4+8];
	ld.local.u32 	%r10578, [%rd4+4];
	// inline asm
	prmt.b32 %r10576, %r10577, %r10578, %r193;
	// inline asm
	st.local.u32 	[%rd4+12], %r10576;
	ld.local.v2.u32 	{%r10683, %r10684}, [%rd4];
	// inline asm
	prmt.b32 %r10580, %r10684, %r10683, %r193;
	// inline asm
	st.local.u32 	[%rd4+8], %r10580;
	ld.local.u32 	%r10585, [%rd4];
	ld.local.u32 	%r10586, [%rd3+12];
	// inline asm
	prmt.b32 %r10584, %r10585, %r10586, %r193;
	// inline asm
	st.local.u32 	[%rd4+4], %r10584;
	ld.local.v2.u32 	{%r10685, %r10686}, [%rd3+8];
	// inline asm
	prmt.b32 %r10588, %r10686, %r10685, %r193;
	// inline asm
	st.local.u32 	[%rd4], %r10588;
	ld.local.u32 	%r10593, [%rd3+8];
	ld.local.u32 	%r10594, [%rd3+4];
	// inline asm
	prmt.b32 %r10592, %r10593, %r10594, %r193;
	// inline asm
	st.local.u32 	[%rd3+12], %r10592;
	ld.local.v2.u32 	{%r10687, %r10688}, [%rd3];
	// inline asm
	prmt.b32 %r10596, %r10688, %r10687, %r193;
	// inline asm
	st.local.u32 	[%rd3+8], %r10596;
	ld.local.u32 	%r10601, [%rd3];
	ld.local.u32 	%r10602, [%rd2+12];
	// inline asm
	prmt.b32 %r10600, %r10601, %r10602, %r193;
	// inline asm
	st.local.u32 	[%rd3+4], %r10600;
	ld.local.v2.u32 	{%r10689, %r10690}, [%rd2+8];
	// inline asm
	prmt.b32 %r10604, %r10690, %r10689, %r193;
	// inline asm
	st.local.u32 	[%rd3], %r10604;
	ld.local.u32 	%r10609, [%rd2+8];
	ld.local.u32 	%r10610, [%rd2+4];
	// inline asm
	prmt.b32 %r10608, %r10609, %r10610, %r193;
	// inline asm
	st.local.u32 	[%rd2+12], %r10608;
	ld.local.v2.u32 	{%r10691, %r10692}, [%rd2];
	// inline asm
	prmt.b32 %r10612, %r10692, %r10691, %r193;
	// inline asm
	st.local.u32 	[%rd2+8], %r10612;
	ld.local.u32 	%r10617, [%rd2];
	ld.local.u32 	%r10618, [%rd1+12];
	// inline asm
	prmt.b32 %r10616, %r10617, %r10618, %r193;
	// inline asm
	st.local.u32 	[%rd2+4], %r10616;
	ld.local.v2.u32 	{%r10693, %r10694}, [%rd1+8];
	// inline asm
	prmt.b32 %r10620, %r10694, %r10693, %r193;
	// inline asm
	st.local.u32 	[%rd2], %r10620;
	ld.local.u32 	%r10625, [%rd1+8];
	ld.local.u32 	%r10626, [%rd1+4];
	// inline asm
	prmt.b32 %r10624, %r10625, %r10626, %r193;
	// inline asm
	st.local.u32 	[%rd1+12], %r10624;
	ld.local.v2.u32 	{%r10695, %r10696}, [%rd1];
	// inline asm
	prmt.b32 %r10628, %r10696, %r10695, %r193;
	// inline asm
	st.local.u32 	[%rd1+8], %r10628;
	ld.local.u32 	%r10633, [%rd1];
	// inline asm
	prmt.b32 %r11838, %r10633, %r11839, %r193;
	// inline asm
	st.local.v2.u32 	[%rd1], {%r11839, %r11838};
	mov.u32 	%r11840, %r11839;
	mov.u32 	%r11841, %r11839;
	mov.u32 	%r11844, %r11839;
	mov.u32 	%r11845, %r11839;
	mov.u32 	%r11846, %r11839;
	mov.u32 	%r11847, %r11839;
	mov.u32 	%r11848, %r11839;
	mov.u32 	%r11849, %r11839;
	mov.u32 	%r11850, %r11839;
	mov.u32 	%r11851, %r11839;
	mov.u32 	%r11852, %r11839;
	mov.u32 	%r11853, %r11839;
	mov.u32 	%r11854, %r11839;
	mov.u32 	%r11855, %r11839;
	mov.u32 	%r11856, %r11839;
	mov.u32 	%r11857, %r11839;
	mov.u32 	%r11858, %r11839;
	mov.u32 	%r11859, %r11839;
	mov.u32 	%r11860, %r11839;
	mov.u32 	%r11861, %r11839;
	mov.u32 	%r11862, %r11839;
	mov.u32 	%r11863, %r11839;
	mov.u32 	%r11864, %r11839;
	mov.u32 	%r11865, %r11839;
	mov.u32 	%r11866, %r11839;
	mov.u32 	%r11867, %r11839;
	mov.u32 	%r11868, %r11839;
	mov.u32 	%r11869, %r11839;
	mov.u32 	%r11870, %r11839;
	mov.u32 	%r11871, %r11839;
	bra.uni 	BB5_773;

BB5_724:
	setp.eq.s32	%p434, %r5142, 17;
	mov.u32 	%r11841, %r11840;
	mov.u32 	%r11842, %r11840;
	mov.u32 	%r11843, %r11840;
	mov.u32 	%r11844, %r11840;
	mov.u32 	%r11845, %r11840;
	mov.u32 	%r11846, %r11840;
	mov.u32 	%r11847, %r11840;
	mov.u32 	%r11848, %r11840;
	mov.u32 	%r11849, %r11840;
	mov.u32 	%r11850, %r11840;
	mov.u32 	%r11851, %r11840;
	mov.u32 	%r11852, %r11840;
	mov.u32 	%r11853, %r11840;
	mov.u32 	%r11854, %r11840;
	mov.u32 	%r11855, %r11840;
	mov.u32 	%r11856, %r11840;
	mov.u32 	%r11857, %r11840;
	mov.u32 	%r11858, %r11840;
	mov.u32 	%r11859, %r11840;
	mov.u32 	%r11860, %r11840;
	mov.u32 	%r11861, %r11840;
	mov.u32 	%r11862, %r11840;
	mov.u32 	%r11863, %r11840;
	mov.u32 	%r11864, %r11840;
	mov.u32 	%r11865, %r11840;
	mov.u32 	%r11866, %r11840;
	mov.u32 	%r11867, %r11840;
	mov.u32 	%r11868, %r11840;
	mov.u32 	%r11869, %r11840;
	mov.u32 	%r11870, %r11840;
	mov.u32 	%r11871, %r11840;
	@%p434 bra 	BB5_725;
	bra.uni 	BB5_773;

BB5_725:
	mov.u32 	%r11838, 0;
	// inline asm
	prmt.b32 %r11858, %r11838, %r38, %r193;
	// inline asm
	ld.local.u32 	%r7541, [%rd62];
	ld.local.u32 	%r7542, [%rd8+8];
	// inline asm
	prmt.b32 %r11859, %r7541, %r7542, %r193;
	// inline asm
	ld.local.u32 	%r7545, [%rd8+8];
	ld.local.u32 	%r7546, [%rd8+4];
	// inline asm
	prmt.b32 %r11852, %r7545, %r7546, %r193;
	// inline asm
	ld.local.v2.u32 	{%r7684, %r7685}, [%rd8];
	// inline asm
	prmt.b32 %r11853, %r7685, %r7684, %r193;
	// inline asm
	ld.local.u32 	%r7553, [%rd8];
	ld.local.u32 	%r7554, [%rd7+12];
	// inline asm
	prmt.b32 %r11854, %r7553, %r7554, %r193;
	// inline asm
	ld.local.v2.u32 	{%r7686, %r7687}, [%rd7+8];
	// inline asm
	prmt.b32 %r11855, %r7687, %r7686, %r193;
	// inline asm
	ld.local.u32 	%r7561, [%rd7+8];
	ld.local.u32 	%r7562, [%rd7+4];
	// inline asm
	prmt.b32 %r11848, %r7561, %r7562, %r193;
	// inline asm
	ld.local.v2.u32 	{%r7688, %r7689}, [%rd7];
	// inline asm
	prmt.b32 %r11849, %r7689, %r7688, %r193;
	// inline asm
	ld.local.u32 	%r7569, [%rd7];
	ld.local.u32 	%r7570, [%rd6+12];
	// inline asm
	prmt.b32 %r11850, %r7569, %r7570, %r193;
	// inline asm
	ld.local.v2.u32 	{%r7690, %r7691}, [%rd6+8];
	// inline asm
	prmt.b32 %r11851, %r7691, %r7690, %r193;
	// inline asm
	ld.local.u32 	%r7577, [%rd6+8];
	ld.local.u32 	%r7578, [%rd6+4];
	// inline asm
	prmt.b32 %r11844, %r7577, %r7578, %r193;
	// inline asm
	ld.local.v2.u32 	{%r7692, %r7693}, [%rd6];
	// inline asm
	prmt.b32 %r11845, %r7693, %r7692, %r193;
	// inline asm
	ld.local.u32 	%r7585, [%rd6];
	ld.local.u32 	%r7586, [%rd5+12];
	// inline asm
	prmt.b32 %r11846, %r7585, %r7586, %r193;
	// inline asm
	ld.local.v2.u32 	{%r7694, %r7695}, [%rd5+8];
	// inline asm
	prmt.b32 %r11847, %r7695, %r7694, %r193;
	// inline asm
	ld.local.u32 	%r7593, [%rd5+8];
	ld.local.u32 	%r7594, [%rd5+4];
	// inline asm
	prmt.b32 %r11840, %r7593, %r7594, %r193;
	// inline asm
	ld.local.v2.u32 	{%r7696, %r7697}, [%rd5];
	// inline asm
	prmt.b32 %r11841, %r7697, %r7696, %r193;
	// inline asm
	ld.local.u32 	%r7601, [%rd5];
	ld.local.u32 	%r7602, [%rd4+12];
	// inline asm
	prmt.b32 %r11842, %r7601, %r7602, %r193;
	// inline asm
	ld.local.v2.u32 	{%r7698, %r7699}, [%rd4+8];
	// inline asm
	prmt.b32 %r11843, %r7699, %r7698, %r193;
	// inline asm
	ld.local.u32 	%r7609, [%rd4+8];
	ld.local.u32 	%r7610, [%rd4+4];
	// inline asm
	prmt.b32 %r7608, %r7609, %r7610, %r193;
	// inline asm
	st.local.u32 	[%rd62], %r7608;
	ld.local.v2.u32 	{%r7700, %r7701}, [%rd4];
	// inline asm
	prmt.b32 %r7612, %r7701, %r7700, %r193;
	// inline asm
	st.local.u32 	[%rd8+8], %r7612;
	ld.local.u32 	%r7617, [%rd4];
	ld.local.u32 	%r7618, [%rd3+12];
	// inline asm
	prmt.b32 %r7616, %r7617, %r7618, %r193;
	// inline asm
	st.local.u32 	[%rd8+4], %r7616;
	ld.local.v2.u32 	{%r7702, %r7703}, [%rd3+8];
	// inline asm
	prmt.b32 %r7620, %r7703, %r7702, %r193;
	// inline asm
	st.local.u32 	[%rd8], %r7620;
	ld.local.u32 	%r7625, [%rd3+8];
	ld.local.u32 	%r7626, [%rd3+4];
	// inline asm
	prmt.b32 %r7624, %r7625, %r7626, %r193;
	// inline asm
	st.local.u32 	[%rd7+12], %r7624;
	ld.local.v2.u32 	{%r7704, %r7705}, [%rd3];
	// inline asm
	prmt.b32 %r7628, %r7705, %r7704, %r193;
	// inline asm
	st.local.u32 	[%rd7+8], %r7628;
	ld.local.u32 	%r7633, [%rd3];
	ld.local.u32 	%r7634, [%rd2+12];
	// inline asm
	prmt.b32 %r7632, %r7633, %r7634, %r193;
	// inline asm
	st.local.u32 	[%rd7+4], %r7632;
	ld.local.v2.u32 	{%r7706, %r7707}, [%rd2+8];
	// inline asm
	prmt.b32 %r7636, %r7707, %r7706, %r193;
	// inline asm
	st.local.u32 	[%rd7], %r7636;
	ld.local.u32 	%r7641, [%rd2+8];
	ld.local.u32 	%r7642, [%rd2+4];
	// inline asm
	prmt.b32 %r7640, %r7641, %r7642, %r193;
	// inline asm
	st.local.u32 	[%rd6+12], %r7640;
	ld.local.v2.u32 	{%r7708, %r7709}, [%rd2];
	// inline asm
	prmt.b32 %r7644, %r7709, %r7708, %r193;
	// inline asm
	st.local.u32 	[%rd6+8], %r7644;
	ld.local.u32 	%r7649, [%rd2];
	ld.local.u32 	%r7650, [%rd1+12];
	// inline asm
	prmt.b32 %r7648, %r7649, %r7650, %r193;
	// inline asm
	st.local.u32 	[%rd6+4], %r7648;
	ld.local.v2.u32 	{%r7710, %r7711}, [%rd1+8];
	// inline asm
	prmt.b32 %r7652, %r7711, %r7710, %r193;
	// inline asm
	st.local.u32 	[%rd6], %r7652;
	ld.local.u32 	%r7657, [%rd1+8];
	ld.local.u32 	%r7658, [%rd1+4];
	// inline asm
	prmt.b32 %r7656, %r7657, %r7658, %r193;
	// inline asm
	st.local.u32 	[%rd5+12], %r7656;
	ld.local.v2.u32 	{%r7712, %r7713}, [%rd1];
	// inline asm
	prmt.b32 %r7660, %r7713, %r7712, %r193;
	// inline asm
	st.local.u32 	[%rd5+8], %r7660;
	ld.local.u32 	%r7665, [%rd1];
	// inline asm
	prmt.b32 %r7664, %r7665, %r11838, %r193;
	// inline asm
	st.local.v2.u32 	[%rd5], {%r11838, %r7664};
	st.local.v4.u32 	[%rd4], {%r11838, %r11838, %r11838, %r11838};
	st.local.v4.u32 	[%rd3], {%r11838, %r11838, %r11838, %r11838};
	st.local.v4.u32 	[%rd2], {%r11838, %r11838, %r11838, %r11838};
	st.local.v2.u32 	[%rd1+8], {%r11838, %r11838};
	mov.u64 	%rd5762, 0;
	st.local.u64 	[%rd1], %rd5762;
	mov.u32 	%r11839, %r11838;
	mov.u32 	%r11856, %r11838;
	mov.u32 	%r11857, %r11838;
	bra.uni 	BB5_768;

BB5_708:
	setp.eq.s32	%p446, %r5142, 9;
	mov.u32 	%r11841, %r11840;
	mov.u32 	%r11842, %r11840;
	mov.u32 	%r11843, %r11840;
	mov.u32 	%r11844, %r11840;
	mov.u32 	%r11845, %r11840;
	mov.u32 	%r11846, %r11840;
	mov.u32 	%r11847, %r11840;
	mov.u32 	%r11848, %r11840;
	mov.u32 	%r11849, %r11840;
	mov.u32 	%r11850, %r11840;
	mov.u32 	%r11851, %r11840;
	mov.u32 	%r11852, %r11840;
	mov.u32 	%r11853, %r11840;
	mov.u32 	%r11854, %r11840;
	mov.u32 	%r11855, %r11840;
	mov.u32 	%r11856, %r11840;
	mov.u32 	%r11857, %r11840;
	mov.u32 	%r11858, %r11840;
	mov.u32 	%r11859, %r11840;
	mov.u32 	%r11860, %r11840;
	mov.u32 	%r11861, %r11840;
	mov.u32 	%r11862, %r11840;
	mov.u32 	%r11863, %r11840;
	mov.u32 	%r11864, %r11840;
	mov.u32 	%r11865, %r11840;
	mov.u32 	%r11866, %r11840;
	mov.u32 	%r11867, %r11840;
	mov.u32 	%r11868, %r11840;
	mov.u32 	%r11869, %r11840;
	mov.u32 	%r11870, %r11840;
	mov.u32 	%r11871, %r11840;
	@%p446 bra 	BB5_709;
	bra.uni 	BB5_773;

BB5_709:
	mov.u32 	%r11838, 0;
	// inline asm
	prmt.b32 %r11850, %r11838, %r38, %r193;
	// inline asm
	ld.local.u32 	%r8993, [%rd62];
	ld.local.u32 	%r8994, [%rd8+8];
	// inline asm
	prmt.b32 %r11851, %r8993, %r8994, %r193;
	// inline asm
	ld.local.u32 	%r8997, [%rd8+8];
	ld.local.u32 	%r8998, [%rd8+4];
	// inline asm
	prmt.b32 %r11844, %r8997, %r8998, %r193;
	// inline asm
	ld.local.v2.u32 	{%r9144, %r9145}, [%rd8];
	// inline asm
	prmt.b32 %r11845, %r9145, %r9144, %r193;
	// inline asm
	ld.local.u32 	%r9005, [%rd8];
	ld.local.u32 	%r9006, [%rd7+12];
	// inline asm
	prmt.b32 %r11846, %r9005, %r9006, %r193;
	// inline asm
	ld.local.v2.u32 	{%r9146, %r9147}, [%rd7+8];
	// inline asm
	prmt.b32 %r11847, %r9147, %r9146, %r193;
	// inline asm
	ld.local.u32 	%r9013, [%rd7+8];
	ld.local.u32 	%r9014, [%rd7+4];
	// inline asm
	prmt.b32 %r11840, %r9013, %r9014, %r193;
	// inline asm
	ld.local.v2.u32 	{%r9148, %r9149}, [%rd7];
	// inline asm
	prmt.b32 %r11841, %r9149, %r9148, %r193;
	// inline asm
	ld.local.u32 	%r9021, [%rd7];
	ld.local.u32 	%r9022, [%rd6+12];
	// inline asm
	prmt.b32 %r11842, %r9021, %r9022, %r193;
	// inline asm
	ld.local.v2.u32 	{%r9150, %r9151}, [%rd6+8];
	// inline asm
	prmt.b32 %r11843, %r9151, %r9150, %r193;
	// inline asm
	ld.local.u32 	%r9029, [%rd6+8];
	ld.local.u32 	%r9030, [%rd6+4];
	// inline asm
	prmt.b32 %r9028, %r9029, %r9030, %r193;
	// inline asm
	st.local.u32 	[%rd62], %r9028;
	ld.local.v2.u32 	{%r9152, %r9153}, [%rd6];
	// inline asm
	prmt.b32 %r9032, %r9153, %r9152, %r193;
	// inline asm
	st.local.u32 	[%rd8+8], %r9032;
	ld.local.u32 	%r9037, [%rd6];
	ld.local.u32 	%r9038, [%rd5+12];
	// inline asm
	prmt.b32 %r9036, %r9037, %r9038, %r193;
	// inline asm
	st.local.u32 	[%rd8+4], %r9036;
	ld.local.v2.u32 	{%r9154, %r9155}, [%rd5+8];
	// inline asm
	prmt.b32 %r9040, %r9155, %r9154, %r193;
	// inline asm
	st.local.u32 	[%rd8], %r9040;
	ld.local.u32 	%r9045, [%rd5+8];
	ld.local.u32 	%r9046, [%rd5+4];
	// inline asm
	prmt.b32 %r9044, %r9045, %r9046, %r193;
	// inline asm
	st.local.u32 	[%rd7+12], %r9044;
	ld.local.v2.u32 	{%r9156, %r9157}, [%rd5];
	// inline asm
	prmt.b32 %r9048, %r9157, %r9156, %r193;
	// inline asm
	st.local.u32 	[%rd7+8], %r9048;
	ld.local.u32 	%r9053, [%rd5];
	ld.local.u32 	%r9054, [%rd4+12];
	// inline asm
	prmt.b32 %r9052, %r9053, %r9054, %r193;
	// inline asm
	st.local.u32 	[%rd7+4], %r9052;
	ld.local.v2.u32 	{%r9158, %r9159}, [%rd4+8];
	// inline asm
	prmt.b32 %r9056, %r9159, %r9158, %r193;
	// inline asm
	st.local.u32 	[%rd7], %r9056;
	ld.local.u32 	%r9061, [%rd4+8];
	ld.local.u32 	%r9062, [%rd4+4];
	// inline asm
	prmt.b32 %r9060, %r9061, %r9062, %r193;
	// inline asm
	st.local.u32 	[%rd6+12], %r9060;
	ld.local.v2.u32 	{%r9160, %r9161}, [%rd4];
	// inline asm
	prmt.b32 %r9064, %r9161, %r9160, %r193;
	// inline asm
	st.local.u32 	[%rd6+8], %r9064;
	ld.local.u32 	%r9069, [%rd4];
	ld.local.u32 	%r9070, [%rd3+12];
	// inline asm
	prmt.b32 %r9068, %r9069, %r9070, %r193;
	// inline asm
	st.local.u32 	[%rd6+4], %r9068;
	ld.local.v2.u32 	{%r9162, %r9163}, [%rd3+8];
	// inline asm
	prmt.b32 %r9072, %r9163, %r9162, %r193;
	// inline asm
	st.local.u32 	[%rd6], %r9072;
	ld.local.u32 	%r9077, [%rd3+8];
	ld.local.u32 	%r9078, [%rd3+4];
	// inline asm
	prmt.b32 %r9076, %r9077, %r9078, %r193;
	// inline asm
	st.local.u32 	[%rd5+12], %r9076;
	ld.local.v2.u32 	{%r9164, %r9165}, [%rd3];
	// inline asm
	prmt.b32 %r9080, %r9165, %r9164, %r193;
	// inline asm
	st.local.u32 	[%rd5+8], %r9080;
	ld.local.u32 	%r9085, [%rd3];
	ld.local.u32 	%r9086, [%rd2+12];
	// inline asm
	prmt.b32 %r9084, %r9085, %r9086, %r193;
	// inline asm
	st.local.u32 	[%rd5+4], %r9084;
	ld.local.v2.u32 	{%r9166, %r9167}, [%rd2+8];
	// inline asm
	prmt.b32 %r9088, %r9167, %r9166, %r193;
	// inline asm
	st.local.u32 	[%rd5], %r9088;
	ld.local.u32 	%r9093, [%rd2+8];
	ld.local.u32 	%r9094, [%rd2+4];
	// inline asm
	prmt.b32 %r9092, %r9093, %r9094, %r193;
	// inline asm
	st.local.u32 	[%rd4+12], %r9092;
	ld.local.v2.u32 	{%r9168, %r9169}, [%rd2];
	// inline asm
	prmt.b32 %r9096, %r9169, %r9168, %r193;
	// inline asm
	st.local.u32 	[%rd4+8], %r9096;
	ld.local.u32 	%r9101, [%rd2];
	ld.local.u32 	%r9102, [%rd1+12];
	// inline asm
	prmt.b32 %r9100, %r9101, %r9102, %r193;
	// inline asm
	st.local.u32 	[%rd4+4], %r9100;
	ld.local.v2.u32 	{%r9170, %r9171}, [%rd1+8];
	// inline asm
	prmt.b32 %r9104, %r9171, %r9170, %r193;
	// inline asm
	st.local.u32 	[%rd4], %r9104;
	ld.local.u32 	%r9109, [%rd1+8];
	ld.local.u32 	%r9110, [%rd1+4];
	// inline asm
	prmt.b32 %r9108, %r9109, %r9110, %r193;
	// inline asm
	st.local.u32 	[%rd3+12], %r9108;
	ld.local.v2.u32 	{%r9172, %r9173}, [%rd1];
	// inline asm
	prmt.b32 %r9112, %r9173, %r9172, %r193;
	// inline asm
	st.local.u32 	[%rd3+8], %r9112;
	ld.local.u32 	%r9117, [%rd1];
	// inline asm
	prmt.b32 %r9116, %r9117, %r11838, %r193;
	// inline asm
	st.local.v2.u32 	[%rd3], {%r11838, %r9116};
	st.local.v4.u32 	[%rd2], {%r11838, %r11838, %r11838, %r11838};
	st.local.v2.u32 	[%rd1+8], {%r11838, %r11838};
	mov.u64 	%rd5770, 0;
	st.local.u64 	[%rd1], %rd5770;
	mov.u32 	%r11839, %r11838;
	mov.u32 	%r11848, %r11838;
	mov.u32 	%r11849, %r11838;
	bra.uni 	BB5_766;

BB5_739:
	setp.eq.s32	%p423, %r5142, 25;
	mov.u32 	%r11841, %r11840;
	mov.u32 	%r11842, %r11840;
	mov.u32 	%r11843, %r11840;
	mov.u32 	%r11844, %r11840;
	mov.u32 	%r11845, %r11840;
	mov.u32 	%r11846, %r11840;
	mov.u32 	%r11847, %r11840;
	mov.u32 	%r11848, %r11840;
	mov.u32 	%r11849, %r11840;
	mov.u32 	%r11850, %r11840;
	mov.u32 	%r11851, %r11840;
	mov.u32 	%r11852, %r11840;
	mov.u32 	%r11853, %r11840;
	mov.u32 	%r11854, %r11840;
	mov.u32 	%r11855, %r11840;
	mov.u32 	%r11856, %r11840;
	mov.u32 	%r11857, %r11840;
	mov.u32 	%r11858, %r11840;
	mov.u32 	%r11859, %r11840;
	mov.u32 	%r11860, %r11840;
	mov.u32 	%r11861, %r11840;
	mov.u32 	%r11862, %r11840;
	mov.u32 	%r11863, %r11840;
	mov.u32 	%r11864, %r11840;
	mov.u32 	%r11865, %r11840;
	mov.u32 	%r11866, %r11840;
	mov.u32 	%r11867, %r11840;
	mov.u32 	%r11868, %r11840;
	mov.u32 	%r11869, %r11840;
	mov.u32 	%r11870, %r11840;
	mov.u32 	%r11871, %r11840;
	@%p423 bra 	BB5_740;
	bra.uni 	BB5_773;

BB5_740:
	mov.u32 	%r11838, 0;
	// inline asm
	prmt.b32 %r11866, %r11838, %r38, %r193;
	// inline asm
	ld.local.u32 	%r6153, [%rd62];
	ld.local.u32 	%r6154, [%rd8+8];
	// inline asm
	prmt.b32 %r11867, %r6153, %r6154, %r193;
	// inline asm
	ld.local.u32 	%r6157, [%rd8+8];
	ld.local.u32 	%r6158, [%rd8+4];
	// inline asm
	prmt.b32 %r11860, %r6157, %r6158, %r193;
	// inline asm
	ld.local.v2.u32 	{%r6288, %r6289}, [%rd8];
	// inline asm
	prmt.b32 %r11861, %r6289, %r6288, %r193;
	// inline asm
	ld.local.u32 	%r6165, [%rd8];
	ld.local.u32 	%r6166, [%rd7+12];
	// inline asm
	prmt.b32 %r11862, %r6165, %r6166, %r193;
	// inline asm
	ld.local.v2.u32 	{%r6290, %r6291}, [%rd7+8];
	// inline asm
	prmt.b32 %r11863, %r6291, %r6290, %r193;
	// inline asm
	ld.local.u32 	%r6173, [%rd7+8];
	ld.local.u32 	%r6174, [%rd7+4];
	// inline asm
	prmt.b32 %r11856, %r6173, %r6174, %r193;
	// inline asm
	ld.local.v2.u32 	{%r6292, %r6293}, [%rd7];
	// inline asm
	prmt.b32 %r11857, %r6293, %r6292, %r193;
	// inline asm
	ld.local.u32 	%r6181, [%rd7];
	ld.local.u32 	%r6182, [%rd6+12];
	// inline asm
	prmt.b32 %r11858, %r6181, %r6182, %r193;
	// inline asm
	ld.local.v2.u32 	{%r6294, %r6295}, [%rd6+8];
	// inline asm
	prmt.b32 %r11859, %r6295, %r6294, %r193;
	// inline asm
	ld.local.u32 	%r6189, [%rd6+8];
	ld.local.u32 	%r6190, [%rd6+4];
	// inline asm
	prmt.b32 %r11852, %r6189, %r6190, %r193;
	// inline asm
	ld.local.v2.u32 	{%r6296, %r6297}, [%rd6];
	// inline asm
	prmt.b32 %r11853, %r6297, %r6296, %r193;
	// inline asm
	ld.local.u32 	%r6197, [%rd6];
	ld.local.u32 	%r6198, [%rd5+12];
	// inline asm
	prmt.b32 %r11854, %r6197, %r6198, %r193;
	// inline asm
	ld.local.v2.u32 	{%r6298, %r6299}, [%rd5+8];
	// inline asm
	prmt.b32 %r11855, %r6299, %r6298, %r193;
	// inline asm
	ld.local.u32 	%r6205, [%rd5+8];
	ld.local.u32 	%r6206, [%rd5+4];
	// inline asm
	prmt.b32 %r11848, %r6205, %r6206, %r193;
	// inline asm
	ld.local.v2.u32 	{%r6300, %r6301}, [%rd5];
	// inline asm
	prmt.b32 %r11849, %r6301, %r6300, %r193;
	// inline asm
	ld.local.u32 	%r6213, [%rd5];
	ld.local.u32 	%r6214, [%rd4+12];
	// inline asm
	prmt.b32 %r11850, %r6213, %r6214, %r193;
	// inline asm
	ld.local.v2.u32 	{%r6302, %r6303}, [%rd4+8];
	// inline asm
	prmt.b32 %r11851, %r6303, %r6302, %r193;
	// inline asm
	ld.local.u32 	%r6221, [%rd4+8];
	ld.local.u32 	%r6222, [%rd4+4];
	// inline asm
	prmt.b32 %r11844, %r6221, %r6222, %r193;
	// inline asm
	ld.local.v2.u32 	{%r6304, %r6305}, [%rd4];
	// inline asm
	prmt.b32 %r11845, %r6305, %r6304, %r193;
	// inline asm
	ld.local.u32 	%r6229, [%rd4];
	ld.local.u32 	%r6230, [%rd3+12];
	// inline asm
	prmt.b32 %r11846, %r6229, %r6230, %r193;
	// inline asm
	ld.local.v2.u32 	{%r6306, %r6307}, [%rd3+8];
	// inline asm
	prmt.b32 %r11847, %r6307, %r6306, %r193;
	// inline asm
	ld.local.u32 	%r6237, [%rd3+8];
	ld.local.u32 	%r6238, [%rd3+4];
	// inline asm
	prmt.b32 %r11840, %r6237, %r6238, %r193;
	// inline asm
	ld.local.v2.u32 	{%r6308, %r6309}, [%rd3];
	// inline asm
	prmt.b32 %r11841, %r6309, %r6308, %r193;
	// inline asm
	ld.local.u32 	%r6245, [%rd3];
	ld.local.u32 	%r6246, [%rd2+12];
	// inline asm
	prmt.b32 %r11842, %r6245, %r6246, %r193;
	// inline asm
	ld.local.v2.u32 	{%r6310, %r6311}, [%rd2+8];
	// inline asm
	prmt.b32 %r11843, %r6311, %r6310, %r193;
	// inline asm
	ld.local.u32 	%r6253, [%rd2+8];
	ld.local.u32 	%r6254, [%rd2+4];
	// inline asm
	prmt.b32 %r6252, %r6253, %r6254, %r193;
	// inline asm
	st.local.u32 	[%rd62], %r6252;
	ld.local.v2.u32 	{%r6312, %r6313}, [%rd2];
	// inline asm
	prmt.b32 %r6256, %r6313, %r6312, %r193;
	// inline asm
	st.local.u32 	[%rd8+8], %r6256;
	ld.local.u32 	%r6261, [%rd2];
	ld.local.u32 	%r6262, [%rd1+12];
	// inline asm
	prmt.b32 %r6260, %r6261, %r6262, %r193;
	// inline asm
	st.local.u32 	[%rd8+4], %r6260;
	ld.local.v2.u32 	{%r6314, %r6315}, [%rd1+8];
	// inline asm
	prmt.b32 %r6264, %r6315, %r6314, %r193;
	// inline asm
	st.local.u32 	[%rd8], %r6264;
	ld.local.u32 	%r6269, [%rd1+8];
	ld.local.u32 	%r6270, [%rd1+4];
	// inline asm
	prmt.b32 %r6268, %r6269, %r6270, %r193;
	// inline asm
	st.local.u32 	[%rd7+12], %r6268;
	ld.local.v2.u32 	{%r6316, %r6317}, [%rd1];
	// inline asm
	prmt.b32 %r6272, %r6317, %r6316, %r193;
	// inline asm
	st.local.u32 	[%rd7+8], %r6272;
	ld.local.u32 	%r6277, [%rd1];
	// inline asm
	prmt.b32 %r6276, %r6277, %r11838, %r193;
	// inline asm
	st.local.v2.u32 	[%rd7], {%r11838, %r6276};
	st.local.v4.u32 	[%rd6], {%r11838, %r11838, %r11838, %r11838};
	st.local.v4.u32 	[%rd5], {%r11838, %r11838, %r11838, %r11838};
	st.local.v4.u32 	[%rd4], {%r11838, %r11838, %r11838, %r11838};
	st.local.v4.u32 	[%rd3], {%r11838, %r11838, %r11838, %r11838};
	st.local.v4.u32 	[%rd2], {%r11838, %r11838, %r11838, %r11838};
	st.local.v2.u32 	[%rd1+8], {%r11838, %r11838};
	mov.u64 	%rd5754, 0;
	st.local.u64 	[%rd1], %rd5754;
	mov.u32 	%r11839, %r11838;
	mov.u32 	%r11864, %r11838;
	mov.u32 	%r11865, %r11838;
	bra.uni 	BB5_770;

BB5_700:
	setp.eq.s32	%p452, %r5142, 5;
	mov.u32 	%r11841, %r11840;
	mov.u32 	%r11842, %r11840;
	mov.u32 	%r11843, %r11840;
	mov.u32 	%r11844, %r11840;
	mov.u32 	%r11845, %r11840;
	mov.u32 	%r11846, %r11840;
	mov.u32 	%r11847, %r11840;
	mov.u32 	%r11848, %r11840;
	mov.u32 	%r11849, %r11840;
	mov.u32 	%r11850, %r11840;
	mov.u32 	%r11851, %r11840;
	mov.u32 	%r11852, %r11840;
	mov.u32 	%r11853, %r11840;
	mov.u32 	%r11854, %r11840;
	mov.u32 	%r11855, %r11840;
	mov.u32 	%r11856, %r11840;
	mov.u32 	%r11857, %r11840;
	mov.u32 	%r11858, %r11840;
	mov.u32 	%r11859, %r11840;
	mov.u32 	%r11860, %r11840;
	mov.u32 	%r11861, %r11840;
	mov.u32 	%r11862, %r11840;
	mov.u32 	%r11863, %r11840;
	mov.u32 	%r11864, %r11840;
	mov.u32 	%r11865, %r11840;
	mov.u32 	%r11866, %r11840;
	mov.u32 	%r11867, %r11840;
	mov.u32 	%r11868, %r11840;
	mov.u32 	%r11869, %r11840;
	mov.u32 	%r11870, %r11840;
	mov.u32 	%r11871, %r11840;
	@%p452 bra 	BB5_701;
	bra.uni 	BB5_773;

BB5_701:
	mov.u32 	%r11838, 0;
	// inline asm
	prmt.b32 %r11846, %r11838, %r38, %r193;
	// inline asm
	ld.local.u32 	%r9743, [%rd62];
	ld.local.u32 	%r9744, [%rd8+8];
	// inline asm
	prmt.b32 %r11847, %r9743, %r9744, %r193;
	// inline asm
	ld.local.u32 	%r9747, [%rd8+8];
	ld.local.u32 	%r9748, [%rd8+4];
	// inline asm
	prmt.b32 %r11840, %r9747, %r9748, %r193;
	// inline asm
	ld.local.v2.u32 	{%r9898, %r9899}, [%rd8];
	// inline asm
	prmt.b32 %r11841, %r9899, %r9898, %r193;
	// inline asm
	ld.local.u32 	%r9755, [%rd8];
	ld.local.u32 	%r9756, [%rd7+12];
	// inline asm
	prmt.b32 %r11842, %r9755, %r9756, %r193;
	// inline asm
	ld.local.v2.u32 	{%r9900, %r9901}, [%rd7+8];
	// inline asm
	prmt.b32 %r11843, %r9901, %r9900, %r193;
	// inline asm
	ld.local.u32 	%r9763, [%rd7+8];
	ld.local.u32 	%r9764, [%rd7+4];
	// inline asm
	prmt.b32 %r9762, %r9763, %r9764, %r193;
	// inline asm
	st.local.u32 	[%rd62], %r9762;
	ld.local.v2.u32 	{%r9902, %r9903}, [%rd7];
	// inline asm
	prmt.b32 %r9766, %r9903, %r9902, %r193;
	// inline asm
	st.local.u32 	[%rd8+8], %r9766;
	ld.local.u32 	%r9771, [%rd7];
	ld.local.u32 	%r9772, [%rd6+12];
	// inline asm
	prmt.b32 %r9770, %r9771, %r9772, %r193;
	// inline asm
	st.local.u32 	[%rd8+4], %r9770;
	ld.local.v2.u32 	{%r9904, %r9905}, [%rd6+8];
	// inline asm
	prmt.b32 %r9774, %r9905, %r9904, %r193;
	// inline asm
	st.local.u32 	[%rd8], %r9774;
	ld.local.u32 	%r9779, [%rd6+8];
	ld.local.u32 	%r9780, [%rd6+4];
	// inline asm
	prmt.b32 %r9778, %r9779, %r9780, %r193;
	// inline asm
	st.local.u32 	[%rd7+12], %r9778;
	ld.local.v2.u32 	{%r9906, %r9907}, [%rd6];
	// inline asm
	prmt.b32 %r9782, %r9907, %r9906, %r193;
	// inline asm
	st.local.u32 	[%rd7+8], %r9782;
	ld.local.u32 	%r9787, [%rd6];
	ld.local.u32 	%r9788, [%rd5+12];
	// inline asm
	prmt.b32 %r9786, %r9787, %r9788, %r193;
	// inline asm
	st.local.u32 	[%rd7+4], %r9786;
	ld.local.v2.u32 	{%r9908, %r9909}, [%rd5+8];
	// inline asm
	prmt.b32 %r9790, %r9909, %r9908, %r193;
	// inline asm
	st.local.u32 	[%rd7], %r9790;
	ld.local.u32 	%r9795, [%rd5+8];
	ld.local.u32 	%r9796, [%rd5+4];
	// inline asm
	prmt.b32 %r9794, %r9795, %r9796, %r193;
	// inline asm
	st.local.u32 	[%rd6+12], %r9794;
	ld.local.v2.u32 	{%r9910, %r9911}, [%rd5];
	// inline asm
	prmt.b32 %r9798, %r9911, %r9910, %r193;
	// inline asm
	st.local.u32 	[%rd6+8], %r9798;
	ld.local.u32 	%r9803, [%rd5];
	ld.local.u32 	%r9804, [%rd4+12];
	// inline asm
	prmt.b32 %r9802, %r9803, %r9804, %r193;
	// inline asm
	st.local.u32 	[%rd6+4], %r9802;
	ld.local.v2.u32 	{%r9912, %r9913}, [%rd4+8];
	// inline asm
	prmt.b32 %r9806, %r9913, %r9912, %r193;
	// inline asm
	st.local.u32 	[%rd6], %r9806;
	ld.local.u32 	%r9811, [%rd4+8];
	ld.local.u32 	%r9812, [%rd4+4];
	// inline asm
	prmt.b32 %r9810, %r9811, %r9812, %r193;
	// inline asm
	st.local.u32 	[%rd5+12], %r9810;
	ld.local.v2.u32 	{%r9914, %r9915}, [%rd4];
	// inline asm
	prmt.b32 %r9814, %r9915, %r9914, %r193;
	// inline asm
	st.local.u32 	[%rd5+8], %r9814;
	ld.local.u32 	%r9819, [%rd4];
	ld.local.u32 	%r9820, [%rd3+12];
	// inline asm
	prmt.b32 %r9818, %r9819, %r9820, %r193;
	// inline asm
	st.local.u32 	[%rd5+4], %r9818;
	ld.local.v2.u32 	{%r9916, %r9917}, [%rd3+8];
	// inline asm
	prmt.b32 %r9822, %r9917, %r9916, %r193;
	// inline asm
	st.local.u32 	[%rd5], %r9822;
	ld.local.u32 	%r9827, [%rd3+8];
	ld.local.u32 	%r9828, [%rd3+4];
	// inline asm
	prmt.b32 %r9826, %r9827, %r9828, %r193;
	// inline asm
	st.local.u32 	[%rd4+12], %r9826;
	ld.local.v2.u32 	{%r9918, %r9919}, [%rd3];
	// inline asm
	prmt.b32 %r9830, %r9919, %r9918, %r193;
	// inline asm
	st.local.u32 	[%rd4+8], %r9830;
	ld.local.u32 	%r9835, [%rd3];
	ld.local.u32 	%r9836, [%rd2+12];
	// inline asm
	prmt.b32 %r9834, %r9835, %r9836, %r193;
	// inline asm
	st.local.u32 	[%rd4+4], %r9834;
	ld.local.v2.u32 	{%r9920, %r9921}, [%rd2+8];
	// inline asm
	prmt.b32 %r9838, %r9921, %r9920, %r193;
	// inline asm
	st.local.u32 	[%rd4], %r9838;
	ld.local.u32 	%r9843, [%rd2+8];
	ld.local.u32 	%r9844, [%rd2+4];
	// inline asm
	prmt.b32 %r9842, %r9843, %r9844, %r193;
	// inline asm
	st.local.u32 	[%rd3+12], %r9842;
	ld.local.v2.u32 	{%r9922, %r9923}, [%rd2];
	// inline asm
	prmt.b32 %r9846, %r9923, %r9922, %r193;
	// inline asm
	st.local.u32 	[%rd3+8], %r9846;
	ld.local.u32 	%r9851, [%rd2];
	ld.local.u32 	%r9852, [%rd1+12];
	// inline asm
	prmt.b32 %r9850, %r9851, %r9852, %r193;
	// inline asm
	st.local.u32 	[%rd3+4], %r9850;
	ld.local.v2.u32 	{%r9924, %r9925}, [%rd1+8];
	// inline asm
	prmt.b32 %r9854, %r9925, %r9924, %r193;
	// inline asm
	st.local.u32 	[%rd3], %r9854;
	ld.local.u32 	%r9859, [%rd1+8];
	ld.local.u32 	%r9860, [%rd1+4];
	// inline asm
	prmt.b32 %r9858, %r9859, %r9860, %r193;
	// inline asm
	st.local.u32 	[%rd2+12], %r9858;
	ld.local.v2.u32 	{%r9926, %r9927}, [%rd1];
	// inline asm
	prmt.b32 %r9862, %r9927, %r9926, %r193;
	// inline asm
	st.local.u32 	[%rd2+8], %r9862;
	ld.local.u32 	%r9867, [%rd1];
	// inline asm
	prmt.b32 %r9866, %r9867, %r11838, %r193;
	// inline asm
	st.local.v2.u32 	[%rd2], {%r11838, %r9866};
	st.local.v2.u32 	[%rd1+8], {%r11838, %r11838};
	mov.u64 	%rd5774, 0;
	st.local.u64 	[%rd1], %rd5774;
	mov.u32 	%r11839, %r11838;
	mov.u32 	%r11844, %r11838;
	mov.u32 	%r11845, %r11838;
	bra.uni 	BB5_765;

BB5_731:
	setp.eq.s32	%p429, %r5142, 21;
	mov.u32 	%r11841, %r11840;
	mov.u32 	%r11842, %r11840;
	mov.u32 	%r11843, %r11840;
	mov.u32 	%r11844, %r11840;
	mov.u32 	%r11845, %r11840;
	mov.u32 	%r11846, %r11840;
	mov.u32 	%r11847, %r11840;
	mov.u32 	%r11848, %r11840;
	mov.u32 	%r11849, %r11840;
	mov.u32 	%r11850, %r11840;
	mov.u32 	%r11851, %r11840;
	mov.u32 	%r11852, %r11840;
	mov.u32 	%r11853, %r11840;
	mov.u32 	%r11854, %r11840;
	mov.u32 	%r11855, %r11840;
	mov.u32 	%r11856, %r11840;
	mov.u32 	%r11857, %r11840;
	mov.u32 	%r11858, %r11840;
	mov.u32 	%r11859, %r11840;
	mov.u32 	%r11860, %r11840;
	mov.u32 	%r11861, %r11840;
	mov.u32 	%r11862, %r11840;
	mov.u32 	%r11863, %r11840;
	mov.u32 	%r11864, %r11840;
	mov.u32 	%r11865, %r11840;
	mov.u32 	%r11866, %r11840;
	mov.u32 	%r11867, %r11840;
	mov.u32 	%r11868, %r11840;
	mov.u32 	%r11869, %r11840;
	mov.u32 	%r11870, %r11840;
	mov.u32 	%r11871, %r11840;
	@%p429 bra 	BB5_732;
	bra.uni 	BB5_773;

BB5_732:
	mov.u32 	%r11838, 0;
	// inline asm
	prmt.b32 %r11862, %r11838, %r38, %r193;
	// inline asm
	ld.local.u32 	%r6839, [%rd62];
	ld.local.u32 	%r6840, [%rd8+8];
	// inline asm
	prmt.b32 %r11863, %r6839, %r6840, %r193;
	// inline asm
	ld.local.u32 	%r6843, [%rd8+8];
	ld.local.u32 	%r6844, [%rd8+4];
	// inline asm
	prmt.b32 %r11856, %r6843, %r6844, %r193;
	// inline asm
	ld.local.v2.u32 	{%r6978, %r6979}, [%rd8];
	// inline asm
	prmt.b32 %r11857, %r6979, %r6978, %r193;
	// inline asm
	ld.local.u32 	%r6851, [%rd8];
	ld.local.u32 	%r6852, [%rd7+12];
	// inline asm
	prmt.b32 %r11858, %r6851, %r6852, %r193;
	// inline asm
	ld.local.v2.u32 	{%r6980, %r6981}, [%rd7+8];
	// inline asm
	prmt.b32 %r11859, %r6981, %r6980, %r193;
	// inline asm
	ld.local.u32 	%r6859, [%rd7+8];
	ld.local.u32 	%r6860, [%rd7+4];
	// inline asm
	prmt.b32 %r11852, %r6859, %r6860, %r193;
	// inline asm
	ld.local.v2.u32 	{%r6982, %r6983}, [%rd7];
	// inline asm
	prmt.b32 %r11853, %r6983, %r6982, %r193;
	// inline asm
	ld.local.u32 	%r6867, [%rd7];
	ld.local.u32 	%r6868, [%rd6+12];
	// inline asm
	prmt.b32 %r11854, %r6867, %r6868, %r193;
	// inline asm
	ld.local.v2.u32 	{%r6984, %r6985}, [%rd6+8];
	// inline asm
	prmt.b32 %r11855, %r6985, %r6984, %r193;
	// inline asm
	ld.local.u32 	%r6875, [%rd6+8];
	ld.local.u32 	%r6876, [%rd6+4];
	// inline asm
	prmt.b32 %r11848, %r6875, %r6876, %r193;
	// inline asm
	ld.local.v2.u32 	{%r6986, %r6987}, [%rd6];
	// inline asm
	prmt.b32 %r11849, %r6987, %r6986, %r193;
	// inline asm
	ld.local.u32 	%r6883, [%rd6];
	ld.local.u32 	%r6884, [%rd5+12];
	// inline asm
	prmt.b32 %r11850, %r6883, %r6884, %r193;
	// inline asm
	ld.local.v2.u32 	{%r6988, %r6989}, [%rd5+8];
	// inline asm
	prmt.b32 %r11851, %r6989, %r6988, %r193;
	// inline asm
	ld.local.u32 	%r6891, [%rd5+8];
	ld.local.u32 	%r6892, [%rd5+4];
	// inline asm
	prmt.b32 %r11844, %r6891, %r6892, %r193;
	// inline asm
	ld.local.v2.u32 	{%r6990, %r6991}, [%rd5];
	// inline asm
	prmt.b32 %r11845, %r6991, %r6990, %r193;
	// inline asm
	ld.local.u32 	%r6899, [%rd5];
	ld.local.u32 	%r6900, [%rd4+12];
	// inline asm
	prmt.b32 %r11846, %r6899, %r6900, %r193;
	// inline asm
	ld.local.v2.u32 	{%r6992, %r6993}, [%rd4+8];
	// inline asm
	prmt.b32 %r11847, %r6993, %r6992, %r193;
	// inline asm
	ld.local.u32 	%r6907, [%rd4+8];
	ld.local.u32 	%r6908, [%rd4+4];
	// inline asm
	prmt.b32 %r11840, %r6907, %r6908, %r193;
	// inline asm
	ld.local.v2.u32 	{%r6994, %r6995}, [%rd4];
	// inline asm
	prmt.b32 %r11841, %r6995, %r6994, %r193;
	// inline asm
	ld.local.u32 	%r6915, [%rd4];
	ld.local.u32 	%r6916, [%rd3+12];
	// inline asm
	prmt.b32 %r11842, %r6915, %r6916, %r193;
	// inline asm
	ld.local.v2.u32 	{%r6996, %r6997}, [%rd3+8];
	// inline asm
	prmt.b32 %r11843, %r6997, %r6996, %r193;
	// inline asm
	ld.local.u32 	%r6923, [%rd3+8];
	ld.local.u32 	%r6924, [%rd3+4];
	// inline asm
	prmt.b32 %r6922, %r6923, %r6924, %r193;
	// inline asm
	st.local.u32 	[%rd62], %r6922;
	ld.local.v2.u32 	{%r6998, %r6999}, [%rd3];
	// inline asm
	prmt.b32 %r6926, %r6999, %r6998, %r193;
	// inline asm
	st.local.u32 	[%rd8+8], %r6926;
	ld.local.u32 	%r6931, [%rd3];
	ld.local.u32 	%r6932, [%rd2+12];
	// inline asm
	prmt.b32 %r6930, %r6931, %r6932, %r193;
	// inline asm
	st.local.u32 	[%rd8+4], %r6930;
	ld.local.v2.u32 	{%r7000, %r7001}, [%rd2+8];
	// inline asm
	prmt.b32 %r6934, %r7001, %r7000, %r193;
	// inline asm
	st.local.u32 	[%rd8], %r6934;
	ld.local.u32 	%r6939, [%rd2+8];
	ld.local.u32 	%r6940, [%rd2+4];
	// inline asm
	prmt.b32 %r6938, %r6939, %r6940, %r193;
	// inline asm
	st.local.u32 	[%rd7+12], %r6938;
	ld.local.v2.u32 	{%r7002, %r7003}, [%rd2];
	// inline asm
	prmt.b32 %r6942, %r7003, %r7002, %r193;
	// inline asm
	st.local.u32 	[%rd7+8], %r6942;
	ld.local.u32 	%r6947, [%rd2];
	ld.local.u32 	%r6948, [%rd1+12];
	// inline asm
	prmt.b32 %r6946, %r6947, %r6948, %r193;
	// inline asm
	st.local.u32 	[%rd7+4], %r6946;
	ld.local.v2.u32 	{%r7004, %r7005}, [%rd1+8];
	// inline asm
	prmt.b32 %r6950, %r7005, %r7004, %r193;
	// inline asm
	st.local.u32 	[%rd7], %r6950;
	ld.local.u32 	%r6955, [%rd1+8];
	ld.local.u32 	%r6956, [%rd1+4];
	// inline asm
	prmt.b32 %r6954, %r6955, %r6956, %r193;
	// inline asm
	st.local.u32 	[%rd6+12], %r6954;
	ld.local.v2.u32 	{%r7006, %r7007}, [%rd1];
	// inline asm
	prmt.b32 %r6958, %r7007, %r7006, %r193;
	// inline asm
	st.local.u32 	[%rd6+8], %r6958;
	ld.local.u32 	%r6963, [%rd1];
	// inline asm
	prmt.b32 %r6962, %r6963, %r11838, %r193;
	// inline asm
	st.local.v2.u32 	[%rd6], {%r11838, %r6962};
	st.local.v4.u32 	[%rd5], {%r11838, %r11838, %r11838, %r11838};
	st.local.v4.u32 	[%rd4], {%r11838, %r11838, %r11838, %r11838};
	st.local.v4.u32 	[%rd3], {%r11838, %r11838, %r11838, %r11838};
	st.local.v4.u32 	[%rd2], {%r11838, %r11838, %r11838, %r11838};
	st.local.v2.u32 	[%rd1+8], {%r11838, %r11838};
	mov.u64 	%rd5758, 0;
	st.local.u64 	[%rd1], %rd5758;
	mov.u32 	%r11839, %r11838;
	mov.u32 	%r11860, %r11838;
	mov.u32 	%r11861, %r11838;
	bra.uni 	BB5_769;

BB5_715:
	setp.eq.s32	%p441, %r5142, 13;
	mov.u32 	%r11841, %r11840;
	mov.u32 	%r11842, %r11840;
	mov.u32 	%r11843, %r11840;
	mov.u32 	%r11844, %r11840;
	mov.u32 	%r11845, %r11840;
	mov.u32 	%r11846, %r11840;
	mov.u32 	%r11847, %r11840;
	mov.u32 	%r11848, %r11840;
	mov.u32 	%r11849, %r11840;
	mov.u32 	%r11850, %r11840;
	mov.u32 	%r11851, %r11840;
	mov.u32 	%r11852, %r11840;
	mov.u32 	%r11853, %r11840;
	mov.u32 	%r11854, %r11840;
	mov.u32 	%r11855, %r11840;
	mov.u32 	%r11856, %r11840;
	mov.u32 	%r11857, %r11840;
	mov.u32 	%r11858, %r11840;
	mov.u32 	%r11859, %r11840;
	mov.u32 	%r11860, %r11840;
	mov.u32 	%r11861, %r11840;
	mov.u32 	%r11862, %r11840;
	mov.u32 	%r11863, %r11840;
	mov.u32 	%r11864, %r11840;
	mov.u32 	%r11865, %r11840;
	mov.u32 	%r11866, %r11840;
	mov.u32 	%r11867, %r11840;
	mov.u32 	%r11868, %r11840;
	mov.u32 	%r11869, %r11840;
	mov.u32 	%r11870, %r11840;
	mov.u32 	%r11871, %r11840;
	@%p441 bra 	BB5_716;
	bra.uni 	BB5_773;

BB5_716:
	mov.u32 	%r11838, 0;
	// inline asm
	prmt.b32 %r11854, %r11838, %r38, %r193;
	// inline asm
	ld.local.u32 	%r8259, [%rd62];
	ld.local.u32 	%r8260, [%rd8+8];
	// inline asm
	prmt.b32 %r11855, %r8259, %r8260, %r193;
	// inline asm
	ld.local.u32 	%r8263, [%rd8+8];
	ld.local.u32 	%r8264, [%rd8+4];
	// inline asm
	prmt.b32 %r11848, %r8263, %r8264, %r193;
	// inline asm
	ld.local.v2.u32 	{%r8406, %r8407}, [%rd8];
	// inline asm
	prmt.b32 %r11849, %r8407, %r8406, %r193;
	// inline asm
	ld.local.u32 	%r8271, [%rd8];
	ld.local.u32 	%r8272, [%rd7+12];
	// inline asm
	prmt.b32 %r11850, %r8271, %r8272, %r193;
	// inline asm
	ld.local.v2.u32 	{%r8408, %r8409}, [%rd7+8];
	// inline asm
	prmt.b32 %r11851, %r8409, %r8408, %r193;
	// inline asm
	ld.local.u32 	%r8279, [%rd7+8];
	ld.local.u32 	%r8280, [%rd7+4];
	// inline asm
	prmt.b32 %r11844, %r8279, %r8280, %r193;
	// inline asm
	ld.local.v2.u32 	{%r8410, %r8411}, [%rd7];
	// inline asm
	prmt.b32 %r11845, %r8411, %r8410, %r193;
	// inline asm
	ld.local.u32 	%r8287, [%rd7];
	ld.local.u32 	%r8288, [%rd6+12];
	// inline asm
	prmt.b32 %r11846, %r8287, %r8288, %r193;
	// inline asm
	ld.local.v2.u32 	{%r8412, %r8413}, [%rd6+8];
	// inline asm
	prmt.b32 %r11847, %r8413, %r8412, %r193;
	// inline asm
	ld.local.u32 	%r8295, [%rd6+8];
	ld.local.u32 	%r8296, [%rd6+4];
	// inline asm
	prmt.b32 %r11840, %r8295, %r8296, %r193;
	// inline asm
	ld.local.v2.u32 	{%r8414, %r8415}, [%rd6];
	// inline asm
	prmt.b32 %r11841, %r8415, %r8414, %r193;
	// inline asm
	ld.local.u32 	%r8303, [%rd6];
	ld.local.u32 	%r8304, [%rd5+12];
	// inline asm
	prmt.b32 %r11842, %r8303, %r8304, %r193;
	// inline asm
	ld.local.v2.u32 	{%r8416, %r8417}, [%rd5+8];
	// inline asm
	prmt.b32 %r11843, %r8417, %r8416, %r193;
	// inline asm
	ld.local.u32 	%r8311, [%rd5+8];
	ld.local.u32 	%r8312, [%rd5+4];
	// inline asm
	prmt.b32 %r8310, %r8311, %r8312, %r193;
	// inline asm
	st.local.u32 	[%rd62], %r8310;
	ld.local.v2.u32 	{%r8418, %r8419}, [%rd5];
	// inline asm
	prmt.b32 %r8314, %r8419, %r8418, %r193;
	// inline asm
	st.local.u32 	[%rd8+8], %r8314;
	ld.local.u32 	%r8319, [%rd5];
	ld.local.u32 	%r8320, [%rd4+12];
	// inline asm
	prmt.b32 %r8318, %r8319, %r8320, %r193;
	// inline asm
	st.local.u32 	[%rd8+4], %r8318;
	ld.local.v2.u32 	{%r8420, %r8421}, [%rd4+8];
	// inline asm
	prmt.b32 %r8322, %r8421, %r8420, %r193;
	// inline asm
	st.local.u32 	[%rd8], %r8322;
	ld.local.u32 	%r8327, [%rd4+8];
	ld.local.u32 	%r8328, [%rd4+4];
	// inline asm
	prmt.b32 %r8326, %r8327, %r8328, %r193;
	// inline asm
	st.local.u32 	[%rd7+12], %r8326;
	ld.local.v2.u32 	{%r8422, %r8423}, [%rd4];
	// inline asm
	prmt.b32 %r8330, %r8423, %r8422, %r193;
	// inline asm
	st.local.u32 	[%rd7+8], %r8330;
	ld.local.u32 	%r8335, [%rd4];
	ld.local.u32 	%r8336, [%rd3+12];
	// inline asm
	prmt.b32 %r8334, %r8335, %r8336, %r193;
	// inline asm
	st.local.u32 	[%rd7+4], %r8334;
	ld.local.v2.u32 	{%r8424, %r8425}, [%rd3+8];
	// inline asm
	prmt.b32 %r8338, %r8425, %r8424, %r193;
	// inline asm
	st.local.u32 	[%rd7], %r8338;
	ld.local.u32 	%r8343, [%rd3+8];
	ld.local.u32 	%r8344, [%rd3+4];
	// inline asm
	prmt.b32 %r8342, %r8343, %r8344, %r193;
	// inline asm
	st.local.u32 	[%rd6+12], %r8342;
	ld.local.v2.u32 	{%r8426, %r8427}, [%rd3];
	// inline asm
	prmt.b32 %r8346, %r8427, %r8426, %r193;
	// inline asm
	st.local.u32 	[%rd6+8], %r8346;
	ld.local.u32 	%r8351, [%rd3];
	ld.local.u32 	%r8352, [%rd2+12];
	// inline asm
	prmt.b32 %r8350, %r8351, %r8352, %r193;
	// inline asm
	st.local.u32 	[%rd6+4], %r8350;
	ld.local.v2.u32 	{%r8428, %r8429}, [%rd2+8];
	// inline asm
	prmt.b32 %r8354, %r8429, %r8428, %r193;
	// inline asm
	st.local.u32 	[%rd6], %r8354;
	ld.local.u32 	%r8359, [%rd2+8];
	ld.local.u32 	%r8360, [%rd2+4];
	// inline asm
	prmt.b32 %r8358, %r8359, %r8360, %r193;
	// inline asm
	st.local.u32 	[%rd5+12], %r8358;
	ld.local.v2.u32 	{%r8430, %r8431}, [%rd2];
	// inline asm
	prmt.b32 %r8362, %r8431, %r8430, %r193;
	// inline asm
	st.local.u32 	[%rd5+8], %r8362;
	ld.local.u32 	%r8367, [%rd2];
	ld.local.u32 	%r8368, [%rd1+12];
	// inline asm
	prmt.b32 %r8366, %r8367, %r8368, %r193;
	// inline asm
	st.local.u32 	[%rd5+4], %r8366;
	ld.local.v2.u32 	{%r8432, %r8433}, [%rd1+8];
	// inline asm
	prmt.b32 %r8370, %r8433, %r8432, %r193;
	// inline asm
	st.local.u32 	[%rd5], %r8370;
	ld.local.u32 	%r8375, [%rd1+8];
	ld.local.u32 	%r8376, [%rd1+4];
	// inline asm
	prmt.b32 %r8374, %r8375, %r8376, %r193;
	// inline asm
	st.local.u32 	[%rd4+12], %r8374;
	ld.local.v2.u32 	{%r8434, %r8435}, [%rd1];
	// inline asm
	prmt.b32 %r8378, %r8435, %r8434, %r193;
	// inline asm
	st.local.u32 	[%rd4+8], %r8378;
	ld.local.u32 	%r8383, [%rd1];
	// inline asm
	prmt.b32 %r8382, %r8383, %r11838, %r193;
	// inline asm
	st.local.v2.u32 	[%rd4], {%r11838, %r8382};
	st.local.v4.u32 	[%rd3], {%r11838, %r11838, %r11838, %r11838};
	st.local.v4.u32 	[%rd2], {%r11838, %r11838, %r11838, %r11838};
	st.local.v2.u32 	[%rd1+8], {%r11838, %r11838};
	mov.u64 	%rd5766, 0;
	st.local.u64 	[%rd1], %rd5766;
	mov.u32 	%r11839, %r11838;
	mov.u32 	%r11852, %r11838;
	mov.u32 	%r11853, %r11838;
	bra.uni 	BB5_767;

BB5_746:
	setp.eq.s32	%p418, %r5142, 29;
	mov.u32 	%r11841, %r11840;
	mov.u32 	%r11842, %r11840;
	mov.u32 	%r11843, %r11840;
	mov.u32 	%r11844, %r11840;
	mov.u32 	%r11845, %r11840;
	mov.u32 	%r11846, %r11840;
	mov.u32 	%r11847, %r11840;
	mov.u32 	%r11848, %r11840;
	mov.u32 	%r11849, %r11840;
	mov.u32 	%r11850, %r11840;
	mov.u32 	%r11851, %r11840;
	mov.u32 	%r11852, %r11840;
	mov.u32 	%r11853, %r11840;
	mov.u32 	%r11854, %r11840;
	mov.u32 	%r11855, %r11840;
	mov.u32 	%r11856, %r11840;
	mov.u32 	%r11857, %r11840;
	mov.u32 	%r11858, %r11840;
	mov.u32 	%r11859, %r11840;
	mov.u32 	%r11860, %r11840;
	mov.u32 	%r11861, %r11840;
	mov.u32 	%r11862, %r11840;
	mov.u32 	%r11863, %r11840;
	mov.u32 	%r11864, %r11840;
	mov.u32 	%r11865, %r11840;
	mov.u32 	%r11866, %r11840;
	mov.u32 	%r11867, %r11840;
	mov.u32 	%r11868, %r11840;
	mov.u32 	%r11869, %r11840;
	mov.u32 	%r11870, %r11840;
	mov.u32 	%r11871, %r11840;
	@%p418 bra 	BB5_747;
	bra.uni 	BB5_773;

BB5_747:
	mov.u32 	%r11838, 0;
	// inline asm
	prmt.b32 %r11870, %r11838, %r38, %r193;
	// inline asm
	ld.local.u32 	%r5483, [%rd62];
	ld.local.u32 	%r5484, [%rd8+8];
	// inline asm
	prmt.b32 %r11871, %r5483, %r5484, %r193;
	// inline asm
	ld.local.u32 	%r5487, [%rd8+8];
	ld.local.u32 	%r5488, [%rd8+4];
	// inline asm
	prmt.b32 %r11864, %r5487, %r5488, %r193;
	// inline asm
	ld.local.v2.u32 	{%r5614, %r5615}, [%rd8];
	// inline asm
	prmt.b32 %r11865, %r5615, %r5614, %r193;
	// inline asm
	ld.local.u32 	%r5495, [%rd8];
	ld.local.u32 	%r5496, [%rd7+12];
	// inline asm
	prmt.b32 %r11866, %r5495, %r5496, %r193;
	// inline asm
	ld.local.v2.u32 	{%r5616, %r5617}, [%rd7+8];
	// inline asm
	prmt.b32 %r11867, %r5617, %r5616, %r193;
	// inline asm
	ld.local.u32 	%r5503, [%rd7+8];
	ld.local.u32 	%r5504, [%rd7+4];
	// inline asm
	prmt.b32 %r11860, %r5503, %r5504, %r193;
	// inline asm
	ld.local.v2.u32 	{%r5618, %r5619}, [%rd7];
	// inline asm
	prmt.b32 %r11861, %r5619, %r5618, %r193;
	// inline asm
	ld.local.u32 	%r5511, [%rd7];
	ld.local.u32 	%r5512, [%rd6+12];
	// inline asm
	prmt.b32 %r11862, %r5511, %r5512, %r193;
	// inline asm
	ld.local.v2.u32 	{%r5620, %r5621}, [%rd6+8];
	// inline asm
	prmt.b32 %r11863, %r5621, %r5620, %r193;
	// inline asm
	ld.local.u32 	%r5519, [%rd6+8];
	ld.local.u32 	%r5520, [%rd6+4];
	// inline asm
	prmt.b32 %r11856, %r5519, %r5520, %r193;
	// inline asm
	ld.local.v2.u32 	{%r5622, %r5623}, [%rd6];
	// inline asm
	prmt.b32 %r11857, %r5623, %r5622, %r193;
	// inline asm
	ld.local.u32 	%r5527, [%rd6];
	ld.local.u32 	%r5528, [%rd5+12];
	// inline asm
	prmt.b32 %r11858, %r5527, %r5528, %r193;
	// inline asm
	ld.local.v2.u32 	{%r5624, %r5625}, [%rd5+8];
	// inline asm
	prmt.b32 %r11859, %r5625, %r5624, %r193;
	// inline asm
	ld.local.u32 	%r5535, [%rd5+8];
	ld.local.u32 	%r5536, [%rd5+4];
	// inline asm
	prmt.b32 %r11852, %r5535, %r5536, %r193;
	// inline asm
	ld.local.v2.u32 	{%r5626, %r5627}, [%rd5];
	// inline asm
	prmt.b32 %r11853, %r5627, %r5626, %r193;
	// inline asm
	ld.local.u32 	%r5543, [%rd5];
	ld.local.u32 	%r5544, [%rd4+12];
	// inline asm
	prmt.b32 %r11854, %r5543, %r5544, %r193;
	// inline asm
	ld.local.v2.u32 	{%r5628, %r5629}, [%rd4+8];
	// inline asm
	prmt.b32 %r11855, %r5629, %r5628, %r193;
	// inline asm
	ld.local.u32 	%r5551, [%rd4+8];
	ld.local.u32 	%r5552, [%rd4+4];
	// inline asm
	prmt.b32 %r11848, %r5551, %r5552, %r193;
	// inline asm
	ld.local.v2.u32 	{%r5630, %r5631}, [%rd4];
	// inline asm
	prmt.b32 %r11849, %r5631, %r5630, %r193;
	// inline asm
	ld.local.u32 	%r5559, [%rd4];
	ld.local.u32 	%r5560, [%rd3+12];
	// inline asm
	prmt.b32 %r11850, %r5559, %r5560, %r193;
	// inline asm
	ld.local.v2.u32 	{%r5632, %r5633}, [%rd3+8];
	// inline asm
	prmt.b32 %r11851, %r5633, %r5632, %r193;
	// inline asm
	ld.local.u32 	%r5567, [%rd3+8];
	ld.local.u32 	%r5568, [%rd3+4];
	// inline asm
	prmt.b32 %r11844, %r5567, %r5568, %r193;
	// inline asm
	ld.local.v2.u32 	{%r5634, %r5635}, [%rd3];
	// inline asm
	prmt.b32 %r11845, %r5635, %r5634, %r193;
	// inline asm
	ld.local.u32 	%r5575, [%rd3];
	ld.local.u32 	%r5576, [%rd2+12];
	// inline asm
	prmt.b32 %r11846, %r5575, %r5576, %r193;
	// inline asm
	ld.local.v2.u32 	{%r5636, %r5637}, [%rd2+8];
	// inline asm
	prmt.b32 %r11847, %r5637, %r5636, %r193;
	// inline asm
	ld.local.u32 	%r5583, [%rd2+8];
	ld.local.u32 	%r5584, [%rd2+4];
	// inline asm
	prmt.b32 %r11840, %r5583, %r5584, %r193;
	// inline asm
	ld.local.v2.u32 	{%r5638, %r5639}, [%rd2];
	// inline asm
	prmt.b32 %r11841, %r5639, %r5638, %r193;
	// inline asm
	ld.local.u32 	%r5591, [%rd2];
	ld.local.u32 	%r5592, [%rd1+12];
	// inline asm
	prmt.b32 %r11842, %r5591, %r5592, %r193;
	// inline asm
	ld.local.v2.u32 	{%r5640, %r5641}, [%rd1+8];
	// inline asm
	prmt.b32 %r11843, %r5641, %r5640, %r193;
	// inline asm
	ld.local.u32 	%r5599, [%rd1+8];
	ld.local.u32 	%r5600, [%rd1+4];
	// inline asm
	prmt.b32 %r5598, %r5599, %r5600, %r193;
	// inline asm
	st.local.u32 	[%rd62], %r5598;
	ld.local.v2.u32 	{%r5642, %r5643}, [%rd1];
	// inline asm
	prmt.b32 %r5602, %r5643, %r5642, %r193;
	// inline asm
	st.local.u32 	[%rd8+8], %r5602;
	ld.local.u32 	%r5607, [%rd1];
	// inline asm
	prmt.b32 %r5606, %r5607, %r11838, %r193;
	// inline asm
	st.local.v2.u32 	[%rd8], {%r11838, %r5606};
	st.local.v4.u32 	[%rd7], {%r11838, %r11838, %r11838, %r11838};
	st.local.v4.u32 	[%rd6], {%r11838, %r11838, %r11838, %r11838};
	st.local.v4.u32 	[%rd5], {%r11838, %r11838, %r11838, %r11838};
	st.local.v4.u32 	[%rd4], {%r11838, %r11838, %r11838, %r11838};
	st.local.v4.u32 	[%rd3], {%r11838, %r11838, %r11838, %r11838};
	st.local.v4.u32 	[%rd2], {%r11838, %r11838, %r11838, %r11838};
	st.local.v2.u32 	[%rd1+8], {%r11838, %r11838};
	mov.u64 	%rd5750, 0;
	st.local.u64 	[%rd1], %rd5750;
	mov.u32 	%r11839, %r11838;
	mov.u32 	%r11868, %r11838;
	mov.u32 	%r11869, %r11838;
	bra.uni 	BB5_773;

BB5_695:
	setp.eq.s32	%p455, %r5142, 3;
	mov.u32 	%r11841, %r11840;
	mov.u32 	%r11842, %r11840;
	mov.u32 	%r11843, %r11840;
	mov.u32 	%r11844, %r11840;
	mov.u32 	%r11845, %r11840;
	mov.u32 	%r11846, %r11840;
	mov.u32 	%r11847, %r11840;
	mov.u32 	%r11848, %r11840;
	mov.u32 	%r11849, %r11840;
	mov.u32 	%r11850, %r11840;
	mov.u32 	%r11851, %r11840;
	mov.u32 	%r11852, %r11840;
	mov.u32 	%r11853, %r11840;
	mov.u32 	%r11854, %r11840;
	mov.u32 	%r11855, %r11840;
	mov.u32 	%r11856, %r11840;
	mov.u32 	%r11857, %r11840;
	mov.u32 	%r11858, %r11840;
	mov.u32 	%r11859, %r11840;
	mov.u32 	%r11860, %r11840;
	mov.u32 	%r11861, %r11840;
	mov.u32 	%r11862, %r11840;
	mov.u32 	%r11863, %r11840;
	mov.u32 	%r11864, %r11840;
	mov.u32 	%r11865, %r11840;
	mov.u32 	%r11866, %r11840;
	mov.u32 	%r11867, %r11840;
	mov.u32 	%r11868, %r11840;
	mov.u32 	%r11869, %r11840;
	mov.u32 	%r11870, %r11840;
	mov.u32 	%r11871, %r11840;
	@%p455 bra 	BB5_696;
	bra.uni 	BB5_773;

BB5_696:
	mov.u32 	%r11838, 0;
	// inline asm
	prmt.b32 %r11840, %r11838, %r38, %r193;
	// inline asm
	ld.local.u32 	%r10124, [%rd62];
	ld.local.u32 	%r10125, [%rd8+8];
	// inline asm
	prmt.b32 %r11841, %r10124, %r10125, %r193;
	// inline asm
	ld.local.u32 	%r10128, [%rd8+8];
	ld.local.u32 	%r10129, [%rd8+4];
	// inline asm
	prmt.b32 %r11842, %r10128, %r10129, %r193;
	// inline asm
	ld.local.v2.u32 	{%r10281, %r10282}, [%rd8];
	// inline asm
	prmt.b32 %r11843, %r10282, %r10281, %r193;
	// inline asm
	ld.local.u32 	%r10136, [%rd8];
	ld.local.u32 	%r10137, [%rd7+12];
	// inline asm
	prmt.b32 %r10135, %r10136, %r10137, %r193;
	// inline asm
	st.local.u32 	[%rd62], %r10135;
	ld.local.v2.u32 	{%r10283, %r10284}, [%rd7+8];
	// inline asm
	prmt.b32 %r10139, %r10284, %r10283, %r193;
	// inline asm
	st.local.u32 	[%rd8+8], %r10139;
	ld.local.u32 	%r10144, [%rd7+8];
	ld.local.u32 	%r10145, [%rd7+4];
	// inline asm
	prmt.b32 %r10143, %r10144, %r10145, %r193;
	// inline asm
	st.local.u32 	[%rd8+4], %r10143;
	ld.local.v2.u32 	{%r10285, %r10286}, [%rd7];
	// inline asm
	prmt.b32 %r10147, %r10286, %r10285, %r193;
	// inline asm
	st.local.u32 	[%rd8], %r10147;
	ld.local.u32 	%r10152, [%rd7];
	ld.local.u32 	%r10153, [%rd6+12];
	// inline asm
	prmt.b32 %r10151, %r10152, %r10153, %r193;
	// inline asm
	st.local.u32 	[%rd7+12], %r10151;
	ld.local.v2.u32 	{%r10287, %r10288}, [%rd6+8];
	// inline asm
	prmt.b32 %r10155, %r10288, %r10287, %r193;
	// inline asm
	st.local.u32 	[%rd7+8], %r10155;
	ld.local.u32 	%r10160, [%rd6+8];
	ld.local.u32 	%r10161, [%rd6+4];
	// inline asm
	prmt.b32 %r10159, %r10160, %r10161, %r193;
	// inline asm
	st.local.u32 	[%rd7+4], %r10159;
	ld.local.v2.u32 	{%r10289, %r10290}, [%rd6];
	// inline asm
	prmt.b32 %r10163, %r10290, %r10289, %r193;
	// inline asm
	st.local.u32 	[%rd7], %r10163;
	ld.local.u32 	%r10168, [%rd6];
	ld.local.u32 	%r10169, [%rd5+12];
	// inline asm
	prmt.b32 %r10167, %r10168, %r10169, %r193;
	// inline asm
	st.local.u32 	[%rd6+12], %r10167;
	ld.local.v2.u32 	{%r10291, %r10292}, [%rd5+8];
	// inline asm
	prmt.b32 %r10171, %r10292, %r10291, %r193;
	// inline asm
	st.local.u32 	[%rd6+8], %r10171;
	ld.local.u32 	%r10176, [%rd5+8];
	ld.local.u32 	%r10177, [%rd5+4];
	// inline asm
	prmt.b32 %r10175, %r10176, %r10177, %r193;
	// inline asm
	st.local.u32 	[%rd6+4], %r10175;
	ld.local.v2.u32 	{%r10293, %r10294}, [%rd5];
	// inline asm
	prmt.b32 %r10179, %r10294, %r10293, %r193;
	// inline asm
	st.local.u32 	[%rd6], %r10179;
	ld.local.u32 	%r10184, [%rd5];
	ld.local.u32 	%r10185, [%rd4+12];
	// inline asm
	prmt.b32 %r10183, %r10184, %r10185, %r193;
	// inline asm
	st.local.u32 	[%rd5+12], %r10183;
	ld.local.v2.u32 	{%r10295, %r10296}, [%rd4+8];
	// inline asm
	prmt.b32 %r10187, %r10296, %r10295, %r193;
	// inline asm
	st.local.u32 	[%rd5+8], %r10187;
	ld.local.u32 	%r10192, [%rd4+8];
	ld.local.u32 	%r10193, [%rd4+4];
	// inline asm
	prmt.b32 %r10191, %r10192, %r10193, %r193;
	// inline asm
	st.local.u32 	[%rd5+4], %r10191;
	ld.local.v2.u32 	{%r10297, %r10298}, [%rd4];
	// inline asm
	prmt.b32 %r10195, %r10298, %r10297, %r193;
	// inline asm
	st.local.u32 	[%rd5], %r10195;
	ld.local.u32 	%r10200, [%rd4];
	ld.local.u32 	%r10201, [%rd3+12];
	// inline asm
	prmt.b32 %r10199, %r10200, %r10201, %r193;
	// inline asm
	st.local.u32 	[%rd4+12], %r10199;
	ld.local.v2.u32 	{%r10299, %r10300}, [%rd3+8];
	// inline asm
	prmt.b32 %r10203, %r10300, %r10299, %r193;
	// inline asm
	st.local.u32 	[%rd4+8], %r10203;
	ld.local.u32 	%r10208, [%rd3+8];
	ld.local.u32 	%r10209, [%rd3+4];
	// inline asm
	prmt.b32 %r10207, %r10208, %r10209, %r193;
	// inline asm
	st.local.u32 	[%rd4+4], %r10207;
	ld.local.v2.u32 	{%r10301, %r10302}, [%rd3];
	// inline asm
	prmt.b32 %r10211, %r10302, %r10301, %r193;
	// inline asm
	st.local.u32 	[%rd4], %r10211;
	ld.local.u32 	%r10216, [%rd3];
	ld.local.u32 	%r10217, [%rd2+12];
	// inline asm
	prmt.b32 %r10215, %r10216, %r10217, %r193;
	// inline asm
	st.local.u32 	[%rd3+12], %r10215;
	ld.local.v2.u32 	{%r10303, %r10304}, [%rd2+8];
	// inline asm
	prmt.b32 %r10219, %r10304, %r10303, %r193;
	// inline asm
	st.local.u32 	[%rd3+8], %r10219;
	ld.local.u32 	%r10224, [%rd2+8];
	ld.local.u32 	%r10225, [%rd2+4];
	// inline asm
	prmt.b32 %r10223, %r10224, %r10225, %r193;
	// inline asm
	st.local.u32 	[%rd3+4], %r10223;
	ld.local.v2.u32 	{%r10305, %r10306}, [%rd2];
	// inline asm
	prmt.b32 %r10227, %r10306, %r10305, %r193;
	// inline asm
	st.local.u32 	[%rd3], %r10227;
	ld.local.u32 	%r10232, [%rd2];
	ld.local.u32 	%r10233, [%rd1+12];
	// inline asm
	prmt.b32 %r10231, %r10232, %r10233, %r193;
	// inline asm
	st.local.u32 	[%rd2+12], %r10231;
	ld.local.v2.u32 	{%r10307, %r10308}, [%rd1+8];
	// inline asm
	prmt.b32 %r10235, %r10308, %r10307, %r193;
	// inline asm
	st.local.u32 	[%rd2+8], %r10235;
	ld.local.u32 	%r10240, [%rd1+8];
	ld.local.u32 	%r10241, [%rd1+4];
	// inline asm
	prmt.b32 %r10239, %r10240, %r10241, %r193;
	// inline asm
	st.local.u32 	[%rd2+4], %r10239;
	ld.local.v2.u32 	{%r10309, %r10310}, [%rd1];
	// inline asm
	prmt.b32 %r10243, %r10310, %r10309, %r193;
	// inline asm
	st.local.u32 	[%rd2], %r10243;
	ld.local.u32 	%r10248, [%rd1];
	// inline asm
	prmt.b32 %r10247, %r10248, %r11838, %r193;
	// inline asm
	st.local.v2.u32 	[%rd1+8], {%r11838, %r10247};
	mov.u64 	%rd5776, 0;
	st.local.u64 	[%rd1], %rd5776;
	mov.u32 	%r11839, %r11838;

BB5_697:
	mov.u32 	%r11844, %r11838;
	mov.u32 	%r11845, %r11838;
	mov.u32 	%r11846, %r11838;
	mov.u32 	%r11847, %r11838;
	bra.uni 	BB5_765;

BB5_727:
	setp.eq.s32	%p432, %r5142, 19;
	mov.u32 	%r11841, %r11840;
	mov.u32 	%r11842, %r11840;
	mov.u32 	%r11843, %r11840;
	mov.u32 	%r11844, %r11840;
	mov.u32 	%r11845, %r11840;
	mov.u32 	%r11846, %r11840;
	mov.u32 	%r11847, %r11840;
	mov.u32 	%r11848, %r11840;
	mov.u32 	%r11849, %r11840;
	mov.u32 	%r11850, %r11840;
	mov.u32 	%r11851, %r11840;
	mov.u32 	%r11852, %r11840;
	mov.u32 	%r11853, %r11840;
	mov.u32 	%r11854, %r11840;
	mov.u32 	%r11855, %r11840;
	mov.u32 	%r11856, %r11840;
	mov.u32 	%r11857, %r11840;
	mov.u32 	%r11858, %r11840;
	mov.u32 	%r11859, %r11840;
	mov.u32 	%r11860, %r11840;
	mov.u32 	%r11861, %r11840;
	mov.u32 	%r11862, %r11840;
	mov.u32 	%r11863, %r11840;
	mov.u32 	%r11864, %r11840;
	mov.u32 	%r11865, %r11840;
	mov.u32 	%r11866, %r11840;
	mov.u32 	%r11867, %r11840;
	mov.u32 	%r11868, %r11840;
	mov.u32 	%r11869, %r11840;
	mov.u32 	%r11870, %r11840;
	mov.u32 	%r11871, %r11840;
	@%p432 bra 	BB5_728;
	bra.uni 	BB5_773;

BB5_728:
	mov.u32 	%r11838, 0;
	// inline asm
	prmt.b32 %r11856, %r11838, %r38, %r193;
	// inline asm
	ld.local.u32 	%r7188, [%rd62];
	ld.local.u32 	%r7189, [%rd8+8];
	// inline asm
	prmt.b32 %r11857, %r7188, %r7189, %r193;
	// inline asm
	ld.local.u32 	%r7192, [%rd8+8];
	ld.local.u32 	%r7193, [%rd8+4];
	// inline asm
	prmt.b32 %r11858, %r7192, %r7193, %r193;
	// inline asm
	ld.local.v2.u32 	{%r7329, %r7330}, [%rd8];
	// inline asm
	prmt.b32 %r11859, %r7330, %r7329, %r193;
	// inline asm
	ld.local.u32 	%r7200, [%rd8];
	ld.local.u32 	%r7201, [%rd7+12];
	// inline asm
	prmt.b32 %r11852, %r7200, %r7201, %r193;
	// inline asm
	ld.local.v2.u32 	{%r7331, %r7332}, [%rd7+8];
	// inline asm
	prmt.b32 %r11853, %r7332, %r7331, %r193;
	// inline asm
	ld.local.u32 	%r7208, [%rd7+8];
	ld.local.u32 	%r7209, [%rd7+4];
	// inline asm
	prmt.b32 %r11854, %r7208, %r7209, %r193;
	// inline asm
	ld.local.v2.u32 	{%r7333, %r7334}, [%rd7];
	// inline asm
	prmt.b32 %r11855, %r7334, %r7333, %r193;
	// inline asm
	ld.local.u32 	%r7216, [%rd7];
	ld.local.u32 	%r7217, [%rd6+12];
	// inline asm
	prmt.b32 %r11848, %r7216, %r7217, %r193;
	// inline asm
	ld.local.v2.u32 	{%r7335, %r7336}, [%rd6+8];
	// inline asm
	prmt.b32 %r11849, %r7336, %r7335, %r193;
	// inline asm
	ld.local.u32 	%r7224, [%rd6+8];
	ld.local.u32 	%r7225, [%rd6+4];
	// inline asm
	prmt.b32 %r11850, %r7224, %r7225, %r193;
	// inline asm
	ld.local.v2.u32 	{%r7337, %r7338}, [%rd6];
	// inline asm
	prmt.b32 %r11851, %r7338, %r7337, %r193;
	// inline asm
	ld.local.u32 	%r7232, [%rd6];
	ld.local.u32 	%r7233, [%rd5+12];
	// inline asm
	prmt.b32 %r11844, %r7232, %r7233, %r193;
	// inline asm
	ld.local.v2.u32 	{%r7339, %r7340}, [%rd5+8];
	// inline asm
	prmt.b32 %r11845, %r7340, %r7339, %r193;
	// inline asm
	ld.local.u32 	%r7240, [%rd5+8];
	ld.local.u32 	%r7241, [%rd5+4];
	// inline asm
	prmt.b32 %r11846, %r7240, %r7241, %r193;
	// inline asm
	ld.local.v2.u32 	{%r7341, %r7342}, [%rd5];
	// inline asm
	prmt.b32 %r11847, %r7342, %r7341, %r193;
	// inline asm
	ld.local.u32 	%r7248, [%rd5];
	ld.local.u32 	%r7249, [%rd4+12];
	// inline asm
	prmt.b32 %r11840, %r7248, %r7249, %r193;
	// inline asm
	ld.local.v2.u32 	{%r7343, %r7344}, [%rd4+8];
	// inline asm
	prmt.b32 %r11841, %r7344, %r7343, %r193;
	// inline asm
	ld.local.u32 	%r7256, [%rd4+8];
	ld.local.u32 	%r7257, [%rd4+4];
	// inline asm
	prmt.b32 %r11842, %r7256, %r7257, %r193;
	// inline asm
	ld.local.v2.u32 	{%r7345, %r7346}, [%rd4];
	// inline asm
	prmt.b32 %r11843, %r7346, %r7345, %r193;
	// inline asm
	ld.local.u32 	%r7264, [%rd4];
	ld.local.u32 	%r7265, [%rd3+12];
	// inline asm
	prmt.b32 %r7263, %r7264, %r7265, %r193;
	// inline asm
	st.local.u32 	[%rd62], %r7263;
	ld.local.v2.u32 	{%r7347, %r7348}, [%rd3+8];
	// inline asm
	prmt.b32 %r7267, %r7348, %r7347, %r193;
	// inline asm
	st.local.u32 	[%rd8+8], %r7267;
	ld.local.u32 	%r7272, [%rd3+8];
	ld.local.u32 	%r7273, [%rd3+4];
	// inline asm
	prmt.b32 %r7271, %r7272, %r7273, %r193;
	// inline asm
	st.local.u32 	[%rd8+4], %r7271;
	ld.local.v2.u32 	{%r7349, %r7350}, [%rd3];
	// inline asm
	prmt.b32 %r7275, %r7350, %r7349, %r193;
	// inline asm
	st.local.u32 	[%rd8], %r7275;
	ld.local.u32 	%r7280, [%rd3];
	ld.local.u32 	%r7281, [%rd2+12];
	// inline asm
	prmt.b32 %r7279, %r7280, %r7281, %r193;
	// inline asm
	st.local.u32 	[%rd7+12], %r7279;
	ld.local.v2.u32 	{%r7351, %r7352}, [%rd2+8];
	// inline asm
	prmt.b32 %r7283, %r7352, %r7351, %r193;
	// inline asm
	st.local.u32 	[%rd7+8], %r7283;
	ld.local.u32 	%r7288, [%rd2+8];
	ld.local.u32 	%r7289, [%rd2+4];
	// inline asm
	prmt.b32 %r7287, %r7288, %r7289, %r193;
	// inline asm
	st.local.u32 	[%rd7+4], %r7287;
	ld.local.v2.u32 	{%r7353, %r7354}, [%rd2];
	// inline asm
	prmt.b32 %r7291, %r7354, %r7353, %r193;
	// inline asm
	st.local.u32 	[%rd7], %r7291;
	ld.local.u32 	%r7296, [%rd2];
	ld.local.u32 	%r7297, [%rd1+12];
	// inline asm
	prmt.b32 %r7295, %r7296, %r7297, %r193;
	// inline asm
	st.local.u32 	[%rd6+12], %r7295;
	ld.local.v2.u32 	{%r7355, %r7356}, [%rd1+8];
	// inline asm
	prmt.b32 %r7299, %r7356, %r7355, %r193;
	// inline asm
	st.local.u32 	[%rd6+8], %r7299;
	ld.local.u32 	%r7304, [%rd1+8];
	ld.local.u32 	%r7305, [%rd1+4];
	// inline asm
	prmt.b32 %r7303, %r7304, %r7305, %r193;
	// inline asm
	st.local.u32 	[%rd6+4], %r7303;
	ld.local.v2.u32 	{%r7357, %r7358}, [%rd1];
	// inline asm
	prmt.b32 %r7307, %r7358, %r7357, %r193;
	// inline asm
	st.local.u32 	[%rd6], %r7307;
	ld.local.u32 	%r7312, [%rd1];
	// inline asm
	prmt.b32 %r7311, %r7312, %r11838, %r193;
	// inline asm
	st.local.v4.u32 	[%rd5], {%r11838, %r11838, %r11838, %r7311};
	st.local.v4.u32 	[%rd4], {%r11838, %r11838, %r11838, %r11838};
	st.local.v4.u32 	[%rd3], {%r11838, %r11838, %r11838, %r11838};
	st.local.v4.u32 	[%rd2], {%r11838, %r11838, %r11838, %r11838};
	st.local.v2.u32 	[%rd1+8], {%r11838, %r11838};
	mov.u64 	%rd5760, 0;
	st.local.u64 	[%rd1], %rd5760;
	mov.u32 	%r11839, %r11838;
	bra.uni 	BB5_768;

BB5_711:
	setp.eq.s32	%p444, %r5142, 11;
	mov.u32 	%r11841, %r11840;
	mov.u32 	%r11842, %r11840;
	mov.u32 	%r11843, %r11840;
	mov.u32 	%r11844, %r11840;
	mov.u32 	%r11845, %r11840;
	mov.u32 	%r11846, %r11840;
	mov.u32 	%r11847, %r11840;
	mov.u32 	%r11848, %r11840;
	mov.u32 	%r11849, %r11840;
	mov.u32 	%r11850, %r11840;
	mov.u32 	%r11851, %r11840;
	mov.u32 	%r11852, %r11840;
	mov.u32 	%r11853, %r11840;
	mov.u32 	%r11854, %r11840;
	mov.u32 	%r11855, %r11840;
	mov.u32 	%r11856, %r11840;
	mov.u32 	%r11857, %r11840;
	mov.u32 	%r11858, %r11840;
	mov.u32 	%r11859, %r11840;
	mov.u32 	%r11860, %r11840;
	mov.u32 	%r11861, %r11840;
	mov.u32 	%r11862, %r11840;
	mov.u32 	%r11863, %r11840;
	mov.u32 	%r11864, %r11840;
	mov.u32 	%r11865, %r11840;
	mov.u32 	%r11866, %r11840;
	mov.u32 	%r11867, %r11840;
	mov.u32 	%r11868, %r11840;
	mov.u32 	%r11869, %r11840;
	mov.u32 	%r11870, %r11840;
	mov.u32 	%r11871, %r11840;
	@%p444 bra 	BB5_712;
	bra.uni 	BB5_773;

BB5_712:
	mov.u32 	%r11838, 0;
	// inline asm
	prmt.b32 %r11848, %r11838, %r38, %r193;
	// inline asm
	ld.local.u32 	%r8624, [%rd62];
	ld.local.u32 	%r8625, [%rd8+8];
	// inline asm
	prmt.b32 %r11849, %r8624, %r8625, %r193;
	// inline asm
	ld.local.u32 	%r8628, [%rd8+8];
	ld.local.u32 	%r8629, [%rd8+4];
	// inline asm
	prmt.b32 %r11850, %r8628, %r8629, %r193;
	// inline asm
	ld.local.v2.u32 	{%r8773, %r8774}, [%rd8];
	// inline asm
	prmt.b32 %r11851, %r8774, %r8773, %r193;
	// inline asm
	ld.local.u32 	%r8636, [%rd8];
	ld.local.u32 	%r8637, [%rd7+12];
	// inline asm
	prmt.b32 %r11844, %r8636, %r8637, %r193;
	// inline asm
	ld.local.v2.u32 	{%r8775, %r8776}, [%rd7+8];
	// inline asm
	prmt.b32 %r11845, %r8776, %r8775, %r193;
	// inline asm
	ld.local.u32 	%r8644, [%rd7+8];
	ld.local.u32 	%r8645, [%rd7+4];
	// inline asm
	prmt.b32 %r11846, %r8644, %r8645, %r193;
	// inline asm
	ld.local.v2.u32 	{%r8777, %r8778}, [%rd7];
	// inline asm
	prmt.b32 %r11847, %r8778, %r8777, %r193;
	// inline asm
	ld.local.u32 	%r8652, [%rd7];
	ld.local.u32 	%r8653, [%rd6+12];
	// inline asm
	prmt.b32 %r11840, %r8652, %r8653, %r193;
	// inline asm
	ld.local.v2.u32 	{%r8779, %r8780}, [%rd6+8];
	// inline asm
	prmt.b32 %r11841, %r8780, %r8779, %r193;
	// inline asm
	ld.local.u32 	%r8660, [%rd6+8];
	ld.local.u32 	%r8661, [%rd6+4];
	// inline asm
	prmt.b32 %r11842, %r8660, %r8661, %r193;
	// inline asm
	ld.local.v2.u32 	{%r8781, %r8782}, [%rd6];
	// inline asm
	prmt.b32 %r11843, %r8782, %r8781, %r193;
	// inline asm
	ld.local.u32 	%r8668, [%rd6];
	ld.local.u32 	%r8669, [%rd5+12];
	// inline asm
	prmt.b32 %r8667, %r8668, %r8669, %r193;
	// inline asm
	st.local.u32 	[%rd62], %r8667;
	ld.local.v2.u32 	{%r8783, %r8784}, [%rd5+8];
	// inline asm
	prmt.b32 %r8671, %r8784, %r8783, %r193;
	// inline asm
	st.local.u32 	[%rd8+8], %r8671;
	ld.local.u32 	%r8676, [%rd5+8];
	ld.local.u32 	%r8677, [%rd5+4];
	// inline asm
	prmt.b32 %r8675, %r8676, %r8677, %r193;
	// inline asm
	st.local.u32 	[%rd8+4], %r8675;
	ld.local.v2.u32 	{%r8785, %r8786}, [%rd5];
	// inline asm
	prmt.b32 %r8679, %r8786, %r8785, %r193;
	// inline asm
	st.local.u32 	[%rd8], %r8679;
	ld.local.u32 	%r8684, [%rd5];
	ld.local.u32 	%r8685, [%rd4+12];
	// inline asm
	prmt.b32 %r8683, %r8684, %r8685, %r193;
	// inline asm
	st.local.u32 	[%rd7+12], %r8683;
	ld.local.v2.u32 	{%r8787, %r8788}, [%rd4+8];
	// inline asm
	prmt.b32 %r8687, %r8788, %r8787, %r193;
	// inline asm
	st.local.u32 	[%rd7+8], %r8687;
	ld.local.u32 	%r8692, [%rd4+8];
	ld.local.u32 	%r8693, [%rd4+4];
	// inline asm
	prmt.b32 %r8691, %r8692, %r8693, %r193;
	// inline asm
	st.local.u32 	[%rd7+4], %r8691;
	ld.local.v2.u32 	{%r8789, %r8790}, [%rd4];
	// inline asm
	prmt.b32 %r8695, %r8790, %r8789, %r193;
	// inline asm
	st.local.u32 	[%rd7], %r8695;
	ld.local.u32 	%r8700, [%rd4];
	ld.local.u32 	%r8701, [%rd3+12];
	// inline asm
	prmt.b32 %r8699, %r8700, %r8701, %r193;
	// inline asm
	st.local.u32 	[%rd6+12], %r8699;
	ld.local.v2.u32 	{%r8791, %r8792}, [%rd3+8];
	// inline asm
	prmt.b32 %r8703, %r8792, %r8791, %r193;
	// inline asm
	st.local.u32 	[%rd6+8], %r8703;
	ld.local.u32 	%r8708, [%rd3+8];
	ld.local.u32 	%r8709, [%rd3+4];
	// inline asm
	prmt.b32 %r8707, %r8708, %r8709, %r193;
	// inline asm
	st.local.u32 	[%rd6+4], %r8707;
	ld.local.v2.u32 	{%r8793, %r8794}, [%rd3];
	// inline asm
	prmt.b32 %r8711, %r8794, %r8793, %r193;
	// inline asm
	st.local.u32 	[%rd6], %r8711;
	ld.local.u32 	%r8716, [%rd3];
	ld.local.u32 	%r8717, [%rd2+12];
	// inline asm
	prmt.b32 %r8715, %r8716, %r8717, %r193;
	// inline asm
	st.local.u32 	[%rd5+12], %r8715;
	ld.local.v2.u32 	{%r8795, %r8796}, [%rd2+8];
	// inline asm
	prmt.b32 %r8719, %r8796, %r8795, %r193;
	// inline asm
	st.local.u32 	[%rd5+8], %r8719;
	ld.local.u32 	%r8724, [%rd2+8];
	ld.local.u32 	%r8725, [%rd2+4];
	// inline asm
	prmt.b32 %r8723, %r8724, %r8725, %r193;
	// inline asm
	st.local.u32 	[%rd5+4], %r8723;
	ld.local.v2.u32 	{%r8797, %r8798}, [%rd2];
	// inline asm
	prmt.b32 %r8727, %r8798, %r8797, %r193;
	// inline asm
	st.local.u32 	[%rd5], %r8727;
	ld.local.u32 	%r8732, [%rd2];
	ld.local.u32 	%r8733, [%rd1+12];
	// inline asm
	prmt.b32 %r8731, %r8732, %r8733, %r193;
	// inline asm
	st.local.u32 	[%rd4+12], %r8731;
	ld.local.v2.u32 	{%r8799, %r8800}, [%rd1+8];
	// inline asm
	prmt.b32 %r8735, %r8800, %r8799, %r193;
	// inline asm
	st.local.u32 	[%rd4+8], %r8735;
	ld.local.u32 	%r8740, [%rd1+8];
	ld.local.u32 	%r8741, [%rd1+4];
	// inline asm
	prmt.b32 %r8739, %r8740, %r8741, %r193;
	// inline asm
	st.local.u32 	[%rd4+4], %r8739;
	ld.local.v2.u32 	{%r8801, %r8802}, [%rd1];
	// inline asm
	prmt.b32 %r8743, %r8802, %r8801, %r193;
	// inline asm
	st.local.u32 	[%rd4], %r8743;
	ld.local.u32 	%r8748, [%rd1];
	// inline asm
	prmt.b32 %r8747, %r8748, %r11838, %r193;
	// inline asm
	st.local.v4.u32 	[%rd3], {%r11838, %r11838, %r11838, %r8747};
	st.local.v4.u32 	[%rd2], {%r11838, %r11838, %r11838, %r11838};
	st.local.v2.u32 	[%rd1+8], {%r11838, %r11838};
	mov.u64 	%rd5768, 0;
	st.local.u64 	[%rd1], %rd5768;
	mov.u32 	%r11839, %r11838;
	bra.uni 	BB5_766;

BB5_742:
	setp.eq.s32	%p421, %r5142, 27;
	mov.u32 	%r11841, %r11840;
	mov.u32 	%r11842, %r11840;
	mov.u32 	%r11843, %r11840;
	mov.u32 	%r11844, %r11840;
	mov.u32 	%r11845, %r11840;
	mov.u32 	%r11846, %r11840;
	mov.u32 	%r11847, %r11840;
	mov.u32 	%r11848, %r11840;
	mov.u32 	%r11849, %r11840;
	mov.u32 	%r11850, %r11840;
	mov.u32 	%r11851, %r11840;
	mov.u32 	%r11852, %r11840;
	mov.u32 	%r11853, %r11840;
	mov.u32 	%r11854, %r11840;
	mov.u32 	%r11855, %r11840;
	mov.u32 	%r11856, %r11840;
	mov.u32 	%r11857, %r11840;
	mov.u32 	%r11858, %r11840;
	mov.u32 	%r11859, %r11840;
	mov.u32 	%r11860, %r11840;
	mov.u32 	%r11861, %r11840;
	mov.u32 	%r11862, %r11840;
	mov.u32 	%r11863, %r11840;
	mov.u32 	%r11864, %r11840;
	mov.u32 	%r11865, %r11840;
	mov.u32 	%r11866, %r11840;
	mov.u32 	%r11867, %r11840;
	mov.u32 	%r11868, %r11840;
	mov.u32 	%r11869, %r11840;
	mov.u32 	%r11870, %r11840;
	mov.u32 	%r11871, %r11840;
	@%p421 bra 	BB5_743;
	bra.uni 	BB5_773;

BB5_743:
	mov.u32 	%r11838, 0;
	// inline asm
	prmt.b32 %r11864, %r11838, %r38, %r193;
	// inline asm
	ld.local.u32 	%r5816, [%rd62];
	ld.local.u32 	%r5817, [%rd8+8];
	// inline asm
	prmt.b32 %r11865, %r5816, %r5817, %r193;
	// inline asm
	ld.local.u32 	%r5820, [%rd8+8];
	ld.local.u32 	%r5821, [%rd8+4];
	// inline asm
	prmt.b32 %r11866, %r5820, %r5821, %r193;
	// inline asm
	ld.local.v2.u32 	{%r5949, %r5950}, [%rd8];
	// inline asm
	prmt.b32 %r11867, %r5950, %r5949, %r193;
	// inline asm
	ld.local.u32 	%r5828, [%rd8];
	ld.local.u32 	%r5829, [%rd7+12];
	// inline asm
	prmt.b32 %r11860, %r5828, %r5829, %r193;
	// inline asm
	ld.local.v2.u32 	{%r5951, %r5952}, [%rd7+8];
	// inline asm
	prmt.b32 %r11861, %r5952, %r5951, %r193;
	// inline asm
	ld.local.u32 	%r5836, [%rd7+8];
	ld.local.u32 	%r5837, [%rd7+4];
	// inline asm
	prmt.b32 %r11862, %r5836, %r5837, %r193;
	// inline asm
	ld.local.v2.u32 	{%r5953, %r5954}, [%rd7];
	// inline asm
	prmt.b32 %r11863, %r5954, %r5953, %r193;
	// inline asm
	ld.local.u32 	%r5844, [%rd7];
	ld.local.u32 	%r5845, [%rd6+12];
	// inline asm
	prmt.b32 %r11856, %r5844, %r5845, %r193;
	// inline asm
	ld.local.v2.u32 	{%r5955, %r5956}, [%rd6+8];
	// inline asm
	prmt.b32 %r11857, %r5956, %r5955, %r193;
	// inline asm
	ld.local.u32 	%r5852, [%rd6+8];
	ld.local.u32 	%r5853, [%rd6+4];
	// inline asm
	prmt.b32 %r11858, %r5852, %r5853, %r193;
	// inline asm
	ld.local.v2.u32 	{%r5957, %r5958}, [%rd6];
	// inline asm
	prmt.b32 %r11859, %r5958, %r5957, %r193;
	// inline asm
	ld.local.u32 	%r5860, [%rd6];
	ld.local.u32 	%r5861, [%rd5+12];
	// inline asm
	prmt.b32 %r11852, %r5860, %r5861, %r193;
	// inline asm
	ld.local.v2.u32 	{%r5959, %r5960}, [%rd5+8];
	// inline asm
	prmt.b32 %r11853, %r5960, %r5959, %r193;
	// inline asm
	ld.local.u32 	%r5868, [%rd5+8];
	ld.local.u32 	%r5869, [%rd5+4];
	// inline asm
	prmt.b32 %r11854, %r5868, %r5869, %r193;
	// inline asm
	ld.local.v2.u32 	{%r5961, %r5962}, [%rd5];
	// inline asm
	prmt.b32 %r11855, %r5962, %r5961, %r193;
	// inline asm
	ld.local.u32 	%r5876, [%rd5];
	ld.local.u32 	%r5877, [%rd4+12];
	// inline asm
	prmt.b32 %r11848, %r5876, %r5877, %r193;
	// inline asm
	ld.local.v2.u32 	{%r5963, %r5964}, [%rd4+8];
	// inline asm
	prmt.b32 %r11849, %r5964, %r5963, %r193;
	// inline asm
	ld.local.u32 	%r5884, [%rd4+8];
	ld.local.u32 	%r5885, [%rd4+4];
	// inline asm
	prmt.b32 %r11850, %r5884, %r5885, %r193;
	// inline asm
	ld.local.v2.u32 	{%r5965, %r5966}, [%rd4];
	// inline asm
	prmt.b32 %r11851, %r5966, %r5965, %r193;
	// inline asm
	ld.local.u32 	%r5892, [%rd4];
	ld.local.u32 	%r5893, [%rd3+12];
	// inline asm
	prmt.b32 %r11844, %r5892, %r5893, %r193;
	// inline asm
	ld.local.v2.u32 	{%r5967, %r5968}, [%rd3+8];
	// inline asm
	prmt.b32 %r11845, %r5968, %r5967, %r193;
	// inline asm
	ld.local.u32 	%r5900, [%rd3+8];
	ld.local.u32 	%r5901, [%rd3+4];
	// inline asm
	prmt.b32 %r11846, %r5900, %r5901, %r193;
	// inline asm
	ld.local.v2.u32 	{%r5969, %r5970}, [%rd3];
	// inline asm
	prmt.b32 %r11847, %r5970, %r5969, %r193;
	// inline asm
	ld.local.u32 	%r5908, [%rd3];
	ld.local.u32 	%r5909, [%rd2+12];
	// inline asm
	prmt.b32 %r11840, %r5908, %r5909, %r193;
	// inline asm
	ld.local.v2.u32 	{%r5971, %r5972}, [%rd2+8];
	// inline asm
	prmt.b32 %r11841, %r5972, %r5971, %r193;
	// inline asm
	ld.local.u32 	%r5916, [%rd2+8];
	ld.local.u32 	%r5917, [%rd2+4];
	// inline asm
	prmt.b32 %r11842, %r5916, %r5917, %r193;
	// inline asm
	ld.local.v2.u32 	{%r5973, %r5974}, [%rd2];
	// inline asm
	prmt.b32 %r11843, %r5974, %r5973, %r193;
	// inline asm
	ld.local.u32 	%r5924, [%rd2];
	ld.local.u32 	%r5925, [%rd1+12];
	// inline asm
	prmt.b32 %r5923, %r5924, %r5925, %r193;
	// inline asm
	st.local.u32 	[%rd62], %r5923;
	ld.local.v2.u32 	{%r5975, %r5976}, [%rd1+8];
	// inline asm
	prmt.b32 %r5927, %r5976, %r5975, %r193;
	// inline asm
	st.local.u32 	[%rd8+8], %r5927;
	ld.local.u32 	%r5932, [%rd1+8];
	ld.local.u32 	%r5933, [%rd1+4];
	// inline asm
	prmt.b32 %r5931, %r5932, %r5933, %r193;
	// inline asm
	st.local.u32 	[%rd8+4], %r5931;
	ld.local.v2.u32 	{%r5977, %r5978}, [%rd1];
	// inline asm
	prmt.b32 %r5935, %r5978, %r5977, %r193;
	// inline asm
	st.local.u32 	[%rd8], %r5935;
	ld.local.u32 	%r5940, [%rd1];
	// inline asm
	prmt.b32 %r5939, %r5940, %r11838, %r193;
	// inline asm
	st.local.v4.u32 	[%rd7], {%r11838, %r11838, %r11838, %r5939};
	st.local.v4.u32 	[%rd6], {%r11838, %r11838, %r11838, %r11838};
	st.local.v4.u32 	[%rd5], {%r11838, %r11838, %r11838, %r11838};
	st.local.v4.u32 	[%rd4], {%r11838, %r11838, %r11838, %r11838};
	st.local.v4.u32 	[%rd3], {%r11838, %r11838, %r11838, %r11838};
	st.local.v4.u32 	[%rd2], {%r11838, %r11838, %r11838, %r11838};
	st.local.v2.u32 	[%rd1+8], {%r11838, %r11838};
	mov.u64 	%rd5752, 0;
	st.local.u64 	[%rd1], %rd5752;
	mov.u32 	%r11839, %r11838;
	bra.uni 	BB5_770;

BB5_703:
	setp.eq.s32	%p450, %r5142, 7;
	mov.u32 	%r11841, %r11840;
	mov.u32 	%r11842, %r11840;
	mov.u32 	%r11843, %r11840;
	mov.u32 	%r11844, %r11840;
	mov.u32 	%r11845, %r11840;
	mov.u32 	%r11846, %r11840;
	mov.u32 	%r11847, %r11840;
	mov.u32 	%r11848, %r11840;
	mov.u32 	%r11849, %r11840;
	mov.u32 	%r11850, %r11840;
	mov.u32 	%r11851, %r11840;
	mov.u32 	%r11852, %r11840;
	mov.u32 	%r11853, %r11840;
	mov.u32 	%r11854, %r11840;
	mov.u32 	%r11855, %r11840;
	mov.u32 	%r11856, %r11840;
	mov.u32 	%r11857, %r11840;
	mov.u32 	%r11858, %r11840;
	mov.u32 	%r11859, %r11840;
	mov.u32 	%r11860, %r11840;
	mov.u32 	%r11861, %r11840;
	mov.u32 	%r11862, %r11840;
	mov.u32 	%r11863, %r11840;
	mov.u32 	%r11864, %r11840;
	mov.u32 	%r11865, %r11840;
	mov.u32 	%r11866, %r11840;
	mov.u32 	%r11867, %r11840;
	mov.u32 	%r11868, %r11840;
	mov.u32 	%r11869, %r11840;
	mov.u32 	%r11870, %r11840;
	mov.u32 	%r11871, %r11840;
	@%p450 bra 	BB5_704;
	bra.uni 	BB5_773;

BB5_704:
	mov.u32 	%r11838, 0;
	// inline asm
	prmt.b32 %r11844, %r11838, %r38, %r193;
	// inline asm
	ld.local.u32 	%r9366, [%rd62];
	ld.local.u32 	%r9367, [%rd8+8];
	// inline asm
	prmt.b32 %r11845, %r9366, %r9367, %r193;
	// inline asm
	ld.local.u32 	%r9370, [%rd8+8];
	ld.local.u32 	%r9371, [%rd8+4];
	// inline asm
	prmt.b32 %r11846, %r9370, %r9371, %r193;
	// inline asm
	ld.local.v2.u32 	{%r9519, %r9520}, [%rd8];
	// inline asm
	prmt.b32 %r11847, %r9520, %r9519, %r193;
	// inline asm
	ld.local.u32 	%r9378, [%rd8];
	ld.local.u32 	%r9379, [%rd7+12];
	// inline asm
	prmt.b32 %r11840, %r9378, %r9379, %r193;
	// inline asm
	ld.local.v2.u32 	{%r9521, %r9522}, [%rd7+8];
	// inline asm
	prmt.b32 %r11841, %r9522, %r9521, %r193;
	// inline asm
	ld.local.u32 	%r9386, [%rd7+8];
	ld.local.u32 	%r9387, [%rd7+4];
	// inline asm
	prmt.b32 %r11842, %r9386, %r9387, %r193;
	// inline asm
	ld.local.v2.u32 	{%r9523, %r9524}, [%rd7];
	// inline asm
	prmt.b32 %r11843, %r9524, %r9523, %r193;
	// inline asm
	ld.local.u32 	%r9394, [%rd7];
	ld.local.u32 	%r9395, [%rd6+12];
	// inline asm
	prmt.b32 %r9393, %r9394, %r9395, %r193;
	// inline asm
	st.local.u32 	[%rd62], %r9393;
	ld.local.v2.u32 	{%r9525, %r9526}, [%rd6+8];
	// inline asm
	prmt.b32 %r9397, %r9526, %r9525, %r193;
	// inline asm
	st.local.u32 	[%rd8+8], %r9397;
	ld.local.u32 	%r9402, [%rd6+8];
	ld.local.u32 	%r9403, [%rd6+4];
	// inline asm
	prmt.b32 %r9401, %r9402, %r9403, %r193;
	// inline asm
	st.local.u32 	[%rd8+4], %r9401;
	ld.local.v2.u32 	{%r9527, %r9528}, [%rd6];
	// inline asm
	prmt.b32 %r9405, %r9528, %r9527, %r193;
	// inline asm
	st.local.u32 	[%rd8], %r9405;
	ld.local.u32 	%r9410, [%rd6];
	ld.local.u32 	%r9411, [%rd5+12];
	// inline asm
	prmt.b32 %r9409, %r9410, %r9411, %r193;
	// inline asm
	st.local.u32 	[%rd7+12], %r9409;
	ld.local.v2.u32 	{%r9529, %r9530}, [%rd5+8];
	// inline asm
	prmt.b32 %r9413, %r9530, %r9529, %r193;
	// inline asm
	st.local.u32 	[%rd7+8], %r9413;
	ld.local.u32 	%r9418, [%rd5+8];
	ld.local.u32 	%r9419, [%rd5+4];
	// inline asm
	prmt.b32 %r9417, %r9418, %r9419, %r193;
	// inline asm
	st.local.u32 	[%rd7+4], %r9417;
	ld.local.v2.u32 	{%r9531, %r9532}, [%rd5];
	// inline asm
	prmt.b32 %r9421, %r9532, %r9531, %r193;
	// inline asm
	st.local.u32 	[%rd7], %r9421;
	ld.local.u32 	%r9426, [%rd5];
	ld.local.u32 	%r9427, [%rd4+12];
	// inline asm
	prmt.b32 %r9425, %r9426, %r9427, %r193;
	// inline asm
	st.local.u32 	[%rd6+12], %r9425;
	ld.local.v2.u32 	{%r9533, %r9534}, [%rd4+8];
	// inline asm
	prmt.b32 %r9429, %r9534, %r9533, %r193;
	// inline asm
	st.local.u32 	[%rd6+8], %r9429;
	ld.local.u32 	%r9434, [%rd4+8];
	ld.local.u32 	%r9435, [%rd4+4];
	// inline asm
	prmt.b32 %r9433, %r9434, %r9435, %r193;
	// inline asm
	st.local.u32 	[%rd6+4], %r9433;
	ld.local.v2.u32 	{%r9535, %r9536}, [%rd4];
	// inline asm
	prmt.b32 %r9437, %r9536, %r9535, %r193;
	// inline asm
	st.local.u32 	[%rd6], %r9437;
	ld.local.u32 	%r9442, [%rd4];
	ld.local.u32 	%r9443, [%rd3+12];
	// inline asm
	prmt.b32 %r9441, %r9442, %r9443, %r193;
	// inline asm
	st.local.u32 	[%rd5+12], %r9441;
	ld.local.v2.u32 	{%r9537, %r9538}, [%rd3+8];
	// inline asm
	prmt.b32 %r9445, %r9538, %r9537, %r193;
	// inline asm
	st.local.u32 	[%rd5+8], %r9445;
	ld.local.u32 	%r9450, [%rd3+8];
	ld.local.u32 	%r9451, [%rd3+4];
	// inline asm
	prmt.b32 %r9449, %r9450, %r9451, %r193;
	// inline asm
	st.local.u32 	[%rd5+4], %r9449;
	ld.local.v2.u32 	{%r9539, %r9540}, [%rd3];
	// inline asm
	prmt.b32 %r9453, %r9540, %r9539, %r193;
	// inline asm
	st.local.u32 	[%rd5], %r9453;
	ld.local.u32 	%r9458, [%rd3];
	ld.local.u32 	%r9459, [%rd2+12];
	// inline asm
	prmt.b32 %r9457, %r9458, %r9459, %r193;
	// inline asm
	st.local.u32 	[%rd4+12], %r9457;
	ld.local.v2.u32 	{%r9541, %r9542}, [%rd2+8];
	// inline asm
	prmt.b32 %r9461, %r9542, %r9541, %r193;
	// inline asm
	st.local.u32 	[%rd4+8], %r9461;
	ld.local.u32 	%r9466, [%rd2+8];
	ld.local.u32 	%r9467, [%rd2+4];
	// inline asm
	prmt.b32 %r9465, %r9466, %r9467, %r193;
	// inline asm
	st.local.u32 	[%rd4+4], %r9465;
	ld.local.v2.u32 	{%r9543, %r9544}, [%rd2];
	// inline asm
	prmt.b32 %r9469, %r9544, %r9543, %r193;
	// inline asm
	st.local.u32 	[%rd4], %r9469;
	ld.local.u32 	%r9474, [%rd2];
	ld.local.u32 	%r9475, [%rd1+12];
	// inline asm
	prmt.b32 %r9473, %r9474, %r9475, %r193;
	// inline asm
	st.local.u32 	[%rd3+12], %r9473;
	ld.local.v2.u32 	{%r9545, %r9546}, [%rd1+8];
	// inline asm
	prmt.b32 %r9477, %r9546, %r9545, %r193;
	// inline asm
	st.local.u32 	[%rd3+8], %r9477;
	ld.local.u32 	%r9482, [%rd1+8];
	ld.local.u32 	%r9483, [%rd1+4];
	// inline asm
	prmt.b32 %r9481, %r9482, %r9483, %r193;
	// inline asm
	st.local.u32 	[%rd3+4], %r9481;
	ld.local.v2.u32 	{%r9547, %r9548}, [%rd1];
	// inline asm
	prmt.b32 %r9485, %r9548, %r9547, %r193;
	// inline asm
	st.local.u32 	[%rd3], %r9485;
	ld.local.u32 	%r9490, [%rd1];
	// inline asm
	prmt.b32 %r9489, %r9490, %r11838, %r193;
	// inline asm
	st.local.v4.u32 	[%rd2], {%r11838, %r11838, %r11838, %r9489};
	st.local.v2.u32 	[%rd1+8], {%r11838, %r11838};
	mov.u64 	%rd5772, 0;
	st.local.u64 	[%rd1], %rd5772;
	mov.u32 	%r11839, %r11838;

BB5_765:
	mov.u32 	%r11848, %r11838;
	mov.u32 	%r11849, %r11838;
	mov.u32 	%r11850, %r11838;
	mov.u32 	%r11851, %r11838;

BB5_766:
	mov.u32 	%r11852, %r11838;
	mov.u32 	%r11853, %r11838;
	mov.u32 	%r11854, %r11838;
	mov.u32 	%r11855, %r11838;

BB5_767:
	mov.u32 	%r11856, %r11838;
	mov.u32 	%r11857, %r11838;
	mov.u32 	%r11858, %r11838;
	mov.u32 	%r11859, %r11838;

BB5_768:
	mov.u32 	%r11860, %r11838;
	mov.u32 	%r11861, %r11838;
	mov.u32 	%r11862, %r11838;
	mov.u32 	%r11863, %r11838;

BB5_769:
	mov.u32 	%r11864, %r11838;
	mov.u32 	%r11865, %r11838;
	mov.u32 	%r11866, %r11838;
	mov.u32 	%r11867, %r11838;

BB5_770:
	mov.u32 	%r11868, %r11838;
	mov.u32 	%r11869, %r11838;
	mov.u32 	%r11870, %r11838;
	mov.u32 	%r11871, %r11838;

BB5_773:
	ld.local.u32 	%r10891, [%rd45];
	or.b32  	%r10892, %r10891, %r11839;
	st.local.u32 	[%rd45], %r10892;
	ld.local.u32 	%r10893, [%rd46];
	or.b32  	%r10894, %r10893, %r11838;
	st.local.u32 	[%rd46], %r10894;
	ld.local.u32 	%r10895, [%rd47];
	ld.local.v2.u32 	{%r10896, %r10897}, [%rd1+8];
	or.b32  	%r10899, %r10895, %r10896;
	st.local.u32 	[%rd47], %r10899;
	ld.local.u32 	%r10901, [%rd48];
	or.b32  	%r10902, %r10901, %r10897;
	st.local.u32 	[%rd48], %r10902;
	ld.local.u32 	%r10903, [%rd49];
	ld.local.v4.u32 	{%r10904, %r10905, %r10906, %r10907}, [%rd2];
	or.b32  	%r10909, %r10903, %r10904;
	st.local.u32 	[%rd49], %r10909;
	ld.local.u32 	%r10910, [%rd50];
	or.b32  	%r10912, %r10910, %r10905;
	st.local.u32 	[%rd50], %r10912;
	ld.local.u32 	%r10913, [%rd51];
	or.b32  	%r10915, %r10913, %r10906;
	st.local.u32 	[%rd51], %r10915;
	ld.local.u32 	%r10917, [%rd52];
	or.b32  	%r10918, %r10917, %r10907;
	st.local.u32 	[%rd52], %r10918;
	ld.local.u32 	%r10919, [%rd53];
	ld.local.v4.u32 	{%r10920, %r10921, %r10922, %r10923}, [%rd3];
	or.b32  	%r10925, %r10919, %r10920;
	st.local.u32 	[%rd53], %r10925;
	ld.local.u32 	%r10926, [%rd54];
	or.b32  	%r10928, %r10926, %r10921;
	st.local.u32 	[%rd54], %r10928;
	ld.local.u32 	%r10929, [%rd55];
	or.b32  	%r10931, %r10929, %r10922;
	st.local.u32 	[%rd55], %r10931;
	ld.local.u32 	%r10933, [%rd56];
	or.b32  	%r10934, %r10933, %r10923;
	st.local.u32 	[%rd56], %r10934;
	ld.local.u32 	%r10935, [%rd57];
	ld.local.v4.u32 	{%r10936, %r10937, %r10938, %r10939}, [%rd4];
	or.b32  	%r10941, %r10935, %r10936;
	st.local.u32 	[%rd57], %r10941;
	ld.local.u32 	%r10942, [%rd58];
	or.b32  	%r10944, %r10942, %r10937;
	st.local.u32 	[%rd58], %r10944;
	ld.local.u32 	%r10945, [%rd59];
	or.b32  	%r10947, %r10945, %r10938;
	st.local.u32 	[%rd59], %r10947;
	ld.local.u32 	%r10949, [%rd60];
	or.b32  	%r10950, %r10949, %r10939;
	st.local.u32 	[%rd60], %r10950;
	ld.local.u32 	%r10951, [%rd29];
	ld.local.v4.u32 	{%r10952, %r10953, %r10954, %r10955}, [%rd5];
	or.b32  	%r10957, %r10951, %r10952;
	st.local.u32 	[%rd29], %r10957;
	ld.local.u32 	%r10958, [%rd30];
	or.b32  	%r10960, %r10958, %r10953;
	st.local.u32 	[%rd30], %r10960;
	ld.local.u32 	%r10961, [%rd31];
	or.b32  	%r10963, %r10961, %r10954;
	st.local.u32 	[%rd31], %r10963;
	ld.local.u32 	%r10965, [%rd32];
	or.b32  	%r10966, %r10965, %r10955;
	st.local.u32 	[%rd32], %r10966;
	ld.local.u32 	%r10967, [%rd33];
	ld.local.v4.u32 	{%r10968, %r10969, %r10970, %r10971}, [%rd6];
	or.b32  	%r10973, %r10967, %r10968;
	st.local.u32 	[%rd33], %r10973;
	ld.local.u32 	%r10974, [%rd34];
	or.b32  	%r10976, %r10974, %r10969;
	st.local.u32 	[%rd34], %r10976;
	ld.local.u32 	%r10977, [%rd35];
	or.b32  	%r10979, %r10977, %r10970;
	st.local.u32 	[%rd35], %r10979;
	ld.local.u32 	%r10981, [%rd36];
	or.b32  	%r10982, %r10981, %r10971;
	st.local.u32 	[%rd36], %r10982;
	ld.local.u32 	%r10983, [%rd37];
	ld.local.v4.u32 	{%r10984, %r10985, %r10986, %r10987}, [%rd7];
	or.b32  	%r10989, %r10983, %r10984;
	st.local.u32 	[%rd37], %r10989;
	ld.local.u32 	%r10990, [%rd38];
	or.b32  	%r10992, %r10990, %r10985;
	st.local.u32 	[%rd38], %r10992;
	ld.local.u32 	%r10993, [%rd39];
	or.b32  	%r10995, %r10993, %r10986;
	st.local.u32 	[%rd39], %r10995;
	ld.local.u32 	%r10997, [%rd40];
	or.b32  	%r10998, %r10997, %r10987;
	st.local.u32 	[%rd40], %r10998;
	ld.local.u32 	%r10999, [%rd41];
	ld.local.v4.u32 	{%r11000, %r11001, %r11002, %r11003}, [%rd8];
	or.b32  	%r11005, %r10999, %r11000;
	st.local.u32 	[%rd41], %r11005;
	ld.local.u32 	%r11006, [%rd42];
	or.b32  	%r11008, %r11006, %r11001;
	st.local.u32 	[%rd42], %r11008;
	ld.local.u32 	%r11010, [%rd43];
	or.b32  	%r11011, %r11010, %r11002;
	st.local.u32 	[%rd43], %r11011;
	ld.local.u32 	%r11012, [%rd44];
	ld.local.u32 	%r11013, [%rd62];
	or.b32  	%r11014, %r11012, %r11013;
	st.local.u32 	[%rd44], %r11014;
	mov.b64	%rd6990, {%r10894, %r10892};
	mov.b64	%rd6991, {%r10902, %r10899};
	mov.b64	%rd6992, {%r10912, %r10909};
	mov.b64	%rd6993, {%r10918, %r10915};
	mov.b64	%rd6994, {%r10928, %r10925};
	mov.b64	%rd6995, {%r10934, %r10931};
	mov.b64	%rd6996, {%r10944, %r10941};
	mov.b64	%rd6997, {%r10950, %r10947};
	mov.b64	%rd6981, {%r10960, %r10957};
	mov.b64	%rd6980, {%r10966, %r10963};
	mov.b64	%rd6979, {%r10976, %r10973};
	mov.b64	%rd6978, {%r10982, %r10979};
	mov.b64	%rd6977, {%r10992, %r10989};
	mov.b64	%rd6976, {%r10998, %r10995};
	mov.b64	%rd6975, {%r11008, %r11005};
	mov.b64	%rd6974, {%r11014, %r11011};
	ld.local.u64 	%rd545, [%rd25];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11015,%dummy}, %rd545;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11016}, %rd545;
	}
	shf.r.wrap.b32 	%r11017, %r11016, %r11015, 14;
	shf.r.wrap.b32 	%r11018, %r11015, %r11016, 14;
	mov.b64 	%rd5778, {%r11018, %r11017};
	shf.r.wrap.b32 	%r11019, %r11016, %r11015, 18;
	shf.r.wrap.b32 	%r11020, %r11015, %r11016, 18;
	mov.b64 	%rd5779, {%r11020, %r11019};
	xor.b64  	%rd5780, %rd5779, %rd5778;
	shf.l.wrap.b32 	%r11021, %r11015, %r11016, 23;
	shf.l.wrap.b32 	%r11022, %r11016, %r11015, 23;
	mov.b64 	%rd5781, {%r11022, %r11021};
	xor.b64  	%rd5782, %rd5780, %rd5781;
	ld.local.u64 	%rd546, [%rd27];
	ld.local.u64 	%rd547, [%rd26];
	xor.b64  	%rd5783, %rd546, %rd547;
	and.b64  	%rd5784, %rd5783, %rd545;
	xor.b64  	%rd5785, %rd5784, %rd546;
	ld.local.u64 	%rd548, [%rd28];
	add.s64 	%rd5786, %rd5785, %rd548;
	add.s64 	%rd5787, %rd5786, %rd6990;
	add.s64 	%rd5788, %rd5787, %rd63;
	add.s64 	%rd5789, %rd5788, %rd5782;
	ld.local.u64 	%rd549, [%rd24];
	add.s64 	%rd5790, %rd5789, %rd549;
	ld.local.u64 	%rd550, [%rd10];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11023,%dummy}, %rd550;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11024}, %rd550;
	}
	shf.r.wrap.b32 	%r11025, %r11024, %r11023, 28;
	shf.r.wrap.b32 	%r11026, %r11023, %r11024, 28;
	mov.b64 	%rd5791, {%r11026, %r11025};
	shf.l.wrap.b32 	%r11027, %r11023, %r11024, 30;
	shf.l.wrap.b32 	%r11028, %r11024, %r11023, 30;
	mov.b64 	%rd5792, {%r11028, %r11027};
	xor.b64  	%rd5793, %rd5792, %rd5791;
	shf.l.wrap.b32 	%r11029, %r11023, %r11024, 25;
	shf.l.wrap.b32 	%r11030, %r11024, %r11023, 25;
	mov.b64 	%rd5794, {%r11030, %r11029};
	xor.b64  	%rd5795, %rd5793, %rd5794;
	ld.local.u64 	%rd551, [%rd23];
	xor.b64  	%rd5796, %rd551, %rd550;
	ld.local.u64 	%rd552, [%rd22];
	xor.b64  	%rd5797, %rd552, %rd550;
	and.b64  	%rd5798, %rd5796, %rd5797;
	xor.b64  	%rd5799, %rd5798, %rd550;
	add.s64 	%rd5800, %rd5789, %rd5799;
	add.s64 	%rd5801, %rd5800, %rd5795;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11031,%dummy}, %rd5790;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11032}, %rd5790;
	}
	shf.r.wrap.b32 	%r11033, %r11032, %r11031, 14;
	shf.r.wrap.b32 	%r11034, %r11031, %r11032, 14;
	mov.b64 	%rd5802, {%r11034, %r11033};
	shf.r.wrap.b32 	%r11035, %r11032, %r11031, 18;
	shf.r.wrap.b32 	%r11036, %r11031, %r11032, 18;
	mov.b64 	%rd5803, {%r11036, %r11035};
	xor.b64  	%rd5804, %rd5803, %rd5802;
	shf.l.wrap.b32 	%r11037, %r11031, %r11032, 23;
	shf.l.wrap.b32 	%r11038, %r11032, %r11031, 23;
	mov.b64 	%rd5805, {%r11038, %r11037};
	xor.b64  	%rd5806, %rd5804, %rd5805;
	xor.b64  	%rd5807, %rd547, %rd545;
	and.b64  	%rd5808, %rd5790, %rd5807;
	xor.b64  	%rd5809, %rd5808, %rd547;
	add.s64 	%rd5810, %rd6991, %rd546;
	add.s64 	%rd5811, %rd5810, %rd64;
	add.s64 	%rd5812, %rd5811, %rd5809;
	add.s64 	%rd5813, %rd5812, %rd5806;
	add.s64 	%rd5814, %rd5813, %rd551;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11039,%dummy}, %rd5801;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11040}, %rd5801;
	}
	shf.r.wrap.b32 	%r11041, %r11040, %r11039, 28;
	shf.r.wrap.b32 	%r11042, %r11039, %r11040, 28;
	mov.b64 	%rd5815, {%r11042, %r11041};
	shf.l.wrap.b32 	%r11043, %r11039, %r11040, 30;
	shf.l.wrap.b32 	%r11044, %r11040, %r11039, 30;
	mov.b64 	%rd5816, {%r11044, %r11043};
	xor.b64  	%rd5817, %rd5816, %rd5815;
	shf.l.wrap.b32 	%r11045, %r11039, %r11040, 25;
	shf.l.wrap.b32 	%r11046, %r11040, %r11039, 25;
	mov.b64 	%rd5818, {%r11046, %r11045};
	xor.b64  	%rd5819, %rd5817, %rd5818;
	xor.b64  	%rd5820, %rd5801, %rd552;
	xor.b64  	%rd5821, %rd5801, %rd550;
	and.b64  	%rd5822, %rd5821, %rd5820;
	xor.b64  	%rd5823, %rd5822, %rd5801;
	add.s64 	%rd5824, %rd5813, %rd5823;
	add.s64 	%rd5825, %rd5824, %rd5819;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11047,%dummy}, %rd5814;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11048}, %rd5814;
	}
	shf.r.wrap.b32 	%r11049, %r11048, %r11047, 14;
	shf.r.wrap.b32 	%r11050, %r11047, %r11048, 14;
	mov.b64 	%rd5826, {%r11050, %r11049};
	shf.r.wrap.b32 	%r11051, %r11048, %r11047, 18;
	shf.r.wrap.b32 	%r11052, %r11047, %r11048, 18;
	mov.b64 	%rd5827, {%r11052, %r11051};
	xor.b64  	%rd5828, %rd5827, %rd5826;
	shf.l.wrap.b32 	%r11053, %r11047, %r11048, 23;
	shf.l.wrap.b32 	%r11054, %r11048, %r11047, 23;
	mov.b64 	%rd5829, {%r11054, %r11053};
	xor.b64  	%rd5830, %rd5828, %rd5829;
	xor.b64  	%rd5831, %rd5790, %rd545;
	and.b64  	%rd5832, %rd5814, %rd5831;
	xor.b64  	%rd5833, %rd5832, %rd545;
	add.s64 	%rd5834, %rd6992, %rd547;
	add.s64 	%rd5835, %rd5834, %rd65;
	add.s64 	%rd5836, %rd5835, %rd5833;
	add.s64 	%rd5837, %rd5836, %rd5830;
	add.s64 	%rd5838, %rd5837, %rd552;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11055,%dummy}, %rd5825;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11056}, %rd5825;
	}
	shf.r.wrap.b32 	%r11057, %r11056, %r11055, 28;
	shf.r.wrap.b32 	%r11058, %r11055, %r11056, 28;
	mov.b64 	%rd5839, {%r11058, %r11057};
	shf.l.wrap.b32 	%r11059, %r11055, %r11056, 30;
	shf.l.wrap.b32 	%r11060, %r11056, %r11055, 30;
	mov.b64 	%rd5840, {%r11060, %r11059};
	xor.b64  	%rd5841, %rd5840, %rd5839;
	shf.l.wrap.b32 	%r11061, %r11055, %r11056, 25;
	shf.l.wrap.b32 	%r11062, %r11056, %r11055, 25;
	mov.b64 	%rd5842, {%r11062, %r11061};
	xor.b64  	%rd5843, %rd5841, %rd5842;
	xor.b64  	%rd5844, %rd5825, %rd550;
	xor.b64  	%rd5845, %rd5825, %rd5801;
	and.b64  	%rd5846, %rd5845, %rd5844;
	xor.b64  	%rd5847, %rd5846, %rd5825;
	add.s64 	%rd5848, %rd5837, %rd5847;
	add.s64 	%rd5849, %rd5848, %rd5843;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11063,%dummy}, %rd5838;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11064}, %rd5838;
	}
	shf.r.wrap.b32 	%r11065, %r11064, %r11063, 14;
	shf.r.wrap.b32 	%r11066, %r11063, %r11064, 14;
	mov.b64 	%rd5850, {%r11066, %r11065};
	shf.r.wrap.b32 	%r11067, %r11064, %r11063, 18;
	shf.r.wrap.b32 	%r11068, %r11063, %r11064, 18;
	mov.b64 	%rd5851, {%r11068, %r11067};
	xor.b64  	%rd5852, %rd5851, %rd5850;
	shf.l.wrap.b32 	%r11069, %r11063, %r11064, 23;
	shf.l.wrap.b32 	%r11070, %r11064, %r11063, 23;
	mov.b64 	%rd5853, {%r11070, %r11069};
	xor.b64  	%rd5854, %rd5852, %rd5853;
	xor.b64  	%rd5855, %rd5814, %rd5790;
	and.b64  	%rd5856, %rd5838, %rd5855;
	xor.b64  	%rd5857, %rd5856, %rd5790;
	add.s64 	%rd5858, %rd6993, %rd545;
	add.s64 	%rd5859, %rd5858, %rd66;
	add.s64 	%rd5860, %rd5859, %rd5857;
	add.s64 	%rd5861, %rd5860, %rd5854;
	add.s64 	%rd5862, %rd5861, %rd550;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11071,%dummy}, %rd5849;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11072}, %rd5849;
	}
	shf.r.wrap.b32 	%r11073, %r11072, %r11071, 28;
	shf.r.wrap.b32 	%r11074, %r11071, %r11072, 28;
	mov.b64 	%rd5863, {%r11074, %r11073};
	shf.l.wrap.b32 	%r11075, %r11071, %r11072, 30;
	shf.l.wrap.b32 	%r11076, %r11072, %r11071, 30;
	mov.b64 	%rd5864, {%r11076, %r11075};
	xor.b64  	%rd5865, %rd5864, %rd5863;
	shf.l.wrap.b32 	%r11077, %r11071, %r11072, 25;
	shf.l.wrap.b32 	%r11078, %r11072, %r11071, 25;
	mov.b64 	%rd5866, {%r11078, %r11077};
	xor.b64  	%rd5867, %rd5865, %rd5866;
	xor.b64  	%rd5868, %rd5849, %rd5801;
	xor.b64  	%rd5869, %rd5849, %rd5825;
	and.b64  	%rd5870, %rd5869, %rd5868;
	xor.b64  	%rd5871, %rd5870, %rd5849;
	add.s64 	%rd5872, %rd5861, %rd5871;
	add.s64 	%rd5873, %rd5872, %rd5867;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11079,%dummy}, %rd5862;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11080}, %rd5862;
	}
	shf.r.wrap.b32 	%r11081, %r11080, %r11079, 14;
	shf.r.wrap.b32 	%r11082, %r11079, %r11080, 14;
	mov.b64 	%rd5874, {%r11082, %r11081};
	shf.r.wrap.b32 	%r11083, %r11080, %r11079, 18;
	shf.r.wrap.b32 	%r11084, %r11079, %r11080, 18;
	mov.b64 	%rd5875, {%r11084, %r11083};
	xor.b64  	%rd5876, %rd5875, %rd5874;
	shf.l.wrap.b32 	%r11085, %r11079, %r11080, 23;
	shf.l.wrap.b32 	%r11086, %r11080, %r11079, 23;
	mov.b64 	%rd5877, {%r11086, %r11085};
	xor.b64  	%rd5878, %rd5876, %rd5877;
	xor.b64  	%rd5879, %rd5838, %rd5814;
	and.b64  	%rd5880, %rd5862, %rd5879;
	xor.b64  	%rd5881, %rd5880, %rd5814;
	add.s64 	%rd5882, %rd5790, %rd6994;
	add.s64 	%rd5883, %rd5882, %rd67;
	add.s64 	%rd5884, %rd5883, %rd5881;
	add.s64 	%rd5885, %rd5884, %rd5878;
	add.s64 	%rd5886, %rd5885, %rd5801;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11087,%dummy}, %rd5873;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11088}, %rd5873;
	}
	shf.r.wrap.b32 	%r11089, %r11088, %r11087, 28;
	shf.r.wrap.b32 	%r11090, %r11087, %r11088, 28;
	mov.b64 	%rd5887, {%r11090, %r11089};
	shf.l.wrap.b32 	%r11091, %r11087, %r11088, 30;
	shf.l.wrap.b32 	%r11092, %r11088, %r11087, 30;
	mov.b64 	%rd5888, {%r11092, %r11091};
	xor.b64  	%rd5889, %rd5888, %rd5887;
	shf.l.wrap.b32 	%r11093, %r11087, %r11088, 25;
	shf.l.wrap.b32 	%r11094, %r11088, %r11087, 25;
	mov.b64 	%rd5890, {%r11094, %r11093};
	xor.b64  	%rd5891, %rd5889, %rd5890;
	xor.b64  	%rd5892, %rd5873, %rd5825;
	xor.b64  	%rd5893, %rd5873, %rd5849;
	and.b64  	%rd5894, %rd5893, %rd5892;
	xor.b64  	%rd5895, %rd5894, %rd5873;
	add.s64 	%rd5896, %rd5885, %rd5895;
	add.s64 	%rd5897, %rd5896, %rd5891;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11095,%dummy}, %rd5886;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11096}, %rd5886;
	}
	shf.r.wrap.b32 	%r11097, %r11096, %r11095, 14;
	shf.r.wrap.b32 	%r11098, %r11095, %r11096, 14;
	mov.b64 	%rd5898, {%r11098, %r11097};
	shf.r.wrap.b32 	%r11099, %r11096, %r11095, 18;
	shf.r.wrap.b32 	%r11100, %r11095, %r11096, 18;
	mov.b64 	%rd5899, {%r11100, %r11099};
	xor.b64  	%rd5900, %rd5899, %rd5898;
	shf.l.wrap.b32 	%r11101, %r11095, %r11096, 23;
	shf.l.wrap.b32 	%r11102, %r11096, %r11095, 23;
	mov.b64 	%rd5901, {%r11102, %r11101};
	xor.b64  	%rd5902, %rd5900, %rd5901;
	xor.b64  	%rd5903, %rd5862, %rd5838;
	and.b64  	%rd5904, %rd5886, %rd5903;
	xor.b64  	%rd5905, %rd5904, %rd5838;
	add.s64 	%rd5906, %rd5814, %rd6995;
	add.s64 	%rd5907, %rd5906, %rd68;
	add.s64 	%rd5908, %rd5907, %rd5905;
	add.s64 	%rd5909, %rd5908, %rd5902;
	add.s64 	%rd5910, %rd5909, %rd5825;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11103,%dummy}, %rd5897;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11104}, %rd5897;
	}
	shf.r.wrap.b32 	%r11105, %r11104, %r11103, 28;
	shf.r.wrap.b32 	%r11106, %r11103, %r11104, 28;
	mov.b64 	%rd5911, {%r11106, %r11105};
	shf.l.wrap.b32 	%r11107, %r11103, %r11104, 30;
	shf.l.wrap.b32 	%r11108, %r11104, %r11103, 30;
	mov.b64 	%rd5912, {%r11108, %r11107};
	xor.b64  	%rd5913, %rd5912, %rd5911;
	shf.l.wrap.b32 	%r11109, %r11103, %r11104, 25;
	shf.l.wrap.b32 	%r11110, %r11104, %r11103, 25;
	mov.b64 	%rd5914, {%r11110, %r11109};
	xor.b64  	%rd5915, %rd5913, %rd5914;
	xor.b64  	%rd5916, %rd5897, %rd5849;
	xor.b64  	%rd5917, %rd5897, %rd5873;
	and.b64  	%rd5918, %rd5917, %rd5916;
	xor.b64  	%rd5919, %rd5918, %rd5897;
	add.s64 	%rd5920, %rd5909, %rd5919;
	add.s64 	%rd5921, %rd5920, %rd5915;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11111,%dummy}, %rd5910;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11112}, %rd5910;
	}
	shf.r.wrap.b32 	%r11113, %r11112, %r11111, 14;
	shf.r.wrap.b32 	%r11114, %r11111, %r11112, 14;
	mov.b64 	%rd5922, {%r11114, %r11113};
	shf.r.wrap.b32 	%r11115, %r11112, %r11111, 18;
	shf.r.wrap.b32 	%r11116, %r11111, %r11112, 18;
	mov.b64 	%rd5923, {%r11116, %r11115};
	xor.b64  	%rd5924, %rd5923, %rd5922;
	shf.l.wrap.b32 	%r11117, %r11111, %r11112, 23;
	shf.l.wrap.b32 	%r11118, %r11112, %r11111, 23;
	mov.b64 	%rd5925, {%r11118, %r11117};
	xor.b64  	%rd5926, %rd5924, %rd5925;
	xor.b64  	%rd5927, %rd5886, %rd5862;
	and.b64  	%rd5928, %rd5910, %rd5927;
	xor.b64  	%rd5929, %rd5928, %rd5862;
	add.s64 	%rd5930, %rd5838, %rd6996;
	add.s64 	%rd5931, %rd5930, %rd69;
	add.s64 	%rd5932, %rd5931, %rd5929;
	add.s64 	%rd5933, %rd5932, %rd5926;
	add.s64 	%rd5934, %rd5933, %rd5849;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11119,%dummy}, %rd5921;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11120}, %rd5921;
	}
	shf.r.wrap.b32 	%r11121, %r11120, %r11119, 28;
	shf.r.wrap.b32 	%r11122, %r11119, %r11120, 28;
	mov.b64 	%rd5935, {%r11122, %r11121};
	shf.l.wrap.b32 	%r11123, %r11119, %r11120, 30;
	shf.l.wrap.b32 	%r11124, %r11120, %r11119, 30;
	mov.b64 	%rd5936, {%r11124, %r11123};
	xor.b64  	%rd5937, %rd5936, %rd5935;
	shf.l.wrap.b32 	%r11125, %r11119, %r11120, 25;
	shf.l.wrap.b32 	%r11126, %r11120, %r11119, 25;
	mov.b64 	%rd5938, {%r11126, %r11125};
	xor.b64  	%rd5939, %rd5937, %rd5938;
	xor.b64  	%rd5940, %rd5921, %rd5873;
	xor.b64  	%rd5941, %rd5921, %rd5897;
	and.b64  	%rd5942, %rd5941, %rd5940;
	xor.b64  	%rd5943, %rd5942, %rd5921;
	add.s64 	%rd5944, %rd5933, %rd5943;
	add.s64 	%rd5945, %rd5944, %rd5939;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11127,%dummy}, %rd5934;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11128}, %rd5934;
	}
	shf.r.wrap.b32 	%r11129, %r11128, %r11127, 14;
	shf.r.wrap.b32 	%r11130, %r11127, %r11128, 14;
	mov.b64 	%rd5946, {%r11130, %r11129};
	shf.r.wrap.b32 	%r11131, %r11128, %r11127, 18;
	shf.r.wrap.b32 	%r11132, %r11127, %r11128, 18;
	mov.b64 	%rd5947, {%r11132, %r11131};
	xor.b64  	%rd5948, %rd5947, %rd5946;
	shf.l.wrap.b32 	%r11133, %r11127, %r11128, 23;
	shf.l.wrap.b32 	%r11134, %r11128, %r11127, 23;
	mov.b64 	%rd5949, {%r11134, %r11133};
	xor.b64  	%rd5950, %rd5948, %rd5949;
	xor.b64  	%rd5951, %rd5910, %rd5886;
	and.b64  	%rd5952, %rd5934, %rd5951;
	xor.b64  	%rd5953, %rd5952, %rd5886;
	add.s64 	%rd5954, %rd5862, %rd6997;
	add.s64 	%rd5955, %rd5954, %rd70;
	add.s64 	%rd5956, %rd5955, %rd5953;
	add.s64 	%rd5957, %rd5956, %rd5950;
	add.s64 	%rd5958, %rd5957, %rd5873;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11135,%dummy}, %rd5945;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11136}, %rd5945;
	}
	shf.r.wrap.b32 	%r11137, %r11136, %r11135, 28;
	shf.r.wrap.b32 	%r11138, %r11135, %r11136, 28;
	mov.b64 	%rd5959, {%r11138, %r11137};
	shf.l.wrap.b32 	%r11139, %r11135, %r11136, 30;
	shf.l.wrap.b32 	%r11140, %r11136, %r11135, 30;
	mov.b64 	%rd5960, {%r11140, %r11139};
	xor.b64  	%rd5961, %rd5960, %rd5959;
	shf.l.wrap.b32 	%r11141, %r11135, %r11136, 25;
	shf.l.wrap.b32 	%r11142, %r11136, %r11135, 25;
	mov.b64 	%rd5962, {%r11142, %r11141};
	xor.b64  	%rd5963, %rd5961, %rd5962;
	xor.b64  	%rd5964, %rd5945, %rd5897;
	xor.b64  	%rd5965, %rd5945, %rd5921;
	and.b64  	%rd5966, %rd5965, %rd5964;
	xor.b64  	%rd5967, %rd5966, %rd5945;
	add.s64 	%rd5968, %rd5957, %rd5967;
	add.s64 	%rd5969, %rd5968, %rd5963;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11143,%dummy}, %rd5958;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11144}, %rd5958;
	}
	shf.r.wrap.b32 	%r11145, %r11144, %r11143, 14;
	shf.r.wrap.b32 	%r11146, %r11143, %r11144, 14;
	mov.b64 	%rd5970, {%r11146, %r11145};
	shf.r.wrap.b32 	%r11147, %r11144, %r11143, 18;
	shf.r.wrap.b32 	%r11148, %r11143, %r11144, 18;
	mov.b64 	%rd5971, {%r11148, %r11147};
	xor.b64  	%rd5972, %rd5971, %rd5970;
	shf.l.wrap.b32 	%r11149, %r11143, %r11144, 23;
	shf.l.wrap.b32 	%r11150, %r11144, %r11143, 23;
	mov.b64 	%rd5973, {%r11150, %r11149};
	xor.b64  	%rd5974, %rd5972, %rd5973;
	xor.b64  	%rd5975, %rd5934, %rd5910;
	and.b64  	%rd5976, %rd5958, %rd5975;
	xor.b64  	%rd5977, %rd5976, %rd5910;
	add.s64 	%rd5978, %rd5886, %rd6981;
	add.s64 	%rd5979, %rd5978, %rd71;
	add.s64 	%rd5980, %rd5979, %rd5977;
	add.s64 	%rd5981, %rd5980, %rd5974;
	add.s64 	%rd5982, %rd5981, %rd5897;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11151,%dummy}, %rd5969;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11152}, %rd5969;
	}
	shf.r.wrap.b32 	%r11153, %r11152, %r11151, 28;
	shf.r.wrap.b32 	%r11154, %r11151, %r11152, 28;
	mov.b64 	%rd5983, {%r11154, %r11153};
	shf.l.wrap.b32 	%r11155, %r11151, %r11152, 30;
	shf.l.wrap.b32 	%r11156, %r11152, %r11151, 30;
	mov.b64 	%rd5984, {%r11156, %r11155};
	xor.b64  	%rd5985, %rd5984, %rd5983;
	shf.l.wrap.b32 	%r11157, %r11151, %r11152, 25;
	shf.l.wrap.b32 	%r11158, %r11152, %r11151, 25;
	mov.b64 	%rd5986, {%r11158, %r11157};
	xor.b64  	%rd5987, %rd5985, %rd5986;
	xor.b64  	%rd5988, %rd5969, %rd5921;
	xor.b64  	%rd5989, %rd5969, %rd5945;
	and.b64  	%rd5990, %rd5989, %rd5988;
	xor.b64  	%rd5991, %rd5990, %rd5969;
	add.s64 	%rd5992, %rd5981, %rd5991;
	add.s64 	%rd5993, %rd5992, %rd5987;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11159,%dummy}, %rd5982;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11160}, %rd5982;
	}
	shf.r.wrap.b32 	%r11161, %r11160, %r11159, 14;
	shf.r.wrap.b32 	%r11162, %r11159, %r11160, 14;
	mov.b64 	%rd5994, {%r11162, %r11161};
	shf.r.wrap.b32 	%r11163, %r11160, %r11159, 18;
	shf.r.wrap.b32 	%r11164, %r11159, %r11160, 18;
	mov.b64 	%rd5995, {%r11164, %r11163};
	xor.b64  	%rd5996, %rd5995, %rd5994;
	shf.l.wrap.b32 	%r11165, %r11159, %r11160, 23;
	shf.l.wrap.b32 	%r11166, %r11160, %r11159, 23;
	mov.b64 	%rd5997, {%r11166, %r11165};
	xor.b64  	%rd5998, %rd5996, %rd5997;
	xor.b64  	%rd5999, %rd5958, %rd5934;
	and.b64  	%rd6000, %rd5982, %rd5999;
	xor.b64  	%rd6001, %rd6000, %rd5934;
	add.s64 	%rd6002, %rd5910, %rd6980;
	add.s64 	%rd6003, %rd6002, %rd72;
	add.s64 	%rd6004, %rd6003, %rd6001;
	add.s64 	%rd6005, %rd6004, %rd5998;
	add.s64 	%rd6006, %rd6005, %rd5921;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11167,%dummy}, %rd5993;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11168}, %rd5993;
	}
	shf.r.wrap.b32 	%r11169, %r11168, %r11167, 28;
	shf.r.wrap.b32 	%r11170, %r11167, %r11168, 28;
	mov.b64 	%rd6007, {%r11170, %r11169};
	shf.l.wrap.b32 	%r11171, %r11167, %r11168, 30;
	shf.l.wrap.b32 	%r11172, %r11168, %r11167, 30;
	mov.b64 	%rd6008, {%r11172, %r11171};
	xor.b64  	%rd6009, %rd6008, %rd6007;
	shf.l.wrap.b32 	%r11173, %r11167, %r11168, 25;
	shf.l.wrap.b32 	%r11174, %r11168, %r11167, 25;
	mov.b64 	%rd6010, {%r11174, %r11173};
	xor.b64  	%rd6011, %rd6009, %rd6010;
	xor.b64  	%rd6012, %rd5993, %rd5945;
	xor.b64  	%rd6013, %rd5993, %rd5969;
	and.b64  	%rd6014, %rd6013, %rd6012;
	xor.b64  	%rd6015, %rd6014, %rd5993;
	add.s64 	%rd6016, %rd6005, %rd6015;
	add.s64 	%rd6017, %rd6016, %rd6011;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11175,%dummy}, %rd6006;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11176}, %rd6006;
	}
	shf.r.wrap.b32 	%r11177, %r11176, %r11175, 14;
	shf.r.wrap.b32 	%r11178, %r11175, %r11176, 14;
	mov.b64 	%rd6018, {%r11178, %r11177};
	shf.r.wrap.b32 	%r11179, %r11176, %r11175, 18;
	shf.r.wrap.b32 	%r11180, %r11175, %r11176, 18;
	mov.b64 	%rd6019, {%r11180, %r11179};
	xor.b64  	%rd6020, %rd6019, %rd6018;
	shf.l.wrap.b32 	%r11181, %r11175, %r11176, 23;
	shf.l.wrap.b32 	%r11182, %r11176, %r11175, 23;
	mov.b64 	%rd6021, {%r11182, %r11181};
	xor.b64  	%rd6022, %rd6020, %rd6021;
	xor.b64  	%rd6023, %rd5982, %rd5958;
	and.b64  	%rd6024, %rd6006, %rd6023;
	xor.b64  	%rd6025, %rd6024, %rd5958;
	add.s64 	%rd6026, %rd5934, %rd6979;
	add.s64 	%rd6027, %rd6026, %rd73;
	add.s64 	%rd6028, %rd6027, %rd6025;
	add.s64 	%rd6029, %rd6028, %rd6022;
	add.s64 	%rd6030, %rd6029, %rd5945;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11183,%dummy}, %rd6017;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11184}, %rd6017;
	}
	shf.r.wrap.b32 	%r11185, %r11184, %r11183, 28;
	shf.r.wrap.b32 	%r11186, %r11183, %r11184, 28;
	mov.b64 	%rd6031, {%r11186, %r11185};
	shf.l.wrap.b32 	%r11187, %r11183, %r11184, 30;
	shf.l.wrap.b32 	%r11188, %r11184, %r11183, 30;
	mov.b64 	%rd6032, {%r11188, %r11187};
	xor.b64  	%rd6033, %rd6032, %rd6031;
	shf.l.wrap.b32 	%r11189, %r11183, %r11184, 25;
	shf.l.wrap.b32 	%r11190, %r11184, %r11183, 25;
	mov.b64 	%rd6034, {%r11190, %r11189};
	xor.b64  	%rd6035, %rd6033, %rd6034;
	xor.b64  	%rd6036, %rd6017, %rd5969;
	xor.b64  	%rd6037, %rd6017, %rd5993;
	and.b64  	%rd6038, %rd6037, %rd6036;
	xor.b64  	%rd6039, %rd6038, %rd6017;
	add.s64 	%rd6040, %rd6029, %rd6039;
	add.s64 	%rd6041, %rd6040, %rd6035;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11191,%dummy}, %rd6030;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11192}, %rd6030;
	}
	shf.r.wrap.b32 	%r11193, %r11192, %r11191, 14;
	shf.r.wrap.b32 	%r11194, %r11191, %r11192, 14;
	mov.b64 	%rd6042, {%r11194, %r11193};
	shf.r.wrap.b32 	%r11195, %r11192, %r11191, 18;
	shf.r.wrap.b32 	%r11196, %r11191, %r11192, 18;
	mov.b64 	%rd6043, {%r11196, %r11195};
	xor.b64  	%rd6044, %rd6043, %rd6042;
	shf.l.wrap.b32 	%r11197, %r11191, %r11192, 23;
	shf.l.wrap.b32 	%r11198, %r11192, %r11191, 23;
	mov.b64 	%rd6045, {%r11198, %r11197};
	xor.b64  	%rd6046, %rd6044, %rd6045;
	xor.b64  	%rd6047, %rd6006, %rd5982;
	and.b64  	%rd6048, %rd6030, %rd6047;
	xor.b64  	%rd6049, %rd6048, %rd5982;
	add.s64 	%rd6050, %rd5958, %rd6978;
	add.s64 	%rd6051, %rd6050, %rd74;
	add.s64 	%rd6052, %rd6051, %rd6049;
	add.s64 	%rd6053, %rd6052, %rd6046;
	add.s64 	%rd6054, %rd6053, %rd5969;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11199,%dummy}, %rd6041;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11200}, %rd6041;
	}
	shf.r.wrap.b32 	%r11201, %r11200, %r11199, 28;
	shf.r.wrap.b32 	%r11202, %r11199, %r11200, 28;
	mov.b64 	%rd6055, {%r11202, %r11201};
	shf.l.wrap.b32 	%r11203, %r11199, %r11200, 30;
	shf.l.wrap.b32 	%r11204, %r11200, %r11199, 30;
	mov.b64 	%rd6056, {%r11204, %r11203};
	xor.b64  	%rd6057, %rd6056, %rd6055;
	shf.l.wrap.b32 	%r11205, %r11199, %r11200, 25;
	shf.l.wrap.b32 	%r11206, %r11200, %r11199, 25;
	mov.b64 	%rd6058, {%r11206, %r11205};
	xor.b64  	%rd6059, %rd6057, %rd6058;
	xor.b64  	%rd6060, %rd6041, %rd5993;
	xor.b64  	%rd6061, %rd6041, %rd6017;
	and.b64  	%rd6062, %rd6061, %rd6060;
	xor.b64  	%rd6063, %rd6062, %rd6041;
	add.s64 	%rd6064, %rd6053, %rd6063;
	add.s64 	%rd6065, %rd6064, %rd6059;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11207,%dummy}, %rd6054;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11208}, %rd6054;
	}
	shf.r.wrap.b32 	%r11209, %r11208, %r11207, 14;
	shf.r.wrap.b32 	%r11210, %r11207, %r11208, 14;
	mov.b64 	%rd6066, {%r11210, %r11209};
	shf.r.wrap.b32 	%r11211, %r11208, %r11207, 18;
	shf.r.wrap.b32 	%r11212, %r11207, %r11208, 18;
	mov.b64 	%rd6067, {%r11212, %r11211};
	xor.b64  	%rd6068, %rd6067, %rd6066;
	shf.l.wrap.b32 	%r11213, %r11207, %r11208, 23;
	shf.l.wrap.b32 	%r11214, %r11208, %r11207, 23;
	mov.b64 	%rd6069, {%r11214, %r11213};
	xor.b64  	%rd6070, %rd6068, %rd6069;
	xor.b64  	%rd6071, %rd6030, %rd6006;
	and.b64  	%rd6072, %rd6054, %rd6071;
	xor.b64  	%rd6073, %rd6072, %rd6006;
	add.s64 	%rd6074, %rd5982, %rd6977;
	add.s64 	%rd6075, %rd6074, %rd75;
	add.s64 	%rd6076, %rd6075, %rd6073;
	add.s64 	%rd6077, %rd6076, %rd6070;
	add.s64 	%rd6989, %rd6077, %rd5993;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11215,%dummy}, %rd6065;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11216}, %rd6065;
	}
	shf.r.wrap.b32 	%r11217, %r11216, %r11215, 28;
	shf.r.wrap.b32 	%r11218, %r11215, %r11216, 28;
	mov.b64 	%rd6078, {%r11218, %r11217};
	shf.l.wrap.b32 	%r11219, %r11215, %r11216, 30;
	shf.l.wrap.b32 	%r11220, %r11216, %r11215, 30;
	mov.b64 	%rd6079, {%r11220, %r11219};
	xor.b64  	%rd6080, %rd6079, %rd6078;
	shf.l.wrap.b32 	%r11221, %r11215, %r11216, 25;
	shf.l.wrap.b32 	%r11222, %r11216, %r11215, 25;
	mov.b64 	%rd6081, {%r11222, %r11221};
	xor.b64  	%rd6082, %rd6080, %rd6081;
	xor.b64  	%rd6083, %rd6065, %rd6017;
	xor.b64  	%rd6084, %rd6065, %rd6041;
	and.b64  	%rd6085, %rd6084, %rd6083;
	xor.b64  	%rd6086, %rd6085, %rd6065;
	add.s64 	%rd6087, %rd6077, %rd6086;
	add.s64 	%rd6985, %rd6087, %rd6082;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11223,%dummy}, %rd6989;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11224}, %rd6989;
	}
	shf.r.wrap.b32 	%r11225, %r11224, %r11223, 14;
	shf.r.wrap.b32 	%r11226, %r11223, %r11224, 14;
	mov.b64 	%rd6088, {%r11226, %r11225};
	shf.r.wrap.b32 	%r11227, %r11224, %r11223, 18;
	shf.r.wrap.b32 	%r11228, %r11223, %r11224, 18;
	mov.b64 	%rd6089, {%r11228, %r11227};
	xor.b64  	%rd6090, %rd6089, %rd6088;
	shf.l.wrap.b32 	%r11229, %r11223, %r11224, 23;
	shf.l.wrap.b32 	%r11230, %r11224, %r11223, 23;
	mov.b64 	%rd6091, {%r11230, %r11229};
	xor.b64  	%rd6092, %rd6090, %rd6091;
	xor.b64  	%rd6093, %rd6054, %rd6030;
	and.b64  	%rd6094, %rd6989, %rd6093;
	xor.b64  	%rd6095, %rd6094, %rd6030;
	add.s64 	%rd6096, %rd6006, %rd6976;
	add.s64 	%rd6097, %rd6096, %rd76;
	add.s64 	%rd6098, %rd6097, %rd6095;
	add.s64 	%rd6099, %rd6098, %rd6092;
	add.s64 	%rd6988, %rd6099, %rd6017;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11231,%dummy}, %rd6985;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11232}, %rd6985;
	}
	shf.r.wrap.b32 	%r11233, %r11232, %r11231, 28;
	shf.r.wrap.b32 	%r11234, %r11231, %r11232, 28;
	mov.b64 	%rd6100, {%r11234, %r11233};
	shf.l.wrap.b32 	%r11235, %r11231, %r11232, 30;
	shf.l.wrap.b32 	%r11236, %r11232, %r11231, 30;
	mov.b64 	%rd6101, {%r11236, %r11235};
	xor.b64  	%rd6102, %rd6101, %rd6100;
	shf.l.wrap.b32 	%r11237, %r11231, %r11232, 25;
	shf.l.wrap.b32 	%r11238, %r11232, %r11231, 25;
	mov.b64 	%rd6103, {%r11238, %r11237};
	xor.b64  	%rd6104, %rd6102, %rd6103;
	xor.b64  	%rd6105, %rd6985, %rd6041;
	xor.b64  	%rd6106, %rd6985, %rd6065;
	and.b64  	%rd6107, %rd6106, %rd6105;
	xor.b64  	%rd6108, %rd6107, %rd6985;
	add.s64 	%rd6109, %rd6099, %rd6108;
	add.s64 	%rd6984, %rd6109, %rd6104;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11239,%dummy}, %rd6988;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11240}, %rd6988;
	}
	shf.r.wrap.b32 	%r11241, %r11240, %r11239, 14;
	shf.r.wrap.b32 	%r11242, %r11239, %r11240, 14;
	mov.b64 	%rd6110, {%r11242, %r11241};
	shf.r.wrap.b32 	%r11243, %r11240, %r11239, 18;
	shf.r.wrap.b32 	%r11244, %r11239, %r11240, 18;
	mov.b64 	%rd6111, {%r11244, %r11243};
	xor.b64  	%rd6112, %rd6111, %rd6110;
	shf.l.wrap.b32 	%r11245, %r11239, %r11240, 23;
	shf.l.wrap.b32 	%r11246, %r11240, %r11239, 23;
	mov.b64 	%rd6113, {%r11246, %r11245};
	xor.b64  	%rd6114, %rd6112, %rd6113;
	xor.b64  	%rd6115, %rd6989, %rd6054;
	and.b64  	%rd6116, %rd6988, %rd6115;
	xor.b64  	%rd6117, %rd6116, %rd6054;
	add.s64 	%rd6118, %rd6030, %rd6975;
	add.s64 	%rd6119, %rd6118, %rd77;
	add.s64 	%rd6120, %rd6119, %rd6117;
	add.s64 	%rd6121, %rd6120, %rd6114;
	add.s64 	%rd6987, %rd6121, %rd6041;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11247,%dummy}, %rd6984;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11248}, %rd6984;
	}
	shf.r.wrap.b32 	%r11249, %r11248, %r11247, 28;
	shf.r.wrap.b32 	%r11250, %r11247, %r11248, 28;
	mov.b64 	%rd6122, {%r11250, %r11249};
	shf.l.wrap.b32 	%r11251, %r11247, %r11248, 30;
	shf.l.wrap.b32 	%r11252, %r11248, %r11247, 30;
	mov.b64 	%rd6123, {%r11252, %r11251};
	xor.b64  	%rd6124, %rd6123, %rd6122;
	shf.l.wrap.b32 	%r11253, %r11247, %r11248, 25;
	shf.l.wrap.b32 	%r11254, %r11248, %r11247, 25;
	mov.b64 	%rd6125, {%r11254, %r11253};
	xor.b64  	%rd6126, %rd6124, %rd6125;
	xor.b64  	%rd6127, %rd6984, %rd6065;
	xor.b64  	%rd6128, %rd6984, %rd6985;
	and.b64  	%rd6129, %rd6128, %rd6127;
	xor.b64  	%rd6130, %rd6129, %rd6984;
	add.s64 	%rd6131, %rd6121, %rd6130;
	add.s64 	%rd6983, %rd6131, %rd6126;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11255,%dummy}, %rd6987;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11256}, %rd6987;
	}
	shf.r.wrap.b32 	%r11257, %r11256, %r11255, 14;
	shf.r.wrap.b32 	%r11258, %r11255, %r11256, 14;
	mov.b64 	%rd6132, {%r11258, %r11257};
	shf.r.wrap.b32 	%r11259, %r11256, %r11255, 18;
	shf.r.wrap.b32 	%r11260, %r11255, %r11256, 18;
	mov.b64 	%rd6133, {%r11260, %r11259};
	xor.b64  	%rd6134, %rd6133, %rd6132;
	shf.l.wrap.b32 	%r11261, %r11255, %r11256, 23;
	shf.l.wrap.b32 	%r11262, %r11256, %r11255, 23;
	mov.b64 	%rd6135, {%r11262, %r11261};
	xor.b64  	%rd6136, %rd6134, %rd6135;
	xor.b64  	%rd6137, %rd6988, %rd6989;
	and.b64  	%rd6138, %rd6987, %rd6137;
	xor.b64  	%rd6139, %rd6138, %rd6989;
	add.s64 	%rd6140, %rd6054, %rd6974;
	add.s64 	%rd6141, %rd6140, %rd78;
	add.s64 	%rd6142, %rd6141, %rd6139;
	add.s64 	%rd6143, %rd6142, %rd6136;
	add.s64 	%rd6986, %rd6143, %rd6065;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11263,%dummy}, %rd6983;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11264}, %rd6983;
	}
	shf.r.wrap.b32 	%r11265, %r11264, %r11263, 28;
	shf.r.wrap.b32 	%r11266, %r11263, %r11264, 28;
	mov.b64 	%rd6144, {%r11266, %r11265};
	shf.l.wrap.b32 	%r11267, %r11263, %r11264, 30;
	shf.l.wrap.b32 	%r11268, %r11264, %r11263, 30;
	mov.b64 	%rd6145, {%r11268, %r11267};
	xor.b64  	%rd6146, %rd6145, %rd6144;
	shf.l.wrap.b32 	%r11269, %r11263, %r11264, 25;
	shf.l.wrap.b32 	%r11270, %r11264, %r11263, 25;
	mov.b64 	%rd6147, {%r11270, %r11269};
	xor.b64  	%rd6148, %rd6146, %rd6147;
	xor.b64  	%rd6149, %rd6983, %rd6985;
	xor.b64  	%rd6150, %rd6983, %rd6984;
	and.b64  	%rd6151, %rd6150, %rd6149;
	xor.b64  	%rd6152, %rd6151, %rd6983;
	add.s64 	%rd6153, %rd6143, %rd6152;
	add.s64 	%rd6982, %rd6153, %rd6148;
	mov.u32 	%r11872, 16;

BB5_774:
	shr.u64 	%rd6154, %rd6975, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11271,%dummy}, %rd6975;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11272}, %rd6975;
	}
	shf.r.wrap.b32 	%r11273, %r11272, %r11271, 19;
	shf.r.wrap.b32 	%r11274, %r11271, %r11272, 19;
	mov.b64 	%rd6155, {%r11274, %r11273};
	xor.b64  	%rd6156, %rd6155, %rd6154;
	shf.l.wrap.b32 	%r11275, %r11271, %r11272, 3;
	shf.l.wrap.b32 	%r11276, %r11272, %r11271, 3;
	mov.b64 	%rd6157, {%r11276, %r11275};
	xor.b64  	%rd6158, %rd6156, %rd6157;
	shr.u64 	%rd6159, %rd6991, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11277,%dummy}, %rd6991;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11278}, %rd6991;
	}
	shf.r.wrap.b32 	%r11279, %r11278, %r11277, 1;
	shf.r.wrap.b32 	%r11280, %r11277, %r11278, 1;
	mov.b64 	%rd6160, {%r11280, %r11279};
	xor.b64  	%rd6161, %rd6160, %rd6159;
	shf.r.wrap.b32 	%r11281, %r11278, %r11277, 8;
	shf.r.wrap.b32 	%r11282, %r11277, %r11278, 8;
	mov.b64 	%rd6162, {%r11282, %r11281};
	xor.b64  	%rd6163, %rd6161, %rd6162;
	add.s64 	%rd6164, %rd6980, %rd6990;
	add.s64 	%rd6165, %rd6164, %rd6158;
	add.s64 	%rd6990, %rd6165, %rd6163;
	shr.u64 	%rd6166, %rd6974, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11283,%dummy}, %rd6974;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11284}, %rd6974;
	}
	shf.r.wrap.b32 	%r11285, %r11284, %r11283, 19;
	shf.r.wrap.b32 	%r11286, %r11283, %r11284, 19;
	mov.b64 	%rd6167, {%r11286, %r11285};
	xor.b64  	%rd6168, %rd6167, %rd6166;
	shf.l.wrap.b32 	%r11287, %r11283, %r11284, 3;
	shf.l.wrap.b32 	%r11288, %r11284, %r11283, 3;
	mov.b64 	%rd6169, {%r11288, %r11287};
	xor.b64  	%rd6170, %rd6168, %rd6169;
	shr.u64 	%rd6171, %rd6992, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11289,%dummy}, %rd6992;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11290}, %rd6992;
	}
	shf.r.wrap.b32 	%r11291, %r11290, %r11289, 1;
	shf.r.wrap.b32 	%r11292, %r11289, %r11290, 1;
	mov.b64 	%rd6172, {%r11292, %r11291};
	xor.b64  	%rd6173, %rd6172, %rd6171;
	shf.r.wrap.b32 	%r11293, %r11290, %r11289, 8;
	shf.r.wrap.b32 	%r11294, %r11289, %r11290, 8;
	mov.b64 	%rd6174, {%r11294, %r11293};
	xor.b64  	%rd6175, %rd6173, %rd6174;
	add.s64 	%rd6176, %rd6979, %rd6991;
	add.s64 	%rd6177, %rd6176, %rd6170;
	add.s64 	%rd6991, %rd6177, %rd6175;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11295,%dummy}, %rd6990;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11296}, %rd6990;
	}
	shf.r.wrap.b32 	%r11297, %r11296, %r11295, 19;
	shf.r.wrap.b32 	%r11298, %r11295, %r11296, 19;
	mov.b64 	%rd6178, {%r11298, %r11297};
	shf.l.wrap.b32 	%r11299, %r11295, %r11296, 3;
	shf.l.wrap.b32 	%r11300, %r11296, %r11295, 3;
	mov.b64 	%rd6179, {%r11300, %r11299};
	shr.u64 	%rd6180, %rd6990, 6;
	xor.b64  	%rd6181, %rd6178, %rd6180;
	xor.b64  	%rd6182, %rd6181, %rd6179;
	shr.u64 	%rd6183, %rd6993, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11301,%dummy}, %rd6993;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11302}, %rd6993;
	}
	shf.r.wrap.b32 	%r11303, %r11302, %r11301, 1;
	shf.r.wrap.b32 	%r11304, %r11301, %r11302, 1;
	mov.b64 	%rd6184, {%r11304, %r11303};
	xor.b64  	%rd6185, %rd6184, %rd6183;
	shf.r.wrap.b32 	%r11305, %r11302, %r11301, 8;
	shf.r.wrap.b32 	%r11306, %r11301, %r11302, 8;
	mov.b64 	%rd6186, {%r11306, %r11305};
	xor.b64  	%rd6187, %rd6185, %rd6186;
	add.s64 	%rd6188, %rd6978, %rd6992;
	add.s64 	%rd6189, %rd6188, %rd6182;
	add.s64 	%rd6992, %rd6189, %rd6187;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11307,%dummy}, %rd6991;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11308}, %rd6991;
	}
	shf.r.wrap.b32 	%r11309, %r11308, %r11307, 19;
	shf.r.wrap.b32 	%r11310, %r11307, %r11308, 19;
	mov.b64 	%rd6190, {%r11310, %r11309};
	shf.l.wrap.b32 	%r11311, %r11307, %r11308, 3;
	shf.l.wrap.b32 	%r11312, %r11308, %r11307, 3;
	mov.b64 	%rd6191, {%r11312, %r11311};
	shr.u64 	%rd6192, %rd6991, 6;
	xor.b64  	%rd6193, %rd6190, %rd6192;
	xor.b64  	%rd6194, %rd6193, %rd6191;
	shr.u64 	%rd6195, %rd6994, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11313,%dummy}, %rd6994;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11314}, %rd6994;
	}
	shf.r.wrap.b32 	%r11315, %r11314, %r11313, 1;
	shf.r.wrap.b32 	%r11316, %r11313, %r11314, 1;
	mov.b64 	%rd6196, {%r11316, %r11315};
	xor.b64  	%rd6197, %rd6196, %rd6195;
	shf.r.wrap.b32 	%r11317, %r11314, %r11313, 8;
	shf.r.wrap.b32 	%r11318, %r11313, %r11314, 8;
	mov.b64 	%rd6198, {%r11318, %r11317};
	xor.b64  	%rd6199, %rd6197, %rd6198;
	add.s64 	%rd6200, %rd6977, %rd6993;
	add.s64 	%rd6201, %rd6200, %rd6194;
	add.s64 	%rd6993, %rd6201, %rd6199;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11319,%dummy}, %rd6992;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11320}, %rd6992;
	}
	shf.r.wrap.b32 	%r11321, %r11320, %r11319, 19;
	shf.r.wrap.b32 	%r11322, %r11319, %r11320, 19;
	mov.b64 	%rd6202, {%r11322, %r11321};
	shf.l.wrap.b32 	%r11323, %r11319, %r11320, 3;
	shf.l.wrap.b32 	%r11324, %r11320, %r11319, 3;
	mov.b64 	%rd6203, {%r11324, %r11323};
	shr.u64 	%rd6204, %rd6992, 6;
	xor.b64  	%rd6205, %rd6202, %rd6204;
	xor.b64  	%rd6206, %rd6205, %rd6203;
	shr.u64 	%rd6207, %rd6995, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11325,%dummy}, %rd6995;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11326}, %rd6995;
	}
	shf.r.wrap.b32 	%r11327, %r11326, %r11325, 1;
	shf.r.wrap.b32 	%r11328, %r11325, %r11326, 1;
	mov.b64 	%rd6208, {%r11328, %r11327};
	xor.b64  	%rd6209, %rd6208, %rd6207;
	shf.r.wrap.b32 	%r11329, %r11326, %r11325, 8;
	shf.r.wrap.b32 	%r11330, %r11325, %r11326, 8;
	mov.b64 	%rd6210, {%r11330, %r11329};
	xor.b64  	%rd6211, %rd6209, %rd6210;
	add.s64 	%rd6212, %rd6976, %rd6994;
	add.s64 	%rd6213, %rd6212, %rd6206;
	add.s64 	%rd6994, %rd6213, %rd6211;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11331,%dummy}, %rd6993;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11332}, %rd6993;
	}
	shf.r.wrap.b32 	%r11333, %r11332, %r11331, 19;
	shf.r.wrap.b32 	%r11334, %r11331, %r11332, 19;
	mov.b64 	%rd6214, {%r11334, %r11333};
	shf.l.wrap.b32 	%r11335, %r11331, %r11332, 3;
	shf.l.wrap.b32 	%r11336, %r11332, %r11331, 3;
	mov.b64 	%rd6215, {%r11336, %r11335};
	shr.u64 	%rd6216, %rd6993, 6;
	xor.b64  	%rd6217, %rd6214, %rd6216;
	xor.b64  	%rd6218, %rd6217, %rd6215;
	shr.u64 	%rd6219, %rd6996, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11337,%dummy}, %rd6996;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11338}, %rd6996;
	}
	shf.r.wrap.b32 	%r11339, %r11338, %r11337, 1;
	shf.r.wrap.b32 	%r11340, %r11337, %r11338, 1;
	mov.b64 	%rd6220, {%r11340, %r11339};
	xor.b64  	%rd6221, %rd6220, %rd6219;
	shf.r.wrap.b32 	%r11341, %r11338, %r11337, 8;
	shf.r.wrap.b32 	%r11342, %r11337, %r11338, 8;
	mov.b64 	%rd6222, {%r11342, %r11341};
	xor.b64  	%rd6223, %rd6221, %rd6222;
	add.s64 	%rd6224, %rd6975, %rd6995;
	add.s64 	%rd6225, %rd6224, %rd6218;
	add.s64 	%rd6995, %rd6225, %rd6223;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11343,%dummy}, %rd6994;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11344}, %rd6994;
	}
	shf.r.wrap.b32 	%r11345, %r11344, %r11343, 19;
	shf.r.wrap.b32 	%r11346, %r11343, %r11344, 19;
	mov.b64 	%rd6226, {%r11346, %r11345};
	shf.l.wrap.b32 	%r11347, %r11343, %r11344, 3;
	shf.l.wrap.b32 	%r11348, %r11344, %r11343, 3;
	mov.b64 	%rd6227, {%r11348, %r11347};
	shr.u64 	%rd6228, %rd6994, 6;
	xor.b64  	%rd6229, %rd6226, %rd6228;
	xor.b64  	%rd6230, %rd6229, %rd6227;
	shr.u64 	%rd6231, %rd6997, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11349,%dummy}, %rd6997;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11350}, %rd6997;
	}
	shf.r.wrap.b32 	%r11351, %r11350, %r11349, 1;
	shf.r.wrap.b32 	%r11352, %r11349, %r11350, 1;
	mov.b64 	%rd6232, {%r11352, %r11351};
	xor.b64  	%rd6233, %rd6232, %rd6231;
	shf.r.wrap.b32 	%r11353, %r11350, %r11349, 8;
	shf.r.wrap.b32 	%r11354, %r11349, %r11350, 8;
	mov.b64 	%rd6234, {%r11354, %r11353};
	xor.b64  	%rd6235, %rd6233, %rd6234;
	add.s64 	%rd6236, %rd6974, %rd6996;
	add.s64 	%rd6237, %rd6236, %rd6230;
	add.s64 	%rd6996, %rd6237, %rd6235;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11355,%dummy}, %rd6995;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11356}, %rd6995;
	}
	shf.r.wrap.b32 	%r11357, %r11356, %r11355, 19;
	shf.r.wrap.b32 	%r11358, %r11355, %r11356, 19;
	mov.b64 	%rd6238, {%r11358, %r11357};
	shf.l.wrap.b32 	%r11359, %r11355, %r11356, 3;
	shf.l.wrap.b32 	%r11360, %r11356, %r11355, 3;
	mov.b64 	%rd6239, {%r11360, %r11359};
	shr.u64 	%rd6240, %rd6995, 6;
	xor.b64  	%rd6241, %rd6238, %rd6240;
	xor.b64  	%rd6242, %rd6241, %rd6239;
	shr.u64 	%rd6243, %rd6981, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11361,%dummy}, %rd6981;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11362}, %rd6981;
	}
	shf.r.wrap.b32 	%r11363, %r11362, %r11361, 1;
	shf.r.wrap.b32 	%r11364, %r11361, %r11362, 1;
	mov.b64 	%rd6244, {%r11364, %r11363};
	xor.b64  	%rd6245, %rd6244, %rd6243;
	shf.r.wrap.b32 	%r11365, %r11362, %r11361, 8;
	shf.r.wrap.b32 	%r11366, %r11361, %r11362, 8;
	mov.b64 	%rd6246, {%r11366, %r11365};
	xor.b64  	%rd6247, %rd6245, %rd6246;
	add.s64 	%rd6248, %rd6990, %rd6997;
	add.s64 	%rd6249, %rd6248, %rd6242;
	add.s64 	%rd6997, %rd6249, %rd6247;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11367,%dummy}, %rd6996;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11368}, %rd6996;
	}
	shf.r.wrap.b32 	%r11369, %r11368, %r11367, 19;
	shf.r.wrap.b32 	%r11370, %r11367, %r11368, 19;
	mov.b64 	%rd6250, {%r11370, %r11369};
	shf.l.wrap.b32 	%r11371, %r11367, %r11368, 3;
	shf.l.wrap.b32 	%r11372, %r11368, %r11367, 3;
	mov.b64 	%rd6251, {%r11372, %r11371};
	shr.u64 	%rd6252, %rd6996, 6;
	xor.b64  	%rd6253, %rd6250, %rd6252;
	xor.b64  	%rd6254, %rd6253, %rd6251;
	shr.u64 	%rd6255, %rd6980, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11373,%dummy}, %rd6980;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11374}, %rd6980;
	}
	shf.r.wrap.b32 	%r11375, %r11374, %r11373, 1;
	shf.r.wrap.b32 	%r11376, %r11373, %r11374, 1;
	mov.b64 	%rd6256, {%r11376, %r11375};
	xor.b64  	%rd6257, %rd6256, %rd6255;
	shf.r.wrap.b32 	%r11377, %r11374, %r11373, 8;
	shf.r.wrap.b32 	%r11378, %r11373, %r11374, 8;
	mov.b64 	%rd6258, {%r11378, %r11377};
	xor.b64  	%rd6259, %rd6257, %rd6258;
	add.s64 	%rd6260, %rd6991, %rd6981;
	add.s64 	%rd6261, %rd6260, %rd6254;
	add.s64 	%rd6981, %rd6261, %rd6259;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11379,%dummy}, %rd6997;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11380}, %rd6997;
	}
	shf.r.wrap.b32 	%r11381, %r11380, %r11379, 19;
	shf.r.wrap.b32 	%r11382, %r11379, %r11380, 19;
	mov.b64 	%rd6262, {%r11382, %r11381};
	shf.l.wrap.b32 	%r11383, %r11379, %r11380, 3;
	shf.l.wrap.b32 	%r11384, %r11380, %r11379, 3;
	mov.b64 	%rd6263, {%r11384, %r11383};
	shr.u64 	%rd6264, %rd6997, 6;
	xor.b64  	%rd6265, %rd6262, %rd6264;
	xor.b64  	%rd6266, %rd6265, %rd6263;
	shr.u64 	%rd6267, %rd6979, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11385,%dummy}, %rd6979;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11386}, %rd6979;
	}
	shf.r.wrap.b32 	%r11387, %r11386, %r11385, 1;
	shf.r.wrap.b32 	%r11388, %r11385, %r11386, 1;
	mov.b64 	%rd6268, {%r11388, %r11387};
	xor.b64  	%rd6269, %rd6268, %rd6267;
	shf.r.wrap.b32 	%r11389, %r11386, %r11385, 8;
	shf.r.wrap.b32 	%r11390, %r11385, %r11386, 8;
	mov.b64 	%rd6270, {%r11390, %r11389};
	xor.b64  	%rd6271, %rd6269, %rd6270;
	add.s64 	%rd6272, %rd6992, %rd6980;
	add.s64 	%rd6273, %rd6272, %rd6266;
	add.s64 	%rd6980, %rd6273, %rd6271;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11391,%dummy}, %rd6981;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11392}, %rd6981;
	}
	shf.r.wrap.b32 	%r11393, %r11392, %r11391, 19;
	shf.r.wrap.b32 	%r11394, %r11391, %r11392, 19;
	mov.b64 	%rd6274, {%r11394, %r11393};
	shf.l.wrap.b32 	%r11395, %r11391, %r11392, 3;
	shf.l.wrap.b32 	%r11396, %r11392, %r11391, 3;
	mov.b64 	%rd6275, {%r11396, %r11395};
	shr.u64 	%rd6276, %rd6981, 6;
	xor.b64  	%rd6277, %rd6274, %rd6276;
	xor.b64  	%rd6278, %rd6277, %rd6275;
	shr.u64 	%rd6279, %rd6978, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11397,%dummy}, %rd6978;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11398}, %rd6978;
	}
	shf.r.wrap.b32 	%r11399, %r11398, %r11397, 1;
	shf.r.wrap.b32 	%r11400, %r11397, %r11398, 1;
	mov.b64 	%rd6280, {%r11400, %r11399};
	xor.b64  	%rd6281, %rd6280, %rd6279;
	shf.r.wrap.b32 	%r11401, %r11398, %r11397, 8;
	shf.r.wrap.b32 	%r11402, %r11397, %r11398, 8;
	mov.b64 	%rd6282, {%r11402, %r11401};
	xor.b64  	%rd6283, %rd6281, %rd6282;
	add.s64 	%rd6284, %rd6993, %rd6979;
	add.s64 	%rd6285, %rd6284, %rd6278;
	add.s64 	%rd6979, %rd6285, %rd6283;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11403,%dummy}, %rd6980;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11404}, %rd6980;
	}
	shf.r.wrap.b32 	%r11405, %r11404, %r11403, 19;
	shf.r.wrap.b32 	%r11406, %r11403, %r11404, 19;
	mov.b64 	%rd6286, {%r11406, %r11405};
	shf.l.wrap.b32 	%r11407, %r11403, %r11404, 3;
	shf.l.wrap.b32 	%r11408, %r11404, %r11403, 3;
	mov.b64 	%rd6287, {%r11408, %r11407};
	shr.u64 	%rd6288, %rd6980, 6;
	xor.b64  	%rd6289, %rd6286, %rd6288;
	xor.b64  	%rd6290, %rd6289, %rd6287;
	shr.u64 	%rd6291, %rd6977, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11409,%dummy}, %rd6977;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11410}, %rd6977;
	}
	shf.r.wrap.b32 	%r11411, %r11410, %r11409, 1;
	shf.r.wrap.b32 	%r11412, %r11409, %r11410, 1;
	mov.b64 	%rd6292, {%r11412, %r11411};
	xor.b64  	%rd6293, %rd6292, %rd6291;
	shf.r.wrap.b32 	%r11413, %r11410, %r11409, 8;
	shf.r.wrap.b32 	%r11414, %r11409, %r11410, 8;
	mov.b64 	%rd6294, {%r11414, %r11413};
	xor.b64  	%rd6295, %rd6293, %rd6294;
	add.s64 	%rd6296, %rd6994, %rd6978;
	add.s64 	%rd6297, %rd6296, %rd6290;
	add.s64 	%rd6978, %rd6297, %rd6295;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11415,%dummy}, %rd6979;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11416}, %rd6979;
	}
	shf.r.wrap.b32 	%r11417, %r11416, %r11415, 19;
	shf.r.wrap.b32 	%r11418, %r11415, %r11416, 19;
	mov.b64 	%rd6298, {%r11418, %r11417};
	shf.l.wrap.b32 	%r11419, %r11415, %r11416, 3;
	shf.l.wrap.b32 	%r11420, %r11416, %r11415, 3;
	mov.b64 	%rd6299, {%r11420, %r11419};
	shr.u64 	%rd6300, %rd6979, 6;
	xor.b64  	%rd6301, %rd6298, %rd6300;
	xor.b64  	%rd6302, %rd6301, %rd6299;
	shr.u64 	%rd6303, %rd6976, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11421,%dummy}, %rd6976;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11422}, %rd6976;
	}
	shf.r.wrap.b32 	%r11423, %r11422, %r11421, 1;
	shf.r.wrap.b32 	%r11424, %r11421, %r11422, 1;
	mov.b64 	%rd6304, {%r11424, %r11423};
	xor.b64  	%rd6305, %rd6304, %rd6303;
	shf.r.wrap.b32 	%r11425, %r11422, %r11421, 8;
	shf.r.wrap.b32 	%r11426, %r11421, %r11422, 8;
	mov.b64 	%rd6306, {%r11426, %r11425};
	xor.b64  	%rd6307, %rd6305, %rd6306;
	add.s64 	%rd6308, %rd6995, %rd6977;
	add.s64 	%rd6309, %rd6308, %rd6302;
	add.s64 	%rd6977, %rd6309, %rd6307;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11427,%dummy}, %rd6978;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11428}, %rd6978;
	}
	shf.r.wrap.b32 	%r11429, %r11428, %r11427, 19;
	shf.r.wrap.b32 	%r11430, %r11427, %r11428, 19;
	mov.b64 	%rd6310, {%r11430, %r11429};
	shf.l.wrap.b32 	%r11431, %r11427, %r11428, 3;
	shf.l.wrap.b32 	%r11432, %r11428, %r11427, 3;
	mov.b64 	%rd6311, {%r11432, %r11431};
	shr.u64 	%rd6312, %rd6978, 6;
	xor.b64  	%rd6313, %rd6310, %rd6312;
	xor.b64  	%rd6314, %rd6313, %rd6311;
	shr.u64 	%rd6315, %rd6975, 7;
	shf.r.wrap.b32 	%r11433, %r11272, %r11271, 1;
	shf.r.wrap.b32 	%r11434, %r11271, %r11272, 1;
	mov.b64 	%rd6316, {%r11434, %r11433};
	xor.b64  	%rd6317, %rd6316, %rd6315;
	shf.r.wrap.b32 	%r11435, %r11272, %r11271, 8;
	shf.r.wrap.b32 	%r11436, %r11271, %r11272, 8;
	mov.b64 	%rd6318, {%r11436, %r11435};
	xor.b64  	%rd6319, %rd6317, %rd6318;
	add.s64 	%rd6320, %rd6996, %rd6976;
	add.s64 	%rd6321, %rd6320, %rd6314;
	add.s64 	%rd6976, %rd6321, %rd6319;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11437,%dummy}, %rd6977;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11438}, %rd6977;
	}
	shf.r.wrap.b32 	%r11439, %r11438, %r11437, 19;
	shf.r.wrap.b32 	%r11440, %r11437, %r11438, 19;
	mov.b64 	%rd6322, {%r11440, %r11439};
	shf.l.wrap.b32 	%r11441, %r11437, %r11438, 3;
	shf.l.wrap.b32 	%r11442, %r11438, %r11437, 3;
	mov.b64 	%rd6323, {%r11442, %r11441};
	shr.u64 	%rd6324, %rd6977, 6;
	xor.b64  	%rd6325, %rd6322, %rd6324;
	xor.b64  	%rd6326, %rd6325, %rd6323;
	shr.u64 	%rd6327, %rd6974, 7;
	shf.r.wrap.b32 	%r11443, %r11284, %r11283, 1;
	shf.r.wrap.b32 	%r11444, %r11283, %r11284, 1;
	mov.b64 	%rd6328, {%r11444, %r11443};
	xor.b64  	%rd6329, %rd6328, %rd6327;
	shf.r.wrap.b32 	%r11445, %r11284, %r11283, 8;
	shf.r.wrap.b32 	%r11446, %r11283, %r11284, 8;
	mov.b64 	%rd6330, {%r11446, %r11445};
	xor.b64  	%rd6331, %rd6329, %rd6330;
	add.s64 	%rd6332, %rd6997, %rd6975;
	add.s64 	%rd6333, %rd6332, %rd6326;
	add.s64 	%rd6975, %rd6333, %rd6331;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11447,%dummy}, %rd6976;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11448}, %rd6976;
	}
	shf.r.wrap.b32 	%r11449, %r11448, %r11447, 19;
	shf.r.wrap.b32 	%r11450, %r11447, %r11448, 19;
	mov.b64 	%rd6334, {%r11450, %r11449};
	shf.l.wrap.b32 	%r11451, %r11447, %r11448, 3;
	shf.l.wrap.b32 	%r11452, %r11448, %r11447, 3;
	mov.b64 	%rd6335, {%r11452, %r11451};
	shr.u64 	%rd6336, %rd6976, 6;
	xor.b64  	%rd6337, %rd6334, %rd6336;
	xor.b64  	%rd6338, %rd6337, %rd6335;
	shf.r.wrap.b32 	%r11453, %r11296, %r11295, 1;
	shf.r.wrap.b32 	%r11454, %r11295, %r11296, 1;
	mov.b64 	%rd6339, {%r11454, %r11453};
	shf.r.wrap.b32 	%r11455, %r11296, %r11295, 8;
	shf.r.wrap.b32 	%r11456, %r11295, %r11296, 8;
	mov.b64 	%rd6340, {%r11456, %r11455};
	shr.u64 	%rd6341, %rd6990, 7;
	xor.b64  	%rd6342, %rd6339, %rd6341;
	xor.b64  	%rd6343, %rd6342, %rd6340;
	add.s64 	%rd6344, %rd6981, %rd6974;
	add.s64 	%rd6345, %rd6344, %rd6338;
	add.s64 	%rd6974, %rd6345, %rd6343;
	mul.wide.s32 	%rd6346, %r11872, 8;
	mov.u64 	%rd6347, k_sha512;
	add.s64 	%rd6348, %rd6347, %rd6346;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11457,%dummy}, %rd6986;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11458}, %rd6986;
	}
	shf.r.wrap.b32 	%r11459, %r11458, %r11457, 18;
	shf.r.wrap.b32 	%r11460, %r11457, %r11458, 18;
	mov.b64 	%rd6349, {%r11460, %r11459};
	shf.r.wrap.b32 	%r11461, %r11458, %r11457, 14;
	shf.r.wrap.b32 	%r11462, %r11457, %r11458, 14;
	mov.b64 	%rd6350, {%r11462, %r11461};
	xor.b64  	%rd6351, %rd6349, %rd6350;
	shf.l.wrap.b32 	%r11463, %r11457, %r11458, 23;
	shf.l.wrap.b32 	%r11464, %r11458, %r11457, 23;
	mov.b64 	%rd6352, {%r11464, %r11463};
	xor.b64  	%rd6353, %rd6351, %rd6352;
	xor.b64  	%rd6354, %rd6987, %rd6988;
	and.b64  	%rd6355, %rd6354, %rd6986;
	xor.b64  	%rd6356, %rd6355, %rd6988;
	add.s64 	%rd6357, %rd6356, %rd6989;
	add.s64 	%rd6358, %rd6357, %rd6990;
	ld.const.u64 	%rd6359, [%rd6348];
	add.s64 	%rd6360, %rd6358, %rd6359;
	add.s64 	%rd6361, %rd6360, %rd6353;
	add.s64 	%rd6362, %rd6361, %rd6985;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11465}, %rd6982;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11466,%dummy}, %rd6982;
	}
	shf.l.wrap.b32 	%r11467, %r11466, %r11465, 30;
	shf.l.wrap.b32 	%r11468, %r11465, %r11466, 30;
	mov.b64 	%rd6363, {%r11468, %r11467};
	shf.r.wrap.b32 	%r11469, %r11465, %r11466, 28;
	shf.r.wrap.b32 	%r11470, %r11466, %r11465, 28;
	mov.b64 	%rd6364, {%r11470, %r11469};
	xor.b64  	%rd6365, %rd6363, %rd6364;
	shf.l.wrap.b32 	%r11471, %r11466, %r11465, 25;
	shf.l.wrap.b32 	%r11472, %r11465, %r11466, 25;
	mov.b64 	%rd6366, {%r11472, %r11471};
	xor.b64  	%rd6367, %rd6365, %rd6366;
	xor.b64  	%rd6368, %rd6982, %rd6983;
	xor.b64  	%rd6369, %rd6982, %rd6984;
	and.b64  	%rd6370, %rd6368, %rd6369;
	xor.b64  	%rd6371, %rd6370, %rd6982;
	add.s64 	%rd6372, %rd6361, %rd6371;
	add.s64 	%rd6373, %rd6372, %rd6367;
	add.s32 	%r11473, %r11872, 1;
	mul.wide.s32 	%rd6374, %r11473, 8;
	add.s64 	%rd6375, %rd6347, %rd6374;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11474,%dummy}, %rd6362;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11475}, %rd6362;
	}
	shf.r.wrap.b32 	%r11476, %r11475, %r11474, 14;
	shf.r.wrap.b32 	%r11477, %r11474, %r11475, 14;
	mov.b64 	%rd6376, {%r11477, %r11476};
	shf.r.wrap.b32 	%r11478, %r11475, %r11474, 18;
	shf.r.wrap.b32 	%r11479, %r11474, %r11475, 18;
	mov.b64 	%rd6377, {%r11479, %r11478};
	xor.b64  	%rd6378, %rd6377, %rd6376;
	shf.l.wrap.b32 	%r11480, %r11474, %r11475, 23;
	shf.l.wrap.b32 	%r11481, %r11475, %r11474, 23;
	mov.b64 	%rd6379, {%r11481, %r11480};
	xor.b64  	%rd6380, %rd6378, %rd6379;
	xor.b64  	%rd6381, %rd6986, %rd6987;
	and.b64  	%rd6382, %rd6362, %rd6381;
	xor.b64  	%rd6383, %rd6382, %rd6987;
	add.s64 	%rd6384, %rd6991, %rd6988;
	ld.const.u64 	%rd6385, [%rd6375];
	add.s64 	%rd6386, %rd6384, %rd6385;
	add.s64 	%rd6387, %rd6386, %rd6383;
	add.s64 	%rd6388, %rd6387, %rd6380;
	add.s64 	%rd6389, %rd6388, %rd6984;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11482,%dummy}, %rd6373;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11483}, %rd6373;
	}
	shf.r.wrap.b32 	%r11484, %r11483, %r11482, 28;
	shf.r.wrap.b32 	%r11485, %r11482, %r11483, 28;
	mov.b64 	%rd6390, {%r11485, %r11484};
	shf.l.wrap.b32 	%r11486, %r11482, %r11483, 30;
	shf.l.wrap.b32 	%r11487, %r11483, %r11482, 30;
	mov.b64 	%rd6391, {%r11487, %r11486};
	xor.b64  	%rd6392, %rd6391, %rd6390;
	shf.l.wrap.b32 	%r11488, %r11482, %r11483, 25;
	shf.l.wrap.b32 	%r11489, %r11483, %r11482, 25;
	mov.b64 	%rd6393, {%r11489, %r11488};
	xor.b64  	%rd6394, %rd6392, %rd6393;
	xor.b64  	%rd6395, %rd6373, %rd6983;
	xor.b64  	%rd6396, %rd6373, %rd6982;
	and.b64  	%rd6397, %rd6396, %rd6395;
	xor.b64  	%rd6398, %rd6397, %rd6373;
	add.s64 	%rd6399, %rd6388, %rd6398;
	add.s64 	%rd6400, %rd6399, %rd6394;
	add.s32 	%r11490, %r11872, 2;
	mul.wide.s32 	%rd6401, %r11490, 8;
	add.s64 	%rd6402, %rd6347, %rd6401;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11491,%dummy}, %rd6389;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11492}, %rd6389;
	}
	shf.r.wrap.b32 	%r11493, %r11492, %r11491, 14;
	shf.r.wrap.b32 	%r11494, %r11491, %r11492, 14;
	mov.b64 	%rd6403, {%r11494, %r11493};
	shf.r.wrap.b32 	%r11495, %r11492, %r11491, 18;
	shf.r.wrap.b32 	%r11496, %r11491, %r11492, 18;
	mov.b64 	%rd6404, {%r11496, %r11495};
	xor.b64  	%rd6405, %rd6404, %rd6403;
	shf.l.wrap.b32 	%r11497, %r11491, %r11492, 23;
	shf.l.wrap.b32 	%r11498, %r11492, %r11491, 23;
	mov.b64 	%rd6406, {%r11498, %r11497};
	xor.b64  	%rd6407, %rd6405, %rd6406;
	xor.b64  	%rd6408, %rd6362, %rd6986;
	and.b64  	%rd6409, %rd6389, %rd6408;
	xor.b64  	%rd6410, %rd6409, %rd6986;
	add.s64 	%rd6411, %rd6992, %rd6987;
	ld.const.u64 	%rd6412, [%rd6402];
	add.s64 	%rd6413, %rd6411, %rd6412;
	add.s64 	%rd6414, %rd6413, %rd6410;
	add.s64 	%rd6415, %rd6414, %rd6407;
	add.s64 	%rd6416, %rd6415, %rd6983;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11499,%dummy}, %rd6400;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11500}, %rd6400;
	}
	shf.r.wrap.b32 	%r11501, %r11500, %r11499, 28;
	shf.r.wrap.b32 	%r11502, %r11499, %r11500, 28;
	mov.b64 	%rd6417, {%r11502, %r11501};
	shf.l.wrap.b32 	%r11503, %r11499, %r11500, 30;
	shf.l.wrap.b32 	%r11504, %r11500, %r11499, 30;
	mov.b64 	%rd6418, {%r11504, %r11503};
	xor.b64  	%rd6419, %rd6418, %rd6417;
	shf.l.wrap.b32 	%r11505, %r11499, %r11500, 25;
	shf.l.wrap.b32 	%r11506, %r11500, %r11499, 25;
	mov.b64 	%rd6420, {%r11506, %r11505};
	xor.b64  	%rd6421, %rd6419, %rd6420;
	xor.b64  	%rd6422, %rd6400, %rd6982;
	xor.b64  	%rd6423, %rd6400, %rd6373;
	and.b64  	%rd6424, %rd6423, %rd6422;
	xor.b64  	%rd6425, %rd6424, %rd6400;
	add.s64 	%rd6426, %rd6415, %rd6425;
	add.s64 	%rd6427, %rd6426, %rd6421;
	add.s32 	%r11507, %r11872, 3;
	mul.wide.s32 	%rd6428, %r11507, 8;
	add.s64 	%rd6429, %rd6347, %rd6428;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11508,%dummy}, %rd6416;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11509}, %rd6416;
	}
	shf.r.wrap.b32 	%r11510, %r11509, %r11508, 14;
	shf.r.wrap.b32 	%r11511, %r11508, %r11509, 14;
	mov.b64 	%rd6430, {%r11511, %r11510};
	shf.r.wrap.b32 	%r11512, %r11509, %r11508, 18;
	shf.r.wrap.b32 	%r11513, %r11508, %r11509, 18;
	mov.b64 	%rd6431, {%r11513, %r11512};
	xor.b64  	%rd6432, %rd6431, %rd6430;
	shf.l.wrap.b32 	%r11514, %r11508, %r11509, 23;
	shf.l.wrap.b32 	%r11515, %r11509, %r11508, 23;
	mov.b64 	%rd6433, {%r11515, %r11514};
	xor.b64  	%rd6434, %rd6432, %rd6433;
	xor.b64  	%rd6435, %rd6389, %rd6362;
	and.b64  	%rd6436, %rd6416, %rd6435;
	xor.b64  	%rd6437, %rd6436, %rd6362;
	add.s64 	%rd6438, %rd6993, %rd6986;
	ld.const.u64 	%rd6439, [%rd6429];
	add.s64 	%rd6440, %rd6438, %rd6439;
	add.s64 	%rd6441, %rd6440, %rd6437;
	add.s64 	%rd6442, %rd6441, %rd6434;
	add.s64 	%rd6443, %rd6442, %rd6982;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11516,%dummy}, %rd6427;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11517}, %rd6427;
	}
	shf.r.wrap.b32 	%r11518, %r11517, %r11516, 28;
	shf.r.wrap.b32 	%r11519, %r11516, %r11517, 28;
	mov.b64 	%rd6444, {%r11519, %r11518};
	shf.l.wrap.b32 	%r11520, %r11516, %r11517, 30;
	shf.l.wrap.b32 	%r11521, %r11517, %r11516, 30;
	mov.b64 	%rd6445, {%r11521, %r11520};
	xor.b64  	%rd6446, %rd6445, %rd6444;
	shf.l.wrap.b32 	%r11522, %r11516, %r11517, 25;
	shf.l.wrap.b32 	%r11523, %r11517, %r11516, 25;
	mov.b64 	%rd6447, {%r11523, %r11522};
	xor.b64  	%rd6448, %rd6446, %rd6447;
	xor.b64  	%rd6449, %rd6427, %rd6373;
	xor.b64  	%rd6450, %rd6427, %rd6400;
	and.b64  	%rd6451, %rd6450, %rd6449;
	xor.b64  	%rd6452, %rd6451, %rd6427;
	add.s64 	%rd6453, %rd6442, %rd6452;
	add.s64 	%rd6454, %rd6453, %rd6448;
	add.s32 	%r11524, %r11872, 4;
	mul.wide.s32 	%rd6455, %r11524, 8;
	add.s64 	%rd6456, %rd6347, %rd6455;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11525,%dummy}, %rd6443;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11526}, %rd6443;
	}
	shf.r.wrap.b32 	%r11527, %r11526, %r11525, 14;
	shf.r.wrap.b32 	%r11528, %r11525, %r11526, 14;
	mov.b64 	%rd6457, {%r11528, %r11527};
	shf.r.wrap.b32 	%r11529, %r11526, %r11525, 18;
	shf.r.wrap.b32 	%r11530, %r11525, %r11526, 18;
	mov.b64 	%rd6458, {%r11530, %r11529};
	xor.b64  	%rd6459, %rd6458, %rd6457;
	shf.l.wrap.b32 	%r11531, %r11525, %r11526, 23;
	shf.l.wrap.b32 	%r11532, %r11526, %r11525, 23;
	mov.b64 	%rd6460, {%r11532, %r11531};
	xor.b64  	%rd6461, %rd6459, %rd6460;
	xor.b64  	%rd6462, %rd6416, %rd6389;
	and.b64  	%rd6463, %rd6443, %rd6462;
	xor.b64  	%rd6464, %rd6463, %rd6389;
	add.s64 	%rd6465, %rd6362, %rd6994;
	ld.const.u64 	%rd6466, [%rd6456];
	add.s64 	%rd6467, %rd6465, %rd6466;
	add.s64 	%rd6468, %rd6467, %rd6464;
	add.s64 	%rd6469, %rd6468, %rd6461;
	add.s64 	%rd6470, %rd6469, %rd6373;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11533,%dummy}, %rd6454;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11534}, %rd6454;
	}
	shf.r.wrap.b32 	%r11535, %r11534, %r11533, 28;
	shf.r.wrap.b32 	%r11536, %r11533, %r11534, 28;
	mov.b64 	%rd6471, {%r11536, %r11535};
	shf.l.wrap.b32 	%r11537, %r11533, %r11534, 30;
	shf.l.wrap.b32 	%r11538, %r11534, %r11533, 30;
	mov.b64 	%rd6472, {%r11538, %r11537};
	xor.b64  	%rd6473, %rd6472, %rd6471;
	shf.l.wrap.b32 	%r11539, %r11533, %r11534, 25;
	shf.l.wrap.b32 	%r11540, %r11534, %r11533, 25;
	mov.b64 	%rd6474, {%r11540, %r11539};
	xor.b64  	%rd6475, %rd6473, %rd6474;
	xor.b64  	%rd6476, %rd6454, %rd6400;
	xor.b64  	%rd6477, %rd6454, %rd6427;
	and.b64  	%rd6478, %rd6477, %rd6476;
	xor.b64  	%rd6479, %rd6478, %rd6454;
	add.s64 	%rd6480, %rd6469, %rd6479;
	add.s64 	%rd6481, %rd6480, %rd6475;
	add.s32 	%r11541, %r11872, 5;
	mul.wide.s32 	%rd6482, %r11541, 8;
	add.s64 	%rd6483, %rd6347, %rd6482;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11542,%dummy}, %rd6470;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11543}, %rd6470;
	}
	shf.r.wrap.b32 	%r11544, %r11543, %r11542, 14;
	shf.r.wrap.b32 	%r11545, %r11542, %r11543, 14;
	mov.b64 	%rd6484, {%r11545, %r11544};
	shf.r.wrap.b32 	%r11546, %r11543, %r11542, 18;
	shf.r.wrap.b32 	%r11547, %r11542, %r11543, 18;
	mov.b64 	%rd6485, {%r11547, %r11546};
	xor.b64  	%rd6486, %rd6485, %rd6484;
	shf.l.wrap.b32 	%r11548, %r11542, %r11543, 23;
	shf.l.wrap.b32 	%r11549, %r11543, %r11542, 23;
	mov.b64 	%rd6487, {%r11549, %r11548};
	xor.b64  	%rd6488, %rd6486, %rd6487;
	xor.b64  	%rd6489, %rd6443, %rd6416;
	and.b64  	%rd6490, %rd6470, %rd6489;
	xor.b64  	%rd6491, %rd6490, %rd6416;
	add.s64 	%rd6492, %rd6389, %rd6995;
	ld.const.u64 	%rd6493, [%rd6483];
	add.s64 	%rd6494, %rd6492, %rd6493;
	add.s64 	%rd6495, %rd6494, %rd6491;
	add.s64 	%rd6496, %rd6495, %rd6488;
	add.s64 	%rd6497, %rd6496, %rd6400;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11550,%dummy}, %rd6481;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11551}, %rd6481;
	}
	shf.r.wrap.b32 	%r11552, %r11551, %r11550, 28;
	shf.r.wrap.b32 	%r11553, %r11550, %r11551, 28;
	mov.b64 	%rd6498, {%r11553, %r11552};
	shf.l.wrap.b32 	%r11554, %r11550, %r11551, 30;
	shf.l.wrap.b32 	%r11555, %r11551, %r11550, 30;
	mov.b64 	%rd6499, {%r11555, %r11554};
	xor.b64  	%rd6500, %rd6499, %rd6498;
	shf.l.wrap.b32 	%r11556, %r11550, %r11551, 25;
	shf.l.wrap.b32 	%r11557, %r11551, %r11550, 25;
	mov.b64 	%rd6501, {%r11557, %r11556};
	xor.b64  	%rd6502, %rd6500, %rd6501;
	xor.b64  	%rd6503, %rd6481, %rd6427;
	xor.b64  	%rd6504, %rd6481, %rd6454;
	and.b64  	%rd6505, %rd6504, %rd6503;
	xor.b64  	%rd6506, %rd6505, %rd6481;
	add.s64 	%rd6507, %rd6496, %rd6506;
	add.s64 	%rd6508, %rd6507, %rd6502;
	add.s32 	%r11558, %r11872, 6;
	mul.wide.s32 	%rd6509, %r11558, 8;
	add.s64 	%rd6510, %rd6347, %rd6509;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11559,%dummy}, %rd6497;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11560}, %rd6497;
	}
	shf.r.wrap.b32 	%r11561, %r11560, %r11559, 14;
	shf.r.wrap.b32 	%r11562, %r11559, %r11560, 14;
	mov.b64 	%rd6511, {%r11562, %r11561};
	shf.r.wrap.b32 	%r11563, %r11560, %r11559, 18;
	shf.r.wrap.b32 	%r11564, %r11559, %r11560, 18;
	mov.b64 	%rd6512, {%r11564, %r11563};
	xor.b64  	%rd6513, %rd6512, %rd6511;
	shf.l.wrap.b32 	%r11565, %r11559, %r11560, 23;
	shf.l.wrap.b32 	%r11566, %r11560, %r11559, 23;
	mov.b64 	%rd6514, {%r11566, %r11565};
	xor.b64  	%rd6515, %rd6513, %rd6514;
	xor.b64  	%rd6516, %rd6470, %rd6443;
	and.b64  	%rd6517, %rd6497, %rd6516;
	xor.b64  	%rd6518, %rd6517, %rd6443;
	add.s64 	%rd6519, %rd6416, %rd6996;
	ld.const.u64 	%rd6520, [%rd6510];
	add.s64 	%rd6521, %rd6519, %rd6520;
	add.s64 	%rd6522, %rd6521, %rd6518;
	add.s64 	%rd6523, %rd6522, %rd6515;
	add.s64 	%rd6524, %rd6523, %rd6427;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11567,%dummy}, %rd6508;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11568}, %rd6508;
	}
	shf.r.wrap.b32 	%r11569, %r11568, %r11567, 28;
	shf.r.wrap.b32 	%r11570, %r11567, %r11568, 28;
	mov.b64 	%rd6525, {%r11570, %r11569};
	shf.l.wrap.b32 	%r11571, %r11567, %r11568, 30;
	shf.l.wrap.b32 	%r11572, %r11568, %r11567, 30;
	mov.b64 	%rd6526, {%r11572, %r11571};
	xor.b64  	%rd6527, %rd6526, %rd6525;
	shf.l.wrap.b32 	%r11573, %r11567, %r11568, 25;
	shf.l.wrap.b32 	%r11574, %r11568, %r11567, 25;
	mov.b64 	%rd6528, {%r11574, %r11573};
	xor.b64  	%rd6529, %rd6527, %rd6528;
	xor.b64  	%rd6530, %rd6508, %rd6454;
	xor.b64  	%rd6531, %rd6508, %rd6481;
	and.b64  	%rd6532, %rd6531, %rd6530;
	xor.b64  	%rd6533, %rd6532, %rd6508;
	add.s64 	%rd6534, %rd6523, %rd6533;
	add.s64 	%rd6535, %rd6534, %rd6529;
	add.s32 	%r11575, %r11872, 7;
	mul.wide.s32 	%rd6536, %r11575, 8;
	add.s64 	%rd6537, %rd6347, %rd6536;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11576,%dummy}, %rd6524;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11577}, %rd6524;
	}
	shf.r.wrap.b32 	%r11578, %r11577, %r11576, 14;
	shf.r.wrap.b32 	%r11579, %r11576, %r11577, 14;
	mov.b64 	%rd6538, {%r11579, %r11578};
	shf.r.wrap.b32 	%r11580, %r11577, %r11576, 18;
	shf.r.wrap.b32 	%r11581, %r11576, %r11577, 18;
	mov.b64 	%rd6539, {%r11581, %r11580};
	xor.b64  	%rd6540, %rd6539, %rd6538;
	shf.l.wrap.b32 	%r11582, %r11576, %r11577, 23;
	shf.l.wrap.b32 	%r11583, %r11577, %r11576, 23;
	mov.b64 	%rd6541, {%r11583, %r11582};
	xor.b64  	%rd6542, %rd6540, %rd6541;
	xor.b64  	%rd6543, %rd6497, %rd6470;
	and.b64  	%rd6544, %rd6524, %rd6543;
	xor.b64  	%rd6545, %rd6544, %rd6470;
	add.s64 	%rd6546, %rd6443, %rd6997;
	ld.const.u64 	%rd6547, [%rd6537];
	add.s64 	%rd6548, %rd6546, %rd6547;
	add.s64 	%rd6549, %rd6548, %rd6545;
	add.s64 	%rd6550, %rd6549, %rd6542;
	add.s64 	%rd6551, %rd6550, %rd6454;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11584,%dummy}, %rd6535;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11585}, %rd6535;
	}
	shf.r.wrap.b32 	%r11586, %r11585, %r11584, 28;
	shf.r.wrap.b32 	%r11587, %r11584, %r11585, 28;
	mov.b64 	%rd6552, {%r11587, %r11586};
	shf.l.wrap.b32 	%r11588, %r11584, %r11585, 30;
	shf.l.wrap.b32 	%r11589, %r11585, %r11584, 30;
	mov.b64 	%rd6553, {%r11589, %r11588};
	xor.b64  	%rd6554, %rd6553, %rd6552;
	shf.l.wrap.b32 	%r11590, %r11584, %r11585, 25;
	shf.l.wrap.b32 	%r11591, %r11585, %r11584, 25;
	mov.b64 	%rd6555, {%r11591, %r11590};
	xor.b64  	%rd6556, %rd6554, %rd6555;
	xor.b64  	%rd6557, %rd6535, %rd6481;
	xor.b64  	%rd6558, %rd6535, %rd6508;
	and.b64  	%rd6559, %rd6558, %rd6557;
	xor.b64  	%rd6560, %rd6559, %rd6535;
	add.s64 	%rd6561, %rd6550, %rd6560;
	add.s64 	%rd6562, %rd6561, %rd6556;
	add.s32 	%r11592, %r11872, 8;
	mul.wide.s32 	%rd6563, %r11592, 8;
	add.s64 	%rd6564, %rd6347, %rd6563;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11593,%dummy}, %rd6551;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11594}, %rd6551;
	}
	shf.r.wrap.b32 	%r11595, %r11594, %r11593, 14;
	shf.r.wrap.b32 	%r11596, %r11593, %r11594, 14;
	mov.b64 	%rd6565, {%r11596, %r11595};
	shf.r.wrap.b32 	%r11597, %r11594, %r11593, 18;
	shf.r.wrap.b32 	%r11598, %r11593, %r11594, 18;
	mov.b64 	%rd6566, {%r11598, %r11597};
	xor.b64  	%rd6567, %rd6566, %rd6565;
	shf.l.wrap.b32 	%r11599, %r11593, %r11594, 23;
	shf.l.wrap.b32 	%r11600, %r11594, %r11593, 23;
	mov.b64 	%rd6568, {%r11600, %r11599};
	xor.b64  	%rd6569, %rd6567, %rd6568;
	xor.b64  	%rd6570, %rd6524, %rd6497;
	and.b64  	%rd6571, %rd6551, %rd6570;
	xor.b64  	%rd6572, %rd6571, %rd6497;
	add.s64 	%rd6573, %rd6470, %rd6981;
	ld.const.u64 	%rd6574, [%rd6564];
	add.s64 	%rd6575, %rd6573, %rd6574;
	add.s64 	%rd6576, %rd6575, %rd6572;
	add.s64 	%rd6577, %rd6576, %rd6569;
	add.s64 	%rd6578, %rd6577, %rd6481;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11601,%dummy}, %rd6562;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11602}, %rd6562;
	}
	shf.r.wrap.b32 	%r11603, %r11602, %r11601, 28;
	shf.r.wrap.b32 	%r11604, %r11601, %r11602, 28;
	mov.b64 	%rd6579, {%r11604, %r11603};
	shf.l.wrap.b32 	%r11605, %r11601, %r11602, 30;
	shf.l.wrap.b32 	%r11606, %r11602, %r11601, 30;
	mov.b64 	%rd6580, {%r11606, %r11605};
	xor.b64  	%rd6581, %rd6580, %rd6579;
	shf.l.wrap.b32 	%r11607, %r11601, %r11602, 25;
	shf.l.wrap.b32 	%r11608, %r11602, %r11601, 25;
	mov.b64 	%rd6582, {%r11608, %r11607};
	xor.b64  	%rd6583, %rd6581, %rd6582;
	xor.b64  	%rd6584, %rd6562, %rd6508;
	xor.b64  	%rd6585, %rd6562, %rd6535;
	and.b64  	%rd6586, %rd6585, %rd6584;
	xor.b64  	%rd6587, %rd6586, %rd6562;
	add.s64 	%rd6588, %rd6577, %rd6587;
	add.s64 	%rd6589, %rd6588, %rd6583;
	add.s32 	%r11609, %r11872, 9;
	mul.wide.s32 	%rd6590, %r11609, 8;
	add.s64 	%rd6591, %rd6347, %rd6590;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11610,%dummy}, %rd6578;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11611}, %rd6578;
	}
	shf.r.wrap.b32 	%r11612, %r11611, %r11610, 14;
	shf.r.wrap.b32 	%r11613, %r11610, %r11611, 14;
	mov.b64 	%rd6592, {%r11613, %r11612};
	shf.r.wrap.b32 	%r11614, %r11611, %r11610, 18;
	shf.r.wrap.b32 	%r11615, %r11610, %r11611, 18;
	mov.b64 	%rd6593, {%r11615, %r11614};
	xor.b64  	%rd6594, %rd6593, %rd6592;
	shf.l.wrap.b32 	%r11616, %r11610, %r11611, 23;
	shf.l.wrap.b32 	%r11617, %r11611, %r11610, 23;
	mov.b64 	%rd6595, {%r11617, %r11616};
	xor.b64  	%rd6596, %rd6594, %rd6595;
	xor.b64  	%rd6597, %rd6551, %rd6524;
	and.b64  	%rd6598, %rd6578, %rd6597;
	xor.b64  	%rd6599, %rd6598, %rd6524;
	add.s64 	%rd6600, %rd6497, %rd6980;
	ld.const.u64 	%rd6601, [%rd6591];
	add.s64 	%rd6602, %rd6600, %rd6601;
	add.s64 	%rd6603, %rd6602, %rd6599;
	add.s64 	%rd6604, %rd6603, %rd6596;
	add.s64 	%rd6605, %rd6604, %rd6508;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11618,%dummy}, %rd6589;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11619}, %rd6589;
	}
	shf.r.wrap.b32 	%r11620, %r11619, %r11618, 28;
	shf.r.wrap.b32 	%r11621, %r11618, %r11619, 28;
	mov.b64 	%rd6606, {%r11621, %r11620};
	shf.l.wrap.b32 	%r11622, %r11618, %r11619, 30;
	shf.l.wrap.b32 	%r11623, %r11619, %r11618, 30;
	mov.b64 	%rd6607, {%r11623, %r11622};
	xor.b64  	%rd6608, %rd6607, %rd6606;
	shf.l.wrap.b32 	%r11624, %r11618, %r11619, 25;
	shf.l.wrap.b32 	%r11625, %r11619, %r11618, 25;
	mov.b64 	%rd6609, {%r11625, %r11624};
	xor.b64  	%rd6610, %rd6608, %rd6609;
	xor.b64  	%rd6611, %rd6589, %rd6535;
	xor.b64  	%rd6612, %rd6589, %rd6562;
	and.b64  	%rd6613, %rd6612, %rd6611;
	xor.b64  	%rd6614, %rd6613, %rd6589;
	add.s64 	%rd6615, %rd6604, %rd6614;
	add.s64 	%rd6616, %rd6615, %rd6610;
	add.s32 	%r11626, %r11872, 10;
	mul.wide.s32 	%rd6617, %r11626, 8;
	add.s64 	%rd6618, %rd6347, %rd6617;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11627,%dummy}, %rd6605;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11628}, %rd6605;
	}
	shf.r.wrap.b32 	%r11629, %r11628, %r11627, 14;
	shf.r.wrap.b32 	%r11630, %r11627, %r11628, 14;
	mov.b64 	%rd6619, {%r11630, %r11629};
	shf.r.wrap.b32 	%r11631, %r11628, %r11627, 18;
	shf.r.wrap.b32 	%r11632, %r11627, %r11628, 18;
	mov.b64 	%rd6620, {%r11632, %r11631};
	xor.b64  	%rd6621, %rd6620, %rd6619;
	shf.l.wrap.b32 	%r11633, %r11627, %r11628, 23;
	shf.l.wrap.b32 	%r11634, %r11628, %r11627, 23;
	mov.b64 	%rd6622, {%r11634, %r11633};
	xor.b64  	%rd6623, %rd6621, %rd6622;
	xor.b64  	%rd6624, %rd6578, %rd6551;
	and.b64  	%rd6625, %rd6605, %rd6624;
	xor.b64  	%rd6626, %rd6625, %rd6551;
	add.s64 	%rd6627, %rd6524, %rd6979;
	ld.const.u64 	%rd6628, [%rd6618];
	add.s64 	%rd6629, %rd6627, %rd6628;
	add.s64 	%rd6630, %rd6629, %rd6626;
	add.s64 	%rd6631, %rd6630, %rd6623;
	add.s64 	%rd6632, %rd6631, %rd6535;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11635,%dummy}, %rd6616;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11636}, %rd6616;
	}
	shf.r.wrap.b32 	%r11637, %r11636, %r11635, 28;
	shf.r.wrap.b32 	%r11638, %r11635, %r11636, 28;
	mov.b64 	%rd6633, {%r11638, %r11637};
	shf.l.wrap.b32 	%r11639, %r11635, %r11636, 30;
	shf.l.wrap.b32 	%r11640, %r11636, %r11635, 30;
	mov.b64 	%rd6634, {%r11640, %r11639};
	xor.b64  	%rd6635, %rd6634, %rd6633;
	shf.l.wrap.b32 	%r11641, %r11635, %r11636, 25;
	shf.l.wrap.b32 	%r11642, %r11636, %r11635, 25;
	mov.b64 	%rd6636, {%r11642, %r11641};
	xor.b64  	%rd6637, %rd6635, %rd6636;
	xor.b64  	%rd6638, %rd6616, %rd6562;
	xor.b64  	%rd6639, %rd6616, %rd6589;
	and.b64  	%rd6640, %rd6639, %rd6638;
	xor.b64  	%rd6641, %rd6640, %rd6616;
	add.s64 	%rd6642, %rd6631, %rd6641;
	add.s64 	%rd6643, %rd6642, %rd6637;
	add.s32 	%r11643, %r11872, 11;
	mul.wide.s32 	%rd6644, %r11643, 8;
	add.s64 	%rd6645, %rd6347, %rd6644;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11644,%dummy}, %rd6632;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11645}, %rd6632;
	}
	shf.r.wrap.b32 	%r11646, %r11645, %r11644, 14;
	shf.r.wrap.b32 	%r11647, %r11644, %r11645, 14;
	mov.b64 	%rd6646, {%r11647, %r11646};
	shf.r.wrap.b32 	%r11648, %r11645, %r11644, 18;
	shf.r.wrap.b32 	%r11649, %r11644, %r11645, 18;
	mov.b64 	%rd6647, {%r11649, %r11648};
	xor.b64  	%rd6648, %rd6647, %rd6646;
	shf.l.wrap.b32 	%r11650, %r11644, %r11645, 23;
	shf.l.wrap.b32 	%r11651, %r11645, %r11644, 23;
	mov.b64 	%rd6649, {%r11651, %r11650};
	xor.b64  	%rd6650, %rd6648, %rd6649;
	xor.b64  	%rd6651, %rd6605, %rd6578;
	and.b64  	%rd6652, %rd6632, %rd6651;
	xor.b64  	%rd6653, %rd6652, %rd6578;
	add.s64 	%rd6654, %rd6551, %rd6978;
	ld.const.u64 	%rd6655, [%rd6645];
	add.s64 	%rd6656, %rd6654, %rd6655;
	add.s64 	%rd6657, %rd6656, %rd6653;
	add.s64 	%rd6658, %rd6657, %rd6650;
	add.s64 	%rd6659, %rd6658, %rd6562;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11652,%dummy}, %rd6643;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11653}, %rd6643;
	}
	shf.r.wrap.b32 	%r11654, %r11653, %r11652, 28;
	shf.r.wrap.b32 	%r11655, %r11652, %r11653, 28;
	mov.b64 	%rd6660, {%r11655, %r11654};
	shf.l.wrap.b32 	%r11656, %r11652, %r11653, 30;
	shf.l.wrap.b32 	%r11657, %r11653, %r11652, 30;
	mov.b64 	%rd6661, {%r11657, %r11656};
	xor.b64  	%rd6662, %rd6661, %rd6660;
	shf.l.wrap.b32 	%r11658, %r11652, %r11653, 25;
	shf.l.wrap.b32 	%r11659, %r11653, %r11652, 25;
	mov.b64 	%rd6663, {%r11659, %r11658};
	xor.b64  	%rd6664, %rd6662, %rd6663;
	xor.b64  	%rd6665, %rd6643, %rd6589;
	xor.b64  	%rd6666, %rd6643, %rd6616;
	and.b64  	%rd6667, %rd6666, %rd6665;
	xor.b64  	%rd6668, %rd6667, %rd6643;
	add.s64 	%rd6669, %rd6658, %rd6668;
	add.s64 	%rd6670, %rd6669, %rd6664;
	add.s32 	%r11660, %r11872, 12;
	mul.wide.s32 	%rd6671, %r11660, 8;
	add.s64 	%rd6672, %rd6347, %rd6671;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11661,%dummy}, %rd6659;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11662}, %rd6659;
	}
	shf.r.wrap.b32 	%r11663, %r11662, %r11661, 14;
	shf.r.wrap.b32 	%r11664, %r11661, %r11662, 14;
	mov.b64 	%rd6673, {%r11664, %r11663};
	shf.r.wrap.b32 	%r11665, %r11662, %r11661, 18;
	shf.r.wrap.b32 	%r11666, %r11661, %r11662, 18;
	mov.b64 	%rd6674, {%r11666, %r11665};
	xor.b64  	%rd6675, %rd6674, %rd6673;
	shf.l.wrap.b32 	%r11667, %r11661, %r11662, 23;
	shf.l.wrap.b32 	%r11668, %r11662, %r11661, 23;
	mov.b64 	%rd6676, {%r11668, %r11667};
	xor.b64  	%rd6677, %rd6675, %rd6676;
	xor.b64  	%rd6678, %rd6632, %rd6605;
	and.b64  	%rd6679, %rd6659, %rd6678;
	xor.b64  	%rd6680, %rd6679, %rd6605;
	add.s64 	%rd6681, %rd6578, %rd6977;
	ld.const.u64 	%rd6682, [%rd6672];
	add.s64 	%rd6683, %rd6681, %rd6682;
	add.s64 	%rd6684, %rd6683, %rd6680;
	add.s64 	%rd6685, %rd6684, %rd6677;
	add.s64 	%rd6989, %rd6685, %rd6589;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11669,%dummy}, %rd6670;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11670}, %rd6670;
	}
	shf.r.wrap.b32 	%r11671, %r11670, %r11669, 28;
	shf.r.wrap.b32 	%r11672, %r11669, %r11670, 28;
	mov.b64 	%rd6686, {%r11672, %r11671};
	shf.l.wrap.b32 	%r11673, %r11669, %r11670, 30;
	shf.l.wrap.b32 	%r11674, %r11670, %r11669, 30;
	mov.b64 	%rd6687, {%r11674, %r11673};
	xor.b64  	%rd6688, %rd6687, %rd6686;
	shf.l.wrap.b32 	%r11675, %r11669, %r11670, 25;
	shf.l.wrap.b32 	%r11676, %r11670, %r11669, 25;
	mov.b64 	%rd6689, {%r11676, %r11675};
	xor.b64  	%rd6690, %rd6688, %rd6689;
	xor.b64  	%rd6691, %rd6670, %rd6616;
	xor.b64  	%rd6692, %rd6670, %rd6643;
	and.b64  	%rd6693, %rd6692, %rd6691;
	xor.b64  	%rd6694, %rd6693, %rd6670;
	add.s64 	%rd6695, %rd6685, %rd6694;
	add.s64 	%rd6985, %rd6695, %rd6690;
	add.s32 	%r11677, %r11872, 13;
	mul.wide.s32 	%rd6696, %r11677, 8;
	add.s64 	%rd6697, %rd6347, %rd6696;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11678,%dummy}, %rd6989;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11679}, %rd6989;
	}
	shf.r.wrap.b32 	%r11680, %r11679, %r11678, 14;
	shf.r.wrap.b32 	%r11681, %r11678, %r11679, 14;
	mov.b64 	%rd6698, {%r11681, %r11680};
	shf.r.wrap.b32 	%r11682, %r11679, %r11678, 18;
	shf.r.wrap.b32 	%r11683, %r11678, %r11679, 18;
	mov.b64 	%rd6699, {%r11683, %r11682};
	xor.b64  	%rd6700, %rd6699, %rd6698;
	shf.l.wrap.b32 	%r11684, %r11678, %r11679, 23;
	shf.l.wrap.b32 	%r11685, %r11679, %r11678, 23;
	mov.b64 	%rd6701, {%r11685, %r11684};
	xor.b64  	%rd6702, %rd6700, %rd6701;
	xor.b64  	%rd6703, %rd6659, %rd6632;
	and.b64  	%rd6704, %rd6989, %rd6703;
	xor.b64  	%rd6705, %rd6704, %rd6632;
	add.s64 	%rd6706, %rd6605, %rd6976;
	ld.const.u64 	%rd6707, [%rd6697];
	add.s64 	%rd6708, %rd6706, %rd6707;
	add.s64 	%rd6709, %rd6708, %rd6705;
	add.s64 	%rd6710, %rd6709, %rd6702;
	add.s64 	%rd6988, %rd6710, %rd6616;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11686,%dummy}, %rd6985;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11687}, %rd6985;
	}
	shf.r.wrap.b32 	%r11688, %r11687, %r11686, 28;
	shf.r.wrap.b32 	%r11689, %r11686, %r11687, 28;
	mov.b64 	%rd6711, {%r11689, %r11688};
	shf.l.wrap.b32 	%r11690, %r11686, %r11687, 30;
	shf.l.wrap.b32 	%r11691, %r11687, %r11686, 30;
	mov.b64 	%rd6712, {%r11691, %r11690};
	xor.b64  	%rd6713, %rd6712, %rd6711;
	shf.l.wrap.b32 	%r11692, %r11686, %r11687, 25;
	shf.l.wrap.b32 	%r11693, %r11687, %r11686, 25;
	mov.b64 	%rd6714, {%r11693, %r11692};
	xor.b64  	%rd6715, %rd6713, %rd6714;
	xor.b64  	%rd6716, %rd6985, %rd6643;
	xor.b64  	%rd6717, %rd6985, %rd6670;
	and.b64  	%rd6718, %rd6717, %rd6716;
	xor.b64  	%rd6719, %rd6718, %rd6985;
	add.s64 	%rd6720, %rd6710, %rd6719;
	add.s64 	%rd6984, %rd6720, %rd6715;
	add.s32 	%r11694, %r11872, 14;
	mul.wide.s32 	%rd6721, %r11694, 8;
	add.s64 	%rd6722, %rd6347, %rd6721;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11695,%dummy}, %rd6988;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11696}, %rd6988;
	}
	shf.r.wrap.b32 	%r11697, %r11696, %r11695, 14;
	shf.r.wrap.b32 	%r11698, %r11695, %r11696, 14;
	mov.b64 	%rd6723, {%r11698, %r11697};
	shf.r.wrap.b32 	%r11699, %r11696, %r11695, 18;
	shf.r.wrap.b32 	%r11700, %r11695, %r11696, 18;
	mov.b64 	%rd6724, {%r11700, %r11699};
	xor.b64  	%rd6725, %rd6724, %rd6723;
	shf.l.wrap.b32 	%r11701, %r11695, %r11696, 23;
	shf.l.wrap.b32 	%r11702, %r11696, %r11695, 23;
	mov.b64 	%rd6726, {%r11702, %r11701};
	xor.b64  	%rd6727, %rd6725, %rd6726;
	xor.b64  	%rd6728, %rd6989, %rd6659;
	and.b64  	%rd6729, %rd6988, %rd6728;
	xor.b64  	%rd6730, %rd6729, %rd6659;
	add.s64 	%rd6731, %rd6632, %rd6975;
	ld.const.u64 	%rd6732, [%rd6722];
	add.s64 	%rd6733, %rd6731, %rd6732;
	add.s64 	%rd6734, %rd6733, %rd6730;
	add.s64 	%rd6735, %rd6734, %rd6727;
	add.s64 	%rd6987, %rd6735, %rd6643;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11703,%dummy}, %rd6984;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11704}, %rd6984;
	}
	shf.r.wrap.b32 	%r11705, %r11704, %r11703, 28;
	shf.r.wrap.b32 	%r11706, %r11703, %r11704, 28;
	mov.b64 	%rd6736, {%r11706, %r11705};
	shf.l.wrap.b32 	%r11707, %r11703, %r11704, 30;
	shf.l.wrap.b32 	%r11708, %r11704, %r11703, 30;
	mov.b64 	%rd6737, {%r11708, %r11707};
	xor.b64  	%rd6738, %rd6737, %rd6736;
	shf.l.wrap.b32 	%r11709, %r11703, %r11704, 25;
	shf.l.wrap.b32 	%r11710, %r11704, %r11703, 25;
	mov.b64 	%rd6739, {%r11710, %r11709};
	xor.b64  	%rd6740, %rd6738, %rd6739;
	xor.b64  	%rd6741, %rd6984, %rd6670;
	xor.b64  	%rd6742, %rd6984, %rd6985;
	and.b64  	%rd6743, %rd6742, %rd6741;
	xor.b64  	%rd6744, %rd6743, %rd6984;
	add.s64 	%rd6745, %rd6735, %rd6744;
	add.s64 	%rd6983, %rd6745, %rd6740;
	add.s32 	%r11711, %r11872, 15;
	mul.wide.s32 	%rd6746, %r11711, 8;
	add.s64 	%rd6747, %rd6347, %rd6746;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11712,%dummy}, %rd6987;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11713}, %rd6987;
	}
	shf.r.wrap.b32 	%r11714, %r11713, %r11712, 14;
	shf.r.wrap.b32 	%r11715, %r11712, %r11713, 14;
	mov.b64 	%rd6748, {%r11715, %r11714};
	shf.r.wrap.b32 	%r11716, %r11713, %r11712, 18;
	shf.r.wrap.b32 	%r11717, %r11712, %r11713, 18;
	mov.b64 	%rd6749, {%r11717, %r11716};
	xor.b64  	%rd6750, %rd6749, %rd6748;
	shf.l.wrap.b32 	%r11718, %r11712, %r11713, 23;
	shf.l.wrap.b32 	%r11719, %r11713, %r11712, 23;
	mov.b64 	%rd6751, {%r11719, %r11718};
	xor.b64  	%rd6752, %rd6750, %rd6751;
	xor.b64  	%rd6753, %rd6988, %rd6989;
	and.b64  	%rd6754, %rd6987, %rd6753;
	xor.b64  	%rd6755, %rd6754, %rd6989;
	add.s64 	%rd6756, %rd6659, %rd6974;
	ld.const.u64 	%rd6757, [%rd6747];
	add.s64 	%rd6758, %rd6756, %rd6757;
	add.s64 	%rd6759, %rd6758, %rd6755;
	add.s64 	%rd6760, %rd6759, %rd6752;
	add.s64 	%rd6986, %rd6760, %rd6670;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r11720,%dummy}, %rd6983;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r11721}, %rd6983;
	}
	shf.r.wrap.b32 	%r11722, %r11721, %r11720, 28;
	shf.r.wrap.b32 	%r11723, %r11720, %r11721, 28;
	mov.b64 	%rd6761, {%r11723, %r11722};
	shf.l.wrap.b32 	%r11724, %r11720, %r11721, 30;
	shf.l.wrap.b32 	%r11725, %r11721, %r11720, 30;
	mov.b64 	%rd6762, {%r11725, %r11724};
	xor.b64  	%rd6763, %rd6762, %rd6761;
	shf.l.wrap.b32 	%r11726, %r11720, %r11721, 25;
	shf.l.wrap.b32 	%r11727, %r11721, %r11720, 25;
	mov.b64 	%rd6764, {%r11727, %r11726};
	xor.b64  	%rd6765, %rd6763, %rd6764;
	xor.b64  	%rd6766, %rd6983, %rd6985;
	xor.b64  	%rd6767, %rd6983, %rd6984;
	and.b64  	%rd6768, %rd6767, %rd6766;
	xor.b64  	%rd6769, %rd6768, %rd6983;
	add.s64 	%rd6770, %rd6760, %rd6769;
	add.s64 	%rd6982, %rd6770, %rd6765;
	add.s32 	%r11872, %r11872, 16;
	setp.lt.s32	%p458, %r11872, 80;
	@%p458 bra 	BB5_774;
	bra.uni 	BB5_775;

BB5_734:
	setp.eq.s32	%p427, %r5142, 23;
	mov.u32 	%r11841, %r11840;
	mov.u32 	%r11842, %r11840;
	mov.u32 	%r11843, %r11840;
	mov.u32 	%r11844, %r11840;
	mov.u32 	%r11845, %r11840;
	mov.u32 	%r11846, %r11840;
	mov.u32 	%r11847, %r11840;
	mov.u32 	%r11848, %r11840;
	mov.u32 	%r11849, %r11840;
	mov.u32 	%r11850, %r11840;
	mov.u32 	%r11851, %r11840;
	mov.u32 	%r11852, %r11840;
	mov.u32 	%r11853, %r11840;
	mov.u32 	%r11854, %r11840;
	mov.u32 	%r11855, %r11840;
	mov.u32 	%r11856, %r11840;
	mov.u32 	%r11857, %r11840;
	mov.u32 	%r11858, %r11840;
	mov.u32 	%r11859, %r11840;
	mov.u32 	%r11860, %r11840;
	mov.u32 	%r11861, %r11840;
	mov.u32 	%r11862, %r11840;
	mov.u32 	%r11863, %r11840;
	mov.u32 	%r11864, %r11840;
	mov.u32 	%r11865, %r11840;
	mov.u32 	%r11866, %r11840;
	mov.u32 	%r11867, %r11840;
	mov.u32 	%r11868, %r11840;
	mov.u32 	%r11869, %r11840;
	mov.u32 	%r11870, %r11840;
	mov.u32 	%r11871, %r11840;
	@%p427 bra 	BB5_735;
	bra.uni 	BB5_773;

BB5_735:
	mov.u32 	%r11838, 0;
	// inline asm
	prmt.b32 %r11860, %r11838, %r38, %r193;
	// inline asm
	ld.local.u32 	%r6494, [%rd62];
	ld.local.u32 	%r6495, [%rd8+8];
	// inline asm
	prmt.b32 %r11861, %r6494, %r6495, %r193;
	// inline asm
	ld.local.u32 	%r6498, [%rd8+8];
	ld.local.u32 	%r6499, [%rd8+4];
	// inline asm
	prmt.b32 %r11862, %r6498, %r6499, %r193;
	// inline asm
	ld.local.v2.u32 	{%r6631, %r6632}, [%rd8];
	// inline asm
	prmt.b32 %r11863, %r6632, %r6631, %r193;
	// inline asm
	ld.local.u32 	%r6506, [%rd8];
	ld.local.u32 	%r6507, [%rd7+12];
	// inline asm
	prmt.b32 %r11856, %r6506, %r6507, %r193;
	// inline asm
	ld.local.v2.u32 	{%r6633, %r6634}, [%rd7+8];
	// inline asm
	prmt.b32 %r11857, %r6634, %r6633, %r193;
	// inline asm
	ld.local.u32 	%r6514, [%rd7+8];
	ld.local.u32 	%r6515, [%rd7+4];
	// inline asm
	prmt.b32 %r11858, %r6514, %r6515, %r193;
	// inline asm
	ld.local.v2.u32 	{%r6635, %r6636}, [%rd7];
	// inline asm
	prmt.b32 %r11859, %r6636, %r6635, %r193;
	// inline asm
	ld.local.u32 	%r6522, [%rd7];
	ld.local.u32 	%r6523, [%rd6+12];
	// inline asm
	prmt.b32 %r11852, %r6522, %r6523, %r193;
	// inline asm
	ld.local.v2.u32 	{%r6637, %r6638}, [%rd6+8];
	// inline asm
	prmt.b32 %r11853, %r6638, %r6637, %r193;
	// inline asm
	ld.local.u32 	%r6530, [%rd6+8];
	ld.local.u32 	%r6531, [%rd6+4];
	// inline asm
	prmt.b32 %r11854, %r6530, %r6531, %r193;
	// inline asm
	ld.local.v2.u32 	{%r6639, %r6640}, [%rd6];
	// inline asm
	prmt.b32 %r11855, %r6640, %r6639, %r193;
	// inline asm
	ld.local.u32 	%r6538, [%rd6];
	ld.local.u32 	%r6539, [%rd5+12];
	// inline asm
	prmt.b32 %r11848, %r6538, %r6539, %r193;
	// inline asm
	ld.local.v2.u32 	{%r6641, %r6642}, [%rd5+8];
	// inline asm
	prmt.b32 %r11849, %r6642, %r6641, %r193;
	// inline asm
	ld.local.u32 	%r6546, [%rd5+8];
	ld.local.u32 	%r6547, [%rd5+4];
	// inline asm
	prmt.b32 %r11850, %r6546, %r6547, %r193;
	// inline asm
	ld.local.v2.u32 	{%r6643, %r6644}, [%rd5];
	// inline asm
	prmt.b32 %r11851, %r6644, %r6643, %r193;
	// inline asm
	ld.local.u32 	%r6554, [%rd5];
	ld.local.u32 	%r6555, [%rd4+12];
	// inline asm
	prmt.b32 %r11844, %r6554, %r6555, %r193;
	// inline asm
	ld.local.v2.u32 	{%r6645, %r6646}, [%rd4+8];
	// inline asm
	prmt.b32 %r11845, %r6646, %r6645, %r193;
	// inline asm
	ld.local.u32 	%r6562, [%rd4+8];
	ld.local.u32 	%r6563, [%rd4+4];
	// inline asm
	prmt.b32 %r11846, %r6562, %r6563, %r193;
	// inline asm
	ld.local.v2.u32 	{%r6647, %r6648}, [%rd4];
	// inline asm
	prmt.b32 %r11847, %r6648, %r6647, %r193;
	// inline asm
	ld.local.u32 	%r6570, [%rd4];
	ld.local.u32 	%r6571, [%rd3+12];
	// inline asm
	prmt.b32 %r11840, %r6570, %r6571, %r193;
	// inline asm
	ld.local.v2.u32 	{%r6649, %r6650}, [%rd3+8];
	// inline asm
	prmt.b32 %r11841, %r6650, %r6649, %r193;
	// inline asm
	ld.local.u32 	%r6578, [%rd3+8];
	ld.local.u32 	%r6579, [%rd3+4];
	// inline asm
	prmt.b32 %r11842, %r6578, %r6579, %r193;
	// inline asm
	ld.local.v2.u32 	{%r6651, %r6652}, [%rd3];
	// inline asm
	prmt.b32 %r11843, %r6652, %r6651, %r193;
	// inline asm
	ld.local.u32 	%r6586, [%rd3];
	ld.local.u32 	%r6587, [%rd2+12];
	// inline asm
	prmt.b32 %r6585, %r6586, %r6587, %r193;
	// inline asm
	st.local.u32 	[%rd62], %r6585;
	ld.local.v2.u32 	{%r6653, %r6654}, [%rd2+8];
	// inline asm
	prmt.b32 %r6589, %r6654, %r6653, %r193;
	// inline asm
	st.local.u32 	[%rd8+8], %r6589;
	ld.local.u32 	%r6594, [%rd2+8];
	ld.local.u32 	%r6595, [%rd2+4];
	// inline asm
	prmt.b32 %r6593, %r6594, %r6595, %r193;
	// inline asm
	st.local.u32 	[%rd8+4], %r6593;
	ld.local.v2.u32 	{%r6655, %r6656}, [%rd2];
	// inline asm
	prmt.b32 %r6597, %r6656, %r6655, %r193;
	// inline asm
	st.local.u32 	[%rd8], %r6597;
	ld.local.u32 	%r6602, [%rd2];
	ld.local.u32 	%r6603, [%rd1+12];
	// inline asm
	prmt.b32 %r6601, %r6602, %r6603, %r193;
	// inline asm
	st.local.u32 	[%rd7+12], %r6601;
	ld.local.v2.u32 	{%r6657, %r6658}, [%rd1+8];
	// inline asm
	prmt.b32 %r6605, %r6658, %r6657, %r193;
	// inline asm
	st.local.u32 	[%rd7+8], %r6605;
	ld.local.u32 	%r6610, [%rd1+8];
	ld.local.u32 	%r6611, [%rd1+4];
	// inline asm
	prmt.b32 %r6609, %r6610, %r6611, %r193;
	// inline asm
	st.local.u32 	[%rd7+4], %r6609;
	ld.local.v2.u32 	{%r6659, %r6660}, [%rd1];
	// inline asm
	prmt.b32 %r6613, %r6660, %r6659, %r193;
	// inline asm
	st.local.u32 	[%rd7], %r6613;
	ld.local.u32 	%r6618, [%rd1];
	// inline asm
	prmt.b32 %r6617, %r6618, %r11838, %r193;
	// inline asm
	st.local.v4.u32 	[%rd6], {%r11838, %r11838, %r11838, %r6617};
	st.local.v4.u32 	[%rd5], {%r11838, %r11838, %r11838, %r11838};
	st.local.v4.u32 	[%rd4], {%r11838, %r11838, %r11838, %r11838};
	st.local.v4.u32 	[%rd3], {%r11838, %r11838, %r11838, %r11838};
	st.local.v4.u32 	[%rd2], {%r11838, %r11838, %r11838, %r11838};
	st.local.v2.u32 	[%rd1+8], {%r11838, %r11838};
	mov.u64 	%rd5756, 0;
	st.local.u64 	[%rd1], %rd5756;
	mov.u32 	%r11839, %r11838;
	bra.uni 	BB5_769;

BB5_718:
	setp.eq.s32	%p439, %r5142, 15;
	mov.u32 	%r11841, %r11840;
	mov.u32 	%r11842, %r11840;
	mov.u32 	%r11843, %r11840;
	mov.u32 	%r11844, %r11840;
	mov.u32 	%r11845, %r11840;
	mov.u32 	%r11846, %r11840;
	mov.u32 	%r11847, %r11840;
	mov.u32 	%r11848, %r11840;
	mov.u32 	%r11849, %r11840;
	mov.u32 	%r11850, %r11840;
	mov.u32 	%r11851, %r11840;
	mov.u32 	%r11852, %r11840;
	mov.u32 	%r11853, %r11840;
	mov.u32 	%r11854, %r11840;
	mov.u32 	%r11855, %r11840;
	mov.u32 	%r11856, %r11840;
	mov.u32 	%r11857, %r11840;
	mov.u32 	%r11858, %r11840;
	mov.u32 	%r11859, %r11840;
	mov.u32 	%r11860, %r11840;
	mov.u32 	%r11861, %r11840;
	mov.u32 	%r11862, %r11840;
	mov.u32 	%r11863, %r11840;
	mov.u32 	%r11864, %r11840;
	mov.u32 	%r11865, %r11840;
	mov.u32 	%r11866, %r11840;
	mov.u32 	%r11867, %r11840;
	mov.u32 	%r11868, %r11840;
	mov.u32 	%r11869, %r11840;
	mov.u32 	%r11870, %r11840;
	mov.u32 	%r11871, %r11840;
	@%p439 bra 	BB5_719;
	bra.uni 	BB5_773;

BB5_719:
	mov.u32 	%r11838, 0;
	// inline asm
	prmt.b32 %r11852, %r11838, %r38, %r193;
	// inline asm
	ld.local.u32 	%r7898, [%rd62];
	ld.local.u32 	%r7899, [%rd8+8];
	// inline asm
	prmt.b32 %r11853, %r7898, %r7899, %r193;
	// inline asm
	ld.local.u32 	%r7902, [%rd8+8];
	ld.local.u32 	%r7903, [%rd8+4];
	// inline asm
	prmt.b32 %r11854, %r7902, %r7903, %r193;
	// inline asm
	ld.local.v2.u32 	{%r8043, %r8044}, [%rd8];
	// inline asm
	prmt.b32 %r11855, %r8044, %r8043, %r193;
	// inline asm
	ld.local.u32 	%r7910, [%rd8];
	ld.local.u32 	%r7911, [%rd7+12];
	// inline asm
	prmt.b32 %r11848, %r7910, %r7911, %r193;
	// inline asm
	ld.local.v2.u32 	{%r8045, %r8046}, [%rd7+8];
	// inline asm
	prmt.b32 %r11849, %r8046, %r8045, %r193;
	// inline asm
	ld.local.u32 	%r7918, [%rd7+8];
	ld.local.u32 	%r7919, [%rd7+4];
	// inline asm
	prmt.b32 %r11850, %r7918, %r7919, %r193;
	// inline asm
	ld.local.v2.u32 	{%r8047, %r8048}, [%rd7];
	// inline asm
	prmt.b32 %r11851, %r8048, %r8047, %r193;
	// inline asm
	ld.local.u32 	%r7926, [%rd7];
	ld.local.u32 	%r7927, [%rd6+12];
	// inline asm
	prmt.b32 %r11844, %r7926, %r7927, %r193;
	// inline asm
	ld.local.v2.u32 	{%r8049, %r8050}, [%rd6+8];
	// inline asm
	prmt.b32 %r11845, %r8050, %r8049, %r193;
	// inline asm
	ld.local.u32 	%r7934, [%rd6+8];
	ld.local.u32 	%r7935, [%rd6+4];
	// inline asm
	prmt.b32 %r11846, %r7934, %r7935, %r193;
	// inline asm
	ld.local.v2.u32 	{%r8051, %r8052}, [%rd6];
	// inline asm
	prmt.b32 %r11847, %r8052, %r8051, %r193;
	// inline asm
	ld.local.u32 	%r7942, [%rd6];
	ld.local.u32 	%r7943, [%rd5+12];
	// inline asm
	prmt.b32 %r11840, %r7942, %r7943, %r193;
	// inline asm
	ld.local.v2.u32 	{%r8053, %r8054}, [%rd5+8];
	// inline asm
	prmt.b32 %r11841, %r8054, %r8053, %r193;
	// inline asm
	ld.local.u32 	%r7950, [%rd5+8];
	ld.local.u32 	%r7951, [%rd5+4];
	// inline asm
	prmt.b32 %r11842, %r7950, %r7951, %r193;
	// inline asm
	ld.local.v2.u32 	{%r8055, %r8056}, [%rd5];
	// inline asm
	prmt.b32 %r11843, %r8056, %r8055, %r193;
	// inline asm
	ld.local.u32 	%r7958, [%rd5];
	ld.local.u32 	%r7959, [%rd4+12];
	// inline asm
	prmt.b32 %r7957, %r7958, %r7959, %r193;
	// inline asm
	st.local.u32 	[%rd62], %r7957;
	ld.local.v2.u32 	{%r8057, %r8058}, [%rd4+8];
	// inline asm
	prmt.b32 %r7961, %r8058, %r8057, %r193;
	// inline asm
	st.local.u32 	[%rd8+8], %r7961;
	ld.local.u32 	%r7966, [%rd4+8];
	ld.local.u32 	%r7967, [%rd4+4];
	// inline asm
	prmt.b32 %r7965, %r7966, %r7967, %r193;
	// inline asm
	st.local.u32 	[%rd8+4], %r7965;
	ld.local.v2.u32 	{%r8059, %r8060}, [%rd4];
	// inline asm
	prmt.b32 %r7969, %r8060, %r8059, %r193;
	// inline asm
	st.local.u32 	[%rd8], %r7969;
	ld.local.u32 	%r7974, [%rd4];
	ld.local.u32 	%r7975, [%rd3+12];
	// inline asm
	prmt.b32 %r7973, %r7974, %r7975, %r193;
	// inline asm
	st.local.u32 	[%rd7+12], %r7973;
	ld.local.v2.u32 	{%r8061, %r8062}, [%rd3+8];
	// inline asm
	prmt.b32 %r7977, %r8062, %r8061, %r193;
	// inline asm
	st.local.u32 	[%rd7+8], %r7977;
	ld.local.u32 	%r7982, [%rd3+8];
	ld.local.u32 	%r7983, [%rd3+4];
	// inline asm
	prmt.b32 %r7981, %r7982, %r7983, %r193;
	// inline asm
	st.local.u32 	[%rd7+4], %r7981;
	ld.local.v2.u32 	{%r8063, %r8064}, [%rd3];
	// inline asm
	prmt.b32 %r7985, %r8064, %r8063, %r193;
	// inline asm
	st.local.u32 	[%rd7], %r7985;
	ld.local.u32 	%r7990, [%rd3];
	ld.local.u32 	%r7991, [%rd2+12];
	// inline asm
	prmt.b32 %r7989, %r7990, %r7991, %r193;
	// inline asm
	st.local.u32 	[%rd6+12], %r7989;
	ld.local.v2.u32 	{%r8065, %r8066}, [%rd2+8];
	// inline asm
	prmt.b32 %r7993, %r8066, %r8065, %r193;
	// inline asm
	st.local.u32 	[%rd6+8], %r7993;
	ld.local.u32 	%r7998, [%rd2+8];
	ld.local.u32 	%r7999, [%rd2+4];
	// inline asm
	prmt.b32 %r7997, %r7998, %r7999, %r193;
	// inline asm
	st.local.u32 	[%rd6+4], %r7997;
	ld.local.v2.u32 	{%r8067, %r8068}, [%rd2];
	// inline asm
	prmt.b32 %r8001, %r8068, %r8067, %r193;
	// inline asm
	st.local.u32 	[%rd6], %r8001;
	ld.local.u32 	%r8006, [%rd2];
	ld.local.u32 	%r8007, [%rd1+12];
	// inline asm
	prmt.b32 %r8005, %r8006, %r8007, %r193;
	// inline asm
	st.local.u32 	[%rd5+12], %r8005;
	ld.local.v2.u32 	{%r8069, %r8070}, [%rd1+8];
	// inline asm
	prmt.b32 %r8009, %r8070, %r8069, %r193;
	// inline asm
	st.local.u32 	[%rd5+8], %r8009;
	ld.local.u32 	%r8014, [%rd1+8];
	ld.local.u32 	%r8015, [%rd1+4];
	// inline asm
	prmt.b32 %r8013, %r8014, %r8015, %r193;
	// inline asm
	st.local.u32 	[%rd5+4], %r8013;
	ld.local.v2.u32 	{%r8071, %r8072}, [%rd1];
	// inline asm
	prmt.b32 %r8017, %r8072, %r8071, %r193;
	// inline asm
	st.local.u32 	[%rd5], %r8017;
	ld.local.u32 	%r8022, [%rd1];
	// inline asm
	prmt.b32 %r8021, %r8022, %r11838, %r193;
	// inline asm
	st.local.v4.u32 	[%rd4], {%r11838, %r11838, %r11838, %r8021};
	st.local.v4.u32 	[%rd3], {%r11838, %r11838, %r11838, %r11838};
	st.local.v4.u32 	[%rd2], {%r11838, %r11838, %r11838, %r11838};
	st.local.v2.u32 	[%rd1+8], {%r11838, %r11838};
	mov.u64 	%rd5764, 0;
	st.local.u64 	[%rd1], %rd5764;
	mov.u32 	%r11839, %r11838;
	bra.uni 	BB5_767;

BB5_749:
	setp.ne.s32	%p416, %r5142, 31;
	mov.u32 	%r11841, %r11840;
	mov.u32 	%r11842, %r11840;
	mov.u32 	%r11843, %r11840;
	mov.u32 	%r11844, %r11840;
	mov.u32 	%r11845, %r11840;
	mov.u32 	%r11846, %r11840;
	mov.u32 	%r11847, %r11840;
	mov.u32 	%r11848, %r11840;
	mov.u32 	%r11849, %r11840;
	mov.u32 	%r11850, %r11840;
	mov.u32 	%r11851, %r11840;
	mov.u32 	%r11852, %r11840;
	mov.u32 	%r11853, %r11840;
	mov.u32 	%r11854, %r11840;
	mov.u32 	%r11855, %r11840;
	mov.u32 	%r11856, %r11840;
	mov.u32 	%r11857, %r11840;
	mov.u32 	%r11858, %r11840;
	mov.u32 	%r11859, %r11840;
	mov.u32 	%r11860, %r11840;
	mov.u32 	%r11861, %r11840;
	mov.u32 	%r11862, %r11840;
	mov.u32 	%r11863, %r11840;
	mov.u32 	%r11864, %r11840;
	mov.u32 	%r11865, %r11840;
	mov.u32 	%r11866, %r11840;
	mov.u32 	%r11867, %r11840;
	mov.u32 	%r11868, %r11840;
	mov.u32 	%r11869, %r11840;
	mov.u32 	%r11870, %r11840;
	mov.u32 	%r11871, %r11840;
	@%p416 bra 	BB5_773;

	mov.u32 	%r11838, 0;
	// inline asm
	prmt.b32 %r11868, %r11838, %r38, %r193;
	// inline asm
	ld.local.u32 	%r5154, [%rd62];
	ld.local.u32 	%r5155, [%rd8+8];
	// inline asm
	prmt.b32 %r11869, %r5154, %r5155, %r193;
	// inline asm
	ld.local.u32 	%r5158, [%rd8+8];
	ld.local.u32 	%r5159, [%rd8+4];
	// inline asm
	prmt.b32 %r11870, %r5158, %r5159, %r193;
	// inline asm
	ld.local.v2.u32 	{%r5283, %r5284}, [%rd8];
	// inline asm
	prmt.b32 %r11871, %r5284, %r5283, %r193;
	// inline asm
	ld.local.u32 	%r5166, [%rd8];
	ld.local.u32 	%r5167, [%rd7+12];
	// inline asm
	prmt.b32 %r11864, %r5166, %r5167, %r193;
	// inline asm
	ld.local.v2.u32 	{%r5285, %r5286}, [%rd7+8];
	// inline asm
	prmt.b32 %r11865, %r5286, %r5285, %r193;
	// inline asm
	ld.local.u32 	%r5174, [%rd7+8];
	ld.local.u32 	%r5175, [%rd7+4];
	// inline asm
	prmt.b32 %r11866, %r5174, %r5175, %r193;
	// inline asm
	ld.local.v2.u32 	{%r5287, %r5288}, [%rd7];
	// inline asm
	prmt.b32 %r11867, %r5288, %r5287, %r193;
	// inline asm
	ld.local.u32 	%r5182, [%rd7];
	ld.local.u32 	%r5183, [%rd6+12];
	// inline asm
	prmt.b32 %r11860, %r5182, %r5183, %r193;
	// inline asm
	ld.local.v2.u32 	{%r5289, %r5290}, [%rd6+8];
	// inline asm
	prmt.b32 %r11861, %r5290, %r5289, %r193;
	// inline asm
	ld.local.u32 	%r5190, [%rd6+8];
	ld.local.u32 	%r5191, [%rd6+4];
	// inline asm
	prmt.b32 %r11862, %r5190, %r5191, %r193;
	// inline asm
	ld.local.v2.u32 	{%r5291, %r5292}, [%rd6];
	// inline asm
	prmt.b32 %r11863, %r5292, %r5291, %r193;
	// inline asm
	ld.local.u32 	%r5198, [%rd6];
	ld.local.u32 	%r5199, [%rd5+12];
	// inline asm
	prmt.b32 %r11856, %r5198, %r5199, %r193;
	// inline asm
	ld.local.v2.u32 	{%r5293, %r5294}, [%rd5+8];
	// inline asm
	prmt.b32 %r11857, %r5294, %r5293, %r193;
	// inline asm
	ld.local.u32 	%r5206, [%rd5+8];
	ld.local.u32 	%r5207, [%rd5+4];
	// inline asm
	prmt.b32 %r11858, %r5206, %r5207, %r193;
	// inline asm
	ld.local.v2.u32 	{%r5295, %r5296}, [%rd5];
	// inline asm
	prmt.b32 %r11859, %r5296, %r5295, %r193;
	// inline asm
	ld.local.u32 	%r5214, [%rd5];
	ld.local.u32 	%r5215, [%rd4+12];
	// inline asm
	prmt.b32 %r11852, %r5214, %r5215, %r193;
	// inline asm
	ld.local.v2.u32 	{%r5297, %r5298}, [%rd4+8];
	// inline asm
	prmt.b32 %r11853, %r5298, %r5297, %r193;
	// inline asm
	ld.local.u32 	%r5222, [%rd4+8];
	ld.local.u32 	%r5223, [%rd4+4];
	// inline asm
	prmt.b32 %r11854, %r5222, %r5223, %r193;
	// inline asm
	ld.local.v2.u32 	{%r5299, %r5300}, [%rd4];
	// inline asm
	prmt.b32 %r11855, %r5300, %r5299, %r193;
	// inline asm
	ld.local.u32 	%r5230, [%rd4];
	ld.local.u32 	%r5231, [%rd3+12];
	// inline asm
	prmt.b32 %r11848, %r5230, %r5231, %r193;
	// inline asm
	ld.local.v2.u32 	{%r5301, %r5302}, [%rd3+8];
	// inline asm
	prmt.b32 %r11849, %r5302, %r5301, %r193;
	// inline asm
	ld.local.u32 	%r5238, [%rd3+8];
	ld.local.u32 	%r5239, [%rd3+4];
	// inline asm
	prmt.b32 %r11850, %r5238, %r5239, %r193;
	// inline asm
	ld.local.v2.u32 	{%r5303, %r5304}, [%rd3];
	// inline asm
	prmt.b32 %r11851, %r5304, %r5303, %r193;
	// inline asm
	ld.local.u32 	%r5246, [%rd3];
	ld.local.u32 	%r5247, [%rd2+12];
	// inline asm
	prmt.b32 %r11844, %r5246, %r5247, %r193;
	// inline asm
	ld.local.v2.u32 	{%r5305, %r5306}, [%rd2+8];
	// inline asm
	prmt.b32 %r11845, %r5306, %r5305, %r193;
	// inline asm
	ld.local.u32 	%r5254, [%rd2+8];
	ld.local.u32 	%r5255, [%rd2+4];
	// inline asm
	prmt.b32 %r11846, %r5254, %r5255, %r193;
	// inline asm
	ld.local.v2.u32 	{%r5307, %r5308}, [%rd2];
	// inline asm
	prmt.b32 %r11847, %r5308, %r5307, %r193;
	// inline asm
	ld.local.u32 	%r5262, [%rd2];
	ld.local.u32 	%r5263, [%rd1+12];
	// inline asm
	prmt.b32 %r11840, %r5262, %r5263, %r193;
	// inline asm
	ld.local.v2.u32 	{%r5309, %r5310}, [%rd1+8];
	// inline asm
	prmt.b32 %r11841, %r5310, %r5309, %r193;
	// inline asm
	ld.local.u32 	%r5270, [%rd1+8];
	ld.local.u32 	%r5271, [%rd1+4];
	// inline asm
	prmt.b32 %r11842, %r5270, %r5271, %r193;
	// inline asm
	ld.local.v2.u32 	{%r5311, %r5312}, [%rd1];
	// inline asm
	prmt.b32 %r11843, %r5312, %r5311, %r193;
	// inline asm
	ld.local.u32 	%r5278, [%rd1];
	// inline asm
	prmt.b32 %r5277, %r5278, %r11838, %r193;
	// inline asm
	st.local.u32 	[%rd62], %r5277;
	st.local.u32 	[%rd8+8], %r11838;
	st.local.v2.u32 	[%rd8], {%r11838, %r11838};
	st.local.u32 	[%rd7+12], %r11838;
	st.local.u32 	[%rd7+8], %r11838;
	st.local.u32 	[%rd7+4], %r11838;
	st.local.u32 	[%rd7], %r11838;
	st.local.u32 	[%rd6+12], %r11838;
	st.local.u32 	[%rd6+8], %r11838;
	st.local.u32 	[%rd6+4], %r11838;
	st.local.u32 	[%rd6], %r11838;
	st.local.u32 	[%rd5+12], %r11838;
	st.local.u32 	[%rd5+8], %r11838;
	st.local.u32 	[%rd5+4], %r11838;
	st.local.u32 	[%rd5], %r11838;
	st.local.u32 	[%rd4+12], %r11838;
	st.local.u32 	[%rd4+8], %r11838;
	st.local.u32 	[%rd4+4], %r11838;
	st.local.u32 	[%rd4], %r11838;
	st.local.u32 	[%rd3+12], %r11838;
	st.local.u32 	[%rd3+8], %r11838;
	st.local.u32 	[%rd3+4], %r11838;
	st.local.u32 	[%rd3], %r11838;
	st.local.u32 	[%rd2+12], %r11838;
	st.local.u32 	[%rd2+8], %r11838;
	st.local.u32 	[%rd2+4], %r11838;
	st.local.u32 	[%rd2], %r11838;
	st.local.u32 	[%rd1+12], %r11838;
	st.local.u32 	[%rd1+8], %r11838;
	mov.u64 	%rd5748, 0;
	st.local.u32 	[%rd1+4], %rd5748;
	st.local.u32 	[%rd1], %rd5748;
	mov.u32 	%r11839, %r11838;
	bra.uni 	BB5_773;

BB5_23:
	add.u64 	%rd6786, %SP, 112;
	add.u64 	%rd6785, %SP, 96;
	add.u64 	%rd6784, %SP, 80;
	add.u64 	%rd6783, %SP, 64;
	add.u64 	%rd6782, %SP, 48;
	add.u64 	%rd6781, %SP, 32;
	add.u64 	%rd6780, %SP, 16;
	add.u64 	%rd6779, %SP, 0;
	sub.s32 	%r897, %r2, %r11769;
	// Callseq Start 10
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd621;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd6779;
	.param .b64 param2;
	st.param.b64	[param2+0], %rd6780;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd6781;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd6782;
	.param .b64 param5;
	st.param.b64	[param5+0], %rd6783;
	.param .b64 param6;
	st.param.b64	[param6+0], %rd6784;
	.param .b64 param7;
	st.param.b64	[param7+0], %rd6785;
	.param .b64 param8;
	st.param.b64	[param8+0], %rd6786;
	.param .b32 param9;
	st.param.b32	[param9+0], %r897;
	call.uni 
	sha512_update_128, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7, 
	param8, 
	param9
	);
	
	//{
	}// Callseq End 10
	ld.local.u32 	%r39, [%rd61];
	and.b32  	%r40, %r39, 127;
	xor.b32  	%r896, %r40, 3;
	setp.gt.s32	%p17, %r896, 63;
	@%p17 bra 	BB5_151;

	setp.gt.s32	%p113, %r896, 31;
	@%p113 bra 	BB5_88;

	setp.gt.s32	%p161, %r896, 15;
	@%p161 bra 	BB5_57;

	setp.gt.s32	%p185, %r896, 7;
	@%p185 bra 	BB5_42;

	setp.gt.s32	%p197, %r896, 3;
	@%p197 bra 	BB5_35;

	setp.gt.s32	%p203, %r896, 1;
	@%p203 bra 	BB5_32;

	setp.eq.s32	%p206, %r896, 0;
	@%p206 bra 	BB5_341;
	bra.uni 	BB5_30;

BB5_341:
	ld.local.u32 	%r1152, [%rd45];
	or.b32  	%r1153, %r1152, 128;
	st.local.u32 	[%rd45], %r1153;
	bra.uni 	BB5_342;

BB5_151:
	setp.gt.s32	%p18, %r896, 95;
	@%p18 bra 	BB5_215;

	setp.gt.s32	%p66, %r896, 79;
	@%p66 bra 	BB5_184;

	setp.gt.s32	%p90, %r896, 71;
	@%p90 bra 	BB5_169;

	setp.gt.s32	%p102, %r896, 67;
	@%p102 bra 	BB5_162;

	setp.gt.s32	%p108, %r896, 65;
	@%p108 bra 	BB5_159;

	setp.eq.s32	%p111, %r896, 64;
	@%p111 bra 	BB5_309;
	bra.uni 	BB5_157;

BB5_309:
	ld.local.u32 	%r1024, [%rd29];
	or.b32  	%r1025, %r1024, 128;
	st.local.u32 	[%rd29], %r1025;
	bra.uni 	BB5_342;

BB5_88:
	setp.gt.s32	%p114, %r896, 47;
	@%p114 bra 	BB5_120;

	setp.gt.s32	%p138, %r896, 39;
	@%p138 bra 	BB5_105;

	setp.gt.s32	%p150, %r896, 35;
	@%p150 bra 	BB5_98;

	setp.gt.s32	%p156, %r896, 33;
	@%p156 bra 	BB5_95;

	setp.eq.s32	%p159, %r896, 32;
	@%p159 bra 	BB5_325;
	bra.uni 	BB5_93;

BB5_325:
	ld.local.u32 	%r1088, [%rd53];
	or.b32  	%r1089, %r1088, 128;
	st.local.u32 	[%rd53], %r1089;
	bra.uni 	BB5_342;

BB5_215:
	setp.gt.s32	%p19, %r896, 111;
	@%p19 bra 	BB5_247;

	setp.gt.s32	%p43, %r896, 103;
	@%p43 bra 	BB5_232;

	setp.gt.s32	%p55, %r896, 99;
	@%p55 bra 	BB5_225;

	setp.gt.s32	%p61, %r896, 97;
	@%p61 bra 	BB5_222;

	setp.eq.s32	%p64, %r896, 96;
	@%p64 bra 	BB5_293;
	bra.uni 	BB5_220;

BB5_293:
	ld.local.u32 	%r960, [%rd37];
	or.b32  	%r961, %r960, 128;
	st.local.u32 	[%rd37], %r961;
	bra.uni 	BB5_342;

BB5_57:
	setp.gt.s32	%p162, %r896, 23;
	@%p162 bra 	BB5_73;

	setp.gt.s32	%p174, %r896, 19;
	@%p174 bra 	BB5_66;

	setp.gt.s32	%p180, %r896, 17;
	@%p180 bra 	BB5_63;

	setp.eq.s32	%p183, %r896, 16;
	@%p183 bra 	BB5_333;
	bra.uni 	BB5_61;

BB5_333:
	ld.local.u32 	%r1120, [%rd49];
	or.b32  	%r1121, %r1120, 128;
	st.local.u32 	[%rd49], %r1121;
	bra.uni 	BB5_342;

BB5_184:
	setp.gt.s32	%p67, %r896, 87;
	@%p67 bra 	BB5_200;

	setp.gt.s32	%p79, %r896, 83;
	@%p79 bra 	BB5_193;

	setp.gt.s32	%p85, %r896, 81;
	@%p85 bra 	BB5_190;

	setp.eq.s32	%p88, %r896, 80;
	@%p88 bra 	BB5_301;
	bra.uni 	BB5_188;

BB5_301:
	ld.local.u32 	%r992, [%rd33];
	or.b32  	%r993, %r992, 128;
	st.local.u32 	[%rd33], %r993;
	bra.uni 	BB5_342;

BB5_120:
	setp.gt.s32	%p115, %r896, 55;
	@%p115 bra 	BB5_136;

	setp.gt.s32	%p127, %r896, 51;
	@%p127 bra 	BB5_129;

	setp.gt.s32	%p133, %r896, 49;
	@%p133 bra 	BB5_126;

	setp.eq.s32	%p136, %r896, 48;
	@%p136 bra 	BB5_317;
	bra.uni 	BB5_124;

BB5_317:
	ld.local.u32 	%r1056, [%rd57];
	or.b32  	%r1057, %r1056, 128;
	st.local.u32 	[%rd57], %r1057;
	bra.uni 	BB5_342;

BB5_247:
	setp.gt.s32	%p20, %r896, 119;
	@%p20 bra 	BB5_263;

	setp.gt.s32	%p32, %r896, 115;
	@%p32 bra 	BB5_256;

	setp.gt.s32	%p38, %r896, 113;
	@%p38 bra 	BB5_253;

	setp.eq.s32	%p41, %r896, 112;
	@%p41 bra 	BB5_285;
	bra.uni 	BB5_251;

BB5_285:
	ld.local.u32 	%r928, [%rd41];
	or.b32  	%r929, %r928, 128;
	st.local.u32 	[%rd41], %r929;
	bra.uni 	BB5_342;

BB5_42:
	setp.gt.s32	%p186, %r896, 11;
	@%p186 bra 	BB5_50;

	setp.gt.s32	%p192, %r896, 9;
	@%p192 bra 	BB5_47;

	setp.eq.s32	%p195, %r896, 8;
	@%p195 bra 	BB5_337;
	bra.uni 	BB5_45;

BB5_337:
	ld.local.u32 	%r1136, [%rd47];
	or.b32  	%r1137, %r1136, 128;
	st.local.u32 	[%rd47], %r1137;
	bra.uni 	BB5_342;

BB5_169:
	setp.gt.s32	%p91, %r896, 75;
	@%p91 bra 	BB5_177;

	setp.gt.s32	%p97, %r896, 73;
	@%p97 bra 	BB5_174;

	setp.eq.s32	%p100, %r896, 72;
	@%p100 bra 	BB5_305;
	bra.uni 	BB5_172;

BB5_305:
	ld.local.u32 	%r1008, [%rd31];
	or.b32  	%r1009, %r1008, 128;
	st.local.u32 	[%rd31], %r1009;
	bra.uni 	BB5_342;

BB5_105:
	setp.gt.s32	%p139, %r896, 43;
	@%p139 bra 	BB5_113;

	setp.gt.s32	%p145, %r896, 41;
	@%p145 bra 	BB5_110;

	setp.eq.s32	%p148, %r896, 40;
	@%p148 bra 	BB5_321;
	bra.uni 	BB5_108;

BB5_321:
	ld.local.u32 	%r1072, [%rd55];
	or.b32  	%r1073, %r1072, 128;
	st.local.u32 	[%rd55], %r1073;
	bra.uni 	BB5_342;

BB5_232:
	setp.gt.s32	%p44, %r896, 107;
	@%p44 bra 	BB5_240;

	setp.gt.s32	%p50, %r896, 105;
	@%p50 bra 	BB5_237;

	setp.eq.s32	%p53, %r896, 104;
	@%p53 bra 	BB5_289;
	bra.uni 	BB5_235;

BB5_289:
	ld.local.u32 	%r944, [%rd39];
	or.b32  	%r945, %r944, 128;
	st.local.u32 	[%rd39], %r945;
	bra.uni 	BB5_342;

BB5_73:
	setp.gt.s32	%p163, %r896, 27;
	@%p163 bra 	BB5_81;

	setp.gt.s32	%p169, %r896, 25;
	@%p169 bra 	BB5_78;

	setp.eq.s32	%p172, %r896, 24;
	@%p172 bra 	BB5_329;
	bra.uni 	BB5_76;

BB5_329:
	ld.local.u32 	%r1104, [%rd51];
	or.b32  	%r1105, %r1104, 128;
	st.local.u32 	[%rd51], %r1105;
	bra.uni 	BB5_342;

BB5_200:
	setp.gt.s32	%p68, %r896, 91;
	@%p68 bra 	BB5_208;

	setp.gt.s32	%p74, %r896, 89;
	@%p74 bra 	BB5_205;

	setp.eq.s32	%p77, %r896, 88;
	@%p77 bra 	BB5_297;
	bra.uni 	BB5_203;

BB5_297:
	ld.local.u32 	%r976, [%rd35];
	or.b32  	%r977, %r976, 128;
	st.local.u32 	[%rd35], %r977;
	bra.uni 	BB5_342;

BB5_136:
	setp.gt.s32	%p116, %r896, 59;
	@%p116 bra 	BB5_144;

	setp.gt.s32	%p122, %r896, 57;
	@%p122 bra 	BB5_141;

	setp.eq.s32	%p125, %r896, 56;
	@%p125 bra 	BB5_313;
	bra.uni 	BB5_139;

BB5_313:
	ld.local.u32 	%r1040, [%rd59];
	or.b32  	%r1041, %r1040, 128;
	st.local.u32 	[%rd59], %r1041;
	bra.uni 	BB5_342;

BB5_263:
	setp.gt.s32	%p21, %r896, 123;
	@%p21 bra 	BB5_271;

	setp.gt.s32	%p27, %r896, 121;
	@%p27 bra 	BB5_268;

	setp.eq.s32	%p30, %r896, 120;
	@%p30 bra 	BB5_281;
	bra.uni 	BB5_266;

BB5_281:
	ld.local.u32 	%r912, [%rd43];
	or.b32  	%r913, %r912, 128;
	st.local.u32 	[%rd43], %r913;
	bra.uni 	BB5_342;

BB5_35:
	setp.gt.s32	%p198, %r896, 5;
	@%p198 bra 	BB5_39;

	setp.eq.s32	%p201, %r896, 4;
	@%p201 bra 	BB5_339;
	bra.uni 	BB5_37;

BB5_339:
	ld.local.u32 	%r1144, [%rd46];
	or.b32  	%r1145, %r1144, 128;
	st.local.u32 	[%rd46], %r1145;
	bra.uni 	BB5_342;

BB5_162:
	setp.gt.s32	%p103, %r896, 69;
	@%p103 bra 	BB5_166;

	setp.eq.s32	%p106, %r896, 68;
	@%p106 bra 	BB5_307;
	bra.uni 	BB5_164;

BB5_307:
	ld.local.u32 	%r1016, [%rd30];
	or.b32  	%r1017, %r1016, 128;
	st.local.u32 	[%rd30], %r1017;
	bra.uni 	BB5_342;

BB5_98:
	setp.gt.s32	%p151, %r896, 37;
	@%p151 bra 	BB5_102;

	setp.eq.s32	%p154, %r896, 36;
	@%p154 bra 	BB5_323;
	bra.uni 	BB5_100;

BB5_323:
	ld.local.u32 	%r1080, [%rd54];
	or.b32  	%r1081, %r1080, 128;
	st.local.u32 	[%rd54], %r1081;
	bra.uni 	BB5_342;

BB5_225:
	setp.gt.s32	%p56, %r896, 101;
	@%p56 bra 	BB5_229;

	setp.eq.s32	%p59, %r896, 100;
	@%p59 bra 	BB5_291;
	bra.uni 	BB5_227;

BB5_291:
	ld.local.u32 	%r952, [%rd38];
	or.b32  	%r953, %r952, 128;
	st.local.u32 	[%rd38], %r953;
	bra.uni 	BB5_342;

BB5_66:
	setp.gt.s32	%p175, %r896, 21;
	@%p175 bra 	BB5_70;

	setp.eq.s32	%p178, %r896, 20;
	@%p178 bra 	BB5_331;
	bra.uni 	BB5_68;

BB5_331:
	ld.local.u32 	%r1112, [%rd50];
	or.b32  	%r1113, %r1112, 128;
	st.local.u32 	[%rd50], %r1113;
	bra.uni 	BB5_342;

BB5_193:
	setp.gt.s32	%p80, %r896, 85;
	@%p80 bra 	BB5_197;

	setp.eq.s32	%p83, %r896, 84;
	@%p83 bra 	BB5_299;
	bra.uni 	BB5_195;

BB5_299:
	ld.local.u32 	%r984, [%rd34];
	or.b32  	%r985, %r984, 128;
	st.local.u32 	[%rd34], %r985;
	bra.uni 	BB5_342;

BB5_129:
	setp.gt.s32	%p128, %r896, 53;
	@%p128 bra 	BB5_133;

	setp.eq.s32	%p131, %r896, 52;
	@%p131 bra 	BB5_315;
	bra.uni 	BB5_131;

BB5_315:
	ld.local.u32 	%r1048, [%rd58];
	or.b32  	%r1049, %r1048, 128;
	st.local.u32 	[%rd58], %r1049;
	bra.uni 	BB5_342;

BB5_256:
	setp.gt.s32	%p33, %r896, 117;
	@%p33 bra 	BB5_260;

	setp.eq.s32	%p36, %r896, 116;
	@%p36 bra 	BB5_283;
	bra.uni 	BB5_258;

BB5_283:
	ld.local.u32 	%r920, [%rd42];
	or.b32  	%r921, %r920, 128;
	st.local.u32 	[%rd42], %r921;
	bra.uni 	BB5_342;

BB5_50:
	setp.gt.s32	%p187, %r896, 13;
	@%p187 bra 	BB5_54;

	setp.eq.s32	%p190, %r896, 12;
	@%p190 bra 	BB5_335;
	bra.uni 	BB5_52;

BB5_335:
	ld.local.u32 	%r1128, [%rd48];
	or.b32  	%r1129, %r1128, 128;
	st.local.u32 	[%rd48], %r1129;
	bra.uni 	BB5_342;

BB5_177:
	setp.gt.s32	%p92, %r896, 77;
	@%p92 bra 	BB5_181;

	setp.eq.s32	%p95, %r896, 76;
	@%p95 bra 	BB5_303;
	bra.uni 	BB5_179;

BB5_303:
	ld.local.u32 	%r1000, [%rd32];
	or.b32  	%r1001, %r1000, 128;
	st.local.u32 	[%rd32], %r1001;
	bra.uni 	BB5_342;

BB5_113:
	setp.gt.s32	%p140, %r896, 45;
	@%p140 bra 	BB5_117;

	setp.eq.s32	%p143, %r896, 44;
	@%p143 bra 	BB5_319;
	bra.uni 	BB5_115;

BB5_319:
	ld.local.u32 	%r1064, [%rd56];
	or.b32  	%r1065, %r1064, 128;
	st.local.u32 	[%rd56], %r1065;
	bra.uni 	BB5_342;

BB5_240:
	setp.gt.s32	%p45, %r896, 109;
	@%p45 bra 	BB5_244;

	setp.eq.s32	%p48, %r896, 108;
	@%p48 bra 	BB5_287;
	bra.uni 	BB5_242;

BB5_287:
	ld.local.u32 	%r936, [%rd40];
	or.b32  	%r937, %r936, 128;
	st.local.u32 	[%rd40], %r937;
	bra.uni 	BB5_342;

BB5_81:
	setp.gt.s32	%p164, %r896, 29;
	@%p164 bra 	BB5_85;

	setp.eq.s32	%p167, %r896, 28;
	@%p167 bra 	BB5_327;
	bra.uni 	BB5_83;

BB5_327:
	ld.local.u32 	%r1096, [%rd52];
	or.b32  	%r1097, %r1096, 128;
	st.local.u32 	[%rd52], %r1097;
	bra.uni 	BB5_342;

BB5_208:
	setp.gt.s32	%p69, %r896, 93;
	@%p69 bra 	BB5_212;

	setp.eq.s32	%p72, %r896, 92;
	@%p72 bra 	BB5_295;
	bra.uni 	BB5_210;

BB5_295:
	ld.local.u32 	%r968, [%rd36];
	or.b32  	%r969, %r968, 128;
	st.local.u32 	[%rd36], %r969;
	bra.uni 	BB5_342;

BB5_144:
	setp.gt.s32	%p117, %r896, 61;
	@%p117 bra 	BB5_148;

	setp.eq.s32	%p120, %r896, 60;
	@%p120 bra 	BB5_311;
	bra.uni 	BB5_146;

BB5_311:
	ld.local.u32 	%r1032, [%rd60];
	or.b32  	%r1033, %r1032, 128;
	st.local.u32 	[%rd60], %r1033;
	bra.uni 	BB5_342;

BB5_271:
	setp.gt.s32	%p22, %r896, 125;
	@%p22 bra 	BB5_275;

	setp.eq.s32	%p25, %r896, 124;
	@%p25 bra 	BB5_279;
	bra.uni 	BB5_273;

BB5_279:
	ld.local.u32 	%r904, [%rd44];
	or.b32  	%r905, %r904, 128;
	st.local.u32 	[%rd44], %r905;
	bra.uni 	BB5_342;

BB5_32:
	setp.eq.s32	%p204, %r896, 2;
	@%p204 bra 	BB5_340;
	bra.uni 	BB5_33;

BB5_340:
	ld.local.u32 	%r1148, [%rd45];
	or.b32  	%r1149, %r1148, 8388608;
	st.local.u32 	[%rd45], %r1149;
	bra.uni 	BB5_342;

BB5_159:
	setp.eq.s32	%p109, %r896, 66;
	@%p109 bra 	BB5_308;
	bra.uni 	BB5_160;

BB5_308:
	ld.local.u32 	%r1020, [%rd29];
	or.b32  	%r1021, %r1020, 8388608;
	st.local.u32 	[%rd29], %r1021;
	bra.uni 	BB5_342;

BB5_95:
	setp.eq.s32	%p157, %r896, 34;
	@%p157 bra 	BB5_324;
	bra.uni 	BB5_96;

BB5_324:
	ld.local.u32 	%r1084, [%rd53];
	or.b32  	%r1085, %r1084, 8388608;
	st.local.u32 	[%rd53], %r1085;
	bra.uni 	BB5_342;

BB5_222:
	setp.eq.s32	%p62, %r896, 98;
	@%p62 bra 	BB5_292;
	bra.uni 	BB5_223;

BB5_292:
	ld.local.u32 	%r956, [%rd37];
	or.b32  	%r957, %r956, 8388608;
	st.local.u32 	[%rd37], %r957;
	bra.uni 	BB5_342;

BB5_63:
	setp.eq.s32	%p181, %r896, 18;
	@%p181 bra 	BB5_332;
	bra.uni 	BB5_64;

BB5_332:
	ld.local.u32 	%r1116, [%rd49];
	or.b32  	%r1117, %r1116, 8388608;
	st.local.u32 	[%rd49], %r1117;
	bra.uni 	BB5_342;

BB5_190:
	setp.eq.s32	%p86, %r896, 82;
	@%p86 bra 	BB5_300;
	bra.uni 	BB5_191;

BB5_300:
	ld.local.u32 	%r988, [%rd33];
	or.b32  	%r989, %r988, 8388608;
	st.local.u32 	[%rd33], %r989;
	bra.uni 	BB5_342;

BB5_126:
	setp.eq.s32	%p134, %r896, 50;
	@%p134 bra 	BB5_316;
	bra.uni 	BB5_127;

BB5_316:
	ld.local.u32 	%r1052, [%rd57];
	or.b32  	%r1053, %r1052, 8388608;
	st.local.u32 	[%rd57], %r1053;
	bra.uni 	BB5_342;

BB5_253:
	setp.eq.s32	%p39, %r896, 114;
	@%p39 bra 	BB5_284;
	bra.uni 	BB5_254;

BB5_284:
	ld.local.u32 	%r924, [%rd41];
	or.b32  	%r925, %r924, 8388608;
	st.local.u32 	[%rd41], %r925;
	bra.uni 	BB5_342;

BB5_47:
	setp.eq.s32	%p193, %r896, 10;
	@%p193 bra 	BB5_336;
	bra.uni 	BB5_48;

BB5_336:
	ld.local.u32 	%r1132, [%rd47];
	or.b32  	%r1133, %r1132, 8388608;
	st.local.u32 	[%rd47], %r1133;
	bra.uni 	BB5_342;

BB5_174:
	setp.eq.s32	%p98, %r896, 74;
	@%p98 bra 	BB5_304;
	bra.uni 	BB5_175;

BB5_304:
	ld.local.u32 	%r1004, [%rd31];
	or.b32  	%r1005, %r1004, 8388608;
	st.local.u32 	[%rd31], %r1005;
	bra.uni 	BB5_342;

BB5_110:
	setp.eq.s32	%p146, %r896, 42;
	@%p146 bra 	BB5_320;
	bra.uni 	BB5_111;

BB5_320:
	ld.local.u32 	%r1068, [%rd55];
	or.b32  	%r1069, %r1068, 8388608;
	st.local.u32 	[%rd55], %r1069;
	bra.uni 	BB5_342;

BB5_237:
	setp.eq.s32	%p51, %r896, 106;
	@%p51 bra 	BB5_288;
	bra.uni 	BB5_238;

BB5_288:
	ld.local.u32 	%r940, [%rd39];
	or.b32  	%r941, %r940, 8388608;
	st.local.u32 	[%rd39], %r941;
	bra.uni 	BB5_342;

BB5_78:
	setp.eq.s32	%p170, %r896, 26;
	@%p170 bra 	BB5_328;
	bra.uni 	BB5_79;

BB5_328:
	ld.local.u32 	%r1100, [%rd51];
	or.b32  	%r1101, %r1100, 8388608;
	st.local.u32 	[%rd51], %r1101;
	bra.uni 	BB5_342;

BB5_205:
	setp.eq.s32	%p75, %r896, 90;
	@%p75 bra 	BB5_296;
	bra.uni 	BB5_206;

BB5_296:
	ld.local.u32 	%r972, [%rd35];
	or.b32  	%r973, %r972, 8388608;
	st.local.u32 	[%rd35], %r973;
	bra.uni 	BB5_342;

BB5_141:
	setp.eq.s32	%p123, %r896, 58;
	@%p123 bra 	BB5_312;
	bra.uni 	BB5_142;

BB5_312:
	ld.local.u32 	%r1036, [%rd59];
	or.b32  	%r1037, %r1036, 8388608;
	st.local.u32 	[%rd59], %r1037;
	bra.uni 	BB5_342;

BB5_268:
	setp.eq.s32	%p28, %r896, 122;
	@%p28 bra 	BB5_280;
	bra.uni 	BB5_269;

BB5_280:
	ld.local.u32 	%r908, [%rd43];
	or.b32  	%r909, %r908, 8388608;
	st.local.u32 	[%rd43], %r909;
	bra.uni 	BB5_342;

BB5_39:
	setp.eq.s32	%p199, %r896, 6;
	@%p199 bra 	BB5_338;
	bra.uni 	BB5_40;

BB5_338:
	ld.local.u32 	%r1140, [%rd46];
	or.b32  	%r1141, %r1140, 8388608;
	st.local.u32 	[%rd46], %r1141;
	bra.uni 	BB5_342;

BB5_166:
	setp.eq.s32	%p104, %r896, 70;
	@%p104 bra 	BB5_306;
	bra.uni 	BB5_167;

BB5_306:
	ld.local.u32 	%r1012, [%rd30];
	or.b32  	%r1013, %r1012, 8388608;
	st.local.u32 	[%rd30], %r1013;
	bra.uni 	BB5_342;

BB5_102:
	setp.eq.s32	%p152, %r896, 38;
	@%p152 bra 	BB5_322;
	bra.uni 	BB5_103;

BB5_322:
	ld.local.u32 	%r1076, [%rd54];
	or.b32  	%r1077, %r1076, 8388608;
	st.local.u32 	[%rd54], %r1077;
	bra.uni 	BB5_342;

BB5_229:
	setp.eq.s32	%p57, %r896, 102;
	@%p57 bra 	BB5_290;
	bra.uni 	BB5_230;

BB5_290:
	ld.local.u32 	%r948, [%rd38];
	or.b32  	%r949, %r948, 8388608;
	st.local.u32 	[%rd38], %r949;
	bra.uni 	BB5_342;

BB5_70:
	setp.eq.s32	%p176, %r896, 22;
	@%p176 bra 	BB5_330;
	bra.uni 	BB5_71;

BB5_330:
	ld.local.u32 	%r1108, [%rd50];
	or.b32  	%r1109, %r1108, 8388608;
	st.local.u32 	[%rd50], %r1109;
	bra.uni 	BB5_342;

BB5_197:
	setp.eq.s32	%p81, %r896, 86;
	@%p81 bra 	BB5_298;
	bra.uni 	BB5_198;

BB5_298:
	ld.local.u32 	%r980, [%rd34];
	or.b32  	%r981, %r980, 8388608;
	st.local.u32 	[%rd34], %r981;
	bra.uni 	BB5_342;

BB5_133:
	setp.eq.s32	%p129, %r896, 54;
	@%p129 bra 	BB5_314;
	bra.uni 	BB5_134;

BB5_314:
	ld.local.u32 	%r1044, [%rd58];
	or.b32  	%r1045, %r1044, 8388608;
	st.local.u32 	[%rd58], %r1045;
	bra.uni 	BB5_342;

BB5_260:
	setp.eq.s32	%p34, %r896, 118;
	@%p34 bra 	BB5_282;
	bra.uni 	BB5_261;

BB5_282:
	ld.local.u32 	%r916, [%rd42];
	or.b32  	%r917, %r916, 8388608;
	st.local.u32 	[%rd42], %r917;
	bra.uni 	BB5_342;

BB5_54:
	setp.eq.s32	%p188, %r896, 14;
	@%p188 bra 	BB5_334;
	bra.uni 	BB5_55;

BB5_334:
	ld.local.u32 	%r1124, [%rd48];
	or.b32  	%r1125, %r1124, 8388608;
	st.local.u32 	[%rd48], %r1125;
	bra.uni 	BB5_342;

BB5_181:
	setp.eq.s32	%p93, %r896, 78;
	@%p93 bra 	BB5_302;
	bra.uni 	BB5_182;

BB5_302:
	ld.local.u32 	%r996, [%rd32];
	or.b32  	%r997, %r996, 8388608;
	st.local.u32 	[%rd32], %r997;
	bra.uni 	BB5_342;

BB5_117:
	setp.eq.s32	%p141, %r896, 46;
	@%p141 bra 	BB5_318;
	bra.uni 	BB5_118;

BB5_318:
	ld.local.u32 	%r1060, [%rd56];
	or.b32  	%r1061, %r1060, 8388608;
	st.local.u32 	[%rd56], %r1061;
	bra.uni 	BB5_342;

BB5_244:
	setp.eq.s32	%p46, %r896, 110;
	@%p46 bra 	BB5_286;
	bra.uni 	BB5_245;

BB5_286:
	ld.local.u32 	%r932, [%rd40];
	or.b32  	%r933, %r932, 8388608;
	st.local.u32 	[%rd40], %r933;
	bra.uni 	BB5_342;

BB5_85:
	setp.eq.s32	%p165, %r896, 30;
	@%p165 bra 	BB5_326;
	bra.uni 	BB5_86;

BB5_326:
	ld.local.u32 	%r1092, [%rd52];
	or.b32  	%r1093, %r1092, 8388608;
	st.local.u32 	[%rd52], %r1093;
	bra.uni 	BB5_342;

BB5_212:
	setp.eq.s32	%p70, %r896, 94;
	@%p70 bra 	BB5_294;
	bra.uni 	BB5_213;

BB5_294:
	ld.local.u32 	%r964, [%rd36];
	or.b32  	%r965, %r964, 8388608;
	st.local.u32 	[%rd36], %r965;
	bra.uni 	BB5_342;

BB5_148:
	setp.eq.s32	%p118, %r896, 62;
	@%p118 bra 	BB5_310;
	bra.uni 	BB5_149;

BB5_310:
	ld.local.u32 	%r1028, [%rd60];
	or.b32  	%r1029, %r1028, 8388608;
	st.local.u32 	[%rd60], %r1029;
	bra.uni 	BB5_342;

BB5_275:
	setp.eq.s32	%p23, %r896, 126;
	@%p23 bra 	BB5_278;
	bra.uni 	BB5_276;

BB5_278:
	ld.local.u32 	%r900, [%rd44];
	or.b32  	%r901, %r900, 8388608;
	st.local.u32 	[%rd44], %r901;
	bra.uni 	BB5_342;

BB5_30:
	setp.eq.s32	%p207, %r896, 1;
	@%p207 bra 	BB5_31;
	bra.uni 	BB5_342;

BB5_31:
	ld.local.u32 	%r1150, [%rd45];
	or.b32  	%r1151, %r1150, 32768;
	st.local.u32 	[%rd45], %r1151;
	bra.uni 	BB5_342;

BB5_157:
	setp.eq.s32	%p112, %r896, 65;
	@%p112 bra 	BB5_158;
	bra.uni 	BB5_342;

BB5_158:
	ld.local.u32 	%r1022, [%rd29];
	or.b32  	%r1023, %r1022, 32768;
	st.local.u32 	[%rd29], %r1023;
	bra.uni 	BB5_342;

BB5_93:
	setp.eq.s32	%p160, %r896, 33;
	@%p160 bra 	BB5_94;
	bra.uni 	BB5_342;

BB5_94:
	ld.local.u32 	%r1086, [%rd53];
	or.b32  	%r1087, %r1086, 32768;
	st.local.u32 	[%rd53], %r1087;
	bra.uni 	BB5_342;

BB5_220:
	setp.eq.s32	%p65, %r896, 97;
	@%p65 bra 	BB5_221;
	bra.uni 	BB5_342;

BB5_221:
	ld.local.u32 	%r958, [%rd37];
	or.b32  	%r959, %r958, 32768;
	st.local.u32 	[%rd37], %r959;
	bra.uni 	BB5_342;

BB5_61:
	setp.eq.s32	%p184, %r896, 17;
	@%p184 bra 	BB5_62;
	bra.uni 	BB5_342;

BB5_62:
	ld.local.u32 	%r1118, [%rd49];
	or.b32  	%r1119, %r1118, 32768;
	st.local.u32 	[%rd49], %r1119;
	bra.uni 	BB5_342;

BB5_188:
	setp.eq.s32	%p89, %r896, 81;
	@%p89 bra 	BB5_189;
	bra.uni 	BB5_342;

BB5_189:
	ld.local.u32 	%r990, [%rd33];
	or.b32  	%r991, %r990, 32768;
	st.local.u32 	[%rd33], %r991;
	bra.uni 	BB5_342;

BB5_124:
	setp.eq.s32	%p137, %r896, 49;
	@%p137 bra 	BB5_125;
	bra.uni 	BB5_342;

BB5_125:
	ld.local.u32 	%r1054, [%rd57];
	or.b32  	%r1055, %r1054, 32768;
	st.local.u32 	[%rd57], %r1055;
	bra.uni 	BB5_342;

BB5_251:
	setp.eq.s32	%p42, %r896, 113;
	@%p42 bra 	BB5_252;
	bra.uni 	BB5_342;

BB5_252:
	ld.local.u32 	%r926, [%rd41];
	or.b32  	%r927, %r926, 32768;
	st.local.u32 	[%rd41], %r927;
	bra.uni 	BB5_342;

BB5_45:
	setp.eq.s32	%p196, %r896, 9;
	@%p196 bra 	BB5_46;
	bra.uni 	BB5_342;

BB5_46:
	ld.local.u32 	%r1134, [%rd47];
	or.b32  	%r1135, %r1134, 32768;
	st.local.u32 	[%rd47], %r1135;
	bra.uni 	BB5_342;

BB5_172:
	setp.eq.s32	%p101, %r896, 73;
	@%p101 bra 	BB5_173;
	bra.uni 	BB5_342;

BB5_173:
	ld.local.u32 	%r1006, [%rd31];
	or.b32  	%r1007, %r1006, 32768;
	st.local.u32 	[%rd31], %r1007;
	bra.uni 	BB5_342;

BB5_108:
	setp.eq.s32	%p149, %r896, 41;
	@%p149 bra 	BB5_109;
	bra.uni 	BB5_342;

BB5_109:
	ld.local.u32 	%r1070, [%rd55];
	or.b32  	%r1071, %r1070, 32768;
	st.local.u32 	[%rd55], %r1071;
	bra.uni 	BB5_342;

BB5_235:
	setp.eq.s32	%p54, %r896, 105;
	@%p54 bra 	BB5_236;
	bra.uni 	BB5_342;

BB5_236:
	ld.local.u32 	%r942, [%rd39];
	or.b32  	%r943, %r942, 32768;
	st.local.u32 	[%rd39], %r943;
	bra.uni 	BB5_342;

BB5_76:
	setp.eq.s32	%p173, %r896, 25;
	@%p173 bra 	BB5_77;
	bra.uni 	BB5_342;

BB5_77:
	ld.local.u32 	%r1102, [%rd51];
	or.b32  	%r1103, %r1102, 32768;
	st.local.u32 	[%rd51], %r1103;
	bra.uni 	BB5_342;

BB5_203:
	setp.eq.s32	%p78, %r896, 89;
	@%p78 bra 	BB5_204;
	bra.uni 	BB5_342;

BB5_204:
	ld.local.u32 	%r974, [%rd35];
	or.b32  	%r975, %r974, 32768;
	st.local.u32 	[%rd35], %r975;
	bra.uni 	BB5_342;

BB5_139:
	setp.eq.s32	%p126, %r896, 57;
	@%p126 bra 	BB5_140;
	bra.uni 	BB5_342;

BB5_140:
	ld.local.u32 	%r1038, [%rd59];
	or.b32  	%r1039, %r1038, 32768;
	st.local.u32 	[%rd59], %r1039;
	bra.uni 	BB5_342;

BB5_266:
	setp.eq.s32	%p31, %r896, 121;
	@%p31 bra 	BB5_267;
	bra.uni 	BB5_342;

BB5_267:
	ld.local.u32 	%r910, [%rd43];
	or.b32  	%r911, %r910, 32768;
	st.local.u32 	[%rd43], %r911;
	bra.uni 	BB5_342;

BB5_37:
	setp.eq.s32	%p202, %r896, 5;
	@%p202 bra 	BB5_38;
	bra.uni 	BB5_342;

BB5_38:
	ld.local.u32 	%r1142, [%rd46];
	or.b32  	%r1143, %r1142, 32768;
	st.local.u32 	[%rd46], %r1143;
	bra.uni 	BB5_342;

BB5_164:
	setp.eq.s32	%p107, %r896, 69;
	@%p107 bra 	BB5_165;
	bra.uni 	BB5_342;

BB5_165:
	ld.local.u32 	%r1014, [%rd30];
	or.b32  	%r1015, %r1014, 32768;
	st.local.u32 	[%rd30], %r1015;
	bra.uni 	BB5_342;

BB5_100:
	setp.eq.s32	%p155, %r896, 37;
	@%p155 bra 	BB5_101;
	bra.uni 	BB5_342;

BB5_101:
	ld.local.u32 	%r1078, [%rd54];
	or.b32  	%r1079, %r1078, 32768;
	st.local.u32 	[%rd54], %r1079;
	bra.uni 	BB5_342;

BB5_227:
	setp.eq.s32	%p60, %r896, 101;
	@%p60 bra 	BB5_228;
	bra.uni 	BB5_342;

BB5_228:
	ld.local.u32 	%r950, [%rd38];
	or.b32  	%r951, %r950, 32768;
	st.local.u32 	[%rd38], %r951;
	bra.uni 	BB5_342;

BB5_68:
	setp.eq.s32	%p179, %r896, 21;
	@%p179 bra 	BB5_69;
	bra.uni 	BB5_342;

BB5_69:
	ld.local.u32 	%r1110, [%rd50];
	or.b32  	%r1111, %r1110, 32768;
	st.local.u32 	[%rd50], %r1111;
	bra.uni 	BB5_342;

BB5_195:
	setp.eq.s32	%p84, %r896, 85;
	@%p84 bra 	BB5_196;
	bra.uni 	BB5_342;

BB5_196:
	ld.local.u32 	%r982, [%rd34];
	or.b32  	%r983, %r982, 32768;
	st.local.u32 	[%rd34], %r983;
	bra.uni 	BB5_342;

BB5_131:
	setp.eq.s32	%p132, %r896, 53;
	@%p132 bra 	BB5_132;
	bra.uni 	BB5_342;

BB5_132:
	ld.local.u32 	%r1046, [%rd58];
	or.b32  	%r1047, %r1046, 32768;
	st.local.u32 	[%rd58], %r1047;
	bra.uni 	BB5_342;

BB5_258:
	setp.eq.s32	%p37, %r896, 117;
	@%p37 bra 	BB5_259;
	bra.uni 	BB5_342;

BB5_259:
	ld.local.u32 	%r918, [%rd42];
	or.b32  	%r919, %r918, 32768;
	st.local.u32 	[%rd42], %r919;
	bra.uni 	BB5_342;

BB5_52:
	setp.eq.s32	%p191, %r896, 13;
	@%p191 bra 	BB5_53;
	bra.uni 	BB5_342;

BB5_53:
	ld.local.u32 	%r1126, [%rd48];
	or.b32  	%r1127, %r1126, 32768;
	st.local.u32 	[%rd48], %r1127;
	bra.uni 	BB5_342;

BB5_179:
	setp.eq.s32	%p96, %r896, 77;
	@%p96 bra 	BB5_180;
	bra.uni 	BB5_342;

BB5_180:
	ld.local.u32 	%r998, [%rd32];
	or.b32  	%r999, %r998, 32768;
	st.local.u32 	[%rd32], %r999;
	bra.uni 	BB5_342;

BB5_115:
	setp.eq.s32	%p144, %r896, 45;
	@%p144 bra 	BB5_116;
	bra.uni 	BB5_342;

BB5_116:
	ld.local.u32 	%r1062, [%rd56];
	or.b32  	%r1063, %r1062, 32768;
	st.local.u32 	[%rd56], %r1063;
	bra.uni 	BB5_342;

BB5_242:
	setp.eq.s32	%p49, %r896, 109;
	@%p49 bra 	BB5_243;
	bra.uni 	BB5_342;

BB5_243:
	ld.local.u32 	%r934, [%rd40];
	or.b32  	%r935, %r934, 32768;
	st.local.u32 	[%rd40], %r935;
	bra.uni 	BB5_342;

BB5_83:
	setp.eq.s32	%p168, %r896, 29;
	@%p168 bra 	BB5_84;
	bra.uni 	BB5_342;

BB5_84:
	ld.local.u32 	%r1094, [%rd52];
	or.b32  	%r1095, %r1094, 32768;
	st.local.u32 	[%rd52], %r1095;
	bra.uni 	BB5_342;

BB5_210:
	setp.eq.s32	%p73, %r896, 93;
	@%p73 bra 	BB5_211;
	bra.uni 	BB5_342;

BB5_211:
	ld.local.u32 	%r966, [%rd36];
	or.b32  	%r967, %r966, 32768;
	st.local.u32 	[%rd36], %r967;
	bra.uni 	BB5_342;

BB5_146:
	setp.eq.s32	%p121, %r896, 61;
	@%p121 bra 	BB5_147;
	bra.uni 	BB5_342;

BB5_147:
	ld.local.u32 	%r1030, [%rd60];
	or.b32  	%r1031, %r1030, 32768;
	st.local.u32 	[%rd60], %r1031;
	bra.uni 	BB5_342;

BB5_273:
	setp.eq.s32	%p26, %r896, 125;
	@%p26 bra 	BB5_274;
	bra.uni 	BB5_342;

BB5_274:
	ld.local.u32 	%r902, [%rd44];
	or.b32  	%r903, %r902, 32768;
	st.local.u32 	[%rd44], %r903;
	bra.uni 	BB5_342;

BB5_33:
	setp.eq.s32	%p205, %r896, 3;
	@%p205 bra 	BB5_34;
	bra.uni 	BB5_342;

BB5_34:
	ld.local.u32 	%r1146, [%rd45];
	or.b32  	%r1147, %r1146, -2147483648;
	st.local.u32 	[%rd45], %r1147;
	bra.uni 	BB5_342;

BB5_160:
	setp.eq.s32	%p110, %r896, 67;
	@%p110 bra 	BB5_161;
	bra.uni 	BB5_342;

BB5_161:
	ld.local.u32 	%r1018, [%rd29];
	or.b32  	%r1019, %r1018, -2147483648;
	st.local.u32 	[%rd29], %r1019;
	bra.uni 	BB5_342;

BB5_96:
	setp.eq.s32	%p158, %r896, 35;
	@%p158 bra 	BB5_97;
	bra.uni 	BB5_342;

BB5_97:
	ld.local.u32 	%r1082, [%rd53];
	or.b32  	%r1083, %r1082, -2147483648;
	st.local.u32 	[%rd53], %r1083;
	bra.uni 	BB5_342;

BB5_223:
	setp.eq.s32	%p63, %r896, 99;
	@%p63 bra 	BB5_224;
	bra.uni 	BB5_342;

BB5_224:
	ld.local.u32 	%r954, [%rd37];
	or.b32  	%r955, %r954, -2147483648;
	st.local.u32 	[%rd37], %r955;
	bra.uni 	BB5_342;

BB5_64:
	setp.eq.s32	%p182, %r896, 19;
	@%p182 bra 	BB5_65;
	bra.uni 	BB5_342;

BB5_65:
	ld.local.u32 	%r1114, [%rd49];
	or.b32  	%r1115, %r1114, -2147483648;
	st.local.u32 	[%rd49], %r1115;
	bra.uni 	BB5_342;

BB5_191:
	setp.eq.s32	%p87, %r896, 83;
	@%p87 bra 	BB5_192;
	bra.uni 	BB5_342;

BB5_192:
	ld.local.u32 	%r986, [%rd33];
	or.b32  	%r987, %r986, -2147483648;
	st.local.u32 	[%rd33], %r987;
	bra.uni 	BB5_342;

BB5_127:
	setp.eq.s32	%p135, %r896, 51;
	@%p135 bra 	BB5_128;
	bra.uni 	BB5_342;

BB5_128:
	ld.local.u32 	%r1050, [%rd57];
	or.b32  	%r1051, %r1050, -2147483648;
	st.local.u32 	[%rd57], %r1051;
	bra.uni 	BB5_342;

BB5_254:
	setp.eq.s32	%p40, %r896, 115;
	@%p40 bra 	BB5_255;
	bra.uni 	BB5_342;

BB5_255:
	ld.local.u32 	%r922, [%rd41];
	or.b32  	%r923, %r922, -2147483648;
	st.local.u32 	[%rd41], %r923;
	bra.uni 	BB5_342;

BB5_48:
	setp.eq.s32	%p194, %r896, 11;
	@%p194 bra 	BB5_49;
	bra.uni 	BB5_342;

BB5_49:
	ld.local.u32 	%r1130, [%rd47];
	or.b32  	%r1131, %r1130, -2147483648;
	st.local.u32 	[%rd47], %r1131;
	bra.uni 	BB5_342;

BB5_175:
	setp.eq.s32	%p99, %r896, 75;
	@%p99 bra 	BB5_176;
	bra.uni 	BB5_342;

BB5_176:
	ld.local.u32 	%r1002, [%rd31];
	or.b32  	%r1003, %r1002, -2147483648;
	st.local.u32 	[%rd31], %r1003;
	bra.uni 	BB5_342;

BB5_111:
	setp.eq.s32	%p147, %r896, 43;
	@%p147 bra 	BB5_112;
	bra.uni 	BB5_342;

BB5_112:
	ld.local.u32 	%r1066, [%rd55];
	or.b32  	%r1067, %r1066, -2147483648;
	st.local.u32 	[%rd55], %r1067;
	bra.uni 	BB5_342;

BB5_238:
	setp.eq.s32	%p52, %r896, 107;
	@%p52 bra 	BB5_239;
	bra.uni 	BB5_342;

BB5_239:
	ld.local.u32 	%r938, [%rd39];
	or.b32  	%r939, %r938, -2147483648;
	st.local.u32 	[%rd39], %r939;
	bra.uni 	BB5_342;

BB5_79:
	setp.eq.s32	%p171, %r896, 27;
	@%p171 bra 	BB5_80;
	bra.uni 	BB5_342;

BB5_80:
	ld.local.u32 	%r1098, [%rd51];
	or.b32  	%r1099, %r1098, -2147483648;
	st.local.u32 	[%rd51], %r1099;
	bra.uni 	BB5_342;

BB5_206:
	setp.eq.s32	%p76, %r896, 91;
	@%p76 bra 	BB5_207;
	bra.uni 	BB5_342;

BB5_207:
	ld.local.u32 	%r970, [%rd35];
	or.b32  	%r971, %r970, -2147483648;
	st.local.u32 	[%rd35], %r971;
	bra.uni 	BB5_342;

BB5_142:
	setp.eq.s32	%p124, %r896, 59;
	@%p124 bra 	BB5_143;
	bra.uni 	BB5_342;

BB5_143:
	ld.local.u32 	%r1034, [%rd59];
	or.b32  	%r1035, %r1034, -2147483648;
	st.local.u32 	[%rd59], %r1035;
	bra.uni 	BB5_342;

BB5_269:
	setp.eq.s32	%p29, %r896, 123;
	@%p29 bra 	BB5_270;
	bra.uni 	BB5_342;

BB5_270:
	ld.local.u32 	%r906, [%rd43];
	or.b32  	%r907, %r906, -2147483648;
	st.local.u32 	[%rd43], %r907;
	bra.uni 	BB5_342;

BB5_40:
	setp.eq.s32	%p200, %r896, 7;
	@%p200 bra 	BB5_41;
	bra.uni 	BB5_342;

BB5_41:
	ld.local.u32 	%r1138, [%rd46];
	or.b32  	%r1139, %r1138, -2147483648;
	st.local.u32 	[%rd46], %r1139;
	bra.uni 	BB5_342;

BB5_167:
	setp.eq.s32	%p105, %r896, 71;
	@%p105 bra 	BB5_168;
	bra.uni 	BB5_342;

BB5_168:
	ld.local.u32 	%r1010, [%rd30];
	or.b32  	%r1011, %r1010, -2147483648;
	st.local.u32 	[%rd30], %r1011;
	bra.uni 	BB5_342;

BB5_103:
	setp.eq.s32	%p153, %r896, 39;
	@%p153 bra 	BB5_104;
	bra.uni 	BB5_342;

BB5_104:
	ld.local.u32 	%r1074, [%rd54];
	or.b32  	%r1075, %r1074, -2147483648;
	st.local.u32 	[%rd54], %r1075;
	bra.uni 	BB5_342;

BB5_230:
	setp.eq.s32	%p58, %r896, 103;
	@%p58 bra 	BB5_231;
	bra.uni 	BB5_342;

BB5_231:
	ld.local.u32 	%r946, [%rd38];
	or.b32  	%r947, %r946, -2147483648;
	st.local.u32 	[%rd38], %r947;
	bra.uni 	BB5_342;

BB5_71:
	setp.eq.s32	%p177, %r896, 23;
	@%p177 bra 	BB5_72;
	bra.uni 	BB5_342;

BB5_72:
	ld.local.u32 	%r1106, [%rd50];
	or.b32  	%r1107, %r1106, -2147483648;
	st.local.u32 	[%rd50], %r1107;
	bra.uni 	BB5_342;

BB5_198:
	setp.eq.s32	%p82, %r896, 87;
	@%p82 bra 	BB5_199;
	bra.uni 	BB5_342;

BB5_199:
	ld.local.u32 	%r978, [%rd34];
	or.b32  	%r979, %r978, -2147483648;
	st.local.u32 	[%rd34], %r979;
	bra.uni 	BB5_342;

BB5_134:
	setp.eq.s32	%p130, %r896, 55;
	@%p130 bra 	BB5_135;
	bra.uni 	BB5_342;

BB5_135:
	ld.local.u32 	%r1042, [%rd58];
	or.b32  	%r1043, %r1042, -2147483648;
	st.local.u32 	[%rd58], %r1043;
	bra.uni 	BB5_342;

BB5_261:
	setp.eq.s32	%p35, %r896, 119;
	@%p35 bra 	BB5_262;
	bra.uni 	BB5_342;

BB5_262:
	ld.local.u32 	%r914, [%rd42];
	or.b32  	%r915, %r914, -2147483648;
	st.local.u32 	[%rd42], %r915;
	bra.uni 	BB5_342;

BB5_55:
	setp.eq.s32	%p189, %r896, 15;
	@%p189 bra 	BB5_56;
	bra.uni 	BB5_342;

BB5_56:
	ld.local.u32 	%r1122, [%rd48];
	or.b32  	%r1123, %r1122, -2147483648;
	st.local.u32 	[%rd48], %r1123;
	bra.uni 	BB5_342;

BB5_182:
	setp.eq.s32	%p94, %r896, 79;
	@%p94 bra 	BB5_183;
	bra.uni 	BB5_342;

BB5_183:
	ld.local.u32 	%r994, [%rd32];
	or.b32  	%r995, %r994, -2147483648;
	st.local.u32 	[%rd32], %r995;
	bra.uni 	BB5_342;

BB5_118:
	setp.eq.s32	%p142, %r896, 47;
	@%p142 bra 	BB5_119;
	bra.uni 	BB5_342;

BB5_119:
	ld.local.u32 	%r1058, [%rd56];
	or.b32  	%r1059, %r1058, -2147483648;
	st.local.u32 	[%rd56], %r1059;
	bra.uni 	BB5_342;

BB5_245:
	setp.eq.s32	%p47, %r896, 111;
	@%p47 bra 	BB5_246;
	bra.uni 	BB5_342;

BB5_246:
	ld.local.u32 	%r930, [%rd40];
	or.b32  	%r931, %r930, -2147483648;
	st.local.u32 	[%rd40], %r931;
	bra.uni 	BB5_342;

BB5_86:
	setp.eq.s32	%p166, %r896, 31;
	@%p166 bra 	BB5_87;
	bra.uni 	BB5_342;

BB5_87:
	ld.local.u32 	%r1090, [%rd52];
	or.b32  	%r1091, %r1090, -2147483648;
	st.local.u32 	[%rd52], %r1091;
	bra.uni 	BB5_342;

BB5_213:
	setp.eq.s32	%p71, %r896, 95;
	@%p71 bra 	BB5_214;
	bra.uni 	BB5_342;

BB5_214:
	ld.local.u32 	%r962, [%rd36];
	or.b32  	%r963, %r962, -2147483648;
	st.local.u32 	[%rd36], %r963;
	bra.uni 	BB5_342;

BB5_149:
	setp.eq.s32	%p119, %r896, 63;
	@%p119 bra 	BB5_150;
	bra.uni 	BB5_342;

BB5_150:
	ld.local.u32 	%r1026, [%rd60];
	or.b32  	%r1027, %r1026, -2147483648;
	st.local.u32 	[%rd60], %r1027;
	bra.uni 	BB5_342;

BB5_276:
	setp.ne.s32	%p24, %r896, 127;
	@%p24 bra 	BB5_342;

	ld.local.u32 	%r898, [%rd44];
	or.b32  	%r899, %r898, -2147483648;
	st.local.u32 	[%rd44], %r899;

BB5_342:
	ld.local.u64 	%rd6845, [%rd10];
	ld.local.u64 	%rd6844, [%rd22];
	ld.local.u64 	%rd6843, [%rd23];
	ld.local.u64 	%rd6842, [%rd24];
	ld.local.u64 	%rd6841, [%rd25];
	ld.local.u64 	%rd6840, [%rd26];
	ld.local.u64 	%rd6839, [%rd27];
	ld.local.u64 	%rd6838, [%rd28];
	ld.local.u32 	%r11801, [%rd45];
	ld.local.u32 	%r11800, [%rd46];
	setp.gt.u32	%p208, %r40, 111;
	@%p208 bra 	BB5_344;
	bra.uni 	BB5_343;

BB5_344:
	mov.b64	%rd6830, {%r11800, %r11801};
	ld.local.u32 	%r1155, [%rd47];
	ld.local.u32 	%r1156, [%rd48];
	mov.b64	%rd6831, {%r1156, %r1155};
	ld.local.u32 	%r1157, [%rd49];
	ld.local.u32 	%r1158, [%rd50];
	mov.b64	%rd6832, {%r1158, %r1157};
	ld.local.u32 	%r1159, [%rd51];
	ld.local.u32 	%r1160, [%rd52];
	mov.b64	%rd6833, {%r1160, %r1159};
	ld.local.u32 	%r1161, [%rd53];
	ld.local.u32 	%r1162, [%rd54];
	mov.b64	%rd6834, {%r1162, %r1161};
	ld.local.u32 	%r1163, [%rd55];
	ld.local.u32 	%r1164, [%rd56];
	mov.b64	%rd6835, {%r1164, %r1163};
	ld.local.u32 	%r1165, [%rd57];
	ld.local.u32 	%r1166, [%rd58];
	mov.b64	%rd6836, {%r1166, %r1165};
	ld.local.u32 	%r1167, [%rd59];
	ld.local.u32 	%r1168, [%rd60];
	mov.b64	%rd6837, {%r1168, %r1167};
	ld.local.u32 	%r1169, [%rd29];
	ld.local.u32 	%r1170, [%rd30];
	mov.b64	%rd6821, {%r1170, %r1169};
	ld.local.u32 	%r1171, [%rd31];
	ld.local.u32 	%r1172, [%rd32];
	mov.b64	%rd6820, {%r1172, %r1171};
	ld.local.u32 	%r1173, [%rd33];
	ld.local.u32 	%r1174, [%rd34];
	mov.b64	%rd6819, {%r1174, %r1173};
	ld.local.u32 	%r1175, [%rd35];
	ld.local.u32 	%r1176, [%rd36];
	mov.b64	%rd6818, {%r1176, %r1175};
	ld.local.u32 	%r1177, [%rd37];
	ld.local.u32 	%r1178, [%rd38];
	mov.b64	%rd6817, {%r1178, %r1177};
	ld.local.u32 	%r1179, [%rd39];
	ld.local.u32 	%r1180, [%rd40];
	mov.b64	%rd6816, {%r1180, %r1179};
	ld.local.u32 	%r1181, [%rd41];
	ld.local.u32 	%r1182, [%rd42];
	mov.b64	%rd6815, {%r1182, %r1181};
	ld.local.u32 	%r1183, [%rd43];
	ld.local.u32 	%r1184, [%rd44];
	mov.b64	%rd6814, {%r1184, %r1183};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1185,%dummy}, %rd6841;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1186}, %rd6841;
	}
	shf.r.wrap.b32 	%r1187, %r1186, %r1185, 18;
	shf.r.wrap.b32 	%r1188, %r1185, %r1186, 18;
	mov.b64 	%rd767, {%r1188, %r1187};
	shf.r.wrap.b32 	%r1189, %r1186, %r1185, 14;
	shf.r.wrap.b32 	%r1190, %r1185, %r1186, 14;
	mov.b64 	%rd768, {%r1190, %r1189};
	xor.b64  	%rd769, %rd767, %rd768;
	shf.l.wrap.b32 	%r1191, %r1185, %r1186, 23;
	shf.l.wrap.b32 	%r1192, %r1186, %r1185, 23;
	mov.b64 	%rd770, {%r1192, %r1191};
	xor.b64  	%rd771, %rd769, %rd770;
	xor.b64  	%rd772, %rd6839, %rd6840;
	and.b64  	%rd773, %rd772, %rd6841;
	xor.b64  	%rd774, %rd773, %rd6839;
	add.s64 	%rd775, %rd774, %rd6838;
	add.s64 	%rd776, %rd775, %rd6830;
	add.s64 	%rd777, %rd776, %rd63;
	add.s64 	%rd778, %rd777, %rd771;
	add.s64 	%rd779, %rd778, %rd6842;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1193}, %rd6845;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1194,%dummy}, %rd6845;
	}
	shf.l.wrap.b32 	%r1195, %r1194, %r1193, 30;
	shf.l.wrap.b32 	%r1196, %r1193, %r1194, 30;
	mov.b64 	%rd780, {%r1196, %r1195};
	shf.r.wrap.b32 	%r1197, %r1193, %r1194, 28;
	shf.r.wrap.b32 	%r1198, %r1194, %r1193, 28;
	mov.b64 	%rd781, {%r1198, %r1197};
	xor.b64  	%rd782, %rd780, %rd781;
	shf.l.wrap.b32 	%r1199, %r1194, %r1193, 25;
	shf.l.wrap.b32 	%r1200, %r1193, %r1194, 25;
	mov.b64 	%rd783, {%r1200, %r1199};
	xor.b64  	%rd784, %rd782, %rd783;
	xor.b64  	%rd785, %rd6844, %rd6845;
	xor.b64  	%rd786, %rd6843, %rd6845;
	and.b64  	%rd787, %rd786, %rd785;
	xor.b64  	%rd788, %rd787, %rd6845;
	add.s64 	%rd789, %rd778, %rd788;
	add.s64 	%rd790, %rd789, %rd784;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1201,%dummy}, %rd779;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1202}, %rd779;
	}
	shf.r.wrap.b32 	%r1203, %r1202, %r1201, 14;
	shf.r.wrap.b32 	%r1204, %r1201, %r1202, 14;
	mov.b64 	%rd791, {%r1204, %r1203};
	shf.r.wrap.b32 	%r1205, %r1202, %r1201, 18;
	shf.r.wrap.b32 	%r1206, %r1201, %r1202, 18;
	mov.b64 	%rd792, {%r1206, %r1205};
	xor.b64  	%rd793, %rd792, %rd791;
	shf.l.wrap.b32 	%r1207, %r1201, %r1202, 23;
	shf.l.wrap.b32 	%r1208, %r1202, %r1201, 23;
	mov.b64 	%rd794, {%r1208, %r1207};
	xor.b64  	%rd795, %rd793, %rd794;
	xor.b64  	%rd796, %rd6840, %rd6841;
	and.b64  	%rd797, %rd779, %rd796;
	xor.b64  	%rd798, %rd797, %rd6840;
	add.s64 	%rd799, %rd6831, %rd6839;
	add.s64 	%rd800, %rd799, %rd64;
	add.s64 	%rd801, %rd800, %rd798;
	add.s64 	%rd802, %rd801, %rd795;
	add.s64 	%rd803, %rd802, %rd6843;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1209,%dummy}, %rd790;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1210}, %rd790;
	}
	shf.r.wrap.b32 	%r1211, %r1210, %r1209, 28;
	shf.r.wrap.b32 	%r1212, %r1209, %r1210, 28;
	mov.b64 	%rd804, {%r1212, %r1211};
	shf.l.wrap.b32 	%r1213, %r1209, %r1210, 30;
	shf.l.wrap.b32 	%r1214, %r1210, %r1209, 30;
	mov.b64 	%rd805, {%r1214, %r1213};
	xor.b64  	%rd806, %rd805, %rd804;
	shf.l.wrap.b32 	%r1215, %r1209, %r1210, 25;
	shf.l.wrap.b32 	%r1216, %r1210, %r1209, 25;
	mov.b64 	%rd807, {%r1216, %r1215};
	xor.b64  	%rd808, %rd806, %rd807;
	xor.b64  	%rd809, %rd790, %rd6844;
	xor.b64  	%rd810, %rd790, %rd6845;
	and.b64  	%rd811, %rd810, %rd809;
	xor.b64  	%rd812, %rd811, %rd790;
	add.s64 	%rd813, %rd802, %rd812;
	add.s64 	%rd814, %rd813, %rd808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1217,%dummy}, %rd803;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1218}, %rd803;
	}
	shf.r.wrap.b32 	%r1219, %r1218, %r1217, 14;
	shf.r.wrap.b32 	%r1220, %r1217, %r1218, 14;
	mov.b64 	%rd815, {%r1220, %r1219};
	shf.r.wrap.b32 	%r1221, %r1218, %r1217, 18;
	shf.r.wrap.b32 	%r1222, %r1217, %r1218, 18;
	mov.b64 	%rd816, {%r1222, %r1221};
	xor.b64  	%rd817, %rd816, %rd815;
	shf.l.wrap.b32 	%r1223, %r1217, %r1218, 23;
	shf.l.wrap.b32 	%r1224, %r1218, %r1217, 23;
	mov.b64 	%rd818, {%r1224, %r1223};
	xor.b64  	%rd819, %rd817, %rd818;
	xor.b64  	%rd820, %rd779, %rd6841;
	and.b64  	%rd821, %rd803, %rd820;
	xor.b64  	%rd822, %rd821, %rd6841;
	add.s64 	%rd823, %rd6832, %rd6840;
	add.s64 	%rd824, %rd823, %rd65;
	add.s64 	%rd825, %rd824, %rd822;
	add.s64 	%rd826, %rd825, %rd819;
	add.s64 	%rd827, %rd826, %rd6844;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1225,%dummy}, %rd814;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1226}, %rd814;
	}
	shf.r.wrap.b32 	%r1227, %r1226, %r1225, 28;
	shf.r.wrap.b32 	%r1228, %r1225, %r1226, 28;
	mov.b64 	%rd828, {%r1228, %r1227};
	shf.l.wrap.b32 	%r1229, %r1225, %r1226, 30;
	shf.l.wrap.b32 	%r1230, %r1226, %r1225, 30;
	mov.b64 	%rd829, {%r1230, %r1229};
	xor.b64  	%rd830, %rd829, %rd828;
	shf.l.wrap.b32 	%r1231, %r1225, %r1226, 25;
	shf.l.wrap.b32 	%r1232, %r1226, %r1225, 25;
	mov.b64 	%rd831, {%r1232, %r1231};
	xor.b64  	%rd832, %rd830, %rd831;
	xor.b64  	%rd833, %rd814, %rd6845;
	xor.b64  	%rd834, %rd814, %rd790;
	and.b64  	%rd835, %rd834, %rd833;
	xor.b64  	%rd836, %rd835, %rd814;
	add.s64 	%rd837, %rd826, %rd836;
	add.s64 	%rd838, %rd837, %rd832;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1233,%dummy}, %rd827;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1234}, %rd827;
	}
	shf.r.wrap.b32 	%r1235, %r1234, %r1233, 14;
	shf.r.wrap.b32 	%r1236, %r1233, %r1234, 14;
	mov.b64 	%rd839, {%r1236, %r1235};
	shf.r.wrap.b32 	%r1237, %r1234, %r1233, 18;
	shf.r.wrap.b32 	%r1238, %r1233, %r1234, 18;
	mov.b64 	%rd840, {%r1238, %r1237};
	xor.b64  	%rd841, %rd840, %rd839;
	shf.l.wrap.b32 	%r1239, %r1233, %r1234, 23;
	shf.l.wrap.b32 	%r1240, %r1234, %r1233, 23;
	mov.b64 	%rd842, {%r1240, %r1239};
	xor.b64  	%rd843, %rd841, %rd842;
	xor.b64  	%rd844, %rd803, %rd779;
	and.b64  	%rd845, %rd827, %rd844;
	xor.b64  	%rd846, %rd845, %rd779;
	add.s64 	%rd847, %rd6833, %rd6841;
	add.s64 	%rd848, %rd847, %rd66;
	add.s64 	%rd849, %rd848, %rd846;
	add.s64 	%rd850, %rd849, %rd843;
	add.s64 	%rd851, %rd850, %rd6845;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1241,%dummy}, %rd838;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1242}, %rd838;
	}
	shf.r.wrap.b32 	%r1243, %r1242, %r1241, 28;
	shf.r.wrap.b32 	%r1244, %r1241, %r1242, 28;
	mov.b64 	%rd852, {%r1244, %r1243};
	shf.l.wrap.b32 	%r1245, %r1241, %r1242, 30;
	shf.l.wrap.b32 	%r1246, %r1242, %r1241, 30;
	mov.b64 	%rd853, {%r1246, %r1245};
	xor.b64  	%rd854, %rd853, %rd852;
	shf.l.wrap.b32 	%r1247, %r1241, %r1242, 25;
	shf.l.wrap.b32 	%r1248, %r1242, %r1241, 25;
	mov.b64 	%rd855, {%r1248, %r1247};
	xor.b64  	%rd856, %rd854, %rd855;
	xor.b64  	%rd857, %rd838, %rd790;
	xor.b64  	%rd858, %rd838, %rd814;
	and.b64  	%rd859, %rd858, %rd857;
	xor.b64  	%rd860, %rd859, %rd838;
	add.s64 	%rd861, %rd850, %rd860;
	add.s64 	%rd862, %rd861, %rd856;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1249,%dummy}, %rd851;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1250}, %rd851;
	}
	shf.r.wrap.b32 	%r1251, %r1250, %r1249, 14;
	shf.r.wrap.b32 	%r1252, %r1249, %r1250, 14;
	mov.b64 	%rd863, {%r1252, %r1251};
	shf.r.wrap.b32 	%r1253, %r1250, %r1249, 18;
	shf.r.wrap.b32 	%r1254, %r1249, %r1250, 18;
	mov.b64 	%rd864, {%r1254, %r1253};
	xor.b64  	%rd865, %rd864, %rd863;
	shf.l.wrap.b32 	%r1255, %r1249, %r1250, 23;
	shf.l.wrap.b32 	%r1256, %r1250, %r1249, 23;
	mov.b64 	%rd866, {%r1256, %r1255};
	xor.b64  	%rd867, %rd865, %rd866;
	xor.b64  	%rd868, %rd827, %rd803;
	and.b64  	%rd869, %rd851, %rd868;
	xor.b64  	%rd870, %rd869, %rd803;
	add.s64 	%rd871, %rd779, %rd6834;
	add.s64 	%rd872, %rd871, %rd67;
	add.s64 	%rd873, %rd872, %rd870;
	add.s64 	%rd874, %rd873, %rd867;
	add.s64 	%rd875, %rd874, %rd790;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1257,%dummy}, %rd862;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1258}, %rd862;
	}
	shf.r.wrap.b32 	%r1259, %r1258, %r1257, 28;
	shf.r.wrap.b32 	%r1260, %r1257, %r1258, 28;
	mov.b64 	%rd876, {%r1260, %r1259};
	shf.l.wrap.b32 	%r1261, %r1257, %r1258, 30;
	shf.l.wrap.b32 	%r1262, %r1258, %r1257, 30;
	mov.b64 	%rd877, {%r1262, %r1261};
	xor.b64  	%rd878, %rd877, %rd876;
	shf.l.wrap.b32 	%r1263, %r1257, %r1258, 25;
	shf.l.wrap.b32 	%r1264, %r1258, %r1257, 25;
	mov.b64 	%rd879, {%r1264, %r1263};
	xor.b64  	%rd880, %rd878, %rd879;
	xor.b64  	%rd881, %rd862, %rd814;
	xor.b64  	%rd882, %rd862, %rd838;
	and.b64  	%rd883, %rd882, %rd881;
	xor.b64  	%rd884, %rd883, %rd862;
	add.s64 	%rd885, %rd874, %rd884;
	add.s64 	%rd886, %rd885, %rd880;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1265,%dummy}, %rd875;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1266}, %rd875;
	}
	shf.r.wrap.b32 	%r1267, %r1266, %r1265, 14;
	shf.r.wrap.b32 	%r1268, %r1265, %r1266, 14;
	mov.b64 	%rd887, {%r1268, %r1267};
	shf.r.wrap.b32 	%r1269, %r1266, %r1265, 18;
	shf.r.wrap.b32 	%r1270, %r1265, %r1266, 18;
	mov.b64 	%rd888, {%r1270, %r1269};
	xor.b64  	%rd889, %rd888, %rd887;
	shf.l.wrap.b32 	%r1271, %r1265, %r1266, 23;
	shf.l.wrap.b32 	%r1272, %r1266, %r1265, 23;
	mov.b64 	%rd890, {%r1272, %r1271};
	xor.b64  	%rd891, %rd889, %rd890;
	xor.b64  	%rd892, %rd851, %rd827;
	and.b64  	%rd893, %rd875, %rd892;
	xor.b64  	%rd894, %rd893, %rd827;
	add.s64 	%rd895, %rd803, %rd6835;
	add.s64 	%rd896, %rd895, %rd68;
	add.s64 	%rd897, %rd896, %rd894;
	add.s64 	%rd898, %rd897, %rd891;
	add.s64 	%rd899, %rd898, %rd814;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1273,%dummy}, %rd886;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1274}, %rd886;
	}
	shf.r.wrap.b32 	%r1275, %r1274, %r1273, 28;
	shf.r.wrap.b32 	%r1276, %r1273, %r1274, 28;
	mov.b64 	%rd900, {%r1276, %r1275};
	shf.l.wrap.b32 	%r1277, %r1273, %r1274, 30;
	shf.l.wrap.b32 	%r1278, %r1274, %r1273, 30;
	mov.b64 	%rd901, {%r1278, %r1277};
	xor.b64  	%rd902, %rd901, %rd900;
	shf.l.wrap.b32 	%r1279, %r1273, %r1274, 25;
	shf.l.wrap.b32 	%r1280, %r1274, %r1273, 25;
	mov.b64 	%rd903, {%r1280, %r1279};
	xor.b64  	%rd904, %rd902, %rd903;
	xor.b64  	%rd905, %rd886, %rd838;
	xor.b64  	%rd906, %rd886, %rd862;
	and.b64  	%rd907, %rd906, %rd905;
	xor.b64  	%rd908, %rd907, %rd886;
	add.s64 	%rd909, %rd898, %rd908;
	add.s64 	%rd910, %rd909, %rd904;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1281,%dummy}, %rd899;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1282}, %rd899;
	}
	shf.r.wrap.b32 	%r1283, %r1282, %r1281, 14;
	shf.r.wrap.b32 	%r1284, %r1281, %r1282, 14;
	mov.b64 	%rd911, {%r1284, %r1283};
	shf.r.wrap.b32 	%r1285, %r1282, %r1281, 18;
	shf.r.wrap.b32 	%r1286, %r1281, %r1282, 18;
	mov.b64 	%rd912, {%r1286, %r1285};
	xor.b64  	%rd913, %rd912, %rd911;
	shf.l.wrap.b32 	%r1287, %r1281, %r1282, 23;
	shf.l.wrap.b32 	%r1288, %r1282, %r1281, 23;
	mov.b64 	%rd914, {%r1288, %r1287};
	xor.b64  	%rd915, %rd913, %rd914;
	xor.b64  	%rd916, %rd875, %rd851;
	and.b64  	%rd917, %rd899, %rd916;
	xor.b64  	%rd918, %rd917, %rd851;
	add.s64 	%rd919, %rd827, %rd6836;
	add.s64 	%rd920, %rd919, %rd69;
	add.s64 	%rd921, %rd920, %rd918;
	add.s64 	%rd922, %rd921, %rd915;
	add.s64 	%rd923, %rd922, %rd838;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1289,%dummy}, %rd910;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1290}, %rd910;
	}
	shf.r.wrap.b32 	%r1291, %r1290, %r1289, 28;
	shf.r.wrap.b32 	%r1292, %r1289, %r1290, 28;
	mov.b64 	%rd924, {%r1292, %r1291};
	shf.l.wrap.b32 	%r1293, %r1289, %r1290, 30;
	shf.l.wrap.b32 	%r1294, %r1290, %r1289, 30;
	mov.b64 	%rd925, {%r1294, %r1293};
	xor.b64  	%rd926, %rd925, %rd924;
	shf.l.wrap.b32 	%r1295, %r1289, %r1290, 25;
	shf.l.wrap.b32 	%r1296, %r1290, %r1289, 25;
	mov.b64 	%rd927, {%r1296, %r1295};
	xor.b64  	%rd928, %rd926, %rd927;
	xor.b64  	%rd929, %rd910, %rd862;
	xor.b64  	%rd930, %rd910, %rd886;
	and.b64  	%rd931, %rd930, %rd929;
	xor.b64  	%rd932, %rd931, %rd910;
	add.s64 	%rd933, %rd922, %rd932;
	add.s64 	%rd934, %rd933, %rd928;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1297,%dummy}, %rd923;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1298}, %rd923;
	}
	shf.r.wrap.b32 	%r1299, %r1298, %r1297, 14;
	shf.r.wrap.b32 	%r1300, %r1297, %r1298, 14;
	mov.b64 	%rd935, {%r1300, %r1299};
	shf.r.wrap.b32 	%r1301, %r1298, %r1297, 18;
	shf.r.wrap.b32 	%r1302, %r1297, %r1298, 18;
	mov.b64 	%rd936, {%r1302, %r1301};
	xor.b64  	%rd937, %rd936, %rd935;
	shf.l.wrap.b32 	%r1303, %r1297, %r1298, 23;
	shf.l.wrap.b32 	%r1304, %r1298, %r1297, 23;
	mov.b64 	%rd938, {%r1304, %r1303};
	xor.b64  	%rd939, %rd937, %rd938;
	xor.b64  	%rd940, %rd899, %rd875;
	and.b64  	%rd941, %rd923, %rd940;
	xor.b64  	%rd942, %rd941, %rd875;
	add.s64 	%rd943, %rd851, %rd6837;
	add.s64 	%rd944, %rd943, %rd70;
	add.s64 	%rd945, %rd944, %rd942;
	add.s64 	%rd946, %rd945, %rd939;
	add.s64 	%rd947, %rd946, %rd862;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1305,%dummy}, %rd934;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1306}, %rd934;
	}
	shf.r.wrap.b32 	%r1307, %r1306, %r1305, 28;
	shf.r.wrap.b32 	%r1308, %r1305, %r1306, 28;
	mov.b64 	%rd948, {%r1308, %r1307};
	shf.l.wrap.b32 	%r1309, %r1305, %r1306, 30;
	shf.l.wrap.b32 	%r1310, %r1306, %r1305, 30;
	mov.b64 	%rd949, {%r1310, %r1309};
	xor.b64  	%rd950, %rd949, %rd948;
	shf.l.wrap.b32 	%r1311, %r1305, %r1306, 25;
	shf.l.wrap.b32 	%r1312, %r1306, %r1305, 25;
	mov.b64 	%rd951, {%r1312, %r1311};
	xor.b64  	%rd952, %rd950, %rd951;
	xor.b64  	%rd953, %rd934, %rd886;
	xor.b64  	%rd954, %rd934, %rd910;
	and.b64  	%rd955, %rd954, %rd953;
	xor.b64  	%rd956, %rd955, %rd934;
	add.s64 	%rd957, %rd946, %rd956;
	add.s64 	%rd958, %rd957, %rd952;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1313,%dummy}, %rd947;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1314}, %rd947;
	}
	shf.r.wrap.b32 	%r1315, %r1314, %r1313, 14;
	shf.r.wrap.b32 	%r1316, %r1313, %r1314, 14;
	mov.b64 	%rd959, {%r1316, %r1315};
	shf.r.wrap.b32 	%r1317, %r1314, %r1313, 18;
	shf.r.wrap.b32 	%r1318, %r1313, %r1314, 18;
	mov.b64 	%rd960, {%r1318, %r1317};
	xor.b64  	%rd961, %rd960, %rd959;
	shf.l.wrap.b32 	%r1319, %r1313, %r1314, 23;
	shf.l.wrap.b32 	%r1320, %r1314, %r1313, 23;
	mov.b64 	%rd962, {%r1320, %r1319};
	xor.b64  	%rd963, %rd961, %rd962;
	xor.b64  	%rd964, %rd923, %rd899;
	and.b64  	%rd965, %rd947, %rd964;
	xor.b64  	%rd966, %rd965, %rd899;
	add.s64 	%rd967, %rd875, %rd6821;
	add.s64 	%rd968, %rd967, %rd71;
	add.s64 	%rd969, %rd968, %rd966;
	add.s64 	%rd970, %rd969, %rd963;
	add.s64 	%rd971, %rd970, %rd886;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1321,%dummy}, %rd958;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1322}, %rd958;
	}
	shf.r.wrap.b32 	%r1323, %r1322, %r1321, 28;
	shf.r.wrap.b32 	%r1324, %r1321, %r1322, 28;
	mov.b64 	%rd972, {%r1324, %r1323};
	shf.l.wrap.b32 	%r1325, %r1321, %r1322, 30;
	shf.l.wrap.b32 	%r1326, %r1322, %r1321, 30;
	mov.b64 	%rd973, {%r1326, %r1325};
	xor.b64  	%rd974, %rd973, %rd972;
	shf.l.wrap.b32 	%r1327, %r1321, %r1322, 25;
	shf.l.wrap.b32 	%r1328, %r1322, %r1321, 25;
	mov.b64 	%rd975, {%r1328, %r1327};
	xor.b64  	%rd976, %rd974, %rd975;
	xor.b64  	%rd977, %rd958, %rd910;
	xor.b64  	%rd978, %rd958, %rd934;
	and.b64  	%rd979, %rd978, %rd977;
	xor.b64  	%rd980, %rd979, %rd958;
	add.s64 	%rd981, %rd970, %rd980;
	add.s64 	%rd982, %rd981, %rd976;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1329,%dummy}, %rd971;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1330}, %rd971;
	}
	shf.r.wrap.b32 	%r1331, %r1330, %r1329, 14;
	shf.r.wrap.b32 	%r1332, %r1329, %r1330, 14;
	mov.b64 	%rd983, {%r1332, %r1331};
	shf.r.wrap.b32 	%r1333, %r1330, %r1329, 18;
	shf.r.wrap.b32 	%r1334, %r1329, %r1330, 18;
	mov.b64 	%rd984, {%r1334, %r1333};
	xor.b64  	%rd985, %rd984, %rd983;
	shf.l.wrap.b32 	%r1335, %r1329, %r1330, 23;
	shf.l.wrap.b32 	%r1336, %r1330, %r1329, 23;
	mov.b64 	%rd986, {%r1336, %r1335};
	xor.b64  	%rd987, %rd985, %rd986;
	xor.b64  	%rd988, %rd947, %rd923;
	and.b64  	%rd989, %rd971, %rd988;
	xor.b64  	%rd990, %rd989, %rd923;
	add.s64 	%rd991, %rd899, %rd6820;
	add.s64 	%rd992, %rd991, %rd72;
	add.s64 	%rd993, %rd992, %rd990;
	add.s64 	%rd994, %rd993, %rd987;
	add.s64 	%rd995, %rd994, %rd910;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1337,%dummy}, %rd982;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1338}, %rd982;
	}
	shf.r.wrap.b32 	%r1339, %r1338, %r1337, 28;
	shf.r.wrap.b32 	%r1340, %r1337, %r1338, 28;
	mov.b64 	%rd996, {%r1340, %r1339};
	shf.l.wrap.b32 	%r1341, %r1337, %r1338, 30;
	shf.l.wrap.b32 	%r1342, %r1338, %r1337, 30;
	mov.b64 	%rd997, {%r1342, %r1341};
	xor.b64  	%rd998, %rd997, %rd996;
	shf.l.wrap.b32 	%r1343, %r1337, %r1338, 25;
	shf.l.wrap.b32 	%r1344, %r1338, %r1337, 25;
	mov.b64 	%rd999, {%r1344, %r1343};
	xor.b64  	%rd1000, %rd998, %rd999;
	xor.b64  	%rd1001, %rd982, %rd934;
	xor.b64  	%rd1002, %rd982, %rd958;
	and.b64  	%rd1003, %rd1002, %rd1001;
	xor.b64  	%rd1004, %rd1003, %rd982;
	add.s64 	%rd1005, %rd994, %rd1004;
	add.s64 	%rd1006, %rd1005, %rd1000;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1345,%dummy}, %rd995;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1346}, %rd995;
	}
	shf.r.wrap.b32 	%r1347, %r1346, %r1345, 14;
	shf.r.wrap.b32 	%r1348, %r1345, %r1346, 14;
	mov.b64 	%rd1007, {%r1348, %r1347};
	shf.r.wrap.b32 	%r1349, %r1346, %r1345, 18;
	shf.r.wrap.b32 	%r1350, %r1345, %r1346, 18;
	mov.b64 	%rd1008, {%r1350, %r1349};
	xor.b64  	%rd1009, %rd1008, %rd1007;
	shf.l.wrap.b32 	%r1351, %r1345, %r1346, 23;
	shf.l.wrap.b32 	%r1352, %r1346, %r1345, 23;
	mov.b64 	%rd1010, {%r1352, %r1351};
	xor.b64  	%rd1011, %rd1009, %rd1010;
	xor.b64  	%rd1012, %rd971, %rd947;
	and.b64  	%rd1013, %rd995, %rd1012;
	xor.b64  	%rd1014, %rd1013, %rd947;
	add.s64 	%rd1015, %rd923, %rd6819;
	add.s64 	%rd1016, %rd1015, %rd73;
	add.s64 	%rd1017, %rd1016, %rd1014;
	add.s64 	%rd1018, %rd1017, %rd1011;
	add.s64 	%rd1019, %rd1018, %rd934;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1353,%dummy}, %rd1006;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1354}, %rd1006;
	}
	shf.r.wrap.b32 	%r1355, %r1354, %r1353, 28;
	shf.r.wrap.b32 	%r1356, %r1353, %r1354, 28;
	mov.b64 	%rd1020, {%r1356, %r1355};
	shf.l.wrap.b32 	%r1357, %r1353, %r1354, 30;
	shf.l.wrap.b32 	%r1358, %r1354, %r1353, 30;
	mov.b64 	%rd1021, {%r1358, %r1357};
	xor.b64  	%rd1022, %rd1021, %rd1020;
	shf.l.wrap.b32 	%r1359, %r1353, %r1354, 25;
	shf.l.wrap.b32 	%r1360, %r1354, %r1353, 25;
	mov.b64 	%rd1023, {%r1360, %r1359};
	xor.b64  	%rd1024, %rd1022, %rd1023;
	xor.b64  	%rd1025, %rd1006, %rd958;
	xor.b64  	%rd1026, %rd1006, %rd982;
	and.b64  	%rd1027, %rd1026, %rd1025;
	xor.b64  	%rd1028, %rd1027, %rd1006;
	add.s64 	%rd1029, %rd1018, %rd1028;
	add.s64 	%rd1030, %rd1029, %rd1024;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1361,%dummy}, %rd1019;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1362}, %rd1019;
	}
	shf.r.wrap.b32 	%r1363, %r1362, %r1361, 14;
	shf.r.wrap.b32 	%r1364, %r1361, %r1362, 14;
	mov.b64 	%rd1031, {%r1364, %r1363};
	shf.r.wrap.b32 	%r1365, %r1362, %r1361, 18;
	shf.r.wrap.b32 	%r1366, %r1361, %r1362, 18;
	mov.b64 	%rd1032, {%r1366, %r1365};
	xor.b64  	%rd1033, %rd1032, %rd1031;
	shf.l.wrap.b32 	%r1367, %r1361, %r1362, 23;
	shf.l.wrap.b32 	%r1368, %r1362, %r1361, 23;
	mov.b64 	%rd1034, {%r1368, %r1367};
	xor.b64  	%rd1035, %rd1033, %rd1034;
	xor.b64  	%rd1036, %rd995, %rd971;
	and.b64  	%rd1037, %rd1019, %rd1036;
	xor.b64  	%rd1038, %rd1037, %rd971;
	add.s64 	%rd1039, %rd947, %rd6818;
	add.s64 	%rd1040, %rd1039, %rd74;
	add.s64 	%rd1041, %rd1040, %rd1038;
	add.s64 	%rd1042, %rd1041, %rd1035;
	add.s64 	%rd1043, %rd1042, %rd958;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1369,%dummy}, %rd1030;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1370}, %rd1030;
	}
	shf.r.wrap.b32 	%r1371, %r1370, %r1369, 28;
	shf.r.wrap.b32 	%r1372, %r1369, %r1370, 28;
	mov.b64 	%rd1044, {%r1372, %r1371};
	shf.l.wrap.b32 	%r1373, %r1369, %r1370, 30;
	shf.l.wrap.b32 	%r1374, %r1370, %r1369, 30;
	mov.b64 	%rd1045, {%r1374, %r1373};
	xor.b64  	%rd1046, %rd1045, %rd1044;
	shf.l.wrap.b32 	%r1375, %r1369, %r1370, 25;
	shf.l.wrap.b32 	%r1376, %r1370, %r1369, 25;
	mov.b64 	%rd1047, {%r1376, %r1375};
	xor.b64  	%rd1048, %rd1046, %rd1047;
	xor.b64  	%rd1049, %rd1030, %rd982;
	xor.b64  	%rd1050, %rd1030, %rd1006;
	and.b64  	%rd1051, %rd1050, %rd1049;
	xor.b64  	%rd1052, %rd1051, %rd1030;
	add.s64 	%rd1053, %rd1042, %rd1052;
	add.s64 	%rd1054, %rd1053, %rd1048;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1377,%dummy}, %rd1043;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1378}, %rd1043;
	}
	shf.r.wrap.b32 	%r1379, %r1378, %r1377, 14;
	shf.r.wrap.b32 	%r1380, %r1377, %r1378, 14;
	mov.b64 	%rd1055, {%r1380, %r1379};
	shf.r.wrap.b32 	%r1381, %r1378, %r1377, 18;
	shf.r.wrap.b32 	%r1382, %r1377, %r1378, 18;
	mov.b64 	%rd1056, {%r1382, %r1381};
	xor.b64  	%rd1057, %rd1056, %rd1055;
	shf.l.wrap.b32 	%r1383, %r1377, %r1378, 23;
	shf.l.wrap.b32 	%r1384, %r1378, %r1377, 23;
	mov.b64 	%rd1058, {%r1384, %r1383};
	xor.b64  	%rd1059, %rd1057, %rd1058;
	xor.b64  	%rd1060, %rd1019, %rd995;
	and.b64  	%rd1061, %rd1043, %rd1060;
	xor.b64  	%rd1062, %rd1061, %rd995;
	add.s64 	%rd1063, %rd971, %rd6817;
	add.s64 	%rd1064, %rd1063, %rd75;
	add.s64 	%rd1065, %rd1064, %rd1062;
	add.s64 	%rd1066, %rd1065, %rd1059;
	add.s64 	%rd6829, %rd1066, %rd982;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1385,%dummy}, %rd1054;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1386}, %rd1054;
	}
	shf.r.wrap.b32 	%r1387, %r1386, %r1385, 28;
	shf.r.wrap.b32 	%r1388, %r1385, %r1386, 28;
	mov.b64 	%rd1067, {%r1388, %r1387};
	shf.l.wrap.b32 	%r1389, %r1385, %r1386, 30;
	shf.l.wrap.b32 	%r1390, %r1386, %r1385, 30;
	mov.b64 	%rd1068, {%r1390, %r1389};
	xor.b64  	%rd1069, %rd1068, %rd1067;
	shf.l.wrap.b32 	%r1391, %r1385, %r1386, 25;
	shf.l.wrap.b32 	%r1392, %r1386, %r1385, 25;
	mov.b64 	%rd1070, {%r1392, %r1391};
	xor.b64  	%rd1071, %rd1069, %rd1070;
	xor.b64  	%rd1072, %rd1054, %rd1006;
	xor.b64  	%rd1073, %rd1054, %rd1030;
	and.b64  	%rd1074, %rd1073, %rd1072;
	xor.b64  	%rd1075, %rd1074, %rd1054;
	add.s64 	%rd1076, %rd1066, %rd1075;
	add.s64 	%rd6825, %rd1076, %rd1071;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1393,%dummy}, %rd6829;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1394}, %rd6829;
	}
	shf.r.wrap.b32 	%r1395, %r1394, %r1393, 14;
	shf.r.wrap.b32 	%r1396, %r1393, %r1394, 14;
	mov.b64 	%rd1077, {%r1396, %r1395};
	shf.r.wrap.b32 	%r1397, %r1394, %r1393, 18;
	shf.r.wrap.b32 	%r1398, %r1393, %r1394, 18;
	mov.b64 	%rd1078, {%r1398, %r1397};
	xor.b64  	%rd1079, %rd1078, %rd1077;
	shf.l.wrap.b32 	%r1399, %r1393, %r1394, 23;
	shf.l.wrap.b32 	%r1400, %r1394, %r1393, 23;
	mov.b64 	%rd1080, {%r1400, %r1399};
	xor.b64  	%rd1081, %rd1079, %rd1080;
	xor.b64  	%rd1082, %rd1043, %rd1019;
	and.b64  	%rd1083, %rd6829, %rd1082;
	xor.b64  	%rd1084, %rd1083, %rd1019;
	add.s64 	%rd1085, %rd995, %rd6816;
	add.s64 	%rd1086, %rd1085, %rd76;
	add.s64 	%rd1087, %rd1086, %rd1084;
	add.s64 	%rd1088, %rd1087, %rd1081;
	add.s64 	%rd6828, %rd1088, %rd1006;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1401,%dummy}, %rd6825;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1402}, %rd6825;
	}
	shf.r.wrap.b32 	%r1403, %r1402, %r1401, 28;
	shf.r.wrap.b32 	%r1404, %r1401, %r1402, 28;
	mov.b64 	%rd1089, {%r1404, %r1403};
	shf.l.wrap.b32 	%r1405, %r1401, %r1402, 30;
	shf.l.wrap.b32 	%r1406, %r1402, %r1401, 30;
	mov.b64 	%rd1090, {%r1406, %r1405};
	xor.b64  	%rd1091, %rd1090, %rd1089;
	shf.l.wrap.b32 	%r1407, %r1401, %r1402, 25;
	shf.l.wrap.b32 	%r1408, %r1402, %r1401, 25;
	mov.b64 	%rd1092, {%r1408, %r1407};
	xor.b64  	%rd1093, %rd1091, %rd1092;
	xor.b64  	%rd1094, %rd6825, %rd1030;
	xor.b64  	%rd1095, %rd6825, %rd1054;
	and.b64  	%rd1096, %rd1095, %rd1094;
	xor.b64  	%rd1097, %rd1096, %rd6825;
	add.s64 	%rd1098, %rd1088, %rd1097;
	add.s64 	%rd6824, %rd1098, %rd1093;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1409,%dummy}, %rd6828;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1410}, %rd6828;
	}
	shf.r.wrap.b32 	%r1411, %r1410, %r1409, 14;
	shf.r.wrap.b32 	%r1412, %r1409, %r1410, 14;
	mov.b64 	%rd1099, {%r1412, %r1411};
	shf.r.wrap.b32 	%r1413, %r1410, %r1409, 18;
	shf.r.wrap.b32 	%r1414, %r1409, %r1410, 18;
	mov.b64 	%rd1100, {%r1414, %r1413};
	xor.b64  	%rd1101, %rd1100, %rd1099;
	shf.l.wrap.b32 	%r1415, %r1409, %r1410, 23;
	shf.l.wrap.b32 	%r1416, %r1410, %r1409, 23;
	mov.b64 	%rd1102, {%r1416, %r1415};
	xor.b64  	%rd1103, %rd1101, %rd1102;
	xor.b64  	%rd1104, %rd6829, %rd1043;
	and.b64  	%rd1105, %rd6828, %rd1104;
	xor.b64  	%rd1106, %rd1105, %rd1043;
	add.s64 	%rd1107, %rd1019, %rd6815;
	add.s64 	%rd1108, %rd1107, %rd77;
	add.s64 	%rd1109, %rd1108, %rd1106;
	add.s64 	%rd1110, %rd1109, %rd1103;
	add.s64 	%rd6827, %rd1110, %rd1030;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1417,%dummy}, %rd6824;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1418}, %rd6824;
	}
	shf.r.wrap.b32 	%r1419, %r1418, %r1417, 28;
	shf.r.wrap.b32 	%r1420, %r1417, %r1418, 28;
	mov.b64 	%rd1111, {%r1420, %r1419};
	shf.l.wrap.b32 	%r1421, %r1417, %r1418, 30;
	shf.l.wrap.b32 	%r1422, %r1418, %r1417, 30;
	mov.b64 	%rd1112, {%r1422, %r1421};
	xor.b64  	%rd1113, %rd1112, %rd1111;
	shf.l.wrap.b32 	%r1423, %r1417, %r1418, 25;
	shf.l.wrap.b32 	%r1424, %r1418, %r1417, 25;
	mov.b64 	%rd1114, {%r1424, %r1423};
	xor.b64  	%rd1115, %rd1113, %rd1114;
	xor.b64  	%rd1116, %rd6824, %rd1054;
	xor.b64  	%rd1117, %rd6824, %rd6825;
	and.b64  	%rd1118, %rd1117, %rd1116;
	xor.b64  	%rd1119, %rd1118, %rd6824;
	add.s64 	%rd1120, %rd1110, %rd1119;
	add.s64 	%rd6823, %rd1120, %rd1115;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1425,%dummy}, %rd6827;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1426}, %rd6827;
	}
	shf.r.wrap.b32 	%r1427, %r1426, %r1425, 14;
	shf.r.wrap.b32 	%r1428, %r1425, %r1426, 14;
	mov.b64 	%rd1121, {%r1428, %r1427};
	shf.r.wrap.b32 	%r1429, %r1426, %r1425, 18;
	shf.r.wrap.b32 	%r1430, %r1425, %r1426, 18;
	mov.b64 	%rd1122, {%r1430, %r1429};
	xor.b64  	%rd1123, %rd1122, %rd1121;
	shf.l.wrap.b32 	%r1431, %r1425, %r1426, 23;
	shf.l.wrap.b32 	%r1432, %r1426, %r1425, 23;
	mov.b64 	%rd1124, {%r1432, %r1431};
	xor.b64  	%rd1125, %rd1123, %rd1124;
	xor.b64  	%rd1126, %rd6828, %rd6829;
	and.b64  	%rd1127, %rd6827, %rd1126;
	xor.b64  	%rd1128, %rd1127, %rd6829;
	add.s64 	%rd1129, %rd1043, %rd6814;
	add.s64 	%rd1130, %rd1129, %rd78;
	add.s64 	%rd1131, %rd1130, %rd1128;
	add.s64 	%rd1132, %rd1131, %rd1125;
	add.s64 	%rd6826, %rd1132, %rd1054;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1433,%dummy}, %rd6823;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1434}, %rd6823;
	}
	shf.r.wrap.b32 	%r1435, %r1434, %r1433, 28;
	shf.r.wrap.b32 	%r1436, %r1433, %r1434, 28;
	mov.b64 	%rd1133, {%r1436, %r1435};
	shf.l.wrap.b32 	%r1437, %r1433, %r1434, 30;
	shf.l.wrap.b32 	%r1438, %r1434, %r1433, 30;
	mov.b64 	%rd1134, {%r1438, %r1437};
	xor.b64  	%rd1135, %rd1134, %rd1133;
	shf.l.wrap.b32 	%r1439, %r1433, %r1434, 25;
	shf.l.wrap.b32 	%r1440, %r1434, %r1433, 25;
	mov.b64 	%rd1136, {%r1440, %r1439};
	xor.b64  	%rd1137, %rd1135, %rd1136;
	xor.b64  	%rd1138, %rd6823, %rd6825;
	xor.b64  	%rd1139, %rd6823, %rd6824;
	and.b64  	%rd1140, %rd1139, %rd1138;
	xor.b64  	%rd1141, %rd1140, %rd6823;
	add.s64 	%rd1142, %rd1132, %rd1141;
	add.s64 	%rd6822, %rd1142, %rd1137;
	mov.u32 	%r11771, 16;

BB5_345:
	shr.u64 	%rd1143, %rd6815, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1441,%dummy}, %rd6815;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1442}, %rd6815;
	}
	shf.r.wrap.b32 	%r1443, %r1442, %r1441, 19;
	shf.r.wrap.b32 	%r1444, %r1441, %r1442, 19;
	mov.b64 	%rd1144, {%r1444, %r1443};
	xor.b64  	%rd1145, %rd1144, %rd1143;
	shf.l.wrap.b32 	%r1445, %r1441, %r1442, 3;
	shf.l.wrap.b32 	%r1446, %r1442, %r1441, 3;
	mov.b64 	%rd1146, {%r1446, %r1445};
	xor.b64  	%rd1147, %rd1145, %rd1146;
	shr.u64 	%rd1148, %rd6831, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1447,%dummy}, %rd6831;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1448}, %rd6831;
	}
	shf.r.wrap.b32 	%r1449, %r1448, %r1447, 1;
	shf.r.wrap.b32 	%r1450, %r1447, %r1448, 1;
	mov.b64 	%rd1149, {%r1450, %r1449};
	xor.b64  	%rd1150, %rd1149, %rd1148;
	shf.r.wrap.b32 	%r1451, %r1448, %r1447, 8;
	shf.r.wrap.b32 	%r1452, %r1447, %r1448, 8;
	mov.b64 	%rd1151, {%r1452, %r1451};
	xor.b64  	%rd1152, %rd1150, %rd1151;
	add.s64 	%rd1153, %rd6820, %rd6830;
	add.s64 	%rd1154, %rd1153, %rd1147;
	add.s64 	%rd6830, %rd1154, %rd1152;
	shr.u64 	%rd1155, %rd6814, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1453,%dummy}, %rd6814;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1454}, %rd6814;
	}
	shf.r.wrap.b32 	%r1455, %r1454, %r1453, 19;
	shf.r.wrap.b32 	%r1456, %r1453, %r1454, 19;
	mov.b64 	%rd1156, {%r1456, %r1455};
	xor.b64  	%rd1157, %rd1156, %rd1155;
	shf.l.wrap.b32 	%r1457, %r1453, %r1454, 3;
	shf.l.wrap.b32 	%r1458, %r1454, %r1453, 3;
	mov.b64 	%rd1158, {%r1458, %r1457};
	xor.b64  	%rd1159, %rd1157, %rd1158;
	shr.u64 	%rd1160, %rd6832, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1459,%dummy}, %rd6832;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1460}, %rd6832;
	}
	shf.r.wrap.b32 	%r1461, %r1460, %r1459, 1;
	shf.r.wrap.b32 	%r1462, %r1459, %r1460, 1;
	mov.b64 	%rd1161, {%r1462, %r1461};
	xor.b64  	%rd1162, %rd1161, %rd1160;
	shf.r.wrap.b32 	%r1463, %r1460, %r1459, 8;
	shf.r.wrap.b32 	%r1464, %r1459, %r1460, 8;
	mov.b64 	%rd1163, {%r1464, %r1463};
	xor.b64  	%rd1164, %rd1162, %rd1163;
	add.s64 	%rd1165, %rd6819, %rd6831;
	add.s64 	%rd1166, %rd1165, %rd1159;
	add.s64 	%rd6831, %rd1166, %rd1164;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1465,%dummy}, %rd6830;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1466}, %rd6830;
	}
	shf.r.wrap.b32 	%r1467, %r1466, %r1465, 19;
	shf.r.wrap.b32 	%r1468, %r1465, %r1466, 19;
	mov.b64 	%rd1167, {%r1468, %r1467};
	shf.l.wrap.b32 	%r1469, %r1465, %r1466, 3;
	shf.l.wrap.b32 	%r1470, %r1466, %r1465, 3;
	mov.b64 	%rd1168, {%r1470, %r1469};
	shr.u64 	%rd1169, %rd6830, 6;
	xor.b64  	%rd1170, %rd1167, %rd1169;
	xor.b64  	%rd1171, %rd1170, %rd1168;
	shr.u64 	%rd1172, %rd6833, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1471,%dummy}, %rd6833;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1472}, %rd6833;
	}
	shf.r.wrap.b32 	%r1473, %r1472, %r1471, 1;
	shf.r.wrap.b32 	%r1474, %r1471, %r1472, 1;
	mov.b64 	%rd1173, {%r1474, %r1473};
	xor.b64  	%rd1174, %rd1173, %rd1172;
	shf.r.wrap.b32 	%r1475, %r1472, %r1471, 8;
	shf.r.wrap.b32 	%r1476, %r1471, %r1472, 8;
	mov.b64 	%rd1175, {%r1476, %r1475};
	xor.b64  	%rd1176, %rd1174, %rd1175;
	add.s64 	%rd1177, %rd6818, %rd6832;
	add.s64 	%rd1178, %rd1177, %rd1171;
	add.s64 	%rd6832, %rd1178, %rd1176;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1477,%dummy}, %rd6831;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1478}, %rd6831;
	}
	shf.r.wrap.b32 	%r1479, %r1478, %r1477, 19;
	shf.r.wrap.b32 	%r1480, %r1477, %r1478, 19;
	mov.b64 	%rd1179, {%r1480, %r1479};
	shf.l.wrap.b32 	%r1481, %r1477, %r1478, 3;
	shf.l.wrap.b32 	%r1482, %r1478, %r1477, 3;
	mov.b64 	%rd1180, {%r1482, %r1481};
	shr.u64 	%rd1181, %rd6831, 6;
	xor.b64  	%rd1182, %rd1179, %rd1181;
	xor.b64  	%rd1183, %rd1182, %rd1180;
	shr.u64 	%rd1184, %rd6834, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1483,%dummy}, %rd6834;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1484}, %rd6834;
	}
	shf.r.wrap.b32 	%r1485, %r1484, %r1483, 1;
	shf.r.wrap.b32 	%r1486, %r1483, %r1484, 1;
	mov.b64 	%rd1185, {%r1486, %r1485};
	xor.b64  	%rd1186, %rd1185, %rd1184;
	shf.r.wrap.b32 	%r1487, %r1484, %r1483, 8;
	shf.r.wrap.b32 	%r1488, %r1483, %r1484, 8;
	mov.b64 	%rd1187, {%r1488, %r1487};
	xor.b64  	%rd1188, %rd1186, %rd1187;
	add.s64 	%rd1189, %rd6817, %rd6833;
	add.s64 	%rd1190, %rd1189, %rd1183;
	add.s64 	%rd6833, %rd1190, %rd1188;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1489,%dummy}, %rd6832;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1490}, %rd6832;
	}
	shf.r.wrap.b32 	%r1491, %r1490, %r1489, 19;
	shf.r.wrap.b32 	%r1492, %r1489, %r1490, 19;
	mov.b64 	%rd1191, {%r1492, %r1491};
	shf.l.wrap.b32 	%r1493, %r1489, %r1490, 3;
	shf.l.wrap.b32 	%r1494, %r1490, %r1489, 3;
	mov.b64 	%rd1192, {%r1494, %r1493};
	shr.u64 	%rd1193, %rd6832, 6;
	xor.b64  	%rd1194, %rd1191, %rd1193;
	xor.b64  	%rd1195, %rd1194, %rd1192;
	shr.u64 	%rd1196, %rd6835, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1495,%dummy}, %rd6835;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1496}, %rd6835;
	}
	shf.r.wrap.b32 	%r1497, %r1496, %r1495, 1;
	shf.r.wrap.b32 	%r1498, %r1495, %r1496, 1;
	mov.b64 	%rd1197, {%r1498, %r1497};
	xor.b64  	%rd1198, %rd1197, %rd1196;
	shf.r.wrap.b32 	%r1499, %r1496, %r1495, 8;
	shf.r.wrap.b32 	%r1500, %r1495, %r1496, 8;
	mov.b64 	%rd1199, {%r1500, %r1499};
	xor.b64  	%rd1200, %rd1198, %rd1199;
	add.s64 	%rd1201, %rd6816, %rd6834;
	add.s64 	%rd1202, %rd1201, %rd1195;
	add.s64 	%rd6834, %rd1202, %rd1200;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1501,%dummy}, %rd6833;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1502}, %rd6833;
	}
	shf.r.wrap.b32 	%r1503, %r1502, %r1501, 19;
	shf.r.wrap.b32 	%r1504, %r1501, %r1502, 19;
	mov.b64 	%rd1203, {%r1504, %r1503};
	shf.l.wrap.b32 	%r1505, %r1501, %r1502, 3;
	shf.l.wrap.b32 	%r1506, %r1502, %r1501, 3;
	mov.b64 	%rd1204, {%r1506, %r1505};
	shr.u64 	%rd1205, %rd6833, 6;
	xor.b64  	%rd1206, %rd1203, %rd1205;
	xor.b64  	%rd1207, %rd1206, %rd1204;
	shr.u64 	%rd1208, %rd6836, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1507,%dummy}, %rd6836;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1508}, %rd6836;
	}
	shf.r.wrap.b32 	%r1509, %r1508, %r1507, 1;
	shf.r.wrap.b32 	%r1510, %r1507, %r1508, 1;
	mov.b64 	%rd1209, {%r1510, %r1509};
	xor.b64  	%rd1210, %rd1209, %rd1208;
	shf.r.wrap.b32 	%r1511, %r1508, %r1507, 8;
	shf.r.wrap.b32 	%r1512, %r1507, %r1508, 8;
	mov.b64 	%rd1211, {%r1512, %r1511};
	xor.b64  	%rd1212, %rd1210, %rd1211;
	add.s64 	%rd1213, %rd6815, %rd6835;
	add.s64 	%rd1214, %rd1213, %rd1207;
	add.s64 	%rd6835, %rd1214, %rd1212;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1513,%dummy}, %rd6834;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1514}, %rd6834;
	}
	shf.r.wrap.b32 	%r1515, %r1514, %r1513, 19;
	shf.r.wrap.b32 	%r1516, %r1513, %r1514, 19;
	mov.b64 	%rd1215, {%r1516, %r1515};
	shf.l.wrap.b32 	%r1517, %r1513, %r1514, 3;
	shf.l.wrap.b32 	%r1518, %r1514, %r1513, 3;
	mov.b64 	%rd1216, {%r1518, %r1517};
	shr.u64 	%rd1217, %rd6834, 6;
	xor.b64  	%rd1218, %rd1215, %rd1217;
	xor.b64  	%rd1219, %rd1218, %rd1216;
	shr.u64 	%rd1220, %rd6837, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1519,%dummy}, %rd6837;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1520}, %rd6837;
	}
	shf.r.wrap.b32 	%r1521, %r1520, %r1519, 1;
	shf.r.wrap.b32 	%r1522, %r1519, %r1520, 1;
	mov.b64 	%rd1221, {%r1522, %r1521};
	xor.b64  	%rd1222, %rd1221, %rd1220;
	shf.r.wrap.b32 	%r1523, %r1520, %r1519, 8;
	shf.r.wrap.b32 	%r1524, %r1519, %r1520, 8;
	mov.b64 	%rd1223, {%r1524, %r1523};
	xor.b64  	%rd1224, %rd1222, %rd1223;
	add.s64 	%rd1225, %rd6814, %rd6836;
	add.s64 	%rd1226, %rd1225, %rd1219;
	add.s64 	%rd6836, %rd1226, %rd1224;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1525,%dummy}, %rd6835;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1526}, %rd6835;
	}
	shf.r.wrap.b32 	%r1527, %r1526, %r1525, 19;
	shf.r.wrap.b32 	%r1528, %r1525, %r1526, 19;
	mov.b64 	%rd1227, {%r1528, %r1527};
	shf.l.wrap.b32 	%r1529, %r1525, %r1526, 3;
	shf.l.wrap.b32 	%r1530, %r1526, %r1525, 3;
	mov.b64 	%rd1228, {%r1530, %r1529};
	shr.u64 	%rd1229, %rd6835, 6;
	xor.b64  	%rd1230, %rd1227, %rd1229;
	xor.b64  	%rd1231, %rd1230, %rd1228;
	shr.u64 	%rd1232, %rd6821, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1531,%dummy}, %rd6821;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1532}, %rd6821;
	}
	shf.r.wrap.b32 	%r1533, %r1532, %r1531, 1;
	shf.r.wrap.b32 	%r1534, %r1531, %r1532, 1;
	mov.b64 	%rd1233, {%r1534, %r1533};
	xor.b64  	%rd1234, %rd1233, %rd1232;
	shf.r.wrap.b32 	%r1535, %r1532, %r1531, 8;
	shf.r.wrap.b32 	%r1536, %r1531, %r1532, 8;
	mov.b64 	%rd1235, {%r1536, %r1535};
	xor.b64  	%rd1236, %rd1234, %rd1235;
	add.s64 	%rd1237, %rd6830, %rd6837;
	add.s64 	%rd1238, %rd1237, %rd1231;
	add.s64 	%rd6837, %rd1238, %rd1236;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1537,%dummy}, %rd6836;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1538}, %rd6836;
	}
	shf.r.wrap.b32 	%r1539, %r1538, %r1537, 19;
	shf.r.wrap.b32 	%r1540, %r1537, %r1538, 19;
	mov.b64 	%rd1239, {%r1540, %r1539};
	shf.l.wrap.b32 	%r1541, %r1537, %r1538, 3;
	shf.l.wrap.b32 	%r1542, %r1538, %r1537, 3;
	mov.b64 	%rd1240, {%r1542, %r1541};
	shr.u64 	%rd1241, %rd6836, 6;
	xor.b64  	%rd1242, %rd1239, %rd1241;
	xor.b64  	%rd1243, %rd1242, %rd1240;
	shr.u64 	%rd1244, %rd6820, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1543,%dummy}, %rd6820;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1544}, %rd6820;
	}
	shf.r.wrap.b32 	%r1545, %r1544, %r1543, 1;
	shf.r.wrap.b32 	%r1546, %r1543, %r1544, 1;
	mov.b64 	%rd1245, {%r1546, %r1545};
	xor.b64  	%rd1246, %rd1245, %rd1244;
	shf.r.wrap.b32 	%r1547, %r1544, %r1543, 8;
	shf.r.wrap.b32 	%r1548, %r1543, %r1544, 8;
	mov.b64 	%rd1247, {%r1548, %r1547};
	xor.b64  	%rd1248, %rd1246, %rd1247;
	add.s64 	%rd1249, %rd6831, %rd6821;
	add.s64 	%rd1250, %rd1249, %rd1243;
	add.s64 	%rd6821, %rd1250, %rd1248;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1549,%dummy}, %rd6837;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1550}, %rd6837;
	}
	shf.r.wrap.b32 	%r1551, %r1550, %r1549, 19;
	shf.r.wrap.b32 	%r1552, %r1549, %r1550, 19;
	mov.b64 	%rd1251, {%r1552, %r1551};
	shf.l.wrap.b32 	%r1553, %r1549, %r1550, 3;
	shf.l.wrap.b32 	%r1554, %r1550, %r1549, 3;
	mov.b64 	%rd1252, {%r1554, %r1553};
	shr.u64 	%rd1253, %rd6837, 6;
	xor.b64  	%rd1254, %rd1251, %rd1253;
	xor.b64  	%rd1255, %rd1254, %rd1252;
	shr.u64 	%rd1256, %rd6819, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1555,%dummy}, %rd6819;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1556}, %rd6819;
	}
	shf.r.wrap.b32 	%r1557, %r1556, %r1555, 1;
	shf.r.wrap.b32 	%r1558, %r1555, %r1556, 1;
	mov.b64 	%rd1257, {%r1558, %r1557};
	xor.b64  	%rd1258, %rd1257, %rd1256;
	shf.r.wrap.b32 	%r1559, %r1556, %r1555, 8;
	shf.r.wrap.b32 	%r1560, %r1555, %r1556, 8;
	mov.b64 	%rd1259, {%r1560, %r1559};
	xor.b64  	%rd1260, %rd1258, %rd1259;
	add.s64 	%rd1261, %rd6832, %rd6820;
	add.s64 	%rd1262, %rd1261, %rd1255;
	add.s64 	%rd6820, %rd1262, %rd1260;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1561,%dummy}, %rd6821;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1562}, %rd6821;
	}
	shf.r.wrap.b32 	%r1563, %r1562, %r1561, 19;
	shf.r.wrap.b32 	%r1564, %r1561, %r1562, 19;
	mov.b64 	%rd1263, {%r1564, %r1563};
	shf.l.wrap.b32 	%r1565, %r1561, %r1562, 3;
	shf.l.wrap.b32 	%r1566, %r1562, %r1561, 3;
	mov.b64 	%rd1264, {%r1566, %r1565};
	shr.u64 	%rd1265, %rd6821, 6;
	xor.b64  	%rd1266, %rd1263, %rd1265;
	xor.b64  	%rd1267, %rd1266, %rd1264;
	shr.u64 	%rd1268, %rd6818, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1567,%dummy}, %rd6818;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1568}, %rd6818;
	}
	shf.r.wrap.b32 	%r1569, %r1568, %r1567, 1;
	shf.r.wrap.b32 	%r1570, %r1567, %r1568, 1;
	mov.b64 	%rd1269, {%r1570, %r1569};
	xor.b64  	%rd1270, %rd1269, %rd1268;
	shf.r.wrap.b32 	%r1571, %r1568, %r1567, 8;
	shf.r.wrap.b32 	%r1572, %r1567, %r1568, 8;
	mov.b64 	%rd1271, {%r1572, %r1571};
	xor.b64  	%rd1272, %rd1270, %rd1271;
	add.s64 	%rd1273, %rd6833, %rd6819;
	add.s64 	%rd1274, %rd1273, %rd1267;
	add.s64 	%rd6819, %rd1274, %rd1272;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1573,%dummy}, %rd6820;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1574}, %rd6820;
	}
	shf.r.wrap.b32 	%r1575, %r1574, %r1573, 19;
	shf.r.wrap.b32 	%r1576, %r1573, %r1574, 19;
	mov.b64 	%rd1275, {%r1576, %r1575};
	shf.l.wrap.b32 	%r1577, %r1573, %r1574, 3;
	shf.l.wrap.b32 	%r1578, %r1574, %r1573, 3;
	mov.b64 	%rd1276, {%r1578, %r1577};
	shr.u64 	%rd1277, %rd6820, 6;
	xor.b64  	%rd1278, %rd1275, %rd1277;
	xor.b64  	%rd1279, %rd1278, %rd1276;
	shr.u64 	%rd1280, %rd6817, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1579,%dummy}, %rd6817;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1580}, %rd6817;
	}
	shf.r.wrap.b32 	%r1581, %r1580, %r1579, 1;
	shf.r.wrap.b32 	%r1582, %r1579, %r1580, 1;
	mov.b64 	%rd1281, {%r1582, %r1581};
	xor.b64  	%rd1282, %rd1281, %rd1280;
	shf.r.wrap.b32 	%r1583, %r1580, %r1579, 8;
	shf.r.wrap.b32 	%r1584, %r1579, %r1580, 8;
	mov.b64 	%rd1283, {%r1584, %r1583};
	xor.b64  	%rd1284, %rd1282, %rd1283;
	add.s64 	%rd1285, %rd6834, %rd6818;
	add.s64 	%rd1286, %rd1285, %rd1279;
	add.s64 	%rd6818, %rd1286, %rd1284;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1585,%dummy}, %rd6819;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1586}, %rd6819;
	}
	shf.r.wrap.b32 	%r1587, %r1586, %r1585, 19;
	shf.r.wrap.b32 	%r1588, %r1585, %r1586, 19;
	mov.b64 	%rd1287, {%r1588, %r1587};
	shf.l.wrap.b32 	%r1589, %r1585, %r1586, 3;
	shf.l.wrap.b32 	%r1590, %r1586, %r1585, 3;
	mov.b64 	%rd1288, {%r1590, %r1589};
	shr.u64 	%rd1289, %rd6819, 6;
	xor.b64  	%rd1290, %rd1287, %rd1289;
	xor.b64  	%rd1291, %rd1290, %rd1288;
	shr.u64 	%rd1292, %rd6816, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1591,%dummy}, %rd6816;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1592}, %rd6816;
	}
	shf.r.wrap.b32 	%r1593, %r1592, %r1591, 1;
	shf.r.wrap.b32 	%r1594, %r1591, %r1592, 1;
	mov.b64 	%rd1293, {%r1594, %r1593};
	xor.b64  	%rd1294, %rd1293, %rd1292;
	shf.r.wrap.b32 	%r1595, %r1592, %r1591, 8;
	shf.r.wrap.b32 	%r1596, %r1591, %r1592, 8;
	mov.b64 	%rd1295, {%r1596, %r1595};
	xor.b64  	%rd1296, %rd1294, %rd1295;
	add.s64 	%rd1297, %rd6835, %rd6817;
	add.s64 	%rd1298, %rd1297, %rd1291;
	add.s64 	%rd6817, %rd1298, %rd1296;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1597,%dummy}, %rd6818;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1598}, %rd6818;
	}
	shf.r.wrap.b32 	%r1599, %r1598, %r1597, 19;
	shf.r.wrap.b32 	%r1600, %r1597, %r1598, 19;
	mov.b64 	%rd1299, {%r1600, %r1599};
	shf.l.wrap.b32 	%r1601, %r1597, %r1598, 3;
	shf.l.wrap.b32 	%r1602, %r1598, %r1597, 3;
	mov.b64 	%rd1300, {%r1602, %r1601};
	shr.u64 	%rd1301, %rd6818, 6;
	xor.b64  	%rd1302, %rd1299, %rd1301;
	xor.b64  	%rd1303, %rd1302, %rd1300;
	shr.u64 	%rd1304, %rd6815, 7;
	shf.r.wrap.b32 	%r1603, %r1442, %r1441, 1;
	shf.r.wrap.b32 	%r1604, %r1441, %r1442, 1;
	mov.b64 	%rd1305, {%r1604, %r1603};
	xor.b64  	%rd1306, %rd1305, %rd1304;
	shf.r.wrap.b32 	%r1605, %r1442, %r1441, 8;
	shf.r.wrap.b32 	%r1606, %r1441, %r1442, 8;
	mov.b64 	%rd1307, {%r1606, %r1605};
	xor.b64  	%rd1308, %rd1306, %rd1307;
	add.s64 	%rd1309, %rd6836, %rd6816;
	add.s64 	%rd1310, %rd1309, %rd1303;
	add.s64 	%rd6816, %rd1310, %rd1308;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1607,%dummy}, %rd6817;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1608}, %rd6817;
	}
	shf.r.wrap.b32 	%r1609, %r1608, %r1607, 19;
	shf.r.wrap.b32 	%r1610, %r1607, %r1608, 19;
	mov.b64 	%rd1311, {%r1610, %r1609};
	shf.l.wrap.b32 	%r1611, %r1607, %r1608, 3;
	shf.l.wrap.b32 	%r1612, %r1608, %r1607, 3;
	mov.b64 	%rd1312, {%r1612, %r1611};
	shr.u64 	%rd1313, %rd6817, 6;
	xor.b64  	%rd1314, %rd1311, %rd1313;
	xor.b64  	%rd1315, %rd1314, %rd1312;
	shr.u64 	%rd1316, %rd6814, 7;
	shf.r.wrap.b32 	%r1613, %r1454, %r1453, 1;
	shf.r.wrap.b32 	%r1614, %r1453, %r1454, 1;
	mov.b64 	%rd1317, {%r1614, %r1613};
	xor.b64  	%rd1318, %rd1317, %rd1316;
	shf.r.wrap.b32 	%r1615, %r1454, %r1453, 8;
	shf.r.wrap.b32 	%r1616, %r1453, %r1454, 8;
	mov.b64 	%rd1319, {%r1616, %r1615};
	xor.b64  	%rd1320, %rd1318, %rd1319;
	add.s64 	%rd1321, %rd6837, %rd6815;
	add.s64 	%rd1322, %rd1321, %rd1315;
	add.s64 	%rd6815, %rd1322, %rd1320;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1617,%dummy}, %rd6816;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1618}, %rd6816;
	}
	shf.r.wrap.b32 	%r1619, %r1618, %r1617, 19;
	shf.r.wrap.b32 	%r1620, %r1617, %r1618, 19;
	mov.b64 	%rd1323, {%r1620, %r1619};
	shf.l.wrap.b32 	%r1621, %r1617, %r1618, 3;
	shf.l.wrap.b32 	%r1622, %r1618, %r1617, 3;
	mov.b64 	%rd1324, {%r1622, %r1621};
	shr.u64 	%rd1325, %rd6816, 6;
	xor.b64  	%rd1326, %rd1323, %rd1325;
	xor.b64  	%rd1327, %rd1326, %rd1324;
	shf.r.wrap.b32 	%r1623, %r1466, %r1465, 1;
	shf.r.wrap.b32 	%r1624, %r1465, %r1466, 1;
	mov.b64 	%rd1328, {%r1624, %r1623};
	shf.r.wrap.b32 	%r1625, %r1466, %r1465, 8;
	shf.r.wrap.b32 	%r1626, %r1465, %r1466, 8;
	mov.b64 	%rd1329, {%r1626, %r1625};
	shr.u64 	%rd1330, %rd6830, 7;
	xor.b64  	%rd1331, %rd1328, %rd1330;
	xor.b64  	%rd1332, %rd1331, %rd1329;
	add.s64 	%rd1333, %rd6821, %rd6814;
	add.s64 	%rd1334, %rd1333, %rd1327;
	add.s64 	%rd6814, %rd1334, %rd1332;
	mul.wide.s32 	%rd1335, %r11771, 8;
	mov.u64 	%rd1336, k_sha512;
	add.s64 	%rd1337, %rd1336, %rd1335;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1627,%dummy}, %rd6826;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1628}, %rd6826;
	}
	shf.r.wrap.b32 	%r1629, %r1628, %r1627, 18;
	shf.r.wrap.b32 	%r1630, %r1627, %r1628, 18;
	mov.b64 	%rd1338, {%r1630, %r1629};
	shf.r.wrap.b32 	%r1631, %r1628, %r1627, 14;
	shf.r.wrap.b32 	%r1632, %r1627, %r1628, 14;
	mov.b64 	%rd1339, {%r1632, %r1631};
	xor.b64  	%rd1340, %rd1338, %rd1339;
	shf.l.wrap.b32 	%r1633, %r1627, %r1628, 23;
	shf.l.wrap.b32 	%r1634, %r1628, %r1627, 23;
	mov.b64 	%rd1341, {%r1634, %r1633};
	xor.b64  	%rd1342, %rd1340, %rd1341;
	xor.b64  	%rd1343, %rd6827, %rd6828;
	and.b64  	%rd1344, %rd1343, %rd6826;
	xor.b64  	%rd1345, %rd1344, %rd6828;
	add.s64 	%rd1346, %rd1345, %rd6829;
	add.s64 	%rd1347, %rd1346, %rd6830;
	ld.const.u64 	%rd1348, [%rd1337];
	add.s64 	%rd1349, %rd1347, %rd1348;
	add.s64 	%rd1350, %rd1349, %rd1342;
	add.s64 	%rd1351, %rd1350, %rd6825;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1635}, %rd6822;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1636,%dummy}, %rd6822;
	}
	shf.l.wrap.b32 	%r1637, %r1636, %r1635, 30;
	shf.l.wrap.b32 	%r1638, %r1635, %r1636, 30;
	mov.b64 	%rd1352, {%r1638, %r1637};
	shf.r.wrap.b32 	%r1639, %r1635, %r1636, 28;
	shf.r.wrap.b32 	%r1640, %r1636, %r1635, 28;
	mov.b64 	%rd1353, {%r1640, %r1639};
	xor.b64  	%rd1354, %rd1352, %rd1353;
	shf.l.wrap.b32 	%r1641, %r1636, %r1635, 25;
	shf.l.wrap.b32 	%r1642, %r1635, %r1636, 25;
	mov.b64 	%rd1355, {%r1642, %r1641};
	xor.b64  	%rd1356, %rd1354, %rd1355;
	xor.b64  	%rd1357, %rd6822, %rd6823;
	xor.b64  	%rd1358, %rd6822, %rd6824;
	and.b64  	%rd1359, %rd1357, %rd1358;
	xor.b64  	%rd1360, %rd1359, %rd6822;
	add.s64 	%rd1361, %rd1350, %rd1360;
	add.s64 	%rd1362, %rd1361, %rd1356;
	add.s32 	%r1643, %r11771, 1;
	mul.wide.s32 	%rd1363, %r1643, 8;
	add.s64 	%rd1364, %rd1336, %rd1363;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1644,%dummy}, %rd1351;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1645}, %rd1351;
	}
	shf.r.wrap.b32 	%r1646, %r1645, %r1644, 14;
	shf.r.wrap.b32 	%r1647, %r1644, %r1645, 14;
	mov.b64 	%rd1365, {%r1647, %r1646};
	shf.r.wrap.b32 	%r1648, %r1645, %r1644, 18;
	shf.r.wrap.b32 	%r1649, %r1644, %r1645, 18;
	mov.b64 	%rd1366, {%r1649, %r1648};
	xor.b64  	%rd1367, %rd1366, %rd1365;
	shf.l.wrap.b32 	%r1650, %r1644, %r1645, 23;
	shf.l.wrap.b32 	%r1651, %r1645, %r1644, 23;
	mov.b64 	%rd1368, {%r1651, %r1650};
	xor.b64  	%rd1369, %rd1367, %rd1368;
	xor.b64  	%rd1370, %rd6826, %rd6827;
	and.b64  	%rd1371, %rd1351, %rd1370;
	xor.b64  	%rd1372, %rd1371, %rd6827;
	add.s64 	%rd1373, %rd6831, %rd6828;
	ld.const.u64 	%rd1374, [%rd1364];
	add.s64 	%rd1375, %rd1373, %rd1374;
	add.s64 	%rd1376, %rd1375, %rd1372;
	add.s64 	%rd1377, %rd1376, %rd1369;
	add.s64 	%rd1378, %rd1377, %rd6824;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1652,%dummy}, %rd1362;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1653}, %rd1362;
	}
	shf.r.wrap.b32 	%r1654, %r1653, %r1652, 28;
	shf.r.wrap.b32 	%r1655, %r1652, %r1653, 28;
	mov.b64 	%rd1379, {%r1655, %r1654};
	shf.l.wrap.b32 	%r1656, %r1652, %r1653, 30;
	shf.l.wrap.b32 	%r1657, %r1653, %r1652, 30;
	mov.b64 	%rd1380, {%r1657, %r1656};
	xor.b64  	%rd1381, %rd1380, %rd1379;
	shf.l.wrap.b32 	%r1658, %r1652, %r1653, 25;
	shf.l.wrap.b32 	%r1659, %r1653, %r1652, 25;
	mov.b64 	%rd1382, {%r1659, %r1658};
	xor.b64  	%rd1383, %rd1381, %rd1382;
	xor.b64  	%rd1384, %rd1362, %rd6823;
	xor.b64  	%rd1385, %rd1362, %rd6822;
	and.b64  	%rd1386, %rd1385, %rd1384;
	xor.b64  	%rd1387, %rd1386, %rd1362;
	add.s64 	%rd1388, %rd1377, %rd1387;
	add.s64 	%rd1389, %rd1388, %rd1383;
	add.s32 	%r1660, %r11771, 2;
	mul.wide.s32 	%rd1390, %r1660, 8;
	add.s64 	%rd1391, %rd1336, %rd1390;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1661,%dummy}, %rd1378;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1662}, %rd1378;
	}
	shf.r.wrap.b32 	%r1663, %r1662, %r1661, 14;
	shf.r.wrap.b32 	%r1664, %r1661, %r1662, 14;
	mov.b64 	%rd1392, {%r1664, %r1663};
	shf.r.wrap.b32 	%r1665, %r1662, %r1661, 18;
	shf.r.wrap.b32 	%r1666, %r1661, %r1662, 18;
	mov.b64 	%rd1393, {%r1666, %r1665};
	xor.b64  	%rd1394, %rd1393, %rd1392;
	shf.l.wrap.b32 	%r1667, %r1661, %r1662, 23;
	shf.l.wrap.b32 	%r1668, %r1662, %r1661, 23;
	mov.b64 	%rd1395, {%r1668, %r1667};
	xor.b64  	%rd1396, %rd1394, %rd1395;
	xor.b64  	%rd1397, %rd1351, %rd6826;
	and.b64  	%rd1398, %rd1378, %rd1397;
	xor.b64  	%rd1399, %rd1398, %rd6826;
	add.s64 	%rd1400, %rd6832, %rd6827;
	ld.const.u64 	%rd1401, [%rd1391];
	add.s64 	%rd1402, %rd1400, %rd1401;
	add.s64 	%rd1403, %rd1402, %rd1399;
	add.s64 	%rd1404, %rd1403, %rd1396;
	add.s64 	%rd1405, %rd1404, %rd6823;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1669,%dummy}, %rd1389;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1670}, %rd1389;
	}
	shf.r.wrap.b32 	%r1671, %r1670, %r1669, 28;
	shf.r.wrap.b32 	%r1672, %r1669, %r1670, 28;
	mov.b64 	%rd1406, {%r1672, %r1671};
	shf.l.wrap.b32 	%r1673, %r1669, %r1670, 30;
	shf.l.wrap.b32 	%r1674, %r1670, %r1669, 30;
	mov.b64 	%rd1407, {%r1674, %r1673};
	xor.b64  	%rd1408, %rd1407, %rd1406;
	shf.l.wrap.b32 	%r1675, %r1669, %r1670, 25;
	shf.l.wrap.b32 	%r1676, %r1670, %r1669, 25;
	mov.b64 	%rd1409, {%r1676, %r1675};
	xor.b64  	%rd1410, %rd1408, %rd1409;
	xor.b64  	%rd1411, %rd1389, %rd6822;
	xor.b64  	%rd1412, %rd1389, %rd1362;
	and.b64  	%rd1413, %rd1412, %rd1411;
	xor.b64  	%rd1414, %rd1413, %rd1389;
	add.s64 	%rd1415, %rd1404, %rd1414;
	add.s64 	%rd1416, %rd1415, %rd1410;
	add.s32 	%r1677, %r11771, 3;
	mul.wide.s32 	%rd1417, %r1677, 8;
	add.s64 	%rd1418, %rd1336, %rd1417;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1678,%dummy}, %rd1405;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1679}, %rd1405;
	}
	shf.r.wrap.b32 	%r1680, %r1679, %r1678, 14;
	shf.r.wrap.b32 	%r1681, %r1678, %r1679, 14;
	mov.b64 	%rd1419, {%r1681, %r1680};
	shf.r.wrap.b32 	%r1682, %r1679, %r1678, 18;
	shf.r.wrap.b32 	%r1683, %r1678, %r1679, 18;
	mov.b64 	%rd1420, {%r1683, %r1682};
	xor.b64  	%rd1421, %rd1420, %rd1419;
	shf.l.wrap.b32 	%r1684, %r1678, %r1679, 23;
	shf.l.wrap.b32 	%r1685, %r1679, %r1678, 23;
	mov.b64 	%rd1422, {%r1685, %r1684};
	xor.b64  	%rd1423, %rd1421, %rd1422;
	xor.b64  	%rd1424, %rd1378, %rd1351;
	and.b64  	%rd1425, %rd1405, %rd1424;
	xor.b64  	%rd1426, %rd1425, %rd1351;
	add.s64 	%rd1427, %rd6833, %rd6826;
	ld.const.u64 	%rd1428, [%rd1418];
	add.s64 	%rd1429, %rd1427, %rd1428;
	add.s64 	%rd1430, %rd1429, %rd1426;
	add.s64 	%rd1431, %rd1430, %rd1423;
	add.s64 	%rd1432, %rd1431, %rd6822;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1686,%dummy}, %rd1416;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1687}, %rd1416;
	}
	shf.r.wrap.b32 	%r1688, %r1687, %r1686, 28;
	shf.r.wrap.b32 	%r1689, %r1686, %r1687, 28;
	mov.b64 	%rd1433, {%r1689, %r1688};
	shf.l.wrap.b32 	%r1690, %r1686, %r1687, 30;
	shf.l.wrap.b32 	%r1691, %r1687, %r1686, 30;
	mov.b64 	%rd1434, {%r1691, %r1690};
	xor.b64  	%rd1435, %rd1434, %rd1433;
	shf.l.wrap.b32 	%r1692, %r1686, %r1687, 25;
	shf.l.wrap.b32 	%r1693, %r1687, %r1686, 25;
	mov.b64 	%rd1436, {%r1693, %r1692};
	xor.b64  	%rd1437, %rd1435, %rd1436;
	xor.b64  	%rd1438, %rd1416, %rd1362;
	xor.b64  	%rd1439, %rd1416, %rd1389;
	and.b64  	%rd1440, %rd1439, %rd1438;
	xor.b64  	%rd1441, %rd1440, %rd1416;
	add.s64 	%rd1442, %rd1431, %rd1441;
	add.s64 	%rd1443, %rd1442, %rd1437;
	add.s32 	%r1694, %r11771, 4;
	mul.wide.s32 	%rd1444, %r1694, 8;
	add.s64 	%rd1445, %rd1336, %rd1444;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1695,%dummy}, %rd1432;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1696}, %rd1432;
	}
	shf.r.wrap.b32 	%r1697, %r1696, %r1695, 14;
	shf.r.wrap.b32 	%r1698, %r1695, %r1696, 14;
	mov.b64 	%rd1446, {%r1698, %r1697};
	shf.r.wrap.b32 	%r1699, %r1696, %r1695, 18;
	shf.r.wrap.b32 	%r1700, %r1695, %r1696, 18;
	mov.b64 	%rd1447, {%r1700, %r1699};
	xor.b64  	%rd1448, %rd1447, %rd1446;
	shf.l.wrap.b32 	%r1701, %r1695, %r1696, 23;
	shf.l.wrap.b32 	%r1702, %r1696, %r1695, 23;
	mov.b64 	%rd1449, {%r1702, %r1701};
	xor.b64  	%rd1450, %rd1448, %rd1449;
	xor.b64  	%rd1451, %rd1405, %rd1378;
	and.b64  	%rd1452, %rd1432, %rd1451;
	xor.b64  	%rd1453, %rd1452, %rd1378;
	add.s64 	%rd1454, %rd1351, %rd6834;
	ld.const.u64 	%rd1455, [%rd1445];
	add.s64 	%rd1456, %rd1454, %rd1455;
	add.s64 	%rd1457, %rd1456, %rd1453;
	add.s64 	%rd1458, %rd1457, %rd1450;
	add.s64 	%rd1459, %rd1458, %rd1362;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1703,%dummy}, %rd1443;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1704}, %rd1443;
	}
	shf.r.wrap.b32 	%r1705, %r1704, %r1703, 28;
	shf.r.wrap.b32 	%r1706, %r1703, %r1704, 28;
	mov.b64 	%rd1460, {%r1706, %r1705};
	shf.l.wrap.b32 	%r1707, %r1703, %r1704, 30;
	shf.l.wrap.b32 	%r1708, %r1704, %r1703, 30;
	mov.b64 	%rd1461, {%r1708, %r1707};
	xor.b64  	%rd1462, %rd1461, %rd1460;
	shf.l.wrap.b32 	%r1709, %r1703, %r1704, 25;
	shf.l.wrap.b32 	%r1710, %r1704, %r1703, 25;
	mov.b64 	%rd1463, {%r1710, %r1709};
	xor.b64  	%rd1464, %rd1462, %rd1463;
	xor.b64  	%rd1465, %rd1443, %rd1389;
	xor.b64  	%rd1466, %rd1443, %rd1416;
	and.b64  	%rd1467, %rd1466, %rd1465;
	xor.b64  	%rd1468, %rd1467, %rd1443;
	add.s64 	%rd1469, %rd1458, %rd1468;
	add.s64 	%rd1470, %rd1469, %rd1464;
	add.s32 	%r1711, %r11771, 5;
	mul.wide.s32 	%rd1471, %r1711, 8;
	add.s64 	%rd1472, %rd1336, %rd1471;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1712,%dummy}, %rd1459;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1713}, %rd1459;
	}
	shf.r.wrap.b32 	%r1714, %r1713, %r1712, 14;
	shf.r.wrap.b32 	%r1715, %r1712, %r1713, 14;
	mov.b64 	%rd1473, {%r1715, %r1714};
	shf.r.wrap.b32 	%r1716, %r1713, %r1712, 18;
	shf.r.wrap.b32 	%r1717, %r1712, %r1713, 18;
	mov.b64 	%rd1474, {%r1717, %r1716};
	xor.b64  	%rd1475, %rd1474, %rd1473;
	shf.l.wrap.b32 	%r1718, %r1712, %r1713, 23;
	shf.l.wrap.b32 	%r1719, %r1713, %r1712, 23;
	mov.b64 	%rd1476, {%r1719, %r1718};
	xor.b64  	%rd1477, %rd1475, %rd1476;
	xor.b64  	%rd1478, %rd1432, %rd1405;
	and.b64  	%rd1479, %rd1459, %rd1478;
	xor.b64  	%rd1480, %rd1479, %rd1405;
	add.s64 	%rd1481, %rd1378, %rd6835;
	ld.const.u64 	%rd1482, [%rd1472];
	add.s64 	%rd1483, %rd1481, %rd1482;
	add.s64 	%rd1484, %rd1483, %rd1480;
	add.s64 	%rd1485, %rd1484, %rd1477;
	add.s64 	%rd1486, %rd1485, %rd1389;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1720,%dummy}, %rd1470;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1721}, %rd1470;
	}
	shf.r.wrap.b32 	%r1722, %r1721, %r1720, 28;
	shf.r.wrap.b32 	%r1723, %r1720, %r1721, 28;
	mov.b64 	%rd1487, {%r1723, %r1722};
	shf.l.wrap.b32 	%r1724, %r1720, %r1721, 30;
	shf.l.wrap.b32 	%r1725, %r1721, %r1720, 30;
	mov.b64 	%rd1488, {%r1725, %r1724};
	xor.b64  	%rd1489, %rd1488, %rd1487;
	shf.l.wrap.b32 	%r1726, %r1720, %r1721, 25;
	shf.l.wrap.b32 	%r1727, %r1721, %r1720, 25;
	mov.b64 	%rd1490, {%r1727, %r1726};
	xor.b64  	%rd1491, %rd1489, %rd1490;
	xor.b64  	%rd1492, %rd1470, %rd1416;
	xor.b64  	%rd1493, %rd1470, %rd1443;
	and.b64  	%rd1494, %rd1493, %rd1492;
	xor.b64  	%rd1495, %rd1494, %rd1470;
	add.s64 	%rd1496, %rd1485, %rd1495;
	add.s64 	%rd1497, %rd1496, %rd1491;
	add.s32 	%r1728, %r11771, 6;
	mul.wide.s32 	%rd1498, %r1728, 8;
	add.s64 	%rd1499, %rd1336, %rd1498;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1729,%dummy}, %rd1486;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1730}, %rd1486;
	}
	shf.r.wrap.b32 	%r1731, %r1730, %r1729, 14;
	shf.r.wrap.b32 	%r1732, %r1729, %r1730, 14;
	mov.b64 	%rd1500, {%r1732, %r1731};
	shf.r.wrap.b32 	%r1733, %r1730, %r1729, 18;
	shf.r.wrap.b32 	%r1734, %r1729, %r1730, 18;
	mov.b64 	%rd1501, {%r1734, %r1733};
	xor.b64  	%rd1502, %rd1501, %rd1500;
	shf.l.wrap.b32 	%r1735, %r1729, %r1730, 23;
	shf.l.wrap.b32 	%r1736, %r1730, %r1729, 23;
	mov.b64 	%rd1503, {%r1736, %r1735};
	xor.b64  	%rd1504, %rd1502, %rd1503;
	xor.b64  	%rd1505, %rd1459, %rd1432;
	and.b64  	%rd1506, %rd1486, %rd1505;
	xor.b64  	%rd1507, %rd1506, %rd1432;
	add.s64 	%rd1508, %rd1405, %rd6836;
	ld.const.u64 	%rd1509, [%rd1499];
	add.s64 	%rd1510, %rd1508, %rd1509;
	add.s64 	%rd1511, %rd1510, %rd1507;
	add.s64 	%rd1512, %rd1511, %rd1504;
	add.s64 	%rd1513, %rd1512, %rd1416;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1737,%dummy}, %rd1497;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1738}, %rd1497;
	}
	shf.r.wrap.b32 	%r1739, %r1738, %r1737, 28;
	shf.r.wrap.b32 	%r1740, %r1737, %r1738, 28;
	mov.b64 	%rd1514, {%r1740, %r1739};
	shf.l.wrap.b32 	%r1741, %r1737, %r1738, 30;
	shf.l.wrap.b32 	%r1742, %r1738, %r1737, 30;
	mov.b64 	%rd1515, {%r1742, %r1741};
	xor.b64  	%rd1516, %rd1515, %rd1514;
	shf.l.wrap.b32 	%r1743, %r1737, %r1738, 25;
	shf.l.wrap.b32 	%r1744, %r1738, %r1737, 25;
	mov.b64 	%rd1517, {%r1744, %r1743};
	xor.b64  	%rd1518, %rd1516, %rd1517;
	xor.b64  	%rd1519, %rd1497, %rd1443;
	xor.b64  	%rd1520, %rd1497, %rd1470;
	and.b64  	%rd1521, %rd1520, %rd1519;
	xor.b64  	%rd1522, %rd1521, %rd1497;
	add.s64 	%rd1523, %rd1512, %rd1522;
	add.s64 	%rd1524, %rd1523, %rd1518;
	add.s32 	%r1745, %r11771, 7;
	mul.wide.s32 	%rd1525, %r1745, 8;
	add.s64 	%rd1526, %rd1336, %rd1525;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1746,%dummy}, %rd1513;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1747}, %rd1513;
	}
	shf.r.wrap.b32 	%r1748, %r1747, %r1746, 14;
	shf.r.wrap.b32 	%r1749, %r1746, %r1747, 14;
	mov.b64 	%rd1527, {%r1749, %r1748};
	shf.r.wrap.b32 	%r1750, %r1747, %r1746, 18;
	shf.r.wrap.b32 	%r1751, %r1746, %r1747, 18;
	mov.b64 	%rd1528, {%r1751, %r1750};
	xor.b64  	%rd1529, %rd1528, %rd1527;
	shf.l.wrap.b32 	%r1752, %r1746, %r1747, 23;
	shf.l.wrap.b32 	%r1753, %r1747, %r1746, 23;
	mov.b64 	%rd1530, {%r1753, %r1752};
	xor.b64  	%rd1531, %rd1529, %rd1530;
	xor.b64  	%rd1532, %rd1486, %rd1459;
	and.b64  	%rd1533, %rd1513, %rd1532;
	xor.b64  	%rd1534, %rd1533, %rd1459;
	add.s64 	%rd1535, %rd1432, %rd6837;
	ld.const.u64 	%rd1536, [%rd1526];
	add.s64 	%rd1537, %rd1535, %rd1536;
	add.s64 	%rd1538, %rd1537, %rd1534;
	add.s64 	%rd1539, %rd1538, %rd1531;
	add.s64 	%rd1540, %rd1539, %rd1443;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1754,%dummy}, %rd1524;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1755}, %rd1524;
	}
	shf.r.wrap.b32 	%r1756, %r1755, %r1754, 28;
	shf.r.wrap.b32 	%r1757, %r1754, %r1755, 28;
	mov.b64 	%rd1541, {%r1757, %r1756};
	shf.l.wrap.b32 	%r1758, %r1754, %r1755, 30;
	shf.l.wrap.b32 	%r1759, %r1755, %r1754, 30;
	mov.b64 	%rd1542, {%r1759, %r1758};
	xor.b64  	%rd1543, %rd1542, %rd1541;
	shf.l.wrap.b32 	%r1760, %r1754, %r1755, 25;
	shf.l.wrap.b32 	%r1761, %r1755, %r1754, 25;
	mov.b64 	%rd1544, {%r1761, %r1760};
	xor.b64  	%rd1545, %rd1543, %rd1544;
	xor.b64  	%rd1546, %rd1524, %rd1470;
	xor.b64  	%rd1547, %rd1524, %rd1497;
	and.b64  	%rd1548, %rd1547, %rd1546;
	xor.b64  	%rd1549, %rd1548, %rd1524;
	add.s64 	%rd1550, %rd1539, %rd1549;
	add.s64 	%rd1551, %rd1550, %rd1545;
	add.s32 	%r1762, %r11771, 8;
	mul.wide.s32 	%rd1552, %r1762, 8;
	add.s64 	%rd1553, %rd1336, %rd1552;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1763,%dummy}, %rd1540;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1764}, %rd1540;
	}
	shf.r.wrap.b32 	%r1765, %r1764, %r1763, 14;
	shf.r.wrap.b32 	%r1766, %r1763, %r1764, 14;
	mov.b64 	%rd1554, {%r1766, %r1765};
	shf.r.wrap.b32 	%r1767, %r1764, %r1763, 18;
	shf.r.wrap.b32 	%r1768, %r1763, %r1764, 18;
	mov.b64 	%rd1555, {%r1768, %r1767};
	xor.b64  	%rd1556, %rd1555, %rd1554;
	shf.l.wrap.b32 	%r1769, %r1763, %r1764, 23;
	shf.l.wrap.b32 	%r1770, %r1764, %r1763, 23;
	mov.b64 	%rd1557, {%r1770, %r1769};
	xor.b64  	%rd1558, %rd1556, %rd1557;
	xor.b64  	%rd1559, %rd1513, %rd1486;
	and.b64  	%rd1560, %rd1540, %rd1559;
	xor.b64  	%rd1561, %rd1560, %rd1486;
	add.s64 	%rd1562, %rd1459, %rd6821;
	ld.const.u64 	%rd1563, [%rd1553];
	add.s64 	%rd1564, %rd1562, %rd1563;
	add.s64 	%rd1565, %rd1564, %rd1561;
	add.s64 	%rd1566, %rd1565, %rd1558;
	add.s64 	%rd1567, %rd1566, %rd1470;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1771,%dummy}, %rd1551;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1772}, %rd1551;
	}
	shf.r.wrap.b32 	%r1773, %r1772, %r1771, 28;
	shf.r.wrap.b32 	%r1774, %r1771, %r1772, 28;
	mov.b64 	%rd1568, {%r1774, %r1773};
	shf.l.wrap.b32 	%r1775, %r1771, %r1772, 30;
	shf.l.wrap.b32 	%r1776, %r1772, %r1771, 30;
	mov.b64 	%rd1569, {%r1776, %r1775};
	xor.b64  	%rd1570, %rd1569, %rd1568;
	shf.l.wrap.b32 	%r1777, %r1771, %r1772, 25;
	shf.l.wrap.b32 	%r1778, %r1772, %r1771, 25;
	mov.b64 	%rd1571, {%r1778, %r1777};
	xor.b64  	%rd1572, %rd1570, %rd1571;
	xor.b64  	%rd1573, %rd1551, %rd1497;
	xor.b64  	%rd1574, %rd1551, %rd1524;
	and.b64  	%rd1575, %rd1574, %rd1573;
	xor.b64  	%rd1576, %rd1575, %rd1551;
	add.s64 	%rd1577, %rd1566, %rd1576;
	add.s64 	%rd1578, %rd1577, %rd1572;
	add.s32 	%r1779, %r11771, 9;
	mul.wide.s32 	%rd1579, %r1779, 8;
	add.s64 	%rd1580, %rd1336, %rd1579;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1780,%dummy}, %rd1567;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1781}, %rd1567;
	}
	shf.r.wrap.b32 	%r1782, %r1781, %r1780, 14;
	shf.r.wrap.b32 	%r1783, %r1780, %r1781, 14;
	mov.b64 	%rd1581, {%r1783, %r1782};
	shf.r.wrap.b32 	%r1784, %r1781, %r1780, 18;
	shf.r.wrap.b32 	%r1785, %r1780, %r1781, 18;
	mov.b64 	%rd1582, {%r1785, %r1784};
	xor.b64  	%rd1583, %rd1582, %rd1581;
	shf.l.wrap.b32 	%r1786, %r1780, %r1781, 23;
	shf.l.wrap.b32 	%r1787, %r1781, %r1780, 23;
	mov.b64 	%rd1584, {%r1787, %r1786};
	xor.b64  	%rd1585, %rd1583, %rd1584;
	xor.b64  	%rd1586, %rd1540, %rd1513;
	and.b64  	%rd1587, %rd1567, %rd1586;
	xor.b64  	%rd1588, %rd1587, %rd1513;
	add.s64 	%rd1589, %rd1486, %rd6820;
	ld.const.u64 	%rd1590, [%rd1580];
	add.s64 	%rd1591, %rd1589, %rd1590;
	add.s64 	%rd1592, %rd1591, %rd1588;
	add.s64 	%rd1593, %rd1592, %rd1585;
	add.s64 	%rd1594, %rd1593, %rd1497;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1788,%dummy}, %rd1578;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1789}, %rd1578;
	}
	shf.r.wrap.b32 	%r1790, %r1789, %r1788, 28;
	shf.r.wrap.b32 	%r1791, %r1788, %r1789, 28;
	mov.b64 	%rd1595, {%r1791, %r1790};
	shf.l.wrap.b32 	%r1792, %r1788, %r1789, 30;
	shf.l.wrap.b32 	%r1793, %r1789, %r1788, 30;
	mov.b64 	%rd1596, {%r1793, %r1792};
	xor.b64  	%rd1597, %rd1596, %rd1595;
	shf.l.wrap.b32 	%r1794, %r1788, %r1789, 25;
	shf.l.wrap.b32 	%r1795, %r1789, %r1788, 25;
	mov.b64 	%rd1598, {%r1795, %r1794};
	xor.b64  	%rd1599, %rd1597, %rd1598;
	xor.b64  	%rd1600, %rd1578, %rd1524;
	xor.b64  	%rd1601, %rd1578, %rd1551;
	and.b64  	%rd1602, %rd1601, %rd1600;
	xor.b64  	%rd1603, %rd1602, %rd1578;
	add.s64 	%rd1604, %rd1593, %rd1603;
	add.s64 	%rd1605, %rd1604, %rd1599;
	add.s32 	%r1796, %r11771, 10;
	mul.wide.s32 	%rd1606, %r1796, 8;
	add.s64 	%rd1607, %rd1336, %rd1606;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1797,%dummy}, %rd1594;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1798}, %rd1594;
	}
	shf.r.wrap.b32 	%r1799, %r1798, %r1797, 14;
	shf.r.wrap.b32 	%r1800, %r1797, %r1798, 14;
	mov.b64 	%rd1608, {%r1800, %r1799};
	shf.r.wrap.b32 	%r1801, %r1798, %r1797, 18;
	shf.r.wrap.b32 	%r1802, %r1797, %r1798, 18;
	mov.b64 	%rd1609, {%r1802, %r1801};
	xor.b64  	%rd1610, %rd1609, %rd1608;
	shf.l.wrap.b32 	%r1803, %r1797, %r1798, 23;
	shf.l.wrap.b32 	%r1804, %r1798, %r1797, 23;
	mov.b64 	%rd1611, {%r1804, %r1803};
	xor.b64  	%rd1612, %rd1610, %rd1611;
	xor.b64  	%rd1613, %rd1567, %rd1540;
	and.b64  	%rd1614, %rd1594, %rd1613;
	xor.b64  	%rd1615, %rd1614, %rd1540;
	add.s64 	%rd1616, %rd1513, %rd6819;
	ld.const.u64 	%rd1617, [%rd1607];
	add.s64 	%rd1618, %rd1616, %rd1617;
	add.s64 	%rd1619, %rd1618, %rd1615;
	add.s64 	%rd1620, %rd1619, %rd1612;
	add.s64 	%rd1621, %rd1620, %rd1524;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1805,%dummy}, %rd1605;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1806}, %rd1605;
	}
	shf.r.wrap.b32 	%r1807, %r1806, %r1805, 28;
	shf.r.wrap.b32 	%r1808, %r1805, %r1806, 28;
	mov.b64 	%rd1622, {%r1808, %r1807};
	shf.l.wrap.b32 	%r1809, %r1805, %r1806, 30;
	shf.l.wrap.b32 	%r1810, %r1806, %r1805, 30;
	mov.b64 	%rd1623, {%r1810, %r1809};
	xor.b64  	%rd1624, %rd1623, %rd1622;
	shf.l.wrap.b32 	%r1811, %r1805, %r1806, 25;
	shf.l.wrap.b32 	%r1812, %r1806, %r1805, 25;
	mov.b64 	%rd1625, {%r1812, %r1811};
	xor.b64  	%rd1626, %rd1624, %rd1625;
	xor.b64  	%rd1627, %rd1605, %rd1551;
	xor.b64  	%rd1628, %rd1605, %rd1578;
	and.b64  	%rd1629, %rd1628, %rd1627;
	xor.b64  	%rd1630, %rd1629, %rd1605;
	add.s64 	%rd1631, %rd1620, %rd1630;
	add.s64 	%rd1632, %rd1631, %rd1626;
	add.s32 	%r1813, %r11771, 11;
	mul.wide.s32 	%rd1633, %r1813, 8;
	add.s64 	%rd1634, %rd1336, %rd1633;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1814,%dummy}, %rd1621;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1815}, %rd1621;
	}
	shf.r.wrap.b32 	%r1816, %r1815, %r1814, 14;
	shf.r.wrap.b32 	%r1817, %r1814, %r1815, 14;
	mov.b64 	%rd1635, {%r1817, %r1816};
	shf.r.wrap.b32 	%r1818, %r1815, %r1814, 18;
	shf.r.wrap.b32 	%r1819, %r1814, %r1815, 18;
	mov.b64 	%rd1636, {%r1819, %r1818};
	xor.b64  	%rd1637, %rd1636, %rd1635;
	shf.l.wrap.b32 	%r1820, %r1814, %r1815, 23;
	shf.l.wrap.b32 	%r1821, %r1815, %r1814, 23;
	mov.b64 	%rd1638, {%r1821, %r1820};
	xor.b64  	%rd1639, %rd1637, %rd1638;
	xor.b64  	%rd1640, %rd1594, %rd1567;
	and.b64  	%rd1641, %rd1621, %rd1640;
	xor.b64  	%rd1642, %rd1641, %rd1567;
	add.s64 	%rd1643, %rd1540, %rd6818;
	ld.const.u64 	%rd1644, [%rd1634];
	add.s64 	%rd1645, %rd1643, %rd1644;
	add.s64 	%rd1646, %rd1645, %rd1642;
	add.s64 	%rd1647, %rd1646, %rd1639;
	add.s64 	%rd1648, %rd1647, %rd1551;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1822,%dummy}, %rd1632;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1823}, %rd1632;
	}
	shf.r.wrap.b32 	%r1824, %r1823, %r1822, 28;
	shf.r.wrap.b32 	%r1825, %r1822, %r1823, 28;
	mov.b64 	%rd1649, {%r1825, %r1824};
	shf.l.wrap.b32 	%r1826, %r1822, %r1823, 30;
	shf.l.wrap.b32 	%r1827, %r1823, %r1822, 30;
	mov.b64 	%rd1650, {%r1827, %r1826};
	xor.b64  	%rd1651, %rd1650, %rd1649;
	shf.l.wrap.b32 	%r1828, %r1822, %r1823, 25;
	shf.l.wrap.b32 	%r1829, %r1823, %r1822, 25;
	mov.b64 	%rd1652, {%r1829, %r1828};
	xor.b64  	%rd1653, %rd1651, %rd1652;
	xor.b64  	%rd1654, %rd1632, %rd1578;
	xor.b64  	%rd1655, %rd1632, %rd1605;
	and.b64  	%rd1656, %rd1655, %rd1654;
	xor.b64  	%rd1657, %rd1656, %rd1632;
	add.s64 	%rd1658, %rd1647, %rd1657;
	add.s64 	%rd1659, %rd1658, %rd1653;
	add.s32 	%r1830, %r11771, 12;
	mul.wide.s32 	%rd1660, %r1830, 8;
	add.s64 	%rd1661, %rd1336, %rd1660;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1831,%dummy}, %rd1648;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1832}, %rd1648;
	}
	shf.r.wrap.b32 	%r1833, %r1832, %r1831, 14;
	shf.r.wrap.b32 	%r1834, %r1831, %r1832, 14;
	mov.b64 	%rd1662, {%r1834, %r1833};
	shf.r.wrap.b32 	%r1835, %r1832, %r1831, 18;
	shf.r.wrap.b32 	%r1836, %r1831, %r1832, 18;
	mov.b64 	%rd1663, {%r1836, %r1835};
	xor.b64  	%rd1664, %rd1663, %rd1662;
	shf.l.wrap.b32 	%r1837, %r1831, %r1832, 23;
	shf.l.wrap.b32 	%r1838, %r1832, %r1831, 23;
	mov.b64 	%rd1665, {%r1838, %r1837};
	xor.b64  	%rd1666, %rd1664, %rd1665;
	xor.b64  	%rd1667, %rd1621, %rd1594;
	and.b64  	%rd1668, %rd1648, %rd1667;
	xor.b64  	%rd1669, %rd1668, %rd1594;
	add.s64 	%rd1670, %rd1567, %rd6817;
	ld.const.u64 	%rd1671, [%rd1661];
	add.s64 	%rd1672, %rd1670, %rd1671;
	add.s64 	%rd1673, %rd1672, %rd1669;
	add.s64 	%rd1674, %rd1673, %rd1666;
	add.s64 	%rd6829, %rd1674, %rd1578;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1839,%dummy}, %rd1659;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1840}, %rd1659;
	}
	shf.r.wrap.b32 	%r1841, %r1840, %r1839, 28;
	shf.r.wrap.b32 	%r1842, %r1839, %r1840, 28;
	mov.b64 	%rd1675, {%r1842, %r1841};
	shf.l.wrap.b32 	%r1843, %r1839, %r1840, 30;
	shf.l.wrap.b32 	%r1844, %r1840, %r1839, 30;
	mov.b64 	%rd1676, {%r1844, %r1843};
	xor.b64  	%rd1677, %rd1676, %rd1675;
	shf.l.wrap.b32 	%r1845, %r1839, %r1840, 25;
	shf.l.wrap.b32 	%r1846, %r1840, %r1839, 25;
	mov.b64 	%rd1678, {%r1846, %r1845};
	xor.b64  	%rd1679, %rd1677, %rd1678;
	xor.b64  	%rd1680, %rd1659, %rd1605;
	xor.b64  	%rd1681, %rd1659, %rd1632;
	and.b64  	%rd1682, %rd1681, %rd1680;
	xor.b64  	%rd1683, %rd1682, %rd1659;
	add.s64 	%rd1684, %rd1674, %rd1683;
	add.s64 	%rd6825, %rd1684, %rd1679;
	add.s32 	%r1847, %r11771, 13;
	mul.wide.s32 	%rd1685, %r1847, 8;
	add.s64 	%rd1686, %rd1336, %rd1685;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1848,%dummy}, %rd6829;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1849}, %rd6829;
	}
	shf.r.wrap.b32 	%r1850, %r1849, %r1848, 14;
	shf.r.wrap.b32 	%r1851, %r1848, %r1849, 14;
	mov.b64 	%rd1687, {%r1851, %r1850};
	shf.r.wrap.b32 	%r1852, %r1849, %r1848, 18;
	shf.r.wrap.b32 	%r1853, %r1848, %r1849, 18;
	mov.b64 	%rd1688, {%r1853, %r1852};
	xor.b64  	%rd1689, %rd1688, %rd1687;
	shf.l.wrap.b32 	%r1854, %r1848, %r1849, 23;
	shf.l.wrap.b32 	%r1855, %r1849, %r1848, 23;
	mov.b64 	%rd1690, {%r1855, %r1854};
	xor.b64  	%rd1691, %rd1689, %rd1690;
	xor.b64  	%rd1692, %rd1648, %rd1621;
	and.b64  	%rd1693, %rd6829, %rd1692;
	xor.b64  	%rd1694, %rd1693, %rd1621;
	add.s64 	%rd1695, %rd1594, %rd6816;
	ld.const.u64 	%rd1696, [%rd1686];
	add.s64 	%rd1697, %rd1695, %rd1696;
	add.s64 	%rd1698, %rd1697, %rd1694;
	add.s64 	%rd1699, %rd1698, %rd1691;
	add.s64 	%rd6828, %rd1699, %rd1605;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1856,%dummy}, %rd6825;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1857}, %rd6825;
	}
	shf.r.wrap.b32 	%r1858, %r1857, %r1856, 28;
	shf.r.wrap.b32 	%r1859, %r1856, %r1857, 28;
	mov.b64 	%rd1700, {%r1859, %r1858};
	shf.l.wrap.b32 	%r1860, %r1856, %r1857, 30;
	shf.l.wrap.b32 	%r1861, %r1857, %r1856, 30;
	mov.b64 	%rd1701, {%r1861, %r1860};
	xor.b64  	%rd1702, %rd1701, %rd1700;
	shf.l.wrap.b32 	%r1862, %r1856, %r1857, 25;
	shf.l.wrap.b32 	%r1863, %r1857, %r1856, 25;
	mov.b64 	%rd1703, {%r1863, %r1862};
	xor.b64  	%rd1704, %rd1702, %rd1703;
	xor.b64  	%rd1705, %rd6825, %rd1632;
	xor.b64  	%rd1706, %rd6825, %rd1659;
	and.b64  	%rd1707, %rd1706, %rd1705;
	xor.b64  	%rd1708, %rd1707, %rd6825;
	add.s64 	%rd1709, %rd1699, %rd1708;
	add.s64 	%rd6824, %rd1709, %rd1704;
	add.s32 	%r1864, %r11771, 14;
	mul.wide.s32 	%rd1710, %r1864, 8;
	add.s64 	%rd1711, %rd1336, %rd1710;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1865,%dummy}, %rd6828;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1866}, %rd6828;
	}
	shf.r.wrap.b32 	%r1867, %r1866, %r1865, 14;
	shf.r.wrap.b32 	%r1868, %r1865, %r1866, 14;
	mov.b64 	%rd1712, {%r1868, %r1867};
	shf.r.wrap.b32 	%r1869, %r1866, %r1865, 18;
	shf.r.wrap.b32 	%r1870, %r1865, %r1866, 18;
	mov.b64 	%rd1713, {%r1870, %r1869};
	xor.b64  	%rd1714, %rd1713, %rd1712;
	shf.l.wrap.b32 	%r1871, %r1865, %r1866, 23;
	shf.l.wrap.b32 	%r1872, %r1866, %r1865, 23;
	mov.b64 	%rd1715, {%r1872, %r1871};
	xor.b64  	%rd1716, %rd1714, %rd1715;
	xor.b64  	%rd1717, %rd6829, %rd1648;
	and.b64  	%rd1718, %rd6828, %rd1717;
	xor.b64  	%rd1719, %rd1718, %rd1648;
	add.s64 	%rd1720, %rd1621, %rd6815;
	ld.const.u64 	%rd1721, [%rd1711];
	add.s64 	%rd1722, %rd1720, %rd1721;
	add.s64 	%rd1723, %rd1722, %rd1719;
	add.s64 	%rd1724, %rd1723, %rd1716;
	add.s64 	%rd6827, %rd1724, %rd1632;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1873,%dummy}, %rd6824;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1874}, %rd6824;
	}
	shf.r.wrap.b32 	%r1875, %r1874, %r1873, 28;
	shf.r.wrap.b32 	%r1876, %r1873, %r1874, 28;
	mov.b64 	%rd1725, {%r1876, %r1875};
	shf.l.wrap.b32 	%r1877, %r1873, %r1874, 30;
	shf.l.wrap.b32 	%r1878, %r1874, %r1873, 30;
	mov.b64 	%rd1726, {%r1878, %r1877};
	xor.b64  	%rd1727, %rd1726, %rd1725;
	shf.l.wrap.b32 	%r1879, %r1873, %r1874, 25;
	shf.l.wrap.b32 	%r1880, %r1874, %r1873, 25;
	mov.b64 	%rd1728, {%r1880, %r1879};
	xor.b64  	%rd1729, %rd1727, %rd1728;
	xor.b64  	%rd1730, %rd6824, %rd1659;
	xor.b64  	%rd1731, %rd6824, %rd6825;
	and.b64  	%rd1732, %rd1731, %rd1730;
	xor.b64  	%rd1733, %rd1732, %rd6824;
	add.s64 	%rd1734, %rd1724, %rd1733;
	add.s64 	%rd6823, %rd1734, %rd1729;
	add.s32 	%r1881, %r11771, 15;
	mul.wide.s32 	%rd1735, %r1881, 8;
	add.s64 	%rd1736, %rd1336, %rd1735;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1882,%dummy}, %rd6827;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1883}, %rd6827;
	}
	shf.r.wrap.b32 	%r1884, %r1883, %r1882, 14;
	shf.r.wrap.b32 	%r1885, %r1882, %r1883, 14;
	mov.b64 	%rd1737, {%r1885, %r1884};
	shf.r.wrap.b32 	%r1886, %r1883, %r1882, 18;
	shf.r.wrap.b32 	%r1887, %r1882, %r1883, 18;
	mov.b64 	%rd1738, {%r1887, %r1886};
	xor.b64  	%rd1739, %rd1738, %rd1737;
	shf.l.wrap.b32 	%r1888, %r1882, %r1883, 23;
	shf.l.wrap.b32 	%r1889, %r1883, %r1882, 23;
	mov.b64 	%rd1740, {%r1889, %r1888};
	xor.b64  	%rd1741, %rd1739, %rd1740;
	xor.b64  	%rd1742, %rd6828, %rd6829;
	and.b64  	%rd1743, %rd6827, %rd1742;
	xor.b64  	%rd1744, %rd1743, %rd6829;
	add.s64 	%rd1745, %rd1648, %rd6814;
	ld.const.u64 	%rd1746, [%rd1736];
	add.s64 	%rd1747, %rd1745, %rd1746;
	add.s64 	%rd1748, %rd1747, %rd1744;
	add.s64 	%rd1749, %rd1748, %rd1741;
	add.s64 	%rd6826, %rd1749, %rd1659;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1890,%dummy}, %rd6823;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1891}, %rd6823;
	}
	shf.r.wrap.b32 	%r1892, %r1891, %r1890, 28;
	shf.r.wrap.b32 	%r1893, %r1890, %r1891, 28;
	mov.b64 	%rd1750, {%r1893, %r1892};
	shf.l.wrap.b32 	%r1894, %r1890, %r1891, 30;
	shf.l.wrap.b32 	%r1895, %r1891, %r1890, 30;
	mov.b64 	%rd1751, {%r1895, %r1894};
	xor.b64  	%rd1752, %rd1751, %rd1750;
	shf.l.wrap.b32 	%r1896, %r1890, %r1891, 25;
	shf.l.wrap.b32 	%r1897, %r1891, %r1890, 25;
	mov.b64 	%rd1753, {%r1897, %r1896};
	xor.b64  	%rd1754, %rd1752, %rd1753;
	xor.b64  	%rd1755, %rd6823, %rd6825;
	xor.b64  	%rd1756, %rd6823, %rd6824;
	and.b64  	%rd1757, %rd1756, %rd1755;
	xor.b64  	%rd1758, %rd1757, %rd6823;
	add.s64 	%rd1759, %rd1749, %rd1758;
	add.s64 	%rd6822, %rd1759, %rd1754;
	add.s32 	%r11771, %r11771, 16;
	setp.lt.s32	%p209, %r11771, 80;
	@%p209 bra 	BB5_345;

	add.s64 	%rd6845, %rd6845, %rd6822;
	st.local.u64 	[%rd10], %rd6845;
	add.s64 	%rd6844, %rd6844, %rd6823;
	st.local.u64 	[%rd22], %rd6844;
	add.s64 	%rd6843, %rd6843, %rd6824;
	st.local.u64 	[%rd23], %rd6843;
	add.s64 	%rd6842, %rd6842, %rd6825;
	st.local.u64 	[%rd24], %rd6842;
	add.s64 	%rd6841, %rd6841, %rd6826;
	st.local.u64 	[%rd25], %rd6841;
	add.s64 	%rd6840, %rd6840, %rd6827;
	st.local.u64 	[%rd26], %rd6840;
	add.s64 	%rd6839, %rd6839, %rd6828;
	st.local.u64 	[%rd27], %rd6839;
	add.s64 	%rd6838, %rd6838, %rd6829;
	st.local.u64 	[%rd28], %rd6838;
	mov.u32 	%r11772, 0;
	st.local.u32 	[%rd45], %r11772;
	st.local.u32 	[%rd46], %r11772;
	st.local.u32 	[%rd47], %r11772;
	st.local.u32 	[%rd48], %r11772;
	st.local.u32 	[%rd49], %r11772;
	st.local.u32 	[%rd50], %r11772;
	st.local.u32 	[%rd51], %r11772;
	st.local.u32 	[%rd52], %r11772;
	st.local.u32 	[%rd53], %r11772;
	st.local.u32 	[%rd54], %r11772;
	st.local.u32 	[%rd55], %r11772;
	st.local.u32 	[%rd56], %r11772;
	st.local.u32 	[%rd57], %r11772;
	st.local.u32 	[%rd58], %r11772;
	st.local.u32 	[%rd59], %r11772;
	st.local.u32 	[%rd60], %r11772;
	st.local.u32 	[%rd29], %r11772;
	st.local.u32 	[%rd30], %r11772;
	st.local.u32 	[%rd31], %r11772;
	st.local.u32 	[%rd32], %r11772;
	st.local.u32 	[%rd33], %r11772;
	st.local.u32 	[%rd34], %r11772;
	st.local.u32 	[%rd35], %r11772;
	st.local.u32 	[%rd36], %r11772;
	st.local.u32 	[%rd37], %r11772;
	st.local.u32 	[%rd38], %r11772;
	st.local.u32 	[%rd39], %r11772;
	st.local.u32 	[%rd40], %r11772;
	st.local.u32 	[%rd41], %r11772;
	st.local.u32 	[%rd42], %r11772;
	st.local.u32 	[%rd43], %r11772;
	st.local.u32 	[%rd44], %r11772;
	mov.u32 	%r11773, %r11772;
	mov.u32 	%r11774, %r11772;
	mov.u32 	%r11775, %r11772;
	mov.u32 	%r11776, %r11772;
	mov.u32 	%r11777, %r11772;
	mov.u32 	%r11778, %r11772;
	mov.u32 	%r11779, %r11772;
	mov.u32 	%r11780, %r11772;
	mov.u32 	%r11781, %r11772;
	mov.u32 	%r11782, %r11772;
	mov.u32 	%r11783, %r11772;
	mov.u32 	%r11784, %r11772;
	mov.u32 	%r11785, %r11772;
	mov.u32 	%r11786, %r11772;
	mov.u32 	%r11787, %r11772;
	mov.u32 	%r11788, %r11772;
	mov.u32 	%r11789, %r11772;
	mov.u32 	%r11790, %r11772;
	mov.u32 	%r11791, %r11772;
	mov.u32 	%r11792, %r11772;
	mov.u32 	%r11793, %r11772;
	mov.u32 	%r11794, %r11772;
	mov.u32 	%r11795, %r11772;
	mov.u32 	%r11796, %r11772;
	mov.u32 	%r11797, %r11772;
	mov.u32 	%r11798, %r11772;
	mov.u32 	%r11799, %r11772;
	mov.u32 	%r11800, %r11772;
	mov.u32 	%r11801, %r11772;
	bra.uni 	BB5_347;

BB5_343:
	ld.local.u32 	%r11799, [%rd47];
	ld.local.u32 	%r11798, [%rd48];
	ld.local.u32 	%r11797, [%rd49];
	ld.local.u32 	%r11796, [%rd50];
	ld.local.u32 	%r11795, [%rd51];
	ld.local.u32 	%r11794, [%rd52];
	ld.local.u32 	%r11793, [%rd53];
	ld.local.u32 	%r11792, [%rd54];
	ld.local.u32 	%r11791, [%rd55];
	ld.local.u32 	%r11790, [%rd56];
	ld.local.u32 	%r11789, [%rd57];
	ld.local.u32 	%r11788, [%rd58];
	ld.local.u32 	%r11787, [%rd59];
	ld.local.u32 	%r11786, [%rd60];
	ld.local.u32 	%r11785, [%rd29];
	ld.local.u32 	%r11784, [%rd30];
	ld.local.u32 	%r11783, [%rd31];
	ld.local.u32 	%r11782, [%rd32];
	ld.local.u32 	%r11781, [%rd33];
	ld.local.u32 	%r11780, [%rd34];
	ld.local.u32 	%r11779, [%rd35];
	ld.local.u32 	%r11778, [%rd36];
	ld.local.u32 	%r11777, [%rd37];
	ld.local.u32 	%r11776, [%rd38];
	ld.local.u32 	%r11775, [%rd39];
	ld.local.u32 	%r11774, [%rd40];
	ld.local.u32 	%r11773, [%rd41];
	ld.local.u32 	%r11772, [%rd42];

BB5_347:
	mov.u32 	%r1929, 0;
	st.local.u32 	[%rd43], %r1929;
	shl.b32 	%r1930, %r39, 3;
	st.local.u32 	[%rd44], %r1930;
	mov.b64	%rd6862, {%r11800, %r11801};
	mov.b64	%rd6863, {%r11798, %r11799};
	mov.b64	%rd6864, {%r11796, %r11797};
	mov.b64	%rd6865, {%r11794, %r11795};
	mov.b64	%rd6866, {%r11792, %r11793};
	mov.b64	%rd6867, {%r11790, %r11791};
	mov.b64	%rd6868, {%r11788, %r11789};
	mov.b64	%rd6869, {%r11786, %r11787};
	mov.b64	%rd183, {%r11784, %r11785};
	mov.b64	%rd184, {%r11782, %r11783};
	mov.b64	%rd185, {%r11780, %r11781};
	mov.b64	%rd186, {%r11778, %r11779};
	mov.b64	%rd187, {%r11776, %r11777};
	mov.b64	%rd188, {%r11774, %r11775};
	mov.b64	%rd189, {%r11772, %r11773};
	mov.b64	%rd190, {%r1930, %r1929};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1931,%dummy}, %rd6841;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1932}, %rd6841;
	}
	shf.r.wrap.b32 	%r1933, %r1932, %r1931, 18;
	shf.r.wrap.b32 	%r1934, %r1931, %r1932, 18;
	mov.b64 	%rd1760, {%r1934, %r1933};
	shf.r.wrap.b32 	%r1935, %r1932, %r1931, 14;
	shf.r.wrap.b32 	%r1936, %r1931, %r1932, 14;
	mov.b64 	%rd1761, {%r1936, %r1935};
	xor.b64  	%rd1762, %rd1760, %rd1761;
	shf.l.wrap.b32 	%r1937, %r1931, %r1932, 23;
	shf.l.wrap.b32 	%r1938, %r1932, %r1931, 23;
	mov.b64 	%rd1763, {%r1938, %r1937};
	xor.b64  	%rd1764, %rd1762, %rd1763;
	xor.b64  	%rd1765, %rd6839, %rd6840;
	and.b64  	%rd1766, %rd1765, %rd6841;
	xor.b64  	%rd1767, %rd1766, %rd6839;
	add.s64 	%rd1768, %rd1767, %rd6838;
	add.s64 	%rd1769, %rd1768, %rd6862;
	add.s64 	%rd1770, %rd1769, %rd63;
	add.s64 	%rd1771, %rd1770, %rd1764;
	add.s64 	%rd1772, %rd1771, %rd6842;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1939}, %rd6845;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1940,%dummy}, %rd6845;
	}
	shf.l.wrap.b32 	%r1941, %r1940, %r1939, 30;
	shf.l.wrap.b32 	%r1942, %r1939, %r1940, 30;
	mov.b64 	%rd1773, {%r1942, %r1941};
	shf.r.wrap.b32 	%r1943, %r1939, %r1940, 28;
	shf.r.wrap.b32 	%r1944, %r1940, %r1939, 28;
	mov.b64 	%rd1774, {%r1944, %r1943};
	xor.b64  	%rd1775, %rd1773, %rd1774;
	shf.l.wrap.b32 	%r1945, %r1940, %r1939, 25;
	shf.l.wrap.b32 	%r1946, %r1939, %r1940, 25;
	mov.b64 	%rd1776, {%r1946, %r1945};
	xor.b64  	%rd1777, %rd1775, %rd1776;
	xor.b64  	%rd1778, %rd6844, %rd6845;
	xor.b64  	%rd1779, %rd6843, %rd6845;
	and.b64  	%rd1780, %rd1779, %rd1778;
	xor.b64  	%rd1781, %rd1780, %rd6845;
	add.s64 	%rd1782, %rd1771, %rd1781;
	add.s64 	%rd1783, %rd1782, %rd1777;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1947,%dummy}, %rd1772;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1948}, %rd1772;
	}
	shf.r.wrap.b32 	%r1949, %r1948, %r1947, 14;
	shf.r.wrap.b32 	%r1950, %r1947, %r1948, 14;
	mov.b64 	%rd1784, {%r1950, %r1949};
	shf.r.wrap.b32 	%r1951, %r1948, %r1947, 18;
	shf.r.wrap.b32 	%r1952, %r1947, %r1948, 18;
	mov.b64 	%rd1785, {%r1952, %r1951};
	xor.b64  	%rd1786, %rd1785, %rd1784;
	shf.l.wrap.b32 	%r1953, %r1947, %r1948, 23;
	shf.l.wrap.b32 	%r1954, %r1948, %r1947, 23;
	mov.b64 	%rd1787, {%r1954, %r1953};
	xor.b64  	%rd1788, %rd1786, %rd1787;
	xor.b64  	%rd1789, %rd6840, %rd6841;
	and.b64  	%rd1790, %rd1772, %rd1789;
	xor.b64  	%rd1791, %rd1790, %rd6840;
	add.s64 	%rd1792, %rd6863, %rd6839;
	add.s64 	%rd1793, %rd1792, %rd64;
	add.s64 	%rd1794, %rd1793, %rd1791;
	add.s64 	%rd1795, %rd1794, %rd1788;
	add.s64 	%rd1796, %rd1795, %rd6843;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1955,%dummy}, %rd1783;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1956}, %rd1783;
	}
	shf.r.wrap.b32 	%r1957, %r1956, %r1955, 28;
	shf.r.wrap.b32 	%r1958, %r1955, %r1956, 28;
	mov.b64 	%rd1797, {%r1958, %r1957};
	shf.l.wrap.b32 	%r1959, %r1955, %r1956, 30;
	shf.l.wrap.b32 	%r1960, %r1956, %r1955, 30;
	mov.b64 	%rd1798, {%r1960, %r1959};
	xor.b64  	%rd1799, %rd1798, %rd1797;
	shf.l.wrap.b32 	%r1961, %r1955, %r1956, 25;
	shf.l.wrap.b32 	%r1962, %r1956, %r1955, 25;
	mov.b64 	%rd1800, {%r1962, %r1961};
	xor.b64  	%rd1801, %rd1799, %rd1800;
	xor.b64  	%rd1802, %rd1783, %rd6844;
	xor.b64  	%rd1803, %rd1783, %rd6845;
	and.b64  	%rd1804, %rd1803, %rd1802;
	xor.b64  	%rd1805, %rd1804, %rd1783;
	add.s64 	%rd1806, %rd1795, %rd1805;
	add.s64 	%rd1807, %rd1806, %rd1801;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1963,%dummy}, %rd1796;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1964}, %rd1796;
	}
	shf.r.wrap.b32 	%r1965, %r1964, %r1963, 14;
	shf.r.wrap.b32 	%r1966, %r1963, %r1964, 14;
	mov.b64 	%rd1808, {%r1966, %r1965};
	shf.r.wrap.b32 	%r1967, %r1964, %r1963, 18;
	shf.r.wrap.b32 	%r1968, %r1963, %r1964, 18;
	mov.b64 	%rd1809, {%r1968, %r1967};
	xor.b64  	%rd1810, %rd1809, %rd1808;
	shf.l.wrap.b32 	%r1969, %r1963, %r1964, 23;
	shf.l.wrap.b32 	%r1970, %r1964, %r1963, 23;
	mov.b64 	%rd1811, {%r1970, %r1969};
	xor.b64  	%rd1812, %rd1810, %rd1811;
	xor.b64  	%rd1813, %rd1772, %rd6841;
	and.b64  	%rd1814, %rd1796, %rd1813;
	xor.b64  	%rd1815, %rd1814, %rd6841;
	add.s64 	%rd1816, %rd6864, %rd6840;
	add.s64 	%rd1817, %rd1816, %rd65;
	add.s64 	%rd1818, %rd1817, %rd1815;
	add.s64 	%rd1819, %rd1818, %rd1812;
	add.s64 	%rd1820, %rd1819, %rd6844;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1971,%dummy}, %rd1807;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1972}, %rd1807;
	}
	shf.r.wrap.b32 	%r1973, %r1972, %r1971, 28;
	shf.r.wrap.b32 	%r1974, %r1971, %r1972, 28;
	mov.b64 	%rd1821, {%r1974, %r1973};
	shf.l.wrap.b32 	%r1975, %r1971, %r1972, 30;
	shf.l.wrap.b32 	%r1976, %r1972, %r1971, 30;
	mov.b64 	%rd1822, {%r1976, %r1975};
	xor.b64  	%rd1823, %rd1822, %rd1821;
	shf.l.wrap.b32 	%r1977, %r1971, %r1972, 25;
	shf.l.wrap.b32 	%r1978, %r1972, %r1971, 25;
	mov.b64 	%rd1824, {%r1978, %r1977};
	xor.b64  	%rd1825, %rd1823, %rd1824;
	xor.b64  	%rd1826, %rd1807, %rd6845;
	xor.b64  	%rd1827, %rd1807, %rd1783;
	and.b64  	%rd1828, %rd1827, %rd1826;
	xor.b64  	%rd1829, %rd1828, %rd1807;
	add.s64 	%rd1830, %rd1819, %rd1829;
	add.s64 	%rd1831, %rd1830, %rd1825;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1979,%dummy}, %rd1820;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1980}, %rd1820;
	}
	shf.r.wrap.b32 	%r1981, %r1980, %r1979, 14;
	shf.r.wrap.b32 	%r1982, %r1979, %r1980, 14;
	mov.b64 	%rd1832, {%r1982, %r1981};
	shf.r.wrap.b32 	%r1983, %r1980, %r1979, 18;
	shf.r.wrap.b32 	%r1984, %r1979, %r1980, 18;
	mov.b64 	%rd1833, {%r1984, %r1983};
	xor.b64  	%rd1834, %rd1833, %rd1832;
	shf.l.wrap.b32 	%r1985, %r1979, %r1980, 23;
	shf.l.wrap.b32 	%r1986, %r1980, %r1979, 23;
	mov.b64 	%rd1835, {%r1986, %r1985};
	xor.b64  	%rd1836, %rd1834, %rd1835;
	xor.b64  	%rd1837, %rd1796, %rd1772;
	and.b64  	%rd1838, %rd1820, %rd1837;
	xor.b64  	%rd1839, %rd1838, %rd1772;
	add.s64 	%rd1840, %rd6865, %rd6841;
	add.s64 	%rd1841, %rd1840, %rd66;
	add.s64 	%rd1842, %rd1841, %rd1839;
	add.s64 	%rd1843, %rd1842, %rd1836;
	add.s64 	%rd1844, %rd1843, %rd6845;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1987,%dummy}, %rd1831;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1988}, %rd1831;
	}
	shf.r.wrap.b32 	%r1989, %r1988, %r1987, 28;
	shf.r.wrap.b32 	%r1990, %r1987, %r1988, 28;
	mov.b64 	%rd1845, {%r1990, %r1989};
	shf.l.wrap.b32 	%r1991, %r1987, %r1988, 30;
	shf.l.wrap.b32 	%r1992, %r1988, %r1987, 30;
	mov.b64 	%rd1846, {%r1992, %r1991};
	xor.b64  	%rd1847, %rd1846, %rd1845;
	shf.l.wrap.b32 	%r1993, %r1987, %r1988, 25;
	shf.l.wrap.b32 	%r1994, %r1988, %r1987, 25;
	mov.b64 	%rd1848, {%r1994, %r1993};
	xor.b64  	%rd1849, %rd1847, %rd1848;
	xor.b64  	%rd1850, %rd1831, %rd1783;
	xor.b64  	%rd1851, %rd1831, %rd1807;
	and.b64  	%rd1852, %rd1851, %rd1850;
	xor.b64  	%rd1853, %rd1852, %rd1831;
	add.s64 	%rd1854, %rd1843, %rd1853;
	add.s64 	%rd1855, %rd1854, %rd1849;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1995,%dummy}, %rd1844;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1996}, %rd1844;
	}
	shf.r.wrap.b32 	%r1997, %r1996, %r1995, 14;
	shf.r.wrap.b32 	%r1998, %r1995, %r1996, 14;
	mov.b64 	%rd1856, {%r1998, %r1997};
	shf.r.wrap.b32 	%r1999, %r1996, %r1995, 18;
	shf.r.wrap.b32 	%r2000, %r1995, %r1996, 18;
	mov.b64 	%rd1857, {%r2000, %r1999};
	xor.b64  	%rd1858, %rd1857, %rd1856;
	shf.l.wrap.b32 	%r2001, %r1995, %r1996, 23;
	shf.l.wrap.b32 	%r2002, %r1996, %r1995, 23;
	mov.b64 	%rd1859, {%r2002, %r2001};
	xor.b64  	%rd1860, %rd1858, %rd1859;
	xor.b64  	%rd1861, %rd1820, %rd1796;
	and.b64  	%rd1862, %rd1844, %rd1861;
	xor.b64  	%rd1863, %rd1862, %rd1796;
	add.s64 	%rd1864, %rd1772, %rd6866;
	add.s64 	%rd1865, %rd1864, %rd67;
	add.s64 	%rd1866, %rd1865, %rd1863;
	add.s64 	%rd1867, %rd1866, %rd1860;
	add.s64 	%rd1868, %rd1867, %rd1783;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2003,%dummy}, %rd1855;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2004}, %rd1855;
	}
	shf.r.wrap.b32 	%r2005, %r2004, %r2003, 28;
	shf.r.wrap.b32 	%r2006, %r2003, %r2004, 28;
	mov.b64 	%rd1869, {%r2006, %r2005};
	shf.l.wrap.b32 	%r2007, %r2003, %r2004, 30;
	shf.l.wrap.b32 	%r2008, %r2004, %r2003, 30;
	mov.b64 	%rd1870, {%r2008, %r2007};
	xor.b64  	%rd1871, %rd1870, %rd1869;
	shf.l.wrap.b32 	%r2009, %r2003, %r2004, 25;
	shf.l.wrap.b32 	%r2010, %r2004, %r2003, 25;
	mov.b64 	%rd1872, {%r2010, %r2009};
	xor.b64  	%rd1873, %rd1871, %rd1872;
	xor.b64  	%rd1874, %rd1855, %rd1807;
	xor.b64  	%rd1875, %rd1855, %rd1831;
	and.b64  	%rd1876, %rd1875, %rd1874;
	xor.b64  	%rd1877, %rd1876, %rd1855;
	add.s64 	%rd1878, %rd1867, %rd1877;
	add.s64 	%rd1879, %rd1878, %rd1873;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2011,%dummy}, %rd1868;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2012}, %rd1868;
	}
	shf.r.wrap.b32 	%r2013, %r2012, %r2011, 14;
	shf.r.wrap.b32 	%r2014, %r2011, %r2012, 14;
	mov.b64 	%rd1880, {%r2014, %r2013};
	shf.r.wrap.b32 	%r2015, %r2012, %r2011, 18;
	shf.r.wrap.b32 	%r2016, %r2011, %r2012, 18;
	mov.b64 	%rd1881, {%r2016, %r2015};
	xor.b64  	%rd1882, %rd1881, %rd1880;
	shf.l.wrap.b32 	%r2017, %r2011, %r2012, 23;
	shf.l.wrap.b32 	%r2018, %r2012, %r2011, 23;
	mov.b64 	%rd1883, {%r2018, %r2017};
	xor.b64  	%rd1884, %rd1882, %rd1883;
	xor.b64  	%rd1885, %rd1844, %rd1820;
	and.b64  	%rd1886, %rd1868, %rd1885;
	xor.b64  	%rd1887, %rd1886, %rd1820;
	add.s64 	%rd1888, %rd1796, %rd6867;
	add.s64 	%rd1889, %rd1888, %rd68;
	add.s64 	%rd1890, %rd1889, %rd1887;
	add.s64 	%rd1891, %rd1890, %rd1884;
	add.s64 	%rd1892, %rd1891, %rd1807;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2019,%dummy}, %rd1879;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2020}, %rd1879;
	}
	shf.r.wrap.b32 	%r2021, %r2020, %r2019, 28;
	shf.r.wrap.b32 	%r2022, %r2019, %r2020, 28;
	mov.b64 	%rd1893, {%r2022, %r2021};
	shf.l.wrap.b32 	%r2023, %r2019, %r2020, 30;
	shf.l.wrap.b32 	%r2024, %r2020, %r2019, 30;
	mov.b64 	%rd1894, {%r2024, %r2023};
	xor.b64  	%rd1895, %rd1894, %rd1893;
	shf.l.wrap.b32 	%r2025, %r2019, %r2020, 25;
	shf.l.wrap.b32 	%r2026, %r2020, %r2019, 25;
	mov.b64 	%rd1896, {%r2026, %r2025};
	xor.b64  	%rd1897, %rd1895, %rd1896;
	xor.b64  	%rd1898, %rd1879, %rd1831;
	xor.b64  	%rd1899, %rd1879, %rd1855;
	and.b64  	%rd1900, %rd1899, %rd1898;
	xor.b64  	%rd1901, %rd1900, %rd1879;
	add.s64 	%rd1902, %rd1891, %rd1901;
	add.s64 	%rd1903, %rd1902, %rd1897;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2027,%dummy}, %rd1892;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2028}, %rd1892;
	}
	shf.r.wrap.b32 	%r2029, %r2028, %r2027, 14;
	shf.r.wrap.b32 	%r2030, %r2027, %r2028, 14;
	mov.b64 	%rd1904, {%r2030, %r2029};
	shf.r.wrap.b32 	%r2031, %r2028, %r2027, 18;
	shf.r.wrap.b32 	%r2032, %r2027, %r2028, 18;
	mov.b64 	%rd1905, {%r2032, %r2031};
	xor.b64  	%rd1906, %rd1905, %rd1904;
	shf.l.wrap.b32 	%r2033, %r2027, %r2028, 23;
	shf.l.wrap.b32 	%r2034, %r2028, %r2027, 23;
	mov.b64 	%rd1907, {%r2034, %r2033};
	xor.b64  	%rd1908, %rd1906, %rd1907;
	xor.b64  	%rd1909, %rd1868, %rd1844;
	and.b64  	%rd1910, %rd1892, %rd1909;
	xor.b64  	%rd1911, %rd1910, %rd1844;
	add.s64 	%rd1912, %rd1820, %rd6868;
	add.s64 	%rd1913, %rd1912, %rd69;
	add.s64 	%rd1914, %rd1913, %rd1911;
	add.s64 	%rd1915, %rd1914, %rd1908;
	add.s64 	%rd1916, %rd1915, %rd1831;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2035,%dummy}, %rd1903;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2036}, %rd1903;
	}
	shf.r.wrap.b32 	%r2037, %r2036, %r2035, 28;
	shf.r.wrap.b32 	%r2038, %r2035, %r2036, 28;
	mov.b64 	%rd1917, {%r2038, %r2037};
	shf.l.wrap.b32 	%r2039, %r2035, %r2036, 30;
	shf.l.wrap.b32 	%r2040, %r2036, %r2035, 30;
	mov.b64 	%rd1918, {%r2040, %r2039};
	xor.b64  	%rd1919, %rd1918, %rd1917;
	shf.l.wrap.b32 	%r2041, %r2035, %r2036, 25;
	shf.l.wrap.b32 	%r2042, %r2036, %r2035, 25;
	mov.b64 	%rd1920, {%r2042, %r2041};
	xor.b64  	%rd1921, %rd1919, %rd1920;
	xor.b64  	%rd1922, %rd1903, %rd1855;
	xor.b64  	%rd1923, %rd1903, %rd1879;
	and.b64  	%rd1924, %rd1923, %rd1922;
	xor.b64  	%rd1925, %rd1924, %rd1903;
	add.s64 	%rd1926, %rd1915, %rd1925;
	add.s64 	%rd1927, %rd1926, %rd1921;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2043,%dummy}, %rd1916;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2044}, %rd1916;
	}
	shf.r.wrap.b32 	%r2045, %r2044, %r2043, 14;
	shf.r.wrap.b32 	%r2046, %r2043, %r2044, 14;
	mov.b64 	%rd1928, {%r2046, %r2045};
	shf.r.wrap.b32 	%r2047, %r2044, %r2043, 18;
	shf.r.wrap.b32 	%r2048, %r2043, %r2044, 18;
	mov.b64 	%rd1929, {%r2048, %r2047};
	xor.b64  	%rd1930, %rd1929, %rd1928;
	shf.l.wrap.b32 	%r2049, %r2043, %r2044, 23;
	shf.l.wrap.b32 	%r2050, %r2044, %r2043, 23;
	mov.b64 	%rd1931, {%r2050, %r2049};
	xor.b64  	%rd1932, %rd1930, %rd1931;
	xor.b64  	%rd1933, %rd1892, %rd1868;
	and.b64  	%rd1934, %rd1916, %rd1933;
	xor.b64  	%rd1935, %rd1934, %rd1868;
	add.s64 	%rd1936, %rd1844, %rd6869;
	add.s64 	%rd1937, %rd1936, %rd70;
	add.s64 	%rd1938, %rd1937, %rd1935;
	add.s64 	%rd1939, %rd1938, %rd1932;
	add.s64 	%rd1940, %rd1939, %rd1855;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2051,%dummy}, %rd1927;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2052}, %rd1927;
	}
	shf.r.wrap.b32 	%r2053, %r2052, %r2051, 28;
	shf.r.wrap.b32 	%r2054, %r2051, %r2052, 28;
	mov.b64 	%rd1941, {%r2054, %r2053};
	shf.l.wrap.b32 	%r2055, %r2051, %r2052, 30;
	shf.l.wrap.b32 	%r2056, %r2052, %r2051, 30;
	mov.b64 	%rd1942, {%r2056, %r2055};
	xor.b64  	%rd1943, %rd1942, %rd1941;
	shf.l.wrap.b32 	%r2057, %r2051, %r2052, 25;
	shf.l.wrap.b32 	%r2058, %r2052, %r2051, 25;
	mov.b64 	%rd1944, {%r2058, %r2057};
	xor.b64  	%rd1945, %rd1943, %rd1944;
	xor.b64  	%rd1946, %rd1927, %rd1879;
	xor.b64  	%rd1947, %rd1927, %rd1903;
	and.b64  	%rd1948, %rd1947, %rd1946;
	xor.b64  	%rd1949, %rd1948, %rd1927;
	add.s64 	%rd1950, %rd1939, %rd1949;
	add.s64 	%rd1951, %rd1950, %rd1945;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2059,%dummy}, %rd1940;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2060}, %rd1940;
	}
	shf.r.wrap.b32 	%r2061, %r2060, %r2059, 14;
	shf.r.wrap.b32 	%r2062, %r2059, %r2060, 14;
	mov.b64 	%rd1952, {%r2062, %r2061};
	shf.r.wrap.b32 	%r2063, %r2060, %r2059, 18;
	shf.r.wrap.b32 	%r2064, %r2059, %r2060, 18;
	mov.b64 	%rd1953, {%r2064, %r2063};
	xor.b64  	%rd1954, %rd1953, %rd1952;
	shf.l.wrap.b32 	%r2065, %r2059, %r2060, 23;
	shf.l.wrap.b32 	%r2066, %r2060, %r2059, 23;
	mov.b64 	%rd1955, {%r2066, %r2065};
	xor.b64  	%rd1956, %rd1954, %rd1955;
	xor.b64  	%rd1957, %rd1916, %rd1892;
	and.b64  	%rd1958, %rd1940, %rd1957;
	xor.b64  	%rd1959, %rd1958, %rd1892;
	add.s64 	%rd1960, %rd1868, %rd183;
	add.s64 	%rd1961, %rd1960, %rd71;
	add.s64 	%rd1962, %rd1961, %rd1959;
	add.s64 	%rd1963, %rd1962, %rd1956;
	add.s64 	%rd1964, %rd1963, %rd1879;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2067,%dummy}, %rd1951;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2068}, %rd1951;
	}
	shf.r.wrap.b32 	%r2069, %r2068, %r2067, 28;
	shf.r.wrap.b32 	%r2070, %r2067, %r2068, 28;
	mov.b64 	%rd1965, {%r2070, %r2069};
	shf.l.wrap.b32 	%r2071, %r2067, %r2068, 30;
	shf.l.wrap.b32 	%r2072, %r2068, %r2067, 30;
	mov.b64 	%rd1966, {%r2072, %r2071};
	xor.b64  	%rd1967, %rd1966, %rd1965;
	shf.l.wrap.b32 	%r2073, %r2067, %r2068, 25;
	shf.l.wrap.b32 	%r2074, %r2068, %r2067, 25;
	mov.b64 	%rd1968, {%r2074, %r2073};
	xor.b64  	%rd1969, %rd1967, %rd1968;
	xor.b64  	%rd1970, %rd1951, %rd1903;
	xor.b64  	%rd1971, %rd1951, %rd1927;
	and.b64  	%rd1972, %rd1971, %rd1970;
	xor.b64  	%rd1973, %rd1972, %rd1951;
	add.s64 	%rd1974, %rd1963, %rd1973;
	add.s64 	%rd1975, %rd1974, %rd1969;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2075,%dummy}, %rd1964;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2076}, %rd1964;
	}
	shf.r.wrap.b32 	%r2077, %r2076, %r2075, 14;
	shf.r.wrap.b32 	%r2078, %r2075, %r2076, 14;
	mov.b64 	%rd1976, {%r2078, %r2077};
	shf.r.wrap.b32 	%r2079, %r2076, %r2075, 18;
	shf.r.wrap.b32 	%r2080, %r2075, %r2076, 18;
	mov.b64 	%rd1977, {%r2080, %r2079};
	xor.b64  	%rd1978, %rd1977, %rd1976;
	shf.l.wrap.b32 	%r2081, %r2075, %r2076, 23;
	shf.l.wrap.b32 	%r2082, %r2076, %r2075, 23;
	mov.b64 	%rd1979, {%r2082, %r2081};
	xor.b64  	%rd1980, %rd1978, %rd1979;
	xor.b64  	%rd1981, %rd1940, %rd1916;
	and.b64  	%rd1982, %rd1964, %rd1981;
	xor.b64  	%rd1983, %rd1982, %rd1916;
	add.s64 	%rd1984, %rd1892, %rd184;
	add.s64 	%rd1985, %rd1984, %rd72;
	add.s64 	%rd1986, %rd1985, %rd1983;
	add.s64 	%rd1987, %rd1986, %rd1980;
	add.s64 	%rd1988, %rd1987, %rd1903;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2083,%dummy}, %rd1975;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2084}, %rd1975;
	}
	shf.r.wrap.b32 	%r2085, %r2084, %r2083, 28;
	shf.r.wrap.b32 	%r2086, %r2083, %r2084, 28;
	mov.b64 	%rd1989, {%r2086, %r2085};
	shf.l.wrap.b32 	%r2087, %r2083, %r2084, 30;
	shf.l.wrap.b32 	%r2088, %r2084, %r2083, 30;
	mov.b64 	%rd1990, {%r2088, %r2087};
	xor.b64  	%rd1991, %rd1990, %rd1989;
	shf.l.wrap.b32 	%r2089, %r2083, %r2084, 25;
	shf.l.wrap.b32 	%r2090, %r2084, %r2083, 25;
	mov.b64 	%rd1992, {%r2090, %r2089};
	xor.b64  	%rd1993, %rd1991, %rd1992;
	xor.b64  	%rd1994, %rd1975, %rd1927;
	xor.b64  	%rd1995, %rd1975, %rd1951;
	and.b64  	%rd1996, %rd1995, %rd1994;
	xor.b64  	%rd1997, %rd1996, %rd1975;
	add.s64 	%rd1998, %rd1987, %rd1997;
	add.s64 	%rd1999, %rd1998, %rd1993;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2091,%dummy}, %rd1988;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2092}, %rd1988;
	}
	shf.r.wrap.b32 	%r2093, %r2092, %r2091, 14;
	shf.r.wrap.b32 	%r2094, %r2091, %r2092, 14;
	mov.b64 	%rd2000, {%r2094, %r2093};
	shf.r.wrap.b32 	%r2095, %r2092, %r2091, 18;
	shf.r.wrap.b32 	%r2096, %r2091, %r2092, 18;
	mov.b64 	%rd2001, {%r2096, %r2095};
	xor.b64  	%rd2002, %rd2001, %rd2000;
	shf.l.wrap.b32 	%r2097, %r2091, %r2092, 23;
	shf.l.wrap.b32 	%r2098, %r2092, %r2091, 23;
	mov.b64 	%rd2003, {%r2098, %r2097};
	xor.b64  	%rd2004, %rd2002, %rd2003;
	xor.b64  	%rd2005, %rd1964, %rd1940;
	and.b64  	%rd2006, %rd1988, %rd2005;
	xor.b64  	%rd2007, %rd2006, %rd1940;
	add.s64 	%rd2008, %rd1916, %rd185;
	add.s64 	%rd2009, %rd2008, %rd73;
	add.s64 	%rd2010, %rd2009, %rd2007;
	add.s64 	%rd2011, %rd2010, %rd2004;
	add.s64 	%rd2012, %rd2011, %rd1927;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2099,%dummy}, %rd1999;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2100}, %rd1999;
	}
	shf.r.wrap.b32 	%r2101, %r2100, %r2099, 28;
	shf.r.wrap.b32 	%r2102, %r2099, %r2100, 28;
	mov.b64 	%rd2013, {%r2102, %r2101};
	shf.l.wrap.b32 	%r2103, %r2099, %r2100, 30;
	shf.l.wrap.b32 	%r2104, %r2100, %r2099, 30;
	mov.b64 	%rd2014, {%r2104, %r2103};
	xor.b64  	%rd2015, %rd2014, %rd2013;
	shf.l.wrap.b32 	%r2105, %r2099, %r2100, 25;
	shf.l.wrap.b32 	%r2106, %r2100, %r2099, 25;
	mov.b64 	%rd2016, {%r2106, %r2105};
	xor.b64  	%rd2017, %rd2015, %rd2016;
	xor.b64  	%rd2018, %rd1999, %rd1951;
	xor.b64  	%rd2019, %rd1999, %rd1975;
	and.b64  	%rd2020, %rd2019, %rd2018;
	xor.b64  	%rd2021, %rd2020, %rd1999;
	add.s64 	%rd2022, %rd2011, %rd2021;
	add.s64 	%rd2023, %rd2022, %rd2017;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2107,%dummy}, %rd2012;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2108}, %rd2012;
	}
	shf.r.wrap.b32 	%r2109, %r2108, %r2107, 14;
	shf.r.wrap.b32 	%r2110, %r2107, %r2108, 14;
	mov.b64 	%rd2024, {%r2110, %r2109};
	shf.r.wrap.b32 	%r2111, %r2108, %r2107, 18;
	shf.r.wrap.b32 	%r2112, %r2107, %r2108, 18;
	mov.b64 	%rd2025, {%r2112, %r2111};
	xor.b64  	%rd2026, %rd2025, %rd2024;
	shf.l.wrap.b32 	%r2113, %r2107, %r2108, 23;
	shf.l.wrap.b32 	%r2114, %r2108, %r2107, 23;
	mov.b64 	%rd2027, {%r2114, %r2113};
	xor.b64  	%rd2028, %rd2026, %rd2027;
	xor.b64  	%rd2029, %rd1988, %rd1964;
	and.b64  	%rd2030, %rd2012, %rd2029;
	xor.b64  	%rd2031, %rd2030, %rd1964;
	add.s64 	%rd2032, %rd1940, %rd186;
	add.s64 	%rd2033, %rd2032, %rd74;
	add.s64 	%rd2034, %rd2033, %rd2031;
	add.s64 	%rd2035, %rd2034, %rd2028;
	add.s64 	%rd2036, %rd2035, %rd1951;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2115,%dummy}, %rd2023;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2116}, %rd2023;
	}
	shf.r.wrap.b32 	%r2117, %r2116, %r2115, 28;
	shf.r.wrap.b32 	%r2118, %r2115, %r2116, 28;
	mov.b64 	%rd2037, {%r2118, %r2117};
	shf.l.wrap.b32 	%r2119, %r2115, %r2116, 30;
	shf.l.wrap.b32 	%r2120, %r2116, %r2115, 30;
	mov.b64 	%rd2038, {%r2120, %r2119};
	xor.b64  	%rd2039, %rd2038, %rd2037;
	shf.l.wrap.b32 	%r2121, %r2115, %r2116, 25;
	shf.l.wrap.b32 	%r2122, %r2116, %r2115, 25;
	mov.b64 	%rd2040, {%r2122, %r2121};
	xor.b64  	%rd2041, %rd2039, %rd2040;
	xor.b64  	%rd2042, %rd2023, %rd1975;
	xor.b64  	%rd2043, %rd2023, %rd1999;
	and.b64  	%rd2044, %rd2043, %rd2042;
	xor.b64  	%rd2045, %rd2044, %rd2023;
	add.s64 	%rd2046, %rd2035, %rd2045;
	add.s64 	%rd2047, %rd2046, %rd2041;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2123,%dummy}, %rd2036;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2124}, %rd2036;
	}
	shf.r.wrap.b32 	%r2125, %r2124, %r2123, 14;
	shf.r.wrap.b32 	%r2126, %r2123, %r2124, 14;
	mov.b64 	%rd2048, {%r2126, %r2125};
	shf.r.wrap.b32 	%r2127, %r2124, %r2123, 18;
	shf.r.wrap.b32 	%r2128, %r2123, %r2124, 18;
	mov.b64 	%rd2049, {%r2128, %r2127};
	xor.b64  	%rd2050, %rd2049, %rd2048;
	shf.l.wrap.b32 	%r2129, %r2123, %r2124, 23;
	shf.l.wrap.b32 	%r2130, %r2124, %r2123, 23;
	mov.b64 	%rd2051, {%r2130, %r2129};
	xor.b64  	%rd2052, %rd2050, %rd2051;
	xor.b64  	%rd2053, %rd2012, %rd1988;
	and.b64  	%rd2054, %rd2036, %rd2053;
	xor.b64  	%rd2055, %rd2054, %rd1988;
	add.s64 	%rd2056, %rd1964, %rd187;
	add.s64 	%rd2057, %rd2056, %rd75;
	add.s64 	%rd2058, %rd2057, %rd2055;
	add.s64 	%rd2059, %rd2058, %rd2052;
	add.s64 	%rd6861, %rd2059, %rd1975;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2131,%dummy}, %rd2047;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2132}, %rd2047;
	}
	shf.r.wrap.b32 	%r2133, %r2132, %r2131, 28;
	shf.r.wrap.b32 	%r2134, %r2131, %r2132, 28;
	mov.b64 	%rd2060, {%r2134, %r2133};
	shf.l.wrap.b32 	%r2135, %r2131, %r2132, 30;
	shf.l.wrap.b32 	%r2136, %r2132, %r2131, 30;
	mov.b64 	%rd2061, {%r2136, %r2135};
	xor.b64  	%rd2062, %rd2061, %rd2060;
	shf.l.wrap.b32 	%r2137, %r2131, %r2132, 25;
	shf.l.wrap.b32 	%r2138, %r2132, %r2131, 25;
	mov.b64 	%rd2063, {%r2138, %r2137};
	xor.b64  	%rd2064, %rd2062, %rd2063;
	xor.b64  	%rd2065, %rd2047, %rd1999;
	xor.b64  	%rd2066, %rd2047, %rd2023;
	and.b64  	%rd2067, %rd2066, %rd2065;
	xor.b64  	%rd2068, %rd2067, %rd2047;
	add.s64 	%rd2069, %rd2059, %rd2068;
	add.s64 	%rd6857, %rd2069, %rd2064;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2139,%dummy}, %rd6861;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2140}, %rd6861;
	}
	shf.r.wrap.b32 	%r2141, %r2140, %r2139, 14;
	shf.r.wrap.b32 	%r2142, %r2139, %r2140, 14;
	mov.b64 	%rd2070, {%r2142, %r2141};
	shf.r.wrap.b32 	%r2143, %r2140, %r2139, 18;
	shf.r.wrap.b32 	%r2144, %r2139, %r2140, 18;
	mov.b64 	%rd2071, {%r2144, %r2143};
	xor.b64  	%rd2072, %rd2071, %rd2070;
	shf.l.wrap.b32 	%r2145, %r2139, %r2140, 23;
	shf.l.wrap.b32 	%r2146, %r2140, %r2139, 23;
	mov.b64 	%rd2073, {%r2146, %r2145};
	xor.b64  	%rd2074, %rd2072, %rd2073;
	xor.b64  	%rd2075, %rd2036, %rd2012;
	and.b64  	%rd2076, %rd6861, %rd2075;
	xor.b64  	%rd2077, %rd2076, %rd2012;
	add.s64 	%rd2078, %rd1988, %rd188;
	add.s64 	%rd2079, %rd2078, %rd76;
	add.s64 	%rd2080, %rd2079, %rd2077;
	add.s64 	%rd2081, %rd2080, %rd2074;
	add.s64 	%rd6860, %rd2081, %rd1999;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2147,%dummy}, %rd6857;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2148}, %rd6857;
	}
	shf.r.wrap.b32 	%r2149, %r2148, %r2147, 28;
	shf.r.wrap.b32 	%r2150, %r2147, %r2148, 28;
	mov.b64 	%rd2082, {%r2150, %r2149};
	shf.l.wrap.b32 	%r2151, %r2147, %r2148, 30;
	shf.l.wrap.b32 	%r2152, %r2148, %r2147, 30;
	mov.b64 	%rd2083, {%r2152, %r2151};
	xor.b64  	%rd2084, %rd2083, %rd2082;
	shf.l.wrap.b32 	%r2153, %r2147, %r2148, 25;
	shf.l.wrap.b32 	%r2154, %r2148, %r2147, 25;
	mov.b64 	%rd2085, {%r2154, %r2153};
	xor.b64  	%rd2086, %rd2084, %rd2085;
	xor.b64  	%rd2087, %rd6857, %rd2023;
	xor.b64  	%rd2088, %rd6857, %rd2047;
	and.b64  	%rd2089, %rd2088, %rd2087;
	xor.b64  	%rd2090, %rd2089, %rd6857;
	add.s64 	%rd2091, %rd2081, %rd2090;
	add.s64 	%rd6856, %rd2091, %rd2086;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2155,%dummy}, %rd6860;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2156}, %rd6860;
	}
	shf.r.wrap.b32 	%r2157, %r2156, %r2155, 14;
	shf.r.wrap.b32 	%r2158, %r2155, %r2156, 14;
	mov.b64 	%rd2092, {%r2158, %r2157};
	shf.r.wrap.b32 	%r2159, %r2156, %r2155, 18;
	shf.r.wrap.b32 	%r2160, %r2155, %r2156, 18;
	mov.b64 	%rd2093, {%r2160, %r2159};
	xor.b64  	%rd2094, %rd2093, %rd2092;
	shf.l.wrap.b32 	%r2161, %r2155, %r2156, 23;
	shf.l.wrap.b32 	%r2162, %r2156, %r2155, 23;
	mov.b64 	%rd2095, {%r2162, %r2161};
	xor.b64  	%rd2096, %rd2094, %rd2095;
	xor.b64  	%rd2097, %rd6861, %rd2036;
	and.b64  	%rd2098, %rd6860, %rd2097;
	xor.b64  	%rd2099, %rd2098, %rd2036;
	add.s64 	%rd2100, %rd2012, %rd189;
	add.s64 	%rd2101, %rd2100, %rd77;
	add.s64 	%rd2102, %rd2101, %rd2099;
	add.s64 	%rd2103, %rd2102, %rd2096;
	add.s64 	%rd6859, %rd2103, %rd2023;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2163,%dummy}, %rd6856;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2164}, %rd6856;
	}
	shf.r.wrap.b32 	%r2165, %r2164, %r2163, 28;
	shf.r.wrap.b32 	%r2166, %r2163, %r2164, 28;
	mov.b64 	%rd2104, {%r2166, %r2165};
	shf.l.wrap.b32 	%r2167, %r2163, %r2164, 30;
	shf.l.wrap.b32 	%r2168, %r2164, %r2163, 30;
	mov.b64 	%rd2105, {%r2168, %r2167};
	xor.b64  	%rd2106, %rd2105, %rd2104;
	shf.l.wrap.b32 	%r2169, %r2163, %r2164, 25;
	shf.l.wrap.b32 	%r2170, %r2164, %r2163, 25;
	mov.b64 	%rd2107, {%r2170, %r2169};
	xor.b64  	%rd2108, %rd2106, %rd2107;
	xor.b64  	%rd2109, %rd6856, %rd2047;
	xor.b64  	%rd2110, %rd6856, %rd6857;
	and.b64  	%rd2111, %rd2110, %rd2109;
	xor.b64  	%rd2112, %rd2111, %rd6856;
	add.s64 	%rd2113, %rd2103, %rd2112;
	add.s64 	%rd6855, %rd2113, %rd2108;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2171,%dummy}, %rd6859;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2172}, %rd6859;
	}
	shf.r.wrap.b32 	%r2173, %r2172, %r2171, 14;
	shf.r.wrap.b32 	%r2174, %r2171, %r2172, 14;
	mov.b64 	%rd2114, {%r2174, %r2173};
	shf.r.wrap.b32 	%r2175, %r2172, %r2171, 18;
	shf.r.wrap.b32 	%r2176, %r2171, %r2172, 18;
	mov.b64 	%rd2115, {%r2176, %r2175};
	xor.b64  	%rd2116, %rd2115, %rd2114;
	shf.l.wrap.b32 	%r2177, %r2171, %r2172, 23;
	shf.l.wrap.b32 	%r2178, %r2172, %r2171, 23;
	mov.b64 	%rd2117, {%r2178, %r2177};
	xor.b64  	%rd2118, %rd2116, %rd2117;
	xor.b64  	%rd2119, %rd6860, %rd6861;
	and.b64  	%rd2120, %rd6859, %rd2119;
	xor.b64  	%rd2121, %rd2120, %rd6861;
	add.s64 	%rd2122, %rd2036, %rd190;
	add.s64 	%rd2123, %rd2122, %rd78;
	add.s64 	%rd2124, %rd2123, %rd2121;
	add.s64 	%rd2125, %rd2124, %rd2118;
	add.s64 	%rd6858, %rd2125, %rd2047;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2179,%dummy}, %rd6855;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2180}, %rd6855;
	}
	shf.r.wrap.b32 	%r2181, %r2180, %r2179, 28;
	shf.r.wrap.b32 	%r2182, %r2179, %r2180, 28;
	mov.b64 	%rd2126, {%r2182, %r2181};
	shf.l.wrap.b32 	%r2183, %r2179, %r2180, 30;
	shf.l.wrap.b32 	%r2184, %r2180, %r2179, 30;
	mov.b64 	%rd2127, {%r2184, %r2183};
	xor.b64  	%rd2128, %rd2127, %rd2126;
	shf.l.wrap.b32 	%r2185, %r2179, %r2180, 25;
	shf.l.wrap.b32 	%r2186, %r2180, %r2179, 25;
	mov.b64 	%rd2129, {%r2186, %r2185};
	xor.b64  	%rd2130, %rd2128, %rd2129;
	xor.b64  	%rd2131, %rd6855, %rd6857;
	xor.b64  	%rd2132, %rd6855, %rd6856;
	and.b64  	%rd2133, %rd2132, %rd2131;
	xor.b64  	%rd2134, %rd2133, %rd6855;
	add.s64 	%rd2135, %rd2125, %rd2134;
	add.s64 	%rd6854, %rd2135, %rd2130;
	mov.u32 	%r11802, 16;
	mov.u64 	%rd6846, %rd190;
	mov.u64 	%rd6847, %rd189;
	mov.u64 	%rd6848, %rd188;
	mov.u64 	%rd6849, %rd187;
	mov.u64 	%rd6850, %rd186;
	mov.u64 	%rd6851, %rd185;
	mov.u64 	%rd6852, %rd184;
	mov.u64 	%rd6853, %rd183;

BB5_348:
	shr.u64 	%rd2136, %rd6847, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2187,%dummy}, %rd6847;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2188}, %rd6847;
	}
	shf.r.wrap.b32 	%r2189, %r2188, %r2187, 19;
	shf.r.wrap.b32 	%r2190, %r2187, %r2188, 19;
	mov.b64 	%rd2137, {%r2190, %r2189};
	xor.b64  	%rd2138, %rd2137, %rd2136;
	shf.l.wrap.b32 	%r2191, %r2187, %r2188, 3;
	shf.l.wrap.b32 	%r2192, %r2188, %r2187, 3;
	mov.b64 	%rd2139, {%r2192, %r2191};
	xor.b64  	%rd2140, %rd2138, %rd2139;
	shr.u64 	%rd2141, %rd6863, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2193,%dummy}, %rd6863;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2194}, %rd6863;
	}
	shf.r.wrap.b32 	%r2195, %r2194, %r2193, 1;
	shf.r.wrap.b32 	%r2196, %r2193, %r2194, 1;
	mov.b64 	%rd2142, {%r2196, %r2195};
	xor.b64  	%rd2143, %rd2142, %rd2141;
	shf.r.wrap.b32 	%r2197, %r2194, %r2193, 8;
	shf.r.wrap.b32 	%r2198, %r2193, %r2194, 8;
	mov.b64 	%rd2144, {%r2198, %r2197};
	xor.b64  	%rd2145, %rd2143, %rd2144;
	add.s64 	%rd2146, %rd6852, %rd6862;
	add.s64 	%rd2147, %rd2146, %rd2140;
	add.s64 	%rd6862, %rd2147, %rd2145;
	shr.u64 	%rd2148, %rd6846, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2199,%dummy}, %rd6846;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2200}, %rd6846;
	}
	shf.r.wrap.b32 	%r2201, %r2200, %r2199, 19;
	shf.r.wrap.b32 	%r2202, %r2199, %r2200, 19;
	mov.b64 	%rd2149, {%r2202, %r2201};
	xor.b64  	%rd2150, %rd2149, %rd2148;
	shf.l.wrap.b32 	%r2203, %r2199, %r2200, 3;
	shf.l.wrap.b32 	%r2204, %r2200, %r2199, 3;
	mov.b64 	%rd2151, {%r2204, %r2203};
	xor.b64  	%rd2152, %rd2150, %rd2151;
	shr.u64 	%rd2153, %rd6864, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2205,%dummy}, %rd6864;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2206}, %rd6864;
	}
	shf.r.wrap.b32 	%r2207, %r2206, %r2205, 1;
	shf.r.wrap.b32 	%r2208, %r2205, %r2206, 1;
	mov.b64 	%rd2154, {%r2208, %r2207};
	xor.b64  	%rd2155, %rd2154, %rd2153;
	shf.r.wrap.b32 	%r2209, %r2206, %r2205, 8;
	shf.r.wrap.b32 	%r2210, %r2205, %r2206, 8;
	mov.b64 	%rd2156, {%r2210, %r2209};
	xor.b64  	%rd2157, %rd2155, %rd2156;
	add.s64 	%rd2158, %rd6851, %rd6863;
	add.s64 	%rd2159, %rd2158, %rd2152;
	add.s64 	%rd6863, %rd2159, %rd2157;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2211,%dummy}, %rd6862;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2212}, %rd6862;
	}
	shf.r.wrap.b32 	%r2213, %r2212, %r2211, 19;
	shf.r.wrap.b32 	%r2214, %r2211, %r2212, 19;
	mov.b64 	%rd2160, {%r2214, %r2213};
	shf.l.wrap.b32 	%r2215, %r2211, %r2212, 3;
	shf.l.wrap.b32 	%r2216, %r2212, %r2211, 3;
	mov.b64 	%rd2161, {%r2216, %r2215};
	shr.u64 	%rd2162, %rd6862, 6;
	xor.b64  	%rd2163, %rd2160, %rd2162;
	xor.b64  	%rd2164, %rd2163, %rd2161;
	shr.u64 	%rd2165, %rd6865, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2217,%dummy}, %rd6865;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2218}, %rd6865;
	}
	shf.r.wrap.b32 	%r2219, %r2218, %r2217, 1;
	shf.r.wrap.b32 	%r2220, %r2217, %r2218, 1;
	mov.b64 	%rd2166, {%r2220, %r2219};
	xor.b64  	%rd2167, %rd2166, %rd2165;
	shf.r.wrap.b32 	%r2221, %r2218, %r2217, 8;
	shf.r.wrap.b32 	%r2222, %r2217, %r2218, 8;
	mov.b64 	%rd2168, {%r2222, %r2221};
	xor.b64  	%rd2169, %rd2167, %rd2168;
	add.s64 	%rd2170, %rd6850, %rd6864;
	add.s64 	%rd2171, %rd2170, %rd2164;
	add.s64 	%rd6864, %rd2171, %rd2169;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2223,%dummy}, %rd6863;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2224}, %rd6863;
	}
	shf.r.wrap.b32 	%r2225, %r2224, %r2223, 19;
	shf.r.wrap.b32 	%r2226, %r2223, %r2224, 19;
	mov.b64 	%rd2172, {%r2226, %r2225};
	shf.l.wrap.b32 	%r2227, %r2223, %r2224, 3;
	shf.l.wrap.b32 	%r2228, %r2224, %r2223, 3;
	mov.b64 	%rd2173, {%r2228, %r2227};
	shr.u64 	%rd2174, %rd6863, 6;
	xor.b64  	%rd2175, %rd2172, %rd2174;
	xor.b64  	%rd2176, %rd2175, %rd2173;
	shr.u64 	%rd2177, %rd6866, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2229,%dummy}, %rd6866;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2230}, %rd6866;
	}
	shf.r.wrap.b32 	%r2231, %r2230, %r2229, 1;
	shf.r.wrap.b32 	%r2232, %r2229, %r2230, 1;
	mov.b64 	%rd2178, {%r2232, %r2231};
	xor.b64  	%rd2179, %rd2178, %rd2177;
	shf.r.wrap.b32 	%r2233, %r2230, %r2229, 8;
	shf.r.wrap.b32 	%r2234, %r2229, %r2230, 8;
	mov.b64 	%rd2180, {%r2234, %r2233};
	xor.b64  	%rd2181, %rd2179, %rd2180;
	add.s64 	%rd2182, %rd6849, %rd6865;
	add.s64 	%rd2183, %rd2182, %rd2176;
	add.s64 	%rd6865, %rd2183, %rd2181;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2235,%dummy}, %rd6864;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2236}, %rd6864;
	}
	shf.r.wrap.b32 	%r2237, %r2236, %r2235, 19;
	shf.r.wrap.b32 	%r2238, %r2235, %r2236, 19;
	mov.b64 	%rd2184, {%r2238, %r2237};
	shf.l.wrap.b32 	%r2239, %r2235, %r2236, 3;
	shf.l.wrap.b32 	%r2240, %r2236, %r2235, 3;
	mov.b64 	%rd2185, {%r2240, %r2239};
	shr.u64 	%rd2186, %rd6864, 6;
	xor.b64  	%rd2187, %rd2184, %rd2186;
	xor.b64  	%rd2188, %rd2187, %rd2185;
	shr.u64 	%rd2189, %rd6867, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2241,%dummy}, %rd6867;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2242}, %rd6867;
	}
	shf.r.wrap.b32 	%r2243, %r2242, %r2241, 1;
	shf.r.wrap.b32 	%r2244, %r2241, %r2242, 1;
	mov.b64 	%rd2190, {%r2244, %r2243};
	xor.b64  	%rd2191, %rd2190, %rd2189;
	shf.r.wrap.b32 	%r2245, %r2242, %r2241, 8;
	shf.r.wrap.b32 	%r2246, %r2241, %r2242, 8;
	mov.b64 	%rd2192, {%r2246, %r2245};
	xor.b64  	%rd2193, %rd2191, %rd2192;
	add.s64 	%rd2194, %rd6848, %rd6866;
	add.s64 	%rd2195, %rd2194, %rd2188;
	add.s64 	%rd6866, %rd2195, %rd2193;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2247,%dummy}, %rd6865;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2248}, %rd6865;
	}
	shf.r.wrap.b32 	%r2249, %r2248, %r2247, 19;
	shf.r.wrap.b32 	%r2250, %r2247, %r2248, 19;
	mov.b64 	%rd2196, {%r2250, %r2249};
	shf.l.wrap.b32 	%r2251, %r2247, %r2248, 3;
	shf.l.wrap.b32 	%r2252, %r2248, %r2247, 3;
	mov.b64 	%rd2197, {%r2252, %r2251};
	shr.u64 	%rd2198, %rd6865, 6;
	xor.b64  	%rd2199, %rd2196, %rd2198;
	xor.b64  	%rd2200, %rd2199, %rd2197;
	shr.u64 	%rd2201, %rd6868, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2253,%dummy}, %rd6868;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2254}, %rd6868;
	}
	shf.r.wrap.b32 	%r2255, %r2254, %r2253, 1;
	shf.r.wrap.b32 	%r2256, %r2253, %r2254, 1;
	mov.b64 	%rd2202, {%r2256, %r2255};
	xor.b64  	%rd2203, %rd2202, %rd2201;
	shf.r.wrap.b32 	%r2257, %r2254, %r2253, 8;
	shf.r.wrap.b32 	%r2258, %r2253, %r2254, 8;
	mov.b64 	%rd2204, {%r2258, %r2257};
	xor.b64  	%rd2205, %rd2203, %rd2204;
	add.s64 	%rd2206, %rd6847, %rd6867;
	add.s64 	%rd2207, %rd2206, %rd2200;
	add.s64 	%rd6867, %rd2207, %rd2205;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2259,%dummy}, %rd6866;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2260}, %rd6866;
	}
	shf.r.wrap.b32 	%r2261, %r2260, %r2259, 19;
	shf.r.wrap.b32 	%r2262, %r2259, %r2260, 19;
	mov.b64 	%rd2208, {%r2262, %r2261};
	shf.l.wrap.b32 	%r2263, %r2259, %r2260, 3;
	shf.l.wrap.b32 	%r2264, %r2260, %r2259, 3;
	mov.b64 	%rd2209, {%r2264, %r2263};
	shr.u64 	%rd2210, %rd6866, 6;
	xor.b64  	%rd2211, %rd2208, %rd2210;
	xor.b64  	%rd2212, %rd2211, %rd2209;
	shr.u64 	%rd2213, %rd6869, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2265,%dummy}, %rd6869;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2266}, %rd6869;
	}
	shf.r.wrap.b32 	%r2267, %r2266, %r2265, 1;
	shf.r.wrap.b32 	%r2268, %r2265, %r2266, 1;
	mov.b64 	%rd2214, {%r2268, %r2267};
	xor.b64  	%rd2215, %rd2214, %rd2213;
	shf.r.wrap.b32 	%r2269, %r2266, %r2265, 8;
	shf.r.wrap.b32 	%r2270, %r2265, %r2266, 8;
	mov.b64 	%rd2216, {%r2270, %r2269};
	xor.b64  	%rd2217, %rd2215, %rd2216;
	add.s64 	%rd2218, %rd6846, %rd6868;
	add.s64 	%rd2219, %rd2218, %rd2212;
	add.s64 	%rd6868, %rd2219, %rd2217;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2271,%dummy}, %rd6867;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2272}, %rd6867;
	}
	shf.r.wrap.b32 	%r2273, %r2272, %r2271, 19;
	shf.r.wrap.b32 	%r2274, %r2271, %r2272, 19;
	mov.b64 	%rd2220, {%r2274, %r2273};
	shf.l.wrap.b32 	%r2275, %r2271, %r2272, 3;
	shf.l.wrap.b32 	%r2276, %r2272, %r2271, 3;
	mov.b64 	%rd2221, {%r2276, %r2275};
	shr.u64 	%rd2222, %rd6867, 6;
	xor.b64  	%rd2223, %rd2220, %rd2222;
	xor.b64  	%rd2224, %rd2223, %rd2221;
	shr.u64 	%rd2225, %rd6853, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2277,%dummy}, %rd6853;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2278}, %rd6853;
	}
	shf.r.wrap.b32 	%r2279, %r2278, %r2277, 1;
	shf.r.wrap.b32 	%r2280, %r2277, %r2278, 1;
	mov.b64 	%rd2226, {%r2280, %r2279};
	xor.b64  	%rd2227, %rd2226, %rd2225;
	shf.r.wrap.b32 	%r2281, %r2278, %r2277, 8;
	shf.r.wrap.b32 	%r2282, %r2277, %r2278, 8;
	mov.b64 	%rd2228, {%r2282, %r2281};
	xor.b64  	%rd2229, %rd2227, %rd2228;
	add.s64 	%rd2230, %rd6862, %rd6869;
	add.s64 	%rd2231, %rd2230, %rd2224;
	add.s64 	%rd6869, %rd2231, %rd2229;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2283,%dummy}, %rd6868;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2284}, %rd6868;
	}
	shf.r.wrap.b32 	%r2285, %r2284, %r2283, 19;
	shf.r.wrap.b32 	%r2286, %r2283, %r2284, 19;
	mov.b64 	%rd2232, {%r2286, %r2285};
	shf.l.wrap.b32 	%r2287, %r2283, %r2284, 3;
	shf.l.wrap.b32 	%r2288, %r2284, %r2283, 3;
	mov.b64 	%rd2233, {%r2288, %r2287};
	shr.u64 	%rd2234, %rd6868, 6;
	xor.b64  	%rd2235, %rd2232, %rd2234;
	xor.b64  	%rd2236, %rd2235, %rd2233;
	shr.u64 	%rd2237, %rd6852, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2289,%dummy}, %rd6852;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2290}, %rd6852;
	}
	shf.r.wrap.b32 	%r2291, %r2290, %r2289, 1;
	shf.r.wrap.b32 	%r2292, %r2289, %r2290, 1;
	mov.b64 	%rd2238, {%r2292, %r2291};
	xor.b64  	%rd2239, %rd2238, %rd2237;
	shf.r.wrap.b32 	%r2293, %r2290, %r2289, 8;
	shf.r.wrap.b32 	%r2294, %r2289, %r2290, 8;
	mov.b64 	%rd2240, {%r2294, %r2293};
	xor.b64  	%rd2241, %rd2239, %rd2240;
	add.s64 	%rd2242, %rd6863, %rd6853;
	add.s64 	%rd2243, %rd2242, %rd2236;
	add.s64 	%rd6853, %rd2243, %rd2241;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2295,%dummy}, %rd6869;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2296}, %rd6869;
	}
	shf.r.wrap.b32 	%r2297, %r2296, %r2295, 19;
	shf.r.wrap.b32 	%r2298, %r2295, %r2296, 19;
	mov.b64 	%rd2244, {%r2298, %r2297};
	shf.l.wrap.b32 	%r2299, %r2295, %r2296, 3;
	shf.l.wrap.b32 	%r2300, %r2296, %r2295, 3;
	mov.b64 	%rd2245, {%r2300, %r2299};
	shr.u64 	%rd2246, %rd6869, 6;
	xor.b64  	%rd2247, %rd2244, %rd2246;
	xor.b64  	%rd2248, %rd2247, %rd2245;
	shr.u64 	%rd2249, %rd6851, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2301,%dummy}, %rd6851;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2302}, %rd6851;
	}
	shf.r.wrap.b32 	%r2303, %r2302, %r2301, 1;
	shf.r.wrap.b32 	%r2304, %r2301, %r2302, 1;
	mov.b64 	%rd2250, {%r2304, %r2303};
	xor.b64  	%rd2251, %rd2250, %rd2249;
	shf.r.wrap.b32 	%r2305, %r2302, %r2301, 8;
	shf.r.wrap.b32 	%r2306, %r2301, %r2302, 8;
	mov.b64 	%rd2252, {%r2306, %r2305};
	xor.b64  	%rd2253, %rd2251, %rd2252;
	add.s64 	%rd2254, %rd6864, %rd6852;
	add.s64 	%rd2255, %rd2254, %rd2248;
	add.s64 	%rd6852, %rd2255, %rd2253;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2307,%dummy}, %rd6853;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2308}, %rd6853;
	}
	shf.r.wrap.b32 	%r2309, %r2308, %r2307, 19;
	shf.r.wrap.b32 	%r2310, %r2307, %r2308, 19;
	mov.b64 	%rd2256, {%r2310, %r2309};
	shf.l.wrap.b32 	%r2311, %r2307, %r2308, 3;
	shf.l.wrap.b32 	%r2312, %r2308, %r2307, 3;
	mov.b64 	%rd2257, {%r2312, %r2311};
	shr.u64 	%rd2258, %rd6853, 6;
	xor.b64  	%rd2259, %rd2256, %rd2258;
	xor.b64  	%rd2260, %rd2259, %rd2257;
	shr.u64 	%rd2261, %rd6850, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2313,%dummy}, %rd6850;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2314}, %rd6850;
	}
	shf.r.wrap.b32 	%r2315, %r2314, %r2313, 1;
	shf.r.wrap.b32 	%r2316, %r2313, %r2314, 1;
	mov.b64 	%rd2262, {%r2316, %r2315};
	xor.b64  	%rd2263, %rd2262, %rd2261;
	shf.r.wrap.b32 	%r2317, %r2314, %r2313, 8;
	shf.r.wrap.b32 	%r2318, %r2313, %r2314, 8;
	mov.b64 	%rd2264, {%r2318, %r2317};
	xor.b64  	%rd2265, %rd2263, %rd2264;
	add.s64 	%rd2266, %rd6865, %rd6851;
	add.s64 	%rd2267, %rd2266, %rd2260;
	add.s64 	%rd6851, %rd2267, %rd2265;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2319,%dummy}, %rd6852;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2320}, %rd6852;
	}
	shf.r.wrap.b32 	%r2321, %r2320, %r2319, 19;
	shf.r.wrap.b32 	%r2322, %r2319, %r2320, 19;
	mov.b64 	%rd2268, {%r2322, %r2321};
	shf.l.wrap.b32 	%r2323, %r2319, %r2320, 3;
	shf.l.wrap.b32 	%r2324, %r2320, %r2319, 3;
	mov.b64 	%rd2269, {%r2324, %r2323};
	shr.u64 	%rd2270, %rd6852, 6;
	xor.b64  	%rd2271, %rd2268, %rd2270;
	xor.b64  	%rd2272, %rd2271, %rd2269;
	shr.u64 	%rd2273, %rd6849, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2325,%dummy}, %rd6849;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2326}, %rd6849;
	}
	shf.r.wrap.b32 	%r2327, %r2326, %r2325, 1;
	shf.r.wrap.b32 	%r2328, %r2325, %r2326, 1;
	mov.b64 	%rd2274, {%r2328, %r2327};
	xor.b64  	%rd2275, %rd2274, %rd2273;
	shf.r.wrap.b32 	%r2329, %r2326, %r2325, 8;
	shf.r.wrap.b32 	%r2330, %r2325, %r2326, 8;
	mov.b64 	%rd2276, {%r2330, %r2329};
	xor.b64  	%rd2277, %rd2275, %rd2276;
	add.s64 	%rd2278, %rd6866, %rd6850;
	add.s64 	%rd2279, %rd2278, %rd2272;
	add.s64 	%rd6850, %rd2279, %rd2277;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2331,%dummy}, %rd6851;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2332}, %rd6851;
	}
	shf.r.wrap.b32 	%r2333, %r2332, %r2331, 19;
	shf.r.wrap.b32 	%r2334, %r2331, %r2332, 19;
	mov.b64 	%rd2280, {%r2334, %r2333};
	shf.l.wrap.b32 	%r2335, %r2331, %r2332, 3;
	shf.l.wrap.b32 	%r2336, %r2332, %r2331, 3;
	mov.b64 	%rd2281, {%r2336, %r2335};
	shr.u64 	%rd2282, %rd6851, 6;
	xor.b64  	%rd2283, %rd2280, %rd2282;
	xor.b64  	%rd2284, %rd2283, %rd2281;
	shr.u64 	%rd2285, %rd6848, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2337,%dummy}, %rd6848;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2338}, %rd6848;
	}
	shf.r.wrap.b32 	%r2339, %r2338, %r2337, 1;
	shf.r.wrap.b32 	%r2340, %r2337, %r2338, 1;
	mov.b64 	%rd2286, {%r2340, %r2339};
	xor.b64  	%rd2287, %rd2286, %rd2285;
	shf.r.wrap.b32 	%r2341, %r2338, %r2337, 8;
	shf.r.wrap.b32 	%r2342, %r2337, %r2338, 8;
	mov.b64 	%rd2288, {%r2342, %r2341};
	xor.b64  	%rd2289, %rd2287, %rd2288;
	add.s64 	%rd2290, %rd6867, %rd6849;
	add.s64 	%rd2291, %rd2290, %rd2284;
	add.s64 	%rd6849, %rd2291, %rd2289;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2343,%dummy}, %rd6850;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2344}, %rd6850;
	}
	shf.r.wrap.b32 	%r2345, %r2344, %r2343, 19;
	shf.r.wrap.b32 	%r2346, %r2343, %r2344, 19;
	mov.b64 	%rd2292, {%r2346, %r2345};
	shf.l.wrap.b32 	%r2347, %r2343, %r2344, 3;
	shf.l.wrap.b32 	%r2348, %r2344, %r2343, 3;
	mov.b64 	%rd2293, {%r2348, %r2347};
	shr.u64 	%rd2294, %rd6850, 6;
	xor.b64  	%rd2295, %rd2292, %rd2294;
	xor.b64  	%rd2296, %rd2295, %rd2293;
	shr.u64 	%rd2297, %rd6847, 7;
	shf.r.wrap.b32 	%r2349, %r2188, %r2187, 1;
	shf.r.wrap.b32 	%r2350, %r2187, %r2188, 1;
	mov.b64 	%rd2298, {%r2350, %r2349};
	xor.b64  	%rd2299, %rd2298, %rd2297;
	shf.r.wrap.b32 	%r2351, %r2188, %r2187, 8;
	shf.r.wrap.b32 	%r2352, %r2187, %r2188, 8;
	mov.b64 	%rd2300, {%r2352, %r2351};
	xor.b64  	%rd2301, %rd2299, %rd2300;
	add.s64 	%rd2302, %rd6868, %rd6848;
	add.s64 	%rd2303, %rd2302, %rd2296;
	add.s64 	%rd6848, %rd2303, %rd2301;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2353,%dummy}, %rd6849;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2354}, %rd6849;
	}
	shf.r.wrap.b32 	%r2355, %r2354, %r2353, 19;
	shf.r.wrap.b32 	%r2356, %r2353, %r2354, 19;
	mov.b64 	%rd2304, {%r2356, %r2355};
	shf.l.wrap.b32 	%r2357, %r2353, %r2354, 3;
	shf.l.wrap.b32 	%r2358, %r2354, %r2353, 3;
	mov.b64 	%rd2305, {%r2358, %r2357};
	shr.u64 	%rd2306, %rd6849, 6;
	xor.b64  	%rd2307, %rd2304, %rd2306;
	xor.b64  	%rd2308, %rd2307, %rd2305;
	shr.u64 	%rd2309, %rd6846, 7;
	shf.r.wrap.b32 	%r2359, %r2200, %r2199, 1;
	shf.r.wrap.b32 	%r2360, %r2199, %r2200, 1;
	mov.b64 	%rd2310, {%r2360, %r2359};
	xor.b64  	%rd2311, %rd2310, %rd2309;
	shf.r.wrap.b32 	%r2361, %r2200, %r2199, 8;
	shf.r.wrap.b32 	%r2362, %r2199, %r2200, 8;
	mov.b64 	%rd2312, {%r2362, %r2361};
	xor.b64  	%rd2313, %rd2311, %rd2312;
	add.s64 	%rd2314, %rd6869, %rd6847;
	add.s64 	%rd2315, %rd2314, %rd2308;
	add.s64 	%rd6847, %rd2315, %rd2313;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2363,%dummy}, %rd6848;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2364}, %rd6848;
	}
	shf.r.wrap.b32 	%r2365, %r2364, %r2363, 19;
	shf.r.wrap.b32 	%r2366, %r2363, %r2364, 19;
	mov.b64 	%rd2316, {%r2366, %r2365};
	shf.l.wrap.b32 	%r2367, %r2363, %r2364, 3;
	shf.l.wrap.b32 	%r2368, %r2364, %r2363, 3;
	mov.b64 	%rd2317, {%r2368, %r2367};
	shr.u64 	%rd2318, %rd6848, 6;
	xor.b64  	%rd2319, %rd2316, %rd2318;
	xor.b64  	%rd2320, %rd2319, %rd2317;
	shf.r.wrap.b32 	%r2369, %r2212, %r2211, 1;
	shf.r.wrap.b32 	%r2370, %r2211, %r2212, 1;
	mov.b64 	%rd2321, {%r2370, %r2369};
	shf.r.wrap.b32 	%r2371, %r2212, %r2211, 8;
	shf.r.wrap.b32 	%r2372, %r2211, %r2212, 8;
	mov.b64 	%rd2322, {%r2372, %r2371};
	shr.u64 	%rd2323, %rd6862, 7;
	xor.b64  	%rd2324, %rd2321, %rd2323;
	xor.b64  	%rd2325, %rd2324, %rd2322;
	add.s64 	%rd2326, %rd6853, %rd6846;
	add.s64 	%rd2327, %rd2326, %rd2320;
	add.s64 	%rd6846, %rd2327, %rd2325;
	mul.wide.s32 	%rd2328, %r11802, 8;
	mov.u64 	%rd2329, k_sha512;
	add.s64 	%rd2330, %rd2329, %rd2328;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2373,%dummy}, %rd6858;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2374}, %rd6858;
	}
	shf.r.wrap.b32 	%r2375, %r2374, %r2373, 18;
	shf.r.wrap.b32 	%r2376, %r2373, %r2374, 18;
	mov.b64 	%rd2331, {%r2376, %r2375};
	shf.r.wrap.b32 	%r2377, %r2374, %r2373, 14;
	shf.r.wrap.b32 	%r2378, %r2373, %r2374, 14;
	mov.b64 	%rd2332, {%r2378, %r2377};
	xor.b64  	%rd2333, %rd2331, %rd2332;
	shf.l.wrap.b32 	%r2379, %r2373, %r2374, 23;
	shf.l.wrap.b32 	%r2380, %r2374, %r2373, 23;
	mov.b64 	%rd2334, {%r2380, %r2379};
	xor.b64  	%rd2335, %rd2333, %rd2334;
	xor.b64  	%rd2336, %rd6859, %rd6860;
	and.b64  	%rd2337, %rd2336, %rd6858;
	xor.b64  	%rd2338, %rd2337, %rd6860;
	add.s64 	%rd2339, %rd2338, %rd6861;
	add.s64 	%rd2340, %rd2339, %rd6862;
	ld.const.u64 	%rd2341, [%rd2330];
	add.s64 	%rd2342, %rd2340, %rd2341;
	add.s64 	%rd2343, %rd2342, %rd2335;
	add.s64 	%rd2344, %rd2343, %rd6857;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2381}, %rd6854;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2382,%dummy}, %rd6854;
	}
	shf.l.wrap.b32 	%r2383, %r2382, %r2381, 30;
	shf.l.wrap.b32 	%r2384, %r2381, %r2382, 30;
	mov.b64 	%rd2345, {%r2384, %r2383};
	shf.r.wrap.b32 	%r2385, %r2381, %r2382, 28;
	shf.r.wrap.b32 	%r2386, %r2382, %r2381, 28;
	mov.b64 	%rd2346, {%r2386, %r2385};
	xor.b64  	%rd2347, %rd2345, %rd2346;
	shf.l.wrap.b32 	%r2387, %r2382, %r2381, 25;
	shf.l.wrap.b32 	%r2388, %r2381, %r2382, 25;
	mov.b64 	%rd2348, {%r2388, %r2387};
	xor.b64  	%rd2349, %rd2347, %rd2348;
	xor.b64  	%rd2350, %rd6854, %rd6855;
	xor.b64  	%rd2351, %rd6854, %rd6856;
	and.b64  	%rd2352, %rd2350, %rd2351;
	xor.b64  	%rd2353, %rd2352, %rd6854;
	add.s64 	%rd2354, %rd2343, %rd2353;
	add.s64 	%rd2355, %rd2354, %rd2349;
	add.s32 	%r2389, %r11802, 1;
	mul.wide.s32 	%rd2356, %r2389, 8;
	add.s64 	%rd2357, %rd2329, %rd2356;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2390,%dummy}, %rd2344;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2391}, %rd2344;
	}
	shf.r.wrap.b32 	%r2392, %r2391, %r2390, 14;
	shf.r.wrap.b32 	%r2393, %r2390, %r2391, 14;
	mov.b64 	%rd2358, {%r2393, %r2392};
	shf.r.wrap.b32 	%r2394, %r2391, %r2390, 18;
	shf.r.wrap.b32 	%r2395, %r2390, %r2391, 18;
	mov.b64 	%rd2359, {%r2395, %r2394};
	xor.b64  	%rd2360, %rd2359, %rd2358;
	shf.l.wrap.b32 	%r2396, %r2390, %r2391, 23;
	shf.l.wrap.b32 	%r2397, %r2391, %r2390, 23;
	mov.b64 	%rd2361, {%r2397, %r2396};
	xor.b64  	%rd2362, %rd2360, %rd2361;
	xor.b64  	%rd2363, %rd6858, %rd6859;
	and.b64  	%rd2364, %rd2344, %rd2363;
	xor.b64  	%rd2365, %rd2364, %rd6859;
	add.s64 	%rd2366, %rd6863, %rd6860;
	ld.const.u64 	%rd2367, [%rd2357];
	add.s64 	%rd2368, %rd2366, %rd2367;
	add.s64 	%rd2369, %rd2368, %rd2365;
	add.s64 	%rd2370, %rd2369, %rd2362;
	add.s64 	%rd2371, %rd2370, %rd6856;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2398,%dummy}, %rd2355;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2399}, %rd2355;
	}
	shf.r.wrap.b32 	%r2400, %r2399, %r2398, 28;
	shf.r.wrap.b32 	%r2401, %r2398, %r2399, 28;
	mov.b64 	%rd2372, {%r2401, %r2400};
	shf.l.wrap.b32 	%r2402, %r2398, %r2399, 30;
	shf.l.wrap.b32 	%r2403, %r2399, %r2398, 30;
	mov.b64 	%rd2373, {%r2403, %r2402};
	xor.b64  	%rd2374, %rd2373, %rd2372;
	shf.l.wrap.b32 	%r2404, %r2398, %r2399, 25;
	shf.l.wrap.b32 	%r2405, %r2399, %r2398, 25;
	mov.b64 	%rd2375, {%r2405, %r2404};
	xor.b64  	%rd2376, %rd2374, %rd2375;
	xor.b64  	%rd2377, %rd2355, %rd6855;
	xor.b64  	%rd2378, %rd2355, %rd6854;
	and.b64  	%rd2379, %rd2378, %rd2377;
	xor.b64  	%rd2380, %rd2379, %rd2355;
	add.s64 	%rd2381, %rd2370, %rd2380;
	add.s64 	%rd2382, %rd2381, %rd2376;
	add.s32 	%r2406, %r11802, 2;
	mul.wide.s32 	%rd2383, %r2406, 8;
	add.s64 	%rd2384, %rd2329, %rd2383;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2407,%dummy}, %rd2371;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2408}, %rd2371;
	}
	shf.r.wrap.b32 	%r2409, %r2408, %r2407, 14;
	shf.r.wrap.b32 	%r2410, %r2407, %r2408, 14;
	mov.b64 	%rd2385, {%r2410, %r2409};
	shf.r.wrap.b32 	%r2411, %r2408, %r2407, 18;
	shf.r.wrap.b32 	%r2412, %r2407, %r2408, 18;
	mov.b64 	%rd2386, {%r2412, %r2411};
	xor.b64  	%rd2387, %rd2386, %rd2385;
	shf.l.wrap.b32 	%r2413, %r2407, %r2408, 23;
	shf.l.wrap.b32 	%r2414, %r2408, %r2407, 23;
	mov.b64 	%rd2388, {%r2414, %r2413};
	xor.b64  	%rd2389, %rd2387, %rd2388;
	xor.b64  	%rd2390, %rd2344, %rd6858;
	and.b64  	%rd2391, %rd2371, %rd2390;
	xor.b64  	%rd2392, %rd2391, %rd6858;
	add.s64 	%rd2393, %rd6864, %rd6859;
	ld.const.u64 	%rd2394, [%rd2384];
	add.s64 	%rd2395, %rd2393, %rd2394;
	add.s64 	%rd2396, %rd2395, %rd2392;
	add.s64 	%rd2397, %rd2396, %rd2389;
	add.s64 	%rd2398, %rd2397, %rd6855;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2415,%dummy}, %rd2382;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2416}, %rd2382;
	}
	shf.r.wrap.b32 	%r2417, %r2416, %r2415, 28;
	shf.r.wrap.b32 	%r2418, %r2415, %r2416, 28;
	mov.b64 	%rd2399, {%r2418, %r2417};
	shf.l.wrap.b32 	%r2419, %r2415, %r2416, 30;
	shf.l.wrap.b32 	%r2420, %r2416, %r2415, 30;
	mov.b64 	%rd2400, {%r2420, %r2419};
	xor.b64  	%rd2401, %rd2400, %rd2399;
	shf.l.wrap.b32 	%r2421, %r2415, %r2416, 25;
	shf.l.wrap.b32 	%r2422, %r2416, %r2415, 25;
	mov.b64 	%rd2402, {%r2422, %r2421};
	xor.b64  	%rd2403, %rd2401, %rd2402;
	xor.b64  	%rd2404, %rd2382, %rd6854;
	xor.b64  	%rd2405, %rd2382, %rd2355;
	and.b64  	%rd2406, %rd2405, %rd2404;
	xor.b64  	%rd2407, %rd2406, %rd2382;
	add.s64 	%rd2408, %rd2397, %rd2407;
	add.s64 	%rd2409, %rd2408, %rd2403;
	add.s32 	%r2423, %r11802, 3;
	mul.wide.s32 	%rd2410, %r2423, 8;
	add.s64 	%rd2411, %rd2329, %rd2410;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2424,%dummy}, %rd2398;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2425}, %rd2398;
	}
	shf.r.wrap.b32 	%r2426, %r2425, %r2424, 14;
	shf.r.wrap.b32 	%r2427, %r2424, %r2425, 14;
	mov.b64 	%rd2412, {%r2427, %r2426};
	shf.r.wrap.b32 	%r2428, %r2425, %r2424, 18;
	shf.r.wrap.b32 	%r2429, %r2424, %r2425, 18;
	mov.b64 	%rd2413, {%r2429, %r2428};
	xor.b64  	%rd2414, %rd2413, %rd2412;
	shf.l.wrap.b32 	%r2430, %r2424, %r2425, 23;
	shf.l.wrap.b32 	%r2431, %r2425, %r2424, 23;
	mov.b64 	%rd2415, {%r2431, %r2430};
	xor.b64  	%rd2416, %rd2414, %rd2415;
	xor.b64  	%rd2417, %rd2371, %rd2344;
	and.b64  	%rd2418, %rd2398, %rd2417;
	xor.b64  	%rd2419, %rd2418, %rd2344;
	add.s64 	%rd2420, %rd6865, %rd6858;
	ld.const.u64 	%rd2421, [%rd2411];
	add.s64 	%rd2422, %rd2420, %rd2421;
	add.s64 	%rd2423, %rd2422, %rd2419;
	add.s64 	%rd2424, %rd2423, %rd2416;
	add.s64 	%rd2425, %rd2424, %rd6854;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2432,%dummy}, %rd2409;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2433}, %rd2409;
	}
	shf.r.wrap.b32 	%r2434, %r2433, %r2432, 28;
	shf.r.wrap.b32 	%r2435, %r2432, %r2433, 28;
	mov.b64 	%rd2426, {%r2435, %r2434};
	shf.l.wrap.b32 	%r2436, %r2432, %r2433, 30;
	shf.l.wrap.b32 	%r2437, %r2433, %r2432, 30;
	mov.b64 	%rd2427, {%r2437, %r2436};
	xor.b64  	%rd2428, %rd2427, %rd2426;
	shf.l.wrap.b32 	%r2438, %r2432, %r2433, 25;
	shf.l.wrap.b32 	%r2439, %r2433, %r2432, 25;
	mov.b64 	%rd2429, {%r2439, %r2438};
	xor.b64  	%rd2430, %rd2428, %rd2429;
	xor.b64  	%rd2431, %rd2409, %rd2355;
	xor.b64  	%rd2432, %rd2409, %rd2382;
	and.b64  	%rd2433, %rd2432, %rd2431;
	xor.b64  	%rd2434, %rd2433, %rd2409;
	add.s64 	%rd2435, %rd2424, %rd2434;
	add.s64 	%rd2436, %rd2435, %rd2430;
	add.s32 	%r2440, %r11802, 4;
	mul.wide.s32 	%rd2437, %r2440, 8;
	add.s64 	%rd2438, %rd2329, %rd2437;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2441,%dummy}, %rd2425;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2442}, %rd2425;
	}
	shf.r.wrap.b32 	%r2443, %r2442, %r2441, 14;
	shf.r.wrap.b32 	%r2444, %r2441, %r2442, 14;
	mov.b64 	%rd2439, {%r2444, %r2443};
	shf.r.wrap.b32 	%r2445, %r2442, %r2441, 18;
	shf.r.wrap.b32 	%r2446, %r2441, %r2442, 18;
	mov.b64 	%rd2440, {%r2446, %r2445};
	xor.b64  	%rd2441, %rd2440, %rd2439;
	shf.l.wrap.b32 	%r2447, %r2441, %r2442, 23;
	shf.l.wrap.b32 	%r2448, %r2442, %r2441, 23;
	mov.b64 	%rd2442, {%r2448, %r2447};
	xor.b64  	%rd2443, %rd2441, %rd2442;
	xor.b64  	%rd2444, %rd2398, %rd2371;
	and.b64  	%rd2445, %rd2425, %rd2444;
	xor.b64  	%rd2446, %rd2445, %rd2371;
	add.s64 	%rd2447, %rd2344, %rd6866;
	ld.const.u64 	%rd2448, [%rd2438];
	add.s64 	%rd2449, %rd2447, %rd2448;
	add.s64 	%rd2450, %rd2449, %rd2446;
	add.s64 	%rd2451, %rd2450, %rd2443;
	add.s64 	%rd2452, %rd2451, %rd2355;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2449,%dummy}, %rd2436;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2450}, %rd2436;
	}
	shf.r.wrap.b32 	%r2451, %r2450, %r2449, 28;
	shf.r.wrap.b32 	%r2452, %r2449, %r2450, 28;
	mov.b64 	%rd2453, {%r2452, %r2451};
	shf.l.wrap.b32 	%r2453, %r2449, %r2450, 30;
	shf.l.wrap.b32 	%r2454, %r2450, %r2449, 30;
	mov.b64 	%rd2454, {%r2454, %r2453};
	xor.b64  	%rd2455, %rd2454, %rd2453;
	shf.l.wrap.b32 	%r2455, %r2449, %r2450, 25;
	shf.l.wrap.b32 	%r2456, %r2450, %r2449, 25;
	mov.b64 	%rd2456, {%r2456, %r2455};
	xor.b64  	%rd2457, %rd2455, %rd2456;
	xor.b64  	%rd2458, %rd2436, %rd2382;
	xor.b64  	%rd2459, %rd2436, %rd2409;
	and.b64  	%rd2460, %rd2459, %rd2458;
	xor.b64  	%rd2461, %rd2460, %rd2436;
	add.s64 	%rd2462, %rd2451, %rd2461;
	add.s64 	%rd2463, %rd2462, %rd2457;
	add.s32 	%r2457, %r11802, 5;
	mul.wide.s32 	%rd2464, %r2457, 8;
	add.s64 	%rd2465, %rd2329, %rd2464;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2458,%dummy}, %rd2452;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2459}, %rd2452;
	}
	shf.r.wrap.b32 	%r2460, %r2459, %r2458, 14;
	shf.r.wrap.b32 	%r2461, %r2458, %r2459, 14;
	mov.b64 	%rd2466, {%r2461, %r2460};
	shf.r.wrap.b32 	%r2462, %r2459, %r2458, 18;
	shf.r.wrap.b32 	%r2463, %r2458, %r2459, 18;
	mov.b64 	%rd2467, {%r2463, %r2462};
	xor.b64  	%rd2468, %rd2467, %rd2466;
	shf.l.wrap.b32 	%r2464, %r2458, %r2459, 23;
	shf.l.wrap.b32 	%r2465, %r2459, %r2458, 23;
	mov.b64 	%rd2469, {%r2465, %r2464};
	xor.b64  	%rd2470, %rd2468, %rd2469;
	xor.b64  	%rd2471, %rd2425, %rd2398;
	and.b64  	%rd2472, %rd2452, %rd2471;
	xor.b64  	%rd2473, %rd2472, %rd2398;
	add.s64 	%rd2474, %rd2371, %rd6867;
	ld.const.u64 	%rd2475, [%rd2465];
	add.s64 	%rd2476, %rd2474, %rd2475;
	add.s64 	%rd2477, %rd2476, %rd2473;
	add.s64 	%rd2478, %rd2477, %rd2470;
	add.s64 	%rd2479, %rd2478, %rd2382;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2466,%dummy}, %rd2463;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2467}, %rd2463;
	}
	shf.r.wrap.b32 	%r2468, %r2467, %r2466, 28;
	shf.r.wrap.b32 	%r2469, %r2466, %r2467, 28;
	mov.b64 	%rd2480, {%r2469, %r2468};
	shf.l.wrap.b32 	%r2470, %r2466, %r2467, 30;
	shf.l.wrap.b32 	%r2471, %r2467, %r2466, 30;
	mov.b64 	%rd2481, {%r2471, %r2470};
	xor.b64  	%rd2482, %rd2481, %rd2480;
	shf.l.wrap.b32 	%r2472, %r2466, %r2467, 25;
	shf.l.wrap.b32 	%r2473, %r2467, %r2466, 25;
	mov.b64 	%rd2483, {%r2473, %r2472};
	xor.b64  	%rd2484, %rd2482, %rd2483;
	xor.b64  	%rd2485, %rd2463, %rd2409;
	xor.b64  	%rd2486, %rd2463, %rd2436;
	and.b64  	%rd2487, %rd2486, %rd2485;
	xor.b64  	%rd2488, %rd2487, %rd2463;
	add.s64 	%rd2489, %rd2478, %rd2488;
	add.s64 	%rd2490, %rd2489, %rd2484;
	add.s32 	%r2474, %r11802, 6;
	mul.wide.s32 	%rd2491, %r2474, 8;
	add.s64 	%rd2492, %rd2329, %rd2491;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2475,%dummy}, %rd2479;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2476}, %rd2479;
	}
	shf.r.wrap.b32 	%r2477, %r2476, %r2475, 14;
	shf.r.wrap.b32 	%r2478, %r2475, %r2476, 14;
	mov.b64 	%rd2493, {%r2478, %r2477};
	shf.r.wrap.b32 	%r2479, %r2476, %r2475, 18;
	shf.r.wrap.b32 	%r2480, %r2475, %r2476, 18;
	mov.b64 	%rd2494, {%r2480, %r2479};
	xor.b64  	%rd2495, %rd2494, %rd2493;
	shf.l.wrap.b32 	%r2481, %r2475, %r2476, 23;
	shf.l.wrap.b32 	%r2482, %r2476, %r2475, 23;
	mov.b64 	%rd2496, {%r2482, %r2481};
	xor.b64  	%rd2497, %rd2495, %rd2496;
	xor.b64  	%rd2498, %rd2452, %rd2425;
	and.b64  	%rd2499, %rd2479, %rd2498;
	xor.b64  	%rd2500, %rd2499, %rd2425;
	add.s64 	%rd2501, %rd2398, %rd6868;
	ld.const.u64 	%rd2502, [%rd2492];
	add.s64 	%rd2503, %rd2501, %rd2502;
	add.s64 	%rd2504, %rd2503, %rd2500;
	add.s64 	%rd2505, %rd2504, %rd2497;
	add.s64 	%rd2506, %rd2505, %rd2409;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2483,%dummy}, %rd2490;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2484}, %rd2490;
	}
	shf.r.wrap.b32 	%r2485, %r2484, %r2483, 28;
	shf.r.wrap.b32 	%r2486, %r2483, %r2484, 28;
	mov.b64 	%rd2507, {%r2486, %r2485};
	shf.l.wrap.b32 	%r2487, %r2483, %r2484, 30;
	shf.l.wrap.b32 	%r2488, %r2484, %r2483, 30;
	mov.b64 	%rd2508, {%r2488, %r2487};
	xor.b64  	%rd2509, %rd2508, %rd2507;
	shf.l.wrap.b32 	%r2489, %r2483, %r2484, 25;
	shf.l.wrap.b32 	%r2490, %r2484, %r2483, 25;
	mov.b64 	%rd2510, {%r2490, %r2489};
	xor.b64  	%rd2511, %rd2509, %rd2510;
	xor.b64  	%rd2512, %rd2490, %rd2436;
	xor.b64  	%rd2513, %rd2490, %rd2463;
	and.b64  	%rd2514, %rd2513, %rd2512;
	xor.b64  	%rd2515, %rd2514, %rd2490;
	add.s64 	%rd2516, %rd2505, %rd2515;
	add.s64 	%rd2517, %rd2516, %rd2511;
	add.s32 	%r2491, %r11802, 7;
	mul.wide.s32 	%rd2518, %r2491, 8;
	add.s64 	%rd2519, %rd2329, %rd2518;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2492,%dummy}, %rd2506;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2493}, %rd2506;
	}
	shf.r.wrap.b32 	%r2494, %r2493, %r2492, 14;
	shf.r.wrap.b32 	%r2495, %r2492, %r2493, 14;
	mov.b64 	%rd2520, {%r2495, %r2494};
	shf.r.wrap.b32 	%r2496, %r2493, %r2492, 18;
	shf.r.wrap.b32 	%r2497, %r2492, %r2493, 18;
	mov.b64 	%rd2521, {%r2497, %r2496};
	xor.b64  	%rd2522, %rd2521, %rd2520;
	shf.l.wrap.b32 	%r2498, %r2492, %r2493, 23;
	shf.l.wrap.b32 	%r2499, %r2493, %r2492, 23;
	mov.b64 	%rd2523, {%r2499, %r2498};
	xor.b64  	%rd2524, %rd2522, %rd2523;
	xor.b64  	%rd2525, %rd2479, %rd2452;
	and.b64  	%rd2526, %rd2506, %rd2525;
	xor.b64  	%rd2527, %rd2526, %rd2452;
	add.s64 	%rd2528, %rd2425, %rd6869;
	ld.const.u64 	%rd2529, [%rd2519];
	add.s64 	%rd2530, %rd2528, %rd2529;
	add.s64 	%rd2531, %rd2530, %rd2527;
	add.s64 	%rd2532, %rd2531, %rd2524;
	add.s64 	%rd2533, %rd2532, %rd2436;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2500,%dummy}, %rd2517;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2501}, %rd2517;
	}
	shf.r.wrap.b32 	%r2502, %r2501, %r2500, 28;
	shf.r.wrap.b32 	%r2503, %r2500, %r2501, 28;
	mov.b64 	%rd2534, {%r2503, %r2502};
	shf.l.wrap.b32 	%r2504, %r2500, %r2501, 30;
	shf.l.wrap.b32 	%r2505, %r2501, %r2500, 30;
	mov.b64 	%rd2535, {%r2505, %r2504};
	xor.b64  	%rd2536, %rd2535, %rd2534;
	shf.l.wrap.b32 	%r2506, %r2500, %r2501, 25;
	shf.l.wrap.b32 	%r2507, %r2501, %r2500, 25;
	mov.b64 	%rd2537, {%r2507, %r2506};
	xor.b64  	%rd2538, %rd2536, %rd2537;
	xor.b64  	%rd2539, %rd2517, %rd2463;
	xor.b64  	%rd2540, %rd2517, %rd2490;
	and.b64  	%rd2541, %rd2540, %rd2539;
	xor.b64  	%rd2542, %rd2541, %rd2517;
	add.s64 	%rd2543, %rd2532, %rd2542;
	add.s64 	%rd2544, %rd2543, %rd2538;
	add.s32 	%r2508, %r11802, 8;
	mul.wide.s32 	%rd2545, %r2508, 8;
	add.s64 	%rd2546, %rd2329, %rd2545;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2509,%dummy}, %rd2533;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2510}, %rd2533;
	}
	shf.r.wrap.b32 	%r2511, %r2510, %r2509, 14;
	shf.r.wrap.b32 	%r2512, %r2509, %r2510, 14;
	mov.b64 	%rd2547, {%r2512, %r2511};
	shf.r.wrap.b32 	%r2513, %r2510, %r2509, 18;
	shf.r.wrap.b32 	%r2514, %r2509, %r2510, 18;
	mov.b64 	%rd2548, {%r2514, %r2513};
	xor.b64  	%rd2549, %rd2548, %rd2547;
	shf.l.wrap.b32 	%r2515, %r2509, %r2510, 23;
	shf.l.wrap.b32 	%r2516, %r2510, %r2509, 23;
	mov.b64 	%rd2550, {%r2516, %r2515};
	xor.b64  	%rd2551, %rd2549, %rd2550;
	xor.b64  	%rd2552, %rd2506, %rd2479;
	and.b64  	%rd2553, %rd2533, %rd2552;
	xor.b64  	%rd2554, %rd2553, %rd2479;
	add.s64 	%rd2555, %rd2452, %rd6853;
	ld.const.u64 	%rd2556, [%rd2546];
	add.s64 	%rd2557, %rd2555, %rd2556;
	add.s64 	%rd2558, %rd2557, %rd2554;
	add.s64 	%rd2559, %rd2558, %rd2551;
	add.s64 	%rd2560, %rd2559, %rd2463;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2517,%dummy}, %rd2544;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2518}, %rd2544;
	}
	shf.r.wrap.b32 	%r2519, %r2518, %r2517, 28;
	shf.r.wrap.b32 	%r2520, %r2517, %r2518, 28;
	mov.b64 	%rd2561, {%r2520, %r2519};
	shf.l.wrap.b32 	%r2521, %r2517, %r2518, 30;
	shf.l.wrap.b32 	%r2522, %r2518, %r2517, 30;
	mov.b64 	%rd2562, {%r2522, %r2521};
	xor.b64  	%rd2563, %rd2562, %rd2561;
	shf.l.wrap.b32 	%r2523, %r2517, %r2518, 25;
	shf.l.wrap.b32 	%r2524, %r2518, %r2517, 25;
	mov.b64 	%rd2564, {%r2524, %r2523};
	xor.b64  	%rd2565, %rd2563, %rd2564;
	xor.b64  	%rd2566, %rd2544, %rd2490;
	xor.b64  	%rd2567, %rd2544, %rd2517;
	and.b64  	%rd2568, %rd2567, %rd2566;
	xor.b64  	%rd2569, %rd2568, %rd2544;
	add.s64 	%rd2570, %rd2559, %rd2569;
	add.s64 	%rd2571, %rd2570, %rd2565;
	add.s32 	%r2525, %r11802, 9;
	mul.wide.s32 	%rd2572, %r2525, 8;
	add.s64 	%rd2573, %rd2329, %rd2572;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2526,%dummy}, %rd2560;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2527}, %rd2560;
	}
	shf.r.wrap.b32 	%r2528, %r2527, %r2526, 14;
	shf.r.wrap.b32 	%r2529, %r2526, %r2527, 14;
	mov.b64 	%rd2574, {%r2529, %r2528};
	shf.r.wrap.b32 	%r2530, %r2527, %r2526, 18;
	shf.r.wrap.b32 	%r2531, %r2526, %r2527, 18;
	mov.b64 	%rd2575, {%r2531, %r2530};
	xor.b64  	%rd2576, %rd2575, %rd2574;
	shf.l.wrap.b32 	%r2532, %r2526, %r2527, 23;
	shf.l.wrap.b32 	%r2533, %r2527, %r2526, 23;
	mov.b64 	%rd2577, {%r2533, %r2532};
	xor.b64  	%rd2578, %rd2576, %rd2577;
	xor.b64  	%rd2579, %rd2533, %rd2506;
	and.b64  	%rd2580, %rd2560, %rd2579;
	xor.b64  	%rd2581, %rd2580, %rd2506;
	add.s64 	%rd2582, %rd2479, %rd6852;
	ld.const.u64 	%rd2583, [%rd2573];
	add.s64 	%rd2584, %rd2582, %rd2583;
	add.s64 	%rd2585, %rd2584, %rd2581;
	add.s64 	%rd2586, %rd2585, %rd2578;
	add.s64 	%rd2587, %rd2586, %rd2490;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2534,%dummy}, %rd2571;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2535}, %rd2571;
	}
	shf.r.wrap.b32 	%r2536, %r2535, %r2534, 28;
	shf.r.wrap.b32 	%r2537, %r2534, %r2535, 28;
	mov.b64 	%rd2588, {%r2537, %r2536};
	shf.l.wrap.b32 	%r2538, %r2534, %r2535, 30;
	shf.l.wrap.b32 	%r2539, %r2535, %r2534, 30;
	mov.b64 	%rd2589, {%r2539, %r2538};
	xor.b64  	%rd2590, %rd2589, %rd2588;
	shf.l.wrap.b32 	%r2540, %r2534, %r2535, 25;
	shf.l.wrap.b32 	%r2541, %r2535, %r2534, 25;
	mov.b64 	%rd2591, {%r2541, %r2540};
	xor.b64  	%rd2592, %rd2590, %rd2591;
	xor.b64  	%rd2593, %rd2571, %rd2517;
	xor.b64  	%rd2594, %rd2571, %rd2544;
	and.b64  	%rd2595, %rd2594, %rd2593;
	xor.b64  	%rd2596, %rd2595, %rd2571;
	add.s64 	%rd2597, %rd2586, %rd2596;
	add.s64 	%rd2598, %rd2597, %rd2592;
	add.s32 	%r2542, %r11802, 10;
	mul.wide.s32 	%rd2599, %r2542, 8;
	add.s64 	%rd2600, %rd2329, %rd2599;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2543,%dummy}, %rd2587;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2544}, %rd2587;
	}
	shf.r.wrap.b32 	%r2545, %r2544, %r2543, 14;
	shf.r.wrap.b32 	%r2546, %r2543, %r2544, 14;
	mov.b64 	%rd2601, {%r2546, %r2545};
	shf.r.wrap.b32 	%r2547, %r2544, %r2543, 18;
	shf.r.wrap.b32 	%r2548, %r2543, %r2544, 18;
	mov.b64 	%rd2602, {%r2548, %r2547};
	xor.b64  	%rd2603, %rd2602, %rd2601;
	shf.l.wrap.b32 	%r2549, %r2543, %r2544, 23;
	shf.l.wrap.b32 	%r2550, %r2544, %r2543, 23;
	mov.b64 	%rd2604, {%r2550, %r2549};
	xor.b64  	%rd2605, %rd2603, %rd2604;
	xor.b64  	%rd2606, %rd2560, %rd2533;
	and.b64  	%rd2607, %rd2587, %rd2606;
	xor.b64  	%rd2608, %rd2607, %rd2533;
	add.s64 	%rd2609, %rd2506, %rd6851;
	ld.const.u64 	%rd2610, [%rd2600];
	add.s64 	%rd2611, %rd2609, %rd2610;
	add.s64 	%rd2612, %rd2611, %rd2608;
	add.s64 	%rd2613, %rd2612, %rd2605;
	add.s64 	%rd2614, %rd2613, %rd2517;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2551,%dummy}, %rd2598;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2552}, %rd2598;
	}
	shf.r.wrap.b32 	%r2553, %r2552, %r2551, 28;
	shf.r.wrap.b32 	%r2554, %r2551, %r2552, 28;
	mov.b64 	%rd2615, {%r2554, %r2553};
	shf.l.wrap.b32 	%r2555, %r2551, %r2552, 30;
	shf.l.wrap.b32 	%r2556, %r2552, %r2551, 30;
	mov.b64 	%rd2616, {%r2556, %r2555};
	xor.b64  	%rd2617, %rd2616, %rd2615;
	shf.l.wrap.b32 	%r2557, %r2551, %r2552, 25;
	shf.l.wrap.b32 	%r2558, %r2552, %r2551, 25;
	mov.b64 	%rd2618, {%r2558, %r2557};
	xor.b64  	%rd2619, %rd2617, %rd2618;
	xor.b64  	%rd2620, %rd2598, %rd2544;
	xor.b64  	%rd2621, %rd2598, %rd2571;
	and.b64  	%rd2622, %rd2621, %rd2620;
	xor.b64  	%rd2623, %rd2622, %rd2598;
	add.s64 	%rd2624, %rd2613, %rd2623;
	add.s64 	%rd2625, %rd2624, %rd2619;
	add.s32 	%r2559, %r11802, 11;
	mul.wide.s32 	%rd2626, %r2559, 8;
	add.s64 	%rd2627, %rd2329, %rd2626;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2560,%dummy}, %rd2614;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2561}, %rd2614;
	}
	shf.r.wrap.b32 	%r2562, %r2561, %r2560, 14;
	shf.r.wrap.b32 	%r2563, %r2560, %r2561, 14;
	mov.b64 	%rd2628, {%r2563, %r2562};
	shf.r.wrap.b32 	%r2564, %r2561, %r2560, 18;
	shf.r.wrap.b32 	%r2565, %r2560, %r2561, 18;
	mov.b64 	%rd2629, {%r2565, %r2564};
	xor.b64  	%rd2630, %rd2629, %rd2628;
	shf.l.wrap.b32 	%r2566, %r2560, %r2561, 23;
	shf.l.wrap.b32 	%r2567, %r2561, %r2560, 23;
	mov.b64 	%rd2631, {%r2567, %r2566};
	xor.b64  	%rd2632, %rd2630, %rd2631;
	xor.b64  	%rd2633, %rd2587, %rd2560;
	and.b64  	%rd2634, %rd2614, %rd2633;
	xor.b64  	%rd2635, %rd2634, %rd2560;
	add.s64 	%rd2636, %rd2533, %rd6850;
	ld.const.u64 	%rd2637, [%rd2627];
	add.s64 	%rd2638, %rd2636, %rd2637;
	add.s64 	%rd2639, %rd2638, %rd2635;
	add.s64 	%rd2640, %rd2639, %rd2632;
	add.s64 	%rd2641, %rd2640, %rd2544;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2568,%dummy}, %rd2625;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2569}, %rd2625;
	}
	shf.r.wrap.b32 	%r2570, %r2569, %r2568, 28;
	shf.r.wrap.b32 	%r2571, %r2568, %r2569, 28;
	mov.b64 	%rd2642, {%r2571, %r2570};
	shf.l.wrap.b32 	%r2572, %r2568, %r2569, 30;
	shf.l.wrap.b32 	%r2573, %r2569, %r2568, 30;
	mov.b64 	%rd2643, {%r2573, %r2572};
	xor.b64  	%rd2644, %rd2643, %rd2642;
	shf.l.wrap.b32 	%r2574, %r2568, %r2569, 25;
	shf.l.wrap.b32 	%r2575, %r2569, %r2568, 25;
	mov.b64 	%rd2645, {%r2575, %r2574};
	xor.b64  	%rd2646, %rd2644, %rd2645;
	xor.b64  	%rd2647, %rd2625, %rd2571;
	xor.b64  	%rd2648, %rd2625, %rd2598;
	and.b64  	%rd2649, %rd2648, %rd2647;
	xor.b64  	%rd2650, %rd2649, %rd2625;
	add.s64 	%rd2651, %rd2640, %rd2650;
	add.s64 	%rd2652, %rd2651, %rd2646;
	add.s32 	%r2576, %r11802, 12;
	mul.wide.s32 	%rd2653, %r2576, 8;
	add.s64 	%rd2654, %rd2329, %rd2653;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2577,%dummy}, %rd2641;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2578}, %rd2641;
	}
	shf.r.wrap.b32 	%r2579, %r2578, %r2577, 14;
	shf.r.wrap.b32 	%r2580, %r2577, %r2578, 14;
	mov.b64 	%rd2655, {%r2580, %r2579};
	shf.r.wrap.b32 	%r2581, %r2578, %r2577, 18;
	shf.r.wrap.b32 	%r2582, %r2577, %r2578, 18;
	mov.b64 	%rd2656, {%r2582, %r2581};
	xor.b64  	%rd2657, %rd2656, %rd2655;
	shf.l.wrap.b32 	%r2583, %r2577, %r2578, 23;
	shf.l.wrap.b32 	%r2584, %r2578, %r2577, 23;
	mov.b64 	%rd2658, {%r2584, %r2583};
	xor.b64  	%rd2659, %rd2657, %rd2658;
	xor.b64  	%rd2660, %rd2614, %rd2587;
	and.b64  	%rd2661, %rd2641, %rd2660;
	xor.b64  	%rd2662, %rd2661, %rd2587;
	add.s64 	%rd2663, %rd2560, %rd6849;
	ld.const.u64 	%rd2664, [%rd2654];
	add.s64 	%rd2665, %rd2663, %rd2664;
	add.s64 	%rd2666, %rd2665, %rd2662;
	add.s64 	%rd2667, %rd2666, %rd2659;
	add.s64 	%rd6861, %rd2667, %rd2571;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2585,%dummy}, %rd2652;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2586}, %rd2652;
	}
	shf.r.wrap.b32 	%r2587, %r2586, %r2585, 28;
	shf.r.wrap.b32 	%r2588, %r2585, %r2586, 28;
	mov.b64 	%rd2668, {%r2588, %r2587};
	shf.l.wrap.b32 	%r2589, %r2585, %r2586, 30;
	shf.l.wrap.b32 	%r2590, %r2586, %r2585, 30;
	mov.b64 	%rd2669, {%r2590, %r2589};
	xor.b64  	%rd2670, %rd2669, %rd2668;
	shf.l.wrap.b32 	%r2591, %r2585, %r2586, 25;
	shf.l.wrap.b32 	%r2592, %r2586, %r2585, 25;
	mov.b64 	%rd2671, {%r2592, %r2591};
	xor.b64  	%rd2672, %rd2670, %rd2671;
	xor.b64  	%rd2673, %rd2652, %rd2598;
	xor.b64  	%rd2674, %rd2652, %rd2625;
	and.b64  	%rd2675, %rd2674, %rd2673;
	xor.b64  	%rd2676, %rd2675, %rd2652;
	add.s64 	%rd2677, %rd2667, %rd2676;
	add.s64 	%rd6857, %rd2677, %rd2672;
	add.s32 	%r2593, %r11802, 13;
	mul.wide.s32 	%rd2678, %r2593, 8;
	add.s64 	%rd2679, %rd2329, %rd2678;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2594,%dummy}, %rd6861;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2595}, %rd6861;
	}
	shf.r.wrap.b32 	%r2596, %r2595, %r2594, 14;
	shf.r.wrap.b32 	%r2597, %r2594, %r2595, 14;
	mov.b64 	%rd2680, {%r2597, %r2596};
	shf.r.wrap.b32 	%r2598, %r2595, %r2594, 18;
	shf.r.wrap.b32 	%r2599, %r2594, %r2595, 18;
	mov.b64 	%rd2681, {%r2599, %r2598};
	xor.b64  	%rd2682, %rd2681, %rd2680;
	shf.l.wrap.b32 	%r2600, %r2594, %r2595, 23;
	shf.l.wrap.b32 	%r2601, %r2595, %r2594, 23;
	mov.b64 	%rd2683, {%r2601, %r2600};
	xor.b64  	%rd2684, %rd2682, %rd2683;
	xor.b64  	%rd2685, %rd2641, %rd2614;
	and.b64  	%rd2686, %rd6861, %rd2685;
	xor.b64  	%rd2687, %rd2686, %rd2614;
	add.s64 	%rd2688, %rd2587, %rd6848;
	ld.const.u64 	%rd2689, [%rd2679];
	add.s64 	%rd2690, %rd2688, %rd2689;
	add.s64 	%rd2691, %rd2690, %rd2687;
	add.s64 	%rd2692, %rd2691, %rd2684;
	add.s64 	%rd6860, %rd2692, %rd2598;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2602,%dummy}, %rd6857;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2603}, %rd6857;
	}
	shf.r.wrap.b32 	%r2604, %r2603, %r2602, 28;
	shf.r.wrap.b32 	%r2605, %r2602, %r2603, 28;
	mov.b64 	%rd2693, {%r2605, %r2604};
	shf.l.wrap.b32 	%r2606, %r2602, %r2603, 30;
	shf.l.wrap.b32 	%r2607, %r2603, %r2602, 30;
	mov.b64 	%rd2694, {%r2607, %r2606};
	xor.b64  	%rd2695, %rd2694, %rd2693;
	shf.l.wrap.b32 	%r2608, %r2602, %r2603, 25;
	shf.l.wrap.b32 	%r2609, %r2603, %r2602, 25;
	mov.b64 	%rd2696, {%r2609, %r2608};
	xor.b64  	%rd2697, %rd2695, %rd2696;
	xor.b64  	%rd2698, %rd6857, %rd2625;
	xor.b64  	%rd2699, %rd6857, %rd2652;
	and.b64  	%rd2700, %rd2699, %rd2698;
	xor.b64  	%rd2701, %rd2700, %rd6857;
	add.s64 	%rd2702, %rd2692, %rd2701;
	add.s64 	%rd6856, %rd2702, %rd2697;
	add.s32 	%r2610, %r11802, 14;
	mul.wide.s32 	%rd2703, %r2610, 8;
	add.s64 	%rd2704, %rd2329, %rd2703;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2611,%dummy}, %rd6860;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2612}, %rd6860;
	}
	shf.r.wrap.b32 	%r2613, %r2612, %r2611, 14;
	shf.r.wrap.b32 	%r2614, %r2611, %r2612, 14;
	mov.b64 	%rd2705, {%r2614, %r2613};
	shf.r.wrap.b32 	%r2615, %r2612, %r2611, 18;
	shf.r.wrap.b32 	%r2616, %r2611, %r2612, 18;
	mov.b64 	%rd2706, {%r2616, %r2615};
	xor.b64  	%rd2707, %rd2706, %rd2705;
	shf.l.wrap.b32 	%r2617, %r2611, %r2612, 23;
	shf.l.wrap.b32 	%r2618, %r2612, %r2611, 23;
	mov.b64 	%rd2708, {%r2618, %r2617};
	xor.b64  	%rd2709, %rd2707, %rd2708;
	xor.b64  	%rd2710, %rd6861, %rd2641;
	and.b64  	%rd2711, %rd6860, %rd2710;
	xor.b64  	%rd2712, %rd2711, %rd2641;
	add.s64 	%rd2713, %rd2614, %rd6847;
	ld.const.u64 	%rd2714, [%rd2704];
	add.s64 	%rd2715, %rd2713, %rd2714;
	add.s64 	%rd2716, %rd2715, %rd2712;
	add.s64 	%rd2717, %rd2716, %rd2709;
	add.s64 	%rd6859, %rd2717, %rd2625;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2619,%dummy}, %rd6856;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2620}, %rd6856;
	}
	shf.r.wrap.b32 	%r2621, %r2620, %r2619, 28;
	shf.r.wrap.b32 	%r2622, %r2619, %r2620, 28;
	mov.b64 	%rd2718, {%r2622, %r2621};
	shf.l.wrap.b32 	%r2623, %r2619, %r2620, 30;
	shf.l.wrap.b32 	%r2624, %r2620, %r2619, 30;
	mov.b64 	%rd2719, {%r2624, %r2623};
	xor.b64  	%rd2720, %rd2719, %rd2718;
	shf.l.wrap.b32 	%r2625, %r2619, %r2620, 25;
	shf.l.wrap.b32 	%r2626, %r2620, %r2619, 25;
	mov.b64 	%rd2721, {%r2626, %r2625};
	xor.b64  	%rd2722, %rd2720, %rd2721;
	xor.b64  	%rd2723, %rd6856, %rd2652;
	xor.b64  	%rd2724, %rd6856, %rd6857;
	and.b64  	%rd2725, %rd2724, %rd2723;
	xor.b64  	%rd2726, %rd2725, %rd6856;
	add.s64 	%rd2727, %rd2717, %rd2726;
	add.s64 	%rd6855, %rd2727, %rd2722;
	add.s32 	%r2627, %r11802, 15;
	mul.wide.s32 	%rd2728, %r2627, 8;
	add.s64 	%rd2729, %rd2329, %rd2728;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2628,%dummy}, %rd6859;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2629}, %rd6859;
	}
	shf.r.wrap.b32 	%r2630, %r2629, %r2628, 14;
	shf.r.wrap.b32 	%r2631, %r2628, %r2629, 14;
	mov.b64 	%rd2730, {%r2631, %r2630};
	shf.r.wrap.b32 	%r2632, %r2629, %r2628, 18;
	shf.r.wrap.b32 	%r2633, %r2628, %r2629, 18;
	mov.b64 	%rd2731, {%r2633, %r2632};
	xor.b64  	%rd2732, %rd2731, %rd2730;
	shf.l.wrap.b32 	%r2634, %r2628, %r2629, 23;
	shf.l.wrap.b32 	%r2635, %r2629, %r2628, 23;
	mov.b64 	%rd2733, {%r2635, %r2634};
	xor.b64  	%rd2734, %rd2732, %rd2733;
	xor.b64  	%rd2735, %rd6860, %rd6861;
	and.b64  	%rd2736, %rd6859, %rd2735;
	xor.b64  	%rd2737, %rd2736, %rd6861;
	add.s64 	%rd2738, %rd2641, %rd6846;
	ld.const.u64 	%rd2739, [%rd2729];
	add.s64 	%rd2740, %rd2738, %rd2739;
	add.s64 	%rd2741, %rd2740, %rd2737;
	add.s64 	%rd2742, %rd2741, %rd2734;
	add.s64 	%rd6858, %rd2742, %rd2652;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2636,%dummy}, %rd6855;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2637}, %rd6855;
	}
	shf.r.wrap.b32 	%r2638, %r2637, %r2636, 28;
	shf.r.wrap.b32 	%r2639, %r2636, %r2637, 28;
	mov.b64 	%rd2743, {%r2639, %r2638};
	shf.l.wrap.b32 	%r2640, %r2636, %r2637, 30;
	shf.l.wrap.b32 	%r2641, %r2637, %r2636, 30;
	mov.b64 	%rd2744, {%r2641, %r2640};
	xor.b64  	%rd2745, %rd2744, %rd2743;
	shf.l.wrap.b32 	%r2642, %r2636, %r2637, 25;
	shf.l.wrap.b32 	%r2643, %r2637, %r2636, 25;
	mov.b64 	%rd2746, {%r2643, %r2642};
	xor.b64  	%rd2747, %rd2745, %rd2746;
	xor.b64  	%rd2748, %rd6855, %rd6857;
	xor.b64  	%rd2749, %rd6855, %rd6856;
	and.b64  	%rd2750, %rd2749, %rd2748;
	xor.b64  	%rd2751, %rd2750, %rd6855;
	add.s64 	%rd2752, %rd2742, %rd2751;
	add.s64 	%rd6854, %rd2752, %rd2747;
	add.s32 	%r11802, %r11802, 16;
	setp.lt.s32	%p210, %r11802, 80;
	@%p210 bra 	BB5_348;

	add.s64 	%rd6973, %rd6845, %rd6854;
	st.local.u64 	[%rd10], %rd6973;
	add.s64 	%rd6972, %rd6844, %rd6855;
	st.local.u64 	[%rd22], %rd6972;
	add.s64 	%rd6971, %rd6843, %rd6856;
	st.local.u64 	[%rd23], %rd6971;
	add.s64 	%rd6970, %rd6842, %rd6857;
	st.local.u64 	[%rd24], %rd6970;
	add.s64 	%rd6969, %rd6841, %rd6858;
	st.local.u64 	[%rd25], %rd6969;
	add.s64 	%rd6968, %rd6840, %rd6859;
	st.local.u64 	[%rd26], %rd6968;
	add.s64 	%rd6967, %rd6839, %rd6860;
	st.local.u64 	[%rd27], %rd6967;
	add.s64 	%rd6966, %rd6838, %rd6861;
	st.local.u64 	[%rd28], %rd6966;
	add.s32 	%r2644, %r2, 65;
	setp.gt.u32	%p211, %r2644, 111;
	@%p211 bra 	BB5_356;
	bra.uni 	BB5_350;

BB5_356:
	setp.lt.u32	%p215, %r763, 2;
	@%p215 bra 	BB5_685;

	mov.u32 	%r11805, 1;

BB5_358:
	add.u64 	%rd6798, %SP, 128;
	mov.u32 	%r11734, 64;
	mov.u64 	%rd6797, 6620516959819538809;
	mov.u64 	%rd6796, 2270897969802886507;
	mov.u64 	%rd6790, -7276294671716946913;
	mov.u64 	%rd6789, -6534734903238641935;
	mov.u64 	%rd6788, 4354685564936845355;
	mov.u64 	%rd6787, -4942790177534073029;
	st.local.u64 	[%rd10], %rd676;
	st.local.u64 	[%rd22], %rd6787;
	st.local.u64 	[%rd23], %rd6788;
	st.local.u64 	[%rd24], %rd6789;
	st.local.u64 	[%rd25], %rd680;
	st.local.u64 	[%rd26], %rd6790;
	st.local.u64 	[%rd27], %rd6796;
	st.local.u64 	[%rd28], %rd6797;
	st.local.u32 	[%rd29], %r1929;
	st.local.u32 	[%rd30], %r1929;
	st.local.u32 	[%rd31], %r1929;
	st.local.u32 	[%rd32], %r1929;
	st.local.u32 	[%rd33], %r1929;
	st.local.u32 	[%rd34], %r1929;
	st.local.u32 	[%rd35], %r1929;
	st.local.u32 	[%rd36], %r1929;
	st.local.u32 	[%rd37], %r1929;
	st.local.u32 	[%rd38], %r1929;
	st.local.u32 	[%rd39], %r1929;
	st.local.u32 	[%rd40], %r1929;
	st.local.u32 	[%rd41], %r1929;
	st.local.u32 	[%rd42], %r1929;
	st.local.u32 	[%rd43], %r1929;
	st.local.u32 	[%rd44], %r1929;
	shr.u64 	%rd3752, %rd6973, 32;
	st.local.u32 	[%rd45], %rd3752;
	st.local.u32 	[%rd46], %rd6973;
	shr.u64 	%rd3753, %rd6972, 32;
	st.local.u32 	[%rd47], %rd3753;
	st.local.u32 	[%rd48], %rd6972;
	shr.u64 	%rd3754, %rd6971, 32;
	st.local.u32 	[%rd49], %rd3754;
	st.local.u32 	[%rd50], %rd6971;
	shr.u64 	%rd3755, %rd6970, 32;
	st.local.u32 	[%rd51], %rd3755;
	st.local.u32 	[%rd52], %rd6970;
	shr.u64 	%rd3756, %rd6969, 32;
	st.local.u32 	[%rd53], %rd3756;
	st.local.u32 	[%rd54], %rd6969;
	shr.u64 	%rd3757, %rd6968, 32;
	st.local.u32 	[%rd55], %rd3757;
	st.local.u32 	[%rd56], %rd6968;
	shr.u64 	%rd3758, %rd6967, 32;
	st.local.u32 	[%rd57], %rd3758;
	st.local.u32 	[%rd58], %rd6967;
	shr.u64 	%rd3759, %rd6966, 32;
	st.local.u32 	[%rd59], %rd3759;
	st.local.u32 	[%rd60], %rd6966;
	st.local.u32 	[%rd61], %r11734;
	// Callseq Start 11
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd621;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd6798;
	.param .b32 param2;
	st.param.b32	[param2+0], %r2;
	call.uni 
	sha512_update, 
	(
	param0, 
	param1, 
	param2
	);
	
	//{
	}// Callseq End 11
	ld.local.u32 	%r126, [%rd61];
	and.b32  	%r127, %r126, 127;
	xor.b32  	%r3361, %r127, 3;
	setp.gt.s32	%p216, %r3361, 63;
	@%p216 bra 	BB5_486;

	setp.gt.s32	%p312, %r3361, 31;
	@%p312 bra 	BB5_423;

	setp.gt.s32	%p360, %r3361, 15;
	@%p360 bra 	BB5_392;

	setp.gt.s32	%p384, %r3361, 7;
	@%p384 bra 	BB5_377;

	setp.gt.s32	%p396, %r3361, 3;
	@%p396 bra 	BB5_370;

	setp.gt.s32	%p402, %r3361, 1;
	@%p402 bra 	BB5_367;

	setp.eq.s32	%p405, %r3361, 0;
	@%p405 bra 	BB5_676;
	bra.uni 	BB5_365;

BB5_676:
	ld.local.u32 	%r3618, [%rd45];
	or.b32  	%r3619, %r3618, 128;
	st.local.u32 	[%rd45], %r3619;
	bra.uni 	BB5_677;

BB5_486:
	setp.gt.s32	%p217, %r3361, 95;
	@%p217 bra 	BB5_550;

	setp.gt.s32	%p265, %r3361, 79;
	@%p265 bra 	BB5_519;

	setp.gt.s32	%p289, %r3361, 71;
	@%p289 bra 	BB5_504;

	setp.gt.s32	%p301, %r3361, 67;
	@%p301 bra 	BB5_497;

	setp.gt.s32	%p307, %r3361, 65;
	@%p307 bra 	BB5_494;

	setp.eq.s32	%p310, %r3361, 64;
	@%p310 bra 	BB5_644;
	bra.uni 	BB5_492;

BB5_644:
	ld.local.u32 	%r3490, [%rd29];
	or.b32  	%r3491, %r3490, 128;
	st.local.u32 	[%rd29], %r3491;
	bra.uni 	BB5_677;

BB5_423:
	setp.gt.s32	%p313, %r3361, 47;
	@%p313 bra 	BB5_455;

	setp.gt.s32	%p337, %r3361, 39;
	@%p337 bra 	BB5_440;

	setp.gt.s32	%p349, %r3361, 35;
	@%p349 bra 	BB5_433;

	setp.gt.s32	%p355, %r3361, 33;
	@%p355 bra 	BB5_430;

	setp.eq.s32	%p358, %r3361, 32;
	@%p358 bra 	BB5_660;
	bra.uni 	BB5_428;

BB5_660:
	ld.local.u32 	%r3554, [%rd53];
	or.b32  	%r3555, %r3554, 128;
	st.local.u32 	[%rd53], %r3555;
	bra.uni 	BB5_677;

BB5_550:
	setp.gt.s32	%p218, %r3361, 111;
	@%p218 bra 	BB5_582;

	setp.gt.s32	%p242, %r3361, 103;
	@%p242 bra 	BB5_567;

	setp.gt.s32	%p254, %r3361, 99;
	@%p254 bra 	BB5_560;

	setp.gt.s32	%p260, %r3361, 97;
	@%p260 bra 	BB5_557;

	setp.eq.s32	%p263, %r3361, 96;
	@%p263 bra 	BB5_628;
	bra.uni 	BB5_555;

BB5_628:
	ld.local.u32 	%r3426, [%rd37];
	or.b32  	%r3427, %r3426, 128;
	st.local.u32 	[%rd37], %r3427;
	bra.uni 	BB5_677;

BB5_392:
	setp.gt.s32	%p361, %r3361, 23;
	@%p361 bra 	BB5_408;

	setp.gt.s32	%p373, %r3361, 19;
	@%p373 bra 	BB5_401;

	setp.gt.s32	%p379, %r3361, 17;
	@%p379 bra 	BB5_398;

	setp.eq.s32	%p382, %r3361, 16;
	@%p382 bra 	BB5_668;
	bra.uni 	BB5_396;

BB5_668:
	ld.local.u32 	%r3586, [%rd49];
	or.b32  	%r3587, %r3586, 128;
	st.local.u32 	[%rd49], %r3587;
	bra.uni 	BB5_677;

BB5_519:
	setp.gt.s32	%p266, %r3361, 87;
	@%p266 bra 	BB5_535;

	setp.gt.s32	%p278, %r3361, 83;
	@%p278 bra 	BB5_528;

	setp.gt.s32	%p284, %r3361, 81;
	@%p284 bra 	BB5_525;

	setp.eq.s32	%p287, %r3361, 80;
	@%p287 bra 	BB5_636;
	bra.uni 	BB5_523;

BB5_636:
	ld.local.u32 	%r3458, [%rd33];
	or.b32  	%r3459, %r3458, 128;
	st.local.u32 	[%rd33], %r3459;
	bra.uni 	BB5_677;

BB5_455:
	setp.gt.s32	%p314, %r3361, 55;
	@%p314 bra 	BB5_471;

	setp.gt.s32	%p326, %r3361, 51;
	@%p326 bra 	BB5_464;

	setp.gt.s32	%p332, %r3361, 49;
	@%p332 bra 	BB5_461;

	setp.eq.s32	%p335, %r3361, 48;
	@%p335 bra 	BB5_652;
	bra.uni 	BB5_459;

BB5_652:
	ld.local.u32 	%r3522, [%rd57];
	or.b32  	%r3523, %r3522, 128;
	st.local.u32 	[%rd57], %r3523;
	bra.uni 	BB5_677;

BB5_582:
	setp.gt.s32	%p219, %r3361, 119;
	@%p219 bra 	BB5_598;

	setp.gt.s32	%p231, %r3361, 115;
	@%p231 bra 	BB5_591;

	setp.gt.s32	%p237, %r3361, 113;
	@%p237 bra 	BB5_588;

	setp.eq.s32	%p240, %r3361, 112;
	@%p240 bra 	BB5_620;
	bra.uni 	BB5_586;

BB5_620:
	ld.local.u32 	%r3394, [%rd41];
	or.b32  	%r3395, %r3394, 128;
	st.local.u32 	[%rd41], %r3395;
	bra.uni 	BB5_677;

BB5_377:
	setp.gt.s32	%p385, %r3361, 11;
	@%p385 bra 	BB5_385;

	setp.gt.s32	%p391, %r3361, 9;
	@%p391 bra 	BB5_382;

	setp.eq.s32	%p394, %r3361, 8;
	@%p394 bra 	BB5_672;
	bra.uni 	BB5_380;

BB5_672:
	ld.local.u32 	%r3602, [%rd47];
	or.b32  	%r3603, %r3602, 128;
	st.local.u32 	[%rd47], %r3603;
	bra.uni 	BB5_677;

BB5_504:
	setp.gt.s32	%p290, %r3361, 75;
	@%p290 bra 	BB5_512;

	setp.gt.s32	%p296, %r3361, 73;
	@%p296 bra 	BB5_509;

	setp.eq.s32	%p299, %r3361, 72;
	@%p299 bra 	BB5_640;
	bra.uni 	BB5_507;

BB5_640:
	ld.local.u32 	%r3474, [%rd31];
	or.b32  	%r3475, %r3474, 128;
	st.local.u32 	[%rd31], %r3475;
	bra.uni 	BB5_677;

BB5_440:
	setp.gt.s32	%p338, %r3361, 43;
	@%p338 bra 	BB5_448;

	setp.gt.s32	%p344, %r3361, 41;
	@%p344 bra 	BB5_445;

	setp.eq.s32	%p347, %r3361, 40;
	@%p347 bra 	BB5_656;
	bra.uni 	BB5_443;

BB5_656:
	ld.local.u32 	%r3538, [%rd55];
	or.b32  	%r3539, %r3538, 128;
	st.local.u32 	[%rd55], %r3539;
	bra.uni 	BB5_677;

BB5_567:
	setp.gt.s32	%p243, %r3361, 107;
	@%p243 bra 	BB5_575;

	setp.gt.s32	%p249, %r3361, 105;
	@%p249 bra 	BB5_572;

	setp.eq.s32	%p252, %r3361, 104;
	@%p252 bra 	BB5_624;
	bra.uni 	BB5_570;

BB5_624:
	ld.local.u32 	%r3410, [%rd39];
	or.b32  	%r3411, %r3410, 128;
	st.local.u32 	[%rd39], %r3411;
	bra.uni 	BB5_677;

BB5_408:
	setp.gt.s32	%p362, %r3361, 27;
	@%p362 bra 	BB5_416;

	setp.gt.s32	%p368, %r3361, 25;
	@%p368 bra 	BB5_413;

	setp.eq.s32	%p371, %r3361, 24;
	@%p371 bra 	BB5_664;
	bra.uni 	BB5_411;

BB5_664:
	ld.local.u32 	%r3570, [%rd51];
	or.b32  	%r3571, %r3570, 128;
	st.local.u32 	[%rd51], %r3571;
	bra.uni 	BB5_677;

BB5_535:
	setp.gt.s32	%p267, %r3361, 91;
	@%p267 bra 	BB5_543;

	setp.gt.s32	%p273, %r3361, 89;
	@%p273 bra 	BB5_540;

	setp.eq.s32	%p276, %r3361, 88;
	@%p276 bra 	BB5_632;
	bra.uni 	BB5_538;

BB5_632:
	ld.local.u32 	%r3442, [%rd35];
	or.b32  	%r3443, %r3442, 128;
	st.local.u32 	[%rd35], %r3443;
	bra.uni 	BB5_677;

BB5_471:
	setp.gt.s32	%p315, %r3361, 59;
	@%p315 bra 	BB5_479;

	setp.gt.s32	%p321, %r3361, 57;
	@%p321 bra 	BB5_476;

	setp.eq.s32	%p324, %r3361, 56;
	@%p324 bra 	BB5_648;
	bra.uni 	BB5_474;

BB5_648:
	ld.local.u32 	%r3506, [%rd59];
	or.b32  	%r3507, %r3506, 128;
	st.local.u32 	[%rd59], %r3507;
	bra.uni 	BB5_677;

BB5_598:
	setp.gt.s32	%p220, %r3361, 123;
	@%p220 bra 	BB5_606;

	setp.gt.s32	%p226, %r3361, 121;
	@%p226 bra 	BB5_603;

	setp.eq.s32	%p229, %r3361, 120;
	@%p229 bra 	BB5_616;
	bra.uni 	BB5_601;

BB5_616:
	ld.local.u32 	%r3378, [%rd43];
	or.b32  	%r3379, %r3378, 128;
	st.local.u32 	[%rd43], %r3379;
	bra.uni 	BB5_677;

BB5_370:
	setp.gt.s32	%p397, %r3361, 5;
	@%p397 bra 	BB5_374;

	setp.eq.s32	%p400, %r3361, 4;
	@%p400 bra 	BB5_674;
	bra.uni 	BB5_372;

BB5_674:
	ld.local.u32 	%r3610, [%rd46];
	or.b32  	%r3611, %r3610, 128;
	st.local.u32 	[%rd46], %r3611;
	bra.uni 	BB5_677;

BB5_497:
	setp.gt.s32	%p302, %r3361, 69;
	@%p302 bra 	BB5_501;

	setp.eq.s32	%p305, %r3361, 68;
	@%p305 bra 	BB5_642;
	bra.uni 	BB5_499;

BB5_642:
	ld.local.u32 	%r3482, [%rd30];
	or.b32  	%r3483, %r3482, 128;
	st.local.u32 	[%rd30], %r3483;
	bra.uni 	BB5_677;

BB5_433:
	setp.gt.s32	%p350, %r3361, 37;
	@%p350 bra 	BB5_437;

	setp.eq.s32	%p353, %r3361, 36;
	@%p353 bra 	BB5_658;
	bra.uni 	BB5_435;

BB5_658:
	ld.local.u32 	%r3546, [%rd54];
	or.b32  	%r3547, %r3546, 128;
	st.local.u32 	[%rd54], %r3547;
	bra.uni 	BB5_677;

BB5_560:
	setp.gt.s32	%p255, %r3361, 101;
	@%p255 bra 	BB5_564;

	setp.eq.s32	%p258, %r3361, 100;
	@%p258 bra 	BB5_626;
	bra.uni 	BB5_562;

BB5_626:
	ld.local.u32 	%r3418, [%rd38];
	or.b32  	%r3419, %r3418, 128;
	st.local.u32 	[%rd38], %r3419;
	bra.uni 	BB5_677;

BB5_401:
	setp.gt.s32	%p374, %r3361, 21;
	@%p374 bra 	BB5_405;

	setp.eq.s32	%p377, %r3361, 20;
	@%p377 bra 	BB5_666;
	bra.uni 	BB5_403;

BB5_666:
	ld.local.u32 	%r3578, [%rd50];
	or.b32  	%r3579, %r3578, 128;
	st.local.u32 	[%rd50], %r3579;
	bra.uni 	BB5_677;

BB5_528:
	setp.gt.s32	%p279, %r3361, 85;
	@%p279 bra 	BB5_532;

	setp.eq.s32	%p282, %r3361, 84;
	@%p282 bra 	BB5_634;
	bra.uni 	BB5_530;

BB5_634:
	ld.local.u32 	%r3450, [%rd34];
	or.b32  	%r3451, %r3450, 128;
	st.local.u32 	[%rd34], %r3451;
	bra.uni 	BB5_677;

BB5_464:
	setp.gt.s32	%p327, %r3361, 53;
	@%p327 bra 	BB5_468;

	setp.eq.s32	%p330, %r3361, 52;
	@%p330 bra 	BB5_650;
	bra.uni 	BB5_466;

BB5_650:
	ld.local.u32 	%r3514, [%rd58];
	or.b32  	%r3515, %r3514, 128;
	st.local.u32 	[%rd58], %r3515;
	bra.uni 	BB5_677;

BB5_591:
	setp.gt.s32	%p232, %r3361, 117;
	@%p232 bra 	BB5_595;

	setp.eq.s32	%p235, %r3361, 116;
	@%p235 bra 	BB5_618;
	bra.uni 	BB5_593;

BB5_618:
	ld.local.u32 	%r3386, [%rd42];
	or.b32  	%r3387, %r3386, 128;
	st.local.u32 	[%rd42], %r3387;
	bra.uni 	BB5_677;

BB5_385:
	setp.gt.s32	%p386, %r3361, 13;
	@%p386 bra 	BB5_389;

	setp.eq.s32	%p389, %r3361, 12;
	@%p389 bra 	BB5_670;
	bra.uni 	BB5_387;

BB5_670:
	ld.local.u32 	%r3594, [%rd48];
	or.b32  	%r3595, %r3594, 128;
	st.local.u32 	[%rd48], %r3595;
	bra.uni 	BB5_677;

BB5_512:
	setp.gt.s32	%p291, %r3361, 77;
	@%p291 bra 	BB5_516;

	setp.eq.s32	%p294, %r3361, 76;
	@%p294 bra 	BB5_638;
	bra.uni 	BB5_514;

BB5_638:
	ld.local.u32 	%r3466, [%rd32];
	or.b32  	%r3467, %r3466, 128;
	st.local.u32 	[%rd32], %r3467;
	bra.uni 	BB5_677;

BB5_448:
	setp.gt.s32	%p339, %r3361, 45;
	@%p339 bra 	BB5_452;

	setp.eq.s32	%p342, %r3361, 44;
	@%p342 bra 	BB5_654;
	bra.uni 	BB5_450;

BB5_654:
	ld.local.u32 	%r3530, [%rd56];
	or.b32  	%r3531, %r3530, 128;
	st.local.u32 	[%rd56], %r3531;
	bra.uni 	BB5_677;

BB5_575:
	setp.gt.s32	%p244, %r3361, 109;
	@%p244 bra 	BB5_579;

	setp.eq.s32	%p247, %r3361, 108;
	@%p247 bra 	BB5_622;
	bra.uni 	BB5_577;

BB5_622:
	ld.local.u32 	%r3402, [%rd40];
	or.b32  	%r3403, %r3402, 128;
	st.local.u32 	[%rd40], %r3403;
	bra.uni 	BB5_677;

BB5_416:
	setp.gt.s32	%p363, %r3361, 29;
	@%p363 bra 	BB5_420;

	setp.eq.s32	%p366, %r3361, 28;
	@%p366 bra 	BB5_662;
	bra.uni 	BB5_418;

BB5_662:
	ld.local.u32 	%r3562, [%rd52];
	or.b32  	%r3563, %r3562, 128;
	st.local.u32 	[%rd52], %r3563;
	bra.uni 	BB5_677;

BB5_543:
	setp.gt.s32	%p268, %r3361, 93;
	@%p268 bra 	BB5_547;

	setp.eq.s32	%p271, %r3361, 92;
	@%p271 bra 	BB5_630;
	bra.uni 	BB5_545;

BB5_630:
	ld.local.u32 	%r3434, [%rd36];
	or.b32  	%r3435, %r3434, 128;
	st.local.u32 	[%rd36], %r3435;
	bra.uni 	BB5_677;

BB5_479:
	setp.gt.s32	%p316, %r3361, 61;
	@%p316 bra 	BB5_483;

	setp.eq.s32	%p319, %r3361, 60;
	@%p319 bra 	BB5_646;
	bra.uni 	BB5_481;

BB5_646:
	ld.local.u32 	%r3498, [%rd60];
	or.b32  	%r3499, %r3498, 128;
	st.local.u32 	[%rd60], %r3499;
	bra.uni 	BB5_677;

BB5_606:
	setp.gt.s32	%p221, %r3361, 125;
	@%p221 bra 	BB5_610;

	setp.eq.s32	%p224, %r3361, 124;
	@%p224 bra 	BB5_614;
	bra.uni 	BB5_608;

BB5_614:
	ld.local.u32 	%r3370, [%rd44];
	or.b32  	%r3371, %r3370, 128;
	st.local.u32 	[%rd44], %r3371;
	bra.uni 	BB5_677;

BB5_367:
	setp.eq.s32	%p403, %r3361, 2;
	@%p403 bra 	BB5_675;
	bra.uni 	BB5_368;

BB5_675:
	ld.local.u32 	%r3614, [%rd45];
	or.b32  	%r3615, %r3614, 8388608;
	st.local.u32 	[%rd45], %r3615;
	bra.uni 	BB5_677;

BB5_494:
	setp.eq.s32	%p308, %r3361, 66;
	@%p308 bra 	BB5_643;
	bra.uni 	BB5_495;

BB5_643:
	ld.local.u32 	%r3486, [%rd29];
	or.b32  	%r3487, %r3486, 8388608;
	st.local.u32 	[%rd29], %r3487;
	bra.uni 	BB5_677;

BB5_430:
	setp.eq.s32	%p356, %r3361, 34;
	@%p356 bra 	BB5_659;
	bra.uni 	BB5_431;

BB5_659:
	ld.local.u32 	%r3550, [%rd53];
	or.b32  	%r3551, %r3550, 8388608;
	st.local.u32 	[%rd53], %r3551;
	bra.uni 	BB5_677;

BB5_557:
	setp.eq.s32	%p261, %r3361, 98;
	@%p261 bra 	BB5_627;
	bra.uni 	BB5_558;

BB5_627:
	ld.local.u32 	%r3422, [%rd37];
	or.b32  	%r3423, %r3422, 8388608;
	st.local.u32 	[%rd37], %r3423;
	bra.uni 	BB5_677;

BB5_398:
	setp.eq.s32	%p380, %r3361, 18;
	@%p380 bra 	BB5_667;
	bra.uni 	BB5_399;

BB5_667:
	ld.local.u32 	%r3582, [%rd49];
	or.b32  	%r3583, %r3582, 8388608;
	st.local.u32 	[%rd49], %r3583;
	bra.uni 	BB5_677;

BB5_525:
	setp.eq.s32	%p285, %r3361, 82;
	@%p285 bra 	BB5_635;
	bra.uni 	BB5_526;

BB5_635:
	ld.local.u32 	%r3454, [%rd33];
	or.b32  	%r3455, %r3454, 8388608;
	st.local.u32 	[%rd33], %r3455;
	bra.uni 	BB5_677;

BB5_461:
	setp.eq.s32	%p333, %r3361, 50;
	@%p333 bra 	BB5_651;
	bra.uni 	BB5_462;

BB5_651:
	ld.local.u32 	%r3518, [%rd57];
	or.b32  	%r3519, %r3518, 8388608;
	st.local.u32 	[%rd57], %r3519;
	bra.uni 	BB5_677;

BB5_588:
	setp.eq.s32	%p238, %r3361, 114;
	@%p238 bra 	BB5_619;
	bra.uni 	BB5_589;

BB5_619:
	ld.local.u32 	%r3390, [%rd41];
	or.b32  	%r3391, %r3390, 8388608;
	st.local.u32 	[%rd41], %r3391;
	bra.uni 	BB5_677;

BB5_382:
	setp.eq.s32	%p392, %r3361, 10;
	@%p392 bra 	BB5_671;
	bra.uni 	BB5_383;

BB5_671:
	ld.local.u32 	%r3598, [%rd47];
	or.b32  	%r3599, %r3598, 8388608;
	st.local.u32 	[%rd47], %r3599;
	bra.uni 	BB5_677;

BB5_509:
	setp.eq.s32	%p297, %r3361, 74;
	@%p297 bra 	BB5_639;
	bra.uni 	BB5_510;

BB5_639:
	ld.local.u32 	%r3470, [%rd31];
	or.b32  	%r3471, %r3470, 8388608;
	st.local.u32 	[%rd31], %r3471;
	bra.uni 	BB5_677;

BB5_445:
	setp.eq.s32	%p345, %r3361, 42;
	@%p345 bra 	BB5_655;
	bra.uni 	BB5_446;

BB5_655:
	ld.local.u32 	%r3534, [%rd55];
	or.b32  	%r3535, %r3534, 8388608;
	st.local.u32 	[%rd55], %r3535;
	bra.uni 	BB5_677;

BB5_572:
	setp.eq.s32	%p250, %r3361, 106;
	@%p250 bra 	BB5_623;
	bra.uni 	BB5_573;

BB5_623:
	ld.local.u32 	%r3406, [%rd39];
	or.b32  	%r3407, %r3406, 8388608;
	st.local.u32 	[%rd39], %r3407;
	bra.uni 	BB5_677;

BB5_413:
	setp.eq.s32	%p369, %r3361, 26;
	@%p369 bra 	BB5_663;
	bra.uni 	BB5_414;

BB5_663:
	ld.local.u32 	%r3566, [%rd51];
	or.b32  	%r3567, %r3566, 8388608;
	st.local.u32 	[%rd51], %r3567;
	bra.uni 	BB5_677;

BB5_540:
	setp.eq.s32	%p274, %r3361, 90;
	@%p274 bra 	BB5_631;
	bra.uni 	BB5_541;

BB5_631:
	ld.local.u32 	%r3438, [%rd35];
	or.b32  	%r3439, %r3438, 8388608;
	st.local.u32 	[%rd35], %r3439;
	bra.uni 	BB5_677;

BB5_476:
	setp.eq.s32	%p322, %r3361, 58;
	@%p322 bra 	BB5_647;
	bra.uni 	BB5_477;

BB5_647:
	ld.local.u32 	%r3502, [%rd59];
	or.b32  	%r3503, %r3502, 8388608;
	st.local.u32 	[%rd59], %r3503;
	bra.uni 	BB5_677;

BB5_603:
	setp.eq.s32	%p227, %r3361, 122;
	@%p227 bra 	BB5_615;
	bra.uni 	BB5_604;

BB5_615:
	ld.local.u32 	%r3374, [%rd43];
	or.b32  	%r3375, %r3374, 8388608;
	st.local.u32 	[%rd43], %r3375;
	bra.uni 	BB5_677;

BB5_374:
	setp.eq.s32	%p398, %r3361, 6;
	@%p398 bra 	BB5_673;
	bra.uni 	BB5_375;

BB5_673:
	ld.local.u32 	%r3606, [%rd46];
	or.b32  	%r3607, %r3606, 8388608;
	st.local.u32 	[%rd46], %r3607;
	bra.uni 	BB5_677;

BB5_501:
	setp.eq.s32	%p303, %r3361, 70;
	@%p303 bra 	BB5_641;
	bra.uni 	BB5_502;

BB5_641:
	ld.local.u32 	%r3478, [%rd30];
	or.b32  	%r3479, %r3478, 8388608;
	st.local.u32 	[%rd30], %r3479;
	bra.uni 	BB5_677;

BB5_437:
	setp.eq.s32	%p351, %r3361, 38;
	@%p351 bra 	BB5_657;
	bra.uni 	BB5_438;

BB5_657:
	ld.local.u32 	%r3542, [%rd54];
	or.b32  	%r3543, %r3542, 8388608;
	st.local.u32 	[%rd54], %r3543;
	bra.uni 	BB5_677;

BB5_564:
	setp.eq.s32	%p256, %r3361, 102;
	@%p256 bra 	BB5_625;
	bra.uni 	BB5_565;

BB5_625:
	ld.local.u32 	%r3414, [%rd38];
	or.b32  	%r3415, %r3414, 8388608;
	st.local.u32 	[%rd38], %r3415;
	bra.uni 	BB5_677;

BB5_405:
	setp.eq.s32	%p375, %r3361, 22;
	@%p375 bra 	BB5_665;
	bra.uni 	BB5_406;

BB5_665:
	ld.local.u32 	%r3574, [%rd50];
	or.b32  	%r3575, %r3574, 8388608;
	st.local.u32 	[%rd50], %r3575;
	bra.uni 	BB5_677;

BB5_532:
	setp.eq.s32	%p280, %r3361, 86;
	@%p280 bra 	BB5_633;
	bra.uni 	BB5_533;

BB5_633:
	ld.local.u32 	%r3446, [%rd34];
	or.b32  	%r3447, %r3446, 8388608;
	st.local.u32 	[%rd34], %r3447;
	bra.uni 	BB5_677;

BB5_468:
	setp.eq.s32	%p328, %r3361, 54;
	@%p328 bra 	BB5_649;
	bra.uni 	BB5_469;

BB5_649:
	ld.local.u32 	%r3510, [%rd58];
	or.b32  	%r3511, %r3510, 8388608;
	st.local.u32 	[%rd58], %r3511;
	bra.uni 	BB5_677;

BB5_595:
	setp.eq.s32	%p233, %r3361, 118;
	@%p233 bra 	BB5_617;
	bra.uni 	BB5_596;

BB5_617:
	ld.local.u32 	%r3382, [%rd42];
	or.b32  	%r3383, %r3382, 8388608;
	st.local.u32 	[%rd42], %r3383;
	bra.uni 	BB5_677;

BB5_389:
	setp.eq.s32	%p387, %r3361, 14;
	@%p387 bra 	BB5_669;
	bra.uni 	BB5_390;

BB5_669:
	ld.local.u32 	%r3590, [%rd48];
	or.b32  	%r3591, %r3590, 8388608;
	st.local.u32 	[%rd48], %r3591;
	bra.uni 	BB5_677;

BB5_516:
	setp.eq.s32	%p292, %r3361, 78;
	@%p292 bra 	BB5_637;
	bra.uni 	BB5_517;

BB5_637:
	ld.local.u32 	%r3462, [%rd32];
	or.b32  	%r3463, %r3462, 8388608;
	st.local.u32 	[%rd32], %r3463;
	bra.uni 	BB5_677;

BB5_452:
	setp.eq.s32	%p340, %r3361, 46;
	@%p340 bra 	BB5_653;
	bra.uni 	BB5_453;

BB5_653:
	ld.local.u32 	%r3526, [%rd56];
	or.b32  	%r3527, %r3526, 8388608;
	st.local.u32 	[%rd56], %r3527;
	bra.uni 	BB5_677;

BB5_579:
	setp.eq.s32	%p245, %r3361, 110;
	@%p245 bra 	BB5_621;
	bra.uni 	BB5_580;

BB5_621:
	ld.local.u32 	%r3398, [%rd40];
	or.b32  	%r3399, %r3398, 8388608;
	st.local.u32 	[%rd40], %r3399;
	bra.uni 	BB5_677;

BB5_420:
	setp.eq.s32	%p364, %r3361, 30;
	@%p364 bra 	BB5_661;
	bra.uni 	BB5_421;

BB5_661:
	ld.local.u32 	%r3558, [%rd52];
	or.b32  	%r3559, %r3558, 8388608;
	st.local.u32 	[%rd52], %r3559;
	bra.uni 	BB5_677;

BB5_547:
	setp.eq.s32	%p269, %r3361, 94;
	@%p269 bra 	BB5_629;
	bra.uni 	BB5_548;

BB5_629:
	ld.local.u32 	%r3430, [%rd36];
	or.b32  	%r3431, %r3430, 8388608;
	st.local.u32 	[%rd36], %r3431;
	bra.uni 	BB5_677;

BB5_483:
	setp.eq.s32	%p317, %r3361, 62;
	@%p317 bra 	BB5_645;
	bra.uni 	BB5_484;

BB5_645:
	ld.local.u32 	%r3494, [%rd60];
	or.b32  	%r3495, %r3494, 8388608;
	st.local.u32 	[%rd60], %r3495;
	bra.uni 	BB5_677;

BB5_610:
	setp.eq.s32	%p222, %r3361, 126;
	@%p222 bra 	BB5_613;
	bra.uni 	BB5_611;

BB5_613:
	ld.local.u32 	%r3366, [%rd44];
	or.b32  	%r3367, %r3366, 8388608;
	st.local.u32 	[%rd44], %r3367;
	bra.uni 	BB5_677;

BB5_365:
	setp.eq.s32	%p406, %r3361, 1;
	@%p406 bra 	BB5_366;
	bra.uni 	BB5_677;

BB5_366:
	ld.local.u32 	%r3616, [%rd45];
	or.b32  	%r3617, %r3616, 32768;
	st.local.u32 	[%rd45], %r3617;
	bra.uni 	BB5_677;

BB5_492:
	setp.eq.s32	%p311, %r3361, 65;
	@%p311 bra 	BB5_493;
	bra.uni 	BB5_677;

BB5_493:
	ld.local.u32 	%r3488, [%rd29];
	or.b32  	%r3489, %r3488, 32768;
	st.local.u32 	[%rd29], %r3489;
	bra.uni 	BB5_677;

BB5_428:
	setp.eq.s32	%p359, %r3361, 33;
	@%p359 bra 	BB5_429;
	bra.uni 	BB5_677;

BB5_429:
	ld.local.u32 	%r3552, [%rd53];
	or.b32  	%r3553, %r3552, 32768;
	st.local.u32 	[%rd53], %r3553;
	bra.uni 	BB5_677;

BB5_555:
	setp.eq.s32	%p264, %r3361, 97;
	@%p264 bra 	BB5_556;
	bra.uni 	BB5_677;

BB5_556:
	ld.local.u32 	%r3424, [%rd37];
	or.b32  	%r3425, %r3424, 32768;
	st.local.u32 	[%rd37], %r3425;
	bra.uni 	BB5_677;

BB5_396:
	setp.eq.s32	%p383, %r3361, 17;
	@%p383 bra 	BB5_397;
	bra.uni 	BB5_677;

BB5_397:
	ld.local.u32 	%r3584, [%rd49];
	or.b32  	%r3585, %r3584, 32768;
	st.local.u32 	[%rd49], %r3585;
	bra.uni 	BB5_677;

BB5_523:
	setp.eq.s32	%p288, %r3361, 81;
	@%p288 bra 	BB5_524;
	bra.uni 	BB5_677;

BB5_524:
	ld.local.u32 	%r3456, [%rd33];
	or.b32  	%r3457, %r3456, 32768;
	st.local.u32 	[%rd33], %r3457;
	bra.uni 	BB5_677;

BB5_459:
	setp.eq.s32	%p336, %r3361, 49;
	@%p336 bra 	BB5_460;
	bra.uni 	BB5_677;

BB5_460:
	ld.local.u32 	%r3520, [%rd57];
	or.b32  	%r3521, %r3520, 32768;
	st.local.u32 	[%rd57], %r3521;
	bra.uni 	BB5_677;

BB5_586:
	setp.eq.s32	%p241, %r3361, 113;
	@%p241 bra 	BB5_587;
	bra.uni 	BB5_677;

BB5_587:
	ld.local.u32 	%r3392, [%rd41];
	or.b32  	%r3393, %r3392, 32768;
	st.local.u32 	[%rd41], %r3393;
	bra.uni 	BB5_677;

BB5_380:
	setp.eq.s32	%p395, %r3361, 9;
	@%p395 bra 	BB5_381;
	bra.uni 	BB5_677;

BB5_381:
	ld.local.u32 	%r3600, [%rd47];
	or.b32  	%r3601, %r3600, 32768;
	st.local.u32 	[%rd47], %r3601;
	bra.uni 	BB5_677;

BB5_507:
	setp.eq.s32	%p300, %r3361, 73;
	@%p300 bra 	BB5_508;
	bra.uni 	BB5_677;

BB5_508:
	ld.local.u32 	%r3472, [%rd31];
	or.b32  	%r3473, %r3472, 32768;
	st.local.u32 	[%rd31], %r3473;
	bra.uni 	BB5_677;

BB5_443:
	setp.eq.s32	%p348, %r3361, 41;
	@%p348 bra 	BB5_444;
	bra.uni 	BB5_677;

BB5_444:
	ld.local.u32 	%r3536, [%rd55];
	or.b32  	%r3537, %r3536, 32768;
	st.local.u32 	[%rd55], %r3537;
	bra.uni 	BB5_677;

BB5_570:
	setp.eq.s32	%p253, %r3361, 105;
	@%p253 bra 	BB5_571;
	bra.uni 	BB5_677;

BB5_571:
	ld.local.u32 	%r3408, [%rd39];
	or.b32  	%r3409, %r3408, 32768;
	st.local.u32 	[%rd39], %r3409;
	bra.uni 	BB5_677;

BB5_411:
	setp.eq.s32	%p372, %r3361, 25;
	@%p372 bra 	BB5_412;
	bra.uni 	BB5_677;

BB5_412:
	ld.local.u32 	%r3568, [%rd51];
	or.b32  	%r3569, %r3568, 32768;
	st.local.u32 	[%rd51], %r3569;
	bra.uni 	BB5_677;

BB5_538:
	setp.eq.s32	%p277, %r3361, 89;
	@%p277 bra 	BB5_539;
	bra.uni 	BB5_677;

BB5_539:
	ld.local.u32 	%r3440, [%rd35];
	or.b32  	%r3441, %r3440, 32768;
	st.local.u32 	[%rd35], %r3441;
	bra.uni 	BB5_677;

BB5_474:
	setp.eq.s32	%p325, %r3361, 57;
	@%p325 bra 	BB5_475;
	bra.uni 	BB5_677;

BB5_475:
	ld.local.u32 	%r3504, [%rd59];
	or.b32  	%r3505, %r3504, 32768;
	st.local.u32 	[%rd59], %r3505;
	bra.uni 	BB5_677;

BB5_601:
	setp.eq.s32	%p230, %r3361, 121;
	@%p230 bra 	BB5_602;
	bra.uni 	BB5_677;

BB5_602:
	ld.local.u32 	%r3376, [%rd43];
	or.b32  	%r3377, %r3376, 32768;
	st.local.u32 	[%rd43], %r3377;
	bra.uni 	BB5_677;

BB5_372:
	setp.eq.s32	%p401, %r3361, 5;
	@%p401 bra 	BB5_373;
	bra.uni 	BB5_677;

BB5_373:
	ld.local.u32 	%r3608, [%rd46];
	or.b32  	%r3609, %r3608, 32768;
	st.local.u32 	[%rd46], %r3609;
	bra.uni 	BB5_677;

BB5_499:
	setp.eq.s32	%p306, %r3361, 69;
	@%p306 bra 	BB5_500;
	bra.uni 	BB5_677;

BB5_500:
	ld.local.u32 	%r3480, [%rd30];
	or.b32  	%r3481, %r3480, 32768;
	st.local.u32 	[%rd30], %r3481;
	bra.uni 	BB5_677;

BB5_435:
	setp.eq.s32	%p354, %r3361, 37;
	@%p354 bra 	BB5_436;
	bra.uni 	BB5_677;

BB5_436:
	ld.local.u32 	%r3544, [%rd54];
	or.b32  	%r3545, %r3544, 32768;
	st.local.u32 	[%rd54], %r3545;
	bra.uni 	BB5_677;

BB5_562:
	setp.eq.s32	%p259, %r3361, 101;
	@%p259 bra 	BB5_563;
	bra.uni 	BB5_677;

BB5_563:
	ld.local.u32 	%r3416, [%rd38];
	or.b32  	%r3417, %r3416, 32768;
	st.local.u32 	[%rd38], %r3417;
	bra.uni 	BB5_677;

BB5_403:
	setp.eq.s32	%p378, %r3361, 21;
	@%p378 bra 	BB5_404;
	bra.uni 	BB5_677;

BB5_404:
	ld.local.u32 	%r3576, [%rd50];
	or.b32  	%r3577, %r3576, 32768;
	st.local.u32 	[%rd50], %r3577;
	bra.uni 	BB5_677;

BB5_530:
	setp.eq.s32	%p283, %r3361, 85;
	@%p283 bra 	BB5_531;
	bra.uni 	BB5_677;

BB5_531:
	ld.local.u32 	%r3448, [%rd34];
	or.b32  	%r3449, %r3448, 32768;
	st.local.u32 	[%rd34], %r3449;
	bra.uni 	BB5_677;

BB5_466:
	setp.eq.s32	%p331, %r3361, 53;
	@%p331 bra 	BB5_467;
	bra.uni 	BB5_677;

BB5_467:
	ld.local.u32 	%r3512, [%rd58];
	or.b32  	%r3513, %r3512, 32768;
	st.local.u32 	[%rd58], %r3513;
	bra.uni 	BB5_677;

BB5_593:
	setp.eq.s32	%p236, %r3361, 117;
	@%p236 bra 	BB5_594;
	bra.uni 	BB5_677;

BB5_594:
	ld.local.u32 	%r3384, [%rd42];
	or.b32  	%r3385, %r3384, 32768;
	st.local.u32 	[%rd42], %r3385;
	bra.uni 	BB5_677;

BB5_387:
	setp.eq.s32	%p390, %r3361, 13;
	@%p390 bra 	BB5_388;
	bra.uni 	BB5_677;

BB5_388:
	ld.local.u32 	%r3592, [%rd48];
	or.b32  	%r3593, %r3592, 32768;
	st.local.u32 	[%rd48], %r3593;
	bra.uni 	BB5_677;

BB5_514:
	setp.eq.s32	%p295, %r3361, 77;
	@%p295 bra 	BB5_515;
	bra.uni 	BB5_677;

BB5_515:
	ld.local.u32 	%r3464, [%rd32];
	or.b32  	%r3465, %r3464, 32768;
	st.local.u32 	[%rd32], %r3465;
	bra.uni 	BB5_677;

BB5_450:
	setp.eq.s32	%p343, %r3361, 45;
	@%p343 bra 	BB5_451;
	bra.uni 	BB5_677;

BB5_451:
	ld.local.u32 	%r3528, [%rd56];
	or.b32  	%r3529, %r3528, 32768;
	st.local.u32 	[%rd56], %r3529;
	bra.uni 	BB5_677;

BB5_577:
	setp.eq.s32	%p248, %r3361, 109;
	@%p248 bra 	BB5_578;
	bra.uni 	BB5_677;

BB5_578:
	ld.local.u32 	%r3400, [%rd40];
	or.b32  	%r3401, %r3400, 32768;
	st.local.u32 	[%rd40], %r3401;
	bra.uni 	BB5_677;

BB5_418:
	setp.eq.s32	%p367, %r3361, 29;
	@%p367 bra 	BB5_419;
	bra.uni 	BB5_677;

BB5_419:
	ld.local.u32 	%r3560, [%rd52];
	or.b32  	%r3561, %r3560, 32768;
	st.local.u32 	[%rd52], %r3561;
	bra.uni 	BB5_677;

BB5_545:
	setp.eq.s32	%p272, %r3361, 93;
	@%p272 bra 	BB5_546;
	bra.uni 	BB5_677;

BB5_546:
	ld.local.u32 	%r3432, [%rd36];
	or.b32  	%r3433, %r3432, 32768;
	st.local.u32 	[%rd36], %r3433;
	bra.uni 	BB5_677;

BB5_481:
	setp.eq.s32	%p320, %r3361, 61;
	@%p320 bra 	BB5_482;
	bra.uni 	BB5_677;

BB5_482:
	ld.local.u32 	%r3496, [%rd60];
	or.b32  	%r3497, %r3496, 32768;
	st.local.u32 	[%rd60], %r3497;
	bra.uni 	BB5_677;

BB5_608:
	setp.eq.s32	%p225, %r3361, 125;
	@%p225 bra 	BB5_609;
	bra.uni 	BB5_677;

BB5_609:
	ld.local.u32 	%r3368, [%rd44];
	or.b32  	%r3369, %r3368, 32768;
	st.local.u32 	[%rd44], %r3369;
	bra.uni 	BB5_677;

BB5_368:
	setp.eq.s32	%p404, %r3361, 3;
	@%p404 bra 	BB5_369;
	bra.uni 	BB5_677;

BB5_369:
	ld.local.u32 	%r3612, [%rd45];
	or.b32  	%r3613, %r3612, -2147483648;
	st.local.u32 	[%rd45], %r3613;
	bra.uni 	BB5_677;

BB5_495:
	setp.eq.s32	%p309, %r3361, 67;
	@%p309 bra 	BB5_496;
	bra.uni 	BB5_677;

BB5_496:
	ld.local.u32 	%r3484, [%rd29];
	or.b32  	%r3485, %r3484, -2147483648;
	st.local.u32 	[%rd29], %r3485;
	bra.uni 	BB5_677;

BB5_431:
	setp.eq.s32	%p357, %r3361, 35;
	@%p357 bra 	BB5_432;
	bra.uni 	BB5_677;

BB5_432:
	ld.local.u32 	%r3548, [%rd53];
	or.b32  	%r3549, %r3548, -2147483648;
	st.local.u32 	[%rd53], %r3549;
	bra.uni 	BB5_677;

BB5_558:
	setp.eq.s32	%p262, %r3361, 99;
	@%p262 bra 	BB5_559;
	bra.uni 	BB5_677;

BB5_559:
	ld.local.u32 	%r3420, [%rd37];
	or.b32  	%r3421, %r3420, -2147483648;
	st.local.u32 	[%rd37], %r3421;
	bra.uni 	BB5_677;

BB5_399:
	setp.eq.s32	%p381, %r3361, 19;
	@%p381 bra 	BB5_400;
	bra.uni 	BB5_677;

BB5_400:
	ld.local.u32 	%r3580, [%rd49];
	or.b32  	%r3581, %r3580, -2147483648;
	st.local.u32 	[%rd49], %r3581;
	bra.uni 	BB5_677;

BB5_526:
	setp.eq.s32	%p286, %r3361, 83;
	@%p286 bra 	BB5_527;
	bra.uni 	BB5_677;

BB5_527:
	ld.local.u32 	%r3452, [%rd33];
	or.b32  	%r3453, %r3452, -2147483648;
	st.local.u32 	[%rd33], %r3453;
	bra.uni 	BB5_677;

BB5_462:
	setp.eq.s32	%p334, %r3361, 51;
	@%p334 bra 	BB5_463;
	bra.uni 	BB5_677;

BB5_463:
	ld.local.u32 	%r3516, [%rd57];
	or.b32  	%r3517, %r3516, -2147483648;
	st.local.u32 	[%rd57], %r3517;
	bra.uni 	BB5_677;

BB5_589:
	setp.eq.s32	%p239, %r3361, 115;
	@%p239 bra 	BB5_590;
	bra.uni 	BB5_677;

BB5_590:
	ld.local.u32 	%r3388, [%rd41];
	or.b32  	%r3389, %r3388, -2147483648;
	st.local.u32 	[%rd41], %r3389;
	bra.uni 	BB5_677;

BB5_383:
	setp.eq.s32	%p393, %r3361, 11;
	@%p393 bra 	BB5_384;
	bra.uni 	BB5_677;

BB5_384:
	ld.local.u32 	%r3596, [%rd47];
	or.b32  	%r3597, %r3596, -2147483648;
	st.local.u32 	[%rd47], %r3597;
	bra.uni 	BB5_677;

BB5_510:
	setp.eq.s32	%p298, %r3361, 75;
	@%p298 bra 	BB5_511;
	bra.uni 	BB5_677;

BB5_511:
	ld.local.u32 	%r3468, [%rd31];
	or.b32  	%r3469, %r3468, -2147483648;
	st.local.u32 	[%rd31], %r3469;
	bra.uni 	BB5_677;

BB5_446:
	setp.eq.s32	%p346, %r3361, 43;
	@%p346 bra 	BB5_447;
	bra.uni 	BB5_677;

BB5_447:
	ld.local.u32 	%r3532, [%rd55];
	or.b32  	%r3533, %r3532, -2147483648;
	st.local.u32 	[%rd55], %r3533;
	bra.uni 	BB5_677;

BB5_573:
	setp.eq.s32	%p251, %r3361, 107;
	@%p251 bra 	BB5_574;
	bra.uni 	BB5_677;

BB5_574:
	ld.local.u32 	%r3404, [%rd39];
	or.b32  	%r3405, %r3404, -2147483648;
	st.local.u32 	[%rd39], %r3405;
	bra.uni 	BB5_677;

BB5_414:
	setp.eq.s32	%p370, %r3361, 27;
	@%p370 bra 	BB5_415;
	bra.uni 	BB5_677;

BB5_415:
	ld.local.u32 	%r3564, [%rd51];
	or.b32  	%r3565, %r3564, -2147483648;
	st.local.u32 	[%rd51], %r3565;
	bra.uni 	BB5_677;

BB5_541:
	setp.eq.s32	%p275, %r3361, 91;
	@%p275 bra 	BB5_542;
	bra.uni 	BB5_677;

BB5_542:
	ld.local.u32 	%r3436, [%rd35];
	or.b32  	%r3437, %r3436, -2147483648;
	st.local.u32 	[%rd35], %r3437;
	bra.uni 	BB5_677;

BB5_477:
	setp.eq.s32	%p323, %r3361, 59;
	@%p323 bra 	BB5_478;
	bra.uni 	BB5_677;

BB5_478:
	ld.local.u32 	%r3500, [%rd59];
	or.b32  	%r3501, %r3500, -2147483648;
	st.local.u32 	[%rd59], %r3501;
	bra.uni 	BB5_677;

BB5_604:
	setp.eq.s32	%p228, %r3361, 123;
	@%p228 bra 	BB5_605;
	bra.uni 	BB5_677;

BB5_605:
	ld.local.u32 	%r3372, [%rd43];
	or.b32  	%r3373, %r3372, -2147483648;
	st.local.u32 	[%rd43], %r3373;
	bra.uni 	BB5_677;

BB5_375:
	setp.eq.s32	%p399, %r3361, 7;
	@%p399 bra 	BB5_376;
	bra.uni 	BB5_677;

BB5_376:
	ld.local.u32 	%r3604, [%rd46];
	or.b32  	%r3605, %r3604, -2147483648;
	st.local.u32 	[%rd46], %r3605;
	bra.uni 	BB5_677;

BB5_502:
	setp.eq.s32	%p304, %r3361, 71;
	@%p304 bra 	BB5_503;
	bra.uni 	BB5_677;

BB5_503:
	ld.local.u32 	%r3476, [%rd30];
	or.b32  	%r3477, %r3476, -2147483648;
	st.local.u32 	[%rd30], %r3477;
	bra.uni 	BB5_677;

BB5_438:
	setp.eq.s32	%p352, %r3361, 39;
	@%p352 bra 	BB5_439;
	bra.uni 	BB5_677;

BB5_439:
	ld.local.u32 	%r3540, [%rd54];
	or.b32  	%r3541, %r3540, -2147483648;
	st.local.u32 	[%rd54], %r3541;
	bra.uni 	BB5_677;

BB5_565:
	setp.eq.s32	%p257, %r3361, 103;
	@%p257 bra 	BB5_566;
	bra.uni 	BB5_677;

BB5_566:
	ld.local.u32 	%r3412, [%rd38];
	or.b32  	%r3413, %r3412, -2147483648;
	st.local.u32 	[%rd38], %r3413;
	bra.uni 	BB5_677;

BB5_406:
	setp.eq.s32	%p376, %r3361, 23;
	@%p376 bra 	BB5_407;
	bra.uni 	BB5_677;

BB5_407:
	ld.local.u32 	%r3572, [%rd50];
	or.b32  	%r3573, %r3572, -2147483648;
	st.local.u32 	[%rd50], %r3573;
	bra.uni 	BB5_677;

BB5_533:
	setp.eq.s32	%p281, %r3361, 87;
	@%p281 bra 	BB5_534;
	bra.uni 	BB5_677;

BB5_534:
	ld.local.u32 	%r3444, [%rd34];
	or.b32  	%r3445, %r3444, -2147483648;
	st.local.u32 	[%rd34], %r3445;
	bra.uni 	BB5_677;

BB5_469:
	setp.eq.s32	%p329, %r3361, 55;
	@%p329 bra 	BB5_470;
	bra.uni 	BB5_677;

BB5_470:
	ld.local.u32 	%r3508, [%rd58];
	or.b32  	%r3509, %r3508, -2147483648;
	st.local.u32 	[%rd58], %r3509;
	bra.uni 	BB5_677;

BB5_596:
	setp.eq.s32	%p234, %r3361, 119;
	@%p234 bra 	BB5_597;
	bra.uni 	BB5_677;

BB5_597:
	ld.local.u32 	%r3380, [%rd42];
	or.b32  	%r3381, %r3380, -2147483648;
	st.local.u32 	[%rd42], %r3381;
	bra.uni 	BB5_677;

BB5_390:
	setp.eq.s32	%p388, %r3361, 15;
	@%p388 bra 	BB5_391;
	bra.uni 	BB5_677;

BB5_391:
	ld.local.u32 	%r3588, [%rd48];
	or.b32  	%r3589, %r3588, -2147483648;
	st.local.u32 	[%rd48], %r3589;
	bra.uni 	BB5_677;

BB5_517:
	setp.eq.s32	%p293, %r3361, 79;
	@%p293 bra 	BB5_518;
	bra.uni 	BB5_677;

BB5_518:
	ld.local.u32 	%r3460, [%rd32];
	or.b32  	%r3461, %r3460, -2147483648;
	st.local.u32 	[%rd32], %r3461;
	bra.uni 	BB5_677;

BB5_453:
	setp.eq.s32	%p341, %r3361, 47;
	@%p341 bra 	BB5_454;
	bra.uni 	BB5_677;

BB5_454:
	ld.local.u32 	%r3524, [%rd56];
	or.b32  	%r3525, %r3524, -2147483648;
	st.local.u32 	[%rd56], %r3525;
	bra.uni 	BB5_677;

BB5_580:
	setp.eq.s32	%p246, %r3361, 111;
	@%p246 bra 	BB5_581;
	bra.uni 	BB5_677;

BB5_581:
	ld.local.u32 	%r3396, [%rd40];
	or.b32  	%r3397, %r3396, -2147483648;
	st.local.u32 	[%rd40], %r3397;
	bra.uni 	BB5_677;

BB5_421:
	setp.eq.s32	%p365, %r3361, 31;
	@%p365 bra 	BB5_422;
	bra.uni 	BB5_677;

BB5_422:
	ld.local.u32 	%r3556, [%rd52];
	or.b32  	%r3557, %r3556, -2147483648;
	st.local.u32 	[%rd52], %r3557;
	bra.uni 	BB5_677;

BB5_548:
	setp.eq.s32	%p270, %r3361, 95;
	@%p270 bra 	BB5_549;
	bra.uni 	BB5_677;

BB5_549:
	ld.local.u32 	%r3428, [%rd36];
	or.b32  	%r3429, %r3428, -2147483648;
	st.local.u32 	[%rd36], %r3429;
	bra.uni 	BB5_677;

BB5_484:
	setp.eq.s32	%p318, %r3361, 63;
	@%p318 bra 	BB5_485;
	bra.uni 	BB5_677;

BB5_485:
	ld.local.u32 	%r3492, [%rd60];
	or.b32  	%r3493, %r3492, -2147483648;
	st.local.u32 	[%rd60], %r3493;
	bra.uni 	BB5_677;

BB5_611:
	setp.ne.s32	%p223, %r3361, 127;
	@%p223 bra 	BB5_677;

	ld.local.u32 	%r3364, [%rd44];
	or.b32  	%r3365, %r3364, -2147483648;
	st.local.u32 	[%rd44], %r3365;

BB5_677:
	ld.local.u64 	%rd6941, [%rd10];
	ld.local.u64 	%rd6940, [%rd22];
	ld.local.u64 	%rd6939, [%rd23];
	ld.local.u64 	%rd6938, [%rd24];
	ld.local.u64 	%rd6937, [%rd25];
	ld.local.u64 	%rd6936, [%rd26];
	ld.local.u64 	%rd6935, [%rd27];
	ld.local.u64 	%rd6934, [%rd28];
	ld.local.u32 	%r11836, [%rd45];
	ld.local.u32 	%r11835, [%rd46];
	setp.gt.u32	%p407, %r127, 111;
	@%p407 bra 	BB5_679;
	bra.uni 	BB5_678;

BB5_679:
	mov.b64	%rd6926, {%r11835, %r11836};
	ld.local.u32 	%r3621, [%rd47];
	ld.local.u32 	%r3622, [%rd48];
	mov.b64	%rd6927, {%r3622, %r3621};
	ld.local.u32 	%r3623, [%rd49];
	ld.local.u32 	%r3624, [%rd50];
	mov.b64	%rd6928, {%r3624, %r3623};
	ld.local.u32 	%r3625, [%rd51];
	ld.local.u32 	%r3626, [%rd52];
	mov.b64	%rd6929, {%r3626, %r3625};
	ld.local.u32 	%r3627, [%rd53];
	ld.local.u32 	%r3628, [%rd54];
	mov.b64	%rd6930, {%r3628, %r3627};
	ld.local.u32 	%r3629, [%rd55];
	ld.local.u32 	%r3630, [%rd56];
	mov.b64	%rd6931, {%r3630, %r3629};
	ld.local.u32 	%r3631, [%rd57];
	ld.local.u32 	%r3632, [%rd58];
	mov.b64	%rd6932, {%r3632, %r3631};
	ld.local.u32 	%r3633, [%rd59];
	ld.local.u32 	%r3634, [%rd60];
	mov.b64	%rd6933, {%r3634, %r3633};
	ld.local.u32 	%r3635, [%rd29];
	ld.local.u32 	%r3636, [%rd30];
	mov.b64	%rd6917, {%r3636, %r3635};
	ld.local.u32 	%r3637, [%rd31];
	ld.local.u32 	%r3638, [%rd32];
	mov.b64	%rd6916, {%r3638, %r3637};
	ld.local.u32 	%r3639, [%rd33];
	ld.local.u32 	%r3640, [%rd34];
	mov.b64	%rd6915, {%r3640, %r3639};
	ld.local.u32 	%r3641, [%rd35];
	ld.local.u32 	%r3642, [%rd36];
	mov.b64	%rd6914, {%r3642, %r3641};
	ld.local.u32 	%r3643, [%rd37];
	ld.local.u32 	%r3644, [%rd38];
	mov.b64	%rd6913, {%r3644, %r3643};
	ld.local.u32 	%r3645, [%rd39];
	ld.local.u32 	%r3646, [%rd40];
	mov.b64	%rd6912, {%r3646, %r3645};
	ld.local.u32 	%r3647, [%rd41];
	ld.local.u32 	%r3648, [%rd42];
	mov.b64	%rd6911, {%r3648, %r3647};
	ld.local.u32 	%r3649, [%rd43];
	ld.local.u32 	%r3650, [%rd44];
	mov.b64	%rd6910, {%r3650, %r3649};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3651,%dummy}, %rd6937;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3652}, %rd6937;
	}
	shf.r.wrap.b32 	%r3653, %r3652, %r3651, 18;
	shf.r.wrap.b32 	%r3654, %r3651, %r3652, 18;
	mov.b64 	%rd3762, {%r3654, %r3653};
	shf.r.wrap.b32 	%r3655, %r3652, %r3651, 14;
	shf.r.wrap.b32 	%r3656, %r3651, %r3652, 14;
	mov.b64 	%rd3763, {%r3656, %r3655};
	xor.b64  	%rd3764, %rd3762, %rd3763;
	shf.l.wrap.b32 	%r3657, %r3651, %r3652, 23;
	shf.l.wrap.b32 	%r3658, %r3652, %r3651, 23;
	mov.b64 	%rd3765, {%r3658, %r3657};
	xor.b64  	%rd3766, %rd3764, %rd3765;
	xor.b64  	%rd3767, %rd6935, %rd6936;
	and.b64  	%rd3768, %rd3767, %rd6937;
	xor.b64  	%rd3769, %rd3768, %rd6935;
	add.s64 	%rd3770, %rd3769, %rd6934;
	add.s64 	%rd3771, %rd3770, %rd6926;
	add.s64 	%rd3772, %rd3771, %rd63;
	add.s64 	%rd3773, %rd3772, %rd3766;
	add.s64 	%rd3774, %rd3773, %rd6938;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3659}, %rd6941;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3660,%dummy}, %rd6941;
	}
	shf.l.wrap.b32 	%r3661, %r3660, %r3659, 30;
	shf.l.wrap.b32 	%r3662, %r3659, %r3660, 30;
	mov.b64 	%rd3775, {%r3662, %r3661};
	shf.r.wrap.b32 	%r3663, %r3659, %r3660, 28;
	shf.r.wrap.b32 	%r3664, %r3660, %r3659, 28;
	mov.b64 	%rd3776, {%r3664, %r3663};
	xor.b64  	%rd3777, %rd3775, %rd3776;
	shf.l.wrap.b32 	%r3665, %r3660, %r3659, 25;
	shf.l.wrap.b32 	%r3666, %r3659, %r3660, 25;
	mov.b64 	%rd3778, {%r3666, %r3665};
	xor.b64  	%rd3779, %rd3777, %rd3778;
	xor.b64  	%rd3780, %rd6940, %rd6941;
	xor.b64  	%rd3781, %rd6939, %rd6941;
	and.b64  	%rd3782, %rd3781, %rd3780;
	xor.b64  	%rd3783, %rd3782, %rd6941;
	add.s64 	%rd3784, %rd3773, %rd3783;
	add.s64 	%rd3785, %rd3784, %rd3779;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3667,%dummy}, %rd3774;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3668}, %rd3774;
	}
	shf.r.wrap.b32 	%r3669, %r3668, %r3667, 14;
	shf.r.wrap.b32 	%r3670, %r3667, %r3668, 14;
	mov.b64 	%rd3786, {%r3670, %r3669};
	shf.r.wrap.b32 	%r3671, %r3668, %r3667, 18;
	shf.r.wrap.b32 	%r3672, %r3667, %r3668, 18;
	mov.b64 	%rd3787, {%r3672, %r3671};
	xor.b64  	%rd3788, %rd3787, %rd3786;
	shf.l.wrap.b32 	%r3673, %r3667, %r3668, 23;
	shf.l.wrap.b32 	%r3674, %r3668, %r3667, 23;
	mov.b64 	%rd3789, {%r3674, %r3673};
	xor.b64  	%rd3790, %rd3788, %rd3789;
	xor.b64  	%rd3791, %rd6936, %rd6937;
	and.b64  	%rd3792, %rd3774, %rd3791;
	xor.b64  	%rd3793, %rd3792, %rd6936;
	add.s64 	%rd3794, %rd6927, %rd6935;
	add.s64 	%rd3795, %rd3794, %rd64;
	add.s64 	%rd3796, %rd3795, %rd3793;
	add.s64 	%rd3797, %rd3796, %rd3790;
	add.s64 	%rd3798, %rd3797, %rd6939;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3675,%dummy}, %rd3785;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3676}, %rd3785;
	}
	shf.r.wrap.b32 	%r3677, %r3676, %r3675, 28;
	shf.r.wrap.b32 	%r3678, %r3675, %r3676, 28;
	mov.b64 	%rd3799, {%r3678, %r3677};
	shf.l.wrap.b32 	%r3679, %r3675, %r3676, 30;
	shf.l.wrap.b32 	%r3680, %r3676, %r3675, 30;
	mov.b64 	%rd3800, {%r3680, %r3679};
	xor.b64  	%rd3801, %rd3800, %rd3799;
	shf.l.wrap.b32 	%r3681, %r3675, %r3676, 25;
	shf.l.wrap.b32 	%r3682, %r3676, %r3675, 25;
	mov.b64 	%rd3802, {%r3682, %r3681};
	xor.b64  	%rd3803, %rd3801, %rd3802;
	xor.b64  	%rd3804, %rd3785, %rd6940;
	xor.b64  	%rd3805, %rd3785, %rd6941;
	and.b64  	%rd3806, %rd3805, %rd3804;
	xor.b64  	%rd3807, %rd3806, %rd3785;
	add.s64 	%rd3808, %rd3797, %rd3807;
	add.s64 	%rd3809, %rd3808, %rd3803;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3683,%dummy}, %rd3798;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3684}, %rd3798;
	}
	shf.r.wrap.b32 	%r3685, %r3684, %r3683, 14;
	shf.r.wrap.b32 	%r3686, %r3683, %r3684, 14;
	mov.b64 	%rd3810, {%r3686, %r3685};
	shf.r.wrap.b32 	%r3687, %r3684, %r3683, 18;
	shf.r.wrap.b32 	%r3688, %r3683, %r3684, 18;
	mov.b64 	%rd3811, {%r3688, %r3687};
	xor.b64  	%rd3812, %rd3811, %rd3810;
	shf.l.wrap.b32 	%r3689, %r3683, %r3684, 23;
	shf.l.wrap.b32 	%r3690, %r3684, %r3683, 23;
	mov.b64 	%rd3813, {%r3690, %r3689};
	xor.b64  	%rd3814, %rd3812, %rd3813;
	xor.b64  	%rd3815, %rd3774, %rd6937;
	and.b64  	%rd3816, %rd3798, %rd3815;
	xor.b64  	%rd3817, %rd3816, %rd6937;
	add.s64 	%rd3818, %rd6928, %rd6936;
	add.s64 	%rd3819, %rd3818, %rd65;
	add.s64 	%rd3820, %rd3819, %rd3817;
	add.s64 	%rd3821, %rd3820, %rd3814;
	add.s64 	%rd3822, %rd3821, %rd6940;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3691,%dummy}, %rd3809;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3692}, %rd3809;
	}
	shf.r.wrap.b32 	%r3693, %r3692, %r3691, 28;
	shf.r.wrap.b32 	%r3694, %r3691, %r3692, 28;
	mov.b64 	%rd3823, {%r3694, %r3693};
	shf.l.wrap.b32 	%r3695, %r3691, %r3692, 30;
	shf.l.wrap.b32 	%r3696, %r3692, %r3691, 30;
	mov.b64 	%rd3824, {%r3696, %r3695};
	xor.b64  	%rd3825, %rd3824, %rd3823;
	shf.l.wrap.b32 	%r3697, %r3691, %r3692, 25;
	shf.l.wrap.b32 	%r3698, %r3692, %r3691, 25;
	mov.b64 	%rd3826, {%r3698, %r3697};
	xor.b64  	%rd3827, %rd3825, %rd3826;
	xor.b64  	%rd3828, %rd3809, %rd6941;
	xor.b64  	%rd3829, %rd3809, %rd3785;
	and.b64  	%rd3830, %rd3829, %rd3828;
	xor.b64  	%rd3831, %rd3830, %rd3809;
	add.s64 	%rd3832, %rd3821, %rd3831;
	add.s64 	%rd3833, %rd3832, %rd3827;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3699,%dummy}, %rd3822;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3700}, %rd3822;
	}
	shf.r.wrap.b32 	%r3701, %r3700, %r3699, 14;
	shf.r.wrap.b32 	%r3702, %r3699, %r3700, 14;
	mov.b64 	%rd3834, {%r3702, %r3701};
	shf.r.wrap.b32 	%r3703, %r3700, %r3699, 18;
	shf.r.wrap.b32 	%r3704, %r3699, %r3700, 18;
	mov.b64 	%rd3835, {%r3704, %r3703};
	xor.b64  	%rd3836, %rd3835, %rd3834;
	shf.l.wrap.b32 	%r3705, %r3699, %r3700, 23;
	shf.l.wrap.b32 	%r3706, %r3700, %r3699, 23;
	mov.b64 	%rd3837, {%r3706, %r3705};
	xor.b64  	%rd3838, %rd3836, %rd3837;
	xor.b64  	%rd3839, %rd3798, %rd3774;
	and.b64  	%rd3840, %rd3822, %rd3839;
	xor.b64  	%rd3841, %rd3840, %rd3774;
	add.s64 	%rd3842, %rd6929, %rd6937;
	add.s64 	%rd3843, %rd3842, %rd66;
	add.s64 	%rd3844, %rd3843, %rd3841;
	add.s64 	%rd3845, %rd3844, %rd3838;
	add.s64 	%rd3846, %rd3845, %rd6941;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3707,%dummy}, %rd3833;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3708}, %rd3833;
	}
	shf.r.wrap.b32 	%r3709, %r3708, %r3707, 28;
	shf.r.wrap.b32 	%r3710, %r3707, %r3708, 28;
	mov.b64 	%rd3847, {%r3710, %r3709};
	shf.l.wrap.b32 	%r3711, %r3707, %r3708, 30;
	shf.l.wrap.b32 	%r3712, %r3708, %r3707, 30;
	mov.b64 	%rd3848, {%r3712, %r3711};
	xor.b64  	%rd3849, %rd3848, %rd3847;
	shf.l.wrap.b32 	%r3713, %r3707, %r3708, 25;
	shf.l.wrap.b32 	%r3714, %r3708, %r3707, 25;
	mov.b64 	%rd3850, {%r3714, %r3713};
	xor.b64  	%rd3851, %rd3849, %rd3850;
	xor.b64  	%rd3852, %rd3833, %rd3785;
	xor.b64  	%rd3853, %rd3833, %rd3809;
	and.b64  	%rd3854, %rd3853, %rd3852;
	xor.b64  	%rd3855, %rd3854, %rd3833;
	add.s64 	%rd3856, %rd3845, %rd3855;
	add.s64 	%rd3857, %rd3856, %rd3851;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3715,%dummy}, %rd3846;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3716}, %rd3846;
	}
	shf.r.wrap.b32 	%r3717, %r3716, %r3715, 14;
	shf.r.wrap.b32 	%r3718, %r3715, %r3716, 14;
	mov.b64 	%rd3858, {%r3718, %r3717};
	shf.r.wrap.b32 	%r3719, %r3716, %r3715, 18;
	shf.r.wrap.b32 	%r3720, %r3715, %r3716, 18;
	mov.b64 	%rd3859, {%r3720, %r3719};
	xor.b64  	%rd3860, %rd3859, %rd3858;
	shf.l.wrap.b32 	%r3721, %r3715, %r3716, 23;
	shf.l.wrap.b32 	%r3722, %r3716, %r3715, 23;
	mov.b64 	%rd3861, {%r3722, %r3721};
	xor.b64  	%rd3862, %rd3860, %rd3861;
	xor.b64  	%rd3863, %rd3822, %rd3798;
	and.b64  	%rd3864, %rd3846, %rd3863;
	xor.b64  	%rd3865, %rd3864, %rd3798;
	add.s64 	%rd3866, %rd3774, %rd6930;
	add.s64 	%rd3867, %rd3866, %rd67;
	add.s64 	%rd3868, %rd3867, %rd3865;
	add.s64 	%rd3869, %rd3868, %rd3862;
	add.s64 	%rd3870, %rd3869, %rd3785;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3723,%dummy}, %rd3857;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3724}, %rd3857;
	}
	shf.r.wrap.b32 	%r3725, %r3724, %r3723, 28;
	shf.r.wrap.b32 	%r3726, %r3723, %r3724, 28;
	mov.b64 	%rd3871, {%r3726, %r3725};
	shf.l.wrap.b32 	%r3727, %r3723, %r3724, 30;
	shf.l.wrap.b32 	%r3728, %r3724, %r3723, 30;
	mov.b64 	%rd3872, {%r3728, %r3727};
	xor.b64  	%rd3873, %rd3872, %rd3871;
	shf.l.wrap.b32 	%r3729, %r3723, %r3724, 25;
	shf.l.wrap.b32 	%r3730, %r3724, %r3723, 25;
	mov.b64 	%rd3874, {%r3730, %r3729};
	xor.b64  	%rd3875, %rd3873, %rd3874;
	xor.b64  	%rd3876, %rd3857, %rd3809;
	xor.b64  	%rd3877, %rd3857, %rd3833;
	and.b64  	%rd3878, %rd3877, %rd3876;
	xor.b64  	%rd3879, %rd3878, %rd3857;
	add.s64 	%rd3880, %rd3869, %rd3879;
	add.s64 	%rd3881, %rd3880, %rd3875;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3731,%dummy}, %rd3870;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3732}, %rd3870;
	}
	shf.r.wrap.b32 	%r3733, %r3732, %r3731, 14;
	shf.r.wrap.b32 	%r3734, %r3731, %r3732, 14;
	mov.b64 	%rd3882, {%r3734, %r3733};
	shf.r.wrap.b32 	%r3735, %r3732, %r3731, 18;
	shf.r.wrap.b32 	%r3736, %r3731, %r3732, 18;
	mov.b64 	%rd3883, {%r3736, %r3735};
	xor.b64  	%rd3884, %rd3883, %rd3882;
	shf.l.wrap.b32 	%r3737, %r3731, %r3732, 23;
	shf.l.wrap.b32 	%r3738, %r3732, %r3731, 23;
	mov.b64 	%rd3885, {%r3738, %r3737};
	xor.b64  	%rd3886, %rd3884, %rd3885;
	xor.b64  	%rd3887, %rd3846, %rd3822;
	and.b64  	%rd3888, %rd3870, %rd3887;
	xor.b64  	%rd3889, %rd3888, %rd3822;
	add.s64 	%rd3890, %rd3798, %rd6931;
	add.s64 	%rd3891, %rd3890, %rd68;
	add.s64 	%rd3892, %rd3891, %rd3889;
	add.s64 	%rd3893, %rd3892, %rd3886;
	add.s64 	%rd3894, %rd3893, %rd3809;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3739,%dummy}, %rd3881;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3740}, %rd3881;
	}
	shf.r.wrap.b32 	%r3741, %r3740, %r3739, 28;
	shf.r.wrap.b32 	%r3742, %r3739, %r3740, 28;
	mov.b64 	%rd3895, {%r3742, %r3741};
	shf.l.wrap.b32 	%r3743, %r3739, %r3740, 30;
	shf.l.wrap.b32 	%r3744, %r3740, %r3739, 30;
	mov.b64 	%rd3896, {%r3744, %r3743};
	xor.b64  	%rd3897, %rd3896, %rd3895;
	shf.l.wrap.b32 	%r3745, %r3739, %r3740, 25;
	shf.l.wrap.b32 	%r3746, %r3740, %r3739, 25;
	mov.b64 	%rd3898, {%r3746, %r3745};
	xor.b64  	%rd3899, %rd3897, %rd3898;
	xor.b64  	%rd3900, %rd3881, %rd3833;
	xor.b64  	%rd3901, %rd3881, %rd3857;
	and.b64  	%rd3902, %rd3901, %rd3900;
	xor.b64  	%rd3903, %rd3902, %rd3881;
	add.s64 	%rd3904, %rd3893, %rd3903;
	add.s64 	%rd3905, %rd3904, %rd3899;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3747,%dummy}, %rd3894;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3748}, %rd3894;
	}
	shf.r.wrap.b32 	%r3749, %r3748, %r3747, 14;
	shf.r.wrap.b32 	%r3750, %r3747, %r3748, 14;
	mov.b64 	%rd3906, {%r3750, %r3749};
	shf.r.wrap.b32 	%r3751, %r3748, %r3747, 18;
	shf.r.wrap.b32 	%r3752, %r3747, %r3748, 18;
	mov.b64 	%rd3907, {%r3752, %r3751};
	xor.b64  	%rd3908, %rd3907, %rd3906;
	shf.l.wrap.b32 	%r3753, %r3747, %r3748, 23;
	shf.l.wrap.b32 	%r3754, %r3748, %r3747, 23;
	mov.b64 	%rd3909, {%r3754, %r3753};
	xor.b64  	%rd3910, %rd3908, %rd3909;
	xor.b64  	%rd3911, %rd3870, %rd3846;
	and.b64  	%rd3912, %rd3894, %rd3911;
	xor.b64  	%rd3913, %rd3912, %rd3846;
	add.s64 	%rd3914, %rd3822, %rd6932;
	add.s64 	%rd3915, %rd3914, %rd69;
	add.s64 	%rd3916, %rd3915, %rd3913;
	add.s64 	%rd3917, %rd3916, %rd3910;
	add.s64 	%rd3918, %rd3917, %rd3833;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3755,%dummy}, %rd3905;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3756}, %rd3905;
	}
	shf.r.wrap.b32 	%r3757, %r3756, %r3755, 28;
	shf.r.wrap.b32 	%r3758, %r3755, %r3756, 28;
	mov.b64 	%rd3919, {%r3758, %r3757};
	shf.l.wrap.b32 	%r3759, %r3755, %r3756, 30;
	shf.l.wrap.b32 	%r3760, %r3756, %r3755, 30;
	mov.b64 	%rd3920, {%r3760, %r3759};
	xor.b64  	%rd3921, %rd3920, %rd3919;
	shf.l.wrap.b32 	%r3761, %r3755, %r3756, 25;
	shf.l.wrap.b32 	%r3762, %r3756, %r3755, 25;
	mov.b64 	%rd3922, {%r3762, %r3761};
	xor.b64  	%rd3923, %rd3921, %rd3922;
	xor.b64  	%rd3924, %rd3905, %rd3857;
	xor.b64  	%rd3925, %rd3905, %rd3881;
	and.b64  	%rd3926, %rd3925, %rd3924;
	xor.b64  	%rd3927, %rd3926, %rd3905;
	add.s64 	%rd3928, %rd3917, %rd3927;
	add.s64 	%rd3929, %rd3928, %rd3923;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3763,%dummy}, %rd3918;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3764}, %rd3918;
	}
	shf.r.wrap.b32 	%r3765, %r3764, %r3763, 14;
	shf.r.wrap.b32 	%r3766, %r3763, %r3764, 14;
	mov.b64 	%rd3930, {%r3766, %r3765};
	shf.r.wrap.b32 	%r3767, %r3764, %r3763, 18;
	shf.r.wrap.b32 	%r3768, %r3763, %r3764, 18;
	mov.b64 	%rd3931, {%r3768, %r3767};
	xor.b64  	%rd3932, %rd3931, %rd3930;
	shf.l.wrap.b32 	%r3769, %r3763, %r3764, 23;
	shf.l.wrap.b32 	%r3770, %r3764, %r3763, 23;
	mov.b64 	%rd3933, {%r3770, %r3769};
	xor.b64  	%rd3934, %rd3932, %rd3933;
	xor.b64  	%rd3935, %rd3894, %rd3870;
	and.b64  	%rd3936, %rd3918, %rd3935;
	xor.b64  	%rd3937, %rd3936, %rd3870;
	add.s64 	%rd3938, %rd3846, %rd6933;
	add.s64 	%rd3939, %rd3938, %rd70;
	add.s64 	%rd3940, %rd3939, %rd3937;
	add.s64 	%rd3941, %rd3940, %rd3934;
	add.s64 	%rd3942, %rd3941, %rd3857;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3771,%dummy}, %rd3929;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3772}, %rd3929;
	}
	shf.r.wrap.b32 	%r3773, %r3772, %r3771, 28;
	shf.r.wrap.b32 	%r3774, %r3771, %r3772, 28;
	mov.b64 	%rd3943, {%r3774, %r3773};
	shf.l.wrap.b32 	%r3775, %r3771, %r3772, 30;
	shf.l.wrap.b32 	%r3776, %r3772, %r3771, 30;
	mov.b64 	%rd3944, {%r3776, %r3775};
	xor.b64  	%rd3945, %rd3944, %rd3943;
	shf.l.wrap.b32 	%r3777, %r3771, %r3772, 25;
	shf.l.wrap.b32 	%r3778, %r3772, %r3771, 25;
	mov.b64 	%rd3946, {%r3778, %r3777};
	xor.b64  	%rd3947, %rd3945, %rd3946;
	xor.b64  	%rd3948, %rd3929, %rd3881;
	xor.b64  	%rd3949, %rd3929, %rd3905;
	and.b64  	%rd3950, %rd3949, %rd3948;
	xor.b64  	%rd3951, %rd3950, %rd3929;
	add.s64 	%rd3952, %rd3941, %rd3951;
	add.s64 	%rd3953, %rd3952, %rd3947;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3779,%dummy}, %rd3942;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3780}, %rd3942;
	}
	shf.r.wrap.b32 	%r3781, %r3780, %r3779, 14;
	shf.r.wrap.b32 	%r3782, %r3779, %r3780, 14;
	mov.b64 	%rd3954, {%r3782, %r3781};
	shf.r.wrap.b32 	%r3783, %r3780, %r3779, 18;
	shf.r.wrap.b32 	%r3784, %r3779, %r3780, 18;
	mov.b64 	%rd3955, {%r3784, %r3783};
	xor.b64  	%rd3956, %rd3955, %rd3954;
	shf.l.wrap.b32 	%r3785, %r3779, %r3780, 23;
	shf.l.wrap.b32 	%r3786, %r3780, %r3779, 23;
	mov.b64 	%rd3957, {%r3786, %r3785};
	xor.b64  	%rd3958, %rd3956, %rd3957;
	xor.b64  	%rd3959, %rd3918, %rd3894;
	and.b64  	%rd3960, %rd3942, %rd3959;
	xor.b64  	%rd3961, %rd3960, %rd3894;
	add.s64 	%rd3962, %rd3870, %rd6917;
	add.s64 	%rd3963, %rd3962, %rd71;
	add.s64 	%rd3964, %rd3963, %rd3961;
	add.s64 	%rd3965, %rd3964, %rd3958;
	add.s64 	%rd3966, %rd3965, %rd3881;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3787,%dummy}, %rd3953;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3788}, %rd3953;
	}
	shf.r.wrap.b32 	%r3789, %r3788, %r3787, 28;
	shf.r.wrap.b32 	%r3790, %r3787, %r3788, 28;
	mov.b64 	%rd3967, {%r3790, %r3789};
	shf.l.wrap.b32 	%r3791, %r3787, %r3788, 30;
	shf.l.wrap.b32 	%r3792, %r3788, %r3787, 30;
	mov.b64 	%rd3968, {%r3792, %r3791};
	xor.b64  	%rd3969, %rd3968, %rd3967;
	shf.l.wrap.b32 	%r3793, %r3787, %r3788, 25;
	shf.l.wrap.b32 	%r3794, %r3788, %r3787, 25;
	mov.b64 	%rd3970, {%r3794, %r3793};
	xor.b64  	%rd3971, %rd3969, %rd3970;
	xor.b64  	%rd3972, %rd3953, %rd3905;
	xor.b64  	%rd3973, %rd3953, %rd3929;
	and.b64  	%rd3974, %rd3973, %rd3972;
	xor.b64  	%rd3975, %rd3974, %rd3953;
	add.s64 	%rd3976, %rd3965, %rd3975;
	add.s64 	%rd3977, %rd3976, %rd3971;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3795,%dummy}, %rd3966;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3796}, %rd3966;
	}
	shf.r.wrap.b32 	%r3797, %r3796, %r3795, 14;
	shf.r.wrap.b32 	%r3798, %r3795, %r3796, 14;
	mov.b64 	%rd3978, {%r3798, %r3797};
	shf.r.wrap.b32 	%r3799, %r3796, %r3795, 18;
	shf.r.wrap.b32 	%r3800, %r3795, %r3796, 18;
	mov.b64 	%rd3979, {%r3800, %r3799};
	xor.b64  	%rd3980, %rd3979, %rd3978;
	shf.l.wrap.b32 	%r3801, %r3795, %r3796, 23;
	shf.l.wrap.b32 	%r3802, %r3796, %r3795, 23;
	mov.b64 	%rd3981, {%r3802, %r3801};
	xor.b64  	%rd3982, %rd3980, %rd3981;
	xor.b64  	%rd3983, %rd3942, %rd3918;
	and.b64  	%rd3984, %rd3966, %rd3983;
	xor.b64  	%rd3985, %rd3984, %rd3918;
	add.s64 	%rd3986, %rd3894, %rd6916;
	add.s64 	%rd3987, %rd3986, %rd72;
	add.s64 	%rd3988, %rd3987, %rd3985;
	add.s64 	%rd3989, %rd3988, %rd3982;
	add.s64 	%rd3990, %rd3989, %rd3905;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3803,%dummy}, %rd3977;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3804}, %rd3977;
	}
	shf.r.wrap.b32 	%r3805, %r3804, %r3803, 28;
	shf.r.wrap.b32 	%r3806, %r3803, %r3804, 28;
	mov.b64 	%rd3991, {%r3806, %r3805};
	shf.l.wrap.b32 	%r3807, %r3803, %r3804, 30;
	shf.l.wrap.b32 	%r3808, %r3804, %r3803, 30;
	mov.b64 	%rd3992, {%r3808, %r3807};
	xor.b64  	%rd3993, %rd3992, %rd3991;
	shf.l.wrap.b32 	%r3809, %r3803, %r3804, 25;
	shf.l.wrap.b32 	%r3810, %r3804, %r3803, 25;
	mov.b64 	%rd3994, {%r3810, %r3809};
	xor.b64  	%rd3995, %rd3993, %rd3994;
	xor.b64  	%rd3996, %rd3977, %rd3929;
	xor.b64  	%rd3997, %rd3977, %rd3953;
	and.b64  	%rd3998, %rd3997, %rd3996;
	xor.b64  	%rd3999, %rd3998, %rd3977;
	add.s64 	%rd4000, %rd3989, %rd3999;
	add.s64 	%rd4001, %rd4000, %rd3995;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3811,%dummy}, %rd3990;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3812}, %rd3990;
	}
	shf.r.wrap.b32 	%r3813, %r3812, %r3811, 14;
	shf.r.wrap.b32 	%r3814, %r3811, %r3812, 14;
	mov.b64 	%rd4002, {%r3814, %r3813};
	shf.r.wrap.b32 	%r3815, %r3812, %r3811, 18;
	shf.r.wrap.b32 	%r3816, %r3811, %r3812, 18;
	mov.b64 	%rd4003, {%r3816, %r3815};
	xor.b64  	%rd4004, %rd4003, %rd4002;
	shf.l.wrap.b32 	%r3817, %r3811, %r3812, 23;
	shf.l.wrap.b32 	%r3818, %r3812, %r3811, 23;
	mov.b64 	%rd4005, {%r3818, %r3817};
	xor.b64  	%rd4006, %rd4004, %rd4005;
	xor.b64  	%rd4007, %rd3966, %rd3942;
	and.b64  	%rd4008, %rd3990, %rd4007;
	xor.b64  	%rd4009, %rd4008, %rd3942;
	add.s64 	%rd4010, %rd3918, %rd6915;
	add.s64 	%rd4011, %rd4010, %rd73;
	add.s64 	%rd4012, %rd4011, %rd4009;
	add.s64 	%rd4013, %rd4012, %rd4006;
	add.s64 	%rd4014, %rd4013, %rd3929;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3819,%dummy}, %rd4001;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3820}, %rd4001;
	}
	shf.r.wrap.b32 	%r3821, %r3820, %r3819, 28;
	shf.r.wrap.b32 	%r3822, %r3819, %r3820, 28;
	mov.b64 	%rd4015, {%r3822, %r3821};
	shf.l.wrap.b32 	%r3823, %r3819, %r3820, 30;
	shf.l.wrap.b32 	%r3824, %r3820, %r3819, 30;
	mov.b64 	%rd4016, {%r3824, %r3823};
	xor.b64  	%rd4017, %rd4016, %rd4015;
	shf.l.wrap.b32 	%r3825, %r3819, %r3820, 25;
	shf.l.wrap.b32 	%r3826, %r3820, %r3819, 25;
	mov.b64 	%rd4018, {%r3826, %r3825};
	xor.b64  	%rd4019, %rd4017, %rd4018;
	xor.b64  	%rd4020, %rd4001, %rd3953;
	xor.b64  	%rd4021, %rd4001, %rd3977;
	and.b64  	%rd4022, %rd4021, %rd4020;
	xor.b64  	%rd4023, %rd4022, %rd4001;
	add.s64 	%rd4024, %rd4013, %rd4023;
	add.s64 	%rd4025, %rd4024, %rd4019;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3827,%dummy}, %rd4014;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3828}, %rd4014;
	}
	shf.r.wrap.b32 	%r3829, %r3828, %r3827, 14;
	shf.r.wrap.b32 	%r3830, %r3827, %r3828, 14;
	mov.b64 	%rd4026, {%r3830, %r3829};
	shf.r.wrap.b32 	%r3831, %r3828, %r3827, 18;
	shf.r.wrap.b32 	%r3832, %r3827, %r3828, 18;
	mov.b64 	%rd4027, {%r3832, %r3831};
	xor.b64  	%rd4028, %rd4027, %rd4026;
	shf.l.wrap.b32 	%r3833, %r3827, %r3828, 23;
	shf.l.wrap.b32 	%r3834, %r3828, %r3827, 23;
	mov.b64 	%rd4029, {%r3834, %r3833};
	xor.b64  	%rd4030, %rd4028, %rd4029;
	xor.b64  	%rd4031, %rd3990, %rd3966;
	and.b64  	%rd4032, %rd4014, %rd4031;
	xor.b64  	%rd4033, %rd4032, %rd3966;
	add.s64 	%rd4034, %rd3942, %rd6914;
	add.s64 	%rd4035, %rd4034, %rd74;
	add.s64 	%rd4036, %rd4035, %rd4033;
	add.s64 	%rd4037, %rd4036, %rd4030;
	add.s64 	%rd4038, %rd4037, %rd3953;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3835,%dummy}, %rd4025;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3836}, %rd4025;
	}
	shf.r.wrap.b32 	%r3837, %r3836, %r3835, 28;
	shf.r.wrap.b32 	%r3838, %r3835, %r3836, 28;
	mov.b64 	%rd4039, {%r3838, %r3837};
	shf.l.wrap.b32 	%r3839, %r3835, %r3836, 30;
	shf.l.wrap.b32 	%r3840, %r3836, %r3835, 30;
	mov.b64 	%rd4040, {%r3840, %r3839};
	xor.b64  	%rd4041, %rd4040, %rd4039;
	shf.l.wrap.b32 	%r3841, %r3835, %r3836, 25;
	shf.l.wrap.b32 	%r3842, %r3836, %r3835, 25;
	mov.b64 	%rd4042, {%r3842, %r3841};
	xor.b64  	%rd4043, %rd4041, %rd4042;
	xor.b64  	%rd4044, %rd4025, %rd3977;
	xor.b64  	%rd4045, %rd4025, %rd4001;
	and.b64  	%rd4046, %rd4045, %rd4044;
	xor.b64  	%rd4047, %rd4046, %rd4025;
	add.s64 	%rd4048, %rd4037, %rd4047;
	add.s64 	%rd4049, %rd4048, %rd4043;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3843,%dummy}, %rd4038;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3844}, %rd4038;
	}
	shf.r.wrap.b32 	%r3845, %r3844, %r3843, 14;
	shf.r.wrap.b32 	%r3846, %r3843, %r3844, 14;
	mov.b64 	%rd4050, {%r3846, %r3845};
	shf.r.wrap.b32 	%r3847, %r3844, %r3843, 18;
	shf.r.wrap.b32 	%r3848, %r3843, %r3844, 18;
	mov.b64 	%rd4051, {%r3848, %r3847};
	xor.b64  	%rd4052, %rd4051, %rd4050;
	shf.l.wrap.b32 	%r3849, %r3843, %r3844, 23;
	shf.l.wrap.b32 	%r3850, %r3844, %r3843, 23;
	mov.b64 	%rd4053, {%r3850, %r3849};
	xor.b64  	%rd4054, %rd4052, %rd4053;
	xor.b64  	%rd4055, %rd4014, %rd3990;
	and.b64  	%rd4056, %rd4038, %rd4055;
	xor.b64  	%rd4057, %rd4056, %rd3990;
	add.s64 	%rd4058, %rd3966, %rd6913;
	add.s64 	%rd4059, %rd4058, %rd75;
	add.s64 	%rd4060, %rd4059, %rd4057;
	add.s64 	%rd4061, %rd4060, %rd4054;
	add.s64 	%rd6925, %rd4061, %rd3977;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3851,%dummy}, %rd4049;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3852}, %rd4049;
	}
	shf.r.wrap.b32 	%r3853, %r3852, %r3851, 28;
	shf.r.wrap.b32 	%r3854, %r3851, %r3852, 28;
	mov.b64 	%rd4062, {%r3854, %r3853};
	shf.l.wrap.b32 	%r3855, %r3851, %r3852, 30;
	shf.l.wrap.b32 	%r3856, %r3852, %r3851, 30;
	mov.b64 	%rd4063, {%r3856, %r3855};
	xor.b64  	%rd4064, %rd4063, %rd4062;
	shf.l.wrap.b32 	%r3857, %r3851, %r3852, 25;
	shf.l.wrap.b32 	%r3858, %r3852, %r3851, 25;
	mov.b64 	%rd4065, {%r3858, %r3857};
	xor.b64  	%rd4066, %rd4064, %rd4065;
	xor.b64  	%rd4067, %rd4049, %rd4001;
	xor.b64  	%rd4068, %rd4049, %rd4025;
	and.b64  	%rd4069, %rd4068, %rd4067;
	xor.b64  	%rd4070, %rd4069, %rd4049;
	add.s64 	%rd4071, %rd4061, %rd4070;
	add.s64 	%rd6921, %rd4071, %rd4066;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3859,%dummy}, %rd6925;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3860}, %rd6925;
	}
	shf.r.wrap.b32 	%r3861, %r3860, %r3859, 14;
	shf.r.wrap.b32 	%r3862, %r3859, %r3860, 14;
	mov.b64 	%rd4072, {%r3862, %r3861};
	shf.r.wrap.b32 	%r3863, %r3860, %r3859, 18;
	shf.r.wrap.b32 	%r3864, %r3859, %r3860, 18;
	mov.b64 	%rd4073, {%r3864, %r3863};
	xor.b64  	%rd4074, %rd4073, %rd4072;
	shf.l.wrap.b32 	%r3865, %r3859, %r3860, 23;
	shf.l.wrap.b32 	%r3866, %r3860, %r3859, 23;
	mov.b64 	%rd4075, {%r3866, %r3865};
	xor.b64  	%rd4076, %rd4074, %rd4075;
	xor.b64  	%rd4077, %rd4038, %rd4014;
	and.b64  	%rd4078, %rd6925, %rd4077;
	xor.b64  	%rd4079, %rd4078, %rd4014;
	add.s64 	%rd4080, %rd3990, %rd6912;
	add.s64 	%rd4081, %rd4080, %rd76;
	add.s64 	%rd4082, %rd4081, %rd4079;
	add.s64 	%rd4083, %rd4082, %rd4076;
	add.s64 	%rd6924, %rd4083, %rd4001;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3867,%dummy}, %rd6921;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3868}, %rd6921;
	}
	shf.r.wrap.b32 	%r3869, %r3868, %r3867, 28;
	shf.r.wrap.b32 	%r3870, %r3867, %r3868, 28;
	mov.b64 	%rd4084, {%r3870, %r3869};
	shf.l.wrap.b32 	%r3871, %r3867, %r3868, 30;
	shf.l.wrap.b32 	%r3872, %r3868, %r3867, 30;
	mov.b64 	%rd4085, {%r3872, %r3871};
	xor.b64  	%rd4086, %rd4085, %rd4084;
	shf.l.wrap.b32 	%r3873, %r3867, %r3868, 25;
	shf.l.wrap.b32 	%r3874, %r3868, %r3867, 25;
	mov.b64 	%rd4087, {%r3874, %r3873};
	xor.b64  	%rd4088, %rd4086, %rd4087;
	xor.b64  	%rd4089, %rd6921, %rd4025;
	xor.b64  	%rd4090, %rd6921, %rd4049;
	and.b64  	%rd4091, %rd4090, %rd4089;
	xor.b64  	%rd4092, %rd4091, %rd6921;
	add.s64 	%rd4093, %rd4083, %rd4092;
	add.s64 	%rd6920, %rd4093, %rd4088;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3875,%dummy}, %rd6924;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3876}, %rd6924;
	}
	shf.r.wrap.b32 	%r3877, %r3876, %r3875, 14;
	shf.r.wrap.b32 	%r3878, %r3875, %r3876, 14;
	mov.b64 	%rd4094, {%r3878, %r3877};
	shf.r.wrap.b32 	%r3879, %r3876, %r3875, 18;
	shf.r.wrap.b32 	%r3880, %r3875, %r3876, 18;
	mov.b64 	%rd4095, {%r3880, %r3879};
	xor.b64  	%rd4096, %rd4095, %rd4094;
	shf.l.wrap.b32 	%r3881, %r3875, %r3876, 23;
	shf.l.wrap.b32 	%r3882, %r3876, %r3875, 23;
	mov.b64 	%rd4097, {%r3882, %r3881};
	xor.b64  	%rd4098, %rd4096, %rd4097;
	xor.b64  	%rd4099, %rd6925, %rd4038;
	and.b64  	%rd4100, %rd6924, %rd4099;
	xor.b64  	%rd4101, %rd4100, %rd4038;
	add.s64 	%rd4102, %rd4014, %rd6911;
	add.s64 	%rd4103, %rd4102, %rd77;
	add.s64 	%rd4104, %rd4103, %rd4101;
	add.s64 	%rd4105, %rd4104, %rd4098;
	add.s64 	%rd6923, %rd4105, %rd4025;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3883,%dummy}, %rd6920;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3884}, %rd6920;
	}
	shf.r.wrap.b32 	%r3885, %r3884, %r3883, 28;
	shf.r.wrap.b32 	%r3886, %r3883, %r3884, 28;
	mov.b64 	%rd4106, {%r3886, %r3885};
	shf.l.wrap.b32 	%r3887, %r3883, %r3884, 30;
	shf.l.wrap.b32 	%r3888, %r3884, %r3883, 30;
	mov.b64 	%rd4107, {%r3888, %r3887};
	xor.b64  	%rd4108, %rd4107, %rd4106;
	shf.l.wrap.b32 	%r3889, %r3883, %r3884, 25;
	shf.l.wrap.b32 	%r3890, %r3884, %r3883, 25;
	mov.b64 	%rd4109, {%r3890, %r3889};
	xor.b64  	%rd4110, %rd4108, %rd4109;
	xor.b64  	%rd4111, %rd6920, %rd4049;
	xor.b64  	%rd4112, %rd6920, %rd6921;
	and.b64  	%rd4113, %rd4112, %rd4111;
	xor.b64  	%rd4114, %rd4113, %rd6920;
	add.s64 	%rd4115, %rd4105, %rd4114;
	add.s64 	%rd6919, %rd4115, %rd4110;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3891,%dummy}, %rd6923;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3892}, %rd6923;
	}
	shf.r.wrap.b32 	%r3893, %r3892, %r3891, 14;
	shf.r.wrap.b32 	%r3894, %r3891, %r3892, 14;
	mov.b64 	%rd4116, {%r3894, %r3893};
	shf.r.wrap.b32 	%r3895, %r3892, %r3891, 18;
	shf.r.wrap.b32 	%r3896, %r3891, %r3892, 18;
	mov.b64 	%rd4117, {%r3896, %r3895};
	xor.b64  	%rd4118, %rd4117, %rd4116;
	shf.l.wrap.b32 	%r3897, %r3891, %r3892, 23;
	shf.l.wrap.b32 	%r3898, %r3892, %r3891, 23;
	mov.b64 	%rd4119, {%r3898, %r3897};
	xor.b64  	%rd4120, %rd4118, %rd4119;
	xor.b64  	%rd4121, %rd6924, %rd6925;
	and.b64  	%rd4122, %rd6923, %rd4121;
	xor.b64  	%rd4123, %rd4122, %rd6925;
	add.s64 	%rd4124, %rd4038, %rd6910;
	add.s64 	%rd4125, %rd4124, %rd78;
	add.s64 	%rd4126, %rd4125, %rd4123;
	add.s64 	%rd4127, %rd4126, %rd4120;
	add.s64 	%rd6922, %rd4127, %rd4049;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3899,%dummy}, %rd6919;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3900}, %rd6919;
	}
	shf.r.wrap.b32 	%r3901, %r3900, %r3899, 28;
	shf.r.wrap.b32 	%r3902, %r3899, %r3900, 28;
	mov.b64 	%rd4128, {%r3902, %r3901};
	shf.l.wrap.b32 	%r3903, %r3899, %r3900, 30;
	shf.l.wrap.b32 	%r3904, %r3900, %r3899, 30;
	mov.b64 	%rd4129, {%r3904, %r3903};
	xor.b64  	%rd4130, %rd4129, %rd4128;
	shf.l.wrap.b32 	%r3905, %r3899, %r3900, 25;
	shf.l.wrap.b32 	%r3906, %r3900, %r3899, 25;
	mov.b64 	%rd4131, {%r3906, %r3905};
	xor.b64  	%rd4132, %rd4130, %rd4131;
	xor.b64  	%rd4133, %rd6919, %rd6921;
	xor.b64  	%rd4134, %rd6919, %rd6920;
	and.b64  	%rd4135, %rd4134, %rd4133;
	xor.b64  	%rd4136, %rd4135, %rd6919;
	add.s64 	%rd4137, %rd4127, %rd4136;
	add.s64 	%rd6918, %rd4137, %rd4132;
	mov.u32 	%r11806, 16;

BB5_680:
	shr.u64 	%rd4138, %rd6911, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3907,%dummy}, %rd6911;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3908}, %rd6911;
	}
	shf.r.wrap.b32 	%r3909, %r3908, %r3907, 19;
	shf.r.wrap.b32 	%r3910, %r3907, %r3908, 19;
	mov.b64 	%rd4139, {%r3910, %r3909};
	xor.b64  	%rd4140, %rd4139, %rd4138;
	shf.l.wrap.b32 	%r3911, %r3907, %r3908, 3;
	shf.l.wrap.b32 	%r3912, %r3908, %r3907, 3;
	mov.b64 	%rd4141, {%r3912, %r3911};
	xor.b64  	%rd4142, %rd4140, %rd4141;
	shr.u64 	%rd4143, %rd6927, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3913,%dummy}, %rd6927;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3914}, %rd6927;
	}
	shf.r.wrap.b32 	%r3915, %r3914, %r3913, 1;
	shf.r.wrap.b32 	%r3916, %r3913, %r3914, 1;
	mov.b64 	%rd4144, {%r3916, %r3915};
	xor.b64  	%rd4145, %rd4144, %rd4143;
	shf.r.wrap.b32 	%r3917, %r3914, %r3913, 8;
	shf.r.wrap.b32 	%r3918, %r3913, %r3914, 8;
	mov.b64 	%rd4146, {%r3918, %r3917};
	xor.b64  	%rd4147, %rd4145, %rd4146;
	add.s64 	%rd4148, %rd6916, %rd6926;
	add.s64 	%rd4149, %rd4148, %rd4142;
	add.s64 	%rd6926, %rd4149, %rd4147;
	shr.u64 	%rd4150, %rd6910, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3919,%dummy}, %rd6910;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3920}, %rd6910;
	}
	shf.r.wrap.b32 	%r3921, %r3920, %r3919, 19;
	shf.r.wrap.b32 	%r3922, %r3919, %r3920, 19;
	mov.b64 	%rd4151, {%r3922, %r3921};
	xor.b64  	%rd4152, %rd4151, %rd4150;
	shf.l.wrap.b32 	%r3923, %r3919, %r3920, 3;
	shf.l.wrap.b32 	%r3924, %r3920, %r3919, 3;
	mov.b64 	%rd4153, {%r3924, %r3923};
	xor.b64  	%rd4154, %rd4152, %rd4153;
	shr.u64 	%rd4155, %rd6928, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3925,%dummy}, %rd6928;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3926}, %rd6928;
	}
	shf.r.wrap.b32 	%r3927, %r3926, %r3925, 1;
	shf.r.wrap.b32 	%r3928, %r3925, %r3926, 1;
	mov.b64 	%rd4156, {%r3928, %r3927};
	xor.b64  	%rd4157, %rd4156, %rd4155;
	shf.r.wrap.b32 	%r3929, %r3926, %r3925, 8;
	shf.r.wrap.b32 	%r3930, %r3925, %r3926, 8;
	mov.b64 	%rd4158, {%r3930, %r3929};
	xor.b64  	%rd4159, %rd4157, %rd4158;
	add.s64 	%rd4160, %rd6915, %rd6927;
	add.s64 	%rd4161, %rd4160, %rd4154;
	add.s64 	%rd6927, %rd4161, %rd4159;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3931,%dummy}, %rd6926;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3932}, %rd6926;
	}
	shf.r.wrap.b32 	%r3933, %r3932, %r3931, 19;
	shf.r.wrap.b32 	%r3934, %r3931, %r3932, 19;
	mov.b64 	%rd4162, {%r3934, %r3933};
	shf.l.wrap.b32 	%r3935, %r3931, %r3932, 3;
	shf.l.wrap.b32 	%r3936, %r3932, %r3931, 3;
	mov.b64 	%rd4163, {%r3936, %r3935};
	shr.u64 	%rd4164, %rd6926, 6;
	xor.b64  	%rd4165, %rd4162, %rd4164;
	xor.b64  	%rd4166, %rd4165, %rd4163;
	shr.u64 	%rd4167, %rd6929, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3937,%dummy}, %rd6929;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3938}, %rd6929;
	}
	shf.r.wrap.b32 	%r3939, %r3938, %r3937, 1;
	shf.r.wrap.b32 	%r3940, %r3937, %r3938, 1;
	mov.b64 	%rd4168, {%r3940, %r3939};
	xor.b64  	%rd4169, %rd4168, %rd4167;
	shf.r.wrap.b32 	%r3941, %r3938, %r3937, 8;
	shf.r.wrap.b32 	%r3942, %r3937, %r3938, 8;
	mov.b64 	%rd4170, {%r3942, %r3941};
	xor.b64  	%rd4171, %rd4169, %rd4170;
	add.s64 	%rd4172, %rd6914, %rd6928;
	add.s64 	%rd4173, %rd4172, %rd4166;
	add.s64 	%rd6928, %rd4173, %rd4171;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3943,%dummy}, %rd6927;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3944}, %rd6927;
	}
	shf.r.wrap.b32 	%r3945, %r3944, %r3943, 19;
	shf.r.wrap.b32 	%r3946, %r3943, %r3944, 19;
	mov.b64 	%rd4174, {%r3946, %r3945};
	shf.l.wrap.b32 	%r3947, %r3943, %r3944, 3;
	shf.l.wrap.b32 	%r3948, %r3944, %r3943, 3;
	mov.b64 	%rd4175, {%r3948, %r3947};
	shr.u64 	%rd4176, %rd6927, 6;
	xor.b64  	%rd4177, %rd4174, %rd4176;
	xor.b64  	%rd4178, %rd4177, %rd4175;
	shr.u64 	%rd4179, %rd6930, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3949,%dummy}, %rd6930;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3950}, %rd6930;
	}
	shf.r.wrap.b32 	%r3951, %r3950, %r3949, 1;
	shf.r.wrap.b32 	%r3952, %r3949, %r3950, 1;
	mov.b64 	%rd4180, {%r3952, %r3951};
	xor.b64  	%rd4181, %rd4180, %rd4179;
	shf.r.wrap.b32 	%r3953, %r3950, %r3949, 8;
	shf.r.wrap.b32 	%r3954, %r3949, %r3950, 8;
	mov.b64 	%rd4182, {%r3954, %r3953};
	xor.b64  	%rd4183, %rd4181, %rd4182;
	add.s64 	%rd4184, %rd6913, %rd6929;
	add.s64 	%rd4185, %rd4184, %rd4178;
	add.s64 	%rd6929, %rd4185, %rd4183;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3955,%dummy}, %rd6928;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3956}, %rd6928;
	}
	shf.r.wrap.b32 	%r3957, %r3956, %r3955, 19;
	shf.r.wrap.b32 	%r3958, %r3955, %r3956, 19;
	mov.b64 	%rd4186, {%r3958, %r3957};
	shf.l.wrap.b32 	%r3959, %r3955, %r3956, 3;
	shf.l.wrap.b32 	%r3960, %r3956, %r3955, 3;
	mov.b64 	%rd4187, {%r3960, %r3959};
	shr.u64 	%rd4188, %rd6928, 6;
	xor.b64  	%rd4189, %rd4186, %rd4188;
	xor.b64  	%rd4190, %rd4189, %rd4187;
	shr.u64 	%rd4191, %rd6931, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3961,%dummy}, %rd6931;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3962}, %rd6931;
	}
	shf.r.wrap.b32 	%r3963, %r3962, %r3961, 1;
	shf.r.wrap.b32 	%r3964, %r3961, %r3962, 1;
	mov.b64 	%rd4192, {%r3964, %r3963};
	xor.b64  	%rd4193, %rd4192, %rd4191;
	shf.r.wrap.b32 	%r3965, %r3962, %r3961, 8;
	shf.r.wrap.b32 	%r3966, %r3961, %r3962, 8;
	mov.b64 	%rd4194, {%r3966, %r3965};
	xor.b64  	%rd4195, %rd4193, %rd4194;
	add.s64 	%rd4196, %rd6912, %rd6930;
	add.s64 	%rd4197, %rd4196, %rd4190;
	add.s64 	%rd6930, %rd4197, %rd4195;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3967,%dummy}, %rd6929;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3968}, %rd6929;
	}
	shf.r.wrap.b32 	%r3969, %r3968, %r3967, 19;
	shf.r.wrap.b32 	%r3970, %r3967, %r3968, 19;
	mov.b64 	%rd4198, {%r3970, %r3969};
	shf.l.wrap.b32 	%r3971, %r3967, %r3968, 3;
	shf.l.wrap.b32 	%r3972, %r3968, %r3967, 3;
	mov.b64 	%rd4199, {%r3972, %r3971};
	shr.u64 	%rd4200, %rd6929, 6;
	xor.b64  	%rd4201, %rd4198, %rd4200;
	xor.b64  	%rd4202, %rd4201, %rd4199;
	shr.u64 	%rd4203, %rd6932, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3973,%dummy}, %rd6932;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3974}, %rd6932;
	}
	shf.r.wrap.b32 	%r3975, %r3974, %r3973, 1;
	shf.r.wrap.b32 	%r3976, %r3973, %r3974, 1;
	mov.b64 	%rd4204, {%r3976, %r3975};
	xor.b64  	%rd4205, %rd4204, %rd4203;
	shf.r.wrap.b32 	%r3977, %r3974, %r3973, 8;
	shf.r.wrap.b32 	%r3978, %r3973, %r3974, 8;
	mov.b64 	%rd4206, {%r3978, %r3977};
	xor.b64  	%rd4207, %rd4205, %rd4206;
	add.s64 	%rd4208, %rd6911, %rd6931;
	add.s64 	%rd4209, %rd4208, %rd4202;
	add.s64 	%rd6931, %rd4209, %rd4207;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3979,%dummy}, %rd6930;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3980}, %rd6930;
	}
	shf.r.wrap.b32 	%r3981, %r3980, %r3979, 19;
	shf.r.wrap.b32 	%r3982, %r3979, %r3980, 19;
	mov.b64 	%rd4210, {%r3982, %r3981};
	shf.l.wrap.b32 	%r3983, %r3979, %r3980, 3;
	shf.l.wrap.b32 	%r3984, %r3980, %r3979, 3;
	mov.b64 	%rd4211, {%r3984, %r3983};
	shr.u64 	%rd4212, %rd6930, 6;
	xor.b64  	%rd4213, %rd4210, %rd4212;
	xor.b64  	%rd4214, %rd4213, %rd4211;
	shr.u64 	%rd4215, %rd6933, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3985,%dummy}, %rd6933;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3986}, %rd6933;
	}
	shf.r.wrap.b32 	%r3987, %r3986, %r3985, 1;
	shf.r.wrap.b32 	%r3988, %r3985, %r3986, 1;
	mov.b64 	%rd4216, {%r3988, %r3987};
	xor.b64  	%rd4217, %rd4216, %rd4215;
	shf.r.wrap.b32 	%r3989, %r3986, %r3985, 8;
	shf.r.wrap.b32 	%r3990, %r3985, %r3986, 8;
	mov.b64 	%rd4218, {%r3990, %r3989};
	xor.b64  	%rd4219, %rd4217, %rd4218;
	add.s64 	%rd4220, %rd6910, %rd6932;
	add.s64 	%rd4221, %rd4220, %rd4214;
	add.s64 	%rd6932, %rd4221, %rd4219;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3991,%dummy}, %rd6931;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3992}, %rd6931;
	}
	shf.r.wrap.b32 	%r3993, %r3992, %r3991, 19;
	shf.r.wrap.b32 	%r3994, %r3991, %r3992, 19;
	mov.b64 	%rd4222, {%r3994, %r3993};
	shf.l.wrap.b32 	%r3995, %r3991, %r3992, 3;
	shf.l.wrap.b32 	%r3996, %r3992, %r3991, 3;
	mov.b64 	%rd4223, {%r3996, %r3995};
	shr.u64 	%rd4224, %rd6931, 6;
	xor.b64  	%rd4225, %rd4222, %rd4224;
	xor.b64  	%rd4226, %rd4225, %rd4223;
	shr.u64 	%rd4227, %rd6917, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3997,%dummy}, %rd6917;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3998}, %rd6917;
	}
	shf.r.wrap.b32 	%r3999, %r3998, %r3997, 1;
	shf.r.wrap.b32 	%r4000, %r3997, %r3998, 1;
	mov.b64 	%rd4228, {%r4000, %r3999};
	xor.b64  	%rd4229, %rd4228, %rd4227;
	shf.r.wrap.b32 	%r4001, %r3998, %r3997, 8;
	shf.r.wrap.b32 	%r4002, %r3997, %r3998, 8;
	mov.b64 	%rd4230, {%r4002, %r4001};
	xor.b64  	%rd4231, %rd4229, %rd4230;
	add.s64 	%rd4232, %rd6926, %rd6933;
	add.s64 	%rd4233, %rd4232, %rd4226;
	add.s64 	%rd6933, %rd4233, %rd4231;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4003,%dummy}, %rd6932;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4004}, %rd6932;
	}
	shf.r.wrap.b32 	%r4005, %r4004, %r4003, 19;
	shf.r.wrap.b32 	%r4006, %r4003, %r4004, 19;
	mov.b64 	%rd4234, {%r4006, %r4005};
	shf.l.wrap.b32 	%r4007, %r4003, %r4004, 3;
	shf.l.wrap.b32 	%r4008, %r4004, %r4003, 3;
	mov.b64 	%rd4235, {%r4008, %r4007};
	shr.u64 	%rd4236, %rd6932, 6;
	xor.b64  	%rd4237, %rd4234, %rd4236;
	xor.b64  	%rd4238, %rd4237, %rd4235;
	shr.u64 	%rd4239, %rd6916, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4009,%dummy}, %rd6916;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4010}, %rd6916;
	}
	shf.r.wrap.b32 	%r4011, %r4010, %r4009, 1;
	shf.r.wrap.b32 	%r4012, %r4009, %r4010, 1;
	mov.b64 	%rd4240, {%r4012, %r4011};
	xor.b64  	%rd4241, %rd4240, %rd4239;
	shf.r.wrap.b32 	%r4013, %r4010, %r4009, 8;
	shf.r.wrap.b32 	%r4014, %r4009, %r4010, 8;
	mov.b64 	%rd4242, {%r4014, %r4013};
	xor.b64  	%rd4243, %rd4241, %rd4242;
	add.s64 	%rd4244, %rd6927, %rd6917;
	add.s64 	%rd4245, %rd4244, %rd4238;
	add.s64 	%rd6917, %rd4245, %rd4243;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4015,%dummy}, %rd6933;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4016}, %rd6933;
	}
	shf.r.wrap.b32 	%r4017, %r4016, %r4015, 19;
	shf.r.wrap.b32 	%r4018, %r4015, %r4016, 19;
	mov.b64 	%rd4246, {%r4018, %r4017};
	shf.l.wrap.b32 	%r4019, %r4015, %r4016, 3;
	shf.l.wrap.b32 	%r4020, %r4016, %r4015, 3;
	mov.b64 	%rd4247, {%r4020, %r4019};
	shr.u64 	%rd4248, %rd6933, 6;
	xor.b64  	%rd4249, %rd4246, %rd4248;
	xor.b64  	%rd4250, %rd4249, %rd4247;
	shr.u64 	%rd4251, %rd6915, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4021,%dummy}, %rd6915;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4022}, %rd6915;
	}
	shf.r.wrap.b32 	%r4023, %r4022, %r4021, 1;
	shf.r.wrap.b32 	%r4024, %r4021, %r4022, 1;
	mov.b64 	%rd4252, {%r4024, %r4023};
	xor.b64  	%rd4253, %rd4252, %rd4251;
	shf.r.wrap.b32 	%r4025, %r4022, %r4021, 8;
	shf.r.wrap.b32 	%r4026, %r4021, %r4022, 8;
	mov.b64 	%rd4254, {%r4026, %r4025};
	xor.b64  	%rd4255, %rd4253, %rd4254;
	add.s64 	%rd4256, %rd6928, %rd6916;
	add.s64 	%rd4257, %rd4256, %rd4250;
	add.s64 	%rd6916, %rd4257, %rd4255;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4027,%dummy}, %rd6917;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4028}, %rd6917;
	}
	shf.r.wrap.b32 	%r4029, %r4028, %r4027, 19;
	shf.r.wrap.b32 	%r4030, %r4027, %r4028, 19;
	mov.b64 	%rd4258, {%r4030, %r4029};
	shf.l.wrap.b32 	%r4031, %r4027, %r4028, 3;
	shf.l.wrap.b32 	%r4032, %r4028, %r4027, 3;
	mov.b64 	%rd4259, {%r4032, %r4031};
	shr.u64 	%rd4260, %rd6917, 6;
	xor.b64  	%rd4261, %rd4258, %rd4260;
	xor.b64  	%rd4262, %rd4261, %rd4259;
	shr.u64 	%rd4263, %rd6914, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4033,%dummy}, %rd6914;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4034}, %rd6914;
	}
	shf.r.wrap.b32 	%r4035, %r4034, %r4033, 1;
	shf.r.wrap.b32 	%r4036, %r4033, %r4034, 1;
	mov.b64 	%rd4264, {%r4036, %r4035};
	xor.b64  	%rd4265, %rd4264, %rd4263;
	shf.r.wrap.b32 	%r4037, %r4034, %r4033, 8;
	shf.r.wrap.b32 	%r4038, %r4033, %r4034, 8;
	mov.b64 	%rd4266, {%r4038, %r4037};
	xor.b64  	%rd4267, %rd4265, %rd4266;
	add.s64 	%rd4268, %rd6929, %rd6915;
	add.s64 	%rd4269, %rd4268, %rd4262;
	add.s64 	%rd6915, %rd4269, %rd4267;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4039,%dummy}, %rd6916;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4040}, %rd6916;
	}
	shf.r.wrap.b32 	%r4041, %r4040, %r4039, 19;
	shf.r.wrap.b32 	%r4042, %r4039, %r4040, 19;
	mov.b64 	%rd4270, {%r4042, %r4041};
	shf.l.wrap.b32 	%r4043, %r4039, %r4040, 3;
	shf.l.wrap.b32 	%r4044, %r4040, %r4039, 3;
	mov.b64 	%rd4271, {%r4044, %r4043};
	shr.u64 	%rd4272, %rd6916, 6;
	xor.b64  	%rd4273, %rd4270, %rd4272;
	xor.b64  	%rd4274, %rd4273, %rd4271;
	shr.u64 	%rd4275, %rd6913, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4045,%dummy}, %rd6913;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4046}, %rd6913;
	}
	shf.r.wrap.b32 	%r4047, %r4046, %r4045, 1;
	shf.r.wrap.b32 	%r4048, %r4045, %r4046, 1;
	mov.b64 	%rd4276, {%r4048, %r4047};
	xor.b64  	%rd4277, %rd4276, %rd4275;
	shf.r.wrap.b32 	%r4049, %r4046, %r4045, 8;
	shf.r.wrap.b32 	%r4050, %r4045, %r4046, 8;
	mov.b64 	%rd4278, {%r4050, %r4049};
	xor.b64  	%rd4279, %rd4277, %rd4278;
	add.s64 	%rd4280, %rd6930, %rd6914;
	add.s64 	%rd4281, %rd4280, %rd4274;
	add.s64 	%rd6914, %rd4281, %rd4279;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4051,%dummy}, %rd6915;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4052}, %rd6915;
	}
	shf.r.wrap.b32 	%r4053, %r4052, %r4051, 19;
	shf.r.wrap.b32 	%r4054, %r4051, %r4052, 19;
	mov.b64 	%rd4282, {%r4054, %r4053};
	shf.l.wrap.b32 	%r4055, %r4051, %r4052, 3;
	shf.l.wrap.b32 	%r4056, %r4052, %r4051, 3;
	mov.b64 	%rd4283, {%r4056, %r4055};
	shr.u64 	%rd4284, %rd6915, 6;
	xor.b64  	%rd4285, %rd4282, %rd4284;
	xor.b64  	%rd4286, %rd4285, %rd4283;
	shr.u64 	%rd4287, %rd6912, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4057,%dummy}, %rd6912;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4058}, %rd6912;
	}
	shf.r.wrap.b32 	%r4059, %r4058, %r4057, 1;
	shf.r.wrap.b32 	%r4060, %r4057, %r4058, 1;
	mov.b64 	%rd4288, {%r4060, %r4059};
	xor.b64  	%rd4289, %rd4288, %rd4287;
	shf.r.wrap.b32 	%r4061, %r4058, %r4057, 8;
	shf.r.wrap.b32 	%r4062, %r4057, %r4058, 8;
	mov.b64 	%rd4290, {%r4062, %r4061};
	xor.b64  	%rd4291, %rd4289, %rd4290;
	add.s64 	%rd4292, %rd6931, %rd6913;
	add.s64 	%rd4293, %rd4292, %rd4286;
	add.s64 	%rd6913, %rd4293, %rd4291;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4063,%dummy}, %rd6914;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4064}, %rd6914;
	}
	shf.r.wrap.b32 	%r4065, %r4064, %r4063, 19;
	shf.r.wrap.b32 	%r4066, %r4063, %r4064, 19;
	mov.b64 	%rd4294, {%r4066, %r4065};
	shf.l.wrap.b32 	%r4067, %r4063, %r4064, 3;
	shf.l.wrap.b32 	%r4068, %r4064, %r4063, 3;
	mov.b64 	%rd4295, {%r4068, %r4067};
	shr.u64 	%rd4296, %rd6914, 6;
	xor.b64  	%rd4297, %rd4294, %rd4296;
	xor.b64  	%rd4298, %rd4297, %rd4295;
	shr.u64 	%rd4299, %rd6911, 7;
	shf.r.wrap.b32 	%r4069, %r3908, %r3907, 1;
	shf.r.wrap.b32 	%r4070, %r3907, %r3908, 1;
	mov.b64 	%rd4300, {%r4070, %r4069};
	xor.b64  	%rd4301, %rd4300, %rd4299;
	shf.r.wrap.b32 	%r4071, %r3908, %r3907, 8;
	shf.r.wrap.b32 	%r4072, %r3907, %r3908, 8;
	mov.b64 	%rd4302, {%r4072, %r4071};
	xor.b64  	%rd4303, %rd4301, %rd4302;
	add.s64 	%rd4304, %rd6932, %rd6912;
	add.s64 	%rd4305, %rd4304, %rd4298;
	add.s64 	%rd6912, %rd4305, %rd4303;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4073,%dummy}, %rd6913;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4074}, %rd6913;
	}
	shf.r.wrap.b32 	%r4075, %r4074, %r4073, 19;
	shf.r.wrap.b32 	%r4076, %r4073, %r4074, 19;
	mov.b64 	%rd4306, {%r4076, %r4075};
	shf.l.wrap.b32 	%r4077, %r4073, %r4074, 3;
	shf.l.wrap.b32 	%r4078, %r4074, %r4073, 3;
	mov.b64 	%rd4307, {%r4078, %r4077};
	shr.u64 	%rd4308, %rd6913, 6;
	xor.b64  	%rd4309, %rd4306, %rd4308;
	xor.b64  	%rd4310, %rd4309, %rd4307;
	shr.u64 	%rd4311, %rd6910, 7;
	shf.r.wrap.b32 	%r4079, %r3920, %r3919, 1;
	shf.r.wrap.b32 	%r4080, %r3919, %r3920, 1;
	mov.b64 	%rd4312, {%r4080, %r4079};
	xor.b64  	%rd4313, %rd4312, %rd4311;
	shf.r.wrap.b32 	%r4081, %r3920, %r3919, 8;
	shf.r.wrap.b32 	%r4082, %r3919, %r3920, 8;
	mov.b64 	%rd4314, {%r4082, %r4081};
	xor.b64  	%rd4315, %rd4313, %rd4314;
	add.s64 	%rd4316, %rd6933, %rd6911;
	add.s64 	%rd4317, %rd4316, %rd4310;
	add.s64 	%rd6911, %rd4317, %rd4315;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4083,%dummy}, %rd6912;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4084}, %rd6912;
	}
	shf.r.wrap.b32 	%r4085, %r4084, %r4083, 19;
	shf.r.wrap.b32 	%r4086, %r4083, %r4084, 19;
	mov.b64 	%rd4318, {%r4086, %r4085};
	shf.l.wrap.b32 	%r4087, %r4083, %r4084, 3;
	shf.l.wrap.b32 	%r4088, %r4084, %r4083, 3;
	mov.b64 	%rd4319, {%r4088, %r4087};
	shr.u64 	%rd4320, %rd6912, 6;
	xor.b64  	%rd4321, %rd4318, %rd4320;
	xor.b64  	%rd4322, %rd4321, %rd4319;
	shf.r.wrap.b32 	%r4089, %r3932, %r3931, 1;
	shf.r.wrap.b32 	%r4090, %r3931, %r3932, 1;
	mov.b64 	%rd4323, {%r4090, %r4089};
	shf.r.wrap.b32 	%r4091, %r3932, %r3931, 8;
	shf.r.wrap.b32 	%r4092, %r3931, %r3932, 8;
	mov.b64 	%rd4324, {%r4092, %r4091};
	shr.u64 	%rd4325, %rd6926, 7;
	xor.b64  	%rd4326, %rd4323, %rd4325;
	xor.b64  	%rd4327, %rd4326, %rd4324;
	add.s64 	%rd4328, %rd6917, %rd6910;
	add.s64 	%rd4329, %rd4328, %rd4322;
	add.s64 	%rd6910, %rd4329, %rd4327;
	mul.wide.s32 	%rd4330, %r11806, 8;
	add.s64 	%rd4332, %rd2329, %rd4330;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4093,%dummy}, %rd6922;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4094}, %rd6922;
	}
	shf.r.wrap.b32 	%r4095, %r4094, %r4093, 18;
	shf.r.wrap.b32 	%r4096, %r4093, %r4094, 18;
	mov.b64 	%rd4333, {%r4096, %r4095};
	shf.r.wrap.b32 	%r4097, %r4094, %r4093, 14;
	shf.r.wrap.b32 	%r4098, %r4093, %r4094, 14;
	mov.b64 	%rd4334, {%r4098, %r4097};
	xor.b64  	%rd4335, %rd4333, %rd4334;
	shf.l.wrap.b32 	%r4099, %r4093, %r4094, 23;
	shf.l.wrap.b32 	%r4100, %r4094, %r4093, 23;
	mov.b64 	%rd4336, {%r4100, %r4099};
	xor.b64  	%rd4337, %rd4335, %rd4336;
	xor.b64  	%rd4338, %rd6923, %rd6924;
	and.b64  	%rd4339, %rd4338, %rd6922;
	xor.b64  	%rd4340, %rd4339, %rd6924;
	add.s64 	%rd4341, %rd4340, %rd6925;
	add.s64 	%rd4342, %rd4341, %rd6926;
	ld.const.u64 	%rd4343, [%rd4332];
	add.s64 	%rd4344, %rd4342, %rd4343;
	add.s64 	%rd4345, %rd4344, %rd4337;
	add.s64 	%rd4346, %rd4345, %rd6921;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4101}, %rd6918;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4102,%dummy}, %rd6918;
	}
	shf.l.wrap.b32 	%r4103, %r4102, %r4101, 30;
	shf.l.wrap.b32 	%r4104, %r4101, %r4102, 30;
	mov.b64 	%rd4347, {%r4104, %r4103};
	shf.r.wrap.b32 	%r4105, %r4101, %r4102, 28;
	shf.r.wrap.b32 	%r4106, %r4102, %r4101, 28;
	mov.b64 	%rd4348, {%r4106, %r4105};
	xor.b64  	%rd4349, %rd4347, %rd4348;
	shf.l.wrap.b32 	%r4107, %r4102, %r4101, 25;
	shf.l.wrap.b32 	%r4108, %r4101, %r4102, 25;
	mov.b64 	%rd4350, {%r4108, %r4107};
	xor.b64  	%rd4351, %rd4349, %rd4350;
	xor.b64  	%rd4352, %rd6918, %rd6919;
	xor.b64  	%rd4353, %rd6918, %rd6920;
	and.b64  	%rd4354, %rd4352, %rd4353;
	xor.b64  	%rd4355, %rd4354, %rd6918;
	add.s64 	%rd4356, %rd4345, %rd4355;
	add.s64 	%rd4357, %rd4356, %rd4351;
	add.s32 	%r4109, %r11806, 1;
	mul.wide.s32 	%rd4358, %r4109, 8;
	add.s64 	%rd4359, %rd2329, %rd4358;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4110,%dummy}, %rd4346;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4111}, %rd4346;
	}
	shf.r.wrap.b32 	%r4112, %r4111, %r4110, 14;
	shf.r.wrap.b32 	%r4113, %r4110, %r4111, 14;
	mov.b64 	%rd4360, {%r4113, %r4112};
	shf.r.wrap.b32 	%r4114, %r4111, %r4110, 18;
	shf.r.wrap.b32 	%r4115, %r4110, %r4111, 18;
	mov.b64 	%rd4361, {%r4115, %r4114};
	xor.b64  	%rd4362, %rd4361, %rd4360;
	shf.l.wrap.b32 	%r4116, %r4110, %r4111, 23;
	shf.l.wrap.b32 	%r4117, %r4111, %r4110, 23;
	mov.b64 	%rd4363, {%r4117, %r4116};
	xor.b64  	%rd4364, %rd4362, %rd4363;
	xor.b64  	%rd4365, %rd6922, %rd6923;
	and.b64  	%rd4366, %rd4346, %rd4365;
	xor.b64  	%rd4367, %rd4366, %rd6923;
	add.s64 	%rd4368, %rd6927, %rd6924;
	ld.const.u64 	%rd4369, [%rd4359];
	add.s64 	%rd4370, %rd4368, %rd4369;
	add.s64 	%rd4371, %rd4370, %rd4367;
	add.s64 	%rd4372, %rd4371, %rd4364;
	add.s64 	%rd4373, %rd4372, %rd6920;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4118,%dummy}, %rd4357;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4119}, %rd4357;
	}
	shf.r.wrap.b32 	%r4120, %r4119, %r4118, 28;
	shf.r.wrap.b32 	%r4121, %r4118, %r4119, 28;
	mov.b64 	%rd4374, {%r4121, %r4120};
	shf.l.wrap.b32 	%r4122, %r4118, %r4119, 30;
	shf.l.wrap.b32 	%r4123, %r4119, %r4118, 30;
	mov.b64 	%rd4375, {%r4123, %r4122};
	xor.b64  	%rd4376, %rd4375, %rd4374;
	shf.l.wrap.b32 	%r4124, %r4118, %r4119, 25;
	shf.l.wrap.b32 	%r4125, %r4119, %r4118, 25;
	mov.b64 	%rd4377, {%r4125, %r4124};
	xor.b64  	%rd4378, %rd4376, %rd4377;
	xor.b64  	%rd4379, %rd4357, %rd6919;
	xor.b64  	%rd4380, %rd4357, %rd6918;
	and.b64  	%rd4381, %rd4380, %rd4379;
	xor.b64  	%rd4382, %rd4381, %rd4357;
	add.s64 	%rd4383, %rd4372, %rd4382;
	add.s64 	%rd4384, %rd4383, %rd4378;
	add.s32 	%r4126, %r11806, 2;
	mul.wide.s32 	%rd4385, %r4126, 8;
	add.s64 	%rd4386, %rd2329, %rd4385;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4127,%dummy}, %rd4373;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4128}, %rd4373;
	}
	shf.r.wrap.b32 	%r4129, %r4128, %r4127, 14;
	shf.r.wrap.b32 	%r4130, %r4127, %r4128, 14;
	mov.b64 	%rd4387, {%r4130, %r4129};
	shf.r.wrap.b32 	%r4131, %r4128, %r4127, 18;
	shf.r.wrap.b32 	%r4132, %r4127, %r4128, 18;
	mov.b64 	%rd4388, {%r4132, %r4131};
	xor.b64  	%rd4389, %rd4388, %rd4387;
	shf.l.wrap.b32 	%r4133, %r4127, %r4128, 23;
	shf.l.wrap.b32 	%r4134, %r4128, %r4127, 23;
	mov.b64 	%rd4390, {%r4134, %r4133};
	xor.b64  	%rd4391, %rd4389, %rd4390;
	xor.b64  	%rd4392, %rd4346, %rd6922;
	and.b64  	%rd4393, %rd4373, %rd4392;
	xor.b64  	%rd4394, %rd4393, %rd6922;
	add.s64 	%rd4395, %rd6928, %rd6923;
	ld.const.u64 	%rd4396, [%rd4386];
	add.s64 	%rd4397, %rd4395, %rd4396;
	add.s64 	%rd4398, %rd4397, %rd4394;
	add.s64 	%rd4399, %rd4398, %rd4391;
	add.s64 	%rd4400, %rd4399, %rd6919;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4135,%dummy}, %rd4384;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4136}, %rd4384;
	}
	shf.r.wrap.b32 	%r4137, %r4136, %r4135, 28;
	shf.r.wrap.b32 	%r4138, %r4135, %r4136, 28;
	mov.b64 	%rd4401, {%r4138, %r4137};
	shf.l.wrap.b32 	%r4139, %r4135, %r4136, 30;
	shf.l.wrap.b32 	%r4140, %r4136, %r4135, 30;
	mov.b64 	%rd4402, {%r4140, %r4139};
	xor.b64  	%rd4403, %rd4402, %rd4401;
	shf.l.wrap.b32 	%r4141, %r4135, %r4136, 25;
	shf.l.wrap.b32 	%r4142, %r4136, %r4135, 25;
	mov.b64 	%rd4404, {%r4142, %r4141};
	xor.b64  	%rd4405, %rd4403, %rd4404;
	xor.b64  	%rd4406, %rd4384, %rd6918;
	xor.b64  	%rd4407, %rd4384, %rd4357;
	and.b64  	%rd4408, %rd4407, %rd4406;
	xor.b64  	%rd4409, %rd4408, %rd4384;
	add.s64 	%rd4410, %rd4399, %rd4409;
	add.s64 	%rd4411, %rd4410, %rd4405;
	add.s32 	%r4143, %r11806, 3;
	mul.wide.s32 	%rd4412, %r4143, 8;
	add.s64 	%rd4413, %rd2329, %rd4412;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4144,%dummy}, %rd4400;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4145}, %rd4400;
	}
	shf.r.wrap.b32 	%r4146, %r4145, %r4144, 14;
	shf.r.wrap.b32 	%r4147, %r4144, %r4145, 14;
	mov.b64 	%rd4414, {%r4147, %r4146};
	shf.r.wrap.b32 	%r4148, %r4145, %r4144, 18;
	shf.r.wrap.b32 	%r4149, %r4144, %r4145, 18;
	mov.b64 	%rd4415, {%r4149, %r4148};
	xor.b64  	%rd4416, %rd4415, %rd4414;
	shf.l.wrap.b32 	%r4150, %r4144, %r4145, 23;
	shf.l.wrap.b32 	%r4151, %r4145, %r4144, 23;
	mov.b64 	%rd4417, {%r4151, %r4150};
	xor.b64  	%rd4418, %rd4416, %rd4417;
	xor.b64  	%rd4419, %rd4373, %rd4346;
	and.b64  	%rd4420, %rd4400, %rd4419;
	xor.b64  	%rd4421, %rd4420, %rd4346;
	add.s64 	%rd4422, %rd6929, %rd6922;
	ld.const.u64 	%rd4423, [%rd4413];
	add.s64 	%rd4424, %rd4422, %rd4423;
	add.s64 	%rd4425, %rd4424, %rd4421;
	add.s64 	%rd4426, %rd4425, %rd4418;
	add.s64 	%rd4427, %rd4426, %rd6918;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4152,%dummy}, %rd4411;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4153}, %rd4411;
	}
	shf.r.wrap.b32 	%r4154, %r4153, %r4152, 28;
	shf.r.wrap.b32 	%r4155, %r4152, %r4153, 28;
	mov.b64 	%rd4428, {%r4155, %r4154};
	shf.l.wrap.b32 	%r4156, %r4152, %r4153, 30;
	shf.l.wrap.b32 	%r4157, %r4153, %r4152, 30;
	mov.b64 	%rd4429, {%r4157, %r4156};
	xor.b64  	%rd4430, %rd4429, %rd4428;
	shf.l.wrap.b32 	%r4158, %r4152, %r4153, 25;
	shf.l.wrap.b32 	%r4159, %r4153, %r4152, 25;
	mov.b64 	%rd4431, {%r4159, %r4158};
	xor.b64  	%rd4432, %rd4430, %rd4431;
	xor.b64  	%rd4433, %rd4411, %rd4357;
	xor.b64  	%rd4434, %rd4411, %rd4384;
	and.b64  	%rd4435, %rd4434, %rd4433;
	xor.b64  	%rd4436, %rd4435, %rd4411;
	add.s64 	%rd4437, %rd4426, %rd4436;
	add.s64 	%rd4438, %rd4437, %rd4432;
	add.s32 	%r4160, %r11806, 4;
	mul.wide.s32 	%rd4439, %r4160, 8;
	add.s64 	%rd4440, %rd2329, %rd4439;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4161,%dummy}, %rd4427;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4162}, %rd4427;
	}
	shf.r.wrap.b32 	%r4163, %r4162, %r4161, 14;
	shf.r.wrap.b32 	%r4164, %r4161, %r4162, 14;
	mov.b64 	%rd4441, {%r4164, %r4163};
	shf.r.wrap.b32 	%r4165, %r4162, %r4161, 18;
	shf.r.wrap.b32 	%r4166, %r4161, %r4162, 18;
	mov.b64 	%rd4442, {%r4166, %r4165};
	xor.b64  	%rd4443, %rd4442, %rd4441;
	shf.l.wrap.b32 	%r4167, %r4161, %r4162, 23;
	shf.l.wrap.b32 	%r4168, %r4162, %r4161, 23;
	mov.b64 	%rd4444, {%r4168, %r4167};
	xor.b64  	%rd4445, %rd4443, %rd4444;
	xor.b64  	%rd4446, %rd4400, %rd4373;
	and.b64  	%rd4447, %rd4427, %rd4446;
	xor.b64  	%rd4448, %rd4447, %rd4373;
	add.s64 	%rd4449, %rd4346, %rd6930;
	ld.const.u64 	%rd4450, [%rd4440];
	add.s64 	%rd4451, %rd4449, %rd4450;
	add.s64 	%rd4452, %rd4451, %rd4448;
	add.s64 	%rd4453, %rd4452, %rd4445;
	add.s64 	%rd4454, %rd4453, %rd4357;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4169,%dummy}, %rd4438;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4170}, %rd4438;
	}
	shf.r.wrap.b32 	%r4171, %r4170, %r4169, 28;
	shf.r.wrap.b32 	%r4172, %r4169, %r4170, 28;
	mov.b64 	%rd4455, {%r4172, %r4171};
	shf.l.wrap.b32 	%r4173, %r4169, %r4170, 30;
	shf.l.wrap.b32 	%r4174, %r4170, %r4169, 30;
	mov.b64 	%rd4456, {%r4174, %r4173};
	xor.b64  	%rd4457, %rd4456, %rd4455;
	shf.l.wrap.b32 	%r4175, %r4169, %r4170, 25;
	shf.l.wrap.b32 	%r4176, %r4170, %r4169, 25;
	mov.b64 	%rd4458, {%r4176, %r4175};
	xor.b64  	%rd4459, %rd4457, %rd4458;
	xor.b64  	%rd4460, %rd4438, %rd4384;
	xor.b64  	%rd4461, %rd4438, %rd4411;
	and.b64  	%rd4462, %rd4461, %rd4460;
	xor.b64  	%rd4463, %rd4462, %rd4438;
	add.s64 	%rd4464, %rd4453, %rd4463;
	add.s64 	%rd4465, %rd4464, %rd4459;
	add.s32 	%r4177, %r11806, 5;
	mul.wide.s32 	%rd4466, %r4177, 8;
	add.s64 	%rd4467, %rd2329, %rd4466;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4178,%dummy}, %rd4454;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4179}, %rd4454;
	}
	shf.r.wrap.b32 	%r4180, %r4179, %r4178, 14;
	shf.r.wrap.b32 	%r4181, %r4178, %r4179, 14;
	mov.b64 	%rd4468, {%r4181, %r4180};
	shf.r.wrap.b32 	%r4182, %r4179, %r4178, 18;
	shf.r.wrap.b32 	%r4183, %r4178, %r4179, 18;
	mov.b64 	%rd4469, {%r4183, %r4182};
	xor.b64  	%rd4470, %rd4469, %rd4468;
	shf.l.wrap.b32 	%r4184, %r4178, %r4179, 23;
	shf.l.wrap.b32 	%r4185, %r4179, %r4178, 23;
	mov.b64 	%rd4471, {%r4185, %r4184};
	xor.b64  	%rd4472, %rd4470, %rd4471;
	xor.b64  	%rd4473, %rd4427, %rd4400;
	and.b64  	%rd4474, %rd4454, %rd4473;
	xor.b64  	%rd4475, %rd4474, %rd4400;
	add.s64 	%rd4476, %rd4373, %rd6931;
	ld.const.u64 	%rd4477, [%rd4467];
	add.s64 	%rd4478, %rd4476, %rd4477;
	add.s64 	%rd4479, %rd4478, %rd4475;
	add.s64 	%rd4480, %rd4479, %rd4472;
	add.s64 	%rd4481, %rd4480, %rd4384;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4186,%dummy}, %rd4465;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4187}, %rd4465;
	}
	shf.r.wrap.b32 	%r4188, %r4187, %r4186, 28;
	shf.r.wrap.b32 	%r4189, %r4186, %r4187, 28;
	mov.b64 	%rd4482, {%r4189, %r4188};
	shf.l.wrap.b32 	%r4190, %r4186, %r4187, 30;
	shf.l.wrap.b32 	%r4191, %r4187, %r4186, 30;
	mov.b64 	%rd4483, {%r4191, %r4190};
	xor.b64  	%rd4484, %rd4483, %rd4482;
	shf.l.wrap.b32 	%r4192, %r4186, %r4187, 25;
	shf.l.wrap.b32 	%r4193, %r4187, %r4186, 25;
	mov.b64 	%rd4485, {%r4193, %r4192};
	xor.b64  	%rd4486, %rd4484, %rd4485;
	xor.b64  	%rd4487, %rd4465, %rd4411;
	xor.b64  	%rd4488, %rd4465, %rd4438;
	and.b64  	%rd4489, %rd4488, %rd4487;
	xor.b64  	%rd4490, %rd4489, %rd4465;
	add.s64 	%rd4491, %rd4480, %rd4490;
	add.s64 	%rd4492, %rd4491, %rd4486;
	add.s32 	%r4194, %r11806, 6;
	mul.wide.s32 	%rd4493, %r4194, 8;
	add.s64 	%rd4494, %rd2329, %rd4493;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4195,%dummy}, %rd4481;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4196}, %rd4481;
	}
	shf.r.wrap.b32 	%r4197, %r4196, %r4195, 14;
	shf.r.wrap.b32 	%r4198, %r4195, %r4196, 14;
	mov.b64 	%rd4495, {%r4198, %r4197};
	shf.r.wrap.b32 	%r4199, %r4196, %r4195, 18;
	shf.r.wrap.b32 	%r4200, %r4195, %r4196, 18;
	mov.b64 	%rd4496, {%r4200, %r4199};
	xor.b64  	%rd4497, %rd4496, %rd4495;
	shf.l.wrap.b32 	%r4201, %r4195, %r4196, 23;
	shf.l.wrap.b32 	%r4202, %r4196, %r4195, 23;
	mov.b64 	%rd4498, {%r4202, %r4201};
	xor.b64  	%rd4499, %rd4497, %rd4498;
	xor.b64  	%rd4500, %rd4454, %rd4427;
	and.b64  	%rd4501, %rd4481, %rd4500;
	xor.b64  	%rd4502, %rd4501, %rd4427;
	add.s64 	%rd4503, %rd4400, %rd6932;
	ld.const.u64 	%rd4504, [%rd4494];
	add.s64 	%rd4505, %rd4503, %rd4504;
	add.s64 	%rd4506, %rd4505, %rd4502;
	add.s64 	%rd4507, %rd4506, %rd4499;
	add.s64 	%rd4508, %rd4507, %rd4411;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4203,%dummy}, %rd4492;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4204}, %rd4492;
	}
	shf.r.wrap.b32 	%r4205, %r4204, %r4203, 28;
	shf.r.wrap.b32 	%r4206, %r4203, %r4204, 28;
	mov.b64 	%rd4509, {%r4206, %r4205};
	shf.l.wrap.b32 	%r4207, %r4203, %r4204, 30;
	shf.l.wrap.b32 	%r4208, %r4204, %r4203, 30;
	mov.b64 	%rd4510, {%r4208, %r4207};
	xor.b64  	%rd4511, %rd4510, %rd4509;
	shf.l.wrap.b32 	%r4209, %r4203, %r4204, 25;
	shf.l.wrap.b32 	%r4210, %r4204, %r4203, 25;
	mov.b64 	%rd4512, {%r4210, %r4209};
	xor.b64  	%rd4513, %rd4511, %rd4512;
	xor.b64  	%rd4514, %rd4492, %rd4438;
	xor.b64  	%rd4515, %rd4492, %rd4465;
	and.b64  	%rd4516, %rd4515, %rd4514;
	xor.b64  	%rd4517, %rd4516, %rd4492;
	add.s64 	%rd4518, %rd4507, %rd4517;
	add.s64 	%rd4519, %rd4518, %rd4513;
	add.s32 	%r4211, %r11806, 7;
	mul.wide.s32 	%rd4520, %r4211, 8;
	add.s64 	%rd4521, %rd2329, %rd4520;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4212,%dummy}, %rd4508;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4213}, %rd4508;
	}
	shf.r.wrap.b32 	%r4214, %r4213, %r4212, 14;
	shf.r.wrap.b32 	%r4215, %r4212, %r4213, 14;
	mov.b64 	%rd4522, {%r4215, %r4214};
	shf.r.wrap.b32 	%r4216, %r4213, %r4212, 18;
	shf.r.wrap.b32 	%r4217, %r4212, %r4213, 18;
	mov.b64 	%rd4523, {%r4217, %r4216};
	xor.b64  	%rd4524, %rd4523, %rd4522;
	shf.l.wrap.b32 	%r4218, %r4212, %r4213, 23;
	shf.l.wrap.b32 	%r4219, %r4213, %r4212, 23;
	mov.b64 	%rd4525, {%r4219, %r4218};
	xor.b64  	%rd4526, %rd4524, %rd4525;
	xor.b64  	%rd4527, %rd4481, %rd4454;
	and.b64  	%rd4528, %rd4508, %rd4527;
	xor.b64  	%rd4529, %rd4528, %rd4454;
	add.s64 	%rd4530, %rd4427, %rd6933;
	ld.const.u64 	%rd4531, [%rd4521];
	add.s64 	%rd4532, %rd4530, %rd4531;
	add.s64 	%rd4533, %rd4532, %rd4529;
	add.s64 	%rd4534, %rd4533, %rd4526;
	add.s64 	%rd4535, %rd4534, %rd4438;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4220,%dummy}, %rd4519;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4221}, %rd4519;
	}
	shf.r.wrap.b32 	%r4222, %r4221, %r4220, 28;
	shf.r.wrap.b32 	%r4223, %r4220, %r4221, 28;
	mov.b64 	%rd4536, {%r4223, %r4222};
	shf.l.wrap.b32 	%r4224, %r4220, %r4221, 30;
	shf.l.wrap.b32 	%r4225, %r4221, %r4220, 30;
	mov.b64 	%rd4537, {%r4225, %r4224};
	xor.b64  	%rd4538, %rd4537, %rd4536;
	shf.l.wrap.b32 	%r4226, %r4220, %r4221, 25;
	shf.l.wrap.b32 	%r4227, %r4221, %r4220, 25;
	mov.b64 	%rd4539, {%r4227, %r4226};
	xor.b64  	%rd4540, %rd4538, %rd4539;
	xor.b64  	%rd4541, %rd4519, %rd4465;
	xor.b64  	%rd4542, %rd4519, %rd4492;
	and.b64  	%rd4543, %rd4542, %rd4541;
	xor.b64  	%rd4544, %rd4543, %rd4519;
	add.s64 	%rd4545, %rd4534, %rd4544;
	add.s64 	%rd4546, %rd4545, %rd4540;
	add.s32 	%r4228, %r11806, 8;
	mul.wide.s32 	%rd4547, %r4228, 8;
	add.s64 	%rd4548, %rd2329, %rd4547;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4229,%dummy}, %rd4535;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4230}, %rd4535;
	}
	shf.r.wrap.b32 	%r4231, %r4230, %r4229, 14;
	shf.r.wrap.b32 	%r4232, %r4229, %r4230, 14;
	mov.b64 	%rd4549, {%r4232, %r4231};
	shf.r.wrap.b32 	%r4233, %r4230, %r4229, 18;
	shf.r.wrap.b32 	%r4234, %r4229, %r4230, 18;
	mov.b64 	%rd4550, {%r4234, %r4233};
	xor.b64  	%rd4551, %rd4550, %rd4549;
	shf.l.wrap.b32 	%r4235, %r4229, %r4230, 23;
	shf.l.wrap.b32 	%r4236, %r4230, %r4229, 23;
	mov.b64 	%rd4552, {%r4236, %r4235};
	xor.b64  	%rd4553, %rd4551, %rd4552;
	xor.b64  	%rd4554, %rd4508, %rd4481;
	and.b64  	%rd4555, %rd4535, %rd4554;
	xor.b64  	%rd4556, %rd4555, %rd4481;
	add.s64 	%rd4557, %rd4454, %rd6917;
	ld.const.u64 	%rd4558, [%rd4548];
	add.s64 	%rd4559, %rd4557, %rd4558;
	add.s64 	%rd4560, %rd4559, %rd4556;
	add.s64 	%rd4561, %rd4560, %rd4553;
	add.s64 	%rd4562, %rd4561, %rd4465;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4237,%dummy}, %rd4546;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4238}, %rd4546;
	}
	shf.r.wrap.b32 	%r4239, %r4238, %r4237, 28;
	shf.r.wrap.b32 	%r4240, %r4237, %r4238, 28;
	mov.b64 	%rd4563, {%r4240, %r4239};
	shf.l.wrap.b32 	%r4241, %r4237, %r4238, 30;
	shf.l.wrap.b32 	%r4242, %r4238, %r4237, 30;
	mov.b64 	%rd4564, {%r4242, %r4241};
	xor.b64  	%rd4565, %rd4564, %rd4563;
	shf.l.wrap.b32 	%r4243, %r4237, %r4238, 25;
	shf.l.wrap.b32 	%r4244, %r4238, %r4237, 25;
	mov.b64 	%rd4566, {%r4244, %r4243};
	xor.b64  	%rd4567, %rd4565, %rd4566;
	xor.b64  	%rd4568, %rd4546, %rd4492;
	xor.b64  	%rd4569, %rd4546, %rd4519;
	and.b64  	%rd4570, %rd4569, %rd4568;
	xor.b64  	%rd4571, %rd4570, %rd4546;
	add.s64 	%rd4572, %rd4561, %rd4571;
	add.s64 	%rd4573, %rd4572, %rd4567;
	add.s32 	%r4245, %r11806, 9;
	mul.wide.s32 	%rd4574, %r4245, 8;
	add.s64 	%rd4575, %rd2329, %rd4574;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4246,%dummy}, %rd4562;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4247}, %rd4562;
	}
	shf.r.wrap.b32 	%r4248, %r4247, %r4246, 14;
	shf.r.wrap.b32 	%r4249, %r4246, %r4247, 14;
	mov.b64 	%rd4576, {%r4249, %r4248};
	shf.r.wrap.b32 	%r4250, %r4247, %r4246, 18;
	shf.r.wrap.b32 	%r4251, %r4246, %r4247, 18;
	mov.b64 	%rd4577, {%r4251, %r4250};
	xor.b64  	%rd4578, %rd4577, %rd4576;
	shf.l.wrap.b32 	%r4252, %r4246, %r4247, 23;
	shf.l.wrap.b32 	%r4253, %r4247, %r4246, 23;
	mov.b64 	%rd4579, {%r4253, %r4252};
	xor.b64  	%rd4580, %rd4578, %rd4579;
	xor.b64  	%rd4581, %rd4535, %rd4508;
	and.b64  	%rd4582, %rd4562, %rd4581;
	xor.b64  	%rd4583, %rd4582, %rd4508;
	add.s64 	%rd4584, %rd4481, %rd6916;
	ld.const.u64 	%rd4585, [%rd4575];
	add.s64 	%rd4586, %rd4584, %rd4585;
	add.s64 	%rd4587, %rd4586, %rd4583;
	add.s64 	%rd4588, %rd4587, %rd4580;
	add.s64 	%rd4589, %rd4588, %rd4492;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4254,%dummy}, %rd4573;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4255}, %rd4573;
	}
	shf.r.wrap.b32 	%r4256, %r4255, %r4254, 28;
	shf.r.wrap.b32 	%r4257, %r4254, %r4255, 28;
	mov.b64 	%rd4590, {%r4257, %r4256};
	shf.l.wrap.b32 	%r4258, %r4254, %r4255, 30;
	shf.l.wrap.b32 	%r4259, %r4255, %r4254, 30;
	mov.b64 	%rd4591, {%r4259, %r4258};
	xor.b64  	%rd4592, %rd4591, %rd4590;
	shf.l.wrap.b32 	%r4260, %r4254, %r4255, 25;
	shf.l.wrap.b32 	%r4261, %r4255, %r4254, 25;
	mov.b64 	%rd4593, {%r4261, %r4260};
	xor.b64  	%rd4594, %rd4592, %rd4593;
	xor.b64  	%rd4595, %rd4573, %rd4519;
	xor.b64  	%rd4596, %rd4573, %rd4546;
	and.b64  	%rd4597, %rd4596, %rd4595;
	xor.b64  	%rd4598, %rd4597, %rd4573;
	add.s64 	%rd4599, %rd4588, %rd4598;
	add.s64 	%rd4600, %rd4599, %rd4594;
	add.s32 	%r4262, %r11806, 10;
	mul.wide.s32 	%rd4601, %r4262, 8;
	add.s64 	%rd4602, %rd2329, %rd4601;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4263,%dummy}, %rd4589;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4264}, %rd4589;
	}
	shf.r.wrap.b32 	%r4265, %r4264, %r4263, 14;
	shf.r.wrap.b32 	%r4266, %r4263, %r4264, 14;
	mov.b64 	%rd4603, {%r4266, %r4265};
	shf.r.wrap.b32 	%r4267, %r4264, %r4263, 18;
	shf.r.wrap.b32 	%r4268, %r4263, %r4264, 18;
	mov.b64 	%rd4604, {%r4268, %r4267};
	xor.b64  	%rd4605, %rd4604, %rd4603;
	shf.l.wrap.b32 	%r4269, %r4263, %r4264, 23;
	shf.l.wrap.b32 	%r4270, %r4264, %r4263, 23;
	mov.b64 	%rd4606, {%r4270, %r4269};
	xor.b64  	%rd4607, %rd4605, %rd4606;
	xor.b64  	%rd4608, %rd4562, %rd4535;
	and.b64  	%rd4609, %rd4589, %rd4608;
	xor.b64  	%rd4610, %rd4609, %rd4535;
	add.s64 	%rd4611, %rd4508, %rd6915;
	ld.const.u64 	%rd4612, [%rd4602];
	add.s64 	%rd4613, %rd4611, %rd4612;
	add.s64 	%rd4614, %rd4613, %rd4610;
	add.s64 	%rd4615, %rd4614, %rd4607;
	add.s64 	%rd4616, %rd4615, %rd4519;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4271,%dummy}, %rd4600;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4272}, %rd4600;
	}
	shf.r.wrap.b32 	%r4273, %r4272, %r4271, 28;
	shf.r.wrap.b32 	%r4274, %r4271, %r4272, 28;
	mov.b64 	%rd4617, {%r4274, %r4273};
	shf.l.wrap.b32 	%r4275, %r4271, %r4272, 30;
	shf.l.wrap.b32 	%r4276, %r4272, %r4271, 30;
	mov.b64 	%rd4618, {%r4276, %r4275};
	xor.b64  	%rd4619, %rd4618, %rd4617;
	shf.l.wrap.b32 	%r4277, %r4271, %r4272, 25;
	shf.l.wrap.b32 	%r4278, %r4272, %r4271, 25;
	mov.b64 	%rd4620, {%r4278, %r4277};
	xor.b64  	%rd4621, %rd4619, %rd4620;
	xor.b64  	%rd4622, %rd4600, %rd4546;
	xor.b64  	%rd4623, %rd4600, %rd4573;
	and.b64  	%rd4624, %rd4623, %rd4622;
	xor.b64  	%rd4625, %rd4624, %rd4600;
	add.s64 	%rd4626, %rd4615, %rd4625;
	add.s64 	%rd4627, %rd4626, %rd4621;
	add.s32 	%r4279, %r11806, 11;
	mul.wide.s32 	%rd4628, %r4279, 8;
	add.s64 	%rd4629, %rd2329, %rd4628;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4280,%dummy}, %rd4616;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4281}, %rd4616;
	}
	shf.r.wrap.b32 	%r4282, %r4281, %r4280, 14;
	shf.r.wrap.b32 	%r4283, %r4280, %r4281, 14;
	mov.b64 	%rd4630, {%r4283, %r4282};
	shf.r.wrap.b32 	%r4284, %r4281, %r4280, 18;
	shf.r.wrap.b32 	%r4285, %r4280, %r4281, 18;
	mov.b64 	%rd4631, {%r4285, %r4284};
	xor.b64  	%rd4632, %rd4631, %rd4630;
	shf.l.wrap.b32 	%r4286, %r4280, %r4281, 23;
	shf.l.wrap.b32 	%r4287, %r4281, %r4280, 23;
	mov.b64 	%rd4633, {%r4287, %r4286};
	xor.b64  	%rd4634, %rd4632, %rd4633;
	xor.b64  	%rd4635, %rd4589, %rd4562;
	and.b64  	%rd4636, %rd4616, %rd4635;
	xor.b64  	%rd4637, %rd4636, %rd4562;
	add.s64 	%rd4638, %rd4535, %rd6914;
	ld.const.u64 	%rd4639, [%rd4629];
	add.s64 	%rd4640, %rd4638, %rd4639;
	add.s64 	%rd4641, %rd4640, %rd4637;
	add.s64 	%rd4642, %rd4641, %rd4634;
	add.s64 	%rd4643, %rd4642, %rd4546;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4288,%dummy}, %rd4627;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4289}, %rd4627;
	}
	shf.r.wrap.b32 	%r4290, %r4289, %r4288, 28;
	shf.r.wrap.b32 	%r4291, %r4288, %r4289, 28;
	mov.b64 	%rd4644, {%r4291, %r4290};
	shf.l.wrap.b32 	%r4292, %r4288, %r4289, 30;
	shf.l.wrap.b32 	%r4293, %r4289, %r4288, 30;
	mov.b64 	%rd4645, {%r4293, %r4292};
	xor.b64  	%rd4646, %rd4645, %rd4644;
	shf.l.wrap.b32 	%r4294, %r4288, %r4289, 25;
	shf.l.wrap.b32 	%r4295, %r4289, %r4288, 25;
	mov.b64 	%rd4647, {%r4295, %r4294};
	xor.b64  	%rd4648, %rd4646, %rd4647;
	xor.b64  	%rd4649, %rd4627, %rd4573;
	xor.b64  	%rd4650, %rd4627, %rd4600;
	and.b64  	%rd4651, %rd4650, %rd4649;
	xor.b64  	%rd4652, %rd4651, %rd4627;
	add.s64 	%rd4653, %rd4642, %rd4652;
	add.s64 	%rd4654, %rd4653, %rd4648;
	add.s32 	%r4296, %r11806, 12;
	mul.wide.s32 	%rd4655, %r4296, 8;
	add.s64 	%rd4656, %rd2329, %rd4655;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4297,%dummy}, %rd4643;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4298}, %rd4643;
	}
	shf.r.wrap.b32 	%r4299, %r4298, %r4297, 14;
	shf.r.wrap.b32 	%r4300, %r4297, %r4298, 14;
	mov.b64 	%rd4657, {%r4300, %r4299};
	shf.r.wrap.b32 	%r4301, %r4298, %r4297, 18;
	shf.r.wrap.b32 	%r4302, %r4297, %r4298, 18;
	mov.b64 	%rd4658, {%r4302, %r4301};
	xor.b64  	%rd4659, %rd4658, %rd4657;
	shf.l.wrap.b32 	%r4303, %r4297, %r4298, 23;
	shf.l.wrap.b32 	%r4304, %r4298, %r4297, 23;
	mov.b64 	%rd4660, {%r4304, %r4303};
	xor.b64  	%rd4661, %rd4659, %rd4660;
	xor.b64  	%rd4662, %rd4616, %rd4589;
	and.b64  	%rd4663, %rd4643, %rd4662;
	xor.b64  	%rd4664, %rd4663, %rd4589;
	add.s64 	%rd4665, %rd4562, %rd6913;
	ld.const.u64 	%rd4666, [%rd4656];
	add.s64 	%rd4667, %rd4665, %rd4666;
	add.s64 	%rd4668, %rd4667, %rd4664;
	add.s64 	%rd4669, %rd4668, %rd4661;
	add.s64 	%rd6925, %rd4669, %rd4573;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4305,%dummy}, %rd4654;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4306}, %rd4654;
	}
	shf.r.wrap.b32 	%r4307, %r4306, %r4305, 28;
	shf.r.wrap.b32 	%r4308, %r4305, %r4306, 28;
	mov.b64 	%rd4670, {%r4308, %r4307};
	shf.l.wrap.b32 	%r4309, %r4305, %r4306, 30;
	shf.l.wrap.b32 	%r4310, %r4306, %r4305, 30;
	mov.b64 	%rd4671, {%r4310, %r4309};
	xor.b64  	%rd4672, %rd4671, %rd4670;
	shf.l.wrap.b32 	%r4311, %r4305, %r4306, 25;
	shf.l.wrap.b32 	%r4312, %r4306, %r4305, 25;
	mov.b64 	%rd4673, {%r4312, %r4311};
	xor.b64  	%rd4674, %rd4672, %rd4673;
	xor.b64  	%rd4675, %rd4654, %rd4600;
	xor.b64  	%rd4676, %rd4654, %rd4627;
	and.b64  	%rd4677, %rd4676, %rd4675;
	xor.b64  	%rd4678, %rd4677, %rd4654;
	add.s64 	%rd4679, %rd4669, %rd4678;
	add.s64 	%rd6921, %rd4679, %rd4674;
	add.s32 	%r4313, %r11806, 13;
	mul.wide.s32 	%rd4680, %r4313, 8;
	add.s64 	%rd4681, %rd2329, %rd4680;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4314,%dummy}, %rd6925;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4315}, %rd6925;
	}
	shf.r.wrap.b32 	%r4316, %r4315, %r4314, 14;
	shf.r.wrap.b32 	%r4317, %r4314, %r4315, 14;
	mov.b64 	%rd4682, {%r4317, %r4316};
	shf.r.wrap.b32 	%r4318, %r4315, %r4314, 18;
	shf.r.wrap.b32 	%r4319, %r4314, %r4315, 18;
	mov.b64 	%rd4683, {%r4319, %r4318};
	xor.b64  	%rd4684, %rd4683, %rd4682;
	shf.l.wrap.b32 	%r4320, %r4314, %r4315, 23;
	shf.l.wrap.b32 	%r4321, %r4315, %r4314, 23;
	mov.b64 	%rd4685, {%r4321, %r4320};
	xor.b64  	%rd4686, %rd4684, %rd4685;
	xor.b64  	%rd4687, %rd4643, %rd4616;
	and.b64  	%rd4688, %rd6925, %rd4687;
	xor.b64  	%rd4689, %rd4688, %rd4616;
	add.s64 	%rd4690, %rd4589, %rd6912;
	ld.const.u64 	%rd4691, [%rd4681];
	add.s64 	%rd4692, %rd4690, %rd4691;
	add.s64 	%rd4693, %rd4692, %rd4689;
	add.s64 	%rd4694, %rd4693, %rd4686;
	add.s64 	%rd6924, %rd4694, %rd4600;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4322,%dummy}, %rd6921;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4323}, %rd6921;
	}
	shf.r.wrap.b32 	%r4324, %r4323, %r4322, 28;
	shf.r.wrap.b32 	%r4325, %r4322, %r4323, 28;
	mov.b64 	%rd4695, {%r4325, %r4324};
	shf.l.wrap.b32 	%r4326, %r4322, %r4323, 30;
	shf.l.wrap.b32 	%r4327, %r4323, %r4322, 30;
	mov.b64 	%rd4696, {%r4327, %r4326};
	xor.b64  	%rd4697, %rd4696, %rd4695;
	shf.l.wrap.b32 	%r4328, %r4322, %r4323, 25;
	shf.l.wrap.b32 	%r4329, %r4323, %r4322, 25;
	mov.b64 	%rd4698, {%r4329, %r4328};
	xor.b64  	%rd4699, %rd4697, %rd4698;
	xor.b64  	%rd4700, %rd6921, %rd4627;
	xor.b64  	%rd4701, %rd6921, %rd4654;
	and.b64  	%rd4702, %rd4701, %rd4700;
	xor.b64  	%rd4703, %rd4702, %rd6921;
	add.s64 	%rd4704, %rd4694, %rd4703;
	add.s64 	%rd6920, %rd4704, %rd4699;
	add.s32 	%r4330, %r11806, 14;
	mul.wide.s32 	%rd4705, %r4330, 8;
	add.s64 	%rd4706, %rd2329, %rd4705;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4331,%dummy}, %rd6924;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4332}, %rd6924;
	}
	shf.r.wrap.b32 	%r4333, %r4332, %r4331, 14;
	shf.r.wrap.b32 	%r4334, %r4331, %r4332, 14;
	mov.b64 	%rd4707, {%r4334, %r4333};
	shf.r.wrap.b32 	%r4335, %r4332, %r4331, 18;
	shf.r.wrap.b32 	%r4336, %r4331, %r4332, 18;
	mov.b64 	%rd4708, {%r4336, %r4335};
	xor.b64  	%rd4709, %rd4708, %rd4707;
	shf.l.wrap.b32 	%r4337, %r4331, %r4332, 23;
	shf.l.wrap.b32 	%r4338, %r4332, %r4331, 23;
	mov.b64 	%rd4710, {%r4338, %r4337};
	xor.b64  	%rd4711, %rd4709, %rd4710;
	xor.b64  	%rd4712, %rd6925, %rd4643;
	and.b64  	%rd4713, %rd6924, %rd4712;
	xor.b64  	%rd4714, %rd4713, %rd4643;
	add.s64 	%rd4715, %rd4616, %rd6911;
	ld.const.u64 	%rd4716, [%rd4706];
	add.s64 	%rd4717, %rd4715, %rd4716;
	add.s64 	%rd4718, %rd4717, %rd4714;
	add.s64 	%rd4719, %rd4718, %rd4711;
	add.s64 	%rd6923, %rd4719, %rd4627;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4339,%dummy}, %rd6920;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4340}, %rd6920;
	}
	shf.r.wrap.b32 	%r4341, %r4340, %r4339, 28;
	shf.r.wrap.b32 	%r4342, %r4339, %r4340, 28;
	mov.b64 	%rd4720, {%r4342, %r4341};
	shf.l.wrap.b32 	%r4343, %r4339, %r4340, 30;
	shf.l.wrap.b32 	%r4344, %r4340, %r4339, 30;
	mov.b64 	%rd4721, {%r4344, %r4343};
	xor.b64  	%rd4722, %rd4721, %rd4720;
	shf.l.wrap.b32 	%r4345, %r4339, %r4340, 25;
	shf.l.wrap.b32 	%r4346, %r4340, %r4339, 25;
	mov.b64 	%rd4723, {%r4346, %r4345};
	xor.b64  	%rd4724, %rd4722, %rd4723;
	xor.b64  	%rd4725, %rd6920, %rd4654;
	xor.b64  	%rd4726, %rd6920, %rd6921;
	and.b64  	%rd4727, %rd4726, %rd4725;
	xor.b64  	%rd4728, %rd4727, %rd6920;
	add.s64 	%rd4729, %rd4719, %rd4728;
	add.s64 	%rd6919, %rd4729, %rd4724;
	add.s32 	%r4347, %r11806, 15;
	mul.wide.s32 	%rd4730, %r4347, 8;
	add.s64 	%rd4731, %rd2329, %rd4730;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4348,%dummy}, %rd6923;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4349}, %rd6923;
	}
	shf.r.wrap.b32 	%r4350, %r4349, %r4348, 14;
	shf.r.wrap.b32 	%r4351, %r4348, %r4349, 14;
	mov.b64 	%rd4732, {%r4351, %r4350};
	shf.r.wrap.b32 	%r4352, %r4349, %r4348, 18;
	shf.r.wrap.b32 	%r4353, %r4348, %r4349, 18;
	mov.b64 	%rd4733, {%r4353, %r4352};
	xor.b64  	%rd4734, %rd4733, %rd4732;
	shf.l.wrap.b32 	%r4354, %r4348, %r4349, 23;
	shf.l.wrap.b32 	%r4355, %r4349, %r4348, 23;
	mov.b64 	%rd4735, {%r4355, %r4354};
	xor.b64  	%rd4736, %rd4734, %rd4735;
	xor.b64  	%rd4737, %rd6924, %rd6925;
	and.b64  	%rd4738, %rd6923, %rd4737;
	xor.b64  	%rd4739, %rd4738, %rd6925;
	add.s64 	%rd4740, %rd4643, %rd6910;
	ld.const.u64 	%rd4741, [%rd4731];
	add.s64 	%rd4742, %rd4740, %rd4741;
	add.s64 	%rd4743, %rd4742, %rd4739;
	add.s64 	%rd4744, %rd4743, %rd4736;
	add.s64 	%rd6922, %rd4744, %rd4654;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4356,%dummy}, %rd6919;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4357}, %rd6919;
	}
	shf.r.wrap.b32 	%r4358, %r4357, %r4356, 28;
	shf.r.wrap.b32 	%r4359, %r4356, %r4357, 28;
	mov.b64 	%rd4745, {%r4359, %r4358};
	shf.l.wrap.b32 	%r4360, %r4356, %r4357, 30;
	shf.l.wrap.b32 	%r4361, %r4357, %r4356, 30;
	mov.b64 	%rd4746, {%r4361, %r4360};
	xor.b64  	%rd4747, %rd4746, %rd4745;
	shf.l.wrap.b32 	%r4362, %r4356, %r4357, 25;
	shf.l.wrap.b32 	%r4363, %r4357, %r4356, 25;
	mov.b64 	%rd4748, {%r4363, %r4362};
	xor.b64  	%rd4749, %rd4747, %rd4748;
	xor.b64  	%rd4750, %rd6919, %rd6921;
	xor.b64  	%rd4751, %rd6919, %rd6920;
	and.b64  	%rd4752, %rd4751, %rd4750;
	xor.b64  	%rd4753, %rd4752, %rd6919;
	add.s64 	%rd4754, %rd4744, %rd4753;
	add.s64 	%rd6918, %rd4754, %rd4749;
	add.s32 	%r11806, %r11806, 16;
	setp.lt.s32	%p408, %r11806, 80;
	@%p408 bra 	BB5_680;

	add.s64 	%rd6941, %rd6941, %rd6918;
	st.local.u64 	[%rd10], %rd6941;
	add.s64 	%rd6940, %rd6940, %rd6919;
	st.local.u64 	[%rd22], %rd6940;
	add.s64 	%rd6939, %rd6939, %rd6920;
	st.local.u64 	[%rd23], %rd6939;
	add.s64 	%rd6938, %rd6938, %rd6921;
	st.local.u64 	[%rd24], %rd6938;
	add.s64 	%rd6937, %rd6937, %rd6922;
	st.local.u64 	[%rd25], %rd6937;
	add.s64 	%rd6936, %rd6936, %rd6923;
	st.local.u64 	[%rd26], %rd6936;
	add.s64 	%rd6935, %rd6935, %rd6924;
	st.local.u64 	[%rd27], %rd6935;
	add.s64 	%rd6934, %rd6934, %rd6925;
	st.local.u64 	[%rd28], %rd6934;
	st.local.u32 	[%rd45], %r1929;
	st.local.u32 	[%rd46], %r1929;
	st.local.u32 	[%rd47], %r1929;
	st.local.u32 	[%rd48], %r1929;
	st.local.u32 	[%rd49], %r1929;
	st.local.u32 	[%rd50], %r1929;
	st.local.u32 	[%rd51], %r1929;
	st.local.u32 	[%rd52], %r1929;
	st.local.u32 	[%rd53], %r1929;
	st.local.u32 	[%rd54], %r1929;
	st.local.u32 	[%rd55], %r1929;
	st.local.u32 	[%rd56], %r1929;
	st.local.u32 	[%rd57], %r1929;
	st.local.u32 	[%rd58], %r1929;
	st.local.u32 	[%rd59], %r1929;
	st.local.u32 	[%rd60], %r1929;
	st.local.u32 	[%rd29], %r1929;
	st.local.u32 	[%rd30], %r1929;
	st.local.u32 	[%rd31], %r1929;
	st.local.u32 	[%rd32], %r1929;
	st.local.u32 	[%rd33], %r1929;
	st.local.u32 	[%rd34], %r1929;
	st.local.u32 	[%rd35], %r1929;
	st.local.u32 	[%rd36], %r1929;
	st.local.u32 	[%rd37], %r1929;
	st.local.u32 	[%rd38], %r1929;
	st.local.u32 	[%rd39], %r1929;
	st.local.u32 	[%rd40], %r1929;
	st.local.u32 	[%rd41], %r1929;
	st.local.u32 	[%rd42], %r1929;
	st.local.u32 	[%rd43], %r1929;
	st.local.u32 	[%rd44], %r1929;
	mov.u32 	%r11807, %r1929;
	mov.u32 	%r11808, %r1929;
	mov.u32 	%r11809, %r1929;
	mov.u32 	%r11810, %r1929;
	mov.u32 	%r11811, %r1929;
	mov.u32 	%r11812, %r1929;
	mov.u32 	%r11813, %r1929;
	mov.u32 	%r11814, %r1929;
	mov.u32 	%r11815, %r1929;
	mov.u32 	%r11816, %r1929;
	mov.u32 	%r11817, %r1929;
	mov.u32 	%r11818, %r1929;
	mov.u32 	%r11819, %r1929;
	mov.u32 	%r11820, %r1929;
	mov.u32 	%r11821, %r1929;
	mov.u32 	%r11822, %r1929;
	mov.u32 	%r11823, %r1929;
	mov.u32 	%r11824, %r1929;
	mov.u32 	%r11825, %r1929;
	mov.u32 	%r11826, %r1929;
	mov.u32 	%r11827, %r1929;
	mov.u32 	%r11828, %r1929;
	mov.u32 	%r11829, %r1929;
	mov.u32 	%r11830, %r1929;
	mov.u32 	%r11831, %r1929;
	mov.u32 	%r11832, %r1929;
	mov.u32 	%r11833, %r1929;
	mov.u32 	%r11834, %r1929;
	mov.u32 	%r11835, %r1929;
	mov.u32 	%r11836, %r1929;
	bra.uni 	BB5_682;

BB5_678:
	ld.local.u32 	%r11834, [%rd47];
	ld.local.u32 	%r11833, [%rd48];
	ld.local.u32 	%r11832, [%rd49];
	ld.local.u32 	%r11831, [%rd50];
	ld.local.u32 	%r11830, [%rd51];
	ld.local.u32 	%r11829, [%rd52];
	ld.local.u32 	%r11828, [%rd53];
	ld.local.u32 	%r11827, [%rd54];
	ld.local.u32 	%r11826, [%rd55];
	ld.local.u32 	%r11825, [%rd56];
	ld.local.u32 	%r11824, [%rd57];
	ld.local.u32 	%r11823, [%rd58];
	ld.local.u32 	%r11822, [%rd59];
	ld.local.u32 	%r11821, [%rd60];
	ld.local.u32 	%r11820, [%rd29];
	ld.local.u32 	%r11819, [%rd30];
	ld.local.u32 	%r11818, [%rd31];
	ld.local.u32 	%r11817, [%rd32];
	ld.local.u32 	%r11816, [%rd33];
	ld.local.u32 	%r11815, [%rd34];
	ld.local.u32 	%r11814, [%rd35];
	ld.local.u32 	%r11813, [%rd36];
	ld.local.u32 	%r11812, [%rd37];
	ld.local.u32 	%r11811, [%rd38];
	ld.local.u32 	%r11810, [%rd39];
	ld.local.u32 	%r11809, [%rd40];
	ld.local.u32 	%r11808, [%rd41];
	ld.local.u32 	%r11807, [%rd42];

BB5_682:
	st.local.u32 	[%rd43], %r1929;
	shl.b32 	%r4396, %r126, 3;
	st.local.u32 	[%rd44], %r4396;
	mov.b64	%rd6958, {%r11835, %r11836};
	mov.b64	%rd6959, {%r11833, %r11834};
	mov.b64	%rd6960, {%r11831, %r11832};
	mov.b64	%rd6961, {%r11829, %r11830};
	mov.b64	%rd6962, {%r11827, %r11828};
	mov.b64	%rd6963, {%r11825, %r11826};
	mov.b64	%rd6964, {%r11823, %r11824};
	mov.b64	%rd6965, {%r11821, %r11822};
	mov.b64	%rd6949, {%r11819, %r11820};
	mov.b64	%rd6948, {%r11817, %r11818};
	mov.b64	%rd6947, {%r11815, %r11816};
	mov.b64	%rd6946, {%r11813, %r11814};
	mov.b64	%rd6945, {%r11811, %r11812};
	mov.b64	%rd6944, {%r11809, %r11810};
	mov.b64	%rd6943, {%r11807, %r11808};
	mov.b64	%rd6942, {%r4396, %r1929};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4397,%dummy}, %rd6937;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4398}, %rd6937;
	}
	shf.r.wrap.b32 	%r4399, %r4398, %r4397, 18;
	shf.r.wrap.b32 	%r4400, %r4397, %r4398, 18;
	mov.b64 	%rd4755, {%r4400, %r4399};
	shf.r.wrap.b32 	%r4401, %r4398, %r4397, 14;
	shf.r.wrap.b32 	%r4402, %r4397, %r4398, 14;
	mov.b64 	%rd4756, {%r4402, %r4401};
	xor.b64  	%rd4757, %rd4755, %rd4756;
	shf.l.wrap.b32 	%r4403, %r4397, %r4398, 23;
	shf.l.wrap.b32 	%r4404, %r4398, %r4397, 23;
	mov.b64 	%rd4758, {%r4404, %r4403};
	xor.b64  	%rd4759, %rd4757, %rd4758;
	xor.b64  	%rd4760, %rd6935, %rd6936;
	and.b64  	%rd4761, %rd4760, %rd6937;
	xor.b64  	%rd4762, %rd4761, %rd6935;
	add.s64 	%rd4763, %rd4762, %rd6934;
	add.s64 	%rd4764, %rd4763, %rd6958;
	add.s64 	%rd4765, %rd4764, %rd63;
	add.s64 	%rd4766, %rd4765, %rd4759;
	add.s64 	%rd4767, %rd4766, %rd6938;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4405}, %rd6941;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4406,%dummy}, %rd6941;
	}
	shf.l.wrap.b32 	%r4407, %r4406, %r4405, 30;
	shf.l.wrap.b32 	%r4408, %r4405, %r4406, 30;
	mov.b64 	%rd4768, {%r4408, %r4407};
	shf.r.wrap.b32 	%r4409, %r4405, %r4406, 28;
	shf.r.wrap.b32 	%r4410, %r4406, %r4405, 28;
	mov.b64 	%rd4769, {%r4410, %r4409};
	xor.b64  	%rd4770, %rd4768, %rd4769;
	shf.l.wrap.b32 	%r4411, %r4406, %r4405, 25;
	shf.l.wrap.b32 	%r4412, %r4405, %r4406, 25;
	mov.b64 	%rd4771, {%r4412, %r4411};
	xor.b64  	%rd4772, %rd4770, %rd4771;
	xor.b64  	%rd4773, %rd6940, %rd6941;
	xor.b64  	%rd4774, %rd6939, %rd6941;
	and.b64  	%rd4775, %rd4774, %rd4773;
	xor.b64  	%rd4776, %rd4775, %rd6941;
	add.s64 	%rd4777, %rd4766, %rd4776;
	add.s64 	%rd4778, %rd4777, %rd4772;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4413,%dummy}, %rd4767;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4414}, %rd4767;
	}
	shf.r.wrap.b32 	%r4415, %r4414, %r4413, 14;
	shf.r.wrap.b32 	%r4416, %r4413, %r4414, 14;
	mov.b64 	%rd4779, {%r4416, %r4415};
	shf.r.wrap.b32 	%r4417, %r4414, %r4413, 18;
	shf.r.wrap.b32 	%r4418, %r4413, %r4414, 18;
	mov.b64 	%rd4780, {%r4418, %r4417};
	xor.b64  	%rd4781, %rd4780, %rd4779;
	shf.l.wrap.b32 	%r4419, %r4413, %r4414, 23;
	shf.l.wrap.b32 	%r4420, %r4414, %r4413, 23;
	mov.b64 	%rd4782, {%r4420, %r4419};
	xor.b64  	%rd4783, %rd4781, %rd4782;
	xor.b64  	%rd4784, %rd6936, %rd6937;
	and.b64  	%rd4785, %rd4767, %rd4784;
	xor.b64  	%rd4786, %rd4785, %rd6936;
	add.s64 	%rd4787, %rd6959, %rd6935;
	add.s64 	%rd4788, %rd4787, %rd64;
	add.s64 	%rd4789, %rd4788, %rd4786;
	add.s64 	%rd4790, %rd4789, %rd4783;
	add.s64 	%rd4791, %rd4790, %rd6939;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4421,%dummy}, %rd4778;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4422}, %rd4778;
	}
	shf.r.wrap.b32 	%r4423, %r4422, %r4421, 28;
	shf.r.wrap.b32 	%r4424, %r4421, %r4422, 28;
	mov.b64 	%rd4792, {%r4424, %r4423};
	shf.l.wrap.b32 	%r4425, %r4421, %r4422, 30;
	shf.l.wrap.b32 	%r4426, %r4422, %r4421, 30;
	mov.b64 	%rd4793, {%r4426, %r4425};
	xor.b64  	%rd4794, %rd4793, %rd4792;
	shf.l.wrap.b32 	%r4427, %r4421, %r4422, 25;
	shf.l.wrap.b32 	%r4428, %r4422, %r4421, 25;
	mov.b64 	%rd4795, {%r4428, %r4427};
	xor.b64  	%rd4796, %rd4794, %rd4795;
	xor.b64  	%rd4797, %rd4778, %rd6940;
	xor.b64  	%rd4798, %rd4778, %rd6941;
	and.b64  	%rd4799, %rd4798, %rd4797;
	xor.b64  	%rd4800, %rd4799, %rd4778;
	add.s64 	%rd4801, %rd4790, %rd4800;
	add.s64 	%rd4802, %rd4801, %rd4796;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4429,%dummy}, %rd4791;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4430}, %rd4791;
	}
	shf.r.wrap.b32 	%r4431, %r4430, %r4429, 14;
	shf.r.wrap.b32 	%r4432, %r4429, %r4430, 14;
	mov.b64 	%rd4803, {%r4432, %r4431};
	shf.r.wrap.b32 	%r4433, %r4430, %r4429, 18;
	shf.r.wrap.b32 	%r4434, %r4429, %r4430, 18;
	mov.b64 	%rd4804, {%r4434, %r4433};
	xor.b64  	%rd4805, %rd4804, %rd4803;
	shf.l.wrap.b32 	%r4435, %r4429, %r4430, 23;
	shf.l.wrap.b32 	%r4436, %r4430, %r4429, 23;
	mov.b64 	%rd4806, {%r4436, %r4435};
	xor.b64  	%rd4807, %rd4805, %rd4806;
	xor.b64  	%rd4808, %rd4767, %rd6937;
	and.b64  	%rd4809, %rd4791, %rd4808;
	xor.b64  	%rd4810, %rd4809, %rd6937;
	add.s64 	%rd4811, %rd6960, %rd6936;
	add.s64 	%rd4812, %rd4811, %rd65;
	add.s64 	%rd4813, %rd4812, %rd4810;
	add.s64 	%rd4814, %rd4813, %rd4807;
	add.s64 	%rd4815, %rd4814, %rd6940;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4437,%dummy}, %rd4802;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4438}, %rd4802;
	}
	shf.r.wrap.b32 	%r4439, %r4438, %r4437, 28;
	shf.r.wrap.b32 	%r4440, %r4437, %r4438, 28;
	mov.b64 	%rd4816, {%r4440, %r4439};
	shf.l.wrap.b32 	%r4441, %r4437, %r4438, 30;
	shf.l.wrap.b32 	%r4442, %r4438, %r4437, 30;
	mov.b64 	%rd4817, {%r4442, %r4441};
	xor.b64  	%rd4818, %rd4817, %rd4816;
	shf.l.wrap.b32 	%r4443, %r4437, %r4438, 25;
	shf.l.wrap.b32 	%r4444, %r4438, %r4437, 25;
	mov.b64 	%rd4819, {%r4444, %r4443};
	xor.b64  	%rd4820, %rd4818, %rd4819;
	xor.b64  	%rd4821, %rd4802, %rd6941;
	xor.b64  	%rd4822, %rd4802, %rd4778;
	and.b64  	%rd4823, %rd4822, %rd4821;
	xor.b64  	%rd4824, %rd4823, %rd4802;
	add.s64 	%rd4825, %rd4814, %rd4824;
	add.s64 	%rd4826, %rd4825, %rd4820;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4445,%dummy}, %rd4815;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4446}, %rd4815;
	}
	shf.r.wrap.b32 	%r4447, %r4446, %r4445, 14;
	shf.r.wrap.b32 	%r4448, %r4445, %r4446, 14;
	mov.b64 	%rd4827, {%r4448, %r4447};
	shf.r.wrap.b32 	%r4449, %r4446, %r4445, 18;
	shf.r.wrap.b32 	%r4450, %r4445, %r4446, 18;
	mov.b64 	%rd4828, {%r4450, %r4449};
	xor.b64  	%rd4829, %rd4828, %rd4827;
	shf.l.wrap.b32 	%r4451, %r4445, %r4446, 23;
	shf.l.wrap.b32 	%r4452, %r4446, %r4445, 23;
	mov.b64 	%rd4830, {%r4452, %r4451};
	xor.b64  	%rd4831, %rd4829, %rd4830;
	xor.b64  	%rd4832, %rd4791, %rd4767;
	and.b64  	%rd4833, %rd4815, %rd4832;
	xor.b64  	%rd4834, %rd4833, %rd4767;
	add.s64 	%rd4835, %rd6961, %rd6937;
	add.s64 	%rd4836, %rd4835, %rd66;
	add.s64 	%rd4837, %rd4836, %rd4834;
	add.s64 	%rd4838, %rd4837, %rd4831;
	add.s64 	%rd4839, %rd4838, %rd6941;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4453,%dummy}, %rd4826;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4454}, %rd4826;
	}
	shf.r.wrap.b32 	%r4455, %r4454, %r4453, 28;
	shf.r.wrap.b32 	%r4456, %r4453, %r4454, 28;
	mov.b64 	%rd4840, {%r4456, %r4455};
	shf.l.wrap.b32 	%r4457, %r4453, %r4454, 30;
	shf.l.wrap.b32 	%r4458, %r4454, %r4453, 30;
	mov.b64 	%rd4841, {%r4458, %r4457};
	xor.b64  	%rd4842, %rd4841, %rd4840;
	shf.l.wrap.b32 	%r4459, %r4453, %r4454, 25;
	shf.l.wrap.b32 	%r4460, %r4454, %r4453, 25;
	mov.b64 	%rd4843, {%r4460, %r4459};
	xor.b64  	%rd4844, %rd4842, %rd4843;
	xor.b64  	%rd4845, %rd4826, %rd4778;
	xor.b64  	%rd4846, %rd4826, %rd4802;
	and.b64  	%rd4847, %rd4846, %rd4845;
	xor.b64  	%rd4848, %rd4847, %rd4826;
	add.s64 	%rd4849, %rd4838, %rd4848;
	add.s64 	%rd4850, %rd4849, %rd4844;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4461,%dummy}, %rd4839;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4462}, %rd4839;
	}
	shf.r.wrap.b32 	%r4463, %r4462, %r4461, 14;
	shf.r.wrap.b32 	%r4464, %r4461, %r4462, 14;
	mov.b64 	%rd4851, {%r4464, %r4463};
	shf.r.wrap.b32 	%r4465, %r4462, %r4461, 18;
	shf.r.wrap.b32 	%r4466, %r4461, %r4462, 18;
	mov.b64 	%rd4852, {%r4466, %r4465};
	xor.b64  	%rd4853, %rd4852, %rd4851;
	shf.l.wrap.b32 	%r4467, %r4461, %r4462, 23;
	shf.l.wrap.b32 	%r4468, %r4462, %r4461, 23;
	mov.b64 	%rd4854, {%r4468, %r4467};
	xor.b64  	%rd4855, %rd4853, %rd4854;
	xor.b64  	%rd4856, %rd4815, %rd4791;
	and.b64  	%rd4857, %rd4839, %rd4856;
	xor.b64  	%rd4858, %rd4857, %rd4791;
	add.s64 	%rd4859, %rd4767, %rd6962;
	add.s64 	%rd4860, %rd4859, %rd67;
	add.s64 	%rd4861, %rd4860, %rd4858;
	add.s64 	%rd4862, %rd4861, %rd4855;
	add.s64 	%rd4863, %rd4862, %rd4778;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4469,%dummy}, %rd4850;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4470}, %rd4850;
	}
	shf.r.wrap.b32 	%r4471, %r4470, %r4469, 28;
	shf.r.wrap.b32 	%r4472, %r4469, %r4470, 28;
	mov.b64 	%rd4864, {%r4472, %r4471};
	shf.l.wrap.b32 	%r4473, %r4469, %r4470, 30;
	shf.l.wrap.b32 	%r4474, %r4470, %r4469, 30;
	mov.b64 	%rd4865, {%r4474, %r4473};
	xor.b64  	%rd4866, %rd4865, %rd4864;
	shf.l.wrap.b32 	%r4475, %r4469, %r4470, 25;
	shf.l.wrap.b32 	%r4476, %r4470, %r4469, 25;
	mov.b64 	%rd4867, {%r4476, %r4475};
	xor.b64  	%rd4868, %rd4866, %rd4867;
	xor.b64  	%rd4869, %rd4850, %rd4802;
	xor.b64  	%rd4870, %rd4850, %rd4826;
	and.b64  	%rd4871, %rd4870, %rd4869;
	xor.b64  	%rd4872, %rd4871, %rd4850;
	add.s64 	%rd4873, %rd4862, %rd4872;
	add.s64 	%rd4874, %rd4873, %rd4868;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4477,%dummy}, %rd4863;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4478}, %rd4863;
	}
	shf.r.wrap.b32 	%r4479, %r4478, %r4477, 14;
	shf.r.wrap.b32 	%r4480, %r4477, %r4478, 14;
	mov.b64 	%rd4875, {%r4480, %r4479};
	shf.r.wrap.b32 	%r4481, %r4478, %r4477, 18;
	shf.r.wrap.b32 	%r4482, %r4477, %r4478, 18;
	mov.b64 	%rd4876, {%r4482, %r4481};
	xor.b64  	%rd4877, %rd4876, %rd4875;
	shf.l.wrap.b32 	%r4483, %r4477, %r4478, 23;
	shf.l.wrap.b32 	%r4484, %r4478, %r4477, 23;
	mov.b64 	%rd4878, {%r4484, %r4483};
	xor.b64  	%rd4879, %rd4877, %rd4878;
	xor.b64  	%rd4880, %rd4839, %rd4815;
	and.b64  	%rd4881, %rd4863, %rd4880;
	xor.b64  	%rd4882, %rd4881, %rd4815;
	add.s64 	%rd4883, %rd4791, %rd6963;
	add.s64 	%rd4884, %rd4883, %rd68;
	add.s64 	%rd4885, %rd4884, %rd4882;
	add.s64 	%rd4886, %rd4885, %rd4879;
	add.s64 	%rd4887, %rd4886, %rd4802;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4485,%dummy}, %rd4874;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4486}, %rd4874;
	}
	shf.r.wrap.b32 	%r4487, %r4486, %r4485, 28;
	shf.r.wrap.b32 	%r4488, %r4485, %r4486, 28;
	mov.b64 	%rd4888, {%r4488, %r4487};
	shf.l.wrap.b32 	%r4489, %r4485, %r4486, 30;
	shf.l.wrap.b32 	%r4490, %r4486, %r4485, 30;
	mov.b64 	%rd4889, {%r4490, %r4489};
	xor.b64  	%rd4890, %rd4889, %rd4888;
	shf.l.wrap.b32 	%r4491, %r4485, %r4486, 25;
	shf.l.wrap.b32 	%r4492, %r4486, %r4485, 25;
	mov.b64 	%rd4891, {%r4492, %r4491};
	xor.b64  	%rd4892, %rd4890, %rd4891;
	xor.b64  	%rd4893, %rd4874, %rd4826;
	xor.b64  	%rd4894, %rd4874, %rd4850;
	and.b64  	%rd4895, %rd4894, %rd4893;
	xor.b64  	%rd4896, %rd4895, %rd4874;
	add.s64 	%rd4897, %rd4886, %rd4896;
	add.s64 	%rd4898, %rd4897, %rd4892;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4493,%dummy}, %rd4887;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4494}, %rd4887;
	}
	shf.r.wrap.b32 	%r4495, %r4494, %r4493, 14;
	shf.r.wrap.b32 	%r4496, %r4493, %r4494, 14;
	mov.b64 	%rd4899, {%r4496, %r4495};
	shf.r.wrap.b32 	%r4497, %r4494, %r4493, 18;
	shf.r.wrap.b32 	%r4498, %r4493, %r4494, 18;
	mov.b64 	%rd4900, {%r4498, %r4497};
	xor.b64  	%rd4901, %rd4900, %rd4899;
	shf.l.wrap.b32 	%r4499, %r4493, %r4494, 23;
	shf.l.wrap.b32 	%r4500, %r4494, %r4493, 23;
	mov.b64 	%rd4902, {%r4500, %r4499};
	xor.b64  	%rd4903, %rd4901, %rd4902;
	xor.b64  	%rd4904, %rd4863, %rd4839;
	and.b64  	%rd4905, %rd4887, %rd4904;
	xor.b64  	%rd4906, %rd4905, %rd4839;
	add.s64 	%rd4907, %rd4815, %rd6964;
	add.s64 	%rd4908, %rd4907, %rd69;
	add.s64 	%rd4909, %rd4908, %rd4906;
	add.s64 	%rd4910, %rd4909, %rd4903;
	add.s64 	%rd4911, %rd4910, %rd4826;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4501,%dummy}, %rd4898;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4502}, %rd4898;
	}
	shf.r.wrap.b32 	%r4503, %r4502, %r4501, 28;
	shf.r.wrap.b32 	%r4504, %r4501, %r4502, 28;
	mov.b64 	%rd4912, {%r4504, %r4503};
	shf.l.wrap.b32 	%r4505, %r4501, %r4502, 30;
	shf.l.wrap.b32 	%r4506, %r4502, %r4501, 30;
	mov.b64 	%rd4913, {%r4506, %r4505};
	xor.b64  	%rd4914, %rd4913, %rd4912;
	shf.l.wrap.b32 	%r4507, %r4501, %r4502, 25;
	shf.l.wrap.b32 	%r4508, %r4502, %r4501, 25;
	mov.b64 	%rd4915, {%r4508, %r4507};
	xor.b64  	%rd4916, %rd4914, %rd4915;
	xor.b64  	%rd4917, %rd4898, %rd4850;
	xor.b64  	%rd4918, %rd4898, %rd4874;
	and.b64  	%rd4919, %rd4918, %rd4917;
	xor.b64  	%rd4920, %rd4919, %rd4898;
	add.s64 	%rd4921, %rd4910, %rd4920;
	add.s64 	%rd4922, %rd4921, %rd4916;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4509,%dummy}, %rd4911;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4510}, %rd4911;
	}
	shf.r.wrap.b32 	%r4511, %r4510, %r4509, 14;
	shf.r.wrap.b32 	%r4512, %r4509, %r4510, 14;
	mov.b64 	%rd4923, {%r4512, %r4511};
	shf.r.wrap.b32 	%r4513, %r4510, %r4509, 18;
	shf.r.wrap.b32 	%r4514, %r4509, %r4510, 18;
	mov.b64 	%rd4924, {%r4514, %r4513};
	xor.b64  	%rd4925, %rd4924, %rd4923;
	shf.l.wrap.b32 	%r4515, %r4509, %r4510, 23;
	shf.l.wrap.b32 	%r4516, %r4510, %r4509, 23;
	mov.b64 	%rd4926, {%r4516, %r4515};
	xor.b64  	%rd4927, %rd4925, %rd4926;
	xor.b64  	%rd4928, %rd4887, %rd4863;
	and.b64  	%rd4929, %rd4911, %rd4928;
	xor.b64  	%rd4930, %rd4929, %rd4863;
	add.s64 	%rd4931, %rd4839, %rd6965;
	add.s64 	%rd4932, %rd4931, %rd70;
	add.s64 	%rd4933, %rd4932, %rd4930;
	add.s64 	%rd4934, %rd4933, %rd4927;
	add.s64 	%rd4935, %rd4934, %rd4850;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4517,%dummy}, %rd4922;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4518}, %rd4922;
	}
	shf.r.wrap.b32 	%r4519, %r4518, %r4517, 28;
	shf.r.wrap.b32 	%r4520, %r4517, %r4518, 28;
	mov.b64 	%rd4936, {%r4520, %r4519};
	shf.l.wrap.b32 	%r4521, %r4517, %r4518, 30;
	shf.l.wrap.b32 	%r4522, %r4518, %r4517, 30;
	mov.b64 	%rd4937, {%r4522, %r4521};
	xor.b64  	%rd4938, %rd4937, %rd4936;
	shf.l.wrap.b32 	%r4523, %r4517, %r4518, 25;
	shf.l.wrap.b32 	%r4524, %r4518, %r4517, 25;
	mov.b64 	%rd4939, {%r4524, %r4523};
	xor.b64  	%rd4940, %rd4938, %rd4939;
	xor.b64  	%rd4941, %rd4922, %rd4874;
	xor.b64  	%rd4942, %rd4922, %rd4898;
	and.b64  	%rd4943, %rd4942, %rd4941;
	xor.b64  	%rd4944, %rd4943, %rd4922;
	add.s64 	%rd4945, %rd4934, %rd4944;
	add.s64 	%rd4946, %rd4945, %rd4940;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4525,%dummy}, %rd4935;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4526}, %rd4935;
	}
	shf.r.wrap.b32 	%r4527, %r4526, %r4525, 14;
	shf.r.wrap.b32 	%r4528, %r4525, %r4526, 14;
	mov.b64 	%rd4947, {%r4528, %r4527};
	shf.r.wrap.b32 	%r4529, %r4526, %r4525, 18;
	shf.r.wrap.b32 	%r4530, %r4525, %r4526, 18;
	mov.b64 	%rd4948, {%r4530, %r4529};
	xor.b64  	%rd4949, %rd4948, %rd4947;
	shf.l.wrap.b32 	%r4531, %r4525, %r4526, 23;
	shf.l.wrap.b32 	%r4532, %r4526, %r4525, 23;
	mov.b64 	%rd4950, {%r4532, %r4531};
	xor.b64  	%rd4951, %rd4949, %rd4950;
	xor.b64  	%rd4952, %rd4911, %rd4887;
	and.b64  	%rd4953, %rd4935, %rd4952;
	xor.b64  	%rd4954, %rd4953, %rd4887;
	add.s64 	%rd4955, %rd4863, %rd6949;
	add.s64 	%rd4956, %rd4955, %rd71;
	add.s64 	%rd4957, %rd4956, %rd4954;
	add.s64 	%rd4958, %rd4957, %rd4951;
	add.s64 	%rd4959, %rd4958, %rd4874;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4533,%dummy}, %rd4946;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4534}, %rd4946;
	}
	shf.r.wrap.b32 	%r4535, %r4534, %r4533, 28;
	shf.r.wrap.b32 	%r4536, %r4533, %r4534, 28;
	mov.b64 	%rd4960, {%r4536, %r4535};
	shf.l.wrap.b32 	%r4537, %r4533, %r4534, 30;
	shf.l.wrap.b32 	%r4538, %r4534, %r4533, 30;
	mov.b64 	%rd4961, {%r4538, %r4537};
	xor.b64  	%rd4962, %rd4961, %rd4960;
	shf.l.wrap.b32 	%r4539, %r4533, %r4534, 25;
	shf.l.wrap.b32 	%r4540, %r4534, %r4533, 25;
	mov.b64 	%rd4963, {%r4540, %r4539};
	xor.b64  	%rd4964, %rd4962, %rd4963;
	xor.b64  	%rd4965, %rd4946, %rd4898;
	xor.b64  	%rd4966, %rd4946, %rd4922;
	and.b64  	%rd4967, %rd4966, %rd4965;
	xor.b64  	%rd4968, %rd4967, %rd4946;
	add.s64 	%rd4969, %rd4958, %rd4968;
	add.s64 	%rd4970, %rd4969, %rd4964;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4541,%dummy}, %rd4959;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4542}, %rd4959;
	}
	shf.r.wrap.b32 	%r4543, %r4542, %r4541, 14;
	shf.r.wrap.b32 	%r4544, %r4541, %r4542, 14;
	mov.b64 	%rd4971, {%r4544, %r4543};
	shf.r.wrap.b32 	%r4545, %r4542, %r4541, 18;
	shf.r.wrap.b32 	%r4546, %r4541, %r4542, 18;
	mov.b64 	%rd4972, {%r4546, %r4545};
	xor.b64  	%rd4973, %rd4972, %rd4971;
	shf.l.wrap.b32 	%r4547, %r4541, %r4542, 23;
	shf.l.wrap.b32 	%r4548, %r4542, %r4541, 23;
	mov.b64 	%rd4974, {%r4548, %r4547};
	xor.b64  	%rd4975, %rd4973, %rd4974;
	xor.b64  	%rd4976, %rd4935, %rd4911;
	and.b64  	%rd4977, %rd4959, %rd4976;
	xor.b64  	%rd4978, %rd4977, %rd4911;
	add.s64 	%rd4979, %rd4887, %rd6948;
	add.s64 	%rd4980, %rd4979, %rd72;
	add.s64 	%rd4981, %rd4980, %rd4978;
	add.s64 	%rd4982, %rd4981, %rd4975;
	add.s64 	%rd4983, %rd4982, %rd4898;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4549,%dummy}, %rd4970;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4550}, %rd4970;
	}
	shf.r.wrap.b32 	%r4551, %r4550, %r4549, 28;
	shf.r.wrap.b32 	%r4552, %r4549, %r4550, 28;
	mov.b64 	%rd4984, {%r4552, %r4551};
	shf.l.wrap.b32 	%r4553, %r4549, %r4550, 30;
	shf.l.wrap.b32 	%r4554, %r4550, %r4549, 30;
	mov.b64 	%rd4985, {%r4554, %r4553};
	xor.b64  	%rd4986, %rd4985, %rd4984;
	shf.l.wrap.b32 	%r4555, %r4549, %r4550, 25;
	shf.l.wrap.b32 	%r4556, %r4550, %r4549, 25;
	mov.b64 	%rd4987, {%r4556, %r4555};
	xor.b64  	%rd4988, %rd4986, %rd4987;
	xor.b64  	%rd4989, %rd4970, %rd4922;
	xor.b64  	%rd4990, %rd4970, %rd4946;
	and.b64  	%rd4991, %rd4990, %rd4989;
	xor.b64  	%rd4992, %rd4991, %rd4970;
	add.s64 	%rd4993, %rd4982, %rd4992;
	add.s64 	%rd4994, %rd4993, %rd4988;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4557,%dummy}, %rd4983;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4558}, %rd4983;
	}
	shf.r.wrap.b32 	%r4559, %r4558, %r4557, 14;
	shf.r.wrap.b32 	%r4560, %r4557, %r4558, 14;
	mov.b64 	%rd4995, {%r4560, %r4559};
	shf.r.wrap.b32 	%r4561, %r4558, %r4557, 18;
	shf.r.wrap.b32 	%r4562, %r4557, %r4558, 18;
	mov.b64 	%rd4996, {%r4562, %r4561};
	xor.b64  	%rd4997, %rd4996, %rd4995;
	shf.l.wrap.b32 	%r4563, %r4557, %r4558, 23;
	shf.l.wrap.b32 	%r4564, %r4558, %r4557, 23;
	mov.b64 	%rd4998, {%r4564, %r4563};
	xor.b64  	%rd4999, %rd4997, %rd4998;
	xor.b64  	%rd5000, %rd4959, %rd4935;
	and.b64  	%rd5001, %rd4983, %rd5000;
	xor.b64  	%rd5002, %rd5001, %rd4935;
	add.s64 	%rd5003, %rd4911, %rd6947;
	add.s64 	%rd5004, %rd5003, %rd73;
	add.s64 	%rd5005, %rd5004, %rd5002;
	add.s64 	%rd5006, %rd5005, %rd4999;
	add.s64 	%rd5007, %rd5006, %rd4922;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4565,%dummy}, %rd4994;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4566}, %rd4994;
	}
	shf.r.wrap.b32 	%r4567, %r4566, %r4565, 28;
	shf.r.wrap.b32 	%r4568, %r4565, %r4566, 28;
	mov.b64 	%rd5008, {%r4568, %r4567};
	shf.l.wrap.b32 	%r4569, %r4565, %r4566, 30;
	shf.l.wrap.b32 	%r4570, %r4566, %r4565, 30;
	mov.b64 	%rd5009, {%r4570, %r4569};
	xor.b64  	%rd5010, %rd5009, %rd5008;
	shf.l.wrap.b32 	%r4571, %r4565, %r4566, 25;
	shf.l.wrap.b32 	%r4572, %r4566, %r4565, 25;
	mov.b64 	%rd5011, {%r4572, %r4571};
	xor.b64  	%rd5012, %rd5010, %rd5011;
	xor.b64  	%rd5013, %rd4994, %rd4946;
	xor.b64  	%rd5014, %rd4994, %rd4970;
	and.b64  	%rd5015, %rd5014, %rd5013;
	xor.b64  	%rd5016, %rd5015, %rd4994;
	add.s64 	%rd5017, %rd5006, %rd5016;
	add.s64 	%rd5018, %rd5017, %rd5012;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4573,%dummy}, %rd5007;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4574}, %rd5007;
	}
	shf.r.wrap.b32 	%r4575, %r4574, %r4573, 14;
	shf.r.wrap.b32 	%r4576, %r4573, %r4574, 14;
	mov.b64 	%rd5019, {%r4576, %r4575};
	shf.r.wrap.b32 	%r4577, %r4574, %r4573, 18;
	shf.r.wrap.b32 	%r4578, %r4573, %r4574, 18;
	mov.b64 	%rd5020, {%r4578, %r4577};
	xor.b64  	%rd5021, %rd5020, %rd5019;
	shf.l.wrap.b32 	%r4579, %r4573, %r4574, 23;
	shf.l.wrap.b32 	%r4580, %r4574, %r4573, 23;
	mov.b64 	%rd5022, {%r4580, %r4579};
	xor.b64  	%rd5023, %rd5021, %rd5022;
	xor.b64  	%rd5024, %rd4983, %rd4959;
	and.b64  	%rd5025, %rd5007, %rd5024;
	xor.b64  	%rd5026, %rd5025, %rd4959;
	add.s64 	%rd5027, %rd4935, %rd6946;
	add.s64 	%rd5028, %rd5027, %rd74;
	add.s64 	%rd5029, %rd5028, %rd5026;
	add.s64 	%rd5030, %rd5029, %rd5023;
	add.s64 	%rd5031, %rd5030, %rd4946;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4581,%dummy}, %rd5018;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4582}, %rd5018;
	}
	shf.r.wrap.b32 	%r4583, %r4582, %r4581, 28;
	shf.r.wrap.b32 	%r4584, %r4581, %r4582, 28;
	mov.b64 	%rd5032, {%r4584, %r4583};
	shf.l.wrap.b32 	%r4585, %r4581, %r4582, 30;
	shf.l.wrap.b32 	%r4586, %r4582, %r4581, 30;
	mov.b64 	%rd5033, {%r4586, %r4585};
	xor.b64  	%rd5034, %rd5033, %rd5032;
	shf.l.wrap.b32 	%r4587, %r4581, %r4582, 25;
	shf.l.wrap.b32 	%r4588, %r4582, %r4581, 25;
	mov.b64 	%rd5035, {%r4588, %r4587};
	xor.b64  	%rd5036, %rd5034, %rd5035;
	xor.b64  	%rd5037, %rd5018, %rd4970;
	xor.b64  	%rd5038, %rd5018, %rd4994;
	and.b64  	%rd5039, %rd5038, %rd5037;
	xor.b64  	%rd5040, %rd5039, %rd5018;
	add.s64 	%rd5041, %rd5030, %rd5040;
	add.s64 	%rd5042, %rd5041, %rd5036;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4589,%dummy}, %rd5031;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4590}, %rd5031;
	}
	shf.r.wrap.b32 	%r4591, %r4590, %r4589, 14;
	shf.r.wrap.b32 	%r4592, %r4589, %r4590, 14;
	mov.b64 	%rd5043, {%r4592, %r4591};
	shf.r.wrap.b32 	%r4593, %r4590, %r4589, 18;
	shf.r.wrap.b32 	%r4594, %r4589, %r4590, 18;
	mov.b64 	%rd5044, {%r4594, %r4593};
	xor.b64  	%rd5045, %rd5044, %rd5043;
	shf.l.wrap.b32 	%r4595, %r4589, %r4590, 23;
	shf.l.wrap.b32 	%r4596, %r4590, %r4589, 23;
	mov.b64 	%rd5046, {%r4596, %r4595};
	xor.b64  	%rd5047, %rd5045, %rd5046;
	xor.b64  	%rd5048, %rd5007, %rd4983;
	and.b64  	%rd5049, %rd5031, %rd5048;
	xor.b64  	%rd5050, %rd5049, %rd4983;
	add.s64 	%rd5051, %rd4959, %rd6945;
	add.s64 	%rd5052, %rd5051, %rd75;
	add.s64 	%rd5053, %rd5052, %rd5050;
	add.s64 	%rd5054, %rd5053, %rd5047;
	add.s64 	%rd6957, %rd5054, %rd4970;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4597,%dummy}, %rd5042;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4598}, %rd5042;
	}
	shf.r.wrap.b32 	%r4599, %r4598, %r4597, 28;
	shf.r.wrap.b32 	%r4600, %r4597, %r4598, 28;
	mov.b64 	%rd5055, {%r4600, %r4599};
	shf.l.wrap.b32 	%r4601, %r4597, %r4598, 30;
	shf.l.wrap.b32 	%r4602, %r4598, %r4597, 30;
	mov.b64 	%rd5056, {%r4602, %r4601};
	xor.b64  	%rd5057, %rd5056, %rd5055;
	shf.l.wrap.b32 	%r4603, %r4597, %r4598, 25;
	shf.l.wrap.b32 	%r4604, %r4598, %r4597, 25;
	mov.b64 	%rd5058, {%r4604, %r4603};
	xor.b64  	%rd5059, %rd5057, %rd5058;
	xor.b64  	%rd5060, %rd5042, %rd4994;
	xor.b64  	%rd5061, %rd5042, %rd5018;
	and.b64  	%rd5062, %rd5061, %rd5060;
	xor.b64  	%rd5063, %rd5062, %rd5042;
	add.s64 	%rd5064, %rd5054, %rd5063;
	add.s64 	%rd6953, %rd5064, %rd5059;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4605,%dummy}, %rd6957;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4606}, %rd6957;
	}
	shf.r.wrap.b32 	%r4607, %r4606, %r4605, 14;
	shf.r.wrap.b32 	%r4608, %r4605, %r4606, 14;
	mov.b64 	%rd5065, {%r4608, %r4607};
	shf.r.wrap.b32 	%r4609, %r4606, %r4605, 18;
	shf.r.wrap.b32 	%r4610, %r4605, %r4606, 18;
	mov.b64 	%rd5066, {%r4610, %r4609};
	xor.b64  	%rd5067, %rd5066, %rd5065;
	shf.l.wrap.b32 	%r4611, %r4605, %r4606, 23;
	shf.l.wrap.b32 	%r4612, %r4606, %r4605, 23;
	mov.b64 	%rd5068, {%r4612, %r4611};
	xor.b64  	%rd5069, %rd5067, %rd5068;
	xor.b64  	%rd5070, %rd5031, %rd5007;
	and.b64  	%rd5071, %rd6957, %rd5070;
	xor.b64  	%rd5072, %rd5071, %rd5007;
	add.s64 	%rd5073, %rd4983, %rd6944;
	add.s64 	%rd5074, %rd5073, %rd76;
	add.s64 	%rd5075, %rd5074, %rd5072;
	add.s64 	%rd5076, %rd5075, %rd5069;
	add.s64 	%rd6956, %rd5076, %rd4994;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4613,%dummy}, %rd6953;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4614}, %rd6953;
	}
	shf.r.wrap.b32 	%r4615, %r4614, %r4613, 28;
	shf.r.wrap.b32 	%r4616, %r4613, %r4614, 28;
	mov.b64 	%rd5077, {%r4616, %r4615};
	shf.l.wrap.b32 	%r4617, %r4613, %r4614, 30;
	shf.l.wrap.b32 	%r4618, %r4614, %r4613, 30;
	mov.b64 	%rd5078, {%r4618, %r4617};
	xor.b64  	%rd5079, %rd5078, %rd5077;
	shf.l.wrap.b32 	%r4619, %r4613, %r4614, 25;
	shf.l.wrap.b32 	%r4620, %r4614, %r4613, 25;
	mov.b64 	%rd5080, {%r4620, %r4619};
	xor.b64  	%rd5081, %rd5079, %rd5080;
	xor.b64  	%rd5082, %rd6953, %rd5018;
	xor.b64  	%rd5083, %rd6953, %rd5042;
	and.b64  	%rd5084, %rd5083, %rd5082;
	xor.b64  	%rd5085, %rd5084, %rd6953;
	add.s64 	%rd5086, %rd5076, %rd5085;
	add.s64 	%rd6952, %rd5086, %rd5081;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4621,%dummy}, %rd6956;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4622}, %rd6956;
	}
	shf.r.wrap.b32 	%r4623, %r4622, %r4621, 14;
	shf.r.wrap.b32 	%r4624, %r4621, %r4622, 14;
	mov.b64 	%rd5087, {%r4624, %r4623};
	shf.r.wrap.b32 	%r4625, %r4622, %r4621, 18;
	shf.r.wrap.b32 	%r4626, %r4621, %r4622, 18;
	mov.b64 	%rd5088, {%r4626, %r4625};
	xor.b64  	%rd5089, %rd5088, %rd5087;
	shf.l.wrap.b32 	%r4627, %r4621, %r4622, 23;
	shf.l.wrap.b32 	%r4628, %r4622, %r4621, 23;
	mov.b64 	%rd5090, {%r4628, %r4627};
	xor.b64  	%rd5091, %rd5089, %rd5090;
	xor.b64  	%rd5092, %rd6957, %rd5031;
	and.b64  	%rd5093, %rd6956, %rd5092;
	xor.b64  	%rd5094, %rd5093, %rd5031;
	add.s64 	%rd5095, %rd5007, %rd6943;
	add.s64 	%rd5096, %rd5095, %rd77;
	add.s64 	%rd5097, %rd5096, %rd5094;
	add.s64 	%rd5098, %rd5097, %rd5091;
	add.s64 	%rd6955, %rd5098, %rd5018;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4629,%dummy}, %rd6952;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4630}, %rd6952;
	}
	shf.r.wrap.b32 	%r4631, %r4630, %r4629, 28;
	shf.r.wrap.b32 	%r4632, %r4629, %r4630, 28;
	mov.b64 	%rd5099, {%r4632, %r4631};
	shf.l.wrap.b32 	%r4633, %r4629, %r4630, 30;
	shf.l.wrap.b32 	%r4634, %r4630, %r4629, 30;
	mov.b64 	%rd5100, {%r4634, %r4633};
	xor.b64  	%rd5101, %rd5100, %rd5099;
	shf.l.wrap.b32 	%r4635, %r4629, %r4630, 25;
	shf.l.wrap.b32 	%r4636, %r4630, %r4629, 25;
	mov.b64 	%rd5102, {%r4636, %r4635};
	xor.b64  	%rd5103, %rd5101, %rd5102;
	xor.b64  	%rd5104, %rd6952, %rd5042;
	xor.b64  	%rd5105, %rd6952, %rd6953;
	and.b64  	%rd5106, %rd5105, %rd5104;
	xor.b64  	%rd5107, %rd5106, %rd6952;
	add.s64 	%rd5108, %rd5098, %rd5107;
	add.s64 	%rd6951, %rd5108, %rd5103;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4637,%dummy}, %rd6955;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4638}, %rd6955;
	}
	shf.r.wrap.b32 	%r4639, %r4638, %r4637, 14;
	shf.r.wrap.b32 	%r4640, %r4637, %r4638, 14;
	mov.b64 	%rd5109, {%r4640, %r4639};
	shf.r.wrap.b32 	%r4641, %r4638, %r4637, 18;
	shf.r.wrap.b32 	%r4642, %r4637, %r4638, 18;
	mov.b64 	%rd5110, {%r4642, %r4641};
	xor.b64  	%rd5111, %rd5110, %rd5109;
	shf.l.wrap.b32 	%r4643, %r4637, %r4638, 23;
	shf.l.wrap.b32 	%r4644, %r4638, %r4637, 23;
	mov.b64 	%rd5112, {%r4644, %r4643};
	xor.b64  	%rd5113, %rd5111, %rd5112;
	xor.b64  	%rd5114, %rd6956, %rd6957;
	and.b64  	%rd5115, %rd6955, %rd5114;
	xor.b64  	%rd5116, %rd5115, %rd6957;
	add.s64 	%rd5117, %rd5031, %rd6942;
	add.s64 	%rd5118, %rd5117, %rd78;
	add.s64 	%rd5119, %rd5118, %rd5116;
	add.s64 	%rd5120, %rd5119, %rd5113;
	add.s64 	%rd6954, %rd5120, %rd5042;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4645,%dummy}, %rd6951;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4646}, %rd6951;
	}
	shf.r.wrap.b32 	%r4647, %r4646, %r4645, 28;
	shf.r.wrap.b32 	%r4648, %r4645, %r4646, 28;
	mov.b64 	%rd5121, {%r4648, %r4647};
	shf.l.wrap.b32 	%r4649, %r4645, %r4646, 30;
	shf.l.wrap.b32 	%r4650, %r4646, %r4645, 30;
	mov.b64 	%rd5122, {%r4650, %r4649};
	xor.b64  	%rd5123, %rd5122, %rd5121;
	shf.l.wrap.b32 	%r4651, %r4645, %r4646, 25;
	shf.l.wrap.b32 	%r4652, %r4646, %r4645, 25;
	mov.b64 	%rd5124, {%r4652, %r4651};
	xor.b64  	%rd5125, %rd5123, %rd5124;
	xor.b64  	%rd5126, %rd6951, %rd6953;
	xor.b64  	%rd5127, %rd6951, %rd6952;
	and.b64  	%rd5128, %rd5127, %rd5126;
	xor.b64  	%rd5129, %rd5128, %rd6951;
	add.s64 	%rd5130, %rd5120, %rd5129;
	add.s64 	%rd6950, %rd5130, %rd5125;
	mov.u32 	%r11837, 16;

BB5_683:
	shr.u64 	%rd5131, %rd6943, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4653,%dummy}, %rd6943;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4654}, %rd6943;
	}
	shf.r.wrap.b32 	%r4655, %r4654, %r4653, 19;
	shf.r.wrap.b32 	%r4656, %r4653, %r4654, 19;
	mov.b64 	%rd5132, {%r4656, %r4655};
	xor.b64  	%rd5133, %rd5132, %rd5131;
	shf.l.wrap.b32 	%r4657, %r4653, %r4654, 3;
	shf.l.wrap.b32 	%r4658, %r4654, %r4653, 3;
	mov.b64 	%rd5134, {%r4658, %r4657};
	xor.b64  	%rd5135, %rd5133, %rd5134;
	shr.u64 	%rd5136, %rd6959, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4659,%dummy}, %rd6959;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4660}, %rd6959;
	}
	shf.r.wrap.b32 	%r4661, %r4660, %r4659, 1;
	shf.r.wrap.b32 	%r4662, %r4659, %r4660, 1;
	mov.b64 	%rd5137, {%r4662, %r4661};
	xor.b64  	%rd5138, %rd5137, %rd5136;
	shf.r.wrap.b32 	%r4663, %r4660, %r4659, 8;
	shf.r.wrap.b32 	%r4664, %r4659, %r4660, 8;
	mov.b64 	%rd5139, {%r4664, %r4663};
	xor.b64  	%rd5140, %rd5138, %rd5139;
	add.s64 	%rd5141, %rd6948, %rd6958;
	add.s64 	%rd5142, %rd5141, %rd5135;
	add.s64 	%rd6958, %rd5142, %rd5140;
	shr.u64 	%rd5143, %rd6942, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4665,%dummy}, %rd6942;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4666}, %rd6942;
	}
	shf.r.wrap.b32 	%r4667, %r4666, %r4665, 19;
	shf.r.wrap.b32 	%r4668, %r4665, %r4666, 19;
	mov.b64 	%rd5144, {%r4668, %r4667};
	xor.b64  	%rd5145, %rd5144, %rd5143;
	shf.l.wrap.b32 	%r4669, %r4665, %r4666, 3;
	shf.l.wrap.b32 	%r4670, %r4666, %r4665, 3;
	mov.b64 	%rd5146, {%r4670, %r4669};
	xor.b64  	%rd5147, %rd5145, %rd5146;
	shr.u64 	%rd5148, %rd6960, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4671,%dummy}, %rd6960;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4672}, %rd6960;
	}
	shf.r.wrap.b32 	%r4673, %r4672, %r4671, 1;
	shf.r.wrap.b32 	%r4674, %r4671, %r4672, 1;
	mov.b64 	%rd5149, {%r4674, %r4673};
	xor.b64  	%rd5150, %rd5149, %rd5148;
	shf.r.wrap.b32 	%r4675, %r4672, %r4671, 8;
	shf.r.wrap.b32 	%r4676, %r4671, %r4672, 8;
	mov.b64 	%rd5151, {%r4676, %r4675};
	xor.b64  	%rd5152, %rd5150, %rd5151;
	add.s64 	%rd5153, %rd6947, %rd6959;
	add.s64 	%rd5154, %rd5153, %rd5147;
	add.s64 	%rd6959, %rd5154, %rd5152;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4677,%dummy}, %rd6958;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4678}, %rd6958;
	}
	shf.r.wrap.b32 	%r4679, %r4678, %r4677, 19;
	shf.r.wrap.b32 	%r4680, %r4677, %r4678, 19;
	mov.b64 	%rd5155, {%r4680, %r4679};
	shf.l.wrap.b32 	%r4681, %r4677, %r4678, 3;
	shf.l.wrap.b32 	%r4682, %r4678, %r4677, 3;
	mov.b64 	%rd5156, {%r4682, %r4681};
	shr.u64 	%rd5157, %rd6958, 6;
	xor.b64  	%rd5158, %rd5155, %rd5157;
	xor.b64  	%rd5159, %rd5158, %rd5156;
	shr.u64 	%rd5160, %rd6961, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4683,%dummy}, %rd6961;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4684}, %rd6961;
	}
	shf.r.wrap.b32 	%r4685, %r4684, %r4683, 1;
	shf.r.wrap.b32 	%r4686, %r4683, %r4684, 1;
	mov.b64 	%rd5161, {%r4686, %r4685};
	xor.b64  	%rd5162, %rd5161, %rd5160;
	shf.r.wrap.b32 	%r4687, %r4684, %r4683, 8;
	shf.r.wrap.b32 	%r4688, %r4683, %r4684, 8;
	mov.b64 	%rd5163, {%r4688, %r4687};
	xor.b64  	%rd5164, %rd5162, %rd5163;
	add.s64 	%rd5165, %rd6946, %rd6960;
	add.s64 	%rd5166, %rd5165, %rd5159;
	add.s64 	%rd6960, %rd5166, %rd5164;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4689,%dummy}, %rd6959;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4690}, %rd6959;
	}
	shf.r.wrap.b32 	%r4691, %r4690, %r4689, 19;
	shf.r.wrap.b32 	%r4692, %r4689, %r4690, 19;
	mov.b64 	%rd5167, {%r4692, %r4691};
	shf.l.wrap.b32 	%r4693, %r4689, %r4690, 3;
	shf.l.wrap.b32 	%r4694, %r4690, %r4689, 3;
	mov.b64 	%rd5168, {%r4694, %r4693};
	shr.u64 	%rd5169, %rd6959, 6;
	xor.b64  	%rd5170, %rd5167, %rd5169;
	xor.b64  	%rd5171, %rd5170, %rd5168;
	shr.u64 	%rd5172, %rd6962, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4695,%dummy}, %rd6962;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4696}, %rd6962;
	}
	shf.r.wrap.b32 	%r4697, %r4696, %r4695, 1;
	shf.r.wrap.b32 	%r4698, %r4695, %r4696, 1;
	mov.b64 	%rd5173, {%r4698, %r4697};
	xor.b64  	%rd5174, %rd5173, %rd5172;
	shf.r.wrap.b32 	%r4699, %r4696, %r4695, 8;
	shf.r.wrap.b32 	%r4700, %r4695, %r4696, 8;
	mov.b64 	%rd5175, {%r4700, %r4699};
	xor.b64  	%rd5176, %rd5174, %rd5175;
	add.s64 	%rd5177, %rd6945, %rd6961;
	add.s64 	%rd5178, %rd5177, %rd5171;
	add.s64 	%rd6961, %rd5178, %rd5176;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4701,%dummy}, %rd6960;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4702}, %rd6960;
	}
	shf.r.wrap.b32 	%r4703, %r4702, %r4701, 19;
	shf.r.wrap.b32 	%r4704, %r4701, %r4702, 19;
	mov.b64 	%rd5179, {%r4704, %r4703};
	shf.l.wrap.b32 	%r4705, %r4701, %r4702, 3;
	shf.l.wrap.b32 	%r4706, %r4702, %r4701, 3;
	mov.b64 	%rd5180, {%r4706, %r4705};
	shr.u64 	%rd5181, %rd6960, 6;
	xor.b64  	%rd5182, %rd5179, %rd5181;
	xor.b64  	%rd5183, %rd5182, %rd5180;
	shr.u64 	%rd5184, %rd6963, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4707,%dummy}, %rd6963;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4708}, %rd6963;
	}
	shf.r.wrap.b32 	%r4709, %r4708, %r4707, 1;
	shf.r.wrap.b32 	%r4710, %r4707, %r4708, 1;
	mov.b64 	%rd5185, {%r4710, %r4709};
	xor.b64  	%rd5186, %rd5185, %rd5184;
	shf.r.wrap.b32 	%r4711, %r4708, %r4707, 8;
	shf.r.wrap.b32 	%r4712, %r4707, %r4708, 8;
	mov.b64 	%rd5187, {%r4712, %r4711};
	xor.b64  	%rd5188, %rd5186, %rd5187;
	add.s64 	%rd5189, %rd6944, %rd6962;
	add.s64 	%rd5190, %rd5189, %rd5183;
	add.s64 	%rd6962, %rd5190, %rd5188;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4713,%dummy}, %rd6961;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4714}, %rd6961;
	}
	shf.r.wrap.b32 	%r4715, %r4714, %r4713, 19;
	shf.r.wrap.b32 	%r4716, %r4713, %r4714, 19;
	mov.b64 	%rd5191, {%r4716, %r4715};
	shf.l.wrap.b32 	%r4717, %r4713, %r4714, 3;
	shf.l.wrap.b32 	%r4718, %r4714, %r4713, 3;
	mov.b64 	%rd5192, {%r4718, %r4717};
	shr.u64 	%rd5193, %rd6961, 6;
	xor.b64  	%rd5194, %rd5191, %rd5193;
	xor.b64  	%rd5195, %rd5194, %rd5192;
	shr.u64 	%rd5196, %rd6964, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4719,%dummy}, %rd6964;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4720}, %rd6964;
	}
	shf.r.wrap.b32 	%r4721, %r4720, %r4719, 1;
	shf.r.wrap.b32 	%r4722, %r4719, %r4720, 1;
	mov.b64 	%rd5197, {%r4722, %r4721};
	xor.b64  	%rd5198, %rd5197, %rd5196;
	shf.r.wrap.b32 	%r4723, %r4720, %r4719, 8;
	shf.r.wrap.b32 	%r4724, %r4719, %r4720, 8;
	mov.b64 	%rd5199, {%r4724, %r4723};
	xor.b64  	%rd5200, %rd5198, %rd5199;
	add.s64 	%rd5201, %rd6943, %rd6963;
	add.s64 	%rd5202, %rd5201, %rd5195;
	add.s64 	%rd6963, %rd5202, %rd5200;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4725,%dummy}, %rd6962;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4726}, %rd6962;
	}
	shf.r.wrap.b32 	%r4727, %r4726, %r4725, 19;
	shf.r.wrap.b32 	%r4728, %r4725, %r4726, 19;
	mov.b64 	%rd5203, {%r4728, %r4727};
	shf.l.wrap.b32 	%r4729, %r4725, %r4726, 3;
	shf.l.wrap.b32 	%r4730, %r4726, %r4725, 3;
	mov.b64 	%rd5204, {%r4730, %r4729};
	shr.u64 	%rd5205, %rd6962, 6;
	xor.b64  	%rd5206, %rd5203, %rd5205;
	xor.b64  	%rd5207, %rd5206, %rd5204;
	shr.u64 	%rd5208, %rd6965, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4731,%dummy}, %rd6965;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4732}, %rd6965;
	}
	shf.r.wrap.b32 	%r4733, %r4732, %r4731, 1;
	shf.r.wrap.b32 	%r4734, %r4731, %r4732, 1;
	mov.b64 	%rd5209, {%r4734, %r4733};
	xor.b64  	%rd5210, %rd5209, %rd5208;
	shf.r.wrap.b32 	%r4735, %r4732, %r4731, 8;
	shf.r.wrap.b32 	%r4736, %r4731, %r4732, 8;
	mov.b64 	%rd5211, {%r4736, %r4735};
	xor.b64  	%rd5212, %rd5210, %rd5211;
	add.s64 	%rd5213, %rd6942, %rd6964;
	add.s64 	%rd5214, %rd5213, %rd5207;
	add.s64 	%rd6964, %rd5214, %rd5212;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4737,%dummy}, %rd6963;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4738}, %rd6963;
	}
	shf.r.wrap.b32 	%r4739, %r4738, %r4737, 19;
	shf.r.wrap.b32 	%r4740, %r4737, %r4738, 19;
	mov.b64 	%rd5215, {%r4740, %r4739};
	shf.l.wrap.b32 	%r4741, %r4737, %r4738, 3;
	shf.l.wrap.b32 	%r4742, %r4738, %r4737, 3;
	mov.b64 	%rd5216, {%r4742, %r4741};
	shr.u64 	%rd5217, %rd6963, 6;
	xor.b64  	%rd5218, %rd5215, %rd5217;
	xor.b64  	%rd5219, %rd5218, %rd5216;
	shr.u64 	%rd5220, %rd6949, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4743,%dummy}, %rd6949;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4744}, %rd6949;
	}
	shf.r.wrap.b32 	%r4745, %r4744, %r4743, 1;
	shf.r.wrap.b32 	%r4746, %r4743, %r4744, 1;
	mov.b64 	%rd5221, {%r4746, %r4745};
	xor.b64  	%rd5222, %rd5221, %rd5220;
	shf.r.wrap.b32 	%r4747, %r4744, %r4743, 8;
	shf.r.wrap.b32 	%r4748, %r4743, %r4744, 8;
	mov.b64 	%rd5223, {%r4748, %r4747};
	xor.b64  	%rd5224, %rd5222, %rd5223;
	add.s64 	%rd5225, %rd6958, %rd6965;
	add.s64 	%rd5226, %rd5225, %rd5219;
	add.s64 	%rd6965, %rd5226, %rd5224;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4749,%dummy}, %rd6964;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4750}, %rd6964;
	}
	shf.r.wrap.b32 	%r4751, %r4750, %r4749, 19;
	shf.r.wrap.b32 	%r4752, %r4749, %r4750, 19;
	mov.b64 	%rd5227, {%r4752, %r4751};
	shf.l.wrap.b32 	%r4753, %r4749, %r4750, 3;
	shf.l.wrap.b32 	%r4754, %r4750, %r4749, 3;
	mov.b64 	%rd5228, {%r4754, %r4753};
	shr.u64 	%rd5229, %rd6964, 6;
	xor.b64  	%rd5230, %rd5227, %rd5229;
	xor.b64  	%rd5231, %rd5230, %rd5228;
	shr.u64 	%rd5232, %rd6948, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4755,%dummy}, %rd6948;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4756}, %rd6948;
	}
	shf.r.wrap.b32 	%r4757, %r4756, %r4755, 1;
	shf.r.wrap.b32 	%r4758, %r4755, %r4756, 1;
	mov.b64 	%rd5233, {%r4758, %r4757};
	xor.b64  	%rd5234, %rd5233, %rd5232;
	shf.r.wrap.b32 	%r4759, %r4756, %r4755, 8;
	shf.r.wrap.b32 	%r4760, %r4755, %r4756, 8;
	mov.b64 	%rd5235, {%r4760, %r4759};
	xor.b64  	%rd5236, %rd5234, %rd5235;
	add.s64 	%rd5237, %rd6959, %rd6949;
	add.s64 	%rd5238, %rd5237, %rd5231;
	add.s64 	%rd6949, %rd5238, %rd5236;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4761,%dummy}, %rd6965;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4762}, %rd6965;
	}
	shf.r.wrap.b32 	%r4763, %r4762, %r4761, 19;
	shf.r.wrap.b32 	%r4764, %r4761, %r4762, 19;
	mov.b64 	%rd5239, {%r4764, %r4763};
	shf.l.wrap.b32 	%r4765, %r4761, %r4762, 3;
	shf.l.wrap.b32 	%r4766, %r4762, %r4761, 3;
	mov.b64 	%rd5240, {%r4766, %r4765};
	shr.u64 	%rd5241, %rd6965, 6;
	xor.b64  	%rd5242, %rd5239, %rd5241;
	xor.b64  	%rd5243, %rd5242, %rd5240;
	shr.u64 	%rd5244, %rd6947, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4767,%dummy}, %rd6947;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4768}, %rd6947;
	}
	shf.r.wrap.b32 	%r4769, %r4768, %r4767, 1;
	shf.r.wrap.b32 	%r4770, %r4767, %r4768, 1;
	mov.b64 	%rd5245, {%r4770, %r4769};
	xor.b64  	%rd5246, %rd5245, %rd5244;
	shf.r.wrap.b32 	%r4771, %r4768, %r4767, 8;
	shf.r.wrap.b32 	%r4772, %r4767, %r4768, 8;
	mov.b64 	%rd5247, {%r4772, %r4771};
	xor.b64  	%rd5248, %rd5246, %rd5247;
	add.s64 	%rd5249, %rd6960, %rd6948;
	add.s64 	%rd5250, %rd5249, %rd5243;
	add.s64 	%rd6948, %rd5250, %rd5248;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4773,%dummy}, %rd6949;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4774}, %rd6949;
	}
	shf.r.wrap.b32 	%r4775, %r4774, %r4773, 19;
	shf.r.wrap.b32 	%r4776, %r4773, %r4774, 19;
	mov.b64 	%rd5251, {%r4776, %r4775};
	shf.l.wrap.b32 	%r4777, %r4773, %r4774, 3;
	shf.l.wrap.b32 	%r4778, %r4774, %r4773, 3;
	mov.b64 	%rd5252, {%r4778, %r4777};
	shr.u64 	%rd5253, %rd6949, 6;
	xor.b64  	%rd5254, %rd5251, %rd5253;
	xor.b64  	%rd5255, %rd5254, %rd5252;
	shr.u64 	%rd5256, %rd6946, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4779,%dummy}, %rd6946;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4780}, %rd6946;
	}
	shf.r.wrap.b32 	%r4781, %r4780, %r4779, 1;
	shf.r.wrap.b32 	%r4782, %r4779, %r4780, 1;
	mov.b64 	%rd5257, {%r4782, %r4781};
	xor.b64  	%rd5258, %rd5257, %rd5256;
	shf.r.wrap.b32 	%r4783, %r4780, %r4779, 8;
	shf.r.wrap.b32 	%r4784, %r4779, %r4780, 8;
	mov.b64 	%rd5259, {%r4784, %r4783};
	xor.b64  	%rd5260, %rd5258, %rd5259;
	add.s64 	%rd5261, %rd6961, %rd6947;
	add.s64 	%rd5262, %rd5261, %rd5255;
	add.s64 	%rd6947, %rd5262, %rd5260;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4785,%dummy}, %rd6948;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4786}, %rd6948;
	}
	shf.r.wrap.b32 	%r4787, %r4786, %r4785, 19;
	shf.r.wrap.b32 	%r4788, %r4785, %r4786, 19;
	mov.b64 	%rd5263, {%r4788, %r4787};
	shf.l.wrap.b32 	%r4789, %r4785, %r4786, 3;
	shf.l.wrap.b32 	%r4790, %r4786, %r4785, 3;
	mov.b64 	%rd5264, {%r4790, %r4789};
	shr.u64 	%rd5265, %rd6948, 6;
	xor.b64  	%rd5266, %rd5263, %rd5265;
	xor.b64  	%rd5267, %rd5266, %rd5264;
	shr.u64 	%rd5268, %rd6945, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4791,%dummy}, %rd6945;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4792}, %rd6945;
	}
	shf.r.wrap.b32 	%r4793, %r4792, %r4791, 1;
	shf.r.wrap.b32 	%r4794, %r4791, %r4792, 1;
	mov.b64 	%rd5269, {%r4794, %r4793};
	xor.b64  	%rd5270, %rd5269, %rd5268;
	shf.r.wrap.b32 	%r4795, %r4792, %r4791, 8;
	shf.r.wrap.b32 	%r4796, %r4791, %r4792, 8;
	mov.b64 	%rd5271, {%r4796, %r4795};
	xor.b64  	%rd5272, %rd5270, %rd5271;
	add.s64 	%rd5273, %rd6962, %rd6946;
	add.s64 	%rd5274, %rd5273, %rd5267;
	add.s64 	%rd6946, %rd5274, %rd5272;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4797,%dummy}, %rd6947;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4798}, %rd6947;
	}
	shf.r.wrap.b32 	%r4799, %r4798, %r4797, 19;
	shf.r.wrap.b32 	%r4800, %r4797, %r4798, 19;
	mov.b64 	%rd5275, {%r4800, %r4799};
	shf.l.wrap.b32 	%r4801, %r4797, %r4798, 3;
	shf.l.wrap.b32 	%r4802, %r4798, %r4797, 3;
	mov.b64 	%rd5276, {%r4802, %r4801};
	shr.u64 	%rd5277, %rd6947, 6;
	xor.b64  	%rd5278, %rd5275, %rd5277;
	xor.b64  	%rd5279, %rd5278, %rd5276;
	shr.u64 	%rd5280, %rd6944, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4803,%dummy}, %rd6944;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4804}, %rd6944;
	}
	shf.r.wrap.b32 	%r4805, %r4804, %r4803, 1;
	shf.r.wrap.b32 	%r4806, %r4803, %r4804, 1;
	mov.b64 	%rd5281, {%r4806, %r4805};
	xor.b64  	%rd5282, %rd5281, %rd5280;
	shf.r.wrap.b32 	%r4807, %r4804, %r4803, 8;
	shf.r.wrap.b32 	%r4808, %r4803, %r4804, 8;
	mov.b64 	%rd5283, {%r4808, %r4807};
	xor.b64  	%rd5284, %rd5282, %rd5283;
	add.s64 	%rd5285, %rd6963, %rd6945;
	add.s64 	%rd5286, %rd5285, %rd5279;
	add.s64 	%rd6945, %rd5286, %rd5284;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4809,%dummy}, %rd6946;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4810}, %rd6946;
	}
	shf.r.wrap.b32 	%r4811, %r4810, %r4809, 19;
	shf.r.wrap.b32 	%r4812, %r4809, %r4810, 19;
	mov.b64 	%rd5287, {%r4812, %r4811};
	shf.l.wrap.b32 	%r4813, %r4809, %r4810, 3;
	shf.l.wrap.b32 	%r4814, %r4810, %r4809, 3;
	mov.b64 	%rd5288, {%r4814, %r4813};
	shr.u64 	%rd5289, %rd6946, 6;
	xor.b64  	%rd5290, %rd5287, %rd5289;
	xor.b64  	%rd5291, %rd5290, %rd5288;
	shr.u64 	%rd5292, %rd6943, 7;
	shf.r.wrap.b32 	%r4815, %r4654, %r4653, 1;
	shf.r.wrap.b32 	%r4816, %r4653, %r4654, 1;
	mov.b64 	%rd5293, {%r4816, %r4815};
	xor.b64  	%rd5294, %rd5293, %rd5292;
	shf.r.wrap.b32 	%r4817, %r4654, %r4653, 8;
	shf.r.wrap.b32 	%r4818, %r4653, %r4654, 8;
	mov.b64 	%rd5295, {%r4818, %r4817};
	xor.b64  	%rd5296, %rd5294, %rd5295;
	add.s64 	%rd5297, %rd6964, %rd6944;
	add.s64 	%rd5298, %rd5297, %rd5291;
	add.s64 	%rd6944, %rd5298, %rd5296;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4819,%dummy}, %rd6945;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4820}, %rd6945;
	}
	shf.r.wrap.b32 	%r4821, %r4820, %r4819, 19;
	shf.r.wrap.b32 	%r4822, %r4819, %r4820, 19;
	mov.b64 	%rd5299, {%r4822, %r4821};
	shf.l.wrap.b32 	%r4823, %r4819, %r4820, 3;
	shf.l.wrap.b32 	%r4824, %r4820, %r4819, 3;
	mov.b64 	%rd5300, {%r4824, %r4823};
	shr.u64 	%rd5301, %rd6945, 6;
	xor.b64  	%rd5302, %rd5299, %rd5301;
	xor.b64  	%rd5303, %rd5302, %rd5300;
	shr.u64 	%rd5304, %rd6942, 7;
	shf.r.wrap.b32 	%r4825, %r4666, %r4665, 1;
	shf.r.wrap.b32 	%r4826, %r4665, %r4666, 1;
	mov.b64 	%rd5305, {%r4826, %r4825};
	xor.b64  	%rd5306, %rd5305, %rd5304;
	shf.r.wrap.b32 	%r4827, %r4666, %r4665, 8;
	shf.r.wrap.b32 	%r4828, %r4665, %r4666, 8;
	mov.b64 	%rd5307, {%r4828, %r4827};
	xor.b64  	%rd5308, %rd5306, %rd5307;
	add.s64 	%rd5309, %rd6965, %rd6943;
	add.s64 	%rd5310, %rd5309, %rd5303;
	add.s64 	%rd6943, %rd5310, %rd5308;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4829,%dummy}, %rd6944;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4830}, %rd6944;
	}
	shf.r.wrap.b32 	%r4831, %r4830, %r4829, 19;
	shf.r.wrap.b32 	%r4832, %r4829, %r4830, 19;
	mov.b64 	%rd5311, {%r4832, %r4831};
	shf.l.wrap.b32 	%r4833, %r4829, %r4830, 3;
	shf.l.wrap.b32 	%r4834, %r4830, %r4829, 3;
	mov.b64 	%rd5312, {%r4834, %r4833};
	shr.u64 	%rd5313, %rd6944, 6;
	xor.b64  	%rd5314, %rd5311, %rd5313;
	xor.b64  	%rd5315, %rd5314, %rd5312;
	shf.r.wrap.b32 	%r4835, %r4678, %r4677, 1;
	shf.r.wrap.b32 	%r4836, %r4677, %r4678, 1;
	mov.b64 	%rd5316, {%r4836, %r4835};
	shf.r.wrap.b32 	%r4837, %r4678, %r4677, 8;
	shf.r.wrap.b32 	%r4838, %r4677, %r4678, 8;
	mov.b64 	%rd5317, {%r4838, %r4837};
	shr.u64 	%rd5318, %rd6958, 7;
	xor.b64  	%rd5319, %rd5316, %rd5318;
	xor.b64  	%rd5320, %rd5319, %rd5317;
	add.s64 	%rd5321, %rd6949, %rd6942;
	add.s64 	%rd5322, %rd5321, %rd5315;
	add.s64 	%rd6942, %rd5322, %rd5320;
	mul.wide.s32 	%rd5323, %r11837, 8;
	add.s64 	%rd5325, %rd2329, %rd5323;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4839,%dummy}, %rd6954;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4840}, %rd6954;
	}
	shf.r.wrap.b32 	%r4841, %r4840, %r4839, 18;
	shf.r.wrap.b32 	%r4842, %r4839, %r4840, 18;
	mov.b64 	%rd5326, {%r4842, %r4841};
	shf.r.wrap.b32 	%r4843, %r4840, %r4839, 14;
	shf.r.wrap.b32 	%r4844, %r4839, %r4840, 14;
	mov.b64 	%rd5327, {%r4844, %r4843};
	xor.b64  	%rd5328, %rd5326, %rd5327;
	shf.l.wrap.b32 	%r4845, %r4839, %r4840, 23;
	shf.l.wrap.b32 	%r4846, %r4840, %r4839, 23;
	mov.b64 	%rd5329, {%r4846, %r4845};
	xor.b64  	%rd5330, %rd5328, %rd5329;
	xor.b64  	%rd5331, %rd6955, %rd6956;
	and.b64  	%rd5332, %rd5331, %rd6954;
	xor.b64  	%rd5333, %rd5332, %rd6956;
	add.s64 	%rd5334, %rd5333, %rd6957;
	add.s64 	%rd5335, %rd5334, %rd6958;
	ld.const.u64 	%rd5336, [%rd5325];
	add.s64 	%rd5337, %rd5335, %rd5336;
	add.s64 	%rd5338, %rd5337, %rd5330;
	add.s64 	%rd5339, %rd5338, %rd6953;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4847}, %rd6950;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4848,%dummy}, %rd6950;
	}
	shf.l.wrap.b32 	%r4849, %r4848, %r4847, 30;
	shf.l.wrap.b32 	%r4850, %r4847, %r4848, 30;
	mov.b64 	%rd5340, {%r4850, %r4849};
	shf.r.wrap.b32 	%r4851, %r4847, %r4848, 28;
	shf.r.wrap.b32 	%r4852, %r4848, %r4847, 28;
	mov.b64 	%rd5341, {%r4852, %r4851};
	xor.b64  	%rd5342, %rd5340, %rd5341;
	shf.l.wrap.b32 	%r4853, %r4848, %r4847, 25;
	shf.l.wrap.b32 	%r4854, %r4847, %r4848, 25;
	mov.b64 	%rd5343, {%r4854, %r4853};
	xor.b64  	%rd5344, %rd5342, %rd5343;
	xor.b64  	%rd5345, %rd6950, %rd6951;
	xor.b64  	%rd5346, %rd6950, %rd6952;
	and.b64  	%rd5347, %rd5345, %rd5346;
	xor.b64  	%rd5348, %rd5347, %rd6950;
	add.s64 	%rd5349, %rd5338, %rd5348;
	add.s64 	%rd5350, %rd5349, %rd5344;
	add.s32 	%r4855, %r11837, 1;
	mul.wide.s32 	%rd5351, %r4855, 8;
	add.s64 	%rd5352, %rd2329, %rd5351;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4856,%dummy}, %rd5339;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4857}, %rd5339;
	}
	shf.r.wrap.b32 	%r4858, %r4857, %r4856, 14;
	shf.r.wrap.b32 	%r4859, %r4856, %r4857, 14;
	mov.b64 	%rd5353, {%r4859, %r4858};
	shf.r.wrap.b32 	%r4860, %r4857, %r4856, 18;
	shf.r.wrap.b32 	%r4861, %r4856, %r4857, 18;
	mov.b64 	%rd5354, {%r4861, %r4860};
	xor.b64  	%rd5355, %rd5354, %rd5353;
	shf.l.wrap.b32 	%r4862, %r4856, %r4857, 23;
	shf.l.wrap.b32 	%r4863, %r4857, %r4856, 23;
	mov.b64 	%rd5356, {%r4863, %r4862};
	xor.b64  	%rd5357, %rd5355, %rd5356;
	xor.b64  	%rd5358, %rd6954, %rd6955;
	and.b64  	%rd5359, %rd5339, %rd5358;
	xor.b64  	%rd5360, %rd5359, %rd6955;
	add.s64 	%rd5361, %rd6959, %rd6956;
	ld.const.u64 	%rd5362, [%rd5352];
	add.s64 	%rd5363, %rd5361, %rd5362;
	add.s64 	%rd5364, %rd5363, %rd5360;
	add.s64 	%rd5365, %rd5364, %rd5357;
	add.s64 	%rd5366, %rd5365, %rd6952;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4864,%dummy}, %rd5350;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4865}, %rd5350;
	}
	shf.r.wrap.b32 	%r4866, %r4865, %r4864, 28;
	shf.r.wrap.b32 	%r4867, %r4864, %r4865, 28;
	mov.b64 	%rd5367, {%r4867, %r4866};
	shf.l.wrap.b32 	%r4868, %r4864, %r4865, 30;
	shf.l.wrap.b32 	%r4869, %r4865, %r4864, 30;
	mov.b64 	%rd5368, {%r4869, %r4868};
	xor.b64  	%rd5369, %rd5368, %rd5367;
	shf.l.wrap.b32 	%r4870, %r4864, %r4865, 25;
	shf.l.wrap.b32 	%r4871, %r4865, %r4864, 25;
	mov.b64 	%rd5370, {%r4871, %r4870};
	xor.b64  	%rd5371, %rd5369, %rd5370;
	xor.b64  	%rd5372, %rd5350, %rd6951;
	xor.b64  	%rd5373, %rd5350, %rd6950;
	and.b64  	%rd5374, %rd5373, %rd5372;
	xor.b64  	%rd5375, %rd5374, %rd5350;
	add.s64 	%rd5376, %rd5365, %rd5375;
	add.s64 	%rd5377, %rd5376, %rd5371;
	add.s32 	%r4872, %r11837, 2;
	mul.wide.s32 	%rd5378, %r4872, 8;
	add.s64 	%rd5379, %rd2329, %rd5378;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4873,%dummy}, %rd5366;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4874}, %rd5366;
	}
	shf.r.wrap.b32 	%r4875, %r4874, %r4873, 14;
	shf.r.wrap.b32 	%r4876, %r4873, %r4874, 14;
	mov.b64 	%rd5380, {%r4876, %r4875};
	shf.r.wrap.b32 	%r4877, %r4874, %r4873, 18;
	shf.r.wrap.b32 	%r4878, %r4873, %r4874, 18;
	mov.b64 	%rd5381, {%r4878, %r4877};
	xor.b64  	%rd5382, %rd5381, %rd5380;
	shf.l.wrap.b32 	%r4879, %r4873, %r4874, 23;
	shf.l.wrap.b32 	%r4880, %r4874, %r4873, 23;
	mov.b64 	%rd5383, {%r4880, %r4879};
	xor.b64  	%rd5384, %rd5382, %rd5383;
	xor.b64  	%rd5385, %rd5339, %rd6954;
	and.b64  	%rd5386, %rd5366, %rd5385;
	xor.b64  	%rd5387, %rd5386, %rd6954;
	add.s64 	%rd5388, %rd6960, %rd6955;
	ld.const.u64 	%rd5389, [%rd5379];
	add.s64 	%rd5390, %rd5388, %rd5389;
	add.s64 	%rd5391, %rd5390, %rd5387;
	add.s64 	%rd5392, %rd5391, %rd5384;
	add.s64 	%rd5393, %rd5392, %rd6951;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4881,%dummy}, %rd5377;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4882}, %rd5377;
	}
	shf.r.wrap.b32 	%r4883, %r4882, %r4881, 28;
	shf.r.wrap.b32 	%r4884, %r4881, %r4882, 28;
	mov.b64 	%rd5394, {%r4884, %r4883};
	shf.l.wrap.b32 	%r4885, %r4881, %r4882, 30;
	shf.l.wrap.b32 	%r4886, %r4882, %r4881, 30;
	mov.b64 	%rd5395, {%r4886, %r4885};
	xor.b64  	%rd5396, %rd5395, %rd5394;
	shf.l.wrap.b32 	%r4887, %r4881, %r4882, 25;
	shf.l.wrap.b32 	%r4888, %r4882, %r4881, 25;
	mov.b64 	%rd5397, {%r4888, %r4887};
	xor.b64  	%rd5398, %rd5396, %rd5397;
	xor.b64  	%rd5399, %rd5377, %rd6950;
	xor.b64  	%rd5400, %rd5377, %rd5350;
	and.b64  	%rd5401, %rd5400, %rd5399;
	xor.b64  	%rd5402, %rd5401, %rd5377;
	add.s64 	%rd5403, %rd5392, %rd5402;
	add.s64 	%rd5404, %rd5403, %rd5398;
	add.s32 	%r4889, %r11837, 3;
	mul.wide.s32 	%rd5405, %r4889, 8;
	add.s64 	%rd5406, %rd2329, %rd5405;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4890,%dummy}, %rd5393;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4891}, %rd5393;
	}
	shf.r.wrap.b32 	%r4892, %r4891, %r4890, 14;
	shf.r.wrap.b32 	%r4893, %r4890, %r4891, 14;
	mov.b64 	%rd5407, {%r4893, %r4892};
	shf.r.wrap.b32 	%r4894, %r4891, %r4890, 18;
	shf.r.wrap.b32 	%r4895, %r4890, %r4891, 18;
	mov.b64 	%rd5408, {%r4895, %r4894};
	xor.b64  	%rd5409, %rd5408, %rd5407;
	shf.l.wrap.b32 	%r4896, %r4890, %r4891, 23;
	shf.l.wrap.b32 	%r4897, %r4891, %r4890, 23;
	mov.b64 	%rd5410, {%r4897, %r4896};
	xor.b64  	%rd5411, %rd5409, %rd5410;
	xor.b64  	%rd5412, %rd5366, %rd5339;
	and.b64  	%rd5413, %rd5393, %rd5412;
	xor.b64  	%rd5414, %rd5413, %rd5339;
	add.s64 	%rd5415, %rd6961, %rd6954;
	ld.const.u64 	%rd5416, [%rd5406];
	add.s64 	%rd5417, %rd5415, %rd5416;
	add.s64 	%rd5418, %rd5417, %rd5414;
	add.s64 	%rd5419, %rd5418, %rd5411;
	add.s64 	%rd5420, %rd5419, %rd6950;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4898,%dummy}, %rd5404;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4899}, %rd5404;
	}
	shf.r.wrap.b32 	%r4900, %r4899, %r4898, 28;
	shf.r.wrap.b32 	%r4901, %r4898, %r4899, 28;
	mov.b64 	%rd5421, {%r4901, %r4900};
	shf.l.wrap.b32 	%r4902, %r4898, %r4899, 30;
	shf.l.wrap.b32 	%r4903, %r4899, %r4898, 30;
	mov.b64 	%rd5422, {%r4903, %r4902};
	xor.b64  	%rd5423, %rd5422, %rd5421;
	shf.l.wrap.b32 	%r4904, %r4898, %r4899, 25;
	shf.l.wrap.b32 	%r4905, %r4899, %r4898, 25;
	mov.b64 	%rd5424, {%r4905, %r4904};
	xor.b64  	%rd5425, %rd5423, %rd5424;
	xor.b64  	%rd5426, %rd5404, %rd5350;
	xor.b64  	%rd5427, %rd5404, %rd5377;
	and.b64  	%rd5428, %rd5427, %rd5426;
	xor.b64  	%rd5429, %rd5428, %rd5404;
	add.s64 	%rd5430, %rd5419, %rd5429;
	add.s64 	%rd5431, %rd5430, %rd5425;
	add.s32 	%r4906, %r11837, 4;
	mul.wide.s32 	%rd5432, %r4906, 8;
	add.s64 	%rd5433, %rd2329, %rd5432;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4907,%dummy}, %rd5420;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4908}, %rd5420;
	}
	shf.r.wrap.b32 	%r4909, %r4908, %r4907, 14;
	shf.r.wrap.b32 	%r4910, %r4907, %r4908, 14;
	mov.b64 	%rd5434, {%r4910, %r4909};
	shf.r.wrap.b32 	%r4911, %r4908, %r4907, 18;
	shf.r.wrap.b32 	%r4912, %r4907, %r4908, 18;
	mov.b64 	%rd5435, {%r4912, %r4911};
	xor.b64  	%rd5436, %rd5435, %rd5434;
	shf.l.wrap.b32 	%r4913, %r4907, %r4908, 23;
	shf.l.wrap.b32 	%r4914, %r4908, %r4907, 23;
	mov.b64 	%rd5437, {%r4914, %r4913};
	xor.b64  	%rd5438, %rd5436, %rd5437;
	xor.b64  	%rd5439, %rd5393, %rd5366;
	and.b64  	%rd5440, %rd5420, %rd5439;
	xor.b64  	%rd5441, %rd5440, %rd5366;
	add.s64 	%rd5442, %rd5339, %rd6962;
	ld.const.u64 	%rd5443, [%rd5433];
	add.s64 	%rd5444, %rd5442, %rd5443;
	add.s64 	%rd5445, %rd5444, %rd5441;
	add.s64 	%rd5446, %rd5445, %rd5438;
	add.s64 	%rd5447, %rd5446, %rd5350;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4915,%dummy}, %rd5431;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4916}, %rd5431;
	}
	shf.r.wrap.b32 	%r4917, %r4916, %r4915, 28;
	shf.r.wrap.b32 	%r4918, %r4915, %r4916, 28;
	mov.b64 	%rd5448, {%r4918, %r4917};
	shf.l.wrap.b32 	%r4919, %r4915, %r4916, 30;
	shf.l.wrap.b32 	%r4920, %r4916, %r4915, 30;
	mov.b64 	%rd5449, {%r4920, %r4919};
	xor.b64  	%rd5450, %rd5449, %rd5448;
	shf.l.wrap.b32 	%r4921, %r4915, %r4916, 25;
	shf.l.wrap.b32 	%r4922, %r4916, %r4915, 25;
	mov.b64 	%rd5451, {%r4922, %r4921};
	xor.b64  	%rd5452, %rd5450, %rd5451;
	xor.b64  	%rd5453, %rd5431, %rd5377;
	xor.b64  	%rd5454, %rd5431, %rd5404;
	and.b64  	%rd5455, %rd5454, %rd5453;
	xor.b64  	%rd5456, %rd5455, %rd5431;
	add.s64 	%rd5457, %rd5446, %rd5456;
	add.s64 	%rd5458, %rd5457, %rd5452;
	add.s32 	%r4923, %r11837, 5;
	mul.wide.s32 	%rd5459, %r4923, 8;
	add.s64 	%rd5460, %rd2329, %rd5459;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4924,%dummy}, %rd5447;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4925}, %rd5447;
	}
	shf.r.wrap.b32 	%r4926, %r4925, %r4924, 14;
	shf.r.wrap.b32 	%r4927, %r4924, %r4925, 14;
	mov.b64 	%rd5461, {%r4927, %r4926};
	shf.r.wrap.b32 	%r4928, %r4925, %r4924, 18;
	shf.r.wrap.b32 	%r4929, %r4924, %r4925, 18;
	mov.b64 	%rd5462, {%r4929, %r4928};
	xor.b64  	%rd5463, %rd5462, %rd5461;
	shf.l.wrap.b32 	%r4930, %r4924, %r4925, 23;
	shf.l.wrap.b32 	%r4931, %r4925, %r4924, 23;
	mov.b64 	%rd5464, {%r4931, %r4930};
	xor.b64  	%rd5465, %rd5463, %rd5464;
	xor.b64  	%rd5466, %rd5420, %rd5393;
	and.b64  	%rd5467, %rd5447, %rd5466;
	xor.b64  	%rd5468, %rd5467, %rd5393;
	add.s64 	%rd5469, %rd5366, %rd6963;
	ld.const.u64 	%rd5470, [%rd5460];
	add.s64 	%rd5471, %rd5469, %rd5470;
	add.s64 	%rd5472, %rd5471, %rd5468;
	add.s64 	%rd5473, %rd5472, %rd5465;
	add.s64 	%rd5474, %rd5473, %rd5377;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4932,%dummy}, %rd5458;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4933}, %rd5458;
	}
	shf.r.wrap.b32 	%r4934, %r4933, %r4932, 28;
	shf.r.wrap.b32 	%r4935, %r4932, %r4933, 28;
	mov.b64 	%rd5475, {%r4935, %r4934};
	shf.l.wrap.b32 	%r4936, %r4932, %r4933, 30;
	shf.l.wrap.b32 	%r4937, %r4933, %r4932, 30;
	mov.b64 	%rd5476, {%r4937, %r4936};
	xor.b64  	%rd5477, %rd5476, %rd5475;
	shf.l.wrap.b32 	%r4938, %r4932, %r4933, 25;
	shf.l.wrap.b32 	%r4939, %r4933, %r4932, 25;
	mov.b64 	%rd5478, {%r4939, %r4938};
	xor.b64  	%rd5479, %rd5477, %rd5478;
	xor.b64  	%rd5480, %rd5458, %rd5404;
	xor.b64  	%rd5481, %rd5458, %rd5431;
	and.b64  	%rd5482, %rd5481, %rd5480;
	xor.b64  	%rd5483, %rd5482, %rd5458;
	add.s64 	%rd5484, %rd5473, %rd5483;
	add.s64 	%rd5485, %rd5484, %rd5479;
	add.s32 	%r4940, %r11837, 6;
	mul.wide.s32 	%rd5486, %r4940, 8;
	add.s64 	%rd5487, %rd2329, %rd5486;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4941,%dummy}, %rd5474;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4942}, %rd5474;
	}
	shf.r.wrap.b32 	%r4943, %r4942, %r4941, 14;
	shf.r.wrap.b32 	%r4944, %r4941, %r4942, 14;
	mov.b64 	%rd5488, {%r4944, %r4943};
	shf.r.wrap.b32 	%r4945, %r4942, %r4941, 18;
	shf.r.wrap.b32 	%r4946, %r4941, %r4942, 18;
	mov.b64 	%rd5489, {%r4946, %r4945};
	xor.b64  	%rd5490, %rd5489, %rd5488;
	shf.l.wrap.b32 	%r4947, %r4941, %r4942, 23;
	shf.l.wrap.b32 	%r4948, %r4942, %r4941, 23;
	mov.b64 	%rd5491, {%r4948, %r4947};
	xor.b64  	%rd5492, %rd5490, %rd5491;
	xor.b64  	%rd5493, %rd5447, %rd5420;
	and.b64  	%rd5494, %rd5474, %rd5493;
	xor.b64  	%rd5495, %rd5494, %rd5420;
	add.s64 	%rd5496, %rd5393, %rd6964;
	ld.const.u64 	%rd5497, [%rd5487];
	add.s64 	%rd5498, %rd5496, %rd5497;
	add.s64 	%rd5499, %rd5498, %rd5495;
	add.s64 	%rd5500, %rd5499, %rd5492;
	add.s64 	%rd5501, %rd5500, %rd5404;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4949,%dummy}, %rd5485;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4950}, %rd5485;
	}
	shf.r.wrap.b32 	%r4951, %r4950, %r4949, 28;
	shf.r.wrap.b32 	%r4952, %r4949, %r4950, 28;
	mov.b64 	%rd5502, {%r4952, %r4951};
	shf.l.wrap.b32 	%r4953, %r4949, %r4950, 30;
	shf.l.wrap.b32 	%r4954, %r4950, %r4949, 30;
	mov.b64 	%rd5503, {%r4954, %r4953};
	xor.b64  	%rd5504, %rd5503, %rd5502;
	shf.l.wrap.b32 	%r4955, %r4949, %r4950, 25;
	shf.l.wrap.b32 	%r4956, %r4950, %r4949, 25;
	mov.b64 	%rd5505, {%r4956, %r4955};
	xor.b64  	%rd5506, %rd5504, %rd5505;
	xor.b64  	%rd5507, %rd5485, %rd5431;
	xor.b64  	%rd5508, %rd5485, %rd5458;
	and.b64  	%rd5509, %rd5508, %rd5507;
	xor.b64  	%rd5510, %rd5509, %rd5485;
	add.s64 	%rd5511, %rd5500, %rd5510;
	add.s64 	%rd5512, %rd5511, %rd5506;
	add.s32 	%r4957, %r11837, 7;
	mul.wide.s32 	%rd5513, %r4957, 8;
	add.s64 	%rd5514, %rd2329, %rd5513;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4958,%dummy}, %rd5501;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4959}, %rd5501;
	}
	shf.r.wrap.b32 	%r4960, %r4959, %r4958, 14;
	shf.r.wrap.b32 	%r4961, %r4958, %r4959, 14;
	mov.b64 	%rd5515, {%r4961, %r4960};
	shf.r.wrap.b32 	%r4962, %r4959, %r4958, 18;
	shf.r.wrap.b32 	%r4963, %r4958, %r4959, 18;
	mov.b64 	%rd5516, {%r4963, %r4962};
	xor.b64  	%rd5517, %rd5516, %rd5515;
	shf.l.wrap.b32 	%r4964, %r4958, %r4959, 23;
	shf.l.wrap.b32 	%r4965, %r4959, %r4958, 23;
	mov.b64 	%rd5518, {%r4965, %r4964};
	xor.b64  	%rd5519, %rd5517, %rd5518;
	xor.b64  	%rd5520, %rd5474, %rd5447;
	and.b64  	%rd5521, %rd5501, %rd5520;
	xor.b64  	%rd5522, %rd5521, %rd5447;
	add.s64 	%rd5523, %rd5420, %rd6965;
	ld.const.u64 	%rd5524, [%rd5514];
	add.s64 	%rd5525, %rd5523, %rd5524;
	add.s64 	%rd5526, %rd5525, %rd5522;
	add.s64 	%rd5527, %rd5526, %rd5519;
	add.s64 	%rd5528, %rd5527, %rd5431;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4966,%dummy}, %rd5512;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4967}, %rd5512;
	}
	shf.r.wrap.b32 	%r4968, %r4967, %r4966, 28;
	shf.r.wrap.b32 	%r4969, %r4966, %r4967, 28;
	mov.b64 	%rd5529, {%r4969, %r4968};
	shf.l.wrap.b32 	%r4970, %r4966, %r4967, 30;
	shf.l.wrap.b32 	%r4971, %r4967, %r4966, 30;
	mov.b64 	%rd5530, {%r4971, %r4970};
	xor.b64  	%rd5531, %rd5530, %rd5529;
	shf.l.wrap.b32 	%r4972, %r4966, %r4967, 25;
	shf.l.wrap.b32 	%r4973, %r4967, %r4966, 25;
	mov.b64 	%rd5532, {%r4973, %r4972};
	xor.b64  	%rd5533, %rd5531, %rd5532;
	xor.b64  	%rd5534, %rd5512, %rd5458;
	xor.b64  	%rd5535, %rd5512, %rd5485;
	and.b64  	%rd5536, %rd5535, %rd5534;
	xor.b64  	%rd5537, %rd5536, %rd5512;
	add.s64 	%rd5538, %rd5527, %rd5537;
	add.s64 	%rd5539, %rd5538, %rd5533;
	add.s32 	%r4974, %r11837, 8;
	mul.wide.s32 	%rd5540, %r4974, 8;
	add.s64 	%rd5541, %rd2329, %rd5540;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4975,%dummy}, %rd5528;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4976}, %rd5528;
	}
	shf.r.wrap.b32 	%r4977, %r4976, %r4975, 14;
	shf.r.wrap.b32 	%r4978, %r4975, %r4976, 14;
	mov.b64 	%rd5542, {%r4978, %r4977};
	shf.r.wrap.b32 	%r4979, %r4976, %r4975, 18;
	shf.r.wrap.b32 	%r4980, %r4975, %r4976, 18;
	mov.b64 	%rd5543, {%r4980, %r4979};
	xor.b64  	%rd5544, %rd5543, %rd5542;
	shf.l.wrap.b32 	%r4981, %r4975, %r4976, 23;
	shf.l.wrap.b32 	%r4982, %r4976, %r4975, 23;
	mov.b64 	%rd5545, {%r4982, %r4981};
	xor.b64  	%rd5546, %rd5544, %rd5545;
	xor.b64  	%rd5547, %rd5501, %rd5474;
	and.b64  	%rd5548, %rd5528, %rd5547;
	xor.b64  	%rd5549, %rd5548, %rd5474;
	add.s64 	%rd5550, %rd5447, %rd6949;
	ld.const.u64 	%rd5551, [%rd5541];
	add.s64 	%rd5552, %rd5550, %rd5551;
	add.s64 	%rd5553, %rd5552, %rd5549;
	add.s64 	%rd5554, %rd5553, %rd5546;
	add.s64 	%rd5555, %rd5554, %rd5458;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4983,%dummy}, %rd5539;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4984}, %rd5539;
	}
	shf.r.wrap.b32 	%r4985, %r4984, %r4983, 28;
	shf.r.wrap.b32 	%r4986, %r4983, %r4984, 28;
	mov.b64 	%rd5556, {%r4986, %r4985};
	shf.l.wrap.b32 	%r4987, %r4983, %r4984, 30;
	shf.l.wrap.b32 	%r4988, %r4984, %r4983, 30;
	mov.b64 	%rd5557, {%r4988, %r4987};
	xor.b64  	%rd5558, %rd5557, %rd5556;
	shf.l.wrap.b32 	%r4989, %r4983, %r4984, 25;
	shf.l.wrap.b32 	%r4990, %r4984, %r4983, 25;
	mov.b64 	%rd5559, {%r4990, %r4989};
	xor.b64  	%rd5560, %rd5558, %rd5559;
	xor.b64  	%rd5561, %rd5539, %rd5485;
	xor.b64  	%rd5562, %rd5539, %rd5512;
	and.b64  	%rd5563, %rd5562, %rd5561;
	xor.b64  	%rd5564, %rd5563, %rd5539;
	add.s64 	%rd5565, %rd5554, %rd5564;
	add.s64 	%rd5566, %rd5565, %rd5560;
	add.s32 	%r4991, %r11837, 9;
	mul.wide.s32 	%rd5567, %r4991, 8;
	add.s64 	%rd5568, %rd2329, %rd5567;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r4992,%dummy}, %rd5555;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r4993}, %rd5555;
	}
	shf.r.wrap.b32 	%r4994, %r4993, %r4992, 14;
	shf.r.wrap.b32 	%r4995, %r4992, %r4993, 14;
	mov.b64 	%rd5569, {%r4995, %r4994};
	shf.r.wrap.b32 	%r4996, %r4993, %r4992, 18;
	shf.r.wrap.b32 	%r4997, %r4992, %r4993, 18;
	mov.b64 	%rd5570, {%r4997, %r4996};
	xor.b64  	%rd5571, %rd5570, %rd5569;
	shf.l.wrap.b32 	%r4998, %r4992, %r4993, 23;
	shf.l.wrap.b32 	%r4999, %r4993, %r4992, 23;
	mov.b64 	%rd5572, {%r4999, %r4998};
	xor.b64  	%rd5573, %rd5571, %rd5572;
	xor.b64  	%rd5574, %rd5528, %rd5501;
	and.b64  	%rd5575, %rd5555, %rd5574;
	xor.b64  	%rd5576, %rd5575, %rd5501;
	add.s64 	%rd5577, %rd5474, %rd6948;
	ld.const.u64 	%rd5578, [%rd5568];
	add.s64 	%rd5579, %rd5577, %rd5578;
	add.s64 	%rd5580, %rd5579, %rd5576;
	add.s64 	%rd5581, %rd5580, %rd5573;
	add.s64 	%rd5582, %rd5581, %rd5485;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5000,%dummy}, %rd5566;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5001}, %rd5566;
	}
	shf.r.wrap.b32 	%r5002, %r5001, %r5000, 28;
	shf.r.wrap.b32 	%r5003, %r5000, %r5001, 28;
	mov.b64 	%rd5583, {%r5003, %r5002};
	shf.l.wrap.b32 	%r5004, %r5000, %r5001, 30;
	shf.l.wrap.b32 	%r5005, %r5001, %r5000, 30;
	mov.b64 	%rd5584, {%r5005, %r5004};
	xor.b64  	%rd5585, %rd5584, %rd5583;
	shf.l.wrap.b32 	%r5006, %r5000, %r5001, 25;
	shf.l.wrap.b32 	%r5007, %r5001, %r5000, 25;
	mov.b64 	%rd5586, {%r5007, %r5006};
	xor.b64  	%rd5587, %rd5585, %rd5586;
	xor.b64  	%rd5588, %rd5566, %rd5512;
	xor.b64  	%rd5589, %rd5566, %rd5539;
	and.b64  	%rd5590, %rd5589, %rd5588;
	xor.b64  	%rd5591, %rd5590, %rd5566;
	add.s64 	%rd5592, %rd5581, %rd5591;
	add.s64 	%rd5593, %rd5592, %rd5587;
	add.s32 	%r5008, %r11837, 10;
	mul.wide.s32 	%rd5594, %r5008, 8;
	add.s64 	%rd5595, %rd2329, %rd5594;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5009,%dummy}, %rd5582;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5010}, %rd5582;
	}
	shf.r.wrap.b32 	%r5011, %r5010, %r5009, 14;
	shf.r.wrap.b32 	%r5012, %r5009, %r5010, 14;
	mov.b64 	%rd5596, {%r5012, %r5011};
	shf.r.wrap.b32 	%r5013, %r5010, %r5009, 18;
	shf.r.wrap.b32 	%r5014, %r5009, %r5010, 18;
	mov.b64 	%rd5597, {%r5014, %r5013};
	xor.b64  	%rd5598, %rd5597, %rd5596;
	shf.l.wrap.b32 	%r5015, %r5009, %r5010, 23;
	shf.l.wrap.b32 	%r5016, %r5010, %r5009, 23;
	mov.b64 	%rd5599, {%r5016, %r5015};
	xor.b64  	%rd5600, %rd5598, %rd5599;
	xor.b64  	%rd5601, %rd5555, %rd5528;
	and.b64  	%rd5602, %rd5582, %rd5601;
	xor.b64  	%rd5603, %rd5602, %rd5528;
	add.s64 	%rd5604, %rd5501, %rd6947;
	ld.const.u64 	%rd5605, [%rd5595];
	add.s64 	%rd5606, %rd5604, %rd5605;
	add.s64 	%rd5607, %rd5606, %rd5603;
	add.s64 	%rd5608, %rd5607, %rd5600;
	add.s64 	%rd5609, %rd5608, %rd5512;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5017,%dummy}, %rd5593;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5018}, %rd5593;
	}
	shf.r.wrap.b32 	%r5019, %r5018, %r5017, 28;
	shf.r.wrap.b32 	%r5020, %r5017, %r5018, 28;
	mov.b64 	%rd5610, {%r5020, %r5019};
	shf.l.wrap.b32 	%r5021, %r5017, %r5018, 30;
	shf.l.wrap.b32 	%r5022, %r5018, %r5017, 30;
	mov.b64 	%rd5611, {%r5022, %r5021};
	xor.b64  	%rd5612, %rd5611, %rd5610;
	shf.l.wrap.b32 	%r5023, %r5017, %r5018, 25;
	shf.l.wrap.b32 	%r5024, %r5018, %r5017, 25;
	mov.b64 	%rd5613, {%r5024, %r5023};
	xor.b64  	%rd5614, %rd5612, %rd5613;
	xor.b64  	%rd5615, %rd5593, %rd5539;
	xor.b64  	%rd5616, %rd5593, %rd5566;
	and.b64  	%rd5617, %rd5616, %rd5615;
	xor.b64  	%rd5618, %rd5617, %rd5593;
	add.s64 	%rd5619, %rd5608, %rd5618;
	add.s64 	%rd5620, %rd5619, %rd5614;
	add.s32 	%r5025, %r11837, 11;
	mul.wide.s32 	%rd5621, %r5025, 8;
	add.s64 	%rd5622, %rd2329, %rd5621;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5026,%dummy}, %rd5609;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5027}, %rd5609;
	}
	shf.r.wrap.b32 	%r5028, %r5027, %r5026, 14;
	shf.r.wrap.b32 	%r5029, %r5026, %r5027, 14;
	mov.b64 	%rd5623, {%r5029, %r5028};
	shf.r.wrap.b32 	%r5030, %r5027, %r5026, 18;
	shf.r.wrap.b32 	%r5031, %r5026, %r5027, 18;
	mov.b64 	%rd5624, {%r5031, %r5030};
	xor.b64  	%rd5625, %rd5624, %rd5623;
	shf.l.wrap.b32 	%r5032, %r5026, %r5027, 23;
	shf.l.wrap.b32 	%r5033, %r5027, %r5026, 23;
	mov.b64 	%rd5626, {%r5033, %r5032};
	xor.b64  	%rd5627, %rd5625, %rd5626;
	xor.b64  	%rd5628, %rd5582, %rd5555;
	and.b64  	%rd5629, %rd5609, %rd5628;
	xor.b64  	%rd5630, %rd5629, %rd5555;
	add.s64 	%rd5631, %rd5528, %rd6946;
	ld.const.u64 	%rd5632, [%rd5622];
	add.s64 	%rd5633, %rd5631, %rd5632;
	add.s64 	%rd5634, %rd5633, %rd5630;
	add.s64 	%rd5635, %rd5634, %rd5627;
	add.s64 	%rd5636, %rd5635, %rd5539;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5034,%dummy}, %rd5620;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5035}, %rd5620;
	}
	shf.r.wrap.b32 	%r5036, %r5035, %r5034, 28;
	shf.r.wrap.b32 	%r5037, %r5034, %r5035, 28;
	mov.b64 	%rd5637, {%r5037, %r5036};
	shf.l.wrap.b32 	%r5038, %r5034, %r5035, 30;
	shf.l.wrap.b32 	%r5039, %r5035, %r5034, 30;
	mov.b64 	%rd5638, {%r5039, %r5038};
	xor.b64  	%rd5639, %rd5638, %rd5637;
	shf.l.wrap.b32 	%r5040, %r5034, %r5035, 25;
	shf.l.wrap.b32 	%r5041, %r5035, %r5034, 25;
	mov.b64 	%rd5640, {%r5041, %r5040};
	xor.b64  	%rd5641, %rd5639, %rd5640;
	xor.b64  	%rd5642, %rd5620, %rd5566;
	xor.b64  	%rd5643, %rd5620, %rd5593;
	and.b64  	%rd5644, %rd5643, %rd5642;
	xor.b64  	%rd5645, %rd5644, %rd5620;
	add.s64 	%rd5646, %rd5635, %rd5645;
	add.s64 	%rd5647, %rd5646, %rd5641;
	add.s32 	%r5042, %r11837, 12;
	mul.wide.s32 	%rd5648, %r5042, 8;
	add.s64 	%rd5649, %rd2329, %rd5648;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5043,%dummy}, %rd5636;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5044}, %rd5636;
	}
	shf.r.wrap.b32 	%r5045, %r5044, %r5043, 14;
	shf.r.wrap.b32 	%r5046, %r5043, %r5044, 14;
	mov.b64 	%rd5650, {%r5046, %r5045};
	shf.r.wrap.b32 	%r5047, %r5044, %r5043, 18;
	shf.r.wrap.b32 	%r5048, %r5043, %r5044, 18;
	mov.b64 	%rd5651, {%r5048, %r5047};
	xor.b64  	%rd5652, %rd5651, %rd5650;
	shf.l.wrap.b32 	%r5049, %r5043, %r5044, 23;
	shf.l.wrap.b32 	%r5050, %r5044, %r5043, 23;
	mov.b64 	%rd5653, {%r5050, %r5049};
	xor.b64  	%rd5654, %rd5652, %rd5653;
	xor.b64  	%rd5655, %rd5609, %rd5582;
	and.b64  	%rd5656, %rd5636, %rd5655;
	xor.b64  	%rd5657, %rd5656, %rd5582;
	add.s64 	%rd5658, %rd5555, %rd6945;
	ld.const.u64 	%rd5659, [%rd5649];
	add.s64 	%rd5660, %rd5658, %rd5659;
	add.s64 	%rd5661, %rd5660, %rd5657;
	add.s64 	%rd5662, %rd5661, %rd5654;
	add.s64 	%rd6957, %rd5662, %rd5566;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5051,%dummy}, %rd5647;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5052}, %rd5647;
	}
	shf.r.wrap.b32 	%r5053, %r5052, %r5051, 28;
	shf.r.wrap.b32 	%r5054, %r5051, %r5052, 28;
	mov.b64 	%rd5663, {%r5054, %r5053};
	shf.l.wrap.b32 	%r5055, %r5051, %r5052, 30;
	shf.l.wrap.b32 	%r5056, %r5052, %r5051, 30;
	mov.b64 	%rd5664, {%r5056, %r5055};
	xor.b64  	%rd5665, %rd5664, %rd5663;
	shf.l.wrap.b32 	%r5057, %r5051, %r5052, 25;
	shf.l.wrap.b32 	%r5058, %r5052, %r5051, 25;
	mov.b64 	%rd5666, {%r5058, %r5057};
	xor.b64  	%rd5667, %rd5665, %rd5666;
	xor.b64  	%rd5668, %rd5647, %rd5593;
	xor.b64  	%rd5669, %rd5647, %rd5620;
	and.b64  	%rd5670, %rd5669, %rd5668;
	xor.b64  	%rd5671, %rd5670, %rd5647;
	add.s64 	%rd5672, %rd5662, %rd5671;
	add.s64 	%rd6953, %rd5672, %rd5667;
	add.s32 	%r5059, %r11837, 13;
	mul.wide.s32 	%rd5673, %r5059, 8;
	add.s64 	%rd5674, %rd2329, %rd5673;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5060,%dummy}, %rd6957;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5061}, %rd6957;
	}
	shf.r.wrap.b32 	%r5062, %r5061, %r5060, 14;
	shf.r.wrap.b32 	%r5063, %r5060, %r5061, 14;
	mov.b64 	%rd5675, {%r5063, %r5062};
	shf.r.wrap.b32 	%r5064, %r5061, %r5060, 18;
	shf.r.wrap.b32 	%r5065, %r5060, %r5061, 18;
	mov.b64 	%rd5676, {%r5065, %r5064};
	xor.b64  	%rd5677, %rd5676, %rd5675;
	shf.l.wrap.b32 	%r5066, %r5060, %r5061, 23;
	shf.l.wrap.b32 	%r5067, %r5061, %r5060, 23;
	mov.b64 	%rd5678, {%r5067, %r5066};
	xor.b64  	%rd5679, %rd5677, %rd5678;
	xor.b64  	%rd5680, %rd5636, %rd5609;
	and.b64  	%rd5681, %rd6957, %rd5680;
	xor.b64  	%rd5682, %rd5681, %rd5609;
	add.s64 	%rd5683, %rd5582, %rd6944;
	ld.const.u64 	%rd5684, [%rd5674];
	add.s64 	%rd5685, %rd5683, %rd5684;
	add.s64 	%rd5686, %rd5685, %rd5682;
	add.s64 	%rd5687, %rd5686, %rd5679;
	add.s64 	%rd6956, %rd5687, %rd5593;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5068,%dummy}, %rd6953;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5069}, %rd6953;
	}
	shf.r.wrap.b32 	%r5070, %r5069, %r5068, 28;
	shf.r.wrap.b32 	%r5071, %r5068, %r5069, 28;
	mov.b64 	%rd5688, {%r5071, %r5070};
	shf.l.wrap.b32 	%r5072, %r5068, %r5069, 30;
	shf.l.wrap.b32 	%r5073, %r5069, %r5068, 30;
	mov.b64 	%rd5689, {%r5073, %r5072};
	xor.b64  	%rd5690, %rd5689, %rd5688;
	shf.l.wrap.b32 	%r5074, %r5068, %r5069, 25;
	shf.l.wrap.b32 	%r5075, %r5069, %r5068, 25;
	mov.b64 	%rd5691, {%r5075, %r5074};
	xor.b64  	%rd5692, %rd5690, %rd5691;
	xor.b64  	%rd5693, %rd6953, %rd5620;
	xor.b64  	%rd5694, %rd6953, %rd5647;
	and.b64  	%rd5695, %rd5694, %rd5693;
	xor.b64  	%rd5696, %rd5695, %rd6953;
	add.s64 	%rd5697, %rd5687, %rd5696;
	add.s64 	%rd6952, %rd5697, %rd5692;
	add.s32 	%r5076, %r11837, 14;
	mul.wide.s32 	%rd5698, %r5076, 8;
	add.s64 	%rd5699, %rd2329, %rd5698;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5077,%dummy}, %rd6956;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5078}, %rd6956;
	}
	shf.r.wrap.b32 	%r5079, %r5078, %r5077, 14;
	shf.r.wrap.b32 	%r5080, %r5077, %r5078, 14;
	mov.b64 	%rd5700, {%r5080, %r5079};
	shf.r.wrap.b32 	%r5081, %r5078, %r5077, 18;
	shf.r.wrap.b32 	%r5082, %r5077, %r5078, 18;
	mov.b64 	%rd5701, {%r5082, %r5081};
	xor.b64  	%rd5702, %rd5701, %rd5700;
	shf.l.wrap.b32 	%r5083, %r5077, %r5078, 23;
	shf.l.wrap.b32 	%r5084, %r5078, %r5077, 23;
	mov.b64 	%rd5703, {%r5084, %r5083};
	xor.b64  	%rd5704, %rd5702, %rd5703;
	xor.b64  	%rd5705, %rd6957, %rd5636;
	and.b64  	%rd5706, %rd6956, %rd5705;
	xor.b64  	%rd5707, %rd5706, %rd5636;
	add.s64 	%rd5708, %rd5609, %rd6943;
	ld.const.u64 	%rd5709, [%rd5699];
	add.s64 	%rd5710, %rd5708, %rd5709;
	add.s64 	%rd5711, %rd5710, %rd5707;
	add.s64 	%rd5712, %rd5711, %rd5704;
	add.s64 	%rd6955, %rd5712, %rd5620;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5085,%dummy}, %rd6952;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5086}, %rd6952;
	}
	shf.r.wrap.b32 	%r5087, %r5086, %r5085, 28;
	shf.r.wrap.b32 	%r5088, %r5085, %r5086, 28;
	mov.b64 	%rd5713, {%r5088, %r5087};
	shf.l.wrap.b32 	%r5089, %r5085, %r5086, 30;
	shf.l.wrap.b32 	%r5090, %r5086, %r5085, 30;
	mov.b64 	%rd5714, {%r5090, %r5089};
	xor.b64  	%rd5715, %rd5714, %rd5713;
	shf.l.wrap.b32 	%r5091, %r5085, %r5086, 25;
	shf.l.wrap.b32 	%r5092, %r5086, %r5085, 25;
	mov.b64 	%rd5716, {%r5092, %r5091};
	xor.b64  	%rd5717, %rd5715, %rd5716;
	xor.b64  	%rd5718, %rd6952, %rd5647;
	xor.b64  	%rd5719, %rd6952, %rd6953;
	and.b64  	%rd5720, %rd5719, %rd5718;
	xor.b64  	%rd5721, %rd5720, %rd6952;
	add.s64 	%rd5722, %rd5712, %rd5721;
	add.s64 	%rd6951, %rd5722, %rd5717;
	add.s32 	%r5093, %r11837, 15;
	mul.wide.s32 	%rd5723, %r5093, 8;
	add.s64 	%rd5724, %rd2329, %rd5723;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5094,%dummy}, %rd6955;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5095}, %rd6955;
	}
	shf.r.wrap.b32 	%r5096, %r5095, %r5094, 14;
	shf.r.wrap.b32 	%r5097, %r5094, %r5095, 14;
	mov.b64 	%rd5725, {%r5097, %r5096};
	shf.r.wrap.b32 	%r5098, %r5095, %r5094, 18;
	shf.r.wrap.b32 	%r5099, %r5094, %r5095, 18;
	mov.b64 	%rd5726, {%r5099, %r5098};
	xor.b64  	%rd5727, %rd5726, %rd5725;
	shf.l.wrap.b32 	%r5100, %r5094, %r5095, 23;
	shf.l.wrap.b32 	%r5101, %r5095, %r5094, 23;
	mov.b64 	%rd5728, {%r5101, %r5100};
	xor.b64  	%rd5729, %rd5727, %rd5728;
	xor.b64  	%rd5730, %rd6956, %rd6957;
	and.b64  	%rd5731, %rd6955, %rd5730;
	xor.b64  	%rd5732, %rd5731, %rd6957;
	add.s64 	%rd5733, %rd5636, %rd6942;
	ld.const.u64 	%rd5734, [%rd5724];
	add.s64 	%rd5735, %rd5733, %rd5734;
	add.s64 	%rd5736, %rd5735, %rd5732;
	add.s64 	%rd5737, %rd5736, %rd5729;
	add.s64 	%rd6954, %rd5737, %rd5647;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5102,%dummy}, %rd6951;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5103}, %rd6951;
	}
	shf.r.wrap.b32 	%r5104, %r5103, %r5102, 28;
	shf.r.wrap.b32 	%r5105, %r5102, %r5103, 28;
	mov.b64 	%rd5738, {%r5105, %r5104};
	shf.l.wrap.b32 	%r5106, %r5102, %r5103, 30;
	shf.l.wrap.b32 	%r5107, %r5103, %r5102, 30;
	mov.b64 	%rd5739, {%r5107, %r5106};
	xor.b64  	%rd5740, %rd5739, %rd5738;
	shf.l.wrap.b32 	%r5108, %r5102, %r5103, 25;
	shf.l.wrap.b32 	%r5109, %r5103, %r5102, 25;
	mov.b64 	%rd5741, {%r5109, %r5108};
	xor.b64  	%rd5742, %rd5740, %rd5741;
	xor.b64  	%rd5743, %rd6951, %rd6953;
	xor.b64  	%rd5744, %rd6951, %rd6952;
	and.b64  	%rd5745, %rd5744, %rd5743;
	xor.b64  	%rd5746, %rd5745, %rd6951;
	add.s64 	%rd5747, %rd5737, %rd5746;
	add.s64 	%rd6950, %rd5747, %rd5742;
	add.s32 	%r11837, %r11837, 16;
	setp.lt.s32	%p409, %r11837, 80;
	@%p409 bra 	BB5_683;

	add.s64 	%rd6973, %rd6941, %rd6950;
	st.local.u64 	[%rd10], %rd6973;
	add.s64 	%rd6972, %rd6940, %rd6951;
	st.local.u64 	[%rd22], %rd6972;
	add.s64 	%rd6971, %rd6939, %rd6952;
	st.local.u64 	[%rd23], %rd6971;
	add.s64 	%rd6970, %rd6938, %rd6953;
	st.local.u64 	[%rd24], %rd6970;
	add.s64 	%rd6969, %rd6937, %rd6954;
	st.local.u64 	[%rd25], %rd6969;
	add.s64 	%rd6968, %rd6936, %rd6955;
	st.local.u64 	[%rd26], %rd6968;
	add.s64 	%rd6967, %rd6935, %rd6956;
	st.local.u64 	[%rd27], %rd6967;
	add.s64 	%rd6966, %rd6934, %rd6957;
	st.local.u64 	[%rd28], %rd6966;
	add.s32 	%r11805, %r11805, 1;
	setp.lt.u32	%p410, %r11805, %r763;
	@%p410 bra 	BB5_358;
	bra.uni 	BB5_685;

BB5_350:
	setp.lt.u32	%p212, %r763, 2;
	@%p212 bra 	BB5_685;

	{
	.reg .b32 %dummy;
	mov.b64 	{%r2646,%dummy}, %rd680;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2647}, %rd680;
	}
	shf.r.wrap.b32 	%r2648, %r2647, %r2646, 14;
	shf.r.wrap.b32 	%r2649, %r2646, %r2647, 14;
	mov.b64 	%rd2754, {%r2649, %r2648};
	shf.r.wrap.b32 	%r2650, %r2647, %r2646, 18;
	shf.r.wrap.b32 	%r2651, %r2646, %r2647, 18;
	mov.b64 	%rd2755, {%r2651, %r2650};
	xor.b64  	%rd2756, %rd2755, %rd2754;
	shf.l.wrap.b32 	%r2652, %r2646, %r2647, 23;
	shf.l.wrap.b32 	%r2653, %r2647, %r2646, 23;
	mov.b64 	%rd2757, {%r2653, %r2652};
	xor.b64  	%rd255, %rd2756, %rd2757;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2654}, %rd676;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2655,%dummy}, %rd676;
	}
	shf.l.wrap.b32 	%r2656, %r2655, %r2654, 30;
	shf.l.wrap.b32 	%r2657, %r2654, %r2655, 30;
	mov.b64 	%rd2759, {%r2657, %r2656};
	shf.r.wrap.b32 	%r2658, %r2654, %r2655, 28;
	shf.r.wrap.b32 	%r2659, %r2655, %r2654, 28;
	mov.b64 	%rd2760, {%r2659, %r2658};
	xor.b64  	%rd2761, %rd2759, %rd2760;
	shf.l.wrap.b32 	%r2660, %r2655, %r2654, 25;
	shf.l.wrap.b32 	%r2661, %r2654, %r2655, 25;
	mov.b64 	%rd2762, {%r2661, %r2660};
	xor.b64  	%rd256, %rd2761, %rd2762;
	mov.u32 	%r11803, 1;

BB5_352:
	shr.u64 	%rd2763, %rd6973, 32;
	cvt.u32.u64	%r106, %rd2763;
	shr.u64 	%rd2764, %rd6972, 32;
	cvt.u32.u64	%r107, %rd2764;
	shr.u64 	%rd2765, %rd6971, 32;
	cvt.u32.u64	%r108, %rd2765;
	shr.u64 	%rd2766, %rd6970, 32;
	cvt.u32.u64	%r109, %rd2766;
	shr.u64 	%rd2767, %rd6969, 32;
	cvt.u32.u64	%r110, %rd2767;
	shr.u64 	%rd2768, %rd6968, 32;
	cvt.u32.u64	%r111, %rd2768;
	shr.u64 	%rd2769, %rd6967, 32;
	cvt.u32.u64	%r112, %rd2769;
	shr.u64 	%rd2770, %rd6966, 32;
	cvt.u32.u64	%r113, %rd2770;
	cvt.u32.u64	%r114, %rd6973;
	bfi.b64 	%rd6894, %rd2763, %rd6973, 32, 32;
	cvt.u32.u64	%r115, %rd6972;
	bfi.b64 	%rd6895, %rd2764, %rd6972, 32, 32;
	cvt.u32.u64	%r116, %rd6971;
	bfi.b64 	%rd6896, %rd2765, %rd6971, 32, 32;
	cvt.u32.u64	%r117, %rd6970;
	bfi.b64 	%rd6897, %rd2766, %rd6970, 32, 32;
	cvt.u32.u64	%r118, %rd6969;
	bfi.b64 	%rd6898, %rd2767, %rd6969, 32, 32;
	cvt.u32.u64	%r119, %rd6968;
	bfi.b64 	%rd6899, %rd2768, %rd6968, 32, 32;
	cvt.u32.u64	%r120, %rd6967;
	bfi.b64 	%rd6900, %rd2769, %rd6967, 32, 32;
	cvt.u32.u64	%r121, %rd6966;
	bfi.b64 	%rd6901, %rd2770, %rd6966, 32, 32;
	add.s64 	%rd2771, %rd6894, %rd63;
	add.s64 	%rd2772, %rd2771, %rd255;
	add.s64 	%rd2773, %rd2772, %rd256;
	add.s64 	%rd2774, %rd2772, 2357225248857953701;
	add.s64 	%rd2775, %rd2773, -5343946410804754465;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2663,%dummy}, %rd2774;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2664}, %rd2774;
	}
	shf.r.wrap.b32 	%r2665, %r2664, %r2663, 14;
	shf.r.wrap.b32 	%r2666, %r2663, %r2664, 14;
	mov.b64 	%rd2776, {%r2666, %r2665};
	shf.r.wrap.b32 	%r2667, %r2664, %r2663, 18;
	shf.r.wrap.b32 	%r2668, %r2663, %r2664, 18;
	mov.b64 	%rd2777, {%r2668, %r2667};
	xor.b64  	%rd2778, %rd2777, %rd2776;
	shf.l.wrap.b32 	%r2669, %r2663, %r2664, 23;
	shf.l.wrap.b32 	%r2670, %r2664, %r2663, 23;
	mov.b64 	%rd2779, {%r2670, %r2669};
	xor.b64  	%rd2780, %rd2778, %rd2779;
	and.b64  	%rd2781, %rd2774, -3887949035690463538;
	xor.b64  	%rd2782, %rd2781, -7276294671716946913;
	add.s64 	%rd2783, %rd6895, %rd64;
	add.s64 	%rd2784, %rd2783, %rd2782;
	add.s64 	%rd2785, %rd2784, %rd2780;
	xor.b64  	%rd2786, %rd2775, -4942790177534073029;
	xor.b64  	%rd2787, %rd2775, 7640891576956012808;
	and.b64  	%rd2788, %rd2787, %rd2786;
	xor.b64  	%rd2789, %rd2788, %rd2775;
	add.s64 	%rd2790, %rd2785, %rd2789;
	add.s64 	%rd2791, %rd2785, 6625583534739731862;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2671,%dummy}, %rd2775;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2672}, %rd2775;
	}
	shf.r.wrap.b32 	%r2673, %r2672, %r2671, 28;
	shf.r.wrap.b32 	%r2674, %r2671, %r2672, 28;
	mov.b64 	%rd2792, {%r2674, %r2673};
	shf.l.wrap.b32 	%r2675, %r2671, %r2672, 30;
	shf.l.wrap.b32 	%r2676, %r2672, %r2671, 30;
	mov.b64 	%rd2793, {%r2676, %r2675};
	xor.b64  	%rd2794, %rd2793, %rd2792;
	shf.l.wrap.b32 	%r2677, %r2671, %r2672, 25;
	shf.l.wrap.b32 	%r2678, %r2672, %r2671, 25;
	mov.b64 	%rd2795, {%r2678, %r2677};
	xor.b64  	%rd2796, %rd2794, %rd2795;
	add.s64 	%rd2797, %rd2790, %rd2796;
	add.s64 	%rd2798, %rd2797, 2270897969802886507;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2679,%dummy}, %rd2791;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2680}, %rd2791;
	}
	shf.r.wrap.b32 	%r2681, %r2680, %r2679, 14;
	shf.r.wrap.b32 	%r2682, %r2679, %r2680, 14;
	mov.b64 	%rd2799, {%r2682, %r2681};
	shf.r.wrap.b32 	%r2683, %r2680, %r2679, 18;
	shf.r.wrap.b32 	%r2684, %r2679, %r2680, 18;
	mov.b64 	%rd2800, {%r2684, %r2683};
	xor.b64  	%rd2801, %rd2800, %rd2799;
	shf.l.wrap.b32 	%r2685, %r2679, %r2680, 23;
	shf.l.wrap.b32 	%r2686, %r2680, %r2679, 23;
	mov.b64 	%rd2802, {%r2686, %r2685};
	xor.b64  	%rd2803, %rd2801, %rd2802;
	xor.b64  	%rd2804, %rd2774, 5840696475078001361;
	and.b64  	%rd2805, %rd2791, %rd2804;
	xor.b64  	%rd2806, %rd2805, 5840696475078001361;
	add.s64 	%rd2807, %rd6896, %rd65;
	add.s64 	%rd2808, %rd2807, %rd2806;
	add.s64 	%rd2809, %rd2808, %rd2803;
	xor.b64  	%rd2810, %rd2798, 7640891576956012808;
	xor.b64  	%rd2811, %rd2798, %rd2775;
	and.b64  	%rd2812, %rd2811, %rd2810;
	xor.b64  	%rd2813, %rd2812, %rd2798;
	add.s64 	%rd2814, %rd2809, %rd2813;
	add.s64 	%rd2815, %rd2809, 6227659224458531674;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2687,%dummy}, %rd2798;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2688}, %rd2798;
	}
	shf.r.wrap.b32 	%r2689, %r2688, %r2687, 28;
	shf.r.wrap.b32 	%r2690, %r2687, %r2688, 28;
	mov.b64 	%rd2816, {%r2690, %r2689};
	shf.l.wrap.b32 	%r2691, %r2687, %r2688, 30;
	shf.l.wrap.b32 	%r2692, %r2688, %r2687, 30;
	mov.b64 	%rd2817, {%r2692, %r2691};
	xor.b64  	%rd2818, %rd2817, %rd2816;
	shf.l.wrap.b32 	%r2693, %r2687, %r2688, 25;
	shf.l.wrap.b32 	%r2694, %r2688, %r2687, 25;
	mov.b64 	%rd2819, {%r2694, %r2693};
	xor.b64  	%rd2820, %rd2818, %rd2819;
	add.s64 	%rd2821, %rd2814, %rd2820;
	add.s64 	%rd2822, %rd2821, -7276294671716946913;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2695,%dummy}, %rd2815;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2696}, %rd2815;
	}
	shf.r.wrap.b32 	%r2697, %r2696, %r2695, 14;
	shf.r.wrap.b32 	%r2698, %r2695, %r2696, 14;
	mov.b64 	%rd2823, {%r2698, %r2697};
	shf.r.wrap.b32 	%r2699, %r2696, %r2695, 18;
	shf.r.wrap.b32 	%r2700, %r2695, %r2696, 18;
	mov.b64 	%rd2824, {%r2700, %r2699};
	xor.b64  	%rd2825, %rd2824, %rd2823;
	shf.l.wrap.b32 	%r2701, %r2695, %r2696, 23;
	shf.l.wrap.b32 	%r2702, %r2696, %r2695, 23;
	mov.b64 	%rd2826, {%r2702, %r2701};
	xor.b64  	%rd2827, %rd2825, %rd2826;
	xor.b64  	%rd2828, %rd2791, %rd2774;
	and.b64  	%rd2829, %rd2815, %rd2828;
	xor.b64  	%rd2830, %rd2829, %rd2774;
	add.s64 	%rd2831, %rd6897, %rd66;
	add.s64 	%rd2832, %rd2831, %rd2830;
	add.s64 	%rd2833, %rd2832, %rd2827;
	xor.b64  	%rd2834, %rd2822, %rd2775;
	xor.b64  	%rd2835, %rd2822, %rd2798;
	and.b64  	%rd2836, %rd2835, %rd2834;
	xor.b64  	%rd2837, %rd2836, %rd2822;
	add.s64 	%rd2838, %rd2833, %rd2837;
	add.s64 	%rd2839, %rd2833, -4965156021675537447;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2703,%dummy}, %rd2822;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2704}, %rd2822;
	}
	shf.r.wrap.b32 	%r2705, %r2704, %r2703, 28;
	shf.r.wrap.b32 	%r2706, %r2703, %r2704, 28;
	mov.b64 	%rd2840, {%r2706, %r2705};
	shf.l.wrap.b32 	%r2707, %r2703, %r2704, 30;
	shf.l.wrap.b32 	%r2708, %r2704, %r2703, 30;
	mov.b64 	%rd2841, {%r2708, %r2707};
	xor.b64  	%rd2842, %rd2841, %rd2840;
	shf.l.wrap.b32 	%r2709, %r2703, %r2704, 25;
	shf.l.wrap.b32 	%r2710, %r2704, %r2703, 25;
	mov.b64 	%rd2843, {%r2710, %r2709};
	xor.b64  	%rd2844, %rd2842, %rd2843;
	add.s64 	%rd2845, %rd2838, %rd2844;
	add.s64 	%rd2846, %rd2845, 5840696475078001361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2711,%dummy}, %rd2839;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2712}, %rd2839;
	}
	shf.r.wrap.b32 	%r2713, %r2712, %r2711, 14;
	shf.r.wrap.b32 	%r2714, %r2711, %r2712, 14;
	mov.b64 	%rd2847, {%r2714, %r2713};
	shf.r.wrap.b32 	%r2715, %r2712, %r2711, 18;
	shf.r.wrap.b32 	%r2716, %r2711, %r2712, 18;
	mov.b64 	%rd2848, {%r2716, %r2715};
	xor.b64  	%rd2849, %rd2848, %rd2847;
	shf.l.wrap.b32 	%r2717, %r2711, %r2712, 23;
	shf.l.wrap.b32 	%r2718, %r2712, %r2711, 23;
	mov.b64 	%rd2850, {%r2718, %r2717};
	xor.b64  	%rd2851, %rd2849, %rd2850;
	xor.b64  	%rd2852, %rd2815, %rd2791;
	and.b64  	%rd2853, %rd2839, %rd2852;
	xor.b64  	%rd2854, %rd2853, %rd2791;
	add.s64 	%rd2855, %rd2774, %rd6898;
	add.s64 	%rd2856, %rd2855, %rd67;
	add.s64 	%rd2857, %rd2856, %rd2854;
	add.s64 	%rd2858, %rd2857, %rd2851;
	add.s64 	%rd2859, %rd2858, %rd2775;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2719,%dummy}, %rd2846;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2720}, %rd2846;
	}
	shf.r.wrap.b32 	%r2721, %r2720, %r2719, 28;
	shf.r.wrap.b32 	%r2722, %r2719, %r2720, 28;
	mov.b64 	%rd2860, {%r2722, %r2721};
	shf.l.wrap.b32 	%r2723, %r2719, %r2720, 30;
	shf.l.wrap.b32 	%r2724, %r2720, %r2719, 30;
	mov.b64 	%rd2861, {%r2724, %r2723};
	xor.b64  	%rd2862, %rd2861, %rd2860;
	shf.l.wrap.b32 	%r2725, %r2719, %r2720, 25;
	shf.l.wrap.b32 	%r2726, %r2720, %r2719, 25;
	mov.b64 	%rd2863, {%r2726, %r2725};
	xor.b64  	%rd2864, %rd2862, %rd2863;
	xor.b64  	%rd2865, %rd2846, %rd2798;
	xor.b64  	%rd2866, %rd2846, %rd2822;
	and.b64  	%rd2867, %rd2866, %rd2865;
	xor.b64  	%rd2868, %rd2867, %rd2846;
	add.s64 	%rd2869, %rd2858, %rd2868;
	add.s64 	%rd2870, %rd2869, %rd2864;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2727,%dummy}, %rd2859;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2728}, %rd2859;
	}
	shf.r.wrap.b32 	%r2729, %r2728, %r2727, 14;
	shf.r.wrap.b32 	%r2730, %r2727, %r2728, 14;
	mov.b64 	%rd2871, {%r2730, %r2729};
	shf.r.wrap.b32 	%r2731, %r2728, %r2727, 18;
	shf.r.wrap.b32 	%r2732, %r2727, %r2728, 18;
	mov.b64 	%rd2872, {%r2732, %r2731};
	xor.b64  	%rd2873, %rd2872, %rd2871;
	shf.l.wrap.b32 	%r2733, %r2727, %r2728, 23;
	shf.l.wrap.b32 	%r2734, %r2728, %r2727, 23;
	mov.b64 	%rd2874, {%r2734, %r2733};
	xor.b64  	%rd2875, %rd2873, %rd2874;
	xor.b64  	%rd2876, %rd2839, %rd2815;
	and.b64  	%rd2877, %rd2859, %rd2876;
	xor.b64  	%rd2878, %rd2877, %rd2815;
	add.s64 	%rd2879, %rd2791, %rd6899;
	add.s64 	%rd2880, %rd2879, %rd68;
	add.s64 	%rd2881, %rd2880, %rd2878;
	add.s64 	%rd2882, %rd2881, %rd2875;
	add.s64 	%rd2883, %rd2882, %rd2798;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2735,%dummy}, %rd2870;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2736}, %rd2870;
	}
	shf.r.wrap.b32 	%r2737, %r2736, %r2735, 28;
	shf.r.wrap.b32 	%r2738, %r2735, %r2736, 28;
	mov.b64 	%rd2884, {%r2738, %r2737};
	shf.l.wrap.b32 	%r2739, %r2735, %r2736, 30;
	shf.l.wrap.b32 	%r2740, %r2736, %r2735, 30;
	mov.b64 	%rd2885, {%r2740, %r2739};
	xor.b64  	%rd2886, %rd2885, %rd2884;
	shf.l.wrap.b32 	%r2741, %r2735, %r2736, 25;
	shf.l.wrap.b32 	%r2742, %r2736, %r2735, 25;
	mov.b64 	%rd2887, {%r2742, %r2741};
	xor.b64  	%rd2888, %rd2886, %rd2887;
	xor.b64  	%rd2889, %rd2870, %rd2822;
	xor.b64  	%rd2890, %rd2870, %rd2846;
	and.b64  	%rd2891, %rd2890, %rd2889;
	xor.b64  	%rd2892, %rd2891, %rd2870;
	add.s64 	%rd2893, %rd2882, %rd2892;
	add.s64 	%rd2894, %rd2893, %rd2888;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2743,%dummy}, %rd2883;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2744}, %rd2883;
	}
	shf.r.wrap.b32 	%r2745, %r2744, %r2743, 14;
	shf.r.wrap.b32 	%r2746, %r2743, %r2744, 14;
	mov.b64 	%rd2895, {%r2746, %r2745};
	shf.r.wrap.b32 	%r2747, %r2744, %r2743, 18;
	shf.r.wrap.b32 	%r2748, %r2743, %r2744, 18;
	mov.b64 	%rd2896, {%r2748, %r2747};
	xor.b64  	%rd2897, %rd2896, %rd2895;
	shf.l.wrap.b32 	%r2749, %r2743, %r2744, 23;
	shf.l.wrap.b32 	%r2750, %r2744, %r2743, 23;
	mov.b64 	%rd2898, {%r2750, %r2749};
	xor.b64  	%rd2899, %rd2897, %rd2898;
	xor.b64  	%rd2900, %rd2859, %rd2839;
	and.b64  	%rd2901, %rd2883, %rd2900;
	xor.b64  	%rd2902, %rd2901, %rd2839;
	add.s64 	%rd2903, %rd2815, %rd6900;
	add.s64 	%rd2904, %rd2903, %rd69;
	add.s64 	%rd2905, %rd2904, %rd2902;
	add.s64 	%rd2906, %rd2905, %rd2899;
	add.s64 	%rd2907, %rd2906, %rd2822;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2751,%dummy}, %rd2894;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2752}, %rd2894;
	}
	shf.r.wrap.b32 	%r2753, %r2752, %r2751, 28;
	shf.r.wrap.b32 	%r2754, %r2751, %r2752, 28;
	mov.b64 	%rd2908, {%r2754, %r2753};
	shf.l.wrap.b32 	%r2755, %r2751, %r2752, 30;
	shf.l.wrap.b32 	%r2756, %r2752, %r2751, 30;
	mov.b64 	%rd2909, {%r2756, %r2755};
	xor.b64  	%rd2910, %rd2909, %rd2908;
	shf.l.wrap.b32 	%r2757, %r2751, %r2752, 25;
	shf.l.wrap.b32 	%r2758, %r2752, %r2751, 25;
	mov.b64 	%rd2911, {%r2758, %r2757};
	xor.b64  	%rd2912, %rd2910, %rd2911;
	xor.b64  	%rd2913, %rd2894, %rd2846;
	xor.b64  	%rd2914, %rd2894, %rd2870;
	and.b64  	%rd2915, %rd2914, %rd2913;
	xor.b64  	%rd2916, %rd2915, %rd2894;
	add.s64 	%rd2917, %rd2906, %rd2916;
	add.s64 	%rd2918, %rd2917, %rd2912;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2759,%dummy}, %rd2907;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2760}, %rd2907;
	}
	shf.r.wrap.b32 	%r2761, %r2760, %r2759, 14;
	shf.r.wrap.b32 	%r2762, %r2759, %r2760, 14;
	mov.b64 	%rd2919, {%r2762, %r2761};
	shf.r.wrap.b32 	%r2763, %r2760, %r2759, 18;
	shf.r.wrap.b32 	%r2764, %r2759, %r2760, 18;
	mov.b64 	%rd2920, {%r2764, %r2763};
	xor.b64  	%rd2921, %rd2920, %rd2919;
	shf.l.wrap.b32 	%r2765, %r2759, %r2760, 23;
	shf.l.wrap.b32 	%r2766, %r2760, %r2759, 23;
	mov.b64 	%rd2922, {%r2766, %r2765};
	xor.b64  	%rd2923, %rd2921, %rd2922;
	xor.b64  	%rd2924, %rd2883, %rd2859;
	and.b64  	%rd2925, %rd2907, %rd2924;
	xor.b64  	%rd2926, %rd2925, %rd2859;
	add.s64 	%rd2927, %rd2839, %rd6901;
	add.s64 	%rd2928, %rd2927, %rd70;
	add.s64 	%rd2929, %rd2928, %rd2926;
	add.s64 	%rd2930, %rd2929, %rd2923;
	add.s64 	%rd2931, %rd2930, %rd2846;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2767,%dummy}, %rd2918;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2768}, %rd2918;
	}
	shf.r.wrap.b32 	%r2769, %r2768, %r2767, 28;
	shf.r.wrap.b32 	%r2770, %r2767, %r2768, 28;
	mov.b64 	%rd2932, {%r2770, %r2769};
	shf.l.wrap.b32 	%r2771, %r2767, %r2768, 30;
	shf.l.wrap.b32 	%r2772, %r2768, %r2767, 30;
	mov.b64 	%rd2933, {%r2772, %r2771};
	xor.b64  	%rd2934, %rd2933, %rd2932;
	shf.l.wrap.b32 	%r2773, %r2767, %r2768, 25;
	shf.l.wrap.b32 	%r2774, %r2768, %r2767, 25;
	mov.b64 	%rd2935, {%r2774, %r2773};
	xor.b64  	%rd2936, %rd2934, %rd2935;
	xor.b64  	%rd2937, %rd2918, %rd2870;
	xor.b64  	%rd2938, %rd2918, %rd2894;
	and.b64  	%rd2939, %rd2938, %rd2937;
	xor.b64  	%rd2940, %rd2939, %rd2918;
	add.s64 	%rd2941, %rd2930, %rd2940;
	add.s64 	%rd2942, %rd2941, %rd2936;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2775,%dummy}, %rd2931;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2776}, %rd2931;
	}
	shf.r.wrap.b32 	%r2777, %r2776, %r2775, 14;
	shf.r.wrap.b32 	%r2778, %r2775, %r2776, 14;
	mov.b64 	%rd2943, {%r2778, %r2777};
	shf.r.wrap.b32 	%r2779, %r2776, %r2775, 18;
	shf.r.wrap.b32 	%r2780, %r2775, %r2776, 18;
	mov.b64 	%rd2944, {%r2780, %r2779};
	xor.b64  	%rd2945, %rd2944, %rd2943;
	shf.l.wrap.b32 	%r2781, %r2775, %r2776, 23;
	shf.l.wrap.b32 	%r2782, %r2776, %r2775, 23;
	mov.b64 	%rd2946, {%r2782, %r2781};
	xor.b64  	%rd2947, %rd2945, %rd2946;
	xor.b64  	%rd2948, %rd2907, %rd2883;
	and.b64  	%rd2949, %rd2931, %rd2948;
	xor.b64  	%rd2950, %rd2949, %rd2883;
	add.s64 	%rd2951, %rd2859, %rd183;
	add.s64 	%rd2952, %rd2951, %rd71;
	add.s64 	%rd2953, %rd2952, %rd2950;
	add.s64 	%rd2954, %rd2953, %rd2947;
	add.s64 	%rd2955, %rd2954, %rd2870;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2783,%dummy}, %rd2942;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2784}, %rd2942;
	}
	shf.r.wrap.b32 	%r2785, %r2784, %r2783, 28;
	shf.r.wrap.b32 	%r2786, %r2783, %r2784, 28;
	mov.b64 	%rd2956, {%r2786, %r2785};
	shf.l.wrap.b32 	%r2787, %r2783, %r2784, 30;
	shf.l.wrap.b32 	%r2788, %r2784, %r2783, 30;
	mov.b64 	%rd2957, {%r2788, %r2787};
	xor.b64  	%rd2958, %rd2957, %rd2956;
	shf.l.wrap.b32 	%r2789, %r2783, %r2784, 25;
	shf.l.wrap.b32 	%r2790, %r2784, %r2783, 25;
	mov.b64 	%rd2959, {%r2790, %r2789};
	xor.b64  	%rd2960, %rd2958, %rd2959;
	xor.b64  	%rd2961, %rd2942, %rd2894;
	xor.b64  	%rd2962, %rd2942, %rd2918;
	and.b64  	%rd2963, %rd2962, %rd2961;
	xor.b64  	%rd2964, %rd2963, %rd2942;
	add.s64 	%rd2965, %rd2954, %rd2964;
	add.s64 	%rd2966, %rd2965, %rd2960;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2791,%dummy}, %rd2955;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2792}, %rd2955;
	}
	shf.r.wrap.b32 	%r2793, %r2792, %r2791, 14;
	shf.r.wrap.b32 	%r2794, %r2791, %r2792, 14;
	mov.b64 	%rd2967, {%r2794, %r2793};
	shf.r.wrap.b32 	%r2795, %r2792, %r2791, 18;
	shf.r.wrap.b32 	%r2796, %r2791, %r2792, 18;
	mov.b64 	%rd2968, {%r2796, %r2795};
	xor.b64  	%rd2969, %rd2968, %rd2967;
	shf.l.wrap.b32 	%r2797, %r2791, %r2792, 23;
	shf.l.wrap.b32 	%r2798, %r2792, %r2791, 23;
	mov.b64 	%rd2970, {%r2798, %r2797};
	xor.b64  	%rd2971, %rd2969, %rd2970;
	xor.b64  	%rd2972, %rd2931, %rd2907;
	and.b64  	%rd2973, %rd2955, %rd2972;
	xor.b64  	%rd2974, %rd2973, %rd2907;
	add.s64 	%rd2975, %rd2883, %rd184;
	add.s64 	%rd2976, %rd2975, %rd72;
	add.s64 	%rd2977, %rd2976, %rd2974;
	add.s64 	%rd2978, %rd2977, %rd2971;
	add.s64 	%rd2979, %rd2978, %rd2894;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2799,%dummy}, %rd2966;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2800}, %rd2966;
	}
	shf.r.wrap.b32 	%r2801, %r2800, %r2799, 28;
	shf.r.wrap.b32 	%r2802, %r2799, %r2800, 28;
	mov.b64 	%rd2980, {%r2802, %r2801};
	shf.l.wrap.b32 	%r2803, %r2799, %r2800, 30;
	shf.l.wrap.b32 	%r2804, %r2800, %r2799, 30;
	mov.b64 	%rd2981, {%r2804, %r2803};
	xor.b64  	%rd2982, %rd2981, %rd2980;
	shf.l.wrap.b32 	%r2805, %r2799, %r2800, 25;
	shf.l.wrap.b32 	%r2806, %r2800, %r2799, 25;
	mov.b64 	%rd2983, {%r2806, %r2805};
	xor.b64  	%rd2984, %rd2982, %rd2983;
	xor.b64  	%rd2985, %rd2966, %rd2918;
	xor.b64  	%rd2986, %rd2966, %rd2942;
	and.b64  	%rd2987, %rd2986, %rd2985;
	xor.b64  	%rd2988, %rd2987, %rd2966;
	add.s64 	%rd2989, %rd2978, %rd2988;
	add.s64 	%rd2990, %rd2989, %rd2984;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2807,%dummy}, %rd2979;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2808}, %rd2979;
	}
	shf.r.wrap.b32 	%r2809, %r2808, %r2807, 14;
	shf.r.wrap.b32 	%r2810, %r2807, %r2808, 14;
	mov.b64 	%rd2991, {%r2810, %r2809};
	shf.r.wrap.b32 	%r2811, %r2808, %r2807, 18;
	shf.r.wrap.b32 	%r2812, %r2807, %r2808, 18;
	mov.b64 	%rd2992, {%r2812, %r2811};
	xor.b64  	%rd2993, %rd2992, %rd2991;
	shf.l.wrap.b32 	%r2813, %r2807, %r2808, 23;
	shf.l.wrap.b32 	%r2814, %r2808, %r2807, 23;
	mov.b64 	%rd2994, {%r2814, %r2813};
	xor.b64  	%rd2995, %rd2993, %rd2994;
	xor.b64  	%rd2996, %rd2955, %rd2931;
	and.b64  	%rd2997, %rd2979, %rd2996;
	xor.b64  	%rd2998, %rd2997, %rd2931;
	add.s64 	%rd2999, %rd2907, %rd185;
	add.s64 	%rd3000, %rd2999, %rd73;
	add.s64 	%rd3001, %rd3000, %rd2998;
	add.s64 	%rd3002, %rd3001, %rd2995;
	add.s64 	%rd3003, %rd3002, %rd2918;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2815,%dummy}, %rd2990;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2816}, %rd2990;
	}
	shf.r.wrap.b32 	%r2817, %r2816, %r2815, 28;
	shf.r.wrap.b32 	%r2818, %r2815, %r2816, 28;
	mov.b64 	%rd3004, {%r2818, %r2817};
	shf.l.wrap.b32 	%r2819, %r2815, %r2816, 30;
	shf.l.wrap.b32 	%r2820, %r2816, %r2815, 30;
	mov.b64 	%rd3005, {%r2820, %r2819};
	xor.b64  	%rd3006, %rd3005, %rd3004;
	shf.l.wrap.b32 	%r2821, %r2815, %r2816, 25;
	shf.l.wrap.b32 	%r2822, %r2816, %r2815, 25;
	mov.b64 	%rd3007, {%r2822, %r2821};
	xor.b64  	%rd3008, %rd3006, %rd3007;
	xor.b64  	%rd3009, %rd2990, %rd2942;
	xor.b64  	%rd3010, %rd2990, %rd2966;
	and.b64  	%rd3011, %rd3010, %rd3009;
	xor.b64  	%rd3012, %rd3011, %rd2990;
	add.s64 	%rd3013, %rd3002, %rd3012;
	add.s64 	%rd3014, %rd3013, %rd3008;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2823,%dummy}, %rd3003;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2824}, %rd3003;
	}
	shf.r.wrap.b32 	%r2825, %r2824, %r2823, 14;
	shf.r.wrap.b32 	%r2826, %r2823, %r2824, 14;
	mov.b64 	%rd3015, {%r2826, %r2825};
	shf.r.wrap.b32 	%r2827, %r2824, %r2823, 18;
	shf.r.wrap.b32 	%r2828, %r2823, %r2824, 18;
	mov.b64 	%rd3016, {%r2828, %r2827};
	xor.b64  	%rd3017, %rd3016, %rd3015;
	shf.l.wrap.b32 	%r2829, %r2823, %r2824, 23;
	shf.l.wrap.b32 	%r2830, %r2824, %r2823, 23;
	mov.b64 	%rd3018, {%r2830, %r2829};
	xor.b64  	%rd3019, %rd3017, %rd3018;
	xor.b64  	%rd3020, %rd2979, %rd2955;
	and.b64  	%rd3021, %rd3003, %rd3020;
	xor.b64  	%rd3022, %rd3021, %rd2955;
	add.s64 	%rd3023, %rd2931, %rd186;
	add.s64 	%rd3024, %rd3023, %rd74;
	add.s64 	%rd3025, %rd3024, %rd3022;
	add.s64 	%rd3026, %rd3025, %rd3019;
	add.s64 	%rd3027, %rd3026, %rd2942;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2831,%dummy}, %rd3014;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2832}, %rd3014;
	}
	shf.r.wrap.b32 	%r2833, %r2832, %r2831, 28;
	shf.r.wrap.b32 	%r2834, %r2831, %r2832, 28;
	mov.b64 	%rd3028, {%r2834, %r2833};
	shf.l.wrap.b32 	%r2835, %r2831, %r2832, 30;
	shf.l.wrap.b32 	%r2836, %r2832, %r2831, 30;
	mov.b64 	%rd3029, {%r2836, %r2835};
	xor.b64  	%rd3030, %rd3029, %rd3028;
	shf.l.wrap.b32 	%r2837, %r2831, %r2832, 25;
	shf.l.wrap.b32 	%r2838, %r2832, %r2831, 25;
	mov.b64 	%rd3031, {%r2838, %r2837};
	xor.b64  	%rd3032, %rd3030, %rd3031;
	xor.b64  	%rd3033, %rd3014, %rd2966;
	xor.b64  	%rd3034, %rd3014, %rd2990;
	and.b64  	%rd3035, %rd3034, %rd3033;
	xor.b64  	%rd3036, %rd3035, %rd3014;
	add.s64 	%rd3037, %rd3026, %rd3036;
	add.s64 	%rd3038, %rd3037, %rd3032;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2839,%dummy}, %rd3027;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2840}, %rd3027;
	}
	shf.r.wrap.b32 	%r2841, %r2840, %r2839, 14;
	shf.r.wrap.b32 	%r2842, %r2839, %r2840, 14;
	mov.b64 	%rd3039, {%r2842, %r2841};
	shf.r.wrap.b32 	%r2843, %r2840, %r2839, 18;
	shf.r.wrap.b32 	%r2844, %r2839, %r2840, 18;
	mov.b64 	%rd3040, {%r2844, %r2843};
	xor.b64  	%rd3041, %rd3040, %rd3039;
	shf.l.wrap.b32 	%r2845, %r2839, %r2840, 23;
	shf.l.wrap.b32 	%r2846, %r2840, %r2839, 23;
	mov.b64 	%rd3042, {%r2846, %r2845};
	xor.b64  	%rd3043, %rd3041, %rd3042;
	xor.b64  	%rd3044, %rd3003, %rd2979;
	and.b64  	%rd3045, %rd3027, %rd3044;
	xor.b64  	%rd3046, %rd3045, %rd2979;
	add.s64 	%rd3047, %rd2955, %rd187;
	add.s64 	%rd3048, %rd3047, %rd75;
	add.s64 	%rd3049, %rd3048, %rd3046;
	add.s64 	%rd3050, %rd3049, %rd3043;
	add.s64 	%rd6893, %rd3050, %rd2966;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2847,%dummy}, %rd3038;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2848}, %rd3038;
	}
	shf.r.wrap.b32 	%r2849, %r2848, %r2847, 28;
	shf.r.wrap.b32 	%r2850, %r2847, %r2848, 28;
	mov.b64 	%rd3051, {%r2850, %r2849};
	shf.l.wrap.b32 	%r2851, %r2847, %r2848, 30;
	shf.l.wrap.b32 	%r2852, %r2848, %r2847, 30;
	mov.b64 	%rd3052, {%r2852, %r2851};
	xor.b64  	%rd3053, %rd3052, %rd3051;
	shf.l.wrap.b32 	%r2853, %r2847, %r2848, 25;
	shf.l.wrap.b32 	%r2854, %r2848, %r2847, 25;
	mov.b64 	%rd3054, {%r2854, %r2853};
	xor.b64  	%rd3055, %rd3053, %rd3054;
	xor.b64  	%rd3056, %rd3038, %rd2990;
	xor.b64  	%rd3057, %rd3038, %rd3014;
	and.b64  	%rd3058, %rd3057, %rd3056;
	xor.b64  	%rd3059, %rd3058, %rd3038;
	add.s64 	%rd3060, %rd3050, %rd3059;
	add.s64 	%rd6889, %rd3060, %rd3055;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2855,%dummy}, %rd6893;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2856}, %rd6893;
	}
	shf.r.wrap.b32 	%r2857, %r2856, %r2855, 14;
	shf.r.wrap.b32 	%r2858, %r2855, %r2856, 14;
	mov.b64 	%rd3061, {%r2858, %r2857};
	shf.r.wrap.b32 	%r2859, %r2856, %r2855, 18;
	shf.r.wrap.b32 	%r2860, %r2855, %r2856, 18;
	mov.b64 	%rd3062, {%r2860, %r2859};
	xor.b64  	%rd3063, %rd3062, %rd3061;
	shf.l.wrap.b32 	%r2861, %r2855, %r2856, 23;
	shf.l.wrap.b32 	%r2862, %r2856, %r2855, 23;
	mov.b64 	%rd3064, {%r2862, %r2861};
	xor.b64  	%rd3065, %rd3063, %rd3064;
	xor.b64  	%rd3066, %rd3027, %rd3003;
	and.b64  	%rd3067, %rd6893, %rd3066;
	xor.b64  	%rd3068, %rd3067, %rd3003;
	add.s64 	%rd3069, %rd2979, %rd188;
	add.s64 	%rd3070, %rd3069, %rd76;
	add.s64 	%rd3071, %rd3070, %rd3068;
	add.s64 	%rd3072, %rd3071, %rd3065;
	add.s64 	%rd6892, %rd3072, %rd2990;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2863,%dummy}, %rd6889;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2864}, %rd6889;
	}
	shf.r.wrap.b32 	%r2865, %r2864, %r2863, 28;
	shf.r.wrap.b32 	%r2866, %r2863, %r2864, 28;
	mov.b64 	%rd3073, {%r2866, %r2865};
	shf.l.wrap.b32 	%r2867, %r2863, %r2864, 30;
	shf.l.wrap.b32 	%r2868, %r2864, %r2863, 30;
	mov.b64 	%rd3074, {%r2868, %r2867};
	xor.b64  	%rd3075, %rd3074, %rd3073;
	shf.l.wrap.b32 	%r2869, %r2863, %r2864, 25;
	shf.l.wrap.b32 	%r2870, %r2864, %r2863, 25;
	mov.b64 	%rd3076, {%r2870, %r2869};
	xor.b64  	%rd3077, %rd3075, %rd3076;
	xor.b64  	%rd3078, %rd6889, %rd3014;
	xor.b64  	%rd3079, %rd6889, %rd3038;
	and.b64  	%rd3080, %rd3079, %rd3078;
	xor.b64  	%rd3081, %rd3080, %rd6889;
	add.s64 	%rd3082, %rd3072, %rd3081;
	add.s64 	%rd6888, %rd3082, %rd3077;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2871,%dummy}, %rd6892;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2872}, %rd6892;
	}
	shf.r.wrap.b32 	%r2873, %r2872, %r2871, 14;
	shf.r.wrap.b32 	%r2874, %r2871, %r2872, 14;
	mov.b64 	%rd3083, {%r2874, %r2873};
	shf.r.wrap.b32 	%r2875, %r2872, %r2871, 18;
	shf.r.wrap.b32 	%r2876, %r2871, %r2872, 18;
	mov.b64 	%rd3084, {%r2876, %r2875};
	xor.b64  	%rd3085, %rd3084, %rd3083;
	shf.l.wrap.b32 	%r2877, %r2871, %r2872, 23;
	shf.l.wrap.b32 	%r2878, %r2872, %r2871, 23;
	mov.b64 	%rd3086, {%r2878, %r2877};
	xor.b64  	%rd3087, %rd3085, %rd3086;
	xor.b64  	%rd3088, %rd6893, %rd3027;
	and.b64  	%rd3089, %rd6892, %rd3088;
	xor.b64  	%rd3090, %rd3089, %rd3027;
	add.s64 	%rd3091, %rd3003, %rd189;
	add.s64 	%rd3092, %rd3091, %rd77;
	add.s64 	%rd3093, %rd3092, %rd3090;
	add.s64 	%rd3094, %rd3093, %rd3087;
	add.s64 	%rd6891, %rd3094, %rd3014;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2879,%dummy}, %rd6888;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2880}, %rd6888;
	}
	shf.r.wrap.b32 	%r2881, %r2880, %r2879, 28;
	shf.r.wrap.b32 	%r2882, %r2879, %r2880, 28;
	mov.b64 	%rd3095, {%r2882, %r2881};
	shf.l.wrap.b32 	%r2883, %r2879, %r2880, 30;
	shf.l.wrap.b32 	%r2884, %r2880, %r2879, 30;
	mov.b64 	%rd3096, {%r2884, %r2883};
	xor.b64  	%rd3097, %rd3096, %rd3095;
	shf.l.wrap.b32 	%r2885, %r2879, %r2880, 25;
	shf.l.wrap.b32 	%r2886, %r2880, %r2879, 25;
	mov.b64 	%rd3098, {%r2886, %r2885};
	xor.b64  	%rd3099, %rd3097, %rd3098;
	xor.b64  	%rd3100, %rd6888, %rd3038;
	xor.b64  	%rd3101, %rd6888, %rd6889;
	and.b64  	%rd3102, %rd3101, %rd3100;
	xor.b64  	%rd3103, %rd3102, %rd6888;
	add.s64 	%rd3104, %rd3094, %rd3103;
	add.s64 	%rd6887, %rd3104, %rd3099;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2887,%dummy}, %rd6891;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2888}, %rd6891;
	}
	shf.r.wrap.b32 	%r2889, %r2888, %r2887, 14;
	shf.r.wrap.b32 	%r2890, %r2887, %r2888, 14;
	mov.b64 	%rd3105, {%r2890, %r2889};
	shf.r.wrap.b32 	%r2891, %r2888, %r2887, 18;
	shf.r.wrap.b32 	%r2892, %r2887, %r2888, 18;
	mov.b64 	%rd3106, {%r2892, %r2891};
	xor.b64  	%rd3107, %rd3106, %rd3105;
	shf.l.wrap.b32 	%r2893, %r2887, %r2888, 23;
	shf.l.wrap.b32 	%r2894, %r2888, %r2887, 23;
	mov.b64 	%rd3108, {%r2894, %r2893};
	xor.b64  	%rd3109, %rd3107, %rd3108;
	xor.b64  	%rd3110, %rd6892, %rd6893;
	and.b64  	%rd3111, %rd6891, %rd3110;
	xor.b64  	%rd3112, %rd3111, %rd6893;
	add.s64 	%rd3113, %rd3027, %rd190;
	add.s64 	%rd3114, %rd3113, %rd78;
	add.s64 	%rd3115, %rd3114, %rd3112;
	add.s64 	%rd3116, %rd3115, %rd3109;
	add.s64 	%rd6890, %rd3116, %rd3038;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2895,%dummy}, %rd6887;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2896}, %rd6887;
	}
	shf.r.wrap.b32 	%r2897, %r2896, %r2895, 28;
	shf.r.wrap.b32 	%r2898, %r2895, %r2896, 28;
	mov.b64 	%rd3117, {%r2898, %r2897};
	shf.l.wrap.b32 	%r2899, %r2895, %r2896, 30;
	shf.l.wrap.b32 	%r2900, %r2896, %r2895, 30;
	mov.b64 	%rd3118, {%r2900, %r2899};
	xor.b64  	%rd3119, %rd3118, %rd3117;
	shf.l.wrap.b32 	%r2901, %r2895, %r2896, 25;
	shf.l.wrap.b32 	%r2902, %r2896, %r2895, 25;
	mov.b64 	%rd3120, {%r2902, %r2901};
	xor.b64  	%rd3121, %rd3119, %rd3120;
	xor.b64  	%rd3122, %rd6887, %rd6889;
	xor.b64  	%rd3123, %rd6887, %rd6888;
	and.b64  	%rd3124, %rd3123, %rd3122;
	xor.b64  	%rd3125, %rd3124, %rd6887;
	add.s64 	%rd3126, %rd3116, %rd3125;
	add.s64 	%rd6886, %rd3126, %rd3121;
	mov.u32 	%r11804, 16;
	mov.u64 	%rd6878, %rd190;
	mov.u64 	%rd6879, %rd189;
	mov.u64 	%rd6880, %rd188;
	mov.u64 	%rd6881, %rd187;
	mov.u64 	%rd6882, %rd186;
	mov.u64 	%rd6883, %rd185;
	mov.u64 	%rd6884, %rd184;
	mov.u64 	%rd6885, %rd183;

BB5_353:
	shr.u64 	%rd3127, %rd6879, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2903,%dummy}, %rd6879;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2904}, %rd6879;
	}
	shf.r.wrap.b32 	%r2905, %r2904, %r2903, 19;
	shf.r.wrap.b32 	%r2906, %r2903, %r2904, 19;
	mov.b64 	%rd3128, {%r2906, %r2905};
	xor.b64  	%rd3129, %rd3128, %rd3127;
	shf.l.wrap.b32 	%r2907, %r2903, %r2904, 3;
	shf.l.wrap.b32 	%r2908, %r2904, %r2903, 3;
	mov.b64 	%rd3130, {%r2908, %r2907};
	xor.b64  	%rd3131, %rd3129, %rd3130;
	shr.u64 	%rd3132, %rd6895, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2909,%dummy}, %rd6895;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2910}, %rd6895;
	}
	shf.r.wrap.b32 	%r2911, %r2910, %r2909, 1;
	shf.r.wrap.b32 	%r2912, %r2909, %r2910, 1;
	mov.b64 	%rd3133, {%r2912, %r2911};
	xor.b64  	%rd3134, %rd3133, %rd3132;
	shf.r.wrap.b32 	%r2913, %r2910, %r2909, 8;
	shf.r.wrap.b32 	%r2914, %r2909, %r2910, 8;
	mov.b64 	%rd3135, {%r2914, %r2913};
	xor.b64  	%rd3136, %rd3134, %rd3135;
	add.s64 	%rd3137, %rd6884, %rd6894;
	add.s64 	%rd3138, %rd3137, %rd3131;
	add.s64 	%rd6894, %rd3138, %rd3136;
	shr.u64 	%rd3139, %rd6878, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2915,%dummy}, %rd6878;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2916}, %rd6878;
	}
	shf.r.wrap.b32 	%r2917, %r2916, %r2915, 19;
	shf.r.wrap.b32 	%r2918, %r2915, %r2916, 19;
	mov.b64 	%rd3140, {%r2918, %r2917};
	xor.b64  	%rd3141, %rd3140, %rd3139;
	shf.l.wrap.b32 	%r2919, %r2915, %r2916, 3;
	shf.l.wrap.b32 	%r2920, %r2916, %r2915, 3;
	mov.b64 	%rd3142, {%r2920, %r2919};
	xor.b64  	%rd3143, %rd3141, %rd3142;
	shr.u64 	%rd3144, %rd6896, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2921,%dummy}, %rd6896;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2922}, %rd6896;
	}
	shf.r.wrap.b32 	%r2923, %r2922, %r2921, 1;
	shf.r.wrap.b32 	%r2924, %r2921, %r2922, 1;
	mov.b64 	%rd3145, {%r2924, %r2923};
	xor.b64  	%rd3146, %rd3145, %rd3144;
	shf.r.wrap.b32 	%r2925, %r2922, %r2921, 8;
	shf.r.wrap.b32 	%r2926, %r2921, %r2922, 8;
	mov.b64 	%rd3147, {%r2926, %r2925};
	xor.b64  	%rd3148, %rd3146, %rd3147;
	add.s64 	%rd3149, %rd6883, %rd6895;
	add.s64 	%rd3150, %rd3149, %rd3143;
	add.s64 	%rd6895, %rd3150, %rd3148;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2927,%dummy}, %rd6894;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2928}, %rd6894;
	}
	shf.r.wrap.b32 	%r2929, %r2928, %r2927, 19;
	shf.r.wrap.b32 	%r2930, %r2927, %r2928, 19;
	mov.b64 	%rd3151, {%r2930, %r2929};
	shf.l.wrap.b32 	%r2931, %r2927, %r2928, 3;
	shf.l.wrap.b32 	%r2932, %r2928, %r2927, 3;
	mov.b64 	%rd3152, {%r2932, %r2931};
	shr.u64 	%rd3153, %rd6894, 6;
	xor.b64  	%rd3154, %rd3151, %rd3153;
	xor.b64  	%rd3155, %rd3154, %rd3152;
	shr.u64 	%rd3156, %rd6897, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2933,%dummy}, %rd6897;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2934}, %rd6897;
	}
	shf.r.wrap.b32 	%r2935, %r2934, %r2933, 1;
	shf.r.wrap.b32 	%r2936, %r2933, %r2934, 1;
	mov.b64 	%rd3157, {%r2936, %r2935};
	xor.b64  	%rd3158, %rd3157, %rd3156;
	shf.r.wrap.b32 	%r2937, %r2934, %r2933, 8;
	shf.r.wrap.b32 	%r2938, %r2933, %r2934, 8;
	mov.b64 	%rd3159, {%r2938, %r2937};
	xor.b64  	%rd3160, %rd3158, %rd3159;
	add.s64 	%rd3161, %rd6882, %rd6896;
	add.s64 	%rd3162, %rd3161, %rd3155;
	add.s64 	%rd6896, %rd3162, %rd3160;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2939,%dummy}, %rd6895;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2940}, %rd6895;
	}
	shf.r.wrap.b32 	%r2941, %r2940, %r2939, 19;
	shf.r.wrap.b32 	%r2942, %r2939, %r2940, 19;
	mov.b64 	%rd3163, {%r2942, %r2941};
	shf.l.wrap.b32 	%r2943, %r2939, %r2940, 3;
	shf.l.wrap.b32 	%r2944, %r2940, %r2939, 3;
	mov.b64 	%rd3164, {%r2944, %r2943};
	shr.u64 	%rd3165, %rd6895, 6;
	xor.b64  	%rd3166, %rd3163, %rd3165;
	xor.b64  	%rd3167, %rd3166, %rd3164;
	shr.u64 	%rd3168, %rd6898, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2945,%dummy}, %rd6898;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2946}, %rd6898;
	}
	shf.r.wrap.b32 	%r2947, %r2946, %r2945, 1;
	shf.r.wrap.b32 	%r2948, %r2945, %r2946, 1;
	mov.b64 	%rd3169, {%r2948, %r2947};
	xor.b64  	%rd3170, %rd3169, %rd3168;
	shf.r.wrap.b32 	%r2949, %r2946, %r2945, 8;
	shf.r.wrap.b32 	%r2950, %r2945, %r2946, 8;
	mov.b64 	%rd3171, {%r2950, %r2949};
	xor.b64  	%rd3172, %rd3170, %rd3171;
	add.s64 	%rd3173, %rd6881, %rd6897;
	add.s64 	%rd3174, %rd3173, %rd3167;
	add.s64 	%rd6897, %rd3174, %rd3172;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2951,%dummy}, %rd6896;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2952}, %rd6896;
	}
	shf.r.wrap.b32 	%r2953, %r2952, %r2951, 19;
	shf.r.wrap.b32 	%r2954, %r2951, %r2952, 19;
	mov.b64 	%rd3175, {%r2954, %r2953};
	shf.l.wrap.b32 	%r2955, %r2951, %r2952, 3;
	shf.l.wrap.b32 	%r2956, %r2952, %r2951, 3;
	mov.b64 	%rd3176, {%r2956, %r2955};
	shr.u64 	%rd3177, %rd6896, 6;
	xor.b64  	%rd3178, %rd3175, %rd3177;
	xor.b64  	%rd3179, %rd3178, %rd3176;
	shr.u64 	%rd3180, %rd6899, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2957,%dummy}, %rd6899;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2958}, %rd6899;
	}
	shf.r.wrap.b32 	%r2959, %r2958, %r2957, 1;
	shf.r.wrap.b32 	%r2960, %r2957, %r2958, 1;
	mov.b64 	%rd3181, {%r2960, %r2959};
	xor.b64  	%rd3182, %rd3181, %rd3180;
	shf.r.wrap.b32 	%r2961, %r2958, %r2957, 8;
	shf.r.wrap.b32 	%r2962, %r2957, %r2958, 8;
	mov.b64 	%rd3183, {%r2962, %r2961};
	xor.b64  	%rd3184, %rd3182, %rd3183;
	add.s64 	%rd3185, %rd6880, %rd6898;
	add.s64 	%rd3186, %rd3185, %rd3179;
	add.s64 	%rd6898, %rd3186, %rd3184;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2963,%dummy}, %rd6897;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2964}, %rd6897;
	}
	shf.r.wrap.b32 	%r2965, %r2964, %r2963, 19;
	shf.r.wrap.b32 	%r2966, %r2963, %r2964, 19;
	mov.b64 	%rd3187, {%r2966, %r2965};
	shf.l.wrap.b32 	%r2967, %r2963, %r2964, 3;
	shf.l.wrap.b32 	%r2968, %r2964, %r2963, 3;
	mov.b64 	%rd3188, {%r2968, %r2967};
	shr.u64 	%rd3189, %rd6897, 6;
	xor.b64  	%rd3190, %rd3187, %rd3189;
	xor.b64  	%rd3191, %rd3190, %rd3188;
	shr.u64 	%rd3192, %rd6900, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2969,%dummy}, %rd6900;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2970}, %rd6900;
	}
	shf.r.wrap.b32 	%r2971, %r2970, %r2969, 1;
	shf.r.wrap.b32 	%r2972, %r2969, %r2970, 1;
	mov.b64 	%rd3193, {%r2972, %r2971};
	xor.b64  	%rd3194, %rd3193, %rd3192;
	shf.r.wrap.b32 	%r2973, %r2970, %r2969, 8;
	shf.r.wrap.b32 	%r2974, %r2969, %r2970, 8;
	mov.b64 	%rd3195, {%r2974, %r2973};
	xor.b64  	%rd3196, %rd3194, %rd3195;
	add.s64 	%rd3197, %rd6879, %rd6899;
	add.s64 	%rd3198, %rd3197, %rd3191;
	add.s64 	%rd6899, %rd3198, %rd3196;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2975,%dummy}, %rd6898;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2976}, %rd6898;
	}
	shf.r.wrap.b32 	%r2977, %r2976, %r2975, 19;
	shf.r.wrap.b32 	%r2978, %r2975, %r2976, 19;
	mov.b64 	%rd3199, {%r2978, %r2977};
	shf.l.wrap.b32 	%r2979, %r2975, %r2976, 3;
	shf.l.wrap.b32 	%r2980, %r2976, %r2975, 3;
	mov.b64 	%rd3200, {%r2980, %r2979};
	shr.u64 	%rd3201, %rd6898, 6;
	xor.b64  	%rd3202, %rd3199, %rd3201;
	xor.b64  	%rd3203, %rd3202, %rd3200;
	shr.u64 	%rd3204, %rd6901, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2981,%dummy}, %rd6901;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2982}, %rd6901;
	}
	shf.r.wrap.b32 	%r2983, %r2982, %r2981, 1;
	shf.r.wrap.b32 	%r2984, %r2981, %r2982, 1;
	mov.b64 	%rd3205, {%r2984, %r2983};
	xor.b64  	%rd3206, %rd3205, %rd3204;
	shf.r.wrap.b32 	%r2985, %r2982, %r2981, 8;
	shf.r.wrap.b32 	%r2986, %r2981, %r2982, 8;
	mov.b64 	%rd3207, {%r2986, %r2985};
	xor.b64  	%rd3208, %rd3206, %rd3207;
	add.s64 	%rd3209, %rd6878, %rd6900;
	add.s64 	%rd3210, %rd3209, %rd3203;
	add.s64 	%rd6900, %rd3210, %rd3208;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2987,%dummy}, %rd6899;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2988}, %rd6899;
	}
	shf.r.wrap.b32 	%r2989, %r2988, %r2987, 19;
	shf.r.wrap.b32 	%r2990, %r2987, %r2988, 19;
	mov.b64 	%rd3211, {%r2990, %r2989};
	shf.l.wrap.b32 	%r2991, %r2987, %r2988, 3;
	shf.l.wrap.b32 	%r2992, %r2988, %r2987, 3;
	mov.b64 	%rd3212, {%r2992, %r2991};
	shr.u64 	%rd3213, %rd6899, 6;
	xor.b64  	%rd3214, %rd3211, %rd3213;
	xor.b64  	%rd3215, %rd3214, %rd3212;
	shr.u64 	%rd3216, %rd6885, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2993,%dummy}, %rd6885;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2994}, %rd6885;
	}
	shf.r.wrap.b32 	%r2995, %r2994, %r2993, 1;
	shf.r.wrap.b32 	%r2996, %r2993, %r2994, 1;
	mov.b64 	%rd3217, {%r2996, %r2995};
	xor.b64  	%rd3218, %rd3217, %rd3216;
	shf.r.wrap.b32 	%r2997, %r2994, %r2993, 8;
	shf.r.wrap.b32 	%r2998, %r2993, %r2994, 8;
	mov.b64 	%rd3219, {%r2998, %r2997};
	xor.b64  	%rd3220, %rd3218, %rd3219;
	add.s64 	%rd3221, %rd6894, %rd6901;
	add.s64 	%rd3222, %rd3221, %rd3215;
	add.s64 	%rd6901, %rd3222, %rd3220;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2999,%dummy}, %rd6900;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3000}, %rd6900;
	}
	shf.r.wrap.b32 	%r3001, %r3000, %r2999, 19;
	shf.r.wrap.b32 	%r3002, %r2999, %r3000, 19;
	mov.b64 	%rd3223, {%r3002, %r3001};
	shf.l.wrap.b32 	%r3003, %r2999, %r3000, 3;
	shf.l.wrap.b32 	%r3004, %r3000, %r2999, 3;
	mov.b64 	%rd3224, {%r3004, %r3003};
	shr.u64 	%rd3225, %rd6900, 6;
	xor.b64  	%rd3226, %rd3223, %rd3225;
	xor.b64  	%rd3227, %rd3226, %rd3224;
	shr.u64 	%rd3228, %rd6884, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3005,%dummy}, %rd6884;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3006}, %rd6884;
	}
	shf.r.wrap.b32 	%r3007, %r3006, %r3005, 1;
	shf.r.wrap.b32 	%r3008, %r3005, %r3006, 1;
	mov.b64 	%rd3229, {%r3008, %r3007};
	xor.b64  	%rd3230, %rd3229, %rd3228;
	shf.r.wrap.b32 	%r3009, %r3006, %r3005, 8;
	shf.r.wrap.b32 	%r3010, %r3005, %r3006, 8;
	mov.b64 	%rd3231, {%r3010, %r3009};
	xor.b64  	%rd3232, %rd3230, %rd3231;
	add.s64 	%rd3233, %rd6895, %rd6885;
	add.s64 	%rd3234, %rd3233, %rd3227;
	add.s64 	%rd6885, %rd3234, %rd3232;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3011,%dummy}, %rd6901;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3012}, %rd6901;
	}
	shf.r.wrap.b32 	%r3013, %r3012, %r3011, 19;
	shf.r.wrap.b32 	%r3014, %r3011, %r3012, 19;
	mov.b64 	%rd3235, {%r3014, %r3013};
	shf.l.wrap.b32 	%r3015, %r3011, %r3012, 3;
	shf.l.wrap.b32 	%r3016, %r3012, %r3011, 3;
	mov.b64 	%rd3236, {%r3016, %r3015};
	shr.u64 	%rd3237, %rd6901, 6;
	xor.b64  	%rd3238, %rd3235, %rd3237;
	xor.b64  	%rd3239, %rd3238, %rd3236;
	shr.u64 	%rd3240, %rd6883, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3017,%dummy}, %rd6883;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3018}, %rd6883;
	}
	shf.r.wrap.b32 	%r3019, %r3018, %r3017, 1;
	shf.r.wrap.b32 	%r3020, %r3017, %r3018, 1;
	mov.b64 	%rd3241, {%r3020, %r3019};
	xor.b64  	%rd3242, %rd3241, %rd3240;
	shf.r.wrap.b32 	%r3021, %r3018, %r3017, 8;
	shf.r.wrap.b32 	%r3022, %r3017, %r3018, 8;
	mov.b64 	%rd3243, {%r3022, %r3021};
	xor.b64  	%rd3244, %rd3242, %rd3243;
	add.s64 	%rd3245, %rd6896, %rd6884;
	add.s64 	%rd3246, %rd3245, %rd3239;
	add.s64 	%rd6884, %rd3246, %rd3244;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3023,%dummy}, %rd6885;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3024}, %rd6885;
	}
	shf.r.wrap.b32 	%r3025, %r3024, %r3023, 19;
	shf.r.wrap.b32 	%r3026, %r3023, %r3024, 19;
	mov.b64 	%rd3247, {%r3026, %r3025};
	shf.l.wrap.b32 	%r3027, %r3023, %r3024, 3;
	shf.l.wrap.b32 	%r3028, %r3024, %r3023, 3;
	mov.b64 	%rd3248, {%r3028, %r3027};
	shr.u64 	%rd3249, %rd6885, 6;
	xor.b64  	%rd3250, %rd3247, %rd3249;
	xor.b64  	%rd3251, %rd3250, %rd3248;
	shr.u64 	%rd3252, %rd6882, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3029,%dummy}, %rd6882;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3030}, %rd6882;
	}
	shf.r.wrap.b32 	%r3031, %r3030, %r3029, 1;
	shf.r.wrap.b32 	%r3032, %r3029, %r3030, 1;
	mov.b64 	%rd3253, {%r3032, %r3031};
	xor.b64  	%rd3254, %rd3253, %rd3252;
	shf.r.wrap.b32 	%r3033, %r3030, %r3029, 8;
	shf.r.wrap.b32 	%r3034, %r3029, %r3030, 8;
	mov.b64 	%rd3255, {%r3034, %r3033};
	xor.b64  	%rd3256, %rd3254, %rd3255;
	add.s64 	%rd3257, %rd6897, %rd6883;
	add.s64 	%rd3258, %rd3257, %rd3251;
	add.s64 	%rd6883, %rd3258, %rd3256;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3035,%dummy}, %rd6884;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3036}, %rd6884;
	}
	shf.r.wrap.b32 	%r3037, %r3036, %r3035, 19;
	shf.r.wrap.b32 	%r3038, %r3035, %r3036, 19;
	mov.b64 	%rd3259, {%r3038, %r3037};
	shf.l.wrap.b32 	%r3039, %r3035, %r3036, 3;
	shf.l.wrap.b32 	%r3040, %r3036, %r3035, 3;
	mov.b64 	%rd3260, {%r3040, %r3039};
	shr.u64 	%rd3261, %rd6884, 6;
	xor.b64  	%rd3262, %rd3259, %rd3261;
	xor.b64  	%rd3263, %rd3262, %rd3260;
	shr.u64 	%rd3264, %rd6881, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3041,%dummy}, %rd6881;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3042}, %rd6881;
	}
	shf.r.wrap.b32 	%r3043, %r3042, %r3041, 1;
	shf.r.wrap.b32 	%r3044, %r3041, %r3042, 1;
	mov.b64 	%rd3265, {%r3044, %r3043};
	xor.b64  	%rd3266, %rd3265, %rd3264;
	shf.r.wrap.b32 	%r3045, %r3042, %r3041, 8;
	shf.r.wrap.b32 	%r3046, %r3041, %r3042, 8;
	mov.b64 	%rd3267, {%r3046, %r3045};
	xor.b64  	%rd3268, %rd3266, %rd3267;
	add.s64 	%rd3269, %rd6898, %rd6882;
	add.s64 	%rd3270, %rd3269, %rd3263;
	add.s64 	%rd6882, %rd3270, %rd3268;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3047,%dummy}, %rd6883;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3048}, %rd6883;
	}
	shf.r.wrap.b32 	%r3049, %r3048, %r3047, 19;
	shf.r.wrap.b32 	%r3050, %r3047, %r3048, 19;
	mov.b64 	%rd3271, {%r3050, %r3049};
	shf.l.wrap.b32 	%r3051, %r3047, %r3048, 3;
	shf.l.wrap.b32 	%r3052, %r3048, %r3047, 3;
	mov.b64 	%rd3272, {%r3052, %r3051};
	shr.u64 	%rd3273, %rd6883, 6;
	xor.b64  	%rd3274, %rd3271, %rd3273;
	xor.b64  	%rd3275, %rd3274, %rd3272;
	shr.u64 	%rd3276, %rd6880, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3053,%dummy}, %rd6880;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3054}, %rd6880;
	}
	shf.r.wrap.b32 	%r3055, %r3054, %r3053, 1;
	shf.r.wrap.b32 	%r3056, %r3053, %r3054, 1;
	mov.b64 	%rd3277, {%r3056, %r3055};
	xor.b64  	%rd3278, %rd3277, %rd3276;
	shf.r.wrap.b32 	%r3057, %r3054, %r3053, 8;
	shf.r.wrap.b32 	%r3058, %r3053, %r3054, 8;
	mov.b64 	%rd3279, {%r3058, %r3057};
	xor.b64  	%rd3280, %rd3278, %rd3279;
	add.s64 	%rd3281, %rd6899, %rd6881;
	add.s64 	%rd3282, %rd3281, %rd3275;
	add.s64 	%rd6881, %rd3282, %rd3280;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3059,%dummy}, %rd6882;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3060}, %rd6882;
	}
	shf.r.wrap.b32 	%r3061, %r3060, %r3059, 19;
	shf.r.wrap.b32 	%r3062, %r3059, %r3060, 19;
	mov.b64 	%rd3283, {%r3062, %r3061};
	shf.l.wrap.b32 	%r3063, %r3059, %r3060, 3;
	shf.l.wrap.b32 	%r3064, %r3060, %r3059, 3;
	mov.b64 	%rd3284, {%r3064, %r3063};
	shr.u64 	%rd3285, %rd6882, 6;
	xor.b64  	%rd3286, %rd3283, %rd3285;
	xor.b64  	%rd3287, %rd3286, %rd3284;
	shr.u64 	%rd3288, %rd6879, 7;
	shf.r.wrap.b32 	%r3065, %r2904, %r2903, 1;
	shf.r.wrap.b32 	%r3066, %r2903, %r2904, 1;
	mov.b64 	%rd3289, {%r3066, %r3065};
	xor.b64  	%rd3290, %rd3289, %rd3288;
	shf.r.wrap.b32 	%r3067, %r2904, %r2903, 8;
	shf.r.wrap.b32 	%r3068, %r2903, %r2904, 8;
	mov.b64 	%rd3291, {%r3068, %r3067};
	xor.b64  	%rd3292, %rd3290, %rd3291;
	add.s64 	%rd3293, %rd6900, %rd6880;
	add.s64 	%rd3294, %rd3293, %rd3287;
	add.s64 	%rd6880, %rd3294, %rd3292;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3069,%dummy}, %rd6881;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3070}, %rd6881;
	}
	shf.r.wrap.b32 	%r3071, %r3070, %r3069, 19;
	shf.r.wrap.b32 	%r3072, %r3069, %r3070, 19;
	mov.b64 	%rd3295, {%r3072, %r3071};
	shf.l.wrap.b32 	%r3073, %r3069, %r3070, 3;
	shf.l.wrap.b32 	%r3074, %r3070, %r3069, 3;
	mov.b64 	%rd3296, {%r3074, %r3073};
	shr.u64 	%rd3297, %rd6881, 6;
	xor.b64  	%rd3298, %rd3295, %rd3297;
	xor.b64  	%rd3299, %rd3298, %rd3296;
	shr.u64 	%rd3300, %rd6878, 7;
	shf.r.wrap.b32 	%r3075, %r2916, %r2915, 1;
	shf.r.wrap.b32 	%r3076, %r2915, %r2916, 1;
	mov.b64 	%rd3301, {%r3076, %r3075};
	xor.b64  	%rd3302, %rd3301, %rd3300;
	shf.r.wrap.b32 	%r3077, %r2916, %r2915, 8;
	shf.r.wrap.b32 	%r3078, %r2915, %r2916, 8;
	mov.b64 	%rd3303, {%r3078, %r3077};
	xor.b64  	%rd3304, %rd3302, %rd3303;
	add.s64 	%rd3305, %rd6901, %rd6879;
	add.s64 	%rd3306, %rd3305, %rd3299;
	add.s64 	%rd6879, %rd3306, %rd3304;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3079,%dummy}, %rd6880;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3080}, %rd6880;
	}
	shf.r.wrap.b32 	%r3081, %r3080, %r3079, 19;
	shf.r.wrap.b32 	%r3082, %r3079, %r3080, 19;
	mov.b64 	%rd3307, {%r3082, %r3081};
	shf.l.wrap.b32 	%r3083, %r3079, %r3080, 3;
	shf.l.wrap.b32 	%r3084, %r3080, %r3079, 3;
	mov.b64 	%rd3308, {%r3084, %r3083};
	shr.u64 	%rd3309, %rd6880, 6;
	xor.b64  	%rd3310, %rd3307, %rd3309;
	xor.b64  	%rd3311, %rd3310, %rd3308;
	shf.r.wrap.b32 	%r3085, %r2928, %r2927, 1;
	shf.r.wrap.b32 	%r3086, %r2927, %r2928, 1;
	mov.b64 	%rd3312, {%r3086, %r3085};
	shf.r.wrap.b32 	%r3087, %r2928, %r2927, 8;
	shf.r.wrap.b32 	%r3088, %r2927, %r2928, 8;
	mov.b64 	%rd3313, {%r3088, %r3087};
	shr.u64 	%rd3314, %rd6894, 7;
	xor.b64  	%rd3315, %rd3312, %rd3314;
	xor.b64  	%rd3316, %rd3315, %rd3313;
	add.s64 	%rd3317, %rd6885, %rd6878;
	add.s64 	%rd3318, %rd3317, %rd3311;
	add.s64 	%rd6878, %rd3318, %rd3316;
	mul.wide.s32 	%rd3319, %r11804, 8;
	add.s64 	%rd3321, %rd2329, %rd3319;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3089,%dummy}, %rd6890;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3090}, %rd6890;
	}
	shf.r.wrap.b32 	%r3091, %r3090, %r3089, 18;
	shf.r.wrap.b32 	%r3092, %r3089, %r3090, 18;
	mov.b64 	%rd3322, {%r3092, %r3091};
	shf.r.wrap.b32 	%r3093, %r3090, %r3089, 14;
	shf.r.wrap.b32 	%r3094, %r3089, %r3090, 14;
	mov.b64 	%rd3323, {%r3094, %r3093};
	xor.b64  	%rd3324, %rd3322, %rd3323;
	shf.l.wrap.b32 	%r3095, %r3089, %r3090, 23;
	shf.l.wrap.b32 	%r3096, %r3090, %r3089, 23;
	mov.b64 	%rd3325, {%r3096, %r3095};
	xor.b64  	%rd3326, %rd3324, %rd3325;
	xor.b64  	%rd3327, %rd6891, %rd6892;
	and.b64  	%rd3328, %rd3327, %rd6890;
	xor.b64  	%rd3329, %rd3328, %rd6892;
	add.s64 	%rd3330, %rd3329, %rd6893;
	add.s64 	%rd3331, %rd3330, %rd6894;
	ld.const.u64 	%rd3332, [%rd3321];
	add.s64 	%rd3333, %rd3331, %rd3332;
	add.s64 	%rd3334, %rd3333, %rd3326;
	add.s64 	%rd3335, %rd3334, %rd6889;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3097}, %rd6886;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3098,%dummy}, %rd6886;
	}
	shf.l.wrap.b32 	%r3099, %r3098, %r3097, 30;
	shf.l.wrap.b32 	%r3100, %r3097, %r3098, 30;
	mov.b64 	%rd3336, {%r3100, %r3099};
	shf.r.wrap.b32 	%r3101, %r3097, %r3098, 28;
	shf.r.wrap.b32 	%r3102, %r3098, %r3097, 28;
	mov.b64 	%rd3337, {%r3102, %r3101};
	xor.b64  	%rd3338, %rd3336, %rd3337;
	shf.l.wrap.b32 	%r3103, %r3098, %r3097, 25;
	shf.l.wrap.b32 	%r3104, %r3097, %r3098, 25;
	mov.b64 	%rd3339, {%r3104, %r3103};
	xor.b64  	%rd3340, %rd3338, %rd3339;
	xor.b64  	%rd3341, %rd6886, %rd6887;
	xor.b64  	%rd3342, %rd6886, %rd6888;
	and.b64  	%rd3343, %rd3341, %rd3342;
	xor.b64  	%rd3344, %rd3343, %rd6886;
	add.s64 	%rd3345, %rd3334, %rd3344;
	add.s64 	%rd3346, %rd3345, %rd3340;
	add.s32 	%r3105, %r11804, 1;
	mul.wide.s32 	%rd3347, %r3105, 8;
	add.s64 	%rd3348, %rd2329, %rd3347;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3106,%dummy}, %rd3335;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3107}, %rd3335;
	}
	shf.r.wrap.b32 	%r3108, %r3107, %r3106, 14;
	shf.r.wrap.b32 	%r3109, %r3106, %r3107, 14;
	mov.b64 	%rd3349, {%r3109, %r3108};
	shf.r.wrap.b32 	%r3110, %r3107, %r3106, 18;
	shf.r.wrap.b32 	%r3111, %r3106, %r3107, 18;
	mov.b64 	%rd3350, {%r3111, %r3110};
	xor.b64  	%rd3351, %rd3350, %rd3349;
	shf.l.wrap.b32 	%r3112, %r3106, %r3107, 23;
	shf.l.wrap.b32 	%r3113, %r3107, %r3106, 23;
	mov.b64 	%rd3352, {%r3113, %r3112};
	xor.b64  	%rd3353, %rd3351, %rd3352;
	xor.b64  	%rd3354, %rd6890, %rd6891;
	and.b64  	%rd3355, %rd3335, %rd3354;
	xor.b64  	%rd3356, %rd3355, %rd6891;
	add.s64 	%rd3357, %rd6895, %rd6892;
	ld.const.u64 	%rd3358, [%rd3348];
	add.s64 	%rd3359, %rd3357, %rd3358;
	add.s64 	%rd3360, %rd3359, %rd3356;
	add.s64 	%rd3361, %rd3360, %rd3353;
	add.s64 	%rd3362, %rd3361, %rd6888;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3114,%dummy}, %rd3346;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3115}, %rd3346;
	}
	shf.r.wrap.b32 	%r3116, %r3115, %r3114, 28;
	shf.r.wrap.b32 	%r3117, %r3114, %r3115, 28;
	mov.b64 	%rd3363, {%r3117, %r3116};
	shf.l.wrap.b32 	%r3118, %r3114, %r3115, 30;
	shf.l.wrap.b32 	%r3119, %r3115, %r3114, 30;
	mov.b64 	%rd3364, {%r3119, %r3118};
	xor.b64  	%rd3365, %rd3364, %rd3363;
	shf.l.wrap.b32 	%r3120, %r3114, %r3115, 25;
	shf.l.wrap.b32 	%r3121, %r3115, %r3114, 25;
	mov.b64 	%rd3366, {%r3121, %r3120};
	xor.b64  	%rd3367, %rd3365, %rd3366;
	xor.b64  	%rd3368, %rd3346, %rd6887;
	xor.b64  	%rd3369, %rd3346, %rd6886;
	and.b64  	%rd3370, %rd3369, %rd3368;
	xor.b64  	%rd3371, %rd3370, %rd3346;
	add.s64 	%rd3372, %rd3361, %rd3371;
	add.s64 	%rd3373, %rd3372, %rd3367;
	add.s32 	%r3122, %r11804, 2;
	mul.wide.s32 	%rd3374, %r3122, 8;
	add.s64 	%rd3375, %rd2329, %rd3374;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3123,%dummy}, %rd3362;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3124}, %rd3362;
	}
	shf.r.wrap.b32 	%r3125, %r3124, %r3123, 14;
	shf.r.wrap.b32 	%r3126, %r3123, %r3124, 14;
	mov.b64 	%rd3376, {%r3126, %r3125};
	shf.r.wrap.b32 	%r3127, %r3124, %r3123, 18;
	shf.r.wrap.b32 	%r3128, %r3123, %r3124, 18;
	mov.b64 	%rd3377, {%r3128, %r3127};
	xor.b64  	%rd3378, %rd3377, %rd3376;
	shf.l.wrap.b32 	%r3129, %r3123, %r3124, 23;
	shf.l.wrap.b32 	%r3130, %r3124, %r3123, 23;
	mov.b64 	%rd3379, {%r3130, %r3129};
	xor.b64  	%rd3380, %rd3378, %rd3379;
	xor.b64  	%rd3381, %rd3335, %rd6890;
	and.b64  	%rd3382, %rd3362, %rd3381;
	xor.b64  	%rd3383, %rd3382, %rd6890;
	add.s64 	%rd3384, %rd6896, %rd6891;
	ld.const.u64 	%rd3385, [%rd3375];
	add.s64 	%rd3386, %rd3384, %rd3385;
	add.s64 	%rd3387, %rd3386, %rd3383;
	add.s64 	%rd3388, %rd3387, %rd3380;
	add.s64 	%rd3389, %rd3388, %rd6887;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3131,%dummy}, %rd3373;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3132}, %rd3373;
	}
	shf.r.wrap.b32 	%r3133, %r3132, %r3131, 28;
	shf.r.wrap.b32 	%r3134, %r3131, %r3132, 28;
	mov.b64 	%rd3390, {%r3134, %r3133};
	shf.l.wrap.b32 	%r3135, %r3131, %r3132, 30;
	shf.l.wrap.b32 	%r3136, %r3132, %r3131, 30;
	mov.b64 	%rd3391, {%r3136, %r3135};
	xor.b64  	%rd3392, %rd3391, %rd3390;
	shf.l.wrap.b32 	%r3137, %r3131, %r3132, 25;
	shf.l.wrap.b32 	%r3138, %r3132, %r3131, 25;
	mov.b64 	%rd3393, {%r3138, %r3137};
	xor.b64  	%rd3394, %rd3392, %rd3393;
	xor.b64  	%rd3395, %rd3373, %rd6886;
	xor.b64  	%rd3396, %rd3373, %rd3346;
	and.b64  	%rd3397, %rd3396, %rd3395;
	xor.b64  	%rd3398, %rd3397, %rd3373;
	add.s64 	%rd3399, %rd3388, %rd3398;
	add.s64 	%rd3400, %rd3399, %rd3394;
	add.s32 	%r3139, %r11804, 3;
	mul.wide.s32 	%rd3401, %r3139, 8;
	add.s64 	%rd3402, %rd2329, %rd3401;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3140,%dummy}, %rd3389;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3141}, %rd3389;
	}
	shf.r.wrap.b32 	%r3142, %r3141, %r3140, 14;
	shf.r.wrap.b32 	%r3143, %r3140, %r3141, 14;
	mov.b64 	%rd3403, {%r3143, %r3142};
	shf.r.wrap.b32 	%r3144, %r3141, %r3140, 18;
	shf.r.wrap.b32 	%r3145, %r3140, %r3141, 18;
	mov.b64 	%rd3404, {%r3145, %r3144};
	xor.b64  	%rd3405, %rd3404, %rd3403;
	shf.l.wrap.b32 	%r3146, %r3140, %r3141, 23;
	shf.l.wrap.b32 	%r3147, %r3141, %r3140, 23;
	mov.b64 	%rd3406, {%r3147, %r3146};
	xor.b64  	%rd3407, %rd3405, %rd3406;
	xor.b64  	%rd3408, %rd3362, %rd3335;
	and.b64  	%rd3409, %rd3389, %rd3408;
	xor.b64  	%rd3410, %rd3409, %rd3335;
	add.s64 	%rd3411, %rd6897, %rd6890;
	ld.const.u64 	%rd3412, [%rd3402];
	add.s64 	%rd3413, %rd3411, %rd3412;
	add.s64 	%rd3414, %rd3413, %rd3410;
	add.s64 	%rd3415, %rd3414, %rd3407;
	add.s64 	%rd3416, %rd3415, %rd6886;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3148,%dummy}, %rd3400;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3149}, %rd3400;
	}
	shf.r.wrap.b32 	%r3150, %r3149, %r3148, 28;
	shf.r.wrap.b32 	%r3151, %r3148, %r3149, 28;
	mov.b64 	%rd3417, {%r3151, %r3150};
	shf.l.wrap.b32 	%r3152, %r3148, %r3149, 30;
	shf.l.wrap.b32 	%r3153, %r3149, %r3148, 30;
	mov.b64 	%rd3418, {%r3153, %r3152};
	xor.b64  	%rd3419, %rd3418, %rd3417;
	shf.l.wrap.b32 	%r3154, %r3148, %r3149, 25;
	shf.l.wrap.b32 	%r3155, %r3149, %r3148, 25;
	mov.b64 	%rd3420, {%r3155, %r3154};
	xor.b64  	%rd3421, %rd3419, %rd3420;
	xor.b64  	%rd3422, %rd3400, %rd3346;
	xor.b64  	%rd3423, %rd3400, %rd3373;
	and.b64  	%rd3424, %rd3423, %rd3422;
	xor.b64  	%rd3425, %rd3424, %rd3400;
	add.s64 	%rd3426, %rd3415, %rd3425;
	add.s64 	%rd3427, %rd3426, %rd3421;
	add.s32 	%r3156, %r11804, 4;
	mul.wide.s32 	%rd3428, %r3156, 8;
	add.s64 	%rd3429, %rd2329, %rd3428;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3157,%dummy}, %rd3416;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3158}, %rd3416;
	}
	shf.r.wrap.b32 	%r3159, %r3158, %r3157, 14;
	shf.r.wrap.b32 	%r3160, %r3157, %r3158, 14;
	mov.b64 	%rd3430, {%r3160, %r3159};
	shf.r.wrap.b32 	%r3161, %r3158, %r3157, 18;
	shf.r.wrap.b32 	%r3162, %r3157, %r3158, 18;
	mov.b64 	%rd3431, {%r3162, %r3161};
	xor.b64  	%rd3432, %rd3431, %rd3430;
	shf.l.wrap.b32 	%r3163, %r3157, %r3158, 23;
	shf.l.wrap.b32 	%r3164, %r3158, %r3157, 23;
	mov.b64 	%rd3433, {%r3164, %r3163};
	xor.b64  	%rd3434, %rd3432, %rd3433;
	xor.b64  	%rd3435, %rd3389, %rd3362;
	and.b64  	%rd3436, %rd3416, %rd3435;
	xor.b64  	%rd3437, %rd3436, %rd3362;
	add.s64 	%rd3438, %rd3335, %rd6898;
	ld.const.u64 	%rd3439, [%rd3429];
	add.s64 	%rd3440, %rd3438, %rd3439;
	add.s64 	%rd3441, %rd3440, %rd3437;
	add.s64 	%rd3442, %rd3441, %rd3434;
	add.s64 	%rd3443, %rd3442, %rd3346;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3165,%dummy}, %rd3427;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3166}, %rd3427;
	}
	shf.r.wrap.b32 	%r3167, %r3166, %r3165, 28;
	shf.r.wrap.b32 	%r3168, %r3165, %r3166, 28;
	mov.b64 	%rd3444, {%r3168, %r3167};
	shf.l.wrap.b32 	%r3169, %r3165, %r3166, 30;
	shf.l.wrap.b32 	%r3170, %r3166, %r3165, 30;
	mov.b64 	%rd3445, {%r3170, %r3169};
	xor.b64  	%rd3446, %rd3445, %rd3444;
	shf.l.wrap.b32 	%r3171, %r3165, %r3166, 25;
	shf.l.wrap.b32 	%r3172, %r3166, %r3165, 25;
	mov.b64 	%rd3447, {%r3172, %r3171};
	xor.b64  	%rd3448, %rd3446, %rd3447;
	xor.b64  	%rd3449, %rd3427, %rd3373;
	xor.b64  	%rd3450, %rd3427, %rd3400;
	and.b64  	%rd3451, %rd3450, %rd3449;
	xor.b64  	%rd3452, %rd3451, %rd3427;
	add.s64 	%rd3453, %rd3442, %rd3452;
	add.s64 	%rd3454, %rd3453, %rd3448;
	add.s32 	%r3173, %r11804, 5;
	mul.wide.s32 	%rd3455, %r3173, 8;
	add.s64 	%rd3456, %rd2329, %rd3455;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3174,%dummy}, %rd3443;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3175}, %rd3443;
	}
	shf.r.wrap.b32 	%r3176, %r3175, %r3174, 14;
	shf.r.wrap.b32 	%r3177, %r3174, %r3175, 14;
	mov.b64 	%rd3457, {%r3177, %r3176};
	shf.r.wrap.b32 	%r3178, %r3175, %r3174, 18;
	shf.r.wrap.b32 	%r3179, %r3174, %r3175, 18;
	mov.b64 	%rd3458, {%r3179, %r3178};
	xor.b64  	%rd3459, %rd3458, %rd3457;
	shf.l.wrap.b32 	%r3180, %r3174, %r3175, 23;
	shf.l.wrap.b32 	%r3181, %r3175, %r3174, 23;
	mov.b64 	%rd3460, {%r3181, %r3180};
	xor.b64  	%rd3461, %rd3459, %rd3460;
	xor.b64  	%rd3462, %rd3416, %rd3389;
	and.b64  	%rd3463, %rd3443, %rd3462;
	xor.b64  	%rd3464, %rd3463, %rd3389;
	add.s64 	%rd3465, %rd3362, %rd6899;
	ld.const.u64 	%rd3466, [%rd3456];
	add.s64 	%rd3467, %rd3465, %rd3466;
	add.s64 	%rd3468, %rd3467, %rd3464;
	add.s64 	%rd3469, %rd3468, %rd3461;
	add.s64 	%rd3470, %rd3469, %rd3373;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3182,%dummy}, %rd3454;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3183}, %rd3454;
	}
	shf.r.wrap.b32 	%r3184, %r3183, %r3182, 28;
	shf.r.wrap.b32 	%r3185, %r3182, %r3183, 28;
	mov.b64 	%rd3471, {%r3185, %r3184};
	shf.l.wrap.b32 	%r3186, %r3182, %r3183, 30;
	shf.l.wrap.b32 	%r3187, %r3183, %r3182, 30;
	mov.b64 	%rd3472, {%r3187, %r3186};
	xor.b64  	%rd3473, %rd3472, %rd3471;
	shf.l.wrap.b32 	%r3188, %r3182, %r3183, 25;
	shf.l.wrap.b32 	%r3189, %r3183, %r3182, 25;
	mov.b64 	%rd3474, {%r3189, %r3188};
	xor.b64  	%rd3475, %rd3473, %rd3474;
	xor.b64  	%rd3476, %rd3454, %rd3400;
	xor.b64  	%rd3477, %rd3454, %rd3427;
	and.b64  	%rd3478, %rd3477, %rd3476;
	xor.b64  	%rd3479, %rd3478, %rd3454;
	add.s64 	%rd3480, %rd3469, %rd3479;
	add.s64 	%rd3481, %rd3480, %rd3475;
	add.s32 	%r3190, %r11804, 6;
	mul.wide.s32 	%rd3482, %r3190, 8;
	add.s64 	%rd3483, %rd2329, %rd3482;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3191,%dummy}, %rd3470;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3192}, %rd3470;
	}
	shf.r.wrap.b32 	%r3193, %r3192, %r3191, 14;
	shf.r.wrap.b32 	%r3194, %r3191, %r3192, 14;
	mov.b64 	%rd3484, {%r3194, %r3193};
	shf.r.wrap.b32 	%r3195, %r3192, %r3191, 18;
	shf.r.wrap.b32 	%r3196, %r3191, %r3192, 18;
	mov.b64 	%rd3485, {%r3196, %r3195};
	xor.b64  	%rd3486, %rd3485, %rd3484;
	shf.l.wrap.b32 	%r3197, %r3191, %r3192, 23;
	shf.l.wrap.b32 	%r3198, %r3192, %r3191, 23;
	mov.b64 	%rd3487, {%r3198, %r3197};
	xor.b64  	%rd3488, %rd3486, %rd3487;
	xor.b64  	%rd3489, %rd3443, %rd3416;
	and.b64  	%rd3490, %rd3470, %rd3489;
	xor.b64  	%rd3491, %rd3490, %rd3416;
	add.s64 	%rd3492, %rd3389, %rd6900;
	ld.const.u64 	%rd3493, [%rd3483];
	add.s64 	%rd3494, %rd3492, %rd3493;
	add.s64 	%rd3495, %rd3494, %rd3491;
	add.s64 	%rd3496, %rd3495, %rd3488;
	add.s64 	%rd3497, %rd3496, %rd3400;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3199,%dummy}, %rd3481;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3200}, %rd3481;
	}
	shf.r.wrap.b32 	%r3201, %r3200, %r3199, 28;
	shf.r.wrap.b32 	%r3202, %r3199, %r3200, 28;
	mov.b64 	%rd3498, {%r3202, %r3201};
	shf.l.wrap.b32 	%r3203, %r3199, %r3200, 30;
	shf.l.wrap.b32 	%r3204, %r3200, %r3199, 30;
	mov.b64 	%rd3499, {%r3204, %r3203};
	xor.b64  	%rd3500, %rd3499, %rd3498;
	shf.l.wrap.b32 	%r3205, %r3199, %r3200, 25;
	shf.l.wrap.b32 	%r3206, %r3200, %r3199, 25;
	mov.b64 	%rd3501, {%r3206, %r3205};
	xor.b64  	%rd3502, %rd3500, %rd3501;
	xor.b64  	%rd3503, %rd3481, %rd3427;
	xor.b64  	%rd3504, %rd3481, %rd3454;
	and.b64  	%rd3505, %rd3504, %rd3503;
	xor.b64  	%rd3506, %rd3505, %rd3481;
	add.s64 	%rd3507, %rd3496, %rd3506;
	add.s64 	%rd3508, %rd3507, %rd3502;
	add.s32 	%r3207, %r11804, 7;
	mul.wide.s32 	%rd3509, %r3207, 8;
	add.s64 	%rd3510, %rd2329, %rd3509;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3208,%dummy}, %rd3497;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3209}, %rd3497;
	}
	shf.r.wrap.b32 	%r3210, %r3209, %r3208, 14;
	shf.r.wrap.b32 	%r3211, %r3208, %r3209, 14;
	mov.b64 	%rd3511, {%r3211, %r3210};
	shf.r.wrap.b32 	%r3212, %r3209, %r3208, 18;
	shf.r.wrap.b32 	%r3213, %r3208, %r3209, 18;
	mov.b64 	%rd3512, {%r3213, %r3212};
	xor.b64  	%rd3513, %rd3512, %rd3511;
	shf.l.wrap.b32 	%r3214, %r3208, %r3209, 23;
	shf.l.wrap.b32 	%r3215, %r3209, %r3208, 23;
	mov.b64 	%rd3514, {%r3215, %r3214};
	xor.b64  	%rd3515, %rd3513, %rd3514;
	xor.b64  	%rd3516, %rd3470, %rd3443;
	and.b64  	%rd3517, %rd3497, %rd3516;
	xor.b64  	%rd3518, %rd3517, %rd3443;
	add.s64 	%rd3519, %rd3416, %rd6901;
	ld.const.u64 	%rd3520, [%rd3510];
	add.s64 	%rd3521, %rd3519, %rd3520;
	add.s64 	%rd3522, %rd3521, %rd3518;
	add.s64 	%rd3523, %rd3522, %rd3515;
	add.s64 	%rd3524, %rd3523, %rd3427;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3216,%dummy}, %rd3508;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3217}, %rd3508;
	}
	shf.r.wrap.b32 	%r3218, %r3217, %r3216, 28;
	shf.r.wrap.b32 	%r3219, %r3216, %r3217, 28;
	mov.b64 	%rd3525, {%r3219, %r3218};
	shf.l.wrap.b32 	%r3220, %r3216, %r3217, 30;
	shf.l.wrap.b32 	%r3221, %r3217, %r3216, 30;
	mov.b64 	%rd3526, {%r3221, %r3220};
	xor.b64  	%rd3527, %rd3526, %rd3525;
	shf.l.wrap.b32 	%r3222, %r3216, %r3217, 25;
	shf.l.wrap.b32 	%r3223, %r3217, %r3216, 25;
	mov.b64 	%rd3528, {%r3223, %r3222};
	xor.b64  	%rd3529, %rd3527, %rd3528;
	xor.b64  	%rd3530, %rd3508, %rd3454;
	xor.b64  	%rd3531, %rd3508, %rd3481;
	and.b64  	%rd3532, %rd3531, %rd3530;
	xor.b64  	%rd3533, %rd3532, %rd3508;
	add.s64 	%rd3534, %rd3523, %rd3533;
	add.s64 	%rd3535, %rd3534, %rd3529;
	add.s32 	%r3224, %r11804, 8;
	mul.wide.s32 	%rd3536, %r3224, 8;
	add.s64 	%rd3537, %rd2329, %rd3536;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3225,%dummy}, %rd3524;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3226}, %rd3524;
	}
	shf.r.wrap.b32 	%r3227, %r3226, %r3225, 14;
	shf.r.wrap.b32 	%r3228, %r3225, %r3226, 14;
	mov.b64 	%rd3538, {%r3228, %r3227};
	shf.r.wrap.b32 	%r3229, %r3226, %r3225, 18;
	shf.r.wrap.b32 	%r3230, %r3225, %r3226, 18;
	mov.b64 	%rd3539, {%r3230, %r3229};
	xor.b64  	%rd3540, %rd3539, %rd3538;
	shf.l.wrap.b32 	%r3231, %r3225, %r3226, 23;
	shf.l.wrap.b32 	%r3232, %r3226, %r3225, 23;
	mov.b64 	%rd3541, {%r3232, %r3231};
	xor.b64  	%rd3542, %rd3540, %rd3541;
	xor.b64  	%rd3543, %rd3497, %rd3470;
	and.b64  	%rd3544, %rd3524, %rd3543;
	xor.b64  	%rd3545, %rd3544, %rd3470;
	add.s64 	%rd3546, %rd3443, %rd6885;
	ld.const.u64 	%rd3547, [%rd3537];
	add.s64 	%rd3548, %rd3546, %rd3547;
	add.s64 	%rd3549, %rd3548, %rd3545;
	add.s64 	%rd3550, %rd3549, %rd3542;
	add.s64 	%rd3551, %rd3550, %rd3454;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3233,%dummy}, %rd3535;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3234}, %rd3535;
	}
	shf.r.wrap.b32 	%r3235, %r3234, %r3233, 28;
	shf.r.wrap.b32 	%r3236, %r3233, %r3234, 28;
	mov.b64 	%rd3552, {%r3236, %r3235};
	shf.l.wrap.b32 	%r3237, %r3233, %r3234, 30;
	shf.l.wrap.b32 	%r3238, %r3234, %r3233, 30;
	mov.b64 	%rd3553, {%r3238, %r3237};
	xor.b64  	%rd3554, %rd3553, %rd3552;
	shf.l.wrap.b32 	%r3239, %r3233, %r3234, 25;
	shf.l.wrap.b32 	%r3240, %r3234, %r3233, 25;
	mov.b64 	%rd3555, {%r3240, %r3239};
	xor.b64  	%rd3556, %rd3554, %rd3555;
	xor.b64  	%rd3557, %rd3535, %rd3481;
	xor.b64  	%rd3558, %rd3535, %rd3508;
	and.b64  	%rd3559, %rd3558, %rd3557;
	xor.b64  	%rd3560, %rd3559, %rd3535;
	add.s64 	%rd3561, %rd3550, %rd3560;
	add.s64 	%rd3562, %rd3561, %rd3556;
	add.s32 	%r3241, %r11804, 9;
	mul.wide.s32 	%rd3563, %r3241, 8;
	add.s64 	%rd3564, %rd2329, %rd3563;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3242,%dummy}, %rd3551;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3243}, %rd3551;
	}
	shf.r.wrap.b32 	%r3244, %r3243, %r3242, 14;
	shf.r.wrap.b32 	%r3245, %r3242, %r3243, 14;
	mov.b64 	%rd3565, {%r3245, %r3244};
	shf.r.wrap.b32 	%r3246, %r3243, %r3242, 18;
	shf.r.wrap.b32 	%r3247, %r3242, %r3243, 18;
	mov.b64 	%rd3566, {%r3247, %r3246};
	xor.b64  	%rd3567, %rd3566, %rd3565;
	shf.l.wrap.b32 	%r3248, %r3242, %r3243, 23;
	shf.l.wrap.b32 	%r3249, %r3243, %r3242, 23;
	mov.b64 	%rd3568, {%r3249, %r3248};
	xor.b64  	%rd3569, %rd3567, %rd3568;
	xor.b64  	%rd3570, %rd3524, %rd3497;
	and.b64  	%rd3571, %rd3551, %rd3570;
	xor.b64  	%rd3572, %rd3571, %rd3497;
	add.s64 	%rd3573, %rd3470, %rd6884;
	ld.const.u64 	%rd3574, [%rd3564];
	add.s64 	%rd3575, %rd3573, %rd3574;
	add.s64 	%rd3576, %rd3575, %rd3572;
	add.s64 	%rd3577, %rd3576, %rd3569;
	add.s64 	%rd3578, %rd3577, %rd3481;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3250,%dummy}, %rd3562;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3251}, %rd3562;
	}
	shf.r.wrap.b32 	%r3252, %r3251, %r3250, 28;
	shf.r.wrap.b32 	%r3253, %r3250, %r3251, 28;
	mov.b64 	%rd3579, {%r3253, %r3252};
	shf.l.wrap.b32 	%r3254, %r3250, %r3251, 30;
	shf.l.wrap.b32 	%r3255, %r3251, %r3250, 30;
	mov.b64 	%rd3580, {%r3255, %r3254};
	xor.b64  	%rd3581, %rd3580, %rd3579;
	shf.l.wrap.b32 	%r3256, %r3250, %r3251, 25;
	shf.l.wrap.b32 	%r3257, %r3251, %r3250, 25;
	mov.b64 	%rd3582, {%r3257, %r3256};
	xor.b64  	%rd3583, %rd3581, %rd3582;
	xor.b64  	%rd3584, %rd3562, %rd3508;
	xor.b64  	%rd3585, %rd3562, %rd3535;
	and.b64  	%rd3586, %rd3585, %rd3584;
	xor.b64  	%rd3587, %rd3586, %rd3562;
	add.s64 	%rd3588, %rd3577, %rd3587;
	add.s64 	%rd3589, %rd3588, %rd3583;
	add.s32 	%r3258, %r11804, 10;
	mul.wide.s32 	%rd3590, %r3258, 8;
	add.s64 	%rd3591, %rd2329, %rd3590;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3259,%dummy}, %rd3578;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3260}, %rd3578;
	}
	shf.r.wrap.b32 	%r3261, %r3260, %r3259, 14;
	shf.r.wrap.b32 	%r3262, %r3259, %r3260, 14;
	mov.b64 	%rd3592, {%r3262, %r3261};
	shf.r.wrap.b32 	%r3263, %r3260, %r3259, 18;
	shf.r.wrap.b32 	%r3264, %r3259, %r3260, 18;
	mov.b64 	%rd3593, {%r3264, %r3263};
	xor.b64  	%rd3594, %rd3593, %rd3592;
	shf.l.wrap.b32 	%r3265, %r3259, %r3260, 23;
	shf.l.wrap.b32 	%r3266, %r3260, %r3259, 23;
	mov.b64 	%rd3595, {%r3266, %r3265};
	xor.b64  	%rd3596, %rd3594, %rd3595;
	xor.b64  	%rd3597, %rd3551, %rd3524;
	and.b64  	%rd3598, %rd3578, %rd3597;
	xor.b64  	%rd3599, %rd3598, %rd3524;
	add.s64 	%rd3600, %rd3497, %rd6883;
	ld.const.u64 	%rd3601, [%rd3591];
	add.s64 	%rd3602, %rd3600, %rd3601;
	add.s64 	%rd3603, %rd3602, %rd3599;
	add.s64 	%rd3604, %rd3603, %rd3596;
	add.s64 	%rd3605, %rd3604, %rd3508;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3267,%dummy}, %rd3589;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3268}, %rd3589;
	}
	shf.r.wrap.b32 	%r3269, %r3268, %r3267, 28;
	shf.r.wrap.b32 	%r3270, %r3267, %r3268, 28;
	mov.b64 	%rd3606, {%r3270, %r3269};
	shf.l.wrap.b32 	%r3271, %r3267, %r3268, 30;
	shf.l.wrap.b32 	%r3272, %r3268, %r3267, 30;
	mov.b64 	%rd3607, {%r3272, %r3271};
	xor.b64  	%rd3608, %rd3607, %rd3606;
	shf.l.wrap.b32 	%r3273, %r3267, %r3268, 25;
	shf.l.wrap.b32 	%r3274, %r3268, %r3267, 25;
	mov.b64 	%rd3609, {%r3274, %r3273};
	xor.b64  	%rd3610, %rd3608, %rd3609;
	xor.b64  	%rd3611, %rd3589, %rd3535;
	xor.b64  	%rd3612, %rd3589, %rd3562;
	and.b64  	%rd3613, %rd3612, %rd3611;
	xor.b64  	%rd3614, %rd3613, %rd3589;
	add.s64 	%rd3615, %rd3604, %rd3614;
	add.s64 	%rd3616, %rd3615, %rd3610;
	add.s32 	%r3275, %r11804, 11;
	mul.wide.s32 	%rd3617, %r3275, 8;
	add.s64 	%rd3618, %rd2329, %rd3617;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3276,%dummy}, %rd3605;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3277}, %rd3605;
	}
	shf.r.wrap.b32 	%r3278, %r3277, %r3276, 14;
	shf.r.wrap.b32 	%r3279, %r3276, %r3277, 14;
	mov.b64 	%rd3619, {%r3279, %r3278};
	shf.r.wrap.b32 	%r3280, %r3277, %r3276, 18;
	shf.r.wrap.b32 	%r3281, %r3276, %r3277, 18;
	mov.b64 	%rd3620, {%r3281, %r3280};
	xor.b64  	%rd3621, %rd3620, %rd3619;
	shf.l.wrap.b32 	%r3282, %r3276, %r3277, 23;
	shf.l.wrap.b32 	%r3283, %r3277, %r3276, 23;
	mov.b64 	%rd3622, {%r3283, %r3282};
	xor.b64  	%rd3623, %rd3621, %rd3622;
	xor.b64  	%rd3624, %rd3578, %rd3551;
	and.b64  	%rd3625, %rd3605, %rd3624;
	xor.b64  	%rd3626, %rd3625, %rd3551;
	add.s64 	%rd3627, %rd3524, %rd6882;
	ld.const.u64 	%rd3628, [%rd3618];
	add.s64 	%rd3629, %rd3627, %rd3628;
	add.s64 	%rd3630, %rd3629, %rd3626;
	add.s64 	%rd3631, %rd3630, %rd3623;
	add.s64 	%rd3632, %rd3631, %rd3535;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3284,%dummy}, %rd3616;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3285}, %rd3616;
	}
	shf.r.wrap.b32 	%r3286, %r3285, %r3284, 28;
	shf.r.wrap.b32 	%r3287, %r3284, %r3285, 28;
	mov.b64 	%rd3633, {%r3287, %r3286};
	shf.l.wrap.b32 	%r3288, %r3284, %r3285, 30;
	shf.l.wrap.b32 	%r3289, %r3285, %r3284, 30;
	mov.b64 	%rd3634, {%r3289, %r3288};
	xor.b64  	%rd3635, %rd3634, %rd3633;
	shf.l.wrap.b32 	%r3290, %r3284, %r3285, 25;
	shf.l.wrap.b32 	%r3291, %r3285, %r3284, 25;
	mov.b64 	%rd3636, {%r3291, %r3290};
	xor.b64  	%rd3637, %rd3635, %rd3636;
	xor.b64  	%rd3638, %rd3616, %rd3562;
	xor.b64  	%rd3639, %rd3616, %rd3589;
	and.b64  	%rd3640, %rd3639, %rd3638;
	xor.b64  	%rd3641, %rd3640, %rd3616;
	add.s64 	%rd3642, %rd3631, %rd3641;
	add.s64 	%rd3643, %rd3642, %rd3637;
	add.s32 	%r3292, %r11804, 12;
	mul.wide.s32 	%rd3644, %r3292, 8;
	add.s64 	%rd3645, %rd2329, %rd3644;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3293,%dummy}, %rd3632;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3294}, %rd3632;
	}
	shf.r.wrap.b32 	%r3295, %r3294, %r3293, 14;
	shf.r.wrap.b32 	%r3296, %r3293, %r3294, 14;
	mov.b64 	%rd3646, {%r3296, %r3295};
	shf.r.wrap.b32 	%r3297, %r3294, %r3293, 18;
	shf.r.wrap.b32 	%r3298, %r3293, %r3294, 18;
	mov.b64 	%rd3647, {%r3298, %r3297};
	xor.b64  	%rd3648, %rd3647, %rd3646;
	shf.l.wrap.b32 	%r3299, %r3293, %r3294, 23;
	shf.l.wrap.b32 	%r3300, %r3294, %r3293, 23;
	mov.b64 	%rd3649, {%r3300, %r3299};
	xor.b64  	%rd3650, %rd3648, %rd3649;
	xor.b64  	%rd3651, %rd3605, %rd3578;
	and.b64  	%rd3652, %rd3632, %rd3651;
	xor.b64  	%rd3653, %rd3652, %rd3578;
	add.s64 	%rd3654, %rd3551, %rd6881;
	ld.const.u64 	%rd3655, [%rd3645];
	add.s64 	%rd3656, %rd3654, %rd3655;
	add.s64 	%rd3657, %rd3656, %rd3653;
	add.s64 	%rd3658, %rd3657, %rd3650;
	add.s64 	%rd6893, %rd3658, %rd3562;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3301,%dummy}, %rd3643;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3302}, %rd3643;
	}
	shf.r.wrap.b32 	%r3303, %r3302, %r3301, 28;
	shf.r.wrap.b32 	%r3304, %r3301, %r3302, 28;
	mov.b64 	%rd3659, {%r3304, %r3303};
	shf.l.wrap.b32 	%r3305, %r3301, %r3302, 30;
	shf.l.wrap.b32 	%r3306, %r3302, %r3301, 30;
	mov.b64 	%rd3660, {%r3306, %r3305};
	xor.b64  	%rd3661, %rd3660, %rd3659;
	shf.l.wrap.b32 	%r3307, %r3301, %r3302, 25;
	shf.l.wrap.b32 	%r3308, %r3302, %r3301, 25;
	mov.b64 	%rd3662, {%r3308, %r3307};
	xor.b64  	%rd3663, %rd3661, %rd3662;
	xor.b64  	%rd3664, %rd3643, %rd3589;
	xor.b64  	%rd3665, %rd3643, %rd3616;
	and.b64  	%rd3666, %rd3665, %rd3664;
	xor.b64  	%rd3667, %rd3666, %rd3643;
	add.s64 	%rd3668, %rd3658, %rd3667;
	add.s64 	%rd6889, %rd3668, %rd3663;
	add.s32 	%r3309, %r11804, 13;
	mul.wide.s32 	%rd3669, %r3309, 8;
	add.s64 	%rd3670, %rd2329, %rd3669;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3310,%dummy}, %rd6893;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3311}, %rd6893;
	}
	shf.r.wrap.b32 	%r3312, %r3311, %r3310, 14;
	shf.r.wrap.b32 	%r3313, %r3310, %r3311, 14;
	mov.b64 	%rd3671, {%r3313, %r3312};
	shf.r.wrap.b32 	%r3314, %r3311, %r3310, 18;
	shf.r.wrap.b32 	%r3315, %r3310, %r3311, 18;
	mov.b64 	%rd3672, {%r3315, %r3314};
	xor.b64  	%rd3673, %rd3672, %rd3671;
	shf.l.wrap.b32 	%r3316, %r3310, %r3311, 23;
	shf.l.wrap.b32 	%r3317, %r3311, %r3310, 23;
	mov.b64 	%rd3674, {%r3317, %r3316};
	xor.b64  	%rd3675, %rd3673, %rd3674;
	xor.b64  	%rd3676, %rd3632, %rd3605;
	and.b64  	%rd3677, %rd6893, %rd3676;
	xor.b64  	%rd3678, %rd3677, %rd3605;
	add.s64 	%rd3679, %rd3578, %rd6880;
	ld.const.u64 	%rd3680, [%rd3670];
	add.s64 	%rd3681, %rd3679, %rd3680;
	add.s64 	%rd3682, %rd3681, %rd3678;
	add.s64 	%rd3683, %rd3682, %rd3675;
	add.s64 	%rd6892, %rd3683, %rd3589;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3318,%dummy}, %rd6889;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3319}, %rd6889;
	}
	shf.r.wrap.b32 	%r3320, %r3319, %r3318, 28;
	shf.r.wrap.b32 	%r3321, %r3318, %r3319, 28;
	mov.b64 	%rd3684, {%r3321, %r3320};
	shf.l.wrap.b32 	%r3322, %r3318, %r3319, 30;
	shf.l.wrap.b32 	%r3323, %r3319, %r3318, 30;
	mov.b64 	%rd3685, {%r3323, %r3322};
	xor.b64  	%rd3686, %rd3685, %rd3684;
	shf.l.wrap.b32 	%r3324, %r3318, %r3319, 25;
	shf.l.wrap.b32 	%r3325, %r3319, %r3318, 25;
	mov.b64 	%rd3687, {%r3325, %r3324};
	xor.b64  	%rd3688, %rd3686, %rd3687;
	xor.b64  	%rd3689, %rd6889, %rd3616;
	xor.b64  	%rd3690, %rd6889, %rd3643;
	and.b64  	%rd3691, %rd3690, %rd3689;
	xor.b64  	%rd3692, %rd3691, %rd6889;
	add.s64 	%rd3693, %rd3683, %rd3692;
	add.s64 	%rd6888, %rd3693, %rd3688;
	add.s32 	%r3326, %r11804, 14;
	mul.wide.s32 	%rd3694, %r3326, 8;
	add.s64 	%rd3695, %rd2329, %rd3694;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3327,%dummy}, %rd6892;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3328}, %rd6892;
	}
	shf.r.wrap.b32 	%r3329, %r3328, %r3327, 14;
	shf.r.wrap.b32 	%r3330, %r3327, %r3328, 14;
	mov.b64 	%rd3696, {%r3330, %r3329};
	shf.r.wrap.b32 	%r3331, %r3328, %r3327, 18;
	shf.r.wrap.b32 	%r3332, %r3327, %r3328, 18;
	mov.b64 	%rd3697, {%r3332, %r3331};
	xor.b64  	%rd3698, %rd3697, %rd3696;
	shf.l.wrap.b32 	%r3333, %r3327, %r3328, 23;
	shf.l.wrap.b32 	%r3334, %r3328, %r3327, 23;
	mov.b64 	%rd3699, {%r3334, %r3333};
	xor.b64  	%rd3700, %rd3698, %rd3699;
	xor.b64  	%rd3701, %rd6893, %rd3632;
	and.b64  	%rd3702, %rd6892, %rd3701;
	xor.b64  	%rd3703, %rd3702, %rd3632;
	add.s64 	%rd3704, %rd3605, %rd6879;
	ld.const.u64 	%rd3705, [%rd3695];
	add.s64 	%rd3706, %rd3704, %rd3705;
	add.s64 	%rd3707, %rd3706, %rd3703;
	add.s64 	%rd3708, %rd3707, %rd3700;
	add.s64 	%rd6891, %rd3708, %rd3616;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3335,%dummy}, %rd6888;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3336}, %rd6888;
	}
	shf.r.wrap.b32 	%r3337, %r3336, %r3335, 28;
	shf.r.wrap.b32 	%r3338, %r3335, %r3336, 28;
	mov.b64 	%rd3709, {%r3338, %r3337};
	shf.l.wrap.b32 	%r3339, %r3335, %r3336, 30;
	shf.l.wrap.b32 	%r3340, %r3336, %r3335, 30;
	mov.b64 	%rd3710, {%r3340, %r3339};
	xor.b64  	%rd3711, %rd3710, %rd3709;
	shf.l.wrap.b32 	%r3341, %r3335, %r3336, 25;
	shf.l.wrap.b32 	%r3342, %r3336, %r3335, 25;
	mov.b64 	%rd3712, {%r3342, %r3341};
	xor.b64  	%rd3713, %rd3711, %rd3712;
	xor.b64  	%rd3714, %rd6888, %rd3643;
	xor.b64  	%rd3715, %rd6888, %rd6889;
	and.b64  	%rd3716, %rd3715, %rd3714;
	xor.b64  	%rd3717, %rd3716, %rd6888;
	add.s64 	%rd3718, %rd3708, %rd3717;
	add.s64 	%rd6887, %rd3718, %rd3713;
	add.s32 	%r3343, %r11804, 15;
	mul.wide.s32 	%rd3719, %r3343, 8;
	add.s64 	%rd3720, %rd2329, %rd3719;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3344,%dummy}, %rd6891;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3345}, %rd6891;
	}
	shf.r.wrap.b32 	%r3346, %r3345, %r3344, 14;
	shf.r.wrap.b32 	%r3347, %r3344, %r3345, 14;
	mov.b64 	%rd3721, {%r3347, %r3346};
	shf.r.wrap.b32 	%r3348, %r3345, %r3344, 18;
	shf.r.wrap.b32 	%r3349, %r3344, %r3345, 18;
	mov.b64 	%rd3722, {%r3349, %r3348};
	xor.b64  	%rd3723, %rd3722, %rd3721;
	shf.l.wrap.b32 	%r3350, %r3344, %r3345, 23;
	shf.l.wrap.b32 	%r3351, %r3345, %r3344, 23;
	mov.b64 	%rd3724, {%r3351, %r3350};
	xor.b64  	%rd3725, %rd3723, %rd3724;
	xor.b64  	%rd3726, %rd6892, %rd6893;
	and.b64  	%rd3727, %rd6891, %rd3726;
	xor.b64  	%rd3728, %rd3727, %rd6893;
	add.s64 	%rd3729, %rd3632, %rd6878;
	ld.const.u64 	%rd3730, [%rd3720];
	add.s64 	%rd3731, %rd3729, %rd3730;
	add.s64 	%rd3732, %rd3731, %rd3728;
	add.s64 	%rd3733, %rd3732, %rd3725;
	add.s64 	%rd6890, %rd3733, %rd3643;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r3352,%dummy}, %rd6887;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r3353}, %rd6887;
	}
	shf.r.wrap.b32 	%r3354, %r3353, %r3352, 28;
	shf.r.wrap.b32 	%r3355, %r3352, %r3353, 28;
	mov.b64 	%rd3734, {%r3355, %r3354};
	shf.l.wrap.b32 	%r3356, %r3352, %r3353, 30;
	shf.l.wrap.b32 	%r3357, %r3353, %r3352, 30;
	mov.b64 	%rd3735, {%r3357, %r3356};
	xor.b64  	%rd3736, %rd3735, %rd3734;
	shf.l.wrap.b32 	%r3358, %r3352, %r3353, 25;
	shf.l.wrap.b32 	%r3359, %r3353, %r3352, 25;
	mov.b64 	%rd3737, {%r3359, %r3358};
	xor.b64  	%rd3738, %rd3736, %rd3737;
	xor.b64  	%rd3739, %rd6887, %rd6889;
	xor.b64  	%rd3740, %rd6887, %rd6888;
	and.b64  	%rd3741, %rd3740, %rd3739;
	xor.b64  	%rd3742, %rd3741, %rd6887;
	add.s64 	%rd3743, %rd3733, %rd3742;
	add.s64 	%rd6886, %rd3743, %rd3738;
	add.s32 	%r11804, %r11804, 16;
	setp.lt.s32	%p213, %r11804, 80;
	@%p213 bra 	BB5_353;

	add.s64 	%rd6966, %rd6893, 6620516959819538809;
	add.s64 	%rd6967, %rd6892, 2270897969802886507;
	add.s64 	%rd6968, %rd6891, -7276294671716946913;
	add.s64 	%rd6969, %rd6890, 5840696475078001361;
	add.s64 	%rd6970, %rd6889, -6534734903238641935;
	add.s64 	%rd6971, %rd6888, 4354685564936845355;
	add.s64 	%rd6972, %rd6887, -4942790177534073029;
	add.s64 	%rd6973, %rd6886, 7640891576956012808;
	add.s32 	%r11803, %r11803, 1;
	setp.lt.u32	%p214, %r11803, %r763;
	@%p214 bra 	BB5_352;

	st.local.u32 	[%rd45], %r106;
	st.local.u32 	[%rd46], %r114;
	st.local.u32 	[%rd47], %r107;
	st.local.u32 	[%rd48], %r115;
	st.local.u32 	[%rd49], %r108;
	st.local.u32 	[%rd50], %r116;
	st.local.u32 	[%rd51], %r109;
	st.local.u32 	[%rd52], %r117;
	st.local.u32 	[%rd53], %r110;
	st.local.u32 	[%rd54], %r118;
	st.local.u32 	[%rd55], %r111;
	st.local.u32 	[%rd56], %r119;
	st.local.u32 	[%rd57], %r112;
	st.local.u32 	[%rd58], %r120;
	st.local.u32 	[%rd59], %r113;
	st.local.u32 	[%rd60], %r121;

BB5_685:
	mov.b32	%r11752, %envreg3;
	mov.u32 	%r11751, %ntid.x;
	mov.u32 	%r11750, %ctaid.x;
	mov.u32 	%r11749, %tid.x;
	mad.lo.s32 	%r11748, %r11750, %r11751, %r11752;
	add.s32 	%r11747, %r11748, %r11749;
	mul.wide.s32 	%rd6812, %r11747, 64;
	ld.param.u64 	%rd6811, [m07900_loop_param_4];
	add.s64 	%rd6810, %rd6811, %rd6812;
	add.s64 	%rd6809, %rd6810, 56;
	mov.b32	%r11746, %envreg3;
	mov.u32 	%r11745, %ntid.x;
	mov.u32 	%r11744, %ctaid.x;
	mov.u32 	%r11743, %tid.x;
	mad.lo.s32 	%r11742, %r11744, %r11745, %r11746;
	add.s32 	%r11741, %r11742, %r11743;
	mul.wide.s32 	%rd6808, %r11741, 64;
	ld.param.u64 	%rd6807, [m07900_loop_param_4];
	add.s64 	%rd6806, %rd6807, %rd6808;
	add.s64 	%rd6805, %rd6806, 48;
	mov.u32 	%r11740, %ntid.x;
	mov.u32 	%r11739, %ctaid.x;
	mov.b32	%r11738, %envreg3;
	mov.u32 	%r11737, %tid.x;
	mad.lo.s32 	%r11736, %r11739, %r11740, %r11738;
	add.s32 	%r11735, %r11736, %r11737;
	mul.wide.s32 	%rd6804, %r11735, 64;
	ld.param.u64 	%rd6803, [m07900_loop_param_4];
	add.s64 	%rd6802, %rd6803, %rd6804;
	add.s64 	%rd6801, %rd6802, 40;
	add.s64 	%rd6800, %rd6802, 32;
	add.s64 	%rd6799, %rd6802, 24;
	mov.u32 	%r11733, %ntid.x;
	mov.u32 	%r11732, %ctaid.x;
	mov.b32	%r11731, %envreg3;
	mov.u32 	%r11730, %tid.x;
	mad.lo.s32 	%r11729, %r11732, %r11733, %r11731;
	add.s32 	%r11728, %r11729, %r11730;
	mul.wide.s32 	%rd6795, %r11728, 64;
	ld.param.u64 	%rd6794, [m07900_loop_param_4];
	add.s64 	%rd6793, %rd6794, %rd6795;
	add.s64 	%rd6792, %rd6793, 16;
	add.s64 	%rd6791, %rd6793, 8;
	st.global.u64 	[%rd6793], %rd6973;
	st.global.u64 	[%rd6791], %rd6972;
	st.global.u64 	[%rd6792], %rd6971;
	st.global.u64 	[%rd6799], %rd6970;
	st.global.u64 	[%rd6800], %rd6969;
	st.global.u64 	[%rd6801], %rd6968;
	st.global.u64 	[%rd6805], %rd6967;
	st.global.u64 	[%rd6809], %rd6966;

BB5_686:
	ret;
}

	// .globl	m07900_comp
.entry m07900_comp(
	.param .u64 .ptr .global .align 4 m07900_comp_param_0,
	.param .u64 .ptr .global .align 4 m07900_comp_param_1,
	.param .u64 .ptr .global .align 4 m07900_comp_param_2,
	.param .u64 .ptr .global .align 4 m07900_comp_param_3,
	.param .u64 .ptr .global .align 8 m07900_comp_param_4,
	.param .u64 .ptr .global .align 1 m07900_comp_param_5,
	.param .u64 .ptr .global .align 4 m07900_comp_param_6,
	.param .u64 .ptr .global .align 4 m07900_comp_param_7,
	.param .u64 .ptr .global .align 4 m07900_comp_param_8,
	.param .u64 .ptr .global .align 4 m07900_comp_param_9,
	.param .u64 .ptr .global .align 4 m07900_comp_param_10,
	.param .u64 .ptr .global .align 4 m07900_comp_param_11,
	.param .u64 .ptr .global .align 4 m07900_comp_param_12,
	.param .u64 .ptr .global .align 4 m07900_comp_param_13,
	.param .u64 .ptr .global .align 4 m07900_comp_param_14,
	.param .u64 .ptr .global .align 4 m07900_comp_param_15,
	.param .u64 .ptr .global .align 4 m07900_comp_param_16,
	.param .u64 .ptr .global .align 4 m07900_comp_param_17,
	.param .u64 .ptr .global .align 1 m07900_comp_param_18,
	.param .u64 .ptr .global .align 4 m07900_comp_param_19,
	.param .u64 .ptr .global .align 4 m07900_comp_param_20,
	.param .u64 .ptr .global .align 4 m07900_comp_param_21,
	.param .u64 .ptr .global .align 4 m07900_comp_param_22,
	.param .u64 .ptr .global .align 4 m07900_comp_param_23,
	.param .u32 m07900_comp_param_24,
	.param .u32 m07900_comp_param_25,
	.param .u32 m07900_comp_param_26,
	.param .u32 m07900_comp_param_27,
	.param .u32 m07900_comp_param_28,
	.param .u32 m07900_comp_param_29,
	.param .u32 m07900_comp_param_30,
	.param .u32 m07900_comp_param_31,
	.param .u32 m07900_comp_param_32,
	.param .u32 m07900_comp_param_33,
	.param .u64 m07900_comp_param_34
)
{
	.reg .pred 	%p<25>;
	.reg .b32 	%r<116>;
	.reg .b64 	%rd<58>;


	ld.param.u64 	%rd4, [m07900_comp_param_4];
	ld.param.u64 	%rd5, [m07900_comp_param_6];
	ld.param.u64 	%rd6, [m07900_comp_param_7];
	ld.param.u64 	%rd7, [m07900_comp_param_8];
	ld.param.u64 	%rd8, [m07900_comp_param_9];
	ld.param.u64 	%rd9, [m07900_comp_param_10];
	ld.param.u64 	%rd10, [m07900_comp_param_11];
	ld.param.u64 	%rd11, [m07900_comp_param_12];
	ld.param.u64 	%rd12, [m07900_comp_param_13];
	ld.param.u64 	%rd13, [m07900_comp_param_14];
	ld.param.u64 	%rd14, [m07900_comp_param_15];
	ld.param.u64 	%rd15, [m07900_comp_param_16];
	ld.param.u64 	%rd16, [m07900_comp_param_19];
	ld.param.u32 	%r22, [m07900_comp_param_24];
	ld.param.u32 	%r23, [m07900_comp_param_25];
	ld.param.u32 	%r24, [m07900_comp_param_26];
	ld.param.u32 	%r25, [m07900_comp_param_27];
	ld.param.u32 	%r26, [m07900_comp_param_31];
	ld.param.u32 	%r27, [m07900_comp_param_32];
	ld.param.u64 	%rd17, [m07900_comp_param_34];
	mov.b32	%r28, %envreg3;
	mov.u32 	%r29, %ctaid.x;
	mov.u32 	%r30, %ntid.x;
	mad.lo.s32 	%r31, %r29, %r30, %r28;
	mov.u32 	%r32, %tid.x;
	add.s32 	%r1, %r31, %r32;
	cvt.s64.s32	%rd18, %r1;
	setp.ge.u64	%p1, %rd18, %rd17;
	@%p1 bra 	BB6_29;

	mul.wide.s32 	%rd19, %r1, 64;
	add.s64 	%rd20, %rd4, %rd19;
	ld.global.u64 	%rd1, [%rd20];
	cvt.u32.u64	%r33, %rd1;
	ld.global.u64 	%rd2, [%rd20+8];
	shr.u64 	%rd21, %rd2, 32;
	cvt.u32.u64	%r2, %rd21;
	and.b32  	%r3, %r23, 31;
	shr.u32 	%r34, %r33, %r3;
	and.b32  	%r35, %r34, %r22;
	mul.wide.u32 	%rd22, %r35, 4;
	add.s64 	%rd23, %rd5, %rd22;
	and.b32  	%r36, %r33, 31;
	mov.u32 	%r37, 1;
	shl.b32 	%r4, %r37, %r36;
	ld.global.u32 	%r38, [%rd23];
	and.b32  	%r39, %r4, %r38;
	setp.eq.s32	%p2, %r39, 0;
	@%p2 bra 	BB6_29;

	shr.u64 	%rd24, %rd1, 32;
	cvt.u32.u64	%r40, %rd24;
	shr.u32 	%r41, %r40, %r3;
	and.b32  	%r42, %r41, %r22;
	mul.wide.u32 	%rd25, %r42, 4;
	add.s64 	%rd26, %rd6, %rd25;
	and.b32  	%r43, %r40, 31;
	shl.b32 	%r45, %r37, %r43;
	ld.global.u32 	%r46, [%rd26];
	and.b32  	%r47, %r46, %r45;
	setp.eq.s32	%p3, %r47, 0;
	@%p3 bra 	BB6_29;

	cvt.u32.u64	%r48, %rd2;
	shr.u32 	%r49, %r48, %r3;
	and.b32  	%r50, %r49, %r22;
	mul.wide.u32 	%rd27, %r50, 4;
	add.s64 	%rd28, %rd7, %rd27;
	and.b32  	%r51, %r48, 31;
	shl.b32 	%r53, %r37, %r51;
	ld.global.u32 	%r54, [%rd28];
	and.b32  	%r55, %r54, %r53;
	setp.eq.s32	%p4, %r55, 0;
	@%p4 bra 	BB6_29;

	shr.u32 	%r56, %r2, %r3;
	and.b32  	%r57, %r56, %r22;
	mul.wide.u32 	%rd29, %r57, 4;
	add.s64 	%rd30, %rd8, %rd29;
	and.b32  	%r58, %r2, 31;
	shl.b32 	%r5, %r37, %r58;
	ld.global.u32 	%r60, [%rd30];
	and.b32  	%r61, %r60, %r5;
	setp.eq.s32	%p5, %r61, 0;
	@%p5 bra 	BB6_29;

	and.b32  	%r6, %r24, 31;
	shr.u32 	%r63, %r33, %r6;
	and.b32  	%r64, %r63, %r22;
	mul.wide.u32 	%rd31, %r64, 4;
	add.s64 	%rd32, %rd9, %rd31;
	ld.global.u32 	%r65, [%rd32];
	and.b32  	%r66, %r65, %r4;
	setp.eq.s32	%p6, %r66, 0;
	@%p6 bra 	BB6_29;

	shr.u32 	%r68, %r40, %r6;
	and.b32  	%r69, %r68, %r22;
	mul.wide.u32 	%rd34, %r69, 4;
	add.s64 	%rd35, %rd10, %rd34;
	ld.global.u32 	%r73, [%rd35];
	and.b32  	%r74, %r73, %r45;
	setp.eq.s32	%p7, %r74, 0;
	@%p7 bra 	BB6_29;

	shr.u32 	%r76, %r48, %r6;
	and.b32  	%r77, %r76, %r22;
	mul.wide.u32 	%rd36, %r77, 4;
	add.s64 	%rd37, %rd11, %rd36;
	ld.global.u32 	%r81, [%rd37];
	and.b32  	%r82, %r81, %r53;
	setp.eq.s32	%p8, %r82, 0;
	@%p8 bra 	BB6_29;

	shr.u32 	%r83, %r2, %r6;
	and.b32  	%r84, %r83, %r22;
	mul.wide.u32 	%rd38, %r84, 4;
	add.s64 	%rd39, %rd12, %rd38;
	ld.global.u32 	%r85, [%rd39];
	and.b32  	%r86, %r85, %r5;
	setp.eq.s32	%p9, %r86, 0;
	@%p9 bra 	BB6_29;

	setp.eq.s32	%p10, %r26, 0;
	mov.u32 	%r113, 0;
	mov.u32 	%r87, -1;
	@%p10 bra 	BB6_23;

	mov.u32 	%r112, %r26;

BB6_11:
	shr.u32 	%r9, %r112, 1;
	add.s32 	%r115, %r9, %r113;
	cvt.u64.u32	%rd40, %r115;
	cvt.u64.u32	%rd41, %r27;
	add.s64 	%rd3, %rd40, %rd41;
	shl.b64 	%rd42, %rd3, 6;
	add.s64 	%rd43, %rd14, %rd42;
	ld.global.u32 	%r11, [%rd43+12];
	setp.gt.u32	%p11, %r2, %r11;
	mov.u32 	%r114, %r37;
	@%p11 bra 	BB6_21;

	setp.lt.u32	%p12, %r2, %r11;
	mov.u32 	%r91, -1;
	@%p12 bra 	BB6_13;
	bra.uni 	BB6_14;

BB6_13:
	mov.u32 	%r114, %r91;
	bra.uni 	BB6_21;

BB6_14:
	ld.global.u32 	%r12, [%rd43+8];
	setp.gt.u32	%p13, %r48, %r12;
	mov.u32 	%r114, %r37;
	@%p13 bra 	BB6_21;

	setp.lt.u32	%p14, %r48, %r12;
	@%p14 bra 	BB6_16;
	bra.uni 	BB6_17;

BB6_16:
	mov.u32 	%r114, %r91;
	bra.uni 	BB6_21;

BB6_17:
	ld.global.u32 	%r13, [%rd43+4];
	setp.gt.u32	%p15, %r40, %r13;
	mov.u32 	%r114, %r37;
	@%p15 bra 	BB6_21;

	setp.lt.u32	%p16, %r40, %r13;
	mov.u32 	%r114, %r91;
	@%p16 bra 	BB6_21;

	ld.global.u32 	%r14, [%rd43];
	setp.gt.u32	%p17, %r33, %r14;
	mov.u32 	%r114, %r37;
	@%p17 bra 	BB6_21;

	setp.lt.u32	%p18, %r33, %r14;
	selp.b32	%r114, -1, 0, %p18;

BB6_21:
	add.s32 	%r104, %r9, 1;
	setp.gt.s32	%p19, %r114, 0;
	selp.b32	%r105, %r104, 0, %p19;
	add.s32 	%r113, %r105, %r113;
	selp.b32	%r106, -1, 0, %p19;
	add.s32 	%r107, %r106, %r112;
	shr.u32 	%r112, %r107, 1;
	setp.eq.s32	%p20, %r114, 0;
	@%p20 bra 	BB6_24;

	setp.ne.s32	%p21, %r112, 0;
	@%p21 bra 	BB6_11;

BB6_23:
	mov.u32 	%r115, %r87;

BB6_24:
	setp.eq.s32	%p22, %r115, -1;
	@%p22 bra 	BB6_29;

	add.s32 	%r20, %r115, %r27;
	mul.wide.u32 	%rd54, %r20, 4;
	add.s64 	%rd55, %rd15, %rd54;
	atom.global.add.u32 	%r109, [%rd55], 1;
	setp.ne.s32	%p23, %r109, 0;
	@%p23 bra 	BB6_29;

	atom.global.add.u32 	%r21, [%rd16], 1;
	setp.lt.u32	%p24, %r21, %r26;
	@%p24 bra 	BB6_28;
	bra.uni 	BB6_27;

BB6_28:
	mul.wide.u32 	%rd56, %r21, 20;
	add.s64 	%rd57, %rd13, %rd56;
	st.global.u32 	[%rd57], %r25;
	st.global.u32 	[%rd57+4], %r115;
	st.global.u32 	[%rd57+8], %r20;
	st.global.u32 	[%rd57+12], %r1;
	mov.u32 	%r111, 0;
	st.global.u32 	[%rd57+16], %r111;
	bra.uni 	BB6_29;

BB6_27:
	atom.global.add.u32 	%r110, [%rd16], -1;

BB6_29:
	ret;
}


  