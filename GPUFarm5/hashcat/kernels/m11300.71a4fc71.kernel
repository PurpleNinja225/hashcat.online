//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: UNKNOWN
// Driver 
// Based on LLVM 3.4svn
//

.version 6.1
.target sm_50, texmode_independent
.address_size 64

	// .globl	gpu_memset
.const .align 8 .b8 te0[1024] = {165, 99, 99, 198, 132, 124, 124, 248, 153, 119, 119, 238, 141, 123, 123, 246, 13, 242, 242, 255, 189, 107, 107, 214, 177, 111, 111, 222, 84, 197, 197, 145, 80, 48, 48, 96, 3, 1, 1, 2, 169, 103, 103, 206, 125, 43, 43, 86, 25, 254, 254, 231, 98, 215, 215, 181, 230, 171, 171, 77, 154, 118, 118, 236, 69, 202, 202, 143, 157, 130, 130, 31, 64, 201, 201, 137, 135, 125, 125, 250, 21, 250, 250, 239, 235, 89, 89, 178, 201, 71, 71, 142, 11, 240, 240, 251, 236, 173, 173, 65, 103, 212, 212, 179, 253, 162, 162, 95, 234, 175, 175, 69, 191, 156, 156, 35, 247, 164, 164, 83, 150, 114, 114, 228, 91, 192, 192, 155, 194, 183, 183, 117, 28, 253, 253, 225, 174, 147, 147, 61, 106, 38, 38, 76, 90, 54, 54, 108, 65, 63, 63, 126, 2, 247, 247, 245, 79, 204, 204, 131, 92, 52, 52, 104, 244, 165, 165, 81, 52, 229, 229, 209, 8, 241, 241, 249, 147, 113, 113, 226, 115, 216, 216, 171, 83, 49, 49, 98, 63, 21, 21, 42, 12, 4, 4, 8, 82, 199, 199, 149, 101, 35, 35, 70, 94, 195, 195, 157, 40, 24, 24, 48, 161, 150, 150, 55, 15, 5, 5, 10, 181, 154, 154, 47, 9, 7, 7, 14, 54, 18, 18, 36, 155, 128, 128, 27, 61, 226, 226, 223, 38, 235, 235, 205, 105, 39, 39, 78, 205, 178, 178, 127, 159, 117, 117, 234, 27, 9, 9, 18, 158, 131, 131, 29, 116, 44, 44, 88, 46, 26, 26, 52, 45, 27, 27, 54, 178, 110, 110, 220, 238, 90, 90, 180, 251, 160, 160, 91, 246, 82, 82, 164, 77, 59, 59, 118, 97, 214, 214, 183, 206, 179, 179, 125, 123, 41, 41, 82, 62, 227, 227, 221, 113, 47, 47, 94, 151, 132, 132, 19, 245, 83, 83, 166, 104, 209, 209, 185, 0, 0, 0, 0, 44, 237, 237, 193, 96, 32, 32, 64, 31, 252, 252, 227, 200, 177, 177, 121, 237, 91, 91, 182, 190, 106, 106, 212, 70, 203, 203, 141, 217, 190, 190, 103, 75, 57, 57, 114, 222, 74, 74, 148, 212, 76, 76, 152, 232, 88, 88, 176, 74, 207, 207, 133, 107, 208, 208, 187, 42, 239, 239, 197, 229, 170, 170, 79, 22, 251, 251, 237, 197, 67, 67, 134, 215, 77, 77, 154, 85, 51, 51, 102, 148, 133, 133, 17, 207, 69, 69, 138, 16, 249, 249, 233, 6, 2, 2, 4, 129, 127, 127, 254, 240, 80, 80, 160, 68, 60, 60, 120, 186, 159, 159, 37, 227, 168, 168, 75, 243, 81, 81, 162, 254, 163, 163, 93, 192, 64, 64, 128, 138, 143, 143, 5, 173, 146, 146, 63, 188, 157, 157, 33, 72, 56, 56, 112, 4, 245, 245, 241, 223, 188, 188, 99, 193, 182, 182, 119, 117, 218, 218, 175, 99, 33, 33, 66, 48, 16, 16, 32, 26, 255, 255, 229, 14, 243, 243, 253, 109, 210, 210, 191, 76, 205, 205, 129, 20, 12, 12, 24, 53, 19, 19, 38, 47, 236, 236, 195, 225, 95, 95, 190, 162, 151, 151, 53, 204, 68, 68, 136, 57, 23, 23, 46, 87, 196, 196, 147, 242, 167, 167, 85, 130, 126, 126, 252, 71, 61, 61, 122, 172, 100, 100, 200, 231, 93, 93, 186, 43, 25, 25, 50, 149, 115, 115, 230, 160, 96, 96, 192, 152, 129, 129, 25, 209, 79, 79, 158, 127, 220, 220, 163, 102, 34, 34, 68, 126, 42, 42, 84, 171, 144, 144, 59, 131, 136, 136, 11, 202, 70, 70, 140, 41, 238, 238, 199, 211, 184, 184, 107, 60, 20, 20, 40, 121, 222, 222, 167, 226, 94, 94, 188, 29, 11, 11, 22, 118, 219, 219, 173, 59, 224, 224, 219, 86, 50, 50, 100, 78, 58, 58, 116, 30, 10, 10, 20, 219, 73, 73, 146, 10, 6, 6, 12, 108, 36, 36, 72, 228, 92, 92, 184, 93, 194, 194, 159, 110, 211, 211, 189, 239, 172, 172, 67, 166, 98, 98, 196, 168, 145, 145, 57, 164, 149, 149, 49, 55, 228, 228, 211, 139, 121, 121, 242, 50, 231, 231, 213, 67, 200, 200, 139, 89, 55, 55, 110, 183, 109, 109, 218, 140, 141, 141, 1, 100, 213, 213, 177, 210, 78, 78, 156, 224, 169, 169, 73, 180, 108, 108, 216, 250, 86, 86, 172, 7, 244, 244, 243, 37, 234, 234, 207, 175, 101, 101, 202, 142, 122, 122, 244, 233, 174, 174, 71, 24, 8, 8, 16, 213, 186, 186, 111, 136, 120, 120, 240, 111, 37, 37, 74, 114, 46, 46, 92, 36, 28, 28, 56, 241, 166, 166, 87, 199, 180, 180, 115, 81, 198, 198, 151, 35, 232, 232, 203, 124, 221, 221, 161, 156, 116, 116, 232, 33, 31, 31, 62, 221, 75, 75, 150, 220, 189, 189, 97, 134, 139, 139, 13, 133, 138, 138, 15, 144, 112, 112, 224, 66, 62, 62, 124, 196, 181, 181, 113, 170, 102, 102, 204, 216, 72, 72, 144, 5, 3, 3, 6, 1, 246, 246, 247, 18, 14, 14, 28, 163, 97, 97, 194, 95, 53, 53, 106, 249, 87, 87, 174, 208, 185, 185, 105, 145, 134, 134, 23, 88, 193, 193, 153, 39, 29, 29, 58, 185, 158, 158, 39, 56, 225, 225, 217, 19, 248, 248, 235, 179, 152, 152, 43, 51, 17, 17, 34, 187, 105, 105, 210, 112, 217, 217, 169, 137, 142, 142, 7, 167, 148, 148, 51, 182, 155, 155, 45, 34, 30, 30, 60, 146, 135, 135, 21, 32, 233, 233, 201, 73, 206, 206, 135, 255, 85, 85, 170, 120, 40, 40, 80, 122, 223, 223, 165, 143, 140, 140, 3, 248, 161, 161, 89, 128, 137, 137, 9, 23, 13, 13, 26, 218, 191, 191, 101, 49, 230, 230, 215, 198, 66, 66, 132, 184, 104, 104, 208, 195, 65, 65, 130, 176, 153, 153, 41, 119, 45, 45, 90, 17, 15, 15, 30, 203, 176, 176, 123, 252, 84, 84, 168, 214, 187, 187, 109, 58, 22, 22, 44};
.const .align 8 .b8 te1[1024] = {99, 99, 198, 165, 124, 124, 248, 132, 119, 119, 238, 153, 123, 123, 246, 141, 242, 242, 255, 13, 107, 107, 214, 189, 111, 111, 222, 177, 197, 197, 145, 84, 48, 48, 96, 80, 1, 1, 2, 3, 103, 103, 206, 169, 43, 43, 86, 125, 254, 254, 231, 25, 215, 215, 181, 98, 171, 171, 77, 230, 118, 118, 236, 154, 202, 202, 143, 69, 130, 130, 31, 157, 201, 201, 137, 64, 125, 125, 250, 135, 250, 250, 239, 21, 89, 89, 178, 235, 71, 71, 142, 201, 240, 240, 251, 11, 173, 173, 65, 236, 212, 212, 179, 103, 162, 162, 95, 253, 175, 175, 69, 234, 156, 156, 35, 191, 164, 164, 83, 247, 114, 114, 228, 150, 192, 192, 155, 91, 183, 183, 117, 194, 253, 253, 225, 28, 147, 147, 61, 174, 38, 38, 76, 106, 54, 54, 108, 90, 63, 63, 126, 65, 247, 247, 245, 2, 204, 204, 131, 79, 52, 52, 104, 92, 165, 165, 81, 244, 229, 229, 209, 52, 241, 241, 249, 8, 113, 113, 226, 147, 216, 216, 171, 115, 49, 49, 98, 83, 21, 21, 42, 63, 4, 4, 8, 12, 199, 199, 149, 82, 35, 35, 70, 101, 195, 195, 157, 94, 24, 24, 48, 40, 150, 150, 55, 161, 5, 5, 10, 15, 154, 154, 47, 181, 7, 7, 14, 9, 18, 18, 36, 54, 128, 128, 27, 155, 226, 226, 223, 61, 235, 235, 205, 38, 39, 39, 78, 105, 178, 178, 127, 205, 117, 117, 234, 159, 9, 9, 18, 27, 131, 131, 29, 158, 44, 44, 88, 116, 26, 26, 52, 46, 27, 27, 54, 45, 110, 110, 220, 178, 90, 90, 180, 238, 160, 160, 91, 251, 82, 82, 164, 246, 59, 59, 118, 77, 214, 214, 183, 97, 179, 179, 125, 206, 41, 41, 82, 123, 227, 227, 221, 62, 47, 47, 94, 113, 132, 132, 19, 151, 83, 83, 166, 245, 209, 209, 185, 104, 0, 0, 0, 0, 237, 237, 193, 44, 32, 32, 64, 96, 252, 252, 227, 31, 177, 177, 121, 200, 91, 91, 182, 237, 106, 106, 212, 190, 203, 203, 141, 70, 190, 190, 103, 217, 57, 57, 114, 75, 74, 74, 148, 222, 76, 76, 152, 212, 88, 88, 176, 232, 207, 207, 133, 74, 208, 208, 187, 107, 239, 239, 197, 42, 170, 170, 79, 229, 251, 251, 237, 22, 67, 67, 134, 197, 77, 77, 154, 215, 51, 51, 102, 85, 133, 133, 17, 148, 69, 69, 138, 207, 249, 249, 233, 16, 2, 2, 4, 6, 127, 127, 254, 129, 80, 80, 160, 240, 60, 60, 120, 68, 159, 159, 37, 186, 168, 168, 75, 227, 81, 81, 162, 243, 163, 163, 93, 254, 64, 64, 128, 192, 143, 143, 5, 138, 146, 146, 63, 173, 157, 157, 33, 188, 56, 56, 112, 72, 245, 245, 241, 4, 188, 188, 99, 223, 182, 182, 119, 193, 218, 218, 175, 117, 33, 33, 66, 99, 16, 16, 32, 48, 255, 255, 229, 26, 243, 243, 253, 14, 210, 210, 191, 109, 205, 205, 129, 76, 12, 12, 24, 20, 19, 19, 38, 53, 236, 236, 195, 47, 95, 95, 190, 225, 151, 151, 53, 162, 68, 68, 136, 204, 23, 23, 46, 57, 196, 196, 147, 87, 167, 167, 85, 242, 126, 126, 252, 130, 61, 61, 122, 71, 100, 100, 200, 172, 93, 93, 186, 231, 25, 25, 50, 43, 115, 115, 230, 149, 96, 96, 192, 160, 129, 129, 25, 152, 79, 79, 158, 209, 220, 220, 163, 127, 34, 34, 68, 102, 42, 42, 84, 126, 144, 144, 59, 171, 136, 136, 11, 131, 70, 70, 140, 202, 238, 238, 199, 41, 184, 184, 107, 211, 20, 20, 40, 60, 222, 222, 167, 121, 94, 94, 188, 226, 11, 11, 22, 29, 219, 219, 173, 118, 224, 224, 219, 59, 50, 50, 100, 86, 58, 58, 116, 78, 10, 10, 20, 30, 73, 73, 146, 219, 6, 6, 12, 10, 36, 36, 72, 108, 92, 92, 184, 228, 194, 194, 159, 93, 211, 211, 189, 110, 172, 172, 67, 239, 98, 98, 196, 166, 145, 145, 57, 168, 149, 149, 49, 164, 228, 228, 211, 55, 121, 121, 242, 139, 231, 231, 213, 50, 200, 200, 139, 67, 55, 55, 110, 89, 109, 109, 218, 183, 141, 141, 1, 140, 213, 213, 177, 100, 78, 78, 156, 210, 169, 169, 73, 224, 108, 108, 216, 180, 86, 86, 172, 250, 244, 244, 243, 7, 234, 234, 207, 37, 101, 101, 202, 175, 122, 122, 244, 142, 174, 174, 71, 233, 8, 8, 16, 24, 186, 186, 111, 213, 120, 120, 240, 136, 37, 37, 74, 111, 46, 46, 92, 114, 28, 28, 56, 36, 166, 166, 87, 241, 180, 180, 115, 199, 198, 198, 151, 81, 232, 232, 203, 35, 221, 221, 161, 124, 116, 116, 232, 156, 31, 31, 62, 33, 75, 75, 150, 221, 189, 189, 97, 220, 139, 139, 13, 134, 138, 138, 15, 133, 112, 112, 224, 144, 62, 62, 124, 66, 181, 181, 113, 196, 102, 102, 204, 170, 72, 72, 144, 216, 3, 3, 6, 5, 246, 246, 247, 1, 14, 14, 28, 18, 97, 97, 194, 163, 53, 53, 106, 95, 87, 87, 174, 249, 185, 185, 105, 208, 134, 134, 23, 145, 193, 193, 153, 88, 29, 29, 58, 39, 158, 158, 39, 185, 225, 225, 217, 56, 248, 248, 235, 19, 152, 152, 43, 179, 17, 17, 34, 51, 105, 105, 210, 187, 217, 217, 169, 112, 142, 142, 7, 137, 148, 148, 51, 167, 155, 155, 45, 182, 30, 30, 60, 34, 135, 135, 21, 146, 233, 233, 201, 32, 206, 206, 135, 73, 85, 85, 170, 255, 40, 40, 80, 120, 223, 223, 165, 122, 140, 140, 3, 143, 161, 161, 89, 248, 137, 137, 9, 128, 13, 13, 26, 23, 191, 191, 101, 218, 230, 230, 215, 49, 66, 66, 132, 198, 104, 104, 208, 184, 65, 65, 130, 195, 153, 153, 41, 176, 45, 45, 90, 119, 15, 15, 30, 17, 176, 176, 123, 203, 84, 84, 168, 252, 187, 187, 109, 214, 22, 22, 44, 58};
.const .align 8 .b8 te2[1024] = {99, 198, 165, 99, 124, 248, 132, 124, 119, 238, 153, 119, 123, 246, 141, 123, 242, 255, 13, 242, 107, 214, 189, 107, 111, 222, 177, 111, 197, 145, 84, 197, 48, 96, 80, 48, 1, 2, 3, 1, 103, 206, 169, 103, 43, 86, 125, 43, 254, 231, 25, 254, 215, 181, 98, 215, 171, 77, 230, 171, 118, 236, 154, 118, 202, 143, 69, 202, 130, 31, 157, 130, 201, 137, 64, 201, 125, 250, 135, 125, 250, 239, 21, 250, 89, 178, 235, 89, 71, 142, 201, 71, 240, 251, 11, 240, 173, 65, 236, 173, 212, 179, 103, 212, 162, 95, 253, 162, 175, 69, 234, 175, 156, 35, 191, 156, 164, 83, 247, 164, 114, 228, 150, 114, 192, 155, 91, 192, 183, 117, 194, 183, 253, 225, 28, 253, 147, 61, 174, 147, 38, 76, 106, 38, 54, 108, 90, 54, 63, 126, 65, 63, 247, 245, 2, 247, 204, 131, 79, 204, 52, 104, 92, 52, 165, 81, 244, 165, 229, 209, 52, 229, 241, 249, 8, 241, 113, 226, 147, 113, 216, 171, 115, 216, 49, 98, 83, 49, 21, 42, 63, 21, 4, 8, 12, 4, 199, 149, 82, 199, 35, 70, 101, 35, 195, 157, 94, 195, 24, 48, 40, 24, 150, 55, 161, 150, 5, 10, 15, 5, 154, 47, 181, 154, 7, 14, 9, 7, 18, 36, 54, 18, 128, 27, 155, 128, 226, 223, 61, 226, 235, 205, 38, 235, 39, 78, 105, 39, 178, 127, 205, 178, 117, 234, 159, 117, 9, 18, 27, 9, 131, 29, 158, 131, 44, 88, 116, 44, 26, 52, 46, 26, 27, 54, 45, 27, 110, 220, 178, 110, 90, 180, 238, 90, 160, 91, 251, 160, 82, 164, 246, 82, 59, 118, 77, 59, 214, 183, 97, 214, 179, 125, 206, 179, 41, 82, 123, 41, 227, 221, 62, 227, 47, 94, 113, 47, 132, 19, 151, 132, 83, 166, 245, 83, 209, 185, 104, 209, 0, 0, 0, 0, 237, 193, 44, 237, 32, 64, 96, 32, 252, 227, 31, 252, 177, 121, 200, 177, 91, 182, 237, 91, 106, 212, 190, 106, 203, 141, 70, 203, 190, 103, 217, 190, 57, 114, 75, 57, 74, 148, 222, 74, 76, 152, 212, 76, 88, 176, 232, 88, 207, 133, 74, 207, 208, 187, 107, 208, 239, 197, 42, 239, 170, 79, 229, 170, 251, 237, 22, 251, 67, 134, 197, 67, 77, 154, 215, 77, 51, 102, 85, 51, 133, 17, 148, 133, 69, 138, 207, 69, 249, 233, 16, 249, 2, 4, 6, 2, 127, 254, 129, 127, 80, 160, 240, 80, 60, 120, 68, 60, 159, 37, 186, 159, 168, 75, 227, 168, 81, 162, 243, 81, 163, 93, 254, 163, 64, 128, 192, 64, 143, 5, 138, 143, 146, 63, 173, 146, 157, 33, 188, 157, 56, 112, 72, 56, 245, 241, 4, 245, 188, 99, 223, 188, 182, 119, 193, 182, 218, 175, 117, 218, 33, 66, 99, 33, 16, 32, 48, 16, 255, 229, 26, 255, 243, 253, 14, 243, 210, 191, 109, 210, 205, 129, 76, 205, 12, 24, 20, 12, 19, 38, 53, 19, 236, 195, 47, 236, 95, 190, 225, 95, 151, 53, 162, 151, 68, 136, 204, 68, 23, 46, 57, 23, 196, 147, 87, 196, 167, 85, 242, 167, 126, 252, 130, 126, 61, 122, 71, 61, 100, 200, 172, 100, 93, 186, 231, 93, 25, 50, 43, 25, 115, 230, 149, 115, 96, 192, 160, 96, 129, 25, 152, 129, 79, 158, 209, 79, 220, 163, 127, 220, 34, 68, 102, 34, 42, 84, 126, 42, 144, 59, 171, 144, 136, 11, 131, 136, 70, 140, 202, 70, 238, 199, 41, 238, 184, 107, 211, 184, 20, 40, 60, 20, 222, 167, 121, 222, 94, 188, 226, 94, 11, 22, 29, 11, 219, 173, 118, 219, 224, 219, 59, 224, 50, 100, 86, 50, 58, 116, 78, 58, 10, 20, 30, 10, 73, 146, 219, 73, 6, 12, 10, 6, 36, 72, 108, 36, 92, 184, 228, 92, 194, 159, 93, 194, 211, 189, 110, 211, 172, 67, 239, 172, 98, 196, 166, 98, 145, 57, 168, 145, 149, 49, 164, 149, 228, 211, 55, 228, 121, 242, 139, 121, 231, 213, 50, 231, 200, 139, 67, 200, 55, 110, 89, 55, 109, 218, 183, 109, 141, 1, 140, 141, 213, 177, 100, 213, 78, 156, 210, 78, 169, 73, 224, 169, 108, 216, 180, 108, 86, 172, 250, 86, 244, 243, 7, 244, 234, 207, 37, 234, 101, 202, 175, 101, 122, 244, 142, 122, 174, 71, 233, 174, 8, 16, 24, 8, 186, 111, 213, 186, 120, 240, 136, 120, 37, 74, 111, 37, 46, 92, 114, 46, 28, 56, 36, 28, 166, 87, 241, 166, 180, 115, 199, 180, 198, 151, 81, 198, 232, 203, 35, 232, 221, 161, 124, 221, 116, 232, 156, 116, 31, 62, 33, 31, 75, 150, 221, 75, 189, 97, 220, 189, 139, 13, 134, 139, 138, 15, 133, 138, 112, 224, 144, 112, 62, 124, 66, 62, 181, 113, 196, 181, 102, 204, 170, 102, 72, 144, 216, 72, 3, 6, 5, 3, 246, 247, 1, 246, 14, 28, 18, 14, 97, 194, 163, 97, 53, 106, 95, 53, 87, 174, 249, 87, 185, 105, 208, 185, 134, 23, 145, 134, 193, 153, 88, 193, 29, 58, 39, 29, 158, 39, 185, 158, 225, 217, 56, 225, 248, 235, 19, 248, 152, 43, 179, 152, 17, 34, 51, 17, 105, 210, 187, 105, 217, 169, 112, 217, 142, 7, 137, 142, 148, 51, 167, 148, 155, 45, 182, 155, 30, 60, 34, 30, 135, 21, 146, 135, 233, 201, 32, 233, 206, 135, 73, 206, 85, 170, 255, 85, 40, 80, 120, 40, 223, 165, 122, 223, 140, 3, 143, 140, 161, 89, 248, 161, 137, 9, 128, 137, 13, 26, 23, 13, 191, 101, 218, 191, 230, 215, 49, 230, 66, 132, 198, 66, 104, 208, 184, 104, 65, 130, 195, 65, 153, 41, 176, 153, 45, 90, 119, 45, 15, 30, 17, 15, 176, 123, 203, 176, 84, 168, 252, 84, 187, 109, 214, 187, 22, 44, 58, 22};
.const .align 8 .b8 te3[1024] = {198, 165, 99, 99, 248, 132, 124, 124, 238, 153, 119, 119, 246, 141, 123, 123, 255, 13, 242, 242, 214, 189, 107, 107, 222, 177, 111, 111, 145, 84, 197, 197, 96, 80, 48, 48, 2, 3, 1, 1, 206, 169, 103, 103, 86, 125, 43, 43, 231, 25, 254, 254, 181, 98, 215, 215, 77, 230, 171, 171, 236, 154, 118, 118, 143, 69, 202, 202, 31, 157, 130, 130, 137, 64, 201, 201, 250, 135, 125, 125, 239, 21, 250, 250, 178, 235, 89, 89, 142, 201, 71, 71, 251, 11, 240, 240, 65, 236, 173, 173, 179, 103, 212, 212, 95, 253, 162, 162, 69, 234, 175, 175, 35, 191, 156, 156, 83, 247, 164, 164, 228, 150, 114, 114, 155, 91, 192, 192, 117, 194, 183, 183, 225, 28, 253, 253, 61, 174, 147, 147, 76, 106, 38, 38, 108, 90, 54, 54, 126, 65, 63, 63, 245, 2, 247, 247, 131, 79, 204, 204, 104, 92, 52, 52, 81, 244, 165, 165, 209, 52, 229, 229, 249, 8, 241, 241, 226, 147, 113, 113, 171, 115, 216, 216, 98, 83, 49, 49, 42, 63, 21, 21, 8, 12, 4, 4, 149, 82, 199, 199, 70, 101, 35, 35, 157, 94, 195, 195, 48, 40, 24, 24, 55, 161, 150, 150, 10, 15, 5, 5, 47, 181, 154, 154, 14, 9, 7, 7, 36, 54, 18, 18, 27, 155, 128, 128, 223, 61, 226, 226, 205, 38, 235, 235, 78, 105, 39, 39, 127, 205, 178, 178, 234, 159, 117, 117, 18, 27, 9, 9, 29, 158, 131, 131, 88, 116, 44, 44, 52, 46, 26, 26, 54, 45, 27, 27, 220, 178, 110, 110, 180, 238, 90, 90, 91, 251, 160, 160, 164, 246, 82, 82, 118, 77, 59, 59, 183, 97, 214, 214, 125, 206, 179, 179, 82, 123, 41, 41, 221, 62, 227, 227, 94, 113, 47, 47, 19, 151, 132, 132, 166, 245, 83, 83, 185, 104, 209, 209, 0, 0, 0, 0, 193, 44, 237, 237, 64, 96, 32, 32, 227, 31, 252, 252, 121, 200, 177, 177, 182, 237, 91, 91, 212, 190, 106, 106, 141, 70, 203, 203, 103, 217, 190, 190, 114, 75, 57, 57, 148, 222, 74, 74, 152, 212, 76, 76, 176, 232, 88, 88, 133, 74, 207, 207, 187, 107, 208, 208, 197, 42, 239, 239, 79, 229, 170, 170, 237, 22, 251, 251, 134, 197, 67, 67, 154, 215, 77, 77, 102, 85, 51, 51, 17, 148, 133, 133, 138, 207, 69, 69, 233, 16, 249, 249, 4, 6, 2, 2, 254, 129, 127, 127, 160, 240, 80, 80, 120, 68, 60, 60, 37, 186, 159, 159, 75, 227, 168, 168, 162, 243, 81, 81, 93, 254, 163, 163, 128, 192, 64, 64, 5, 138, 143, 143, 63, 173, 146, 146, 33, 188, 157, 157, 112, 72, 56, 56, 241, 4, 245, 245, 99, 223, 188, 188, 119, 193, 182, 182, 175, 117, 218, 218, 66, 99, 33, 33, 32, 48, 16, 16, 229, 26, 255, 255, 253, 14, 243, 243, 191, 109, 210, 210, 129, 76, 205, 205, 24, 20, 12, 12, 38, 53, 19, 19, 195, 47, 236, 236, 190, 225, 95, 95, 53, 162, 151, 151, 136, 204, 68, 68, 46, 57, 23, 23, 147, 87, 196, 196, 85, 242, 167, 167, 252, 130, 126, 126, 122, 71, 61, 61, 200, 172, 100, 100, 186, 231, 93, 93, 50, 43, 25, 25, 230, 149, 115, 115, 192, 160, 96, 96, 25, 152, 129, 129, 158, 209, 79, 79, 163, 127, 220, 220, 68, 102, 34, 34, 84, 126, 42, 42, 59, 171, 144, 144, 11, 131, 136, 136, 140, 202, 70, 70, 199, 41, 238, 238, 107, 211, 184, 184, 40, 60, 20, 20, 167, 121, 222, 222, 188, 226, 94, 94, 22, 29, 11, 11, 173, 118, 219, 219, 219, 59, 224, 224, 100, 86, 50, 50, 116, 78, 58, 58, 20, 30, 10, 10, 146, 219, 73, 73, 12, 10, 6, 6, 72, 108, 36, 36, 184, 228, 92, 92, 159, 93, 194, 194, 189, 110, 211, 211, 67, 239, 172, 172, 196, 166, 98, 98, 57, 168, 145, 145, 49, 164, 149, 149, 211, 55, 228, 228, 242, 139, 121, 121, 213, 50, 231, 231, 139, 67, 200, 200, 110, 89, 55, 55, 218, 183, 109, 109, 1, 140, 141, 141, 177, 100, 213, 213, 156, 210, 78, 78, 73, 224, 169, 169, 216, 180, 108, 108, 172, 250, 86, 86, 243, 7, 244, 244, 207, 37, 234, 234, 202, 175, 101, 101, 244, 142, 122, 122, 71, 233, 174, 174, 16, 24, 8, 8, 111, 213, 186, 186, 240, 136, 120, 120, 74, 111, 37, 37, 92, 114, 46, 46, 56, 36, 28, 28, 87, 241, 166, 166, 115, 199, 180, 180, 151, 81, 198, 198, 203, 35, 232, 232, 161, 124, 221, 221, 232, 156, 116, 116, 62, 33, 31, 31, 150, 221, 75, 75, 97, 220, 189, 189, 13, 134, 139, 139, 15, 133, 138, 138, 224, 144, 112, 112, 124, 66, 62, 62, 113, 196, 181, 181, 204, 170, 102, 102, 144, 216, 72, 72, 6, 5, 3, 3, 247, 1, 246, 246, 28, 18, 14, 14, 194, 163, 97, 97, 106, 95, 53, 53, 174, 249, 87, 87, 105, 208, 185, 185, 23, 145, 134, 134, 153, 88, 193, 193, 58, 39, 29, 29, 39, 185, 158, 158, 217, 56, 225, 225, 235, 19, 248, 248, 43, 179, 152, 152, 34, 51, 17, 17, 210, 187, 105, 105, 169, 112, 217, 217, 7, 137, 142, 142, 51, 167, 148, 148, 45, 182, 155, 155, 60, 34, 30, 30, 21, 146, 135, 135, 201, 32, 233, 233, 135, 73, 206, 206, 170, 255, 85, 85, 80, 120, 40, 40, 165, 122, 223, 223, 3, 143, 140, 140, 89, 248, 161, 161, 9, 128, 137, 137, 26, 23, 13, 13, 101, 218, 191, 191, 215, 49, 230, 230, 132, 198, 66, 66, 208, 184, 104, 104, 130, 195, 65, 65, 41, 176, 153, 153, 90, 119, 45, 45, 30, 17, 15, 15, 123, 203, 176, 176, 168, 252, 84, 84, 109, 214, 187, 187, 44, 58, 22, 22};
.const .align 8 .b8 te4[1024] = {99, 99, 99, 99, 124, 124, 124, 124, 119, 119, 119, 119, 123, 123, 123, 123, 242, 242, 242, 242, 107, 107, 107, 107, 111, 111, 111, 111, 197, 197, 197, 197, 48, 48, 48, 48, 1, 1, 1, 1, 103, 103, 103, 103, 43, 43, 43, 43, 254, 254, 254, 254, 215, 215, 215, 215, 171, 171, 171, 171, 118, 118, 118, 118, 202, 202, 202, 202, 130, 130, 130, 130, 201, 201, 201, 201, 125, 125, 125, 125, 250, 250, 250, 250, 89, 89, 89, 89, 71, 71, 71, 71, 240, 240, 240, 240, 173, 173, 173, 173, 212, 212, 212, 212, 162, 162, 162, 162, 175, 175, 175, 175, 156, 156, 156, 156, 164, 164, 164, 164, 114, 114, 114, 114, 192, 192, 192, 192, 183, 183, 183, 183, 253, 253, 253, 253, 147, 147, 147, 147, 38, 38, 38, 38, 54, 54, 54, 54, 63, 63, 63, 63, 247, 247, 247, 247, 204, 204, 204, 204, 52, 52, 52, 52, 165, 165, 165, 165, 229, 229, 229, 229, 241, 241, 241, 241, 113, 113, 113, 113, 216, 216, 216, 216, 49, 49, 49, 49, 21, 21, 21, 21, 4, 4, 4, 4, 199, 199, 199, 199, 35, 35, 35, 35, 195, 195, 195, 195, 24, 24, 24, 24, 150, 150, 150, 150, 5, 5, 5, 5, 154, 154, 154, 154, 7, 7, 7, 7, 18, 18, 18, 18, 128, 128, 128, 128, 226, 226, 226, 226, 235, 235, 235, 235, 39, 39, 39, 39, 178, 178, 178, 178, 117, 117, 117, 117, 9, 9, 9, 9, 131, 131, 131, 131, 44, 44, 44, 44, 26, 26, 26, 26, 27, 27, 27, 27, 110, 110, 110, 110, 90, 90, 90, 90, 160, 160, 160, 160, 82, 82, 82, 82, 59, 59, 59, 59, 214, 214, 214, 214, 179, 179, 179, 179, 41, 41, 41, 41, 227, 227, 227, 227, 47, 47, 47, 47, 132, 132, 132, 132, 83, 83, 83, 83, 209, 209, 209, 209, 0, 0, 0, 0, 237, 237, 237, 237, 32, 32, 32, 32, 252, 252, 252, 252, 177, 177, 177, 177, 91, 91, 91, 91, 106, 106, 106, 106, 203, 203, 203, 203, 190, 190, 190, 190, 57, 57, 57, 57, 74, 74, 74, 74, 76, 76, 76, 76, 88, 88, 88, 88, 207, 207, 207, 207, 208, 208, 208, 208, 239, 239, 239, 239, 170, 170, 170, 170, 251, 251, 251, 251, 67, 67, 67, 67, 77, 77, 77, 77, 51, 51, 51, 51, 133, 133, 133, 133, 69, 69, 69, 69, 249, 249, 249, 249, 2, 2, 2, 2, 127, 127, 127, 127, 80, 80, 80, 80, 60, 60, 60, 60, 159, 159, 159, 159, 168, 168, 168, 168, 81, 81, 81, 81, 163, 163, 163, 163, 64, 64, 64, 64, 143, 143, 143, 143, 146, 146, 146, 146, 157, 157, 157, 157, 56, 56, 56, 56, 245, 245, 245, 245, 188, 188, 188, 188, 182, 182, 182, 182, 218, 218, 218, 218, 33, 33, 33, 33, 16, 16, 16, 16, 255, 255, 255, 255, 243, 243, 243, 243, 210, 210, 210, 210, 205, 205, 205, 205, 12, 12, 12, 12, 19, 19, 19, 19, 236, 236, 236, 236, 95, 95, 95, 95, 151, 151, 151, 151, 68, 68, 68, 68, 23, 23, 23, 23, 196, 196, 196, 196, 167, 167, 167, 167, 126, 126, 126, 126, 61, 61, 61, 61, 100, 100, 100, 100, 93, 93, 93, 93, 25, 25, 25, 25, 115, 115, 115, 115, 96, 96, 96, 96, 129, 129, 129, 129, 79, 79, 79, 79, 220, 220, 220, 220, 34, 34, 34, 34, 42, 42, 42, 42, 144, 144, 144, 144, 136, 136, 136, 136, 70, 70, 70, 70, 238, 238, 238, 238, 184, 184, 184, 184, 20, 20, 20, 20, 222, 222, 222, 222, 94, 94, 94, 94, 11, 11, 11, 11, 219, 219, 219, 219, 224, 224, 224, 224, 50, 50, 50, 50, 58, 58, 58, 58, 10, 10, 10, 10, 73, 73, 73, 73, 6, 6, 6, 6, 36, 36, 36, 36, 92, 92, 92, 92, 194, 194, 194, 194, 211, 211, 211, 211, 172, 172, 172, 172, 98, 98, 98, 98, 145, 145, 145, 145, 149, 149, 149, 149, 228, 228, 228, 228, 121, 121, 121, 121, 231, 231, 231, 231, 200, 200, 200, 200, 55, 55, 55, 55, 109, 109, 109, 109, 141, 141, 141, 141, 213, 213, 213, 213, 78, 78, 78, 78, 169, 169, 169, 169, 108, 108, 108, 108, 86, 86, 86, 86, 244, 244, 244, 244, 234, 234, 234, 234, 101, 101, 101, 101, 122, 122, 122, 122, 174, 174, 174, 174, 8, 8, 8, 8, 186, 186, 186, 186, 120, 120, 120, 120, 37, 37, 37, 37, 46, 46, 46, 46, 28, 28, 28, 28, 166, 166, 166, 166, 180, 180, 180, 180, 198, 198, 198, 198, 232, 232, 232, 232, 221, 221, 221, 221, 116, 116, 116, 116, 31, 31, 31, 31, 75, 75, 75, 75, 189, 189, 189, 189, 139, 139, 139, 139, 138, 138, 138, 138, 112, 112, 112, 112, 62, 62, 62, 62, 181, 181, 181, 181, 102, 102, 102, 102, 72, 72, 72, 72, 3, 3, 3, 3, 246, 246, 246, 246, 14, 14, 14, 14, 97, 97, 97, 97, 53, 53, 53, 53, 87, 87, 87, 87, 185, 185, 185, 185, 134, 134, 134, 134, 193, 193, 193, 193, 29, 29, 29, 29, 158, 158, 158, 158, 225, 225, 225, 225, 248, 248, 248, 248, 152, 152, 152, 152, 17, 17, 17, 17, 105, 105, 105, 105, 217, 217, 217, 217, 142, 142, 142, 142, 148, 148, 148, 148, 155, 155, 155, 155, 30, 30, 30, 30, 135, 135, 135, 135, 233, 233, 233, 233, 206, 206, 206, 206, 85, 85, 85, 85, 40, 40, 40, 40, 223, 223, 223, 223, 140, 140, 140, 140, 161, 161, 161, 161, 137, 137, 137, 137, 13, 13, 13, 13, 191, 191, 191, 191, 230, 230, 230, 230, 66, 66, 66, 66, 104, 104, 104, 104, 65, 65, 65, 65, 153, 153, 153, 153, 45, 45, 45, 45, 15, 15, 15, 15, 176, 176, 176, 176, 84, 84, 84, 84, 187, 187, 187, 187, 22, 22, 22, 22};
.const .align 8 .b8 td0[1024] = {80, 167, 244, 81, 83, 101, 65, 126, 195, 164, 23, 26, 150, 94, 39, 58, 203, 107, 171, 59, 241, 69, 157, 31, 171, 88, 250, 172, 147, 3, 227, 75, 85, 250, 48, 32, 246, 109, 118, 173, 145, 118, 204, 136, 37, 76, 2, 245, 252, 215, 229, 79, 215, 203, 42, 197, 128, 68, 53, 38, 143, 163, 98, 181, 73, 90, 177, 222, 103, 27, 186, 37, 152, 14, 234, 69, 225, 192, 254, 93, 2, 117, 47, 195, 18, 240, 76, 129, 163, 151, 70, 141, 198, 249, 211, 107, 231, 95, 143, 3, 149, 156, 146, 21, 235, 122, 109, 191, 218, 89, 82, 149, 45, 131, 190, 212, 211, 33, 116, 88, 41, 105, 224, 73, 68, 200, 201, 142, 106, 137, 194, 117, 120, 121, 142, 244, 107, 62, 88, 153, 221, 113, 185, 39, 182, 79, 225, 190, 23, 173, 136, 240, 102, 172, 32, 201, 180, 58, 206, 125, 24, 74, 223, 99, 130, 49, 26, 229, 96, 51, 81, 151, 69, 127, 83, 98, 224, 119, 100, 177, 132, 174, 107, 187, 28, 160, 129, 254, 148, 43, 8, 249, 88, 104, 72, 112, 25, 253, 69, 143, 135, 108, 222, 148, 183, 248, 123, 82, 35, 211, 115, 171, 226, 2, 75, 114, 87, 143, 31, 227, 42, 171, 85, 102, 7, 40, 235, 178, 3, 194, 181, 47, 154, 123, 197, 134, 165, 8, 55, 211, 242, 135, 40, 48, 178, 165, 191, 35, 186, 106, 3, 2, 92, 130, 22, 237, 43, 28, 207, 138, 146, 180, 121, 167, 240, 242, 7, 243, 161, 226, 105, 78, 205, 244, 218, 101, 213, 190, 5, 6, 31, 98, 52, 209, 138, 254, 166, 196, 157, 83, 46, 52, 160, 85, 243, 162, 50, 225, 138, 5, 117, 235, 246, 164, 57, 236, 131, 11, 170, 239, 96, 64, 6, 159, 113, 94, 81, 16, 110, 189, 249, 138, 33, 62, 61, 6, 221, 150, 174, 5, 62, 221, 70, 189, 230, 77, 181, 141, 84, 145, 5, 93, 196, 113, 111, 212, 6, 4, 255, 21, 80, 96, 36, 251, 152, 25, 151, 233, 189, 214, 204, 67, 64, 137, 119, 158, 217, 103, 189, 66, 232, 176, 136, 139, 137, 7, 56, 91, 25, 231, 219, 238, 200, 121, 71, 10, 124, 161, 233, 15, 66, 124, 201, 30, 132, 248, 0, 0, 0, 0, 131, 134, 128, 9, 72, 237, 43, 50, 172, 112, 17, 30, 78, 114, 90, 108, 251, 255, 14, 253, 86, 56, 133, 15, 30, 213, 174, 61, 39, 57, 45, 54, 100, 217, 15, 10, 33, 166, 92, 104, 209, 84, 91, 155, 58, 46, 54, 36, 177, 103, 10, 12, 15, 231, 87, 147, 210, 150, 238, 180, 158, 145, 155, 27, 79, 197, 192, 128, 162, 32, 220, 97, 105, 75, 119, 90, 22, 26, 18, 28, 10, 186, 147, 226, 229, 42, 160, 192, 67, 224, 34, 60, 29, 23, 27, 18, 11, 13, 9, 14, 173, 199, 139, 242, 185, 168, 182, 45, 200, 169, 30, 20, 133, 25, 241, 87, 76, 7, 117, 175, 187, 221, 153, 238, 253, 96, 127, 163, 159, 38, 1, 247, 188, 245, 114, 92, 197, 59, 102, 68, 52, 126, 251, 91, 118, 41, 67, 139, 220, 198, 35, 203, 104, 252, 237, 182, 99, 241, 228, 184, 202, 220, 49, 215, 16, 133, 99, 66, 64, 34, 151, 19, 32, 17, 198, 132, 125, 36, 74, 133, 248, 61, 187, 210, 17, 50, 249, 174, 109, 161, 41, 199, 75, 47, 158, 29, 243, 48, 178, 220, 236, 82, 134, 13, 208, 227, 193, 119, 108, 22, 179, 43, 153, 185, 112, 169, 250, 72, 148, 17, 34, 100, 233, 71, 196, 140, 252, 168, 26, 63, 240, 160, 216, 44, 125, 86, 239, 144, 51, 34, 199, 78, 73, 135, 193, 209, 56, 217, 254, 162, 202, 140, 54, 11, 212, 152, 207, 129, 245, 166, 40, 222, 122, 165, 38, 142, 183, 218, 164, 191, 173, 63, 228, 157, 58, 44, 13, 146, 120, 80, 155, 204, 95, 106, 98, 70, 126, 84, 194, 19, 141, 246, 232, 184, 216, 144, 94, 247, 57, 46, 245, 175, 195, 130, 190, 128, 93, 159, 124, 147, 208, 105, 169, 45, 213, 111, 179, 18, 37, 207, 59, 153, 172, 200, 167, 125, 24, 16, 110, 99, 156, 232, 123, 187, 59, 219, 9, 120, 38, 205, 244, 24, 89, 110, 1, 183, 154, 236, 168, 154, 79, 131, 101, 110, 149, 230, 126, 230, 255, 170, 8, 207, 188, 33, 230, 232, 21, 239, 217, 155, 231, 186, 206, 54, 111, 74, 212, 9, 159, 234, 214, 124, 176, 41, 175, 178, 164, 49, 49, 35, 63, 42, 48, 148, 165, 198, 192, 102, 162, 53, 55, 188, 78, 116, 166, 202, 130, 252, 176, 208, 144, 224, 21, 216, 167, 51, 74, 152, 4, 241, 247, 218, 236, 65, 14, 80, 205, 127, 47, 246, 145, 23, 141, 214, 77, 118, 77, 176, 239, 67, 84, 77, 170, 204, 223, 4, 150, 228, 227, 181, 209, 158, 27, 136, 106, 76, 184, 31, 44, 193, 127, 81, 101, 70, 4, 234, 94, 157, 93, 53, 140, 1, 115, 116, 135, 250, 46, 65, 11, 251, 90, 29, 103, 179, 82, 210, 219, 146, 51, 86, 16, 233, 19, 71, 214, 109, 140, 97, 215, 154, 122, 12, 161, 55, 142, 20, 248, 89, 137, 60, 19, 235, 238, 39, 169, 206, 53, 201, 97, 183, 237, 229, 28, 225, 60, 177, 71, 122, 89, 223, 210, 156, 63, 115, 242, 85, 121, 206, 20, 24, 191, 55, 199, 115, 234, 205, 247, 83, 91, 170, 253, 95, 20, 111, 61, 223, 134, 219, 68, 120, 129, 243, 175, 202, 62, 196, 104, 185, 44, 52, 36, 56, 95, 64, 163, 194, 114, 195, 29, 22, 12, 37, 226, 188, 139, 73, 60, 40, 65, 149, 13, 255, 113, 1, 168, 57, 222, 179, 12, 8, 156, 228, 180, 216, 144, 193, 86, 100, 97, 132, 203, 123, 112, 182, 50, 213, 116, 92, 108, 72, 66, 87, 184, 208};
.const .align 8 .b8 td1[1024] = {167, 244, 81, 80, 101, 65, 126, 83, 164, 23, 26, 195, 94, 39, 58, 150, 107, 171, 59, 203, 69, 157, 31, 241, 88, 250, 172, 171, 3, 227, 75, 147, 250, 48, 32, 85, 109, 118, 173, 246, 118, 204, 136, 145, 76, 2, 245, 37, 215, 229, 79, 252, 203, 42, 197, 215, 68, 53, 38, 128, 163, 98, 181, 143, 90, 177, 222, 73, 27, 186, 37, 103, 14, 234, 69, 152, 192, 254, 93, 225, 117, 47, 195, 2, 240, 76, 129, 18, 151, 70, 141, 163, 249, 211, 107, 198, 95, 143, 3, 231, 156, 146, 21, 149, 122, 109, 191, 235, 89, 82, 149, 218, 131, 190, 212, 45, 33, 116, 88, 211, 105, 224, 73, 41, 200, 201, 142, 68, 137, 194, 117, 106, 121, 142, 244, 120, 62, 88, 153, 107, 113, 185, 39, 221, 79, 225, 190, 182, 173, 136, 240, 23, 172, 32, 201, 102, 58, 206, 125, 180, 74, 223, 99, 24, 49, 26, 229, 130, 51, 81, 151, 96, 127, 83, 98, 69, 119, 100, 177, 224, 174, 107, 187, 132, 160, 129, 254, 28, 43, 8, 249, 148, 104, 72, 112, 88, 253, 69, 143, 25, 108, 222, 148, 135, 248, 123, 82, 183, 211, 115, 171, 35, 2, 75, 114, 226, 143, 31, 227, 87, 171, 85, 102, 42, 40, 235, 178, 7, 194, 181, 47, 3, 123, 197, 134, 154, 8, 55, 211, 165, 135, 40, 48, 242, 165, 191, 35, 178, 106, 3, 2, 186, 130, 22, 237, 92, 28, 207, 138, 43, 180, 121, 167, 146, 242, 7, 243, 240, 226, 105, 78, 161, 244, 218, 101, 205, 190, 5, 6, 213, 98, 52, 209, 31, 254, 166, 196, 138, 83, 46, 52, 157, 85, 243, 162, 160, 225, 138, 5, 50, 235, 246, 164, 117, 236, 131, 11, 57, 239, 96, 64, 170, 159, 113, 94, 6, 16, 110, 189, 81, 138, 33, 62, 249, 6, 221, 150, 61, 5, 62, 221, 174, 189, 230, 77, 70, 141, 84, 145, 181, 93, 196, 113, 5, 212, 6, 4, 111, 21, 80, 96, 255, 251, 152, 25, 36, 233, 189, 214, 151, 67, 64, 137, 204, 158, 217, 103, 119, 66, 232, 176, 189, 139, 137, 7, 136, 91, 25, 231, 56, 238, 200, 121, 219, 10, 124, 161, 71, 15, 66, 124, 233, 30, 132, 248, 201, 0, 0, 0, 0, 134, 128, 9, 131, 237, 43, 50, 72, 112, 17, 30, 172, 114, 90, 108, 78, 255, 14, 253, 251, 56, 133, 15, 86, 213, 174, 61, 30, 57, 45, 54, 39, 217, 15, 10, 100, 166, 92, 104, 33, 84, 91, 155, 209, 46, 54, 36, 58, 103, 10, 12, 177, 231, 87, 147, 15, 150, 238, 180, 210, 145, 155, 27, 158, 197, 192, 128, 79, 32, 220, 97, 162, 75, 119, 90, 105, 26, 18, 28, 22, 186, 147, 226, 10, 42, 160, 192, 229, 224, 34, 60, 67, 23, 27, 18, 29, 13, 9, 14, 11, 199, 139, 242, 173, 168, 182, 45, 185, 169, 30, 20, 200, 25, 241, 87, 133, 7, 117, 175, 76, 221, 153, 238, 187, 96, 127, 163, 253, 38, 1, 247, 159, 245, 114, 92, 188, 59, 102, 68, 197, 126, 251, 91, 52, 41, 67, 139, 118, 198, 35, 203, 220, 252, 237, 182, 104, 241, 228, 184, 99, 220, 49, 215, 202, 133, 99, 66, 16, 34, 151, 19, 64, 17, 198, 132, 32, 36, 74, 133, 125, 61, 187, 210, 248, 50, 249, 174, 17, 161, 41, 199, 109, 47, 158, 29, 75, 48, 178, 220, 243, 82, 134, 13, 236, 227, 193, 119, 208, 22, 179, 43, 108, 185, 112, 169, 153, 72, 148, 17, 250, 100, 233, 71, 34, 140, 252, 168, 196, 63, 240, 160, 26, 44, 125, 86, 216, 144, 51, 34, 239, 78, 73, 135, 199, 209, 56, 217, 193, 162, 202, 140, 254, 11, 212, 152, 54, 129, 245, 166, 207, 222, 122, 165, 40, 142, 183, 218, 38, 191, 173, 63, 164, 157, 58, 44, 228, 146, 120, 80, 13, 204, 95, 106, 155, 70, 126, 84, 98, 19, 141, 246, 194, 184, 216, 144, 232, 247, 57, 46, 94, 175, 195, 130, 245, 128, 93, 159, 190, 147, 208, 105, 124, 45, 213, 111, 169, 18, 37, 207, 179, 153, 172, 200, 59, 125, 24, 16, 167, 99, 156, 232, 110, 187, 59, 219, 123, 120, 38, 205, 9, 24, 89, 110, 244, 183, 154, 236, 1, 154, 79, 131, 168, 110, 149, 230, 101, 230, 255, 170, 126, 207, 188, 33, 8, 232, 21, 239, 230, 155, 231, 186, 217, 54, 111, 74, 206, 9, 159, 234, 212, 124, 176, 41, 214, 178, 164, 49, 175, 35, 63, 42, 49, 148, 165, 198, 48, 102, 162, 53, 192, 188, 78, 116, 55, 202, 130, 252, 166, 208, 144, 224, 176, 216, 167, 51, 21, 152, 4, 241, 74, 218, 236, 65, 247, 80, 205, 127, 14, 246, 145, 23, 47, 214, 77, 118, 141, 176, 239, 67, 77, 77, 170, 204, 84, 4, 150, 228, 223, 181, 209, 158, 227, 136, 106, 76, 27, 31, 44, 193, 184, 81, 101, 70, 127, 234, 94, 157, 4, 53, 140, 1, 93, 116, 135, 250, 115, 65, 11, 251, 46, 29, 103, 179, 90, 210, 219, 146, 82, 86, 16, 233, 51, 71, 214, 109, 19, 97, 215, 154, 140, 12, 161, 55, 122, 20, 248, 89, 142, 60, 19, 235, 137, 39, 169, 206, 238, 201, 97, 183, 53, 229, 28, 225, 237, 177, 71, 122, 60, 223, 210, 156, 89, 115, 242, 85, 63, 206, 20, 24, 121, 55, 199, 115, 191, 205, 247, 83, 234, 170, 253, 95, 91, 111, 61, 223, 20, 219, 68, 120, 134, 243, 175, 202, 129, 196, 104, 185, 62, 52, 36, 56, 44, 64, 163, 194, 95, 195, 29, 22, 114, 37, 226, 188, 12, 73, 60, 40, 139, 149, 13, 255, 65, 1, 168, 57, 113, 179, 12, 8, 222, 228, 180, 216, 156, 193, 86, 100, 144, 132, 203, 123, 97, 182, 50, 213, 112, 92, 108, 72, 116, 87, 184, 208, 66};
.const .align 8 .b8 td2[1024] = {244, 81, 80, 167, 65, 126, 83, 101, 23, 26, 195, 164, 39, 58, 150, 94, 171, 59, 203, 107, 157, 31, 241, 69, 250, 172, 171, 88, 227, 75, 147, 3, 48, 32, 85, 250, 118, 173, 246, 109, 204, 136, 145, 118, 2, 245, 37, 76, 229, 79, 252, 215, 42, 197, 215, 203, 53, 38, 128, 68, 98, 181, 143, 163, 177, 222, 73, 90, 186, 37, 103, 27, 234, 69, 152, 14, 254, 93, 225, 192, 47, 195, 2, 117, 76, 129, 18, 240, 70, 141, 163, 151, 211, 107, 198, 249, 143, 3, 231, 95, 146, 21, 149, 156, 109, 191, 235, 122, 82, 149, 218, 89, 190, 212, 45, 131, 116, 88, 211, 33, 224, 73, 41, 105, 201, 142, 68, 200, 194, 117, 106, 137, 142, 244, 120, 121, 88, 153, 107, 62, 185, 39, 221, 113, 225, 190, 182, 79, 136, 240, 23, 173, 32, 201, 102, 172, 206, 125, 180, 58, 223, 99, 24, 74, 26, 229, 130, 49, 81, 151, 96, 51, 83, 98, 69, 127, 100, 177, 224, 119, 107, 187, 132, 174, 129, 254, 28, 160, 8, 249, 148, 43, 72, 112, 88, 104, 69, 143, 25, 253, 222, 148, 135, 108, 123, 82, 183, 248, 115, 171, 35, 211, 75, 114, 226, 2, 31, 227, 87, 143, 85, 102, 42, 171, 235, 178, 7, 40, 181, 47, 3, 194, 197, 134, 154, 123, 55, 211, 165, 8, 40, 48, 242, 135, 191, 35, 178, 165, 3, 2, 186, 106, 22, 237, 92, 130, 207, 138, 43, 28, 121, 167, 146, 180, 7, 243, 240, 242, 105, 78, 161, 226, 218, 101, 205, 244, 5, 6, 213, 190, 52, 209, 31, 98, 166, 196, 138, 254, 46, 52, 157, 83, 243, 162, 160, 85, 138, 5, 50, 225, 246, 164, 117, 235, 131, 11, 57, 236, 96, 64, 170, 239, 113, 94, 6, 159, 110, 189, 81, 16, 33, 62, 249, 138, 221, 150, 61, 6, 62, 221, 174, 5, 230, 77, 70, 189, 84, 145, 181, 141, 196, 113, 5, 93, 6, 4, 111, 212, 80, 96, 255, 21, 152, 25, 36, 251, 189, 214, 151, 233, 64, 137, 204, 67, 217, 103, 119, 158, 232, 176, 189, 66, 137, 7, 136, 139, 25, 231, 56, 91, 200, 121, 219, 238, 124, 161, 71, 10, 66, 124, 233, 15, 132, 248, 201, 30, 0, 0, 0, 0, 128, 9, 131, 134, 43, 50, 72, 237, 17, 30, 172, 112, 90, 108, 78, 114, 14, 253, 251, 255, 133, 15, 86, 56, 174, 61, 30, 213, 45, 54, 39, 57, 15, 10, 100, 217, 92, 104, 33, 166, 91, 155, 209, 84, 54, 36, 58, 46, 10, 12, 177, 103, 87, 147, 15, 231, 238, 180, 210, 150, 155, 27, 158, 145, 192, 128, 79, 197, 220, 97, 162, 32, 119, 90, 105, 75, 18, 28, 22, 26, 147, 226, 10, 186, 160, 192, 229, 42, 34, 60, 67, 224, 27, 18, 29, 23, 9, 14, 11, 13, 139, 242, 173, 199, 182, 45, 185, 168, 30, 20, 200, 169, 241, 87, 133, 25, 117, 175, 76, 7, 153, 238, 187, 221, 127, 163, 253, 96, 1, 247, 159, 38, 114, 92, 188, 245, 102, 68, 197, 59, 251, 91, 52, 126, 67, 139, 118, 41, 35, 203, 220, 198, 237, 182, 104, 252, 228, 184, 99, 241, 49, 215, 202, 220, 99, 66, 16, 133, 151, 19, 64, 34, 198, 132, 32, 17, 74, 133, 125, 36, 187, 210, 248, 61, 249, 174, 17, 50, 41, 199, 109, 161, 158, 29, 75, 47, 178, 220, 243, 48, 134, 13, 236, 82, 193, 119, 208, 227, 179, 43, 108, 22, 112, 169, 153, 185, 148, 17, 250, 72, 233, 71, 34, 100, 252, 168, 196, 140, 240, 160, 26, 63, 125, 86, 216, 44, 51, 34, 239, 144, 73, 135, 199, 78, 56, 217, 193, 209, 202, 140, 254, 162, 212, 152, 54, 11, 245, 166, 207, 129, 122, 165, 40, 222, 183, 218, 38, 142, 173, 63, 164, 191, 58, 44, 228, 157, 120, 80, 13, 146, 95, 106, 155, 204, 126, 84, 98, 70, 141, 246, 194, 19, 216, 144, 232, 184, 57, 46, 94, 247, 195, 130, 245, 175, 93, 159, 190, 128, 208, 105, 124, 147, 213, 111, 169, 45, 37, 207, 179, 18, 172, 200, 59, 153, 24, 16, 167, 125, 156, 232, 110, 99, 59, 219, 123, 187, 38, 205, 9, 120, 89, 110, 244, 24, 154, 236, 1, 183, 79, 131, 168, 154, 149, 230, 101, 110, 255, 170, 126, 230, 188, 33, 8, 207, 21, 239, 230, 232, 231, 186, 217, 155, 111, 74, 206, 54, 159, 234, 212, 9, 176, 41, 214, 124, 164, 49, 175, 178, 63, 42, 49, 35, 165, 198, 48, 148, 162, 53, 192, 102, 78, 116, 55, 188, 130, 252, 166, 202, 144, 224, 176, 208, 167, 51, 21, 216, 4, 241, 74, 152, 236, 65, 247, 218, 205, 127, 14, 80, 145, 23, 47, 246, 77, 118, 141, 214, 239, 67, 77, 176, 170, 204, 84, 77, 150, 228, 223, 4, 209, 158, 227, 181, 106, 76, 27, 136, 44, 193, 184, 31, 101, 70, 127, 81, 94, 157, 4, 234, 140, 1, 93, 53, 135, 250, 115, 116, 11, 251, 46, 65, 103, 179, 90, 29, 219, 146, 82, 210, 16, 233, 51, 86, 214, 109, 19, 71, 215, 154, 140, 97, 161, 55, 122, 12, 248, 89, 142, 20, 19, 235, 137, 60, 169, 206, 238, 39, 97, 183, 53, 201, 28, 225, 237, 229, 71, 122, 60, 177, 210, 156, 89, 223, 242, 85, 63, 115, 20, 24, 121, 206, 199, 115, 191, 55, 247, 83, 234, 205, 253, 95, 91, 170, 61, 223, 20, 111, 68, 120, 134, 219, 175, 202, 129, 243, 104, 185, 62, 196, 36, 56, 44, 52, 163, 194, 95, 64, 29, 22, 114, 195, 226, 188, 12, 37, 60, 40, 139, 73, 13, 255, 65, 149, 168, 57, 113, 1, 12, 8, 222, 179, 180, 216, 156, 228, 86, 100, 144, 193, 203, 123, 97, 132, 50, 213, 112, 182, 108, 72, 116, 92, 184, 208, 66, 87};
.const .align 8 .b8 td3[1024] = {81, 80, 167, 244, 126, 83, 101, 65, 26, 195, 164, 23, 58, 150, 94, 39, 59, 203, 107, 171, 31, 241, 69, 157, 172, 171, 88, 250, 75, 147, 3, 227, 32, 85, 250, 48, 173, 246, 109, 118, 136, 145, 118, 204, 245, 37, 76, 2, 79, 252, 215, 229, 197, 215, 203, 42, 38, 128, 68, 53, 181, 143, 163, 98, 222, 73, 90, 177, 37, 103, 27, 186, 69, 152, 14, 234, 93, 225, 192, 254, 195, 2, 117, 47, 129, 18, 240, 76, 141, 163, 151, 70, 107, 198, 249, 211, 3, 231, 95, 143, 21, 149, 156, 146, 191, 235, 122, 109, 149, 218, 89, 82, 212, 45, 131, 190, 88, 211, 33, 116, 73, 41, 105, 224, 142, 68, 200, 201, 117, 106, 137, 194, 244, 120, 121, 142, 153, 107, 62, 88, 39, 221, 113, 185, 190, 182, 79, 225, 240, 23, 173, 136, 201, 102, 172, 32, 125, 180, 58, 206, 99, 24, 74, 223, 229, 130, 49, 26, 151, 96, 51, 81, 98, 69, 127, 83, 177, 224, 119, 100, 187, 132, 174, 107, 254, 28, 160, 129, 249, 148, 43, 8, 112, 88, 104, 72, 143, 25, 253, 69, 148, 135, 108, 222, 82, 183, 248, 123, 171, 35, 211, 115, 114, 226, 2, 75, 227, 87, 143, 31, 102, 42, 171, 85, 178, 7, 40, 235, 47, 3, 194, 181, 134, 154, 123, 197, 211, 165, 8, 55, 48, 242, 135, 40, 35, 178, 165, 191, 2, 186, 106, 3, 237, 92, 130, 22, 138, 43, 28, 207, 167, 146, 180, 121, 243, 240, 242, 7, 78, 161, 226, 105, 101, 205, 244, 218, 6, 213, 190, 5, 209, 31, 98, 52, 196, 138, 254, 166, 52, 157, 83, 46, 162, 160, 85, 243, 5, 50, 225, 138, 164, 117, 235, 246, 11, 57, 236, 131, 64, 170, 239, 96, 94, 6, 159, 113, 189, 81, 16, 110, 62, 249, 138, 33, 150, 61, 6, 221, 221, 174, 5, 62, 77, 70, 189, 230, 145, 181, 141, 84, 113, 5, 93, 196, 4, 111, 212, 6, 96, 255, 21, 80, 25, 36, 251, 152, 214, 151, 233, 189, 137, 204, 67, 64, 103, 119, 158, 217, 176, 189, 66, 232, 7, 136, 139, 137, 231, 56, 91, 25, 121, 219, 238, 200, 161, 71, 10, 124, 124, 233, 15, 66, 248, 201, 30, 132, 0, 0, 0, 0, 9, 131, 134, 128, 50, 72, 237, 43, 30, 172, 112, 17, 108, 78, 114, 90, 253, 251, 255, 14, 15, 86, 56, 133, 61, 30, 213, 174, 54, 39, 57, 45, 10, 100, 217, 15, 104, 33, 166, 92, 155, 209, 84, 91, 36, 58, 46, 54, 12, 177, 103, 10, 147, 15, 231, 87, 180, 210, 150, 238, 27, 158, 145, 155, 128, 79, 197, 192, 97, 162, 32, 220, 90, 105, 75, 119, 28, 22, 26, 18, 226, 10, 186, 147, 192, 229, 42, 160, 60, 67, 224, 34, 18, 29, 23, 27, 14, 11, 13, 9, 242, 173, 199, 139, 45, 185, 168, 182, 20, 200, 169, 30, 87, 133, 25, 241, 175, 76, 7, 117, 238, 187, 221, 153, 163, 253, 96, 127, 247, 159, 38, 1, 92, 188, 245, 114, 68, 197, 59, 102, 91, 52, 126, 251, 139, 118, 41, 67, 203, 220, 198, 35, 182, 104, 252, 237, 184, 99, 241, 228, 215, 202, 220, 49, 66, 16, 133, 99, 19, 64, 34, 151, 132, 32, 17, 198, 133, 125, 36, 74, 210, 248, 61, 187, 174, 17, 50, 249, 199, 109, 161, 41, 29, 75, 47, 158, 220, 243, 48, 178, 13, 236, 82, 134, 119, 208, 227, 193, 43, 108, 22, 179, 169, 153, 185, 112, 17, 250, 72, 148, 71, 34, 100, 233, 168, 196, 140, 252, 160, 26, 63, 240, 86, 216, 44, 125, 34, 239, 144, 51, 135, 199, 78, 73, 217, 193, 209, 56, 140, 254, 162, 202, 152, 54, 11, 212, 166, 207, 129, 245, 165, 40, 222, 122, 218, 38, 142, 183, 63, 164, 191, 173, 44, 228, 157, 58, 80, 13, 146, 120, 106, 155, 204, 95, 84, 98, 70, 126, 246, 194, 19, 141, 144, 232, 184, 216, 46, 94, 247, 57, 130, 245, 175, 195, 159, 190, 128, 93, 105, 124, 147, 208, 111, 169, 45, 213, 207, 179, 18, 37, 200, 59, 153, 172, 16, 167, 125, 24, 232, 110, 99, 156, 219, 123, 187, 59, 205, 9, 120, 38, 110, 244, 24, 89, 236, 1, 183, 154, 131, 168, 154, 79, 230, 101, 110, 149, 170, 126, 230, 255, 33, 8, 207, 188, 239, 230, 232, 21, 186, 217, 155, 231, 74, 206, 54, 111, 234, 212, 9, 159, 41, 214, 124, 176, 49, 175, 178, 164, 42, 49, 35, 63, 198, 48, 148, 165, 53, 192, 102, 162, 116, 55, 188, 78, 252, 166, 202, 130, 224, 176, 208, 144, 51, 21, 216, 167, 241, 74, 152, 4, 65, 247, 218, 236, 127, 14, 80, 205, 23, 47, 246, 145, 118, 141, 214, 77, 67, 77, 176, 239, 204, 84, 77, 170, 228, 223, 4, 150, 158, 227, 181, 209, 76, 27, 136, 106, 193, 184, 31, 44, 70, 127, 81, 101, 157, 4, 234, 94, 1, 93, 53, 140, 250, 115, 116, 135, 251, 46, 65, 11, 179, 90, 29, 103, 146, 82, 210, 219, 233, 51, 86, 16, 109, 19, 71, 214, 154, 140, 97, 215, 55, 122, 12, 161, 89, 142, 20, 248, 235, 137, 60, 19, 206, 238, 39, 169, 183, 53, 201, 97, 225, 237, 229, 28, 122, 60, 177, 71, 156, 89, 223, 210, 85, 63, 115, 242, 24, 121, 206, 20, 115, 191, 55, 199, 83, 234, 205, 247, 95, 91, 170, 253, 223, 20, 111, 61, 120, 134, 219, 68, 202, 129, 243, 175, 185, 62, 196, 104, 56, 44, 52, 36, 194, 95, 64, 163, 22, 114, 195, 29, 188, 12, 37, 226, 40, 139, 73, 60, 255, 65, 149, 13, 57, 113, 1, 168, 8, 222, 179, 12, 216, 156, 228, 180, 100, 144, 193, 86, 123, 97, 132, 203, 213, 112, 182, 50, 72, 116, 92, 108, 208, 66, 87, 184};
.const .align 8 .b8 td4[1024] = {82, 82, 82, 82, 9, 9, 9, 9, 106, 106, 106, 106, 213, 213, 213, 213, 48, 48, 48, 48, 54, 54, 54, 54, 165, 165, 165, 165, 56, 56, 56, 56, 191, 191, 191, 191, 64, 64, 64, 64, 163, 163, 163, 163, 158, 158, 158, 158, 129, 129, 129, 129, 243, 243, 243, 243, 215, 215, 215, 215, 251, 251, 251, 251, 124, 124, 124, 124, 227, 227, 227, 227, 57, 57, 57, 57, 130, 130, 130, 130, 155, 155, 155, 155, 47, 47, 47, 47, 255, 255, 255, 255, 135, 135, 135, 135, 52, 52, 52, 52, 142, 142, 142, 142, 67, 67, 67, 67, 68, 68, 68, 68, 196, 196, 196, 196, 222, 222, 222, 222, 233, 233, 233, 233, 203, 203, 203, 203, 84, 84, 84, 84, 123, 123, 123, 123, 148, 148, 148, 148, 50, 50, 50, 50, 166, 166, 166, 166, 194, 194, 194, 194, 35, 35, 35, 35, 61, 61, 61, 61, 238, 238, 238, 238, 76, 76, 76, 76, 149, 149, 149, 149, 11, 11, 11, 11, 66, 66, 66, 66, 250, 250, 250, 250, 195, 195, 195, 195, 78, 78, 78, 78, 8, 8, 8, 8, 46, 46, 46, 46, 161, 161, 161, 161, 102, 102, 102, 102, 40, 40, 40, 40, 217, 217, 217, 217, 36, 36, 36, 36, 178, 178, 178, 178, 118, 118, 118, 118, 91, 91, 91, 91, 162, 162, 162, 162, 73, 73, 73, 73, 109, 109, 109, 109, 139, 139, 139, 139, 209, 209, 209, 209, 37, 37, 37, 37, 114, 114, 114, 114, 248, 248, 248, 248, 246, 246, 246, 246, 100, 100, 100, 100, 134, 134, 134, 134, 104, 104, 104, 104, 152, 152, 152, 152, 22, 22, 22, 22, 212, 212, 212, 212, 164, 164, 164, 164, 92, 92, 92, 92, 204, 204, 204, 204, 93, 93, 93, 93, 101, 101, 101, 101, 182, 182, 182, 182, 146, 146, 146, 146, 108, 108, 108, 108, 112, 112, 112, 112, 72, 72, 72, 72, 80, 80, 80, 80, 253, 253, 253, 253, 237, 237, 237, 237, 185, 185, 185, 185, 218, 218, 218, 218, 94, 94, 94, 94, 21, 21, 21, 21, 70, 70, 70, 70, 87, 87, 87, 87, 167, 167, 167, 167, 141, 141, 141, 141, 157, 157, 157, 157, 132, 132, 132, 132, 144, 144, 144, 144, 216, 216, 216, 216, 171, 171, 171, 171, 0, 0, 0, 0, 140, 140, 140, 140, 188, 188, 188, 188, 211, 211, 211, 211, 10, 10, 10, 10, 247, 247, 247, 247, 228, 228, 228, 228, 88, 88, 88, 88, 5, 5, 5, 5, 184, 184, 184, 184, 179, 179, 179, 179, 69, 69, 69, 69, 6, 6, 6, 6, 208, 208, 208, 208, 44, 44, 44, 44, 30, 30, 30, 30, 143, 143, 143, 143, 202, 202, 202, 202, 63, 63, 63, 63, 15, 15, 15, 15, 2, 2, 2, 2, 193, 193, 193, 193, 175, 175, 175, 175, 189, 189, 189, 189, 3, 3, 3, 3, 1, 1, 1, 1, 19, 19, 19, 19, 138, 138, 138, 138, 107, 107, 107, 107, 58, 58, 58, 58, 145, 145, 145, 145, 17, 17, 17, 17, 65, 65, 65, 65, 79, 79, 79, 79, 103, 103, 103, 103, 220, 220, 220, 220, 234, 234, 234, 234, 151, 151, 151, 151, 242, 242, 242, 242, 207, 207, 207, 207, 206, 206, 206, 206, 240, 240, 240, 240, 180, 180, 180, 180, 230, 230, 230, 230, 115, 115, 115, 115, 150, 150, 150, 150, 172, 172, 172, 172, 116, 116, 116, 116, 34, 34, 34, 34, 231, 231, 231, 231, 173, 173, 173, 173, 53, 53, 53, 53, 133, 133, 133, 133, 226, 226, 226, 226, 249, 249, 249, 249, 55, 55, 55, 55, 232, 232, 232, 232, 28, 28, 28, 28, 117, 117, 117, 117, 223, 223, 223, 223, 110, 110, 110, 110, 71, 71, 71, 71, 241, 241, 241, 241, 26, 26, 26, 26, 113, 113, 113, 113, 29, 29, 29, 29, 41, 41, 41, 41, 197, 197, 197, 197, 137, 137, 137, 137, 111, 111, 111, 111, 183, 183, 183, 183, 98, 98, 98, 98, 14, 14, 14, 14, 170, 170, 170, 170, 24, 24, 24, 24, 190, 190, 190, 190, 27, 27, 27, 27, 252, 252, 252, 252, 86, 86, 86, 86, 62, 62, 62, 62, 75, 75, 75, 75, 198, 198, 198, 198, 210, 210, 210, 210, 121, 121, 121, 121, 32, 32, 32, 32, 154, 154, 154, 154, 219, 219, 219, 219, 192, 192, 192, 192, 254, 254, 254, 254, 120, 120, 120, 120, 205, 205, 205, 205, 90, 90, 90, 90, 244, 244, 244, 244, 31, 31, 31, 31, 221, 221, 221, 221, 168, 168, 168, 168, 51, 51, 51, 51, 136, 136, 136, 136, 7, 7, 7, 7, 199, 199, 199, 199, 49, 49, 49, 49, 177, 177, 177, 177, 18, 18, 18, 18, 16, 16, 16, 16, 89, 89, 89, 89, 39, 39, 39, 39, 128, 128, 128, 128, 236, 236, 236, 236, 95, 95, 95, 95, 96, 96, 96, 96, 81, 81, 81, 81, 127, 127, 127, 127, 169, 169, 169, 169, 25, 25, 25, 25, 181, 181, 181, 181, 74, 74, 74, 74, 13, 13, 13, 13, 45, 45, 45, 45, 229, 229, 229, 229, 122, 122, 122, 122, 159, 159, 159, 159, 147, 147, 147, 147, 201, 201, 201, 201, 156, 156, 156, 156, 239, 239, 239, 239, 160, 160, 160, 160, 224, 224, 224, 224, 59, 59, 59, 59, 77, 77, 77, 77, 174, 174, 174, 174, 42, 42, 42, 42, 245, 245, 245, 245, 176, 176, 176, 176, 200, 200, 200, 200, 235, 235, 235, 235, 187, 187, 187, 187, 60, 60, 60, 60, 131, 131, 131, 131, 83, 83, 83, 83, 153, 153, 153, 153, 97, 97, 97, 97, 23, 23, 23, 23, 43, 43, 43, 43, 4, 4, 4, 4, 126, 126, 126, 126, 186, 186, 186, 186, 119, 119, 119, 119, 214, 214, 214, 214, 38, 38, 38, 38, 225, 225, 225, 225, 105, 105, 105, 105, 20, 20, 20, 20, 99, 99, 99, 99, 85, 85, 85, 85, 33, 33, 33, 33, 12, 12, 12, 12, 125, 125, 125, 125};
.const .align 8 .b8 rcon[40] = {0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 4, 0, 0, 0, 8, 0, 0, 0, 16, 0, 0, 0, 32, 0, 0, 0, 64, 0, 0, 0, 128, 0, 0, 0, 27, 0, 0, 0, 54};
.const .align 8 .b8 k_sha512[640] = {34, 174, 40, 215, 152, 47, 138, 66, 205, 101, 239, 35, 145, 68, 55, 113, 47, 59, 77, 236, 207, 251, 192, 181, 188, 219, 137, 129, 165, 219, 181, 233, 56, 181, 72, 243, 91, 194, 86, 57, 25, 208, 5, 182, 241, 17, 241, 89, 155, 79, 25, 175, 164, 130, 63, 146, 24, 129, 109, 218, 213, 94, 28, 171, 66, 2, 3, 163, 152, 170, 7, 216, 190, 111, 112, 69, 1, 91, 131, 18, 140, 178, 228, 78, 190, 133, 49, 36, 226, 180, 255, 213, 195, 125, 12, 85, 111, 137, 123, 242, 116, 93, 190, 114, 177, 150, 22, 59, 254, 177, 222, 128, 53, 18, 199, 37, 167, 6, 220, 155, 148, 38, 105, 207, 116, 241, 155, 193, 210, 74, 241, 158, 193, 105, 155, 228, 227, 37, 79, 56, 134, 71, 190, 239, 181, 213, 140, 139, 198, 157, 193, 15, 101, 156, 172, 119, 204, 161, 12, 36, 117, 2, 43, 89, 111, 44, 233, 45, 131, 228, 166, 110, 170, 132, 116, 74, 212, 251, 65, 189, 220, 169, 176, 92, 181, 83, 17, 131, 218, 136, 249, 118, 171, 223, 102, 238, 82, 81, 62, 152, 16, 50, 180, 45, 109, 198, 49, 168, 63, 33, 251, 152, 200, 39, 3, 176, 228, 14, 239, 190, 199, 127, 89, 191, 194, 143, 168, 61, 243, 11, 224, 198, 37, 167, 10, 147, 71, 145, 167, 213, 111, 130, 3, 224, 81, 99, 202, 6, 112, 110, 14, 10, 103, 41, 41, 20, 252, 47, 210, 70, 133, 10, 183, 39, 38, 201, 38, 92, 56, 33, 27, 46, 237, 42, 196, 90, 252, 109, 44, 77, 223, 179, 149, 157, 19, 13, 56, 83, 222, 99, 175, 139, 84, 115, 10, 101, 168, 178, 119, 60, 187, 10, 106, 118, 230, 174, 237, 71, 46, 201, 194, 129, 59, 53, 130, 20, 133, 44, 114, 146, 100, 3, 241, 76, 161, 232, 191, 162, 1, 48, 66, 188, 75, 102, 26, 168, 145, 151, 248, 208, 112, 139, 75, 194, 48, 190, 84, 6, 163, 81, 108, 199, 24, 82, 239, 214, 25, 232, 146, 209, 16, 169, 101, 85, 36, 6, 153, 214, 42, 32, 113, 87, 133, 53, 14, 244, 184, 209, 187, 50, 112, 160, 106, 16, 200, 208, 210, 184, 22, 193, 164, 25, 83, 171, 65, 81, 8, 108, 55, 30, 153, 235, 142, 223, 76, 119, 72, 39, 168, 72, 155, 225, 181, 188, 176, 52, 99, 90, 201, 197, 179, 12, 28, 57, 203, 138, 65, 227, 74, 170, 216, 78, 115, 227, 99, 119, 79, 202, 156, 91, 163, 184, 178, 214, 243, 111, 46, 104, 252, 178, 239, 93, 238, 130, 143, 116, 96, 47, 23, 67, 111, 99, 165, 120, 114, 171, 240, 161, 20, 120, 200, 132, 236, 57, 100, 26, 8, 2, 199, 140, 40, 30, 99, 35, 250, 255, 190, 144, 233, 189, 130, 222, 235, 108, 80, 164, 21, 121, 198, 178, 247, 163, 249, 190, 43, 83, 114, 227, 242, 120, 113, 198, 156, 97, 38, 234, 206, 62, 39, 202, 7, 194, 192, 33, 199, 184, 134, 209, 30, 235, 224, 205, 214, 125, 218, 234, 120, 209, 110, 238, 127, 79, 125, 245, 186, 111, 23, 114, 170, 103, 240, 6, 166, 152, 200, 162, 197, 125, 99, 10, 174, 13, 249, 190, 4, 152, 63, 17, 27, 71, 28, 19, 53, 11, 113, 27, 132, 125, 4, 35, 245, 119, 219, 40, 147, 36, 199, 64, 123, 171, 202, 50, 188, 190, 201, 21, 10, 190, 158, 60, 76, 13, 16, 156, 196, 103, 29, 67, 182, 66, 62, 203, 190, 212, 197, 76, 42, 126, 101, 252, 156, 41, 127, 89, 236, 250, 214, 58, 171, 111, 203, 95, 23, 88, 71, 74, 140, 25, 68, 108};
// m11300_comp$s_td0 has been demoted
// m11300_comp$s_td1 has been demoted
// m11300_comp$s_td2 has been demoted
// m11300_comp$s_td3 has been demoted
// m11300_comp$s_td4 has been demoted
// m11300_comp$s_te0 has been demoted
// m11300_comp$s_te1 has been demoted
// m11300_comp$s_te2 has been demoted
// m11300_comp$s_te3 has been demoted

.entry gpu_memset(
	.param .u64 .ptr .global .align 16 gpu_memset_param_0,
	.param .u32 gpu_memset_param_1,
	.param .u32 gpu_memset_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<4>;


	ld.param.u64 	%rd1, [gpu_memset_param_0];
	ld.param.u32 	%r2, [gpu_memset_param_1];
	ld.param.u32 	%r3, [gpu_memset_param_2];
	mov.b32	%r4, %envreg3;
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %ntid.x;
	mad.lo.s32 	%r7, %r5, %r6, %r4;
	mov.u32 	%r8, %tid.x;
	add.s32 	%r1, %r7, %r8;
	setp.ge.u32	%p1, %r1, %r3;
	@%p1 bra 	BB0_2;

	mul.wide.u32 	%rd2, %r1, 16;
	add.s64 	%rd3, %rd1, %rd2;
	st.global.v4.u32 	[%rd3], {%r2, %r2, %r2, %r2};

BB0_2:
	ret;
}

	// .globl	m11300_init
.entry m11300_init(
	.param .u64 .ptr .global .align 4 m11300_init_param_0,
	.param .u64 .ptr .global .align 4 m11300_init_param_1,
	.param .u64 .ptr .global .align 4 m11300_init_param_2,
	.param .u64 .ptr .global .align 4 m11300_init_param_3,
	.param .u64 .ptr .global .align 8 m11300_init_param_4,
	.param .u64 .ptr .global .align 1 m11300_init_param_5,
	.param .u64 .ptr .global .align 4 m11300_init_param_6,
	.param .u64 .ptr .global .align 4 m11300_init_param_7,
	.param .u64 .ptr .global .align 4 m11300_init_param_8,
	.param .u64 .ptr .global .align 4 m11300_init_param_9,
	.param .u64 .ptr .global .align 4 m11300_init_param_10,
	.param .u64 .ptr .global .align 4 m11300_init_param_11,
	.param .u64 .ptr .global .align 4 m11300_init_param_12,
	.param .u64 .ptr .global .align 4 m11300_init_param_13,
	.param .u64 .ptr .global .align 4 m11300_init_param_14,
	.param .u64 .ptr .global .align 4 m11300_init_param_15,
	.param .u64 .ptr .global .align 4 m11300_init_param_16,
	.param .u64 .ptr .global .align 4 m11300_init_param_17,
	.param .u64 .ptr .global .align 4 m11300_init_param_18,
	.param .u64 .ptr .global .align 4 m11300_init_param_19,
	.param .u64 .ptr .global .align 4 m11300_init_param_20,
	.param .u64 .ptr .global .align 4 m11300_init_param_21,
	.param .u64 .ptr .global .align 4 m11300_init_param_22,
	.param .u64 .ptr .global .align 4 m11300_init_param_23,
	.param .u32 m11300_init_param_24,
	.param .u32 m11300_init_param_25,
	.param .u32 m11300_init_param_26,
	.param .u32 m11300_init_param_27,
	.param .u32 m11300_init_param_28,
	.param .u32 m11300_init_param_29,
	.param .u32 m11300_init_param_30,
	.param .u32 m11300_init_param_31,
	.param .u32 m11300_init_param_32,
	.param .u32 m11300_init_param_33,
	.param .u32 m11300_init_param_34
)
{
	.reg .pred 	%p<25>;
	.reg .b32 	%r<2838>;
	.reg .b64 	%rd<2799>;


	ld.param.u64 	%rd2, [m11300_init_param_0];
	ld.param.u64 	%rd3, [m11300_init_param_4];
	ld.param.u64 	%rd4, [m11300_init_param_17];
	ld.param.u32 	%r154, [m11300_init_param_27];
	ld.param.u32 	%r155, [m11300_init_param_34];
	mov.b32	%r156, %envreg3;
	mov.u32 	%r157, %ctaid.x;
	mov.u32 	%r158, %ntid.x;
	mad.lo.s32 	%r159, %r157, %r158, %r156;
	mov.u32 	%r160, %tid.x;
	add.s32 	%r1, %r159, %r160;
	setp.ge.u32	%p1, %r1, %r155;
	@%p1 bra 	BB1_48;

	cvt.u64.u32	%rd1, %r1;
	mul.wide.u32 	%rd5, %r1, 80;
	add.s64 	%rd6, %rd2, %rd5;
	ld.global.u32 	%r2, [%rd6];
	ld.global.u32 	%r3, [%rd6+4];
	ld.global.u32 	%r4, [%rd6+8];
	ld.global.u32 	%r5, [%rd6+12];
	ld.global.u32 	%r6, [%rd6+16];
	ld.global.u32 	%r7, [%rd6+20];
	ld.global.u32 	%r8, [%rd6+24];
	ld.global.u32 	%r9, [%rd6+28];
	ld.global.u32 	%r10, [%rd6+32];
	ld.global.u32 	%r11, [%rd6+36];
	mul.wide.u32 	%rd7, %r154, 180;
	add.s64 	%rd8, %rd4, %rd7;
	ld.global.u32 	%r12, [%rd8];
	ld.global.u32 	%r13, [%rd8+4];
	ld.global.u32 	%r14, [%rd8+8];
	ld.global.u32 	%r15, [%rd8+12];
	ld.global.u32 	%r2829, [%rd8+16];
	ld.global.u32 	%r2828, [%rd8+20];
	ld.global.u32 	%r2827, [%rd8+24];
	ld.global.u32 	%r2826, [%rd8+28];
	ld.global.u32 	%r20, [%rd8+128];
	ld.global.u32 	%r21, [%rd6+64];
	and.b32  	%r170, %r21, 3;
	mov.u32 	%r171, 4;
	sub.s32 	%r172, %r171, %r170;
	shl.b32 	%r173, %r172, 2;
	mov.u32 	%r174, 1985229328;
	shr.u32 	%r175, %r174, %r173;
	and.b32  	%r22, %r175, 65535;
	shr.u32 	%r169, %r21, 2;
	mov.u32 	%r2830, 0;
	setp.gt.s32	%p2, %r169, 7;
	@%p2 bra 	BB1_17;

	setp.gt.s32	%p14, %r169, 3;
	@%p14 bra 	BB1_10;

	setp.gt.s32	%p20, %r169, 1;
	@%p20 bra 	BB1_7;

	setp.eq.s32	%p23, %r169, 0;
	@%p23 bra 	BB1_45;
	bra.uni 	BB1_5;

BB1_45:
	mov.u32 	%r753, 0;
	// inline asm
	prmt.b32 %r2830, %r753, %r753, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2833, %r2826, %r753, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2826, %r2827, %r2826, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2827, %r2828, %r2827, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2828, %r2829, %r2828, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2829, %r15, %r2829, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2822, %r14, %r15, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2823, %r13, %r14, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2824, %r12, %r13, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2825, %r753, %r12, %r22;
	// inline asm
	mov.u32 	%r2831, %r2830;
	mov.u32 	%r2832, %r2830;
	bra.uni 	BB1_46;

BB1_17:
	setp.gt.s32	%p3, %r169, 11;
	@%p3 bra 	BB1_25;

	setp.gt.s32	%p9, %r169, 9;
	@%p9 bra 	BB1_22;

	setp.eq.s32	%p12, %r169, 8;
	@%p12 bra 	BB1_39;
	bra.uni 	BB1_20;

BB1_39:
	// inline asm
	prmt.b32 %r2834, %r2827, %r2826, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2835, %r2828, %r2827, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2836, %r2829, %r2828, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2837, %r15, %r2829, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2830, %r14, %r15, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2831, %r13, %r14, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2832, %r12, %r13, %r22;
	// inline asm
	mov.u32 	%r2822, 0;
	// inline asm
	prmt.b32 %r2833, %r2822, %r12, %r22;
	// inline asm
	mov.u32 	%r2823, %r2822;
	mov.u32 	%r2824, %r2822;
	mov.u32 	%r2825, %r2822;
	mov.u32 	%r2826, %r2822;
	bra.uni 	BB1_40;

BB1_10:
	setp.gt.s32	%p15, %r169, 5;
	@%p15 bra 	BB1_14;

	setp.eq.s32	%p18, %r169, 4;
	@%p18 bra 	BB1_43;
	bra.uni 	BB1_12;

BB1_43:
	mov.u32 	%r2822, 0;
	// inline asm
	prmt.b32 %r2834, %r2822, %r2822, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2837, %r2826, %r2822, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2830, %r2827, %r2826, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2831, %r2828, %r2827, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2832, %r2829, %r2828, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2833, %r15, %r2829, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2826, %r14, %r15, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2827, %r13, %r14, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2828, %r12, %r13, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2829, %r2822, %r12, %r22;
	// inline asm
	mov.u32 	%r2823, %r2822;
	mov.u32 	%r2824, %r2822;
	mov.u32 	%r2825, %r2822;
	mov.u32 	%r2835, %r2834;
	mov.u32 	%r2836, %r2834;
	bra.uni 	BB1_47;

BB1_25:
	setp.gt.s32	%p4, %r169, 13;
	@%p4 bra 	BB1_29;

	setp.eq.s32	%p7, %r169, 12;
	@%p7 bra 	BB1_34;
	bra.uni 	BB1_27;

BB1_34:
	// inline asm
	prmt.b32 %r2834, %r14, %r15, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2835, %r13, %r14, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2836, %r12, %r13, %r22;
	// inline asm
	mov.u32 	%r2822, 0;
	// inline asm
	prmt.b32 %r2837, %r2822, %r12, %r22;
	// inline asm
	mov.u32 	%r2823, %r2822;
	mov.u32 	%r2824, %r2822;
	mov.u32 	%r2825, %r2822;
	mov.u32 	%r2826, %r2822;
	mov.u32 	%r2827, %r2822;
	mov.u32 	%r2828, %r2822;
	mov.u32 	%r2829, %r2822;
	mov.u32 	%r2830, %r2822;
	bra.uni 	BB1_35;

BB1_7:
	setp.eq.s32	%p21, %r169, 2;
	@%p21 bra 	BB1_44;
	bra.uni 	BB1_8;

BB1_44:
	mov.u32 	%r2824, 0;
	// inline asm
	prmt.b32 %r2830, %r2824, %r2824, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2831, %r2826, %r2824, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2832, %r2827, %r2826, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2833, %r2828, %r2827, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2826, %r2829, %r2828, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2827, %r15, %r2829, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2828, %r14, %r15, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2829, %r13, %r14, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2822, %r12, %r13, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2823, %r2824, %r12, %r22;
	// inline asm
	mov.u32 	%r2825, %r2824;
	bra.uni 	BB1_46;

BB1_22:
	setp.eq.s32	%p10, %r169, 10;
	@%p10 bra 	BB1_38;
	bra.uni 	BB1_23;

BB1_38:
	// inline asm
	prmt.b32 %r2834, %r2829, %r2828, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2835, %r15, %r2829, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2836, %r14, %r15, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2837, %r13, %r14, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2830, %r12, %r13, %r22;
	// inline asm
	mov.u32 	%r2822, 0;
	// inline asm
	prmt.b32 %r2831, %r2822, %r12, %r22;
	// inline asm
	mov.u32 	%r2823, %r2822;
	mov.u32 	%r2824, %r2822;
	mov.u32 	%r2825, %r2822;
	mov.u32 	%r2826, %r2822;
	mov.u32 	%r2827, %r2822;
	mov.u32 	%r2828, %r2822;
	mov.u32 	%r2829, %r2822;
	bra.uni 	BB1_36;

BB1_14:
	setp.eq.s32	%p16, %r169, 6;
	@%p16 bra 	BB1_42;
	bra.uni 	BB1_15;

BB1_42:
	mov.u32 	%r2822, 0;
	// inline asm
	prmt.b32 %r2834, %r2822, %r2822, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2835, %r2826, %r2822, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2836, %r2827, %r2826, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2837, %r2828, %r2827, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2830, %r2829, %r2828, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2831, %r15, %r2829, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2832, %r14, %r15, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2833, %r13, %r14, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2826, %r12, %r13, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2827, %r2822, %r12, %r22;
	// inline asm
	mov.u32 	%r2823, %r2822;
	mov.u32 	%r2824, %r2822;
	mov.u32 	%r2825, %r2822;
	bra.uni 	BB1_41;

BB1_29:
	setp.eq.s32	%p5, %r169, 14;
	@%p5 bra 	BB1_33;
	bra.uni 	BB1_30;

BB1_33:
	// inline asm
	prmt.b32 %r2834, %r12, %r13, %r22;
	// inline asm
	mov.u32 	%r2822, 0;
	// inline asm
	prmt.b32 %r2835, %r2822, %r12, %r22;
	// inline asm
	mov.u32 	%r2823, %r2822;
	mov.u32 	%r2824, %r2822;
	mov.u32 	%r2825, %r2822;
	mov.u32 	%r2826, %r2822;
	mov.u32 	%r2827, %r2822;
	mov.u32 	%r2828, %r2822;
	mov.u32 	%r2829, %r2822;
	mov.u32 	%r2830, %r2822;
	mov.u32 	%r2831, %r2822;
	mov.u32 	%r2832, %r2822;
	mov.u32 	%r2833, %r2822;
	bra.uni 	BB1_32;

BB1_5:
	setp.eq.s32	%p24, %r169, 1;
	@%p24 bra 	BB1_6;
	bra.uni 	BB1_24;

BB1_6:
	mov.u32 	%r2825, 0;
	// inline asm
	prmt.b32 %r2830, %r2825, %r2825, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2832, %r2826, %r2825, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2833, %r2827, %r2826, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2826, %r2828, %r2827, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2827, %r2829, %r2828, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2828, %r15, %r2829, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2829, %r14, %r15, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2822, %r13, %r14, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2823, %r12, %r13, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2824, %r2825, %r12, %r22;
	// inline asm
	mov.u32 	%r2831, %r2830;
	bra.uni 	BB1_46;

BB1_20:
	setp.eq.s32	%p13, %r169, 9;
	@%p13 bra 	BB1_21;
	bra.uni 	BB1_24;

BB1_21:
	// inline asm
	prmt.b32 %r2834, %r2828, %r2827, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2835, %r2829, %r2828, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2836, %r15, %r2829, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2837, %r14, %r15, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2830, %r13, %r14, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2831, %r12, %r13, %r22;
	// inline asm
	mov.u32 	%r2822, 0;
	// inline asm
	prmt.b32 %r2832, %r2822, %r12, %r22;
	// inline asm
	mov.u32 	%r2823, %r2822;
	mov.u32 	%r2824, %r2822;
	mov.u32 	%r2825, %r2822;
	mov.u32 	%r2826, %r2822;
	mov.u32 	%r2827, %r2822;
	mov.u32 	%r2828, %r2822;
	mov.u32 	%r2829, %r2822;
	mov.u32 	%r2833, %r2822;
	bra.uni 	BB1_47;

BB1_12:
	setp.eq.s32	%p19, %r169, 5;
	@%p19 bra 	BB1_13;
	bra.uni 	BB1_24;

BB1_13:
	mov.u32 	%r2822, 0;
	// inline asm
	prmt.b32 %r2834, %r2822, %r2822, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2836, %r2826, %r2822, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2837, %r2827, %r2826, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2830, %r2828, %r2827, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2831, %r2829, %r2828, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2832, %r15, %r2829, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2833, %r14, %r15, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2826, %r13, %r14, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2827, %r12, %r13, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2828, %r2822, %r12, %r22;
	// inline asm
	mov.u32 	%r2823, %r2822;
	mov.u32 	%r2824, %r2822;
	mov.u32 	%r2825, %r2822;
	mov.u32 	%r2829, %r2822;
	mov.u32 	%r2835, %r2834;
	bra.uni 	BB1_47;

BB1_27:
	setp.eq.s32	%p8, %r169, 13;
	@%p8 bra 	BB1_28;
	bra.uni 	BB1_24;

BB1_28:
	// inline asm
	prmt.b32 %r2834, %r13, %r14, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2835, %r12, %r13, %r22;
	// inline asm
	mov.u32 	%r2822, 0;
	// inline asm
	prmt.b32 %r2836, %r2822, %r12, %r22;
	// inline asm
	mov.u32 	%r2823, %r2822;
	mov.u32 	%r2824, %r2822;
	mov.u32 	%r2825, %r2822;
	mov.u32 	%r2826, %r2822;
	mov.u32 	%r2827, %r2822;
	mov.u32 	%r2828, %r2822;
	mov.u32 	%r2829, %r2822;
	mov.u32 	%r2830, %r2822;
	mov.u32 	%r2831, %r2822;
	mov.u32 	%r2832, %r2822;
	mov.u32 	%r2833, %r2822;
	mov.u32 	%r2837, %r2822;
	bra.uni 	BB1_47;

BB1_8:
	setp.eq.s32	%p22, %r169, 3;
	@%p22 bra 	BB1_9;
	bra.uni 	BB1_24;

BB1_9:
	mov.u32 	%r2823, 0;
	// inline asm
	prmt.b32 %r2834, %r2823, %r2823, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2830, %r2826, %r2823, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2831, %r2827, %r2826, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2832, %r2828, %r2827, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2833, %r2829, %r2828, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2826, %r15, %r2829, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2827, %r14, %r15, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2828, %r13, %r14, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2829, %r12, %r13, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2822, %r2823, %r12, %r22;
	// inline asm
	mov.u32 	%r2824, %r2823;
	mov.u32 	%r2825, %r2823;
	mov.u32 	%r2835, %r2834;
	mov.u32 	%r2836, %r2834;
	mov.u32 	%r2837, %r2834;
	bra.uni 	BB1_47;

BB1_23:
	setp.eq.s32	%p11, %r169, 11;
	@%p11 bra 	BB1_37;
	bra.uni 	BB1_24;

BB1_37:
	// inline asm
	prmt.b32 %r2834, %r15, %r2829, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2835, %r14, %r15, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2836, %r13, %r14, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2837, %r12, %r13, %r22;
	// inline asm
	mov.u32 	%r2822, 0;
	// inline asm
	prmt.b32 %r2830, %r2822, %r12, %r22;
	// inline asm
	mov.u32 	%r2823, %r2822;
	mov.u32 	%r2824, %r2822;
	mov.u32 	%r2825, %r2822;
	mov.u32 	%r2826, %r2822;
	mov.u32 	%r2827, %r2822;
	mov.u32 	%r2828, %r2822;
	mov.u32 	%r2829, %r2822;

BB1_35:
	mov.u32 	%r2831, %r2822;

BB1_36:
	mov.u32 	%r2832, %r2822;
	mov.u32 	%r2833, %r2822;
	bra.uni 	BB1_47;

BB1_15:
	setp.eq.s32	%p17, %r169, 7;
	@%p17 bra 	BB1_16;
	bra.uni 	BB1_24;

BB1_16:
	mov.u32 	%r2822, 0;
	// inline asm
	prmt.b32 %r2834, %r2826, %r2822, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2835, %r2827, %r2826, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2836, %r2828, %r2827, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2837, %r2829, %r2828, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2830, %r15, %r2829, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2831, %r14, %r15, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2832, %r13, %r14, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2833, %r12, %r13, %r22;
	// inline asm
	// inline asm
	prmt.b32 %r2826, %r2822, %r12, %r22;
	// inline asm
	mov.u32 	%r2823, %r2822;
	mov.u32 	%r2824, %r2822;
	mov.u32 	%r2825, %r2822;

BB1_40:
	mov.u32 	%r2827, %r2822;

BB1_41:
	mov.u32 	%r2828, %r2822;
	mov.u32 	%r2829, %r2822;
	bra.uni 	BB1_47;

BB1_30:
	setp.ne.s32	%p6, %r169, 15;
	@%p6 bra 	BB1_24;

	mov.u32 	%r2822, 0;
	// inline asm
	prmt.b32 %r2834, %r2822, %r12, %r22;
	// inline asm
	mov.u32 	%r2823, %r2822;
	mov.u32 	%r2824, %r2822;
	mov.u32 	%r2825, %r2822;
	mov.u32 	%r2826, %r2822;
	mov.u32 	%r2827, %r2822;
	mov.u32 	%r2828, %r2822;
	mov.u32 	%r2829, %r2822;
	mov.u32 	%r2830, %r2822;
	mov.u32 	%r2831, %r2822;
	mov.u32 	%r2832, %r2822;
	mov.u32 	%r2833, %r2822;
	mov.u32 	%r2835, %r2822;

BB1_32:
	mov.u32 	%r2836, %r2822;
	mov.u32 	%r2837, %r2822;
	bra.uni 	BB1_47;

BB1_24:
	mov.u32 	%r2822, %r15;
	mov.u32 	%r2823, %r14;
	mov.u32 	%r2824, %r13;
	mov.u32 	%r2825, %r12;
	mov.u32 	%r2831, %r2830;
	mov.u32 	%r2832, %r2830;
	mov.u32 	%r2833, %r2830;

BB1_46:
	mov.u32 	%r2834, %r2830;
	mov.u32 	%r2835, %r2830;
	mov.u32 	%r2836, %r2830;
	mov.u32 	%r2837, %r2830;

BB1_47:
	or.b32  	%r756, %r2825, %r2;
	or.b32  	%r757, %r2824, %r3;
	or.b32  	%r758, %r2823, %r4;
	or.b32  	%r759, %r2822, %r5;
	or.b32  	%r760, %r2829, %r6;
	or.b32  	%r761, %r2828, %r7;
	or.b32  	%r762, %r2827, %r8;
	or.b32  	%r763, %r2826, %r9;
	or.b32  	%r764, %r2833, %r10;
	or.b32  	%r765, %r2832, %r11;
	shr.u32 	%r766, %r756, 24;
	shr.u32 	%r767, %r756, 8;
	and.b32  	%r768, %r767, 65280;
	or.b32  	%r769, %r768, %r766;
	shl.b32 	%r770, %r756, 24;
	shl.b32 	%r771, %r756, 8;
	and.b32  	%r772, %r771, 16711680;
	or.b32  	%r773, %r770, %r772;
	or.b32  	%r774, %r773, %r769;
	shr.u32 	%r775, %r757, 24;
	shr.u32 	%r776, %r757, 8;
	and.b32  	%r777, %r776, 65280;
	or.b32  	%r778, %r777, %r775;
	shl.b32 	%r779, %r757, 24;
	shl.b32 	%r780, %r757, 8;
	and.b32  	%r781, %r780, 16711680;
	or.b32  	%r782, %r779, %r781;
	or.b32  	%r783, %r782, %r778;
	mov.b64	%rd9, {%r783, %r774};
	shr.u32 	%r784, %r758, 24;
	shr.u32 	%r785, %r758, 8;
	and.b32  	%r786, %r785, 65280;
	or.b32  	%r787, %r786, %r784;
	shl.b32 	%r788, %r758, 24;
	shl.b32 	%r789, %r758, 8;
	and.b32  	%r790, %r789, 16711680;
	or.b32  	%r791, %r788, %r790;
	or.b32  	%r792, %r791, %r787;
	shr.u32 	%r793, %r759, 24;
	shr.u32 	%r794, %r759, 8;
	and.b32  	%r795, %r794, 65280;
	or.b32  	%r796, %r795, %r793;
	shl.b32 	%r797, %r759, 24;
	shl.b32 	%r798, %r759, 8;
	and.b32  	%r799, %r798, 16711680;
	or.b32  	%r800, %r797, %r799;
	or.b32  	%r801, %r800, %r796;
	mov.b64	%rd10, {%r801, %r792};
	shr.u32 	%r802, %r760, 24;
	shr.u32 	%r803, %r760, 8;
	and.b32  	%r804, %r803, 65280;
	or.b32  	%r805, %r804, %r802;
	shl.b32 	%r806, %r760, 24;
	shl.b32 	%r807, %r760, 8;
	and.b32  	%r808, %r807, 16711680;
	or.b32  	%r809, %r806, %r808;
	or.b32  	%r810, %r809, %r805;
	shr.u32 	%r811, %r761, 24;
	shr.u32 	%r812, %r761, 8;
	and.b32  	%r813, %r812, 65280;
	or.b32  	%r814, %r813, %r811;
	shl.b32 	%r815, %r761, 24;
	shl.b32 	%r816, %r761, 8;
	and.b32  	%r817, %r816, 16711680;
	or.b32  	%r818, %r815, %r817;
	or.b32  	%r819, %r818, %r814;
	mov.b64	%rd11, {%r819, %r810};
	shr.u32 	%r820, %r762, 24;
	shr.u32 	%r821, %r762, 8;
	and.b32  	%r822, %r821, 65280;
	or.b32  	%r823, %r822, %r820;
	shl.b32 	%r824, %r762, 24;
	shl.b32 	%r825, %r762, 8;
	and.b32  	%r826, %r825, 16711680;
	or.b32  	%r827, %r824, %r826;
	or.b32  	%r828, %r827, %r823;
	shr.u32 	%r829, %r763, 24;
	shr.u32 	%r830, %r763, 8;
	and.b32  	%r831, %r830, 65280;
	or.b32  	%r832, %r831, %r829;
	shl.b32 	%r833, %r763, 24;
	shl.b32 	%r834, %r763, 8;
	and.b32  	%r835, %r834, 16711680;
	or.b32  	%r836, %r833, %r835;
	or.b32  	%r837, %r836, %r832;
	mov.b64	%rd12, {%r837, %r828};
	shr.u32 	%r838, %r764, 24;
	shr.u32 	%r839, %r764, 8;
	and.b32  	%r840, %r839, 65280;
	or.b32  	%r841, %r840, %r838;
	shl.b32 	%r842, %r764, 24;
	shl.b32 	%r843, %r764, 8;
	and.b32  	%r844, %r843, 16711680;
	or.b32  	%r845, %r842, %r844;
	or.b32  	%r846, %r845, %r841;
	shr.u32 	%r847, %r765, 24;
	shr.u32 	%r848, %r765, 8;
	and.b32  	%r849, %r848, 65280;
	or.b32  	%r850, %r849, %r847;
	shl.b32 	%r851, %r765, 24;
	shl.b32 	%r852, %r765, 8;
	and.b32  	%r853, %r852, 16711680;
	or.b32  	%r854, %r851, %r853;
	or.b32  	%r855, %r854, %r850;
	mov.b64	%rd13, {%r855, %r846};
	shr.u32 	%r856, %r2831, 24;
	shr.u32 	%r857, %r2831, 8;
	and.b32  	%r858, %r857, 65280;
	or.b32  	%r859, %r858, %r856;
	shl.b32 	%r860, %r2831, 24;
	shl.b32 	%r861, %r2831, 8;
	and.b32  	%r862, %r861, 16711680;
	or.b32  	%r863, %r860, %r862;
	or.b32  	%r864, %r863, %r859;
	shr.u32 	%r865, %r2830, 24;
	shr.u32 	%r866, %r2830, 8;
	and.b32  	%r867, %r866, 65280;
	or.b32  	%r868, %r867, %r865;
	shl.b32 	%r869, %r2830, 24;
	shl.b32 	%r870, %r2830, 8;
	and.b32  	%r871, %r870, 16711680;
	or.b32  	%r872, %r869, %r871;
	or.b32  	%r873, %r872, %r868;
	mov.b64	%rd14, {%r873, %r864};
	shr.u32 	%r874, %r2837, 24;
	shr.u32 	%r875, %r2837, 8;
	and.b32  	%r876, %r875, 65280;
	or.b32  	%r877, %r876, %r874;
	shl.b32 	%r878, %r2837, 24;
	shl.b32 	%r879, %r2837, 8;
	and.b32  	%r880, %r879, 16711680;
	or.b32  	%r881, %r878, %r880;
	or.b32  	%r882, %r881, %r877;
	shr.u32 	%r883, %r2836, 24;
	shr.u32 	%r884, %r2836, 8;
	and.b32  	%r885, %r884, 65280;
	or.b32  	%r886, %r885, %r883;
	shl.b32 	%r887, %r2836, 24;
	shl.b32 	%r888, %r2836, 8;
	and.b32  	%r889, %r888, 16711680;
	or.b32  	%r890, %r887, %r889;
	or.b32  	%r891, %r890, %r886;
	mov.b64	%rd15, {%r891, %r882};
	shr.u32 	%r892, %r2835, 24;
	shr.u32 	%r893, %r2835, 8;
	and.b32  	%r894, %r893, 65280;
	or.b32  	%r895, %r894, %r892;
	shl.b32 	%r896, %r2835, 24;
	shl.b32 	%r897, %r2835, 8;
	and.b32  	%r898, %r897, 16711680;
	or.b32  	%r899, %r896, %r898;
	or.b32  	%r900, %r899, %r895;
	shr.u32 	%r901, %r2834, 24;
	shr.u32 	%r902, %r2834, 8;
	and.b32  	%r903, %r902, 65280;
	or.b32  	%r904, %r903, %r901;
	shl.b32 	%r905, %r2834, 24;
	shl.b32 	%r906, %r2834, 8;
	and.b32  	%r907, %r906, 16711680;
	or.b32  	%r908, %r905, %r907;
	or.b32  	%r909, %r908, %r904;
	mov.b64	%rd16, {%r909, %r900};
	add.s32 	%r910, %r20, %r21;
	shl.b32 	%r911, %r910, 3;
	cvt.u64.u32	%rd17, %r911;
	mov.u64 	%rd18, 5840696475078001361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r912,%dummy}, %rd18;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r913}, %rd18;
	}
	shf.r.wrap.b32 	%r914, %r913, %r912, 18;
	shf.r.wrap.b32 	%r915, %r912, %r913, 18;
	mov.b64 	%rd19, {%r915, %r914};
	shf.r.wrap.b32 	%r916, %r913, %r912, 14;
	shf.r.wrap.b32 	%r917, %r912, %r913, 14;
	mov.b64 	%rd20, {%r917, %r916};
	xor.b64  	%rd21, %rd19, %rd20;
	shf.l.wrap.b32 	%r918, %r912, %r913, 23;
	shf.l.wrap.b32 	%r919, %r913, %r912, 23;
	mov.b64 	%rd22, {%r919, %r918};
	xor.b64  	%rd23, %rd21, %rd22;
	ld.const.u64 	%rd24, [k_sha512];
	add.s64 	%rd25, %rd9, %rd24;
	add.s64 	%rd26, %rd25, %rd23;
	mov.u64 	%rd27, 7640891576956012808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r920}, %rd27;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r921,%dummy}, %rd27;
	}
	shf.l.wrap.b32 	%r922, %r921, %r920, 30;
	shf.l.wrap.b32 	%r923, %r920, %r921, 30;
	mov.b64 	%rd28, {%r923, %r922};
	shf.r.wrap.b32 	%r924, %r920, %r921, 28;
	shf.r.wrap.b32 	%r925, %r921, %r920, 28;
	mov.b64 	%rd29, {%r925, %r924};
	xor.b64  	%rd30, %rd28, %rd29;
	shf.l.wrap.b32 	%r926, %r921, %r920, 25;
	shf.l.wrap.b32 	%r927, %r920, %r921, 25;
	mov.b64 	%rd31, {%r927, %r926};
	xor.b64  	%rd32, %rd30, %rd31;
	add.s64 	%rd33, %rd26, %rd32;
	add.s64 	%rd34, %rd26, 2357225248857953701;
	add.s64 	%rd35, %rd33, -5343946410804754465;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r928,%dummy}, %rd34;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r929}, %rd34;
	}
	shf.r.wrap.b32 	%r930, %r929, %r928, 14;
	shf.r.wrap.b32 	%r931, %r928, %r929, 14;
	mov.b64 	%rd36, {%r931, %r930};
	shf.r.wrap.b32 	%r932, %r929, %r928, 18;
	shf.r.wrap.b32 	%r933, %r928, %r929, 18;
	mov.b64 	%rd37, {%r933, %r932};
	xor.b64  	%rd38, %rd37, %rd36;
	shf.l.wrap.b32 	%r934, %r928, %r929, 23;
	shf.l.wrap.b32 	%r935, %r929, %r928, 23;
	mov.b64 	%rd39, {%r935, %r934};
	xor.b64  	%rd40, %rd38, %rd39;
	and.b64  	%rd41, %rd34, -3887949035690463538;
	xor.b64  	%rd42, %rd41, -7276294671716946913;
	ld.const.u64 	%rd43, [k_sha512+8];
	add.s64 	%rd44, %rd10, %rd43;
	add.s64 	%rd45, %rd44, %rd42;
	add.s64 	%rd46, %rd45, %rd40;
	xor.b64  	%rd47, %rd35, -4942790177534073029;
	xor.b64  	%rd48, %rd35, 7640891576956012808;
	and.b64  	%rd49, %rd48, %rd47;
	xor.b64  	%rd50, %rd49, %rd35;
	add.s64 	%rd51, %rd46, %rd50;
	add.s64 	%rd52, %rd46, 6625583534739731862;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r936,%dummy}, %rd35;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r937}, %rd35;
	}
	shf.r.wrap.b32 	%r938, %r937, %r936, 28;
	shf.r.wrap.b32 	%r939, %r936, %r937, 28;
	mov.b64 	%rd53, {%r939, %r938};
	shf.l.wrap.b32 	%r940, %r936, %r937, 30;
	shf.l.wrap.b32 	%r941, %r937, %r936, 30;
	mov.b64 	%rd54, {%r941, %r940};
	xor.b64  	%rd55, %rd54, %rd53;
	shf.l.wrap.b32 	%r942, %r936, %r937, 25;
	shf.l.wrap.b32 	%r943, %r937, %r936, 25;
	mov.b64 	%rd56, {%r943, %r942};
	xor.b64  	%rd57, %rd55, %rd56;
	add.s64 	%rd58, %rd51, %rd57;
	add.s64 	%rd59, %rd58, 2270897969802886507;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r944,%dummy}, %rd52;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r945}, %rd52;
	}
	shf.r.wrap.b32 	%r946, %r945, %r944, 14;
	shf.r.wrap.b32 	%r947, %r944, %r945, 14;
	mov.b64 	%rd60, {%r947, %r946};
	shf.r.wrap.b32 	%r948, %r945, %r944, 18;
	shf.r.wrap.b32 	%r949, %r944, %r945, 18;
	mov.b64 	%rd61, {%r949, %r948};
	xor.b64  	%rd62, %rd61, %rd60;
	shf.l.wrap.b32 	%r950, %r944, %r945, 23;
	shf.l.wrap.b32 	%r951, %r945, %r944, 23;
	mov.b64 	%rd63, {%r951, %r950};
	xor.b64  	%rd64, %rd62, %rd63;
	xor.b64  	%rd65, %rd34, 5840696475078001361;
	and.b64  	%rd66, %rd52, %rd65;
	xor.b64  	%rd67, %rd66, 5840696475078001361;
	ld.const.u64 	%rd68, [k_sha512+16];
	add.s64 	%rd69, %rd11, %rd68;
	add.s64 	%rd70, %rd69, %rd67;
	add.s64 	%rd71, %rd70, %rd64;
	xor.b64  	%rd72, %rd59, 7640891576956012808;
	xor.b64  	%rd73, %rd59, %rd35;
	and.b64  	%rd74, %rd73, %rd72;
	xor.b64  	%rd75, %rd74, %rd59;
	add.s64 	%rd76, %rd71, %rd75;
	add.s64 	%rd77, %rd71, 6227659224458531674;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r952,%dummy}, %rd59;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r953}, %rd59;
	}
	shf.r.wrap.b32 	%r954, %r953, %r952, 28;
	shf.r.wrap.b32 	%r955, %r952, %r953, 28;
	mov.b64 	%rd78, {%r955, %r954};
	shf.l.wrap.b32 	%r956, %r952, %r953, 30;
	shf.l.wrap.b32 	%r957, %r953, %r952, 30;
	mov.b64 	%rd79, {%r957, %r956};
	xor.b64  	%rd80, %rd79, %rd78;
	shf.l.wrap.b32 	%r958, %r952, %r953, 25;
	shf.l.wrap.b32 	%r959, %r953, %r952, 25;
	mov.b64 	%rd81, {%r959, %r958};
	xor.b64  	%rd82, %rd80, %rd81;
	add.s64 	%rd83, %rd76, %rd82;
	add.s64 	%rd84, %rd83, -7276294671716946913;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r960,%dummy}, %rd77;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r961}, %rd77;
	}
	shf.r.wrap.b32 	%r962, %r961, %r960, 14;
	shf.r.wrap.b32 	%r963, %r960, %r961, 14;
	mov.b64 	%rd85, {%r963, %r962};
	shf.r.wrap.b32 	%r964, %r961, %r960, 18;
	shf.r.wrap.b32 	%r965, %r960, %r961, 18;
	mov.b64 	%rd86, {%r965, %r964};
	xor.b64  	%rd87, %rd86, %rd85;
	shf.l.wrap.b32 	%r966, %r960, %r961, 23;
	shf.l.wrap.b32 	%r967, %r961, %r960, 23;
	mov.b64 	%rd88, {%r967, %r966};
	xor.b64  	%rd89, %rd87, %rd88;
	xor.b64  	%rd90, %rd52, %rd34;
	and.b64  	%rd91, %rd77, %rd90;
	xor.b64  	%rd92, %rd91, %rd34;
	ld.const.u64 	%rd93, [k_sha512+24];
	add.s64 	%rd94, %rd12, %rd93;
	add.s64 	%rd95, %rd94, %rd92;
	add.s64 	%rd96, %rd95, %rd89;
	xor.b64  	%rd97, %rd84, %rd35;
	xor.b64  	%rd98, %rd84, %rd59;
	and.b64  	%rd99, %rd98, %rd97;
	xor.b64  	%rd100, %rd99, %rd84;
	add.s64 	%rd101, %rd96, %rd100;
	add.s64 	%rd102, %rd96, -4965156021675537447;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r968,%dummy}, %rd84;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r969}, %rd84;
	}
	shf.r.wrap.b32 	%r970, %r969, %r968, 28;
	shf.r.wrap.b32 	%r971, %r968, %r969, 28;
	mov.b64 	%rd103, {%r971, %r970};
	shf.l.wrap.b32 	%r972, %r968, %r969, 30;
	shf.l.wrap.b32 	%r973, %r969, %r968, 30;
	mov.b64 	%rd104, {%r973, %r972};
	xor.b64  	%rd105, %rd104, %rd103;
	shf.l.wrap.b32 	%r974, %r968, %r969, 25;
	shf.l.wrap.b32 	%r975, %r969, %r968, 25;
	mov.b64 	%rd106, {%r975, %r974};
	xor.b64  	%rd107, %rd105, %rd106;
	add.s64 	%rd108, %rd101, %rd107;
	add.s64 	%rd109, %rd108, 5840696475078001361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r976,%dummy}, %rd102;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r977}, %rd102;
	}
	shf.r.wrap.b32 	%r978, %r977, %r976, 14;
	shf.r.wrap.b32 	%r979, %r976, %r977, 14;
	mov.b64 	%rd110, {%r979, %r978};
	shf.r.wrap.b32 	%r980, %r977, %r976, 18;
	shf.r.wrap.b32 	%r981, %r976, %r977, 18;
	mov.b64 	%rd111, {%r981, %r980};
	xor.b64  	%rd112, %rd111, %rd110;
	shf.l.wrap.b32 	%r982, %r976, %r977, 23;
	shf.l.wrap.b32 	%r983, %r977, %r976, 23;
	mov.b64 	%rd113, {%r983, %r982};
	xor.b64  	%rd114, %rd112, %rd113;
	xor.b64  	%rd115, %rd77, %rd52;
	and.b64  	%rd116, %rd102, %rd115;
	xor.b64  	%rd117, %rd116, %rd52;
	add.s64 	%rd118, %rd34, %rd13;
	ld.const.u64 	%rd119, [k_sha512+32];
	add.s64 	%rd120, %rd118, %rd119;
	add.s64 	%rd121, %rd120, %rd117;
	add.s64 	%rd122, %rd121, %rd114;
	add.s64 	%rd123, %rd122, %rd35;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r984,%dummy}, %rd109;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r985}, %rd109;
	}
	shf.r.wrap.b32 	%r986, %r985, %r984, 28;
	shf.r.wrap.b32 	%r987, %r984, %r985, 28;
	mov.b64 	%rd124, {%r987, %r986};
	shf.l.wrap.b32 	%r988, %r984, %r985, 30;
	shf.l.wrap.b32 	%r989, %r985, %r984, 30;
	mov.b64 	%rd125, {%r989, %r988};
	xor.b64  	%rd126, %rd125, %rd124;
	shf.l.wrap.b32 	%r990, %r984, %r985, 25;
	shf.l.wrap.b32 	%r991, %r985, %r984, 25;
	mov.b64 	%rd127, {%r991, %r990};
	xor.b64  	%rd128, %rd126, %rd127;
	xor.b64  	%rd129, %rd109, %rd59;
	xor.b64  	%rd130, %rd109, %rd84;
	and.b64  	%rd131, %rd130, %rd129;
	xor.b64  	%rd132, %rd131, %rd109;
	add.s64 	%rd133, %rd122, %rd132;
	add.s64 	%rd134, %rd133, %rd128;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r992,%dummy}, %rd123;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r993}, %rd123;
	}
	shf.r.wrap.b32 	%r994, %r993, %r992, 14;
	shf.r.wrap.b32 	%r995, %r992, %r993, 14;
	mov.b64 	%rd135, {%r995, %r994};
	shf.r.wrap.b32 	%r996, %r993, %r992, 18;
	shf.r.wrap.b32 	%r997, %r992, %r993, 18;
	mov.b64 	%rd136, {%r997, %r996};
	xor.b64  	%rd137, %rd136, %rd135;
	shf.l.wrap.b32 	%r998, %r992, %r993, 23;
	shf.l.wrap.b32 	%r999, %r993, %r992, 23;
	mov.b64 	%rd138, {%r999, %r998};
	xor.b64  	%rd139, %rd137, %rd138;
	xor.b64  	%rd140, %rd102, %rd77;
	and.b64  	%rd141, %rd123, %rd140;
	xor.b64  	%rd142, %rd141, %rd77;
	add.s64 	%rd143, %rd52, %rd14;
	ld.const.u64 	%rd144, [k_sha512+40];
	add.s64 	%rd145, %rd143, %rd144;
	add.s64 	%rd146, %rd145, %rd142;
	add.s64 	%rd147, %rd146, %rd139;
	add.s64 	%rd148, %rd147, %rd59;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1000,%dummy}, %rd134;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1001}, %rd134;
	}
	shf.r.wrap.b32 	%r1002, %r1001, %r1000, 28;
	shf.r.wrap.b32 	%r1003, %r1000, %r1001, 28;
	mov.b64 	%rd149, {%r1003, %r1002};
	shf.l.wrap.b32 	%r1004, %r1000, %r1001, 30;
	shf.l.wrap.b32 	%r1005, %r1001, %r1000, 30;
	mov.b64 	%rd150, {%r1005, %r1004};
	xor.b64  	%rd151, %rd150, %rd149;
	shf.l.wrap.b32 	%r1006, %r1000, %r1001, 25;
	shf.l.wrap.b32 	%r1007, %r1001, %r1000, 25;
	mov.b64 	%rd152, {%r1007, %r1006};
	xor.b64  	%rd153, %rd151, %rd152;
	xor.b64  	%rd154, %rd134, %rd84;
	xor.b64  	%rd155, %rd134, %rd109;
	and.b64  	%rd156, %rd155, %rd154;
	xor.b64  	%rd157, %rd156, %rd134;
	add.s64 	%rd158, %rd147, %rd157;
	add.s64 	%rd159, %rd158, %rd153;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1008,%dummy}, %rd148;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1009}, %rd148;
	}
	shf.r.wrap.b32 	%r1010, %r1009, %r1008, 14;
	shf.r.wrap.b32 	%r1011, %r1008, %r1009, 14;
	mov.b64 	%rd160, {%r1011, %r1010};
	shf.r.wrap.b32 	%r1012, %r1009, %r1008, 18;
	shf.r.wrap.b32 	%r1013, %r1008, %r1009, 18;
	mov.b64 	%rd161, {%r1013, %r1012};
	xor.b64  	%rd162, %rd161, %rd160;
	shf.l.wrap.b32 	%r1014, %r1008, %r1009, 23;
	shf.l.wrap.b32 	%r1015, %r1009, %r1008, 23;
	mov.b64 	%rd163, {%r1015, %r1014};
	xor.b64  	%rd164, %rd162, %rd163;
	xor.b64  	%rd165, %rd123, %rd102;
	and.b64  	%rd166, %rd148, %rd165;
	xor.b64  	%rd167, %rd166, %rd102;
	add.s64 	%rd168, %rd77, %rd15;
	ld.const.u64 	%rd169, [k_sha512+48];
	add.s64 	%rd170, %rd168, %rd169;
	add.s64 	%rd171, %rd170, %rd167;
	add.s64 	%rd172, %rd171, %rd164;
	add.s64 	%rd173, %rd172, %rd84;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1016,%dummy}, %rd159;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1017}, %rd159;
	}
	shf.r.wrap.b32 	%r1018, %r1017, %r1016, 28;
	shf.r.wrap.b32 	%r1019, %r1016, %r1017, 28;
	mov.b64 	%rd174, {%r1019, %r1018};
	shf.l.wrap.b32 	%r1020, %r1016, %r1017, 30;
	shf.l.wrap.b32 	%r1021, %r1017, %r1016, 30;
	mov.b64 	%rd175, {%r1021, %r1020};
	xor.b64  	%rd176, %rd175, %rd174;
	shf.l.wrap.b32 	%r1022, %r1016, %r1017, 25;
	shf.l.wrap.b32 	%r1023, %r1017, %r1016, 25;
	mov.b64 	%rd177, {%r1023, %r1022};
	xor.b64  	%rd178, %rd176, %rd177;
	xor.b64  	%rd179, %rd159, %rd109;
	xor.b64  	%rd180, %rd159, %rd134;
	and.b64  	%rd181, %rd180, %rd179;
	xor.b64  	%rd182, %rd181, %rd159;
	add.s64 	%rd183, %rd172, %rd182;
	add.s64 	%rd184, %rd183, %rd178;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1024,%dummy}, %rd173;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1025}, %rd173;
	}
	shf.r.wrap.b32 	%r1026, %r1025, %r1024, 14;
	shf.r.wrap.b32 	%r1027, %r1024, %r1025, 14;
	mov.b64 	%rd185, {%r1027, %r1026};
	shf.r.wrap.b32 	%r1028, %r1025, %r1024, 18;
	shf.r.wrap.b32 	%r1029, %r1024, %r1025, 18;
	mov.b64 	%rd186, {%r1029, %r1028};
	xor.b64  	%rd187, %rd186, %rd185;
	shf.l.wrap.b32 	%r1030, %r1024, %r1025, 23;
	shf.l.wrap.b32 	%r1031, %r1025, %r1024, 23;
	mov.b64 	%rd188, {%r1031, %r1030};
	xor.b64  	%rd189, %rd187, %rd188;
	xor.b64  	%rd190, %rd148, %rd123;
	and.b64  	%rd191, %rd173, %rd190;
	xor.b64  	%rd192, %rd191, %rd123;
	add.s64 	%rd193, %rd102, %rd16;
	ld.const.u64 	%rd194, [k_sha512+56];
	add.s64 	%rd195, %rd193, %rd194;
	add.s64 	%rd196, %rd195, %rd192;
	add.s64 	%rd197, %rd196, %rd189;
	add.s64 	%rd198, %rd197, %rd109;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1032,%dummy}, %rd184;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1033}, %rd184;
	}
	shf.r.wrap.b32 	%r1034, %r1033, %r1032, 28;
	shf.r.wrap.b32 	%r1035, %r1032, %r1033, 28;
	mov.b64 	%rd199, {%r1035, %r1034};
	shf.l.wrap.b32 	%r1036, %r1032, %r1033, 30;
	shf.l.wrap.b32 	%r1037, %r1033, %r1032, 30;
	mov.b64 	%rd200, {%r1037, %r1036};
	xor.b64  	%rd201, %rd200, %rd199;
	shf.l.wrap.b32 	%r1038, %r1032, %r1033, 25;
	shf.l.wrap.b32 	%r1039, %r1033, %r1032, 25;
	mov.b64 	%rd202, {%r1039, %r1038};
	xor.b64  	%rd203, %rd201, %rd202;
	xor.b64  	%rd204, %rd184, %rd134;
	xor.b64  	%rd205, %rd184, %rd159;
	and.b64  	%rd206, %rd205, %rd204;
	xor.b64  	%rd207, %rd206, %rd184;
	add.s64 	%rd208, %rd197, %rd207;
	add.s64 	%rd209, %rd208, %rd203;
	ld.const.u64 	%rd210, [k_sha512+64];
	add.s64 	%rd211, %rd210, %rd123;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1040,%dummy}, %rd198;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1041}, %rd198;
	}
	shf.r.wrap.b32 	%r1042, %r1041, %r1040, 14;
	shf.r.wrap.b32 	%r1043, %r1040, %r1041, 14;
	mov.b64 	%rd212, {%r1043, %r1042};
	shf.r.wrap.b32 	%r1044, %r1041, %r1040, 18;
	shf.r.wrap.b32 	%r1045, %r1040, %r1041, 18;
	mov.b64 	%rd213, {%r1045, %r1044};
	xor.b64  	%rd214, %rd213, %rd212;
	shf.l.wrap.b32 	%r1046, %r1040, %r1041, 23;
	shf.l.wrap.b32 	%r1047, %r1041, %r1040, 23;
	mov.b64 	%rd215, {%r1047, %r1046};
	xor.b64  	%rd216, %rd214, %rd215;
	xor.b64  	%rd217, %rd173, %rd148;
	and.b64  	%rd218, %rd198, %rd217;
	xor.b64  	%rd219, %rd218, %rd148;
	add.s64 	%rd220, %rd211, %rd219;
	add.s64 	%rd221, %rd220, %rd216;
	add.s64 	%rd222, %rd221, %rd134;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1048,%dummy}, %rd209;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1049}, %rd209;
	}
	shf.r.wrap.b32 	%r1050, %r1049, %r1048, 28;
	shf.r.wrap.b32 	%r1051, %r1048, %r1049, 28;
	mov.b64 	%rd223, {%r1051, %r1050};
	shf.l.wrap.b32 	%r1052, %r1048, %r1049, 30;
	shf.l.wrap.b32 	%r1053, %r1049, %r1048, 30;
	mov.b64 	%rd224, {%r1053, %r1052};
	xor.b64  	%rd225, %rd224, %rd223;
	shf.l.wrap.b32 	%r1054, %r1048, %r1049, 25;
	shf.l.wrap.b32 	%r1055, %r1049, %r1048, 25;
	mov.b64 	%rd226, {%r1055, %r1054};
	xor.b64  	%rd227, %rd225, %rd226;
	xor.b64  	%rd228, %rd209, %rd159;
	xor.b64  	%rd229, %rd209, %rd184;
	and.b64  	%rd230, %rd229, %rd228;
	xor.b64  	%rd231, %rd230, %rd209;
	add.s64 	%rd232, %rd221, %rd231;
	add.s64 	%rd233, %rd232, %rd227;
	ld.const.u64 	%rd234, [k_sha512+72];
	add.s64 	%rd235, %rd234, %rd148;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1056,%dummy}, %rd222;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1057}, %rd222;
	}
	shf.r.wrap.b32 	%r1058, %r1057, %r1056, 14;
	shf.r.wrap.b32 	%r1059, %r1056, %r1057, 14;
	mov.b64 	%rd236, {%r1059, %r1058};
	shf.r.wrap.b32 	%r1060, %r1057, %r1056, 18;
	shf.r.wrap.b32 	%r1061, %r1056, %r1057, 18;
	mov.b64 	%rd237, {%r1061, %r1060};
	xor.b64  	%rd238, %rd237, %rd236;
	shf.l.wrap.b32 	%r1062, %r1056, %r1057, 23;
	shf.l.wrap.b32 	%r1063, %r1057, %r1056, 23;
	mov.b64 	%rd239, {%r1063, %r1062};
	xor.b64  	%rd240, %rd238, %rd239;
	xor.b64  	%rd241, %rd198, %rd173;
	and.b64  	%rd242, %rd222, %rd241;
	xor.b64  	%rd243, %rd242, %rd173;
	add.s64 	%rd244, %rd235, %rd243;
	add.s64 	%rd245, %rd244, %rd240;
	add.s64 	%rd246, %rd245, %rd159;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1064,%dummy}, %rd233;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1065}, %rd233;
	}
	shf.r.wrap.b32 	%r1066, %r1065, %r1064, 28;
	shf.r.wrap.b32 	%r1067, %r1064, %r1065, 28;
	mov.b64 	%rd247, {%r1067, %r1066};
	shf.l.wrap.b32 	%r1068, %r1064, %r1065, 30;
	shf.l.wrap.b32 	%r1069, %r1065, %r1064, 30;
	mov.b64 	%rd248, {%r1069, %r1068};
	xor.b64  	%rd249, %rd248, %rd247;
	shf.l.wrap.b32 	%r1070, %r1064, %r1065, 25;
	shf.l.wrap.b32 	%r1071, %r1065, %r1064, 25;
	mov.b64 	%rd250, {%r1071, %r1070};
	xor.b64  	%rd251, %rd249, %rd250;
	xor.b64  	%rd252, %rd233, %rd184;
	xor.b64  	%rd253, %rd233, %rd209;
	and.b64  	%rd254, %rd253, %rd252;
	xor.b64  	%rd255, %rd254, %rd233;
	add.s64 	%rd256, %rd245, %rd255;
	add.s64 	%rd257, %rd256, %rd251;
	ld.const.u64 	%rd258, [k_sha512+80];
	add.s64 	%rd259, %rd258, %rd173;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1072,%dummy}, %rd246;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1073}, %rd246;
	}
	shf.r.wrap.b32 	%r1074, %r1073, %r1072, 14;
	shf.r.wrap.b32 	%r1075, %r1072, %r1073, 14;
	mov.b64 	%rd260, {%r1075, %r1074};
	shf.r.wrap.b32 	%r1076, %r1073, %r1072, 18;
	shf.r.wrap.b32 	%r1077, %r1072, %r1073, 18;
	mov.b64 	%rd261, {%r1077, %r1076};
	xor.b64  	%rd262, %rd261, %rd260;
	shf.l.wrap.b32 	%r1078, %r1072, %r1073, 23;
	shf.l.wrap.b32 	%r1079, %r1073, %r1072, 23;
	mov.b64 	%rd263, {%r1079, %r1078};
	xor.b64  	%rd264, %rd262, %rd263;
	xor.b64  	%rd265, %rd222, %rd198;
	and.b64  	%rd266, %rd246, %rd265;
	xor.b64  	%rd267, %rd266, %rd198;
	add.s64 	%rd268, %rd259, %rd267;
	add.s64 	%rd269, %rd268, %rd264;
	add.s64 	%rd270, %rd269, %rd184;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1080,%dummy}, %rd257;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1081}, %rd257;
	}
	shf.r.wrap.b32 	%r1082, %r1081, %r1080, 28;
	shf.r.wrap.b32 	%r1083, %r1080, %r1081, 28;
	mov.b64 	%rd271, {%r1083, %r1082};
	shf.l.wrap.b32 	%r1084, %r1080, %r1081, 30;
	shf.l.wrap.b32 	%r1085, %r1081, %r1080, 30;
	mov.b64 	%rd272, {%r1085, %r1084};
	xor.b64  	%rd273, %rd272, %rd271;
	shf.l.wrap.b32 	%r1086, %r1080, %r1081, 25;
	shf.l.wrap.b32 	%r1087, %r1081, %r1080, 25;
	mov.b64 	%rd274, {%r1087, %r1086};
	xor.b64  	%rd275, %rd273, %rd274;
	xor.b64  	%rd276, %rd257, %rd209;
	xor.b64  	%rd277, %rd257, %rd233;
	and.b64  	%rd278, %rd277, %rd276;
	xor.b64  	%rd279, %rd278, %rd257;
	add.s64 	%rd280, %rd269, %rd279;
	add.s64 	%rd281, %rd280, %rd275;
	ld.const.u64 	%rd282, [k_sha512+88];
	add.s64 	%rd283, %rd282, %rd198;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1088,%dummy}, %rd270;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1089}, %rd270;
	}
	shf.r.wrap.b32 	%r1090, %r1089, %r1088, 14;
	shf.r.wrap.b32 	%r1091, %r1088, %r1089, 14;
	mov.b64 	%rd284, {%r1091, %r1090};
	shf.r.wrap.b32 	%r1092, %r1089, %r1088, 18;
	shf.r.wrap.b32 	%r1093, %r1088, %r1089, 18;
	mov.b64 	%rd285, {%r1093, %r1092};
	xor.b64  	%rd286, %rd285, %rd284;
	shf.l.wrap.b32 	%r1094, %r1088, %r1089, 23;
	shf.l.wrap.b32 	%r1095, %r1089, %r1088, 23;
	mov.b64 	%rd287, {%r1095, %r1094};
	xor.b64  	%rd288, %rd286, %rd287;
	xor.b64  	%rd289, %rd246, %rd222;
	and.b64  	%rd290, %rd270, %rd289;
	xor.b64  	%rd291, %rd290, %rd222;
	add.s64 	%rd292, %rd283, %rd291;
	add.s64 	%rd293, %rd292, %rd288;
	add.s64 	%rd294, %rd293, %rd209;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1096,%dummy}, %rd281;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1097}, %rd281;
	}
	shf.r.wrap.b32 	%r1098, %r1097, %r1096, 28;
	shf.r.wrap.b32 	%r1099, %r1096, %r1097, 28;
	mov.b64 	%rd295, {%r1099, %r1098};
	shf.l.wrap.b32 	%r1100, %r1096, %r1097, 30;
	shf.l.wrap.b32 	%r1101, %r1097, %r1096, 30;
	mov.b64 	%rd296, {%r1101, %r1100};
	xor.b64  	%rd297, %rd296, %rd295;
	shf.l.wrap.b32 	%r1102, %r1096, %r1097, 25;
	shf.l.wrap.b32 	%r1103, %r1097, %r1096, 25;
	mov.b64 	%rd298, {%r1103, %r1102};
	xor.b64  	%rd299, %rd297, %rd298;
	xor.b64  	%rd300, %rd281, %rd233;
	xor.b64  	%rd301, %rd281, %rd257;
	and.b64  	%rd302, %rd301, %rd300;
	xor.b64  	%rd303, %rd302, %rd281;
	add.s64 	%rd304, %rd293, %rd303;
	add.s64 	%rd305, %rd304, %rd299;
	ld.const.u64 	%rd306, [k_sha512+96];
	add.s64 	%rd307, %rd306, %rd222;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1104,%dummy}, %rd294;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1105}, %rd294;
	}
	shf.r.wrap.b32 	%r1106, %r1105, %r1104, 14;
	shf.r.wrap.b32 	%r1107, %r1104, %r1105, 14;
	mov.b64 	%rd308, {%r1107, %r1106};
	shf.r.wrap.b32 	%r1108, %r1105, %r1104, 18;
	shf.r.wrap.b32 	%r1109, %r1104, %r1105, 18;
	mov.b64 	%rd309, {%r1109, %r1108};
	xor.b64  	%rd310, %rd309, %rd308;
	shf.l.wrap.b32 	%r1110, %r1104, %r1105, 23;
	shf.l.wrap.b32 	%r1111, %r1105, %r1104, 23;
	mov.b64 	%rd311, {%r1111, %r1110};
	xor.b64  	%rd312, %rd310, %rd311;
	xor.b64  	%rd313, %rd270, %rd246;
	and.b64  	%rd314, %rd294, %rd313;
	xor.b64  	%rd315, %rd314, %rd246;
	add.s64 	%rd316, %rd307, %rd315;
	add.s64 	%rd317, %rd316, %rd312;
	add.s64 	%rd318, %rd317, %rd233;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1112,%dummy}, %rd305;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1113}, %rd305;
	}
	shf.r.wrap.b32 	%r1114, %r1113, %r1112, 28;
	shf.r.wrap.b32 	%r1115, %r1112, %r1113, 28;
	mov.b64 	%rd319, {%r1115, %r1114};
	shf.l.wrap.b32 	%r1116, %r1112, %r1113, 30;
	shf.l.wrap.b32 	%r1117, %r1113, %r1112, 30;
	mov.b64 	%rd320, {%r1117, %r1116};
	xor.b64  	%rd321, %rd320, %rd319;
	shf.l.wrap.b32 	%r1118, %r1112, %r1113, 25;
	shf.l.wrap.b32 	%r1119, %r1113, %r1112, 25;
	mov.b64 	%rd322, {%r1119, %r1118};
	xor.b64  	%rd323, %rd321, %rd322;
	xor.b64  	%rd324, %rd305, %rd257;
	xor.b64  	%rd325, %rd305, %rd281;
	and.b64  	%rd326, %rd325, %rd324;
	xor.b64  	%rd327, %rd326, %rd305;
	add.s64 	%rd328, %rd317, %rd327;
	add.s64 	%rd329, %rd328, %rd323;
	ld.const.u64 	%rd330, [k_sha512+104];
	add.s64 	%rd331, %rd330, %rd246;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1120,%dummy}, %rd318;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1121}, %rd318;
	}
	shf.r.wrap.b32 	%r1122, %r1121, %r1120, 14;
	shf.r.wrap.b32 	%r1123, %r1120, %r1121, 14;
	mov.b64 	%rd332, {%r1123, %r1122};
	shf.r.wrap.b32 	%r1124, %r1121, %r1120, 18;
	shf.r.wrap.b32 	%r1125, %r1120, %r1121, 18;
	mov.b64 	%rd333, {%r1125, %r1124};
	xor.b64  	%rd334, %rd333, %rd332;
	shf.l.wrap.b32 	%r1126, %r1120, %r1121, 23;
	shf.l.wrap.b32 	%r1127, %r1121, %r1120, 23;
	mov.b64 	%rd335, {%r1127, %r1126};
	xor.b64  	%rd336, %rd334, %rd335;
	xor.b64  	%rd337, %rd294, %rd270;
	and.b64  	%rd338, %rd318, %rd337;
	xor.b64  	%rd339, %rd338, %rd270;
	add.s64 	%rd340, %rd331, %rd339;
	add.s64 	%rd341, %rd340, %rd336;
	add.s64 	%rd342, %rd341, %rd257;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1128,%dummy}, %rd329;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1129}, %rd329;
	}
	shf.r.wrap.b32 	%r1130, %r1129, %r1128, 28;
	shf.r.wrap.b32 	%r1131, %r1128, %r1129, 28;
	mov.b64 	%rd343, {%r1131, %r1130};
	shf.l.wrap.b32 	%r1132, %r1128, %r1129, 30;
	shf.l.wrap.b32 	%r1133, %r1129, %r1128, 30;
	mov.b64 	%rd344, {%r1133, %r1132};
	xor.b64  	%rd345, %rd344, %rd343;
	shf.l.wrap.b32 	%r1134, %r1128, %r1129, 25;
	shf.l.wrap.b32 	%r1135, %r1129, %r1128, 25;
	mov.b64 	%rd346, {%r1135, %r1134};
	xor.b64  	%rd347, %rd345, %rd346;
	xor.b64  	%rd348, %rd329, %rd281;
	xor.b64  	%rd349, %rd329, %rd305;
	and.b64  	%rd350, %rd349, %rd348;
	xor.b64  	%rd351, %rd350, %rd329;
	add.s64 	%rd352, %rd341, %rd351;
	add.s64 	%rd353, %rd352, %rd347;
	ld.const.u64 	%rd354, [k_sha512+112];
	add.s64 	%rd355, %rd354, %rd270;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1136,%dummy}, %rd342;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1137}, %rd342;
	}
	shf.r.wrap.b32 	%r1138, %r1137, %r1136, 14;
	shf.r.wrap.b32 	%r1139, %r1136, %r1137, 14;
	mov.b64 	%rd356, {%r1139, %r1138};
	shf.r.wrap.b32 	%r1140, %r1137, %r1136, 18;
	shf.r.wrap.b32 	%r1141, %r1136, %r1137, 18;
	mov.b64 	%rd357, {%r1141, %r1140};
	xor.b64  	%rd358, %rd357, %rd356;
	shf.l.wrap.b32 	%r1142, %r1136, %r1137, 23;
	shf.l.wrap.b32 	%r1143, %r1137, %r1136, 23;
	mov.b64 	%rd359, {%r1143, %r1142};
	xor.b64  	%rd360, %rd358, %rd359;
	xor.b64  	%rd361, %rd318, %rd294;
	and.b64  	%rd362, %rd342, %rd361;
	xor.b64  	%rd363, %rd362, %rd294;
	add.s64 	%rd364, %rd355, %rd363;
	add.s64 	%rd365, %rd364, %rd360;
	add.s64 	%rd366, %rd365, %rd281;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1144,%dummy}, %rd353;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1145}, %rd353;
	}
	shf.r.wrap.b32 	%r1146, %r1145, %r1144, 28;
	shf.r.wrap.b32 	%r1147, %r1144, %r1145, 28;
	mov.b64 	%rd367, {%r1147, %r1146};
	shf.l.wrap.b32 	%r1148, %r1144, %r1145, 30;
	shf.l.wrap.b32 	%r1149, %r1145, %r1144, 30;
	mov.b64 	%rd368, {%r1149, %r1148};
	xor.b64  	%rd369, %rd368, %rd367;
	shf.l.wrap.b32 	%r1150, %r1144, %r1145, 25;
	shf.l.wrap.b32 	%r1151, %r1145, %r1144, 25;
	mov.b64 	%rd370, {%r1151, %r1150};
	xor.b64  	%rd371, %rd369, %rd370;
	xor.b64  	%rd372, %rd353, %rd305;
	xor.b64  	%rd373, %rd353, %rd329;
	and.b64  	%rd374, %rd373, %rd372;
	xor.b64  	%rd375, %rd374, %rd353;
	add.s64 	%rd376, %rd365, %rd375;
	add.s64 	%rd377, %rd376, %rd371;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1152,%dummy}, %rd366;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1153}, %rd366;
	}
	shf.r.wrap.b32 	%r1154, %r1153, %r1152, 14;
	shf.r.wrap.b32 	%r1155, %r1152, %r1153, 14;
	mov.b64 	%rd378, {%r1155, %r1154};
	shf.r.wrap.b32 	%r1156, %r1153, %r1152, 18;
	shf.r.wrap.b32 	%r1157, %r1152, %r1153, 18;
	mov.b64 	%rd379, {%r1157, %r1156};
	xor.b64  	%rd380, %rd379, %rd378;
	shf.l.wrap.b32 	%r1158, %r1152, %r1153, 23;
	shf.l.wrap.b32 	%r1159, %r1153, %r1152, 23;
	mov.b64 	%rd381, {%r1159, %r1158};
	xor.b64  	%rd382, %rd380, %rd381;
	xor.b64  	%rd383, %rd342, %rd318;
	and.b64  	%rd384, %rd366, %rd383;
	xor.b64  	%rd385, %rd384, %rd318;
	add.s64 	%rd386, %rd294, %rd17;
	ld.const.u64 	%rd387, [k_sha512+120];
	add.s64 	%rd388, %rd386, %rd387;
	add.s64 	%rd389, %rd388, %rd385;
	add.s64 	%rd390, %rd389, %rd382;
	add.s64 	%rd391, %rd390, %rd305;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1160,%dummy}, %rd377;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1161}, %rd377;
	}
	shf.r.wrap.b32 	%r1162, %r1161, %r1160, 28;
	shf.r.wrap.b32 	%r1163, %r1160, %r1161, 28;
	mov.b64 	%rd392, {%r1163, %r1162};
	shf.l.wrap.b32 	%r1164, %r1160, %r1161, 30;
	shf.l.wrap.b32 	%r1165, %r1161, %r1160, 30;
	mov.b64 	%rd393, {%r1165, %r1164};
	xor.b64  	%rd394, %rd393, %rd392;
	shf.l.wrap.b32 	%r1166, %r1160, %r1161, 25;
	shf.l.wrap.b32 	%r1167, %r1161, %r1160, 25;
	mov.b64 	%rd395, {%r1167, %r1166};
	xor.b64  	%rd396, %rd394, %rd395;
	xor.b64  	%rd397, %rd377, %rd329;
	xor.b64  	%rd398, %rd377, %rd353;
	and.b64  	%rd399, %rd398, %rd397;
	xor.b64  	%rd400, %rd399, %rd377;
	add.s64 	%rd401, %rd390, %rd400;
	add.s64 	%rd402, %rd401, %rd396;
	mov.u64 	%rd403, 0;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1168}, %rd403;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1169,%dummy}, %rd403;
	}
	shf.l.wrap.b32 	%r1170, %r1169, %r1168, 3;
	shf.l.wrap.b32 	%r1171, %r1168, %r1169, 3;
	mov.b64 	%rd404, {%r1171, %r1170};
	shf.r.wrap.b32 	%r1172, %r1168, %r1169, 19;
	shf.r.wrap.b32 	%r1173, %r1169, %r1168, 19;
	mov.b64 	%rd405, {%r1173, %r1172};
	xor.b64  	%rd406, %rd405, %rd404;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1174,%dummy}, %rd10;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1175}, %rd10;
	}
	shf.r.wrap.b32 	%r1176, %r1175, %r1174, 1;
	shf.r.wrap.b32 	%r1177, %r1174, %r1175, 1;
	mov.b64 	%rd407, {%r1177, %r1176};
	shf.r.wrap.b32 	%r1178, %r1175, %r1174, 8;
	shf.r.wrap.b32 	%r1179, %r1174, %r1175, 8;
	mov.b64 	%rd408, {%r1179, %r1178};
	shr.u64 	%rd409, %rd10, 7;
	xor.b64  	%rd410, %rd407, %rd409;
	xor.b64  	%rd411, %rd410, %rd408;
	add.s64 	%rd412, %rd9, %rd406;
	add.s64 	%rd413, %rd412, %rd411;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1180,%dummy}, %rd17;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1181}, %rd17;
	}
	shf.r.wrap.b32 	%r1182, %r1181, %r1180, 19;
	shf.r.wrap.b32 	%r1183, %r1180, %r1181, 19;
	mov.b64 	%rd414, {%r1183, %r1182};
	shf.l.wrap.b32 	%r1184, %r1180, %r1181, 3;
	shf.l.wrap.b32 	%r1185, %r1181, %r1180, 3;
	mov.b64 	%rd415, {%r1185, %r1184};
	shr.u64 	%rd416, %rd17, 6;
	xor.b64  	%rd417, %rd414, %rd416;
	xor.b64  	%rd418, %rd417, %rd415;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1186,%dummy}, %rd11;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1187}, %rd11;
	}
	shf.r.wrap.b32 	%r1188, %r1187, %r1186, 1;
	shf.r.wrap.b32 	%r1189, %r1186, %r1187, 1;
	mov.b64 	%rd419, {%r1189, %r1188};
	shf.r.wrap.b32 	%r1190, %r1187, %r1186, 8;
	shf.r.wrap.b32 	%r1191, %r1186, %r1187, 8;
	mov.b64 	%rd420, {%r1191, %r1190};
	shr.u64 	%rd421, %rd11, 7;
	xor.b64  	%rd422, %rd419, %rd421;
	xor.b64  	%rd423, %rd422, %rd420;
	add.s64 	%rd424, %rd10, %rd418;
	add.s64 	%rd425, %rd424, %rd423;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1192,%dummy}, %rd413;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1193}, %rd413;
	}
	shf.r.wrap.b32 	%r1194, %r1193, %r1192, 19;
	shf.r.wrap.b32 	%r1195, %r1192, %r1193, 19;
	mov.b64 	%rd426, {%r1195, %r1194};
	shf.l.wrap.b32 	%r1196, %r1192, %r1193, 3;
	shf.l.wrap.b32 	%r1197, %r1193, %r1192, 3;
	mov.b64 	%rd427, {%r1197, %r1196};
	shr.u64 	%rd428, %rd413, 6;
	xor.b64  	%rd429, %rd426, %rd428;
	xor.b64  	%rd430, %rd429, %rd427;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1198,%dummy}, %rd12;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1199}, %rd12;
	}
	shf.r.wrap.b32 	%r1200, %r1199, %r1198, 1;
	shf.r.wrap.b32 	%r1201, %r1198, %r1199, 1;
	mov.b64 	%rd431, {%r1201, %r1200};
	shf.r.wrap.b32 	%r1202, %r1199, %r1198, 8;
	shf.r.wrap.b32 	%r1203, %r1198, %r1199, 8;
	mov.b64 	%rd432, {%r1203, %r1202};
	shr.u64 	%rd433, %rd12, 7;
	xor.b64  	%rd434, %rd431, %rd433;
	xor.b64  	%rd435, %rd434, %rd432;
	add.s64 	%rd436, %rd11, %rd430;
	add.s64 	%rd437, %rd436, %rd435;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1204,%dummy}, %rd425;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1205}, %rd425;
	}
	shf.r.wrap.b32 	%r1206, %r1205, %r1204, 19;
	shf.r.wrap.b32 	%r1207, %r1204, %r1205, 19;
	mov.b64 	%rd438, {%r1207, %r1206};
	shf.l.wrap.b32 	%r1208, %r1204, %r1205, 3;
	shf.l.wrap.b32 	%r1209, %r1205, %r1204, 3;
	mov.b64 	%rd439, {%r1209, %r1208};
	shr.u64 	%rd440, %rd425, 6;
	xor.b64  	%rd441, %rd438, %rd440;
	xor.b64  	%rd442, %rd441, %rd439;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1210,%dummy}, %rd13;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1211}, %rd13;
	}
	shf.r.wrap.b32 	%r1212, %r1211, %r1210, 1;
	shf.r.wrap.b32 	%r1213, %r1210, %r1211, 1;
	mov.b64 	%rd443, {%r1213, %r1212};
	shf.r.wrap.b32 	%r1214, %r1211, %r1210, 8;
	shf.r.wrap.b32 	%r1215, %r1210, %r1211, 8;
	mov.b64 	%rd444, {%r1215, %r1214};
	shr.u64 	%rd445, %rd13, 7;
	xor.b64  	%rd446, %rd443, %rd445;
	xor.b64  	%rd447, %rd446, %rd444;
	add.s64 	%rd448, %rd12, %rd442;
	add.s64 	%rd449, %rd448, %rd447;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1216,%dummy}, %rd437;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1217}, %rd437;
	}
	shf.r.wrap.b32 	%r1218, %r1217, %r1216, 19;
	shf.r.wrap.b32 	%r1219, %r1216, %r1217, 19;
	mov.b64 	%rd450, {%r1219, %r1218};
	shf.l.wrap.b32 	%r1220, %r1216, %r1217, 3;
	shf.l.wrap.b32 	%r1221, %r1217, %r1216, 3;
	mov.b64 	%rd451, {%r1221, %r1220};
	shr.u64 	%rd452, %rd437, 6;
	xor.b64  	%rd453, %rd450, %rd452;
	xor.b64  	%rd454, %rd453, %rd451;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1222,%dummy}, %rd14;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1223}, %rd14;
	}
	shf.r.wrap.b32 	%r1224, %r1223, %r1222, 1;
	shf.r.wrap.b32 	%r1225, %r1222, %r1223, 1;
	mov.b64 	%rd455, {%r1225, %r1224};
	shf.r.wrap.b32 	%r1226, %r1223, %r1222, 8;
	shf.r.wrap.b32 	%r1227, %r1222, %r1223, 8;
	mov.b64 	%rd456, {%r1227, %r1226};
	shr.u64 	%rd457, %rd14, 7;
	xor.b64  	%rd458, %rd455, %rd457;
	xor.b64  	%rd459, %rd458, %rd456;
	add.s64 	%rd460, %rd13, %rd454;
	add.s64 	%rd461, %rd460, %rd459;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1228,%dummy}, %rd449;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1229}, %rd449;
	}
	shf.r.wrap.b32 	%r1230, %r1229, %r1228, 19;
	shf.r.wrap.b32 	%r1231, %r1228, %r1229, 19;
	mov.b64 	%rd462, {%r1231, %r1230};
	shf.l.wrap.b32 	%r1232, %r1228, %r1229, 3;
	shf.l.wrap.b32 	%r1233, %r1229, %r1228, 3;
	mov.b64 	%rd463, {%r1233, %r1232};
	shr.u64 	%rd464, %rd449, 6;
	xor.b64  	%rd465, %rd462, %rd464;
	xor.b64  	%rd466, %rd465, %rd463;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1234,%dummy}, %rd15;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1235}, %rd15;
	}
	shf.r.wrap.b32 	%r1236, %r1235, %r1234, 1;
	shf.r.wrap.b32 	%r1237, %r1234, %r1235, 1;
	mov.b64 	%rd467, {%r1237, %r1236};
	shf.r.wrap.b32 	%r1238, %r1235, %r1234, 8;
	shf.r.wrap.b32 	%r1239, %r1234, %r1235, 8;
	mov.b64 	%rd468, {%r1239, %r1238};
	shr.u64 	%rd469, %rd15, 7;
	xor.b64  	%rd470, %rd467, %rd469;
	xor.b64  	%rd471, %rd470, %rd468;
	add.s64 	%rd472, %rd14, %rd466;
	add.s64 	%rd473, %rd472, %rd471;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1240,%dummy}, %rd461;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1241}, %rd461;
	}
	shf.r.wrap.b32 	%r1242, %r1241, %r1240, 19;
	shf.r.wrap.b32 	%r1243, %r1240, %r1241, 19;
	mov.b64 	%rd474, {%r1243, %r1242};
	shf.l.wrap.b32 	%r1244, %r1240, %r1241, 3;
	shf.l.wrap.b32 	%r1245, %r1241, %r1240, 3;
	mov.b64 	%rd475, {%r1245, %r1244};
	shr.u64 	%rd476, %rd461, 6;
	xor.b64  	%rd477, %rd474, %rd476;
	xor.b64  	%rd478, %rd477, %rd475;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1246,%dummy}, %rd16;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1247}, %rd16;
	}
	shf.r.wrap.b32 	%r1248, %r1247, %r1246, 1;
	shf.r.wrap.b32 	%r1249, %r1246, %r1247, 1;
	mov.b64 	%rd479, {%r1249, %r1248};
	shf.r.wrap.b32 	%r1250, %r1247, %r1246, 8;
	shf.r.wrap.b32 	%r1251, %r1246, %r1247, 8;
	mov.b64 	%rd480, {%r1251, %r1250};
	shr.u64 	%rd481, %rd16, 7;
	xor.b64  	%rd482, %rd479, %rd481;
	xor.b64  	%rd483, %rd482, %rd480;
	add.s64 	%rd484, %rd17, %rd15;
	add.s64 	%rd485, %rd484, %rd478;
	add.s64 	%rd486, %rd485, %rd483;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1252,%dummy}, %rd473;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1253}, %rd473;
	}
	shf.r.wrap.b32 	%r1254, %r1253, %r1252, 19;
	shf.r.wrap.b32 	%r1255, %r1252, %r1253, 19;
	mov.b64 	%rd487, {%r1255, %r1254};
	shf.l.wrap.b32 	%r1256, %r1252, %r1253, 3;
	shf.l.wrap.b32 	%r1257, %r1253, %r1252, 3;
	mov.b64 	%rd488, {%r1257, %r1256};
	shr.u64 	%rd489, %rd473, 6;
	xor.b64  	%rd490, %rd487, %rd489;
	xor.b64  	%rd491, %rd490, %rd488;
	shf.r.wrap.b32 	%r1258, %r1168, %r1169, 8;
	shf.r.wrap.b32 	%r1259, %r1169, %r1168, 8;
	mov.b64 	%rd492, {%r1259, %r1258};
	shf.r.wrap.b32 	%r1260, %r1168, %r1169, 1;
	shf.r.wrap.b32 	%r1261, %r1169, %r1168, 1;
	mov.b64 	%rd493, {%r1261, %r1260};
	xor.b64  	%rd494, %rd493, %rd492;
	add.s64 	%rd495, %rd413, %rd16;
	add.s64 	%rd496, %rd495, %rd491;
	add.s64 	%rd497, %rd496, %rd494;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1262,%dummy}, %rd486;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1263}, %rd486;
	}
	shf.r.wrap.b32 	%r1264, %r1263, %r1262, 19;
	shf.r.wrap.b32 	%r1265, %r1262, %r1263, 19;
	mov.b64 	%rd498, {%r1265, %r1264};
	shf.l.wrap.b32 	%r1266, %r1262, %r1263, 3;
	shf.l.wrap.b32 	%r1267, %r1263, %r1262, 3;
	mov.b64 	%rd499, {%r1267, %r1266};
	shr.u64 	%rd500, %rd486, 6;
	xor.b64  	%rd501, %rd498, %rd500;
	xor.b64  	%rd502, %rd501, %rd499;
	add.s64 	%rd503, %rd425, %rd502;
	add.s64 	%rd504, %rd503, %rd494;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1268,%dummy}, %rd497;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1269}, %rd497;
	}
	shf.r.wrap.b32 	%r1270, %r1269, %r1268, 19;
	shf.r.wrap.b32 	%r1271, %r1268, %r1269, 19;
	mov.b64 	%rd505, {%r1271, %r1270};
	shf.l.wrap.b32 	%r1272, %r1268, %r1269, 3;
	shf.l.wrap.b32 	%r1273, %r1269, %r1268, 3;
	mov.b64 	%rd506, {%r1273, %r1272};
	shr.u64 	%rd507, %rd497, 6;
	xor.b64  	%rd508, %rd505, %rd507;
	xor.b64  	%rd509, %rd508, %rd506;
	add.s64 	%rd510, %rd437, %rd509;
	add.s64 	%rd511, %rd510, %rd494;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1274,%dummy}, %rd504;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1275}, %rd504;
	}
	shf.r.wrap.b32 	%r1276, %r1275, %r1274, 19;
	shf.r.wrap.b32 	%r1277, %r1274, %r1275, 19;
	mov.b64 	%rd512, {%r1277, %r1276};
	shf.l.wrap.b32 	%r1278, %r1274, %r1275, 3;
	shf.l.wrap.b32 	%r1279, %r1275, %r1274, 3;
	mov.b64 	%rd513, {%r1279, %r1278};
	shr.u64 	%rd514, %rd504, 6;
	xor.b64  	%rd515, %rd512, %rd514;
	xor.b64  	%rd516, %rd515, %rd513;
	add.s64 	%rd517, %rd449, %rd516;
	add.s64 	%rd518, %rd517, %rd494;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1280,%dummy}, %rd511;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1281}, %rd511;
	}
	shf.r.wrap.b32 	%r1282, %r1281, %r1280, 19;
	shf.r.wrap.b32 	%r1283, %r1280, %r1281, 19;
	mov.b64 	%rd519, {%r1283, %r1282};
	shf.l.wrap.b32 	%r1284, %r1280, %r1281, 3;
	shf.l.wrap.b32 	%r1285, %r1281, %r1280, 3;
	mov.b64 	%rd520, {%r1285, %r1284};
	shr.u64 	%rd521, %rd511, 6;
	xor.b64  	%rd522, %rd519, %rd521;
	xor.b64  	%rd523, %rd522, %rd520;
	add.s64 	%rd524, %rd461, %rd523;
	add.s64 	%rd525, %rd524, %rd494;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1286,%dummy}, %rd518;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1287}, %rd518;
	}
	shf.r.wrap.b32 	%r1288, %r1287, %r1286, 19;
	shf.r.wrap.b32 	%r1289, %r1286, %r1287, 19;
	mov.b64 	%rd526, {%r1289, %r1288};
	shf.l.wrap.b32 	%r1290, %r1286, %r1287, 3;
	shf.l.wrap.b32 	%r1291, %r1287, %r1286, 3;
	mov.b64 	%rd527, {%r1291, %r1290};
	shr.u64 	%rd528, %rd518, 6;
	xor.b64  	%rd529, %rd526, %rd528;
	xor.b64  	%rd530, %rd529, %rd527;
	add.s64 	%rd531, %rd473, %rd530;
	add.s64 	%rd532, %rd531, %rd494;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1292,%dummy}, %rd525;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1293}, %rd525;
	}
	shf.r.wrap.b32 	%r1294, %r1293, %r1292, 19;
	shf.r.wrap.b32 	%r1295, %r1292, %r1293, 19;
	mov.b64 	%rd533, {%r1295, %r1294};
	shf.l.wrap.b32 	%r1296, %r1292, %r1293, 3;
	shf.l.wrap.b32 	%r1297, %r1293, %r1292, 3;
	mov.b64 	%rd534, {%r1297, %r1296};
	shr.u64 	%rd535, %rd525, 6;
	xor.b64  	%rd536, %rd533, %rd535;
	xor.b64  	%rd537, %rd536, %rd534;
	add.s64 	%rd538, %rd486, %rd537;
	add.s64 	%rd539, %rd538, %rd494;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1298,%dummy}, %rd532;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1299}, %rd532;
	}
	shf.r.wrap.b32 	%r1300, %r1299, %r1298, 19;
	shf.r.wrap.b32 	%r1301, %r1298, %r1299, 19;
	mov.b64 	%rd540, {%r1301, %r1300};
	shf.l.wrap.b32 	%r1302, %r1298, %r1299, 3;
	shf.l.wrap.b32 	%r1303, %r1299, %r1298, 3;
	mov.b64 	%rd541, {%r1303, %r1302};
	shr.u64 	%rd542, %rd532, 6;
	xor.b64  	%rd543, %rd540, %rd542;
	xor.b64  	%rd544, %rd543, %rd541;
	shf.r.wrap.b32 	%r1304, %r1181, %r1180, 1;
	shf.r.wrap.b32 	%r1305, %r1180, %r1181, 1;
	mov.b64 	%rd545, {%r1305, %r1304};
	shf.r.wrap.b32 	%r1306, %r1181, %r1180, 8;
	shf.r.wrap.b32 	%r1307, %r1180, %r1181, 8;
	mov.b64 	%rd546, {%r1307, %r1306};
	shr.u64 	%rd547, %rd17, 7;
	xor.b64  	%rd548, %rd545, %rd547;
	xor.b64  	%rd549, %rd548, %rd546;
	add.s64 	%rd550, %rd497, %rd544;
	add.s64 	%rd551, %rd550, %rd549;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1308,%dummy}, %rd539;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1309}, %rd539;
	}
	shf.r.wrap.b32 	%r1310, %r1309, %r1308, 19;
	shf.r.wrap.b32 	%r1311, %r1308, %r1309, 19;
	mov.b64 	%rd552, {%r1311, %r1310};
	shf.l.wrap.b32 	%r1312, %r1308, %r1309, 3;
	shf.l.wrap.b32 	%r1313, %r1309, %r1308, 3;
	mov.b64 	%rd553, {%r1313, %r1312};
	shr.u64 	%rd554, %rd539, 6;
	xor.b64  	%rd555, %rd552, %rd554;
	xor.b64  	%rd556, %rd555, %rd553;
	shf.r.wrap.b32 	%r1314, %r1193, %r1192, 1;
	shf.r.wrap.b32 	%r1315, %r1192, %r1193, 1;
	mov.b64 	%rd557, {%r1315, %r1314};
	shf.r.wrap.b32 	%r1316, %r1193, %r1192, 8;
	shf.r.wrap.b32 	%r1317, %r1192, %r1193, 8;
	mov.b64 	%rd558, {%r1317, %r1316};
	shr.u64 	%rd559, %rd413, 7;
	xor.b64  	%rd560, %rd557, %rd559;
	xor.b64  	%rd561, %rd560, %rd558;
	add.s64 	%rd562, %rd504, %rd17;
	add.s64 	%rd563, %rd562, %rd556;
	add.s64 	%rd564, %rd563, %rd561;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1318,%dummy}, %rd391;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1319}, %rd391;
	}
	shf.r.wrap.b32 	%r1320, %r1319, %r1318, 14;
	shf.r.wrap.b32 	%r1321, %r1318, %r1319, 14;
	mov.b64 	%rd565, {%r1321, %r1320};
	shf.r.wrap.b32 	%r1322, %r1319, %r1318, 18;
	shf.r.wrap.b32 	%r1323, %r1318, %r1319, 18;
	mov.b64 	%rd566, {%r1323, %r1322};
	xor.b64  	%rd567, %rd566, %rd565;
	shf.l.wrap.b32 	%r1324, %r1318, %r1319, 23;
	shf.l.wrap.b32 	%r1325, %r1319, %r1318, 23;
	mov.b64 	%rd568, {%r1325, %r1324};
	xor.b64  	%rd569, %rd567, %rd568;
	xor.b64  	%rd570, %rd366, %rd342;
	and.b64  	%rd571, %rd570, %rd391;
	xor.b64  	%rd572, %rd571, %rd342;
	add.s64 	%rd573, %rd572, %rd318;
	add.s64 	%rd574, %rd573, %rd413;
	ld.const.u64 	%rd575, [k_sha512+128];
	add.s64 	%rd576, %rd574, %rd575;
	add.s64 	%rd577, %rd576, %rd569;
	add.s64 	%rd578, %rd577, %rd329;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1326,%dummy}, %rd402;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1327}, %rd402;
	}
	shf.r.wrap.b32 	%r1328, %r1327, %r1326, 28;
	shf.r.wrap.b32 	%r1329, %r1326, %r1327, 28;
	mov.b64 	%rd579, {%r1329, %r1328};
	shf.l.wrap.b32 	%r1330, %r1326, %r1327, 30;
	shf.l.wrap.b32 	%r1331, %r1327, %r1326, 30;
	mov.b64 	%rd580, {%r1331, %r1330};
	xor.b64  	%rd581, %rd580, %rd579;
	shf.l.wrap.b32 	%r1332, %r1326, %r1327, 25;
	shf.l.wrap.b32 	%r1333, %r1327, %r1326, 25;
	mov.b64 	%rd582, {%r1333, %r1332};
	xor.b64  	%rd583, %rd581, %rd582;
	xor.b64  	%rd584, %rd402, %rd353;
	xor.b64  	%rd585, %rd402, %rd377;
	and.b64  	%rd586, %rd585, %rd584;
	xor.b64  	%rd587, %rd586, %rd402;
	add.s64 	%rd588, %rd577, %rd587;
	add.s64 	%rd589, %rd588, %rd583;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1334,%dummy}, %rd578;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1335}, %rd578;
	}
	shf.r.wrap.b32 	%r1336, %r1335, %r1334, 14;
	shf.r.wrap.b32 	%r1337, %r1334, %r1335, 14;
	mov.b64 	%rd590, {%r1337, %r1336};
	shf.r.wrap.b32 	%r1338, %r1335, %r1334, 18;
	shf.r.wrap.b32 	%r1339, %r1334, %r1335, 18;
	mov.b64 	%rd591, {%r1339, %r1338};
	xor.b64  	%rd592, %rd591, %rd590;
	shf.l.wrap.b32 	%r1340, %r1334, %r1335, 23;
	shf.l.wrap.b32 	%r1341, %r1335, %r1334, 23;
	mov.b64 	%rd593, {%r1341, %r1340};
	xor.b64  	%rd594, %rd592, %rd593;
	xor.b64  	%rd595, %rd391, %rd366;
	and.b64  	%rd596, %rd578, %rd595;
	xor.b64  	%rd597, %rd596, %rd366;
	add.s64 	%rd598, %rd425, %rd342;
	ld.const.u64 	%rd599, [k_sha512+136];
	add.s64 	%rd600, %rd598, %rd599;
	add.s64 	%rd601, %rd600, %rd597;
	add.s64 	%rd602, %rd601, %rd594;
	add.s64 	%rd603, %rd602, %rd353;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1342,%dummy}, %rd589;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1343}, %rd589;
	}
	shf.r.wrap.b32 	%r1344, %r1343, %r1342, 28;
	shf.r.wrap.b32 	%r1345, %r1342, %r1343, 28;
	mov.b64 	%rd604, {%r1345, %r1344};
	shf.l.wrap.b32 	%r1346, %r1342, %r1343, 30;
	shf.l.wrap.b32 	%r1347, %r1343, %r1342, 30;
	mov.b64 	%rd605, {%r1347, %r1346};
	xor.b64  	%rd606, %rd605, %rd604;
	shf.l.wrap.b32 	%r1348, %r1342, %r1343, 25;
	shf.l.wrap.b32 	%r1349, %r1343, %r1342, 25;
	mov.b64 	%rd607, {%r1349, %r1348};
	xor.b64  	%rd608, %rd606, %rd607;
	xor.b64  	%rd609, %rd589, %rd377;
	xor.b64  	%rd610, %rd589, %rd402;
	and.b64  	%rd611, %rd610, %rd609;
	xor.b64  	%rd612, %rd611, %rd589;
	add.s64 	%rd613, %rd602, %rd612;
	add.s64 	%rd614, %rd613, %rd608;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1350,%dummy}, %rd603;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1351}, %rd603;
	}
	shf.r.wrap.b32 	%r1352, %r1351, %r1350, 14;
	shf.r.wrap.b32 	%r1353, %r1350, %r1351, 14;
	mov.b64 	%rd615, {%r1353, %r1352};
	shf.r.wrap.b32 	%r1354, %r1351, %r1350, 18;
	shf.r.wrap.b32 	%r1355, %r1350, %r1351, 18;
	mov.b64 	%rd616, {%r1355, %r1354};
	xor.b64  	%rd617, %rd616, %rd615;
	shf.l.wrap.b32 	%r1356, %r1350, %r1351, 23;
	shf.l.wrap.b32 	%r1357, %r1351, %r1350, 23;
	mov.b64 	%rd618, {%r1357, %r1356};
	xor.b64  	%rd619, %rd617, %rd618;
	xor.b64  	%rd620, %rd578, %rd391;
	and.b64  	%rd621, %rd603, %rd620;
	xor.b64  	%rd622, %rd621, %rd391;
	add.s64 	%rd623, %rd437, %rd366;
	ld.const.u64 	%rd624, [k_sha512+144];
	add.s64 	%rd625, %rd623, %rd624;
	add.s64 	%rd626, %rd625, %rd622;
	add.s64 	%rd627, %rd626, %rd619;
	add.s64 	%rd628, %rd627, %rd377;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1358,%dummy}, %rd614;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1359}, %rd614;
	}
	shf.r.wrap.b32 	%r1360, %r1359, %r1358, 28;
	shf.r.wrap.b32 	%r1361, %r1358, %r1359, 28;
	mov.b64 	%rd629, {%r1361, %r1360};
	shf.l.wrap.b32 	%r1362, %r1358, %r1359, 30;
	shf.l.wrap.b32 	%r1363, %r1359, %r1358, 30;
	mov.b64 	%rd630, {%r1363, %r1362};
	xor.b64  	%rd631, %rd630, %rd629;
	shf.l.wrap.b32 	%r1364, %r1358, %r1359, 25;
	shf.l.wrap.b32 	%r1365, %r1359, %r1358, 25;
	mov.b64 	%rd632, {%r1365, %r1364};
	xor.b64  	%rd633, %rd631, %rd632;
	xor.b64  	%rd634, %rd614, %rd402;
	xor.b64  	%rd635, %rd614, %rd589;
	and.b64  	%rd636, %rd635, %rd634;
	xor.b64  	%rd637, %rd636, %rd614;
	add.s64 	%rd638, %rd627, %rd637;
	add.s64 	%rd639, %rd638, %rd633;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1366,%dummy}, %rd628;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1367}, %rd628;
	}
	shf.r.wrap.b32 	%r1368, %r1367, %r1366, 14;
	shf.r.wrap.b32 	%r1369, %r1366, %r1367, 14;
	mov.b64 	%rd640, {%r1369, %r1368};
	shf.r.wrap.b32 	%r1370, %r1367, %r1366, 18;
	shf.r.wrap.b32 	%r1371, %r1366, %r1367, 18;
	mov.b64 	%rd641, {%r1371, %r1370};
	xor.b64  	%rd642, %rd641, %rd640;
	shf.l.wrap.b32 	%r1372, %r1366, %r1367, 23;
	shf.l.wrap.b32 	%r1373, %r1367, %r1366, 23;
	mov.b64 	%rd643, {%r1373, %r1372};
	xor.b64  	%rd644, %rd642, %rd643;
	xor.b64  	%rd645, %rd603, %rd578;
	and.b64  	%rd646, %rd628, %rd645;
	xor.b64  	%rd647, %rd646, %rd578;
	add.s64 	%rd648, %rd449, %rd391;
	ld.const.u64 	%rd649, [k_sha512+152];
	add.s64 	%rd650, %rd648, %rd649;
	add.s64 	%rd651, %rd650, %rd647;
	add.s64 	%rd652, %rd651, %rd644;
	add.s64 	%rd653, %rd652, %rd402;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1374,%dummy}, %rd639;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1375}, %rd639;
	}
	shf.r.wrap.b32 	%r1376, %r1375, %r1374, 28;
	shf.r.wrap.b32 	%r1377, %r1374, %r1375, 28;
	mov.b64 	%rd654, {%r1377, %r1376};
	shf.l.wrap.b32 	%r1378, %r1374, %r1375, 30;
	shf.l.wrap.b32 	%r1379, %r1375, %r1374, 30;
	mov.b64 	%rd655, {%r1379, %r1378};
	xor.b64  	%rd656, %rd655, %rd654;
	shf.l.wrap.b32 	%r1380, %r1374, %r1375, 25;
	shf.l.wrap.b32 	%r1381, %r1375, %r1374, 25;
	mov.b64 	%rd657, {%r1381, %r1380};
	xor.b64  	%rd658, %rd656, %rd657;
	xor.b64  	%rd659, %rd639, %rd589;
	xor.b64  	%rd660, %rd639, %rd614;
	and.b64  	%rd661, %rd660, %rd659;
	xor.b64  	%rd662, %rd661, %rd639;
	add.s64 	%rd663, %rd652, %rd662;
	add.s64 	%rd664, %rd663, %rd658;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1382,%dummy}, %rd653;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1383}, %rd653;
	}
	shf.r.wrap.b32 	%r1384, %r1383, %r1382, 14;
	shf.r.wrap.b32 	%r1385, %r1382, %r1383, 14;
	mov.b64 	%rd665, {%r1385, %r1384};
	shf.r.wrap.b32 	%r1386, %r1383, %r1382, 18;
	shf.r.wrap.b32 	%r1387, %r1382, %r1383, 18;
	mov.b64 	%rd666, {%r1387, %r1386};
	xor.b64  	%rd667, %rd666, %rd665;
	shf.l.wrap.b32 	%r1388, %r1382, %r1383, 23;
	shf.l.wrap.b32 	%r1389, %r1383, %r1382, 23;
	mov.b64 	%rd668, {%r1389, %r1388};
	xor.b64  	%rd669, %rd667, %rd668;
	xor.b64  	%rd670, %rd628, %rd603;
	and.b64  	%rd671, %rd653, %rd670;
	xor.b64  	%rd672, %rd671, %rd603;
	add.s64 	%rd673, %rd578, %rd461;
	ld.const.u64 	%rd674, [k_sha512+160];
	add.s64 	%rd675, %rd673, %rd674;
	add.s64 	%rd676, %rd675, %rd672;
	add.s64 	%rd677, %rd676, %rd669;
	add.s64 	%rd678, %rd677, %rd589;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1390,%dummy}, %rd664;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1391}, %rd664;
	}
	shf.r.wrap.b32 	%r1392, %r1391, %r1390, 28;
	shf.r.wrap.b32 	%r1393, %r1390, %r1391, 28;
	mov.b64 	%rd679, {%r1393, %r1392};
	shf.l.wrap.b32 	%r1394, %r1390, %r1391, 30;
	shf.l.wrap.b32 	%r1395, %r1391, %r1390, 30;
	mov.b64 	%rd680, {%r1395, %r1394};
	xor.b64  	%rd681, %rd680, %rd679;
	shf.l.wrap.b32 	%r1396, %r1390, %r1391, 25;
	shf.l.wrap.b32 	%r1397, %r1391, %r1390, 25;
	mov.b64 	%rd682, {%r1397, %r1396};
	xor.b64  	%rd683, %rd681, %rd682;
	xor.b64  	%rd684, %rd664, %rd614;
	xor.b64  	%rd685, %rd664, %rd639;
	and.b64  	%rd686, %rd685, %rd684;
	xor.b64  	%rd687, %rd686, %rd664;
	add.s64 	%rd688, %rd677, %rd687;
	add.s64 	%rd689, %rd688, %rd683;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1398,%dummy}, %rd678;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1399}, %rd678;
	}
	shf.r.wrap.b32 	%r1400, %r1399, %r1398, 14;
	shf.r.wrap.b32 	%r1401, %r1398, %r1399, 14;
	mov.b64 	%rd690, {%r1401, %r1400};
	shf.r.wrap.b32 	%r1402, %r1399, %r1398, 18;
	shf.r.wrap.b32 	%r1403, %r1398, %r1399, 18;
	mov.b64 	%rd691, {%r1403, %r1402};
	xor.b64  	%rd692, %rd691, %rd690;
	shf.l.wrap.b32 	%r1404, %r1398, %r1399, 23;
	shf.l.wrap.b32 	%r1405, %r1399, %r1398, 23;
	mov.b64 	%rd693, {%r1405, %r1404};
	xor.b64  	%rd694, %rd692, %rd693;
	xor.b64  	%rd695, %rd653, %rd628;
	and.b64  	%rd696, %rd678, %rd695;
	xor.b64  	%rd697, %rd696, %rd628;
	add.s64 	%rd698, %rd603, %rd473;
	ld.const.u64 	%rd699, [k_sha512+168];
	add.s64 	%rd700, %rd698, %rd699;
	add.s64 	%rd701, %rd700, %rd697;
	add.s64 	%rd702, %rd701, %rd694;
	add.s64 	%rd703, %rd702, %rd614;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1406,%dummy}, %rd689;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1407}, %rd689;
	}
	shf.r.wrap.b32 	%r1408, %r1407, %r1406, 28;
	shf.r.wrap.b32 	%r1409, %r1406, %r1407, 28;
	mov.b64 	%rd704, {%r1409, %r1408};
	shf.l.wrap.b32 	%r1410, %r1406, %r1407, 30;
	shf.l.wrap.b32 	%r1411, %r1407, %r1406, 30;
	mov.b64 	%rd705, {%r1411, %r1410};
	xor.b64  	%rd706, %rd705, %rd704;
	shf.l.wrap.b32 	%r1412, %r1406, %r1407, 25;
	shf.l.wrap.b32 	%r1413, %r1407, %r1406, 25;
	mov.b64 	%rd707, {%r1413, %r1412};
	xor.b64  	%rd708, %rd706, %rd707;
	xor.b64  	%rd709, %rd689, %rd639;
	xor.b64  	%rd710, %rd689, %rd664;
	and.b64  	%rd711, %rd710, %rd709;
	xor.b64  	%rd712, %rd711, %rd689;
	add.s64 	%rd713, %rd702, %rd712;
	add.s64 	%rd714, %rd713, %rd708;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1414,%dummy}, %rd703;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1415}, %rd703;
	}
	shf.r.wrap.b32 	%r1416, %r1415, %r1414, 14;
	shf.r.wrap.b32 	%r1417, %r1414, %r1415, 14;
	mov.b64 	%rd715, {%r1417, %r1416};
	shf.r.wrap.b32 	%r1418, %r1415, %r1414, 18;
	shf.r.wrap.b32 	%r1419, %r1414, %r1415, 18;
	mov.b64 	%rd716, {%r1419, %r1418};
	xor.b64  	%rd717, %rd716, %rd715;
	shf.l.wrap.b32 	%r1420, %r1414, %r1415, 23;
	shf.l.wrap.b32 	%r1421, %r1415, %r1414, 23;
	mov.b64 	%rd718, {%r1421, %r1420};
	xor.b64  	%rd719, %rd717, %rd718;
	xor.b64  	%rd720, %rd678, %rd653;
	and.b64  	%rd721, %rd703, %rd720;
	xor.b64  	%rd722, %rd721, %rd653;
	add.s64 	%rd723, %rd628, %rd486;
	ld.const.u64 	%rd724, [k_sha512+176];
	add.s64 	%rd725, %rd723, %rd724;
	add.s64 	%rd726, %rd725, %rd722;
	add.s64 	%rd727, %rd726, %rd719;
	add.s64 	%rd728, %rd727, %rd639;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1422,%dummy}, %rd714;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1423}, %rd714;
	}
	shf.r.wrap.b32 	%r1424, %r1423, %r1422, 28;
	shf.r.wrap.b32 	%r1425, %r1422, %r1423, 28;
	mov.b64 	%rd729, {%r1425, %r1424};
	shf.l.wrap.b32 	%r1426, %r1422, %r1423, 30;
	shf.l.wrap.b32 	%r1427, %r1423, %r1422, 30;
	mov.b64 	%rd730, {%r1427, %r1426};
	xor.b64  	%rd731, %rd730, %rd729;
	shf.l.wrap.b32 	%r1428, %r1422, %r1423, 25;
	shf.l.wrap.b32 	%r1429, %r1423, %r1422, 25;
	mov.b64 	%rd732, {%r1429, %r1428};
	xor.b64  	%rd733, %rd731, %rd732;
	xor.b64  	%rd734, %rd714, %rd664;
	xor.b64  	%rd735, %rd714, %rd689;
	and.b64  	%rd736, %rd735, %rd734;
	xor.b64  	%rd737, %rd736, %rd714;
	add.s64 	%rd738, %rd727, %rd737;
	add.s64 	%rd739, %rd738, %rd733;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1430,%dummy}, %rd728;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1431}, %rd728;
	}
	shf.r.wrap.b32 	%r1432, %r1431, %r1430, 14;
	shf.r.wrap.b32 	%r1433, %r1430, %r1431, 14;
	mov.b64 	%rd740, {%r1433, %r1432};
	shf.r.wrap.b32 	%r1434, %r1431, %r1430, 18;
	shf.r.wrap.b32 	%r1435, %r1430, %r1431, 18;
	mov.b64 	%rd741, {%r1435, %r1434};
	xor.b64  	%rd742, %rd741, %rd740;
	shf.l.wrap.b32 	%r1436, %r1430, %r1431, 23;
	shf.l.wrap.b32 	%r1437, %r1431, %r1430, 23;
	mov.b64 	%rd743, {%r1437, %r1436};
	xor.b64  	%rd744, %rd742, %rd743;
	xor.b64  	%rd745, %rd703, %rd678;
	and.b64  	%rd746, %rd728, %rd745;
	xor.b64  	%rd747, %rd746, %rd678;
	add.s64 	%rd748, %rd653, %rd497;
	ld.const.u64 	%rd749, [k_sha512+184];
	add.s64 	%rd750, %rd748, %rd749;
	add.s64 	%rd751, %rd750, %rd747;
	add.s64 	%rd752, %rd751, %rd744;
	add.s64 	%rd753, %rd752, %rd664;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1438,%dummy}, %rd739;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1439}, %rd739;
	}
	shf.r.wrap.b32 	%r1440, %r1439, %r1438, 28;
	shf.r.wrap.b32 	%r1441, %r1438, %r1439, 28;
	mov.b64 	%rd754, {%r1441, %r1440};
	shf.l.wrap.b32 	%r1442, %r1438, %r1439, 30;
	shf.l.wrap.b32 	%r1443, %r1439, %r1438, 30;
	mov.b64 	%rd755, {%r1443, %r1442};
	xor.b64  	%rd756, %rd755, %rd754;
	shf.l.wrap.b32 	%r1444, %r1438, %r1439, 25;
	shf.l.wrap.b32 	%r1445, %r1439, %r1438, 25;
	mov.b64 	%rd757, {%r1445, %r1444};
	xor.b64  	%rd758, %rd756, %rd757;
	xor.b64  	%rd759, %rd739, %rd689;
	xor.b64  	%rd760, %rd739, %rd714;
	and.b64  	%rd761, %rd760, %rd759;
	xor.b64  	%rd762, %rd761, %rd739;
	add.s64 	%rd763, %rd752, %rd762;
	add.s64 	%rd764, %rd763, %rd758;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1446,%dummy}, %rd753;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1447}, %rd753;
	}
	shf.r.wrap.b32 	%r1448, %r1447, %r1446, 14;
	shf.r.wrap.b32 	%r1449, %r1446, %r1447, 14;
	mov.b64 	%rd765, {%r1449, %r1448};
	shf.r.wrap.b32 	%r1450, %r1447, %r1446, 18;
	shf.r.wrap.b32 	%r1451, %r1446, %r1447, 18;
	mov.b64 	%rd766, {%r1451, %r1450};
	xor.b64  	%rd767, %rd766, %rd765;
	shf.l.wrap.b32 	%r1452, %r1446, %r1447, 23;
	shf.l.wrap.b32 	%r1453, %r1447, %r1446, 23;
	mov.b64 	%rd768, {%r1453, %r1452};
	xor.b64  	%rd769, %rd767, %rd768;
	xor.b64  	%rd770, %rd728, %rd703;
	and.b64  	%rd771, %rd753, %rd770;
	xor.b64  	%rd772, %rd771, %rd703;
	add.s64 	%rd773, %rd678, %rd504;
	ld.const.u64 	%rd774, [k_sha512+192];
	add.s64 	%rd775, %rd773, %rd774;
	add.s64 	%rd776, %rd775, %rd772;
	add.s64 	%rd777, %rd776, %rd769;
	add.s64 	%rd778, %rd777, %rd689;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1454,%dummy}, %rd764;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1455}, %rd764;
	}
	shf.r.wrap.b32 	%r1456, %r1455, %r1454, 28;
	shf.r.wrap.b32 	%r1457, %r1454, %r1455, 28;
	mov.b64 	%rd779, {%r1457, %r1456};
	shf.l.wrap.b32 	%r1458, %r1454, %r1455, 30;
	shf.l.wrap.b32 	%r1459, %r1455, %r1454, 30;
	mov.b64 	%rd780, {%r1459, %r1458};
	xor.b64  	%rd781, %rd780, %rd779;
	shf.l.wrap.b32 	%r1460, %r1454, %r1455, 25;
	shf.l.wrap.b32 	%r1461, %r1455, %r1454, 25;
	mov.b64 	%rd782, {%r1461, %r1460};
	xor.b64  	%rd783, %rd781, %rd782;
	xor.b64  	%rd784, %rd764, %rd714;
	xor.b64  	%rd785, %rd764, %rd739;
	and.b64  	%rd786, %rd785, %rd784;
	xor.b64  	%rd787, %rd786, %rd764;
	add.s64 	%rd788, %rd777, %rd787;
	add.s64 	%rd789, %rd788, %rd783;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1462,%dummy}, %rd778;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1463}, %rd778;
	}
	shf.r.wrap.b32 	%r1464, %r1463, %r1462, 14;
	shf.r.wrap.b32 	%r1465, %r1462, %r1463, 14;
	mov.b64 	%rd790, {%r1465, %r1464};
	shf.r.wrap.b32 	%r1466, %r1463, %r1462, 18;
	shf.r.wrap.b32 	%r1467, %r1462, %r1463, 18;
	mov.b64 	%rd791, {%r1467, %r1466};
	xor.b64  	%rd792, %rd791, %rd790;
	shf.l.wrap.b32 	%r1468, %r1462, %r1463, 23;
	shf.l.wrap.b32 	%r1469, %r1463, %r1462, 23;
	mov.b64 	%rd793, {%r1469, %r1468};
	xor.b64  	%rd794, %rd792, %rd793;
	xor.b64  	%rd795, %rd753, %rd728;
	and.b64  	%rd796, %rd778, %rd795;
	xor.b64  	%rd797, %rd796, %rd728;
	add.s64 	%rd798, %rd703, %rd511;
	ld.const.u64 	%rd799, [k_sha512+200];
	add.s64 	%rd800, %rd798, %rd799;
	add.s64 	%rd801, %rd800, %rd797;
	add.s64 	%rd802, %rd801, %rd794;
	add.s64 	%rd803, %rd802, %rd714;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1470,%dummy}, %rd789;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1471}, %rd789;
	}
	shf.r.wrap.b32 	%r1472, %r1471, %r1470, 28;
	shf.r.wrap.b32 	%r1473, %r1470, %r1471, 28;
	mov.b64 	%rd804, {%r1473, %r1472};
	shf.l.wrap.b32 	%r1474, %r1470, %r1471, 30;
	shf.l.wrap.b32 	%r1475, %r1471, %r1470, 30;
	mov.b64 	%rd805, {%r1475, %r1474};
	xor.b64  	%rd806, %rd805, %rd804;
	shf.l.wrap.b32 	%r1476, %r1470, %r1471, 25;
	shf.l.wrap.b32 	%r1477, %r1471, %r1470, 25;
	mov.b64 	%rd807, {%r1477, %r1476};
	xor.b64  	%rd808, %rd806, %rd807;
	xor.b64  	%rd809, %rd789, %rd739;
	xor.b64  	%rd810, %rd789, %rd764;
	and.b64  	%rd811, %rd810, %rd809;
	xor.b64  	%rd812, %rd811, %rd789;
	add.s64 	%rd813, %rd802, %rd812;
	add.s64 	%rd814, %rd813, %rd808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1478,%dummy}, %rd803;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1479}, %rd803;
	}
	shf.r.wrap.b32 	%r1480, %r1479, %r1478, 14;
	shf.r.wrap.b32 	%r1481, %r1478, %r1479, 14;
	mov.b64 	%rd815, {%r1481, %r1480};
	shf.r.wrap.b32 	%r1482, %r1479, %r1478, 18;
	shf.r.wrap.b32 	%r1483, %r1478, %r1479, 18;
	mov.b64 	%rd816, {%r1483, %r1482};
	xor.b64  	%rd817, %rd816, %rd815;
	shf.l.wrap.b32 	%r1484, %r1478, %r1479, 23;
	shf.l.wrap.b32 	%r1485, %r1479, %r1478, 23;
	mov.b64 	%rd818, {%r1485, %r1484};
	xor.b64  	%rd819, %rd817, %rd818;
	xor.b64  	%rd820, %rd778, %rd753;
	and.b64  	%rd821, %rd803, %rd820;
	xor.b64  	%rd822, %rd821, %rd753;
	add.s64 	%rd823, %rd728, %rd518;
	ld.const.u64 	%rd824, [k_sha512+208];
	add.s64 	%rd825, %rd823, %rd824;
	add.s64 	%rd826, %rd825, %rd822;
	add.s64 	%rd827, %rd826, %rd819;
	add.s64 	%rd828, %rd827, %rd739;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1486,%dummy}, %rd814;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1487}, %rd814;
	}
	shf.r.wrap.b32 	%r1488, %r1487, %r1486, 28;
	shf.r.wrap.b32 	%r1489, %r1486, %r1487, 28;
	mov.b64 	%rd829, {%r1489, %r1488};
	shf.l.wrap.b32 	%r1490, %r1486, %r1487, 30;
	shf.l.wrap.b32 	%r1491, %r1487, %r1486, 30;
	mov.b64 	%rd830, {%r1491, %r1490};
	xor.b64  	%rd831, %rd830, %rd829;
	shf.l.wrap.b32 	%r1492, %r1486, %r1487, 25;
	shf.l.wrap.b32 	%r1493, %r1487, %r1486, 25;
	mov.b64 	%rd832, {%r1493, %r1492};
	xor.b64  	%rd833, %rd831, %rd832;
	xor.b64  	%rd834, %rd814, %rd764;
	xor.b64  	%rd835, %rd814, %rd789;
	and.b64  	%rd836, %rd835, %rd834;
	xor.b64  	%rd837, %rd836, %rd814;
	add.s64 	%rd838, %rd827, %rd837;
	add.s64 	%rd839, %rd838, %rd833;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1494,%dummy}, %rd828;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1495}, %rd828;
	}
	shf.r.wrap.b32 	%r1496, %r1495, %r1494, 14;
	shf.r.wrap.b32 	%r1497, %r1494, %r1495, 14;
	mov.b64 	%rd840, {%r1497, %r1496};
	shf.r.wrap.b32 	%r1498, %r1495, %r1494, 18;
	shf.r.wrap.b32 	%r1499, %r1494, %r1495, 18;
	mov.b64 	%rd841, {%r1499, %r1498};
	xor.b64  	%rd842, %rd841, %rd840;
	shf.l.wrap.b32 	%r1500, %r1494, %r1495, 23;
	shf.l.wrap.b32 	%r1501, %r1495, %r1494, 23;
	mov.b64 	%rd843, {%r1501, %r1500};
	xor.b64  	%rd844, %rd842, %rd843;
	xor.b64  	%rd845, %rd803, %rd778;
	and.b64  	%rd846, %rd828, %rd845;
	xor.b64  	%rd847, %rd846, %rd778;
	add.s64 	%rd848, %rd753, %rd525;
	ld.const.u64 	%rd849, [k_sha512+216];
	add.s64 	%rd850, %rd848, %rd849;
	add.s64 	%rd851, %rd850, %rd847;
	add.s64 	%rd852, %rd851, %rd844;
	add.s64 	%rd853, %rd852, %rd764;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1502,%dummy}, %rd839;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1503}, %rd839;
	}
	shf.r.wrap.b32 	%r1504, %r1503, %r1502, 28;
	shf.r.wrap.b32 	%r1505, %r1502, %r1503, 28;
	mov.b64 	%rd854, {%r1505, %r1504};
	shf.l.wrap.b32 	%r1506, %r1502, %r1503, 30;
	shf.l.wrap.b32 	%r1507, %r1503, %r1502, 30;
	mov.b64 	%rd855, {%r1507, %r1506};
	xor.b64  	%rd856, %rd855, %rd854;
	shf.l.wrap.b32 	%r1508, %r1502, %r1503, 25;
	shf.l.wrap.b32 	%r1509, %r1503, %r1502, 25;
	mov.b64 	%rd857, {%r1509, %r1508};
	xor.b64  	%rd858, %rd856, %rd857;
	xor.b64  	%rd859, %rd839, %rd789;
	xor.b64  	%rd860, %rd839, %rd814;
	and.b64  	%rd861, %rd860, %rd859;
	xor.b64  	%rd862, %rd861, %rd839;
	add.s64 	%rd863, %rd852, %rd862;
	add.s64 	%rd864, %rd863, %rd858;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1510,%dummy}, %rd853;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1511}, %rd853;
	}
	shf.r.wrap.b32 	%r1512, %r1511, %r1510, 14;
	shf.r.wrap.b32 	%r1513, %r1510, %r1511, 14;
	mov.b64 	%rd865, {%r1513, %r1512};
	shf.r.wrap.b32 	%r1514, %r1511, %r1510, 18;
	shf.r.wrap.b32 	%r1515, %r1510, %r1511, 18;
	mov.b64 	%rd866, {%r1515, %r1514};
	xor.b64  	%rd867, %rd866, %rd865;
	shf.l.wrap.b32 	%r1516, %r1510, %r1511, 23;
	shf.l.wrap.b32 	%r1517, %r1511, %r1510, 23;
	mov.b64 	%rd868, {%r1517, %r1516};
	xor.b64  	%rd869, %rd867, %rd868;
	xor.b64  	%rd870, %rd828, %rd803;
	and.b64  	%rd871, %rd853, %rd870;
	xor.b64  	%rd872, %rd871, %rd803;
	add.s64 	%rd873, %rd778, %rd532;
	ld.const.u64 	%rd874, [k_sha512+224];
	add.s64 	%rd875, %rd873, %rd874;
	add.s64 	%rd876, %rd875, %rd872;
	add.s64 	%rd877, %rd876, %rd869;
	add.s64 	%rd878, %rd877, %rd789;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1518,%dummy}, %rd864;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1519}, %rd864;
	}
	shf.r.wrap.b32 	%r1520, %r1519, %r1518, 28;
	shf.r.wrap.b32 	%r1521, %r1518, %r1519, 28;
	mov.b64 	%rd879, {%r1521, %r1520};
	shf.l.wrap.b32 	%r1522, %r1518, %r1519, 30;
	shf.l.wrap.b32 	%r1523, %r1519, %r1518, 30;
	mov.b64 	%rd880, {%r1523, %r1522};
	xor.b64  	%rd881, %rd880, %rd879;
	shf.l.wrap.b32 	%r1524, %r1518, %r1519, 25;
	shf.l.wrap.b32 	%r1525, %r1519, %r1518, 25;
	mov.b64 	%rd882, {%r1525, %r1524};
	xor.b64  	%rd883, %rd881, %rd882;
	xor.b64  	%rd884, %rd864, %rd814;
	xor.b64  	%rd885, %rd864, %rd839;
	and.b64  	%rd886, %rd885, %rd884;
	xor.b64  	%rd887, %rd886, %rd864;
	add.s64 	%rd888, %rd877, %rd887;
	add.s64 	%rd889, %rd888, %rd883;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1526,%dummy}, %rd878;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1527}, %rd878;
	}
	shf.r.wrap.b32 	%r1528, %r1527, %r1526, 14;
	shf.r.wrap.b32 	%r1529, %r1526, %r1527, 14;
	mov.b64 	%rd890, {%r1529, %r1528};
	shf.r.wrap.b32 	%r1530, %r1527, %r1526, 18;
	shf.r.wrap.b32 	%r1531, %r1526, %r1527, 18;
	mov.b64 	%rd891, {%r1531, %r1530};
	xor.b64  	%rd892, %rd891, %rd890;
	shf.l.wrap.b32 	%r1532, %r1526, %r1527, 23;
	shf.l.wrap.b32 	%r1533, %r1527, %r1526, 23;
	mov.b64 	%rd893, {%r1533, %r1532};
	xor.b64  	%rd894, %rd892, %rd893;
	xor.b64  	%rd895, %rd853, %rd828;
	and.b64  	%rd896, %rd878, %rd895;
	xor.b64  	%rd897, %rd896, %rd828;
	add.s64 	%rd898, %rd803, %rd539;
	ld.const.u64 	%rd899, [k_sha512+232];
	add.s64 	%rd900, %rd898, %rd899;
	add.s64 	%rd901, %rd900, %rd897;
	add.s64 	%rd902, %rd901, %rd894;
	add.s64 	%rd903, %rd902, %rd814;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1534,%dummy}, %rd889;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1535}, %rd889;
	}
	shf.r.wrap.b32 	%r1536, %r1535, %r1534, 28;
	shf.r.wrap.b32 	%r1537, %r1534, %r1535, 28;
	mov.b64 	%rd904, {%r1537, %r1536};
	shf.l.wrap.b32 	%r1538, %r1534, %r1535, 30;
	shf.l.wrap.b32 	%r1539, %r1535, %r1534, 30;
	mov.b64 	%rd905, {%r1539, %r1538};
	xor.b64  	%rd906, %rd905, %rd904;
	shf.l.wrap.b32 	%r1540, %r1534, %r1535, 25;
	shf.l.wrap.b32 	%r1541, %r1535, %r1534, 25;
	mov.b64 	%rd907, {%r1541, %r1540};
	xor.b64  	%rd908, %rd906, %rd907;
	xor.b64  	%rd909, %rd889, %rd839;
	xor.b64  	%rd910, %rd889, %rd864;
	and.b64  	%rd911, %rd910, %rd909;
	xor.b64  	%rd912, %rd911, %rd889;
	add.s64 	%rd913, %rd902, %rd912;
	add.s64 	%rd914, %rd913, %rd908;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1542,%dummy}, %rd903;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1543}, %rd903;
	}
	shf.r.wrap.b32 	%r1544, %r1543, %r1542, 14;
	shf.r.wrap.b32 	%r1545, %r1542, %r1543, 14;
	mov.b64 	%rd915, {%r1545, %r1544};
	shf.r.wrap.b32 	%r1546, %r1543, %r1542, 18;
	shf.r.wrap.b32 	%r1547, %r1542, %r1543, 18;
	mov.b64 	%rd916, {%r1547, %r1546};
	xor.b64  	%rd917, %rd916, %rd915;
	shf.l.wrap.b32 	%r1548, %r1542, %r1543, 23;
	shf.l.wrap.b32 	%r1549, %r1543, %r1542, 23;
	mov.b64 	%rd918, {%r1549, %r1548};
	xor.b64  	%rd919, %rd917, %rd918;
	xor.b64  	%rd920, %rd878, %rd853;
	and.b64  	%rd921, %rd903, %rd920;
	xor.b64  	%rd922, %rd921, %rd853;
	add.s64 	%rd923, %rd828, %rd551;
	ld.const.u64 	%rd924, [k_sha512+240];
	add.s64 	%rd925, %rd923, %rd924;
	add.s64 	%rd926, %rd925, %rd922;
	add.s64 	%rd927, %rd926, %rd919;
	add.s64 	%rd928, %rd927, %rd839;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1550,%dummy}, %rd914;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1551}, %rd914;
	}
	shf.r.wrap.b32 	%r1552, %r1551, %r1550, 28;
	shf.r.wrap.b32 	%r1553, %r1550, %r1551, 28;
	mov.b64 	%rd929, {%r1553, %r1552};
	shf.l.wrap.b32 	%r1554, %r1550, %r1551, 30;
	shf.l.wrap.b32 	%r1555, %r1551, %r1550, 30;
	mov.b64 	%rd930, {%r1555, %r1554};
	xor.b64  	%rd931, %rd930, %rd929;
	shf.l.wrap.b32 	%r1556, %r1550, %r1551, 25;
	shf.l.wrap.b32 	%r1557, %r1551, %r1550, 25;
	mov.b64 	%rd932, {%r1557, %r1556};
	xor.b64  	%rd933, %rd931, %rd932;
	xor.b64  	%rd934, %rd914, %rd864;
	xor.b64  	%rd935, %rd914, %rd889;
	and.b64  	%rd936, %rd935, %rd934;
	xor.b64  	%rd937, %rd936, %rd914;
	add.s64 	%rd938, %rd927, %rd937;
	add.s64 	%rd939, %rd938, %rd933;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1558,%dummy}, %rd928;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1559}, %rd928;
	}
	shf.r.wrap.b32 	%r1560, %r1559, %r1558, 14;
	shf.r.wrap.b32 	%r1561, %r1558, %r1559, 14;
	mov.b64 	%rd940, {%r1561, %r1560};
	shf.r.wrap.b32 	%r1562, %r1559, %r1558, 18;
	shf.r.wrap.b32 	%r1563, %r1558, %r1559, 18;
	mov.b64 	%rd941, {%r1563, %r1562};
	xor.b64  	%rd942, %rd941, %rd940;
	shf.l.wrap.b32 	%r1564, %r1558, %r1559, 23;
	shf.l.wrap.b32 	%r1565, %r1559, %r1558, 23;
	mov.b64 	%rd943, {%r1565, %r1564};
	xor.b64  	%rd944, %rd942, %rd943;
	xor.b64  	%rd945, %rd903, %rd878;
	and.b64  	%rd946, %rd928, %rd945;
	xor.b64  	%rd947, %rd946, %rd878;
	add.s64 	%rd948, %rd853, %rd564;
	ld.const.u64 	%rd949, [k_sha512+248];
	add.s64 	%rd950, %rd948, %rd949;
	add.s64 	%rd951, %rd950, %rd947;
	add.s64 	%rd952, %rd951, %rd944;
	add.s64 	%rd953, %rd952, %rd864;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1566,%dummy}, %rd939;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1567}, %rd939;
	}
	shf.r.wrap.b32 	%r1568, %r1567, %r1566, 28;
	shf.r.wrap.b32 	%r1569, %r1566, %r1567, 28;
	mov.b64 	%rd954, {%r1569, %r1568};
	shf.l.wrap.b32 	%r1570, %r1566, %r1567, 30;
	shf.l.wrap.b32 	%r1571, %r1567, %r1566, 30;
	mov.b64 	%rd955, {%r1571, %r1570};
	xor.b64  	%rd956, %rd955, %rd954;
	shf.l.wrap.b32 	%r1572, %r1566, %r1567, 25;
	shf.l.wrap.b32 	%r1573, %r1567, %r1566, 25;
	mov.b64 	%rd957, {%r1573, %r1572};
	xor.b64  	%rd958, %rd956, %rd957;
	xor.b64  	%rd959, %rd939, %rd889;
	xor.b64  	%rd960, %rd939, %rd914;
	and.b64  	%rd961, %rd960, %rd959;
	xor.b64  	%rd962, %rd961, %rd939;
	add.s64 	%rd963, %rd952, %rd962;
	add.s64 	%rd964, %rd963, %rd958;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1574,%dummy}, %rd551;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1575}, %rd551;
	}
	shf.r.wrap.b32 	%r1576, %r1575, %r1574, 19;
	shf.r.wrap.b32 	%r1577, %r1574, %r1575, 19;
	mov.b64 	%rd965, {%r1577, %r1576};
	shf.l.wrap.b32 	%r1578, %r1574, %r1575, 3;
	shf.l.wrap.b32 	%r1579, %r1575, %r1574, 3;
	mov.b64 	%rd966, {%r1579, %r1578};
	shr.u64 	%rd967, %rd551, 6;
	xor.b64  	%rd968, %rd965, %rd967;
	xor.b64  	%rd969, %rd968, %rd966;
	shf.r.wrap.b32 	%r1580, %r1205, %r1204, 1;
	shf.r.wrap.b32 	%r1581, %r1204, %r1205, 1;
	mov.b64 	%rd970, {%r1581, %r1580};
	shf.r.wrap.b32 	%r1582, %r1205, %r1204, 8;
	shf.r.wrap.b32 	%r1583, %r1204, %r1205, 8;
	mov.b64 	%rd971, {%r1583, %r1582};
	shr.u64 	%rd972, %rd425, 7;
	xor.b64  	%rd973, %rd970, %rd972;
	xor.b64  	%rd974, %rd973, %rd971;
	add.s64 	%rd975, %rd413, %rd511;
	add.s64 	%rd976, %rd975, %rd969;
	add.s64 	%rd977, %rd976, %rd974;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1584,%dummy}, %rd564;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1585}, %rd564;
	}
	shf.r.wrap.b32 	%r1586, %r1585, %r1584, 19;
	shf.r.wrap.b32 	%r1587, %r1584, %r1585, 19;
	mov.b64 	%rd978, {%r1587, %r1586};
	shf.l.wrap.b32 	%r1588, %r1584, %r1585, 3;
	shf.l.wrap.b32 	%r1589, %r1585, %r1584, 3;
	mov.b64 	%rd979, {%r1589, %r1588};
	shr.u64 	%rd980, %rd564, 6;
	xor.b64  	%rd981, %rd978, %rd980;
	xor.b64  	%rd982, %rd981, %rd979;
	shf.r.wrap.b32 	%r1590, %r1217, %r1216, 1;
	shf.r.wrap.b32 	%r1591, %r1216, %r1217, 1;
	mov.b64 	%rd983, {%r1591, %r1590};
	shf.r.wrap.b32 	%r1592, %r1217, %r1216, 8;
	shf.r.wrap.b32 	%r1593, %r1216, %r1217, 8;
	mov.b64 	%rd984, {%r1593, %r1592};
	shr.u64 	%rd985, %rd437, 7;
	xor.b64  	%rd986, %rd983, %rd985;
	xor.b64  	%rd987, %rd986, %rd984;
	add.s64 	%rd988, %rd425, %rd518;
	add.s64 	%rd989, %rd988, %rd982;
	add.s64 	%rd990, %rd989, %rd987;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1594,%dummy}, %rd977;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1595}, %rd977;
	}
	shf.r.wrap.b32 	%r1596, %r1595, %r1594, 19;
	shf.r.wrap.b32 	%r1597, %r1594, %r1595, 19;
	mov.b64 	%rd991, {%r1597, %r1596};
	shf.l.wrap.b32 	%r1598, %r1594, %r1595, 3;
	shf.l.wrap.b32 	%r1599, %r1595, %r1594, 3;
	mov.b64 	%rd992, {%r1599, %r1598};
	shr.u64 	%rd993, %rd977, 6;
	xor.b64  	%rd994, %rd991, %rd993;
	xor.b64  	%rd995, %rd994, %rd992;
	shf.r.wrap.b32 	%r1600, %r1229, %r1228, 1;
	shf.r.wrap.b32 	%r1601, %r1228, %r1229, 1;
	mov.b64 	%rd996, {%r1601, %r1600};
	shf.r.wrap.b32 	%r1602, %r1229, %r1228, 8;
	shf.r.wrap.b32 	%r1603, %r1228, %r1229, 8;
	mov.b64 	%rd997, {%r1603, %r1602};
	shr.u64 	%rd998, %rd449, 7;
	xor.b64  	%rd999, %rd996, %rd998;
	xor.b64  	%rd1000, %rd999, %rd997;
	add.s64 	%rd1001, %rd437, %rd525;
	add.s64 	%rd1002, %rd1001, %rd995;
	add.s64 	%rd1003, %rd1002, %rd1000;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1604,%dummy}, %rd990;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1605}, %rd990;
	}
	shf.r.wrap.b32 	%r1606, %r1605, %r1604, 19;
	shf.r.wrap.b32 	%r1607, %r1604, %r1605, 19;
	mov.b64 	%rd1004, {%r1607, %r1606};
	shf.l.wrap.b32 	%r1608, %r1604, %r1605, 3;
	shf.l.wrap.b32 	%r1609, %r1605, %r1604, 3;
	mov.b64 	%rd1005, {%r1609, %r1608};
	shr.u64 	%rd1006, %rd990, 6;
	xor.b64  	%rd1007, %rd1004, %rd1006;
	xor.b64  	%rd1008, %rd1007, %rd1005;
	shf.r.wrap.b32 	%r1610, %r1241, %r1240, 1;
	shf.r.wrap.b32 	%r1611, %r1240, %r1241, 1;
	mov.b64 	%rd1009, {%r1611, %r1610};
	shf.r.wrap.b32 	%r1612, %r1241, %r1240, 8;
	shf.r.wrap.b32 	%r1613, %r1240, %r1241, 8;
	mov.b64 	%rd1010, {%r1613, %r1612};
	shr.u64 	%rd1011, %rd461, 7;
	xor.b64  	%rd1012, %rd1009, %rd1011;
	xor.b64  	%rd1013, %rd1012, %rd1010;
	add.s64 	%rd1014, %rd449, %rd532;
	add.s64 	%rd1015, %rd1014, %rd1008;
	add.s64 	%rd1016, %rd1015, %rd1013;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1614,%dummy}, %rd1003;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1615}, %rd1003;
	}
	shf.r.wrap.b32 	%r1616, %r1615, %r1614, 19;
	shf.r.wrap.b32 	%r1617, %r1614, %r1615, 19;
	mov.b64 	%rd1017, {%r1617, %r1616};
	shf.l.wrap.b32 	%r1618, %r1614, %r1615, 3;
	shf.l.wrap.b32 	%r1619, %r1615, %r1614, 3;
	mov.b64 	%rd1018, {%r1619, %r1618};
	shr.u64 	%rd1019, %rd1003, 6;
	xor.b64  	%rd1020, %rd1017, %rd1019;
	xor.b64  	%rd1021, %rd1020, %rd1018;
	shf.r.wrap.b32 	%r1620, %r1253, %r1252, 1;
	shf.r.wrap.b32 	%r1621, %r1252, %r1253, 1;
	mov.b64 	%rd1022, {%r1621, %r1620};
	shf.r.wrap.b32 	%r1622, %r1253, %r1252, 8;
	shf.r.wrap.b32 	%r1623, %r1252, %r1253, 8;
	mov.b64 	%rd1023, {%r1623, %r1622};
	shr.u64 	%rd1024, %rd473, 7;
	xor.b64  	%rd1025, %rd1022, %rd1024;
	xor.b64  	%rd1026, %rd1025, %rd1023;
	add.s64 	%rd1027, %rd461, %rd539;
	add.s64 	%rd1028, %rd1027, %rd1021;
	add.s64 	%rd1029, %rd1028, %rd1026;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1624,%dummy}, %rd1016;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1625}, %rd1016;
	}
	shf.r.wrap.b32 	%r1626, %r1625, %r1624, 19;
	shf.r.wrap.b32 	%r1627, %r1624, %r1625, 19;
	mov.b64 	%rd1030, {%r1627, %r1626};
	shf.l.wrap.b32 	%r1628, %r1624, %r1625, 3;
	shf.l.wrap.b32 	%r1629, %r1625, %r1624, 3;
	mov.b64 	%rd1031, {%r1629, %r1628};
	shr.u64 	%rd1032, %rd1016, 6;
	xor.b64  	%rd1033, %rd1030, %rd1032;
	xor.b64  	%rd1034, %rd1033, %rd1031;
	shf.r.wrap.b32 	%r1630, %r1263, %r1262, 1;
	shf.r.wrap.b32 	%r1631, %r1262, %r1263, 1;
	mov.b64 	%rd1035, {%r1631, %r1630};
	shf.r.wrap.b32 	%r1632, %r1263, %r1262, 8;
	shf.r.wrap.b32 	%r1633, %r1262, %r1263, 8;
	mov.b64 	%rd1036, {%r1633, %r1632};
	shr.u64 	%rd1037, %rd486, 7;
	xor.b64  	%rd1038, %rd1035, %rd1037;
	xor.b64  	%rd1039, %rd1038, %rd1036;
	add.s64 	%rd1040, %rd473, %rd551;
	add.s64 	%rd1041, %rd1040, %rd1034;
	add.s64 	%rd1042, %rd1041, %rd1039;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1634,%dummy}, %rd1029;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1635}, %rd1029;
	}
	shf.r.wrap.b32 	%r1636, %r1635, %r1634, 19;
	shf.r.wrap.b32 	%r1637, %r1634, %r1635, 19;
	mov.b64 	%rd1043, {%r1637, %r1636};
	shf.l.wrap.b32 	%r1638, %r1634, %r1635, 3;
	shf.l.wrap.b32 	%r1639, %r1635, %r1634, 3;
	mov.b64 	%rd1044, {%r1639, %r1638};
	shr.u64 	%rd1045, %rd1029, 6;
	xor.b64  	%rd1046, %rd1043, %rd1045;
	xor.b64  	%rd1047, %rd1046, %rd1044;
	shf.r.wrap.b32 	%r1640, %r1269, %r1268, 1;
	shf.r.wrap.b32 	%r1641, %r1268, %r1269, 1;
	mov.b64 	%rd1048, {%r1641, %r1640};
	shf.r.wrap.b32 	%r1642, %r1269, %r1268, 8;
	shf.r.wrap.b32 	%r1643, %r1268, %r1269, 8;
	mov.b64 	%rd1049, {%r1643, %r1642};
	shr.u64 	%rd1050, %rd497, 7;
	xor.b64  	%rd1051, %rd1048, %rd1050;
	xor.b64  	%rd1052, %rd1051, %rd1049;
	add.s64 	%rd1053, %rd564, %rd486;
	add.s64 	%rd1054, %rd1053, %rd1047;
	add.s64 	%rd1055, %rd1054, %rd1052;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1644,%dummy}, %rd1042;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1645}, %rd1042;
	}
	shf.r.wrap.b32 	%r1646, %r1645, %r1644, 19;
	shf.r.wrap.b32 	%r1647, %r1644, %r1645, 19;
	mov.b64 	%rd1056, {%r1647, %r1646};
	shf.l.wrap.b32 	%r1648, %r1644, %r1645, 3;
	shf.l.wrap.b32 	%r1649, %r1645, %r1644, 3;
	mov.b64 	%rd1057, {%r1649, %r1648};
	shr.u64 	%rd1058, %rd1042, 6;
	xor.b64  	%rd1059, %rd1056, %rd1058;
	xor.b64  	%rd1060, %rd1059, %rd1057;
	shf.r.wrap.b32 	%r1650, %r1275, %r1274, 1;
	shf.r.wrap.b32 	%r1651, %r1274, %r1275, 1;
	mov.b64 	%rd1061, {%r1651, %r1650};
	shf.r.wrap.b32 	%r1652, %r1275, %r1274, 8;
	shf.r.wrap.b32 	%r1653, %r1274, %r1275, 8;
	mov.b64 	%rd1062, {%r1653, %r1652};
	shr.u64 	%rd1063, %rd504, 7;
	xor.b64  	%rd1064, %rd1061, %rd1063;
	xor.b64  	%rd1065, %rd1064, %rd1062;
	add.s64 	%rd1066, %rd977, %rd497;
	add.s64 	%rd1067, %rd1066, %rd1060;
	add.s64 	%rd1068, %rd1067, %rd1065;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1654,%dummy}, %rd1055;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1655}, %rd1055;
	}
	shf.r.wrap.b32 	%r1656, %r1655, %r1654, 19;
	shf.r.wrap.b32 	%r1657, %r1654, %r1655, 19;
	mov.b64 	%rd1069, {%r1657, %r1656};
	shf.l.wrap.b32 	%r1658, %r1654, %r1655, 3;
	shf.l.wrap.b32 	%r1659, %r1655, %r1654, 3;
	mov.b64 	%rd1070, {%r1659, %r1658};
	shr.u64 	%rd1071, %rd1055, 6;
	xor.b64  	%rd1072, %rd1069, %rd1071;
	xor.b64  	%rd1073, %rd1072, %rd1070;
	shf.r.wrap.b32 	%r1660, %r1281, %r1280, 1;
	shf.r.wrap.b32 	%r1661, %r1280, %r1281, 1;
	mov.b64 	%rd1074, {%r1661, %r1660};
	shf.r.wrap.b32 	%r1662, %r1281, %r1280, 8;
	shf.r.wrap.b32 	%r1663, %r1280, %r1281, 8;
	mov.b64 	%rd1075, {%r1663, %r1662};
	shr.u64 	%rd1076, %rd511, 7;
	xor.b64  	%rd1077, %rd1074, %rd1076;
	xor.b64  	%rd1078, %rd1077, %rd1075;
	add.s64 	%rd1079, %rd990, %rd504;
	add.s64 	%rd1080, %rd1079, %rd1073;
	add.s64 	%rd1081, %rd1080, %rd1078;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1664,%dummy}, %rd1068;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1665}, %rd1068;
	}
	shf.r.wrap.b32 	%r1666, %r1665, %r1664, 19;
	shf.r.wrap.b32 	%r1667, %r1664, %r1665, 19;
	mov.b64 	%rd1082, {%r1667, %r1666};
	shf.l.wrap.b32 	%r1668, %r1664, %r1665, 3;
	shf.l.wrap.b32 	%r1669, %r1665, %r1664, 3;
	mov.b64 	%rd1083, {%r1669, %r1668};
	shr.u64 	%rd1084, %rd1068, 6;
	xor.b64  	%rd1085, %rd1082, %rd1084;
	xor.b64  	%rd1086, %rd1085, %rd1083;
	shf.r.wrap.b32 	%r1670, %r1287, %r1286, 1;
	shf.r.wrap.b32 	%r1671, %r1286, %r1287, 1;
	mov.b64 	%rd1087, {%r1671, %r1670};
	shf.r.wrap.b32 	%r1672, %r1287, %r1286, 8;
	shf.r.wrap.b32 	%r1673, %r1286, %r1287, 8;
	mov.b64 	%rd1088, {%r1673, %r1672};
	shr.u64 	%rd1089, %rd518, 7;
	xor.b64  	%rd1090, %rd1087, %rd1089;
	xor.b64  	%rd1091, %rd1090, %rd1088;
	add.s64 	%rd1092, %rd1003, %rd511;
	add.s64 	%rd1093, %rd1092, %rd1086;
	add.s64 	%rd1094, %rd1093, %rd1091;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1674,%dummy}, %rd1081;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1675}, %rd1081;
	}
	shf.r.wrap.b32 	%r1676, %r1675, %r1674, 19;
	shf.r.wrap.b32 	%r1677, %r1674, %r1675, 19;
	mov.b64 	%rd1095, {%r1677, %r1676};
	shf.l.wrap.b32 	%r1678, %r1674, %r1675, 3;
	shf.l.wrap.b32 	%r1679, %r1675, %r1674, 3;
	mov.b64 	%rd1096, {%r1679, %r1678};
	shr.u64 	%rd1097, %rd1081, 6;
	xor.b64  	%rd1098, %rd1095, %rd1097;
	xor.b64  	%rd1099, %rd1098, %rd1096;
	shf.r.wrap.b32 	%r1680, %r1293, %r1292, 1;
	shf.r.wrap.b32 	%r1681, %r1292, %r1293, 1;
	mov.b64 	%rd1100, {%r1681, %r1680};
	shf.r.wrap.b32 	%r1682, %r1293, %r1292, 8;
	shf.r.wrap.b32 	%r1683, %r1292, %r1293, 8;
	mov.b64 	%rd1101, {%r1683, %r1682};
	shr.u64 	%rd1102, %rd525, 7;
	xor.b64  	%rd1103, %rd1100, %rd1102;
	xor.b64  	%rd1104, %rd1103, %rd1101;
	add.s64 	%rd1105, %rd1016, %rd518;
	add.s64 	%rd1106, %rd1105, %rd1099;
	add.s64 	%rd1107, %rd1106, %rd1104;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1684,%dummy}, %rd1094;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1685}, %rd1094;
	}
	shf.r.wrap.b32 	%r1686, %r1685, %r1684, 19;
	shf.r.wrap.b32 	%r1687, %r1684, %r1685, 19;
	mov.b64 	%rd1108, {%r1687, %r1686};
	shf.l.wrap.b32 	%r1688, %r1684, %r1685, 3;
	shf.l.wrap.b32 	%r1689, %r1685, %r1684, 3;
	mov.b64 	%rd1109, {%r1689, %r1688};
	shr.u64 	%rd1110, %rd1094, 6;
	xor.b64  	%rd1111, %rd1108, %rd1110;
	xor.b64  	%rd1112, %rd1111, %rd1109;
	shf.r.wrap.b32 	%r1690, %r1299, %r1298, 1;
	shf.r.wrap.b32 	%r1691, %r1298, %r1299, 1;
	mov.b64 	%rd1113, {%r1691, %r1690};
	shf.r.wrap.b32 	%r1692, %r1299, %r1298, 8;
	shf.r.wrap.b32 	%r1693, %r1298, %r1299, 8;
	mov.b64 	%rd1114, {%r1693, %r1692};
	shr.u64 	%rd1115, %rd532, 7;
	xor.b64  	%rd1116, %rd1113, %rd1115;
	xor.b64  	%rd1117, %rd1116, %rd1114;
	add.s64 	%rd1118, %rd1029, %rd525;
	add.s64 	%rd1119, %rd1118, %rd1112;
	add.s64 	%rd1120, %rd1119, %rd1117;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1694,%dummy}, %rd1107;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1695}, %rd1107;
	}
	shf.r.wrap.b32 	%r1696, %r1695, %r1694, 19;
	shf.r.wrap.b32 	%r1697, %r1694, %r1695, 19;
	mov.b64 	%rd1121, {%r1697, %r1696};
	shf.l.wrap.b32 	%r1698, %r1694, %r1695, 3;
	shf.l.wrap.b32 	%r1699, %r1695, %r1694, 3;
	mov.b64 	%rd1122, {%r1699, %r1698};
	shr.u64 	%rd1123, %rd1107, 6;
	xor.b64  	%rd1124, %rd1121, %rd1123;
	xor.b64  	%rd1125, %rd1124, %rd1122;
	shf.r.wrap.b32 	%r1700, %r1309, %r1308, 1;
	shf.r.wrap.b32 	%r1701, %r1308, %r1309, 1;
	mov.b64 	%rd1126, {%r1701, %r1700};
	shf.r.wrap.b32 	%r1702, %r1309, %r1308, 8;
	shf.r.wrap.b32 	%r1703, %r1308, %r1309, 8;
	mov.b64 	%rd1127, {%r1703, %r1702};
	shr.u64 	%rd1128, %rd539, 7;
	xor.b64  	%rd1129, %rd1126, %rd1128;
	xor.b64  	%rd1130, %rd1129, %rd1127;
	add.s64 	%rd1131, %rd1042, %rd532;
	add.s64 	%rd1132, %rd1131, %rd1125;
	add.s64 	%rd1133, %rd1132, %rd1130;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1704,%dummy}, %rd1120;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1705}, %rd1120;
	}
	shf.r.wrap.b32 	%r1706, %r1705, %r1704, 19;
	shf.r.wrap.b32 	%r1707, %r1704, %r1705, 19;
	mov.b64 	%rd1134, {%r1707, %r1706};
	shf.l.wrap.b32 	%r1708, %r1704, %r1705, 3;
	shf.l.wrap.b32 	%r1709, %r1705, %r1704, 3;
	mov.b64 	%rd1135, {%r1709, %r1708};
	shr.u64 	%rd1136, %rd1120, 6;
	xor.b64  	%rd1137, %rd1134, %rd1136;
	xor.b64  	%rd1138, %rd1137, %rd1135;
	shf.r.wrap.b32 	%r1710, %r1575, %r1574, 1;
	shf.r.wrap.b32 	%r1711, %r1574, %r1575, 1;
	mov.b64 	%rd1139, {%r1711, %r1710};
	shf.r.wrap.b32 	%r1712, %r1575, %r1574, 8;
	shf.r.wrap.b32 	%r1713, %r1574, %r1575, 8;
	mov.b64 	%rd1140, {%r1713, %r1712};
	shr.u64 	%rd1141, %rd551, 7;
	xor.b64  	%rd1142, %rd1139, %rd1141;
	xor.b64  	%rd1143, %rd1142, %rd1140;
	add.s64 	%rd1144, %rd1055, %rd539;
	add.s64 	%rd1145, %rd1144, %rd1138;
	add.s64 	%rd1146, %rd1145, %rd1143;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1714,%dummy}, %rd1133;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1715}, %rd1133;
	}
	shf.r.wrap.b32 	%r1716, %r1715, %r1714, 19;
	shf.r.wrap.b32 	%r1717, %r1714, %r1715, 19;
	mov.b64 	%rd1147, {%r1717, %r1716};
	shf.l.wrap.b32 	%r1718, %r1714, %r1715, 3;
	shf.l.wrap.b32 	%r1719, %r1715, %r1714, 3;
	mov.b64 	%rd1148, {%r1719, %r1718};
	shr.u64 	%rd1149, %rd1133, 6;
	xor.b64  	%rd1150, %rd1147, %rd1149;
	xor.b64  	%rd1151, %rd1150, %rd1148;
	shf.r.wrap.b32 	%r1720, %r1585, %r1584, 1;
	shf.r.wrap.b32 	%r1721, %r1584, %r1585, 1;
	mov.b64 	%rd1152, {%r1721, %r1720};
	shf.r.wrap.b32 	%r1722, %r1585, %r1584, 8;
	shf.r.wrap.b32 	%r1723, %r1584, %r1585, 8;
	mov.b64 	%rd1153, {%r1723, %r1722};
	shr.u64 	%rd1154, %rd564, 7;
	xor.b64  	%rd1155, %rd1152, %rd1154;
	xor.b64  	%rd1156, %rd1155, %rd1153;
	add.s64 	%rd1157, %rd1068, %rd551;
	add.s64 	%rd1158, %rd1157, %rd1151;
	add.s64 	%rd1159, %rd1158, %rd1156;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1724,%dummy}, %rd1146;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1725}, %rd1146;
	}
	shf.r.wrap.b32 	%r1726, %r1725, %r1724, 19;
	shf.r.wrap.b32 	%r1727, %r1724, %r1725, 19;
	mov.b64 	%rd1160, {%r1727, %r1726};
	shf.l.wrap.b32 	%r1728, %r1724, %r1725, 3;
	shf.l.wrap.b32 	%r1729, %r1725, %r1724, 3;
	mov.b64 	%rd1161, {%r1729, %r1728};
	shr.u64 	%rd1162, %rd1146, 6;
	xor.b64  	%rd1163, %rd1160, %rd1162;
	xor.b64  	%rd1164, %rd1163, %rd1161;
	shf.r.wrap.b32 	%r1730, %r1595, %r1594, 1;
	shf.r.wrap.b32 	%r1731, %r1594, %r1595, 1;
	mov.b64 	%rd1165, {%r1731, %r1730};
	shf.r.wrap.b32 	%r1732, %r1595, %r1594, 8;
	shf.r.wrap.b32 	%r1733, %r1594, %r1595, 8;
	mov.b64 	%rd1166, {%r1733, %r1732};
	shr.u64 	%rd1167, %rd977, 7;
	xor.b64  	%rd1168, %rd1165, %rd1167;
	xor.b64  	%rd1169, %rd1168, %rd1166;
	add.s64 	%rd1170, %rd1081, %rd564;
	add.s64 	%rd1171, %rd1170, %rd1164;
	add.s64 	%rd1172, %rd1171, %rd1169;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1734,%dummy}, %rd953;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1735}, %rd953;
	}
	shf.r.wrap.b32 	%r1736, %r1735, %r1734, 14;
	shf.r.wrap.b32 	%r1737, %r1734, %r1735, 14;
	mov.b64 	%rd1173, {%r1737, %r1736};
	shf.r.wrap.b32 	%r1738, %r1735, %r1734, 18;
	shf.r.wrap.b32 	%r1739, %r1734, %r1735, 18;
	mov.b64 	%rd1174, {%r1739, %r1738};
	xor.b64  	%rd1175, %rd1174, %rd1173;
	shf.l.wrap.b32 	%r1740, %r1734, %r1735, 23;
	shf.l.wrap.b32 	%r1741, %r1735, %r1734, 23;
	mov.b64 	%rd1176, {%r1741, %r1740};
	xor.b64  	%rd1177, %rd1175, %rd1176;
	xor.b64  	%rd1178, %rd928, %rd903;
	and.b64  	%rd1179, %rd1178, %rd953;
	xor.b64  	%rd1180, %rd1179, %rd903;
	add.s64 	%rd1181, %rd1180, %rd878;
	add.s64 	%rd1182, %rd1181, %rd977;
	ld.const.u64 	%rd1183, [k_sha512+256];
	add.s64 	%rd1184, %rd1182, %rd1183;
	add.s64 	%rd1185, %rd1184, %rd1177;
	add.s64 	%rd1186, %rd1185, %rd889;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1742,%dummy}, %rd964;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1743}, %rd964;
	}
	shf.r.wrap.b32 	%r1744, %r1743, %r1742, 28;
	shf.r.wrap.b32 	%r1745, %r1742, %r1743, 28;
	mov.b64 	%rd1187, {%r1745, %r1744};
	shf.l.wrap.b32 	%r1746, %r1742, %r1743, 30;
	shf.l.wrap.b32 	%r1747, %r1743, %r1742, 30;
	mov.b64 	%rd1188, {%r1747, %r1746};
	xor.b64  	%rd1189, %rd1188, %rd1187;
	shf.l.wrap.b32 	%r1748, %r1742, %r1743, 25;
	shf.l.wrap.b32 	%r1749, %r1743, %r1742, 25;
	mov.b64 	%rd1190, {%r1749, %r1748};
	xor.b64  	%rd1191, %rd1189, %rd1190;
	xor.b64  	%rd1192, %rd964, %rd914;
	xor.b64  	%rd1193, %rd964, %rd939;
	and.b64  	%rd1194, %rd1193, %rd1192;
	xor.b64  	%rd1195, %rd1194, %rd964;
	add.s64 	%rd1196, %rd1185, %rd1195;
	add.s64 	%rd1197, %rd1196, %rd1191;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1750,%dummy}, %rd1186;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1751}, %rd1186;
	}
	shf.r.wrap.b32 	%r1752, %r1751, %r1750, 14;
	shf.r.wrap.b32 	%r1753, %r1750, %r1751, 14;
	mov.b64 	%rd1198, {%r1753, %r1752};
	shf.r.wrap.b32 	%r1754, %r1751, %r1750, 18;
	shf.r.wrap.b32 	%r1755, %r1750, %r1751, 18;
	mov.b64 	%rd1199, {%r1755, %r1754};
	xor.b64  	%rd1200, %rd1199, %rd1198;
	shf.l.wrap.b32 	%r1756, %r1750, %r1751, 23;
	shf.l.wrap.b32 	%r1757, %r1751, %r1750, 23;
	mov.b64 	%rd1201, {%r1757, %r1756};
	xor.b64  	%rd1202, %rd1200, %rd1201;
	xor.b64  	%rd1203, %rd953, %rd928;
	and.b64  	%rd1204, %rd1186, %rd1203;
	xor.b64  	%rd1205, %rd1204, %rd928;
	add.s64 	%rd1206, %rd990, %rd903;
	ld.const.u64 	%rd1207, [k_sha512+264];
	add.s64 	%rd1208, %rd1206, %rd1207;
	add.s64 	%rd1209, %rd1208, %rd1205;
	add.s64 	%rd1210, %rd1209, %rd1202;
	add.s64 	%rd1211, %rd1210, %rd914;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1758,%dummy}, %rd1197;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1759}, %rd1197;
	}
	shf.r.wrap.b32 	%r1760, %r1759, %r1758, 28;
	shf.r.wrap.b32 	%r1761, %r1758, %r1759, 28;
	mov.b64 	%rd1212, {%r1761, %r1760};
	shf.l.wrap.b32 	%r1762, %r1758, %r1759, 30;
	shf.l.wrap.b32 	%r1763, %r1759, %r1758, 30;
	mov.b64 	%rd1213, {%r1763, %r1762};
	xor.b64  	%rd1214, %rd1213, %rd1212;
	shf.l.wrap.b32 	%r1764, %r1758, %r1759, 25;
	shf.l.wrap.b32 	%r1765, %r1759, %r1758, 25;
	mov.b64 	%rd1215, {%r1765, %r1764};
	xor.b64  	%rd1216, %rd1214, %rd1215;
	xor.b64  	%rd1217, %rd1197, %rd939;
	xor.b64  	%rd1218, %rd1197, %rd964;
	and.b64  	%rd1219, %rd1218, %rd1217;
	xor.b64  	%rd1220, %rd1219, %rd1197;
	add.s64 	%rd1221, %rd1210, %rd1220;
	add.s64 	%rd1222, %rd1221, %rd1216;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1766,%dummy}, %rd1211;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1767}, %rd1211;
	}
	shf.r.wrap.b32 	%r1768, %r1767, %r1766, 14;
	shf.r.wrap.b32 	%r1769, %r1766, %r1767, 14;
	mov.b64 	%rd1223, {%r1769, %r1768};
	shf.r.wrap.b32 	%r1770, %r1767, %r1766, 18;
	shf.r.wrap.b32 	%r1771, %r1766, %r1767, 18;
	mov.b64 	%rd1224, {%r1771, %r1770};
	xor.b64  	%rd1225, %rd1224, %rd1223;
	shf.l.wrap.b32 	%r1772, %r1766, %r1767, 23;
	shf.l.wrap.b32 	%r1773, %r1767, %r1766, 23;
	mov.b64 	%rd1226, {%r1773, %r1772};
	xor.b64  	%rd1227, %rd1225, %rd1226;
	xor.b64  	%rd1228, %rd1186, %rd953;
	and.b64  	%rd1229, %rd1211, %rd1228;
	xor.b64  	%rd1230, %rd1229, %rd953;
	add.s64 	%rd1231, %rd1003, %rd928;
	ld.const.u64 	%rd1232, [k_sha512+272];
	add.s64 	%rd1233, %rd1231, %rd1232;
	add.s64 	%rd1234, %rd1233, %rd1230;
	add.s64 	%rd1235, %rd1234, %rd1227;
	add.s64 	%rd1236, %rd1235, %rd939;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1774,%dummy}, %rd1222;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1775}, %rd1222;
	}
	shf.r.wrap.b32 	%r1776, %r1775, %r1774, 28;
	shf.r.wrap.b32 	%r1777, %r1774, %r1775, 28;
	mov.b64 	%rd1237, {%r1777, %r1776};
	shf.l.wrap.b32 	%r1778, %r1774, %r1775, 30;
	shf.l.wrap.b32 	%r1779, %r1775, %r1774, 30;
	mov.b64 	%rd1238, {%r1779, %r1778};
	xor.b64  	%rd1239, %rd1238, %rd1237;
	shf.l.wrap.b32 	%r1780, %r1774, %r1775, 25;
	shf.l.wrap.b32 	%r1781, %r1775, %r1774, 25;
	mov.b64 	%rd1240, {%r1781, %r1780};
	xor.b64  	%rd1241, %rd1239, %rd1240;
	xor.b64  	%rd1242, %rd1222, %rd964;
	xor.b64  	%rd1243, %rd1222, %rd1197;
	and.b64  	%rd1244, %rd1243, %rd1242;
	xor.b64  	%rd1245, %rd1244, %rd1222;
	add.s64 	%rd1246, %rd1235, %rd1245;
	add.s64 	%rd1247, %rd1246, %rd1241;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1782,%dummy}, %rd1236;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1783}, %rd1236;
	}
	shf.r.wrap.b32 	%r1784, %r1783, %r1782, 14;
	shf.r.wrap.b32 	%r1785, %r1782, %r1783, 14;
	mov.b64 	%rd1248, {%r1785, %r1784};
	shf.r.wrap.b32 	%r1786, %r1783, %r1782, 18;
	shf.r.wrap.b32 	%r1787, %r1782, %r1783, 18;
	mov.b64 	%rd1249, {%r1787, %r1786};
	xor.b64  	%rd1250, %rd1249, %rd1248;
	shf.l.wrap.b32 	%r1788, %r1782, %r1783, 23;
	shf.l.wrap.b32 	%r1789, %r1783, %r1782, 23;
	mov.b64 	%rd1251, {%r1789, %r1788};
	xor.b64  	%rd1252, %rd1250, %rd1251;
	xor.b64  	%rd1253, %rd1211, %rd1186;
	and.b64  	%rd1254, %rd1236, %rd1253;
	xor.b64  	%rd1255, %rd1254, %rd1186;
	add.s64 	%rd1256, %rd1016, %rd953;
	ld.const.u64 	%rd1257, [k_sha512+280];
	add.s64 	%rd1258, %rd1256, %rd1257;
	add.s64 	%rd1259, %rd1258, %rd1255;
	add.s64 	%rd1260, %rd1259, %rd1252;
	add.s64 	%rd1261, %rd1260, %rd964;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1790,%dummy}, %rd1247;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1791}, %rd1247;
	}
	shf.r.wrap.b32 	%r1792, %r1791, %r1790, 28;
	shf.r.wrap.b32 	%r1793, %r1790, %r1791, 28;
	mov.b64 	%rd1262, {%r1793, %r1792};
	shf.l.wrap.b32 	%r1794, %r1790, %r1791, 30;
	shf.l.wrap.b32 	%r1795, %r1791, %r1790, 30;
	mov.b64 	%rd1263, {%r1795, %r1794};
	xor.b64  	%rd1264, %rd1263, %rd1262;
	shf.l.wrap.b32 	%r1796, %r1790, %r1791, 25;
	shf.l.wrap.b32 	%r1797, %r1791, %r1790, 25;
	mov.b64 	%rd1265, {%r1797, %r1796};
	xor.b64  	%rd1266, %rd1264, %rd1265;
	xor.b64  	%rd1267, %rd1247, %rd1197;
	xor.b64  	%rd1268, %rd1247, %rd1222;
	and.b64  	%rd1269, %rd1268, %rd1267;
	xor.b64  	%rd1270, %rd1269, %rd1247;
	add.s64 	%rd1271, %rd1260, %rd1270;
	add.s64 	%rd1272, %rd1271, %rd1266;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1798,%dummy}, %rd1261;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1799}, %rd1261;
	}
	shf.r.wrap.b32 	%r1800, %r1799, %r1798, 14;
	shf.r.wrap.b32 	%r1801, %r1798, %r1799, 14;
	mov.b64 	%rd1273, {%r1801, %r1800};
	shf.r.wrap.b32 	%r1802, %r1799, %r1798, 18;
	shf.r.wrap.b32 	%r1803, %r1798, %r1799, 18;
	mov.b64 	%rd1274, {%r1803, %r1802};
	xor.b64  	%rd1275, %rd1274, %rd1273;
	shf.l.wrap.b32 	%r1804, %r1798, %r1799, 23;
	shf.l.wrap.b32 	%r1805, %r1799, %r1798, 23;
	mov.b64 	%rd1276, {%r1805, %r1804};
	xor.b64  	%rd1277, %rd1275, %rd1276;
	xor.b64  	%rd1278, %rd1236, %rd1211;
	and.b64  	%rd1279, %rd1261, %rd1278;
	xor.b64  	%rd1280, %rd1279, %rd1211;
	add.s64 	%rd1281, %rd1186, %rd1029;
	ld.const.u64 	%rd1282, [k_sha512+288];
	add.s64 	%rd1283, %rd1281, %rd1282;
	add.s64 	%rd1284, %rd1283, %rd1280;
	add.s64 	%rd1285, %rd1284, %rd1277;
	add.s64 	%rd1286, %rd1285, %rd1197;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1806,%dummy}, %rd1272;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1807}, %rd1272;
	}
	shf.r.wrap.b32 	%r1808, %r1807, %r1806, 28;
	shf.r.wrap.b32 	%r1809, %r1806, %r1807, 28;
	mov.b64 	%rd1287, {%r1809, %r1808};
	shf.l.wrap.b32 	%r1810, %r1806, %r1807, 30;
	shf.l.wrap.b32 	%r1811, %r1807, %r1806, 30;
	mov.b64 	%rd1288, {%r1811, %r1810};
	xor.b64  	%rd1289, %rd1288, %rd1287;
	shf.l.wrap.b32 	%r1812, %r1806, %r1807, 25;
	shf.l.wrap.b32 	%r1813, %r1807, %r1806, 25;
	mov.b64 	%rd1290, {%r1813, %r1812};
	xor.b64  	%rd1291, %rd1289, %rd1290;
	xor.b64  	%rd1292, %rd1272, %rd1222;
	xor.b64  	%rd1293, %rd1272, %rd1247;
	and.b64  	%rd1294, %rd1293, %rd1292;
	xor.b64  	%rd1295, %rd1294, %rd1272;
	add.s64 	%rd1296, %rd1285, %rd1295;
	add.s64 	%rd1297, %rd1296, %rd1291;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1814,%dummy}, %rd1286;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1815}, %rd1286;
	}
	shf.r.wrap.b32 	%r1816, %r1815, %r1814, 14;
	shf.r.wrap.b32 	%r1817, %r1814, %r1815, 14;
	mov.b64 	%rd1298, {%r1817, %r1816};
	shf.r.wrap.b32 	%r1818, %r1815, %r1814, 18;
	shf.r.wrap.b32 	%r1819, %r1814, %r1815, 18;
	mov.b64 	%rd1299, {%r1819, %r1818};
	xor.b64  	%rd1300, %rd1299, %rd1298;
	shf.l.wrap.b32 	%r1820, %r1814, %r1815, 23;
	shf.l.wrap.b32 	%r1821, %r1815, %r1814, 23;
	mov.b64 	%rd1301, {%r1821, %r1820};
	xor.b64  	%rd1302, %rd1300, %rd1301;
	xor.b64  	%rd1303, %rd1261, %rd1236;
	and.b64  	%rd1304, %rd1286, %rd1303;
	xor.b64  	%rd1305, %rd1304, %rd1236;
	add.s64 	%rd1306, %rd1211, %rd1042;
	ld.const.u64 	%rd1307, [k_sha512+296];
	add.s64 	%rd1308, %rd1306, %rd1307;
	add.s64 	%rd1309, %rd1308, %rd1305;
	add.s64 	%rd1310, %rd1309, %rd1302;
	add.s64 	%rd1311, %rd1310, %rd1222;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1822,%dummy}, %rd1297;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1823}, %rd1297;
	}
	shf.r.wrap.b32 	%r1824, %r1823, %r1822, 28;
	shf.r.wrap.b32 	%r1825, %r1822, %r1823, 28;
	mov.b64 	%rd1312, {%r1825, %r1824};
	shf.l.wrap.b32 	%r1826, %r1822, %r1823, 30;
	shf.l.wrap.b32 	%r1827, %r1823, %r1822, 30;
	mov.b64 	%rd1313, {%r1827, %r1826};
	xor.b64  	%rd1314, %rd1313, %rd1312;
	shf.l.wrap.b32 	%r1828, %r1822, %r1823, 25;
	shf.l.wrap.b32 	%r1829, %r1823, %r1822, 25;
	mov.b64 	%rd1315, {%r1829, %r1828};
	xor.b64  	%rd1316, %rd1314, %rd1315;
	xor.b64  	%rd1317, %rd1297, %rd1247;
	xor.b64  	%rd1318, %rd1297, %rd1272;
	and.b64  	%rd1319, %rd1318, %rd1317;
	xor.b64  	%rd1320, %rd1319, %rd1297;
	add.s64 	%rd1321, %rd1310, %rd1320;
	add.s64 	%rd1322, %rd1321, %rd1316;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1830,%dummy}, %rd1311;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1831}, %rd1311;
	}
	shf.r.wrap.b32 	%r1832, %r1831, %r1830, 14;
	shf.r.wrap.b32 	%r1833, %r1830, %r1831, 14;
	mov.b64 	%rd1323, {%r1833, %r1832};
	shf.r.wrap.b32 	%r1834, %r1831, %r1830, 18;
	shf.r.wrap.b32 	%r1835, %r1830, %r1831, 18;
	mov.b64 	%rd1324, {%r1835, %r1834};
	xor.b64  	%rd1325, %rd1324, %rd1323;
	shf.l.wrap.b32 	%r1836, %r1830, %r1831, 23;
	shf.l.wrap.b32 	%r1837, %r1831, %r1830, 23;
	mov.b64 	%rd1326, {%r1837, %r1836};
	xor.b64  	%rd1327, %rd1325, %rd1326;
	xor.b64  	%rd1328, %rd1286, %rd1261;
	and.b64  	%rd1329, %rd1311, %rd1328;
	xor.b64  	%rd1330, %rd1329, %rd1261;
	add.s64 	%rd1331, %rd1236, %rd1055;
	ld.const.u64 	%rd1332, [k_sha512+304];
	add.s64 	%rd1333, %rd1331, %rd1332;
	add.s64 	%rd1334, %rd1333, %rd1330;
	add.s64 	%rd1335, %rd1334, %rd1327;
	add.s64 	%rd1336, %rd1335, %rd1247;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1838,%dummy}, %rd1322;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1839}, %rd1322;
	}
	shf.r.wrap.b32 	%r1840, %r1839, %r1838, 28;
	shf.r.wrap.b32 	%r1841, %r1838, %r1839, 28;
	mov.b64 	%rd1337, {%r1841, %r1840};
	shf.l.wrap.b32 	%r1842, %r1838, %r1839, 30;
	shf.l.wrap.b32 	%r1843, %r1839, %r1838, 30;
	mov.b64 	%rd1338, {%r1843, %r1842};
	xor.b64  	%rd1339, %rd1338, %rd1337;
	shf.l.wrap.b32 	%r1844, %r1838, %r1839, 25;
	shf.l.wrap.b32 	%r1845, %r1839, %r1838, 25;
	mov.b64 	%rd1340, {%r1845, %r1844};
	xor.b64  	%rd1341, %rd1339, %rd1340;
	xor.b64  	%rd1342, %rd1322, %rd1272;
	xor.b64  	%rd1343, %rd1322, %rd1297;
	and.b64  	%rd1344, %rd1343, %rd1342;
	xor.b64  	%rd1345, %rd1344, %rd1322;
	add.s64 	%rd1346, %rd1335, %rd1345;
	add.s64 	%rd1347, %rd1346, %rd1341;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1846,%dummy}, %rd1336;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1847}, %rd1336;
	}
	shf.r.wrap.b32 	%r1848, %r1847, %r1846, 14;
	shf.r.wrap.b32 	%r1849, %r1846, %r1847, 14;
	mov.b64 	%rd1348, {%r1849, %r1848};
	shf.r.wrap.b32 	%r1850, %r1847, %r1846, 18;
	shf.r.wrap.b32 	%r1851, %r1846, %r1847, 18;
	mov.b64 	%rd1349, {%r1851, %r1850};
	xor.b64  	%rd1350, %rd1349, %rd1348;
	shf.l.wrap.b32 	%r1852, %r1846, %r1847, 23;
	shf.l.wrap.b32 	%r1853, %r1847, %r1846, 23;
	mov.b64 	%rd1351, {%r1853, %r1852};
	xor.b64  	%rd1352, %rd1350, %rd1351;
	xor.b64  	%rd1353, %rd1311, %rd1286;
	and.b64  	%rd1354, %rd1336, %rd1353;
	xor.b64  	%rd1355, %rd1354, %rd1286;
	add.s64 	%rd1356, %rd1261, %rd1068;
	ld.const.u64 	%rd1357, [k_sha512+312];
	add.s64 	%rd1358, %rd1356, %rd1357;
	add.s64 	%rd1359, %rd1358, %rd1355;
	add.s64 	%rd1360, %rd1359, %rd1352;
	add.s64 	%rd1361, %rd1360, %rd1272;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1854,%dummy}, %rd1347;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1855}, %rd1347;
	}
	shf.r.wrap.b32 	%r1856, %r1855, %r1854, 28;
	shf.r.wrap.b32 	%r1857, %r1854, %r1855, 28;
	mov.b64 	%rd1362, {%r1857, %r1856};
	shf.l.wrap.b32 	%r1858, %r1854, %r1855, 30;
	shf.l.wrap.b32 	%r1859, %r1855, %r1854, 30;
	mov.b64 	%rd1363, {%r1859, %r1858};
	xor.b64  	%rd1364, %rd1363, %rd1362;
	shf.l.wrap.b32 	%r1860, %r1854, %r1855, 25;
	shf.l.wrap.b32 	%r1861, %r1855, %r1854, 25;
	mov.b64 	%rd1365, {%r1861, %r1860};
	xor.b64  	%rd1366, %rd1364, %rd1365;
	xor.b64  	%rd1367, %rd1347, %rd1297;
	xor.b64  	%rd1368, %rd1347, %rd1322;
	and.b64  	%rd1369, %rd1368, %rd1367;
	xor.b64  	%rd1370, %rd1369, %rd1347;
	add.s64 	%rd1371, %rd1360, %rd1370;
	add.s64 	%rd1372, %rd1371, %rd1366;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1862,%dummy}, %rd1361;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1863}, %rd1361;
	}
	shf.r.wrap.b32 	%r1864, %r1863, %r1862, 14;
	shf.r.wrap.b32 	%r1865, %r1862, %r1863, 14;
	mov.b64 	%rd1373, {%r1865, %r1864};
	shf.r.wrap.b32 	%r1866, %r1863, %r1862, 18;
	shf.r.wrap.b32 	%r1867, %r1862, %r1863, 18;
	mov.b64 	%rd1374, {%r1867, %r1866};
	xor.b64  	%rd1375, %rd1374, %rd1373;
	shf.l.wrap.b32 	%r1868, %r1862, %r1863, 23;
	shf.l.wrap.b32 	%r1869, %r1863, %r1862, 23;
	mov.b64 	%rd1376, {%r1869, %r1868};
	xor.b64  	%rd1377, %rd1375, %rd1376;
	xor.b64  	%rd1378, %rd1336, %rd1311;
	and.b64  	%rd1379, %rd1361, %rd1378;
	xor.b64  	%rd1380, %rd1379, %rd1311;
	add.s64 	%rd1381, %rd1286, %rd1081;
	ld.const.u64 	%rd1382, [k_sha512+320];
	add.s64 	%rd1383, %rd1381, %rd1382;
	add.s64 	%rd1384, %rd1383, %rd1380;
	add.s64 	%rd1385, %rd1384, %rd1377;
	add.s64 	%rd1386, %rd1385, %rd1297;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1870,%dummy}, %rd1372;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1871}, %rd1372;
	}
	shf.r.wrap.b32 	%r1872, %r1871, %r1870, 28;
	shf.r.wrap.b32 	%r1873, %r1870, %r1871, 28;
	mov.b64 	%rd1387, {%r1873, %r1872};
	shf.l.wrap.b32 	%r1874, %r1870, %r1871, 30;
	shf.l.wrap.b32 	%r1875, %r1871, %r1870, 30;
	mov.b64 	%rd1388, {%r1875, %r1874};
	xor.b64  	%rd1389, %rd1388, %rd1387;
	shf.l.wrap.b32 	%r1876, %r1870, %r1871, 25;
	shf.l.wrap.b32 	%r1877, %r1871, %r1870, 25;
	mov.b64 	%rd1390, {%r1877, %r1876};
	xor.b64  	%rd1391, %rd1389, %rd1390;
	xor.b64  	%rd1392, %rd1372, %rd1322;
	xor.b64  	%rd1393, %rd1372, %rd1347;
	and.b64  	%rd1394, %rd1393, %rd1392;
	xor.b64  	%rd1395, %rd1394, %rd1372;
	add.s64 	%rd1396, %rd1385, %rd1395;
	add.s64 	%rd1397, %rd1396, %rd1391;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1878,%dummy}, %rd1386;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1879}, %rd1386;
	}
	shf.r.wrap.b32 	%r1880, %r1879, %r1878, 14;
	shf.r.wrap.b32 	%r1881, %r1878, %r1879, 14;
	mov.b64 	%rd1398, {%r1881, %r1880};
	shf.r.wrap.b32 	%r1882, %r1879, %r1878, 18;
	shf.r.wrap.b32 	%r1883, %r1878, %r1879, 18;
	mov.b64 	%rd1399, {%r1883, %r1882};
	xor.b64  	%rd1400, %rd1399, %rd1398;
	shf.l.wrap.b32 	%r1884, %r1878, %r1879, 23;
	shf.l.wrap.b32 	%r1885, %r1879, %r1878, 23;
	mov.b64 	%rd1401, {%r1885, %r1884};
	xor.b64  	%rd1402, %rd1400, %rd1401;
	xor.b64  	%rd1403, %rd1361, %rd1336;
	and.b64  	%rd1404, %rd1386, %rd1403;
	xor.b64  	%rd1405, %rd1404, %rd1336;
	add.s64 	%rd1406, %rd1311, %rd1094;
	ld.const.u64 	%rd1407, [k_sha512+328];
	add.s64 	%rd1408, %rd1406, %rd1407;
	add.s64 	%rd1409, %rd1408, %rd1405;
	add.s64 	%rd1410, %rd1409, %rd1402;
	add.s64 	%rd1411, %rd1410, %rd1322;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1886,%dummy}, %rd1397;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1887}, %rd1397;
	}
	shf.r.wrap.b32 	%r1888, %r1887, %r1886, 28;
	shf.r.wrap.b32 	%r1889, %r1886, %r1887, 28;
	mov.b64 	%rd1412, {%r1889, %r1888};
	shf.l.wrap.b32 	%r1890, %r1886, %r1887, 30;
	shf.l.wrap.b32 	%r1891, %r1887, %r1886, 30;
	mov.b64 	%rd1413, {%r1891, %r1890};
	xor.b64  	%rd1414, %rd1413, %rd1412;
	shf.l.wrap.b32 	%r1892, %r1886, %r1887, 25;
	shf.l.wrap.b32 	%r1893, %r1887, %r1886, 25;
	mov.b64 	%rd1415, {%r1893, %r1892};
	xor.b64  	%rd1416, %rd1414, %rd1415;
	xor.b64  	%rd1417, %rd1397, %rd1347;
	xor.b64  	%rd1418, %rd1397, %rd1372;
	and.b64  	%rd1419, %rd1418, %rd1417;
	xor.b64  	%rd1420, %rd1419, %rd1397;
	add.s64 	%rd1421, %rd1410, %rd1420;
	add.s64 	%rd1422, %rd1421, %rd1416;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1894,%dummy}, %rd1411;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1895}, %rd1411;
	}
	shf.r.wrap.b32 	%r1896, %r1895, %r1894, 14;
	shf.r.wrap.b32 	%r1897, %r1894, %r1895, 14;
	mov.b64 	%rd1423, {%r1897, %r1896};
	shf.r.wrap.b32 	%r1898, %r1895, %r1894, 18;
	shf.r.wrap.b32 	%r1899, %r1894, %r1895, 18;
	mov.b64 	%rd1424, {%r1899, %r1898};
	xor.b64  	%rd1425, %rd1424, %rd1423;
	shf.l.wrap.b32 	%r1900, %r1894, %r1895, 23;
	shf.l.wrap.b32 	%r1901, %r1895, %r1894, 23;
	mov.b64 	%rd1426, {%r1901, %r1900};
	xor.b64  	%rd1427, %rd1425, %rd1426;
	xor.b64  	%rd1428, %rd1386, %rd1361;
	and.b64  	%rd1429, %rd1411, %rd1428;
	xor.b64  	%rd1430, %rd1429, %rd1361;
	add.s64 	%rd1431, %rd1336, %rd1107;
	ld.const.u64 	%rd1432, [k_sha512+336];
	add.s64 	%rd1433, %rd1431, %rd1432;
	add.s64 	%rd1434, %rd1433, %rd1430;
	add.s64 	%rd1435, %rd1434, %rd1427;
	add.s64 	%rd1436, %rd1435, %rd1347;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1902,%dummy}, %rd1422;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1903}, %rd1422;
	}
	shf.r.wrap.b32 	%r1904, %r1903, %r1902, 28;
	shf.r.wrap.b32 	%r1905, %r1902, %r1903, 28;
	mov.b64 	%rd1437, {%r1905, %r1904};
	shf.l.wrap.b32 	%r1906, %r1902, %r1903, 30;
	shf.l.wrap.b32 	%r1907, %r1903, %r1902, 30;
	mov.b64 	%rd1438, {%r1907, %r1906};
	xor.b64  	%rd1439, %rd1438, %rd1437;
	shf.l.wrap.b32 	%r1908, %r1902, %r1903, 25;
	shf.l.wrap.b32 	%r1909, %r1903, %r1902, 25;
	mov.b64 	%rd1440, {%r1909, %r1908};
	xor.b64  	%rd1441, %rd1439, %rd1440;
	xor.b64  	%rd1442, %rd1422, %rd1372;
	xor.b64  	%rd1443, %rd1422, %rd1397;
	and.b64  	%rd1444, %rd1443, %rd1442;
	xor.b64  	%rd1445, %rd1444, %rd1422;
	add.s64 	%rd1446, %rd1435, %rd1445;
	add.s64 	%rd1447, %rd1446, %rd1441;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1910,%dummy}, %rd1436;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1911}, %rd1436;
	}
	shf.r.wrap.b32 	%r1912, %r1911, %r1910, 14;
	shf.r.wrap.b32 	%r1913, %r1910, %r1911, 14;
	mov.b64 	%rd1448, {%r1913, %r1912};
	shf.r.wrap.b32 	%r1914, %r1911, %r1910, 18;
	shf.r.wrap.b32 	%r1915, %r1910, %r1911, 18;
	mov.b64 	%rd1449, {%r1915, %r1914};
	xor.b64  	%rd1450, %rd1449, %rd1448;
	shf.l.wrap.b32 	%r1916, %r1910, %r1911, 23;
	shf.l.wrap.b32 	%r1917, %r1911, %r1910, 23;
	mov.b64 	%rd1451, {%r1917, %r1916};
	xor.b64  	%rd1452, %rd1450, %rd1451;
	xor.b64  	%rd1453, %rd1411, %rd1386;
	and.b64  	%rd1454, %rd1436, %rd1453;
	xor.b64  	%rd1455, %rd1454, %rd1386;
	add.s64 	%rd1456, %rd1361, %rd1120;
	ld.const.u64 	%rd1457, [k_sha512+344];
	add.s64 	%rd1458, %rd1456, %rd1457;
	add.s64 	%rd1459, %rd1458, %rd1455;
	add.s64 	%rd1460, %rd1459, %rd1452;
	add.s64 	%rd1461, %rd1460, %rd1372;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1918,%dummy}, %rd1447;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1919}, %rd1447;
	}
	shf.r.wrap.b32 	%r1920, %r1919, %r1918, 28;
	shf.r.wrap.b32 	%r1921, %r1918, %r1919, 28;
	mov.b64 	%rd1462, {%r1921, %r1920};
	shf.l.wrap.b32 	%r1922, %r1918, %r1919, 30;
	shf.l.wrap.b32 	%r1923, %r1919, %r1918, 30;
	mov.b64 	%rd1463, {%r1923, %r1922};
	xor.b64  	%rd1464, %rd1463, %rd1462;
	shf.l.wrap.b32 	%r1924, %r1918, %r1919, 25;
	shf.l.wrap.b32 	%r1925, %r1919, %r1918, 25;
	mov.b64 	%rd1465, {%r1925, %r1924};
	xor.b64  	%rd1466, %rd1464, %rd1465;
	xor.b64  	%rd1467, %rd1447, %rd1397;
	xor.b64  	%rd1468, %rd1447, %rd1422;
	and.b64  	%rd1469, %rd1468, %rd1467;
	xor.b64  	%rd1470, %rd1469, %rd1447;
	add.s64 	%rd1471, %rd1460, %rd1470;
	add.s64 	%rd1472, %rd1471, %rd1466;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1926,%dummy}, %rd1461;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1927}, %rd1461;
	}
	shf.r.wrap.b32 	%r1928, %r1927, %r1926, 14;
	shf.r.wrap.b32 	%r1929, %r1926, %r1927, 14;
	mov.b64 	%rd1473, {%r1929, %r1928};
	shf.r.wrap.b32 	%r1930, %r1927, %r1926, 18;
	shf.r.wrap.b32 	%r1931, %r1926, %r1927, 18;
	mov.b64 	%rd1474, {%r1931, %r1930};
	xor.b64  	%rd1475, %rd1474, %rd1473;
	shf.l.wrap.b32 	%r1932, %r1926, %r1927, 23;
	shf.l.wrap.b32 	%r1933, %r1927, %r1926, 23;
	mov.b64 	%rd1476, {%r1933, %r1932};
	xor.b64  	%rd1477, %rd1475, %rd1476;
	xor.b64  	%rd1478, %rd1436, %rd1411;
	and.b64  	%rd1479, %rd1461, %rd1478;
	xor.b64  	%rd1480, %rd1479, %rd1411;
	add.s64 	%rd1481, %rd1386, %rd1133;
	ld.const.u64 	%rd1482, [k_sha512+352];
	add.s64 	%rd1483, %rd1481, %rd1482;
	add.s64 	%rd1484, %rd1483, %rd1480;
	add.s64 	%rd1485, %rd1484, %rd1477;
	add.s64 	%rd1486, %rd1485, %rd1397;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1934,%dummy}, %rd1472;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1935}, %rd1472;
	}
	shf.r.wrap.b32 	%r1936, %r1935, %r1934, 28;
	shf.r.wrap.b32 	%r1937, %r1934, %r1935, 28;
	mov.b64 	%rd1487, {%r1937, %r1936};
	shf.l.wrap.b32 	%r1938, %r1934, %r1935, 30;
	shf.l.wrap.b32 	%r1939, %r1935, %r1934, 30;
	mov.b64 	%rd1488, {%r1939, %r1938};
	xor.b64  	%rd1489, %rd1488, %rd1487;
	shf.l.wrap.b32 	%r1940, %r1934, %r1935, 25;
	shf.l.wrap.b32 	%r1941, %r1935, %r1934, 25;
	mov.b64 	%rd1490, {%r1941, %r1940};
	xor.b64  	%rd1491, %rd1489, %rd1490;
	xor.b64  	%rd1492, %rd1472, %rd1422;
	xor.b64  	%rd1493, %rd1472, %rd1447;
	and.b64  	%rd1494, %rd1493, %rd1492;
	xor.b64  	%rd1495, %rd1494, %rd1472;
	add.s64 	%rd1496, %rd1485, %rd1495;
	add.s64 	%rd1497, %rd1496, %rd1491;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1942,%dummy}, %rd1486;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1943}, %rd1486;
	}
	shf.r.wrap.b32 	%r1944, %r1943, %r1942, 14;
	shf.r.wrap.b32 	%r1945, %r1942, %r1943, 14;
	mov.b64 	%rd1498, {%r1945, %r1944};
	shf.r.wrap.b32 	%r1946, %r1943, %r1942, 18;
	shf.r.wrap.b32 	%r1947, %r1942, %r1943, 18;
	mov.b64 	%rd1499, {%r1947, %r1946};
	xor.b64  	%rd1500, %rd1499, %rd1498;
	shf.l.wrap.b32 	%r1948, %r1942, %r1943, 23;
	shf.l.wrap.b32 	%r1949, %r1943, %r1942, 23;
	mov.b64 	%rd1501, {%r1949, %r1948};
	xor.b64  	%rd1502, %rd1500, %rd1501;
	xor.b64  	%rd1503, %rd1461, %rd1436;
	and.b64  	%rd1504, %rd1486, %rd1503;
	xor.b64  	%rd1505, %rd1504, %rd1436;
	add.s64 	%rd1506, %rd1411, %rd1146;
	ld.const.u64 	%rd1507, [k_sha512+360];
	add.s64 	%rd1508, %rd1506, %rd1507;
	add.s64 	%rd1509, %rd1508, %rd1505;
	add.s64 	%rd1510, %rd1509, %rd1502;
	add.s64 	%rd1511, %rd1510, %rd1422;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1950,%dummy}, %rd1497;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1951}, %rd1497;
	}
	shf.r.wrap.b32 	%r1952, %r1951, %r1950, 28;
	shf.r.wrap.b32 	%r1953, %r1950, %r1951, 28;
	mov.b64 	%rd1512, {%r1953, %r1952};
	shf.l.wrap.b32 	%r1954, %r1950, %r1951, 30;
	shf.l.wrap.b32 	%r1955, %r1951, %r1950, 30;
	mov.b64 	%rd1513, {%r1955, %r1954};
	xor.b64  	%rd1514, %rd1513, %rd1512;
	shf.l.wrap.b32 	%r1956, %r1950, %r1951, 25;
	shf.l.wrap.b32 	%r1957, %r1951, %r1950, 25;
	mov.b64 	%rd1515, {%r1957, %r1956};
	xor.b64  	%rd1516, %rd1514, %rd1515;
	xor.b64  	%rd1517, %rd1497, %rd1447;
	xor.b64  	%rd1518, %rd1497, %rd1472;
	and.b64  	%rd1519, %rd1518, %rd1517;
	xor.b64  	%rd1520, %rd1519, %rd1497;
	add.s64 	%rd1521, %rd1510, %rd1520;
	add.s64 	%rd1522, %rd1521, %rd1516;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1958,%dummy}, %rd1511;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1959}, %rd1511;
	}
	shf.r.wrap.b32 	%r1960, %r1959, %r1958, 14;
	shf.r.wrap.b32 	%r1961, %r1958, %r1959, 14;
	mov.b64 	%rd1523, {%r1961, %r1960};
	shf.r.wrap.b32 	%r1962, %r1959, %r1958, 18;
	shf.r.wrap.b32 	%r1963, %r1958, %r1959, 18;
	mov.b64 	%rd1524, {%r1963, %r1962};
	xor.b64  	%rd1525, %rd1524, %rd1523;
	shf.l.wrap.b32 	%r1964, %r1958, %r1959, 23;
	shf.l.wrap.b32 	%r1965, %r1959, %r1958, 23;
	mov.b64 	%rd1526, {%r1965, %r1964};
	xor.b64  	%rd1527, %rd1525, %rd1526;
	xor.b64  	%rd1528, %rd1486, %rd1461;
	and.b64  	%rd1529, %rd1511, %rd1528;
	xor.b64  	%rd1530, %rd1529, %rd1461;
	add.s64 	%rd1531, %rd1436, %rd1159;
	ld.const.u64 	%rd1532, [k_sha512+368];
	add.s64 	%rd1533, %rd1531, %rd1532;
	add.s64 	%rd1534, %rd1533, %rd1530;
	add.s64 	%rd1535, %rd1534, %rd1527;
	add.s64 	%rd1536, %rd1535, %rd1447;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1966,%dummy}, %rd1522;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1967}, %rd1522;
	}
	shf.r.wrap.b32 	%r1968, %r1967, %r1966, 28;
	shf.r.wrap.b32 	%r1969, %r1966, %r1967, 28;
	mov.b64 	%rd1537, {%r1969, %r1968};
	shf.l.wrap.b32 	%r1970, %r1966, %r1967, 30;
	shf.l.wrap.b32 	%r1971, %r1967, %r1966, 30;
	mov.b64 	%rd1538, {%r1971, %r1970};
	xor.b64  	%rd1539, %rd1538, %rd1537;
	shf.l.wrap.b32 	%r1972, %r1966, %r1967, 25;
	shf.l.wrap.b32 	%r1973, %r1967, %r1966, 25;
	mov.b64 	%rd1540, {%r1973, %r1972};
	xor.b64  	%rd1541, %rd1539, %rd1540;
	xor.b64  	%rd1542, %rd1522, %rd1472;
	xor.b64  	%rd1543, %rd1522, %rd1497;
	and.b64  	%rd1544, %rd1543, %rd1542;
	xor.b64  	%rd1545, %rd1544, %rd1522;
	add.s64 	%rd1546, %rd1535, %rd1545;
	add.s64 	%rd1547, %rd1546, %rd1541;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1974,%dummy}, %rd1536;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1975}, %rd1536;
	}
	shf.r.wrap.b32 	%r1976, %r1975, %r1974, 14;
	shf.r.wrap.b32 	%r1977, %r1974, %r1975, 14;
	mov.b64 	%rd1548, {%r1977, %r1976};
	shf.r.wrap.b32 	%r1978, %r1975, %r1974, 18;
	shf.r.wrap.b32 	%r1979, %r1974, %r1975, 18;
	mov.b64 	%rd1549, {%r1979, %r1978};
	xor.b64  	%rd1550, %rd1549, %rd1548;
	shf.l.wrap.b32 	%r1980, %r1974, %r1975, 23;
	shf.l.wrap.b32 	%r1981, %r1975, %r1974, 23;
	mov.b64 	%rd1551, {%r1981, %r1980};
	xor.b64  	%rd1552, %rd1550, %rd1551;
	xor.b64  	%rd1553, %rd1511, %rd1486;
	and.b64  	%rd1554, %rd1536, %rd1553;
	xor.b64  	%rd1555, %rd1554, %rd1486;
	add.s64 	%rd1556, %rd1461, %rd1172;
	ld.const.u64 	%rd1557, [k_sha512+376];
	add.s64 	%rd1558, %rd1556, %rd1557;
	add.s64 	%rd1559, %rd1558, %rd1555;
	add.s64 	%rd1560, %rd1559, %rd1552;
	add.s64 	%rd1561, %rd1560, %rd1472;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1982,%dummy}, %rd1547;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1983}, %rd1547;
	}
	shf.r.wrap.b32 	%r1984, %r1983, %r1982, 28;
	shf.r.wrap.b32 	%r1985, %r1982, %r1983, 28;
	mov.b64 	%rd1562, {%r1985, %r1984};
	shf.l.wrap.b32 	%r1986, %r1982, %r1983, 30;
	shf.l.wrap.b32 	%r1987, %r1983, %r1982, 30;
	mov.b64 	%rd1563, {%r1987, %r1986};
	xor.b64  	%rd1564, %rd1563, %rd1562;
	shf.l.wrap.b32 	%r1988, %r1982, %r1983, 25;
	shf.l.wrap.b32 	%r1989, %r1983, %r1982, 25;
	mov.b64 	%rd1565, {%r1989, %r1988};
	xor.b64  	%rd1566, %rd1564, %rd1565;
	xor.b64  	%rd1567, %rd1547, %rd1497;
	xor.b64  	%rd1568, %rd1547, %rd1522;
	and.b64  	%rd1569, %rd1568, %rd1567;
	xor.b64  	%rd1570, %rd1569, %rd1547;
	add.s64 	%rd1571, %rd1560, %rd1570;
	add.s64 	%rd1572, %rd1571, %rd1566;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1990,%dummy}, %rd1159;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1991}, %rd1159;
	}
	shf.r.wrap.b32 	%r1992, %r1991, %r1990, 19;
	shf.r.wrap.b32 	%r1993, %r1990, %r1991, 19;
	mov.b64 	%rd1573, {%r1993, %r1992};
	shf.l.wrap.b32 	%r1994, %r1990, %r1991, 3;
	shf.l.wrap.b32 	%r1995, %r1991, %r1990, 3;
	mov.b64 	%rd1574, {%r1995, %r1994};
	shr.u64 	%rd1575, %rd1159, 6;
	xor.b64  	%rd1576, %rd1573, %rd1575;
	xor.b64  	%rd1577, %rd1576, %rd1574;
	shf.r.wrap.b32 	%r1996, %r1605, %r1604, 1;
	shf.r.wrap.b32 	%r1997, %r1604, %r1605, 1;
	mov.b64 	%rd1578, {%r1997, %r1996};
	shf.r.wrap.b32 	%r1998, %r1605, %r1604, 8;
	shf.r.wrap.b32 	%r1999, %r1604, %r1605, 8;
	mov.b64 	%rd1579, {%r1999, %r1998};
	shr.u64 	%rd1580, %rd990, 7;
	xor.b64  	%rd1581, %rd1578, %rd1580;
	xor.b64  	%rd1582, %rd1581, %rd1579;
	add.s64 	%rd1583, %rd977, %rd1094;
	add.s64 	%rd1584, %rd1583, %rd1577;
	add.s64 	%rd1585, %rd1584, %rd1582;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2000,%dummy}, %rd1172;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2001}, %rd1172;
	}
	shf.r.wrap.b32 	%r2002, %r2001, %r2000, 19;
	shf.r.wrap.b32 	%r2003, %r2000, %r2001, 19;
	mov.b64 	%rd1586, {%r2003, %r2002};
	shf.l.wrap.b32 	%r2004, %r2000, %r2001, 3;
	shf.l.wrap.b32 	%r2005, %r2001, %r2000, 3;
	mov.b64 	%rd1587, {%r2005, %r2004};
	shr.u64 	%rd1588, %rd1172, 6;
	xor.b64  	%rd1589, %rd1586, %rd1588;
	xor.b64  	%rd1590, %rd1589, %rd1587;
	shf.r.wrap.b32 	%r2006, %r1615, %r1614, 1;
	shf.r.wrap.b32 	%r2007, %r1614, %r1615, 1;
	mov.b64 	%rd1591, {%r2007, %r2006};
	shf.r.wrap.b32 	%r2008, %r1615, %r1614, 8;
	shf.r.wrap.b32 	%r2009, %r1614, %r1615, 8;
	mov.b64 	%rd1592, {%r2009, %r2008};
	shr.u64 	%rd1593, %rd1003, 7;
	xor.b64  	%rd1594, %rd1591, %rd1593;
	xor.b64  	%rd1595, %rd1594, %rd1592;
	add.s64 	%rd1596, %rd990, %rd1107;
	add.s64 	%rd1597, %rd1596, %rd1590;
	add.s64 	%rd1598, %rd1597, %rd1595;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2010,%dummy}, %rd1585;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2011}, %rd1585;
	}
	shf.r.wrap.b32 	%r2012, %r2011, %r2010, 19;
	shf.r.wrap.b32 	%r2013, %r2010, %r2011, 19;
	mov.b64 	%rd1599, {%r2013, %r2012};
	shf.l.wrap.b32 	%r2014, %r2010, %r2011, 3;
	shf.l.wrap.b32 	%r2015, %r2011, %r2010, 3;
	mov.b64 	%rd1600, {%r2015, %r2014};
	shr.u64 	%rd1601, %rd1585, 6;
	xor.b64  	%rd1602, %rd1599, %rd1601;
	xor.b64  	%rd1603, %rd1602, %rd1600;
	shf.r.wrap.b32 	%r2016, %r1625, %r1624, 1;
	shf.r.wrap.b32 	%r2017, %r1624, %r1625, 1;
	mov.b64 	%rd1604, {%r2017, %r2016};
	shf.r.wrap.b32 	%r2018, %r1625, %r1624, 8;
	shf.r.wrap.b32 	%r2019, %r1624, %r1625, 8;
	mov.b64 	%rd1605, {%r2019, %r2018};
	shr.u64 	%rd1606, %rd1016, 7;
	xor.b64  	%rd1607, %rd1604, %rd1606;
	xor.b64  	%rd1608, %rd1607, %rd1605;
	add.s64 	%rd1609, %rd1003, %rd1120;
	add.s64 	%rd1610, %rd1609, %rd1603;
	add.s64 	%rd1611, %rd1610, %rd1608;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2020,%dummy}, %rd1598;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2021}, %rd1598;
	}
	shf.r.wrap.b32 	%r2022, %r2021, %r2020, 19;
	shf.r.wrap.b32 	%r2023, %r2020, %r2021, 19;
	mov.b64 	%rd1612, {%r2023, %r2022};
	shf.l.wrap.b32 	%r2024, %r2020, %r2021, 3;
	shf.l.wrap.b32 	%r2025, %r2021, %r2020, 3;
	mov.b64 	%rd1613, {%r2025, %r2024};
	shr.u64 	%rd1614, %rd1598, 6;
	xor.b64  	%rd1615, %rd1612, %rd1614;
	xor.b64  	%rd1616, %rd1615, %rd1613;
	shf.r.wrap.b32 	%r2026, %r1635, %r1634, 1;
	shf.r.wrap.b32 	%r2027, %r1634, %r1635, 1;
	mov.b64 	%rd1617, {%r2027, %r2026};
	shf.r.wrap.b32 	%r2028, %r1635, %r1634, 8;
	shf.r.wrap.b32 	%r2029, %r1634, %r1635, 8;
	mov.b64 	%rd1618, {%r2029, %r2028};
	shr.u64 	%rd1619, %rd1029, 7;
	xor.b64  	%rd1620, %rd1617, %rd1619;
	xor.b64  	%rd1621, %rd1620, %rd1618;
	add.s64 	%rd1622, %rd1016, %rd1133;
	add.s64 	%rd1623, %rd1622, %rd1616;
	add.s64 	%rd1624, %rd1623, %rd1621;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2030,%dummy}, %rd1611;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2031}, %rd1611;
	}
	shf.r.wrap.b32 	%r2032, %r2031, %r2030, 19;
	shf.r.wrap.b32 	%r2033, %r2030, %r2031, 19;
	mov.b64 	%rd1625, {%r2033, %r2032};
	shf.l.wrap.b32 	%r2034, %r2030, %r2031, 3;
	shf.l.wrap.b32 	%r2035, %r2031, %r2030, 3;
	mov.b64 	%rd1626, {%r2035, %r2034};
	shr.u64 	%rd1627, %rd1611, 6;
	xor.b64  	%rd1628, %rd1625, %rd1627;
	xor.b64  	%rd1629, %rd1628, %rd1626;
	shf.r.wrap.b32 	%r2036, %r1645, %r1644, 1;
	shf.r.wrap.b32 	%r2037, %r1644, %r1645, 1;
	mov.b64 	%rd1630, {%r2037, %r2036};
	shf.r.wrap.b32 	%r2038, %r1645, %r1644, 8;
	shf.r.wrap.b32 	%r2039, %r1644, %r1645, 8;
	mov.b64 	%rd1631, {%r2039, %r2038};
	shr.u64 	%rd1632, %rd1042, 7;
	xor.b64  	%rd1633, %rd1630, %rd1632;
	xor.b64  	%rd1634, %rd1633, %rd1631;
	add.s64 	%rd1635, %rd1029, %rd1146;
	add.s64 	%rd1636, %rd1635, %rd1629;
	add.s64 	%rd1637, %rd1636, %rd1634;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2040,%dummy}, %rd1624;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2041}, %rd1624;
	}
	shf.r.wrap.b32 	%r2042, %r2041, %r2040, 19;
	shf.r.wrap.b32 	%r2043, %r2040, %r2041, 19;
	mov.b64 	%rd1638, {%r2043, %r2042};
	shf.l.wrap.b32 	%r2044, %r2040, %r2041, 3;
	shf.l.wrap.b32 	%r2045, %r2041, %r2040, 3;
	mov.b64 	%rd1639, {%r2045, %r2044};
	shr.u64 	%rd1640, %rd1624, 6;
	xor.b64  	%rd1641, %rd1638, %rd1640;
	xor.b64  	%rd1642, %rd1641, %rd1639;
	shf.r.wrap.b32 	%r2046, %r1655, %r1654, 1;
	shf.r.wrap.b32 	%r2047, %r1654, %r1655, 1;
	mov.b64 	%rd1643, {%r2047, %r2046};
	shf.r.wrap.b32 	%r2048, %r1655, %r1654, 8;
	shf.r.wrap.b32 	%r2049, %r1654, %r1655, 8;
	mov.b64 	%rd1644, {%r2049, %r2048};
	shr.u64 	%rd1645, %rd1055, 7;
	xor.b64  	%rd1646, %rd1643, %rd1645;
	xor.b64  	%rd1647, %rd1646, %rd1644;
	add.s64 	%rd1648, %rd1042, %rd1159;
	add.s64 	%rd1649, %rd1648, %rd1642;
	add.s64 	%rd1650, %rd1649, %rd1647;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2050,%dummy}, %rd1637;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2051}, %rd1637;
	}
	shf.r.wrap.b32 	%r2052, %r2051, %r2050, 19;
	shf.r.wrap.b32 	%r2053, %r2050, %r2051, 19;
	mov.b64 	%rd1651, {%r2053, %r2052};
	shf.l.wrap.b32 	%r2054, %r2050, %r2051, 3;
	shf.l.wrap.b32 	%r2055, %r2051, %r2050, 3;
	mov.b64 	%rd1652, {%r2055, %r2054};
	shr.u64 	%rd1653, %rd1637, 6;
	xor.b64  	%rd1654, %rd1651, %rd1653;
	xor.b64  	%rd1655, %rd1654, %rd1652;
	shf.r.wrap.b32 	%r2056, %r1665, %r1664, 1;
	shf.r.wrap.b32 	%r2057, %r1664, %r1665, 1;
	mov.b64 	%rd1656, {%r2057, %r2056};
	shf.r.wrap.b32 	%r2058, %r1665, %r1664, 8;
	shf.r.wrap.b32 	%r2059, %r1664, %r1665, 8;
	mov.b64 	%rd1657, {%r2059, %r2058};
	shr.u64 	%rd1658, %rd1068, 7;
	xor.b64  	%rd1659, %rd1656, %rd1658;
	xor.b64  	%rd1660, %rd1659, %rd1657;
	add.s64 	%rd1661, %rd1172, %rd1055;
	add.s64 	%rd1662, %rd1661, %rd1655;
	add.s64 	%rd1663, %rd1662, %rd1660;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2060,%dummy}, %rd1650;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2061}, %rd1650;
	}
	shf.r.wrap.b32 	%r2062, %r2061, %r2060, 19;
	shf.r.wrap.b32 	%r2063, %r2060, %r2061, 19;
	mov.b64 	%rd1664, {%r2063, %r2062};
	shf.l.wrap.b32 	%r2064, %r2060, %r2061, 3;
	shf.l.wrap.b32 	%r2065, %r2061, %r2060, 3;
	mov.b64 	%rd1665, {%r2065, %r2064};
	shr.u64 	%rd1666, %rd1650, 6;
	xor.b64  	%rd1667, %rd1664, %rd1666;
	xor.b64  	%rd1668, %rd1667, %rd1665;
	shf.r.wrap.b32 	%r2066, %r1675, %r1674, 1;
	shf.r.wrap.b32 	%r2067, %r1674, %r1675, 1;
	mov.b64 	%rd1669, {%r2067, %r2066};
	shf.r.wrap.b32 	%r2068, %r1675, %r1674, 8;
	shf.r.wrap.b32 	%r2069, %r1674, %r1675, 8;
	mov.b64 	%rd1670, {%r2069, %r2068};
	shr.u64 	%rd1671, %rd1081, 7;
	xor.b64  	%rd1672, %rd1669, %rd1671;
	xor.b64  	%rd1673, %rd1672, %rd1670;
	add.s64 	%rd1674, %rd1585, %rd1068;
	add.s64 	%rd1675, %rd1674, %rd1668;
	add.s64 	%rd1676, %rd1675, %rd1673;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2070,%dummy}, %rd1663;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2071}, %rd1663;
	}
	shf.r.wrap.b32 	%r2072, %r2071, %r2070, 19;
	shf.r.wrap.b32 	%r2073, %r2070, %r2071, 19;
	mov.b64 	%rd1677, {%r2073, %r2072};
	shf.l.wrap.b32 	%r2074, %r2070, %r2071, 3;
	shf.l.wrap.b32 	%r2075, %r2071, %r2070, 3;
	mov.b64 	%rd1678, {%r2075, %r2074};
	shr.u64 	%rd1679, %rd1663, 6;
	xor.b64  	%rd1680, %rd1677, %rd1679;
	xor.b64  	%rd1681, %rd1680, %rd1678;
	shf.r.wrap.b32 	%r2076, %r1685, %r1684, 1;
	shf.r.wrap.b32 	%r2077, %r1684, %r1685, 1;
	mov.b64 	%rd1682, {%r2077, %r2076};
	shf.r.wrap.b32 	%r2078, %r1685, %r1684, 8;
	shf.r.wrap.b32 	%r2079, %r1684, %r1685, 8;
	mov.b64 	%rd1683, {%r2079, %r2078};
	shr.u64 	%rd1684, %rd1094, 7;
	xor.b64  	%rd1685, %rd1682, %rd1684;
	xor.b64  	%rd1686, %rd1685, %rd1683;
	add.s64 	%rd1687, %rd1598, %rd1081;
	add.s64 	%rd1688, %rd1687, %rd1681;
	add.s64 	%rd1689, %rd1688, %rd1686;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2080,%dummy}, %rd1676;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2081}, %rd1676;
	}
	shf.r.wrap.b32 	%r2082, %r2081, %r2080, 19;
	shf.r.wrap.b32 	%r2083, %r2080, %r2081, 19;
	mov.b64 	%rd1690, {%r2083, %r2082};
	shf.l.wrap.b32 	%r2084, %r2080, %r2081, 3;
	shf.l.wrap.b32 	%r2085, %r2081, %r2080, 3;
	mov.b64 	%rd1691, {%r2085, %r2084};
	shr.u64 	%rd1692, %rd1676, 6;
	xor.b64  	%rd1693, %rd1690, %rd1692;
	xor.b64  	%rd1694, %rd1693, %rd1691;
	shf.r.wrap.b32 	%r2086, %r1695, %r1694, 1;
	shf.r.wrap.b32 	%r2087, %r1694, %r1695, 1;
	mov.b64 	%rd1695, {%r2087, %r2086};
	shf.r.wrap.b32 	%r2088, %r1695, %r1694, 8;
	shf.r.wrap.b32 	%r2089, %r1694, %r1695, 8;
	mov.b64 	%rd1696, {%r2089, %r2088};
	shr.u64 	%rd1697, %rd1107, 7;
	xor.b64  	%rd1698, %rd1695, %rd1697;
	xor.b64  	%rd1699, %rd1698, %rd1696;
	add.s64 	%rd1700, %rd1611, %rd1094;
	add.s64 	%rd1701, %rd1700, %rd1694;
	add.s64 	%rd1702, %rd1701, %rd1699;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2090,%dummy}, %rd1689;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2091}, %rd1689;
	}
	shf.r.wrap.b32 	%r2092, %r2091, %r2090, 19;
	shf.r.wrap.b32 	%r2093, %r2090, %r2091, 19;
	mov.b64 	%rd1703, {%r2093, %r2092};
	shf.l.wrap.b32 	%r2094, %r2090, %r2091, 3;
	shf.l.wrap.b32 	%r2095, %r2091, %r2090, 3;
	mov.b64 	%rd1704, {%r2095, %r2094};
	shr.u64 	%rd1705, %rd1689, 6;
	xor.b64  	%rd1706, %rd1703, %rd1705;
	xor.b64  	%rd1707, %rd1706, %rd1704;
	shf.r.wrap.b32 	%r2096, %r1705, %r1704, 1;
	shf.r.wrap.b32 	%r2097, %r1704, %r1705, 1;
	mov.b64 	%rd1708, {%r2097, %r2096};
	shf.r.wrap.b32 	%r2098, %r1705, %r1704, 8;
	shf.r.wrap.b32 	%r2099, %r1704, %r1705, 8;
	mov.b64 	%rd1709, {%r2099, %r2098};
	shr.u64 	%rd1710, %rd1120, 7;
	xor.b64  	%rd1711, %rd1708, %rd1710;
	xor.b64  	%rd1712, %rd1711, %rd1709;
	add.s64 	%rd1713, %rd1624, %rd1107;
	add.s64 	%rd1714, %rd1713, %rd1707;
	add.s64 	%rd1715, %rd1714, %rd1712;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2100,%dummy}, %rd1702;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2101}, %rd1702;
	}
	shf.r.wrap.b32 	%r2102, %r2101, %r2100, 19;
	shf.r.wrap.b32 	%r2103, %r2100, %r2101, 19;
	mov.b64 	%rd1716, {%r2103, %r2102};
	shf.l.wrap.b32 	%r2104, %r2100, %r2101, 3;
	shf.l.wrap.b32 	%r2105, %r2101, %r2100, 3;
	mov.b64 	%rd1717, {%r2105, %r2104};
	shr.u64 	%rd1718, %rd1702, 6;
	xor.b64  	%rd1719, %rd1716, %rd1718;
	xor.b64  	%rd1720, %rd1719, %rd1717;
	shf.r.wrap.b32 	%r2106, %r1715, %r1714, 1;
	shf.r.wrap.b32 	%r2107, %r1714, %r1715, 1;
	mov.b64 	%rd1721, {%r2107, %r2106};
	shf.r.wrap.b32 	%r2108, %r1715, %r1714, 8;
	shf.r.wrap.b32 	%r2109, %r1714, %r1715, 8;
	mov.b64 	%rd1722, {%r2109, %r2108};
	shr.u64 	%rd1723, %rd1133, 7;
	xor.b64  	%rd1724, %rd1721, %rd1723;
	xor.b64  	%rd1725, %rd1724, %rd1722;
	add.s64 	%rd1726, %rd1637, %rd1120;
	add.s64 	%rd1727, %rd1726, %rd1720;
	add.s64 	%rd1728, %rd1727, %rd1725;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2110,%dummy}, %rd1715;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2111}, %rd1715;
	}
	shf.r.wrap.b32 	%r2112, %r2111, %r2110, 19;
	shf.r.wrap.b32 	%r2113, %r2110, %r2111, 19;
	mov.b64 	%rd1729, {%r2113, %r2112};
	shf.l.wrap.b32 	%r2114, %r2110, %r2111, 3;
	shf.l.wrap.b32 	%r2115, %r2111, %r2110, 3;
	mov.b64 	%rd1730, {%r2115, %r2114};
	shr.u64 	%rd1731, %rd1715, 6;
	xor.b64  	%rd1732, %rd1729, %rd1731;
	xor.b64  	%rd1733, %rd1732, %rd1730;
	shf.r.wrap.b32 	%r2116, %r1725, %r1724, 1;
	shf.r.wrap.b32 	%r2117, %r1724, %r1725, 1;
	mov.b64 	%rd1734, {%r2117, %r2116};
	shf.r.wrap.b32 	%r2118, %r1725, %r1724, 8;
	shf.r.wrap.b32 	%r2119, %r1724, %r1725, 8;
	mov.b64 	%rd1735, {%r2119, %r2118};
	shr.u64 	%rd1736, %rd1146, 7;
	xor.b64  	%rd1737, %rd1734, %rd1736;
	xor.b64  	%rd1738, %rd1737, %rd1735;
	add.s64 	%rd1739, %rd1650, %rd1133;
	add.s64 	%rd1740, %rd1739, %rd1733;
	add.s64 	%rd1741, %rd1740, %rd1738;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2120,%dummy}, %rd1728;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2121}, %rd1728;
	}
	shf.r.wrap.b32 	%r2122, %r2121, %r2120, 19;
	shf.r.wrap.b32 	%r2123, %r2120, %r2121, 19;
	mov.b64 	%rd1742, {%r2123, %r2122};
	shf.l.wrap.b32 	%r2124, %r2120, %r2121, 3;
	shf.l.wrap.b32 	%r2125, %r2121, %r2120, 3;
	mov.b64 	%rd1743, {%r2125, %r2124};
	shr.u64 	%rd1744, %rd1728, 6;
	xor.b64  	%rd1745, %rd1742, %rd1744;
	xor.b64  	%rd1746, %rd1745, %rd1743;
	shf.r.wrap.b32 	%r2126, %r1991, %r1990, 1;
	shf.r.wrap.b32 	%r2127, %r1990, %r1991, 1;
	mov.b64 	%rd1747, {%r2127, %r2126};
	shf.r.wrap.b32 	%r2128, %r1991, %r1990, 8;
	shf.r.wrap.b32 	%r2129, %r1990, %r1991, 8;
	mov.b64 	%rd1748, {%r2129, %r2128};
	shr.u64 	%rd1749, %rd1159, 7;
	xor.b64  	%rd1750, %rd1747, %rd1749;
	xor.b64  	%rd1751, %rd1750, %rd1748;
	add.s64 	%rd1752, %rd1663, %rd1146;
	add.s64 	%rd1753, %rd1752, %rd1746;
	add.s64 	%rd1754, %rd1753, %rd1751;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2130,%dummy}, %rd1741;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2131}, %rd1741;
	}
	shf.r.wrap.b32 	%r2132, %r2131, %r2130, 19;
	shf.r.wrap.b32 	%r2133, %r2130, %r2131, 19;
	mov.b64 	%rd1755, {%r2133, %r2132};
	shf.l.wrap.b32 	%r2134, %r2130, %r2131, 3;
	shf.l.wrap.b32 	%r2135, %r2131, %r2130, 3;
	mov.b64 	%rd1756, {%r2135, %r2134};
	shr.u64 	%rd1757, %rd1741, 6;
	xor.b64  	%rd1758, %rd1755, %rd1757;
	xor.b64  	%rd1759, %rd1758, %rd1756;
	shf.r.wrap.b32 	%r2136, %r2001, %r2000, 1;
	shf.r.wrap.b32 	%r2137, %r2000, %r2001, 1;
	mov.b64 	%rd1760, {%r2137, %r2136};
	shf.r.wrap.b32 	%r2138, %r2001, %r2000, 8;
	shf.r.wrap.b32 	%r2139, %r2000, %r2001, 8;
	mov.b64 	%rd1761, {%r2139, %r2138};
	shr.u64 	%rd1762, %rd1172, 7;
	xor.b64  	%rd1763, %rd1760, %rd1762;
	xor.b64  	%rd1764, %rd1763, %rd1761;
	add.s64 	%rd1765, %rd1676, %rd1159;
	add.s64 	%rd1766, %rd1765, %rd1759;
	add.s64 	%rd1767, %rd1766, %rd1764;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2140,%dummy}, %rd1754;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2141}, %rd1754;
	}
	shf.r.wrap.b32 	%r2142, %r2141, %r2140, 19;
	shf.r.wrap.b32 	%r2143, %r2140, %r2141, 19;
	mov.b64 	%rd1768, {%r2143, %r2142};
	shf.l.wrap.b32 	%r2144, %r2140, %r2141, 3;
	shf.l.wrap.b32 	%r2145, %r2141, %r2140, 3;
	mov.b64 	%rd1769, {%r2145, %r2144};
	shr.u64 	%rd1770, %rd1754, 6;
	xor.b64  	%rd1771, %rd1768, %rd1770;
	xor.b64  	%rd1772, %rd1771, %rd1769;
	shf.r.wrap.b32 	%r2146, %r2011, %r2010, 1;
	shf.r.wrap.b32 	%r2147, %r2010, %r2011, 1;
	mov.b64 	%rd1773, {%r2147, %r2146};
	shf.r.wrap.b32 	%r2148, %r2011, %r2010, 8;
	shf.r.wrap.b32 	%r2149, %r2010, %r2011, 8;
	mov.b64 	%rd1774, {%r2149, %r2148};
	shr.u64 	%rd1775, %rd1585, 7;
	xor.b64  	%rd1776, %rd1773, %rd1775;
	xor.b64  	%rd1777, %rd1776, %rd1774;
	add.s64 	%rd1778, %rd1689, %rd1172;
	add.s64 	%rd1779, %rd1778, %rd1772;
	add.s64 	%rd1780, %rd1779, %rd1777;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2150,%dummy}, %rd1561;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2151}, %rd1561;
	}
	shf.r.wrap.b32 	%r2152, %r2151, %r2150, 14;
	shf.r.wrap.b32 	%r2153, %r2150, %r2151, 14;
	mov.b64 	%rd1781, {%r2153, %r2152};
	shf.r.wrap.b32 	%r2154, %r2151, %r2150, 18;
	shf.r.wrap.b32 	%r2155, %r2150, %r2151, 18;
	mov.b64 	%rd1782, {%r2155, %r2154};
	xor.b64  	%rd1783, %rd1782, %rd1781;
	shf.l.wrap.b32 	%r2156, %r2150, %r2151, 23;
	shf.l.wrap.b32 	%r2157, %r2151, %r2150, 23;
	mov.b64 	%rd1784, {%r2157, %r2156};
	xor.b64  	%rd1785, %rd1783, %rd1784;
	xor.b64  	%rd1786, %rd1536, %rd1511;
	and.b64  	%rd1787, %rd1786, %rd1561;
	xor.b64  	%rd1788, %rd1787, %rd1511;
	add.s64 	%rd1789, %rd1788, %rd1486;
	add.s64 	%rd1790, %rd1789, %rd1585;
	ld.const.u64 	%rd1791, [k_sha512+384];
	add.s64 	%rd1792, %rd1790, %rd1791;
	add.s64 	%rd1793, %rd1792, %rd1785;
	add.s64 	%rd1794, %rd1793, %rd1497;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2158,%dummy}, %rd1572;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2159}, %rd1572;
	}
	shf.r.wrap.b32 	%r2160, %r2159, %r2158, 28;
	shf.r.wrap.b32 	%r2161, %r2158, %r2159, 28;
	mov.b64 	%rd1795, {%r2161, %r2160};
	shf.l.wrap.b32 	%r2162, %r2158, %r2159, 30;
	shf.l.wrap.b32 	%r2163, %r2159, %r2158, 30;
	mov.b64 	%rd1796, {%r2163, %r2162};
	xor.b64  	%rd1797, %rd1796, %rd1795;
	shf.l.wrap.b32 	%r2164, %r2158, %r2159, 25;
	shf.l.wrap.b32 	%r2165, %r2159, %r2158, 25;
	mov.b64 	%rd1798, {%r2165, %r2164};
	xor.b64  	%rd1799, %rd1797, %rd1798;
	xor.b64  	%rd1800, %rd1572, %rd1522;
	xor.b64  	%rd1801, %rd1572, %rd1547;
	and.b64  	%rd1802, %rd1801, %rd1800;
	xor.b64  	%rd1803, %rd1802, %rd1572;
	add.s64 	%rd1804, %rd1793, %rd1803;
	add.s64 	%rd1805, %rd1804, %rd1799;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2166,%dummy}, %rd1794;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2167}, %rd1794;
	}
	shf.r.wrap.b32 	%r2168, %r2167, %r2166, 14;
	shf.r.wrap.b32 	%r2169, %r2166, %r2167, 14;
	mov.b64 	%rd1806, {%r2169, %r2168};
	shf.r.wrap.b32 	%r2170, %r2167, %r2166, 18;
	shf.r.wrap.b32 	%r2171, %r2166, %r2167, 18;
	mov.b64 	%rd1807, {%r2171, %r2170};
	xor.b64  	%rd1808, %rd1807, %rd1806;
	shf.l.wrap.b32 	%r2172, %r2166, %r2167, 23;
	shf.l.wrap.b32 	%r2173, %r2167, %r2166, 23;
	mov.b64 	%rd1809, {%r2173, %r2172};
	xor.b64  	%rd1810, %rd1808, %rd1809;
	xor.b64  	%rd1811, %rd1561, %rd1536;
	and.b64  	%rd1812, %rd1794, %rd1811;
	xor.b64  	%rd1813, %rd1812, %rd1536;
	add.s64 	%rd1814, %rd1598, %rd1511;
	ld.const.u64 	%rd1815, [k_sha512+392];
	add.s64 	%rd1816, %rd1814, %rd1815;
	add.s64 	%rd1817, %rd1816, %rd1813;
	add.s64 	%rd1818, %rd1817, %rd1810;
	add.s64 	%rd1819, %rd1818, %rd1522;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2174,%dummy}, %rd1805;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2175}, %rd1805;
	}
	shf.r.wrap.b32 	%r2176, %r2175, %r2174, 28;
	shf.r.wrap.b32 	%r2177, %r2174, %r2175, 28;
	mov.b64 	%rd1820, {%r2177, %r2176};
	shf.l.wrap.b32 	%r2178, %r2174, %r2175, 30;
	shf.l.wrap.b32 	%r2179, %r2175, %r2174, 30;
	mov.b64 	%rd1821, {%r2179, %r2178};
	xor.b64  	%rd1822, %rd1821, %rd1820;
	shf.l.wrap.b32 	%r2180, %r2174, %r2175, 25;
	shf.l.wrap.b32 	%r2181, %r2175, %r2174, 25;
	mov.b64 	%rd1823, {%r2181, %r2180};
	xor.b64  	%rd1824, %rd1822, %rd1823;
	xor.b64  	%rd1825, %rd1805, %rd1547;
	xor.b64  	%rd1826, %rd1805, %rd1572;
	and.b64  	%rd1827, %rd1826, %rd1825;
	xor.b64  	%rd1828, %rd1827, %rd1805;
	add.s64 	%rd1829, %rd1818, %rd1828;
	add.s64 	%rd1830, %rd1829, %rd1824;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2182,%dummy}, %rd1819;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2183}, %rd1819;
	}
	shf.r.wrap.b32 	%r2184, %r2183, %r2182, 14;
	shf.r.wrap.b32 	%r2185, %r2182, %r2183, 14;
	mov.b64 	%rd1831, {%r2185, %r2184};
	shf.r.wrap.b32 	%r2186, %r2183, %r2182, 18;
	shf.r.wrap.b32 	%r2187, %r2182, %r2183, 18;
	mov.b64 	%rd1832, {%r2187, %r2186};
	xor.b64  	%rd1833, %rd1832, %rd1831;
	shf.l.wrap.b32 	%r2188, %r2182, %r2183, 23;
	shf.l.wrap.b32 	%r2189, %r2183, %r2182, 23;
	mov.b64 	%rd1834, {%r2189, %r2188};
	xor.b64  	%rd1835, %rd1833, %rd1834;
	xor.b64  	%rd1836, %rd1794, %rd1561;
	and.b64  	%rd1837, %rd1819, %rd1836;
	xor.b64  	%rd1838, %rd1837, %rd1561;
	add.s64 	%rd1839, %rd1611, %rd1536;
	ld.const.u64 	%rd1840, [k_sha512+400];
	add.s64 	%rd1841, %rd1839, %rd1840;
	add.s64 	%rd1842, %rd1841, %rd1838;
	add.s64 	%rd1843, %rd1842, %rd1835;
	add.s64 	%rd1844, %rd1843, %rd1547;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2190,%dummy}, %rd1830;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2191}, %rd1830;
	}
	shf.r.wrap.b32 	%r2192, %r2191, %r2190, 28;
	shf.r.wrap.b32 	%r2193, %r2190, %r2191, 28;
	mov.b64 	%rd1845, {%r2193, %r2192};
	shf.l.wrap.b32 	%r2194, %r2190, %r2191, 30;
	shf.l.wrap.b32 	%r2195, %r2191, %r2190, 30;
	mov.b64 	%rd1846, {%r2195, %r2194};
	xor.b64  	%rd1847, %rd1846, %rd1845;
	shf.l.wrap.b32 	%r2196, %r2190, %r2191, 25;
	shf.l.wrap.b32 	%r2197, %r2191, %r2190, 25;
	mov.b64 	%rd1848, {%r2197, %r2196};
	xor.b64  	%rd1849, %rd1847, %rd1848;
	xor.b64  	%rd1850, %rd1830, %rd1572;
	xor.b64  	%rd1851, %rd1830, %rd1805;
	and.b64  	%rd1852, %rd1851, %rd1850;
	xor.b64  	%rd1853, %rd1852, %rd1830;
	add.s64 	%rd1854, %rd1843, %rd1853;
	add.s64 	%rd1855, %rd1854, %rd1849;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2198,%dummy}, %rd1844;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2199}, %rd1844;
	}
	shf.r.wrap.b32 	%r2200, %r2199, %r2198, 14;
	shf.r.wrap.b32 	%r2201, %r2198, %r2199, 14;
	mov.b64 	%rd1856, {%r2201, %r2200};
	shf.r.wrap.b32 	%r2202, %r2199, %r2198, 18;
	shf.r.wrap.b32 	%r2203, %r2198, %r2199, 18;
	mov.b64 	%rd1857, {%r2203, %r2202};
	xor.b64  	%rd1858, %rd1857, %rd1856;
	shf.l.wrap.b32 	%r2204, %r2198, %r2199, 23;
	shf.l.wrap.b32 	%r2205, %r2199, %r2198, 23;
	mov.b64 	%rd1859, {%r2205, %r2204};
	xor.b64  	%rd1860, %rd1858, %rd1859;
	xor.b64  	%rd1861, %rd1819, %rd1794;
	and.b64  	%rd1862, %rd1844, %rd1861;
	xor.b64  	%rd1863, %rd1862, %rd1794;
	add.s64 	%rd1864, %rd1624, %rd1561;
	ld.const.u64 	%rd1865, [k_sha512+408];
	add.s64 	%rd1866, %rd1864, %rd1865;
	add.s64 	%rd1867, %rd1866, %rd1863;
	add.s64 	%rd1868, %rd1867, %rd1860;
	add.s64 	%rd1869, %rd1868, %rd1572;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2206,%dummy}, %rd1855;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2207}, %rd1855;
	}
	shf.r.wrap.b32 	%r2208, %r2207, %r2206, 28;
	shf.r.wrap.b32 	%r2209, %r2206, %r2207, 28;
	mov.b64 	%rd1870, {%r2209, %r2208};
	shf.l.wrap.b32 	%r2210, %r2206, %r2207, 30;
	shf.l.wrap.b32 	%r2211, %r2207, %r2206, 30;
	mov.b64 	%rd1871, {%r2211, %r2210};
	xor.b64  	%rd1872, %rd1871, %rd1870;
	shf.l.wrap.b32 	%r2212, %r2206, %r2207, 25;
	shf.l.wrap.b32 	%r2213, %r2207, %r2206, 25;
	mov.b64 	%rd1873, {%r2213, %r2212};
	xor.b64  	%rd1874, %rd1872, %rd1873;
	xor.b64  	%rd1875, %rd1855, %rd1805;
	xor.b64  	%rd1876, %rd1855, %rd1830;
	and.b64  	%rd1877, %rd1876, %rd1875;
	xor.b64  	%rd1878, %rd1877, %rd1855;
	add.s64 	%rd1879, %rd1868, %rd1878;
	add.s64 	%rd1880, %rd1879, %rd1874;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2214,%dummy}, %rd1869;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2215}, %rd1869;
	}
	shf.r.wrap.b32 	%r2216, %r2215, %r2214, 14;
	shf.r.wrap.b32 	%r2217, %r2214, %r2215, 14;
	mov.b64 	%rd1881, {%r2217, %r2216};
	shf.r.wrap.b32 	%r2218, %r2215, %r2214, 18;
	shf.r.wrap.b32 	%r2219, %r2214, %r2215, 18;
	mov.b64 	%rd1882, {%r2219, %r2218};
	xor.b64  	%rd1883, %rd1882, %rd1881;
	shf.l.wrap.b32 	%r2220, %r2214, %r2215, 23;
	shf.l.wrap.b32 	%r2221, %r2215, %r2214, 23;
	mov.b64 	%rd1884, {%r2221, %r2220};
	xor.b64  	%rd1885, %rd1883, %rd1884;
	xor.b64  	%rd1886, %rd1844, %rd1819;
	and.b64  	%rd1887, %rd1869, %rd1886;
	xor.b64  	%rd1888, %rd1887, %rd1819;
	add.s64 	%rd1889, %rd1794, %rd1637;
	ld.const.u64 	%rd1890, [k_sha512+416];
	add.s64 	%rd1891, %rd1889, %rd1890;
	add.s64 	%rd1892, %rd1891, %rd1888;
	add.s64 	%rd1893, %rd1892, %rd1885;
	add.s64 	%rd1894, %rd1893, %rd1805;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2222,%dummy}, %rd1880;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2223}, %rd1880;
	}
	shf.r.wrap.b32 	%r2224, %r2223, %r2222, 28;
	shf.r.wrap.b32 	%r2225, %r2222, %r2223, 28;
	mov.b64 	%rd1895, {%r2225, %r2224};
	shf.l.wrap.b32 	%r2226, %r2222, %r2223, 30;
	shf.l.wrap.b32 	%r2227, %r2223, %r2222, 30;
	mov.b64 	%rd1896, {%r2227, %r2226};
	xor.b64  	%rd1897, %rd1896, %rd1895;
	shf.l.wrap.b32 	%r2228, %r2222, %r2223, 25;
	shf.l.wrap.b32 	%r2229, %r2223, %r2222, 25;
	mov.b64 	%rd1898, {%r2229, %r2228};
	xor.b64  	%rd1899, %rd1897, %rd1898;
	xor.b64  	%rd1900, %rd1880, %rd1830;
	xor.b64  	%rd1901, %rd1880, %rd1855;
	and.b64  	%rd1902, %rd1901, %rd1900;
	xor.b64  	%rd1903, %rd1902, %rd1880;
	add.s64 	%rd1904, %rd1893, %rd1903;
	add.s64 	%rd1905, %rd1904, %rd1899;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2230,%dummy}, %rd1894;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2231}, %rd1894;
	}
	shf.r.wrap.b32 	%r2232, %r2231, %r2230, 14;
	shf.r.wrap.b32 	%r2233, %r2230, %r2231, 14;
	mov.b64 	%rd1906, {%r2233, %r2232};
	shf.r.wrap.b32 	%r2234, %r2231, %r2230, 18;
	shf.r.wrap.b32 	%r2235, %r2230, %r2231, 18;
	mov.b64 	%rd1907, {%r2235, %r2234};
	xor.b64  	%rd1908, %rd1907, %rd1906;
	shf.l.wrap.b32 	%r2236, %r2230, %r2231, 23;
	shf.l.wrap.b32 	%r2237, %r2231, %r2230, 23;
	mov.b64 	%rd1909, {%r2237, %r2236};
	xor.b64  	%rd1910, %rd1908, %rd1909;
	xor.b64  	%rd1911, %rd1869, %rd1844;
	and.b64  	%rd1912, %rd1894, %rd1911;
	xor.b64  	%rd1913, %rd1912, %rd1844;
	add.s64 	%rd1914, %rd1819, %rd1650;
	ld.const.u64 	%rd1915, [k_sha512+424];
	add.s64 	%rd1916, %rd1914, %rd1915;
	add.s64 	%rd1917, %rd1916, %rd1913;
	add.s64 	%rd1918, %rd1917, %rd1910;
	add.s64 	%rd1919, %rd1918, %rd1830;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2238,%dummy}, %rd1905;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2239}, %rd1905;
	}
	shf.r.wrap.b32 	%r2240, %r2239, %r2238, 28;
	shf.r.wrap.b32 	%r2241, %r2238, %r2239, 28;
	mov.b64 	%rd1920, {%r2241, %r2240};
	shf.l.wrap.b32 	%r2242, %r2238, %r2239, 30;
	shf.l.wrap.b32 	%r2243, %r2239, %r2238, 30;
	mov.b64 	%rd1921, {%r2243, %r2242};
	xor.b64  	%rd1922, %rd1921, %rd1920;
	shf.l.wrap.b32 	%r2244, %r2238, %r2239, 25;
	shf.l.wrap.b32 	%r2245, %r2239, %r2238, 25;
	mov.b64 	%rd1923, {%r2245, %r2244};
	xor.b64  	%rd1924, %rd1922, %rd1923;
	xor.b64  	%rd1925, %rd1905, %rd1855;
	xor.b64  	%rd1926, %rd1905, %rd1880;
	and.b64  	%rd1927, %rd1926, %rd1925;
	xor.b64  	%rd1928, %rd1927, %rd1905;
	add.s64 	%rd1929, %rd1918, %rd1928;
	add.s64 	%rd1930, %rd1929, %rd1924;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2246,%dummy}, %rd1919;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2247}, %rd1919;
	}
	shf.r.wrap.b32 	%r2248, %r2247, %r2246, 14;
	shf.r.wrap.b32 	%r2249, %r2246, %r2247, 14;
	mov.b64 	%rd1931, {%r2249, %r2248};
	shf.r.wrap.b32 	%r2250, %r2247, %r2246, 18;
	shf.r.wrap.b32 	%r2251, %r2246, %r2247, 18;
	mov.b64 	%rd1932, {%r2251, %r2250};
	xor.b64  	%rd1933, %rd1932, %rd1931;
	shf.l.wrap.b32 	%r2252, %r2246, %r2247, 23;
	shf.l.wrap.b32 	%r2253, %r2247, %r2246, 23;
	mov.b64 	%rd1934, {%r2253, %r2252};
	xor.b64  	%rd1935, %rd1933, %rd1934;
	xor.b64  	%rd1936, %rd1894, %rd1869;
	and.b64  	%rd1937, %rd1919, %rd1936;
	xor.b64  	%rd1938, %rd1937, %rd1869;
	add.s64 	%rd1939, %rd1844, %rd1663;
	ld.const.u64 	%rd1940, [k_sha512+432];
	add.s64 	%rd1941, %rd1939, %rd1940;
	add.s64 	%rd1942, %rd1941, %rd1938;
	add.s64 	%rd1943, %rd1942, %rd1935;
	add.s64 	%rd1944, %rd1943, %rd1855;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2254,%dummy}, %rd1930;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2255}, %rd1930;
	}
	shf.r.wrap.b32 	%r2256, %r2255, %r2254, 28;
	shf.r.wrap.b32 	%r2257, %r2254, %r2255, 28;
	mov.b64 	%rd1945, {%r2257, %r2256};
	shf.l.wrap.b32 	%r2258, %r2254, %r2255, 30;
	shf.l.wrap.b32 	%r2259, %r2255, %r2254, 30;
	mov.b64 	%rd1946, {%r2259, %r2258};
	xor.b64  	%rd1947, %rd1946, %rd1945;
	shf.l.wrap.b32 	%r2260, %r2254, %r2255, 25;
	shf.l.wrap.b32 	%r2261, %r2255, %r2254, 25;
	mov.b64 	%rd1948, {%r2261, %r2260};
	xor.b64  	%rd1949, %rd1947, %rd1948;
	xor.b64  	%rd1950, %rd1930, %rd1880;
	xor.b64  	%rd1951, %rd1930, %rd1905;
	and.b64  	%rd1952, %rd1951, %rd1950;
	xor.b64  	%rd1953, %rd1952, %rd1930;
	add.s64 	%rd1954, %rd1943, %rd1953;
	add.s64 	%rd1955, %rd1954, %rd1949;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2262,%dummy}, %rd1944;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2263}, %rd1944;
	}
	shf.r.wrap.b32 	%r2264, %r2263, %r2262, 14;
	shf.r.wrap.b32 	%r2265, %r2262, %r2263, 14;
	mov.b64 	%rd1956, {%r2265, %r2264};
	shf.r.wrap.b32 	%r2266, %r2263, %r2262, 18;
	shf.r.wrap.b32 	%r2267, %r2262, %r2263, 18;
	mov.b64 	%rd1957, {%r2267, %r2266};
	xor.b64  	%rd1958, %rd1957, %rd1956;
	shf.l.wrap.b32 	%r2268, %r2262, %r2263, 23;
	shf.l.wrap.b32 	%r2269, %r2263, %r2262, 23;
	mov.b64 	%rd1959, {%r2269, %r2268};
	xor.b64  	%rd1960, %rd1958, %rd1959;
	xor.b64  	%rd1961, %rd1919, %rd1894;
	and.b64  	%rd1962, %rd1944, %rd1961;
	xor.b64  	%rd1963, %rd1962, %rd1894;
	add.s64 	%rd1964, %rd1869, %rd1676;
	ld.const.u64 	%rd1965, [k_sha512+440];
	add.s64 	%rd1966, %rd1964, %rd1965;
	add.s64 	%rd1967, %rd1966, %rd1963;
	add.s64 	%rd1968, %rd1967, %rd1960;
	add.s64 	%rd1969, %rd1968, %rd1880;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2270,%dummy}, %rd1955;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2271}, %rd1955;
	}
	shf.r.wrap.b32 	%r2272, %r2271, %r2270, 28;
	shf.r.wrap.b32 	%r2273, %r2270, %r2271, 28;
	mov.b64 	%rd1970, {%r2273, %r2272};
	shf.l.wrap.b32 	%r2274, %r2270, %r2271, 30;
	shf.l.wrap.b32 	%r2275, %r2271, %r2270, 30;
	mov.b64 	%rd1971, {%r2275, %r2274};
	xor.b64  	%rd1972, %rd1971, %rd1970;
	shf.l.wrap.b32 	%r2276, %r2270, %r2271, 25;
	shf.l.wrap.b32 	%r2277, %r2271, %r2270, 25;
	mov.b64 	%rd1973, {%r2277, %r2276};
	xor.b64  	%rd1974, %rd1972, %rd1973;
	xor.b64  	%rd1975, %rd1955, %rd1905;
	xor.b64  	%rd1976, %rd1955, %rd1930;
	and.b64  	%rd1977, %rd1976, %rd1975;
	xor.b64  	%rd1978, %rd1977, %rd1955;
	add.s64 	%rd1979, %rd1968, %rd1978;
	add.s64 	%rd1980, %rd1979, %rd1974;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2278,%dummy}, %rd1969;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2279}, %rd1969;
	}
	shf.r.wrap.b32 	%r2280, %r2279, %r2278, 14;
	shf.r.wrap.b32 	%r2281, %r2278, %r2279, 14;
	mov.b64 	%rd1981, {%r2281, %r2280};
	shf.r.wrap.b32 	%r2282, %r2279, %r2278, 18;
	shf.r.wrap.b32 	%r2283, %r2278, %r2279, 18;
	mov.b64 	%rd1982, {%r2283, %r2282};
	xor.b64  	%rd1983, %rd1982, %rd1981;
	shf.l.wrap.b32 	%r2284, %r2278, %r2279, 23;
	shf.l.wrap.b32 	%r2285, %r2279, %r2278, 23;
	mov.b64 	%rd1984, {%r2285, %r2284};
	xor.b64  	%rd1985, %rd1983, %rd1984;
	xor.b64  	%rd1986, %rd1944, %rd1919;
	and.b64  	%rd1987, %rd1969, %rd1986;
	xor.b64  	%rd1988, %rd1987, %rd1919;
	add.s64 	%rd1989, %rd1894, %rd1689;
	ld.const.u64 	%rd1990, [k_sha512+448];
	add.s64 	%rd1991, %rd1989, %rd1990;
	add.s64 	%rd1992, %rd1991, %rd1988;
	add.s64 	%rd1993, %rd1992, %rd1985;
	add.s64 	%rd1994, %rd1993, %rd1905;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2286,%dummy}, %rd1980;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2287}, %rd1980;
	}
	shf.r.wrap.b32 	%r2288, %r2287, %r2286, 28;
	shf.r.wrap.b32 	%r2289, %r2286, %r2287, 28;
	mov.b64 	%rd1995, {%r2289, %r2288};
	shf.l.wrap.b32 	%r2290, %r2286, %r2287, 30;
	shf.l.wrap.b32 	%r2291, %r2287, %r2286, 30;
	mov.b64 	%rd1996, {%r2291, %r2290};
	xor.b64  	%rd1997, %rd1996, %rd1995;
	shf.l.wrap.b32 	%r2292, %r2286, %r2287, 25;
	shf.l.wrap.b32 	%r2293, %r2287, %r2286, 25;
	mov.b64 	%rd1998, {%r2293, %r2292};
	xor.b64  	%rd1999, %rd1997, %rd1998;
	xor.b64  	%rd2000, %rd1980, %rd1930;
	xor.b64  	%rd2001, %rd1980, %rd1955;
	and.b64  	%rd2002, %rd2001, %rd2000;
	xor.b64  	%rd2003, %rd2002, %rd1980;
	add.s64 	%rd2004, %rd1993, %rd2003;
	add.s64 	%rd2005, %rd2004, %rd1999;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2294,%dummy}, %rd1994;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2295}, %rd1994;
	}
	shf.r.wrap.b32 	%r2296, %r2295, %r2294, 14;
	shf.r.wrap.b32 	%r2297, %r2294, %r2295, 14;
	mov.b64 	%rd2006, {%r2297, %r2296};
	shf.r.wrap.b32 	%r2298, %r2295, %r2294, 18;
	shf.r.wrap.b32 	%r2299, %r2294, %r2295, 18;
	mov.b64 	%rd2007, {%r2299, %r2298};
	xor.b64  	%rd2008, %rd2007, %rd2006;
	shf.l.wrap.b32 	%r2300, %r2294, %r2295, 23;
	shf.l.wrap.b32 	%r2301, %r2295, %r2294, 23;
	mov.b64 	%rd2009, {%r2301, %r2300};
	xor.b64  	%rd2010, %rd2008, %rd2009;
	xor.b64  	%rd2011, %rd1969, %rd1944;
	and.b64  	%rd2012, %rd1994, %rd2011;
	xor.b64  	%rd2013, %rd2012, %rd1944;
	add.s64 	%rd2014, %rd1919, %rd1702;
	ld.const.u64 	%rd2015, [k_sha512+456];
	add.s64 	%rd2016, %rd2014, %rd2015;
	add.s64 	%rd2017, %rd2016, %rd2013;
	add.s64 	%rd2018, %rd2017, %rd2010;
	add.s64 	%rd2019, %rd2018, %rd1930;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2302,%dummy}, %rd2005;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2303}, %rd2005;
	}
	shf.r.wrap.b32 	%r2304, %r2303, %r2302, 28;
	shf.r.wrap.b32 	%r2305, %r2302, %r2303, 28;
	mov.b64 	%rd2020, {%r2305, %r2304};
	shf.l.wrap.b32 	%r2306, %r2302, %r2303, 30;
	shf.l.wrap.b32 	%r2307, %r2303, %r2302, 30;
	mov.b64 	%rd2021, {%r2307, %r2306};
	xor.b64  	%rd2022, %rd2021, %rd2020;
	shf.l.wrap.b32 	%r2308, %r2302, %r2303, 25;
	shf.l.wrap.b32 	%r2309, %r2303, %r2302, 25;
	mov.b64 	%rd2023, {%r2309, %r2308};
	xor.b64  	%rd2024, %rd2022, %rd2023;
	xor.b64  	%rd2025, %rd2005, %rd1955;
	xor.b64  	%rd2026, %rd2005, %rd1980;
	and.b64  	%rd2027, %rd2026, %rd2025;
	xor.b64  	%rd2028, %rd2027, %rd2005;
	add.s64 	%rd2029, %rd2018, %rd2028;
	add.s64 	%rd2030, %rd2029, %rd2024;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2310,%dummy}, %rd2019;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2311}, %rd2019;
	}
	shf.r.wrap.b32 	%r2312, %r2311, %r2310, 14;
	shf.r.wrap.b32 	%r2313, %r2310, %r2311, 14;
	mov.b64 	%rd2031, {%r2313, %r2312};
	shf.r.wrap.b32 	%r2314, %r2311, %r2310, 18;
	shf.r.wrap.b32 	%r2315, %r2310, %r2311, 18;
	mov.b64 	%rd2032, {%r2315, %r2314};
	xor.b64  	%rd2033, %rd2032, %rd2031;
	shf.l.wrap.b32 	%r2316, %r2310, %r2311, 23;
	shf.l.wrap.b32 	%r2317, %r2311, %r2310, 23;
	mov.b64 	%rd2034, {%r2317, %r2316};
	xor.b64  	%rd2035, %rd2033, %rd2034;
	xor.b64  	%rd2036, %rd1994, %rd1969;
	and.b64  	%rd2037, %rd2019, %rd2036;
	xor.b64  	%rd2038, %rd2037, %rd1969;
	add.s64 	%rd2039, %rd1944, %rd1715;
	ld.const.u64 	%rd2040, [k_sha512+464];
	add.s64 	%rd2041, %rd2039, %rd2040;
	add.s64 	%rd2042, %rd2041, %rd2038;
	add.s64 	%rd2043, %rd2042, %rd2035;
	add.s64 	%rd2044, %rd2043, %rd1955;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2318,%dummy}, %rd2030;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2319}, %rd2030;
	}
	shf.r.wrap.b32 	%r2320, %r2319, %r2318, 28;
	shf.r.wrap.b32 	%r2321, %r2318, %r2319, 28;
	mov.b64 	%rd2045, {%r2321, %r2320};
	shf.l.wrap.b32 	%r2322, %r2318, %r2319, 30;
	shf.l.wrap.b32 	%r2323, %r2319, %r2318, 30;
	mov.b64 	%rd2046, {%r2323, %r2322};
	xor.b64  	%rd2047, %rd2046, %rd2045;
	shf.l.wrap.b32 	%r2324, %r2318, %r2319, 25;
	shf.l.wrap.b32 	%r2325, %r2319, %r2318, 25;
	mov.b64 	%rd2048, {%r2325, %r2324};
	xor.b64  	%rd2049, %rd2047, %rd2048;
	xor.b64  	%rd2050, %rd2030, %rd1980;
	xor.b64  	%rd2051, %rd2030, %rd2005;
	and.b64  	%rd2052, %rd2051, %rd2050;
	xor.b64  	%rd2053, %rd2052, %rd2030;
	add.s64 	%rd2054, %rd2043, %rd2053;
	add.s64 	%rd2055, %rd2054, %rd2049;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2326,%dummy}, %rd2044;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2327}, %rd2044;
	}
	shf.r.wrap.b32 	%r2328, %r2327, %r2326, 14;
	shf.r.wrap.b32 	%r2329, %r2326, %r2327, 14;
	mov.b64 	%rd2056, {%r2329, %r2328};
	shf.r.wrap.b32 	%r2330, %r2327, %r2326, 18;
	shf.r.wrap.b32 	%r2331, %r2326, %r2327, 18;
	mov.b64 	%rd2057, {%r2331, %r2330};
	xor.b64  	%rd2058, %rd2057, %rd2056;
	shf.l.wrap.b32 	%r2332, %r2326, %r2327, 23;
	shf.l.wrap.b32 	%r2333, %r2327, %r2326, 23;
	mov.b64 	%rd2059, {%r2333, %r2332};
	xor.b64  	%rd2060, %rd2058, %rd2059;
	xor.b64  	%rd2061, %rd2019, %rd1994;
	and.b64  	%rd2062, %rd2044, %rd2061;
	xor.b64  	%rd2063, %rd2062, %rd1994;
	add.s64 	%rd2064, %rd1969, %rd1728;
	ld.const.u64 	%rd2065, [k_sha512+472];
	add.s64 	%rd2066, %rd2064, %rd2065;
	add.s64 	%rd2067, %rd2066, %rd2063;
	add.s64 	%rd2068, %rd2067, %rd2060;
	add.s64 	%rd2069, %rd2068, %rd1980;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2334,%dummy}, %rd2055;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2335}, %rd2055;
	}
	shf.r.wrap.b32 	%r2336, %r2335, %r2334, 28;
	shf.r.wrap.b32 	%r2337, %r2334, %r2335, 28;
	mov.b64 	%rd2070, {%r2337, %r2336};
	shf.l.wrap.b32 	%r2338, %r2334, %r2335, 30;
	shf.l.wrap.b32 	%r2339, %r2335, %r2334, 30;
	mov.b64 	%rd2071, {%r2339, %r2338};
	xor.b64  	%rd2072, %rd2071, %rd2070;
	shf.l.wrap.b32 	%r2340, %r2334, %r2335, 25;
	shf.l.wrap.b32 	%r2341, %r2335, %r2334, 25;
	mov.b64 	%rd2073, {%r2341, %r2340};
	xor.b64  	%rd2074, %rd2072, %rd2073;
	xor.b64  	%rd2075, %rd2055, %rd2005;
	xor.b64  	%rd2076, %rd2055, %rd2030;
	and.b64  	%rd2077, %rd2076, %rd2075;
	xor.b64  	%rd2078, %rd2077, %rd2055;
	add.s64 	%rd2079, %rd2068, %rd2078;
	add.s64 	%rd2080, %rd2079, %rd2074;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2342,%dummy}, %rd2069;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2343}, %rd2069;
	}
	shf.r.wrap.b32 	%r2344, %r2343, %r2342, 14;
	shf.r.wrap.b32 	%r2345, %r2342, %r2343, 14;
	mov.b64 	%rd2081, {%r2345, %r2344};
	shf.r.wrap.b32 	%r2346, %r2343, %r2342, 18;
	shf.r.wrap.b32 	%r2347, %r2342, %r2343, 18;
	mov.b64 	%rd2082, {%r2347, %r2346};
	xor.b64  	%rd2083, %rd2082, %rd2081;
	shf.l.wrap.b32 	%r2348, %r2342, %r2343, 23;
	shf.l.wrap.b32 	%r2349, %r2343, %r2342, 23;
	mov.b64 	%rd2084, {%r2349, %r2348};
	xor.b64  	%rd2085, %rd2083, %rd2084;
	xor.b64  	%rd2086, %rd2044, %rd2019;
	and.b64  	%rd2087, %rd2069, %rd2086;
	xor.b64  	%rd2088, %rd2087, %rd2019;
	add.s64 	%rd2089, %rd1994, %rd1741;
	ld.const.u64 	%rd2090, [k_sha512+480];
	add.s64 	%rd2091, %rd2089, %rd2090;
	add.s64 	%rd2092, %rd2091, %rd2088;
	add.s64 	%rd2093, %rd2092, %rd2085;
	add.s64 	%rd2094, %rd2093, %rd2005;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2350,%dummy}, %rd2080;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2351}, %rd2080;
	}
	shf.r.wrap.b32 	%r2352, %r2351, %r2350, 28;
	shf.r.wrap.b32 	%r2353, %r2350, %r2351, 28;
	mov.b64 	%rd2095, {%r2353, %r2352};
	shf.l.wrap.b32 	%r2354, %r2350, %r2351, 30;
	shf.l.wrap.b32 	%r2355, %r2351, %r2350, 30;
	mov.b64 	%rd2096, {%r2355, %r2354};
	xor.b64  	%rd2097, %rd2096, %rd2095;
	shf.l.wrap.b32 	%r2356, %r2350, %r2351, 25;
	shf.l.wrap.b32 	%r2357, %r2351, %r2350, 25;
	mov.b64 	%rd2098, {%r2357, %r2356};
	xor.b64  	%rd2099, %rd2097, %rd2098;
	xor.b64  	%rd2100, %rd2080, %rd2030;
	xor.b64  	%rd2101, %rd2080, %rd2055;
	and.b64  	%rd2102, %rd2101, %rd2100;
	xor.b64  	%rd2103, %rd2102, %rd2080;
	add.s64 	%rd2104, %rd2093, %rd2103;
	add.s64 	%rd2105, %rd2104, %rd2099;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2358,%dummy}, %rd2094;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2359}, %rd2094;
	}
	shf.r.wrap.b32 	%r2360, %r2359, %r2358, 14;
	shf.r.wrap.b32 	%r2361, %r2358, %r2359, 14;
	mov.b64 	%rd2106, {%r2361, %r2360};
	shf.r.wrap.b32 	%r2362, %r2359, %r2358, 18;
	shf.r.wrap.b32 	%r2363, %r2358, %r2359, 18;
	mov.b64 	%rd2107, {%r2363, %r2362};
	xor.b64  	%rd2108, %rd2107, %rd2106;
	shf.l.wrap.b32 	%r2364, %r2358, %r2359, 23;
	shf.l.wrap.b32 	%r2365, %r2359, %r2358, 23;
	mov.b64 	%rd2109, {%r2365, %r2364};
	xor.b64  	%rd2110, %rd2108, %rd2109;
	xor.b64  	%rd2111, %rd2069, %rd2044;
	and.b64  	%rd2112, %rd2094, %rd2111;
	xor.b64  	%rd2113, %rd2112, %rd2044;
	add.s64 	%rd2114, %rd2019, %rd1754;
	ld.const.u64 	%rd2115, [k_sha512+488];
	add.s64 	%rd2116, %rd2114, %rd2115;
	add.s64 	%rd2117, %rd2116, %rd2113;
	add.s64 	%rd2118, %rd2117, %rd2110;
	add.s64 	%rd2119, %rd2118, %rd2030;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2366,%dummy}, %rd2105;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2367}, %rd2105;
	}
	shf.r.wrap.b32 	%r2368, %r2367, %r2366, 28;
	shf.r.wrap.b32 	%r2369, %r2366, %r2367, 28;
	mov.b64 	%rd2120, {%r2369, %r2368};
	shf.l.wrap.b32 	%r2370, %r2366, %r2367, 30;
	shf.l.wrap.b32 	%r2371, %r2367, %r2366, 30;
	mov.b64 	%rd2121, {%r2371, %r2370};
	xor.b64  	%rd2122, %rd2121, %rd2120;
	shf.l.wrap.b32 	%r2372, %r2366, %r2367, 25;
	shf.l.wrap.b32 	%r2373, %r2367, %r2366, 25;
	mov.b64 	%rd2123, {%r2373, %r2372};
	xor.b64  	%rd2124, %rd2122, %rd2123;
	xor.b64  	%rd2125, %rd2105, %rd2055;
	xor.b64  	%rd2126, %rd2105, %rd2080;
	and.b64  	%rd2127, %rd2126, %rd2125;
	xor.b64  	%rd2128, %rd2127, %rd2105;
	add.s64 	%rd2129, %rd2118, %rd2128;
	add.s64 	%rd2130, %rd2129, %rd2124;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2374,%dummy}, %rd2119;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2375}, %rd2119;
	}
	shf.r.wrap.b32 	%r2376, %r2375, %r2374, 14;
	shf.r.wrap.b32 	%r2377, %r2374, %r2375, 14;
	mov.b64 	%rd2131, {%r2377, %r2376};
	shf.r.wrap.b32 	%r2378, %r2375, %r2374, 18;
	shf.r.wrap.b32 	%r2379, %r2374, %r2375, 18;
	mov.b64 	%rd2132, {%r2379, %r2378};
	xor.b64  	%rd2133, %rd2132, %rd2131;
	shf.l.wrap.b32 	%r2380, %r2374, %r2375, 23;
	shf.l.wrap.b32 	%r2381, %r2375, %r2374, 23;
	mov.b64 	%rd2134, {%r2381, %r2380};
	xor.b64  	%rd2135, %rd2133, %rd2134;
	xor.b64  	%rd2136, %rd2094, %rd2069;
	and.b64  	%rd2137, %rd2119, %rd2136;
	xor.b64  	%rd2138, %rd2137, %rd2069;
	add.s64 	%rd2139, %rd2044, %rd1767;
	ld.const.u64 	%rd2140, [k_sha512+496];
	add.s64 	%rd2141, %rd2139, %rd2140;
	add.s64 	%rd2142, %rd2141, %rd2138;
	add.s64 	%rd2143, %rd2142, %rd2135;
	add.s64 	%rd2144, %rd2143, %rd2055;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2382,%dummy}, %rd2130;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2383}, %rd2130;
	}
	shf.r.wrap.b32 	%r2384, %r2383, %r2382, 28;
	shf.r.wrap.b32 	%r2385, %r2382, %r2383, 28;
	mov.b64 	%rd2145, {%r2385, %r2384};
	shf.l.wrap.b32 	%r2386, %r2382, %r2383, 30;
	shf.l.wrap.b32 	%r2387, %r2383, %r2382, 30;
	mov.b64 	%rd2146, {%r2387, %r2386};
	xor.b64  	%rd2147, %rd2146, %rd2145;
	shf.l.wrap.b32 	%r2388, %r2382, %r2383, 25;
	shf.l.wrap.b32 	%r2389, %r2383, %r2382, 25;
	mov.b64 	%rd2148, {%r2389, %r2388};
	xor.b64  	%rd2149, %rd2147, %rd2148;
	xor.b64  	%rd2150, %rd2130, %rd2080;
	xor.b64  	%rd2151, %rd2130, %rd2105;
	and.b64  	%rd2152, %rd2151, %rd2150;
	xor.b64  	%rd2153, %rd2152, %rd2130;
	add.s64 	%rd2154, %rd2143, %rd2153;
	add.s64 	%rd2155, %rd2154, %rd2149;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2390,%dummy}, %rd2144;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2391}, %rd2144;
	}
	shf.r.wrap.b32 	%r2392, %r2391, %r2390, 14;
	shf.r.wrap.b32 	%r2393, %r2390, %r2391, 14;
	mov.b64 	%rd2156, {%r2393, %r2392};
	shf.r.wrap.b32 	%r2394, %r2391, %r2390, 18;
	shf.r.wrap.b32 	%r2395, %r2390, %r2391, 18;
	mov.b64 	%rd2157, {%r2395, %r2394};
	xor.b64  	%rd2158, %rd2157, %rd2156;
	shf.l.wrap.b32 	%r2396, %r2390, %r2391, 23;
	shf.l.wrap.b32 	%r2397, %r2391, %r2390, 23;
	mov.b64 	%rd2159, {%r2397, %r2396};
	xor.b64  	%rd2160, %rd2158, %rd2159;
	xor.b64  	%rd2161, %rd2119, %rd2094;
	and.b64  	%rd2162, %rd2144, %rd2161;
	xor.b64  	%rd2163, %rd2162, %rd2094;
	add.s64 	%rd2164, %rd2069, %rd1780;
	ld.const.u64 	%rd2165, [k_sha512+504];
	add.s64 	%rd2166, %rd2164, %rd2165;
	add.s64 	%rd2167, %rd2166, %rd2163;
	add.s64 	%rd2168, %rd2167, %rd2160;
	add.s64 	%rd2169, %rd2168, %rd2080;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2398,%dummy}, %rd2155;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2399}, %rd2155;
	}
	shf.r.wrap.b32 	%r2400, %r2399, %r2398, 28;
	shf.r.wrap.b32 	%r2401, %r2398, %r2399, 28;
	mov.b64 	%rd2170, {%r2401, %r2400};
	shf.l.wrap.b32 	%r2402, %r2398, %r2399, 30;
	shf.l.wrap.b32 	%r2403, %r2399, %r2398, 30;
	mov.b64 	%rd2171, {%r2403, %r2402};
	xor.b64  	%rd2172, %rd2171, %rd2170;
	shf.l.wrap.b32 	%r2404, %r2398, %r2399, 25;
	shf.l.wrap.b32 	%r2405, %r2399, %r2398, 25;
	mov.b64 	%rd2173, {%r2405, %r2404};
	xor.b64  	%rd2174, %rd2172, %rd2173;
	xor.b64  	%rd2175, %rd2155, %rd2105;
	xor.b64  	%rd2176, %rd2155, %rd2130;
	and.b64  	%rd2177, %rd2176, %rd2175;
	xor.b64  	%rd2178, %rd2177, %rd2155;
	add.s64 	%rd2179, %rd2168, %rd2178;
	add.s64 	%rd2180, %rd2179, %rd2174;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2406,%dummy}, %rd1767;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2407}, %rd1767;
	}
	shf.r.wrap.b32 	%r2408, %r2407, %r2406, 19;
	shf.r.wrap.b32 	%r2409, %r2406, %r2407, 19;
	mov.b64 	%rd2181, {%r2409, %r2408};
	shf.l.wrap.b32 	%r2410, %r2406, %r2407, 3;
	shf.l.wrap.b32 	%r2411, %r2407, %r2406, 3;
	mov.b64 	%rd2182, {%r2411, %r2410};
	shr.u64 	%rd2183, %rd1767, 6;
	xor.b64  	%rd2184, %rd2181, %rd2183;
	xor.b64  	%rd2185, %rd2184, %rd2182;
	shf.r.wrap.b32 	%r2412, %r2021, %r2020, 1;
	shf.r.wrap.b32 	%r2413, %r2020, %r2021, 1;
	mov.b64 	%rd2186, {%r2413, %r2412};
	shf.r.wrap.b32 	%r2414, %r2021, %r2020, 8;
	shf.r.wrap.b32 	%r2415, %r2020, %r2021, 8;
	mov.b64 	%rd2187, {%r2415, %r2414};
	shr.u64 	%rd2188, %rd1598, 7;
	xor.b64  	%rd2189, %rd2186, %rd2188;
	xor.b64  	%rd2190, %rd2189, %rd2187;
	add.s64 	%rd2191, %rd1585, %rd1702;
	add.s64 	%rd2192, %rd2191, %rd2185;
	add.s64 	%rd2193, %rd2192, %rd2190;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2416,%dummy}, %rd1780;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2417}, %rd1780;
	}
	shf.r.wrap.b32 	%r2418, %r2417, %r2416, 19;
	shf.r.wrap.b32 	%r2419, %r2416, %r2417, 19;
	mov.b64 	%rd2194, {%r2419, %r2418};
	shf.l.wrap.b32 	%r2420, %r2416, %r2417, 3;
	shf.l.wrap.b32 	%r2421, %r2417, %r2416, 3;
	mov.b64 	%rd2195, {%r2421, %r2420};
	shr.u64 	%rd2196, %rd1780, 6;
	xor.b64  	%rd2197, %rd2194, %rd2196;
	xor.b64  	%rd2198, %rd2197, %rd2195;
	shf.r.wrap.b32 	%r2422, %r2031, %r2030, 1;
	shf.r.wrap.b32 	%r2423, %r2030, %r2031, 1;
	mov.b64 	%rd2199, {%r2423, %r2422};
	shf.r.wrap.b32 	%r2424, %r2031, %r2030, 8;
	shf.r.wrap.b32 	%r2425, %r2030, %r2031, 8;
	mov.b64 	%rd2200, {%r2425, %r2424};
	shr.u64 	%rd2201, %rd1611, 7;
	xor.b64  	%rd2202, %rd2199, %rd2201;
	xor.b64  	%rd2203, %rd2202, %rd2200;
	add.s64 	%rd2204, %rd1598, %rd1715;
	add.s64 	%rd2205, %rd2204, %rd2198;
	add.s64 	%rd2206, %rd2205, %rd2203;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2426,%dummy}, %rd2193;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2427}, %rd2193;
	}
	shf.r.wrap.b32 	%r2428, %r2427, %r2426, 19;
	shf.r.wrap.b32 	%r2429, %r2426, %r2427, 19;
	mov.b64 	%rd2207, {%r2429, %r2428};
	shf.l.wrap.b32 	%r2430, %r2426, %r2427, 3;
	shf.l.wrap.b32 	%r2431, %r2427, %r2426, 3;
	mov.b64 	%rd2208, {%r2431, %r2430};
	shr.u64 	%rd2209, %rd2193, 6;
	xor.b64  	%rd2210, %rd2207, %rd2209;
	xor.b64  	%rd2211, %rd2210, %rd2208;
	shf.r.wrap.b32 	%r2432, %r2041, %r2040, 1;
	shf.r.wrap.b32 	%r2433, %r2040, %r2041, 1;
	mov.b64 	%rd2212, {%r2433, %r2432};
	shf.r.wrap.b32 	%r2434, %r2041, %r2040, 8;
	shf.r.wrap.b32 	%r2435, %r2040, %r2041, 8;
	mov.b64 	%rd2213, {%r2435, %r2434};
	shr.u64 	%rd2214, %rd1624, 7;
	xor.b64  	%rd2215, %rd2212, %rd2214;
	xor.b64  	%rd2216, %rd2215, %rd2213;
	add.s64 	%rd2217, %rd1611, %rd1728;
	add.s64 	%rd2218, %rd2217, %rd2211;
	add.s64 	%rd2219, %rd2218, %rd2216;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2436,%dummy}, %rd2206;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2437}, %rd2206;
	}
	shf.r.wrap.b32 	%r2438, %r2437, %r2436, 19;
	shf.r.wrap.b32 	%r2439, %r2436, %r2437, 19;
	mov.b64 	%rd2220, {%r2439, %r2438};
	shf.l.wrap.b32 	%r2440, %r2436, %r2437, 3;
	shf.l.wrap.b32 	%r2441, %r2437, %r2436, 3;
	mov.b64 	%rd2221, {%r2441, %r2440};
	shr.u64 	%rd2222, %rd2206, 6;
	xor.b64  	%rd2223, %rd2220, %rd2222;
	xor.b64  	%rd2224, %rd2223, %rd2221;
	shf.r.wrap.b32 	%r2442, %r2051, %r2050, 1;
	shf.r.wrap.b32 	%r2443, %r2050, %r2051, 1;
	mov.b64 	%rd2225, {%r2443, %r2442};
	shf.r.wrap.b32 	%r2444, %r2051, %r2050, 8;
	shf.r.wrap.b32 	%r2445, %r2050, %r2051, 8;
	mov.b64 	%rd2226, {%r2445, %r2444};
	shr.u64 	%rd2227, %rd1637, 7;
	xor.b64  	%rd2228, %rd2225, %rd2227;
	xor.b64  	%rd2229, %rd2228, %rd2226;
	add.s64 	%rd2230, %rd1624, %rd1741;
	add.s64 	%rd2231, %rd2230, %rd2224;
	add.s64 	%rd2232, %rd2231, %rd2229;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2446,%dummy}, %rd2219;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2447}, %rd2219;
	}
	shf.r.wrap.b32 	%r2448, %r2447, %r2446, 19;
	shf.r.wrap.b32 	%r2449, %r2446, %r2447, 19;
	mov.b64 	%rd2233, {%r2449, %r2448};
	shf.l.wrap.b32 	%r2450, %r2446, %r2447, 3;
	shf.l.wrap.b32 	%r2451, %r2447, %r2446, 3;
	mov.b64 	%rd2234, {%r2451, %r2450};
	shr.u64 	%rd2235, %rd2219, 6;
	xor.b64  	%rd2236, %rd2233, %rd2235;
	xor.b64  	%rd2237, %rd2236, %rd2234;
	shf.r.wrap.b32 	%r2452, %r2061, %r2060, 1;
	shf.r.wrap.b32 	%r2453, %r2060, %r2061, 1;
	mov.b64 	%rd2238, {%r2453, %r2452};
	shf.r.wrap.b32 	%r2454, %r2061, %r2060, 8;
	shf.r.wrap.b32 	%r2455, %r2060, %r2061, 8;
	mov.b64 	%rd2239, {%r2455, %r2454};
	shr.u64 	%rd2240, %rd1650, 7;
	xor.b64  	%rd2241, %rd2238, %rd2240;
	xor.b64  	%rd2242, %rd2241, %rd2239;
	add.s64 	%rd2243, %rd1637, %rd1754;
	add.s64 	%rd2244, %rd2243, %rd2237;
	add.s64 	%rd2245, %rd2244, %rd2242;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2456,%dummy}, %rd2232;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2457}, %rd2232;
	}
	shf.r.wrap.b32 	%r2458, %r2457, %r2456, 19;
	shf.r.wrap.b32 	%r2459, %r2456, %r2457, 19;
	mov.b64 	%rd2246, {%r2459, %r2458};
	shf.l.wrap.b32 	%r2460, %r2456, %r2457, 3;
	shf.l.wrap.b32 	%r2461, %r2457, %r2456, 3;
	mov.b64 	%rd2247, {%r2461, %r2460};
	shr.u64 	%rd2248, %rd2232, 6;
	xor.b64  	%rd2249, %rd2246, %rd2248;
	xor.b64  	%rd2250, %rd2249, %rd2247;
	shf.r.wrap.b32 	%r2462, %r2071, %r2070, 1;
	shf.r.wrap.b32 	%r2463, %r2070, %r2071, 1;
	mov.b64 	%rd2251, {%r2463, %r2462};
	shf.r.wrap.b32 	%r2464, %r2071, %r2070, 8;
	shf.r.wrap.b32 	%r2465, %r2070, %r2071, 8;
	mov.b64 	%rd2252, {%r2465, %r2464};
	shr.u64 	%rd2253, %rd1663, 7;
	xor.b64  	%rd2254, %rd2251, %rd2253;
	xor.b64  	%rd2255, %rd2254, %rd2252;
	add.s64 	%rd2256, %rd1650, %rd1767;
	add.s64 	%rd2257, %rd2256, %rd2250;
	add.s64 	%rd2258, %rd2257, %rd2255;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2466,%dummy}, %rd2245;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2467}, %rd2245;
	}
	shf.r.wrap.b32 	%r2468, %r2467, %r2466, 19;
	shf.r.wrap.b32 	%r2469, %r2466, %r2467, 19;
	mov.b64 	%rd2259, {%r2469, %r2468};
	shf.l.wrap.b32 	%r2470, %r2466, %r2467, 3;
	shf.l.wrap.b32 	%r2471, %r2467, %r2466, 3;
	mov.b64 	%rd2260, {%r2471, %r2470};
	shr.u64 	%rd2261, %rd2245, 6;
	xor.b64  	%rd2262, %rd2259, %rd2261;
	xor.b64  	%rd2263, %rd2262, %rd2260;
	shf.r.wrap.b32 	%r2472, %r2081, %r2080, 1;
	shf.r.wrap.b32 	%r2473, %r2080, %r2081, 1;
	mov.b64 	%rd2264, {%r2473, %r2472};
	shf.r.wrap.b32 	%r2474, %r2081, %r2080, 8;
	shf.r.wrap.b32 	%r2475, %r2080, %r2081, 8;
	mov.b64 	%rd2265, {%r2475, %r2474};
	shr.u64 	%rd2266, %rd1676, 7;
	xor.b64  	%rd2267, %rd2264, %rd2266;
	xor.b64  	%rd2268, %rd2267, %rd2265;
	add.s64 	%rd2269, %rd1780, %rd1663;
	add.s64 	%rd2270, %rd2269, %rd2263;
	add.s64 	%rd2271, %rd2270, %rd2268;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2476,%dummy}, %rd2258;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2477}, %rd2258;
	}
	shf.r.wrap.b32 	%r2478, %r2477, %r2476, 19;
	shf.r.wrap.b32 	%r2479, %r2476, %r2477, 19;
	mov.b64 	%rd2272, {%r2479, %r2478};
	shf.l.wrap.b32 	%r2480, %r2476, %r2477, 3;
	shf.l.wrap.b32 	%r2481, %r2477, %r2476, 3;
	mov.b64 	%rd2273, {%r2481, %r2480};
	shr.u64 	%rd2274, %rd2258, 6;
	xor.b64  	%rd2275, %rd2272, %rd2274;
	xor.b64  	%rd2276, %rd2275, %rd2273;
	shf.r.wrap.b32 	%r2482, %r2091, %r2090, 1;
	shf.r.wrap.b32 	%r2483, %r2090, %r2091, 1;
	mov.b64 	%rd2277, {%r2483, %r2482};
	shf.r.wrap.b32 	%r2484, %r2091, %r2090, 8;
	shf.r.wrap.b32 	%r2485, %r2090, %r2091, 8;
	mov.b64 	%rd2278, {%r2485, %r2484};
	shr.u64 	%rd2279, %rd1689, 7;
	xor.b64  	%rd2280, %rd2277, %rd2279;
	xor.b64  	%rd2281, %rd2280, %rd2278;
	add.s64 	%rd2282, %rd2193, %rd1676;
	add.s64 	%rd2283, %rd2282, %rd2276;
	add.s64 	%rd2284, %rd2283, %rd2281;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2486,%dummy}, %rd2271;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2487}, %rd2271;
	}
	shf.r.wrap.b32 	%r2488, %r2487, %r2486, 19;
	shf.r.wrap.b32 	%r2489, %r2486, %r2487, 19;
	mov.b64 	%rd2285, {%r2489, %r2488};
	shf.l.wrap.b32 	%r2490, %r2486, %r2487, 3;
	shf.l.wrap.b32 	%r2491, %r2487, %r2486, 3;
	mov.b64 	%rd2286, {%r2491, %r2490};
	shr.u64 	%rd2287, %rd2271, 6;
	xor.b64  	%rd2288, %rd2285, %rd2287;
	xor.b64  	%rd2289, %rd2288, %rd2286;
	shf.r.wrap.b32 	%r2492, %r2101, %r2100, 1;
	shf.r.wrap.b32 	%r2493, %r2100, %r2101, 1;
	mov.b64 	%rd2290, {%r2493, %r2492};
	shf.r.wrap.b32 	%r2494, %r2101, %r2100, 8;
	shf.r.wrap.b32 	%r2495, %r2100, %r2101, 8;
	mov.b64 	%rd2291, {%r2495, %r2494};
	shr.u64 	%rd2292, %rd1702, 7;
	xor.b64  	%rd2293, %rd2290, %rd2292;
	xor.b64  	%rd2294, %rd2293, %rd2291;
	add.s64 	%rd2295, %rd2206, %rd1689;
	add.s64 	%rd2296, %rd2295, %rd2289;
	add.s64 	%rd2297, %rd2296, %rd2294;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2496,%dummy}, %rd2284;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2497}, %rd2284;
	}
	shf.r.wrap.b32 	%r2498, %r2497, %r2496, 19;
	shf.r.wrap.b32 	%r2499, %r2496, %r2497, 19;
	mov.b64 	%rd2298, {%r2499, %r2498};
	shf.l.wrap.b32 	%r2500, %r2496, %r2497, 3;
	shf.l.wrap.b32 	%r2501, %r2497, %r2496, 3;
	mov.b64 	%rd2299, {%r2501, %r2500};
	shr.u64 	%rd2300, %rd2284, 6;
	xor.b64  	%rd2301, %rd2298, %rd2300;
	xor.b64  	%rd2302, %rd2301, %rd2299;
	shf.r.wrap.b32 	%r2502, %r2111, %r2110, 1;
	shf.r.wrap.b32 	%r2503, %r2110, %r2111, 1;
	mov.b64 	%rd2303, {%r2503, %r2502};
	shf.r.wrap.b32 	%r2504, %r2111, %r2110, 8;
	shf.r.wrap.b32 	%r2505, %r2110, %r2111, 8;
	mov.b64 	%rd2304, {%r2505, %r2504};
	shr.u64 	%rd2305, %rd1715, 7;
	xor.b64  	%rd2306, %rd2303, %rd2305;
	xor.b64  	%rd2307, %rd2306, %rd2304;
	add.s64 	%rd2308, %rd2219, %rd1702;
	add.s64 	%rd2309, %rd2308, %rd2302;
	add.s64 	%rd2310, %rd2309, %rd2307;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2506,%dummy}, %rd2297;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2507}, %rd2297;
	}
	shf.r.wrap.b32 	%r2508, %r2507, %r2506, 19;
	shf.r.wrap.b32 	%r2509, %r2506, %r2507, 19;
	mov.b64 	%rd2311, {%r2509, %r2508};
	shf.l.wrap.b32 	%r2510, %r2506, %r2507, 3;
	shf.l.wrap.b32 	%r2511, %r2507, %r2506, 3;
	mov.b64 	%rd2312, {%r2511, %r2510};
	shr.u64 	%rd2313, %rd2297, 6;
	xor.b64  	%rd2314, %rd2311, %rd2313;
	xor.b64  	%rd2315, %rd2314, %rd2312;
	shf.r.wrap.b32 	%r2512, %r2121, %r2120, 1;
	shf.r.wrap.b32 	%r2513, %r2120, %r2121, 1;
	mov.b64 	%rd2316, {%r2513, %r2512};
	shf.r.wrap.b32 	%r2514, %r2121, %r2120, 8;
	shf.r.wrap.b32 	%r2515, %r2120, %r2121, 8;
	mov.b64 	%rd2317, {%r2515, %r2514};
	shr.u64 	%rd2318, %rd1728, 7;
	xor.b64  	%rd2319, %rd2316, %rd2318;
	xor.b64  	%rd2320, %rd2319, %rd2317;
	add.s64 	%rd2321, %rd2232, %rd1715;
	add.s64 	%rd2322, %rd2321, %rd2315;
	add.s64 	%rd2323, %rd2322, %rd2320;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2516,%dummy}, %rd2310;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2517}, %rd2310;
	}
	shf.r.wrap.b32 	%r2518, %r2517, %r2516, 19;
	shf.r.wrap.b32 	%r2519, %r2516, %r2517, 19;
	mov.b64 	%rd2324, {%r2519, %r2518};
	shf.l.wrap.b32 	%r2520, %r2516, %r2517, 3;
	shf.l.wrap.b32 	%r2521, %r2517, %r2516, 3;
	mov.b64 	%rd2325, {%r2521, %r2520};
	shr.u64 	%rd2326, %rd2310, 6;
	xor.b64  	%rd2327, %rd2324, %rd2326;
	xor.b64  	%rd2328, %rd2327, %rd2325;
	shf.r.wrap.b32 	%r2522, %r2131, %r2130, 1;
	shf.r.wrap.b32 	%r2523, %r2130, %r2131, 1;
	mov.b64 	%rd2329, {%r2523, %r2522};
	shf.r.wrap.b32 	%r2524, %r2131, %r2130, 8;
	shf.r.wrap.b32 	%r2525, %r2130, %r2131, 8;
	mov.b64 	%rd2330, {%r2525, %r2524};
	shr.u64 	%rd2331, %rd1741, 7;
	xor.b64  	%rd2332, %rd2329, %rd2331;
	xor.b64  	%rd2333, %rd2332, %rd2330;
	add.s64 	%rd2334, %rd2245, %rd1728;
	add.s64 	%rd2335, %rd2334, %rd2328;
	add.s64 	%rd2336, %rd2335, %rd2333;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2526,%dummy}, %rd2323;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2527}, %rd2323;
	}
	shf.r.wrap.b32 	%r2528, %r2527, %r2526, 19;
	shf.r.wrap.b32 	%r2529, %r2526, %r2527, 19;
	mov.b64 	%rd2337, {%r2529, %r2528};
	shf.l.wrap.b32 	%r2530, %r2526, %r2527, 3;
	shf.l.wrap.b32 	%r2531, %r2527, %r2526, 3;
	mov.b64 	%rd2338, {%r2531, %r2530};
	shr.u64 	%rd2339, %rd2323, 6;
	xor.b64  	%rd2340, %rd2337, %rd2339;
	xor.b64  	%rd2341, %rd2340, %rd2338;
	shf.r.wrap.b32 	%r2532, %r2141, %r2140, 1;
	shf.r.wrap.b32 	%r2533, %r2140, %r2141, 1;
	mov.b64 	%rd2342, {%r2533, %r2532};
	shf.r.wrap.b32 	%r2534, %r2141, %r2140, 8;
	shf.r.wrap.b32 	%r2535, %r2140, %r2141, 8;
	mov.b64 	%rd2343, {%r2535, %r2534};
	shr.u64 	%rd2344, %rd1754, 7;
	xor.b64  	%rd2345, %rd2342, %rd2344;
	xor.b64  	%rd2346, %rd2345, %rd2343;
	add.s64 	%rd2347, %rd2258, %rd1741;
	add.s64 	%rd2348, %rd2347, %rd2341;
	add.s64 	%rd2349, %rd2348, %rd2346;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2536,%dummy}, %rd2336;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2537}, %rd2336;
	}
	shf.r.wrap.b32 	%r2538, %r2537, %r2536, 19;
	shf.r.wrap.b32 	%r2539, %r2536, %r2537, 19;
	mov.b64 	%rd2350, {%r2539, %r2538};
	shf.l.wrap.b32 	%r2540, %r2536, %r2537, 3;
	shf.l.wrap.b32 	%r2541, %r2537, %r2536, 3;
	mov.b64 	%rd2351, {%r2541, %r2540};
	shr.u64 	%rd2352, %rd2336, 6;
	xor.b64  	%rd2353, %rd2350, %rd2352;
	xor.b64  	%rd2354, %rd2353, %rd2351;
	shf.r.wrap.b32 	%r2542, %r2407, %r2406, 1;
	shf.r.wrap.b32 	%r2543, %r2406, %r2407, 1;
	mov.b64 	%rd2355, {%r2543, %r2542};
	shf.r.wrap.b32 	%r2544, %r2407, %r2406, 8;
	shf.r.wrap.b32 	%r2545, %r2406, %r2407, 8;
	mov.b64 	%rd2356, {%r2545, %r2544};
	shr.u64 	%rd2357, %rd1767, 7;
	xor.b64  	%rd2358, %rd2355, %rd2357;
	xor.b64  	%rd2359, %rd2358, %rd2356;
	add.s64 	%rd2360, %rd2271, %rd1754;
	add.s64 	%rd2361, %rd2360, %rd2354;
	add.s64 	%rd2362, %rd2361, %rd2359;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2546,%dummy}, %rd2349;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2547}, %rd2349;
	}
	shf.r.wrap.b32 	%r2548, %r2547, %r2546, 19;
	shf.r.wrap.b32 	%r2549, %r2546, %r2547, 19;
	mov.b64 	%rd2363, {%r2549, %r2548};
	shf.l.wrap.b32 	%r2550, %r2546, %r2547, 3;
	shf.l.wrap.b32 	%r2551, %r2547, %r2546, 3;
	mov.b64 	%rd2364, {%r2551, %r2550};
	shr.u64 	%rd2365, %rd2349, 6;
	xor.b64  	%rd2366, %rd2363, %rd2365;
	xor.b64  	%rd2367, %rd2366, %rd2364;
	shf.r.wrap.b32 	%r2552, %r2417, %r2416, 1;
	shf.r.wrap.b32 	%r2553, %r2416, %r2417, 1;
	mov.b64 	%rd2368, {%r2553, %r2552};
	shf.r.wrap.b32 	%r2554, %r2417, %r2416, 8;
	shf.r.wrap.b32 	%r2555, %r2416, %r2417, 8;
	mov.b64 	%rd2369, {%r2555, %r2554};
	shr.u64 	%rd2370, %rd1780, 7;
	xor.b64  	%rd2371, %rd2368, %rd2370;
	xor.b64  	%rd2372, %rd2371, %rd2369;
	add.s64 	%rd2373, %rd2284, %rd1767;
	add.s64 	%rd2374, %rd2373, %rd2367;
	add.s64 	%rd2375, %rd2374, %rd2372;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2556,%dummy}, %rd2362;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2557}, %rd2362;
	}
	shf.r.wrap.b32 	%r2558, %r2557, %r2556, 19;
	shf.r.wrap.b32 	%r2559, %r2556, %r2557, 19;
	mov.b64 	%rd2376, {%r2559, %r2558};
	shf.l.wrap.b32 	%r2560, %r2556, %r2557, 3;
	shf.l.wrap.b32 	%r2561, %r2557, %r2556, 3;
	mov.b64 	%rd2377, {%r2561, %r2560};
	shr.u64 	%rd2378, %rd2362, 6;
	xor.b64  	%rd2379, %rd2376, %rd2378;
	xor.b64  	%rd2380, %rd2379, %rd2377;
	shf.r.wrap.b32 	%r2562, %r2427, %r2426, 1;
	shf.r.wrap.b32 	%r2563, %r2426, %r2427, 1;
	mov.b64 	%rd2381, {%r2563, %r2562};
	shf.r.wrap.b32 	%r2564, %r2427, %r2426, 8;
	shf.r.wrap.b32 	%r2565, %r2426, %r2427, 8;
	mov.b64 	%rd2382, {%r2565, %r2564};
	shr.u64 	%rd2383, %rd2193, 7;
	xor.b64  	%rd2384, %rd2381, %rd2383;
	xor.b64  	%rd2385, %rd2384, %rd2382;
	add.s64 	%rd2386, %rd2297, %rd1780;
	add.s64 	%rd2387, %rd2386, %rd2380;
	add.s64 	%rd2388, %rd2387, %rd2385;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2566,%dummy}, %rd2169;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2567}, %rd2169;
	}
	shf.r.wrap.b32 	%r2568, %r2567, %r2566, 14;
	shf.r.wrap.b32 	%r2569, %r2566, %r2567, 14;
	mov.b64 	%rd2389, {%r2569, %r2568};
	shf.r.wrap.b32 	%r2570, %r2567, %r2566, 18;
	shf.r.wrap.b32 	%r2571, %r2566, %r2567, 18;
	mov.b64 	%rd2390, {%r2571, %r2570};
	xor.b64  	%rd2391, %rd2390, %rd2389;
	shf.l.wrap.b32 	%r2572, %r2566, %r2567, 23;
	shf.l.wrap.b32 	%r2573, %r2567, %r2566, 23;
	mov.b64 	%rd2392, {%r2573, %r2572};
	xor.b64  	%rd2393, %rd2391, %rd2392;
	xor.b64  	%rd2394, %rd2144, %rd2119;
	and.b64  	%rd2395, %rd2394, %rd2169;
	xor.b64  	%rd2396, %rd2395, %rd2119;
	add.s64 	%rd2397, %rd2396, %rd2094;
	add.s64 	%rd2398, %rd2397, %rd2193;
	ld.const.u64 	%rd2399, [k_sha512+512];
	add.s64 	%rd2400, %rd2398, %rd2399;
	add.s64 	%rd2401, %rd2400, %rd2393;
	add.s64 	%rd2402, %rd2401, %rd2105;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2574,%dummy}, %rd2180;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2575}, %rd2180;
	}
	shf.r.wrap.b32 	%r2576, %r2575, %r2574, 28;
	shf.r.wrap.b32 	%r2577, %r2574, %r2575, 28;
	mov.b64 	%rd2403, {%r2577, %r2576};
	shf.l.wrap.b32 	%r2578, %r2574, %r2575, 30;
	shf.l.wrap.b32 	%r2579, %r2575, %r2574, 30;
	mov.b64 	%rd2404, {%r2579, %r2578};
	xor.b64  	%rd2405, %rd2404, %rd2403;
	shf.l.wrap.b32 	%r2580, %r2574, %r2575, 25;
	shf.l.wrap.b32 	%r2581, %r2575, %r2574, 25;
	mov.b64 	%rd2406, {%r2581, %r2580};
	xor.b64  	%rd2407, %rd2405, %rd2406;
	xor.b64  	%rd2408, %rd2180, %rd2130;
	xor.b64  	%rd2409, %rd2180, %rd2155;
	and.b64  	%rd2410, %rd2409, %rd2408;
	xor.b64  	%rd2411, %rd2410, %rd2180;
	add.s64 	%rd2412, %rd2401, %rd2411;
	add.s64 	%rd2413, %rd2412, %rd2407;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2582,%dummy}, %rd2402;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2583}, %rd2402;
	}
	shf.r.wrap.b32 	%r2584, %r2583, %r2582, 14;
	shf.r.wrap.b32 	%r2585, %r2582, %r2583, 14;
	mov.b64 	%rd2414, {%r2585, %r2584};
	shf.r.wrap.b32 	%r2586, %r2583, %r2582, 18;
	shf.r.wrap.b32 	%r2587, %r2582, %r2583, 18;
	mov.b64 	%rd2415, {%r2587, %r2586};
	xor.b64  	%rd2416, %rd2415, %rd2414;
	shf.l.wrap.b32 	%r2588, %r2582, %r2583, 23;
	shf.l.wrap.b32 	%r2589, %r2583, %r2582, 23;
	mov.b64 	%rd2417, {%r2589, %r2588};
	xor.b64  	%rd2418, %rd2416, %rd2417;
	xor.b64  	%rd2419, %rd2169, %rd2144;
	and.b64  	%rd2420, %rd2402, %rd2419;
	xor.b64  	%rd2421, %rd2420, %rd2144;
	add.s64 	%rd2422, %rd2206, %rd2119;
	ld.const.u64 	%rd2423, [k_sha512+520];
	add.s64 	%rd2424, %rd2422, %rd2423;
	add.s64 	%rd2425, %rd2424, %rd2421;
	add.s64 	%rd2426, %rd2425, %rd2418;
	add.s64 	%rd2427, %rd2426, %rd2130;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2590,%dummy}, %rd2413;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2591}, %rd2413;
	}
	shf.r.wrap.b32 	%r2592, %r2591, %r2590, 28;
	shf.r.wrap.b32 	%r2593, %r2590, %r2591, 28;
	mov.b64 	%rd2428, {%r2593, %r2592};
	shf.l.wrap.b32 	%r2594, %r2590, %r2591, 30;
	shf.l.wrap.b32 	%r2595, %r2591, %r2590, 30;
	mov.b64 	%rd2429, {%r2595, %r2594};
	xor.b64  	%rd2430, %rd2429, %rd2428;
	shf.l.wrap.b32 	%r2596, %r2590, %r2591, 25;
	shf.l.wrap.b32 	%r2597, %r2591, %r2590, 25;
	mov.b64 	%rd2431, {%r2597, %r2596};
	xor.b64  	%rd2432, %rd2430, %rd2431;
	xor.b64  	%rd2433, %rd2413, %rd2155;
	xor.b64  	%rd2434, %rd2413, %rd2180;
	and.b64  	%rd2435, %rd2434, %rd2433;
	xor.b64  	%rd2436, %rd2435, %rd2413;
	add.s64 	%rd2437, %rd2426, %rd2436;
	add.s64 	%rd2438, %rd2437, %rd2432;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2598,%dummy}, %rd2427;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2599}, %rd2427;
	}
	shf.r.wrap.b32 	%r2600, %r2599, %r2598, 14;
	shf.r.wrap.b32 	%r2601, %r2598, %r2599, 14;
	mov.b64 	%rd2439, {%r2601, %r2600};
	shf.r.wrap.b32 	%r2602, %r2599, %r2598, 18;
	shf.r.wrap.b32 	%r2603, %r2598, %r2599, 18;
	mov.b64 	%rd2440, {%r2603, %r2602};
	xor.b64  	%rd2441, %rd2440, %rd2439;
	shf.l.wrap.b32 	%r2604, %r2598, %r2599, 23;
	shf.l.wrap.b32 	%r2605, %r2599, %r2598, 23;
	mov.b64 	%rd2442, {%r2605, %r2604};
	xor.b64  	%rd2443, %rd2441, %rd2442;
	xor.b64  	%rd2444, %rd2402, %rd2169;
	and.b64  	%rd2445, %rd2427, %rd2444;
	xor.b64  	%rd2446, %rd2445, %rd2169;
	add.s64 	%rd2447, %rd2219, %rd2144;
	ld.const.u64 	%rd2448, [k_sha512+528];
	add.s64 	%rd2449, %rd2447, %rd2448;
	add.s64 	%rd2450, %rd2449, %rd2446;
	add.s64 	%rd2451, %rd2450, %rd2443;
	add.s64 	%rd2452, %rd2451, %rd2155;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2606,%dummy}, %rd2438;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2607}, %rd2438;
	}
	shf.r.wrap.b32 	%r2608, %r2607, %r2606, 28;
	shf.r.wrap.b32 	%r2609, %r2606, %r2607, 28;
	mov.b64 	%rd2453, {%r2609, %r2608};
	shf.l.wrap.b32 	%r2610, %r2606, %r2607, 30;
	shf.l.wrap.b32 	%r2611, %r2607, %r2606, 30;
	mov.b64 	%rd2454, {%r2611, %r2610};
	xor.b64  	%rd2455, %rd2454, %rd2453;
	shf.l.wrap.b32 	%r2612, %r2606, %r2607, 25;
	shf.l.wrap.b32 	%r2613, %r2607, %r2606, 25;
	mov.b64 	%rd2456, {%r2613, %r2612};
	xor.b64  	%rd2457, %rd2455, %rd2456;
	xor.b64  	%rd2458, %rd2438, %rd2180;
	xor.b64  	%rd2459, %rd2438, %rd2413;
	and.b64  	%rd2460, %rd2459, %rd2458;
	xor.b64  	%rd2461, %rd2460, %rd2438;
	add.s64 	%rd2462, %rd2451, %rd2461;
	add.s64 	%rd2463, %rd2462, %rd2457;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2614,%dummy}, %rd2452;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2615}, %rd2452;
	}
	shf.r.wrap.b32 	%r2616, %r2615, %r2614, 14;
	shf.r.wrap.b32 	%r2617, %r2614, %r2615, 14;
	mov.b64 	%rd2464, {%r2617, %r2616};
	shf.r.wrap.b32 	%r2618, %r2615, %r2614, 18;
	shf.r.wrap.b32 	%r2619, %r2614, %r2615, 18;
	mov.b64 	%rd2465, {%r2619, %r2618};
	xor.b64  	%rd2466, %rd2465, %rd2464;
	shf.l.wrap.b32 	%r2620, %r2614, %r2615, 23;
	shf.l.wrap.b32 	%r2621, %r2615, %r2614, 23;
	mov.b64 	%rd2467, {%r2621, %r2620};
	xor.b64  	%rd2468, %rd2466, %rd2467;
	xor.b64  	%rd2469, %rd2427, %rd2402;
	and.b64  	%rd2470, %rd2452, %rd2469;
	xor.b64  	%rd2471, %rd2470, %rd2402;
	add.s64 	%rd2472, %rd2232, %rd2169;
	ld.const.u64 	%rd2473, [k_sha512+536];
	add.s64 	%rd2474, %rd2472, %rd2473;
	add.s64 	%rd2475, %rd2474, %rd2471;
	add.s64 	%rd2476, %rd2475, %rd2468;
	add.s64 	%rd2477, %rd2476, %rd2180;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2622,%dummy}, %rd2463;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2623}, %rd2463;
	}
	shf.r.wrap.b32 	%r2624, %r2623, %r2622, 28;
	shf.r.wrap.b32 	%r2625, %r2622, %r2623, 28;
	mov.b64 	%rd2478, {%r2625, %r2624};
	shf.l.wrap.b32 	%r2626, %r2622, %r2623, 30;
	shf.l.wrap.b32 	%r2627, %r2623, %r2622, 30;
	mov.b64 	%rd2479, {%r2627, %r2626};
	xor.b64  	%rd2480, %rd2479, %rd2478;
	shf.l.wrap.b32 	%r2628, %r2622, %r2623, 25;
	shf.l.wrap.b32 	%r2629, %r2623, %r2622, 25;
	mov.b64 	%rd2481, {%r2629, %r2628};
	xor.b64  	%rd2482, %rd2480, %rd2481;
	xor.b64  	%rd2483, %rd2463, %rd2413;
	xor.b64  	%rd2484, %rd2463, %rd2438;
	and.b64  	%rd2485, %rd2484, %rd2483;
	xor.b64  	%rd2486, %rd2485, %rd2463;
	add.s64 	%rd2487, %rd2476, %rd2486;
	add.s64 	%rd2488, %rd2487, %rd2482;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2630,%dummy}, %rd2477;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2631}, %rd2477;
	}
	shf.r.wrap.b32 	%r2632, %r2631, %r2630, 14;
	shf.r.wrap.b32 	%r2633, %r2630, %r2631, 14;
	mov.b64 	%rd2489, {%r2633, %r2632};
	shf.r.wrap.b32 	%r2634, %r2631, %r2630, 18;
	shf.r.wrap.b32 	%r2635, %r2630, %r2631, 18;
	mov.b64 	%rd2490, {%r2635, %r2634};
	xor.b64  	%rd2491, %rd2490, %rd2489;
	shf.l.wrap.b32 	%r2636, %r2630, %r2631, 23;
	shf.l.wrap.b32 	%r2637, %r2631, %r2630, 23;
	mov.b64 	%rd2492, {%r2637, %r2636};
	xor.b64  	%rd2493, %rd2491, %rd2492;
	xor.b64  	%rd2494, %rd2452, %rd2427;
	and.b64  	%rd2495, %rd2477, %rd2494;
	xor.b64  	%rd2496, %rd2495, %rd2427;
	add.s64 	%rd2497, %rd2402, %rd2245;
	ld.const.u64 	%rd2498, [k_sha512+544];
	add.s64 	%rd2499, %rd2497, %rd2498;
	add.s64 	%rd2500, %rd2499, %rd2496;
	add.s64 	%rd2501, %rd2500, %rd2493;
	add.s64 	%rd2502, %rd2501, %rd2413;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2638,%dummy}, %rd2488;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2639}, %rd2488;
	}
	shf.r.wrap.b32 	%r2640, %r2639, %r2638, 28;
	shf.r.wrap.b32 	%r2641, %r2638, %r2639, 28;
	mov.b64 	%rd2503, {%r2641, %r2640};
	shf.l.wrap.b32 	%r2642, %r2638, %r2639, 30;
	shf.l.wrap.b32 	%r2643, %r2639, %r2638, 30;
	mov.b64 	%rd2504, {%r2643, %r2642};
	xor.b64  	%rd2505, %rd2504, %rd2503;
	shf.l.wrap.b32 	%r2644, %r2638, %r2639, 25;
	shf.l.wrap.b32 	%r2645, %r2639, %r2638, 25;
	mov.b64 	%rd2506, {%r2645, %r2644};
	xor.b64  	%rd2507, %rd2505, %rd2506;
	xor.b64  	%rd2508, %rd2488, %rd2438;
	xor.b64  	%rd2509, %rd2488, %rd2463;
	and.b64  	%rd2510, %rd2509, %rd2508;
	xor.b64  	%rd2511, %rd2510, %rd2488;
	add.s64 	%rd2512, %rd2501, %rd2511;
	add.s64 	%rd2513, %rd2512, %rd2507;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2646,%dummy}, %rd2502;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2647}, %rd2502;
	}
	shf.r.wrap.b32 	%r2648, %r2647, %r2646, 14;
	shf.r.wrap.b32 	%r2649, %r2646, %r2647, 14;
	mov.b64 	%rd2514, {%r2649, %r2648};
	shf.r.wrap.b32 	%r2650, %r2647, %r2646, 18;
	shf.r.wrap.b32 	%r2651, %r2646, %r2647, 18;
	mov.b64 	%rd2515, {%r2651, %r2650};
	xor.b64  	%rd2516, %rd2515, %rd2514;
	shf.l.wrap.b32 	%r2652, %r2646, %r2647, 23;
	shf.l.wrap.b32 	%r2653, %r2647, %r2646, 23;
	mov.b64 	%rd2517, {%r2653, %r2652};
	xor.b64  	%rd2518, %rd2516, %rd2517;
	xor.b64  	%rd2519, %rd2477, %rd2452;
	and.b64  	%rd2520, %rd2502, %rd2519;
	xor.b64  	%rd2521, %rd2520, %rd2452;
	add.s64 	%rd2522, %rd2427, %rd2258;
	ld.const.u64 	%rd2523, [k_sha512+552];
	add.s64 	%rd2524, %rd2522, %rd2523;
	add.s64 	%rd2525, %rd2524, %rd2521;
	add.s64 	%rd2526, %rd2525, %rd2518;
	add.s64 	%rd2527, %rd2526, %rd2438;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2654,%dummy}, %rd2513;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2655}, %rd2513;
	}
	shf.r.wrap.b32 	%r2656, %r2655, %r2654, 28;
	shf.r.wrap.b32 	%r2657, %r2654, %r2655, 28;
	mov.b64 	%rd2528, {%r2657, %r2656};
	shf.l.wrap.b32 	%r2658, %r2654, %r2655, 30;
	shf.l.wrap.b32 	%r2659, %r2655, %r2654, 30;
	mov.b64 	%rd2529, {%r2659, %r2658};
	xor.b64  	%rd2530, %rd2529, %rd2528;
	shf.l.wrap.b32 	%r2660, %r2654, %r2655, 25;
	shf.l.wrap.b32 	%r2661, %r2655, %r2654, 25;
	mov.b64 	%rd2531, {%r2661, %r2660};
	xor.b64  	%rd2532, %rd2530, %rd2531;
	xor.b64  	%rd2533, %rd2513, %rd2463;
	xor.b64  	%rd2534, %rd2513, %rd2488;
	and.b64  	%rd2535, %rd2534, %rd2533;
	xor.b64  	%rd2536, %rd2535, %rd2513;
	add.s64 	%rd2537, %rd2526, %rd2536;
	add.s64 	%rd2538, %rd2537, %rd2532;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2662,%dummy}, %rd2527;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2663}, %rd2527;
	}
	shf.r.wrap.b32 	%r2664, %r2663, %r2662, 14;
	shf.r.wrap.b32 	%r2665, %r2662, %r2663, 14;
	mov.b64 	%rd2539, {%r2665, %r2664};
	shf.r.wrap.b32 	%r2666, %r2663, %r2662, 18;
	shf.r.wrap.b32 	%r2667, %r2662, %r2663, 18;
	mov.b64 	%rd2540, {%r2667, %r2666};
	xor.b64  	%rd2541, %rd2540, %rd2539;
	shf.l.wrap.b32 	%r2668, %r2662, %r2663, 23;
	shf.l.wrap.b32 	%r2669, %r2663, %r2662, 23;
	mov.b64 	%rd2542, {%r2669, %r2668};
	xor.b64  	%rd2543, %rd2541, %rd2542;
	xor.b64  	%rd2544, %rd2502, %rd2477;
	and.b64  	%rd2545, %rd2527, %rd2544;
	xor.b64  	%rd2546, %rd2545, %rd2477;
	add.s64 	%rd2547, %rd2452, %rd2271;
	ld.const.u64 	%rd2548, [k_sha512+560];
	add.s64 	%rd2549, %rd2547, %rd2548;
	add.s64 	%rd2550, %rd2549, %rd2546;
	add.s64 	%rd2551, %rd2550, %rd2543;
	add.s64 	%rd2552, %rd2551, %rd2463;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2670,%dummy}, %rd2538;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2671}, %rd2538;
	}
	shf.r.wrap.b32 	%r2672, %r2671, %r2670, 28;
	shf.r.wrap.b32 	%r2673, %r2670, %r2671, 28;
	mov.b64 	%rd2553, {%r2673, %r2672};
	shf.l.wrap.b32 	%r2674, %r2670, %r2671, 30;
	shf.l.wrap.b32 	%r2675, %r2671, %r2670, 30;
	mov.b64 	%rd2554, {%r2675, %r2674};
	xor.b64  	%rd2555, %rd2554, %rd2553;
	shf.l.wrap.b32 	%r2676, %r2670, %r2671, 25;
	shf.l.wrap.b32 	%r2677, %r2671, %r2670, 25;
	mov.b64 	%rd2556, {%r2677, %r2676};
	xor.b64  	%rd2557, %rd2555, %rd2556;
	xor.b64  	%rd2558, %rd2538, %rd2488;
	xor.b64  	%rd2559, %rd2538, %rd2513;
	and.b64  	%rd2560, %rd2559, %rd2558;
	xor.b64  	%rd2561, %rd2560, %rd2538;
	add.s64 	%rd2562, %rd2551, %rd2561;
	add.s64 	%rd2563, %rd2562, %rd2557;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2678,%dummy}, %rd2552;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2679}, %rd2552;
	}
	shf.r.wrap.b32 	%r2680, %r2679, %r2678, 14;
	shf.r.wrap.b32 	%r2681, %r2678, %r2679, 14;
	mov.b64 	%rd2564, {%r2681, %r2680};
	shf.r.wrap.b32 	%r2682, %r2679, %r2678, 18;
	shf.r.wrap.b32 	%r2683, %r2678, %r2679, 18;
	mov.b64 	%rd2565, {%r2683, %r2682};
	xor.b64  	%rd2566, %rd2565, %rd2564;
	shf.l.wrap.b32 	%r2684, %r2678, %r2679, 23;
	shf.l.wrap.b32 	%r2685, %r2679, %r2678, 23;
	mov.b64 	%rd2567, {%r2685, %r2684};
	xor.b64  	%rd2568, %rd2566, %rd2567;
	xor.b64  	%rd2569, %rd2527, %rd2502;
	and.b64  	%rd2570, %rd2552, %rd2569;
	xor.b64  	%rd2571, %rd2570, %rd2502;
	add.s64 	%rd2572, %rd2477, %rd2284;
	ld.const.u64 	%rd2573, [k_sha512+568];
	add.s64 	%rd2574, %rd2572, %rd2573;
	add.s64 	%rd2575, %rd2574, %rd2571;
	add.s64 	%rd2576, %rd2575, %rd2568;
	add.s64 	%rd2577, %rd2576, %rd2488;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2686,%dummy}, %rd2563;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2687}, %rd2563;
	}
	shf.r.wrap.b32 	%r2688, %r2687, %r2686, 28;
	shf.r.wrap.b32 	%r2689, %r2686, %r2687, 28;
	mov.b64 	%rd2578, {%r2689, %r2688};
	shf.l.wrap.b32 	%r2690, %r2686, %r2687, 30;
	shf.l.wrap.b32 	%r2691, %r2687, %r2686, 30;
	mov.b64 	%rd2579, {%r2691, %r2690};
	xor.b64  	%rd2580, %rd2579, %rd2578;
	shf.l.wrap.b32 	%r2692, %r2686, %r2687, 25;
	shf.l.wrap.b32 	%r2693, %r2687, %r2686, 25;
	mov.b64 	%rd2581, {%r2693, %r2692};
	xor.b64  	%rd2582, %rd2580, %rd2581;
	xor.b64  	%rd2583, %rd2563, %rd2513;
	xor.b64  	%rd2584, %rd2563, %rd2538;
	and.b64  	%rd2585, %rd2584, %rd2583;
	xor.b64  	%rd2586, %rd2585, %rd2563;
	add.s64 	%rd2587, %rd2576, %rd2586;
	add.s64 	%rd2588, %rd2587, %rd2582;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2694,%dummy}, %rd2577;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2695}, %rd2577;
	}
	shf.r.wrap.b32 	%r2696, %r2695, %r2694, 14;
	shf.r.wrap.b32 	%r2697, %r2694, %r2695, 14;
	mov.b64 	%rd2589, {%r2697, %r2696};
	shf.r.wrap.b32 	%r2698, %r2695, %r2694, 18;
	shf.r.wrap.b32 	%r2699, %r2694, %r2695, 18;
	mov.b64 	%rd2590, {%r2699, %r2698};
	xor.b64  	%rd2591, %rd2590, %rd2589;
	shf.l.wrap.b32 	%r2700, %r2694, %r2695, 23;
	shf.l.wrap.b32 	%r2701, %r2695, %r2694, 23;
	mov.b64 	%rd2592, {%r2701, %r2700};
	xor.b64  	%rd2593, %rd2591, %rd2592;
	xor.b64  	%rd2594, %rd2552, %rd2527;
	and.b64  	%rd2595, %rd2577, %rd2594;
	xor.b64  	%rd2596, %rd2595, %rd2527;
	add.s64 	%rd2597, %rd2502, %rd2297;
	ld.const.u64 	%rd2598, [k_sha512+576];
	add.s64 	%rd2599, %rd2597, %rd2598;
	add.s64 	%rd2600, %rd2599, %rd2596;
	add.s64 	%rd2601, %rd2600, %rd2593;
	add.s64 	%rd2602, %rd2601, %rd2513;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2702,%dummy}, %rd2588;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2703}, %rd2588;
	}
	shf.r.wrap.b32 	%r2704, %r2703, %r2702, 28;
	shf.r.wrap.b32 	%r2705, %r2702, %r2703, 28;
	mov.b64 	%rd2603, {%r2705, %r2704};
	shf.l.wrap.b32 	%r2706, %r2702, %r2703, 30;
	shf.l.wrap.b32 	%r2707, %r2703, %r2702, 30;
	mov.b64 	%rd2604, {%r2707, %r2706};
	xor.b64  	%rd2605, %rd2604, %rd2603;
	shf.l.wrap.b32 	%r2708, %r2702, %r2703, 25;
	shf.l.wrap.b32 	%r2709, %r2703, %r2702, 25;
	mov.b64 	%rd2606, {%r2709, %r2708};
	xor.b64  	%rd2607, %rd2605, %rd2606;
	xor.b64  	%rd2608, %rd2588, %rd2538;
	xor.b64  	%rd2609, %rd2588, %rd2563;
	and.b64  	%rd2610, %rd2609, %rd2608;
	xor.b64  	%rd2611, %rd2610, %rd2588;
	add.s64 	%rd2612, %rd2601, %rd2611;
	add.s64 	%rd2613, %rd2612, %rd2607;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2710,%dummy}, %rd2602;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2711}, %rd2602;
	}
	shf.r.wrap.b32 	%r2712, %r2711, %r2710, 14;
	shf.r.wrap.b32 	%r2713, %r2710, %r2711, 14;
	mov.b64 	%rd2614, {%r2713, %r2712};
	shf.r.wrap.b32 	%r2714, %r2711, %r2710, 18;
	shf.r.wrap.b32 	%r2715, %r2710, %r2711, 18;
	mov.b64 	%rd2615, {%r2715, %r2714};
	xor.b64  	%rd2616, %rd2615, %rd2614;
	shf.l.wrap.b32 	%r2716, %r2710, %r2711, 23;
	shf.l.wrap.b32 	%r2717, %r2711, %r2710, 23;
	mov.b64 	%rd2617, {%r2717, %r2716};
	xor.b64  	%rd2618, %rd2616, %rd2617;
	xor.b64  	%rd2619, %rd2577, %rd2552;
	and.b64  	%rd2620, %rd2602, %rd2619;
	xor.b64  	%rd2621, %rd2620, %rd2552;
	add.s64 	%rd2622, %rd2527, %rd2310;
	ld.const.u64 	%rd2623, [k_sha512+584];
	add.s64 	%rd2624, %rd2622, %rd2623;
	add.s64 	%rd2625, %rd2624, %rd2621;
	add.s64 	%rd2626, %rd2625, %rd2618;
	add.s64 	%rd2627, %rd2626, %rd2538;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2718,%dummy}, %rd2613;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2719}, %rd2613;
	}
	shf.r.wrap.b32 	%r2720, %r2719, %r2718, 28;
	shf.r.wrap.b32 	%r2721, %r2718, %r2719, 28;
	mov.b64 	%rd2628, {%r2721, %r2720};
	shf.l.wrap.b32 	%r2722, %r2718, %r2719, 30;
	shf.l.wrap.b32 	%r2723, %r2719, %r2718, 30;
	mov.b64 	%rd2629, {%r2723, %r2722};
	xor.b64  	%rd2630, %rd2629, %rd2628;
	shf.l.wrap.b32 	%r2724, %r2718, %r2719, 25;
	shf.l.wrap.b32 	%r2725, %r2719, %r2718, 25;
	mov.b64 	%rd2631, {%r2725, %r2724};
	xor.b64  	%rd2632, %rd2630, %rd2631;
	xor.b64  	%rd2633, %rd2613, %rd2563;
	xor.b64  	%rd2634, %rd2613, %rd2588;
	and.b64  	%rd2635, %rd2634, %rd2633;
	xor.b64  	%rd2636, %rd2635, %rd2613;
	add.s64 	%rd2637, %rd2626, %rd2636;
	add.s64 	%rd2638, %rd2637, %rd2632;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2726,%dummy}, %rd2627;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2727}, %rd2627;
	}
	shf.r.wrap.b32 	%r2728, %r2727, %r2726, 14;
	shf.r.wrap.b32 	%r2729, %r2726, %r2727, 14;
	mov.b64 	%rd2639, {%r2729, %r2728};
	shf.r.wrap.b32 	%r2730, %r2727, %r2726, 18;
	shf.r.wrap.b32 	%r2731, %r2726, %r2727, 18;
	mov.b64 	%rd2640, {%r2731, %r2730};
	xor.b64  	%rd2641, %rd2640, %rd2639;
	shf.l.wrap.b32 	%r2732, %r2726, %r2727, 23;
	shf.l.wrap.b32 	%r2733, %r2727, %r2726, 23;
	mov.b64 	%rd2642, {%r2733, %r2732};
	xor.b64  	%rd2643, %rd2641, %rd2642;
	xor.b64  	%rd2644, %rd2602, %rd2577;
	and.b64  	%rd2645, %rd2627, %rd2644;
	xor.b64  	%rd2646, %rd2645, %rd2577;
	add.s64 	%rd2647, %rd2552, %rd2323;
	ld.const.u64 	%rd2648, [k_sha512+592];
	add.s64 	%rd2649, %rd2647, %rd2648;
	add.s64 	%rd2650, %rd2649, %rd2646;
	add.s64 	%rd2651, %rd2650, %rd2643;
	add.s64 	%rd2652, %rd2651, %rd2563;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2734,%dummy}, %rd2638;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2735}, %rd2638;
	}
	shf.r.wrap.b32 	%r2736, %r2735, %r2734, 28;
	shf.r.wrap.b32 	%r2737, %r2734, %r2735, 28;
	mov.b64 	%rd2653, {%r2737, %r2736};
	shf.l.wrap.b32 	%r2738, %r2734, %r2735, 30;
	shf.l.wrap.b32 	%r2739, %r2735, %r2734, 30;
	mov.b64 	%rd2654, {%r2739, %r2738};
	xor.b64  	%rd2655, %rd2654, %rd2653;
	shf.l.wrap.b32 	%r2740, %r2734, %r2735, 25;
	shf.l.wrap.b32 	%r2741, %r2735, %r2734, 25;
	mov.b64 	%rd2656, {%r2741, %r2740};
	xor.b64  	%rd2657, %rd2655, %rd2656;
	xor.b64  	%rd2658, %rd2638, %rd2588;
	xor.b64  	%rd2659, %rd2638, %rd2613;
	and.b64  	%rd2660, %rd2659, %rd2658;
	xor.b64  	%rd2661, %rd2660, %rd2638;
	add.s64 	%rd2662, %rd2651, %rd2661;
	add.s64 	%rd2663, %rd2662, %rd2657;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2742,%dummy}, %rd2652;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2743}, %rd2652;
	}
	shf.r.wrap.b32 	%r2744, %r2743, %r2742, 14;
	shf.r.wrap.b32 	%r2745, %r2742, %r2743, 14;
	mov.b64 	%rd2664, {%r2745, %r2744};
	shf.r.wrap.b32 	%r2746, %r2743, %r2742, 18;
	shf.r.wrap.b32 	%r2747, %r2742, %r2743, 18;
	mov.b64 	%rd2665, {%r2747, %r2746};
	xor.b64  	%rd2666, %rd2665, %rd2664;
	shf.l.wrap.b32 	%r2748, %r2742, %r2743, 23;
	shf.l.wrap.b32 	%r2749, %r2743, %r2742, 23;
	mov.b64 	%rd2667, {%r2749, %r2748};
	xor.b64  	%rd2668, %rd2666, %rd2667;
	xor.b64  	%rd2669, %rd2627, %rd2602;
	and.b64  	%rd2670, %rd2652, %rd2669;
	xor.b64  	%rd2671, %rd2670, %rd2602;
	add.s64 	%rd2672, %rd2577, %rd2336;
	ld.const.u64 	%rd2673, [k_sha512+600];
	add.s64 	%rd2674, %rd2672, %rd2673;
	add.s64 	%rd2675, %rd2674, %rd2671;
	add.s64 	%rd2676, %rd2675, %rd2668;
	add.s64 	%rd2677, %rd2676, %rd2588;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2750,%dummy}, %rd2663;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2751}, %rd2663;
	}
	shf.r.wrap.b32 	%r2752, %r2751, %r2750, 28;
	shf.r.wrap.b32 	%r2753, %r2750, %r2751, 28;
	mov.b64 	%rd2678, {%r2753, %r2752};
	shf.l.wrap.b32 	%r2754, %r2750, %r2751, 30;
	shf.l.wrap.b32 	%r2755, %r2751, %r2750, 30;
	mov.b64 	%rd2679, {%r2755, %r2754};
	xor.b64  	%rd2680, %rd2679, %rd2678;
	shf.l.wrap.b32 	%r2756, %r2750, %r2751, 25;
	shf.l.wrap.b32 	%r2757, %r2751, %r2750, 25;
	mov.b64 	%rd2681, {%r2757, %r2756};
	xor.b64  	%rd2682, %rd2680, %rd2681;
	xor.b64  	%rd2683, %rd2663, %rd2613;
	xor.b64  	%rd2684, %rd2663, %rd2638;
	and.b64  	%rd2685, %rd2684, %rd2683;
	xor.b64  	%rd2686, %rd2685, %rd2663;
	add.s64 	%rd2687, %rd2676, %rd2686;
	add.s64 	%rd2688, %rd2687, %rd2682;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2758,%dummy}, %rd2677;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2759}, %rd2677;
	}
	shf.r.wrap.b32 	%r2760, %r2759, %r2758, 14;
	shf.r.wrap.b32 	%r2761, %r2758, %r2759, 14;
	mov.b64 	%rd2689, {%r2761, %r2760};
	shf.r.wrap.b32 	%r2762, %r2759, %r2758, 18;
	shf.r.wrap.b32 	%r2763, %r2758, %r2759, 18;
	mov.b64 	%rd2690, {%r2763, %r2762};
	xor.b64  	%rd2691, %rd2690, %rd2689;
	shf.l.wrap.b32 	%r2764, %r2758, %r2759, 23;
	shf.l.wrap.b32 	%r2765, %r2759, %r2758, 23;
	mov.b64 	%rd2692, {%r2765, %r2764};
	xor.b64  	%rd2693, %rd2691, %rd2692;
	xor.b64  	%rd2694, %rd2652, %rd2627;
	and.b64  	%rd2695, %rd2677, %rd2694;
	xor.b64  	%rd2696, %rd2695, %rd2627;
	add.s64 	%rd2697, %rd2602, %rd2349;
	ld.const.u64 	%rd2698, [k_sha512+608];
	add.s64 	%rd2699, %rd2697, %rd2698;
	add.s64 	%rd2700, %rd2699, %rd2696;
	add.s64 	%rd2701, %rd2700, %rd2693;
	add.s64 	%rd2702, %rd2701, %rd2613;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2766,%dummy}, %rd2688;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2767}, %rd2688;
	}
	shf.r.wrap.b32 	%r2768, %r2767, %r2766, 28;
	shf.r.wrap.b32 	%r2769, %r2766, %r2767, 28;
	mov.b64 	%rd2703, {%r2769, %r2768};
	shf.l.wrap.b32 	%r2770, %r2766, %r2767, 30;
	shf.l.wrap.b32 	%r2771, %r2767, %r2766, 30;
	mov.b64 	%rd2704, {%r2771, %r2770};
	xor.b64  	%rd2705, %rd2704, %rd2703;
	shf.l.wrap.b32 	%r2772, %r2766, %r2767, 25;
	shf.l.wrap.b32 	%r2773, %r2767, %r2766, 25;
	mov.b64 	%rd2706, {%r2773, %r2772};
	xor.b64  	%rd2707, %rd2705, %rd2706;
	xor.b64  	%rd2708, %rd2688, %rd2638;
	xor.b64  	%rd2709, %rd2688, %rd2663;
	and.b64  	%rd2710, %rd2709, %rd2708;
	xor.b64  	%rd2711, %rd2710, %rd2688;
	add.s64 	%rd2712, %rd2701, %rd2711;
	add.s64 	%rd2713, %rd2712, %rd2707;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2774,%dummy}, %rd2702;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2775}, %rd2702;
	}
	shf.r.wrap.b32 	%r2776, %r2775, %r2774, 14;
	shf.r.wrap.b32 	%r2777, %r2774, %r2775, 14;
	mov.b64 	%rd2714, {%r2777, %r2776};
	shf.r.wrap.b32 	%r2778, %r2775, %r2774, 18;
	shf.r.wrap.b32 	%r2779, %r2774, %r2775, 18;
	mov.b64 	%rd2715, {%r2779, %r2778};
	xor.b64  	%rd2716, %rd2715, %rd2714;
	shf.l.wrap.b32 	%r2780, %r2774, %r2775, 23;
	shf.l.wrap.b32 	%r2781, %r2775, %r2774, 23;
	mov.b64 	%rd2717, {%r2781, %r2780};
	xor.b64  	%rd2718, %rd2716, %rd2717;
	xor.b64  	%rd2719, %rd2677, %rd2652;
	and.b64  	%rd2720, %rd2702, %rd2719;
	xor.b64  	%rd2721, %rd2720, %rd2652;
	add.s64 	%rd2722, %rd2627, %rd2362;
	ld.const.u64 	%rd2723, [k_sha512+616];
	add.s64 	%rd2724, %rd2722, %rd2723;
	add.s64 	%rd2725, %rd2724, %rd2721;
	add.s64 	%rd2726, %rd2725, %rd2718;
	add.s64 	%rd2727, %rd2726, %rd2638;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2782,%dummy}, %rd2713;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2783}, %rd2713;
	}
	shf.r.wrap.b32 	%r2784, %r2783, %r2782, 28;
	shf.r.wrap.b32 	%r2785, %r2782, %r2783, 28;
	mov.b64 	%rd2728, {%r2785, %r2784};
	shf.l.wrap.b32 	%r2786, %r2782, %r2783, 30;
	shf.l.wrap.b32 	%r2787, %r2783, %r2782, 30;
	mov.b64 	%rd2729, {%r2787, %r2786};
	xor.b64  	%rd2730, %rd2729, %rd2728;
	shf.l.wrap.b32 	%r2788, %r2782, %r2783, 25;
	shf.l.wrap.b32 	%r2789, %r2783, %r2782, 25;
	mov.b64 	%rd2731, {%r2789, %r2788};
	xor.b64  	%rd2732, %rd2730, %rd2731;
	xor.b64  	%rd2733, %rd2713, %rd2663;
	xor.b64  	%rd2734, %rd2713, %rd2688;
	and.b64  	%rd2735, %rd2734, %rd2733;
	xor.b64  	%rd2736, %rd2735, %rd2713;
	add.s64 	%rd2737, %rd2726, %rd2736;
	add.s64 	%rd2738, %rd2737, %rd2732;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2790,%dummy}, %rd2727;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2791}, %rd2727;
	}
	shf.r.wrap.b32 	%r2792, %r2791, %r2790, 14;
	shf.r.wrap.b32 	%r2793, %r2790, %r2791, 14;
	mov.b64 	%rd2739, {%r2793, %r2792};
	shf.r.wrap.b32 	%r2794, %r2791, %r2790, 18;
	shf.r.wrap.b32 	%r2795, %r2790, %r2791, 18;
	mov.b64 	%rd2740, {%r2795, %r2794};
	xor.b64  	%rd2741, %rd2740, %rd2739;
	shf.l.wrap.b32 	%r2796, %r2790, %r2791, 23;
	shf.l.wrap.b32 	%r2797, %r2791, %r2790, 23;
	mov.b64 	%rd2742, {%r2797, %r2796};
	xor.b64  	%rd2743, %rd2741, %rd2742;
	xor.b64  	%rd2744, %rd2702, %rd2677;
	and.b64  	%rd2745, %rd2727, %rd2744;
	xor.b64  	%rd2746, %rd2745, %rd2677;
	add.s64 	%rd2747, %rd2652, %rd2375;
	ld.const.u64 	%rd2748, [k_sha512+624];
	add.s64 	%rd2749, %rd2747, %rd2748;
	add.s64 	%rd2750, %rd2749, %rd2746;
	add.s64 	%rd2751, %rd2750, %rd2743;
	add.s64 	%rd2752, %rd2751, %rd2663;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2798,%dummy}, %rd2738;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2799}, %rd2738;
	}
	shf.r.wrap.b32 	%r2800, %r2799, %r2798, 28;
	shf.r.wrap.b32 	%r2801, %r2798, %r2799, 28;
	mov.b64 	%rd2753, {%r2801, %r2800};
	shf.l.wrap.b32 	%r2802, %r2798, %r2799, 30;
	shf.l.wrap.b32 	%r2803, %r2799, %r2798, 30;
	mov.b64 	%rd2754, {%r2803, %r2802};
	xor.b64  	%rd2755, %rd2754, %rd2753;
	shf.l.wrap.b32 	%r2804, %r2798, %r2799, 25;
	shf.l.wrap.b32 	%r2805, %r2799, %r2798, 25;
	mov.b64 	%rd2756, {%r2805, %r2804};
	xor.b64  	%rd2757, %rd2755, %rd2756;
	xor.b64  	%rd2758, %rd2738, %rd2688;
	xor.b64  	%rd2759, %rd2738, %rd2713;
	and.b64  	%rd2760, %rd2759, %rd2758;
	xor.b64  	%rd2761, %rd2760, %rd2738;
	add.s64 	%rd2762, %rd2751, %rd2761;
	add.s64 	%rd2763, %rd2762, %rd2757;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2806,%dummy}, %rd2752;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2807}, %rd2752;
	}
	shf.r.wrap.b32 	%r2808, %r2807, %r2806, 14;
	shf.r.wrap.b32 	%r2809, %r2806, %r2807, 14;
	mov.b64 	%rd2764, {%r2809, %r2808};
	shf.r.wrap.b32 	%r2810, %r2807, %r2806, 18;
	shf.r.wrap.b32 	%r2811, %r2806, %r2807, 18;
	mov.b64 	%rd2765, {%r2811, %r2810};
	xor.b64  	%rd2766, %rd2765, %rd2764;
	shf.l.wrap.b32 	%r2812, %r2806, %r2807, 23;
	shf.l.wrap.b32 	%r2813, %r2807, %r2806, 23;
	mov.b64 	%rd2767, {%r2813, %r2812};
	xor.b64  	%rd2768, %rd2766, %rd2767;
	xor.b64  	%rd2769, %rd2727, %rd2702;
	and.b64  	%rd2770, %rd2752, %rd2769;
	xor.b64  	%rd2771, %rd2770, %rd2702;
	add.s64 	%rd2772, %rd2677, %rd2388;
	ld.const.u64 	%rd2773, [k_sha512+632];
	add.s64 	%rd2774, %rd2772, %rd2773;
	add.s64 	%rd2775, %rd2774, %rd2771;
	add.s64 	%rd2776, %rd2775, %rd2768;
	add.s64 	%rd2777, %rd2776, %rd2688;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r2814,%dummy}, %rd2763;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r2815}, %rd2763;
	}
	shf.r.wrap.b32 	%r2816, %r2815, %r2814, 28;
	shf.r.wrap.b32 	%r2817, %r2814, %r2815, 28;
	mov.b64 	%rd2778, {%r2817, %r2816};
	shf.l.wrap.b32 	%r2818, %r2814, %r2815, 30;
	shf.l.wrap.b32 	%r2819, %r2815, %r2814, 30;
	mov.b64 	%rd2779, {%r2819, %r2818};
	xor.b64  	%rd2780, %rd2779, %rd2778;
	shf.l.wrap.b32 	%r2820, %r2814, %r2815, 25;
	shf.l.wrap.b32 	%r2821, %r2815, %r2814, 25;
	mov.b64 	%rd2781, {%r2821, %r2820};
	xor.b64  	%rd2782, %rd2780, %rd2781;
	xor.b64  	%rd2783, %rd2763, %rd2713;
	xor.b64  	%rd2784, %rd2763, %rd2738;
	and.b64  	%rd2785, %rd2784, %rd2783;
	xor.b64  	%rd2786, %rd2785, %rd2763;
	add.s64 	%rd2787, %rd2776, %rd2786;
	add.s64 	%rd2788, %rd2787, %rd2782;
	add.s64 	%rd2789, %rd2788, 7640891576956012808;
	add.s64 	%rd2790, %rd2763, -4942790177534073029;
	add.s64 	%rd2791, %rd2738, 4354685564936845355;
	add.s64 	%rd2792, %rd2713, -6534734903238641935;
	add.s64 	%rd2793, %rd2777, 5840696475078001361;
	add.s64 	%rd2794, %rd2752, -7276294671716946913;
	add.s64 	%rd2795, %rd2727, 2270897969802886507;
	add.s64 	%rd2796, %rd2702, 6620516959819538809;
	shl.b64 	%rd2797, %rd1, 6;
	add.s64 	%rd2798, %rd3, %rd2797;
	st.global.u64 	[%rd2798], %rd2789;
	st.global.u64 	[%rd2798+8], %rd2790;
	st.global.u64 	[%rd2798+16], %rd2791;
	st.global.u64 	[%rd2798+24], %rd2792;
	st.global.u64 	[%rd2798+32], %rd2793;
	st.global.u64 	[%rd2798+40], %rd2794;
	st.global.u64 	[%rd2798+48], %rd2795;
	st.global.u64 	[%rd2798+56], %rd2796;

BB1_48:
	ret;
}

	// .globl	m11300_loop
.entry m11300_loop(
	.param .u64 .ptr .global .align 4 m11300_loop_param_0,
	.param .u64 .ptr .global .align 4 m11300_loop_param_1,
	.param .u64 .ptr .global .align 4 m11300_loop_param_2,
	.param .u64 .ptr .global .align 4 m11300_loop_param_3,
	.param .u64 .ptr .global .align 8 m11300_loop_param_4,
	.param .u64 .ptr .global .align 1 m11300_loop_param_5,
	.param .u64 .ptr .global .align 4 m11300_loop_param_6,
	.param .u64 .ptr .global .align 4 m11300_loop_param_7,
	.param .u64 .ptr .global .align 4 m11300_loop_param_8,
	.param .u64 .ptr .global .align 4 m11300_loop_param_9,
	.param .u64 .ptr .global .align 4 m11300_loop_param_10,
	.param .u64 .ptr .global .align 4 m11300_loop_param_11,
	.param .u64 .ptr .global .align 4 m11300_loop_param_12,
	.param .u64 .ptr .global .align 4 m11300_loop_param_13,
	.param .u64 .ptr .global .align 4 m11300_loop_param_14,
	.param .u64 .ptr .global .align 4 m11300_loop_param_15,
	.param .u64 .ptr .global .align 4 m11300_loop_param_16,
	.param .u64 .ptr .global .align 4 m11300_loop_param_17,
	.param .u64 .ptr .global .align 4 m11300_loop_param_18,
	.param .u64 .ptr .global .align 4 m11300_loop_param_19,
	.param .u64 .ptr .global .align 4 m11300_loop_param_20,
	.param .u64 .ptr .global .align 4 m11300_loop_param_21,
	.param .u64 .ptr .global .align 4 m11300_loop_param_22,
	.param .u64 .ptr .global .align 4 m11300_loop_param_23,
	.param .u32 m11300_loop_param_24,
	.param .u32 m11300_loop_param_25,
	.param .u32 m11300_loop_param_26,
	.param .u32 m11300_loop_param_27,
	.param .u32 m11300_loop_param_28,
	.param .u32 m11300_loop_param_29,
	.param .u32 m11300_loop_param_30,
	.param .u32 m11300_loop_param_31,
	.param .u32 m11300_loop_param_32,
	.param .u32 m11300_loop_param_33,
	.param .u32 m11300_loop_param_34
)
{
	.reg .pred 	%p<4>;
	.reg .b32 	%r<1929>;
	.reg .b64 	%rd<2843>;


	ld.param.u64 	%rd128, [m11300_loop_param_4];
	ld.param.u32 	%r4, [m11300_loop_param_29];
	ld.param.u32 	%r5, [m11300_loop_param_34];
	mov.b32	%r6, %envreg3;
	mov.u32 	%r7, %ctaid.x;
	mov.u32 	%r8, %ntid.x;
	mad.lo.s32 	%r9, %r7, %r8, %r6;
	mov.u32 	%r10, %tid.x;
	add.s32 	%r1, %r9, %r10;
	setp.ge.u32	%p1, %r1, %r5;
	@%p1 bra 	BB2_5;

	mul.wide.u32 	%rd129, %r1, 64;
	add.s64 	%rd1, %rd128, %rd129;
	ld.global.u64 	%rd2842, [%rd1];
	ld.global.u64 	%rd2841, [%rd1+8];
	ld.global.u64 	%rd2840, [%rd1+16];
	ld.global.u64 	%rd2839, [%rd1+24];
	ld.global.u64 	%rd2838, [%rd1+32];
	ld.global.u64 	%rd2837, [%rd1+40];
	ld.global.u64 	%rd2836, [%rd1+48];
	ld.global.u64 	%rd2835, [%rd1+56];
	setp.eq.s32	%p2, %r4, 0;
	@%p2 bra 	BB2_4;

	ld.const.u64 	%rd17, [k_sha512];
	mov.u64 	%rd130, 5840696475078001361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r12,%dummy}, %rd130;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r13}, %rd130;
	}
	shf.r.wrap.b32 	%r14, %r13, %r12, 18;
	shf.r.wrap.b32 	%r15, %r12, %r13, 18;
	mov.b64 	%rd131, {%r15, %r14};
	shf.r.wrap.b32 	%r16, %r13, %r12, 14;
	shf.r.wrap.b32 	%r17, %r12, %r13, 14;
	mov.b64 	%rd132, {%r17, %r16};
	xor.b64  	%rd133, %rd131, %rd132;
	shf.l.wrap.b32 	%r18, %r12, %r13, 23;
	shf.l.wrap.b32 	%r19, %r13, %r12, 23;
	mov.b64 	%rd134, {%r19, %r18};
	xor.b64  	%rd18, %rd133, %rd134;
	mov.u64 	%rd135, 7640891576956012808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r20}, %rd135;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r21,%dummy}, %rd135;
	}
	shf.l.wrap.b32 	%r22, %r21, %r20, 30;
	shf.l.wrap.b32 	%r23, %r20, %r21, 30;
	mov.b64 	%rd136, {%r23, %r22};
	shf.r.wrap.b32 	%r24, %r20, %r21, 28;
	shf.r.wrap.b32 	%r25, %r21, %r20, 28;
	mov.b64 	%rd137, {%r25, %r24};
	xor.b64  	%rd138, %rd136, %rd137;
	shf.l.wrap.b32 	%r26, %r21, %r20, 25;
	shf.l.wrap.b32 	%r27, %r20, %r21, 25;
	mov.b64 	%rd139, {%r27, %r26};
	xor.b64  	%rd19, %rd138, %rd139;
	ld.const.u64 	%rd20, [k_sha512+8];
	ld.const.u64 	%rd21, [k_sha512+16];
	ld.const.u64 	%rd22, [k_sha512+24];
	ld.const.u64 	%rd23, [k_sha512+32];
	ld.const.u64 	%rd24, [k_sha512+40];
	ld.const.u64 	%rd25, [k_sha512+48];
	ld.const.u64 	%rd26, [k_sha512+56];
	ld.const.u64 	%rd27, [k_sha512+64];
	ld.const.u64 	%rd28, [k_sha512+72];
	ld.const.u64 	%rd29, [k_sha512+80];
	ld.const.u64 	%rd30, [k_sha512+88];
	ld.const.u64 	%rd31, [k_sha512+96];
	ld.const.u64 	%rd32, [k_sha512+104];
	ld.const.u64 	%rd33, [k_sha512+112];
	ld.const.u64 	%rd34, [k_sha512+120];
	ld.const.u64 	%rd35, [k_sha512+128];
	ld.const.u64 	%rd36, [k_sha512+136];
	ld.const.u64 	%rd37, [k_sha512+144];
	ld.const.u64 	%rd38, [k_sha512+152];
	ld.const.u64 	%rd39, [k_sha512+160];
	ld.const.u64 	%rd40, [k_sha512+168];
	ld.const.u64 	%rd41, [k_sha512+176];
	ld.const.u64 	%rd42, [k_sha512+184];
	ld.const.u64 	%rd43, [k_sha512+192];
	ld.const.u64 	%rd44, [k_sha512+200];
	ld.const.u64 	%rd45, [k_sha512+208];
	ld.const.u64 	%rd46, [k_sha512+216];
	ld.const.u64 	%rd47, [k_sha512+224];
	ld.const.u64 	%rd48, [k_sha512+232];
	ld.const.u64 	%rd49, [k_sha512+240];
	ld.const.u64 	%rd50, [k_sha512+248];
	ld.const.u64 	%rd51, [k_sha512+256];
	ld.const.u64 	%rd52, [k_sha512+264];
	ld.const.u64 	%rd53, [k_sha512+272];
	ld.const.u64 	%rd54, [k_sha512+280];
	ld.const.u64 	%rd55, [k_sha512+288];
	ld.const.u64 	%rd56, [k_sha512+296];
	ld.const.u64 	%rd57, [k_sha512+304];
	ld.const.u64 	%rd58, [k_sha512+312];
	ld.const.u64 	%rd59, [k_sha512+320];
	ld.const.u64 	%rd60, [k_sha512+328];
	ld.const.u64 	%rd61, [k_sha512+336];
	ld.const.u64 	%rd62, [k_sha512+344];
	ld.const.u64 	%rd63, [k_sha512+352];
	ld.const.u64 	%rd64, [k_sha512+360];
	ld.const.u64 	%rd65, [k_sha512+368];
	ld.const.u64 	%rd66, [k_sha512+376];
	ld.const.u64 	%rd67, [k_sha512+384];
	ld.const.u64 	%rd68, [k_sha512+392];
	ld.const.u64 	%rd69, [k_sha512+400];
	ld.const.u64 	%rd70, [k_sha512+408];
	ld.const.u64 	%rd71, [k_sha512+416];
	ld.const.u64 	%rd72, [k_sha512+424];
	ld.const.u64 	%rd73, [k_sha512+432];
	ld.const.u64 	%rd74, [k_sha512+440];
	ld.const.u64 	%rd75, [k_sha512+448];
	ld.const.u64 	%rd76, [k_sha512+456];
	ld.const.u64 	%rd77, [k_sha512+464];
	ld.const.u64 	%rd78, [k_sha512+472];
	ld.const.u64 	%rd79, [k_sha512+480];
	ld.const.u64 	%rd80, [k_sha512+488];
	ld.const.u64 	%rd81, [k_sha512+496];
	ld.const.u64 	%rd82, [k_sha512+504];
	ld.const.u64 	%rd83, [k_sha512+512];
	ld.const.u64 	%rd84, [k_sha512+520];
	ld.const.u64 	%rd85, [k_sha512+528];
	ld.const.u64 	%rd86, [k_sha512+536];
	ld.const.u64 	%rd87, [k_sha512+544];
	ld.const.u64 	%rd88, [k_sha512+552];
	ld.const.u64 	%rd89, [k_sha512+560];
	ld.const.u64 	%rd90, [k_sha512+568];
	ld.const.u64 	%rd91, [k_sha512+576];
	ld.const.u64 	%rd92, [k_sha512+584];
	ld.const.u64 	%rd93, [k_sha512+592];
	ld.const.u64 	%rd94, [k_sha512+600];
	ld.const.u64 	%rd95, [k_sha512+608];
	ld.const.u64 	%rd96, [k_sha512+616];
	ld.const.u64 	%rd97, [k_sha512+624];
	ld.const.u64 	%rd98, [k_sha512+632];
	mov.u64 	%rd140, 0;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r28}, %rd140;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r29,%dummy}, %rd140;
	}
	shf.l.wrap.b32 	%r30, %r29, %r28, 3;
	shf.l.wrap.b32 	%r31, %r28, %r29, 3;
	mov.b64 	%rd141, {%r31, %r30};
	shf.r.wrap.b32 	%r32, %r28, %r29, 19;
	shf.r.wrap.b32 	%r33, %r29, %r28, 19;
	mov.b64 	%rd142, {%r33, %r32};
	xor.b64  	%rd99, %rd142, %rd141;
	mov.u64 	%rd143, 512;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r34,%dummy}, %rd143;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r35}, %rd143;
	}
	shf.r.wrap.b32 	%r36, %r35, %r34, 19;
	shf.r.wrap.b32 	%r37, %r34, %r35, 19;
	mov.b64 	%rd144, {%r37, %r36};
	shf.l.wrap.b32 	%r38, %r34, %r35, 3;
	shf.l.wrap.b32 	%r39, %r35, %r34, 3;
	mov.b64 	%rd145, {%r39, %r38};
	xor.b64  	%rd146, %rd144, %rd145;
	xor.b64  	%rd100, %rd146, 8;
	mov.u64 	%rd147, -9223372036854775808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r40,%dummy}, %rd147;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r41}, %rd147;
	}
	shf.r.wrap.b32 	%r42, %r41, %r40, 1;
	shf.r.wrap.b32 	%r43, %r40, %r41, 1;
	mov.b64 	%rd148, {%r43, %r42};
	shf.r.wrap.b32 	%r44, %r41, %r40, 8;
	shf.r.wrap.b32 	%r45, %r40, %r41, 8;
	mov.b64 	%rd149, {%r45, %r44};
	xor.b64  	%rd150, %rd148, %rd149;
	xor.b64  	%rd101, %rd150, 72057594037927936;
	shf.r.wrap.b32 	%r46, %r28, %r29, 8;
	shf.r.wrap.b32 	%r47, %r29, %r28, 8;
	mov.b64 	%rd151, {%r47, %r46};
	shf.r.wrap.b32 	%r48, %r28, %r29, 1;
	shf.r.wrap.b32 	%r49, %r29, %r28, 1;
	mov.b64 	%rd152, {%r49, %r48};
	xor.b64  	%rd102, %rd152, %rd151;
	shf.r.wrap.b32 	%r50, %r35, %r34, 1;
	shf.r.wrap.b32 	%r51, %r34, %r35, 1;
	mov.b64 	%rd153, {%r51, %r50};
	shf.r.wrap.b32 	%r52, %r35, %r34, 8;
	shf.r.wrap.b32 	%r53, %r34, %r35, 8;
	mov.b64 	%rd154, {%r53, %r52};
	xor.b64  	%rd155, %rd153, %rd154;
	xor.b64  	%rd103, %rd155, 4;
	mov.u32 	%r1928, 0;

BB2_3:
	add.s64 	%rd156, %rd2842, %rd17;
	add.s64 	%rd157, %rd156, %rd18;
	add.s64 	%rd158, %rd157, %rd19;
	add.s64 	%rd159, %rd157, 2357225248857953701;
	add.s64 	%rd160, %rd158, -5343946410804754465;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r54,%dummy}, %rd159;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r55}, %rd159;
	}
	shf.r.wrap.b32 	%r56, %r55, %r54, 14;
	shf.r.wrap.b32 	%r57, %r54, %r55, 14;
	mov.b64 	%rd161, {%r57, %r56};
	shf.r.wrap.b32 	%r58, %r55, %r54, 18;
	shf.r.wrap.b32 	%r59, %r54, %r55, 18;
	mov.b64 	%rd162, {%r59, %r58};
	xor.b64  	%rd163, %rd162, %rd161;
	shf.l.wrap.b32 	%r60, %r54, %r55, 23;
	shf.l.wrap.b32 	%r61, %r55, %r54, 23;
	mov.b64 	%rd164, {%r61, %r60};
	xor.b64  	%rd165, %rd163, %rd164;
	and.b64  	%rd166, %rd159, -3887949035690463538;
	xor.b64  	%rd167, %rd166, -7276294671716946913;
	add.s64 	%rd168, %rd2841, %rd20;
	add.s64 	%rd169, %rd168, %rd167;
	add.s64 	%rd170, %rd169, %rd165;
	xor.b64  	%rd171, %rd160, -4942790177534073029;
	xor.b64  	%rd172, %rd160, 7640891576956012808;
	and.b64  	%rd173, %rd172, %rd171;
	xor.b64  	%rd174, %rd173, %rd160;
	add.s64 	%rd175, %rd170, %rd174;
	add.s64 	%rd176, %rd170, 6625583534739731862;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r62,%dummy}, %rd160;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r63}, %rd160;
	}
	shf.r.wrap.b32 	%r64, %r63, %r62, 28;
	shf.r.wrap.b32 	%r65, %r62, %r63, 28;
	mov.b64 	%rd177, {%r65, %r64};
	shf.l.wrap.b32 	%r66, %r62, %r63, 30;
	shf.l.wrap.b32 	%r67, %r63, %r62, 30;
	mov.b64 	%rd178, {%r67, %r66};
	xor.b64  	%rd179, %rd178, %rd177;
	shf.l.wrap.b32 	%r68, %r62, %r63, 25;
	shf.l.wrap.b32 	%r69, %r63, %r62, 25;
	mov.b64 	%rd180, {%r69, %r68};
	xor.b64  	%rd181, %rd179, %rd180;
	add.s64 	%rd182, %rd175, %rd181;
	add.s64 	%rd183, %rd182, 2270897969802886507;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r70,%dummy}, %rd176;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r71}, %rd176;
	}
	shf.r.wrap.b32 	%r72, %r71, %r70, 14;
	shf.r.wrap.b32 	%r73, %r70, %r71, 14;
	mov.b64 	%rd184, {%r73, %r72};
	shf.r.wrap.b32 	%r74, %r71, %r70, 18;
	shf.r.wrap.b32 	%r75, %r70, %r71, 18;
	mov.b64 	%rd185, {%r75, %r74};
	xor.b64  	%rd186, %rd185, %rd184;
	shf.l.wrap.b32 	%r76, %r70, %r71, 23;
	shf.l.wrap.b32 	%r77, %r71, %r70, 23;
	mov.b64 	%rd187, {%r77, %r76};
	xor.b64  	%rd188, %rd186, %rd187;
	xor.b64  	%rd189, %rd159, 5840696475078001361;
	and.b64  	%rd190, %rd176, %rd189;
	xor.b64  	%rd191, %rd190, 5840696475078001361;
	add.s64 	%rd192, %rd2840, %rd21;
	add.s64 	%rd193, %rd192, %rd191;
	add.s64 	%rd194, %rd193, %rd188;
	xor.b64  	%rd195, %rd183, 7640891576956012808;
	xor.b64  	%rd196, %rd183, %rd160;
	and.b64  	%rd197, %rd196, %rd195;
	xor.b64  	%rd198, %rd197, %rd183;
	add.s64 	%rd199, %rd194, %rd198;
	add.s64 	%rd200, %rd194, 6227659224458531674;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r78,%dummy}, %rd183;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r79}, %rd183;
	}
	shf.r.wrap.b32 	%r80, %r79, %r78, 28;
	shf.r.wrap.b32 	%r81, %r78, %r79, 28;
	mov.b64 	%rd201, {%r81, %r80};
	shf.l.wrap.b32 	%r82, %r78, %r79, 30;
	shf.l.wrap.b32 	%r83, %r79, %r78, 30;
	mov.b64 	%rd202, {%r83, %r82};
	xor.b64  	%rd203, %rd202, %rd201;
	shf.l.wrap.b32 	%r84, %r78, %r79, 25;
	shf.l.wrap.b32 	%r85, %r79, %r78, 25;
	mov.b64 	%rd204, {%r85, %r84};
	xor.b64  	%rd205, %rd203, %rd204;
	add.s64 	%rd206, %rd199, %rd205;
	add.s64 	%rd207, %rd206, -7276294671716946913;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r86,%dummy}, %rd200;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r87}, %rd200;
	}
	shf.r.wrap.b32 	%r88, %r87, %r86, 14;
	shf.r.wrap.b32 	%r89, %r86, %r87, 14;
	mov.b64 	%rd208, {%r89, %r88};
	shf.r.wrap.b32 	%r90, %r87, %r86, 18;
	shf.r.wrap.b32 	%r91, %r86, %r87, 18;
	mov.b64 	%rd209, {%r91, %r90};
	xor.b64  	%rd210, %rd209, %rd208;
	shf.l.wrap.b32 	%r92, %r86, %r87, 23;
	shf.l.wrap.b32 	%r93, %r87, %r86, 23;
	mov.b64 	%rd211, {%r93, %r92};
	xor.b64  	%rd212, %rd210, %rd211;
	xor.b64  	%rd213, %rd176, %rd159;
	and.b64  	%rd214, %rd200, %rd213;
	xor.b64  	%rd215, %rd214, %rd159;
	add.s64 	%rd216, %rd2839, %rd22;
	add.s64 	%rd217, %rd216, %rd215;
	add.s64 	%rd218, %rd217, %rd212;
	xor.b64  	%rd219, %rd207, %rd160;
	xor.b64  	%rd220, %rd207, %rd183;
	and.b64  	%rd221, %rd220, %rd219;
	xor.b64  	%rd222, %rd221, %rd207;
	add.s64 	%rd223, %rd218, %rd222;
	add.s64 	%rd224, %rd218, -4965156021675537447;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r94,%dummy}, %rd207;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r95}, %rd207;
	}
	shf.r.wrap.b32 	%r96, %r95, %r94, 28;
	shf.r.wrap.b32 	%r97, %r94, %r95, 28;
	mov.b64 	%rd225, {%r97, %r96};
	shf.l.wrap.b32 	%r98, %r94, %r95, 30;
	shf.l.wrap.b32 	%r99, %r95, %r94, 30;
	mov.b64 	%rd226, {%r99, %r98};
	xor.b64  	%rd227, %rd226, %rd225;
	shf.l.wrap.b32 	%r100, %r94, %r95, 25;
	shf.l.wrap.b32 	%r101, %r95, %r94, 25;
	mov.b64 	%rd228, {%r101, %r100};
	xor.b64  	%rd229, %rd227, %rd228;
	add.s64 	%rd230, %rd223, %rd229;
	add.s64 	%rd231, %rd230, 5840696475078001361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r102,%dummy}, %rd224;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r103}, %rd224;
	}
	shf.r.wrap.b32 	%r104, %r103, %r102, 14;
	shf.r.wrap.b32 	%r105, %r102, %r103, 14;
	mov.b64 	%rd232, {%r105, %r104};
	shf.r.wrap.b32 	%r106, %r103, %r102, 18;
	shf.r.wrap.b32 	%r107, %r102, %r103, 18;
	mov.b64 	%rd233, {%r107, %r106};
	xor.b64  	%rd234, %rd233, %rd232;
	shf.l.wrap.b32 	%r108, %r102, %r103, 23;
	shf.l.wrap.b32 	%r109, %r103, %r102, 23;
	mov.b64 	%rd235, {%r109, %r108};
	xor.b64  	%rd236, %rd234, %rd235;
	xor.b64  	%rd237, %rd200, %rd176;
	and.b64  	%rd238, %rd224, %rd237;
	xor.b64  	%rd239, %rd238, %rd176;
	add.s64 	%rd240, %rd159, %rd2838;
	add.s64 	%rd241, %rd240, %rd23;
	add.s64 	%rd242, %rd241, %rd239;
	add.s64 	%rd243, %rd242, %rd236;
	add.s64 	%rd244, %rd243, %rd160;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r110,%dummy}, %rd231;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r111}, %rd231;
	}
	shf.r.wrap.b32 	%r112, %r111, %r110, 28;
	shf.r.wrap.b32 	%r113, %r110, %r111, 28;
	mov.b64 	%rd245, {%r113, %r112};
	shf.l.wrap.b32 	%r114, %r110, %r111, 30;
	shf.l.wrap.b32 	%r115, %r111, %r110, 30;
	mov.b64 	%rd246, {%r115, %r114};
	xor.b64  	%rd247, %rd246, %rd245;
	shf.l.wrap.b32 	%r116, %r110, %r111, 25;
	shf.l.wrap.b32 	%r117, %r111, %r110, 25;
	mov.b64 	%rd248, {%r117, %r116};
	xor.b64  	%rd249, %rd247, %rd248;
	xor.b64  	%rd250, %rd231, %rd183;
	xor.b64  	%rd251, %rd231, %rd207;
	and.b64  	%rd252, %rd251, %rd250;
	xor.b64  	%rd253, %rd252, %rd231;
	add.s64 	%rd254, %rd243, %rd253;
	add.s64 	%rd255, %rd254, %rd249;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r118,%dummy}, %rd244;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r119}, %rd244;
	}
	shf.r.wrap.b32 	%r120, %r119, %r118, 14;
	shf.r.wrap.b32 	%r121, %r118, %r119, 14;
	mov.b64 	%rd256, {%r121, %r120};
	shf.r.wrap.b32 	%r122, %r119, %r118, 18;
	shf.r.wrap.b32 	%r123, %r118, %r119, 18;
	mov.b64 	%rd257, {%r123, %r122};
	xor.b64  	%rd258, %rd257, %rd256;
	shf.l.wrap.b32 	%r124, %r118, %r119, 23;
	shf.l.wrap.b32 	%r125, %r119, %r118, 23;
	mov.b64 	%rd259, {%r125, %r124};
	xor.b64  	%rd260, %rd258, %rd259;
	xor.b64  	%rd261, %rd224, %rd200;
	and.b64  	%rd262, %rd244, %rd261;
	xor.b64  	%rd263, %rd262, %rd200;
	add.s64 	%rd264, %rd176, %rd2837;
	add.s64 	%rd265, %rd264, %rd24;
	add.s64 	%rd266, %rd265, %rd263;
	add.s64 	%rd267, %rd266, %rd260;
	add.s64 	%rd268, %rd267, %rd183;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r126,%dummy}, %rd255;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r127}, %rd255;
	}
	shf.r.wrap.b32 	%r128, %r127, %r126, 28;
	shf.r.wrap.b32 	%r129, %r126, %r127, 28;
	mov.b64 	%rd269, {%r129, %r128};
	shf.l.wrap.b32 	%r130, %r126, %r127, 30;
	shf.l.wrap.b32 	%r131, %r127, %r126, 30;
	mov.b64 	%rd270, {%r131, %r130};
	xor.b64  	%rd271, %rd270, %rd269;
	shf.l.wrap.b32 	%r132, %r126, %r127, 25;
	shf.l.wrap.b32 	%r133, %r127, %r126, 25;
	mov.b64 	%rd272, {%r133, %r132};
	xor.b64  	%rd273, %rd271, %rd272;
	xor.b64  	%rd274, %rd255, %rd207;
	xor.b64  	%rd275, %rd255, %rd231;
	and.b64  	%rd276, %rd275, %rd274;
	xor.b64  	%rd277, %rd276, %rd255;
	add.s64 	%rd278, %rd267, %rd277;
	add.s64 	%rd279, %rd278, %rd273;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r134,%dummy}, %rd268;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r135}, %rd268;
	}
	shf.r.wrap.b32 	%r136, %r135, %r134, 14;
	shf.r.wrap.b32 	%r137, %r134, %r135, 14;
	mov.b64 	%rd280, {%r137, %r136};
	shf.r.wrap.b32 	%r138, %r135, %r134, 18;
	shf.r.wrap.b32 	%r139, %r134, %r135, 18;
	mov.b64 	%rd281, {%r139, %r138};
	xor.b64  	%rd282, %rd281, %rd280;
	shf.l.wrap.b32 	%r140, %r134, %r135, 23;
	shf.l.wrap.b32 	%r141, %r135, %r134, 23;
	mov.b64 	%rd283, {%r141, %r140};
	xor.b64  	%rd284, %rd282, %rd283;
	xor.b64  	%rd285, %rd244, %rd224;
	and.b64  	%rd286, %rd268, %rd285;
	xor.b64  	%rd287, %rd286, %rd224;
	add.s64 	%rd288, %rd200, %rd2836;
	add.s64 	%rd289, %rd288, %rd25;
	add.s64 	%rd290, %rd289, %rd287;
	add.s64 	%rd291, %rd290, %rd284;
	add.s64 	%rd292, %rd291, %rd207;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r142,%dummy}, %rd279;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r143}, %rd279;
	}
	shf.r.wrap.b32 	%r144, %r143, %r142, 28;
	shf.r.wrap.b32 	%r145, %r142, %r143, 28;
	mov.b64 	%rd293, {%r145, %r144};
	shf.l.wrap.b32 	%r146, %r142, %r143, 30;
	shf.l.wrap.b32 	%r147, %r143, %r142, 30;
	mov.b64 	%rd294, {%r147, %r146};
	xor.b64  	%rd295, %rd294, %rd293;
	shf.l.wrap.b32 	%r148, %r142, %r143, 25;
	shf.l.wrap.b32 	%r149, %r143, %r142, 25;
	mov.b64 	%rd296, {%r149, %r148};
	xor.b64  	%rd297, %rd295, %rd296;
	xor.b64  	%rd298, %rd279, %rd231;
	xor.b64  	%rd299, %rd279, %rd255;
	and.b64  	%rd300, %rd299, %rd298;
	xor.b64  	%rd301, %rd300, %rd279;
	add.s64 	%rd302, %rd291, %rd301;
	add.s64 	%rd303, %rd302, %rd297;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r150,%dummy}, %rd292;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r151}, %rd292;
	}
	shf.r.wrap.b32 	%r152, %r151, %r150, 14;
	shf.r.wrap.b32 	%r153, %r150, %r151, 14;
	mov.b64 	%rd304, {%r153, %r152};
	shf.r.wrap.b32 	%r154, %r151, %r150, 18;
	shf.r.wrap.b32 	%r155, %r150, %r151, 18;
	mov.b64 	%rd305, {%r155, %r154};
	xor.b64  	%rd306, %rd305, %rd304;
	shf.l.wrap.b32 	%r156, %r150, %r151, 23;
	shf.l.wrap.b32 	%r157, %r151, %r150, 23;
	mov.b64 	%rd307, {%r157, %r156};
	xor.b64  	%rd308, %rd306, %rd307;
	xor.b64  	%rd309, %rd268, %rd244;
	and.b64  	%rd310, %rd292, %rd309;
	xor.b64  	%rd311, %rd310, %rd244;
	add.s64 	%rd312, %rd224, %rd2835;
	add.s64 	%rd313, %rd312, %rd26;
	add.s64 	%rd314, %rd313, %rd311;
	add.s64 	%rd315, %rd314, %rd308;
	add.s64 	%rd316, %rd315, %rd231;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r158,%dummy}, %rd303;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r159}, %rd303;
	}
	shf.r.wrap.b32 	%r160, %r159, %r158, 28;
	shf.r.wrap.b32 	%r161, %r158, %r159, 28;
	mov.b64 	%rd317, {%r161, %r160};
	shf.l.wrap.b32 	%r162, %r158, %r159, 30;
	shf.l.wrap.b32 	%r163, %r159, %r158, 30;
	mov.b64 	%rd318, {%r163, %r162};
	xor.b64  	%rd319, %rd318, %rd317;
	shf.l.wrap.b32 	%r164, %r158, %r159, 25;
	shf.l.wrap.b32 	%r165, %r159, %r158, 25;
	mov.b64 	%rd320, {%r165, %r164};
	xor.b64  	%rd321, %rd319, %rd320;
	xor.b64  	%rd322, %rd303, %rd255;
	xor.b64  	%rd323, %rd303, %rd279;
	and.b64  	%rd324, %rd323, %rd322;
	xor.b64  	%rd325, %rd324, %rd303;
	add.s64 	%rd326, %rd315, %rd325;
	add.s64 	%rd327, %rd326, %rd321;
	add.s64 	%rd328, %rd27, %rd244;
	xor.b64  	%rd329, %rd328, -9223372036854775808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r166,%dummy}, %rd316;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r167}, %rd316;
	}
	shf.r.wrap.b32 	%r168, %r167, %r166, 14;
	shf.r.wrap.b32 	%r169, %r166, %r167, 14;
	mov.b64 	%rd330, {%r169, %r168};
	shf.r.wrap.b32 	%r170, %r167, %r166, 18;
	shf.r.wrap.b32 	%r171, %r166, %r167, 18;
	mov.b64 	%rd331, {%r171, %r170};
	xor.b64  	%rd332, %rd331, %rd330;
	shf.l.wrap.b32 	%r172, %r166, %r167, 23;
	shf.l.wrap.b32 	%r173, %r167, %r166, 23;
	mov.b64 	%rd333, {%r173, %r172};
	xor.b64  	%rd334, %rd332, %rd333;
	xor.b64  	%rd335, %rd292, %rd268;
	and.b64  	%rd336, %rd316, %rd335;
	xor.b64  	%rd337, %rd336, %rd268;
	add.s64 	%rd338, %rd329, %rd337;
	add.s64 	%rd339, %rd338, %rd334;
	add.s64 	%rd340, %rd339, %rd255;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r174,%dummy}, %rd327;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r175}, %rd327;
	}
	shf.r.wrap.b32 	%r176, %r175, %r174, 28;
	shf.r.wrap.b32 	%r177, %r174, %r175, 28;
	mov.b64 	%rd341, {%r177, %r176};
	shf.l.wrap.b32 	%r178, %r174, %r175, 30;
	shf.l.wrap.b32 	%r179, %r175, %r174, 30;
	mov.b64 	%rd342, {%r179, %r178};
	xor.b64  	%rd343, %rd342, %rd341;
	shf.l.wrap.b32 	%r180, %r174, %r175, 25;
	shf.l.wrap.b32 	%r181, %r175, %r174, 25;
	mov.b64 	%rd344, {%r181, %r180};
	xor.b64  	%rd345, %rd343, %rd344;
	xor.b64  	%rd346, %rd327, %rd279;
	xor.b64  	%rd347, %rd327, %rd303;
	and.b64  	%rd348, %rd347, %rd346;
	xor.b64  	%rd349, %rd348, %rd327;
	add.s64 	%rd350, %rd339, %rd349;
	add.s64 	%rd351, %rd350, %rd345;
	add.s64 	%rd352, %rd28, %rd268;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r182,%dummy}, %rd340;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r183}, %rd340;
	}
	shf.r.wrap.b32 	%r184, %r183, %r182, 14;
	shf.r.wrap.b32 	%r185, %r182, %r183, 14;
	mov.b64 	%rd353, {%r185, %r184};
	shf.r.wrap.b32 	%r186, %r183, %r182, 18;
	shf.r.wrap.b32 	%r187, %r182, %r183, 18;
	mov.b64 	%rd354, {%r187, %r186};
	xor.b64  	%rd355, %rd354, %rd353;
	shf.l.wrap.b32 	%r188, %r182, %r183, 23;
	shf.l.wrap.b32 	%r189, %r183, %r182, 23;
	mov.b64 	%rd356, {%r189, %r188};
	xor.b64  	%rd357, %rd355, %rd356;
	xor.b64  	%rd358, %rd316, %rd292;
	and.b64  	%rd359, %rd340, %rd358;
	xor.b64  	%rd360, %rd359, %rd292;
	add.s64 	%rd361, %rd352, %rd360;
	add.s64 	%rd362, %rd361, %rd357;
	add.s64 	%rd363, %rd362, %rd279;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r190,%dummy}, %rd351;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r191}, %rd351;
	}
	shf.r.wrap.b32 	%r192, %r191, %r190, 28;
	shf.r.wrap.b32 	%r193, %r190, %r191, 28;
	mov.b64 	%rd364, {%r193, %r192};
	shf.l.wrap.b32 	%r194, %r190, %r191, 30;
	shf.l.wrap.b32 	%r195, %r191, %r190, 30;
	mov.b64 	%rd365, {%r195, %r194};
	xor.b64  	%rd366, %rd365, %rd364;
	shf.l.wrap.b32 	%r196, %r190, %r191, 25;
	shf.l.wrap.b32 	%r197, %r191, %r190, 25;
	mov.b64 	%rd367, {%r197, %r196};
	xor.b64  	%rd368, %rd366, %rd367;
	xor.b64  	%rd369, %rd351, %rd303;
	xor.b64  	%rd370, %rd351, %rd327;
	and.b64  	%rd371, %rd370, %rd369;
	xor.b64  	%rd372, %rd371, %rd351;
	add.s64 	%rd373, %rd362, %rd372;
	add.s64 	%rd374, %rd373, %rd368;
	add.s64 	%rd375, %rd29, %rd292;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r198,%dummy}, %rd363;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r199}, %rd363;
	}
	shf.r.wrap.b32 	%r200, %r199, %r198, 14;
	shf.r.wrap.b32 	%r201, %r198, %r199, 14;
	mov.b64 	%rd376, {%r201, %r200};
	shf.r.wrap.b32 	%r202, %r199, %r198, 18;
	shf.r.wrap.b32 	%r203, %r198, %r199, 18;
	mov.b64 	%rd377, {%r203, %r202};
	xor.b64  	%rd378, %rd377, %rd376;
	shf.l.wrap.b32 	%r204, %r198, %r199, 23;
	shf.l.wrap.b32 	%r205, %r199, %r198, 23;
	mov.b64 	%rd379, {%r205, %r204};
	xor.b64  	%rd380, %rd378, %rd379;
	xor.b64  	%rd381, %rd340, %rd316;
	and.b64  	%rd382, %rd363, %rd381;
	xor.b64  	%rd383, %rd382, %rd316;
	add.s64 	%rd384, %rd375, %rd383;
	add.s64 	%rd385, %rd384, %rd380;
	add.s64 	%rd386, %rd385, %rd303;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r206,%dummy}, %rd374;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r207}, %rd374;
	}
	shf.r.wrap.b32 	%r208, %r207, %r206, 28;
	shf.r.wrap.b32 	%r209, %r206, %r207, 28;
	mov.b64 	%rd387, {%r209, %r208};
	shf.l.wrap.b32 	%r210, %r206, %r207, 30;
	shf.l.wrap.b32 	%r211, %r207, %r206, 30;
	mov.b64 	%rd388, {%r211, %r210};
	xor.b64  	%rd389, %rd388, %rd387;
	shf.l.wrap.b32 	%r212, %r206, %r207, 25;
	shf.l.wrap.b32 	%r213, %r207, %r206, 25;
	mov.b64 	%rd390, {%r213, %r212};
	xor.b64  	%rd391, %rd389, %rd390;
	xor.b64  	%rd392, %rd374, %rd327;
	xor.b64  	%rd393, %rd374, %rd351;
	and.b64  	%rd394, %rd393, %rd392;
	xor.b64  	%rd395, %rd394, %rd374;
	add.s64 	%rd396, %rd385, %rd395;
	add.s64 	%rd397, %rd396, %rd391;
	add.s64 	%rd398, %rd30, %rd316;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r214,%dummy}, %rd386;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r215}, %rd386;
	}
	shf.r.wrap.b32 	%r216, %r215, %r214, 14;
	shf.r.wrap.b32 	%r217, %r214, %r215, 14;
	mov.b64 	%rd399, {%r217, %r216};
	shf.r.wrap.b32 	%r218, %r215, %r214, 18;
	shf.r.wrap.b32 	%r219, %r214, %r215, 18;
	mov.b64 	%rd400, {%r219, %r218};
	xor.b64  	%rd401, %rd400, %rd399;
	shf.l.wrap.b32 	%r220, %r214, %r215, 23;
	shf.l.wrap.b32 	%r221, %r215, %r214, 23;
	mov.b64 	%rd402, {%r221, %r220};
	xor.b64  	%rd403, %rd401, %rd402;
	xor.b64  	%rd404, %rd363, %rd340;
	and.b64  	%rd405, %rd386, %rd404;
	xor.b64  	%rd406, %rd405, %rd340;
	add.s64 	%rd407, %rd398, %rd406;
	add.s64 	%rd408, %rd407, %rd403;
	add.s64 	%rd409, %rd408, %rd327;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r222,%dummy}, %rd397;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r223}, %rd397;
	}
	shf.r.wrap.b32 	%r224, %r223, %r222, 28;
	shf.r.wrap.b32 	%r225, %r222, %r223, 28;
	mov.b64 	%rd410, {%r225, %r224};
	shf.l.wrap.b32 	%r226, %r222, %r223, 30;
	shf.l.wrap.b32 	%r227, %r223, %r222, 30;
	mov.b64 	%rd411, {%r227, %r226};
	xor.b64  	%rd412, %rd411, %rd410;
	shf.l.wrap.b32 	%r228, %r222, %r223, 25;
	shf.l.wrap.b32 	%r229, %r223, %r222, 25;
	mov.b64 	%rd413, {%r229, %r228};
	xor.b64  	%rd414, %rd412, %rd413;
	xor.b64  	%rd415, %rd397, %rd351;
	xor.b64  	%rd416, %rd397, %rd374;
	and.b64  	%rd417, %rd416, %rd415;
	xor.b64  	%rd418, %rd417, %rd397;
	add.s64 	%rd419, %rd408, %rd418;
	add.s64 	%rd420, %rd419, %rd414;
	add.s64 	%rd421, %rd31, %rd340;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r230,%dummy}, %rd409;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r231}, %rd409;
	}
	shf.r.wrap.b32 	%r232, %r231, %r230, 14;
	shf.r.wrap.b32 	%r233, %r230, %r231, 14;
	mov.b64 	%rd422, {%r233, %r232};
	shf.r.wrap.b32 	%r234, %r231, %r230, 18;
	shf.r.wrap.b32 	%r235, %r230, %r231, 18;
	mov.b64 	%rd423, {%r235, %r234};
	xor.b64  	%rd424, %rd423, %rd422;
	shf.l.wrap.b32 	%r236, %r230, %r231, 23;
	shf.l.wrap.b32 	%r237, %r231, %r230, 23;
	mov.b64 	%rd425, {%r237, %r236};
	xor.b64  	%rd426, %rd424, %rd425;
	xor.b64  	%rd427, %rd386, %rd363;
	and.b64  	%rd428, %rd409, %rd427;
	xor.b64  	%rd429, %rd428, %rd363;
	add.s64 	%rd430, %rd421, %rd429;
	add.s64 	%rd431, %rd430, %rd426;
	add.s64 	%rd432, %rd431, %rd351;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r238,%dummy}, %rd420;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r239}, %rd420;
	}
	shf.r.wrap.b32 	%r240, %r239, %r238, 28;
	shf.r.wrap.b32 	%r241, %r238, %r239, 28;
	mov.b64 	%rd433, {%r241, %r240};
	shf.l.wrap.b32 	%r242, %r238, %r239, 30;
	shf.l.wrap.b32 	%r243, %r239, %r238, 30;
	mov.b64 	%rd434, {%r243, %r242};
	xor.b64  	%rd435, %rd434, %rd433;
	shf.l.wrap.b32 	%r244, %r238, %r239, 25;
	shf.l.wrap.b32 	%r245, %r239, %r238, 25;
	mov.b64 	%rd436, {%r245, %r244};
	xor.b64  	%rd437, %rd435, %rd436;
	xor.b64  	%rd438, %rd420, %rd374;
	xor.b64  	%rd439, %rd420, %rd397;
	and.b64  	%rd440, %rd439, %rd438;
	xor.b64  	%rd441, %rd440, %rd420;
	add.s64 	%rd442, %rd431, %rd441;
	add.s64 	%rd443, %rd442, %rd437;
	add.s64 	%rd444, %rd32, %rd363;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r246,%dummy}, %rd432;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r247}, %rd432;
	}
	shf.r.wrap.b32 	%r248, %r247, %r246, 14;
	shf.r.wrap.b32 	%r249, %r246, %r247, 14;
	mov.b64 	%rd445, {%r249, %r248};
	shf.r.wrap.b32 	%r250, %r247, %r246, 18;
	shf.r.wrap.b32 	%r251, %r246, %r247, 18;
	mov.b64 	%rd446, {%r251, %r250};
	xor.b64  	%rd447, %rd446, %rd445;
	shf.l.wrap.b32 	%r252, %r246, %r247, 23;
	shf.l.wrap.b32 	%r253, %r247, %r246, 23;
	mov.b64 	%rd448, {%r253, %r252};
	xor.b64  	%rd449, %rd447, %rd448;
	xor.b64  	%rd450, %rd409, %rd386;
	and.b64  	%rd451, %rd432, %rd450;
	xor.b64  	%rd452, %rd451, %rd386;
	add.s64 	%rd453, %rd444, %rd452;
	add.s64 	%rd454, %rd453, %rd449;
	add.s64 	%rd455, %rd454, %rd374;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r254,%dummy}, %rd443;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r255}, %rd443;
	}
	shf.r.wrap.b32 	%r256, %r255, %r254, 28;
	shf.r.wrap.b32 	%r257, %r254, %r255, 28;
	mov.b64 	%rd456, {%r257, %r256};
	shf.l.wrap.b32 	%r258, %r254, %r255, 30;
	shf.l.wrap.b32 	%r259, %r255, %r254, 30;
	mov.b64 	%rd457, {%r259, %r258};
	xor.b64  	%rd458, %rd457, %rd456;
	shf.l.wrap.b32 	%r260, %r254, %r255, 25;
	shf.l.wrap.b32 	%r261, %r255, %r254, 25;
	mov.b64 	%rd459, {%r261, %r260};
	xor.b64  	%rd460, %rd458, %rd459;
	xor.b64  	%rd461, %rd443, %rd397;
	xor.b64  	%rd462, %rd443, %rd420;
	and.b64  	%rd463, %rd462, %rd461;
	xor.b64  	%rd464, %rd463, %rd443;
	add.s64 	%rd465, %rd454, %rd464;
	add.s64 	%rd466, %rd465, %rd460;
	add.s64 	%rd467, %rd33, %rd386;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r262,%dummy}, %rd455;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r263}, %rd455;
	}
	shf.r.wrap.b32 	%r264, %r263, %r262, 14;
	shf.r.wrap.b32 	%r265, %r262, %r263, 14;
	mov.b64 	%rd468, {%r265, %r264};
	shf.r.wrap.b32 	%r266, %r263, %r262, 18;
	shf.r.wrap.b32 	%r267, %r262, %r263, 18;
	mov.b64 	%rd469, {%r267, %r266};
	xor.b64  	%rd470, %rd469, %rd468;
	shf.l.wrap.b32 	%r268, %r262, %r263, 23;
	shf.l.wrap.b32 	%r269, %r263, %r262, 23;
	mov.b64 	%rd471, {%r269, %r268};
	xor.b64  	%rd472, %rd470, %rd471;
	xor.b64  	%rd473, %rd432, %rd409;
	and.b64  	%rd474, %rd455, %rd473;
	xor.b64  	%rd475, %rd474, %rd409;
	add.s64 	%rd476, %rd467, %rd475;
	add.s64 	%rd477, %rd476, %rd472;
	add.s64 	%rd478, %rd477, %rd397;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r270,%dummy}, %rd466;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r271}, %rd466;
	}
	shf.r.wrap.b32 	%r272, %r271, %r270, 28;
	shf.r.wrap.b32 	%r273, %r270, %r271, 28;
	mov.b64 	%rd479, {%r273, %r272};
	shf.l.wrap.b32 	%r274, %r270, %r271, 30;
	shf.l.wrap.b32 	%r275, %r271, %r270, 30;
	mov.b64 	%rd480, {%r275, %r274};
	xor.b64  	%rd481, %rd480, %rd479;
	shf.l.wrap.b32 	%r276, %r270, %r271, 25;
	shf.l.wrap.b32 	%r277, %r271, %r270, 25;
	mov.b64 	%rd482, {%r277, %r276};
	xor.b64  	%rd483, %rd481, %rd482;
	xor.b64  	%rd484, %rd466, %rd420;
	xor.b64  	%rd485, %rd466, %rd443;
	and.b64  	%rd486, %rd485, %rd484;
	xor.b64  	%rd487, %rd486, %rd466;
	add.s64 	%rd488, %rd477, %rd487;
	add.s64 	%rd489, %rd488, %rd483;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r278,%dummy}, %rd478;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r279}, %rd478;
	}
	shf.r.wrap.b32 	%r280, %r279, %r278, 14;
	shf.r.wrap.b32 	%r281, %r278, %r279, 14;
	mov.b64 	%rd490, {%r281, %r280};
	shf.r.wrap.b32 	%r282, %r279, %r278, 18;
	shf.r.wrap.b32 	%r283, %r278, %r279, 18;
	mov.b64 	%rd491, {%r283, %r282};
	xor.b64  	%rd492, %rd491, %rd490;
	shf.l.wrap.b32 	%r284, %r278, %r279, 23;
	shf.l.wrap.b32 	%r285, %r279, %r278, 23;
	mov.b64 	%rd493, {%r285, %r284};
	xor.b64  	%rd494, %rd492, %rd493;
	xor.b64  	%rd495, %rd455, %rd432;
	and.b64  	%rd496, %rd478, %rd495;
	xor.b64  	%rd497, %rd496, %rd432;
	add.s64 	%rd498, %rd409, %rd34;
	add.s64 	%rd499, %rd498, %rd497;
	add.s64 	%rd500, %rd499, %rd494;
	add.s64 	%rd501, %rd500, 512;
	add.s64 	%rd502, %rd501, %rd420;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r286,%dummy}, %rd489;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r287}, %rd489;
	}
	shf.r.wrap.b32 	%r288, %r287, %r286, 28;
	shf.r.wrap.b32 	%r289, %r286, %r287, 28;
	mov.b64 	%rd503, {%r289, %r288};
	shf.l.wrap.b32 	%r290, %r286, %r287, 30;
	shf.l.wrap.b32 	%r291, %r287, %r286, 30;
	mov.b64 	%rd504, {%r291, %r290};
	xor.b64  	%rd505, %rd504, %rd503;
	shf.l.wrap.b32 	%r292, %r286, %r287, 25;
	shf.l.wrap.b32 	%r293, %r287, %r286, 25;
	mov.b64 	%rd506, {%r293, %r292};
	xor.b64  	%rd507, %rd505, %rd506;
	xor.b64  	%rd508, %rd489, %rd443;
	xor.b64  	%rd509, %rd489, %rd466;
	and.b64  	%rd510, %rd509, %rd508;
	xor.b64  	%rd511, %rd510, %rd489;
	add.s64 	%rd512, %rd501, %rd511;
	add.s64 	%rd513, %rd512, %rd507;
	shr.u64 	%rd514, %rd2841, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r294,%dummy}, %rd2841;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r295}, %rd2841;
	}
	shf.r.wrap.b32 	%r296, %r295, %r294, 1;
	shf.r.wrap.b32 	%r297, %r294, %r295, 1;
	mov.b64 	%rd515, {%r297, %r296};
	xor.b64  	%rd516, %rd515, %rd514;
	shf.r.wrap.b32 	%r298, %r295, %r294, 8;
	shf.r.wrap.b32 	%r299, %r294, %r295, 8;
	mov.b64 	%rd517, {%r299, %r298};
	xor.b64  	%rd518, %rd516, %rd517;
	add.s64 	%rd519, %rd2842, %rd99;
	add.s64 	%rd520, %rd519, %rd518;
	shr.u64 	%rd521, %rd2840, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r300,%dummy}, %rd2840;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r301}, %rd2840;
	}
	shf.r.wrap.b32 	%r302, %r301, %r300, 1;
	shf.r.wrap.b32 	%r303, %r300, %r301, 1;
	mov.b64 	%rd522, {%r303, %r302};
	xor.b64  	%rd523, %rd522, %rd521;
	shf.r.wrap.b32 	%r304, %r301, %r300, 8;
	shf.r.wrap.b32 	%r305, %r300, %r301, 8;
	mov.b64 	%rd524, {%r305, %r304};
	xor.b64  	%rd525, %rd523, %rd524;
	add.s64 	%rd526, %rd2841, %rd100;
	add.s64 	%rd527, %rd526, %rd525;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r306,%dummy}, %rd520;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r307}, %rd520;
	}
	shf.r.wrap.b32 	%r308, %r307, %r306, 19;
	shf.r.wrap.b32 	%r309, %r306, %r307, 19;
	mov.b64 	%rd528, {%r309, %r308};
	shf.l.wrap.b32 	%r310, %r306, %r307, 3;
	shf.l.wrap.b32 	%r311, %r307, %r306, 3;
	mov.b64 	%rd529, {%r311, %r310};
	shr.u64 	%rd530, %rd520, 6;
	xor.b64  	%rd531, %rd528, %rd530;
	xor.b64  	%rd532, %rd531, %rd529;
	shr.u64 	%rd533, %rd2839, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r312,%dummy}, %rd2839;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r313}, %rd2839;
	}
	shf.r.wrap.b32 	%r314, %r313, %r312, 1;
	shf.r.wrap.b32 	%r315, %r312, %r313, 1;
	mov.b64 	%rd534, {%r315, %r314};
	xor.b64  	%rd535, %rd534, %rd533;
	shf.r.wrap.b32 	%r316, %r313, %r312, 8;
	shf.r.wrap.b32 	%r317, %r312, %r313, 8;
	mov.b64 	%rd536, {%r317, %r316};
	xor.b64  	%rd537, %rd535, %rd536;
	add.s64 	%rd538, %rd2840, %rd532;
	add.s64 	%rd539, %rd538, %rd537;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r318,%dummy}, %rd527;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r319}, %rd527;
	}
	shf.r.wrap.b32 	%r320, %r319, %r318, 19;
	shf.r.wrap.b32 	%r321, %r318, %r319, 19;
	mov.b64 	%rd540, {%r321, %r320};
	shf.l.wrap.b32 	%r322, %r318, %r319, 3;
	shf.l.wrap.b32 	%r323, %r319, %r318, 3;
	mov.b64 	%rd541, {%r323, %r322};
	shr.u64 	%rd542, %rd527, 6;
	xor.b64  	%rd543, %rd540, %rd542;
	xor.b64  	%rd544, %rd543, %rd541;
	shr.u64 	%rd545, %rd2838, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r324,%dummy}, %rd2838;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r325}, %rd2838;
	}
	shf.r.wrap.b32 	%r326, %r325, %r324, 1;
	shf.r.wrap.b32 	%r327, %r324, %r325, 1;
	mov.b64 	%rd546, {%r327, %r326};
	xor.b64  	%rd547, %rd546, %rd545;
	shf.r.wrap.b32 	%r328, %r325, %r324, 8;
	shf.r.wrap.b32 	%r329, %r324, %r325, 8;
	mov.b64 	%rd548, {%r329, %r328};
	xor.b64  	%rd549, %rd547, %rd548;
	add.s64 	%rd550, %rd2839, %rd544;
	add.s64 	%rd551, %rd550, %rd549;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r330,%dummy}, %rd539;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r331}, %rd539;
	}
	shf.r.wrap.b32 	%r332, %r331, %r330, 19;
	shf.r.wrap.b32 	%r333, %r330, %r331, 19;
	mov.b64 	%rd552, {%r333, %r332};
	shf.l.wrap.b32 	%r334, %r330, %r331, 3;
	shf.l.wrap.b32 	%r335, %r331, %r330, 3;
	mov.b64 	%rd553, {%r335, %r334};
	shr.u64 	%rd554, %rd539, 6;
	xor.b64  	%rd555, %rd552, %rd554;
	xor.b64  	%rd556, %rd555, %rd553;
	shr.u64 	%rd557, %rd2837, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r336,%dummy}, %rd2837;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r337}, %rd2837;
	}
	shf.r.wrap.b32 	%r338, %r337, %r336, 1;
	shf.r.wrap.b32 	%r339, %r336, %r337, 1;
	mov.b64 	%rd558, {%r339, %r338};
	xor.b64  	%rd559, %rd558, %rd557;
	shf.r.wrap.b32 	%r340, %r337, %r336, 8;
	shf.r.wrap.b32 	%r341, %r336, %r337, 8;
	mov.b64 	%rd560, {%r341, %r340};
	xor.b64  	%rd561, %rd559, %rd560;
	add.s64 	%rd562, %rd2838, %rd556;
	add.s64 	%rd563, %rd562, %rd561;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r342,%dummy}, %rd551;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r343}, %rd551;
	}
	shf.r.wrap.b32 	%r344, %r343, %r342, 19;
	shf.r.wrap.b32 	%r345, %r342, %r343, 19;
	mov.b64 	%rd564, {%r345, %r344};
	shf.l.wrap.b32 	%r346, %r342, %r343, 3;
	shf.l.wrap.b32 	%r347, %r343, %r342, 3;
	mov.b64 	%rd565, {%r347, %r346};
	shr.u64 	%rd566, %rd551, 6;
	xor.b64  	%rd567, %rd564, %rd566;
	xor.b64  	%rd568, %rd567, %rd565;
	shr.u64 	%rd569, %rd2836, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r348,%dummy}, %rd2836;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r349}, %rd2836;
	}
	shf.r.wrap.b32 	%r350, %r349, %r348, 1;
	shf.r.wrap.b32 	%r351, %r348, %r349, 1;
	mov.b64 	%rd570, {%r351, %r350};
	xor.b64  	%rd571, %rd570, %rd569;
	shf.r.wrap.b32 	%r352, %r349, %r348, 8;
	shf.r.wrap.b32 	%r353, %r348, %r349, 8;
	mov.b64 	%rd572, {%r353, %r352};
	xor.b64  	%rd573, %rd571, %rd572;
	add.s64 	%rd574, %rd2837, %rd568;
	add.s64 	%rd575, %rd574, %rd573;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r354,%dummy}, %rd563;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r355}, %rd563;
	}
	shf.r.wrap.b32 	%r356, %r355, %r354, 19;
	shf.r.wrap.b32 	%r357, %r354, %r355, 19;
	mov.b64 	%rd576, {%r357, %r356};
	shf.l.wrap.b32 	%r358, %r354, %r355, 3;
	shf.l.wrap.b32 	%r359, %r355, %r354, 3;
	mov.b64 	%rd577, {%r359, %r358};
	shr.u64 	%rd578, %rd563, 6;
	xor.b64  	%rd579, %rd576, %rd578;
	xor.b64  	%rd580, %rd579, %rd577;
	shr.u64 	%rd581, %rd2835, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r360,%dummy}, %rd2835;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r361}, %rd2835;
	}
	shf.r.wrap.b32 	%r362, %r361, %r360, 1;
	shf.r.wrap.b32 	%r363, %r360, %r361, 1;
	mov.b64 	%rd582, {%r363, %r362};
	xor.b64  	%rd583, %rd582, %rd581;
	shf.r.wrap.b32 	%r364, %r361, %r360, 8;
	shf.r.wrap.b32 	%r365, %r360, %r361, 8;
	mov.b64 	%rd584, {%r365, %r364};
	xor.b64  	%rd585, %rd583, %rd584;
	add.s64 	%rd586, %rd2836, %rd580;
	add.s64 	%rd587, %rd586, %rd585;
	add.s64 	%rd588, %rd587, 512;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r366,%dummy}, %rd575;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r367}, %rd575;
	}
	shf.r.wrap.b32 	%r368, %r367, %r366, 19;
	shf.r.wrap.b32 	%r369, %r366, %r367, 19;
	mov.b64 	%rd589, {%r369, %r368};
	shf.l.wrap.b32 	%r370, %r366, %r367, 3;
	shf.l.wrap.b32 	%r371, %r367, %r366, 3;
	mov.b64 	%rd590, {%r371, %r370};
	shr.u64 	%rd591, %rd575, 6;
	xor.b64  	%rd592, %rd589, %rd591;
	xor.b64  	%rd593, %rd592, %rd590;
	add.s64 	%rd594, %rd520, %rd2835;
	add.s64 	%rd595, %rd594, %rd593;
	add.s64 	%rd596, %rd595, %rd101;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r372,%dummy}, %rd588;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r373}, %rd588;
	}
	shf.r.wrap.b32 	%r374, %r373, %r372, 19;
	shf.r.wrap.b32 	%r375, %r372, %r373, 19;
	mov.b64 	%rd597, {%r375, %r374};
	shf.l.wrap.b32 	%r376, %r372, %r373, 3;
	shf.l.wrap.b32 	%r377, %r373, %r372, 3;
	mov.b64 	%rd598, {%r377, %r376};
	shr.u64 	%rd599, %rd588, 6;
	xor.b64  	%rd600, %rd597, %rd599;
	xor.b64  	%rd601, %rd600, %rd598;
	xor.b64  	%rd602, %rd527, -9223372036854775808;
	add.s64 	%rd603, %rd602, %rd601;
	add.s64 	%rd604, %rd603, %rd102;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r378,%dummy}, %rd596;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r379}, %rd596;
	}
	shf.r.wrap.b32 	%r380, %r379, %r378, 19;
	shf.r.wrap.b32 	%r381, %r378, %r379, 19;
	mov.b64 	%rd605, {%r381, %r380};
	shf.l.wrap.b32 	%r382, %r378, %r379, 3;
	shf.l.wrap.b32 	%r383, %r379, %r378, 3;
	mov.b64 	%rd606, {%r383, %r382};
	shr.u64 	%rd607, %rd596, 6;
	xor.b64  	%rd608, %rd605, %rd607;
	xor.b64  	%rd609, %rd608, %rd606;
	add.s64 	%rd610, %rd539, %rd609;
	add.s64 	%rd611, %rd610, %rd102;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r384,%dummy}, %rd604;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r385}, %rd604;
	}
	shf.r.wrap.b32 	%r386, %r385, %r384, 19;
	shf.r.wrap.b32 	%r387, %r384, %r385, 19;
	mov.b64 	%rd612, {%r387, %r386};
	shf.l.wrap.b32 	%r388, %r384, %r385, 3;
	shf.l.wrap.b32 	%r389, %r385, %r384, 3;
	mov.b64 	%rd613, {%r389, %r388};
	shr.u64 	%rd614, %rd604, 6;
	xor.b64  	%rd615, %rd612, %rd614;
	xor.b64  	%rd616, %rd615, %rd613;
	add.s64 	%rd617, %rd551, %rd616;
	add.s64 	%rd618, %rd617, %rd102;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r390,%dummy}, %rd611;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r391}, %rd611;
	}
	shf.r.wrap.b32 	%r392, %r391, %r390, 19;
	shf.r.wrap.b32 	%r393, %r390, %r391, 19;
	mov.b64 	%rd619, {%r393, %r392};
	shf.l.wrap.b32 	%r394, %r390, %r391, 3;
	shf.l.wrap.b32 	%r395, %r391, %r390, 3;
	mov.b64 	%rd620, {%r395, %r394};
	shr.u64 	%rd621, %rd611, 6;
	xor.b64  	%rd622, %rd619, %rd621;
	xor.b64  	%rd623, %rd622, %rd620;
	add.s64 	%rd624, %rd563, %rd623;
	add.s64 	%rd625, %rd624, %rd102;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r396,%dummy}, %rd618;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r397}, %rd618;
	}
	shf.r.wrap.b32 	%r398, %r397, %r396, 19;
	shf.r.wrap.b32 	%r399, %r396, %r397, 19;
	mov.b64 	%rd626, {%r399, %r398};
	shf.l.wrap.b32 	%r400, %r396, %r397, 3;
	shf.l.wrap.b32 	%r401, %r397, %r396, 3;
	mov.b64 	%rd627, {%r401, %r400};
	shr.u64 	%rd628, %rd618, 6;
	xor.b64  	%rd629, %rd626, %rd628;
	xor.b64  	%rd630, %rd629, %rd627;
	add.s64 	%rd631, %rd575, %rd630;
	add.s64 	%rd632, %rd631, %rd102;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r402,%dummy}, %rd625;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r403}, %rd625;
	}
	shf.r.wrap.b32 	%r404, %r403, %r402, 19;
	shf.r.wrap.b32 	%r405, %r402, %r403, 19;
	mov.b64 	%rd633, {%r405, %r404};
	shf.l.wrap.b32 	%r406, %r402, %r403, 3;
	shf.l.wrap.b32 	%r407, %r403, %r402, 3;
	mov.b64 	%rd634, {%r407, %r406};
	shr.u64 	%rd635, %rd625, 6;
	xor.b64  	%rd636, %rd633, %rd635;
	xor.b64  	%rd637, %rd636, %rd634;
	add.s64 	%rd638, %rd588, %rd637;
	add.s64 	%rd639, %rd638, %rd102;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r408,%dummy}, %rd632;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r409}, %rd632;
	}
	shf.r.wrap.b32 	%r410, %r409, %r408, 19;
	shf.r.wrap.b32 	%r411, %r408, %r409, 19;
	mov.b64 	%rd640, {%r411, %r410};
	shf.l.wrap.b32 	%r412, %r408, %r409, 3;
	shf.l.wrap.b32 	%r413, %r409, %r408, 3;
	mov.b64 	%rd641, {%r413, %r412};
	shr.u64 	%rd642, %rd632, 6;
	xor.b64  	%rd643, %rd640, %rd642;
	xor.b64  	%rd644, %rd643, %rd641;
	add.s64 	%rd645, %rd596, %rd644;
	add.s64 	%rd646, %rd645, %rd103;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r414,%dummy}, %rd639;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r415}, %rd639;
	}
	shf.r.wrap.b32 	%r416, %r415, %r414, 19;
	shf.r.wrap.b32 	%r417, %r414, %r415, 19;
	mov.b64 	%rd647, {%r417, %r416};
	shf.l.wrap.b32 	%r418, %r414, %r415, 3;
	shf.l.wrap.b32 	%r419, %r415, %r414, 3;
	mov.b64 	%rd648, {%r419, %r418};
	shr.u64 	%rd649, %rd639, 6;
	xor.b64  	%rd650, %rd647, %rd649;
	xor.b64  	%rd651, %rd650, %rd648;
	shf.r.wrap.b32 	%r420, %r307, %r306, 1;
	shf.r.wrap.b32 	%r421, %r306, %r307, 1;
	mov.b64 	%rd652, {%r421, %r420};
	shf.r.wrap.b32 	%r422, %r307, %r306, 8;
	shf.r.wrap.b32 	%r423, %r306, %r307, 8;
	mov.b64 	%rd653, {%r423, %r422};
	shr.u64 	%rd654, %rd520, 7;
	xor.b64  	%rd655, %rd652, %rd654;
	xor.b64  	%rd656, %rd655, %rd653;
	add.s64 	%rd657, %rd604, %rd651;
	add.s64 	%rd658, %rd657, %rd656;
	add.s64 	%rd659, %rd658, 512;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r424,%dummy}, %rd502;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r425}, %rd502;
	}
	shf.r.wrap.b32 	%r426, %r425, %r424, 14;
	shf.r.wrap.b32 	%r427, %r424, %r425, 14;
	mov.b64 	%rd660, {%r427, %r426};
	shf.r.wrap.b32 	%r428, %r425, %r424, 18;
	shf.r.wrap.b32 	%r429, %r424, %r425, 18;
	mov.b64 	%rd661, {%r429, %r428};
	xor.b64  	%rd662, %rd661, %rd660;
	shf.l.wrap.b32 	%r430, %r424, %r425, 23;
	shf.l.wrap.b32 	%r431, %r425, %r424, 23;
	mov.b64 	%rd663, {%r431, %r430};
	xor.b64  	%rd664, %rd662, %rd663;
	xor.b64  	%rd665, %rd478, %rd455;
	and.b64  	%rd666, %rd665, %rd502;
	xor.b64  	%rd667, %rd666, %rd455;
	add.s64 	%rd668, %rd667, %rd432;
	add.s64 	%rd669, %rd668, %rd520;
	add.s64 	%rd670, %rd669, %rd35;
	add.s64 	%rd671, %rd670, %rd664;
	add.s64 	%rd672, %rd671, %rd443;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r432,%dummy}, %rd513;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r433}, %rd513;
	}
	shf.r.wrap.b32 	%r434, %r433, %r432, 28;
	shf.r.wrap.b32 	%r435, %r432, %r433, 28;
	mov.b64 	%rd673, {%r435, %r434};
	shf.l.wrap.b32 	%r436, %r432, %r433, 30;
	shf.l.wrap.b32 	%r437, %r433, %r432, 30;
	mov.b64 	%rd674, {%r437, %r436};
	xor.b64  	%rd675, %rd674, %rd673;
	shf.l.wrap.b32 	%r438, %r432, %r433, 25;
	shf.l.wrap.b32 	%r439, %r433, %r432, 25;
	mov.b64 	%rd676, {%r439, %r438};
	xor.b64  	%rd677, %rd675, %rd676;
	xor.b64  	%rd678, %rd513, %rd466;
	xor.b64  	%rd679, %rd513, %rd489;
	and.b64  	%rd680, %rd679, %rd678;
	xor.b64  	%rd681, %rd680, %rd513;
	add.s64 	%rd682, %rd671, %rd681;
	add.s64 	%rd683, %rd682, %rd677;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r440,%dummy}, %rd672;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r441}, %rd672;
	}
	shf.r.wrap.b32 	%r442, %r441, %r440, 14;
	shf.r.wrap.b32 	%r443, %r440, %r441, 14;
	mov.b64 	%rd684, {%r443, %r442};
	shf.r.wrap.b32 	%r444, %r441, %r440, 18;
	shf.r.wrap.b32 	%r445, %r440, %r441, 18;
	mov.b64 	%rd685, {%r445, %r444};
	xor.b64  	%rd686, %rd685, %rd684;
	shf.l.wrap.b32 	%r446, %r440, %r441, 23;
	shf.l.wrap.b32 	%r447, %r441, %r440, 23;
	mov.b64 	%rd687, {%r447, %r446};
	xor.b64  	%rd688, %rd686, %rd687;
	xor.b64  	%rd689, %rd502, %rd478;
	and.b64  	%rd690, %rd672, %rd689;
	xor.b64  	%rd691, %rd690, %rd478;
	add.s64 	%rd692, %rd527, %rd455;
	add.s64 	%rd693, %rd692, %rd36;
	add.s64 	%rd694, %rd693, %rd691;
	add.s64 	%rd695, %rd694, %rd688;
	add.s64 	%rd696, %rd695, %rd466;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r448,%dummy}, %rd683;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r449}, %rd683;
	}
	shf.r.wrap.b32 	%r450, %r449, %r448, 28;
	shf.r.wrap.b32 	%r451, %r448, %r449, 28;
	mov.b64 	%rd697, {%r451, %r450};
	shf.l.wrap.b32 	%r452, %r448, %r449, 30;
	shf.l.wrap.b32 	%r453, %r449, %r448, 30;
	mov.b64 	%rd698, {%r453, %r452};
	xor.b64  	%rd699, %rd698, %rd697;
	shf.l.wrap.b32 	%r454, %r448, %r449, 25;
	shf.l.wrap.b32 	%r455, %r449, %r448, 25;
	mov.b64 	%rd700, {%r455, %r454};
	xor.b64  	%rd701, %rd699, %rd700;
	xor.b64  	%rd702, %rd683, %rd489;
	xor.b64  	%rd703, %rd683, %rd513;
	and.b64  	%rd704, %rd703, %rd702;
	xor.b64  	%rd705, %rd704, %rd683;
	add.s64 	%rd706, %rd695, %rd705;
	add.s64 	%rd707, %rd706, %rd701;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r456,%dummy}, %rd696;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r457}, %rd696;
	}
	shf.r.wrap.b32 	%r458, %r457, %r456, 14;
	shf.r.wrap.b32 	%r459, %r456, %r457, 14;
	mov.b64 	%rd708, {%r459, %r458};
	shf.r.wrap.b32 	%r460, %r457, %r456, 18;
	shf.r.wrap.b32 	%r461, %r456, %r457, 18;
	mov.b64 	%rd709, {%r461, %r460};
	xor.b64  	%rd710, %rd709, %rd708;
	shf.l.wrap.b32 	%r462, %r456, %r457, 23;
	shf.l.wrap.b32 	%r463, %r457, %r456, 23;
	mov.b64 	%rd711, {%r463, %r462};
	xor.b64  	%rd712, %rd710, %rd711;
	xor.b64  	%rd713, %rd672, %rd502;
	and.b64  	%rd714, %rd696, %rd713;
	xor.b64  	%rd715, %rd714, %rd502;
	add.s64 	%rd716, %rd539, %rd478;
	add.s64 	%rd717, %rd716, %rd37;
	add.s64 	%rd718, %rd717, %rd715;
	add.s64 	%rd719, %rd718, %rd712;
	add.s64 	%rd720, %rd719, %rd489;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r464,%dummy}, %rd707;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r465}, %rd707;
	}
	shf.r.wrap.b32 	%r466, %r465, %r464, 28;
	shf.r.wrap.b32 	%r467, %r464, %r465, 28;
	mov.b64 	%rd721, {%r467, %r466};
	shf.l.wrap.b32 	%r468, %r464, %r465, 30;
	shf.l.wrap.b32 	%r469, %r465, %r464, 30;
	mov.b64 	%rd722, {%r469, %r468};
	xor.b64  	%rd723, %rd722, %rd721;
	shf.l.wrap.b32 	%r470, %r464, %r465, 25;
	shf.l.wrap.b32 	%r471, %r465, %r464, 25;
	mov.b64 	%rd724, {%r471, %r470};
	xor.b64  	%rd725, %rd723, %rd724;
	xor.b64  	%rd726, %rd707, %rd513;
	xor.b64  	%rd727, %rd707, %rd683;
	and.b64  	%rd728, %rd727, %rd726;
	xor.b64  	%rd729, %rd728, %rd707;
	add.s64 	%rd730, %rd719, %rd729;
	add.s64 	%rd731, %rd730, %rd725;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r472,%dummy}, %rd720;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r473}, %rd720;
	}
	shf.r.wrap.b32 	%r474, %r473, %r472, 14;
	shf.r.wrap.b32 	%r475, %r472, %r473, 14;
	mov.b64 	%rd732, {%r475, %r474};
	shf.r.wrap.b32 	%r476, %r473, %r472, 18;
	shf.r.wrap.b32 	%r477, %r472, %r473, 18;
	mov.b64 	%rd733, {%r477, %r476};
	xor.b64  	%rd734, %rd733, %rd732;
	shf.l.wrap.b32 	%r478, %r472, %r473, 23;
	shf.l.wrap.b32 	%r479, %r473, %r472, 23;
	mov.b64 	%rd735, {%r479, %r478};
	xor.b64  	%rd736, %rd734, %rd735;
	xor.b64  	%rd737, %rd696, %rd672;
	and.b64  	%rd738, %rd720, %rd737;
	xor.b64  	%rd739, %rd738, %rd672;
	add.s64 	%rd740, %rd551, %rd502;
	add.s64 	%rd741, %rd740, %rd38;
	add.s64 	%rd742, %rd741, %rd739;
	add.s64 	%rd743, %rd742, %rd736;
	add.s64 	%rd744, %rd743, %rd513;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r480,%dummy}, %rd731;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r481}, %rd731;
	}
	shf.r.wrap.b32 	%r482, %r481, %r480, 28;
	shf.r.wrap.b32 	%r483, %r480, %r481, 28;
	mov.b64 	%rd745, {%r483, %r482};
	shf.l.wrap.b32 	%r484, %r480, %r481, 30;
	shf.l.wrap.b32 	%r485, %r481, %r480, 30;
	mov.b64 	%rd746, {%r485, %r484};
	xor.b64  	%rd747, %rd746, %rd745;
	shf.l.wrap.b32 	%r486, %r480, %r481, 25;
	shf.l.wrap.b32 	%r487, %r481, %r480, 25;
	mov.b64 	%rd748, {%r487, %r486};
	xor.b64  	%rd749, %rd747, %rd748;
	xor.b64  	%rd750, %rd731, %rd683;
	xor.b64  	%rd751, %rd731, %rd707;
	and.b64  	%rd752, %rd751, %rd750;
	xor.b64  	%rd753, %rd752, %rd731;
	add.s64 	%rd754, %rd743, %rd753;
	add.s64 	%rd755, %rd754, %rd749;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r488,%dummy}, %rd744;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r489}, %rd744;
	}
	shf.r.wrap.b32 	%r490, %r489, %r488, 14;
	shf.r.wrap.b32 	%r491, %r488, %r489, 14;
	mov.b64 	%rd756, {%r491, %r490};
	shf.r.wrap.b32 	%r492, %r489, %r488, 18;
	shf.r.wrap.b32 	%r493, %r488, %r489, 18;
	mov.b64 	%rd757, {%r493, %r492};
	xor.b64  	%rd758, %rd757, %rd756;
	shf.l.wrap.b32 	%r494, %r488, %r489, 23;
	shf.l.wrap.b32 	%r495, %r489, %r488, 23;
	mov.b64 	%rd759, {%r495, %r494};
	xor.b64  	%rd760, %rd758, %rd759;
	xor.b64  	%rd761, %rd720, %rd696;
	and.b64  	%rd762, %rd744, %rd761;
	xor.b64  	%rd763, %rd762, %rd696;
	add.s64 	%rd764, %rd672, %rd563;
	add.s64 	%rd765, %rd764, %rd39;
	add.s64 	%rd766, %rd765, %rd763;
	add.s64 	%rd767, %rd766, %rd760;
	add.s64 	%rd768, %rd767, %rd683;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r496,%dummy}, %rd755;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r497}, %rd755;
	}
	shf.r.wrap.b32 	%r498, %r497, %r496, 28;
	shf.r.wrap.b32 	%r499, %r496, %r497, 28;
	mov.b64 	%rd769, {%r499, %r498};
	shf.l.wrap.b32 	%r500, %r496, %r497, 30;
	shf.l.wrap.b32 	%r501, %r497, %r496, 30;
	mov.b64 	%rd770, {%r501, %r500};
	xor.b64  	%rd771, %rd770, %rd769;
	shf.l.wrap.b32 	%r502, %r496, %r497, 25;
	shf.l.wrap.b32 	%r503, %r497, %r496, 25;
	mov.b64 	%rd772, {%r503, %r502};
	xor.b64  	%rd773, %rd771, %rd772;
	xor.b64  	%rd774, %rd755, %rd707;
	xor.b64  	%rd775, %rd755, %rd731;
	and.b64  	%rd776, %rd775, %rd774;
	xor.b64  	%rd777, %rd776, %rd755;
	add.s64 	%rd778, %rd767, %rd777;
	add.s64 	%rd779, %rd778, %rd773;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r504,%dummy}, %rd768;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r505}, %rd768;
	}
	shf.r.wrap.b32 	%r506, %r505, %r504, 14;
	shf.r.wrap.b32 	%r507, %r504, %r505, 14;
	mov.b64 	%rd780, {%r507, %r506};
	shf.r.wrap.b32 	%r508, %r505, %r504, 18;
	shf.r.wrap.b32 	%r509, %r504, %r505, 18;
	mov.b64 	%rd781, {%r509, %r508};
	xor.b64  	%rd782, %rd781, %rd780;
	shf.l.wrap.b32 	%r510, %r504, %r505, 23;
	shf.l.wrap.b32 	%r511, %r505, %r504, 23;
	mov.b64 	%rd783, {%r511, %r510};
	xor.b64  	%rd784, %rd782, %rd783;
	xor.b64  	%rd785, %rd744, %rd720;
	and.b64  	%rd786, %rd768, %rd785;
	xor.b64  	%rd787, %rd786, %rd720;
	add.s64 	%rd788, %rd696, %rd575;
	add.s64 	%rd789, %rd788, %rd40;
	add.s64 	%rd790, %rd789, %rd787;
	add.s64 	%rd791, %rd790, %rd784;
	add.s64 	%rd792, %rd791, %rd707;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r512,%dummy}, %rd779;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r513}, %rd779;
	}
	shf.r.wrap.b32 	%r514, %r513, %r512, 28;
	shf.r.wrap.b32 	%r515, %r512, %r513, 28;
	mov.b64 	%rd793, {%r515, %r514};
	shf.l.wrap.b32 	%r516, %r512, %r513, 30;
	shf.l.wrap.b32 	%r517, %r513, %r512, 30;
	mov.b64 	%rd794, {%r517, %r516};
	xor.b64  	%rd795, %rd794, %rd793;
	shf.l.wrap.b32 	%r518, %r512, %r513, 25;
	shf.l.wrap.b32 	%r519, %r513, %r512, 25;
	mov.b64 	%rd796, {%r519, %r518};
	xor.b64  	%rd797, %rd795, %rd796;
	xor.b64  	%rd798, %rd779, %rd731;
	xor.b64  	%rd799, %rd779, %rd755;
	and.b64  	%rd800, %rd799, %rd798;
	xor.b64  	%rd801, %rd800, %rd779;
	add.s64 	%rd802, %rd791, %rd801;
	add.s64 	%rd803, %rd802, %rd797;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r520,%dummy}, %rd792;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r521}, %rd792;
	}
	shf.r.wrap.b32 	%r522, %r521, %r520, 14;
	shf.r.wrap.b32 	%r523, %r520, %r521, 14;
	mov.b64 	%rd804, {%r523, %r522};
	shf.r.wrap.b32 	%r524, %r521, %r520, 18;
	shf.r.wrap.b32 	%r525, %r520, %r521, 18;
	mov.b64 	%rd805, {%r525, %r524};
	xor.b64  	%rd806, %rd805, %rd804;
	shf.l.wrap.b32 	%r526, %r520, %r521, 23;
	shf.l.wrap.b32 	%r527, %r521, %r520, 23;
	mov.b64 	%rd807, {%r527, %r526};
	xor.b64  	%rd808, %rd806, %rd807;
	xor.b64  	%rd809, %rd768, %rd744;
	and.b64  	%rd810, %rd792, %rd809;
	xor.b64  	%rd811, %rd810, %rd744;
	add.s64 	%rd812, %rd720, %rd588;
	add.s64 	%rd813, %rd812, %rd41;
	add.s64 	%rd814, %rd813, %rd811;
	add.s64 	%rd815, %rd814, %rd808;
	add.s64 	%rd816, %rd815, %rd731;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r528,%dummy}, %rd803;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r529}, %rd803;
	}
	shf.r.wrap.b32 	%r530, %r529, %r528, 28;
	shf.r.wrap.b32 	%r531, %r528, %r529, 28;
	mov.b64 	%rd817, {%r531, %r530};
	shf.l.wrap.b32 	%r532, %r528, %r529, 30;
	shf.l.wrap.b32 	%r533, %r529, %r528, 30;
	mov.b64 	%rd818, {%r533, %r532};
	xor.b64  	%rd819, %rd818, %rd817;
	shf.l.wrap.b32 	%r534, %r528, %r529, 25;
	shf.l.wrap.b32 	%r535, %r529, %r528, 25;
	mov.b64 	%rd820, {%r535, %r534};
	xor.b64  	%rd821, %rd819, %rd820;
	xor.b64  	%rd822, %rd803, %rd755;
	xor.b64  	%rd823, %rd803, %rd779;
	and.b64  	%rd824, %rd823, %rd822;
	xor.b64  	%rd825, %rd824, %rd803;
	add.s64 	%rd826, %rd815, %rd825;
	add.s64 	%rd827, %rd826, %rd821;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r536,%dummy}, %rd816;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r537}, %rd816;
	}
	shf.r.wrap.b32 	%r538, %r537, %r536, 14;
	shf.r.wrap.b32 	%r539, %r536, %r537, 14;
	mov.b64 	%rd828, {%r539, %r538};
	shf.r.wrap.b32 	%r540, %r537, %r536, 18;
	shf.r.wrap.b32 	%r541, %r536, %r537, 18;
	mov.b64 	%rd829, {%r541, %r540};
	xor.b64  	%rd830, %rd829, %rd828;
	shf.l.wrap.b32 	%r542, %r536, %r537, 23;
	shf.l.wrap.b32 	%r543, %r537, %r536, 23;
	mov.b64 	%rd831, {%r543, %r542};
	xor.b64  	%rd832, %rd830, %rd831;
	xor.b64  	%rd833, %rd792, %rd768;
	and.b64  	%rd834, %rd816, %rd833;
	xor.b64  	%rd835, %rd834, %rd768;
	add.s64 	%rd836, %rd744, %rd596;
	add.s64 	%rd837, %rd836, %rd42;
	add.s64 	%rd838, %rd837, %rd835;
	add.s64 	%rd839, %rd838, %rd832;
	add.s64 	%rd840, %rd839, %rd755;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r544,%dummy}, %rd827;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r545}, %rd827;
	}
	shf.r.wrap.b32 	%r546, %r545, %r544, 28;
	shf.r.wrap.b32 	%r547, %r544, %r545, 28;
	mov.b64 	%rd841, {%r547, %r546};
	shf.l.wrap.b32 	%r548, %r544, %r545, 30;
	shf.l.wrap.b32 	%r549, %r545, %r544, 30;
	mov.b64 	%rd842, {%r549, %r548};
	xor.b64  	%rd843, %rd842, %rd841;
	shf.l.wrap.b32 	%r550, %r544, %r545, 25;
	shf.l.wrap.b32 	%r551, %r545, %r544, 25;
	mov.b64 	%rd844, {%r551, %r550};
	xor.b64  	%rd845, %rd843, %rd844;
	xor.b64  	%rd846, %rd827, %rd779;
	xor.b64  	%rd847, %rd827, %rd803;
	and.b64  	%rd848, %rd847, %rd846;
	xor.b64  	%rd849, %rd848, %rd827;
	add.s64 	%rd850, %rd839, %rd849;
	add.s64 	%rd851, %rd850, %rd845;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r552,%dummy}, %rd840;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r553}, %rd840;
	}
	shf.r.wrap.b32 	%r554, %r553, %r552, 14;
	shf.r.wrap.b32 	%r555, %r552, %r553, 14;
	mov.b64 	%rd852, {%r555, %r554};
	shf.r.wrap.b32 	%r556, %r553, %r552, 18;
	shf.r.wrap.b32 	%r557, %r552, %r553, 18;
	mov.b64 	%rd853, {%r557, %r556};
	xor.b64  	%rd854, %rd853, %rd852;
	shf.l.wrap.b32 	%r558, %r552, %r553, 23;
	shf.l.wrap.b32 	%r559, %r553, %r552, 23;
	mov.b64 	%rd855, {%r559, %r558};
	xor.b64  	%rd856, %rd854, %rd855;
	xor.b64  	%rd857, %rd816, %rd792;
	and.b64  	%rd858, %rd840, %rd857;
	xor.b64  	%rd859, %rd858, %rd792;
	add.s64 	%rd860, %rd768, %rd604;
	add.s64 	%rd861, %rd860, %rd43;
	add.s64 	%rd862, %rd861, %rd859;
	add.s64 	%rd863, %rd862, %rd856;
	add.s64 	%rd864, %rd863, %rd779;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r560,%dummy}, %rd851;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r561}, %rd851;
	}
	shf.r.wrap.b32 	%r562, %r561, %r560, 28;
	shf.r.wrap.b32 	%r563, %r560, %r561, 28;
	mov.b64 	%rd865, {%r563, %r562};
	shf.l.wrap.b32 	%r564, %r560, %r561, 30;
	shf.l.wrap.b32 	%r565, %r561, %r560, 30;
	mov.b64 	%rd866, {%r565, %r564};
	xor.b64  	%rd867, %rd866, %rd865;
	shf.l.wrap.b32 	%r566, %r560, %r561, 25;
	shf.l.wrap.b32 	%r567, %r561, %r560, 25;
	mov.b64 	%rd868, {%r567, %r566};
	xor.b64  	%rd869, %rd867, %rd868;
	xor.b64  	%rd870, %rd851, %rd803;
	xor.b64  	%rd871, %rd851, %rd827;
	and.b64  	%rd872, %rd871, %rd870;
	xor.b64  	%rd873, %rd872, %rd851;
	add.s64 	%rd874, %rd863, %rd873;
	add.s64 	%rd875, %rd874, %rd869;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r568,%dummy}, %rd864;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r569}, %rd864;
	}
	shf.r.wrap.b32 	%r570, %r569, %r568, 14;
	shf.r.wrap.b32 	%r571, %r568, %r569, 14;
	mov.b64 	%rd876, {%r571, %r570};
	shf.r.wrap.b32 	%r572, %r569, %r568, 18;
	shf.r.wrap.b32 	%r573, %r568, %r569, 18;
	mov.b64 	%rd877, {%r573, %r572};
	xor.b64  	%rd878, %rd877, %rd876;
	shf.l.wrap.b32 	%r574, %r568, %r569, 23;
	shf.l.wrap.b32 	%r575, %r569, %r568, 23;
	mov.b64 	%rd879, {%r575, %r574};
	xor.b64  	%rd880, %rd878, %rd879;
	xor.b64  	%rd881, %rd840, %rd816;
	and.b64  	%rd882, %rd864, %rd881;
	xor.b64  	%rd883, %rd882, %rd816;
	add.s64 	%rd884, %rd792, %rd611;
	add.s64 	%rd885, %rd884, %rd44;
	add.s64 	%rd886, %rd885, %rd883;
	add.s64 	%rd887, %rd886, %rd880;
	add.s64 	%rd888, %rd887, %rd803;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r576,%dummy}, %rd875;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r577}, %rd875;
	}
	shf.r.wrap.b32 	%r578, %r577, %r576, 28;
	shf.r.wrap.b32 	%r579, %r576, %r577, 28;
	mov.b64 	%rd889, {%r579, %r578};
	shf.l.wrap.b32 	%r580, %r576, %r577, 30;
	shf.l.wrap.b32 	%r581, %r577, %r576, 30;
	mov.b64 	%rd890, {%r581, %r580};
	xor.b64  	%rd891, %rd890, %rd889;
	shf.l.wrap.b32 	%r582, %r576, %r577, 25;
	shf.l.wrap.b32 	%r583, %r577, %r576, 25;
	mov.b64 	%rd892, {%r583, %r582};
	xor.b64  	%rd893, %rd891, %rd892;
	xor.b64  	%rd894, %rd875, %rd827;
	xor.b64  	%rd895, %rd875, %rd851;
	and.b64  	%rd896, %rd895, %rd894;
	xor.b64  	%rd897, %rd896, %rd875;
	add.s64 	%rd898, %rd887, %rd897;
	add.s64 	%rd899, %rd898, %rd893;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r584,%dummy}, %rd888;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r585}, %rd888;
	}
	shf.r.wrap.b32 	%r586, %r585, %r584, 14;
	shf.r.wrap.b32 	%r587, %r584, %r585, 14;
	mov.b64 	%rd900, {%r587, %r586};
	shf.r.wrap.b32 	%r588, %r585, %r584, 18;
	shf.r.wrap.b32 	%r589, %r584, %r585, 18;
	mov.b64 	%rd901, {%r589, %r588};
	xor.b64  	%rd902, %rd901, %rd900;
	shf.l.wrap.b32 	%r590, %r584, %r585, 23;
	shf.l.wrap.b32 	%r591, %r585, %r584, 23;
	mov.b64 	%rd903, {%r591, %r590};
	xor.b64  	%rd904, %rd902, %rd903;
	xor.b64  	%rd905, %rd864, %rd840;
	and.b64  	%rd906, %rd888, %rd905;
	xor.b64  	%rd907, %rd906, %rd840;
	add.s64 	%rd908, %rd816, %rd618;
	add.s64 	%rd909, %rd908, %rd45;
	add.s64 	%rd910, %rd909, %rd907;
	add.s64 	%rd911, %rd910, %rd904;
	add.s64 	%rd912, %rd911, %rd827;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r592,%dummy}, %rd899;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r593}, %rd899;
	}
	shf.r.wrap.b32 	%r594, %r593, %r592, 28;
	shf.r.wrap.b32 	%r595, %r592, %r593, 28;
	mov.b64 	%rd913, {%r595, %r594};
	shf.l.wrap.b32 	%r596, %r592, %r593, 30;
	shf.l.wrap.b32 	%r597, %r593, %r592, 30;
	mov.b64 	%rd914, {%r597, %r596};
	xor.b64  	%rd915, %rd914, %rd913;
	shf.l.wrap.b32 	%r598, %r592, %r593, 25;
	shf.l.wrap.b32 	%r599, %r593, %r592, 25;
	mov.b64 	%rd916, {%r599, %r598};
	xor.b64  	%rd917, %rd915, %rd916;
	xor.b64  	%rd918, %rd899, %rd851;
	xor.b64  	%rd919, %rd899, %rd875;
	and.b64  	%rd920, %rd919, %rd918;
	xor.b64  	%rd921, %rd920, %rd899;
	add.s64 	%rd922, %rd911, %rd921;
	add.s64 	%rd923, %rd922, %rd917;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r600,%dummy}, %rd912;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r601}, %rd912;
	}
	shf.r.wrap.b32 	%r602, %r601, %r600, 14;
	shf.r.wrap.b32 	%r603, %r600, %r601, 14;
	mov.b64 	%rd924, {%r603, %r602};
	shf.r.wrap.b32 	%r604, %r601, %r600, 18;
	shf.r.wrap.b32 	%r605, %r600, %r601, 18;
	mov.b64 	%rd925, {%r605, %r604};
	xor.b64  	%rd926, %rd925, %rd924;
	shf.l.wrap.b32 	%r606, %r600, %r601, 23;
	shf.l.wrap.b32 	%r607, %r601, %r600, 23;
	mov.b64 	%rd927, {%r607, %r606};
	xor.b64  	%rd928, %rd926, %rd927;
	xor.b64  	%rd929, %rd888, %rd864;
	and.b64  	%rd930, %rd912, %rd929;
	xor.b64  	%rd931, %rd930, %rd864;
	add.s64 	%rd932, %rd840, %rd625;
	add.s64 	%rd933, %rd932, %rd46;
	add.s64 	%rd934, %rd933, %rd931;
	add.s64 	%rd935, %rd934, %rd928;
	add.s64 	%rd936, %rd935, %rd851;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r608,%dummy}, %rd923;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r609}, %rd923;
	}
	shf.r.wrap.b32 	%r610, %r609, %r608, 28;
	shf.r.wrap.b32 	%r611, %r608, %r609, 28;
	mov.b64 	%rd937, {%r611, %r610};
	shf.l.wrap.b32 	%r612, %r608, %r609, 30;
	shf.l.wrap.b32 	%r613, %r609, %r608, 30;
	mov.b64 	%rd938, {%r613, %r612};
	xor.b64  	%rd939, %rd938, %rd937;
	shf.l.wrap.b32 	%r614, %r608, %r609, 25;
	shf.l.wrap.b32 	%r615, %r609, %r608, 25;
	mov.b64 	%rd940, {%r615, %r614};
	xor.b64  	%rd941, %rd939, %rd940;
	xor.b64  	%rd942, %rd923, %rd875;
	xor.b64  	%rd943, %rd923, %rd899;
	and.b64  	%rd944, %rd943, %rd942;
	xor.b64  	%rd945, %rd944, %rd923;
	add.s64 	%rd946, %rd935, %rd945;
	add.s64 	%rd947, %rd946, %rd941;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r616,%dummy}, %rd936;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r617}, %rd936;
	}
	shf.r.wrap.b32 	%r618, %r617, %r616, 14;
	shf.r.wrap.b32 	%r619, %r616, %r617, 14;
	mov.b64 	%rd948, {%r619, %r618};
	shf.r.wrap.b32 	%r620, %r617, %r616, 18;
	shf.r.wrap.b32 	%r621, %r616, %r617, 18;
	mov.b64 	%rd949, {%r621, %r620};
	xor.b64  	%rd950, %rd949, %rd948;
	shf.l.wrap.b32 	%r622, %r616, %r617, 23;
	shf.l.wrap.b32 	%r623, %r617, %r616, 23;
	mov.b64 	%rd951, {%r623, %r622};
	xor.b64  	%rd952, %rd950, %rd951;
	xor.b64  	%rd953, %rd912, %rd888;
	and.b64  	%rd954, %rd936, %rd953;
	xor.b64  	%rd955, %rd954, %rd888;
	add.s64 	%rd956, %rd864, %rd632;
	add.s64 	%rd957, %rd956, %rd47;
	add.s64 	%rd958, %rd957, %rd955;
	add.s64 	%rd959, %rd958, %rd952;
	add.s64 	%rd960, %rd959, %rd875;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r624,%dummy}, %rd947;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r625}, %rd947;
	}
	shf.r.wrap.b32 	%r626, %r625, %r624, 28;
	shf.r.wrap.b32 	%r627, %r624, %r625, 28;
	mov.b64 	%rd961, {%r627, %r626};
	shf.l.wrap.b32 	%r628, %r624, %r625, 30;
	shf.l.wrap.b32 	%r629, %r625, %r624, 30;
	mov.b64 	%rd962, {%r629, %r628};
	xor.b64  	%rd963, %rd962, %rd961;
	shf.l.wrap.b32 	%r630, %r624, %r625, 25;
	shf.l.wrap.b32 	%r631, %r625, %r624, 25;
	mov.b64 	%rd964, {%r631, %r630};
	xor.b64  	%rd965, %rd963, %rd964;
	xor.b64  	%rd966, %rd947, %rd899;
	xor.b64  	%rd967, %rd947, %rd923;
	and.b64  	%rd968, %rd967, %rd966;
	xor.b64  	%rd969, %rd968, %rd947;
	add.s64 	%rd970, %rd959, %rd969;
	add.s64 	%rd971, %rd970, %rd965;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r632,%dummy}, %rd960;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r633}, %rd960;
	}
	shf.r.wrap.b32 	%r634, %r633, %r632, 14;
	shf.r.wrap.b32 	%r635, %r632, %r633, 14;
	mov.b64 	%rd972, {%r635, %r634};
	shf.r.wrap.b32 	%r636, %r633, %r632, 18;
	shf.r.wrap.b32 	%r637, %r632, %r633, 18;
	mov.b64 	%rd973, {%r637, %r636};
	xor.b64  	%rd974, %rd973, %rd972;
	shf.l.wrap.b32 	%r638, %r632, %r633, 23;
	shf.l.wrap.b32 	%r639, %r633, %r632, 23;
	mov.b64 	%rd975, {%r639, %r638};
	xor.b64  	%rd976, %rd974, %rd975;
	xor.b64  	%rd977, %rd936, %rd912;
	and.b64  	%rd978, %rd960, %rd977;
	xor.b64  	%rd979, %rd978, %rd912;
	add.s64 	%rd980, %rd888, %rd639;
	add.s64 	%rd981, %rd980, %rd48;
	add.s64 	%rd982, %rd981, %rd979;
	add.s64 	%rd983, %rd982, %rd976;
	add.s64 	%rd984, %rd983, %rd899;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r640,%dummy}, %rd971;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r641}, %rd971;
	}
	shf.r.wrap.b32 	%r642, %r641, %r640, 28;
	shf.r.wrap.b32 	%r643, %r640, %r641, 28;
	mov.b64 	%rd985, {%r643, %r642};
	shf.l.wrap.b32 	%r644, %r640, %r641, 30;
	shf.l.wrap.b32 	%r645, %r641, %r640, 30;
	mov.b64 	%rd986, {%r645, %r644};
	xor.b64  	%rd987, %rd986, %rd985;
	shf.l.wrap.b32 	%r646, %r640, %r641, 25;
	shf.l.wrap.b32 	%r647, %r641, %r640, 25;
	mov.b64 	%rd988, {%r647, %r646};
	xor.b64  	%rd989, %rd987, %rd988;
	xor.b64  	%rd990, %rd971, %rd923;
	xor.b64  	%rd991, %rd971, %rd947;
	and.b64  	%rd992, %rd991, %rd990;
	xor.b64  	%rd993, %rd992, %rd971;
	add.s64 	%rd994, %rd983, %rd993;
	add.s64 	%rd995, %rd994, %rd989;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r648,%dummy}, %rd984;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r649}, %rd984;
	}
	shf.r.wrap.b32 	%r650, %r649, %r648, 14;
	shf.r.wrap.b32 	%r651, %r648, %r649, 14;
	mov.b64 	%rd996, {%r651, %r650};
	shf.r.wrap.b32 	%r652, %r649, %r648, 18;
	shf.r.wrap.b32 	%r653, %r648, %r649, 18;
	mov.b64 	%rd997, {%r653, %r652};
	xor.b64  	%rd998, %rd997, %rd996;
	shf.l.wrap.b32 	%r654, %r648, %r649, 23;
	shf.l.wrap.b32 	%r655, %r649, %r648, 23;
	mov.b64 	%rd999, {%r655, %r654};
	xor.b64  	%rd1000, %rd998, %rd999;
	xor.b64  	%rd1001, %rd960, %rd936;
	and.b64  	%rd1002, %rd984, %rd1001;
	xor.b64  	%rd1003, %rd1002, %rd936;
	add.s64 	%rd1004, %rd912, %rd646;
	add.s64 	%rd1005, %rd1004, %rd49;
	add.s64 	%rd1006, %rd1005, %rd1003;
	add.s64 	%rd1007, %rd1006, %rd1000;
	add.s64 	%rd1008, %rd1007, %rd923;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r656,%dummy}, %rd995;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r657}, %rd995;
	}
	shf.r.wrap.b32 	%r658, %r657, %r656, 28;
	shf.r.wrap.b32 	%r659, %r656, %r657, 28;
	mov.b64 	%rd1009, {%r659, %r658};
	shf.l.wrap.b32 	%r660, %r656, %r657, 30;
	shf.l.wrap.b32 	%r661, %r657, %r656, 30;
	mov.b64 	%rd1010, {%r661, %r660};
	xor.b64  	%rd1011, %rd1010, %rd1009;
	shf.l.wrap.b32 	%r662, %r656, %r657, 25;
	shf.l.wrap.b32 	%r663, %r657, %r656, 25;
	mov.b64 	%rd1012, {%r663, %r662};
	xor.b64  	%rd1013, %rd1011, %rd1012;
	xor.b64  	%rd1014, %rd995, %rd947;
	xor.b64  	%rd1015, %rd995, %rd971;
	and.b64  	%rd1016, %rd1015, %rd1014;
	xor.b64  	%rd1017, %rd1016, %rd995;
	add.s64 	%rd1018, %rd1007, %rd1017;
	add.s64 	%rd1019, %rd1018, %rd1013;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r664,%dummy}, %rd1008;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r665}, %rd1008;
	}
	shf.r.wrap.b32 	%r666, %r665, %r664, 14;
	shf.r.wrap.b32 	%r667, %r664, %r665, 14;
	mov.b64 	%rd1020, {%r667, %r666};
	shf.r.wrap.b32 	%r668, %r665, %r664, 18;
	shf.r.wrap.b32 	%r669, %r664, %r665, 18;
	mov.b64 	%rd1021, {%r669, %r668};
	xor.b64  	%rd1022, %rd1021, %rd1020;
	shf.l.wrap.b32 	%r670, %r664, %r665, 23;
	shf.l.wrap.b32 	%r671, %r665, %r664, 23;
	mov.b64 	%rd1023, {%r671, %r670};
	xor.b64  	%rd1024, %rd1022, %rd1023;
	xor.b64  	%rd1025, %rd984, %rd960;
	and.b64  	%rd1026, %rd1008, %rd1025;
	xor.b64  	%rd1027, %rd1026, %rd960;
	add.s64 	%rd1028, %rd936, %rd659;
	add.s64 	%rd1029, %rd1028, %rd50;
	add.s64 	%rd1030, %rd1029, %rd1027;
	add.s64 	%rd1031, %rd1030, %rd1024;
	add.s64 	%rd1032, %rd1031, %rd947;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r672,%dummy}, %rd1019;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r673}, %rd1019;
	}
	shf.r.wrap.b32 	%r674, %r673, %r672, 28;
	shf.r.wrap.b32 	%r675, %r672, %r673, 28;
	mov.b64 	%rd1033, {%r675, %r674};
	shf.l.wrap.b32 	%r676, %r672, %r673, 30;
	shf.l.wrap.b32 	%r677, %r673, %r672, 30;
	mov.b64 	%rd1034, {%r677, %r676};
	xor.b64  	%rd1035, %rd1034, %rd1033;
	shf.l.wrap.b32 	%r678, %r672, %r673, 25;
	shf.l.wrap.b32 	%r679, %r673, %r672, 25;
	mov.b64 	%rd1036, {%r679, %r678};
	xor.b64  	%rd1037, %rd1035, %rd1036;
	xor.b64  	%rd1038, %rd1019, %rd971;
	xor.b64  	%rd1039, %rd1019, %rd995;
	and.b64  	%rd1040, %rd1039, %rd1038;
	xor.b64  	%rd1041, %rd1040, %rd1019;
	add.s64 	%rd1042, %rd1031, %rd1041;
	add.s64 	%rd1043, %rd1042, %rd1037;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r680,%dummy}, %rd646;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r681}, %rd646;
	}
	shf.r.wrap.b32 	%r682, %r681, %r680, 19;
	shf.r.wrap.b32 	%r683, %r680, %r681, 19;
	mov.b64 	%rd1044, {%r683, %r682};
	shf.l.wrap.b32 	%r684, %r680, %r681, 3;
	shf.l.wrap.b32 	%r685, %r681, %r680, 3;
	mov.b64 	%rd1045, {%r685, %r684};
	shr.u64 	%rd1046, %rd646, 6;
	xor.b64  	%rd1047, %rd1044, %rd1046;
	xor.b64  	%rd1048, %rd1047, %rd1045;
	shf.r.wrap.b32 	%r686, %r319, %r318, 1;
	shf.r.wrap.b32 	%r687, %r318, %r319, 1;
	mov.b64 	%rd1049, {%r687, %r686};
	shf.r.wrap.b32 	%r688, %r319, %r318, 8;
	shf.r.wrap.b32 	%r689, %r318, %r319, 8;
	mov.b64 	%rd1050, {%r689, %r688};
	shr.u64 	%rd1051, %rd527, 7;
	xor.b64  	%rd1052, %rd1049, %rd1051;
	xor.b64  	%rd1053, %rd1052, %rd1050;
	add.s64 	%rd1054, %rd520, %rd611;
	add.s64 	%rd1055, %rd1054, %rd1048;
	add.s64 	%rd1056, %rd1055, %rd1053;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r690,%dummy}, %rd659;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r691}, %rd659;
	}
	shf.r.wrap.b32 	%r692, %r691, %r690, 19;
	shf.r.wrap.b32 	%r693, %r690, %r691, 19;
	mov.b64 	%rd1057, {%r693, %r692};
	shf.l.wrap.b32 	%r694, %r690, %r691, 3;
	shf.l.wrap.b32 	%r695, %r691, %r690, 3;
	mov.b64 	%rd1058, {%r695, %r694};
	shr.u64 	%rd1059, %rd659, 6;
	xor.b64  	%rd1060, %rd1057, %rd1059;
	xor.b64  	%rd1061, %rd1060, %rd1058;
	shf.r.wrap.b32 	%r696, %r331, %r330, 1;
	shf.r.wrap.b32 	%r697, %r330, %r331, 1;
	mov.b64 	%rd1062, {%r697, %r696};
	shf.r.wrap.b32 	%r698, %r331, %r330, 8;
	shf.r.wrap.b32 	%r699, %r330, %r331, 8;
	mov.b64 	%rd1063, {%r699, %r698};
	shr.u64 	%rd1064, %rd539, 7;
	xor.b64  	%rd1065, %rd1062, %rd1064;
	xor.b64  	%rd1066, %rd1065, %rd1063;
	add.s64 	%rd1067, %rd527, %rd618;
	add.s64 	%rd1068, %rd1067, %rd1061;
	add.s64 	%rd1069, %rd1068, %rd1066;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r700,%dummy}, %rd1056;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r701}, %rd1056;
	}
	shf.r.wrap.b32 	%r702, %r701, %r700, 19;
	shf.r.wrap.b32 	%r703, %r700, %r701, 19;
	mov.b64 	%rd1070, {%r703, %r702};
	shf.l.wrap.b32 	%r704, %r700, %r701, 3;
	shf.l.wrap.b32 	%r705, %r701, %r700, 3;
	mov.b64 	%rd1071, {%r705, %r704};
	shr.u64 	%rd1072, %rd1056, 6;
	xor.b64  	%rd1073, %rd1070, %rd1072;
	xor.b64  	%rd1074, %rd1073, %rd1071;
	shf.r.wrap.b32 	%r706, %r343, %r342, 1;
	shf.r.wrap.b32 	%r707, %r342, %r343, 1;
	mov.b64 	%rd1075, {%r707, %r706};
	shf.r.wrap.b32 	%r708, %r343, %r342, 8;
	shf.r.wrap.b32 	%r709, %r342, %r343, 8;
	mov.b64 	%rd1076, {%r709, %r708};
	shr.u64 	%rd1077, %rd551, 7;
	xor.b64  	%rd1078, %rd1075, %rd1077;
	xor.b64  	%rd1079, %rd1078, %rd1076;
	add.s64 	%rd1080, %rd539, %rd625;
	add.s64 	%rd1081, %rd1080, %rd1074;
	add.s64 	%rd1082, %rd1081, %rd1079;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r710,%dummy}, %rd1069;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r711}, %rd1069;
	}
	shf.r.wrap.b32 	%r712, %r711, %r710, 19;
	shf.r.wrap.b32 	%r713, %r710, %r711, 19;
	mov.b64 	%rd1083, {%r713, %r712};
	shf.l.wrap.b32 	%r714, %r710, %r711, 3;
	shf.l.wrap.b32 	%r715, %r711, %r710, 3;
	mov.b64 	%rd1084, {%r715, %r714};
	shr.u64 	%rd1085, %rd1069, 6;
	xor.b64  	%rd1086, %rd1083, %rd1085;
	xor.b64  	%rd1087, %rd1086, %rd1084;
	shf.r.wrap.b32 	%r716, %r355, %r354, 1;
	shf.r.wrap.b32 	%r717, %r354, %r355, 1;
	mov.b64 	%rd1088, {%r717, %r716};
	shf.r.wrap.b32 	%r718, %r355, %r354, 8;
	shf.r.wrap.b32 	%r719, %r354, %r355, 8;
	mov.b64 	%rd1089, {%r719, %r718};
	shr.u64 	%rd1090, %rd563, 7;
	xor.b64  	%rd1091, %rd1088, %rd1090;
	xor.b64  	%rd1092, %rd1091, %rd1089;
	add.s64 	%rd1093, %rd551, %rd632;
	add.s64 	%rd1094, %rd1093, %rd1087;
	add.s64 	%rd1095, %rd1094, %rd1092;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r720,%dummy}, %rd1082;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r721}, %rd1082;
	}
	shf.r.wrap.b32 	%r722, %r721, %r720, 19;
	shf.r.wrap.b32 	%r723, %r720, %r721, 19;
	mov.b64 	%rd1096, {%r723, %r722};
	shf.l.wrap.b32 	%r724, %r720, %r721, 3;
	shf.l.wrap.b32 	%r725, %r721, %r720, 3;
	mov.b64 	%rd1097, {%r725, %r724};
	shr.u64 	%rd1098, %rd1082, 6;
	xor.b64  	%rd1099, %rd1096, %rd1098;
	xor.b64  	%rd1100, %rd1099, %rd1097;
	shf.r.wrap.b32 	%r726, %r367, %r366, 1;
	shf.r.wrap.b32 	%r727, %r366, %r367, 1;
	mov.b64 	%rd1101, {%r727, %r726};
	shf.r.wrap.b32 	%r728, %r367, %r366, 8;
	shf.r.wrap.b32 	%r729, %r366, %r367, 8;
	mov.b64 	%rd1102, {%r729, %r728};
	shr.u64 	%rd1103, %rd575, 7;
	xor.b64  	%rd1104, %rd1101, %rd1103;
	xor.b64  	%rd1105, %rd1104, %rd1102;
	add.s64 	%rd1106, %rd563, %rd639;
	add.s64 	%rd1107, %rd1106, %rd1100;
	add.s64 	%rd1108, %rd1107, %rd1105;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r730,%dummy}, %rd1095;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r731}, %rd1095;
	}
	shf.r.wrap.b32 	%r732, %r731, %r730, 19;
	shf.r.wrap.b32 	%r733, %r730, %r731, 19;
	mov.b64 	%rd1109, {%r733, %r732};
	shf.l.wrap.b32 	%r734, %r730, %r731, 3;
	shf.l.wrap.b32 	%r735, %r731, %r730, 3;
	mov.b64 	%rd1110, {%r735, %r734};
	shr.u64 	%rd1111, %rd1095, 6;
	xor.b64  	%rd1112, %rd1109, %rd1111;
	xor.b64  	%rd1113, %rd1112, %rd1110;
	shf.r.wrap.b32 	%r736, %r373, %r372, 1;
	shf.r.wrap.b32 	%r737, %r372, %r373, 1;
	mov.b64 	%rd1114, {%r737, %r736};
	shf.r.wrap.b32 	%r738, %r373, %r372, 8;
	shf.r.wrap.b32 	%r739, %r372, %r373, 8;
	mov.b64 	%rd1115, {%r739, %r738};
	shr.u64 	%rd1116, %rd588, 7;
	xor.b64  	%rd1117, %rd1114, %rd1116;
	xor.b64  	%rd1118, %rd1117, %rd1115;
	add.s64 	%rd1119, %rd575, %rd646;
	add.s64 	%rd1120, %rd1119, %rd1113;
	add.s64 	%rd1121, %rd1120, %rd1118;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r740,%dummy}, %rd1108;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r741}, %rd1108;
	}
	shf.r.wrap.b32 	%r742, %r741, %r740, 19;
	shf.r.wrap.b32 	%r743, %r740, %r741, 19;
	mov.b64 	%rd1122, {%r743, %r742};
	shf.l.wrap.b32 	%r744, %r740, %r741, 3;
	shf.l.wrap.b32 	%r745, %r741, %r740, 3;
	mov.b64 	%rd1123, {%r745, %r744};
	shr.u64 	%rd1124, %rd1108, 6;
	xor.b64  	%rd1125, %rd1122, %rd1124;
	xor.b64  	%rd1126, %rd1125, %rd1123;
	shf.r.wrap.b32 	%r746, %r379, %r378, 1;
	shf.r.wrap.b32 	%r747, %r378, %r379, 1;
	mov.b64 	%rd1127, {%r747, %r746};
	shf.r.wrap.b32 	%r748, %r379, %r378, 8;
	shf.r.wrap.b32 	%r749, %r378, %r379, 8;
	mov.b64 	%rd1128, {%r749, %r748};
	shr.u64 	%rd1129, %rd596, 7;
	xor.b64  	%rd1130, %rd1127, %rd1129;
	xor.b64  	%rd1131, %rd1130, %rd1128;
	add.s64 	%rd1132, %rd659, %rd588;
	add.s64 	%rd1133, %rd1132, %rd1126;
	add.s64 	%rd1134, %rd1133, %rd1131;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r750,%dummy}, %rd1121;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r751}, %rd1121;
	}
	shf.r.wrap.b32 	%r752, %r751, %r750, 19;
	shf.r.wrap.b32 	%r753, %r750, %r751, 19;
	mov.b64 	%rd1135, {%r753, %r752};
	shf.l.wrap.b32 	%r754, %r750, %r751, 3;
	shf.l.wrap.b32 	%r755, %r751, %r750, 3;
	mov.b64 	%rd1136, {%r755, %r754};
	shr.u64 	%rd1137, %rd1121, 6;
	xor.b64  	%rd1138, %rd1135, %rd1137;
	xor.b64  	%rd1139, %rd1138, %rd1136;
	shf.r.wrap.b32 	%r756, %r385, %r384, 1;
	shf.r.wrap.b32 	%r757, %r384, %r385, 1;
	mov.b64 	%rd1140, {%r757, %r756};
	shf.r.wrap.b32 	%r758, %r385, %r384, 8;
	shf.r.wrap.b32 	%r759, %r384, %r385, 8;
	mov.b64 	%rd1141, {%r759, %r758};
	shr.u64 	%rd1142, %rd604, 7;
	xor.b64  	%rd1143, %rd1140, %rd1142;
	xor.b64  	%rd1144, %rd1143, %rd1141;
	add.s64 	%rd1145, %rd1056, %rd596;
	add.s64 	%rd1146, %rd1145, %rd1139;
	add.s64 	%rd1147, %rd1146, %rd1144;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r760,%dummy}, %rd1134;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r761}, %rd1134;
	}
	shf.r.wrap.b32 	%r762, %r761, %r760, 19;
	shf.r.wrap.b32 	%r763, %r760, %r761, 19;
	mov.b64 	%rd1148, {%r763, %r762};
	shf.l.wrap.b32 	%r764, %r760, %r761, 3;
	shf.l.wrap.b32 	%r765, %r761, %r760, 3;
	mov.b64 	%rd1149, {%r765, %r764};
	shr.u64 	%rd1150, %rd1134, 6;
	xor.b64  	%rd1151, %rd1148, %rd1150;
	xor.b64  	%rd1152, %rd1151, %rd1149;
	shf.r.wrap.b32 	%r766, %r391, %r390, 1;
	shf.r.wrap.b32 	%r767, %r390, %r391, 1;
	mov.b64 	%rd1153, {%r767, %r766};
	shf.r.wrap.b32 	%r768, %r391, %r390, 8;
	shf.r.wrap.b32 	%r769, %r390, %r391, 8;
	mov.b64 	%rd1154, {%r769, %r768};
	shr.u64 	%rd1155, %rd611, 7;
	xor.b64  	%rd1156, %rd1153, %rd1155;
	xor.b64  	%rd1157, %rd1156, %rd1154;
	add.s64 	%rd1158, %rd1069, %rd604;
	add.s64 	%rd1159, %rd1158, %rd1152;
	add.s64 	%rd1160, %rd1159, %rd1157;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r770,%dummy}, %rd1147;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r771}, %rd1147;
	}
	shf.r.wrap.b32 	%r772, %r771, %r770, 19;
	shf.r.wrap.b32 	%r773, %r770, %r771, 19;
	mov.b64 	%rd1161, {%r773, %r772};
	shf.l.wrap.b32 	%r774, %r770, %r771, 3;
	shf.l.wrap.b32 	%r775, %r771, %r770, 3;
	mov.b64 	%rd1162, {%r775, %r774};
	shr.u64 	%rd1163, %rd1147, 6;
	xor.b64  	%rd1164, %rd1161, %rd1163;
	xor.b64  	%rd1165, %rd1164, %rd1162;
	shf.r.wrap.b32 	%r776, %r397, %r396, 1;
	shf.r.wrap.b32 	%r777, %r396, %r397, 1;
	mov.b64 	%rd1166, {%r777, %r776};
	shf.r.wrap.b32 	%r778, %r397, %r396, 8;
	shf.r.wrap.b32 	%r779, %r396, %r397, 8;
	mov.b64 	%rd1167, {%r779, %r778};
	shr.u64 	%rd1168, %rd618, 7;
	xor.b64  	%rd1169, %rd1166, %rd1168;
	xor.b64  	%rd1170, %rd1169, %rd1167;
	add.s64 	%rd1171, %rd1082, %rd611;
	add.s64 	%rd1172, %rd1171, %rd1165;
	add.s64 	%rd1173, %rd1172, %rd1170;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r780,%dummy}, %rd1160;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r781}, %rd1160;
	}
	shf.r.wrap.b32 	%r782, %r781, %r780, 19;
	shf.r.wrap.b32 	%r783, %r780, %r781, 19;
	mov.b64 	%rd1174, {%r783, %r782};
	shf.l.wrap.b32 	%r784, %r780, %r781, 3;
	shf.l.wrap.b32 	%r785, %r781, %r780, 3;
	mov.b64 	%rd1175, {%r785, %r784};
	shr.u64 	%rd1176, %rd1160, 6;
	xor.b64  	%rd1177, %rd1174, %rd1176;
	xor.b64  	%rd1178, %rd1177, %rd1175;
	shf.r.wrap.b32 	%r786, %r403, %r402, 1;
	shf.r.wrap.b32 	%r787, %r402, %r403, 1;
	mov.b64 	%rd1179, {%r787, %r786};
	shf.r.wrap.b32 	%r788, %r403, %r402, 8;
	shf.r.wrap.b32 	%r789, %r402, %r403, 8;
	mov.b64 	%rd1180, {%r789, %r788};
	shr.u64 	%rd1181, %rd625, 7;
	xor.b64  	%rd1182, %rd1179, %rd1181;
	xor.b64  	%rd1183, %rd1182, %rd1180;
	add.s64 	%rd1184, %rd1095, %rd618;
	add.s64 	%rd1185, %rd1184, %rd1178;
	add.s64 	%rd1186, %rd1185, %rd1183;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r790,%dummy}, %rd1173;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r791}, %rd1173;
	}
	shf.r.wrap.b32 	%r792, %r791, %r790, 19;
	shf.r.wrap.b32 	%r793, %r790, %r791, 19;
	mov.b64 	%rd1187, {%r793, %r792};
	shf.l.wrap.b32 	%r794, %r790, %r791, 3;
	shf.l.wrap.b32 	%r795, %r791, %r790, 3;
	mov.b64 	%rd1188, {%r795, %r794};
	shr.u64 	%rd1189, %rd1173, 6;
	xor.b64  	%rd1190, %rd1187, %rd1189;
	xor.b64  	%rd1191, %rd1190, %rd1188;
	shf.r.wrap.b32 	%r796, %r409, %r408, 1;
	shf.r.wrap.b32 	%r797, %r408, %r409, 1;
	mov.b64 	%rd1192, {%r797, %r796};
	shf.r.wrap.b32 	%r798, %r409, %r408, 8;
	shf.r.wrap.b32 	%r799, %r408, %r409, 8;
	mov.b64 	%rd1193, {%r799, %r798};
	shr.u64 	%rd1194, %rd632, 7;
	xor.b64  	%rd1195, %rd1192, %rd1194;
	xor.b64  	%rd1196, %rd1195, %rd1193;
	add.s64 	%rd1197, %rd1108, %rd625;
	add.s64 	%rd1198, %rd1197, %rd1191;
	add.s64 	%rd1199, %rd1198, %rd1196;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r800,%dummy}, %rd1186;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r801}, %rd1186;
	}
	shf.r.wrap.b32 	%r802, %r801, %r800, 19;
	shf.r.wrap.b32 	%r803, %r800, %r801, 19;
	mov.b64 	%rd1200, {%r803, %r802};
	shf.l.wrap.b32 	%r804, %r800, %r801, 3;
	shf.l.wrap.b32 	%r805, %r801, %r800, 3;
	mov.b64 	%rd1201, {%r805, %r804};
	shr.u64 	%rd1202, %rd1186, 6;
	xor.b64  	%rd1203, %rd1200, %rd1202;
	xor.b64  	%rd1204, %rd1203, %rd1201;
	shf.r.wrap.b32 	%r806, %r415, %r414, 1;
	shf.r.wrap.b32 	%r807, %r414, %r415, 1;
	mov.b64 	%rd1205, {%r807, %r806};
	shf.r.wrap.b32 	%r808, %r415, %r414, 8;
	shf.r.wrap.b32 	%r809, %r414, %r415, 8;
	mov.b64 	%rd1206, {%r809, %r808};
	shr.u64 	%rd1207, %rd639, 7;
	xor.b64  	%rd1208, %rd1205, %rd1207;
	xor.b64  	%rd1209, %rd1208, %rd1206;
	add.s64 	%rd1210, %rd1121, %rd632;
	add.s64 	%rd1211, %rd1210, %rd1204;
	add.s64 	%rd1212, %rd1211, %rd1209;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r810,%dummy}, %rd1199;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r811}, %rd1199;
	}
	shf.r.wrap.b32 	%r812, %r811, %r810, 19;
	shf.r.wrap.b32 	%r813, %r810, %r811, 19;
	mov.b64 	%rd1213, {%r813, %r812};
	shf.l.wrap.b32 	%r814, %r810, %r811, 3;
	shf.l.wrap.b32 	%r815, %r811, %r810, 3;
	mov.b64 	%rd1214, {%r815, %r814};
	shr.u64 	%rd1215, %rd1199, 6;
	xor.b64  	%rd1216, %rd1213, %rd1215;
	xor.b64  	%rd1217, %rd1216, %rd1214;
	shf.r.wrap.b32 	%r816, %r681, %r680, 1;
	shf.r.wrap.b32 	%r817, %r680, %r681, 1;
	mov.b64 	%rd1218, {%r817, %r816};
	shf.r.wrap.b32 	%r818, %r681, %r680, 8;
	shf.r.wrap.b32 	%r819, %r680, %r681, 8;
	mov.b64 	%rd1219, {%r819, %r818};
	shr.u64 	%rd1220, %rd646, 7;
	xor.b64  	%rd1221, %rd1218, %rd1220;
	xor.b64  	%rd1222, %rd1221, %rd1219;
	add.s64 	%rd1223, %rd1134, %rd639;
	add.s64 	%rd1224, %rd1223, %rd1217;
	add.s64 	%rd1225, %rd1224, %rd1222;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r820,%dummy}, %rd1212;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r821}, %rd1212;
	}
	shf.r.wrap.b32 	%r822, %r821, %r820, 19;
	shf.r.wrap.b32 	%r823, %r820, %r821, 19;
	mov.b64 	%rd1226, {%r823, %r822};
	shf.l.wrap.b32 	%r824, %r820, %r821, 3;
	shf.l.wrap.b32 	%r825, %r821, %r820, 3;
	mov.b64 	%rd1227, {%r825, %r824};
	shr.u64 	%rd1228, %rd1212, 6;
	xor.b64  	%rd1229, %rd1226, %rd1228;
	xor.b64  	%rd1230, %rd1229, %rd1227;
	shf.r.wrap.b32 	%r826, %r691, %r690, 1;
	shf.r.wrap.b32 	%r827, %r690, %r691, 1;
	mov.b64 	%rd1231, {%r827, %r826};
	shf.r.wrap.b32 	%r828, %r691, %r690, 8;
	shf.r.wrap.b32 	%r829, %r690, %r691, 8;
	mov.b64 	%rd1232, {%r829, %r828};
	shr.u64 	%rd1233, %rd659, 7;
	xor.b64  	%rd1234, %rd1231, %rd1233;
	xor.b64  	%rd1235, %rd1234, %rd1232;
	add.s64 	%rd1236, %rd1147, %rd646;
	add.s64 	%rd1237, %rd1236, %rd1230;
	add.s64 	%rd1238, %rd1237, %rd1235;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r830,%dummy}, %rd1225;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r831}, %rd1225;
	}
	shf.r.wrap.b32 	%r832, %r831, %r830, 19;
	shf.r.wrap.b32 	%r833, %r830, %r831, 19;
	mov.b64 	%rd1239, {%r833, %r832};
	shf.l.wrap.b32 	%r834, %r830, %r831, 3;
	shf.l.wrap.b32 	%r835, %r831, %r830, 3;
	mov.b64 	%rd1240, {%r835, %r834};
	shr.u64 	%rd1241, %rd1225, 6;
	xor.b64  	%rd1242, %rd1239, %rd1241;
	xor.b64  	%rd1243, %rd1242, %rd1240;
	shf.r.wrap.b32 	%r836, %r701, %r700, 1;
	shf.r.wrap.b32 	%r837, %r700, %r701, 1;
	mov.b64 	%rd1244, {%r837, %r836};
	shf.r.wrap.b32 	%r838, %r701, %r700, 8;
	shf.r.wrap.b32 	%r839, %r700, %r701, 8;
	mov.b64 	%rd1245, {%r839, %r838};
	shr.u64 	%rd1246, %rd1056, 7;
	xor.b64  	%rd1247, %rd1244, %rd1246;
	xor.b64  	%rd1248, %rd1247, %rd1245;
	add.s64 	%rd1249, %rd1160, %rd659;
	add.s64 	%rd1250, %rd1249, %rd1243;
	add.s64 	%rd1251, %rd1250, %rd1248;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r840,%dummy}, %rd1032;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r841}, %rd1032;
	}
	shf.r.wrap.b32 	%r842, %r841, %r840, 14;
	shf.r.wrap.b32 	%r843, %r840, %r841, 14;
	mov.b64 	%rd1252, {%r843, %r842};
	shf.r.wrap.b32 	%r844, %r841, %r840, 18;
	shf.r.wrap.b32 	%r845, %r840, %r841, 18;
	mov.b64 	%rd1253, {%r845, %r844};
	xor.b64  	%rd1254, %rd1253, %rd1252;
	shf.l.wrap.b32 	%r846, %r840, %r841, 23;
	shf.l.wrap.b32 	%r847, %r841, %r840, 23;
	mov.b64 	%rd1255, {%r847, %r846};
	xor.b64  	%rd1256, %rd1254, %rd1255;
	xor.b64  	%rd1257, %rd1008, %rd984;
	and.b64  	%rd1258, %rd1257, %rd1032;
	xor.b64  	%rd1259, %rd1258, %rd984;
	add.s64 	%rd1260, %rd1259, %rd960;
	add.s64 	%rd1261, %rd1260, %rd1056;
	add.s64 	%rd1262, %rd1261, %rd51;
	add.s64 	%rd1263, %rd1262, %rd1256;
	add.s64 	%rd1264, %rd1263, %rd971;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r848,%dummy}, %rd1043;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r849}, %rd1043;
	}
	shf.r.wrap.b32 	%r850, %r849, %r848, 28;
	shf.r.wrap.b32 	%r851, %r848, %r849, 28;
	mov.b64 	%rd1265, {%r851, %r850};
	shf.l.wrap.b32 	%r852, %r848, %r849, 30;
	shf.l.wrap.b32 	%r853, %r849, %r848, 30;
	mov.b64 	%rd1266, {%r853, %r852};
	xor.b64  	%rd1267, %rd1266, %rd1265;
	shf.l.wrap.b32 	%r854, %r848, %r849, 25;
	shf.l.wrap.b32 	%r855, %r849, %r848, 25;
	mov.b64 	%rd1268, {%r855, %r854};
	xor.b64  	%rd1269, %rd1267, %rd1268;
	xor.b64  	%rd1270, %rd1043, %rd995;
	xor.b64  	%rd1271, %rd1043, %rd1019;
	and.b64  	%rd1272, %rd1271, %rd1270;
	xor.b64  	%rd1273, %rd1272, %rd1043;
	add.s64 	%rd1274, %rd1263, %rd1273;
	add.s64 	%rd1275, %rd1274, %rd1269;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r856,%dummy}, %rd1264;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r857}, %rd1264;
	}
	shf.r.wrap.b32 	%r858, %r857, %r856, 14;
	shf.r.wrap.b32 	%r859, %r856, %r857, 14;
	mov.b64 	%rd1276, {%r859, %r858};
	shf.r.wrap.b32 	%r860, %r857, %r856, 18;
	shf.r.wrap.b32 	%r861, %r856, %r857, 18;
	mov.b64 	%rd1277, {%r861, %r860};
	xor.b64  	%rd1278, %rd1277, %rd1276;
	shf.l.wrap.b32 	%r862, %r856, %r857, 23;
	shf.l.wrap.b32 	%r863, %r857, %r856, 23;
	mov.b64 	%rd1279, {%r863, %r862};
	xor.b64  	%rd1280, %rd1278, %rd1279;
	xor.b64  	%rd1281, %rd1032, %rd1008;
	and.b64  	%rd1282, %rd1264, %rd1281;
	xor.b64  	%rd1283, %rd1282, %rd1008;
	add.s64 	%rd1284, %rd1069, %rd984;
	add.s64 	%rd1285, %rd1284, %rd52;
	add.s64 	%rd1286, %rd1285, %rd1283;
	add.s64 	%rd1287, %rd1286, %rd1280;
	add.s64 	%rd1288, %rd1287, %rd995;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r864,%dummy}, %rd1275;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r865}, %rd1275;
	}
	shf.r.wrap.b32 	%r866, %r865, %r864, 28;
	shf.r.wrap.b32 	%r867, %r864, %r865, 28;
	mov.b64 	%rd1289, {%r867, %r866};
	shf.l.wrap.b32 	%r868, %r864, %r865, 30;
	shf.l.wrap.b32 	%r869, %r865, %r864, 30;
	mov.b64 	%rd1290, {%r869, %r868};
	xor.b64  	%rd1291, %rd1290, %rd1289;
	shf.l.wrap.b32 	%r870, %r864, %r865, 25;
	shf.l.wrap.b32 	%r871, %r865, %r864, 25;
	mov.b64 	%rd1292, {%r871, %r870};
	xor.b64  	%rd1293, %rd1291, %rd1292;
	xor.b64  	%rd1294, %rd1275, %rd1019;
	xor.b64  	%rd1295, %rd1275, %rd1043;
	and.b64  	%rd1296, %rd1295, %rd1294;
	xor.b64  	%rd1297, %rd1296, %rd1275;
	add.s64 	%rd1298, %rd1287, %rd1297;
	add.s64 	%rd1299, %rd1298, %rd1293;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r872,%dummy}, %rd1288;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r873}, %rd1288;
	}
	shf.r.wrap.b32 	%r874, %r873, %r872, 14;
	shf.r.wrap.b32 	%r875, %r872, %r873, 14;
	mov.b64 	%rd1300, {%r875, %r874};
	shf.r.wrap.b32 	%r876, %r873, %r872, 18;
	shf.r.wrap.b32 	%r877, %r872, %r873, 18;
	mov.b64 	%rd1301, {%r877, %r876};
	xor.b64  	%rd1302, %rd1301, %rd1300;
	shf.l.wrap.b32 	%r878, %r872, %r873, 23;
	shf.l.wrap.b32 	%r879, %r873, %r872, 23;
	mov.b64 	%rd1303, {%r879, %r878};
	xor.b64  	%rd1304, %rd1302, %rd1303;
	xor.b64  	%rd1305, %rd1264, %rd1032;
	and.b64  	%rd1306, %rd1288, %rd1305;
	xor.b64  	%rd1307, %rd1306, %rd1032;
	add.s64 	%rd1308, %rd1082, %rd1008;
	add.s64 	%rd1309, %rd1308, %rd53;
	add.s64 	%rd1310, %rd1309, %rd1307;
	add.s64 	%rd1311, %rd1310, %rd1304;
	add.s64 	%rd1312, %rd1311, %rd1019;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r880,%dummy}, %rd1299;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r881}, %rd1299;
	}
	shf.r.wrap.b32 	%r882, %r881, %r880, 28;
	shf.r.wrap.b32 	%r883, %r880, %r881, 28;
	mov.b64 	%rd1313, {%r883, %r882};
	shf.l.wrap.b32 	%r884, %r880, %r881, 30;
	shf.l.wrap.b32 	%r885, %r881, %r880, 30;
	mov.b64 	%rd1314, {%r885, %r884};
	xor.b64  	%rd1315, %rd1314, %rd1313;
	shf.l.wrap.b32 	%r886, %r880, %r881, 25;
	shf.l.wrap.b32 	%r887, %r881, %r880, 25;
	mov.b64 	%rd1316, {%r887, %r886};
	xor.b64  	%rd1317, %rd1315, %rd1316;
	xor.b64  	%rd1318, %rd1299, %rd1043;
	xor.b64  	%rd1319, %rd1299, %rd1275;
	and.b64  	%rd1320, %rd1319, %rd1318;
	xor.b64  	%rd1321, %rd1320, %rd1299;
	add.s64 	%rd1322, %rd1311, %rd1321;
	add.s64 	%rd1323, %rd1322, %rd1317;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r888,%dummy}, %rd1312;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r889}, %rd1312;
	}
	shf.r.wrap.b32 	%r890, %r889, %r888, 14;
	shf.r.wrap.b32 	%r891, %r888, %r889, 14;
	mov.b64 	%rd1324, {%r891, %r890};
	shf.r.wrap.b32 	%r892, %r889, %r888, 18;
	shf.r.wrap.b32 	%r893, %r888, %r889, 18;
	mov.b64 	%rd1325, {%r893, %r892};
	xor.b64  	%rd1326, %rd1325, %rd1324;
	shf.l.wrap.b32 	%r894, %r888, %r889, 23;
	shf.l.wrap.b32 	%r895, %r889, %r888, 23;
	mov.b64 	%rd1327, {%r895, %r894};
	xor.b64  	%rd1328, %rd1326, %rd1327;
	xor.b64  	%rd1329, %rd1288, %rd1264;
	and.b64  	%rd1330, %rd1312, %rd1329;
	xor.b64  	%rd1331, %rd1330, %rd1264;
	add.s64 	%rd1332, %rd1095, %rd1032;
	add.s64 	%rd1333, %rd1332, %rd54;
	add.s64 	%rd1334, %rd1333, %rd1331;
	add.s64 	%rd1335, %rd1334, %rd1328;
	add.s64 	%rd1336, %rd1335, %rd1043;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r896,%dummy}, %rd1323;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r897}, %rd1323;
	}
	shf.r.wrap.b32 	%r898, %r897, %r896, 28;
	shf.r.wrap.b32 	%r899, %r896, %r897, 28;
	mov.b64 	%rd1337, {%r899, %r898};
	shf.l.wrap.b32 	%r900, %r896, %r897, 30;
	shf.l.wrap.b32 	%r901, %r897, %r896, 30;
	mov.b64 	%rd1338, {%r901, %r900};
	xor.b64  	%rd1339, %rd1338, %rd1337;
	shf.l.wrap.b32 	%r902, %r896, %r897, 25;
	shf.l.wrap.b32 	%r903, %r897, %r896, 25;
	mov.b64 	%rd1340, {%r903, %r902};
	xor.b64  	%rd1341, %rd1339, %rd1340;
	xor.b64  	%rd1342, %rd1323, %rd1275;
	xor.b64  	%rd1343, %rd1323, %rd1299;
	and.b64  	%rd1344, %rd1343, %rd1342;
	xor.b64  	%rd1345, %rd1344, %rd1323;
	add.s64 	%rd1346, %rd1335, %rd1345;
	add.s64 	%rd1347, %rd1346, %rd1341;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r904,%dummy}, %rd1336;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r905}, %rd1336;
	}
	shf.r.wrap.b32 	%r906, %r905, %r904, 14;
	shf.r.wrap.b32 	%r907, %r904, %r905, 14;
	mov.b64 	%rd1348, {%r907, %r906};
	shf.r.wrap.b32 	%r908, %r905, %r904, 18;
	shf.r.wrap.b32 	%r909, %r904, %r905, 18;
	mov.b64 	%rd1349, {%r909, %r908};
	xor.b64  	%rd1350, %rd1349, %rd1348;
	shf.l.wrap.b32 	%r910, %r904, %r905, 23;
	shf.l.wrap.b32 	%r911, %r905, %r904, 23;
	mov.b64 	%rd1351, {%r911, %r910};
	xor.b64  	%rd1352, %rd1350, %rd1351;
	xor.b64  	%rd1353, %rd1312, %rd1288;
	and.b64  	%rd1354, %rd1336, %rd1353;
	xor.b64  	%rd1355, %rd1354, %rd1288;
	add.s64 	%rd1356, %rd1264, %rd1108;
	add.s64 	%rd1357, %rd1356, %rd55;
	add.s64 	%rd1358, %rd1357, %rd1355;
	add.s64 	%rd1359, %rd1358, %rd1352;
	add.s64 	%rd1360, %rd1359, %rd1275;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r912,%dummy}, %rd1347;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r913}, %rd1347;
	}
	shf.r.wrap.b32 	%r914, %r913, %r912, 28;
	shf.r.wrap.b32 	%r915, %r912, %r913, 28;
	mov.b64 	%rd1361, {%r915, %r914};
	shf.l.wrap.b32 	%r916, %r912, %r913, 30;
	shf.l.wrap.b32 	%r917, %r913, %r912, 30;
	mov.b64 	%rd1362, {%r917, %r916};
	xor.b64  	%rd1363, %rd1362, %rd1361;
	shf.l.wrap.b32 	%r918, %r912, %r913, 25;
	shf.l.wrap.b32 	%r919, %r913, %r912, 25;
	mov.b64 	%rd1364, {%r919, %r918};
	xor.b64  	%rd1365, %rd1363, %rd1364;
	xor.b64  	%rd1366, %rd1347, %rd1299;
	xor.b64  	%rd1367, %rd1347, %rd1323;
	and.b64  	%rd1368, %rd1367, %rd1366;
	xor.b64  	%rd1369, %rd1368, %rd1347;
	add.s64 	%rd1370, %rd1359, %rd1369;
	add.s64 	%rd1371, %rd1370, %rd1365;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r920,%dummy}, %rd1360;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r921}, %rd1360;
	}
	shf.r.wrap.b32 	%r922, %r921, %r920, 14;
	shf.r.wrap.b32 	%r923, %r920, %r921, 14;
	mov.b64 	%rd1372, {%r923, %r922};
	shf.r.wrap.b32 	%r924, %r921, %r920, 18;
	shf.r.wrap.b32 	%r925, %r920, %r921, 18;
	mov.b64 	%rd1373, {%r925, %r924};
	xor.b64  	%rd1374, %rd1373, %rd1372;
	shf.l.wrap.b32 	%r926, %r920, %r921, 23;
	shf.l.wrap.b32 	%r927, %r921, %r920, 23;
	mov.b64 	%rd1375, {%r927, %r926};
	xor.b64  	%rd1376, %rd1374, %rd1375;
	xor.b64  	%rd1377, %rd1336, %rd1312;
	and.b64  	%rd1378, %rd1360, %rd1377;
	xor.b64  	%rd1379, %rd1378, %rd1312;
	add.s64 	%rd1380, %rd1288, %rd1121;
	add.s64 	%rd1381, %rd1380, %rd56;
	add.s64 	%rd1382, %rd1381, %rd1379;
	add.s64 	%rd1383, %rd1382, %rd1376;
	add.s64 	%rd1384, %rd1383, %rd1299;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r928,%dummy}, %rd1371;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r929}, %rd1371;
	}
	shf.r.wrap.b32 	%r930, %r929, %r928, 28;
	shf.r.wrap.b32 	%r931, %r928, %r929, 28;
	mov.b64 	%rd1385, {%r931, %r930};
	shf.l.wrap.b32 	%r932, %r928, %r929, 30;
	shf.l.wrap.b32 	%r933, %r929, %r928, 30;
	mov.b64 	%rd1386, {%r933, %r932};
	xor.b64  	%rd1387, %rd1386, %rd1385;
	shf.l.wrap.b32 	%r934, %r928, %r929, 25;
	shf.l.wrap.b32 	%r935, %r929, %r928, 25;
	mov.b64 	%rd1388, {%r935, %r934};
	xor.b64  	%rd1389, %rd1387, %rd1388;
	xor.b64  	%rd1390, %rd1371, %rd1323;
	xor.b64  	%rd1391, %rd1371, %rd1347;
	and.b64  	%rd1392, %rd1391, %rd1390;
	xor.b64  	%rd1393, %rd1392, %rd1371;
	add.s64 	%rd1394, %rd1383, %rd1393;
	add.s64 	%rd1395, %rd1394, %rd1389;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r936,%dummy}, %rd1384;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r937}, %rd1384;
	}
	shf.r.wrap.b32 	%r938, %r937, %r936, 14;
	shf.r.wrap.b32 	%r939, %r936, %r937, 14;
	mov.b64 	%rd1396, {%r939, %r938};
	shf.r.wrap.b32 	%r940, %r937, %r936, 18;
	shf.r.wrap.b32 	%r941, %r936, %r937, 18;
	mov.b64 	%rd1397, {%r941, %r940};
	xor.b64  	%rd1398, %rd1397, %rd1396;
	shf.l.wrap.b32 	%r942, %r936, %r937, 23;
	shf.l.wrap.b32 	%r943, %r937, %r936, 23;
	mov.b64 	%rd1399, {%r943, %r942};
	xor.b64  	%rd1400, %rd1398, %rd1399;
	xor.b64  	%rd1401, %rd1360, %rd1336;
	and.b64  	%rd1402, %rd1384, %rd1401;
	xor.b64  	%rd1403, %rd1402, %rd1336;
	add.s64 	%rd1404, %rd1312, %rd1134;
	add.s64 	%rd1405, %rd1404, %rd57;
	add.s64 	%rd1406, %rd1405, %rd1403;
	add.s64 	%rd1407, %rd1406, %rd1400;
	add.s64 	%rd1408, %rd1407, %rd1323;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r944,%dummy}, %rd1395;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r945}, %rd1395;
	}
	shf.r.wrap.b32 	%r946, %r945, %r944, 28;
	shf.r.wrap.b32 	%r947, %r944, %r945, 28;
	mov.b64 	%rd1409, {%r947, %r946};
	shf.l.wrap.b32 	%r948, %r944, %r945, 30;
	shf.l.wrap.b32 	%r949, %r945, %r944, 30;
	mov.b64 	%rd1410, {%r949, %r948};
	xor.b64  	%rd1411, %rd1410, %rd1409;
	shf.l.wrap.b32 	%r950, %r944, %r945, 25;
	shf.l.wrap.b32 	%r951, %r945, %r944, 25;
	mov.b64 	%rd1412, {%r951, %r950};
	xor.b64  	%rd1413, %rd1411, %rd1412;
	xor.b64  	%rd1414, %rd1395, %rd1347;
	xor.b64  	%rd1415, %rd1395, %rd1371;
	and.b64  	%rd1416, %rd1415, %rd1414;
	xor.b64  	%rd1417, %rd1416, %rd1395;
	add.s64 	%rd1418, %rd1407, %rd1417;
	add.s64 	%rd1419, %rd1418, %rd1413;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r952,%dummy}, %rd1408;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r953}, %rd1408;
	}
	shf.r.wrap.b32 	%r954, %r953, %r952, 14;
	shf.r.wrap.b32 	%r955, %r952, %r953, 14;
	mov.b64 	%rd1420, {%r955, %r954};
	shf.r.wrap.b32 	%r956, %r953, %r952, 18;
	shf.r.wrap.b32 	%r957, %r952, %r953, 18;
	mov.b64 	%rd1421, {%r957, %r956};
	xor.b64  	%rd1422, %rd1421, %rd1420;
	shf.l.wrap.b32 	%r958, %r952, %r953, 23;
	shf.l.wrap.b32 	%r959, %r953, %r952, 23;
	mov.b64 	%rd1423, {%r959, %r958};
	xor.b64  	%rd1424, %rd1422, %rd1423;
	xor.b64  	%rd1425, %rd1384, %rd1360;
	and.b64  	%rd1426, %rd1408, %rd1425;
	xor.b64  	%rd1427, %rd1426, %rd1360;
	add.s64 	%rd1428, %rd1336, %rd1147;
	add.s64 	%rd1429, %rd1428, %rd58;
	add.s64 	%rd1430, %rd1429, %rd1427;
	add.s64 	%rd1431, %rd1430, %rd1424;
	add.s64 	%rd1432, %rd1431, %rd1347;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r960,%dummy}, %rd1419;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r961}, %rd1419;
	}
	shf.r.wrap.b32 	%r962, %r961, %r960, 28;
	shf.r.wrap.b32 	%r963, %r960, %r961, 28;
	mov.b64 	%rd1433, {%r963, %r962};
	shf.l.wrap.b32 	%r964, %r960, %r961, 30;
	shf.l.wrap.b32 	%r965, %r961, %r960, 30;
	mov.b64 	%rd1434, {%r965, %r964};
	xor.b64  	%rd1435, %rd1434, %rd1433;
	shf.l.wrap.b32 	%r966, %r960, %r961, 25;
	shf.l.wrap.b32 	%r967, %r961, %r960, 25;
	mov.b64 	%rd1436, {%r967, %r966};
	xor.b64  	%rd1437, %rd1435, %rd1436;
	xor.b64  	%rd1438, %rd1419, %rd1371;
	xor.b64  	%rd1439, %rd1419, %rd1395;
	and.b64  	%rd1440, %rd1439, %rd1438;
	xor.b64  	%rd1441, %rd1440, %rd1419;
	add.s64 	%rd1442, %rd1431, %rd1441;
	add.s64 	%rd1443, %rd1442, %rd1437;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r968,%dummy}, %rd1432;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r969}, %rd1432;
	}
	shf.r.wrap.b32 	%r970, %r969, %r968, 14;
	shf.r.wrap.b32 	%r971, %r968, %r969, 14;
	mov.b64 	%rd1444, {%r971, %r970};
	shf.r.wrap.b32 	%r972, %r969, %r968, 18;
	shf.r.wrap.b32 	%r973, %r968, %r969, 18;
	mov.b64 	%rd1445, {%r973, %r972};
	xor.b64  	%rd1446, %rd1445, %rd1444;
	shf.l.wrap.b32 	%r974, %r968, %r969, 23;
	shf.l.wrap.b32 	%r975, %r969, %r968, 23;
	mov.b64 	%rd1447, {%r975, %r974};
	xor.b64  	%rd1448, %rd1446, %rd1447;
	xor.b64  	%rd1449, %rd1408, %rd1384;
	and.b64  	%rd1450, %rd1432, %rd1449;
	xor.b64  	%rd1451, %rd1450, %rd1384;
	add.s64 	%rd1452, %rd1360, %rd1160;
	add.s64 	%rd1453, %rd1452, %rd59;
	add.s64 	%rd1454, %rd1453, %rd1451;
	add.s64 	%rd1455, %rd1454, %rd1448;
	add.s64 	%rd1456, %rd1455, %rd1371;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r976,%dummy}, %rd1443;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r977}, %rd1443;
	}
	shf.r.wrap.b32 	%r978, %r977, %r976, 28;
	shf.r.wrap.b32 	%r979, %r976, %r977, 28;
	mov.b64 	%rd1457, {%r979, %r978};
	shf.l.wrap.b32 	%r980, %r976, %r977, 30;
	shf.l.wrap.b32 	%r981, %r977, %r976, 30;
	mov.b64 	%rd1458, {%r981, %r980};
	xor.b64  	%rd1459, %rd1458, %rd1457;
	shf.l.wrap.b32 	%r982, %r976, %r977, 25;
	shf.l.wrap.b32 	%r983, %r977, %r976, 25;
	mov.b64 	%rd1460, {%r983, %r982};
	xor.b64  	%rd1461, %rd1459, %rd1460;
	xor.b64  	%rd1462, %rd1443, %rd1395;
	xor.b64  	%rd1463, %rd1443, %rd1419;
	and.b64  	%rd1464, %rd1463, %rd1462;
	xor.b64  	%rd1465, %rd1464, %rd1443;
	add.s64 	%rd1466, %rd1455, %rd1465;
	add.s64 	%rd1467, %rd1466, %rd1461;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r984,%dummy}, %rd1456;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r985}, %rd1456;
	}
	shf.r.wrap.b32 	%r986, %r985, %r984, 14;
	shf.r.wrap.b32 	%r987, %r984, %r985, 14;
	mov.b64 	%rd1468, {%r987, %r986};
	shf.r.wrap.b32 	%r988, %r985, %r984, 18;
	shf.r.wrap.b32 	%r989, %r984, %r985, 18;
	mov.b64 	%rd1469, {%r989, %r988};
	xor.b64  	%rd1470, %rd1469, %rd1468;
	shf.l.wrap.b32 	%r990, %r984, %r985, 23;
	shf.l.wrap.b32 	%r991, %r985, %r984, 23;
	mov.b64 	%rd1471, {%r991, %r990};
	xor.b64  	%rd1472, %rd1470, %rd1471;
	xor.b64  	%rd1473, %rd1432, %rd1408;
	and.b64  	%rd1474, %rd1456, %rd1473;
	xor.b64  	%rd1475, %rd1474, %rd1408;
	add.s64 	%rd1476, %rd1384, %rd1173;
	add.s64 	%rd1477, %rd1476, %rd60;
	add.s64 	%rd1478, %rd1477, %rd1475;
	add.s64 	%rd1479, %rd1478, %rd1472;
	add.s64 	%rd1480, %rd1479, %rd1395;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r992,%dummy}, %rd1467;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r993}, %rd1467;
	}
	shf.r.wrap.b32 	%r994, %r993, %r992, 28;
	shf.r.wrap.b32 	%r995, %r992, %r993, 28;
	mov.b64 	%rd1481, {%r995, %r994};
	shf.l.wrap.b32 	%r996, %r992, %r993, 30;
	shf.l.wrap.b32 	%r997, %r993, %r992, 30;
	mov.b64 	%rd1482, {%r997, %r996};
	xor.b64  	%rd1483, %rd1482, %rd1481;
	shf.l.wrap.b32 	%r998, %r992, %r993, 25;
	shf.l.wrap.b32 	%r999, %r993, %r992, 25;
	mov.b64 	%rd1484, {%r999, %r998};
	xor.b64  	%rd1485, %rd1483, %rd1484;
	xor.b64  	%rd1486, %rd1467, %rd1419;
	xor.b64  	%rd1487, %rd1467, %rd1443;
	and.b64  	%rd1488, %rd1487, %rd1486;
	xor.b64  	%rd1489, %rd1488, %rd1467;
	add.s64 	%rd1490, %rd1479, %rd1489;
	add.s64 	%rd1491, %rd1490, %rd1485;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1000,%dummy}, %rd1480;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1001}, %rd1480;
	}
	shf.r.wrap.b32 	%r1002, %r1001, %r1000, 14;
	shf.r.wrap.b32 	%r1003, %r1000, %r1001, 14;
	mov.b64 	%rd1492, {%r1003, %r1002};
	shf.r.wrap.b32 	%r1004, %r1001, %r1000, 18;
	shf.r.wrap.b32 	%r1005, %r1000, %r1001, 18;
	mov.b64 	%rd1493, {%r1005, %r1004};
	xor.b64  	%rd1494, %rd1493, %rd1492;
	shf.l.wrap.b32 	%r1006, %r1000, %r1001, 23;
	shf.l.wrap.b32 	%r1007, %r1001, %r1000, 23;
	mov.b64 	%rd1495, {%r1007, %r1006};
	xor.b64  	%rd1496, %rd1494, %rd1495;
	xor.b64  	%rd1497, %rd1456, %rd1432;
	and.b64  	%rd1498, %rd1480, %rd1497;
	xor.b64  	%rd1499, %rd1498, %rd1432;
	add.s64 	%rd1500, %rd1408, %rd1186;
	add.s64 	%rd1501, %rd1500, %rd61;
	add.s64 	%rd1502, %rd1501, %rd1499;
	add.s64 	%rd1503, %rd1502, %rd1496;
	add.s64 	%rd1504, %rd1503, %rd1419;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1008,%dummy}, %rd1491;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1009}, %rd1491;
	}
	shf.r.wrap.b32 	%r1010, %r1009, %r1008, 28;
	shf.r.wrap.b32 	%r1011, %r1008, %r1009, 28;
	mov.b64 	%rd1505, {%r1011, %r1010};
	shf.l.wrap.b32 	%r1012, %r1008, %r1009, 30;
	shf.l.wrap.b32 	%r1013, %r1009, %r1008, 30;
	mov.b64 	%rd1506, {%r1013, %r1012};
	xor.b64  	%rd1507, %rd1506, %rd1505;
	shf.l.wrap.b32 	%r1014, %r1008, %r1009, 25;
	shf.l.wrap.b32 	%r1015, %r1009, %r1008, 25;
	mov.b64 	%rd1508, {%r1015, %r1014};
	xor.b64  	%rd1509, %rd1507, %rd1508;
	xor.b64  	%rd1510, %rd1491, %rd1443;
	xor.b64  	%rd1511, %rd1491, %rd1467;
	and.b64  	%rd1512, %rd1511, %rd1510;
	xor.b64  	%rd1513, %rd1512, %rd1491;
	add.s64 	%rd1514, %rd1503, %rd1513;
	add.s64 	%rd1515, %rd1514, %rd1509;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1016,%dummy}, %rd1504;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1017}, %rd1504;
	}
	shf.r.wrap.b32 	%r1018, %r1017, %r1016, 14;
	shf.r.wrap.b32 	%r1019, %r1016, %r1017, 14;
	mov.b64 	%rd1516, {%r1019, %r1018};
	shf.r.wrap.b32 	%r1020, %r1017, %r1016, 18;
	shf.r.wrap.b32 	%r1021, %r1016, %r1017, 18;
	mov.b64 	%rd1517, {%r1021, %r1020};
	xor.b64  	%rd1518, %rd1517, %rd1516;
	shf.l.wrap.b32 	%r1022, %r1016, %r1017, 23;
	shf.l.wrap.b32 	%r1023, %r1017, %r1016, 23;
	mov.b64 	%rd1519, {%r1023, %r1022};
	xor.b64  	%rd1520, %rd1518, %rd1519;
	xor.b64  	%rd1521, %rd1480, %rd1456;
	and.b64  	%rd1522, %rd1504, %rd1521;
	xor.b64  	%rd1523, %rd1522, %rd1456;
	add.s64 	%rd1524, %rd1432, %rd1199;
	add.s64 	%rd1525, %rd1524, %rd62;
	add.s64 	%rd1526, %rd1525, %rd1523;
	add.s64 	%rd1527, %rd1526, %rd1520;
	add.s64 	%rd1528, %rd1527, %rd1443;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1024,%dummy}, %rd1515;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1025}, %rd1515;
	}
	shf.r.wrap.b32 	%r1026, %r1025, %r1024, 28;
	shf.r.wrap.b32 	%r1027, %r1024, %r1025, 28;
	mov.b64 	%rd1529, {%r1027, %r1026};
	shf.l.wrap.b32 	%r1028, %r1024, %r1025, 30;
	shf.l.wrap.b32 	%r1029, %r1025, %r1024, 30;
	mov.b64 	%rd1530, {%r1029, %r1028};
	xor.b64  	%rd1531, %rd1530, %rd1529;
	shf.l.wrap.b32 	%r1030, %r1024, %r1025, 25;
	shf.l.wrap.b32 	%r1031, %r1025, %r1024, 25;
	mov.b64 	%rd1532, {%r1031, %r1030};
	xor.b64  	%rd1533, %rd1531, %rd1532;
	xor.b64  	%rd1534, %rd1515, %rd1467;
	xor.b64  	%rd1535, %rd1515, %rd1491;
	and.b64  	%rd1536, %rd1535, %rd1534;
	xor.b64  	%rd1537, %rd1536, %rd1515;
	add.s64 	%rd1538, %rd1527, %rd1537;
	add.s64 	%rd1539, %rd1538, %rd1533;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1032,%dummy}, %rd1528;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1033}, %rd1528;
	}
	shf.r.wrap.b32 	%r1034, %r1033, %r1032, 14;
	shf.r.wrap.b32 	%r1035, %r1032, %r1033, 14;
	mov.b64 	%rd1540, {%r1035, %r1034};
	shf.r.wrap.b32 	%r1036, %r1033, %r1032, 18;
	shf.r.wrap.b32 	%r1037, %r1032, %r1033, 18;
	mov.b64 	%rd1541, {%r1037, %r1036};
	xor.b64  	%rd1542, %rd1541, %rd1540;
	shf.l.wrap.b32 	%r1038, %r1032, %r1033, 23;
	shf.l.wrap.b32 	%r1039, %r1033, %r1032, 23;
	mov.b64 	%rd1543, {%r1039, %r1038};
	xor.b64  	%rd1544, %rd1542, %rd1543;
	xor.b64  	%rd1545, %rd1504, %rd1480;
	and.b64  	%rd1546, %rd1528, %rd1545;
	xor.b64  	%rd1547, %rd1546, %rd1480;
	add.s64 	%rd1548, %rd1456, %rd1212;
	add.s64 	%rd1549, %rd1548, %rd63;
	add.s64 	%rd1550, %rd1549, %rd1547;
	add.s64 	%rd1551, %rd1550, %rd1544;
	add.s64 	%rd1552, %rd1551, %rd1467;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1040,%dummy}, %rd1539;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1041}, %rd1539;
	}
	shf.r.wrap.b32 	%r1042, %r1041, %r1040, 28;
	shf.r.wrap.b32 	%r1043, %r1040, %r1041, 28;
	mov.b64 	%rd1553, {%r1043, %r1042};
	shf.l.wrap.b32 	%r1044, %r1040, %r1041, 30;
	shf.l.wrap.b32 	%r1045, %r1041, %r1040, 30;
	mov.b64 	%rd1554, {%r1045, %r1044};
	xor.b64  	%rd1555, %rd1554, %rd1553;
	shf.l.wrap.b32 	%r1046, %r1040, %r1041, 25;
	shf.l.wrap.b32 	%r1047, %r1041, %r1040, 25;
	mov.b64 	%rd1556, {%r1047, %r1046};
	xor.b64  	%rd1557, %rd1555, %rd1556;
	xor.b64  	%rd1558, %rd1539, %rd1491;
	xor.b64  	%rd1559, %rd1539, %rd1515;
	and.b64  	%rd1560, %rd1559, %rd1558;
	xor.b64  	%rd1561, %rd1560, %rd1539;
	add.s64 	%rd1562, %rd1551, %rd1561;
	add.s64 	%rd1563, %rd1562, %rd1557;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1048,%dummy}, %rd1552;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1049}, %rd1552;
	}
	shf.r.wrap.b32 	%r1050, %r1049, %r1048, 14;
	shf.r.wrap.b32 	%r1051, %r1048, %r1049, 14;
	mov.b64 	%rd1564, {%r1051, %r1050};
	shf.r.wrap.b32 	%r1052, %r1049, %r1048, 18;
	shf.r.wrap.b32 	%r1053, %r1048, %r1049, 18;
	mov.b64 	%rd1565, {%r1053, %r1052};
	xor.b64  	%rd1566, %rd1565, %rd1564;
	shf.l.wrap.b32 	%r1054, %r1048, %r1049, 23;
	shf.l.wrap.b32 	%r1055, %r1049, %r1048, 23;
	mov.b64 	%rd1567, {%r1055, %r1054};
	xor.b64  	%rd1568, %rd1566, %rd1567;
	xor.b64  	%rd1569, %rd1528, %rd1504;
	and.b64  	%rd1570, %rd1552, %rd1569;
	xor.b64  	%rd1571, %rd1570, %rd1504;
	add.s64 	%rd1572, %rd1480, %rd1225;
	add.s64 	%rd1573, %rd1572, %rd64;
	add.s64 	%rd1574, %rd1573, %rd1571;
	add.s64 	%rd1575, %rd1574, %rd1568;
	add.s64 	%rd1576, %rd1575, %rd1491;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1056,%dummy}, %rd1563;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1057}, %rd1563;
	}
	shf.r.wrap.b32 	%r1058, %r1057, %r1056, 28;
	shf.r.wrap.b32 	%r1059, %r1056, %r1057, 28;
	mov.b64 	%rd1577, {%r1059, %r1058};
	shf.l.wrap.b32 	%r1060, %r1056, %r1057, 30;
	shf.l.wrap.b32 	%r1061, %r1057, %r1056, 30;
	mov.b64 	%rd1578, {%r1061, %r1060};
	xor.b64  	%rd1579, %rd1578, %rd1577;
	shf.l.wrap.b32 	%r1062, %r1056, %r1057, 25;
	shf.l.wrap.b32 	%r1063, %r1057, %r1056, 25;
	mov.b64 	%rd1580, {%r1063, %r1062};
	xor.b64  	%rd1581, %rd1579, %rd1580;
	xor.b64  	%rd1582, %rd1563, %rd1515;
	xor.b64  	%rd1583, %rd1563, %rd1539;
	and.b64  	%rd1584, %rd1583, %rd1582;
	xor.b64  	%rd1585, %rd1584, %rd1563;
	add.s64 	%rd1586, %rd1575, %rd1585;
	add.s64 	%rd1587, %rd1586, %rd1581;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1064,%dummy}, %rd1576;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1065}, %rd1576;
	}
	shf.r.wrap.b32 	%r1066, %r1065, %r1064, 14;
	shf.r.wrap.b32 	%r1067, %r1064, %r1065, 14;
	mov.b64 	%rd1588, {%r1067, %r1066};
	shf.r.wrap.b32 	%r1068, %r1065, %r1064, 18;
	shf.r.wrap.b32 	%r1069, %r1064, %r1065, 18;
	mov.b64 	%rd1589, {%r1069, %r1068};
	xor.b64  	%rd1590, %rd1589, %rd1588;
	shf.l.wrap.b32 	%r1070, %r1064, %r1065, 23;
	shf.l.wrap.b32 	%r1071, %r1065, %r1064, 23;
	mov.b64 	%rd1591, {%r1071, %r1070};
	xor.b64  	%rd1592, %rd1590, %rd1591;
	xor.b64  	%rd1593, %rd1552, %rd1528;
	and.b64  	%rd1594, %rd1576, %rd1593;
	xor.b64  	%rd1595, %rd1594, %rd1528;
	add.s64 	%rd1596, %rd1504, %rd1238;
	add.s64 	%rd1597, %rd1596, %rd65;
	add.s64 	%rd1598, %rd1597, %rd1595;
	add.s64 	%rd1599, %rd1598, %rd1592;
	add.s64 	%rd1600, %rd1599, %rd1515;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1072,%dummy}, %rd1587;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1073}, %rd1587;
	}
	shf.r.wrap.b32 	%r1074, %r1073, %r1072, 28;
	shf.r.wrap.b32 	%r1075, %r1072, %r1073, 28;
	mov.b64 	%rd1601, {%r1075, %r1074};
	shf.l.wrap.b32 	%r1076, %r1072, %r1073, 30;
	shf.l.wrap.b32 	%r1077, %r1073, %r1072, 30;
	mov.b64 	%rd1602, {%r1077, %r1076};
	xor.b64  	%rd1603, %rd1602, %rd1601;
	shf.l.wrap.b32 	%r1078, %r1072, %r1073, 25;
	shf.l.wrap.b32 	%r1079, %r1073, %r1072, 25;
	mov.b64 	%rd1604, {%r1079, %r1078};
	xor.b64  	%rd1605, %rd1603, %rd1604;
	xor.b64  	%rd1606, %rd1587, %rd1539;
	xor.b64  	%rd1607, %rd1587, %rd1563;
	and.b64  	%rd1608, %rd1607, %rd1606;
	xor.b64  	%rd1609, %rd1608, %rd1587;
	add.s64 	%rd1610, %rd1599, %rd1609;
	add.s64 	%rd1611, %rd1610, %rd1605;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1080,%dummy}, %rd1600;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1081}, %rd1600;
	}
	shf.r.wrap.b32 	%r1082, %r1081, %r1080, 14;
	shf.r.wrap.b32 	%r1083, %r1080, %r1081, 14;
	mov.b64 	%rd1612, {%r1083, %r1082};
	shf.r.wrap.b32 	%r1084, %r1081, %r1080, 18;
	shf.r.wrap.b32 	%r1085, %r1080, %r1081, 18;
	mov.b64 	%rd1613, {%r1085, %r1084};
	xor.b64  	%rd1614, %rd1613, %rd1612;
	shf.l.wrap.b32 	%r1086, %r1080, %r1081, 23;
	shf.l.wrap.b32 	%r1087, %r1081, %r1080, 23;
	mov.b64 	%rd1615, {%r1087, %r1086};
	xor.b64  	%rd1616, %rd1614, %rd1615;
	xor.b64  	%rd1617, %rd1576, %rd1552;
	and.b64  	%rd1618, %rd1600, %rd1617;
	xor.b64  	%rd1619, %rd1618, %rd1552;
	add.s64 	%rd1620, %rd1528, %rd1251;
	add.s64 	%rd1621, %rd1620, %rd66;
	add.s64 	%rd1622, %rd1621, %rd1619;
	add.s64 	%rd1623, %rd1622, %rd1616;
	add.s64 	%rd1624, %rd1623, %rd1539;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1088,%dummy}, %rd1611;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1089}, %rd1611;
	}
	shf.r.wrap.b32 	%r1090, %r1089, %r1088, 28;
	shf.r.wrap.b32 	%r1091, %r1088, %r1089, 28;
	mov.b64 	%rd1625, {%r1091, %r1090};
	shf.l.wrap.b32 	%r1092, %r1088, %r1089, 30;
	shf.l.wrap.b32 	%r1093, %r1089, %r1088, 30;
	mov.b64 	%rd1626, {%r1093, %r1092};
	xor.b64  	%rd1627, %rd1626, %rd1625;
	shf.l.wrap.b32 	%r1094, %r1088, %r1089, 25;
	shf.l.wrap.b32 	%r1095, %r1089, %r1088, 25;
	mov.b64 	%rd1628, {%r1095, %r1094};
	xor.b64  	%rd1629, %rd1627, %rd1628;
	xor.b64  	%rd1630, %rd1611, %rd1563;
	xor.b64  	%rd1631, %rd1611, %rd1587;
	and.b64  	%rd1632, %rd1631, %rd1630;
	xor.b64  	%rd1633, %rd1632, %rd1611;
	add.s64 	%rd1634, %rd1623, %rd1633;
	add.s64 	%rd1635, %rd1634, %rd1629;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1096,%dummy}, %rd1238;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1097}, %rd1238;
	}
	shf.r.wrap.b32 	%r1098, %r1097, %r1096, 19;
	shf.r.wrap.b32 	%r1099, %r1096, %r1097, 19;
	mov.b64 	%rd1636, {%r1099, %r1098};
	shf.l.wrap.b32 	%r1100, %r1096, %r1097, 3;
	shf.l.wrap.b32 	%r1101, %r1097, %r1096, 3;
	mov.b64 	%rd1637, {%r1101, %r1100};
	shr.u64 	%rd1638, %rd1238, 6;
	xor.b64  	%rd1639, %rd1636, %rd1638;
	xor.b64  	%rd1640, %rd1639, %rd1637;
	shf.r.wrap.b32 	%r1102, %r711, %r710, 1;
	shf.r.wrap.b32 	%r1103, %r710, %r711, 1;
	mov.b64 	%rd1641, {%r1103, %r1102};
	shf.r.wrap.b32 	%r1104, %r711, %r710, 8;
	shf.r.wrap.b32 	%r1105, %r710, %r711, 8;
	mov.b64 	%rd1642, {%r1105, %r1104};
	shr.u64 	%rd1643, %rd1069, 7;
	xor.b64  	%rd1644, %rd1641, %rd1643;
	xor.b64  	%rd1645, %rd1644, %rd1642;
	add.s64 	%rd1646, %rd1056, %rd1173;
	add.s64 	%rd1647, %rd1646, %rd1640;
	add.s64 	%rd1648, %rd1647, %rd1645;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1106,%dummy}, %rd1251;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1107}, %rd1251;
	}
	shf.r.wrap.b32 	%r1108, %r1107, %r1106, 19;
	shf.r.wrap.b32 	%r1109, %r1106, %r1107, 19;
	mov.b64 	%rd1649, {%r1109, %r1108};
	shf.l.wrap.b32 	%r1110, %r1106, %r1107, 3;
	shf.l.wrap.b32 	%r1111, %r1107, %r1106, 3;
	mov.b64 	%rd1650, {%r1111, %r1110};
	shr.u64 	%rd1651, %rd1251, 6;
	xor.b64  	%rd1652, %rd1649, %rd1651;
	xor.b64  	%rd1653, %rd1652, %rd1650;
	shf.r.wrap.b32 	%r1112, %r721, %r720, 1;
	shf.r.wrap.b32 	%r1113, %r720, %r721, 1;
	mov.b64 	%rd1654, {%r1113, %r1112};
	shf.r.wrap.b32 	%r1114, %r721, %r720, 8;
	shf.r.wrap.b32 	%r1115, %r720, %r721, 8;
	mov.b64 	%rd1655, {%r1115, %r1114};
	shr.u64 	%rd1656, %rd1082, 7;
	xor.b64  	%rd1657, %rd1654, %rd1656;
	xor.b64  	%rd1658, %rd1657, %rd1655;
	add.s64 	%rd1659, %rd1069, %rd1186;
	add.s64 	%rd1660, %rd1659, %rd1653;
	add.s64 	%rd1661, %rd1660, %rd1658;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1116,%dummy}, %rd1648;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1117}, %rd1648;
	}
	shf.r.wrap.b32 	%r1118, %r1117, %r1116, 19;
	shf.r.wrap.b32 	%r1119, %r1116, %r1117, 19;
	mov.b64 	%rd1662, {%r1119, %r1118};
	shf.l.wrap.b32 	%r1120, %r1116, %r1117, 3;
	shf.l.wrap.b32 	%r1121, %r1117, %r1116, 3;
	mov.b64 	%rd1663, {%r1121, %r1120};
	shr.u64 	%rd1664, %rd1648, 6;
	xor.b64  	%rd1665, %rd1662, %rd1664;
	xor.b64  	%rd1666, %rd1665, %rd1663;
	shf.r.wrap.b32 	%r1122, %r731, %r730, 1;
	shf.r.wrap.b32 	%r1123, %r730, %r731, 1;
	mov.b64 	%rd1667, {%r1123, %r1122};
	shf.r.wrap.b32 	%r1124, %r731, %r730, 8;
	shf.r.wrap.b32 	%r1125, %r730, %r731, 8;
	mov.b64 	%rd1668, {%r1125, %r1124};
	shr.u64 	%rd1669, %rd1095, 7;
	xor.b64  	%rd1670, %rd1667, %rd1669;
	xor.b64  	%rd1671, %rd1670, %rd1668;
	add.s64 	%rd1672, %rd1082, %rd1199;
	add.s64 	%rd1673, %rd1672, %rd1666;
	add.s64 	%rd1674, %rd1673, %rd1671;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1126,%dummy}, %rd1661;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1127}, %rd1661;
	}
	shf.r.wrap.b32 	%r1128, %r1127, %r1126, 19;
	shf.r.wrap.b32 	%r1129, %r1126, %r1127, 19;
	mov.b64 	%rd1675, {%r1129, %r1128};
	shf.l.wrap.b32 	%r1130, %r1126, %r1127, 3;
	shf.l.wrap.b32 	%r1131, %r1127, %r1126, 3;
	mov.b64 	%rd1676, {%r1131, %r1130};
	shr.u64 	%rd1677, %rd1661, 6;
	xor.b64  	%rd1678, %rd1675, %rd1677;
	xor.b64  	%rd1679, %rd1678, %rd1676;
	shf.r.wrap.b32 	%r1132, %r741, %r740, 1;
	shf.r.wrap.b32 	%r1133, %r740, %r741, 1;
	mov.b64 	%rd1680, {%r1133, %r1132};
	shf.r.wrap.b32 	%r1134, %r741, %r740, 8;
	shf.r.wrap.b32 	%r1135, %r740, %r741, 8;
	mov.b64 	%rd1681, {%r1135, %r1134};
	shr.u64 	%rd1682, %rd1108, 7;
	xor.b64  	%rd1683, %rd1680, %rd1682;
	xor.b64  	%rd1684, %rd1683, %rd1681;
	add.s64 	%rd1685, %rd1095, %rd1212;
	add.s64 	%rd1686, %rd1685, %rd1679;
	add.s64 	%rd1687, %rd1686, %rd1684;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1136,%dummy}, %rd1674;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1137}, %rd1674;
	}
	shf.r.wrap.b32 	%r1138, %r1137, %r1136, 19;
	shf.r.wrap.b32 	%r1139, %r1136, %r1137, 19;
	mov.b64 	%rd1688, {%r1139, %r1138};
	shf.l.wrap.b32 	%r1140, %r1136, %r1137, 3;
	shf.l.wrap.b32 	%r1141, %r1137, %r1136, 3;
	mov.b64 	%rd1689, {%r1141, %r1140};
	shr.u64 	%rd1690, %rd1674, 6;
	xor.b64  	%rd1691, %rd1688, %rd1690;
	xor.b64  	%rd1692, %rd1691, %rd1689;
	shf.r.wrap.b32 	%r1142, %r751, %r750, 1;
	shf.r.wrap.b32 	%r1143, %r750, %r751, 1;
	mov.b64 	%rd1693, {%r1143, %r1142};
	shf.r.wrap.b32 	%r1144, %r751, %r750, 8;
	shf.r.wrap.b32 	%r1145, %r750, %r751, 8;
	mov.b64 	%rd1694, {%r1145, %r1144};
	shr.u64 	%rd1695, %rd1121, 7;
	xor.b64  	%rd1696, %rd1693, %rd1695;
	xor.b64  	%rd1697, %rd1696, %rd1694;
	add.s64 	%rd1698, %rd1108, %rd1225;
	add.s64 	%rd1699, %rd1698, %rd1692;
	add.s64 	%rd1700, %rd1699, %rd1697;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1146,%dummy}, %rd1687;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1147}, %rd1687;
	}
	shf.r.wrap.b32 	%r1148, %r1147, %r1146, 19;
	shf.r.wrap.b32 	%r1149, %r1146, %r1147, 19;
	mov.b64 	%rd1701, {%r1149, %r1148};
	shf.l.wrap.b32 	%r1150, %r1146, %r1147, 3;
	shf.l.wrap.b32 	%r1151, %r1147, %r1146, 3;
	mov.b64 	%rd1702, {%r1151, %r1150};
	shr.u64 	%rd1703, %rd1687, 6;
	xor.b64  	%rd1704, %rd1701, %rd1703;
	xor.b64  	%rd1705, %rd1704, %rd1702;
	shf.r.wrap.b32 	%r1152, %r761, %r760, 1;
	shf.r.wrap.b32 	%r1153, %r760, %r761, 1;
	mov.b64 	%rd1706, {%r1153, %r1152};
	shf.r.wrap.b32 	%r1154, %r761, %r760, 8;
	shf.r.wrap.b32 	%r1155, %r760, %r761, 8;
	mov.b64 	%rd1707, {%r1155, %r1154};
	shr.u64 	%rd1708, %rd1134, 7;
	xor.b64  	%rd1709, %rd1706, %rd1708;
	xor.b64  	%rd1710, %rd1709, %rd1707;
	add.s64 	%rd1711, %rd1121, %rd1238;
	add.s64 	%rd1712, %rd1711, %rd1705;
	add.s64 	%rd1713, %rd1712, %rd1710;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1156,%dummy}, %rd1700;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1157}, %rd1700;
	}
	shf.r.wrap.b32 	%r1158, %r1157, %r1156, 19;
	shf.r.wrap.b32 	%r1159, %r1156, %r1157, 19;
	mov.b64 	%rd1714, {%r1159, %r1158};
	shf.l.wrap.b32 	%r1160, %r1156, %r1157, 3;
	shf.l.wrap.b32 	%r1161, %r1157, %r1156, 3;
	mov.b64 	%rd1715, {%r1161, %r1160};
	shr.u64 	%rd1716, %rd1700, 6;
	xor.b64  	%rd1717, %rd1714, %rd1716;
	xor.b64  	%rd1718, %rd1717, %rd1715;
	shf.r.wrap.b32 	%r1162, %r771, %r770, 1;
	shf.r.wrap.b32 	%r1163, %r770, %r771, 1;
	mov.b64 	%rd1719, {%r1163, %r1162};
	shf.r.wrap.b32 	%r1164, %r771, %r770, 8;
	shf.r.wrap.b32 	%r1165, %r770, %r771, 8;
	mov.b64 	%rd1720, {%r1165, %r1164};
	shr.u64 	%rd1721, %rd1147, 7;
	xor.b64  	%rd1722, %rd1719, %rd1721;
	xor.b64  	%rd1723, %rd1722, %rd1720;
	add.s64 	%rd1724, %rd1251, %rd1134;
	add.s64 	%rd1725, %rd1724, %rd1718;
	add.s64 	%rd1726, %rd1725, %rd1723;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1166,%dummy}, %rd1713;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1167}, %rd1713;
	}
	shf.r.wrap.b32 	%r1168, %r1167, %r1166, 19;
	shf.r.wrap.b32 	%r1169, %r1166, %r1167, 19;
	mov.b64 	%rd1727, {%r1169, %r1168};
	shf.l.wrap.b32 	%r1170, %r1166, %r1167, 3;
	shf.l.wrap.b32 	%r1171, %r1167, %r1166, 3;
	mov.b64 	%rd1728, {%r1171, %r1170};
	shr.u64 	%rd1729, %rd1713, 6;
	xor.b64  	%rd1730, %rd1727, %rd1729;
	xor.b64  	%rd1731, %rd1730, %rd1728;
	shf.r.wrap.b32 	%r1172, %r781, %r780, 1;
	shf.r.wrap.b32 	%r1173, %r780, %r781, 1;
	mov.b64 	%rd1732, {%r1173, %r1172};
	shf.r.wrap.b32 	%r1174, %r781, %r780, 8;
	shf.r.wrap.b32 	%r1175, %r780, %r781, 8;
	mov.b64 	%rd1733, {%r1175, %r1174};
	shr.u64 	%rd1734, %rd1160, 7;
	xor.b64  	%rd1735, %rd1732, %rd1734;
	xor.b64  	%rd1736, %rd1735, %rd1733;
	add.s64 	%rd1737, %rd1648, %rd1147;
	add.s64 	%rd1738, %rd1737, %rd1731;
	add.s64 	%rd1739, %rd1738, %rd1736;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1176,%dummy}, %rd1726;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1177}, %rd1726;
	}
	shf.r.wrap.b32 	%r1178, %r1177, %r1176, 19;
	shf.r.wrap.b32 	%r1179, %r1176, %r1177, 19;
	mov.b64 	%rd1740, {%r1179, %r1178};
	shf.l.wrap.b32 	%r1180, %r1176, %r1177, 3;
	shf.l.wrap.b32 	%r1181, %r1177, %r1176, 3;
	mov.b64 	%rd1741, {%r1181, %r1180};
	shr.u64 	%rd1742, %rd1726, 6;
	xor.b64  	%rd1743, %rd1740, %rd1742;
	xor.b64  	%rd1744, %rd1743, %rd1741;
	shf.r.wrap.b32 	%r1182, %r791, %r790, 1;
	shf.r.wrap.b32 	%r1183, %r790, %r791, 1;
	mov.b64 	%rd1745, {%r1183, %r1182};
	shf.r.wrap.b32 	%r1184, %r791, %r790, 8;
	shf.r.wrap.b32 	%r1185, %r790, %r791, 8;
	mov.b64 	%rd1746, {%r1185, %r1184};
	shr.u64 	%rd1747, %rd1173, 7;
	xor.b64  	%rd1748, %rd1745, %rd1747;
	xor.b64  	%rd1749, %rd1748, %rd1746;
	add.s64 	%rd1750, %rd1661, %rd1160;
	add.s64 	%rd1751, %rd1750, %rd1744;
	add.s64 	%rd1752, %rd1751, %rd1749;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1186,%dummy}, %rd1739;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1187}, %rd1739;
	}
	shf.r.wrap.b32 	%r1188, %r1187, %r1186, 19;
	shf.r.wrap.b32 	%r1189, %r1186, %r1187, 19;
	mov.b64 	%rd1753, {%r1189, %r1188};
	shf.l.wrap.b32 	%r1190, %r1186, %r1187, 3;
	shf.l.wrap.b32 	%r1191, %r1187, %r1186, 3;
	mov.b64 	%rd1754, {%r1191, %r1190};
	shr.u64 	%rd1755, %rd1739, 6;
	xor.b64  	%rd1756, %rd1753, %rd1755;
	xor.b64  	%rd1757, %rd1756, %rd1754;
	shf.r.wrap.b32 	%r1192, %r801, %r800, 1;
	shf.r.wrap.b32 	%r1193, %r800, %r801, 1;
	mov.b64 	%rd1758, {%r1193, %r1192};
	shf.r.wrap.b32 	%r1194, %r801, %r800, 8;
	shf.r.wrap.b32 	%r1195, %r800, %r801, 8;
	mov.b64 	%rd1759, {%r1195, %r1194};
	shr.u64 	%rd1760, %rd1186, 7;
	xor.b64  	%rd1761, %rd1758, %rd1760;
	xor.b64  	%rd1762, %rd1761, %rd1759;
	add.s64 	%rd1763, %rd1674, %rd1173;
	add.s64 	%rd1764, %rd1763, %rd1757;
	add.s64 	%rd1765, %rd1764, %rd1762;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1196,%dummy}, %rd1752;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1197}, %rd1752;
	}
	shf.r.wrap.b32 	%r1198, %r1197, %r1196, 19;
	shf.r.wrap.b32 	%r1199, %r1196, %r1197, 19;
	mov.b64 	%rd1766, {%r1199, %r1198};
	shf.l.wrap.b32 	%r1200, %r1196, %r1197, 3;
	shf.l.wrap.b32 	%r1201, %r1197, %r1196, 3;
	mov.b64 	%rd1767, {%r1201, %r1200};
	shr.u64 	%rd1768, %rd1752, 6;
	xor.b64  	%rd1769, %rd1766, %rd1768;
	xor.b64  	%rd1770, %rd1769, %rd1767;
	shf.r.wrap.b32 	%r1202, %r811, %r810, 1;
	shf.r.wrap.b32 	%r1203, %r810, %r811, 1;
	mov.b64 	%rd1771, {%r1203, %r1202};
	shf.r.wrap.b32 	%r1204, %r811, %r810, 8;
	shf.r.wrap.b32 	%r1205, %r810, %r811, 8;
	mov.b64 	%rd1772, {%r1205, %r1204};
	shr.u64 	%rd1773, %rd1199, 7;
	xor.b64  	%rd1774, %rd1771, %rd1773;
	xor.b64  	%rd1775, %rd1774, %rd1772;
	add.s64 	%rd1776, %rd1687, %rd1186;
	add.s64 	%rd1777, %rd1776, %rd1770;
	add.s64 	%rd1778, %rd1777, %rd1775;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1206,%dummy}, %rd1765;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1207}, %rd1765;
	}
	shf.r.wrap.b32 	%r1208, %r1207, %r1206, 19;
	shf.r.wrap.b32 	%r1209, %r1206, %r1207, 19;
	mov.b64 	%rd1779, {%r1209, %r1208};
	shf.l.wrap.b32 	%r1210, %r1206, %r1207, 3;
	shf.l.wrap.b32 	%r1211, %r1207, %r1206, 3;
	mov.b64 	%rd1780, {%r1211, %r1210};
	shr.u64 	%rd1781, %rd1765, 6;
	xor.b64  	%rd1782, %rd1779, %rd1781;
	xor.b64  	%rd1783, %rd1782, %rd1780;
	shf.r.wrap.b32 	%r1212, %r821, %r820, 1;
	shf.r.wrap.b32 	%r1213, %r820, %r821, 1;
	mov.b64 	%rd1784, {%r1213, %r1212};
	shf.r.wrap.b32 	%r1214, %r821, %r820, 8;
	shf.r.wrap.b32 	%r1215, %r820, %r821, 8;
	mov.b64 	%rd1785, {%r1215, %r1214};
	shr.u64 	%rd1786, %rd1212, 7;
	xor.b64  	%rd1787, %rd1784, %rd1786;
	xor.b64  	%rd1788, %rd1787, %rd1785;
	add.s64 	%rd1789, %rd1700, %rd1199;
	add.s64 	%rd1790, %rd1789, %rd1783;
	add.s64 	%rd1791, %rd1790, %rd1788;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1216,%dummy}, %rd1778;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1217}, %rd1778;
	}
	shf.r.wrap.b32 	%r1218, %r1217, %r1216, 19;
	shf.r.wrap.b32 	%r1219, %r1216, %r1217, 19;
	mov.b64 	%rd1792, {%r1219, %r1218};
	shf.l.wrap.b32 	%r1220, %r1216, %r1217, 3;
	shf.l.wrap.b32 	%r1221, %r1217, %r1216, 3;
	mov.b64 	%rd1793, {%r1221, %r1220};
	shr.u64 	%rd1794, %rd1778, 6;
	xor.b64  	%rd1795, %rd1792, %rd1794;
	xor.b64  	%rd1796, %rd1795, %rd1793;
	shf.r.wrap.b32 	%r1222, %r831, %r830, 1;
	shf.r.wrap.b32 	%r1223, %r830, %r831, 1;
	mov.b64 	%rd1797, {%r1223, %r1222};
	shf.r.wrap.b32 	%r1224, %r831, %r830, 8;
	shf.r.wrap.b32 	%r1225, %r830, %r831, 8;
	mov.b64 	%rd1798, {%r1225, %r1224};
	shr.u64 	%rd1799, %rd1225, 7;
	xor.b64  	%rd1800, %rd1797, %rd1799;
	xor.b64  	%rd1801, %rd1800, %rd1798;
	add.s64 	%rd1802, %rd1713, %rd1212;
	add.s64 	%rd1803, %rd1802, %rd1796;
	add.s64 	%rd1804, %rd1803, %rd1801;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1226,%dummy}, %rd1791;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1227}, %rd1791;
	}
	shf.r.wrap.b32 	%r1228, %r1227, %r1226, 19;
	shf.r.wrap.b32 	%r1229, %r1226, %r1227, 19;
	mov.b64 	%rd1805, {%r1229, %r1228};
	shf.l.wrap.b32 	%r1230, %r1226, %r1227, 3;
	shf.l.wrap.b32 	%r1231, %r1227, %r1226, 3;
	mov.b64 	%rd1806, {%r1231, %r1230};
	shr.u64 	%rd1807, %rd1791, 6;
	xor.b64  	%rd1808, %rd1805, %rd1807;
	xor.b64  	%rd1809, %rd1808, %rd1806;
	shf.r.wrap.b32 	%r1232, %r1097, %r1096, 1;
	shf.r.wrap.b32 	%r1233, %r1096, %r1097, 1;
	mov.b64 	%rd1810, {%r1233, %r1232};
	shf.r.wrap.b32 	%r1234, %r1097, %r1096, 8;
	shf.r.wrap.b32 	%r1235, %r1096, %r1097, 8;
	mov.b64 	%rd1811, {%r1235, %r1234};
	shr.u64 	%rd1812, %rd1238, 7;
	xor.b64  	%rd1813, %rd1810, %rd1812;
	xor.b64  	%rd1814, %rd1813, %rd1811;
	add.s64 	%rd1815, %rd1726, %rd1225;
	add.s64 	%rd1816, %rd1815, %rd1809;
	add.s64 	%rd1817, %rd1816, %rd1814;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1236,%dummy}, %rd1804;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1237}, %rd1804;
	}
	shf.r.wrap.b32 	%r1238, %r1237, %r1236, 19;
	shf.r.wrap.b32 	%r1239, %r1236, %r1237, 19;
	mov.b64 	%rd1818, {%r1239, %r1238};
	shf.l.wrap.b32 	%r1240, %r1236, %r1237, 3;
	shf.l.wrap.b32 	%r1241, %r1237, %r1236, 3;
	mov.b64 	%rd1819, {%r1241, %r1240};
	shr.u64 	%rd1820, %rd1804, 6;
	xor.b64  	%rd1821, %rd1818, %rd1820;
	xor.b64  	%rd1822, %rd1821, %rd1819;
	shf.r.wrap.b32 	%r1242, %r1107, %r1106, 1;
	shf.r.wrap.b32 	%r1243, %r1106, %r1107, 1;
	mov.b64 	%rd1823, {%r1243, %r1242};
	shf.r.wrap.b32 	%r1244, %r1107, %r1106, 8;
	shf.r.wrap.b32 	%r1245, %r1106, %r1107, 8;
	mov.b64 	%rd1824, {%r1245, %r1244};
	shr.u64 	%rd1825, %rd1251, 7;
	xor.b64  	%rd1826, %rd1823, %rd1825;
	xor.b64  	%rd1827, %rd1826, %rd1824;
	add.s64 	%rd1828, %rd1739, %rd1238;
	add.s64 	%rd1829, %rd1828, %rd1822;
	add.s64 	%rd1830, %rd1829, %rd1827;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1246,%dummy}, %rd1817;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1247}, %rd1817;
	}
	shf.r.wrap.b32 	%r1248, %r1247, %r1246, 19;
	shf.r.wrap.b32 	%r1249, %r1246, %r1247, 19;
	mov.b64 	%rd1831, {%r1249, %r1248};
	shf.l.wrap.b32 	%r1250, %r1246, %r1247, 3;
	shf.l.wrap.b32 	%r1251, %r1247, %r1246, 3;
	mov.b64 	%rd1832, {%r1251, %r1250};
	shr.u64 	%rd1833, %rd1817, 6;
	xor.b64  	%rd1834, %rd1831, %rd1833;
	xor.b64  	%rd1835, %rd1834, %rd1832;
	shf.r.wrap.b32 	%r1252, %r1117, %r1116, 1;
	shf.r.wrap.b32 	%r1253, %r1116, %r1117, 1;
	mov.b64 	%rd1836, {%r1253, %r1252};
	shf.r.wrap.b32 	%r1254, %r1117, %r1116, 8;
	shf.r.wrap.b32 	%r1255, %r1116, %r1117, 8;
	mov.b64 	%rd1837, {%r1255, %r1254};
	shr.u64 	%rd1838, %rd1648, 7;
	xor.b64  	%rd1839, %rd1836, %rd1838;
	xor.b64  	%rd1840, %rd1839, %rd1837;
	add.s64 	%rd1841, %rd1752, %rd1251;
	add.s64 	%rd1842, %rd1841, %rd1835;
	add.s64 	%rd1843, %rd1842, %rd1840;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1256,%dummy}, %rd1624;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1257}, %rd1624;
	}
	shf.r.wrap.b32 	%r1258, %r1257, %r1256, 14;
	shf.r.wrap.b32 	%r1259, %r1256, %r1257, 14;
	mov.b64 	%rd1844, {%r1259, %r1258};
	shf.r.wrap.b32 	%r1260, %r1257, %r1256, 18;
	shf.r.wrap.b32 	%r1261, %r1256, %r1257, 18;
	mov.b64 	%rd1845, {%r1261, %r1260};
	xor.b64  	%rd1846, %rd1845, %rd1844;
	shf.l.wrap.b32 	%r1262, %r1256, %r1257, 23;
	shf.l.wrap.b32 	%r1263, %r1257, %r1256, 23;
	mov.b64 	%rd1847, {%r1263, %r1262};
	xor.b64  	%rd1848, %rd1846, %rd1847;
	xor.b64  	%rd1849, %rd1600, %rd1576;
	and.b64  	%rd1850, %rd1849, %rd1624;
	xor.b64  	%rd1851, %rd1850, %rd1576;
	add.s64 	%rd1852, %rd1851, %rd1552;
	add.s64 	%rd1853, %rd1852, %rd1648;
	add.s64 	%rd1854, %rd1853, %rd67;
	add.s64 	%rd1855, %rd1854, %rd1848;
	add.s64 	%rd1856, %rd1855, %rd1563;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1264,%dummy}, %rd1635;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1265}, %rd1635;
	}
	shf.r.wrap.b32 	%r1266, %r1265, %r1264, 28;
	shf.r.wrap.b32 	%r1267, %r1264, %r1265, 28;
	mov.b64 	%rd1857, {%r1267, %r1266};
	shf.l.wrap.b32 	%r1268, %r1264, %r1265, 30;
	shf.l.wrap.b32 	%r1269, %r1265, %r1264, 30;
	mov.b64 	%rd1858, {%r1269, %r1268};
	xor.b64  	%rd1859, %rd1858, %rd1857;
	shf.l.wrap.b32 	%r1270, %r1264, %r1265, 25;
	shf.l.wrap.b32 	%r1271, %r1265, %r1264, 25;
	mov.b64 	%rd1860, {%r1271, %r1270};
	xor.b64  	%rd1861, %rd1859, %rd1860;
	xor.b64  	%rd1862, %rd1635, %rd1587;
	xor.b64  	%rd1863, %rd1635, %rd1611;
	and.b64  	%rd1864, %rd1863, %rd1862;
	xor.b64  	%rd1865, %rd1864, %rd1635;
	add.s64 	%rd1866, %rd1855, %rd1865;
	add.s64 	%rd1867, %rd1866, %rd1861;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1272,%dummy}, %rd1856;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1273}, %rd1856;
	}
	shf.r.wrap.b32 	%r1274, %r1273, %r1272, 14;
	shf.r.wrap.b32 	%r1275, %r1272, %r1273, 14;
	mov.b64 	%rd1868, {%r1275, %r1274};
	shf.r.wrap.b32 	%r1276, %r1273, %r1272, 18;
	shf.r.wrap.b32 	%r1277, %r1272, %r1273, 18;
	mov.b64 	%rd1869, {%r1277, %r1276};
	xor.b64  	%rd1870, %rd1869, %rd1868;
	shf.l.wrap.b32 	%r1278, %r1272, %r1273, 23;
	shf.l.wrap.b32 	%r1279, %r1273, %r1272, 23;
	mov.b64 	%rd1871, {%r1279, %r1278};
	xor.b64  	%rd1872, %rd1870, %rd1871;
	xor.b64  	%rd1873, %rd1624, %rd1600;
	and.b64  	%rd1874, %rd1856, %rd1873;
	xor.b64  	%rd1875, %rd1874, %rd1600;
	add.s64 	%rd1876, %rd1661, %rd1576;
	add.s64 	%rd1877, %rd1876, %rd68;
	add.s64 	%rd1878, %rd1877, %rd1875;
	add.s64 	%rd1879, %rd1878, %rd1872;
	add.s64 	%rd1880, %rd1879, %rd1587;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1280,%dummy}, %rd1867;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1281}, %rd1867;
	}
	shf.r.wrap.b32 	%r1282, %r1281, %r1280, 28;
	shf.r.wrap.b32 	%r1283, %r1280, %r1281, 28;
	mov.b64 	%rd1881, {%r1283, %r1282};
	shf.l.wrap.b32 	%r1284, %r1280, %r1281, 30;
	shf.l.wrap.b32 	%r1285, %r1281, %r1280, 30;
	mov.b64 	%rd1882, {%r1285, %r1284};
	xor.b64  	%rd1883, %rd1882, %rd1881;
	shf.l.wrap.b32 	%r1286, %r1280, %r1281, 25;
	shf.l.wrap.b32 	%r1287, %r1281, %r1280, 25;
	mov.b64 	%rd1884, {%r1287, %r1286};
	xor.b64  	%rd1885, %rd1883, %rd1884;
	xor.b64  	%rd1886, %rd1867, %rd1611;
	xor.b64  	%rd1887, %rd1867, %rd1635;
	and.b64  	%rd1888, %rd1887, %rd1886;
	xor.b64  	%rd1889, %rd1888, %rd1867;
	add.s64 	%rd1890, %rd1879, %rd1889;
	add.s64 	%rd1891, %rd1890, %rd1885;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1288,%dummy}, %rd1880;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1289}, %rd1880;
	}
	shf.r.wrap.b32 	%r1290, %r1289, %r1288, 14;
	shf.r.wrap.b32 	%r1291, %r1288, %r1289, 14;
	mov.b64 	%rd1892, {%r1291, %r1290};
	shf.r.wrap.b32 	%r1292, %r1289, %r1288, 18;
	shf.r.wrap.b32 	%r1293, %r1288, %r1289, 18;
	mov.b64 	%rd1893, {%r1293, %r1292};
	xor.b64  	%rd1894, %rd1893, %rd1892;
	shf.l.wrap.b32 	%r1294, %r1288, %r1289, 23;
	shf.l.wrap.b32 	%r1295, %r1289, %r1288, 23;
	mov.b64 	%rd1895, {%r1295, %r1294};
	xor.b64  	%rd1896, %rd1894, %rd1895;
	xor.b64  	%rd1897, %rd1856, %rd1624;
	and.b64  	%rd1898, %rd1880, %rd1897;
	xor.b64  	%rd1899, %rd1898, %rd1624;
	add.s64 	%rd1900, %rd1674, %rd1600;
	add.s64 	%rd1901, %rd1900, %rd69;
	add.s64 	%rd1902, %rd1901, %rd1899;
	add.s64 	%rd1903, %rd1902, %rd1896;
	add.s64 	%rd1904, %rd1903, %rd1611;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1296,%dummy}, %rd1891;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1297}, %rd1891;
	}
	shf.r.wrap.b32 	%r1298, %r1297, %r1296, 28;
	shf.r.wrap.b32 	%r1299, %r1296, %r1297, 28;
	mov.b64 	%rd1905, {%r1299, %r1298};
	shf.l.wrap.b32 	%r1300, %r1296, %r1297, 30;
	shf.l.wrap.b32 	%r1301, %r1297, %r1296, 30;
	mov.b64 	%rd1906, {%r1301, %r1300};
	xor.b64  	%rd1907, %rd1906, %rd1905;
	shf.l.wrap.b32 	%r1302, %r1296, %r1297, 25;
	shf.l.wrap.b32 	%r1303, %r1297, %r1296, 25;
	mov.b64 	%rd1908, {%r1303, %r1302};
	xor.b64  	%rd1909, %rd1907, %rd1908;
	xor.b64  	%rd1910, %rd1891, %rd1635;
	xor.b64  	%rd1911, %rd1891, %rd1867;
	and.b64  	%rd1912, %rd1911, %rd1910;
	xor.b64  	%rd1913, %rd1912, %rd1891;
	add.s64 	%rd1914, %rd1903, %rd1913;
	add.s64 	%rd1915, %rd1914, %rd1909;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1304,%dummy}, %rd1904;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1305}, %rd1904;
	}
	shf.r.wrap.b32 	%r1306, %r1305, %r1304, 14;
	shf.r.wrap.b32 	%r1307, %r1304, %r1305, 14;
	mov.b64 	%rd1916, {%r1307, %r1306};
	shf.r.wrap.b32 	%r1308, %r1305, %r1304, 18;
	shf.r.wrap.b32 	%r1309, %r1304, %r1305, 18;
	mov.b64 	%rd1917, {%r1309, %r1308};
	xor.b64  	%rd1918, %rd1917, %rd1916;
	shf.l.wrap.b32 	%r1310, %r1304, %r1305, 23;
	shf.l.wrap.b32 	%r1311, %r1305, %r1304, 23;
	mov.b64 	%rd1919, {%r1311, %r1310};
	xor.b64  	%rd1920, %rd1918, %rd1919;
	xor.b64  	%rd1921, %rd1880, %rd1856;
	and.b64  	%rd1922, %rd1904, %rd1921;
	xor.b64  	%rd1923, %rd1922, %rd1856;
	add.s64 	%rd1924, %rd1687, %rd1624;
	add.s64 	%rd1925, %rd1924, %rd70;
	add.s64 	%rd1926, %rd1925, %rd1923;
	add.s64 	%rd1927, %rd1926, %rd1920;
	add.s64 	%rd1928, %rd1927, %rd1635;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1312,%dummy}, %rd1915;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1313}, %rd1915;
	}
	shf.r.wrap.b32 	%r1314, %r1313, %r1312, 28;
	shf.r.wrap.b32 	%r1315, %r1312, %r1313, 28;
	mov.b64 	%rd1929, {%r1315, %r1314};
	shf.l.wrap.b32 	%r1316, %r1312, %r1313, 30;
	shf.l.wrap.b32 	%r1317, %r1313, %r1312, 30;
	mov.b64 	%rd1930, {%r1317, %r1316};
	xor.b64  	%rd1931, %rd1930, %rd1929;
	shf.l.wrap.b32 	%r1318, %r1312, %r1313, 25;
	shf.l.wrap.b32 	%r1319, %r1313, %r1312, 25;
	mov.b64 	%rd1932, {%r1319, %r1318};
	xor.b64  	%rd1933, %rd1931, %rd1932;
	xor.b64  	%rd1934, %rd1915, %rd1867;
	xor.b64  	%rd1935, %rd1915, %rd1891;
	and.b64  	%rd1936, %rd1935, %rd1934;
	xor.b64  	%rd1937, %rd1936, %rd1915;
	add.s64 	%rd1938, %rd1927, %rd1937;
	add.s64 	%rd1939, %rd1938, %rd1933;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1320,%dummy}, %rd1928;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1321}, %rd1928;
	}
	shf.r.wrap.b32 	%r1322, %r1321, %r1320, 14;
	shf.r.wrap.b32 	%r1323, %r1320, %r1321, 14;
	mov.b64 	%rd1940, {%r1323, %r1322};
	shf.r.wrap.b32 	%r1324, %r1321, %r1320, 18;
	shf.r.wrap.b32 	%r1325, %r1320, %r1321, 18;
	mov.b64 	%rd1941, {%r1325, %r1324};
	xor.b64  	%rd1942, %rd1941, %rd1940;
	shf.l.wrap.b32 	%r1326, %r1320, %r1321, 23;
	shf.l.wrap.b32 	%r1327, %r1321, %r1320, 23;
	mov.b64 	%rd1943, {%r1327, %r1326};
	xor.b64  	%rd1944, %rd1942, %rd1943;
	xor.b64  	%rd1945, %rd1904, %rd1880;
	and.b64  	%rd1946, %rd1928, %rd1945;
	xor.b64  	%rd1947, %rd1946, %rd1880;
	add.s64 	%rd1948, %rd1856, %rd1700;
	add.s64 	%rd1949, %rd1948, %rd71;
	add.s64 	%rd1950, %rd1949, %rd1947;
	add.s64 	%rd1951, %rd1950, %rd1944;
	add.s64 	%rd1952, %rd1951, %rd1867;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1328,%dummy}, %rd1939;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1329}, %rd1939;
	}
	shf.r.wrap.b32 	%r1330, %r1329, %r1328, 28;
	shf.r.wrap.b32 	%r1331, %r1328, %r1329, 28;
	mov.b64 	%rd1953, {%r1331, %r1330};
	shf.l.wrap.b32 	%r1332, %r1328, %r1329, 30;
	shf.l.wrap.b32 	%r1333, %r1329, %r1328, 30;
	mov.b64 	%rd1954, {%r1333, %r1332};
	xor.b64  	%rd1955, %rd1954, %rd1953;
	shf.l.wrap.b32 	%r1334, %r1328, %r1329, 25;
	shf.l.wrap.b32 	%r1335, %r1329, %r1328, 25;
	mov.b64 	%rd1956, {%r1335, %r1334};
	xor.b64  	%rd1957, %rd1955, %rd1956;
	xor.b64  	%rd1958, %rd1939, %rd1891;
	xor.b64  	%rd1959, %rd1939, %rd1915;
	and.b64  	%rd1960, %rd1959, %rd1958;
	xor.b64  	%rd1961, %rd1960, %rd1939;
	add.s64 	%rd1962, %rd1951, %rd1961;
	add.s64 	%rd1963, %rd1962, %rd1957;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1336,%dummy}, %rd1952;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1337}, %rd1952;
	}
	shf.r.wrap.b32 	%r1338, %r1337, %r1336, 14;
	shf.r.wrap.b32 	%r1339, %r1336, %r1337, 14;
	mov.b64 	%rd1964, {%r1339, %r1338};
	shf.r.wrap.b32 	%r1340, %r1337, %r1336, 18;
	shf.r.wrap.b32 	%r1341, %r1336, %r1337, 18;
	mov.b64 	%rd1965, {%r1341, %r1340};
	xor.b64  	%rd1966, %rd1965, %rd1964;
	shf.l.wrap.b32 	%r1342, %r1336, %r1337, 23;
	shf.l.wrap.b32 	%r1343, %r1337, %r1336, 23;
	mov.b64 	%rd1967, {%r1343, %r1342};
	xor.b64  	%rd1968, %rd1966, %rd1967;
	xor.b64  	%rd1969, %rd1928, %rd1904;
	and.b64  	%rd1970, %rd1952, %rd1969;
	xor.b64  	%rd1971, %rd1970, %rd1904;
	add.s64 	%rd1972, %rd1880, %rd1713;
	add.s64 	%rd1973, %rd1972, %rd72;
	add.s64 	%rd1974, %rd1973, %rd1971;
	add.s64 	%rd1975, %rd1974, %rd1968;
	add.s64 	%rd1976, %rd1975, %rd1891;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1344,%dummy}, %rd1963;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1345}, %rd1963;
	}
	shf.r.wrap.b32 	%r1346, %r1345, %r1344, 28;
	shf.r.wrap.b32 	%r1347, %r1344, %r1345, 28;
	mov.b64 	%rd1977, {%r1347, %r1346};
	shf.l.wrap.b32 	%r1348, %r1344, %r1345, 30;
	shf.l.wrap.b32 	%r1349, %r1345, %r1344, 30;
	mov.b64 	%rd1978, {%r1349, %r1348};
	xor.b64  	%rd1979, %rd1978, %rd1977;
	shf.l.wrap.b32 	%r1350, %r1344, %r1345, 25;
	shf.l.wrap.b32 	%r1351, %r1345, %r1344, 25;
	mov.b64 	%rd1980, {%r1351, %r1350};
	xor.b64  	%rd1981, %rd1979, %rd1980;
	xor.b64  	%rd1982, %rd1963, %rd1915;
	xor.b64  	%rd1983, %rd1963, %rd1939;
	and.b64  	%rd1984, %rd1983, %rd1982;
	xor.b64  	%rd1985, %rd1984, %rd1963;
	add.s64 	%rd1986, %rd1975, %rd1985;
	add.s64 	%rd1987, %rd1986, %rd1981;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1352,%dummy}, %rd1976;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1353}, %rd1976;
	}
	shf.r.wrap.b32 	%r1354, %r1353, %r1352, 14;
	shf.r.wrap.b32 	%r1355, %r1352, %r1353, 14;
	mov.b64 	%rd1988, {%r1355, %r1354};
	shf.r.wrap.b32 	%r1356, %r1353, %r1352, 18;
	shf.r.wrap.b32 	%r1357, %r1352, %r1353, 18;
	mov.b64 	%rd1989, {%r1357, %r1356};
	xor.b64  	%rd1990, %rd1989, %rd1988;
	shf.l.wrap.b32 	%r1358, %r1352, %r1353, 23;
	shf.l.wrap.b32 	%r1359, %r1353, %r1352, 23;
	mov.b64 	%rd1991, {%r1359, %r1358};
	xor.b64  	%rd1992, %rd1990, %rd1991;
	xor.b64  	%rd1993, %rd1952, %rd1928;
	and.b64  	%rd1994, %rd1976, %rd1993;
	xor.b64  	%rd1995, %rd1994, %rd1928;
	add.s64 	%rd1996, %rd1904, %rd1726;
	add.s64 	%rd1997, %rd1996, %rd73;
	add.s64 	%rd1998, %rd1997, %rd1995;
	add.s64 	%rd1999, %rd1998, %rd1992;
	add.s64 	%rd2000, %rd1999, %rd1915;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1360,%dummy}, %rd1987;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1361}, %rd1987;
	}
	shf.r.wrap.b32 	%r1362, %r1361, %r1360, 28;
	shf.r.wrap.b32 	%r1363, %r1360, %r1361, 28;
	mov.b64 	%rd2001, {%r1363, %r1362};
	shf.l.wrap.b32 	%r1364, %r1360, %r1361, 30;
	shf.l.wrap.b32 	%r1365, %r1361, %r1360, 30;
	mov.b64 	%rd2002, {%r1365, %r1364};
	xor.b64  	%rd2003, %rd2002, %rd2001;
	shf.l.wrap.b32 	%r1366, %r1360, %r1361, 25;
	shf.l.wrap.b32 	%r1367, %r1361, %r1360, 25;
	mov.b64 	%rd2004, {%r1367, %r1366};
	xor.b64  	%rd2005, %rd2003, %rd2004;
	xor.b64  	%rd2006, %rd1987, %rd1939;
	xor.b64  	%rd2007, %rd1987, %rd1963;
	and.b64  	%rd2008, %rd2007, %rd2006;
	xor.b64  	%rd2009, %rd2008, %rd1987;
	add.s64 	%rd2010, %rd1999, %rd2009;
	add.s64 	%rd2011, %rd2010, %rd2005;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1368,%dummy}, %rd2000;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1369}, %rd2000;
	}
	shf.r.wrap.b32 	%r1370, %r1369, %r1368, 14;
	shf.r.wrap.b32 	%r1371, %r1368, %r1369, 14;
	mov.b64 	%rd2012, {%r1371, %r1370};
	shf.r.wrap.b32 	%r1372, %r1369, %r1368, 18;
	shf.r.wrap.b32 	%r1373, %r1368, %r1369, 18;
	mov.b64 	%rd2013, {%r1373, %r1372};
	xor.b64  	%rd2014, %rd2013, %rd2012;
	shf.l.wrap.b32 	%r1374, %r1368, %r1369, 23;
	shf.l.wrap.b32 	%r1375, %r1369, %r1368, 23;
	mov.b64 	%rd2015, {%r1375, %r1374};
	xor.b64  	%rd2016, %rd2014, %rd2015;
	xor.b64  	%rd2017, %rd1976, %rd1952;
	and.b64  	%rd2018, %rd2000, %rd2017;
	xor.b64  	%rd2019, %rd2018, %rd1952;
	add.s64 	%rd2020, %rd1928, %rd1739;
	add.s64 	%rd2021, %rd2020, %rd74;
	add.s64 	%rd2022, %rd2021, %rd2019;
	add.s64 	%rd2023, %rd2022, %rd2016;
	add.s64 	%rd2024, %rd2023, %rd1939;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1376,%dummy}, %rd2011;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1377}, %rd2011;
	}
	shf.r.wrap.b32 	%r1378, %r1377, %r1376, 28;
	shf.r.wrap.b32 	%r1379, %r1376, %r1377, 28;
	mov.b64 	%rd2025, {%r1379, %r1378};
	shf.l.wrap.b32 	%r1380, %r1376, %r1377, 30;
	shf.l.wrap.b32 	%r1381, %r1377, %r1376, 30;
	mov.b64 	%rd2026, {%r1381, %r1380};
	xor.b64  	%rd2027, %rd2026, %rd2025;
	shf.l.wrap.b32 	%r1382, %r1376, %r1377, 25;
	shf.l.wrap.b32 	%r1383, %r1377, %r1376, 25;
	mov.b64 	%rd2028, {%r1383, %r1382};
	xor.b64  	%rd2029, %rd2027, %rd2028;
	xor.b64  	%rd2030, %rd2011, %rd1963;
	xor.b64  	%rd2031, %rd2011, %rd1987;
	and.b64  	%rd2032, %rd2031, %rd2030;
	xor.b64  	%rd2033, %rd2032, %rd2011;
	add.s64 	%rd2034, %rd2023, %rd2033;
	add.s64 	%rd2035, %rd2034, %rd2029;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1384,%dummy}, %rd2024;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1385}, %rd2024;
	}
	shf.r.wrap.b32 	%r1386, %r1385, %r1384, 14;
	shf.r.wrap.b32 	%r1387, %r1384, %r1385, 14;
	mov.b64 	%rd2036, {%r1387, %r1386};
	shf.r.wrap.b32 	%r1388, %r1385, %r1384, 18;
	shf.r.wrap.b32 	%r1389, %r1384, %r1385, 18;
	mov.b64 	%rd2037, {%r1389, %r1388};
	xor.b64  	%rd2038, %rd2037, %rd2036;
	shf.l.wrap.b32 	%r1390, %r1384, %r1385, 23;
	shf.l.wrap.b32 	%r1391, %r1385, %r1384, 23;
	mov.b64 	%rd2039, {%r1391, %r1390};
	xor.b64  	%rd2040, %rd2038, %rd2039;
	xor.b64  	%rd2041, %rd2000, %rd1976;
	and.b64  	%rd2042, %rd2024, %rd2041;
	xor.b64  	%rd2043, %rd2042, %rd1976;
	add.s64 	%rd2044, %rd1952, %rd1752;
	add.s64 	%rd2045, %rd2044, %rd75;
	add.s64 	%rd2046, %rd2045, %rd2043;
	add.s64 	%rd2047, %rd2046, %rd2040;
	add.s64 	%rd2048, %rd2047, %rd1963;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1392,%dummy}, %rd2035;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1393}, %rd2035;
	}
	shf.r.wrap.b32 	%r1394, %r1393, %r1392, 28;
	shf.r.wrap.b32 	%r1395, %r1392, %r1393, 28;
	mov.b64 	%rd2049, {%r1395, %r1394};
	shf.l.wrap.b32 	%r1396, %r1392, %r1393, 30;
	shf.l.wrap.b32 	%r1397, %r1393, %r1392, 30;
	mov.b64 	%rd2050, {%r1397, %r1396};
	xor.b64  	%rd2051, %rd2050, %rd2049;
	shf.l.wrap.b32 	%r1398, %r1392, %r1393, 25;
	shf.l.wrap.b32 	%r1399, %r1393, %r1392, 25;
	mov.b64 	%rd2052, {%r1399, %r1398};
	xor.b64  	%rd2053, %rd2051, %rd2052;
	xor.b64  	%rd2054, %rd2035, %rd1987;
	xor.b64  	%rd2055, %rd2035, %rd2011;
	and.b64  	%rd2056, %rd2055, %rd2054;
	xor.b64  	%rd2057, %rd2056, %rd2035;
	add.s64 	%rd2058, %rd2047, %rd2057;
	add.s64 	%rd2059, %rd2058, %rd2053;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1400,%dummy}, %rd2048;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1401}, %rd2048;
	}
	shf.r.wrap.b32 	%r1402, %r1401, %r1400, 14;
	shf.r.wrap.b32 	%r1403, %r1400, %r1401, 14;
	mov.b64 	%rd2060, {%r1403, %r1402};
	shf.r.wrap.b32 	%r1404, %r1401, %r1400, 18;
	shf.r.wrap.b32 	%r1405, %r1400, %r1401, 18;
	mov.b64 	%rd2061, {%r1405, %r1404};
	xor.b64  	%rd2062, %rd2061, %rd2060;
	shf.l.wrap.b32 	%r1406, %r1400, %r1401, 23;
	shf.l.wrap.b32 	%r1407, %r1401, %r1400, 23;
	mov.b64 	%rd2063, {%r1407, %r1406};
	xor.b64  	%rd2064, %rd2062, %rd2063;
	xor.b64  	%rd2065, %rd2024, %rd2000;
	and.b64  	%rd2066, %rd2048, %rd2065;
	xor.b64  	%rd2067, %rd2066, %rd2000;
	add.s64 	%rd2068, %rd1976, %rd1765;
	add.s64 	%rd2069, %rd2068, %rd76;
	add.s64 	%rd2070, %rd2069, %rd2067;
	add.s64 	%rd2071, %rd2070, %rd2064;
	add.s64 	%rd2072, %rd2071, %rd1987;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1408,%dummy}, %rd2059;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1409}, %rd2059;
	}
	shf.r.wrap.b32 	%r1410, %r1409, %r1408, 28;
	shf.r.wrap.b32 	%r1411, %r1408, %r1409, 28;
	mov.b64 	%rd2073, {%r1411, %r1410};
	shf.l.wrap.b32 	%r1412, %r1408, %r1409, 30;
	shf.l.wrap.b32 	%r1413, %r1409, %r1408, 30;
	mov.b64 	%rd2074, {%r1413, %r1412};
	xor.b64  	%rd2075, %rd2074, %rd2073;
	shf.l.wrap.b32 	%r1414, %r1408, %r1409, 25;
	shf.l.wrap.b32 	%r1415, %r1409, %r1408, 25;
	mov.b64 	%rd2076, {%r1415, %r1414};
	xor.b64  	%rd2077, %rd2075, %rd2076;
	xor.b64  	%rd2078, %rd2059, %rd2011;
	xor.b64  	%rd2079, %rd2059, %rd2035;
	and.b64  	%rd2080, %rd2079, %rd2078;
	xor.b64  	%rd2081, %rd2080, %rd2059;
	add.s64 	%rd2082, %rd2071, %rd2081;
	add.s64 	%rd2083, %rd2082, %rd2077;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1416,%dummy}, %rd2072;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1417}, %rd2072;
	}
	shf.r.wrap.b32 	%r1418, %r1417, %r1416, 14;
	shf.r.wrap.b32 	%r1419, %r1416, %r1417, 14;
	mov.b64 	%rd2084, {%r1419, %r1418};
	shf.r.wrap.b32 	%r1420, %r1417, %r1416, 18;
	shf.r.wrap.b32 	%r1421, %r1416, %r1417, 18;
	mov.b64 	%rd2085, {%r1421, %r1420};
	xor.b64  	%rd2086, %rd2085, %rd2084;
	shf.l.wrap.b32 	%r1422, %r1416, %r1417, 23;
	shf.l.wrap.b32 	%r1423, %r1417, %r1416, 23;
	mov.b64 	%rd2087, {%r1423, %r1422};
	xor.b64  	%rd2088, %rd2086, %rd2087;
	xor.b64  	%rd2089, %rd2048, %rd2024;
	and.b64  	%rd2090, %rd2072, %rd2089;
	xor.b64  	%rd2091, %rd2090, %rd2024;
	add.s64 	%rd2092, %rd2000, %rd1778;
	add.s64 	%rd2093, %rd2092, %rd77;
	add.s64 	%rd2094, %rd2093, %rd2091;
	add.s64 	%rd2095, %rd2094, %rd2088;
	add.s64 	%rd2096, %rd2095, %rd2011;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1424,%dummy}, %rd2083;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1425}, %rd2083;
	}
	shf.r.wrap.b32 	%r1426, %r1425, %r1424, 28;
	shf.r.wrap.b32 	%r1427, %r1424, %r1425, 28;
	mov.b64 	%rd2097, {%r1427, %r1426};
	shf.l.wrap.b32 	%r1428, %r1424, %r1425, 30;
	shf.l.wrap.b32 	%r1429, %r1425, %r1424, 30;
	mov.b64 	%rd2098, {%r1429, %r1428};
	xor.b64  	%rd2099, %rd2098, %rd2097;
	shf.l.wrap.b32 	%r1430, %r1424, %r1425, 25;
	shf.l.wrap.b32 	%r1431, %r1425, %r1424, 25;
	mov.b64 	%rd2100, {%r1431, %r1430};
	xor.b64  	%rd2101, %rd2099, %rd2100;
	xor.b64  	%rd2102, %rd2083, %rd2035;
	xor.b64  	%rd2103, %rd2083, %rd2059;
	and.b64  	%rd2104, %rd2103, %rd2102;
	xor.b64  	%rd2105, %rd2104, %rd2083;
	add.s64 	%rd2106, %rd2095, %rd2105;
	add.s64 	%rd2107, %rd2106, %rd2101;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1432,%dummy}, %rd2096;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1433}, %rd2096;
	}
	shf.r.wrap.b32 	%r1434, %r1433, %r1432, 14;
	shf.r.wrap.b32 	%r1435, %r1432, %r1433, 14;
	mov.b64 	%rd2108, {%r1435, %r1434};
	shf.r.wrap.b32 	%r1436, %r1433, %r1432, 18;
	shf.r.wrap.b32 	%r1437, %r1432, %r1433, 18;
	mov.b64 	%rd2109, {%r1437, %r1436};
	xor.b64  	%rd2110, %rd2109, %rd2108;
	shf.l.wrap.b32 	%r1438, %r1432, %r1433, 23;
	shf.l.wrap.b32 	%r1439, %r1433, %r1432, 23;
	mov.b64 	%rd2111, {%r1439, %r1438};
	xor.b64  	%rd2112, %rd2110, %rd2111;
	xor.b64  	%rd2113, %rd2072, %rd2048;
	and.b64  	%rd2114, %rd2096, %rd2113;
	xor.b64  	%rd2115, %rd2114, %rd2048;
	add.s64 	%rd2116, %rd2024, %rd1791;
	add.s64 	%rd2117, %rd2116, %rd78;
	add.s64 	%rd2118, %rd2117, %rd2115;
	add.s64 	%rd2119, %rd2118, %rd2112;
	add.s64 	%rd2120, %rd2119, %rd2035;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1440,%dummy}, %rd2107;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1441}, %rd2107;
	}
	shf.r.wrap.b32 	%r1442, %r1441, %r1440, 28;
	shf.r.wrap.b32 	%r1443, %r1440, %r1441, 28;
	mov.b64 	%rd2121, {%r1443, %r1442};
	shf.l.wrap.b32 	%r1444, %r1440, %r1441, 30;
	shf.l.wrap.b32 	%r1445, %r1441, %r1440, 30;
	mov.b64 	%rd2122, {%r1445, %r1444};
	xor.b64  	%rd2123, %rd2122, %rd2121;
	shf.l.wrap.b32 	%r1446, %r1440, %r1441, 25;
	shf.l.wrap.b32 	%r1447, %r1441, %r1440, 25;
	mov.b64 	%rd2124, {%r1447, %r1446};
	xor.b64  	%rd2125, %rd2123, %rd2124;
	xor.b64  	%rd2126, %rd2107, %rd2059;
	xor.b64  	%rd2127, %rd2107, %rd2083;
	and.b64  	%rd2128, %rd2127, %rd2126;
	xor.b64  	%rd2129, %rd2128, %rd2107;
	add.s64 	%rd2130, %rd2119, %rd2129;
	add.s64 	%rd2131, %rd2130, %rd2125;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1448,%dummy}, %rd2120;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1449}, %rd2120;
	}
	shf.r.wrap.b32 	%r1450, %r1449, %r1448, 14;
	shf.r.wrap.b32 	%r1451, %r1448, %r1449, 14;
	mov.b64 	%rd2132, {%r1451, %r1450};
	shf.r.wrap.b32 	%r1452, %r1449, %r1448, 18;
	shf.r.wrap.b32 	%r1453, %r1448, %r1449, 18;
	mov.b64 	%rd2133, {%r1453, %r1452};
	xor.b64  	%rd2134, %rd2133, %rd2132;
	shf.l.wrap.b32 	%r1454, %r1448, %r1449, 23;
	shf.l.wrap.b32 	%r1455, %r1449, %r1448, 23;
	mov.b64 	%rd2135, {%r1455, %r1454};
	xor.b64  	%rd2136, %rd2134, %rd2135;
	xor.b64  	%rd2137, %rd2096, %rd2072;
	and.b64  	%rd2138, %rd2120, %rd2137;
	xor.b64  	%rd2139, %rd2138, %rd2072;
	add.s64 	%rd2140, %rd2048, %rd1804;
	add.s64 	%rd2141, %rd2140, %rd79;
	add.s64 	%rd2142, %rd2141, %rd2139;
	add.s64 	%rd2143, %rd2142, %rd2136;
	add.s64 	%rd2144, %rd2143, %rd2059;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1456,%dummy}, %rd2131;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1457}, %rd2131;
	}
	shf.r.wrap.b32 	%r1458, %r1457, %r1456, 28;
	shf.r.wrap.b32 	%r1459, %r1456, %r1457, 28;
	mov.b64 	%rd2145, {%r1459, %r1458};
	shf.l.wrap.b32 	%r1460, %r1456, %r1457, 30;
	shf.l.wrap.b32 	%r1461, %r1457, %r1456, 30;
	mov.b64 	%rd2146, {%r1461, %r1460};
	xor.b64  	%rd2147, %rd2146, %rd2145;
	shf.l.wrap.b32 	%r1462, %r1456, %r1457, 25;
	shf.l.wrap.b32 	%r1463, %r1457, %r1456, 25;
	mov.b64 	%rd2148, {%r1463, %r1462};
	xor.b64  	%rd2149, %rd2147, %rd2148;
	xor.b64  	%rd2150, %rd2131, %rd2083;
	xor.b64  	%rd2151, %rd2131, %rd2107;
	and.b64  	%rd2152, %rd2151, %rd2150;
	xor.b64  	%rd2153, %rd2152, %rd2131;
	add.s64 	%rd2154, %rd2143, %rd2153;
	add.s64 	%rd2155, %rd2154, %rd2149;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1464,%dummy}, %rd2144;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1465}, %rd2144;
	}
	shf.r.wrap.b32 	%r1466, %r1465, %r1464, 14;
	shf.r.wrap.b32 	%r1467, %r1464, %r1465, 14;
	mov.b64 	%rd2156, {%r1467, %r1466};
	shf.r.wrap.b32 	%r1468, %r1465, %r1464, 18;
	shf.r.wrap.b32 	%r1469, %r1464, %r1465, 18;
	mov.b64 	%rd2157, {%r1469, %r1468};
	xor.b64  	%rd2158, %rd2157, %rd2156;
	shf.l.wrap.b32 	%r1470, %r1464, %r1465, 23;
	shf.l.wrap.b32 	%r1471, %r1465, %r1464, 23;
	mov.b64 	%rd2159, {%r1471, %r1470};
	xor.b64  	%rd2160, %rd2158, %rd2159;
	xor.b64  	%rd2161, %rd2120, %rd2096;
	and.b64  	%rd2162, %rd2144, %rd2161;
	xor.b64  	%rd2163, %rd2162, %rd2096;
	add.s64 	%rd2164, %rd2072, %rd1817;
	add.s64 	%rd2165, %rd2164, %rd80;
	add.s64 	%rd2166, %rd2165, %rd2163;
	add.s64 	%rd2167, %rd2166, %rd2160;
	add.s64 	%rd2168, %rd2167, %rd2083;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1472,%dummy}, %rd2155;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1473}, %rd2155;
	}
	shf.r.wrap.b32 	%r1474, %r1473, %r1472, 28;
	shf.r.wrap.b32 	%r1475, %r1472, %r1473, 28;
	mov.b64 	%rd2169, {%r1475, %r1474};
	shf.l.wrap.b32 	%r1476, %r1472, %r1473, 30;
	shf.l.wrap.b32 	%r1477, %r1473, %r1472, 30;
	mov.b64 	%rd2170, {%r1477, %r1476};
	xor.b64  	%rd2171, %rd2170, %rd2169;
	shf.l.wrap.b32 	%r1478, %r1472, %r1473, 25;
	shf.l.wrap.b32 	%r1479, %r1473, %r1472, 25;
	mov.b64 	%rd2172, {%r1479, %r1478};
	xor.b64  	%rd2173, %rd2171, %rd2172;
	xor.b64  	%rd2174, %rd2155, %rd2107;
	xor.b64  	%rd2175, %rd2155, %rd2131;
	and.b64  	%rd2176, %rd2175, %rd2174;
	xor.b64  	%rd2177, %rd2176, %rd2155;
	add.s64 	%rd2178, %rd2167, %rd2177;
	add.s64 	%rd2179, %rd2178, %rd2173;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1480,%dummy}, %rd2168;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1481}, %rd2168;
	}
	shf.r.wrap.b32 	%r1482, %r1481, %r1480, 14;
	shf.r.wrap.b32 	%r1483, %r1480, %r1481, 14;
	mov.b64 	%rd2180, {%r1483, %r1482};
	shf.r.wrap.b32 	%r1484, %r1481, %r1480, 18;
	shf.r.wrap.b32 	%r1485, %r1480, %r1481, 18;
	mov.b64 	%rd2181, {%r1485, %r1484};
	xor.b64  	%rd2182, %rd2181, %rd2180;
	shf.l.wrap.b32 	%r1486, %r1480, %r1481, 23;
	shf.l.wrap.b32 	%r1487, %r1481, %r1480, 23;
	mov.b64 	%rd2183, {%r1487, %r1486};
	xor.b64  	%rd2184, %rd2182, %rd2183;
	xor.b64  	%rd2185, %rd2144, %rd2120;
	and.b64  	%rd2186, %rd2168, %rd2185;
	xor.b64  	%rd2187, %rd2186, %rd2120;
	add.s64 	%rd2188, %rd2096, %rd1830;
	add.s64 	%rd2189, %rd2188, %rd81;
	add.s64 	%rd2190, %rd2189, %rd2187;
	add.s64 	%rd2191, %rd2190, %rd2184;
	add.s64 	%rd2192, %rd2191, %rd2107;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1488,%dummy}, %rd2179;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1489}, %rd2179;
	}
	shf.r.wrap.b32 	%r1490, %r1489, %r1488, 28;
	shf.r.wrap.b32 	%r1491, %r1488, %r1489, 28;
	mov.b64 	%rd2193, {%r1491, %r1490};
	shf.l.wrap.b32 	%r1492, %r1488, %r1489, 30;
	shf.l.wrap.b32 	%r1493, %r1489, %r1488, 30;
	mov.b64 	%rd2194, {%r1493, %r1492};
	xor.b64  	%rd2195, %rd2194, %rd2193;
	shf.l.wrap.b32 	%r1494, %r1488, %r1489, 25;
	shf.l.wrap.b32 	%r1495, %r1489, %r1488, 25;
	mov.b64 	%rd2196, {%r1495, %r1494};
	xor.b64  	%rd2197, %rd2195, %rd2196;
	xor.b64  	%rd2198, %rd2179, %rd2131;
	xor.b64  	%rd2199, %rd2179, %rd2155;
	and.b64  	%rd2200, %rd2199, %rd2198;
	xor.b64  	%rd2201, %rd2200, %rd2179;
	add.s64 	%rd2202, %rd2191, %rd2201;
	add.s64 	%rd2203, %rd2202, %rd2197;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1496,%dummy}, %rd2192;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1497}, %rd2192;
	}
	shf.r.wrap.b32 	%r1498, %r1497, %r1496, 14;
	shf.r.wrap.b32 	%r1499, %r1496, %r1497, 14;
	mov.b64 	%rd2204, {%r1499, %r1498};
	shf.r.wrap.b32 	%r1500, %r1497, %r1496, 18;
	shf.r.wrap.b32 	%r1501, %r1496, %r1497, 18;
	mov.b64 	%rd2205, {%r1501, %r1500};
	xor.b64  	%rd2206, %rd2205, %rd2204;
	shf.l.wrap.b32 	%r1502, %r1496, %r1497, 23;
	shf.l.wrap.b32 	%r1503, %r1497, %r1496, 23;
	mov.b64 	%rd2207, {%r1503, %r1502};
	xor.b64  	%rd2208, %rd2206, %rd2207;
	xor.b64  	%rd2209, %rd2168, %rd2144;
	and.b64  	%rd2210, %rd2192, %rd2209;
	xor.b64  	%rd2211, %rd2210, %rd2144;
	add.s64 	%rd2212, %rd2120, %rd1843;
	add.s64 	%rd2213, %rd2212, %rd82;
	add.s64 	%rd2214, %rd2213, %rd2211;
	add.s64 	%rd2215, %rd2214, %rd2208;
	add.s64 	%rd2216, %rd2215, %rd2131;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1504,%dummy}, %rd2203;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1505}, %rd2203;
	}
	shf.r.wrap.b32 	%r1506, %r1505, %r1504, 28;
	shf.r.wrap.b32 	%r1507, %r1504, %r1505, 28;
	mov.b64 	%rd2217, {%r1507, %r1506};
	shf.l.wrap.b32 	%r1508, %r1504, %r1505, 30;
	shf.l.wrap.b32 	%r1509, %r1505, %r1504, 30;
	mov.b64 	%rd2218, {%r1509, %r1508};
	xor.b64  	%rd2219, %rd2218, %rd2217;
	shf.l.wrap.b32 	%r1510, %r1504, %r1505, 25;
	shf.l.wrap.b32 	%r1511, %r1505, %r1504, 25;
	mov.b64 	%rd2220, {%r1511, %r1510};
	xor.b64  	%rd2221, %rd2219, %rd2220;
	xor.b64  	%rd2222, %rd2203, %rd2155;
	xor.b64  	%rd2223, %rd2203, %rd2179;
	and.b64  	%rd2224, %rd2223, %rd2222;
	xor.b64  	%rd2225, %rd2224, %rd2203;
	add.s64 	%rd2226, %rd2215, %rd2225;
	add.s64 	%rd2227, %rd2226, %rd2221;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1512,%dummy}, %rd1830;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1513}, %rd1830;
	}
	shf.r.wrap.b32 	%r1514, %r1513, %r1512, 19;
	shf.r.wrap.b32 	%r1515, %r1512, %r1513, 19;
	mov.b64 	%rd2228, {%r1515, %r1514};
	shf.l.wrap.b32 	%r1516, %r1512, %r1513, 3;
	shf.l.wrap.b32 	%r1517, %r1513, %r1512, 3;
	mov.b64 	%rd2229, {%r1517, %r1516};
	shr.u64 	%rd2230, %rd1830, 6;
	xor.b64  	%rd2231, %rd2228, %rd2230;
	xor.b64  	%rd2232, %rd2231, %rd2229;
	shf.r.wrap.b32 	%r1518, %r1127, %r1126, 1;
	shf.r.wrap.b32 	%r1519, %r1126, %r1127, 1;
	mov.b64 	%rd2233, {%r1519, %r1518};
	shf.r.wrap.b32 	%r1520, %r1127, %r1126, 8;
	shf.r.wrap.b32 	%r1521, %r1126, %r1127, 8;
	mov.b64 	%rd2234, {%r1521, %r1520};
	shr.u64 	%rd2235, %rd1661, 7;
	xor.b64  	%rd2236, %rd2233, %rd2235;
	xor.b64  	%rd2237, %rd2236, %rd2234;
	add.s64 	%rd2238, %rd1648, %rd1765;
	add.s64 	%rd2239, %rd2238, %rd2232;
	add.s64 	%rd2240, %rd2239, %rd2237;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1522,%dummy}, %rd1843;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1523}, %rd1843;
	}
	shf.r.wrap.b32 	%r1524, %r1523, %r1522, 19;
	shf.r.wrap.b32 	%r1525, %r1522, %r1523, 19;
	mov.b64 	%rd2241, {%r1525, %r1524};
	shf.l.wrap.b32 	%r1526, %r1522, %r1523, 3;
	shf.l.wrap.b32 	%r1527, %r1523, %r1522, 3;
	mov.b64 	%rd2242, {%r1527, %r1526};
	shr.u64 	%rd2243, %rd1843, 6;
	xor.b64  	%rd2244, %rd2241, %rd2243;
	xor.b64  	%rd2245, %rd2244, %rd2242;
	shf.r.wrap.b32 	%r1528, %r1137, %r1136, 1;
	shf.r.wrap.b32 	%r1529, %r1136, %r1137, 1;
	mov.b64 	%rd2246, {%r1529, %r1528};
	shf.r.wrap.b32 	%r1530, %r1137, %r1136, 8;
	shf.r.wrap.b32 	%r1531, %r1136, %r1137, 8;
	mov.b64 	%rd2247, {%r1531, %r1530};
	shr.u64 	%rd2248, %rd1674, 7;
	xor.b64  	%rd2249, %rd2246, %rd2248;
	xor.b64  	%rd2250, %rd2249, %rd2247;
	add.s64 	%rd2251, %rd1661, %rd1778;
	add.s64 	%rd2252, %rd2251, %rd2245;
	add.s64 	%rd2253, %rd2252, %rd2250;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1532,%dummy}, %rd2240;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1533}, %rd2240;
	}
	shf.r.wrap.b32 	%r1534, %r1533, %r1532, 19;
	shf.r.wrap.b32 	%r1535, %r1532, %r1533, 19;
	mov.b64 	%rd2254, {%r1535, %r1534};
	shf.l.wrap.b32 	%r1536, %r1532, %r1533, 3;
	shf.l.wrap.b32 	%r1537, %r1533, %r1532, 3;
	mov.b64 	%rd2255, {%r1537, %r1536};
	shr.u64 	%rd2256, %rd2240, 6;
	xor.b64  	%rd2257, %rd2254, %rd2256;
	xor.b64  	%rd2258, %rd2257, %rd2255;
	shf.r.wrap.b32 	%r1538, %r1147, %r1146, 1;
	shf.r.wrap.b32 	%r1539, %r1146, %r1147, 1;
	mov.b64 	%rd2259, {%r1539, %r1538};
	shf.r.wrap.b32 	%r1540, %r1147, %r1146, 8;
	shf.r.wrap.b32 	%r1541, %r1146, %r1147, 8;
	mov.b64 	%rd2260, {%r1541, %r1540};
	shr.u64 	%rd2261, %rd1687, 7;
	xor.b64  	%rd2262, %rd2259, %rd2261;
	xor.b64  	%rd2263, %rd2262, %rd2260;
	add.s64 	%rd2264, %rd1674, %rd1791;
	add.s64 	%rd2265, %rd2264, %rd2258;
	add.s64 	%rd2266, %rd2265, %rd2263;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1542,%dummy}, %rd2253;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1543}, %rd2253;
	}
	shf.r.wrap.b32 	%r1544, %r1543, %r1542, 19;
	shf.r.wrap.b32 	%r1545, %r1542, %r1543, 19;
	mov.b64 	%rd2267, {%r1545, %r1544};
	shf.l.wrap.b32 	%r1546, %r1542, %r1543, 3;
	shf.l.wrap.b32 	%r1547, %r1543, %r1542, 3;
	mov.b64 	%rd2268, {%r1547, %r1546};
	shr.u64 	%rd2269, %rd2253, 6;
	xor.b64  	%rd2270, %rd2267, %rd2269;
	xor.b64  	%rd2271, %rd2270, %rd2268;
	shf.r.wrap.b32 	%r1548, %r1157, %r1156, 1;
	shf.r.wrap.b32 	%r1549, %r1156, %r1157, 1;
	mov.b64 	%rd2272, {%r1549, %r1548};
	shf.r.wrap.b32 	%r1550, %r1157, %r1156, 8;
	shf.r.wrap.b32 	%r1551, %r1156, %r1157, 8;
	mov.b64 	%rd2273, {%r1551, %r1550};
	shr.u64 	%rd2274, %rd1700, 7;
	xor.b64  	%rd2275, %rd2272, %rd2274;
	xor.b64  	%rd2276, %rd2275, %rd2273;
	add.s64 	%rd2277, %rd1687, %rd1804;
	add.s64 	%rd2278, %rd2277, %rd2271;
	add.s64 	%rd2279, %rd2278, %rd2276;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1552,%dummy}, %rd2266;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1553}, %rd2266;
	}
	shf.r.wrap.b32 	%r1554, %r1553, %r1552, 19;
	shf.r.wrap.b32 	%r1555, %r1552, %r1553, 19;
	mov.b64 	%rd2280, {%r1555, %r1554};
	shf.l.wrap.b32 	%r1556, %r1552, %r1553, 3;
	shf.l.wrap.b32 	%r1557, %r1553, %r1552, 3;
	mov.b64 	%rd2281, {%r1557, %r1556};
	shr.u64 	%rd2282, %rd2266, 6;
	xor.b64  	%rd2283, %rd2280, %rd2282;
	xor.b64  	%rd2284, %rd2283, %rd2281;
	shf.r.wrap.b32 	%r1558, %r1167, %r1166, 1;
	shf.r.wrap.b32 	%r1559, %r1166, %r1167, 1;
	mov.b64 	%rd2285, {%r1559, %r1558};
	shf.r.wrap.b32 	%r1560, %r1167, %r1166, 8;
	shf.r.wrap.b32 	%r1561, %r1166, %r1167, 8;
	mov.b64 	%rd2286, {%r1561, %r1560};
	shr.u64 	%rd2287, %rd1713, 7;
	xor.b64  	%rd2288, %rd2285, %rd2287;
	xor.b64  	%rd2289, %rd2288, %rd2286;
	add.s64 	%rd2290, %rd1700, %rd1817;
	add.s64 	%rd2291, %rd2290, %rd2284;
	add.s64 	%rd2292, %rd2291, %rd2289;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1562,%dummy}, %rd2279;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1563}, %rd2279;
	}
	shf.r.wrap.b32 	%r1564, %r1563, %r1562, 19;
	shf.r.wrap.b32 	%r1565, %r1562, %r1563, 19;
	mov.b64 	%rd2293, {%r1565, %r1564};
	shf.l.wrap.b32 	%r1566, %r1562, %r1563, 3;
	shf.l.wrap.b32 	%r1567, %r1563, %r1562, 3;
	mov.b64 	%rd2294, {%r1567, %r1566};
	shr.u64 	%rd2295, %rd2279, 6;
	xor.b64  	%rd2296, %rd2293, %rd2295;
	xor.b64  	%rd2297, %rd2296, %rd2294;
	shf.r.wrap.b32 	%r1568, %r1177, %r1176, 1;
	shf.r.wrap.b32 	%r1569, %r1176, %r1177, 1;
	mov.b64 	%rd2298, {%r1569, %r1568};
	shf.r.wrap.b32 	%r1570, %r1177, %r1176, 8;
	shf.r.wrap.b32 	%r1571, %r1176, %r1177, 8;
	mov.b64 	%rd2299, {%r1571, %r1570};
	shr.u64 	%rd2300, %rd1726, 7;
	xor.b64  	%rd2301, %rd2298, %rd2300;
	xor.b64  	%rd2302, %rd2301, %rd2299;
	add.s64 	%rd2303, %rd1713, %rd1830;
	add.s64 	%rd2304, %rd2303, %rd2297;
	add.s64 	%rd2305, %rd2304, %rd2302;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1572,%dummy}, %rd2292;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1573}, %rd2292;
	}
	shf.r.wrap.b32 	%r1574, %r1573, %r1572, 19;
	shf.r.wrap.b32 	%r1575, %r1572, %r1573, 19;
	mov.b64 	%rd2306, {%r1575, %r1574};
	shf.l.wrap.b32 	%r1576, %r1572, %r1573, 3;
	shf.l.wrap.b32 	%r1577, %r1573, %r1572, 3;
	mov.b64 	%rd2307, {%r1577, %r1576};
	shr.u64 	%rd2308, %rd2292, 6;
	xor.b64  	%rd2309, %rd2306, %rd2308;
	xor.b64  	%rd2310, %rd2309, %rd2307;
	shf.r.wrap.b32 	%r1578, %r1187, %r1186, 1;
	shf.r.wrap.b32 	%r1579, %r1186, %r1187, 1;
	mov.b64 	%rd2311, {%r1579, %r1578};
	shf.r.wrap.b32 	%r1580, %r1187, %r1186, 8;
	shf.r.wrap.b32 	%r1581, %r1186, %r1187, 8;
	mov.b64 	%rd2312, {%r1581, %r1580};
	shr.u64 	%rd2313, %rd1739, 7;
	xor.b64  	%rd2314, %rd2311, %rd2313;
	xor.b64  	%rd2315, %rd2314, %rd2312;
	add.s64 	%rd2316, %rd1843, %rd1726;
	add.s64 	%rd2317, %rd2316, %rd2310;
	add.s64 	%rd2318, %rd2317, %rd2315;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1582,%dummy}, %rd2305;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1583}, %rd2305;
	}
	shf.r.wrap.b32 	%r1584, %r1583, %r1582, 19;
	shf.r.wrap.b32 	%r1585, %r1582, %r1583, 19;
	mov.b64 	%rd2319, {%r1585, %r1584};
	shf.l.wrap.b32 	%r1586, %r1582, %r1583, 3;
	shf.l.wrap.b32 	%r1587, %r1583, %r1582, 3;
	mov.b64 	%rd2320, {%r1587, %r1586};
	shr.u64 	%rd2321, %rd2305, 6;
	xor.b64  	%rd2322, %rd2319, %rd2321;
	xor.b64  	%rd2323, %rd2322, %rd2320;
	shf.r.wrap.b32 	%r1588, %r1197, %r1196, 1;
	shf.r.wrap.b32 	%r1589, %r1196, %r1197, 1;
	mov.b64 	%rd2324, {%r1589, %r1588};
	shf.r.wrap.b32 	%r1590, %r1197, %r1196, 8;
	shf.r.wrap.b32 	%r1591, %r1196, %r1197, 8;
	mov.b64 	%rd2325, {%r1591, %r1590};
	shr.u64 	%rd2326, %rd1752, 7;
	xor.b64  	%rd2327, %rd2324, %rd2326;
	xor.b64  	%rd2328, %rd2327, %rd2325;
	add.s64 	%rd2329, %rd2240, %rd1739;
	add.s64 	%rd2330, %rd2329, %rd2323;
	add.s64 	%rd2331, %rd2330, %rd2328;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1592,%dummy}, %rd2318;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1593}, %rd2318;
	}
	shf.r.wrap.b32 	%r1594, %r1593, %r1592, 19;
	shf.r.wrap.b32 	%r1595, %r1592, %r1593, 19;
	mov.b64 	%rd2332, {%r1595, %r1594};
	shf.l.wrap.b32 	%r1596, %r1592, %r1593, 3;
	shf.l.wrap.b32 	%r1597, %r1593, %r1592, 3;
	mov.b64 	%rd2333, {%r1597, %r1596};
	shr.u64 	%rd2334, %rd2318, 6;
	xor.b64  	%rd2335, %rd2332, %rd2334;
	xor.b64  	%rd2336, %rd2335, %rd2333;
	shf.r.wrap.b32 	%r1598, %r1207, %r1206, 1;
	shf.r.wrap.b32 	%r1599, %r1206, %r1207, 1;
	mov.b64 	%rd2337, {%r1599, %r1598};
	shf.r.wrap.b32 	%r1600, %r1207, %r1206, 8;
	shf.r.wrap.b32 	%r1601, %r1206, %r1207, 8;
	mov.b64 	%rd2338, {%r1601, %r1600};
	shr.u64 	%rd2339, %rd1765, 7;
	xor.b64  	%rd2340, %rd2337, %rd2339;
	xor.b64  	%rd2341, %rd2340, %rd2338;
	add.s64 	%rd2342, %rd2253, %rd1752;
	add.s64 	%rd2343, %rd2342, %rd2336;
	add.s64 	%rd2344, %rd2343, %rd2341;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1602,%dummy}, %rd2331;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1603}, %rd2331;
	}
	shf.r.wrap.b32 	%r1604, %r1603, %r1602, 19;
	shf.r.wrap.b32 	%r1605, %r1602, %r1603, 19;
	mov.b64 	%rd2345, {%r1605, %r1604};
	shf.l.wrap.b32 	%r1606, %r1602, %r1603, 3;
	shf.l.wrap.b32 	%r1607, %r1603, %r1602, 3;
	mov.b64 	%rd2346, {%r1607, %r1606};
	shr.u64 	%rd2347, %rd2331, 6;
	xor.b64  	%rd2348, %rd2345, %rd2347;
	xor.b64  	%rd2349, %rd2348, %rd2346;
	shf.r.wrap.b32 	%r1608, %r1217, %r1216, 1;
	shf.r.wrap.b32 	%r1609, %r1216, %r1217, 1;
	mov.b64 	%rd2350, {%r1609, %r1608};
	shf.r.wrap.b32 	%r1610, %r1217, %r1216, 8;
	shf.r.wrap.b32 	%r1611, %r1216, %r1217, 8;
	mov.b64 	%rd2351, {%r1611, %r1610};
	shr.u64 	%rd2352, %rd1778, 7;
	xor.b64  	%rd2353, %rd2350, %rd2352;
	xor.b64  	%rd2354, %rd2353, %rd2351;
	add.s64 	%rd2355, %rd2266, %rd1765;
	add.s64 	%rd2356, %rd2355, %rd2349;
	add.s64 	%rd2357, %rd2356, %rd2354;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1612,%dummy}, %rd2344;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1613}, %rd2344;
	}
	shf.r.wrap.b32 	%r1614, %r1613, %r1612, 19;
	shf.r.wrap.b32 	%r1615, %r1612, %r1613, 19;
	mov.b64 	%rd2358, {%r1615, %r1614};
	shf.l.wrap.b32 	%r1616, %r1612, %r1613, 3;
	shf.l.wrap.b32 	%r1617, %r1613, %r1612, 3;
	mov.b64 	%rd2359, {%r1617, %r1616};
	shr.u64 	%rd2360, %rd2344, 6;
	xor.b64  	%rd2361, %rd2358, %rd2360;
	xor.b64  	%rd2362, %rd2361, %rd2359;
	shf.r.wrap.b32 	%r1618, %r1227, %r1226, 1;
	shf.r.wrap.b32 	%r1619, %r1226, %r1227, 1;
	mov.b64 	%rd2363, {%r1619, %r1618};
	shf.r.wrap.b32 	%r1620, %r1227, %r1226, 8;
	shf.r.wrap.b32 	%r1621, %r1226, %r1227, 8;
	mov.b64 	%rd2364, {%r1621, %r1620};
	shr.u64 	%rd2365, %rd1791, 7;
	xor.b64  	%rd2366, %rd2363, %rd2365;
	xor.b64  	%rd2367, %rd2366, %rd2364;
	add.s64 	%rd2368, %rd2279, %rd1778;
	add.s64 	%rd2369, %rd2368, %rd2362;
	add.s64 	%rd2370, %rd2369, %rd2367;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1622,%dummy}, %rd2357;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1623}, %rd2357;
	}
	shf.r.wrap.b32 	%r1624, %r1623, %r1622, 19;
	shf.r.wrap.b32 	%r1625, %r1622, %r1623, 19;
	mov.b64 	%rd2371, {%r1625, %r1624};
	shf.l.wrap.b32 	%r1626, %r1622, %r1623, 3;
	shf.l.wrap.b32 	%r1627, %r1623, %r1622, 3;
	mov.b64 	%rd2372, {%r1627, %r1626};
	shr.u64 	%rd2373, %rd2357, 6;
	xor.b64  	%rd2374, %rd2371, %rd2373;
	xor.b64  	%rd2375, %rd2374, %rd2372;
	shf.r.wrap.b32 	%r1628, %r1237, %r1236, 1;
	shf.r.wrap.b32 	%r1629, %r1236, %r1237, 1;
	mov.b64 	%rd2376, {%r1629, %r1628};
	shf.r.wrap.b32 	%r1630, %r1237, %r1236, 8;
	shf.r.wrap.b32 	%r1631, %r1236, %r1237, 8;
	mov.b64 	%rd2377, {%r1631, %r1630};
	shr.u64 	%rd2378, %rd1804, 7;
	xor.b64  	%rd2379, %rd2376, %rd2378;
	xor.b64  	%rd2380, %rd2379, %rd2377;
	add.s64 	%rd2381, %rd2292, %rd1791;
	add.s64 	%rd2382, %rd2381, %rd2375;
	add.s64 	%rd2383, %rd2382, %rd2380;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1632,%dummy}, %rd2370;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1633}, %rd2370;
	}
	shf.r.wrap.b32 	%r1634, %r1633, %r1632, 19;
	shf.r.wrap.b32 	%r1635, %r1632, %r1633, 19;
	mov.b64 	%rd2384, {%r1635, %r1634};
	shf.l.wrap.b32 	%r1636, %r1632, %r1633, 3;
	shf.l.wrap.b32 	%r1637, %r1633, %r1632, 3;
	mov.b64 	%rd2385, {%r1637, %r1636};
	shr.u64 	%rd2386, %rd2370, 6;
	xor.b64  	%rd2387, %rd2384, %rd2386;
	xor.b64  	%rd2388, %rd2387, %rd2385;
	shf.r.wrap.b32 	%r1638, %r1247, %r1246, 1;
	shf.r.wrap.b32 	%r1639, %r1246, %r1247, 1;
	mov.b64 	%rd2389, {%r1639, %r1638};
	shf.r.wrap.b32 	%r1640, %r1247, %r1246, 8;
	shf.r.wrap.b32 	%r1641, %r1246, %r1247, 8;
	mov.b64 	%rd2390, {%r1641, %r1640};
	shr.u64 	%rd2391, %rd1817, 7;
	xor.b64  	%rd2392, %rd2389, %rd2391;
	xor.b64  	%rd2393, %rd2392, %rd2390;
	add.s64 	%rd2394, %rd2305, %rd1804;
	add.s64 	%rd2395, %rd2394, %rd2388;
	add.s64 	%rd2396, %rd2395, %rd2393;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1642,%dummy}, %rd2383;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1643}, %rd2383;
	}
	shf.r.wrap.b32 	%r1644, %r1643, %r1642, 19;
	shf.r.wrap.b32 	%r1645, %r1642, %r1643, 19;
	mov.b64 	%rd2397, {%r1645, %r1644};
	shf.l.wrap.b32 	%r1646, %r1642, %r1643, 3;
	shf.l.wrap.b32 	%r1647, %r1643, %r1642, 3;
	mov.b64 	%rd2398, {%r1647, %r1646};
	shr.u64 	%rd2399, %rd2383, 6;
	xor.b64  	%rd2400, %rd2397, %rd2399;
	xor.b64  	%rd2401, %rd2400, %rd2398;
	shf.r.wrap.b32 	%r1648, %r1513, %r1512, 1;
	shf.r.wrap.b32 	%r1649, %r1512, %r1513, 1;
	mov.b64 	%rd2402, {%r1649, %r1648};
	shf.r.wrap.b32 	%r1650, %r1513, %r1512, 8;
	shf.r.wrap.b32 	%r1651, %r1512, %r1513, 8;
	mov.b64 	%rd2403, {%r1651, %r1650};
	shr.u64 	%rd2404, %rd1830, 7;
	xor.b64  	%rd2405, %rd2402, %rd2404;
	xor.b64  	%rd2406, %rd2405, %rd2403;
	add.s64 	%rd2407, %rd2318, %rd1817;
	add.s64 	%rd2408, %rd2407, %rd2401;
	add.s64 	%rd2409, %rd2408, %rd2406;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1652,%dummy}, %rd2396;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1653}, %rd2396;
	}
	shf.r.wrap.b32 	%r1654, %r1653, %r1652, 19;
	shf.r.wrap.b32 	%r1655, %r1652, %r1653, 19;
	mov.b64 	%rd2410, {%r1655, %r1654};
	shf.l.wrap.b32 	%r1656, %r1652, %r1653, 3;
	shf.l.wrap.b32 	%r1657, %r1653, %r1652, 3;
	mov.b64 	%rd2411, {%r1657, %r1656};
	shr.u64 	%rd2412, %rd2396, 6;
	xor.b64  	%rd2413, %rd2410, %rd2412;
	xor.b64  	%rd2414, %rd2413, %rd2411;
	shf.r.wrap.b32 	%r1658, %r1523, %r1522, 1;
	shf.r.wrap.b32 	%r1659, %r1522, %r1523, 1;
	mov.b64 	%rd2415, {%r1659, %r1658};
	shf.r.wrap.b32 	%r1660, %r1523, %r1522, 8;
	shf.r.wrap.b32 	%r1661, %r1522, %r1523, 8;
	mov.b64 	%rd2416, {%r1661, %r1660};
	shr.u64 	%rd2417, %rd1843, 7;
	xor.b64  	%rd2418, %rd2415, %rd2417;
	xor.b64  	%rd2419, %rd2418, %rd2416;
	add.s64 	%rd2420, %rd2331, %rd1830;
	add.s64 	%rd2421, %rd2420, %rd2414;
	add.s64 	%rd2422, %rd2421, %rd2419;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1662,%dummy}, %rd2409;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1663}, %rd2409;
	}
	shf.r.wrap.b32 	%r1664, %r1663, %r1662, 19;
	shf.r.wrap.b32 	%r1665, %r1662, %r1663, 19;
	mov.b64 	%rd2423, {%r1665, %r1664};
	shf.l.wrap.b32 	%r1666, %r1662, %r1663, 3;
	shf.l.wrap.b32 	%r1667, %r1663, %r1662, 3;
	mov.b64 	%rd2424, {%r1667, %r1666};
	shr.u64 	%rd2425, %rd2409, 6;
	xor.b64  	%rd2426, %rd2423, %rd2425;
	xor.b64  	%rd2427, %rd2426, %rd2424;
	shf.r.wrap.b32 	%r1668, %r1533, %r1532, 1;
	shf.r.wrap.b32 	%r1669, %r1532, %r1533, 1;
	mov.b64 	%rd2428, {%r1669, %r1668};
	shf.r.wrap.b32 	%r1670, %r1533, %r1532, 8;
	shf.r.wrap.b32 	%r1671, %r1532, %r1533, 8;
	mov.b64 	%rd2429, {%r1671, %r1670};
	shr.u64 	%rd2430, %rd2240, 7;
	xor.b64  	%rd2431, %rd2428, %rd2430;
	xor.b64  	%rd2432, %rd2431, %rd2429;
	add.s64 	%rd2433, %rd2344, %rd1843;
	add.s64 	%rd2434, %rd2433, %rd2427;
	add.s64 	%rd2435, %rd2434, %rd2432;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1672,%dummy}, %rd2216;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1673}, %rd2216;
	}
	shf.r.wrap.b32 	%r1674, %r1673, %r1672, 14;
	shf.r.wrap.b32 	%r1675, %r1672, %r1673, 14;
	mov.b64 	%rd2436, {%r1675, %r1674};
	shf.r.wrap.b32 	%r1676, %r1673, %r1672, 18;
	shf.r.wrap.b32 	%r1677, %r1672, %r1673, 18;
	mov.b64 	%rd2437, {%r1677, %r1676};
	xor.b64  	%rd2438, %rd2437, %rd2436;
	shf.l.wrap.b32 	%r1678, %r1672, %r1673, 23;
	shf.l.wrap.b32 	%r1679, %r1673, %r1672, 23;
	mov.b64 	%rd2439, {%r1679, %r1678};
	xor.b64  	%rd2440, %rd2438, %rd2439;
	xor.b64  	%rd2441, %rd2192, %rd2168;
	and.b64  	%rd2442, %rd2441, %rd2216;
	xor.b64  	%rd2443, %rd2442, %rd2168;
	add.s64 	%rd2444, %rd2443, %rd2144;
	add.s64 	%rd2445, %rd2444, %rd2240;
	add.s64 	%rd2446, %rd2445, %rd83;
	add.s64 	%rd2447, %rd2446, %rd2440;
	add.s64 	%rd2448, %rd2447, %rd2155;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1680,%dummy}, %rd2227;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1681}, %rd2227;
	}
	shf.r.wrap.b32 	%r1682, %r1681, %r1680, 28;
	shf.r.wrap.b32 	%r1683, %r1680, %r1681, 28;
	mov.b64 	%rd2449, {%r1683, %r1682};
	shf.l.wrap.b32 	%r1684, %r1680, %r1681, 30;
	shf.l.wrap.b32 	%r1685, %r1681, %r1680, 30;
	mov.b64 	%rd2450, {%r1685, %r1684};
	xor.b64  	%rd2451, %rd2450, %rd2449;
	shf.l.wrap.b32 	%r1686, %r1680, %r1681, 25;
	shf.l.wrap.b32 	%r1687, %r1681, %r1680, 25;
	mov.b64 	%rd2452, {%r1687, %r1686};
	xor.b64  	%rd2453, %rd2451, %rd2452;
	xor.b64  	%rd2454, %rd2227, %rd2179;
	xor.b64  	%rd2455, %rd2227, %rd2203;
	and.b64  	%rd2456, %rd2455, %rd2454;
	xor.b64  	%rd2457, %rd2456, %rd2227;
	add.s64 	%rd2458, %rd2447, %rd2457;
	add.s64 	%rd2459, %rd2458, %rd2453;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1688,%dummy}, %rd2448;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1689}, %rd2448;
	}
	shf.r.wrap.b32 	%r1690, %r1689, %r1688, 14;
	shf.r.wrap.b32 	%r1691, %r1688, %r1689, 14;
	mov.b64 	%rd2460, {%r1691, %r1690};
	shf.r.wrap.b32 	%r1692, %r1689, %r1688, 18;
	shf.r.wrap.b32 	%r1693, %r1688, %r1689, 18;
	mov.b64 	%rd2461, {%r1693, %r1692};
	xor.b64  	%rd2462, %rd2461, %rd2460;
	shf.l.wrap.b32 	%r1694, %r1688, %r1689, 23;
	shf.l.wrap.b32 	%r1695, %r1689, %r1688, 23;
	mov.b64 	%rd2463, {%r1695, %r1694};
	xor.b64  	%rd2464, %rd2462, %rd2463;
	xor.b64  	%rd2465, %rd2216, %rd2192;
	and.b64  	%rd2466, %rd2448, %rd2465;
	xor.b64  	%rd2467, %rd2466, %rd2192;
	add.s64 	%rd2468, %rd2253, %rd2168;
	add.s64 	%rd2469, %rd2468, %rd84;
	add.s64 	%rd2470, %rd2469, %rd2467;
	add.s64 	%rd2471, %rd2470, %rd2464;
	add.s64 	%rd2472, %rd2471, %rd2179;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1696,%dummy}, %rd2459;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1697}, %rd2459;
	}
	shf.r.wrap.b32 	%r1698, %r1697, %r1696, 28;
	shf.r.wrap.b32 	%r1699, %r1696, %r1697, 28;
	mov.b64 	%rd2473, {%r1699, %r1698};
	shf.l.wrap.b32 	%r1700, %r1696, %r1697, 30;
	shf.l.wrap.b32 	%r1701, %r1697, %r1696, 30;
	mov.b64 	%rd2474, {%r1701, %r1700};
	xor.b64  	%rd2475, %rd2474, %rd2473;
	shf.l.wrap.b32 	%r1702, %r1696, %r1697, 25;
	shf.l.wrap.b32 	%r1703, %r1697, %r1696, 25;
	mov.b64 	%rd2476, {%r1703, %r1702};
	xor.b64  	%rd2477, %rd2475, %rd2476;
	xor.b64  	%rd2478, %rd2459, %rd2203;
	xor.b64  	%rd2479, %rd2459, %rd2227;
	and.b64  	%rd2480, %rd2479, %rd2478;
	xor.b64  	%rd2481, %rd2480, %rd2459;
	add.s64 	%rd2482, %rd2471, %rd2481;
	add.s64 	%rd2483, %rd2482, %rd2477;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1704,%dummy}, %rd2472;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1705}, %rd2472;
	}
	shf.r.wrap.b32 	%r1706, %r1705, %r1704, 14;
	shf.r.wrap.b32 	%r1707, %r1704, %r1705, 14;
	mov.b64 	%rd2484, {%r1707, %r1706};
	shf.r.wrap.b32 	%r1708, %r1705, %r1704, 18;
	shf.r.wrap.b32 	%r1709, %r1704, %r1705, 18;
	mov.b64 	%rd2485, {%r1709, %r1708};
	xor.b64  	%rd2486, %rd2485, %rd2484;
	shf.l.wrap.b32 	%r1710, %r1704, %r1705, 23;
	shf.l.wrap.b32 	%r1711, %r1705, %r1704, 23;
	mov.b64 	%rd2487, {%r1711, %r1710};
	xor.b64  	%rd2488, %rd2486, %rd2487;
	xor.b64  	%rd2489, %rd2448, %rd2216;
	and.b64  	%rd2490, %rd2472, %rd2489;
	xor.b64  	%rd2491, %rd2490, %rd2216;
	add.s64 	%rd2492, %rd2266, %rd2192;
	add.s64 	%rd2493, %rd2492, %rd85;
	add.s64 	%rd2494, %rd2493, %rd2491;
	add.s64 	%rd2495, %rd2494, %rd2488;
	add.s64 	%rd2496, %rd2495, %rd2203;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1712,%dummy}, %rd2483;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1713}, %rd2483;
	}
	shf.r.wrap.b32 	%r1714, %r1713, %r1712, 28;
	shf.r.wrap.b32 	%r1715, %r1712, %r1713, 28;
	mov.b64 	%rd2497, {%r1715, %r1714};
	shf.l.wrap.b32 	%r1716, %r1712, %r1713, 30;
	shf.l.wrap.b32 	%r1717, %r1713, %r1712, 30;
	mov.b64 	%rd2498, {%r1717, %r1716};
	xor.b64  	%rd2499, %rd2498, %rd2497;
	shf.l.wrap.b32 	%r1718, %r1712, %r1713, 25;
	shf.l.wrap.b32 	%r1719, %r1713, %r1712, 25;
	mov.b64 	%rd2500, {%r1719, %r1718};
	xor.b64  	%rd2501, %rd2499, %rd2500;
	xor.b64  	%rd2502, %rd2483, %rd2227;
	xor.b64  	%rd2503, %rd2483, %rd2459;
	and.b64  	%rd2504, %rd2503, %rd2502;
	xor.b64  	%rd2505, %rd2504, %rd2483;
	add.s64 	%rd2506, %rd2495, %rd2505;
	add.s64 	%rd2507, %rd2506, %rd2501;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1720,%dummy}, %rd2496;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1721}, %rd2496;
	}
	shf.r.wrap.b32 	%r1722, %r1721, %r1720, 14;
	shf.r.wrap.b32 	%r1723, %r1720, %r1721, 14;
	mov.b64 	%rd2508, {%r1723, %r1722};
	shf.r.wrap.b32 	%r1724, %r1721, %r1720, 18;
	shf.r.wrap.b32 	%r1725, %r1720, %r1721, 18;
	mov.b64 	%rd2509, {%r1725, %r1724};
	xor.b64  	%rd2510, %rd2509, %rd2508;
	shf.l.wrap.b32 	%r1726, %r1720, %r1721, 23;
	shf.l.wrap.b32 	%r1727, %r1721, %r1720, 23;
	mov.b64 	%rd2511, {%r1727, %r1726};
	xor.b64  	%rd2512, %rd2510, %rd2511;
	xor.b64  	%rd2513, %rd2472, %rd2448;
	and.b64  	%rd2514, %rd2496, %rd2513;
	xor.b64  	%rd2515, %rd2514, %rd2448;
	add.s64 	%rd2516, %rd2279, %rd2216;
	add.s64 	%rd2517, %rd2516, %rd86;
	add.s64 	%rd2518, %rd2517, %rd2515;
	add.s64 	%rd2519, %rd2518, %rd2512;
	add.s64 	%rd2520, %rd2519, %rd2227;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1728,%dummy}, %rd2507;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1729}, %rd2507;
	}
	shf.r.wrap.b32 	%r1730, %r1729, %r1728, 28;
	shf.r.wrap.b32 	%r1731, %r1728, %r1729, 28;
	mov.b64 	%rd2521, {%r1731, %r1730};
	shf.l.wrap.b32 	%r1732, %r1728, %r1729, 30;
	shf.l.wrap.b32 	%r1733, %r1729, %r1728, 30;
	mov.b64 	%rd2522, {%r1733, %r1732};
	xor.b64  	%rd2523, %rd2522, %rd2521;
	shf.l.wrap.b32 	%r1734, %r1728, %r1729, 25;
	shf.l.wrap.b32 	%r1735, %r1729, %r1728, 25;
	mov.b64 	%rd2524, {%r1735, %r1734};
	xor.b64  	%rd2525, %rd2523, %rd2524;
	xor.b64  	%rd2526, %rd2507, %rd2459;
	xor.b64  	%rd2527, %rd2507, %rd2483;
	and.b64  	%rd2528, %rd2527, %rd2526;
	xor.b64  	%rd2529, %rd2528, %rd2507;
	add.s64 	%rd2530, %rd2519, %rd2529;
	add.s64 	%rd2531, %rd2530, %rd2525;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1736,%dummy}, %rd2520;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1737}, %rd2520;
	}
	shf.r.wrap.b32 	%r1738, %r1737, %r1736, 14;
	shf.r.wrap.b32 	%r1739, %r1736, %r1737, 14;
	mov.b64 	%rd2532, {%r1739, %r1738};
	shf.r.wrap.b32 	%r1740, %r1737, %r1736, 18;
	shf.r.wrap.b32 	%r1741, %r1736, %r1737, 18;
	mov.b64 	%rd2533, {%r1741, %r1740};
	xor.b64  	%rd2534, %rd2533, %rd2532;
	shf.l.wrap.b32 	%r1742, %r1736, %r1737, 23;
	shf.l.wrap.b32 	%r1743, %r1737, %r1736, 23;
	mov.b64 	%rd2535, {%r1743, %r1742};
	xor.b64  	%rd2536, %rd2534, %rd2535;
	xor.b64  	%rd2537, %rd2496, %rd2472;
	and.b64  	%rd2538, %rd2520, %rd2537;
	xor.b64  	%rd2539, %rd2538, %rd2472;
	add.s64 	%rd2540, %rd2448, %rd2292;
	add.s64 	%rd2541, %rd2540, %rd87;
	add.s64 	%rd2542, %rd2541, %rd2539;
	add.s64 	%rd2543, %rd2542, %rd2536;
	add.s64 	%rd2544, %rd2543, %rd2459;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1744,%dummy}, %rd2531;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1745}, %rd2531;
	}
	shf.r.wrap.b32 	%r1746, %r1745, %r1744, 28;
	shf.r.wrap.b32 	%r1747, %r1744, %r1745, 28;
	mov.b64 	%rd2545, {%r1747, %r1746};
	shf.l.wrap.b32 	%r1748, %r1744, %r1745, 30;
	shf.l.wrap.b32 	%r1749, %r1745, %r1744, 30;
	mov.b64 	%rd2546, {%r1749, %r1748};
	xor.b64  	%rd2547, %rd2546, %rd2545;
	shf.l.wrap.b32 	%r1750, %r1744, %r1745, 25;
	shf.l.wrap.b32 	%r1751, %r1745, %r1744, 25;
	mov.b64 	%rd2548, {%r1751, %r1750};
	xor.b64  	%rd2549, %rd2547, %rd2548;
	xor.b64  	%rd2550, %rd2531, %rd2483;
	xor.b64  	%rd2551, %rd2531, %rd2507;
	and.b64  	%rd2552, %rd2551, %rd2550;
	xor.b64  	%rd2553, %rd2552, %rd2531;
	add.s64 	%rd2554, %rd2543, %rd2553;
	add.s64 	%rd2555, %rd2554, %rd2549;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1752,%dummy}, %rd2544;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1753}, %rd2544;
	}
	shf.r.wrap.b32 	%r1754, %r1753, %r1752, 14;
	shf.r.wrap.b32 	%r1755, %r1752, %r1753, 14;
	mov.b64 	%rd2556, {%r1755, %r1754};
	shf.r.wrap.b32 	%r1756, %r1753, %r1752, 18;
	shf.r.wrap.b32 	%r1757, %r1752, %r1753, 18;
	mov.b64 	%rd2557, {%r1757, %r1756};
	xor.b64  	%rd2558, %rd2557, %rd2556;
	shf.l.wrap.b32 	%r1758, %r1752, %r1753, 23;
	shf.l.wrap.b32 	%r1759, %r1753, %r1752, 23;
	mov.b64 	%rd2559, {%r1759, %r1758};
	xor.b64  	%rd2560, %rd2558, %rd2559;
	xor.b64  	%rd2561, %rd2520, %rd2496;
	and.b64  	%rd2562, %rd2544, %rd2561;
	xor.b64  	%rd2563, %rd2562, %rd2496;
	add.s64 	%rd2564, %rd2472, %rd2305;
	add.s64 	%rd2565, %rd2564, %rd88;
	add.s64 	%rd2566, %rd2565, %rd2563;
	add.s64 	%rd2567, %rd2566, %rd2560;
	add.s64 	%rd2568, %rd2567, %rd2483;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1760,%dummy}, %rd2555;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1761}, %rd2555;
	}
	shf.r.wrap.b32 	%r1762, %r1761, %r1760, 28;
	shf.r.wrap.b32 	%r1763, %r1760, %r1761, 28;
	mov.b64 	%rd2569, {%r1763, %r1762};
	shf.l.wrap.b32 	%r1764, %r1760, %r1761, 30;
	shf.l.wrap.b32 	%r1765, %r1761, %r1760, 30;
	mov.b64 	%rd2570, {%r1765, %r1764};
	xor.b64  	%rd2571, %rd2570, %rd2569;
	shf.l.wrap.b32 	%r1766, %r1760, %r1761, 25;
	shf.l.wrap.b32 	%r1767, %r1761, %r1760, 25;
	mov.b64 	%rd2572, {%r1767, %r1766};
	xor.b64  	%rd2573, %rd2571, %rd2572;
	xor.b64  	%rd2574, %rd2555, %rd2507;
	xor.b64  	%rd2575, %rd2555, %rd2531;
	and.b64  	%rd2576, %rd2575, %rd2574;
	xor.b64  	%rd2577, %rd2576, %rd2555;
	add.s64 	%rd2578, %rd2567, %rd2577;
	add.s64 	%rd2579, %rd2578, %rd2573;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1768,%dummy}, %rd2568;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1769}, %rd2568;
	}
	shf.r.wrap.b32 	%r1770, %r1769, %r1768, 14;
	shf.r.wrap.b32 	%r1771, %r1768, %r1769, 14;
	mov.b64 	%rd2580, {%r1771, %r1770};
	shf.r.wrap.b32 	%r1772, %r1769, %r1768, 18;
	shf.r.wrap.b32 	%r1773, %r1768, %r1769, 18;
	mov.b64 	%rd2581, {%r1773, %r1772};
	xor.b64  	%rd2582, %rd2581, %rd2580;
	shf.l.wrap.b32 	%r1774, %r1768, %r1769, 23;
	shf.l.wrap.b32 	%r1775, %r1769, %r1768, 23;
	mov.b64 	%rd2583, {%r1775, %r1774};
	xor.b64  	%rd2584, %rd2582, %rd2583;
	xor.b64  	%rd2585, %rd2544, %rd2520;
	and.b64  	%rd2586, %rd2568, %rd2585;
	xor.b64  	%rd2587, %rd2586, %rd2520;
	add.s64 	%rd2588, %rd2496, %rd2318;
	add.s64 	%rd2589, %rd2588, %rd89;
	add.s64 	%rd2590, %rd2589, %rd2587;
	add.s64 	%rd2591, %rd2590, %rd2584;
	add.s64 	%rd2592, %rd2591, %rd2507;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1776,%dummy}, %rd2579;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1777}, %rd2579;
	}
	shf.r.wrap.b32 	%r1778, %r1777, %r1776, 28;
	shf.r.wrap.b32 	%r1779, %r1776, %r1777, 28;
	mov.b64 	%rd2593, {%r1779, %r1778};
	shf.l.wrap.b32 	%r1780, %r1776, %r1777, 30;
	shf.l.wrap.b32 	%r1781, %r1777, %r1776, 30;
	mov.b64 	%rd2594, {%r1781, %r1780};
	xor.b64  	%rd2595, %rd2594, %rd2593;
	shf.l.wrap.b32 	%r1782, %r1776, %r1777, 25;
	shf.l.wrap.b32 	%r1783, %r1777, %r1776, 25;
	mov.b64 	%rd2596, {%r1783, %r1782};
	xor.b64  	%rd2597, %rd2595, %rd2596;
	xor.b64  	%rd2598, %rd2579, %rd2531;
	xor.b64  	%rd2599, %rd2579, %rd2555;
	and.b64  	%rd2600, %rd2599, %rd2598;
	xor.b64  	%rd2601, %rd2600, %rd2579;
	add.s64 	%rd2602, %rd2591, %rd2601;
	add.s64 	%rd2603, %rd2602, %rd2597;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1784,%dummy}, %rd2592;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1785}, %rd2592;
	}
	shf.r.wrap.b32 	%r1786, %r1785, %r1784, 14;
	shf.r.wrap.b32 	%r1787, %r1784, %r1785, 14;
	mov.b64 	%rd2604, {%r1787, %r1786};
	shf.r.wrap.b32 	%r1788, %r1785, %r1784, 18;
	shf.r.wrap.b32 	%r1789, %r1784, %r1785, 18;
	mov.b64 	%rd2605, {%r1789, %r1788};
	xor.b64  	%rd2606, %rd2605, %rd2604;
	shf.l.wrap.b32 	%r1790, %r1784, %r1785, 23;
	shf.l.wrap.b32 	%r1791, %r1785, %r1784, 23;
	mov.b64 	%rd2607, {%r1791, %r1790};
	xor.b64  	%rd2608, %rd2606, %rd2607;
	xor.b64  	%rd2609, %rd2568, %rd2544;
	and.b64  	%rd2610, %rd2592, %rd2609;
	xor.b64  	%rd2611, %rd2610, %rd2544;
	add.s64 	%rd2612, %rd2520, %rd2331;
	add.s64 	%rd2613, %rd2612, %rd90;
	add.s64 	%rd2614, %rd2613, %rd2611;
	add.s64 	%rd2615, %rd2614, %rd2608;
	add.s64 	%rd2616, %rd2615, %rd2531;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1792,%dummy}, %rd2603;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1793}, %rd2603;
	}
	shf.r.wrap.b32 	%r1794, %r1793, %r1792, 28;
	shf.r.wrap.b32 	%r1795, %r1792, %r1793, 28;
	mov.b64 	%rd2617, {%r1795, %r1794};
	shf.l.wrap.b32 	%r1796, %r1792, %r1793, 30;
	shf.l.wrap.b32 	%r1797, %r1793, %r1792, 30;
	mov.b64 	%rd2618, {%r1797, %r1796};
	xor.b64  	%rd2619, %rd2618, %rd2617;
	shf.l.wrap.b32 	%r1798, %r1792, %r1793, 25;
	shf.l.wrap.b32 	%r1799, %r1793, %r1792, 25;
	mov.b64 	%rd2620, {%r1799, %r1798};
	xor.b64  	%rd2621, %rd2619, %rd2620;
	xor.b64  	%rd2622, %rd2603, %rd2555;
	xor.b64  	%rd2623, %rd2603, %rd2579;
	and.b64  	%rd2624, %rd2623, %rd2622;
	xor.b64  	%rd2625, %rd2624, %rd2603;
	add.s64 	%rd2626, %rd2615, %rd2625;
	add.s64 	%rd2627, %rd2626, %rd2621;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1800,%dummy}, %rd2616;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1801}, %rd2616;
	}
	shf.r.wrap.b32 	%r1802, %r1801, %r1800, 14;
	shf.r.wrap.b32 	%r1803, %r1800, %r1801, 14;
	mov.b64 	%rd2628, {%r1803, %r1802};
	shf.r.wrap.b32 	%r1804, %r1801, %r1800, 18;
	shf.r.wrap.b32 	%r1805, %r1800, %r1801, 18;
	mov.b64 	%rd2629, {%r1805, %r1804};
	xor.b64  	%rd2630, %rd2629, %rd2628;
	shf.l.wrap.b32 	%r1806, %r1800, %r1801, 23;
	shf.l.wrap.b32 	%r1807, %r1801, %r1800, 23;
	mov.b64 	%rd2631, {%r1807, %r1806};
	xor.b64  	%rd2632, %rd2630, %rd2631;
	xor.b64  	%rd2633, %rd2592, %rd2568;
	and.b64  	%rd2634, %rd2616, %rd2633;
	xor.b64  	%rd2635, %rd2634, %rd2568;
	add.s64 	%rd2636, %rd2544, %rd2344;
	add.s64 	%rd2637, %rd2636, %rd91;
	add.s64 	%rd2638, %rd2637, %rd2635;
	add.s64 	%rd2639, %rd2638, %rd2632;
	add.s64 	%rd2640, %rd2639, %rd2555;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1808,%dummy}, %rd2627;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1809}, %rd2627;
	}
	shf.r.wrap.b32 	%r1810, %r1809, %r1808, 28;
	shf.r.wrap.b32 	%r1811, %r1808, %r1809, 28;
	mov.b64 	%rd2641, {%r1811, %r1810};
	shf.l.wrap.b32 	%r1812, %r1808, %r1809, 30;
	shf.l.wrap.b32 	%r1813, %r1809, %r1808, 30;
	mov.b64 	%rd2642, {%r1813, %r1812};
	xor.b64  	%rd2643, %rd2642, %rd2641;
	shf.l.wrap.b32 	%r1814, %r1808, %r1809, 25;
	shf.l.wrap.b32 	%r1815, %r1809, %r1808, 25;
	mov.b64 	%rd2644, {%r1815, %r1814};
	xor.b64  	%rd2645, %rd2643, %rd2644;
	xor.b64  	%rd2646, %rd2627, %rd2579;
	xor.b64  	%rd2647, %rd2627, %rd2603;
	and.b64  	%rd2648, %rd2647, %rd2646;
	xor.b64  	%rd2649, %rd2648, %rd2627;
	add.s64 	%rd2650, %rd2639, %rd2649;
	add.s64 	%rd2651, %rd2650, %rd2645;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1816,%dummy}, %rd2640;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1817}, %rd2640;
	}
	shf.r.wrap.b32 	%r1818, %r1817, %r1816, 14;
	shf.r.wrap.b32 	%r1819, %r1816, %r1817, 14;
	mov.b64 	%rd2652, {%r1819, %r1818};
	shf.r.wrap.b32 	%r1820, %r1817, %r1816, 18;
	shf.r.wrap.b32 	%r1821, %r1816, %r1817, 18;
	mov.b64 	%rd2653, {%r1821, %r1820};
	xor.b64  	%rd2654, %rd2653, %rd2652;
	shf.l.wrap.b32 	%r1822, %r1816, %r1817, 23;
	shf.l.wrap.b32 	%r1823, %r1817, %r1816, 23;
	mov.b64 	%rd2655, {%r1823, %r1822};
	xor.b64  	%rd2656, %rd2654, %rd2655;
	xor.b64  	%rd2657, %rd2616, %rd2592;
	and.b64  	%rd2658, %rd2640, %rd2657;
	xor.b64  	%rd2659, %rd2658, %rd2592;
	add.s64 	%rd2660, %rd2568, %rd2357;
	add.s64 	%rd2661, %rd2660, %rd92;
	add.s64 	%rd2662, %rd2661, %rd2659;
	add.s64 	%rd2663, %rd2662, %rd2656;
	add.s64 	%rd2664, %rd2663, %rd2579;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1824,%dummy}, %rd2651;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1825}, %rd2651;
	}
	shf.r.wrap.b32 	%r1826, %r1825, %r1824, 28;
	shf.r.wrap.b32 	%r1827, %r1824, %r1825, 28;
	mov.b64 	%rd2665, {%r1827, %r1826};
	shf.l.wrap.b32 	%r1828, %r1824, %r1825, 30;
	shf.l.wrap.b32 	%r1829, %r1825, %r1824, 30;
	mov.b64 	%rd2666, {%r1829, %r1828};
	xor.b64  	%rd2667, %rd2666, %rd2665;
	shf.l.wrap.b32 	%r1830, %r1824, %r1825, 25;
	shf.l.wrap.b32 	%r1831, %r1825, %r1824, 25;
	mov.b64 	%rd2668, {%r1831, %r1830};
	xor.b64  	%rd2669, %rd2667, %rd2668;
	xor.b64  	%rd2670, %rd2651, %rd2603;
	xor.b64  	%rd2671, %rd2651, %rd2627;
	and.b64  	%rd2672, %rd2671, %rd2670;
	xor.b64  	%rd2673, %rd2672, %rd2651;
	add.s64 	%rd2674, %rd2663, %rd2673;
	add.s64 	%rd2675, %rd2674, %rd2669;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1832,%dummy}, %rd2664;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1833}, %rd2664;
	}
	shf.r.wrap.b32 	%r1834, %r1833, %r1832, 14;
	shf.r.wrap.b32 	%r1835, %r1832, %r1833, 14;
	mov.b64 	%rd2676, {%r1835, %r1834};
	shf.r.wrap.b32 	%r1836, %r1833, %r1832, 18;
	shf.r.wrap.b32 	%r1837, %r1832, %r1833, 18;
	mov.b64 	%rd2677, {%r1837, %r1836};
	xor.b64  	%rd2678, %rd2677, %rd2676;
	shf.l.wrap.b32 	%r1838, %r1832, %r1833, 23;
	shf.l.wrap.b32 	%r1839, %r1833, %r1832, 23;
	mov.b64 	%rd2679, {%r1839, %r1838};
	xor.b64  	%rd2680, %rd2678, %rd2679;
	xor.b64  	%rd2681, %rd2640, %rd2616;
	and.b64  	%rd2682, %rd2664, %rd2681;
	xor.b64  	%rd2683, %rd2682, %rd2616;
	add.s64 	%rd2684, %rd2592, %rd2370;
	add.s64 	%rd2685, %rd2684, %rd93;
	add.s64 	%rd2686, %rd2685, %rd2683;
	add.s64 	%rd2687, %rd2686, %rd2680;
	add.s64 	%rd2688, %rd2687, %rd2603;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1840,%dummy}, %rd2675;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1841}, %rd2675;
	}
	shf.r.wrap.b32 	%r1842, %r1841, %r1840, 28;
	shf.r.wrap.b32 	%r1843, %r1840, %r1841, 28;
	mov.b64 	%rd2689, {%r1843, %r1842};
	shf.l.wrap.b32 	%r1844, %r1840, %r1841, 30;
	shf.l.wrap.b32 	%r1845, %r1841, %r1840, 30;
	mov.b64 	%rd2690, {%r1845, %r1844};
	xor.b64  	%rd2691, %rd2690, %rd2689;
	shf.l.wrap.b32 	%r1846, %r1840, %r1841, 25;
	shf.l.wrap.b32 	%r1847, %r1841, %r1840, 25;
	mov.b64 	%rd2692, {%r1847, %r1846};
	xor.b64  	%rd2693, %rd2691, %rd2692;
	xor.b64  	%rd2694, %rd2675, %rd2627;
	xor.b64  	%rd2695, %rd2675, %rd2651;
	and.b64  	%rd2696, %rd2695, %rd2694;
	xor.b64  	%rd2697, %rd2696, %rd2675;
	add.s64 	%rd2698, %rd2687, %rd2697;
	add.s64 	%rd2699, %rd2698, %rd2693;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1848,%dummy}, %rd2688;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1849}, %rd2688;
	}
	shf.r.wrap.b32 	%r1850, %r1849, %r1848, 14;
	shf.r.wrap.b32 	%r1851, %r1848, %r1849, 14;
	mov.b64 	%rd2700, {%r1851, %r1850};
	shf.r.wrap.b32 	%r1852, %r1849, %r1848, 18;
	shf.r.wrap.b32 	%r1853, %r1848, %r1849, 18;
	mov.b64 	%rd2701, {%r1853, %r1852};
	xor.b64  	%rd2702, %rd2701, %rd2700;
	shf.l.wrap.b32 	%r1854, %r1848, %r1849, 23;
	shf.l.wrap.b32 	%r1855, %r1849, %r1848, 23;
	mov.b64 	%rd2703, {%r1855, %r1854};
	xor.b64  	%rd2704, %rd2702, %rd2703;
	xor.b64  	%rd2705, %rd2664, %rd2640;
	and.b64  	%rd2706, %rd2688, %rd2705;
	xor.b64  	%rd2707, %rd2706, %rd2640;
	add.s64 	%rd2708, %rd2616, %rd2383;
	add.s64 	%rd2709, %rd2708, %rd94;
	add.s64 	%rd2710, %rd2709, %rd2707;
	add.s64 	%rd2711, %rd2710, %rd2704;
	add.s64 	%rd2712, %rd2711, %rd2627;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1856,%dummy}, %rd2699;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1857}, %rd2699;
	}
	shf.r.wrap.b32 	%r1858, %r1857, %r1856, 28;
	shf.r.wrap.b32 	%r1859, %r1856, %r1857, 28;
	mov.b64 	%rd2713, {%r1859, %r1858};
	shf.l.wrap.b32 	%r1860, %r1856, %r1857, 30;
	shf.l.wrap.b32 	%r1861, %r1857, %r1856, 30;
	mov.b64 	%rd2714, {%r1861, %r1860};
	xor.b64  	%rd2715, %rd2714, %rd2713;
	shf.l.wrap.b32 	%r1862, %r1856, %r1857, 25;
	shf.l.wrap.b32 	%r1863, %r1857, %r1856, 25;
	mov.b64 	%rd2716, {%r1863, %r1862};
	xor.b64  	%rd2717, %rd2715, %rd2716;
	xor.b64  	%rd2718, %rd2699, %rd2651;
	xor.b64  	%rd2719, %rd2699, %rd2675;
	and.b64  	%rd2720, %rd2719, %rd2718;
	xor.b64  	%rd2721, %rd2720, %rd2699;
	add.s64 	%rd2722, %rd2711, %rd2721;
	add.s64 	%rd2723, %rd2722, %rd2717;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1864,%dummy}, %rd2712;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1865}, %rd2712;
	}
	shf.r.wrap.b32 	%r1866, %r1865, %r1864, 14;
	shf.r.wrap.b32 	%r1867, %r1864, %r1865, 14;
	mov.b64 	%rd2724, {%r1867, %r1866};
	shf.r.wrap.b32 	%r1868, %r1865, %r1864, 18;
	shf.r.wrap.b32 	%r1869, %r1864, %r1865, 18;
	mov.b64 	%rd2725, {%r1869, %r1868};
	xor.b64  	%rd2726, %rd2725, %rd2724;
	shf.l.wrap.b32 	%r1870, %r1864, %r1865, 23;
	shf.l.wrap.b32 	%r1871, %r1865, %r1864, 23;
	mov.b64 	%rd2727, {%r1871, %r1870};
	xor.b64  	%rd2728, %rd2726, %rd2727;
	xor.b64  	%rd2729, %rd2688, %rd2664;
	and.b64  	%rd2730, %rd2712, %rd2729;
	xor.b64  	%rd2731, %rd2730, %rd2664;
	add.s64 	%rd2732, %rd2640, %rd2396;
	add.s64 	%rd2733, %rd2732, %rd95;
	add.s64 	%rd2734, %rd2733, %rd2731;
	add.s64 	%rd2735, %rd2734, %rd2728;
	add.s64 	%rd2736, %rd2735, %rd2651;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1872,%dummy}, %rd2723;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1873}, %rd2723;
	}
	shf.r.wrap.b32 	%r1874, %r1873, %r1872, 28;
	shf.r.wrap.b32 	%r1875, %r1872, %r1873, 28;
	mov.b64 	%rd2737, {%r1875, %r1874};
	shf.l.wrap.b32 	%r1876, %r1872, %r1873, 30;
	shf.l.wrap.b32 	%r1877, %r1873, %r1872, 30;
	mov.b64 	%rd2738, {%r1877, %r1876};
	xor.b64  	%rd2739, %rd2738, %rd2737;
	shf.l.wrap.b32 	%r1878, %r1872, %r1873, 25;
	shf.l.wrap.b32 	%r1879, %r1873, %r1872, 25;
	mov.b64 	%rd2740, {%r1879, %r1878};
	xor.b64  	%rd2741, %rd2739, %rd2740;
	xor.b64  	%rd2742, %rd2723, %rd2675;
	xor.b64  	%rd2743, %rd2723, %rd2699;
	and.b64  	%rd2744, %rd2743, %rd2742;
	xor.b64  	%rd2745, %rd2744, %rd2723;
	add.s64 	%rd2746, %rd2735, %rd2745;
	add.s64 	%rd2747, %rd2746, %rd2741;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1880,%dummy}, %rd2736;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1881}, %rd2736;
	}
	shf.r.wrap.b32 	%r1882, %r1881, %r1880, 14;
	shf.r.wrap.b32 	%r1883, %r1880, %r1881, 14;
	mov.b64 	%rd2748, {%r1883, %r1882};
	shf.r.wrap.b32 	%r1884, %r1881, %r1880, 18;
	shf.r.wrap.b32 	%r1885, %r1880, %r1881, 18;
	mov.b64 	%rd2749, {%r1885, %r1884};
	xor.b64  	%rd2750, %rd2749, %rd2748;
	shf.l.wrap.b32 	%r1886, %r1880, %r1881, 23;
	shf.l.wrap.b32 	%r1887, %r1881, %r1880, 23;
	mov.b64 	%rd2751, {%r1887, %r1886};
	xor.b64  	%rd2752, %rd2750, %rd2751;
	xor.b64  	%rd2753, %rd2712, %rd2688;
	and.b64  	%rd2754, %rd2736, %rd2753;
	xor.b64  	%rd2755, %rd2754, %rd2688;
	add.s64 	%rd2756, %rd2664, %rd2409;
	add.s64 	%rd2757, %rd2756, %rd96;
	add.s64 	%rd2758, %rd2757, %rd2755;
	add.s64 	%rd2759, %rd2758, %rd2752;
	add.s64 	%rd2760, %rd2759, %rd2675;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1888,%dummy}, %rd2747;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1889}, %rd2747;
	}
	shf.r.wrap.b32 	%r1890, %r1889, %r1888, 28;
	shf.r.wrap.b32 	%r1891, %r1888, %r1889, 28;
	mov.b64 	%rd2761, {%r1891, %r1890};
	shf.l.wrap.b32 	%r1892, %r1888, %r1889, 30;
	shf.l.wrap.b32 	%r1893, %r1889, %r1888, 30;
	mov.b64 	%rd2762, {%r1893, %r1892};
	xor.b64  	%rd2763, %rd2762, %rd2761;
	shf.l.wrap.b32 	%r1894, %r1888, %r1889, 25;
	shf.l.wrap.b32 	%r1895, %r1889, %r1888, 25;
	mov.b64 	%rd2764, {%r1895, %r1894};
	xor.b64  	%rd2765, %rd2763, %rd2764;
	xor.b64  	%rd2766, %rd2747, %rd2699;
	xor.b64  	%rd2767, %rd2747, %rd2723;
	and.b64  	%rd2768, %rd2767, %rd2766;
	xor.b64  	%rd2769, %rd2768, %rd2747;
	add.s64 	%rd2770, %rd2759, %rd2769;
	add.s64 	%rd2771, %rd2770, %rd2765;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1896,%dummy}, %rd2760;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1897}, %rd2760;
	}
	shf.r.wrap.b32 	%r1898, %r1897, %r1896, 14;
	shf.r.wrap.b32 	%r1899, %r1896, %r1897, 14;
	mov.b64 	%rd2772, {%r1899, %r1898};
	shf.r.wrap.b32 	%r1900, %r1897, %r1896, 18;
	shf.r.wrap.b32 	%r1901, %r1896, %r1897, 18;
	mov.b64 	%rd2773, {%r1901, %r1900};
	xor.b64  	%rd2774, %rd2773, %rd2772;
	shf.l.wrap.b32 	%r1902, %r1896, %r1897, 23;
	shf.l.wrap.b32 	%r1903, %r1897, %r1896, 23;
	mov.b64 	%rd2775, {%r1903, %r1902};
	xor.b64  	%rd2776, %rd2774, %rd2775;
	xor.b64  	%rd2777, %rd2736, %rd2712;
	and.b64  	%rd2778, %rd2760, %rd2777;
	xor.b64  	%rd2779, %rd2778, %rd2712;
	add.s64 	%rd2780, %rd2688, %rd2422;
	add.s64 	%rd2781, %rd2780, %rd97;
	add.s64 	%rd2782, %rd2781, %rd2779;
	add.s64 	%rd2783, %rd2782, %rd2776;
	add.s64 	%rd2784, %rd2783, %rd2699;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1904,%dummy}, %rd2771;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1905}, %rd2771;
	}
	shf.r.wrap.b32 	%r1906, %r1905, %r1904, 28;
	shf.r.wrap.b32 	%r1907, %r1904, %r1905, 28;
	mov.b64 	%rd2785, {%r1907, %r1906};
	shf.l.wrap.b32 	%r1908, %r1904, %r1905, 30;
	shf.l.wrap.b32 	%r1909, %r1905, %r1904, 30;
	mov.b64 	%rd2786, {%r1909, %r1908};
	xor.b64  	%rd2787, %rd2786, %rd2785;
	shf.l.wrap.b32 	%r1910, %r1904, %r1905, 25;
	shf.l.wrap.b32 	%r1911, %r1905, %r1904, 25;
	mov.b64 	%rd2788, {%r1911, %r1910};
	xor.b64  	%rd2789, %rd2787, %rd2788;
	xor.b64  	%rd2790, %rd2771, %rd2723;
	xor.b64  	%rd2791, %rd2771, %rd2747;
	and.b64  	%rd2792, %rd2791, %rd2790;
	xor.b64  	%rd2793, %rd2792, %rd2771;
	add.s64 	%rd2794, %rd2783, %rd2793;
	add.s64 	%rd2795, %rd2794, %rd2789;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1912,%dummy}, %rd2784;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1913}, %rd2784;
	}
	shf.r.wrap.b32 	%r1914, %r1913, %r1912, 14;
	shf.r.wrap.b32 	%r1915, %r1912, %r1913, 14;
	mov.b64 	%rd2796, {%r1915, %r1914};
	shf.r.wrap.b32 	%r1916, %r1913, %r1912, 18;
	shf.r.wrap.b32 	%r1917, %r1912, %r1913, 18;
	mov.b64 	%rd2797, {%r1917, %r1916};
	xor.b64  	%rd2798, %rd2797, %rd2796;
	shf.l.wrap.b32 	%r1918, %r1912, %r1913, 23;
	shf.l.wrap.b32 	%r1919, %r1913, %r1912, 23;
	mov.b64 	%rd2799, {%r1919, %r1918};
	xor.b64  	%rd2800, %rd2798, %rd2799;
	xor.b64  	%rd2801, %rd2760, %rd2736;
	and.b64  	%rd2802, %rd2784, %rd2801;
	xor.b64  	%rd2803, %rd2802, %rd2736;
	add.s64 	%rd2804, %rd2712, %rd2435;
	add.s64 	%rd2805, %rd2804, %rd98;
	add.s64 	%rd2806, %rd2805, %rd2803;
	add.s64 	%rd2807, %rd2806, %rd2800;
	add.s64 	%rd2808, %rd2807, %rd2723;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1920,%dummy}, %rd2795;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1921}, %rd2795;
	}
	shf.r.wrap.b32 	%r1922, %r1921, %r1920, 28;
	shf.r.wrap.b32 	%r1923, %r1920, %r1921, 28;
	mov.b64 	%rd2809, {%r1923, %r1922};
	shf.l.wrap.b32 	%r1924, %r1920, %r1921, 30;
	shf.l.wrap.b32 	%r1925, %r1921, %r1920, 30;
	mov.b64 	%rd2810, {%r1925, %r1924};
	xor.b64  	%rd2811, %rd2810, %rd2809;
	shf.l.wrap.b32 	%r1926, %r1920, %r1921, 25;
	shf.l.wrap.b32 	%r1927, %r1921, %r1920, 25;
	mov.b64 	%rd2812, {%r1927, %r1926};
	xor.b64  	%rd2813, %rd2811, %rd2812;
	xor.b64  	%rd2814, %rd2795, %rd2747;
	xor.b64  	%rd2815, %rd2795, %rd2771;
	and.b64  	%rd2816, %rd2815, %rd2814;
	xor.b64  	%rd2817, %rd2816, %rd2795;
	add.s64 	%rd2818, %rd2807, %rd2817;
	add.s64 	%rd2819, %rd2818, %rd2813;
	add.s64 	%rd2835, %rd2736, 6620516959819538809;
	add.s64 	%rd2836, %rd2760, 2270897969802886507;
	add.s64 	%rd2837, %rd2784, -7276294671716946913;
	add.s64 	%rd2838, %rd2808, 5840696475078001361;
	add.s64 	%rd2839, %rd2747, -6534734903238641935;
	add.s64 	%rd2840, %rd2771, 4354685564936845355;
	add.s64 	%rd2841, %rd2795, -4942790177534073029;
	add.s64 	%rd2842, %rd2819, 7640891576956012808;
	add.s32 	%r1928, %r1928, 1;
	setp.lt.u32	%p3, %r1928, %r4;
	@%p3 bra 	BB2_3;

BB2_4:
	add.s64 	%rd2826, %rd1, 56;
	add.s64 	%rd2825, %rd1, 48;
	add.s64 	%rd2824, %rd1, 40;
	add.s64 	%rd2823, %rd1, 32;
	add.s64 	%rd2822, %rd1, 24;
	add.s64 	%rd2821, %rd1, 16;
	add.s64 	%rd2820, %rd1, 8;
	st.global.u64 	[%rd1], %rd2842;
	st.global.u64 	[%rd2820], %rd2841;
	st.global.u64 	[%rd2821], %rd2840;
	st.global.u64 	[%rd2822], %rd2839;
	st.global.u64 	[%rd2823], %rd2838;
	st.global.u64 	[%rd2824], %rd2837;
	st.global.u64 	[%rd2825], %rd2836;
	st.global.u64 	[%rd2826], %rd2835;

BB2_5:
	ret;
}

	// .globl	m11300_comp
.entry m11300_comp(
	.param .u64 .ptr .global .align 4 m11300_comp_param_0,
	.param .u64 .ptr .global .align 4 m11300_comp_param_1,
	.param .u64 .ptr .global .align 4 m11300_comp_param_2,
	.param .u64 .ptr .global .align 4 m11300_comp_param_3,
	.param .u64 .ptr .global .align 8 m11300_comp_param_4,
	.param .u64 .ptr .global .align 1 m11300_comp_param_5,
	.param .u64 .ptr .global .align 4 m11300_comp_param_6,
	.param .u64 .ptr .global .align 4 m11300_comp_param_7,
	.param .u64 .ptr .global .align 4 m11300_comp_param_8,
	.param .u64 .ptr .global .align 4 m11300_comp_param_9,
	.param .u64 .ptr .global .align 4 m11300_comp_param_10,
	.param .u64 .ptr .global .align 4 m11300_comp_param_11,
	.param .u64 .ptr .global .align 4 m11300_comp_param_12,
	.param .u64 .ptr .global .align 4 m11300_comp_param_13,
	.param .u64 .ptr .global .align 4 m11300_comp_param_14,
	.param .u64 .ptr .global .align 4 m11300_comp_param_15,
	.param .u64 .ptr .global .align 4 m11300_comp_param_16,
	.param .u64 .ptr .global .align 4 m11300_comp_param_17,
	.param .u64 .ptr .global .align 4 m11300_comp_param_18,
	.param .u64 .ptr .global .align 4 m11300_comp_param_19,
	.param .u64 .ptr .global .align 4 m11300_comp_param_20,
	.param .u64 .ptr .global .align 4 m11300_comp_param_21,
	.param .u64 .ptr .global .align 4 m11300_comp_param_22,
	.param .u64 .ptr .global .align 4 m11300_comp_param_23,
	.param .u32 m11300_comp_param_24,
	.param .u32 m11300_comp_param_25,
	.param .u32 m11300_comp_param_26,
	.param .u32 m11300_comp_param_27,
	.param .u32 m11300_comp_param_28,
	.param .u32 m11300_comp_param_29,
	.param .u32 m11300_comp_param_30,
	.param .u32 m11300_comp_param_31,
	.param .u32 m11300_comp_param_32,
	.param .u32 m11300_comp_param_33,
	.param .u32 m11300_comp_param_34
)
{
	.local .align 16 .b8 	__local_depot3[240];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<25>;
	.reg .b32 	%r<1773>;
	.reg .b64 	%rd<1445>;
	// demoted variable
	.shared .align 4 .b8 m11300_comp$s_td0[1024];
	// demoted variable
	.shared .align 4 .b8 m11300_comp$s_td1[1024];
	// demoted variable
	.shared .align 4 .b8 m11300_comp$s_td2[1024];
	// demoted variable
	.shared .align 4 .b8 m11300_comp$s_td3[1024];
	// demoted variable
	.shared .align 4 .b8 m11300_comp$s_td4[1024];
	// demoted variable
	.shared .align 4 .b8 m11300_comp$s_te0[1024];
	// demoted variable
	.shared .align 4 .b8 m11300_comp$s_te1[1024];
	// demoted variable
	.shared .align 4 .b8 m11300_comp$s_te2[1024];
	// demoted variable
	.shared .align 4 .b8 m11300_comp$s_te3[1024];

	mov.u64 	%rd1444, __local_depot3;
	cvta.local.u64 	%SP, %rd1444;
	ld.param.u64 	%rd10, [m11300_comp_param_4];
	ld.param.u64 	%rd12, [m11300_comp_param_18];
	ld.param.u32 	%r97, [m11300_comp_param_32];
	ld.param.u32 	%r98, [m11300_comp_param_34];
	add.u64 	%rd14, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd14;
	mov.u32 	%r99, %ctaid.x;
	mov.u32 	%r1, %ntid.x;
	mov.b32	%r100, %envreg3;
	mad.lo.s32 	%r101, %r99, %r1, %r100;
	mov.u32 	%r1760, %tid.x;
	add.s32 	%r3, %r101, %r1760;
	setp.gt.u32	%p9, %r1760, 255;
	@%p9 bra 	BB3_2;

BB3_1:
	mul.wide.u32 	%rd15, %r1760, 4;
	mov.u64 	%rd16, td0;
	add.s64 	%rd17, %rd16, %rd15;
	ld.const.u32 	%r102, [%rd17];
	mov.u64 	%rd18, m11300_comp$s_td0;
	add.s64 	%rd19, %rd18, %rd15;
	st.shared.u32 	[%rd19], %r102;
	mov.u64 	%rd20, td1;
	add.s64 	%rd21, %rd20, %rd15;
	ld.const.u32 	%r103, [%rd21];
	mov.u64 	%rd22, m11300_comp$s_td1;
	add.s64 	%rd23, %rd22, %rd15;
	st.shared.u32 	[%rd23], %r103;
	mov.u64 	%rd24, td2;
	add.s64 	%rd25, %rd24, %rd15;
	ld.const.u32 	%r104, [%rd25];
	mov.u64 	%rd26, m11300_comp$s_td2;
	add.s64 	%rd27, %rd26, %rd15;
	st.shared.u32 	[%rd27], %r104;
	mov.u64 	%rd28, td3;
	add.s64 	%rd29, %rd28, %rd15;
	ld.const.u32 	%r105, [%rd29];
	mov.u64 	%rd30, m11300_comp$s_td3;
	add.s64 	%rd31, %rd30, %rd15;
	st.shared.u32 	[%rd31], %r105;
	mov.u64 	%rd32, td4;
	add.s64 	%rd33, %rd32, %rd15;
	ld.const.u32 	%r106, [%rd33];
	mov.u64 	%rd34, m11300_comp$s_td4;
	add.s64 	%rd35, %rd34, %rd15;
	st.shared.u32 	[%rd35], %r106;
	mov.u64 	%rd36, te0;
	add.s64 	%rd37, %rd36, %rd15;
	ld.const.u32 	%r107, [%rd37];
	mov.u64 	%rd38, m11300_comp$s_te0;
	add.s64 	%rd39, %rd38, %rd15;
	st.shared.u32 	[%rd39], %r107;
	mov.u64 	%rd40, te1;
	add.s64 	%rd41, %rd40, %rd15;
	ld.const.u32 	%r108, [%rd41];
	mov.u64 	%rd42, m11300_comp$s_te1;
	add.s64 	%rd43, %rd42, %rd15;
	st.shared.u32 	[%rd43], %r108;
	mov.u64 	%rd44, te2;
	add.s64 	%rd45, %rd44, %rd15;
	ld.const.u32 	%r109, [%rd45];
	mov.u64 	%rd46, m11300_comp$s_te2;
	add.s64 	%rd47, %rd46, %rd15;
	st.shared.u32 	[%rd47], %r109;
	mov.u64 	%rd48, te3;
	add.s64 	%rd49, %rd48, %rd15;
	ld.const.u32 	%r110, [%rd49];
	mov.u64 	%rd50, m11300_comp$s_te3;
	add.s64 	%rd51, %rd50, %rd15;
	st.shared.u32 	[%rd51], %r110;
	add.s32 	%r1760, %r1760, %r1;
	setp.lt.u32	%p10, %r1760, 256;
	@%p10 bra 	BB3_1;

BB3_2:
	bar.sync 	0;
	setp.ge.u32	%p11, %r3, %r98;
	@%p11 bra 	BB3_17;

	mul.wide.u32 	%rd52, %r3, 64;
	add.s64 	%rd53, %rd10, %rd52;
	ld.global.u64 	%rd54, [%rd53];
	shr.u64 	%rd55, %rd54, 32;
	cvt.u32.u64	%r1761, %rd55;
	ld.global.u64 	%rd56, [%rd53+8];
	shr.u64 	%rd57, %rd56, 32;
	ld.global.u64 	%rd58, [%rd53+16];
	shr.u64 	%rd59, %rd58, 32;
	ld.global.u64 	%rd60, [%rd53+24];
	shr.u64 	%rd61, %rd60, 32;
	ld.global.u64 	%rd62, [%rd53+32];
	shr.u64 	%rd63, %rd62, 32;
	cvt.u32.u64	%r1772, %rd63;
	ld.global.u64 	%rd64, [%rd53+40];
	cvt.u32.u64	%r114, %rd56;
	cvt.u32.u64	%r115, %rd54;
	cvt.u32.u64	%r116, %rd57;
	add.s64 	%rd2, %rd1, 4;
	add.s64 	%rd3, %rd1, 8;
	add.s64 	%rd4, %rd1, 12;
	st.local.v4.u32 	[%rd1], {%r1761, %r115, %r116, %r114};
	add.s64 	%rd5, %rd1, 16;
	cvt.u32.u64	%r117, %rd60;
	cvt.u32.u64	%r118, %rd58;
	cvt.u32.u64	%r119, %rd61;
	cvt.u32.u64	%r120, %rd59;
	add.s64 	%rd6, %rd1, 20;
	add.s64 	%rd7, %rd1, 24;
	add.s64 	%rd8, %rd1, 28;
	st.local.v4.u32 	[%rd1+16], {%r120, %r118, %r119, %r117};
	mov.u32 	%r113, 0;
	mov.u32 	%r1762, 1;
	mov.u32 	%r1763, %r113;
	mov.u32 	%r1765, %r113;
	bra.uni 	BB3_4;

BB3_8:
	mul.wide.s32 	%rd128, %r1766, 4;
	add.s64 	%rd129, %rd1, %rd128;
	ld.local.u32 	%r1761, [%rd129];
	mov.u32 	%r1763, %r1766;

BB3_4:
	add.s32 	%r123, %r1763, 7;
	mul.wide.s32 	%rd66, %r123, 4;
	add.s64 	%rd67, %rd1, %rd66;
	ld.local.u32 	%r15, [%rd67];
	bfe.u32 	%r124, %r15, 16, 8;
	mul.wide.u32 	%rd68, %r124, 4;
	mov.u64 	%rd69, m11300_comp$s_te2;
	add.s64 	%rd70, %rd69, %rd68;
	ld.shared.u32 	%r125, [%rd70];
	and.b32  	%r126, %r125, -16777216;
	xor.b32  	%r127, %r126, %r1761;
	shr.u32 	%r128, %r15, 8;
	mul.wide.u32 	%rd71, %r128, 4;
	and.b64  	%rd72, %rd71, 1020;
	mov.u64 	%rd73, m11300_comp$s_te3;
	add.s64 	%rd74, %rd73, %rd72;
	ld.shared.u32 	%r129, [%rd74];
	and.b32  	%r130, %r129, 16711680;
	xor.b32  	%r131, %r127, %r130;
	mul.wide.u32 	%rd75, %r15, 4;
	and.b64  	%rd76, %rd75, 1020;
	mov.u64 	%rd77, m11300_comp$s_te0;
	add.s64 	%rd78, %rd77, %rd76;
	ld.shared.u32 	%r132, [%rd78];
	and.b32  	%r133, %r132, 65280;
	xor.b32  	%r134, %r131, %r133;
	shr.u32 	%r135, %r15, 24;
	mul.wide.u32 	%rd79, %r135, 4;
	mov.u64 	%rd80, m11300_comp$s_te1;
	add.s64 	%rd81, %rd80, %rd79;
	ld.shared.u8 	%r136, [%rd81];
	xor.b32  	%r137, %r134, %r136;
	mul.wide.s32 	%rd82, %r1765, 4;
	mov.u64 	%rd83, rcon;
	add.s64 	%rd84, %rd83, %rd82;
	ld.const.u32 	%r138, [%rd84];
	xor.b32  	%r139, %r137, %r138;
	add.s32 	%r1766, %r1763, 8;
	mul.wide.s32 	%rd85, %r1766, 4;
	add.s64 	%rd86, %rd1, %rd85;
	st.local.u32 	[%rd86], %r139;
	add.s32 	%r140, %r1763, 1;
	mul.wide.s32 	%rd87, %r140, 4;
	add.s64 	%rd88, %rd1, %rd87;
	ld.local.u32 	%r141, [%rd88];
	xor.b32  	%r142, %r139, %r141;
	add.s32 	%r143, %r1763, 9;
	mul.wide.s32 	%rd89, %r143, 4;
	add.s64 	%rd90, %rd1, %rd89;
	st.local.u32 	[%rd90], %r142;
	add.s32 	%r144, %r1763, 2;
	mul.wide.s32 	%rd91, %r144, 4;
	add.s64 	%rd92, %rd1, %rd91;
	ld.local.u32 	%r145, [%rd92];
	xor.b32  	%r146, %r142, %r145;
	add.s32 	%r147, %r1763, 10;
	mul.wide.s32 	%rd93, %r147, 4;
	add.s64 	%rd94, %rd1, %rd93;
	st.local.u32 	[%rd94], %r146;
	add.s32 	%r148, %r1763, 3;
	mul.wide.s32 	%rd95, %r148, 4;
	add.s64 	%rd96, %rd1, %rd95;
	ld.local.u32 	%r149, [%rd96];
	xor.b32  	%r17, %r146, %r149;
	add.s32 	%r150, %r1763, 11;
	mul.wide.s32 	%rd97, %r150, 4;
	add.s64 	%rd98, %rd1, %rd97;
	st.local.u32 	[%rd98], %r17;
	add.s32 	%r1765, %r1765, 1;
	setp.eq.s32	%p12, %r1765, 7;
	mov.u32 	%r121, 7;
	@%p12 bra 	BB3_5;
	bra.uni 	BB3_6;

BB3_5:
	mov.u32 	%r1765, %r121;
	mov.u32 	%r1766, %r1763;
	mov.u32 	%r1762, %r113;
	bra.uni 	BB3_7;

BB3_6:
	add.s32 	%r151, %r1763, 4;
	mul.wide.s32 	%rd99, %r151, 4;
	add.s64 	%rd100, %rd1, %rd99;
	shr.u32 	%r152, %r17, 24;
	mul.wide.u32 	%rd101, %r152, 4;
	add.s64 	%rd103, %rd69, %rd101;
	ld.shared.u32 	%r153, [%rd103];
	and.b32  	%r154, %r153, -16777216;
	ld.local.u32 	%r155, [%rd100];
	xor.b32  	%r156, %r154, %r155;
	shr.u32 	%r157, %r17, 16;
	mul.wide.u32 	%rd104, %r157, 4;
	and.b64  	%rd105, %rd104, 1020;
	add.s64 	%rd107, %rd73, %rd105;
	ld.shared.u32 	%r158, [%rd107];
	and.b32  	%r159, %r158, 16711680;
	xor.b32  	%r160, %r156, %r159;
	shr.u32 	%r161, %r17, 8;
	mul.wide.u32 	%rd108, %r161, 4;
	and.b64  	%rd109, %rd108, 1020;
	add.s64 	%rd111, %rd77, %rd109;
	ld.shared.u32 	%r162, [%rd111];
	and.b32  	%r163, %r162, 65280;
	xor.b32  	%r164, %r160, %r163;
	mul.wide.u32 	%rd112, %r17, 4;
	and.b64  	%rd113, %rd112, 1020;
	add.s64 	%rd115, %rd80, %rd113;
	ld.shared.u8 	%r165, [%rd115];
	xor.b32  	%r166, %r164, %r165;
	add.s32 	%r167, %r1763, 12;
	mul.wide.s32 	%rd116, %r167, 4;
	add.s64 	%rd117, %rd1, %rd116;
	st.local.u32 	[%rd117], %r166;
	add.s32 	%r168, %r1763, 5;
	mul.wide.s32 	%rd118, %r168, 4;
	add.s64 	%rd119, %rd1, %rd118;
	ld.local.u32 	%r169, [%rd119];
	xor.b32  	%r170, %r166, %r169;
	add.s32 	%r171, %r1763, 13;
	mul.wide.s32 	%rd120, %r171, 4;
	add.s64 	%rd121, %rd1, %rd120;
	st.local.u32 	[%rd121], %r170;
	add.s32 	%r172, %r1763, 6;
	mul.wide.s32 	%rd122, %r172, 4;
	add.s64 	%rd123, %rd1, %rd122;
	ld.local.u32 	%r173, [%rd123];
	xor.b32  	%r174, %r170, %r173;
	add.s32 	%r175, %r1763, 14;
	mul.wide.s32 	%rd124, %r175, 4;
	add.s64 	%rd125, %rd1, %rd124;
	st.local.u32 	[%rd125], %r174;
	xor.b32  	%r176, %r174, %r15;
	add.s32 	%r177, %r1763, 15;
	mul.wide.s32 	%rd126, %r177, 4;
	add.s64 	%rd127, %rd1, %rd126;
	st.local.u32 	[%rd127], %r176;

BB3_7:
	setp.eq.s32	%p13, %r1762, 0;
	@%p13 bra 	BB3_9;
	bra.uni 	BB3_8;

BB3_9:
	ld.local.u32 	%r23, [%rd1];
	ld.local.v4.u32 	{%r179, %r180, %r181, %r182}, [%rd1+224];
	ld.local.v4.u32 	{%r183, %r184, %r185, %r186}, [%rd1+208];
	ld.local.v4.u32 	{%r187, %r188, %r189, %r190}, [%rd1+32];
	ld.local.v4.u32 	{%r191, %r192, %r193, %r194}, [%rd1+192];
	ld.local.v4.u32 	{%r195, %r196, %r197, %r198}, [%rd1+48];
	ld.local.v4.u32 	{%r199, %r200, %r201, %r202}, [%rd1+176];
	ld.local.v4.u32 	{%r203, %r204, %r205, %r206}, [%rd1+64];
	ld.local.v4.u32 	{%r207, %r208, %r209, %r210}, [%rd1+160];
	ld.local.v4.u32 	{%r211, %r212, %r213, %r214}, [%rd1+80];
	ld.local.v4.u32 	{%r215, %r216, %r217, %r218}, [%rd1+144];
	ld.local.v4.u32 	{%r219, %r220, %r221, %r222}, [%rd1+96];
	ld.local.v4.u32 	{%r223, %r224, %r225, %r226}, [%rd1+128];
	st.local.u32 	[%rd1], %r179;
	st.local.u32 	[%rd1+224], %r23;
	ld.local.u32 	%r25, [%rd2];
	st.local.u32 	[%rd2], %r180;
	st.local.u32 	[%rd1+228], %r25;
	ld.local.u32 	%r27, [%rd3];
	st.local.u32 	[%rd3], %r181;
	st.local.u32 	[%rd1+232], %r27;
	ld.local.u32 	%r29, [%rd4];
	st.local.u32 	[%rd4], %r182;
	st.local.u32 	[%rd1+236], %r29;
	ld.local.u32 	%r227, [%rd5];
	ld.local.u32 	%r228, [%rd6];
	ld.local.u32 	%r229, [%rd7];
	ld.local.u32 	%r230, [%rd8];
	shr.u32 	%r275, %r183, 24;
	mul.wide.u32 	%rd130, %r275, 4;
	add.s64 	%rd132, %rd80, %rd130;
	ld.shared.u8 	%r276, [%rd132];
	mul.wide.u32 	%rd133, %r276, 4;
	mov.u64 	%rd134, m11300_comp$s_td0;
	add.s64 	%rd135, %rd134, %rd133;
	bfe.u32 	%r277, %r183, 16, 8;
	mul.wide.u32 	%rd136, %r277, 4;
	add.s64 	%rd137, %rd80, %rd136;
	ld.shared.u8 	%r278, [%rd137];
	mul.wide.u32 	%rd138, %r278, 4;
	mov.u64 	%rd139, m11300_comp$s_td1;
	add.s64 	%rd140, %rd139, %rd138;
	ld.shared.u32 	%r279, [%rd140];
	ld.shared.u32 	%r280, [%rd135];
	xor.b32  	%r281, %r279, %r280;
	bfe.u32 	%r282, %r183, 8, 8;
	mul.wide.u32 	%rd141, %r282, 4;
	add.s64 	%rd142, %rd80, %rd141;
	ld.shared.u8 	%r283, [%rd142];
	mul.wide.u32 	%rd143, %r283, 4;
	mov.u64 	%rd144, m11300_comp$s_td2;
	add.s64 	%rd145, %rd144, %rd143;
	ld.shared.u32 	%r284, [%rd145];
	xor.b32  	%r285, %r281, %r284;
	and.b32  	%r286, %r183, 255;
	mul.wide.u32 	%rd146, %r286, 4;
	add.s64 	%rd147, %rd80, %rd146;
	ld.shared.u8 	%r287, [%rd147];
	mul.wide.u32 	%rd148, %r287, 4;
	mov.u64 	%rd149, m11300_comp$s_td3;
	add.s64 	%rd150, %rd149, %rd148;
	ld.shared.u32 	%r288, [%rd150];
	xor.b32  	%r31, %r285, %r288;
	st.local.u32 	[%rd5], %r31;
	shr.u32 	%r289, %r184, 24;
	mul.wide.u32 	%rd151, %r289, 4;
	add.s64 	%rd152, %rd80, %rd151;
	ld.shared.u8 	%r290, [%rd152];
	mul.wide.u32 	%rd153, %r290, 4;
	add.s64 	%rd154, %rd134, %rd153;
	bfe.u32 	%r291, %r184, 16, 8;
	mul.wide.u32 	%rd155, %r291, 4;
	add.s64 	%rd156, %rd80, %rd155;
	ld.shared.u8 	%r292, [%rd156];
	mul.wide.u32 	%rd157, %r292, 4;
	add.s64 	%rd158, %rd139, %rd157;
	ld.shared.u32 	%r293, [%rd158];
	ld.shared.u32 	%r294, [%rd154];
	xor.b32  	%r295, %r293, %r294;
	bfe.u32 	%r296, %r184, 8, 8;
	mul.wide.u32 	%rd159, %r296, 4;
	add.s64 	%rd160, %rd80, %rd159;
	ld.shared.u8 	%r297, [%rd160];
	mul.wide.u32 	%rd161, %r297, 4;
	add.s64 	%rd162, %rd144, %rd161;
	ld.shared.u32 	%r298, [%rd162];
	xor.b32  	%r299, %r295, %r298;
	and.b32  	%r300, %r184, 255;
	mul.wide.u32 	%rd163, %r300, 4;
	add.s64 	%rd164, %rd80, %rd163;
	ld.shared.u8 	%r301, [%rd164];
	mul.wide.u32 	%rd165, %r301, 4;
	add.s64 	%rd166, %rd149, %rd165;
	ld.shared.u32 	%r302, [%rd166];
	xor.b32  	%r32, %r299, %r302;
	st.local.u32 	[%rd6], %r32;
	shr.u32 	%r303, %r185, 24;
	mul.wide.u32 	%rd167, %r303, 4;
	add.s64 	%rd168, %rd80, %rd167;
	ld.shared.u8 	%r304, [%rd168];
	mul.wide.u32 	%rd169, %r304, 4;
	add.s64 	%rd170, %rd134, %rd169;
	bfe.u32 	%r305, %r185, 16, 8;
	mul.wide.u32 	%rd171, %r305, 4;
	add.s64 	%rd172, %rd80, %rd171;
	ld.shared.u8 	%r306, [%rd172];
	mul.wide.u32 	%rd173, %r306, 4;
	add.s64 	%rd174, %rd139, %rd173;
	ld.shared.u32 	%r307, [%rd174];
	ld.shared.u32 	%r308, [%rd170];
	xor.b32  	%r309, %r307, %r308;
	bfe.u32 	%r310, %r185, 8, 8;
	mul.wide.u32 	%rd175, %r310, 4;
	add.s64 	%rd176, %rd80, %rd175;
	ld.shared.u8 	%r311, [%rd176];
	mul.wide.u32 	%rd177, %r311, 4;
	add.s64 	%rd178, %rd144, %rd177;
	ld.shared.u32 	%r312, [%rd178];
	xor.b32  	%r313, %r309, %r312;
	and.b32  	%r314, %r185, 255;
	mul.wide.u32 	%rd179, %r314, 4;
	add.s64 	%rd180, %rd80, %rd179;
	ld.shared.u8 	%r315, [%rd180];
	mul.wide.u32 	%rd181, %r315, 4;
	add.s64 	%rd182, %rd149, %rd181;
	ld.shared.u32 	%r316, [%rd182];
	xor.b32  	%r33, %r313, %r316;
	st.local.u32 	[%rd7], %r33;
	shr.u32 	%r317, %r186, 24;
	mul.wide.u32 	%rd183, %r317, 4;
	add.s64 	%rd184, %rd80, %rd183;
	ld.shared.u8 	%r318, [%rd184];
	mul.wide.u32 	%rd185, %r318, 4;
	add.s64 	%rd186, %rd134, %rd185;
	bfe.u32 	%r319, %r186, 16, 8;
	mul.wide.u32 	%rd187, %r319, 4;
	add.s64 	%rd188, %rd80, %rd187;
	ld.shared.u8 	%r320, [%rd188];
	mul.wide.u32 	%rd189, %r320, 4;
	add.s64 	%rd190, %rd139, %rd189;
	ld.shared.u32 	%r321, [%rd190];
	ld.shared.u32 	%r322, [%rd186];
	xor.b32  	%r323, %r321, %r322;
	bfe.u32 	%r324, %r186, 8, 8;
	mul.wide.u32 	%rd191, %r324, 4;
	add.s64 	%rd192, %rd80, %rd191;
	ld.shared.u8 	%r325, [%rd192];
	mul.wide.u32 	%rd193, %r325, 4;
	add.s64 	%rd194, %rd144, %rd193;
	ld.shared.u32 	%r326, [%rd194];
	xor.b32  	%r327, %r323, %r326;
	and.b32  	%r328, %r186, 255;
	mul.wide.u32 	%rd195, %r328, 4;
	add.s64 	%rd196, %rd80, %rd195;
	ld.shared.u8 	%r329, [%rd196];
	mul.wide.u32 	%rd197, %r329, 4;
	add.s64 	%rd198, %rd149, %rd197;
	ld.shared.u32 	%r330, [%rd198];
	xor.b32  	%r34, %r327, %r330;
	st.local.u32 	[%rd8], %r34;
	shr.u32 	%r331, %r191, 24;
	mul.wide.u32 	%rd199, %r331, 4;
	add.s64 	%rd200, %rd80, %rd199;
	ld.shared.u8 	%r332, [%rd200];
	mul.wide.u32 	%rd201, %r332, 4;
	add.s64 	%rd202, %rd134, %rd201;
	bfe.u32 	%r333, %r191, 16, 8;
	mul.wide.u32 	%rd203, %r333, 4;
	add.s64 	%rd204, %rd80, %rd203;
	ld.shared.u8 	%r334, [%rd204];
	mul.wide.u32 	%rd205, %r334, 4;
	add.s64 	%rd206, %rd139, %rd205;
	ld.shared.u32 	%r335, [%rd206];
	ld.shared.u32 	%r336, [%rd202];
	xor.b32  	%r337, %r335, %r336;
	bfe.u32 	%r338, %r191, 8, 8;
	mul.wide.u32 	%rd207, %r338, 4;
	add.s64 	%rd208, %rd80, %rd207;
	ld.shared.u8 	%r339, [%rd208];
	mul.wide.u32 	%rd209, %r339, 4;
	add.s64 	%rd210, %rd144, %rd209;
	ld.shared.u32 	%r340, [%rd210];
	xor.b32  	%r341, %r337, %r340;
	and.b32  	%r342, %r191, 255;
	mul.wide.u32 	%rd211, %r342, 4;
	add.s64 	%rd212, %rd80, %rd211;
	ld.shared.u8 	%r343, [%rd212];
	mul.wide.u32 	%rd213, %r343, 4;
	add.s64 	%rd214, %rd149, %rd213;
	ld.shared.u32 	%r344, [%rd214];
	xor.b32  	%r35, %r341, %r344;
	st.local.u32 	[%rd1+32], %r35;
	shr.u32 	%r345, %r192, 24;
	mul.wide.u32 	%rd215, %r345, 4;
	add.s64 	%rd216, %rd80, %rd215;
	ld.shared.u8 	%r346, [%rd216];
	mul.wide.u32 	%rd217, %r346, 4;
	add.s64 	%rd218, %rd134, %rd217;
	bfe.u32 	%r347, %r192, 16, 8;
	mul.wide.u32 	%rd219, %r347, 4;
	add.s64 	%rd220, %rd80, %rd219;
	ld.shared.u8 	%r348, [%rd220];
	mul.wide.u32 	%rd221, %r348, 4;
	add.s64 	%rd222, %rd139, %rd221;
	ld.shared.u32 	%r349, [%rd222];
	ld.shared.u32 	%r350, [%rd218];
	xor.b32  	%r351, %r349, %r350;
	bfe.u32 	%r352, %r192, 8, 8;
	mul.wide.u32 	%rd223, %r352, 4;
	add.s64 	%rd224, %rd80, %rd223;
	ld.shared.u8 	%r353, [%rd224];
	mul.wide.u32 	%rd225, %r353, 4;
	add.s64 	%rd226, %rd144, %rd225;
	ld.shared.u32 	%r354, [%rd226];
	xor.b32  	%r355, %r351, %r354;
	and.b32  	%r356, %r192, 255;
	mul.wide.u32 	%rd227, %r356, 4;
	add.s64 	%rd228, %rd80, %rd227;
	ld.shared.u8 	%r357, [%rd228];
	mul.wide.u32 	%rd229, %r357, 4;
	add.s64 	%rd230, %rd149, %rd229;
	ld.shared.u32 	%r358, [%rd230];
	xor.b32  	%r36, %r355, %r358;
	st.local.u32 	[%rd1+36], %r36;
	shr.u32 	%r359, %r193, 24;
	mul.wide.u32 	%rd231, %r359, 4;
	add.s64 	%rd232, %rd80, %rd231;
	ld.shared.u8 	%r360, [%rd232];
	mul.wide.u32 	%rd233, %r360, 4;
	add.s64 	%rd234, %rd134, %rd233;
	bfe.u32 	%r361, %r193, 16, 8;
	mul.wide.u32 	%rd235, %r361, 4;
	add.s64 	%rd236, %rd80, %rd235;
	ld.shared.u8 	%r362, [%rd236];
	mul.wide.u32 	%rd237, %r362, 4;
	add.s64 	%rd238, %rd139, %rd237;
	ld.shared.u32 	%r363, [%rd238];
	ld.shared.u32 	%r364, [%rd234];
	xor.b32  	%r365, %r363, %r364;
	bfe.u32 	%r366, %r193, 8, 8;
	mul.wide.u32 	%rd239, %r366, 4;
	add.s64 	%rd240, %rd80, %rd239;
	ld.shared.u8 	%r367, [%rd240];
	mul.wide.u32 	%rd241, %r367, 4;
	add.s64 	%rd242, %rd144, %rd241;
	ld.shared.u32 	%r368, [%rd242];
	xor.b32  	%r369, %r365, %r368;
	and.b32  	%r370, %r193, 255;
	mul.wide.u32 	%rd243, %r370, 4;
	add.s64 	%rd244, %rd80, %rd243;
	ld.shared.u8 	%r371, [%rd244];
	mul.wide.u32 	%rd245, %r371, 4;
	add.s64 	%rd246, %rd149, %rd245;
	ld.shared.u32 	%r372, [%rd246];
	xor.b32  	%r37, %r369, %r372;
	st.local.u32 	[%rd1+40], %r37;
	shr.u32 	%r373, %r194, 24;
	mul.wide.u32 	%rd247, %r373, 4;
	add.s64 	%rd248, %rd80, %rd247;
	ld.shared.u8 	%r374, [%rd248];
	mul.wide.u32 	%rd249, %r374, 4;
	add.s64 	%rd250, %rd134, %rd249;
	bfe.u32 	%r375, %r194, 16, 8;
	mul.wide.u32 	%rd251, %r375, 4;
	add.s64 	%rd252, %rd80, %rd251;
	ld.shared.u8 	%r376, [%rd252];
	mul.wide.u32 	%rd253, %r376, 4;
	add.s64 	%rd254, %rd139, %rd253;
	ld.shared.u32 	%r377, [%rd254];
	ld.shared.u32 	%r378, [%rd250];
	xor.b32  	%r379, %r377, %r378;
	bfe.u32 	%r380, %r194, 8, 8;
	mul.wide.u32 	%rd255, %r380, 4;
	add.s64 	%rd256, %rd80, %rd255;
	ld.shared.u8 	%r381, [%rd256];
	mul.wide.u32 	%rd257, %r381, 4;
	add.s64 	%rd258, %rd144, %rd257;
	ld.shared.u32 	%r382, [%rd258];
	xor.b32  	%r383, %r379, %r382;
	and.b32  	%r384, %r194, 255;
	mul.wide.u32 	%rd259, %r384, 4;
	add.s64 	%rd260, %rd80, %rd259;
	ld.shared.u8 	%r385, [%rd260];
	mul.wide.u32 	%rd261, %r385, 4;
	add.s64 	%rd262, %rd149, %rd261;
	ld.shared.u32 	%r386, [%rd262];
	xor.b32  	%r38, %r383, %r386;
	st.local.u32 	[%rd1+44], %r38;
	shr.u32 	%r387, %r199, 24;
	mul.wide.u32 	%rd263, %r387, 4;
	add.s64 	%rd264, %rd80, %rd263;
	ld.shared.u8 	%r388, [%rd264];
	mul.wide.u32 	%rd265, %r388, 4;
	add.s64 	%rd266, %rd134, %rd265;
	bfe.u32 	%r389, %r199, 16, 8;
	mul.wide.u32 	%rd267, %r389, 4;
	add.s64 	%rd268, %rd80, %rd267;
	ld.shared.u8 	%r390, [%rd268];
	mul.wide.u32 	%rd269, %r390, 4;
	add.s64 	%rd270, %rd139, %rd269;
	ld.shared.u32 	%r391, [%rd270];
	ld.shared.u32 	%r392, [%rd266];
	xor.b32  	%r393, %r391, %r392;
	bfe.u32 	%r394, %r199, 8, 8;
	mul.wide.u32 	%rd271, %r394, 4;
	add.s64 	%rd272, %rd80, %rd271;
	ld.shared.u8 	%r395, [%rd272];
	mul.wide.u32 	%rd273, %r395, 4;
	add.s64 	%rd274, %rd144, %rd273;
	ld.shared.u32 	%r396, [%rd274];
	xor.b32  	%r397, %r393, %r396;
	and.b32  	%r398, %r199, 255;
	mul.wide.u32 	%rd275, %r398, 4;
	add.s64 	%rd276, %rd80, %rd275;
	ld.shared.u8 	%r399, [%rd276];
	mul.wide.u32 	%rd277, %r399, 4;
	add.s64 	%rd278, %rd149, %rd277;
	ld.shared.u32 	%r400, [%rd278];
	xor.b32  	%r39, %r397, %r400;
	st.local.u32 	[%rd1+48], %r39;
	shr.u32 	%r401, %r200, 24;
	mul.wide.u32 	%rd279, %r401, 4;
	add.s64 	%rd280, %rd80, %rd279;
	ld.shared.u8 	%r402, [%rd280];
	mul.wide.u32 	%rd281, %r402, 4;
	add.s64 	%rd282, %rd134, %rd281;
	bfe.u32 	%r403, %r200, 16, 8;
	mul.wide.u32 	%rd283, %r403, 4;
	add.s64 	%rd284, %rd80, %rd283;
	ld.shared.u8 	%r404, [%rd284];
	mul.wide.u32 	%rd285, %r404, 4;
	add.s64 	%rd286, %rd139, %rd285;
	ld.shared.u32 	%r405, [%rd286];
	ld.shared.u32 	%r406, [%rd282];
	xor.b32  	%r407, %r405, %r406;
	bfe.u32 	%r408, %r200, 8, 8;
	mul.wide.u32 	%rd287, %r408, 4;
	add.s64 	%rd288, %rd80, %rd287;
	ld.shared.u8 	%r409, [%rd288];
	mul.wide.u32 	%rd289, %r409, 4;
	add.s64 	%rd290, %rd144, %rd289;
	ld.shared.u32 	%r410, [%rd290];
	xor.b32  	%r411, %r407, %r410;
	and.b32  	%r412, %r200, 255;
	mul.wide.u32 	%rd291, %r412, 4;
	add.s64 	%rd292, %rd80, %rd291;
	ld.shared.u8 	%r413, [%rd292];
	mul.wide.u32 	%rd293, %r413, 4;
	add.s64 	%rd294, %rd149, %rd293;
	ld.shared.u32 	%r414, [%rd294];
	xor.b32  	%r40, %r411, %r414;
	st.local.u32 	[%rd1+52], %r40;
	shr.u32 	%r415, %r201, 24;
	mul.wide.u32 	%rd295, %r415, 4;
	add.s64 	%rd296, %rd80, %rd295;
	ld.shared.u8 	%r416, [%rd296];
	mul.wide.u32 	%rd297, %r416, 4;
	add.s64 	%rd298, %rd134, %rd297;
	bfe.u32 	%r417, %r201, 16, 8;
	mul.wide.u32 	%rd299, %r417, 4;
	add.s64 	%rd300, %rd80, %rd299;
	ld.shared.u8 	%r418, [%rd300];
	mul.wide.u32 	%rd301, %r418, 4;
	add.s64 	%rd302, %rd139, %rd301;
	ld.shared.u32 	%r419, [%rd302];
	ld.shared.u32 	%r420, [%rd298];
	xor.b32  	%r421, %r419, %r420;
	bfe.u32 	%r422, %r201, 8, 8;
	mul.wide.u32 	%rd303, %r422, 4;
	add.s64 	%rd304, %rd80, %rd303;
	ld.shared.u8 	%r423, [%rd304];
	mul.wide.u32 	%rd305, %r423, 4;
	add.s64 	%rd306, %rd144, %rd305;
	ld.shared.u32 	%r424, [%rd306];
	xor.b32  	%r425, %r421, %r424;
	and.b32  	%r426, %r201, 255;
	mul.wide.u32 	%rd307, %r426, 4;
	add.s64 	%rd308, %rd80, %rd307;
	ld.shared.u8 	%r427, [%rd308];
	mul.wide.u32 	%rd309, %r427, 4;
	add.s64 	%rd310, %rd149, %rd309;
	ld.shared.u32 	%r428, [%rd310];
	xor.b32  	%r41, %r425, %r428;
	st.local.u32 	[%rd1+56], %r41;
	shr.u32 	%r429, %r202, 24;
	mul.wide.u32 	%rd311, %r429, 4;
	add.s64 	%rd312, %rd80, %rd311;
	ld.shared.u8 	%r430, [%rd312];
	mul.wide.u32 	%rd313, %r430, 4;
	add.s64 	%rd314, %rd134, %rd313;
	bfe.u32 	%r431, %r202, 16, 8;
	mul.wide.u32 	%rd315, %r431, 4;
	add.s64 	%rd316, %rd80, %rd315;
	ld.shared.u8 	%r432, [%rd316];
	mul.wide.u32 	%rd317, %r432, 4;
	add.s64 	%rd318, %rd139, %rd317;
	ld.shared.u32 	%r433, [%rd318];
	ld.shared.u32 	%r434, [%rd314];
	xor.b32  	%r435, %r433, %r434;
	bfe.u32 	%r436, %r202, 8, 8;
	mul.wide.u32 	%rd319, %r436, 4;
	add.s64 	%rd320, %rd80, %rd319;
	ld.shared.u8 	%r437, [%rd320];
	mul.wide.u32 	%rd321, %r437, 4;
	add.s64 	%rd322, %rd144, %rd321;
	ld.shared.u32 	%r438, [%rd322];
	xor.b32  	%r439, %r435, %r438;
	and.b32  	%r440, %r202, 255;
	mul.wide.u32 	%rd323, %r440, 4;
	add.s64 	%rd324, %rd80, %rd323;
	ld.shared.u8 	%r441, [%rd324];
	mul.wide.u32 	%rd325, %r441, 4;
	add.s64 	%rd326, %rd149, %rd325;
	ld.shared.u32 	%r442, [%rd326];
	xor.b32  	%r42, %r439, %r442;
	st.local.u32 	[%rd1+60], %r42;
	shr.u32 	%r443, %r207, 24;
	mul.wide.u32 	%rd327, %r443, 4;
	add.s64 	%rd328, %rd80, %rd327;
	ld.shared.u8 	%r444, [%rd328];
	mul.wide.u32 	%rd329, %r444, 4;
	add.s64 	%rd330, %rd134, %rd329;
	bfe.u32 	%r445, %r207, 16, 8;
	mul.wide.u32 	%rd331, %r445, 4;
	add.s64 	%rd332, %rd80, %rd331;
	ld.shared.u8 	%r446, [%rd332];
	mul.wide.u32 	%rd333, %r446, 4;
	add.s64 	%rd334, %rd139, %rd333;
	ld.shared.u32 	%r447, [%rd334];
	ld.shared.u32 	%r448, [%rd330];
	xor.b32  	%r449, %r447, %r448;
	bfe.u32 	%r450, %r207, 8, 8;
	mul.wide.u32 	%rd335, %r450, 4;
	add.s64 	%rd336, %rd80, %rd335;
	ld.shared.u8 	%r451, [%rd336];
	mul.wide.u32 	%rd337, %r451, 4;
	add.s64 	%rd338, %rd144, %rd337;
	ld.shared.u32 	%r452, [%rd338];
	xor.b32  	%r453, %r449, %r452;
	and.b32  	%r454, %r207, 255;
	mul.wide.u32 	%rd339, %r454, 4;
	add.s64 	%rd340, %rd80, %rd339;
	ld.shared.u8 	%r455, [%rd340];
	mul.wide.u32 	%rd341, %r455, 4;
	add.s64 	%rd342, %rd149, %rd341;
	ld.shared.u32 	%r456, [%rd342];
	xor.b32  	%r43, %r453, %r456;
	st.local.u32 	[%rd1+64], %r43;
	shr.u32 	%r457, %r208, 24;
	mul.wide.u32 	%rd343, %r457, 4;
	add.s64 	%rd344, %rd80, %rd343;
	ld.shared.u8 	%r458, [%rd344];
	mul.wide.u32 	%rd345, %r458, 4;
	add.s64 	%rd346, %rd134, %rd345;
	bfe.u32 	%r459, %r208, 16, 8;
	mul.wide.u32 	%rd347, %r459, 4;
	add.s64 	%rd348, %rd80, %rd347;
	ld.shared.u8 	%r460, [%rd348];
	mul.wide.u32 	%rd349, %r460, 4;
	add.s64 	%rd350, %rd139, %rd349;
	ld.shared.u32 	%r461, [%rd350];
	ld.shared.u32 	%r462, [%rd346];
	xor.b32  	%r463, %r461, %r462;
	bfe.u32 	%r464, %r208, 8, 8;
	mul.wide.u32 	%rd351, %r464, 4;
	add.s64 	%rd352, %rd80, %rd351;
	ld.shared.u8 	%r465, [%rd352];
	mul.wide.u32 	%rd353, %r465, 4;
	add.s64 	%rd354, %rd144, %rd353;
	ld.shared.u32 	%r466, [%rd354];
	xor.b32  	%r467, %r463, %r466;
	and.b32  	%r468, %r208, 255;
	mul.wide.u32 	%rd355, %r468, 4;
	add.s64 	%rd356, %rd80, %rd355;
	ld.shared.u8 	%r469, [%rd356];
	mul.wide.u32 	%rd357, %r469, 4;
	add.s64 	%rd358, %rd149, %rd357;
	ld.shared.u32 	%r470, [%rd358];
	xor.b32  	%r44, %r467, %r470;
	st.local.u32 	[%rd1+68], %r44;
	shr.u32 	%r471, %r209, 24;
	mul.wide.u32 	%rd359, %r471, 4;
	add.s64 	%rd360, %rd80, %rd359;
	ld.shared.u8 	%r472, [%rd360];
	mul.wide.u32 	%rd361, %r472, 4;
	add.s64 	%rd362, %rd134, %rd361;
	bfe.u32 	%r473, %r209, 16, 8;
	mul.wide.u32 	%rd363, %r473, 4;
	add.s64 	%rd364, %rd80, %rd363;
	ld.shared.u8 	%r474, [%rd364];
	mul.wide.u32 	%rd365, %r474, 4;
	add.s64 	%rd366, %rd139, %rd365;
	ld.shared.u32 	%r475, [%rd366];
	ld.shared.u32 	%r476, [%rd362];
	xor.b32  	%r477, %r475, %r476;
	bfe.u32 	%r478, %r209, 8, 8;
	mul.wide.u32 	%rd367, %r478, 4;
	add.s64 	%rd368, %rd80, %rd367;
	ld.shared.u8 	%r479, [%rd368];
	mul.wide.u32 	%rd369, %r479, 4;
	add.s64 	%rd370, %rd144, %rd369;
	ld.shared.u32 	%r480, [%rd370];
	xor.b32  	%r481, %r477, %r480;
	and.b32  	%r482, %r209, 255;
	mul.wide.u32 	%rd371, %r482, 4;
	add.s64 	%rd372, %rd80, %rd371;
	ld.shared.u8 	%r483, [%rd372];
	mul.wide.u32 	%rd373, %r483, 4;
	add.s64 	%rd374, %rd149, %rd373;
	ld.shared.u32 	%r484, [%rd374];
	xor.b32  	%r45, %r481, %r484;
	st.local.u32 	[%rd1+72], %r45;
	shr.u32 	%r485, %r210, 24;
	mul.wide.u32 	%rd375, %r485, 4;
	add.s64 	%rd376, %rd80, %rd375;
	ld.shared.u8 	%r486, [%rd376];
	mul.wide.u32 	%rd377, %r486, 4;
	add.s64 	%rd378, %rd134, %rd377;
	bfe.u32 	%r487, %r210, 16, 8;
	mul.wide.u32 	%rd379, %r487, 4;
	add.s64 	%rd380, %rd80, %rd379;
	ld.shared.u8 	%r488, [%rd380];
	mul.wide.u32 	%rd381, %r488, 4;
	add.s64 	%rd382, %rd139, %rd381;
	ld.shared.u32 	%r489, [%rd382];
	ld.shared.u32 	%r490, [%rd378];
	xor.b32  	%r491, %r489, %r490;
	bfe.u32 	%r492, %r210, 8, 8;
	mul.wide.u32 	%rd383, %r492, 4;
	add.s64 	%rd384, %rd80, %rd383;
	ld.shared.u8 	%r493, [%rd384];
	mul.wide.u32 	%rd385, %r493, 4;
	add.s64 	%rd386, %rd144, %rd385;
	ld.shared.u32 	%r494, [%rd386];
	xor.b32  	%r495, %r491, %r494;
	and.b32  	%r496, %r210, 255;
	mul.wide.u32 	%rd387, %r496, 4;
	add.s64 	%rd388, %rd80, %rd387;
	ld.shared.u8 	%r497, [%rd388];
	mul.wide.u32 	%rd389, %r497, 4;
	add.s64 	%rd390, %rd149, %rd389;
	ld.shared.u32 	%r498, [%rd390];
	xor.b32  	%r46, %r495, %r498;
	st.local.u32 	[%rd1+76], %r46;
	shr.u32 	%r499, %r215, 24;
	mul.wide.u32 	%rd391, %r499, 4;
	add.s64 	%rd392, %rd80, %rd391;
	ld.shared.u8 	%r500, [%rd392];
	mul.wide.u32 	%rd393, %r500, 4;
	add.s64 	%rd394, %rd134, %rd393;
	bfe.u32 	%r501, %r215, 16, 8;
	mul.wide.u32 	%rd395, %r501, 4;
	add.s64 	%rd396, %rd80, %rd395;
	ld.shared.u8 	%r502, [%rd396];
	mul.wide.u32 	%rd397, %r502, 4;
	add.s64 	%rd398, %rd139, %rd397;
	ld.shared.u32 	%r503, [%rd398];
	ld.shared.u32 	%r504, [%rd394];
	xor.b32  	%r505, %r503, %r504;
	bfe.u32 	%r506, %r215, 8, 8;
	mul.wide.u32 	%rd399, %r506, 4;
	add.s64 	%rd400, %rd80, %rd399;
	ld.shared.u8 	%r507, [%rd400];
	mul.wide.u32 	%rd401, %r507, 4;
	add.s64 	%rd402, %rd144, %rd401;
	ld.shared.u32 	%r508, [%rd402];
	xor.b32  	%r509, %r505, %r508;
	and.b32  	%r510, %r215, 255;
	mul.wide.u32 	%rd403, %r510, 4;
	add.s64 	%rd404, %rd80, %rd403;
	ld.shared.u8 	%r511, [%rd404];
	mul.wide.u32 	%rd405, %r511, 4;
	add.s64 	%rd406, %rd149, %rd405;
	ld.shared.u32 	%r512, [%rd406];
	xor.b32  	%r47, %r509, %r512;
	st.local.u32 	[%rd1+80], %r47;
	shr.u32 	%r513, %r216, 24;
	mul.wide.u32 	%rd407, %r513, 4;
	add.s64 	%rd408, %rd80, %rd407;
	ld.shared.u8 	%r514, [%rd408];
	mul.wide.u32 	%rd409, %r514, 4;
	add.s64 	%rd410, %rd134, %rd409;
	bfe.u32 	%r515, %r216, 16, 8;
	mul.wide.u32 	%rd411, %r515, 4;
	add.s64 	%rd412, %rd80, %rd411;
	ld.shared.u8 	%r516, [%rd412];
	mul.wide.u32 	%rd413, %r516, 4;
	add.s64 	%rd414, %rd139, %rd413;
	ld.shared.u32 	%r517, [%rd414];
	ld.shared.u32 	%r518, [%rd410];
	xor.b32  	%r519, %r517, %r518;
	bfe.u32 	%r520, %r216, 8, 8;
	mul.wide.u32 	%rd415, %r520, 4;
	add.s64 	%rd416, %rd80, %rd415;
	ld.shared.u8 	%r521, [%rd416];
	mul.wide.u32 	%rd417, %r521, 4;
	add.s64 	%rd418, %rd144, %rd417;
	ld.shared.u32 	%r522, [%rd418];
	xor.b32  	%r523, %r519, %r522;
	and.b32  	%r524, %r216, 255;
	mul.wide.u32 	%rd419, %r524, 4;
	add.s64 	%rd420, %rd80, %rd419;
	ld.shared.u8 	%r525, [%rd420];
	mul.wide.u32 	%rd421, %r525, 4;
	add.s64 	%rd422, %rd149, %rd421;
	ld.shared.u32 	%r526, [%rd422];
	xor.b32  	%r48, %r523, %r526;
	st.local.u32 	[%rd1+84], %r48;
	shr.u32 	%r527, %r217, 24;
	mul.wide.u32 	%rd423, %r527, 4;
	add.s64 	%rd424, %rd80, %rd423;
	ld.shared.u8 	%r528, [%rd424];
	mul.wide.u32 	%rd425, %r528, 4;
	add.s64 	%rd426, %rd134, %rd425;
	bfe.u32 	%r529, %r217, 16, 8;
	mul.wide.u32 	%rd427, %r529, 4;
	add.s64 	%rd428, %rd80, %rd427;
	ld.shared.u8 	%r530, [%rd428];
	mul.wide.u32 	%rd429, %r530, 4;
	add.s64 	%rd430, %rd139, %rd429;
	ld.shared.u32 	%r531, [%rd430];
	ld.shared.u32 	%r532, [%rd426];
	xor.b32  	%r533, %r531, %r532;
	bfe.u32 	%r534, %r217, 8, 8;
	mul.wide.u32 	%rd431, %r534, 4;
	add.s64 	%rd432, %rd80, %rd431;
	ld.shared.u8 	%r535, [%rd432];
	mul.wide.u32 	%rd433, %r535, 4;
	add.s64 	%rd434, %rd144, %rd433;
	ld.shared.u32 	%r536, [%rd434];
	xor.b32  	%r537, %r533, %r536;
	and.b32  	%r538, %r217, 255;
	mul.wide.u32 	%rd435, %r538, 4;
	add.s64 	%rd436, %rd80, %rd435;
	ld.shared.u8 	%r539, [%rd436];
	mul.wide.u32 	%rd437, %r539, 4;
	add.s64 	%rd438, %rd149, %rd437;
	ld.shared.u32 	%r540, [%rd438];
	xor.b32  	%r49, %r537, %r540;
	st.local.u32 	[%rd1+88], %r49;
	shr.u32 	%r541, %r218, 24;
	mul.wide.u32 	%rd439, %r541, 4;
	add.s64 	%rd440, %rd80, %rd439;
	ld.shared.u8 	%r542, [%rd440];
	mul.wide.u32 	%rd441, %r542, 4;
	add.s64 	%rd442, %rd134, %rd441;
	bfe.u32 	%r543, %r218, 16, 8;
	mul.wide.u32 	%rd443, %r543, 4;
	add.s64 	%rd444, %rd80, %rd443;
	ld.shared.u8 	%r544, [%rd444];
	mul.wide.u32 	%rd445, %r544, 4;
	add.s64 	%rd446, %rd139, %rd445;
	ld.shared.u32 	%r545, [%rd446];
	ld.shared.u32 	%r546, [%rd442];
	xor.b32  	%r547, %r545, %r546;
	bfe.u32 	%r548, %r218, 8, 8;
	mul.wide.u32 	%rd447, %r548, 4;
	add.s64 	%rd448, %rd80, %rd447;
	ld.shared.u8 	%r549, [%rd448];
	mul.wide.u32 	%rd449, %r549, 4;
	add.s64 	%rd450, %rd144, %rd449;
	ld.shared.u32 	%r550, [%rd450];
	xor.b32  	%r551, %r547, %r550;
	and.b32  	%r552, %r218, 255;
	mul.wide.u32 	%rd451, %r552, 4;
	add.s64 	%rd452, %rd80, %rd451;
	ld.shared.u8 	%r553, [%rd452];
	mul.wide.u32 	%rd453, %r553, 4;
	add.s64 	%rd454, %rd149, %rd453;
	ld.shared.u32 	%r554, [%rd454];
	xor.b32  	%r50, %r551, %r554;
	st.local.u32 	[%rd1+92], %r50;
	shr.u32 	%r555, %r223, 24;
	mul.wide.u32 	%rd455, %r555, 4;
	add.s64 	%rd456, %rd80, %rd455;
	ld.shared.u8 	%r556, [%rd456];
	mul.wide.u32 	%rd457, %r556, 4;
	add.s64 	%rd458, %rd134, %rd457;
	bfe.u32 	%r557, %r223, 16, 8;
	mul.wide.u32 	%rd459, %r557, 4;
	add.s64 	%rd460, %rd80, %rd459;
	ld.shared.u8 	%r558, [%rd460];
	mul.wide.u32 	%rd461, %r558, 4;
	add.s64 	%rd462, %rd139, %rd461;
	ld.shared.u32 	%r559, [%rd462];
	ld.shared.u32 	%r560, [%rd458];
	xor.b32  	%r561, %r559, %r560;
	bfe.u32 	%r562, %r223, 8, 8;
	mul.wide.u32 	%rd463, %r562, 4;
	add.s64 	%rd464, %rd80, %rd463;
	ld.shared.u8 	%r563, [%rd464];
	mul.wide.u32 	%rd465, %r563, 4;
	add.s64 	%rd466, %rd144, %rd465;
	ld.shared.u32 	%r564, [%rd466];
	xor.b32  	%r565, %r561, %r564;
	and.b32  	%r566, %r223, 255;
	mul.wide.u32 	%rd467, %r566, 4;
	add.s64 	%rd468, %rd80, %rd467;
	ld.shared.u8 	%r567, [%rd468];
	mul.wide.u32 	%rd469, %r567, 4;
	add.s64 	%rd470, %rd149, %rd469;
	ld.shared.u32 	%r568, [%rd470];
	xor.b32  	%r51, %r565, %r568;
	st.local.u32 	[%rd1+96], %r51;
	shr.u32 	%r569, %r224, 24;
	mul.wide.u32 	%rd471, %r569, 4;
	add.s64 	%rd472, %rd80, %rd471;
	ld.shared.u8 	%r570, [%rd472];
	mul.wide.u32 	%rd473, %r570, 4;
	add.s64 	%rd474, %rd134, %rd473;
	bfe.u32 	%r571, %r224, 16, 8;
	mul.wide.u32 	%rd475, %r571, 4;
	add.s64 	%rd476, %rd80, %rd475;
	ld.shared.u8 	%r572, [%rd476];
	mul.wide.u32 	%rd477, %r572, 4;
	add.s64 	%rd478, %rd139, %rd477;
	ld.shared.u32 	%r573, [%rd478];
	ld.shared.u32 	%r574, [%rd474];
	xor.b32  	%r575, %r573, %r574;
	bfe.u32 	%r576, %r224, 8, 8;
	mul.wide.u32 	%rd479, %r576, 4;
	add.s64 	%rd480, %rd80, %rd479;
	ld.shared.u8 	%r577, [%rd480];
	mul.wide.u32 	%rd481, %r577, 4;
	add.s64 	%rd482, %rd144, %rd481;
	ld.shared.u32 	%r578, [%rd482];
	xor.b32  	%r579, %r575, %r578;
	and.b32  	%r580, %r224, 255;
	mul.wide.u32 	%rd483, %r580, 4;
	add.s64 	%rd484, %rd80, %rd483;
	ld.shared.u8 	%r581, [%rd484];
	mul.wide.u32 	%rd485, %r581, 4;
	add.s64 	%rd486, %rd149, %rd485;
	ld.shared.u32 	%r582, [%rd486];
	xor.b32  	%r52, %r579, %r582;
	st.local.u32 	[%rd1+100], %r52;
	shr.u32 	%r583, %r225, 24;
	mul.wide.u32 	%rd487, %r583, 4;
	add.s64 	%rd488, %rd80, %rd487;
	ld.shared.u8 	%r584, [%rd488];
	mul.wide.u32 	%rd489, %r584, 4;
	add.s64 	%rd490, %rd134, %rd489;
	bfe.u32 	%r585, %r225, 16, 8;
	mul.wide.u32 	%rd491, %r585, 4;
	add.s64 	%rd492, %rd80, %rd491;
	ld.shared.u8 	%r586, [%rd492];
	mul.wide.u32 	%rd493, %r586, 4;
	add.s64 	%rd494, %rd139, %rd493;
	ld.shared.u32 	%r587, [%rd494];
	ld.shared.u32 	%r588, [%rd490];
	xor.b32  	%r589, %r587, %r588;
	bfe.u32 	%r590, %r225, 8, 8;
	mul.wide.u32 	%rd495, %r590, 4;
	add.s64 	%rd496, %rd80, %rd495;
	ld.shared.u8 	%r591, [%rd496];
	mul.wide.u32 	%rd497, %r591, 4;
	add.s64 	%rd498, %rd144, %rd497;
	ld.shared.u32 	%r592, [%rd498];
	xor.b32  	%r593, %r589, %r592;
	and.b32  	%r594, %r225, 255;
	mul.wide.u32 	%rd499, %r594, 4;
	add.s64 	%rd500, %rd80, %rd499;
	ld.shared.u8 	%r595, [%rd500];
	mul.wide.u32 	%rd501, %r595, 4;
	add.s64 	%rd502, %rd149, %rd501;
	ld.shared.u32 	%r596, [%rd502];
	xor.b32  	%r53, %r593, %r596;
	st.local.u32 	[%rd1+104], %r53;
	shr.u32 	%r597, %r226, 24;
	mul.wide.u32 	%rd503, %r597, 4;
	add.s64 	%rd504, %rd80, %rd503;
	ld.shared.u8 	%r598, [%rd504];
	mul.wide.u32 	%rd505, %r598, 4;
	add.s64 	%rd506, %rd134, %rd505;
	bfe.u32 	%r599, %r226, 16, 8;
	mul.wide.u32 	%rd507, %r599, 4;
	add.s64 	%rd508, %rd80, %rd507;
	ld.shared.u8 	%r600, [%rd508];
	mul.wide.u32 	%rd509, %r600, 4;
	add.s64 	%rd510, %rd139, %rd509;
	ld.shared.u32 	%r601, [%rd510];
	ld.shared.u32 	%r602, [%rd506];
	xor.b32  	%r603, %r601, %r602;
	bfe.u32 	%r604, %r226, 8, 8;
	mul.wide.u32 	%rd511, %r604, 4;
	add.s64 	%rd512, %rd80, %rd511;
	ld.shared.u8 	%r605, [%rd512];
	mul.wide.u32 	%rd513, %r605, 4;
	add.s64 	%rd514, %rd144, %rd513;
	ld.shared.u32 	%r606, [%rd514];
	xor.b32  	%r607, %r603, %r606;
	and.b32  	%r608, %r226, 255;
	mul.wide.u32 	%rd515, %r608, 4;
	add.s64 	%rd516, %rd80, %rd515;
	ld.shared.u8 	%r609, [%rd516];
	mul.wide.u32 	%rd517, %r609, 4;
	add.s64 	%rd518, %rd149, %rd517;
	ld.shared.u32 	%r610, [%rd518];
	xor.b32  	%r54, %r607, %r610;
	st.local.u32 	[%rd1+108], %r54;
	ld.local.v4.u32 	{%r611, %r612, %r613, %r614}, [%rd1+112];
	shr.u32 	%r616, %r611, 24;
	mul.wide.u32 	%rd519, %r616, 4;
	add.s64 	%rd520, %rd80, %rd519;
	ld.shared.u8 	%r617, [%rd520];
	mul.wide.u32 	%rd521, %r617, 4;
	add.s64 	%rd522, %rd134, %rd521;
	bfe.u32 	%r618, %r611, 16, 8;
	mul.wide.u32 	%rd523, %r618, 4;
	add.s64 	%rd524, %rd80, %rd523;
	ld.shared.u8 	%r619, [%rd524];
	mul.wide.u32 	%rd525, %r619, 4;
	add.s64 	%rd526, %rd139, %rd525;
	ld.shared.u32 	%r620, [%rd526];
	ld.shared.u32 	%r621, [%rd522];
	xor.b32  	%r622, %r620, %r621;
	bfe.u32 	%r623, %r611, 8, 8;
	mul.wide.u32 	%rd527, %r623, 4;
	add.s64 	%rd528, %rd80, %rd527;
	ld.shared.u8 	%r624, [%rd528];
	mul.wide.u32 	%rd529, %r624, 4;
	add.s64 	%rd530, %rd144, %rd529;
	ld.shared.u32 	%r625, [%rd530];
	xor.b32  	%r626, %r622, %r625;
	and.b32  	%r627, %r611, 255;
	mul.wide.u32 	%rd531, %r627, 4;
	add.s64 	%rd532, %rd80, %rd531;
	ld.shared.u8 	%r628, [%rd532];
	mul.wide.u32 	%rd533, %r628, 4;
	add.s64 	%rd534, %rd149, %rd533;
	ld.shared.u32 	%r629, [%rd534];
	xor.b32  	%r55, %r626, %r629;
	st.local.u32 	[%rd1+112], %r55;
	shr.u32 	%r631, %r612, 24;
	mul.wide.u32 	%rd535, %r631, 4;
	add.s64 	%rd536, %rd80, %rd535;
	ld.shared.u8 	%r632, [%rd536];
	mul.wide.u32 	%rd537, %r632, 4;
	add.s64 	%rd538, %rd134, %rd537;
	bfe.u32 	%r633, %r612, 16, 8;
	mul.wide.u32 	%rd539, %r633, 4;
	add.s64 	%rd540, %rd80, %rd539;
	ld.shared.u8 	%r634, [%rd540];
	mul.wide.u32 	%rd541, %r634, 4;
	add.s64 	%rd542, %rd139, %rd541;
	ld.shared.u32 	%r635, [%rd542];
	ld.shared.u32 	%r636, [%rd538];
	xor.b32  	%r637, %r635, %r636;
	bfe.u32 	%r638, %r612, 8, 8;
	mul.wide.u32 	%rd543, %r638, 4;
	add.s64 	%rd544, %rd80, %rd543;
	ld.shared.u8 	%r639, [%rd544];
	mul.wide.u32 	%rd545, %r639, 4;
	add.s64 	%rd546, %rd144, %rd545;
	ld.shared.u32 	%r640, [%rd546];
	xor.b32  	%r641, %r637, %r640;
	and.b32  	%r642, %r612, 255;
	mul.wide.u32 	%rd547, %r642, 4;
	add.s64 	%rd548, %rd80, %rd547;
	ld.shared.u8 	%r643, [%rd548];
	mul.wide.u32 	%rd549, %r643, 4;
	add.s64 	%rd550, %rd149, %rd549;
	ld.shared.u32 	%r644, [%rd550];
	xor.b32  	%r56, %r641, %r644;
	st.local.u32 	[%rd1+116], %r56;
	shr.u32 	%r646, %r613, 24;
	mul.wide.u32 	%rd551, %r646, 4;
	add.s64 	%rd552, %rd80, %rd551;
	ld.shared.u8 	%r647, [%rd552];
	mul.wide.u32 	%rd553, %r647, 4;
	add.s64 	%rd554, %rd134, %rd553;
	bfe.u32 	%r648, %r613, 16, 8;
	mul.wide.u32 	%rd555, %r648, 4;
	add.s64 	%rd556, %rd80, %rd555;
	ld.shared.u8 	%r649, [%rd556];
	mul.wide.u32 	%rd557, %r649, 4;
	add.s64 	%rd558, %rd139, %rd557;
	ld.shared.u32 	%r650, [%rd558];
	ld.shared.u32 	%r651, [%rd554];
	xor.b32  	%r652, %r650, %r651;
	bfe.u32 	%r653, %r613, 8, 8;
	mul.wide.u32 	%rd559, %r653, 4;
	add.s64 	%rd560, %rd80, %rd559;
	ld.shared.u8 	%r654, [%rd560];
	mul.wide.u32 	%rd561, %r654, 4;
	add.s64 	%rd562, %rd144, %rd561;
	ld.shared.u32 	%r655, [%rd562];
	xor.b32  	%r656, %r652, %r655;
	and.b32  	%r657, %r613, 255;
	mul.wide.u32 	%rd563, %r657, 4;
	add.s64 	%rd564, %rd80, %rd563;
	ld.shared.u8 	%r658, [%rd564];
	mul.wide.u32 	%rd565, %r658, 4;
	add.s64 	%rd566, %rd149, %rd565;
	ld.shared.u32 	%r659, [%rd566];
	xor.b32  	%r57, %r656, %r659;
	st.local.u32 	[%rd1+120], %r57;
	shr.u32 	%r661, %r614, 24;
	mul.wide.u32 	%rd567, %r661, 4;
	add.s64 	%rd568, %rd80, %rd567;
	ld.shared.u8 	%r662, [%rd568];
	mul.wide.u32 	%rd569, %r662, 4;
	add.s64 	%rd570, %rd134, %rd569;
	bfe.u32 	%r663, %r614, 16, 8;
	mul.wide.u32 	%rd571, %r663, 4;
	add.s64 	%rd572, %rd80, %rd571;
	ld.shared.u8 	%r664, [%rd572];
	mul.wide.u32 	%rd573, %r664, 4;
	add.s64 	%rd574, %rd139, %rd573;
	ld.shared.u32 	%r665, [%rd574];
	ld.shared.u32 	%r666, [%rd570];
	xor.b32  	%r667, %r665, %r666;
	bfe.u32 	%r668, %r614, 8, 8;
	mul.wide.u32 	%rd575, %r668, 4;
	add.s64 	%rd576, %rd80, %rd575;
	ld.shared.u8 	%r669, [%rd576];
	mul.wide.u32 	%rd577, %r669, 4;
	add.s64 	%rd578, %rd144, %rd577;
	ld.shared.u32 	%r670, [%rd578];
	xor.b32  	%r671, %r667, %r670;
	and.b32  	%r672, %r614, 255;
	mul.wide.u32 	%rd579, %r672, 4;
	add.s64 	%rd580, %rd80, %rd579;
	ld.shared.u8 	%r673, [%rd580];
	mul.wide.u32 	%rd581, %r673, 4;
	add.s64 	%rd582, %rd149, %rd581;
	ld.shared.u32 	%r674, [%rd582];
	xor.b32  	%r58, %r671, %r674;
	st.local.u32 	[%rd1+124], %r58;
	shr.u32 	%r675, %r219, 24;
	mul.wide.u32 	%rd583, %r675, 4;
	add.s64 	%rd584, %rd80, %rd583;
	ld.shared.u8 	%r676, [%rd584];
	mul.wide.u32 	%rd585, %r676, 4;
	add.s64 	%rd586, %rd134, %rd585;
	bfe.u32 	%r677, %r219, 16, 8;
	mul.wide.u32 	%rd587, %r677, 4;
	add.s64 	%rd588, %rd80, %rd587;
	ld.shared.u8 	%r678, [%rd588];
	mul.wide.u32 	%rd589, %r678, 4;
	add.s64 	%rd590, %rd139, %rd589;
	ld.shared.u32 	%r679, [%rd590];
	ld.shared.u32 	%r680, [%rd586];
	xor.b32  	%r681, %r679, %r680;
	bfe.u32 	%r682, %r219, 8, 8;
	mul.wide.u32 	%rd591, %r682, 4;
	add.s64 	%rd592, %rd80, %rd591;
	ld.shared.u8 	%r683, [%rd592];
	mul.wide.u32 	%rd593, %r683, 4;
	add.s64 	%rd594, %rd144, %rd593;
	ld.shared.u32 	%r684, [%rd594];
	xor.b32  	%r685, %r681, %r684;
	and.b32  	%r686, %r219, 255;
	mul.wide.u32 	%rd595, %r686, 4;
	add.s64 	%rd596, %rd80, %rd595;
	ld.shared.u8 	%r687, [%rd596];
	mul.wide.u32 	%rd597, %r687, 4;
	add.s64 	%rd598, %rd149, %rd597;
	ld.shared.u32 	%r688, [%rd598];
	xor.b32  	%r59, %r685, %r688;
	st.local.u32 	[%rd1+128], %r59;
	shr.u32 	%r689, %r220, 24;
	mul.wide.u32 	%rd599, %r689, 4;
	add.s64 	%rd600, %rd80, %rd599;
	ld.shared.u8 	%r690, [%rd600];
	mul.wide.u32 	%rd601, %r690, 4;
	add.s64 	%rd602, %rd134, %rd601;
	bfe.u32 	%r691, %r220, 16, 8;
	mul.wide.u32 	%rd603, %r691, 4;
	add.s64 	%rd604, %rd80, %rd603;
	ld.shared.u8 	%r692, [%rd604];
	mul.wide.u32 	%rd605, %r692, 4;
	add.s64 	%rd606, %rd139, %rd605;
	ld.shared.u32 	%r693, [%rd606];
	ld.shared.u32 	%r694, [%rd602];
	xor.b32  	%r695, %r693, %r694;
	bfe.u32 	%r696, %r220, 8, 8;
	mul.wide.u32 	%rd607, %r696, 4;
	add.s64 	%rd608, %rd80, %rd607;
	ld.shared.u8 	%r697, [%rd608];
	mul.wide.u32 	%rd609, %r697, 4;
	add.s64 	%rd610, %rd144, %rd609;
	ld.shared.u32 	%r698, [%rd610];
	xor.b32  	%r699, %r695, %r698;
	and.b32  	%r700, %r220, 255;
	mul.wide.u32 	%rd611, %r700, 4;
	add.s64 	%rd612, %rd80, %rd611;
	ld.shared.u8 	%r701, [%rd612];
	mul.wide.u32 	%rd613, %r701, 4;
	add.s64 	%rd614, %rd149, %rd613;
	ld.shared.u32 	%r702, [%rd614];
	xor.b32  	%r60, %r699, %r702;
	st.local.u32 	[%rd1+132], %r60;
	shr.u32 	%r703, %r221, 24;
	mul.wide.u32 	%rd615, %r703, 4;
	add.s64 	%rd616, %rd80, %rd615;
	ld.shared.u8 	%r704, [%rd616];
	mul.wide.u32 	%rd617, %r704, 4;
	add.s64 	%rd618, %rd134, %rd617;
	bfe.u32 	%r705, %r221, 16, 8;
	mul.wide.u32 	%rd619, %r705, 4;
	add.s64 	%rd620, %rd80, %rd619;
	ld.shared.u8 	%r706, [%rd620];
	mul.wide.u32 	%rd621, %r706, 4;
	add.s64 	%rd622, %rd139, %rd621;
	ld.shared.u32 	%r707, [%rd622];
	ld.shared.u32 	%r708, [%rd618];
	xor.b32  	%r709, %r707, %r708;
	bfe.u32 	%r710, %r221, 8, 8;
	mul.wide.u32 	%rd623, %r710, 4;
	add.s64 	%rd624, %rd80, %rd623;
	ld.shared.u8 	%r711, [%rd624];
	mul.wide.u32 	%rd625, %r711, 4;
	add.s64 	%rd626, %rd144, %rd625;
	ld.shared.u32 	%r712, [%rd626];
	xor.b32  	%r713, %r709, %r712;
	and.b32  	%r714, %r221, 255;
	mul.wide.u32 	%rd627, %r714, 4;
	add.s64 	%rd628, %rd80, %rd627;
	ld.shared.u8 	%r715, [%rd628];
	mul.wide.u32 	%rd629, %r715, 4;
	add.s64 	%rd630, %rd149, %rd629;
	ld.shared.u32 	%r716, [%rd630];
	xor.b32  	%r61, %r713, %r716;
	st.local.u32 	[%rd1+136], %r61;
	shr.u32 	%r717, %r222, 24;
	mul.wide.u32 	%rd631, %r717, 4;
	add.s64 	%rd632, %rd80, %rd631;
	ld.shared.u8 	%r718, [%rd632];
	mul.wide.u32 	%rd633, %r718, 4;
	add.s64 	%rd634, %rd134, %rd633;
	bfe.u32 	%r719, %r222, 16, 8;
	mul.wide.u32 	%rd635, %r719, 4;
	add.s64 	%rd636, %rd80, %rd635;
	ld.shared.u8 	%r720, [%rd636];
	mul.wide.u32 	%rd637, %r720, 4;
	add.s64 	%rd638, %rd139, %rd637;
	ld.shared.u32 	%r721, [%rd638];
	ld.shared.u32 	%r722, [%rd634];
	xor.b32  	%r723, %r721, %r722;
	bfe.u32 	%r724, %r222, 8, 8;
	mul.wide.u32 	%rd639, %r724, 4;
	add.s64 	%rd640, %rd80, %rd639;
	ld.shared.u8 	%r725, [%rd640];
	mul.wide.u32 	%rd641, %r725, 4;
	add.s64 	%rd642, %rd144, %rd641;
	ld.shared.u32 	%r726, [%rd642];
	xor.b32  	%r727, %r723, %r726;
	and.b32  	%r728, %r222, 255;
	mul.wide.u32 	%rd643, %r728, 4;
	add.s64 	%rd644, %rd80, %rd643;
	ld.shared.u8 	%r729, [%rd644];
	mul.wide.u32 	%rd645, %r729, 4;
	add.s64 	%rd646, %rd149, %rd645;
	ld.shared.u32 	%r730, [%rd646];
	xor.b32  	%r62, %r727, %r730;
	st.local.u32 	[%rd1+140], %r62;
	shr.u32 	%r731, %r211, 24;
	mul.wide.u32 	%rd647, %r731, 4;
	add.s64 	%rd648, %rd80, %rd647;
	ld.shared.u8 	%r732, [%rd648];
	mul.wide.u32 	%rd649, %r732, 4;
	add.s64 	%rd650, %rd134, %rd649;
	bfe.u32 	%r733, %r211, 16, 8;
	mul.wide.u32 	%rd651, %r733, 4;
	add.s64 	%rd652, %rd80, %rd651;
	ld.shared.u8 	%r734, [%rd652];
	mul.wide.u32 	%rd653, %r734, 4;
	add.s64 	%rd654, %rd139, %rd653;
	ld.shared.u32 	%r735, [%rd654];
	ld.shared.u32 	%r736, [%rd650];
	xor.b32  	%r737, %r735, %r736;
	bfe.u32 	%r738, %r211, 8, 8;
	mul.wide.u32 	%rd655, %r738, 4;
	add.s64 	%rd656, %rd80, %rd655;
	ld.shared.u8 	%r739, [%rd656];
	mul.wide.u32 	%rd657, %r739, 4;
	add.s64 	%rd658, %rd144, %rd657;
	ld.shared.u32 	%r740, [%rd658];
	xor.b32  	%r741, %r737, %r740;
	and.b32  	%r742, %r211, 255;
	mul.wide.u32 	%rd659, %r742, 4;
	add.s64 	%rd660, %rd80, %rd659;
	ld.shared.u8 	%r743, [%rd660];
	mul.wide.u32 	%rd661, %r743, 4;
	add.s64 	%rd662, %rd149, %rd661;
	ld.shared.u32 	%r744, [%rd662];
	xor.b32  	%r63, %r741, %r744;
	st.local.u32 	[%rd1+144], %r63;
	shr.u32 	%r745, %r212, 24;
	mul.wide.u32 	%rd663, %r745, 4;
	add.s64 	%rd664, %rd80, %rd663;
	ld.shared.u8 	%r746, [%rd664];
	mul.wide.u32 	%rd665, %r746, 4;
	add.s64 	%rd666, %rd134, %rd665;
	bfe.u32 	%r747, %r212, 16, 8;
	mul.wide.u32 	%rd667, %r747, 4;
	add.s64 	%rd668, %rd80, %rd667;
	ld.shared.u8 	%r748, [%rd668];
	mul.wide.u32 	%rd669, %r748, 4;
	add.s64 	%rd670, %rd139, %rd669;
	ld.shared.u32 	%r749, [%rd670];
	ld.shared.u32 	%r750, [%rd666];
	xor.b32  	%r751, %r749, %r750;
	bfe.u32 	%r752, %r212, 8, 8;
	mul.wide.u32 	%rd671, %r752, 4;
	add.s64 	%rd672, %rd80, %rd671;
	ld.shared.u8 	%r753, [%rd672];
	mul.wide.u32 	%rd673, %r753, 4;
	add.s64 	%rd674, %rd144, %rd673;
	ld.shared.u32 	%r754, [%rd674];
	xor.b32  	%r755, %r751, %r754;
	and.b32  	%r756, %r212, 255;
	mul.wide.u32 	%rd675, %r756, 4;
	add.s64 	%rd676, %rd80, %rd675;
	ld.shared.u8 	%r757, [%rd676];
	mul.wide.u32 	%rd677, %r757, 4;
	add.s64 	%rd678, %rd149, %rd677;
	ld.shared.u32 	%r758, [%rd678];
	xor.b32  	%r64, %r755, %r758;
	st.local.u32 	[%rd1+148], %r64;
	shr.u32 	%r759, %r213, 24;
	mul.wide.u32 	%rd679, %r759, 4;
	add.s64 	%rd680, %rd80, %rd679;
	ld.shared.u8 	%r760, [%rd680];
	mul.wide.u32 	%rd681, %r760, 4;
	add.s64 	%rd682, %rd134, %rd681;
	bfe.u32 	%r761, %r213, 16, 8;
	mul.wide.u32 	%rd683, %r761, 4;
	add.s64 	%rd684, %rd80, %rd683;
	ld.shared.u8 	%r762, [%rd684];
	mul.wide.u32 	%rd685, %r762, 4;
	add.s64 	%rd686, %rd139, %rd685;
	ld.shared.u32 	%r763, [%rd686];
	ld.shared.u32 	%r764, [%rd682];
	xor.b32  	%r765, %r763, %r764;
	bfe.u32 	%r766, %r213, 8, 8;
	mul.wide.u32 	%rd687, %r766, 4;
	add.s64 	%rd688, %rd80, %rd687;
	ld.shared.u8 	%r767, [%rd688];
	mul.wide.u32 	%rd689, %r767, 4;
	add.s64 	%rd690, %rd144, %rd689;
	ld.shared.u32 	%r768, [%rd690];
	xor.b32  	%r769, %r765, %r768;
	and.b32  	%r770, %r213, 255;
	mul.wide.u32 	%rd691, %r770, 4;
	add.s64 	%rd692, %rd80, %rd691;
	ld.shared.u8 	%r771, [%rd692];
	mul.wide.u32 	%rd693, %r771, 4;
	add.s64 	%rd694, %rd149, %rd693;
	ld.shared.u32 	%r772, [%rd694];
	xor.b32  	%r65, %r769, %r772;
	st.local.u32 	[%rd1+152], %r65;
	shr.u32 	%r773, %r214, 24;
	mul.wide.u32 	%rd695, %r773, 4;
	add.s64 	%rd696, %rd80, %rd695;
	ld.shared.u8 	%r774, [%rd696];
	mul.wide.u32 	%rd697, %r774, 4;
	add.s64 	%rd698, %rd134, %rd697;
	bfe.u32 	%r775, %r214, 16, 8;
	mul.wide.u32 	%rd699, %r775, 4;
	add.s64 	%rd700, %rd80, %rd699;
	ld.shared.u8 	%r776, [%rd700];
	mul.wide.u32 	%rd701, %r776, 4;
	add.s64 	%rd702, %rd139, %rd701;
	ld.shared.u32 	%r777, [%rd702];
	ld.shared.u32 	%r778, [%rd698];
	xor.b32  	%r779, %r777, %r778;
	bfe.u32 	%r780, %r214, 8, 8;
	mul.wide.u32 	%rd703, %r780, 4;
	add.s64 	%rd704, %rd80, %rd703;
	ld.shared.u8 	%r781, [%rd704];
	mul.wide.u32 	%rd705, %r781, 4;
	add.s64 	%rd706, %rd144, %rd705;
	ld.shared.u32 	%r782, [%rd706];
	xor.b32  	%r783, %r779, %r782;
	and.b32  	%r784, %r214, 255;
	mul.wide.u32 	%rd707, %r784, 4;
	add.s64 	%rd708, %rd80, %rd707;
	ld.shared.u8 	%r785, [%rd708];
	mul.wide.u32 	%rd709, %r785, 4;
	add.s64 	%rd710, %rd149, %rd709;
	ld.shared.u32 	%r786, [%rd710];
	xor.b32  	%r66, %r783, %r786;
	st.local.u32 	[%rd1+156], %r66;
	shr.u32 	%r787, %r203, 24;
	mul.wide.u32 	%rd711, %r787, 4;
	add.s64 	%rd712, %rd80, %rd711;
	ld.shared.u8 	%r788, [%rd712];
	mul.wide.u32 	%rd713, %r788, 4;
	add.s64 	%rd714, %rd134, %rd713;
	bfe.u32 	%r789, %r203, 16, 8;
	mul.wide.u32 	%rd715, %r789, 4;
	add.s64 	%rd716, %rd80, %rd715;
	ld.shared.u8 	%r790, [%rd716];
	mul.wide.u32 	%rd717, %r790, 4;
	add.s64 	%rd718, %rd139, %rd717;
	ld.shared.u32 	%r791, [%rd718];
	ld.shared.u32 	%r792, [%rd714];
	xor.b32  	%r793, %r791, %r792;
	bfe.u32 	%r794, %r203, 8, 8;
	mul.wide.u32 	%rd719, %r794, 4;
	add.s64 	%rd720, %rd80, %rd719;
	ld.shared.u8 	%r795, [%rd720];
	mul.wide.u32 	%rd721, %r795, 4;
	add.s64 	%rd722, %rd144, %rd721;
	ld.shared.u32 	%r796, [%rd722];
	xor.b32  	%r797, %r793, %r796;
	and.b32  	%r798, %r203, 255;
	mul.wide.u32 	%rd723, %r798, 4;
	add.s64 	%rd724, %rd80, %rd723;
	ld.shared.u8 	%r799, [%rd724];
	mul.wide.u32 	%rd725, %r799, 4;
	add.s64 	%rd726, %rd149, %rd725;
	ld.shared.u32 	%r800, [%rd726];
	xor.b32  	%r67, %r797, %r800;
	st.local.u32 	[%rd1+160], %r67;
	shr.u32 	%r801, %r204, 24;
	mul.wide.u32 	%rd727, %r801, 4;
	add.s64 	%rd728, %rd80, %rd727;
	ld.shared.u8 	%r802, [%rd728];
	mul.wide.u32 	%rd729, %r802, 4;
	add.s64 	%rd730, %rd134, %rd729;
	bfe.u32 	%r803, %r204, 16, 8;
	mul.wide.u32 	%rd731, %r803, 4;
	add.s64 	%rd732, %rd80, %rd731;
	ld.shared.u8 	%r804, [%rd732];
	mul.wide.u32 	%rd733, %r804, 4;
	add.s64 	%rd734, %rd139, %rd733;
	ld.shared.u32 	%r805, [%rd734];
	ld.shared.u32 	%r806, [%rd730];
	xor.b32  	%r807, %r805, %r806;
	bfe.u32 	%r808, %r204, 8, 8;
	mul.wide.u32 	%rd735, %r808, 4;
	add.s64 	%rd736, %rd80, %rd735;
	ld.shared.u8 	%r809, [%rd736];
	mul.wide.u32 	%rd737, %r809, 4;
	add.s64 	%rd738, %rd144, %rd737;
	ld.shared.u32 	%r810, [%rd738];
	xor.b32  	%r811, %r807, %r810;
	and.b32  	%r812, %r204, 255;
	mul.wide.u32 	%rd739, %r812, 4;
	add.s64 	%rd740, %rd80, %rd739;
	ld.shared.u8 	%r813, [%rd740];
	mul.wide.u32 	%rd741, %r813, 4;
	add.s64 	%rd742, %rd149, %rd741;
	ld.shared.u32 	%r814, [%rd742];
	xor.b32  	%r68, %r811, %r814;
	st.local.u32 	[%rd1+164], %r68;
	shr.u32 	%r815, %r205, 24;
	mul.wide.u32 	%rd743, %r815, 4;
	add.s64 	%rd744, %rd80, %rd743;
	ld.shared.u8 	%r816, [%rd744];
	mul.wide.u32 	%rd745, %r816, 4;
	add.s64 	%rd746, %rd134, %rd745;
	bfe.u32 	%r817, %r205, 16, 8;
	mul.wide.u32 	%rd747, %r817, 4;
	add.s64 	%rd748, %rd80, %rd747;
	ld.shared.u8 	%r818, [%rd748];
	mul.wide.u32 	%rd749, %r818, 4;
	add.s64 	%rd750, %rd139, %rd749;
	ld.shared.u32 	%r819, [%rd750];
	ld.shared.u32 	%r820, [%rd746];
	xor.b32  	%r821, %r819, %r820;
	bfe.u32 	%r822, %r205, 8, 8;
	mul.wide.u32 	%rd751, %r822, 4;
	add.s64 	%rd752, %rd80, %rd751;
	ld.shared.u8 	%r823, [%rd752];
	mul.wide.u32 	%rd753, %r823, 4;
	add.s64 	%rd754, %rd144, %rd753;
	ld.shared.u32 	%r824, [%rd754];
	xor.b32  	%r825, %r821, %r824;
	and.b32  	%r826, %r205, 255;
	mul.wide.u32 	%rd755, %r826, 4;
	add.s64 	%rd756, %rd80, %rd755;
	ld.shared.u8 	%r827, [%rd756];
	mul.wide.u32 	%rd757, %r827, 4;
	add.s64 	%rd758, %rd149, %rd757;
	ld.shared.u32 	%r828, [%rd758];
	xor.b32  	%r69, %r825, %r828;
	st.local.u32 	[%rd1+168], %r69;
	shr.u32 	%r829, %r206, 24;
	mul.wide.u32 	%rd759, %r829, 4;
	add.s64 	%rd760, %rd80, %rd759;
	ld.shared.u8 	%r830, [%rd760];
	mul.wide.u32 	%rd761, %r830, 4;
	add.s64 	%rd762, %rd134, %rd761;
	bfe.u32 	%r831, %r206, 16, 8;
	mul.wide.u32 	%rd763, %r831, 4;
	add.s64 	%rd764, %rd80, %rd763;
	ld.shared.u8 	%r832, [%rd764];
	mul.wide.u32 	%rd765, %r832, 4;
	add.s64 	%rd766, %rd139, %rd765;
	ld.shared.u32 	%r833, [%rd766];
	ld.shared.u32 	%r834, [%rd762];
	xor.b32  	%r835, %r833, %r834;
	bfe.u32 	%r836, %r206, 8, 8;
	mul.wide.u32 	%rd767, %r836, 4;
	add.s64 	%rd768, %rd80, %rd767;
	ld.shared.u8 	%r837, [%rd768];
	mul.wide.u32 	%rd769, %r837, 4;
	add.s64 	%rd770, %rd144, %rd769;
	ld.shared.u32 	%r838, [%rd770];
	xor.b32  	%r839, %r835, %r838;
	and.b32  	%r840, %r206, 255;
	mul.wide.u32 	%rd771, %r840, 4;
	add.s64 	%rd772, %rd80, %rd771;
	ld.shared.u8 	%r841, [%rd772];
	mul.wide.u32 	%rd773, %r841, 4;
	add.s64 	%rd774, %rd149, %rd773;
	ld.shared.u32 	%r842, [%rd774];
	xor.b32  	%r70, %r839, %r842;
	st.local.u32 	[%rd1+172], %r70;
	shr.u32 	%r843, %r195, 24;
	mul.wide.u32 	%rd775, %r843, 4;
	add.s64 	%rd776, %rd80, %rd775;
	ld.shared.u8 	%r844, [%rd776];
	mul.wide.u32 	%rd777, %r844, 4;
	add.s64 	%rd778, %rd134, %rd777;
	bfe.u32 	%r845, %r195, 16, 8;
	mul.wide.u32 	%rd779, %r845, 4;
	add.s64 	%rd780, %rd80, %rd779;
	ld.shared.u8 	%r846, [%rd780];
	mul.wide.u32 	%rd781, %r846, 4;
	add.s64 	%rd782, %rd139, %rd781;
	ld.shared.u32 	%r847, [%rd782];
	ld.shared.u32 	%r848, [%rd778];
	xor.b32  	%r849, %r847, %r848;
	bfe.u32 	%r850, %r195, 8, 8;
	mul.wide.u32 	%rd783, %r850, 4;
	add.s64 	%rd784, %rd80, %rd783;
	ld.shared.u8 	%r851, [%rd784];
	mul.wide.u32 	%rd785, %r851, 4;
	add.s64 	%rd786, %rd144, %rd785;
	ld.shared.u32 	%r852, [%rd786];
	xor.b32  	%r853, %r849, %r852;
	and.b32  	%r854, %r195, 255;
	mul.wide.u32 	%rd787, %r854, 4;
	add.s64 	%rd788, %rd80, %rd787;
	ld.shared.u8 	%r855, [%rd788];
	mul.wide.u32 	%rd789, %r855, 4;
	add.s64 	%rd790, %rd149, %rd789;
	ld.shared.u32 	%r856, [%rd790];
	xor.b32  	%r71, %r853, %r856;
	st.local.u32 	[%rd1+176], %r71;
	shr.u32 	%r857, %r196, 24;
	mul.wide.u32 	%rd791, %r857, 4;
	add.s64 	%rd792, %rd80, %rd791;
	ld.shared.u8 	%r858, [%rd792];
	mul.wide.u32 	%rd793, %r858, 4;
	add.s64 	%rd794, %rd134, %rd793;
	bfe.u32 	%r859, %r196, 16, 8;
	mul.wide.u32 	%rd795, %r859, 4;
	add.s64 	%rd796, %rd80, %rd795;
	ld.shared.u8 	%r860, [%rd796];
	mul.wide.u32 	%rd797, %r860, 4;
	add.s64 	%rd798, %rd139, %rd797;
	ld.shared.u32 	%r861, [%rd798];
	ld.shared.u32 	%r862, [%rd794];
	xor.b32  	%r863, %r861, %r862;
	bfe.u32 	%r864, %r196, 8, 8;
	mul.wide.u32 	%rd799, %r864, 4;
	add.s64 	%rd800, %rd80, %rd799;
	ld.shared.u8 	%r865, [%rd800];
	mul.wide.u32 	%rd801, %r865, 4;
	add.s64 	%rd802, %rd144, %rd801;
	ld.shared.u32 	%r866, [%rd802];
	xor.b32  	%r867, %r863, %r866;
	and.b32  	%r868, %r196, 255;
	mul.wide.u32 	%rd803, %r868, 4;
	add.s64 	%rd804, %rd80, %rd803;
	ld.shared.u8 	%r869, [%rd804];
	mul.wide.u32 	%rd805, %r869, 4;
	add.s64 	%rd806, %rd149, %rd805;
	ld.shared.u32 	%r870, [%rd806];
	xor.b32  	%r72, %r867, %r870;
	st.local.u32 	[%rd1+180], %r72;
	shr.u32 	%r871, %r197, 24;
	mul.wide.u32 	%rd807, %r871, 4;
	add.s64 	%rd808, %rd80, %rd807;
	ld.shared.u8 	%r872, [%rd808];
	mul.wide.u32 	%rd809, %r872, 4;
	add.s64 	%rd810, %rd134, %rd809;
	bfe.u32 	%r873, %r197, 16, 8;
	mul.wide.u32 	%rd811, %r873, 4;
	add.s64 	%rd812, %rd80, %rd811;
	ld.shared.u8 	%r874, [%rd812];
	mul.wide.u32 	%rd813, %r874, 4;
	add.s64 	%rd814, %rd139, %rd813;
	ld.shared.u32 	%r875, [%rd814];
	ld.shared.u32 	%r876, [%rd810];
	xor.b32  	%r877, %r875, %r876;
	bfe.u32 	%r878, %r197, 8, 8;
	mul.wide.u32 	%rd815, %r878, 4;
	add.s64 	%rd816, %rd80, %rd815;
	ld.shared.u8 	%r879, [%rd816];
	mul.wide.u32 	%rd817, %r879, 4;
	add.s64 	%rd818, %rd144, %rd817;
	ld.shared.u32 	%r880, [%rd818];
	xor.b32  	%r881, %r877, %r880;
	and.b32  	%r882, %r197, 255;
	mul.wide.u32 	%rd819, %r882, 4;
	add.s64 	%rd820, %rd80, %rd819;
	ld.shared.u8 	%r883, [%rd820];
	mul.wide.u32 	%rd821, %r883, 4;
	add.s64 	%rd822, %rd149, %rd821;
	ld.shared.u32 	%r884, [%rd822];
	xor.b32  	%r73, %r881, %r884;
	st.local.u32 	[%rd1+184], %r73;
	shr.u32 	%r885, %r198, 24;
	mul.wide.u32 	%rd823, %r885, 4;
	add.s64 	%rd824, %rd80, %rd823;
	ld.shared.u8 	%r886, [%rd824];
	mul.wide.u32 	%rd825, %r886, 4;
	add.s64 	%rd826, %rd134, %rd825;
	bfe.u32 	%r887, %r198, 16, 8;
	mul.wide.u32 	%rd827, %r887, 4;
	add.s64 	%rd828, %rd80, %rd827;
	ld.shared.u8 	%r888, [%rd828];
	mul.wide.u32 	%rd829, %r888, 4;
	add.s64 	%rd830, %rd139, %rd829;
	ld.shared.u32 	%r889, [%rd830];
	ld.shared.u32 	%r890, [%rd826];
	xor.b32  	%r891, %r889, %r890;
	bfe.u32 	%r892, %r198, 8, 8;
	mul.wide.u32 	%rd831, %r892, 4;
	add.s64 	%rd832, %rd80, %rd831;
	ld.shared.u8 	%r893, [%rd832];
	mul.wide.u32 	%rd833, %r893, 4;
	add.s64 	%rd834, %rd144, %rd833;
	ld.shared.u32 	%r894, [%rd834];
	xor.b32  	%r895, %r891, %r894;
	and.b32  	%r896, %r198, 255;
	mul.wide.u32 	%rd835, %r896, 4;
	add.s64 	%rd836, %rd80, %rd835;
	ld.shared.u8 	%r897, [%rd836];
	mul.wide.u32 	%rd837, %r897, 4;
	add.s64 	%rd838, %rd149, %rd837;
	ld.shared.u32 	%r898, [%rd838];
	xor.b32  	%r74, %r895, %r898;
	st.local.u32 	[%rd1+188], %r74;
	shr.u32 	%r899, %r187, 24;
	mul.wide.u32 	%rd839, %r899, 4;
	add.s64 	%rd840, %rd80, %rd839;
	ld.shared.u8 	%r900, [%rd840];
	mul.wide.u32 	%rd841, %r900, 4;
	add.s64 	%rd842, %rd134, %rd841;
	bfe.u32 	%r901, %r187, 16, 8;
	mul.wide.u32 	%rd843, %r901, 4;
	add.s64 	%rd844, %rd80, %rd843;
	ld.shared.u8 	%r902, [%rd844];
	mul.wide.u32 	%rd845, %r902, 4;
	add.s64 	%rd846, %rd139, %rd845;
	ld.shared.u32 	%r903, [%rd846];
	ld.shared.u32 	%r904, [%rd842];
	xor.b32  	%r905, %r903, %r904;
	bfe.u32 	%r906, %r187, 8, 8;
	mul.wide.u32 	%rd847, %r906, 4;
	add.s64 	%rd848, %rd80, %rd847;
	ld.shared.u8 	%r907, [%rd848];
	mul.wide.u32 	%rd849, %r907, 4;
	add.s64 	%rd850, %rd144, %rd849;
	ld.shared.u32 	%r908, [%rd850];
	xor.b32  	%r909, %r905, %r908;
	and.b32  	%r910, %r187, 255;
	mul.wide.u32 	%rd851, %r910, 4;
	add.s64 	%rd852, %rd80, %rd851;
	ld.shared.u8 	%r911, [%rd852];
	mul.wide.u32 	%rd853, %r911, 4;
	add.s64 	%rd854, %rd149, %rd853;
	ld.shared.u32 	%r912, [%rd854];
	xor.b32  	%r75, %r909, %r912;
	st.local.u32 	[%rd1+192], %r75;
	shr.u32 	%r913, %r188, 24;
	mul.wide.u32 	%rd855, %r913, 4;
	add.s64 	%rd856, %rd80, %rd855;
	ld.shared.u8 	%r914, [%rd856];
	mul.wide.u32 	%rd857, %r914, 4;
	add.s64 	%rd858, %rd134, %rd857;
	bfe.u32 	%r915, %r188, 16, 8;
	mul.wide.u32 	%rd859, %r915, 4;
	add.s64 	%rd860, %rd80, %rd859;
	ld.shared.u8 	%r916, [%rd860];
	mul.wide.u32 	%rd861, %r916, 4;
	add.s64 	%rd862, %rd139, %rd861;
	ld.shared.u32 	%r917, [%rd862];
	ld.shared.u32 	%r918, [%rd858];
	xor.b32  	%r919, %r917, %r918;
	bfe.u32 	%r920, %r188, 8, 8;
	mul.wide.u32 	%rd863, %r920, 4;
	add.s64 	%rd864, %rd80, %rd863;
	ld.shared.u8 	%r921, [%rd864];
	mul.wide.u32 	%rd865, %r921, 4;
	add.s64 	%rd866, %rd144, %rd865;
	ld.shared.u32 	%r922, [%rd866];
	xor.b32  	%r923, %r919, %r922;
	and.b32  	%r924, %r188, 255;
	mul.wide.u32 	%rd867, %r924, 4;
	add.s64 	%rd868, %rd80, %rd867;
	ld.shared.u8 	%r925, [%rd868];
	mul.wide.u32 	%rd869, %r925, 4;
	add.s64 	%rd870, %rd149, %rd869;
	ld.shared.u32 	%r926, [%rd870];
	xor.b32  	%r76, %r923, %r926;
	st.local.u32 	[%rd1+196], %r76;
	shr.u32 	%r927, %r189, 24;
	mul.wide.u32 	%rd871, %r927, 4;
	add.s64 	%rd872, %rd80, %rd871;
	ld.shared.u8 	%r928, [%rd872];
	mul.wide.u32 	%rd873, %r928, 4;
	add.s64 	%rd874, %rd134, %rd873;
	bfe.u32 	%r929, %r189, 16, 8;
	mul.wide.u32 	%rd875, %r929, 4;
	add.s64 	%rd876, %rd80, %rd875;
	ld.shared.u8 	%r930, [%rd876];
	mul.wide.u32 	%rd877, %r930, 4;
	add.s64 	%rd878, %rd139, %rd877;
	ld.shared.u32 	%r931, [%rd878];
	ld.shared.u32 	%r932, [%rd874];
	xor.b32  	%r933, %r931, %r932;
	bfe.u32 	%r934, %r189, 8, 8;
	mul.wide.u32 	%rd879, %r934, 4;
	add.s64 	%rd880, %rd80, %rd879;
	ld.shared.u8 	%r935, [%rd880];
	mul.wide.u32 	%rd881, %r935, 4;
	add.s64 	%rd882, %rd144, %rd881;
	ld.shared.u32 	%r936, [%rd882];
	xor.b32  	%r937, %r933, %r936;
	and.b32  	%r938, %r189, 255;
	mul.wide.u32 	%rd883, %r938, 4;
	add.s64 	%rd884, %rd80, %rd883;
	ld.shared.u8 	%r939, [%rd884];
	mul.wide.u32 	%rd885, %r939, 4;
	add.s64 	%rd886, %rd149, %rd885;
	ld.shared.u32 	%r940, [%rd886];
	xor.b32  	%r77, %r937, %r940;
	st.local.u32 	[%rd1+200], %r77;
	shr.u32 	%r941, %r190, 24;
	mul.wide.u32 	%rd887, %r941, 4;
	add.s64 	%rd888, %rd80, %rd887;
	ld.shared.u8 	%r942, [%rd888];
	mul.wide.u32 	%rd889, %r942, 4;
	add.s64 	%rd890, %rd134, %rd889;
	bfe.u32 	%r943, %r190, 16, 8;
	mul.wide.u32 	%rd891, %r943, 4;
	add.s64 	%rd892, %rd80, %rd891;
	ld.shared.u8 	%r944, [%rd892];
	mul.wide.u32 	%rd893, %r944, 4;
	add.s64 	%rd894, %rd139, %rd893;
	ld.shared.u32 	%r945, [%rd894];
	ld.shared.u32 	%r946, [%rd890];
	xor.b32  	%r947, %r945, %r946;
	bfe.u32 	%r948, %r190, 8, 8;
	mul.wide.u32 	%rd895, %r948, 4;
	add.s64 	%rd896, %rd80, %rd895;
	ld.shared.u8 	%r949, [%rd896];
	mul.wide.u32 	%rd897, %r949, 4;
	add.s64 	%rd898, %rd144, %rd897;
	ld.shared.u32 	%r950, [%rd898];
	xor.b32  	%r951, %r947, %r950;
	and.b32  	%r952, %r190, 255;
	mul.wide.u32 	%rd899, %r952, 4;
	add.s64 	%rd900, %rd80, %rd899;
	ld.shared.u8 	%r953, [%rd900];
	mul.wide.u32 	%rd901, %r953, 4;
	add.s64 	%rd902, %rd149, %rd901;
	ld.shared.u32 	%r954, [%rd902];
	xor.b32  	%r78, %r951, %r954;
	st.local.u32 	[%rd1+204], %r78;
	shr.u32 	%r955, %r227, 24;
	mul.wide.u32 	%rd903, %r955, 4;
	add.s64 	%rd904, %rd80, %rd903;
	ld.shared.u8 	%r956, [%rd904];
	mul.wide.u32 	%rd905, %r956, 4;
	add.s64 	%rd906, %rd134, %rd905;
	bfe.u32 	%r957, %r227, 16, 8;
	mul.wide.u32 	%rd907, %r957, 4;
	add.s64 	%rd908, %rd80, %rd907;
	ld.shared.u8 	%r958, [%rd908];
	mul.wide.u32 	%rd909, %r958, 4;
	add.s64 	%rd910, %rd139, %rd909;
	ld.shared.u32 	%r959, [%rd910];
	ld.shared.u32 	%r960, [%rd906];
	xor.b32  	%r961, %r959, %r960;
	bfe.u32 	%r962, %r227, 8, 8;
	mul.wide.u32 	%rd911, %r962, 4;
	add.s64 	%rd912, %rd80, %rd911;
	ld.shared.u8 	%r963, [%rd912];
	mul.wide.u32 	%rd913, %r963, 4;
	add.s64 	%rd914, %rd144, %rd913;
	ld.shared.u32 	%r964, [%rd914];
	xor.b32  	%r965, %r961, %r964;
	and.b32  	%r966, %r227, 255;
	mul.wide.u32 	%rd915, %r966, 4;
	add.s64 	%rd916, %rd80, %rd915;
	ld.shared.u8 	%r967, [%rd916];
	mul.wide.u32 	%rd917, %r967, 4;
	add.s64 	%rd918, %rd149, %rd917;
	ld.shared.u32 	%r968, [%rd918];
	xor.b32  	%r79, %r965, %r968;
	st.local.u32 	[%rd1+208], %r79;
	shr.u32 	%r969, %r228, 24;
	mul.wide.u32 	%rd919, %r969, 4;
	add.s64 	%rd920, %rd80, %rd919;
	ld.shared.u8 	%r970, [%rd920];
	mul.wide.u32 	%rd921, %r970, 4;
	add.s64 	%rd922, %rd134, %rd921;
	bfe.u32 	%r971, %r228, 16, 8;
	mul.wide.u32 	%rd923, %r971, 4;
	add.s64 	%rd924, %rd80, %rd923;
	ld.shared.u8 	%r972, [%rd924];
	mul.wide.u32 	%rd925, %r972, 4;
	add.s64 	%rd926, %rd139, %rd925;
	ld.shared.u32 	%r973, [%rd926];
	ld.shared.u32 	%r974, [%rd922];
	xor.b32  	%r975, %r973, %r974;
	bfe.u32 	%r976, %r228, 8, 8;
	mul.wide.u32 	%rd927, %r976, 4;
	add.s64 	%rd928, %rd80, %rd927;
	ld.shared.u8 	%r977, [%rd928];
	mul.wide.u32 	%rd929, %r977, 4;
	add.s64 	%rd930, %rd144, %rd929;
	ld.shared.u32 	%r978, [%rd930];
	xor.b32  	%r979, %r975, %r978;
	and.b32  	%r980, %r228, 255;
	mul.wide.u32 	%rd931, %r980, 4;
	add.s64 	%rd932, %rd80, %rd931;
	ld.shared.u8 	%r981, [%rd932];
	mul.wide.u32 	%rd933, %r981, 4;
	add.s64 	%rd934, %rd149, %rd933;
	ld.shared.u32 	%r982, [%rd934];
	xor.b32  	%r80, %r979, %r982;
	st.local.u32 	[%rd1+212], %r80;
	shr.u32 	%r983, %r229, 24;
	mul.wide.u32 	%rd935, %r983, 4;
	add.s64 	%rd936, %rd80, %rd935;
	ld.shared.u8 	%r984, [%rd936];
	mul.wide.u32 	%rd937, %r984, 4;
	add.s64 	%rd938, %rd134, %rd937;
	bfe.u32 	%r985, %r229, 16, 8;
	mul.wide.u32 	%rd939, %r985, 4;
	add.s64 	%rd940, %rd80, %rd939;
	ld.shared.u8 	%r986, [%rd940];
	mul.wide.u32 	%rd941, %r986, 4;
	add.s64 	%rd942, %rd139, %rd941;
	ld.shared.u32 	%r987, [%rd942];
	ld.shared.u32 	%r988, [%rd938];
	xor.b32  	%r989, %r987, %r988;
	bfe.u32 	%r990, %r229, 8, 8;
	mul.wide.u32 	%rd943, %r990, 4;
	add.s64 	%rd944, %rd80, %rd943;
	ld.shared.u8 	%r991, [%rd944];
	mul.wide.u32 	%rd945, %r991, 4;
	add.s64 	%rd946, %rd144, %rd945;
	ld.shared.u32 	%r992, [%rd946];
	xor.b32  	%r993, %r989, %r992;
	and.b32  	%r994, %r229, 255;
	mul.wide.u32 	%rd947, %r994, 4;
	add.s64 	%rd948, %rd80, %rd947;
	ld.shared.u8 	%r995, [%rd948];
	mul.wide.u32 	%rd949, %r995, 4;
	add.s64 	%rd950, %rd149, %rd949;
	ld.shared.u32 	%r996, [%rd950];
	xor.b32  	%r81, %r993, %r996;
	st.local.u32 	[%rd1+216], %r81;
	shr.u32 	%r997, %r230, 24;
	mul.wide.u32 	%rd951, %r997, 4;
	add.s64 	%rd952, %rd80, %rd951;
	ld.shared.u8 	%r998, [%rd952];
	mul.wide.u32 	%rd953, %r998, 4;
	add.s64 	%rd954, %rd134, %rd953;
	bfe.u32 	%r999, %r230, 16, 8;
	mul.wide.u32 	%rd955, %r999, 4;
	add.s64 	%rd956, %rd80, %rd955;
	ld.shared.u8 	%r1000, [%rd956];
	mul.wide.u32 	%rd957, %r1000, 4;
	add.s64 	%rd958, %rd139, %rd957;
	ld.shared.u32 	%r1001, [%rd958];
	ld.shared.u32 	%r1002, [%rd954];
	xor.b32  	%r1003, %r1001, %r1002;
	bfe.u32 	%r1004, %r230, 8, 8;
	mul.wide.u32 	%rd959, %r1004, 4;
	add.s64 	%rd960, %rd80, %rd959;
	ld.shared.u8 	%r1005, [%rd960];
	mul.wide.u32 	%rd961, %r1005, 4;
	add.s64 	%rd962, %rd144, %rd961;
	ld.shared.u32 	%r1006, [%rd962];
	xor.b32  	%r1007, %r1003, %r1006;
	and.b32  	%r1008, %r230, 255;
	mul.wide.u32 	%rd963, %r1008, 4;
	add.s64 	%rd964, %rd80, %rd963;
	ld.shared.u8 	%r1009, [%rd964];
	mul.wide.u32 	%rd965, %r1009, 4;
	add.s64 	%rd966, %rd149, %rd965;
	ld.shared.u32 	%r1010, [%rd966];
	xor.b32  	%r82, %r1007, %r1010;
	st.local.u32 	[%rd1+220], %r82;
	mul.wide.u32 	%rd967, %r97, 780;
	add.s64 	%rd968, %rd12, %rd967;
	ld.global.u32 	%r83, [%rd968+768];
	setp.eq.s32	%p15, %r83, 0;
	@%p15 bra 	BB3_13;

	ld.param.u32 	%r1759, [m11300_comp_param_32];
	cvt.u64.u32	%rd1443, %r1759;
	ld.param.u64 	%rd1442, [m11300_comp_param_18];
	cvt.u32.u64	%r1771, %rd62;
	shr.u64 	%rd1434, %rd64, 32;
	cvt.u32.u64	%r1770, %rd1434;
	cvt.u32.u64	%r1769, %rd64;
	mov.u32 	%r1768, 0;
	mul.lo.s64 	%rd969, %rd1443, 780;
	add.s64 	%rd970, %rd1442, %rd969;

BB3_11:
	mov.u32 	%r88, %r1772;
	mov.u32 	%r87, %r1771;
	mov.u32 	%r86, %r1770;
	mov.u32 	%r85, %r1769;
	shr.u32 	%r1011, %r1768, 2;
	shl.b32 	%r1012, %r1011, 2;
	cvt.u64.u32	%rd971, %r1012;
	add.s64 	%rd972, %rd970, %rd971;
	ld.global.u32 	%r1013, [%rd972];
	shr.u32 	%r1014, %r1013, 24;
	shr.u32 	%r1015, %r1013, 8;
	and.b32  	%r1016, %r1015, 65280;
	or.b32  	%r1017, %r1016, %r1014;
	shl.b32 	%r1018, %r1013, 24;
	shl.b32 	%r1019, %r1013, 8;
	and.b32  	%r1020, %r1019, 16711680;
	or.b32  	%r1021, %r1018, %r1020;
	or.b32  	%r1772, %r1021, %r1017;
	add.s32 	%r1022, %r1011, 1;
	mul.wide.u32 	%rd973, %r1022, 4;
	add.s64 	%rd974, %rd970, %rd973;
	ld.global.u32 	%r1023, [%rd974];
	shr.u32 	%r1024, %r1023, 24;
	shr.u32 	%r1025, %r1023, 8;
	and.b32  	%r1026, %r1025, 65280;
	or.b32  	%r1027, %r1026, %r1024;
	shl.b32 	%r1028, %r1023, 24;
	shl.b32 	%r1029, %r1023, 8;
	and.b32  	%r1030, %r1029, 16711680;
	or.b32  	%r1031, %r1028, %r1030;
	or.b32  	%r1771, %r1031, %r1027;
	add.s32 	%r1032, %r1011, 2;
	mul.wide.u32 	%rd975, %r1032, 4;
	add.s64 	%rd976, %rd970, %rd975;
	ld.global.u32 	%r1033, [%rd976];
	shr.u32 	%r1034, %r1033, 24;
	shr.u32 	%r1035, %r1033, 8;
	and.b32  	%r1036, %r1035, 65280;
	or.b32  	%r1037, %r1036, %r1034;
	shl.b32 	%r1038, %r1033, 24;
	shl.b32 	%r1039, %r1033, 8;
	and.b32  	%r1040, %r1039, 16711680;
	or.b32  	%r1041, %r1038, %r1040;
	or.b32  	%r1770, %r1041, %r1037;
	add.s32 	%r1042, %r1011, 3;
	mul.wide.u32 	%rd977, %r1042, 4;
	add.s64 	%rd978, %rd970, %rd977;
	ld.global.u32 	%r1043, [%rd978];
	shr.u32 	%r1044, %r1043, 24;
	shr.u32 	%r1045, %r1043, 8;
	and.b32  	%r1046, %r1045, 65280;
	or.b32  	%r1047, %r1046, %r1044;
	shl.b32 	%r1048, %r1043, 24;
	shl.b32 	%r1049, %r1043, 8;
	and.b32  	%r1050, %r1049, 16711680;
	or.b32  	%r1051, %r1048, %r1050;
	or.b32  	%r1769, %r1051, %r1047;
	add.s32 	%r1768, %r1768, 16;
	setp.lt.u32	%p16, %r1768, %r83;
	@%p16 bra 	BB3_11;

	mov.u64 	%rd1438, m11300_comp$s_td3;
	mov.u64 	%rd1437, m11300_comp$s_td2;
	mov.u64 	%rd1436, m11300_comp$s_td1;
	mov.u64 	%rd1435, m11300_comp$s_td0;
	xor.b32  	%r1052, %r179, %r1772;
	shr.u32 	%r1053, %r1052, 24;
	mul.wide.u32 	%rd979, %r1053, 4;
	add.s64 	%rd981, %rd1435, %rd979;
	xor.b32  	%r1054, %r182, %r1769;
	bfe.u32 	%r1055, %r1054, 16, 8;
	mul.wide.u32 	%rd982, %r1055, 4;
	add.s64 	%rd984, %rd1436, %rd982;
	ld.shared.u32 	%r1056, [%rd984];
	ld.shared.u32 	%r1057, [%rd981];
	xor.b32  	%r1058, %r1056, %r1057;
	xor.b32  	%r1059, %r181, %r1770;
	bfe.u32 	%r1060, %r1059, 8, 8;
	mul.wide.u32 	%rd985, %r1060, 4;
	add.s64 	%rd987, %rd1437, %rd985;
	ld.shared.u32 	%r1061, [%rd987];
	xor.b32  	%r1062, %r1058, %r1061;
	xor.b32  	%r1063, %r180, %r1771;
	and.b32  	%r1064, %r1063, 255;
	mul.wide.u32 	%rd988, %r1064, 4;
	add.s64 	%rd990, %rd1438, %rd988;
	ld.shared.u32 	%r1065, [%rd990];
	xor.b32  	%r1066, %r1062, %r1065;
	xor.b32  	%r1067, %r1066, %r31;
	shr.u32 	%r1068, %r1063, 24;
	mul.wide.u32 	%rd991, %r1068, 4;
	add.s64 	%rd992, %rd1435, %rd991;
	bfe.u32 	%r1069, %r1052, 16, 8;
	mul.wide.u32 	%rd993, %r1069, 4;
	add.s64 	%rd994, %rd1436, %rd993;
	ld.shared.u32 	%r1070, [%rd994];
	ld.shared.u32 	%r1071, [%rd992];
	xor.b32  	%r1072, %r1070, %r1071;
	bfe.u32 	%r1073, %r1054, 8, 8;
	mul.wide.u32 	%rd995, %r1073, 4;
	add.s64 	%rd996, %rd1437, %rd995;
	ld.shared.u32 	%r1074, [%rd996];
	xor.b32  	%r1075, %r1072, %r1074;
	and.b32  	%r1076, %r1059, 255;
	mul.wide.u32 	%rd997, %r1076, 4;
	add.s64 	%rd998, %rd1438, %rd997;
	ld.shared.u32 	%r1077, [%rd998];
	xor.b32  	%r1078, %r1075, %r1077;
	xor.b32  	%r1079, %r1078, %r32;
	shr.u32 	%r1080, %r1059, 24;
	mul.wide.u32 	%rd999, %r1080, 4;
	add.s64 	%rd1000, %rd1435, %rd999;
	bfe.u32 	%r1081, %r1063, 16, 8;
	mul.wide.u32 	%rd1001, %r1081, 4;
	add.s64 	%rd1002, %rd1436, %rd1001;
	ld.shared.u32 	%r1082, [%rd1002];
	ld.shared.u32 	%r1083, [%rd1000];
	xor.b32  	%r1084, %r1082, %r1083;
	bfe.u32 	%r1085, %r1052, 8, 8;
	mul.wide.u32 	%rd1003, %r1085, 4;
	add.s64 	%rd1004, %rd1437, %rd1003;
	ld.shared.u32 	%r1086, [%rd1004];
	xor.b32  	%r1087, %r1084, %r1086;
	and.b32  	%r1088, %r1054, 255;
	mul.wide.u32 	%rd1005, %r1088, 4;
	add.s64 	%rd1006, %rd1438, %rd1005;
	ld.shared.u32 	%r1089, [%rd1006];
	xor.b32  	%r1090, %r1087, %r1089;
	xor.b32  	%r1091, %r1090, %r33;
	shr.u32 	%r1092, %r1054, 24;
	mul.wide.u32 	%rd1007, %r1092, 4;
	add.s64 	%rd1008, %rd1435, %rd1007;
	bfe.u32 	%r1093, %r1059, 16, 8;
	mul.wide.u32 	%rd1009, %r1093, 4;
	add.s64 	%rd1010, %rd1436, %rd1009;
	ld.shared.u32 	%r1094, [%rd1010];
	ld.shared.u32 	%r1095, [%rd1008];
	xor.b32  	%r1096, %r1094, %r1095;
	bfe.u32 	%r1097, %r1063, 8, 8;
	mul.wide.u32 	%rd1011, %r1097, 4;
	add.s64 	%rd1012, %rd1437, %rd1011;
	ld.shared.u32 	%r1098, [%rd1012];
	xor.b32  	%r1099, %r1096, %r1098;
	and.b32  	%r1100, %r1052, 255;
	mul.wide.u32 	%rd1013, %r1100, 4;
	add.s64 	%rd1014, %rd1438, %rd1013;
	ld.shared.u32 	%r1101, [%rd1014];
	xor.b32  	%r1102, %r1099, %r1101;
	xor.b32  	%r1103, %r1102, %r34;
	shr.u32 	%r1104, %r1067, 24;
	mul.wide.u32 	%rd1015, %r1104, 4;
	add.s64 	%rd1016, %rd1435, %rd1015;
	bfe.u32 	%r1105, %r1103, 16, 8;
	mul.wide.u32 	%rd1017, %r1105, 4;
	add.s64 	%rd1018, %rd1436, %rd1017;
	ld.shared.u32 	%r1106, [%rd1018];
	ld.shared.u32 	%r1107, [%rd1016];
	xor.b32  	%r1108, %r1106, %r1107;
	bfe.u32 	%r1109, %r1091, 8, 8;
	mul.wide.u32 	%rd1019, %r1109, 4;
	add.s64 	%rd1020, %rd1437, %rd1019;
	ld.shared.u32 	%r1110, [%rd1020];
	xor.b32  	%r1111, %r1108, %r1110;
	and.b32  	%r1112, %r1079, 255;
	mul.wide.u32 	%rd1021, %r1112, 4;
	add.s64 	%rd1022, %rd1438, %rd1021;
	ld.shared.u32 	%r1113, [%rd1022];
	xor.b32  	%r1114, %r1111, %r1113;
	xor.b32  	%r1115, %r1114, %r35;
	shr.u32 	%r1116, %r1079, 24;
	mul.wide.u32 	%rd1023, %r1116, 4;
	add.s64 	%rd1024, %rd1435, %rd1023;
	bfe.u32 	%r1117, %r1067, 16, 8;
	mul.wide.u32 	%rd1025, %r1117, 4;
	add.s64 	%rd1026, %rd1436, %rd1025;
	ld.shared.u32 	%r1118, [%rd1026];
	ld.shared.u32 	%r1119, [%rd1024];
	xor.b32  	%r1120, %r1118, %r1119;
	bfe.u32 	%r1121, %r1103, 8, 8;
	mul.wide.u32 	%rd1027, %r1121, 4;
	add.s64 	%rd1028, %rd1437, %rd1027;
	ld.shared.u32 	%r1122, [%rd1028];
	xor.b32  	%r1123, %r1120, %r1122;
	and.b32  	%r1124, %r1091, 255;
	mul.wide.u32 	%rd1029, %r1124, 4;
	add.s64 	%rd1030, %rd1438, %rd1029;
	ld.shared.u32 	%r1125, [%rd1030];
	xor.b32  	%r1126, %r1123, %r1125;
	xor.b32  	%r1127, %r1126, %r36;
	shr.u32 	%r1128, %r1091, 24;
	mul.wide.u32 	%rd1031, %r1128, 4;
	add.s64 	%rd1032, %rd1435, %rd1031;
	bfe.u32 	%r1129, %r1079, 16, 8;
	mul.wide.u32 	%rd1033, %r1129, 4;
	add.s64 	%rd1034, %rd1436, %rd1033;
	ld.shared.u32 	%r1130, [%rd1034];
	ld.shared.u32 	%r1131, [%rd1032];
	xor.b32  	%r1132, %r1130, %r1131;
	bfe.u32 	%r1133, %r1067, 8, 8;
	mul.wide.u32 	%rd1035, %r1133, 4;
	add.s64 	%rd1036, %rd1437, %rd1035;
	ld.shared.u32 	%r1134, [%rd1036];
	xor.b32  	%r1135, %r1132, %r1134;
	and.b32  	%r1136, %r1103, 255;
	mul.wide.u32 	%rd1037, %r1136, 4;
	add.s64 	%rd1038, %rd1438, %rd1037;
	ld.shared.u32 	%r1137, [%rd1038];
	xor.b32  	%r1138, %r1135, %r1137;
	xor.b32  	%r1139, %r1138, %r37;
	shr.u32 	%r1140, %r1103, 24;
	mul.wide.u32 	%rd1039, %r1140, 4;
	add.s64 	%rd1040, %rd1435, %rd1039;
	bfe.u32 	%r1141, %r1091, 16, 8;
	mul.wide.u32 	%rd1041, %r1141, 4;
	add.s64 	%rd1042, %rd1436, %rd1041;
	ld.shared.u32 	%r1142, [%rd1042];
	ld.shared.u32 	%r1143, [%rd1040];
	xor.b32  	%r1144, %r1142, %r1143;
	bfe.u32 	%r1145, %r1079, 8, 8;
	mul.wide.u32 	%rd1043, %r1145, 4;
	add.s64 	%rd1044, %rd1437, %rd1043;
	ld.shared.u32 	%r1146, [%rd1044];
	xor.b32  	%r1147, %r1144, %r1146;
	and.b32  	%r1148, %r1067, 255;
	mul.wide.u32 	%rd1045, %r1148, 4;
	add.s64 	%rd1046, %rd1438, %rd1045;
	ld.shared.u32 	%r1149, [%rd1046];
	xor.b32  	%r1150, %r1147, %r1149;
	xor.b32  	%r1151, %r1150, %r38;
	shr.u32 	%r1152, %r1115, 24;
	mul.wide.u32 	%rd1047, %r1152, 4;
	add.s64 	%rd1048, %rd1435, %rd1047;
	bfe.u32 	%r1153, %r1151, 16, 8;
	mul.wide.u32 	%rd1049, %r1153, 4;
	add.s64 	%rd1050, %rd1436, %rd1049;
	ld.shared.u32 	%r1154, [%rd1050];
	ld.shared.u32 	%r1155, [%rd1048];
	xor.b32  	%r1156, %r1154, %r1155;
	bfe.u32 	%r1157, %r1139, 8, 8;
	mul.wide.u32 	%rd1051, %r1157, 4;
	add.s64 	%rd1052, %rd1437, %rd1051;
	ld.shared.u32 	%r1158, [%rd1052];
	xor.b32  	%r1159, %r1156, %r1158;
	and.b32  	%r1160, %r1127, 255;
	mul.wide.u32 	%rd1053, %r1160, 4;
	add.s64 	%rd1054, %rd1438, %rd1053;
	ld.shared.u32 	%r1161, [%rd1054];
	xor.b32  	%r1162, %r1159, %r1161;
	xor.b32  	%r1163, %r1162, %r39;
	shr.u32 	%r1164, %r1127, 24;
	mul.wide.u32 	%rd1055, %r1164, 4;
	add.s64 	%rd1056, %rd1435, %rd1055;
	bfe.u32 	%r1165, %r1115, 16, 8;
	mul.wide.u32 	%rd1057, %r1165, 4;
	add.s64 	%rd1058, %rd1436, %rd1057;
	ld.shared.u32 	%r1166, [%rd1058];
	ld.shared.u32 	%r1167, [%rd1056];
	xor.b32  	%r1168, %r1166, %r1167;
	bfe.u32 	%r1169, %r1151, 8, 8;
	mul.wide.u32 	%rd1059, %r1169, 4;
	add.s64 	%rd1060, %rd1437, %rd1059;
	ld.shared.u32 	%r1170, [%rd1060];
	xor.b32  	%r1171, %r1168, %r1170;
	and.b32  	%r1172, %r1139, 255;
	mul.wide.u32 	%rd1061, %r1172, 4;
	add.s64 	%rd1062, %rd1438, %rd1061;
	ld.shared.u32 	%r1173, [%rd1062];
	xor.b32  	%r1174, %r1171, %r1173;
	xor.b32  	%r1175, %r1174, %r40;
	shr.u32 	%r1176, %r1139, 24;
	mul.wide.u32 	%rd1063, %r1176, 4;
	add.s64 	%rd1064, %rd1435, %rd1063;
	bfe.u32 	%r1177, %r1127, 16, 8;
	mul.wide.u32 	%rd1065, %r1177, 4;
	add.s64 	%rd1066, %rd1436, %rd1065;
	ld.shared.u32 	%r1178, [%rd1066];
	ld.shared.u32 	%r1179, [%rd1064];
	xor.b32  	%r1180, %r1178, %r1179;
	bfe.u32 	%r1181, %r1115, 8, 8;
	mul.wide.u32 	%rd1067, %r1181, 4;
	add.s64 	%rd1068, %rd1437, %rd1067;
	ld.shared.u32 	%r1182, [%rd1068];
	xor.b32  	%r1183, %r1180, %r1182;
	and.b32  	%r1184, %r1151, 255;
	mul.wide.u32 	%rd1069, %r1184, 4;
	add.s64 	%rd1070, %rd1438, %rd1069;
	ld.shared.u32 	%r1185, [%rd1070];
	xor.b32  	%r1186, %r1183, %r1185;
	xor.b32  	%r1187, %r1186, %r41;
	shr.u32 	%r1188, %r1151, 24;
	mul.wide.u32 	%rd1071, %r1188, 4;
	add.s64 	%rd1072, %rd1435, %rd1071;
	bfe.u32 	%r1189, %r1139, 16, 8;
	mul.wide.u32 	%rd1073, %r1189, 4;
	add.s64 	%rd1074, %rd1436, %rd1073;
	ld.shared.u32 	%r1190, [%rd1074];
	ld.shared.u32 	%r1191, [%rd1072];
	xor.b32  	%r1192, %r1190, %r1191;
	bfe.u32 	%r1193, %r1127, 8, 8;
	mul.wide.u32 	%rd1075, %r1193, 4;
	add.s64 	%rd1076, %rd1437, %rd1075;
	ld.shared.u32 	%r1194, [%rd1076];
	xor.b32  	%r1195, %r1192, %r1194;
	and.b32  	%r1196, %r1115, 255;
	mul.wide.u32 	%rd1077, %r1196, 4;
	add.s64 	%rd1078, %rd1438, %rd1077;
	ld.shared.u32 	%r1197, [%rd1078];
	xor.b32  	%r1198, %r1195, %r1197;
	xor.b32  	%r1199, %r1198, %r42;
	shr.u32 	%r1200, %r1163, 24;
	mul.wide.u32 	%rd1079, %r1200, 4;
	add.s64 	%rd1080, %rd1435, %rd1079;
	bfe.u32 	%r1201, %r1199, 16, 8;
	mul.wide.u32 	%rd1081, %r1201, 4;
	add.s64 	%rd1082, %rd1436, %rd1081;
	ld.shared.u32 	%r1202, [%rd1082];
	ld.shared.u32 	%r1203, [%rd1080];
	xor.b32  	%r1204, %r1202, %r1203;
	bfe.u32 	%r1205, %r1187, 8, 8;
	mul.wide.u32 	%rd1083, %r1205, 4;
	add.s64 	%rd1084, %rd1437, %rd1083;
	ld.shared.u32 	%r1206, [%rd1084];
	xor.b32  	%r1207, %r1204, %r1206;
	and.b32  	%r1208, %r1175, 255;
	mul.wide.u32 	%rd1085, %r1208, 4;
	add.s64 	%rd1086, %rd1438, %rd1085;
	ld.shared.u32 	%r1209, [%rd1086];
	xor.b32  	%r1210, %r1207, %r1209;
	xor.b32  	%r1211, %r1210, %r43;
	shr.u32 	%r1212, %r1175, 24;
	mul.wide.u32 	%rd1087, %r1212, 4;
	add.s64 	%rd1088, %rd1435, %rd1087;
	bfe.u32 	%r1213, %r1163, 16, 8;
	mul.wide.u32 	%rd1089, %r1213, 4;
	add.s64 	%rd1090, %rd1436, %rd1089;
	ld.shared.u32 	%r1214, [%rd1090];
	ld.shared.u32 	%r1215, [%rd1088];
	xor.b32  	%r1216, %r1214, %r1215;
	bfe.u32 	%r1217, %r1199, 8, 8;
	mul.wide.u32 	%rd1091, %r1217, 4;
	add.s64 	%rd1092, %rd1437, %rd1091;
	ld.shared.u32 	%r1218, [%rd1092];
	xor.b32  	%r1219, %r1216, %r1218;
	and.b32  	%r1220, %r1187, 255;
	mul.wide.u32 	%rd1093, %r1220, 4;
	add.s64 	%rd1094, %rd1438, %rd1093;
	ld.shared.u32 	%r1221, [%rd1094];
	xor.b32  	%r1222, %r1219, %r1221;
	xor.b32  	%r1223, %r1222, %r44;
	shr.u32 	%r1224, %r1187, 24;
	mul.wide.u32 	%rd1095, %r1224, 4;
	add.s64 	%rd1096, %rd1435, %rd1095;
	bfe.u32 	%r1225, %r1175, 16, 8;
	mul.wide.u32 	%rd1097, %r1225, 4;
	add.s64 	%rd1098, %rd1436, %rd1097;
	ld.shared.u32 	%r1226, [%rd1098];
	ld.shared.u32 	%r1227, [%rd1096];
	xor.b32  	%r1228, %r1226, %r1227;
	bfe.u32 	%r1229, %r1163, 8, 8;
	mul.wide.u32 	%rd1099, %r1229, 4;
	add.s64 	%rd1100, %rd1437, %rd1099;
	ld.shared.u32 	%r1230, [%rd1100];
	xor.b32  	%r1231, %r1228, %r1230;
	and.b32  	%r1232, %r1199, 255;
	mul.wide.u32 	%rd1101, %r1232, 4;
	add.s64 	%rd1102, %rd1438, %rd1101;
	ld.shared.u32 	%r1233, [%rd1102];
	xor.b32  	%r1234, %r1231, %r1233;
	xor.b32  	%r1235, %r1234, %r45;
	shr.u32 	%r1236, %r1199, 24;
	mul.wide.u32 	%rd1103, %r1236, 4;
	add.s64 	%rd1104, %rd1435, %rd1103;
	bfe.u32 	%r1237, %r1187, 16, 8;
	mul.wide.u32 	%rd1105, %r1237, 4;
	add.s64 	%rd1106, %rd1436, %rd1105;
	ld.shared.u32 	%r1238, [%rd1106];
	ld.shared.u32 	%r1239, [%rd1104];
	xor.b32  	%r1240, %r1238, %r1239;
	bfe.u32 	%r1241, %r1175, 8, 8;
	mul.wide.u32 	%rd1107, %r1241, 4;
	add.s64 	%rd1108, %rd1437, %rd1107;
	ld.shared.u32 	%r1242, [%rd1108];
	xor.b32  	%r1243, %r1240, %r1242;
	and.b32  	%r1244, %r1163, 255;
	mul.wide.u32 	%rd1109, %r1244, 4;
	add.s64 	%rd1110, %rd1438, %rd1109;
	ld.shared.u32 	%r1245, [%rd1110];
	xor.b32  	%r1246, %r1243, %r1245;
	xor.b32  	%r1247, %r1246, %r46;
	shr.u32 	%r1248, %r1211, 24;
	mul.wide.u32 	%rd1111, %r1248, 4;
	add.s64 	%rd1112, %rd1435, %rd1111;
	bfe.u32 	%r1249, %r1247, 16, 8;
	mul.wide.u32 	%rd1113, %r1249, 4;
	add.s64 	%rd1114, %rd1436, %rd1113;
	ld.shared.u32 	%r1250, [%rd1114];
	ld.shared.u32 	%r1251, [%rd1112];
	xor.b32  	%r1252, %r1250, %r1251;
	bfe.u32 	%r1253, %r1235, 8, 8;
	mul.wide.u32 	%rd1115, %r1253, 4;
	add.s64 	%rd1116, %rd1437, %rd1115;
	ld.shared.u32 	%r1254, [%rd1116];
	xor.b32  	%r1255, %r1252, %r1254;
	and.b32  	%r1256, %r1223, 255;
	mul.wide.u32 	%rd1117, %r1256, 4;
	add.s64 	%rd1118, %rd1438, %rd1117;
	ld.shared.u32 	%r1257, [%rd1118];
	xor.b32  	%r1258, %r1255, %r1257;
	xor.b32  	%r1259, %r1258, %r47;
	shr.u32 	%r1260, %r1223, 24;
	mul.wide.u32 	%rd1119, %r1260, 4;
	add.s64 	%rd1120, %rd1435, %rd1119;
	bfe.u32 	%r1261, %r1211, 16, 8;
	mul.wide.u32 	%rd1121, %r1261, 4;
	add.s64 	%rd1122, %rd1436, %rd1121;
	ld.shared.u32 	%r1262, [%rd1122];
	ld.shared.u32 	%r1263, [%rd1120];
	xor.b32  	%r1264, %r1262, %r1263;
	bfe.u32 	%r1265, %r1247, 8, 8;
	mul.wide.u32 	%rd1123, %r1265, 4;
	add.s64 	%rd1124, %rd1437, %rd1123;
	ld.shared.u32 	%r1266, [%rd1124];
	xor.b32  	%r1267, %r1264, %r1266;
	and.b32  	%r1268, %r1235, 255;
	mul.wide.u32 	%rd1125, %r1268, 4;
	add.s64 	%rd1126, %rd1438, %rd1125;
	ld.shared.u32 	%r1269, [%rd1126];
	xor.b32  	%r1270, %r1267, %r1269;
	xor.b32  	%r1271, %r1270, %r48;
	shr.u32 	%r1272, %r1235, 24;
	mul.wide.u32 	%rd1127, %r1272, 4;
	add.s64 	%rd1128, %rd1435, %rd1127;
	bfe.u32 	%r1273, %r1223, 16, 8;
	mul.wide.u32 	%rd1129, %r1273, 4;
	add.s64 	%rd1130, %rd1436, %rd1129;
	ld.shared.u32 	%r1274, [%rd1130];
	ld.shared.u32 	%r1275, [%rd1128];
	xor.b32  	%r1276, %r1274, %r1275;
	bfe.u32 	%r1277, %r1211, 8, 8;
	mul.wide.u32 	%rd1131, %r1277, 4;
	add.s64 	%rd1132, %rd1437, %rd1131;
	ld.shared.u32 	%r1278, [%rd1132];
	xor.b32  	%r1279, %r1276, %r1278;
	and.b32  	%r1280, %r1247, 255;
	mul.wide.u32 	%rd1133, %r1280, 4;
	add.s64 	%rd1134, %rd1438, %rd1133;
	ld.shared.u32 	%r1281, [%rd1134];
	xor.b32  	%r1282, %r1279, %r1281;
	xor.b32  	%r1283, %r1282, %r49;
	shr.u32 	%r1284, %r1247, 24;
	mul.wide.u32 	%rd1135, %r1284, 4;
	add.s64 	%rd1136, %rd1435, %rd1135;
	bfe.u32 	%r1285, %r1235, 16, 8;
	mul.wide.u32 	%rd1137, %r1285, 4;
	add.s64 	%rd1138, %rd1436, %rd1137;
	ld.shared.u32 	%r1286, [%rd1138];
	ld.shared.u32 	%r1287, [%rd1136];
	xor.b32  	%r1288, %r1286, %r1287;
	bfe.u32 	%r1289, %r1223, 8, 8;
	mul.wide.u32 	%rd1139, %r1289, 4;
	add.s64 	%rd1140, %rd1437, %rd1139;
	ld.shared.u32 	%r1290, [%rd1140];
	xor.b32  	%r1291, %r1288, %r1290;
	and.b32  	%r1292, %r1211, 255;
	mul.wide.u32 	%rd1141, %r1292, 4;
	add.s64 	%rd1142, %rd1438, %rd1141;
	ld.shared.u32 	%r1293, [%rd1142];
	xor.b32  	%r1294, %r1291, %r1293;
	xor.b32  	%r1295, %r1294, %r50;
	shr.u32 	%r1296, %r1259, 24;
	mul.wide.u32 	%rd1143, %r1296, 4;
	add.s64 	%rd1144, %rd1435, %rd1143;
	bfe.u32 	%r1297, %r1295, 16, 8;
	mul.wide.u32 	%rd1145, %r1297, 4;
	add.s64 	%rd1146, %rd1436, %rd1145;
	ld.shared.u32 	%r1298, [%rd1146];
	ld.shared.u32 	%r1299, [%rd1144];
	xor.b32  	%r1300, %r1298, %r1299;
	bfe.u32 	%r1301, %r1283, 8, 8;
	mul.wide.u32 	%rd1147, %r1301, 4;
	add.s64 	%rd1148, %rd1437, %rd1147;
	ld.shared.u32 	%r1302, [%rd1148];
	xor.b32  	%r1303, %r1300, %r1302;
	and.b32  	%r1304, %r1271, 255;
	mul.wide.u32 	%rd1149, %r1304, 4;
	add.s64 	%rd1150, %rd1438, %rd1149;
	ld.shared.u32 	%r1305, [%rd1150];
	xor.b32  	%r1306, %r1303, %r1305;
	xor.b32  	%r1307, %r1306, %r51;
	shr.u32 	%r1308, %r1271, 24;
	mul.wide.u32 	%rd1151, %r1308, 4;
	add.s64 	%rd1152, %rd1435, %rd1151;
	bfe.u32 	%r1309, %r1259, 16, 8;
	mul.wide.u32 	%rd1153, %r1309, 4;
	add.s64 	%rd1154, %rd1436, %rd1153;
	ld.shared.u32 	%r1310, [%rd1154];
	ld.shared.u32 	%r1311, [%rd1152];
	xor.b32  	%r1312, %r1310, %r1311;
	bfe.u32 	%r1313, %r1295, 8, 8;
	mul.wide.u32 	%rd1155, %r1313, 4;
	add.s64 	%rd1156, %rd1437, %rd1155;
	ld.shared.u32 	%r1314, [%rd1156];
	xor.b32  	%r1315, %r1312, %r1314;
	and.b32  	%r1316, %r1283, 255;
	mul.wide.u32 	%rd1157, %r1316, 4;
	add.s64 	%rd1158, %rd1438, %rd1157;
	ld.shared.u32 	%r1317, [%rd1158];
	xor.b32  	%r1318, %r1315, %r1317;
	xor.b32  	%r1319, %r1318, %r52;
	shr.u32 	%r1320, %r1283, 24;
	mul.wide.u32 	%rd1159, %r1320, 4;
	add.s64 	%rd1160, %rd1435, %rd1159;
	bfe.u32 	%r1321, %r1271, 16, 8;
	mul.wide.u32 	%rd1161, %r1321, 4;
	add.s64 	%rd1162, %rd1436, %rd1161;
	ld.shared.u32 	%r1322, [%rd1162];
	ld.shared.u32 	%r1323, [%rd1160];
	xor.b32  	%r1324, %r1322, %r1323;
	bfe.u32 	%r1325, %r1259, 8, 8;
	mul.wide.u32 	%rd1163, %r1325, 4;
	add.s64 	%rd1164, %rd1437, %rd1163;
	ld.shared.u32 	%r1326, [%rd1164];
	xor.b32  	%r1327, %r1324, %r1326;
	and.b32  	%r1328, %r1295, 255;
	mul.wide.u32 	%rd1165, %r1328, 4;
	add.s64 	%rd1166, %rd1438, %rd1165;
	ld.shared.u32 	%r1329, [%rd1166];
	xor.b32  	%r1330, %r1327, %r1329;
	xor.b32  	%r1331, %r1330, %r53;
	shr.u32 	%r1332, %r1295, 24;
	mul.wide.u32 	%rd1167, %r1332, 4;
	add.s64 	%rd1168, %rd1435, %rd1167;
	bfe.u32 	%r1333, %r1283, 16, 8;
	mul.wide.u32 	%rd1169, %r1333, 4;
	add.s64 	%rd1170, %rd1436, %rd1169;
	ld.shared.u32 	%r1334, [%rd1170];
	ld.shared.u32 	%r1335, [%rd1168];
	xor.b32  	%r1336, %r1334, %r1335;
	bfe.u32 	%r1337, %r1271, 8, 8;
	mul.wide.u32 	%rd1171, %r1337, 4;
	add.s64 	%rd1172, %rd1437, %rd1171;
	ld.shared.u32 	%r1338, [%rd1172];
	xor.b32  	%r1339, %r1336, %r1338;
	and.b32  	%r1340, %r1259, 255;
	mul.wide.u32 	%rd1173, %r1340, 4;
	add.s64 	%rd1174, %rd1438, %rd1173;
	ld.shared.u32 	%r1341, [%rd1174];
	xor.b32  	%r1342, %r1339, %r1341;
	xor.b32  	%r1343, %r1342, %r54;
	shr.u32 	%r1344, %r1307, 24;
	mul.wide.u32 	%rd1175, %r1344, 4;
	add.s64 	%rd1176, %rd1435, %rd1175;
	bfe.u32 	%r1345, %r1343, 16, 8;
	mul.wide.u32 	%rd1177, %r1345, 4;
	add.s64 	%rd1178, %rd1436, %rd1177;
	ld.shared.u32 	%r1346, [%rd1178];
	ld.shared.u32 	%r1347, [%rd1176];
	xor.b32  	%r1348, %r1346, %r1347;
	bfe.u32 	%r1349, %r1331, 8, 8;
	mul.wide.u32 	%rd1179, %r1349, 4;
	add.s64 	%rd1180, %rd1437, %rd1179;
	ld.shared.u32 	%r1350, [%rd1180];
	xor.b32  	%r1351, %r1348, %r1350;
	and.b32  	%r1352, %r1319, 255;
	mul.wide.u32 	%rd1181, %r1352, 4;
	add.s64 	%rd1182, %rd1438, %rd1181;
	ld.shared.u32 	%r1353, [%rd1182];
	xor.b32  	%r1354, %r1351, %r1353;
	xor.b32  	%r1355, %r1354, %r55;
	shr.u32 	%r1356, %r1319, 24;
	mul.wide.u32 	%rd1183, %r1356, 4;
	add.s64 	%rd1184, %rd1435, %rd1183;
	bfe.u32 	%r1357, %r1307, 16, 8;
	mul.wide.u32 	%rd1185, %r1357, 4;
	add.s64 	%rd1186, %rd1436, %rd1185;
	ld.shared.u32 	%r1358, [%rd1186];
	ld.shared.u32 	%r1359, [%rd1184];
	xor.b32  	%r1360, %r1358, %r1359;
	bfe.u32 	%r1361, %r1343, 8, 8;
	mul.wide.u32 	%rd1187, %r1361, 4;
	add.s64 	%rd1188, %rd1437, %rd1187;
	ld.shared.u32 	%r1362, [%rd1188];
	xor.b32  	%r1363, %r1360, %r1362;
	and.b32  	%r1364, %r1331, 255;
	mul.wide.u32 	%rd1189, %r1364, 4;
	add.s64 	%rd1190, %rd1438, %rd1189;
	ld.shared.u32 	%r1365, [%rd1190];
	xor.b32  	%r1366, %r1363, %r1365;
	xor.b32  	%r1367, %r1366, %r56;
	shr.u32 	%r1368, %r1331, 24;
	mul.wide.u32 	%rd1191, %r1368, 4;
	add.s64 	%rd1192, %rd1435, %rd1191;
	bfe.u32 	%r1369, %r1319, 16, 8;
	mul.wide.u32 	%rd1193, %r1369, 4;
	add.s64 	%rd1194, %rd1436, %rd1193;
	ld.shared.u32 	%r1370, [%rd1194];
	ld.shared.u32 	%r1371, [%rd1192];
	xor.b32  	%r1372, %r1370, %r1371;
	bfe.u32 	%r1373, %r1307, 8, 8;
	mul.wide.u32 	%rd1195, %r1373, 4;
	add.s64 	%rd1196, %rd1437, %rd1195;
	ld.shared.u32 	%r1374, [%rd1196];
	xor.b32  	%r1375, %r1372, %r1374;
	and.b32  	%r1376, %r1343, 255;
	mul.wide.u32 	%rd1197, %r1376, 4;
	add.s64 	%rd1198, %rd1438, %rd1197;
	ld.shared.u32 	%r1377, [%rd1198];
	xor.b32  	%r1378, %r1375, %r1377;
	xor.b32  	%r1379, %r1378, %r57;
	shr.u32 	%r1380, %r1343, 24;
	mul.wide.u32 	%rd1199, %r1380, 4;
	add.s64 	%rd1200, %rd1435, %rd1199;
	bfe.u32 	%r1381, %r1331, 16, 8;
	mul.wide.u32 	%rd1201, %r1381, 4;
	add.s64 	%rd1202, %rd1436, %rd1201;
	ld.shared.u32 	%r1382, [%rd1202];
	ld.shared.u32 	%r1383, [%rd1200];
	xor.b32  	%r1384, %r1382, %r1383;
	bfe.u32 	%r1385, %r1319, 8, 8;
	mul.wide.u32 	%rd1203, %r1385, 4;
	add.s64 	%rd1204, %rd1437, %rd1203;
	ld.shared.u32 	%r1386, [%rd1204];
	xor.b32  	%r1387, %r1384, %r1386;
	and.b32  	%r1388, %r1307, 255;
	mul.wide.u32 	%rd1205, %r1388, 4;
	add.s64 	%rd1206, %rd1438, %rd1205;
	ld.shared.u32 	%r1389, [%rd1206];
	xor.b32  	%r1390, %r1387, %r1389;
	xor.b32  	%r1391, %r1390, %r58;
	shr.u32 	%r1392, %r1355, 24;
	mul.wide.u32 	%rd1207, %r1392, 4;
	add.s64 	%rd1208, %rd1435, %rd1207;
	bfe.u32 	%r1393, %r1391, 16, 8;
	mul.wide.u32 	%rd1209, %r1393, 4;
	add.s64 	%rd1210, %rd1436, %rd1209;
	ld.shared.u32 	%r1394, [%rd1210];
	ld.shared.u32 	%r1395, [%rd1208];
	xor.b32  	%r1396, %r1394, %r1395;
	bfe.u32 	%r1397, %r1379, 8, 8;
	mul.wide.u32 	%rd1211, %r1397, 4;
	add.s64 	%rd1212, %rd1437, %rd1211;
	ld.shared.u32 	%r1398, [%rd1212];
	xor.b32  	%r1399, %r1396, %r1398;
	and.b32  	%r1400, %r1367, 255;
	mul.wide.u32 	%rd1213, %r1400, 4;
	add.s64 	%rd1214, %rd1438, %rd1213;
	ld.shared.u32 	%r1401, [%rd1214];
	xor.b32  	%r1402, %r1399, %r1401;
	xor.b32  	%r1403, %r1402, %r59;
	shr.u32 	%r1404, %r1367, 24;
	mul.wide.u32 	%rd1215, %r1404, 4;
	add.s64 	%rd1216, %rd1435, %rd1215;
	bfe.u32 	%r1405, %r1355, 16, 8;
	mul.wide.u32 	%rd1217, %r1405, 4;
	add.s64 	%rd1218, %rd1436, %rd1217;
	ld.shared.u32 	%r1406, [%rd1218];
	ld.shared.u32 	%r1407, [%rd1216];
	xor.b32  	%r1408, %r1406, %r1407;
	bfe.u32 	%r1409, %r1391, 8, 8;
	mul.wide.u32 	%rd1219, %r1409, 4;
	add.s64 	%rd1220, %rd1437, %rd1219;
	ld.shared.u32 	%r1410, [%rd1220];
	xor.b32  	%r1411, %r1408, %r1410;
	and.b32  	%r1412, %r1379, 255;
	mul.wide.u32 	%rd1221, %r1412, 4;
	add.s64 	%rd1222, %rd1438, %rd1221;
	ld.shared.u32 	%r1413, [%rd1222];
	xor.b32  	%r1414, %r1411, %r1413;
	xor.b32  	%r1415, %r1414, %r60;
	shr.u32 	%r1416, %r1379, 24;
	mul.wide.u32 	%rd1223, %r1416, 4;
	add.s64 	%rd1224, %rd1435, %rd1223;
	bfe.u32 	%r1417, %r1367, 16, 8;
	mul.wide.u32 	%rd1225, %r1417, 4;
	add.s64 	%rd1226, %rd1436, %rd1225;
	ld.shared.u32 	%r1418, [%rd1226];
	ld.shared.u32 	%r1419, [%rd1224];
	xor.b32  	%r1420, %r1418, %r1419;
	bfe.u32 	%r1421, %r1355, 8, 8;
	mul.wide.u32 	%rd1227, %r1421, 4;
	add.s64 	%rd1228, %rd1437, %rd1227;
	ld.shared.u32 	%r1422, [%rd1228];
	xor.b32  	%r1423, %r1420, %r1422;
	and.b32  	%r1424, %r1391, 255;
	mul.wide.u32 	%rd1229, %r1424, 4;
	add.s64 	%rd1230, %rd1438, %rd1229;
	ld.shared.u32 	%r1425, [%rd1230];
	xor.b32  	%r1426, %r1423, %r1425;
	xor.b32  	%r1427, %r1426, %r61;
	shr.u32 	%r1428, %r1391, 24;
	mul.wide.u32 	%rd1231, %r1428, 4;
	add.s64 	%rd1232, %rd1435, %rd1231;
	bfe.u32 	%r1429, %r1379, 16, 8;
	mul.wide.u32 	%rd1233, %r1429, 4;
	add.s64 	%rd1234, %rd1436, %rd1233;
	ld.shared.u32 	%r1430, [%rd1234];
	ld.shared.u32 	%r1431, [%rd1232];
	xor.b32  	%r1432, %r1430, %r1431;
	bfe.u32 	%r1433, %r1367, 8, 8;
	mul.wide.u32 	%rd1235, %r1433, 4;
	add.s64 	%rd1236, %rd1437, %rd1235;
	ld.shared.u32 	%r1434, [%rd1236];
	xor.b32  	%r1435, %r1432, %r1434;
	and.b32  	%r1436, %r1355, 255;
	mul.wide.u32 	%rd1237, %r1436, 4;
	add.s64 	%rd1238, %rd1438, %rd1237;
	ld.shared.u32 	%r1437, [%rd1238];
	xor.b32  	%r1438, %r1435, %r1437;
	xor.b32  	%r1439, %r1438, %r62;
	shr.u32 	%r1440, %r1403, 24;
	mul.wide.u32 	%rd1239, %r1440, 4;
	add.s64 	%rd1240, %rd1435, %rd1239;
	bfe.u32 	%r1441, %r1439, 16, 8;
	mul.wide.u32 	%rd1241, %r1441, 4;
	add.s64 	%rd1242, %rd1436, %rd1241;
	ld.shared.u32 	%r1442, [%rd1242];
	ld.shared.u32 	%r1443, [%rd1240];
	xor.b32  	%r1444, %r1442, %r1443;
	bfe.u32 	%r1445, %r1427, 8, 8;
	mul.wide.u32 	%rd1243, %r1445, 4;
	add.s64 	%rd1244, %rd1437, %rd1243;
	ld.shared.u32 	%r1446, [%rd1244];
	xor.b32  	%r1447, %r1444, %r1446;
	and.b32  	%r1448, %r1415, 255;
	mul.wide.u32 	%rd1245, %r1448, 4;
	add.s64 	%rd1246, %rd1438, %rd1245;
	ld.shared.u32 	%r1449, [%rd1246];
	xor.b32  	%r1450, %r1447, %r1449;
	xor.b32  	%r1451, %r1450, %r63;
	shr.u32 	%r1452, %r1415, 24;
	mul.wide.u32 	%rd1247, %r1452, 4;
	add.s64 	%rd1248, %rd1435, %rd1247;
	bfe.u32 	%r1453, %r1403, 16, 8;
	mul.wide.u32 	%rd1249, %r1453, 4;
	add.s64 	%rd1250, %rd1436, %rd1249;
	ld.shared.u32 	%r1454, [%rd1250];
	ld.shared.u32 	%r1455, [%rd1248];
	xor.b32  	%r1456, %r1454, %r1455;
	bfe.u32 	%r1457, %r1439, 8, 8;
	mul.wide.u32 	%rd1251, %r1457, 4;
	add.s64 	%rd1252, %rd1437, %rd1251;
	ld.shared.u32 	%r1458, [%rd1252];
	xor.b32  	%r1459, %r1456, %r1458;
	and.b32  	%r1460, %r1427, 255;
	mul.wide.u32 	%rd1253, %r1460, 4;
	add.s64 	%rd1254, %rd1438, %rd1253;
	ld.shared.u32 	%r1461, [%rd1254];
	xor.b32  	%r1462, %r1459, %r1461;
	xor.b32  	%r1463, %r1462, %r64;
	shr.u32 	%r1464, %r1427, 24;
	mul.wide.u32 	%rd1255, %r1464, 4;
	add.s64 	%rd1256, %rd1435, %rd1255;
	bfe.u32 	%r1465, %r1415, 16, 8;
	mul.wide.u32 	%rd1257, %r1465, 4;
	add.s64 	%rd1258, %rd1436, %rd1257;
	ld.shared.u32 	%r1466, [%rd1258];
	ld.shared.u32 	%r1467, [%rd1256];
	xor.b32  	%r1468, %r1466, %r1467;
	bfe.u32 	%r1469, %r1403, 8, 8;
	mul.wide.u32 	%rd1259, %r1469, 4;
	add.s64 	%rd1260, %rd1437, %rd1259;
	ld.shared.u32 	%r1470, [%rd1260];
	xor.b32  	%r1471, %r1468, %r1470;
	and.b32  	%r1472, %r1439, 255;
	mul.wide.u32 	%rd1261, %r1472, 4;
	add.s64 	%rd1262, %rd1438, %rd1261;
	ld.shared.u32 	%r1473, [%rd1262];
	xor.b32  	%r1474, %r1471, %r1473;
	xor.b32  	%r1475, %r1474, %r65;
	shr.u32 	%r1476, %r1439, 24;
	mul.wide.u32 	%rd1263, %r1476, 4;
	add.s64 	%rd1264, %rd1435, %rd1263;
	bfe.u32 	%r1477, %r1427, 16, 8;
	mul.wide.u32 	%rd1265, %r1477, 4;
	add.s64 	%rd1266, %rd1436, %rd1265;
	ld.shared.u32 	%r1478, [%rd1266];
	ld.shared.u32 	%r1479, [%rd1264];
	xor.b32  	%r1480, %r1478, %r1479;
	bfe.u32 	%r1481, %r1415, 8, 8;
	mul.wide.u32 	%rd1267, %r1481, 4;
	add.s64 	%rd1268, %rd1437, %rd1267;
	ld.shared.u32 	%r1482, [%rd1268];
	xor.b32  	%r1483, %r1480, %r1482;
	and.b32  	%r1484, %r1403, 255;
	mul.wide.u32 	%rd1269, %r1484, 4;
	add.s64 	%rd1270, %rd1438, %rd1269;
	ld.shared.u32 	%r1485, [%rd1270];
	xor.b32  	%r1486, %r1483, %r1485;
	xor.b32  	%r1487, %r1486, %r66;
	shr.u32 	%r1488, %r1451, 24;
	mul.wide.u32 	%rd1271, %r1488, 4;
	add.s64 	%rd1272, %rd1435, %rd1271;
	bfe.u32 	%r1489, %r1487, 16, 8;
	mul.wide.u32 	%rd1273, %r1489, 4;
	add.s64 	%rd1274, %rd1436, %rd1273;
	ld.shared.u32 	%r1490, [%rd1274];
	ld.shared.u32 	%r1491, [%rd1272];
	xor.b32  	%r1492, %r1490, %r1491;
	bfe.u32 	%r1493, %r1475, 8, 8;
	mul.wide.u32 	%rd1275, %r1493, 4;
	add.s64 	%rd1276, %rd1437, %rd1275;
	ld.shared.u32 	%r1494, [%rd1276];
	xor.b32  	%r1495, %r1492, %r1494;
	and.b32  	%r1496, %r1463, 255;
	mul.wide.u32 	%rd1277, %r1496, 4;
	add.s64 	%rd1278, %rd1438, %rd1277;
	ld.shared.u32 	%r1497, [%rd1278];
	xor.b32  	%r1498, %r1495, %r1497;
	xor.b32  	%r1499, %r1498, %r67;
	shr.u32 	%r1500, %r1463, 24;
	mul.wide.u32 	%rd1279, %r1500, 4;
	add.s64 	%rd1280, %rd1435, %rd1279;
	bfe.u32 	%r1501, %r1451, 16, 8;
	mul.wide.u32 	%rd1281, %r1501, 4;
	add.s64 	%rd1282, %rd1436, %rd1281;
	ld.shared.u32 	%r1502, [%rd1282];
	ld.shared.u32 	%r1503, [%rd1280];
	xor.b32  	%r1504, %r1502, %r1503;
	bfe.u32 	%r1505, %r1487, 8, 8;
	mul.wide.u32 	%rd1283, %r1505, 4;
	add.s64 	%rd1284, %rd1437, %rd1283;
	ld.shared.u32 	%r1506, [%rd1284];
	xor.b32  	%r1507, %r1504, %r1506;
	and.b32  	%r1508, %r1475, 255;
	mul.wide.u32 	%rd1285, %r1508, 4;
	add.s64 	%rd1286, %rd1438, %rd1285;
	ld.shared.u32 	%r1509, [%rd1286];
	xor.b32  	%r1510, %r1507, %r1509;
	xor.b32  	%r1511, %r1510, %r68;
	shr.u32 	%r1512, %r1475, 24;
	mul.wide.u32 	%rd1287, %r1512, 4;
	add.s64 	%rd1288, %rd1435, %rd1287;
	bfe.u32 	%r1513, %r1463, 16, 8;
	mul.wide.u32 	%rd1289, %r1513, 4;
	add.s64 	%rd1290, %rd1436, %rd1289;
	ld.shared.u32 	%r1514, [%rd1290];
	ld.shared.u32 	%r1515, [%rd1288];
	xor.b32  	%r1516, %r1514, %r1515;
	bfe.u32 	%r1517, %r1451, 8, 8;
	mul.wide.u32 	%rd1291, %r1517, 4;
	add.s64 	%rd1292, %rd1437, %rd1291;
	ld.shared.u32 	%r1518, [%rd1292];
	xor.b32  	%r1519, %r1516, %r1518;
	and.b32  	%r1520, %r1487, 255;
	mul.wide.u32 	%rd1293, %r1520, 4;
	add.s64 	%rd1294, %rd1438, %rd1293;
	ld.shared.u32 	%r1521, [%rd1294];
	xor.b32  	%r1522, %r1519, %r1521;
	xor.b32  	%r1523, %r1522, %r69;
	shr.u32 	%r1524, %r1487, 24;
	mul.wide.u32 	%rd1295, %r1524, 4;
	add.s64 	%rd1296, %rd1435, %rd1295;
	bfe.u32 	%r1525, %r1475, 16, 8;
	mul.wide.u32 	%rd1297, %r1525, 4;
	add.s64 	%rd1298, %rd1436, %rd1297;
	ld.shared.u32 	%r1526, [%rd1298];
	ld.shared.u32 	%r1527, [%rd1296];
	xor.b32  	%r1528, %r1526, %r1527;
	bfe.u32 	%r1529, %r1463, 8, 8;
	mul.wide.u32 	%rd1299, %r1529, 4;
	add.s64 	%rd1300, %rd1437, %rd1299;
	ld.shared.u32 	%r1530, [%rd1300];
	xor.b32  	%r1531, %r1528, %r1530;
	and.b32  	%r1532, %r1451, 255;
	mul.wide.u32 	%rd1301, %r1532, 4;
	add.s64 	%rd1302, %rd1438, %rd1301;
	ld.shared.u32 	%r1533, [%rd1302];
	xor.b32  	%r1534, %r1531, %r1533;
	xor.b32  	%r1535, %r1534, %r70;
	shr.u32 	%r1536, %r1499, 24;
	mul.wide.u32 	%rd1303, %r1536, 4;
	add.s64 	%rd1304, %rd1435, %rd1303;
	bfe.u32 	%r1537, %r1535, 16, 8;
	mul.wide.u32 	%rd1305, %r1537, 4;
	add.s64 	%rd1306, %rd1436, %rd1305;
	ld.shared.u32 	%r1538, [%rd1306];
	ld.shared.u32 	%r1539, [%rd1304];
	xor.b32  	%r1540, %r1538, %r1539;
	bfe.u32 	%r1541, %r1523, 8, 8;
	mul.wide.u32 	%rd1307, %r1541, 4;
	add.s64 	%rd1308, %rd1437, %rd1307;
	ld.shared.u32 	%r1542, [%rd1308];
	xor.b32  	%r1543, %r1540, %r1542;
	and.b32  	%r1544, %r1511, 255;
	mul.wide.u32 	%rd1309, %r1544, 4;
	add.s64 	%rd1310, %rd1438, %rd1309;
	ld.shared.u32 	%r1545, [%rd1310];
	xor.b32  	%r1546, %r1543, %r1545;
	xor.b32  	%r1547, %r1546, %r71;
	shr.u32 	%r1548, %r1511, 24;
	mul.wide.u32 	%rd1311, %r1548, 4;
	add.s64 	%rd1312, %rd1435, %rd1311;
	bfe.u32 	%r1549, %r1499, 16, 8;
	mul.wide.u32 	%rd1313, %r1549, 4;
	add.s64 	%rd1314, %rd1436, %rd1313;
	ld.shared.u32 	%r1550, [%rd1314];
	ld.shared.u32 	%r1551, [%rd1312];
	xor.b32  	%r1552, %r1550, %r1551;
	bfe.u32 	%r1553, %r1535, 8, 8;
	mul.wide.u32 	%rd1315, %r1553, 4;
	add.s64 	%rd1316, %rd1437, %rd1315;
	ld.shared.u32 	%r1554, [%rd1316];
	xor.b32  	%r1555, %r1552, %r1554;
	and.b32  	%r1556, %r1523, 255;
	mul.wide.u32 	%rd1317, %r1556, 4;
	add.s64 	%rd1318, %rd1438, %rd1317;
	ld.shared.u32 	%r1557, [%rd1318];
	xor.b32  	%r1558, %r1555, %r1557;
	xor.b32  	%r1559, %r1558, %r72;
	shr.u32 	%r1560, %r1523, 24;
	mul.wide.u32 	%rd1319, %r1560, 4;
	add.s64 	%rd1320, %rd1435, %rd1319;
	bfe.u32 	%r1561, %r1511, 16, 8;
	mul.wide.u32 	%rd1321, %r1561, 4;
	add.s64 	%rd1322, %rd1436, %rd1321;
	ld.shared.u32 	%r1562, [%rd1322];
	ld.shared.u32 	%r1563, [%rd1320];
	xor.b32  	%r1564, %r1562, %r1563;
	bfe.u32 	%r1565, %r1499, 8, 8;
	mul.wide.u32 	%rd1323, %r1565, 4;
	add.s64 	%rd1324, %rd1437, %rd1323;
	ld.shared.u32 	%r1566, [%rd1324];
	xor.b32  	%r1567, %r1564, %r1566;
	and.b32  	%r1568, %r1535, 255;
	mul.wide.u32 	%rd1325, %r1568, 4;
	add.s64 	%rd1326, %rd1438, %rd1325;
	ld.shared.u32 	%r1569, [%rd1326];
	xor.b32  	%r1570, %r1567, %r1569;
	xor.b32  	%r1571, %r1570, %r73;
	shr.u32 	%r1572, %r1535, 24;
	mul.wide.u32 	%rd1327, %r1572, 4;
	add.s64 	%rd1328, %rd1435, %rd1327;
	bfe.u32 	%r1573, %r1523, 16, 8;
	mul.wide.u32 	%rd1329, %r1573, 4;
	add.s64 	%rd1330, %rd1436, %rd1329;
	ld.shared.u32 	%r1574, [%rd1330];
	ld.shared.u32 	%r1575, [%rd1328];
	xor.b32  	%r1576, %r1574, %r1575;
	bfe.u32 	%r1577, %r1511, 8, 8;
	mul.wide.u32 	%rd1331, %r1577, 4;
	add.s64 	%rd1332, %rd1437, %rd1331;
	ld.shared.u32 	%r1578, [%rd1332];
	xor.b32  	%r1579, %r1576, %r1578;
	and.b32  	%r1580, %r1499, 255;
	mul.wide.u32 	%rd1333, %r1580, 4;
	add.s64 	%rd1334, %rd1438, %rd1333;
	ld.shared.u32 	%r1581, [%rd1334];
	xor.b32  	%r1582, %r1579, %r1581;
	xor.b32  	%r1583, %r1582, %r74;
	shr.u32 	%r1584, %r1547, 24;
	mul.wide.u32 	%rd1335, %r1584, 4;
	add.s64 	%rd1336, %rd1435, %rd1335;
	bfe.u32 	%r1585, %r1583, 16, 8;
	mul.wide.u32 	%rd1337, %r1585, 4;
	add.s64 	%rd1338, %rd1436, %rd1337;
	ld.shared.u32 	%r1586, [%rd1338];
	ld.shared.u32 	%r1587, [%rd1336];
	xor.b32  	%r1588, %r1586, %r1587;
	bfe.u32 	%r1589, %r1571, 8, 8;
	mul.wide.u32 	%rd1339, %r1589, 4;
	add.s64 	%rd1340, %rd1437, %rd1339;
	ld.shared.u32 	%r1590, [%rd1340];
	xor.b32  	%r1591, %r1588, %r1590;
	and.b32  	%r1592, %r1559, 255;
	mul.wide.u32 	%rd1341, %r1592, 4;
	add.s64 	%rd1342, %rd1438, %rd1341;
	ld.shared.u32 	%r1593, [%rd1342];
	xor.b32  	%r1594, %r1591, %r1593;
	xor.b32  	%r1595, %r1594, %r75;
	shr.u32 	%r1596, %r1559, 24;
	mul.wide.u32 	%rd1343, %r1596, 4;
	add.s64 	%rd1344, %rd1435, %rd1343;
	bfe.u32 	%r1597, %r1547, 16, 8;
	mul.wide.u32 	%rd1345, %r1597, 4;
	add.s64 	%rd1346, %rd1436, %rd1345;
	ld.shared.u32 	%r1598, [%rd1346];
	ld.shared.u32 	%r1599, [%rd1344];
	xor.b32  	%r1600, %r1598, %r1599;
	bfe.u32 	%r1601, %r1583, 8, 8;
	mul.wide.u32 	%rd1347, %r1601, 4;
	add.s64 	%rd1348, %rd1437, %rd1347;
	ld.shared.u32 	%r1602, [%rd1348];
	xor.b32  	%r1603, %r1600, %r1602;
	and.b32  	%r1604, %r1571, 255;
	mul.wide.u32 	%rd1349, %r1604, 4;
	add.s64 	%rd1350, %rd1438, %rd1349;
	ld.shared.u32 	%r1605, [%rd1350];
	xor.b32  	%r1606, %r1603, %r1605;
	xor.b32  	%r1607, %r1606, %r76;
	shr.u32 	%r1608, %r1571, 24;
	mul.wide.u32 	%rd1351, %r1608, 4;
	add.s64 	%rd1352, %rd1435, %rd1351;
	bfe.u32 	%r1609, %r1559, 16, 8;
	mul.wide.u32 	%rd1353, %r1609, 4;
	add.s64 	%rd1354, %rd1436, %rd1353;
	ld.shared.u32 	%r1610, [%rd1354];
	ld.shared.u32 	%r1611, [%rd1352];
	xor.b32  	%r1612, %r1610, %r1611;
	bfe.u32 	%r1613, %r1547, 8, 8;
	mul.wide.u32 	%rd1355, %r1613, 4;
	add.s64 	%rd1356, %rd1437, %rd1355;
	ld.shared.u32 	%r1614, [%rd1356];
	xor.b32  	%r1615, %r1612, %r1614;
	and.b32  	%r1616, %r1583, 255;
	mul.wide.u32 	%rd1357, %r1616, 4;
	add.s64 	%rd1358, %rd1438, %rd1357;
	ld.shared.u32 	%r1617, [%rd1358];
	xor.b32  	%r1618, %r1615, %r1617;
	xor.b32  	%r1619, %r1618, %r77;
	shr.u32 	%r1620, %r1583, 24;
	mul.wide.u32 	%rd1359, %r1620, 4;
	add.s64 	%rd1360, %rd1435, %rd1359;
	bfe.u32 	%r1621, %r1571, 16, 8;
	mul.wide.u32 	%rd1361, %r1621, 4;
	add.s64 	%rd1362, %rd1436, %rd1361;
	ld.shared.u32 	%r1622, [%rd1362];
	ld.shared.u32 	%r1623, [%rd1360];
	xor.b32  	%r1624, %r1622, %r1623;
	bfe.u32 	%r1625, %r1559, 8, 8;
	mul.wide.u32 	%rd1363, %r1625, 4;
	add.s64 	%rd1364, %rd1437, %rd1363;
	ld.shared.u32 	%r1626, [%rd1364];
	xor.b32  	%r1627, %r1624, %r1626;
	and.b32  	%r1628, %r1547, 255;
	mul.wide.u32 	%rd1365, %r1628, 4;
	add.s64 	%rd1366, %rd1438, %rd1365;
	ld.shared.u32 	%r1629, [%rd1366];
	xor.b32  	%r1630, %r1627, %r1629;
	xor.b32  	%r1631, %r1630, %r78;
	shr.u32 	%r1632, %r1595, 24;
	mul.wide.u32 	%rd1367, %r1632, 4;
	add.s64 	%rd1368, %rd1435, %rd1367;
	bfe.u32 	%r1633, %r1631, 16, 8;
	mul.wide.u32 	%rd1369, %r1633, 4;
	add.s64 	%rd1370, %rd1436, %rd1369;
	ld.shared.u32 	%r1634, [%rd1370];
	ld.shared.u32 	%r1635, [%rd1368];
	xor.b32  	%r1636, %r1634, %r1635;
	bfe.u32 	%r1637, %r1619, 8, 8;
	mul.wide.u32 	%rd1371, %r1637, 4;
	add.s64 	%rd1372, %rd1437, %rd1371;
	ld.shared.u32 	%r1638, [%rd1372];
	xor.b32  	%r1639, %r1636, %r1638;
	and.b32  	%r1640, %r1607, 255;
	mul.wide.u32 	%rd1373, %r1640, 4;
	add.s64 	%rd1374, %rd1438, %rd1373;
	ld.shared.u32 	%r1641, [%rd1374];
	xor.b32  	%r1642, %r1639, %r1641;
	xor.b32  	%r1643, %r1642, %r79;
	shr.u32 	%r1644, %r1607, 24;
	mul.wide.u32 	%rd1375, %r1644, 4;
	add.s64 	%rd1376, %rd1435, %rd1375;
	bfe.u32 	%r1645, %r1595, 16, 8;
	mul.wide.u32 	%rd1377, %r1645, 4;
	add.s64 	%rd1378, %rd1436, %rd1377;
	ld.shared.u32 	%r1646, [%rd1378];
	ld.shared.u32 	%r1647, [%rd1376];
	xor.b32  	%r1648, %r1646, %r1647;
	bfe.u32 	%r1649, %r1631, 8, 8;
	mul.wide.u32 	%rd1379, %r1649, 4;
	add.s64 	%rd1380, %rd1437, %rd1379;
	ld.shared.u32 	%r1650, [%rd1380];
	xor.b32  	%r1651, %r1648, %r1650;
	and.b32  	%r1652, %r1619, 255;
	mul.wide.u32 	%rd1381, %r1652, 4;
	add.s64 	%rd1382, %rd1438, %rd1381;
	ld.shared.u32 	%r1653, [%rd1382];
	xor.b32  	%r1654, %r1651, %r1653;
	xor.b32  	%r1655, %r1654, %r80;
	shr.u32 	%r1656, %r1619, 24;
	mul.wide.u32 	%rd1383, %r1656, 4;
	add.s64 	%rd1384, %rd1435, %rd1383;
	bfe.u32 	%r1657, %r1607, 16, 8;
	mul.wide.u32 	%rd1385, %r1657, 4;
	add.s64 	%rd1386, %rd1436, %rd1385;
	ld.shared.u32 	%r1658, [%rd1386];
	ld.shared.u32 	%r1659, [%rd1384];
	xor.b32  	%r1660, %r1658, %r1659;
	bfe.u32 	%r1661, %r1595, 8, 8;
	mul.wide.u32 	%rd1387, %r1661, 4;
	add.s64 	%rd1388, %rd1437, %rd1387;
	ld.shared.u32 	%r1662, [%rd1388];
	xor.b32  	%r1663, %r1660, %r1662;
	and.b32  	%r1664, %r1631, 255;
	mul.wide.u32 	%rd1389, %r1664, 4;
	add.s64 	%rd1390, %rd1438, %rd1389;
	ld.shared.u32 	%r1665, [%rd1390];
	xor.b32  	%r1666, %r1663, %r1665;
	xor.b32  	%r1667, %r1666, %r81;
	shr.u32 	%r1668, %r1631, 24;
	mul.wide.u32 	%rd1391, %r1668, 4;
	add.s64 	%rd1392, %rd1435, %rd1391;
	bfe.u32 	%r1669, %r1619, 16, 8;
	mul.wide.u32 	%rd1393, %r1669, 4;
	add.s64 	%rd1394, %rd1436, %rd1393;
	ld.shared.u32 	%r1670, [%rd1394];
	ld.shared.u32 	%r1671, [%rd1392];
	xor.b32  	%r1672, %r1670, %r1671;
	bfe.u32 	%r1673, %r1607, 8, 8;
	mul.wide.u32 	%rd1395, %r1673, 4;
	add.s64 	%rd1396, %rd1437, %rd1395;
	ld.shared.u32 	%r1674, [%rd1396];
	xor.b32  	%r1675, %r1672, %r1674;
	and.b32  	%r1676, %r1595, 255;
	mul.wide.u32 	%rd1397, %r1676, 4;
	add.s64 	%rd1398, %rd1438, %rd1397;
	ld.shared.u32 	%r1677, [%rd1398];
	xor.b32  	%r1678, %r1675, %r1677;
	xor.b32  	%r1679, %r1678, %r82;
	shr.u32 	%r1680, %r1643, 24;
	mul.wide.u32 	%rd1399, %r1680, 4;
	mov.u64 	%rd1400, m11300_comp$s_td4;
	add.s64 	%rd1401, %rd1400, %rd1399;
	ld.shared.u32 	%r1681, [%rd1401];
	and.b32  	%r1682, %r1681, -16777216;
	bfe.u32 	%r1683, %r1679, 16, 8;
	mul.wide.u32 	%rd1402, %r1683, 4;
	add.s64 	%rd1403, %rd1400, %rd1402;
	ld.shared.u32 	%r1684, [%rd1403];
	and.b32  	%r1685, %r1684, 16711680;
	or.b32  	%r1686, %r1685, %r1682;
	bfe.u32 	%r1687, %r1667, 8, 8;
	mul.wide.u32 	%rd1404, %r1687, 4;
	add.s64 	%rd1405, %rd1400, %rd1404;
	ld.shared.u32 	%r1688, [%rd1405];
	and.b32  	%r1689, %r1688, 65280;
	or.b32  	%r1690, %r1686, %r1689;
	and.b32  	%r1691, %r1655, 255;
	mul.wide.u32 	%rd1406, %r1691, 4;
	add.s64 	%rd1407, %rd1400, %rd1406;
	ld.shared.u8 	%r1692, [%rd1407];
	or.b32  	%r1693, %r1690, %r1692;
	shr.u32 	%r1694, %r1655, 24;
	mul.wide.u32 	%rd1408, %r1694, 4;
	add.s64 	%rd1409, %rd1400, %rd1408;
	ld.shared.u32 	%r1695, [%rd1409];
	and.b32  	%r1696, %r1695, -16777216;
	bfe.u32 	%r1697, %r1643, 16, 8;
	mul.wide.u32 	%rd1410, %r1697, 4;
	add.s64 	%rd1411, %rd1400, %rd1410;
	ld.shared.u32 	%r1698, [%rd1411];
	and.b32  	%r1699, %r1698, 16711680;
	or.b32  	%r1700, %r1699, %r1696;
	bfe.u32 	%r1701, %r1679, 8, 8;
	mul.wide.u32 	%rd1412, %r1701, 4;
	add.s64 	%rd1413, %rd1400, %rd1412;
	ld.shared.u32 	%r1702, [%rd1413];
	and.b32  	%r1703, %r1702, 65280;
	or.b32  	%r1704, %r1700, %r1703;
	and.b32  	%r1705, %r1667, 255;
	mul.wide.u32 	%rd1414, %r1705, 4;
	add.s64 	%rd1415, %rd1400, %rd1414;
	ld.shared.u8 	%r1706, [%rd1415];
	or.b32  	%r1707, %r1704, %r1706;
	shr.u32 	%r1708, %r1667, 24;
	mul.wide.u32 	%rd1416, %r1708, 4;
	add.s64 	%rd1417, %rd1400, %rd1416;
	ld.shared.u32 	%r1709, [%rd1417];
	and.b32  	%r1710, %r1709, -16777216;
	bfe.u32 	%r1711, %r1655, 16, 8;
	mul.wide.u32 	%rd1418, %r1711, 4;
	add.s64 	%rd1419, %rd1400, %rd1418;
	ld.shared.u32 	%r1712, [%rd1419];
	and.b32  	%r1713, %r1712, 16711680;
	or.b32  	%r1714, %r1713, %r1710;
	bfe.u32 	%r1715, %r1643, 8, 8;
	mul.wide.u32 	%rd1420, %r1715, 4;
	add.s64 	%rd1421, %rd1400, %rd1420;
	ld.shared.u32 	%r1716, [%rd1421];
	and.b32  	%r1717, %r1716, 65280;
	or.b32  	%r1718, %r1714, %r1717;
	and.b32  	%r1719, %r1679, 255;
	mul.wide.u32 	%rd1422, %r1719, 4;
	add.s64 	%rd1423, %rd1400, %rd1422;
	ld.shared.u8 	%r1720, [%rd1423];
	or.b32  	%r1721, %r1718, %r1720;
	shr.u32 	%r1722, %r1679, 24;
	mul.wide.u32 	%rd1424, %r1722, 4;
	add.s64 	%rd1425, %rd1400, %rd1424;
	ld.shared.u32 	%r1723, [%rd1425];
	and.b32  	%r1724, %r1723, -16777216;
	bfe.u32 	%r1725, %r1667, 16, 8;
	mul.wide.u32 	%rd1426, %r1725, 4;
	add.s64 	%rd1427, %rd1400, %rd1426;
	ld.shared.u32 	%r1726, [%rd1427];
	and.b32  	%r1727, %r1726, 16711680;
	or.b32  	%r1728, %r1727, %r1724;
	bfe.u32 	%r1729, %r1655, 8, 8;
	mul.wide.u32 	%rd1428, %r1729, 4;
	add.s64 	%rd1429, %rd1400, %rd1428;
	ld.shared.u32 	%r1730, [%rd1429];
	and.b32  	%r1731, %r1730, 65280;
	or.b32  	%r1732, %r1728, %r1731;
	and.b32  	%r1733, %r1643, 255;
	mul.wide.u32 	%rd1430, %r1733, 4;
	add.s64 	%rd1431, %rd1400, %rd1430;
	ld.shared.u8 	%r1734, [%rd1431];
	or.b32  	%r1735, %r1732, %r1734;
	xor.b32  	%r1736, %r23, %r88;
	xor.b32  	%r1737, %r1736, %r1693;
	xor.b32  	%r1738, %r25, %r87;
	xor.b32  	%r1739, %r1738, %r1707;
	xor.b32  	%r1740, %r27, %r86;
	xor.b32  	%r1741, %r1740, %r1721;
	xor.b32  	%r1742, %r29, %r85;
	xor.b32  	%r1743, %r1742, %r1735;
	setp.eq.s32	%p21, %r1737, 269488144;
	setp.eq.s32	%p22, %r1739, 269488144;
	setp.eq.s32	%p23, %r1741, 269488144;
	setp.eq.s32	%p24, %r1743, 269488144;

BB3_13:
	and.pred  	%p17, %p21, %p22;
	and.pred  	%p18, %p17, %p23;
	and.pred  	%p19, %p18, %p24;
	@!%p19 bra 	BB3_17;
	bra.uni 	BB3_14;

BB3_14:
	ld.param.u64 	%rd1440, [m11300_comp_param_19];
	ld.param.u32 	%r1750, [m11300_comp_param_31];
	atom.global.add.u32 	%r94, [%rd1440], 1;
	setp.lt.u32	%p20, %r94, %r1750;
	@%p20 bra 	BB3_16;
	bra.uni 	BB3_15;

BB3_16:
	mov.b32	%r1758, %envreg3;
	mov.u32 	%r1757, %ntid.x;
	mov.u32 	%r1756, %ctaid.x;
	mov.u32 	%r1755, %tid.x;
	mad.lo.s32 	%r1754, %r1756, %r1757, %r1758;
	add.s32 	%r1753, %r1754, %r1755;
	ld.param.u32 	%r1752, [m11300_comp_param_32];
	ld.param.u32 	%r1751, [m11300_comp_param_27];
	ld.param.u64 	%rd1439, [m11300_comp_param_14];
	mul.wide.u32 	%rd1432, %r94, 20;
	add.s64 	%rd1433, %rd1439, %rd1432;
	st.global.u32 	[%rd1433], %r1751;
	mov.u32 	%r1745, 0;
	st.global.u32 	[%rd1433+4], %r1745;
	st.global.u32 	[%rd1433+8], %r1752;
	st.global.u32 	[%rd1433+12], %r1753;
	st.global.u32 	[%rd1433+16], %r1745;
	bra.uni 	BB3_17;

BB3_15:
	ld.param.u64 	%rd1441, [m11300_comp_param_19];
	atom.global.add.u32 	%r1744, [%rd1441], -1;

BB3_17:
	ret;
}


  