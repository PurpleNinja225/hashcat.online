//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: UNKNOWN
// Driver 
// Based on LLVM 3.4svn
//

.version 6.1
.target sm_61, texmode_independent
.address_size 64

	// .globl	gpu_memset
.const .align 4 .b8 c_append_helper[4096] = {255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255};
.const .align 8 .b8 k_sha512[640] = {34, 174, 40, 215, 152, 47, 138, 66, 205, 101, 239, 35, 145, 68, 55, 113, 47, 59, 77, 236, 207, 251, 192, 181, 188, 219, 137, 129, 165, 219, 181, 233, 56, 181, 72, 243, 91, 194, 86, 57, 25, 208, 5, 182, 241, 17, 241, 89, 155, 79, 25, 175, 164, 130, 63, 146, 24, 129, 109, 218, 213, 94, 28, 171, 66, 2, 3, 163, 152, 170, 7, 216, 190, 111, 112, 69, 1, 91, 131, 18, 140, 178, 228, 78, 190, 133, 49, 36, 226, 180, 255, 213, 195, 125, 12, 85, 111, 137, 123, 242, 116, 93, 190, 114, 177, 150, 22, 59, 254, 177, 222, 128, 53, 18, 199, 37, 167, 6, 220, 155, 148, 38, 105, 207, 116, 241, 155, 193, 210, 74, 241, 158, 193, 105, 155, 228, 227, 37, 79, 56, 134, 71, 190, 239, 181, 213, 140, 139, 198, 157, 193, 15, 101, 156, 172, 119, 204, 161, 12, 36, 117, 2, 43, 89, 111, 44, 233, 45, 131, 228, 166, 110, 170, 132, 116, 74, 212, 251, 65, 189, 220, 169, 176, 92, 181, 83, 17, 131, 218, 136, 249, 118, 171, 223, 102, 238, 82, 81, 62, 152, 16, 50, 180, 45, 109, 198, 49, 168, 63, 33, 251, 152, 200, 39, 3, 176, 228, 14, 239, 190, 199, 127, 89, 191, 194, 143, 168, 61, 243, 11, 224, 198, 37, 167, 10, 147, 71, 145, 167, 213, 111, 130, 3, 224, 81, 99, 202, 6, 112, 110, 14, 10, 103, 41, 41, 20, 252, 47, 210, 70, 133, 10, 183, 39, 38, 201, 38, 92, 56, 33, 27, 46, 237, 42, 196, 90, 252, 109, 44, 77, 223, 179, 149, 157, 19, 13, 56, 83, 222, 99, 175, 139, 84, 115, 10, 101, 168, 178, 119, 60, 187, 10, 106, 118, 230, 174, 237, 71, 46, 201, 194, 129, 59, 53, 130, 20, 133, 44, 114, 146, 100, 3, 241, 76, 161, 232, 191, 162, 1, 48, 66, 188, 75, 102, 26, 168, 145, 151, 248, 208, 112, 139, 75, 194, 48, 190, 84, 6, 163, 81, 108, 199, 24, 82, 239, 214, 25, 232, 146, 209, 16, 169, 101, 85, 36, 6, 153, 214, 42, 32, 113, 87, 133, 53, 14, 244, 184, 209, 187, 50, 112, 160, 106, 16, 200, 208, 210, 184, 22, 193, 164, 25, 83, 171, 65, 81, 8, 108, 55, 30, 153, 235, 142, 223, 76, 119, 72, 39, 168, 72, 155, 225, 181, 188, 176, 52, 99, 90, 201, 197, 179, 12, 28, 57, 203, 138, 65, 227, 74, 170, 216, 78, 115, 227, 99, 119, 79, 202, 156, 91, 163, 184, 178, 214, 243, 111, 46, 104, 252, 178, 239, 93, 238, 130, 143, 116, 96, 47, 23, 67, 111, 99, 165, 120, 114, 171, 240, 161, 20, 120, 200, 132, 236, 57, 100, 26, 8, 2, 199, 140, 40, 30, 99, 35, 250, 255, 190, 144, 233, 189, 130, 222, 235, 108, 80, 164, 21, 121, 198, 178, 247, 163, 249, 190, 43, 83, 114, 227, 242, 120, 113, 198, 156, 97, 38, 234, 206, 62, 39, 202, 7, 194, 192, 33, 199, 184, 134, 209, 30, 235, 224, 205, 214, 125, 218, 234, 120, 209, 110, 238, 127, 79, 125, 245, 186, 111, 23, 114, 170, 103, 240, 6, 166, 152, 200, 162, 197, 125, 99, 10, 174, 13, 249, 190, 4, 152, 63, 17, 27, 71, 28, 19, 53, 11, 113, 27, 132, 125, 4, 35, 245, 119, 219, 40, 147, 36, 199, 64, 123, 171, 202, 50, 188, 190, 201, 21, 10, 190, 158, 60, 76, 13, 16, 156, 196, 103, 29, 67, 182, 66, 62, 203, 190, 212, 197, 76, 42, 126, 101, 252, 156, 41, 127, 89, 236, 250, 214, 58, 171, 111, 203, 95, 23, 88, 71, 74, 140, 25, 68, 108};

.entry gpu_memset(
	.param .u64 .ptr .global .align 16 gpu_memset_param_0,
	.param .u32 gpu_memset_param_1,
	.param .u64 gpu_memset_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<8>;
	.reg .b64 	%rd<6>;


	ld.param.u64 	%rd1, [gpu_memset_param_0];
	ld.param.u32 	%r2, [gpu_memset_param_1];
	ld.param.u64 	%rd2, [gpu_memset_param_2];
	mov.b32	%r3, %envreg3;
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %ntid.x;
	mad.lo.s32 	%r6, %r4, %r5, %r3;
	mov.u32 	%r7, %tid.x;
	add.s32 	%r1, %r6, %r7;
	cvt.s64.s32	%rd3, %r1;
	setp.ge.u64	%p1, %rd3, %rd2;
	@%p1 bra 	BB0_2;

	mul.wide.s32 	%rd4, %r1, 16;
	add.s64 	%rd5, %rd1, %rd4;
	st.global.v4.u32 	[%rd5], {%r2, %r2, %r2, %r2};

BB0_2:
	ret;
}

.func sha512_update_128(
	.param .b64 sha512_update_128_param_0,
	.param .b64 sha512_update_128_param_1,
	.param .b64 sha512_update_128_param_2,
	.param .b64 sha512_update_128_param_3,
	.param .b64 sha512_update_128_param_4,
	.param .b64 sha512_update_128_param_5,
	.param .b64 sha512_update_128_param_6,
	.param .b64 sha512_update_128_param_7,
	.param .b64 sha512_update_128_param_8,
	.param .b32 sha512_update_128_param_9
)
{
	.reg .pred 	%p<97>;
	.reg .b32 	%r<8477>;
	.reg .b64 	%rd<1207>;


	ld.param.u64 	%rd94, [sha512_update_128_param_0];
	ld.param.u64 	%rd95, [sha512_update_128_param_1];
	ld.param.u64 	%rd96, [sha512_update_128_param_2];
	ld.param.u64 	%rd97, [sha512_update_128_param_3];
	ld.param.u64 	%rd98, [sha512_update_128_param_4];
	ld.param.u64 	%rd99, [sha512_update_128_param_5];
	ld.param.u64 	%rd100, [sha512_update_128_param_6];
	ld.param.u64 	%rd101, [sha512_update_128_param_7];
	ld.param.u64 	%rd102, [sha512_update_128_param_8];
	ld.param.u32 	%r571, [sha512_update_128_param_9];
	add.s64 	%rd1, %rd94, 192;
	ld.u32 	%r572, [%rd94+192];
	and.b32  	%r573, %r572, 127;
	add.s32 	%r574, %r572, %r571;
	st.u32 	[%rd94+192], %r574;
	add.s32 	%r575, %r573, %r571;
	setp.lt.s32	%p1, %r575, 128;
	bfe.u32 	%r1, %r572, 2, 5;
	and.b32  	%r576, %r572, 3;
	shl.b32 	%r577, %r576, 2;
	mov.u32 	%r578, 1985229328;
	shr.u32 	%r579, %r578, %r577;
	and.b32  	%r2, %r579, 65535;
	@%p1 bra 	BB1_92;
	bra.uni 	BB1_1;

BB1_92:
	setp.gt.s32	%p50, %r1, 15;
	@%p50 bra 	BB1_124;

	setp.gt.s32	%p74, %r1, 7;
	@%p74 bra 	BB1_109;

	setp.gt.s32	%p86, %r1, 3;
	@%p86 bra 	BB1_102;

	setp.gt.s32	%p92, %r1, 1;
	@%p92 bra 	BB1_99;

	setp.eq.s32	%p95, %r1, 0;
	@%p95 bra 	BB1_170;
	bra.uni 	BB1_97;

BB1_170:
	ld.u32 	%r8220, [%rd102+12];
	ld.u32 	%r8221, [%rd102+8];
	// inline asm
	prmt.b32 %r8219, %r8220, %r8221, %r2;
	// inline asm
	st.u32 	[%rd102+12], %r8219;
	ld.u32 	%r8224, [%rd102+8];
	ld.u32 	%r8225, [%rd102+4];
	// inline asm
	prmt.b32 %r8223, %r8224, %r8225, %r2;
	// inline asm
	st.u32 	[%rd102+8], %r8223;
	ld.u32 	%r8228, [%rd102+4];
	ld.u32 	%r8229, [%rd102];
	// inline asm
	prmt.b32 %r8227, %r8228, %r8229, %r2;
	// inline asm
	st.u32 	[%rd102+4], %r8227;
	ld.u32 	%r8232, [%rd102];
	ld.u32 	%r8233, [%rd101+12];
	// inline asm
	prmt.b32 %r8231, %r8232, %r8233, %r2;
	// inline asm
	st.u32 	[%rd102], %r8231;
	ld.u32 	%r8236, [%rd101+12];
	ld.u32 	%r8237, [%rd101+8];
	// inline asm
	prmt.b32 %r8235, %r8236, %r8237, %r2;
	// inline asm
	st.u32 	[%rd101+12], %r8235;
	ld.u32 	%r8240, [%rd101+8];
	ld.u32 	%r8241, [%rd101+4];
	// inline asm
	prmt.b32 %r8239, %r8240, %r8241, %r2;
	// inline asm
	st.u32 	[%rd101+8], %r8239;
	ld.u32 	%r8244, [%rd101+4];
	ld.u32 	%r8245, [%rd101];
	// inline asm
	prmt.b32 %r8243, %r8244, %r8245, %r2;
	// inline asm
	st.u32 	[%rd101+4], %r8243;
	ld.u32 	%r8248, [%rd101];
	ld.u32 	%r8249, [%rd100+12];
	// inline asm
	prmt.b32 %r8247, %r8248, %r8249, %r2;
	// inline asm
	st.u32 	[%rd101], %r8247;
	ld.u32 	%r8252, [%rd100+12];
	ld.u32 	%r8253, [%rd100+8];
	// inline asm
	prmt.b32 %r8251, %r8252, %r8253, %r2;
	// inline asm
	st.u32 	[%rd100+12], %r8251;
	ld.u32 	%r8256, [%rd100+8];
	ld.u32 	%r8257, [%rd100+4];
	// inline asm
	prmt.b32 %r8255, %r8256, %r8257, %r2;
	// inline asm
	st.u32 	[%rd100+8], %r8255;
	ld.u32 	%r8260, [%rd100+4];
	ld.u32 	%r8261, [%rd100];
	// inline asm
	prmt.b32 %r8259, %r8260, %r8261, %r2;
	// inline asm
	st.u32 	[%rd100+4], %r8259;
	ld.u32 	%r8264, [%rd100];
	ld.u32 	%r8265, [%rd99+12];
	// inline asm
	prmt.b32 %r8263, %r8264, %r8265, %r2;
	// inline asm
	st.u32 	[%rd100], %r8263;
	ld.u32 	%r8268, [%rd99+12];
	ld.u32 	%r8269, [%rd99+8];
	// inline asm
	prmt.b32 %r8267, %r8268, %r8269, %r2;
	// inline asm
	st.u32 	[%rd99+12], %r8267;
	ld.u32 	%r8272, [%rd99+8];
	ld.u32 	%r8273, [%rd99+4];
	// inline asm
	prmt.b32 %r8271, %r8272, %r8273, %r2;
	// inline asm
	st.u32 	[%rd99+8], %r8271;
	ld.u32 	%r8276, [%rd99+4];
	ld.u32 	%r8277, [%rd99];
	// inline asm
	prmt.b32 %r8275, %r8276, %r8277, %r2;
	// inline asm
	st.u32 	[%rd99+4], %r8275;
	ld.u32 	%r8280, [%rd99];
	ld.u32 	%r8281, [%rd98+12];
	// inline asm
	prmt.b32 %r8279, %r8280, %r8281, %r2;
	// inline asm
	st.u32 	[%rd99], %r8279;
	ld.u32 	%r8284, [%rd98+12];
	ld.u32 	%r8285, [%rd98+8];
	// inline asm
	prmt.b32 %r8283, %r8284, %r8285, %r2;
	// inline asm
	st.u32 	[%rd98+12], %r8283;
	ld.u32 	%r8288, [%rd98+8];
	ld.u32 	%r8289, [%rd98+4];
	// inline asm
	prmt.b32 %r8287, %r8288, %r8289, %r2;
	// inline asm
	st.u32 	[%rd98+8], %r8287;
	ld.u32 	%r8292, [%rd98+4];
	ld.u32 	%r8293, [%rd98];
	// inline asm
	prmt.b32 %r8291, %r8292, %r8293, %r2;
	// inline asm
	st.u32 	[%rd98+4], %r8291;
	ld.u32 	%r8296, [%rd98];
	ld.u32 	%r8297, [%rd97+12];
	// inline asm
	prmt.b32 %r8295, %r8296, %r8297, %r2;
	// inline asm
	st.u32 	[%rd98], %r8295;
	ld.u32 	%r8300, [%rd97+12];
	ld.u32 	%r8301, [%rd97+8];
	// inline asm
	prmt.b32 %r8299, %r8300, %r8301, %r2;
	// inline asm
	st.u32 	[%rd97+12], %r8299;
	ld.u32 	%r8304, [%rd97+8];
	ld.u32 	%r8305, [%rd97+4];
	// inline asm
	prmt.b32 %r8303, %r8304, %r8305, %r2;
	// inline asm
	st.u32 	[%rd97+8], %r8303;
	ld.u32 	%r8308, [%rd97+4];
	ld.u32 	%r8309, [%rd97];
	// inline asm
	prmt.b32 %r8307, %r8308, %r8309, %r2;
	// inline asm
	st.u32 	[%rd97+4], %r8307;
	ld.u32 	%r8312, [%rd97];
	ld.u32 	%r8313, [%rd96+12];
	// inline asm
	prmt.b32 %r8311, %r8312, %r8313, %r2;
	// inline asm
	st.u32 	[%rd97], %r8311;
	ld.u32 	%r8316, [%rd96+12];
	ld.u32 	%r8317, [%rd96+8];
	// inline asm
	prmt.b32 %r8315, %r8316, %r8317, %r2;
	// inline asm
	st.u32 	[%rd96+12], %r8315;
	ld.u32 	%r8320, [%rd96+8];
	ld.u32 	%r8321, [%rd96+4];
	// inline asm
	prmt.b32 %r8319, %r8320, %r8321, %r2;
	// inline asm
	st.u32 	[%rd96+8], %r8319;
	ld.u32 	%r8324, [%rd96+4];
	ld.u32 	%r8325, [%rd96];
	// inline asm
	prmt.b32 %r8323, %r8324, %r8325, %r2;
	// inline asm
	st.u32 	[%rd96+4], %r8323;
	ld.u32 	%r8328, [%rd96];
	ld.u32 	%r8329, [%rd95+12];
	// inline asm
	prmt.b32 %r8327, %r8328, %r8329, %r2;
	// inline asm
	st.u32 	[%rd96], %r8327;
	ld.u32 	%r8332, [%rd95+12];
	ld.u32 	%r8333, [%rd95+8];
	// inline asm
	prmt.b32 %r8331, %r8332, %r8333, %r2;
	// inline asm
	st.u32 	[%rd95+12], %r8331;
	ld.u32 	%r8336, [%rd95+8];
	ld.u32 	%r8337, [%rd95+4];
	// inline asm
	prmt.b32 %r8335, %r8336, %r8337, %r2;
	// inline asm
	st.u32 	[%rd95+8], %r8335;
	ld.u32 	%r8340, [%rd95+4];
	ld.u32 	%r8341, [%rd95];
	// inline asm
	prmt.b32 %r8339, %r8340, %r8341, %r2;
	// inline asm
	st.u32 	[%rd95+4], %r8339;
	ld.u32 	%r8344, [%rd95];
	mov.u32 	%r8345, 0;
	// inline asm
	prmt.b32 %r8476, %r8344, %r8345, %r2;
	// inline asm
	st.u32 	[%rd95], %r8476;
	bra.uni 	BB1_172;

BB1_1:
	setp.gt.s32	%p2, %r1, 15;
	@%p2 bra 	BB1_34;

	setp.gt.s32	%p26, %r1, 7;
	@%p26 bra 	BB1_19;

	setp.gt.s32	%p38, %r1, 3;
	@%p38 bra 	BB1_12;

	setp.gt.s32	%p44, %r1, 1;
	@%p44 bra 	BB1_8;

	setp.eq.s32	%p47, %r1, 0;
	@%p47 bra 	BB1_86;
	bra.uni 	BB1_6;

BB1_86:
	ld.u32 	%r5170, [%rd102+12];
	mov.u32 	%r8443, 0;
	// inline asm
	prmt.b32 %r8446, %r8443, %r5170, %r2;
	// inline asm
	ld.u32 	%r5173, [%rd102+12];
	ld.u32 	%r5174, [%rd102+8];
	// inline asm
	prmt.b32 %r5172, %r5173, %r5174, %r2;
	// inline asm
	st.u32 	[%rd102+12], %r5172;
	ld.u32 	%r5177, [%rd102+8];
	ld.u32 	%r5178, [%rd102+4];
	// inline asm
	prmt.b32 %r5176, %r5177, %r5178, %r2;
	// inline asm
	st.u32 	[%rd102+8], %r5176;
	ld.u32 	%r5181, [%rd102+4];
	ld.u32 	%r5182, [%rd102];
	// inline asm
	prmt.b32 %r5180, %r5181, %r5182, %r2;
	// inline asm
	st.u32 	[%rd102+4], %r5180;
	ld.u32 	%r5185, [%rd102];
	ld.u32 	%r5186, [%rd101+12];
	// inline asm
	prmt.b32 %r5184, %r5185, %r5186, %r2;
	// inline asm
	st.u32 	[%rd102], %r5184;
	ld.u32 	%r5189, [%rd101+12];
	ld.u32 	%r5190, [%rd101+8];
	// inline asm
	prmt.b32 %r5188, %r5189, %r5190, %r2;
	// inline asm
	st.u32 	[%rd101+12], %r5188;
	ld.u32 	%r5193, [%rd101+8];
	ld.u32 	%r5194, [%rd101+4];
	// inline asm
	prmt.b32 %r5192, %r5193, %r5194, %r2;
	// inline asm
	st.u32 	[%rd101+8], %r5192;
	ld.u32 	%r5197, [%rd101+4];
	ld.u32 	%r5198, [%rd101];
	// inline asm
	prmt.b32 %r5196, %r5197, %r5198, %r2;
	// inline asm
	st.u32 	[%rd101+4], %r5196;
	ld.u32 	%r5201, [%rd101];
	ld.u32 	%r5202, [%rd100+12];
	// inline asm
	prmt.b32 %r5200, %r5201, %r5202, %r2;
	// inline asm
	st.u32 	[%rd101], %r5200;
	ld.u32 	%r5205, [%rd100+12];
	ld.u32 	%r5206, [%rd100+8];
	// inline asm
	prmt.b32 %r5204, %r5205, %r5206, %r2;
	// inline asm
	st.u32 	[%rd100+12], %r5204;
	ld.u32 	%r5209, [%rd100+8];
	ld.u32 	%r5210, [%rd100+4];
	// inline asm
	prmt.b32 %r5208, %r5209, %r5210, %r2;
	// inline asm
	st.u32 	[%rd100+8], %r5208;
	ld.u32 	%r5213, [%rd100+4];
	ld.u32 	%r5214, [%rd100];
	// inline asm
	prmt.b32 %r5212, %r5213, %r5214, %r2;
	// inline asm
	st.u32 	[%rd100+4], %r5212;
	ld.u32 	%r5217, [%rd100];
	ld.u32 	%r5218, [%rd99+12];
	// inline asm
	prmt.b32 %r5216, %r5217, %r5218, %r2;
	// inline asm
	st.u32 	[%rd100], %r5216;
	ld.u32 	%r5221, [%rd99+12];
	ld.u32 	%r5222, [%rd99+8];
	// inline asm
	prmt.b32 %r5220, %r5221, %r5222, %r2;
	// inline asm
	st.u32 	[%rd99+12], %r5220;
	ld.u32 	%r5225, [%rd99+8];
	ld.u32 	%r5226, [%rd99+4];
	// inline asm
	prmt.b32 %r5224, %r5225, %r5226, %r2;
	// inline asm
	st.u32 	[%rd99+8], %r5224;
	ld.u32 	%r5229, [%rd99+4];
	ld.u32 	%r5230, [%rd99];
	// inline asm
	prmt.b32 %r5228, %r5229, %r5230, %r2;
	// inline asm
	st.u32 	[%rd99+4], %r5228;
	ld.u32 	%r5233, [%rd99];
	ld.u32 	%r5234, [%rd98+12];
	// inline asm
	prmt.b32 %r5232, %r5233, %r5234, %r2;
	// inline asm
	st.u32 	[%rd99], %r5232;
	ld.u32 	%r5237, [%rd98+12];
	ld.u32 	%r5238, [%rd98+8];
	// inline asm
	prmt.b32 %r5236, %r5237, %r5238, %r2;
	// inline asm
	st.u32 	[%rd98+12], %r5236;
	ld.u32 	%r5241, [%rd98+8];
	ld.u32 	%r5242, [%rd98+4];
	// inline asm
	prmt.b32 %r5240, %r5241, %r5242, %r2;
	// inline asm
	st.u32 	[%rd98+8], %r5240;
	ld.u32 	%r5245, [%rd98+4];
	ld.u32 	%r5246, [%rd98];
	// inline asm
	prmt.b32 %r5244, %r5245, %r5246, %r2;
	// inline asm
	st.u32 	[%rd98+4], %r5244;
	ld.u32 	%r5249, [%rd98];
	ld.u32 	%r5250, [%rd97+12];
	// inline asm
	prmt.b32 %r5248, %r5249, %r5250, %r2;
	// inline asm
	st.u32 	[%rd98], %r5248;
	ld.u32 	%r5253, [%rd97+12];
	ld.u32 	%r5254, [%rd97+8];
	// inline asm
	prmt.b32 %r5252, %r5253, %r5254, %r2;
	// inline asm
	st.u32 	[%rd97+12], %r5252;
	ld.u32 	%r5257, [%rd97+8];
	ld.u32 	%r5258, [%rd97+4];
	// inline asm
	prmt.b32 %r5256, %r5257, %r5258, %r2;
	// inline asm
	st.u32 	[%rd97+8], %r5256;
	ld.u32 	%r5261, [%rd97+4];
	ld.u32 	%r5262, [%rd97];
	// inline asm
	prmt.b32 %r5260, %r5261, %r5262, %r2;
	// inline asm
	st.u32 	[%rd97+4], %r5260;
	ld.u32 	%r5265, [%rd97];
	ld.u32 	%r5266, [%rd96+12];
	// inline asm
	prmt.b32 %r5264, %r5265, %r5266, %r2;
	// inline asm
	st.u32 	[%rd97], %r5264;
	ld.u32 	%r5269, [%rd96+12];
	ld.u32 	%r5270, [%rd96+8];
	// inline asm
	prmt.b32 %r5268, %r5269, %r5270, %r2;
	// inline asm
	st.u32 	[%rd96+12], %r5268;
	ld.u32 	%r5273, [%rd96+8];
	ld.u32 	%r5274, [%rd96+4];
	// inline asm
	prmt.b32 %r5272, %r5273, %r5274, %r2;
	// inline asm
	st.u32 	[%rd96+8], %r5272;
	ld.u32 	%r5277, [%rd96+4];
	ld.u32 	%r5278, [%rd96];
	// inline asm
	prmt.b32 %r5276, %r5277, %r5278, %r2;
	// inline asm
	st.u32 	[%rd96+4], %r5276;
	ld.u32 	%r5281, [%rd96];
	ld.u32 	%r5282, [%rd95+12];
	// inline asm
	prmt.b32 %r5280, %r5281, %r5282, %r2;
	// inline asm
	st.u32 	[%rd96], %r5280;
	ld.u32 	%r5285, [%rd95+12];
	ld.u32 	%r5286, [%rd95+8];
	// inline asm
	prmt.b32 %r5284, %r5285, %r5286, %r2;
	// inline asm
	st.u32 	[%rd95+12], %r5284;
	ld.u32 	%r5289, [%rd95+8];
	ld.u32 	%r5290, [%rd95+4];
	// inline asm
	prmt.b32 %r5288, %r5289, %r5290, %r2;
	// inline asm
	st.u32 	[%rd95+8], %r5288;
	ld.u32 	%r5293, [%rd95+4];
	ld.u32 	%r5294, [%rd95];
	// inline asm
	prmt.b32 %r5292, %r5293, %r5294, %r2;
	// inline asm
	st.u32 	[%rd95+4], %r5292;
	ld.u32 	%r5297, [%rd95];
	// inline asm
	prmt.b32 %r8442, %r5297, %r8443, %r2;
	// inline asm
	st.u32 	[%rd95], %r8442;
	mov.u32 	%r8444, %r8443;
	mov.u32 	%r8445, %r8443;
	bra.uni 	BB1_88;

BB1_124:
	setp.gt.s32	%p51, %r1, 23;
	@%p51 bra 	BB1_140;

	setp.gt.s32	%p63, %r1, 19;
	@%p63 bra 	BB1_133;

	setp.gt.s32	%p69, %r1, 17;
	@%p69 bra 	BB1_130;

	setp.eq.s32	%p72, %r1, 16;
	@%p72 bra 	BB1_162;
	bra.uni 	BB1_128;

BB1_162:
	ld.u32 	%r6700, [%rd98+12];
	ld.u32 	%r6701, [%rd98+8];
	// inline asm
	prmt.b32 %r6699, %r6700, %r6701, %r2;
	// inline asm
	st.u32 	[%rd102+12], %r6699;
	ld.u32 	%r6704, [%rd98+8];
	ld.u32 	%r6705, [%rd98+4];
	// inline asm
	prmt.b32 %r6703, %r6704, %r6705, %r2;
	// inline asm
	st.u32 	[%rd102+8], %r6703;
	ld.u32 	%r6708, [%rd98+4];
	ld.u32 	%r6709, [%rd98];
	// inline asm
	prmt.b32 %r6707, %r6708, %r6709, %r2;
	// inline asm
	st.u32 	[%rd102+4], %r6707;
	ld.u32 	%r6712, [%rd98];
	ld.u32 	%r6713, [%rd97+12];
	// inline asm
	prmt.b32 %r6711, %r6712, %r6713, %r2;
	// inline asm
	st.u32 	[%rd102], %r6711;
	ld.u32 	%r6716, [%rd97+12];
	ld.u32 	%r6717, [%rd97+8];
	// inline asm
	prmt.b32 %r6715, %r6716, %r6717, %r2;
	// inline asm
	st.u32 	[%rd101+12], %r6715;
	ld.u32 	%r6720, [%rd97+8];
	ld.u32 	%r6721, [%rd97+4];
	// inline asm
	prmt.b32 %r6719, %r6720, %r6721, %r2;
	// inline asm
	st.u32 	[%rd101+8], %r6719;
	ld.u32 	%r6724, [%rd97+4];
	ld.u32 	%r6725, [%rd97];
	// inline asm
	prmt.b32 %r6723, %r6724, %r6725, %r2;
	// inline asm
	st.u32 	[%rd101+4], %r6723;
	ld.u32 	%r6728, [%rd97];
	ld.u32 	%r6729, [%rd96+12];
	// inline asm
	prmt.b32 %r6727, %r6728, %r6729, %r2;
	// inline asm
	st.u32 	[%rd101], %r6727;
	ld.u32 	%r6732, [%rd96+12];
	ld.u32 	%r6733, [%rd96+8];
	// inline asm
	prmt.b32 %r6731, %r6732, %r6733, %r2;
	// inline asm
	st.u32 	[%rd100+12], %r6731;
	ld.u32 	%r6736, [%rd96+8];
	ld.u32 	%r6737, [%rd96+4];
	// inline asm
	prmt.b32 %r6735, %r6736, %r6737, %r2;
	// inline asm
	st.u32 	[%rd100+8], %r6735;
	ld.u32 	%r6740, [%rd96+4];
	ld.u32 	%r6741, [%rd96];
	// inline asm
	prmt.b32 %r6739, %r6740, %r6741, %r2;
	// inline asm
	st.u32 	[%rd100+4], %r6739;
	ld.u32 	%r6744, [%rd96];
	ld.u32 	%r6745, [%rd95+12];
	// inline asm
	prmt.b32 %r6743, %r6744, %r6745, %r2;
	// inline asm
	st.u32 	[%rd100], %r6743;
	ld.u32 	%r6748, [%rd95+12];
	ld.u32 	%r6749, [%rd95+8];
	// inline asm
	prmt.b32 %r6747, %r6748, %r6749, %r2;
	// inline asm
	st.u32 	[%rd99+12], %r6747;
	ld.u32 	%r6752, [%rd95+8];
	ld.u32 	%r6753, [%rd95+4];
	// inline asm
	prmt.b32 %r6751, %r6752, %r6753, %r2;
	// inline asm
	st.u32 	[%rd99+8], %r6751;
	ld.u32 	%r6756, [%rd95+4];
	ld.u32 	%r6757, [%rd95];
	// inline asm
	prmt.b32 %r6755, %r6756, %r6757, %r2;
	// inline asm
	st.u32 	[%rd99+4], %r6755;
	ld.u32 	%r6760, [%rd95];
	mov.u32 	%r8476, 0;
	// inline asm
	prmt.b32 %r6759, %r6760, %r8476, %r2;
	// inline asm
	st.u32 	[%rd99], %r6759;
	st.u32 	[%rd98+12], %r8476;
	st.u32 	[%rd98+8], %r8476;
	st.u32 	[%rd98+4], %r8476;
	st.u32 	[%rd98], %r8476;
	st.u32 	[%rd97+12], %r8476;
	st.u32 	[%rd97+8], %r8476;
	st.u32 	[%rd97+4], %r8476;
	st.u32 	[%rd97], %r8476;
	st.u32 	[%rd96+12], %r8476;
	st.u32 	[%rd96+8], %r8476;
	st.u32 	[%rd96+4], %r8476;
	st.u32 	[%rd96], %r8476;
	st.u32 	[%rd95+12], %r8476;
	st.u32 	[%rd95+8], %r8476;
	mov.u64 	%rd1165, 0;
	st.u32 	[%rd95+4], %rd1165;
	st.u32 	[%rd95], %rd1165;
	bra.uni 	BB1_172;

BB1_34:
	setp.gt.s32	%p3, %r1, 23;
	@%p3 bra 	BB1_50;

	setp.gt.s32	%p15, %r1, 19;
	@%p15 bra 	BB1_43;

	setp.gt.s32	%p21, %r1, 17;
	@%p21 bra 	BB1_40;

	setp.eq.s32	%p24, %r1, 16;
	@%p24 bra 	BB1_72;
	bra.uni 	BB1_38;

BB1_72:
	ld.u32 	%r2682, [%rd102+12];
	mov.u32 	%r8442, 0;
	// inline asm
	prmt.b32 %r8462, %r8442, %r2682, %r2;
	// inline asm
	ld.u32 	%r2685, [%rd102+12];
	ld.u32 	%r2686, [%rd102+8];
	// inline asm
	prmt.b32 %r8455, %r2685, %r2686, %r2;
	// inline asm
	ld.u32 	%r2689, [%rd102+8];
	ld.u32 	%r2690, [%rd102+4];
	// inline asm
	prmt.b32 %r8456, %r2689, %r2690, %r2;
	// inline asm
	ld.u32 	%r2693, [%rd102+4];
	ld.u32 	%r2694, [%rd102];
	// inline asm
	prmt.b32 %r8457, %r2693, %r2694, %r2;
	// inline asm
	ld.u32 	%r2697, [%rd102];
	ld.u32 	%r2698, [%rd101+12];
	// inline asm
	prmt.b32 %r8458, %r2697, %r2698, %r2;
	// inline asm
	ld.u32 	%r2701, [%rd101+12];
	ld.u32 	%r2702, [%rd101+8];
	// inline asm
	prmt.b32 %r8451, %r2701, %r2702, %r2;
	// inline asm
	ld.u32 	%r2705, [%rd101+8];
	ld.u32 	%r2706, [%rd101+4];
	// inline asm
	prmt.b32 %r8452, %r2705, %r2706, %r2;
	// inline asm
	ld.u32 	%r2709, [%rd101+4];
	ld.u32 	%r2710, [%rd101];
	// inline asm
	prmt.b32 %r8453, %r2709, %r2710, %r2;
	// inline asm
	ld.u32 	%r2713, [%rd101];
	ld.u32 	%r2714, [%rd100+12];
	// inline asm
	prmt.b32 %r8454, %r2713, %r2714, %r2;
	// inline asm
	ld.u32 	%r2717, [%rd100+12];
	ld.u32 	%r2718, [%rd100+8];
	// inline asm
	prmt.b32 %r8447, %r2717, %r2718, %r2;
	// inline asm
	ld.u32 	%r2721, [%rd100+8];
	ld.u32 	%r2722, [%rd100+4];
	// inline asm
	prmt.b32 %r8448, %r2721, %r2722, %r2;
	// inline asm
	ld.u32 	%r2725, [%rd100+4];
	ld.u32 	%r2726, [%rd100];
	// inline asm
	prmt.b32 %r8449, %r2725, %r2726, %r2;
	// inline asm
	ld.u32 	%r2729, [%rd100];
	ld.u32 	%r2730, [%rd99+12];
	// inline asm
	prmt.b32 %r8450, %r2729, %r2730, %r2;
	// inline asm
	ld.u32 	%r2733, [%rd99+12];
	ld.u32 	%r2734, [%rd99+8];
	// inline asm
	prmt.b32 %r8443, %r2733, %r2734, %r2;
	// inline asm
	ld.u32 	%r2737, [%rd99+8];
	ld.u32 	%r2738, [%rd99+4];
	// inline asm
	prmt.b32 %r8444, %r2737, %r2738, %r2;
	// inline asm
	ld.u32 	%r2741, [%rd99+4];
	ld.u32 	%r2742, [%rd99];
	// inline asm
	prmt.b32 %r8445, %r2741, %r2742, %r2;
	// inline asm
	ld.u32 	%r2745, [%rd99];
	ld.u32 	%r2746, [%rd98+12];
	// inline asm
	prmt.b32 %r8446, %r2745, %r2746, %r2;
	// inline asm
	ld.u32 	%r2749, [%rd98+12];
	ld.u32 	%r2750, [%rd98+8];
	// inline asm
	prmt.b32 %r2748, %r2749, %r2750, %r2;
	// inline asm
	st.u32 	[%rd102+12], %r2748;
	ld.u32 	%r2753, [%rd98+8];
	ld.u32 	%r2754, [%rd98+4];
	// inline asm
	prmt.b32 %r2752, %r2753, %r2754, %r2;
	// inline asm
	st.u32 	[%rd102+8], %r2752;
	ld.u32 	%r2757, [%rd98+4];
	ld.u32 	%r2758, [%rd98];
	// inline asm
	prmt.b32 %r2756, %r2757, %r2758, %r2;
	// inline asm
	st.u32 	[%rd102+4], %r2756;
	ld.u32 	%r2761, [%rd98];
	ld.u32 	%r2762, [%rd97+12];
	// inline asm
	prmt.b32 %r2760, %r2761, %r2762, %r2;
	// inline asm
	st.u32 	[%rd102], %r2760;
	ld.u32 	%r2765, [%rd97+12];
	ld.u32 	%r2766, [%rd97+8];
	// inline asm
	prmt.b32 %r2764, %r2765, %r2766, %r2;
	// inline asm
	st.u32 	[%rd101+12], %r2764;
	ld.u32 	%r2769, [%rd97+8];
	ld.u32 	%r2770, [%rd97+4];
	// inline asm
	prmt.b32 %r2768, %r2769, %r2770, %r2;
	// inline asm
	st.u32 	[%rd101+8], %r2768;
	ld.u32 	%r2773, [%rd97+4];
	ld.u32 	%r2774, [%rd97];
	// inline asm
	prmt.b32 %r2772, %r2773, %r2774, %r2;
	// inline asm
	st.u32 	[%rd101+4], %r2772;
	ld.u32 	%r2777, [%rd97];
	ld.u32 	%r2778, [%rd96+12];
	// inline asm
	prmt.b32 %r2776, %r2777, %r2778, %r2;
	// inline asm
	st.u32 	[%rd101], %r2776;
	ld.u32 	%r2781, [%rd96+12];
	ld.u32 	%r2782, [%rd96+8];
	// inline asm
	prmt.b32 %r2780, %r2781, %r2782, %r2;
	// inline asm
	st.u32 	[%rd100+12], %r2780;
	ld.u32 	%r2785, [%rd96+8];
	ld.u32 	%r2786, [%rd96+4];
	// inline asm
	prmt.b32 %r2784, %r2785, %r2786, %r2;
	// inline asm
	st.u32 	[%rd100+8], %r2784;
	ld.u32 	%r2789, [%rd96+4];
	ld.u32 	%r2790, [%rd96];
	// inline asm
	prmt.b32 %r2788, %r2789, %r2790, %r2;
	// inline asm
	st.u32 	[%rd100+4], %r2788;
	ld.u32 	%r2793, [%rd96];
	ld.u32 	%r2794, [%rd95+12];
	// inline asm
	prmt.b32 %r2792, %r2793, %r2794, %r2;
	// inline asm
	st.u32 	[%rd100], %r2792;
	ld.u32 	%r2797, [%rd95+12];
	ld.u32 	%r2798, [%rd95+8];
	// inline asm
	prmt.b32 %r2796, %r2797, %r2798, %r2;
	// inline asm
	st.u32 	[%rd99+12], %r2796;
	ld.u32 	%r2801, [%rd95+8];
	ld.u32 	%r2802, [%rd95+4];
	// inline asm
	prmt.b32 %r2800, %r2801, %r2802, %r2;
	// inline asm
	st.u32 	[%rd99+8], %r2800;
	ld.u32 	%r2805, [%rd95+4];
	ld.u32 	%r2806, [%rd95];
	// inline asm
	prmt.b32 %r2804, %r2805, %r2806, %r2;
	// inline asm
	st.u32 	[%rd99+4], %r2804;
	ld.u32 	%r2809, [%rd95];
	// inline asm
	prmt.b32 %r2808, %r2809, %r8442, %r2;
	// inline asm
	st.u32 	[%rd99], %r2808;
	st.u32 	[%rd98+12], %r8442;
	st.u32 	[%rd98+8], %r8442;
	st.u32 	[%rd98+4], %r8442;
	st.u32 	[%rd98], %r8442;
	st.u32 	[%rd97+12], %r8442;
	st.u32 	[%rd97+8], %r8442;
	st.u32 	[%rd97+4], %r8442;
	st.u32 	[%rd97], %r8442;
	st.u32 	[%rd96+12], %r8442;
	st.u32 	[%rd96+8], %r8442;
	st.u32 	[%rd96+4], %r8442;
	st.u32 	[%rd96], %r8442;
	st.u32 	[%rd95+12], %r8442;
	st.u32 	[%rd95+8], %r8442;
	mov.u64 	%rd118, 0;
	st.u32 	[%rd95+4], %rd118;
	st.u32 	[%rd95], %rd118;
	mov.u32 	%r8459, %r8442;
	mov.u32 	%r8460, %r8442;
	mov.u32 	%r8461, %r8442;
	bra.uni 	BB1_82;

BB1_109:
	setp.gt.s32	%p75, %r1, 11;
	@%p75 bra 	BB1_117;

	setp.gt.s32	%p81, %r1, 9;
	@%p81 bra 	BB1_114;

	setp.eq.s32	%p84, %r1, 8;
	@%p84 bra 	BB1_166;
	bra.uni 	BB1_112;

BB1_166:
	ld.u32 	%r7332, [%rd100+12];
	ld.u32 	%r7333, [%rd100+8];
	// inline asm
	prmt.b32 %r7331, %r7332, %r7333, %r2;
	// inline asm
	st.u32 	[%rd102+12], %r7331;
	ld.u32 	%r7336, [%rd100+8];
	ld.u32 	%r7337, [%rd100+4];
	// inline asm
	prmt.b32 %r7335, %r7336, %r7337, %r2;
	// inline asm
	st.u32 	[%rd102+8], %r7335;
	ld.u32 	%r7340, [%rd100+4];
	ld.u32 	%r7341, [%rd100];
	// inline asm
	prmt.b32 %r7339, %r7340, %r7341, %r2;
	// inline asm
	st.u32 	[%rd102+4], %r7339;
	ld.u32 	%r7344, [%rd100];
	ld.u32 	%r7345, [%rd99+12];
	// inline asm
	prmt.b32 %r7343, %r7344, %r7345, %r2;
	// inline asm
	st.u32 	[%rd102], %r7343;
	ld.u32 	%r7348, [%rd99+12];
	ld.u32 	%r7349, [%rd99+8];
	// inline asm
	prmt.b32 %r7347, %r7348, %r7349, %r2;
	// inline asm
	st.u32 	[%rd101+12], %r7347;
	ld.u32 	%r7352, [%rd99+8];
	ld.u32 	%r7353, [%rd99+4];
	// inline asm
	prmt.b32 %r7351, %r7352, %r7353, %r2;
	// inline asm
	st.u32 	[%rd101+8], %r7351;
	ld.u32 	%r7356, [%rd99+4];
	ld.u32 	%r7357, [%rd99];
	// inline asm
	prmt.b32 %r7355, %r7356, %r7357, %r2;
	// inline asm
	st.u32 	[%rd101+4], %r7355;
	ld.u32 	%r7360, [%rd99];
	ld.u32 	%r7361, [%rd98+12];
	// inline asm
	prmt.b32 %r7359, %r7360, %r7361, %r2;
	// inline asm
	st.u32 	[%rd101], %r7359;
	ld.u32 	%r7364, [%rd98+12];
	ld.u32 	%r7365, [%rd98+8];
	// inline asm
	prmt.b32 %r7363, %r7364, %r7365, %r2;
	// inline asm
	st.u32 	[%rd100+12], %r7363;
	ld.u32 	%r7368, [%rd98+8];
	ld.u32 	%r7369, [%rd98+4];
	// inline asm
	prmt.b32 %r7367, %r7368, %r7369, %r2;
	// inline asm
	st.u32 	[%rd100+8], %r7367;
	ld.u32 	%r7372, [%rd98+4];
	ld.u32 	%r7373, [%rd98];
	// inline asm
	prmt.b32 %r7371, %r7372, %r7373, %r2;
	// inline asm
	st.u32 	[%rd100+4], %r7371;
	ld.u32 	%r7376, [%rd98];
	ld.u32 	%r7377, [%rd97+12];
	// inline asm
	prmt.b32 %r7375, %r7376, %r7377, %r2;
	// inline asm
	st.u32 	[%rd100], %r7375;
	ld.u32 	%r7380, [%rd97+12];
	ld.u32 	%r7381, [%rd97+8];
	// inline asm
	prmt.b32 %r7379, %r7380, %r7381, %r2;
	// inline asm
	st.u32 	[%rd99+12], %r7379;
	ld.u32 	%r7384, [%rd97+8];
	ld.u32 	%r7385, [%rd97+4];
	// inline asm
	prmt.b32 %r7383, %r7384, %r7385, %r2;
	// inline asm
	st.u32 	[%rd99+8], %r7383;
	ld.u32 	%r7388, [%rd97+4];
	ld.u32 	%r7389, [%rd97];
	// inline asm
	prmt.b32 %r7387, %r7388, %r7389, %r2;
	// inline asm
	st.u32 	[%rd99+4], %r7387;
	ld.u32 	%r7392, [%rd97];
	ld.u32 	%r7393, [%rd96+12];
	// inline asm
	prmt.b32 %r7391, %r7392, %r7393, %r2;
	// inline asm
	st.u32 	[%rd99], %r7391;
	ld.u32 	%r7396, [%rd96+12];
	ld.u32 	%r7397, [%rd96+8];
	// inline asm
	prmt.b32 %r7395, %r7396, %r7397, %r2;
	// inline asm
	st.u32 	[%rd98+12], %r7395;
	ld.u32 	%r7400, [%rd96+8];
	ld.u32 	%r7401, [%rd96+4];
	// inline asm
	prmt.b32 %r7399, %r7400, %r7401, %r2;
	// inline asm
	st.u32 	[%rd98+8], %r7399;
	ld.u32 	%r7404, [%rd96+4];
	ld.u32 	%r7405, [%rd96];
	// inline asm
	prmt.b32 %r7403, %r7404, %r7405, %r2;
	// inline asm
	st.u32 	[%rd98+4], %r7403;
	ld.u32 	%r7408, [%rd96];
	ld.u32 	%r7409, [%rd95+12];
	// inline asm
	prmt.b32 %r7407, %r7408, %r7409, %r2;
	// inline asm
	st.u32 	[%rd98], %r7407;
	ld.u32 	%r7412, [%rd95+12];
	ld.u32 	%r7413, [%rd95+8];
	// inline asm
	prmt.b32 %r7411, %r7412, %r7413, %r2;
	// inline asm
	st.u32 	[%rd97+12], %r7411;
	ld.u32 	%r7416, [%rd95+8];
	ld.u32 	%r7417, [%rd95+4];
	// inline asm
	prmt.b32 %r7415, %r7416, %r7417, %r2;
	// inline asm
	st.u32 	[%rd97+8], %r7415;
	ld.u32 	%r7420, [%rd95+4];
	ld.u32 	%r7421, [%rd95];
	// inline asm
	prmt.b32 %r7419, %r7420, %r7421, %r2;
	// inline asm
	st.u32 	[%rd97+4], %r7419;
	ld.u32 	%r7424, [%rd95];
	mov.u32 	%r8476, 0;
	// inline asm
	prmt.b32 %r7423, %r7424, %r8476, %r2;
	// inline asm
	st.u32 	[%rd97], %r7423;
	st.u32 	[%rd96+12], %r8476;
	st.u32 	[%rd96+8], %r8476;
	st.u32 	[%rd96+4], %r8476;
	st.u32 	[%rd96], %r8476;
	st.u32 	[%rd95+12], %r8476;
	st.u32 	[%rd95+8], %r8476;
	mov.u64 	%rd1173, 0;
	st.u32 	[%rd95+4], %rd1173;
	st.u32 	[%rd95], %rd1173;
	bra.uni 	BB1_172;

BB1_19:
	setp.gt.s32	%p27, %r1, 11;
	@%p27 bra 	BB1_27;

	setp.gt.s32	%p33, %r1, 9;
	@%p33 bra 	BB1_24;

	setp.eq.s32	%p36, %r1, 8;
	@%p36 bra 	BB1_76;
	bra.uni 	BB1_22;

BB1_76:
	ld.u32 	%r3894, [%rd102+12];
	mov.u32 	%r8442, 0;
	// inline asm
	prmt.b32 %r8454, %r8442, %r3894, %r2;
	// inline asm
	ld.u32 	%r3897, [%rd102+12];
	ld.u32 	%r3898, [%rd102+8];
	// inline asm
	prmt.b32 %r8447, %r3897, %r3898, %r2;
	// inline asm
	ld.u32 	%r3901, [%rd102+8];
	ld.u32 	%r3902, [%rd102+4];
	// inline asm
	prmt.b32 %r8448, %r3901, %r3902, %r2;
	// inline asm
	ld.u32 	%r3905, [%rd102+4];
	ld.u32 	%r3906, [%rd102];
	// inline asm
	prmt.b32 %r8449, %r3905, %r3906, %r2;
	// inline asm
	ld.u32 	%r3909, [%rd102];
	ld.u32 	%r3910, [%rd101+12];
	// inline asm
	prmt.b32 %r8450, %r3909, %r3910, %r2;
	// inline asm
	ld.u32 	%r3913, [%rd101+12];
	ld.u32 	%r3914, [%rd101+8];
	// inline asm
	prmt.b32 %r8443, %r3913, %r3914, %r2;
	// inline asm
	ld.u32 	%r3917, [%rd101+8];
	ld.u32 	%r3918, [%rd101+4];
	// inline asm
	prmt.b32 %r8444, %r3917, %r3918, %r2;
	// inline asm
	ld.u32 	%r3921, [%rd101+4];
	ld.u32 	%r3922, [%rd101];
	// inline asm
	prmt.b32 %r8445, %r3921, %r3922, %r2;
	// inline asm
	ld.u32 	%r3925, [%rd101];
	ld.u32 	%r3926, [%rd100+12];
	// inline asm
	prmt.b32 %r8446, %r3925, %r3926, %r2;
	// inline asm
	ld.u32 	%r3929, [%rd100+12];
	ld.u32 	%r3930, [%rd100+8];
	// inline asm
	prmt.b32 %r3928, %r3929, %r3930, %r2;
	// inline asm
	st.u32 	[%rd102+12], %r3928;
	ld.u32 	%r3933, [%rd100+8];
	ld.u32 	%r3934, [%rd100+4];
	// inline asm
	prmt.b32 %r3932, %r3933, %r3934, %r2;
	// inline asm
	st.u32 	[%rd102+8], %r3932;
	ld.u32 	%r3937, [%rd100+4];
	ld.u32 	%r3938, [%rd100];
	// inline asm
	prmt.b32 %r3936, %r3937, %r3938, %r2;
	// inline asm
	st.u32 	[%rd102+4], %r3936;
	ld.u32 	%r3941, [%rd100];
	ld.u32 	%r3942, [%rd99+12];
	// inline asm
	prmt.b32 %r3940, %r3941, %r3942, %r2;
	// inline asm
	st.u32 	[%rd102], %r3940;
	ld.u32 	%r3945, [%rd99+12];
	ld.u32 	%r3946, [%rd99+8];
	// inline asm
	prmt.b32 %r3944, %r3945, %r3946, %r2;
	// inline asm
	st.u32 	[%rd101+12], %r3944;
	ld.u32 	%r3949, [%rd99+8];
	ld.u32 	%r3950, [%rd99+4];
	// inline asm
	prmt.b32 %r3948, %r3949, %r3950, %r2;
	// inline asm
	st.u32 	[%rd101+8], %r3948;
	ld.u32 	%r3953, [%rd99+4];
	ld.u32 	%r3954, [%rd99];
	// inline asm
	prmt.b32 %r3952, %r3953, %r3954, %r2;
	// inline asm
	st.u32 	[%rd101+4], %r3952;
	ld.u32 	%r3957, [%rd99];
	ld.u32 	%r3958, [%rd98+12];
	// inline asm
	prmt.b32 %r3956, %r3957, %r3958, %r2;
	// inline asm
	st.u32 	[%rd101], %r3956;
	ld.u32 	%r3961, [%rd98+12];
	ld.u32 	%r3962, [%rd98+8];
	// inline asm
	prmt.b32 %r3960, %r3961, %r3962, %r2;
	// inline asm
	st.u32 	[%rd100+12], %r3960;
	ld.u32 	%r3965, [%rd98+8];
	ld.u32 	%r3966, [%rd98+4];
	// inline asm
	prmt.b32 %r3964, %r3965, %r3966, %r2;
	// inline asm
	st.u32 	[%rd100+8], %r3964;
	ld.u32 	%r3969, [%rd98+4];
	ld.u32 	%r3970, [%rd98];
	// inline asm
	prmt.b32 %r3968, %r3969, %r3970, %r2;
	// inline asm
	st.u32 	[%rd100+4], %r3968;
	ld.u32 	%r3973, [%rd98];
	ld.u32 	%r3974, [%rd97+12];
	// inline asm
	prmt.b32 %r3972, %r3973, %r3974, %r2;
	// inline asm
	st.u32 	[%rd100], %r3972;
	ld.u32 	%r3977, [%rd97+12];
	ld.u32 	%r3978, [%rd97+8];
	// inline asm
	prmt.b32 %r3976, %r3977, %r3978, %r2;
	// inline asm
	st.u32 	[%rd99+12], %r3976;
	ld.u32 	%r3981, [%rd97+8];
	ld.u32 	%r3982, [%rd97+4];
	// inline asm
	prmt.b32 %r3980, %r3981, %r3982, %r2;
	// inline asm
	st.u32 	[%rd99+8], %r3980;
	ld.u32 	%r3985, [%rd97+4];
	ld.u32 	%r3986, [%rd97];
	// inline asm
	prmt.b32 %r3984, %r3985, %r3986, %r2;
	// inline asm
	st.u32 	[%rd99+4], %r3984;
	ld.u32 	%r3989, [%rd97];
	ld.u32 	%r3990, [%rd96+12];
	// inline asm
	prmt.b32 %r3988, %r3989, %r3990, %r2;
	// inline asm
	st.u32 	[%rd99], %r3988;
	ld.u32 	%r3993, [%rd96+12];
	ld.u32 	%r3994, [%rd96+8];
	// inline asm
	prmt.b32 %r3992, %r3993, %r3994, %r2;
	// inline asm
	st.u32 	[%rd98+12], %r3992;
	ld.u32 	%r3997, [%rd96+8];
	ld.u32 	%r3998, [%rd96+4];
	// inline asm
	prmt.b32 %r3996, %r3997, %r3998, %r2;
	// inline asm
	st.u32 	[%rd98+8], %r3996;
	ld.u32 	%r4001, [%rd96+4];
	ld.u32 	%r4002, [%rd96];
	// inline asm
	prmt.b32 %r4000, %r4001, %r4002, %r2;
	// inline asm
	st.u32 	[%rd98+4], %r4000;
	ld.u32 	%r4005, [%rd96];
	ld.u32 	%r4006, [%rd95+12];
	// inline asm
	prmt.b32 %r4004, %r4005, %r4006, %r2;
	// inline asm
	st.u32 	[%rd98], %r4004;
	ld.u32 	%r4009, [%rd95+12];
	ld.u32 	%r4010, [%rd95+8];
	// inline asm
	prmt.b32 %r4008, %r4009, %r4010, %r2;
	// inline asm
	st.u32 	[%rd97+12], %r4008;
	ld.u32 	%r4013, [%rd95+8];
	ld.u32 	%r4014, [%rd95+4];
	// inline asm
	prmt.b32 %r4012, %r4013, %r4014, %r2;
	// inline asm
	st.u32 	[%rd97+8], %r4012;
	ld.u32 	%r4017, [%rd95+4];
	ld.u32 	%r4018, [%rd95];
	// inline asm
	prmt.b32 %r4016, %r4017, %r4018, %r2;
	// inline asm
	st.u32 	[%rd97+4], %r4016;
	ld.u32 	%r4021, [%rd95];
	// inline asm
	prmt.b32 %r4020, %r4021, %r8442, %r2;
	// inline asm
	st.u32 	[%rd97], %r4020;
	st.u32 	[%rd96+12], %r8442;
	st.u32 	[%rd96+8], %r8442;
	st.u32 	[%rd96+4], %r8442;
	st.u32 	[%rd96], %r8442;
	st.u32 	[%rd95+12], %r8442;
	st.u32 	[%rd95+8], %r8442;
	mov.u64 	%rd126, 0;
	st.u32 	[%rd95+4], %rd126;
	st.u32 	[%rd95], %rd126;
	mov.u32 	%r8451, %r8442;
	mov.u32 	%r8452, %r8442;
	mov.u32 	%r8453, %r8442;
	bra.uni 	BB1_80;

BB1_140:
	setp.gt.s32	%p52, %r1, 27;
	@%p52 bra 	BB1_148;

	setp.gt.s32	%p58, %r1, 25;
	@%p58 bra 	BB1_145;

	setp.eq.s32	%p61, %r1, 24;
	@%p61 bra 	BB1_158;
	bra.uni 	BB1_143;

BB1_158:
	ld.u32 	%r6324, [%rd96+12];
	ld.u32 	%r6325, [%rd96+8];
	// inline asm
	prmt.b32 %r6323, %r6324, %r6325, %r2;
	// inline asm
	st.u32 	[%rd102+12], %r6323;
	ld.u32 	%r6328, [%rd96+8];
	ld.u32 	%r6329, [%rd96+4];
	// inline asm
	prmt.b32 %r6327, %r6328, %r6329, %r2;
	// inline asm
	st.u32 	[%rd102+8], %r6327;
	ld.u32 	%r6332, [%rd96+4];
	ld.u32 	%r6333, [%rd96];
	// inline asm
	prmt.b32 %r6331, %r6332, %r6333, %r2;
	// inline asm
	st.u32 	[%rd102+4], %r6331;
	ld.u32 	%r6336, [%rd96];
	ld.u32 	%r6337, [%rd95+12];
	// inline asm
	prmt.b32 %r6335, %r6336, %r6337, %r2;
	// inline asm
	st.u32 	[%rd102], %r6335;
	ld.u32 	%r6340, [%rd95+12];
	ld.u32 	%r6341, [%rd95+8];
	// inline asm
	prmt.b32 %r6339, %r6340, %r6341, %r2;
	// inline asm
	st.u32 	[%rd101+12], %r6339;
	ld.u32 	%r6344, [%rd95+8];
	ld.u32 	%r6345, [%rd95+4];
	// inline asm
	prmt.b32 %r6343, %r6344, %r6345, %r2;
	// inline asm
	st.u32 	[%rd101+8], %r6343;
	ld.u32 	%r6348, [%rd95+4];
	ld.u32 	%r6349, [%rd95];
	// inline asm
	prmt.b32 %r6347, %r6348, %r6349, %r2;
	// inline asm
	st.u32 	[%rd101+4], %r6347;
	ld.u32 	%r6352, [%rd95];
	mov.u32 	%r8476, 0;
	// inline asm
	prmt.b32 %r6351, %r6352, %r8476, %r2;
	// inline asm
	st.u32 	[%rd101], %r6351;
	st.u32 	[%rd100+12], %r8476;
	st.u32 	[%rd100+8], %r8476;
	st.u32 	[%rd100+4], %r8476;
	st.u32 	[%rd100], %r8476;
	st.u32 	[%rd99+12], %r8476;
	st.u32 	[%rd99+8], %r8476;
	st.u32 	[%rd99+4], %r8476;
	st.u32 	[%rd99], %r8476;
	st.u32 	[%rd98+12], %r8476;
	st.u32 	[%rd98+8], %r8476;
	st.u32 	[%rd98+4], %r8476;
	st.u32 	[%rd98], %r8476;
	st.u32 	[%rd97+12], %r8476;
	st.u32 	[%rd97+8], %r8476;
	st.u32 	[%rd97+4], %r8476;
	st.u32 	[%rd97], %r8476;
	st.u32 	[%rd96+12], %r8476;
	st.u32 	[%rd96+8], %r8476;
	st.u32 	[%rd96+4], %r8476;
	st.u32 	[%rd96], %r8476;
	st.u32 	[%rd95+12], %r8476;
	st.u32 	[%rd95+8], %r8476;
	mov.u64 	%rd1157, 0;
	st.u32 	[%rd95+4], %rd1157;
	st.u32 	[%rd95], %rd1157;
	bra.uni 	BB1_172;

BB1_50:
	setp.gt.s32	%p4, %r1, 27;
	@%p4 bra 	BB1_58;

	setp.gt.s32	%p10, %r1, 25;
	@%p10 bra 	BB1_55;

	setp.eq.s32	%p13, %r1, 24;
	@%p13 bra 	BB1_68;
	bra.uni 	BB1_53;

BB1_68:
	ld.u32 	%r1534, [%rd102+12];
	mov.u32 	%r8442, 0;
	// inline asm
	prmt.b32 %r8470, %r8442, %r1534, %r2;
	// inline asm
	ld.u32 	%r1537, [%rd102+12];
	ld.u32 	%r1538, [%rd102+8];
	// inline asm
	prmt.b32 %r8463, %r1537, %r1538, %r2;
	// inline asm
	ld.u32 	%r1541, [%rd102+8];
	ld.u32 	%r1542, [%rd102+4];
	// inline asm
	prmt.b32 %r8464, %r1541, %r1542, %r2;
	// inline asm
	ld.u32 	%r1545, [%rd102+4];
	ld.u32 	%r1546, [%rd102];
	// inline asm
	prmt.b32 %r8465, %r1545, %r1546, %r2;
	// inline asm
	ld.u32 	%r1549, [%rd102];
	ld.u32 	%r1550, [%rd101+12];
	// inline asm
	prmt.b32 %r8466, %r1549, %r1550, %r2;
	// inline asm
	ld.u32 	%r1553, [%rd101+12];
	ld.u32 	%r1554, [%rd101+8];
	// inline asm
	prmt.b32 %r8459, %r1553, %r1554, %r2;
	// inline asm
	ld.u32 	%r1557, [%rd101+8];
	ld.u32 	%r1558, [%rd101+4];
	// inline asm
	prmt.b32 %r8460, %r1557, %r1558, %r2;
	// inline asm
	ld.u32 	%r1561, [%rd101+4];
	ld.u32 	%r1562, [%rd101];
	// inline asm
	prmt.b32 %r8461, %r1561, %r1562, %r2;
	// inline asm
	ld.u32 	%r1565, [%rd101];
	ld.u32 	%r1566, [%rd100+12];
	// inline asm
	prmt.b32 %r8462, %r1565, %r1566, %r2;
	// inline asm
	ld.u32 	%r1569, [%rd100+12];
	ld.u32 	%r1570, [%rd100+8];
	// inline asm
	prmt.b32 %r8455, %r1569, %r1570, %r2;
	// inline asm
	ld.u32 	%r1573, [%rd100+8];
	ld.u32 	%r1574, [%rd100+4];
	// inline asm
	prmt.b32 %r8456, %r1573, %r1574, %r2;
	// inline asm
	ld.u32 	%r1577, [%rd100+4];
	ld.u32 	%r1578, [%rd100];
	// inline asm
	prmt.b32 %r8457, %r1577, %r1578, %r2;
	// inline asm
	ld.u32 	%r1581, [%rd100];
	ld.u32 	%r1582, [%rd99+12];
	// inline asm
	prmt.b32 %r8458, %r1581, %r1582, %r2;
	// inline asm
	ld.u32 	%r1585, [%rd99+12];
	ld.u32 	%r1586, [%rd99+8];
	// inline asm
	prmt.b32 %r8451, %r1585, %r1586, %r2;
	// inline asm
	ld.u32 	%r1589, [%rd99+8];
	ld.u32 	%r1590, [%rd99+4];
	// inline asm
	prmt.b32 %r8452, %r1589, %r1590, %r2;
	// inline asm
	ld.u32 	%r1593, [%rd99+4];
	ld.u32 	%r1594, [%rd99];
	// inline asm
	prmt.b32 %r8453, %r1593, %r1594, %r2;
	// inline asm
	ld.u32 	%r1597, [%rd99];
	ld.u32 	%r1598, [%rd98+12];
	// inline asm
	prmt.b32 %r8454, %r1597, %r1598, %r2;
	// inline asm
	ld.u32 	%r1601, [%rd98+12];
	ld.u32 	%r1602, [%rd98+8];
	// inline asm
	prmt.b32 %r8447, %r1601, %r1602, %r2;
	// inline asm
	ld.u32 	%r1605, [%rd98+8];
	ld.u32 	%r1606, [%rd98+4];
	// inline asm
	prmt.b32 %r8448, %r1605, %r1606, %r2;
	// inline asm
	ld.u32 	%r1609, [%rd98+4];
	ld.u32 	%r1610, [%rd98];
	// inline asm
	prmt.b32 %r8449, %r1609, %r1610, %r2;
	// inline asm
	ld.u32 	%r1613, [%rd98];
	ld.u32 	%r1614, [%rd97+12];
	// inline asm
	prmt.b32 %r8450, %r1613, %r1614, %r2;
	// inline asm
	ld.u32 	%r1617, [%rd97+12];
	ld.u32 	%r1618, [%rd97+8];
	// inline asm
	prmt.b32 %r8443, %r1617, %r1618, %r2;
	// inline asm
	ld.u32 	%r1621, [%rd97+8];
	ld.u32 	%r1622, [%rd97+4];
	// inline asm
	prmt.b32 %r8444, %r1621, %r1622, %r2;
	// inline asm
	ld.u32 	%r1625, [%rd97+4];
	ld.u32 	%r1626, [%rd97];
	// inline asm
	prmt.b32 %r8445, %r1625, %r1626, %r2;
	// inline asm
	ld.u32 	%r1629, [%rd97];
	ld.u32 	%r1630, [%rd96+12];
	// inline asm
	prmt.b32 %r8446, %r1629, %r1630, %r2;
	// inline asm
	ld.u32 	%r1633, [%rd96+12];
	ld.u32 	%r1634, [%rd96+8];
	// inline asm
	prmt.b32 %r1632, %r1633, %r1634, %r2;
	// inline asm
	st.u32 	[%rd102+12], %r1632;
	ld.u32 	%r1637, [%rd96+8];
	ld.u32 	%r1638, [%rd96+4];
	// inline asm
	prmt.b32 %r1636, %r1637, %r1638, %r2;
	// inline asm
	st.u32 	[%rd102+8], %r1636;
	ld.u32 	%r1641, [%rd96+4];
	ld.u32 	%r1642, [%rd96];
	// inline asm
	prmt.b32 %r1640, %r1641, %r1642, %r2;
	// inline asm
	st.u32 	[%rd102+4], %r1640;
	ld.u32 	%r1645, [%rd96];
	ld.u32 	%r1646, [%rd95+12];
	// inline asm
	prmt.b32 %r1644, %r1645, %r1646, %r2;
	// inline asm
	st.u32 	[%rd102], %r1644;
	ld.u32 	%r1649, [%rd95+12];
	ld.u32 	%r1650, [%rd95+8];
	// inline asm
	prmt.b32 %r1648, %r1649, %r1650, %r2;
	// inline asm
	st.u32 	[%rd101+12], %r1648;
	ld.u32 	%r1653, [%rd95+8];
	ld.u32 	%r1654, [%rd95+4];
	// inline asm
	prmt.b32 %r1652, %r1653, %r1654, %r2;
	// inline asm
	st.u32 	[%rd101+8], %r1652;
	ld.u32 	%r1657, [%rd95+4];
	ld.u32 	%r1658, [%rd95];
	// inline asm
	prmt.b32 %r1656, %r1657, %r1658, %r2;
	// inline asm
	st.u32 	[%rd101+4], %r1656;
	ld.u32 	%r1661, [%rd95];
	// inline asm
	prmt.b32 %r1660, %r1661, %r8442, %r2;
	// inline asm
	st.u32 	[%rd101], %r1660;
	st.u32 	[%rd100+12], %r8442;
	st.u32 	[%rd100+8], %r8442;
	st.u32 	[%rd100+4], %r8442;
	st.u32 	[%rd100], %r8442;
	st.u32 	[%rd99+12], %r8442;
	st.u32 	[%rd99+8], %r8442;
	st.u32 	[%rd99+4], %r8442;
	st.u32 	[%rd99], %r8442;
	st.u32 	[%rd98+12], %r8442;
	st.u32 	[%rd98+8], %r8442;
	st.u32 	[%rd98+4], %r8442;
	st.u32 	[%rd98], %r8442;
	st.u32 	[%rd97+12], %r8442;
	st.u32 	[%rd97+8], %r8442;
	st.u32 	[%rd97+4], %r8442;
	st.u32 	[%rd97], %r8442;
	st.u32 	[%rd96+12], %r8442;
	st.u32 	[%rd96+8], %r8442;
	st.u32 	[%rd96+4], %r8442;
	st.u32 	[%rd96], %r8442;
	st.u32 	[%rd95+12], %r8442;
	st.u32 	[%rd95+8], %r8442;
	mov.u64 	%rd110, 0;
	st.u32 	[%rd95+4], %rd110;
	st.u32 	[%rd95], %rd110;
	mov.u32 	%r8467, %r8442;
	mov.u32 	%r8468, %r8442;
	mov.u32 	%r8469, %r8442;
	bra.uni 	BB1_84;

BB1_102:
	setp.gt.s32	%p87, %r1, 5;
	@%p87 bra 	BB1_106;

	setp.eq.s32	%p90, %r1, 4;
	@%p90 bra 	BB1_168;
	bra.uni 	BB1_104;

BB1_168:
	ld.u32 	%r7744, [%rd101+12];
	ld.u32 	%r7745, [%rd101+8];
	// inline asm
	prmt.b32 %r7743, %r7744, %r7745, %r2;
	// inline asm
	st.u32 	[%rd102+12], %r7743;
	ld.u32 	%r7748, [%rd101+8];
	ld.u32 	%r7749, [%rd101+4];
	// inline asm
	prmt.b32 %r7747, %r7748, %r7749, %r2;
	// inline asm
	st.u32 	[%rd102+8], %r7747;
	ld.u32 	%r7752, [%rd101+4];
	ld.u32 	%r7753, [%rd101];
	// inline asm
	prmt.b32 %r7751, %r7752, %r7753, %r2;
	// inline asm
	st.u32 	[%rd102+4], %r7751;
	ld.u32 	%r7756, [%rd101];
	ld.u32 	%r7757, [%rd100+12];
	// inline asm
	prmt.b32 %r7755, %r7756, %r7757, %r2;
	// inline asm
	st.u32 	[%rd102], %r7755;
	ld.u32 	%r7760, [%rd100+12];
	ld.u32 	%r7761, [%rd100+8];
	// inline asm
	prmt.b32 %r7759, %r7760, %r7761, %r2;
	// inline asm
	st.u32 	[%rd101+12], %r7759;
	ld.u32 	%r7764, [%rd100+8];
	ld.u32 	%r7765, [%rd100+4];
	// inline asm
	prmt.b32 %r7763, %r7764, %r7765, %r2;
	// inline asm
	st.u32 	[%rd101+8], %r7763;
	ld.u32 	%r7768, [%rd100+4];
	ld.u32 	%r7769, [%rd100];
	// inline asm
	prmt.b32 %r7767, %r7768, %r7769, %r2;
	// inline asm
	st.u32 	[%rd101+4], %r7767;
	ld.u32 	%r7772, [%rd100];
	ld.u32 	%r7773, [%rd99+12];
	// inline asm
	prmt.b32 %r7771, %r7772, %r7773, %r2;
	// inline asm
	st.u32 	[%rd101], %r7771;
	ld.u32 	%r7776, [%rd99+12];
	ld.u32 	%r7777, [%rd99+8];
	// inline asm
	prmt.b32 %r7775, %r7776, %r7777, %r2;
	// inline asm
	st.u32 	[%rd100+12], %r7775;
	ld.u32 	%r7780, [%rd99+8];
	ld.u32 	%r7781, [%rd99+4];
	// inline asm
	prmt.b32 %r7779, %r7780, %r7781, %r2;
	// inline asm
	st.u32 	[%rd100+8], %r7779;
	ld.u32 	%r7784, [%rd99+4];
	ld.u32 	%r7785, [%rd99];
	// inline asm
	prmt.b32 %r7783, %r7784, %r7785, %r2;
	// inline asm
	st.u32 	[%rd100+4], %r7783;
	ld.u32 	%r7788, [%rd99];
	ld.u32 	%r7789, [%rd98+12];
	// inline asm
	prmt.b32 %r7787, %r7788, %r7789, %r2;
	// inline asm
	st.u32 	[%rd100], %r7787;
	ld.u32 	%r7792, [%rd98+12];
	ld.u32 	%r7793, [%rd98+8];
	// inline asm
	prmt.b32 %r7791, %r7792, %r7793, %r2;
	// inline asm
	st.u32 	[%rd99+12], %r7791;
	ld.u32 	%r7796, [%rd98+8];
	ld.u32 	%r7797, [%rd98+4];
	// inline asm
	prmt.b32 %r7795, %r7796, %r7797, %r2;
	// inline asm
	st.u32 	[%rd99+8], %r7795;
	ld.u32 	%r7800, [%rd98+4];
	ld.u32 	%r7801, [%rd98];
	// inline asm
	prmt.b32 %r7799, %r7800, %r7801, %r2;
	// inline asm
	st.u32 	[%rd99+4], %r7799;
	ld.u32 	%r7804, [%rd98];
	ld.u32 	%r7805, [%rd97+12];
	// inline asm
	prmt.b32 %r7803, %r7804, %r7805, %r2;
	// inline asm
	st.u32 	[%rd99], %r7803;
	ld.u32 	%r7808, [%rd97+12];
	ld.u32 	%r7809, [%rd97+8];
	// inline asm
	prmt.b32 %r7807, %r7808, %r7809, %r2;
	// inline asm
	st.u32 	[%rd98+12], %r7807;
	ld.u32 	%r7812, [%rd97+8];
	ld.u32 	%r7813, [%rd97+4];
	// inline asm
	prmt.b32 %r7811, %r7812, %r7813, %r2;
	// inline asm
	st.u32 	[%rd98+8], %r7811;
	ld.u32 	%r7816, [%rd97+4];
	ld.u32 	%r7817, [%rd97];
	// inline asm
	prmt.b32 %r7815, %r7816, %r7817, %r2;
	// inline asm
	st.u32 	[%rd98+4], %r7815;
	ld.u32 	%r7820, [%rd97];
	ld.u32 	%r7821, [%rd96+12];
	// inline asm
	prmt.b32 %r7819, %r7820, %r7821, %r2;
	// inline asm
	st.u32 	[%rd98], %r7819;
	ld.u32 	%r7824, [%rd96+12];
	ld.u32 	%r7825, [%rd96+8];
	// inline asm
	prmt.b32 %r7823, %r7824, %r7825, %r2;
	// inline asm
	st.u32 	[%rd97+12], %r7823;
	ld.u32 	%r7828, [%rd96+8];
	ld.u32 	%r7829, [%rd96+4];
	// inline asm
	prmt.b32 %r7827, %r7828, %r7829, %r2;
	// inline asm
	st.u32 	[%rd97+8], %r7827;
	ld.u32 	%r7832, [%rd96+4];
	ld.u32 	%r7833, [%rd96];
	// inline asm
	prmt.b32 %r7831, %r7832, %r7833, %r2;
	// inline asm
	st.u32 	[%rd97+4], %r7831;
	ld.u32 	%r7836, [%rd96];
	ld.u32 	%r7837, [%rd95+12];
	// inline asm
	prmt.b32 %r7835, %r7836, %r7837, %r2;
	// inline asm
	st.u32 	[%rd97], %r7835;
	ld.u32 	%r7840, [%rd95+12];
	ld.u32 	%r7841, [%rd95+8];
	// inline asm
	prmt.b32 %r7839, %r7840, %r7841, %r2;
	// inline asm
	st.u32 	[%rd96+12], %r7839;
	ld.u32 	%r7844, [%rd95+8];
	ld.u32 	%r7845, [%rd95+4];
	// inline asm
	prmt.b32 %r7843, %r7844, %r7845, %r2;
	// inline asm
	st.u32 	[%rd96+8], %r7843;
	ld.u32 	%r7848, [%rd95+4];
	ld.u32 	%r7849, [%rd95];
	// inline asm
	prmt.b32 %r7847, %r7848, %r7849, %r2;
	// inline asm
	st.u32 	[%rd96+4], %r7847;
	ld.u32 	%r7852, [%rd95];
	mov.u32 	%r8476, 0;
	// inline asm
	prmt.b32 %r7851, %r7852, %r8476, %r2;
	// inline asm
	st.u32 	[%rd96], %r7851;
	st.u32 	[%rd95+12], %r8476;
	st.u32 	[%rd95+8], %r8476;
	mov.u64 	%rd1177, 0;
	st.u32 	[%rd95+4], %rd1177;
	st.u32 	[%rd95], %rd1177;
	bra.uni 	BB1_172;

BB1_12:
	setp.gt.s32	%p39, %r1, 5;
	@%p39 bra 	BB1_16;

	setp.eq.s32	%p42, %r1, 4;
	@%p42 bra 	BB1_78;
	bra.uni 	BB1_14;

BB1_78:
	ld.u32 	%r4524, [%rd102+12];
	mov.u32 	%r8442, 0;
	// inline asm
	prmt.b32 %r8450, %r8442, %r4524, %r2;
	// inline asm
	ld.u32 	%r4527, [%rd102+12];
	ld.u32 	%r4528, [%rd102+8];
	// inline asm
	prmt.b32 %r8443, %r4527, %r4528, %r2;
	// inline asm
	ld.u32 	%r4531, [%rd102+8];
	ld.u32 	%r4532, [%rd102+4];
	// inline asm
	prmt.b32 %r8444, %r4531, %r4532, %r2;
	// inline asm
	ld.u32 	%r4535, [%rd102+4];
	ld.u32 	%r4536, [%rd102];
	// inline asm
	prmt.b32 %r8445, %r4535, %r4536, %r2;
	// inline asm
	ld.u32 	%r4539, [%rd102];
	ld.u32 	%r4540, [%rd101+12];
	// inline asm
	prmt.b32 %r8446, %r4539, %r4540, %r2;
	// inline asm
	ld.u32 	%r4543, [%rd101+12];
	ld.u32 	%r4544, [%rd101+8];
	// inline asm
	prmt.b32 %r4542, %r4543, %r4544, %r2;
	// inline asm
	st.u32 	[%rd102+12], %r4542;
	ld.u32 	%r4547, [%rd101+8];
	ld.u32 	%r4548, [%rd101+4];
	// inline asm
	prmt.b32 %r4546, %r4547, %r4548, %r2;
	// inline asm
	st.u32 	[%rd102+8], %r4546;
	ld.u32 	%r4551, [%rd101+4];
	ld.u32 	%r4552, [%rd101];
	// inline asm
	prmt.b32 %r4550, %r4551, %r4552, %r2;
	// inline asm
	st.u32 	[%rd102+4], %r4550;
	ld.u32 	%r4555, [%rd101];
	ld.u32 	%r4556, [%rd100+12];
	// inline asm
	prmt.b32 %r4554, %r4555, %r4556, %r2;
	// inline asm
	st.u32 	[%rd102], %r4554;
	ld.u32 	%r4559, [%rd100+12];
	ld.u32 	%r4560, [%rd100+8];
	// inline asm
	prmt.b32 %r4558, %r4559, %r4560, %r2;
	// inline asm
	st.u32 	[%rd101+12], %r4558;
	ld.u32 	%r4563, [%rd100+8];
	ld.u32 	%r4564, [%rd100+4];
	// inline asm
	prmt.b32 %r4562, %r4563, %r4564, %r2;
	// inline asm
	st.u32 	[%rd101+8], %r4562;
	ld.u32 	%r4567, [%rd100+4];
	ld.u32 	%r4568, [%rd100];
	// inline asm
	prmt.b32 %r4566, %r4567, %r4568, %r2;
	// inline asm
	st.u32 	[%rd101+4], %r4566;
	ld.u32 	%r4571, [%rd100];
	ld.u32 	%r4572, [%rd99+12];
	// inline asm
	prmt.b32 %r4570, %r4571, %r4572, %r2;
	// inline asm
	st.u32 	[%rd101], %r4570;
	ld.u32 	%r4575, [%rd99+12];
	ld.u32 	%r4576, [%rd99+8];
	// inline asm
	prmt.b32 %r4574, %r4575, %r4576, %r2;
	// inline asm
	st.u32 	[%rd100+12], %r4574;
	ld.u32 	%r4579, [%rd99+8];
	ld.u32 	%r4580, [%rd99+4];
	// inline asm
	prmt.b32 %r4578, %r4579, %r4580, %r2;
	// inline asm
	st.u32 	[%rd100+8], %r4578;
	ld.u32 	%r4583, [%rd99+4];
	ld.u32 	%r4584, [%rd99];
	// inline asm
	prmt.b32 %r4582, %r4583, %r4584, %r2;
	// inline asm
	st.u32 	[%rd100+4], %r4582;
	ld.u32 	%r4587, [%rd99];
	ld.u32 	%r4588, [%rd98+12];
	// inline asm
	prmt.b32 %r4586, %r4587, %r4588, %r2;
	// inline asm
	st.u32 	[%rd100], %r4586;
	ld.u32 	%r4591, [%rd98+12];
	ld.u32 	%r4592, [%rd98+8];
	// inline asm
	prmt.b32 %r4590, %r4591, %r4592, %r2;
	// inline asm
	st.u32 	[%rd99+12], %r4590;
	ld.u32 	%r4595, [%rd98+8];
	ld.u32 	%r4596, [%rd98+4];
	// inline asm
	prmt.b32 %r4594, %r4595, %r4596, %r2;
	// inline asm
	st.u32 	[%rd99+8], %r4594;
	ld.u32 	%r4599, [%rd98+4];
	ld.u32 	%r4600, [%rd98];
	// inline asm
	prmt.b32 %r4598, %r4599, %r4600, %r2;
	// inline asm
	st.u32 	[%rd99+4], %r4598;
	ld.u32 	%r4603, [%rd98];
	ld.u32 	%r4604, [%rd97+12];
	// inline asm
	prmt.b32 %r4602, %r4603, %r4604, %r2;
	// inline asm
	st.u32 	[%rd99], %r4602;
	ld.u32 	%r4607, [%rd97+12];
	ld.u32 	%r4608, [%rd97+8];
	// inline asm
	prmt.b32 %r4606, %r4607, %r4608, %r2;
	// inline asm
	st.u32 	[%rd98+12], %r4606;
	ld.u32 	%r4611, [%rd97+8];
	ld.u32 	%r4612, [%rd97+4];
	// inline asm
	prmt.b32 %r4610, %r4611, %r4612, %r2;
	// inline asm
	st.u32 	[%rd98+8], %r4610;
	ld.u32 	%r4615, [%rd97+4];
	ld.u32 	%r4616, [%rd97];
	// inline asm
	prmt.b32 %r4614, %r4615, %r4616, %r2;
	// inline asm
	st.u32 	[%rd98+4], %r4614;
	ld.u32 	%r4619, [%rd97];
	ld.u32 	%r4620, [%rd96+12];
	// inline asm
	prmt.b32 %r4618, %r4619, %r4620, %r2;
	// inline asm
	st.u32 	[%rd98], %r4618;
	ld.u32 	%r4623, [%rd96+12];
	ld.u32 	%r4624, [%rd96+8];
	// inline asm
	prmt.b32 %r4622, %r4623, %r4624, %r2;
	// inline asm
	st.u32 	[%rd97+12], %r4622;
	ld.u32 	%r4627, [%rd96+8];
	ld.u32 	%r4628, [%rd96+4];
	// inline asm
	prmt.b32 %r4626, %r4627, %r4628, %r2;
	// inline asm
	st.u32 	[%rd97+8], %r4626;
	ld.u32 	%r4631, [%rd96+4];
	ld.u32 	%r4632, [%rd96];
	// inline asm
	prmt.b32 %r4630, %r4631, %r4632, %r2;
	// inline asm
	st.u32 	[%rd97+4], %r4630;
	ld.u32 	%r4635, [%rd96];
	ld.u32 	%r4636, [%rd95+12];
	// inline asm
	prmt.b32 %r4634, %r4635, %r4636, %r2;
	// inline asm
	st.u32 	[%rd97], %r4634;
	ld.u32 	%r4639, [%rd95+12];
	ld.u32 	%r4640, [%rd95+8];
	// inline asm
	prmt.b32 %r4638, %r4639, %r4640, %r2;
	// inline asm
	st.u32 	[%rd96+12], %r4638;
	ld.u32 	%r4643, [%rd95+8];
	ld.u32 	%r4644, [%rd95+4];
	// inline asm
	prmt.b32 %r4642, %r4643, %r4644, %r2;
	// inline asm
	st.u32 	[%rd96+8], %r4642;
	ld.u32 	%r4647, [%rd95+4];
	ld.u32 	%r4648, [%rd95];
	// inline asm
	prmt.b32 %r4646, %r4647, %r4648, %r2;
	// inline asm
	st.u32 	[%rd96+4], %r4646;
	ld.u32 	%r4651, [%rd95];
	// inline asm
	prmt.b32 %r4650, %r4651, %r8442, %r2;
	// inline asm
	st.u32 	[%rd96], %r4650;
	st.u32 	[%rd95+12], %r8442;
	st.u32 	[%rd95+8], %r8442;
	mov.u64 	%rd130, 0;
	st.u32 	[%rd95+4], %rd130;
	st.u32 	[%rd95], %rd130;
	mov.u32 	%r8447, %r8442;
	mov.u32 	%r8448, %r8442;
	mov.u32 	%r8449, %r8442;
	bra.uni 	BB1_79;

BB1_133:
	setp.gt.s32	%p64, %r1, 21;
	@%p64 bra 	BB1_137;

	setp.eq.s32	%p67, %r1, 20;
	@%p67 bra 	BB1_160;
	bra.uni 	BB1_135;

BB1_160:
	ld.u32 	%r6480, [%rd97+12];
	ld.u32 	%r6481, [%rd97+8];
	// inline asm
	prmt.b32 %r6479, %r6480, %r6481, %r2;
	// inline asm
	st.u32 	[%rd102+12], %r6479;
	ld.u32 	%r6484, [%rd97+8];
	ld.u32 	%r6485, [%rd97+4];
	// inline asm
	prmt.b32 %r6483, %r6484, %r6485, %r2;
	// inline asm
	st.u32 	[%rd102+8], %r6483;
	ld.u32 	%r6488, [%rd97+4];
	ld.u32 	%r6489, [%rd97];
	// inline asm
	prmt.b32 %r6487, %r6488, %r6489, %r2;
	// inline asm
	st.u32 	[%rd102+4], %r6487;
	ld.u32 	%r6492, [%rd97];
	ld.u32 	%r6493, [%rd96+12];
	// inline asm
	prmt.b32 %r6491, %r6492, %r6493, %r2;
	// inline asm
	st.u32 	[%rd102], %r6491;
	ld.u32 	%r6496, [%rd96+12];
	ld.u32 	%r6497, [%rd96+8];
	// inline asm
	prmt.b32 %r6495, %r6496, %r6497, %r2;
	// inline asm
	st.u32 	[%rd101+12], %r6495;
	ld.u32 	%r6500, [%rd96+8];
	ld.u32 	%r6501, [%rd96+4];
	// inline asm
	prmt.b32 %r6499, %r6500, %r6501, %r2;
	// inline asm
	st.u32 	[%rd101+8], %r6499;
	ld.u32 	%r6504, [%rd96+4];
	ld.u32 	%r6505, [%rd96];
	// inline asm
	prmt.b32 %r6503, %r6504, %r6505, %r2;
	// inline asm
	st.u32 	[%rd101+4], %r6503;
	ld.u32 	%r6508, [%rd96];
	ld.u32 	%r6509, [%rd95+12];
	// inline asm
	prmt.b32 %r6507, %r6508, %r6509, %r2;
	// inline asm
	st.u32 	[%rd101], %r6507;
	ld.u32 	%r6512, [%rd95+12];
	ld.u32 	%r6513, [%rd95+8];
	// inline asm
	prmt.b32 %r6511, %r6512, %r6513, %r2;
	// inline asm
	st.u32 	[%rd100+12], %r6511;
	ld.u32 	%r6516, [%rd95+8];
	ld.u32 	%r6517, [%rd95+4];
	// inline asm
	prmt.b32 %r6515, %r6516, %r6517, %r2;
	// inline asm
	st.u32 	[%rd100+8], %r6515;
	ld.u32 	%r6520, [%rd95+4];
	ld.u32 	%r6521, [%rd95];
	// inline asm
	prmt.b32 %r6519, %r6520, %r6521, %r2;
	// inline asm
	st.u32 	[%rd100+4], %r6519;
	ld.u32 	%r6524, [%rd95];
	mov.u32 	%r8476, 0;
	// inline asm
	prmt.b32 %r6523, %r6524, %r8476, %r2;
	// inline asm
	st.u32 	[%rd100], %r6523;
	st.u32 	[%rd99+12], %r8476;
	st.u32 	[%rd99+8], %r8476;
	st.u32 	[%rd99+4], %r8476;
	st.u32 	[%rd99], %r8476;
	st.u32 	[%rd98+12], %r8476;
	st.u32 	[%rd98+8], %r8476;
	st.u32 	[%rd98+4], %r8476;
	st.u32 	[%rd98], %r8476;
	st.u32 	[%rd97+12], %r8476;
	st.u32 	[%rd97+8], %r8476;
	st.u32 	[%rd97+4], %r8476;
	st.u32 	[%rd97], %r8476;
	st.u32 	[%rd96+12], %r8476;
	st.u32 	[%rd96+8], %r8476;
	st.u32 	[%rd96+4], %r8476;
	st.u32 	[%rd96], %r8476;
	st.u32 	[%rd95+12], %r8476;
	st.u32 	[%rd95+8], %r8476;
	mov.u64 	%rd1161, 0;
	st.u32 	[%rd95+4], %rd1161;
	st.u32 	[%rd95], %rd1161;
	bra.uni 	BB1_172;

BB1_43:
	setp.gt.s32	%p16, %r1, 21;
	@%p16 bra 	BB1_47;

	setp.eq.s32	%p19, %r1, 20;
	@%p19 bra 	BB1_70;
	bra.uni 	BB1_45;

BB1_70:
	ld.u32 	%r2100, [%rd102+12];
	mov.u32 	%r8442, 0;
	// inline asm
	prmt.b32 %r8466, %r8442, %r2100, %r2;
	// inline asm
	ld.u32 	%r2103, [%rd102+12];
	ld.u32 	%r2104, [%rd102+8];
	// inline asm
	prmt.b32 %r8459, %r2103, %r2104, %r2;
	// inline asm
	ld.u32 	%r2107, [%rd102+8];
	ld.u32 	%r2108, [%rd102+4];
	// inline asm
	prmt.b32 %r8460, %r2107, %r2108, %r2;
	// inline asm
	ld.u32 	%r2111, [%rd102+4];
	ld.u32 	%r2112, [%rd102];
	// inline asm
	prmt.b32 %r8461, %r2111, %r2112, %r2;
	// inline asm
	ld.u32 	%r2115, [%rd102];
	ld.u32 	%r2116, [%rd101+12];
	// inline asm
	prmt.b32 %r8462, %r2115, %r2116, %r2;
	// inline asm
	ld.u32 	%r2119, [%rd101+12];
	ld.u32 	%r2120, [%rd101+8];
	// inline asm
	prmt.b32 %r8455, %r2119, %r2120, %r2;
	// inline asm
	ld.u32 	%r2123, [%rd101+8];
	ld.u32 	%r2124, [%rd101+4];
	// inline asm
	prmt.b32 %r8456, %r2123, %r2124, %r2;
	// inline asm
	ld.u32 	%r2127, [%rd101+4];
	ld.u32 	%r2128, [%rd101];
	// inline asm
	prmt.b32 %r8457, %r2127, %r2128, %r2;
	// inline asm
	ld.u32 	%r2131, [%rd101];
	ld.u32 	%r2132, [%rd100+12];
	// inline asm
	prmt.b32 %r8458, %r2131, %r2132, %r2;
	// inline asm
	ld.u32 	%r2135, [%rd100+12];
	ld.u32 	%r2136, [%rd100+8];
	// inline asm
	prmt.b32 %r8451, %r2135, %r2136, %r2;
	// inline asm
	ld.u32 	%r2139, [%rd100+8];
	ld.u32 	%r2140, [%rd100+4];
	// inline asm
	prmt.b32 %r8452, %r2139, %r2140, %r2;
	// inline asm
	ld.u32 	%r2143, [%rd100+4];
	ld.u32 	%r2144, [%rd100];
	// inline asm
	prmt.b32 %r8453, %r2143, %r2144, %r2;
	// inline asm
	ld.u32 	%r2147, [%rd100];
	ld.u32 	%r2148, [%rd99+12];
	// inline asm
	prmt.b32 %r8454, %r2147, %r2148, %r2;
	// inline asm
	ld.u32 	%r2151, [%rd99+12];
	ld.u32 	%r2152, [%rd99+8];
	// inline asm
	prmt.b32 %r8447, %r2151, %r2152, %r2;
	// inline asm
	ld.u32 	%r2155, [%rd99+8];
	ld.u32 	%r2156, [%rd99+4];
	// inline asm
	prmt.b32 %r8448, %r2155, %r2156, %r2;
	// inline asm
	ld.u32 	%r2159, [%rd99+4];
	ld.u32 	%r2160, [%rd99];
	// inline asm
	prmt.b32 %r8449, %r2159, %r2160, %r2;
	// inline asm
	ld.u32 	%r2163, [%rd99];
	ld.u32 	%r2164, [%rd98+12];
	// inline asm
	prmt.b32 %r8450, %r2163, %r2164, %r2;
	// inline asm
	ld.u32 	%r2167, [%rd98+12];
	ld.u32 	%r2168, [%rd98+8];
	// inline asm
	prmt.b32 %r8443, %r2167, %r2168, %r2;
	// inline asm
	ld.u32 	%r2171, [%rd98+8];
	ld.u32 	%r2172, [%rd98+4];
	// inline asm
	prmt.b32 %r8444, %r2171, %r2172, %r2;
	// inline asm
	ld.u32 	%r2175, [%rd98+4];
	ld.u32 	%r2176, [%rd98];
	// inline asm
	prmt.b32 %r8445, %r2175, %r2176, %r2;
	// inline asm
	ld.u32 	%r2179, [%rd98];
	ld.u32 	%r2180, [%rd97+12];
	// inline asm
	prmt.b32 %r8446, %r2179, %r2180, %r2;
	// inline asm
	ld.u32 	%r2183, [%rd97+12];
	ld.u32 	%r2184, [%rd97+8];
	// inline asm
	prmt.b32 %r2182, %r2183, %r2184, %r2;
	// inline asm
	st.u32 	[%rd102+12], %r2182;
	ld.u32 	%r2187, [%rd97+8];
	ld.u32 	%r2188, [%rd97+4];
	// inline asm
	prmt.b32 %r2186, %r2187, %r2188, %r2;
	// inline asm
	st.u32 	[%rd102+8], %r2186;
	ld.u32 	%r2191, [%rd97+4];
	ld.u32 	%r2192, [%rd97];
	// inline asm
	prmt.b32 %r2190, %r2191, %r2192, %r2;
	// inline asm
	st.u32 	[%rd102+4], %r2190;
	ld.u32 	%r2195, [%rd97];
	ld.u32 	%r2196, [%rd96+12];
	// inline asm
	prmt.b32 %r2194, %r2195, %r2196, %r2;
	// inline asm
	st.u32 	[%rd102], %r2194;
	ld.u32 	%r2199, [%rd96+12];
	ld.u32 	%r2200, [%rd96+8];
	// inline asm
	prmt.b32 %r2198, %r2199, %r2200, %r2;
	// inline asm
	st.u32 	[%rd101+12], %r2198;
	ld.u32 	%r2203, [%rd96+8];
	ld.u32 	%r2204, [%rd96+4];
	// inline asm
	prmt.b32 %r2202, %r2203, %r2204, %r2;
	// inline asm
	st.u32 	[%rd101+8], %r2202;
	ld.u32 	%r2207, [%rd96+4];
	ld.u32 	%r2208, [%rd96];
	// inline asm
	prmt.b32 %r2206, %r2207, %r2208, %r2;
	// inline asm
	st.u32 	[%rd101+4], %r2206;
	ld.u32 	%r2211, [%rd96];
	ld.u32 	%r2212, [%rd95+12];
	// inline asm
	prmt.b32 %r2210, %r2211, %r2212, %r2;
	// inline asm
	st.u32 	[%rd101], %r2210;
	ld.u32 	%r2215, [%rd95+12];
	ld.u32 	%r2216, [%rd95+8];
	// inline asm
	prmt.b32 %r2214, %r2215, %r2216, %r2;
	// inline asm
	st.u32 	[%rd100+12], %r2214;
	ld.u32 	%r2219, [%rd95+8];
	ld.u32 	%r2220, [%rd95+4];
	// inline asm
	prmt.b32 %r2218, %r2219, %r2220, %r2;
	// inline asm
	st.u32 	[%rd100+8], %r2218;
	ld.u32 	%r2223, [%rd95+4];
	ld.u32 	%r2224, [%rd95];
	// inline asm
	prmt.b32 %r2222, %r2223, %r2224, %r2;
	// inline asm
	st.u32 	[%rd100+4], %r2222;
	ld.u32 	%r2227, [%rd95];
	// inline asm
	prmt.b32 %r2226, %r2227, %r8442, %r2;
	// inline asm
	st.u32 	[%rd100], %r2226;
	st.u32 	[%rd99+12], %r8442;
	st.u32 	[%rd99+8], %r8442;
	st.u32 	[%rd99+4], %r8442;
	st.u32 	[%rd99], %r8442;
	st.u32 	[%rd98+12], %r8442;
	st.u32 	[%rd98+8], %r8442;
	st.u32 	[%rd98+4], %r8442;
	st.u32 	[%rd98], %r8442;
	st.u32 	[%rd97+12], %r8442;
	st.u32 	[%rd97+8], %r8442;
	st.u32 	[%rd97+4], %r8442;
	st.u32 	[%rd97], %r8442;
	st.u32 	[%rd96+12], %r8442;
	st.u32 	[%rd96+8], %r8442;
	st.u32 	[%rd96+4], %r8442;
	st.u32 	[%rd96], %r8442;
	st.u32 	[%rd95+12], %r8442;
	st.u32 	[%rd95+8], %r8442;
	mov.u64 	%rd114, 0;
	st.u32 	[%rd95+4], %rd114;
	st.u32 	[%rd95], %rd114;
	mov.u32 	%r8463, %r8442;
	mov.u32 	%r8464, %r8442;
	mov.u32 	%r8465, %r8442;
	bra.uni 	BB1_83;

BB1_117:
	setp.gt.s32	%p76, %r1, 13;
	@%p76 bra 	BB1_121;

	setp.eq.s32	%p79, %r1, 12;
	@%p79 bra 	BB1_164;
	bra.uni 	BB1_119;

BB1_164:
	ld.u32 	%r6984, [%rd99+12];
	ld.u32 	%r6985, [%rd99+8];
	// inline asm
	prmt.b32 %r6983, %r6984, %r6985, %r2;
	// inline asm
	st.u32 	[%rd102+12], %r6983;
	ld.u32 	%r6988, [%rd99+8];
	ld.u32 	%r6989, [%rd99+4];
	// inline asm
	prmt.b32 %r6987, %r6988, %r6989, %r2;
	// inline asm
	st.u32 	[%rd102+8], %r6987;
	ld.u32 	%r6992, [%rd99+4];
	ld.u32 	%r6993, [%rd99];
	// inline asm
	prmt.b32 %r6991, %r6992, %r6993, %r2;
	// inline asm
	st.u32 	[%rd102+4], %r6991;
	ld.u32 	%r6996, [%rd99];
	ld.u32 	%r6997, [%rd98+12];
	// inline asm
	prmt.b32 %r6995, %r6996, %r6997, %r2;
	// inline asm
	st.u32 	[%rd102], %r6995;
	ld.u32 	%r7000, [%rd98+12];
	ld.u32 	%r7001, [%rd98+8];
	// inline asm
	prmt.b32 %r6999, %r7000, %r7001, %r2;
	// inline asm
	st.u32 	[%rd101+12], %r6999;
	ld.u32 	%r7004, [%rd98+8];
	ld.u32 	%r7005, [%rd98+4];
	// inline asm
	prmt.b32 %r7003, %r7004, %r7005, %r2;
	// inline asm
	st.u32 	[%rd101+8], %r7003;
	ld.u32 	%r7008, [%rd98+4];
	ld.u32 	%r7009, [%rd98];
	// inline asm
	prmt.b32 %r7007, %r7008, %r7009, %r2;
	// inline asm
	st.u32 	[%rd101+4], %r7007;
	ld.u32 	%r7012, [%rd98];
	ld.u32 	%r7013, [%rd97+12];
	// inline asm
	prmt.b32 %r7011, %r7012, %r7013, %r2;
	// inline asm
	st.u32 	[%rd101], %r7011;
	ld.u32 	%r7016, [%rd97+12];
	ld.u32 	%r7017, [%rd97+8];
	// inline asm
	prmt.b32 %r7015, %r7016, %r7017, %r2;
	// inline asm
	st.u32 	[%rd100+12], %r7015;
	ld.u32 	%r7020, [%rd97+8];
	ld.u32 	%r7021, [%rd97+4];
	// inline asm
	prmt.b32 %r7019, %r7020, %r7021, %r2;
	// inline asm
	st.u32 	[%rd100+8], %r7019;
	ld.u32 	%r7024, [%rd97+4];
	ld.u32 	%r7025, [%rd97];
	// inline asm
	prmt.b32 %r7023, %r7024, %r7025, %r2;
	// inline asm
	st.u32 	[%rd100+4], %r7023;
	ld.u32 	%r7028, [%rd97];
	ld.u32 	%r7029, [%rd96+12];
	// inline asm
	prmt.b32 %r7027, %r7028, %r7029, %r2;
	// inline asm
	st.u32 	[%rd100], %r7027;
	ld.u32 	%r7032, [%rd96+12];
	ld.u32 	%r7033, [%rd96+8];
	// inline asm
	prmt.b32 %r7031, %r7032, %r7033, %r2;
	// inline asm
	st.u32 	[%rd99+12], %r7031;
	ld.u32 	%r7036, [%rd96+8];
	ld.u32 	%r7037, [%rd96+4];
	// inline asm
	prmt.b32 %r7035, %r7036, %r7037, %r2;
	// inline asm
	st.u32 	[%rd99+8], %r7035;
	ld.u32 	%r7040, [%rd96+4];
	ld.u32 	%r7041, [%rd96];
	// inline asm
	prmt.b32 %r7039, %r7040, %r7041, %r2;
	// inline asm
	st.u32 	[%rd99+4], %r7039;
	ld.u32 	%r7044, [%rd96];
	ld.u32 	%r7045, [%rd95+12];
	// inline asm
	prmt.b32 %r7043, %r7044, %r7045, %r2;
	// inline asm
	st.u32 	[%rd99], %r7043;
	ld.u32 	%r7048, [%rd95+12];
	ld.u32 	%r7049, [%rd95+8];
	// inline asm
	prmt.b32 %r7047, %r7048, %r7049, %r2;
	// inline asm
	st.u32 	[%rd98+12], %r7047;
	ld.u32 	%r7052, [%rd95+8];
	ld.u32 	%r7053, [%rd95+4];
	// inline asm
	prmt.b32 %r7051, %r7052, %r7053, %r2;
	// inline asm
	st.u32 	[%rd98+8], %r7051;
	ld.u32 	%r7056, [%rd95+4];
	ld.u32 	%r7057, [%rd95];
	// inline asm
	prmt.b32 %r7055, %r7056, %r7057, %r2;
	// inline asm
	st.u32 	[%rd98+4], %r7055;
	ld.u32 	%r7060, [%rd95];
	mov.u32 	%r8476, 0;
	// inline asm
	prmt.b32 %r7059, %r7060, %r8476, %r2;
	// inline asm
	st.u32 	[%rd98], %r7059;
	st.u32 	[%rd97+12], %r8476;
	st.u32 	[%rd97+8], %r8476;
	st.u32 	[%rd97+4], %r8476;
	st.u32 	[%rd97], %r8476;
	st.u32 	[%rd96+12], %r8476;
	st.u32 	[%rd96+8], %r8476;
	st.u32 	[%rd96+4], %r8476;
	st.u32 	[%rd96], %r8476;
	st.u32 	[%rd95+12], %r8476;
	st.u32 	[%rd95+8], %r8476;
	mov.u64 	%rd1169, 0;
	st.u32 	[%rd95+4], %rd1169;
	st.u32 	[%rd95], %rd1169;
	bra.uni 	BB1_172;

BB1_27:
	setp.gt.s32	%p28, %r1, 13;
	@%p28 bra 	BB1_31;

	setp.eq.s32	%p31, %r1, 12;
	@%p31 bra 	BB1_74;
	bra.uni 	BB1_29;

BB1_74:
	ld.u32 	%r3280, [%rd102+12];
	mov.u32 	%r8442, 0;
	// inline asm
	prmt.b32 %r8458, %r8442, %r3280, %r2;
	// inline asm
	ld.u32 	%r3283, [%rd102+12];
	ld.u32 	%r3284, [%rd102+8];
	// inline asm
	prmt.b32 %r8451, %r3283, %r3284, %r2;
	// inline asm
	ld.u32 	%r3287, [%rd102+8];
	ld.u32 	%r3288, [%rd102+4];
	// inline asm
	prmt.b32 %r8452, %r3287, %r3288, %r2;
	// inline asm
	ld.u32 	%r3291, [%rd102+4];
	ld.u32 	%r3292, [%rd102];
	// inline asm
	prmt.b32 %r8453, %r3291, %r3292, %r2;
	// inline asm
	ld.u32 	%r3295, [%rd102];
	ld.u32 	%r3296, [%rd101+12];
	// inline asm
	prmt.b32 %r8454, %r3295, %r3296, %r2;
	// inline asm
	ld.u32 	%r3299, [%rd101+12];
	ld.u32 	%r3300, [%rd101+8];
	// inline asm
	prmt.b32 %r8447, %r3299, %r3300, %r2;
	// inline asm
	ld.u32 	%r3303, [%rd101+8];
	ld.u32 	%r3304, [%rd101+4];
	// inline asm
	prmt.b32 %r8448, %r3303, %r3304, %r2;
	// inline asm
	ld.u32 	%r3307, [%rd101+4];
	ld.u32 	%r3308, [%rd101];
	// inline asm
	prmt.b32 %r8449, %r3307, %r3308, %r2;
	// inline asm
	ld.u32 	%r3311, [%rd101];
	ld.u32 	%r3312, [%rd100+12];
	// inline asm
	prmt.b32 %r8450, %r3311, %r3312, %r2;
	// inline asm
	ld.u32 	%r3315, [%rd100+12];
	ld.u32 	%r3316, [%rd100+8];
	// inline asm
	prmt.b32 %r8443, %r3315, %r3316, %r2;
	// inline asm
	ld.u32 	%r3319, [%rd100+8];
	ld.u32 	%r3320, [%rd100+4];
	// inline asm
	prmt.b32 %r8444, %r3319, %r3320, %r2;
	// inline asm
	ld.u32 	%r3323, [%rd100+4];
	ld.u32 	%r3324, [%rd100];
	// inline asm
	prmt.b32 %r8445, %r3323, %r3324, %r2;
	// inline asm
	ld.u32 	%r3327, [%rd100];
	ld.u32 	%r3328, [%rd99+12];
	// inline asm
	prmt.b32 %r8446, %r3327, %r3328, %r2;
	// inline asm
	ld.u32 	%r3331, [%rd99+12];
	ld.u32 	%r3332, [%rd99+8];
	// inline asm
	prmt.b32 %r3330, %r3331, %r3332, %r2;
	// inline asm
	st.u32 	[%rd102+12], %r3330;
	ld.u32 	%r3335, [%rd99+8];
	ld.u32 	%r3336, [%rd99+4];
	// inline asm
	prmt.b32 %r3334, %r3335, %r3336, %r2;
	// inline asm
	st.u32 	[%rd102+8], %r3334;
	ld.u32 	%r3339, [%rd99+4];
	ld.u32 	%r3340, [%rd99];
	// inline asm
	prmt.b32 %r3338, %r3339, %r3340, %r2;
	// inline asm
	st.u32 	[%rd102+4], %r3338;
	ld.u32 	%r3343, [%rd99];
	ld.u32 	%r3344, [%rd98+12];
	// inline asm
	prmt.b32 %r3342, %r3343, %r3344, %r2;
	// inline asm
	st.u32 	[%rd102], %r3342;
	ld.u32 	%r3347, [%rd98+12];
	ld.u32 	%r3348, [%rd98+8];
	// inline asm
	prmt.b32 %r3346, %r3347, %r3348, %r2;
	// inline asm
	st.u32 	[%rd101+12], %r3346;
	ld.u32 	%r3351, [%rd98+8];
	ld.u32 	%r3352, [%rd98+4];
	// inline asm
	prmt.b32 %r3350, %r3351, %r3352, %r2;
	// inline asm
	st.u32 	[%rd101+8], %r3350;
	ld.u32 	%r3355, [%rd98+4];
	ld.u32 	%r3356, [%rd98];
	// inline asm
	prmt.b32 %r3354, %r3355, %r3356, %r2;
	// inline asm
	st.u32 	[%rd101+4], %r3354;
	ld.u32 	%r3359, [%rd98];
	ld.u32 	%r3360, [%rd97+12];
	// inline asm
	prmt.b32 %r3358, %r3359, %r3360, %r2;
	// inline asm
	st.u32 	[%rd101], %r3358;
	ld.u32 	%r3363, [%rd97+12];
	ld.u32 	%r3364, [%rd97+8];
	// inline asm
	prmt.b32 %r3362, %r3363, %r3364, %r2;
	// inline asm
	st.u32 	[%rd100+12], %r3362;
	ld.u32 	%r3367, [%rd97+8];
	ld.u32 	%r3368, [%rd97+4];
	// inline asm
	prmt.b32 %r3366, %r3367, %r3368, %r2;
	// inline asm
	st.u32 	[%rd100+8], %r3366;
	ld.u32 	%r3371, [%rd97+4];
	ld.u32 	%r3372, [%rd97];
	// inline asm
	prmt.b32 %r3370, %r3371, %r3372, %r2;
	// inline asm
	st.u32 	[%rd100+4], %r3370;
	ld.u32 	%r3375, [%rd97];
	ld.u32 	%r3376, [%rd96+12];
	// inline asm
	prmt.b32 %r3374, %r3375, %r3376, %r2;
	// inline asm
	st.u32 	[%rd100], %r3374;
	ld.u32 	%r3379, [%rd96+12];
	ld.u32 	%r3380, [%rd96+8];
	// inline asm
	prmt.b32 %r3378, %r3379, %r3380, %r2;
	// inline asm
	st.u32 	[%rd99+12], %r3378;
	ld.u32 	%r3383, [%rd96+8];
	ld.u32 	%r3384, [%rd96+4];
	// inline asm
	prmt.b32 %r3382, %r3383, %r3384, %r2;
	// inline asm
	st.u32 	[%rd99+8], %r3382;
	ld.u32 	%r3387, [%rd96+4];
	ld.u32 	%r3388, [%rd96];
	// inline asm
	prmt.b32 %r3386, %r3387, %r3388, %r2;
	// inline asm
	st.u32 	[%rd99+4], %r3386;
	ld.u32 	%r3391, [%rd96];
	ld.u32 	%r3392, [%rd95+12];
	// inline asm
	prmt.b32 %r3390, %r3391, %r3392, %r2;
	// inline asm
	st.u32 	[%rd99], %r3390;
	ld.u32 	%r3395, [%rd95+12];
	ld.u32 	%r3396, [%rd95+8];
	// inline asm
	prmt.b32 %r3394, %r3395, %r3396, %r2;
	// inline asm
	st.u32 	[%rd98+12], %r3394;
	ld.u32 	%r3399, [%rd95+8];
	ld.u32 	%r3400, [%rd95+4];
	// inline asm
	prmt.b32 %r3398, %r3399, %r3400, %r2;
	// inline asm
	st.u32 	[%rd98+8], %r3398;
	ld.u32 	%r3403, [%rd95+4];
	ld.u32 	%r3404, [%rd95];
	// inline asm
	prmt.b32 %r3402, %r3403, %r3404, %r2;
	// inline asm
	st.u32 	[%rd98+4], %r3402;
	ld.u32 	%r3407, [%rd95];
	// inline asm
	prmt.b32 %r3406, %r3407, %r8442, %r2;
	// inline asm
	st.u32 	[%rd98], %r3406;
	st.u32 	[%rd97+12], %r8442;
	st.u32 	[%rd97+8], %r8442;
	st.u32 	[%rd97+4], %r8442;
	st.u32 	[%rd97], %r8442;
	st.u32 	[%rd96+12], %r8442;
	st.u32 	[%rd96+8], %r8442;
	st.u32 	[%rd96+4], %r8442;
	st.u32 	[%rd96], %r8442;
	st.u32 	[%rd95+12], %r8442;
	st.u32 	[%rd95+8], %r8442;
	mov.u64 	%rd122, 0;
	st.u32 	[%rd95+4], %rd122;
	st.u32 	[%rd95], %rd122;
	mov.u32 	%r8455, %r8442;
	mov.u32 	%r8456, %r8442;
	mov.u32 	%r8457, %r8442;
	bra.uni 	BB1_81;

BB1_148:
	setp.gt.s32	%p53, %r1, 29;
	@%p53 bra 	BB1_152;

	setp.eq.s32	%p56, %r1, 28;
	@%p56 bra 	BB1_156;
	bra.uni 	BB1_150;

BB1_156:
	ld.u32 	%r6232, [%rd95+12];
	ld.u32 	%r6233, [%rd95+8];
	// inline asm
	prmt.b32 %r6231, %r6232, %r6233, %r2;
	// inline asm
	st.u32 	[%rd102+12], %r6231;
	ld.u32 	%r6236, [%rd95+8];
	ld.u32 	%r6237, [%rd95+4];
	// inline asm
	prmt.b32 %r6235, %r6236, %r6237, %r2;
	// inline asm
	st.u32 	[%rd102+8], %r6235;
	ld.u32 	%r6240, [%rd95+4];
	ld.u32 	%r6241, [%rd95];
	// inline asm
	prmt.b32 %r6239, %r6240, %r6241, %r2;
	// inline asm
	st.u32 	[%rd102+4], %r6239;
	ld.u32 	%r6244, [%rd95];
	mov.u32 	%r8476, 0;
	// inline asm
	prmt.b32 %r6243, %r6244, %r8476, %r2;
	// inline asm
	st.u32 	[%rd102], %r6243;
	st.u32 	[%rd101+12], %r8476;
	st.u32 	[%rd101+8], %r8476;
	st.u32 	[%rd101+4], %r8476;
	st.u32 	[%rd101], %r8476;
	st.u32 	[%rd100+12], %r8476;
	st.u32 	[%rd100+8], %r8476;
	st.u32 	[%rd100+4], %r8476;
	st.u32 	[%rd100], %r8476;
	st.u32 	[%rd99+12], %r8476;
	st.u32 	[%rd99+8], %r8476;
	st.u32 	[%rd99+4], %r8476;
	st.u32 	[%rd99], %r8476;
	st.u32 	[%rd98+12], %r8476;
	st.u32 	[%rd98+8], %r8476;
	st.u32 	[%rd98+4], %r8476;
	st.u32 	[%rd98], %r8476;
	st.u32 	[%rd97+12], %r8476;
	st.u32 	[%rd97+8], %r8476;
	st.u32 	[%rd97+4], %r8476;
	st.u32 	[%rd97], %r8476;
	st.u32 	[%rd96+12], %r8476;
	st.u32 	[%rd96+8], %r8476;
	st.u32 	[%rd96+4], %r8476;
	st.u32 	[%rd96], %r8476;
	st.u32 	[%rd95+12], %r8476;
	st.u32 	[%rd95+8], %r8476;
	mov.u64 	%rd1153, 0;
	st.u32 	[%rd95+4], %rd1153;
	st.u32 	[%rd95], %rd1153;
	bra.uni 	BB1_172;

BB1_58:
	setp.gt.s32	%p5, %r1, 29;
	@%p5 bra 	BB1_62;

	setp.eq.s32	%p8, %r1, 28;
	@%p8 bra 	BB1_66;
	bra.uni 	BB1_60;

BB1_66:
	ld.u32 	%r984, [%rd102+12];
	mov.u32 	%r8442, 0;
	// inline asm
	prmt.b32 %r8474, %r8442, %r984, %r2;
	// inline asm
	ld.u32 	%r987, [%rd102+12];
	ld.u32 	%r988, [%rd102+8];
	// inline asm
	prmt.b32 %r8467, %r987, %r988, %r2;
	// inline asm
	ld.u32 	%r991, [%rd102+8];
	ld.u32 	%r992, [%rd102+4];
	// inline asm
	prmt.b32 %r8468, %r991, %r992, %r2;
	// inline asm
	ld.u32 	%r995, [%rd102+4];
	ld.u32 	%r996, [%rd102];
	// inline asm
	prmt.b32 %r8469, %r995, %r996, %r2;
	// inline asm
	ld.u32 	%r999, [%rd102];
	ld.u32 	%r1000, [%rd101+12];
	// inline asm
	prmt.b32 %r8470, %r999, %r1000, %r2;
	// inline asm
	ld.u32 	%r1003, [%rd101+12];
	ld.u32 	%r1004, [%rd101+8];
	// inline asm
	prmt.b32 %r8463, %r1003, %r1004, %r2;
	// inline asm
	ld.u32 	%r1007, [%rd101+8];
	ld.u32 	%r1008, [%rd101+4];
	// inline asm
	prmt.b32 %r8464, %r1007, %r1008, %r2;
	// inline asm
	ld.u32 	%r1011, [%rd101+4];
	ld.u32 	%r1012, [%rd101];
	// inline asm
	prmt.b32 %r8465, %r1011, %r1012, %r2;
	// inline asm
	ld.u32 	%r1015, [%rd101];
	ld.u32 	%r1016, [%rd100+12];
	// inline asm
	prmt.b32 %r8466, %r1015, %r1016, %r2;
	// inline asm
	ld.u32 	%r1019, [%rd100+12];
	ld.u32 	%r1020, [%rd100+8];
	// inline asm
	prmt.b32 %r8459, %r1019, %r1020, %r2;
	// inline asm
	ld.u32 	%r1023, [%rd100+8];
	ld.u32 	%r1024, [%rd100+4];
	// inline asm
	prmt.b32 %r8460, %r1023, %r1024, %r2;
	// inline asm
	ld.u32 	%r1027, [%rd100+4];
	ld.u32 	%r1028, [%rd100];
	// inline asm
	prmt.b32 %r8461, %r1027, %r1028, %r2;
	// inline asm
	ld.u32 	%r1031, [%rd100];
	ld.u32 	%r1032, [%rd99+12];
	// inline asm
	prmt.b32 %r8462, %r1031, %r1032, %r2;
	// inline asm
	ld.u32 	%r1035, [%rd99+12];
	ld.u32 	%r1036, [%rd99+8];
	// inline asm
	prmt.b32 %r8455, %r1035, %r1036, %r2;
	// inline asm
	ld.u32 	%r1039, [%rd99+8];
	ld.u32 	%r1040, [%rd99+4];
	// inline asm
	prmt.b32 %r8456, %r1039, %r1040, %r2;
	// inline asm
	ld.u32 	%r1043, [%rd99+4];
	ld.u32 	%r1044, [%rd99];
	// inline asm
	prmt.b32 %r8457, %r1043, %r1044, %r2;
	// inline asm
	ld.u32 	%r1047, [%rd99];
	ld.u32 	%r1048, [%rd98+12];
	// inline asm
	prmt.b32 %r8458, %r1047, %r1048, %r2;
	// inline asm
	ld.u32 	%r1051, [%rd98+12];
	ld.u32 	%r1052, [%rd98+8];
	// inline asm
	prmt.b32 %r8451, %r1051, %r1052, %r2;
	// inline asm
	ld.u32 	%r1055, [%rd98+8];
	ld.u32 	%r1056, [%rd98+4];
	// inline asm
	prmt.b32 %r8452, %r1055, %r1056, %r2;
	// inline asm
	ld.u32 	%r1059, [%rd98+4];
	ld.u32 	%r1060, [%rd98];
	// inline asm
	prmt.b32 %r8453, %r1059, %r1060, %r2;
	// inline asm
	ld.u32 	%r1063, [%rd98];
	ld.u32 	%r1064, [%rd97+12];
	// inline asm
	prmt.b32 %r8454, %r1063, %r1064, %r2;
	// inline asm
	ld.u32 	%r1067, [%rd97+12];
	ld.u32 	%r1068, [%rd97+8];
	// inline asm
	prmt.b32 %r8447, %r1067, %r1068, %r2;
	// inline asm
	ld.u32 	%r1071, [%rd97+8];
	ld.u32 	%r1072, [%rd97+4];
	// inline asm
	prmt.b32 %r8448, %r1071, %r1072, %r2;
	// inline asm
	ld.u32 	%r1075, [%rd97+4];
	ld.u32 	%r1076, [%rd97];
	// inline asm
	prmt.b32 %r8449, %r1075, %r1076, %r2;
	// inline asm
	ld.u32 	%r1079, [%rd97];
	ld.u32 	%r1080, [%rd96+12];
	// inline asm
	prmt.b32 %r8450, %r1079, %r1080, %r2;
	// inline asm
	ld.u32 	%r1083, [%rd96+12];
	ld.u32 	%r1084, [%rd96+8];
	// inline asm
	prmt.b32 %r8443, %r1083, %r1084, %r2;
	// inline asm
	ld.u32 	%r1087, [%rd96+8];
	ld.u32 	%r1088, [%rd96+4];
	// inline asm
	prmt.b32 %r8444, %r1087, %r1088, %r2;
	// inline asm
	ld.u32 	%r1091, [%rd96+4];
	ld.u32 	%r1092, [%rd96];
	// inline asm
	prmt.b32 %r8445, %r1091, %r1092, %r2;
	// inline asm
	ld.u32 	%r1095, [%rd96];
	ld.u32 	%r1096, [%rd95+12];
	// inline asm
	prmt.b32 %r8446, %r1095, %r1096, %r2;
	// inline asm
	ld.u32 	%r1099, [%rd95+12];
	ld.u32 	%r1100, [%rd95+8];
	// inline asm
	prmt.b32 %r1098, %r1099, %r1100, %r2;
	// inline asm
	st.u32 	[%rd102+12], %r1098;
	ld.u32 	%r1103, [%rd95+8];
	ld.u32 	%r1104, [%rd95+4];
	// inline asm
	prmt.b32 %r1102, %r1103, %r1104, %r2;
	// inline asm
	st.u32 	[%rd102+8], %r1102;
	ld.u32 	%r1107, [%rd95+4];
	ld.u32 	%r1108, [%rd95];
	// inline asm
	prmt.b32 %r1106, %r1107, %r1108, %r2;
	// inline asm
	st.u32 	[%rd102+4], %r1106;
	ld.u32 	%r1111, [%rd95];
	// inline asm
	prmt.b32 %r1110, %r1111, %r8442, %r2;
	// inline asm
	st.u32 	[%rd102], %r1110;
	st.u32 	[%rd101+12], %r8442;
	st.u32 	[%rd101+8], %r8442;
	st.u32 	[%rd101+4], %r8442;
	st.u32 	[%rd101], %r8442;
	st.u32 	[%rd100+12], %r8442;
	st.u32 	[%rd100+8], %r8442;
	st.u32 	[%rd100+4], %r8442;
	st.u32 	[%rd100], %r8442;
	st.u32 	[%rd99+12], %r8442;
	st.u32 	[%rd99+8], %r8442;
	st.u32 	[%rd99+4], %r8442;
	st.u32 	[%rd99], %r8442;
	st.u32 	[%rd98+12], %r8442;
	st.u32 	[%rd98+8], %r8442;
	st.u32 	[%rd98+4], %r8442;
	st.u32 	[%rd98], %r8442;
	st.u32 	[%rd97+12], %r8442;
	st.u32 	[%rd97+8], %r8442;
	st.u32 	[%rd97+4], %r8442;
	st.u32 	[%rd97], %r8442;
	st.u32 	[%rd96+12], %r8442;
	st.u32 	[%rd96+8], %r8442;
	st.u32 	[%rd96+4], %r8442;
	st.u32 	[%rd96], %r8442;
	st.u32 	[%rd95+12], %r8442;
	st.u32 	[%rd95+8], %r8442;
	mov.u64 	%rd106, 0;
	st.u32 	[%rd95+4], %rd106;
	st.u32 	[%rd95], %rd106;
	mov.u32 	%r8471, %r8442;
	mov.u32 	%r8472, %r8442;
	mov.u32 	%r8473, %r8442;
	bra.uni 	BB1_89;

BB1_99:
	setp.eq.s32	%p93, %r1, 2;
	@%p93 bra 	BB1_169;
	bra.uni 	BB1_100;

BB1_169:
	ld.u32 	%r7974, [%rd102+4];
	ld.u32 	%r7975, [%rd102];
	// inline asm
	prmt.b32 %r7973, %r7974, %r7975, %r2;
	// inline asm
	st.u32 	[%rd102+12], %r7973;
	ld.u32 	%r7978, [%rd102];
	ld.u32 	%r7979, [%rd101+12];
	// inline asm
	prmt.b32 %r7977, %r7978, %r7979, %r2;
	// inline asm
	st.u32 	[%rd102+8], %r7977;
	ld.u32 	%r7982, [%rd101+12];
	ld.u32 	%r7983, [%rd101+8];
	// inline asm
	prmt.b32 %r7981, %r7982, %r7983, %r2;
	// inline asm
	st.u32 	[%rd102+4], %r7981;
	ld.u32 	%r7986, [%rd101+8];
	ld.u32 	%r7987, [%rd101+4];
	// inline asm
	prmt.b32 %r7985, %r7986, %r7987, %r2;
	// inline asm
	st.u32 	[%rd102], %r7985;
	ld.u32 	%r7990, [%rd101+4];
	ld.u32 	%r7991, [%rd101];
	// inline asm
	prmt.b32 %r7989, %r7990, %r7991, %r2;
	// inline asm
	st.u32 	[%rd101+12], %r7989;
	ld.u32 	%r7994, [%rd101];
	ld.u32 	%r7995, [%rd100+12];
	// inline asm
	prmt.b32 %r7993, %r7994, %r7995, %r2;
	// inline asm
	st.u32 	[%rd101+8], %r7993;
	ld.u32 	%r7998, [%rd100+12];
	ld.u32 	%r7999, [%rd100+8];
	// inline asm
	prmt.b32 %r7997, %r7998, %r7999, %r2;
	// inline asm
	st.u32 	[%rd101+4], %r7997;
	ld.u32 	%r8002, [%rd100+8];
	ld.u32 	%r8003, [%rd100+4];
	// inline asm
	prmt.b32 %r8001, %r8002, %r8003, %r2;
	// inline asm
	st.u32 	[%rd101], %r8001;
	ld.u32 	%r8006, [%rd100+4];
	ld.u32 	%r8007, [%rd100];
	// inline asm
	prmt.b32 %r8005, %r8006, %r8007, %r2;
	// inline asm
	st.u32 	[%rd100+12], %r8005;
	ld.u32 	%r8010, [%rd100];
	ld.u32 	%r8011, [%rd99+12];
	// inline asm
	prmt.b32 %r8009, %r8010, %r8011, %r2;
	// inline asm
	st.u32 	[%rd100+8], %r8009;
	ld.u32 	%r8014, [%rd99+12];
	ld.u32 	%r8015, [%rd99+8];
	// inline asm
	prmt.b32 %r8013, %r8014, %r8015, %r2;
	// inline asm
	st.u32 	[%rd100+4], %r8013;
	ld.u32 	%r8018, [%rd99+8];
	ld.u32 	%r8019, [%rd99+4];
	// inline asm
	prmt.b32 %r8017, %r8018, %r8019, %r2;
	// inline asm
	st.u32 	[%rd100], %r8017;
	ld.u32 	%r8022, [%rd99+4];
	ld.u32 	%r8023, [%rd99];
	// inline asm
	prmt.b32 %r8021, %r8022, %r8023, %r2;
	// inline asm
	st.u32 	[%rd99+12], %r8021;
	ld.u32 	%r8026, [%rd99];
	ld.u32 	%r8027, [%rd98+12];
	// inline asm
	prmt.b32 %r8025, %r8026, %r8027, %r2;
	// inline asm
	st.u32 	[%rd99+8], %r8025;
	ld.u32 	%r8030, [%rd98+12];
	ld.u32 	%r8031, [%rd98+8];
	// inline asm
	prmt.b32 %r8029, %r8030, %r8031, %r2;
	// inline asm
	st.u32 	[%rd99+4], %r8029;
	ld.u32 	%r8034, [%rd98+8];
	ld.u32 	%r8035, [%rd98+4];
	// inline asm
	prmt.b32 %r8033, %r8034, %r8035, %r2;
	// inline asm
	st.u32 	[%rd99], %r8033;
	ld.u32 	%r8038, [%rd98+4];
	ld.u32 	%r8039, [%rd98];
	// inline asm
	prmt.b32 %r8037, %r8038, %r8039, %r2;
	// inline asm
	st.u32 	[%rd98+12], %r8037;
	ld.u32 	%r8042, [%rd98];
	ld.u32 	%r8043, [%rd97+12];
	// inline asm
	prmt.b32 %r8041, %r8042, %r8043, %r2;
	// inline asm
	st.u32 	[%rd98+8], %r8041;
	ld.u32 	%r8046, [%rd97+12];
	ld.u32 	%r8047, [%rd97+8];
	// inline asm
	prmt.b32 %r8045, %r8046, %r8047, %r2;
	// inline asm
	st.u32 	[%rd98+4], %r8045;
	ld.u32 	%r8050, [%rd97+8];
	ld.u32 	%r8051, [%rd97+4];
	// inline asm
	prmt.b32 %r8049, %r8050, %r8051, %r2;
	// inline asm
	st.u32 	[%rd98], %r8049;
	ld.u32 	%r8054, [%rd97+4];
	ld.u32 	%r8055, [%rd97];
	// inline asm
	prmt.b32 %r8053, %r8054, %r8055, %r2;
	// inline asm
	st.u32 	[%rd97+12], %r8053;
	ld.u32 	%r8058, [%rd97];
	ld.u32 	%r8059, [%rd96+12];
	// inline asm
	prmt.b32 %r8057, %r8058, %r8059, %r2;
	// inline asm
	st.u32 	[%rd97+8], %r8057;
	ld.u32 	%r8062, [%rd96+12];
	ld.u32 	%r8063, [%rd96+8];
	// inline asm
	prmt.b32 %r8061, %r8062, %r8063, %r2;
	// inline asm
	st.u32 	[%rd97+4], %r8061;
	ld.u32 	%r8066, [%rd96+8];
	ld.u32 	%r8067, [%rd96+4];
	// inline asm
	prmt.b32 %r8065, %r8066, %r8067, %r2;
	// inline asm
	st.u32 	[%rd97], %r8065;
	ld.u32 	%r8070, [%rd96+4];
	ld.u32 	%r8071, [%rd96];
	// inline asm
	prmt.b32 %r8069, %r8070, %r8071, %r2;
	// inline asm
	st.u32 	[%rd96+12], %r8069;
	ld.u32 	%r8074, [%rd96];
	ld.u32 	%r8075, [%rd95+12];
	// inline asm
	prmt.b32 %r8073, %r8074, %r8075, %r2;
	// inline asm
	st.u32 	[%rd96+8], %r8073;
	ld.u32 	%r8078, [%rd95+12];
	ld.u32 	%r8079, [%rd95+8];
	// inline asm
	prmt.b32 %r8077, %r8078, %r8079, %r2;
	// inline asm
	st.u32 	[%rd96+4], %r8077;
	ld.u32 	%r8082, [%rd95+8];
	ld.u32 	%r8083, [%rd95+4];
	// inline asm
	prmt.b32 %r8081, %r8082, %r8083, %r2;
	// inline asm
	st.u32 	[%rd96], %r8081;
	ld.u32 	%r8086, [%rd95+4];
	ld.u32 	%r8087, [%rd95];
	// inline asm
	prmt.b32 %r8085, %r8086, %r8087, %r2;
	// inline asm
	st.u32 	[%rd95+12], %r8085;
	ld.u32 	%r8090, [%rd95];
	mov.u32 	%r8476, 0;
	// inline asm
	prmt.b32 %r8089, %r8090, %r8476, %r2;
	// inline asm
	st.u32 	[%rd95+8], %r8089;
	mov.u64 	%rd1179, 0;
	st.u32 	[%rd95+4], %rd1179;
	st.u32 	[%rd95], %rd1179;
	bra.uni 	BB1_172;

BB1_8:
	setp.eq.s32	%p45, %r1, 2;
	@%p45 bra 	BB1_85;
	bra.uni 	BB1_9;

BB1_85:
	ld.u32 	%r4845, [%rd102+12];
	mov.u32 	%r8442, 0;
	// inline asm
	prmt.b32 %r8444, %r8442, %r4845, %r2;
	// inline asm
	ld.u32 	%r4848, [%rd102+12];
	ld.u32 	%r4849, [%rd102+8];
	// inline asm
	prmt.b32 %r8445, %r4848, %r4849, %r2;
	// inline asm
	ld.u32 	%r4852, [%rd102+8];
	ld.u32 	%r4853, [%rd102+4];
	// inline asm
	prmt.b32 %r8446, %r4852, %r4853, %r2;
	// inline asm
	ld.u32 	%r4856, [%rd102+4];
	ld.u32 	%r4857, [%rd102];
	// inline asm
	prmt.b32 %r4855, %r4856, %r4857, %r2;
	// inline asm
	st.u32 	[%rd102+12], %r4855;
	ld.u32 	%r4860, [%rd102];
	ld.u32 	%r4861, [%rd101+12];
	// inline asm
	prmt.b32 %r4859, %r4860, %r4861, %r2;
	// inline asm
	st.u32 	[%rd102+8], %r4859;
	ld.u32 	%r4864, [%rd101+12];
	ld.u32 	%r4865, [%rd101+8];
	// inline asm
	prmt.b32 %r4863, %r4864, %r4865, %r2;
	// inline asm
	st.u32 	[%rd102+4], %r4863;
	ld.u32 	%r4868, [%rd101+8];
	ld.u32 	%r4869, [%rd101+4];
	// inline asm
	prmt.b32 %r4867, %r4868, %r4869, %r2;
	// inline asm
	st.u32 	[%rd102], %r4867;
	ld.u32 	%r4872, [%rd101+4];
	ld.u32 	%r4873, [%rd101];
	// inline asm
	prmt.b32 %r4871, %r4872, %r4873, %r2;
	// inline asm
	st.u32 	[%rd101+12], %r4871;
	ld.u32 	%r4876, [%rd101];
	ld.u32 	%r4877, [%rd100+12];
	// inline asm
	prmt.b32 %r4875, %r4876, %r4877, %r2;
	// inline asm
	st.u32 	[%rd101+8], %r4875;
	ld.u32 	%r4880, [%rd100+12];
	ld.u32 	%r4881, [%rd100+8];
	// inline asm
	prmt.b32 %r4879, %r4880, %r4881, %r2;
	// inline asm
	st.u32 	[%rd101+4], %r4879;
	ld.u32 	%r4884, [%rd100+8];
	ld.u32 	%r4885, [%rd100+4];
	// inline asm
	prmt.b32 %r4883, %r4884, %r4885, %r2;
	// inline asm
	st.u32 	[%rd101], %r4883;
	ld.u32 	%r4888, [%rd100+4];
	ld.u32 	%r4889, [%rd100];
	// inline asm
	prmt.b32 %r4887, %r4888, %r4889, %r2;
	// inline asm
	st.u32 	[%rd100+12], %r4887;
	ld.u32 	%r4892, [%rd100];
	ld.u32 	%r4893, [%rd99+12];
	// inline asm
	prmt.b32 %r4891, %r4892, %r4893, %r2;
	// inline asm
	st.u32 	[%rd100+8], %r4891;
	ld.u32 	%r4896, [%rd99+12];
	ld.u32 	%r4897, [%rd99+8];
	// inline asm
	prmt.b32 %r4895, %r4896, %r4897, %r2;
	// inline asm
	st.u32 	[%rd100+4], %r4895;
	ld.u32 	%r4900, [%rd99+8];
	ld.u32 	%r4901, [%rd99+4];
	// inline asm
	prmt.b32 %r4899, %r4900, %r4901, %r2;
	// inline asm
	st.u32 	[%rd100], %r4899;
	ld.u32 	%r4904, [%rd99+4];
	ld.u32 	%r4905, [%rd99];
	// inline asm
	prmt.b32 %r4903, %r4904, %r4905, %r2;
	// inline asm
	st.u32 	[%rd99+12], %r4903;
	ld.u32 	%r4908, [%rd99];
	ld.u32 	%r4909, [%rd98+12];
	// inline asm
	prmt.b32 %r4907, %r4908, %r4909, %r2;
	// inline asm
	st.u32 	[%rd99+8], %r4907;
	ld.u32 	%r4912, [%rd98+12];
	ld.u32 	%r4913, [%rd98+8];
	// inline asm
	prmt.b32 %r4911, %r4912, %r4913, %r2;
	// inline asm
	st.u32 	[%rd99+4], %r4911;
	ld.u32 	%r4916, [%rd98+8];
	ld.u32 	%r4917, [%rd98+4];
	// inline asm
	prmt.b32 %r4915, %r4916, %r4917, %r2;
	// inline asm
	st.u32 	[%rd99], %r4915;
	ld.u32 	%r4920, [%rd98+4];
	ld.u32 	%r4921, [%rd98];
	// inline asm
	prmt.b32 %r4919, %r4920, %r4921, %r2;
	// inline asm
	st.u32 	[%rd98+12], %r4919;
	ld.u32 	%r4924, [%rd98];
	ld.u32 	%r4925, [%rd97+12];
	// inline asm
	prmt.b32 %r4923, %r4924, %r4925, %r2;
	// inline asm
	st.u32 	[%rd98+8], %r4923;
	ld.u32 	%r4928, [%rd97+12];
	ld.u32 	%r4929, [%rd97+8];
	// inline asm
	prmt.b32 %r4927, %r4928, %r4929, %r2;
	// inline asm
	st.u32 	[%rd98+4], %r4927;
	ld.u32 	%r4932, [%rd97+8];
	ld.u32 	%r4933, [%rd97+4];
	// inline asm
	prmt.b32 %r4931, %r4932, %r4933, %r2;
	// inline asm
	st.u32 	[%rd98], %r4931;
	ld.u32 	%r4936, [%rd97+4];
	ld.u32 	%r4937, [%rd97];
	// inline asm
	prmt.b32 %r4935, %r4936, %r4937, %r2;
	// inline asm
	st.u32 	[%rd97+12], %r4935;
	ld.u32 	%r4940, [%rd97];
	ld.u32 	%r4941, [%rd96+12];
	// inline asm
	prmt.b32 %r4939, %r4940, %r4941, %r2;
	// inline asm
	st.u32 	[%rd97+8], %r4939;
	ld.u32 	%r4944, [%rd96+12];
	ld.u32 	%r4945, [%rd96+8];
	// inline asm
	prmt.b32 %r4943, %r4944, %r4945, %r2;
	// inline asm
	st.u32 	[%rd97+4], %r4943;
	ld.u32 	%r4948, [%rd96+8];
	ld.u32 	%r4949, [%rd96+4];
	// inline asm
	prmt.b32 %r4947, %r4948, %r4949, %r2;
	// inline asm
	st.u32 	[%rd97], %r4947;
	ld.u32 	%r4952, [%rd96+4];
	ld.u32 	%r4953, [%rd96];
	// inline asm
	prmt.b32 %r4951, %r4952, %r4953, %r2;
	// inline asm
	st.u32 	[%rd96+12], %r4951;
	ld.u32 	%r4956, [%rd96];
	ld.u32 	%r4957, [%rd95+12];
	// inline asm
	prmt.b32 %r4955, %r4956, %r4957, %r2;
	// inline asm
	st.u32 	[%rd96+8], %r4955;
	ld.u32 	%r4960, [%rd95+12];
	ld.u32 	%r4961, [%rd95+8];
	// inline asm
	prmt.b32 %r4959, %r4960, %r4961, %r2;
	// inline asm
	st.u32 	[%rd96+4], %r4959;
	ld.u32 	%r4964, [%rd95+8];
	ld.u32 	%r4965, [%rd95+4];
	// inline asm
	prmt.b32 %r4963, %r4964, %r4965, %r2;
	// inline asm
	st.u32 	[%rd96], %r4963;
	ld.u32 	%r4968, [%rd95+4];
	ld.u32 	%r4969, [%rd95];
	// inline asm
	prmt.b32 %r4967, %r4968, %r4969, %r2;
	// inline asm
	st.u32 	[%rd95+12], %r4967;
	ld.u32 	%r4972, [%rd95];
	// inline asm
	prmt.b32 %r4971, %r4972, %r8442, %r2;
	// inline asm
	st.u32 	[%rd95+8], %r4971;
	mov.u64 	%rd132, 0;
	st.u32 	[%rd95+4], %rd132;
	st.u32 	[%rd95], %rd132;
	mov.u32 	%r8443, %r8442;
	bra.uni 	BB1_11;

BB1_130:
	setp.eq.s32	%p70, %r1, 18;
	@%p70 bra 	BB1_161;
	bra.uni 	BB1_131;

BB1_161:
	ld.u32 	%r6582, [%rd98+4];
	ld.u32 	%r6583, [%rd98];
	// inline asm
	prmt.b32 %r6581, %r6582, %r6583, %r2;
	// inline asm
	st.u32 	[%rd102+12], %r6581;
	ld.u32 	%r6586, [%rd98];
	ld.u32 	%r6587, [%rd97+12];
	// inline asm
	prmt.b32 %r6585, %r6586, %r6587, %r2;
	// inline asm
	st.u32 	[%rd102+8], %r6585;
	ld.u32 	%r6590, [%rd97+12];
	ld.u32 	%r6591, [%rd97+8];
	// inline asm
	prmt.b32 %r6589, %r6590, %r6591, %r2;
	// inline asm
	st.u32 	[%rd102+4], %r6589;
	ld.u32 	%r6594, [%rd97+8];
	ld.u32 	%r6595, [%rd97+4];
	// inline asm
	prmt.b32 %r6593, %r6594, %r6595, %r2;
	// inline asm
	st.u32 	[%rd102], %r6593;
	ld.u32 	%r6598, [%rd97+4];
	ld.u32 	%r6599, [%rd97];
	// inline asm
	prmt.b32 %r6597, %r6598, %r6599, %r2;
	// inline asm
	st.u32 	[%rd101+12], %r6597;
	ld.u32 	%r6602, [%rd97];
	ld.u32 	%r6603, [%rd96+12];
	// inline asm
	prmt.b32 %r6601, %r6602, %r6603, %r2;
	// inline asm
	st.u32 	[%rd101+8], %r6601;
	ld.u32 	%r6606, [%rd96+12];
	ld.u32 	%r6607, [%rd96+8];
	// inline asm
	prmt.b32 %r6605, %r6606, %r6607, %r2;
	// inline asm
	st.u32 	[%rd101+4], %r6605;
	ld.u32 	%r6610, [%rd96+8];
	ld.u32 	%r6611, [%rd96+4];
	// inline asm
	prmt.b32 %r6609, %r6610, %r6611, %r2;
	// inline asm
	st.u32 	[%rd101], %r6609;
	ld.u32 	%r6614, [%rd96+4];
	ld.u32 	%r6615, [%rd96];
	// inline asm
	prmt.b32 %r6613, %r6614, %r6615, %r2;
	// inline asm
	st.u32 	[%rd100+12], %r6613;
	ld.u32 	%r6618, [%rd96];
	ld.u32 	%r6619, [%rd95+12];
	// inline asm
	prmt.b32 %r6617, %r6618, %r6619, %r2;
	// inline asm
	st.u32 	[%rd100+8], %r6617;
	ld.u32 	%r6622, [%rd95+12];
	ld.u32 	%r6623, [%rd95+8];
	// inline asm
	prmt.b32 %r6621, %r6622, %r6623, %r2;
	// inline asm
	st.u32 	[%rd100+4], %r6621;
	ld.u32 	%r6626, [%rd95+8];
	ld.u32 	%r6627, [%rd95+4];
	// inline asm
	prmt.b32 %r6625, %r6626, %r6627, %r2;
	// inline asm
	st.u32 	[%rd100], %r6625;
	ld.u32 	%r6630, [%rd95+4];
	ld.u32 	%r6631, [%rd95];
	// inline asm
	prmt.b32 %r6629, %r6630, %r6631, %r2;
	// inline asm
	st.u32 	[%rd99+12], %r6629;
	ld.u32 	%r6634, [%rd95];
	mov.u32 	%r8476, 0;
	// inline asm
	prmt.b32 %r6633, %r6634, %r8476, %r2;
	// inline asm
	st.u32 	[%rd99+8], %r6633;
	st.u32 	[%rd99+4], %r8476;
	st.u32 	[%rd99], %r8476;
	st.u32 	[%rd98+12], %r8476;
	st.u32 	[%rd98+8], %r8476;
	st.u32 	[%rd98+4], %r8476;
	st.u32 	[%rd98], %r8476;
	st.u32 	[%rd97+12], %r8476;
	st.u32 	[%rd97+8], %r8476;
	st.u32 	[%rd97+4], %r8476;
	st.u32 	[%rd97], %r8476;
	st.u32 	[%rd96+12], %r8476;
	st.u32 	[%rd96+8], %r8476;
	st.u32 	[%rd96+4], %r8476;
	st.u32 	[%rd96], %r8476;
	st.u32 	[%rd95+12], %r8476;
	st.u32 	[%rd95+8], %r8476;
	mov.u64 	%rd1163, 0;
	st.u32 	[%rd95+4], %rd1163;
	st.u32 	[%rd95], %rd1163;
	bra.uni 	BB1_172;

BB1_40:
	setp.eq.s32	%p22, %r1, 18;
	@%p22 bra 	BB1_71;
	bra.uni 	BB1_41;

BB1_71:
	ld.u32 	%r2389, [%rd102+12];
	mov.u32 	%r8442, 0;
	// inline asm
	prmt.b32 %r8460, %r8442, %r2389, %r2;
	// inline asm
	ld.u32 	%r2392, [%rd102+12];
	ld.u32 	%r2393, [%rd102+8];
	// inline asm
	prmt.b32 %r8461, %r2392, %r2393, %r2;
	// inline asm
	ld.u32 	%r2396, [%rd102+8];
	ld.u32 	%r2397, [%rd102+4];
	// inline asm
	prmt.b32 %r8462, %r2396, %r2397, %r2;
	// inline asm
	ld.u32 	%r2400, [%rd102+4];
	ld.u32 	%r2401, [%rd102];
	// inline asm
	prmt.b32 %r8455, %r2400, %r2401, %r2;
	// inline asm
	ld.u32 	%r2404, [%rd102];
	ld.u32 	%r2405, [%rd101+12];
	// inline asm
	prmt.b32 %r8456, %r2404, %r2405, %r2;
	// inline asm
	ld.u32 	%r2408, [%rd101+12];
	ld.u32 	%r2409, [%rd101+8];
	// inline asm
	prmt.b32 %r8457, %r2408, %r2409, %r2;
	// inline asm
	ld.u32 	%r2412, [%rd101+8];
	ld.u32 	%r2413, [%rd101+4];
	// inline asm
	prmt.b32 %r8458, %r2412, %r2413, %r2;
	// inline asm
	ld.u32 	%r2416, [%rd101+4];
	ld.u32 	%r2417, [%rd101];
	// inline asm
	prmt.b32 %r8451, %r2416, %r2417, %r2;
	// inline asm
	ld.u32 	%r2420, [%rd101];
	ld.u32 	%r2421, [%rd100+12];
	// inline asm
	prmt.b32 %r8452, %r2420, %r2421, %r2;
	// inline asm
	ld.u32 	%r2424, [%rd100+12];
	ld.u32 	%r2425, [%rd100+8];
	// inline asm
	prmt.b32 %r8453, %r2424, %r2425, %r2;
	// inline asm
	ld.u32 	%r2428, [%rd100+8];
	ld.u32 	%r2429, [%rd100+4];
	// inline asm
	prmt.b32 %r8454, %r2428, %r2429, %r2;
	// inline asm
	ld.u32 	%r2432, [%rd100+4];
	ld.u32 	%r2433, [%rd100];
	// inline asm
	prmt.b32 %r8447, %r2432, %r2433, %r2;
	// inline asm
	ld.u32 	%r2436, [%rd100];
	ld.u32 	%r2437, [%rd99+12];
	// inline asm
	prmt.b32 %r8448, %r2436, %r2437, %r2;
	// inline asm
	ld.u32 	%r2440, [%rd99+12];
	ld.u32 	%r2441, [%rd99+8];
	// inline asm
	prmt.b32 %r8449, %r2440, %r2441, %r2;
	// inline asm
	ld.u32 	%r2444, [%rd99+8];
	ld.u32 	%r2445, [%rd99+4];
	// inline asm
	prmt.b32 %r8450, %r2444, %r2445, %r2;
	// inline asm
	ld.u32 	%r2448, [%rd99+4];
	ld.u32 	%r2449, [%rd99];
	// inline asm
	prmt.b32 %r8443, %r2448, %r2449, %r2;
	// inline asm
	ld.u32 	%r2452, [%rd99];
	ld.u32 	%r2453, [%rd98+12];
	// inline asm
	prmt.b32 %r8444, %r2452, %r2453, %r2;
	// inline asm
	ld.u32 	%r2456, [%rd98+12];
	ld.u32 	%r2457, [%rd98+8];
	// inline asm
	prmt.b32 %r8445, %r2456, %r2457, %r2;
	// inline asm
	ld.u32 	%r2460, [%rd98+8];
	ld.u32 	%r2461, [%rd98+4];
	// inline asm
	prmt.b32 %r8446, %r2460, %r2461, %r2;
	// inline asm
	ld.u32 	%r2464, [%rd98+4];
	ld.u32 	%r2465, [%rd98];
	// inline asm
	prmt.b32 %r2463, %r2464, %r2465, %r2;
	// inline asm
	st.u32 	[%rd102+12], %r2463;
	ld.u32 	%r2468, [%rd98];
	ld.u32 	%r2469, [%rd97+12];
	// inline asm
	prmt.b32 %r2467, %r2468, %r2469, %r2;
	// inline asm
	st.u32 	[%rd102+8], %r2467;
	ld.u32 	%r2472, [%rd97+12];
	ld.u32 	%r2473, [%rd97+8];
	// inline asm
	prmt.b32 %r2471, %r2472, %r2473, %r2;
	// inline asm
	st.u32 	[%rd102+4], %r2471;
	ld.u32 	%r2476, [%rd97+8];
	ld.u32 	%r2477, [%rd97+4];
	// inline asm
	prmt.b32 %r2475, %r2476, %r2477, %r2;
	// inline asm
	st.u32 	[%rd102], %r2475;
	ld.u32 	%r2480, [%rd97+4];
	ld.u32 	%r2481, [%rd97];
	// inline asm
	prmt.b32 %r2479, %r2480, %r2481, %r2;
	// inline asm
	st.u32 	[%rd101+12], %r2479;
	ld.u32 	%r2484, [%rd97];
	ld.u32 	%r2485, [%rd96+12];
	// inline asm
	prmt.b32 %r2483, %r2484, %r2485, %r2;
	// inline asm
	st.u32 	[%rd101+8], %r2483;
	ld.u32 	%r2488, [%rd96+12];
	ld.u32 	%r2489, [%rd96+8];
	// inline asm
	prmt.b32 %r2487, %r2488, %r2489, %r2;
	// inline asm
	st.u32 	[%rd101+4], %r2487;
	ld.u32 	%r2492, [%rd96+8];
	ld.u32 	%r2493, [%rd96+4];
	// inline asm
	prmt.b32 %r2491, %r2492, %r2493, %r2;
	// inline asm
	st.u32 	[%rd101], %r2491;
	ld.u32 	%r2496, [%rd96+4];
	ld.u32 	%r2497, [%rd96];
	// inline asm
	prmt.b32 %r2495, %r2496, %r2497, %r2;
	// inline asm
	st.u32 	[%rd100+12], %r2495;
	ld.u32 	%r2500, [%rd96];
	ld.u32 	%r2501, [%rd95+12];
	// inline asm
	prmt.b32 %r2499, %r2500, %r2501, %r2;
	// inline asm
	st.u32 	[%rd100+8], %r2499;
	ld.u32 	%r2504, [%rd95+12];
	ld.u32 	%r2505, [%rd95+8];
	// inline asm
	prmt.b32 %r2503, %r2504, %r2505, %r2;
	// inline asm
	st.u32 	[%rd100+4], %r2503;
	ld.u32 	%r2508, [%rd95+8];
	ld.u32 	%r2509, [%rd95+4];
	// inline asm
	prmt.b32 %r2507, %r2508, %r2509, %r2;
	// inline asm
	st.u32 	[%rd100], %r2507;
	ld.u32 	%r2512, [%rd95+4];
	ld.u32 	%r2513, [%rd95];
	// inline asm
	prmt.b32 %r2511, %r2512, %r2513, %r2;
	// inline asm
	st.u32 	[%rd99+12], %r2511;
	ld.u32 	%r2516, [%rd95];
	// inline asm
	prmt.b32 %r2515, %r2516, %r8442, %r2;
	// inline asm
	st.u32 	[%rd99+8], %r2515;
	st.u32 	[%rd99+4], %r8442;
	st.u32 	[%rd99], %r8442;
	st.u32 	[%rd98+12], %r8442;
	st.u32 	[%rd98+8], %r8442;
	st.u32 	[%rd98+4], %r8442;
	st.u32 	[%rd98], %r8442;
	st.u32 	[%rd97+12], %r8442;
	st.u32 	[%rd97+8], %r8442;
	st.u32 	[%rd97+4], %r8442;
	st.u32 	[%rd97], %r8442;
	st.u32 	[%rd96+12], %r8442;
	st.u32 	[%rd96+8], %r8442;
	st.u32 	[%rd96+4], %r8442;
	st.u32 	[%rd96], %r8442;
	st.u32 	[%rd95+12], %r8442;
	st.u32 	[%rd95+8], %r8442;
	mov.u64 	%rd116, 0;
	st.u32 	[%rd95+4], %rd116;
	st.u32 	[%rd95], %rd116;
	mov.u32 	%r8459, %r8442;
	bra.uni 	BB1_82;

BB1_114:
	setp.eq.s32	%p82, %r1, 10;
	@%p82 bra 	BB1_165;
	bra.uni 	BB1_115;

BB1_165:
	ld.u32 	%r7150, [%rd100+4];
	ld.u32 	%r7151, [%rd100];
	// inline asm
	prmt.b32 %r7149, %r7150, %r7151, %r2;
	// inline asm
	st.u32 	[%rd102+12], %r7149;
	ld.u32 	%r7154, [%rd100];
	ld.u32 	%r7155, [%rd99+12];
	// inline asm
	prmt.b32 %r7153, %r7154, %r7155, %r2;
	// inline asm
	st.u32 	[%rd102+8], %r7153;
	ld.u32 	%r7158, [%rd99+12];
	ld.u32 	%r7159, [%rd99+8];
	// inline asm
	prmt.b32 %r7157, %r7158, %r7159, %r2;
	// inline asm
	st.u32 	[%rd102+4], %r7157;
	ld.u32 	%r7162, [%rd99+8];
	ld.u32 	%r7163, [%rd99+4];
	// inline asm
	prmt.b32 %r7161, %r7162, %r7163, %r2;
	// inline asm
	st.u32 	[%rd102], %r7161;
	ld.u32 	%r7166, [%rd99+4];
	ld.u32 	%r7167, [%rd99];
	// inline asm
	prmt.b32 %r7165, %r7166, %r7167, %r2;
	// inline asm
	st.u32 	[%rd101+12], %r7165;
	ld.u32 	%r7170, [%rd99];
	ld.u32 	%r7171, [%rd98+12];
	// inline asm
	prmt.b32 %r7169, %r7170, %r7171, %r2;
	// inline asm
	st.u32 	[%rd101+8], %r7169;
	ld.u32 	%r7174, [%rd98+12];
	ld.u32 	%r7175, [%rd98+8];
	// inline asm
	prmt.b32 %r7173, %r7174, %r7175, %r2;
	// inline asm
	st.u32 	[%rd101+4], %r7173;
	ld.u32 	%r7178, [%rd98+8];
	ld.u32 	%r7179, [%rd98+4];
	// inline asm
	prmt.b32 %r7177, %r7178, %r7179, %r2;
	// inline asm
	st.u32 	[%rd101], %r7177;
	ld.u32 	%r7182, [%rd98+4];
	ld.u32 	%r7183, [%rd98];
	// inline asm
	prmt.b32 %r7181, %r7182, %r7183, %r2;
	// inline asm
	st.u32 	[%rd100+12], %r7181;
	ld.u32 	%r7186, [%rd98];
	ld.u32 	%r7187, [%rd97+12];
	// inline asm
	prmt.b32 %r7185, %r7186, %r7187, %r2;
	// inline asm
	st.u32 	[%rd100+8], %r7185;
	ld.u32 	%r7190, [%rd97+12];
	ld.u32 	%r7191, [%rd97+8];
	// inline asm
	prmt.b32 %r7189, %r7190, %r7191, %r2;
	// inline asm
	st.u32 	[%rd100+4], %r7189;
	ld.u32 	%r7194, [%rd97+8];
	ld.u32 	%r7195, [%rd97+4];
	// inline asm
	prmt.b32 %r7193, %r7194, %r7195, %r2;
	// inline asm
	st.u32 	[%rd100], %r7193;
	ld.u32 	%r7198, [%rd97+4];
	ld.u32 	%r7199, [%rd97];
	// inline asm
	prmt.b32 %r7197, %r7198, %r7199, %r2;
	// inline asm
	st.u32 	[%rd99+12], %r7197;
	ld.u32 	%r7202, [%rd97];
	ld.u32 	%r7203, [%rd96+12];
	// inline asm
	prmt.b32 %r7201, %r7202, %r7203, %r2;
	// inline asm
	st.u32 	[%rd99+8], %r7201;
	ld.u32 	%r7206, [%rd96+12];
	ld.u32 	%r7207, [%rd96+8];
	// inline asm
	prmt.b32 %r7205, %r7206, %r7207, %r2;
	// inline asm
	st.u32 	[%rd99+4], %r7205;
	ld.u32 	%r7210, [%rd96+8];
	ld.u32 	%r7211, [%rd96+4];
	// inline asm
	prmt.b32 %r7209, %r7210, %r7211, %r2;
	// inline asm
	st.u32 	[%rd99], %r7209;
	ld.u32 	%r7214, [%rd96+4];
	ld.u32 	%r7215, [%rd96];
	// inline asm
	prmt.b32 %r7213, %r7214, %r7215, %r2;
	// inline asm
	st.u32 	[%rd98+12], %r7213;
	ld.u32 	%r7218, [%rd96];
	ld.u32 	%r7219, [%rd95+12];
	// inline asm
	prmt.b32 %r7217, %r7218, %r7219, %r2;
	// inline asm
	st.u32 	[%rd98+8], %r7217;
	ld.u32 	%r7222, [%rd95+12];
	ld.u32 	%r7223, [%rd95+8];
	// inline asm
	prmt.b32 %r7221, %r7222, %r7223, %r2;
	// inline asm
	st.u32 	[%rd98+4], %r7221;
	ld.u32 	%r7226, [%rd95+8];
	ld.u32 	%r7227, [%rd95+4];
	// inline asm
	prmt.b32 %r7225, %r7226, %r7227, %r2;
	// inline asm
	st.u32 	[%rd98], %r7225;
	ld.u32 	%r7230, [%rd95+4];
	ld.u32 	%r7231, [%rd95];
	// inline asm
	prmt.b32 %r7229, %r7230, %r7231, %r2;
	// inline asm
	st.u32 	[%rd97+12], %r7229;
	ld.u32 	%r7234, [%rd95];
	mov.u32 	%r8476, 0;
	// inline asm
	prmt.b32 %r7233, %r7234, %r8476, %r2;
	// inline asm
	st.u32 	[%rd97+8], %r7233;
	st.u32 	[%rd97+4], %r8476;
	st.u32 	[%rd97], %r8476;
	st.u32 	[%rd96+12], %r8476;
	st.u32 	[%rd96+8], %r8476;
	st.u32 	[%rd96+4], %r8476;
	st.u32 	[%rd96], %r8476;
	st.u32 	[%rd95+12], %r8476;
	st.u32 	[%rd95+8], %r8476;
	mov.u64 	%rd1171, 0;
	st.u32 	[%rd95+4], %rd1171;
	st.u32 	[%rd95], %rd1171;
	bra.uni 	BB1_172;

BB1_24:
	setp.eq.s32	%p34, %r1, 10;
	@%p34 bra 	BB1_75;
	bra.uni 	BB1_25;

BB1_75:
	ld.u32 	%r3585, [%rd102+12];
	mov.u32 	%r8442, 0;
	// inline asm
	prmt.b32 %r8452, %r8442, %r3585, %r2;
	// inline asm
	ld.u32 	%r3588, [%rd102+12];
	ld.u32 	%r3589, [%rd102+8];
	// inline asm
	prmt.b32 %r8453, %r3588, %r3589, %r2;
	// inline asm
	ld.u32 	%r3592, [%rd102+8];
	ld.u32 	%r3593, [%rd102+4];
	// inline asm
	prmt.b32 %r8454, %r3592, %r3593, %r2;
	// inline asm
	ld.u32 	%r3596, [%rd102+4];
	ld.u32 	%r3597, [%rd102];
	// inline asm
	prmt.b32 %r8447, %r3596, %r3597, %r2;
	// inline asm
	ld.u32 	%r3600, [%rd102];
	ld.u32 	%r3601, [%rd101+12];
	// inline asm
	prmt.b32 %r8448, %r3600, %r3601, %r2;
	// inline asm
	ld.u32 	%r3604, [%rd101+12];
	ld.u32 	%r3605, [%rd101+8];
	// inline asm
	prmt.b32 %r8449, %r3604, %r3605, %r2;
	// inline asm
	ld.u32 	%r3608, [%rd101+8];
	ld.u32 	%r3609, [%rd101+4];
	// inline asm
	prmt.b32 %r8450, %r3608, %r3609, %r2;
	// inline asm
	ld.u32 	%r3612, [%rd101+4];
	ld.u32 	%r3613, [%rd101];
	// inline asm
	prmt.b32 %r8443, %r3612, %r3613, %r2;
	// inline asm
	ld.u32 	%r3616, [%rd101];
	ld.u32 	%r3617, [%rd100+12];
	// inline asm
	prmt.b32 %r8444, %r3616, %r3617, %r2;
	// inline asm
	ld.u32 	%r3620, [%rd100+12];
	ld.u32 	%r3621, [%rd100+8];
	// inline asm
	prmt.b32 %r8445, %r3620, %r3621, %r2;
	// inline asm
	ld.u32 	%r3624, [%rd100+8];
	ld.u32 	%r3625, [%rd100+4];
	// inline asm
	prmt.b32 %r8446, %r3624, %r3625, %r2;
	// inline asm
	ld.u32 	%r3628, [%rd100+4];
	ld.u32 	%r3629, [%rd100];
	// inline asm
	prmt.b32 %r3627, %r3628, %r3629, %r2;
	// inline asm
	st.u32 	[%rd102+12], %r3627;
	ld.u32 	%r3632, [%rd100];
	ld.u32 	%r3633, [%rd99+12];
	// inline asm
	prmt.b32 %r3631, %r3632, %r3633, %r2;
	// inline asm
	st.u32 	[%rd102+8], %r3631;
	ld.u32 	%r3636, [%rd99+12];
	ld.u32 	%r3637, [%rd99+8];
	// inline asm
	prmt.b32 %r3635, %r3636, %r3637, %r2;
	// inline asm
	st.u32 	[%rd102+4], %r3635;
	ld.u32 	%r3640, [%rd99+8];
	ld.u32 	%r3641, [%rd99+4];
	// inline asm
	prmt.b32 %r3639, %r3640, %r3641, %r2;
	// inline asm
	st.u32 	[%rd102], %r3639;
	ld.u32 	%r3644, [%rd99+4];
	ld.u32 	%r3645, [%rd99];
	// inline asm
	prmt.b32 %r3643, %r3644, %r3645, %r2;
	// inline asm
	st.u32 	[%rd101+12], %r3643;
	ld.u32 	%r3648, [%rd99];
	ld.u32 	%r3649, [%rd98+12];
	// inline asm
	prmt.b32 %r3647, %r3648, %r3649, %r2;
	// inline asm
	st.u32 	[%rd101+8], %r3647;
	ld.u32 	%r3652, [%rd98+12];
	ld.u32 	%r3653, [%rd98+8];
	// inline asm
	prmt.b32 %r3651, %r3652, %r3653, %r2;
	// inline asm
	st.u32 	[%rd101+4], %r3651;
	ld.u32 	%r3656, [%rd98+8];
	ld.u32 	%r3657, [%rd98+4];
	// inline asm
	prmt.b32 %r3655, %r3656, %r3657, %r2;
	// inline asm
	st.u32 	[%rd101], %r3655;
	ld.u32 	%r3660, [%rd98+4];
	ld.u32 	%r3661, [%rd98];
	// inline asm
	prmt.b32 %r3659, %r3660, %r3661, %r2;
	// inline asm
	st.u32 	[%rd100+12], %r3659;
	ld.u32 	%r3664, [%rd98];
	ld.u32 	%r3665, [%rd97+12];
	// inline asm
	prmt.b32 %r3663, %r3664, %r3665, %r2;
	// inline asm
	st.u32 	[%rd100+8], %r3663;
	ld.u32 	%r3668, [%rd97+12];
	ld.u32 	%r3669, [%rd97+8];
	// inline asm
	prmt.b32 %r3667, %r3668, %r3669, %r2;
	// inline asm
	st.u32 	[%rd100+4], %r3667;
	ld.u32 	%r3672, [%rd97+8];
	ld.u32 	%r3673, [%rd97+4];
	// inline asm
	prmt.b32 %r3671, %r3672, %r3673, %r2;
	// inline asm
	st.u32 	[%rd100], %r3671;
	ld.u32 	%r3676, [%rd97+4];
	ld.u32 	%r3677, [%rd97];
	// inline asm
	prmt.b32 %r3675, %r3676, %r3677, %r2;
	// inline asm
	st.u32 	[%rd99+12], %r3675;
	ld.u32 	%r3680, [%rd97];
	ld.u32 	%r3681, [%rd96+12];
	// inline asm
	prmt.b32 %r3679, %r3680, %r3681, %r2;
	// inline asm
	st.u32 	[%rd99+8], %r3679;
	ld.u32 	%r3684, [%rd96+12];
	ld.u32 	%r3685, [%rd96+8];
	// inline asm
	prmt.b32 %r3683, %r3684, %r3685, %r2;
	// inline asm
	st.u32 	[%rd99+4], %r3683;
	ld.u32 	%r3688, [%rd96+8];
	ld.u32 	%r3689, [%rd96+4];
	// inline asm
	prmt.b32 %r3687, %r3688, %r3689, %r2;
	// inline asm
	st.u32 	[%rd99], %r3687;
	ld.u32 	%r3692, [%rd96+4];
	ld.u32 	%r3693, [%rd96];
	// inline asm
	prmt.b32 %r3691, %r3692, %r3693, %r2;
	// inline asm
	st.u32 	[%rd98+12], %r3691;
	ld.u32 	%r3696, [%rd96];
	ld.u32 	%r3697, [%rd95+12];
	// inline asm
	prmt.b32 %r3695, %r3696, %r3697, %r2;
	// inline asm
	st.u32 	[%rd98+8], %r3695;
	ld.u32 	%r3700, [%rd95+12];
	ld.u32 	%r3701, [%rd95+8];
	// inline asm
	prmt.b32 %r3699, %r3700, %r3701, %r2;
	// inline asm
	st.u32 	[%rd98+4], %r3699;
	ld.u32 	%r3704, [%rd95+8];
	ld.u32 	%r3705, [%rd95+4];
	// inline asm
	prmt.b32 %r3703, %r3704, %r3705, %r2;
	// inline asm
	st.u32 	[%rd98], %r3703;
	ld.u32 	%r3708, [%rd95+4];
	ld.u32 	%r3709, [%rd95];
	// inline asm
	prmt.b32 %r3707, %r3708, %r3709, %r2;
	// inline asm
	st.u32 	[%rd97+12], %r3707;
	ld.u32 	%r3712, [%rd95];
	// inline asm
	prmt.b32 %r3711, %r3712, %r8442, %r2;
	// inline asm
	st.u32 	[%rd97+8], %r3711;
	st.u32 	[%rd97+4], %r8442;
	st.u32 	[%rd97], %r8442;
	st.u32 	[%rd96+12], %r8442;
	st.u32 	[%rd96+8], %r8442;
	st.u32 	[%rd96+4], %r8442;
	st.u32 	[%rd96], %r8442;
	st.u32 	[%rd95+12], %r8442;
	st.u32 	[%rd95+8], %r8442;
	mov.u64 	%rd124, 0;
	st.u32 	[%rd95+4], %rd124;
	st.u32 	[%rd95], %rd124;
	mov.u32 	%r8451, %r8442;
	bra.uni 	BB1_80;

BB1_145:
	setp.eq.s32	%p59, %r1, 26;
	@%p59 bra 	BB1_157;
	bra.uni 	BB1_146;

BB1_157:
	ld.u32 	%r6270, [%rd96+4];
	ld.u32 	%r6271, [%rd96];
	// inline asm
	prmt.b32 %r6269, %r6270, %r6271, %r2;
	// inline asm
	st.u32 	[%rd102+12], %r6269;
	ld.u32 	%r6274, [%rd96];
	ld.u32 	%r6275, [%rd95+12];
	// inline asm
	prmt.b32 %r6273, %r6274, %r6275, %r2;
	// inline asm
	st.u32 	[%rd102+8], %r6273;
	ld.u32 	%r6278, [%rd95+12];
	ld.u32 	%r6279, [%rd95+8];
	// inline asm
	prmt.b32 %r6277, %r6278, %r6279, %r2;
	// inline asm
	st.u32 	[%rd102+4], %r6277;
	ld.u32 	%r6282, [%rd95+8];
	ld.u32 	%r6283, [%rd95+4];
	// inline asm
	prmt.b32 %r6281, %r6282, %r6283, %r2;
	// inline asm
	st.u32 	[%rd102], %r6281;
	ld.u32 	%r6286, [%rd95+4];
	ld.u32 	%r6287, [%rd95];
	// inline asm
	prmt.b32 %r6285, %r6286, %r6287, %r2;
	// inline asm
	st.u32 	[%rd101+12], %r6285;
	ld.u32 	%r6290, [%rd95];
	mov.u32 	%r8476, 0;
	// inline asm
	prmt.b32 %r6289, %r6290, %r8476, %r2;
	// inline asm
	st.u32 	[%rd101+8], %r6289;
	st.u32 	[%rd101+4], %r8476;
	st.u32 	[%rd101], %r8476;
	st.u32 	[%rd100+12], %r8476;
	st.u32 	[%rd100+8], %r8476;
	st.u32 	[%rd100+4], %r8476;
	st.u32 	[%rd100], %r8476;
	st.u32 	[%rd99+12], %r8476;
	st.u32 	[%rd99+8], %r8476;
	st.u32 	[%rd99+4], %r8476;
	st.u32 	[%rd99], %r8476;
	st.u32 	[%rd98+12], %r8476;
	st.u32 	[%rd98+8], %r8476;
	st.u32 	[%rd98+4], %r8476;
	st.u32 	[%rd98], %r8476;
	st.u32 	[%rd97+12], %r8476;
	st.u32 	[%rd97+8], %r8476;
	st.u32 	[%rd97+4], %r8476;
	st.u32 	[%rd97], %r8476;
	st.u32 	[%rd96+12], %r8476;
	st.u32 	[%rd96+8], %r8476;
	st.u32 	[%rd96+4], %r8476;
	st.u32 	[%rd96], %r8476;
	st.u32 	[%rd95+12], %r8476;
	st.u32 	[%rd95+8], %r8476;
	mov.u64 	%rd1155, 0;
	st.u32 	[%rd95+4], %rd1155;
	st.u32 	[%rd95], %rd1155;
	bra.uni 	BB1_172;

BB1_55:
	setp.eq.s32	%p11, %r1, 26;
	@%p11 bra 	BB1_67;
	bra.uni 	BB1_56;

BB1_67:
	ld.u32 	%r1257, [%rd102+12];
	mov.u32 	%r8442, 0;
	// inline asm
	prmt.b32 %r8468, %r8442, %r1257, %r2;
	// inline asm
	ld.u32 	%r1260, [%rd102+12];
	ld.u32 	%r1261, [%rd102+8];
	// inline asm
	prmt.b32 %r8469, %r1260, %r1261, %r2;
	// inline asm
	ld.u32 	%r1264, [%rd102+8];
	ld.u32 	%r1265, [%rd102+4];
	// inline asm
	prmt.b32 %r8470, %r1264, %r1265, %r2;
	// inline asm
	ld.u32 	%r1268, [%rd102+4];
	ld.u32 	%r1269, [%rd102];
	// inline asm
	prmt.b32 %r8463, %r1268, %r1269, %r2;
	// inline asm
	ld.u32 	%r1272, [%rd102];
	ld.u32 	%r1273, [%rd101+12];
	// inline asm
	prmt.b32 %r8464, %r1272, %r1273, %r2;
	// inline asm
	ld.u32 	%r1276, [%rd101+12];
	ld.u32 	%r1277, [%rd101+8];
	// inline asm
	prmt.b32 %r8465, %r1276, %r1277, %r2;
	// inline asm
	ld.u32 	%r1280, [%rd101+8];
	ld.u32 	%r1281, [%rd101+4];
	// inline asm
	prmt.b32 %r8466, %r1280, %r1281, %r2;
	// inline asm
	ld.u32 	%r1284, [%rd101+4];
	ld.u32 	%r1285, [%rd101];
	// inline asm
	prmt.b32 %r8459, %r1284, %r1285, %r2;
	// inline asm
	ld.u32 	%r1288, [%rd101];
	ld.u32 	%r1289, [%rd100+12];
	// inline asm
	prmt.b32 %r8460, %r1288, %r1289, %r2;
	// inline asm
	ld.u32 	%r1292, [%rd100+12];
	ld.u32 	%r1293, [%rd100+8];
	// inline asm
	prmt.b32 %r8461, %r1292, %r1293, %r2;
	// inline asm
	ld.u32 	%r1296, [%rd100+8];
	ld.u32 	%r1297, [%rd100+4];
	// inline asm
	prmt.b32 %r8462, %r1296, %r1297, %r2;
	// inline asm
	ld.u32 	%r1300, [%rd100+4];
	ld.u32 	%r1301, [%rd100];
	// inline asm
	prmt.b32 %r8455, %r1300, %r1301, %r2;
	// inline asm
	ld.u32 	%r1304, [%rd100];
	ld.u32 	%r1305, [%rd99+12];
	// inline asm
	prmt.b32 %r8456, %r1304, %r1305, %r2;
	// inline asm
	ld.u32 	%r1308, [%rd99+12];
	ld.u32 	%r1309, [%rd99+8];
	// inline asm
	prmt.b32 %r8457, %r1308, %r1309, %r2;
	// inline asm
	ld.u32 	%r1312, [%rd99+8];
	ld.u32 	%r1313, [%rd99+4];
	// inline asm
	prmt.b32 %r8458, %r1312, %r1313, %r2;
	// inline asm
	ld.u32 	%r1316, [%rd99+4];
	ld.u32 	%r1317, [%rd99];
	// inline asm
	prmt.b32 %r8451, %r1316, %r1317, %r2;
	// inline asm
	ld.u32 	%r1320, [%rd99];
	ld.u32 	%r1321, [%rd98+12];
	// inline asm
	prmt.b32 %r8452, %r1320, %r1321, %r2;
	// inline asm
	ld.u32 	%r1324, [%rd98+12];
	ld.u32 	%r1325, [%rd98+8];
	// inline asm
	prmt.b32 %r8453, %r1324, %r1325, %r2;
	// inline asm
	ld.u32 	%r1328, [%rd98+8];
	ld.u32 	%r1329, [%rd98+4];
	// inline asm
	prmt.b32 %r8454, %r1328, %r1329, %r2;
	// inline asm
	ld.u32 	%r1332, [%rd98+4];
	ld.u32 	%r1333, [%rd98];
	// inline asm
	prmt.b32 %r8447, %r1332, %r1333, %r2;
	// inline asm
	ld.u32 	%r1336, [%rd98];
	ld.u32 	%r1337, [%rd97+12];
	// inline asm
	prmt.b32 %r8448, %r1336, %r1337, %r2;
	// inline asm
	ld.u32 	%r1340, [%rd97+12];
	ld.u32 	%r1341, [%rd97+8];
	// inline asm
	prmt.b32 %r8449, %r1340, %r1341, %r2;
	// inline asm
	ld.u32 	%r1344, [%rd97+8];
	ld.u32 	%r1345, [%rd97+4];
	// inline asm
	prmt.b32 %r8450, %r1344, %r1345, %r2;
	// inline asm
	ld.u32 	%r1348, [%rd97+4];
	ld.u32 	%r1349, [%rd97];
	// inline asm
	prmt.b32 %r8443, %r1348, %r1349, %r2;
	// inline asm
	ld.u32 	%r1352, [%rd97];
	ld.u32 	%r1353, [%rd96+12];
	// inline asm
	prmt.b32 %r8444, %r1352, %r1353, %r2;
	// inline asm
	ld.u32 	%r1356, [%rd96+12];
	ld.u32 	%r1357, [%rd96+8];
	// inline asm
	prmt.b32 %r8445, %r1356, %r1357, %r2;
	// inline asm
	ld.u32 	%r1360, [%rd96+8];
	ld.u32 	%r1361, [%rd96+4];
	// inline asm
	prmt.b32 %r8446, %r1360, %r1361, %r2;
	// inline asm
	ld.u32 	%r1364, [%rd96+4];
	ld.u32 	%r1365, [%rd96];
	// inline asm
	prmt.b32 %r1363, %r1364, %r1365, %r2;
	// inline asm
	st.u32 	[%rd102+12], %r1363;
	ld.u32 	%r1368, [%rd96];
	ld.u32 	%r1369, [%rd95+12];
	// inline asm
	prmt.b32 %r1367, %r1368, %r1369, %r2;
	// inline asm
	st.u32 	[%rd102+8], %r1367;
	ld.u32 	%r1372, [%rd95+12];
	ld.u32 	%r1373, [%rd95+8];
	// inline asm
	prmt.b32 %r1371, %r1372, %r1373, %r2;
	// inline asm
	st.u32 	[%rd102+4], %r1371;
	ld.u32 	%r1376, [%rd95+8];
	ld.u32 	%r1377, [%rd95+4];
	// inline asm
	prmt.b32 %r1375, %r1376, %r1377, %r2;
	// inline asm
	st.u32 	[%rd102], %r1375;
	ld.u32 	%r1380, [%rd95+4];
	ld.u32 	%r1381, [%rd95];
	// inline asm
	prmt.b32 %r1379, %r1380, %r1381, %r2;
	// inline asm
	st.u32 	[%rd101+12], %r1379;
	ld.u32 	%r1384, [%rd95];
	// inline asm
	prmt.b32 %r1383, %r1384, %r8442, %r2;
	// inline asm
	st.u32 	[%rd101+8], %r1383;
	st.u32 	[%rd101+4], %r8442;
	st.u32 	[%rd101], %r8442;
	st.u32 	[%rd100+12], %r8442;
	st.u32 	[%rd100+8], %r8442;
	st.u32 	[%rd100+4], %r8442;
	st.u32 	[%rd100], %r8442;
	st.u32 	[%rd99+12], %r8442;
	st.u32 	[%rd99+8], %r8442;
	st.u32 	[%rd99+4], %r8442;
	st.u32 	[%rd99], %r8442;
	st.u32 	[%rd98+12], %r8442;
	st.u32 	[%rd98+8], %r8442;
	st.u32 	[%rd98+4], %r8442;
	st.u32 	[%rd98], %r8442;
	st.u32 	[%rd97+12], %r8442;
	st.u32 	[%rd97+8], %r8442;
	st.u32 	[%rd97+4], %r8442;
	st.u32 	[%rd97], %r8442;
	st.u32 	[%rd96+12], %r8442;
	st.u32 	[%rd96+8], %r8442;
	st.u32 	[%rd96+4], %r8442;
	st.u32 	[%rd96], %r8442;
	st.u32 	[%rd95+12], %r8442;
	st.u32 	[%rd95+8], %r8442;
	mov.u64 	%rd108, 0;
	st.u32 	[%rd95+4], %rd108;
	st.u32 	[%rd95], %rd108;
	mov.u32 	%r8467, %r8442;
	bra.uni 	BB1_84;

BB1_106:
	setp.eq.s32	%p88, %r1, 6;
	@%p88 bra 	BB1_167;
	bra.uni 	BB1_107;

BB1_167:
	ld.u32 	%r7530, [%rd101+4];
	ld.u32 	%r7531, [%rd101];
	// inline asm
	prmt.b32 %r7529, %r7530, %r7531, %r2;
	// inline asm
	st.u32 	[%rd102+12], %r7529;
	ld.u32 	%r7534, [%rd101];
	ld.u32 	%r7535, [%rd100+12];
	// inline asm
	prmt.b32 %r7533, %r7534, %r7535, %r2;
	// inline asm
	st.u32 	[%rd102+8], %r7533;
	ld.u32 	%r7538, [%rd100+12];
	ld.u32 	%r7539, [%rd100+8];
	// inline asm
	prmt.b32 %r7537, %r7538, %r7539, %r2;
	// inline asm
	st.u32 	[%rd102+4], %r7537;
	ld.u32 	%r7542, [%rd100+8];
	ld.u32 	%r7543, [%rd100+4];
	// inline asm
	prmt.b32 %r7541, %r7542, %r7543, %r2;
	// inline asm
	st.u32 	[%rd102], %r7541;
	ld.u32 	%r7546, [%rd100+4];
	ld.u32 	%r7547, [%rd100];
	// inline asm
	prmt.b32 %r7545, %r7546, %r7547, %r2;
	// inline asm
	st.u32 	[%rd101+12], %r7545;
	ld.u32 	%r7550, [%rd100];
	ld.u32 	%r7551, [%rd99+12];
	// inline asm
	prmt.b32 %r7549, %r7550, %r7551, %r2;
	// inline asm
	st.u32 	[%rd101+8], %r7549;
	ld.u32 	%r7554, [%rd99+12];
	ld.u32 	%r7555, [%rd99+8];
	// inline asm
	prmt.b32 %r7553, %r7554, %r7555, %r2;
	// inline asm
	st.u32 	[%rd101+4], %r7553;
	ld.u32 	%r7558, [%rd99+8];
	ld.u32 	%r7559, [%rd99+4];
	// inline asm
	prmt.b32 %r7557, %r7558, %r7559, %r2;
	// inline asm
	st.u32 	[%rd101], %r7557;
	ld.u32 	%r7562, [%rd99+4];
	ld.u32 	%r7563, [%rd99];
	// inline asm
	prmt.b32 %r7561, %r7562, %r7563, %r2;
	// inline asm
	st.u32 	[%rd100+12], %r7561;
	ld.u32 	%r7566, [%rd99];
	ld.u32 	%r7567, [%rd98+12];
	// inline asm
	prmt.b32 %r7565, %r7566, %r7567, %r2;
	// inline asm
	st.u32 	[%rd100+8], %r7565;
	ld.u32 	%r7570, [%rd98+12];
	ld.u32 	%r7571, [%rd98+8];
	// inline asm
	prmt.b32 %r7569, %r7570, %r7571, %r2;
	// inline asm
	st.u32 	[%rd100+4], %r7569;
	ld.u32 	%r7574, [%rd98+8];
	ld.u32 	%r7575, [%rd98+4];
	// inline asm
	prmt.b32 %r7573, %r7574, %r7575, %r2;
	// inline asm
	st.u32 	[%rd100], %r7573;
	ld.u32 	%r7578, [%rd98+4];
	ld.u32 	%r7579, [%rd98];
	// inline asm
	prmt.b32 %r7577, %r7578, %r7579, %r2;
	// inline asm
	st.u32 	[%rd99+12], %r7577;
	ld.u32 	%r7582, [%rd98];
	ld.u32 	%r7583, [%rd97+12];
	// inline asm
	prmt.b32 %r7581, %r7582, %r7583, %r2;
	// inline asm
	st.u32 	[%rd99+8], %r7581;
	ld.u32 	%r7586, [%rd97+12];
	ld.u32 	%r7587, [%rd97+8];
	// inline asm
	prmt.b32 %r7585, %r7586, %r7587, %r2;
	// inline asm
	st.u32 	[%rd99+4], %r7585;
	ld.u32 	%r7590, [%rd97+8];
	ld.u32 	%r7591, [%rd97+4];
	// inline asm
	prmt.b32 %r7589, %r7590, %r7591, %r2;
	// inline asm
	st.u32 	[%rd99], %r7589;
	ld.u32 	%r7594, [%rd97+4];
	ld.u32 	%r7595, [%rd97];
	// inline asm
	prmt.b32 %r7593, %r7594, %r7595, %r2;
	// inline asm
	st.u32 	[%rd98+12], %r7593;
	ld.u32 	%r7598, [%rd97];
	ld.u32 	%r7599, [%rd96+12];
	// inline asm
	prmt.b32 %r7597, %r7598, %r7599, %r2;
	// inline asm
	st.u32 	[%rd98+8], %r7597;
	ld.u32 	%r7602, [%rd96+12];
	ld.u32 	%r7603, [%rd96+8];
	// inline asm
	prmt.b32 %r7601, %r7602, %r7603, %r2;
	// inline asm
	st.u32 	[%rd98+4], %r7601;
	ld.u32 	%r7606, [%rd96+8];
	ld.u32 	%r7607, [%rd96+4];
	// inline asm
	prmt.b32 %r7605, %r7606, %r7607, %r2;
	// inline asm
	st.u32 	[%rd98], %r7605;
	ld.u32 	%r7610, [%rd96+4];
	ld.u32 	%r7611, [%rd96];
	// inline asm
	prmt.b32 %r7609, %r7610, %r7611, %r2;
	// inline asm
	st.u32 	[%rd97+12], %r7609;
	ld.u32 	%r7614, [%rd96];
	ld.u32 	%r7615, [%rd95+12];
	// inline asm
	prmt.b32 %r7613, %r7614, %r7615, %r2;
	// inline asm
	st.u32 	[%rd97+8], %r7613;
	ld.u32 	%r7618, [%rd95+12];
	ld.u32 	%r7619, [%rd95+8];
	// inline asm
	prmt.b32 %r7617, %r7618, %r7619, %r2;
	// inline asm
	st.u32 	[%rd97+4], %r7617;
	ld.u32 	%r7622, [%rd95+8];
	ld.u32 	%r7623, [%rd95+4];
	// inline asm
	prmt.b32 %r7621, %r7622, %r7623, %r2;
	// inline asm
	st.u32 	[%rd97], %r7621;
	ld.u32 	%r7626, [%rd95+4];
	ld.u32 	%r7627, [%rd95];
	// inline asm
	prmt.b32 %r7625, %r7626, %r7627, %r2;
	// inline asm
	st.u32 	[%rd96+12], %r7625;
	ld.u32 	%r7630, [%rd95];
	mov.u32 	%r8476, 0;
	// inline asm
	prmt.b32 %r7629, %r7630, %r8476, %r2;
	// inline asm
	st.u32 	[%rd96+8], %r7629;
	st.u32 	[%rd96+4], %r8476;
	st.u32 	[%rd96], %r8476;
	st.u32 	[%rd95+12], %r8476;
	st.u32 	[%rd95+8], %r8476;
	mov.u64 	%rd1175, 0;
	st.u32 	[%rd95+4], %rd1175;
	st.u32 	[%rd95], %rd1175;
	bra.uni 	BB1_172;

BB1_16:
	setp.eq.s32	%p40, %r1, 6;
	@%p40 bra 	BB1_77;
	bra.uni 	BB1_17;

BB1_77:
	ld.u32 	%r4207, [%rd102+12];
	mov.u32 	%r8442, 0;
	// inline asm
	prmt.b32 %r8448, %r8442, %r4207, %r2;
	// inline asm
	ld.u32 	%r4210, [%rd102+12];
	ld.u32 	%r4211, [%rd102+8];
	// inline asm
	prmt.b32 %r8449, %r4210, %r4211, %r2;
	// inline asm
	ld.u32 	%r4214, [%rd102+8];
	ld.u32 	%r4215, [%rd102+4];
	// inline asm
	prmt.b32 %r8450, %r4214, %r4215, %r2;
	// inline asm
	ld.u32 	%r4218, [%rd102+4];
	ld.u32 	%r4219, [%rd102];
	// inline asm
	prmt.b32 %r8443, %r4218, %r4219, %r2;
	// inline asm
	ld.u32 	%r4222, [%rd102];
	ld.u32 	%r4223, [%rd101+12];
	// inline asm
	prmt.b32 %r8444, %r4222, %r4223, %r2;
	// inline asm
	ld.u32 	%r4226, [%rd101+12];
	ld.u32 	%r4227, [%rd101+8];
	// inline asm
	prmt.b32 %r8445, %r4226, %r4227, %r2;
	// inline asm
	ld.u32 	%r4230, [%rd101+8];
	ld.u32 	%r4231, [%rd101+4];
	// inline asm
	prmt.b32 %r8446, %r4230, %r4231, %r2;
	// inline asm
	ld.u32 	%r4234, [%rd101+4];
	ld.u32 	%r4235, [%rd101];
	// inline asm
	prmt.b32 %r4233, %r4234, %r4235, %r2;
	// inline asm
	st.u32 	[%rd102+12], %r4233;
	ld.u32 	%r4238, [%rd101];
	ld.u32 	%r4239, [%rd100+12];
	// inline asm
	prmt.b32 %r4237, %r4238, %r4239, %r2;
	// inline asm
	st.u32 	[%rd102+8], %r4237;
	ld.u32 	%r4242, [%rd100+12];
	ld.u32 	%r4243, [%rd100+8];
	// inline asm
	prmt.b32 %r4241, %r4242, %r4243, %r2;
	// inline asm
	st.u32 	[%rd102+4], %r4241;
	ld.u32 	%r4246, [%rd100+8];
	ld.u32 	%r4247, [%rd100+4];
	// inline asm
	prmt.b32 %r4245, %r4246, %r4247, %r2;
	// inline asm
	st.u32 	[%rd102], %r4245;
	ld.u32 	%r4250, [%rd100+4];
	ld.u32 	%r4251, [%rd100];
	// inline asm
	prmt.b32 %r4249, %r4250, %r4251, %r2;
	// inline asm
	st.u32 	[%rd101+12], %r4249;
	ld.u32 	%r4254, [%rd100];
	ld.u32 	%r4255, [%rd99+12];
	// inline asm
	prmt.b32 %r4253, %r4254, %r4255, %r2;
	// inline asm
	st.u32 	[%rd101+8], %r4253;
	ld.u32 	%r4258, [%rd99+12];
	ld.u32 	%r4259, [%rd99+8];
	// inline asm
	prmt.b32 %r4257, %r4258, %r4259, %r2;
	// inline asm
	st.u32 	[%rd101+4], %r4257;
	ld.u32 	%r4262, [%rd99+8];
	ld.u32 	%r4263, [%rd99+4];
	// inline asm
	prmt.b32 %r4261, %r4262, %r4263, %r2;
	// inline asm
	st.u32 	[%rd101], %r4261;
	ld.u32 	%r4266, [%rd99+4];
	ld.u32 	%r4267, [%rd99];
	// inline asm
	prmt.b32 %r4265, %r4266, %r4267, %r2;
	// inline asm
	st.u32 	[%rd100+12], %r4265;
	ld.u32 	%r4270, [%rd99];
	ld.u32 	%r4271, [%rd98+12];
	// inline asm
	prmt.b32 %r4269, %r4270, %r4271, %r2;
	// inline asm
	st.u32 	[%rd100+8], %r4269;
	ld.u32 	%r4274, [%rd98+12];
	ld.u32 	%r4275, [%rd98+8];
	// inline asm
	prmt.b32 %r4273, %r4274, %r4275, %r2;
	// inline asm
	st.u32 	[%rd100+4], %r4273;
	ld.u32 	%r4278, [%rd98+8];
	ld.u32 	%r4279, [%rd98+4];
	// inline asm
	prmt.b32 %r4277, %r4278, %r4279, %r2;
	// inline asm
	st.u32 	[%rd100], %r4277;
	ld.u32 	%r4282, [%rd98+4];
	ld.u32 	%r4283, [%rd98];
	// inline asm
	prmt.b32 %r4281, %r4282, %r4283, %r2;
	// inline asm
	st.u32 	[%rd99+12], %r4281;
	ld.u32 	%r4286, [%rd98];
	ld.u32 	%r4287, [%rd97+12];
	// inline asm
	prmt.b32 %r4285, %r4286, %r4287, %r2;
	// inline asm
	st.u32 	[%rd99+8], %r4285;
	ld.u32 	%r4290, [%rd97+12];
	ld.u32 	%r4291, [%rd97+8];
	// inline asm
	prmt.b32 %r4289, %r4290, %r4291, %r2;
	// inline asm
	st.u32 	[%rd99+4], %r4289;
	ld.u32 	%r4294, [%rd97+8];
	ld.u32 	%r4295, [%rd97+4];
	// inline asm
	prmt.b32 %r4293, %r4294, %r4295, %r2;
	// inline asm
	st.u32 	[%rd99], %r4293;
	ld.u32 	%r4298, [%rd97+4];
	ld.u32 	%r4299, [%rd97];
	// inline asm
	prmt.b32 %r4297, %r4298, %r4299, %r2;
	// inline asm
	st.u32 	[%rd98+12], %r4297;
	ld.u32 	%r4302, [%rd97];
	ld.u32 	%r4303, [%rd96+12];
	// inline asm
	prmt.b32 %r4301, %r4302, %r4303, %r2;
	// inline asm
	st.u32 	[%rd98+8], %r4301;
	ld.u32 	%r4306, [%rd96+12];
	ld.u32 	%r4307, [%rd96+8];
	// inline asm
	prmt.b32 %r4305, %r4306, %r4307, %r2;
	// inline asm
	st.u32 	[%rd98+4], %r4305;
	ld.u32 	%r4310, [%rd96+8];
	ld.u32 	%r4311, [%rd96+4];
	// inline asm
	prmt.b32 %r4309, %r4310, %r4311, %r2;
	// inline asm
	st.u32 	[%rd98], %r4309;
	ld.u32 	%r4314, [%rd96+4];
	ld.u32 	%r4315, [%rd96];
	// inline asm
	prmt.b32 %r4313, %r4314, %r4315, %r2;
	// inline asm
	st.u32 	[%rd97+12], %r4313;
	ld.u32 	%r4318, [%rd96];
	ld.u32 	%r4319, [%rd95+12];
	// inline asm
	prmt.b32 %r4317, %r4318, %r4319, %r2;
	// inline asm
	st.u32 	[%rd97+8], %r4317;
	ld.u32 	%r4322, [%rd95+12];
	ld.u32 	%r4323, [%rd95+8];
	// inline asm
	prmt.b32 %r4321, %r4322, %r4323, %r2;
	// inline asm
	st.u32 	[%rd97+4], %r4321;
	ld.u32 	%r4326, [%rd95+8];
	ld.u32 	%r4327, [%rd95+4];
	// inline asm
	prmt.b32 %r4325, %r4326, %r4327, %r2;
	// inline asm
	st.u32 	[%rd97], %r4325;
	ld.u32 	%r4330, [%rd95+4];
	ld.u32 	%r4331, [%rd95];
	// inline asm
	prmt.b32 %r4329, %r4330, %r4331, %r2;
	// inline asm
	st.u32 	[%rd96+12], %r4329;
	ld.u32 	%r4334, [%rd95];
	// inline asm
	prmt.b32 %r4333, %r4334, %r8442, %r2;
	// inline asm
	st.u32 	[%rd96+8], %r4333;
	st.u32 	[%rd96+4], %r8442;
	st.u32 	[%rd96], %r8442;
	st.u32 	[%rd95+12], %r8442;
	st.u32 	[%rd95+8], %r8442;
	mov.u64 	%rd128, 0;
	st.u32 	[%rd95+4], %rd128;
	st.u32 	[%rd95], %rd128;
	mov.u32 	%r8447, %r8442;
	bra.uni 	BB1_79;

BB1_137:
	setp.eq.s32	%p65, %r1, 22;
	@%p65 bra 	BB1_159;
	bra.uni 	BB1_138;

BB1_159:
	ld.u32 	%r6394, [%rd97+4];
	ld.u32 	%r6395, [%rd97];
	// inline asm
	prmt.b32 %r6393, %r6394, %r6395, %r2;
	// inline asm
	st.u32 	[%rd102+12], %r6393;
	ld.u32 	%r6398, [%rd97];
	ld.u32 	%r6399, [%rd96+12];
	// inline asm
	prmt.b32 %r6397, %r6398, %r6399, %r2;
	// inline asm
	st.u32 	[%rd102+8], %r6397;
	ld.u32 	%r6402, [%rd96+12];
	ld.u32 	%r6403, [%rd96+8];
	// inline asm
	prmt.b32 %r6401, %r6402, %r6403, %r2;
	// inline asm
	st.u32 	[%rd102+4], %r6401;
	ld.u32 	%r6406, [%rd96+8];
	ld.u32 	%r6407, [%rd96+4];
	// inline asm
	prmt.b32 %r6405, %r6406, %r6407, %r2;
	// inline asm
	st.u32 	[%rd102], %r6405;
	ld.u32 	%r6410, [%rd96+4];
	ld.u32 	%r6411, [%rd96];
	// inline asm
	prmt.b32 %r6409, %r6410, %r6411, %r2;
	// inline asm
	st.u32 	[%rd101+12], %r6409;
	ld.u32 	%r6414, [%rd96];
	ld.u32 	%r6415, [%rd95+12];
	// inline asm
	prmt.b32 %r6413, %r6414, %r6415, %r2;
	// inline asm
	st.u32 	[%rd101+8], %r6413;
	ld.u32 	%r6418, [%rd95+12];
	ld.u32 	%r6419, [%rd95+8];
	// inline asm
	prmt.b32 %r6417, %r6418, %r6419, %r2;
	// inline asm
	st.u32 	[%rd101+4], %r6417;
	ld.u32 	%r6422, [%rd95+8];
	ld.u32 	%r6423, [%rd95+4];
	// inline asm
	prmt.b32 %r6421, %r6422, %r6423, %r2;
	// inline asm
	st.u32 	[%rd101], %r6421;
	ld.u32 	%r6426, [%rd95+4];
	ld.u32 	%r6427, [%rd95];
	// inline asm
	prmt.b32 %r6425, %r6426, %r6427, %r2;
	// inline asm
	st.u32 	[%rd100+12], %r6425;
	ld.u32 	%r6430, [%rd95];
	mov.u32 	%r8476, 0;
	// inline asm
	prmt.b32 %r6429, %r6430, %r8476, %r2;
	// inline asm
	st.u32 	[%rd100+8], %r6429;
	st.u32 	[%rd100+4], %r8476;
	st.u32 	[%rd100], %r8476;
	st.u32 	[%rd99+12], %r8476;
	st.u32 	[%rd99+8], %r8476;
	st.u32 	[%rd99+4], %r8476;
	st.u32 	[%rd99], %r8476;
	st.u32 	[%rd98+12], %r8476;
	st.u32 	[%rd98+8], %r8476;
	st.u32 	[%rd98+4], %r8476;
	st.u32 	[%rd98], %r8476;
	st.u32 	[%rd97+12], %r8476;
	st.u32 	[%rd97+8], %r8476;
	st.u32 	[%rd97+4], %r8476;
	st.u32 	[%rd97], %r8476;
	st.u32 	[%rd96+12], %r8476;
	st.u32 	[%rd96+8], %r8476;
	st.u32 	[%rd96+4], %r8476;
	st.u32 	[%rd96], %r8476;
	st.u32 	[%rd95+12], %r8476;
	st.u32 	[%rd95+8], %r8476;
	mov.u64 	%rd1159, 0;
	st.u32 	[%rd95+4], %rd1159;
	st.u32 	[%rd95], %rd1159;
	bra.uni 	BB1_172;

BB1_47:
	setp.eq.s32	%p17, %r1, 22;
	@%p17 bra 	BB1_69;
	bra.uni 	BB1_48;

BB1_69:
	ld.u32 	%r1815, [%rd102+12];
	mov.u32 	%r8442, 0;
	// inline asm
	prmt.b32 %r8464, %r8442, %r1815, %r2;
	// inline asm
	ld.u32 	%r1818, [%rd102+12];
	ld.u32 	%r1819, [%rd102+8];
	// inline asm
	prmt.b32 %r8465, %r1818, %r1819, %r2;
	// inline asm
	ld.u32 	%r1822, [%rd102+8];
	ld.u32 	%r1823, [%rd102+4];
	// inline asm
	prmt.b32 %r8466, %r1822, %r1823, %r2;
	// inline asm
	ld.u32 	%r1826, [%rd102+4];
	ld.u32 	%r1827, [%rd102];
	// inline asm
	prmt.b32 %r8459, %r1826, %r1827, %r2;
	// inline asm
	ld.u32 	%r1830, [%rd102];
	ld.u32 	%r1831, [%rd101+12];
	// inline asm
	prmt.b32 %r8460, %r1830, %r1831, %r2;
	// inline asm
	ld.u32 	%r1834, [%rd101+12];
	ld.u32 	%r1835, [%rd101+8];
	// inline asm
	prmt.b32 %r8461, %r1834, %r1835, %r2;
	// inline asm
	ld.u32 	%r1838, [%rd101+8];
	ld.u32 	%r1839, [%rd101+4];
	// inline asm
	prmt.b32 %r8462, %r1838, %r1839, %r2;
	// inline asm
	ld.u32 	%r1842, [%rd101+4];
	ld.u32 	%r1843, [%rd101];
	// inline asm
	prmt.b32 %r8455, %r1842, %r1843, %r2;
	// inline asm
	ld.u32 	%r1846, [%rd101];
	ld.u32 	%r1847, [%rd100+12];
	// inline asm
	prmt.b32 %r8456, %r1846, %r1847, %r2;
	// inline asm
	ld.u32 	%r1850, [%rd100+12];
	ld.u32 	%r1851, [%rd100+8];
	// inline asm
	prmt.b32 %r8457, %r1850, %r1851, %r2;
	// inline asm
	ld.u32 	%r1854, [%rd100+8];
	ld.u32 	%r1855, [%rd100+4];
	// inline asm
	prmt.b32 %r8458, %r1854, %r1855, %r2;
	// inline asm
	ld.u32 	%r1858, [%rd100+4];
	ld.u32 	%r1859, [%rd100];
	// inline asm
	prmt.b32 %r8451, %r1858, %r1859, %r2;
	// inline asm
	ld.u32 	%r1862, [%rd100];
	ld.u32 	%r1863, [%rd99+12];
	// inline asm
	prmt.b32 %r8452, %r1862, %r1863, %r2;
	// inline asm
	ld.u32 	%r1866, [%rd99+12];
	ld.u32 	%r1867, [%rd99+8];
	// inline asm
	prmt.b32 %r8453, %r1866, %r1867, %r2;
	// inline asm
	ld.u32 	%r1870, [%rd99+8];
	ld.u32 	%r1871, [%rd99+4];
	// inline asm
	prmt.b32 %r8454, %r1870, %r1871, %r2;
	// inline asm
	ld.u32 	%r1874, [%rd99+4];
	ld.u32 	%r1875, [%rd99];
	// inline asm
	prmt.b32 %r8447, %r1874, %r1875, %r2;
	// inline asm
	ld.u32 	%r1878, [%rd99];
	ld.u32 	%r1879, [%rd98+12];
	// inline asm
	prmt.b32 %r8448, %r1878, %r1879, %r2;
	// inline asm
	ld.u32 	%r1882, [%rd98+12];
	ld.u32 	%r1883, [%rd98+8];
	// inline asm
	prmt.b32 %r8449, %r1882, %r1883, %r2;
	// inline asm
	ld.u32 	%r1886, [%rd98+8];
	ld.u32 	%r1887, [%rd98+4];
	// inline asm
	prmt.b32 %r8450, %r1886, %r1887, %r2;
	// inline asm
	ld.u32 	%r1890, [%rd98+4];
	ld.u32 	%r1891, [%rd98];
	// inline asm
	prmt.b32 %r8443, %r1890, %r1891, %r2;
	// inline asm
	ld.u32 	%r1894, [%rd98];
	ld.u32 	%r1895, [%rd97+12];
	// inline asm
	prmt.b32 %r8444, %r1894, %r1895, %r2;
	// inline asm
	ld.u32 	%r1898, [%rd97+12];
	ld.u32 	%r1899, [%rd97+8];
	// inline asm
	prmt.b32 %r8445, %r1898, %r1899, %r2;
	// inline asm
	ld.u32 	%r1902, [%rd97+8];
	ld.u32 	%r1903, [%rd97+4];
	// inline asm
	prmt.b32 %r8446, %r1902, %r1903, %r2;
	// inline asm
	ld.u32 	%r1906, [%rd97+4];
	ld.u32 	%r1907, [%rd97];
	// inline asm
	prmt.b32 %r1905, %r1906, %r1907, %r2;
	// inline asm
	st.u32 	[%rd102+12], %r1905;
	ld.u32 	%r1910, [%rd97];
	ld.u32 	%r1911, [%rd96+12];
	// inline asm
	prmt.b32 %r1909, %r1910, %r1911, %r2;
	// inline asm
	st.u32 	[%rd102+8], %r1909;
	ld.u32 	%r1914, [%rd96+12];
	ld.u32 	%r1915, [%rd96+8];
	// inline asm
	prmt.b32 %r1913, %r1914, %r1915, %r2;
	// inline asm
	st.u32 	[%rd102+4], %r1913;
	ld.u32 	%r1918, [%rd96+8];
	ld.u32 	%r1919, [%rd96+4];
	// inline asm
	prmt.b32 %r1917, %r1918, %r1919, %r2;
	// inline asm
	st.u32 	[%rd102], %r1917;
	ld.u32 	%r1922, [%rd96+4];
	ld.u32 	%r1923, [%rd96];
	// inline asm
	prmt.b32 %r1921, %r1922, %r1923, %r2;
	// inline asm
	st.u32 	[%rd101+12], %r1921;
	ld.u32 	%r1926, [%rd96];
	ld.u32 	%r1927, [%rd95+12];
	// inline asm
	prmt.b32 %r1925, %r1926, %r1927, %r2;
	// inline asm
	st.u32 	[%rd101+8], %r1925;
	ld.u32 	%r1930, [%rd95+12];
	ld.u32 	%r1931, [%rd95+8];
	// inline asm
	prmt.b32 %r1929, %r1930, %r1931, %r2;
	// inline asm
	st.u32 	[%rd101+4], %r1929;
	ld.u32 	%r1934, [%rd95+8];
	ld.u32 	%r1935, [%rd95+4];
	// inline asm
	prmt.b32 %r1933, %r1934, %r1935, %r2;
	// inline asm
	st.u32 	[%rd101], %r1933;
	ld.u32 	%r1938, [%rd95+4];
	ld.u32 	%r1939, [%rd95];
	// inline asm
	prmt.b32 %r1937, %r1938, %r1939, %r2;
	// inline asm
	st.u32 	[%rd100+12], %r1937;
	ld.u32 	%r1942, [%rd95];
	// inline asm
	prmt.b32 %r1941, %r1942, %r8442, %r2;
	// inline asm
	st.u32 	[%rd100+8], %r1941;
	st.u32 	[%rd100+4], %r8442;
	st.u32 	[%rd100], %r8442;
	st.u32 	[%rd99+12], %r8442;
	st.u32 	[%rd99+8], %r8442;
	st.u32 	[%rd99+4], %r8442;
	st.u32 	[%rd99], %r8442;
	st.u32 	[%rd98+12], %r8442;
	st.u32 	[%rd98+8], %r8442;
	st.u32 	[%rd98+4], %r8442;
	st.u32 	[%rd98], %r8442;
	st.u32 	[%rd97+12], %r8442;
	st.u32 	[%rd97+8], %r8442;
	st.u32 	[%rd97+4], %r8442;
	st.u32 	[%rd97], %r8442;
	st.u32 	[%rd96+12], %r8442;
	st.u32 	[%rd96+8], %r8442;
	st.u32 	[%rd96+4], %r8442;
	st.u32 	[%rd96], %r8442;
	st.u32 	[%rd95+12], %r8442;
	st.u32 	[%rd95+8], %r8442;
	mov.u64 	%rd112, 0;
	st.u32 	[%rd95+4], %rd112;
	st.u32 	[%rd95], %rd112;
	mov.u32 	%r8463, %r8442;
	bra.uni 	BB1_83;

BB1_121:
	setp.eq.s32	%p77, %r1, 14;
	@%p77 bra 	BB1_163;
	bra.uni 	BB1_122;

BB1_163:
	ld.u32 	%r6834, [%rd99+4];
	ld.u32 	%r6835, [%rd99];
	// inline asm
	prmt.b32 %r6833, %r6834, %r6835, %r2;
	// inline asm
	st.u32 	[%rd102+12], %r6833;
	ld.u32 	%r6838, [%rd99];
	ld.u32 	%r6839, [%rd98+12];
	// inline asm
	prmt.b32 %r6837, %r6838, %r6839, %r2;
	// inline asm
	st.u32 	[%rd102+8], %r6837;
	ld.u32 	%r6842, [%rd98+12];
	ld.u32 	%r6843, [%rd98+8];
	// inline asm
	prmt.b32 %r6841, %r6842, %r6843, %r2;
	// inline asm
	st.u32 	[%rd102+4], %r6841;
	ld.u32 	%r6846, [%rd98+8];
	ld.u32 	%r6847, [%rd98+4];
	// inline asm
	prmt.b32 %r6845, %r6846, %r6847, %r2;
	// inline asm
	st.u32 	[%rd102], %r6845;
	ld.u32 	%r6850, [%rd98+4];
	ld.u32 	%r6851, [%rd98];
	// inline asm
	prmt.b32 %r6849, %r6850, %r6851, %r2;
	// inline asm
	st.u32 	[%rd101+12], %r6849;
	ld.u32 	%r6854, [%rd98];
	ld.u32 	%r6855, [%rd97+12];
	// inline asm
	prmt.b32 %r6853, %r6854, %r6855, %r2;
	// inline asm
	st.u32 	[%rd101+8], %r6853;
	ld.u32 	%r6858, [%rd97+12];
	ld.u32 	%r6859, [%rd97+8];
	// inline asm
	prmt.b32 %r6857, %r6858, %r6859, %r2;
	// inline asm
	st.u32 	[%rd101+4], %r6857;
	ld.u32 	%r6862, [%rd97+8];
	ld.u32 	%r6863, [%rd97+4];
	// inline asm
	prmt.b32 %r6861, %r6862, %r6863, %r2;
	// inline asm
	st.u32 	[%rd101], %r6861;
	ld.u32 	%r6866, [%rd97+4];
	ld.u32 	%r6867, [%rd97];
	// inline asm
	prmt.b32 %r6865, %r6866, %r6867, %r2;
	// inline asm
	st.u32 	[%rd100+12], %r6865;
	ld.u32 	%r6870, [%rd97];
	ld.u32 	%r6871, [%rd96+12];
	// inline asm
	prmt.b32 %r6869, %r6870, %r6871, %r2;
	// inline asm
	st.u32 	[%rd100+8], %r6869;
	ld.u32 	%r6874, [%rd96+12];
	ld.u32 	%r6875, [%rd96+8];
	// inline asm
	prmt.b32 %r6873, %r6874, %r6875, %r2;
	// inline asm
	st.u32 	[%rd100+4], %r6873;
	ld.u32 	%r6878, [%rd96+8];
	ld.u32 	%r6879, [%rd96+4];
	// inline asm
	prmt.b32 %r6877, %r6878, %r6879, %r2;
	// inline asm
	st.u32 	[%rd100], %r6877;
	ld.u32 	%r6882, [%rd96+4];
	ld.u32 	%r6883, [%rd96];
	// inline asm
	prmt.b32 %r6881, %r6882, %r6883, %r2;
	// inline asm
	st.u32 	[%rd99+12], %r6881;
	ld.u32 	%r6886, [%rd96];
	ld.u32 	%r6887, [%rd95+12];
	// inline asm
	prmt.b32 %r6885, %r6886, %r6887, %r2;
	// inline asm
	st.u32 	[%rd99+8], %r6885;
	ld.u32 	%r6890, [%rd95+12];
	ld.u32 	%r6891, [%rd95+8];
	// inline asm
	prmt.b32 %r6889, %r6890, %r6891, %r2;
	// inline asm
	st.u32 	[%rd99+4], %r6889;
	ld.u32 	%r6894, [%rd95+8];
	ld.u32 	%r6895, [%rd95+4];
	// inline asm
	prmt.b32 %r6893, %r6894, %r6895, %r2;
	// inline asm
	st.u32 	[%rd99], %r6893;
	ld.u32 	%r6898, [%rd95+4];
	ld.u32 	%r6899, [%rd95];
	// inline asm
	prmt.b32 %r6897, %r6898, %r6899, %r2;
	// inline asm
	st.u32 	[%rd98+12], %r6897;
	ld.u32 	%r6902, [%rd95];
	mov.u32 	%r8476, 0;
	// inline asm
	prmt.b32 %r6901, %r6902, %r8476, %r2;
	// inline asm
	st.u32 	[%rd98+8], %r6901;
	st.u32 	[%rd98+4], %r8476;
	st.u32 	[%rd98], %r8476;
	st.u32 	[%rd97+12], %r8476;
	st.u32 	[%rd97+8], %r8476;
	st.u32 	[%rd97+4], %r8476;
	st.u32 	[%rd97], %r8476;
	st.u32 	[%rd96+12], %r8476;
	st.u32 	[%rd96+8], %r8476;
	st.u32 	[%rd96+4], %r8476;
	st.u32 	[%rd96], %r8476;
	st.u32 	[%rd95+12], %r8476;
	st.u32 	[%rd95+8], %r8476;
	mov.u64 	%rd1167, 0;
	st.u32 	[%rd95+4], %rd1167;
	st.u32 	[%rd95], %rd1167;
	bra.uni 	BB1_172;

BB1_31:
	setp.eq.s32	%p29, %r1, 14;
	@%p29 bra 	BB1_73;
	bra.uni 	BB1_32;

BB1_73:
	ld.u32 	%r2979, [%rd102+12];
	mov.u32 	%r8442, 0;
	// inline asm
	prmt.b32 %r8456, %r8442, %r2979, %r2;
	// inline asm
	ld.u32 	%r2982, [%rd102+12];
	ld.u32 	%r2983, [%rd102+8];
	// inline asm
	prmt.b32 %r8457, %r2982, %r2983, %r2;
	// inline asm
	ld.u32 	%r2986, [%rd102+8];
	ld.u32 	%r2987, [%rd102+4];
	// inline asm
	prmt.b32 %r8458, %r2986, %r2987, %r2;
	// inline asm
	ld.u32 	%r2990, [%rd102+4];
	ld.u32 	%r2991, [%rd102];
	// inline asm
	prmt.b32 %r8451, %r2990, %r2991, %r2;
	// inline asm
	ld.u32 	%r2994, [%rd102];
	ld.u32 	%r2995, [%rd101+12];
	// inline asm
	prmt.b32 %r8452, %r2994, %r2995, %r2;
	// inline asm
	ld.u32 	%r2998, [%rd101+12];
	ld.u32 	%r2999, [%rd101+8];
	// inline asm
	prmt.b32 %r8453, %r2998, %r2999, %r2;
	// inline asm
	ld.u32 	%r3002, [%rd101+8];
	ld.u32 	%r3003, [%rd101+4];
	// inline asm
	prmt.b32 %r8454, %r3002, %r3003, %r2;
	// inline asm
	ld.u32 	%r3006, [%rd101+4];
	ld.u32 	%r3007, [%rd101];
	// inline asm
	prmt.b32 %r8447, %r3006, %r3007, %r2;
	// inline asm
	ld.u32 	%r3010, [%rd101];
	ld.u32 	%r3011, [%rd100+12];
	// inline asm
	prmt.b32 %r8448, %r3010, %r3011, %r2;
	// inline asm
	ld.u32 	%r3014, [%rd100+12];
	ld.u32 	%r3015, [%rd100+8];
	// inline asm
	prmt.b32 %r8449, %r3014, %r3015, %r2;
	// inline asm
	ld.u32 	%r3018, [%rd100+8];
	ld.u32 	%r3019, [%rd100+4];
	// inline asm
	prmt.b32 %r8450, %r3018, %r3019, %r2;
	// inline asm
	ld.u32 	%r3022, [%rd100+4];
	ld.u32 	%r3023, [%rd100];
	// inline asm
	prmt.b32 %r8443, %r3022, %r3023, %r2;
	// inline asm
	ld.u32 	%r3026, [%rd100];
	ld.u32 	%r3027, [%rd99+12];
	// inline asm
	prmt.b32 %r8444, %r3026, %r3027, %r2;
	// inline asm
	ld.u32 	%r3030, [%rd99+12];
	ld.u32 	%r3031, [%rd99+8];
	// inline asm
	prmt.b32 %r8445, %r3030, %r3031, %r2;
	// inline asm
	ld.u32 	%r3034, [%rd99+8];
	ld.u32 	%r3035, [%rd99+4];
	// inline asm
	prmt.b32 %r8446, %r3034, %r3035, %r2;
	// inline asm
	ld.u32 	%r3038, [%rd99+4];
	ld.u32 	%r3039, [%rd99];
	// inline asm
	prmt.b32 %r3037, %r3038, %r3039, %r2;
	// inline asm
	st.u32 	[%rd102+12], %r3037;
	ld.u32 	%r3042, [%rd99];
	ld.u32 	%r3043, [%rd98+12];
	// inline asm
	prmt.b32 %r3041, %r3042, %r3043, %r2;
	// inline asm
	st.u32 	[%rd102+8], %r3041;
	ld.u32 	%r3046, [%rd98+12];
	ld.u32 	%r3047, [%rd98+8];
	// inline asm
	prmt.b32 %r3045, %r3046, %r3047, %r2;
	// inline asm
	st.u32 	[%rd102+4], %r3045;
	ld.u32 	%r3050, [%rd98+8];
	ld.u32 	%r3051, [%rd98+4];
	// inline asm
	prmt.b32 %r3049, %r3050, %r3051, %r2;
	// inline asm
	st.u32 	[%rd102], %r3049;
	ld.u32 	%r3054, [%rd98+4];
	ld.u32 	%r3055, [%rd98];
	// inline asm
	prmt.b32 %r3053, %r3054, %r3055, %r2;
	// inline asm
	st.u32 	[%rd101+12], %r3053;
	ld.u32 	%r3058, [%rd98];
	ld.u32 	%r3059, [%rd97+12];
	// inline asm
	prmt.b32 %r3057, %r3058, %r3059, %r2;
	// inline asm
	st.u32 	[%rd101+8], %r3057;
	ld.u32 	%r3062, [%rd97+12];
	ld.u32 	%r3063, [%rd97+8];
	// inline asm
	prmt.b32 %r3061, %r3062, %r3063, %r2;
	// inline asm
	st.u32 	[%rd101+4], %r3061;
	ld.u32 	%r3066, [%rd97+8];
	ld.u32 	%r3067, [%rd97+4];
	// inline asm
	prmt.b32 %r3065, %r3066, %r3067, %r2;
	// inline asm
	st.u32 	[%rd101], %r3065;
	ld.u32 	%r3070, [%rd97+4];
	ld.u32 	%r3071, [%rd97];
	// inline asm
	prmt.b32 %r3069, %r3070, %r3071, %r2;
	// inline asm
	st.u32 	[%rd100+12], %r3069;
	ld.u32 	%r3074, [%rd97];
	ld.u32 	%r3075, [%rd96+12];
	// inline asm
	prmt.b32 %r3073, %r3074, %r3075, %r2;
	// inline asm
	st.u32 	[%rd100+8], %r3073;
	ld.u32 	%r3078, [%rd96+12];
	ld.u32 	%r3079, [%rd96+8];
	// inline asm
	prmt.b32 %r3077, %r3078, %r3079, %r2;
	// inline asm
	st.u32 	[%rd100+4], %r3077;
	ld.u32 	%r3082, [%rd96+8];
	ld.u32 	%r3083, [%rd96+4];
	// inline asm
	prmt.b32 %r3081, %r3082, %r3083, %r2;
	// inline asm
	st.u32 	[%rd100], %r3081;
	ld.u32 	%r3086, [%rd96+4];
	ld.u32 	%r3087, [%rd96];
	// inline asm
	prmt.b32 %r3085, %r3086, %r3087, %r2;
	// inline asm
	st.u32 	[%rd99+12], %r3085;
	ld.u32 	%r3090, [%rd96];
	ld.u32 	%r3091, [%rd95+12];
	// inline asm
	prmt.b32 %r3089, %r3090, %r3091, %r2;
	// inline asm
	st.u32 	[%rd99+8], %r3089;
	ld.u32 	%r3094, [%rd95+12];
	ld.u32 	%r3095, [%rd95+8];
	// inline asm
	prmt.b32 %r3093, %r3094, %r3095, %r2;
	// inline asm
	st.u32 	[%rd99+4], %r3093;
	ld.u32 	%r3098, [%rd95+8];
	ld.u32 	%r3099, [%rd95+4];
	// inline asm
	prmt.b32 %r3097, %r3098, %r3099, %r2;
	// inline asm
	st.u32 	[%rd99], %r3097;
	ld.u32 	%r3102, [%rd95+4];
	ld.u32 	%r3103, [%rd95];
	// inline asm
	prmt.b32 %r3101, %r3102, %r3103, %r2;
	// inline asm
	st.u32 	[%rd98+12], %r3101;
	ld.u32 	%r3106, [%rd95];
	// inline asm
	prmt.b32 %r3105, %r3106, %r8442, %r2;
	// inline asm
	st.u32 	[%rd98+8], %r3105;
	st.u32 	[%rd98+4], %r8442;
	st.u32 	[%rd98], %r8442;
	st.u32 	[%rd97+12], %r8442;
	st.u32 	[%rd97+8], %r8442;
	st.u32 	[%rd97+4], %r8442;
	st.u32 	[%rd97], %r8442;
	st.u32 	[%rd96+12], %r8442;
	st.u32 	[%rd96+8], %r8442;
	st.u32 	[%rd96+4], %r8442;
	st.u32 	[%rd96], %r8442;
	st.u32 	[%rd95+12], %r8442;
	st.u32 	[%rd95+8], %r8442;
	mov.u64 	%rd120, 0;
	st.u32 	[%rd95+4], %rd120;
	st.u32 	[%rd95], %rd120;
	mov.u32 	%r8455, %r8442;
	bra.uni 	BB1_81;

BB1_152:
	setp.eq.s32	%p54, %r1, 30;
	@%p54 bra 	BB1_155;
	bra.uni 	BB1_153;

BB1_155:
	ld.u32 	%r6210, [%rd95+4];
	ld.u32 	%r6211, [%rd95];
	// inline asm
	prmt.b32 %r6209, %r6210, %r6211, %r2;
	// inline asm
	st.u32 	[%rd102+12], %r6209;
	ld.u32 	%r6214, [%rd95];
	mov.u32 	%r8476, 0;
	// inline asm
	prmt.b32 %r6213, %r6214, %r8476, %r2;
	// inline asm
	st.u32 	[%rd102+8], %r6213;
	st.u32 	[%rd102+4], %r8476;
	st.u32 	[%rd102], %r8476;
	st.u32 	[%rd101+12], %r8476;
	st.u32 	[%rd101+8], %r8476;
	st.u32 	[%rd101+4], %r8476;
	st.u32 	[%rd101], %r8476;
	st.u32 	[%rd100+12], %r8476;
	st.u32 	[%rd100+8], %r8476;
	st.u32 	[%rd100+4], %r8476;
	st.u32 	[%rd100], %r8476;
	st.u32 	[%rd99+12], %r8476;
	st.u32 	[%rd99+8], %r8476;
	st.u32 	[%rd99+4], %r8476;
	st.u32 	[%rd99], %r8476;
	st.u32 	[%rd98+12], %r8476;
	st.u32 	[%rd98+8], %r8476;
	st.u32 	[%rd98+4], %r8476;
	st.u32 	[%rd98], %r8476;
	st.u32 	[%rd97+12], %r8476;
	st.u32 	[%rd97+8], %r8476;
	st.u32 	[%rd97+4], %r8476;
	st.u32 	[%rd97], %r8476;
	st.u32 	[%rd96+12], %r8476;
	st.u32 	[%rd96+8], %r8476;
	st.u32 	[%rd96+4], %r8476;
	st.u32 	[%rd96], %r8476;
	st.u32 	[%rd95+12], %r8476;
	st.u32 	[%rd95+8], %r8476;
	mov.u64 	%rd1151, 0;
	st.u32 	[%rd95+4], %rd1151;
	st.u32 	[%rd95], %rd1151;
	bra.uni 	BB1_172;

BB1_62:
	setp.eq.s32	%p6, %r1, 30;
	@%p6 bra 	BB1_65;
	bra.uni 	BB1_63;

BB1_65:
	ld.u32 	%r715, [%rd102+12];
	mov.u32 	%r8442, 0;
	// inline asm
	prmt.b32 %r8472, %r8442, %r715, %r2;
	// inline asm
	ld.u32 	%r718, [%rd102+12];
	ld.u32 	%r719, [%rd102+8];
	// inline asm
	prmt.b32 %r8473, %r718, %r719, %r2;
	// inline asm
	ld.u32 	%r722, [%rd102+8];
	ld.u32 	%r723, [%rd102+4];
	// inline asm
	prmt.b32 %r8474, %r722, %r723, %r2;
	// inline asm
	ld.u32 	%r726, [%rd102+4];
	ld.u32 	%r727, [%rd102];
	// inline asm
	prmt.b32 %r8467, %r726, %r727, %r2;
	// inline asm
	ld.u32 	%r730, [%rd102];
	ld.u32 	%r731, [%rd101+12];
	// inline asm
	prmt.b32 %r8468, %r730, %r731, %r2;
	// inline asm
	ld.u32 	%r734, [%rd101+12];
	ld.u32 	%r735, [%rd101+8];
	// inline asm
	prmt.b32 %r8469, %r734, %r735, %r2;
	// inline asm
	ld.u32 	%r738, [%rd101+8];
	ld.u32 	%r739, [%rd101+4];
	// inline asm
	prmt.b32 %r8470, %r738, %r739, %r2;
	// inline asm
	ld.u32 	%r742, [%rd101+4];
	ld.u32 	%r743, [%rd101];
	// inline asm
	prmt.b32 %r8463, %r742, %r743, %r2;
	// inline asm
	ld.u32 	%r746, [%rd101];
	ld.u32 	%r747, [%rd100+12];
	// inline asm
	prmt.b32 %r8464, %r746, %r747, %r2;
	// inline asm
	ld.u32 	%r750, [%rd100+12];
	ld.u32 	%r751, [%rd100+8];
	// inline asm
	prmt.b32 %r8465, %r750, %r751, %r2;
	// inline asm
	ld.u32 	%r754, [%rd100+8];
	ld.u32 	%r755, [%rd100+4];
	// inline asm
	prmt.b32 %r8466, %r754, %r755, %r2;
	// inline asm
	ld.u32 	%r758, [%rd100+4];
	ld.u32 	%r759, [%rd100];
	// inline asm
	prmt.b32 %r8459, %r758, %r759, %r2;
	// inline asm
	ld.u32 	%r762, [%rd100];
	ld.u32 	%r763, [%rd99+12];
	// inline asm
	prmt.b32 %r8460, %r762, %r763, %r2;
	// inline asm
	ld.u32 	%r766, [%rd99+12];
	ld.u32 	%r767, [%rd99+8];
	// inline asm
	prmt.b32 %r8461, %r766, %r767, %r2;
	// inline asm
	ld.u32 	%r770, [%rd99+8];
	ld.u32 	%r771, [%rd99+4];
	// inline asm
	prmt.b32 %r8462, %r770, %r771, %r2;
	// inline asm
	ld.u32 	%r774, [%rd99+4];
	ld.u32 	%r775, [%rd99];
	// inline asm
	prmt.b32 %r8455, %r774, %r775, %r2;
	// inline asm
	ld.u32 	%r778, [%rd99];
	ld.u32 	%r779, [%rd98+12];
	// inline asm
	prmt.b32 %r8456, %r778, %r779, %r2;
	// inline asm
	ld.u32 	%r782, [%rd98+12];
	ld.u32 	%r783, [%rd98+8];
	// inline asm
	prmt.b32 %r8457, %r782, %r783, %r2;
	// inline asm
	ld.u32 	%r786, [%rd98+8];
	ld.u32 	%r787, [%rd98+4];
	// inline asm
	prmt.b32 %r8458, %r786, %r787, %r2;
	// inline asm
	ld.u32 	%r790, [%rd98+4];
	ld.u32 	%r791, [%rd98];
	// inline asm
	prmt.b32 %r8451, %r790, %r791, %r2;
	// inline asm
	ld.u32 	%r794, [%rd98];
	ld.u32 	%r795, [%rd97+12];
	// inline asm
	prmt.b32 %r8452, %r794, %r795, %r2;
	// inline asm
	ld.u32 	%r798, [%rd97+12];
	ld.u32 	%r799, [%rd97+8];
	// inline asm
	prmt.b32 %r8453, %r798, %r799, %r2;
	// inline asm
	ld.u32 	%r802, [%rd97+8];
	ld.u32 	%r803, [%rd97+4];
	// inline asm
	prmt.b32 %r8454, %r802, %r803, %r2;
	// inline asm
	ld.u32 	%r806, [%rd97+4];
	ld.u32 	%r807, [%rd97];
	// inline asm
	prmt.b32 %r8447, %r806, %r807, %r2;
	// inline asm
	ld.u32 	%r810, [%rd97];
	ld.u32 	%r811, [%rd96+12];
	// inline asm
	prmt.b32 %r8448, %r810, %r811, %r2;
	// inline asm
	ld.u32 	%r814, [%rd96+12];
	ld.u32 	%r815, [%rd96+8];
	// inline asm
	prmt.b32 %r8449, %r814, %r815, %r2;
	// inline asm
	ld.u32 	%r818, [%rd96+8];
	ld.u32 	%r819, [%rd96+4];
	// inline asm
	prmt.b32 %r8450, %r818, %r819, %r2;
	// inline asm
	ld.u32 	%r822, [%rd96+4];
	ld.u32 	%r823, [%rd96];
	// inline asm
	prmt.b32 %r8443, %r822, %r823, %r2;
	// inline asm
	ld.u32 	%r826, [%rd96];
	ld.u32 	%r827, [%rd95+12];
	// inline asm
	prmt.b32 %r8444, %r826, %r827, %r2;
	// inline asm
	ld.u32 	%r830, [%rd95+12];
	ld.u32 	%r831, [%rd95+8];
	// inline asm
	prmt.b32 %r8445, %r830, %r831, %r2;
	// inline asm
	ld.u32 	%r834, [%rd95+8];
	ld.u32 	%r835, [%rd95+4];
	// inline asm
	prmt.b32 %r8446, %r834, %r835, %r2;
	// inline asm
	ld.u32 	%r838, [%rd95+4];
	ld.u32 	%r839, [%rd95];
	// inline asm
	prmt.b32 %r837, %r838, %r839, %r2;
	// inline asm
	st.u32 	[%rd102+12], %r837;
	ld.u32 	%r842, [%rd95];
	// inline asm
	prmt.b32 %r841, %r842, %r8442, %r2;
	// inline asm
	st.u32 	[%rd102+8], %r841;
	st.u32 	[%rd102+4], %r8442;
	st.u32 	[%rd102], %r8442;
	st.u32 	[%rd101+12], %r8442;
	st.u32 	[%rd101+8], %r8442;
	st.u32 	[%rd101+4], %r8442;
	st.u32 	[%rd101], %r8442;
	st.u32 	[%rd100+12], %r8442;
	st.u32 	[%rd100+8], %r8442;
	st.u32 	[%rd100+4], %r8442;
	st.u32 	[%rd100], %r8442;
	st.u32 	[%rd99+12], %r8442;
	st.u32 	[%rd99+8], %r8442;
	st.u32 	[%rd99+4], %r8442;
	st.u32 	[%rd99], %r8442;
	st.u32 	[%rd98+12], %r8442;
	st.u32 	[%rd98+8], %r8442;
	st.u32 	[%rd98+4], %r8442;
	st.u32 	[%rd98], %r8442;
	st.u32 	[%rd97+12], %r8442;
	st.u32 	[%rd97+8], %r8442;
	st.u32 	[%rd97+4], %r8442;
	st.u32 	[%rd97], %r8442;
	st.u32 	[%rd96+12], %r8442;
	st.u32 	[%rd96+8], %r8442;
	st.u32 	[%rd96+4], %r8442;
	st.u32 	[%rd96], %r8442;
	st.u32 	[%rd95+12], %r8442;
	st.u32 	[%rd95+8], %r8442;
	mov.u64 	%rd104, 0;
	st.u32 	[%rd95+4], %rd104;
	st.u32 	[%rd95], %rd104;
	mov.u32 	%r8471, %r8442;
	bra.uni 	BB1_89;

BB1_97:
	setp.eq.s32	%p96, %r1, 1;
	@%p96 bra 	BB1_98;
	bra.uni 	BB1_171;

BB1_98:
	ld.u32 	%r8095, [%rd102+8];
	ld.u32 	%r8096, [%rd102+4];
	// inline asm
	prmt.b32 %r8094, %r8095, %r8096, %r2;
	// inline asm
	st.u32 	[%rd102+12], %r8094;
	ld.u32 	%r8099, [%rd102+4];
	ld.u32 	%r8100, [%rd102];
	// inline asm
	prmt.b32 %r8098, %r8099, %r8100, %r2;
	// inline asm
	st.u32 	[%rd102+8], %r8098;
	ld.u32 	%r8103, [%rd102];
	ld.u32 	%r8104, [%rd101+12];
	// inline asm
	prmt.b32 %r8102, %r8103, %r8104, %r2;
	// inline asm
	st.u32 	[%rd102+4], %r8102;
	ld.u32 	%r8107, [%rd101+12];
	ld.u32 	%r8108, [%rd101+8];
	// inline asm
	prmt.b32 %r8106, %r8107, %r8108, %r2;
	// inline asm
	st.u32 	[%rd102], %r8106;
	ld.u32 	%r8111, [%rd101+8];
	ld.u32 	%r8112, [%rd101+4];
	// inline asm
	prmt.b32 %r8110, %r8111, %r8112, %r2;
	// inline asm
	st.u32 	[%rd101+12], %r8110;
	ld.u32 	%r8115, [%rd101+4];
	ld.u32 	%r8116, [%rd101];
	// inline asm
	prmt.b32 %r8114, %r8115, %r8116, %r2;
	// inline asm
	st.u32 	[%rd101+8], %r8114;
	ld.u32 	%r8119, [%rd101];
	ld.u32 	%r8120, [%rd100+12];
	// inline asm
	prmt.b32 %r8118, %r8119, %r8120, %r2;
	// inline asm
	st.u32 	[%rd101+4], %r8118;
	ld.u32 	%r8123, [%rd100+12];
	ld.u32 	%r8124, [%rd100+8];
	// inline asm
	prmt.b32 %r8122, %r8123, %r8124, %r2;
	// inline asm
	st.u32 	[%rd101], %r8122;
	ld.u32 	%r8127, [%rd100+8];
	ld.u32 	%r8128, [%rd100+4];
	// inline asm
	prmt.b32 %r8126, %r8127, %r8128, %r2;
	// inline asm
	st.u32 	[%rd100+12], %r8126;
	ld.u32 	%r8131, [%rd100+4];
	ld.u32 	%r8132, [%rd100];
	// inline asm
	prmt.b32 %r8130, %r8131, %r8132, %r2;
	// inline asm
	st.u32 	[%rd100+8], %r8130;
	ld.u32 	%r8135, [%rd100];
	ld.u32 	%r8136, [%rd99+12];
	// inline asm
	prmt.b32 %r8134, %r8135, %r8136, %r2;
	// inline asm
	st.u32 	[%rd100+4], %r8134;
	ld.u32 	%r8139, [%rd99+12];
	ld.u32 	%r8140, [%rd99+8];
	// inline asm
	prmt.b32 %r8138, %r8139, %r8140, %r2;
	// inline asm
	st.u32 	[%rd100], %r8138;
	ld.u32 	%r8143, [%rd99+8];
	ld.u32 	%r8144, [%rd99+4];
	// inline asm
	prmt.b32 %r8142, %r8143, %r8144, %r2;
	// inline asm
	st.u32 	[%rd99+12], %r8142;
	ld.u32 	%r8147, [%rd99+4];
	ld.u32 	%r8148, [%rd99];
	// inline asm
	prmt.b32 %r8146, %r8147, %r8148, %r2;
	// inline asm
	st.u32 	[%rd99+8], %r8146;
	ld.u32 	%r8151, [%rd99];
	ld.u32 	%r8152, [%rd98+12];
	// inline asm
	prmt.b32 %r8150, %r8151, %r8152, %r2;
	// inline asm
	st.u32 	[%rd99+4], %r8150;
	ld.u32 	%r8155, [%rd98+12];
	ld.u32 	%r8156, [%rd98+8];
	// inline asm
	prmt.b32 %r8154, %r8155, %r8156, %r2;
	// inline asm
	st.u32 	[%rd99], %r8154;
	ld.u32 	%r8159, [%rd98+8];
	ld.u32 	%r8160, [%rd98+4];
	// inline asm
	prmt.b32 %r8158, %r8159, %r8160, %r2;
	// inline asm
	st.u32 	[%rd98+12], %r8158;
	ld.u32 	%r8163, [%rd98+4];
	ld.u32 	%r8164, [%rd98];
	// inline asm
	prmt.b32 %r8162, %r8163, %r8164, %r2;
	// inline asm
	st.u32 	[%rd98+8], %r8162;
	ld.u32 	%r8167, [%rd98];
	ld.u32 	%r8168, [%rd97+12];
	// inline asm
	prmt.b32 %r8166, %r8167, %r8168, %r2;
	// inline asm
	st.u32 	[%rd98+4], %r8166;
	ld.u32 	%r8171, [%rd97+12];
	ld.u32 	%r8172, [%rd97+8];
	// inline asm
	prmt.b32 %r8170, %r8171, %r8172, %r2;
	// inline asm
	st.u32 	[%rd98], %r8170;
	ld.u32 	%r8175, [%rd97+8];
	ld.u32 	%r8176, [%rd97+4];
	// inline asm
	prmt.b32 %r8174, %r8175, %r8176, %r2;
	// inline asm
	st.u32 	[%rd97+12], %r8174;
	ld.u32 	%r8179, [%rd97+4];
	ld.u32 	%r8180, [%rd97];
	// inline asm
	prmt.b32 %r8178, %r8179, %r8180, %r2;
	// inline asm
	st.u32 	[%rd97+8], %r8178;
	ld.u32 	%r8183, [%rd97];
	ld.u32 	%r8184, [%rd96+12];
	// inline asm
	prmt.b32 %r8182, %r8183, %r8184, %r2;
	// inline asm
	st.u32 	[%rd97+4], %r8182;
	ld.u32 	%r8187, [%rd96+12];
	ld.u32 	%r8188, [%rd96+8];
	// inline asm
	prmt.b32 %r8186, %r8187, %r8188, %r2;
	// inline asm
	st.u32 	[%rd97], %r8186;
	ld.u32 	%r8191, [%rd96+8];
	ld.u32 	%r8192, [%rd96+4];
	// inline asm
	prmt.b32 %r8190, %r8191, %r8192, %r2;
	// inline asm
	st.u32 	[%rd96+12], %r8190;
	ld.u32 	%r8195, [%rd96+4];
	ld.u32 	%r8196, [%rd96];
	// inline asm
	prmt.b32 %r8194, %r8195, %r8196, %r2;
	// inline asm
	st.u32 	[%rd96+8], %r8194;
	ld.u32 	%r8199, [%rd96];
	ld.u32 	%r8200, [%rd95+12];
	// inline asm
	prmt.b32 %r8198, %r8199, %r8200, %r2;
	// inline asm
	st.u32 	[%rd96+4], %r8198;
	ld.u32 	%r8203, [%rd95+12];
	ld.u32 	%r8204, [%rd95+8];
	// inline asm
	prmt.b32 %r8202, %r8203, %r8204, %r2;
	// inline asm
	st.u32 	[%rd96], %r8202;
	ld.u32 	%r8207, [%rd95+8];
	ld.u32 	%r8208, [%rd95+4];
	// inline asm
	prmt.b32 %r8206, %r8207, %r8208, %r2;
	// inline asm
	st.u32 	[%rd95+12], %r8206;
	ld.u32 	%r8211, [%rd95+4];
	ld.u32 	%r8212, [%rd95];
	// inline asm
	prmt.b32 %r8210, %r8211, %r8212, %r2;
	// inline asm
	st.u32 	[%rd95+8], %r8210;
	ld.u32 	%r8215, [%rd95];
	mov.u32 	%r8476, 0;
	// inline asm
	prmt.b32 %r8214, %r8215, %r8476, %r2;
	// inline asm
	st.u32 	[%rd95+4], %r8214;
	st.u32 	[%rd95], %r8476;
	bra.uni 	BB1_172;

BB1_6:
	setp.eq.s32	%p48, %r1, 1;
	@%p48 bra 	BB1_7;
	bra.uni 	BB1_87;

BB1_7:
	ld.u32 	%r5007, [%rd102+12];
	mov.u32 	%r8442, 0;
	// inline asm
	prmt.b32 %r8445, %r8442, %r5007, %r2;
	// inline asm
	ld.u32 	%r5010, [%rd102+12];
	ld.u32 	%r5011, [%rd102+8];
	// inline asm
	prmt.b32 %r8446, %r5010, %r5011, %r2;
	// inline asm
	ld.u32 	%r5014, [%rd102+8];
	ld.u32 	%r5015, [%rd102+4];
	// inline asm
	prmt.b32 %r5013, %r5014, %r5015, %r2;
	// inline asm
	st.u32 	[%rd102+12], %r5013;
	ld.u32 	%r5018, [%rd102+4];
	ld.u32 	%r5019, [%rd102];
	// inline asm
	prmt.b32 %r5017, %r5018, %r5019, %r2;
	// inline asm
	st.u32 	[%rd102+8], %r5017;
	ld.u32 	%r5022, [%rd102];
	ld.u32 	%r5023, [%rd101+12];
	// inline asm
	prmt.b32 %r5021, %r5022, %r5023, %r2;
	// inline asm
	st.u32 	[%rd102+4], %r5021;
	ld.u32 	%r5026, [%rd101+12];
	ld.u32 	%r5027, [%rd101+8];
	// inline asm
	prmt.b32 %r5025, %r5026, %r5027, %r2;
	// inline asm
	st.u32 	[%rd102], %r5025;
	ld.u32 	%r5030, [%rd101+8];
	ld.u32 	%r5031, [%rd101+4];
	// inline asm
	prmt.b32 %r5029, %r5030, %r5031, %r2;
	// inline asm
	st.u32 	[%rd101+12], %r5029;
	ld.u32 	%r5034, [%rd101+4];
	ld.u32 	%r5035, [%rd101];
	// inline asm
	prmt.b32 %r5033, %r5034, %r5035, %r2;
	// inline asm
	st.u32 	[%rd101+8], %r5033;
	ld.u32 	%r5038, [%rd101];
	ld.u32 	%r5039, [%rd100+12];
	// inline asm
	prmt.b32 %r5037, %r5038, %r5039, %r2;
	// inline asm
	st.u32 	[%rd101+4], %r5037;
	ld.u32 	%r5042, [%rd100+12];
	ld.u32 	%r5043, [%rd100+8];
	// inline asm
	prmt.b32 %r5041, %r5042, %r5043, %r2;
	// inline asm
	st.u32 	[%rd101], %r5041;
	ld.u32 	%r5046, [%rd100+8];
	ld.u32 	%r5047, [%rd100+4];
	// inline asm
	prmt.b32 %r5045, %r5046, %r5047, %r2;
	// inline asm
	st.u32 	[%rd100+12], %r5045;
	ld.u32 	%r5050, [%rd100+4];
	ld.u32 	%r5051, [%rd100];
	// inline asm
	prmt.b32 %r5049, %r5050, %r5051, %r2;
	// inline asm
	st.u32 	[%rd100+8], %r5049;
	ld.u32 	%r5054, [%rd100];
	ld.u32 	%r5055, [%rd99+12];
	// inline asm
	prmt.b32 %r5053, %r5054, %r5055, %r2;
	// inline asm
	st.u32 	[%rd100+4], %r5053;
	ld.u32 	%r5058, [%rd99+12];
	ld.u32 	%r5059, [%rd99+8];
	// inline asm
	prmt.b32 %r5057, %r5058, %r5059, %r2;
	// inline asm
	st.u32 	[%rd100], %r5057;
	ld.u32 	%r5062, [%rd99+8];
	ld.u32 	%r5063, [%rd99+4];
	// inline asm
	prmt.b32 %r5061, %r5062, %r5063, %r2;
	// inline asm
	st.u32 	[%rd99+12], %r5061;
	ld.u32 	%r5066, [%rd99+4];
	ld.u32 	%r5067, [%rd99];
	// inline asm
	prmt.b32 %r5065, %r5066, %r5067, %r2;
	// inline asm
	st.u32 	[%rd99+8], %r5065;
	ld.u32 	%r5070, [%rd99];
	ld.u32 	%r5071, [%rd98+12];
	// inline asm
	prmt.b32 %r5069, %r5070, %r5071, %r2;
	// inline asm
	st.u32 	[%rd99+4], %r5069;
	ld.u32 	%r5074, [%rd98+12];
	ld.u32 	%r5075, [%rd98+8];
	// inline asm
	prmt.b32 %r5073, %r5074, %r5075, %r2;
	// inline asm
	st.u32 	[%rd99], %r5073;
	ld.u32 	%r5078, [%rd98+8];
	ld.u32 	%r5079, [%rd98+4];
	// inline asm
	prmt.b32 %r5077, %r5078, %r5079, %r2;
	// inline asm
	st.u32 	[%rd98+12], %r5077;
	ld.u32 	%r5082, [%rd98+4];
	ld.u32 	%r5083, [%rd98];
	// inline asm
	prmt.b32 %r5081, %r5082, %r5083, %r2;
	// inline asm
	st.u32 	[%rd98+8], %r5081;
	ld.u32 	%r5086, [%rd98];
	ld.u32 	%r5087, [%rd97+12];
	// inline asm
	prmt.b32 %r5085, %r5086, %r5087, %r2;
	// inline asm
	st.u32 	[%rd98+4], %r5085;
	ld.u32 	%r5090, [%rd97+12];
	ld.u32 	%r5091, [%rd97+8];
	// inline asm
	prmt.b32 %r5089, %r5090, %r5091, %r2;
	// inline asm
	st.u32 	[%rd98], %r5089;
	ld.u32 	%r5094, [%rd97+8];
	ld.u32 	%r5095, [%rd97+4];
	// inline asm
	prmt.b32 %r5093, %r5094, %r5095, %r2;
	// inline asm
	st.u32 	[%rd97+12], %r5093;
	ld.u32 	%r5098, [%rd97+4];
	ld.u32 	%r5099, [%rd97];
	// inline asm
	prmt.b32 %r5097, %r5098, %r5099, %r2;
	// inline asm
	st.u32 	[%rd97+8], %r5097;
	ld.u32 	%r5102, [%rd97];
	ld.u32 	%r5103, [%rd96+12];
	// inline asm
	prmt.b32 %r5101, %r5102, %r5103, %r2;
	// inline asm
	st.u32 	[%rd97+4], %r5101;
	ld.u32 	%r5106, [%rd96+12];
	ld.u32 	%r5107, [%rd96+8];
	// inline asm
	prmt.b32 %r5105, %r5106, %r5107, %r2;
	// inline asm
	st.u32 	[%rd97], %r5105;
	ld.u32 	%r5110, [%rd96+8];
	ld.u32 	%r5111, [%rd96+4];
	// inline asm
	prmt.b32 %r5109, %r5110, %r5111, %r2;
	// inline asm
	st.u32 	[%rd96+12], %r5109;
	ld.u32 	%r5114, [%rd96+4];
	ld.u32 	%r5115, [%rd96];
	// inline asm
	prmt.b32 %r5113, %r5114, %r5115, %r2;
	// inline asm
	st.u32 	[%rd96+8], %r5113;
	ld.u32 	%r5118, [%rd96];
	ld.u32 	%r5119, [%rd95+12];
	// inline asm
	prmt.b32 %r5117, %r5118, %r5119, %r2;
	// inline asm
	st.u32 	[%rd96+4], %r5117;
	ld.u32 	%r5122, [%rd95+12];
	ld.u32 	%r5123, [%rd95+8];
	// inline asm
	prmt.b32 %r5121, %r5122, %r5123, %r2;
	// inline asm
	st.u32 	[%rd96], %r5121;
	ld.u32 	%r5126, [%rd95+8];
	ld.u32 	%r5127, [%rd95+4];
	// inline asm
	prmt.b32 %r5125, %r5126, %r5127, %r2;
	// inline asm
	st.u32 	[%rd95+12], %r5125;
	ld.u32 	%r5130, [%rd95+4];
	ld.u32 	%r5131, [%rd95];
	// inline asm
	prmt.b32 %r5129, %r5130, %r5131, %r2;
	// inline asm
	st.u32 	[%rd95+8], %r5129;
	ld.u32 	%r5134, [%rd95];
	// inline asm
	prmt.b32 %r5133, %r5134, %r8442, %r2;
	// inline asm
	st.u32 	[%rd95+4], %r5133;
	st.u32 	[%rd95], %r8442;
	mov.u32 	%r8443, %r8442;
	mov.u32 	%r8444, %r8442;
	bra.uni 	BB1_11;

BB1_128:
	setp.eq.s32	%p73, %r1, 17;
	@%p73 bra 	BB1_129;
	bra.uni 	BB1_171;

BB1_129:
	ld.u32 	%r6639, [%rd98+8];
	ld.u32 	%r6640, [%rd98+4];
	// inline asm
	prmt.b32 %r6638, %r6639, %r6640, %r2;
	// inline asm
	st.u32 	[%rd102+12], %r6638;
	ld.u32 	%r6643, [%rd98+4];
	ld.u32 	%r6644, [%rd98];
	// inline asm
	prmt.b32 %r6642, %r6643, %r6644, %r2;
	// inline asm
	st.u32 	[%rd102+8], %r6642;
	ld.u32 	%r6647, [%rd98];
	ld.u32 	%r6648, [%rd97+12];
	// inline asm
	prmt.b32 %r6646, %r6647, %r6648, %r2;
	// inline asm
	st.u32 	[%rd102+4], %r6646;
	ld.u32 	%r6651, [%rd97+12];
	ld.u32 	%r6652, [%rd97+8];
	// inline asm
	prmt.b32 %r6650, %r6651, %r6652, %r2;
	// inline asm
	st.u32 	[%rd102], %r6650;
	ld.u32 	%r6655, [%rd97+8];
	ld.u32 	%r6656, [%rd97+4];
	// inline asm
	prmt.b32 %r6654, %r6655, %r6656, %r2;
	// inline asm
	st.u32 	[%rd101+12], %r6654;
	ld.u32 	%r6659, [%rd97+4];
	ld.u32 	%r6660, [%rd97];
	// inline asm
	prmt.b32 %r6658, %r6659, %r6660, %r2;
	// inline asm
	st.u32 	[%rd101+8], %r6658;
	ld.u32 	%r6663, [%rd97];
	ld.u32 	%r6664, [%rd96+12];
	// inline asm
	prmt.b32 %r6662, %r6663, %r6664, %r2;
	// inline asm
	st.u32 	[%rd101+4], %r6662;
	ld.u32 	%r6667, [%rd96+12];
	ld.u32 	%r6668, [%rd96+8];
	// inline asm
	prmt.b32 %r6666, %r6667, %r6668, %r2;
	// inline asm
	st.u32 	[%rd101], %r6666;
	ld.u32 	%r6671, [%rd96+8];
	ld.u32 	%r6672, [%rd96+4];
	// inline asm
	prmt.b32 %r6670, %r6671, %r6672, %r2;
	// inline asm
	st.u32 	[%rd100+12], %r6670;
	ld.u32 	%r6675, [%rd96+4];
	ld.u32 	%r6676, [%rd96];
	// inline asm
	prmt.b32 %r6674, %r6675, %r6676, %r2;
	// inline asm
	st.u32 	[%rd100+8], %r6674;
	ld.u32 	%r6679, [%rd96];
	ld.u32 	%r6680, [%rd95+12];
	// inline asm
	prmt.b32 %r6678, %r6679, %r6680, %r2;
	// inline asm
	st.u32 	[%rd100+4], %r6678;
	ld.u32 	%r6683, [%rd95+12];
	ld.u32 	%r6684, [%rd95+8];
	// inline asm
	prmt.b32 %r6682, %r6683, %r6684, %r2;
	// inline asm
	st.u32 	[%rd100], %r6682;
	ld.u32 	%r6687, [%rd95+8];
	ld.u32 	%r6688, [%rd95+4];
	// inline asm
	prmt.b32 %r6686, %r6687, %r6688, %r2;
	// inline asm
	st.u32 	[%rd99+12], %r6686;
	ld.u32 	%r6691, [%rd95+4];
	ld.u32 	%r6692, [%rd95];
	// inline asm
	prmt.b32 %r6690, %r6691, %r6692, %r2;
	// inline asm
	st.u32 	[%rd99+8], %r6690;
	ld.u32 	%r6695, [%rd95];
	mov.u32 	%r8476, 0;
	// inline asm
	prmt.b32 %r6694, %r6695, %r8476, %r2;
	// inline asm
	st.u32 	[%rd99+4], %r6694;
	st.u32 	[%rd99], %r8476;
	st.u32 	[%rd98+12], %r8476;
	st.u32 	[%rd98+8], %r8476;
	st.u32 	[%rd98+4], %r8476;
	st.u32 	[%rd98], %r8476;
	st.u32 	[%rd97+12], %r8476;
	st.u32 	[%rd97+8], %r8476;
	st.u32 	[%rd97+4], %r8476;
	st.u32 	[%rd97], %r8476;
	st.u32 	[%rd96+12], %r8476;
	st.u32 	[%rd96+8], %r8476;
	st.u32 	[%rd96+4], %r8476;
	st.u32 	[%rd96], %r8476;
	st.u32 	[%rd95+12], %r8476;
	st.u32 	[%rd95+8], %r8476;
	mov.u64 	%rd1164, 0;
	st.u32 	[%rd95+4], %rd1164;
	st.u32 	[%rd95], %rd1164;
	bra.uni 	BB1_172;

BB1_38:
	setp.eq.s32	%p25, %r1, 17;
	@%p25 bra 	BB1_39;
	bra.uni 	BB1_87;

BB1_39:
	ld.u32 	%r2535, [%rd102+12];
	mov.u32 	%r8442, 0;
	// inline asm
	prmt.b32 %r8461, %r8442, %r2535, %r2;
	// inline asm
	ld.u32 	%r2538, [%rd102+12];
	ld.u32 	%r2539, [%rd102+8];
	// inline asm
	prmt.b32 %r8462, %r2538, %r2539, %r2;
	// inline asm
	ld.u32 	%r2542, [%rd102+8];
	ld.u32 	%r2543, [%rd102+4];
	// inline asm
	prmt.b32 %r8455, %r2542, %r2543, %r2;
	// inline asm
	ld.u32 	%r2546, [%rd102+4];
	ld.u32 	%r2547, [%rd102];
	// inline asm
	prmt.b32 %r8456, %r2546, %r2547, %r2;
	// inline asm
	ld.u32 	%r2550, [%rd102];
	ld.u32 	%r2551, [%rd101+12];
	// inline asm
	prmt.b32 %r8457, %r2550, %r2551, %r2;
	// inline asm
	ld.u32 	%r2554, [%rd101+12];
	ld.u32 	%r2555, [%rd101+8];
	// inline asm
	prmt.b32 %r8458, %r2554, %r2555, %r2;
	// inline asm
	ld.u32 	%r2558, [%rd101+8];
	ld.u32 	%r2559, [%rd101+4];
	// inline asm
	prmt.b32 %r8451, %r2558, %r2559, %r2;
	// inline asm
	ld.u32 	%r2562, [%rd101+4];
	ld.u32 	%r2563, [%rd101];
	// inline asm
	prmt.b32 %r8452, %r2562, %r2563, %r2;
	// inline asm
	ld.u32 	%r2566, [%rd101];
	ld.u32 	%r2567, [%rd100+12];
	// inline asm
	prmt.b32 %r8453, %r2566, %r2567, %r2;
	// inline asm
	ld.u32 	%r2570, [%rd100+12];
	ld.u32 	%r2571, [%rd100+8];
	// inline asm
	prmt.b32 %r8454, %r2570, %r2571, %r2;
	// inline asm
	ld.u32 	%r2574, [%rd100+8];
	ld.u32 	%r2575, [%rd100+4];
	// inline asm
	prmt.b32 %r8447, %r2574, %r2575, %r2;
	// inline asm
	ld.u32 	%r2578, [%rd100+4];
	ld.u32 	%r2579, [%rd100];
	// inline asm
	prmt.b32 %r8448, %r2578, %r2579, %r2;
	// inline asm
	ld.u32 	%r2582, [%rd100];
	ld.u32 	%r2583, [%rd99+12];
	// inline asm
	prmt.b32 %r8449, %r2582, %r2583, %r2;
	// inline asm
	ld.u32 	%r2586, [%rd99+12];
	ld.u32 	%r2587, [%rd99+8];
	// inline asm
	prmt.b32 %r8450, %r2586, %r2587, %r2;
	// inline asm
	ld.u32 	%r2590, [%rd99+8];
	ld.u32 	%r2591, [%rd99+4];
	// inline asm
	prmt.b32 %r8443, %r2590, %r2591, %r2;
	// inline asm
	ld.u32 	%r2594, [%rd99+4];
	ld.u32 	%r2595, [%rd99];
	// inline asm
	prmt.b32 %r8444, %r2594, %r2595, %r2;
	// inline asm
	ld.u32 	%r2598, [%rd99];
	ld.u32 	%r2599, [%rd98+12];
	// inline asm
	prmt.b32 %r8445, %r2598, %r2599, %r2;
	// inline asm
	ld.u32 	%r2602, [%rd98+12];
	ld.u32 	%r2603, [%rd98+8];
	// inline asm
	prmt.b32 %r8446, %r2602, %r2603, %r2;
	// inline asm
	ld.u32 	%r2606, [%rd98+8];
	ld.u32 	%r2607, [%rd98+4];
	// inline asm
	prmt.b32 %r2605, %r2606, %r2607, %r2;
	// inline asm
	st.u32 	[%rd102+12], %r2605;
	ld.u32 	%r2610, [%rd98+4];
	ld.u32 	%r2611, [%rd98];
	// inline asm
	prmt.b32 %r2609, %r2610, %r2611, %r2;
	// inline asm
	st.u32 	[%rd102+8], %r2609;
	ld.u32 	%r2614, [%rd98];
	ld.u32 	%r2615, [%rd97+12];
	// inline asm
	prmt.b32 %r2613, %r2614, %r2615, %r2;
	// inline asm
	st.u32 	[%rd102+4], %r2613;
	ld.u32 	%r2618, [%rd97+12];
	ld.u32 	%r2619, [%rd97+8];
	// inline asm
	prmt.b32 %r2617, %r2618, %r2619, %r2;
	// inline asm
	st.u32 	[%rd102], %r2617;
	ld.u32 	%r2622, [%rd97+8];
	ld.u32 	%r2623, [%rd97+4];
	// inline asm
	prmt.b32 %r2621, %r2622, %r2623, %r2;
	// inline asm
	st.u32 	[%rd101+12], %r2621;
	ld.u32 	%r2626, [%rd97+4];
	ld.u32 	%r2627, [%rd97];
	// inline asm
	prmt.b32 %r2625, %r2626, %r2627, %r2;
	// inline asm
	st.u32 	[%rd101+8], %r2625;
	ld.u32 	%r2630, [%rd97];
	ld.u32 	%r2631, [%rd96+12];
	// inline asm
	prmt.b32 %r2629, %r2630, %r2631, %r2;
	// inline asm
	st.u32 	[%rd101+4], %r2629;
	ld.u32 	%r2634, [%rd96+12];
	ld.u32 	%r2635, [%rd96+8];
	// inline asm
	prmt.b32 %r2633, %r2634, %r2635, %r2;
	// inline asm
	st.u32 	[%rd101], %r2633;
	ld.u32 	%r2638, [%rd96+8];
	ld.u32 	%r2639, [%rd96+4];
	// inline asm
	prmt.b32 %r2637, %r2638, %r2639, %r2;
	// inline asm
	st.u32 	[%rd100+12], %r2637;
	ld.u32 	%r2642, [%rd96+4];
	ld.u32 	%r2643, [%rd96];
	// inline asm
	prmt.b32 %r2641, %r2642, %r2643, %r2;
	// inline asm
	st.u32 	[%rd100+8], %r2641;
	ld.u32 	%r2646, [%rd96];
	ld.u32 	%r2647, [%rd95+12];
	// inline asm
	prmt.b32 %r2645, %r2646, %r2647, %r2;
	// inline asm
	st.u32 	[%rd100+4], %r2645;
	ld.u32 	%r2650, [%rd95+12];
	ld.u32 	%r2651, [%rd95+8];
	// inline asm
	prmt.b32 %r2649, %r2650, %r2651, %r2;
	// inline asm
	st.u32 	[%rd100], %r2649;
	ld.u32 	%r2654, [%rd95+8];
	ld.u32 	%r2655, [%rd95+4];
	// inline asm
	prmt.b32 %r2653, %r2654, %r2655, %r2;
	// inline asm
	st.u32 	[%rd99+12], %r2653;
	ld.u32 	%r2658, [%rd95+4];
	ld.u32 	%r2659, [%rd95];
	// inline asm
	prmt.b32 %r2657, %r2658, %r2659, %r2;
	// inline asm
	st.u32 	[%rd99+8], %r2657;
	ld.u32 	%r2662, [%rd95];
	// inline asm
	prmt.b32 %r2661, %r2662, %r8442, %r2;
	// inline asm
	st.u32 	[%rd99+4], %r2661;
	st.u32 	[%rd99], %r8442;
	st.u32 	[%rd98+12], %r8442;
	st.u32 	[%rd98+8], %r8442;
	st.u32 	[%rd98+4], %r8442;
	st.u32 	[%rd98], %r8442;
	st.u32 	[%rd97+12], %r8442;
	st.u32 	[%rd97+8], %r8442;
	st.u32 	[%rd97+4], %r8442;
	st.u32 	[%rd97], %r8442;
	st.u32 	[%rd96+12], %r8442;
	st.u32 	[%rd96+8], %r8442;
	st.u32 	[%rd96+4], %r8442;
	st.u32 	[%rd96], %r8442;
	st.u32 	[%rd95+12], %r8442;
	st.u32 	[%rd95+8], %r8442;
	mov.u64 	%rd117, 0;
	st.u32 	[%rd95+4], %rd117;
	st.u32 	[%rd95], %rd117;
	mov.u32 	%r8459, %r8442;
	mov.u32 	%r8460, %r8442;
	bra.uni 	BB1_82;

BB1_112:
	setp.eq.s32	%p85, %r1, 9;
	@%p85 bra 	BB1_113;
	bra.uni 	BB1_171;

BB1_113:
	ld.u32 	%r7239, [%rd100+8];
	ld.u32 	%r7240, [%rd100+4];
	// inline asm
	prmt.b32 %r7238, %r7239, %r7240, %r2;
	// inline asm
	st.u32 	[%rd102+12], %r7238;
	ld.u32 	%r7243, [%rd100+4];
	ld.u32 	%r7244, [%rd100];
	// inline asm
	prmt.b32 %r7242, %r7243, %r7244, %r2;
	// inline asm
	st.u32 	[%rd102+8], %r7242;
	ld.u32 	%r7247, [%rd100];
	ld.u32 	%r7248, [%rd99+12];
	// inline asm
	prmt.b32 %r7246, %r7247, %r7248, %r2;
	// inline asm
	st.u32 	[%rd102+4], %r7246;
	ld.u32 	%r7251, [%rd99+12];
	ld.u32 	%r7252, [%rd99+8];
	// inline asm
	prmt.b32 %r7250, %r7251, %r7252, %r2;
	// inline asm
	st.u32 	[%rd102], %r7250;
	ld.u32 	%r7255, [%rd99+8];
	ld.u32 	%r7256, [%rd99+4];
	// inline asm
	prmt.b32 %r7254, %r7255, %r7256, %r2;
	// inline asm
	st.u32 	[%rd101+12], %r7254;
	ld.u32 	%r7259, [%rd99+4];
	ld.u32 	%r7260, [%rd99];
	// inline asm
	prmt.b32 %r7258, %r7259, %r7260, %r2;
	// inline asm
	st.u32 	[%rd101+8], %r7258;
	ld.u32 	%r7263, [%rd99];
	ld.u32 	%r7264, [%rd98+12];
	// inline asm
	prmt.b32 %r7262, %r7263, %r7264, %r2;
	// inline asm
	st.u32 	[%rd101+4], %r7262;
	ld.u32 	%r7267, [%rd98+12];
	ld.u32 	%r7268, [%rd98+8];
	// inline asm
	prmt.b32 %r7266, %r7267, %r7268, %r2;
	// inline asm
	st.u32 	[%rd101], %r7266;
	ld.u32 	%r7271, [%rd98+8];
	ld.u32 	%r7272, [%rd98+4];
	// inline asm
	prmt.b32 %r7270, %r7271, %r7272, %r2;
	// inline asm
	st.u32 	[%rd100+12], %r7270;
	ld.u32 	%r7275, [%rd98+4];
	ld.u32 	%r7276, [%rd98];
	// inline asm
	prmt.b32 %r7274, %r7275, %r7276, %r2;
	// inline asm
	st.u32 	[%rd100+8], %r7274;
	ld.u32 	%r7279, [%rd98];
	ld.u32 	%r7280, [%rd97+12];
	// inline asm
	prmt.b32 %r7278, %r7279, %r7280, %r2;
	// inline asm
	st.u32 	[%rd100+4], %r7278;
	ld.u32 	%r7283, [%rd97+12];
	ld.u32 	%r7284, [%rd97+8];
	// inline asm
	prmt.b32 %r7282, %r7283, %r7284, %r2;
	// inline asm
	st.u32 	[%rd100], %r7282;
	ld.u32 	%r7287, [%rd97+8];
	ld.u32 	%r7288, [%rd97+4];
	// inline asm
	prmt.b32 %r7286, %r7287, %r7288, %r2;
	// inline asm
	st.u32 	[%rd99+12], %r7286;
	ld.u32 	%r7291, [%rd97+4];
	ld.u32 	%r7292, [%rd97];
	// inline asm
	prmt.b32 %r7290, %r7291, %r7292, %r2;
	// inline asm
	st.u32 	[%rd99+8], %r7290;
	ld.u32 	%r7295, [%rd97];
	ld.u32 	%r7296, [%rd96+12];
	// inline asm
	prmt.b32 %r7294, %r7295, %r7296, %r2;
	// inline asm
	st.u32 	[%rd99+4], %r7294;
	ld.u32 	%r7299, [%rd96+12];
	ld.u32 	%r7300, [%rd96+8];
	// inline asm
	prmt.b32 %r7298, %r7299, %r7300, %r2;
	// inline asm
	st.u32 	[%rd99], %r7298;
	ld.u32 	%r7303, [%rd96+8];
	ld.u32 	%r7304, [%rd96+4];
	// inline asm
	prmt.b32 %r7302, %r7303, %r7304, %r2;
	// inline asm
	st.u32 	[%rd98+12], %r7302;
	ld.u32 	%r7307, [%rd96+4];
	ld.u32 	%r7308, [%rd96];
	// inline asm
	prmt.b32 %r7306, %r7307, %r7308, %r2;
	// inline asm
	st.u32 	[%rd98+8], %r7306;
	ld.u32 	%r7311, [%rd96];
	ld.u32 	%r7312, [%rd95+12];
	// inline asm
	prmt.b32 %r7310, %r7311, %r7312, %r2;
	// inline asm
	st.u32 	[%rd98+4], %r7310;
	ld.u32 	%r7315, [%rd95+12];
	ld.u32 	%r7316, [%rd95+8];
	// inline asm
	prmt.b32 %r7314, %r7315, %r7316, %r2;
	// inline asm
	st.u32 	[%rd98], %r7314;
	ld.u32 	%r7319, [%rd95+8];
	ld.u32 	%r7320, [%rd95+4];
	// inline asm
	prmt.b32 %r7318, %r7319, %r7320, %r2;
	// inline asm
	st.u32 	[%rd97+12], %r7318;
	ld.u32 	%r7323, [%rd95+4];
	ld.u32 	%r7324, [%rd95];
	// inline asm
	prmt.b32 %r7322, %r7323, %r7324, %r2;
	// inline asm
	st.u32 	[%rd97+8], %r7322;
	ld.u32 	%r7327, [%rd95];
	mov.u32 	%r8476, 0;
	// inline asm
	prmt.b32 %r7326, %r7327, %r8476, %r2;
	// inline asm
	st.u32 	[%rd97+4], %r7326;
	st.u32 	[%rd97], %r8476;
	st.u32 	[%rd96+12], %r8476;
	st.u32 	[%rd96+8], %r8476;
	st.u32 	[%rd96+4], %r8476;
	st.u32 	[%rd96], %r8476;
	st.u32 	[%rd95+12], %r8476;
	st.u32 	[%rd95+8], %r8476;
	mov.u64 	%rd1172, 0;
	st.u32 	[%rd95+4], %rd1172;
	st.u32 	[%rd95], %rd1172;
	bra.uni 	BB1_172;

BB1_22:
	setp.eq.s32	%p37, %r1, 9;
	@%p37 bra 	BB1_23;
	bra.uni 	BB1_87;

BB1_23:
	ld.u32 	%r3739, [%rd102+12];
	mov.u32 	%r8442, 0;
	// inline asm
	prmt.b32 %r8453, %r8442, %r3739, %r2;
	// inline asm
	ld.u32 	%r3742, [%rd102+12];
	ld.u32 	%r3743, [%rd102+8];
	// inline asm
	prmt.b32 %r8454, %r3742, %r3743, %r2;
	// inline asm
	ld.u32 	%r3746, [%rd102+8];
	ld.u32 	%r3747, [%rd102+4];
	// inline asm
	prmt.b32 %r8447, %r3746, %r3747, %r2;
	// inline asm
	ld.u32 	%r3750, [%rd102+4];
	ld.u32 	%r3751, [%rd102];
	// inline asm
	prmt.b32 %r8448, %r3750, %r3751, %r2;
	// inline asm
	ld.u32 	%r3754, [%rd102];
	ld.u32 	%r3755, [%rd101+12];
	// inline asm
	prmt.b32 %r8449, %r3754, %r3755, %r2;
	// inline asm
	ld.u32 	%r3758, [%rd101+12];
	ld.u32 	%r3759, [%rd101+8];
	// inline asm
	prmt.b32 %r8450, %r3758, %r3759, %r2;
	// inline asm
	ld.u32 	%r3762, [%rd101+8];
	ld.u32 	%r3763, [%rd101+4];
	// inline asm
	prmt.b32 %r8443, %r3762, %r3763, %r2;
	// inline asm
	ld.u32 	%r3766, [%rd101+4];
	ld.u32 	%r3767, [%rd101];
	// inline asm
	prmt.b32 %r8444, %r3766, %r3767, %r2;
	// inline asm
	ld.u32 	%r3770, [%rd101];
	ld.u32 	%r3771, [%rd100+12];
	// inline asm
	prmt.b32 %r8445, %r3770, %r3771, %r2;
	// inline asm
	ld.u32 	%r3774, [%rd100+12];
	ld.u32 	%r3775, [%rd100+8];
	// inline asm
	prmt.b32 %r8446, %r3774, %r3775, %r2;
	// inline asm
	ld.u32 	%r3778, [%rd100+8];
	ld.u32 	%r3779, [%rd100+4];
	// inline asm
	prmt.b32 %r3777, %r3778, %r3779, %r2;
	// inline asm
	st.u32 	[%rd102+12], %r3777;
	ld.u32 	%r3782, [%rd100+4];
	ld.u32 	%r3783, [%rd100];
	// inline asm
	prmt.b32 %r3781, %r3782, %r3783, %r2;
	// inline asm
	st.u32 	[%rd102+8], %r3781;
	ld.u32 	%r3786, [%rd100];
	ld.u32 	%r3787, [%rd99+12];
	// inline asm
	prmt.b32 %r3785, %r3786, %r3787, %r2;
	// inline asm
	st.u32 	[%rd102+4], %r3785;
	ld.u32 	%r3790, [%rd99+12];
	ld.u32 	%r3791, [%rd99+8];
	// inline asm
	prmt.b32 %r3789, %r3790, %r3791, %r2;
	// inline asm
	st.u32 	[%rd102], %r3789;
	ld.u32 	%r3794, [%rd99+8];
	ld.u32 	%r3795, [%rd99+4];
	// inline asm
	prmt.b32 %r3793, %r3794, %r3795, %r2;
	// inline asm
	st.u32 	[%rd101+12], %r3793;
	ld.u32 	%r3798, [%rd99+4];
	ld.u32 	%r3799, [%rd99];
	// inline asm
	prmt.b32 %r3797, %r3798, %r3799, %r2;
	// inline asm
	st.u32 	[%rd101+8], %r3797;
	ld.u32 	%r3802, [%rd99];
	ld.u32 	%r3803, [%rd98+12];
	// inline asm
	prmt.b32 %r3801, %r3802, %r3803, %r2;
	// inline asm
	st.u32 	[%rd101+4], %r3801;
	ld.u32 	%r3806, [%rd98+12];
	ld.u32 	%r3807, [%rd98+8];
	// inline asm
	prmt.b32 %r3805, %r3806, %r3807, %r2;
	// inline asm
	st.u32 	[%rd101], %r3805;
	ld.u32 	%r3810, [%rd98+8];
	ld.u32 	%r3811, [%rd98+4];
	// inline asm
	prmt.b32 %r3809, %r3810, %r3811, %r2;
	// inline asm
	st.u32 	[%rd100+12], %r3809;
	ld.u32 	%r3814, [%rd98+4];
	ld.u32 	%r3815, [%rd98];
	// inline asm
	prmt.b32 %r3813, %r3814, %r3815, %r2;
	// inline asm
	st.u32 	[%rd100+8], %r3813;
	ld.u32 	%r3818, [%rd98];
	ld.u32 	%r3819, [%rd97+12];
	// inline asm
	prmt.b32 %r3817, %r3818, %r3819, %r2;
	// inline asm
	st.u32 	[%rd100+4], %r3817;
	ld.u32 	%r3822, [%rd97+12];
	ld.u32 	%r3823, [%rd97+8];
	// inline asm
	prmt.b32 %r3821, %r3822, %r3823, %r2;
	// inline asm
	st.u32 	[%rd100], %r3821;
	ld.u32 	%r3826, [%rd97+8];
	ld.u32 	%r3827, [%rd97+4];
	// inline asm
	prmt.b32 %r3825, %r3826, %r3827, %r2;
	// inline asm
	st.u32 	[%rd99+12], %r3825;
	ld.u32 	%r3830, [%rd97+4];
	ld.u32 	%r3831, [%rd97];
	// inline asm
	prmt.b32 %r3829, %r3830, %r3831, %r2;
	// inline asm
	st.u32 	[%rd99+8], %r3829;
	ld.u32 	%r3834, [%rd97];
	ld.u32 	%r3835, [%rd96+12];
	// inline asm
	prmt.b32 %r3833, %r3834, %r3835, %r2;
	// inline asm
	st.u32 	[%rd99+4], %r3833;
	ld.u32 	%r3838, [%rd96+12];
	ld.u32 	%r3839, [%rd96+8];
	// inline asm
	prmt.b32 %r3837, %r3838, %r3839, %r2;
	// inline asm
	st.u32 	[%rd99], %r3837;
	ld.u32 	%r3842, [%rd96+8];
	ld.u32 	%r3843, [%rd96+4];
	// inline asm
	prmt.b32 %r3841, %r3842, %r3843, %r2;
	// inline asm
	st.u32 	[%rd98+12], %r3841;
	ld.u32 	%r3846, [%rd96+4];
	ld.u32 	%r3847, [%rd96];
	// inline asm
	prmt.b32 %r3845, %r3846, %r3847, %r2;
	// inline asm
	st.u32 	[%rd98+8], %r3845;
	ld.u32 	%r3850, [%rd96];
	ld.u32 	%r3851, [%rd95+12];
	// inline asm
	prmt.b32 %r3849, %r3850, %r3851, %r2;
	// inline asm
	st.u32 	[%rd98+4], %r3849;
	ld.u32 	%r3854, [%rd95+12];
	ld.u32 	%r3855, [%rd95+8];
	// inline asm
	prmt.b32 %r3853, %r3854, %r3855, %r2;
	// inline asm
	st.u32 	[%rd98], %r3853;
	ld.u32 	%r3858, [%rd95+8];
	ld.u32 	%r3859, [%rd95+4];
	// inline asm
	prmt.b32 %r3857, %r3858, %r3859, %r2;
	// inline asm
	st.u32 	[%rd97+12], %r3857;
	ld.u32 	%r3862, [%rd95+4];
	ld.u32 	%r3863, [%rd95];
	// inline asm
	prmt.b32 %r3861, %r3862, %r3863, %r2;
	// inline asm
	st.u32 	[%rd97+8], %r3861;
	ld.u32 	%r3866, [%rd95];
	// inline asm
	prmt.b32 %r3865, %r3866, %r8442, %r2;
	// inline asm
	st.u32 	[%rd97+4], %r3865;
	st.u32 	[%rd97], %r8442;
	st.u32 	[%rd96+12], %r8442;
	st.u32 	[%rd96+8], %r8442;
	st.u32 	[%rd96+4], %r8442;
	st.u32 	[%rd96], %r8442;
	st.u32 	[%rd95+12], %r8442;
	st.u32 	[%rd95+8], %r8442;
	mov.u64 	%rd125, 0;
	st.u32 	[%rd95+4], %rd125;
	st.u32 	[%rd95], %rd125;
	mov.u32 	%r8451, %r8442;
	mov.u32 	%r8452, %r8442;
	bra.uni 	BB1_80;

BB1_143:
	setp.eq.s32	%p62, %r1, 25;
	@%p62 bra 	BB1_144;
	bra.uni 	BB1_171;

BB1_144:
	ld.u32 	%r6295, [%rd96+8];
	ld.u32 	%r6296, [%rd96+4];
	// inline asm
	prmt.b32 %r6294, %r6295, %r6296, %r2;
	// inline asm
	st.u32 	[%rd102+12], %r6294;
	ld.u32 	%r6299, [%rd96+4];
	ld.u32 	%r6300, [%rd96];
	// inline asm
	prmt.b32 %r6298, %r6299, %r6300, %r2;
	// inline asm
	st.u32 	[%rd102+8], %r6298;
	ld.u32 	%r6303, [%rd96];
	ld.u32 	%r6304, [%rd95+12];
	// inline asm
	prmt.b32 %r6302, %r6303, %r6304, %r2;
	// inline asm
	st.u32 	[%rd102+4], %r6302;
	ld.u32 	%r6307, [%rd95+12];
	ld.u32 	%r6308, [%rd95+8];
	// inline asm
	prmt.b32 %r6306, %r6307, %r6308, %r2;
	// inline asm
	st.u32 	[%rd102], %r6306;
	ld.u32 	%r6311, [%rd95+8];
	ld.u32 	%r6312, [%rd95+4];
	// inline asm
	prmt.b32 %r6310, %r6311, %r6312, %r2;
	// inline asm
	st.u32 	[%rd101+12], %r6310;
	ld.u32 	%r6315, [%rd95+4];
	ld.u32 	%r6316, [%rd95];
	// inline asm
	prmt.b32 %r6314, %r6315, %r6316, %r2;
	// inline asm
	st.u32 	[%rd101+8], %r6314;
	ld.u32 	%r6319, [%rd95];
	mov.u32 	%r8476, 0;
	// inline asm
	prmt.b32 %r6318, %r6319, %r8476, %r2;
	// inline asm
	st.u32 	[%rd101+4], %r6318;
	st.u32 	[%rd101], %r8476;
	st.u32 	[%rd100+12], %r8476;
	st.u32 	[%rd100+8], %r8476;
	st.u32 	[%rd100+4], %r8476;
	st.u32 	[%rd100], %r8476;
	st.u32 	[%rd99+12], %r8476;
	st.u32 	[%rd99+8], %r8476;
	st.u32 	[%rd99+4], %r8476;
	st.u32 	[%rd99], %r8476;
	st.u32 	[%rd98+12], %r8476;
	st.u32 	[%rd98+8], %r8476;
	st.u32 	[%rd98+4], %r8476;
	st.u32 	[%rd98], %r8476;
	st.u32 	[%rd97+12], %r8476;
	st.u32 	[%rd97+8], %r8476;
	st.u32 	[%rd97+4], %r8476;
	st.u32 	[%rd97], %r8476;
	st.u32 	[%rd96+12], %r8476;
	st.u32 	[%rd96+8], %r8476;
	st.u32 	[%rd96+4], %r8476;
	st.u32 	[%rd96], %r8476;
	st.u32 	[%rd95+12], %r8476;
	st.u32 	[%rd95+8], %r8476;
	mov.u64 	%rd1156, 0;
	st.u32 	[%rd95+4], %rd1156;
	st.u32 	[%rd95], %rd1156;
	bra.uni 	BB1_172;

BB1_53:
	setp.eq.s32	%p14, %r1, 25;
	@%p14 bra 	BB1_54;
	bra.uni 	BB1_87;

BB1_54:
	ld.u32 	%r1395, [%rd102+12];
	mov.u32 	%r8442, 0;
	// inline asm
	prmt.b32 %r8469, %r8442, %r1395, %r2;
	// inline asm
	ld.u32 	%r1398, [%rd102+12];
	ld.u32 	%r1399, [%rd102+8];
	// inline asm
	prmt.b32 %r8470, %r1398, %r1399, %r2;
	// inline asm
	ld.u32 	%r1402, [%rd102+8];
	ld.u32 	%r1403, [%rd102+4];
	// inline asm
	prmt.b32 %r8463, %r1402, %r1403, %r2;
	// inline asm
	ld.u32 	%r1406, [%rd102+4];
	ld.u32 	%r1407, [%rd102];
	// inline asm
	prmt.b32 %r8464, %r1406, %r1407, %r2;
	// inline asm
	ld.u32 	%r1410, [%rd102];
	ld.u32 	%r1411, [%rd101+12];
	// inline asm
	prmt.b32 %r8465, %r1410, %r1411, %r2;
	// inline asm
	ld.u32 	%r1414, [%rd101+12];
	ld.u32 	%r1415, [%rd101+8];
	// inline asm
	prmt.b32 %r8466, %r1414, %r1415, %r2;
	// inline asm
	ld.u32 	%r1418, [%rd101+8];
	ld.u32 	%r1419, [%rd101+4];
	// inline asm
	prmt.b32 %r8459, %r1418, %r1419, %r2;
	// inline asm
	ld.u32 	%r1422, [%rd101+4];
	ld.u32 	%r1423, [%rd101];
	// inline asm
	prmt.b32 %r8460, %r1422, %r1423, %r2;
	// inline asm
	ld.u32 	%r1426, [%rd101];
	ld.u32 	%r1427, [%rd100+12];
	// inline asm
	prmt.b32 %r8461, %r1426, %r1427, %r2;
	// inline asm
	ld.u32 	%r1430, [%rd100+12];
	ld.u32 	%r1431, [%rd100+8];
	// inline asm
	prmt.b32 %r8462, %r1430, %r1431, %r2;
	// inline asm
	ld.u32 	%r1434, [%rd100+8];
	ld.u32 	%r1435, [%rd100+4];
	// inline asm
	prmt.b32 %r8455, %r1434, %r1435, %r2;
	// inline asm
	ld.u32 	%r1438, [%rd100+4];
	ld.u32 	%r1439, [%rd100];
	// inline asm
	prmt.b32 %r8456, %r1438, %r1439, %r2;
	// inline asm
	ld.u32 	%r1442, [%rd100];
	ld.u32 	%r1443, [%rd99+12];
	// inline asm
	prmt.b32 %r8457, %r1442, %r1443, %r2;
	// inline asm
	ld.u32 	%r1446, [%rd99+12];
	ld.u32 	%r1447, [%rd99+8];
	// inline asm
	prmt.b32 %r8458, %r1446, %r1447, %r2;
	// inline asm
	ld.u32 	%r1450, [%rd99+8];
	ld.u32 	%r1451, [%rd99+4];
	// inline asm
	prmt.b32 %r8451, %r1450, %r1451, %r2;
	// inline asm
	ld.u32 	%r1454, [%rd99+4];
	ld.u32 	%r1455, [%rd99];
	// inline asm
	prmt.b32 %r8452, %r1454, %r1455, %r2;
	// inline asm
	ld.u32 	%r1458, [%rd99];
	ld.u32 	%r1459, [%rd98+12];
	// inline asm
	prmt.b32 %r8453, %r1458, %r1459, %r2;
	// inline asm
	ld.u32 	%r1462, [%rd98+12];
	ld.u32 	%r1463, [%rd98+8];
	// inline asm
	prmt.b32 %r8454, %r1462, %r1463, %r2;
	// inline asm
	ld.u32 	%r1466, [%rd98+8];
	ld.u32 	%r1467, [%rd98+4];
	// inline asm
	prmt.b32 %r8447, %r1466, %r1467, %r2;
	// inline asm
	ld.u32 	%r1470, [%rd98+4];
	ld.u32 	%r1471, [%rd98];
	// inline asm
	prmt.b32 %r8448, %r1470, %r1471, %r2;
	// inline asm
	ld.u32 	%r1474, [%rd98];
	ld.u32 	%r1475, [%rd97+12];
	// inline asm
	prmt.b32 %r8449, %r1474, %r1475, %r2;
	// inline asm
	ld.u32 	%r1478, [%rd97+12];
	ld.u32 	%r1479, [%rd97+8];
	// inline asm
	prmt.b32 %r8450, %r1478, %r1479, %r2;
	// inline asm
	ld.u32 	%r1482, [%rd97+8];
	ld.u32 	%r1483, [%rd97+4];
	// inline asm
	prmt.b32 %r8443, %r1482, %r1483, %r2;
	// inline asm
	ld.u32 	%r1486, [%rd97+4];
	ld.u32 	%r1487, [%rd97];
	// inline asm
	prmt.b32 %r8444, %r1486, %r1487, %r2;
	// inline asm
	ld.u32 	%r1490, [%rd97];
	ld.u32 	%r1491, [%rd96+12];
	// inline asm
	prmt.b32 %r8445, %r1490, %r1491, %r2;
	// inline asm
	ld.u32 	%r1494, [%rd96+12];
	ld.u32 	%r1495, [%rd96+8];
	// inline asm
	prmt.b32 %r8446, %r1494, %r1495, %r2;
	// inline asm
	ld.u32 	%r1498, [%rd96+8];
	ld.u32 	%r1499, [%rd96+4];
	// inline asm
	prmt.b32 %r1497, %r1498, %r1499, %r2;
	// inline asm
	st.u32 	[%rd102+12], %r1497;
	ld.u32 	%r1502, [%rd96+4];
	ld.u32 	%r1503, [%rd96];
	// inline asm
	prmt.b32 %r1501, %r1502, %r1503, %r2;
	// inline asm
	st.u32 	[%rd102+8], %r1501;
	ld.u32 	%r1506, [%rd96];
	ld.u32 	%r1507, [%rd95+12];
	// inline asm
	prmt.b32 %r1505, %r1506, %r1507, %r2;
	// inline asm
	st.u32 	[%rd102+4], %r1505;
	ld.u32 	%r1510, [%rd95+12];
	ld.u32 	%r1511, [%rd95+8];
	// inline asm
	prmt.b32 %r1509, %r1510, %r1511, %r2;
	// inline asm
	st.u32 	[%rd102], %r1509;
	ld.u32 	%r1514, [%rd95+8];
	ld.u32 	%r1515, [%rd95+4];
	// inline asm
	prmt.b32 %r1513, %r1514, %r1515, %r2;
	// inline asm
	st.u32 	[%rd101+12], %r1513;
	ld.u32 	%r1518, [%rd95+4];
	ld.u32 	%r1519, [%rd95];
	// inline asm
	prmt.b32 %r1517, %r1518, %r1519, %r2;
	// inline asm
	st.u32 	[%rd101+8], %r1517;
	ld.u32 	%r1522, [%rd95];
	// inline asm
	prmt.b32 %r1521, %r1522, %r8442, %r2;
	// inline asm
	st.u32 	[%rd101+4], %r1521;
	st.u32 	[%rd101], %r8442;
	st.u32 	[%rd100+12], %r8442;
	st.u32 	[%rd100+8], %r8442;
	st.u32 	[%rd100+4], %r8442;
	st.u32 	[%rd100], %r8442;
	st.u32 	[%rd99+12], %r8442;
	st.u32 	[%rd99+8], %r8442;
	st.u32 	[%rd99+4], %r8442;
	st.u32 	[%rd99], %r8442;
	st.u32 	[%rd98+12], %r8442;
	st.u32 	[%rd98+8], %r8442;
	st.u32 	[%rd98+4], %r8442;
	st.u32 	[%rd98], %r8442;
	st.u32 	[%rd97+12], %r8442;
	st.u32 	[%rd97+8], %r8442;
	st.u32 	[%rd97+4], %r8442;
	st.u32 	[%rd97], %r8442;
	st.u32 	[%rd96+12], %r8442;
	st.u32 	[%rd96+8], %r8442;
	st.u32 	[%rd96+4], %r8442;
	st.u32 	[%rd96], %r8442;
	st.u32 	[%rd95+12], %r8442;
	st.u32 	[%rd95+8], %r8442;
	mov.u64 	%rd109, 0;
	st.u32 	[%rd95+4], %rd109;
	st.u32 	[%rd95], %rd109;
	mov.u32 	%r8467, %r8442;
	mov.u32 	%r8468, %r8442;
	bra.uni 	BB1_84;

BB1_104:
	setp.eq.s32	%p91, %r1, 5;
	@%p91 bra 	BB1_105;
	bra.uni 	BB1_171;

BB1_105:
	ld.u32 	%r7635, [%rd101+8];
	ld.u32 	%r7636, [%rd101+4];
	// inline asm
	prmt.b32 %r7634, %r7635, %r7636, %r2;
	// inline asm
	st.u32 	[%rd102+12], %r7634;
	ld.u32 	%r7639, [%rd101+4];
	ld.u32 	%r7640, [%rd101];
	// inline asm
	prmt.b32 %r7638, %r7639, %r7640, %r2;
	// inline asm
	st.u32 	[%rd102+8], %r7638;
	ld.u32 	%r7643, [%rd101];
	ld.u32 	%r7644, [%rd100+12];
	// inline asm
	prmt.b32 %r7642, %r7643, %r7644, %r2;
	// inline asm
	st.u32 	[%rd102+4], %r7642;
	ld.u32 	%r7647, [%rd100+12];
	ld.u32 	%r7648, [%rd100+8];
	// inline asm
	prmt.b32 %r7646, %r7647, %r7648, %r2;
	// inline asm
	st.u32 	[%rd102], %r7646;
	ld.u32 	%r7651, [%rd100+8];
	ld.u32 	%r7652, [%rd100+4];
	// inline asm
	prmt.b32 %r7650, %r7651, %r7652, %r2;
	// inline asm
	st.u32 	[%rd101+12], %r7650;
	ld.u32 	%r7655, [%rd100+4];
	ld.u32 	%r7656, [%rd100];
	// inline asm
	prmt.b32 %r7654, %r7655, %r7656, %r2;
	// inline asm
	st.u32 	[%rd101+8], %r7654;
	ld.u32 	%r7659, [%rd100];
	ld.u32 	%r7660, [%rd99+12];
	// inline asm
	prmt.b32 %r7658, %r7659, %r7660, %r2;
	// inline asm
	st.u32 	[%rd101+4], %r7658;
	ld.u32 	%r7663, [%rd99+12];
	ld.u32 	%r7664, [%rd99+8];
	// inline asm
	prmt.b32 %r7662, %r7663, %r7664, %r2;
	// inline asm
	st.u32 	[%rd101], %r7662;
	ld.u32 	%r7667, [%rd99+8];
	ld.u32 	%r7668, [%rd99+4];
	// inline asm
	prmt.b32 %r7666, %r7667, %r7668, %r2;
	// inline asm
	st.u32 	[%rd100+12], %r7666;
	ld.u32 	%r7671, [%rd99+4];
	ld.u32 	%r7672, [%rd99];
	// inline asm
	prmt.b32 %r7670, %r7671, %r7672, %r2;
	// inline asm
	st.u32 	[%rd100+8], %r7670;
	ld.u32 	%r7675, [%rd99];
	ld.u32 	%r7676, [%rd98+12];
	// inline asm
	prmt.b32 %r7674, %r7675, %r7676, %r2;
	// inline asm
	st.u32 	[%rd100+4], %r7674;
	ld.u32 	%r7679, [%rd98+12];
	ld.u32 	%r7680, [%rd98+8];
	// inline asm
	prmt.b32 %r7678, %r7679, %r7680, %r2;
	// inline asm
	st.u32 	[%rd100], %r7678;
	ld.u32 	%r7683, [%rd98+8];
	ld.u32 	%r7684, [%rd98+4];
	// inline asm
	prmt.b32 %r7682, %r7683, %r7684, %r2;
	// inline asm
	st.u32 	[%rd99+12], %r7682;
	ld.u32 	%r7687, [%rd98+4];
	ld.u32 	%r7688, [%rd98];
	// inline asm
	prmt.b32 %r7686, %r7687, %r7688, %r2;
	// inline asm
	st.u32 	[%rd99+8], %r7686;
	ld.u32 	%r7691, [%rd98];
	ld.u32 	%r7692, [%rd97+12];
	// inline asm
	prmt.b32 %r7690, %r7691, %r7692, %r2;
	// inline asm
	st.u32 	[%rd99+4], %r7690;
	ld.u32 	%r7695, [%rd97+12];
	ld.u32 	%r7696, [%rd97+8];
	// inline asm
	prmt.b32 %r7694, %r7695, %r7696, %r2;
	// inline asm
	st.u32 	[%rd99], %r7694;
	ld.u32 	%r7699, [%rd97+8];
	ld.u32 	%r7700, [%rd97+4];
	// inline asm
	prmt.b32 %r7698, %r7699, %r7700, %r2;
	// inline asm
	st.u32 	[%rd98+12], %r7698;
	ld.u32 	%r7703, [%rd97+4];
	ld.u32 	%r7704, [%rd97];
	// inline asm
	prmt.b32 %r7702, %r7703, %r7704, %r2;
	// inline asm
	st.u32 	[%rd98+8], %r7702;
	ld.u32 	%r7707, [%rd97];
	ld.u32 	%r7708, [%rd96+12];
	// inline asm
	prmt.b32 %r7706, %r7707, %r7708, %r2;
	// inline asm
	st.u32 	[%rd98+4], %r7706;
	ld.u32 	%r7711, [%rd96+12];
	ld.u32 	%r7712, [%rd96+8];
	// inline asm
	prmt.b32 %r7710, %r7711, %r7712, %r2;
	// inline asm
	st.u32 	[%rd98], %r7710;
	ld.u32 	%r7715, [%rd96+8];
	ld.u32 	%r7716, [%rd96+4];
	// inline asm
	prmt.b32 %r7714, %r7715, %r7716, %r2;
	// inline asm
	st.u32 	[%rd97+12], %r7714;
	ld.u32 	%r7719, [%rd96+4];
	ld.u32 	%r7720, [%rd96];
	// inline asm
	prmt.b32 %r7718, %r7719, %r7720, %r2;
	// inline asm
	st.u32 	[%rd97+8], %r7718;
	ld.u32 	%r7723, [%rd96];
	ld.u32 	%r7724, [%rd95+12];
	// inline asm
	prmt.b32 %r7722, %r7723, %r7724, %r2;
	// inline asm
	st.u32 	[%rd97+4], %r7722;
	ld.u32 	%r7727, [%rd95+12];
	ld.u32 	%r7728, [%rd95+8];
	// inline asm
	prmt.b32 %r7726, %r7727, %r7728, %r2;
	// inline asm
	st.u32 	[%rd97], %r7726;
	ld.u32 	%r7731, [%rd95+8];
	ld.u32 	%r7732, [%rd95+4];
	// inline asm
	prmt.b32 %r7730, %r7731, %r7732, %r2;
	// inline asm
	st.u32 	[%rd96+12], %r7730;
	ld.u32 	%r7735, [%rd95+4];
	ld.u32 	%r7736, [%rd95];
	// inline asm
	prmt.b32 %r7734, %r7735, %r7736, %r2;
	// inline asm
	st.u32 	[%rd96+8], %r7734;
	ld.u32 	%r7739, [%rd95];
	mov.u32 	%r8476, 0;
	// inline asm
	prmt.b32 %r7738, %r7739, %r8476, %r2;
	// inline asm
	st.u32 	[%rd96+4], %r7738;
	st.u32 	[%rd96], %r8476;
	st.u32 	[%rd95+12], %r8476;
	st.u32 	[%rd95+8], %r8476;
	mov.u64 	%rd1176, 0;
	st.u32 	[%rd95+4], %rd1176;
	st.u32 	[%rd95], %rd1176;
	bra.uni 	BB1_172;

BB1_14:
	setp.eq.s32	%p43, %r1, 5;
	@%p43 bra 	BB1_15;
	bra.uni 	BB1_87;

BB1_15:
	ld.u32 	%r4365, [%rd102+12];
	mov.u32 	%r8442, 0;
	// inline asm
	prmt.b32 %r8449, %r8442, %r4365, %r2;
	// inline asm
	ld.u32 	%r4368, [%rd102+12];
	ld.u32 	%r4369, [%rd102+8];
	// inline asm
	prmt.b32 %r8450, %r4368, %r4369, %r2;
	// inline asm
	ld.u32 	%r4372, [%rd102+8];
	ld.u32 	%r4373, [%rd102+4];
	// inline asm
	prmt.b32 %r8443, %r4372, %r4373, %r2;
	// inline asm
	ld.u32 	%r4376, [%rd102+4];
	ld.u32 	%r4377, [%rd102];
	// inline asm
	prmt.b32 %r8444, %r4376, %r4377, %r2;
	// inline asm
	ld.u32 	%r4380, [%rd102];
	ld.u32 	%r4381, [%rd101+12];
	// inline asm
	prmt.b32 %r8445, %r4380, %r4381, %r2;
	// inline asm
	ld.u32 	%r4384, [%rd101+12];
	ld.u32 	%r4385, [%rd101+8];
	// inline asm
	prmt.b32 %r8446, %r4384, %r4385, %r2;
	// inline asm
	ld.u32 	%r4388, [%rd101+8];
	ld.u32 	%r4389, [%rd101+4];
	// inline asm
	prmt.b32 %r4387, %r4388, %r4389, %r2;
	// inline asm
	st.u32 	[%rd102+12], %r4387;
	ld.u32 	%r4392, [%rd101+4];
	ld.u32 	%r4393, [%rd101];
	// inline asm
	prmt.b32 %r4391, %r4392, %r4393, %r2;
	// inline asm
	st.u32 	[%rd102+8], %r4391;
	ld.u32 	%r4396, [%rd101];
	ld.u32 	%r4397, [%rd100+12];
	// inline asm
	prmt.b32 %r4395, %r4396, %r4397, %r2;
	// inline asm
	st.u32 	[%rd102+4], %r4395;
	ld.u32 	%r4400, [%rd100+12];
	ld.u32 	%r4401, [%rd100+8];
	// inline asm
	prmt.b32 %r4399, %r4400, %r4401, %r2;
	// inline asm
	st.u32 	[%rd102], %r4399;
	ld.u32 	%r4404, [%rd100+8];
	ld.u32 	%r4405, [%rd100+4];
	// inline asm
	prmt.b32 %r4403, %r4404, %r4405, %r2;
	// inline asm
	st.u32 	[%rd101+12], %r4403;
	ld.u32 	%r4408, [%rd100+4];
	ld.u32 	%r4409, [%rd100];
	// inline asm
	prmt.b32 %r4407, %r4408, %r4409, %r2;
	// inline asm
	st.u32 	[%rd101+8], %r4407;
	ld.u32 	%r4412, [%rd100];
	ld.u32 	%r4413, [%rd99+12];
	// inline asm
	prmt.b32 %r4411, %r4412, %r4413, %r2;
	// inline asm
	st.u32 	[%rd101+4], %r4411;
	ld.u32 	%r4416, [%rd99+12];
	ld.u32 	%r4417, [%rd99+8];
	// inline asm
	prmt.b32 %r4415, %r4416, %r4417, %r2;
	// inline asm
	st.u32 	[%rd101], %r4415;
	ld.u32 	%r4420, [%rd99+8];
	ld.u32 	%r4421, [%rd99+4];
	// inline asm
	prmt.b32 %r4419, %r4420, %r4421, %r2;
	// inline asm
	st.u32 	[%rd100+12], %r4419;
	ld.u32 	%r4424, [%rd99+4];
	ld.u32 	%r4425, [%rd99];
	// inline asm
	prmt.b32 %r4423, %r4424, %r4425, %r2;
	// inline asm
	st.u32 	[%rd100+8], %r4423;
	ld.u32 	%r4428, [%rd99];
	ld.u32 	%r4429, [%rd98+12];
	// inline asm
	prmt.b32 %r4427, %r4428, %r4429, %r2;
	// inline asm
	st.u32 	[%rd100+4], %r4427;
	ld.u32 	%r4432, [%rd98+12];
	ld.u32 	%r4433, [%rd98+8];
	// inline asm
	prmt.b32 %r4431, %r4432, %r4433, %r2;
	// inline asm
	st.u32 	[%rd100], %r4431;
	ld.u32 	%r4436, [%rd98+8];
	ld.u32 	%r4437, [%rd98+4];
	// inline asm
	prmt.b32 %r4435, %r4436, %r4437, %r2;
	// inline asm
	st.u32 	[%rd99+12], %r4435;
	ld.u32 	%r4440, [%rd98+4];
	ld.u32 	%r4441, [%rd98];
	// inline asm
	prmt.b32 %r4439, %r4440, %r4441, %r2;
	// inline asm
	st.u32 	[%rd99+8], %r4439;
	ld.u32 	%r4444, [%rd98];
	ld.u32 	%r4445, [%rd97+12];
	// inline asm
	prmt.b32 %r4443, %r4444, %r4445, %r2;
	// inline asm
	st.u32 	[%rd99+4], %r4443;
	ld.u32 	%r4448, [%rd97+12];
	ld.u32 	%r4449, [%rd97+8];
	// inline asm
	prmt.b32 %r4447, %r4448, %r4449, %r2;
	// inline asm
	st.u32 	[%rd99], %r4447;
	ld.u32 	%r4452, [%rd97+8];
	ld.u32 	%r4453, [%rd97+4];
	// inline asm
	prmt.b32 %r4451, %r4452, %r4453, %r2;
	// inline asm
	st.u32 	[%rd98+12], %r4451;
	ld.u32 	%r4456, [%rd97+4];
	ld.u32 	%r4457, [%rd97];
	// inline asm
	prmt.b32 %r4455, %r4456, %r4457, %r2;
	// inline asm
	st.u32 	[%rd98+8], %r4455;
	ld.u32 	%r4460, [%rd97];
	ld.u32 	%r4461, [%rd96+12];
	// inline asm
	prmt.b32 %r4459, %r4460, %r4461, %r2;
	// inline asm
	st.u32 	[%rd98+4], %r4459;
	ld.u32 	%r4464, [%rd96+12];
	ld.u32 	%r4465, [%rd96+8];
	// inline asm
	prmt.b32 %r4463, %r4464, %r4465, %r2;
	// inline asm
	st.u32 	[%rd98], %r4463;
	ld.u32 	%r4468, [%rd96+8];
	ld.u32 	%r4469, [%rd96+4];
	// inline asm
	prmt.b32 %r4467, %r4468, %r4469, %r2;
	// inline asm
	st.u32 	[%rd97+12], %r4467;
	ld.u32 	%r4472, [%rd96+4];
	ld.u32 	%r4473, [%rd96];
	// inline asm
	prmt.b32 %r4471, %r4472, %r4473, %r2;
	// inline asm
	st.u32 	[%rd97+8], %r4471;
	ld.u32 	%r4476, [%rd96];
	ld.u32 	%r4477, [%rd95+12];
	// inline asm
	prmt.b32 %r4475, %r4476, %r4477, %r2;
	// inline asm
	st.u32 	[%rd97+4], %r4475;
	ld.u32 	%r4480, [%rd95+12];
	ld.u32 	%r4481, [%rd95+8];
	// inline asm
	prmt.b32 %r4479, %r4480, %r4481, %r2;
	// inline asm
	st.u32 	[%rd97], %r4479;
	ld.u32 	%r4484, [%rd95+8];
	ld.u32 	%r4485, [%rd95+4];
	// inline asm
	prmt.b32 %r4483, %r4484, %r4485, %r2;
	// inline asm
	st.u32 	[%rd96+12], %r4483;
	ld.u32 	%r4488, [%rd95+4];
	ld.u32 	%r4489, [%rd95];
	// inline asm
	prmt.b32 %r4487, %r4488, %r4489, %r2;
	// inline asm
	st.u32 	[%rd96+8], %r4487;
	ld.u32 	%r4492, [%rd95];
	// inline asm
	prmt.b32 %r4491, %r4492, %r8442, %r2;
	// inline asm
	st.u32 	[%rd96+4], %r4491;
	st.u32 	[%rd96], %r8442;
	st.u32 	[%rd95+12], %r8442;
	st.u32 	[%rd95+8], %r8442;
	mov.u64 	%rd129, 0;
	st.u32 	[%rd95+4], %rd129;
	st.u32 	[%rd95], %rd129;
	mov.u32 	%r8447, %r8442;
	mov.u32 	%r8448, %r8442;
	bra.uni 	BB1_79;

BB1_135:
	setp.eq.s32	%p68, %r1, 21;
	@%p68 bra 	BB1_136;
	bra.uni 	BB1_171;

BB1_136:
	ld.u32 	%r6435, [%rd97+8];
	ld.u32 	%r6436, [%rd97+4];
	// inline asm
	prmt.b32 %r6434, %r6435, %r6436, %r2;
	// inline asm
	st.u32 	[%rd102+12], %r6434;
	ld.u32 	%r6439, [%rd97+4];
	ld.u32 	%r6440, [%rd97];
	// inline asm
	prmt.b32 %r6438, %r6439, %r6440, %r2;
	// inline asm
	st.u32 	[%rd102+8], %r6438;
	ld.u32 	%r6443, [%rd97];
	ld.u32 	%r6444, [%rd96+12];
	// inline asm
	prmt.b32 %r6442, %r6443, %r6444, %r2;
	// inline asm
	st.u32 	[%rd102+4], %r6442;
	ld.u32 	%r6447, [%rd96+12];
	ld.u32 	%r6448, [%rd96+8];
	// inline asm
	prmt.b32 %r6446, %r6447, %r6448, %r2;
	// inline asm
	st.u32 	[%rd102], %r6446;
	ld.u32 	%r6451, [%rd96+8];
	ld.u32 	%r6452, [%rd96+4];
	// inline asm
	prmt.b32 %r6450, %r6451, %r6452, %r2;
	// inline asm
	st.u32 	[%rd101+12], %r6450;
	ld.u32 	%r6455, [%rd96+4];
	ld.u32 	%r6456, [%rd96];
	// inline asm
	prmt.b32 %r6454, %r6455, %r6456, %r2;
	// inline asm
	st.u32 	[%rd101+8], %r6454;
	ld.u32 	%r6459, [%rd96];
	ld.u32 	%r6460, [%rd95+12];
	// inline asm
	prmt.b32 %r6458, %r6459, %r6460, %r2;
	// inline asm
	st.u32 	[%rd101+4], %r6458;
	ld.u32 	%r6463, [%rd95+12];
	ld.u32 	%r6464, [%rd95+8];
	// inline asm
	prmt.b32 %r6462, %r6463, %r6464, %r2;
	// inline asm
	st.u32 	[%rd101], %r6462;
	ld.u32 	%r6467, [%rd95+8];
	ld.u32 	%r6468, [%rd95+4];
	// inline asm
	prmt.b32 %r6466, %r6467, %r6468, %r2;
	// inline asm
	st.u32 	[%rd100+12], %r6466;
	ld.u32 	%r6471, [%rd95+4];
	ld.u32 	%r6472, [%rd95];
	// inline asm
	prmt.b32 %r6470, %r6471, %r6472, %r2;
	// inline asm
	st.u32 	[%rd100+8], %r6470;
	ld.u32 	%r6475, [%rd95];
	mov.u32 	%r8476, 0;
	// inline asm
	prmt.b32 %r6474, %r6475, %r8476, %r2;
	// inline asm
	st.u32 	[%rd100+4], %r6474;
	st.u32 	[%rd100], %r8476;
	st.u32 	[%rd99+12], %r8476;
	st.u32 	[%rd99+8], %r8476;
	st.u32 	[%rd99+4], %r8476;
	st.u32 	[%rd99], %r8476;
	st.u32 	[%rd98+12], %r8476;
	st.u32 	[%rd98+8], %r8476;
	st.u32 	[%rd98+4], %r8476;
	st.u32 	[%rd98], %r8476;
	st.u32 	[%rd97+12], %r8476;
	st.u32 	[%rd97+8], %r8476;
	st.u32 	[%rd97+4], %r8476;
	st.u32 	[%rd97], %r8476;
	st.u32 	[%rd96+12], %r8476;
	st.u32 	[%rd96+8], %r8476;
	st.u32 	[%rd96+4], %r8476;
	st.u32 	[%rd96], %r8476;
	st.u32 	[%rd95+12], %r8476;
	st.u32 	[%rd95+8], %r8476;
	mov.u64 	%rd1160, 0;
	st.u32 	[%rd95+4], %rd1160;
	st.u32 	[%rd95], %rd1160;
	bra.uni 	BB1_172;

BB1_45:
	setp.eq.s32	%p20, %r1, 21;
	@%p20 bra 	BB1_46;
	bra.uni 	BB1_87;

BB1_46:
	ld.u32 	%r1957, [%rd102+12];
	mov.u32 	%r8442, 0;
	// inline asm
	prmt.b32 %r8465, %r8442, %r1957, %r2;
	// inline asm
	ld.u32 	%r1960, [%rd102+12];
	ld.u32 	%r1961, [%rd102+8];
	// inline asm
	prmt.b32 %r8466, %r1960, %r1961, %r2;
	// inline asm
	ld.u32 	%r1964, [%rd102+8];
	ld.u32 	%r1965, [%rd102+4];
	// inline asm
	prmt.b32 %r8459, %r1964, %r1965, %r2;
	// inline asm
	ld.u32 	%r1968, [%rd102+4];
	ld.u32 	%r1969, [%rd102];
	// inline asm
	prmt.b32 %r8460, %r1968, %r1969, %r2;
	// inline asm
	ld.u32 	%r1972, [%rd102];
	ld.u32 	%r1973, [%rd101+12];
	// inline asm
	prmt.b32 %r8461, %r1972, %r1973, %r2;
	// inline asm
	ld.u32 	%r1976, [%rd101+12];
	ld.u32 	%r1977, [%rd101+8];
	// inline asm
	prmt.b32 %r8462, %r1976, %r1977, %r2;
	// inline asm
	ld.u32 	%r1980, [%rd101+8];
	ld.u32 	%r1981, [%rd101+4];
	// inline asm
	prmt.b32 %r8455, %r1980, %r1981, %r2;
	// inline asm
	ld.u32 	%r1984, [%rd101+4];
	ld.u32 	%r1985, [%rd101];
	// inline asm
	prmt.b32 %r8456, %r1984, %r1985, %r2;
	// inline asm
	ld.u32 	%r1988, [%rd101];
	ld.u32 	%r1989, [%rd100+12];
	// inline asm
	prmt.b32 %r8457, %r1988, %r1989, %r2;
	// inline asm
	ld.u32 	%r1992, [%rd100+12];
	ld.u32 	%r1993, [%rd100+8];
	// inline asm
	prmt.b32 %r8458, %r1992, %r1993, %r2;
	// inline asm
	ld.u32 	%r1996, [%rd100+8];
	ld.u32 	%r1997, [%rd100+4];
	// inline asm
	prmt.b32 %r8451, %r1996, %r1997, %r2;
	// inline asm
	ld.u32 	%r2000, [%rd100+4];
	ld.u32 	%r2001, [%rd100];
	// inline asm
	prmt.b32 %r8452, %r2000, %r2001, %r2;
	// inline asm
	ld.u32 	%r2004, [%rd100];
	ld.u32 	%r2005, [%rd99+12];
	// inline asm
	prmt.b32 %r8453, %r2004, %r2005, %r2;
	// inline asm
	ld.u32 	%r2008, [%rd99+12];
	ld.u32 	%r2009, [%rd99+8];
	// inline asm
	prmt.b32 %r8454, %r2008, %r2009, %r2;
	// inline asm
	ld.u32 	%r2012, [%rd99+8];
	ld.u32 	%r2013, [%rd99+4];
	// inline asm
	prmt.b32 %r8447, %r2012, %r2013, %r2;
	// inline asm
	ld.u32 	%r2016, [%rd99+4];
	ld.u32 	%r2017, [%rd99];
	// inline asm
	prmt.b32 %r8448, %r2016, %r2017, %r2;
	// inline asm
	ld.u32 	%r2020, [%rd99];
	ld.u32 	%r2021, [%rd98+12];
	// inline asm
	prmt.b32 %r8449, %r2020, %r2021, %r2;
	// inline asm
	ld.u32 	%r2024, [%rd98+12];
	ld.u32 	%r2025, [%rd98+8];
	// inline asm
	prmt.b32 %r8450, %r2024, %r2025, %r2;
	// inline asm
	ld.u32 	%r2028, [%rd98+8];
	ld.u32 	%r2029, [%rd98+4];
	// inline asm
	prmt.b32 %r8443, %r2028, %r2029, %r2;
	// inline asm
	ld.u32 	%r2032, [%rd98+4];
	ld.u32 	%r2033, [%rd98];
	// inline asm
	prmt.b32 %r8444, %r2032, %r2033, %r2;
	// inline asm
	ld.u32 	%r2036, [%rd98];
	ld.u32 	%r2037, [%rd97+12];
	// inline asm
	prmt.b32 %r8445, %r2036, %r2037, %r2;
	// inline asm
	ld.u32 	%r2040, [%rd97+12];
	ld.u32 	%r2041, [%rd97+8];
	// inline asm
	prmt.b32 %r8446, %r2040, %r2041, %r2;
	// inline asm
	ld.u32 	%r2044, [%rd97+8];
	ld.u32 	%r2045, [%rd97+4];
	// inline asm
	prmt.b32 %r2043, %r2044, %r2045, %r2;
	// inline asm
	st.u32 	[%rd102+12], %r2043;
	ld.u32 	%r2048, [%rd97+4];
	ld.u32 	%r2049, [%rd97];
	// inline asm
	prmt.b32 %r2047, %r2048, %r2049, %r2;
	// inline asm
	st.u32 	[%rd102+8], %r2047;
	ld.u32 	%r2052, [%rd97];
	ld.u32 	%r2053, [%rd96+12];
	// inline asm
	prmt.b32 %r2051, %r2052, %r2053, %r2;
	// inline asm
	st.u32 	[%rd102+4], %r2051;
	ld.u32 	%r2056, [%rd96+12];
	ld.u32 	%r2057, [%rd96+8];
	// inline asm
	prmt.b32 %r2055, %r2056, %r2057, %r2;
	// inline asm
	st.u32 	[%rd102], %r2055;
	ld.u32 	%r2060, [%rd96+8];
	ld.u32 	%r2061, [%rd96+4];
	// inline asm
	prmt.b32 %r2059, %r2060, %r2061, %r2;
	// inline asm
	st.u32 	[%rd101+12], %r2059;
	ld.u32 	%r2064, [%rd96+4];
	ld.u32 	%r2065, [%rd96];
	// inline asm
	prmt.b32 %r2063, %r2064, %r2065, %r2;
	// inline asm
	st.u32 	[%rd101+8], %r2063;
	ld.u32 	%r2068, [%rd96];
	ld.u32 	%r2069, [%rd95+12];
	// inline asm
	prmt.b32 %r2067, %r2068, %r2069, %r2;
	// inline asm
	st.u32 	[%rd101+4], %r2067;
	ld.u32 	%r2072, [%rd95+12];
	ld.u32 	%r2073, [%rd95+8];
	// inline asm
	prmt.b32 %r2071, %r2072, %r2073, %r2;
	// inline asm
	st.u32 	[%rd101], %r2071;
	ld.u32 	%r2076, [%rd95+8];
	ld.u32 	%r2077, [%rd95+4];
	// inline asm
	prmt.b32 %r2075, %r2076, %r2077, %r2;
	// inline asm
	st.u32 	[%rd100+12], %r2075;
	ld.u32 	%r2080, [%rd95+4];
	ld.u32 	%r2081, [%rd95];
	// inline asm
	prmt.b32 %r2079, %r2080, %r2081, %r2;
	// inline asm
	st.u32 	[%rd100+8], %r2079;
	ld.u32 	%r2084, [%rd95];
	// inline asm
	prmt.b32 %r2083, %r2084, %r8442, %r2;
	// inline asm
	st.u32 	[%rd100+4], %r2083;
	st.u32 	[%rd100], %r8442;
	st.u32 	[%rd99+12], %r8442;
	st.u32 	[%rd99+8], %r8442;
	st.u32 	[%rd99+4], %r8442;
	st.u32 	[%rd99], %r8442;
	st.u32 	[%rd98+12], %r8442;
	st.u32 	[%rd98+8], %r8442;
	st.u32 	[%rd98+4], %r8442;
	st.u32 	[%rd98], %r8442;
	st.u32 	[%rd97+12], %r8442;
	st.u32 	[%rd97+8], %r8442;
	st.u32 	[%rd97+4], %r8442;
	st.u32 	[%rd97], %r8442;
	st.u32 	[%rd96+12], %r8442;
	st.u32 	[%rd96+8], %r8442;
	st.u32 	[%rd96+4], %r8442;
	st.u32 	[%rd96], %r8442;
	st.u32 	[%rd95+12], %r8442;
	st.u32 	[%rd95+8], %r8442;
	mov.u64 	%rd113, 0;
	st.u32 	[%rd95+4], %rd113;
	st.u32 	[%rd95], %rd113;
	mov.u32 	%r8463, %r8442;
	mov.u32 	%r8464, %r8442;
	bra.uni 	BB1_83;

BB1_119:
	setp.eq.s32	%p80, %r1, 13;
	@%p80 bra 	BB1_120;
	bra.uni 	BB1_171;

BB1_120:
	ld.u32 	%r6907, [%rd99+8];
	ld.u32 	%r6908, [%rd99+4];
	// inline asm
	prmt.b32 %r6906, %r6907, %r6908, %r2;
	// inline asm
	st.u32 	[%rd102+12], %r6906;
	ld.u32 	%r6911, [%rd99+4];
	ld.u32 	%r6912, [%rd99];
	// inline asm
	prmt.b32 %r6910, %r6911, %r6912, %r2;
	// inline asm
	st.u32 	[%rd102+8], %r6910;
	ld.u32 	%r6915, [%rd99];
	ld.u32 	%r6916, [%rd98+12];
	// inline asm
	prmt.b32 %r6914, %r6915, %r6916, %r2;
	// inline asm
	st.u32 	[%rd102+4], %r6914;
	ld.u32 	%r6919, [%rd98+12];
	ld.u32 	%r6920, [%rd98+8];
	// inline asm
	prmt.b32 %r6918, %r6919, %r6920, %r2;
	// inline asm
	st.u32 	[%rd102], %r6918;
	ld.u32 	%r6923, [%rd98+8];
	ld.u32 	%r6924, [%rd98+4];
	// inline asm
	prmt.b32 %r6922, %r6923, %r6924, %r2;
	// inline asm
	st.u32 	[%rd101+12], %r6922;
	ld.u32 	%r6927, [%rd98+4];
	ld.u32 	%r6928, [%rd98];
	// inline asm
	prmt.b32 %r6926, %r6927, %r6928, %r2;
	// inline asm
	st.u32 	[%rd101+8], %r6926;
	ld.u32 	%r6931, [%rd98];
	ld.u32 	%r6932, [%rd97+12];
	// inline asm
	prmt.b32 %r6930, %r6931, %r6932, %r2;
	// inline asm
	st.u32 	[%rd101+4], %r6930;
	ld.u32 	%r6935, [%rd97+12];
	ld.u32 	%r6936, [%rd97+8];
	// inline asm
	prmt.b32 %r6934, %r6935, %r6936, %r2;
	// inline asm
	st.u32 	[%rd101], %r6934;
	ld.u32 	%r6939, [%rd97+8];
	ld.u32 	%r6940, [%rd97+4];
	// inline asm
	prmt.b32 %r6938, %r6939, %r6940, %r2;
	// inline asm
	st.u32 	[%rd100+12], %r6938;
	ld.u32 	%r6943, [%rd97+4];
	ld.u32 	%r6944, [%rd97];
	// inline asm
	prmt.b32 %r6942, %r6943, %r6944, %r2;
	// inline asm
	st.u32 	[%rd100+8], %r6942;
	ld.u32 	%r6947, [%rd97];
	ld.u32 	%r6948, [%rd96+12];
	// inline asm
	prmt.b32 %r6946, %r6947, %r6948, %r2;
	// inline asm
	st.u32 	[%rd100+4], %r6946;
	ld.u32 	%r6951, [%rd96+12];
	ld.u32 	%r6952, [%rd96+8];
	// inline asm
	prmt.b32 %r6950, %r6951, %r6952, %r2;
	// inline asm
	st.u32 	[%rd100], %r6950;
	ld.u32 	%r6955, [%rd96+8];
	ld.u32 	%r6956, [%rd96+4];
	// inline asm
	prmt.b32 %r6954, %r6955, %r6956, %r2;
	// inline asm
	st.u32 	[%rd99+12], %r6954;
	ld.u32 	%r6959, [%rd96+4];
	ld.u32 	%r6960, [%rd96];
	// inline asm
	prmt.b32 %r6958, %r6959, %r6960, %r2;
	// inline asm
	st.u32 	[%rd99+8], %r6958;
	ld.u32 	%r6963, [%rd96];
	ld.u32 	%r6964, [%rd95+12];
	// inline asm
	prmt.b32 %r6962, %r6963, %r6964, %r2;
	// inline asm
	st.u32 	[%rd99+4], %r6962;
	ld.u32 	%r6967, [%rd95+12];
	ld.u32 	%r6968, [%rd95+8];
	// inline asm
	prmt.b32 %r6966, %r6967, %r6968, %r2;
	// inline asm
	st.u32 	[%rd99], %r6966;
	ld.u32 	%r6971, [%rd95+8];
	ld.u32 	%r6972, [%rd95+4];
	// inline asm
	prmt.b32 %r6970, %r6971, %r6972, %r2;
	// inline asm
	st.u32 	[%rd98+12], %r6970;
	ld.u32 	%r6975, [%rd95+4];
	ld.u32 	%r6976, [%rd95];
	// inline asm
	prmt.b32 %r6974, %r6975, %r6976, %r2;
	// inline asm
	st.u32 	[%rd98+8], %r6974;
	ld.u32 	%r6979, [%rd95];
	mov.u32 	%r8476, 0;
	// inline asm
	prmt.b32 %r6978, %r6979, %r8476, %r2;
	// inline asm
	st.u32 	[%rd98+4], %r6978;
	st.u32 	[%rd98], %r8476;
	st.u32 	[%rd97+12], %r8476;
	st.u32 	[%rd97+8], %r8476;
	st.u32 	[%rd97+4], %r8476;
	st.u32 	[%rd97], %r8476;
	st.u32 	[%rd96+12], %r8476;
	st.u32 	[%rd96+8], %r8476;
	st.u32 	[%rd96+4], %r8476;
	st.u32 	[%rd96], %r8476;
	st.u32 	[%rd95+12], %r8476;
	st.u32 	[%rd95+8], %r8476;
	mov.u64 	%rd1168, 0;
	st.u32 	[%rd95+4], %rd1168;
	st.u32 	[%rd95], %rd1168;
	bra.uni 	BB1_172;

BB1_29:
	setp.eq.s32	%p32, %r1, 13;
	@%p32 bra 	BB1_30;
	bra.uni 	BB1_87;

BB1_30:
	ld.u32 	%r3129, [%rd102+12];
	mov.u32 	%r8442, 0;
	// inline asm
	prmt.b32 %r8457, %r8442, %r3129, %r2;
	// inline asm
	ld.u32 	%r3132, [%rd102+12];
	ld.u32 	%r3133, [%rd102+8];
	// inline asm
	prmt.b32 %r8458, %r3132, %r3133, %r2;
	// inline asm
	ld.u32 	%r3136, [%rd102+8];
	ld.u32 	%r3137, [%rd102+4];
	// inline asm
	prmt.b32 %r8451, %r3136, %r3137, %r2;
	// inline asm
	ld.u32 	%r3140, [%rd102+4];
	ld.u32 	%r3141, [%rd102];
	// inline asm
	prmt.b32 %r8452, %r3140, %r3141, %r2;
	// inline asm
	ld.u32 	%r3144, [%rd102];
	ld.u32 	%r3145, [%rd101+12];
	// inline asm
	prmt.b32 %r8453, %r3144, %r3145, %r2;
	// inline asm
	ld.u32 	%r3148, [%rd101+12];
	ld.u32 	%r3149, [%rd101+8];
	// inline asm
	prmt.b32 %r8454, %r3148, %r3149, %r2;
	// inline asm
	ld.u32 	%r3152, [%rd101+8];
	ld.u32 	%r3153, [%rd101+4];
	// inline asm
	prmt.b32 %r8447, %r3152, %r3153, %r2;
	// inline asm
	ld.u32 	%r3156, [%rd101+4];
	ld.u32 	%r3157, [%rd101];
	// inline asm
	prmt.b32 %r8448, %r3156, %r3157, %r2;
	// inline asm
	ld.u32 	%r3160, [%rd101];
	ld.u32 	%r3161, [%rd100+12];
	// inline asm
	prmt.b32 %r8449, %r3160, %r3161, %r2;
	// inline asm
	ld.u32 	%r3164, [%rd100+12];
	ld.u32 	%r3165, [%rd100+8];
	// inline asm
	prmt.b32 %r8450, %r3164, %r3165, %r2;
	// inline asm
	ld.u32 	%r3168, [%rd100+8];
	ld.u32 	%r3169, [%rd100+4];
	// inline asm
	prmt.b32 %r8443, %r3168, %r3169, %r2;
	// inline asm
	ld.u32 	%r3172, [%rd100+4];
	ld.u32 	%r3173, [%rd100];
	// inline asm
	prmt.b32 %r8444, %r3172, %r3173, %r2;
	// inline asm
	ld.u32 	%r3176, [%rd100];
	ld.u32 	%r3177, [%rd99+12];
	// inline asm
	prmt.b32 %r8445, %r3176, %r3177, %r2;
	// inline asm
	ld.u32 	%r3180, [%rd99+12];
	ld.u32 	%r3181, [%rd99+8];
	// inline asm
	prmt.b32 %r8446, %r3180, %r3181, %r2;
	// inline asm
	ld.u32 	%r3184, [%rd99+8];
	ld.u32 	%r3185, [%rd99+4];
	// inline asm
	prmt.b32 %r3183, %r3184, %r3185, %r2;
	// inline asm
	st.u32 	[%rd102+12], %r3183;
	ld.u32 	%r3188, [%rd99+4];
	ld.u32 	%r3189, [%rd99];
	// inline asm
	prmt.b32 %r3187, %r3188, %r3189, %r2;
	// inline asm
	st.u32 	[%rd102+8], %r3187;
	ld.u32 	%r3192, [%rd99];
	ld.u32 	%r3193, [%rd98+12];
	// inline asm
	prmt.b32 %r3191, %r3192, %r3193, %r2;
	// inline asm
	st.u32 	[%rd102+4], %r3191;
	ld.u32 	%r3196, [%rd98+12];
	ld.u32 	%r3197, [%rd98+8];
	// inline asm
	prmt.b32 %r3195, %r3196, %r3197, %r2;
	// inline asm
	st.u32 	[%rd102], %r3195;
	ld.u32 	%r3200, [%rd98+8];
	ld.u32 	%r3201, [%rd98+4];
	// inline asm
	prmt.b32 %r3199, %r3200, %r3201, %r2;
	// inline asm
	st.u32 	[%rd101+12], %r3199;
	ld.u32 	%r3204, [%rd98+4];
	ld.u32 	%r3205, [%rd98];
	// inline asm
	prmt.b32 %r3203, %r3204, %r3205, %r2;
	// inline asm
	st.u32 	[%rd101+8], %r3203;
	ld.u32 	%r3208, [%rd98];
	ld.u32 	%r3209, [%rd97+12];
	// inline asm
	prmt.b32 %r3207, %r3208, %r3209, %r2;
	// inline asm
	st.u32 	[%rd101+4], %r3207;
	ld.u32 	%r3212, [%rd97+12];
	ld.u32 	%r3213, [%rd97+8];
	// inline asm
	prmt.b32 %r3211, %r3212, %r3213, %r2;
	// inline asm
	st.u32 	[%rd101], %r3211;
	ld.u32 	%r3216, [%rd97+8];
	ld.u32 	%r3217, [%rd97+4];
	// inline asm
	prmt.b32 %r3215, %r3216, %r3217, %r2;
	// inline asm
	st.u32 	[%rd100+12], %r3215;
	ld.u32 	%r3220, [%rd97+4];
	ld.u32 	%r3221, [%rd97];
	// inline asm
	prmt.b32 %r3219, %r3220, %r3221, %r2;
	// inline asm
	st.u32 	[%rd100+8], %r3219;
	ld.u32 	%r3224, [%rd97];
	ld.u32 	%r3225, [%rd96+12];
	// inline asm
	prmt.b32 %r3223, %r3224, %r3225, %r2;
	// inline asm
	st.u32 	[%rd100+4], %r3223;
	ld.u32 	%r3228, [%rd96+12];
	ld.u32 	%r3229, [%rd96+8];
	// inline asm
	prmt.b32 %r3227, %r3228, %r3229, %r2;
	// inline asm
	st.u32 	[%rd100], %r3227;
	ld.u32 	%r3232, [%rd96+8];
	ld.u32 	%r3233, [%rd96+4];
	// inline asm
	prmt.b32 %r3231, %r3232, %r3233, %r2;
	// inline asm
	st.u32 	[%rd99+12], %r3231;
	ld.u32 	%r3236, [%rd96+4];
	ld.u32 	%r3237, [%rd96];
	// inline asm
	prmt.b32 %r3235, %r3236, %r3237, %r2;
	// inline asm
	st.u32 	[%rd99+8], %r3235;
	ld.u32 	%r3240, [%rd96];
	ld.u32 	%r3241, [%rd95+12];
	// inline asm
	prmt.b32 %r3239, %r3240, %r3241, %r2;
	// inline asm
	st.u32 	[%rd99+4], %r3239;
	ld.u32 	%r3244, [%rd95+12];
	ld.u32 	%r3245, [%rd95+8];
	// inline asm
	prmt.b32 %r3243, %r3244, %r3245, %r2;
	// inline asm
	st.u32 	[%rd99], %r3243;
	ld.u32 	%r3248, [%rd95+8];
	ld.u32 	%r3249, [%rd95+4];
	// inline asm
	prmt.b32 %r3247, %r3248, %r3249, %r2;
	// inline asm
	st.u32 	[%rd98+12], %r3247;
	ld.u32 	%r3252, [%rd95+4];
	ld.u32 	%r3253, [%rd95];
	// inline asm
	prmt.b32 %r3251, %r3252, %r3253, %r2;
	// inline asm
	st.u32 	[%rd98+8], %r3251;
	ld.u32 	%r3256, [%rd95];
	// inline asm
	prmt.b32 %r3255, %r3256, %r8442, %r2;
	// inline asm
	st.u32 	[%rd98+4], %r3255;
	st.u32 	[%rd98], %r8442;
	st.u32 	[%rd97+12], %r8442;
	st.u32 	[%rd97+8], %r8442;
	st.u32 	[%rd97+4], %r8442;
	st.u32 	[%rd97], %r8442;
	st.u32 	[%rd96+12], %r8442;
	st.u32 	[%rd96+8], %r8442;
	st.u32 	[%rd96+4], %r8442;
	st.u32 	[%rd96], %r8442;
	st.u32 	[%rd95+12], %r8442;
	st.u32 	[%rd95+8], %r8442;
	mov.u64 	%rd121, 0;
	st.u32 	[%rd95+4], %rd121;
	st.u32 	[%rd95], %rd121;
	mov.u32 	%r8455, %r8442;
	mov.u32 	%r8456, %r8442;
	bra.uni 	BB1_81;

BB1_150:
	setp.eq.s32	%p57, %r1, 29;
	@%p57 bra 	BB1_151;
	bra.uni 	BB1_171;

BB1_151:
	ld.u32 	%r6219, [%rd95+8];
	ld.u32 	%r6220, [%rd95+4];
	// inline asm
	prmt.b32 %r6218, %r6219, %r6220, %r2;
	// inline asm
	st.u32 	[%rd102+12], %r6218;
	ld.u32 	%r6223, [%rd95+4];
	ld.u32 	%r6224, [%rd95];
	// inline asm
	prmt.b32 %r6222, %r6223, %r6224, %r2;
	// inline asm
	st.u32 	[%rd102+8], %r6222;
	ld.u32 	%r6227, [%rd95];
	mov.u32 	%r8476, 0;
	// inline asm
	prmt.b32 %r6226, %r6227, %r8476, %r2;
	// inline asm
	st.u32 	[%rd102+4], %r6226;
	st.u32 	[%rd102], %r8476;
	st.u32 	[%rd101+12], %r8476;
	st.u32 	[%rd101+8], %r8476;
	st.u32 	[%rd101+4], %r8476;
	st.u32 	[%rd101], %r8476;
	st.u32 	[%rd100+12], %r8476;
	st.u32 	[%rd100+8], %r8476;
	st.u32 	[%rd100+4], %r8476;
	st.u32 	[%rd100], %r8476;
	st.u32 	[%rd99+12], %r8476;
	st.u32 	[%rd99+8], %r8476;
	st.u32 	[%rd99+4], %r8476;
	st.u32 	[%rd99], %r8476;
	st.u32 	[%rd98+12], %r8476;
	st.u32 	[%rd98+8], %r8476;
	st.u32 	[%rd98+4], %r8476;
	st.u32 	[%rd98], %r8476;
	st.u32 	[%rd97+12], %r8476;
	st.u32 	[%rd97+8], %r8476;
	st.u32 	[%rd97+4], %r8476;
	st.u32 	[%rd97], %r8476;
	st.u32 	[%rd96+12], %r8476;
	st.u32 	[%rd96+8], %r8476;
	st.u32 	[%rd96+4], %r8476;
	st.u32 	[%rd96], %r8476;
	st.u32 	[%rd95+12], %r8476;
	st.u32 	[%rd95+8], %r8476;
	mov.u64 	%rd1152, 0;
	st.u32 	[%rd95+4], %rd1152;
	st.u32 	[%rd95], %rd1152;
	bra.uni 	BB1_172;

BB1_60:
	setp.eq.s32	%p9, %r1, 29;
	@%p9 bra 	BB1_61;
	bra.uni 	BB1_87;

BB1_61:
	ld.u32 	%r849, [%rd102+12];
	mov.u32 	%r8442, 0;
	// inline asm
	prmt.b32 %r8473, %r8442, %r849, %r2;
	// inline asm
	ld.u32 	%r852, [%rd102+12];
	ld.u32 	%r853, [%rd102+8];
	// inline asm
	prmt.b32 %r8474, %r852, %r853, %r2;
	// inline asm
	ld.u32 	%r856, [%rd102+8];
	ld.u32 	%r857, [%rd102+4];
	// inline asm
	prmt.b32 %r8467, %r856, %r857, %r2;
	// inline asm
	ld.u32 	%r860, [%rd102+4];
	ld.u32 	%r861, [%rd102];
	// inline asm
	prmt.b32 %r8468, %r860, %r861, %r2;
	// inline asm
	ld.u32 	%r864, [%rd102];
	ld.u32 	%r865, [%rd101+12];
	// inline asm
	prmt.b32 %r8469, %r864, %r865, %r2;
	// inline asm
	ld.u32 	%r868, [%rd101+12];
	ld.u32 	%r869, [%rd101+8];
	// inline asm
	prmt.b32 %r8470, %r868, %r869, %r2;
	// inline asm
	ld.u32 	%r872, [%rd101+8];
	ld.u32 	%r873, [%rd101+4];
	// inline asm
	prmt.b32 %r8463, %r872, %r873, %r2;
	// inline asm
	ld.u32 	%r876, [%rd101+4];
	ld.u32 	%r877, [%rd101];
	// inline asm
	prmt.b32 %r8464, %r876, %r877, %r2;
	// inline asm
	ld.u32 	%r880, [%rd101];
	ld.u32 	%r881, [%rd100+12];
	// inline asm
	prmt.b32 %r8465, %r880, %r881, %r2;
	// inline asm
	ld.u32 	%r884, [%rd100+12];
	ld.u32 	%r885, [%rd100+8];
	// inline asm
	prmt.b32 %r8466, %r884, %r885, %r2;
	// inline asm
	ld.u32 	%r888, [%rd100+8];
	ld.u32 	%r889, [%rd100+4];
	// inline asm
	prmt.b32 %r8459, %r888, %r889, %r2;
	// inline asm
	ld.u32 	%r892, [%rd100+4];
	ld.u32 	%r893, [%rd100];
	// inline asm
	prmt.b32 %r8460, %r892, %r893, %r2;
	// inline asm
	ld.u32 	%r896, [%rd100];
	ld.u32 	%r897, [%rd99+12];
	// inline asm
	prmt.b32 %r8461, %r896, %r897, %r2;
	// inline asm
	ld.u32 	%r900, [%rd99+12];
	ld.u32 	%r901, [%rd99+8];
	// inline asm
	prmt.b32 %r8462, %r900, %r901, %r2;
	// inline asm
	ld.u32 	%r904, [%rd99+8];
	ld.u32 	%r905, [%rd99+4];
	// inline asm
	prmt.b32 %r8455, %r904, %r905, %r2;
	// inline asm
	ld.u32 	%r908, [%rd99+4];
	ld.u32 	%r909, [%rd99];
	// inline asm
	prmt.b32 %r8456, %r908, %r909, %r2;
	// inline asm
	ld.u32 	%r912, [%rd99];
	ld.u32 	%r913, [%rd98+12];
	// inline asm
	prmt.b32 %r8457, %r912, %r913, %r2;
	// inline asm
	ld.u32 	%r916, [%rd98+12];
	ld.u32 	%r917, [%rd98+8];
	// inline asm
	prmt.b32 %r8458, %r916, %r917, %r2;
	// inline asm
	ld.u32 	%r920, [%rd98+8];
	ld.u32 	%r921, [%rd98+4];
	// inline asm
	prmt.b32 %r8451, %r920, %r921, %r2;
	// inline asm
	ld.u32 	%r924, [%rd98+4];
	ld.u32 	%r925, [%rd98];
	// inline asm
	prmt.b32 %r8452, %r924, %r925, %r2;
	// inline asm
	ld.u32 	%r928, [%rd98];
	ld.u32 	%r929, [%rd97+12];
	// inline asm
	prmt.b32 %r8453, %r928, %r929, %r2;
	// inline asm
	ld.u32 	%r932, [%rd97+12];
	ld.u32 	%r933, [%rd97+8];
	// inline asm
	prmt.b32 %r8454, %r932, %r933, %r2;
	// inline asm
	ld.u32 	%r936, [%rd97+8];
	ld.u32 	%r937, [%rd97+4];
	// inline asm
	prmt.b32 %r8447, %r936, %r937, %r2;
	// inline asm
	ld.u32 	%r940, [%rd97+4];
	ld.u32 	%r941, [%rd97];
	// inline asm
	prmt.b32 %r8448, %r940, %r941, %r2;
	// inline asm
	ld.u32 	%r944, [%rd97];
	ld.u32 	%r945, [%rd96+12];
	// inline asm
	prmt.b32 %r8449, %r944, %r945, %r2;
	// inline asm
	ld.u32 	%r948, [%rd96+12];
	ld.u32 	%r949, [%rd96+8];
	// inline asm
	prmt.b32 %r8450, %r948, %r949, %r2;
	// inline asm
	ld.u32 	%r952, [%rd96+8];
	ld.u32 	%r953, [%rd96+4];
	// inline asm
	prmt.b32 %r8443, %r952, %r953, %r2;
	// inline asm
	ld.u32 	%r956, [%rd96+4];
	ld.u32 	%r957, [%rd96];
	// inline asm
	prmt.b32 %r8444, %r956, %r957, %r2;
	// inline asm
	ld.u32 	%r960, [%rd96];
	ld.u32 	%r961, [%rd95+12];
	// inline asm
	prmt.b32 %r8445, %r960, %r961, %r2;
	// inline asm
	ld.u32 	%r964, [%rd95+12];
	ld.u32 	%r965, [%rd95+8];
	// inline asm
	prmt.b32 %r8446, %r964, %r965, %r2;
	// inline asm
	ld.u32 	%r968, [%rd95+8];
	ld.u32 	%r969, [%rd95+4];
	// inline asm
	prmt.b32 %r967, %r968, %r969, %r2;
	// inline asm
	st.u32 	[%rd102+12], %r967;
	ld.u32 	%r972, [%rd95+4];
	ld.u32 	%r973, [%rd95];
	// inline asm
	prmt.b32 %r971, %r972, %r973, %r2;
	// inline asm
	st.u32 	[%rd102+8], %r971;
	ld.u32 	%r976, [%rd95];
	// inline asm
	prmt.b32 %r975, %r976, %r8442, %r2;
	// inline asm
	st.u32 	[%rd102+4], %r975;
	st.u32 	[%rd102], %r8442;
	st.u32 	[%rd101+12], %r8442;
	st.u32 	[%rd101+8], %r8442;
	st.u32 	[%rd101+4], %r8442;
	st.u32 	[%rd101], %r8442;
	st.u32 	[%rd100+12], %r8442;
	st.u32 	[%rd100+8], %r8442;
	st.u32 	[%rd100+4], %r8442;
	st.u32 	[%rd100], %r8442;
	st.u32 	[%rd99+12], %r8442;
	st.u32 	[%rd99+8], %r8442;
	st.u32 	[%rd99+4], %r8442;
	st.u32 	[%rd99], %r8442;
	st.u32 	[%rd98+12], %r8442;
	st.u32 	[%rd98+8], %r8442;
	st.u32 	[%rd98+4], %r8442;
	st.u32 	[%rd98], %r8442;
	st.u32 	[%rd97+12], %r8442;
	st.u32 	[%rd97+8], %r8442;
	st.u32 	[%rd97+4], %r8442;
	st.u32 	[%rd97], %r8442;
	st.u32 	[%rd96+12], %r8442;
	st.u32 	[%rd96+8], %r8442;
	st.u32 	[%rd96+4], %r8442;
	st.u32 	[%rd96], %r8442;
	st.u32 	[%rd95+12], %r8442;
	st.u32 	[%rd95+8], %r8442;
	mov.u64 	%rd105, 0;
	st.u32 	[%rd95+4], %rd105;
	st.u32 	[%rd95], %rd105;
	mov.u32 	%r8471, %r8442;
	mov.u32 	%r8472, %r8442;
	bra.uni 	BB1_89;

BB1_100:
	setp.eq.s32	%p94, %r1, 3;
	@%p94 bra 	BB1_101;
	bra.uni 	BB1_171;

BB1_101:
	ld.u32 	%r7857, [%rd102];
	ld.u32 	%r7858, [%rd101+12];
	// inline asm
	prmt.b32 %r7856, %r7857, %r7858, %r2;
	// inline asm
	st.u32 	[%rd102+12], %r7856;
	ld.u32 	%r7861, [%rd101+12];
	ld.u32 	%r7862, [%rd101+8];
	// inline asm
	prmt.b32 %r7860, %r7861, %r7862, %r2;
	// inline asm
	st.u32 	[%rd102+8], %r7860;
	ld.u32 	%r7865, [%rd101+8];
	ld.u32 	%r7866, [%rd101+4];
	// inline asm
	prmt.b32 %r7864, %r7865, %r7866, %r2;
	// inline asm
	st.u32 	[%rd102+4], %r7864;
	ld.u32 	%r7869, [%rd101+4];
	ld.u32 	%r7870, [%rd101];
	// inline asm
	prmt.b32 %r7868, %r7869, %r7870, %r2;
	// inline asm
	st.u32 	[%rd102], %r7868;
	ld.u32 	%r7873, [%rd101];
	ld.u32 	%r7874, [%rd100+12];
	// inline asm
	prmt.b32 %r7872, %r7873, %r7874, %r2;
	// inline asm
	st.u32 	[%rd101+12], %r7872;
	ld.u32 	%r7877, [%rd100+12];
	ld.u32 	%r7878, [%rd100+8];
	// inline asm
	prmt.b32 %r7876, %r7877, %r7878, %r2;
	// inline asm
	st.u32 	[%rd101+8], %r7876;
	ld.u32 	%r7881, [%rd100+8];
	ld.u32 	%r7882, [%rd100+4];
	// inline asm
	prmt.b32 %r7880, %r7881, %r7882, %r2;
	// inline asm
	st.u32 	[%rd101+4], %r7880;
	ld.u32 	%r7885, [%rd100+4];
	ld.u32 	%r7886, [%rd100];
	// inline asm
	prmt.b32 %r7884, %r7885, %r7886, %r2;
	// inline asm
	st.u32 	[%rd101], %r7884;
	ld.u32 	%r7889, [%rd100];
	ld.u32 	%r7890, [%rd99+12];
	// inline asm
	prmt.b32 %r7888, %r7889, %r7890, %r2;
	// inline asm
	st.u32 	[%rd100+12], %r7888;
	ld.u32 	%r7893, [%rd99+12];
	ld.u32 	%r7894, [%rd99+8];
	// inline asm
	prmt.b32 %r7892, %r7893, %r7894, %r2;
	// inline asm
	st.u32 	[%rd100+8], %r7892;
	ld.u32 	%r7897, [%rd99+8];
	ld.u32 	%r7898, [%rd99+4];
	// inline asm
	prmt.b32 %r7896, %r7897, %r7898, %r2;
	// inline asm
	st.u32 	[%rd100+4], %r7896;
	ld.u32 	%r7901, [%rd99+4];
	ld.u32 	%r7902, [%rd99];
	// inline asm
	prmt.b32 %r7900, %r7901, %r7902, %r2;
	// inline asm
	st.u32 	[%rd100], %r7900;
	ld.u32 	%r7905, [%rd99];
	ld.u32 	%r7906, [%rd98+12];
	// inline asm
	prmt.b32 %r7904, %r7905, %r7906, %r2;
	// inline asm
	st.u32 	[%rd99+12], %r7904;
	ld.u32 	%r7909, [%rd98+12];
	ld.u32 	%r7910, [%rd98+8];
	// inline asm
	prmt.b32 %r7908, %r7909, %r7910, %r2;
	// inline asm
	st.u32 	[%rd99+8], %r7908;
	ld.u32 	%r7913, [%rd98+8];
	ld.u32 	%r7914, [%rd98+4];
	// inline asm
	prmt.b32 %r7912, %r7913, %r7914, %r2;
	// inline asm
	st.u32 	[%rd99+4], %r7912;
	ld.u32 	%r7917, [%rd98+4];
	ld.u32 	%r7918, [%rd98];
	// inline asm
	prmt.b32 %r7916, %r7917, %r7918, %r2;
	// inline asm
	st.u32 	[%rd99], %r7916;
	ld.u32 	%r7921, [%rd98];
	ld.u32 	%r7922, [%rd97+12];
	// inline asm
	prmt.b32 %r7920, %r7921, %r7922, %r2;
	// inline asm
	st.u32 	[%rd98+12], %r7920;
	ld.u32 	%r7925, [%rd97+12];
	ld.u32 	%r7926, [%rd97+8];
	// inline asm
	prmt.b32 %r7924, %r7925, %r7926, %r2;
	// inline asm
	st.u32 	[%rd98+8], %r7924;
	ld.u32 	%r7929, [%rd97+8];
	ld.u32 	%r7930, [%rd97+4];
	// inline asm
	prmt.b32 %r7928, %r7929, %r7930, %r2;
	// inline asm
	st.u32 	[%rd98+4], %r7928;
	ld.u32 	%r7933, [%rd97+4];
	ld.u32 	%r7934, [%rd97];
	// inline asm
	prmt.b32 %r7932, %r7933, %r7934, %r2;
	// inline asm
	st.u32 	[%rd98], %r7932;
	ld.u32 	%r7937, [%rd97];
	ld.u32 	%r7938, [%rd96+12];
	// inline asm
	prmt.b32 %r7936, %r7937, %r7938, %r2;
	// inline asm
	st.u32 	[%rd97+12], %r7936;
	ld.u32 	%r7941, [%rd96+12];
	ld.u32 	%r7942, [%rd96+8];
	// inline asm
	prmt.b32 %r7940, %r7941, %r7942, %r2;
	// inline asm
	st.u32 	[%rd97+8], %r7940;
	ld.u32 	%r7945, [%rd96+8];
	ld.u32 	%r7946, [%rd96+4];
	// inline asm
	prmt.b32 %r7944, %r7945, %r7946, %r2;
	// inline asm
	st.u32 	[%rd97+4], %r7944;
	ld.u32 	%r7949, [%rd96+4];
	ld.u32 	%r7950, [%rd96];
	// inline asm
	prmt.b32 %r7948, %r7949, %r7950, %r2;
	// inline asm
	st.u32 	[%rd97], %r7948;
	ld.u32 	%r7953, [%rd96];
	ld.u32 	%r7954, [%rd95+12];
	// inline asm
	prmt.b32 %r7952, %r7953, %r7954, %r2;
	// inline asm
	st.u32 	[%rd96+12], %r7952;
	ld.u32 	%r7957, [%rd95+12];
	ld.u32 	%r7958, [%rd95+8];
	// inline asm
	prmt.b32 %r7956, %r7957, %r7958, %r2;
	// inline asm
	st.u32 	[%rd96+8], %r7956;
	ld.u32 	%r7961, [%rd95+8];
	ld.u32 	%r7962, [%rd95+4];
	// inline asm
	prmt.b32 %r7960, %r7961, %r7962, %r2;
	// inline asm
	st.u32 	[%rd96+4], %r7960;
	ld.u32 	%r7965, [%rd95+4];
	ld.u32 	%r7966, [%rd95];
	// inline asm
	prmt.b32 %r7964, %r7965, %r7966, %r2;
	// inline asm
	st.u32 	[%rd96], %r7964;
	ld.u32 	%r7969, [%rd95];
	mov.u32 	%r8476, 0;
	// inline asm
	prmt.b32 %r7968, %r7969, %r8476, %r2;
	// inline asm
	st.u32 	[%rd95+12], %r7968;
	st.u32 	[%rd95+8], %r8476;
	mov.u64 	%rd1178, 0;
	st.u32 	[%rd95+4], %rd1178;
	st.u32 	[%rd95], %rd1178;
	bra.uni 	BB1_172;

BB1_9:
	setp.eq.s32	%p46, %r1, 3;
	@%p46 bra 	BB1_10;
	bra.uni 	BB1_87;

BB1_10:
	ld.u32 	%r4684, [%rd102+12];
	mov.u32 	%r8442, 0;
	// inline asm
	prmt.b32 %r8443, %r8442, %r4684, %r2;
	// inline asm
	ld.u32 	%r4687, [%rd102+12];
	ld.u32 	%r4688, [%rd102+8];
	// inline asm
	prmt.b32 %r8444, %r4687, %r4688, %r2;
	// inline asm
	ld.u32 	%r4691, [%rd102+8];
	ld.u32 	%r4692, [%rd102+4];
	// inline asm
	prmt.b32 %r8445, %r4691, %r4692, %r2;
	// inline asm
	ld.u32 	%r4695, [%rd102+4];
	ld.u32 	%r4696, [%rd102];
	// inline asm
	prmt.b32 %r8446, %r4695, %r4696, %r2;
	// inline asm
	ld.u32 	%r4699, [%rd102];
	ld.u32 	%r4700, [%rd101+12];
	// inline asm
	prmt.b32 %r4698, %r4699, %r4700, %r2;
	// inline asm
	st.u32 	[%rd102+12], %r4698;
	ld.u32 	%r4703, [%rd101+12];
	ld.u32 	%r4704, [%rd101+8];
	// inline asm
	prmt.b32 %r4702, %r4703, %r4704, %r2;
	// inline asm
	st.u32 	[%rd102+8], %r4702;
	ld.u32 	%r4707, [%rd101+8];
	ld.u32 	%r4708, [%rd101+4];
	// inline asm
	prmt.b32 %r4706, %r4707, %r4708, %r2;
	// inline asm
	st.u32 	[%rd102+4], %r4706;
	ld.u32 	%r4711, [%rd101+4];
	ld.u32 	%r4712, [%rd101];
	// inline asm
	prmt.b32 %r4710, %r4711, %r4712, %r2;
	// inline asm
	st.u32 	[%rd102], %r4710;
	ld.u32 	%r4715, [%rd101];
	ld.u32 	%r4716, [%rd100+12];
	// inline asm
	prmt.b32 %r4714, %r4715, %r4716, %r2;
	// inline asm
	st.u32 	[%rd101+12], %r4714;
	ld.u32 	%r4719, [%rd100+12];
	ld.u32 	%r4720, [%rd100+8];
	// inline asm
	prmt.b32 %r4718, %r4719, %r4720, %r2;
	// inline asm
	st.u32 	[%rd101+8], %r4718;
	ld.u32 	%r4723, [%rd100+8];
	ld.u32 	%r4724, [%rd100+4];
	// inline asm
	prmt.b32 %r4722, %r4723, %r4724, %r2;
	// inline asm
	st.u32 	[%rd101+4], %r4722;
	ld.u32 	%r4727, [%rd100+4];
	ld.u32 	%r4728, [%rd100];
	// inline asm
	prmt.b32 %r4726, %r4727, %r4728, %r2;
	// inline asm
	st.u32 	[%rd101], %r4726;
	ld.u32 	%r4731, [%rd100];
	ld.u32 	%r4732, [%rd99+12];
	// inline asm
	prmt.b32 %r4730, %r4731, %r4732, %r2;
	// inline asm
	st.u32 	[%rd100+12], %r4730;
	ld.u32 	%r4735, [%rd99+12];
	ld.u32 	%r4736, [%rd99+8];
	// inline asm
	prmt.b32 %r4734, %r4735, %r4736, %r2;
	// inline asm
	st.u32 	[%rd100+8], %r4734;
	ld.u32 	%r4739, [%rd99+8];
	ld.u32 	%r4740, [%rd99+4];
	// inline asm
	prmt.b32 %r4738, %r4739, %r4740, %r2;
	// inline asm
	st.u32 	[%rd100+4], %r4738;
	ld.u32 	%r4743, [%rd99+4];
	ld.u32 	%r4744, [%rd99];
	// inline asm
	prmt.b32 %r4742, %r4743, %r4744, %r2;
	// inline asm
	st.u32 	[%rd100], %r4742;
	ld.u32 	%r4747, [%rd99];
	ld.u32 	%r4748, [%rd98+12];
	// inline asm
	prmt.b32 %r4746, %r4747, %r4748, %r2;
	// inline asm
	st.u32 	[%rd99+12], %r4746;
	ld.u32 	%r4751, [%rd98+12];
	ld.u32 	%r4752, [%rd98+8];
	// inline asm
	prmt.b32 %r4750, %r4751, %r4752, %r2;
	// inline asm
	st.u32 	[%rd99+8], %r4750;
	ld.u32 	%r4755, [%rd98+8];
	ld.u32 	%r4756, [%rd98+4];
	// inline asm
	prmt.b32 %r4754, %r4755, %r4756, %r2;
	// inline asm
	st.u32 	[%rd99+4], %r4754;
	ld.u32 	%r4759, [%rd98+4];
	ld.u32 	%r4760, [%rd98];
	// inline asm
	prmt.b32 %r4758, %r4759, %r4760, %r2;
	// inline asm
	st.u32 	[%rd99], %r4758;
	ld.u32 	%r4763, [%rd98];
	ld.u32 	%r4764, [%rd97+12];
	// inline asm
	prmt.b32 %r4762, %r4763, %r4764, %r2;
	// inline asm
	st.u32 	[%rd98+12], %r4762;
	ld.u32 	%r4767, [%rd97+12];
	ld.u32 	%r4768, [%rd97+8];
	// inline asm
	prmt.b32 %r4766, %r4767, %r4768, %r2;
	// inline asm
	st.u32 	[%rd98+8], %r4766;
	ld.u32 	%r4771, [%rd97+8];
	ld.u32 	%r4772, [%rd97+4];
	// inline asm
	prmt.b32 %r4770, %r4771, %r4772, %r2;
	// inline asm
	st.u32 	[%rd98+4], %r4770;
	ld.u32 	%r4775, [%rd97+4];
	ld.u32 	%r4776, [%rd97];
	// inline asm
	prmt.b32 %r4774, %r4775, %r4776, %r2;
	// inline asm
	st.u32 	[%rd98], %r4774;
	ld.u32 	%r4779, [%rd97];
	ld.u32 	%r4780, [%rd96+12];
	// inline asm
	prmt.b32 %r4778, %r4779, %r4780, %r2;
	// inline asm
	st.u32 	[%rd97+12], %r4778;
	ld.u32 	%r4783, [%rd96+12];
	ld.u32 	%r4784, [%rd96+8];
	// inline asm
	prmt.b32 %r4782, %r4783, %r4784, %r2;
	// inline asm
	st.u32 	[%rd97+8], %r4782;
	ld.u32 	%r4787, [%rd96+8];
	ld.u32 	%r4788, [%rd96+4];
	// inline asm
	prmt.b32 %r4786, %r4787, %r4788, %r2;
	// inline asm
	st.u32 	[%rd97+4], %r4786;
	ld.u32 	%r4791, [%rd96+4];
	ld.u32 	%r4792, [%rd96];
	// inline asm
	prmt.b32 %r4790, %r4791, %r4792, %r2;
	// inline asm
	st.u32 	[%rd97], %r4790;
	ld.u32 	%r4795, [%rd96];
	ld.u32 	%r4796, [%rd95+12];
	// inline asm
	prmt.b32 %r4794, %r4795, %r4796, %r2;
	// inline asm
	st.u32 	[%rd96+12], %r4794;
	ld.u32 	%r4799, [%rd95+12];
	ld.u32 	%r4800, [%rd95+8];
	// inline asm
	prmt.b32 %r4798, %r4799, %r4800, %r2;
	// inline asm
	st.u32 	[%rd96+8], %r4798;
	ld.u32 	%r4803, [%rd95+8];
	ld.u32 	%r4804, [%rd95+4];
	// inline asm
	prmt.b32 %r4802, %r4803, %r4804, %r2;
	// inline asm
	st.u32 	[%rd96+4], %r4802;
	ld.u32 	%r4807, [%rd95+4];
	ld.u32 	%r4808, [%rd95];
	// inline asm
	prmt.b32 %r4806, %r4807, %r4808, %r2;
	// inline asm
	st.u32 	[%rd96], %r4806;
	ld.u32 	%r4811, [%rd95];
	// inline asm
	prmt.b32 %r4810, %r4811, %r8442, %r2;
	// inline asm
	st.u32 	[%rd95+12], %r4810;
	st.u32 	[%rd95+8], %r8442;
	mov.u64 	%rd131, 0;
	st.u32 	[%rd95+4], %rd131;
	st.u32 	[%rd95], %rd131;

BB1_11:
	mov.u32 	%r8447, %r8442;
	mov.u32 	%r8448, %r8442;
	mov.u32 	%r8449, %r8442;
	mov.u32 	%r8450, %r8442;
	bra.uni 	BB1_79;

BB1_131:
	setp.eq.s32	%p71, %r1, 19;
	@%p71 bra 	BB1_132;
	bra.uni 	BB1_171;

BB1_132:
	ld.u32 	%r6529, [%rd98];
	ld.u32 	%r6530, [%rd97+12];
	// inline asm
	prmt.b32 %r6528, %r6529, %r6530, %r2;
	// inline asm
	st.u32 	[%rd102+12], %r6528;
	ld.u32 	%r6533, [%rd97+12];
	ld.u32 	%r6534, [%rd97+8];
	// inline asm
	prmt.b32 %r6532, %r6533, %r6534, %r2;
	// inline asm
	st.u32 	[%rd102+8], %r6532;
	ld.u32 	%r6537, [%rd97+8];
	ld.u32 	%r6538, [%rd97+4];
	// inline asm
	prmt.b32 %r6536, %r6537, %r6538, %r2;
	// inline asm
	st.u32 	[%rd102+4], %r6536;
	ld.u32 	%r6541, [%rd97+4];
	ld.u32 	%r6542, [%rd97];
	// inline asm
	prmt.b32 %r6540, %r6541, %r6542, %r2;
	// inline asm
	st.u32 	[%rd102], %r6540;
	ld.u32 	%r6545, [%rd97];
	ld.u32 	%r6546, [%rd96+12];
	// inline asm
	prmt.b32 %r6544, %r6545, %r6546, %r2;
	// inline asm
	st.u32 	[%rd101+12], %r6544;
	ld.u32 	%r6549, [%rd96+12];
	ld.u32 	%r6550, [%rd96+8];
	// inline asm
	prmt.b32 %r6548, %r6549, %r6550, %r2;
	// inline asm
	st.u32 	[%rd101+8], %r6548;
	ld.u32 	%r6553, [%rd96+8];
	ld.u32 	%r6554, [%rd96+4];
	// inline asm
	prmt.b32 %r6552, %r6553, %r6554, %r2;
	// inline asm
	st.u32 	[%rd101+4], %r6552;
	ld.u32 	%r6557, [%rd96+4];
	ld.u32 	%r6558, [%rd96];
	// inline asm
	prmt.b32 %r6556, %r6557, %r6558, %r2;
	// inline asm
	st.u32 	[%rd101], %r6556;
	ld.u32 	%r6561, [%rd96];
	ld.u32 	%r6562, [%rd95+12];
	// inline asm
	prmt.b32 %r6560, %r6561, %r6562, %r2;
	// inline asm
	st.u32 	[%rd100+12], %r6560;
	ld.u32 	%r6565, [%rd95+12];
	ld.u32 	%r6566, [%rd95+8];
	// inline asm
	prmt.b32 %r6564, %r6565, %r6566, %r2;
	// inline asm
	st.u32 	[%rd100+8], %r6564;
	ld.u32 	%r6569, [%rd95+8];
	ld.u32 	%r6570, [%rd95+4];
	// inline asm
	prmt.b32 %r6568, %r6569, %r6570, %r2;
	// inline asm
	st.u32 	[%rd100+4], %r6568;
	ld.u32 	%r6573, [%rd95+4];
	ld.u32 	%r6574, [%rd95];
	// inline asm
	prmt.b32 %r6572, %r6573, %r6574, %r2;
	// inline asm
	st.u32 	[%rd100], %r6572;
	ld.u32 	%r6577, [%rd95];
	mov.u32 	%r8476, 0;
	// inline asm
	prmt.b32 %r6576, %r6577, %r8476, %r2;
	// inline asm
	st.u32 	[%rd99+12], %r6576;
	st.u32 	[%rd99+8], %r8476;
	st.u32 	[%rd99+4], %r8476;
	st.u32 	[%rd99], %r8476;
	st.u32 	[%rd98+12], %r8476;
	st.u32 	[%rd98+8], %r8476;
	st.u32 	[%rd98+4], %r8476;
	st.u32 	[%rd98], %r8476;
	st.u32 	[%rd97+12], %r8476;
	st.u32 	[%rd97+8], %r8476;
	st.u32 	[%rd97+4], %r8476;
	st.u32 	[%rd97], %r8476;
	st.u32 	[%rd96+12], %r8476;
	st.u32 	[%rd96+8], %r8476;
	st.u32 	[%rd96+4], %r8476;
	st.u32 	[%rd96], %r8476;
	st.u32 	[%rd95+12], %r8476;
	st.u32 	[%rd95+8], %r8476;
	mov.u64 	%rd1162, 0;
	st.u32 	[%rd95+4], %rd1162;
	st.u32 	[%rd95], %rd1162;
	bra.uni 	BB1_172;

BB1_41:
	setp.eq.s32	%p23, %r1, 19;
	@%p23 bra 	BB1_42;
	bra.uni 	BB1_87;

BB1_42:
	ld.u32 	%r2244, [%rd102+12];
	mov.u32 	%r8442, 0;
	// inline asm
	prmt.b32 %r8459, %r8442, %r2244, %r2;
	// inline asm
	ld.u32 	%r2247, [%rd102+12];
	ld.u32 	%r2248, [%rd102+8];
	// inline asm
	prmt.b32 %r8460, %r2247, %r2248, %r2;
	// inline asm
	ld.u32 	%r2251, [%rd102+8];
	ld.u32 	%r2252, [%rd102+4];
	// inline asm
	prmt.b32 %r8461, %r2251, %r2252, %r2;
	// inline asm
	ld.u32 	%r2255, [%rd102+4];
	ld.u32 	%r2256, [%rd102];
	// inline asm
	prmt.b32 %r8462, %r2255, %r2256, %r2;
	// inline asm
	ld.u32 	%r2259, [%rd102];
	ld.u32 	%r2260, [%rd101+12];
	// inline asm
	prmt.b32 %r8455, %r2259, %r2260, %r2;
	// inline asm
	ld.u32 	%r2263, [%rd101+12];
	ld.u32 	%r2264, [%rd101+8];
	// inline asm
	prmt.b32 %r8456, %r2263, %r2264, %r2;
	// inline asm
	ld.u32 	%r2267, [%rd101+8];
	ld.u32 	%r2268, [%rd101+4];
	// inline asm
	prmt.b32 %r8457, %r2267, %r2268, %r2;
	// inline asm
	ld.u32 	%r2271, [%rd101+4];
	ld.u32 	%r2272, [%rd101];
	// inline asm
	prmt.b32 %r8458, %r2271, %r2272, %r2;
	// inline asm
	ld.u32 	%r2275, [%rd101];
	ld.u32 	%r2276, [%rd100+12];
	// inline asm
	prmt.b32 %r8451, %r2275, %r2276, %r2;
	// inline asm
	ld.u32 	%r2279, [%rd100+12];
	ld.u32 	%r2280, [%rd100+8];
	// inline asm
	prmt.b32 %r8452, %r2279, %r2280, %r2;
	// inline asm
	ld.u32 	%r2283, [%rd100+8];
	ld.u32 	%r2284, [%rd100+4];
	// inline asm
	prmt.b32 %r8453, %r2283, %r2284, %r2;
	// inline asm
	ld.u32 	%r2287, [%rd100+4];
	ld.u32 	%r2288, [%rd100];
	// inline asm
	prmt.b32 %r8454, %r2287, %r2288, %r2;
	// inline asm
	ld.u32 	%r2291, [%rd100];
	ld.u32 	%r2292, [%rd99+12];
	// inline asm
	prmt.b32 %r8447, %r2291, %r2292, %r2;
	// inline asm
	ld.u32 	%r2295, [%rd99+12];
	ld.u32 	%r2296, [%rd99+8];
	// inline asm
	prmt.b32 %r8448, %r2295, %r2296, %r2;
	// inline asm
	ld.u32 	%r2299, [%rd99+8];
	ld.u32 	%r2300, [%rd99+4];
	// inline asm
	prmt.b32 %r8449, %r2299, %r2300, %r2;
	// inline asm
	ld.u32 	%r2303, [%rd99+4];
	ld.u32 	%r2304, [%rd99];
	// inline asm
	prmt.b32 %r8450, %r2303, %r2304, %r2;
	// inline asm
	ld.u32 	%r2307, [%rd99];
	ld.u32 	%r2308, [%rd98+12];
	// inline asm
	prmt.b32 %r8443, %r2307, %r2308, %r2;
	// inline asm
	ld.u32 	%r2311, [%rd98+12];
	ld.u32 	%r2312, [%rd98+8];
	// inline asm
	prmt.b32 %r8444, %r2311, %r2312, %r2;
	// inline asm
	ld.u32 	%r2315, [%rd98+8];
	ld.u32 	%r2316, [%rd98+4];
	// inline asm
	prmt.b32 %r8445, %r2315, %r2316, %r2;
	// inline asm
	ld.u32 	%r2319, [%rd98+4];
	ld.u32 	%r2320, [%rd98];
	// inline asm
	prmt.b32 %r8446, %r2319, %r2320, %r2;
	// inline asm
	ld.u32 	%r2323, [%rd98];
	ld.u32 	%r2324, [%rd97+12];
	// inline asm
	prmt.b32 %r2322, %r2323, %r2324, %r2;
	// inline asm
	st.u32 	[%rd102+12], %r2322;
	ld.u32 	%r2327, [%rd97+12];
	ld.u32 	%r2328, [%rd97+8];
	// inline asm
	prmt.b32 %r2326, %r2327, %r2328, %r2;
	// inline asm
	st.u32 	[%rd102+8], %r2326;
	ld.u32 	%r2331, [%rd97+8];
	ld.u32 	%r2332, [%rd97+4];
	// inline asm
	prmt.b32 %r2330, %r2331, %r2332, %r2;
	// inline asm
	st.u32 	[%rd102+4], %r2330;
	ld.u32 	%r2335, [%rd97+4];
	ld.u32 	%r2336, [%rd97];
	// inline asm
	prmt.b32 %r2334, %r2335, %r2336, %r2;
	// inline asm
	st.u32 	[%rd102], %r2334;
	ld.u32 	%r2339, [%rd97];
	ld.u32 	%r2340, [%rd96+12];
	// inline asm
	prmt.b32 %r2338, %r2339, %r2340, %r2;
	// inline asm
	st.u32 	[%rd101+12], %r2338;
	ld.u32 	%r2343, [%rd96+12];
	ld.u32 	%r2344, [%rd96+8];
	// inline asm
	prmt.b32 %r2342, %r2343, %r2344, %r2;
	// inline asm
	st.u32 	[%rd101+8], %r2342;
	ld.u32 	%r2347, [%rd96+8];
	ld.u32 	%r2348, [%rd96+4];
	// inline asm
	prmt.b32 %r2346, %r2347, %r2348, %r2;
	// inline asm
	st.u32 	[%rd101+4], %r2346;
	ld.u32 	%r2351, [%rd96+4];
	ld.u32 	%r2352, [%rd96];
	// inline asm
	prmt.b32 %r2350, %r2351, %r2352, %r2;
	// inline asm
	st.u32 	[%rd101], %r2350;
	ld.u32 	%r2355, [%rd96];
	ld.u32 	%r2356, [%rd95+12];
	// inline asm
	prmt.b32 %r2354, %r2355, %r2356, %r2;
	// inline asm
	st.u32 	[%rd100+12], %r2354;
	ld.u32 	%r2359, [%rd95+12];
	ld.u32 	%r2360, [%rd95+8];
	// inline asm
	prmt.b32 %r2358, %r2359, %r2360, %r2;
	// inline asm
	st.u32 	[%rd100+8], %r2358;
	ld.u32 	%r2363, [%rd95+8];
	ld.u32 	%r2364, [%rd95+4];
	// inline asm
	prmt.b32 %r2362, %r2363, %r2364, %r2;
	// inline asm
	st.u32 	[%rd100+4], %r2362;
	ld.u32 	%r2367, [%rd95+4];
	ld.u32 	%r2368, [%rd95];
	// inline asm
	prmt.b32 %r2366, %r2367, %r2368, %r2;
	// inline asm
	st.u32 	[%rd100], %r2366;
	ld.u32 	%r2371, [%rd95];
	// inline asm
	prmt.b32 %r2370, %r2371, %r8442, %r2;
	// inline asm
	st.u32 	[%rd99+12], %r2370;
	st.u32 	[%rd99+8], %r8442;
	st.u32 	[%rd99+4], %r8442;
	st.u32 	[%rd99], %r8442;
	st.u32 	[%rd98+12], %r8442;
	st.u32 	[%rd98+8], %r8442;
	st.u32 	[%rd98+4], %r8442;
	st.u32 	[%rd98], %r8442;
	st.u32 	[%rd97+12], %r8442;
	st.u32 	[%rd97+8], %r8442;
	st.u32 	[%rd97+4], %r8442;
	st.u32 	[%rd97], %r8442;
	st.u32 	[%rd96+12], %r8442;
	st.u32 	[%rd96+8], %r8442;
	st.u32 	[%rd96+4], %r8442;
	st.u32 	[%rd96], %r8442;
	st.u32 	[%rd95+12], %r8442;
	st.u32 	[%rd95+8], %r8442;
	mov.u64 	%rd115, 0;
	st.u32 	[%rd95+4], %rd115;
	st.u32 	[%rd95], %rd115;
	bra.uni 	BB1_82;

BB1_115:
	setp.eq.s32	%p83, %r1, 11;
	@%p83 bra 	BB1_116;
	bra.uni 	BB1_171;

BB1_116:
	ld.u32 	%r7065, [%rd100];
	ld.u32 	%r7066, [%rd99+12];
	// inline asm
	prmt.b32 %r7064, %r7065, %r7066, %r2;
	// inline asm
	st.u32 	[%rd102+12], %r7064;
	ld.u32 	%r7069, [%rd99+12];
	ld.u32 	%r7070, [%rd99+8];
	// inline asm
	prmt.b32 %r7068, %r7069, %r7070, %r2;
	// inline asm
	st.u32 	[%rd102+8], %r7068;
	ld.u32 	%r7073, [%rd99+8];
	ld.u32 	%r7074, [%rd99+4];
	// inline asm
	prmt.b32 %r7072, %r7073, %r7074, %r2;
	// inline asm
	st.u32 	[%rd102+4], %r7072;
	ld.u32 	%r7077, [%rd99+4];
	ld.u32 	%r7078, [%rd99];
	// inline asm
	prmt.b32 %r7076, %r7077, %r7078, %r2;
	// inline asm
	st.u32 	[%rd102], %r7076;
	ld.u32 	%r7081, [%rd99];
	ld.u32 	%r7082, [%rd98+12];
	// inline asm
	prmt.b32 %r7080, %r7081, %r7082, %r2;
	// inline asm
	st.u32 	[%rd101+12], %r7080;
	ld.u32 	%r7085, [%rd98+12];
	ld.u32 	%r7086, [%rd98+8];
	// inline asm
	prmt.b32 %r7084, %r7085, %r7086, %r2;
	// inline asm
	st.u32 	[%rd101+8], %r7084;
	ld.u32 	%r7089, [%rd98+8];
	ld.u32 	%r7090, [%rd98+4];
	// inline asm
	prmt.b32 %r7088, %r7089, %r7090, %r2;
	// inline asm
	st.u32 	[%rd101+4], %r7088;
	ld.u32 	%r7093, [%rd98+4];
	ld.u32 	%r7094, [%rd98];
	// inline asm
	prmt.b32 %r7092, %r7093, %r7094, %r2;
	// inline asm
	st.u32 	[%rd101], %r7092;
	ld.u32 	%r7097, [%rd98];
	ld.u32 	%r7098, [%rd97+12];
	// inline asm
	prmt.b32 %r7096, %r7097, %r7098, %r2;
	// inline asm
	st.u32 	[%rd100+12], %r7096;
	ld.u32 	%r7101, [%rd97+12];
	ld.u32 	%r7102, [%rd97+8];
	// inline asm
	prmt.b32 %r7100, %r7101, %r7102, %r2;
	// inline asm
	st.u32 	[%rd100+8], %r7100;
	ld.u32 	%r7105, [%rd97+8];
	ld.u32 	%r7106, [%rd97+4];
	// inline asm
	prmt.b32 %r7104, %r7105, %r7106, %r2;
	// inline asm
	st.u32 	[%rd100+4], %r7104;
	ld.u32 	%r7109, [%rd97+4];
	ld.u32 	%r7110, [%rd97];
	// inline asm
	prmt.b32 %r7108, %r7109, %r7110, %r2;
	// inline asm
	st.u32 	[%rd100], %r7108;
	ld.u32 	%r7113, [%rd97];
	ld.u32 	%r7114, [%rd96+12];
	// inline asm
	prmt.b32 %r7112, %r7113, %r7114, %r2;
	// inline asm
	st.u32 	[%rd99+12], %r7112;
	ld.u32 	%r7117, [%rd96+12];
	ld.u32 	%r7118, [%rd96+8];
	// inline asm
	prmt.b32 %r7116, %r7117, %r7118, %r2;
	// inline asm
	st.u32 	[%rd99+8], %r7116;
	ld.u32 	%r7121, [%rd96+8];
	ld.u32 	%r7122, [%rd96+4];
	// inline asm
	prmt.b32 %r7120, %r7121, %r7122, %r2;
	// inline asm
	st.u32 	[%rd99+4], %r7120;
	ld.u32 	%r7125, [%rd96+4];
	ld.u32 	%r7126, [%rd96];
	// inline asm
	prmt.b32 %r7124, %r7125, %r7126, %r2;
	// inline asm
	st.u32 	[%rd99], %r7124;
	ld.u32 	%r7129, [%rd96];
	ld.u32 	%r7130, [%rd95+12];
	// inline asm
	prmt.b32 %r7128, %r7129, %r7130, %r2;
	// inline asm
	st.u32 	[%rd98+12], %r7128;
	ld.u32 	%r7133, [%rd95+12];
	ld.u32 	%r7134, [%rd95+8];
	// inline asm
	prmt.b32 %r7132, %r7133, %r7134, %r2;
	// inline asm
	st.u32 	[%rd98+8], %r7132;
	ld.u32 	%r7137, [%rd95+8];
	ld.u32 	%r7138, [%rd95+4];
	// inline asm
	prmt.b32 %r7136, %r7137, %r7138, %r2;
	// inline asm
	st.u32 	[%rd98+4], %r7136;
	ld.u32 	%r7141, [%rd95+4];
	ld.u32 	%r7142, [%rd95];
	// inline asm
	prmt.b32 %r7140, %r7141, %r7142, %r2;
	// inline asm
	st.u32 	[%rd98], %r7140;
	ld.u32 	%r7145, [%rd95];
	mov.u32 	%r8476, 0;
	// inline asm
	prmt.b32 %r7144, %r7145, %r8476, %r2;
	// inline asm
	st.u32 	[%rd97+12], %r7144;
	st.u32 	[%rd97+8], %r8476;
	st.u32 	[%rd97+4], %r8476;
	st.u32 	[%rd97], %r8476;
	st.u32 	[%rd96+12], %r8476;
	st.u32 	[%rd96+8], %r8476;
	st.u32 	[%rd96+4], %r8476;
	st.u32 	[%rd96], %r8476;
	st.u32 	[%rd95+12], %r8476;
	st.u32 	[%rd95+8], %r8476;
	mov.u64 	%rd1170, 0;
	st.u32 	[%rd95+4], %rd1170;
	st.u32 	[%rd95], %rd1170;
	bra.uni 	BB1_172;

BB1_25:
	setp.eq.s32	%p35, %r1, 11;
	@%p35 bra 	BB1_26;
	bra.uni 	BB1_87;

BB1_26:
	ld.u32 	%r3432, [%rd102+12];
	mov.u32 	%r8442, 0;
	// inline asm
	prmt.b32 %r8451, %r8442, %r3432, %r2;
	// inline asm
	ld.u32 	%r3435, [%rd102+12];
	ld.u32 	%r3436, [%rd102+8];
	// inline asm
	prmt.b32 %r8452, %r3435, %r3436, %r2;
	// inline asm
	ld.u32 	%r3439, [%rd102+8];
	ld.u32 	%r3440, [%rd102+4];
	// inline asm
	prmt.b32 %r8453, %r3439, %r3440, %r2;
	// inline asm
	ld.u32 	%r3443, [%rd102+4];
	ld.u32 	%r3444, [%rd102];
	// inline asm
	prmt.b32 %r8454, %r3443, %r3444, %r2;
	// inline asm
	ld.u32 	%r3447, [%rd102];
	ld.u32 	%r3448, [%rd101+12];
	// inline asm
	prmt.b32 %r8447, %r3447, %r3448, %r2;
	// inline asm
	ld.u32 	%r3451, [%rd101+12];
	ld.u32 	%r3452, [%rd101+8];
	// inline asm
	prmt.b32 %r8448, %r3451, %r3452, %r2;
	// inline asm
	ld.u32 	%r3455, [%rd101+8];
	ld.u32 	%r3456, [%rd101+4];
	// inline asm
	prmt.b32 %r8449, %r3455, %r3456, %r2;
	// inline asm
	ld.u32 	%r3459, [%rd101+4];
	ld.u32 	%r3460, [%rd101];
	// inline asm
	prmt.b32 %r8450, %r3459, %r3460, %r2;
	// inline asm
	ld.u32 	%r3463, [%rd101];
	ld.u32 	%r3464, [%rd100+12];
	// inline asm
	prmt.b32 %r8443, %r3463, %r3464, %r2;
	// inline asm
	ld.u32 	%r3467, [%rd100+12];
	ld.u32 	%r3468, [%rd100+8];
	// inline asm
	prmt.b32 %r8444, %r3467, %r3468, %r2;
	// inline asm
	ld.u32 	%r3471, [%rd100+8];
	ld.u32 	%r3472, [%rd100+4];
	// inline asm
	prmt.b32 %r8445, %r3471, %r3472, %r2;
	// inline asm
	ld.u32 	%r3475, [%rd100+4];
	ld.u32 	%r3476, [%rd100];
	// inline asm
	prmt.b32 %r8446, %r3475, %r3476, %r2;
	// inline asm
	ld.u32 	%r3479, [%rd100];
	ld.u32 	%r3480, [%rd99+12];
	// inline asm
	prmt.b32 %r3478, %r3479, %r3480, %r2;
	// inline asm
	st.u32 	[%rd102+12], %r3478;
	ld.u32 	%r3483, [%rd99+12];
	ld.u32 	%r3484, [%rd99+8];
	// inline asm
	prmt.b32 %r3482, %r3483, %r3484, %r2;
	// inline asm
	st.u32 	[%rd102+8], %r3482;
	ld.u32 	%r3487, [%rd99+8];
	ld.u32 	%r3488, [%rd99+4];
	// inline asm
	prmt.b32 %r3486, %r3487, %r3488, %r2;
	// inline asm
	st.u32 	[%rd102+4], %r3486;
	ld.u32 	%r3491, [%rd99+4];
	ld.u32 	%r3492, [%rd99];
	// inline asm
	prmt.b32 %r3490, %r3491, %r3492, %r2;
	// inline asm
	st.u32 	[%rd102], %r3490;
	ld.u32 	%r3495, [%rd99];
	ld.u32 	%r3496, [%rd98+12];
	// inline asm
	prmt.b32 %r3494, %r3495, %r3496, %r2;
	// inline asm
	st.u32 	[%rd101+12], %r3494;
	ld.u32 	%r3499, [%rd98+12];
	ld.u32 	%r3500, [%rd98+8];
	// inline asm
	prmt.b32 %r3498, %r3499, %r3500, %r2;
	// inline asm
	st.u32 	[%rd101+8], %r3498;
	ld.u32 	%r3503, [%rd98+8];
	ld.u32 	%r3504, [%rd98+4];
	// inline asm
	prmt.b32 %r3502, %r3503, %r3504, %r2;
	// inline asm
	st.u32 	[%rd101+4], %r3502;
	ld.u32 	%r3507, [%rd98+4];
	ld.u32 	%r3508, [%rd98];
	// inline asm
	prmt.b32 %r3506, %r3507, %r3508, %r2;
	// inline asm
	st.u32 	[%rd101], %r3506;
	ld.u32 	%r3511, [%rd98];
	ld.u32 	%r3512, [%rd97+12];
	// inline asm
	prmt.b32 %r3510, %r3511, %r3512, %r2;
	// inline asm
	st.u32 	[%rd100+12], %r3510;
	ld.u32 	%r3515, [%rd97+12];
	ld.u32 	%r3516, [%rd97+8];
	// inline asm
	prmt.b32 %r3514, %r3515, %r3516, %r2;
	// inline asm
	st.u32 	[%rd100+8], %r3514;
	ld.u32 	%r3519, [%rd97+8];
	ld.u32 	%r3520, [%rd97+4];
	// inline asm
	prmt.b32 %r3518, %r3519, %r3520, %r2;
	// inline asm
	st.u32 	[%rd100+4], %r3518;
	ld.u32 	%r3523, [%rd97+4];
	ld.u32 	%r3524, [%rd97];
	// inline asm
	prmt.b32 %r3522, %r3523, %r3524, %r2;
	// inline asm
	st.u32 	[%rd100], %r3522;
	ld.u32 	%r3527, [%rd97];
	ld.u32 	%r3528, [%rd96+12];
	// inline asm
	prmt.b32 %r3526, %r3527, %r3528, %r2;
	// inline asm
	st.u32 	[%rd99+12], %r3526;
	ld.u32 	%r3531, [%rd96+12];
	ld.u32 	%r3532, [%rd96+8];
	// inline asm
	prmt.b32 %r3530, %r3531, %r3532, %r2;
	// inline asm
	st.u32 	[%rd99+8], %r3530;
	ld.u32 	%r3535, [%rd96+8];
	ld.u32 	%r3536, [%rd96+4];
	// inline asm
	prmt.b32 %r3534, %r3535, %r3536, %r2;
	// inline asm
	st.u32 	[%rd99+4], %r3534;
	ld.u32 	%r3539, [%rd96+4];
	ld.u32 	%r3540, [%rd96];
	// inline asm
	prmt.b32 %r3538, %r3539, %r3540, %r2;
	// inline asm
	st.u32 	[%rd99], %r3538;
	ld.u32 	%r3543, [%rd96];
	ld.u32 	%r3544, [%rd95+12];
	// inline asm
	prmt.b32 %r3542, %r3543, %r3544, %r2;
	// inline asm
	st.u32 	[%rd98+12], %r3542;
	ld.u32 	%r3547, [%rd95+12];
	ld.u32 	%r3548, [%rd95+8];
	// inline asm
	prmt.b32 %r3546, %r3547, %r3548, %r2;
	// inline asm
	st.u32 	[%rd98+8], %r3546;
	ld.u32 	%r3551, [%rd95+8];
	ld.u32 	%r3552, [%rd95+4];
	// inline asm
	prmt.b32 %r3550, %r3551, %r3552, %r2;
	// inline asm
	st.u32 	[%rd98+4], %r3550;
	ld.u32 	%r3555, [%rd95+4];
	ld.u32 	%r3556, [%rd95];
	// inline asm
	prmt.b32 %r3554, %r3555, %r3556, %r2;
	// inline asm
	st.u32 	[%rd98], %r3554;
	ld.u32 	%r3559, [%rd95];
	// inline asm
	prmt.b32 %r3558, %r3559, %r8442, %r2;
	// inline asm
	st.u32 	[%rd97+12], %r3558;
	st.u32 	[%rd97+8], %r8442;
	st.u32 	[%rd97+4], %r8442;
	st.u32 	[%rd97], %r8442;
	st.u32 	[%rd96+12], %r8442;
	st.u32 	[%rd96+8], %r8442;
	st.u32 	[%rd96+4], %r8442;
	st.u32 	[%rd96], %r8442;
	st.u32 	[%rd95+12], %r8442;
	st.u32 	[%rd95+8], %r8442;
	mov.u64 	%rd123, 0;
	st.u32 	[%rd95+4], %rd123;
	st.u32 	[%rd95], %rd123;
	bra.uni 	BB1_80;

BB1_146:
	setp.eq.s32	%p60, %r1, 27;
	@%p60 bra 	BB1_147;
	bra.uni 	BB1_171;

BB1_147:
	ld.u32 	%r6249, [%rd96];
	ld.u32 	%r6250, [%rd95+12];
	// inline asm
	prmt.b32 %r6248, %r6249, %r6250, %r2;
	// inline asm
	st.u32 	[%rd102+12], %r6248;
	ld.u32 	%r6253, [%rd95+12];
	ld.u32 	%r6254, [%rd95+8];
	// inline asm
	prmt.b32 %r6252, %r6253, %r6254, %r2;
	// inline asm
	st.u32 	[%rd102+8], %r6252;
	ld.u32 	%r6257, [%rd95+8];
	ld.u32 	%r6258, [%rd95+4];
	// inline asm
	prmt.b32 %r6256, %r6257, %r6258, %r2;
	// inline asm
	st.u32 	[%rd102+4], %r6256;
	ld.u32 	%r6261, [%rd95+4];
	ld.u32 	%r6262, [%rd95];
	// inline asm
	prmt.b32 %r6260, %r6261, %r6262, %r2;
	// inline asm
	st.u32 	[%rd102], %r6260;
	ld.u32 	%r6265, [%rd95];
	mov.u32 	%r8476, 0;
	// inline asm
	prmt.b32 %r6264, %r6265, %r8476, %r2;
	// inline asm
	st.u32 	[%rd101+12], %r6264;
	st.u32 	[%rd101+8], %r8476;
	st.u32 	[%rd101+4], %r8476;
	st.u32 	[%rd101], %r8476;
	st.u32 	[%rd100+12], %r8476;
	st.u32 	[%rd100+8], %r8476;
	st.u32 	[%rd100+4], %r8476;
	st.u32 	[%rd100], %r8476;
	st.u32 	[%rd99+12], %r8476;
	st.u32 	[%rd99+8], %r8476;
	st.u32 	[%rd99+4], %r8476;
	st.u32 	[%rd99], %r8476;
	st.u32 	[%rd98+12], %r8476;
	st.u32 	[%rd98+8], %r8476;
	st.u32 	[%rd98+4], %r8476;
	st.u32 	[%rd98], %r8476;
	st.u32 	[%rd97+12], %r8476;
	st.u32 	[%rd97+8], %r8476;
	st.u32 	[%rd97+4], %r8476;
	st.u32 	[%rd97], %r8476;
	st.u32 	[%rd96+12], %r8476;
	st.u32 	[%rd96+8], %r8476;
	st.u32 	[%rd96+4], %r8476;
	st.u32 	[%rd96], %r8476;
	st.u32 	[%rd95+12], %r8476;
	st.u32 	[%rd95+8], %r8476;
	mov.u64 	%rd1154, 0;
	st.u32 	[%rd95+4], %rd1154;
	st.u32 	[%rd95], %rd1154;
	bra.uni 	BB1_172;

BB1_56:
	setp.eq.s32	%p12, %r1, 27;
	@%p12 bra 	BB1_57;
	bra.uni 	BB1_87;

BB1_57:
	ld.u32 	%r1120, [%rd102+12];
	mov.u32 	%r8442, 0;
	// inline asm
	prmt.b32 %r8467, %r8442, %r1120, %r2;
	// inline asm
	ld.u32 	%r1123, [%rd102+12];
	ld.u32 	%r1124, [%rd102+8];
	// inline asm
	prmt.b32 %r8468, %r1123, %r1124, %r2;
	// inline asm
	ld.u32 	%r1127, [%rd102+8];
	ld.u32 	%r1128, [%rd102+4];
	// inline asm
	prmt.b32 %r8469, %r1127, %r1128, %r2;
	// inline asm
	ld.u32 	%r1131, [%rd102+4];
	ld.u32 	%r1132, [%rd102];
	// inline asm
	prmt.b32 %r8470, %r1131, %r1132, %r2;
	// inline asm
	ld.u32 	%r1135, [%rd102];
	ld.u32 	%r1136, [%rd101+12];
	// inline asm
	prmt.b32 %r8463, %r1135, %r1136, %r2;
	// inline asm
	ld.u32 	%r1139, [%rd101+12];
	ld.u32 	%r1140, [%rd101+8];
	// inline asm
	prmt.b32 %r8464, %r1139, %r1140, %r2;
	// inline asm
	ld.u32 	%r1143, [%rd101+8];
	ld.u32 	%r1144, [%rd101+4];
	// inline asm
	prmt.b32 %r8465, %r1143, %r1144, %r2;
	// inline asm
	ld.u32 	%r1147, [%rd101+4];
	ld.u32 	%r1148, [%rd101];
	// inline asm
	prmt.b32 %r8466, %r1147, %r1148, %r2;
	// inline asm
	ld.u32 	%r1151, [%rd101];
	ld.u32 	%r1152, [%rd100+12];
	// inline asm
	prmt.b32 %r8459, %r1151, %r1152, %r2;
	// inline asm
	ld.u32 	%r1155, [%rd100+12];
	ld.u32 	%r1156, [%rd100+8];
	// inline asm
	prmt.b32 %r8460, %r1155, %r1156, %r2;
	// inline asm
	ld.u32 	%r1159, [%rd100+8];
	ld.u32 	%r1160, [%rd100+4];
	// inline asm
	prmt.b32 %r8461, %r1159, %r1160, %r2;
	// inline asm
	ld.u32 	%r1163, [%rd100+4];
	ld.u32 	%r1164, [%rd100];
	// inline asm
	prmt.b32 %r8462, %r1163, %r1164, %r2;
	// inline asm
	ld.u32 	%r1167, [%rd100];
	ld.u32 	%r1168, [%rd99+12];
	// inline asm
	prmt.b32 %r8455, %r1167, %r1168, %r2;
	// inline asm
	ld.u32 	%r1171, [%rd99+12];
	ld.u32 	%r1172, [%rd99+8];
	// inline asm
	prmt.b32 %r8456, %r1171, %r1172, %r2;
	// inline asm
	ld.u32 	%r1175, [%rd99+8];
	ld.u32 	%r1176, [%rd99+4];
	// inline asm
	prmt.b32 %r8457, %r1175, %r1176, %r2;
	// inline asm
	ld.u32 	%r1179, [%rd99+4];
	ld.u32 	%r1180, [%rd99];
	// inline asm
	prmt.b32 %r8458, %r1179, %r1180, %r2;
	// inline asm
	ld.u32 	%r1183, [%rd99];
	ld.u32 	%r1184, [%rd98+12];
	// inline asm
	prmt.b32 %r8451, %r1183, %r1184, %r2;
	// inline asm
	ld.u32 	%r1187, [%rd98+12];
	ld.u32 	%r1188, [%rd98+8];
	// inline asm
	prmt.b32 %r8452, %r1187, %r1188, %r2;
	// inline asm
	ld.u32 	%r1191, [%rd98+8];
	ld.u32 	%r1192, [%rd98+4];
	// inline asm
	prmt.b32 %r8453, %r1191, %r1192, %r2;
	// inline asm
	ld.u32 	%r1195, [%rd98+4];
	ld.u32 	%r1196, [%rd98];
	// inline asm
	prmt.b32 %r8454, %r1195, %r1196, %r2;
	// inline asm
	ld.u32 	%r1199, [%rd98];
	ld.u32 	%r1200, [%rd97+12];
	// inline asm
	prmt.b32 %r8447, %r1199, %r1200, %r2;
	// inline asm
	ld.u32 	%r1203, [%rd97+12];
	ld.u32 	%r1204, [%rd97+8];
	// inline asm
	prmt.b32 %r8448, %r1203, %r1204, %r2;
	// inline asm
	ld.u32 	%r1207, [%rd97+8];
	ld.u32 	%r1208, [%rd97+4];
	// inline asm
	prmt.b32 %r8449, %r1207, %r1208, %r2;
	// inline asm
	ld.u32 	%r1211, [%rd97+4];
	ld.u32 	%r1212, [%rd97];
	// inline asm
	prmt.b32 %r8450, %r1211, %r1212, %r2;
	// inline asm
	ld.u32 	%r1215, [%rd97];
	ld.u32 	%r1216, [%rd96+12];
	// inline asm
	prmt.b32 %r8443, %r1215, %r1216, %r2;
	// inline asm
	ld.u32 	%r1219, [%rd96+12];
	ld.u32 	%r1220, [%rd96+8];
	// inline asm
	prmt.b32 %r8444, %r1219, %r1220, %r2;
	// inline asm
	ld.u32 	%r1223, [%rd96+8];
	ld.u32 	%r1224, [%rd96+4];
	// inline asm
	prmt.b32 %r8445, %r1223, %r1224, %r2;
	// inline asm
	ld.u32 	%r1227, [%rd96+4];
	ld.u32 	%r1228, [%rd96];
	// inline asm
	prmt.b32 %r8446, %r1227, %r1228, %r2;
	// inline asm
	ld.u32 	%r1231, [%rd96];
	ld.u32 	%r1232, [%rd95+12];
	// inline asm
	prmt.b32 %r1230, %r1231, %r1232, %r2;
	// inline asm
	st.u32 	[%rd102+12], %r1230;
	ld.u32 	%r1235, [%rd95+12];
	ld.u32 	%r1236, [%rd95+8];
	// inline asm
	prmt.b32 %r1234, %r1235, %r1236, %r2;
	// inline asm
	st.u32 	[%rd102+8], %r1234;
	ld.u32 	%r1239, [%rd95+8];
	ld.u32 	%r1240, [%rd95+4];
	// inline asm
	prmt.b32 %r1238, %r1239, %r1240, %r2;
	// inline asm
	st.u32 	[%rd102+4], %r1238;
	ld.u32 	%r1243, [%rd95+4];
	ld.u32 	%r1244, [%rd95];
	// inline asm
	prmt.b32 %r1242, %r1243, %r1244, %r2;
	// inline asm
	st.u32 	[%rd102], %r1242;
	ld.u32 	%r1247, [%rd95];
	// inline asm
	prmt.b32 %r1246, %r1247, %r8442, %r2;
	// inline asm
	st.u32 	[%rd101+12], %r1246;
	st.u32 	[%rd101+8], %r8442;
	st.u32 	[%rd101+4], %r8442;
	st.u32 	[%rd101], %r8442;
	st.u32 	[%rd100+12], %r8442;
	st.u32 	[%rd100+8], %r8442;
	st.u32 	[%rd100+4], %r8442;
	st.u32 	[%rd100], %r8442;
	st.u32 	[%rd99+12], %r8442;
	st.u32 	[%rd99+8], %r8442;
	st.u32 	[%rd99+4], %r8442;
	st.u32 	[%rd99], %r8442;
	st.u32 	[%rd98+12], %r8442;
	st.u32 	[%rd98+8], %r8442;
	st.u32 	[%rd98+4], %r8442;
	st.u32 	[%rd98], %r8442;
	st.u32 	[%rd97+12], %r8442;
	st.u32 	[%rd97+8], %r8442;
	st.u32 	[%rd97+4], %r8442;
	st.u32 	[%rd97], %r8442;
	st.u32 	[%rd96+12], %r8442;
	st.u32 	[%rd96+8], %r8442;
	st.u32 	[%rd96+4], %r8442;
	st.u32 	[%rd96], %r8442;
	st.u32 	[%rd95+12], %r8442;
	st.u32 	[%rd95+8], %r8442;
	mov.u64 	%rd107, 0;
	st.u32 	[%rd95+4], %rd107;
	st.u32 	[%rd95], %rd107;
	bra.uni 	BB1_84;

BB1_107:
	setp.eq.s32	%p89, %r1, 7;
	@%p89 bra 	BB1_108;
	bra.uni 	BB1_171;

BB1_108:
	ld.u32 	%r7429, [%rd101];
	ld.u32 	%r7430, [%rd100+12];
	// inline asm
	prmt.b32 %r7428, %r7429, %r7430, %r2;
	// inline asm
	st.u32 	[%rd102+12], %r7428;
	ld.u32 	%r7433, [%rd100+12];
	ld.u32 	%r7434, [%rd100+8];
	// inline asm
	prmt.b32 %r7432, %r7433, %r7434, %r2;
	// inline asm
	st.u32 	[%rd102+8], %r7432;
	ld.u32 	%r7437, [%rd100+8];
	ld.u32 	%r7438, [%rd100+4];
	// inline asm
	prmt.b32 %r7436, %r7437, %r7438, %r2;
	// inline asm
	st.u32 	[%rd102+4], %r7436;
	ld.u32 	%r7441, [%rd100+4];
	ld.u32 	%r7442, [%rd100];
	// inline asm
	prmt.b32 %r7440, %r7441, %r7442, %r2;
	// inline asm
	st.u32 	[%rd102], %r7440;
	ld.u32 	%r7445, [%rd100];
	ld.u32 	%r7446, [%rd99+12];
	// inline asm
	prmt.b32 %r7444, %r7445, %r7446, %r2;
	// inline asm
	st.u32 	[%rd101+12], %r7444;
	ld.u32 	%r7449, [%rd99+12];
	ld.u32 	%r7450, [%rd99+8];
	// inline asm
	prmt.b32 %r7448, %r7449, %r7450, %r2;
	// inline asm
	st.u32 	[%rd101+8], %r7448;
	ld.u32 	%r7453, [%rd99+8];
	ld.u32 	%r7454, [%rd99+4];
	// inline asm
	prmt.b32 %r7452, %r7453, %r7454, %r2;
	// inline asm
	st.u32 	[%rd101+4], %r7452;
	ld.u32 	%r7457, [%rd99+4];
	ld.u32 	%r7458, [%rd99];
	// inline asm
	prmt.b32 %r7456, %r7457, %r7458, %r2;
	// inline asm
	st.u32 	[%rd101], %r7456;
	ld.u32 	%r7461, [%rd99];
	ld.u32 	%r7462, [%rd98+12];
	// inline asm
	prmt.b32 %r7460, %r7461, %r7462, %r2;
	// inline asm
	st.u32 	[%rd100+12], %r7460;
	ld.u32 	%r7465, [%rd98+12];
	ld.u32 	%r7466, [%rd98+8];
	// inline asm
	prmt.b32 %r7464, %r7465, %r7466, %r2;
	// inline asm
	st.u32 	[%rd100+8], %r7464;
	ld.u32 	%r7469, [%rd98+8];
	ld.u32 	%r7470, [%rd98+4];
	// inline asm
	prmt.b32 %r7468, %r7469, %r7470, %r2;
	// inline asm
	st.u32 	[%rd100+4], %r7468;
	ld.u32 	%r7473, [%rd98+4];
	ld.u32 	%r7474, [%rd98];
	// inline asm
	prmt.b32 %r7472, %r7473, %r7474, %r2;
	// inline asm
	st.u32 	[%rd100], %r7472;
	ld.u32 	%r7477, [%rd98];
	ld.u32 	%r7478, [%rd97+12];
	// inline asm
	prmt.b32 %r7476, %r7477, %r7478, %r2;
	// inline asm
	st.u32 	[%rd99+12], %r7476;
	ld.u32 	%r7481, [%rd97+12];
	ld.u32 	%r7482, [%rd97+8];
	// inline asm
	prmt.b32 %r7480, %r7481, %r7482, %r2;
	// inline asm
	st.u32 	[%rd99+8], %r7480;
	ld.u32 	%r7485, [%rd97+8];
	ld.u32 	%r7486, [%rd97+4];
	// inline asm
	prmt.b32 %r7484, %r7485, %r7486, %r2;
	// inline asm
	st.u32 	[%rd99+4], %r7484;
	ld.u32 	%r7489, [%rd97+4];
	ld.u32 	%r7490, [%rd97];
	// inline asm
	prmt.b32 %r7488, %r7489, %r7490, %r2;
	// inline asm
	st.u32 	[%rd99], %r7488;
	ld.u32 	%r7493, [%rd97];
	ld.u32 	%r7494, [%rd96+12];
	// inline asm
	prmt.b32 %r7492, %r7493, %r7494, %r2;
	// inline asm
	st.u32 	[%rd98+12], %r7492;
	ld.u32 	%r7497, [%rd96+12];
	ld.u32 	%r7498, [%rd96+8];
	// inline asm
	prmt.b32 %r7496, %r7497, %r7498, %r2;
	// inline asm
	st.u32 	[%rd98+8], %r7496;
	ld.u32 	%r7501, [%rd96+8];
	ld.u32 	%r7502, [%rd96+4];
	// inline asm
	prmt.b32 %r7500, %r7501, %r7502, %r2;
	// inline asm
	st.u32 	[%rd98+4], %r7500;
	ld.u32 	%r7505, [%rd96+4];
	ld.u32 	%r7506, [%rd96];
	// inline asm
	prmt.b32 %r7504, %r7505, %r7506, %r2;
	// inline asm
	st.u32 	[%rd98], %r7504;
	ld.u32 	%r7509, [%rd96];
	ld.u32 	%r7510, [%rd95+12];
	// inline asm
	prmt.b32 %r7508, %r7509, %r7510, %r2;
	// inline asm
	st.u32 	[%rd97+12], %r7508;
	ld.u32 	%r7513, [%rd95+12];
	ld.u32 	%r7514, [%rd95+8];
	// inline asm
	prmt.b32 %r7512, %r7513, %r7514, %r2;
	// inline asm
	st.u32 	[%rd97+8], %r7512;
	ld.u32 	%r7517, [%rd95+8];
	ld.u32 	%r7518, [%rd95+4];
	// inline asm
	prmt.b32 %r7516, %r7517, %r7518, %r2;
	// inline asm
	st.u32 	[%rd97+4], %r7516;
	ld.u32 	%r7521, [%rd95+4];
	ld.u32 	%r7522, [%rd95];
	// inline asm
	prmt.b32 %r7520, %r7521, %r7522, %r2;
	// inline asm
	st.u32 	[%rd97], %r7520;
	ld.u32 	%r7525, [%rd95];
	mov.u32 	%r8476, 0;
	// inline asm
	prmt.b32 %r7524, %r7525, %r8476, %r2;
	// inline asm
	st.u32 	[%rd96+12], %r7524;
	st.u32 	[%rd96+8], %r8476;
	st.u32 	[%rd96+4], %r8476;
	st.u32 	[%rd96], %r8476;
	st.u32 	[%rd95+12], %r8476;
	st.u32 	[%rd95+8], %r8476;
	mov.u64 	%rd1174, 0;
	st.u32 	[%rd95+4], %rd1174;
	st.u32 	[%rd95], %rd1174;
	bra.uni 	BB1_172;

BB1_17:
	setp.eq.s32	%p41, %r1, 7;
	@%p41 bra 	BB1_18;
	bra.uni 	BB1_87;

BB1_18:
	ld.u32 	%r4050, [%rd102+12];
	mov.u32 	%r8442, 0;
	// inline asm
	prmt.b32 %r8447, %r8442, %r4050, %r2;
	// inline asm
	ld.u32 	%r4053, [%rd102+12];
	ld.u32 	%r4054, [%rd102+8];
	// inline asm
	prmt.b32 %r8448, %r4053, %r4054, %r2;
	// inline asm
	ld.u32 	%r4057, [%rd102+8];
	ld.u32 	%r4058, [%rd102+4];
	// inline asm
	prmt.b32 %r8449, %r4057, %r4058, %r2;
	// inline asm
	ld.u32 	%r4061, [%rd102+4];
	ld.u32 	%r4062, [%rd102];
	// inline asm
	prmt.b32 %r8450, %r4061, %r4062, %r2;
	// inline asm
	ld.u32 	%r4065, [%rd102];
	ld.u32 	%r4066, [%rd101+12];
	// inline asm
	prmt.b32 %r8443, %r4065, %r4066, %r2;
	// inline asm
	ld.u32 	%r4069, [%rd101+12];
	ld.u32 	%r4070, [%rd101+8];
	// inline asm
	prmt.b32 %r8444, %r4069, %r4070, %r2;
	// inline asm
	ld.u32 	%r4073, [%rd101+8];
	ld.u32 	%r4074, [%rd101+4];
	// inline asm
	prmt.b32 %r8445, %r4073, %r4074, %r2;
	// inline asm
	ld.u32 	%r4077, [%rd101+4];
	ld.u32 	%r4078, [%rd101];
	// inline asm
	prmt.b32 %r8446, %r4077, %r4078, %r2;
	// inline asm
	ld.u32 	%r4081, [%rd101];
	ld.u32 	%r4082, [%rd100+12];
	// inline asm
	prmt.b32 %r4080, %r4081, %r4082, %r2;
	// inline asm
	st.u32 	[%rd102+12], %r4080;
	ld.u32 	%r4085, [%rd100+12];
	ld.u32 	%r4086, [%rd100+8];
	// inline asm
	prmt.b32 %r4084, %r4085, %r4086, %r2;
	// inline asm
	st.u32 	[%rd102+8], %r4084;
	ld.u32 	%r4089, [%rd100+8];
	ld.u32 	%r4090, [%rd100+4];
	// inline asm
	prmt.b32 %r4088, %r4089, %r4090, %r2;
	// inline asm
	st.u32 	[%rd102+4], %r4088;
	ld.u32 	%r4093, [%rd100+4];
	ld.u32 	%r4094, [%rd100];
	// inline asm
	prmt.b32 %r4092, %r4093, %r4094, %r2;
	// inline asm
	st.u32 	[%rd102], %r4092;
	ld.u32 	%r4097, [%rd100];
	ld.u32 	%r4098, [%rd99+12];
	// inline asm
	prmt.b32 %r4096, %r4097, %r4098, %r2;
	// inline asm
	st.u32 	[%rd101+12], %r4096;
	ld.u32 	%r4101, [%rd99+12];
	ld.u32 	%r4102, [%rd99+8];
	// inline asm
	prmt.b32 %r4100, %r4101, %r4102, %r2;
	// inline asm
	st.u32 	[%rd101+8], %r4100;
	ld.u32 	%r4105, [%rd99+8];
	ld.u32 	%r4106, [%rd99+4];
	// inline asm
	prmt.b32 %r4104, %r4105, %r4106, %r2;
	// inline asm
	st.u32 	[%rd101+4], %r4104;
	ld.u32 	%r4109, [%rd99+4];
	ld.u32 	%r4110, [%rd99];
	// inline asm
	prmt.b32 %r4108, %r4109, %r4110, %r2;
	// inline asm
	st.u32 	[%rd101], %r4108;
	ld.u32 	%r4113, [%rd99];
	ld.u32 	%r4114, [%rd98+12];
	// inline asm
	prmt.b32 %r4112, %r4113, %r4114, %r2;
	// inline asm
	st.u32 	[%rd100+12], %r4112;
	ld.u32 	%r4117, [%rd98+12];
	ld.u32 	%r4118, [%rd98+8];
	// inline asm
	prmt.b32 %r4116, %r4117, %r4118, %r2;
	// inline asm
	st.u32 	[%rd100+8], %r4116;
	ld.u32 	%r4121, [%rd98+8];
	ld.u32 	%r4122, [%rd98+4];
	// inline asm
	prmt.b32 %r4120, %r4121, %r4122, %r2;
	// inline asm
	st.u32 	[%rd100+4], %r4120;
	ld.u32 	%r4125, [%rd98+4];
	ld.u32 	%r4126, [%rd98];
	// inline asm
	prmt.b32 %r4124, %r4125, %r4126, %r2;
	// inline asm
	st.u32 	[%rd100], %r4124;
	ld.u32 	%r4129, [%rd98];
	ld.u32 	%r4130, [%rd97+12];
	// inline asm
	prmt.b32 %r4128, %r4129, %r4130, %r2;
	// inline asm
	st.u32 	[%rd99+12], %r4128;
	ld.u32 	%r4133, [%rd97+12];
	ld.u32 	%r4134, [%rd97+8];
	// inline asm
	prmt.b32 %r4132, %r4133, %r4134, %r2;
	// inline asm
	st.u32 	[%rd99+8], %r4132;
	ld.u32 	%r4137, [%rd97+8];
	ld.u32 	%r4138, [%rd97+4];
	// inline asm
	prmt.b32 %r4136, %r4137, %r4138, %r2;
	// inline asm
	st.u32 	[%rd99+4], %r4136;
	ld.u32 	%r4141, [%rd97+4];
	ld.u32 	%r4142, [%rd97];
	// inline asm
	prmt.b32 %r4140, %r4141, %r4142, %r2;
	// inline asm
	st.u32 	[%rd99], %r4140;
	ld.u32 	%r4145, [%rd97];
	ld.u32 	%r4146, [%rd96+12];
	// inline asm
	prmt.b32 %r4144, %r4145, %r4146, %r2;
	// inline asm
	st.u32 	[%rd98+12], %r4144;
	ld.u32 	%r4149, [%rd96+12];
	ld.u32 	%r4150, [%rd96+8];
	// inline asm
	prmt.b32 %r4148, %r4149, %r4150, %r2;
	// inline asm
	st.u32 	[%rd98+8], %r4148;
	ld.u32 	%r4153, [%rd96+8];
	ld.u32 	%r4154, [%rd96+4];
	// inline asm
	prmt.b32 %r4152, %r4153, %r4154, %r2;
	// inline asm
	st.u32 	[%rd98+4], %r4152;
	ld.u32 	%r4157, [%rd96+4];
	ld.u32 	%r4158, [%rd96];
	// inline asm
	prmt.b32 %r4156, %r4157, %r4158, %r2;
	// inline asm
	st.u32 	[%rd98], %r4156;
	ld.u32 	%r4161, [%rd96];
	ld.u32 	%r4162, [%rd95+12];
	// inline asm
	prmt.b32 %r4160, %r4161, %r4162, %r2;
	// inline asm
	st.u32 	[%rd97+12], %r4160;
	ld.u32 	%r4165, [%rd95+12];
	ld.u32 	%r4166, [%rd95+8];
	// inline asm
	prmt.b32 %r4164, %r4165, %r4166, %r2;
	// inline asm
	st.u32 	[%rd97+8], %r4164;
	ld.u32 	%r4169, [%rd95+8];
	ld.u32 	%r4170, [%rd95+4];
	// inline asm
	prmt.b32 %r4168, %r4169, %r4170, %r2;
	// inline asm
	st.u32 	[%rd97+4], %r4168;
	ld.u32 	%r4173, [%rd95+4];
	ld.u32 	%r4174, [%rd95];
	// inline asm
	prmt.b32 %r4172, %r4173, %r4174, %r2;
	// inline asm
	st.u32 	[%rd97], %r4172;
	ld.u32 	%r4177, [%rd95];
	// inline asm
	prmt.b32 %r4176, %r4177, %r8442, %r2;
	// inline asm
	st.u32 	[%rd96+12], %r4176;
	st.u32 	[%rd96+8], %r8442;
	st.u32 	[%rd96+4], %r8442;
	st.u32 	[%rd96], %r8442;
	st.u32 	[%rd95+12], %r8442;
	st.u32 	[%rd95+8], %r8442;
	mov.u64 	%rd127, 0;
	st.u32 	[%rd95+4], %rd127;
	st.u32 	[%rd95], %rd127;

BB1_79:
	mov.u32 	%r8451, %r8442;
	mov.u32 	%r8452, %r8442;
	mov.u32 	%r8453, %r8442;
	mov.u32 	%r8454, %r8442;

BB1_80:
	mov.u32 	%r8455, %r8442;
	mov.u32 	%r8456, %r8442;
	mov.u32 	%r8457, %r8442;
	mov.u32 	%r8458, %r8442;

BB1_81:
	mov.u32 	%r8459, %r8442;
	mov.u32 	%r8460, %r8442;
	mov.u32 	%r8461, %r8442;
	mov.u32 	%r8462, %r8442;

BB1_82:
	mov.u32 	%r8463, %r8442;
	mov.u32 	%r8464, %r8442;
	mov.u32 	%r8465, %r8442;
	mov.u32 	%r8466, %r8442;

BB1_83:
	mov.u32 	%r8467, %r8442;
	mov.u32 	%r8468, %r8442;
	mov.u32 	%r8469, %r8442;
	mov.u32 	%r8470, %r8442;

BB1_84:
	mov.u32 	%r8471, %r8442;
	mov.u32 	%r8472, %r8442;
	mov.u32 	%r8473, %r8442;
	mov.u32 	%r8474, %r8442;
	bra.uni 	BB1_89;

BB1_138:
	setp.eq.s32	%p66, %r1, 23;
	@%p66 bra 	BB1_139;
	bra.uni 	BB1_171;

BB1_139:
	ld.u32 	%r6357, [%rd97];
	ld.u32 	%r6358, [%rd96+12];
	// inline asm
	prmt.b32 %r6356, %r6357, %r6358, %r2;
	// inline asm
	st.u32 	[%rd102+12], %r6356;
	ld.u32 	%r6361, [%rd96+12];
	ld.u32 	%r6362, [%rd96+8];
	// inline asm
	prmt.b32 %r6360, %r6361, %r6362, %r2;
	// inline asm
	st.u32 	[%rd102+8], %r6360;
	ld.u32 	%r6365, [%rd96+8];
	ld.u32 	%r6366, [%rd96+4];
	// inline asm
	prmt.b32 %r6364, %r6365, %r6366, %r2;
	// inline asm
	st.u32 	[%rd102+4], %r6364;
	ld.u32 	%r6369, [%rd96+4];
	ld.u32 	%r6370, [%rd96];
	// inline asm
	prmt.b32 %r6368, %r6369, %r6370, %r2;
	// inline asm
	st.u32 	[%rd102], %r6368;
	ld.u32 	%r6373, [%rd96];
	ld.u32 	%r6374, [%rd95+12];
	// inline asm
	prmt.b32 %r6372, %r6373, %r6374, %r2;
	// inline asm
	st.u32 	[%rd101+12], %r6372;
	ld.u32 	%r6377, [%rd95+12];
	ld.u32 	%r6378, [%rd95+8];
	// inline asm
	prmt.b32 %r6376, %r6377, %r6378, %r2;
	// inline asm
	st.u32 	[%rd101+8], %r6376;
	ld.u32 	%r6381, [%rd95+8];
	ld.u32 	%r6382, [%rd95+4];
	// inline asm
	prmt.b32 %r6380, %r6381, %r6382, %r2;
	// inline asm
	st.u32 	[%rd101+4], %r6380;
	ld.u32 	%r6385, [%rd95+4];
	ld.u32 	%r6386, [%rd95];
	// inline asm
	prmt.b32 %r6384, %r6385, %r6386, %r2;
	// inline asm
	st.u32 	[%rd101], %r6384;
	ld.u32 	%r6389, [%rd95];
	mov.u32 	%r8476, 0;
	// inline asm
	prmt.b32 %r6388, %r6389, %r8476, %r2;
	// inline asm
	st.u32 	[%rd100+12], %r6388;
	st.u32 	[%rd100+8], %r8476;
	st.u32 	[%rd100+4], %r8476;
	st.u32 	[%rd100], %r8476;
	st.u32 	[%rd99+12], %r8476;
	st.u32 	[%rd99+8], %r8476;
	st.u32 	[%rd99+4], %r8476;
	st.u32 	[%rd99], %r8476;
	st.u32 	[%rd98+12], %r8476;
	st.u32 	[%rd98+8], %r8476;
	st.u32 	[%rd98+4], %r8476;
	st.u32 	[%rd98], %r8476;
	st.u32 	[%rd97+12], %r8476;
	st.u32 	[%rd97+8], %r8476;
	st.u32 	[%rd97+4], %r8476;
	st.u32 	[%rd97], %r8476;
	st.u32 	[%rd96+12], %r8476;
	st.u32 	[%rd96+8], %r8476;
	st.u32 	[%rd96+4], %r8476;
	st.u32 	[%rd96], %r8476;
	st.u32 	[%rd95+12], %r8476;
	st.u32 	[%rd95+8], %r8476;
	mov.u64 	%rd1158, 0;
	st.u32 	[%rd95+4], %rd1158;
	st.u32 	[%rd95], %rd1158;
	bra.uni 	BB1_172;

BB1_48:
	setp.eq.s32	%p18, %r1, 23;
	@%p18 bra 	BB1_49;
	bra.uni 	BB1_87;

BB1_49:
	ld.u32 	%r1674, [%rd102+12];
	mov.u32 	%r8442, 0;
	// inline asm
	prmt.b32 %r8463, %r8442, %r1674, %r2;
	// inline asm
	ld.u32 	%r1677, [%rd102+12];
	ld.u32 	%r1678, [%rd102+8];
	// inline asm
	prmt.b32 %r8464, %r1677, %r1678, %r2;
	// inline asm
	ld.u32 	%r1681, [%rd102+8];
	ld.u32 	%r1682, [%rd102+4];
	// inline asm
	prmt.b32 %r8465, %r1681, %r1682, %r2;
	// inline asm
	ld.u32 	%r1685, [%rd102+4];
	ld.u32 	%r1686, [%rd102];
	// inline asm
	prmt.b32 %r8466, %r1685, %r1686, %r2;
	// inline asm
	ld.u32 	%r1689, [%rd102];
	ld.u32 	%r1690, [%rd101+12];
	// inline asm
	prmt.b32 %r8459, %r1689, %r1690, %r2;
	// inline asm
	ld.u32 	%r1693, [%rd101+12];
	ld.u32 	%r1694, [%rd101+8];
	// inline asm
	prmt.b32 %r8460, %r1693, %r1694, %r2;
	// inline asm
	ld.u32 	%r1697, [%rd101+8];
	ld.u32 	%r1698, [%rd101+4];
	// inline asm
	prmt.b32 %r8461, %r1697, %r1698, %r2;
	// inline asm
	ld.u32 	%r1701, [%rd101+4];
	ld.u32 	%r1702, [%rd101];
	// inline asm
	prmt.b32 %r8462, %r1701, %r1702, %r2;
	// inline asm
	ld.u32 	%r1705, [%rd101];
	ld.u32 	%r1706, [%rd100+12];
	// inline asm
	prmt.b32 %r8455, %r1705, %r1706, %r2;
	// inline asm
	ld.u32 	%r1709, [%rd100+12];
	ld.u32 	%r1710, [%rd100+8];
	// inline asm
	prmt.b32 %r8456, %r1709, %r1710, %r2;
	// inline asm
	ld.u32 	%r1713, [%rd100+8];
	ld.u32 	%r1714, [%rd100+4];
	// inline asm
	prmt.b32 %r8457, %r1713, %r1714, %r2;
	// inline asm
	ld.u32 	%r1717, [%rd100+4];
	ld.u32 	%r1718, [%rd100];
	// inline asm
	prmt.b32 %r8458, %r1717, %r1718, %r2;
	// inline asm
	ld.u32 	%r1721, [%rd100];
	ld.u32 	%r1722, [%rd99+12];
	// inline asm
	prmt.b32 %r8451, %r1721, %r1722, %r2;
	// inline asm
	ld.u32 	%r1725, [%rd99+12];
	ld.u32 	%r1726, [%rd99+8];
	// inline asm
	prmt.b32 %r8452, %r1725, %r1726, %r2;
	// inline asm
	ld.u32 	%r1729, [%rd99+8];
	ld.u32 	%r1730, [%rd99+4];
	// inline asm
	prmt.b32 %r8453, %r1729, %r1730, %r2;
	// inline asm
	ld.u32 	%r1733, [%rd99+4];
	ld.u32 	%r1734, [%rd99];
	// inline asm
	prmt.b32 %r8454, %r1733, %r1734, %r2;
	// inline asm
	ld.u32 	%r1737, [%rd99];
	ld.u32 	%r1738, [%rd98+12];
	// inline asm
	prmt.b32 %r8447, %r1737, %r1738, %r2;
	// inline asm
	ld.u32 	%r1741, [%rd98+12];
	ld.u32 	%r1742, [%rd98+8];
	// inline asm
	prmt.b32 %r8448, %r1741, %r1742, %r2;
	// inline asm
	ld.u32 	%r1745, [%rd98+8];
	ld.u32 	%r1746, [%rd98+4];
	// inline asm
	prmt.b32 %r8449, %r1745, %r1746, %r2;
	// inline asm
	ld.u32 	%r1749, [%rd98+4];
	ld.u32 	%r1750, [%rd98];
	// inline asm
	prmt.b32 %r8450, %r1749, %r1750, %r2;
	// inline asm
	ld.u32 	%r1753, [%rd98];
	ld.u32 	%r1754, [%rd97+12];
	// inline asm
	prmt.b32 %r8443, %r1753, %r1754, %r2;
	// inline asm
	ld.u32 	%r1757, [%rd97+12];
	ld.u32 	%r1758, [%rd97+8];
	// inline asm
	prmt.b32 %r8444, %r1757, %r1758, %r2;
	// inline asm
	ld.u32 	%r1761, [%rd97+8];
	ld.u32 	%r1762, [%rd97+4];
	// inline asm
	prmt.b32 %r8445, %r1761, %r1762, %r2;
	// inline asm
	ld.u32 	%r1765, [%rd97+4];
	ld.u32 	%r1766, [%rd97];
	// inline asm
	prmt.b32 %r8446, %r1765, %r1766, %r2;
	// inline asm
	ld.u32 	%r1769, [%rd97];
	ld.u32 	%r1770, [%rd96+12];
	// inline asm
	prmt.b32 %r1768, %r1769, %r1770, %r2;
	// inline asm
	st.u32 	[%rd102+12], %r1768;
	ld.u32 	%r1773, [%rd96+12];
	ld.u32 	%r1774, [%rd96+8];
	// inline asm
	prmt.b32 %r1772, %r1773, %r1774, %r2;
	// inline asm
	st.u32 	[%rd102+8], %r1772;
	ld.u32 	%r1777, [%rd96+8];
	ld.u32 	%r1778, [%rd96+4];
	// inline asm
	prmt.b32 %r1776, %r1777, %r1778, %r2;
	// inline asm
	st.u32 	[%rd102+4], %r1776;
	ld.u32 	%r1781, [%rd96+4];
	ld.u32 	%r1782, [%rd96];
	// inline asm
	prmt.b32 %r1780, %r1781, %r1782, %r2;
	// inline asm
	st.u32 	[%rd102], %r1780;
	ld.u32 	%r1785, [%rd96];
	ld.u32 	%r1786, [%rd95+12];
	// inline asm
	prmt.b32 %r1784, %r1785, %r1786, %r2;
	// inline asm
	st.u32 	[%rd101+12], %r1784;
	ld.u32 	%r1789, [%rd95+12];
	ld.u32 	%r1790, [%rd95+8];
	// inline asm
	prmt.b32 %r1788, %r1789, %r1790, %r2;
	// inline asm
	st.u32 	[%rd101+8], %r1788;
	ld.u32 	%r1793, [%rd95+8];
	ld.u32 	%r1794, [%rd95+4];
	// inline asm
	prmt.b32 %r1792, %r1793, %r1794, %r2;
	// inline asm
	st.u32 	[%rd101+4], %r1792;
	ld.u32 	%r1797, [%rd95+4];
	ld.u32 	%r1798, [%rd95];
	// inline asm
	prmt.b32 %r1796, %r1797, %r1798, %r2;
	// inline asm
	st.u32 	[%rd101], %r1796;
	ld.u32 	%r1801, [%rd95];
	// inline asm
	prmt.b32 %r1800, %r1801, %r8442, %r2;
	// inline asm
	st.u32 	[%rd100+12], %r1800;
	st.u32 	[%rd100+8], %r8442;
	st.u32 	[%rd100+4], %r8442;
	st.u32 	[%rd100], %r8442;
	st.u32 	[%rd99+12], %r8442;
	st.u32 	[%rd99+8], %r8442;
	st.u32 	[%rd99+4], %r8442;
	st.u32 	[%rd99], %r8442;
	st.u32 	[%rd98+12], %r8442;
	st.u32 	[%rd98+8], %r8442;
	st.u32 	[%rd98+4], %r8442;
	st.u32 	[%rd98], %r8442;
	st.u32 	[%rd97+12], %r8442;
	st.u32 	[%rd97+8], %r8442;
	st.u32 	[%rd97+4], %r8442;
	st.u32 	[%rd97], %r8442;
	st.u32 	[%rd96+12], %r8442;
	st.u32 	[%rd96+8], %r8442;
	st.u32 	[%rd96+4], %r8442;
	st.u32 	[%rd96], %r8442;
	st.u32 	[%rd95+12], %r8442;
	st.u32 	[%rd95+8], %r8442;
	mov.u64 	%rd111, 0;
	st.u32 	[%rd95+4], %rd111;
	st.u32 	[%rd95], %rd111;
	bra.uni 	BB1_83;

BB1_122:
	setp.eq.s32	%p78, %r1, 15;
	@%p78 bra 	BB1_123;
	bra.uni 	BB1_171;

BB1_123:
	ld.u32 	%r6765, [%rd99];
	ld.u32 	%r6766, [%rd98+12];
	// inline asm
	prmt.b32 %r6764, %r6765, %r6766, %r2;
	// inline asm
	st.u32 	[%rd102+12], %r6764;
	ld.u32 	%r6769, [%rd98+12];
	ld.u32 	%r6770, [%rd98+8];
	// inline asm
	prmt.b32 %r6768, %r6769, %r6770, %r2;
	// inline asm
	st.u32 	[%rd102+8], %r6768;
	ld.u32 	%r6773, [%rd98+8];
	ld.u32 	%r6774, [%rd98+4];
	// inline asm
	prmt.b32 %r6772, %r6773, %r6774, %r2;
	// inline asm
	st.u32 	[%rd102+4], %r6772;
	ld.u32 	%r6777, [%rd98+4];
	ld.u32 	%r6778, [%rd98];
	// inline asm
	prmt.b32 %r6776, %r6777, %r6778, %r2;
	// inline asm
	st.u32 	[%rd102], %r6776;
	ld.u32 	%r6781, [%rd98];
	ld.u32 	%r6782, [%rd97+12];
	// inline asm
	prmt.b32 %r6780, %r6781, %r6782, %r2;
	// inline asm
	st.u32 	[%rd101+12], %r6780;
	ld.u32 	%r6785, [%rd97+12];
	ld.u32 	%r6786, [%rd97+8];
	// inline asm
	prmt.b32 %r6784, %r6785, %r6786, %r2;
	// inline asm
	st.u32 	[%rd101+8], %r6784;
	ld.u32 	%r6789, [%rd97+8];
	ld.u32 	%r6790, [%rd97+4];
	// inline asm
	prmt.b32 %r6788, %r6789, %r6790, %r2;
	// inline asm
	st.u32 	[%rd101+4], %r6788;
	ld.u32 	%r6793, [%rd97+4];
	ld.u32 	%r6794, [%rd97];
	// inline asm
	prmt.b32 %r6792, %r6793, %r6794, %r2;
	// inline asm
	st.u32 	[%rd101], %r6792;
	ld.u32 	%r6797, [%rd97];
	ld.u32 	%r6798, [%rd96+12];
	// inline asm
	prmt.b32 %r6796, %r6797, %r6798, %r2;
	// inline asm
	st.u32 	[%rd100+12], %r6796;
	ld.u32 	%r6801, [%rd96+12];
	ld.u32 	%r6802, [%rd96+8];
	// inline asm
	prmt.b32 %r6800, %r6801, %r6802, %r2;
	// inline asm
	st.u32 	[%rd100+8], %r6800;
	ld.u32 	%r6805, [%rd96+8];
	ld.u32 	%r6806, [%rd96+4];
	// inline asm
	prmt.b32 %r6804, %r6805, %r6806, %r2;
	// inline asm
	st.u32 	[%rd100+4], %r6804;
	ld.u32 	%r6809, [%rd96+4];
	ld.u32 	%r6810, [%rd96];
	// inline asm
	prmt.b32 %r6808, %r6809, %r6810, %r2;
	// inline asm
	st.u32 	[%rd100], %r6808;
	ld.u32 	%r6813, [%rd96];
	ld.u32 	%r6814, [%rd95+12];
	// inline asm
	prmt.b32 %r6812, %r6813, %r6814, %r2;
	// inline asm
	st.u32 	[%rd99+12], %r6812;
	ld.u32 	%r6817, [%rd95+12];
	ld.u32 	%r6818, [%rd95+8];
	// inline asm
	prmt.b32 %r6816, %r6817, %r6818, %r2;
	// inline asm
	st.u32 	[%rd99+8], %r6816;
	ld.u32 	%r6821, [%rd95+8];
	ld.u32 	%r6822, [%rd95+4];
	// inline asm
	prmt.b32 %r6820, %r6821, %r6822, %r2;
	// inline asm
	st.u32 	[%rd99+4], %r6820;
	ld.u32 	%r6825, [%rd95+4];
	ld.u32 	%r6826, [%rd95];
	// inline asm
	prmt.b32 %r6824, %r6825, %r6826, %r2;
	// inline asm
	st.u32 	[%rd99], %r6824;
	ld.u32 	%r6829, [%rd95];
	mov.u32 	%r8476, 0;
	// inline asm
	prmt.b32 %r6828, %r6829, %r8476, %r2;
	// inline asm
	st.u32 	[%rd98+12], %r6828;
	st.u32 	[%rd98+8], %r8476;
	st.u32 	[%rd98+4], %r8476;
	st.u32 	[%rd98], %r8476;
	st.u32 	[%rd97+12], %r8476;
	st.u32 	[%rd97+8], %r8476;
	st.u32 	[%rd97+4], %r8476;
	st.u32 	[%rd97], %r8476;
	st.u32 	[%rd96+12], %r8476;
	st.u32 	[%rd96+8], %r8476;
	st.u32 	[%rd96+4], %r8476;
	st.u32 	[%rd96], %r8476;
	st.u32 	[%rd95+12], %r8476;
	st.u32 	[%rd95+8], %r8476;
	mov.u64 	%rd1166, 0;
	st.u32 	[%rd95+4], %rd1166;
	st.u32 	[%rd95], %rd1166;
	bra.uni 	BB1_172;

BB1_32:
	setp.eq.s32	%p30, %r1, 15;
	@%p30 bra 	BB1_33;
	bra.uni 	BB1_87;

BB1_33:
	ld.u32 	%r2830, [%rd102+12];
	mov.u32 	%r8442, 0;
	// inline asm
	prmt.b32 %r8455, %r8442, %r2830, %r2;
	// inline asm
	ld.u32 	%r2833, [%rd102+12];
	ld.u32 	%r2834, [%rd102+8];
	// inline asm
	prmt.b32 %r8456, %r2833, %r2834, %r2;
	// inline asm
	ld.u32 	%r2837, [%rd102+8];
	ld.u32 	%r2838, [%rd102+4];
	// inline asm
	prmt.b32 %r8457, %r2837, %r2838, %r2;
	// inline asm
	ld.u32 	%r2841, [%rd102+4];
	ld.u32 	%r2842, [%rd102];
	// inline asm
	prmt.b32 %r8458, %r2841, %r2842, %r2;
	// inline asm
	ld.u32 	%r2845, [%rd102];
	ld.u32 	%r2846, [%rd101+12];
	// inline asm
	prmt.b32 %r8451, %r2845, %r2846, %r2;
	// inline asm
	ld.u32 	%r2849, [%rd101+12];
	ld.u32 	%r2850, [%rd101+8];
	// inline asm
	prmt.b32 %r8452, %r2849, %r2850, %r2;
	// inline asm
	ld.u32 	%r2853, [%rd101+8];
	ld.u32 	%r2854, [%rd101+4];
	// inline asm
	prmt.b32 %r8453, %r2853, %r2854, %r2;
	// inline asm
	ld.u32 	%r2857, [%rd101+4];
	ld.u32 	%r2858, [%rd101];
	// inline asm
	prmt.b32 %r8454, %r2857, %r2858, %r2;
	// inline asm
	ld.u32 	%r2861, [%rd101];
	ld.u32 	%r2862, [%rd100+12];
	// inline asm
	prmt.b32 %r8447, %r2861, %r2862, %r2;
	// inline asm
	ld.u32 	%r2865, [%rd100+12];
	ld.u32 	%r2866, [%rd100+8];
	// inline asm
	prmt.b32 %r8448, %r2865, %r2866, %r2;
	// inline asm
	ld.u32 	%r2869, [%rd100+8];
	ld.u32 	%r2870, [%rd100+4];
	// inline asm
	prmt.b32 %r8449, %r2869, %r2870, %r2;
	// inline asm
	ld.u32 	%r2873, [%rd100+4];
	ld.u32 	%r2874, [%rd100];
	// inline asm
	prmt.b32 %r8450, %r2873, %r2874, %r2;
	// inline asm
	ld.u32 	%r2877, [%rd100];
	ld.u32 	%r2878, [%rd99+12];
	// inline asm
	prmt.b32 %r8443, %r2877, %r2878, %r2;
	// inline asm
	ld.u32 	%r2881, [%rd99+12];
	ld.u32 	%r2882, [%rd99+8];
	// inline asm
	prmt.b32 %r8444, %r2881, %r2882, %r2;
	// inline asm
	ld.u32 	%r2885, [%rd99+8];
	ld.u32 	%r2886, [%rd99+4];
	// inline asm
	prmt.b32 %r8445, %r2885, %r2886, %r2;
	// inline asm
	ld.u32 	%r2889, [%rd99+4];
	ld.u32 	%r2890, [%rd99];
	// inline asm
	prmt.b32 %r8446, %r2889, %r2890, %r2;
	// inline asm
	ld.u32 	%r2893, [%rd99];
	ld.u32 	%r2894, [%rd98+12];
	// inline asm
	prmt.b32 %r2892, %r2893, %r2894, %r2;
	// inline asm
	st.u32 	[%rd102+12], %r2892;
	ld.u32 	%r2897, [%rd98+12];
	ld.u32 	%r2898, [%rd98+8];
	// inline asm
	prmt.b32 %r2896, %r2897, %r2898, %r2;
	// inline asm
	st.u32 	[%rd102+8], %r2896;
	ld.u32 	%r2901, [%rd98+8];
	ld.u32 	%r2902, [%rd98+4];
	// inline asm
	prmt.b32 %r2900, %r2901, %r2902, %r2;
	// inline asm
	st.u32 	[%rd102+4], %r2900;
	ld.u32 	%r2905, [%rd98+4];
	ld.u32 	%r2906, [%rd98];
	// inline asm
	prmt.b32 %r2904, %r2905, %r2906, %r2;
	// inline asm
	st.u32 	[%rd102], %r2904;
	ld.u32 	%r2909, [%rd98];
	ld.u32 	%r2910, [%rd97+12];
	// inline asm
	prmt.b32 %r2908, %r2909, %r2910, %r2;
	// inline asm
	st.u32 	[%rd101+12], %r2908;
	ld.u32 	%r2913, [%rd97+12];
	ld.u32 	%r2914, [%rd97+8];
	// inline asm
	prmt.b32 %r2912, %r2913, %r2914, %r2;
	// inline asm
	st.u32 	[%rd101+8], %r2912;
	ld.u32 	%r2917, [%rd97+8];
	ld.u32 	%r2918, [%rd97+4];
	// inline asm
	prmt.b32 %r2916, %r2917, %r2918, %r2;
	// inline asm
	st.u32 	[%rd101+4], %r2916;
	ld.u32 	%r2921, [%rd97+4];
	ld.u32 	%r2922, [%rd97];
	// inline asm
	prmt.b32 %r2920, %r2921, %r2922, %r2;
	// inline asm
	st.u32 	[%rd101], %r2920;
	ld.u32 	%r2925, [%rd97];
	ld.u32 	%r2926, [%rd96+12];
	// inline asm
	prmt.b32 %r2924, %r2925, %r2926, %r2;
	// inline asm
	st.u32 	[%rd100+12], %r2924;
	ld.u32 	%r2929, [%rd96+12];
	ld.u32 	%r2930, [%rd96+8];
	// inline asm
	prmt.b32 %r2928, %r2929, %r2930, %r2;
	// inline asm
	st.u32 	[%rd100+8], %r2928;
	ld.u32 	%r2933, [%rd96+8];
	ld.u32 	%r2934, [%rd96+4];
	// inline asm
	prmt.b32 %r2932, %r2933, %r2934, %r2;
	// inline asm
	st.u32 	[%rd100+4], %r2932;
	ld.u32 	%r2937, [%rd96+4];
	ld.u32 	%r2938, [%rd96];
	// inline asm
	prmt.b32 %r2936, %r2937, %r2938, %r2;
	// inline asm
	st.u32 	[%rd100], %r2936;
	ld.u32 	%r2941, [%rd96];
	ld.u32 	%r2942, [%rd95+12];
	// inline asm
	prmt.b32 %r2940, %r2941, %r2942, %r2;
	// inline asm
	st.u32 	[%rd99+12], %r2940;
	ld.u32 	%r2945, [%rd95+12];
	ld.u32 	%r2946, [%rd95+8];
	// inline asm
	prmt.b32 %r2944, %r2945, %r2946, %r2;
	// inline asm
	st.u32 	[%rd99+8], %r2944;
	ld.u32 	%r2949, [%rd95+8];
	ld.u32 	%r2950, [%rd95+4];
	// inline asm
	prmt.b32 %r2948, %r2949, %r2950, %r2;
	// inline asm
	st.u32 	[%rd99+4], %r2948;
	ld.u32 	%r2953, [%rd95+4];
	ld.u32 	%r2954, [%rd95];
	// inline asm
	prmt.b32 %r2952, %r2953, %r2954, %r2;
	// inline asm
	st.u32 	[%rd99], %r2952;
	ld.u32 	%r2957, [%rd95];
	// inline asm
	prmt.b32 %r2956, %r2957, %r8442, %r2;
	// inline asm
	st.u32 	[%rd98+12], %r2956;
	st.u32 	[%rd98+8], %r8442;
	st.u32 	[%rd98+4], %r8442;
	st.u32 	[%rd98], %r8442;
	st.u32 	[%rd97+12], %r8442;
	st.u32 	[%rd97+8], %r8442;
	st.u32 	[%rd97+4], %r8442;
	st.u32 	[%rd97], %r8442;
	st.u32 	[%rd96+12], %r8442;
	st.u32 	[%rd96+8], %r8442;
	st.u32 	[%rd96+4], %r8442;
	st.u32 	[%rd96], %r8442;
	st.u32 	[%rd95+12], %r8442;
	st.u32 	[%rd95+8], %r8442;
	mov.u64 	%rd119, 0;
	st.u32 	[%rd95+4], %rd119;
	st.u32 	[%rd95], %rd119;
	bra.uni 	BB1_81;

BB1_153:
	setp.ne.s32	%p55, %r1, 31;
	@%p55 bra 	BB1_171;

	ld.u32 	%r6205, [%rd95];
	mov.u32 	%r8476, 0;
	// inline asm
	prmt.b32 %r6204, %r6205, %r8476, %r2;
	// inline asm
	st.u32 	[%rd102+12], %r6204;
	st.u32 	[%rd102+8], %r8476;
	st.u32 	[%rd102+4], %r8476;
	st.u32 	[%rd102], %r8476;
	st.u32 	[%rd101+12], %r8476;
	st.u32 	[%rd101+8], %r8476;
	st.u32 	[%rd101+4], %r8476;
	st.u32 	[%rd101], %r8476;
	st.u32 	[%rd100+12], %r8476;
	st.u32 	[%rd100+8], %r8476;
	st.u32 	[%rd100+4], %r8476;
	st.u32 	[%rd100], %r8476;
	st.u32 	[%rd99+12], %r8476;
	st.u32 	[%rd99+8], %r8476;
	st.u32 	[%rd99+4], %r8476;
	st.u32 	[%rd99], %r8476;
	st.u32 	[%rd98+12], %r8476;
	st.u32 	[%rd98+8], %r8476;
	st.u32 	[%rd98+4], %r8476;
	st.u32 	[%rd98], %r8476;
	st.u32 	[%rd97+12], %r8476;
	st.u32 	[%rd97+8], %r8476;
	st.u32 	[%rd97+4], %r8476;
	st.u32 	[%rd97], %r8476;
	st.u32 	[%rd96+12], %r8476;
	st.u32 	[%rd96+8], %r8476;
	st.u32 	[%rd96+4], %r8476;
	st.u32 	[%rd96], %r8476;
	st.u32 	[%rd95+12], %r8476;
	st.u32 	[%rd95+8], %r8476;
	mov.u64 	%rd1150, 0;
	st.u32 	[%rd95+4], %rd1150;
	st.u32 	[%rd95], %rd1150;
	bra.uni 	BB1_172;

BB1_171:
	ld.u32 	%r8476, [%rd95];

BB1_172:
	ld.u32 	%r8347, [%rd94+64];
	or.b32  	%r8348, %r8347, %r8476;
	ld.u32 	%r8349, [%rd94+68];
	ld.u32 	%r8350, [%rd94+72];
	ld.u32 	%r8351, [%rd94+76];
	ld.u32 	%r8352, [%rd94+80];
	ld.u32 	%r8353, [%rd94+84];
	ld.u32 	%r8354, [%rd94+88];
	ld.u32 	%r8355, [%rd94+92];
	ld.u32 	%r8356, [%rd94+96];
	ld.u32 	%r8357, [%rd94+100];
	ld.u32 	%r8358, [%rd94+104];
	ld.u32 	%r8359, [%rd94+108];
	ld.u32 	%r8360, [%rd94+112];
	ld.u32 	%r8361, [%rd94+116];
	ld.u32 	%r8362, [%rd94+120];
	ld.u32 	%r8363, [%rd94+124];
	ld.u32 	%r8364, [%rd94+128];
	ld.u32 	%r8365, [%rd94+132];
	ld.u32 	%r8366, [%rd94+136];
	ld.u32 	%r8367, [%rd94+140];
	ld.u32 	%r8368, [%rd94+144];
	ld.u32 	%r8369, [%rd94+148];
	ld.u32 	%r8370, [%rd94+152];
	ld.u32 	%r8371, [%rd94+156];
	ld.u32 	%r8372, [%rd94+160];
	ld.u32 	%r8373, [%rd94+164];
	ld.u32 	%r8374, [%rd94+168];
	ld.u32 	%r8375, [%rd94+172];
	ld.u32 	%r8376, [%rd94+176];
	ld.u32 	%r8377, [%rd94+180];
	ld.u32 	%r8378, [%rd94+184];
	ld.u32 	%r8379, [%rd94+188];
	st.u32 	[%rd94+64], %r8348;
	ld.u32 	%r8380, [%rd95+4];
	or.b32  	%r8381, %r8349, %r8380;
	st.u32 	[%rd94+68], %r8381;
	ld.u32 	%r8382, [%rd95+8];
	or.b32  	%r8383, %r8350, %r8382;
	st.u32 	[%rd94+72], %r8383;
	ld.u32 	%r8384, [%rd95+12];
	or.b32  	%r8385, %r8351, %r8384;
	st.u32 	[%rd94+76], %r8385;
	ld.u32 	%r8386, [%rd96];
	or.b32  	%r8387, %r8352, %r8386;
	st.u32 	[%rd94+80], %r8387;
	ld.u32 	%r8388, [%rd96+4];
	or.b32  	%r8389, %r8353, %r8388;
	st.u32 	[%rd94+84], %r8389;
	ld.u32 	%r8390, [%rd96+8];
	or.b32  	%r8391, %r8354, %r8390;
	st.u32 	[%rd94+88], %r8391;
	ld.u32 	%r8392, [%rd96+12];
	or.b32  	%r8393, %r8355, %r8392;
	st.u32 	[%rd94+92], %r8393;
	ld.u32 	%r8394, [%rd97];
	or.b32  	%r8395, %r8356, %r8394;
	st.u32 	[%rd94+96], %r8395;
	ld.u32 	%r8396, [%rd97+4];
	or.b32  	%r8397, %r8357, %r8396;
	st.u32 	[%rd94+100], %r8397;
	ld.u32 	%r8398, [%rd97+8];
	or.b32  	%r8399, %r8358, %r8398;
	st.u32 	[%rd94+104], %r8399;
	ld.u32 	%r8400, [%rd97+12];
	or.b32  	%r8401, %r8359, %r8400;
	st.u32 	[%rd94+108], %r8401;
	ld.u32 	%r8402, [%rd98];
	or.b32  	%r8403, %r8360, %r8402;
	st.u32 	[%rd94+112], %r8403;
	ld.u32 	%r8404, [%rd98+4];
	or.b32  	%r8405, %r8361, %r8404;
	st.u32 	[%rd94+116], %r8405;
	ld.u32 	%r8406, [%rd98+8];
	or.b32  	%r8407, %r8362, %r8406;
	st.u32 	[%rd94+120], %r8407;
	ld.u32 	%r8408, [%rd98+12];
	or.b32  	%r8409, %r8363, %r8408;
	st.u32 	[%rd94+124], %r8409;
	ld.u32 	%r8410, [%rd99];
	or.b32  	%r8411, %r8364, %r8410;
	st.u32 	[%rd94+128], %r8411;
	ld.u32 	%r8412, [%rd99+4];
	or.b32  	%r8413, %r8365, %r8412;
	st.u32 	[%rd94+132], %r8413;
	ld.u32 	%r8414, [%rd99+8];
	or.b32  	%r8415, %r8366, %r8414;
	st.u32 	[%rd94+136], %r8415;
	ld.u32 	%r8416, [%rd99+12];
	or.b32  	%r8417, %r8367, %r8416;
	st.u32 	[%rd94+140], %r8417;
	ld.u32 	%r8418, [%rd100];
	or.b32  	%r8419, %r8368, %r8418;
	st.u32 	[%rd94+144], %r8419;
	ld.u32 	%r8420, [%rd100+4];
	or.b32  	%r8421, %r8369, %r8420;
	st.u32 	[%rd94+148], %r8421;
	ld.u32 	%r8422, [%rd100+8];
	or.b32  	%r8423, %r8370, %r8422;
	st.u32 	[%rd94+152], %r8423;
	ld.u32 	%r8424, [%rd100+12];
	or.b32  	%r8425, %r8371, %r8424;
	st.u32 	[%rd94+156], %r8425;
	ld.u32 	%r8426, [%rd101];
	or.b32  	%r8427, %r8372, %r8426;
	st.u32 	[%rd94+160], %r8427;
	ld.u32 	%r8428, [%rd101+4];
	or.b32  	%r8429, %r8373, %r8428;
	st.u32 	[%rd94+164], %r8429;
	ld.u32 	%r8430, [%rd101+8];
	or.b32  	%r8431, %r8374, %r8430;
	st.u32 	[%rd94+168], %r8431;
	ld.u32 	%r8432, [%rd101+12];
	or.b32  	%r8433, %r8375, %r8432;
	st.u32 	[%rd94+172], %r8433;
	ld.u32 	%r8434, [%rd102];
	or.b32  	%r8435, %r8376, %r8434;
	st.u32 	[%rd94+176], %r8435;
	ld.u32 	%r8436, [%rd102+4];
	or.b32  	%r8437, %r8377, %r8436;
	st.u32 	[%rd94+180], %r8437;
	ld.u32 	%r8438, [%rd102+8];
	or.b32  	%r8439, %r8378, %r8438;
	st.u32 	[%rd94+184], %r8439;
	ld.u32 	%r8440, [%rd102+12];
	or.b32  	%r8441, %r8379, %r8440;
	st.u32 	[%rd94+188], %r8441;
	bra.uni 	BB1_173;

BB1_63:
	setp.ne.s32	%p7, %r1, 31;
	@%p7 bra 	BB1_87;

	ld.u32 	%r582, [%rd102+12];
	mov.u32 	%r8442, 0;
	// inline asm
	prmt.b32 %r8471, %r8442, %r582, %r2;
	// inline asm
	ld.u32 	%r585, [%rd102+12];
	ld.u32 	%r586, [%rd102+8];
	// inline asm
	prmt.b32 %r8472, %r585, %r586, %r2;
	// inline asm
	ld.u32 	%r589, [%rd102+8];
	ld.u32 	%r590, [%rd102+4];
	// inline asm
	prmt.b32 %r8473, %r589, %r590, %r2;
	// inline asm
	ld.u32 	%r593, [%rd102+4];
	ld.u32 	%r594, [%rd102];
	// inline asm
	prmt.b32 %r8474, %r593, %r594, %r2;
	// inline asm
	ld.u32 	%r597, [%rd102];
	ld.u32 	%r598, [%rd101+12];
	// inline asm
	prmt.b32 %r8467, %r597, %r598, %r2;
	// inline asm
	ld.u32 	%r601, [%rd101+12];
	ld.u32 	%r602, [%rd101+8];
	// inline asm
	prmt.b32 %r8468, %r601, %r602, %r2;
	// inline asm
	ld.u32 	%r605, [%rd101+8];
	ld.u32 	%r606, [%rd101+4];
	// inline asm
	prmt.b32 %r8469, %r605, %r606, %r2;
	// inline asm
	ld.u32 	%r609, [%rd101+4];
	ld.u32 	%r610, [%rd101];
	// inline asm
	prmt.b32 %r8470, %r609, %r610, %r2;
	// inline asm
	ld.u32 	%r613, [%rd101];
	ld.u32 	%r614, [%rd100+12];
	// inline asm
	prmt.b32 %r8463, %r613, %r614, %r2;
	// inline asm
	ld.u32 	%r617, [%rd100+12];
	ld.u32 	%r618, [%rd100+8];
	// inline asm
	prmt.b32 %r8464, %r617, %r618, %r2;
	// inline asm
	ld.u32 	%r621, [%rd100+8];
	ld.u32 	%r622, [%rd100+4];
	// inline asm
	prmt.b32 %r8465, %r621, %r622, %r2;
	// inline asm
	ld.u32 	%r625, [%rd100+4];
	ld.u32 	%r626, [%rd100];
	// inline asm
	prmt.b32 %r8466, %r625, %r626, %r2;
	// inline asm
	ld.u32 	%r629, [%rd100];
	ld.u32 	%r630, [%rd99+12];
	// inline asm
	prmt.b32 %r8459, %r629, %r630, %r2;
	// inline asm
	ld.u32 	%r633, [%rd99+12];
	ld.u32 	%r634, [%rd99+8];
	// inline asm
	prmt.b32 %r8460, %r633, %r634, %r2;
	// inline asm
	ld.u32 	%r637, [%rd99+8];
	ld.u32 	%r638, [%rd99+4];
	// inline asm
	prmt.b32 %r8461, %r637, %r638, %r2;
	// inline asm
	ld.u32 	%r641, [%rd99+4];
	ld.u32 	%r642, [%rd99];
	// inline asm
	prmt.b32 %r8462, %r641, %r642, %r2;
	// inline asm
	ld.u32 	%r645, [%rd99];
	ld.u32 	%r646, [%rd98+12];
	// inline asm
	prmt.b32 %r8455, %r645, %r646, %r2;
	// inline asm
	ld.u32 	%r649, [%rd98+12];
	ld.u32 	%r650, [%rd98+8];
	// inline asm
	prmt.b32 %r8456, %r649, %r650, %r2;
	// inline asm
	ld.u32 	%r653, [%rd98+8];
	ld.u32 	%r654, [%rd98+4];
	// inline asm
	prmt.b32 %r8457, %r653, %r654, %r2;
	// inline asm
	ld.u32 	%r657, [%rd98+4];
	ld.u32 	%r658, [%rd98];
	// inline asm
	prmt.b32 %r8458, %r657, %r658, %r2;
	// inline asm
	ld.u32 	%r661, [%rd98];
	ld.u32 	%r662, [%rd97+12];
	// inline asm
	prmt.b32 %r8451, %r661, %r662, %r2;
	// inline asm
	ld.u32 	%r665, [%rd97+12];
	ld.u32 	%r666, [%rd97+8];
	// inline asm
	prmt.b32 %r8452, %r665, %r666, %r2;
	// inline asm
	ld.u32 	%r669, [%rd97+8];
	ld.u32 	%r670, [%rd97+4];
	// inline asm
	prmt.b32 %r8453, %r669, %r670, %r2;
	// inline asm
	ld.u32 	%r673, [%rd97+4];
	ld.u32 	%r674, [%rd97];
	// inline asm
	prmt.b32 %r8454, %r673, %r674, %r2;
	// inline asm
	ld.u32 	%r677, [%rd97];
	ld.u32 	%r678, [%rd96+12];
	// inline asm
	prmt.b32 %r8447, %r677, %r678, %r2;
	// inline asm
	ld.u32 	%r681, [%rd96+12];
	ld.u32 	%r682, [%rd96+8];
	// inline asm
	prmt.b32 %r8448, %r681, %r682, %r2;
	// inline asm
	ld.u32 	%r685, [%rd96+8];
	ld.u32 	%r686, [%rd96+4];
	// inline asm
	prmt.b32 %r8449, %r685, %r686, %r2;
	// inline asm
	ld.u32 	%r689, [%rd96+4];
	ld.u32 	%r690, [%rd96];
	// inline asm
	prmt.b32 %r8450, %r689, %r690, %r2;
	// inline asm
	ld.u32 	%r693, [%rd96];
	ld.u32 	%r694, [%rd95+12];
	// inline asm
	prmt.b32 %r8443, %r693, %r694, %r2;
	// inline asm
	ld.u32 	%r697, [%rd95+12];
	ld.u32 	%r698, [%rd95+8];
	// inline asm
	prmt.b32 %r8444, %r697, %r698, %r2;
	// inline asm
	ld.u32 	%r701, [%rd95+8];
	ld.u32 	%r702, [%rd95+4];
	// inline asm
	prmt.b32 %r8445, %r701, %r702, %r2;
	// inline asm
	ld.u32 	%r705, [%rd95+4];
	ld.u32 	%r706, [%rd95];
	// inline asm
	prmt.b32 %r8446, %r705, %r706, %r2;
	// inline asm
	ld.u32 	%r709, [%rd95];
	// inline asm
	prmt.b32 %r708, %r709, %r8442, %r2;
	// inline asm
	st.u32 	[%rd102+12], %r708;
	st.u32 	[%rd102+8], %r8442;
	st.u32 	[%rd102+4], %r8442;
	st.u32 	[%rd102], %r8442;
	st.u32 	[%rd101+12], %r8442;
	st.u32 	[%rd101+8], %r8442;
	st.u32 	[%rd101+4], %r8442;
	st.u32 	[%rd101], %r8442;
	st.u32 	[%rd100+12], %r8442;
	st.u32 	[%rd100+8], %r8442;
	st.u32 	[%rd100+4], %r8442;
	st.u32 	[%rd100], %r8442;
	st.u32 	[%rd99+12], %r8442;
	st.u32 	[%rd99+8], %r8442;
	st.u32 	[%rd99+4], %r8442;
	st.u32 	[%rd99], %r8442;
	st.u32 	[%rd98+12], %r8442;
	st.u32 	[%rd98+8], %r8442;
	st.u32 	[%rd98+4], %r8442;
	st.u32 	[%rd98], %r8442;
	st.u32 	[%rd97+12], %r8442;
	st.u32 	[%rd97+8], %r8442;
	st.u32 	[%rd97+4], %r8442;
	st.u32 	[%rd97], %r8442;
	st.u32 	[%rd96+12], %r8442;
	st.u32 	[%rd96+8], %r8442;
	st.u32 	[%rd96+4], %r8442;
	st.u32 	[%rd96], %r8442;
	st.u32 	[%rd95+12], %r8442;
	st.u32 	[%rd95+8], %r8442;
	mov.u64 	%rd103, 0;
	st.u32 	[%rd95+4], %rd103;
	st.u32 	[%rd95], %rd103;
	bra.uni 	BB1_89;

BB1_87:
	ld.u32 	%r8442, [%rd95];
	mov.u32 	%r8443, 0;
	mov.u32 	%r8444, %r8443;
	mov.u32 	%r8445, %r8443;
	mov.u32 	%r8446, %r8443;

BB1_88:
	mov.u32 	%r8447, %r8443;
	mov.u32 	%r8448, %r8443;
	mov.u32 	%r8449, %r8443;
	mov.u32 	%r8450, %r8443;
	mov.u32 	%r8451, %r8443;
	mov.u32 	%r8452, %r8443;
	mov.u32 	%r8453, %r8443;
	mov.u32 	%r8454, %r8443;
	mov.u32 	%r8455, %r8443;
	mov.u32 	%r8456, %r8443;
	mov.u32 	%r8457, %r8443;
	mov.u32 	%r8458, %r8443;
	mov.u32 	%r8459, %r8443;
	mov.u32 	%r8460, %r8443;
	mov.u32 	%r8461, %r8443;
	mov.u32 	%r8462, %r8443;
	mov.u32 	%r8463, %r8443;
	mov.u32 	%r8464, %r8443;
	mov.u32 	%r8465, %r8443;
	mov.u32 	%r8466, %r8443;
	mov.u32 	%r8467, %r8443;
	mov.u32 	%r8468, %r8443;
	mov.u32 	%r8469, %r8443;
	mov.u32 	%r8470, %r8443;
	mov.u32 	%r8471, %r8443;
	mov.u32 	%r8472, %r8443;
	mov.u32 	%r8473, %r8443;
	mov.u32 	%r8474, %r8443;

BB1_89:
	ld.v2.u32 	{%r5364, %r5365}, [%rd1+-128];
	ld.v2.u32 	{%r5367, %r5368}, [%rd1+-120];
	ld.v2.u32 	{%r5369, %r5370}, [%rd1+-112];
	ld.v2.u32 	{%r5371, %r5372}, [%rd1+-104];
	ld.v2.u32 	{%r5373, %r5374}, [%rd1+-96];
	ld.v2.u32 	{%r5375, %r5376}, [%rd1+-88];
	ld.v2.u32 	{%r5377, %r5378}, [%rd1+-80];
	ld.v2.u32 	{%r5379, %r5380}, [%rd1+-72];
	ld.v2.u32 	{%r5381, %r5382}, [%rd1+-64];
	ld.v2.u32 	{%r5383, %r5384}, [%rd1+-56];
	ld.v2.u32 	{%r5385, %r5386}, [%rd1+-48];
	ld.v2.u32 	{%r5387, %r5388}, [%rd1+-40];
	ld.v2.u32 	{%r5389, %r5390}, [%rd1+-32];
	ld.v2.u32 	{%r5391, %r5392}, [%rd1+-24];
	ld.v2.u32 	{%r5393, %r5394}, [%rd1+-16];
	ld.v2.u32 	{%r5395, %r5396}, [%rd1+-8];
	or.b32  	%r5397, %r5364, %r8442;
	st.u32 	[%rd1+-128], %r5397;
	ld.u32 	%r5399, [%rd95+4];
	or.b32  	%r5400, %r5365, %r5399;
	st.u32 	[%rd1+-124], %r5400;
	ld.u32 	%r5401, [%rd95+8];
	or.b32  	%r5403, %r5367, %r5401;
	st.u32 	[%rd1+-120], %r5403;
	ld.u32 	%r5405, [%rd95+12];
	or.b32  	%r5406, %r5368, %r5405;
	st.u32 	[%rd1+-116], %r5406;
	ld.u32 	%r5407, [%rd96];
	or.b32  	%r5409, %r5369, %r5407;
	st.u32 	[%rd1+-112], %r5409;
	ld.u32 	%r5411, [%rd96+4];
	or.b32  	%r5412, %r5370, %r5411;
	st.u32 	[%rd1+-108], %r5412;
	ld.u32 	%r5413, [%rd96+8];
	or.b32  	%r5415, %r5371, %r5413;
	st.u32 	[%rd1+-104], %r5415;
	ld.u32 	%r5417, [%rd96+12];
	or.b32  	%r5418, %r5372, %r5417;
	st.u32 	[%rd1+-100], %r5418;
	ld.u32 	%r5419, [%rd97];
	or.b32  	%r5421, %r5373, %r5419;
	st.u32 	[%rd1+-96], %r5421;
	ld.u32 	%r5423, [%rd97+4];
	or.b32  	%r5424, %r5374, %r5423;
	st.u32 	[%rd1+-92], %r5424;
	ld.u32 	%r5425, [%rd97+8];
	or.b32  	%r5427, %r5375, %r5425;
	st.u32 	[%rd1+-88], %r5427;
	ld.u32 	%r5429, [%rd97+12];
	or.b32  	%r5430, %r5376, %r5429;
	st.u32 	[%rd1+-84], %r5430;
	ld.u32 	%r5431, [%rd98];
	or.b32  	%r5433, %r5377, %r5431;
	st.u32 	[%rd1+-80], %r5433;
	ld.u32 	%r5435, [%rd98+4];
	or.b32  	%r5436, %r5378, %r5435;
	st.u32 	[%rd1+-76], %r5436;
	ld.u32 	%r5437, [%rd98+8];
	or.b32  	%r5439, %r5379, %r5437;
	st.u32 	[%rd1+-72], %r5439;
	ld.u32 	%r5441, [%rd98+12];
	or.b32  	%r5442, %r5380, %r5441;
	st.u32 	[%rd1+-68], %r5442;
	ld.u32 	%r5443, [%rd99];
	or.b32  	%r5445, %r5381, %r5443;
	st.u32 	[%rd1+-64], %r5445;
	ld.u32 	%r5447, [%rd99+4];
	or.b32  	%r5448, %r5382, %r5447;
	st.u32 	[%rd1+-60], %r5448;
	ld.u32 	%r5449, [%rd99+8];
	or.b32  	%r5451, %r5383, %r5449;
	st.u32 	[%rd1+-56], %r5451;
	ld.u32 	%r5453, [%rd99+12];
	or.b32  	%r5454, %r5384, %r5453;
	st.u32 	[%rd1+-52], %r5454;
	ld.u32 	%r5455, [%rd100];
	or.b32  	%r5457, %r5385, %r5455;
	st.u32 	[%rd1+-48], %r5457;
	ld.u32 	%r5459, [%rd100+4];
	or.b32  	%r5460, %r5386, %r5459;
	st.u32 	[%rd1+-44], %r5460;
	ld.u32 	%r5461, [%rd100+8];
	or.b32  	%r5463, %r5387, %r5461;
	st.u32 	[%rd1+-40], %r5463;
	ld.u32 	%r5465, [%rd100+12];
	or.b32  	%r5466, %r5388, %r5465;
	st.u32 	[%rd1+-36], %r5466;
	ld.u32 	%r5467, [%rd101];
	or.b32  	%r5469, %r5389, %r5467;
	st.u32 	[%rd1+-32], %r5469;
	ld.u32 	%r5471, [%rd101+4];
	or.b32  	%r5472, %r5390, %r5471;
	st.u32 	[%rd1+-28], %r5472;
	ld.u32 	%r5473, [%rd101+8];
	or.b32  	%r5475, %r5391, %r5473;
	st.u32 	[%rd1+-24], %r5475;
	ld.u32 	%r5477, [%rd101+12];
	or.b32  	%r5478, %r5392, %r5477;
	st.u32 	[%rd1+-20], %r5478;
	ld.u32 	%r5479, [%rd102];
	or.b32  	%r5481, %r5393, %r5479;
	st.u32 	[%rd1+-16], %r5481;
	ld.u32 	%r5483, [%rd102+4];
	or.b32  	%r5484, %r5394, %r5483;
	st.u32 	[%rd1+-12], %r5484;
	ld.u32 	%r5485, [%rd102+8];
	or.b32  	%r5487, %r5395, %r5485;
	st.u32 	[%rd1+-8], %r5487;
	ld.u32 	%r5489, [%rd102+12];
	or.b32  	%r5490, %r5396, %r5489;
	st.u32 	[%rd1+-4], %r5490;
	mov.b64	%rd1199, {%r5400, %r5397};
	mov.b64	%rd1200, {%r5406, %r5403};
	mov.b64	%rd1201, {%r5412, %r5409};
	mov.b64	%rd1202, {%r5418, %r5415};
	mov.b64	%rd1203, {%r5424, %r5421};
	mov.b64	%rd1204, {%r5430, %r5427};
	mov.b64	%rd1205, {%r5436, %r5433};
	mov.b64	%rd1206, {%r5442, %r5439};
	mov.b64	%rd1190, {%r5448, %r5445};
	mov.b64	%rd1189, {%r5454, %r5451};
	mov.b64	%rd1188, {%r5460, %r5457};
	mov.b64	%rd1187, {%r5466, %r5463};
	mov.b64	%rd1186, {%r5472, %r5469};
	mov.b64	%rd1185, {%r5478, %r5475};
	mov.b64	%rd1184, {%r5484, %r5481};
	mov.b64	%rd1183, {%r5490, %r5487};
	ld.u64 	%rd25, [%rd1+-160];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5491,%dummy}, %rd25;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5492}, %rd25;
	}
	shf.r.wrap.b32 	%r5493, %r5492, %r5491, 14;
	shf.r.wrap.b32 	%r5494, %r5491, %r5492, 14;
	mov.b64 	%rd133, {%r5494, %r5493};
	shf.r.wrap.b32 	%r5495, %r5492, %r5491, 18;
	shf.r.wrap.b32 	%r5496, %r5491, %r5492, 18;
	mov.b64 	%rd134, {%r5496, %r5495};
	xor.b64  	%rd135, %rd134, %rd133;
	shf.l.wrap.b32 	%r5497, %r5491, %r5492, 23;
	shf.l.wrap.b32 	%r5498, %r5492, %r5491, 23;
	mov.b64 	%rd136, {%r5498, %r5497};
	xor.b64  	%rd137, %rd135, %rd136;
	ld.u64 	%rd26, [%rd1+-144];
	ld.u64 	%rd27, [%rd1+-152];
	xor.b64  	%rd138, %rd26, %rd27;
	and.b64  	%rd139, %rd138, %rd25;
	xor.b64  	%rd140, %rd139, %rd26;
	ld.u64 	%rd28, [%rd1+-136];
	add.s64 	%rd141, %rd140, %rd28;
	add.s64 	%rd142, %rd141, %rd1199;
	ld.const.u64 	%rd143, [k_sha512];
	add.s64 	%rd144, %rd142, %rd143;
	add.s64 	%rd145, %rd144, %rd137;
	ld.u64 	%rd29, [%rd1+-168];
	add.s64 	%rd146, %rd145, %rd29;
	ld.u64 	%rd30, [%rd1+-192];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5499,%dummy}, %rd30;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5500}, %rd30;
	}
	shf.r.wrap.b32 	%r5501, %r5500, %r5499, 28;
	shf.r.wrap.b32 	%r5502, %r5499, %r5500, 28;
	mov.b64 	%rd147, {%r5502, %r5501};
	shf.l.wrap.b32 	%r5503, %r5499, %r5500, 30;
	shf.l.wrap.b32 	%r5504, %r5500, %r5499, 30;
	mov.b64 	%rd148, {%r5504, %r5503};
	xor.b64  	%rd149, %rd148, %rd147;
	shf.l.wrap.b32 	%r5505, %r5499, %r5500, 25;
	shf.l.wrap.b32 	%r5506, %r5500, %r5499, 25;
	mov.b64 	%rd150, {%r5506, %r5505};
	xor.b64  	%rd151, %rd149, %rd150;
	ld.u64 	%rd31, [%rd1+-176];
	xor.b64  	%rd152, %rd31, %rd30;
	ld.u64 	%rd32, [%rd1+-184];
	xor.b64  	%rd153, %rd32, %rd30;
	and.b64  	%rd154, %rd152, %rd153;
	xor.b64  	%rd155, %rd154, %rd30;
	add.s64 	%rd156, %rd145, %rd155;
	add.s64 	%rd157, %rd156, %rd151;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5507,%dummy}, %rd146;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5508}, %rd146;
	}
	shf.r.wrap.b32 	%r5509, %r5508, %r5507, 14;
	shf.r.wrap.b32 	%r5510, %r5507, %r5508, 14;
	mov.b64 	%rd158, {%r5510, %r5509};
	shf.r.wrap.b32 	%r5511, %r5508, %r5507, 18;
	shf.r.wrap.b32 	%r5512, %r5507, %r5508, 18;
	mov.b64 	%rd159, {%r5512, %r5511};
	xor.b64  	%rd160, %rd159, %rd158;
	shf.l.wrap.b32 	%r5513, %r5507, %r5508, 23;
	shf.l.wrap.b32 	%r5514, %r5508, %r5507, 23;
	mov.b64 	%rd161, {%r5514, %r5513};
	xor.b64  	%rd162, %rd160, %rd161;
	xor.b64  	%rd163, %rd27, %rd25;
	and.b64  	%rd164, %rd146, %rd163;
	xor.b64  	%rd165, %rd164, %rd27;
	add.s64 	%rd166, %rd1200, %rd26;
	ld.const.u64 	%rd167, [k_sha512+8];
	add.s64 	%rd168, %rd166, %rd167;
	add.s64 	%rd169, %rd168, %rd165;
	add.s64 	%rd170, %rd169, %rd162;
	add.s64 	%rd171, %rd170, %rd31;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5515,%dummy}, %rd157;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5516}, %rd157;
	}
	shf.r.wrap.b32 	%r5517, %r5516, %r5515, 28;
	shf.r.wrap.b32 	%r5518, %r5515, %r5516, 28;
	mov.b64 	%rd172, {%r5518, %r5517};
	shf.l.wrap.b32 	%r5519, %r5515, %r5516, 30;
	shf.l.wrap.b32 	%r5520, %r5516, %r5515, 30;
	mov.b64 	%rd173, {%r5520, %r5519};
	xor.b64  	%rd174, %rd173, %rd172;
	shf.l.wrap.b32 	%r5521, %r5515, %r5516, 25;
	shf.l.wrap.b32 	%r5522, %r5516, %r5515, 25;
	mov.b64 	%rd175, {%r5522, %r5521};
	xor.b64  	%rd176, %rd174, %rd175;
	xor.b64  	%rd177, %rd157, %rd32;
	xor.b64  	%rd178, %rd157, %rd30;
	and.b64  	%rd179, %rd178, %rd177;
	xor.b64  	%rd180, %rd179, %rd157;
	add.s64 	%rd181, %rd170, %rd180;
	add.s64 	%rd182, %rd181, %rd176;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5523,%dummy}, %rd171;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5524}, %rd171;
	}
	shf.r.wrap.b32 	%r5525, %r5524, %r5523, 14;
	shf.r.wrap.b32 	%r5526, %r5523, %r5524, 14;
	mov.b64 	%rd183, {%r5526, %r5525};
	shf.r.wrap.b32 	%r5527, %r5524, %r5523, 18;
	shf.r.wrap.b32 	%r5528, %r5523, %r5524, 18;
	mov.b64 	%rd184, {%r5528, %r5527};
	xor.b64  	%rd185, %rd184, %rd183;
	shf.l.wrap.b32 	%r5529, %r5523, %r5524, 23;
	shf.l.wrap.b32 	%r5530, %r5524, %r5523, 23;
	mov.b64 	%rd186, {%r5530, %r5529};
	xor.b64  	%rd187, %rd185, %rd186;
	xor.b64  	%rd188, %rd146, %rd25;
	and.b64  	%rd189, %rd171, %rd188;
	xor.b64  	%rd190, %rd189, %rd25;
	add.s64 	%rd191, %rd1201, %rd27;
	ld.const.u64 	%rd192, [k_sha512+16];
	add.s64 	%rd193, %rd191, %rd192;
	add.s64 	%rd194, %rd193, %rd190;
	add.s64 	%rd195, %rd194, %rd187;
	add.s64 	%rd196, %rd195, %rd32;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5531,%dummy}, %rd182;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5532}, %rd182;
	}
	shf.r.wrap.b32 	%r5533, %r5532, %r5531, 28;
	shf.r.wrap.b32 	%r5534, %r5531, %r5532, 28;
	mov.b64 	%rd197, {%r5534, %r5533};
	shf.l.wrap.b32 	%r5535, %r5531, %r5532, 30;
	shf.l.wrap.b32 	%r5536, %r5532, %r5531, 30;
	mov.b64 	%rd198, {%r5536, %r5535};
	xor.b64  	%rd199, %rd198, %rd197;
	shf.l.wrap.b32 	%r5537, %r5531, %r5532, 25;
	shf.l.wrap.b32 	%r5538, %r5532, %r5531, 25;
	mov.b64 	%rd200, {%r5538, %r5537};
	xor.b64  	%rd201, %rd199, %rd200;
	xor.b64  	%rd202, %rd182, %rd30;
	xor.b64  	%rd203, %rd182, %rd157;
	and.b64  	%rd204, %rd203, %rd202;
	xor.b64  	%rd205, %rd204, %rd182;
	add.s64 	%rd206, %rd195, %rd205;
	add.s64 	%rd207, %rd206, %rd201;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5539,%dummy}, %rd196;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5540}, %rd196;
	}
	shf.r.wrap.b32 	%r5541, %r5540, %r5539, 14;
	shf.r.wrap.b32 	%r5542, %r5539, %r5540, 14;
	mov.b64 	%rd208, {%r5542, %r5541};
	shf.r.wrap.b32 	%r5543, %r5540, %r5539, 18;
	shf.r.wrap.b32 	%r5544, %r5539, %r5540, 18;
	mov.b64 	%rd209, {%r5544, %r5543};
	xor.b64  	%rd210, %rd209, %rd208;
	shf.l.wrap.b32 	%r5545, %r5539, %r5540, 23;
	shf.l.wrap.b32 	%r5546, %r5540, %r5539, 23;
	mov.b64 	%rd211, {%r5546, %r5545};
	xor.b64  	%rd212, %rd210, %rd211;
	xor.b64  	%rd213, %rd171, %rd146;
	and.b64  	%rd214, %rd196, %rd213;
	xor.b64  	%rd215, %rd214, %rd146;
	add.s64 	%rd216, %rd1202, %rd25;
	ld.const.u64 	%rd217, [k_sha512+24];
	add.s64 	%rd218, %rd216, %rd217;
	add.s64 	%rd219, %rd218, %rd215;
	add.s64 	%rd220, %rd219, %rd212;
	add.s64 	%rd221, %rd220, %rd30;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5547,%dummy}, %rd207;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5548}, %rd207;
	}
	shf.r.wrap.b32 	%r5549, %r5548, %r5547, 28;
	shf.r.wrap.b32 	%r5550, %r5547, %r5548, 28;
	mov.b64 	%rd222, {%r5550, %r5549};
	shf.l.wrap.b32 	%r5551, %r5547, %r5548, 30;
	shf.l.wrap.b32 	%r5552, %r5548, %r5547, 30;
	mov.b64 	%rd223, {%r5552, %r5551};
	xor.b64  	%rd224, %rd223, %rd222;
	shf.l.wrap.b32 	%r5553, %r5547, %r5548, 25;
	shf.l.wrap.b32 	%r5554, %r5548, %r5547, 25;
	mov.b64 	%rd225, {%r5554, %r5553};
	xor.b64  	%rd226, %rd224, %rd225;
	xor.b64  	%rd227, %rd207, %rd157;
	xor.b64  	%rd228, %rd207, %rd182;
	and.b64  	%rd229, %rd228, %rd227;
	xor.b64  	%rd230, %rd229, %rd207;
	add.s64 	%rd231, %rd220, %rd230;
	add.s64 	%rd232, %rd231, %rd226;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5555,%dummy}, %rd221;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5556}, %rd221;
	}
	shf.r.wrap.b32 	%r5557, %r5556, %r5555, 14;
	shf.r.wrap.b32 	%r5558, %r5555, %r5556, 14;
	mov.b64 	%rd233, {%r5558, %r5557};
	shf.r.wrap.b32 	%r5559, %r5556, %r5555, 18;
	shf.r.wrap.b32 	%r5560, %r5555, %r5556, 18;
	mov.b64 	%rd234, {%r5560, %r5559};
	xor.b64  	%rd235, %rd234, %rd233;
	shf.l.wrap.b32 	%r5561, %r5555, %r5556, 23;
	shf.l.wrap.b32 	%r5562, %r5556, %r5555, 23;
	mov.b64 	%rd236, {%r5562, %r5561};
	xor.b64  	%rd237, %rd235, %rd236;
	xor.b64  	%rd238, %rd196, %rd171;
	and.b64  	%rd239, %rd221, %rd238;
	xor.b64  	%rd240, %rd239, %rd171;
	add.s64 	%rd241, %rd146, %rd1203;
	ld.const.u64 	%rd242, [k_sha512+32];
	add.s64 	%rd243, %rd241, %rd242;
	add.s64 	%rd244, %rd243, %rd240;
	add.s64 	%rd245, %rd244, %rd237;
	add.s64 	%rd246, %rd245, %rd157;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5563,%dummy}, %rd232;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5564}, %rd232;
	}
	shf.r.wrap.b32 	%r5565, %r5564, %r5563, 28;
	shf.r.wrap.b32 	%r5566, %r5563, %r5564, 28;
	mov.b64 	%rd247, {%r5566, %r5565};
	shf.l.wrap.b32 	%r5567, %r5563, %r5564, 30;
	shf.l.wrap.b32 	%r5568, %r5564, %r5563, 30;
	mov.b64 	%rd248, {%r5568, %r5567};
	xor.b64  	%rd249, %rd248, %rd247;
	shf.l.wrap.b32 	%r5569, %r5563, %r5564, 25;
	shf.l.wrap.b32 	%r5570, %r5564, %r5563, 25;
	mov.b64 	%rd250, {%r5570, %r5569};
	xor.b64  	%rd251, %rd249, %rd250;
	xor.b64  	%rd252, %rd232, %rd182;
	xor.b64  	%rd253, %rd232, %rd207;
	and.b64  	%rd254, %rd253, %rd252;
	xor.b64  	%rd255, %rd254, %rd232;
	add.s64 	%rd256, %rd245, %rd255;
	add.s64 	%rd257, %rd256, %rd251;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5571,%dummy}, %rd246;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5572}, %rd246;
	}
	shf.r.wrap.b32 	%r5573, %r5572, %r5571, 14;
	shf.r.wrap.b32 	%r5574, %r5571, %r5572, 14;
	mov.b64 	%rd258, {%r5574, %r5573};
	shf.r.wrap.b32 	%r5575, %r5572, %r5571, 18;
	shf.r.wrap.b32 	%r5576, %r5571, %r5572, 18;
	mov.b64 	%rd259, {%r5576, %r5575};
	xor.b64  	%rd260, %rd259, %rd258;
	shf.l.wrap.b32 	%r5577, %r5571, %r5572, 23;
	shf.l.wrap.b32 	%r5578, %r5572, %r5571, 23;
	mov.b64 	%rd261, {%r5578, %r5577};
	xor.b64  	%rd262, %rd260, %rd261;
	xor.b64  	%rd263, %rd221, %rd196;
	and.b64  	%rd264, %rd246, %rd263;
	xor.b64  	%rd265, %rd264, %rd196;
	add.s64 	%rd266, %rd171, %rd1204;
	ld.const.u64 	%rd267, [k_sha512+40];
	add.s64 	%rd268, %rd266, %rd267;
	add.s64 	%rd269, %rd268, %rd265;
	add.s64 	%rd270, %rd269, %rd262;
	add.s64 	%rd271, %rd270, %rd182;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5579,%dummy}, %rd257;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5580}, %rd257;
	}
	shf.r.wrap.b32 	%r5581, %r5580, %r5579, 28;
	shf.r.wrap.b32 	%r5582, %r5579, %r5580, 28;
	mov.b64 	%rd272, {%r5582, %r5581};
	shf.l.wrap.b32 	%r5583, %r5579, %r5580, 30;
	shf.l.wrap.b32 	%r5584, %r5580, %r5579, 30;
	mov.b64 	%rd273, {%r5584, %r5583};
	xor.b64  	%rd274, %rd273, %rd272;
	shf.l.wrap.b32 	%r5585, %r5579, %r5580, 25;
	shf.l.wrap.b32 	%r5586, %r5580, %r5579, 25;
	mov.b64 	%rd275, {%r5586, %r5585};
	xor.b64  	%rd276, %rd274, %rd275;
	xor.b64  	%rd277, %rd257, %rd207;
	xor.b64  	%rd278, %rd257, %rd232;
	and.b64  	%rd279, %rd278, %rd277;
	xor.b64  	%rd280, %rd279, %rd257;
	add.s64 	%rd281, %rd270, %rd280;
	add.s64 	%rd282, %rd281, %rd276;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5587,%dummy}, %rd271;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5588}, %rd271;
	}
	shf.r.wrap.b32 	%r5589, %r5588, %r5587, 14;
	shf.r.wrap.b32 	%r5590, %r5587, %r5588, 14;
	mov.b64 	%rd283, {%r5590, %r5589};
	shf.r.wrap.b32 	%r5591, %r5588, %r5587, 18;
	shf.r.wrap.b32 	%r5592, %r5587, %r5588, 18;
	mov.b64 	%rd284, {%r5592, %r5591};
	xor.b64  	%rd285, %rd284, %rd283;
	shf.l.wrap.b32 	%r5593, %r5587, %r5588, 23;
	shf.l.wrap.b32 	%r5594, %r5588, %r5587, 23;
	mov.b64 	%rd286, {%r5594, %r5593};
	xor.b64  	%rd287, %rd285, %rd286;
	xor.b64  	%rd288, %rd246, %rd221;
	and.b64  	%rd289, %rd271, %rd288;
	xor.b64  	%rd290, %rd289, %rd221;
	add.s64 	%rd291, %rd196, %rd1205;
	ld.const.u64 	%rd292, [k_sha512+48];
	add.s64 	%rd293, %rd291, %rd292;
	add.s64 	%rd294, %rd293, %rd290;
	add.s64 	%rd295, %rd294, %rd287;
	add.s64 	%rd296, %rd295, %rd207;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5595,%dummy}, %rd282;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5596}, %rd282;
	}
	shf.r.wrap.b32 	%r5597, %r5596, %r5595, 28;
	shf.r.wrap.b32 	%r5598, %r5595, %r5596, 28;
	mov.b64 	%rd297, {%r5598, %r5597};
	shf.l.wrap.b32 	%r5599, %r5595, %r5596, 30;
	shf.l.wrap.b32 	%r5600, %r5596, %r5595, 30;
	mov.b64 	%rd298, {%r5600, %r5599};
	xor.b64  	%rd299, %rd298, %rd297;
	shf.l.wrap.b32 	%r5601, %r5595, %r5596, 25;
	shf.l.wrap.b32 	%r5602, %r5596, %r5595, 25;
	mov.b64 	%rd300, {%r5602, %r5601};
	xor.b64  	%rd301, %rd299, %rd300;
	xor.b64  	%rd302, %rd282, %rd232;
	xor.b64  	%rd303, %rd282, %rd257;
	and.b64  	%rd304, %rd303, %rd302;
	xor.b64  	%rd305, %rd304, %rd282;
	add.s64 	%rd306, %rd295, %rd305;
	add.s64 	%rd307, %rd306, %rd301;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5603,%dummy}, %rd296;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5604}, %rd296;
	}
	shf.r.wrap.b32 	%r5605, %r5604, %r5603, 14;
	shf.r.wrap.b32 	%r5606, %r5603, %r5604, 14;
	mov.b64 	%rd308, {%r5606, %r5605};
	shf.r.wrap.b32 	%r5607, %r5604, %r5603, 18;
	shf.r.wrap.b32 	%r5608, %r5603, %r5604, 18;
	mov.b64 	%rd309, {%r5608, %r5607};
	xor.b64  	%rd310, %rd309, %rd308;
	shf.l.wrap.b32 	%r5609, %r5603, %r5604, 23;
	shf.l.wrap.b32 	%r5610, %r5604, %r5603, 23;
	mov.b64 	%rd311, {%r5610, %r5609};
	xor.b64  	%rd312, %rd310, %rd311;
	xor.b64  	%rd313, %rd271, %rd246;
	and.b64  	%rd314, %rd296, %rd313;
	xor.b64  	%rd315, %rd314, %rd246;
	add.s64 	%rd316, %rd221, %rd1206;
	ld.const.u64 	%rd317, [k_sha512+56];
	add.s64 	%rd318, %rd316, %rd317;
	add.s64 	%rd319, %rd318, %rd315;
	add.s64 	%rd320, %rd319, %rd312;
	add.s64 	%rd321, %rd320, %rd232;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5611,%dummy}, %rd307;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5612}, %rd307;
	}
	shf.r.wrap.b32 	%r5613, %r5612, %r5611, 28;
	shf.r.wrap.b32 	%r5614, %r5611, %r5612, 28;
	mov.b64 	%rd322, {%r5614, %r5613};
	shf.l.wrap.b32 	%r5615, %r5611, %r5612, 30;
	shf.l.wrap.b32 	%r5616, %r5612, %r5611, 30;
	mov.b64 	%rd323, {%r5616, %r5615};
	xor.b64  	%rd324, %rd323, %rd322;
	shf.l.wrap.b32 	%r5617, %r5611, %r5612, 25;
	shf.l.wrap.b32 	%r5618, %r5612, %r5611, 25;
	mov.b64 	%rd325, {%r5618, %r5617};
	xor.b64  	%rd326, %rd324, %rd325;
	xor.b64  	%rd327, %rd307, %rd257;
	xor.b64  	%rd328, %rd307, %rd282;
	and.b64  	%rd329, %rd328, %rd327;
	xor.b64  	%rd330, %rd329, %rd307;
	add.s64 	%rd331, %rd320, %rd330;
	add.s64 	%rd332, %rd331, %rd326;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5619,%dummy}, %rd321;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5620}, %rd321;
	}
	shf.r.wrap.b32 	%r5621, %r5620, %r5619, 14;
	shf.r.wrap.b32 	%r5622, %r5619, %r5620, 14;
	mov.b64 	%rd333, {%r5622, %r5621};
	shf.r.wrap.b32 	%r5623, %r5620, %r5619, 18;
	shf.r.wrap.b32 	%r5624, %r5619, %r5620, 18;
	mov.b64 	%rd334, {%r5624, %r5623};
	xor.b64  	%rd335, %rd334, %rd333;
	shf.l.wrap.b32 	%r5625, %r5619, %r5620, 23;
	shf.l.wrap.b32 	%r5626, %r5620, %r5619, 23;
	mov.b64 	%rd336, {%r5626, %r5625};
	xor.b64  	%rd337, %rd335, %rd336;
	xor.b64  	%rd338, %rd296, %rd271;
	and.b64  	%rd339, %rd321, %rd338;
	xor.b64  	%rd340, %rd339, %rd271;
	add.s64 	%rd341, %rd246, %rd1190;
	ld.const.u64 	%rd342, [k_sha512+64];
	add.s64 	%rd343, %rd341, %rd342;
	add.s64 	%rd344, %rd343, %rd340;
	add.s64 	%rd345, %rd344, %rd337;
	add.s64 	%rd346, %rd345, %rd257;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5627,%dummy}, %rd332;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5628}, %rd332;
	}
	shf.r.wrap.b32 	%r5629, %r5628, %r5627, 28;
	shf.r.wrap.b32 	%r5630, %r5627, %r5628, 28;
	mov.b64 	%rd347, {%r5630, %r5629};
	shf.l.wrap.b32 	%r5631, %r5627, %r5628, 30;
	shf.l.wrap.b32 	%r5632, %r5628, %r5627, 30;
	mov.b64 	%rd348, {%r5632, %r5631};
	xor.b64  	%rd349, %rd348, %rd347;
	shf.l.wrap.b32 	%r5633, %r5627, %r5628, 25;
	shf.l.wrap.b32 	%r5634, %r5628, %r5627, 25;
	mov.b64 	%rd350, {%r5634, %r5633};
	xor.b64  	%rd351, %rd349, %rd350;
	xor.b64  	%rd352, %rd332, %rd282;
	xor.b64  	%rd353, %rd332, %rd307;
	and.b64  	%rd354, %rd353, %rd352;
	xor.b64  	%rd355, %rd354, %rd332;
	add.s64 	%rd356, %rd345, %rd355;
	add.s64 	%rd357, %rd356, %rd351;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5635,%dummy}, %rd346;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5636}, %rd346;
	}
	shf.r.wrap.b32 	%r5637, %r5636, %r5635, 14;
	shf.r.wrap.b32 	%r5638, %r5635, %r5636, 14;
	mov.b64 	%rd358, {%r5638, %r5637};
	shf.r.wrap.b32 	%r5639, %r5636, %r5635, 18;
	shf.r.wrap.b32 	%r5640, %r5635, %r5636, 18;
	mov.b64 	%rd359, {%r5640, %r5639};
	xor.b64  	%rd360, %rd359, %rd358;
	shf.l.wrap.b32 	%r5641, %r5635, %r5636, 23;
	shf.l.wrap.b32 	%r5642, %r5636, %r5635, 23;
	mov.b64 	%rd361, {%r5642, %r5641};
	xor.b64  	%rd362, %rd360, %rd361;
	xor.b64  	%rd363, %rd321, %rd296;
	and.b64  	%rd364, %rd346, %rd363;
	xor.b64  	%rd365, %rd364, %rd296;
	add.s64 	%rd366, %rd271, %rd1189;
	ld.const.u64 	%rd367, [k_sha512+72];
	add.s64 	%rd368, %rd366, %rd367;
	add.s64 	%rd369, %rd368, %rd365;
	add.s64 	%rd370, %rd369, %rd362;
	add.s64 	%rd371, %rd370, %rd282;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5643,%dummy}, %rd357;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5644}, %rd357;
	}
	shf.r.wrap.b32 	%r5645, %r5644, %r5643, 28;
	shf.r.wrap.b32 	%r5646, %r5643, %r5644, 28;
	mov.b64 	%rd372, {%r5646, %r5645};
	shf.l.wrap.b32 	%r5647, %r5643, %r5644, 30;
	shf.l.wrap.b32 	%r5648, %r5644, %r5643, 30;
	mov.b64 	%rd373, {%r5648, %r5647};
	xor.b64  	%rd374, %rd373, %rd372;
	shf.l.wrap.b32 	%r5649, %r5643, %r5644, 25;
	shf.l.wrap.b32 	%r5650, %r5644, %r5643, 25;
	mov.b64 	%rd375, {%r5650, %r5649};
	xor.b64  	%rd376, %rd374, %rd375;
	xor.b64  	%rd377, %rd357, %rd307;
	xor.b64  	%rd378, %rd357, %rd332;
	and.b64  	%rd379, %rd378, %rd377;
	xor.b64  	%rd380, %rd379, %rd357;
	add.s64 	%rd381, %rd370, %rd380;
	add.s64 	%rd382, %rd381, %rd376;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5651,%dummy}, %rd371;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5652}, %rd371;
	}
	shf.r.wrap.b32 	%r5653, %r5652, %r5651, 14;
	shf.r.wrap.b32 	%r5654, %r5651, %r5652, 14;
	mov.b64 	%rd383, {%r5654, %r5653};
	shf.r.wrap.b32 	%r5655, %r5652, %r5651, 18;
	shf.r.wrap.b32 	%r5656, %r5651, %r5652, 18;
	mov.b64 	%rd384, {%r5656, %r5655};
	xor.b64  	%rd385, %rd384, %rd383;
	shf.l.wrap.b32 	%r5657, %r5651, %r5652, 23;
	shf.l.wrap.b32 	%r5658, %r5652, %r5651, 23;
	mov.b64 	%rd386, {%r5658, %r5657};
	xor.b64  	%rd387, %rd385, %rd386;
	xor.b64  	%rd388, %rd346, %rd321;
	and.b64  	%rd389, %rd371, %rd388;
	xor.b64  	%rd390, %rd389, %rd321;
	add.s64 	%rd391, %rd296, %rd1188;
	ld.const.u64 	%rd392, [k_sha512+80];
	add.s64 	%rd393, %rd391, %rd392;
	add.s64 	%rd394, %rd393, %rd390;
	add.s64 	%rd395, %rd394, %rd387;
	add.s64 	%rd396, %rd395, %rd307;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5659,%dummy}, %rd382;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5660}, %rd382;
	}
	shf.r.wrap.b32 	%r5661, %r5660, %r5659, 28;
	shf.r.wrap.b32 	%r5662, %r5659, %r5660, 28;
	mov.b64 	%rd397, {%r5662, %r5661};
	shf.l.wrap.b32 	%r5663, %r5659, %r5660, 30;
	shf.l.wrap.b32 	%r5664, %r5660, %r5659, 30;
	mov.b64 	%rd398, {%r5664, %r5663};
	xor.b64  	%rd399, %rd398, %rd397;
	shf.l.wrap.b32 	%r5665, %r5659, %r5660, 25;
	shf.l.wrap.b32 	%r5666, %r5660, %r5659, 25;
	mov.b64 	%rd400, {%r5666, %r5665};
	xor.b64  	%rd401, %rd399, %rd400;
	xor.b64  	%rd402, %rd382, %rd332;
	xor.b64  	%rd403, %rd382, %rd357;
	and.b64  	%rd404, %rd403, %rd402;
	xor.b64  	%rd405, %rd404, %rd382;
	add.s64 	%rd406, %rd395, %rd405;
	add.s64 	%rd407, %rd406, %rd401;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5667,%dummy}, %rd396;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5668}, %rd396;
	}
	shf.r.wrap.b32 	%r5669, %r5668, %r5667, 14;
	shf.r.wrap.b32 	%r5670, %r5667, %r5668, 14;
	mov.b64 	%rd408, {%r5670, %r5669};
	shf.r.wrap.b32 	%r5671, %r5668, %r5667, 18;
	shf.r.wrap.b32 	%r5672, %r5667, %r5668, 18;
	mov.b64 	%rd409, {%r5672, %r5671};
	xor.b64  	%rd410, %rd409, %rd408;
	shf.l.wrap.b32 	%r5673, %r5667, %r5668, 23;
	shf.l.wrap.b32 	%r5674, %r5668, %r5667, 23;
	mov.b64 	%rd411, {%r5674, %r5673};
	xor.b64  	%rd412, %rd410, %rd411;
	xor.b64  	%rd413, %rd371, %rd346;
	and.b64  	%rd414, %rd396, %rd413;
	xor.b64  	%rd415, %rd414, %rd346;
	add.s64 	%rd416, %rd321, %rd1187;
	ld.const.u64 	%rd417, [k_sha512+88];
	add.s64 	%rd418, %rd416, %rd417;
	add.s64 	%rd419, %rd418, %rd415;
	add.s64 	%rd420, %rd419, %rd412;
	add.s64 	%rd421, %rd420, %rd332;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5675,%dummy}, %rd407;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5676}, %rd407;
	}
	shf.r.wrap.b32 	%r5677, %r5676, %r5675, 28;
	shf.r.wrap.b32 	%r5678, %r5675, %r5676, 28;
	mov.b64 	%rd422, {%r5678, %r5677};
	shf.l.wrap.b32 	%r5679, %r5675, %r5676, 30;
	shf.l.wrap.b32 	%r5680, %r5676, %r5675, 30;
	mov.b64 	%rd423, {%r5680, %r5679};
	xor.b64  	%rd424, %rd423, %rd422;
	shf.l.wrap.b32 	%r5681, %r5675, %r5676, 25;
	shf.l.wrap.b32 	%r5682, %r5676, %r5675, 25;
	mov.b64 	%rd425, {%r5682, %r5681};
	xor.b64  	%rd426, %rd424, %rd425;
	xor.b64  	%rd427, %rd407, %rd357;
	xor.b64  	%rd428, %rd407, %rd382;
	and.b64  	%rd429, %rd428, %rd427;
	xor.b64  	%rd430, %rd429, %rd407;
	add.s64 	%rd431, %rd420, %rd430;
	add.s64 	%rd432, %rd431, %rd426;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5683,%dummy}, %rd421;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5684}, %rd421;
	}
	shf.r.wrap.b32 	%r5685, %r5684, %r5683, 14;
	shf.r.wrap.b32 	%r5686, %r5683, %r5684, 14;
	mov.b64 	%rd433, {%r5686, %r5685};
	shf.r.wrap.b32 	%r5687, %r5684, %r5683, 18;
	shf.r.wrap.b32 	%r5688, %r5683, %r5684, 18;
	mov.b64 	%rd434, {%r5688, %r5687};
	xor.b64  	%rd435, %rd434, %rd433;
	shf.l.wrap.b32 	%r5689, %r5683, %r5684, 23;
	shf.l.wrap.b32 	%r5690, %r5684, %r5683, 23;
	mov.b64 	%rd436, {%r5690, %r5689};
	xor.b64  	%rd437, %rd435, %rd436;
	xor.b64  	%rd438, %rd396, %rd371;
	and.b64  	%rd439, %rd421, %rd438;
	xor.b64  	%rd440, %rd439, %rd371;
	add.s64 	%rd441, %rd346, %rd1186;
	ld.const.u64 	%rd442, [k_sha512+96];
	add.s64 	%rd443, %rd441, %rd442;
	add.s64 	%rd444, %rd443, %rd440;
	add.s64 	%rd445, %rd444, %rd437;
	add.s64 	%rd1198, %rd445, %rd357;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5691,%dummy}, %rd432;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5692}, %rd432;
	}
	shf.r.wrap.b32 	%r5693, %r5692, %r5691, 28;
	shf.r.wrap.b32 	%r5694, %r5691, %r5692, 28;
	mov.b64 	%rd446, {%r5694, %r5693};
	shf.l.wrap.b32 	%r5695, %r5691, %r5692, 30;
	shf.l.wrap.b32 	%r5696, %r5692, %r5691, 30;
	mov.b64 	%rd447, {%r5696, %r5695};
	xor.b64  	%rd448, %rd447, %rd446;
	shf.l.wrap.b32 	%r5697, %r5691, %r5692, 25;
	shf.l.wrap.b32 	%r5698, %r5692, %r5691, 25;
	mov.b64 	%rd449, {%r5698, %r5697};
	xor.b64  	%rd450, %rd448, %rd449;
	xor.b64  	%rd451, %rd432, %rd382;
	xor.b64  	%rd452, %rd432, %rd407;
	and.b64  	%rd453, %rd452, %rd451;
	xor.b64  	%rd454, %rd453, %rd432;
	add.s64 	%rd455, %rd445, %rd454;
	add.s64 	%rd1194, %rd455, %rd450;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5699,%dummy}, %rd1198;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5700}, %rd1198;
	}
	shf.r.wrap.b32 	%r5701, %r5700, %r5699, 14;
	shf.r.wrap.b32 	%r5702, %r5699, %r5700, 14;
	mov.b64 	%rd456, {%r5702, %r5701};
	shf.r.wrap.b32 	%r5703, %r5700, %r5699, 18;
	shf.r.wrap.b32 	%r5704, %r5699, %r5700, 18;
	mov.b64 	%rd457, {%r5704, %r5703};
	xor.b64  	%rd458, %rd457, %rd456;
	shf.l.wrap.b32 	%r5705, %r5699, %r5700, 23;
	shf.l.wrap.b32 	%r5706, %r5700, %r5699, 23;
	mov.b64 	%rd459, {%r5706, %r5705};
	xor.b64  	%rd460, %rd458, %rd459;
	xor.b64  	%rd461, %rd421, %rd396;
	and.b64  	%rd462, %rd1198, %rd461;
	xor.b64  	%rd463, %rd462, %rd396;
	add.s64 	%rd464, %rd371, %rd1185;
	ld.const.u64 	%rd465, [k_sha512+104];
	add.s64 	%rd466, %rd464, %rd465;
	add.s64 	%rd467, %rd466, %rd463;
	add.s64 	%rd468, %rd467, %rd460;
	add.s64 	%rd1197, %rd468, %rd382;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5707,%dummy}, %rd1194;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5708}, %rd1194;
	}
	shf.r.wrap.b32 	%r5709, %r5708, %r5707, 28;
	shf.r.wrap.b32 	%r5710, %r5707, %r5708, 28;
	mov.b64 	%rd469, {%r5710, %r5709};
	shf.l.wrap.b32 	%r5711, %r5707, %r5708, 30;
	shf.l.wrap.b32 	%r5712, %r5708, %r5707, 30;
	mov.b64 	%rd470, {%r5712, %r5711};
	xor.b64  	%rd471, %rd470, %rd469;
	shf.l.wrap.b32 	%r5713, %r5707, %r5708, 25;
	shf.l.wrap.b32 	%r5714, %r5708, %r5707, 25;
	mov.b64 	%rd472, {%r5714, %r5713};
	xor.b64  	%rd473, %rd471, %rd472;
	xor.b64  	%rd474, %rd1194, %rd407;
	xor.b64  	%rd475, %rd1194, %rd432;
	and.b64  	%rd476, %rd475, %rd474;
	xor.b64  	%rd477, %rd476, %rd1194;
	add.s64 	%rd478, %rd468, %rd477;
	add.s64 	%rd1193, %rd478, %rd473;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5715,%dummy}, %rd1197;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5716}, %rd1197;
	}
	shf.r.wrap.b32 	%r5717, %r5716, %r5715, 14;
	shf.r.wrap.b32 	%r5718, %r5715, %r5716, 14;
	mov.b64 	%rd479, {%r5718, %r5717};
	shf.r.wrap.b32 	%r5719, %r5716, %r5715, 18;
	shf.r.wrap.b32 	%r5720, %r5715, %r5716, 18;
	mov.b64 	%rd480, {%r5720, %r5719};
	xor.b64  	%rd481, %rd480, %rd479;
	shf.l.wrap.b32 	%r5721, %r5715, %r5716, 23;
	shf.l.wrap.b32 	%r5722, %r5716, %r5715, 23;
	mov.b64 	%rd482, {%r5722, %r5721};
	xor.b64  	%rd483, %rd481, %rd482;
	xor.b64  	%rd484, %rd1198, %rd421;
	and.b64  	%rd485, %rd1197, %rd484;
	xor.b64  	%rd486, %rd485, %rd421;
	add.s64 	%rd487, %rd396, %rd1184;
	ld.const.u64 	%rd488, [k_sha512+112];
	add.s64 	%rd489, %rd487, %rd488;
	add.s64 	%rd490, %rd489, %rd486;
	add.s64 	%rd491, %rd490, %rd483;
	add.s64 	%rd1196, %rd491, %rd407;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5723,%dummy}, %rd1193;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5724}, %rd1193;
	}
	shf.r.wrap.b32 	%r5725, %r5724, %r5723, 28;
	shf.r.wrap.b32 	%r5726, %r5723, %r5724, 28;
	mov.b64 	%rd492, {%r5726, %r5725};
	shf.l.wrap.b32 	%r5727, %r5723, %r5724, 30;
	shf.l.wrap.b32 	%r5728, %r5724, %r5723, 30;
	mov.b64 	%rd493, {%r5728, %r5727};
	xor.b64  	%rd494, %rd493, %rd492;
	shf.l.wrap.b32 	%r5729, %r5723, %r5724, 25;
	shf.l.wrap.b32 	%r5730, %r5724, %r5723, 25;
	mov.b64 	%rd495, {%r5730, %r5729};
	xor.b64  	%rd496, %rd494, %rd495;
	xor.b64  	%rd497, %rd1193, %rd432;
	xor.b64  	%rd498, %rd1193, %rd1194;
	and.b64  	%rd499, %rd498, %rd497;
	xor.b64  	%rd500, %rd499, %rd1193;
	add.s64 	%rd501, %rd491, %rd500;
	add.s64 	%rd1192, %rd501, %rd496;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5731,%dummy}, %rd1196;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5732}, %rd1196;
	}
	shf.r.wrap.b32 	%r5733, %r5732, %r5731, 14;
	shf.r.wrap.b32 	%r5734, %r5731, %r5732, 14;
	mov.b64 	%rd502, {%r5734, %r5733};
	shf.r.wrap.b32 	%r5735, %r5732, %r5731, 18;
	shf.r.wrap.b32 	%r5736, %r5731, %r5732, 18;
	mov.b64 	%rd503, {%r5736, %r5735};
	xor.b64  	%rd504, %rd503, %rd502;
	shf.l.wrap.b32 	%r5737, %r5731, %r5732, 23;
	shf.l.wrap.b32 	%r5738, %r5732, %r5731, 23;
	mov.b64 	%rd505, {%r5738, %r5737};
	xor.b64  	%rd506, %rd504, %rd505;
	xor.b64  	%rd507, %rd1197, %rd1198;
	and.b64  	%rd508, %rd1196, %rd507;
	xor.b64  	%rd509, %rd508, %rd1198;
	add.s64 	%rd510, %rd421, %rd1183;
	ld.const.u64 	%rd511, [k_sha512+120];
	add.s64 	%rd512, %rd510, %rd511;
	add.s64 	%rd513, %rd512, %rd509;
	add.s64 	%rd514, %rd513, %rd506;
	add.s64 	%rd1195, %rd514, %rd432;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5739,%dummy}, %rd1192;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5740}, %rd1192;
	}
	shf.r.wrap.b32 	%r5741, %r5740, %r5739, 28;
	shf.r.wrap.b32 	%r5742, %r5739, %r5740, 28;
	mov.b64 	%rd515, {%r5742, %r5741};
	shf.l.wrap.b32 	%r5743, %r5739, %r5740, 30;
	shf.l.wrap.b32 	%r5744, %r5740, %r5739, 30;
	mov.b64 	%rd516, {%r5744, %r5743};
	xor.b64  	%rd517, %rd516, %rd515;
	shf.l.wrap.b32 	%r5745, %r5739, %r5740, 25;
	shf.l.wrap.b32 	%r5746, %r5740, %r5739, 25;
	mov.b64 	%rd518, {%r5746, %r5745};
	xor.b64  	%rd519, %rd517, %rd518;
	xor.b64  	%rd520, %rd1192, %rd1194;
	xor.b64  	%rd521, %rd1192, %rd1193;
	and.b64  	%rd522, %rd521, %rd520;
	xor.b64  	%rd523, %rd522, %rd1192;
	add.s64 	%rd524, %rd514, %rd523;
	add.s64 	%rd1191, %rd524, %rd519;
	mov.u32 	%r8475, 16;

BB1_90:
	shr.u64 	%rd525, %rd1184, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5747,%dummy}, %rd1184;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5748}, %rd1184;
	}
	shf.r.wrap.b32 	%r5749, %r5748, %r5747, 19;
	shf.r.wrap.b32 	%r5750, %r5747, %r5748, 19;
	mov.b64 	%rd526, {%r5750, %r5749};
	xor.b64  	%rd527, %rd526, %rd525;
	shf.l.wrap.b32 	%r5751, %r5747, %r5748, 3;
	shf.l.wrap.b32 	%r5752, %r5748, %r5747, 3;
	mov.b64 	%rd528, {%r5752, %r5751};
	xor.b64  	%rd529, %rd527, %rd528;
	shr.u64 	%rd530, %rd1200, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5753,%dummy}, %rd1200;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5754}, %rd1200;
	}
	shf.r.wrap.b32 	%r5755, %r5754, %r5753, 1;
	shf.r.wrap.b32 	%r5756, %r5753, %r5754, 1;
	mov.b64 	%rd531, {%r5756, %r5755};
	xor.b64  	%rd532, %rd531, %rd530;
	shf.r.wrap.b32 	%r5757, %r5754, %r5753, 8;
	shf.r.wrap.b32 	%r5758, %r5753, %r5754, 8;
	mov.b64 	%rd533, {%r5758, %r5757};
	xor.b64  	%rd534, %rd532, %rd533;
	add.s64 	%rd535, %rd1189, %rd1199;
	add.s64 	%rd536, %rd535, %rd529;
	add.s64 	%rd1199, %rd536, %rd534;
	shr.u64 	%rd537, %rd1183, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5759,%dummy}, %rd1183;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5760}, %rd1183;
	}
	shf.r.wrap.b32 	%r5761, %r5760, %r5759, 19;
	shf.r.wrap.b32 	%r5762, %r5759, %r5760, 19;
	mov.b64 	%rd538, {%r5762, %r5761};
	xor.b64  	%rd539, %rd538, %rd537;
	shf.l.wrap.b32 	%r5763, %r5759, %r5760, 3;
	shf.l.wrap.b32 	%r5764, %r5760, %r5759, 3;
	mov.b64 	%rd540, {%r5764, %r5763};
	xor.b64  	%rd541, %rd539, %rd540;
	shr.u64 	%rd542, %rd1201, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5765,%dummy}, %rd1201;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5766}, %rd1201;
	}
	shf.r.wrap.b32 	%r5767, %r5766, %r5765, 1;
	shf.r.wrap.b32 	%r5768, %r5765, %r5766, 1;
	mov.b64 	%rd543, {%r5768, %r5767};
	xor.b64  	%rd544, %rd543, %rd542;
	shf.r.wrap.b32 	%r5769, %r5766, %r5765, 8;
	shf.r.wrap.b32 	%r5770, %r5765, %r5766, 8;
	mov.b64 	%rd545, {%r5770, %r5769};
	xor.b64  	%rd546, %rd544, %rd545;
	add.s64 	%rd547, %rd1188, %rd1200;
	add.s64 	%rd548, %rd547, %rd541;
	add.s64 	%rd1200, %rd548, %rd546;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5771,%dummy}, %rd1199;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5772}, %rd1199;
	}
	shf.r.wrap.b32 	%r5773, %r5772, %r5771, 19;
	shf.r.wrap.b32 	%r5774, %r5771, %r5772, 19;
	mov.b64 	%rd549, {%r5774, %r5773};
	shf.l.wrap.b32 	%r5775, %r5771, %r5772, 3;
	shf.l.wrap.b32 	%r5776, %r5772, %r5771, 3;
	mov.b64 	%rd550, {%r5776, %r5775};
	shr.u64 	%rd551, %rd1199, 6;
	xor.b64  	%rd552, %rd549, %rd551;
	xor.b64  	%rd553, %rd552, %rd550;
	shr.u64 	%rd554, %rd1202, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5777,%dummy}, %rd1202;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5778}, %rd1202;
	}
	shf.r.wrap.b32 	%r5779, %r5778, %r5777, 1;
	shf.r.wrap.b32 	%r5780, %r5777, %r5778, 1;
	mov.b64 	%rd555, {%r5780, %r5779};
	xor.b64  	%rd556, %rd555, %rd554;
	shf.r.wrap.b32 	%r5781, %r5778, %r5777, 8;
	shf.r.wrap.b32 	%r5782, %r5777, %r5778, 8;
	mov.b64 	%rd557, {%r5782, %r5781};
	xor.b64  	%rd558, %rd556, %rd557;
	add.s64 	%rd559, %rd1187, %rd1201;
	add.s64 	%rd560, %rd559, %rd553;
	add.s64 	%rd1201, %rd560, %rd558;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5783,%dummy}, %rd1200;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5784}, %rd1200;
	}
	shf.r.wrap.b32 	%r5785, %r5784, %r5783, 19;
	shf.r.wrap.b32 	%r5786, %r5783, %r5784, 19;
	mov.b64 	%rd561, {%r5786, %r5785};
	shf.l.wrap.b32 	%r5787, %r5783, %r5784, 3;
	shf.l.wrap.b32 	%r5788, %r5784, %r5783, 3;
	mov.b64 	%rd562, {%r5788, %r5787};
	shr.u64 	%rd563, %rd1200, 6;
	xor.b64  	%rd564, %rd561, %rd563;
	xor.b64  	%rd565, %rd564, %rd562;
	shr.u64 	%rd566, %rd1203, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5789,%dummy}, %rd1203;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5790}, %rd1203;
	}
	shf.r.wrap.b32 	%r5791, %r5790, %r5789, 1;
	shf.r.wrap.b32 	%r5792, %r5789, %r5790, 1;
	mov.b64 	%rd567, {%r5792, %r5791};
	xor.b64  	%rd568, %rd567, %rd566;
	shf.r.wrap.b32 	%r5793, %r5790, %r5789, 8;
	shf.r.wrap.b32 	%r5794, %r5789, %r5790, 8;
	mov.b64 	%rd569, {%r5794, %r5793};
	xor.b64  	%rd570, %rd568, %rd569;
	add.s64 	%rd571, %rd1186, %rd1202;
	add.s64 	%rd572, %rd571, %rd565;
	add.s64 	%rd1202, %rd572, %rd570;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5795,%dummy}, %rd1201;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5796}, %rd1201;
	}
	shf.r.wrap.b32 	%r5797, %r5796, %r5795, 19;
	shf.r.wrap.b32 	%r5798, %r5795, %r5796, 19;
	mov.b64 	%rd573, {%r5798, %r5797};
	shf.l.wrap.b32 	%r5799, %r5795, %r5796, 3;
	shf.l.wrap.b32 	%r5800, %r5796, %r5795, 3;
	mov.b64 	%rd574, {%r5800, %r5799};
	shr.u64 	%rd575, %rd1201, 6;
	xor.b64  	%rd576, %rd573, %rd575;
	xor.b64  	%rd577, %rd576, %rd574;
	shr.u64 	%rd578, %rd1204, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5801,%dummy}, %rd1204;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5802}, %rd1204;
	}
	shf.r.wrap.b32 	%r5803, %r5802, %r5801, 1;
	shf.r.wrap.b32 	%r5804, %r5801, %r5802, 1;
	mov.b64 	%rd579, {%r5804, %r5803};
	xor.b64  	%rd580, %rd579, %rd578;
	shf.r.wrap.b32 	%r5805, %r5802, %r5801, 8;
	shf.r.wrap.b32 	%r5806, %r5801, %r5802, 8;
	mov.b64 	%rd581, {%r5806, %r5805};
	xor.b64  	%rd582, %rd580, %rd581;
	add.s64 	%rd583, %rd1185, %rd1203;
	add.s64 	%rd584, %rd583, %rd577;
	add.s64 	%rd1203, %rd584, %rd582;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5807,%dummy}, %rd1202;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5808}, %rd1202;
	}
	shf.r.wrap.b32 	%r5809, %r5808, %r5807, 19;
	shf.r.wrap.b32 	%r5810, %r5807, %r5808, 19;
	mov.b64 	%rd585, {%r5810, %r5809};
	shf.l.wrap.b32 	%r5811, %r5807, %r5808, 3;
	shf.l.wrap.b32 	%r5812, %r5808, %r5807, 3;
	mov.b64 	%rd586, {%r5812, %r5811};
	shr.u64 	%rd587, %rd1202, 6;
	xor.b64  	%rd588, %rd585, %rd587;
	xor.b64  	%rd589, %rd588, %rd586;
	shr.u64 	%rd590, %rd1205, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5813,%dummy}, %rd1205;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5814}, %rd1205;
	}
	shf.r.wrap.b32 	%r5815, %r5814, %r5813, 1;
	shf.r.wrap.b32 	%r5816, %r5813, %r5814, 1;
	mov.b64 	%rd591, {%r5816, %r5815};
	xor.b64  	%rd592, %rd591, %rd590;
	shf.r.wrap.b32 	%r5817, %r5814, %r5813, 8;
	shf.r.wrap.b32 	%r5818, %r5813, %r5814, 8;
	mov.b64 	%rd593, {%r5818, %r5817};
	xor.b64  	%rd594, %rd592, %rd593;
	add.s64 	%rd595, %rd1184, %rd1204;
	add.s64 	%rd596, %rd595, %rd589;
	add.s64 	%rd1204, %rd596, %rd594;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5819,%dummy}, %rd1203;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5820}, %rd1203;
	}
	shf.r.wrap.b32 	%r5821, %r5820, %r5819, 19;
	shf.r.wrap.b32 	%r5822, %r5819, %r5820, 19;
	mov.b64 	%rd597, {%r5822, %r5821};
	shf.l.wrap.b32 	%r5823, %r5819, %r5820, 3;
	shf.l.wrap.b32 	%r5824, %r5820, %r5819, 3;
	mov.b64 	%rd598, {%r5824, %r5823};
	shr.u64 	%rd599, %rd1203, 6;
	xor.b64  	%rd600, %rd597, %rd599;
	xor.b64  	%rd601, %rd600, %rd598;
	shr.u64 	%rd602, %rd1206, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5825,%dummy}, %rd1206;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5826}, %rd1206;
	}
	shf.r.wrap.b32 	%r5827, %r5826, %r5825, 1;
	shf.r.wrap.b32 	%r5828, %r5825, %r5826, 1;
	mov.b64 	%rd603, {%r5828, %r5827};
	xor.b64  	%rd604, %rd603, %rd602;
	shf.r.wrap.b32 	%r5829, %r5826, %r5825, 8;
	shf.r.wrap.b32 	%r5830, %r5825, %r5826, 8;
	mov.b64 	%rd605, {%r5830, %r5829};
	xor.b64  	%rd606, %rd604, %rd605;
	add.s64 	%rd607, %rd1183, %rd1205;
	add.s64 	%rd608, %rd607, %rd601;
	add.s64 	%rd1205, %rd608, %rd606;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5831,%dummy}, %rd1204;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5832}, %rd1204;
	}
	shf.r.wrap.b32 	%r5833, %r5832, %r5831, 19;
	shf.r.wrap.b32 	%r5834, %r5831, %r5832, 19;
	mov.b64 	%rd609, {%r5834, %r5833};
	shf.l.wrap.b32 	%r5835, %r5831, %r5832, 3;
	shf.l.wrap.b32 	%r5836, %r5832, %r5831, 3;
	mov.b64 	%rd610, {%r5836, %r5835};
	shr.u64 	%rd611, %rd1204, 6;
	xor.b64  	%rd612, %rd609, %rd611;
	xor.b64  	%rd613, %rd612, %rd610;
	shr.u64 	%rd614, %rd1190, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5837,%dummy}, %rd1190;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5838}, %rd1190;
	}
	shf.r.wrap.b32 	%r5839, %r5838, %r5837, 1;
	shf.r.wrap.b32 	%r5840, %r5837, %r5838, 1;
	mov.b64 	%rd615, {%r5840, %r5839};
	xor.b64  	%rd616, %rd615, %rd614;
	shf.r.wrap.b32 	%r5841, %r5838, %r5837, 8;
	shf.r.wrap.b32 	%r5842, %r5837, %r5838, 8;
	mov.b64 	%rd617, {%r5842, %r5841};
	xor.b64  	%rd618, %rd616, %rd617;
	add.s64 	%rd619, %rd1199, %rd1206;
	add.s64 	%rd620, %rd619, %rd613;
	add.s64 	%rd1206, %rd620, %rd618;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5843,%dummy}, %rd1205;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5844}, %rd1205;
	}
	shf.r.wrap.b32 	%r5845, %r5844, %r5843, 19;
	shf.r.wrap.b32 	%r5846, %r5843, %r5844, 19;
	mov.b64 	%rd621, {%r5846, %r5845};
	shf.l.wrap.b32 	%r5847, %r5843, %r5844, 3;
	shf.l.wrap.b32 	%r5848, %r5844, %r5843, 3;
	mov.b64 	%rd622, {%r5848, %r5847};
	shr.u64 	%rd623, %rd1205, 6;
	xor.b64  	%rd624, %rd621, %rd623;
	xor.b64  	%rd625, %rd624, %rd622;
	shr.u64 	%rd626, %rd1189, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5849,%dummy}, %rd1189;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5850}, %rd1189;
	}
	shf.r.wrap.b32 	%r5851, %r5850, %r5849, 1;
	shf.r.wrap.b32 	%r5852, %r5849, %r5850, 1;
	mov.b64 	%rd627, {%r5852, %r5851};
	xor.b64  	%rd628, %rd627, %rd626;
	shf.r.wrap.b32 	%r5853, %r5850, %r5849, 8;
	shf.r.wrap.b32 	%r5854, %r5849, %r5850, 8;
	mov.b64 	%rd629, {%r5854, %r5853};
	xor.b64  	%rd630, %rd628, %rd629;
	add.s64 	%rd631, %rd1200, %rd1190;
	add.s64 	%rd632, %rd631, %rd625;
	add.s64 	%rd1190, %rd632, %rd630;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5855,%dummy}, %rd1206;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5856}, %rd1206;
	}
	shf.r.wrap.b32 	%r5857, %r5856, %r5855, 19;
	shf.r.wrap.b32 	%r5858, %r5855, %r5856, 19;
	mov.b64 	%rd633, {%r5858, %r5857};
	shf.l.wrap.b32 	%r5859, %r5855, %r5856, 3;
	shf.l.wrap.b32 	%r5860, %r5856, %r5855, 3;
	mov.b64 	%rd634, {%r5860, %r5859};
	shr.u64 	%rd635, %rd1206, 6;
	xor.b64  	%rd636, %rd633, %rd635;
	xor.b64  	%rd637, %rd636, %rd634;
	shr.u64 	%rd638, %rd1188, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5861,%dummy}, %rd1188;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5862}, %rd1188;
	}
	shf.r.wrap.b32 	%r5863, %r5862, %r5861, 1;
	shf.r.wrap.b32 	%r5864, %r5861, %r5862, 1;
	mov.b64 	%rd639, {%r5864, %r5863};
	xor.b64  	%rd640, %rd639, %rd638;
	shf.r.wrap.b32 	%r5865, %r5862, %r5861, 8;
	shf.r.wrap.b32 	%r5866, %r5861, %r5862, 8;
	mov.b64 	%rd641, {%r5866, %r5865};
	xor.b64  	%rd642, %rd640, %rd641;
	add.s64 	%rd643, %rd1201, %rd1189;
	add.s64 	%rd644, %rd643, %rd637;
	add.s64 	%rd1189, %rd644, %rd642;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5867,%dummy}, %rd1190;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5868}, %rd1190;
	}
	shf.r.wrap.b32 	%r5869, %r5868, %r5867, 19;
	shf.r.wrap.b32 	%r5870, %r5867, %r5868, 19;
	mov.b64 	%rd645, {%r5870, %r5869};
	shf.l.wrap.b32 	%r5871, %r5867, %r5868, 3;
	shf.l.wrap.b32 	%r5872, %r5868, %r5867, 3;
	mov.b64 	%rd646, {%r5872, %r5871};
	shr.u64 	%rd647, %rd1190, 6;
	xor.b64  	%rd648, %rd645, %rd647;
	xor.b64  	%rd649, %rd648, %rd646;
	shr.u64 	%rd650, %rd1187, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5873,%dummy}, %rd1187;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5874}, %rd1187;
	}
	shf.r.wrap.b32 	%r5875, %r5874, %r5873, 1;
	shf.r.wrap.b32 	%r5876, %r5873, %r5874, 1;
	mov.b64 	%rd651, {%r5876, %r5875};
	xor.b64  	%rd652, %rd651, %rd650;
	shf.r.wrap.b32 	%r5877, %r5874, %r5873, 8;
	shf.r.wrap.b32 	%r5878, %r5873, %r5874, 8;
	mov.b64 	%rd653, {%r5878, %r5877};
	xor.b64  	%rd654, %rd652, %rd653;
	add.s64 	%rd655, %rd1202, %rd1188;
	add.s64 	%rd656, %rd655, %rd649;
	add.s64 	%rd1188, %rd656, %rd654;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5879,%dummy}, %rd1189;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5880}, %rd1189;
	}
	shf.r.wrap.b32 	%r5881, %r5880, %r5879, 19;
	shf.r.wrap.b32 	%r5882, %r5879, %r5880, 19;
	mov.b64 	%rd657, {%r5882, %r5881};
	shf.l.wrap.b32 	%r5883, %r5879, %r5880, 3;
	shf.l.wrap.b32 	%r5884, %r5880, %r5879, 3;
	mov.b64 	%rd658, {%r5884, %r5883};
	shr.u64 	%rd659, %rd1189, 6;
	xor.b64  	%rd660, %rd657, %rd659;
	xor.b64  	%rd661, %rd660, %rd658;
	shr.u64 	%rd662, %rd1186, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5885,%dummy}, %rd1186;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5886}, %rd1186;
	}
	shf.r.wrap.b32 	%r5887, %r5886, %r5885, 1;
	shf.r.wrap.b32 	%r5888, %r5885, %r5886, 1;
	mov.b64 	%rd663, {%r5888, %r5887};
	xor.b64  	%rd664, %rd663, %rd662;
	shf.r.wrap.b32 	%r5889, %r5886, %r5885, 8;
	shf.r.wrap.b32 	%r5890, %r5885, %r5886, 8;
	mov.b64 	%rd665, {%r5890, %r5889};
	xor.b64  	%rd666, %rd664, %rd665;
	add.s64 	%rd667, %rd1203, %rd1187;
	add.s64 	%rd668, %rd667, %rd661;
	add.s64 	%rd1187, %rd668, %rd666;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5891,%dummy}, %rd1188;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5892}, %rd1188;
	}
	shf.r.wrap.b32 	%r5893, %r5892, %r5891, 19;
	shf.r.wrap.b32 	%r5894, %r5891, %r5892, 19;
	mov.b64 	%rd669, {%r5894, %r5893};
	shf.l.wrap.b32 	%r5895, %r5891, %r5892, 3;
	shf.l.wrap.b32 	%r5896, %r5892, %r5891, 3;
	mov.b64 	%rd670, {%r5896, %r5895};
	shr.u64 	%rd671, %rd1188, 6;
	xor.b64  	%rd672, %rd669, %rd671;
	xor.b64  	%rd673, %rd672, %rd670;
	shr.u64 	%rd674, %rd1185, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5897,%dummy}, %rd1185;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5898}, %rd1185;
	}
	shf.r.wrap.b32 	%r5899, %r5898, %r5897, 1;
	shf.r.wrap.b32 	%r5900, %r5897, %r5898, 1;
	mov.b64 	%rd675, {%r5900, %r5899};
	xor.b64  	%rd676, %rd675, %rd674;
	shf.r.wrap.b32 	%r5901, %r5898, %r5897, 8;
	shf.r.wrap.b32 	%r5902, %r5897, %r5898, 8;
	mov.b64 	%rd677, {%r5902, %r5901};
	xor.b64  	%rd678, %rd676, %rd677;
	add.s64 	%rd679, %rd1204, %rd1186;
	add.s64 	%rd680, %rd679, %rd673;
	add.s64 	%rd1186, %rd680, %rd678;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5903,%dummy}, %rd1187;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5904}, %rd1187;
	}
	shf.r.wrap.b32 	%r5905, %r5904, %r5903, 19;
	shf.r.wrap.b32 	%r5906, %r5903, %r5904, 19;
	mov.b64 	%rd681, {%r5906, %r5905};
	shf.l.wrap.b32 	%r5907, %r5903, %r5904, 3;
	shf.l.wrap.b32 	%r5908, %r5904, %r5903, 3;
	mov.b64 	%rd682, {%r5908, %r5907};
	shr.u64 	%rd683, %rd1187, 6;
	xor.b64  	%rd684, %rd681, %rd683;
	xor.b64  	%rd685, %rd684, %rd682;
	shr.u64 	%rd686, %rd1184, 7;
	shf.r.wrap.b32 	%r5909, %r5748, %r5747, 1;
	shf.r.wrap.b32 	%r5910, %r5747, %r5748, 1;
	mov.b64 	%rd687, {%r5910, %r5909};
	xor.b64  	%rd688, %rd687, %rd686;
	shf.r.wrap.b32 	%r5911, %r5748, %r5747, 8;
	shf.r.wrap.b32 	%r5912, %r5747, %r5748, 8;
	mov.b64 	%rd689, {%r5912, %r5911};
	xor.b64  	%rd690, %rd688, %rd689;
	add.s64 	%rd691, %rd1205, %rd1185;
	add.s64 	%rd692, %rd691, %rd685;
	add.s64 	%rd1185, %rd692, %rd690;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5913,%dummy}, %rd1186;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5914}, %rd1186;
	}
	shf.r.wrap.b32 	%r5915, %r5914, %r5913, 19;
	shf.r.wrap.b32 	%r5916, %r5913, %r5914, 19;
	mov.b64 	%rd693, {%r5916, %r5915};
	shf.l.wrap.b32 	%r5917, %r5913, %r5914, 3;
	shf.l.wrap.b32 	%r5918, %r5914, %r5913, 3;
	mov.b64 	%rd694, {%r5918, %r5917};
	shr.u64 	%rd695, %rd1186, 6;
	xor.b64  	%rd696, %rd693, %rd695;
	xor.b64  	%rd697, %rd696, %rd694;
	shr.u64 	%rd698, %rd1183, 7;
	shf.r.wrap.b32 	%r5919, %r5760, %r5759, 1;
	shf.r.wrap.b32 	%r5920, %r5759, %r5760, 1;
	mov.b64 	%rd699, {%r5920, %r5919};
	xor.b64  	%rd700, %rd699, %rd698;
	shf.r.wrap.b32 	%r5921, %r5760, %r5759, 8;
	shf.r.wrap.b32 	%r5922, %r5759, %r5760, 8;
	mov.b64 	%rd701, {%r5922, %r5921};
	xor.b64  	%rd702, %rd700, %rd701;
	add.s64 	%rd703, %rd1206, %rd1184;
	add.s64 	%rd704, %rd703, %rd697;
	add.s64 	%rd1184, %rd704, %rd702;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5923,%dummy}, %rd1185;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5924}, %rd1185;
	}
	shf.r.wrap.b32 	%r5925, %r5924, %r5923, 19;
	shf.r.wrap.b32 	%r5926, %r5923, %r5924, 19;
	mov.b64 	%rd705, {%r5926, %r5925};
	shf.l.wrap.b32 	%r5927, %r5923, %r5924, 3;
	shf.l.wrap.b32 	%r5928, %r5924, %r5923, 3;
	mov.b64 	%rd706, {%r5928, %r5927};
	shr.u64 	%rd707, %rd1185, 6;
	xor.b64  	%rd708, %rd705, %rd707;
	xor.b64  	%rd709, %rd708, %rd706;
	shf.r.wrap.b32 	%r5929, %r5772, %r5771, 1;
	shf.r.wrap.b32 	%r5930, %r5771, %r5772, 1;
	mov.b64 	%rd710, {%r5930, %r5929};
	shf.r.wrap.b32 	%r5931, %r5772, %r5771, 8;
	shf.r.wrap.b32 	%r5932, %r5771, %r5772, 8;
	mov.b64 	%rd711, {%r5932, %r5931};
	shr.u64 	%rd712, %rd1199, 7;
	xor.b64  	%rd713, %rd710, %rd712;
	xor.b64  	%rd714, %rd713, %rd711;
	add.s64 	%rd715, %rd1190, %rd1183;
	add.s64 	%rd716, %rd715, %rd709;
	add.s64 	%rd1183, %rd716, %rd714;
	mul.wide.s32 	%rd717, %r8475, 8;
	mov.u64 	%rd718, k_sha512;
	add.s64 	%rd719, %rd718, %rd717;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5933,%dummy}, %rd1195;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5934}, %rd1195;
	}
	shf.r.wrap.b32 	%r5935, %r5934, %r5933, 18;
	shf.r.wrap.b32 	%r5936, %r5933, %r5934, 18;
	mov.b64 	%rd720, {%r5936, %r5935};
	shf.r.wrap.b32 	%r5937, %r5934, %r5933, 14;
	shf.r.wrap.b32 	%r5938, %r5933, %r5934, 14;
	mov.b64 	%rd721, {%r5938, %r5937};
	xor.b64  	%rd722, %rd720, %rd721;
	shf.l.wrap.b32 	%r5939, %r5933, %r5934, 23;
	shf.l.wrap.b32 	%r5940, %r5934, %r5933, 23;
	mov.b64 	%rd723, {%r5940, %r5939};
	xor.b64  	%rd724, %rd722, %rd723;
	xor.b64  	%rd725, %rd1196, %rd1197;
	and.b64  	%rd726, %rd725, %rd1195;
	xor.b64  	%rd727, %rd726, %rd1197;
	add.s64 	%rd728, %rd727, %rd1198;
	add.s64 	%rd729, %rd728, %rd1199;
	ld.const.u64 	%rd730, [%rd719];
	add.s64 	%rd731, %rd729, %rd730;
	add.s64 	%rd732, %rd731, %rd724;
	add.s64 	%rd733, %rd732, %rd1194;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5941}, %rd1191;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5942,%dummy}, %rd1191;
	}
	shf.l.wrap.b32 	%r5943, %r5942, %r5941, 30;
	shf.l.wrap.b32 	%r5944, %r5941, %r5942, 30;
	mov.b64 	%rd734, {%r5944, %r5943};
	shf.r.wrap.b32 	%r5945, %r5941, %r5942, 28;
	shf.r.wrap.b32 	%r5946, %r5942, %r5941, 28;
	mov.b64 	%rd735, {%r5946, %r5945};
	xor.b64  	%rd736, %rd734, %rd735;
	shf.l.wrap.b32 	%r5947, %r5942, %r5941, 25;
	shf.l.wrap.b32 	%r5948, %r5941, %r5942, 25;
	mov.b64 	%rd737, {%r5948, %r5947};
	xor.b64  	%rd738, %rd736, %rd737;
	xor.b64  	%rd739, %rd1191, %rd1192;
	xor.b64  	%rd740, %rd1191, %rd1193;
	and.b64  	%rd741, %rd739, %rd740;
	xor.b64  	%rd742, %rd741, %rd1191;
	add.s64 	%rd743, %rd732, %rd742;
	add.s64 	%rd744, %rd743, %rd738;
	add.s32 	%r5949, %r8475, 1;
	mul.wide.s32 	%rd745, %r5949, 8;
	add.s64 	%rd746, %rd718, %rd745;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5950,%dummy}, %rd733;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5951}, %rd733;
	}
	shf.r.wrap.b32 	%r5952, %r5951, %r5950, 14;
	shf.r.wrap.b32 	%r5953, %r5950, %r5951, 14;
	mov.b64 	%rd747, {%r5953, %r5952};
	shf.r.wrap.b32 	%r5954, %r5951, %r5950, 18;
	shf.r.wrap.b32 	%r5955, %r5950, %r5951, 18;
	mov.b64 	%rd748, {%r5955, %r5954};
	xor.b64  	%rd749, %rd748, %rd747;
	shf.l.wrap.b32 	%r5956, %r5950, %r5951, 23;
	shf.l.wrap.b32 	%r5957, %r5951, %r5950, 23;
	mov.b64 	%rd750, {%r5957, %r5956};
	xor.b64  	%rd751, %rd749, %rd750;
	xor.b64  	%rd752, %rd1195, %rd1196;
	and.b64  	%rd753, %rd733, %rd752;
	xor.b64  	%rd754, %rd753, %rd1196;
	add.s64 	%rd755, %rd1200, %rd1197;
	ld.const.u64 	%rd756, [%rd746];
	add.s64 	%rd757, %rd755, %rd756;
	add.s64 	%rd758, %rd757, %rd754;
	add.s64 	%rd759, %rd758, %rd751;
	add.s64 	%rd760, %rd759, %rd1193;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5958,%dummy}, %rd744;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5959}, %rd744;
	}
	shf.r.wrap.b32 	%r5960, %r5959, %r5958, 28;
	shf.r.wrap.b32 	%r5961, %r5958, %r5959, 28;
	mov.b64 	%rd761, {%r5961, %r5960};
	shf.l.wrap.b32 	%r5962, %r5958, %r5959, 30;
	shf.l.wrap.b32 	%r5963, %r5959, %r5958, 30;
	mov.b64 	%rd762, {%r5963, %r5962};
	xor.b64  	%rd763, %rd762, %rd761;
	shf.l.wrap.b32 	%r5964, %r5958, %r5959, 25;
	shf.l.wrap.b32 	%r5965, %r5959, %r5958, 25;
	mov.b64 	%rd764, {%r5965, %r5964};
	xor.b64  	%rd765, %rd763, %rd764;
	xor.b64  	%rd766, %rd744, %rd1192;
	xor.b64  	%rd767, %rd744, %rd1191;
	and.b64  	%rd768, %rd767, %rd766;
	xor.b64  	%rd769, %rd768, %rd744;
	add.s64 	%rd770, %rd759, %rd769;
	add.s64 	%rd771, %rd770, %rd765;
	add.s32 	%r5966, %r8475, 2;
	mul.wide.s32 	%rd772, %r5966, 8;
	add.s64 	%rd773, %rd718, %rd772;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5967,%dummy}, %rd760;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5968}, %rd760;
	}
	shf.r.wrap.b32 	%r5969, %r5968, %r5967, 14;
	shf.r.wrap.b32 	%r5970, %r5967, %r5968, 14;
	mov.b64 	%rd774, {%r5970, %r5969};
	shf.r.wrap.b32 	%r5971, %r5968, %r5967, 18;
	shf.r.wrap.b32 	%r5972, %r5967, %r5968, 18;
	mov.b64 	%rd775, {%r5972, %r5971};
	xor.b64  	%rd776, %rd775, %rd774;
	shf.l.wrap.b32 	%r5973, %r5967, %r5968, 23;
	shf.l.wrap.b32 	%r5974, %r5968, %r5967, 23;
	mov.b64 	%rd777, {%r5974, %r5973};
	xor.b64  	%rd778, %rd776, %rd777;
	xor.b64  	%rd779, %rd733, %rd1195;
	and.b64  	%rd780, %rd760, %rd779;
	xor.b64  	%rd781, %rd780, %rd1195;
	add.s64 	%rd782, %rd1201, %rd1196;
	ld.const.u64 	%rd783, [%rd773];
	add.s64 	%rd784, %rd782, %rd783;
	add.s64 	%rd785, %rd784, %rd781;
	add.s64 	%rd786, %rd785, %rd778;
	add.s64 	%rd787, %rd786, %rd1192;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5975,%dummy}, %rd771;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5976}, %rd771;
	}
	shf.r.wrap.b32 	%r5977, %r5976, %r5975, 28;
	shf.r.wrap.b32 	%r5978, %r5975, %r5976, 28;
	mov.b64 	%rd788, {%r5978, %r5977};
	shf.l.wrap.b32 	%r5979, %r5975, %r5976, 30;
	shf.l.wrap.b32 	%r5980, %r5976, %r5975, 30;
	mov.b64 	%rd789, {%r5980, %r5979};
	xor.b64  	%rd790, %rd789, %rd788;
	shf.l.wrap.b32 	%r5981, %r5975, %r5976, 25;
	shf.l.wrap.b32 	%r5982, %r5976, %r5975, 25;
	mov.b64 	%rd791, {%r5982, %r5981};
	xor.b64  	%rd792, %rd790, %rd791;
	xor.b64  	%rd793, %rd771, %rd1191;
	xor.b64  	%rd794, %rd771, %rd744;
	and.b64  	%rd795, %rd794, %rd793;
	xor.b64  	%rd796, %rd795, %rd771;
	add.s64 	%rd797, %rd786, %rd796;
	add.s64 	%rd798, %rd797, %rd792;
	add.s32 	%r5983, %r8475, 3;
	mul.wide.s32 	%rd799, %r5983, 8;
	add.s64 	%rd800, %rd718, %rd799;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5984,%dummy}, %rd787;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5985}, %rd787;
	}
	shf.r.wrap.b32 	%r5986, %r5985, %r5984, 14;
	shf.r.wrap.b32 	%r5987, %r5984, %r5985, 14;
	mov.b64 	%rd801, {%r5987, %r5986};
	shf.r.wrap.b32 	%r5988, %r5985, %r5984, 18;
	shf.r.wrap.b32 	%r5989, %r5984, %r5985, 18;
	mov.b64 	%rd802, {%r5989, %r5988};
	xor.b64  	%rd803, %rd802, %rd801;
	shf.l.wrap.b32 	%r5990, %r5984, %r5985, 23;
	shf.l.wrap.b32 	%r5991, %r5985, %r5984, 23;
	mov.b64 	%rd804, {%r5991, %r5990};
	xor.b64  	%rd805, %rd803, %rd804;
	xor.b64  	%rd806, %rd760, %rd733;
	and.b64  	%rd807, %rd787, %rd806;
	xor.b64  	%rd808, %rd807, %rd733;
	add.s64 	%rd809, %rd1202, %rd1195;
	ld.const.u64 	%rd810, [%rd800];
	add.s64 	%rd811, %rd809, %rd810;
	add.s64 	%rd812, %rd811, %rd808;
	add.s64 	%rd813, %rd812, %rd805;
	add.s64 	%rd814, %rd813, %rd1191;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r5992,%dummy}, %rd798;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r5993}, %rd798;
	}
	shf.r.wrap.b32 	%r5994, %r5993, %r5992, 28;
	shf.r.wrap.b32 	%r5995, %r5992, %r5993, 28;
	mov.b64 	%rd815, {%r5995, %r5994};
	shf.l.wrap.b32 	%r5996, %r5992, %r5993, 30;
	shf.l.wrap.b32 	%r5997, %r5993, %r5992, 30;
	mov.b64 	%rd816, {%r5997, %r5996};
	xor.b64  	%rd817, %rd816, %rd815;
	shf.l.wrap.b32 	%r5998, %r5992, %r5993, 25;
	shf.l.wrap.b32 	%r5999, %r5993, %r5992, 25;
	mov.b64 	%rd818, {%r5999, %r5998};
	xor.b64  	%rd819, %rd817, %rd818;
	xor.b64  	%rd820, %rd798, %rd744;
	xor.b64  	%rd821, %rd798, %rd771;
	and.b64  	%rd822, %rd821, %rd820;
	xor.b64  	%rd823, %rd822, %rd798;
	add.s64 	%rd824, %rd813, %rd823;
	add.s64 	%rd825, %rd824, %rd819;
	add.s32 	%r6000, %r8475, 4;
	mul.wide.s32 	%rd826, %r6000, 8;
	add.s64 	%rd827, %rd718, %rd826;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6001,%dummy}, %rd814;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6002}, %rd814;
	}
	shf.r.wrap.b32 	%r6003, %r6002, %r6001, 14;
	shf.r.wrap.b32 	%r6004, %r6001, %r6002, 14;
	mov.b64 	%rd828, {%r6004, %r6003};
	shf.r.wrap.b32 	%r6005, %r6002, %r6001, 18;
	shf.r.wrap.b32 	%r6006, %r6001, %r6002, 18;
	mov.b64 	%rd829, {%r6006, %r6005};
	xor.b64  	%rd830, %rd829, %rd828;
	shf.l.wrap.b32 	%r6007, %r6001, %r6002, 23;
	shf.l.wrap.b32 	%r6008, %r6002, %r6001, 23;
	mov.b64 	%rd831, {%r6008, %r6007};
	xor.b64  	%rd832, %rd830, %rd831;
	xor.b64  	%rd833, %rd787, %rd760;
	and.b64  	%rd834, %rd814, %rd833;
	xor.b64  	%rd835, %rd834, %rd760;
	add.s64 	%rd836, %rd733, %rd1203;
	ld.const.u64 	%rd837, [%rd827];
	add.s64 	%rd838, %rd836, %rd837;
	add.s64 	%rd839, %rd838, %rd835;
	add.s64 	%rd840, %rd839, %rd832;
	add.s64 	%rd841, %rd840, %rd744;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6009,%dummy}, %rd825;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6010}, %rd825;
	}
	shf.r.wrap.b32 	%r6011, %r6010, %r6009, 28;
	shf.r.wrap.b32 	%r6012, %r6009, %r6010, 28;
	mov.b64 	%rd842, {%r6012, %r6011};
	shf.l.wrap.b32 	%r6013, %r6009, %r6010, 30;
	shf.l.wrap.b32 	%r6014, %r6010, %r6009, 30;
	mov.b64 	%rd843, {%r6014, %r6013};
	xor.b64  	%rd844, %rd843, %rd842;
	shf.l.wrap.b32 	%r6015, %r6009, %r6010, 25;
	shf.l.wrap.b32 	%r6016, %r6010, %r6009, 25;
	mov.b64 	%rd845, {%r6016, %r6015};
	xor.b64  	%rd846, %rd844, %rd845;
	xor.b64  	%rd847, %rd825, %rd771;
	xor.b64  	%rd848, %rd825, %rd798;
	and.b64  	%rd849, %rd848, %rd847;
	xor.b64  	%rd850, %rd849, %rd825;
	add.s64 	%rd851, %rd840, %rd850;
	add.s64 	%rd852, %rd851, %rd846;
	add.s32 	%r6017, %r8475, 5;
	mul.wide.s32 	%rd853, %r6017, 8;
	add.s64 	%rd854, %rd718, %rd853;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6018,%dummy}, %rd841;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6019}, %rd841;
	}
	shf.r.wrap.b32 	%r6020, %r6019, %r6018, 14;
	shf.r.wrap.b32 	%r6021, %r6018, %r6019, 14;
	mov.b64 	%rd855, {%r6021, %r6020};
	shf.r.wrap.b32 	%r6022, %r6019, %r6018, 18;
	shf.r.wrap.b32 	%r6023, %r6018, %r6019, 18;
	mov.b64 	%rd856, {%r6023, %r6022};
	xor.b64  	%rd857, %rd856, %rd855;
	shf.l.wrap.b32 	%r6024, %r6018, %r6019, 23;
	shf.l.wrap.b32 	%r6025, %r6019, %r6018, 23;
	mov.b64 	%rd858, {%r6025, %r6024};
	xor.b64  	%rd859, %rd857, %rd858;
	xor.b64  	%rd860, %rd814, %rd787;
	and.b64  	%rd861, %rd841, %rd860;
	xor.b64  	%rd862, %rd861, %rd787;
	add.s64 	%rd863, %rd760, %rd1204;
	ld.const.u64 	%rd864, [%rd854];
	add.s64 	%rd865, %rd863, %rd864;
	add.s64 	%rd866, %rd865, %rd862;
	add.s64 	%rd867, %rd866, %rd859;
	add.s64 	%rd868, %rd867, %rd771;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6026,%dummy}, %rd852;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6027}, %rd852;
	}
	shf.r.wrap.b32 	%r6028, %r6027, %r6026, 28;
	shf.r.wrap.b32 	%r6029, %r6026, %r6027, 28;
	mov.b64 	%rd869, {%r6029, %r6028};
	shf.l.wrap.b32 	%r6030, %r6026, %r6027, 30;
	shf.l.wrap.b32 	%r6031, %r6027, %r6026, 30;
	mov.b64 	%rd870, {%r6031, %r6030};
	xor.b64  	%rd871, %rd870, %rd869;
	shf.l.wrap.b32 	%r6032, %r6026, %r6027, 25;
	shf.l.wrap.b32 	%r6033, %r6027, %r6026, 25;
	mov.b64 	%rd872, {%r6033, %r6032};
	xor.b64  	%rd873, %rd871, %rd872;
	xor.b64  	%rd874, %rd852, %rd798;
	xor.b64  	%rd875, %rd852, %rd825;
	and.b64  	%rd876, %rd875, %rd874;
	xor.b64  	%rd877, %rd876, %rd852;
	add.s64 	%rd878, %rd867, %rd877;
	add.s64 	%rd879, %rd878, %rd873;
	add.s32 	%r6034, %r8475, 6;
	mul.wide.s32 	%rd880, %r6034, 8;
	add.s64 	%rd881, %rd718, %rd880;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6035,%dummy}, %rd868;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6036}, %rd868;
	}
	shf.r.wrap.b32 	%r6037, %r6036, %r6035, 14;
	shf.r.wrap.b32 	%r6038, %r6035, %r6036, 14;
	mov.b64 	%rd882, {%r6038, %r6037};
	shf.r.wrap.b32 	%r6039, %r6036, %r6035, 18;
	shf.r.wrap.b32 	%r6040, %r6035, %r6036, 18;
	mov.b64 	%rd883, {%r6040, %r6039};
	xor.b64  	%rd884, %rd883, %rd882;
	shf.l.wrap.b32 	%r6041, %r6035, %r6036, 23;
	shf.l.wrap.b32 	%r6042, %r6036, %r6035, 23;
	mov.b64 	%rd885, {%r6042, %r6041};
	xor.b64  	%rd886, %rd884, %rd885;
	xor.b64  	%rd887, %rd841, %rd814;
	and.b64  	%rd888, %rd868, %rd887;
	xor.b64  	%rd889, %rd888, %rd814;
	add.s64 	%rd890, %rd787, %rd1205;
	ld.const.u64 	%rd891, [%rd881];
	add.s64 	%rd892, %rd890, %rd891;
	add.s64 	%rd893, %rd892, %rd889;
	add.s64 	%rd894, %rd893, %rd886;
	add.s64 	%rd895, %rd894, %rd798;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6043,%dummy}, %rd879;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6044}, %rd879;
	}
	shf.r.wrap.b32 	%r6045, %r6044, %r6043, 28;
	shf.r.wrap.b32 	%r6046, %r6043, %r6044, 28;
	mov.b64 	%rd896, {%r6046, %r6045};
	shf.l.wrap.b32 	%r6047, %r6043, %r6044, 30;
	shf.l.wrap.b32 	%r6048, %r6044, %r6043, 30;
	mov.b64 	%rd897, {%r6048, %r6047};
	xor.b64  	%rd898, %rd897, %rd896;
	shf.l.wrap.b32 	%r6049, %r6043, %r6044, 25;
	shf.l.wrap.b32 	%r6050, %r6044, %r6043, 25;
	mov.b64 	%rd899, {%r6050, %r6049};
	xor.b64  	%rd900, %rd898, %rd899;
	xor.b64  	%rd901, %rd879, %rd825;
	xor.b64  	%rd902, %rd879, %rd852;
	and.b64  	%rd903, %rd902, %rd901;
	xor.b64  	%rd904, %rd903, %rd879;
	add.s64 	%rd905, %rd894, %rd904;
	add.s64 	%rd906, %rd905, %rd900;
	add.s32 	%r6051, %r8475, 7;
	mul.wide.s32 	%rd907, %r6051, 8;
	add.s64 	%rd908, %rd718, %rd907;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6052,%dummy}, %rd895;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6053}, %rd895;
	}
	shf.r.wrap.b32 	%r6054, %r6053, %r6052, 14;
	shf.r.wrap.b32 	%r6055, %r6052, %r6053, 14;
	mov.b64 	%rd909, {%r6055, %r6054};
	shf.r.wrap.b32 	%r6056, %r6053, %r6052, 18;
	shf.r.wrap.b32 	%r6057, %r6052, %r6053, 18;
	mov.b64 	%rd910, {%r6057, %r6056};
	xor.b64  	%rd911, %rd910, %rd909;
	shf.l.wrap.b32 	%r6058, %r6052, %r6053, 23;
	shf.l.wrap.b32 	%r6059, %r6053, %r6052, 23;
	mov.b64 	%rd912, {%r6059, %r6058};
	xor.b64  	%rd913, %rd911, %rd912;
	xor.b64  	%rd914, %rd868, %rd841;
	and.b64  	%rd915, %rd895, %rd914;
	xor.b64  	%rd916, %rd915, %rd841;
	add.s64 	%rd917, %rd814, %rd1206;
	ld.const.u64 	%rd918, [%rd908];
	add.s64 	%rd919, %rd917, %rd918;
	add.s64 	%rd920, %rd919, %rd916;
	add.s64 	%rd921, %rd920, %rd913;
	add.s64 	%rd922, %rd921, %rd825;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6060,%dummy}, %rd906;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6061}, %rd906;
	}
	shf.r.wrap.b32 	%r6062, %r6061, %r6060, 28;
	shf.r.wrap.b32 	%r6063, %r6060, %r6061, 28;
	mov.b64 	%rd923, {%r6063, %r6062};
	shf.l.wrap.b32 	%r6064, %r6060, %r6061, 30;
	shf.l.wrap.b32 	%r6065, %r6061, %r6060, 30;
	mov.b64 	%rd924, {%r6065, %r6064};
	xor.b64  	%rd925, %rd924, %rd923;
	shf.l.wrap.b32 	%r6066, %r6060, %r6061, 25;
	shf.l.wrap.b32 	%r6067, %r6061, %r6060, 25;
	mov.b64 	%rd926, {%r6067, %r6066};
	xor.b64  	%rd927, %rd925, %rd926;
	xor.b64  	%rd928, %rd906, %rd852;
	xor.b64  	%rd929, %rd906, %rd879;
	and.b64  	%rd930, %rd929, %rd928;
	xor.b64  	%rd931, %rd930, %rd906;
	add.s64 	%rd932, %rd921, %rd931;
	add.s64 	%rd933, %rd932, %rd927;
	add.s32 	%r6068, %r8475, 8;
	mul.wide.s32 	%rd934, %r6068, 8;
	add.s64 	%rd935, %rd718, %rd934;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6069,%dummy}, %rd922;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6070}, %rd922;
	}
	shf.r.wrap.b32 	%r6071, %r6070, %r6069, 14;
	shf.r.wrap.b32 	%r6072, %r6069, %r6070, 14;
	mov.b64 	%rd936, {%r6072, %r6071};
	shf.r.wrap.b32 	%r6073, %r6070, %r6069, 18;
	shf.r.wrap.b32 	%r6074, %r6069, %r6070, 18;
	mov.b64 	%rd937, {%r6074, %r6073};
	xor.b64  	%rd938, %rd937, %rd936;
	shf.l.wrap.b32 	%r6075, %r6069, %r6070, 23;
	shf.l.wrap.b32 	%r6076, %r6070, %r6069, 23;
	mov.b64 	%rd939, {%r6076, %r6075};
	xor.b64  	%rd940, %rd938, %rd939;
	xor.b64  	%rd941, %rd895, %rd868;
	and.b64  	%rd942, %rd922, %rd941;
	xor.b64  	%rd943, %rd942, %rd868;
	add.s64 	%rd944, %rd841, %rd1190;
	ld.const.u64 	%rd945, [%rd935];
	add.s64 	%rd946, %rd944, %rd945;
	add.s64 	%rd947, %rd946, %rd943;
	add.s64 	%rd948, %rd947, %rd940;
	add.s64 	%rd949, %rd948, %rd852;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6077,%dummy}, %rd933;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6078}, %rd933;
	}
	shf.r.wrap.b32 	%r6079, %r6078, %r6077, 28;
	shf.r.wrap.b32 	%r6080, %r6077, %r6078, 28;
	mov.b64 	%rd950, {%r6080, %r6079};
	shf.l.wrap.b32 	%r6081, %r6077, %r6078, 30;
	shf.l.wrap.b32 	%r6082, %r6078, %r6077, 30;
	mov.b64 	%rd951, {%r6082, %r6081};
	xor.b64  	%rd952, %rd951, %rd950;
	shf.l.wrap.b32 	%r6083, %r6077, %r6078, 25;
	shf.l.wrap.b32 	%r6084, %r6078, %r6077, 25;
	mov.b64 	%rd953, {%r6084, %r6083};
	xor.b64  	%rd954, %rd952, %rd953;
	xor.b64  	%rd955, %rd933, %rd879;
	xor.b64  	%rd956, %rd933, %rd906;
	and.b64  	%rd957, %rd956, %rd955;
	xor.b64  	%rd958, %rd957, %rd933;
	add.s64 	%rd959, %rd948, %rd958;
	add.s64 	%rd960, %rd959, %rd954;
	add.s32 	%r6085, %r8475, 9;
	mul.wide.s32 	%rd961, %r6085, 8;
	add.s64 	%rd962, %rd718, %rd961;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6086,%dummy}, %rd949;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6087}, %rd949;
	}
	shf.r.wrap.b32 	%r6088, %r6087, %r6086, 14;
	shf.r.wrap.b32 	%r6089, %r6086, %r6087, 14;
	mov.b64 	%rd963, {%r6089, %r6088};
	shf.r.wrap.b32 	%r6090, %r6087, %r6086, 18;
	shf.r.wrap.b32 	%r6091, %r6086, %r6087, 18;
	mov.b64 	%rd964, {%r6091, %r6090};
	xor.b64  	%rd965, %rd964, %rd963;
	shf.l.wrap.b32 	%r6092, %r6086, %r6087, 23;
	shf.l.wrap.b32 	%r6093, %r6087, %r6086, 23;
	mov.b64 	%rd966, {%r6093, %r6092};
	xor.b64  	%rd967, %rd965, %rd966;
	xor.b64  	%rd968, %rd922, %rd895;
	and.b64  	%rd969, %rd949, %rd968;
	xor.b64  	%rd970, %rd969, %rd895;
	add.s64 	%rd971, %rd868, %rd1189;
	ld.const.u64 	%rd972, [%rd962];
	add.s64 	%rd973, %rd971, %rd972;
	add.s64 	%rd974, %rd973, %rd970;
	add.s64 	%rd975, %rd974, %rd967;
	add.s64 	%rd976, %rd975, %rd879;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6094,%dummy}, %rd960;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6095}, %rd960;
	}
	shf.r.wrap.b32 	%r6096, %r6095, %r6094, 28;
	shf.r.wrap.b32 	%r6097, %r6094, %r6095, 28;
	mov.b64 	%rd977, {%r6097, %r6096};
	shf.l.wrap.b32 	%r6098, %r6094, %r6095, 30;
	shf.l.wrap.b32 	%r6099, %r6095, %r6094, 30;
	mov.b64 	%rd978, {%r6099, %r6098};
	xor.b64  	%rd979, %rd978, %rd977;
	shf.l.wrap.b32 	%r6100, %r6094, %r6095, 25;
	shf.l.wrap.b32 	%r6101, %r6095, %r6094, 25;
	mov.b64 	%rd980, {%r6101, %r6100};
	xor.b64  	%rd981, %rd979, %rd980;
	xor.b64  	%rd982, %rd960, %rd906;
	xor.b64  	%rd983, %rd960, %rd933;
	and.b64  	%rd984, %rd983, %rd982;
	xor.b64  	%rd985, %rd984, %rd960;
	add.s64 	%rd986, %rd975, %rd985;
	add.s64 	%rd987, %rd986, %rd981;
	add.s32 	%r6102, %r8475, 10;
	mul.wide.s32 	%rd988, %r6102, 8;
	add.s64 	%rd989, %rd718, %rd988;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6103,%dummy}, %rd976;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6104}, %rd976;
	}
	shf.r.wrap.b32 	%r6105, %r6104, %r6103, 14;
	shf.r.wrap.b32 	%r6106, %r6103, %r6104, 14;
	mov.b64 	%rd990, {%r6106, %r6105};
	shf.r.wrap.b32 	%r6107, %r6104, %r6103, 18;
	shf.r.wrap.b32 	%r6108, %r6103, %r6104, 18;
	mov.b64 	%rd991, {%r6108, %r6107};
	xor.b64  	%rd992, %rd991, %rd990;
	shf.l.wrap.b32 	%r6109, %r6103, %r6104, 23;
	shf.l.wrap.b32 	%r6110, %r6104, %r6103, 23;
	mov.b64 	%rd993, {%r6110, %r6109};
	xor.b64  	%rd994, %rd992, %rd993;
	xor.b64  	%rd995, %rd949, %rd922;
	and.b64  	%rd996, %rd976, %rd995;
	xor.b64  	%rd997, %rd996, %rd922;
	add.s64 	%rd998, %rd895, %rd1188;
	ld.const.u64 	%rd999, [%rd989];
	add.s64 	%rd1000, %rd998, %rd999;
	add.s64 	%rd1001, %rd1000, %rd997;
	add.s64 	%rd1002, %rd1001, %rd994;
	add.s64 	%rd1003, %rd1002, %rd906;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6111,%dummy}, %rd987;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6112}, %rd987;
	}
	shf.r.wrap.b32 	%r6113, %r6112, %r6111, 28;
	shf.r.wrap.b32 	%r6114, %r6111, %r6112, 28;
	mov.b64 	%rd1004, {%r6114, %r6113};
	shf.l.wrap.b32 	%r6115, %r6111, %r6112, 30;
	shf.l.wrap.b32 	%r6116, %r6112, %r6111, 30;
	mov.b64 	%rd1005, {%r6116, %r6115};
	xor.b64  	%rd1006, %rd1005, %rd1004;
	shf.l.wrap.b32 	%r6117, %r6111, %r6112, 25;
	shf.l.wrap.b32 	%r6118, %r6112, %r6111, 25;
	mov.b64 	%rd1007, {%r6118, %r6117};
	xor.b64  	%rd1008, %rd1006, %rd1007;
	xor.b64  	%rd1009, %rd987, %rd933;
	xor.b64  	%rd1010, %rd987, %rd960;
	and.b64  	%rd1011, %rd1010, %rd1009;
	xor.b64  	%rd1012, %rd1011, %rd987;
	add.s64 	%rd1013, %rd1002, %rd1012;
	add.s64 	%rd1014, %rd1013, %rd1008;
	add.s32 	%r6119, %r8475, 11;
	mul.wide.s32 	%rd1015, %r6119, 8;
	add.s64 	%rd1016, %rd718, %rd1015;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6120,%dummy}, %rd1003;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6121}, %rd1003;
	}
	shf.r.wrap.b32 	%r6122, %r6121, %r6120, 14;
	shf.r.wrap.b32 	%r6123, %r6120, %r6121, 14;
	mov.b64 	%rd1017, {%r6123, %r6122};
	shf.r.wrap.b32 	%r6124, %r6121, %r6120, 18;
	shf.r.wrap.b32 	%r6125, %r6120, %r6121, 18;
	mov.b64 	%rd1018, {%r6125, %r6124};
	xor.b64  	%rd1019, %rd1018, %rd1017;
	shf.l.wrap.b32 	%r6126, %r6120, %r6121, 23;
	shf.l.wrap.b32 	%r6127, %r6121, %r6120, 23;
	mov.b64 	%rd1020, {%r6127, %r6126};
	xor.b64  	%rd1021, %rd1019, %rd1020;
	xor.b64  	%rd1022, %rd976, %rd949;
	and.b64  	%rd1023, %rd1003, %rd1022;
	xor.b64  	%rd1024, %rd1023, %rd949;
	add.s64 	%rd1025, %rd922, %rd1187;
	ld.const.u64 	%rd1026, [%rd1016];
	add.s64 	%rd1027, %rd1025, %rd1026;
	add.s64 	%rd1028, %rd1027, %rd1024;
	add.s64 	%rd1029, %rd1028, %rd1021;
	add.s64 	%rd1030, %rd1029, %rd933;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6128,%dummy}, %rd1014;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6129}, %rd1014;
	}
	shf.r.wrap.b32 	%r6130, %r6129, %r6128, 28;
	shf.r.wrap.b32 	%r6131, %r6128, %r6129, 28;
	mov.b64 	%rd1031, {%r6131, %r6130};
	shf.l.wrap.b32 	%r6132, %r6128, %r6129, 30;
	shf.l.wrap.b32 	%r6133, %r6129, %r6128, 30;
	mov.b64 	%rd1032, {%r6133, %r6132};
	xor.b64  	%rd1033, %rd1032, %rd1031;
	shf.l.wrap.b32 	%r6134, %r6128, %r6129, 25;
	shf.l.wrap.b32 	%r6135, %r6129, %r6128, 25;
	mov.b64 	%rd1034, {%r6135, %r6134};
	xor.b64  	%rd1035, %rd1033, %rd1034;
	xor.b64  	%rd1036, %rd1014, %rd960;
	xor.b64  	%rd1037, %rd1014, %rd987;
	and.b64  	%rd1038, %rd1037, %rd1036;
	xor.b64  	%rd1039, %rd1038, %rd1014;
	add.s64 	%rd1040, %rd1029, %rd1039;
	add.s64 	%rd1041, %rd1040, %rd1035;
	add.s32 	%r6136, %r8475, 12;
	mul.wide.s32 	%rd1042, %r6136, 8;
	add.s64 	%rd1043, %rd718, %rd1042;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6137,%dummy}, %rd1030;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6138}, %rd1030;
	}
	shf.r.wrap.b32 	%r6139, %r6138, %r6137, 14;
	shf.r.wrap.b32 	%r6140, %r6137, %r6138, 14;
	mov.b64 	%rd1044, {%r6140, %r6139};
	shf.r.wrap.b32 	%r6141, %r6138, %r6137, 18;
	shf.r.wrap.b32 	%r6142, %r6137, %r6138, 18;
	mov.b64 	%rd1045, {%r6142, %r6141};
	xor.b64  	%rd1046, %rd1045, %rd1044;
	shf.l.wrap.b32 	%r6143, %r6137, %r6138, 23;
	shf.l.wrap.b32 	%r6144, %r6138, %r6137, 23;
	mov.b64 	%rd1047, {%r6144, %r6143};
	xor.b64  	%rd1048, %rd1046, %rd1047;
	xor.b64  	%rd1049, %rd1003, %rd976;
	and.b64  	%rd1050, %rd1030, %rd1049;
	xor.b64  	%rd1051, %rd1050, %rd976;
	add.s64 	%rd1052, %rd949, %rd1186;
	ld.const.u64 	%rd1053, [%rd1043];
	add.s64 	%rd1054, %rd1052, %rd1053;
	add.s64 	%rd1055, %rd1054, %rd1051;
	add.s64 	%rd1056, %rd1055, %rd1048;
	add.s64 	%rd1198, %rd1056, %rd960;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6145,%dummy}, %rd1041;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6146}, %rd1041;
	}
	shf.r.wrap.b32 	%r6147, %r6146, %r6145, 28;
	shf.r.wrap.b32 	%r6148, %r6145, %r6146, 28;
	mov.b64 	%rd1057, {%r6148, %r6147};
	shf.l.wrap.b32 	%r6149, %r6145, %r6146, 30;
	shf.l.wrap.b32 	%r6150, %r6146, %r6145, 30;
	mov.b64 	%rd1058, {%r6150, %r6149};
	xor.b64  	%rd1059, %rd1058, %rd1057;
	shf.l.wrap.b32 	%r6151, %r6145, %r6146, 25;
	shf.l.wrap.b32 	%r6152, %r6146, %r6145, 25;
	mov.b64 	%rd1060, {%r6152, %r6151};
	xor.b64  	%rd1061, %rd1059, %rd1060;
	xor.b64  	%rd1062, %rd1041, %rd987;
	xor.b64  	%rd1063, %rd1041, %rd1014;
	and.b64  	%rd1064, %rd1063, %rd1062;
	xor.b64  	%rd1065, %rd1064, %rd1041;
	add.s64 	%rd1066, %rd1056, %rd1065;
	add.s64 	%rd1194, %rd1066, %rd1061;
	add.s32 	%r6153, %r8475, 13;
	mul.wide.s32 	%rd1067, %r6153, 8;
	add.s64 	%rd1068, %rd718, %rd1067;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6154,%dummy}, %rd1198;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6155}, %rd1198;
	}
	shf.r.wrap.b32 	%r6156, %r6155, %r6154, 14;
	shf.r.wrap.b32 	%r6157, %r6154, %r6155, 14;
	mov.b64 	%rd1069, {%r6157, %r6156};
	shf.r.wrap.b32 	%r6158, %r6155, %r6154, 18;
	shf.r.wrap.b32 	%r6159, %r6154, %r6155, 18;
	mov.b64 	%rd1070, {%r6159, %r6158};
	xor.b64  	%rd1071, %rd1070, %rd1069;
	shf.l.wrap.b32 	%r6160, %r6154, %r6155, 23;
	shf.l.wrap.b32 	%r6161, %r6155, %r6154, 23;
	mov.b64 	%rd1072, {%r6161, %r6160};
	xor.b64  	%rd1073, %rd1071, %rd1072;
	xor.b64  	%rd1074, %rd1030, %rd1003;
	and.b64  	%rd1075, %rd1198, %rd1074;
	xor.b64  	%rd1076, %rd1075, %rd1003;
	add.s64 	%rd1077, %rd976, %rd1185;
	ld.const.u64 	%rd1078, [%rd1068];
	add.s64 	%rd1079, %rd1077, %rd1078;
	add.s64 	%rd1080, %rd1079, %rd1076;
	add.s64 	%rd1081, %rd1080, %rd1073;
	add.s64 	%rd1197, %rd1081, %rd987;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6162,%dummy}, %rd1194;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6163}, %rd1194;
	}
	shf.r.wrap.b32 	%r6164, %r6163, %r6162, 28;
	shf.r.wrap.b32 	%r6165, %r6162, %r6163, 28;
	mov.b64 	%rd1082, {%r6165, %r6164};
	shf.l.wrap.b32 	%r6166, %r6162, %r6163, 30;
	shf.l.wrap.b32 	%r6167, %r6163, %r6162, 30;
	mov.b64 	%rd1083, {%r6167, %r6166};
	xor.b64  	%rd1084, %rd1083, %rd1082;
	shf.l.wrap.b32 	%r6168, %r6162, %r6163, 25;
	shf.l.wrap.b32 	%r6169, %r6163, %r6162, 25;
	mov.b64 	%rd1085, {%r6169, %r6168};
	xor.b64  	%rd1086, %rd1084, %rd1085;
	xor.b64  	%rd1087, %rd1194, %rd1014;
	xor.b64  	%rd1088, %rd1194, %rd1041;
	and.b64  	%rd1089, %rd1088, %rd1087;
	xor.b64  	%rd1090, %rd1089, %rd1194;
	add.s64 	%rd1091, %rd1081, %rd1090;
	add.s64 	%rd1193, %rd1091, %rd1086;
	add.s32 	%r6170, %r8475, 14;
	mul.wide.s32 	%rd1092, %r6170, 8;
	add.s64 	%rd1093, %rd718, %rd1092;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6171,%dummy}, %rd1197;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6172}, %rd1197;
	}
	shf.r.wrap.b32 	%r6173, %r6172, %r6171, 14;
	shf.r.wrap.b32 	%r6174, %r6171, %r6172, 14;
	mov.b64 	%rd1094, {%r6174, %r6173};
	shf.r.wrap.b32 	%r6175, %r6172, %r6171, 18;
	shf.r.wrap.b32 	%r6176, %r6171, %r6172, 18;
	mov.b64 	%rd1095, {%r6176, %r6175};
	xor.b64  	%rd1096, %rd1095, %rd1094;
	shf.l.wrap.b32 	%r6177, %r6171, %r6172, 23;
	shf.l.wrap.b32 	%r6178, %r6172, %r6171, 23;
	mov.b64 	%rd1097, {%r6178, %r6177};
	xor.b64  	%rd1098, %rd1096, %rd1097;
	xor.b64  	%rd1099, %rd1198, %rd1030;
	and.b64  	%rd1100, %rd1197, %rd1099;
	xor.b64  	%rd1101, %rd1100, %rd1030;
	add.s64 	%rd1102, %rd1003, %rd1184;
	ld.const.u64 	%rd1103, [%rd1093];
	add.s64 	%rd1104, %rd1102, %rd1103;
	add.s64 	%rd1105, %rd1104, %rd1101;
	add.s64 	%rd1106, %rd1105, %rd1098;
	add.s64 	%rd1196, %rd1106, %rd1014;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6179,%dummy}, %rd1193;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6180}, %rd1193;
	}
	shf.r.wrap.b32 	%r6181, %r6180, %r6179, 28;
	shf.r.wrap.b32 	%r6182, %r6179, %r6180, 28;
	mov.b64 	%rd1107, {%r6182, %r6181};
	shf.l.wrap.b32 	%r6183, %r6179, %r6180, 30;
	shf.l.wrap.b32 	%r6184, %r6180, %r6179, 30;
	mov.b64 	%rd1108, {%r6184, %r6183};
	xor.b64  	%rd1109, %rd1108, %rd1107;
	shf.l.wrap.b32 	%r6185, %r6179, %r6180, 25;
	shf.l.wrap.b32 	%r6186, %r6180, %r6179, 25;
	mov.b64 	%rd1110, {%r6186, %r6185};
	xor.b64  	%rd1111, %rd1109, %rd1110;
	xor.b64  	%rd1112, %rd1193, %rd1041;
	xor.b64  	%rd1113, %rd1193, %rd1194;
	and.b64  	%rd1114, %rd1113, %rd1112;
	xor.b64  	%rd1115, %rd1114, %rd1193;
	add.s64 	%rd1116, %rd1106, %rd1115;
	add.s64 	%rd1192, %rd1116, %rd1111;
	add.s32 	%r6187, %r8475, 15;
	mul.wide.s32 	%rd1117, %r6187, 8;
	add.s64 	%rd1118, %rd718, %rd1117;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6188,%dummy}, %rd1196;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6189}, %rd1196;
	}
	shf.r.wrap.b32 	%r6190, %r6189, %r6188, 14;
	shf.r.wrap.b32 	%r6191, %r6188, %r6189, 14;
	mov.b64 	%rd1119, {%r6191, %r6190};
	shf.r.wrap.b32 	%r6192, %r6189, %r6188, 18;
	shf.r.wrap.b32 	%r6193, %r6188, %r6189, 18;
	mov.b64 	%rd1120, {%r6193, %r6192};
	xor.b64  	%rd1121, %rd1120, %rd1119;
	shf.l.wrap.b32 	%r6194, %r6188, %r6189, 23;
	shf.l.wrap.b32 	%r6195, %r6189, %r6188, 23;
	mov.b64 	%rd1122, {%r6195, %r6194};
	xor.b64  	%rd1123, %rd1121, %rd1122;
	xor.b64  	%rd1124, %rd1197, %rd1198;
	and.b64  	%rd1125, %rd1196, %rd1124;
	xor.b64  	%rd1126, %rd1125, %rd1198;
	add.s64 	%rd1127, %rd1030, %rd1183;
	ld.const.u64 	%rd1128, [%rd1118];
	add.s64 	%rd1129, %rd1127, %rd1128;
	add.s64 	%rd1130, %rd1129, %rd1126;
	add.s64 	%rd1131, %rd1130, %rd1123;
	add.s64 	%rd1195, %rd1131, %rd1041;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6196,%dummy}, %rd1192;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6197}, %rd1192;
	}
	shf.r.wrap.b32 	%r6198, %r6197, %r6196, 28;
	shf.r.wrap.b32 	%r6199, %r6196, %r6197, 28;
	mov.b64 	%rd1132, {%r6199, %r6198};
	shf.l.wrap.b32 	%r6200, %r6196, %r6197, 30;
	shf.l.wrap.b32 	%r6201, %r6197, %r6196, 30;
	mov.b64 	%rd1133, {%r6201, %r6200};
	xor.b64  	%rd1134, %rd1133, %rd1132;
	shf.l.wrap.b32 	%r6202, %r6196, %r6197, 25;
	shf.l.wrap.b32 	%r6203, %r6197, %r6196, 25;
	mov.b64 	%rd1135, {%r6203, %r6202};
	xor.b64  	%rd1136, %rd1134, %rd1135;
	xor.b64  	%rd1137, %rd1192, %rd1194;
	xor.b64  	%rd1138, %rd1192, %rd1193;
	and.b64  	%rd1139, %rd1138, %rd1137;
	xor.b64  	%rd1140, %rd1139, %rd1192;
	add.s64 	%rd1141, %rd1131, %rd1140;
	add.s64 	%rd1191, %rd1141, %rd1136;
	add.s32 	%r8475, %r8475, 16;
	setp.lt.s32	%p49, %r8475, 80;
	@%p49 bra 	BB1_90;

	ld.param.u64 	%rd1182, [sha512_update_128_param_0];
	add.s64 	%rd1181, %rd1182, 192;
	ld.param.u64 	%rd1180, [sha512_update_128_param_0];
	add.s64 	%rd1142, %rd30, %rd1191;
	st.u64 	[%rd1180], %rd1142;
	add.s64 	%rd1143, %rd32, %rd1192;
	st.u64 	[%rd1181+-184], %rd1143;
	add.s64 	%rd1144, %rd31, %rd1193;
	st.u64 	[%rd1181+-176], %rd1144;
	add.s64 	%rd1145, %rd29, %rd1194;
	st.u64 	[%rd1181+-168], %rd1145;
	add.s64 	%rd1146, %rd25, %rd1195;
	st.u64 	[%rd1181+-160], %rd1146;
	add.s64 	%rd1147, %rd27, %rd1196;
	st.u64 	[%rd1181+-152], %rd1147;
	add.s64 	%rd1148, %rd26, %rd1197;
	st.u64 	[%rd1181+-144], %rd1148;
	add.s64 	%rd1149, %rd28, %rd1198;
	st.u64 	[%rd1181+-136], %rd1149;
	st.v2.u32 	[%rd1181+-128], {%r8446, %r8445};
	st.v2.u32 	[%rd1181+-120], {%r8444, %r8443};
	st.v2.u32 	[%rd1181+-112], {%r8450, %r8449};
	st.v2.u32 	[%rd1181+-104], {%r8448, %r8447};
	st.v2.u32 	[%rd1181+-96], {%r8454, %r8453};
	st.v2.u32 	[%rd1181+-88], {%r8452, %r8451};
	st.v2.u32 	[%rd1181+-80], {%r8458, %r8457};
	st.v2.u32 	[%rd1181+-72], {%r8456, %r8455};
	st.v2.u32 	[%rd1181+-64], {%r8462, %r8461};
	st.v2.u32 	[%rd1181+-56], {%r8460, %r8459};
	st.v2.u32 	[%rd1181+-48], {%r8466, %r8465};
	st.v2.u32 	[%rd1181+-40], {%r8464, %r8463};
	st.v2.u32 	[%rd1181+-32], {%r8470, %r8469};
	st.v2.u32 	[%rd1181+-24], {%r8468, %r8467};
	st.v2.u32 	[%rd1181+-16], {%r8474, %r8473};
	st.v2.u32 	[%rd1181+-8], {%r8472, %r8471};

BB1_173:
	ret;
}

.func sha512_update(
	.param .b64 sha512_update_param_0,
	.param .b64 sha512_update_param_1,
	.param .b32 sha512_update_param_2
)
{
	.local .align 16 .b8 	__local_depot2[128];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<50>;
	.reg .b32 	%r<7395>;
	.reg .b64 	%rd<1269>;


	mov.u64 	%rd1268, __local_depot2;
	cvta.local.u64 	%SP, %rd1268;
	ld.param.u64 	%rd106, [sha512_update_param_0];
	add.u64 	%rd108, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd108;
	add.u64 	%rd109, %SP, 16;
	cvta.to.local.u64 	%rd2, %rd109;
	add.u64 	%rd110, %SP, 32;
	cvta.to.local.u64 	%rd3, %rd110;
	add.u64 	%rd111, %SP, 48;
	cvta.to.local.u64 	%rd4, %rd111;
	add.u64 	%rd112, %SP, 64;
	cvta.to.local.u64 	%rd5, %rd112;
	add.u64 	%rd113, %SP, 80;
	cvta.to.local.u64 	%rd6, %rd113;
	add.u64 	%rd114, %SP, 96;
	cvta.to.local.u64 	%rd7, %rd114;
	add.u64 	%rd115, %SP, 112;
	cvta.to.local.u64 	%rd8, %rd115;
	add.s64 	%rd9, %rd106, 192;
	mov.u32 	%r7358, 0;
	mov.u32 	%r7359, %r7358;
	bra.uni 	BB2_1;

BB2_91:
	add.s64 	%rd1211, %rd47, %rd1252;
	st.u64 	[%rd106], %rd1211;
	add.s64 	%rd1212, %rd49, %rd1253;
	st.u64 	[%rd9+-184], %rd1212;
	add.s64 	%rd1213, %rd48, %rd1254;
	st.u64 	[%rd9+-176], %rd1213;
	add.s64 	%rd1214, %rd46, %rd1255;
	st.u64 	[%rd9+-168], %rd1214;
	add.s64 	%rd1215, %rd42, %rd1256;
	st.u64 	[%rd9+-160], %rd1215;
	add.s64 	%rd1216, %rd44, %rd1257;
	st.u64 	[%rd9+-152], %rd1216;
	add.s64 	%rd1217, %rd43, %rd1258;
	st.u64 	[%rd9+-144], %rd1217;
	add.s64 	%rd1218, %rd45, %rd1259;
	st.u64 	[%rd9+-136], %rd1218;
	st.v2.u32 	[%rd9+-128], {%r7365, %r7364};
	st.v2.u32 	[%rd9+-120], {%r7363, %r7362};
	st.v2.u32 	[%rd9+-112], {%r7369, %r7368};
	st.v2.u32 	[%rd9+-104], {%r7367, %r7366};
	st.v2.u32 	[%rd9+-96], {%r7373, %r7372};
	st.v2.u32 	[%rd9+-88], {%r7371, %r7370};
	st.v2.u32 	[%rd9+-80], {%r7377, %r7376};
	st.v2.u32 	[%rd9+-72], {%r7375, %r7374};
	st.v2.u32 	[%rd9+-64], {%r7381, %r7380};
	st.v2.u32 	[%rd9+-56], {%r7379, %r7378};
	st.v2.u32 	[%rd9+-48], {%r7385, %r7384};
	st.v2.u32 	[%rd9+-40], {%r7383, %r7382};
	st.v2.u32 	[%rd9+-32], {%r7389, %r7388};
	st.v2.u32 	[%rd9+-24], {%r7387, %r7386};
	st.v2.u32 	[%rd9+-16], {%r7393, %r7392};
	st.v2.u32 	[%rd9+-8], {%r7391, %r7390};
	add.s32 	%r7358, %r7358, 128;
	add.s32 	%r7359, %r7359, 32;

BB2_1:
	ld.param.u32 	%r7356, [sha512_update_param_2];
	add.s32 	%r7355, %r7356, -128;
	ld.param.u64 	%rd1219, [sha512_update_param_1];
	mul.wide.s32 	%rd116, %r7359, 4;
	add.s64 	%rd117, %rd1219, %rd116;
	ld.u32 	%r7361, [%rd117];
	st.local.u32 	[%rd1], %r7361;
	add.s32 	%r580, %r7359, 1;
	mul.wide.s32 	%rd118, %r580, 4;
	add.s64 	%rd119, %rd1219, %rd118;
	ld.u32 	%r7360, [%rd119];
	st.local.u32 	[%rd1+4], %r7360;
	add.s32 	%r581, %r7359, 2;
	mul.wide.s32 	%rd120, %r581, 4;
	add.s64 	%rd121, %rd1219, %rd120;
	ld.u32 	%r582, [%rd121];
	st.local.u32 	[%rd1+8], %r582;
	add.s32 	%r583, %r7359, 3;
	mul.wide.s32 	%rd122, %r583, 4;
	add.s64 	%rd123, %rd1219, %rd122;
	ld.u32 	%r584, [%rd123];
	st.local.u32 	[%rd1+12], %r584;
	add.s32 	%r585, %r7359, 4;
	mul.wide.s32 	%rd124, %r585, 4;
	add.s64 	%rd125, %rd1219, %rd124;
	ld.u32 	%r586, [%rd125];
	st.local.u32 	[%rd2], %r586;
	add.s32 	%r587, %r7359, 5;
	mul.wide.s32 	%rd126, %r587, 4;
	add.s64 	%rd127, %rd1219, %rd126;
	ld.u32 	%r588, [%rd127];
	st.local.u32 	[%rd2+4], %r588;
	add.s32 	%r589, %r7359, 6;
	mul.wide.s32 	%rd128, %r589, 4;
	add.s64 	%rd129, %rd1219, %rd128;
	ld.u32 	%r590, [%rd129];
	st.local.u32 	[%rd2+8], %r590;
	add.s32 	%r591, %r7359, 7;
	mul.wide.s32 	%rd130, %r591, 4;
	add.s64 	%rd131, %rd1219, %rd130;
	ld.u32 	%r592, [%rd131];
	st.local.u32 	[%rd2+12], %r592;
	add.s32 	%r593, %r7359, 8;
	mul.wide.s32 	%rd132, %r593, 4;
	add.s64 	%rd133, %rd1219, %rd132;
	ld.u32 	%r594, [%rd133];
	st.local.u32 	[%rd3], %r594;
	add.s32 	%r595, %r7359, 9;
	mul.wide.s32 	%rd134, %r595, 4;
	add.s64 	%rd135, %rd1219, %rd134;
	ld.u32 	%r596, [%rd135];
	st.local.u32 	[%rd3+4], %r596;
	add.s32 	%r597, %r7359, 10;
	mul.wide.s32 	%rd136, %r597, 4;
	add.s64 	%rd137, %rd1219, %rd136;
	ld.u32 	%r598, [%rd137];
	st.local.u32 	[%rd3+8], %r598;
	add.s32 	%r599, %r7359, 11;
	mul.wide.s32 	%rd138, %r599, 4;
	add.s64 	%rd139, %rd1219, %rd138;
	ld.u32 	%r600, [%rd139];
	st.local.u32 	[%rd3+12], %r600;
	add.s32 	%r601, %r7359, 12;
	mul.wide.s32 	%rd140, %r601, 4;
	add.s64 	%rd141, %rd1219, %rd140;
	ld.u32 	%r602, [%rd141];
	st.local.u32 	[%rd4], %r602;
	add.s32 	%r603, %r7359, 13;
	mul.wide.s32 	%rd142, %r603, 4;
	add.s64 	%rd143, %rd1219, %rd142;
	ld.u32 	%r604, [%rd143];
	st.local.u32 	[%rd4+4], %r604;
	add.s32 	%r605, %r7359, 14;
	mul.wide.s32 	%rd144, %r605, 4;
	add.s64 	%rd145, %rd1219, %rd144;
	ld.u32 	%r606, [%rd145];
	st.local.u32 	[%rd4+8], %r606;
	add.s32 	%r607, %r7359, 15;
	mul.wide.s32 	%rd146, %r607, 4;
	add.s64 	%rd147, %rd1219, %rd146;
	ld.u32 	%r608, [%rd147];
	st.local.u32 	[%rd4+12], %r608;
	add.s32 	%r609, %r7359, 16;
	mul.wide.s32 	%rd148, %r609, 4;
	add.s64 	%rd149, %rd1219, %rd148;
	ld.u32 	%r610, [%rd149];
	st.local.u32 	[%rd5], %r610;
	add.s32 	%r611, %r7359, 17;
	mul.wide.s32 	%rd150, %r611, 4;
	add.s64 	%rd151, %rd1219, %rd150;
	ld.u32 	%r612, [%rd151];
	st.local.u32 	[%rd5+4], %r612;
	add.s32 	%r613, %r7359, 18;
	mul.wide.s32 	%rd152, %r613, 4;
	add.s64 	%rd153, %rd1219, %rd152;
	ld.u32 	%r614, [%rd153];
	st.local.u32 	[%rd5+8], %r614;
	add.s32 	%r615, %r7359, 19;
	mul.wide.s32 	%rd154, %r615, 4;
	add.s64 	%rd155, %rd1219, %rd154;
	ld.u32 	%r616, [%rd155];
	st.local.u32 	[%rd5+12], %r616;
	add.s32 	%r617, %r7359, 20;
	mul.wide.s32 	%rd156, %r617, 4;
	add.s64 	%rd157, %rd1219, %rd156;
	ld.u32 	%r618, [%rd157];
	st.local.u32 	[%rd6], %r618;
	add.s32 	%r619, %r7359, 21;
	mul.wide.s32 	%rd158, %r619, 4;
	add.s64 	%rd159, %rd1219, %rd158;
	ld.u32 	%r620, [%rd159];
	st.local.u32 	[%rd6+4], %r620;
	add.s32 	%r621, %r7359, 22;
	mul.wide.s32 	%rd160, %r621, 4;
	add.s64 	%rd161, %rd1219, %rd160;
	ld.u32 	%r622, [%rd161];
	st.local.u32 	[%rd6+8], %r622;
	add.s32 	%r623, %r7359, 23;
	mul.wide.s32 	%rd162, %r623, 4;
	add.s64 	%rd163, %rd1219, %rd162;
	ld.u32 	%r624, [%rd163];
	st.local.u32 	[%rd6+12], %r624;
	add.s32 	%r625, %r7359, 24;
	mul.wide.s32 	%rd164, %r625, 4;
	add.s64 	%rd165, %rd1219, %rd164;
	ld.u32 	%r626, [%rd165];
	st.local.u32 	[%rd7], %r626;
	add.s32 	%r627, %r7359, 25;
	mul.wide.s32 	%rd166, %r627, 4;
	add.s64 	%rd167, %rd1219, %rd166;
	ld.u32 	%r628, [%rd167];
	st.local.u32 	[%rd7+4], %r628;
	add.s32 	%r629, %r7359, 26;
	mul.wide.s32 	%rd168, %r629, 4;
	add.s64 	%rd169, %rd1219, %rd168;
	ld.u32 	%r630, [%rd169];
	st.local.u32 	[%rd7+8], %r630;
	add.s32 	%r631, %r7359, 27;
	mul.wide.s32 	%rd170, %r631, 4;
	add.s64 	%rd171, %rd1219, %rd170;
	ld.u32 	%r632, [%rd171];
	st.local.u32 	[%rd7+12], %r632;
	add.s32 	%r633, %r7359, 28;
	mul.wide.s32 	%rd172, %r633, 4;
	add.s64 	%rd173, %rd1219, %rd172;
	ld.u32 	%r634, [%rd173];
	st.local.u32 	[%rd8], %r634;
	add.s32 	%r635, %r7359, 29;
	mul.wide.s32 	%rd174, %r635, 4;
	add.s64 	%rd175, %rd1219, %rd174;
	ld.u32 	%r636, [%rd175];
	st.local.u32 	[%rd8+4], %r636;
	add.s32 	%r637, %r7359, 30;
	mul.wide.s32 	%rd176, %r637, 4;
	add.s64 	%rd177, %rd1219, %rd176;
	ld.u32 	%r638, [%rd177];
	st.local.u32 	[%rd8+8], %r638;
	add.s32 	%r639, %r7359, 31;
	mul.wide.s32 	%rd178, %r639, 4;
	add.s64 	%rd179, %rd1219, %rd178;
	ld.u32 	%r6, [%rd179];
	st.local.u32 	[%rd8+12], %r6;
	setp.lt.s32	%p1, %r7358, %r7355;
	@%p1 bra 	BB2_3;
	bra.uni 	BB2_2;

BB2_3:
	ld.u32 	%r674, [%rd9];
	add.s32 	%r675, %r674, 128;
	st.u32 	[%rd9], %r675;
	bfe.u32 	%r673, %r674, 2, 5;
	and.b32  	%r676, %r674, 3;
	shl.b32 	%r677, %r676, 2;
	mov.u32 	%r678, 1985229328;
	shr.u32 	%r679, %r678, %r677;
	and.b32  	%r7, %r679, 65535;
	mov.u32 	%r7362, 0;
	setp.gt.s32	%p2, %r673, 15;
	@%p2 bra 	BB2_36;

	setp.gt.s32	%p26, %r673, 7;
	@%p26 bra 	BB2_21;

	setp.gt.s32	%p38, %r673, 3;
	@%p38 bra 	BB2_14;

	setp.gt.s32	%p44, %r673, 1;
	@%p44 bra 	BB2_10;

	setp.eq.s32	%p47, %r673, 0;
	@%p47 bra 	BB2_88;
	bra.uni 	BB2_8;

BB2_88:
	mov.u32 	%r7362, 0;
	// inline asm
	prmt.b32 %r7365, %r7362, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r6453, %r6454}, [%rd8+8];
	// inline asm
	prmt.b32 %r6294, %r6454, %r6453, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r6294;
	ld.local.u32 	%r6299, [%rd8+8];
	ld.local.u32 	%r6300, [%rd8+4];
	// inline asm
	prmt.b32 %r6298, %r6299, %r6300, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r6298;
	ld.local.v2.u32 	{%r6455, %r6456}, [%rd8];
	// inline asm
	prmt.b32 %r6302, %r6456, %r6455, %r7;
	// inline asm
	st.local.u32 	[%rd8+4], %r6302;
	ld.local.u32 	%r6307, [%rd8];
	ld.local.u32 	%r6308, [%rd7+12];
	// inline asm
	prmt.b32 %r6306, %r6307, %r6308, %r7;
	// inline asm
	st.local.u32 	[%rd8], %r6306;
	ld.local.v2.u32 	{%r6457, %r6458}, [%rd7+8];
	// inline asm
	prmt.b32 %r6310, %r6458, %r6457, %r7;
	// inline asm
	st.local.u32 	[%rd7+12], %r6310;
	ld.local.u32 	%r6315, [%rd7+8];
	ld.local.u32 	%r6316, [%rd7+4];
	// inline asm
	prmt.b32 %r6314, %r6315, %r6316, %r7;
	// inline asm
	st.local.u32 	[%rd7+8], %r6314;
	ld.local.v2.u32 	{%r6459, %r6460}, [%rd7];
	// inline asm
	prmt.b32 %r6318, %r6460, %r6459, %r7;
	// inline asm
	st.local.u32 	[%rd7+4], %r6318;
	ld.local.u32 	%r6323, [%rd7];
	ld.local.u32 	%r6324, [%rd6+12];
	// inline asm
	prmt.b32 %r6322, %r6323, %r6324, %r7;
	// inline asm
	st.local.u32 	[%rd7], %r6322;
	ld.local.v2.u32 	{%r6461, %r6462}, [%rd6+8];
	// inline asm
	prmt.b32 %r6326, %r6462, %r6461, %r7;
	// inline asm
	st.local.u32 	[%rd6+12], %r6326;
	ld.local.u32 	%r6331, [%rd6+8];
	ld.local.u32 	%r6332, [%rd6+4];
	// inline asm
	prmt.b32 %r6330, %r6331, %r6332, %r7;
	// inline asm
	st.local.u32 	[%rd6+8], %r6330;
	ld.local.v2.u32 	{%r6463, %r6464}, [%rd6];
	// inline asm
	prmt.b32 %r6334, %r6464, %r6463, %r7;
	// inline asm
	st.local.u32 	[%rd6+4], %r6334;
	ld.local.u32 	%r6339, [%rd6];
	ld.local.u32 	%r6340, [%rd5+12];
	// inline asm
	prmt.b32 %r6338, %r6339, %r6340, %r7;
	// inline asm
	st.local.u32 	[%rd6], %r6338;
	ld.local.v2.u32 	{%r6465, %r6466}, [%rd5+8];
	// inline asm
	prmt.b32 %r6342, %r6466, %r6465, %r7;
	// inline asm
	st.local.u32 	[%rd5+12], %r6342;
	ld.local.u32 	%r6347, [%rd5+8];
	ld.local.u32 	%r6348, [%rd5+4];
	// inline asm
	prmt.b32 %r6346, %r6347, %r6348, %r7;
	// inline asm
	st.local.u32 	[%rd5+8], %r6346;
	ld.local.v2.u32 	{%r6467, %r6468}, [%rd5];
	// inline asm
	prmt.b32 %r6350, %r6468, %r6467, %r7;
	// inline asm
	st.local.u32 	[%rd5+4], %r6350;
	ld.local.u32 	%r6355, [%rd5];
	ld.local.u32 	%r6356, [%rd4+12];
	// inline asm
	prmt.b32 %r6354, %r6355, %r6356, %r7;
	// inline asm
	st.local.u32 	[%rd5], %r6354;
	ld.local.v2.u32 	{%r6469, %r6470}, [%rd4+8];
	// inline asm
	prmt.b32 %r6358, %r6470, %r6469, %r7;
	// inline asm
	st.local.u32 	[%rd4+12], %r6358;
	ld.local.u32 	%r6363, [%rd4+8];
	ld.local.u32 	%r6364, [%rd4+4];
	// inline asm
	prmt.b32 %r6362, %r6363, %r6364, %r7;
	// inline asm
	st.local.u32 	[%rd4+8], %r6362;
	ld.local.v2.u32 	{%r6471, %r6472}, [%rd4];
	// inline asm
	prmt.b32 %r6366, %r6472, %r6471, %r7;
	// inline asm
	st.local.u32 	[%rd4+4], %r6366;
	ld.local.u32 	%r6371, [%rd4];
	ld.local.u32 	%r6372, [%rd3+12];
	// inline asm
	prmt.b32 %r6370, %r6371, %r6372, %r7;
	// inline asm
	st.local.u32 	[%rd4], %r6370;
	ld.local.v2.u32 	{%r6473, %r6474}, [%rd3+8];
	// inline asm
	prmt.b32 %r6374, %r6474, %r6473, %r7;
	// inline asm
	st.local.u32 	[%rd3+12], %r6374;
	ld.local.u32 	%r6379, [%rd3+8];
	ld.local.u32 	%r6380, [%rd3+4];
	// inline asm
	prmt.b32 %r6378, %r6379, %r6380, %r7;
	// inline asm
	st.local.u32 	[%rd3+8], %r6378;
	ld.local.v2.u32 	{%r6475, %r6476}, [%rd3];
	// inline asm
	prmt.b32 %r6382, %r6476, %r6475, %r7;
	// inline asm
	st.local.u32 	[%rd3+4], %r6382;
	ld.local.u32 	%r6387, [%rd3];
	ld.local.u32 	%r6388, [%rd2+12];
	// inline asm
	prmt.b32 %r6386, %r6387, %r6388, %r7;
	// inline asm
	st.local.u32 	[%rd3], %r6386;
	ld.local.v2.u32 	{%r6477, %r6478}, [%rd2+8];
	// inline asm
	prmt.b32 %r6390, %r6478, %r6477, %r7;
	// inline asm
	st.local.u32 	[%rd2+12], %r6390;
	ld.local.u32 	%r6395, [%rd2+8];
	ld.local.u32 	%r6396, [%rd2+4];
	// inline asm
	prmt.b32 %r6394, %r6395, %r6396, %r7;
	// inline asm
	st.local.u32 	[%rd2+8], %r6394;
	ld.local.v2.u32 	{%r6479, %r6480}, [%rd2];
	// inline asm
	prmt.b32 %r6398, %r6480, %r6479, %r7;
	// inline asm
	st.local.u32 	[%rd2+4], %r6398;
	ld.local.u32 	%r6403, [%rd2];
	ld.local.u32 	%r6404, [%rd1+12];
	// inline asm
	prmt.b32 %r6402, %r6403, %r6404, %r7;
	// inline asm
	st.local.u32 	[%rd2], %r6402;
	ld.local.v2.u32 	{%r6481, %r6482}, [%rd1+8];
	// inline asm
	prmt.b32 %r6406, %r6482, %r6481, %r7;
	// inline asm
	st.local.u32 	[%rd1+12], %r6406;
	ld.local.u32 	%r6411, [%rd1+8];
	ld.local.u32 	%r6412, [%rd1+4];
	// inline asm
	prmt.b32 %r6410, %r6411, %r6412, %r7;
	// inline asm
	st.local.u32 	[%rd1+8], %r6410;
	ld.local.v2.u32 	{%r6483, %r6484}, [%rd1];
	// inline asm
	prmt.b32 %r6414, %r6484, %r6483, %r7;
	// inline asm
	st.local.u32 	[%rd1+4], %r6414;
	ld.local.u32 	%r6419, [%rd1];
	// inline asm
	prmt.b32 %r7361, %r6419, %r7362, %r7;
	// inline asm
	st.local.u32 	[%rd1], %r7361;
	ld.local.u32 	%r7360, [%rd1+4];
	mov.u32 	%r7363, %r7362;
	mov.u32 	%r7364, %r7362;
	mov.u32 	%r7366, %r7362;
	mov.u32 	%r7367, %r7362;
	mov.u32 	%r7368, %r7362;
	mov.u32 	%r7369, %r7362;
	mov.u32 	%r7370, %r7362;
	mov.u32 	%r7371, %r7362;
	mov.u32 	%r7372, %r7362;
	mov.u32 	%r7373, %r7362;
	mov.u32 	%r7374, %r7362;
	mov.u32 	%r7375, %r7362;
	mov.u32 	%r7376, %r7362;
	mov.u32 	%r7377, %r7362;
	mov.u32 	%r7378, %r7362;
	mov.u32 	%r7379, %r7362;
	mov.u32 	%r7380, %r7362;
	mov.u32 	%r7381, %r7362;
	mov.u32 	%r7382, %r7362;
	mov.u32 	%r7383, %r7362;
	mov.u32 	%r7384, %r7362;
	mov.u32 	%r7385, %r7362;
	mov.u32 	%r7386, %r7362;
	mov.u32 	%r7387, %r7362;
	mov.u32 	%r7388, %r7362;
	mov.u32 	%r7389, %r7362;
	mov.u32 	%r7390, %r7362;
	mov.u32 	%r7391, %r7362;
	mov.u32 	%r7392, %r7362;
	mov.u32 	%r7393, %r7362;
	bra.uni 	BB2_89;

BB2_36:
	setp.gt.s32	%p3, %r673, 23;
	@%p3 bra 	BB2_52;

	setp.gt.s32	%p15, %r673, 19;
	@%p15 bra 	BB2_45;

	setp.gt.s32	%p21, %r673, 17;
	@%p21 bra 	BB2_42;

	setp.eq.s32	%p24, %r673, 16;
	@%p24 bra 	BB2_74;
	bra.uni 	BB2_40;

BB2_74:
	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7381, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3424, %r3425}, [%rd8+8];
	// inline asm
	prmt.b32 %r7374, %r3425, %r3424, %r7;
	// inline asm
	ld.local.u32 	%r3284, [%rd8+8];
	ld.local.u32 	%r3285, [%rd8+4];
	// inline asm
	prmt.b32 %r7375, %r3284, %r3285, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3426, %r3427}, [%rd8];
	// inline asm
	prmt.b32 %r7376, %r3427, %r3426, %r7;
	// inline asm
	ld.local.u32 	%r3292, [%rd8];
	ld.local.u32 	%r3293, [%rd7+12];
	// inline asm
	prmt.b32 %r7377, %r3292, %r3293, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3428, %r3429}, [%rd7+8];
	// inline asm
	prmt.b32 %r7370, %r3429, %r3428, %r7;
	// inline asm
	ld.local.u32 	%r3300, [%rd7+8];
	ld.local.u32 	%r3301, [%rd7+4];
	// inline asm
	prmt.b32 %r7371, %r3300, %r3301, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3430, %r3431}, [%rd7];
	// inline asm
	prmt.b32 %r7372, %r3431, %r3430, %r7;
	// inline asm
	ld.local.u32 	%r3308, [%rd7];
	ld.local.u32 	%r3309, [%rd6+12];
	// inline asm
	prmt.b32 %r7373, %r3308, %r3309, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3432, %r3433}, [%rd6+8];
	// inline asm
	prmt.b32 %r7366, %r3433, %r3432, %r7;
	// inline asm
	ld.local.u32 	%r3316, [%rd6+8];
	ld.local.u32 	%r3317, [%rd6+4];
	// inline asm
	prmt.b32 %r7367, %r3316, %r3317, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3434, %r3435}, [%rd6];
	// inline asm
	prmt.b32 %r7368, %r3435, %r3434, %r7;
	// inline asm
	ld.local.u32 	%r3324, [%rd6];
	ld.local.u32 	%r3325, [%rd5+12];
	// inline asm
	prmt.b32 %r7369, %r3324, %r3325, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3436, %r3437}, [%rd5+8];
	// inline asm
	prmt.b32 %r7362, %r3437, %r3436, %r7;
	// inline asm
	ld.local.u32 	%r3332, [%rd5+8];
	ld.local.u32 	%r3333, [%rd5+4];
	// inline asm
	prmt.b32 %r7363, %r3332, %r3333, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3438, %r3439}, [%rd5];
	// inline asm
	prmt.b32 %r7364, %r3439, %r3438, %r7;
	// inline asm
	ld.local.u32 	%r3340, [%rd5];
	ld.local.u32 	%r3341, [%rd4+12];
	// inline asm
	prmt.b32 %r7365, %r3340, %r3341, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3440, %r3441}, [%rd4+8];
	// inline asm
	prmt.b32 %r3343, %r3441, %r3440, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r3343;
	ld.local.u32 	%r3348, [%rd4+8];
	ld.local.u32 	%r3349, [%rd4+4];
	// inline asm
	prmt.b32 %r3347, %r3348, %r3349, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r3347;
	ld.local.v2.u32 	{%r3442, %r3443}, [%rd4];
	// inline asm
	prmt.b32 %r3351, %r3443, %r3442, %r7;
	// inline asm
	st.local.u32 	[%rd8+4], %r3351;
	ld.local.u32 	%r3356, [%rd4];
	ld.local.u32 	%r3357, [%rd3+12];
	// inline asm
	prmt.b32 %r3355, %r3356, %r3357, %r7;
	// inline asm
	st.local.u32 	[%rd8], %r3355;
	ld.local.v2.u32 	{%r3444, %r3445}, [%rd3+8];
	// inline asm
	prmt.b32 %r3359, %r3445, %r3444, %r7;
	// inline asm
	st.local.u32 	[%rd7+12], %r3359;
	ld.local.u32 	%r3364, [%rd3+8];
	ld.local.u32 	%r3365, [%rd3+4];
	// inline asm
	prmt.b32 %r3363, %r3364, %r3365, %r7;
	// inline asm
	st.local.u32 	[%rd7+8], %r3363;
	ld.local.v2.u32 	{%r3446, %r3447}, [%rd3];
	// inline asm
	prmt.b32 %r3367, %r3447, %r3446, %r7;
	// inline asm
	st.local.u32 	[%rd7+4], %r3367;
	ld.local.u32 	%r3372, [%rd3];
	ld.local.u32 	%r3373, [%rd2+12];
	// inline asm
	prmt.b32 %r3371, %r3372, %r3373, %r7;
	// inline asm
	st.local.u32 	[%rd7], %r3371;
	ld.local.v2.u32 	{%r3448, %r3449}, [%rd2+8];
	// inline asm
	prmt.b32 %r3375, %r3449, %r3448, %r7;
	// inline asm
	st.local.u32 	[%rd6+12], %r3375;
	ld.local.u32 	%r3380, [%rd2+8];
	ld.local.u32 	%r3381, [%rd2+4];
	// inline asm
	prmt.b32 %r3379, %r3380, %r3381, %r7;
	// inline asm
	st.local.u32 	[%rd6+8], %r3379;
	ld.local.v2.u32 	{%r3450, %r3451}, [%rd2];
	// inline asm
	prmt.b32 %r3383, %r3451, %r3450, %r7;
	// inline asm
	st.local.u32 	[%rd6+4], %r3383;
	ld.local.u32 	%r3388, [%rd2];
	ld.local.u32 	%r3389, [%rd1+12];
	// inline asm
	prmt.b32 %r3387, %r3388, %r3389, %r7;
	// inline asm
	st.local.u32 	[%rd6], %r3387;
	ld.local.v2.u32 	{%r3452, %r3453}, [%rd1+8];
	// inline asm
	prmt.b32 %r3391, %r3453, %r3452, %r7;
	// inline asm
	st.local.u32 	[%rd5+12], %r3391;
	ld.local.u32 	%r3396, [%rd1+8];
	ld.local.u32 	%r3397, [%rd1+4];
	// inline asm
	prmt.b32 %r3395, %r3396, %r3397, %r7;
	// inline asm
	st.local.u32 	[%rd5+8], %r3395;
	ld.local.v2.u32 	{%r3454, %r3455}, [%rd1];
	// inline asm
	prmt.b32 %r3399, %r3455, %r3454, %r7;
	// inline asm
	st.local.u32 	[%rd5+4], %r3399;
	ld.local.u32 	%r3404, [%rd1];
	// inline asm
	prmt.b32 %r3403, %r3404, %r7360, %r7;
	// inline asm
	st.local.u32 	[%rd5], %r3403;
	st.local.v4.u32 	[%rd4], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd3], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd2], {%r7360, %r7360, %r7360, %r7360};
	st.local.v2.u32 	[%rd1+8], {%r7360, %r7360};
	mov.u64 	%rd203, 0;
	st.local.u64 	[%rd1], %rd203;
	mov.u32 	%r7361, %r7360;
	mov.u32 	%r7378, %r7360;
	mov.u32 	%r7379, %r7360;
	mov.u32 	%r7380, %r7360;
	bra.uni 	BB2_84;

BB2_21:
	setp.gt.s32	%p27, %r673, 11;
	@%p27 bra 	BB2_29;

	setp.gt.s32	%p33, %r673, 9;
	@%p33 bra 	BB2_26;

	setp.eq.s32	%p36, %r673, 8;
	@%p36 bra 	BB2_78;
	bra.uni 	BB2_24;

BB2_78:
	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7373, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r4908, %r4909}, [%rd8+8];
	// inline asm
	prmt.b32 %r7366, %r4909, %r4908, %r7;
	// inline asm
	ld.local.u32 	%r4760, [%rd8+8];
	ld.local.u32 	%r4761, [%rd8+4];
	// inline asm
	prmt.b32 %r7367, %r4760, %r4761, %r7;
	// inline asm
	ld.local.v2.u32 	{%r4910, %r4911}, [%rd8];
	// inline asm
	prmt.b32 %r7368, %r4911, %r4910, %r7;
	// inline asm
	ld.local.u32 	%r4768, [%rd8];
	ld.local.u32 	%r4769, [%rd7+12];
	// inline asm
	prmt.b32 %r7369, %r4768, %r4769, %r7;
	// inline asm
	ld.local.v2.u32 	{%r4912, %r4913}, [%rd7+8];
	// inline asm
	prmt.b32 %r7362, %r4913, %r4912, %r7;
	// inline asm
	ld.local.u32 	%r4776, [%rd7+8];
	ld.local.u32 	%r4777, [%rd7+4];
	// inline asm
	prmt.b32 %r7363, %r4776, %r4777, %r7;
	// inline asm
	ld.local.v2.u32 	{%r4914, %r4915}, [%rd7];
	// inline asm
	prmt.b32 %r7364, %r4915, %r4914, %r7;
	// inline asm
	ld.local.u32 	%r4784, [%rd7];
	ld.local.u32 	%r4785, [%rd6+12];
	// inline asm
	prmt.b32 %r7365, %r4784, %r4785, %r7;
	// inline asm
	ld.local.v2.u32 	{%r4916, %r4917}, [%rd6+8];
	// inline asm
	prmt.b32 %r4787, %r4917, %r4916, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r4787;
	ld.local.u32 	%r4792, [%rd6+8];
	ld.local.u32 	%r4793, [%rd6+4];
	// inline asm
	prmt.b32 %r4791, %r4792, %r4793, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r4791;
	ld.local.v2.u32 	{%r4918, %r4919}, [%rd6];
	// inline asm
	prmt.b32 %r4795, %r4919, %r4918, %r7;
	// inline asm
	st.local.u32 	[%rd8+4], %r4795;
	ld.local.u32 	%r4800, [%rd6];
	ld.local.u32 	%r4801, [%rd5+12];
	// inline asm
	prmt.b32 %r4799, %r4800, %r4801, %r7;
	// inline asm
	st.local.u32 	[%rd8], %r4799;
	ld.local.v2.u32 	{%r4920, %r4921}, [%rd5+8];
	// inline asm
	prmt.b32 %r4803, %r4921, %r4920, %r7;
	// inline asm
	st.local.u32 	[%rd7+12], %r4803;
	ld.local.u32 	%r4808, [%rd5+8];
	ld.local.u32 	%r4809, [%rd5+4];
	// inline asm
	prmt.b32 %r4807, %r4808, %r4809, %r7;
	// inline asm
	st.local.u32 	[%rd7+8], %r4807;
	ld.local.v2.u32 	{%r4922, %r4923}, [%rd5];
	// inline asm
	prmt.b32 %r4811, %r4923, %r4922, %r7;
	// inline asm
	st.local.u32 	[%rd7+4], %r4811;
	ld.local.u32 	%r4816, [%rd5];
	ld.local.u32 	%r4817, [%rd4+12];
	// inline asm
	prmt.b32 %r4815, %r4816, %r4817, %r7;
	// inline asm
	st.local.u32 	[%rd7], %r4815;
	ld.local.v2.u32 	{%r4924, %r4925}, [%rd4+8];
	// inline asm
	prmt.b32 %r4819, %r4925, %r4924, %r7;
	// inline asm
	st.local.u32 	[%rd6+12], %r4819;
	ld.local.u32 	%r4824, [%rd4+8];
	ld.local.u32 	%r4825, [%rd4+4];
	// inline asm
	prmt.b32 %r4823, %r4824, %r4825, %r7;
	// inline asm
	st.local.u32 	[%rd6+8], %r4823;
	ld.local.v2.u32 	{%r4926, %r4927}, [%rd4];
	// inline asm
	prmt.b32 %r4827, %r4927, %r4926, %r7;
	// inline asm
	st.local.u32 	[%rd6+4], %r4827;
	ld.local.u32 	%r4832, [%rd4];
	ld.local.u32 	%r4833, [%rd3+12];
	// inline asm
	prmt.b32 %r4831, %r4832, %r4833, %r7;
	// inline asm
	st.local.u32 	[%rd6], %r4831;
	ld.local.v2.u32 	{%r4928, %r4929}, [%rd3+8];
	// inline asm
	prmt.b32 %r4835, %r4929, %r4928, %r7;
	// inline asm
	st.local.u32 	[%rd5+12], %r4835;
	ld.local.u32 	%r4840, [%rd3+8];
	ld.local.u32 	%r4841, [%rd3+4];
	// inline asm
	prmt.b32 %r4839, %r4840, %r4841, %r7;
	// inline asm
	st.local.u32 	[%rd5+8], %r4839;
	ld.local.v2.u32 	{%r4930, %r4931}, [%rd3];
	// inline asm
	prmt.b32 %r4843, %r4931, %r4930, %r7;
	// inline asm
	st.local.u32 	[%rd5+4], %r4843;
	ld.local.u32 	%r4848, [%rd3];
	ld.local.u32 	%r4849, [%rd2+12];
	// inline asm
	prmt.b32 %r4847, %r4848, %r4849, %r7;
	// inline asm
	st.local.u32 	[%rd5], %r4847;
	ld.local.v2.u32 	{%r4932, %r4933}, [%rd2+8];
	// inline asm
	prmt.b32 %r4851, %r4933, %r4932, %r7;
	// inline asm
	st.local.u32 	[%rd4+12], %r4851;
	ld.local.u32 	%r4856, [%rd2+8];
	ld.local.u32 	%r4857, [%rd2+4];
	// inline asm
	prmt.b32 %r4855, %r4856, %r4857, %r7;
	// inline asm
	st.local.u32 	[%rd4+8], %r4855;
	ld.local.v2.u32 	{%r4934, %r4935}, [%rd2];
	// inline asm
	prmt.b32 %r4859, %r4935, %r4934, %r7;
	// inline asm
	st.local.u32 	[%rd4+4], %r4859;
	ld.local.u32 	%r4864, [%rd2];
	ld.local.u32 	%r4865, [%rd1+12];
	// inline asm
	prmt.b32 %r4863, %r4864, %r4865, %r7;
	// inline asm
	st.local.u32 	[%rd4], %r4863;
	ld.local.v2.u32 	{%r4936, %r4937}, [%rd1+8];
	// inline asm
	prmt.b32 %r4867, %r4937, %r4936, %r7;
	// inline asm
	st.local.u32 	[%rd3+12], %r4867;
	ld.local.u32 	%r4872, [%rd1+8];
	ld.local.u32 	%r4873, [%rd1+4];
	// inline asm
	prmt.b32 %r4871, %r4872, %r4873, %r7;
	// inline asm
	st.local.u32 	[%rd3+8], %r4871;
	ld.local.v2.u32 	{%r4938, %r4939}, [%rd1];
	// inline asm
	prmt.b32 %r4875, %r4939, %r4938, %r7;
	// inline asm
	st.local.u32 	[%rd3+4], %r4875;
	ld.local.u32 	%r4880, [%rd1];
	// inline asm
	prmt.b32 %r4879, %r4880, %r7360, %r7;
	// inline asm
	st.local.u32 	[%rd3], %r4879;
	st.local.v4.u32 	[%rd2], {%r7360, %r7360, %r7360, %r7360};
	st.local.v2.u32 	[%rd1+8], {%r7360, %r7360};
	mov.u64 	%rd211, 0;
	st.local.u64 	[%rd1], %rd211;
	mov.u32 	%r7361, %r7360;
	mov.u32 	%r7370, %r7360;
	mov.u32 	%r7371, %r7360;
	mov.u32 	%r7372, %r7360;
	bra.uni 	BB2_82;

BB2_52:
	setp.gt.s32	%p4, %r673, 27;
	@%p4 bra 	BB2_60;

	setp.gt.s32	%p10, %r673, 25;
	@%p10 bra 	BB2_57;

	setp.eq.s32	%p13, %r673, 24;
	@%p13 bra 	BB2_70;
	bra.uni 	BB2_55;

BB2_70:
	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7389, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2004, %r2005}, [%rd8+8];
	// inline asm
	prmt.b32 %r7382, %r2005, %r2004, %r7;
	// inline asm
	ld.local.u32 	%r1872, [%rd8+8];
	ld.local.u32 	%r1873, [%rd8+4];
	// inline asm
	prmt.b32 %r7383, %r1872, %r1873, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2006, %r2007}, [%rd8];
	// inline asm
	prmt.b32 %r7384, %r2007, %r2006, %r7;
	// inline asm
	ld.local.u32 	%r1880, [%rd8];
	ld.local.u32 	%r1881, [%rd7+12];
	// inline asm
	prmt.b32 %r7385, %r1880, %r1881, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2008, %r2009}, [%rd7+8];
	// inline asm
	prmt.b32 %r7378, %r2009, %r2008, %r7;
	// inline asm
	ld.local.u32 	%r1888, [%rd7+8];
	ld.local.u32 	%r1889, [%rd7+4];
	// inline asm
	prmt.b32 %r7379, %r1888, %r1889, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2010, %r2011}, [%rd7];
	// inline asm
	prmt.b32 %r7380, %r2011, %r2010, %r7;
	// inline asm
	ld.local.u32 	%r1896, [%rd7];
	ld.local.u32 	%r1897, [%rd6+12];
	// inline asm
	prmt.b32 %r7381, %r1896, %r1897, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2012, %r2013}, [%rd6+8];
	// inline asm
	prmt.b32 %r7374, %r2013, %r2012, %r7;
	// inline asm
	ld.local.u32 	%r1904, [%rd6+8];
	ld.local.u32 	%r1905, [%rd6+4];
	// inline asm
	prmt.b32 %r7375, %r1904, %r1905, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2014, %r2015}, [%rd6];
	// inline asm
	prmt.b32 %r7376, %r2015, %r2014, %r7;
	// inline asm
	ld.local.u32 	%r1912, [%rd6];
	ld.local.u32 	%r1913, [%rd5+12];
	// inline asm
	prmt.b32 %r7377, %r1912, %r1913, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2016, %r2017}, [%rd5+8];
	// inline asm
	prmt.b32 %r7370, %r2017, %r2016, %r7;
	// inline asm
	ld.local.u32 	%r1920, [%rd5+8];
	ld.local.u32 	%r1921, [%rd5+4];
	// inline asm
	prmt.b32 %r7371, %r1920, %r1921, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2018, %r2019}, [%rd5];
	// inline asm
	prmt.b32 %r7372, %r2019, %r2018, %r7;
	// inline asm
	ld.local.u32 	%r1928, [%rd5];
	ld.local.u32 	%r1929, [%rd4+12];
	// inline asm
	prmt.b32 %r7373, %r1928, %r1929, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2020, %r2021}, [%rd4+8];
	// inline asm
	prmt.b32 %r7366, %r2021, %r2020, %r7;
	// inline asm
	ld.local.u32 	%r1936, [%rd4+8];
	ld.local.u32 	%r1937, [%rd4+4];
	// inline asm
	prmt.b32 %r7367, %r1936, %r1937, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2022, %r2023}, [%rd4];
	// inline asm
	prmt.b32 %r7368, %r2023, %r2022, %r7;
	// inline asm
	ld.local.u32 	%r1944, [%rd4];
	ld.local.u32 	%r1945, [%rd3+12];
	// inline asm
	prmt.b32 %r7369, %r1944, %r1945, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2024, %r2025}, [%rd3+8];
	// inline asm
	prmt.b32 %r7362, %r2025, %r2024, %r7;
	// inline asm
	ld.local.u32 	%r1952, [%rd3+8];
	ld.local.u32 	%r1953, [%rd3+4];
	// inline asm
	prmt.b32 %r7363, %r1952, %r1953, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2026, %r2027}, [%rd3];
	// inline asm
	prmt.b32 %r7364, %r2027, %r2026, %r7;
	// inline asm
	ld.local.u32 	%r1960, [%rd3];
	ld.local.u32 	%r1961, [%rd2+12];
	// inline asm
	prmt.b32 %r7365, %r1960, %r1961, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2028, %r2029}, [%rd2+8];
	// inline asm
	prmt.b32 %r1963, %r2029, %r2028, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r1963;
	ld.local.u32 	%r1968, [%rd2+8];
	ld.local.u32 	%r1969, [%rd2+4];
	// inline asm
	prmt.b32 %r1967, %r1968, %r1969, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r1967;
	ld.local.v2.u32 	{%r2030, %r2031}, [%rd2];
	// inline asm
	prmt.b32 %r1971, %r2031, %r2030, %r7;
	// inline asm
	st.local.u32 	[%rd8+4], %r1971;
	ld.local.u32 	%r1976, [%rd2];
	ld.local.u32 	%r1977, [%rd1+12];
	// inline asm
	prmt.b32 %r1975, %r1976, %r1977, %r7;
	// inline asm
	st.local.u32 	[%rd8], %r1975;
	ld.local.v2.u32 	{%r2032, %r2033}, [%rd1+8];
	// inline asm
	prmt.b32 %r1979, %r2033, %r2032, %r7;
	// inline asm
	st.local.u32 	[%rd7+12], %r1979;
	ld.local.u32 	%r1984, [%rd1+8];
	ld.local.u32 	%r1985, [%rd1+4];
	// inline asm
	prmt.b32 %r1983, %r1984, %r1985, %r7;
	// inline asm
	st.local.u32 	[%rd7+8], %r1983;
	ld.local.v2.u32 	{%r2034, %r2035}, [%rd1];
	// inline asm
	prmt.b32 %r1987, %r2035, %r2034, %r7;
	// inline asm
	st.local.u32 	[%rd7+4], %r1987;
	ld.local.u32 	%r1992, [%rd1];
	// inline asm
	prmt.b32 %r1991, %r1992, %r7360, %r7;
	// inline asm
	st.local.u32 	[%rd7], %r1991;
	st.local.v4.u32 	[%rd6], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd5], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd4], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd3], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd2], {%r7360, %r7360, %r7360, %r7360};
	st.local.v2.u32 	[%rd1+8], {%r7360, %r7360};
	mov.u64 	%rd195, 0;
	st.local.u64 	[%rd1], %rd195;
	mov.u32 	%r7361, %r7360;
	mov.u32 	%r7386, %r7360;
	mov.u32 	%r7387, %r7360;
	mov.u32 	%r7388, %r7360;
	bra.uni 	BB2_86;

BB2_14:
	setp.gt.s32	%p39, %r673, 5;
	@%p39 bra 	BB2_18;

	setp.eq.s32	%p42, %r673, 4;
	@%p42 bra 	BB2_80;
	bra.uni 	BB2_16;

BB2_80:
	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7369, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r5674, %r5675}, [%rd8+8];
	// inline asm
	prmt.b32 %r7362, %r5675, %r5674, %r7;
	// inline asm
	ld.local.u32 	%r5522, [%rd8+8];
	ld.local.u32 	%r5523, [%rd8+4];
	// inline asm
	prmt.b32 %r7363, %r5522, %r5523, %r7;
	// inline asm
	ld.local.v2.u32 	{%r5676, %r5677}, [%rd8];
	// inline asm
	prmt.b32 %r7364, %r5677, %r5676, %r7;
	// inline asm
	ld.local.u32 	%r5530, [%rd8];
	ld.local.u32 	%r5531, [%rd7+12];
	// inline asm
	prmt.b32 %r7365, %r5530, %r5531, %r7;
	// inline asm
	ld.local.v2.u32 	{%r5678, %r5679}, [%rd7+8];
	// inline asm
	prmt.b32 %r5533, %r5679, %r5678, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r5533;
	ld.local.u32 	%r5538, [%rd7+8];
	ld.local.u32 	%r5539, [%rd7+4];
	// inline asm
	prmt.b32 %r5537, %r5538, %r5539, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r5537;
	ld.local.v2.u32 	{%r5680, %r5681}, [%rd7];
	// inline asm
	prmt.b32 %r5541, %r5681, %r5680, %r7;
	// inline asm
	st.local.u32 	[%rd8+4], %r5541;
	ld.local.u32 	%r5546, [%rd7];
	ld.local.u32 	%r5547, [%rd6+12];
	// inline asm
	prmt.b32 %r5545, %r5546, %r5547, %r7;
	// inline asm
	st.local.u32 	[%rd8], %r5545;
	ld.local.v2.u32 	{%r5682, %r5683}, [%rd6+8];
	// inline asm
	prmt.b32 %r5549, %r5683, %r5682, %r7;
	// inline asm
	st.local.u32 	[%rd7+12], %r5549;
	ld.local.u32 	%r5554, [%rd6+8];
	ld.local.u32 	%r5555, [%rd6+4];
	// inline asm
	prmt.b32 %r5553, %r5554, %r5555, %r7;
	// inline asm
	st.local.u32 	[%rd7+8], %r5553;
	ld.local.v2.u32 	{%r5684, %r5685}, [%rd6];
	// inline asm
	prmt.b32 %r5557, %r5685, %r5684, %r7;
	// inline asm
	st.local.u32 	[%rd7+4], %r5557;
	ld.local.u32 	%r5562, [%rd6];
	ld.local.u32 	%r5563, [%rd5+12];
	// inline asm
	prmt.b32 %r5561, %r5562, %r5563, %r7;
	// inline asm
	st.local.u32 	[%rd7], %r5561;
	ld.local.v2.u32 	{%r5686, %r5687}, [%rd5+8];
	// inline asm
	prmt.b32 %r5565, %r5687, %r5686, %r7;
	// inline asm
	st.local.u32 	[%rd6+12], %r5565;
	ld.local.u32 	%r5570, [%rd5+8];
	ld.local.u32 	%r5571, [%rd5+4];
	// inline asm
	prmt.b32 %r5569, %r5570, %r5571, %r7;
	// inline asm
	st.local.u32 	[%rd6+8], %r5569;
	ld.local.v2.u32 	{%r5688, %r5689}, [%rd5];
	// inline asm
	prmt.b32 %r5573, %r5689, %r5688, %r7;
	// inline asm
	st.local.u32 	[%rd6+4], %r5573;
	ld.local.u32 	%r5578, [%rd5];
	ld.local.u32 	%r5579, [%rd4+12];
	// inline asm
	prmt.b32 %r5577, %r5578, %r5579, %r7;
	// inline asm
	st.local.u32 	[%rd6], %r5577;
	ld.local.v2.u32 	{%r5690, %r5691}, [%rd4+8];
	// inline asm
	prmt.b32 %r5581, %r5691, %r5690, %r7;
	// inline asm
	st.local.u32 	[%rd5+12], %r5581;
	ld.local.u32 	%r5586, [%rd4+8];
	ld.local.u32 	%r5587, [%rd4+4];
	// inline asm
	prmt.b32 %r5585, %r5586, %r5587, %r7;
	// inline asm
	st.local.u32 	[%rd5+8], %r5585;
	ld.local.v2.u32 	{%r5692, %r5693}, [%rd4];
	// inline asm
	prmt.b32 %r5589, %r5693, %r5692, %r7;
	// inline asm
	st.local.u32 	[%rd5+4], %r5589;
	ld.local.u32 	%r5594, [%rd4];
	ld.local.u32 	%r5595, [%rd3+12];
	// inline asm
	prmt.b32 %r5593, %r5594, %r5595, %r7;
	// inline asm
	st.local.u32 	[%rd5], %r5593;
	ld.local.v2.u32 	{%r5694, %r5695}, [%rd3+8];
	// inline asm
	prmt.b32 %r5597, %r5695, %r5694, %r7;
	// inline asm
	st.local.u32 	[%rd4+12], %r5597;
	ld.local.u32 	%r5602, [%rd3+8];
	ld.local.u32 	%r5603, [%rd3+4];
	// inline asm
	prmt.b32 %r5601, %r5602, %r5603, %r7;
	// inline asm
	st.local.u32 	[%rd4+8], %r5601;
	ld.local.v2.u32 	{%r5696, %r5697}, [%rd3];
	// inline asm
	prmt.b32 %r5605, %r5697, %r5696, %r7;
	// inline asm
	st.local.u32 	[%rd4+4], %r5605;
	ld.local.u32 	%r5610, [%rd3];
	ld.local.u32 	%r5611, [%rd2+12];
	// inline asm
	prmt.b32 %r5609, %r5610, %r5611, %r7;
	// inline asm
	st.local.u32 	[%rd4], %r5609;
	ld.local.v2.u32 	{%r5698, %r5699}, [%rd2+8];
	// inline asm
	prmt.b32 %r5613, %r5699, %r5698, %r7;
	// inline asm
	st.local.u32 	[%rd3+12], %r5613;
	ld.local.u32 	%r5618, [%rd2+8];
	ld.local.u32 	%r5619, [%rd2+4];
	// inline asm
	prmt.b32 %r5617, %r5618, %r5619, %r7;
	// inline asm
	st.local.u32 	[%rd3+8], %r5617;
	ld.local.v2.u32 	{%r5700, %r5701}, [%rd2];
	// inline asm
	prmt.b32 %r5621, %r5701, %r5700, %r7;
	// inline asm
	st.local.u32 	[%rd3+4], %r5621;
	ld.local.u32 	%r5626, [%rd2];
	ld.local.u32 	%r5627, [%rd1+12];
	// inline asm
	prmt.b32 %r5625, %r5626, %r5627, %r7;
	// inline asm
	st.local.u32 	[%rd3], %r5625;
	ld.local.v2.u32 	{%r5702, %r5703}, [%rd1+8];
	// inline asm
	prmt.b32 %r5629, %r5703, %r5702, %r7;
	// inline asm
	st.local.u32 	[%rd2+12], %r5629;
	ld.local.u32 	%r5634, [%rd1+8];
	ld.local.u32 	%r5635, [%rd1+4];
	// inline asm
	prmt.b32 %r5633, %r5634, %r5635, %r7;
	// inline asm
	st.local.u32 	[%rd2+8], %r5633;
	ld.local.v2.u32 	{%r5704, %r5705}, [%rd1];
	// inline asm
	prmt.b32 %r5637, %r5705, %r5704, %r7;
	// inline asm
	st.local.u32 	[%rd2+4], %r5637;
	ld.local.u32 	%r5642, [%rd1];
	// inline asm
	prmt.b32 %r5641, %r5642, %r7360, %r7;
	// inline asm
	st.local.u32 	[%rd2], %r5641;
	st.local.v2.u32 	[%rd1+8], {%r7360, %r7360};
	mov.u64 	%rd215, 0;
	st.local.u64 	[%rd1], %rd215;
	mov.u32 	%r7361, %r7360;
	mov.u32 	%r7366, %r7360;
	mov.u32 	%r7367, %r7360;
	mov.u32 	%r7368, %r7360;
	bra.uni 	BB2_81;

BB2_45:
	setp.gt.s32	%p16, %r673, 21;
	@%p16 bra 	BB2_49;

	setp.eq.s32	%p19, %r673, 20;
	@%p19 bra 	BB2_72;
	bra.uni 	BB2_47;

BB2_72:
	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7385, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2706, %r2707}, [%rd8+8];
	// inline asm
	prmt.b32 %r7378, %r2707, %r2706, %r7;
	// inline asm
	ld.local.u32 	%r2570, [%rd8+8];
	ld.local.u32 	%r2571, [%rd8+4];
	// inline asm
	prmt.b32 %r7379, %r2570, %r2571, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2708, %r2709}, [%rd8];
	// inline asm
	prmt.b32 %r7380, %r2709, %r2708, %r7;
	// inline asm
	ld.local.u32 	%r2578, [%rd8];
	ld.local.u32 	%r2579, [%rd7+12];
	// inline asm
	prmt.b32 %r7381, %r2578, %r2579, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2710, %r2711}, [%rd7+8];
	// inline asm
	prmt.b32 %r7374, %r2711, %r2710, %r7;
	// inline asm
	ld.local.u32 	%r2586, [%rd7+8];
	ld.local.u32 	%r2587, [%rd7+4];
	// inline asm
	prmt.b32 %r7375, %r2586, %r2587, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2712, %r2713}, [%rd7];
	// inline asm
	prmt.b32 %r7376, %r2713, %r2712, %r7;
	// inline asm
	ld.local.u32 	%r2594, [%rd7];
	ld.local.u32 	%r2595, [%rd6+12];
	// inline asm
	prmt.b32 %r7377, %r2594, %r2595, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2714, %r2715}, [%rd6+8];
	// inline asm
	prmt.b32 %r7370, %r2715, %r2714, %r7;
	// inline asm
	ld.local.u32 	%r2602, [%rd6+8];
	ld.local.u32 	%r2603, [%rd6+4];
	// inline asm
	prmt.b32 %r7371, %r2602, %r2603, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2716, %r2717}, [%rd6];
	// inline asm
	prmt.b32 %r7372, %r2717, %r2716, %r7;
	// inline asm
	ld.local.u32 	%r2610, [%rd6];
	ld.local.u32 	%r2611, [%rd5+12];
	// inline asm
	prmt.b32 %r7373, %r2610, %r2611, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2718, %r2719}, [%rd5+8];
	// inline asm
	prmt.b32 %r7366, %r2719, %r2718, %r7;
	// inline asm
	ld.local.u32 	%r2618, [%rd5+8];
	ld.local.u32 	%r2619, [%rd5+4];
	// inline asm
	prmt.b32 %r7367, %r2618, %r2619, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2720, %r2721}, [%rd5];
	// inline asm
	prmt.b32 %r7368, %r2721, %r2720, %r7;
	// inline asm
	ld.local.u32 	%r2626, [%rd5];
	ld.local.u32 	%r2627, [%rd4+12];
	// inline asm
	prmt.b32 %r7369, %r2626, %r2627, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2722, %r2723}, [%rd4+8];
	// inline asm
	prmt.b32 %r7362, %r2723, %r2722, %r7;
	// inline asm
	ld.local.u32 	%r2634, [%rd4+8];
	ld.local.u32 	%r2635, [%rd4+4];
	// inline asm
	prmt.b32 %r7363, %r2634, %r2635, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2724, %r2725}, [%rd4];
	// inline asm
	prmt.b32 %r7364, %r2725, %r2724, %r7;
	// inline asm
	ld.local.u32 	%r2642, [%rd4];
	ld.local.u32 	%r2643, [%rd3+12];
	// inline asm
	prmt.b32 %r7365, %r2642, %r2643, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2726, %r2727}, [%rd3+8];
	// inline asm
	prmt.b32 %r2645, %r2727, %r2726, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r2645;
	ld.local.u32 	%r2650, [%rd3+8];
	ld.local.u32 	%r2651, [%rd3+4];
	// inline asm
	prmt.b32 %r2649, %r2650, %r2651, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r2649;
	ld.local.v2.u32 	{%r2728, %r2729}, [%rd3];
	// inline asm
	prmt.b32 %r2653, %r2729, %r2728, %r7;
	// inline asm
	st.local.u32 	[%rd8+4], %r2653;
	ld.local.u32 	%r2658, [%rd3];
	ld.local.u32 	%r2659, [%rd2+12];
	// inline asm
	prmt.b32 %r2657, %r2658, %r2659, %r7;
	// inline asm
	st.local.u32 	[%rd8], %r2657;
	ld.local.v2.u32 	{%r2730, %r2731}, [%rd2+8];
	// inline asm
	prmt.b32 %r2661, %r2731, %r2730, %r7;
	// inline asm
	st.local.u32 	[%rd7+12], %r2661;
	ld.local.u32 	%r2666, [%rd2+8];
	ld.local.u32 	%r2667, [%rd2+4];
	// inline asm
	prmt.b32 %r2665, %r2666, %r2667, %r7;
	// inline asm
	st.local.u32 	[%rd7+8], %r2665;
	ld.local.v2.u32 	{%r2732, %r2733}, [%rd2];
	// inline asm
	prmt.b32 %r2669, %r2733, %r2732, %r7;
	// inline asm
	st.local.u32 	[%rd7+4], %r2669;
	ld.local.u32 	%r2674, [%rd2];
	ld.local.u32 	%r2675, [%rd1+12];
	// inline asm
	prmt.b32 %r2673, %r2674, %r2675, %r7;
	// inline asm
	st.local.u32 	[%rd7], %r2673;
	ld.local.v2.u32 	{%r2734, %r2735}, [%rd1+8];
	// inline asm
	prmt.b32 %r2677, %r2735, %r2734, %r7;
	// inline asm
	st.local.u32 	[%rd6+12], %r2677;
	ld.local.u32 	%r2682, [%rd1+8];
	ld.local.u32 	%r2683, [%rd1+4];
	// inline asm
	prmt.b32 %r2681, %r2682, %r2683, %r7;
	// inline asm
	st.local.u32 	[%rd6+8], %r2681;
	ld.local.v2.u32 	{%r2736, %r2737}, [%rd1];
	// inline asm
	prmt.b32 %r2685, %r2737, %r2736, %r7;
	// inline asm
	st.local.u32 	[%rd6+4], %r2685;
	ld.local.u32 	%r2690, [%rd1];
	// inline asm
	prmt.b32 %r2689, %r2690, %r7360, %r7;
	// inline asm
	st.local.u32 	[%rd6], %r2689;
	st.local.v4.u32 	[%rd5], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd4], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd3], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd2], {%r7360, %r7360, %r7360, %r7360};
	st.local.v2.u32 	[%rd1+8], {%r7360, %r7360};
	mov.u64 	%rd199, 0;
	st.local.u64 	[%rd1], %rd199;
	mov.u32 	%r7361, %r7360;
	mov.u32 	%r7382, %r7360;
	mov.u32 	%r7383, %r7360;
	mov.u32 	%r7384, %r7360;
	bra.uni 	BB2_85;

BB2_29:
	setp.gt.s32	%p28, %r673, 13;
	@%p28 bra 	BB2_33;

	setp.eq.s32	%p31, %r673, 12;
	@%p31 bra 	BB2_76;
	bra.uni 	BB2_31;

BB2_76:
	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7377, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r4158, %r4159}, [%rd8+8];
	// inline asm
	prmt.b32 %r7370, %r4159, %r4158, %r7;
	// inline asm
	ld.local.u32 	%r4014, [%rd8+8];
	ld.local.u32 	%r4015, [%rd8+4];
	// inline asm
	prmt.b32 %r7371, %r4014, %r4015, %r7;
	// inline asm
	ld.local.v2.u32 	{%r4160, %r4161}, [%rd8];
	// inline asm
	prmt.b32 %r7372, %r4161, %r4160, %r7;
	// inline asm
	ld.local.u32 	%r4022, [%rd8];
	ld.local.u32 	%r4023, [%rd7+12];
	// inline asm
	prmt.b32 %r7373, %r4022, %r4023, %r7;
	// inline asm
	ld.local.v2.u32 	{%r4162, %r4163}, [%rd7+8];
	// inline asm
	prmt.b32 %r7366, %r4163, %r4162, %r7;
	// inline asm
	ld.local.u32 	%r4030, [%rd7+8];
	ld.local.u32 	%r4031, [%rd7+4];
	// inline asm
	prmt.b32 %r7367, %r4030, %r4031, %r7;
	// inline asm
	ld.local.v2.u32 	{%r4164, %r4165}, [%rd7];
	// inline asm
	prmt.b32 %r7368, %r4165, %r4164, %r7;
	// inline asm
	ld.local.u32 	%r4038, [%rd7];
	ld.local.u32 	%r4039, [%rd6+12];
	// inline asm
	prmt.b32 %r7369, %r4038, %r4039, %r7;
	// inline asm
	ld.local.v2.u32 	{%r4166, %r4167}, [%rd6+8];
	// inline asm
	prmt.b32 %r7362, %r4167, %r4166, %r7;
	// inline asm
	ld.local.u32 	%r4046, [%rd6+8];
	ld.local.u32 	%r4047, [%rd6+4];
	// inline asm
	prmt.b32 %r7363, %r4046, %r4047, %r7;
	// inline asm
	ld.local.v2.u32 	{%r4168, %r4169}, [%rd6];
	// inline asm
	prmt.b32 %r7364, %r4169, %r4168, %r7;
	// inline asm
	ld.local.u32 	%r4054, [%rd6];
	ld.local.u32 	%r4055, [%rd5+12];
	// inline asm
	prmt.b32 %r7365, %r4054, %r4055, %r7;
	// inline asm
	ld.local.v2.u32 	{%r4170, %r4171}, [%rd5+8];
	// inline asm
	prmt.b32 %r4057, %r4171, %r4170, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r4057;
	ld.local.u32 	%r4062, [%rd5+8];
	ld.local.u32 	%r4063, [%rd5+4];
	// inline asm
	prmt.b32 %r4061, %r4062, %r4063, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r4061;
	ld.local.v2.u32 	{%r4172, %r4173}, [%rd5];
	// inline asm
	prmt.b32 %r4065, %r4173, %r4172, %r7;
	// inline asm
	st.local.u32 	[%rd8+4], %r4065;
	ld.local.u32 	%r4070, [%rd5];
	ld.local.u32 	%r4071, [%rd4+12];
	// inline asm
	prmt.b32 %r4069, %r4070, %r4071, %r7;
	// inline asm
	st.local.u32 	[%rd8], %r4069;
	ld.local.v2.u32 	{%r4174, %r4175}, [%rd4+8];
	// inline asm
	prmt.b32 %r4073, %r4175, %r4174, %r7;
	// inline asm
	st.local.u32 	[%rd7+12], %r4073;
	ld.local.u32 	%r4078, [%rd4+8];
	ld.local.u32 	%r4079, [%rd4+4];
	// inline asm
	prmt.b32 %r4077, %r4078, %r4079, %r7;
	// inline asm
	st.local.u32 	[%rd7+8], %r4077;
	ld.local.v2.u32 	{%r4176, %r4177}, [%rd4];
	// inline asm
	prmt.b32 %r4081, %r4177, %r4176, %r7;
	// inline asm
	st.local.u32 	[%rd7+4], %r4081;
	ld.local.u32 	%r4086, [%rd4];
	ld.local.u32 	%r4087, [%rd3+12];
	// inline asm
	prmt.b32 %r4085, %r4086, %r4087, %r7;
	// inline asm
	st.local.u32 	[%rd7], %r4085;
	ld.local.v2.u32 	{%r4178, %r4179}, [%rd3+8];
	// inline asm
	prmt.b32 %r4089, %r4179, %r4178, %r7;
	// inline asm
	st.local.u32 	[%rd6+12], %r4089;
	ld.local.u32 	%r4094, [%rd3+8];
	ld.local.u32 	%r4095, [%rd3+4];
	// inline asm
	prmt.b32 %r4093, %r4094, %r4095, %r7;
	// inline asm
	st.local.u32 	[%rd6+8], %r4093;
	ld.local.v2.u32 	{%r4180, %r4181}, [%rd3];
	// inline asm
	prmt.b32 %r4097, %r4181, %r4180, %r7;
	// inline asm
	st.local.u32 	[%rd6+4], %r4097;
	ld.local.u32 	%r4102, [%rd3];
	ld.local.u32 	%r4103, [%rd2+12];
	// inline asm
	prmt.b32 %r4101, %r4102, %r4103, %r7;
	// inline asm
	st.local.u32 	[%rd6], %r4101;
	ld.local.v2.u32 	{%r4182, %r4183}, [%rd2+8];
	// inline asm
	prmt.b32 %r4105, %r4183, %r4182, %r7;
	// inline asm
	st.local.u32 	[%rd5+12], %r4105;
	ld.local.u32 	%r4110, [%rd2+8];
	ld.local.u32 	%r4111, [%rd2+4];
	// inline asm
	prmt.b32 %r4109, %r4110, %r4111, %r7;
	// inline asm
	st.local.u32 	[%rd5+8], %r4109;
	ld.local.v2.u32 	{%r4184, %r4185}, [%rd2];
	// inline asm
	prmt.b32 %r4113, %r4185, %r4184, %r7;
	// inline asm
	st.local.u32 	[%rd5+4], %r4113;
	ld.local.u32 	%r4118, [%rd2];
	ld.local.u32 	%r4119, [%rd1+12];
	// inline asm
	prmt.b32 %r4117, %r4118, %r4119, %r7;
	// inline asm
	st.local.u32 	[%rd5], %r4117;
	ld.local.v2.u32 	{%r4186, %r4187}, [%rd1+8];
	// inline asm
	prmt.b32 %r4121, %r4187, %r4186, %r7;
	// inline asm
	st.local.u32 	[%rd4+12], %r4121;
	ld.local.u32 	%r4126, [%rd1+8];
	ld.local.u32 	%r4127, [%rd1+4];
	// inline asm
	prmt.b32 %r4125, %r4126, %r4127, %r7;
	// inline asm
	st.local.u32 	[%rd4+8], %r4125;
	ld.local.v2.u32 	{%r4188, %r4189}, [%rd1];
	// inline asm
	prmt.b32 %r4129, %r4189, %r4188, %r7;
	// inline asm
	st.local.u32 	[%rd4+4], %r4129;
	ld.local.u32 	%r4134, [%rd1];
	// inline asm
	prmt.b32 %r4133, %r4134, %r7360, %r7;
	// inline asm
	st.local.u32 	[%rd4], %r4133;
	st.local.v4.u32 	[%rd3], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd2], {%r7360, %r7360, %r7360, %r7360};
	st.local.v2.u32 	[%rd1+8], {%r7360, %r7360};
	mov.u64 	%rd207, 0;
	st.local.u64 	[%rd1], %rd207;
	mov.u32 	%r7361, %r7360;
	mov.u32 	%r7374, %r7360;
	mov.u32 	%r7375, %r7360;
	mov.u32 	%r7376, %r7360;
	bra.uni 	BB2_83;

BB2_60:
	setp.gt.s32	%p5, %r673, 29;
	@%p5 bra 	BB2_64;

	setp.eq.s32	%p8, %r673, 28;
	@%p8 bra 	BB2_68;
	bra.uni 	BB2_62;

BB2_68:
	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7393, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1318, %r1319}, [%rd8+8];
	// inline asm
	prmt.b32 %r7386, %r1319, %r1318, %r7;
	// inline asm
	ld.local.u32 	%r1190, [%rd8+8];
	ld.local.u32 	%r1191, [%rd8+4];
	// inline asm
	prmt.b32 %r7387, %r1190, %r1191, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1320, %r1321}, [%rd8];
	// inline asm
	prmt.b32 %r7388, %r1321, %r1320, %r7;
	// inline asm
	ld.local.u32 	%r1198, [%rd8];
	ld.local.u32 	%r1199, [%rd7+12];
	// inline asm
	prmt.b32 %r7389, %r1198, %r1199, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1322, %r1323}, [%rd7+8];
	// inline asm
	prmt.b32 %r7382, %r1323, %r1322, %r7;
	// inline asm
	ld.local.u32 	%r1206, [%rd7+8];
	ld.local.u32 	%r1207, [%rd7+4];
	// inline asm
	prmt.b32 %r7383, %r1206, %r1207, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1324, %r1325}, [%rd7];
	// inline asm
	prmt.b32 %r7384, %r1325, %r1324, %r7;
	// inline asm
	ld.local.u32 	%r1214, [%rd7];
	ld.local.u32 	%r1215, [%rd6+12];
	// inline asm
	prmt.b32 %r7385, %r1214, %r1215, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1326, %r1327}, [%rd6+8];
	// inline asm
	prmt.b32 %r7378, %r1327, %r1326, %r7;
	// inline asm
	ld.local.u32 	%r1222, [%rd6+8];
	ld.local.u32 	%r1223, [%rd6+4];
	// inline asm
	prmt.b32 %r7379, %r1222, %r1223, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1328, %r1329}, [%rd6];
	// inline asm
	prmt.b32 %r7380, %r1329, %r1328, %r7;
	// inline asm
	ld.local.u32 	%r1230, [%rd6];
	ld.local.u32 	%r1231, [%rd5+12];
	// inline asm
	prmt.b32 %r7381, %r1230, %r1231, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1330, %r1331}, [%rd5+8];
	// inline asm
	prmt.b32 %r7374, %r1331, %r1330, %r7;
	// inline asm
	ld.local.u32 	%r1238, [%rd5+8];
	ld.local.u32 	%r1239, [%rd5+4];
	// inline asm
	prmt.b32 %r7375, %r1238, %r1239, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1332, %r1333}, [%rd5];
	// inline asm
	prmt.b32 %r7376, %r1333, %r1332, %r7;
	// inline asm
	ld.local.u32 	%r1246, [%rd5];
	ld.local.u32 	%r1247, [%rd4+12];
	// inline asm
	prmt.b32 %r7377, %r1246, %r1247, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1334, %r1335}, [%rd4+8];
	// inline asm
	prmt.b32 %r7370, %r1335, %r1334, %r7;
	// inline asm
	ld.local.u32 	%r1254, [%rd4+8];
	ld.local.u32 	%r1255, [%rd4+4];
	// inline asm
	prmt.b32 %r7371, %r1254, %r1255, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1336, %r1337}, [%rd4];
	// inline asm
	prmt.b32 %r7372, %r1337, %r1336, %r7;
	// inline asm
	ld.local.u32 	%r1262, [%rd4];
	ld.local.u32 	%r1263, [%rd3+12];
	// inline asm
	prmt.b32 %r7373, %r1262, %r1263, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1338, %r1339}, [%rd3+8];
	// inline asm
	prmt.b32 %r7366, %r1339, %r1338, %r7;
	// inline asm
	ld.local.u32 	%r1270, [%rd3+8];
	ld.local.u32 	%r1271, [%rd3+4];
	// inline asm
	prmt.b32 %r7367, %r1270, %r1271, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1340, %r1341}, [%rd3];
	// inline asm
	prmt.b32 %r7368, %r1341, %r1340, %r7;
	// inline asm
	ld.local.u32 	%r1278, [%rd3];
	ld.local.u32 	%r1279, [%rd2+12];
	// inline asm
	prmt.b32 %r7369, %r1278, %r1279, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1342, %r1343}, [%rd2+8];
	// inline asm
	prmt.b32 %r7362, %r1343, %r1342, %r7;
	// inline asm
	ld.local.u32 	%r1286, [%rd2+8];
	ld.local.u32 	%r1287, [%rd2+4];
	// inline asm
	prmt.b32 %r7363, %r1286, %r1287, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1344, %r1345}, [%rd2];
	// inline asm
	prmt.b32 %r7364, %r1345, %r1344, %r7;
	// inline asm
	ld.local.u32 	%r1294, [%rd2];
	ld.local.u32 	%r1295, [%rd1+12];
	// inline asm
	prmt.b32 %r7365, %r1294, %r1295, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1346, %r1347}, [%rd1+8];
	// inline asm
	prmt.b32 %r1297, %r1347, %r1346, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r1297;
	ld.local.u32 	%r1302, [%rd1+8];
	ld.local.u32 	%r1303, [%rd1+4];
	// inline asm
	prmt.b32 %r1301, %r1302, %r1303, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r1301;
	ld.local.v2.u32 	{%r1348, %r1349}, [%rd1];
	// inline asm
	prmt.b32 %r1305, %r1349, %r1348, %r7;
	// inline asm
	st.local.u32 	[%rd8+4], %r1305;
	ld.local.u32 	%r1310, [%rd1];
	// inline asm
	prmt.b32 %r1309, %r1310, %r7360, %r7;
	// inline asm
	st.local.u32 	[%rd8], %r1309;
	st.local.v4.u32 	[%rd7], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd6], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd5], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd4], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd3], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd2], {%r7360, %r7360, %r7360, %r7360};
	st.local.v2.u32 	[%rd1+8], {%r7360, %r7360};
	mov.u64 	%rd191, 0;
	st.local.u64 	[%rd1], %rd191;
	mov.u32 	%r7361, %r7360;
	mov.u32 	%r7390, %r7360;
	mov.u32 	%r7391, %r7360;
	mov.u32 	%r7392, %r7360;
	bra.uni 	BB2_89;

BB2_10:
	setp.eq.s32	%p45, %r673, 2;
	@%p45 bra 	BB2_87;
	bra.uni 	BB2_11;

BB2_87:
	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7363, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r6063, %r6064}, [%rd8+8];
	// inline asm
	prmt.b32 %r7364, %r6064, %r6063, %r7;
	// inline asm
	ld.local.u32 	%r5909, [%rd8+8];
	ld.local.u32 	%r5910, [%rd8+4];
	// inline asm
	prmt.b32 %r7365, %r5909, %r5910, %r7;
	// inline asm
	ld.local.v2.u32 	{%r6065, %r6066}, [%rd8];
	// inline asm
	prmt.b32 %r5912, %r6066, %r6065, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r5912;
	ld.local.u32 	%r5917, [%rd8];
	ld.local.u32 	%r5918, [%rd7+12];
	// inline asm
	prmt.b32 %r5916, %r5917, %r5918, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r5916;
	ld.local.v2.u32 	{%r6067, %r6068}, [%rd7+8];
	// inline asm
	prmt.b32 %r5920, %r6068, %r6067, %r7;
	// inline asm
	st.local.u32 	[%rd8+4], %r5920;
	ld.local.u32 	%r5925, [%rd7+8];
	ld.local.u32 	%r5926, [%rd7+4];
	// inline asm
	prmt.b32 %r5924, %r5925, %r5926, %r7;
	// inline asm
	st.local.u32 	[%rd8], %r5924;
	ld.local.v2.u32 	{%r6069, %r6070}, [%rd7];
	// inline asm
	prmt.b32 %r5928, %r6070, %r6069, %r7;
	// inline asm
	st.local.u32 	[%rd7+12], %r5928;
	ld.local.u32 	%r5933, [%rd7];
	ld.local.u32 	%r5934, [%rd6+12];
	// inline asm
	prmt.b32 %r5932, %r5933, %r5934, %r7;
	// inline asm
	st.local.u32 	[%rd7+8], %r5932;
	ld.local.v2.u32 	{%r6071, %r6072}, [%rd6+8];
	// inline asm
	prmt.b32 %r5936, %r6072, %r6071, %r7;
	// inline asm
	st.local.u32 	[%rd7+4], %r5936;
	ld.local.u32 	%r5941, [%rd6+8];
	ld.local.u32 	%r5942, [%rd6+4];
	// inline asm
	prmt.b32 %r5940, %r5941, %r5942, %r7;
	// inline asm
	st.local.u32 	[%rd7], %r5940;
	ld.local.v2.u32 	{%r6073, %r6074}, [%rd6];
	// inline asm
	prmt.b32 %r5944, %r6074, %r6073, %r7;
	// inline asm
	st.local.u32 	[%rd6+12], %r5944;
	ld.local.u32 	%r5949, [%rd6];
	ld.local.u32 	%r5950, [%rd5+12];
	// inline asm
	prmt.b32 %r5948, %r5949, %r5950, %r7;
	// inline asm
	st.local.u32 	[%rd6+8], %r5948;
	ld.local.v2.u32 	{%r6075, %r6076}, [%rd5+8];
	// inline asm
	prmt.b32 %r5952, %r6076, %r6075, %r7;
	// inline asm
	st.local.u32 	[%rd6+4], %r5952;
	ld.local.u32 	%r5957, [%rd5+8];
	ld.local.u32 	%r5958, [%rd5+4];
	// inline asm
	prmt.b32 %r5956, %r5957, %r5958, %r7;
	// inline asm
	st.local.u32 	[%rd6], %r5956;
	ld.local.v2.u32 	{%r6077, %r6078}, [%rd5];
	// inline asm
	prmt.b32 %r5960, %r6078, %r6077, %r7;
	// inline asm
	st.local.u32 	[%rd5+12], %r5960;
	ld.local.u32 	%r5965, [%rd5];
	ld.local.u32 	%r5966, [%rd4+12];
	// inline asm
	prmt.b32 %r5964, %r5965, %r5966, %r7;
	// inline asm
	st.local.u32 	[%rd5+8], %r5964;
	ld.local.v2.u32 	{%r6079, %r6080}, [%rd4+8];
	// inline asm
	prmt.b32 %r5968, %r6080, %r6079, %r7;
	// inline asm
	st.local.u32 	[%rd5+4], %r5968;
	ld.local.u32 	%r5973, [%rd4+8];
	ld.local.u32 	%r5974, [%rd4+4];
	// inline asm
	prmt.b32 %r5972, %r5973, %r5974, %r7;
	// inline asm
	st.local.u32 	[%rd5], %r5972;
	ld.local.v2.u32 	{%r6081, %r6082}, [%rd4];
	// inline asm
	prmt.b32 %r5976, %r6082, %r6081, %r7;
	// inline asm
	st.local.u32 	[%rd4+12], %r5976;
	ld.local.u32 	%r5981, [%rd4];
	ld.local.u32 	%r5982, [%rd3+12];
	// inline asm
	prmt.b32 %r5980, %r5981, %r5982, %r7;
	// inline asm
	st.local.u32 	[%rd4+8], %r5980;
	ld.local.v2.u32 	{%r6083, %r6084}, [%rd3+8];
	// inline asm
	prmt.b32 %r5984, %r6084, %r6083, %r7;
	// inline asm
	st.local.u32 	[%rd4+4], %r5984;
	ld.local.u32 	%r5989, [%rd3+8];
	ld.local.u32 	%r5990, [%rd3+4];
	// inline asm
	prmt.b32 %r5988, %r5989, %r5990, %r7;
	// inline asm
	st.local.u32 	[%rd4], %r5988;
	ld.local.v2.u32 	{%r6085, %r6086}, [%rd3];
	// inline asm
	prmt.b32 %r5992, %r6086, %r6085, %r7;
	// inline asm
	st.local.u32 	[%rd3+12], %r5992;
	ld.local.u32 	%r5997, [%rd3];
	ld.local.u32 	%r5998, [%rd2+12];
	// inline asm
	prmt.b32 %r5996, %r5997, %r5998, %r7;
	// inline asm
	st.local.u32 	[%rd3+8], %r5996;
	ld.local.v2.u32 	{%r6087, %r6088}, [%rd2+8];
	// inline asm
	prmt.b32 %r6000, %r6088, %r6087, %r7;
	// inline asm
	st.local.u32 	[%rd3+4], %r6000;
	ld.local.u32 	%r6005, [%rd2+8];
	ld.local.u32 	%r6006, [%rd2+4];
	// inline asm
	prmt.b32 %r6004, %r6005, %r6006, %r7;
	// inline asm
	st.local.u32 	[%rd3], %r6004;
	ld.local.v2.u32 	{%r6089, %r6090}, [%rd2];
	// inline asm
	prmt.b32 %r6008, %r6090, %r6089, %r7;
	// inline asm
	st.local.u32 	[%rd2+12], %r6008;
	ld.local.u32 	%r6013, [%rd2];
	ld.local.u32 	%r6014, [%rd1+12];
	// inline asm
	prmt.b32 %r6012, %r6013, %r6014, %r7;
	// inline asm
	st.local.u32 	[%rd2+8], %r6012;
	ld.local.v2.u32 	{%r6091, %r6092}, [%rd1+8];
	// inline asm
	prmt.b32 %r6016, %r6092, %r6091, %r7;
	// inline asm
	st.local.u32 	[%rd2+4], %r6016;
	ld.local.u32 	%r6021, [%rd1+8];
	ld.local.u32 	%r6022, [%rd1+4];
	// inline asm
	prmt.b32 %r6020, %r6021, %r6022, %r7;
	// inline asm
	st.local.u32 	[%rd2], %r6020;
	ld.local.v2.u32 	{%r6093, %r6094}, [%rd1];
	// inline asm
	prmt.b32 %r6024, %r6094, %r6093, %r7;
	// inline asm
	st.local.u32 	[%rd1+12], %r6024;
	ld.local.u32 	%r6029, [%rd1];
	// inline asm
	prmt.b32 %r6028, %r6029, %r7360, %r7;
	// inline asm
	st.local.u32 	[%rd1+8], %r6028;
	mov.u64 	%rd217, 0;
	st.local.u64 	[%rd1], %rd217;
	mov.u32 	%r7361, %r7360;
	mov.u32 	%r7362, %r7360;
	bra.uni 	BB2_13;

BB2_42:
	setp.eq.s32	%p22, %r673, 18;
	@%p22 bra 	BB2_73;
	bra.uni 	BB2_43;

BB2_73:
	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7379, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3063, %r3064}, [%rd8+8];
	// inline asm
	prmt.b32 %r7380, %r3064, %r3063, %r7;
	// inline asm
	ld.local.u32 	%r2925, [%rd8+8];
	ld.local.u32 	%r2926, [%rd8+4];
	// inline asm
	prmt.b32 %r7381, %r2925, %r2926, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3065, %r3066}, [%rd8];
	// inline asm
	prmt.b32 %r7374, %r3066, %r3065, %r7;
	// inline asm
	ld.local.u32 	%r2933, [%rd8];
	ld.local.u32 	%r2934, [%rd7+12];
	// inline asm
	prmt.b32 %r7375, %r2933, %r2934, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3067, %r3068}, [%rd7+8];
	// inline asm
	prmt.b32 %r7376, %r3068, %r3067, %r7;
	// inline asm
	ld.local.u32 	%r2941, [%rd7+8];
	ld.local.u32 	%r2942, [%rd7+4];
	// inline asm
	prmt.b32 %r7377, %r2941, %r2942, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3069, %r3070}, [%rd7];
	// inline asm
	prmt.b32 %r7370, %r3070, %r3069, %r7;
	// inline asm
	ld.local.u32 	%r2949, [%rd7];
	ld.local.u32 	%r2950, [%rd6+12];
	// inline asm
	prmt.b32 %r7371, %r2949, %r2950, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3071, %r3072}, [%rd6+8];
	// inline asm
	prmt.b32 %r7372, %r3072, %r3071, %r7;
	// inline asm
	ld.local.u32 	%r2957, [%rd6+8];
	ld.local.u32 	%r2958, [%rd6+4];
	// inline asm
	prmt.b32 %r7373, %r2957, %r2958, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3073, %r3074}, [%rd6];
	// inline asm
	prmt.b32 %r7366, %r3074, %r3073, %r7;
	// inline asm
	ld.local.u32 	%r2965, [%rd6];
	ld.local.u32 	%r2966, [%rd5+12];
	// inline asm
	prmt.b32 %r7367, %r2965, %r2966, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3075, %r3076}, [%rd5+8];
	// inline asm
	prmt.b32 %r7368, %r3076, %r3075, %r7;
	// inline asm
	ld.local.u32 	%r2973, [%rd5+8];
	ld.local.u32 	%r2974, [%rd5+4];
	// inline asm
	prmt.b32 %r7369, %r2973, %r2974, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3077, %r3078}, [%rd5];
	// inline asm
	prmt.b32 %r7362, %r3078, %r3077, %r7;
	// inline asm
	ld.local.u32 	%r2981, [%rd5];
	ld.local.u32 	%r2982, [%rd4+12];
	// inline asm
	prmt.b32 %r7363, %r2981, %r2982, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3079, %r3080}, [%rd4+8];
	// inline asm
	prmt.b32 %r7364, %r3080, %r3079, %r7;
	// inline asm
	ld.local.u32 	%r2989, [%rd4+8];
	ld.local.u32 	%r2990, [%rd4+4];
	// inline asm
	prmt.b32 %r7365, %r2989, %r2990, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3081, %r3082}, [%rd4];
	// inline asm
	prmt.b32 %r2992, %r3082, %r3081, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r2992;
	ld.local.u32 	%r2997, [%rd4];
	ld.local.u32 	%r2998, [%rd3+12];
	// inline asm
	prmt.b32 %r2996, %r2997, %r2998, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r2996;
	ld.local.v2.u32 	{%r3083, %r3084}, [%rd3+8];
	// inline asm
	prmt.b32 %r3000, %r3084, %r3083, %r7;
	// inline asm
	st.local.u32 	[%rd8+4], %r3000;
	ld.local.u32 	%r3005, [%rd3+8];
	ld.local.u32 	%r3006, [%rd3+4];
	// inline asm
	prmt.b32 %r3004, %r3005, %r3006, %r7;
	// inline asm
	st.local.u32 	[%rd8], %r3004;
	ld.local.v2.u32 	{%r3085, %r3086}, [%rd3];
	// inline asm
	prmt.b32 %r3008, %r3086, %r3085, %r7;
	// inline asm
	st.local.u32 	[%rd7+12], %r3008;
	ld.local.u32 	%r3013, [%rd3];
	ld.local.u32 	%r3014, [%rd2+12];
	// inline asm
	prmt.b32 %r3012, %r3013, %r3014, %r7;
	// inline asm
	st.local.u32 	[%rd7+8], %r3012;
	ld.local.v2.u32 	{%r3087, %r3088}, [%rd2+8];
	// inline asm
	prmt.b32 %r3016, %r3088, %r3087, %r7;
	// inline asm
	st.local.u32 	[%rd7+4], %r3016;
	ld.local.u32 	%r3021, [%rd2+8];
	ld.local.u32 	%r3022, [%rd2+4];
	// inline asm
	prmt.b32 %r3020, %r3021, %r3022, %r7;
	// inline asm
	st.local.u32 	[%rd7], %r3020;
	ld.local.v2.u32 	{%r3089, %r3090}, [%rd2];
	// inline asm
	prmt.b32 %r3024, %r3090, %r3089, %r7;
	// inline asm
	st.local.u32 	[%rd6+12], %r3024;
	ld.local.u32 	%r3029, [%rd2];
	ld.local.u32 	%r3030, [%rd1+12];
	// inline asm
	prmt.b32 %r3028, %r3029, %r3030, %r7;
	// inline asm
	st.local.u32 	[%rd6+8], %r3028;
	ld.local.v2.u32 	{%r3091, %r3092}, [%rd1+8];
	// inline asm
	prmt.b32 %r3032, %r3092, %r3091, %r7;
	// inline asm
	st.local.u32 	[%rd6+4], %r3032;
	ld.local.u32 	%r3037, [%rd1+8];
	ld.local.u32 	%r3038, [%rd1+4];
	// inline asm
	prmt.b32 %r3036, %r3037, %r3038, %r7;
	// inline asm
	st.local.u32 	[%rd6], %r3036;
	ld.local.v2.u32 	{%r3093, %r3094}, [%rd1];
	// inline asm
	prmt.b32 %r3040, %r3094, %r3093, %r7;
	// inline asm
	st.local.u32 	[%rd5+12], %r3040;
	ld.local.u32 	%r3045, [%rd1];
	// inline asm
	prmt.b32 %r3044, %r3045, %r7360, %r7;
	// inline asm
	st.local.u32 	[%rd5+8], %r3044;
	st.local.v2.u32 	[%rd5], {%r7360, %r7360};
	st.local.u32 	[%rd4+12], %r7360;
	st.local.u32 	[%rd4+8], %r7360;
	st.local.u32 	[%rd4+4], %r7360;
	st.local.u32 	[%rd4], %r7360;
	st.local.u32 	[%rd3+12], %r7360;
	st.local.u32 	[%rd3+8], %r7360;
	st.local.u32 	[%rd3+4], %r7360;
	st.local.u32 	[%rd3], %r7360;
	st.local.u32 	[%rd2+12], %r7360;
	st.local.u32 	[%rd2+8], %r7360;
	st.local.u32 	[%rd2+4], %r7360;
	st.local.u32 	[%rd2], %r7360;
	st.local.u32 	[%rd1+12], %r7360;
	st.local.u32 	[%rd1+8], %r7360;
	mov.u64 	%rd201, 0;
	st.local.u32 	[%rd1+4], %rd201;
	st.local.u32 	[%rd1], %rd201;
	mov.u32 	%r7361, %r7360;
	mov.u32 	%r7378, %r7360;
	bra.uni 	BB2_84;

BB2_26:
	setp.eq.s32	%p34, %r673, 10;
	@%p34 bra 	BB2_77;
	bra.uni 	BB2_27;

BB2_77:
	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7371, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r4531, %r4532}, [%rd8+8];
	// inline asm
	prmt.b32 %r7372, %r4532, %r4531, %r7;
	// inline asm
	ld.local.u32 	%r4385, [%rd8+8];
	ld.local.u32 	%r4386, [%rd8+4];
	// inline asm
	prmt.b32 %r7373, %r4385, %r4386, %r7;
	// inline asm
	ld.local.v2.u32 	{%r4533, %r4534}, [%rd8];
	// inline asm
	prmt.b32 %r7366, %r4534, %r4533, %r7;
	// inline asm
	ld.local.u32 	%r4393, [%rd8];
	ld.local.u32 	%r4394, [%rd7+12];
	// inline asm
	prmt.b32 %r7367, %r4393, %r4394, %r7;
	// inline asm
	ld.local.v2.u32 	{%r4535, %r4536}, [%rd7+8];
	// inline asm
	prmt.b32 %r7368, %r4536, %r4535, %r7;
	// inline asm
	ld.local.u32 	%r4401, [%rd7+8];
	ld.local.u32 	%r4402, [%rd7+4];
	// inline asm
	prmt.b32 %r7369, %r4401, %r4402, %r7;
	// inline asm
	ld.local.v2.u32 	{%r4537, %r4538}, [%rd7];
	// inline asm
	prmt.b32 %r7362, %r4538, %r4537, %r7;
	// inline asm
	ld.local.u32 	%r4409, [%rd7];
	ld.local.u32 	%r4410, [%rd6+12];
	// inline asm
	prmt.b32 %r7363, %r4409, %r4410, %r7;
	// inline asm
	ld.local.v2.u32 	{%r4539, %r4540}, [%rd6+8];
	// inline asm
	prmt.b32 %r7364, %r4540, %r4539, %r7;
	// inline asm
	ld.local.u32 	%r4417, [%rd6+8];
	ld.local.u32 	%r4418, [%rd6+4];
	// inline asm
	prmt.b32 %r7365, %r4417, %r4418, %r7;
	// inline asm
	ld.local.v2.u32 	{%r4541, %r4542}, [%rd6];
	// inline asm
	prmt.b32 %r4420, %r4542, %r4541, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r4420;
	ld.local.u32 	%r4425, [%rd6];
	ld.local.u32 	%r4426, [%rd5+12];
	// inline asm
	prmt.b32 %r4424, %r4425, %r4426, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r4424;
	ld.local.v2.u32 	{%r4543, %r4544}, [%rd5+8];
	// inline asm
	prmt.b32 %r4428, %r4544, %r4543, %r7;
	// inline asm
	st.local.u32 	[%rd8+4], %r4428;
	ld.local.u32 	%r4433, [%rd5+8];
	ld.local.u32 	%r4434, [%rd5+4];
	// inline asm
	prmt.b32 %r4432, %r4433, %r4434, %r7;
	// inline asm
	st.local.u32 	[%rd8], %r4432;
	ld.local.v2.u32 	{%r4545, %r4546}, [%rd5];
	// inline asm
	prmt.b32 %r4436, %r4546, %r4545, %r7;
	// inline asm
	st.local.u32 	[%rd7+12], %r4436;
	ld.local.u32 	%r4441, [%rd5];
	ld.local.u32 	%r4442, [%rd4+12];
	// inline asm
	prmt.b32 %r4440, %r4441, %r4442, %r7;
	// inline asm
	st.local.u32 	[%rd7+8], %r4440;
	ld.local.v2.u32 	{%r4547, %r4548}, [%rd4+8];
	// inline asm
	prmt.b32 %r4444, %r4548, %r4547, %r7;
	// inline asm
	st.local.u32 	[%rd7+4], %r4444;
	ld.local.u32 	%r4449, [%rd4+8];
	ld.local.u32 	%r4450, [%rd4+4];
	// inline asm
	prmt.b32 %r4448, %r4449, %r4450, %r7;
	// inline asm
	st.local.u32 	[%rd7], %r4448;
	ld.local.v2.u32 	{%r4549, %r4550}, [%rd4];
	// inline asm
	prmt.b32 %r4452, %r4550, %r4549, %r7;
	// inline asm
	st.local.u32 	[%rd6+12], %r4452;
	ld.local.u32 	%r4457, [%rd4];
	ld.local.u32 	%r4458, [%rd3+12];
	// inline asm
	prmt.b32 %r4456, %r4457, %r4458, %r7;
	// inline asm
	st.local.u32 	[%rd6+8], %r4456;
	ld.local.v2.u32 	{%r4551, %r4552}, [%rd3+8];
	// inline asm
	prmt.b32 %r4460, %r4552, %r4551, %r7;
	// inline asm
	st.local.u32 	[%rd6+4], %r4460;
	ld.local.u32 	%r4465, [%rd3+8];
	ld.local.u32 	%r4466, [%rd3+4];
	// inline asm
	prmt.b32 %r4464, %r4465, %r4466, %r7;
	// inline asm
	st.local.u32 	[%rd6], %r4464;
	ld.local.v2.u32 	{%r4553, %r4554}, [%rd3];
	// inline asm
	prmt.b32 %r4468, %r4554, %r4553, %r7;
	// inline asm
	st.local.u32 	[%rd5+12], %r4468;
	ld.local.u32 	%r4473, [%rd3];
	ld.local.u32 	%r4474, [%rd2+12];
	// inline asm
	prmt.b32 %r4472, %r4473, %r4474, %r7;
	// inline asm
	st.local.u32 	[%rd5+8], %r4472;
	ld.local.v2.u32 	{%r4555, %r4556}, [%rd2+8];
	// inline asm
	prmt.b32 %r4476, %r4556, %r4555, %r7;
	// inline asm
	st.local.u32 	[%rd5+4], %r4476;
	ld.local.u32 	%r4481, [%rd2+8];
	ld.local.u32 	%r4482, [%rd2+4];
	// inline asm
	prmt.b32 %r4480, %r4481, %r4482, %r7;
	// inline asm
	st.local.u32 	[%rd5], %r4480;
	ld.local.v2.u32 	{%r4557, %r4558}, [%rd2];
	// inline asm
	prmt.b32 %r4484, %r4558, %r4557, %r7;
	// inline asm
	st.local.u32 	[%rd4+12], %r4484;
	ld.local.u32 	%r4489, [%rd2];
	ld.local.u32 	%r4490, [%rd1+12];
	// inline asm
	prmt.b32 %r4488, %r4489, %r4490, %r7;
	// inline asm
	st.local.u32 	[%rd4+8], %r4488;
	ld.local.v2.u32 	{%r4559, %r4560}, [%rd1+8];
	// inline asm
	prmt.b32 %r4492, %r4560, %r4559, %r7;
	// inline asm
	st.local.u32 	[%rd4+4], %r4492;
	ld.local.u32 	%r4497, [%rd1+8];
	ld.local.u32 	%r4498, [%rd1+4];
	// inline asm
	prmt.b32 %r4496, %r4497, %r4498, %r7;
	// inline asm
	st.local.u32 	[%rd4], %r4496;
	ld.local.v2.u32 	{%r4561, %r4562}, [%rd1];
	// inline asm
	prmt.b32 %r4500, %r4562, %r4561, %r7;
	// inline asm
	st.local.u32 	[%rd3+12], %r4500;
	ld.local.u32 	%r4505, [%rd1];
	// inline asm
	prmt.b32 %r4504, %r4505, %r7360, %r7;
	// inline asm
	st.local.u32 	[%rd3+8], %r4504;
	st.local.v2.u32 	[%rd3], {%r7360, %r7360};
	st.local.u32 	[%rd2+12], %r7360;
	st.local.u32 	[%rd2+8], %r7360;
	st.local.u32 	[%rd2+4], %r7360;
	st.local.u32 	[%rd2], %r7360;
	st.local.u32 	[%rd1+12], %r7360;
	st.local.u32 	[%rd1+8], %r7360;
	mov.u64 	%rd209, 0;
	st.local.u32 	[%rd1+4], %rd209;
	st.local.u32 	[%rd1], %rd209;
	mov.u32 	%r7361, %r7360;
	mov.u32 	%r7370, %r7360;
	bra.uni 	BB2_82;

BB2_57:
	setp.eq.s32	%p11, %r673, 26;
	@%p11 bra 	BB2_69;
	bra.uni 	BB2_58;

BB2_69:
	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7387, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1659, %r1660}, [%rd8+8];
	// inline asm
	prmt.b32 %r7388, %r1660, %r1659, %r7;
	// inline asm
	ld.local.u32 	%r1529, [%rd8+8];
	ld.local.u32 	%r1530, [%rd8+4];
	// inline asm
	prmt.b32 %r7389, %r1529, %r1530, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1661, %r1662}, [%rd8];
	// inline asm
	prmt.b32 %r7382, %r1662, %r1661, %r7;
	// inline asm
	ld.local.u32 	%r1537, [%rd8];
	ld.local.u32 	%r1538, [%rd7+12];
	// inline asm
	prmt.b32 %r7383, %r1537, %r1538, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1663, %r1664}, [%rd7+8];
	// inline asm
	prmt.b32 %r7384, %r1664, %r1663, %r7;
	// inline asm
	ld.local.u32 	%r1545, [%rd7+8];
	ld.local.u32 	%r1546, [%rd7+4];
	// inline asm
	prmt.b32 %r7385, %r1545, %r1546, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1665, %r1666}, [%rd7];
	// inline asm
	prmt.b32 %r7378, %r1666, %r1665, %r7;
	// inline asm
	ld.local.u32 	%r1553, [%rd7];
	ld.local.u32 	%r1554, [%rd6+12];
	// inline asm
	prmt.b32 %r7379, %r1553, %r1554, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1667, %r1668}, [%rd6+8];
	// inline asm
	prmt.b32 %r7380, %r1668, %r1667, %r7;
	// inline asm
	ld.local.u32 	%r1561, [%rd6+8];
	ld.local.u32 	%r1562, [%rd6+4];
	// inline asm
	prmt.b32 %r7381, %r1561, %r1562, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1669, %r1670}, [%rd6];
	// inline asm
	prmt.b32 %r7374, %r1670, %r1669, %r7;
	// inline asm
	ld.local.u32 	%r1569, [%rd6];
	ld.local.u32 	%r1570, [%rd5+12];
	// inline asm
	prmt.b32 %r7375, %r1569, %r1570, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1671, %r1672}, [%rd5+8];
	// inline asm
	prmt.b32 %r7376, %r1672, %r1671, %r7;
	// inline asm
	ld.local.u32 	%r1577, [%rd5+8];
	ld.local.u32 	%r1578, [%rd5+4];
	// inline asm
	prmt.b32 %r7377, %r1577, %r1578, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1673, %r1674}, [%rd5];
	// inline asm
	prmt.b32 %r7370, %r1674, %r1673, %r7;
	// inline asm
	ld.local.u32 	%r1585, [%rd5];
	ld.local.u32 	%r1586, [%rd4+12];
	// inline asm
	prmt.b32 %r7371, %r1585, %r1586, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1675, %r1676}, [%rd4+8];
	// inline asm
	prmt.b32 %r7372, %r1676, %r1675, %r7;
	// inline asm
	ld.local.u32 	%r1593, [%rd4+8];
	ld.local.u32 	%r1594, [%rd4+4];
	// inline asm
	prmt.b32 %r7373, %r1593, %r1594, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1677, %r1678}, [%rd4];
	// inline asm
	prmt.b32 %r7366, %r1678, %r1677, %r7;
	// inline asm
	ld.local.u32 	%r1601, [%rd4];
	ld.local.u32 	%r1602, [%rd3+12];
	// inline asm
	prmt.b32 %r7367, %r1601, %r1602, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1679, %r1680}, [%rd3+8];
	// inline asm
	prmt.b32 %r7368, %r1680, %r1679, %r7;
	// inline asm
	ld.local.u32 	%r1609, [%rd3+8];
	ld.local.u32 	%r1610, [%rd3+4];
	// inline asm
	prmt.b32 %r7369, %r1609, %r1610, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1681, %r1682}, [%rd3];
	// inline asm
	prmt.b32 %r7362, %r1682, %r1681, %r7;
	// inline asm
	ld.local.u32 	%r1617, [%rd3];
	ld.local.u32 	%r1618, [%rd2+12];
	// inline asm
	prmt.b32 %r7363, %r1617, %r1618, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1683, %r1684}, [%rd2+8];
	// inline asm
	prmt.b32 %r7364, %r1684, %r1683, %r7;
	// inline asm
	ld.local.u32 	%r1625, [%rd2+8];
	ld.local.u32 	%r1626, [%rd2+4];
	// inline asm
	prmt.b32 %r7365, %r1625, %r1626, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1685, %r1686}, [%rd2];
	// inline asm
	prmt.b32 %r1628, %r1686, %r1685, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r1628;
	ld.local.u32 	%r1633, [%rd2];
	ld.local.u32 	%r1634, [%rd1+12];
	// inline asm
	prmt.b32 %r1632, %r1633, %r1634, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r1632;
	ld.local.v2.u32 	{%r1687, %r1688}, [%rd1+8];
	// inline asm
	prmt.b32 %r1636, %r1688, %r1687, %r7;
	// inline asm
	st.local.u32 	[%rd8+4], %r1636;
	ld.local.u32 	%r1641, [%rd1+8];
	ld.local.u32 	%r1642, [%rd1+4];
	// inline asm
	prmt.b32 %r1640, %r1641, %r1642, %r7;
	// inline asm
	st.local.u32 	[%rd8], %r1640;
	ld.local.v2.u32 	{%r1689, %r1690}, [%rd1];
	// inline asm
	prmt.b32 %r1644, %r1690, %r1689, %r7;
	// inline asm
	st.local.u32 	[%rd7+12], %r1644;
	ld.local.u32 	%r1649, [%rd1];
	// inline asm
	prmt.b32 %r1648, %r1649, %r7360, %r7;
	// inline asm
	st.local.u32 	[%rd7+8], %r1648;
	st.local.v2.u32 	[%rd7], {%r7360, %r7360};
	st.local.u32 	[%rd6+12], %r7360;
	st.local.u32 	[%rd6+8], %r7360;
	st.local.u32 	[%rd6+4], %r7360;
	st.local.u32 	[%rd6], %r7360;
	st.local.u32 	[%rd5+12], %r7360;
	st.local.u32 	[%rd5+8], %r7360;
	st.local.u32 	[%rd5+4], %r7360;
	st.local.u32 	[%rd5], %r7360;
	st.local.u32 	[%rd4+12], %r7360;
	st.local.u32 	[%rd4+8], %r7360;
	st.local.u32 	[%rd4+4], %r7360;
	st.local.u32 	[%rd4], %r7360;
	st.local.u32 	[%rd3+12], %r7360;
	st.local.u32 	[%rd3+8], %r7360;
	st.local.u32 	[%rd3+4], %r7360;
	st.local.u32 	[%rd3], %r7360;
	st.local.u32 	[%rd2+12], %r7360;
	st.local.u32 	[%rd2+8], %r7360;
	st.local.u32 	[%rd2+4], %r7360;
	st.local.u32 	[%rd2], %r7360;
	st.local.u32 	[%rd1+12], %r7360;
	st.local.u32 	[%rd1+8], %r7360;
	mov.u64 	%rd193, 0;
	st.local.u32 	[%rd1+4], %rd193;
	st.local.u32 	[%rd1], %rd193;
	mov.u32 	%r7361, %r7360;
	mov.u32 	%r7386, %r7360;
	bra.uni 	BB2_86;

BB2_18:
	setp.eq.s32	%p40, %r673, 6;
	@%p40 bra 	BB2_79;
	bra.uni 	BB2_19;

BB2_79:
	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7367, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r5289, %r5290}, [%rd8+8];
	// inline asm
	prmt.b32 %r7368, %r5290, %r5289, %r7;
	// inline asm
	ld.local.u32 	%r5139, [%rd8+8];
	ld.local.u32 	%r5140, [%rd8+4];
	// inline asm
	prmt.b32 %r7369, %r5139, %r5140, %r7;
	// inline asm
	ld.local.v2.u32 	{%r5291, %r5292}, [%rd8];
	// inline asm
	prmt.b32 %r7362, %r5292, %r5291, %r7;
	// inline asm
	ld.local.u32 	%r5147, [%rd8];
	ld.local.u32 	%r5148, [%rd7+12];
	// inline asm
	prmt.b32 %r7363, %r5147, %r5148, %r7;
	// inline asm
	ld.local.v2.u32 	{%r5293, %r5294}, [%rd7+8];
	// inline asm
	prmt.b32 %r7364, %r5294, %r5293, %r7;
	// inline asm
	ld.local.u32 	%r5155, [%rd7+8];
	ld.local.u32 	%r5156, [%rd7+4];
	// inline asm
	prmt.b32 %r7365, %r5155, %r5156, %r7;
	// inline asm
	ld.local.v2.u32 	{%r5295, %r5296}, [%rd7];
	// inline asm
	prmt.b32 %r5158, %r5296, %r5295, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r5158;
	ld.local.u32 	%r5163, [%rd7];
	ld.local.u32 	%r5164, [%rd6+12];
	// inline asm
	prmt.b32 %r5162, %r5163, %r5164, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r5162;
	ld.local.v2.u32 	{%r5297, %r5298}, [%rd6+8];
	// inline asm
	prmt.b32 %r5166, %r5298, %r5297, %r7;
	// inline asm
	st.local.u32 	[%rd8+4], %r5166;
	ld.local.u32 	%r5171, [%rd6+8];
	ld.local.u32 	%r5172, [%rd6+4];
	// inline asm
	prmt.b32 %r5170, %r5171, %r5172, %r7;
	// inline asm
	st.local.u32 	[%rd8], %r5170;
	ld.local.v2.u32 	{%r5299, %r5300}, [%rd6];
	// inline asm
	prmt.b32 %r5174, %r5300, %r5299, %r7;
	// inline asm
	st.local.u32 	[%rd7+12], %r5174;
	ld.local.u32 	%r5179, [%rd6];
	ld.local.u32 	%r5180, [%rd5+12];
	// inline asm
	prmt.b32 %r5178, %r5179, %r5180, %r7;
	// inline asm
	st.local.u32 	[%rd7+8], %r5178;
	ld.local.v2.u32 	{%r5301, %r5302}, [%rd5+8];
	// inline asm
	prmt.b32 %r5182, %r5302, %r5301, %r7;
	// inline asm
	st.local.u32 	[%rd7+4], %r5182;
	ld.local.u32 	%r5187, [%rd5+8];
	ld.local.u32 	%r5188, [%rd5+4];
	// inline asm
	prmt.b32 %r5186, %r5187, %r5188, %r7;
	// inline asm
	st.local.u32 	[%rd7], %r5186;
	ld.local.v2.u32 	{%r5303, %r5304}, [%rd5];
	// inline asm
	prmt.b32 %r5190, %r5304, %r5303, %r7;
	// inline asm
	st.local.u32 	[%rd6+12], %r5190;
	ld.local.u32 	%r5195, [%rd5];
	ld.local.u32 	%r5196, [%rd4+12];
	// inline asm
	prmt.b32 %r5194, %r5195, %r5196, %r7;
	// inline asm
	st.local.u32 	[%rd6+8], %r5194;
	ld.local.v2.u32 	{%r5305, %r5306}, [%rd4+8];
	// inline asm
	prmt.b32 %r5198, %r5306, %r5305, %r7;
	// inline asm
	st.local.u32 	[%rd6+4], %r5198;
	ld.local.u32 	%r5203, [%rd4+8];
	ld.local.u32 	%r5204, [%rd4+4];
	// inline asm
	prmt.b32 %r5202, %r5203, %r5204, %r7;
	// inline asm
	st.local.u32 	[%rd6], %r5202;
	ld.local.v2.u32 	{%r5307, %r5308}, [%rd4];
	// inline asm
	prmt.b32 %r5206, %r5308, %r5307, %r7;
	// inline asm
	st.local.u32 	[%rd5+12], %r5206;
	ld.local.u32 	%r5211, [%rd4];
	ld.local.u32 	%r5212, [%rd3+12];
	// inline asm
	prmt.b32 %r5210, %r5211, %r5212, %r7;
	// inline asm
	st.local.u32 	[%rd5+8], %r5210;
	ld.local.v2.u32 	{%r5309, %r5310}, [%rd3+8];
	// inline asm
	prmt.b32 %r5214, %r5310, %r5309, %r7;
	// inline asm
	st.local.u32 	[%rd5+4], %r5214;
	ld.local.u32 	%r5219, [%rd3+8];
	ld.local.u32 	%r5220, [%rd3+4];
	// inline asm
	prmt.b32 %r5218, %r5219, %r5220, %r7;
	// inline asm
	st.local.u32 	[%rd5], %r5218;
	ld.local.v2.u32 	{%r5311, %r5312}, [%rd3];
	// inline asm
	prmt.b32 %r5222, %r5312, %r5311, %r7;
	// inline asm
	st.local.u32 	[%rd4+12], %r5222;
	ld.local.u32 	%r5227, [%rd3];
	ld.local.u32 	%r5228, [%rd2+12];
	// inline asm
	prmt.b32 %r5226, %r5227, %r5228, %r7;
	// inline asm
	st.local.u32 	[%rd4+8], %r5226;
	ld.local.v2.u32 	{%r5313, %r5314}, [%rd2+8];
	// inline asm
	prmt.b32 %r5230, %r5314, %r5313, %r7;
	// inline asm
	st.local.u32 	[%rd4+4], %r5230;
	ld.local.u32 	%r5235, [%rd2+8];
	ld.local.u32 	%r5236, [%rd2+4];
	// inline asm
	prmt.b32 %r5234, %r5235, %r5236, %r7;
	// inline asm
	st.local.u32 	[%rd4], %r5234;
	ld.local.v2.u32 	{%r5315, %r5316}, [%rd2];
	// inline asm
	prmt.b32 %r5238, %r5316, %r5315, %r7;
	// inline asm
	st.local.u32 	[%rd3+12], %r5238;
	ld.local.u32 	%r5243, [%rd2];
	ld.local.u32 	%r5244, [%rd1+12];
	// inline asm
	prmt.b32 %r5242, %r5243, %r5244, %r7;
	// inline asm
	st.local.u32 	[%rd3+8], %r5242;
	ld.local.v2.u32 	{%r5317, %r5318}, [%rd1+8];
	// inline asm
	prmt.b32 %r5246, %r5318, %r5317, %r7;
	// inline asm
	st.local.u32 	[%rd3+4], %r5246;
	ld.local.u32 	%r5251, [%rd1+8];
	ld.local.u32 	%r5252, [%rd1+4];
	// inline asm
	prmt.b32 %r5250, %r5251, %r5252, %r7;
	// inline asm
	st.local.u32 	[%rd3], %r5250;
	ld.local.v2.u32 	{%r5319, %r5320}, [%rd1];
	// inline asm
	prmt.b32 %r5254, %r5320, %r5319, %r7;
	// inline asm
	st.local.u32 	[%rd2+12], %r5254;
	ld.local.u32 	%r5259, [%rd1];
	// inline asm
	prmt.b32 %r5258, %r5259, %r7360, %r7;
	// inline asm
	st.local.u32 	[%rd2+8], %r5258;
	st.local.v2.u32 	[%rd2], {%r7360, %r7360};
	st.local.u32 	[%rd1+12], %r7360;
	st.local.u32 	[%rd1+8], %r7360;
	mov.u64 	%rd213, 0;
	st.local.u32 	[%rd1+4], %rd213;
	st.local.u32 	[%rd1], %rd213;
	mov.u32 	%r7361, %r7360;
	mov.u32 	%r7366, %r7360;
	bra.uni 	BB2_81;

BB2_49:
	setp.eq.s32	%p17, %r673, 22;
	@%p17 bra 	BB2_71;
	bra.uni 	BB2_50;

BB2_71:
	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7383, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2353, %r2354}, [%rd8+8];
	// inline asm
	prmt.b32 %r7384, %r2354, %r2353, %r7;
	// inline asm
	ld.local.u32 	%r2219, [%rd8+8];
	ld.local.u32 	%r2220, [%rd8+4];
	// inline asm
	prmt.b32 %r7385, %r2219, %r2220, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2355, %r2356}, [%rd8];
	// inline asm
	prmt.b32 %r7378, %r2356, %r2355, %r7;
	// inline asm
	ld.local.u32 	%r2227, [%rd8];
	ld.local.u32 	%r2228, [%rd7+12];
	// inline asm
	prmt.b32 %r7379, %r2227, %r2228, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2357, %r2358}, [%rd7+8];
	// inline asm
	prmt.b32 %r7380, %r2358, %r2357, %r7;
	// inline asm
	ld.local.u32 	%r2235, [%rd7+8];
	ld.local.u32 	%r2236, [%rd7+4];
	// inline asm
	prmt.b32 %r7381, %r2235, %r2236, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2359, %r2360}, [%rd7];
	// inline asm
	prmt.b32 %r7374, %r2360, %r2359, %r7;
	// inline asm
	ld.local.u32 	%r2243, [%rd7];
	ld.local.u32 	%r2244, [%rd6+12];
	// inline asm
	prmt.b32 %r7375, %r2243, %r2244, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2361, %r2362}, [%rd6+8];
	// inline asm
	prmt.b32 %r7376, %r2362, %r2361, %r7;
	// inline asm
	ld.local.u32 	%r2251, [%rd6+8];
	ld.local.u32 	%r2252, [%rd6+4];
	// inline asm
	prmt.b32 %r7377, %r2251, %r2252, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2363, %r2364}, [%rd6];
	// inline asm
	prmt.b32 %r7370, %r2364, %r2363, %r7;
	// inline asm
	ld.local.u32 	%r2259, [%rd6];
	ld.local.u32 	%r2260, [%rd5+12];
	// inline asm
	prmt.b32 %r7371, %r2259, %r2260, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2365, %r2366}, [%rd5+8];
	// inline asm
	prmt.b32 %r7372, %r2366, %r2365, %r7;
	// inline asm
	ld.local.u32 	%r2267, [%rd5+8];
	ld.local.u32 	%r2268, [%rd5+4];
	// inline asm
	prmt.b32 %r7373, %r2267, %r2268, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2367, %r2368}, [%rd5];
	// inline asm
	prmt.b32 %r7366, %r2368, %r2367, %r7;
	// inline asm
	ld.local.u32 	%r2275, [%rd5];
	ld.local.u32 	%r2276, [%rd4+12];
	// inline asm
	prmt.b32 %r7367, %r2275, %r2276, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2369, %r2370}, [%rd4+8];
	// inline asm
	prmt.b32 %r7368, %r2370, %r2369, %r7;
	// inline asm
	ld.local.u32 	%r2283, [%rd4+8];
	ld.local.u32 	%r2284, [%rd4+4];
	// inline asm
	prmt.b32 %r7369, %r2283, %r2284, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2371, %r2372}, [%rd4];
	// inline asm
	prmt.b32 %r7362, %r2372, %r2371, %r7;
	// inline asm
	ld.local.u32 	%r2291, [%rd4];
	ld.local.u32 	%r2292, [%rd3+12];
	// inline asm
	prmt.b32 %r7363, %r2291, %r2292, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2373, %r2374}, [%rd3+8];
	// inline asm
	prmt.b32 %r7364, %r2374, %r2373, %r7;
	// inline asm
	ld.local.u32 	%r2299, [%rd3+8];
	ld.local.u32 	%r2300, [%rd3+4];
	// inline asm
	prmt.b32 %r7365, %r2299, %r2300, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2375, %r2376}, [%rd3];
	// inline asm
	prmt.b32 %r2302, %r2376, %r2375, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r2302;
	ld.local.u32 	%r2307, [%rd3];
	ld.local.u32 	%r2308, [%rd2+12];
	// inline asm
	prmt.b32 %r2306, %r2307, %r2308, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r2306;
	ld.local.v2.u32 	{%r2377, %r2378}, [%rd2+8];
	// inline asm
	prmt.b32 %r2310, %r2378, %r2377, %r7;
	// inline asm
	st.local.u32 	[%rd8+4], %r2310;
	ld.local.u32 	%r2315, [%rd2+8];
	ld.local.u32 	%r2316, [%rd2+4];
	// inline asm
	prmt.b32 %r2314, %r2315, %r2316, %r7;
	// inline asm
	st.local.u32 	[%rd8], %r2314;
	ld.local.v2.u32 	{%r2379, %r2380}, [%rd2];
	// inline asm
	prmt.b32 %r2318, %r2380, %r2379, %r7;
	// inline asm
	st.local.u32 	[%rd7+12], %r2318;
	ld.local.u32 	%r2323, [%rd2];
	ld.local.u32 	%r2324, [%rd1+12];
	// inline asm
	prmt.b32 %r2322, %r2323, %r2324, %r7;
	// inline asm
	st.local.u32 	[%rd7+8], %r2322;
	ld.local.v2.u32 	{%r2381, %r2382}, [%rd1+8];
	// inline asm
	prmt.b32 %r2326, %r2382, %r2381, %r7;
	// inline asm
	st.local.u32 	[%rd7+4], %r2326;
	ld.local.u32 	%r2331, [%rd1+8];
	ld.local.u32 	%r2332, [%rd1+4];
	// inline asm
	prmt.b32 %r2330, %r2331, %r2332, %r7;
	// inline asm
	st.local.u32 	[%rd7], %r2330;
	ld.local.v2.u32 	{%r2383, %r2384}, [%rd1];
	// inline asm
	prmt.b32 %r2334, %r2384, %r2383, %r7;
	// inline asm
	st.local.u32 	[%rd6+12], %r2334;
	ld.local.u32 	%r2339, [%rd1];
	// inline asm
	prmt.b32 %r2338, %r2339, %r7360, %r7;
	// inline asm
	st.local.u32 	[%rd6+8], %r2338;
	st.local.v2.u32 	[%rd6], {%r7360, %r7360};
	st.local.u32 	[%rd5+12], %r7360;
	st.local.u32 	[%rd5+8], %r7360;
	st.local.u32 	[%rd5+4], %r7360;
	st.local.u32 	[%rd5], %r7360;
	st.local.u32 	[%rd4+12], %r7360;
	st.local.u32 	[%rd4+8], %r7360;
	st.local.u32 	[%rd4+4], %r7360;
	st.local.u32 	[%rd4], %r7360;
	st.local.u32 	[%rd3+12], %r7360;
	st.local.u32 	[%rd3+8], %r7360;
	st.local.u32 	[%rd3+4], %r7360;
	st.local.u32 	[%rd3], %r7360;
	st.local.u32 	[%rd2+12], %r7360;
	st.local.u32 	[%rd2+8], %r7360;
	st.local.u32 	[%rd2+4], %r7360;
	st.local.u32 	[%rd2], %r7360;
	st.local.u32 	[%rd1+12], %r7360;
	st.local.u32 	[%rd1+8], %r7360;
	mov.u64 	%rd197, 0;
	st.local.u32 	[%rd1+4], %rd197;
	st.local.u32 	[%rd1], %rd197;
	mov.u32 	%r7361, %r7360;
	mov.u32 	%r7382, %r7360;
	bra.uni 	BB2_85;

BB2_33:
	setp.eq.s32	%p29, %r673, 14;
	@%p29 bra 	BB2_75;
	bra.uni 	BB2_34;

BB2_75:
	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7375, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3789, %r3790}, [%rd8+8];
	// inline asm
	prmt.b32 %r7376, %r3790, %r3789, %r7;
	// inline asm
	ld.local.u32 	%r3647, [%rd8+8];
	ld.local.u32 	%r3648, [%rd8+4];
	// inline asm
	prmt.b32 %r7377, %r3647, %r3648, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3791, %r3792}, [%rd8];
	// inline asm
	prmt.b32 %r7370, %r3792, %r3791, %r7;
	// inline asm
	ld.local.u32 	%r3655, [%rd8];
	ld.local.u32 	%r3656, [%rd7+12];
	// inline asm
	prmt.b32 %r7371, %r3655, %r3656, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3793, %r3794}, [%rd7+8];
	// inline asm
	prmt.b32 %r7372, %r3794, %r3793, %r7;
	// inline asm
	ld.local.u32 	%r3663, [%rd7+8];
	ld.local.u32 	%r3664, [%rd7+4];
	// inline asm
	prmt.b32 %r7373, %r3663, %r3664, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3795, %r3796}, [%rd7];
	// inline asm
	prmt.b32 %r7366, %r3796, %r3795, %r7;
	// inline asm
	ld.local.u32 	%r3671, [%rd7];
	ld.local.u32 	%r3672, [%rd6+12];
	// inline asm
	prmt.b32 %r7367, %r3671, %r3672, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3797, %r3798}, [%rd6+8];
	// inline asm
	prmt.b32 %r7368, %r3798, %r3797, %r7;
	// inline asm
	ld.local.u32 	%r3679, [%rd6+8];
	ld.local.u32 	%r3680, [%rd6+4];
	// inline asm
	prmt.b32 %r7369, %r3679, %r3680, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3799, %r3800}, [%rd6];
	// inline asm
	prmt.b32 %r7362, %r3800, %r3799, %r7;
	// inline asm
	ld.local.u32 	%r3687, [%rd6];
	ld.local.u32 	%r3688, [%rd5+12];
	// inline asm
	prmt.b32 %r7363, %r3687, %r3688, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3801, %r3802}, [%rd5+8];
	// inline asm
	prmt.b32 %r7364, %r3802, %r3801, %r7;
	// inline asm
	ld.local.u32 	%r3695, [%rd5+8];
	ld.local.u32 	%r3696, [%rd5+4];
	// inline asm
	prmt.b32 %r7365, %r3695, %r3696, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3803, %r3804}, [%rd5];
	// inline asm
	prmt.b32 %r3698, %r3804, %r3803, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r3698;
	ld.local.u32 	%r3703, [%rd5];
	ld.local.u32 	%r3704, [%rd4+12];
	// inline asm
	prmt.b32 %r3702, %r3703, %r3704, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r3702;
	ld.local.v2.u32 	{%r3805, %r3806}, [%rd4+8];
	// inline asm
	prmt.b32 %r3706, %r3806, %r3805, %r7;
	// inline asm
	st.local.u32 	[%rd8+4], %r3706;
	ld.local.u32 	%r3711, [%rd4+8];
	ld.local.u32 	%r3712, [%rd4+4];
	// inline asm
	prmt.b32 %r3710, %r3711, %r3712, %r7;
	// inline asm
	st.local.u32 	[%rd8], %r3710;
	ld.local.v2.u32 	{%r3807, %r3808}, [%rd4];
	// inline asm
	prmt.b32 %r3714, %r3808, %r3807, %r7;
	// inline asm
	st.local.u32 	[%rd7+12], %r3714;
	ld.local.u32 	%r3719, [%rd4];
	ld.local.u32 	%r3720, [%rd3+12];
	// inline asm
	prmt.b32 %r3718, %r3719, %r3720, %r7;
	// inline asm
	st.local.u32 	[%rd7+8], %r3718;
	ld.local.v2.u32 	{%r3809, %r3810}, [%rd3+8];
	// inline asm
	prmt.b32 %r3722, %r3810, %r3809, %r7;
	// inline asm
	st.local.u32 	[%rd7+4], %r3722;
	ld.local.u32 	%r3727, [%rd3+8];
	ld.local.u32 	%r3728, [%rd3+4];
	// inline asm
	prmt.b32 %r3726, %r3727, %r3728, %r7;
	// inline asm
	st.local.u32 	[%rd7], %r3726;
	ld.local.v2.u32 	{%r3811, %r3812}, [%rd3];
	// inline asm
	prmt.b32 %r3730, %r3812, %r3811, %r7;
	// inline asm
	st.local.u32 	[%rd6+12], %r3730;
	ld.local.u32 	%r3735, [%rd3];
	ld.local.u32 	%r3736, [%rd2+12];
	// inline asm
	prmt.b32 %r3734, %r3735, %r3736, %r7;
	// inline asm
	st.local.u32 	[%rd6+8], %r3734;
	ld.local.v2.u32 	{%r3813, %r3814}, [%rd2+8];
	// inline asm
	prmt.b32 %r3738, %r3814, %r3813, %r7;
	// inline asm
	st.local.u32 	[%rd6+4], %r3738;
	ld.local.u32 	%r3743, [%rd2+8];
	ld.local.u32 	%r3744, [%rd2+4];
	// inline asm
	prmt.b32 %r3742, %r3743, %r3744, %r7;
	// inline asm
	st.local.u32 	[%rd6], %r3742;
	ld.local.v2.u32 	{%r3815, %r3816}, [%rd2];
	// inline asm
	prmt.b32 %r3746, %r3816, %r3815, %r7;
	// inline asm
	st.local.u32 	[%rd5+12], %r3746;
	ld.local.u32 	%r3751, [%rd2];
	ld.local.u32 	%r3752, [%rd1+12];
	// inline asm
	prmt.b32 %r3750, %r3751, %r3752, %r7;
	// inline asm
	st.local.u32 	[%rd5+8], %r3750;
	ld.local.v2.u32 	{%r3817, %r3818}, [%rd1+8];
	// inline asm
	prmt.b32 %r3754, %r3818, %r3817, %r7;
	// inline asm
	st.local.u32 	[%rd5+4], %r3754;
	ld.local.u32 	%r3759, [%rd1+8];
	ld.local.u32 	%r3760, [%rd1+4];
	// inline asm
	prmt.b32 %r3758, %r3759, %r3760, %r7;
	// inline asm
	st.local.u32 	[%rd5], %r3758;
	ld.local.v2.u32 	{%r3819, %r3820}, [%rd1];
	// inline asm
	prmt.b32 %r3762, %r3820, %r3819, %r7;
	// inline asm
	st.local.u32 	[%rd4+12], %r3762;
	ld.local.u32 	%r3767, [%rd1];
	// inline asm
	prmt.b32 %r3766, %r3767, %r7360, %r7;
	// inline asm
	st.local.u32 	[%rd4+8], %r3766;
	st.local.v2.u32 	[%rd4], {%r7360, %r7360};
	st.local.u32 	[%rd3+12], %r7360;
	st.local.u32 	[%rd3+8], %r7360;
	st.local.u32 	[%rd3+4], %r7360;
	st.local.u32 	[%rd3], %r7360;
	st.local.u32 	[%rd2+12], %r7360;
	st.local.u32 	[%rd2+8], %r7360;
	st.local.u32 	[%rd2+4], %r7360;
	st.local.u32 	[%rd2], %r7360;
	st.local.u32 	[%rd1+12], %r7360;
	st.local.u32 	[%rd1+8], %r7360;
	mov.u64 	%rd205, 0;
	st.local.u32 	[%rd1+4], %rd205;
	st.local.u32 	[%rd1], %rd205;
	mov.u32 	%r7361, %r7360;
	mov.u32 	%r7374, %r7360;
	bra.uni 	BB2_83;

BB2_64:
	setp.eq.s32	%p6, %r673, 30;
	@%p6 bra 	BB2_67;
	bra.uni 	BB2_65;

BB2_67:
	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7391, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r981, %r982}, [%rd8+8];
	// inline asm
	prmt.b32 %r7392, %r982, %r981, %r7;
	// inline asm
	ld.local.u32 	%r855, [%rd8+8];
	ld.local.u32 	%r856, [%rd8+4];
	// inline asm
	prmt.b32 %r7393, %r855, %r856, %r7;
	// inline asm
	ld.local.v2.u32 	{%r983, %r984}, [%rd8];
	// inline asm
	prmt.b32 %r7386, %r984, %r983, %r7;
	// inline asm
	ld.local.u32 	%r863, [%rd8];
	ld.local.u32 	%r864, [%rd7+12];
	// inline asm
	prmt.b32 %r7387, %r863, %r864, %r7;
	// inline asm
	ld.local.v2.u32 	{%r985, %r986}, [%rd7+8];
	// inline asm
	prmt.b32 %r7388, %r986, %r985, %r7;
	// inline asm
	ld.local.u32 	%r871, [%rd7+8];
	ld.local.u32 	%r872, [%rd7+4];
	// inline asm
	prmt.b32 %r7389, %r871, %r872, %r7;
	// inline asm
	ld.local.v2.u32 	{%r987, %r988}, [%rd7];
	// inline asm
	prmt.b32 %r7382, %r988, %r987, %r7;
	// inline asm
	ld.local.u32 	%r879, [%rd7];
	ld.local.u32 	%r880, [%rd6+12];
	// inline asm
	prmt.b32 %r7383, %r879, %r880, %r7;
	// inline asm
	ld.local.v2.u32 	{%r989, %r990}, [%rd6+8];
	// inline asm
	prmt.b32 %r7384, %r990, %r989, %r7;
	// inline asm
	ld.local.u32 	%r887, [%rd6+8];
	ld.local.u32 	%r888, [%rd6+4];
	// inline asm
	prmt.b32 %r7385, %r887, %r888, %r7;
	// inline asm
	ld.local.v2.u32 	{%r991, %r992}, [%rd6];
	// inline asm
	prmt.b32 %r7378, %r992, %r991, %r7;
	// inline asm
	ld.local.u32 	%r895, [%rd6];
	ld.local.u32 	%r896, [%rd5+12];
	// inline asm
	prmt.b32 %r7379, %r895, %r896, %r7;
	// inline asm
	ld.local.v2.u32 	{%r993, %r994}, [%rd5+8];
	// inline asm
	prmt.b32 %r7380, %r994, %r993, %r7;
	// inline asm
	ld.local.u32 	%r903, [%rd5+8];
	ld.local.u32 	%r904, [%rd5+4];
	// inline asm
	prmt.b32 %r7381, %r903, %r904, %r7;
	// inline asm
	ld.local.v2.u32 	{%r995, %r996}, [%rd5];
	// inline asm
	prmt.b32 %r7374, %r996, %r995, %r7;
	// inline asm
	ld.local.u32 	%r911, [%rd5];
	ld.local.u32 	%r912, [%rd4+12];
	// inline asm
	prmt.b32 %r7375, %r911, %r912, %r7;
	// inline asm
	ld.local.v2.u32 	{%r997, %r998}, [%rd4+8];
	// inline asm
	prmt.b32 %r7376, %r998, %r997, %r7;
	// inline asm
	ld.local.u32 	%r919, [%rd4+8];
	ld.local.u32 	%r920, [%rd4+4];
	// inline asm
	prmt.b32 %r7377, %r919, %r920, %r7;
	// inline asm
	ld.local.v2.u32 	{%r999, %r1000}, [%rd4];
	// inline asm
	prmt.b32 %r7370, %r1000, %r999, %r7;
	// inline asm
	ld.local.u32 	%r927, [%rd4];
	ld.local.u32 	%r928, [%rd3+12];
	// inline asm
	prmt.b32 %r7371, %r927, %r928, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1001, %r1002}, [%rd3+8];
	// inline asm
	prmt.b32 %r7372, %r1002, %r1001, %r7;
	// inline asm
	ld.local.u32 	%r935, [%rd3+8];
	ld.local.u32 	%r936, [%rd3+4];
	// inline asm
	prmt.b32 %r7373, %r935, %r936, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1003, %r1004}, [%rd3];
	// inline asm
	prmt.b32 %r7366, %r1004, %r1003, %r7;
	// inline asm
	ld.local.u32 	%r943, [%rd3];
	ld.local.u32 	%r944, [%rd2+12];
	// inline asm
	prmt.b32 %r7367, %r943, %r944, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1005, %r1006}, [%rd2+8];
	// inline asm
	prmt.b32 %r7368, %r1006, %r1005, %r7;
	// inline asm
	ld.local.u32 	%r951, [%rd2+8];
	ld.local.u32 	%r952, [%rd2+4];
	// inline asm
	prmt.b32 %r7369, %r951, %r952, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1007, %r1008}, [%rd2];
	// inline asm
	prmt.b32 %r7362, %r1008, %r1007, %r7;
	// inline asm
	ld.local.u32 	%r959, [%rd2];
	ld.local.u32 	%r960, [%rd1+12];
	// inline asm
	prmt.b32 %r7363, %r959, %r960, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1009, %r1010}, [%rd1+8];
	// inline asm
	prmt.b32 %r7364, %r1010, %r1009, %r7;
	// inline asm
	ld.local.u32 	%r967, [%rd1+8];
	ld.local.u32 	%r968, [%rd1+4];
	// inline asm
	prmt.b32 %r7365, %r967, %r968, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1011, %r1012}, [%rd1];
	// inline asm
	prmt.b32 %r970, %r1012, %r1011, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r970;
	ld.local.u32 	%r975, [%rd1];
	// inline asm
	prmt.b32 %r974, %r975, %r7360, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r974;
	st.local.v2.u32 	[%rd8], {%r7360, %r7360};
	st.local.u32 	[%rd7+12], %r7360;
	st.local.u32 	[%rd7+8], %r7360;
	st.local.u32 	[%rd7+4], %r7360;
	st.local.u32 	[%rd7], %r7360;
	st.local.u32 	[%rd6+12], %r7360;
	st.local.u32 	[%rd6+8], %r7360;
	st.local.u32 	[%rd6+4], %r7360;
	st.local.u32 	[%rd6], %r7360;
	st.local.u32 	[%rd5+12], %r7360;
	st.local.u32 	[%rd5+8], %r7360;
	st.local.u32 	[%rd5+4], %r7360;
	st.local.u32 	[%rd5], %r7360;
	st.local.u32 	[%rd4+12], %r7360;
	st.local.u32 	[%rd4+8], %r7360;
	st.local.u32 	[%rd4+4], %r7360;
	st.local.u32 	[%rd4], %r7360;
	st.local.u32 	[%rd3+12], %r7360;
	st.local.u32 	[%rd3+8], %r7360;
	st.local.u32 	[%rd3+4], %r7360;
	st.local.u32 	[%rd3], %r7360;
	st.local.u32 	[%rd2+12], %r7360;
	st.local.u32 	[%rd2+8], %r7360;
	st.local.u32 	[%rd2+4], %r7360;
	st.local.u32 	[%rd2], %r7360;
	st.local.u32 	[%rd1+12], %r7360;
	st.local.u32 	[%rd1+8], %r7360;
	mov.u64 	%rd189, 0;
	st.local.u32 	[%rd1+4], %rd189;
	st.local.u32 	[%rd1], %rd189;
	mov.u32 	%r7361, %r7360;
	mov.u32 	%r7390, %r7360;
	bra.uni 	BB2_89;

BB2_8:
	setp.eq.s32	%p48, %r673, 1;
	mov.u32 	%r7363, %r7362;
	mov.u32 	%r7364, %r7362;
	mov.u32 	%r7365, %r7362;
	mov.u32 	%r7366, %r7362;
	mov.u32 	%r7367, %r7362;
	mov.u32 	%r7368, %r7362;
	mov.u32 	%r7369, %r7362;
	mov.u32 	%r7370, %r7362;
	mov.u32 	%r7371, %r7362;
	mov.u32 	%r7372, %r7362;
	mov.u32 	%r7373, %r7362;
	mov.u32 	%r7374, %r7362;
	mov.u32 	%r7375, %r7362;
	mov.u32 	%r7376, %r7362;
	mov.u32 	%r7377, %r7362;
	mov.u32 	%r7378, %r7362;
	mov.u32 	%r7379, %r7362;
	mov.u32 	%r7380, %r7362;
	mov.u32 	%r7381, %r7362;
	mov.u32 	%r7382, %r7362;
	mov.u32 	%r7383, %r7362;
	mov.u32 	%r7384, %r7362;
	mov.u32 	%r7385, %r7362;
	mov.u32 	%r7386, %r7362;
	mov.u32 	%r7387, %r7362;
	mov.u32 	%r7388, %r7362;
	mov.u32 	%r7389, %r7362;
	mov.u32 	%r7390, %r7362;
	mov.u32 	%r7391, %r7362;
	mov.u32 	%r7392, %r7362;
	mov.u32 	%r7393, %r7362;
	@%p48 bra 	BB2_9;
	bra.uni 	BB2_89;

BB2_9:
	mov.u32 	%r7361, 0;
	// inline asm
	prmt.b32 %r7364, %r7361, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r6258, %r6259}, [%rd8+8];
	// inline asm
	prmt.b32 %r7365, %r6259, %r6258, %r7;
	// inline asm
	ld.local.u32 	%r6104, [%rd8+8];
	ld.local.u32 	%r6105, [%rd8+4];
	// inline asm
	prmt.b32 %r6103, %r6104, %r6105, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r6103;
	ld.local.v2.u32 	{%r6260, %r6261}, [%rd8];
	// inline asm
	prmt.b32 %r6107, %r6261, %r6260, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r6107;
	ld.local.u32 	%r6112, [%rd8];
	ld.local.u32 	%r6113, [%rd7+12];
	// inline asm
	prmt.b32 %r6111, %r6112, %r6113, %r7;
	// inline asm
	st.local.u32 	[%rd8+4], %r6111;
	ld.local.v2.u32 	{%r6262, %r6263}, [%rd7+8];
	// inline asm
	prmt.b32 %r6115, %r6263, %r6262, %r7;
	// inline asm
	st.local.u32 	[%rd8], %r6115;
	ld.local.u32 	%r6120, [%rd7+8];
	ld.local.u32 	%r6121, [%rd7+4];
	// inline asm
	prmt.b32 %r6119, %r6120, %r6121, %r7;
	// inline asm
	st.local.u32 	[%rd7+12], %r6119;
	ld.local.v2.u32 	{%r6264, %r6265}, [%rd7];
	// inline asm
	prmt.b32 %r6123, %r6265, %r6264, %r7;
	// inline asm
	st.local.u32 	[%rd7+8], %r6123;
	ld.local.u32 	%r6128, [%rd7];
	ld.local.u32 	%r6129, [%rd6+12];
	// inline asm
	prmt.b32 %r6127, %r6128, %r6129, %r7;
	// inline asm
	st.local.u32 	[%rd7+4], %r6127;
	ld.local.v2.u32 	{%r6266, %r6267}, [%rd6+8];
	// inline asm
	prmt.b32 %r6131, %r6267, %r6266, %r7;
	// inline asm
	st.local.u32 	[%rd7], %r6131;
	ld.local.u32 	%r6136, [%rd6+8];
	ld.local.u32 	%r6137, [%rd6+4];
	// inline asm
	prmt.b32 %r6135, %r6136, %r6137, %r7;
	// inline asm
	st.local.u32 	[%rd6+12], %r6135;
	ld.local.v2.u32 	{%r6268, %r6269}, [%rd6];
	// inline asm
	prmt.b32 %r6139, %r6269, %r6268, %r7;
	// inline asm
	st.local.u32 	[%rd6+8], %r6139;
	ld.local.u32 	%r6144, [%rd6];
	ld.local.u32 	%r6145, [%rd5+12];
	// inline asm
	prmt.b32 %r6143, %r6144, %r6145, %r7;
	// inline asm
	st.local.u32 	[%rd6+4], %r6143;
	ld.local.v2.u32 	{%r6270, %r6271}, [%rd5+8];
	// inline asm
	prmt.b32 %r6147, %r6271, %r6270, %r7;
	// inline asm
	st.local.u32 	[%rd6], %r6147;
	ld.local.u32 	%r6152, [%rd5+8];
	ld.local.u32 	%r6153, [%rd5+4];
	// inline asm
	prmt.b32 %r6151, %r6152, %r6153, %r7;
	// inline asm
	st.local.u32 	[%rd5+12], %r6151;
	ld.local.v2.u32 	{%r6272, %r6273}, [%rd5];
	// inline asm
	prmt.b32 %r6155, %r6273, %r6272, %r7;
	// inline asm
	st.local.u32 	[%rd5+8], %r6155;
	ld.local.u32 	%r6160, [%rd5];
	ld.local.u32 	%r6161, [%rd4+12];
	// inline asm
	prmt.b32 %r6159, %r6160, %r6161, %r7;
	// inline asm
	st.local.u32 	[%rd5+4], %r6159;
	ld.local.v2.u32 	{%r6274, %r6275}, [%rd4+8];
	// inline asm
	prmt.b32 %r6163, %r6275, %r6274, %r7;
	// inline asm
	st.local.u32 	[%rd5], %r6163;
	ld.local.u32 	%r6168, [%rd4+8];
	ld.local.u32 	%r6169, [%rd4+4];
	// inline asm
	prmt.b32 %r6167, %r6168, %r6169, %r7;
	// inline asm
	st.local.u32 	[%rd4+12], %r6167;
	ld.local.v2.u32 	{%r6276, %r6277}, [%rd4];
	// inline asm
	prmt.b32 %r6171, %r6277, %r6276, %r7;
	// inline asm
	st.local.u32 	[%rd4+8], %r6171;
	ld.local.u32 	%r6176, [%rd4];
	ld.local.u32 	%r6177, [%rd3+12];
	// inline asm
	prmt.b32 %r6175, %r6176, %r6177, %r7;
	// inline asm
	st.local.u32 	[%rd4+4], %r6175;
	ld.local.v2.u32 	{%r6278, %r6279}, [%rd3+8];
	// inline asm
	prmt.b32 %r6179, %r6279, %r6278, %r7;
	// inline asm
	st.local.u32 	[%rd4], %r6179;
	ld.local.u32 	%r6184, [%rd3+8];
	ld.local.u32 	%r6185, [%rd3+4];
	// inline asm
	prmt.b32 %r6183, %r6184, %r6185, %r7;
	// inline asm
	st.local.u32 	[%rd3+12], %r6183;
	ld.local.v2.u32 	{%r6280, %r6281}, [%rd3];
	// inline asm
	prmt.b32 %r6187, %r6281, %r6280, %r7;
	// inline asm
	st.local.u32 	[%rd3+8], %r6187;
	ld.local.u32 	%r6192, [%rd3];
	ld.local.u32 	%r6193, [%rd2+12];
	// inline asm
	prmt.b32 %r6191, %r6192, %r6193, %r7;
	// inline asm
	st.local.u32 	[%rd3+4], %r6191;
	ld.local.v2.u32 	{%r6282, %r6283}, [%rd2+8];
	// inline asm
	prmt.b32 %r6195, %r6283, %r6282, %r7;
	// inline asm
	st.local.u32 	[%rd3], %r6195;
	ld.local.u32 	%r6200, [%rd2+8];
	ld.local.u32 	%r6201, [%rd2+4];
	// inline asm
	prmt.b32 %r6199, %r6200, %r6201, %r7;
	// inline asm
	st.local.u32 	[%rd2+12], %r6199;
	ld.local.v2.u32 	{%r6284, %r6285}, [%rd2];
	// inline asm
	prmt.b32 %r6203, %r6285, %r6284, %r7;
	// inline asm
	st.local.u32 	[%rd2+8], %r6203;
	ld.local.u32 	%r6208, [%rd2];
	ld.local.u32 	%r6209, [%rd1+12];
	// inline asm
	prmt.b32 %r6207, %r6208, %r6209, %r7;
	// inline asm
	st.local.u32 	[%rd2+4], %r6207;
	ld.local.v2.u32 	{%r6286, %r6287}, [%rd1+8];
	// inline asm
	prmt.b32 %r6211, %r6287, %r6286, %r7;
	// inline asm
	st.local.u32 	[%rd2], %r6211;
	ld.local.u32 	%r6216, [%rd1+8];
	ld.local.u32 	%r6217, [%rd1+4];
	// inline asm
	prmt.b32 %r6215, %r6216, %r6217, %r7;
	// inline asm
	st.local.u32 	[%rd1+12], %r6215;
	ld.local.v2.u32 	{%r6288, %r6289}, [%rd1];
	// inline asm
	prmt.b32 %r6219, %r6289, %r6288, %r7;
	// inline asm
	st.local.u32 	[%rd1+8], %r6219;
	ld.local.u32 	%r6224, [%rd1];
	// inline asm
	prmt.b32 %r7360, %r6224, %r7361, %r7;
	// inline asm
	st.local.v2.u32 	[%rd1], {%r7361, %r7360};
	mov.u32 	%r7362, %r7361;
	mov.u32 	%r7363, %r7361;
	mov.u32 	%r7366, %r7361;
	mov.u32 	%r7367, %r7361;
	mov.u32 	%r7368, %r7361;
	mov.u32 	%r7369, %r7361;
	mov.u32 	%r7370, %r7361;
	mov.u32 	%r7371, %r7361;
	mov.u32 	%r7372, %r7361;
	mov.u32 	%r7373, %r7361;
	mov.u32 	%r7374, %r7361;
	mov.u32 	%r7375, %r7361;
	mov.u32 	%r7376, %r7361;
	mov.u32 	%r7377, %r7361;
	mov.u32 	%r7378, %r7361;
	mov.u32 	%r7379, %r7361;
	mov.u32 	%r7380, %r7361;
	mov.u32 	%r7381, %r7361;
	mov.u32 	%r7382, %r7361;
	mov.u32 	%r7383, %r7361;
	mov.u32 	%r7384, %r7361;
	mov.u32 	%r7385, %r7361;
	mov.u32 	%r7386, %r7361;
	mov.u32 	%r7387, %r7361;
	mov.u32 	%r7388, %r7361;
	mov.u32 	%r7389, %r7361;
	mov.u32 	%r7390, %r7361;
	mov.u32 	%r7391, %r7361;
	mov.u32 	%r7392, %r7361;
	mov.u32 	%r7393, %r7361;
	bra.uni 	BB2_89;

BB2_40:
	setp.eq.s32	%p25, %r673, 17;
	mov.u32 	%r7363, %r7362;
	mov.u32 	%r7364, %r7362;
	mov.u32 	%r7365, %r7362;
	mov.u32 	%r7366, %r7362;
	mov.u32 	%r7367, %r7362;
	mov.u32 	%r7368, %r7362;
	mov.u32 	%r7369, %r7362;
	mov.u32 	%r7370, %r7362;
	mov.u32 	%r7371, %r7362;
	mov.u32 	%r7372, %r7362;
	mov.u32 	%r7373, %r7362;
	mov.u32 	%r7374, %r7362;
	mov.u32 	%r7375, %r7362;
	mov.u32 	%r7376, %r7362;
	mov.u32 	%r7377, %r7362;
	mov.u32 	%r7378, %r7362;
	mov.u32 	%r7379, %r7362;
	mov.u32 	%r7380, %r7362;
	mov.u32 	%r7381, %r7362;
	mov.u32 	%r7382, %r7362;
	mov.u32 	%r7383, %r7362;
	mov.u32 	%r7384, %r7362;
	mov.u32 	%r7385, %r7362;
	mov.u32 	%r7386, %r7362;
	mov.u32 	%r7387, %r7362;
	mov.u32 	%r7388, %r7362;
	mov.u32 	%r7389, %r7362;
	mov.u32 	%r7390, %r7362;
	mov.u32 	%r7391, %r7362;
	mov.u32 	%r7392, %r7362;
	mov.u32 	%r7393, %r7362;
	@%p25 bra 	BB2_41;
	bra.uni 	BB2_89;

BB2_41:
	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7380, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3243, %r3244}, [%rd8+8];
	// inline asm
	prmt.b32 %r7381, %r3244, %r3243, %r7;
	// inline asm
	ld.local.u32 	%r3104, [%rd8+8];
	ld.local.u32 	%r3105, [%rd8+4];
	// inline asm
	prmt.b32 %r7374, %r3104, %r3105, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3245, %r3246}, [%rd8];
	// inline asm
	prmt.b32 %r7375, %r3246, %r3245, %r7;
	// inline asm
	ld.local.u32 	%r3112, [%rd8];
	ld.local.u32 	%r3113, [%rd7+12];
	// inline asm
	prmt.b32 %r7376, %r3112, %r3113, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3247, %r3248}, [%rd7+8];
	// inline asm
	prmt.b32 %r7377, %r3248, %r3247, %r7;
	// inline asm
	ld.local.u32 	%r3120, [%rd7+8];
	ld.local.u32 	%r3121, [%rd7+4];
	// inline asm
	prmt.b32 %r7370, %r3120, %r3121, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3249, %r3250}, [%rd7];
	// inline asm
	prmt.b32 %r7371, %r3250, %r3249, %r7;
	// inline asm
	ld.local.u32 	%r3128, [%rd7];
	ld.local.u32 	%r3129, [%rd6+12];
	// inline asm
	prmt.b32 %r7372, %r3128, %r3129, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3251, %r3252}, [%rd6+8];
	// inline asm
	prmt.b32 %r7373, %r3252, %r3251, %r7;
	// inline asm
	ld.local.u32 	%r3136, [%rd6+8];
	ld.local.u32 	%r3137, [%rd6+4];
	// inline asm
	prmt.b32 %r7366, %r3136, %r3137, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3253, %r3254}, [%rd6];
	// inline asm
	prmt.b32 %r7367, %r3254, %r3253, %r7;
	// inline asm
	ld.local.u32 	%r3144, [%rd6];
	ld.local.u32 	%r3145, [%rd5+12];
	// inline asm
	prmt.b32 %r7368, %r3144, %r3145, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3255, %r3256}, [%rd5+8];
	// inline asm
	prmt.b32 %r7369, %r3256, %r3255, %r7;
	// inline asm
	ld.local.u32 	%r3152, [%rd5+8];
	ld.local.u32 	%r3153, [%rd5+4];
	// inline asm
	prmt.b32 %r7362, %r3152, %r3153, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3257, %r3258}, [%rd5];
	// inline asm
	prmt.b32 %r7363, %r3258, %r3257, %r7;
	// inline asm
	ld.local.u32 	%r3160, [%rd5];
	ld.local.u32 	%r3161, [%rd4+12];
	// inline asm
	prmt.b32 %r7364, %r3160, %r3161, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3259, %r3260}, [%rd4+8];
	// inline asm
	prmt.b32 %r7365, %r3260, %r3259, %r7;
	// inline asm
	ld.local.u32 	%r3168, [%rd4+8];
	ld.local.u32 	%r3169, [%rd4+4];
	// inline asm
	prmt.b32 %r3167, %r3168, %r3169, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r3167;
	ld.local.v2.u32 	{%r3261, %r3262}, [%rd4];
	// inline asm
	prmt.b32 %r3171, %r3262, %r3261, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r3171;
	ld.local.u32 	%r3176, [%rd4];
	ld.local.u32 	%r3177, [%rd3+12];
	// inline asm
	prmt.b32 %r3175, %r3176, %r3177, %r7;
	// inline asm
	st.local.u32 	[%rd8+4], %r3175;
	ld.local.v2.u32 	{%r3263, %r3264}, [%rd3+8];
	// inline asm
	prmt.b32 %r3179, %r3264, %r3263, %r7;
	// inline asm
	st.local.u32 	[%rd8], %r3179;
	ld.local.u32 	%r3184, [%rd3+8];
	ld.local.u32 	%r3185, [%rd3+4];
	// inline asm
	prmt.b32 %r3183, %r3184, %r3185, %r7;
	// inline asm
	st.local.u32 	[%rd7+12], %r3183;
	ld.local.v2.u32 	{%r3265, %r3266}, [%rd3];
	// inline asm
	prmt.b32 %r3187, %r3266, %r3265, %r7;
	// inline asm
	st.local.u32 	[%rd7+8], %r3187;
	ld.local.u32 	%r3192, [%rd3];
	ld.local.u32 	%r3193, [%rd2+12];
	// inline asm
	prmt.b32 %r3191, %r3192, %r3193, %r7;
	// inline asm
	st.local.u32 	[%rd7+4], %r3191;
	ld.local.v2.u32 	{%r3267, %r3268}, [%rd2+8];
	// inline asm
	prmt.b32 %r3195, %r3268, %r3267, %r7;
	// inline asm
	st.local.u32 	[%rd7], %r3195;
	ld.local.u32 	%r3200, [%rd2+8];
	ld.local.u32 	%r3201, [%rd2+4];
	// inline asm
	prmt.b32 %r3199, %r3200, %r3201, %r7;
	// inline asm
	st.local.u32 	[%rd6+12], %r3199;
	ld.local.v2.u32 	{%r3269, %r3270}, [%rd2];
	// inline asm
	prmt.b32 %r3203, %r3270, %r3269, %r7;
	// inline asm
	st.local.u32 	[%rd6+8], %r3203;
	ld.local.u32 	%r3208, [%rd2];
	ld.local.u32 	%r3209, [%rd1+12];
	// inline asm
	prmt.b32 %r3207, %r3208, %r3209, %r7;
	// inline asm
	st.local.u32 	[%rd6+4], %r3207;
	ld.local.v2.u32 	{%r3271, %r3272}, [%rd1+8];
	// inline asm
	prmt.b32 %r3211, %r3272, %r3271, %r7;
	// inline asm
	st.local.u32 	[%rd6], %r3211;
	ld.local.u32 	%r3216, [%rd1+8];
	ld.local.u32 	%r3217, [%rd1+4];
	// inline asm
	prmt.b32 %r3215, %r3216, %r3217, %r7;
	// inline asm
	st.local.u32 	[%rd5+12], %r3215;
	ld.local.v2.u32 	{%r3273, %r3274}, [%rd1];
	// inline asm
	prmt.b32 %r3219, %r3274, %r3273, %r7;
	// inline asm
	st.local.u32 	[%rd5+8], %r3219;
	ld.local.u32 	%r3224, [%rd1];
	// inline asm
	prmt.b32 %r3223, %r3224, %r7360, %r7;
	// inline asm
	st.local.v2.u32 	[%rd5], {%r7360, %r3223};
	st.local.v4.u32 	[%rd4], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd3], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd2], {%r7360, %r7360, %r7360, %r7360};
	st.local.v2.u32 	[%rd1+8], {%r7360, %r7360};
	mov.u64 	%rd202, 0;
	st.local.u64 	[%rd1], %rd202;
	mov.u32 	%r7361, %r7360;
	mov.u32 	%r7378, %r7360;
	mov.u32 	%r7379, %r7360;
	bra.uni 	BB2_84;

BB2_24:
	setp.eq.s32	%p37, %r673, 9;
	mov.u32 	%r7363, %r7362;
	mov.u32 	%r7364, %r7362;
	mov.u32 	%r7365, %r7362;
	mov.u32 	%r7366, %r7362;
	mov.u32 	%r7367, %r7362;
	mov.u32 	%r7368, %r7362;
	mov.u32 	%r7369, %r7362;
	mov.u32 	%r7370, %r7362;
	mov.u32 	%r7371, %r7362;
	mov.u32 	%r7372, %r7362;
	mov.u32 	%r7373, %r7362;
	mov.u32 	%r7374, %r7362;
	mov.u32 	%r7375, %r7362;
	mov.u32 	%r7376, %r7362;
	mov.u32 	%r7377, %r7362;
	mov.u32 	%r7378, %r7362;
	mov.u32 	%r7379, %r7362;
	mov.u32 	%r7380, %r7362;
	mov.u32 	%r7381, %r7362;
	mov.u32 	%r7382, %r7362;
	mov.u32 	%r7383, %r7362;
	mov.u32 	%r7384, %r7362;
	mov.u32 	%r7385, %r7362;
	mov.u32 	%r7386, %r7362;
	mov.u32 	%r7387, %r7362;
	mov.u32 	%r7388, %r7362;
	mov.u32 	%r7389, %r7362;
	mov.u32 	%r7390, %r7362;
	mov.u32 	%r7391, %r7362;
	mov.u32 	%r7392, %r7362;
	mov.u32 	%r7393, %r7362;
	@%p37 bra 	BB2_25;
	bra.uni 	BB2_89;

BB2_25:
	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7372, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r4719, %r4720}, [%rd8+8];
	// inline asm
	prmt.b32 %r7373, %r4720, %r4719, %r7;
	// inline asm
	ld.local.u32 	%r4572, [%rd8+8];
	ld.local.u32 	%r4573, [%rd8+4];
	// inline asm
	prmt.b32 %r7366, %r4572, %r4573, %r7;
	// inline asm
	ld.local.v2.u32 	{%r4721, %r4722}, [%rd8];
	// inline asm
	prmt.b32 %r7367, %r4722, %r4721, %r7;
	// inline asm
	ld.local.u32 	%r4580, [%rd8];
	ld.local.u32 	%r4581, [%rd7+12];
	// inline asm
	prmt.b32 %r7368, %r4580, %r4581, %r7;
	// inline asm
	ld.local.v2.u32 	{%r4723, %r4724}, [%rd7+8];
	// inline asm
	prmt.b32 %r7369, %r4724, %r4723, %r7;
	// inline asm
	ld.local.u32 	%r4588, [%rd7+8];
	ld.local.u32 	%r4589, [%rd7+4];
	// inline asm
	prmt.b32 %r7362, %r4588, %r4589, %r7;
	// inline asm
	ld.local.v2.u32 	{%r4725, %r4726}, [%rd7];
	// inline asm
	prmt.b32 %r7363, %r4726, %r4725, %r7;
	// inline asm
	ld.local.u32 	%r4596, [%rd7];
	ld.local.u32 	%r4597, [%rd6+12];
	// inline asm
	prmt.b32 %r7364, %r4596, %r4597, %r7;
	// inline asm
	ld.local.v2.u32 	{%r4727, %r4728}, [%rd6+8];
	// inline asm
	prmt.b32 %r7365, %r4728, %r4727, %r7;
	// inline asm
	ld.local.u32 	%r4604, [%rd6+8];
	ld.local.u32 	%r4605, [%rd6+4];
	// inline asm
	prmt.b32 %r4603, %r4604, %r4605, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r4603;
	ld.local.v2.u32 	{%r4729, %r4730}, [%rd6];
	// inline asm
	prmt.b32 %r4607, %r4730, %r4729, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r4607;
	ld.local.u32 	%r4612, [%rd6];
	ld.local.u32 	%r4613, [%rd5+12];
	// inline asm
	prmt.b32 %r4611, %r4612, %r4613, %r7;
	// inline asm
	st.local.u32 	[%rd8+4], %r4611;
	ld.local.v2.u32 	{%r4731, %r4732}, [%rd5+8];
	// inline asm
	prmt.b32 %r4615, %r4732, %r4731, %r7;
	// inline asm
	st.local.u32 	[%rd8], %r4615;
	ld.local.u32 	%r4620, [%rd5+8];
	ld.local.u32 	%r4621, [%rd5+4];
	// inline asm
	prmt.b32 %r4619, %r4620, %r4621, %r7;
	// inline asm
	st.local.u32 	[%rd7+12], %r4619;
	ld.local.v2.u32 	{%r4733, %r4734}, [%rd5];
	// inline asm
	prmt.b32 %r4623, %r4734, %r4733, %r7;
	// inline asm
	st.local.u32 	[%rd7+8], %r4623;
	ld.local.u32 	%r4628, [%rd5];
	ld.local.u32 	%r4629, [%rd4+12];
	// inline asm
	prmt.b32 %r4627, %r4628, %r4629, %r7;
	// inline asm
	st.local.u32 	[%rd7+4], %r4627;
	ld.local.v2.u32 	{%r4735, %r4736}, [%rd4+8];
	// inline asm
	prmt.b32 %r4631, %r4736, %r4735, %r7;
	// inline asm
	st.local.u32 	[%rd7], %r4631;
	ld.local.u32 	%r4636, [%rd4+8];
	ld.local.u32 	%r4637, [%rd4+4];
	// inline asm
	prmt.b32 %r4635, %r4636, %r4637, %r7;
	// inline asm
	st.local.u32 	[%rd6+12], %r4635;
	ld.local.v2.u32 	{%r4737, %r4738}, [%rd4];
	// inline asm
	prmt.b32 %r4639, %r4738, %r4737, %r7;
	// inline asm
	st.local.u32 	[%rd6+8], %r4639;
	ld.local.u32 	%r4644, [%rd4];
	ld.local.u32 	%r4645, [%rd3+12];
	// inline asm
	prmt.b32 %r4643, %r4644, %r4645, %r7;
	// inline asm
	st.local.u32 	[%rd6+4], %r4643;
	ld.local.v2.u32 	{%r4739, %r4740}, [%rd3+8];
	// inline asm
	prmt.b32 %r4647, %r4740, %r4739, %r7;
	// inline asm
	st.local.u32 	[%rd6], %r4647;
	ld.local.u32 	%r4652, [%rd3+8];
	ld.local.u32 	%r4653, [%rd3+4];
	// inline asm
	prmt.b32 %r4651, %r4652, %r4653, %r7;
	// inline asm
	st.local.u32 	[%rd5+12], %r4651;
	ld.local.v2.u32 	{%r4741, %r4742}, [%rd3];
	// inline asm
	prmt.b32 %r4655, %r4742, %r4741, %r7;
	// inline asm
	st.local.u32 	[%rd5+8], %r4655;
	ld.local.u32 	%r4660, [%rd3];
	ld.local.u32 	%r4661, [%rd2+12];
	// inline asm
	prmt.b32 %r4659, %r4660, %r4661, %r7;
	// inline asm
	st.local.u32 	[%rd5+4], %r4659;
	ld.local.v2.u32 	{%r4743, %r4744}, [%rd2+8];
	// inline asm
	prmt.b32 %r4663, %r4744, %r4743, %r7;
	// inline asm
	st.local.u32 	[%rd5], %r4663;
	ld.local.u32 	%r4668, [%rd2+8];
	ld.local.u32 	%r4669, [%rd2+4];
	// inline asm
	prmt.b32 %r4667, %r4668, %r4669, %r7;
	// inline asm
	st.local.u32 	[%rd4+12], %r4667;
	ld.local.v2.u32 	{%r4745, %r4746}, [%rd2];
	// inline asm
	prmt.b32 %r4671, %r4746, %r4745, %r7;
	// inline asm
	st.local.u32 	[%rd4+8], %r4671;
	ld.local.u32 	%r4676, [%rd2];
	ld.local.u32 	%r4677, [%rd1+12];
	// inline asm
	prmt.b32 %r4675, %r4676, %r4677, %r7;
	// inline asm
	st.local.u32 	[%rd4+4], %r4675;
	ld.local.v2.u32 	{%r4747, %r4748}, [%rd1+8];
	// inline asm
	prmt.b32 %r4679, %r4748, %r4747, %r7;
	// inline asm
	st.local.u32 	[%rd4], %r4679;
	ld.local.u32 	%r4684, [%rd1+8];
	ld.local.u32 	%r4685, [%rd1+4];
	// inline asm
	prmt.b32 %r4683, %r4684, %r4685, %r7;
	// inline asm
	st.local.u32 	[%rd3+12], %r4683;
	ld.local.v2.u32 	{%r4749, %r4750}, [%rd1];
	// inline asm
	prmt.b32 %r4687, %r4750, %r4749, %r7;
	// inline asm
	st.local.u32 	[%rd3+8], %r4687;
	ld.local.u32 	%r4692, [%rd1];
	// inline asm
	prmt.b32 %r4691, %r4692, %r7360, %r7;
	// inline asm
	st.local.v2.u32 	[%rd3], {%r7360, %r4691};
	st.local.v4.u32 	[%rd2], {%r7360, %r7360, %r7360, %r7360};
	st.local.v2.u32 	[%rd1+8], {%r7360, %r7360};
	mov.u64 	%rd210, 0;
	st.local.u64 	[%rd1], %rd210;
	mov.u32 	%r7361, %r7360;
	mov.u32 	%r7370, %r7360;
	mov.u32 	%r7371, %r7360;
	bra.uni 	BB2_82;

BB2_55:
	setp.eq.s32	%p14, %r673, 25;
	mov.u32 	%r7363, %r7362;
	mov.u32 	%r7364, %r7362;
	mov.u32 	%r7365, %r7362;
	mov.u32 	%r7366, %r7362;
	mov.u32 	%r7367, %r7362;
	mov.u32 	%r7368, %r7362;
	mov.u32 	%r7369, %r7362;
	mov.u32 	%r7370, %r7362;
	mov.u32 	%r7371, %r7362;
	mov.u32 	%r7372, %r7362;
	mov.u32 	%r7373, %r7362;
	mov.u32 	%r7374, %r7362;
	mov.u32 	%r7375, %r7362;
	mov.u32 	%r7376, %r7362;
	mov.u32 	%r7377, %r7362;
	mov.u32 	%r7378, %r7362;
	mov.u32 	%r7379, %r7362;
	mov.u32 	%r7380, %r7362;
	mov.u32 	%r7381, %r7362;
	mov.u32 	%r7382, %r7362;
	mov.u32 	%r7383, %r7362;
	mov.u32 	%r7384, %r7362;
	mov.u32 	%r7385, %r7362;
	mov.u32 	%r7386, %r7362;
	mov.u32 	%r7387, %r7362;
	mov.u32 	%r7388, %r7362;
	mov.u32 	%r7389, %r7362;
	mov.u32 	%r7390, %r7362;
	mov.u32 	%r7391, %r7362;
	mov.u32 	%r7392, %r7362;
	mov.u32 	%r7393, %r7362;
	@%p14 bra 	BB2_56;
	bra.uni 	BB2_89;

BB2_56:
	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7388, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1831, %r1832}, [%rd8+8];
	// inline asm
	prmt.b32 %r7389, %r1832, %r1831, %r7;
	// inline asm
	ld.local.u32 	%r1700, [%rd8+8];
	ld.local.u32 	%r1701, [%rd8+4];
	// inline asm
	prmt.b32 %r7382, %r1700, %r1701, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1833, %r1834}, [%rd8];
	// inline asm
	prmt.b32 %r7383, %r1834, %r1833, %r7;
	// inline asm
	ld.local.u32 	%r1708, [%rd8];
	ld.local.u32 	%r1709, [%rd7+12];
	// inline asm
	prmt.b32 %r7384, %r1708, %r1709, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1835, %r1836}, [%rd7+8];
	// inline asm
	prmt.b32 %r7385, %r1836, %r1835, %r7;
	// inline asm
	ld.local.u32 	%r1716, [%rd7+8];
	ld.local.u32 	%r1717, [%rd7+4];
	// inline asm
	prmt.b32 %r7378, %r1716, %r1717, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1837, %r1838}, [%rd7];
	// inline asm
	prmt.b32 %r7379, %r1838, %r1837, %r7;
	// inline asm
	ld.local.u32 	%r1724, [%rd7];
	ld.local.u32 	%r1725, [%rd6+12];
	// inline asm
	prmt.b32 %r7380, %r1724, %r1725, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1839, %r1840}, [%rd6+8];
	// inline asm
	prmt.b32 %r7381, %r1840, %r1839, %r7;
	// inline asm
	ld.local.u32 	%r1732, [%rd6+8];
	ld.local.u32 	%r1733, [%rd6+4];
	// inline asm
	prmt.b32 %r7374, %r1732, %r1733, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1841, %r1842}, [%rd6];
	// inline asm
	prmt.b32 %r7375, %r1842, %r1841, %r7;
	// inline asm
	ld.local.u32 	%r1740, [%rd6];
	ld.local.u32 	%r1741, [%rd5+12];
	// inline asm
	prmt.b32 %r7376, %r1740, %r1741, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1843, %r1844}, [%rd5+8];
	// inline asm
	prmt.b32 %r7377, %r1844, %r1843, %r7;
	// inline asm
	ld.local.u32 	%r1748, [%rd5+8];
	ld.local.u32 	%r1749, [%rd5+4];
	// inline asm
	prmt.b32 %r7370, %r1748, %r1749, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1845, %r1846}, [%rd5];
	// inline asm
	prmt.b32 %r7371, %r1846, %r1845, %r7;
	// inline asm
	ld.local.u32 	%r1756, [%rd5];
	ld.local.u32 	%r1757, [%rd4+12];
	// inline asm
	prmt.b32 %r7372, %r1756, %r1757, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1847, %r1848}, [%rd4+8];
	// inline asm
	prmt.b32 %r7373, %r1848, %r1847, %r7;
	// inline asm
	ld.local.u32 	%r1764, [%rd4+8];
	ld.local.u32 	%r1765, [%rd4+4];
	// inline asm
	prmt.b32 %r7366, %r1764, %r1765, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1849, %r1850}, [%rd4];
	// inline asm
	prmt.b32 %r7367, %r1850, %r1849, %r7;
	// inline asm
	ld.local.u32 	%r1772, [%rd4];
	ld.local.u32 	%r1773, [%rd3+12];
	// inline asm
	prmt.b32 %r7368, %r1772, %r1773, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1851, %r1852}, [%rd3+8];
	// inline asm
	prmt.b32 %r7369, %r1852, %r1851, %r7;
	// inline asm
	ld.local.u32 	%r1780, [%rd3+8];
	ld.local.u32 	%r1781, [%rd3+4];
	// inline asm
	prmt.b32 %r7362, %r1780, %r1781, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1853, %r1854}, [%rd3];
	// inline asm
	prmt.b32 %r7363, %r1854, %r1853, %r7;
	// inline asm
	ld.local.u32 	%r1788, [%rd3];
	ld.local.u32 	%r1789, [%rd2+12];
	// inline asm
	prmt.b32 %r7364, %r1788, %r1789, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1855, %r1856}, [%rd2+8];
	// inline asm
	prmt.b32 %r7365, %r1856, %r1855, %r7;
	// inline asm
	ld.local.u32 	%r1796, [%rd2+8];
	ld.local.u32 	%r1797, [%rd2+4];
	// inline asm
	prmt.b32 %r1795, %r1796, %r1797, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r1795;
	ld.local.v2.u32 	{%r1857, %r1858}, [%rd2];
	// inline asm
	prmt.b32 %r1799, %r1858, %r1857, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r1799;
	ld.local.u32 	%r1804, [%rd2];
	ld.local.u32 	%r1805, [%rd1+12];
	// inline asm
	prmt.b32 %r1803, %r1804, %r1805, %r7;
	// inline asm
	st.local.u32 	[%rd8+4], %r1803;
	ld.local.v2.u32 	{%r1859, %r1860}, [%rd1+8];
	// inline asm
	prmt.b32 %r1807, %r1860, %r1859, %r7;
	// inline asm
	st.local.u32 	[%rd8], %r1807;
	ld.local.u32 	%r1812, [%rd1+8];
	ld.local.u32 	%r1813, [%rd1+4];
	// inline asm
	prmt.b32 %r1811, %r1812, %r1813, %r7;
	// inline asm
	st.local.u32 	[%rd7+12], %r1811;
	ld.local.v2.u32 	{%r1861, %r1862}, [%rd1];
	// inline asm
	prmt.b32 %r1815, %r1862, %r1861, %r7;
	// inline asm
	st.local.u32 	[%rd7+8], %r1815;
	ld.local.u32 	%r1820, [%rd1];
	// inline asm
	prmt.b32 %r1819, %r1820, %r7360, %r7;
	// inline asm
	st.local.v2.u32 	[%rd7], {%r7360, %r1819};
	st.local.v4.u32 	[%rd6], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd5], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd4], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd3], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd2], {%r7360, %r7360, %r7360, %r7360};
	st.local.v2.u32 	[%rd1+8], {%r7360, %r7360};
	mov.u64 	%rd194, 0;
	st.local.u64 	[%rd1], %rd194;
	mov.u32 	%r7361, %r7360;
	mov.u32 	%r7386, %r7360;
	mov.u32 	%r7387, %r7360;
	bra.uni 	BB2_86;

BB2_16:
	setp.eq.s32	%p43, %r673, 5;
	mov.u32 	%r7363, %r7362;
	mov.u32 	%r7364, %r7362;
	mov.u32 	%r7365, %r7362;
	mov.u32 	%r7366, %r7362;
	mov.u32 	%r7367, %r7362;
	mov.u32 	%r7368, %r7362;
	mov.u32 	%r7369, %r7362;
	mov.u32 	%r7370, %r7362;
	mov.u32 	%r7371, %r7362;
	mov.u32 	%r7372, %r7362;
	mov.u32 	%r7373, %r7362;
	mov.u32 	%r7374, %r7362;
	mov.u32 	%r7375, %r7362;
	mov.u32 	%r7376, %r7362;
	mov.u32 	%r7377, %r7362;
	mov.u32 	%r7378, %r7362;
	mov.u32 	%r7379, %r7362;
	mov.u32 	%r7380, %r7362;
	mov.u32 	%r7381, %r7362;
	mov.u32 	%r7382, %r7362;
	mov.u32 	%r7383, %r7362;
	mov.u32 	%r7384, %r7362;
	mov.u32 	%r7385, %r7362;
	mov.u32 	%r7386, %r7362;
	mov.u32 	%r7387, %r7362;
	mov.u32 	%r7388, %r7362;
	mov.u32 	%r7389, %r7362;
	mov.u32 	%r7390, %r7362;
	mov.u32 	%r7391, %r7362;
	mov.u32 	%r7392, %r7362;
	mov.u32 	%r7393, %r7362;
	@%p43 bra 	BB2_17;
	bra.uni 	BB2_89;

BB2_17:
	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7368, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r5481, %r5482}, [%rd8+8];
	// inline asm
	prmt.b32 %r7369, %r5482, %r5481, %r7;
	// inline asm
	ld.local.u32 	%r5330, [%rd8+8];
	ld.local.u32 	%r5331, [%rd8+4];
	// inline asm
	prmt.b32 %r7362, %r5330, %r5331, %r7;
	// inline asm
	ld.local.v2.u32 	{%r5483, %r5484}, [%rd8];
	// inline asm
	prmt.b32 %r7363, %r5484, %r5483, %r7;
	// inline asm
	ld.local.u32 	%r5338, [%rd8];
	ld.local.u32 	%r5339, [%rd7+12];
	// inline asm
	prmt.b32 %r7364, %r5338, %r5339, %r7;
	// inline asm
	ld.local.v2.u32 	{%r5485, %r5486}, [%rd7+8];
	// inline asm
	prmt.b32 %r7365, %r5486, %r5485, %r7;
	// inline asm
	ld.local.u32 	%r5346, [%rd7+8];
	ld.local.u32 	%r5347, [%rd7+4];
	// inline asm
	prmt.b32 %r5345, %r5346, %r5347, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r5345;
	ld.local.v2.u32 	{%r5487, %r5488}, [%rd7];
	// inline asm
	prmt.b32 %r5349, %r5488, %r5487, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r5349;
	ld.local.u32 	%r5354, [%rd7];
	ld.local.u32 	%r5355, [%rd6+12];
	// inline asm
	prmt.b32 %r5353, %r5354, %r5355, %r7;
	// inline asm
	st.local.u32 	[%rd8+4], %r5353;
	ld.local.v2.u32 	{%r5489, %r5490}, [%rd6+8];
	// inline asm
	prmt.b32 %r5357, %r5490, %r5489, %r7;
	// inline asm
	st.local.u32 	[%rd8], %r5357;
	ld.local.u32 	%r5362, [%rd6+8];
	ld.local.u32 	%r5363, [%rd6+4];
	// inline asm
	prmt.b32 %r5361, %r5362, %r5363, %r7;
	// inline asm
	st.local.u32 	[%rd7+12], %r5361;
	ld.local.v2.u32 	{%r5491, %r5492}, [%rd6];
	// inline asm
	prmt.b32 %r5365, %r5492, %r5491, %r7;
	// inline asm
	st.local.u32 	[%rd7+8], %r5365;
	ld.local.u32 	%r5370, [%rd6];
	ld.local.u32 	%r5371, [%rd5+12];
	// inline asm
	prmt.b32 %r5369, %r5370, %r5371, %r7;
	// inline asm
	st.local.u32 	[%rd7+4], %r5369;
	ld.local.v2.u32 	{%r5493, %r5494}, [%rd5+8];
	// inline asm
	prmt.b32 %r5373, %r5494, %r5493, %r7;
	// inline asm
	st.local.u32 	[%rd7], %r5373;
	ld.local.u32 	%r5378, [%rd5+8];
	ld.local.u32 	%r5379, [%rd5+4];
	// inline asm
	prmt.b32 %r5377, %r5378, %r5379, %r7;
	// inline asm
	st.local.u32 	[%rd6+12], %r5377;
	ld.local.v2.u32 	{%r5495, %r5496}, [%rd5];
	// inline asm
	prmt.b32 %r5381, %r5496, %r5495, %r7;
	// inline asm
	st.local.u32 	[%rd6+8], %r5381;
	ld.local.u32 	%r5386, [%rd5];
	ld.local.u32 	%r5387, [%rd4+12];
	// inline asm
	prmt.b32 %r5385, %r5386, %r5387, %r7;
	// inline asm
	st.local.u32 	[%rd6+4], %r5385;
	ld.local.v2.u32 	{%r5497, %r5498}, [%rd4+8];
	// inline asm
	prmt.b32 %r5389, %r5498, %r5497, %r7;
	// inline asm
	st.local.u32 	[%rd6], %r5389;
	ld.local.u32 	%r5394, [%rd4+8];
	ld.local.u32 	%r5395, [%rd4+4];
	// inline asm
	prmt.b32 %r5393, %r5394, %r5395, %r7;
	// inline asm
	st.local.u32 	[%rd5+12], %r5393;
	ld.local.v2.u32 	{%r5499, %r5500}, [%rd4];
	// inline asm
	prmt.b32 %r5397, %r5500, %r5499, %r7;
	// inline asm
	st.local.u32 	[%rd5+8], %r5397;
	ld.local.u32 	%r5402, [%rd4];
	ld.local.u32 	%r5403, [%rd3+12];
	// inline asm
	prmt.b32 %r5401, %r5402, %r5403, %r7;
	// inline asm
	st.local.u32 	[%rd5+4], %r5401;
	ld.local.v2.u32 	{%r5501, %r5502}, [%rd3+8];
	// inline asm
	prmt.b32 %r5405, %r5502, %r5501, %r7;
	// inline asm
	st.local.u32 	[%rd5], %r5405;
	ld.local.u32 	%r5410, [%rd3+8];
	ld.local.u32 	%r5411, [%rd3+4];
	// inline asm
	prmt.b32 %r5409, %r5410, %r5411, %r7;
	// inline asm
	st.local.u32 	[%rd4+12], %r5409;
	ld.local.v2.u32 	{%r5503, %r5504}, [%rd3];
	// inline asm
	prmt.b32 %r5413, %r5504, %r5503, %r7;
	// inline asm
	st.local.u32 	[%rd4+8], %r5413;
	ld.local.u32 	%r5418, [%rd3];
	ld.local.u32 	%r5419, [%rd2+12];
	// inline asm
	prmt.b32 %r5417, %r5418, %r5419, %r7;
	// inline asm
	st.local.u32 	[%rd4+4], %r5417;
	ld.local.v2.u32 	{%r5505, %r5506}, [%rd2+8];
	// inline asm
	prmt.b32 %r5421, %r5506, %r5505, %r7;
	// inline asm
	st.local.u32 	[%rd4], %r5421;
	ld.local.u32 	%r5426, [%rd2+8];
	ld.local.u32 	%r5427, [%rd2+4];
	// inline asm
	prmt.b32 %r5425, %r5426, %r5427, %r7;
	// inline asm
	st.local.u32 	[%rd3+12], %r5425;
	ld.local.v2.u32 	{%r5507, %r5508}, [%rd2];
	// inline asm
	prmt.b32 %r5429, %r5508, %r5507, %r7;
	// inline asm
	st.local.u32 	[%rd3+8], %r5429;
	ld.local.u32 	%r5434, [%rd2];
	ld.local.u32 	%r5435, [%rd1+12];
	// inline asm
	prmt.b32 %r5433, %r5434, %r5435, %r7;
	// inline asm
	st.local.u32 	[%rd3+4], %r5433;
	ld.local.v2.u32 	{%r5509, %r5510}, [%rd1+8];
	// inline asm
	prmt.b32 %r5437, %r5510, %r5509, %r7;
	// inline asm
	st.local.u32 	[%rd3], %r5437;
	ld.local.u32 	%r5442, [%rd1+8];
	ld.local.u32 	%r5443, [%rd1+4];
	// inline asm
	prmt.b32 %r5441, %r5442, %r5443, %r7;
	// inline asm
	st.local.u32 	[%rd2+12], %r5441;
	ld.local.v2.u32 	{%r5511, %r5512}, [%rd1];
	// inline asm
	prmt.b32 %r5445, %r5512, %r5511, %r7;
	// inline asm
	st.local.u32 	[%rd2+8], %r5445;
	ld.local.u32 	%r5450, [%rd1];
	// inline asm
	prmt.b32 %r5449, %r5450, %r7360, %r7;
	// inline asm
	st.local.v2.u32 	[%rd2], {%r7360, %r5449};
	st.local.v2.u32 	[%rd1+8], {%r7360, %r7360};
	mov.u64 	%rd214, 0;
	st.local.u64 	[%rd1], %rd214;
	mov.u32 	%r7361, %r7360;
	mov.u32 	%r7366, %r7360;
	mov.u32 	%r7367, %r7360;
	bra.uni 	BB2_81;

BB2_47:
	setp.eq.s32	%p20, %r673, 21;
	mov.u32 	%r7363, %r7362;
	mov.u32 	%r7364, %r7362;
	mov.u32 	%r7365, %r7362;
	mov.u32 	%r7366, %r7362;
	mov.u32 	%r7367, %r7362;
	mov.u32 	%r7368, %r7362;
	mov.u32 	%r7369, %r7362;
	mov.u32 	%r7370, %r7362;
	mov.u32 	%r7371, %r7362;
	mov.u32 	%r7372, %r7362;
	mov.u32 	%r7373, %r7362;
	mov.u32 	%r7374, %r7362;
	mov.u32 	%r7375, %r7362;
	mov.u32 	%r7376, %r7362;
	mov.u32 	%r7377, %r7362;
	mov.u32 	%r7378, %r7362;
	mov.u32 	%r7379, %r7362;
	mov.u32 	%r7380, %r7362;
	mov.u32 	%r7381, %r7362;
	mov.u32 	%r7382, %r7362;
	mov.u32 	%r7383, %r7362;
	mov.u32 	%r7384, %r7362;
	mov.u32 	%r7385, %r7362;
	mov.u32 	%r7386, %r7362;
	mov.u32 	%r7387, %r7362;
	mov.u32 	%r7388, %r7362;
	mov.u32 	%r7389, %r7362;
	mov.u32 	%r7390, %r7362;
	mov.u32 	%r7391, %r7362;
	mov.u32 	%r7392, %r7362;
	mov.u32 	%r7393, %r7362;
	@%p20 bra 	BB2_48;
	bra.uni 	BB2_89;

BB2_48:
	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7384, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2529, %r2530}, [%rd8+8];
	// inline asm
	prmt.b32 %r7385, %r2530, %r2529, %r7;
	// inline asm
	ld.local.u32 	%r2394, [%rd8+8];
	ld.local.u32 	%r2395, [%rd8+4];
	// inline asm
	prmt.b32 %r7378, %r2394, %r2395, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2531, %r2532}, [%rd8];
	// inline asm
	prmt.b32 %r7379, %r2532, %r2531, %r7;
	// inline asm
	ld.local.u32 	%r2402, [%rd8];
	ld.local.u32 	%r2403, [%rd7+12];
	// inline asm
	prmt.b32 %r7380, %r2402, %r2403, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2533, %r2534}, [%rd7+8];
	// inline asm
	prmt.b32 %r7381, %r2534, %r2533, %r7;
	// inline asm
	ld.local.u32 	%r2410, [%rd7+8];
	ld.local.u32 	%r2411, [%rd7+4];
	// inline asm
	prmt.b32 %r7374, %r2410, %r2411, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2535, %r2536}, [%rd7];
	// inline asm
	prmt.b32 %r7375, %r2536, %r2535, %r7;
	// inline asm
	ld.local.u32 	%r2418, [%rd7];
	ld.local.u32 	%r2419, [%rd6+12];
	// inline asm
	prmt.b32 %r7376, %r2418, %r2419, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2537, %r2538}, [%rd6+8];
	// inline asm
	prmt.b32 %r7377, %r2538, %r2537, %r7;
	// inline asm
	ld.local.u32 	%r2426, [%rd6+8];
	ld.local.u32 	%r2427, [%rd6+4];
	// inline asm
	prmt.b32 %r7370, %r2426, %r2427, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2539, %r2540}, [%rd6];
	// inline asm
	prmt.b32 %r7371, %r2540, %r2539, %r7;
	// inline asm
	ld.local.u32 	%r2434, [%rd6];
	ld.local.u32 	%r2435, [%rd5+12];
	// inline asm
	prmt.b32 %r7372, %r2434, %r2435, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2541, %r2542}, [%rd5+8];
	// inline asm
	prmt.b32 %r7373, %r2542, %r2541, %r7;
	// inline asm
	ld.local.u32 	%r2442, [%rd5+8];
	ld.local.u32 	%r2443, [%rd5+4];
	// inline asm
	prmt.b32 %r7366, %r2442, %r2443, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2543, %r2544}, [%rd5];
	// inline asm
	prmt.b32 %r7367, %r2544, %r2543, %r7;
	// inline asm
	ld.local.u32 	%r2450, [%rd5];
	ld.local.u32 	%r2451, [%rd4+12];
	// inline asm
	prmt.b32 %r7368, %r2450, %r2451, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2545, %r2546}, [%rd4+8];
	// inline asm
	prmt.b32 %r7369, %r2546, %r2545, %r7;
	// inline asm
	ld.local.u32 	%r2458, [%rd4+8];
	ld.local.u32 	%r2459, [%rd4+4];
	// inline asm
	prmt.b32 %r7362, %r2458, %r2459, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2547, %r2548}, [%rd4];
	// inline asm
	prmt.b32 %r7363, %r2548, %r2547, %r7;
	// inline asm
	ld.local.u32 	%r2466, [%rd4];
	ld.local.u32 	%r2467, [%rd3+12];
	// inline asm
	prmt.b32 %r7364, %r2466, %r2467, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2549, %r2550}, [%rd3+8];
	// inline asm
	prmt.b32 %r7365, %r2550, %r2549, %r7;
	// inline asm
	ld.local.u32 	%r2474, [%rd3+8];
	ld.local.u32 	%r2475, [%rd3+4];
	// inline asm
	prmt.b32 %r2473, %r2474, %r2475, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r2473;
	ld.local.v2.u32 	{%r2551, %r2552}, [%rd3];
	// inline asm
	prmt.b32 %r2477, %r2552, %r2551, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r2477;
	ld.local.u32 	%r2482, [%rd3];
	ld.local.u32 	%r2483, [%rd2+12];
	// inline asm
	prmt.b32 %r2481, %r2482, %r2483, %r7;
	// inline asm
	st.local.u32 	[%rd8+4], %r2481;
	ld.local.v2.u32 	{%r2553, %r2554}, [%rd2+8];
	// inline asm
	prmt.b32 %r2485, %r2554, %r2553, %r7;
	// inline asm
	st.local.u32 	[%rd8], %r2485;
	ld.local.u32 	%r2490, [%rd2+8];
	ld.local.u32 	%r2491, [%rd2+4];
	// inline asm
	prmt.b32 %r2489, %r2490, %r2491, %r7;
	// inline asm
	st.local.u32 	[%rd7+12], %r2489;
	ld.local.v2.u32 	{%r2555, %r2556}, [%rd2];
	// inline asm
	prmt.b32 %r2493, %r2556, %r2555, %r7;
	// inline asm
	st.local.u32 	[%rd7+8], %r2493;
	ld.local.u32 	%r2498, [%rd2];
	ld.local.u32 	%r2499, [%rd1+12];
	// inline asm
	prmt.b32 %r2497, %r2498, %r2499, %r7;
	// inline asm
	st.local.u32 	[%rd7+4], %r2497;
	ld.local.v2.u32 	{%r2557, %r2558}, [%rd1+8];
	// inline asm
	prmt.b32 %r2501, %r2558, %r2557, %r7;
	// inline asm
	st.local.u32 	[%rd7], %r2501;
	ld.local.u32 	%r2506, [%rd1+8];
	ld.local.u32 	%r2507, [%rd1+4];
	// inline asm
	prmt.b32 %r2505, %r2506, %r2507, %r7;
	// inline asm
	st.local.u32 	[%rd6+12], %r2505;
	ld.local.v2.u32 	{%r2559, %r2560}, [%rd1];
	// inline asm
	prmt.b32 %r2509, %r2560, %r2559, %r7;
	// inline asm
	st.local.u32 	[%rd6+8], %r2509;
	ld.local.u32 	%r2514, [%rd1];
	// inline asm
	prmt.b32 %r2513, %r2514, %r7360, %r7;
	// inline asm
	st.local.v2.u32 	[%rd6], {%r7360, %r2513};
	st.local.v4.u32 	[%rd5], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd4], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd3], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd2], {%r7360, %r7360, %r7360, %r7360};
	st.local.v2.u32 	[%rd1+8], {%r7360, %r7360};
	mov.u64 	%rd198, 0;
	st.local.u64 	[%rd1], %rd198;
	mov.u32 	%r7361, %r7360;
	mov.u32 	%r7382, %r7360;
	mov.u32 	%r7383, %r7360;
	bra.uni 	BB2_85;

BB2_31:
	setp.eq.s32	%p32, %r673, 13;
	mov.u32 	%r7363, %r7362;
	mov.u32 	%r7364, %r7362;
	mov.u32 	%r7365, %r7362;
	mov.u32 	%r7366, %r7362;
	mov.u32 	%r7367, %r7362;
	mov.u32 	%r7368, %r7362;
	mov.u32 	%r7369, %r7362;
	mov.u32 	%r7370, %r7362;
	mov.u32 	%r7371, %r7362;
	mov.u32 	%r7372, %r7362;
	mov.u32 	%r7373, %r7362;
	mov.u32 	%r7374, %r7362;
	mov.u32 	%r7375, %r7362;
	mov.u32 	%r7376, %r7362;
	mov.u32 	%r7377, %r7362;
	mov.u32 	%r7378, %r7362;
	mov.u32 	%r7379, %r7362;
	mov.u32 	%r7380, %r7362;
	mov.u32 	%r7381, %r7362;
	mov.u32 	%r7382, %r7362;
	mov.u32 	%r7383, %r7362;
	mov.u32 	%r7384, %r7362;
	mov.u32 	%r7385, %r7362;
	mov.u32 	%r7386, %r7362;
	mov.u32 	%r7387, %r7362;
	mov.u32 	%r7388, %r7362;
	mov.u32 	%r7389, %r7362;
	mov.u32 	%r7390, %r7362;
	mov.u32 	%r7391, %r7362;
	mov.u32 	%r7392, %r7362;
	mov.u32 	%r7393, %r7362;
	@%p32 bra 	BB2_32;
	bra.uni 	BB2_89;

BB2_32:
	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7376, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3973, %r3974}, [%rd8+8];
	// inline asm
	prmt.b32 %r7377, %r3974, %r3973, %r7;
	// inline asm
	ld.local.u32 	%r3830, [%rd8+8];
	ld.local.u32 	%r3831, [%rd8+4];
	// inline asm
	prmt.b32 %r7370, %r3830, %r3831, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3975, %r3976}, [%rd8];
	// inline asm
	prmt.b32 %r7371, %r3976, %r3975, %r7;
	// inline asm
	ld.local.u32 	%r3838, [%rd8];
	ld.local.u32 	%r3839, [%rd7+12];
	// inline asm
	prmt.b32 %r7372, %r3838, %r3839, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3977, %r3978}, [%rd7+8];
	// inline asm
	prmt.b32 %r7373, %r3978, %r3977, %r7;
	// inline asm
	ld.local.u32 	%r3846, [%rd7+8];
	ld.local.u32 	%r3847, [%rd7+4];
	// inline asm
	prmt.b32 %r7366, %r3846, %r3847, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3979, %r3980}, [%rd7];
	// inline asm
	prmt.b32 %r7367, %r3980, %r3979, %r7;
	// inline asm
	ld.local.u32 	%r3854, [%rd7];
	ld.local.u32 	%r3855, [%rd6+12];
	// inline asm
	prmt.b32 %r7368, %r3854, %r3855, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3981, %r3982}, [%rd6+8];
	// inline asm
	prmt.b32 %r7369, %r3982, %r3981, %r7;
	// inline asm
	ld.local.u32 	%r3862, [%rd6+8];
	ld.local.u32 	%r3863, [%rd6+4];
	// inline asm
	prmt.b32 %r7362, %r3862, %r3863, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3983, %r3984}, [%rd6];
	// inline asm
	prmt.b32 %r7363, %r3984, %r3983, %r7;
	// inline asm
	ld.local.u32 	%r3870, [%rd6];
	ld.local.u32 	%r3871, [%rd5+12];
	// inline asm
	prmt.b32 %r7364, %r3870, %r3871, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3985, %r3986}, [%rd5+8];
	// inline asm
	prmt.b32 %r7365, %r3986, %r3985, %r7;
	// inline asm
	ld.local.u32 	%r3878, [%rd5+8];
	ld.local.u32 	%r3879, [%rd5+4];
	// inline asm
	prmt.b32 %r3877, %r3878, %r3879, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r3877;
	ld.local.v2.u32 	{%r3987, %r3988}, [%rd5];
	// inline asm
	prmt.b32 %r3881, %r3988, %r3987, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r3881;
	ld.local.u32 	%r3886, [%rd5];
	ld.local.u32 	%r3887, [%rd4+12];
	// inline asm
	prmt.b32 %r3885, %r3886, %r3887, %r7;
	// inline asm
	st.local.u32 	[%rd8+4], %r3885;
	ld.local.v2.u32 	{%r3989, %r3990}, [%rd4+8];
	// inline asm
	prmt.b32 %r3889, %r3990, %r3989, %r7;
	// inline asm
	st.local.u32 	[%rd8], %r3889;
	ld.local.u32 	%r3894, [%rd4+8];
	ld.local.u32 	%r3895, [%rd4+4];
	// inline asm
	prmt.b32 %r3893, %r3894, %r3895, %r7;
	// inline asm
	st.local.u32 	[%rd7+12], %r3893;
	ld.local.v2.u32 	{%r3991, %r3992}, [%rd4];
	// inline asm
	prmt.b32 %r3897, %r3992, %r3991, %r7;
	// inline asm
	st.local.u32 	[%rd7+8], %r3897;
	ld.local.u32 	%r3902, [%rd4];
	ld.local.u32 	%r3903, [%rd3+12];
	// inline asm
	prmt.b32 %r3901, %r3902, %r3903, %r7;
	// inline asm
	st.local.u32 	[%rd7+4], %r3901;
	ld.local.v2.u32 	{%r3993, %r3994}, [%rd3+8];
	// inline asm
	prmt.b32 %r3905, %r3994, %r3993, %r7;
	// inline asm
	st.local.u32 	[%rd7], %r3905;
	ld.local.u32 	%r3910, [%rd3+8];
	ld.local.u32 	%r3911, [%rd3+4];
	// inline asm
	prmt.b32 %r3909, %r3910, %r3911, %r7;
	// inline asm
	st.local.u32 	[%rd6+12], %r3909;
	ld.local.v2.u32 	{%r3995, %r3996}, [%rd3];
	// inline asm
	prmt.b32 %r3913, %r3996, %r3995, %r7;
	// inline asm
	st.local.u32 	[%rd6+8], %r3913;
	ld.local.u32 	%r3918, [%rd3];
	ld.local.u32 	%r3919, [%rd2+12];
	// inline asm
	prmt.b32 %r3917, %r3918, %r3919, %r7;
	// inline asm
	st.local.u32 	[%rd6+4], %r3917;
	ld.local.v2.u32 	{%r3997, %r3998}, [%rd2+8];
	// inline asm
	prmt.b32 %r3921, %r3998, %r3997, %r7;
	// inline asm
	st.local.u32 	[%rd6], %r3921;
	ld.local.u32 	%r3926, [%rd2+8];
	ld.local.u32 	%r3927, [%rd2+4];
	// inline asm
	prmt.b32 %r3925, %r3926, %r3927, %r7;
	// inline asm
	st.local.u32 	[%rd5+12], %r3925;
	ld.local.v2.u32 	{%r3999, %r4000}, [%rd2];
	// inline asm
	prmt.b32 %r3929, %r4000, %r3999, %r7;
	// inline asm
	st.local.u32 	[%rd5+8], %r3929;
	ld.local.u32 	%r3934, [%rd2];
	ld.local.u32 	%r3935, [%rd1+12];
	// inline asm
	prmt.b32 %r3933, %r3934, %r3935, %r7;
	// inline asm
	st.local.u32 	[%rd5+4], %r3933;
	ld.local.v2.u32 	{%r4001, %r4002}, [%rd1+8];
	// inline asm
	prmt.b32 %r3937, %r4002, %r4001, %r7;
	// inline asm
	st.local.u32 	[%rd5], %r3937;
	ld.local.u32 	%r3942, [%rd1+8];
	ld.local.u32 	%r3943, [%rd1+4];
	// inline asm
	prmt.b32 %r3941, %r3942, %r3943, %r7;
	// inline asm
	st.local.u32 	[%rd4+12], %r3941;
	ld.local.v2.u32 	{%r4003, %r4004}, [%rd1];
	// inline asm
	prmt.b32 %r3945, %r4004, %r4003, %r7;
	// inline asm
	st.local.u32 	[%rd4+8], %r3945;
	ld.local.u32 	%r3950, [%rd1];
	// inline asm
	prmt.b32 %r3949, %r3950, %r7360, %r7;
	// inline asm
	st.local.v2.u32 	[%rd4], {%r7360, %r3949};
	st.local.v4.u32 	[%rd3], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd2], {%r7360, %r7360, %r7360, %r7360};
	st.local.v2.u32 	[%rd1+8], {%r7360, %r7360};
	mov.u64 	%rd206, 0;
	st.local.u64 	[%rd1], %rd206;
	mov.u32 	%r7361, %r7360;
	mov.u32 	%r7374, %r7360;
	mov.u32 	%r7375, %r7360;
	bra.uni 	BB2_83;

BB2_62:
	setp.eq.s32	%p9, %r673, 29;
	mov.u32 	%r7363, %r7362;
	mov.u32 	%r7364, %r7362;
	mov.u32 	%r7365, %r7362;
	mov.u32 	%r7366, %r7362;
	mov.u32 	%r7367, %r7362;
	mov.u32 	%r7368, %r7362;
	mov.u32 	%r7369, %r7362;
	mov.u32 	%r7370, %r7362;
	mov.u32 	%r7371, %r7362;
	mov.u32 	%r7372, %r7362;
	mov.u32 	%r7373, %r7362;
	mov.u32 	%r7374, %r7362;
	mov.u32 	%r7375, %r7362;
	mov.u32 	%r7376, %r7362;
	mov.u32 	%r7377, %r7362;
	mov.u32 	%r7378, %r7362;
	mov.u32 	%r7379, %r7362;
	mov.u32 	%r7380, %r7362;
	mov.u32 	%r7381, %r7362;
	mov.u32 	%r7382, %r7362;
	mov.u32 	%r7383, %r7362;
	mov.u32 	%r7384, %r7362;
	mov.u32 	%r7385, %r7362;
	mov.u32 	%r7386, %r7362;
	mov.u32 	%r7387, %r7362;
	mov.u32 	%r7388, %r7362;
	mov.u32 	%r7389, %r7362;
	mov.u32 	%r7390, %r7362;
	mov.u32 	%r7391, %r7362;
	mov.u32 	%r7392, %r7362;
	mov.u32 	%r7393, %r7362;
	@%p9 bra 	BB2_63;
	bra.uni 	BB2_89;

BB2_63:
	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7392, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1149, %r1150}, [%rd8+8];
	// inline asm
	prmt.b32 %r7393, %r1150, %r1149, %r7;
	// inline asm
	ld.local.u32 	%r1022, [%rd8+8];
	ld.local.u32 	%r1023, [%rd8+4];
	// inline asm
	prmt.b32 %r7386, %r1022, %r1023, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1151, %r1152}, [%rd8];
	// inline asm
	prmt.b32 %r7387, %r1152, %r1151, %r7;
	// inline asm
	ld.local.u32 	%r1030, [%rd8];
	ld.local.u32 	%r1031, [%rd7+12];
	// inline asm
	prmt.b32 %r7388, %r1030, %r1031, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1153, %r1154}, [%rd7+8];
	// inline asm
	prmt.b32 %r7389, %r1154, %r1153, %r7;
	// inline asm
	ld.local.u32 	%r1038, [%rd7+8];
	ld.local.u32 	%r1039, [%rd7+4];
	// inline asm
	prmt.b32 %r7382, %r1038, %r1039, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1155, %r1156}, [%rd7];
	// inline asm
	prmt.b32 %r7383, %r1156, %r1155, %r7;
	// inline asm
	ld.local.u32 	%r1046, [%rd7];
	ld.local.u32 	%r1047, [%rd6+12];
	// inline asm
	prmt.b32 %r7384, %r1046, %r1047, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1157, %r1158}, [%rd6+8];
	// inline asm
	prmt.b32 %r7385, %r1158, %r1157, %r7;
	// inline asm
	ld.local.u32 	%r1054, [%rd6+8];
	ld.local.u32 	%r1055, [%rd6+4];
	// inline asm
	prmt.b32 %r7378, %r1054, %r1055, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1159, %r1160}, [%rd6];
	// inline asm
	prmt.b32 %r7379, %r1160, %r1159, %r7;
	// inline asm
	ld.local.u32 	%r1062, [%rd6];
	ld.local.u32 	%r1063, [%rd5+12];
	// inline asm
	prmt.b32 %r7380, %r1062, %r1063, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1161, %r1162}, [%rd5+8];
	// inline asm
	prmt.b32 %r7381, %r1162, %r1161, %r7;
	// inline asm
	ld.local.u32 	%r1070, [%rd5+8];
	ld.local.u32 	%r1071, [%rd5+4];
	// inline asm
	prmt.b32 %r7374, %r1070, %r1071, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1163, %r1164}, [%rd5];
	// inline asm
	prmt.b32 %r7375, %r1164, %r1163, %r7;
	// inline asm
	ld.local.u32 	%r1078, [%rd5];
	ld.local.u32 	%r1079, [%rd4+12];
	// inline asm
	prmt.b32 %r7376, %r1078, %r1079, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1165, %r1166}, [%rd4+8];
	// inline asm
	prmt.b32 %r7377, %r1166, %r1165, %r7;
	// inline asm
	ld.local.u32 	%r1086, [%rd4+8];
	ld.local.u32 	%r1087, [%rd4+4];
	// inline asm
	prmt.b32 %r7370, %r1086, %r1087, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1167, %r1168}, [%rd4];
	// inline asm
	prmt.b32 %r7371, %r1168, %r1167, %r7;
	// inline asm
	ld.local.u32 	%r1094, [%rd4];
	ld.local.u32 	%r1095, [%rd3+12];
	// inline asm
	prmt.b32 %r7372, %r1094, %r1095, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1169, %r1170}, [%rd3+8];
	// inline asm
	prmt.b32 %r7373, %r1170, %r1169, %r7;
	// inline asm
	ld.local.u32 	%r1102, [%rd3+8];
	ld.local.u32 	%r1103, [%rd3+4];
	// inline asm
	prmt.b32 %r7366, %r1102, %r1103, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1171, %r1172}, [%rd3];
	// inline asm
	prmt.b32 %r7367, %r1172, %r1171, %r7;
	// inline asm
	ld.local.u32 	%r1110, [%rd3];
	ld.local.u32 	%r1111, [%rd2+12];
	// inline asm
	prmt.b32 %r7368, %r1110, %r1111, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1173, %r1174}, [%rd2+8];
	// inline asm
	prmt.b32 %r7369, %r1174, %r1173, %r7;
	// inline asm
	ld.local.u32 	%r1118, [%rd2+8];
	ld.local.u32 	%r1119, [%rd2+4];
	// inline asm
	prmt.b32 %r7362, %r1118, %r1119, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1175, %r1176}, [%rd2];
	// inline asm
	prmt.b32 %r7363, %r1176, %r1175, %r7;
	// inline asm
	ld.local.u32 	%r1126, [%rd2];
	ld.local.u32 	%r1127, [%rd1+12];
	// inline asm
	prmt.b32 %r7364, %r1126, %r1127, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1177, %r1178}, [%rd1+8];
	// inline asm
	prmt.b32 %r7365, %r1178, %r1177, %r7;
	// inline asm
	ld.local.u32 	%r1134, [%rd1+8];
	ld.local.u32 	%r1135, [%rd1+4];
	// inline asm
	prmt.b32 %r1133, %r1134, %r1135, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r1133;
	ld.local.v2.u32 	{%r1179, %r1180}, [%rd1];
	// inline asm
	prmt.b32 %r1137, %r1180, %r1179, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r1137;
	ld.local.u32 	%r1142, [%rd1];
	// inline asm
	prmt.b32 %r1141, %r1142, %r7360, %r7;
	// inline asm
	st.local.v2.u32 	[%rd8], {%r7360, %r1141};
	st.local.v4.u32 	[%rd7], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd6], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd5], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd4], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd3], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd2], {%r7360, %r7360, %r7360, %r7360};
	st.local.v2.u32 	[%rd1+8], {%r7360, %r7360};
	mov.u64 	%rd190, 0;
	st.local.u64 	[%rd1], %rd190;
	mov.u32 	%r7361, %r7360;
	mov.u32 	%r7390, %r7360;
	mov.u32 	%r7391, %r7360;
	bra.uni 	BB2_89;

BB2_11:
	setp.eq.s32	%p46, %r673, 3;
	mov.u32 	%r7363, %r7362;
	mov.u32 	%r7364, %r7362;
	mov.u32 	%r7365, %r7362;
	mov.u32 	%r7366, %r7362;
	mov.u32 	%r7367, %r7362;
	mov.u32 	%r7368, %r7362;
	mov.u32 	%r7369, %r7362;
	mov.u32 	%r7370, %r7362;
	mov.u32 	%r7371, %r7362;
	mov.u32 	%r7372, %r7362;
	mov.u32 	%r7373, %r7362;
	mov.u32 	%r7374, %r7362;
	mov.u32 	%r7375, %r7362;
	mov.u32 	%r7376, %r7362;
	mov.u32 	%r7377, %r7362;
	mov.u32 	%r7378, %r7362;
	mov.u32 	%r7379, %r7362;
	mov.u32 	%r7380, %r7362;
	mov.u32 	%r7381, %r7362;
	mov.u32 	%r7382, %r7362;
	mov.u32 	%r7383, %r7362;
	mov.u32 	%r7384, %r7362;
	mov.u32 	%r7385, %r7362;
	mov.u32 	%r7386, %r7362;
	mov.u32 	%r7387, %r7362;
	mov.u32 	%r7388, %r7362;
	mov.u32 	%r7389, %r7362;
	mov.u32 	%r7390, %r7362;
	mov.u32 	%r7391, %r7362;
	mov.u32 	%r7392, %r7362;
	mov.u32 	%r7393, %r7362;
	@%p46 bra 	BB2_12;
	bra.uni 	BB2_89;

BB2_12:
	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7362, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r5868, %r5869}, [%rd8+8];
	// inline asm
	prmt.b32 %r7363, %r5869, %r5868, %r7;
	// inline asm
	ld.local.u32 	%r5715, [%rd8+8];
	ld.local.u32 	%r5716, [%rd8+4];
	// inline asm
	prmt.b32 %r7364, %r5715, %r5716, %r7;
	// inline asm
	ld.local.v2.u32 	{%r5870, %r5871}, [%rd8];
	// inline asm
	prmt.b32 %r7365, %r5871, %r5870, %r7;
	// inline asm
	ld.local.u32 	%r5723, [%rd8];
	ld.local.u32 	%r5724, [%rd7+12];
	// inline asm
	prmt.b32 %r5722, %r5723, %r5724, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r5722;
	ld.local.v2.u32 	{%r5872, %r5873}, [%rd7+8];
	// inline asm
	prmt.b32 %r5726, %r5873, %r5872, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r5726;
	ld.local.u32 	%r5731, [%rd7+8];
	ld.local.u32 	%r5732, [%rd7+4];
	// inline asm
	prmt.b32 %r5730, %r5731, %r5732, %r7;
	// inline asm
	st.local.u32 	[%rd8+4], %r5730;
	ld.local.v2.u32 	{%r5874, %r5875}, [%rd7];
	// inline asm
	prmt.b32 %r5734, %r5875, %r5874, %r7;
	// inline asm
	st.local.u32 	[%rd8], %r5734;
	ld.local.u32 	%r5739, [%rd7];
	ld.local.u32 	%r5740, [%rd6+12];
	// inline asm
	prmt.b32 %r5738, %r5739, %r5740, %r7;
	// inline asm
	st.local.u32 	[%rd7+12], %r5738;
	ld.local.v2.u32 	{%r5876, %r5877}, [%rd6+8];
	// inline asm
	prmt.b32 %r5742, %r5877, %r5876, %r7;
	// inline asm
	st.local.u32 	[%rd7+8], %r5742;
	ld.local.u32 	%r5747, [%rd6+8];
	ld.local.u32 	%r5748, [%rd6+4];
	// inline asm
	prmt.b32 %r5746, %r5747, %r5748, %r7;
	// inline asm
	st.local.u32 	[%rd7+4], %r5746;
	ld.local.v2.u32 	{%r5878, %r5879}, [%rd6];
	// inline asm
	prmt.b32 %r5750, %r5879, %r5878, %r7;
	// inline asm
	st.local.u32 	[%rd7], %r5750;
	ld.local.u32 	%r5755, [%rd6];
	ld.local.u32 	%r5756, [%rd5+12];
	// inline asm
	prmt.b32 %r5754, %r5755, %r5756, %r7;
	// inline asm
	st.local.u32 	[%rd6+12], %r5754;
	ld.local.v2.u32 	{%r5880, %r5881}, [%rd5+8];
	// inline asm
	prmt.b32 %r5758, %r5881, %r5880, %r7;
	// inline asm
	st.local.u32 	[%rd6+8], %r5758;
	ld.local.u32 	%r5763, [%rd5+8];
	ld.local.u32 	%r5764, [%rd5+4];
	// inline asm
	prmt.b32 %r5762, %r5763, %r5764, %r7;
	// inline asm
	st.local.u32 	[%rd6+4], %r5762;
	ld.local.v2.u32 	{%r5882, %r5883}, [%rd5];
	// inline asm
	prmt.b32 %r5766, %r5883, %r5882, %r7;
	// inline asm
	st.local.u32 	[%rd6], %r5766;
	ld.local.u32 	%r5771, [%rd5];
	ld.local.u32 	%r5772, [%rd4+12];
	// inline asm
	prmt.b32 %r5770, %r5771, %r5772, %r7;
	// inline asm
	st.local.u32 	[%rd5+12], %r5770;
	ld.local.v2.u32 	{%r5884, %r5885}, [%rd4+8];
	// inline asm
	prmt.b32 %r5774, %r5885, %r5884, %r7;
	// inline asm
	st.local.u32 	[%rd5+8], %r5774;
	ld.local.u32 	%r5779, [%rd4+8];
	ld.local.u32 	%r5780, [%rd4+4];
	// inline asm
	prmt.b32 %r5778, %r5779, %r5780, %r7;
	// inline asm
	st.local.u32 	[%rd5+4], %r5778;
	ld.local.v2.u32 	{%r5886, %r5887}, [%rd4];
	// inline asm
	prmt.b32 %r5782, %r5887, %r5886, %r7;
	// inline asm
	st.local.u32 	[%rd5], %r5782;
	ld.local.u32 	%r5787, [%rd4];
	ld.local.u32 	%r5788, [%rd3+12];
	// inline asm
	prmt.b32 %r5786, %r5787, %r5788, %r7;
	// inline asm
	st.local.u32 	[%rd4+12], %r5786;
	ld.local.v2.u32 	{%r5888, %r5889}, [%rd3+8];
	// inline asm
	prmt.b32 %r5790, %r5889, %r5888, %r7;
	// inline asm
	st.local.u32 	[%rd4+8], %r5790;
	ld.local.u32 	%r5795, [%rd3+8];
	ld.local.u32 	%r5796, [%rd3+4];
	// inline asm
	prmt.b32 %r5794, %r5795, %r5796, %r7;
	// inline asm
	st.local.u32 	[%rd4+4], %r5794;
	ld.local.v2.u32 	{%r5890, %r5891}, [%rd3];
	// inline asm
	prmt.b32 %r5798, %r5891, %r5890, %r7;
	// inline asm
	st.local.u32 	[%rd4], %r5798;
	ld.local.u32 	%r5803, [%rd3];
	ld.local.u32 	%r5804, [%rd2+12];
	// inline asm
	prmt.b32 %r5802, %r5803, %r5804, %r7;
	// inline asm
	st.local.u32 	[%rd3+12], %r5802;
	ld.local.v2.u32 	{%r5892, %r5893}, [%rd2+8];
	// inline asm
	prmt.b32 %r5806, %r5893, %r5892, %r7;
	// inline asm
	st.local.u32 	[%rd3+8], %r5806;
	ld.local.u32 	%r5811, [%rd2+8];
	ld.local.u32 	%r5812, [%rd2+4];
	// inline asm
	prmt.b32 %r5810, %r5811, %r5812, %r7;
	// inline asm
	st.local.u32 	[%rd3+4], %r5810;
	ld.local.v2.u32 	{%r5894, %r5895}, [%rd2];
	// inline asm
	prmt.b32 %r5814, %r5895, %r5894, %r7;
	// inline asm
	st.local.u32 	[%rd3], %r5814;
	ld.local.u32 	%r5819, [%rd2];
	ld.local.u32 	%r5820, [%rd1+12];
	// inline asm
	prmt.b32 %r5818, %r5819, %r5820, %r7;
	// inline asm
	st.local.u32 	[%rd2+12], %r5818;
	ld.local.v2.u32 	{%r5896, %r5897}, [%rd1+8];
	// inline asm
	prmt.b32 %r5822, %r5897, %r5896, %r7;
	// inline asm
	st.local.u32 	[%rd2+8], %r5822;
	ld.local.u32 	%r5827, [%rd1+8];
	ld.local.u32 	%r5828, [%rd1+4];
	// inline asm
	prmt.b32 %r5826, %r5827, %r5828, %r7;
	// inline asm
	st.local.u32 	[%rd2+4], %r5826;
	ld.local.v2.u32 	{%r5898, %r5899}, [%rd1];
	// inline asm
	prmt.b32 %r5830, %r5899, %r5898, %r7;
	// inline asm
	st.local.u32 	[%rd2], %r5830;
	ld.local.u32 	%r5835, [%rd1];
	// inline asm
	prmt.b32 %r5834, %r5835, %r7360, %r7;
	// inline asm
	st.local.v2.u32 	[%rd1+8], {%r7360, %r5834};
	mov.u64 	%rd216, 0;
	st.local.u64 	[%rd1], %rd216;
	mov.u32 	%r7361, %r7360;

BB2_13:
	mov.u32 	%r7366, %r7360;
	mov.u32 	%r7367, %r7360;
	mov.u32 	%r7368, %r7360;
	mov.u32 	%r7369, %r7360;
	bra.uni 	BB2_81;

BB2_43:
	setp.eq.s32	%p23, %r673, 19;
	mov.u32 	%r7363, %r7362;
	mov.u32 	%r7364, %r7362;
	mov.u32 	%r7365, %r7362;
	mov.u32 	%r7366, %r7362;
	mov.u32 	%r7367, %r7362;
	mov.u32 	%r7368, %r7362;
	mov.u32 	%r7369, %r7362;
	mov.u32 	%r7370, %r7362;
	mov.u32 	%r7371, %r7362;
	mov.u32 	%r7372, %r7362;
	mov.u32 	%r7373, %r7362;
	mov.u32 	%r7374, %r7362;
	mov.u32 	%r7375, %r7362;
	mov.u32 	%r7376, %r7362;
	mov.u32 	%r7377, %r7362;
	mov.u32 	%r7378, %r7362;
	mov.u32 	%r7379, %r7362;
	mov.u32 	%r7380, %r7362;
	mov.u32 	%r7381, %r7362;
	mov.u32 	%r7382, %r7362;
	mov.u32 	%r7383, %r7362;
	mov.u32 	%r7384, %r7362;
	mov.u32 	%r7385, %r7362;
	mov.u32 	%r7386, %r7362;
	mov.u32 	%r7387, %r7362;
	mov.u32 	%r7388, %r7362;
	mov.u32 	%r7389, %r7362;
	mov.u32 	%r7390, %r7362;
	mov.u32 	%r7391, %r7362;
	mov.u32 	%r7392, %r7362;
	mov.u32 	%r7393, %r7362;
	@%p23 bra 	BB2_44;
	bra.uni 	BB2_89;

BB2_44:
	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7378, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2884, %r2885}, [%rd8+8];
	// inline asm
	prmt.b32 %r7379, %r2885, %r2884, %r7;
	// inline asm
	ld.local.u32 	%r2747, [%rd8+8];
	ld.local.u32 	%r2748, [%rd8+4];
	// inline asm
	prmt.b32 %r7380, %r2747, %r2748, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2886, %r2887}, [%rd8];
	// inline asm
	prmt.b32 %r7381, %r2887, %r2886, %r7;
	// inline asm
	ld.local.u32 	%r2755, [%rd8];
	ld.local.u32 	%r2756, [%rd7+12];
	// inline asm
	prmt.b32 %r7374, %r2755, %r2756, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2888, %r2889}, [%rd7+8];
	// inline asm
	prmt.b32 %r7375, %r2889, %r2888, %r7;
	// inline asm
	ld.local.u32 	%r2763, [%rd7+8];
	ld.local.u32 	%r2764, [%rd7+4];
	// inline asm
	prmt.b32 %r7376, %r2763, %r2764, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2890, %r2891}, [%rd7];
	// inline asm
	prmt.b32 %r7377, %r2891, %r2890, %r7;
	// inline asm
	ld.local.u32 	%r2771, [%rd7];
	ld.local.u32 	%r2772, [%rd6+12];
	// inline asm
	prmt.b32 %r7370, %r2771, %r2772, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2892, %r2893}, [%rd6+8];
	// inline asm
	prmt.b32 %r7371, %r2893, %r2892, %r7;
	// inline asm
	ld.local.u32 	%r2779, [%rd6+8];
	ld.local.u32 	%r2780, [%rd6+4];
	// inline asm
	prmt.b32 %r7372, %r2779, %r2780, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2894, %r2895}, [%rd6];
	// inline asm
	prmt.b32 %r7373, %r2895, %r2894, %r7;
	// inline asm
	ld.local.u32 	%r2787, [%rd6];
	ld.local.u32 	%r2788, [%rd5+12];
	// inline asm
	prmt.b32 %r7366, %r2787, %r2788, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2896, %r2897}, [%rd5+8];
	// inline asm
	prmt.b32 %r7367, %r2897, %r2896, %r7;
	// inline asm
	ld.local.u32 	%r2795, [%rd5+8];
	ld.local.u32 	%r2796, [%rd5+4];
	// inline asm
	prmt.b32 %r7368, %r2795, %r2796, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2898, %r2899}, [%rd5];
	// inline asm
	prmt.b32 %r7369, %r2899, %r2898, %r7;
	// inline asm
	ld.local.u32 	%r2803, [%rd5];
	ld.local.u32 	%r2804, [%rd4+12];
	// inline asm
	prmt.b32 %r7362, %r2803, %r2804, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2900, %r2901}, [%rd4+8];
	// inline asm
	prmt.b32 %r7363, %r2901, %r2900, %r7;
	// inline asm
	ld.local.u32 	%r2811, [%rd4+8];
	ld.local.u32 	%r2812, [%rd4+4];
	// inline asm
	prmt.b32 %r7364, %r2811, %r2812, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2902, %r2903}, [%rd4];
	// inline asm
	prmt.b32 %r7365, %r2903, %r2902, %r7;
	// inline asm
	ld.local.u32 	%r2819, [%rd4];
	ld.local.u32 	%r2820, [%rd3+12];
	// inline asm
	prmt.b32 %r2818, %r2819, %r2820, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r2818;
	ld.local.v2.u32 	{%r2904, %r2905}, [%rd3+8];
	// inline asm
	prmt.b32 %r2822, %r2905, %r2904, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r2822;
	ld.local.u32 	%r2827, [%rd3+8];
	ld.local.u32 	%r2828, [%rd3+4];
	// inline asm
	prmt.b32 %r2826, %r2827, %r2828, %r7;
	// inline asm
	st.local.u32 	[%rd8+4], %r2826;
	ld.local.v2.u32 	{%r2906, %r2907}, [%rd3];
	// inline asm
	prmt.b32 %r2830, %r2907, %r2906, %r7;
	// inline asm
	st.local.u32 	[%rd8], %r2830;
	ld.local.u32 	%r2835, [%rd3];
	ld.local.u32 	%r2836, [%rd2+12];
	// inline asm
	prmt.b32 %r2834, %r2835, %r2836, %r7;
	// inline asm
	st.local.u32 	[%rd7+12], %r2834;
	ld.local.v2.u32 	{%r2908, %r2909}, [%rd2+8];
	// inline asm
	prmt.b32 %r2838, %r2909, %r2908, %r7;
	// inline asm
	st.local.u32 	[%rd7+8], %r2838;
	ld.local.u32 	%r2843, [%rd2+8];
	ld.local.u32 	%r2844, [%rd2+4];
	// inline asm
	prmt.b32 %r2842, %r2843, %r2844, %r7;
	// inline asm
	st.local.u32 	[%rd7+4], %r2842;
	ld.local.v2.u32 	{%r2910, %r2911}, [%rd2];
	// inline asm
	prmt.b32 %r2846, %r2911, %r2910, %r7;
	// inline asm
	st.local.u32 	[%rd7], %r2846;
	ld.local.u32 	%r2851, [%rd2];
	ld.local.u32 	%r2852, [%rd1+12];
	// inline asm
	prmt.b32 %r2850, %r2851, %r2852, %r7;
	// inline asm
	st.local.u32 	[%rd6+12], %r2850;
	ld.local.v2.u32 	{%r2912, %r2913}, [%rd1+8];
	// inline asm
	prmt.b32 %r2854, %r2913, %r2912, %r7;
	// inline asm
	st.local.u32 	[%rd6+8], %r2854;
	ld.local.u32 	%r2859, [%rd1+8];
	ld.local.u32 	%r2860, [%rd1+4];
	// inline asm
	prmt.b32 %r2858, %r2859, %r2860, %r7;
	// inline asm
	st.local.u32 	[%rd6+4], %r2858;
	ld.local.v2.u32 	{%r2914, %r2915}, [%rd1];
	// inline asm
	prmt.b32 %r2862, %r2915, %r2914, %r7;
	// inline asm
	st.local.u32 	[%rd6], %r2862;
	ld.local.u32 	%r2867, [%rd1];
	// inline asm
	prmt.b32 %r2866, %r2867, %r7360, %r7;
	// inline asm
	st.local.v4.u32 	[%rd5], {%r7360, %r7360, %r7360, %r2866};
	st.local.v4.u32 	[%rd4], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd3], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd2], {%r7360, %r7360, %r7360, %r7360};
	st.local.v2.u32 	[%rd1+8], {%r7360, %r7360};
	mov.u64 	%rd200, 0;
	st.local.u64 	[%rd1], %rd200;
	mov.u32 	%r7361, %r7360;
	bra.uni 	BB2_84;

BB2_27:
	setp.eq.s32	%p35, %r673, 11;
	mov.u32 	%r7363, %r7362;
	mov.u32 	%r7364, %r7362;
	mov.u32 	%r7365, %r7362;
	mov.u32 	%r7366, %r7362;
	mov.u32 	%r7367, %r7362;
	mov.u32 	%r7368, %r7362;
	mov.u32 	%r7369, %r7362;
	mov.u32 	%r7370, %r7362;
	mov.u32 	%r7371, %r7362;
	mov.u32 	%r7372, %r7362;
	mov.u32 	%r7373, %r7362;
	mov.u32 	%r7374, %r7362;
	mov.u32 	%r7375, %r7362;
	mov.u32 	%r7376, %r7362;
	mov.u32 	%r7377, %r7362;
	mov.u32 	%r7378, %r7362;
	mov.u32 	%r7379, %r7362;
	mov.u32 	%r7380, %r7362;
	mov.u32 	%r7381, %r7362;
	mov.u32 	%r7382, %r7362;
	mov.u32 	%r7383, %r7362;
	mov.u32 	%r7384, %r7362;
	mov.u32 	%r7385, %r7362;
	mov.u32 	%r7386, %r7362;
	mov.u32 	%r7387, %r7362;
	mov.u32 	%r7388, %r7362;
	mov.u32 	%r7389, %r7362;
	mov.u32 	%r7390, %r7362;
	mov.u32 	%r7391, %r7362;
	mov.u32 	%r7392, %r7362;
	mov.u32 	%r7393, %r7362;
	@%p35 bra 	BB2_28;
	bra.uni 	BB2_89;

BB2_28:
	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7370, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r4344, %r4345}, [%rd8+8];
	// inline asm
	prmt.b32 %r7371, %r4345, %r4344, %r7;
	// inline asm
	ld.local.u32 	%r4199, [%rd8+8];
	ld.local.u32 	%r4200, [%rd8+4];
	// inline asm
	prmt.b32 %r7372, %r4199, %r4200, %r7;
	// inline asm
	ld.local.v2.u32 	{%r4346, %r4347}, [%rd8];
	// inline asm
	prmt.b32 %r7373, %r4347, %r4346, %r7;
	// inline asm
	ld.local.u32 	%r4207, [%rd8];
	ld.local.u32 	%r4208, [%rd7+12];
	// inline asm
	prmt.b32 %r7366, %r4207, %r4208, %r7;
	// inline asm
	ld.local.v2.u32 	{%r4348, %r4349}, [%rd7+8];
	// inline asm
	prmt.b32 %r7367, %r4349, %r4348, %r7;
	// inline asm
	ld.local.u32 	%r4215, [%rd7+8];
	ld.local.u32 	%r4216, [%rd7+4];
	// inline asm
	prmt.b32 %r7368, %r4215, %r4216, %r7;
	// inline asm
	ld.local.v2.u32 	{%r4350, %r4351}, [%rd7];
	// inline asm
	prmt.b32 %r7369, %r4351, %r4350, %r7;
	// inline asm
	ld.local.u32 	%r4223, [%rd7];
	ld.local.u32 	%r4224, [%rd6+12];
	// inline asm
	prmt.b32 %r7362, %r4223, %r4224, %r7;
	// inline asm
	ld.local.v2.u32 	{%r4352, %r4353}, [%rd6+8];
	// inline asm
	prmt.b32 %r7363, %r4353, %r4352, %r7;
	// inline asm
	ld.local.u32 	%r4231, [%rd6+8];
	ld.local.u32 	%r4232, [%rd6+4];
	// inline asm
	prmt.b32 %r7364, %r4231, %r4232, %r7;
	// inline asm
	ld.local.v2.u32 	{%r4354, %r4355}, [%rd6];
	// inline asm
	prmt.b32 %r7365, %r4355, %r4354, %r7;
	// inline asm
	ld.local.u32 	%r4239, [%rd6];
	ld.local.u32 	%r4240, [%rd5+12];
	// inline asm
	prmt.b32 %r4238, %r4239, %r4240, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r4238;
	ld.local.v2.u32 	{%r4356, %r4357}, [%rd5+8];
	// inline asm
	prmt.b32 %r4242, %r4357, %r4356, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r4242;
	ld.local.u32 	%r4247, [%rd5+8];
	ld.local.u32 	%r4248, [%rd5+4];
	// inline asm
	prmt.b32 %r4246, %r4247, %r4248, %r7;
	// inline asm
	st.local.u32 	[%rd8+4], %r4246;
	ld.local.v2.u32 	{%r4358, %r4359}, [%rd5];
	// inline asm
	prmt.b32 %r4250, %r4359, %r4358, %r7;
	// inline asm
	st.local.u32 	[%rd8], %r4250;
	ld.local.u32 	%r4255, [%rd5];
	ld.local.u32 	%r4256, [%rd4+12];
	// inline asm
	prmt.b32 %r4254, %r4255, %r4256, %r7;
	// inline asm
	st.local.u32 	[%rd7+12], %r4254;
	ld.local.v2.u32 	{%r4360, %r4361}, [%rd4+8];
	// inline asm
	prmt.b32 %r4258, %r4361, %r4360, %r7;
	// inline asm
	st.local.u32 	[%rd7+8], %r4258;
	ld.local.u32 	%r4263, [%rd4+8];
	ld.local.u32 	%r4264, [%rd4+4];
	// inline asm
	prmt.b32 %r4262, %r4263, %r4264, %r7;
	// inline asm
	st.local.u32 	[%rd7+4], %r4262;
	ld.local.v2.u32 	{%r4362, %r4363}, [%rd4];
	// inline asm
	prmt.b32 %r4266, %r4363, %r4362, %r7;
	// inline asm
	st.local.u32 	[%rd7], %r4266;
	ld.local.u32 	%r4271, [%rd4];
	ld.local.u32 	%r4272, [%rd3+12];
	// inline asm
	prmt.b32 %r4270, %r4271, %r4272, %r7;
	// inline asm
	st.local.u32 	[%rd6+12], %r4270;
	ld.local.v2.u32 	{%r4364, %r4365}, [%rd3+8];
	// inline asm
	prmt.b32 %r4274, %r4365, %r4364, %r7;
	// inline asm
	st.local.u32 	[%rd6+8], %r4274;
	ld.local.u32 	%r4279, [%rd3+8];
	ld.local.u32 	%r4280, [%rd3+4];
	// inline asm
	prmt.b32 %r4278, %r4279, %r4280, %r7;
	// inline asm
	st.local.u32 	[%rd6+4], %r4278;
	ld.local.v2.u32 	{%r4366, %r4367}, [%rd3];
	// inline asm
	prmt.b32 %r4282, %r4367, %r4366, %r7;
	// inline asm
	st.local.u32 	[%rd6], %r4282;
	ld.local.u32 	%r4287, [%rd3];
	ld.local.u32 	%r4288, [%rd2+12];
	// inline asm
	prmt.b32 %r4286, %r4287, %r4288, %r7;
	// inline asm
	st.local.u32 	[%rd5+12], %r4286;
	ld.local.v2.u32 	{%r4368, %r4369}, [%rd2+8];
	// inline asm
	prmt.b32 %r4290, %r4369, %r4368, %r7;
	// inline asm
	st.local.u32 	[%rd5+8], %r4290;
	ld.local.u32 	%r4295, [%rd2+8];
	ld.local.u32 	%r4296, [%rd2+4];
	// inline asm
	prmt.b32 %r4294, %r4295, %r4296, %r7;
	// inline asm
	st.local.u32 	[%rd5+4], %r4294;
	ld.local.v2.u32 	{%r4370, %r4371}, [%rd2];
	// inline asm
	prmt.b32 %r4298, %r4371, %r4370, %r7;
	// inline asm
	st.local.u32 	[%rd5], %r4298;
	ld.local.u32 	%r4303, [%rd2];
	ld.local.u32 	%r4304, [%rd1+12];
	// inline asm
	prmt.b32 %r4302, %r4303, %r4304, %r7;
	// inline asm
	st.local.u32 	[%rd4+12], %r4302;
	ld.local.v2.u32 	{%r4372, %r4373}, [%rd1+8];
	// inline asm
	prmt.b32 %r4306, %r4373, %r4372, %r7;
	// inline asm
	st.local.u32 	[%rd4+8], %r4306;
	ld.local.u32 	%r4311, [%rd1+8];
	ld.local.u32 	%r4312, [%rd1+4];
	// inline asm
	prmt.b32 %r4310, %r4311, %r4312, %r7;
	// inline asm
	st.local.u32 	[%rd4+4], %r4310;
	ld.local.v2.u32 	{%r4374, %r4375}, [%rd1];
	// inline asm
	prmt.b32 %r4314, %r4375, %r4374, %r7;
	// inline asm
	st.local.u32 	[%rd4], %r4314;
	ld.local.u32 	%r4319, [%rd1];
	// inline asm
	prmt.b32 %r4318, %r4319, %r7360, %r7;
	// inline asm
	st.local.v4.u32 	[%rd3], {%r7360, %r7360, %r7360, %r4318};
	st.local.v4.u32 	[%rd2], {%r7360, %r7360, %r7360, %r7360};
	st.local.v2.u32 	[%rd1+8], {%r7360, %r7360};
	mov.u64 	%rd208, 0;
	st.local.u64 	[%rd1], %rd208;
	mov.u32 	%r7361, %r7360;
	bra.uni 	BB2_82;

BB2_58:
	setp.eq.s32	%p12, %r673, 27;
	mov.u32 	%r7363, %r7362;
	mov.u32 	%r7364, %r7362;
	mov.u32 	%r7365, %r7362;
	mov.u32 	%r7366, %r7362;
	mov.u32 	%r7367, %r7362;
	mov.u32 	%r7368, %r7362;
	mov.u32 	%r7369, %r7362;
	mov.u32 	%r7370, %r7362;
	mov.u32 	%r7371, %r7362;
	mov.u32 	%r7372, %r7362;
	mov.u32 	%r7373, %r7362;
	mov.u32 	%r7374, %r7362;
	mov.u32 	%r7375, %r7362;
	mov.u32 	%r7376, %r7362;
	mov.u32 	%r7377, %r7362;
	mov.u32 	%r7378, %r7362;
	mov.u32 	%r7379, %r7362;
	mov.u32 	%r7380, %r7362;
	mov.u32 	%r7381, %r7362;
	mov.u32 	%r7382, %r7362;
	mov.u32 	%r7383, %r7362;
	mov.u32 	%r7384, %r7362;
	mov.u32 	%r7385, %r7362;
	mov.u32 	%r7386, %r7362;
	mov.u32 	%r7387, %r7362;
	mov.u32 	%r7388, %r7362;
	mov.u32 	%r7389, %r7362;
	mov.u32 	%r7390, %r7362;
	mov.u32 	%r7391, %r7362;
	mov.u32 	%r7392, %r7362;
	mov.u32 	%r7393, %r7362;
	@%p12 bra 	BB2_59;
	bra.uni 	BB2_89;

BB2_59:
	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7386, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1488, %r1489}, [%rd8+8];
	// inline asm
	prmt.b32 %r7387, %r1489, %r1488, %r7;
	// inline asm
	ld.local.u32 	%r1359, [%rd8+8];
	ld.local.u32 	%r1360, [%rd8+4];
	// inline asm
	prmt.b32 %r7388, %r1359, %r1360, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1490, %r1491}, [%rd8];
	// inline asm
	prmt.b32 %r7389, %r1491, %r1490, %r7;
	// inline asm
	ld.local.u32 	%r1367, [%rd8];
	ld.local.u32 	%r1368, [%rd7+12];
	// inline asm
	prmt.b32 %r7382, %r1367, %r1368, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1492, %r1493}, [%rd7+8];
	// inline asm
	prmt.b32 %r7383, %r1493, %r1492, %r7;
	// inline asm
	ld.local.u32 	%r1375, [%rd7+8];
	ld.local.u32 	%r1376, [%rd7+4];
	// inline asm
	prmt.b32 %r7384, %r1375, %r1376, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1494, %r1495}, [%rd7];
	// inline asm
	prmt.b32 %r7385, %r1495, %r1494, %r7;
	// inline asm
	ld.local.u32 	%r1383, [%rd7];
	ld.local.u32 	%r1384, [%rd6+12];
	// inline asm
	prmt.b32 %r7378, %r1383, %r1384, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1496, %r1497}, [%rd6+8];
	// inline asm
	prmt.b32 %r7379, %r1497, %r1496, %r7;
	// inline asm
	ld.local.u32 	%r1391, [%rd6+8];
	ld.local.u32 	%r1392, [%rd6+4];
	// inline asm
	prmt.b32 %r7380, %r1391, %r1392, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1498, %r1499}, [%rd6];
	// inline asm
	prmt.b32 %r7381, %r1499, %r1498, %r7;
	// inline asm
	ld.local.u32 	%r1399, [%rd6];
	ld.local.u32 	%r1400, [%rd5+12];
	// inline asm
	prmt.b32 %r7374, %r1399, %r1400, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1500, %r1501}, [%rd5+8];
	// inline asm
	prmt.b32 %r7375, %r1501, %r1500, %r7;
	// inline asm
	ld.local.u32 	%r1407, [%rd5+8];
	ld.local.u32 	%r1408, [%rd5+4];
	// inline asm
	prmt.b32 %r7376, %r1407, %r1408, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1502, %r1503}, [%rd5];
	// inline asm
	prmt.b32 %r7377, %r1503, %r1502, %r7;
	// inline asm
	ld.local.u32 	%r1415, [%rd5];
	ld.local.u32 	%r1416, [%rd4+12];
	// inline asm
	prmt.b32 %r7370, %r1415, %r1416, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1504, %r1505}, [%rd4+8];
	// inline asm
	prmt.b32 %r7371, %r1505, %r1504, %r7;
	// inline asm
	ld.local.u32 	%r1423, [%rd4+8];
	ld.local.u32 	%r1424, [%rd4+4];
	// inline asm
	prmt.b32 %r7372, %r1423, %r1424, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1506, %r1507}, [%rd4];
	// inline asm
	prmt.b32 %r7373, %r1507, %r1506, %r7;
	// inline asm
	ld.local.u32 	%r1431, [%rd4];
	ld.local.u32 	%r1432, [%rd3+12];
	// inline asm
	prmt.b32 %r7366, %r1431, %r1432, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1508, %r1509}, [%rd3+8];
	// inline asm
	prmt.b32 %r7367, %r1509, %r1508, %r7;
	// inline asm
	ld.local.u32 	%r1439, [%rd3+8];
	ld.local.u32 	%r1440, [%rd3+4];
	// inline asm
	prmt.b32 %r7368, %r1439, %r1440, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1510, %r1511}, [%rd3];
	// inline asm
	prmt.b32 %r7369, %r1511, %r1510, %r7;
	// inline asm
	ld.local.u32 	%r1447, [%rd3];
	ld.local.u32 	%r1448, [%rd2+12];
	// inline asm
	prmt.b32 %r7362, %r1447, %r1448, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1512, %r1513}, [%rd2+8];
	// inline asm
	prmt.b32 %r7363, %r1513, %r1512, %r7;
	// inline asm
	ld.local.u32 	%r1455, [%rd2+8];
	ld.local.u32 	%r1456, [%rd2+4];
	// inline asm
	prmt.b32 %r7364, %r1455, %r1456, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1514, %r1515}, [%rd2];
	// inline asm
	prmt.b32 %r7365, %r1515, %r1514, %r7;
	// inline asm
	ld.local.u32 	%r1463, [%rd2];
	ld.local.u32 	%r1464, [%rd1+12];
	// inline asm
	prmt.b32 %r1462, %r1463, %r1464, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r1462;
	ld.local.v2.u32 	{%r1516, %r1517}, [%rd1+8];
	// inline asm
	prmt.b32 %r1466, %r1517, %r1516, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r1466;
	ld.local.u32 	%r1471, [%rd1+8];
	ld.local.u32 	%r1472, [%rd1+4];
	// inline asm
	prmt.b32 %r1470, %r1471, %r1472, %r7;
	// inline asm
	st.local.u32 	[%rd8+4], %r1470;
	ld.local.v2.u32 	{%r1518, %r1519}, [%rd1];
	// inline asm
	prmt.b32 %r1474, %r1519, %r1518, %r7;
	// inline asm
	st.local.u32 	[%rd8], %r1474;
	ld.local.u32 	%r1479, [%rd1];
	// inline asm
	prmt.b32 %r1478, %r1479, %r7360, %r7;
	// inline asm
	st.local.v4.u32 	[%rd7], {%r7360, %r7360, %r7360, %r1478};
	st.local.v4.u32 	[%rd6], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd5], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd4], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd3], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd2], {%r7360, %r7360, %r7360, %r7360};
	st.local.v2.u32 	[%rd1+8], {%r7360, %r7360};
	mov.u64 	%rd192, 0;
	st.local.u64 	[%rd1], %rd192;
	mov.u32 	%r7361, %r7360;
	bra.uni 	BB2_86;

BB2_19:
	setp.eq.s32	%p41, %r673, 7;
	mov.u32 	%r7363, %r7362;
	mov.u32 	%r7364, %r7362;
	mov.u32 	%r7365, %r7362;
	mov.u32 	%r7366, %r7362;
	mov.u32 	%r7367, %r7362;
	mov.u32 	%r7368, %r7362;
	mov.u32 	%r7369, %r7362;
	mov.u32 	%r7370, %r7362;
	mov.u32 	%r7371, %r7362;
	mov.u32 	%r7372, %r7362;
	mov.u32 	%r7373, %r7362;
	mov.u32 	%r7374, %r7362;
	mov.u32 	%r7375, %r7362;
	mov.u32 	%r7376, %r7362;
	mov.u32 	%r7377, %r7362;
	mov.u32 	%r7378, %r7362;
	mov.u32 	%r7379, %r7362;
	mov.u32 	%r7380, %r7362;
	mov.u32 	%r7381, %r7362;
	mov.u32 	%r7382, %r7362;
	mov.u32 	%r7383, %r7362;
	mov.u32 	%r7384, %r7362;
	mov.u32 	%r7385, %r7362;
	mov.u32 	%r7386, %r7362;
	mov.u32 	%r7387, %r7362;
	mov.u32 	%r7388, %r7362;
	mov.u32 	%r7389, %r7362;
	mov.u32 	%r7390, %r7362;
	mov.u32 	%r7391, %r7362;
	mov.u32 	%r7392, %r7362;
	mov.u32 	%r7393, %r7362;
	@%p41 bra 	BB2_20;
	bra.uni 	BB2_89;

BB2_20:
	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7366, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r5098, %r5099}, [%rd8+8];
	// inline asm
	prmt.b32 %r7367, %r5099, %r5098, %r7;
	// inline asm
	ld.local.u32 	%r4949, [%rd8+8];
	ld.local.u32 	%r4950, [%rd8+4];
	// inline asm
	prmt.b32 %r7368, %r4949, %r4950, %r7;
	// inline asm
	ld.local.v2.u32 	{%r5100, %r5101}, [%rd8];
	// inline asm
	prmt.b32 %r7369, %r5101, %r5100, %r7;
	// inline asm
	ld.local.u32 	%r4957, [%rd8];
	ld.local.u32 	%r4958, [%rd7+12];
	// inline asm
	prmt.b32 %r7362, %r4957, %r4958, %r7;
	// inline asm
	ld.local.v2.u32 	{%r5102, %r5103}, [%rd7+8];
	// inline asm
	prmt.b32 %r7363, %r5103, %r5102, %r7;
	// inline asm
	ld.local.u32 	%r4965, [%rd7+8];
	ld.local.u32 	%r4966, [%rd7+4];
	// inline asm
	prmt.b32 %r7364, %r4965, %r4966, %r7;
	// inline asm
	ld.local.v2.u32 	{%r5104, %r5105}, [%rd7];
	// inline asm
	prmt.b32 %r7365, %r5105, %r5104, %r7;
	// inline asm
	ld.local.u32 	%r4973, [%rd7];
	ld.local.u32 	%r4974, [%rd6+12];
	// inline asm
	prmt.b32 %r4972, %r4973, %r4974, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r4972;
	ld.local.v2.u32 	{%r5106, %r5107}, [%rd6+8];
	// inline asm
	prmt.b32 %r4976, %r5107, %r5106, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r4976;
	ld.local.u32 	%r4981, [%rd6+8];
	ld.local.u32 	%r4982, [%rd6+4];
	// inline asm
	prmt.b32 %r4980, %r4981, %r4982, %r7;
	// inline asm
	st.local.u32 	[%rd8+4], %r4980;
	ld.local.v2.u32 	{%r5108, %r5109}, [%rd6];
	// inline asm
	prmt.b32 %r4984, %r5109, %r5108, %r7;
	// inline asm
	st.local.u32 	[%rd8], %r4984;
	ld.local.u32 	%r4989, [%rd6];
	ld.local.u32 	%r4990, [%rd5+12];
	// inline asm
	prmt.b32 %r4988, %r4989, %r4990, %r7;
	// inline asm
	st.local.u32 	[%rd7+12], %r4988;
	ld.local.v2.u32 	{%r5110, %r5111}, [%rd5+8];
	// inline asm
	prmt.b32 %r4992, %r5111, %r5110, %r7;
	// inline asm
	st.local.u32 	[%rd7+8], %r4992;
	ld.local.u32 	%r4997, [%rd5+8];
	ld.local.u32 	%r4998, [%rd5+4];
	// inline asm
	prmt.b32 %r4996, %r4997, %r4998, %r7;
	// inline asm
	st.local.u32 	[%rd7+4], %r4996;
	ld.local.v2.u32 	{%r5112, %r5113}, [%rd5];
	// inline asm
	prmt.b32 %r5000, %r5113, %r5112, %r7;
	// inline asm
	st.local.u32 	[%rd7], %r5000;
	ld.local.u32 	%r5005, [%rd5];
	ld.local.u32 	%r5006, [%rd4+12];
	// inline asm
	prmt.b32 %r5004, %r5005, %r5006, %r7;
	// inline asm
	st.local.u32 	[%rd6+12], %r5004;
	ld.local.v2.u32 	{%r5114, %r5115}, [%rd4+8];
	// inline asm
	prmt.b32 %r5008, %r5115, %r5114, %r7;
	// inline asm
	st.local.u32 	[%rd6+8], %r5008;
	ld.local.u32 	%r5013, [%rd4+8];
	ld.local.u32 	%r5014, [%rd4+4];
	// inline asm
	prmt.b32 %r5012, %r5013, %r5014, %r7;
	// inline asm
	st.local.u32 	[%rd6+4], %r5012;
	ld.local.v2.u32 	{%r5116, %r5117}, [%rd4];
	// inline asm
	prmt.b32 %r5016, %r5117, %r5116, %r7;
	// inline asm
	st.local.u32 	[%rd6], %r5016;
	ld.local.u32 	%r5021, [%rd4];
	ld.local.u32 	%r5022, [%rd3+12];
	// inline asm
	prmt.b32 %r5020, %r5021, %r5022, %r7;
	// inline asm
	st.local.u32 	[%rd5+12], %r5020;
	ld.local.v2.u32 	{%r5118, %r5119}, [%rd3+8];
	// inline asm
	prmt.b32 %r5024, %r5119, %r5118, %r7;
	// inline asm
	st.local.u32 	[%rd5+8], %r5024;
	ld.local.u32 	%r5029, [%rd3+8];
	ld.local.u32 	%r5030, [%rd3+4];
	// inline asm
	prmt.b32 %r5028, %r5029, %r5030, %r7;
	// inline asm
	st.local.u32 	[%rd5+4], %r5028;
	ld.local.v2.u32 	{%r5120, %r5121}, [%rd3];
	// inline asm
	prmt.b32 %r5032, %r5121, %r5120, %r7;
	// inline asm
	st.local.u32 	[%rd5], %r5032;
	ld.local.u32 	%r5037, [%rd3];
	ld.local.u32 	%r5038, [%rd2+12];
	// inline asm
	prmt.b32 %r5036, %r5037, %r5038, %r7;
	// inline asm
	st.local.u32 	[%rd4+12], %r5036;
	ld.local.v2.u32 	{%r5122, %r5123}, [%rd2+8];
	// inline asm
	prmt.b32 %r5040, %r5123, %r5122, %r7;
	// inline asm
	st.local.u32 	[%rd4+8], %r5040;
	ld.local.u32 	%r5045, [%rd2+8];
	ld.local.u32 	%r5046, [%rd2+4];
	// inline asm
	prmt.b32 %r5044, %r5045, %r5046, %r7;
	// inline asm
	st.local.u32 	[%rd4+4], %r5044;
	ld.local.v2.u32 	{%r5124, %r5125}, [%rd2];
	// inline asm
	prmt.b32 %r5048, %r5125, %r5124, %r7;
	// inline asm
	st.local.u32 	[%rd4], %r5048;
	ld.local.u32 	%r5053, [%rd2];
	ld.local.u32 	%r5054, [%rd1+12];
	// inline asm
	prmt.b32 %r5052, %r5053, %r5054, %r7;
	// inline asm
	st.local.u32 	[%rd3+12], %r5052;
	ld.local.v2.u32 	{%r5126, %r5127}, [%rd1+8];
	// inline asm
	prmt.b32 %r5056, %r5127, %r5126, %r7;
	// inline asm
	st.local.u32 	[%rd3+8], %r5056;
	ld.local.u32 	%r5061, [%rd1+8];
	ld.local.u32 	%r5062, [%rd1+4];
	// inline asm
	prmt.b32 %r5060, %r5061, %r5062, %r7;
	// inline asm
	st.local.u32 	[%rd3+4], %r5060;
	ld.local.v2.u32 	{%r5128, %r5129}, [%rd1];
	// inline asm
	prmt.b32 %r5064, %r5129, %r5128, %r7;
	// inline asm
	st.local.u32 	[%rd3], %r5064;
	ld.local.u32 	%r5069, [%rd1];
	// inline asm
	prmt.b32 %r5068, %r5069, %r7360, %r7;
	// inline asm
	st.local.v4.u32 	[%rd2], {%r7360, %r7360, %r7360, %r5068};
	st.local.v2.u32 	[%rd1+8], {%r7360, %r7360};
	mov.u64 	%rd212, 0;
	st.local.u64 	[%rd1], %rd212;
	mov.u32 	%r7361, %r7360;

BB2_81:
	mov.u32 	%r7370, %r7360;
	mov.u32 	%r7371, %r7360;
	mov.u32 	%r7372, %r7360;
	mov.u32 	%r7373, %r7360;

BB2_82:
	mov.u32 	%r7374, %r7360;
	mov.u32 	%r7375, %r7360;
	mov.u32 	%r7376, %r7360;
	mov.u32 	%r7377, %r7360;

BB2_83:
	mov.u32 	%r7378, %r7360;
	mov.u32 	%r7379, %r7360;
	mov.u32 	%r7380, %r7360;
	mov.u32 	%r7381, %r7360;

BB2_84:
	mov.u32 	%r7382, %r7360;
	mov.u32 	%r7383, %r7360;
	mov.u32 	%r7384, %r7360;
	mov.u32 	%r7385, %r7360;

BB2_85:
	mov.u32 	%r7386, %r7360;
	mov.u32 	%r7387, %r7360;
	mov.u32 	%r7388, %r7360;
	mov.u32 	%r7389, %r7360;

BB2_86:
	mov.u32 	%r7390, %r7360;
	mov.u32 	%r7391, %r7360;
	mov.u32 	%r7392, %r7360;
	mov.u32 	%r7393, %r7360;

BB2_89:
	ld.const.u64 	%rd1243, [k_sha512+120];
	ld.const.u64 	%rd1242, [k_sha512+112];
	ld.const.u64 	%rd1241, [k_sha512+104];
	ld.const.u64 	%rd1240, [k_sha512+96];
	ld.const.u64 	%rd1239, [k_sha512+88];
	ld.const.u64 	%rd1238, [k_sha512+80];
	ld.const.u64 	%rd1237, [k_sha512+72];
	ld.const.u64 	%rd1236, [k_sha512+64];
	ld.const.u64 	%rd1235, [k_sha512+56];
	ld.const.u64 	%rd1234, [k_sha512+48];
	ld.const.u64 	%rd1233, [k_sha512+40];
	ld.const.u64 	%rd1232, [k_sha512+32];
	ld.const.u64 	%rd1231, [k_sha512+24];
	ld.const.u64 	%rd1230, [k_sha512+16];
	ld.const.u64 	%rd1229, [k_sha512+8];
	ld.const.u64 	%rd1228, [k_sha512];
	ld.v2.u32 	{%r6486, %r6487}, [%rd9+-128];
	or.b32  	%r6489, %r6487, %r7360;
	ld.v2.u32 	{%r6491, %r6492}, [%rd9+-120];
	ld.v2.u32 	{%r6493, %r6494}, [%rd9+-112];
	ld.v2.u32 	{%r6495, %r6496}, [%rd9+-104];
	ld.v2.u32 	{%r6497, %r6498}, [%rd9+-96];
	ld.v2.u32 	{%r6499, %r6500}, [%rd9+-88];
	ld.v2.u32 	{%r6501, %r6502}, [%rd9+-80];
	ld.v2.u32 	{%r6503, %r6504}, [%rd9+-72];
	ld.v2.u32 	{%r6505, %r6506}, [%rd9+-64];
	ld.v2.u32 	{%r6507, %r6508}, [%rd9+-56];
	ld.v2.u32 	{%r6509, %r6510}, [%rd9+-48];
	ld.v2.u32 	{%r6511, %r6512}, [%rd9+-40];
	ld.v2.u32 	{%r6513, %r6514}, [%rd9+-32];
	ld.v2.u32 	{%r6515, %r6516}, [%rd9+-24];
	ld.v2.u32 	{%r6517, %r6518}, [%rd9+-16];
	ld.v2.u32 	{%r6519, %r6520}, [%rd9+-8];
	or.b32  	%r6521, %r6486, %r7361;
	st.v2.u32 	[%rd9+-128], {%r6521, %r6489};
	ld.local.v2.u32 	{%r6522, %r6523}, [%rd1+8];
	or.b32  	%r6526, %r6492, %r6523;
	or.b32  	%r6529, %r6491, %r6522;
	st.v2.u32 	[%rd9+-120], {%r6529, %r6526};
	ld.local.v4.u32 	{%r6530, %r6531, %r6532, %r6533}, [%rd2];
	or.b32  	%r6536, %r6494, %r6531;
	or.b32  	%r6539, %r6493, %r6530;
	st.v2.u32 	[%rd9+-112], {%r6539, %r6536};
	or.b32  	%r6542, %r6496, %r6533;
	or.b32  	%r6545, %r6495, %r6532;
	st.v2.u32 	[%rd9+-104], {%r6545, %r6542};
	ld.local.v4.u32 	{%r6546, %r6547, %r6548, %r6549}, [%rd3];
	or.b32  	%r6552, %r6498, %r6547;
	or.b32  	%r6555, %r6497, %r6546;
	st.v2.u32 	[%rd9+-96], {%r6555, %r6552};
	or.b32  	%r6558, %r6500, %r6549;
	or.b32  	%r6561, %r6499, %r6548;
	st.v2.u32 	[%rd9+-88], {%r6561, %r6558};
	ld.local.v4.u32 	{%r6562, %r6563, %r6564, %r6565}, [%rd4];
	or.b32  	%r6568, %r6502, %r6563;
	or.b32  	%r6571, %r6501, %r6562;
	st.v2.u32 	[%rd9+-80], {%r6571, %r6568};
	or.b32  	%r6574, %r6504, %r6565;
	or.b32  	%r6577, %r6503, %r6564;
	st.v2.u32 	[%rd9+-72], {%r6577, %r6574};
	ld.local.v4.u32 	{%r6578, %r6579, %r6580, %r6581}, [%rd5];
	or.b32  	%r6584, %r6506, %r6579;
	or.b32  	%r6587, %r6505, %r6578;
	st.v2.u32 	[%rd9+-64], {%r6587, %r6584};
	or.b32  	%r6590, %r6508, %r6581;
	or.b32  	%r6593, %r6507, %r6580;
	st.v2.u32 	[%rd9+-56], {%r6593, %r6590};
	ld.local.v4.u32 	{%r6594, %r6595, %r6596, %r6597}, [%rd6];
	or.b32  	%r6600, %r6510, %r6595;
	or.b32  	%r6603, %r6509, %r6594;
	st.v2.u32 	[%rd9+-48], {%r6603, %r6600};
	or.b32  	%r6606, %r6512, %r6597;
	or.b32  	%r6609, %r6511, %r6596;
	st.v2.u32 	[%rd9+-40], {%r6609, %r6606};
	ld.local.v4.u32 	{%r6610, %r6611, %r6612, %r6613}, [%rd7];
	or.b32  	%r6616, %r6514, %r6611;
	or.b32  	%r6619, %r6513, %r6610;
	st.v2.u32 	[%rd9+-32], {%r6619, %r6616};
	or.b32  	%r6622, %r6516, %r6613;
	or.b32  	%r6625, %r6515, %r6612;
	st.v2.u32 	[%rd9+-24], {%r6625, %r6622};
	ld.local.v4.u32 	{%r6626, %r6627, %r6628, %r6629}, [%rd8];
	or.b32  	%r6632, %r6518, %r6627;
	or.b32  	%r6635, %r6517, %r6626;
	st.v2.u32 	[%rd9+-16], {%r6635, %r6632};
	or.b32  	%r6638, %r6520, %r6629;
	or.b32  	%r6641, %r6519, %r6628;
	st.v2.u32 	[%rd9+-8], {%r6641, %r6638};
	mov.b64	%rd1260, {%r6489, %r6521};
	mov.b64	%rd1261, {%r6526, %r6529};
	mov.b64	%rd1262, {%r6536, %r6539};
	mov.b64	%rd1263, {%r6542, %r6545};
	mov.b64	%rd1264, {%r6552, %r6555};
	mov.b64	%rd1265, {%r6558, %r6561};
	mov.b64	%rd1266, {%r6568, %r6571};
	mov.b64	%rd1267, {%r6574, %r6577};
	mov.b64	%rd1251, {%r6584, %r6587};
	mov.b64	%rd1250, {%r6590, %r6593};
	mov.b64	%rd1249, {%r6600, %r6603};
	mov.b64	%rd1248, {%r6606, %r6609};
	mov.b64	%rd1247, {%r6616, %r6619};
	mov.b64	%rd1246, {%r6622, %r6625};
	mov.b64	%rd1245, {%r6632, %r6635};
	mov.b64	%rd1244, {%r6638, %r6641};
	ld.u64 	%rd42, [%rd9+-160];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6642,%dummy}, %rd42;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6643}, %rd42;
	}
	shf.r.wrap.b32 	%r6644, %r6643, %r6642, 14;
	shf.r.wrap.b32 	%r6645, %r6642, %r6643, 14;
	mov.b64 	%rd218, {%r6645, %r6644};
	shf.r.wrap.b32 	%r6646, %r6643, %r6642, 18;
	shf.r.wrap.b32 	%r6647, %r6642, %r6643, 18;
	mov.b64 	%rd219, {%r6647, %r6646};
	xor.b64  	%rd220, %rd219, %rd218;
	shf.l.wrap.b32 	%r6648, %r6642, %r6643, 23;
	shf.l.wrap.b32 	%r6649, %r6643, %r6642, 23;
	mov.b64 	%rd221, {%r6649, %r6648};
	xor.b64  	%rd222, %rd220, %rd221;
	ld.u64 	%rd43, [%rd9+-144];
	ld.u64 	%rd44, [%rd9+-152];
	xor.b64  	%rd223, %rd43, %rd44;
	and.b64  	%rd224, %rd223, %rd42;
	xor.b64  	%rd225, %rd224, %rd43;
	ld.u64 	%rd45, [%rd9+-136];
	add.s64 	%rd226, %rd225, %rd45;
	add.s64 	%rd227, %rd226, %rd1260;
	add.s64 	%rd228, %rd227, %rd1228;
	add.s64 	%rd229, %rd228, %rd222;
	ld.u64 	%rd46, [%rd9+-168];
	add.s64 	%rd230, %rd229, %rd46;
	ld.u64 	%rd47, [%rd106];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6650,%dummy}, %rd47;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6651}, %rd47;
	}
	shf.r.wrap.b32 	%r6652, %r6651, %r6650, 28;
	shf.r.wrap.b32 	%r6653, %r6650, %r6651, 28;
	mov.b64 	%rd231, {%r6653, %r6652};
	shf.l.wrap.b32 	%r6654, %r6650, %r6651, 30;
	shf.l.wrap.b32 	%r6655, %r6651, %r6650, 30;
	mov.b64 	%rd232, {%r6655, %r6654};
	xor.b64  	%rd233, %rd232, %rd231;
	shf.l.wrap.b32 	%r6656, %r6650, %r6651, 25;
	shf.l.wrap.b32 	%r6657, %r6651, %r6650, 25;
	mov.b64 	%rd234, {%r6657, %r6656};
	xor.b64  	%rd235, %rd233, %rd234;
	ld.u64 	%rd48, [%rd9+-176];
	xor.b64  	%rd236, %rd48, %rd47;
	ld.u64 	%rd49, [%rd9+-184];
	xor.b64  	%rd237, %rd49, %rd47;
	and.b64  	%rd238, %rd236, %rd237;
	xor.b64  	%rd239, %rd238, %rd47;
	add.s64 	%rd240, %rd229, %rd239;
	add.s64 	%rd241, %rd240, %rd235;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6658,%dummy}, %rd230;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6659}, %rd230;
	}
	shf.r.wrap.b32 	%r6660, %r6659, %r6658, 14;
	shf.r.wrap.b32 	%r6661, %r6658, %r6659, 14;
	mov.b64 	%rd242, {%r6661, %r6660};
	shf.r.wrap.b32 	%r6662, %r6659, %r6658, 18;
	shf.r.wrap.b32 	%r6663, %r6658, %r6659, 18;
	mov.b64 	%rd243, {%r6663, %r6662};
	xor.b64  	%rd244, %rd243, %rd242;
	shf.l.wrap.b32 	%r6664, %r6658, %r6659, 23;
	shf.l.wrap.b32 	%r6665, %r6659, %r6658, 23;
	mov.b64 	%rd245, {%r6665, %r6664};
	xor.b64  	%rd246, %rd244, %rd245;
	xor.b64  	%rd247, %rd44, %rd42;
	and.b64  	%rd248, %rd230, %rd247;
	xor.b64  	%rd249, %rd248, %rd44;
	add.s64 	%rd250, %rd1261, %rd43;
	add.s64 	%rd251, %rd250, %rd1229;
	add.s64 	%rd252, %rd251, %rd249;
	add.s64 	%rd253, %rd252, %rd246;
	add.s64 	%rd254, %rd253, %rd48;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6666,%dummy}, %rd241;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6667}, %rd241;
	}
	shf.r.wrap.b32 	%r6668, %r6667, %r6666, 28;
	shf.r.wrap.b32 	%r6669, %r6666, %r6667, 28;
	mov.b64 	%rd255, {%r6669, %r6668};
	shf.l.wrap.b32 	%r6670, %r6666, %r6667, 30;
	shf.l.wrap.b32 	%r6671, %r6667, %r6666, 30;
	mov.b64 	%rd256, {%r6671, %r6670};
	xor.b64  	%rd257, %rd256, %rd255;
	shf.l.wrap.b32 	%r6672, %r6666, %r6667, 25;
	shf.l.wrap.b32 	%r6673, %r6667, %r6666, 25;
	mov.b64 	%rd258, {%r6673, %r6672};
	xor.b64  	%rd259, %rd257, %rd258;
	xor.b64  	%rd260, %rd241, %rd49;
	xor.b64  	%rd261, %rd241, %rd47;
	and.b64  	%rd262, %rd261, %rd260;
	xor.b64  	%rd263, %rd262, %rd241;
	add.s64 	%rd264, %rd253, %rd263;
	add.s64 	%rd265, %rd264, %rd259;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6674,%dummy}, %rd254;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6675}, %rd254;
	}
	shf.r.wrap.b32 	%r6676, %r6675, %r6674, 14;
	shf.r.wrap.b32 	%r6677, %r6674, %r6675, 14;
	mov.b64 	%rd266, {%r6677, %r6676};
	shf.r.wrap.b32 	%r6678, %r6675, %r6674, 18;
	shf.r.wrap.b32 	%r6679, %r6674, %r6675, 18;
	mov.b64 	%rd267, {%r6679, %r6678};
	xor.b64  	%rd268, %rd267, %rd266;
	shf.l.wrap.b32 	%r6680, %r6674, %r6675, 23;
	shf.l.wrap.b32 	%r6681, %r6675, %r6674, 23;
	mov.b64 	%rd269, {%r6681, %r6680};
	xor.b64  	%rd270, %rd268, %rd269;
	xor.b64  	%rd271, %rd230, %rd42;
	and.b64  	%rd272, %rd254, %rd271;
	xor.b64  	%rd273, %rd272, %rd42;
	add.s64 	%rd274, %rd1262, %rd44;
	add.s64 	%rd275, %rd274, %rd1230;
	add.s64 	%rd276, %rd275, %rd273;
	add.s64 	%rd277, %rd276, %rd270;
	add.s64 	%rd278, %rd277, %rd49;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6682,%dummy}, %rd265;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6683}, %rd265;
	}
	shf.r.wrap.b32 	%r6684, %r6683, %r6682, 28;
	shf.r.wrap.b32 	%r6685, %r6682, %r6683, 28;
	mov.b64 	%rd279, {%r6685, %r6684};
	shf.l.wrap.b32 	%r6686, %r6682, %r6683, 30;
	shf.l.wrap.b32 	%r6687, %r6683, %r6682, 30;
	mov.b64 	%rd280, {%r6687, %r6686};
	xor.b64  	%rd281, %rd280, %rd279;
	shf.l.wrap.b32 	%r6688, %r6682, %r6683, 25;
	shf.l.wrap.b32 	%r6689, %r6683, %r6682, 25;
	mov.b64 	%rd282, {%r6689, %r6688};
	xor.b64  	%rd283, %rd281, %rd282;
	xor.b64  	%rd284, %rd265, %rd47;
	xor.b64  	%rd285, %rd265, %rd241;
	and.b64  	%rd286, %rd285, %rd284;
	xor.b64  	%rd287, %rd286, %rd265;
	add.s64 	%rd288, %rd277, %rd287;
	add.s64 	%rd289, %rd288, %rd283;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6690,%dummy}, %rd278;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6691}, %rd278;
	}
	shf.r.wrap.b32 	%r6692, %r6691, %r6690, 14;
	shf.r.wrap.b32 	%r6693, %r6690, %r6691, 14;
	mov.b64 	%rd290, {%r6693, %r6692};
	shf.r.wrap.b32 	%r6694, %r6691, %r6690, 18;
	shf.r.wrap.b32 	%r6695, %r6690, %r6691, 18;
	mov.b64 	%rd291, {%r6695, %r6694};
	xor.b64  	%rd292, %rd291, %rd290;
	shf.l.wrap.b32 	%r6696, %r6690, %r6691, 23;
	shf.l.wrap.b32 	%r6697, %r6691, %r6690, 23;
	mov.b64 	%rd293, {%r6697, %r6696};
	xor.b64  	%rd294, %rd292, %rd293;
	xor.b64  	%rd295, %rd254, %rd230;
	and.b64  	%rd296, %rd278, %rd295;
	xor.b64  	%rd297, %rd296, %rd230;
	add.s64 	%rd298, %rd1263, %rd42;
	add.s64 	%rd299, %rd298, %rd1231;
	add.s64 	%rd300, %rd299, %rd297;
	add.s64 	%rd301, %rd300, %rd294;
	add.s64 	%rd302, %rd301, %rd47;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6698,%dummy}, %rd289;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6699}, %rd289;
	}
	shf.r.wrap.b32 	%r6700, %r6699, %r6698, 28;
	shf.r.wrap.b32 	%r6701, %r6698, %r6699, 28;
	mov.b64 	%rd303, {%r6701, %r6700};
	shf.l.wrap.b32 	%r6702, %r6698, %r6699, 30;
	shf.l.wrap.b32 	%r6703, %r6699, %r6698, 30;
	mov.b64 	%rd304, {%r6703, %r6702};
	xor.b64  	%rd305, %rd304, %rd303;
	shf.l.wrap.b32 	%r6704, %r6698, %r6699, 25;
	shf.l.wrap.b32 	%r6705, %r6699, %r6698, 25;
	mov.b64 	%rd306, {%r6705, %r6704};
	xor.b64  	%rd307, %rd305, %rd306;
	xor.b64  	%rd308, %rd289, %rd241;
	xor.b64  	%rd309, %rd289, %rd265;
	and.b64  	%rd310, %rd309, %rd308;
	xor.b64  	%rd311, %rd310, %rd289;
	add.s64 	%rd312, %rd301, %rd311;
	add.s64 	%rd313, %rd312, %rd307;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6706,%dummy}, %rd302;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6707}, %rd302;
	}
	shf.r.wrap.b32 	%r6708, %r6707, %r6706, 14;
	shf.r.wrap.b32 	%r6709, %r6706, %r6707, 14;
	mov.b64 	%rd314, {%r6709, %r6708};
	shf.r.wrap.b32 	%r6710, %r6707, %r6706, 18;
	shf.r.wrap.b32 	%r6711, %r6706, %r6707, 18;
	mov.b64 	%rd315, {%r6711, %r6710};
	xor.b64  	%rd316, %rd315, %rd314;
	shf.l.wrap.b32 	%r6712, %r6706, %r6707, 23;
	shf.l.wrap.b32 	%r6713, %r6707, %r6706, 23;
	mov.b64 	%rd317, {%r6713, %r6712};
	xor.b64  	%rd318, %rd316, %rd317;
	xor.b64  	%rd319, %rd278, %rd254;
	and.b64  	%rd320, %rd302, %rd319;
	xor.b64  	%rd321, %rd320, %rd254;
	add.s64 	%rd322, %rd230, %rd1264;
	add.s64 	%rd323, %rd322, %rd1232;
	add.s64 	%rd324, %rd323, %rd321;
	add.s64 	%rd325, %rd324, %rd318;
	add.s64 	%rd326, %rd325, %rd241;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6714,%dummy}, %rd313;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6715}, %rd313;
	}
	shf.r.wrap.b32 	%r6716, %r6715, %r6714, 28;
	shf.r.wrap.b32 	%r6717, %r6714, %r6715, 28;
	mov.b64 	%rd327, {%r6717, %r6716};
	shf.l.wrap.b32 	%r6718, %r6714, %r6715, 30;
	shf.l.wrap.b32 	%r6719, %r6715, %r6714, 30;
	mov.b64 	%rd328, {%r6719, %r6718};
	xor.b64  	%rd329, %rd328, %rd327;
	shf.l.wrap.b32 	%r6720, %r6714, %r6715, 25;
	shf.l.wrap.b32 	%r6721, %r6715, %r6714, 25;
	mov.b64 	%rd330, {%r6721, %r6720};
	xor.b64  	%rd331, %rd329, %rd330;
	xor.b64  	%rd332, %rd313, %rd265;
	xor.b64  	%rd333, %rd313, %rd289;
	and.b64  	%rd334, %rd333, %rd332;
	xor.b64  	%rd335, %rd334, %rd313;
	add.s64 	%rd336, %rd325, %rd335;
	add.s64 	%rd337, %rd336, %rd331;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6722,%dummy}, %rd326;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6723}, %rd326;
	}
	shf.r.wrap.b32 	%r6724, %r6723, %r6722, 14;
	shf.r.wrap.b32 	%r6725, %r6722, %r6723, 14;
	mov.b64 	%rd338, {%r6725, %r6724};
	shf.r.wrap.b32 	%r6726, %r6723, %r6722, 18;
	shf.r.wrap.b32 	%r6727, %r6722, %r6723, 18;
	mov.b64 	%rd339, {%r6727, %r6726};
	xor.b64  	%rd340, %rd339, %rd338;
	shf.l.wrap.b32 	%r6728, %r6722, %r6723, 23;
	shf.l.wrap.b32 	%r6729, %r6723, %r6722, 23;
	mov.b64 	%rd341, {%r6729, %r6728};
	xor.b64  	%rd342, %rd340, %rd341;
	xor.b64  	%rd343, %rd302, %rd278;
	and.b64  	%rd344, %rd326, %rd343;
	xor.b64  	%rd345, %rd344, %rd278;
	add.s64 	%rd346, %rd254, %rd1265;
	add.s64 	%rd347, %rd346, %rd1233;
	add.s64 	%rd348, %rd347, %rd345;
	add.s64 	%rd349, %rd348, %rd342;
	add.s64 	%rd350, %rd349, %rd265;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6730,%dummy}, %rd337;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6731}, %rd337;
	}
	shf.r.wrap.b32 	%r6732, %r6731, %r6730, 28;
	shf.r.wrap.b32 	%r6733, %r6730, %r6731, 28;
	mov.b64 	%rd351, {%r6733, %r6732};
	shf.l.wrap.b32 	%r6734, %r6730, %r6731, 30;
	shf.l.wrap.b32 	%r6735, %r6731, %r6730, 30;
	mov.b64 	%rd352, {%r6735, %r6734};
	xor.b64  	%rd353, %rd352, %rd351;
	shf.l.wrap.b32 	%r6736, %r6730, %r6731, 25;
	shf.l.wrap.b32 	%r6737, %r6731, %r6730, 25;
	mov.b64 	%rd354, {%r6737, %r6736};
	xor.b64  	%rd355, %rd353, %rd354;
	xor.b64  	%rd356, %rd337, %rd289;
	xor.b64  	%rd357, %rd337, %rd313;
	and.b64  	%rd358, %rd357, %rd356;
	xor.b64  	%rd359, %rd358, %rd337;
	add.s64 	%rd360, %rd349, %rd359;
	add.s64 	%rd361, %rd360, %rd355;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6738,%dummy}, %rd350;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6739}, %rd350;
	}
	shf.r.wrap.b32 	%r6740, %r6739, %r6738, 14;
	shf.r.wrap.b32 	%r6741, %r6738, %r6739, 14;
	mov.b64 	%rd362, {%r6741, %r6740};
	shf.r.wrap.b32 	%r6742, %r6739, %r6738, 18;
	shf.r.wrap.b32 	%r6743, %r6738, %r6739, 18;
	mov.b64 	%rd363, {%r6743, %r6742};
	xor.b64  	%rd364, %rd363, %rd362;
	shf.l.wrap.b32 	%r6744, %r6738, %r6739, 23;
	shf.l.wrap.b32 	%r6745, %r6739, %r6738, 23;
	mov.b64 	%rd365, {%r6745, %r6744};
	xor.b64  	%rd366, %rd364, %rd365;
	xor.b64  	%rd367, %rd326, %rd302;
	and.b64  	%rd368, %rd350, %rd367;
	xor.b64  	%rd369, %rd368, %rd302;
	add.s64 	%rd370, %rd278, %rd1266;
	add.s64 	%rd371, %rd370, %rd1234;
	add.s64 	%rd372, %rd371, %rd369;
	add.s64 	%rd373, %rd372, %rd366;
	add.s64 	%rd374, %rd373, %rd289;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6746,%dummy}, %rd361;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6747}, %rd361;
	}
	shf.r.wrap.b32 	%r6748, %r6747, %r6746, 28;
	shf.r.wrap.b32 	%r6749, %r6746, %r6747, 28;
	mov.b64 	%rd375, {%r6749, %r6748};
	shf.l.wrap.b32 	%r6750, %r6746, %r6747, 30;
	shf.l.wrap.b32 	%r6751, %r6747, %r6746, 30;
	mov.b64 	%rd376, {%r6751, %r6750};
	xor.b64  	%rd377, %rd376, %rd375;
	shf.l.wrap.b32 	%r6752, %r6746, %r6747, 25;
	shf.l.wrap.b32 	%r6753, %r6747, %r6746, 25;
	mov.b64 	%rd378, {%r6753, %r6752};
	xor.b64  	%rd379, %rd377, %rd378;
	xor.b64  	%rd380, %rd361, %rd313;
	xor.b64  	%rd381, %rd361, %rd337;
	and.b64  	%rd382, %rd381, %rd380;
	xor.b64  	%rd383, %rd382, %rd361;
	add.s64 	%rd384, %rd373, %rd383;
	add.s64 	%rd385, %rd384, %rd379;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6754,%dummy}, %rd374;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6755}, %rd374;
	}
	shf.r.wrap.b32 	%r6756, %r6755, %r6754, 14;
	shf.r.wrap.b32 	%r6757, %r6754, %r6755, 14;
	mov.b64 	%rd386, {%r6757, %r6756};
	shf.r.wrap.b32 	%r6758, %r6755, %r6754, 18;
	shf.r.wrap.b32 	%r6759, %r6754, %r6755, 18;
	mov.b64 	%rd387, {%r6759, %r6758};
	xor.b64  	%rd388, %rd387, %rd386;
	shf.l.wrap.b32 	%r6760, %r6754, %r6755, 23;
	shf.l.wrap.b32 	%r6761, %r6755, %r6754, 23;
	mov.b64 	%rd389, {%r6761, %r6760};
	xor.b64  	%rd390, %rd388, %rd389;
	xor.b64  	%rd391, %rd350, %rd326;
	and.b64  	%rd392, %rd374, %rd391;
	xor.b64  	%rd393, %rd392, %rd326;
	add.s64 	%rd394, %rd302, %rd1267;
	add.s64 	%rd395, %rd394, %rd1235;
	add.s64 	%rd396, %rd395, %rd393;
	add.s64 	%rd397, %rd396, %rd390;
	add.s64 	%rd398, %rd397, %rd313;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6762,%dummy}, %rd385;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6763}, %rd385;
	}
	shf.r.wrap.b32 	%r6764, %r6763, %r6762, 28;
	shf.r.wrap.b32 	%r6765, %r6762, %r6763, 28;
	mov.b64 	%rd399, {%r6765, %r6764};
	shf.l.wrap.b32 	%r6766, %r6762, %r6763, 30;
	shf.l.wrap.b32 	%r6767, %r6763, %r6762, 30;
	mov.b64 	%rd400, {%r6767, %r6766};
	xor.b64  	%rd401, %rd400, %rd399;
	shf.l.wrap.b32 	%r6768, %r6762, %r6763, 25;
	shf.l.wrap.b32 	%r6769, %r6763, %r6762, 25;
	mov.b64 	%rd402, {%r6769, %r6768};
	xor.b64  	%rd403, %rd401, %rd402;
	xor.b64  	%rd404, %rd385, %rd337;
	xor.b64  	%rd405, %rd385, %rd361;
	and.b64  	%rd406, %rd405, %rd404;
	xor.b64  	%rd407, %rd406, %rd385;
	add.s64 	%rd408, %rd397, %rd407;
	add.s64 	%rd409, %rd408, %rd403;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6770,%dummy}, %rd398;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6771}, %rd398;
	}
	shf.r.wrap.b32 	%r6772, %r6771, %r6770, 14;
	shf.r.wrap.b32 	%r6773, %r6770, %r6771, 14;
	mov.b64 	%rd410, {%r6773, %r6772};
	shf.r.wrap.b32 	%r6774, %r6771, %r6770, 18;
	shf.r.wrap.b32 	%r6775, %r6770, %r6771, 18;
	mov.b64 	%rd411, {%r6775, %r6774};
	xor.b64  	%rd412, %rd411, %rd410;
	shf.l.wrap.b32 	%r6776, %r6770, %r6771, 23;
	shf.l.wrap.b32 	%r6777, %r6771, %r6770, 23;
	mov.b64 	%rd413, {%r6777, %r6776};
	xor.b64  	%rd414, %rd412, %rd413;
	xor.b64  	%rd415, %rd374, %rd350;
	and.b64  	%rd416, %rd398, %rd415;
	xor.b64  	%rd417, %rd416, %rd350;
	add.s64 	%rd418, %rd326, %rd1251;
	add.s64 	%rd419, %rd418, %rd1236;
	add.s64 	%rd420, %rd419, %rd417;
	add.s64 	%rd421, %rd420, %rd414;
	add.s64 	%rd422, %rd421, %rd337;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6778,%dummy}, %rd409;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6779}, %rd409;
	}
	shf.r.wrap.b32 	%r6780, %r6779, %r6778, 28;
	shf.r.wrap.b32 	%r6781, %r6778, %r6779, 28;
	mov.b64 	%rd423, {%r6781, %r6780};
	shf.l.wrap.b32 	%r6782, %r6778, %r6779, 30;
	shf.l.wrap.b32 	%r6783, %r6779, %r6778, 30;
	mov.b64 	%rd424, {%r6783, %r6782};
	xor.b64  	%rd425, %rd424, %rd423;
	shf.l.wrap.b32 	%r6784, %r6778, %r6779, 25;
	shf.l.wrap.b32 	%r6785, %r6779, %r6778, 25;
	mov.b64 	%rd426, {%r6785, %r6784};
	xor.b64  	%rd427, %rd425, %rd426;
	xor.b64  	%rd428, %rd409, %rd361;
	xor.b64  	%rd429, %rd409, %rd385;
	and.b64  	%rd430, %rd429, %rd428;
	xor.b64  	%rd431, %rd430, %rd409;
	add.s64 	%rd432, %rd421, %rd431;
	add.s64 	%rd433, %rd432, %rd427;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6786,%dummy}, %rd422;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6787}, %rd422;
	}
	shf.r.wrap.b32 	%r6788, %r6787, %r6786, 14;
	shf.r.wrap.b32 	%r6789, %r6786, %r6787, 14;
	mov.b64 	%rd434, {%r6789, %r6788};
	shf.r.wrap.b32 	%r6790, %r6787, %r6786, 18;
	shf.r.wrap.b32 	%r6791, %r6786, %r6787, 18;
	mov.b64 	%rd435, {%r6791, %r6790};
	xor.b64  	%rd436, %rd435, %rd434;
	shf.l.wrap.b32 	%r6792, %r6786, %r6787, 23;
	shf.l.wrap.b32 	%r6793, %r6787, %r6786, 23;
	mov.b64 	%rd437, {%r6793, %r6792};
	xor.b64  	%rd438, %rd436, %rd437;
	xor.b64  	%rd439, %rd398, %rd374;
	and.b64  	%rd440, %rd422, %rd439;
	xor.b64  	%rd441, %rd440, %rd374;
	add.s64 	%rd442, %rd350, %rd1250;
	add.s64 	%rd443, %rd442, %rd1237;
	add.s64 	%rd444, %rd443, %rd441;
	add.s64 	%rd445, %rd444, %rd438;
	add.s64 	%rd446, %rd445, %rd361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6794,%dummy}, %rd433;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6795}, %rd433;
	}
	shf.r.wrap.b32 	%r6796, %r6795, %r6794, 28;
	shf.r.wrap.b32 	%r6797, %r6794, %r6795, 28;
	mov.b64 	%rd447, {%r6797, %r6796};
	shf.l.wrap.b32 	%r6798, %r6794, %r6795, 30;
	shf.l.wrap.b32 	%r6799, %r6795, %r6794, 30;
	mov.b64 	%rd448, {%r6799, %r6798};
	xor.b64  	%rd449, %rd448, %rd447;
	shf.l.wrap.b32 	%r6800, %r6794, %r6795, 25;
	shf.l.wrap.b32 	%r6801, %r6795, %r6794, 25;
	mov.b64 	%rd450, {%r6801, %r6800};
	xor.b64  	%rd451, %rd449, %rd450;
	xor.b64  	%rd452, %rd433, %rd385;
	xor.b64  	%rd453, %rd433, %rd409;
	and.b64  	%rd454, %rd453, %rd452;
	xor.b64  	%rd455, %rd454, %rd433;
	add.s64 	%rd456, %rd445, %rd455;
	add.s64 	%rd457, %rd456, %rd451;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6802,%dummy}, %rd446;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6803}, %rd446;
	}
	shf.r.wrap.b32 	%r6804, %r6803, %r6802, 14;
	shf.r.wrap.b32 	%r6805, %r6802, %r6803, 14;
	mov.b64 	%rd458, {%r6805, %r6804};
	shf.r.wrap.b32 	%r6806, %r6803, %r6802, 18;
	shf.r.wrap.b32 	%r6807, %r6802, %r6803, 18;
	mov.b64 	%rd459, {%r6807, %r6806};
	xor.b64  	%rd460, %rd459, %rd458;
	shf.l.wrap.b32 	%r6808, %r6802, %r6803, 23;
	shf.l.wrap.b32 	%r6809, %r6803, %r6802, 23;
	mov.b64 	%rd461, {%r6809, %r6808};
	xor.b64  	%rd462, %rd460, %rd461;
	xor.b64  	%rd463, %rd422, %rd398;
	and.b64  	%rd464, %rd446, %rd463;
	xor.b64  	%rd465, %rd464, %rd398;
	add.s64 	%rd466, %rd374, %rd1249;
	add.s64 	%rd467, %rd466, %rd1238;
	add.s64 	%rd468, %rd467, %rd465;
	add.s64 	%rd469, %rd468, %rd462;
	add.s64 	%rd470, %rd469, %rd385;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6810,%dummy}, %rd457;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6811}, %rd457;
	}
	shf.r.wrap.b32 	%r6812, %r6811, %r6810, 28;
	shf.r.wrap.b32 	%r6813, %r6810, %r6811, 28;
	mov.b64 	%rd471, {%r6813, %r6812};
	shf.l.wrap.b32 	%r6814, %r6810, %r6811, 30;
	shf.l.wrap.b32 	%r6815, %r6811, %r6810, 30;
	mov.b64 	%rd472, {%r6815, %r6814};
	xor.b64  	%rd473, %rd472, %rd471;
	shf.l.wrap.b32 	%r6816, %r6810, %r6811, 25;
	shf.l.wrap.b32 	%r6817, %r6811, %r6810, 25;
	mov.b64 	%rd474, {%r6817, %r6816};
	xor.b64  	%rd475, %rd473, %rd474;
	xor.b64  	%rd476, %rd457, %rd409;
	xor.b64  	%rd477, %rd457, %rd433;
	and.b64  	%rd478, %rd477, %rd476;
	xor.b64  	%rd479, %rd478, %rd457;
	add.s64 	%rd480, %rd469, %rd479;
	add.s64 	%rd481, %rd480, %rd475;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6818,%dummy}, %rd470;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6819}, %rd470;
	}
	shf.r.wrap.b32 	%r6820, %r6819, %r6818, 14;
	shf.r.wrap.b32 	%r6821, %r6818, %r6819, 14;
	mov.b64 	%rd482, {%r6821, %r6820};
	shf.r.wrap.b32 	%r6822, %r6819, %r6818, 18;
	shf.r.wrap.b32 	%r6823, %r6818, %r6819, 18;
	mov.b64 	%rd483, {%r6823, %r6822};
	xor.b64  	%rd484, %rd483, %rd482;
	shf.l.wrap.b32 	%r6824, %r6818, %r6819, 23;
	shf.l.wrap.b32 	%r6825, %r6819, %r6818, 23;
	mov.b64 	%rd485, {%r6825, %r6824};
	xor.b64  	%rd486, %rd484, %rd485;
	xor.b64  	%rd487, %rd446, %rd422;
	and.b64  	%rd488, %rd470, %rd487;
	xor.b64  	%rd489, %rd488, %rd422;
	add.s64 	%rd490, %rd398, %rd1248;
	add.s64 	%rd491, %rd490, %rd1239;
	add.s64 	%rd492, %rd491, %rd489;
	add.s64 	%rd493, %rd492, %rd486;
	add.s64 	%rd494, %rd493, %rd409;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6826,%dummy}, %rd481;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6827}, %rd481;
	}
	shf.r.wrap.b32 	%r6828, %r6827, %r6826, 28;
	shf.r.wrap.b32 	%r6829, %r6826, %r6827, 28;
	mov.b64 	%rd495, {%r6829, %r6828};
	shf.l.wrap.b32 	%r6830, %r6826, %r6827, 30;
	shf.l.wrap.b32 	%r6831, %r6827, %r6826, 30;
	mov.b64 	%rd496, {%r6831, %r6830};
	xor.b64  	%rd497, %rd496, %rd495;
	shf.l.wrap.b32 	%r6832, %r6826, %r6827, 25;
	shf.l.wrap.b32 	%r6833, %r6827, %r6826, 25;
	mov.b64 	%rd498, {%r6833, %r6832};
	xor.b64  	%rd499, %rd497, %rd498;
	xor.b64  	%rd500, %rd481, %rd433;
	xor.b64  	%rd501, %rd481, %rd457;
	and.b64  	%rd502, %rd501, %rd500;
	xor.b64  	%rd503, %rd502, %rd481;
	add.s64 	%rd504, %rd493, %rd503;
	add.s64 	%rd505, %rd504, %rd499;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6834,%dummy}, %rd494;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6835}, %rd494;
	}
	shf.r.wrap.b32 	%r6836, %r6835, %r6834, 14;
	shf.r.wrap.b32 	%r6837, %r6834, %r6835, 14;
	mov.b64 	%rd506, {%r6837, %r6836};
	shf.r.wrap.b32 	%r6838, %r6835, %r6834, 18;
	shf.r.wrap.b32 	%r6839, %r6834, %r6835, 18;
	mov.b64 	%rd507, {%r6839, %r6838};
	xor.b64  	%rd508, %rd507, %rd506;
	shf.l.wrap.b32 	%r6840, %r6834, %r6835, 23;
	shf.l.wrap.b32 	%r6841, %r6835, %r6834, 23;
	mov.b64 	%rd509, {%r6841, %r6840};
	xor.b64  	%rd510, %rd508, %rd509;
	xor.b64  	%rd511, %rd470, %rd446;
	and.b64  	%rd512, %rd494, %rd511;
	xor.b64  	%rd513, %rd512, %rd446;
	add.s64 	%rd514, %rd422, %rd1247;
	add.s64 	%rd515, %rd514, %rd1240;
	add.s64 	%rd516, %rd515, %rd513;
	add.s64 	%rd517, %rd516, %rd510;
	add.s64 	%rd1259, %rd517, %rd433;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6842,%dummy}, %rd505;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6843}, %rd505;
	}
	shf.r.wrap.b32 	%r6844, %r6843, %r6842, 28;
	shf.r.wrap.b32 	%r6845, %r6842, %r6843, 28;
	mov.b64 	%rd518, {%r6845, %r6844};
	shf.l.wrap.b32 	%r6846, %r6842, %r6843, 30;
	shf.l.wrap.b32 	%r6847, %r6843, %r6842, 30;
	mov.b64 	%rd519, {%r6847, %r6846};
	xor.b64  	%rd520, %rd519, %rd518;
	shf.l.wrap.b32 	%r6848, %r6842, %r6843, 25;
	shf.l.wrap.b32 	%r6849, %r6843, %r6842, 25;
	mov.b64 	%rd521, {%r6849, %r6848};
	xor.b64  	%rd522, %rd520, %rd521;
	xor.b64  	%rd523, %rd505, %rd457;
	xor.b64  	%rd524, %rd505, %rd481;
	and.b64  	%rd525, %rd524, %rd523;
	xor.b64  	%rd526, %rd525, %rd505;
	add.s64 	%rd527, %rd517, %rd526;
	add.s64 	%rd1255, %rd527, %rd522;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6850,%dummy}, %rd1259;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6851}, %rd1259;
	}
	shf.r.wrap.b32 	%r6852, %r6851, %r6850, 14;
	shf.r.wrap.b32 	%r6853, %r6850, %r6851, 14;
	mov.b64 	%rd528, {%r6853, %r6852};
	shf.r.wrap.b32 	%r6854, %r6851, %r6850, 18;
	shf.r.wrap.b32 	%r6855, %r6850, %r6851, 18;
	mov.b64 	%rd529, {%r6855, %r6854};
	xor.b64  	%rd530, %rd529, %rd528;
	shf.l.wrap.b32 	%r6856, %r6850, %r6851, 23;
	shf.l.wrap.b32 	%r6857, %r6851, %r6850, 23;
	mov.b64 	%rd531, {%r6857, %r6856};
	xor.b64  	%rd532, %rd530, %rd531;
	xor.b64  	%rd533, %rd494, %rd470;
	and.b64  	%rd534, %rd1259, %rd533;
	xor.b64  	%rd535, %rd534, %rd470;
	add.s64 	%rd536, %rd446, %rd1246;
	add.s64 	%rd537, %rd536, %rd1241;
	add.s64 	%rd538, %rd537, %rd535;
	add.s64 	%rd539, %rd538, %rd532;
	add.s64 	%rd1258, %rd539, %rd457;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6858,%dummy}, %rd1255;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6859}, %rd1255;
	}
	shf.r.wrap.b32 	%r6860, %r6859, %r6858, 28;
	shf.r.wrap.b32 	%r6861, %r6858, %r6859, 28;
	mov.b64 	%rd540, {%r6861, %r6860};
	shf.l.wrap.b32 	%r6862, %r6858, %r6859, 30;
	shf.l.wrap.b32 	%r6863, %r6859, %r6858, 30;
	mov.b64 	%rd541, {%r6863, %r6862};
	xor.b64  	%rd542, %rd541, %rd540;
	shf.l.wrap.b32 	%r6864, %r6858, %r6859, 25;
	shf.l.wrap.b32 	%r6865, %r6859, %r6858, 25;
	mov.b64 	%rd543, {%r6865, %r6864};
	xor.b64  	%rd544, %rd542, %rd543;
	xor.b64  	%rd545, %rd1255, %rd481;
	xor.b64  	%rd546, %rd1255, %rd505;
	and.b64  	%rd547, %rd546, %rd545;
	xor.b64  	%rd548, %rd547, %rd1255;
	add.s64 	%rd549, %rd539, %rd548;
	add.s64 	%rd1254, %rd549, %rd544;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6866,%dummy}, %rd1258;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6867}, %rd1258;
	}
	shf.r.wrap.b32 	%r6868, %r6867, %r6866, 14;
	shf.r.wrap.b32 	%r6869, %r6866, %r6867, 14;
	mov.b64 	%rd550, {%r6869, %r6868};
	shf.r.wrap.b32 	%r6870, %r6867, %r6866, 18;
	shf.r.wrap.b32 	%r6871, %r6866, %r6867, 18;
	mov.b64 	%rd551, {%r6871, %r6870};
	xor.b64  	%rd552, %rd551, %rd550;
	shf.l.wrap.b32 	%r6872, %r6866, %r6867, 23;
	shf.l.wrap.b32 	%r6873, %r6867, %r6866, 23;
	mov.b64 	%rd553, {%r6873, %r6872};
	xor.b64  	%rd554, %rd552, %rd553;
	xor.b64  	%rd555, %rd1259, %rd494;
	and.b64  	%rd556, %rd1258, %rd555;
	xor.b64  	%rd557, %rd556, %rd494;
	add.s64 	%rd558, %rd470, %rd1245;
	add.s64 	%rd559, %rd558, %rd1242;
	add.s64 	%rd560, %rd559, %rd557;
	add.s64 	%rd561, %rd560, %rd554;
	add.s64 	%rd1257, %rd561, %rd481;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6874,%dummy}, %rd1254;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6875}, %rd1254;
	}
	shf.r.wrap.b32 	%r6876, %r6875, %r6874, 28;
	shf.r.wrap.b32 	%r6877, %r6874, %r6875, 28;
	mov.b64 	%rd562, {%r6877, %r6876};
	shf.l.wrap.b32 	%r6878, %r6874, %r6875, 30;
	shf.l.wrap.b32 	%r6879, %r6875, %r6874, 30;
	mov.b64 	%rd563, {%r6879, %r6878};
	xor.b64  	%rd564, %rd563, %rd562;
	shf.l.wrap.b32 	%r6880, %r6874, %r6875, 25;
	shf.l.wrap.b32 	%r6881, %r6875, %r6874, 25;
	mov.b64 	%rd565, {%r6881, %r6880};
	xor.b64  	%rd566, %rd564, %rd565;
	xor.b64  	%rd567, %rd1254, %rd505;
	xor.b64  	%rd568, %rd1254, %rd1255;
	and.b64  	%rd569, %rd568, %rd567;
	xor.b64  	%rd570, %rd569, %rd1254;
	add.s64 	%rd571, %rd561, %rd570;
	add.s64 	%rd1253, %rd571, %rd566;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6882,%dummy}, %rd1257;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6883}, %rd1257;
	}
	shf.r.wrap.b32 	%r6884, %r6883, %r6882, 14;
	shf.r.wrap.b32 	%r6885, %r6882, %r6883, 14;
	mov.b64 	%rd572, {%r6885, %r6884};
	shf.r.wrap.b32 	%r6886, %r6883, %r6882, 18;
	shf.r.wrap.b32 	%r6887, %r6882, %r6883, 18;
	mov.b64 	%rd573, {%r6887, %r6886};
	xor.b64  	%rd574, %rd573, %rd572;
	shf.l.wrap.b32 	%r6888, %r6882, %r6883, 23;
	shf.l.wrap.b32 	%r6889, %r6883, %r6882, 23;
	mov.b64 	%rd575, {%r6889, %r6888};
	xor.b64  	%rd576, %rd574, %rd575;
	xor.b64  	%rd577, %rd1258, %rd1259;
	and.b64  	%rd578, %rd1257, %rd577;
	xor.b64  	%rd579, %rd578, %rd1259;
	add.s64 	%rd580, %rd494, %rd1244;
	add.s64 	%rd581, %rd580, %rd1243;
	add.s64 	%rd582, %rd581, %rd579;
	add.s64 	%rd583, %rd582, %rd576;
	add.s64 	%rd1256, %rd583, %rd505;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6890,%dummy}, %rd1253;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6891}, %rd1253;
	}
	shf.r.wrap.b32 	%r6892, %r6891, %r6890, 28;
	shf.r.wrap.b32 	%r6893, %r6890, %r6891, 28;
	mov.b64 	%rd584, {%r6893, %r6892};
	shf.l.wrap.b32 	%r6894, %r6890, %r6891, 30;
	shf.l.wrap.b32 	%r6895, %r6891, %r6890, 30;
	mov.b64 	%rd585, {%r6895, %r6894};
	xor.b64  	%rd586, %rd585, %rd584;
	shf.l.wrap.b32 	%r6896, %r6890, %r6891, 25;
	shf.l.wrap.b32 	%r6897, %r6891, %r6890, 25;
	mov.b64 	%rd587, {%r6897, %r6896};
	xor.b64  	%rd588, %rd586, %rd587;
	xor.b64  	%rd589, %rd1253, %rd1255;
	xor.b64  	%rd590, %rd1253, %rd1254;
	and.b64  	%rd591, %rd590, %rd589;
	xor.b64  	%rd592, %rd591, %rd1253;
	add.s64 	%rd593, %rd583, %rd592;
	add.s64 	%rd1252, %rd593, %rd588;
	mov.u32 	%r7394, 16;

BB2_90:
	shr.u64 	%rd594, %rd1245, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6898,%dummy}, %rd1245;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6899}, %rd1245;
	}
	shf.r.wrap.b32 	%r6900, %r6899, %r6898, 19;
	shf.r.wrap.b32 	%r6901, %r6898, %r6899, 19;
	mov.b64 	%rd595, {%r6901, %r6900};
	xor.b64  	%rd596, %rd595, %rd594;
	shf.l.wrap.b32 	%r6902, %r6898, %r6899, 3;
	shf.l.wrap.b32 	%r6903, %r6899, %r6898, 3;
	mov.b64 	%rd597, {%r6903, %r6902};
	xor.b64  	%rd598, %rd596, %rd597;
	shr.u64 	%rd599, %rd1261, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6904,%dummy}, %rd1261;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6905}, %rd1261;
	}
	shf.r.wrap.b32 	%r6906, %r6905, %r6904, 1;
	shf.r.wrap.b32 	%r6907, %r6904, %r6905, 1;
	mov.b64 	%rd600, {%r6907, %r6906};
	xor.b64  	%rd601, %rd600, %rd599;
	shf.r.wrap.b32 	%r6908, %r6905, %r6904, 8;
	shf.r.wrap.b32 	%r6909, %r6904, %r6905, 8;
	mov.b64 	%rd602, {%r6909, %r6908};
	xor.b64  	%rd603, %rd601, %rd602;
	add.s64 	%rd604, %rd1250, %rd1260;
	add.s64 	%rd605, %rd604, %rd598;
	add.s64 	%rd1260, %rd605, %rd603;
	shr.u64 	%rd606, %rd1244, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6910,%dummy}, %rd1244;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6911}, %rd1244;
	}
	shf.r.wrap.b32 	%r6912, %r6911, %r6910, 19;
	shf.r.wrap.b32 	%r6913, %r6910, %r6911, 19;
	mov.b64 	%rd607, {%r6913, %r6912};
	xor.b64  	%rd608, %rd607, %rd606;
	shf.l.wrap.b32 	%r6914, %r6910, %r6911, 3;
	shf.l.wrap.b32 	%r6915, %r6911, %r6910, 3;
	mov.b64 	%rd609, {%r6915, %r6914};
	xor.b64  	%rd610, %rd608, %rd609;
	shr.u64 	%rd611, %rd1262, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6916,%dummy}, %rd1262;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6917}, %rd1262;
	}
	shf.r.wrap.b32 	%r6918, %r6917, %r6916, 1;
	shf.r.wrap.b32 	%r6919, %r6916, %r6917, 1;
	mov.b64 	%rd612, {%r6919, %r6918};
	xor.b64  	%rd613, %rd612, %rd611;
	shf.r.wrap.b32 	%r6920, %r6917, %r6916, 8;
	shf.r.wrap.b32 	%r6921, %r6916, %r6917, 8;
	mov.b64 	%rd614, {%r6921, %r6920};
	xor.b64  	%rd615, %rd613, %rd614;
	add.s64 	%rd616, %rd1249, %rd1261;
	add.s64 	%rd617, %rd616, %rd610;
	add.s64 	%rd1261, %rd617, %rd615;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6922,%dummy}, %rd1260;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6923}, %rd1260;
	}
	shf.r.wrap.b32 	%r6924, %r6923, %r6922, 19;
	shf.r.wrap.b32 	%r6925, %r6922, %r6923, 19;
	mov.b64 	%rd618, {%r6925, %r6924};
	shf.l.wrap.b32 	%r6926, %r6922, %r6923, 3;
	shf.l.wrap.b32 	%r6927, %r6923, %r6922, 3;
	mov.b64 	%rd619, {%r6927, %r6926};
	shr.u64 	%rd620, %rd1260, 6;
	xor.b64  	%rd621, %rd618, %rd620;
	xor.b64  	%rd622, %rd621, %rd619;
	shr.u64 	%rd623, %rd1263, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6928,%dummy}, %rd1263;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6929}, %rd1263;
	}
	shf.r.wrap.b32 	%r6930, %r6929, %r6928, 1;
	shf.r.wrap.b32 	%r6931, %r6928, %r6929, 1;
	mov.b64 	%rd624, {%r6931, %r6930};
	xor.b64  	%rd625, %rd624, %rd623;
	shf.r.wrap.b32 	%r6932, %r6929, %r6928, 8;
	shf.r.wrap.b32 	%r6933, %r6928, %r6929, 8;
	mov.b64 	%rd626, {%r6933, %r6932};
	xor.b64  	%rd627, %rd625, %rd626;
	add.s64 	%rd628, %rd1248, %rd1262;
	add.s64 	%rd629, %rd628, %rd622;
	add.s64 	%rd1262, %rd629, %rd627;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6934,%dummy}, %rd1261;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6935}, %rd1261;
	}
	shf.r.wrap.b32 	%r6936, %r6935, %r6934, 19;
	shf.r.wrap.b32 	%r6937, %r6934, %r6935, 19;
	mov.b64 	%rd630, {%r6937, %r6936};
	shf.l.wrap.b32 	%r6938, %r6934, %r6935, 3;
	shf.l.wrap.b32 	%r6939, %r6935, %r6934, 3;
	mov.b64 	%rd631, {%r6939, %r6938};
	shr.u64 	%rd632, %rd1261, 6;
	xor.b64  	%rd633, %rd630, %rd632;
	xor.b64  	%rd634, %rd633, %rd631;
	shr.u64 	%rd635, %rd1264, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6940,%dummy}, %rd1264;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6941}, %rd1264;
	}
	shf.r.wrap.b32 	%r6942, %r6941, %r6940, 1;
	shf.r.wrap.b32 	%r6943, %r6940, %r6941, 1;
	mov.b64 	%rd636, {%r6943, %r6942};
	xor.b64  	%rd637, %rd636, %rd635;
	shf.r.wrap.b32 	%r6944, %r6941, %r6940, 8;
	shf.r.wrap.b32 	%r6945, %r6940, %r6941, 8;
	mov.b64 	%rd638, {%r6945, %r6944};
	xor.b64  	%rd639, %rd637, %rd638;
	add.s64 	%rd640, %rd1247, %rd1263;
	add.s64 	%rd641, %rd640, %rd634;
	add.s64 	%rd1263, %rd641, %rd639;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6946,%dummy}, %rd1262;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6947}, %rd1262;
	}
	shf.r.wrap.b32 	%r6948, %r6947, %r6946, 19;
	shf.r.wrap.b32 	%r6949, %r6946, %r6947, 19;
	mov.b64 	%rd642, {%r6949, %r6948};
	shf.l.wrap.b32 	%r6950, %r6946, %r6947, 3;
	shf.l.wrap.b32 	%r6951, %r6947, %r6946, 3;
	mov.b64 	%rd643, {%r6951, %r6950};
	shr.u64 	%rd644, %rd1262, 6;
	xor.b64  	%rd645, %rd642, %rd644;
	xor.b64  	%rd646, %rd645, %rd643;
	shr.u64 	%rd647, %rd1265, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6952,%dummy}, %rd1265;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6953}, %rd1265;
	}
	shf.r.wrap.b32 	%r6954, %r6953, %r6952, 1;
	shf.r.wrap.b32 	%r6955, %r6952, %r6953, 1;
	mov.b64 	%rd648, {%r6955, %r6954};
	xor.b64  	%rd649, %rd648, %rd647;
	shf.r.wrap.b32 	%r6956, %r6953, %r6952, 8;
	shf.r.wrap.b32 	%r6957, %r6952, %r6953, 8;
	mov.b64 	%rd650, {%r6957, %r6956};
	xor.b64  	%rd651, %rd649, %rd650;
	add.s64 	%rd652, %rd1246, %rd1264;
	add.s64 	%rd653, %rd652, %rd646;
	add.s64 	%rd1264, %rd653, %rd651;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6958,%dummy}, %rd1263;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6959}, %rd1263;
	}
	shf.r.wrap.b32 	%r6960, %r6959, %r6958, 19;
	shf.r.wrap.b32 	%r6961, %r6958, %r6959, 19;
	mov.b64 	%rd654, {%r6961, %r6960};
	shf.l.wrap.b32 	%r6962, %r6958, %r6959, 3;
	shf.l.wrap.b32 	%r6963, %r6959, %r6958, 3;
	mov.b64 	%rd655, {%r6963, %r6962};
	shr.u64 	%rd656, %rd1263, 6;
	xor.b64  	%rd657, %rd654, %rd656;
	xor.b64  	%rd658, %rd657, %rd655;
	shr.u64 	%rd659, %rd1266, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6964,%dummy}, %rd1266;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6965}, %rd1266;
	}
	shf.r.wrap.b32 	%r6966, %r6965, %r6964, 1;
	shf.r.wrap.b32 	%r6967, %r6964, %r6965, 1;
	mov.b64 	%rd660, {%r6967, %r6966};
	xor.b64  	%rd661, %rd660, %rd659;
	shf.r.wrap.b32 	%r6968, %r6965, %r6964, 8;
	shf.r.wrap.b32 	%r6969, %r6964, %r6965, 8;
	mov.b64 	%rd662, {%r6969, %r6968};
	xor.b64  	%rd663, %rd661, %rd662;
	add.s64 	%rd664, %rd1245, %rd1265;
	add.s64 	%rd665, %rd664, %rd658;
	add.s64 	%rd1265, %rd665, %rd663;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6970,%dummy}, %rd1264;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6971}, %rd1264;
	}
	shf.r.wrap.b32 	%r6972, %r6971, %r6970, 19;
	shf.r.wrap.b32 	%r6973, %r6970, %r6971, 19;
	mov.b64 	%rd666, {%r6973, %r6972};
	shf.l.wrap.b32 	%r6974, %r6970, %r6971, 3;
	shf.l.wrap.b32 	%r6975, %r6971, %r6970, 3;
	mov.b64 	%rd667, {%r6975, %r6974};
	shr.u64 	%rd668, %rd1264, 6;
	xor.b64  	%rd669, %rd666, %rd668;
	xor.b64  	%rd670, %rd669, %rd667;
	shr.u64 	%rd671, %rd1267, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6976,%dummy}, %rd1267;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6977}, %rd1267;
	}
	shf.r.wrap.b32 	%r6978, %r6977, %r6976, 1;
	shf.r.wrap.b32 	%r6979, %r6976, %r6977, 1;
	mov.b64 	%rd672, {%r6979, %r6978};
	xor.b64  	%rd673, %rd672, %rd671;
	shf.r.wrap.b32 	%r6980, %r6977, %r6976, 8;
	shf.r.wrap.b32 	%r6981, %r6976, %r6977, 8;
	mov.b64 	%rd674, {%r6981, %r6980};
	xor.b64  	%rd675, %rd673, %rd674;
	add.s64 	%rd676, %rd1244, %rd1266;
	add.s64 	%rd677, %rd676, %rd670;
	add.s64 	%rd1266, %rd677, %rd675;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6982,%dummy}, %rd1265;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6983}, %rd1265;
	}
	shf.r.wrap.b32 	%r6984, %r6983, %r6982, 19;
	shf.r.wrap.b32 	%r6985, %r6982, %r6983, 19;
	mov.b64 	%rd678, {%r6985, %r6984};
	shf.l.wrap.b32 	%r6986, %r6982, %r6983, 3;
	shf.l.wrap.b32 	%r6987, %r6983, %r6982, 3;
	mov.b64 	%rd679, {%r6987, %r6986};
	shr.u64 	%rd680, %rd1265, 6;
	xor.b64  	%rd681, %rd678, %rd680;
	xor.b64  	%rd682, %rd681, %rd679;
	shr.u64 	%rd683, %rd1251, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6988,%dummy}, %rd1251;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6989}, %rd1251;
	}
	shf.r.wrap.b32 	%r6990, %r6989, %r6988, 1;
	shf.r.wrap.b32 	%r6991, %r6988, %r6989, 1;
	mov.b64 	%rd684, {%r6991, %r6990};
	xor.b64  	%rd685, %rd684, %rd683;
	shf.r.wrap.b32 	%r6992, %r6989, %r6988, 8;
	shf.r.wrap.b32 	%r6993, %r6988, %r6989, 8;
	mov.b64 	%rd686, {%r6993, %r6992};
	xor.b64  	%rd687, %rd685, %rd686;
	add.s64 	%rd688, %rd1260, %rd1267;
	add.s64 	%rd689, %rd688, %rd682;
	add.s64 	%rd1267, %rd689, %rd687;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6994,%dummy}, %rd1266;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6995}, %rd1266;
	}
	shf.r.wrap.b32 	%r6996, %r6995, %r6994, 19;
	shf.r.wrap.b32 	%r6997, %r6994, %r6995, 19;
	mov.b64 	%rd690, {%r6997, %r6996};
	shf.l.wrap.b32 	%r6998, %r6994, %r6995, 3;
	shf.l.wrap.b32 	%r6999, %r6995, %r6994, 3;
	mov.b64 	%rd691, {%r6999, %r6998};
	shr.u64 	%rd692, %rd1266, 6;
	xor.b64  	%rd693, %rd690, %rd692;
	xor.b64  	%rd694, %rd693, %rd691;
	shr.u64 	%rd695, %rd1250, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7000,%dummy}, %rd1250;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7001}, %rd1250;
	}
	shf.r.wrap.b32 	%r7002, %r7001, %r7000, 1;
	shf.r.wrap.b32 	%r7003, %r7000, %r7001, 1;
	mov.b64 	%rd696, {%r7003, %r7002};
	xor.b64  	%rd697, %rd696, %rd695;
	shf.r.wrap.b32 	%r7004, %r7001, %r7000, 8;
	shf.r.wrap.b32 	%r7005, %r7000, %r7001, 8;
	mov.b64 	%rd698, {%r7005, %r7004};
	xor.b64  	%rd699, %rd697, %rd698;
	add.s64 	%rd700, %rd1261, %rd1251;
	add.s64 	%rd701, %rd700, %rd694;
	add.s64 	%rd1251, %rd701, %rd699;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7006,%dummy}, %rd1267;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7007}, %rd1267;
	}
	shf.r.wrap.b32 	%r7008, %r7007, %r7006, 19;
	shf.r.wrap.b32 	%r7009, %r7006, %r7007, 19;
	mov.b64 	%rd702, {%r7009, %r7008};
	shf.l.wrap.b32 	%r7010, %r7006, %r7007, 3;
	shf.l.wrap.b32 	%r7011, %r7007, %r7006, 3;
	mov.b64 	%rd703, {%r7011, %r7010};
	shr.u64 	%rd704, %rd1267, 6;
	xor.b64  	%rd705, %rd702, %rd704;
	xor.b64  	%rd706, %rd705, %rd703;
	shr.u64 	%rd707, %rd1249, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7012,%dummy}, %rd1249;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7013}, %rd1249;
	}
	shf.r.wrap.b32 	%r7014, %r7013, %r7012, 1;
	shf.r.wrap.b32 	%r7015, %r7012, %r7013, 1;
	mov.b64 	%rd708, {%r7015, %r7014};
	xor.b64  	%rd709, %rd708, %rd707;
	shf.r.wrap.b32 	%r7016, %r7013, %r7012, 8;
	shf.r.wrap.b32 	%r7017, %r7012, %r7013, 8;
	mov.b64 	%rd710, {%r7017, %r7016};
	xor.b64  	%rd711, %rd709, %rd710;
	add.s64 	%rd712, %rd1262, %rd1250;
	add.s64 	%rd713, %rd712, %rd706;
	add.s64 	%rd1250, %rd713, %rd711;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7018,%dummy}, %rd1251;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7019}, %rd1251;
	}
	shf.r.wrap.b32 	%r7020, %r7019, %r7018, 19;
	shf.r.wrap.b32 	%r7021, %r7018, %r7019, 19;
	mov.b64 	%rd714, {%r7021, %r7020};
	shf.l.wrap.b32 	%r7022, %r7018, %r7019, 3;
	shf.l.wrap.b32 	%r7023, %r7019, %r7018, 3;
	mov.b64 	%rd715, {%r7023, %r7022};
	shr.u64 	%rd716, %rd1251, 6;
	xor.b64  	%rd717, %rd714, %rd716;
	xor.b64  	%rd718, %rd717, %rd715;
	shr.u64 	%rd719, %rd1248, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7024,%dummy}, %rd1248;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7025}, %rd1248;
	}
	shf.r.wrap.b32 	%r7026, %r7025, %r7024, 1;
	shf.r.wrap.b32 	%r7027, %r7024, %r7025, 1;
	mov.b64 	%rd720, {%r7027, %r7026};
	xor.b64  	%rd721, %rd720, %rd719;
	shf.r.wrap.b32 	%r7028, %r7025, %r7024, 8;
	shf.r.wrap.b32 	%r7029, %r7024, %r7025, 8;
	mov.b64 	%rd722, {%r7029, %r7028};
	xor.b64  	%rd723, %rd721, %rd722;
	add.s64 	%rd724, %rd1263, %rd1249;
	add.s64 	%rd725, %rd724, %rd718;
	add.s64 	%rd1249, %rd725, %rd723;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7030,%dummy}, %rd1250;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7031}, %rd1250;
	}
	shf.r.wrap.b32 	%r7032, %r7031, %r7030, 19;
	shf.r.wrap.b32 	%r7033, %r7030, %r7031, 19;
	mov.b64 	%rd726, {%r7033, %r7032};
	shf.l.wrap.b32 	%r7034, %r7030, %r7031, 3;
	shf.l.wrap.b32 	%r7035, %r7031, %r7030, 3;
	mov.b64 	%rd727, {%r7035, %r7034};
	shr.u64 	%rd728, %rd1250, 6;
	xor.b64  	%rd729, %rd726, %rd728;
	xor.b64  	%rd730, %rd729, %rd727;
	shr.u64 	%rd731, %rd1247, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7036,%dummy}, %rd1247;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7037}, %rd1247;
	}
	shf.r.wrap.b32 	%r7038, %r7037, %r7036, 1;
	shf.r.wrap.b32 	%r7039, %r7036, %r7037, 1;
	mov.b64 	%rd732, {%r7039, %r7038};
	xor.b64  	%rd733, %rd732, %rd731;
	shf.r.wrap.b32 	%r7040, %r7037, %r7036, 8;
	shf.r.wrap.b32 	%r7041, %r7036, %r7037, 8;
	mov.b64 	%rd734, {%r7041, %r7040};
	xor.b64  	%rd735, %rd733, %rd734;
	add.s64 	%rd736, %rd1264, %rd1248;
	add.s64 	%rd737, %rd736, %rd730;
	add.s64 	%rd1248, %rd737, %rd735;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7042,%dummy}, %rd1249;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7043}, %rd1249;
	}
	shf.r.wrap.b32 	%r7044, %r7043, %r7042, 19;
	shf.r.wrap.b32 	%r7045, %r7042, %r7043, 19;
	mov.b64 	%rd738, {%r7045, %r7044};
	shf.l.wrap.b32 	%r7046, %r7042, %r7043, 3;
	shf.l.wrap.b32 	%r7047, %r7043, %r7042, 3;
	mov.b64 	%rd739, {%r7047, %r7046};
	shr.u64 	%rd740, %rd1249, 6;
	xor.b64  	%rd741, %rd738, %rd740;
	xor.b64  	%rd742, %rd741, %rd739;
	shr.u64 	%rd743, %rd1246, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7048,%dummy}, %rd1246;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7049}, %rd1246;
	}
	shf.r.wrap.b32 	%r7050, %r7049, %r7048, 1;
	shf.r.wrap.b32 	%r7051, %r7048, %r7049, 1;
	mov.b64 	%rd744, {%r7051, %r7050};
	xor.b64  	%rd745, %rd744, %rd743;
	shf.r.wrap.b32 	%r7052, %r7049, %r7048, 8;
	shf.r.wrap.b32 	%r7053, %r7048, %r7049, 8;
	mov.b64 	%rd746, {%r7053, %r7052};
	xor.b64  	%rd747, %rd745, %rd746;
	add.s64 	%rd748, %rd1265, %rd1247;
	add.s64 	%rd749, %rd748, %rd742;
	add.s64 	%rd1247, %rd749, %rd747;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7054,%dummy}, %rd1248;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7055}, %rd1248;
	}
	shf.r.wrap.b32 	%r7056, %r7055, %r7054, 19;
	shf.r.wrap.b32 	%r7057, %r7054, %r7055, 19;
	mov.b64 	%rd750, {%r7057, %r7056};
	shf.l.wrap.b32 	%r7058, %r7054, %r7055, 3;
	shf.l.wrap.b32 	%r7059, %r7055, %r7054, 3;
	mov.b64 	%rd751, {%r7059, %r7058};
	shr.u64 	%rd752, %rd1248, 6;
	xor.b64  	%rd753, %rd750, %rd752;
	xor.b64  	%rd754, %rd753, %rd751;
	shr.u64 	%rd755, %rd1245, 7;
	shf.r.wrap.b32 	%r7060, %r6899, %r6898, 1;
	shf.r.wrap.b32 	%r7061, %r6898, %r6899, 1;
	mov.b64 	%rd756, {%r7061, %r7060};
	xor.b64  	%rd757, %rd756, %rd755;
	shf.r.wrap.b32 	%r7062, %r6899, %r6898, 8;
	shf.r.wrap.b32 	%r7063, %r6898, %r6899, 8;
	mov.b64 	%rd758, {%r7063, %r7062};
	xor.b64  	%rd759, %rd757, %rd758;
	add.s64 	%rd760, %rd1266, %rd1246;
	add.s64 	%rd761, %rd760, %rd754;
	add.s64 	%rd1246, %rd761, %rd759;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7064,%dummy}, %rd1247;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7065}, %rd1247;
	}
	shf.r.wrap.b32 	%r7066, %r7065, %r7064, 19;
	shf.r.wrap.b32 	%r7067, %r7064, %r7065, 19;
	mov.b64 	%rd762, {%r7067, %r7066};
	shf.l.wrap.b32 	%r7068, %r7064, %r7065, 3;
	shf.l.wrap.b32 	%r7069, %r7065, %r7064, 3;
	mov.b64 	%rd763, {%r7069, %r7068};
	shr.u64 	%rd764, %rd1247, 6;
	xor.b64  	%rd765, %rd762, %rd764;
	xor.b64  	%rd766, %rd765, %rd763;
	shr.u64 	%rd767, %rd1244, 7;
	shf.r.wrap.b32 	%r7070, %r6911, %r6910, 1;
	shf.r.wrap.b32 	%r7071, %r6910, %r6911, 1;
	mov.b64 	%rd768, {%r7071, %r7070};
	xor.b64  	%rd769, %rd768, %rd767;
	shf.r.wrap.b32 	%r7072, %r6911, %r6910, 8;
	shf.r.wrap.b32 	%r7073, %r6910, %r6911, 8;
	mov.b64 	%rd770, {%r7073, %r7072};
	xor.b64  	%rd771, %rd769, %rd770;
	add.s64 	%rd772, %rd1267, %rd1245;
	add.s64 	%rd773, %rd772, %rd766;
	add.s64 	%rd1245, %rd773, %rd771;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7074,%dummy}, %rd1246;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7075}, %rd1246;
	}
	shf.r.wrap.b32 	%r7076, %r7075, %r7074, 19;
	shf.r.wrap.b32 	%r7077, %r7074, %r7075, 19;
	mov.b64 	%rd774, {%r7077, %r7076};
	shf.l.wrap.b32 	%r7078, %r7074, %r7075, 3;
	shf.l.wrap.b32 	%r7079, %r7075, %r7074, 3;
	mov.b64 	%rd775, {%r7079, %r7078};
	shr.u64 	%rd776, %rd1246, 6;
	xor.b64  	%rd777, %rd774, %rd776;
	xor.b64  	%rd778, %rd777, %rd775;
	shf.r.wrap.b32 	%r7080, %r6923, %r6922, 1;
	shf.r.wrap.b32 	%r7081, %r6922, %r6923, 1;
	mov.b64 	%rd779, {%r7081, %r7080};
	shf.r.wrap.b32 	%r7082, %r6923, %r6922, 8;
	shf.r.wrap.b32 	%r7083, %r6922, %r6923, 8;
	mov.b64 	%rd780, {%r7083, %r7082};
	shr.u64 	%rd781, %rd1260, 7;
	xor.b64  	%rd782, %rd779, %rd781;
	xor.b64  	%rd783, %rd782, %rd780;
	add.s64 	%rd784, %rd1251, %rd1244;
	add.s64 	%rd785, %rd784, %rd778;
	add.s64 	%rd1244, %rd785, %rd783;
	mul.wide.s32 	%rd786, %r7394, 8;
	mov.u64 	%rd787, k_sha512;
	add.s64 	%rd788, %rd787, %rd786;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7084,%dummy}, %rd1256;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7085}, %rd1256;
	}
	shf.r.wrap.b32 	%r7086, %r7085, %r7084, 18;
	shf.r.wrap.b32 	%r7087, %r7084, %r7085, 18;
	mov.b64 	%rd789, {%r7087, %r7086};
	shf.r.wrap.b32 	%r7088, %r7085, %r7084, 14;
	shf.r.wrap.b32 	%r7089, %r7084, %r7085, 14;
	mov.b64 	%rd790, {%r7089, %r7088};
	xor.b64  	%rd791, %rd789, %rd790;
	shf.l.wrap.b32 	%r7090, %r7084, %r7085, 23;
	shf.l.wrap.b32 	%r7091, %r7085, %r7084, 23;
	mov.b64 	%rd792, {%r7091, %r7090};
	xor.b64  	%rd793, %rd791, %rd792;
	xor.b64  	%rd794, %rd1257, %rd1258;
	and.b64  	%rd795, %rd794, %rd1256;
	xor.b64  	%rd796, %rd795, %rd1258;
	add.s64 	%rd797, %rd796, %rd1259;
	add.s64 	%rd798, %rd797, %rd1260;
	ld.const.u64 	%rd799, [%rd788];
	add.s64 	%rd800, %rd798, %rd799;
	add.s64 	%rd801, %rd800, %rd793;
	add.s64 	%rd802, %rd801, %rd1255;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7092}, %rd1252;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7093,%dummy}, %rd1252;
	}
	shf.l.wrap.b32 	%r7094, %r7093, %r7092, 30;
	shf.l.wrap.b32 	%r7095, %r7092, %r7093, 30;
	mov.b64 	%rd803, {%r7095, %r7094};
	shf.r.wrap.b32 	%r7096, %r7092, %r7093, 28;
	shf.r.wrap.b32 	%r7097, %r7093, %r7092, 28;
	mov.b64 	%rd804, {%r7097, %r7096};
	xor.b64  	%rd805, %rd803, %rd804;
	shf.l.wrap.b32 	%r7098, %r7093, %r7092, 25;
	shf.l.wrap.b32 	%r7099, %r7092, %r7093, 25;
	mov.b64 	%rd806, {%r7099, %r7098};
	xor.b64  	%rd807, %rd805, %rd806;
	xor.b64  	%rd808, %rd1252, %rd1253;
	xor.b64  	%rd809, %rd1252, %rd1254;
	and.b64  	%rd810, %rd808, %rd809;
	xor.b64  	%rd811, %rd810, %rd1252;
	add.s64 	%rd812, %rd801, %rd811;
	add.s64 	%rd813, %rd812, %rd807;
	add.s32 	%r7100, %r7394, 1;
	mul.wide.s32 	%rd814, %r7100, 8;
	add.s64 	%rd815, %rd787, %rd814;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7101,%dummy}, %rd802;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7102}, %rd802;
	}
	shf.r.wrap.b32 	%r7103, %r7102, %r7101, 14;
	shf.r.wrap.b32 	%r7104, %r7101, %r7102, 14;
	mov.b64 	%rd816, {%r7104, %r7103};
	shf.r.wrap.b32 	%r7105, %r7102, %r7101, 18;
	shf.r.wrap.b32 	%r7106, %r7101, %r7102, 18;
	mov.b64 	%rd817, {%r7106, %r7105};
	xor.b64  	%rd818, %rd817, %rd816;
	shf.l.wrap.b32 	%r7107, %r7101, %r7102, 23;
	shf.l.wrap.b32 	%r7108, %r7102, %r7101, 23;
	mov.b64 	%rd819, {%r7108, %r7107};
	xor.b64  	%rd820, %rd818, %rd819;
	xor.b64  	%rd821, %rd1256, %rd1257;
	and.b64  	%rd822, %rd802, %rd821;
	xor.b64  	%rd823, %rd822, %rd1257;
	add.s64 	%rd824, %rd1261, %rd1258;
	ld.const.u64 	%rd825, [%rd815];
	add.s64 	%rd826, %rd824, %rd825;
	add.s64 	%rd827, %rd826, %rd823;
	add.s64 	%rd828, %rd827, %rd820;
	add.s64 	%rd829, %rd828, %rd1254;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7109,%dummy}, %rd813;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7110}, %rd813;
	}
	shf.r.wrap.b32 	%r7111, %r7110, %r7109, 28;
	shf.r.wrap.b32 	%r7112, %r7109, %r7110, 28;
	mov.b64 	%rd830, {%r7112, %r7111};
	shf.l.wrap.b32 	%r7113, %r7109, %r7110, 30;
	shf.l.wrap.b32 	%r7114, %r7110, %r7109, 30;
	mov.b64 	%rd831, {%r7114, %r7113};
	xor.b64  	%rd832, %rd831, %rd830;
	shf.l.wrap.b32 	%r7115, %r7109, %r7110, 25;
	shf.l.wrap.b32 	%r7116, %r7110, %r7109, 25;
	mov.b64 	%rd833, {%r7116, %r7115};
	xor.b64  	%rd834, %rd832, %rd833;
	xor.b64  	%rd835, %rd813, %rd1253;
	xor.b64  	%rd836, %rd813, %rd1252;
	and.b64  	%rd837, %rd836, %rd835;
	xor.b64  	%rd838, %rd837, %rd813;
	add.s64 	%rd839, %rd828, %rd838;
	add.s64 	%rd840, %rd839, %rd834;
	add.s32 	%r7117, %r7394, 2;
	mul.wide.s32 	%rd841, %r7117, 8;
	add.s64 	%rd842, %rd787, %rd841;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7118,%dummy}, %rd829;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7119}, %rd829;
	}
	shf.r.wrap.b32 	%r7120, %r7119, %r7118, 14;
	shf.r.wrap.b32 	%r7121, %r7118, %r7119, 14;
	mov.b64 	%rd843, {%r7121, %r7120};
	shf.r.wrap.b32 	%r7122, %r7119, %r7118, 18;
	shf.r.wrap.b32 	%r7123, %r7118, %r7119, 18;
	mov.b64 	%rd844, {%r7123, %r7122};
	xor.b64  	%rd845, %rd844, %rd843;
	shf.l.wrap.b32 	%r7124, %r7118, %r7119, 23;
	shf.l.wrap.b32 	%r7125, %r7119, %r7118, 23;
	mov.b64 	%rd846, {%r7125, %r7124};
	xor.b64  	%rd847, %rd845, %rd846;
	xor.b64  	%rd848, %rd802, %rd1256;
	and.b64  	%rd849, %rd829, %rd848;
	xor.b64  	%rd850, %rd849, %rd1256;
	add.s64 	%rd851, %rd1262, %rd1257;
	ld.const.u64 	%rd852, [%rd842];
	add.s64 	%rd853, %rd851, %rd852;
	add.s64 	%rd854, %rd853, %rd850;
	add.s64 	%rd855, %rd854, %rd847;
	add.s64 	%rd856, %rd855, %rd1253;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7126,%dummy}, %rd840;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7127}, %rd840;
	}
	shf.r.wrap.b32 	%r7128, %r7127, %r7126, 28;
	shf.r.wrap.b32 	%r7129, %r7126, %r7127, 28;
	mov.b64 	%rd857, {%r7129, %r7128};
	shf.l.wrap.b32 	%r7130, %r7126, %r7127, 30;
	shf.l.wrap.b32 	%r7131, %r7127, %r7126, 30;
	mov.b64 	%rd858, {%r7131, %r7130};
	xor.b64  	%rd859, %rd858, %rd857;
	shf.l.wrap.b32 	%r7132, %r7126, %r7127, 25;
	shf.l.wrap.b32 	%r7133, %r7127, %r7126, 25;
	mov.b64 	%rd860, {%r7133, %r7132};
	xor.b64  	%rd861, %rd859, %rd860;
	xor.b64  	%rd862, %rd840, %rd1252;
	xor.b64  	%rd863, %rd840, %rd813;
	and.b64  	%rd864, %rd863, %rd862;
	xor.b64  	%rd865, %rd864, %rd840;
	add.s64 	%rd866, %rd855, %rd865;
	add.s64 	%rd867, %rd866, %rd861;
	add.s32 	%r7134, %r7394, 3;
	mul.wide.s32 	%rd868, %r7134, 8;
	add.s64 	%rd869, %rd787, %rd868;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7135,%dummy}, %rd856;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7136}, %rd856;
	}
	shf.r.wrap.b32 	%r7137, %r7136, %r7135, 14;
	shf.r.wrap.b32 	%r7138, %r7135, %r7136, 14;
	mov.b64 	%rd870, {%r7138, %r7137};
	shf.r.wrap.b32 	%r7139, %r7136, %r7135, 18;
	shf.r.wrap.b32 	%r7140, %r7135, %r7136, 18;
	mov.b64 	%rd871, {%r7140, %r7139};
	xor.b64  	%rd872, %rd871, %rd870;
	shf.l.wrap.b32 	%r7141, %r7135, %r7136, 23;
	shf.l.wrap.b32 	%r7142, %r7136, %r7135, 23;
	mov.b64 	%rd873, {%r7142, %r7141};
	xor.b64  	%rd874, %rd872, %rd873;
	xor.b64  	%rd875, %rd829, %rd802;
	and.b64  	%rd876, %rd856, %rd875;
	xor.b64  	%rd877, %rd876, %rd802;
	add.s64 	%rd878, %rd1263, %rd1256;
	ld.const.u64 	%rd879, [%rd869];
	add.s64 	%rd880, %rd878, %rd879;
	add.s64 	%rd881, %rd880, %rd877;
	add.s64 	%rd882, %rd881, %rd874;
	add.s64 	%rd883, %rd882, %rd1252;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7143,%dummy}, %rd867;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7144}, %rd867;
	}
	shf.r.wrap.b32 	%r7145, %r7144, %r7143, 28;
	shf.r.wrap.b32 	%r7146, %r7143, %r7144, 28;
	mov.b64 	%rd884, {%r7146, %r7145};
	shf.l.wrap.b32 	%r7147, %r7143, %r7144, 30;
	shf.l.wrap.b32 	%r7148, %r7144, %r7143, 30;
	mov.b64 	%rd885, {%r7148, %r7147};
	xor.b64  	%rd886, %rd885, %rd884;
	shf.l.wrap.b32 	%r7149, %r7143, %r7144, 25;
	shf.l.wrap.b32 	%r7150, %r7144, %r7143, 25;
	mov.b64 	%rd887, {%r7150, %r7149};
	xor.b64  	%rd888, %rd886, %rd887;
	xor.b64  	%rd889, %rd867, %rd813;
	xor.b64  	%rd890, %rd867, %rd840;
	and.b64  	%rd891, %rd890, %rd889;
	xor.b64  	%rd892, %rd891, %rd867;
	add.s64 	%rd893, %rd882, %rd892;
	add.s64 	%rd894, %rd893, %rd888;
	add.s32 	%r7151, %r7394, 4;
	mul.wide.s32 	%rd895, %r7151, 8;
	add.s64 	%rd896, %rd787, %rd895;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7152,%dummy}, %rd883;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7153}, %rd883;
	}
	shf.r.wrap.b32 	%r7154, %r7153, %r7152, 14;
	shf.r.wrap.b32 	%r7155, %r7152, %r7153, 14;
	mov.b64 	%rd897, {%r7155, %r7154};
	shf.r.wrap.b32 	%r7156, %r7153, %r7152, 18;
	shf.r.wrap.b32 	%r7157, %r7152, %r7153, 18;
	mov.b64 	%rd898, {%r7157, %r7156};
	xor.b64  	%rd899, %rd898, %rd897;
	shf.l.wrap.b32 	%r7158, %r7152, %r7153, 23;
	shf.l.wrap.b32 	%r7159, %r7153, %r7152, 23;
	mov.b64 	%rd900, {%r7159, %r7158};
	xor.b64  	%rd901, %rd899, %rd900;
	xor.b64  	%rd902, %rd856, %rd829;
	and.b64  	%rd903, %rd883, %rd902;
	xor.b64  	%rd904, %rd903, %rd829;
	add.s64 	%rd905, %rd802, %rd1264;
	ld.const.u64 	%rd906, [%rd896];
	add.s64 	%rd907, %rd905, %rd906;
	add.s64 	%rd908, %rd907, %rd904;
	add.s64 	%rd909, %rd908, %rd901;
	add.s64 	%rd910, %rd909, %rd813;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7160,%dummy}, %rd894;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7161}, %rd894;
	}
	shf.r.wrap.b32 	%r7162, %r7161, %r7160, 28;
	shf.r.wrap.b32 	%r7163, %r7160, %r7161, 28;
	mov.b64 	%rd911, {%r7163, %r7162};
	shf.l.wrap.b32 	%r7164, %r7160, %r7161, 30;
	shf.l.wrap.b32 	%r7165, %r7161, %r7160, 30;
	mov.b64 	%rd912, {%r7165, %r7164};
	xor.b64  	%rd913, %rd912, %rd911;
	shf.l.wrap.b32 	%r7166, %r7160, %r7161, 25;
	shf.l.wrap.b32 	%r7167, %r7161, %r7160, 25;
	mov.b64 	%rd914, {%r7167, %r7166};
	xor.b64  	%rd915, %rd913, %rd914;
	xor.b64  	%rd916, %rd894, %rd840;
	xor.b64  	%rd917, %rd894, %rd867;
	and.b64  	%rd918, %rd917, %rd916;
	xor.b64  	%rd919, %rd918, %rd894;
	add.s64 	%rd920, %rd909, %rd919;
	add.s64 	%rd921, %rd920, %rd915;
	add.s32 	%r7168, %r7394, 5;
	mul.wide.s32 	%rd922, %r7168, 8;
	add.s64 	%rd923, %rd787, %rd922;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7169,%dummy}, %rd910;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7170}, %rd910;
	}
	shf.r.wrap.b32 	%r7171, %r7170, %r7169, 14;
	shf.r.wrap.b32 	%r7172, %r7169, %r7170, 14;
	mov.b64 	%rd924, {%r7172, %r7171};
	shf.r.wrap.b32 	%r7173, %r7170, %r7169, 18;
	shf.r.wrap.b32 	%r7174, %r7169, %r7170, 18;
	mov.b64 	%rd925, {%r7174, %r7173};
	xor.b64  	%rd926, %rd925, %rd924;
	shf.l.wrap.b32 	%r7175, %r7169, %r7170, 23;
	shf.l.wrap.b32 	%r7176, %r7170, %r7169, 23;
	mov.b64 	%rd927, {%r7176, %r7175};
	xor.b64  	%rd928, %rd926, %rd927;
	xor.b64  	%rd929, %rd883, %rd856;
	and.b64  	%rd930, %rd910, %rd929;
	xor.b64  	%rd931, %rd930, %rd856;
	add.s64 	%rd932, %rd829, %rd1265;
	ld.const.u64 	%rd933, [%rd923];
	add.s64 	%rd934, %rd932, %rd933;
	add.s64 	%rd935, %rd934, %rd931;
	add.s64 	%rd936, %rd935, %rd928;
	add.s64 	%rd937, %rd936, %rd840;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7177,%dummy}, %rd921;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7178}, %rd921;
	}
	shf.r.wrap.b32 	%r7179, %r7178, %r7177, 28;
	shf.r.wrap.b32 	%r7180, %r7177, %r7178, 28;
	mov.b64 	%rd938, {%r7180, %r7179};
	shf.l.wrap.b32 	%r7181, %r7177, %r7178, 30;
	shf.l.wrap.b32 	%r7182, %r7178, %r7177, 30;
	mov.b64 	%rd939, {%r7182, %r7181};
	xor.b64  	%rd940, %rd939, %rd938;
	shf.l.wrap.b32 	%r7183, %r7177, %r7178, 25;
	shf.l.wrap.b32 	%r7184, %r7178, %r7177, 25;
	mov.b64 	%rd941, {%r7184, %r7183};
	xor.b64  	%rd942, %rd940, %rd941;
	xor.b64  	%rd943, %rd921, %rd867;
	xor.b64  	%rd944, %rd921, %rd894;
	and.b64  	%rd945, %rd944, %rd943;
	xor.b64  	%rd946, %rd945, %rd921;
	add.s64 	%rd947, %rd936, %rd946;
	add.s64 	%rd948, %rd947, %rd942;
	add.s32 	%r7185, %r7394, 6;
	mul.wide.s32 	%rd949, %r7185, 8;
	add.s64 	%rd950, %rd787, %rd949;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7186,%dummy}, %rd937;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7187}, %rd937;
	}
	shf.r.wrap.b32 	%r7188, %r7187, %r7186, 14;
	shf.r.wrap.b32 	%r7189, %r7186, %r7187, 14;
	mov.b64 	%rd951, {%r7189, %r7188};
	shf.r.wrap.b32 	%r7190, %r7187, %r7186, 18;
	shf.r.wrap.b32 	%r7191, %r7186, %r7187, 18;
	mov.b64 	%rd952, {%r7191, %r7190};
	xor.b64  	%rd953, %rd952, %rd951;
	shf.l.wrap.b32 	%r7192, %r7186, %r7187, 23;
	shf.l.wrap.b32 	%r7193, %r7187, %r7186, 23;
	mov.b64 	%rd954, {%r7193, %r7192};
	xor.b64  	%rd955, %rd953, %rd954;
	xor.b64  	%rd956, %rd910, %rd883;
	and.b64  	%rd957, %rd937, %rd956;
	xor.b64  	%rd958, %rd957, %rd883;
	add.s64 	%rd959, %rd856, %rd1266;
	ld.const.u64 	%rd960, [%rd950];
	add.s64 	%rd961, %rd959, %rd960;
	add.s64 	%rd962, %rd961, %rd958;
	add.s64 	%rd963, %rd962, %rd955;
	add.s64 	%rd964, %rd963, %rd867;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7194,%dummy}, %rd948;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7195}, %rd948;
	}
	shf.r.wrap.b32 	%r7196, %r7195, %r7194, 28;
	shf.r.wrap.b32 	%r7197, %r7194, %r7195, 28;
	mov.b64 	%rd965, {%r7197, %r7196};
	shf.l.wrap.b32 	%r7198, %r7194, %r7195, 30;
	shf.l.wrap.b32 	%r7199, %r7195, %r7194, 30;
	mov.b64 	%rd966, {%r7199, %r7198};
	xor.b64  	%rd967, %rd966, %rd965;
	shf.l.wrap.b32 	%r7200, %r7194, %r7195, 25;
	shf.l.wrap.b32 	%r7201, %r7195, %r7194, 25;
	mov.b64 	%rd968, {%r7201, %r7200};
	xor.b64  	%rd969, %rd967, %rd968;
	xor.b64  	%rd970, %rd948, %rd894;
	xor.b64  	%rd971, %rd948, %rd921;
	and.b64  	%rd972, %rd971, %rd970;
	xor.b64  	%rd973, %rd972, %rd948;
	add.s64 	%rd974, %rd963, %rd973;
	add.s64 	%rd975, %rd974, %rd969;
	add.s32 	%r7202, %r7394, 7;
	mul.wide.s32 	%rd976, %r7202, 8;
	add.s64 	%rd977, %rd787, %rd976;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7203,%dummy}, %rd964;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7204}, %rd964;
	}
	shf.r.wrap.b32 	%r7205, %r7204, %r7203, 14;
	shf.r.wrap.b32 	%r7206, %r7203, %r7204, 14;
	mov.b64 	%rd978, {%r7206, %r7205};
	shf.r.wrap.b32 	%r7207, %r7204, %r7203, 18;
	shf.r.wrap.b32 	%r7208, %r7203, %r7204, 18;
	mov.b64 	%rd979, {%r7208, %r7207};
	xor.b64  	%rd980, %rd979, %rd978;
	shf.l.wrap.b32 	%r7209, %r7203, %r7204, 23;
	shf.l.wrap.b32 	%r7210, %r7204, %r7203, 23;
	mov.b64 	%rd981, {%r7210, %r7209};
	xor.b64  	%rd982, %rd980, %rd981;
	xor.b64  	%rd983, %rd937, %rd910;
	and.b64  	%rd984, %rd964, %rd983;
	xor.b64  	%rd985, %rd984, %rd910;
	add.s64 	%rd986, %rd883, %rd1267;
	ld.const.u64 	%rd987, [%rd977];
	add.s64 	%rd988, %rd986, %rd987;
	add.s64 	%rd989, %rd988, %rd985;
	add.s64 	%rd990, %rd989, %rd982;
	add.s64 	%rd991, %rd990, %rd894;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7211,%dummy}, %rd975;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7212}, %rd975;
	}
	shf.r.wrap.b32 	%r7213, %r7212, %r7211, 28;
	shf.r.wrap.b32 	%r7214, %r7211, %r7212, 28;
	mov.b64 	%rd992, {%r7214, %r7213};
	shf.l.wrap.b32 	%r7215, %r7211, %r7212, 30;
	shf.l.wrap.b32 	%r7216, %r7212, %r7211, 30;
	mov.b64 	%rd993, {%r7216, %r7215};
	xor.b64  	%rd994, %rd993, %rd992;
	shf.l.wrap.b32 	%r7217, %r7211, %r7212, 25;
	shf.l.wrap.b32 	%r7218, %r7212, %r7211, 25;
	mov.b64 	%rd995, {%r7218, %r7217};
	xor.b64  	%rd996, %rd994, %rd995;
	xor.b64  	%rd997, %rd975, %rd921;
	xor.b64  	%rd998, %rd975, %rd948;
	and.b64  	%rd999, %rd998, %rd997;
	xor.b64  	%rd1000, %rd999, %rd975;
	add.s64 	%rd1001, %rd990, %rd1000;
	add.s64 	%rd1002, %rd1001, %rd996;
	add.s32 	%r7219, %r7394, 8;
	mul.wide.s32 	%rd1003, %r7219, 8;
	add.s64 	%rd1004, %rd787, %rd1003;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7220,%dummy}, %rd991;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7221}, %rd991;
	}
	shf.r.wrap.b32 	%r7222, %r7221, %r7220, 14;
	shf.r.wrap.b32 	%r7223, %r7220, %r7221, 14;
	mov.b64 	%rd1005, {%r7223, %r7222};
	shf.r.wrap.b32 	%r7224, %r7221, %r7220, 18;
	shf.r.wrap.b32 	%r7225, %r7220, %r7221, 18;
	mov.b64 	%rd1006, {%r7225, %r7224};
	xor.b64  	%rd1007, %rd1006, %rd1005;
	shf.l.wrap.b32 	%r7226, %r7220, %r7221, 23;
	shf.l.wrap.b32 	%r7227, %r7221, %r7220, 23;
	mov.b64 	%rd1008, {%r7227, %r7226};
	xor.b64  	%rd1009, %rd1007, %rd1008;
	xor.b64  	%rd1010, %rd964, %rd937;
	and.b64  	%rd1011, %rd991, %rd1010;
	xor.b64  	%rd1012, %rd1011, %rd937;
	add.s64 	%rd1013, %rd910, %rd1251;
	ld.const.u64 	%rd1014, [%rd1004];
	add.s64 	%rd1015, %rd1013, %rd1014;
	add.s64 	%rd1016, %rd1015, %rd1012;
	add.s64 	%rd1017, %rd1016, %rd1009;
	add.s64 	%rd1018, %rd1017, %rd921;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7228,%dummy}, %rd1002;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7229}, %rd1002;
	}
	shf.r.wrap.b32 	%r7230, %r7229, %r7228, 28;
	shf.r.wrap.b32 	%r7231, %r7228, %r7229, 28;
	mov.b64 	%rd1019, {%r7231, %r7230};
	shf.l.wrap.b32 	%r7232, %r7228, %r7229, 30;
	shf.l.wrap.b32 	%r7233, %r7229, %r7228, 30;
	mov.b64 	%rd1020, {%r7233, %r7232};
	xor.b64  	%rd1021, %rd1020, %rd1019;
	shf.l.wrap.b32 	%r7234, %r7228, %r7229, 25;
	shf.l.wrap.b32 	%r7235, %r7229, %r7228, 25;
	mov.b64 	%rd1022, {%r7235, %r7234};
	xor.b64  	%rd1023, %rd1021, %rd1022;
	xor.b64  	%rd1024, %rd1002, %rd948;
	xor.b64  	%rd1025, %rd1002, %rd975;
	and.b64  	%rd1026, %rd1025, %rd1024;
	xor.b64  	%rd1027, %rd1026, %rd1002;
	add.s64 	%rd1028, %rd1017, %rd1027;
	add.s64 	%rd1029, %rd1028, %rd1023;
	add.s32 	%r7236, %r7394, 9;
	mul.wide.s32 	%rd1030, %r7236, 8;
	add.s64 	%rd1031, %rd787, %rd1030;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7237,%dummy}, %rd1018;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7238}, %rd1018;
	}
	shf.r.wrap.b32 	%r7239, %r7238, %r7237, 14;
	shf.r.wrap.b32 	%r7240, %r7237, %r7238, 14;
	mov.b64 	%rd1032, {%r7240, %r7239};
	shf.r.wrap.b32 	%r7241, %r7238, %r7237, 18;
	shf.r.wrap.b32 	%r7242, %r7237, %r7238, 18;
	mov.b64 	%rd1033, {%r7242, %r7241};
	xor.b64  	%rd1034, %rd1033, %rd1032;
	shf.l.wrap.b32 	%r7243, %r7237, %r7238, 23;
	shf.l.wrap.b32 	%r7244, %r7238, %r7237, 23;
	mov.b64 	%rd1035, {%r7244, %r7243};
	xor.b64  	%rd1036, %rd1034, %rd1035;
	xor.b64  	%rd1037, %rd991, %rd964;
	and.b64  	%rd1038, %rd1018, %rd1037;
	xor.b64  	%rd1039, %rd1038, %rd964;
	add.s64 	%rd1040, %rd937, %rd1250;
	ld.const.u64 	%rd1041, [%rd1031];
	add.s64 	%rd1042, %rd1040, %rd1041;
	add.s64 	%rd1043, %rd1042, %rd1039;
	add.s64 	%rd1044, %rd1043, %rd1036;
	add.s64 	%rd1045, %rd1044, %rd948;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7245,%dummy}, %rd1029;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7246}, %rd1029;
	}
	shf.r.wrap.b32 	%r7247, %r7246, %r7245, 28;
	shf.r.wrap.b32 	%r7248, %r7245, %r7246, 28;
	mov.b64 	%rd1046, {%r7248, %r7247};
	shf.l.wrap.b32 	%r7249, %r7245, %r7246, 30;
	shf.l.wrap.b32 	%r7250, %r7246, %r7245, 30;
	mov.b64 	%rd1047, {%r7250, %r7249};
	xor.b64  	%rd1048, %rd1047, %rd1046;
	shf.l.wrap.b32 	%r7251, %r7245, %r7246, 25;
	shf.l.wrap.b32 	%r7252, %r7246, %r7245, 25;
	mov.b64 	%rd1049, {%r7252, %r7251};
	xor.b64  	%rd1050, %rd1048, %rd1049;
	xor.b64  	%rd1051, %rd1029, %rd975;
	xor.b64  	%rd1052, %rd1029, %rd1002;
	and.b64  	%rd1053, %rd1052, %rd1051;
	xor.b64  	%rd1054, %rd1053, %rd1029;
	add.s64 	%rd1055, %rd1044, %rd1054;
	add.s64 	%rd1056, %rd1055, %rd1050;
	add.s32 	%r7253, %r7394, 10;
	mul.wide.s32 	%rd1057, %r7253, 8;
	add.s64 	%rd1058, %rd787, %rd1057;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7254,%dummy}, %rd1045;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7255}, %rd1045;
	}
	shf.r.wrap.b32 	%r7256, %r7255, %r7254, 14;
	shf.r.wrap.b32 	%r7257, %r7254, %r7255, 14;
	mov.b64 	%rd1059, {%r7257, %r7256};
	shf.r.wrap.b32 	%r7258, %r7255, %r7254, 18;
	shf.r.wrap.b32 	%r7259, %r7254, %r7255, 18;
	mov.b64 	%rd1060, {%r7259, %r7258};
	xor.b64  	%rd1061, %rd1060, %rd1059;
	shf.l.wrap.b32 	%r7260, %r7254, %r7255, 23;
	shf.l.wrap.b32 	%r7261, %r7255, %r7254, 23;
	mov.b64 	%rd1062, {%r7261, %r7260};
	xor.b64  	%rd1063, %rd1061, %rd1062;
	xor.b64  	%rd1064, %rd1018, %rd991;
	and.b64  	%rd1065, %rd1045, %rd1064;
	xor.b64  	%rd1066, %rd1065, %rd991;
	add.s64 	%rd1067, %rd964, %rd1249;
	ld.const.u64 	%rd1068, [%rd1058];
	add.s64 	%rd1069, %rd1067, %rd1068;
	add.s64 	%rd1070, %rd1069, %rd1066;
	add.s64 	%rd1071, %rd1070, %rd1063;
	add.s64 	%rd1072, %rd1071, %rd975;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7262,%dummy}, %rd1056;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7263}, %rd1056;
	}
	shf.r.wrap.b32 	%r7264, %r7263, %r7262, 28;
	shf.r.wrap.b32 	%r7265, %r7262, %r7263, 28;
	mov.b64 	%rd1073, {%r7265, %r7264};
	shf.l.wrap.b32 	%r7266, %r7262, %r7263, 30;
	shf.l.wrap.b32 	%r7267, %r7263, %r7262, 30;
	mov.b64 	%rd1074, {%r7267, %r7266};
	xor.b64  	%rd1075, %rd1074, %rd1073;
	shf.l.wrap.b32 	%r7268, %r7262, %r7263, 25;
	shf.l.wrap.b32 	%r7269, %r7263, %r7262, 25;
	mov.b64 	%rd1076, {%r7269, %r7268};
	xor.b64  	%rd1077, %rd1075, %rd1076;
	xor.b64  	%rd1078, %rd1056, %rd1002;
	xor.b64  	%rd1079, %rd1056, %rd1029;
	and.b64  	%rd1080, %rd1079, %rd1078;
	xor.b64  	%rd1081, %rd1080, %rd1056;
	add.s64 	%rd1082, %rd1071, %rd1081;
	add.s64 	%rd1083, %rd1082, %rd1077;
	add.s32 	%r7270, %r7394, 11;
	mul.wide.s32 	%rd1084, %r7270, 8;
	add.s64 	%rd1085, %rd787, %rd1084;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7271,%dummy}, %rd1072;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7272}, %rd1072;
	}
	shf.r.wrap.b32 	%r7273, %r7272, %r7271, 14;
	shf.r.wrap.b32 	%r7274, %r7271, %r7272, 14;
	mov.b64 	%rd1086, {%r7274, %r7273};
	shf.r.wrap.b32 	%r7275, %r7272, %r7271, 18;
	shf.r.wrap.b32 	%r7276, %r7271, %r7272, 18;
	mov.b64 	%rd1087, {%r7276, %r7275};
	xor.b64  	%rd1088, %rd1087, %rd1086;
	shf.l.wrap.b32 	%r7277, %r7271, %r7272, 23;
	shf.l.wrap.b32 	%r7278, %r7272, %r7271, 23;
	mov.b64 	%rd1089, {%r7278, %r7277};
	xor.b64  	%rd1090, %rd1088, %rd1089;
	xor.b64  	%rd1091, %rd1045, %rd1018;
	and.b64  	%rd1092, %rd1072, %rd1091;
	xor.b64  	%rd1093, %rd1092, %rd1018;
	add.s64 	%rd1094, %rd991, %rd1248;
	ld.const.u64 	%rd1095, [%rd1085];
	add.s64 	%rd1096, %rd1094, %rd1095;
	add.s64 	%rd1097, %rd1096, %rd1093;
	add.s64 	%rd1098, %rd1097, %rd1090;
	add.s64 	%rd1099, %rd1098, %rd1002;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7279,%dummy}, %rd1083;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7280}, %rd1083;
	}
	shf.r.wrap.b32 	%r7281, %r7280, %r7279, 28;
	shf.r.wrap.b32 	%r7282, %r7279, %r7280, 28;
	mov.b64 	%rd1100, {%r7282, %r7281};
	shf.l.wrap.b32 	%r7283, %r7279, %r7280, 30;
	shf.l.wrap.b32 	%r7284, %r7280, %r7279, 30;
	mov.b64 	%rd1101, {%r7284, %r7283};
	xor.b64  	%rd1102, %rd1101, %rd1100;
	shf.l.wrap.b32 	%r7285, %r7279, %r7280, 25;
	shf.l.wrap.b32 	%r7286, %r7280, %r7279, 25;
	mov.b64 	%rd1103, {%r7286, %r7285};
	xor.b64  	%rd1104, %rd1102, %rd1103;
	xor.b64  	%rd1105, %rd1083, %rd1029;
	xor.b64  	%rd1106, %rd1083, %rd1056;
	and.b64  	%rd1107, %rd1106, %rd1105;
	xor.b64  	%rd1108, %rd1107, %rd1083;
	add.s64 	%rd1109, %rd1098, %rd1108;
	add.s64 	%rd1110, %rd1109, %rd1104;
	add.s32 	%r7287, %r7394, 12;
	mul.wide.s32 	%rd1111, %r7287, 8;
	add.s64 	%rd1112, %rd787, %rd1111;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7288,%dummy}, %rd1099;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7289}, %rd1099;
	}
	shf.r.wrap.b32 	%r7290, %r7289, %r7288, 14;
	shf.r.wrap.b32 	%r7291, %r7288, %r7289, 14;
	mov.b64 	%rd1113, {%r7291, %r7290};
	shf.r.wrap.b32 	%r7292, %r7289, %r7288, 18;
	shf.r.wrap.b32 	%r7293, %r7288, %r7289, 18;
	mov.b64 	%rd1114, {%r7293, %r7292};
	xor.b64  	%rd1115, %rd1114, %rd1113;
	shf.l.wrap.b32 	%r7294, %r7288, %r7289, 23;
	shf.l.wrap.b32 	%r7295, %r7289, %r7288, 23;
	mov.b64 	%rd1116, {%r7295, %r7294};
	xor.b64  	%rd1117, %rd1115, %rd1116;
	xor.b64  	%rd1118, %rd1072, %rd1045;
	and.b64  	%rd1119, %rd1099, %rd1118;
	xor.b64  	%rd1120, %rd1119, %rd1045;
	add.s64 	%rd1121, %rd1018, %rd1247;
	ld.const.u64 	%rd1122, [%rd1112];
	add.s64 	%rd1123, %rd1121, %rd1122;
	add.s64 	%rd1124, %rd1123, %rd1120;
	add.s64 	%rd1125, %rd1124, %rd1117;
	add.s64 	%rd1259, %rd1125, %rd1029;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7296,%dummy}, %rd1110;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7297}, %rd1110;
	}
	shf.r.wrap.b32 	%r7298, %r7297, %r7296, 28;
	shf.r.wrap.b32 	%r7299, %r7296, %r7297, 28;
	mov.b64 	%rd1126, {%r7299, %r7298};
	shf.l.wrap.b32 	%r7300, %r7296, %r7297, 30;
	shf.l.wrap.b32 	%r7301, %r7297, %r7296, 30;
	mov.b64 	%rd1127, {%r7301, %r7300};
	xor.b64  	%rd1128, %rd1127, %rd1126;
	shf.l.wrap.b32 	%r7302, %r7296, %r7297, 25;
	shf.l.wrap.b32 	%r7303, %r7297, %r7296, 25;
	mov.b64 	%rd1129, {%r7303, %r7302};
	xor.b64  	%rd1130, %rd1128, %rd1129;
	xor.b64  	%rd1131, %rd1110, %rd1056;
	xor.b64  	%rd1132, %rd1110, %rd1083;
	and.b64  	%rd1133, %rd1132, %rd1131;
	xor.b64  	%rd1134, %rd1133, %rd1110;
	add.s64 	%rd1135, %rd1125, %rd1134;
	add.s64 	%rd1255, %rd1135, %rd1130;
	add.s32 	%r7304, %r7394, 13;
	mul.wide.s32 	%rd1136, %r7304, 8;
	add.s64 	%rd1137, %rd787, %rd1136;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7305,%dummy}, %rd1259;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7306}, %rd1259;
	}
	shf.r.wrap.b32 	%r7307, %r7306, %r7305, 14;
	shf.r.wrap.b32 	%r7308, %r7305, %r7306, 14;
	mov.b64 	%rd1138, {%r7308, %r7307};
	shf.r.wrap.b32 	%r7309, %r7306, %r7305, 18;
	shf.r.wrap.b32 	%r7310, %r7305, %r7306, 18;
	mov.b64 	%rd1139, {%r7310, %r7309};
	xor.b64  	%rd1140, %rd1139, %rd1138;
	shf.l.wrap.b32 	%r7311, %r7305, %r7306, 23;
	shf.l.wrap.b32 	%r7312, %r7306, %r7305, 23;
	mov.b64 	%rd1141, {%r7312, %r7311};
	xor.b64  	%rd1142, %rd1140, %rd1141;
	xor.b64  	%rd1143, %rd1099, %rd1072;
	and.b64  	%rd1144, %rd1259, %rd1143;
	xor.b64  	%rd1145, %rd1144, %rd1072;
	add.s64 	%rd1146, %rd1045, %rd1246;
	ld.const.u64 	%rd1147, [%rd1137];
	add.s64 	%rd1148, %rd1146, %rd1147;
	add.s64 	%rd1149, %rd1148, %rd1145;
	add.s64 	%rd1150, %rd1149, %rd1142;
	add.s64 	%rd1258, %rd1150, %rd1056;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7313,%dummy}, %rd1255;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7314}, %rd1255;
	}
	shf.r.wrap.b32 	%r7315, %r7314, %r7313, 28;
	shf.r.wrap.b32 	%r7316, %r7313, %r7314, 28;
	mov.b64 	%rd1151, {%r7316, %r7315};
	shf.l.wrap.b32 	%r7317, %r7313, %r7314, 30;
	shf.l.wrap.b32 	%r7318, %r7314, %r7313, 30;
	mov.b64 	%rd1152, {%r7318, %r7317};
	xor.b64  	%rd1153, %rd1152, %rd1151;
	shf.l.wrap.b32 	%r7319, %r7313, %r7314, 25;
	shf.l.wrap.b32 	%r7320, %r7314, %r7313, 25;
	mov.b64 	%rd1154, {%r7320, %r7319};
	xor.b64  	%rd1155, %rd1153, %rd1154;
	xor.b64  	%rd1156, %rd1255, %rd1083;
	xor.b64  	%rd1157, %rd1255, %rd1110;
	and.b64  	%rd1158, %rd1157, %rd1156;
	xor.b64  	%rd1159, %rd1158, %rd1255;
	add.s64 	%rd1160, %rd1150, %rd1159;
	add.s64 	%rd1254, %rd1160, %rd1155;
	add.s32 	%r7321, %r7394, 14;
	mul.wide.s32 	%rd1161, %r7321, 8;
	add.s64 	%rd1162, %rd787, %rd1161;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7322,%dummy}, %rd1258;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7323}, %rd1258;
	}
	shf.r.wrap.b32 	%r7324, %r7323, %r7322, 14;
	shf.r.wrap.b32 	%r7325, %r7322, %r7323, 14;
	mov.b64 	%rd1163, {%r7325, %r7324};
	shf.r.wrap.b32 	%r7326, %r7323, %r7322, 18;
	shf.r.wrap.b32 	%r7327, %r7322, %r7323, 18;
	mov.b64 	%rd1164, {%r7327, %r7326};
	xor.b64  	%rd1165, %rd1164, %rd1163;
	shf.l.wrap.b32 	%r7328, %r7322, %r7323, 23;
	shf.l.wrap.b32 	%r7329, %r7323, %r7322, 23;
	mov.b64 	%rd1166, {%r7329, %r7328};
	xor.b64  	%rd1167, %rd1165, %rd1166;
	xor.b64  	%rd1168, %rd1259, %rd1099;
	and.b64  	%rd1169, %rd1258, %rd1168;
	xor.b64  	%rd1170, %rd1169, %rd1099;
	add.s64 	%rd1171, %rd1072, %rd1245;
	ld.const.u64 	%rd1172, [%rd1162];
	add.s64 	%rd1173, %rd1171, %rd1172;
	add.s64 	%rd1174, %rd1173, %rd1170;
	add.s64 	%rd1175, %rd1174, %rd1167;
	add.s64 	%rd1257, %rd1175, %rd1083;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7330,%dummy}, %rd1254;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7331}, %rd1254;
	}
	shf.r.wrap.b32 	%r7332, %r7331, %r7330, 28;
	shf.r.wrap.b32 	%r7333, %r7330, %r7331, 28;
	mov.b64 	%rd1176, {%r7333, %r7332};
	shf.l.wrap.b32 	%r7334, %r7330, %r7331, 30;
	shf.l.wrap.b32 	%r7335, %r7331, %r7330, 30;
	mov.b64 	%rd1177, {%r7335, %r7334};
	xor.b64  	%rd1178, %rd1177, %rd1176;
	shf.l.wrap.b32 	%r7336, %r7330, %r7331, 25;
	shf.l.wrap.b32 	%r7337, %r7331, %r7330, 25;
	mov.b64 	%rd1179, {%r7337, %r7336};
	xor.b64  	%rd1180, %rd1178, %rd1179;
	xor.b64  	%rd1181, %rd1254, %rd1110;
	xor.b64  	%rd1182, %rd1254, %rd1255;
	and.b64  	%rd1183, %rd1182, %rd1181;
	xor.b64  	%rd1184, %rd1183, %rd1254;
	add.s64 	%rd1185, %rd1175, %rd1184;
	add.s64 	%rd1253, %rd1185, %rd1180;
	add.s32 	%r7338, %r7394, 15;
	mul.wide.s32 	%rd1186, %r7338, 8;
	add.s64 	%rd1187, %rd787, %rd1186;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7339,%dummy}, %rd1257;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7340}, %rd1257;
	}
	shf.r.wrap.b32 	%r7341, %r7340, %r7339, 14;
	shf.r.wrap.b32 	%r7342, %r7339, %r7340, 14;
	mov.b64 	%rd1188, {%r7342, %r7341};
	shf.r.wrap.b32 	%r7343, %r7340, %r7339, 18;
	shf.r.wrap.b32 	%r7344, %r7339, %r7340, 18;
	mov.b64 	%rd1189, {%r7344, %r7343};
	xor.b64  	%rd1190, %rd1189, %rd1188;
	shf.l.wrap.b32 	%r7345, %r7339, %r7340, 23;
	shf.l.wrap.b32 	%r7346, %r7340, %r7339, 23;
	mov.b64 	%rd1191, {%r7346, %r7345};
	xor.b64  	%rd1192, %rd1190, %rd1191;
	xor.b64  	%rd1193, %rd1258, %rd1259;
	and.b64  	%rd1194, %rd1257, %rd1193;
	xor.b64  	%rd1195, %rd1194, %rd1259;
	add.s64 	%rd1196, %rd1099, %rd1244;
	ld.const.u64 	%rd1197, [%rd1187];
	add.s64 	%rd1198, %rd1196, %rd1197;
	add.s64 	%rd1199, %rd1198, %rd1195;
	add.s64 	%rd1200, %rd1199, %rd1192;
	add.s64 	%rd1256, %rd1200, %rd1110;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7347,%dummy}, %rd1253;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7348}, %rd1253;
	}
	shf.r.wrap.b32 	%r7349, %r7348, %r7347, 28;
	shf.r.wrap.b32 	%r7350, %r7347, %r7348, 28;
	mov.b64 	%rd1201, {%r7350, %r7349};
	shf.l.wrap.b32 	%r7351, %r7347, %r7348, 30;
	shf.l.wrap.b32 	%r7352, %r7348, %r7347, 30;
	mov.b64 	%rd1202, {%r7352, %r7351};
	xor.b64  	%rd1203, %rd1202, %rd1201;
	shf.l.wrap.b32 	%r7353, %r7347, %r7348, 25;
	shf.l.wrap.b32 	%r7354, %r7348, %r7347, 25;
	mov.b64 	%rd1204, {%r7354, %r7353};
	xor.b64  	%rd1205, %rd1203, %rd1204;
	xor.b64  	%rd1206, %rd1253, %rd1255;
	xor.b64  	%rd1207, %rd1253, %rd1254;
	and.b64  	%rd1208, %rd1207, %rd1206;
	xor.b64  	%rd1209, %rd1208, %rd1253;
	add.s64 	%rd1210, %rd1200, %rd1209;
	add.s64 	%rd1252, %rd1210, %rd1205;
	add.s32 	%r7394, %r7394, 16;
	setp.lt.s32	%p49, %r7394, 80;
	@%p49 bra 	BB2_90;
	bra.uni 	BB2_91;

BB2_50:
	setp.eq.s32	%p18, %r673, 23;
	mov.u32 	%r7363, %r7362;
	mov.u32 	%r7364, %r7362;
	mov.u32 	%r7365, %r7362;
	mov.u32 	%r7366, %r7362;
	mov.u32 	%r7367, %r7362;
	mov.u32 	%r7368, %r7362;
	mov.u32 	%r7369, %r7362;
	mov.u32 	%r7370, %r7362;
	mov.u32 	%r7371, %r7362;
	mov.u32 	%r7372, %r7362;
	mov.u32 	%r7373, %r7362;
	mov.u32 	%r7374, %r7362;
	mov.u32 	%r7375, %r7362;
	mov.u32 	%r7376, %r7362;
	mov.u32 	%r7377, %r7362;
	mov.u32 	%r7378, %r7362;
	mov.u32 	%r7379, %r7362;
	mov.u32 	%r7380, %r7362;
	mov.u32 	%r7381, %r7362;
	mov.u32 	%r7382, %r7362;
	mov.u32 	%r7383, %r7362;
	mov.u32 	%r7384, %r7362;
	mov.u32 	%r7385, %r7362;
	mov.u32 	%r7386, %r7362;
	mov.u32 	%r7387, %r7362;
	mov.u32 	%r7388, %r7362;
	mov.u32 	%r7389, %r7362;
	mov.u32 	%r7390, %r7362;
	mov.u32 	%r7391, %r7362;
	mov.u32 	%r7392, %r7362;
	mov.u32 	%r7393, %r7362;
	@%p18 bra 	BB2_51;
	bra.uni 	BB2_89;

BB2_51:
	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7382, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2178, %r2179}, [%rd8+8];
	// inline asm
	prmt.b32 %r7383, %r2179, %r2178, %r7;
	// inline asm
	ld.local.u32 	%r2045, [%rd8+8];
	ld.local.u32 	%r2046, [%rd8+4];
	// inline asm
	prmt.b32 %r7384, %r2045, %r2046, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2180, %r2181}, [%rd8];
	// inline asm
	prmt.b32 %r7385, %r2181, %r2180, %r7;
	// inline asm
	ld.local.u32 	%r2053, [%rd8];
	ld.local.u32 	%r2054, [%rd7+12];
	// inline asm
	prmt.b32 %r7378, %r2053, %r2054, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2182, %r2183}, [%rd7+8];
	// inline asm
	prmt.b32 %r7379, %r2183, %r2182, %r7;
	// inline asm
	ld.local.u32 	%r2061, [%rd7+8];
	ld.local.u32 	%r2062, [%rd7+4];
	// inline asm
	prmt.b32 %r7380, %r2061, %r2062, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2184, %r2185}, [%rd7];
	// inline asm
	prmt.b32 %r7381, %r2185, %r2184, %r7;
	// inline asm
	ld.local.u32 	%r2069, [%rd7];
	ld.local.u32 	%r2070, [%rd6+12];
	// inline asm
	prmt.b32 %r7374, %r2069, %r2070, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2186, %r2187}, [%rd6+8];
	// inline asm
	prmt.b32 %r7375, %r2187, %r2186, %r7;
	// inline asm
	ld.local.u32 	%r2077, [%rd6+8];
	ld.local.u32 	%r2078, [%rd6+4];
	// inline asm
	prmt.b32 %r7376, %r2077, %r2078, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2188, %r2189}, [%rd6];
	// inline asm
	prmt.b32 %r7377, %r2189, %r2188, %r7;
	// inline asm
	ld.local.u32 	%r2085, [%rd6];
	ld.local.u32 	%r2086, [%rd5+12];
	// inline asm
	prmt.b32 %r7370, %r2085, %r2086, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2190, %r2191}, [%rd5+8];
	// inline asm
	prmt.b32 %r7371, %r2191, %r2190, %r7;
	// inline asm
	ld.local.u32 	%r2093, [%rd5+8];
	ld.local.u32 	%r2094, [%rd5+4];
	// inline asm
	prmt.b32 %r7372, %r2093, %r2094, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2192, %r2193}, [%rd5];
	// inline asm
	prmt.b32 %r7373, %r2193, %r2192, %r7;
	// inline asm
	ld.local.u32 	%r2101, [%rd5];
	ld.local.u32 	%r2102, [%rd4+12];
	// inline asm
	prmt.b32 %r7366, %r2101, %r2102, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2194, %r2195}, [%rd4+8];
	// inline asm
	prmt.b32 %r7367, %r2195, %r2194, %r7;
	// inline asm
	ld.local.u32 	%r2109, [%rd4+8];
	ld.local.u32 	%r2110, [%rd4+4];
	// inline asm
	prmt.b32 %r7368, %r2109, %r2110, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2196, %r2197}, [%rd4];
	// inline asm
	prmt.b32 %r7369, %r2197, %r2196, %r7;
	// inline asm
	ld.local.u32 	%r2117, [%rd4];
	ld.local.u32 	%r2118, [%rd3+12];
	// inline asm
	prmt.b32 %r7362, %r2117, %r2118, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2198, %r2199}, [%rd3+8];
	// inline asm
	prmt.b32 %r7363, %r2199, %r2198, %r7;
	// inline asm
	ld.local.u32 	%r2125, [%rd3+8];
	ld.local.u32 	%r2126, [%rd3+4];
	// inline asm
	prmt.b32 %r7364, %r2125, %r2126, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2200, %r2201}, [%rd3];
	// inline asm
	prmt.b32 %r7365, %r2201, %r2200, %r7;
	// inline asm
	ld.local.u32 	%r2133, [%rd3];
	ld.local.u32 	%r2134, [%rd2+12];
	// inline asm
	prmt.b32 %r2132, %r2133, %r2134, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r2132;
	ld.local.v2.u32 	{%r2202, %r2203}, [%rd2+8];
	// inline asm
	prmt.b32 %r2136, %r2203, %r2202, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r2136;
	ld.local.u32 	%r2141, [%rd2+8];
	ld.local.u32 	%r2142, [%rd2+4];
	// inline asm
	prmt.b32 %r2140, %r2141, %r2142, %r7;
	// inline asm
	st.local.u32 	[%rd8+4], %r2140;
	ld.local.v2.u32 	{%r2204, %r2205}, [%rd2];
	// inline asm
	prmt.b32 %r2144, %r2205, %r2204, %r7;
	// inline asm
	st.local.u32 	[%rd8], %r2144;
	ld.local.u32 	%r2149, [%rd2];
	ld.local.u32 	%r2150, [%rd1+12];
	// inline asm
	prmt.b32 %r2148, %r2149, %r2150, %r7;
	// inline asm
	st.local.u32 	[%rd7+12], %r2148;
	ld.local.v2.u32 	{%r2206, %r2207}, [%rd1+8];
	// inline asm
	prmt.b32 %r2152, %r2207, %r2206, %r7;
	// inline asm
	st.local.u32 	[%rd7+8], %r2152;
	ld.local.u32 	%r2157, [%rd1+8];
	ld.local.u32 	%r2158, [%rd1+4];
	// inline asm
	prmt.b32 %r2156, %r2157, %r2158, %r7;
	// inline asm
	st.local.u32 	[%rd7+4], %r2156;
	ld.local.v2.u32 	{%r2208, %r2209}, [%rd1];
	// inline asm
	prmt.b32 %r2160, %r2209, %r2208, %r7;
	// inline asm
	st.local.u32 	[%rd7], %r2160;
	ld.local.u32 	%r2165, [%rd1];
	// inline asm
	prmt.b32 %r2164, %r2165, %r7360, %r7;
	// inline asm
	st.local.v4.u32 	[%rd6], {%r7360, %r7360, %r7360, %r2164};
	st.local.v4.u32 	[%rd5], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd4], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd3], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd2], {%r7360, %r7360, %r7360, %r7360};
	st.local.v2.u32 	[%rd1+8], {%r7360, %r7360};
	mov.u64 	%rd196, 0;
	st.local.u64 	[%rd1], %rd196;
	mov.u32 	%r7361, %r7360;
	bra.uni 	BB2_85;

BB2_34:
	setp.eq.s32	%p30, %r673, 15;
	mov.u32 	%r7363, %r7362;
	mov.u32 	%r7364, %r7362;
	mov.u32 	%r7365, %r7362;
	mov.u32 	%r7366, %r7362;
	mov.u32 	%r7367, %r7362;
	mov.u32 	%r7368, %r7362;
	mov.u32 	%r7369, %r7362;
	mov.u32 	%r7370, %r7362;
	mov.u32 	%r7371, %r7362;
	mov.u32 	%r7372, %r7362;
	mov.u32 	%r7373, %r7362;
	mov.u32 	%r7374, %r7362;
	mov.u32 	%r7375, %r7362;
	mov.u32 	%r7376, %r7362;
	mov.u32 	%r7377, %r7362;
	mov.u32 	%r7378, %r7362;
	mov.u32 	%r7379, %r7362;
	mov.u32 	%r7380, %r7362;
	mov.u32 	%r7381, %r7362;
	mov.u32 	%r7382, %r7362;
	mov.u32 	%r7383, %r7362;
	mov.u32 	%r7384, %r7362;
	mov.u32 	%r7385, %r7362;
	mov.u32 	%r7386, %r7362;
	mov.u32 	%r7387, %r7362;
	mov.u32 	%r7388, %r7362;
	mov.u32 	%r7389, %r7362;
	mov.u32 	%r7390, %r7362;
	mov.u32 	%r7391, %r7362;
	mov.u32 	%r7392, %r7362;
	mov.u32 	%r7393, %r7362;
	@%p30 bra 	BB2_35;
	bra.uni 	BB2_89;

BB2_35:
	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7374, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3606, %r3607}, [%rd8+8];
	// inline asm
	prmt.b32 %r7375, %r3607, %r3606, %r7;
	// inline asm
	ld.local.u32 	%r3465, [%rd8+8];
	ld.local.u32 	%r3466, [%rd8+4];
	// inline asm
	prmt.b32 %r7376, %r3465, %r3466, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3608, %r3609}, [%rd8];
	// inline asm
	prmt.b32 %r7377, %r3609, %r3608, %r7;
	// inline asm
	ld.local.u32 	%r3473, [%rd8];
	ld.local.u32 	%r3474, [%rd7+12];
	// inline asm
	prmt.b32 %r7370, %r3473, %r3474, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3610, %r3611}, [%rd7+8];
	// inline asm
	prmt.b32 %r7371, %r3611, %r3610, %r7;
	// inline asm
	ld.local.u32 	%r3481, [%rd7+8];
	ld.local.u32 	%r3482, [%rd7+4];
	// inline asm
	prmt.b32 %r7372, %r3481, %r3482, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3612, %r3613}, [%rd7];
	// inline asm
	prmt.b32 %r7373, %r3613, %r3612, %r7;
	// inline asm
	ld.local.u32 	%r3489, [%rd7];
	ld.local.u32 	%r3490, [%rd6+12];
	// inline asm
	prmt.b32 %r7366, %r3489, %r3490, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3614, %r3615}, [%rd6+8];
	// inline asm
	prmt.b32 %r7367, %r3615, %r3614, %r7;
	// inline asm
	ld.local.u32 	%r3497, [%rd6+8];
	ld.local.u32 	%r3498, [%rd6+4];
	// inline asm
	prmt.b32 %r7368, %r3497, %r3498, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3616, %r3617}, [%rd6];
	// inline asm
	prmt.b32 %r7369, %r3617, %r3616, %r7;
	// inline asm
	ld.local.u32 	%r3505, [%rd6];
	ld.local.u32 	%r3506, [%rd5+12];
	// inline asm
	prmt.b32 %r7362, %r3505, %r3506, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3618, %r3619}, [%rd5+8];
	// inline asm
	prmt.b32 %r7363, %r3619, %r3618, %r7;
	// inline asm
	ld.local.u32 	%r3513, [%rd5+8];
	ld.local.u32 	%r3514, [%rd5+4];
	// inline asm
	prmt.b32 %r7364, %r3513, %r3514, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3620, %r3621}, [%rd5];
	// inline asm
	prmt.b32 %r7365, %r3621, %r3620, %r7;
	// inline asm
	ld.local.u32 	%r3521, [%rd5];
	ld.local.u32 	%r3522, [%rd4+12];
	// inline asm
	prmt.b32 %r3520, %r3521, %r3522, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r3520;
	ld.local.v2.u32 	{%r3622, %r3623}, [%rd4+8];
	// inline asm
	prmt.b32 %r3524, %r3623, %r3622, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r3524;
	ld.local.u32 	%r3529, [%rd4+8];
	ld.local.u32 	%r3530, [%rd4+4];
	// inline asm
	prmt.b32 %r3528, %r3529, %r3530, %r7;
	// inline asm
	st.local.u32 	[%rd8+4], %r3528;
	ld.local.v2.u32 	{%r3624, %r3625}, [%rd4];
	// inline asm
	prmt.b32 %r3532, %r3625, %r3624, %r7;
	// inline asm
	st.local.u32 	[%rd8], %r3532;
	ld.local.u32 	%r3537, [%rd4];
	ld.local.u32 	%r3538, [%rd3+12];
	// inline asm
	prmt.b32 %r3536, %r3537, %r3538, %r7;
	// inline asm
	st.local.u32 	[%rd7+12], %r3536;
	ld.local.v2.u32 	{%r3626, %r3627}, [%rd3+8];
	// inline asm
	prmt.b32 %r3540, %r3627, %r3626, %r7;
	// inline asm
	st.local.u32 	[%rd7+8], %r3540;
	ld.local.u32 	%r3545, [%rd3+8];
	ld.local.u32 	%r3546, [%rd3+4];
	// inline asm
	prmt.b32 %r3544, %r3545, %r3546, %r7;
	// inline asm
	st.local.u32 	[%rd7+4], %r3544;
	ld.local.v2.u32 	{%r3628, %r3629}, [%rd3];
	// inline asm
	prmt.b32 %r3548, %r3629, %r3628, %r7;
	// inline asm
	st.local.u32 	[%rd7], %r3548;
	ld.local.u32 	%r3553, [%rd3];
	ld.local.u32 	%r3554, [%rd2+12];
	// inline asm
	prmt.b32 %r3552, %r3553, %r3554, %r7;
	// inline asm
	st.local.u32 	[%rd6+12], %r3552;
	ld.local.v2.u32 	{%r3630, %r3631}, [%rd2+8];
	// inline asm
	prmt.b32 %r3556, %r3631, %r3630, %r7;
	// inline asm
	st.local.u32 	[%rd6+8], %r3556;
	ld.local.u32 	%r3561, [%rd2+8];
	ld.local.u32 	%r3562, [%rd2+4];
	// inline asm
	prmt.b32 %r3560, %r3561, %r3562, %r7;
	// inline asm
	st.local.u32 	[%rd6+4], %r3560;
	ld.local.v2.u32 	{%r3632, %r3633}, [%rd2];
	// inline asm
	prmt.b32 %r3564, %r3633, %r3632, %r7;
	// inline asm
	st.local.u32 	[%rd6], %r3564;
	ld.local.u32 	%r3569, [%rd2];
	ld.local.u32 	%r3570, [%rd1+12];
	// inline asm
	prmt.b32 %r3568, %r3569, %r3570, %r7;
	// inline asm
	st.local.u32 	[%rd5+12], %r3568;
	ld.local.v2.u32 	{%r3634, %r3635}, [%rd1+8];
	// inline asm
	prmt.b32 %r3572, %r3635, %r3634, %r7;
	// inline asm
	st.local.u32 	[%rd5+8], %r3572;
	ld.local.u32 	%r3577, [%rd1+8];
	ld.local.u32 	%r3578, [%rd1+4];
	// inline asm
	prmt.b32 %r3576, %r3577, %r3578, %r7;
	// inline asm
	st.local.u32 	[%rd5+4], %r3576;
	ld.local.v2.u32 	{%r3636, %r3637}, [%rd1];
	// inline asm
	prmt.b32 %r3580, %r3637, %r3636, %r7;
	// inline asm
	st.local.u32 	[%rd5], %r3580;
	ld.local.u32 	%r3585, [%rd1];
	// inline asm
	prmt.b32 %r3584, %r3585, %r7360, %r7;
	// inline asm
	st.local.v4.u32 	[%rd4], {%r7360, %r7360, %r7360, %r3584};
	st.local.v4.u32 	[%rd3], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd2], {%r7360, %r7360, %r7360, %r7360};
	st.local.v2.u32 	[%rd1+8], {%r7360, %r7360};
	mov.u64 	%rd204, 0;
	st.local.u64 	[%rd1], %rd204;
	mov.u32 	%r7361, %r7360;
	bra.uni 	BB2_83;

BB2_65:
	setp.ne.s32	%p7, %r673, 31;
	mov.u32 	%r7363, %r7362;
	mov.u32 	%r7364, %r7362;
	mov.u32 	%r7365, %r7362;
	mov.u32 	%r7366, %r7362;
	mov.u32 	%r7367, %r7362;
	mov.u32 	%r7368, %r7362;
	mov.u32 	%r7369, %r7362;
	mov.u32 	%r7370, %r7362;
	mov.u32 	%r7371, %r7362;
	mov.u32 	%r7372, %r7362;
	mov.u32 	%r7373, %r7362;
	mov.u32 	%r7374, %r7362;
	mov.u32 	%r7375, %r7362;
	mov.u32 	%r7376, %r7362;
	mov.u32 	%r7377, %r7362;
	mov.u32 	%r7378, %r7362;
	mov.u32 	%r7379, %r7362;
	mov.u32 	%r7380, %r7362;
	mov.u32 	%r7381, %r7362;
	mov.u32 	%r7382, %r7362;
	mov.u32 	%r7383, %r7362;
	mov.u32 	%r7384, %r7362;
	mov.u32 	%r7385, %r7362;
	mov.u32 	%r7386, %r7362;
	mov.u32 	%r7387, %r7362;
	mov.u32 	%r7388, %r7362;
	mov.u32 	%r7389, %r7362;
	mov.u32 	%r7390, %r7362;
	mov.u32 	%r7391, %r7362;
	mov.u32 	%r7392, %r7362;
	mov.u32 	%r7393, %r7362;
	@%p7 bra 	BB2_89;

	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7390, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r814, %r815}, [%rd8+8];
	// inline asm
	prmt.b32 %r7391, %r815, %r814, %r7;
	// inline asm
	ld.local.u32 	%r689, [%rd8+8];
	ld.local.u32 	%r690, [%rd8+4];
	// inline asm
	prmt.b32 %r7392, %r689, %r690, %r7;
	// inline asm
	ld.local.v2.u32 	{%r816, %r817}, [%rd8];
	// inline asm
	prmt.b32 %r7393, %r817, %r816, %r7;
	// inline asm
	ld.local.u32 	%r697, [%rd8];
	ld.local.u32 	%r698, [%rd7+12];
	// inline asm
	prmt.b32 %r7386, %r697, %r698, %r7;
	// inline asm
	ld.local.v2.u32 	{%r818, %r819}, [%rd7+8];
	// inline asm
	prmt.b32 %r7387, %r819, %r818, %r7;
	// inline asm
	ld.local.u32 	%r705, [%rd7+8];
	ld.local.u32 	%r706, [%rd7+4];
	// inline asm
	prmt.b32 %r7388, %r705, %r706, %r7;
	// inline asm
	ld.local.v2.u32 	{%r820, %r821}, [%rd7];
	// inline asm
	prmt.b32 %r7389, %r821, %r820, %r7;
	// inline asm
	ld.local.u32 	%r713, [%rd7];
	ld.local.u32 	%r714, [%rd6+12];
	// inline asm
	prmt.b32 %r7382, %r713, %r714, %r7;
	// inline asm
	ld.local.v2.u32 	{%r822, %r823}, [%rd6+8];
	// inline asm
	prmt.b32 %r7383, %r823, %r822, %r7;
	// inline asm
	ld.local.u32 	%r721, [%rd6+8];
	ld.local.u32 	%r722, [%rd6+4];
	// inline asm
	prmt.b32 %r7384, %r721, %r722, %r7;
	// inline asm
	ld.local.v2.u32 	{%r824, %r825}, [%rd6];
	// inline asm
	prmt.b32 %r7385, %r825, %r824, %r7;
	// inline asm
	ld.local.u32 	%r729, [%rd6];
	ld.local.u32 	%r730, [%rd5+12];
	// inline asm
	prmt.b32 %r7378, %r729, %r730, %r7;
	// inline asm
	ld.local.v2.u32 	{%r826, %r827}, [%rd5+8];
	// inline asm
	prmt.b32 %r7379, %r827, %r826, %r7;
	// inline asm
	ld.local.u32 	%r737, [%rd5+8];
	ld.local.u32 	%r738, [%rd5+4];
	// inline asm
	prmt.b32 %r7380, %r737, %r738, %r7;
	// inline asm
	ld.local.v2.u32 	{%r828, %r829}, [%rd5];
	// inline asm
	prmt.b32 %r7381, %r829, %r828, %r7;
	// inline asm
	ld.local.u32 	%r745, [%rd5];
	ld.local.u32 	%r746, [%rd4+12];
	// inline asm
	prmt.b32 %r7374, %r745, %r746, %r7;
	// inline asm
	ld.local.v2.u32 	{%r830, %r831}, [%rd4+8];
	// inline asm
	prmt.b32 %r7375, %r831, %r830, %r7;
	// inline asm
	ld.local.u32 	%r753, [%rd4+8];
	ld.local.u32 	%r754, [%rd4+4];
	// inline asm
	prmt.b32 %r7376, %r753, %r754, %r7;
	// inline asm
	ld.local.v2.u32 	{%r832, %r833}, [%rd4];
	// inline asm
	prmt.b32 %r7377, %r833, %r832, %r7;
	// inline asm
	ld.local.u32 	%r761, [%rd4];
	ld.local.u32 	%r762, [%rd3+12];
	// inline asm
	prmt.b32 %r7370, %r761, %r762, %r7;
	// inline asm
	ld.local.v2.u32 	{%r834, %r835}, [%rd3+8];
	// inline asm
	prmt.b32 %r7371, %r835, %r834, %r7;
	// inline asm
	ld.local.u32 	%r769, [%rd3+8];
	ld.local.u32 	%r770, [%rd3+4];
	// inline asm
	prmt.b32 %r7372, %r769, %r770, %r7;
	// inline asm
	ld.local.v2.u32 	{%r836, %r837}, [%rd3];
	// inline asm
	prmt.b32 %r7373, %r837, %r836, %r7;
	// inline asm
	ld.local.u32 	%r777, [%rd3];
	ld.local.u32 	%r778, [%rd2+12];
	// inline asm
	prmt.b32 %r7366, %r777, %r778, %r7;
	// inline asm
	ld.local.v2.u32 	{%r838, %r839}, [%rd2+8];
	// inline asm
	prmt.b32 %r7367, %r839, %r838, %r7;
	// inline asm
	ld.local.u32 	%r785, [%rd2+8];
	ld.local.u32 	%r786, [%rd2+4];
	// inline asm
	prmt.b32 %r7368, %r785, %r786, %r7;
	// inline asm
	ld.local.v2.u32 	{%r840, %r841}, [%rd2];
	// inline asm
	prmt.b32 %r7369, %r841, %r840, %r7;
	// inline asm
	ld.local.u32 	%r793, [%rd2];
	ld.local.u32 	%r794, [%rd1+12];
	// inline asm
	prmt.b32 %r7362, %r793, %r794, %r7;
	// inline asm
	ld.local.v2.u32 	{%r842, %r843}, [%rd1+8];
	// inline asm
	prmt.b32 %r7363, %r843, %r842, %r7;
	// inline asm
	ld.local.u32 	%r801, [%rd1+8];
	ld.local.u32 	%r802, [%rd1+4];
	// inline asm
	prmt.b32 %r7364, %r801, %r802, %r7;
	// inline asm
	ld.local.v2.u32 	{%r844, %r845}, [%rd1];
	// inline asm
	prmt.b32 %r7365, %r845, %r844, %r7;
	// inline asm
	ld.local.u32 	%r809, [%rd1];
	// inline asm
	prmt.b32 %r808, %r809, %r7360, %r7;
	// inline asm
	st.local.v4.u32 	[%rd8], {%r7360, %r7360, %r7360, %r808};
	st.local.v4.u32 	[%rd7], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd6], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd5], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd4], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd3], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd2], {%r7360, %r7360, %r7360, %r7360};
	st.local.v2.u32 	[%rd1+8], {%r7360, %r7360};
	mov.u64 	%rd188, 0;
	st.local.u64 	[%rd1], %rd188;
	mov.u32 	%r7361, %r7360;
	bra.uni 	BB2_89;

BB2_2:
	add.u64 	%rd1227, %SP, 112;
	add.u64 	%rd1226, %SP, 96;
	add.u64 	%rd1225, %SP, 80;
	add.u64 	%rd1224, %SP, 64;
	add.u64 	%rd1223, %SP, 48;
	add.u64 	%rd1222, %SP, 32;
	add.u64 	%rd1221, %SP, 16;
	add.u64 	%rd1220, %SP, 0;
	ld.param.u32 	%r7357, [sha512_update_param_2];
	sub.s32 	%r640, %r7357, %r7358;
	// Callseq Start 36
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd106;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd1220;
	.param .b64 param2;
	st.param.b64	[param2+0], %rd1221;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd1222;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd1223;
	.param .b64 param5;
	st.param.b64	[param5+0], %rd1224;
	.param .b64 param6;
	st.param.b64	[param6+0], %rd1225;
	.param .b64 param7;
	st.param.b64	[param7+0], %rd1226;
	.param .b64 param8;
	st.param.b64	[param8+0], %rd1227;
	.param .b32 param9;
	st.param.b32	[param9+0], %r640;
	call.uni 
	sha512_update_128, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7, 
	param8, 
	param9
	);
	
	//{
	}// Callseq End 36
	ret;
}

.func sha512_update_global(
	.param .b64 sha512_update_global_param_0,
	.param .b64 sha512_update_global_param_1,
	.param .b32 sha512_update_global_param_2
)
{
	.local .align 16 .b8 	__local_depot3[128];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<50>;
	.reg .b32 	%r<7395>;
	.reg .b64 	%rd<1269>;


	mov.u64 	%rd1268, __local_depot3;
	cvta.local.u64 	%SP, %rd1268;
	ld.param.u64 	%rd106, [sha512_update_global_param_0];
	add.u64 	%rd108, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd108;
	add.u64 	%rd109, %SP, 16;
	cvta.to.local.u64 	%rd2, %rd109;
	add.u64 	%rd110, %SP, 32;
	cvta.to.local.u64 	%rd3, %rd110;
	add.u64 	%rd111, %SP, 48;
	cvta.to.local.u64 	%rd4, %rd111;
	add.u64 	%rd112, %SP, 64;
	cvta.to.local.u64 	%rd5, %rd112;
	add.u64 	%rd113, %SP, 80;
	cvta.to.local.u64 	%rd6, %rd113;
	add.u64 	%rd114, %SP, 96;
	cvta.to.local.u64 	%rd7, %rd114;
	add.u64 	%rd115, %SP, 112;
	cvta.to.local.u64 	%rd8, %rd115;
	add.s64 	%rd9, %rd106, 192;
	mov.u32 	%r7358, 0;
	mov.u32 	%r7359, %r7358;
	bra.uni 	BB3_1;

BB3_91:
	add.s64 	%rd1211, %rd47, %rd1252;
	st.u64 	[%rd106], %rd1211;
	add.s64 	%rd1212, %rd49, %rd1253;
	st.u64 	[%rd9+-184], %rd1212;
	add.s64 	%rd1213, %rd48, %rd1254;
	st.u64 	[%rd9+-176], %rd1213;
	add.s64 	%rd1214, %rd46, %rd1255;
	st.u64 	[%rd9+-168], %rd1214;
	add.s64 	%rd1215, %rd42, %rd1256;
	st.u64 	[%rd9+-160], %rd1215;
	add.s64 	%rd1216, %rd44, %rd1257;
	st.u64 	[%rd9+-152], %rd1216;
	add.s64 	%rd1217, %rd43, %rd1258;
	st.u64 	[%rd9+-144], %rd1217;
	add.s64 	%rd1218, %rd45, %rd1259;
	st.u64 	[%rd9+-136], %rd1218;
	st.v2.u32 	[%rd9+-128], {%r7365, %r7364};
	st.v2.u32 	[%rd9+-120], {%r7363, %r7362};
	st.v2.u32 	[%rd9+-112], {%r7369, %r7368};
	st.v2.u32 	[%rd9+-104], {%r7367, %r7366};
	st.v2.u32 	[%rd9+-96], {%r7373, %r7372};
	st.v2.u32 	[%rd9+-88], {%r7371, %r7370};
	st.v2.u32 	[%rd9+-80], {%r7377, %r7376};
	st.v2.u32 	[%rd9+-72], {%r7375, %r7374};
	st.v2.u32 	[%rd9+-64], {%r7381, %r7380};
	st.v2.u32 	[%rd9+-56], {%r7379, %r7378};
	st.v2.u32 	[%rd9+-48], {%r7385, %r7384};
	st.v2.u32 	[%rd9+-40], {%r7383, %r7382};
	st.v2.u32 	[%rd9+-32], {%r7389, %r7388};
	st.v2.u32 	[%rd9+-24], {%r7387, %r7386};
	st.v2.u32 	[%rd9+-16], {%r7393, %r7392};
	st.v2.u32 	[%rd9+-8], {%r7391, %r7390};
	add.s32 	%r7358, %r7358, 128;
	add.s32 	%r7359, %r7359, 32;

BB3_1:
	ld.param.u32 	%r7356, [sha512_update_global_param_2];
	add.s32 	%r7355, %r7356, -128;
	ld.param.u64 	%rd1219, [sha512_update_global_param_1];
	mul.wide.s32 	%rd116, %r7359, 4;
	add.s64 	%rd117, %rd1219, %rd116;
	ld.global.u32 	%r7361, [%rd117];
	st.local.u32 	[%rd1], %r7361;
	add.s32 	%r580, %r7359, 1;
	mul.wide.s32 	%rd118, %r580, 4;
	add.s64 	%rd119, %rd1219, %rd118;
	ld.global.u32 	%r7360, [%rd119];
	st.local.u32 	[%rd1+4], %r7360;
	add.s32 	%r581, %r7359, 2;
	mul.wide.s32 	%rd120, %r581, 4;
	add.s64 	%rd121, %rd1219, %rd120;
	ld.global.u32 	%r582, [%rd121];
	st.local.u32 	[%rd1+8], %r582;
	add.s32 	%r583, %r7359, 3;
	mul.wide.s32 	%rd122, %r583, 4;
	add.s64 	%rd123, %rd1219, %rd122;
	ld.global.u32 	%r584, [%rd123];
	st.local.u32 	[%rd1+12], %r584;
	add.s32 	%r585, %r7359, 4;
	mul.wide.s32 	%rd124, %r585, 4;
	add.s64 	%rd125, %rd1219, %rd124;
	ld.global.u32 	%r586, [%rd125];
	st.local.u32 	[%rd2], %r586;
	add.s32 	%r587, %r7359, 5;
	mul.wide.s32 	%rd126, %r587, 4;
	add.s64 	%rd127, %rd1219, %rd126;
	ld.global.u32 	%r588, [%rd127];
	st.local.u32 	[%rd2+4], %r588;
	add.s32 	%r589, %r7359, 6;
	mul.wide.s32 	%rd128, %r589, 4;
	add.s64 	%rd129, %rd1219, %rd128;
	ld.global.u32 	%r590, [%rd129];
	st.local.u32 	[%rd2+8], %r590;
	add.s32 	%r591, %r7359, 7;
	mul.wide.s32 	%rd130, %r591, 4;
	add.s64 	%rd131, %rd1219, %rd130;
	ld.global.u32 	%r592, [%rd131];
	st.local.u32 	[%rd2+12], %r592;
	add.s32 	%r593, %r7359, 8;
	mul.wide.s32 	%rd132, %r593, 4;
	add.s64 	%rd133, %rd1219, %rd132;
	ld.global.u32 	%r594, [%rd133];
	st.local.u32 	[%rd3], %r594;
	add.s32 	%r595, %r7359, 9;
	mul.wide.s32 	%rd134, %r595, 4;
	add.s64 	%rd135, %rd1219, %rd134;
	ld.global.u32 	%r596, [%rd135];
	st.local.u32 	[%rd3+4], %r596;
	add.s32 	%r597, %r7359, 10;
	mul.wide.s32 	%rd136, %r597, 4;
	add.s64 	%rd137, %rd1219, %rd136;
	ld.global.u32 	%r598, [%rd137];
	st.local.u32 	[%rd3+8], %r598;
	add.s32 	%r599, %r7359, 11;
	mul.wide.s32 	%rd138, %r599, 4;
	add.s64 	%rd139, %rd1219, %rd138;
	ld.global.u32 	%r600, [%rd139];
	st.local.u32 	[%rd3+12], %r600;
	add.s32 	%r601, %r7359, 12;
	mul.wide.s32 	%rd140, %r601, 4;
	add.s64 	%rd141, %rd1219, %rd140;
	ld.global.u32 	%r602, [%rd141];
	st.local.u32 	[%rd4], %r602;
	add.s32 	%r603, %r7359, 13;
	mul.wide.s32 	%rd142, %r603, 4;
	add.s64 	%rd143, %rd1219, %rd142;
	ld.global.u32 	%r604, [%rd143];
	st.local.u32 	[%rd4+4], %r604;
	add.s32 	%r605, %r7359, 14;
	mul.wide.s32 	%rd144, %r605, 4;
	add.s64 	%rd145, %rd1219, %rd144;
	ld.global.u32 	%r606, [%rd145];
	st.local.u32 	[%rd4+8], %r606;
	add.s32 	%r607, %r7359, 15;
	mul.wide.s32 	%rd146, %r607, 4;
	add.s64 	%rd147, %rd1219, %rd146;
	ld.global.u32 	%r608, [%rd147];
	st.local.u32 	[%rd4+12], %r608;
	add.s32 	%r609, %r7359, 16;
	mul.wide.s32 	%rd148, %r609, 4;
	add.s64 	%rd149, %rd1219, %rd148;
	ld.global.u32 	%r610, [%rd149];
	st.local.u32 	[%rd5], %r610;
	add.s32 	%r611, %r7359, 17;
	mul.wide.s32 	%rd150, %r611, 4;
	add.s64 	%rd151, %rd1219, %rd150;
	ld.global.u32 	%r612, [%rd151];
	st.local.u32 	[%rd5+4], %r612;
	add.s32 	%r613, %r7359, 18;
	mul.wide.s32 	%rd152, %r613, 4;
	add.s64 	%rd153, %rd1219, %rd152;
	ld.global.u32 	%r614, [%rd153];
	st.local.u32 	[%rd5+8], %r614;
	add.s32 	%r615, %r7359, 19;
	mul.wide.s32 	%rd154, %r615, 4;
	add.s64 	%rd155, %rd1219, %rd154;
	ld.global.u32 	%r616, [%rd155];
	st.local.u32 	[%rd5+12], %r616;
	add.s32 	%r617, %r7359, 20;
	mul.wide.s32 	%rd156, %r617, 4;
	add.s64 	%rd157, %rd1219, %rd156;
	ld.global.u32 	%r618, [%rd157];
	st.local.u32 	[%rd6], %r618;
	add.s32 	%r619, %r7359, 21;
	mul.wide.s32 	%rd158, %r619, 4;
	add.s64 	%rd159, %rd1219, %rd158;
	ld.global.u32 	%r620, [%rd159];
	st.local.u32 	[%rd6+4], %r620;
	add.s32 	%r621, %r7359, 22;
	mul.wide.s32 	%rd160, %r621, 4;
	add.s64 	%rd161, %rd1219, %rd160;
	ld.global.u32 	%r622, [%rd161];
	st.local.u32 	[%rd6+8], %r622;
	add.s32 	%r623, %r7359, 23;
	mul.wide.s32 	%rd162, %r623, 4;
	add.s64 	%rd163, %rd1219, %rd162;
	ld.global.u32 	%r624, [%rd163];
	st.local.u32 	[%rd6+12], %r624;
	add.s32 	%r625, %r7359, 24;
	mul.wide.s32 	%rd164, %r625, 4;
	add.s64 	%rd165, %rd1219, %rd164;
	ld.global.u32 	%r626, [%rd165];
	st.local.u32 	[%rd7], %r626;
	add.s32 	%r627, %r7359, 25;
	mul.wide.s32 	%rd166, %r627, 4;
	add.s64 	%rd167, %rd1219, %rd166;
	ld.global.u32 	%r628, [%rd167];
	st.local.u32 	[%rd7+4], %r628;
	add.s32 	%r629, %r7359, 26;
	mul.wide.s32 	%rd168, %r629, 4;
	add.s64 	%rd169, %rd1219, %rd168;
	ld.global.u32 	%r630, [%rd169];
	st.local.u32 	[%rd7+8], %r630;
	add.s32 	%r631, %r7359, 27;
	mul.wide.s32 	%rd170, %r631, 4;
	add.s64 	%rd171, %rd1219, %rd170;
	ld.global.u32 	%r632, [%rd171];
	st.local.u32 	[%rd7+12], %r632;
	add.s32 	%r633, %r7359, 28;
	mul.wide.s32 	%rd172, %r633, 4;
	add.s64 	%rd173, %rd1219, %rd172;
	ld.global.u32 	%r634, [%rd173];
	st.local.u32 	[%rd8], %r634;
	add.s32 	%r635, %r7359, 29;
	mul.wide.s32 	%rd174, %r635, 4;
	add.s64 	%rd175, %rd1219, %rd174;
	ld.global.u32 	%r636, [%rd175];
	st.local.u32 	[%rd8+4], %r636;
	add.s32 	%r637, %r7359, 30;
	mul.wide.s32 	%rd176, %r637, 4;
	add.s64 	%rd177, %rd1219, %rd176;
	ld.global.u32 	%r638, [%rd177];
	st.local.u32 	[%rd8+8], %r638;
	add.s32 	%r639, %r7359, 31;
	mul.wide.s32 	%rd178, %r639, 4;
	add.s64 	%rd179, %rd1219, %rd178;
	ld.global.u32 	%r6, [%rd179];
	st.local.u32 	[%rd8+12], %r6;
	setp.lt.s32	%p1, %r7358, %r7355;
	@%p1 bra 	BB3_3;
	bra.uni 	BB3_2;

BB3_3:
	ld.u32 	%r674, [%rd9];
	add.s32 	%r675, %r674, 128;
	st.u32 	[%rd9], %r675;
	bfe.u32 	%r673, %r674, 2, 5;
	and.b32  	%r676, %r674, 3;
	shl.b32 	%r677, %r676, 2;
	mov.u32 	%r678, 1985229328;
	shr.u32 	%r679, %r678, %r677;
	and.b32  	%r7, %r679, 65535;
	mov.u32 	%r7362, 0;
	setp.gt.s32	%p2, %r673, 15;
	@%p2 bra 	BB3_36;

	setp.gt.s32	%p26, %r673, 7;
	@%p26 bra 	BB3_21;

	setp.gt.s32	%p38, %r673, 3;
	@%p38 bra 	BB3_14;

	setp.gt.s32	%p44, %r673, 1;
	@%p44 bra 	BB3_10;

	setp.eq.s32	%p47, %r673, 0;
	@%p47 bra 	BB3_88;
	bra.uni 	BB3_8;

BB3_88:
	mov.u32 	%r7362, 0;
	// inline asm
	prmt.b32 %r7365, %r7362, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r6453, %r6454}, [%rd8+8];
	// inline asm
	prmt.b32 %r6294, %r6454, %r6453, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r6294;
	ld.local.u32 	%r6299, [%rd8+8];
	ld.local.u32 	%r6300, [%rd8+4];
	// inline asm
	prmt.b32 %r6298, %r6299, %r6300, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r6298;
	ld.local.v2.u32 	{%r6455, %r6456}, [%rd8];
	// inline asm
	prmt.b32 %r6302, %r6456, %r6455, %r7;
	// inline asm
	st.local.u32 	[%rd8+4], %r6302;
	ld.local.u32 	%r6307, [%rd8];
	ld.local.u32 	%r6308, [%rd7+12];
	// inline asm
	prmt.b32 %r6306, %r6307, %r6308, %r7;
	// inline asm
	st.local.u32 	[%rd8], %r6306;
	ld.local.v2.u32 	{%r6457, %r6458}, [%rd7+8];
	// inline asm
	prmt.b32 %r6310, %r6458, %r6457, %r7;
	// inline asm
	st.local.u32 	[%rd7+12], %r6310;
	ld.local.u32 	%r6315, [%rd7+8];
	ld.local.u32 	%r6316, [%rd7+4];
	// inline asm
	prmt.b32 %r6314, %r6315, %r6316, %r7;
	// inline asm
	st.local.u32 	[%rd7+8], %r6314;
	ld.local.v2.u32 	{%r6459, %r6460}, [%rd7];
	// inline asm
	prmt.b32 %r6318, %r6460, %r6459, %r7;
	// inline asm
	st.local.u32 	[%rd7+4], %r6318;
	ld.local.u32 	%r6323, [%rd7];
	ld.local.u32 	%r6324, [%rd6+12];
	// inline asm
	prmt.b32 %r6322, %r6323, %r6324, %r7;
	// inline asm
	st.local.u32 	[%rd7], %r6322;
	ld.local.v2.u32 	{%r6461, %r6462}, [%rd6+8];
	// inline asm
	prmt.b32 %r6326, %r6462, %r6461, %r7;
	// inline asm
	st.local.u32 	[%rd6+12], %r6326;
	ld.local.u32 	%r6331, [%rd6+8];
	ld.local.u32 	%r6332, [%rd6+4];
	// inline asm
	prmt.b32 %r6330, %r6331, %r6332, %r7;
	// inline asm
	st.local.u32 	[%rd6+8], %r6330;
	ld.local.v2.u32 	{%r6463, %r6464}, [%rd6];
	// inline asm
	prmt.b32 %r6334, %r6464, %r6463, %r7;
	// inline asm
	st.local.u32 	[%rd6+4], %r6334;
	ld.local.u32 	%r6339, [%rd6];
	ld.local.u32 	%r6340, [%rd5+12];
	// inline asm
	prmt.b32 %r6338, %r6339, %r6340, %r7;
	// inline asm
	st.local.u32 	[%rd6], %r6338;
	ld.local.v2.u32 	{%r6465, %r6466}, [%rd5+8];
	// inline asm
	prmt.b32 %r6342, %r6466, %r6465, %r7;
	// inline asm
	st.local.u32 	[%rd5+12], %r6342;
	ld.local.u32 	%r6347, [%rd5+8];
	ld.local.u32 	%r6348, [%rd5+4];
	// inline asm
	prmt.b32 %r6346, %r6347, %r6348, %r7;
	// inline asm
	st.local.u32 	[%rd5+8], %r6346;
	ld.local.v2.u32 	{%r6467, %r6468}, [%rd5];
	// inline asm
	prmt.b32 %r6350, %r6468, %r6467, %r7;
	// inline asm
	st.local.u32 	[%rd5+4], %r6350;
	ld.local.u32 	%r6355, [%rd5];
	ld.local.u32 	%r6356, [%rd4+12];
	// inline asm
	prmt.b32 %r6354, %r6355, %r6356, %r7;
	// inline asm
	st.local.u32 	[%rd5], %r6354;
	ld.local.v2.u32 	{%r6469, %r6470}, [%rd4+8];
	// inline asm
	prmt.b32 %r6358, %r6470, %r6469, %r7;
	// inline asm
	st.local.u32 	[%rd4+12], %r6358;
	ld.local.u32 	%r6363, [%rd4+8];
	ld.local.u32 	%r6364, [%rd4+4];
	// inline asm
	prmt.b32 %r6362, %r6363, %r6364, %r7;
	// inline asm
	st.local.u32 	[%rd4+8], %r6362;
	ld.local.v2.u32 	{%r6471, %r6472}, [%rd4];
	// inline asm
	prmt.b32 %r6366, %r6472, %r6471, %r7;
	// inline asm
	st.local.u32 	[%rd4+4], %r6366;
	ld.local.u32 	%r6371, [%rd4];
	ld.local.u32 	%r6372, [%rd3+12];
	// inline asm
	prmt.b32 %r6370, %r6371, %r6372, %r7;
	// inline asm
	st.local.u32 	[%rd4], %r6370;
	ld.local.v2.u32 	{%r6473, %r6474}, [%rd3+8];
	// inline asm
	prmt.b32 %r6374, %r6474, %r6473, %r7;
	// inline asm
	st.local.u32 	[%rd3+12], %r6374;
	ld.local.u32 	%r6379, [%rd3+8];
	ld.local.u32 	%r6380, [%rd3+4];
	// inline asm
	prmt.b32 %r6378, %r6379, %r6380, %r7;
	// inline asm
	st.local.u32 	[%rd3+8], %r6378;
	ld.local.v2.u32 	{%r6475, %r6476}, [%rd3];
	// inline asm
	prmt.b32 %r6382, %r6476, %r6475, %r7;
	// inline asm
	st.local.u32 	[%rd3+4], %r6382;
	ld.local.u32 	%r6387, [%rd3];
	ld.local.u32 	%r6388, [%rd2+12];
	// inline asm
	prmt.b32 %r6386, %r6387, %r6388, %r7;
	// inline asm
	st.local.u32 	[%rd3], %r6386;
	ld.local.v2.u32 	{%r6477, %r6478}, [%rd2+8];
	// inline asm
	prmt.b32 %r6390, %r6478, %r6477, %r7;
	// inline asm
	st.local.u32 	[%rd2+12], %r6390;
	ld.local.u32 	%r6395, [%rd2+8];
	ld.local.u32 	%r6396, [%rd2+4];
	// inline asm
	prmt.b32 %r6394, %r6395, %r6396, %r7;
	// inline asm
	st.local.u32 	[%rd2+8], %r6394;
	ld.local.v2.u32 	{%r6479, %r6480}, [%rd2];
	// inline asm
	prmt.b32 %r6398, %r6480, %r6479, %r7;
	// inline asm
	st.local.u32 	[%rd2+4], %r6398;
	ld.local.u32 	%r6403, [%rd2];
	ld.local.u32 	%r6404, [%rd1+12];
	// inline asm
	prmt.b32 %r6402, %r6403, %r6404, %r7;
	// inline asm
	st.local.u32 	[%rd2], %r6402;
	ld.local.v2.u32 	{%r6481, %r6482}, [%rd1+8];
	// inline asm
	prmt.b32 %r6406, %r6482, %r6481, %r7;
	// inline asm
	st.local.u32 	[%rd1+12], %r6406;
	ld.local.u32 	%r6411, [%rd1+8];
	ld.local.u32 	%r6412, [%rd1+4];
	// inline asm
	prmt.b32 %r6410, %r6411, %r6412, %r7;
	// inline asm
	st.local.u32 	[%rd1+8], %r6410;
	ld.local.v2.u32 	{%r6483, %r6484}, [%rd1];
	// inline asm
	prmt.b32 %r6414, %r6484, %r6483, %r7;
	// inline asm
	st.local.u32 	[%rd1+4], %r6414;
	ld.local.u32 	%r6419, [%rd1];
	// inline asm
	prmt.b32 %r7361, %r6419, %r7362, %r7;
	// inline asm
	st.local.u32 	[%rd1], %r7361;
	ld.local.u32 	%r7360, [%rd1+4];
	mov.u32 	%r7363, %r7362;
	mov.u32 	%r7364, %r7362;
	mov.u32 	%r7366, %r7362;
	mov.u32 	%r7367, %r7362;
	mov.u32 	%r7368, %r7362;
	mov.u32 	%r7369, %r7362;
	mov.u32 	%r7370, %r7362;
	mov.u32 	%r7371, %r7362;
	mov.u32 	%r7372, %r7362;
	mov.u32 	%r7373, %r7362;
	mov.u32 	%r7374, %r7362;
	mov.u32 	%r7375, %r7362;
	mov.u32 	%r7376, %r7362;
	mov.u32 	%r7377, %r7362;
	mov.u32 	%r7378, %r7362;
	mov.u32 	%r7379, %r7362;
	mov.u32 	%r7380, %r7362;
	mov.u32 	%r7381, %r7362;
	mov.u32 	%r7382, %r7362;
	mov.u32 	%r7383, %r7362;
	mov.u32 	%r7384, %r7362;
	mov.u32 	%r7385, %r7362;
	mov.u32 	%r7386, %r7362;
	mov.u32 	%r7387, %r7362;
	mov.u32 	%r7388, %r7362;
	mov.u32 	%r7389, %r7362;
	mov.u32 	%r7390, %r7362;
	mov.u32 	%r7391, %r7362;
	mov.u32 	%r7392, %r7362;
	mov.u32 	%r7393, %r7362;
	bra.uni 	BB3_89;

BB3_36:
	setp.gt.s32	%p3, %r673, 23;
	@%p3 bra 	BB3_52;

	setp.gt.s32	%p15, %r673, 19;
	@%p15 bra 	BB3_45;

	setp.gt.s32	%p21, %r673, 17;
	@%p21 bra 	BB3_42;

	setp.eq.s32	%p24, %r673, 16;
	@%p24 bra 	BB3_74;
	bra.uni 	BB3_40;

BB3_74:
	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7381, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3424, %r3425}, [%rd8+8];
	// inline asm
	prmt.b32 %r7374, %r3425, %r3424, %r7;
	// inline asm
	ld.local.u32 	%r3284, [%rd8+8];
	ld.local.u32 	%r3285, [%rd8+4];
	// inline asm
	prmt.b32 %r7375, %r3284, %r3285, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3426, %r3427}, [%rd8];
	// inline asm
	prmt.b32 %r7376, %r3427, %r3426, %r7;
	// inline asm
	ld.local.u32 	%r3292, [%rd8];
	ld.local.u32 	%r3293, [%rd7+12];
	// inline asm
	prmt.b32 %r7377, %r3292, %r3293, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3428, %r3429}, [%rd7+8];
	// inline asm
	prmt.b32 %r7370, %r3429, %r3428, %r7;
	// inline asm
	ld.local.u32 	%r3300, [%rd7+8];
	ld.local.u32 	%r3301, [%rd7+4];
	// inline asm
	prmt.b32 %r7371, %r3300, %r3301, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3430, %r3431}, [%rd7];
	// inline asm
	prmt.b32 %r7372, %r3431, %r3430, %r7;
	// inline asm
	ld.local.u32 	%r3308, [%rd7];
	ld.local.u32 	%r3309, [%rd6+12];
	// inline asm
	prmt.b32 %r7373, %r3308, %r3309, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3432, %r3433}, [%rd6+8];
	// inline asm
	prmt.b32 %r7366, %r3433, %r3432, %r7;
	// inline asm
	ld.local.u32 	%r3316, [%rd6+8];
	ld.local.u32 	%r3317, [%rd6+4];
	// inline asm
	prmt.b32 %r7367, %r3316, %r3317, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3434, %r3435}, [%rd6];
	// inline asm
	prmt.b32 %r7368, %r3435, %r3434, %r7;
	// inline asm
	ld.local.u32 	%r3324, [%rd6];
	ld.local.u32 	%r3325, [%rd5+12];
	// inline asm
	prmt.b32 %r7369, %r3324, %r3325, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3436, %r3437}, [%rd5+8];
	// inline asm
	prmt.b32 %r7362, %r3437, %r3436, %r7;
	// inline asm
	ld.local.u32 	%r3332, [%rd5+8];
	ld.local.u32 	%r3333, [%rd5+4];
	// inline asm
	prmt.b32 %r7363, %r3332, %r3333, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3438, %r3439}, [%rd5];
	// inline asm
	prmt.b32 %r7364, %r3439, %r3438, %r7;
	// inline asm
	ld.local.u32 	%r3340, [%rd5];
	ld.local.u32 	%r3341, [%rd4+12];
	// inline asm
	prmt.b32 %r7365, %r3340, %r3341, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3440, %r3441}, [%rd4+8];
	// inline asm
	prmt.b32 %r3343, %r3441, %r3440, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r3343;
	ld.local.u32 	%r3348, [%rd4+8];
	ld.local.u32 	%r3349, [%rd4+4];
	// inline asm
	prmt.b32 %r3347, %r3348, %r3349, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r3347;
	ld.local.v2.u32 	{%r3442, %r3443}, [%rd4];
	// inline asm
	prmt.b32 %r3351, %r3443, %r3442, %r7;
	// inline asm
	st.local.u32 	[%rd8+4], %r3351;
	ld.local.u32 	%r3356, [%rd4];
	ld.local.u32 	%r3357, [%rd3+12];
	// inline asm
	prmt.b32 %r3355, %r3356, %r3357, %r7;
	// inline asm
	st.local.u32 	[%rd8], %r3355;
	ld.local.v2.u32 	{%r3444, %r3445}, [%rd3+8];
	// inline asm
	prmt.b32 %r3359, %r3445, %r3444, %r7;
	// inline asm
	st.local.u32 	[%rd7+12], %r3359;
	ld.local.u32 	%r3364, [%rd3+8];
	ld.local.u32 	%r3365, [%rd3+4];
	// inline asm
	prmt.b32 %r3363, %r3364, %r3365, %r7;
	// inline asm
	st.local.u32 	[%rd7+8], %r3363;
	ld.local.v2.u32 	{%r3446, %r3447}, [%rd3];
	// inline asm
	prmt.b32 %r3367, %r3447, %r3446, %r7;
	// inline asm
	st.local.u32 	[%rd7+4], %r3367;
	ld.local.u32 	%r3372, [%rd3];
	ld.local.u32 	%r3373, [%rd2+12];
	// inline asm
	prmt.b32 %r3371, %r3372, %r3373, %r7;
	// inline asm
	st.local.u32 	[%rd7], %r3371;
	ld.local.v2.u32 	{%r3448, %r3449}, [%rd2+8];
	// inline asm
	prmt.b32 %r3375, %r3449, %r3448, %r7;
	// inline asm
	st.local.u32 	[%rd6+12], %r3375;
	ld.local.u32 	%r3380, [%rd2+8];
	ld.local.u32 	%r3381, [%rd2+4];
	// inline asm
	prmt.b32 %r3379, %r3380, %r3381, %r7;
	// inline asm
	st.local.u32 	[%rd6+8], %r3379;
	ld.local.v2.u32 	{%r3450, %r3451}, [%rd2];
	// inline asm
	prmt.b32 %r3383, %r3451, %r3450, %r7;
	// inline asm
	st.local.u32 	[%rd6+4], %r3383;
	ld.local.u32 	%r3388, [%rd2];
	ld.local.u32 	%r3389, [%rd1+12];
	// inline asm
	prmt.b32 %r3387, %r3388, %r3389, %r7;
	// inline asm
	st.local.u32 	[%rd6], %r3387;
	ld.local.v2.u32 	{%r3452, %r3453}, [%rd1+8];
	// inline asm
	prmt.b32 %r3391, %r3453, %r3452, %r7;
	// inline asm
	st.local.u32 	[%rd5+12], %r3391;
	ld.local.u32 	%r3396, [%rd1+8];
	ld.local.u32 	%r3397, [%rd1+4];
	// inline asm
	prmt.b32 %r3395, %r3396, %r3397, %r7;
	// inline asm
	st.local.u32 	[%rd5+8], %r3395;
	ld.local.v2.u32 	{%r3454, %r3455}, [%rd1];
	// inline asm
	prmt.b32 %r3399, %r3455, %r3454, %r7;
	// inline asm
	st.local.u32 	[%rd5+4], %r3399;
	ld.local.u32 	%r3404, [%rd1];
	// inline asm
	prmt.b32 %r3403, %r3404, %r7360, %r7;
	// inline asm
	st.local.u32 	[%rd5], %r3403;
	st.local.v4.u32 	[%rd4], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd3], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd2], {%r7360, %r7360, %r7360, %r7360};
	st.local.v2.u32 	[%rd1+8], {%r7360, %r7360};
	mov.u64 	%rd203, 0;
	st.local.u64 	[%rd1], %rd203;
	mov.u32 	%r7361, %r7360;
	mov.u32 	%r7378, %r7360;
	mov.u32 	%r7379, %r7360;
	mov.u32 	%r7380, %r7360;
	bra.uni 	BB3_84;

BB3_21:
	setp.gt.s32	%p27, %r673, 11;
	@%p27 bra 	BB3_29;

	setp.gt.s32	%p33, %r673, 9;
	@%p33 bra 	BB3_26;

	setp.eq.s32	%p36, %r673, 8;
	@%p36 bra 	BB3_78;
	bra.uni 	BB3_24;

BB3_78:
	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7373, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r4908, %r4909}, [%rd8+8];
	// inline asm
	prmt.b32 %r7366, %r4909, %r4908, %r7;
	// inline asm
	ld.local.u32 	%r4760, [%rd8+8];
	ld.local.u32 	%r4761, [%rd8+4];
	// inline asm
	prmt.b32 %r7367, %r4760, %r4761, %r7;
	// inline asm
	ld.local.v2.u32 	{%r4910, %r4911}, [%rd8];
	// inline asm
	prmt.b32 %r7368, %r4911, %r4910, %r7;
	// inline asm
	ld.local.u32 	%r4768, [%rd8];
	ld.local.u32 	%r4769, [%rd7+12];
	// inline asm
	prmt.b32 %r7369, %r4768, %r4769, %r7;
	// inline asm
	ld.local.v2.u32 	{%r4912, %r4913}, [%rd7+8];
	// inline asm
	prmt.b32 %r7362, %r4913, %r4912, %r7;
	// inline asm
	ld.local.u32 	%r4776, [%rd7+8];
	ld.local.u32 	%r4777, [%rd7+4];
	// inline asm
	prmt.b32 %r7363, %r4776, %r4777, %r7;
	// inline asm
	ld.local.v2.u32 	{%r4914, %r4915}, [%rd7];
	// inline asm
	prmt.b32 %r7364, %r4915, %r4914, %r7;
	// inline asm
	ld.local.u32 	%r4784, [%rd7];
	ld.local.u32 	%r4785, [%rd6+12];
	// inline asm
	prmt.b32 %r7365, %r4784, %r4785, %r7;
	// inline asm
	ld.local.v2.u32 	{%r4916, %r4917}, [%rd6+8];
	// inline asm
	prmt.b32 %r4787, %r4917, %r4916, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r4787;
	ld.local.u32 	%r4792, [%rd6+8];
	ld.local.u32 	%r4793, [%rd6+4];
	// inline asm
	prmt.b32 %r4791, %r4792, %r4793, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r4791;
	ld.local.v2.u32 	{%r4918, %r4919}, [%rd6];
	// inline asm
	prmt.b32 %r4795, %r4919, %r4918, %r7;
	// inline asm
	st.local.u32 	[%rd8+4], %r4795;
	ld.local.u32 	%r4800, [%rd6];
	ld.local.u32 	%r4801, [%rd5+12];
	// inline asm
	prmt.b32 %r4799, %r4800, %r4801, %r7;
	// inline asm
	st.local.u32 	[%rd8], %r4799;
	ld.local.v2.u32 	{%r4920, %r4921}, [%rd5+8];
	// inline asm
	prmt.b32 %r4803, %r4921, %r4920, %r7;
	// inline asm
	st.local.u32 	[%rd7+12], %r4803;
	ld.local.u32 	%r4808, [%rd5+8];
	ld.local.u32 	%r4809, [%rd5+4];
	// inline asm
	prmt.b32 %r4807, %r4808, %r4809, %r7;
	// inline asm
	st.local.u32 	[%rd7+8], %r4807;
	ld.local.v2.u32 	{%r4922, %r4923}, [%rd5];
	// inline asm
	prmt.b32 %r4811, %r4923, %r4922, %r7;
	// inline asm
	st.local.u32 	[%rd7+4], %r4811;
	ld.local.u32 	%r4816, [%rd5];
	ld.local.u32 	%r4817, [%rd4+12];
	// inline asm
	prmt.b32 %r4815, %r4816, %r4817, %r7;
	// inline asm
	st.local.u32 	[%rd7], %r4815;
	ld.local.v2.u32 	{%r4924, %r4925}, [%rd4+8];
	// inline asm
	prmt.b32 %r4819, %r4925, %r4924, %r7;
	// inline asm
	st.local.u32 	[%rd6+12], %r4819;
	ld.local.u32 	%r4824, [%rd4+8];
	ld.local.u32 	%r4825, [%rd4+4];
	// inline asm
	prmt.b32 %r4823, %r4824, %r4825, %r7;
	// inline asm
	st.local.u32 	[%rd6+8], %r4823;
	ld.local.v2.u32 	{%r4926, %r4927}, [%rd4];
	// inline asm
	prmt.b32 %r4827, %r4927, %r4926, %r7;
	// inline asm
	st.local.u32 	[%rd6+4], %r4827;
	ld.local.u32 	%r4832, [%rd4];
	ld.local.u32 	%r4833, [%rd3+12];
	// inline asm
	prmt.b32 %r4831, %r4832, %r4833, %r7;
	// inline asm
	st.local.u32 	[%rd6], %r4831;
	ld.local.v2.u32 	{%r4928, %r4929}, [%rd3+8];
	// inline asm
	prmt.b32 %r4835, %r4929, %r4928, %r7;
	// inline asm
	st.local.u32 	[%rd5+12], %r4835;
	ld.local.u32 	%r4840, [%rd3+8];
	ld.local.u32 	%r4841, [%rd3+4];
	// inline asm
	prmt.b32 %r4839, %r4840, %r4841, %r7;
	// inline asm
	st.local.u32 	[%rd5+8], %r4839;
	ld.local.v2.u32 	{%r4930, %r4931}, [%rd3];
	// inline asm
	prmt.b32 %r4843, %r4931, %r4930, %r7;
	// inline asm
	st.local.u32 	[%rd5+4], %r4843;
	ld.local.u32 	%r4848, [%rd3];
	ld.local.u32 	%r4849, [%rd2+12];
	// inline asm
	prmt.b32 %r4847, %r4848, %r4849, %r7;
	// inline asm
	st.local.u32 	[%rd5], %r4847;
	ld.local.v2.u32 	{%r4932, %r4933}, [%rd2+8];
	// inline asm
	prmt.b32 %r4851, %r4933, %r4932, %r7;
	// inline asm
	st.local.u32 	[%rd4+12], %r4851;
	ld.local.u32 	%r4856, [%rd2+8];
	ld.local.u32 	%r4857, [%rd2+4];
	// inline asm
	prmt.b32 %r4855, %r4856, %r4857, %r7;
	// inline asm
	st.local.u32 	[%rd4+8], %r4855;
	ld.local.v2.u32 	{%r4934, %r4935}, [%rd2];
	// inline asm
	prmt.b32 %r4859, %r4935, %r4934, %r7;
	// inline asm
	st.local.u32 	[%rd4+4], %r4859;
	ld.local.u32 	%r4864, [%rd2];
	ld.local.u32 	%r4865, [%rd1+12];
	// inline asm
	prmt.b32 %r4863, %r4864, %r4865, %r7;
	// inline asm
	st.local.u32 	[%rd4], %r4863;
	ld.local.v2.u32 	{%r4936, %r4937}, [%rd1+8];
	// inline asm
	prmt.b32 %r4867, %r4937, %r4936, %r7;
	// inline asm
	st.local.u32 	[%rd3+12], %r4867;
	ld.local.u32 	%r4872, [%rd1+8];
	ld.local.u32 	%r4873, [%rd1+4];
	// inline asm
	prmt.b32 %r4871, %r4872, %r4873, %r7;
	// inline asm
	st.local.u32 	[%rd3+8], %r4871;
	ld.local.v2.u32 	{%r4938, %r4939}, [%rd1];
	// inline asm
	prmt.b32 %r4875, %r4939, %r4938, %r7;
	// inline asm
	st.local.u32 	[%rd3+4], %r4875;
	ld.local.u32 	%r4880, [%rd1];
	// inline asm
	prmt.b32 %r4879, %r4880, %r7360, %r7;
	// inline asm
	st.local.u32 	[%rd3], %r4879;
	st.local.v4.u32 	[%rd2], {%r7360, %r7360, %r7360, %r7360};
	st.local.v2.u32 	[%rd1+8], {%r7360, %r7360};
	mov.u64 	%rd211, 0;
	st.local.u64 	[%rd1], %rd211;
	mov.u32 	%r7361, %r7360;
	mov.u32 	%r7370, %r7360;
	mov.u32 	%r7371, %r7360;
	mov.u32 	%r7372, %r7360;
	bra.uni 	BB3_82;

BB3_52:
	setp.gt.s32	%p4, %r673, 27;
	@%p4 bra 	BB3_60;

	setp.gt.s32	%p10, %r673, 25;
	@%p10 bra 	BB3_57;

	setp.eq.s32	%p13, %r673, 24;
	@%p13 bra 	BB3_70;
	bra.uni 	BB3_55;

BB3_70:
	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7389, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2004, %r2005}, [%rd8+8];
	// inline asm
	prmt.b32 %r7382, %r2005, %r2004, %r7;
	// inline asm
	ld.local.u32 	%r1872, [%rd8+8];
	ld.local.u32 	%r1873, [%rd8+4];
	// inline asm
	prmt.b32 %r7383, %r1872, %r1873, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2006, %r2007}, [%rd8];
	// inline asm
	prmt.b32 %r7384, %r2007, %r2006, %r7;
	// inline asm
	ld.local.u32 	%r1880, [%rd8];
	ld.local.u32 	%r1881, [%rd7+12];
	// inline asm
	prmt.b32 %r7385, %r1880, %r1881, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2008, %r2009}, [%rd7+8];
	// inline asm
	prmt.b32 %r7378, %r2009, %r2008, %r7;
	// inline asm
	ld.local.u32 	%r1888, [%rd7+8];
	ld.local.u32 	%r1889, [%rd7+4];
	// inline asm
	prmt.b32 %r7379, %r1888, %r1889, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2010, %r2011}, [%rd7];
	// inline asm
	prmt.b32 %r7380, %r2011, %r2010, %r7;
	// inline asm
	ld.local.u32 	%r1896, [%rd7];
	ld.local.u32 	%r1897, [%rd6+12];
	// inline asm
	prmt.b32 %r7381, %r1896, %r1897, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2012, %r2013}, [%rd6+8];
	// inline asm
	prmt.b32 %r7374, %r2013, %r2012, %r7;
	// inline asm
	ld.local.u32 	%r1904, [%rd6+8];
	ld.local.u32 	%r1905, [%rd6+4];
	// inline asm
	prmt.b32 %r7375, %r1904, %r1905, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2014, %r2015}, [%rd6];
	// inline asm
	prmt.b32 %r7376, %r2015, %r2014, %r7;
	// inline asm
	ld.local.u32 	%r1912, [%rd6];
	ld.local.u32 	%r1913, [%rd5+12];
	// inline asm
	prmt.b32 %r7377, %r1912, %r1913, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2016, %r2017}, [%rd5+8];
	// inline asm
	prmt.b32 %r7370, %r2017, %r2016, %r7;
	// inline asm
	ld.local.u32 	%r1920, [%rd5+8];
	ld.local.u32 	%r1921, [%rd5+4];
	// inline asm
	prmt.b32 %r7371, %r1920, %r1921, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2018, %r2019}, [%rd5];
	// inline asm
	prmt.b32 %r7372, %r2019, %r2018, %r7;
	// inline asm
	ld.local.u32 	%r1928, [%rd5];
	ld.local.u32 	%r1929, [%rd4+12];
	// inline asm
	prmt.b32 %r7373, %r1928, %r1929, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2020, %r2021}, [%rd4+8];
	// inline asm
	prmt.b32 %r7366, %r2021, %r2020, %r7;
	// inline asm
	ld.local.u32 	%r1936, [%rd4+8];
	ld.local.u32 	%r1937, [%rd4+4];
	// inline asm
	prmt.b32 %r7367, %r1936, %r1937, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2022, %r2023}, [%rd4];
	// inline asm
	prmt.b32 %r7368, %r2023, %r2022, %r7;
	// inline asm
	ld.local.u32 	%r1944, [%rd4];
	ld.local.u32 	%r1945, [%rd3+12];
	// inline asm
	prmt.b32 %r7369, %r1944, %r1945, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2024, %r2025}, [%rd3+8];
	// inline asm
	prmt.b32 %r7362, %r2025, %r2024, %r7;
	// inline asm
	ld.local.u32 	%r1952, [%rd3+8];
	ld.local.u32 	%r1953, [%rd3+4];
	// inline asm
	prmt.b32 %r7363, %r1952, %r1953, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2026, %r2027}, [%rd3];
	// inline asm
	prmt.b32 %r7364, %r2027, %r2026, %r7;
	// inline asm
	ld.local.u32 	%r1960, [%rd3];
	ld.local.u32 	%r1961, [%rd2+12];
	// inline asm
	prmt.b32 %r7365, %r1960, %r1961, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2028, %r2029}, [%rd2+8];
	// inline asm
	prmt.b32 %r1963, %r2029, %r2028, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r1963;
	ld.local.u32 	%r1968, [%rd2+8];
	ld.local.u32 	%r1969, [%rd2+4];
	// inline asm
	prmt.b32 %r1967, %r1968, %r1969, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r1967;
	ld.local.v2.u32 	{%r2030, %r2031}, [%rd2];
	// inline asm
	prmt.b32 %r1971, %r2031, %r2030, %r7;
	// inline asm
	st.local.u32 	[%rd8+4], %r1971;
	ld.local.u32 	%r1976, [%rd2];
	ld.local.u32 	%r1977, [%rd1+12];
	// inline asm
	prmt.b32 %r1975, %r1976, %r1977, %r7;
	// inline asm
	st.local.u32 	[%rd8], %r1975;
	ld.local.v2.u32 	{%r2032, %r2033}, [%rd1+8];
	// inline asm
	prmt.b32 %r1979, %r2033, %r2032, %r7;
	// inline asm
	st.local.u32 	[%rd7+12], %r1979;
	ld.local.u32 	%r1984, [%rd1+8];
	ld.local.u32 	%r1985, [%rd1+4];
	// inline asm
	prmt.b32 %r1983, %r1984, %r1985, %r7;
	// inline asm
	st.local.u32 	[%rd7+8], %r1983;
	ld.local.v2.u32 	{%r2034, %r2035}, [%rd1];
	// inline asm
	prmt.b32 %r1987, %r2035, %r2034, %r7;
	// inline asm
	st.local.u32 	[%rd7+4], %r1987;
	ld.local.u32 	%r1992, [%rd1];
	// inline asm
	prmt.b32 %r1991, %r1992, %r7360, %r7;
	// inline asm
	st.local.u32 	[%rd7], %r1991;
	st.local.v4.u32 	[%rd6], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd5], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd4], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd3], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd2], {%r7360, %r7360, %r7360, %r7360};
	st.local.v2.u32 	[%rd1+8], {%r7360, %r7360};
	mov.u64 	%rd195, 0;
	st.local.u64 	[%rd1], %rd195;
	mov.u32 	%r7361, %r7360;
	mov.u32 	%r7386, %r7360;
	mov.u32 	%r7387, %r7360;
	mov.u32 	%r7388, %r7360;
	bra.uni 	BB3_86;

BB3_14:
	setp.gt.s32	%p39, %r673, 5;
	@%p39 bra 	BB3_18;

	setp.eq.s32	%p42, %r673, 4;
	@%p42 bra 	BB3_80;
	bra.uni 	BB3_16;

BB3_80:
	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7369, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r5674, %r5675}, [%rd8+8];
	// inline asm
	prmt.b32 %r7362, %r5675, %r5674, %r7;
	// inline asm
	ld.local.u32 	%r5522, [%rd8+8];
	ld.local.u32 	%r5523, [%rd8+4];
	// inline asm
	prmt.b32 %r7363, %r5522, %r5523, %r7;
	// inline asm
	ld.local.v2.u32 	{%r5676, %r5677}, [%rd8];
	// inline asm
	prmt.b32 %r7364, %r5677, %r5676, %r7;
	// inline asm
	ld.local.u32 	%r5530, [%rd8];
	ld.local.u32 	%r5531, [%rd7+12];
	// inline asm
	prmt.b32 %r7365, %r5530, %r5531, %r7;
	// inline asm
	ld.local.v2.u32 	{%r5678, %r5679}, [%rd7+8];
	// inline asm
	prmt.b32 %r5533, %r5679, %r5678, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r5533;
	ld.local.u32 	%r5538, [%rd7+8];
	ld.local.u32 	%r5539, [%rd7+4];
	// inline asm
	prmt.b32 %r5537, %r5538, %r5539, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r5537;
	ld.local.v2.u32 	{%r5680, %r5681}, [%rd7];
	// inline asm
	prmt.b32 %r5541, %r5681, %r5680, %r7;
	// inline asm
	st.local.u32 	[%rd8+4], %r5541;
	ld.local.u32 	%r5546, [%rd7];
	ld.local.u32 	%r5547, [%rd6+12];
	// inline asm
	prmt.b32 %r5545, %r5546, %r5547, %r7;
	// inline asm
	st.local.u32 	[%rd8], %r5545;
	ld.local.v2.u32 	{%r5682, %r5683}, [%rd6+8];
	// inline asm
	prmt.b32 %r5549, %r5683, %r5682, %r7;
	// inline asm
	st.local.u32 	[%rd7+12], %r5549;
	ld.local.u32 	%r5554, [%rd6+8];
	ld.local.u32 	%r5555, [%rd6+4];
	// inline asm
	prmt.b32 %r5553, %r5554, %r5555, %r7;
	// inline asm
	st.local.u32 	[%rd7+8], %r5553;
	ld.local.v2.u32 	{%r5684, %r5685}, [%rd6];
	// inline asm
	prmt.b32 %r5557, %r5685, %r5684, %r7;
	// inline asm
	st.local.u32 	[%rd7+4], %r5557;
	ld.local.u32 	%r5562, [%rd6];
	ld.local.u32 	%r5563, [%rd5+12];
	// inline asm
	prmt.b32 %r5561, %r5562, %r5563, %r7;
	// inline asm
	st.local.u32 	[%rd7], %r5561;
	ld.local.v2.u32 	{%r5686, %r5687}, [%rd5+8];
	// inline asm
	prmt.b32 %r5565, %r5687, %r5686, %r7;
	// inline asm
	st.local.u32 	[%rd6+12], %r5565;
	ld.local.u32 	%r5570, [%rd5+8];
	ld.local.u32 	%r5571, [%rd5+4];
	// inline asm
	prmt.b32 %r5569, %r5570, %r5571, %r7;
	// inline asm
	st.local.u32 	[%rd6+8], %r5569;
	ld.local.v2.u32 	{%r5688, %r5689}, [%rd5];
	// inline asm
	prmt.b32 %r5573, %r5689, %r5688, %r7;
	// inline asm
	st.local.u32 	[%rd6+4], %r5573;
	ld.local.u32 	%r5578, [%rd5];
	ld.local.u32 	%r5579, [%rd4+12];
	// inline asm
	prmt.b32 %r5577, %r5578, %r5579, %r7;
	// inline asm
	st.local.u32 	[%rd6], %r5577;
	ld.local.v2.u32 	{%r5690, %r5691}, [%rd4+8];
	// inline asm
	prmt.b32 %r5581, %r5691, %r5690, %r7;
	// inline asm
	st.local.u32 	[%rd5+12], %r5581;
	ld.local.u32 	%r5586, [%rd4+8];
	ld.local.u32 	%r5587, [%rd4+4];
	// inline asm
	prmt.b32 %r5585, %r5586, %r5587, %r7;
	// inline asm
	st.local.u32 	[%rd5+8], %r5585;
	ld.local.v2.u32 	{%r5692, %r5693}, [%rd4];
	// inline asm
	prmt.b32 %r5589, %r5693, %r5692, %r7;
	// inline asm
	st.local.u32 	[%rd5+4], %r5589;
	ld.local.u32 	%r5594, [%rd4];
	ld.local.u32 	%r5595, [%rd3+12];
	// inline asm
	prmt.b32 %r5593, %r5594, %r5595, %r7;
	// inline asm
	st.local.u32 	[%rd5], %r5593;
	ld.local.v2.u32 	{%r5694, %r5695}, [%rd3+8];
	// inline asm
	prmt.b32 %r5597, %r5695, %r5694, %r7;
	// inline asm
	st.local.u32 	[%rd4+12], %r5597;
	ld.local.u32 	%r5602, [%rd3+8];
	ld.local.u32 	%r5603, [%rd3+4];
	// inline asm
	prmt.b32 %r5601, %r5602, %r5603, %r7;
	// inline asm
	st.local.u32 	[%rd4+8], %r5601;
	ld.local.v2.u32 	{%r5696, %r5697}, [%rd3];
	// inline asm
	prmt.b32 %r5605, %r5697, %r5696, %r7;
	// inline asm
	st.local.u32 	[%rd4+4], %r5605;
	ld.local.u32 	%r5610, [%rd3];
	ld.local.u32 	%r5611, [%rd2+12];
	// inline asm
	prmt.b32 %r5609, %r5610, %r5611, %r7;
	// inline asm
	st.local.u32 	[%rd4], %r5609;
	ld.local.v2.u32 	{%r5698, %r5699}, [%rd2+8];
	// inline asm
	prmt.b32 %r5613, %r5699, %r5698, %r7;
	// inline asm
	st.local.u32 	[%rd3+12], %r5613;
	ld.local.u32 	%r5618, [%rd2+8];
	ld.local.u32 	%r5619, [%rd2+4];
	// inline asm
	prmt.b32 %r5617, %r5618, %r5619, %r7;
	// inline asm
	st.local.u32 	[%rd3+8], %r5617;
	ld.local.v2.u32 	{%r5700, %r5701}, [%rd2];
	// inline asm
	prmt.b32 %r5621, %r5701, %r5700, %r7;
	// inline asm
	st.local.u32 	[%rd3+4], %r5621;
	ld.local.u32 	%r5626, [%rd2];
	ld.local.u32 	%r5627, [%rd1+12];
	// inline asm
	prmt.b32 %r5625, %r5626, %r5627, %r7;
	// inline asm
	st.local.u32 	[%rd3], %r5625;
	ld.local.v2.u32 	{%r5702, %r5703}, [%rd1+8];
	// inline asm
	prmt.b32 %r5629, %r5703, %r5702, %r7;
	// inline asm
	st.local.u32 	[%rd2+12], %r5629;
	ld.local.u32 	%r5634, [%rd1+8];
	ld.local.u32 	%r5635, [%rd1+4];
	// inline asm
	prmt.b32 %r5633, %r5634, %r5635, %r7;
	// inline asm
	st.local.u32 	[%rd2+8], %r5633;
	ld.local.v2.u32 	{%r5704, %r5705}, [%rd1];
	// inline asm
	prmt.b32 %r5637, %r5705, %r5704, %r7;
	// inline asm
	st.local.u32 	[%rd2+4], %r5637;
	ld.local.u32 	%r5642, [%rd1];
	// inline asm
	prmt.b32 %r5641, %r5642, %r7360, %r7;
	// inline asm
	st.local.u32 	[%rd2], %r5641;
	st.local.v2.u32 	[%rd1+8], {%r7360, %r7360};
	mov.u64 	%rd215, 0;
	st.local.u64 	[%rd1], %rd215;
	mov.u32 	%r7361, %r7360;
	mov.u32 	%r7366, %r7360;
	mov.u32 	%r7367, %r7360;
	mov.u32 	%r7368, %r7360;
	bra.uni 	BB3_81;

BB3_45:
	setp.gt.s32	%p16, %r673, 21;
	@%p16 bra 	BB3_49;

	setp.eq.s32	%p19, %r673, 20;
	@%p19 bra 	BB3_72;
	bra.uni 	BB3_47;

BB3_72:
	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7385, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2706, %r2707}, [%rd8+8];
	// inline asm
	prmt.b32 %r7378, %r2707, %r2706, %r7;
	// inline asm
	ld.local.u32 	%r2570, [%rd8+8];
	ld.local.u32 	%r2571, [%rd8+4];
	// inline asm
	prmt.b32 %r7379, %r2570, %r2571, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2708, %r2709}, [%rd8];
	// inline asm
	prmt.b32 %r7380, %r2709, %r2708, %r7;
	// inline asm
	ld.local.u32 	%r2578, [%rd8];
	ld.local.u32 	%r2579, [%rd7+12];
	// inline asm
	prmt.b32 %r7381, %r2578, %r2579, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2710, %r2711}, [%rd7+8];
	// inline asm
	prmt.b32 %r7374, %r2711, %r2710, %r7;
	// inline asm
	ld.local.u32 	%r2586, [%rd7+8];
	ld.local.u32 	%r2587, [%rd7+4];
	// inline asm
	prmt.b32 %r7375, %r2586, %r2587, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2712, %r2713}, [%rd7];
	// inline asm
	prmt.b32 %r7376, %r2713, %r2712, %r7;
	// inline asm
	ld.local.u32 	%r2594, [%rd7];
	ld.local.u32 	%r2595, [%rd6+12];
	// inline asm
	prmt.b32 %r7377, %r2594, %r2595, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2714, %r2715}, [%rd6+8];
	// inline asm
	prmt.b32 %r7370, %r2715, %r2714, %r7;
	// inline asm
	ld.local.u32 	%r2602, [%rd6+8];
	ld.local.u32 	%r2603, [%rd6+4];
	// inline asm
	prmt.b32 %r7371, %r2602, %r2603, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2716, %r2717}, [%rd6];
	// inline asm
	prmt.b32 %r7372, %r2717, %r2716, %r7;
	// inline asm
	ld.local.u32 	%r2610, [%rd6];
	ld.local.u32 	%r2611, [%rd5+12];
	// inline asm
	prmt.b32 %r7373, %r2610, %r2611, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2718, %r2719}, [%rd5+8];
	// inline asm
	prmt.b32 %r7366, %r2719, %r2718, %r7;
	// inline asm
	ld.local.u32 	%r2618, [%rd5+8];
	ld.local.u32 	%r2619, [%rd5+4];
	// inline asm
	prmt.b32 %r7367, %r2618, %r2619, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2720, %r2721}, [%rd5];
	// inline asm
	prmt.b32 %r7368, %r2721, %r2720, %r7;
	// inline asm
	ld.local.u32 	%r2626, [%rd5];
	ld.local.u32 	%r2627, [%rd4+12];
	// inline asm
	prmt.b32 %r7369, %r2626, %r2627, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2722, %r2723}, [%rd4+8];
	// inline asm
	prmt.b32 %r7362, %r2723, %r2722, %r7;
	// inline asm
	ld.local.u32 	%r2634, [%rd4+8];
	ld.local.u32 	%r2635, [%rd4+4];
	// inline asm
	prmt.b32 %r7363, %r2634, %r2635, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2724, %r2725}, [%rd4];
	// inline asm
	prmt.b32 %r7364, %r2725, %r2724, %r7;
	// inline asm
	ld.local.u32 	%r2642, [%rd4];
	ld.local.u32 	%r2643, [%rd3+12];
	// inline asm
	prmt.b32 %r7365, %r2642, %r2643, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2726, %r2727}, [%rd3+8];
	// inline asm
	prmt.b32 %r2645, %r2727, %r2726, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r2645;
	ld.local.u32 	%r2650, [%rd3+8];
	ld.local.u32 	%r2651, [%rd3+4];
	// inline asm
	prmt.b32 %r2649, %r2650, %r2651, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r2649;
	ld.local.v2.u32 	{%r2728, %r2729}, [%rd3];
	// inline asm
	prmt.b32 %r2653, %r2729, %r2728, %r7;
	// inline asm
	st.local.u32 	[%rd8+4], %r2653;
	ld.local.u32 	%r2658, [%rd3];
	ld.local.u32 	%r2659, [%rd2+12];
	// inline asm
	prmt.b32 %r2657, %r2658, %r2659, %r7;
	// inline asm
	st.local.u32 	[%rd8], %r2657;
	ld.local.v2.u32 	{%r2730, %r2731}, [%rd2+8];
	// inline asm
	prmt.b32 %r2661, %r2731, %r2730, %r7;
	// inline asm
	st.local.u32 	[%rd7+12], %r2661;
	ld.local.u32 	%r2666, [%rd2+8];
	ld.local.u32 	%r2667, [%rd2+4];
	// inline asm
	prmt.b32 %r2665, %r2666, %r2667, %r7;
	// inline asm
	st.local.u32 	[%rd7+8], %r2665;
	ld.local.v2.u32 	{%r2732, %r2733}, [%rd2];
	// inline asm
	prmt.b32 %r2669, %r2733, %r2732, %r7;
	// inline asm
	st.local.u32 	[%rd7+4], %r2669;
	ld.local.u32 	%r2674, [%rd2];
	ld.local.u32 	%r2675, [%rd1+12];
	// inline asm
	prmt.b32 %r2673, %r2674, %r2675, %r7;
	// inline asm
	st.local.u32 	[%rd7], %r2673;
	ld.local.v2.u32 	{%r2734, %r2735}, [%rd1+8];
	// inline asm
	prmt.b32 %r2677, %r2735, %r2734, %r7;
	// inline asm
	st.local.u32 	[%rd6+12], %r2677;
	ld.local.u32 	%r2682, [%rd1+8];
	ld.local.u32 	%r2683, [%rd1+4];
	// inline asm
	prmt.b32 %r2681, %r2682, %r2683, %r7;
	// inline asm
	st.local.u32 	[%rd6+8], %r2681;
	ld.local.v2.u32 	{%r2736, %r2737}, [%rd1];
	// inline asm
	prmt.b32 %r2685, %r2737, %r2736, %r7;
	// inline asm
	st.local.u32 	[%rd6+4], %r2685;
	ld.local.u32 	%r2690, [%rd1];
	// inline asm
	prmt.b32 %r2689, %r2690, %r7360, %r7;
	// inline asm
	st.local.u32 	[%rd6], %r2689;
	st.local.v4.u32 	[%rd5], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd4], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd3], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd2], {%r7360, %r7360, %r7360, %r7360};
	st.local.v2.u32 	[%rd1+8], {%r7360, %r7360};
	mov.u64 	%rd199, 0;
	st.local.u64 	[%rd1], %rd199;
	mov.u32 	%r7361, %r7360;
	mov.u32 	%r7382, %r7360;
	mov.u32 	%r7383, %r7360;
	mov.u32 	%r7384, %r7360;
	bra.uni 	BB3_85;

BB3_29:
	setp.gt.s32	%p28, %r673, 13;
	@%p28 bra 	BB3_33;

	setp.eq.s32	%p31, %r673, 12;
	@%p31 bra 	BB3_76;
	bra.uni 	BB3_31;

BB3_76:
	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7377, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r4158, %r4159}, [%rd8+8];
	// inline asm
	prmt.b32 %r7370, %r4159, %r4158, %r7;
	// inline asm
	ld.local.u32 	%r4014, [%rd8+8];
	ld.local.u32 	%r4015, [%rd8+4];
	// inline asm
	prmt.b32 %r7371, %r4014, %r4015, %r7;
	// inline asm
	ld.local.v2.u32 	{%r4160, %r4161}, [%rd8];
	// inline asm
	prmt.b32 %r7372, %r4161, %r4160, %r7;
	// inline asm
	ld.local.u32 	%r4022, [%rd8];
	ld.local.u32 	%r4023, [%rd7+12];
	// inline asm
	prmt.b32 %r7373, %r4022, %r4023, %r7;
	// inline asm
	ld.local.v2.u32 	{%r4162, %r4163}, [%rd7+8];
	// inline asm
	prmt.b32 %r7366, %r4163, %r4162, %r7;
	// inline asm
	ld.local.u32 	%r4030, [%rd7+8];
	ld.local.u32 	%r4031, [%rd7+4];
	// inline asm
	prmt.b32 %r7367, %r4030, %r4031, %r7;
	// inline asm
	ld.local.v2.u32 	{%r4164, %r4165}, [%rd7];
	// inline asm
	prmt.b32 %r7368, %r4165, %r4164, %r7;
	// inline asm
	ld.local.u32 	%r4038, [%rd7];
	ld.local.u32 	%r4039, [%rd6+12];
	// inline asm
	prmt.b32 %r7369, %r4038, %r4039, %r7;
	// inline asm
	ld.local.v2.u32 	{%r4166, %r4167}, [%rd6+8];
	// inline asm
	prmt.b32 %r7362, %r4167, %r4166, %r7;
	// inline asm
	ld.local.u32 	%r4046, [%rd6+8];
	ld.local.u32 	%r4047, [%rd6+4];
	// inline asm
	prmt.b32 %r7363, %r4046, %r4047, %r7;
	// inline asm
	ld.local.v2.u32 	{%r4168, %r4169}, [%rd6];
	// inline asm
	prmt.b32 %r7364, %r4169, %r4168, %r7;
	// inline asm
	ld.local.u32 	%r4054, [%rd6];
	ld.local.u32 	%r4055, [%rd5+12];
	// inline asm
	prmt.b32 %r7365, %r4054, %r4055, %r7;
	// inline asm
	ld.local.v2.u32 	{%r4170, %r4171}, [%rd5+8];
	// inline asm
	prmt.b32 %r4057, %r4171, %r4170, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r4057;
	ld.local.u32 	%r4062, [%rd5+8];
	ld.local.u32 	%r4063, [%rd5+4];
	// inline asm
	prmt.b32 %r4061, %r4062, %r4063, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r4061;
	ld.local.v2.u32 	{%r4172, %r4173}, [%rd5];
	// inline asm
	prmt.b32 %r4065, %r4173, %r4172, %r7;
	// inline asm
	st.local.u32 	[%rd8+4], %r4065;
	ld.local.u32 	%r4070, [%rd5];
	ld.local.u32 	%r4071, [%rd4+12];
	// inline asm
	prmt.b32 %r4069, %r4070, %r4071, %r7;
	// inline asm
	st.local.u32 	[%rd8], %r4069;
	ld.local.v2.u32 	{%r4174, %r4175}, [%rd4+8];
	// inline asm
	prmt.b32 %r4073, %r4175, %r4174, %r7;
	// inline asm
	st.local.u32 	[%rd7+12], %r4073;
	ld.local.u32 	%r4078, [%rd4+8];
	ld.local.u32 	%r4079, [%rd4+4];
	// inline asm
	prmt.b32 %r4077, %r4078, %r4079, %r7;
	// inline asm
	st.local.u32 	[%rd7+8], %r4077;
	ld.local.v2.u32 	{%r4176, %r4177}, [%rd4];
	// inline asm
	prmt.b32 %r4081, %r4177, %r4176, %r7;
	// inline asm
	st.local.u32 	[%rd7+4], %r4081;
	ld.local.u32 	%r4086, [%rd4];
	ld.local.u32 	%r4087, [%rd3+12];
	// inline asm
	prmt.b32 %r4085, %r4086, %r4087, %r7;
	// inline asm
	st.local.u32 	[%rd7], %r4085;
	ld.local.v2.u32 	{%r4178, %r4179}, [%rd3+8];
	// inline asm
	prmt.b32 %r4089, %r4179, %r4178, %r7;
	// inline asm
	st.local.u32 	[%rd6+12], %r4089;
	ld.local.u32 	%r4094, [%rd3+8];
	ld.local.u32 	%r4095, [%rd3+4];
	// inline asm
	prmt.b32 %r4093, %r4094, %r4095, %r7;
	// inline asm
	st.local.u32 	[%rd6+8], %r4093;
	ld.local.v2.u32 	{%r4180, %r4181}, [%rd3];
	// inline asm
	prmt.b32 %r4097, %r4181, %r4180, %r7;
	// inline asm
	st.local.u32 	[%rd6+4], %r4097;
	ld.local.u32 	%r4102, [%rd3];
	ld.local.u32 	%r4103, [%rd2+12];
	// inline asm
	prmt.b32 %r4101, %r4102, %r4103, %r7;
	// inline asm
	st.local.u32 	[%rd6], %r4101;
	ld.local.v2.u32 	{%r4182, %r4183}, [%rd2+8];
	// inline asm
	prmt.b32 %r4105, %r4183, %r4182, %r7;
	// inline asm
	st.local.u32 	[%rd5+12], %r4105;
	ld.local.u32 	%r4110, [%rd2+8];
	ld.local.u32 	%r4111, [%rd2+4];
	// inline asm
	prmt.b32 %r4109, %r4110, %r4111, %r7;
	// inline asm
	st.local.u32 	[%rd5+8], %r4109;
	ld.local.v2.u32 	{%r4184, %r4185}, [%rd2];
	// inline asm
	prmt.b32 %r4113, %r4185, %r4184, %r7;
	// inline asm
	st.local.u32 	[%rd5+4], %r4113;
	ld.local.u32 	%r4118, [%rd2];
	ld.local.u32 	%r4119, [%rd1+12];
	// inline asm
	prmt.b32 %r4117, %r4118, %r4119, %r7;
	// inline asm
	st.local.u32 	[%rd5], %r4117;
	ld.local.v2.u32 	{%r4186, %r4187}, [%rd1+8];
	// inline asm
	prmt.b32 %r4121, %r4187, %r4186, %r7;
	// inline asm
	st.local.u32 	[%rd4+12], %r4121;
	ld.local.u32 	%r4126, [%rd1+8];
	ld.local.u32 	%r4127, [%rd1+4];
	// inline asm
	prmt.b32 %r4125, %r4126, %r4127, %r7;
	// inline asm
	st.local.u32 	[%rd4+8], %r4125;
	ld.local.v2.u32 	{%r4188, %r4189}, [%rd1];
	// inline asm
	prmt.b32 %r4129, %r4189, %r4188, %r7;
	// inline asm
	st.local.u32 	[%rd4+4], %r4129;
	ld.local.u32 	%r4134, [%rd1];
	// inline asm
	prmt.b32 %r4133, %r4134, %r7360, %r7;
	// inline asm
	st.local.u32 	[%rd4], %r4133;
	st.local.v4.u32 	[%rd3], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd2], {%r7360, %r7360, %r7360, %r7360};
	st.local.v2.u32 	[%rd1+8], {%r7360, %r7360};
	mov.u64 	%rd207, 0;
	st.local.u64 	[%rd1], %rd207;
	mov.u32 	%r7361, %r7360;
	mov.u32 	%r7374, %r7360;
	mov.u32 	%r7375, %r7360;
	mov.u32 	%r7376, %r7360;
	bra.uni 	BB3_83;

BB3_60:
	setp.gt.s32	%p5, %r673, 29;
	@%p5 bra 	BB3_64;

	setp.eq.s32	%p8, %r673, 28;
	@%p8 bra 	BB3_68;
	bra.uni 	BB3_62;

BB3_68:
	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7393, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1318, %r1319}, [%rd8+8];
	// inline asm
	prmt.b32 %r7386, %r1319, %r1318, %r7;
	// inline asm
	ld.local.u32 	%r1190, [%rd8+8];
	ld.local.u32 	%r1191, [%rd8+4];
	// inline asm
	prmt.b32 %r7387, %r1190, %r1191, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1320, %r1321}, [%rd8];
	// inline asm
	prmt.b32 %r7388, %r1321, %r1320, %r7;
	// inline asm
	ld.local.u32 	%r1198, [%rd8];
	ld.local.u32 	%r1199, [%rd7+12];
	// inline asm
	prmt.b32 %r7389, %r1198, %r1199, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1322, %r1323}, [%rd7+8];
	// inline asm
	prmt.b32 %r7382, %r1323, %r1322, %r7;
	// inline asm
	ld.local.u32 	%r1206, [%rd7+8];
	ld.local.u32 	%r1207, [%rd7+4];
	// inline asm
	prmt.b32 %r7383, %r1206, %r1207, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1324, %r1325}, [%rd7];
	// inline asm
	prmt.b32 %r7384, %r1325, %r1324, %r7;
	// inline asm
	ld.local.u32 	%r1214, [%rd7];
	ld.local.u32 	%r1215, [%rd6+12];
	// inline asm
	prmt.b32 %r7385, %r1214, %r1215, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1326, %r1327}, [%rd6+8];
	// inline asm
	prmt.b32 %r7378, %r1327, %r1326, %r7;
	// inline asm
	ld.local.u32 	%r1222, [%rd6+8];
	ld.local.u32 	%r1223, [%rd6+4];
	// inline asm
	prmt.b32 %r7379, %r1222, %r1223, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1328, %r1329}, [%rd6];
	// inline asm
	prmt.b32 %r7380, %r1329, %r1328, %r7;
	// inline asm
	ld.local.u32 	%r1230, [%rd6];
	ld.local.u32 	%r1231, [%rd5+12];
	// inline asm
	prmt.b32 %r7381, %r1230, %r1231, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1330, %r1331}, [%rd5+8];
	// inline asm
	prmt.b32 %r7374, %r1331, %r1330, %r7;
	// inline asm
	ld.local.u32 	%r1238, [%rd5+8];
	ld.local.u32 	%r1239, [%rd5+4];
	// inline asm
	prmt.b32 %r7375, %r1238, %r1239, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1332, %r1333}, [%rd5];
	// inline asm
	prmt.b32 %r7376, %r1333, %r1332, %r7;
	// inline asm
	ld.local.u32 	%r1246, [%rd5];
	ld.local.u32 	%r1247, [%rd4+12];
	// inline asm
	prmt.b32 %r7377, %r1246, %r1247, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1334, %r1335}, [%rd4+8];
	// inline asm
	prmt.b32 %r7370, %r1335, %r1334, %r7;
	// inline asm
	ld.local.u32 	%r1254, [%rd4+8];
	ld.local.u32 	%r1255, [%rd4+4];
	// inline asm
	prmt.b32 %r7371, %r1254, %r1255, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1336, %r1337}, [%rd4];
	// inline asm
	prmt.b32 %r7372, %r1337, %r1336, %r7;
	// inline asm
	ld.local.u32 	%r1262, [%rd4];
	ld.local.u32 	%r1263, [%rd3+12];
	// inline asm
	prmt.b32 %r7373, %r1262, %r1263, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1338, %r1339}, [%rd3+8];
	// inline asm
	prmt.b32 %r7366, %r1339, %r1338, %r7;
	// inline asm
	ld.local.u32 	%r1270, [%rd3+8];
	ld.local.u32 	%r1271, [%rd3+4];
	// inline asm
	prmt.b32 %r7367, %r1270, %r1271, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1340, %r1341}, [%rd3];
	// inline asm
	prmt.b32 %r7368, %r1341, %r1340, %r7;
	// inline asm
	ld.local.u32 	%r1278, [%rd3];
	ld.local.u32 	%r1279, [%rd2+12];
	// inline asm
	prmt.b32 %r7369, %r1278, %r1279, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1342, %r1343}, [%rd2+8];
	// inline asm
	prmt.b32 %r7362, %r1343, %r1342, %r7;
	// inline asm
	ld.local.u32 	%r1286, [%rd2+8];
	ld.local.u32 	%r1287, [%rd2+4];
	// inline asm
	prmt.b32 %r7363, %r1286, %r1287, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1344, %r1345}, [%rd2];
	// inline asm
	prmt.b32 %r7364, %r1345, %r1344, %r7;
	// inline asm
	ld.local.u32 	%r1294, [%rd2];
	ld.local.u32 	%r1295, [%rd1+12];
	// inline asm
	prmt.b32 %r7365, %r1294, %r1295, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1346, %r1347}, [%rd1+8];
	// inline asm
	prmt.b32 %r1297, %r1347, %r1346, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r1297;
	ld.local.u32 	%r1302, [%rd1+8];
	ld.local.u32 	%r1303, [%rd1+4];
	// inline asm
	prmt.b32 %r1301, %r1302, %r1303, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r1301;
	ld.local.v2.u32 	{%r1348, %r1349}, [%rd1];
	// inline asm
	prmt.b32 %r1305, %r1349, %r1348, %r7;
	// inline asm
	st.local.u32 	[%rd8+4], %r1305;
	ld.local.u32 	%r1310, [%rd1];
	// inline asm
	prmt.b32 %r1309, %r1310, %r7360, %r7;
	// inline asm
	st.local.u32 	[%rd8], %r1309;
	st.local.v4.u32 	[%rd7], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd6], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd5], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd4], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd3], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd2], {%r7360, %r7360, %r7360, %r7360};
	st.local.v2.u32 	[%rd1+8], {%r7360, %r7360};
	mov.u64 	%rd191, 0;
	st.local.u64 	[%rd1], %rd191;
	mov.u32 	%r7361, %r7360;
	mov.u32 	%r7390, %r7360;
	mov.u32 	%r7391, %r7360;
	mov.u32 	%r7392, %r7360;
	bra.uni 	BB3_89;

BB3_10:
	setp.eq.s32	%p45, %r673, 2;
	@%p45 bra 	BB3_87;
	bra.uni 	BB3_11;

BB3_87:
	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7363, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r6063, %r6064}, [%rd8+8];
	// inline asm
	prmt.b32 %r7364, %r6064, %r6063, %r7;
	// inline asm
	ld.local.u32 	%r5909, [%rd8+8];
	ld.local.u32 	%r5910, [%rd8+4];
	// inline asm
	prmt.b32 %r7365, %r5909, %r5910, %r7;
	// inline asm
	ld.local.v2.u32 	{%r6065, %r6066}, [%rd8];
	// inline asm
	prmt.b32 %r5912, %r6066, %r6065, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r5912;
	ld.local.u32 	%r5917, [%rd8];
	ld.local.u32 	%r5918, [%rd7+12];
	// inline asm
	prmt.b32 %r5916, %r5917, %r5918, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r5916;
	ld.local.v2.u32 	{%r6067, %r6068}, [%rd7+8];
	// inline asm
	prmt.b32 %r5920, %r6068, %r6067, %r7;
	// inline asm
	st.local.u32 	[%rd8+4], %r5920;
	ld.local.u32 	%r5925, [%rd7+8];
	ld.local.u32 	%r5926, [%rd7+4];
	// inline asm
	prmt.b32 %r5924, %r5925, %r5926, %r7;
	// inline asm
	st.local.u32 	[%rd8], %r5924;
	ld.local.v2.u32 	{%r6069, %r6070}, [%rd7];
	// inline asm
	prmt.b32 %r5928, %r6070, %r6069, %r7;
	// inline asm
	st.local.u32 	[%rd7+12], %r5928;
	ld.local.u32 	%r5933, [%rd7];
	ld.local.u32 	%r5934, [%rd6+12];
	// inline asm
	prmt.b32 %r5932, %r5933, %r5934, %r7;
	// inline asm
	st.local.u32 	[%rd7+8], %r5932;
	ld.local.v2.u32 	{%r6071, %r6072}, [%rd6+8];
	// inline asm
	prmt.b32 %r5936, %r6072, %r6071, %r7;
	// inline asm
	st.local.u32 	[%rd7+4], %r5936;
	ld.local.u32 	%r5941, [%rd6+8];
	ld.local.u32 	%r5942, [%rd6+4];
	// inline asm
	prmt.b32 %r5940, %r5941, %r5942, %r7;
	// inline asm
	st.local.u32 	[%rd7], %r5940;
	ld.local.v2.u32 	{%r6073, %r6074}, [%rd6];
	// inline asm
	prmt.b32 %r5944, %r6074, %r6073, %r7;
	// inline asm
	st.local.u32 	[%rd6+12], %r5944;
	ld.local.u32 	%r5949, [%rd6];
	ld.local.u32 	%r5950, [%rd5+12];
	// inline asm
	prmt.b32 %r5948, %r5949, %r5950, %r7;
	// inline asm
	st.local.u32 	[%rd6+8], %r5948;
	ld.local.v2.u32 	{%r6075, %r6076}, [%rd5+8];
	// inline asm
	prmt.b32 %r5952, %r6076, %r6075, %r7;
	// inline asm
	st.local.u32 	[%rd6+4], %r5952;
	ld.local.u32 	%r5957, [%rd5+8];
	ld.local.u32 	%r5958, [%rd5+4];
	// inline asm
	prmt.b32 %r5956, %r5957, %r5958, %r7;
	// inline asm
	st.local.u32 	[%rd6], %r5956;
	ld.local.v2.u32 	{%r6077, %r6078}, [%rd5];
	// inline asm
	prmt.b32 %r5960, %r6078, %r6077, %r7;
	// inline asm
	st.local.u32 	[%rd5+12], %r5960;
	ld.local.u32 	%r5965, [%rd5];
	ld.local.u32 	%r5966, [%rd4+12];
	// inline asm
	prmt.b32 %r5964, %r5965, %r5966, %r7;
	// inline asm
	st.local.u32 	[%rd5+8], %r5964;
	ld.local.v2.u32 	{%r6079, %r6080}, [%rd4+8];
	// inline asm
	prmt.b32 %r5968, %r6080, %r6079, %r7;
	// inline asm
	st.local.u32 	[%rd5+4], %r5968;
	ld.local.u32 	%r5973, [%rd4+8];
	ld.local.u32 	%r5974, [%rd4+4];
	// inline asm
	prmt.b32 %r5972, %r5973, %r5974, %r7;
	// inline asm
	st.local.u32 	[%rd5], %r5972;
	ld.local.v2.u32 	{%r6081, %r6082}, [%rd4];
	// inline asm
	prmt.b32 %r5976, %r6082, %r6081, %r7;
	// inline asm
	st.local.u32 	[%rd4+12], %r5976;
	ld.local.u32 	%r5981, [%rd4];
	ld.local.u32 	%r5982, [%rd3+12];
	// inline asm
	prmt.b32 %r5980, %r5981, %r5982, %r7;
	// inline asm
	st.local.u32 	[%rd4+8], %r5980;
	ld.local.v2.u32 	{%r6083, %r6084}, [%rd3+8];
	// inline asm
	prmt.b32 %r5984, %r6084, %r6083, %r7;
	// inline asm
	st.local.u32 	[%rd4+4], %r5984;
	ld.local.u32 	%r5989, [%rd3+8];
	ld.local.u32 	%r5990, [%rd3+4];
	// inline asm
	prmt.b32 %r5988, %r5989, %r5990, %r7;
	// inline asm
	st.local.u32 	[%rd4], %r5988;
	ld.local.v2.u32 	{%r6085, %r6086}, [%rd3];
	// inline asm
	prmt.b32 %r5992, %r6086, %r6085, %r7;
	// inline asm
	st.local.u32 	[%rd3+12], %r5992;
	ld.local.u32 	%r5997, [%rd3];
	ld.local.u32 	%r5998, [%rd2+12];
	// inline asm
	prmt.b32 %r5996, %r5997, %r5998, %r7;
	// inline asm
	st.local.u32 	[%rd3+8], %r5996;
	ld.local.v2.u32 	{%r6087, %r6088}, [%rd2+8];
	// inline asm
	prmt.b32 %r6000, %r6088, %r6087, %r7;
	// inline asm
	st.local.u32 	[%rd3+4], %r6000;
	ld.local.u32 	%r6005, [%rd2+8];
	ld.local.u32 	%r6006, [%rd2+4];
	// inline asm
	prmt.b32 %r6004, %r6005, %r6006, %r7;
	// inline asm
	st.local.u32 	[%rd3], %r6004;
	ld.local.v2.u32 	{%r6089, %r6090}, [%rd2];
	// inline asm
	prmt.b32 %r6008, %r6090, %r6089, %r7;
	// inline asm
	st.local.u32 	[%rd2+12], %r6008;
	ld.local.u32 	%r6013, [%rd2];
	ld.local.u32 	%r6014, [%rd1+12];
	// inline asm
	prmt.b32 %r6012, %r6013, %r6014, %r7;
	// inline asm
	st.local.u32 	[%rd2+8], %r6012;
	ld.local.v2.u32 	{%r6091, %r6092}, [%rd1+8];
	// inline asm
	prmt.b32 %r6016, %r6092, %r6091, %r7;
	// inline asm
	st.local.u32 	[%rd2+4], %r6016;
	ld.local.u32 	%r6021, [%rd1+8];
	ld.local.u32 	%r6022, [%rd1+4];
	// inline asm
	prmt.b32 %r6020, %r6021, %r6022, %r7;
	// inline asm
	st.local.u32 	[%rd2], %r6020;
	ld.local.v2.u32 	{%r6093, %r6094}, [%rd1];
	// inline asm
	prmt.b32 %r6024, %r6094, %r6093, %r7;
	// inline asm
	st.local.u32 	[%rd1+12], %r6024;
	ld.local.u32 	%r6029, [%rd1];
	// inline asm
	prmt.b32 %r6028, %r6029, %r7360, %r7;
	// inline asm
	st.local.u32 	[%rd1+8], %r6028;
	mov.u64 	%rd217, 0;
	st.local.u64 	[%rd1], %rd217;
	mov.u32 	%r7361, %r7360;
	mov.u32 	%r7362, %r7360;
	bra.uni 	BB3_13;

BB3_42:
	setp.eq.s32	%p22, %r673, 18;
	@%p22 bra 	BB3_73;
	bra.uni 	BB3_43;

BB3_73:
	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7379, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3063, %r3064}, [%rd8+8];
	// inline asm
	prmt.b32 %r7380, %r3064, %r3063, %r7;
	// inline asm
	ld.local.u32 	%r2925, [%rd8+8];
	ld.local.u32 	%r2926, [%rd8+4];
	// inline asm
	prmt.b32 %r7381, %r2925, %r2926, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3065, %r3066}, [%rd8];
	// inline asm
	prmt.b32 %r7374, %r3066, %r3065, %r7;
	// inline asm
	ld.local.u32 	%r2933, [%rd8];
	ld.local.u32 	%r2934, [%rd7+12];
	// inline asm
	prmt.b32 %r7375, %r2933, %r2934, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3067, %r3068}, [%rd7+8];
	// inline asm
	prmt.b32 %r7376, %r3068, %r3067, %r7;
	// inline asm
	ld.local.u32 	%r2941, [%rd7+8];
	ld.local.u32 	%r2942, [%rd7+4];
	// inline asm
	prmt.b32 %r7377, %r2941, %r2942, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3069, %r3070}, [%rd7];
	// inline asm
	prmt.b32 %r7370, %r3070, %r3069, %r7;
	// inline asm
	ld.local.u32 	%r2949, [%rd7];
	ld.local.u32 	%r2950, [%rd6+12];
	// inline asm
	prmt.b32 %r7371, %r2949, %r2950, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3071, %r3072}, [%rd6+8];
	// inline asm
	prmt.b32 %r7372, %r3072, %r3071, %r7;
	// inline asm
	ld.local.u32 	%r2957, [%rd6+8];
	ld.local.u32 	%r2958, [%rd6+4];
	// inline asm
	prmt.b32 %r7373, %r2957, %r2958, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3073, %r3074}, [%rd6];
	// inline asm
	prmt.b32 %r7366, %r3074, %r3073, %r7;
	// inline asm
	ld.local.u32 	%r2965, [%rd6];
	ld.local.u32 	%r2966, [%rd5+12];
	// inline asm
	prmt.b32 %r7367, %r2965, %r2966, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3075, %r3076}, [%rd5+8];
	// inline asm
	prmt.b32 %r7368, %r3076, %r3075, %r7;
	// inline asm
	ld.local.u32 	%r2973, [%rd5+8];
	ld.local.u32 	%r2974, [%rd5+4];
	// inline asm
	prmt.b32 %r7369, %r2973, %r2974, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3077, %r3078}, [%rd5];
	// inline asm
	prmt.b32 %r7362, %r3078, %r3077, %r7;
	// inline asm
	ld.local.u32 	%r2981, [%rd5];
	ld.local.u32 	%r2982, [%rd4+12];
	// inline asm
	prmt.b32 %r7363, %r2981, %r2982, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3079, %r3080}, [%rd4+8];
	// inline asm
	prmt.b32 %r7364, %r3080, %r3079, %r7;
	// inline asm
	ld.local.u32 	%r2989, [%rd4+8];
	ld.local.u32 	%r2990, [%rd4+4];
	// inline asm
	prmt.b32 %r7365, %r2989, %r2990, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3081, %r3082}, [%rd4];
	// inline asm
	prmt.b32 %r2992, %r3082, %r3081, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r2992;
	ld.local.u32 	%r2997, [%rd4];
	ld.local.u32 	%r2998, [%rd3+12];
	// inline asm
	prmt.b32 %r2996, %r2997, %r2998, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r2996;
	ld.local.v2.u32 	{%r3083, %r3084}, [%rd3+8];
	// inline asm
	prmt.b32 %r3000, %r3084, %r3083, %r7;
	// inline asm
	st.local.u32 	[%rd8+4], %r3000;
	ld.local.u32 	%r3005, [%rd3+8];
	ld.local.u32 	%r3006, [%rd3+4];
	// inline asm
	prmt.b32 %r3004, %r3005, %r3006, %r7;
	// inline asm
	st.local.u32 	[%rd8], %r3004;
	ld.local.v2.u32 	{%r3085, %r3086}, [%rd3];
	// inline asm
	prmt.b32 %r3008, %r3086, %r3085, %r7;
	// inline asm
	st.local.u32 	[%rd7+12], %r3008;
	ld.local.u32 	%r3013, [%rd3];
	ld.local.u32 	%r3014, [%rd2+12];
	// inline asm
	prmt.b32 %r3012, %r3013, %r3014, %r7;
	// inline asm
	st.local.u32 	[%rd7+8], %r3012;
	ld.local.v2.u32 	{%r3087, %r3088}, [%rd2+8];
	// inline asm
	prmt.b32 %r3016, %r3088, %r3087, %r7;
	// inline asm
	st.local.u32 	[%rd7+4], %r3016;
	ld.local.u32 	%r3021, [%rd2+8];
	ld.local.u32 	%r3022, [%rd2+4];
	// inline asm
	prmt.b32 %r3020, %r3021, %r3022, %r7;
	// inline asm
	st.local.u32 	[%rd7], %r3020;
	ld.local.v2.u32 	{%r3089, %r3090}, [%rd2];
	// inline asm
	prmt.b32 %r3024, %r3090, %r3089, %r7;
	// inline asm
	st.local.u32 	[%rd6+12], %r3024;
	ld.local.u32 	%r3029, [%rd2];
	ld.local.u32 	%r3030, [%rd1+12];
	// inline asm
	prmt.b32 %r3028, %r3029, %r3030, %r7;
	// inline asm
	st.local.u32 	[%rd6+8], %r3028;
	ld.local.v2.u32 	{%r3091, %r3092}, [%rd1+8];
	// inline asm
	prmt.b32 %r3032, %r3092, %r3091, %r7;
	// inline asm
	st.local.u32 	[%rd6+4], %r3032;
	ld.local.u32 	%r3037, [%rd1+8];
	ld.local.u32 	%r3038, [%rd1+4];
	// inline asm
	prmt.b32 %r3036, %r3037, %r3038, %r7;
	// inline asm
	st.local.u32 	[%rd6], %r3036;
	ld.local.v2.u32 	{%r3093, %r3094}, [%rd1];
	// inline asm
	prmt.b32 %r3040, %r3094, %r3093, %r7;
	// inline asm
	st.local.u32 	[%rd5+12], %r3040;
	ld.local.u32 	%r3045, [%rd1];
	// inline asm
	prmt.b32 %r3044, %r3045, %r7360, %r7;
	// inline asm
	st.local.u32 	[%rd5+8], %r3044;
	st.local.v2.u32 	[%rd5], {%r7360, %r7360};
	st.local.u32 	[%rd4+12], %r7360;
	st.local.u32 	[%rd4+8], %r7360;
	st.local.u32 	[%rd4+4], %r7360;
	st.local.u32 	[%rd4], %r7360;
	st.local.u32 	[%rd3+12], %r7360;
	st.local.u32 	[%rd3+8], %r7360;
	st.local.u32 	[%rd3+4], %r7360;
	st.local.u32 	[%rd3], %r7360;
	st.local.u32 	[%rd2+12], %r7360;
	st.local.u32 	[%rd2+8], %r7360;
	st.local.u32 	[%rd2+4], %r7360;
	st.local.u32 	[%rd2], %r7360;
	st.local.u32 	[%rd1+12], %r7360;
	st.local.u32 	[%rd1+8], %r7360;
	mov.u64 	%rd201, 0;
	st.local.u32 	[%rd1+4], %rd201;
	st.local.u32 	[%rd1], %rd201;
	mov.u32 	%r7361, %r7360;
	mov.u32 	%r7378, %r7360;
	bra.uni 	BB3_84;

BB3_26:
	setp.eq.s32	%p34, %r673, 10;
	@%p34 bra 	BB3_77;
	bra.uni 	BB3_27;

BB3_77:
	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7371, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r4531, %r4532}, [%rd8+8];
	// inline asm
	prmt.b32 %r7372, %r4532, %r4531, %r7;
	// inline asm
	ld.local.u32 	%r4385, [%rd8+8];
	ld.local.u32 	%r4386, [%rd8+4];
	// inline asm
	prmt.b32 %r7373, %r4385, %r4386, %r7;
	// inline asm
	ld.local.v2.u32 	{%r4533, %r4534}, [%rd8];
	// inline asm
	prmt.b32 %r7366, %r4534, %r4533, %r7;
	// inline asm
	ld.local.u32 	%r4393, [%rd8];
	ld.local.u32 	%r4394, [%rd7+12];
	// inline asm
	prmt.b32 %r7367, %r4393, %r4394, %r7;
	// inline asm
	ld.local.v2.u32 	{%r4535, %r4536}, [%rd7+8];
	// inline asm
	prmt.b32 %r7368, %r4536, %r4535, %r7;
	// inline asm
	ld.local.u32 	%r4401, [%rd7+8];
	ld.local.u32 	%r4402, [%rd7+4];
	// inline asm
	prmt.b32 %r7369, %r4401, %r4402, %r7;
	// inline asm
	ld.local.v2.u32 	{%r4537, %r4538}, [%rd7];
	// inline asm
	prmt.b32 %r7362, %r4538, %r4537, %r7;
	// inline asm
	ld.local.u32 	%r4409, [%rd7];
	ld.local.u32 	%r4410, [%rd6+12];
	// inline asm
	prmt.b32 %r7363, %r4409, %r4410, %r7;
	// inline asm
	ld.local.v2.u32 	{%r4539, %r4540}, [%rd6+8];
	// inline asm
	prmt.b32 %r7364, %r4540, %r4539, %r7;
	// inline asm
	ld.local.u32 	%r4417, [%rd6+8];
	ld.local.u32 	%r4418, [%rd6+4];
	// inline asm
	prmt.b32 %r7365, %r4417, %r4418, %r7;
	// inline asm
	ld.local.v2.u32 	{%r4541, %r4542}, [%rd6];
	// inline asm
	prmt.b32 %r4420, %r4542, %r4541, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r4420;
	ld.local.u32 	%r4425, [%rd6];
	ld.local.u32 	%r4426, [%rd5+12];
	// inline asm
	prmt.b32 %r4424, %r4425, %r4426, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r4424;
	ld.local.v2.u32 	{%r4543, %r4544}, [%rd5+8];
	// inline asm
	prmt.b32 %r4428, %r4544, %r4543, %r7;
	// inline asm
	st.local.u32 	[%rd8+4], %r4428;
	ld.local.u32 	%r4433, [%rd5+8];
	ld.local.u32 	%r4434, [%rd5+4];
	// inline asm
	prmt.b32 %r4432, %r4433, %r4434, %r7;
	// inline asm
	st.local.u32 	[%rd8], %r4432;
	ld.local.v2.u32 	{%r4545, %r4546}, [%rd5];
	// inline asm
	prmt.b32 %r4436, %r4546, %r4545, %r7;
	// inline asm
	st.local.u32 	[%rd7+12], %r4436;
	ld.local.u32 	%r4441, [%rd5];
	ld.local.u32 	%r4442, [%rd4+12];
	// inline asm
	prmt.b32 %r4440, %r4441, %r4442, %r7;
	// inline asm
	st.local.u32 	[%rd7+8], %r4440;
	ld.local.v2.u32 	{%r4547, %r4548}, [%rd4+8];
	// inline asm
	prmt.b32 %r4444, %r4548, %r4547, %r7;
	// inline asm
	st.local.u32 	[%rd7+4], %r4444;
	ld.local.u32 	%r4449, [%rd4+8];
	ld.local.u32 	%r4450, [%rd4+4];
	// inline asm
	prmt.b32 %r4448, %r4449, %r4450, %r7;
	// inline asm
	st.local.u32 	[%rd7], %r4448;
	ld.local.v2.u32 	{%r4549, %r4550}, [%rd4];
	// inline asm
	prmt.b32 %r4452, %r4550, %r4549, %r7;
	// inline asm
	st.local.u32 	[%rd6+12], %r4452;
	ld.local.u32 	%r4457, [%rd4];
	ld.local.u32 	%r4458, [%rd3+12];
	// inline asm
	prmt.b32 %r4456, %r4457, %r4458, %r7;
	// inline asm
	st.local.u32 	[%rd6+8], %r4456;
	ld.local.v2.u32 	{%r4551, %r4552}, [%rd3+8];
	// inline asm
	prmt.b32 %r4460, %r4552, %r4551, %r7;
	// inline asm
	st.local.u32 	[%rd6+4], %r4460;
	ld.local.u32 	%r4465, [%rd3+8];
	ld.local.u32 	%r4466, [%rd3+4];
	// inline asm
	prmt.b32 %r4464, %r4465, %r4466, %r7;
	// inline asm
	st.local.u32 	[%rd6], %r4464;
	ld.local.v2.u32 	{%r4553, %r4554}, [%rd3];
	// inline asm
	prmt.b32 %r4468, %r4554, %r4553, %r7;
	// inline asm
	st.local.u32 	[%rd5+12], %r4468;
	ld.local.u32 	%r4473, [%rd3];
	ld.local.u32 	%r4474, [%rd2+12];
	// inline asm
	prmt.b32 %r4472, %r4473, %r4474, %r7;
	// inline asm
	st.local.u32 	[%rd5+8], %r4472;
	ld.local.v2.u32 	{%r4555, %r4556}, [%rd2+8];
	// inline asm
	prmt.b32 %r4476, %r4556, %r4555, %r7;
	// inline asm
	st.local.u32 	[%rd5+4], %r4476;
	ld.local.u32 	%r4481, [%rd2+8];
	ld.local.u32 	%r4482, [%rd2+4];
	// inline asm
	prmt.b32 %r4480, %r4481, %r4482, %r7;
	// inline asm
	st.local.u32 	[%rd5], %r4480;
	ld.local.v2.u32 	{%r4557, %r4558}, [%rd2];
	// inline asm
	prmt.b32 %r4484, %r4558, %r4557, %r7;
	// inline asm
	st.local.u32 	[%rd4+12], %r4484;
	ld.local.u32 	%r4489, [%rd2];
	ld.local.u32 	%r4490, [%rd1+12];
	// inline asm
	prmt.b32 %r4488, %r4489, %r4490, %r7;
	// inline asm
	st.local.u32 	[%rd4+8], %r4488;
	ld.local.v2.u32 	{%r4559, %r4560}, [%rd1+8];
	// inline asm
	prmt.b32 %r4492, %r4560, %r4559, %r7;
	// inline asm
	st.local.u32 	[%rd4+4], %r4492;
	ld.local.u32 	%r4497, [%rd1+8];
	ld.local.u32 	%r4498, [%rd1+4];
	// inline asm
	prmt.b32 %r4496, %r4497, %r4498, %r7;
	// inline asm
	st.local.u32 	[%rd4], %r4496;
	ld.local.v2.u32 	{%r4561, %r4562}, [%rd1];
	// inline asm
	prmt.b32 %r4500, %r4562, %r4561, %r7;
	// inline asm
	st.local.u32 	[%rd3+12], %r4500;
	ld.local.u32 	%r4505, [%rd1];
	// inline asm
	prmt.b32 %r4504, %r4505, %r7360, %r7;
	// inline asm
	st.local.u32 	[%rd3+8], %r4504;
	st.local.v2.u32 	[%rd3], {%r7360, %r7360};
	st.local.u32 	[%rd2+12], %r7360;
	st.local.u32 	[%rd2+8], %r7360;
	st.local.u32 	[%rd2+4], %r7360;
	st.local.u32 	[%rd2], %r7360;
	st.local.u32 	[%rd1+12], %r7360;
	st.local.u32 	[%rd1+8], %r7360;
	mov.u64 	%rd209, 0;
	st.local.u32 	[%rd1+4], %rd209;
	st.local.u32 	[%rd1], %rd209;
	mov.u32 	%r7361, %r7360;
	mov.u32 	%r7370, %r7360;
	bra.uni 	BB3_82;

BB3_57:
	setp.eq.s32	%p11, %r673, 26;
	@%p11 bra 	BB3_69;
	bra.uni 	BB3_58;

BB3_69:
	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7387, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1659, %r1660}, [%rd8+8];
	// inline asm
	prmt.b32 %r7388, %r1660, %r1659, %r7;
	// inline asm
	ld.local.u32 	%r1529, [%rd8+8];
	ld.local.u32 	%r1530, [%rd8+4];
	// inline asm
	prmt.b32 %r7389, %r1529, %r1530, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1661, %r1662}, [%rd8];
	// inline asm
	prmt.b32 %r7382, %r1662, %r1661, %r7;
	// inline asm
	ld.local.u32 	%r1537, [%rd8];
	ld.local.u32 	%r1538, [%rd7+12];
	// inline asm
	prmt.b32 %r7383, %r1537, %r1538, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1663, %r1664}, [%rd7+8];
	// inline asm
	prmt.b32 %r7384, %r1664, %r1663, %r7;
	// inline asm
	ld.local.u32 	%r1545, [%rd7+8];
	ld.local.u32 	%r1546, [%rd7+4];
	// inline asm
	prmt.b32 %r7385, %r1545, %r1546, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1665, %r1666}, [%rd7];
	// inline asm
	prmt.b32 %r7378, %r1666, %r1665, %r7;
	// inline asm
	ld.local.u32 	%r1553, [%rd7];
	ld.local.u32 	%r1554, [%rd6+12];
	// inline asm
	prmt.b32 %r7379, %r1553, %r1554, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1667, %r1668}, [%rd6+8];
	// inline asm
	prmt.b32 %r7380, %r1668, %r1667, %r7;
	// inline asm
	ld.local.u32 	%r1561, [%rd6+8];
	ld.local.u32 	%r1562, [%rd6+4];
	// inline asm
	prmt.b32 %r7381, %r1561, %r1562, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1669, %r1670}, [%rd6];
	// inline asm
	prmt.b32 %r7374, %r1670, %r1669, %r7;
	// inline asm
	ld.local.u32 	%r1569, [%rd6];
	ld.local.u32 	%r1570, [%rd5+12];
	// inline asm
	prmt.b32 %r7375, %r1569, %r1570, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1671, %r1672}, [%rd5+8];
	// inline asm
	prmt.b32 %r7376, %r1672, %r1671, %r7;
	// inline asm
	ld.local.u32 	%r1577, [%rd5+8];
	ld.local.u32 	%r1578, [%rd5+4];
	// inline asm
	prmt.b32 %r7377, %r1577, %r1578, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1673, %r1674}, [%rd5];
	// inline asm
	prmt.b32 %r7370, %r1674, %r1673, %r7;
	// inline asm
	ld.local.u32 	%r1585, [%rd5];
	ld.local.u32 	%r1586, [%rd4+12];
	// inline asm
	prmt.b32 %r7371, %r1585, %r1586, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1675, %r1676}, [%rd4+8];
	// inline asm
	prmt.b32 %r7372, %r1676, %r1675, %r7;
	// inline asm
	ld.local.u32 	%r1593, [%rd4+8];
	ld.local.u32 	%r1594, [%rd4+4];
	// inline asm
	prmt.b32 %r7373, %r1593, %r1594, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1677, %r1678}, [%rd4];
	// inline asm
	prmt.b32 %r7366, %r1678, %r1677, %r7;
	// inline asm
	ld.local.u32 	%r1601, [%rd4];
	ld.local.u32 	%r1602, [%rd3+12];
	// inline asm
	prmt.b32 %r7367, %r1601, %r1602, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1679, %r1680}, [%rd3+8];
	// inline asm
	prmt.b32 %r7368, %r1680, %r1679, %r7;
	// inline asm
	ld.local.u32 	%r1609, [%rd3+8];
	ld.local.u32 	%r1610, [%rd3+4];
	// inline asm
	prmt.b32 %r7369, %r1609, %r1610, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1681, %r1682}, [%rd3];
	// inline asm
	prmt.b32 %r7362, %r1682, %r1681, %r7;
	// inline asm
	ld.local.u32 	%r1617, [%rd3];
	ld.local.u32 	%r1618, [%rd2+12];
	// inline asm
	prmt.b32 %r7363, %r1617, %r1618, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1683, %r1684}, [%rd2+8];
	// inline asm
	prmt.b32 %r7364, %r1684, %r1683, %r7;
	// inline asm
	ld.local.u32 	%r1625, [%rd2+8];
	ld.local.u32 	%r1626, [%rd2+4];
	// inline asm
	prmt.b32 %r7365, %r1625, %r1626, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1685, %r1686}, [%rd2];
	// inline asm
	prmt.b32 %r1628, %r1686, %r1685, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r1628;
	ld.local.u32 	%r1633, [%rd2];
	ld.local.u32 	%r1634, [%rd1+12];
	// inline asm
	prmt.b32 %r1632, %r1633, %r1634, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r1632;
	ld.local.v2.u32 	{%r1687, %r1688}, [%rd1+8];
	// inline asm
	prmt.b32 %r1636, %r1688, %r1687, %r7;
	// inline asm
	st.local.u32 	[%rd8+4], %r1636;
	ld.local.u32 	%r1641, [%rd1+8];
	ld.local.u32 	%r1642, [%rd1+4];
	// inline asm
	prmt.b32 %r1640, %r1641, %r1642, %r7;
	// inline asm
	st.local.u32 	[%rd8], %r1640;
	ld.local.v2.u32 	{%r1689, %r1690}, [%rd1];
	// inline asm
	prmt.b32 %r1644, %r1690, %r1689, %r7;
	// inline asm
	st.local.u32 	[%rd7+12], %r1644;
	ld.local.u32 	%r1649, [%rd1];
	// inline asm
	prmt.b32 %r1648, %r1649, %r7360, %r7;
	// inline asm
	st.local.u32 	[%rd7+8], %r1648;
	st.local.v2.u32 	[%rd7], {%r7360, %r7360};
	st.local.u32 	[%rd6+12], %r7360;
	st.local.u32 	[%rd6+8], %r7360;
	st.local.u32 	[%rd6+4], %r7360;
	st.local.u32 	[%rd6], %r7360;
	st.local.u32 	[%rd5+12], %r7360;
	st.local.u32 	[%rd5+8], %r7360;
	st.local.u32 	[%rd5+4], %r7360;
	st.local.u32 	[%rd5], %r7360;
	st.local.u32 	[%rd4+12], %r7360;
	st.local.u32 	[%rd4+8], %r7360;
	st.local.u32 	[%rd4+4], %r7360;
	st.local.u32 	[%rd4], %r7360;
	st.local.u32 	[%rd3+12], %r7360;
	st.local.u32 	[%rd3+8], %r7360;
	st.local.u32 	[%rd3+4], %r7360;
	st.local.u32 	[%rd3], %r7360;
	st.local.u32 	[%rd2+12], %r7360;
	st.local.u32 	[%rd2+8], %r7360;
	st.local.u32 	[%rd2+4], %r7360;
	st.local.u32 	[%rd2], %r7360;
	st.local.u32 	[%rd1+12], %r7360;
	st.local.u32 	[%rd1+8], %r7360;
	mov.u64 	%rd193, 0;
	st.local.u32 	[%rd1+4], %rd193;
	st.local.u32 	[%rd1], %rd193;
	mov.u32 	%r7361, %r7360;
	mov.u32 	%r7386, %r7360;
	bra.uni 	BB3_86;

BB3_18:
	setp.eq.s32	%p40, %r673, 6;
	@%p40 bra 	BB3_79;
	bra.uni 	BB3_19;

BB3_79:
	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7367, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r5289, %r5290}, [%rd8+8];
	// inline asm
	prmt.b32 %r7368, %r5290, %r5289, %r7;
	// inline asm
	ld.local.u32 	%r5139, [%rd8+8];
	ld.local.u32 	%r5140, [%rd8+4];
	// inline asm
	prmt.b32 %r7369, %r5139, %r5140, %r7;
	// inline asm
	ld.local.v2.u32 	{%r5291, %r5292}, [%rd8];
	// inline asm
	prmt.b32 %r7362, %r5292, %r5291, %r7;
	// inline asm
	ld.local.u32 	%r5147, [%rd8];
	ld.local.u32 	%r5148, [%rd7+12];
	// inline asm
	prmt.b32 %r7363, %r5147, %r5148, %r7;
	// inline asm
	ld.local.v2.u32 	{%r5293, %r5294}, [%rd7+8];
	// inline asm
	prmt.b32 %r7364, %r5294, %r5293, %r7;
	// inline asm
	ld.local.u32 	%r5155, [%rd7+8];
	ld.local.u32 	%r5156, [%rd7+4];
	// inline asm
	prmt.b32 %r7365, %r5155, %r5156, %r7;
	// inline asm
	ld.local.v2.u32 	{%r5295, %r5296}, [%rd7];
	// inline asm
	prmt.b32 %r5158, %r5296, %r5295, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r5158;
	ld.local.u32 	%r5163, [%rd7];
	ld.local.u32 	%r5164, [%rd6+12];
	// inline asm
	prmt.b32 %r5162, %r5163, %r5164, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r5162;
	ld.local.v2.u32 	{%r5297, %r5298}, [%rd6+8];
	// inline asm
	prmt.b32 %r5166, %r5298, %r5297, %r7;
	// inline asm
	st.local.u32 	[%rd8+4], %r5166;
	ld.local.u32 	%r5171, [%rd6+8];
	ld.local.u32 	%r5172, [%rd6+4];
	// inline asm
	prmt.b32 %r5170, %r5171, %r5172, %r7;
	// inline asm
	st.local.u32 	[%rd8], %r5170;
	ld.local.v2.u32 	{%r5299, %r5300}, [%rd6];
	// inline asm
	prmt.b32 %r5174, %r5300, %r5299, %r7;
	// inline asm
	st.local.u32 	[%rd7+12], %r5174;
	ld.local.u32 	%r5179, [%rd6];
	ld.local.u32 	%r5180, [%rd5+12];
	// inline asm
	prmt.b32 %r5178, %r5179, %r5180, %r7;
	// inline asm
	st.local.u32 	[%rd7+8], %r5178;
	ld.local.v2.u32 	{%r5301, %r5302}, [%rd5+8];
	// inline asm
	prmt.b32 %r5182, %r5302, %r5301, %r7;
	// inline asm
	st.local.u32 	[%rd7+4], %r5182;
	ld.local.u32 	%r5187, [%rd5+8];
	ld.local.u32 	%r5188, [%rd5+4];
	// inline asm
	prmt.b32 %r5186, %r5187, %r5188, %r7;
	// inline asm
	st.local.u32 	[%rd7], %r5186;
	ld.local.v2.u32 	{%r5303, %r5304}, [%rd5];
	// inline asm
	prmt.b32 %r5190, %r5304, %r5303, %r7;
	// inline asm
	st.local.u32 	[%rd6+12], %r5190;
	ld.local.u32 	%r5195, [%rd5];
	ld.local.u32 	%r5196, [%rd4+12];
	// inline asm
	prmt.b32 %r5194, %r5195, %r5196, %r7;
	// inline asm
	st.local.u32 	[%rd6+8], %r5194;
	ld.local.v2.u32 	{%r5305, %r5306}, [%rd4+8];
	// inline asm
	prmt.b32 %r5198, %r5306, %r5305, %r7;
	// inline asm
	st.local.u32 	[%rd6+4], %r5198;
	ld.local.u32 	%r5203, [%rd4+8];
	ld.local.u32 	%r5204, [%rd4+4];
	// inline asm
	prmt.b32 %r5202, %r5203, %r5204, %r7;
	// inline asm
	st.local.u32 	[%rd6], %r5202;
	ld.local.v2.u32 	{%r5307, %r5308}, [%rd4];
	// inline asm
	prmt.b32 %r5206, %r5308, %r5307, %r7;
	// inline asm
	st.local.u32 	[%rd5+12], %r5206;
	ld.local.u32 	%r5211, [%rd4];
	ld.local.u32 	%r5212, [%rd3+12];
	// inline asm
	prmt.b32 %r5210, %r5211, %r5212, %r7;
	// inline asm
	st.local.u32 	[%rd5+8], %r5210;
	ld.local.v2.u32 	{%r5309, %r5310}, [%rd3+8];
	// inline asm
	prmt.b32 %r5214, %r5310, %r5309, %r7;
	// inline asm
	st.local.u32 	[%rd5+4], %r5214;
	ld.local.u32 	%r5219, [%rd3+8];
	ld.local.u32 	%r5220, [%rd3+4];
	// inline asm
	prmt.b32 %r5218, %r5219, %r5220, %r7;
	// inline asm
	st.local.u32 	[%rd5], %r5218;
	ld.local.v2.u32 	{%r5311, %r5312}, [%rd3];
	// inline asm
	prmt.b32 %r5222, %r5312, %r5311, %r7;
	// inline asm
	st.local.u32 	[%rd4+12], %r5222;
	ld.local.u32 	%r5227, [%rd3];
	ld.local.u32 	%r5228, [%rd2+12];
	// inline asm
	prmt.b32 %r5226, %r5227, %r5228, %r7;
	// inline asm
	st.local.u32 	[%rd4+8], %r5226;
	ld.local.v2.u32 	{%r5313, %r5314}, [%rd2+8];
	// inline asm
	prmt.b32 %r5230, %r5314, %r5313, %r7;
	// inline asm
	st.local.u32 	[%rd4+4], %r5230;
	ld.local.u32 	%r5235, [%rd2+8];
	ld.local.u32 	%r5236, [%rd2+4];
	// inline asm
	prmt.b32 %r5234, %r5235, %r5236, %r7;
	// inline asm
	st.local.u32 	[%rd4], %r5234;
	ld.local.v2.u32 	{%r5315, %r5316}, [%rd2];
	// inline asm
	prmt.b32 %r5238, %r5316, %r5315, %r7;
	// inline asm
	st.local.u32 	[%rd3+12], %r5238;
	ld.local.u32 	%r5243, [%rd2];
	ld.local.u32 	%r5244, [%rd1+12];
	// inline asm
	prmt.b32 %r5242, %r5243, %r5244, %r7;
	// inline asm
	st.local.u32 	[%rd3+8], %r5242;
	ld.local.v2.u32 	{%r5317, %r5318}, [%rd1+8];
	// inline asm
	prmt.b32 %r5246, %r5318, %r5317, %r7;
	// inline asm
	st.local.u32 	[%rd3+4], %r5246;
	ld.local.u32 	%r5251, [%rd1+8];
	ld.local.u32 	%r5252, [%rd1+4];
	// inline asm
	prmt.b32 %r5250, %r5251, %r5252, %r7;
	// inline asm
	st.local.u32 	[%rd3], %r5250;
	ld.local.v2.u32 	{%r5319, %r5320}, [%rd1];
	// inline asm
	prmt.b32 %r5254, %r5320, %r5319, %r7;
	// inline asm
	st.local.u32 	[%rd2+12], %r5254;
	ld.local.u32 	%r5259, [%rd1];
	// inline asm
	prmt.b32 %r5258, %r5259, %r7360, %r7;
	// inline asm
	st.local.u32 	[%rd2+8], %r5258;
	st.local.v2.u32 	[%rd2], {%r7360, %r7360};
	st.local.u32 	[%rd1+12], %r7360;
	st.local.u32 	[%rd1+8], %r7360;
	mov.u64 	%rd213, 0;
	st.local.u32 	[%rd1+4], %rd213;
	st.local.u32 	[%rd1], %rd213;
	mov.u32 	%r7361, %r7360;
	mov.u32 	%r7366, %r7360;
	bra.uni 	BB3_81;

BB3_49:
	setp.eq.s32	%p17, %r673, 22;
	@%p17 bra 	BB3_71;
	bra.uni 	BB3_50;

BB3_71:
	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7383, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2353, %r2354}, [%rd8+8];
	// inline asm
	prmt.b32 %r7384, %r2354, %r2353, %r7;
	// inline asm
	ld.local.u32 	%r2219, [%rd8+8];
	ld.local.u32 	%r2220, [%rd8+4];
	// inline asm
	prmt.b32 %r7385, %r2219, %r2220, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2355, %r2356}, [%rd8];
	// inline asm
	prmt.b32 %r7378, %r2356, %r2355, %r7;
	// inline asm
	ld.local.u32 	%r2227, [%rd8];
	ld.local.u32 	%r2228, [%rd7+12];
	// inline asm
	prmt.b32 %r7379, %r2227, %r2228, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2357, %r2358}, [%rd7+8];
	// inline asm
	prmt.b32 %r7380, %r2358, %r2357, %r7;
	// inline asm
	ld.local.u32 	%r2235, [%rd7+8];
	ld.local.u32 	%r2236, [%rd7+4];
	// inline asm
	prmt.b32 %r7381, %r2235, %r2236, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2359, %r2360}, [%rd7];
	// inline asm
	prmt.b32 %r7374, %r2360, %r2359, %r7;
	// inline asm
	ld.local.u32 	%r2243, [%rd7];
	ld.local.u32 	%r2244, [%rd6+12];
	// inline asm
	prmt.b32 %r7375, %r2243, %r2244, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2361, %r2362}, [%rd6+8];
	// inline asm
	prmt.b32 %r7376, %r2362, %r2361, %r7;
	// inline asm
	ld.local.u32 	%r2251, [%rd6+8];
	ld.local.u32 	%r2252, [%rd6+4];
	// inline asm
	prmt.b32 %r7377, %r2251, %r2252, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2363, %r2364}, [%rd6];
	// inline asm
	prmt.b32 %r7370, %r2364, %r2363, %r7;
	// inline asm
	ld.local.u32 	%r2259, [%rd6];
	ld.local.u32 	%r2260, [%rd5+12];
	// inline asm
	prmt.b32 %r7371, %r2259, %r2260, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2365, %r2366}, [%rd5+8];
	// inline asm
	prmt.b32 %r7372, %r2366, %r2365, %r7;
	// inline asm
	ld.local.u32 	%r2267, [%rd5+8];
	ld.local.u32 	%r2268, [%rd5+4];
	// inline asm
	prmt.b32 %r7373, %r2267, %r2268, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2367, %r2368}, [%rd5];
	// inline asm
	prmt.b32 %r7366, %r2368, %r2367, %r7;
	// inline asm
	ld.local.u32 	%r2275, [%rd5];
	ld.local.u32 	%r2276, [%rd4+12];
	// inline asm
	prmt.b32 %r7367, %r2275, %r2276, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2369, %r2370}, [%rd4+8];
	// inline asm
	prmt.b32 %r7368, %r2370, %r2369, %r7;
	// inline asm
	ld.local.u32 	%r2283, [%rd4+8];
	ld.local.u32 	%r2284, [%rd4+4];
	// inline asm
	prmt.b32 %r7369, %r2283, %r2284, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2371, %r2372}, [%rd4];
	// inline asm
	prmt.b32 %r7362, %r2372, %r2371, %r7;
	// inline asm
	ld.local.u32 	%r2291, [%rd4];
	ld.local.u32 	%r2292, [%rd3+12];
	// inline asm
	prmt.b32 %r7363, %r2291, %r2292, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2373, %r2374}, [%rd3+8];
	// inline asm
	prmt.b32 %r7364, %r2374, %r2373, %r7;
	// inline asm
	ld.local.u32 	%r2299, [%rd3+8];
	ld.local.u32 	%r2300, [%rd3+4];
	// inline asm
	prmt.b32 %r7365, %r2299, %r2300, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2375, %r2376}, [%rd3];
	// inline asm
	prmt.b32 %r2302, %r2376, %r2375, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r2302;
	ld.local.u32 	%r2307, [%rd3];
	ld.local.u32 	%r2308, [%rd2+12];
	// inline asm
	prmt.b32 %r2306, %r2307, %r2308, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r2306;
	ld.local.v2.u32 	{%r2377, %r2378}, [%rd2+8];
	// inline asm
	prmt.b32 %r2310, %r2378, %r2377, %r7;
	// inline asm
	st.local.u32 	[%rd8+4], %r2310;
	ld.local.u32 	%r2315, [%rd2+8];
	ld.local.u32 	%r2316, [%rd2+4];
	// inline asm
	prmt.b32 %r2314, %r2315, %r2316, %r7;
	// inline asm
	st.local.u32 	[%rd8], %r2314;
	ld.local.v2.u32 	{%r2379, %r2380}, [%rd2];
	// inline asm
	prmt.b32 %r2318, %r2380, %r2379, %r7;
	// inline asm
	st.local.u32 	[%rd7+12], %r2318;
	ld.local.u32 	%r2323, [%rd2];
	ld.local.u32 	%r2324, [%rd1+12];
	// inline asm
	prmt.b32 %r2322, %r2323, %r2324, %r7;
	// inline asm
	st.local.u32 	[%rd7+8], %r2322;
	ld.local.v2.u32 	{%r2381, %r2382}, [%rd1+8];
	// inline asm
	prmt.b32 %r2326, %r2382, %r2381, %r7;
	// inline asm
	st.local.u32 	[%rd7+4], %r2326;
	ld.local.u32 	%r2331, [%rd1+8];
	ld.local.u32 	%r2332, [%rd1+4];
	// inline asm
	prmt.b32 %r2330, %r2331, %r2332, %r7;
	// inline asm
	st.local.u32 	[%rd7], %r2330;
	ld.local.v2.u32 	{%r2383, %r2384}, [%rd1];
	// inline asm
	prmt.b32 %r2334, %r2384, %r2383, %r7;
	// inline asm
	st.local.u32 	[%rd6+12], %r2334;
	ld.local.u32 	%r2339, [%rd1];
	// inline asm
	prmt.b32 %r2338, %r2339, %r7360, %r7;
	// inline asm
	st.local.u32 	[%rd6+8], %r2338;
	st.local.v2.u32 	[%rd6], {%r7360, %r7360};
	st.local.u32 	[%rd5+12], %r7360;
	st.local.u32 	[%rd5+8], %r7360;
	st.local.u32 	[%rd5+4], %r7360;
	st.local.u32 	[%rd5], %r7360;
	st.local.u32 	[%rd4+12], %r7360;
	st.local.u32 	[%rd4+8], %r7360;
	st.local.u32 	[%rd4+4], %r7360;
	st.local.u32 	[%rd4], %r7360;
	st.local.u32 	[%rd3+12], %r7360;
	st.local.u32 	[%rd3+8], %r7360;
	st.local.u32 	[%rd3+4], %r7360;
	st.local.u32 	[%rd3], %r7360;
	st.local.u32 	[%rd2+12], %r7360;
	st.local.u32 	[%rd2+8], %r7360;
	st.local.u32 	[%rd2+4], %r7360;
	st.local.u32 	[%rd2], %r7360;
	st.local.u32 	[%rd1+12], %r7360;
	st.local.u32 	[%rd1+8], %r7360;
	mov.u64 	%rd197, 0;
	st.local.u32 	[%rd1+4], %rd197;
	st.local.u32 	[%rd1], %rd197;
	mov.u32 	%r7361, %r7360;
	mov.u32 	%r7382, %r7360;
	bra.uni 	BB3_85;

BB3_33:
	setp.eq.s32	%p29, %r673, 14;
	@%p29 bra 	BB3_75;
	bra.uni 	BB3_34;

BB3_75:
	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7375, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3789, %r3790}, [%rd8+8];
	// inline asm
	prmt.b32 %r7376, %r3790, %r3789, %r7;
	// inline asm
	ld.local.u32 	%r3647, [%rd8+8];
	ld.local.u32 	%r3648, [%rd8+4];
	// inline asm
	prmt.b32 %r7377, %r3647, %r3648, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3791, %r3792}, [%rd8];
	// inline asm
	prmt.b32 %r7370, %r3792, %r3791, %r7;
	// inline asm
	ld.local.u32 	%r3655, [%rd8];
	ld.local.u32 	%r3656, [%rd7+12];
	// inline asm
	prmt.b32 %r7371, %r3655, %r3656, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3793, %r3794}, [%rd7+8];
	// inline asm
	prmt.b32 %r7372, %r3794, %r3793, %r7;
	// inline asm
	ld.local.u32 	%r3663, [%rd7+8];
	ld.local.u32 	%r3664, [%rd7+4];
	// inline asm
	prmt.b32 %r7373, %r3663, %r3664, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3795, %r3796}, [%rd7];
	// inline asm
	prmt.b32 %r7366, %r3796, %r3795, %r7;
	// inline asm
	ld.local.u32 	%r3671, [%rd7];
	ld.local.u32 	%r3672, [%rd6+12];
	// inline asm
	prmt.b32 %r7367, %r3671, %r3672, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3797, %r3798}, [%rd6+8];
	// inline asm
	prmt.b32 %r7368, %r3798, %r3797, %r7;
	// inline asm
	ld.local.u32 	%r3679, [%rd6+8];
	ld.local.u32 	%r3680, [%rd6+4];
	// inline asm
	prmt.b32 %r7369, %r3679, %r3680, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3799, %r3800}, [%rd6];
	// inline asm
	prmt.b32 %r7362, %r3800, %r3799, %r7;
	// inline asm
	ld.local.u32 	%r3687, [%rd6];
	ld.local.u32 	%r3688, [%rd5+12];
	// inline asm
	prmt.b32 %r7363, %r3687, %r3688, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3801, %r3802}, [%rd5+8];
	// inline asm
	prmt.b32 %r7364, %r3802, %r3801, %r7;
	// inline asm
	ld.local.u32 	%r3695, [%rd5+8];
	ld.local.u32 	%r3696, [%rd5+4];
	// inline asm
	prmt.b32 %r7365, %r3695, %r3696, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3803, %r3804}, [%rd5];
	// inline asm
	prmt.b32 %r3698, %r3804, %r3803, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r3698;
	ld.local.u32 	%r3703, [%rd5];
	ld.local.u32 	%r3704, [%rd4+12];
	// inline asm
	prmt.b32 %r3702, %r3703, %r3704, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r3702;
	ld.local.v2.u32 	{%r3805, %r3806}, [%rd4+8];
	// inline asm
	prmt.b32 %r3706, %r3806, %r3805, %r7;
	// inline asm
	st.local.u32 	[%rd8+4], %r3706;
	ld.local.u32 	%r3711, [%rd4+8];
	ld.local.u32 	%r3712, [%rd4+4];
	// inline asm
	prmt.b32 %r3710, %r3711, %r3712, %r7;
	// inline asm
	st.local.u32 	[%rd8], %r3710;
	ld.local.v2.u32 	{%r3807, %r3808}, [%rd4];
	// inline asm
	prmt.b32 %r3714, %r3808, %r3807, %r7;
	// inline asm
	st.local.u32 	[%rd7+12], %r3714;
	ld.local.u32 	%r3719, [%rd4];
	ld.local.u32 	%r3720, [%rd3+12];
	// inline asm
	prmt.b32 %r3718, %r3719, %r3720, %r7;
	// inline asm
	st.local.u32 	[%rd7+8], %r3718;
	ld.local.v2.u32 	{%r3809, %r3810}, [%rd3+8];
	// inline asm
	prmt.b32 %r3722, %r3810, %r3809, %r7;
	// inline asm
	st.local.u32 	[%rd7+4], %r3722;
	ld.local.u32 	%r3727, [%rd3+8];
	ld.local.u32 	%r3728, [%rd3+4];
	// inline asm
	prmt.b32 %r3726, %r3727, %r3728, %r7;
	// inline asm
	st.local.u32 	[%rd7], %r3726;
	ld.local.v2.u32 	{%r3811, %r3812}, [%rd3];
	// inline asm
	prmt.b32 %r3730, %r3812, %r3811, %r7;
	// inline asm
	st.local.u32 	[%rd6+12], %r3730;
	ld.local.u32 	%r3735, [%rd3];
	ld.local.u32 	%r3736, [%rd2+12];
	// inline asm
	prmt.b32 %r3734, %r3735, %r3736, %r7;
	// inline asm
	st.local.u32 	[%rd6+8], %r3734;
	ld.local.v2.u32 	{%r3813, %r3814}, [%rd2+8];
	// inline asm
	prmt.b32 %r3738, %r3814, %r3813, %r7;
	// inline asm
	st.local.u32 	[%rd6+4], %r3738;
	ld.local.u32 	%r3743, [%rd2+8];
	ld.local.u32 	%r3744, [%rd2+4];
	// inline asm
	prmt.b32 %r3742, %r3743, %r3744, %r7;
	// inline asm
	st.local.u32 	[%rd6], %r3742;
	ld.local.v2.u32 	{%r3815, %r3816}, [%rd2];
	// inline asm
	prmt.b32 %r3746, %r3816, %r3815, %r7;
	// inline asm
	st.local.u32 	[%rd5+12], %r3746;
	ld.local.u32 	%r3751, [%rd2];
	ld.local.u32 	%r3752, [%rd1+12];
	// inline asm
	prmt.b32 %r3750, %r3751, %r3752, %r7;
	// inline asm
	st.local.u32 	[%rd5+8], %r3750;
	ld.local.v2.u32 	{%r3817, %r3818}, [%rd1+8];
	// inline asm
	prmt.b32 %r3754, %r3818, %r3817, %r7;
	// inline asm
	st.local.u32 	[%rd5+4], %r3754;
	ld.local.u32 	%r3759, [%rd1+8];
	ld.local.u32 	%r3760, [%rd1+4];
	// inline asm
	prmt.b32 %r3758, %r3759, %r3760, %r7;
	// inline asm
	st.local.u32 	[%rd5], %r3758;
	ld.local.v2.u32 	{%r3819, %r3820}, [%rd1];
	// inline asm
	prmt.b32 %r3762, %r3820, %r3819, %r7;
	// inline asm
	st.local.u32 	[%rd4+12], %r3762;
	ld.local.u32 	%r3767, [%rd1];
	// inline asm
	prmt.b32 %r3766, %r3767, %r7360, %r7;
	// inline asm
	st.local.u32 	[%rd4+8], %r3766;
	st.local.v2.u32 	[%rd4], {%r7360, %r7360};
	st.local.u32 	[%rd3+12], %r7360;
	st.local.u32 	[%rd3+8], %r7360;
	st.local.u32 	[%rd3+4], %r7360;
	st.local.u32 	[%rd3], %r7360;
	st.local.u32 	[%rd2+12], %r7360;
	st.local.u32 	[%rd2+8], %r7360;
	st.local.u32 	[%rd2+4], %r7360;
	st.local.u32 	[%rd2], %r7360;
	st.local.u32 	[%rd1+12], %r7360;
	st.local.u32 	[%rd1+8], %r7360;
	mov.u64 	%rd205, 0;
	st.local.u32 	[%rd1+4], %rd205;
	st.local.u32 	[%rd1], %rd205;
	mov.u32 	%r7361, %r7360;
	mov.u32 	%r7374, %r7360;
	bra.uni 	BB3_83;

BB3_64:
	setp.eq.s32	%p6, %r673, 30;
	@%p6 bra 	BB3_67;
	bra.uni 	BB3_65;

BB3_67:
	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7391, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r981, %r982}, [%rd8+8];
	// inline asm
	prmt.b32 %r7392, %r982, %r981, %r7;
	// inline asm
	ld.local.u32 	%r855, [%rd8+8];
	ld.local.u32 	%r856, [%rd8+4];
	// inline asm
	prmt.b32 %r7393, %r855, %r856, %r7;
	// inline asm
	ld.local.v2.u32 	{%r983, %r984}, [%rd8];
	// inline asm
	prmt.b32 %r7386, %r984, %r983, %r7;
	// inline asm
	ld.local.u32 	%r863, [%rd8];
	ld.local.u32 	%r864, [%rd7+12];
	// inline asm
	prmt.b32 %r7387, %r863, %r864, %r7;
	// inline asm
	ld.local.v2.u32 	{%r985, %r986}, [%rd7+8];
	// inline asm
	prmt.b32 %r7388, %r986, %r985, %r7;
	// inline asm
	ld.local.u32 	%r871, [%rd7+8];
	ld.local.u32 	%r872, [%rd7+4];
	// inline asm
	prmt.b32 %r7389, %r871, %r872, %r7;
	// inline asm
	ld.local.v2.u32 	{%r987, %r988}, [%rd7];
	// inline asm
	prmt.b32 %r7382, %r988, %r987, %r7;
	// inline asm
	ld.local.u32 	%r879, [%rd7];
	ld.local.u32 	%r880, [%rd6+12];
	// inline asm
	prmt.b32 %r7383, %r879, %r880, %r7;
	// inline asm
	ld.local.v2.u32 	{%r989, %r990}, [%rd6+8];
	// inline asm
	prmt.b32 %r7384, %r990, %r989, %r7;
	// inline asm
	ld.local.u32 	%r887, [%rd6+8];
	ld.local.u32 	%r888, [%rd6+4];
	// inline asm
	prmt.b32 %r7385, %r887, %r888, %r7;
	// inline asm
	ld.local.v2.u32 	{%r991, %r992}, [%rd6];
	// inline asm
	prmt.b32 %r7378, %r992, %r991, %r7;
	// inline asm
	ld.local.u32 	%r895, [%rd6];
	ld.local.u32 	%r896, [%rd5+12];
	// inline asm
	prmt.b32 %r7379, %r895, %r896, %r7;
	// inline asm
	ld.local.v2.u32 	{%r993, %r994}, [%rd5+8];
	// inline asm
	prmt.b32 %r7380, %r994, %r993, %r7;
	// inline asm
	ld.local.u32 	%r903, [%rd5+8];
	ld.local.u32 	%r904, [%rd5+4];
	// inline asm
	prmt.b32 %r7381, %r903, %r904, %r7;
	// inline asm
	ld.local.v2.u32 	{%r995, %r996}, [%rd5];
	// inline asm
	prmt.b32 %r7374, %r996, %r995, %r7;
	// inline asm
	ld.local.u32 	%r911, [%rd5];
	ld.local.u32 	%r912, [%rd4+12];
	// inline asm
	prmt.b32 %r7375, %r911, %r912, %r7;
	// inline asm
	ld.local.v2.u32 	{%r997, %r998}, [%rd4+8];
	// inline asm
	prmt.b32 %r7376, %r998, %r997, %r7;
	// inline asm
	ld.local.u32 	%r919, [%rd4+8];
	ld.local.u32 	%r920, [%rd4+4];
	// inline asm
	prmt.b32 %r7377, %r919, %r920, %r7;
	// inline asm
	ld.local.v2.u32 	{%r999, %r1000}, [%rd4];
	// inline asm
	prmt.b32 %r7370, %r1000, %r999, %r7;
	// inline asm
	ld.local.u32 	%r927, [%rd4];
	ld.local.u32 	%r928, [%rd3+12];
	// inline asm
	prmt.b32 %r7371, %r927, %r928, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1001, %r1002}, [%rd3+8];
	// inline asm
	prmt.b32 %r7372, %r1002, %r1001, %r7;
	// inline asm
	ld.local.u32 	%r935, [%rd3+8];
	ld.local.u32 	%r936, [%rd3+4];
	// inline asm
	prmt.b32 %r7373, %r935, %r936, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1003, %r1004}, [%rd3];
	// inline asm
	prmt.b32 %r7366, %r1004, %r1003, %r7;
	// inline asm
	ld.local.u32 	%r943, [%rd3];
	ld.local.u32 	%r944, [%rd2+12];
	// inline asm
	prmt.b32 %r7367, %r943, %r944, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1005, %r1006}, [%rd2+8];
	// inline asm
	prmt.b32 %r7368, %r1006, %r1005, %r7;
	// inline asm
	ld.local.u32 	%r951, [%rd2+8];
	ld.local.u32 	%r952, [%rd2+4];
	// inline asm
	prmt.b32 %r7369, %r951, %r952, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1007, %r1008}, [%rd2];
	// inline asm
	prmt.b32 %r7362, %r1008, %r1007, %r7;
	// inline asm
	ld.local.u32 	%r959, [%rd2];
	ld.local.u32 	%r960, [%rd1+12];
	// inline asm
	prmt.b32 %r7363, %r959, %r960, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1009, %r1010}, [%rd1+8];
	// inline asm
	prmt.b32 %r7364, %r1010, %r1009, %r7;
	// inline asm
	ld.local.u32 	%r967, [%rd1+8];
	ld.local.u32 	%r968, [%rd1+4];
	// inline asm
	prmt.b32 %r7365, %r967, %r968, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1011, %r1012}, [%rd1];
	// inline asm
	prmt.b32 %r970, %r1012, %r1011, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r970;
	ld.local.u32 	%r975, [%rd1];
	// inline asm
	prmt.b32 %r974, %r975, %r7360, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r974;
	st.local.v2.u32 	[%rd8], {%r7360, %r7360};
	st.local.u32 	[%rd7+12], %r7360;
	st.local.u32 	[%rd7+8], %r7360;
	st.local.u32 	[%rd7+4], %r7360;
	st.local.u32 	[%rd7], %r7360;
	st.local.u32 	[%rd6+12], %r7360;
	st.local.u32 	[%rd6+8], %r7360;
	st.local.u32 	[%rd6+4], %r7360;
	st.local.u32 	[%rd6], %r7360;
	st.local.u32 	[%rd5+12], %r7360;
	st.local.u32 	[%rd5+8], %r7360;
	st.local.u32 	[%rd5+4], %r7360;
	st.local.u32 	[%rd5], %r7360;
	st.local.u32 	[%rd4+12], %r7360;
	st.local.u32 	[%rd4+8], %r7360;
	st.local.u32 	[%rd4+4], %r7360;
	st.local.u32 	[%rd4], %r7360;
	st.local.u32 	[%rd3+12], %r7360;
	st.local.u32 	[%rd3+8], %r7360;
	st.local.u32 	[%rd3+4], %r7360;
	st.local.u32 	[%rd3], %r7360;
	st.local.u32 	[%rd2+12], %r7360;
	st.local.u32 	[%rd2+8], %r7360;
	st.local.u32 	[%rd2+4], %r7360;
	st.local.u32 	[%rd2], %r7360;
	st.local.u32 	[%rd1+12], %r7360;
	st.local.u32 	[%rd1+8], %r7360;
	mov.u64 	%rd189, 0;
	st.local.u32 	[%rd1+4], %rd189;
	st.local.u32 	[%rd1], %rd189;
	mov.u32 	%r7361, %r7360;
	mov.u32 	%r7390, %r7360;
	bra.uni 	BB3_89;

BB3_8:
	setp.eq.s32	%p48, %r673, 1;
	mov.u32 	%r7363, %r7362;
	mov.u32 	%r7364, %r7362;
	mov.u32 	%r7365, %r7362;
	mov.u32 	%r7366, %r7362;
	mov.u32 	%r7367, %r7362;
	mov.u32 	%r7368, %r7362;
	mov.u32 	%r7369, %r7362;
	mov.u32 	%r7370, %r7362;
	mov.u32 	%r7371, %r7362;
	mov.u32 	%r7372, %r7362;
	mov.u32 	%r7373, %r7362;
	mov.u32 	%r7374, %r7362;
	mov.u32 	%r7375, %r7362;
	mov.u32 	%r7376, %r7362;
	mov.u32 	%r7377, %r7362;
	mov.u32 	%r7378, %r7362;
	mov.u32 	%r7379, %r7362;
	mov.u32 	%r7380, %r7362;
	mov.u32 	%r7381, %r7362;
	mov.u32 	%r7382, %r7362;
	mov.u32 	%r7383, %r7362;
	mov.u32 	%r7384, %r7362;
	mov.u32 	%r7385, %r7362;
	mov.u32 	%r7386, %r7362;
	mov.u32 	%r7387, %r7362;
	mov.u32 	%r7388, %r7362;
	mov.u32 	%r7389, %r7362;
	mov.u32 	%r7390, %r7362;
	mov.u32 	%r7391, %r7362;
	mov.u32 	%r7392, %r7362;
	mov.u32 	%r7393, %r7362;
	@%p48 bra 	BB3_9;
	bra.uni 	BB3_89;

BB3_9:
	mov.u32 	%r7361, 0;
	// inline asm
	prmt.b32 %r7364, %r7361, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r6258, %r6259}, [%rd8+8];
	// inline asm
	prmt.b32 %r7365, %r6259, %r6258, %r7;
	// inline asm
	ld.local.u32 	%r6104, [%rd8+8];
	ld.local.u32 	%r6105, [%rd8+4];
	// inline asm
	prmt.b32 %r6103, %r6104, %r6105, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r6103;
	ld.local.v2.u32 	{%r6260, %r6261}, [%rd8];
	// inline asm
	prmt.b32 %r6107, %r6261, %r6260, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r6107;
	ld.local.u32 	%r6112, [%rd8];
	ld.local.u32 	%r6113, [%rd7+12];
	// inline asm
	prmt.b32 %r6111, %r6112, %r6113, %r7;
	// inline asm
	st.local.u32 	[%rd8+4], %r6111;
	ld.local.v2.u32 	{%r6262, %r6263}, [%rd7+8];
	// inline asm
	prmt.b32 %r6115, %r6263, %r6262, %r7;
	// inline asm
	st.local.u32 	[%rd8], %r6115;
	ld.local.u32 	%r6120, [%rd7+8];
	ld.local.u32 	%r6121, [%rd7+4];
	// inline asm
	prmt.b32 %r6119, %r6120, %r6121, %r7;
	// inline asm
	st.local.u32 	[%rd7+12], %r6119;
	ld.local.v2.u32 	{%r6264, %r6265}, [%rd7];
	// inline asm
	prmt.b32 %r6123, %r6265, %r6264, %r7;
	// inline asm
	st.local.u32 	[%rd7+8], %r6123;
	ld.local.u32 	%r6128, [%rd7];
	ld.local.u32 	%r6129, [%rd6+12];
	// inline asm
	prmt.b32 %r6127, %r6128, %r6129, %r7;
	// inline asm
	st.local.u32 	[%rd7+4], %r6127;
	ld.local.v2.u32 	{%r6266, %r6267}, [%rd6+8];
	// inline asm
	prmt.b32 %r6131, %r6267, %r6266, %r7;
	// inline asm
	st.local.u32 	[%rd7], %r6131;
	ld.local.u32 	%r6136, [%rd6+8];
	ld.local.u32 	%r6137, [%rd6+4];
	// inline asm
	prmt.b32 %r6135, %r6136, %r6137, %r7;
	// inline asm
	st.local.u32 	[%rd6+12], %r6135;
	ld.local.v2.u32 	{%r6268, %r6269}, [%rd6];
	// inline asm
	prmt.b32 %r6139, %r6269, %r6268, %r7;
	// inline asm
	st.local.u32 	[%rd6+8], %r6139;
	ld.local.u32 	%r6144, [%rd6];
	ld.local.u32 	%r6145, [%rd5+12];
	// inline asm
	prmt.b32 %r6143, %r6144, %r6145, %r7;
	// inline asm
	st.local.u32 	[%rd6+4], %r6143;
	ld.local.v2.u32 	{%r6270, %r6271}, [%rd5+8];
	// inline asm
	prmt.b32 %r6147, %r6271, %r6270, %r7;
	// inline asm
	st.local.u32 	[%rd6], %r6147;
	ld.local.u32 	%r6152, [%rd5+8];
	ld.local.u32 	%r6153, [%rd5+4];
	// inline asm
	prmt.b32 %r6151, %r6152, %r6153, %r7;
	// inline asm
	st.local.u32 	[%rd5+12], %r6151;
	ld.local.v2.u32 	{%r6272, %r6273}, [%rd5];
	// inline asm
	prmt.b32 %r6155, %r6273, %r6272, %r7;
	// inline asm
	st.local.u32 	[%rd5+8], %r6155;
	ld.local.u32 	%r6160, [%rd5];
	ld.local.u32 	%r6161, [%rd4+12];
	// inline asm
	prmt.b32 %r6159, %r6160, %r6161, %r7;
	// inline asm
	st.local.u32 	[%rd5+4], %r6159;
	ld.local.v2.u32 	{%r6274, %r6275}, [%rd4+8];
	// inline asm
	prmt.b32 %r6163, %r6275, %r6274, %r7;
	// inline asm
	st.local.u32 	[%rd5], %r6163;
	ld.local.u32 	%r6168, [%rd4+8];
	ld.local.u32 	%r6169, [%rd4+4];
	// inline asm
	prmt.b32 %r6167, %r6168, %r6169, %r7;
	// inline asm
	st.local.u32 	[%rd4+12], %r6167;
	ld.local.v2.u32 	{%r6276, %r6277}, [%rd4];
	// inline asm
	prmt.b32 %r6171, %r6277, %r6276, %r7;
	// inline asm
	st.local.u32 	[%rd4+8], %r6171;
	ld.local.u32 	%r6176, [%rd4];
	ld.local.u32 	%r6177, [%rd3+12];
	// inline asm
	prmt.b32 %r6175, %r6176, %r6177, %r7;
	// inline asm
	st.local.u32 	[%rd4+4], %r6175;
	ld.local.v2.u32 	{%r6278, %r6279}, [%rd3+8];
	// inline asm
	prmt.b32 %r6179, %r6279, %r6278, %r7;
	// inline asm
	st.local.u32 	[%rd4], %r6179;
	ld.local.u32 	%r6184, [%rd3+8];
	ld.local.u32 	%r6185, [%rd3+4];
	// inline asm
	prmt.b32 %r6183, %r6184, %r6185, %r7;
	// inline asm
	st.local.u32 	[%rd3+12], %r6183;
	ld.local.v2.u32 	{%r6280, %r6281}, [%rd3];
	// inline asm
	prmt.b32 %r6187, %r6281, %r6280, %r7;
	// inline asm
	st.local.u32 	[%rd3+8], %r6187;
	ld.local.u32 	%r6192, [%rd3];
	ld.local.u32 	%r6193, [%rd2+12];
	// inline asm
	prmt.b32 %r6191, %r6192, %r6193, %r7;
	// inline asm
	st.local.u32 	[%rd3+4], %r6191;
	ld.local.v2.u32 	{%r6282, %r6283}, [%rd2+8];
	// inline asm
	prmt.b32 %r6195, %r6283, %r6282, %r7;
	// inline asm
	st.local.u32 	[%rd3], %r6195;
	ld.local.u32 	%r6200, [%rd2+8];
	ld.local.u32 	%r6201, [%rd2+4];
	// inline asm
	prmt.b32 %r6199, %r6200, %r6201, %r7;
	// inline asm
	st.local.u32 	[%rd2+12], %r6199;
	ld.local.v2.u32 	{%r6284, %r6285}, [%rd2];
	// inline asm
	prmt.b32 %r6203, %r6285, %r6284, %r7;
	// inline asm
	st.local.u32 	[%rd2+8], %r6203;
	ld.local.u32 	%r6208, [%rd2];
	ld.local.u32 	%r6209, [%rd1+12];
	// inline asm
	prmt.b32 %r6207, %r6208, %r6209, %r7;
	// inline asm
	st.local.u32 	[%rd2+4], %r6207;
	ld.local.v2.u32 	{%r6286, %r6287}, [%rd1+8];
	// inline asm
	prmt.b32 %r6211, %r6287, %r6286, %r7;
	// inline asm
	st.local.u32 	[%rd2], %r6211;
	ld.local.u32 	%r6216, [%rd1+8];
	ld.local.u32 	%r6217, [%rd1+4];
	// inline asm
	prmt.b32 %r6215, %r6216, %r6217, %r7;
	// inline asm
	st.local.u32 	[%rd1+12], %r6215;
	ld.local.v2.u32 	{%r6288, %r6289}, [%rd1];
	// inline asm
	prmt.b32 %r6219, %r6289, %r6288, %r7;
	// inline asm
	st.local.u32 	[%rd1+8], %r6219;
	ld.local.u32 	%r6224, [%rd1];
	// inline asm
	prmt.b32 %r7360, %r6224, %r7361, %r7;
	// inline asm
	st.local.v2.u32 	[%rd1], {%r7361, %r7360};
	mov.u32 	%r7362, %r7361;
	mov.u32 	%r7363, %r7361;
	mov.u32 	%r7366, %r7361;
	mov.u32 	%r7367, %r7361;
	mov.u32 	%r7368, %r7361;
	mov.u32 	%r7369, %r7361;
	mov.u32 	%r7370, %r7361;
	mov.u32 	%r7371, %r7361;
	mov.u32 	%r7372, %r7361;
	mov.u32 	%r7373, %r7361;
	mov.u32 	%r7374, %r7361;
	mov.u32 	%r7375, %r7361;
	mov.u32 	%r7376, %r7361;
	mov.u32 	%r7377, %r7361;
	mov.u32 	%r7378, %r7361;
	mov.u32 	%r7379, %r7361;
	mov.u32 	%r7380, %r7361;
	mov.u32 	%r7381, %r7361;
	mov.u32 	%r7382, %r7361;
	mov.u32 	%r7383, %r7361;
	mov.u32 	%r7384, %r7361;
	mov.u32 	%r7385, %r7361;
	mov.u32 	%r7386, %r7361;
	mov.u32 	%r7387, %r7361;
	mov.u32 	%r7388, %r7361;
	mov.u32 	%r7389, %r7361;
	mov.u32 	%r7390, %r7361;
	mov.u32 	%r7391, %r7361;
	mov.u32 	%r7392, %r7361;
	mov.u32 	%r7393, %r7361;
	bra.uni 	BB3_89;

BB3_40:
	setp.eq.s32	%p25, %r673, 17;
	mov.u32 	%r7363, %r7362;
	mov.u32 	%r7364, %r7362;
	mov.u32 	%r7365, %r7362;
	mov.u32 	%r7366, %r7362;
	mov.u32 	%r7367, %r7362;
	mov.u32 	%r7368, %r7362;
	mov.u32 	%r7369, %r7362;
	mov.u32 	%r7370, %r7362;
	mov.u32 	%r7371, %r7362;
	mov.u32 	%r7372, %r7362;
	mov.u32 	%r7373, %r7362;
	mov.u32 	%r7374, %r7362;
	mov.u32 	%r7375, %r7362;
	mov.u32 	%r7376, %r7362;
	mov.u32 	%r7377, %r7362;
	mov.u32 	%r7378, %r7362;
	mov.u32 	%r7379, %r7362;
	mov.u32 	%r7380, %r7362;
	mov.u32 	%r7381, %r7362;
	mov.u32 	%r7382, %r7362;
	mov.u32 	%r7383, %r7362;
	mov.u32 	%r7384, %r7362;
	mov.u32 	%r7385, %r7362;
	mov.u32 	%r7386, %r7362;
	mov.u32 	%r7387, %r7362;
	mov.u32 	%r7388, %r7362;
	mov.u32 	%r7389, %r7362;
	mov.u32 	%r7390, %r7362;
	mov.u32 	%r7391, %r7362;
	mov.u32 	%r7392, %r7362;
	mov.u32 	%r7393, %r7362;
	@%p25 bra 	BB3_41;
	bra.uni 	BB3_89;

BB3_41:
	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7380, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3243, %r3244}, [%rd8+8];
	// inline asm
	prmt.b32 %r7381, %r3244, %r3243, %r7;
	// inline asm
	ld.local.u32 	%r3104, [%rd8+8];
	ld.local.u32 	%r3105, [%rd8+4];
	// inline asm
	prmt.b32 %r7374, %r3104, %r3105, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3245, %r3246}, [%rd8];
	// inline asm
	prmt.b32 %r7375, %r3246, %r3245, %r7;
	// inline asm
	ld.local.u32 	%r3112, [%rd8];
	ld.local.u32 	%r3113, [%rd7+12];
	// inline asm
	prmt.b32 %r7376, %r3112, %r3113, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3247, %r3248}, [%rd7+8];
	// inline asm
	prmt.b32 %r7377, %r3248, %r3247, %r7;
	// inline asm
	ld.local.u32 	%r3120, [%rd7+8];
	ld.local.u32 	%r3121, [%rd7+4];
	// inline asm
	prmt.b32 %r7370, %r3120, %r3121, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3249, %r3250}, [%rd7];
	// inline asm
	prmt.b32 %r7371, %r3250, %r3249, %r7;
	// inline asm
	ld.local.u32 	%r3128, [%rd7];
	ld.local.u32 	%r3129, [%rd6+12];
	// inline asm
	prmt.b32 %r7372, %r3128, %r3129, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3251, %r3252}, [%rd6+8];
	// inline asm
	prmt.b32 %r7373, %r3252, %r3251, %r7;
	// inline asm
	ld.local.u32 	%r3136, [%rd6+8];
	ld.local.u32 	%r3137, [%rd6+4];
	// inline asm
	prmt.b32 %r7366, %r3136, %r3137, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3253, %r3254}, [%rd6];
	// inline asm
	prmt.b32 %r7367, %r3254, %r3253, %r7;
	// inline asm
	ld.local.u32 	%r3144, [%rd6];
	ld.local.u32 	%r3145, [%rd5+12];
	// inline asm
	prmt.b32 %r7368, %r3144, %r3145, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3255, %r3256}, [%rd5+8];
	// inline asm
	prmt.b32 %r7369, %r3256, %r3255, %r7;
	// inline asm
	ld.local.u32 	%r3152, [%rd5+8];
	ld.local.u32 	%r3153, [%rd5+4];
	// inline asm
	prmt.b32 %r7362, %r3152, %r3153, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3257, %r3258}, [%rd5];
	// inline asm
	prmt.b32 %r7363, %r3258, %r3257, %r7;
	// inline asm
	ld.local.u32 	%r3160, [%rd5];
	ld.local.u32 	%r3161, [%rd4+12];
	// inline asm
	prmt.b32 %r7364, %r3160, %r3161, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3259, %r3260}, [%rd4+8];
	// inline asm
	prmt.b32 %r7365, %r3260, %r3259, %r7;
	// inline asm
	ld.local.u32 	%r3168, [%rd4+8];
	ld.local.u32 	%r3169, [%rd4+4];
	// inline asm
	prmt.b32 %r3167, %r3168, %r3169, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r3167;
	ld.local.v2.u32 	{%r3261, %r3262}, [%rd4];
	// inline asm
	prmt.b32 %r3171, %r3262, %r3261, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r3171;
	ld.local.u32 	%r3176, [%rd4];
	ld.local.u32 	%r3177, [%rd3+12];
	// inline asm
	prmt.b32 %r3175, %r3176, %r3177, %r7;
	// inline asm
	st.local.u32 	[%rd8+4], %r3175;
	ld.local.v2.u32 	{%r3263, %r3264}, [%rd3+8];
	// inline asm
	prmt.b32 %r3179, %r3264, %r3263, %r7;
	// inline asm
	st.local.u32 	[%rd8], %r3179;
	ld.local.u32 	%r3184, [%rd3+8];
	ld.local.u32 	%r3185, [%rd3+4];
	// inline asm
	prmt.b32 %r3183, %r3184, %r3185, %r7;
	// inline asm
	st.local.u32 	[%rd7+12], %r3183;
	ld.local.v2.u32 	{%r3265, %r3266}, [%rd3];
	// inline asm
	prmt.b32 %r3187, %r3266, %r3265, %r7;
	// inline asm
	st.local.u32 	[%rd7+8], %r3187;
	ld.local.u32 	%r3192, [%rd3];
	ld.local.u32 	%r3193, [%rd2+12];
	// inline asm
	prmt.b32 %r3191, %r3192, %r3193, %r7;
	// inline asm
	st.local.u32 	[%rd7+4], %r3191;
	ld.local.v2.u32 	{%r3267, %r3268}, [%rd2+8];
	// inline asm
	prmt.b32 %r3195, %r3268, %r3267, %r7;
	// inline asm
	st.local.u32 	[%rd7], %r3195;
	ld.local.u32 	%r3200, [%rd2+8];
	ld.local.u32 	%r3201, [%rd2+4];
	// inline asm
	prmt.b32 %r3199, %r3200, %r3201, %r7;
	// inline asm
	st.local.u32 	[%rd6+12], %r3199;
	ld.local.v2.u32 	{%r3269, %r3270}, [%rd2];
	// inline asm
	prmt.b32 %r3203, %r3270, %r3269, %r7;
	// inline asm
	st.local.u32 	[%rd6+8], %r3203;
	ld.local.u32 	%r3208, [%rd2];
	ld.local.u32 	%r3209, [%rd1+12];
	// inline asm
	prmt.b32 %r3207, %r3208, %r3209, %r7;
	// inline asm
	st.local.u32 	[%rd6+4], %r3207;
	ld.local.v2.u32 	{%r3271, %r3272}, [%rd1+8];
	// inline asm
	prmt.b32 %r3211, %r3272, %r3271, %r7;
	// inline asm
	st.local.u32 	[%rd6], %r3211;
	ld.local.u32 	%r3216, [%rd1+8];
	ld.local.u32 	%r3217, [%rd1+4];
	// inline asm
	prmt.b32 %r3215, %r3216, %r3217, %r7;
	// inline asm
	st.local.u32 	[%rd5+12], %r3215;
	ld.local.v2.u32 	{%r3273, %r3274}, [%rd1];
	// inline asm
	prmt.b32 %r3219, %r3274, %r3273, %r7;
	// inline asm
	st.local.u32 	[%rd5+8], %r3219;
	ld.local.u32 	%r3224, [%rd1];
	// inline asm
	prmt.b32 %r3223, %r3224, %r7360, %r7;
	// inline asm
	st.local.v2.u32 	[%rd5], {%r7360, %r3223};
	st.local.v4.u32 	[%rd4], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd3], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd2], {%r7360, %r7360, %r7360, %r7360};
	st.local.v2.u32 	[%rd1+8], {%r7360, %r7360};
	mov.u64 	%rd202, 0;
	st.local.u64 	[%rd1], %rd202;
	mov.u32 	%r7361, %r7360;
	mov.u32 	%r7378, %r7360;
	mov.u32 	%r7379, %r7360;
	bra.uni 	BB3_84;

BB3_24:
	setp.eq.s32	%p37, %r673, 9;
	mov.u32 	%r7363, %r7362;
	mov.u32 	%r7364, %r7362;
	mov.u32 	%r7365, %r7362;
	mov.u32 	%r7366, %r7362;
	mov.u32 	%r7367, %r7362;
	mov.u32 	%r7368, %r7362;
	mov.u32 	%r7369, %r7362;
	mov.u32 	%r7370, %r7362;
	mov.u32 	%r7371, %r7362;
	mov.u32 	%r7372, %r7362;
	mov.u32 	%r7373, %r7362;
	mov.u32 	%r7374, %r7362;
	mov.u32 	%r7375, %r7362;
	mov.u32 	%r7376, %r7362;
	mov.u32 	%r7377, %r7362;
	mov.u32 	%r7378, %r7362;
	mov.u32 	%r7379, %r7362;
	mov.u32 	%r7380, %r7362;
	mov.u32 	%r7381, %r7362;
	mov.u32 	%r7382, %r7362;
	mov.u32 	%r7383, %r7362;
	mov.u32 	%r7384, %r7362;
	mov.u32 	%r7385, %r7362;
	mov.u32 	%r7386, %r7362;
	mov.u32 	%r7387, %r7362;
	mov.u32 	%r7388, %r7362;
	mov.u32 	%r7389, %r7362;
	mov.u32 	%r7390, %r7362;
	mov.u32 	%r7391, %r7362;
	mov.u32 	%r7392, %r7362;
	mov.u32 	%r7393, %r7362;
	@%p37 bra 	BB3_25;
	bra.uni 	BB3_89;

BB3_25:
	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7372, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r4719, %r4720}, [%rd8+8];
	// inline asm
	prmt.b32 %r7373, %r4720, %r4719, %r7;
	// inline asm
	ld.local.u32 	%r4572, [%rd8+8];
	ld.local.u32 	%r4573, [%rd8+4];
	// inline asm
	prmt.b32 %r7366, %r4572, %r4573, %r7;
	// inline asm
	ld.local.v2.u32 	{%r4721, %r4722}, [%rd8];
	// inline asm
	prmt.b32 %r7367, %r4722, %r4721, %r7;
	// inline asm
	ld.local.u32 	%r4580, [%rd8];
	ld.local.u32 	%r4581, [%rd7+12];
	// inline asm
	prmt.b32 %r7368, %r4580, %r4581, %r7;
	// inline asm
	ld.local.v2.u32 	{%r4723, %r4724}, [%rd7+8];
	// inline asm
	prmt.b32 %r7369, %r4724, %r4723, %r7;
	// inline asm
	ld.local.u32 	%r4588, [%rd7+8];
	ld.local.u32 	%r4589, [%rd7+4];
	// inline asm
	prmt.b32 %r7362, %r4588, %r4589, %r7;
	// inline asm
	ld.local.v2.u32 	{%r4725, %r4726}, [%rd7];
	// inline asm
	prmt.b32 %r7363, %r4726, %r4725, %r7;
	// inline asm
	ld.local.u32 	%r4596, [%rd7];
	ld.local.u32 	%r4597, [%rd6+12];
	// inline asm
	prmt.b32 %r7364, %r4596, %r4597, %r7;
	// inline asm
	ld.local.v2.u32 	{%r4727, %r4728}, [%rd6+8];
	// inline asm
	prmt.b32 %r7365, %r4728, %r4727, %r7;
	// inline asm
	ld.local.u32 	%r4604, [%rd6+8];
	ld.local.u32 	%r4605, [%rd6+4];
	// inline asm
	prmt.b32 %r4603, %r4604, %r4605, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r4603;
	ld.local.v2.u32 	{%r4729, %r4730}, [%rd6];
	// inline asm
	prmt.b32 %r4607, %r4730, %r4729, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r4607;
	ld.local.u32 	%r4612, [%rd6];
	ld.local.u32 	%r4613, [%rd5+12];
	// inline asm
	prmt.b32 %r4611, %r4612, %r4613, %r7;
	// inline asm
	st.local.u32 	[%rd8+4], %r4611;
	ld.local.v2.u32 	{%r4731, %r4732}, [%rd5+8];
	// inline asm
	prmt.b32 %r4615, %r4732, %r4731, %r7;
	// inline asm
	st.local.u32 	[%rd8], %r4615;
	ld.local.u32 	%r4620, [%rd5+8];
	ld.local.u32 	%r4621, [%rd5+4];
	// inline asm
	prmt.b32 %r4619, %r4620, %r4621, %r7;
	// inline asm
	st.local.u32 	[%rd7+12], %r4619;
	ld.local.v2.u32 	{%r4733, %r4734}, [%rd5];
	// inline asm
	prmt.b32 %r4623, %r4734, %r4733, %r7;
	// inline asm
	st.local.u32 	[%rd7+8], %r4623;
	ld.local.u32 	%r4628, [%rd5];
	ld.local.u32 	%r4629, [%rd4+12];
	// inline asm
	prmt.b32 %r4627, %r4628, %r4629, %r7;
	// inline asm
	st.local.u32 	[%rd7+4], %r4627;
	ld.local.v2.u32 	{%r4735, %r4736}, [%rd4+8];
	// inline asm
	prmt.b32 %r4631, %r4736, %r4735, %r7;
	// inline asm
	st.local.u32 	[%rd7], %r4631;
	ld.local.u32 	%r4636, [%rd4+8];
	ld.local.u32 	%r4637, [%rd4+4];
	// inline asm
	prmt.b32 %r4635, %r4636, %r4637, %r7;
	// inline asm
	st.local.u32 	[%rd6+12], %r4635;
	ld.local.v2.u32 	{%r4737, %r4738}, [%rd4];
	// inline asm
	prmt.b32 %r4639, %r4738, %r4737, %r7;
	// inline asm
	st.local.u32 	[%rd6+8], %r4639;
	ld.local.u32 	%r4644, [%rd4];
	ld.local.u32 	%r4645, [%rd3+12];
	// inline asm
	prmt.b32 %r4643, %r4644, %r4645, %r7;
	// inline asm
	st.local.u32 	[%rd6+4], %r4643;
	ld.local.v2.u32 	{%r4739, %r4740}, [%rd3+8];
	// inline asm
	prmt.b32 %r4647, %r4740, %r4739, %r7;
	// inline asm
	st.local.u32 	[%rd6], %r4647;
	ld.local.u32 	%r4652, [%rd3+8];
	ld.local.u32 	%r4653, [%rd3+4];
	// inline asm
	prmt.b32 %r4651, %r4652, %r4653, %r7;
	// inline asm
	st.local.u32 	[%rd5+12], %r4651;
	ld.local.v2.u32 	{%r4741, %r4742}, [%rd3];
	// inline asm
	prmt.b32 %r4655, %r4742, %r4741, %r7;
	// inline asm
	st.local.u32 	[%rd5+8], %r4655;
	ld.local.u32 	%r4660, [%rd3];
	ld.local.u32 	%r4661, [%rd2+12];
	// inline asm
	prmt.b32 %r4659, %r4660, %r4661, %r7;
	// inline asm
	st.local.u32 	[%rd5+4], %r4659;
	ld.local.v2.u32 	{%r4743, %r4744}, [%rd2+8];
	// inline asm
	prmt.b32 %r4663, %r4744, %r4743, %r7;
	// inline asm
	st.local.u32 	[%rd5], %r4663;
	ld.local.u32 	%r4668, [%rd2+8];
	ld.local.u32 	%r4669, [%rd2+4];
	// inline asm
	prmt.b32 %r4667, %r4668, %r4669, %r7;
	// inline asm
	st.local.u32 	[%rd4+12], %r4667;
	ld.local.v2.u32 	{%r4745, %r4746}, [%rd2];
	// inline asm
	prmt.b32 %r4671, %r4746, %r4745, %r7;
	// inline asm
	st.local.u32 	[%rd4+8], %r4671;
	ld.local.u32 	%r4676, [%rd2];
	ld.local.u32 	%r4677, [%rd1+12];
	// inline asm
	prmt.b32 %r4675, %r4676, %r4677, %r7;
	// inline asm
	st.local.u32 	[%rd4+4], %r4675;
	ld.local.v2.u32 	{%r4747, %r4748}, [%rd1+8];
	// inline asm
	prmt.b32 %r4679, %r4748, %r4747, %r7;
	// inline asm
	st.local.u32 	[%rd4], %r4679;
	ld.local.u32 	%r4684, [%rd1+8];
	ld.local.u32 	%r4685, [%rd1+4];
	// inline asm
	prmt.b32 %r4683, %r4684, %r4685, %r7;
	// inline asm
	st.local.u32 	[%rd3+12], %r4683;
	ld.local.v2.u32 	{%r4749, %r4750}, [%rd1];
	// inline asm
	prmt.b32 %r4687, %r4750, %r4749, %r7;
	// inline asm
	st.local.u32 	[%rd3+8], %r4687;
	ld.local.u32 	%r4692, [%rd1];
	// inline asm
	prmt.b32 %r4691, %r4692, %r7360, %r7;
	// inline asm
	st.local.v2.u32 	[%rd3], {%r7360, %r4691};
	st.local.v4.u32 	[%rd2], {%r7360, %r7360, %r7360, %r7360};
	st.local.v2.u32 	[%rd1+8], {%r7360, %r7360};
	mov.u64 	%rd210, 0;
	st.local.u64 	[%rd1], %rd210;
	mov.u32 	%r7361, %r7360;
	mov.u32 	%r7370, %r7360;
	mov.u32 	%r7371, %r7360;
	bra.uni 	BB3_82;

BB3_55:
	setp.eq.s32	%p14, %r673, 25;
	mov.u32 	%r7363, %r7362;
	mov.u32 	%r7364, %r7362;
	mov.u32 	%r7365, %r7362;
	mov.u32 	%r7366, %r7362;
	mov.u32 	%r7367, %r7362;
	mov.u32 	%r7368, %r7362;
	mov.u32 	%r7369, %r7362;
	mov.u32 	%r7370, %r7362;
	mov.u32 	%r7371, %r7362;
	mov.u32 	%r7372, %r7362;
	mov.u32 	%r7373, %r7362;
	mov.u32 	%r7374, %r7362;
	mov.u32 	%r7375, %r7362;
	mov.u32 	%r7376, %r7362;
	mov.u32 	%r7377, %r7362;
	mov.u32 	%r7378, %r7362;
	mov.u32 	%r7379, %r7362;
	mov.u32 	%r7380, %r7362;
	mov.u32 	%r7381, %r7362;
	mov.u32 	%r7382, %r7362;
	mov.u32 	%r7383, %r7362;
	mov.u32 	%r7384, %r7362;
	mov.u32 	%r7385, %r7362;
	mov.u32 	%r7386, %r7362;
	mov.u32 	%r7387, %r7362;
	mov.u32 	%r7388, %r7362;
	mov.u32 	%r7389, %r7362;
	mov.u32 	%r7390, %r7362;
	mov.u32 	%r7391, %r7362;
	mov.u32 	%r7392, %r7362;
	mov.u32 	%r7393, %r7362;
	@%p14 bra 	BB3_56;
	bra.uni 	BB3_89;

BB3_56:
	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7388, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1831, %r1832}, [%rd8+8];
	// inline asm
	prmt.b32 %r7389, %r1832, %r1831, %r7;
	// inline asm
	ld.local.u32 	%r1700, [%rd8+8];
	ld.local.u32 	%r1701, [%rd8+4];
	// inline asm
	prmt.b32 %r7382, %r1700, %r1701, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1833, %r1834}, [%rd8];
	// inline asm
	prmt.b32 %r7383, %r1834, %r1833, %r7;
	// inline asm
	ld.local.u32 	%r1708, [%rd8];
	ld.local.u32 	%r1709, [%rd7+12];
	// inline asm
	prmt.b32 %r7384, %r1708, %r1709, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1835, %r1836}, [%rd7+8];
	// inline asm
	prmt.b32 %r7385, %r1836, %r1835, %r7;
	// inline asm
	ld.local.u32 	%r1716, [%rd7+8];
	ld.local.u32 	%r1717, [%rd7+4];
	// inline asm
	prmt.b32 %r7378, %r1716, %r1717, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1837, %r1838}, [%rd7];
	// inline asm
	prmt.b32 %r7379, %r1838, %r1837, %r7;
	// inline asm
	ld.local.u32 	%r1724, [%rd7];
	ld.local.u32 	%r1725, [%rd6+12];
	// inline asm
	prmt.b32 %r7380, %r1724, %r1725, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1839, %r1840}, [%rd6+8];
	// inline asm
	prmt.b32 %r7381, %r1840, %r1839, %r7;
	// inline asm
	ld.local.u32 	%r1732, [%rd6+8];
	ld.local.u32 	%r1733, [%rd6+4];
	// inline asm
	prmt.b32 %r7374, %r1732, %r1733, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1841, %r1842}, [%rd6];
	// inline asm
	prmt.b32 %r7375, %r1842, %r1841, %r7;
	// inline asm
	ld.local.u32 	%r1740, [%rd6];
	ld.local.u32 	%r1741, [%rd5+12];
	// inline asm
	prmt.b32 %r7376, %r1740, %r1741, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1843, %r1844}, [%rd5+8];
	// inline asm
	prmt.b32 %r7377, %r1844, %r1843, %r7;
	// inline asm
	ld.local.u32 	%r1748, [%rd5+8];
	ld.local.u32 	%r1749, [%rd5+4];
	// inline asm
	prmt.b32 %r7370, %r1748, %r1749, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1845, %r1846}, [%rd5];
	// inline asm
	prmt.b32 %r7371, %r1846, %r1845, %r7;
	// inline asm
	ld.local.u32 	%r1756, [%rd5];
	ld.local.u32 	%r1757, [%rd4+12];
	// inline asm
	prmt.b32 %r7372, %r1756, %r1757, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1847, %r1848}, [%rd4+8];
	// inline asm
	prmt.b32 %r7373, %r1848, %r1847, %r7;
	// inline asm
	ld.local.u32 	%r1764, [%rd4+8];
	ld.local.u32 	%r1765, [%rd4+4];
	// inline asm
	prmt.b32 %r7366, %r1764, %r1765, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1849, %r1850}, [%rd4];
	// inline asm
	prmt.b32 %r7367, %r1850, %r1849, %r7;
	// inline asm
	ld.local.u32 	%r1772, [%rd4];
	ld.local.u32 	%r1773, [%rd3+12];
	// inline asm
	prmt.b32 %r7368, %r1772, %r1773, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1851, %r1852}, [%rd3+8];
	// inline asm
	prmt.b32 %r7369, %r1852, %r1851, %r7;
	// inline asm
	ld.local.u32 	%r1780, [%rd3+8];
	ld.local.u32 	%r1781, [%rd3+4];
	// inline asm
	prmt.b32 %r7362, %r1780, %r1781, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1853, %r1854}, [%rd3];
	// inline asm
	prmt.b32 %r7363, %r1854, %r1853, %r7;
	// inline asm
	ld.local.u32 	%r1788, [%rd3];
	ld.local.u32 	%r1789, [%rd2+12];
	// inline asm
	prmt.b32 %r7364, %r1788, %r1789, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1855, %r1856}, [%rd2+8];
	// inline asm
	prmt.b32 %r7365, %r1856, %r1855, %r7;
	// inline asm
	ld.local.u32 	%r1796, [%rd2+8];
	ld.local.u32 	%r1797, [%rd2+4];
	// inline asm
	prmt.b32 %r1795, %r1796, %r1797, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r1795;
	ld.local.v2.u32 	{%r1857, %r1858}, [%rd2];
	// inline asm
	prmt.b32 %r1799, %r1858, %r1857, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r1799;
	ld.local.u32 	%r1804, [%rd2];
	ld.local.u32 	%r1805, [%rd1+12];
	// inline asm
	prmt.b32 %r1803, %r1804, %r1805, %r7;
	// inline asm
	st.local.u32 	[%rd8+4], %r1803;
	ld.local.v2.u32 	{%r1859, %r1860}, [%rd1+8];
	// inline asm
	prmt.b32 %r1807, %r1860, %r1859, %r7;
	// inline asm
	st.local.u32 	[%rd8], %r1807;
	ld.local.u32 	%r1812, [%rd1+8];
	ld.local.u32 	%r1813, [%rd1+4];
	// inline asm
	prmt.b32 %r1811, %r1812, %r1813, %r7;
	// inline asm
	st.local.u32 	[%rd7+12], %r1811;
	ld.local.v2.u32 	{%r1861, %r1862}, [%rd1];
	// inline asm
	prmt.b32 %r1815, %r1862, %r1861, %r7;
	// inline asm
	st.local.u32 	[%rd7+8], %r1815;
	ld.local.u32 	%r1820, [%rd1];
	// inline asm
	prmt.b32 %r1819, %r1820, %r7360, %r7;
	// inline asm
	st.local.v2.u32 	[%rd7], {%r7360, %r1819};
	st.local.v4.u32 	[%rd6], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd5], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd4], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd3], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd2], {%r7360, %r7360, %r7360, %r7360};
	st.local.v2.u32 	[%rd1+8], {%r7360, %r7360};
	mov.u64 	%rd194, 0;
	st.local.u64 	[%rd1], %rd194;
	mov.u32 	%r7361, %r7360;
	mov.u32 	%r7386, %r7360;
	mov.u32 	%r7387, %r7360;
	bra.uni 	BB3_86;

BB3_16:
	setp.eq.s32	%p43, %r673, 5;
	mov.u32 	%r7363, %r7362;
	mov.u32 	%r7364, %r7362;
	mov.u32 	%r7365, %r7362;
	mov.u32 	%r7366, %r7362;
	mov.u32 	%r7367, %r7362;
	mov.u32 	%r7368, %r7362;
	mov.u32 	%r7369, %r7362;
	mov.u32 	%r7370, %r7362;
	mov.u32 	%r7371, %r7362;
	mov.u32 	%r7372, %r7362;
	mov.u32 	%r7373, %r7362;
	mov.u32 	%r7374, %r7362;
	mov.u32 	%r7375, %r7362;
	mov.u32 	%r7376, %r7362;
	mov.u32 	%r7377, %r7362;
	mov.u32 	%r7378, %r7362;
	mov.u32 	%r7379, %r7362;
	mov.u32 	%r7380, %r7362;
	mov.u32 	%r7381, %r7362;
	mov.u32 	%r7382, %r7362;
	mov.u32 	%r7383, %r7362;
	mov.u32 	%r7384, %r7362;
	mov.u32 	%r7385, %r7362;
	mov.u32 	%r7386, %r7362;
	mov.u32 	%r7387, %r7362;
	mov.u32 	%r7388, %r7362;
	mov.u32 	%r7389, %r7362;
	mov.u32 	%r7390, %r7362;
	mov.u32 	%r7391, %r7362;
	mov.u32 	%r7392, %r7362;
	mov.u32 	%r7393, %r7362;
	@%p43 bra 	BB3_17;
	bra.uni 	BB3_89;

BB3_17:
	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7368, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r5481, %r5482}, [%rd8+8];
	// inline asm
	prmt.b32 %r7369, %r5482, %r5481, %r7;
	// inline asm
	ld.local.u32 	%r5330, [%rd8+8];
	ld.local.u32 	%r5331, [%rd8+4];
	// inline asm
	prmt.b32 %r7362, %r5330, %r5331, %r7;
	// inline asm
	ld.local.v2.u32 	{%r5483, %r5484}, [%rd8];
	// inline asm
	prmt.b32 %r7363, %r5484, %r5483, %r7;
	// inline asm
	ld.local.u32 	%r5338, [%rd8];
	ld.local.u32 	%r5339, [%rd7+12];
	// inline asm
	prmt.b32 %r7364, %r5338, %r5339, %r7;
	// inline asm
	ld.local.v2.u32 	{%r5485, %r5486}, [%rd7+8];
	// inline asm
	prmt.b32 %r7365, %r5486, %r5485, %r7;
	// inline asm
	ld.local.u32 	%r5346, [%rd7+8];
	ld.local.u32 	%r5347, [%rd7+4];
	// inline asm
	prmt.b32 %r5345, %r5346, %r5347, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r5345;
	ld.local.v2.u32 	{%r5487, %r5488}, [%rd7];
	// inline asm
	prmt.b32 %r5349, %r5488, %r5487, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r5349;
	ld.local.u32 	%r5354, [%rd7];
	ld.local.u32 	%r5355, [%rd6+12];
	// inline asm
	prmt.b32 %r5353, %r5354, %r5355, %r7;
	// inline asm
	st.local.u32 	[%rd8+4], %r5353;
	ld.local.v2.u32 	{%r5489, %r5490}, [%rd6+8];
	// inline asm
	prmt.b32 %r5357, %r5490, %r5489, %r7;
	// inline asm
	st.local.u32 	[%rd8], %r5357;
	ld.local.u32 	%r5362, [%rd6+8];
	ld.local.u32 	%r5363, [%rd6+4];
	// inline asm
	prmt.b32 %r5361, %r5362, %r5363, %r7;
	// inline asm
	st.local.u32 	[%rd7+12], %r5361;
	ld.local.v2.u32 	{%r5491, %r5492}, [%rd6];
	// inline asm
	prmt.b32 %r5365, %r5492, %r5491, %r7;
	// inline asm
	st.local.u32 	[%rd7+8], %r5365;
	ld.local.u32 	%r5370, [%rd6];
	ld.local.u32 	%r5371, [%rd5+12];
	// inline asm
	prmt.b32 %r5369, %r5370, %r5371, %r7;
	// inline asm
	st.local.u32 	[%rd7+4], %r5369;
	ld.local.v2.u32 	{%r5493, %r5494}, [%rd5+8];
	// inline asm
	prmt.b32 %r5373, %r5494, %r5493, %r7;
	// inline asm
	st.local.u32 	[%rd7], %r5373;
	ld.local.u32 	%r5378, [%rd5+8];
	ld.local.u32 	%r5379, [%rd5+4];
	// inline asm
	prmt.b32 %r5377, %r5378, %r5379, %r7;
	// inline asm
	st.local.u32 	[%rd6+12], %r5377;
	ld.local.v2.u32 	{%r5495, %r5496}, [%rd5];
	// inline asm
	prmt.b32 %r5381, %r5496, %r5495, %r7;
	// inline asm
	st.local.u32 	[%rd6+8], %r5381;
	ld.local.u32 	%r5386, [%rd5];
	ld.local.u32 	%r5387, [%rd4+12];
	// inline asm
	prmt.b32 %r5385, %r5386, %r5387, %r7;
	// inline asm
	st.local.u32 	[%rd6+4], %r5385;
	ld.local.v2.u32 	{%r5497, %r5498}, [%rd4+8];
	// inline asm
	prmt.b32 %r5389, %r5498, %r5497, %r7;
	// inline asm
	st.local.u32 	[%rd6], %r5389;
	ld.local.u32 	%r5394, [%rd4+8];
	ld.local.u32 	%r5395, [%rd4+4];
	// inline asm
	prmt.b32 %r5393, %r5394, %r5395, %r7;
	// inline asm
	st.local.u32 	[%rd5+12], %r5393;
	ld.local.v2.u32 	{%r5499, %r5500}, [%rd4];
	// inline asm
	prmt.b32 %r5397, %r5500, %r5499, %r7;
	// inline asm
	st.local.u32 	[%rd5+8], %r5397;
	ld.local.u32 	%r5402, [%rd4];
	ld.local.u32 	%r5403, [%rd3+12];
	// inline asm
	prmt.b32 %r5401, %r5402, %r5403, %r7;
	// inline asm
	st.local.u32 	[%rd5+4], %r5401;
	ld.local.v2.u32 	{%r5501, %r5502}, [%rd3+8];
	// inline asm
	prmt.b32 %r5405, %r5502, %r5501, %r7;
	// inline asm
	st.local.u32 	[%rd5], %r5405;
	ld.local.u32 	%r5410, [%rd3+8];
	ld.local.u32 	%r5411, [%rd3+4];
	// inline asm
	prmt.b32 %r5409, %r5410, %r5411, %r7;
	// inline asm
	st.local.u32 	[%rd4+12], %r5409;
	ld.local.v2.u32 	{%r5503, %r5504}, [%rd3];
	// inline asm
	prmt.b32 %r5413, %r5504, %r5503, %r7;
	// inline asm
	st.local.u32 	[%rd4+8], %r5413;
	ld.local.u32 	%r5418, [%rd3];
	ld.local.u32 	%r5419, [%rd2+12];
	// inline asm
	prmt.b32 %r5417, %r5418, %r5419, %r7;
	// inline asm
	st.local.u32 	[%rd4+4], %r5417;
	ld.local.v2.u32 	{%r5505, %r5506}, [%rd2+8];
	// inline asm
	prmt.b32 %r5421, %r5506, %r5505, %r7;
	// inline asm
	st.local.u32 	[%rd4], %r5421;
	ld.local.u32 	%r5426, [%rd2+8];
	ld.local.u32 	%r5427, [%rd2+4];
	// inline asm
	prmt.b32 %r5425, %r5426, %r5427, %r7;
	// inline asm
	st.local.u32 	[%rd3+12], %r5425;
	ld.local.v2.u32 	{%r5507, %r5508}, [%rd2];
	// inline asm
	prmt.b32 %r5429, %r5508, %r5507, %r7;
	// inline asm
	st.local.u32 	[%rd3+8], %r5429;
	ld.local.u32 	%r5434, [%rd2];
	ld.local.u32 	%r5435, [%rd1+12];
	// inline asm
	prmt.b32 %r5433, %r5434, %r5435, %r7;
	// inline asm
	st.local.u32 	[%rd3+4], %r5433;
	ld.local.v2.u32 	{%r5509, %r5510}, [%rd1+8];
	// inline asm
	prmt.b32 %r5437, %r5510, %r5509, %r7;
	// inline asm
	st.local.u32 	[%rd3], %r5437;
	ld.local.u32 	%r5442, [%rd1+8];
	ld.local.u32 	%r5443, [%rd1+4];
	// inline asm
	prmt.b32 %r5441, %r5442, %r5443, %r7;
	// inline asm
	st.local.u32 	[%rd2+12], %r5441;
	ld.local.v2.u32 	{%r5511, %r5512}, [%rd1];
	// inline asm
	prmt.b32 %r5445, %r5512, %r5511, %r7;
	// inline asm
	st.local.u32 	[%rd2+8], %r5445;
	ld.local.u32 	%r5450, [%rd1];
	// inline asm
	prmt.b32 %r5449, %r5450, %r7360, %r7;
	// inline asm
	st.local.v2.u32 	[%rd2], {%r7360, %r5449};
	st.local.v2.u32 	[%rd1+8], {%r7360, %r7360};
	mov.u64 	%rd214, 0;
	st.local.u64 	[%rd1], %rd214;
	mov.u32 	%r7361, %r7360;
	mov.u32 	%r7366, %r7360;
	mov.u32 	%r7367, %r7360;
	bra.uni 	BB3_81;

BB3_47:
	setp.eq.s32	%p20, %r673, 21;
	mov.u32 	%r7363, %r7362;
	mov.u32 	%r7364, %r7362;
	mov.u32 	%r7365, %r7362;
	mov.u32 	%r7366, %r7362;
	mov.u32 	%r7367, %r7362;
	mov.u32 	%r7368, %r7362;
	mov.u32 	%r7369, %r7362;
	mov.u32 	%r7370, %r7362;
	mov.u32 	%r7371, %r7362;
	mov.u32 	%r7372, %r7362;
	mov.u32 	%r7373, %r7362;
	mov.u32 	%r7374, %r7362;
	mov.u32 	%r7375, %r7362;
	mov.u32 	%r7376, %r7362;
	mov.u32 	%r7377, %r7362;
	mov.u32 	%r7378, %r7362;
	mov.u32 	%r7379, %r7362;
	mov.u32 	%r7380, %r7362;
	mov.u32 	%r7381, %r7362;
	mov.u32 	%r7382, %r7362;
	mov.u32 	%r7383, %r7362;
	mov.u32 	%r7384, %r7362;
	mov.u32 	%r7385, %r7362;
	mov.u32 	%r7386, %r7362;
	mov.u32 	%r7387, %r7362;
	mov.u32 	%r7388, %r7362;
	mov.u32 	%r7389, %r7362;
	mov.u32 	%r7390, %r7362;
	mov.u32 	%r7391, %r7362;
	mov.u32 	%r7392, %r7362;
	mov.u32 	%r7393, %r7362;
	@%p20 bra 	BB3_48;
	bra.uni 	BB3_89;

BB3_48:
	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7384, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2529, %r2530}, [%rd8+8];
	// inline asm
	prmt.b32 %r7385, %r2530, %r2529, %r7;
	// inline asm
	ld.local.u32 	%r2394, [%rd8+8];
	ld.local.u32 	%r2395, [%rd8+4];
	// inline asm
	prmt.b32 %r7378, %r2394, %r2395, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2531, %r2532}, [%rd8];
	// inline asm
	prmt.b32 %r7379, %r2532, %r2531, %r7;
	// inline asm
	ld.local.u32 	%r2402, [%rd8];
	ld.local.u32 	%r2403, [%rd7+12];
	// inline asm
	prmt.b32 %r7380, %r2402, %r2403, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2533, %r2534}, [%rd7+8];
	// inline asm
	prmt.b32 %r7381, %r2534, %r2533, %r7;
	// inline asm
	ld.local.u32 	%r2410, [%rd7+8];
	ld.local.u32 	%r2411, [%rd7+4];
	// inline asm
	prmt.b32 %r7374, %r2410, %r2411, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2535, %r2536}, [%rd7];
	// inline asm
	prmt.b32 %r7375, %r2536, %r2535, %r7;
	// inline asm
	ld.local.u32 	%r2418, [%rd7];
	ld.local.u32 	%r2419, [%rd6+12];
	// inline asm
	prmt.b32 %r7376, %r2418, %r2419, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2537, %r2538}, [%rd6+8];
	// inline asm
	prmt.b32 %r7377, %r2538, %r2537, %r7;
	// inline asm
	ld.local.u32 	%r2426, [%rd6+8];
	ld.local.u32 	%r2427, [%rd6+4];
	// inline asm
	prmt.b32 %r7370, %r2426, %r2427, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2539, %r2540}, [%rd6];
	// inline asm
	prmt.b32 %r7371, %r2540, %r2539, %r7;
	// inline asm
	ld.local.u32 	%r2434, [%rd6];
	ld.local.u32 	%r2435, [%rd5+12];
	// inline asm
	prmt.b32 %r7372, %r2434, %r2435, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2541, %r2542}, [%rd5+8];
	// inline asm
	prmt.b32 %r7373, %r2542, %r2541, %r7;
	// inline asm
	ld.local.u32 	%r2442, [%rd5+8];
	ld.local.u32 	%r2443, [%rd5+4];
	// inline asm
	prmt.b32 %r7366, %r2442, %r2443, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2543, %r2544}, [%rd5];
	// inline asm
	prmt.b32 %r7367, %r2544, %r2543, %r7;
	// inline asm
	ld.local.u32 	%r2450, [%rd5];
	ld.local.u32 	%r2451, [%rd4+12];
	// inline asm
	prmt.b32 %r7368, %r2450, %r2451, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2545, %r2546}, [%rd4+8];
	// inline asm
	prmt.b32 %r7369, %r2546, %r2545, %r7;
	// inline asm
	ld.local.u32 	%r2458, [%rd4+8];
	ld.local.u32 	%r2459, [%rd4+4];
	// inline asm
	prmt.b32 %r7362, %r2458, %r2459, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2547, %r2548}, [%rd4];
	// inline asm
	prmt.b32 %r7363, %r2548, %r2547, %r7;
	// inline asm
	ld.local.u32 	%r2466, [%rd4];
	ld.local.u32 	%r2467, [%rd3+12];
	// inline asm
	prmt.b32 %r7364, %r2466, %r2467, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2549, %r2550}, [%rd3+8];
	// inline asm
	prmt.b32 %r7365, %r2550, %r2549, %r7;
	// inline asm
	ld.local.u32 	%r2474, [%rd3+8];
	ld.local.u32 	%r2475, [%rd3+4];
	// inline asm
	prmt.b32 %r2473, %r2474, %r2475, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r2473;
	ld.local.v2.u32 	{%r2551, %r2552}, [%rd3];
	// inline asm
	prmt.b32 %r2477, %r2552, %r2551, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r2477;
	ld.local.u32 	%r2482, [%rd3];
	ld.local.u32 	%r2483, [%rd2+12];
	// inline asm
	prmt.b32 %r2481, %r2482, %r2483, %r7;
	// inline asm
	st.local.u32 	[%rd8+4], %r2481;
	ld.local.v2.u32 	{%r2553, %r2554}, [%rd2+8];
	// inline asm
	prmt.b32 %r2485, %r2554, %r2553, %r7;
	// inline asm
	st.local.u32 	[%rd8], %r2485;
	ld.local.u32 	%r2490, [%rd2+8];
	ld.local.u32 	%r2491, [%rd2+4];
	// inline asm
	prmt.b32 %r2489, %r2490, %r2491, %r7;
	// inline asm
	st.local.u32 	[%rd7+12], %r2489;
	ld.local.v2.u32 	{%r2555, %r2556}, [%rd2];
	// inline asm
	prmt.b32 %r2493, %r2556, %r2555, %r7;
	// inline asm
	st.local.u32 	[%rd7+8], %r2493;
	ld.local.u32 	%r2498, [%rd2];
	ld.local.u32 	%r2499, [%rd1+12];
	// inline asm
	prmt.b32 %r2497, %r2498, %r2499, %r7;
	// inline asm
	st.local.u32 	[%rd7+4], %r2497;
	ld.local.v2.u32 	{%r2557, %r2558}, [%rd1+8];
	// inline asm
	prmt.b32 %r2501, %r2558, %r2557, %r7;
	// inline asm
	st.local.u32 	[%rd7], %r2501;
	ld.local.u32 	%r2506, [%rd1+8];
	ld.local.u32 	%r2507, [%rd1+4];
	// inline asm
	prmt.b32 %r2505, %r2506, %r2507, %r7;
	// inline asm
	st.local.u32 	[%rd6+12], %r2505;
	ld.local.v2.u32 	{%r2559, %r2560}, [%rd1];
	// inline asm
	prmt.b32 %r2509, %r2560, %r2559, %r7;
	// inline asm
	st.local.u32 	[%rd6+8], %r2509;
	ld.local.u32 	%r2514, [%rd1];
	// inline asm
	prmt.b32 %r2513, %r2514, %r7360, %r7;
	// inline asm
	st.local.v2.u32 	[%rd6], {%r7360, %r2513};
	st.local.v4.u32 	[%rd5], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd4], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd3], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd2], {%r7360, %r7360, %r7360, %r7360};
	st.local.v2.u32 	[%rd1+8], {%r7360, %r7360};
	mov.u64 	%rd198, 0;
	st.local.u64 	[%rd1], %rd198;
	mov.u32 	%r7361, %r7360;
	mov.u32 	%r7382, %r7360;
	mov.u32 	%r7383, %r7360;
	bra.uni 	BB3_85;

BB3_31:
	setp.eq.s32	%p32, %r673, 13;
	mov.u32 	%r7363, %r7362;
	mov.u32 	%r7364, %r7362;
	mov.u32 	%r7365, %r7362;
	mov.u32 	%r7366, %r7362;
	mov.u32 	%r7367, %r7362;
	mov.u32 	%r7368, %r7362;
	mov.u32 	%r7369, %r7362;
	mov.u32 	%r7370, %r7362;
	mov.u32 	%r7371, %r7362;
	mov.u32 	%r7372, %r7362;
	mov.u32 	%r7373, %r7362;
	mov.u32 	%r7374, %r7362;
	mov.u32 	%r7375, %r7362;
	mov.u32 	%r7376, %r7362;
	mov.u32 	%r7377, %r7362;
	mov.u32 	%r7378, %r7362;
	mov.u32 	%r7379, %r7362;
	mov.u32 	%r7380, %r7362;
	mov.u32 	%r7381, %r7362;
	mov.u32 	%r7382, %r7362;
	mov.u32 	%r7383, %r7362;
	mov.u32 	%r7384, %r7362;
	mov.u32 	%r7385, %r7362;
	mov.u32 	%r7386, %r7362;
	mov.u32 	%r7387, %r7362;
	mov.u32 	%r7388, %r7362;
	mov.u32 	%r7389, %r7362;
	mov.u32 	%r7390, %r7362;
	mov.u32 	%r7391, %r7362;
	mov.u32 	%r7392, %r7362;
	mov.u32 	%r7393, %r7362;
	@%p32 bra 	BB3_32;
	bra.uni 	BB3_89;

BB3_32:
	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7376, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3973, %r3974}, [%rd8+8];
	// inline asm
	prmt.b32 %r7377, %r3974, %r3973, %r7;
	// inline asm
	ld.local.u32 	%r3830, [%rd8+8];
	ld.local.u32 	%r3831, [%rd8+4];
	// inline asm
	prmt.b32 %r7370, %r3830, %r3831, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3975, %r3976}, [%rd8];
	// inline asm
	prmt.b32 %r7371, %r3976, %r3975, %r7;
	// inline asm
	ld.local.u32 	%r3838, [%rd8];
	ld.local.u32 	%r3839, [%rd7+12];
	// inline asm
	prmt.b32 %r7372, %r3838, %r3839, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3977, %r3978}, [%rd7+8];
	// inline asm
	prmt.b32 %r7373, %r3978, %r3977, %r7;
	// inline asm
	ld.local.u32 	%r3846, [%rd7+8];
	ld.local.u32 	%r3847, [%rd7+4];
	// inline asm
	prmt.b32 %r7366, %r3846, %r3847, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3979, %r3980}, [%rd7];
	// inline asm
	prmt.b32 %r7367, %r3980, %r3979, %r7;
	// inline asm
	ld.local.u32 	%r3854, [%rd7];
	ld.local.u32 	%r3855, [%rd6+12];
	// inline asm
	prmt.b32 %r7368, %r3854, %r3855, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3981, %r3982}, [%rd6+8];
	// inline asm
	prmt.b32 %r7369, %r3982, %r3981, %r7;
	// inline asm
	ld.local.u32 	%r3862, [%rd6+8];
	ld.local.u32 	%r3863, [%rd6+4];
	// inline asm
	prmt.b32 %r7362, %r3862, %r3863, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3983, %r3984}, [%rd6];
	// inline asm
	prmt.b32 %r7363, %r3984, %r3983, %r7;
	// inline asm
	ld.local.u32 	%r3870, [%rd6];
	ld.local.u32 	%r3871, [%rd5+12];
	// inline asm
	prmt.b32 %r7364, %r3870, %r3871, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3985, %r3986}, [%rd5+8];
	// inline asm
	prmt.b32 %r7365, %r3986, %r3985, %r7;
	// inline asm
	ld.local.u32 	%r3878, [%rd5+8];
	ld.local.u32 	%r3879, [%rd5+4];
	// inline asm
	prmt.b32 %r3877, %r3878, %r3879, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r3877;
	ld.local.v2.u32 	{%r3987, %r3988}, [%rd5];
	// inline asm
	prmt.b32 %r3881, %r3988, %r3987, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r3881;
	ld.local.u32 	%r3886, [%rd5];
	ld.local.u32 	%r3887, [%rd4+12];
	// inline asm
	prmt.b32 %r3885, %r3886, %r3887, %r7;
	// inline asm
	st.local.u32 	[%rd8+4], %r3885;
	ld.local.v2.u32 	{%r3989, %r3990}, [%rd4+8];
	// inline asm
	prmt.b32 %r3889, %r3990, %r3989, %r7;
	// inline asm
	st.local.u32 	[%rd8], %r3889;
	ld.local.u32 	%r3894, [%rd4+8];
	ld.local.u32 	%r3895, [%rd4+4];
	// inline asm
	prmt.b32 %r3893, %r3894, %r3895, %r7;
	// inline asm
	st.local.u32 	[%rd7+12], %r3893;
	ld.local.v2.u32 	{%r3991, %r3992}, [%rd4];
	// inline asm
	prmt.b32 %r3897, %r3992, %r3991, %r7;
	// inline asm
	st.local.u32 	[%rd7+8], %r3897;
	ld.local.u32 	%r3902, [%rd4];
	ld.local.u32 	%r3903, [%rd3+12];
	// inline asm
	prmt.b32 %r3901, %r3902, %r3903, %r7;
	// inline asm
	st.local.u32 	[%rd7+4], %r3901;
	ld.local.v2.u32 	{%r3993, %r3994}, [%rd3+8];
	// inline asm
	prmt.b32 %r3905, %r3994, %r3993, %r7;
	// inline asm
	st.local.u32 	[%rd7], %r3905;
	ld.local.u32 	%r3910, [%rd3+8];
	ld.local.u32 	%r3911, [%rd3+4];
	// inline asm
	prmt.b32 %r3909, %r3910, %r3911, %r7;
	// inline asm
	st.local.u32 	[%rd6+12], %r3909;
	ld.local.v2.u32 	{%r3995, %r3996}, [%rd3];
	// inline asm
	prmt.b32 %r3913, %r3996, %r3995, %r7;
	// inline asm
	st.local.u32 	[%rd6+8], %r3913;
	ld.local.u32 	%r3918, [%rd3];
	ld.local.u32 	%r3919, [%rd2+12];
	// inline asm
	prmt.b32 %r3917, %r3918, %r3919, %r7;
	// inline asm
	st.local.u32 	[%rd6+4], %r3917;
	ld.local.v2.u32 	{%r3997, %r3998}, [%rd2+8];
	// inline asm
	prmt.b32 %r3921, %r3998, %r3997, %r7;
	// inline asm
	st.local.u32 	[%rd6], %r3921;
	ld.local.u32 	%r3926, [%rd2+8];
	ld.local.u32 	%r3927, [%rd2+4];
	// inline asm
	prmt.b32 %r3925, %r3926, %r3927, %r7;
	// inline asm
	st.local.u32 	[%rd5+12], %r3925;
	ld.local.v2.u32 	{%r3999, %r4000}, [%rd2];
	// inline asm
	prmt.b32 %r3929, %r4000, %r3999, %r7;
	// inline asm
	st.local.u32 	[%rd5+8], %r3929;
	ld.local.u32 	%r3934, [%rd2];
	ld.local.u32 	%r3935, [%rd1+12];
	// inline asm
	prmt.b32 %r3933, %r3934, %r3935, %r7;
	// inline asm
	st.local.u32 	[%rd5+4], %r3933;
	ld.local.v2.u32 	{%r4001, %r4002}, [%rd1+8];
	// inline asm
	prmt.b32 %r3937, %r4002, %r4001, %r7;
	// inline asm
	st.local.u32 	[%rd5], %r3937;
	ld.local.u32 	%r3942, [%rd1+8];
	ld.local.u32 	%r3943, [%rd1+4];
	// inline asm
	prmt.b32 %r3941, %r3942, %r3943, %r7;
	// inline asm
	st.local.u32 	[%rd4+12], %r3941;
	ld.local.v2.u32 	{%r4003, %r4004}, [%rd1];
	// inline asm
	prmt.b32 %r3945, %r4004, %r4003, %r7;
	// inline asm
	st.local.u32 	[%rd4+8], %r3945;
	ld.local.u32 	%r3950, [%rd1];
	// inline asm
	prmt.b32 %r3949, %r3950, %r7360, %r7;
	// inline asm
	st.local.v2.u32 	[%rd4], {%r7360, %r3949};
	st.local.v4.u32 	[%rd3], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd2], {%r7360, %r7360, %r7360, %r7360};
	st.local.v2.u32 	[%rd1+8], {%r7360, %r7360};
	mov.u64 	%rd206, 0;
	st.local.u64 	[%rd1], %rd206;
	mov.u32 	%r7361, %r7360;
	mov.u32 	%r7374, %r7360;
	mov.u32 	%r7375, %r7360;
	bra.uni 	BB3_83;

BB3_62:
	setp.eq.s32	%p9, %r673, 29;
	mov.u32 	%r7363, %r7362;
	mov.u32 	%r7364, %r7362;
	mov.u32 	%r7365, %r7362;
	mov.u32 	%r7366, %r7362;
	mov.u32 	%r7367, %r7362;
	mov.u32 	%r7368, %r7362;
	mov.u32 	%r7369, %r7362;
	mov.u32 	%r7370, %r7362;
	mov.u32 	%r7371, %r7362;
	mov.u32 	%r7372, %r7362;
	mov.u32 	%r7373, %r7362;
	mov.u32 	%r7374, %r7362;
	mov.u32 	%r7375, %r7362;
	mov.u32 	%r7376, %r7362;
	mov.u32 	%r7377, %r7362;
	mov.u32 	%r7378, %r7362;
	mov.u32 	%r7379, %r7362;
	mov.u32 	%r7380, %r7362;
	mov.u32 	%r7381, %r7362;
	mov.u32 	%r7382, %r7362;
	mov.u32 	%r7383, %r7362;
	mov.u32 	%r7384, %r7362;
	mov.u32 	%r7385, %r7362;
	mov.u32 	%r7386, %r7362;
	mov.u32 	%r7387, %r7362;
	mov.u32 	%r7388, %r7362;
	mov.u32 	%r7389, %r7362;
	mov.u32 	%r7390, %r7362;
	mov.u32 	%r7391, %r7362;
	mov.u32 	%r7392, %r7362;
	mov.u32 	%r7393, %r7362;
	@%p9 bra 	BB3_63;
	bra.uni 	BB3_89;

BB3_63:
	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7392, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1149, %r1150}, [%rd8+8];
	// inline asm
	prmt.b32 %r7393, %r1150, %r1149, %r7;
	// inline asm
	ld.local.u32 	%r1022, [%rd8+8];
	ld.local.u32 	%r1023, [%rd8+4];
	// inline asm
	prmt.b32 %r7386, %r1022, %r1023, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1151, %r1152}, [%rd8];
	// inline asm
	prmt.b32 %r7387, %r1152, %r1151, %r7;
	// inline asm
	ld.local.u32 	%r1030, [%rd8];
	ld.local.u32 	%r1031, [%rd7+12];
	// inline asm
	prmt.b32 %r7388, %r1030, %r1031, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1153, %r1154}, [%rd7+8];
	// inline asm
	prmt.b32 %r7389, %r1154, %r1153, %r7;
	// inline asm
	ld.local.u32 	%r1038, [%rd7+8];
	ld.local.u32 	%r1039, [%rd7+4];
	// inline asm
	prmt.b32 %r7382, %r1038, %r1039, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1155, %r1156}, [%rd7];
	// inline asm
	prmt.b32 %r7383, %r1156, %r1155, %r7;
	// inline asm
	ld.local.u32 	%r1046, [%rd7];
	ld.local.u32 	%r1047, [%rd6+12];
	// inline asm
	prmt.b32 %r7384, %r1046, %r1047, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1157, %r1158}, [%rd6+8];
	// inline asm
	prmt.b32 %r7385, %r1158, %r1157, %r7;
	// inline asm
	ld.local.u32 	%r1054, [%rd6+8];
	ld.local.u32 	%r1055, [%rd6+4];
	// inline asm
	prmt.b32 %r7378, %r1054, %r1055, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1159, %r1160}, [%rd6];
	// inline asm
	prmt.b32 %r7379, %r1160, %r1159, %r7;
	// inline asm
	ld.local.u32 	%r1062, [%rd6];
	ld.local.u32 	%r1063, [%rd5+12];
	// inline asm
	prmt.b32 %r7380, %r1062, %r1063, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1161, %r1162}, [%rd5+8];
	// inline asm
	prmt.b32 %r7381, %r1162, %r1161, %r7;
	// inline asm
	ld.local.u32 	%r1070, [%rd5+8];
	ld.local.u32 	%r1071, [%rd5+4];
	// inline asm
	prmt.b32 %r7374, %r1070, %r1071, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1163, %r1164}, [%rd5];
	// inline asm
	prmt.b32 %r7375, %r1164, %r1163, %r7;
	// inline asm
	ld.local.u32 	%r1078, [%rd5];
	ld.local.u32 	%r1079, [%rd4+12];
	// inline asm
	prmt.b32 %r7376, %r1078, %r1079, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1165, %r1166}, [%rd4+8];
	// inline asm
	prmt.b32 %r7377, %r1166, %r1165, %r7;
	// inline asm
	ld.local.u32 	%r1086, [%rd4+8];
	ld.local.u32 	%r1087, [%rd4+4];
	// inline asm
	prmt.b32 %r7370, %r1086, %r1087, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1167, %r1168}, [%rd4];
	// inline asm
	prmt.b32 %r7371, %r1168, %r1167, %r7;
	// inline asm
	ld.local.u32 	%r1094, [%rd4];
	ld.local.u32 	%r1095, [%rd3+12];
	// inline asm
	prmt.b32 %r7372, %r1094, %r1095, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1169, %r1170}, [%rd3+8];
	// inline asm
	prmt.b32 %r7373, %r1170, %r1169, %r7;
	// inline asm
	ld.local.u32 	%r1102, [%rd3+8];
	ld.local.u32 	%r1103, [%rd3+4];
	// inline asm
	prmt.b32 %r7366, %r1102, %r1103, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1171, %r1172}, [%rd3];
	// inline asm
	prmt.b32 %r7367, %r1172, %r1171, %r7;
	// inline asm
	ld.local.u32 	%r1110, [%rd3];
	ld.local.u32 	%r1111, [%rd2+12];
	// inline asm
	prmt.b32 %r7368, %r1110, %r1111, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1173, %r1174}, [%rd2+8];
	// inline asm
	prmt.b32 %r7369, %r1174, %r1173, %r7;
	// inline asm
	ld.local.u32 	%r1118, [%rd2+8];
	ld.local.u32 	%r1119, [%rd2+4];
	// inline asm
	prmt.b32 %r7362, %r1118, %r1119, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1175, %r1176}, [%rd2];
	// inline asm
	prmt.b32 %r7363, %r1176, %r1175, %r7;
	// inline asm
	ld.local.u32 	%r1126, [%rd2];
	ld.local.u32 	%r1127, [%rd1+12];
	// inline asm
	prmt.b32 %r7364, %r1126, %r1127, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1177, %r1178}, [%rd1+8];
	// inline asm
	prmt.b32 %r7365, %r1178, %r1177, %r7;
	// inline asm
	ld.local.u32 	%r1134, [%rd1+8];
	ld.local.u32 	%r1135, [%rd1+4];
	// inline asm
	prmt.b32 %r1133, %r1134, %r1135, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r1133;
	ld.local.v2.u32 	{%r1179, %r1180}, [%rd1];
	// inline asm
	prmt.b32 %r1137, %r1180, %r1179, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r1137;
	ld.local.u32 	%r1142, [%rd1];
	// inline asm
	prmt.b32 %r1141, %r1142, %r7360, %r7;
	// inline asm
	st.local.v2.u32 	[%rd8], {%r7360, %r1141};
	st.local.v4.u32 	[%rd7], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd6], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd5], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd4], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd3], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd2], {%r7360, %r7360, %r7360, %r7360};
	st.local.v2.u32 	[%rd1+8], {%r7360, %r7360};
	mov.u64 	%rd190, 0;
	st.local.u64 	[%rd1], %rd190;
	mov.u32 	%r7361, %r7360;
	mov.u32 	%r7390, %r7360;
	mov.u32 	%r7391, %r7360;
	bra.uni 	BB3_89;

BB3_11:
	setp.eq.s32	%p46, %r673, 3;
	mov.u32 	%r7363, %r7362;
	mov.u32 	%r7364, %r7362;
	mov.u32 	%r7365, %r7362;
	mov.u32 	%r7366, %r7362;
	mov.u32 	%r7367, %r7362;
	mov.u32 	%r7368, %r7362;
	mov.u32 	%r7369, %r7362;
	mov.u32 	%r7370, %r7362;
	mov.u32 	%r7371, %r7362;
	mov.u32 	%r7372, %r7362;
	mov.u32 	%r7373, %r7362;
	mov.u32 	%r7374, %r7362;
	mov.u32 	%r7375, %r7362;
	mov.u32 	%r7376, %r7362;
	mov.u32 	%r7377, %r7362;
	mov.u32 	%r7378, %r7362;
	mov.u32 	%r7379, %r7362;
	mov.u32 	%r7380, %r7362;
	mov.u32 	%r7381, %r7362;
	mov.u32 	%r7382, %r7362;
	mov.u32 	%r7383, %r7362;
	mov.u32 	%r7384, %r7362;
	mov.u32 	%r7385, %r7362;
	mov.u32 	%r7386, %r7362;
	mov.u32 	%r7387, %r7362;
	mov.u32 	%r7388, %r7362;
	mov.u32 	%r7389, %r7362;
	mov.u32 	%r7390, %r7362;
	mov.u32 	%r7391, %r7362;
	mov.u32 	%r7392, %r7362;
	mov.u32 	%r7393, %r7362;
	@%p46 bra 	BB3_12;
	bra.uni 	BB3_89;

BB3_12:
	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7362, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r5868, %r5869}, [%rd8+8];
	// inline asm
	prmt.b32 %r7363, %r5869, %r5868, %r7;
	// inline asm
	ld.local.u32 	%r5715, [%rd8+8];
	ld.local.u32 	%r5716, [%rd8+4];
	// inline asm
	prmt.b32 %r7364, %r5715, %r5716, %r7;
	// inline asm
	ld.local.v2.u32 	{%r5870, %r5871}, [%rd8];
	// inline asm
	prmt.b32 %r7365, %r5871, %r5870, %r7;
	// inline asm
	ld.local.u32 	%r5723, [%rd8];
	ld.local.u32 	%r5724, [%rd7+12];
	// inline asm
	prmt.b32 %r5722, %r5723, %r5724, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r5722;
	ld.local.v2.u32 	{%r5872, %r5873}, [%rd7+8];
	// inline asm
	prmt.b32 %r5726, %r5873, %r5872, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r5726;
	ld.local.u32 	%r5731, [%rd7+8];
	ld.local.u32 	%r5732, [%rd7+4];
	// inline asm
	prmt.b32 %r5730, %r5731, %r5732, %r7;
	// inline asm
	st.local.u32 	[%rd8+4], %r5730;
	ld.local.v2.u32 	{%r5874, %r5875}, [%rd7];
	// inline asm
	prmt.b32 %r5734, %r5875, %r5874, %r7;
	// inline asm
	st.local.u32 	[%rd8], %r5734;
	ld.local.u32 	%r5739, [%rd7];
	ld.local.u32 	%r5740, [%rd6+12];
	// inline asm
	prmt.b32 %r5738, %r5739, %r5740, %r7;
	// inline asm
	st.local.u32 	[%rd7+12], %r5738;
	ld.local.v2.u32 	{%r5876, %r5877}, [%rd6+8];
	// inline asm
	prmt.b32 %r5742, %r5877, %r5876, %r7;
	// inline asm
	st.local.u32 	[%rd7+8], %r5742;
	ld.local.u32 	%r5747, [%rd6+8];
	ld.local.u32 	%r5748, [%rd6+4];
	// inline asm
	prmt.b32 %r5746, %r5747, %r5748, %r7;
	// inline asm
	st.local.u32 	[%rd7+4], %r5746;
	ld.local.v2.u32 	{%r5878, %r5879}, [%rd6];
	// inline asm
	prmt.b32 %r5750, %r5879, %r5878, %r7;
	// inline asm
	st.local.u32 	[%rd7], %r5750;
	ld.local.u32 	%r5755, [%rd6];
	ld.local.u32 	%r5756, [%rd5+12];
	// inline asm
	prmt.b32 %r5754, %r5755, %r5756, %r7;
	// inline asm
	st.local.u32 	[%rd6+12], %r5754;
	ld.local.v2.u32 	{%r5880, %r5881}, [%rd5+8];
	// inline asm
	prmt.b32 %r5758, %r5881, %r5880, %r7;
	// inline asm
	st.local.u32 	[%rd6+8], %r5758;
	ld.local.u32 	%r5763, [%rd5+8];
	ld.local.u32 	%r5764, [%rd5+4];
	// inline asm
	prmt.b32 %r5762, %r5763, %r5764, %r7;
	// inline asm
	st.local.u32 	[%rd6+4], %r5762;
	ld.local.v2.u32 	{%r5882, %r5883}, [%rd5];
	// inline asm
	prmt.b32 %r5766, %r5883, %r5882, %r7;
	// inline asm
	st.local.u32 	[%rd6], %r5766;
	ld.local.u32 	%r5771, [%rd5];
	ld.local.u32 	%r5772, [%rd4+12];
	// inline asm
	prmt.b32 %r5770, %r5771, %r5772, %r7;
	// inline asm
	st.local.u32 	[%rd5+12], %r5770;
	ld.local.v2.u32 	{%r5884, %r5885}, [%rd4+8];
	// inline asm
	prmt.b32 %r5774, %r5885, %r5884, %r7;
	// inline asm
	st.local.u32 	[%rd5+8], %r5774;
	ld.local.u32 	%r5779, [%rd4+8];
	ld.local.u32 	%r5780, [%rd4+4];
	// inline asm
	prmt.b32 %r5778, %r5779, %r5780, %r7;
	// inline asm
	st.local.u32 	[%rd5+4], %r5778;
	ld.local.v2.u32 	{%r5886, %r5887}, [%rd4];
	// inline asm
	prmt.b32 %r5782, %r5887, %r5886, %r7;
	// inline asm
	st.local.u32 	[%rd5], %r5782;
	ld.local.u32 	%r5787, [%rd4];
	ld.local.u32 	%r5788, [%rd3+12];
	// inline asm
	prmt.b32 %r5786, %r5787, %r5788, %r7;
	// inline asm
	st.local.u32 	[%rd4+12], %r5786;
	ld.local.v2.u32 	{%r5888, %r5889}, [%rd3+8];
	// inline asm
	prmt.b32 %r5790, %r5889, %r5888, %r7;
	// inline asm
	st.local.u32 	[%rd4+8], %r5790;
	ld.local.u32 	%r5795, [%rd3+8];
	ld.local.u32 	%r5796, [%rd3+4];
	// inline asm
	prmt.b32 %r5794, %r5795, %r5796, %r7;
	// inline asm
	st.local.u32 	[%rd4+4], %r5794;
	ld.local.v2.u32 	{%r5890, %r5891}, [%rd3];
	// inline asm
	prmt.b32 %r5798, %r5891, %r5890, %r7;
	// inline asm
	st.local.u32 	[%rd4], %r5798;
	ld.local.u32 	%r5803, [%rd3];
	ld.local.u32 	%r5804, [%rd2+12];
	// inline asm
	prmt.b32 %r5802, %r5803, %r5804, %r7;
	// inline asm
	st.local.u32 	[%rd3+12], %r5802;
	ld.local.v2.u32 	{%r5892, %r5893}, [%rd2+8];
	// inline asm
	prmt.b32 %r5806, %r5893, %r5892, %r7;
	// inline asm
	st.local.u32 	[%rd3+8], %r5806;
	ld.local.u32 	%r5811, [%rd2+8];
	ld.local.u32 	%r5812, [%rd2+4];
	// inline asm
	prmt.b32 %r5810, %r5811, %r5812, %r7;
	// inline asm
	st.local.u32 	[%rd3+4], %r5810;
	ld.local.v2.u32 	{%r5894, %r5895}, [%rd2];
	// inline asm
	prmt.b32 %r5814, %r5895, %r5894, %r7;
	// inline asm
	st.local.u32 	[%rd3], %r5814;
	ld.local.u32 	%r5819, [%rd2];
	ld.local.u32 	%r5820, [%rd1+12];
	// inline asm
	prmt.b32 %r5818, %r5819, %r5820, %r7;
	// inline asm
	st.local.u32 	[%rd2+12], %r5818;
	ld.local.v2.u32 	{%r5896, %r5897}, [%rd1+8];
	// inline asm
	prmt.b32 %r5822, %r5897, %r5896, %r7;
	// inline asm
	st.local.u32 	[%rd2+8], %r5822;
	ld.local.u32 	%r5827, [%rd1+8];
	ld.local.u32 	%r5828, [%rd1+4];
	// inline asm
	prmt.b32 %r5826, %r5827, %r5828, %r7;
	// inline asm
	st.local.u32 	[%rd2+4], %r5826;
	ld.local.v2.u32 	{%r5898, %r5899}, [%rd1];
	// inline asm
	prmt.b32 %r5830, %r5899, %r5898, %r7;
	// inline asm
	st.local.u32 	[%rd2], %r5830;
	ld.local.u32 	%r5835, [%rd1];
	// inline asm
	prmt.b32 %r5834, %r5835, %r7360, %r7;
	// inline asm
	st.local.v2.u32 	[%rd1+8], {%r7360, %r5834};
	mov.u64 	%rd216, 0;
	st.local.u64 	[%rd1], %rd216;
	mov.u32 	%r7361, %r7360;

BB3_13:
	mov.u32 	%r7366, %r7360;
	mov.u32 	%r7367, %r7360;
	mov.u32 	%r7368, %r7360;
	mov.u32 	%r7369, %r7360;
	bra.uni 	BB3_81;

BB3_43:
	setp.eq.s32	%p23, %r673, 19;
	mov.u32 	%r7363, %r7362;
	mov.u32 	%r7364, %r7362;
	mov.u32 	%r7365, %r7362;
	mov.u32 	%r7366, %r7362;
	mov.u32 	%r7367, %r7362;
	mov.u32 	%r7368, %r7362;
	mov.u32 	%r7369, %r7362;
	mov.u32 	%r7370, %r7362;
	mov.u32 	%r7371, %r7362;
	mov.u32 	%r7372, %r7362;
	mov.u32 	%r7373, %r7362;
	mov.u32 	%r7374, %r7362;
	mov.u32 	%r7375, %r7362;
	mov.u32 	%r7376, %r7362;
	mov.u32 	%r7377, %r7362;
	mov.u32 	%r7378, %r7362;
	mov.u32 	%r7379, %r7362;
	mov.u32 	%r7380, %r7362;
	mov.u32 	%r7381, %r7362;
	mov.u32 	%r7382, %r7362;
	mov.u32 	%r7383, %r7362;
	mov.u32 	%r7384, %r7362;
	mov.u32 	%r7385, %r7362;
	mov.u32 	%r7386, %r7362;
	mov.u32 	%r7387, %r7362;
	mov.u32 	%r7388, %r7362;
	mov.u32 	%r7389, %r7362;
	mov.u32 	%r7390, %r7362;
	mov.u32 	%r7391, %r7362;
	mov.u32 	%r7392, %r7362;
	mov.u32 	%r7393, %r7362;
	@%p23 bra 	BB3_44;
	bra.uni 	BB3_89;

BB3_44:
	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7378, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2884, %r2885}, [%rd8+8];
	// inline asm
	prmt.b32 %r7379, %r2885, %r2884, %r7;
	// inline asm
	ld.local.u32 	%r2747, [%rd8+8];
	ld.local.u32 	%r2748, [%rd8+4];
	// inline asm
	prmt.b32 %r7380, %r2747, %r2748, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2886, %r2887}, [%rd8];
	// inline asm
	prmt.b32 %r7381, %r2887, %r2886, %r7;
	// inline asm
	ld.local.u32 	%r2755, [%rd8];
	ld.local.u32 	%r2756, [%rd7+12];
	// inline asm
	prmt.b32 %r7374, %r2755, %r2756, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2888, %r2889}, [%rd7+8];
	// inline asm
	prmt.b32 %r7375, %r2889, %r2888, %r7;
	// inline asm
	ld.local.u32 	%r2763, [%rd7+8];
	ld.local.u32 	%r2764, [%rd7+4];
	// inline asm
	prmt.b32 %r7376, %r2763, %r2764, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2890, %r2891}, [%rd7];
	// inline asm
	prmt.b32 %r7377, %r2891, %r2890, %r7;
	// inline asm
	ld.local.u32 	%r2771, [%rd7];
	ld.local.u32 	%r2772, [%rd6+12];
	// inline asm
	prmt.b32 %r7370, %r2771, %r2772, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2892, %r2893}, [%rd6+8];
	// inline asm
	prmt.b32 %r7371, %r2893, %r2892, %r7;
	// inline asm
	ld.local.u32 	%r2779, [%rd6+8];
	ld.local.u32 	%r2780, [%rd6+4];
	// inline asm
	prmt.b32 %r7372, %r2779, %r2780, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2894, %r2895}, [%rd6];
	// inline asm
	prmt.b32 %r7373, %r2895, %r2894, %r7;
	// inline asm
	ld.local.u32 	%r2787, [%rd6];
	ld.local.u32 	%r2788, [%rd5+12];
	// inline asm
	prmt.b32 %r7366, %r2787, %r2788, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2896, %r2897}, [%rd5+8];
	// inline asm
	prmt.b32 %r7367, %r2897, %r2896, %r7;
	// inline asm
	ld.local.u32 	%r2795, [%rd5+8];
	ld.local.u32 	%r2796, [%rd5+4];
	// inline asm
	prmt.b32 %r7368, %r2795, %r2796, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2898, %r2899}, [%rd5];
	// inline asm
	prmt.b32 %r7369, %r2899, %r2898, %r7;
	// inline asm
	ld.local.u32 	%r2803, [%rd5];
	ld.local.u32 	%r2804, [%rd4+12];
	// inline asm
	prmt.b32 %r7362, %r2803, %r2804, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2900, %r2901}, [%rd4+8];
	// inline asm
	prmt.b32 %r7363, %r2901, %r2900, %r7;
	// inline asm
	ld.local.u32 	%r2811, [%rd4+8];
	ld.local.u32 	%r2812, [%rd4+4];
	// inline asm
	prmt.b32 %r7364, %r2811, %r2812, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2902, %r2903}, [%rd4];
	// inline asm
	prmt.b32 %r7365, %r2903, %r2902, %r7;
	// inline asm
	ld.local.u32 	%r2819, [%rd4];
	ld.local.u32 	%r2820, [%rd3+12];
	// inline asm
	prmt.b32 %r2818, %r2819, %r2820, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r2818;
	ld.local.v2.u32 	{%r2904, %r2905}, [%rd3+8];
	// inline asm
	prmt.b32 %r2822, %r2905, %r2904, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r2822;
	ld.local.u32 	%r2827, [%rd3+8];
	ld.local.u32 	%r2828, [%rd3+4];
	// inline asm
	prmt.b32 %r2826, %r2827, %r2828, %r7;
	// inline asm
	st.local.u32 	[%rd8+4], %r2826;
	ld.local.v2.u32 	{%r2906, %r2907}, [%rd3];
	// inline asm
	prmt.b32 %r2830, %r2907, %r2906, %r7;
	// inline asm
	st.local.u32 	[%rd8], %r2830;
	ld.local.u32 	%r2835, [%rd3];
	ld.local.u32 	%r2836, [%rd2+12];
	// inline asm
	prmt.b32 %r2834, %r2835, %r2836, %r7;
	// inline asm
	st.local.u32 	[%rd7+12], %r2834;
	ld.local.v2.u32 	{%r2908, %r2909}, [%rd2+8];
	// inline asm
	prmt.b32 %r2838, %r2909, %r2908, %r7;
	// inline asm
	st.local.u32 	[%rd7+8], %r2838;
	ld.local.u32 	%r2843, [%rd2+8];
	ld.local.u32 	%r2844, [%rd2+4];
	// inline asm
	prmt.b32 %r2842, %r2843, %r2844, %r7;
	// inline asm
	st.local.u32 	[%rd7+4], %r2842;
	ld.local.v2.u32 	{%r2910, %r2911}, [%rd2];
	// inline asm
	prmt.b32 %r2846, %r2911, %r2910, %r7;
	// inline asm
	st.local.u32 	[%rd7], %r2846;
	ld.local.u32 	%r2851, [%rd2];
	ld.local.u32 	%r2852, [%rd1+12];
	// inline asm
	prmt.b32 %r2850, %r2851, %r2852, %r7;
	// inline asm
	st.local.u32 	[%rd6+12], %r2850;
	ld.local.v2.u32 	{%r2912, %r2913}, [%rd1+8];
	// inline asm
	prmt.b32 %r2854, %r2913, %r2912, %r7;
	// inline asm
	st.local.u32 	[%rd6+8], %r2854;
	ld.local.u32 	%r2859, [%rd1+8];
	ld.local.u32 	%r2860, [%rd1+4];
	// inline asm
	prmt.b32 %r2858, %r2859, %r2860, %r7;
	// inline asm
	st.local.u32 	[%rd6+4], %r2858;
	ld.local.v2.u32 	{%r2914, %r2915}, [%rd1];
	// inline asm
	prmt.b32 %r2862, %r2915, %r2914, %r7;
	// inline asm
	st.local.u32 	[%rd6], %r2862;
	ld.local.u32 	%r2867, [%rd1];
	// inline asm
	prmt.b32 %r2866, %r2867, %r7360, %r7;
	// inline asm
	st.local.v4.u32 	[%rd5], {%r7360, %r7360, %r7360, %r2866};
	st.local.v4.u32 	[%rd4], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd3], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd2], {%r7360, %r7360, %r7360, %r7360};
	st.local.v2.u32 	[%rd1+8], {%r7360, %r7360};
	mov.u64 	%rd200, 0;
	st.local.u64 	[%rd1], %rd200;
	mov.u32 	%r7361, %r7360;
	bra.uni 	BB3_84;

BB3_27:
	setp.eq.s32	%p35, %r673, 11;
	mov.u32 	%r7363, %r7362;
	mov.u32 	%r7364, %r7362;
	mov.u32 	%r7365, %r7362;
	mov.u32 	%r7366, %r7362;
	mov.u32 	%r7367, %r7362;
	mov.u32 	%r7368, %r7362;
	mov.u32 	%r7369, %r7362;
	mov.u32 	%r7370, %r7362;
	mov.u32 	%r7371, %r7362;
	mov.u32 	%r7372, %r7362;
	mov.u32 	%r7373, %r7362;
	mov.u32 	%r7374, %r7362;
	mov.u32 	%r7375, %r7362;
	mov.u32 	%r7376, %r7362;
	mov.u32 	%r7377, %r7362;
	mov.u32 	%r7378, %r7362;
	mov.u32 	%r7379, %r7362;
	mov.u32 	%r7380, %r7362;
	mov.u32 	%r7381, %r7362;
	mov.u32 	%r7382, %r7362;
	mov.u32 	%r7383, %r7362;
	mov.u32 	%r7384, %r7362;
	mov.u32 	%r7385, %r7362;
	mov.u32 	%r7386, %r7362;
	mov.u32 	%r7387, %r7362;
	mov.u32 	%r7388, %r7362;
	mov.u32 	%r7389, %r7362;
	mov.u32 	%r7390, %r7362;
	mov.u32 	%r7391, %r7362;
	mov.u32 	%r7392, %r7362;
	mov.u32 	%r7393, %r7362;
	@%p35 bra 	BB3_28;
	bra.uni 	BB3_89;

BB3_28:
	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7370, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r4344, %r4345}, [%rd8+8];
	// inline asm
	prmt.b32 %r7371, %r4345, %r4344, %r7;
	// inline asm
	ld.local.u32 	%r4199, [%rd8+8];
	ld.local.u32 	%r4200, [%rd8+4];
	// inline asm
	prmt.b32 %r7372, %r4199, %r4200, %r7;
	// inline asm
	ld.local.v2.u32 	{%r4346, %r4347}, [%rd8];
	// inline asm
	prmt.b32 %r7373, %r4347, %r4346, %r7;
	// inline asm
	ld.local.u32 	%r4207, [%rd8];
	ld.local.u32 	%r4208, [%rd7+12];
	// inline asm
	prmt.b32 %r7366, %r4207, %r4208, %r7;
	// inline asm
	ld.local.v2.u32 	{%r4348, %r4349}, [%rd7+8];
	// inline asm
	prmt.b32 %r7367, %r4349, %r4348, %r7;
	// inline asm
	ld.local.u32 	%r4215, [%rd7+8];
	ld.local.u32 	%r4216, [%rd7+4];
	// inline asm
	prmt.b32 %r7368, %r4215, %r4216, %r7;
	// inline asm
	ld.local.v2.u32 	{%r4350, %r4351}, [%rd7];
	// inline asm
	prmt.b32 %r7369, %r4351, %r4350, %r7;
	// inline asm
	ld.local.u32 	%r4223, [%rd7];
	ld.local.u32 	%r4224, [%rd6+12];
	// inline asm
	prmt.b32 %r7362, %r4223, %r4224, %r7;
	// inline asm
	ld.local.v2.u32 	{%r4352, %r4353}, [%rd6+8];
	// inline asm
	prmt.b32 %r7363, %r4353, %r4352, %r7;
	// inline asm
	ld.local.u32 	%r4231, [%rd6+8];
	ld.local.u32 	%r4232, [%rd6+4];
	// inline asm
	prmt.b32 %r7364, %r4231, %r4232, %r7;
	// inline asm
	ld.local.v2.u32 	{%r4354, %r4355}, [%rd6];
	// inline asm
	prmt.b32 %r7365, %r4355, %r4354, %r7;
	// inline asm
	ld.local.u32 	%r4239, [%rd6];
	ld.local.u32 	%r4240, [%rd5+12];
	// inline asm
	prmt.b32 %r4238, %r4239, %r4240, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r4238;
	ld.local.v2.u32 	{%r4356, %r4357}, [%rd5+8];
	// inline asm
	prmt.b32 %r4242, %r4357, %r4356, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r4242;
	ld.local.u32 	%r4247, [%rd5+8];
	ld.local.u32 	%r4248, [%rd5+4];
	// inline asm
	prmt.b32 %r4246, %r4247, %r4248, %r7;
	// inline asm
	st.local.u32 	[%rd8+4], %r4246;
	ld.local.v2.u32 	{%r4358, %r4359}, [%rd5];
	// inline asm
	prmt.b32 %r4250, %r4359, %r4358, %r7;
	// inline asm
	st.local.u32 	[%rd8], %r4250;
	ld.local.u32 	%r4255, [%rd5];
	ld.local.u32 	%r4256, [%rd4+12];
	// inline asm
	prmt.b32 %r4254, %r4255, %r4256, %r7;
	// inline asm
	st.local.u32 	[%rd7+12], %r4254;
	ld.local.v2.u32 	{%r4360, %r4361}, [%rd4+8];
	// inline asm
	prmt.b32 %r4258, %r4361, %r4360, %r7;
	// inline asm
	st.local.u32 	[%rd7+8], %r4258;
	ld.local.u32 	%r4263, [%rd4+8];
	ld.local.u32 	%r4264, [%rd4+4];
	// inline asm
	prmt.b32 %r4262, %r4263, %r4264, %r7;
	// inline asm
	st.local.u32 	[%rd7+4], %r4262;
	ld.local.v2.u32 	{%r4362, %r4363}, [%rd4];
	// inline asm
	prmt.b32 %r4266, %r4363, %r4362, %r7;
	// inline asm
	st.local.u32 	[%rd7], %r4266;
	ld.local.u32 	%r4271, [%rd4];
	ld.local.u32 	%r4272, [%rd3+12];
	// inline asm
	prmt.b32 %r4270, %r4271, %r4272, %r7;
	// inline asm
	st.local.u32 	[%rd6+12], %r4270;
	ld.local.v2.u32 	{%r4364, %r4365}, [%rd3+8];
	// inline asm
	prmt.b32 %r4274, %r4365, %r4364, %r7;
	// inline asm
	st.local.u32 	[%rd6+8], %r4274;
	ld.local.u32 	%r4279, [%rd3+8];
	ld.local.u32 	%r4280, [%rd3+4];
	// inline asm
	prmt.b32 %r4278, %r4279, %r4280, %r7;
	// inline asm
	st.local.u32 	[%rd6+4], %r4278;
	ld.local.v2.u32 	{%r4366, %r4367}, [%rd3];
	// inline asm
	prmt.b32 %r4282, %r4367, %r4366, %r7;
	// inline asm
	st.local.u32 	[%rd6], %r4282;
	ld.local.u32 	%r4287, [%rd3];
	ld.local.u32 	%r4288, [%rd2+12];
	// inline asm
	prmt.b32 %r4286, %r4287, %r4288, %r7;
	// inline asm
	st.local.u32 	[%rd5+12], %r4286;
	ld.local.v2.u32 	{%r4368, %r4369}, [%rd2+8];
	// inline asm
	prmt.b32 %r4290, %r4369, %r4368, %r7;
	// inline asm
	st.local.u32 	[%rd5+8], %r4290;
	ld.local.u32 	%r4295, [%rd2+8];
	ld.local.u32 	%r4296, [%rd2+4];
	// inline asm
	prmt.b32 %r4294, %r4295, %r4296, %r7;
	// inline asm
	st.local.u32 	[%rd5+4], %r4294;
	ld.local.v2.u32 	{%r4370, %r4371}, [%rd2];
	// inline asm
	prmt.b32 %r4298, %r4371, %r4370, %r7;
	// inline asm
	st.local.u32 	[%rd5], %r4298;
	ld.local.u32 	%r4303, [%rd2];
	ld.local.u32 	%r4304, [%rd1+12];
	// inline asm
	prmt.b32 %r4302, %r4303, %r4304, %r7;
	// inline asm
	st.local.u32 	[%rd4+12], %r4302;
	ld.local.v2.u32 	{%r4372, %r4373}, [%rd1+8];
	// inline asm
	prmt.b32 %r4306, %r4373, %r4372, %r7;
	// inline asm
	st.local.u32 	[%rd4+8], %r4306;
	ld.local.u32 	%r4311, [%rd1+8];
	ld.local.u32 	%r4312, [%rd1+4];
	// inline asm
	prmt.b32 %r4310, %r4311, %r4312, %r7;
	// inline asm
	st.local.u32 	[%rd4+4], %r4310;
	ld.local.v2.u32 	{%r4374, %r4375}, [%rd1];
	// inline asm
	prmt.b32 %r4314, %r4375, %r4374, %r7;
	// inline asm
	st.local.u32 	[%rd4], %r4314;
	ld.local.u32 	%r4319, [%rd1];
	// inline asm
	prmt.b32 %r4318, %r4319, %r7360, %r7;
	// inline asm
	st.local.v4.u32 	[%rd3], {%r7360, %r7360, %r7360, %r4318};
	st.local.v4.u32 	[%rd2], {%r7360, %r7360, %r7360, %r7360};
	st.local.v2.u32 	[%rd1+8], {%r7360, %r7360};
	mov.u64 	%rd208, 0;
	st.local.u64 	[%rd1], %rd208;
	mov.u32 	%r7361, %r7360;
	bra.uni 	BB3_82;

BB3_58:
	setp.eq.s32	%p12, %r673, 27;
	mov.u32 	%r7363, %r7362;
	mov.u32 	%r7364, %r7362;
	mov.u32 	%r7365, %r7362;
	mov.u32 	%r7366, %r7362;
	mov.u32 	%r7367, %r7362;
	mov.u32 	%r7368, %r7362;
	mov.u32 	%r7369, %r7362;
	mov.u32 	%r7370, %r7362;
	mov.u32 	%r7371, %r7362;
	mov.u32 	%r7372, %r7362;
	mov.u32 	%r7373, %r7362;
	mov.u32 	%r7374, %r7362;
	mov.u32 	%r7375, %r7362;
	mov.u32 	%r7376, %r7362;
	mov.u32 	%r7377, %r7362;
	mov.u32 	%r7378, %r7362;
	mov.u32 	%r7379, %r7362;
	mov.u32 	%r7380, %r7362;
	mov.u32 	%r7381, %r7362;
	mov.u32 	%r7382, %r7362;
	mov.u32 	%r7383, %r7362;
	mov.u32 	%r7384, %r7362;
	mov.u32 	%r7385, %r7362;
	mov.u32 	%r7386, %r7362;
	mov.u32 	%r7387, %r7362;
	mov.u32 	%r7388, %r7362;
	mov.u32 	%r7389, %r7362;
	mov.u32 	%r7390, %r7362;
	mov.u32 	%r7391, %r7362;
	mov.u32 	%r7392, %r7362;
	mov.u32 	%r7393, %r7362;
	@%p12 bra 	BB3_59;
	bra.uni 	BB3_89;

BB3_59:
	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7386, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1488, %r1489}, [%rd8+8];
	// inline asm
	prmt.b32 %r7387, %r1489, %r1488, %r7;
	// inline asm
	ld.local.u32 	%r1359, [%rd8+8];
	ld.local.u32 	%r1360, [%rd8+4];
	// inline asm
	prmt.b32 %r7388, %r1359, %r1360, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1490, %r1491}, [%rd8];
	// inline asm
	prmt.b32 %r7389, %r1491, %r1490, %r7;
	// inline asm
	ld.local.u32 	%r1367, [%rd8];
	ld.local.u32 	%r1368, [%rd7+12];
	// inline asm
	prmt.b32 %r7382, %r1367, %r1368, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1492, %r1493}, [%rd7+8];
	// inline asm
	prmt.b32 %r7383, %r1493, %r1492, %r7;
	// inline asm
	ld.local.u32 	%r1375, [%rd7+8];
	ld.local.u32 	%r1376, [%rd7+4];
	// inline asm
	prmt.b32 %r7384, %r1375, %r1376, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1494, %r1495}, [%rd7];
	// inline asm
	prmt.b32 %r7385, %r1495, %r1494, %r7;
	// inline asm
	ld.local.u32 	%r1383, [%rd7];
	ld.local.u32 	%r1384, [%rd6+12];
	// inline asm
	prmt.b32 %r7378, %r1383, %r1384, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1496, %r1497}, [%rd6+8];
	// inline asm
	prmt.b32 %r7379, %r1497, %r1496, %r7;
	// inline asm
	ld.local.u32 	%r1391, [%rd6+8];
	ld.local.u32 	%r1392, [%rd6+4];
	// inline asm
	prmt.b32 %r7380, %r1391, %r1392, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1498, %r1499}, [%rd6];
	// inline asm
	prmt.b32 %r7381, %r1499, %r1498, %r7;
	// inline asm
	ld.local.u32 	%r1399, [%rd6];
	ld.local.u32 	%r1400, [%rd5+12];
	// inline asm
	prmt.b32 %r7374, %r1399, %r1400, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1500, %r1501}, [%rd5+8];
	// inline asm
	prmt.b32 %r7375, %r1501, %r1500, %r7;
	// inline asm
	ld.local.u32 	%r1407, [%rd5+8];
	ld.local.u32 	%r1408, [%rd5+4];
	// inline asm
	prmt.b32 %r7376, %r1407, %r1408, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1502, %r1503}, [%rd5];
	// inline asm
	prmt.b32 %r7377, %r1503, %r1502, %r7;
	// inline asm
	ld.local.u32 	%r1415, [%rd5];
	ld.local.u32 	%r1416, [%rd4+12];
	// inline asm
	prmt.b32 %r7370, %r1415, %r1416, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1504, %r1505}, [%rd4+8];
	// inline asm
	prmt.b32 %r7371, %r1505, %r1504, %r7;
	// inline asm
	ld.local.u32 	%r1423, [%rd4+8];
	ld.local.u32 	%r1424, [%rd4+4];
	// inline asm
	prmt.b32 %r7372, %r1423, %r1424, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1506, %r1507}, [%rd4];
	// inline asm
	prmt.b32 %r7373, %r1507, %r1506, %r7;
	// inline asm
	ld.local.u32 	%r1431, [%rd4];
	ld.local.u32 	%r1432, [%rd3+12];
	// inline asm
	prmt.b32 %r7366, %r1431, %r1432, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1508, %r1509}, [%rd3+8];
	// inline asm
	prmt.b32 %r7367, %r1509, %r1508, %r7;
	// inline asm
	ld.local.u32 	%r1439, [%rd3+8];
	ld.local.u32 	%r1440, [%rd3+4];
	// inline asm
	prmt.b32 %r7368, %r1439, %r1440, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1510, %r1511}, [%rd3];
	// inline asm
	prmt.b32 %r7369, %r1511, %r1510, %r7;
	// inline asm
	ld.local.u32 	%r1447, [%rd3];
	ld.local.u32 	%r1448, [%rd2+12];
	// inline asm
	prmt.b32 %r7362, %r1447, %r1448, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1512, %r1513}, [%rd2+8];
	// inline asm
	prmt.b32 %r7363, %r1513, %r1512, %r7;
	// inline asm
	ld.local.u32 	%r1455, [%rd2+8];
	ld.local.u32 	%r1456, [%rd2+4];
	// inline asm
	prmt.b32 %r7364, %r1455, %r1456, %r7;
	// inline asm
	ld.local.v2.u32 	{%r1514, %r1515}, [%rd2];
	// inline asm
	prmt.b32 %r7365, %r1515, %r1514, %r7;
	// inline asm
	ld.local.u32 	%r1463, [%rd2];
	ld.local.u32 	%r1464, [%rd1+12];
	// inline asm
	prmt.b32 %r1462, %r1463, %r1464, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r1462;
	ld.local.v2.u32 	{%r1516, %r1517}, [%rd1+8];
	// inline asm
	prmt.b32 %r1466, %r1517, %r1516, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r1466;
	ld.local.u32 	%r1471, [%rd1+8];
	ld.local.u32 	%r1472, [%rd1+4];
	// inline asm
	prmt.b32 %r1470, %r1471, %r1472, %r7;
	// inline asm
	st.local.u32 	[%rd8+4], %r1470;
	ld.local.v2.u32 	{%r1518, %r1519}, [%rd1];
	// inline asm
	prmt.b32 %r1474, %r1519, %r1518, %r7;
	// inline asm
	st.local.u32 	[%rd8], %r1474;
	ld.local.u32 	%r1479, [%rd1];
	// inline asm
	prmt.b32 %r1478, %r1479, %r7360, %r7;
	// inline asm
	st.local.v4.u32 	[%rd7], {%r7360, %r7360, %r7360, %r1478};
	st.local.v4.u32 	[%rd6], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd5], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd4], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd3], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd2], {%r7360, %r7360, %r7360, %r7360};
	st.local.v2.u32 	[%rd1+8], {%r7360, %r7360};
	mov.u64 	%rd192, 0;
	st.local.u64 	[%rd1], %rd192;
	mov.u32 	%r7361, %r7360;
	bra.uni 	BB3_86;

BB3_19:
	setp.eq.s32	%p41, %r673, 7;
	mov.u32 	%r7363, %r7362;
	mov.u32 	%r7364, %r7362;
	mov.u32 	%r7365, %r7362;
	mov.u32 	%r7366, %r7362;
	mov.u32 	%r7367, %r7362;
	mov.u32 	%r7368, %r7362;
	mov.u32 	%r7369, %r7362;
	mov.u32 	%r7370, %r7362;
	mov.u32 	%r7371, %r7362;
	mov.u32 	%r7372, %r7362;
	mov.u32 	%r7373, %r7362;
	mov.u32 	%r7374, %r7362;
	mov.u32 	%r7375, %r7362;
	mov.u32 	%r7376, %r7362;
	mov.u32 	%r7377, %r7362;
	mov.u32 	%r7378, %r7362;
	mov.u32 	%r7379, %r7362;
	mov.u32 	%r7380, %r7362;
	mov.u32 	%r7381, %r7362;
	mov.u32 	%r7382, %r7362;
	mov.u32 	%r7383, %r7362;
	mov.u32 	%r7384, %r7362;
	mov.u32 	%r7385, %r7362;
	mov.u32 	%r7386, %r7362;
	mov.u32 	%r7387, %r7362;
	mov.u32 	%r7388, %r7362;
	mov.u32 	%r7389, %r7362;
	mov.u32 	%r7390, %r7362;
	mov.u32 	%r7391, %r7362;
	mov.u32 	%r7392, %r7362;
	mov.u32 	%r7393, %r7362;
	@%p41 bra 	BB3_20;
	bra.uni 	BB3_89;

BB3_20:
	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7366, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r5098, %r5099}, [%rd8+8];
	// inline asm
	prmt.b32 %r7367, %r5099, %r5098, %r7;
	// inline asm
	ld.local.u32 	%r4949, [%rd8+8];
	ld.local.u32 	%r4950, [%rd8+4];
	// inline asm
	prmt.b32 %r7368, %r4949, %r4950, %r7;
	// inline asm
	ld.local.v2.u32 	{%r5100, %r5101}, [%rd8];
	// inline asm
	prmt.b32 %r7369, %r5101, %r5100, %r7;
	// inline asm
	ld.local.u32 	%r4957, [%rd8];
	ld.local.u32 	%r4958, [%rd7+12];
	// inline asm
	prmt.b32 %r7362, %r4957, %r4958, %r7;
	// inline asm
	ld.local.v2.u32 	{%r5102, %r5103}, [%rd7+8];
	// inline asm
	prmt.b32 %r7363, %r5103, %r5102, %r7;
	// inline asm
	ld.local.u32 	%r4965, [%rd7+8];
	ld.local.u32 	%r4966, [%rd7+4];
	// inline asm
	prmt.b32 %r7364, %r4965, %r4966, %r7;
	// inline asm
	ld.local.v2.u32 	{%r5104, %r5105}, [%rd7];
	// inline asm
	prmt.b32 %r7365, %r5105, %r5104, %r7;
	// inline asm
	ld.local.u32 	%r4973, [%rd7];
	ld.local.u32 	%r4974, [%rd6+12];
	// inline asm
	prmt.b32 %r4972, %r4973, %r4974, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r4972;
	ld.local.v2.u32 	{%r5106, %r5107}, [%rd6+8];
	// inline asm
	prmt.b32 %r4976, %r5107, %r5106, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r4976;
	ld.local.u32 	%r4981, [%rd6+8];
	ld.local.u32 	%r4982, [%rd6+4];
	// inline asm
	prmt.b32 %r4980, %r4981, %r4982, %r7;
	// inline asm
	st.local.u32 	[%rd8+4], %r4980;
	ld.local.v2.u32 	{%r5108, %r5109}, [%rd6];
	// inline asm
	prmt.b32 %r4984, %r5109, %r5108, %r7;
	// inline asm
	st.local.u32 	[%rd8], %r4984;
	ld.local.u32 	%r4989, [%rd6];
	ld.local.u32 	%r4990, [%rd5+12];
	// inline asm
	prmt.b32 %r4988, %r4989, %r4990, %r7;
	// inline asm
	st.local.u32 	[%rd7+12], %r4988;
	ld.local.v2.u32 	{%r5110, %r5111}, [%rd5+8];
	// inline asm
	prmt.b32 %r4992, %r5111, %r5110, %r7;
	// inline asm
	st.local.u32 	[%rd7+8], %r4992;
	ld.local.u32 	%r4997, [%rd5+8];
	ld.local.u32 	%r4998, [%rd5+4];
	// inline asm
	prmt.b32 %r4996, %r4997, %r4998, %r7;
	// inline asm
	st.local.u32 	[%rd7+4], %r4996;
	ld.local.v2.u32 	{%r5112, %r5113}, [%rd5];
	// inline asm
	prmt.b32 %r5000, %r5113, %r5112, %r7;
	// inline asm
	st.local.u32 	[%rd7], %r5000;
	ld.local.u32 	%r5005, [%rd5];
	ld.local.u32 	%r5006, [%rd4+12];
	// inline asm
	prmt.b32 %r5004, %r5005, %r5006, %r7;
	// inline asm
	st.local.u32 	[%rd6+12], %r5004;
	ld.local.v2.u32 	{%r5114, %r5115}, [%rd4+8];
	// inline asm
	prmt.b32 %r5008, %r5115, %r5114, %r7;
	// inline asm
	st.local.u32 	[%rd6+8], %r5008;
	ld.local.u32 	%r5013, [%rd4+8];
	ld.local.u32 	%r5014, [%rd4+4];
	// inline asm
	prmt.b32 %r5012, %r5013, %r5014, %r7;
	// inline asm
	st.local.u32 	[%rd6+4], %r5012;
	ld.local.v2.u32 	{%r5116, %r5117}, [%rd4];
	// inline asm
	prmt.b32 %r5016, %r5117, %r5116, %r7;
	// inline asm
	st.local.u32 	[%rd6], %r5016;
	ld.local.u32 	%r5021, [%rd4];
	ld.local.u32 	%r5022, [%rd3+12];
	// inline asm
	prmt.b32 %r5020, %r5021, %r5022, %r7;
	// inline asm
	st.local.u32 	[%rd5+12], %r5020;
	ld.local.v2.u32 	{%r5118, %r5119}, [%rd3+8];
	// inline asm
	prmt.b32 %r5024, %r5119, %r5118, %r7;
	// inline asm
	st.local.u32 	[%rd5+8], %r5024;
	ld.local.u32 	%r5029, [%rd3+8];
	ld.local.u32 	%r5030, [%rd3+4];
	// inline asm
	prmt.b32 %r5028, %r5029, %r5030, %r7;
	// inline asm
	st.local.u32 	[%rd5+4], %r5028;
	ld.local.v2.u32 	{%r5120, %r5121}, [%rd3];
	// inline asm
	prmt.b32 %r5032, %r5121, %r5120, %r7;
	// inline asm
	st.local.u32 	[%rd5], %r5032;
	ld.local.u32 	%r5037, [%rd3];
	ld.local.u32 	%r5038, [%rd2+12];
	// inline asm
	prmt.b32 %r5036, %r5037, %r5038, %r7;
	// inline asm
	st.local.u32 	[%rd4+12], %r5036;
	ld.local.v2.u32 	{%r5122, %r5123}, [%rd2+8];
	// inline asm
	prmt.b32 %r5040, %r5123, %r5122, %r7;
	// inline asm
	st.local.u32 	[%rd4+8], %r5040;
	ld.local.u32 	%r5045, [%rd2+8];
	ld.local.u32 	%r5046, [%rd2+4];
	// inline asm
	prmt.b32 %r5044, %r5045, %r5046, %r7;
	// inline asm
	st.local.u32 	[%rd4+4], %r5044;
	ld.local.v2.u32 	{%r5124, %r5125}, [%rd2];
	// inline asm
	prmt.b32 %r5048, %r5125, %r5124, %r7;
	// inline asm
	st.local.u32 	[%rd4], %r5048;
	ld.local.u32 	%r5053, [%rd2];
	ld.local.u32 	%r5054, [%rd1+12];
	// inline asm
	prmt.b32 %r5052, %r5053, %r5054, %r7;
	// inline asm
	st.local.u32 	[%rd3+12], %r5052;
	ld.local.v2.u32 	{%r5126, %r5127}, [%rd1+8];
	// inline asm
	prmt.b32 %r5056, %r5127, %r5126, %r7;
	// inline asm
	st.local.u32 	[%rd3+8], %r5056;
	ld.local.u32 	%r5061, [%rd1+8];
	ld.local.u32 	%r5062, [%rd1+4];
	// inline asm
	prmt.b32 %r5060, %r5061, %r5062, %r7;
	// inline asm
	st.local.u32 	[%rd3+4], %r5060;
	ld.local.v2.u32 	{%r5128, %r5129}, [%rd1];
	// inline asm
	prmt.b32 %r5064, %r5129, %r5128, %r7;
	// inline asm
	st.local.u32 	[%rd3], %r5064;
	ld.local.u32 	%r5069, [%rd1];
	// inline asm
	prmt.b32 %r5068, %r5069, %r7360, %r7;
	// inline asm
	st.local.v4.u32 	[%rd2], {%r7360, %r7360, %r7360, %r5068};
	st.local.v2.u32 	[%rd1+8], {%r7360, %r7360};
	mov.u64 	%rd212, 0;
	st.local.u64 	[%rd1], %rd212;
	mov.u32 	%r7361, %r7360;

BB3_81:
	mov.u32 	%r7370, %r7360;
	mov.u32 	%r7371, %r7360;
	mov.u32 	%r7372, %r7360;
	mov.u32 	%r7373, %r7360;

BB3_82:
	mov.u32 	%r7374, %r7360;
	mov.u32 	%r7375, %r7360;
	mov.u32 	%r7376, %r7360;
	mov.u32 	%r7377, %r7360;

BB3_83:
	mov.u32 	%r7378, %r7360;
	mov.u32 	%r7379, %r7360;
	mov.u32 	%r7380, %r7360;
	mov.u32 	%r7381, %r7360;

BB3_84:
	mov.u32 	%r7382, %r7360;
	mov.u32 	%r7383, %r7360;
	mov.u32 	%r7384, %r7360;
	mov.u32 	%r7385, %r7360;

BB3_85:
	mov.u32 	%r7386, %r7360;
	mov.u32 	%r7387, %r7360;
	mov.u32 	%r7388, %r7360;
	mov.u32 	%r7389, %r7360;

BB3_86:
	mov.u32 	%r7390, %r7360;
	mov.u32 	%r7391, %r7360;
	mov.u32 	%r7392, %r7360;
	mov.u32 	%r7393, %r7360;

BB3_89:
	ld.const.u64 	%rd1243, [k_sha512+120];
	ld.const.u64 	%rd1242, [k_sha512+112];
	ld.const.u64 	%rd1241, [k_sha512+104];
	ld.const.u64 	%rd1240, [k_sha512+96];
	ld.const.u64 	%rd1239, [k_sha512+88];
	ld.const.u64 	%rd1238, [k_sha512+80];
	ld.const.u64 	%rd1237, [k_sha512+72];
	ld.const.u64 	%rd1236, [k_sha512+64];
	ld.const.u64 	%rd1235, [k_sha512+56];
	ld.const.u64 	%rd1234, [k_sha512+48];
	ld.const.u64 	%rd1233, [k_sha512+40];
	ld.const.u64 	%rd1232, [k_sha512+32];
	ld.const.u64 	%rd1231, [k_sha512+24];
	ld.const.u64 	%rd1230, [k_sha512+16];
	ld.const.u64 	%rd1229, [k_sha512+8];
	ld.const.u64 	%rd1228, [k_sha512];
	ld.v2.u32 	{%r6486, %r6487}, [%rd9+-128];
	or.b32  	%r6489, %r6487, %r7360;
	ld.v2.u32 	{%r6491, %r6492}, [%rd9+-120];
	ld.v2.u32 	{%r6493, %r6494}, [%rd9+-112];
	ld.v2.u32 	{%r6495, %r6496}, [%rd9+-104];
	ld.v2.u32 	{%r6497, %r6498}, [%rd9+-96];
	ld.v2.u32 	{%r6499, %r6500}, [%rd9+-88];
	ld.v2.u32 	{%r6501, %r6502}, [%rd9+-80];
	ld.v2.u32 	{%r6503, %r6504}, [%rd9+-72];
	ld.v2.u32 	{%r6505, %r6506}, [%rd9+-64];
	ld.v2.u32 	{%r6507, %r6508}, [%rd9+-56];
	ld.v2.u32 	{%r6509, %r6510}, [%rd9+-48];
	ld.v2.u32 	{%r6511, %r6512}, [%rd9+-40];
	ld.v2.u32 	{%r6513, %r6514}, [%rd9+-32];
	ld.v2.u32 	{%r6515, %r6516}, [%rd9+-24];
	ld.v2.u32 	{%r6517, %r6518}, [%rd9+-16];
	ld.v2.u32 	{%r6519, %r6520}, [%rd9+-8];
	or.b32  	%r6521, %r6486, %r7361;
	st.v2.u32 	[%rd9+-128], {%r6521, %r6489};
	ld.local.v2.u32 	{%r6522, %r6523}, [%rd1+8];
	or.b32  	%r6526, %r6492, %r6523;
	or.b32  	%r6529, %r6491, %r6522;
	st.v2.u32 	[%rd9+-120], {%r6529, %r6526};
	ld.local.v4.u32 	{%r6530, %r6531, %r6532, %r6533}, [%rd2];
	or.b32  	%r6536, %r6494, %r6531;
	or.b32  	%r6539, %r6493, %r6530;
	st.v2.u32 	[%rd9+-112], {%r6539, %r6536};
	or.b32  	%r6542, %r6496, %r6533;
	or.b32  	%r6545, %r6495, %r6532;
	st.v2.u32 	[%rd9+-104], {%r6545, %r6542};
	ld.local.v4.u32 	{%r6546, %r6547, %r6548, %r6549}, [%rd3];
	or.b32  	%r6552, %r6498, %r6547;
	or.b32  	%r6555, %r6497, %r6546;
	st.v2.u32 	[%rd9+-96], {%r6555, %r6552};
	or.b32  	%r6558, %r6500, %r6549;
	or.b32  	%r6561, %r6499, %r6548;
	st.v2.u32 	[%rd9+-88], {%r6561, %r6558};
	ld.local.v4.u32 	{%r6562, %r6563, %r6564, %r6565}, [%rd4];
	or.b32  	%r6568, %r6502, %r6563;
	or.b32  	%r6571, %r6501, %r6562;
	st.v2.u32 	[%rd9+-80], {%r6571, %r6568};
	or.b32  	%r6574, %r6504, %r6565;
	or.b32  	%r6577, %r6503, %r6564;
	st.v2.u32 	[%rd9+-72], {%r6577, %r6574};
	ld.local.v4.u32 	{%r6578, %r6579, %r6580, %r6581}, [%rd5];
	or.b32  	%r6584, %r6506, %r6579;
	or.b32  	%r6587, %r6505, %r6578;
	st.v2.u32 	[%rd9+-64], {%r6587, %r6584};
	or.b32  	%r6590, %r6508, %r6581;
	or.b32  	%r6593, %r6507, %r6580;
	st.v2.u32 	[%rd9+-56], {%r6593, %r6590};
	ld.local.v4.u32 	{%r6594, %r6595, %r6596, %r6597}, [%rd6];
	or.b32  	%r6600, %r6510, %r6595;
	or.b32  	%r6603, %r6509, %r6594;
	st.v2.u32 	[%rd9+-48], {%r6603, %r6600};
	or.b32  	%r6606, %r6512, %r6597;
	or.b32  	%r6609, %r6511, %r6596;
	st.v2.u32 	[%rd9+-40], {%r6609, %r6606};
	ld.local.v4.u32 	{%r6610, %r6611, %r6612, %r6613}, [%rd7];
	or.b32  	%r6616, %r6514, %r6611;
	or.b32  	%r6619, %r6513, %r6610;
	st.v2.u32 	[%rd9+-32], {%r6619, %r6616};
	or.b32  	%r6622, %r6516, %r6613;
	or.b32  	%r6625, %r6515, %r6612;
	st.v2.u32 	[%rd9+-24], {%r6625, %r6622};
	ld.local.v4.u32 	{%r6626, %r6627, %r6628, %r6629}, [%rd8];
	or.b32  	%r6632, %r6518, %r6627;
	or.b32  	%r6635, %r6517, %r6626;
	st.v2.u32 	[%rd9+-16], {%r6635, %r6632};
	or.b32  	%r6638, %r6520, %r6629;
	or.b32  	%r6641, %r6519, %r6628;
	st.v2.u32 	[%rd9+-8], {%r6641, %r6638};
	mov.b64	%rd1260, {%r6489, %r6521};
	mov.b64	%rd1261, {%r6526, %r6529};
	mov.b64	%rd1262, {%r6536, %r6539};
	mov.b64	%rd1263, {%r6542, %r6545};
	mov.b64	%rd1264, {%r6552, %r6555};
	mov.b64	%rd1265, {%r6558, %r6561};
	mov.b64	%rd1266, {%r6568, %r6571};
	mov.b64	%rd1267, {%r6574, %r6577};
	mov.b64	%rd1251, {%r6584, %r6587};
	mov.b64	%rd1250, {%r6590, %r6593};
	mov.b64	%rd1249, {%r6600, %r6603};
	mov.b64	%rd1248, {%r6606, %r6609};
	mov.b64	%rd1247, {%r6616, %r6619};
	mov.b64	%rd1246, {%r6622, %r6625};
	mov.b64	%rd1245, {%r6632, %r6635};
	mov.b64	%rd1244, {%r6638, %r6641};
	ld.u64 	%rd42, [%rd9+-160];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6642,%dummy}, %rd42;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6643}, %rd42;
	}
	shf.r.wrap.b32 	%r6644, %r6643, %r6642, 14;
	shf.r.wrap.b32 	%r6645, %r6642, %r6643, 14;
	mov.b64 	%rd218, {%r6645, %r6644};
	shf.r.wrap.b32 	%r6646, %r6643, %r6642, 18;
	shf.r.wrap.b32 	%r6647, %r6642, %r6643, 18;
	mov.b64 	%rd219, {%r6647, %r6646};
	xor.b64  	%rd220, %rd219, %rd218;
	shf.l.wrap.b32 	%r6648, %r6642, %r6643, 23;
	shf.l.wrap.b32 	%r6649, %r6643, %r6642, 23;
	mov.b64 	%rd221, {%r6649, %r6648};
	xor.b64  	%rd222, %rd220, %rd221;
	ld.u64 	%rd43, [%rd9+-144];
	ld.u64 	%rd44, [%rd9+-152];
	xor.b64  	%rd223, %rd43, %rd44;
	and.b64  	%rd224, %rd223, %rd42;
	xor.b64  	%rd225, %rd224, %rd43;
	ld.u64 	%rd45, [%rd9+-136];
	add.s64 	%rd226, %rd225, %rd45;
	add.s64 	%rd227, %rd226, %rd1260;
	add.s64 	%rd228, %rd227, %rd1228;
	add.s64 	%rd229, %rd228, %rd222;
	ld.u64 	%rd46, [%rd9+-168];
	add.s64 	%rd230, %rd229, %rd46;
	ld.u64 	%rd47, [%rd106];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6650,%dummy}, %rd47;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6651}, %rd47;
	}
	shf.r.wrap.b32 	%r6652, %r6651, %r6650, 28;
	shf.r.wrap.b32 	%r6653, %r6650, %r6651, 28;
	mov.b64 	%rd231, {%r6653, %r6652};
	shf.l.wrap.b32 	%r6654, %r6650, %r6651, 30;
	shf.l.wrap.b32 	%r6655, %r6651, %r6650, 30;
	mov.b64 	%rd232, {%r6655, %r6654};
	xor.b64  	%rd233, %rd232, %rd231;
	shf.l.wrap.b32 	%r6656, %r6650, %r6651, 25;
	shf.l.wrap.b32 	%r6657, %r6651, %r6650, 25;
	mov.b64 	%rd234, {%r6657, %r6656};
	xor.b64  	%rd235, %rd233, %rd234;
	ld.u64 	%rd48, [%rd9+-176];
	xor.b64  	%rd236, %rd48, %rd47;
	ld.u64 	%rd49, [%rd9+-184];
	xor.b64  	%rd237, %rd49, %rd47;
	and.b64  	%rd238, %rd236, %rd237;
	xor.b64  	%rd239, %rd238, %rd47;
	add.s64 	%rd240, %rd229, %rd239;
	add.s64 	%rd241, %rd240, %rd235;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6658,%dummy}, %rd230;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6659}, %rd230;
	}
	shf.r.wrap.b32 	%r6660, %r6659, %r6658, 14;
	shf.r.wrap.b32 	%r6661, %r6658, %r6659, 14;
	mov.b64 	%rd242, {%r6661, %r6660};
	shf.r.wrap.b32 	%r6662, %r6659, %r6658, 18;
	shf.r.wrap.b32 	%r6663, %r6658, %r6659, 18;
	mov.b64 	%rd243, {%r6663, %r6662};
	xor.b64  	%rd244, %rd243, %rd242;
	shf.l.wrap.b32 	%r6664, %r6658, %r6659, 23;
	shf.l.wrap.b32 	%r6665, %r6659, %r6658, 23;
	mov.b64 	%rd245, {%r6665, %r6664};
	xor.b64  	%rd246, %rd244, %rd245;
	xor.b64  	%rd247, %rd44, %rd42;
	and.b64  	%rd248, %rd230, %rd247;
	xor.b64  	%rd249, %rd248, %rd44;
	add.s64 	%rd250, %rd1261, %rd43;
	add.s64 	%rd251, %rd250, %rd1229;
	add.s64 	%rd252, %rd251, %rd249;
	add.s64 	%rd253, %rd252, %rd246;
	add.s64 	%rd254, %rd253, %rd48;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6666,%dummy}, %rd241;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6667}, %rd241;
	}
	shf.r.wrap.b32 	%r6668, %r6667, %r6666, 28;
	shf.r.wrap.b32 	%r6669, %r6666, %r6667, 28;
	mov.b64 	%rd255, {%r6669, %r6668};
	shf.l.wrap.b32 	%r6670, %r6666, %r6667, 30;
	shf.l.wrap.b32 	%r6671, %r6667, %r6666, 30;
	mov.b64 	%rd256, {%r6671, %r6670};
	xor.b64  	%rd257, %rd256, %rd255;
	shf.l.wrap.b32 	%r6672, %r6666, %r6667, 25;
	shf.l.wrap.b32 	%r6673, %r6667, %r6666, 25;
	mov.b64 	%rd258, {%r6673, %r6672};
	xor.b64  	%rd259, %rd257, %rd258;
	xor.b64  	%rd260, %rd241, %rd49;
	xor.b64  	%rd261, %rd241, %rd47;
	and.b64  	%rd262, %rd261, %rd260;
	xor.b64  	%rd263, %rd262, %rd241;
	add.s64 	%rd264, %rd253, %rd263;
	add.s64 	%rd265, %rd264, %rd259;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6674,%dummy}, %rd254;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6675}, %rd254;
	}
	shf.r.wrap.b32 	%r6676, %r6675, %r6674, 14;
	shf.r.wrap.b32 	%r6677, %r6674, %r6675, 14;
	mov.b64 	%rd266, {%r6677, %r6676};
	shf.r.wrap.b32 	%r6678, %r6675, %r6674, 18;
	shf.r.wrap.b32 	%r6679, %r6674, %r6675, 18;
	mov.b64 	%rd267, {%r6679, %r6678};
	xor.b64  	%rd268, %rd267, %rd266;
	shf.l.wrap.b32 	%r6680, %r6674, %r6675, 23;
	shf.l.wrap.b32 	%r6681, %r6675, %r6674, 23;
	mov.b64 	%rd269, {%r6681, %r6680};
	xor.b64  	%rd270, %rd268, %rd269;
	xor.b64  	%rd271, %rd230, %rd42;
	and.b64  	%rd272, %rd254, %rd271;
	xor.b64  	%rd273, %rd272, %rd42;
	add.s64 	%rd274, %rd1262, %rd44;
	add.s64 	%rd275, %rd274, %rd1230;
	add.s64 	%rd276, %rd275, %rd273;
	add.s64 	%rd277, %rd276, %rd270;
	add.s64 	%rd278, %rd277, %rd49;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6682,%dummy}, %rd265;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6683}, %rd265;
	}
	shf.r.wrap.b32 	%r6684, %r6683, %r6682, 28;
	shf.r.wrap.b32 	%r6685, %r6682, %r6683, 28;
	mov.b64 	%rd279, {%r6685, %r6684};
	shf.l.wrap.b32 	%r6686, %r6682, %r6683, 30;
	shf.l.wrap.b32 	%r6687, %r6683, %r6682, 30;
	mov.b64 	%rd280, {%r6687, %r6686};
	xor.b64  	%rd281, %rd280, %rd279;
	shf.l.wrap.b32 	%r6688, %r6682, %r6683, 25;
	shf.l.wrap.b32 	%r6689, %r6683, %r6682, 25;
	mov.b64 	%rd282, {%r6689, %r6688};
	xor.b64  	%rd283, %rd281, %rd282;
	xor.b64  	%rd284, %rd265, %rd47;
	xor.b64  	%rd285, %rd265, %rd241;
	and.b64  	%rd286, %rd285, %rd284;
	xor.b64  	%rd287, %rd286, %rd265;
	add.s64 	%rd288, %rd277, %rd287;
	add.s64 	%rd289, %rd288, %rd283;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6690,%dummy}, %rd278;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6691}, %rd278;
	}
	shf.r.wrap.b32 	%r6692, %r6691, %r6690, 14;
	shf.r.wrap.b32 	%r6693, %r6690, %r6691, 14;
	mov.b64 	%rd290, {%r6693, %r6692};
	shf.r.wrap.b32 	%r6694, %r6691, %r6690, 18;
	shf.r.wrap.b32 	%r6695, %r6690, %r6691, 18;
	mov.b64 	%rd291, {%r6695, %r6694};
	xor.b64  	%rd292, %rd291, %rd290;
	shf.l.wrap.b32 	%r6696, %r6690, %r6691, 23;
	shf.l.wrap.b32 	%r6697, %r6691, %r6690, 23;
	mov.b64 	%rd293, {%r6697, %r6696};
	xor.b64  	%rd294, %rd292, %rd293;
	xor.b64  	%rd295, %rd254, %rd230;
	and.b64  	%rd296, %rd278, %rd295;
	xor.b64  	%rd297, %rd296, %rd230;
	add.s64 	%rd298, %rd1263, %rd42;
	add.s64 	%rd299, %rd298, %rd1231;
	add.s64 	%rd300, %rd299, %rd297;
	add.s64 	%rd301, %rd300, %rd294;
	add.s64 	%rd302, %rd301, %rd47;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6698,%dummy}, %rd289;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6699}, %rd289;
	}
	shf.r.wrap.b32 	%r6700, %r6699, %r6698, 28;
	shf.r.wrap.b32 	%r6701, %r6698, %r6699, 28;
	mov.b64 	%rd303, {%r6701, %r6700};
	shf.l.wrap.b32 	%r6702, %r6698, %r6699, 30;
	shf.l.wrap.b32 	%r6703, %r6699, %r6698, 30;
	mov.b64 	%rd304, {%r6703, %r6702};
	xor.b64  	%rd305, %rd304, %rd303;
	shf.l.wrap.b32 	%r6704, %r6698, %r6699, 25;
	shf.l.wrap.b32 	%r6705, %r6699, %r6698, 25;
	mov.b64 	%rd306, {%r6705, %r6704};
	xor.b64  	%rd307, %rd305, %rd306;
	xor.b64  	%rd308, %rd289, %rd241;
	xor.b64  	%rd309, %rd289, %rd265;
	and.b64  	%rd310, %rd309, %rd308;
	xor.b64  	%rd311, %rd310, %rd289;
	add.s64 	%rd312, %rd301, %rd311;
	add.s64 	%rd313, %rd312, %rd307;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6706,%dummy}, %rd302;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6707}, %rd302;
	}
	shf.r.wrap.b32 	%r6708, %r6707, %r6706, 14;
	shf.r.wrap.b32 	%r6709, %r6706, %r6707, 14;
	mov.b64 	%rd314, {%r6709, %r6708};
	shf.r.wrap.b32 	%r6710, %r6707, %r6706, 18;
	shf.r.wrap.b32 	%r6711, %r6706, %r6707, 18;
	mov.b64 	%rd315, {%r6711, %r6710};
	xor.b64  	%rd316, %rd315, %rd314;
	shf.l.wrap.b32 	%r6712, %r6706, %r6707, 23;
	shf.l.wrap.b32 	%r6713, %r6707, %r6706, 23;
	mov.b64 	%rd317, {%r6713, %r6712};
	xor.b64  	%rd318, %rd316, %rd317;
	xor.b64  	%rd319, %rd278, %rd254;
	and.b64  	%rd320, %rd302, %rd319;
	xor.b64  	%rd321, %rd320, %rd254;
	add.s64 	%rd322, %rd230, %rd1264;
	add.s64 	%rd323, %rd322, %rd1232;
	add.s64 	%rd324, %rd323, %rd321;
	add.s64 	%rd325, %rd324, %rd318;
	add.s64 	%rd326, %rd325, %rd241;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6714,%dummy}, %rd313;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6715}, %rd313;
	}
	shf.r.wrap.b32 	%r6716, %r6715, %r6714, 28;
	shf.r.wrap.b32 	%r6717, %r6714, %r6715, 28;
	mov.b64 	%rd327, {%r6717, %r6716};
	shf.l.wrap.b32 	%r6718, %r6714, %r6715, 30;
	shf.l.wrap.b32 	%r6719, %r6715, %r6714, 30;
	mov.b64 	%rd328, {%r6719, %r6718};
	xor.b64  	%rd329, %rd328, %rd327;
	shf.l.wrap.b32 	%r6720, %r6714, %r6715, 25;
	shf.l.wrap.b32 	%r6721, %r6715, %r6714, 25;
	mov.b64 	%rd330, {%r6721, %r6720};
	xor.b64  	%rd331, %rd329, %rd330;
	xor.b64  	%rd332, %rd313, %rd265;
	xor.b64  	%rd333, %rd313, %rd289;
	and.b64  	%rd334, %rd333, %rd332;
	xor.b64  	%rd335, %rd334, %rd313;
	add.s64 	%rd336, %rd325, %rd335;
	add.s64 	%rd337, %rd336, %rd331;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6722,%dummy}, %rd326;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6723}, %rd326;
	}
	shf.r.wrap.b32 	%r6724, %r6723, %r6722, 14;
	shf.r.wrap.b32 	%r6725, %r6722, %r6723, 14;
	mov.b64 	%rd338, {%r6725, %r6724};
	shf.r.wrap.b32 	%r6726, %r6723, %r6722, 18;
	shf.r.wrap.b32 	%r6727, %r6722, %r6723, 18;
	mov.b64 	%rd339, {%r6727, %r6726};
	xor.b64  	%rd340, %rd339, %rd338;
	shf.l.wrap.b32 	%r6728, %r6722, %r6723, 23;
	shf.l.wrap.b32 	%r6729, %r6723, %r6722, 23;
	mov.b64 	%rd341, {%r6729, %r6728};
	xor.b64  	%rd342, %rd340, %rd341;
	xor.b64  	%rd343, %rd302, %rd278;
	and.b64  	%rd344, %rd326, %rd343;
	xor.b64  	%rd345, %rd344, %rd278;
	add.s64 	%rd346, %rd254, %rd1265;
	add.s64 	%rd347, %rd346, %rd1233;
	add.s64 	%rd348, %rd347, %rd345;
	add.s64 	%rd349, %rd348, %rd342;
	add.s64 	%rd350, %rd349, %rd265;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6730,%dummy}, %rd337;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6731}, %rd337;
	}
	shf.r.wrap.b32 	%r6732, %r6731, %r6730, 28;
	shf.r.wrap.b32 	%r6733, %r6730, %r6731, 28;
	mov.b64 	%rd351, {%r6733, %r6732};
	shf.l.wrap.b32 	%r6734, %r6730, %r6731, 30;
	shf.l.wrap.b32 	%r6735, %r6731, %r6730, 30;
	mov.b64 	%rd352, {%r6735, %r6734};
	xor.b64  	%rd353, %rd352, %rd351;
	shf.l.wrap.b32 	%r6736, %r6730, %r6731, 25;
	shf.l.wrap.b32 	%r6737, %r6731, %r6730, 25;
	mov.b64 	%rd354, {%r6737, %r6736};
	xor.b64  	%rd355, %rd353, %rd354;
	xor.b64  	%rd356, %rd337, %rd289;
	xor.b64  	%rd357, %rd337, %rd313;
	and.b64  	%rd358, %rd357, %rd356;
	xor.b64  	%rd359, %rd358, %rd337;
	add.s64 	%rd360, %rd349, %rd359;
	add.s64 	%rd361, %rd360, %rd355;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6738,%dummy}, %rd350;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6739}, %rd350;
	}
	shf.r.wrap.b32 	%r6740, %r6739, %r6738, 14;
	shf.r.wrap.b32 	%r6741, %r6738, %r6739, 14;
	mov.b64 	%rd362, {%r6741, %r6740};
	shf.r.wrap.b32 	%r6742, %r6739, %r6738, 18;
	shf.r.wrap.b32 	%r6743, %r6738, %r6739, 18;
	mov.b64 	%rd363, {%r6743, %r6742};
	xor.b64  	%rd364, %rd363, %rd362;
	shf.l.wrap.b32 	%r6744, %r6738, %r6739, 23;
	shf.l.wrap.b32 	%r6745, %r6739, %r6738, 23;
	mov.b64 	%rd365, {%r6745, %r6744};
	xor.b64  	%rd366, %rd364, %rd365;
	xor.b64  	%rd367, %rd326, %rd302;
	and.b64  	%rd368, %rd350, %rd367;
	xor.b64  	%rd369, %rd368, %rd302;
	add.s64 	%rd370, %rd278, %rd1266;
	add.s64 	%rd371, %rd370, %rd1234;
	add.s64 	%rd372, %rd371, %rd369;
	add.s64 	%rd373, %rd372, %rd366;
	add.s64 	%rd374, %rd373, %rd289;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6746,%dummy}, %rd361;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6747}, %rd361;
	}
	shf.r.wrap.b32 	%r6748, %r6747, %r6746, 28;
	shf.r.wrap.b32 	%r6749, %r6746, %r6747, 28;
	mov.b64 	%rd375, {%r6749, %r6748};
	shf.l.wrap.b32 	%r6750, %r6746, %r6747, 30;
	shf.l.wrap.b32 	%r6751, %r6747, %r6746, 30;
	mov.b64 	%rd376, {%r6751, %r6750};
	xor.b64  	%rd377, %rd376, %rd375;
	shf.l.wrap.b32 	%r6752, %r6746, %r6747, 25;
	shf.l.wrap.b32 	%r6753, %r6747, %r6746, 25;
	mov.b64 	%rd378, {%r6753, %r6752};
	xor.b64  	%rd379, %rd377, %rd378;
	xor.b64  	%rd380, %rd361, %rd313;
	xor.b64  	%rd381, %rd361, %rd337;
	and.b64  	%rd382, %rd381, %rd380;
	xor.b64  	%rd383, %rd382, %rd361;
	add.s64 	%rd384, %rd373, %rd383;
	add.s64 	%rd385, %rd384, %rd379;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6754,%dummy}, %rd374;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6755}, %rd374;
	}
	shf.r.wrap.b32 	%r6756, %r6755, %r6754, 14;
	shf.r.wrap.b32 	%r6757, %r6754, %r6755, 14;
	mov.b64 	%rd386, {%r6757, %r6756};
	shf.r.wrap.b32 	%r6758, %r6755, %r6754, 18;
	shf.r.wrap.b32 	%r6759, %r6754, %r6755, 18;
	mov.b64 	%rd387, {%r6759, %r6758};
	xor.b64  	%rd388, %rd387, %rd386;
	shf.l.wrap.b32 	%r6760, %r6754, %r6755, 23;
	shf.l.wrap.b32 	%r6761, %r6755, %r6754, 23;
	mov.b64 	%rd389, {%r6761, %r6760};
	xor.b64  	%rd390, %rd388, %rd389;
	xor.b64  	%rd391, %rd350, %rd326;
	and.b64  	%rd392, %rd374, %rd391;
	xor.b64  	%rd393, %rd392, %rd326;
	add.s64 	%rd394, %rd302, %rd1267;
	add.s64 	%rd395, %rd394, %rd1235;
	add.s64 	%rd396, %rd395, %rd393;
	add.s64 	%rd397, %rd396, %rd390;
	add.s64 	%rd398, %rd397, %rd313;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6762,%dummy}, %rd385;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6763}, %rd385;
	}
	shf.r.wrap.b32 	%r6764, %r6763, %r6762, 28;
	shf.r.wrap.b32 	%r6765, %r6762, %r6763, 28;
	mov.b64 	%rd399, {%r6765, %r6764};
	shf.l.wrap.b32 	%r6766, %r6762, %r6763, 30;
	shf.l.wrap.b32 	%r6767, %r6763, %r6762, 30;
	mov.b64 	%rd400, {%r6767, %r6766};
	xor.b64  	%rd401, %rd400, %rd399;
	shf.l.wrap.b32 	%r6768, %r6762, %r6763, 25;
	shf.l.wrap.b32 	%r6769, %r6763, %r6762, 25;
	mov.b64 	%rd402, {%r6769, %r6768};
	xor.b64  	%rd403, %rd401, %rd402;
	xor.b64  	%rd404, %rd385, %rd337;
	xor.b64  	%rd405, %rd385, %rd361;
	and.b64  	%rd406, %rd405, %rd404;
	xor.b64  	%rd407, %rd406, %rd385;
	add.s64 	%rd408, %rd397, %rd407;
	add.s64 	%rd409, %rd408, %rd403;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6770,%dummy}, %rd398;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6771}, %rd398;
	}
	shf.r.wrap.b32 	%r6772, %r6771, %r6770, 14;
	shf.r.wrap.b32 	%r6773, %r6770, %r6771, 14;
	mov.b64 	%rd410, {%r6773, %r6772};
	shf.r.wrap.b32 	%r6774, %r6771, %r6770, 18;
	shf.r.wrap.b32 	%r6775, %r6770, %r6771, 18;
	mov.b64 	%rd411, {%r6775, %r6774};
	xor.b64  	%rd412, %rd411, %rd410;
	shf.l.wrap.b32 	%r6776, %r6770, %r6771, 23;
	shf.l.wrap.b32 	%r6777, %r6771, %r6770, 23;
	mov.b64 	%rd413, {%r6777, %r6776};
	xor.b64  	%rd414, %rd412, %rd413;
	xor.b64  	%rd415, %rd374, %rd350;
	and.b64  	%rd416, %rd398, %rd415;
	xor.b64  	%rd417, %rd416, %rd350;
	add.s64 	%rd418, %rd326, %rd1251;
	add.s64 	%rd419, %rd418, %rd1236;
	add.s64 	%rd420, %rd419, %rd417;
	add.s64 	%rd421, %rd420, %rd414;
	add.s64 	%rd422, %rd421, %rd337;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6778,%dummy}, %rd409;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6779}, %rd409;
	}
	shf.r.wrap.b32 	%r6780, %r6779, %r6778, 28;
	shf.r.wrap.b32 	%r6781, %r6778, %r6779, 28;
	mov.b64 	%rd423, {%r6781, %r6780};
	shf.l.wrap.b32 	%r6782, %r6778, %r6779, 30;
	shf.l.wrap.b32 	%r6783, %r6779, %r6778, 30;
	mov.b64 	%rd424, {%r6783, %r6782};
	xor.b64  	%rd425, %rd424, %rd423;
	shf.l.wrap.b32 	%r6784, %r6778, %r6779, 25;
	shf.l.wrap.b32 	%r6785, %r6779, %r6778, 25;
	mov.b64 	%rd426, {%r6785, %r6784};
	xor.b64  	%rd427, %rd425, %rd426;
	xor.b64  	%rd428, %rd409, %rd361;
	xor.b64  	%rd429, %rd409, %rd385;
	and.b64  	%rd430, %rd429, %rd428;
	xor.b64  	%rd431, %rd430, %rd409;
	add.s64 	%rd432, %rd421, %rd431;
	add.s64 	%rd433, %rd432, %rd427;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6786,%dummy}, %rd422;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6787}, %rd422;
	}
	shf.r.wrap.b32 	%r6788, %r6787, %r6786, 14;
	shf.r.wrap.b32 	%r6789, %r6786, %r6787, 14;
	mov.b64 	%rd434, {%r6789, %r6788};
	shf.r.wrap.b32 	%r6790, %r6787, %r6786, 18;
	shf.r.wrap.b32 	%r6791, %r6786, %r6787, 18;
	mov.b64 	%rd435, {%r6791, %r6790};
	xor.b64  	%rd436, %rd435, %rd434;
	shf.l.wrap.b32 	%r6792, %r6786, %r6787, 23;
	shf.l.wrap.b32 	%r6793, %r6787, %r6786, 23;
	mov.b64 	%rd437, {%r6793, %r6792};
	xor.b64  	%rd438, %rd436, %rd437;
	xor.b64  	%rd439, %rd398, %rd374;
	and.b64  	%rd440, %rd422, %rd439;
	xor.b64  	%rd441, %rd440, %rd374;
	add.s64 	%rd442, %rd350, %rd1250;
	add.s64 	%rd443, %rd442, %rd1237;
	add.s64 	%rd444, %rd443, %rd441;
	add.s64 	%rd445, %rd444, %rd438;
	add.s64 	%rd446, %rd445, %rd361;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6794,%dummy}, %rd433;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6795}, %rd433;
	}
	shf.r.wrap.b32 	%r6796, %r6795, %r6794, 28;
	shf.r.wrap.b32 	%r6797, %r6794, %r6795, 28;
	mov.b64 	%rd447, {%r6797, %r6796};
	shf.l.wrap.b32 	%r6798, %r6794, %r6795, 30;
	shf.l.wrap.b32 	%r6799, %r6795, %r6794, 30;
	mov.b64 	%rd448, {%r6799, %r6798};
	xor.b64  	%rd449, %rd448, %rd447;
	shf.l.wrap.b32 	%r6800, %r6794, %r6795, 25;
	shf.l.wrap.b32 	%r6801, %r6795, %r6794, 25;
	mov.b64 	%rd450, {%r6801, %r6800};
	xor.b64  	%rd451, %rd449, %rd450;
	xor.b64  	%rd452, %rd433, %rd385;
	xor.b64  	%rd453, %rd433, %rd409;
	and.b64  	%rd454, %rd453, %rd452;
	xor.b64  	%rd455, %rd454, %rd433;
	add.s64 	%rd456, %rd445, %rd455;
	add.s64 	%rd457, %rd456, %rd451;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6802,%dummy}, %rd446;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6803}, %rd446;
	}
	shf.r.wrap.b32 	%r6804, %r6803, %r6802, 14;
	shf.r.wrap.b32 	%r6805, %r6802, %r6803, 14;
	mov.b64 	%rd458, {%r6805, %r6804};
	shf.r.wrap.b32 	%r6806, %r6803, %r6802, 18;
	shf.r.wrap.b32 	%r6807, %r6802, %r6803, 18;
	mov.b64 	%rd459, {%r6807, %r6806};
	xor.b64  	%rd460, %rd459, %rd458;
	shf.l.wrap.b32 	%r6808, %r6802, %r6803, 23;
	shf.l.wrap.b32 	%r6809, %r6803, %r6802, 23;
	mov.b64 	%rd461, {%r6809, %r6808};
	xor.b64  	%rd462, %rd460, %rd461;
	xor.b64  	%rd463, %rd422, %rd398;
	and.b64  	%rd464, %rd446, %rd463;
	xor.b64  	%rd465, %rd464, %rd398;
	add.s64 	%rd466, %rd374, %rd1249;
	add.s64 	%rd467, %rd466, %rd1238;
	add.s64 	%rd468, %rd467, %rd465;
	add.s64 	%rd469, %rd468, %rd462;
	add.s64 	%rd470, %rd469, %rd385;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6810,%dummy}, %rd457;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6811}, %rd457;
	}
	shf.r.wrap.b32 	%r6812, %r6811, %r6810, 28;
	shf.r.wrap.b32 	%r6813, %r6810, %r6811, 28;
	mov.b64 	%rd471, {%r6813, %r6812};
	shf.l.wrap.b32 	%r6814, %r6810, %r6811, 30;
	shf.l.wrap.b32 	%r6815, %r6811, %r6810, 30;
	mov.b64 	%rd472, {%r6815, %r6814};
	xor.b64  	%rd473, %rd472, %rd471;
	shf.l.wrap.b32 	%r6816, %r6810, %r6811, 25;
	shf.l.wrap.b32 	%r6817, %r6811, %r6810, 25;
	mov.b64 	%rd474, {%r6817, %r6816};
	xor.b64  	%rd475, %rd473, %rd474;
	xor.b64  	%rd476, %rd457, %rd409;
	xor.b64  	%rd477, %rd457, %rd433;
	and.b64  	%rd478, %rd477, %rd476;
	xor.b64  	%rd479, %rd478, %rd457;
	add.s64 	%rd480, %rd469, %rd479;
	add.s64 	%rd481, %rd480, %rd475;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6818,%dummy}, %rd470;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6819}, %rd470;
	}
	shf.r.wrap.b32 	%r6820, %r6819, %r6818, 14;
	shf.r.wrap.b32 	%r6821, %r6818, %r6819, 14;
	mov.b64 	%rd482, {%r6821, %r6820};
	shf.r.wrap.b32 	%r6822, %r6819, %r6818, 18;
	shf.r.wrap.b32 	%r6823, %r6818, %r6819, 18;
	mov.b64 	%rd483, {%r6823, %r6822};
	xor.b64  	%rd484, %rd483, %rd482;
	shf.l.wrap.b32 	%r6824, %r6818, %r6819, 23;
	shf.l.wrap.b32 	%r6825, %r6819, %r6818, 23;
	mov.b64 	%rd485, {%r6825, %r6824};
	xor.b64  	%rd486, %rd484, %rd485;
	xor.b64  	%rd487, %rd446, %rd422;
	and.b64  	%rd488, %rd470, %rd487;
	xor.b64  	%rd489, %rd488, %rd422;
	add.s64 	%rd490, %rd398, %rd1248;
	add.s64 	%rd491, %rd490, %rd1239;
	add.s64 	%rd492, %rd491, %rd489;
	add.s64 	%rd493, %rd492, %rd486;
	add.s64 	%rd494, %rd493, %rd409;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6826,%dummy}, %rd481;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6827}, %rd481;
	}
	shf.r.wrap.b32 	%r6828, %r6827, %r6826, 28;
	shf.r.wrap.b32 	%r6829, %r6826, %r6827, 28;
	mov.b64 	%rd495, {%r6829, %r6828};
	shf.l.wrap.b32 	%r6830, %r6826, %r6827, 30;
	shf.l.wrap.b32 	%r6831, %r6827, %r6826, 30;
	mov.b64 	%rd496, {%r6831, %r6830};
	xor.b64  	%rd497, %rd496, %rd495;
	shf.l.wrap.b32 	%r6832, %r6826, %r6827, 25;
	shf.l.wrap.b32 	%r6833, %r6827, %r6826, 25;
	mov.b64 	%rd498, {%r6833, %r6832};
	xor.b64  	%rd499, %rd497, %rd498;
	xor.b64  	%rd500, %rd481, %rd433;
	xor.b64  	%rd501, %rd481, %rd457;
	and.b64  	%rd502, %rd501, %rd500;
	xor.b64  	%rd503, %rd502, %rd481;
	add.s64 	%rd504, %rd493, %rd503;
	add.s64 	%rd505, %rd504, %rd499;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6834,%dummy}, %rd494;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6835}, %rd494;
	}
	shf.r.wrap.b32 	%r6836, %r6835, %r6834, 14;
	shf.r.wrap.b32 	%r6837, %r6834, %r6835, 14;
	mov.b64 	%rd506, {%r6837, %r6836};
	shf.r.wrap.b32 	%r6838, %r6835, %r6834, 18;
	shf.r.wrap.b32 	%r6839, %r6834, %r6835, 18;
	mov.b64 	%rd507, {%r6839, %r6838};
	xor.b64  	%rd508, %rd507, %rd506;
	shf.l.wrap.b32 	%r6840, %r6834, %r6835, 23;
	shf.l.wrap.b32 	%r6841, %r6835, %r6834, 23;
	mov.b64 	%rd509, {%r6841, %r6840};
	xor.b64  	%rd510, %rd508, %rd509;
	xor.b64  	%rd511, %rd470, %rd446;
	and.b64  	%rd512, %rd494, %rd511;
	xor.b64  	%rd513, %rd512, %rd446;
	add.s64 	%rd514, %rd422, %rd1247;
	add.s64 	%rd515, %rd514, %rd1240;
	add.s64 	%rd516, %rd515, %rd513;
	add.s64 	%rd517, %rd516, %rd510;
	add.s64 	%rd1259, %rd517, %rd433;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6842,%dummy}, %rd505;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6843}, %rd505;
	}
	shf.r.wrap.b32 	%r6844, %r6843, %r6842, 28;
	shf.r.wrap.b32 	%r6845, %r6842, %r6843, 28;
	mov.b64 	%rd518, {%r6845, %r6844};
	shf.l.wrap.b32 	%r6846, %r6842, %r6843, 30;
	shf.l.wrap.b32 	%r6847, %r6843, %r6842, 30;
	mov.b64 	%rd519, {%r6847, %r6846};
	xor.b64  	%rd520, %rd519, %rd518;
	shf.l.wrap.b32 	%r6848, %r6842, %r6843, 25;
	shf.l.wrap.b32 	%r6849, %r6843, %r6842, 25;
	mov.b64 	%rd521, {%r6849, %r6848};
	xor.b64  	%rd522, %rd520, %rd521;
	xor.b64  	%rd523, %rd505, %rd457;
	xor.b64  	%rd524, %rd505, %rd481;
	and.b64  	%rd525, %rd524, %rd523;
	xor.b64  	%rd526, %rd525, %rd505;
	add.s64 	%rd527, %rd517, %rd526;
	add.s64 	%rd1255, %rd527, %rd522;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6850,%dummy}, %rd1259;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6851}, %rd1259;
	}
	shf.r.wrap.b32 	%r6852, %r6851, %r6850, 14;
	shf.r.wrap.b32 	%r6853, %r6850, %r6851, 14;
	mov.b64 	%rd528, {%r6853, %r6852};
	shf.r.wrap.b32 	%r6854, %r6851, %r6850, 18;
	shf.r.wrap.b32 	%r6855, %r6850, %r6851, 18;
	mov.b64 	%rd529, {%r6855, %r6854};
	xor.b64  	%rd530, %rd529, %rd528;
	shf.l.wrap.b32 	%r6856, %r6850, %r6851, 23;
	shf.l.wrap.b32 	%r6857, %r6851, %r6850, 23;
	mov.b64 	%rd531, {%r6857, %r6856};
	xor.b64  	%rd532, %rd530, %rd531;
	xor.b64  	%rd533, %rd494, %rd470;
	and.b64  	%rd534, %rd1259, %rd533;
	xor.b64  	%rd535, %rd534, %rd470;
	add.s64 	%rd536, %rd446, %rd1246;
	add.s64 	%rd537, %rd536, %rd1241;
	add.s64 	%rd538, %rd537, %rd535;
	add.s64 	%rd539, %rd538, %rd532;
	add.s64 	%rd1258, %rd539, %rd457;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6858,%dummy}, %rd1255;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6859}, %rd1255;
	}
	shf.r.wrap.b32 	%r6860, %r6859, %r6858, 28;
	shf.r.wrap.b32 	%r6861, %r6858, %r6859, 28;
	mov.b64 	%rd540, {%r6861, %r6860};
	shf.l.wrap.b32 	%r6862, %r6858, %r6859, 30;
	shf.l.wrap.b32 	%r6863, %r6859, %r6858, 30;
	mov.b64 	%rd541, {%r6863, %r6862};
	xor.b64  	%rd542, %rd541, %rd540;
	shf.l.wrap.b32 	%r6864, %r6858, %r6859, 25;
	shf.l.wrap.b32 	%r6865, %r6859, %r6858, 25;
	mov.b64 	%rd543, {%r6865, %r6864};
	xor.b64  	%rd544, %rd542, %rd543;
	xor.b64  	%rd545, %rd1255, %rd481;
	xor.b64  	%rd546, %rd1255, %rd505;
	and.b64  	%rd547, %rd546, %rd545;
	xor.b64  	%rd548, %rd547, %rd1255;
	add.s64 	%rd549, %rd539, %rd548;
	add.s64 	%rd1254, %rd549, %rd544;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6866,%dummy}, %rd1258;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6867}, %rd1258;
	}
	shf.r.wrap.b32 	%r6868, %r6867, %r6866, 14;
	shf.r.wrap.b32 	%r6869, %r6866, %r6867, 14;
	mov.b64 	%rd550, {%r6869, %r6868};
	shf.r.wrap.b32 	%r6870, %r6867, %r6866, 18;
	shf.r.wrap.b32 	%r6871, %r6866, %r6867, 18;
	mov.b64 	%rd551, {%r6871, %r6870};
	xor.b64  	%rd552, %rd551, %rd550;
	shf.l.wrap.b32 	%r6872, %r6866, %r6867, 23;
	shf.l.wrap.b32 	%r6873, %r6867, %r6866, 23;
	mov.b64 	%rd553, {%r6873, %r6872};
	xor.b64  	%rd554, %rd552, %rd553;
	xor.b64  	%rd555, %rd1259, %rd494;
	and.b64  	%rd556, %rd1258, %rd555;
	xor.b64  	%rd557, %rd556, %rd494;
	add.s64 	%rd558, %rd470, %rd1245;
	add.s64 	%rd559, %rd558, %rd1242;
	add.s64 	%rd560, %rd559, %rd557;
	add.s64 	%rd561, %rd560, %rd554;
	add.s64 	%rd1257, %rd561, %rd481;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6874,%dummy}, %rd1254;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6875}, %rd1254;
	}
	shf.r.wrap.b32 	%r6876, %r6875, %r6874, 28;
	shf.r.wrap.b32 	%r6877, %r6874, %r6875, 28;
	mov.b64 	%rd562, {%r6877, %r6876};
	shf.l.wrap.b32 	%r6878, %r6874, %r6875, 30;
	shf.l.wrap.b32 	%r6879, %r6875, %r6874, 30;
	mov.b64 	%rd563, {%r6879, %r6878};
	xor.b64  	%rd564, %rd563, %rd562;
	shf.l.wrap.b32 	%r6880, %r6874, %r6875, 25;
	shf.l.wrap.b32 	%r6881, %r6875, %r6874, 25;
	mov.b64 	%rd565, {%r6881, %r6880};
	xor.b64  	%rd566, %rd564, %rd565;
	xor.b64  	%rd567, %rd1254, %rd505;
	xor.b64  	%rd568, %rd1254, %rd1255;
	and.b64  	%rd569, %rd568, %rd567;
	xor.b64  	%rd570, %rd569, %rd1254;
	add.s64 	%rd571, %rd561, %rd570;
	add.s64 	%rd1253, %rd571, %rd566;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6882,%dummy}, %rd1257;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6883}, %rd1257;
	}
	shf.r.wrap.b32 	%r6884, %r6883, %r6882, 14;
	shf.r.wrap.b32 	%r6885, %r6882, %r6883, 14;
	mov.b64 	%rd572, {%r6885, %r6884};
	shf.r.wrap.b32 	%r6886, %r6883, %r6882, 18;
	shf.r.wrap.b32 	%r6887, %r6882, %r6883, 18;
	mov.b64 	%rd573, {%r6887, %r6886};
	xor.b64  	%rd574, %rd573, %rd572;
	shf.l.wrap.b32 	%r6888, %r6882, %r6883, 23;
	shf.l.wrap.b32 	%r6889, %r6883, %r6882, 23;
	mov.b64 	%rd575, {%r6889, %r6888};
	xor.b64  	%rd576, %rd574, %rd575;
	xor.b64  	%rd577, %rd1258, %rd1259;
	and.b64  	%rd578, %rd1257, %rd577;
	xor.b64  	%rd579, %rd578, %rd1259;
	add.s64 	%rd580, %rd494, %rd1244;
	add.s64 	%rd581, %rd580, %rd1243;
	add.s64 	%rd582, %rd581, %rd579;
	add.s64 	%rd583, %rd582, %rd576;
	add.s64 	%rd1256, %rd583, %rd505;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6890,%dummy}, %rd1253;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6891}, %rd1253;
	}
	shf.r.wrap.b32 	%r6892, %r6891, %r6890, 28;
	shf.r.wrap.b32 	%r6893, %r6890, %r6891, 28;
	mov.b64 	%rd584, {%r6893, %r6892};
	shf.l.wrap.b32 	%r6894, %r6890, %r6891, 30;
	shf.l.wrap.b32 	%r6895, %r6891, %r6890, 30;
	mov.b64 	%rd585, {%r6895, %r6894};
	xor.b64  	%rd586, %rd585, %rd584;
	shf.l.wrap.b32 	%r6896, %r6890, %r6891, 25;
	shf.l.wrap.b32 	%r6897, %r6891, %r6890, 25;
	mov.b64 	%rd587, {%r6897, %r6896};
	xor.b64  	%rd588, %rd586, %rd587;
	xor.b64  	%rd589, %rd1253, %rd1255;
	xor.b64  	%rd590, %rd1253, %rd1254;
	and.b64  	%rd591, %rd590, %rd589;
	xor.b64  	%rd592, %rd591, %rd1253;
	add.s64 	%rd593, %rd583, %rd592;
	add.s64 	%rd1252, %rd593, %rd588;
	mov.u32 	%r7394, 16;

BB3_90:
	shr.u64 	%rd594, %rd1245, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6898,%dummy}, %rd1245;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6899}, %rd1245;
	}
	shf.r.wrap.b32 	%r6900, %r6899, %r6898, 19;
	shf.r.wrap.b32 	%r6901, %r6898, %r6899, 19;
	mov.b64 	%rd595, {%r6901, %r6900};
	xor.b64  	%rd596, %rd595, %rd594;
	shf.l.wrap.b32 	%r6902, %r6898, %r6899, 3;
	shf.l.wrap.b32 	%r6903, %r6899, %r6898, 3;
	mov.b64 	%rd597, {%r6903, %r6902};
	xor.b64  	%rd598, %rd596, %rd597;
	shr.u64 	%rd599, %rd1261, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6904,%dummy}, %rd1261;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6905}, %rd1261;
	}
	shf.r.wrap.b32 	%r6906, %r6905, %r6904, 1;
	shf.r.wrap.b32 	%r6907, %r6904, %r6905, 1;
	mov.b64 	%rd600, {%r6907, %r6906};
	xor.b64  	%rd601, %rd600, %rd599;
	shf.r.wrap.b32 	%r6908, %r6905, %r6904, 8;
	shf.r.wrap.b32 	%r6909, %r6904, %r6905, 8;
	mov.b64 	%rd602, {%r6909, %r6908};
	xor.b64  	%rd603, %rd601, %rd602;
	add.s64 	%rd604, %rd1250, %rd1260;
	add.s64 	%rd605, %rd604, %rd598;
	add.s64 	%rd1260, %rd605, %rd603;
	shr.u64 	%rd606, %rd1244, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6910,%dummy}, %rd1244;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6911}, %rd1244;
	}
	shf.r.wrap.b32 	%r6912, %r6911, %r6910, 19;
	shf.r.wrap.b32 	%r6913, %r6910, %r6911, 19;
	mov.b64 	%rd607, {%r6913, %r6912};
	xor.b64  	%rd608, %rd607, %rd606;
	shf.l.wrap.b32 	%r6914, %r6910, %r6911, 3;
	shf.l.wrap.b32 	%r6915, %r6911, %r6910, 3;
	mov.b64 	%rd609, {%r6915, %r6914};
	xor.b64  	%rd610, %rd608, %rd609;
	shr.u64 	%rd611, %rd1262, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6916,%dummy}, %rd1262;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6917}, %rd1262;
	}
	shf.r.wrap.b32 	%r6918, %r6917, %r6916, 1;
	shf.r.wrap.b32 	%r6919, %r6916, %r6917, 1;
	mov.b64 	%rd612, {%r6919, %r6918};
	xor.b64  	%rd613, %rd612, %rd611;
	shf.r.wrap.b32 	%r6920, %r6917, %r6916, 8;
	shf.r.wrap.b32 	%r6921, %r6916, %r6917, 8;
	mov.b64 	%rd614, {%r6921, %r6920};
	xor.b64  	%rd615, %rd613, %rd614;
	add.s64 	%rd616, %rd1249, %rd1261;
	add.s64 	%rd617, %rd616, %rd610;
	add.s64 	%rd1261, %rd617, %rd615;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6922,%dummy}, %rd1260;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6923}, %rd1260;
	}
	shf.r.wrap.b32 	%r6924, %r6923, %r6922, 19;
	shf.r.wrap.b32 	%r6925, %r6922, %r6923, 19;
	mov.b64 	%rd618, {%r6925, %r6924};
	shf.l.wrap.b32 	%r6926, %r6922, %r6923, 3;
	shf.l.wrap.b32 	%r6927, %r6923, %r6922, 3;
	mov.b64 	%rd619, {%r6927, %r6926};
	shr.u64 	%rd620, %rd1260, 6;
	xor.b64  	%rd621, %rd618, %rd620;
	xor.b64  	%rd622, %rd621, %rd619;
	shr.u64 	%rd623, %rd1263, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6928,%dummy}, %rd1263;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6929}, %rd1263;
	}
	shf.r.wrap.b32 	%r6930, %r6929, %r6928, 1;
	shf.r.wrap.b32 	%r6931, %r6928, %r6929, 1;
	mov.b64 	%rd624, {%r6931, %r6930};
	xor.b64  	%rd625, %rd624, %rd623;
	shf.r.wrap.b32 	%r6932, %r6929, %r6928, 8;
	shf.r.wrap.b32 	%r6933, %r6928, %r6929, 8;
	mov.b64 	%rd626, {%r6933, %r6932};
	xor.b64  	%rd627, %rd625, %rd626;
	add.s64 	%rd628, %rd1248, %rd1262;
	add.s64 	%rd629, %rd628, %rd622;
	add.s64 	%rd1262, %rd629, %rd627;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6934,%dummy}, %rd1261;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6935}, %rd1261;
	}
	shf.r.wrap.b32 	%r6936, %r6935, %r6934, 19;
	shf.r.wrap.b32 	%r6937, %r6934, %r6935, 19;
	mov.b64 	%rd630, {%r6937, %r6936};
	shf.l.wrap.b32 	%r6938, %r6934, %r6935, 3;
	shf.l.wrap.b32 	%r6939, %r6935, %r6934, 3;
	mov.b64 	%rd631, {%r6939, %r6938};
	shr.u64 	%rd632, %rd1261, 6;
	xor.b64  	%rd633, %rd630, %rd632;
	xor.b64  	%rd634, %rd633, %rd631;
	shr.u64 	%rd635, %rd1264, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6940,%dummy}, %rd1264;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6941}, %rd1264;
	}
	shf.r.wrap.b32 	%r6942, %r6941, %r6940, 1;
	shf.r.wrap.b32 	%r6943, %r6940, %r6941, 1;
	mov.b64 	%rd636, {%r6943, %r6942};
	xor.b64  	%rd637, %rd636, %rd635;
	shf.r.wrap.b32 	%r6944, %r6941, %r6940, 8;
	shf.r.wrap.b32 	%r6945, %r6940, %r6941, 8;
	mov.b64 	%rd638, {%r6945, %r6944};
	xor.b64  	%rd639, %rd637, %rd638;
	add.s64 	%rd640, %rd1247, %rd1263;
	add.s64 	%rd641, %rd640, %rd634;
	add.s64 	%rd1263, %rd641, %rd639;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6946,%dummy}, %rd1262;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6947}, %rd1262;
	}
	shf.r.wrap.b32 	%r6948, %r6947, %r6946, 19;
	shf.r.wrap.b32 	%r6949, %r6946, %r6947, 19;
	mov.b64 	%rd642, {%r6949, %r6948};
	shf.l.wrap.b32 	%r6950, %r6946, %r6947, 3;
	shf.l.wrap.b32 	%r6951, %r6947, %r6946, 3;
	mov.b64 	%rd643, {%r6951, %r6950};
	shr.u64 	%rd644, %rd1262, 6;
	xor.b64  	%rd645, %rd642, %rd644;
	xor.b64  	%rd646, %rd645, %rd643;
	shr.u64 	%rd647, %rd1265, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6952,%dummy}, %rd1265;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6953}, %rd1265;
	}
	shf.r.wrap.b32 	%r6954, %r6953, %r6952, 1;
	shf.r.wrap.b32 	%r6955, %r6952, %r6953, 1;
	mov.b64 	%rd648, {%r6955, %r6954};
	xor.b64  	%rd649, %rd648, %rd647;
	shf.r.wrap.b32 	%r6956, %r6953, %r6952, 8;
	shf.r.wrap.b32 	%r6957, %r6952, %r6953, 8;
	mov.b64 	%rd650, {%r6957, %r6956};
	xor.b64  	%rd651, %rd649, %rd650;
	add.s64 	%rd652, %rd1246, %rd1264;
	add.s64 	%rd653, %rd652, %rd646;
	add.s64 	%rd1264, %rd653, %rd651;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6958,%dummy}, %rd1263;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6959}, %rd1263;
	}
	shf.r.wrap.b32 	%r6960, %r6959, %r6958, 19;
	shf.r.wrap.b32 	%r6961, %r6958, %r6959, 19;
	mov.b64 	%rd654, {%r6961, %r6960};
	shf.l.wrap.b32 	%r6962, %r6958, %r6959, 3;
	shf.l.wrap.b32 	%r6963, %r6959, %r6958, 3;
	mov.b64 	%rd655, {%r6963, %r6962};
	shr.u64 	%rd656, %rd1263, 6;
	xor.b64  	%rd657, %rd654, %rd656;
	xor.b64  	%rd658, %rd657, %rd655;
	shr.u64 	%rd659, %rd1266, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6964,%dummy}, %rd1266;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6965}, %rd1266;
	}
	shf.r.wrap.b32 	%r6966, %r6965, %r6964, 1;
	shf.r.wrap.b32 	%r6967, %r6964, %r6965, 1;
	mov.b64 	%rd660, {%r6967, %r6966};
	xor.b64  	%rd661, %rd660, %rd659;
	shf.r.wrap.b32 	%r6968, %r6965, %r6964, 8;
	shf.r.wrap.b32 	%r6969, %r6964, %r6965, 8;
	mov.b64 	%rd662, {%r6969, %r6968};
	xor.b64  	%rd663, %rd661, %rd662;
	add.s64 	%rd664, %rd1245, %rd1265;
	add.s64 	%rd665, %rd664, %rd658;
	add.s64 	%rd1265, %rd665, %rd663;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6970,%dummy}, %rd1264;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6971}, %rd1264;
	}
	shf.r.wrap.b32 	%r6972, %r6971, %r6970, 19;
	shf.r.wrap.b32 	%r6973, %r6970, %r6971, 19;
	mov.b64 	%rd666, {%r6973, %r6972};
	shf.l.wrap.b32 	%r6974, %r6970, %r6971, 3;
	shf.l.wrap.b32 	%r6975, %r6971, %r6970, 3;
	mov.b64 	%rd667, {%r6975, %r6974};
	shr.u64 	%rd668, %rd1264, 6;
	xor.b64  	%rd669, %rd666, %rd668;
	xor.b64  	%rd670, %rd669, %rd667;
	shr.u64 	%rd671, %rd1267, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6976,%dummy}, %rd1267;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6977}, %rd1267;
	}
	shf.r.wrap.b32 	%r6978, %r6977, %r6976, 1;
	shf.r.wrap.b32 	%r6979, %r6976, %r6977, 1;
	mov.b64 	%rd672, {%r6979, %r6978};
	xor.b64  	%rd673, %rd672, %rd671;
	shf.r.wrap.b32 	%r6980, %r6977, %r6976, 8;
	shf.r.wrap.b32 	%r6981, %r6976, %r6977, 8;
	mov.b64 	%rd674, {%r6981, %r6980};
	xor.b64  	%rd675, %rd673, %rd674;
	add.s64 	%rd676, %rd1244, %rd1266;
	add.s64 	%rd677, %rd676, %rd670;
	add.s64 	%rd1266, %rd677, %rd675;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6982,%dummy}, %rd1265;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6983}, %rd1265;
	}
	shf.r.wrap.b32 	%r6984, %r6983, %r6982, 19;
	shf.r.wrap.b32 	%r6985, %r6982, %r6983, 19;
	mov.b64 	%rd678, {%r6985, %r6984};
	shf.l.wrap.b32 	%r6986, %r6982, %r6983, 3;
	shf.l.wrap.b32 	%r6987, %r6983, %r6982, 3;
	mov.b64 	%rd679, {%r6987, %r6986};
	shr.u64 	%rd680, %rd1265, 6;
	xor.b64  	%rd681, %rd678, %rd680;
	xor.b64  	%rd682, %rd681, %rd679;
	shr.u64 	%rd683, %rd1251, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6988,%dummy}, %rd1251;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6989}, %rd1251;
	}
	shf.r.wrap.b32 	%r6990, %r6989, %r6988, 1;
	shf.r.wrap.b32 	%r6991, %r6988, %r6989, 1;
	mov.b64 	%rd684, {%r6991, %r6990};
	xor.b64  	%rd685, %rd684, %rd683;
	shf.r.wrap.b32 	%r6992, %r6989, %r6988, 8;
	shf.r.wrap.b32 	%r6993, %r6988, %r6989, 8;
	mov.b64 	%rd686, {%r6993, %r6992};
	xor.b64  	%rd687, %rd685, %rd686;
	add.s64 	%rd688, %rd1260, %rd1267;
	add.s64 	%rd689, %rd688, %rd682;
	add.s64 	%rd1267, %rd689, %rd687;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6994,%dummy}, %rd1266;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6995}, %rd1266;
	}
	shf.r.wrap.b32 	%r6996, %r6995, %r6994, 19;
	shf.r.wrap.b32 	%r6997, %r6994, %r6995, 19;
	mov.b64 	%rd690, {%r6997, %r6996};
	shf.l.wrap.b32 	%r6998, %r6994, %r6995, 3;
	shf.l.wrap.b32 	%r6999, %r6995, %r6994, 3;
	mov.b64 	%rd691, {%r6999, %r6998};
	shr.u64 	%rd692, %rd1266, 6;
	xor.b64  	%rd693, %rd690, %rd692;
	xor.b64  	%rd694, %rd693, %rd691;
	shr.u64 	%rd695, %rd1250, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7000,%dummy}, %rd1250;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7001}, %rd1250;
	}
	shf.r.wrap.b32 	%r7002, %r7001, %r7000, 1;
	shf.r.wrap.b32 	%r7003, %r7000, %r7001, 1;
	mov.b64 	%rd696, {%r7003, %r7002};
	xor.b64  	%rd697, %rd696, %rd695;
	shf.r.wrap.b32 	%r7004, %r7001, %r7000, 8;
	shf.r.wrap.b32 	%r7005, %r7000, %r7001, 8;
	mov.b64 	%rd698, {%r7005, %r7004};
	xor.b64  	%rd699, %rd697, %rd698;
	add.s64 	%rd700, %rd1261, %rd1251;
	add.s64 	%rd701, %rd700, %rd694;
	add.s64 	%rd1251, %rd701, %rd699;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7006,%dummy}, %rd1267;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7007}, %rd1267;
	}
	shf.r.wrap.b32 	%r7008, %r7007, %r7006, 19;
	shf.r.wrap.b32 	%r7009, %r7006, %r7007, 19;
	mov.b64 	%rd702, {%r7009, %r7008};
	shf.l.wrap.b32 	%r7010, %r7006, %r7007, 3;
	shf.l.wrap.b32 	%r7011, %r7007, %r7006, 3;
	mov.b64 	%rd703, {%r7011, %r7010};
	shr.u64 	%rd704, %rd1267, 6;
	xor.b64  	%rd705, %rd702, %rd704;
	xor.b64  	%rd706, %rd705, %rd703;
	shr.u64 	%rd707, %rd1249, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7012,%dummy}, %rd1249;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7013}, %rd1249;
	}
	shf.r.wrap.b32 	%r7014, %r7013, %r7012, 1;
	shf.r.wrap.b32 	%r7015, %r7012, %r7013, 1;
	mov.b64 	%rd708, {%r7015, %r7014};
	xor.b64  	%rd709, %rd708, %rd707;
	shf.r.wrap.b32 	%r7016, %r7013, %r7012, 8;
	shf.r.wrap.b32 	%r7017, %r7012, %r7013, 8;
	mov.b64 	%rd710, {%r7017, %r7016};
	xor.b64  	%rd711, %rd709, %rd710;
	add.s64 	%rd712, %rd1262, %rd1250;
	add.s64 	%rd713, %rd712, %rd706;
	add.s64 	%rd1250, %rd713, %rd711;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7018,%dummy}, %rd1251;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7019}, %rd1251;
	}
	shf.r.wrap.b32 	%r7020, %r7019, %r7018, 19;
	shf.r.wrap.b32 	%r7021, %r7018, %r7019, 19;
	mov.b64 	%rd714, {%r7021, %r7020};
	shf.l.wrap.b32 	%r7022, %r7018, %r7019, 3;
	shf.l.wrap.b32 	%r7023, %r7019, %r7018, 3;
	mov.b64 	%rd715, {%r7023, %r7022};
	shr.u64 	%rd716, %rd1251, 6;
	xor.b64  	%rd717, %rd714, %rd716;
	xor.b64  	%rd718, %rd717, %rd715;
	shr.u64 	%rd719, %rd1248, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7024,%dummy}, %rd1248;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7025}, %rd1248;
	}
	shf.r.wrap.b32 	%r7026, %r7025, %r7024, 1;
	shf.r.wrap.b32 	%r7027, %r7024, %r7025, 1;
	mov.b64 	%rd720, {%r7027, %r7026};
	xor.b64  	%rd721, %rd720, %rd719;
	shf.r.wrap.b32 	%r7028, %r7025, %r7024, 8;
	shf.r.wrap.b32 	%r7029, %r7024, %r7025, 8;
	mov.b64 	%rd722, {%r7029, %r7028};
	xor.b64  	%rd723, %rd721, %rd722;
	add.s64 	%rd724, %rd1263, %rd1249;
	add.s64 	%rd725, %rd724, %rd718;
	add.s64 	%rd1249, %rd725, %rd723;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7030,%dummy}, %rd1250;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7031}, %rd1250;
	}
	shf.r.wrap.b32 	%r7032, %r7031, %r7030, 19;
	shf.r.wrap.b32 	%r7033, %r7030, %r7031, 19;
	mov.b64 	%rd726, {%r7033, %r7032};
	shf.l.wrap.b32 	%r7034, %r7030, %r7031, 3;
	shf.l.wrap.b32 	%r7035, %r7031, %r7030, 3;
	mov.b64 	%rd727, {%r7035, %r7034};
	shr.u64 	%rd728, %rd1250, 6;
	xor.b64  	%rd729, %rd726, %rd728;
	xor.b64  	%rd730, %rd729, %rd727;
	shr.u64 	%rd731, %rd1247, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7036,%dummy}, %rd1247;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7037}, %rd1247;
	}
	shf.r.wrap.b32 	%r7038, %r7037, %r7036, 1;
	shf.r.wrap.b32 	%r7039, %r7036, %r7037, 1;
	mov.b64 	%rd732, {%r7039, %r7038};
	xor.b64  	%rd733, %rd732, %rd731;
	shf.r.wrap.b32 	%r7040, %r7037, %r7036, 8;
	shf.r.wrap.b32 	%r7041, %r7036, %r7037, 8;
	mov.b64 	%rd734, {%r7041, %r7040};
	xor.b64  	%rd735, %rd733, %rd734;
	add.s64 	%rd736, %rd1264, %rd1248;
	add.s64 	%rd737, %rd736, %rd730;
	add.s64 	%rd1248, %rd737, %rd735;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7042,%dummy}, %rd1249;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7043}, %rd1249;
	}
	shf.r.wrap.b32 	%r7044, %r7043, %r7042, 19;
	shf.r.wrap.b32 	%r7045, %r7042, %r7043, 19;
	mov.b64 	%rd738, {%r7045, %r7044};
	shf.l.wrap.b32 	%r7046, %r7042, %r7043, 3;
	shf.l.wrap.b32 	%r7047, %r7043, %r7042, 3;
	mov.b64 	%rd739, {%r7047, %r7046};
	shr.u64 	%rd740, %rd1249, 6;
	xor.b64  	%rd741, %rd738, %rd740;
	xor.b64  	%rd742, %rd741, %rd739;
	shr.u64 	%rd743, %rd1246, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7048,%dummy}, %rd1246;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7049}, %rd1246;
	}
	shf.r.wrap.b32 	%r7050, %r7049, %r7048, 1;
	shf.r.wrap.b32 	%r7051, %r7048, %r7049, 1;
	mov.b64 	%rd744, {%r7051, %r7050};
	xor.b64  	%rd745, %rd744, %rd743;
	shf.r.wrap.b32 	%r7052, %r7049, %r7048, 8;
	shf.r.wrap.b32 	%r7053, %r7048, %r7049, 8;
	mov.b64 	%rd746, {%r7053, %r7052};
	xor.b64  	%rd747, %rd745, %rd746;
	add.s64 	%rd748, %rd1265, %rd1247;
	add.s64 	%rd749, %rd748, %rd742;
	add.s64 	%rd1247, %rd749, %rd747;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7054,%dummy}, %rd1248;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7055}, %rd1248;
	}
	shf.r.wrap.b32 	%r7056, %r7055, %r7054, 19;
	shf.r.wrap.b32 	%r7057, %r7054, %r7055, 19;
	mov.b64 	%rd750, {%r7057, %r7056};
	shf.l.wrap.b32 	%r7058, %r7054, %r7055, 3;
	shf.l.wrap.b32 	%r7059, %r7055, %r7054, 3;
	mov.b64 	%rd751, {%r7059, %r7058};
	shr.u64 	%rd752, %rd1248, 6;
	xor.b64  	%rd753, %rd750, %rd752;
	xor.b64  	%rd754, %rd753, %rd751;
	shr.u64 	%rd755, %rd1245, 7;
	shf.r.wrap.b32 	%r7060, %r6899, %r6898, 1;
	shf.r.wrap.b32 	%r7061, %r6898, %r6899, 1;
	mov.b64 	%rd756, {%r7061, %r7060};
	xor.b64  	%rd757, %rd756, %rd755;
	shf.r.wrap.b32 	%r7062, %r6899, %r6898, 8;
	shf.r.wrap.b32 	%r7063, %r6898, %r6899, 8;
	mov.b64 	%rd758, {%r7063, %r7062};
	xor.b64  	%rd759, %rd757, %rd758;
	add.s64 	%rd760, %rd1266, %rd1246;
	add.s64 	%rd761, %rd760, %rd754;
	add.s64 	%rd1246, %rd761, %rd759;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7064,%dummy}, %rd1247;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7065}, %rd1247;
	}
	shf.r.wrap.b32 	%r7066, %r7065, %r7064, 19;
	shf.r.wrap.b32 	%r7067, %r7064, %r7065, 19;
	mov.b64 	%rd762, {%r7067, %r7066};
	shf.l.wrap.b32 	%r7068, %r7064, %r7065, 3;
	shf.l.wrap.b32 	%r7069, %r7065, %r7064, 3;
	mov.b64 	%rd763, {%r7069, %r7068};
	shr.u64 	%rd764, %rd1247, 6;
	xor.b64  	%rd765, %rd762, %rd764;
	xor.b64  	%rd766, %rd765, %rd763;
	shr.u64 	%rd767, %rd1244, 7;
	shf.r.wrap.b32 	%r7070, %r6911, %r6910, 1;
	shf.r.wrap.b32 	%r7071, %r6910, %r6911, 1;
	mov.b64 	%rd768, {%r7071, %r7070};
	xor.b64  	%rd769, %rd768, %rd767;
	shf.r.wrap.b32 	%r7072, %r6911, %r6910, 8;
	shf.r.wrap.b32 	%r7073, %r6910, %r6911, 8;
	mov.b64 	%rd770, {%r7073, %r7072};
	xor.b64  	%rd771, %rd769, %rd770;
	add.s64 	%rd772, %rd1267, %rd1245;
	add.s64 	%rd773, %rd772, %rd766;
	add.s64 	%rd1245, %rd773, %rd771;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7074,%dummy}, %rd1246;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7075}, %rd1246;
	}
	shf.r.wrap.b32 	%r7076, %r7075, %r7074, 19;
	shf.r.wrap.b32 	%r7077, %r7074, %r7075, 19;
	mov.b64 	%rd774, {%r7077, %r7076};
	shf.l.wrap.b32 	%r7078, %r7074, %r7075, 3;
	shf.l.wrap.b32 	%r7079, %r7075, %r7074, 3;
	mov.b64 	%rd775, {%r7079, %r7078};
	shr.u64 	%rd776, %rd1246, 6;
	xor.b64  	%rd777, %rd774, %rd776;
	xor.b64  	%rd778, %rd777, %rd775;
	shf.r.wrap.b32 	%r7080, %r6923, %r6922, 1;
	shf.r.wrap.b32 	%r7081, %r6922, %r6923, 1;
	mov.b64 	%rd779, {%r7081, %r7080};
	shf.r.wrap.b32 	%r7082, %r6923, %r6922, 8;
	shf.r.wrap.b32 	%r7083, %r6922, %r6923, 8;
	mov.b64 	%rd780, {%r7083, %r7082};
	shr.u64 	%rd781, %rd1260, 7;
	xor.b64  	%rd782, %rd779, %rd781;
	xor.b64  	%rd783, %rd782, %rd780;
	add.s64 	%rd784, %rd1251, %rd1244;
	add.s64 	%rd785, %rd784, %rd778;
	add.s64 	%rd1244, %rd785, %rd783;
	mul.wide.s32 	%rd786, %r7394, 8;
	mov.u64 	%rd787, k_sha512;
	add.s64 	%rd788, %rd787, %rd786;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7084,%dummy}, %rd1256;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7085}, %rd1256;
	}
	shf.r.wrap.b32 	%r7086, %r7085, %r7084, 18;
	shf.r.wrap.b32 	%r7087, %r7084, %r7085, 18;
	mov.b64 	%rd789, {%r7087, %r7086};
	shf.r.wrap.b32 	%r7088, %r7085, %r7084, 14;
	shf.r.wrap.b32 	%r7089, %r7084, %r7085, 14;
	mov.b64 	%rd790, {%r7089, %r7088};
	xor.b64  	%rd791, %rd789, %rd790;
	shf.l.wrap.b32 	%r7090, %r7084, %r7085, 23;
	shf.l.wrap.b32 	%r7091, %r7085, %r7084, 23;
	mov.b64 	%rd792, {%r7091, %r7090};
	xor.b64  	%rd793, %rd791, %rd792;
	xor.b64  	%rd794, %rd1257, %rd1258;
	and.b64  	%rd795, %rd794, %rd1256;
	xor.b64  	%rd796, %rd795, %rd1258;
	add.s64 	%rd797, %rd796, %rd1259;
	add.s64 	%rd798, %rd797, %rd1260;
	ld.const.u64 	%rd799, [%rd788];
	add.s64 	%rd800, %rd798, %rd799;
	add.s64 	%rd801, %rd800, %rd793;
	add.s64 	%rd802, %rd801, %rd1255;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7092}, %rd1252;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7093,%dummy}, %rd1252;
	}
	shf.l.wrap.b32 	%r7094, %r7093, %r7092, 30;
	shf.l.wrap.b32 	%r7095, %r7092, %r7093, 30;
	mov.b64 	%rd803, {%r7095, %r7094};
	shf.r.wrap.b32 	%r7096, %r7092, %r7093, 28;
	shf.r.wrap.b32 	%r7097, %r7093, %r7092, 28;
	mov.b64 	%rd804, {%r7097, %r7096};
	xor.b64  	%rd805, %rd803, %rd804;
	shf.l.wrap.b32 	%r7098, %r7093, %r7092, 25;
	shf.l.wrap.b32 	%r7099, %r7092, %r7093, 25;
	mov.b64 	%rd806, {%r7099, %r7098};
	xor.b64  	%rd807, %rd805, %rd806;
	xor.b64  	%rd808, %rd1252, %rd1253;
	xor.b64  	%rd809, %rd1252, %rd1254;
	and.b64  	%rd810, %rd808, %rd809;
	xor.b64  	%rd811, %rd810, %rd1252;
	add.s64 	%rd812, %rd801, %rd811;
	add.s64 	%rd813, %rd812, %rd807;
	add.s32 	%r7100, %r7394, 1;
	mul.wide.s32 	%rd814, %r7100, 8;
	add.s64 	%rd815, %rd787, %rd814;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7101,%dummy}, %rd802;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7102}, %rd802;
	}
	shf.r.wrap.b32 	%r7103, %r7102, %r7101, 14;
	shf.r.wrap.b32 	%r7104, %r7101, %r7102, 14;
	mov.b64 	%rd816, {%r7104, %r7103};
	shf.r.wrap.b32 	%r7105, %r7102, %r7101, 18;
	shf.r.wrap.b32 	%r7106, %r7101, %r7102, 18;
	mov.b64 	%rd817, {%r7106, %r7105};
	xor.b64  	%rd818, %rd817, %rd816;
	shf.l.wrap.b32 	%r7107, %r7101, %r7102, 23;
	shf.l.wrap.b32 	%r7108, %r7102, %r7101, 23;
	mov.b64 	%rd819, {%r7108, %r7107};
	xor.b64  	%rd820, %rd818, %rd819;
	xor.b64  	%rd821, %rd1256, %rd1257;
	and.b64  	%rd822, %rd802, %rd821;
	xor.b64  	%rd823, %rd822, %rd1257;
	add.s64 	%rd824, %rd1261, %rd1258;
	ld.const.u64 	%rd825, [%rd815];
	add.s64 	%rd826, %rd824, %rd825;
	add.s64 	%rd827, %rd826, %rd823;
	add.s64 	%rd828, %rd827, %rd820;
	add.s64 	%rd829, %rd828, %rd1254;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7109,%dummy}, %rd813;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7110}, %rd813;
	}
	shf.r.wrap.b32 	%r7111, %r7110, %r7109, 28;
	shf.r.wrap.b32 	%r7112, %r7109, %r7110, 28;
	mov.b64 	%rd830, {%r7112, %r7111};
	shf.l.wrap.b32 	%r7113, %r7109, %r7110, 30;
	shf.l.wrap.b32 	%r7114, %r7110, %r7109, 30;
	mov.b64 	%rd831, {%r7114, %r7113};
	xor.b64  	%rd832, %rd831, %rd830;
	shf.l.wrap.b32 	%r7115, %r7109, %r7110, 25;
	shf.l.wrap.b32 	%r7116, %r7110, %r7109, 25;
	mov.b64 	%rd833, {%r7116, %r7115};
	xor.b64  	%rd834, %rd832, %rd833;
	xor.b64  	%rd835, %rd813, %rd1253;
	xor.b64  	%rd836, %rd813, %rd1252;
	and.b64  	%rd837, %rd836, %rd835;
	xor.b64  	%rd838, %rd837, %rd813;
	add.s64 	%rd839, %rd828, %rd838;
	add.s64 	%rd840, %rd839, %rd834;
	add.s32 	%r7117, %r7394, 2;
	mul.wide.s32 	%rd841, %r7117, 8;
	add.s64 	%rd842, %rd787, %rd841;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7118,%dummy}, %rd829;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7119}, %rd829;
	}
	shf.r.wrap.b32 	%r7120, %r7119, %r7118, 14;
	shf.r.wrap.b32 	%r7121, %r7118, %r7119, 14;
	mov.b64 	%rd843, {%r7121, %r7120};
	shf.r.wrap.b32 	%r7122, %r7119, %r7118, 18;
	shf.r.wrap.b32 	%r7123, %r7118, %r7119, 18;
	mov.b64 	%rd844, {%r7123, %r7122};
	xor.b64  	%rd845, %rd844, %rd843;
	shf.l.wrap.b32 	%r7124, %r7118, %r7119, 23;
	shf.l.wrap.b32 	%r7125, %r7119, %r7118, 23;
	mov.b64 	%rd846, {%r7125, %r7124};
	xor.b64  	%rd847, %rd845, %rd846;
	xor.b64  	%rd848, %rd802, %rd1256;
	and.b64  	%rd849, %rd829, %rd848;
	xor.b64  	%rd850, %rd849, %rd1256;
	add.s64 	%rd851, %rd1262, %rd1257;
	ld.const.u64 	%rd852, [%rd842];
	add.s64 	%rd853, %rd851, %rd852;
	add.s64 	%rd854, %rd853, %rd850;
	add.s64 	%rd855, %rd854, %rd847;
	add.s64 	%rd856, %rd855, %rd1253;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7126,%dummy}, %rd840;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7127}, %rd840;
	}
	shf.r.wrap.b32 	%r7128, %r7127, %r7126, 28;
	shf.r.wrap.b32 	%r7129, %r7126, %r7127, 28;
	mov.b64 	%rd857, {%r7129, %r7128};
	shf.l.wrap.b32 	%r7130, %r7126, %r7127, 30;
	shf.l.wrap.b32 	%r7131, %r7127, %r7126, 30;
	mov.b64 	%rd858, {%r7131, %r7130};
	xor.b64  	%rd859, %rd858, %rd857;
	shf.l.wrap.b32 	%r7132, %r7126, %r7127, 25;
	shf.l.wrap.b32 	%r7133, %r7127, %r7126, 25;
	mov.b64 	%rd860, {%r7133, %r7132};
	xor.b64  	%rd861, %rd859, %rd860;
	xor.b64  	%rd862, %rd840, %rd1252;
	xor.b64  	%rd863, %rd840, %rd813;
	and.b64  	%rd864, %rd863, %rd862;
	xor.b64  	%rd865, %rd864, %rd840;
	add.s64 	%rd866, %rd855, %rd865;
	add.s64 	%rd867, %rd866, %rd861;
	add.s32 	%r7134, %r7394, 3;
	mul.wide.s32 	%rd868, %r7134, 8;
	add.s64 	%rd869, %rd787, %rd868;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7135,%dummy}, %rd856;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7136}, %rd856;
	}
	shf.r.wrap.b32 	%r7137, %r7136, %r7135, 14;
	shf.r.wrap.b32 	%r7138, %r7135, %r7136, 14;
	mov.b64 	%rd870, {%r7138, %r7137};
	shf.r.wrap.b32 	%r7139, %r7136, %r7135, 18;
	shf.r.wrap.b32 	%r7140, %r7135, %r7136, 18;
	mov.b64 	%rd871, {%r7140, %r7139};
	xor.b64  	%rd872, %rd871, %rd870;
	shf.l.wrap.b32 	%r7141, %r7135, %r7136, 23;
	shf.l.wrap.b32 	%r7142, %r7136, %r7135, 23;
	mov.b64 	%rd873, {%r7142, %r7141};
	xor.b64  	%rd874, %rd872, %rd873;
	xor.b64  	%rd875, %rd829, %rd802;
	and.b64  	%rd876, %rd856, %rd875;
	xor.b64  	%rd877, %rd876, %rd802;
	add.s64 	%rd878, %rd1263, %rd1256;
	ld.const.u64 	%rd879, [%rd869];
	add.s64 	%rd880, %rd878, %rd879;
	add.s64 	%rd881, %rd880, %rd877;
	add.s64 	%rd882, %rd881, %rd874;
	add.s64 	%rd883, %rd882, %rd1252;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7143,%dummy}, %rd867;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7144}, %rd867;
	}
	shf.r.wrap.b32 	%r7145, %r7144, %r7143, 28;
	shf.r.wrap.b32 	%r7146, %r7143, %r7144, 28;
	mov.b64 	%rd884, {%r7146, %r7145};
	shf.l.wrap.b32 	%r7147, %r7143, %r7144, 30;
	shf.l.wrap.b32 	%r7148, %r7144, %r7143, 30;
	mov.b64 	%rd885, {%r7148, %r7147};
	xor.b64  	%rd886, %rd885, %rd884;
	shf.l.wrap.b32 	%r7149, %r7143, %r7144, 25;
	shf.l.wrap.b32 	%r7150, %r7144, %r7143, 25;
	mov.b64 	%rd887, {%r7150, %r7149};
	xor.b64  	%rd888, %rd886, %rd887;
	xor.b64  	%rd889, %rd867, %rd813;
	xor.b64  	%rd890, %rd867, %rd840;
	and.b64  	%rd891, %rd890, %rd889;
	xor.b64  	%rd892, %rd891, %rd867;
	add.s64 	%rd893, %rd882, %rd892;
	add.s64 	%rd894, %rd893, %rd888;
	add.s32 	%r7151, %r7394, 4;
	mul.wide.s32 	%rd895, %r7151, 8;
	add.s64 	%rd896, %rd787, %rd895;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7152,%dummy}, %rd883;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7153}, %rd883;
	}
	shf.r.wrap.b32 	%r7154, %r7153, %r7152, 14;
	shf.r.wrap.b32 	%r7155, %r7152, %r7153, 14;
	mov.b64 	%rd897, {%r7155, %r7154};
	shf.r.wrap.b32 	%r7156, %r7153, %r7152, 18;
	shf.r.wrap.b32 	%r7157, %r7152, %r7153, 18;
	mov.b64 	%rd898, {%r7157, %r7156};
	xor.b64  	%rd899, %rd898, %rd897;
	shf.l.wrap.b32 	%r7158, %r7152, %r7153, 23;
	shf.l.wrap.b32 	%r7159, %r7153, %r7152, 23;
	mov.b64 	%rd900, {%r7159, %r7158};
	xor.b64  	%rd901, %rd899, %rd900;
	xor.b64  	%rd902, %rd856, %rd829;
	and.b64  	%rd903, %rd883, %rd902;
	xor.b64  	%rd904, %rd903, %rd829;
	add.s64 	%rd905, %rd802, %rd1264;
	ld.const.u64 	%rd906, [%rd896];
	add.s64 	%rd907, %rd905, %rd906;
	add.s64 	%rd908, %rd907, %rd904;
	add.s64 	%rd909, %rd908, %rd901;
	add.s64 	%rd910, %rd909, %rd813;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7160,%dummy}, %rd894;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7161}, %rd894;
	}
	shf.r.wrap.b32 	%r7162, %r7161, %r7160, 28;
	shf.r.wrap.b32 	%r7163, %r7160, %r7161, 28;
	mov.b64 	%rd911, {%r7163, %r7162};
	shf.l.wrap.b32 	%r7164, %r7160, %r7161, 30;
	shf.l.wrap.b32 	%r7165, %r7161, %r7160, 30;
	mov.b64 	%rd912, {%r7165, %r7164};
	xor.b64  	%rd913, %rd912, %rd911;
	shf.l.wrap.b32 	%r7166, %r7160, %r7161, 25;
	shf.l.wrap.b32 	%r7167, %r7161, %r7160, 25;
	mov.b64 	%rd914, {%r7167, %r7166};
	xor.b64  	%rd915, %rd913, %rd914;
	xor.b64  	%rd916, %rd894, %rd840;
	xor.b64  	%rd917, %rd894, %rd867;
	and.b64  	%rd918, %rd917, %rd916;
	xor.b64  	%rd919, %rd918, %rd894;
	add.s64 	%rd920, %rd909, %rd919;
	add.s64 	%rd921, %rd920, %rd915;
	add.s32 	%r7168, %r7394, 5;
	mul.wide.s32 	%rd922, %r7168, 8;
	add.s64 	%rd923, %rd787, %rd922;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7169,%dummy}, %rd910;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7170}, %rd910;
	}
	shf.r.wrap.b32 	%r7171, %r7170, %r7169, 14;
	shf.r.wrap.b32 	%r7172, %r7169, %r7170, 14;
	mov.b64 	%rd924, {%r7172, %r7171};
	shf.r.wrap.b32 	%r7173, %r7170, %r7169, 18;
	shf.r.wrap.b32 	%r7174, %r7169, %r7170, 18;
	mov.b64 	%rd925, {%r7174, %r7173};
	xor.b64  	%rd926, %rd925, %rd924;
	shf.l.wrap.b32 	%r7175, %r7169, %r7170, 23;
	shf.l.wrap.b32 	%r7176, %r7170, %r7169, 23;
	mov.b64 	%rd927, {%r7176, %r7175};
	xor.b64  	%rd928, %rd926, %rd927;
	xor.b64  	%rd929, %rd883, %rd856;
	and.b64  	%rd930, %rd910, %rd929;
	xor.b64  	%rd931, %rd930, %rd856;
	add.s64 	%rd932, %rd829, %rd1265;
	ld.const.u64 	%rd933, [%rd923];
	add.s64 	%rd934, %rd932, %rd933;
	add.s64 	%rd935, %rd934, %rd931;
	add.s64 	%rd936, %rd935, %rd928;
	add.s64 	%rd937, %rd936, %rd840;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7177,%dummy}, %rd921;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7178}, %rd921;
	}
	shf.r.wrap.b32 	%r7179, %r7178, %r7177, 28;
	shf.r.wrap.b32 	%r7180, %r7177, %r7178, 28;
	mov.b64 	%rd938, {%r7180, %r7179};
	shf.l.wrap.b32 	%r7181, %r7177, %r7178, 30;
	shf.l.wrap.b32 	%r7182, %r7178, %r7177, 30;
	mov.b64 	%rd939, {%r7182, %r7181};
	xor.b64  	%rd940, %rd939, %rd938;
	shf.l.wrap.b32 	%r7183, %r7177, %r7178, 25;
	shf.l.wrap.b32 	%r7184, %r7178, %r7177, 25;
	mov.b64 	%rd941, {%r7184, %r7183};
	xor.b64  	%rd942, %rd940, %rd941;
	xor.b64  	%rd943, %rd921, %rd867;
	xor.b64  	%rd944, %rd921, %rd894;
	and.b64  	%rd945, %rd944, %rd943;
	xor.b64  	%rd946, %rd945, %rd921;
	add.s64 	%rd947, %rd936, %rd946;
	add.s64 	%rd948, %rd947, %rd942;
	add.s32 	%r7185, %r7394, 6;
	mul.wide.s32 	%rd949, %r7185, 8;
	add.s64 	%rd950, %rd787, %rd949;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7186,%dummy}, %rd937;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7187}, %rd937;
	}
	shf.r.wrap.b32 	%r7188, %r7187, %r7186, 14;
	shf.r.wrap.b32 	%r7189, %r7186, %r7187, 14;
	mov.b64 	%rd951, {%r7189, %r7188};
	shf.r.wrap.b32 	%r7190, %r7187, %r7186, 18;
	shf.r.wrap.b32 	%r7191, %r7186, %r7187, 18;
	mov.b64 	%rd952, {%r7191, %r7190};
	xor.b64  	%rd953, %rd952, %rd951;
	shf.l.wrap.b32 	%r7192, %r7186, %r7187, 23;
	shf.l.wrap.b32 	%r7193, %r7187, %r7186, 23;
	mov.b64 	%rd954, {%r7193, %r7192};
	xor.b64  	%rd955, %rd953, %rd954;
	xor.b64  	%rd956, %rd910, %rd883;
	and.b64  	%rd957, %rd937, %rd956;
	xor.b64  	%rd958, %rd957, %rd883;
	add.s64 	%rd959, %rd856, %rd1266;
	ld.const.u64 	%rd960, [%rd950];
	add.s64 	%rd961, %rd959, %rd960;
	add.s64 	%rd962, %rd961, %rd958;
	add.s64 	%rd963, %rd962, %rd955;
	add.s64 	%rd964, %rd963, %rd867;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7194,%dummy}, %rd948;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7195}, %rd948;
	}
	shf.r.wrap.b32 	%r7196, %r7195, %r7194, 28;
	shf.r.wrap.b32 	%r7197, %r7194, %r7195, 28;
	mov.b64 	%rd965, {%r7197, %r7196};
	shf.l.wrap.b32 	%r7198, %r7194, %r7195, 30;
	shf.l.wrap.b32 	%r7199, %r7195, %r7194, 30;
	mov.b64 	%rd966, {%r7199, %r7198};
	xor.b64  	%rd967, %rd966, %rd965;
	shf.l.wrap.b32 	%r7200, %r7194, %r7195, 25;
	shf.l.wrap.b32 	%r7201, %r7195, %r7194, 25;
	mov.b64 	%rd968, {%r7201, %r7200};
	xor.b64  	%rd969, %rd967, %rd968;
	xor.b64  	%rd970, %rd948, %rd894;
	xor.b64  	%rd971, %rd948, %rd921;
	and.b64  	%rd972, %rd971, %rd970;
	xor.b64  	%rd973, %rd972, %rd948;
	add.s64 	%rd974, %rd963, %rd973;
	add.s64 	%rd975, %rd974, %rd969;
	add.s32 	%r7202, %r7394, 7;
	mul.wide.s32 	%rd976, %r7202, 8;
	add.s64 	%rd977, %rd787, %rd976;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7203,%dummy}, %rd964;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7204}, %rd964;
	}
	shf.r.wrap.b32 	%r7205, %r7204, %r7203, 14;
	shf.r.wrap.b32 	%r7206, %r7203, %r7204, 14;
	mov.b64 	%rd978, {%r7206, %r7205};
	shf.r.wrap.b32 	%r7207, %r7204, %r7203, 18;
	shf.r.wrap.b32 	%r7208, %r7203, %r7204, 18;
	mov.b64 	%rd979, {%r7208, %r7207};
	xor.b64  	%rd980, %rd979, %rd978;
	shf.l.wrap.b32 	%r7209, %r7203, %r7204, 23;
	shf.l.wrap.b32 	%r7210, %r7204, %r7203, 23;
	mov.b64 	%rd981, {%r7210, %r7209};
	xor.b64  	%rd982, %rd980, %rd981;
	xor.b64  	%rd983, %rd937, %rd910;
	and.b64  	%rd984, %rd964, %rd983;
	xor.b64  	%rd985, %rd984, %rd910;
	add.s64 	%rd986, %rd883, %rd1267;
	ld.const.u64 	%rd987, [%rd977];
	add.s64 	%rd988, %rd986, %rd987;
	add.s64 	%rd989, %rd988, %rd985;
	add.s64 	%rd990, %rd989, %rd982;
	add.s64 	%rd991, %rd990, %rd894;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7211,%dummy}, %rd975;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7212}, %rd975;
	}
	shf.r.wrap.b32 	%r7213, %r7212, %r7211, 28;
	shf.r.wrap.b32 	%r7214, %r7211, %r7212, 28;
	mov.b64 	%rd992, {%r7214, %r7213};
	shf.l.wrap.b32 	%r7215, %r7211, %r7212, 30;
	shf.l.wrap.b32 	%r7216, %r7212, %r7211, 30;
	mov.b64 	%rd993, {%r7216, %r7215};
	xor.b64  	%rd994, %rd993, %rd992;
	shf.l.wrap.b32 	%r7217, %r7211, %r7212, 25;
	shf.l.wrap.b32 	%r7218, %r7212, %r7211, 25;
	mov.b64 	%rd995, {%r7218, %r7217};
	xor.b64  	%rd996, %rd994, %rd995;
	xor.b64  	%rd997, %rd975, %rd921;
	xor.b64  	%rd998, %rd975, %rd948;
	and.b64  	%rd999, %rd998, %rd997;
	xor.b64  	%rd1000, %rd999, %rd975;
	add.s64 	%rd1001, %rd990, %rd1000;
	add.s64 	%rd1002, %rd1001, %rd996;
	add.s32 	%r7219, %r7394, 8;
	mul.wide.s32 	%rd1003, %r7219, 8;
	add.s64 	%rd1004, %rd787, %rd1003;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7220,%dummy}, %rd991;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7221}, %rd991;
	}
	shf.r.wrap.b32 	%r7222, %r7221, %r7220, 14;
	shf.r.wrap.b32 	%r7223, %r7220, %r7221, 14;
	mov.b64 	%rd1005, {%r7223, %r7222};
	shf.r.wrap.b32 	%r7224, %r7221, %r7220, 18;
	shf.r.wrap.b32 	%r7225, %r7220, %r7221, 18;
	mov.b64 	%rd1006, {%r7225, %r7224};
	xor.b64  	%rd1007, %rd1006, %rd1005;
	shf.l.wrap.b32 	%r7226, %r7220, %r7221, 23;
	shf.l.wrap.b32 	%r7227, %r7221, %r7220, 23;
	mov.b64 	%rd1008, {%r7227, %r7226};
	xor.b64  	%rd1009, %rd1007, %rd1008;
	xor.b64  	%rd1010, %rd964, %rd937;
	and.b64  	%rd1011, %rd991, %rd1010;
	xor.b64  	%rd1012, %rd1011, %rd937;
	add.s64 	%rd1013, %rd910, %rd1251;
	ld.const.u64 	%rd1014, [%rd1004];
	add.s64 	%rd1015, %rd1013, %rd1014;
	add.s64 	%rd1016, %rd1015, %rd1012;
	add.s64 	%rd1017, %rd1016, %rd1009;
	add.s64 	%rd1018, %rd1017, %rd921;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7228,%dummy}, %rd1002;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7229}, %rd1002;
	}
	shf.r.wrap.b32 	%r7230, %r7229, %r7228, 28;
	shf.r.wrap.b32 	%r7231, %r7228, %r7229, 28;
	mov.b64 	%rd1019, {%r7231, %r7230};
	shf.l.wrap.b32 	%r7232, %r7228, %r7229, 30;
	shf.l.wrap.b32 	%r7233, %r7229, %r7228, 30;
	mov.b64 	%rd1020, {%r7233, %r7232};
	xor.b64  	%rd1021, %rd1020, %rd1019;
	shf.l.wrap.b32 	%r7234, %r7228, %r7229, 25;
	shf.l.wrap.b32 	%r7235, %r7229, %r7228, 25;
	mov.b64 	%rd1022, {%r7235, %r7234};
	xor.b64  	%rd1023, %rd1021, %rd1022;
	xor.b64  	%rd1024, %rd1002, %rd948;
	xor.b64  	%rd1025, %rd1002, %rd975;
	and.b64  	%rd1026, %rd1025, %rd1024;
	xor.b64  	%rd1027, %rd1026, %rd1002;
	add.s64 	%rd1028, %rd1017, %rd1027;
	add.s64 	%rd1029, %rd1028, %rd1023;
	add.s32 	%r7236, %r7394, 9;
	mul.wide.s32 	%rd1030, %r7236, 8;
	add.s64 	%rd1031, %rd787, %rd1030;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7237,%dummy}, %rd1018;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7238}, %rd1018;
	}
	shf.r.wrap.b32 	%r7239, %r7238, %r7237, 14;
	shf.r.wrap.b32 	%r7240, %r7237, %r7238, 14;
	mov.b64 	%rd1032, {%r7240, %r7239};
	shf.r.wrap.b32 	%r7241, %r7238, %r7237, 18;
	shf.r.wrap.b32 	%r7242, %r7237, %r7238, 18;
	mov.b64 	%rd1033, {%r7242, %r7241};
	xor.b64  	%rd1034, %rd1033, %rd1032;
	shf.l.wrap.b32 	%r7243, %r7237, %r7238, 23;
	shf.l.wrap.b32 	%r7244, %r7238, %r7237, 23;
	mov.b64 	%rd1035, {%r7244, %r7243};
	xor.b64  	%rd1036, %rd1034, %rd1035;
	xor.b64  	%rd1037, %rd991, %rd964;
	and.b64  	%rd1038, %rd1018, %rd1037;
	xor.b64  	%rd1039, %rd1038, %rd964;
	add.s64 	%rd1040, %rd937, %rd1250;
	ld.const.u64 	%rd1041, [%rd1031];
	add.s64 	%rd1042, %rd1040, %rd1041;
	add.s64 	%rd1043, %rd1042, %rd1039;
	add.s64 	%rd1044, %rd1043, %rd1036;
	add.s64 	%rd1045, %rd1044, %rd948;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7245,%dummy}, %rd1029;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7246}, %rd1029;
	}
	shf.r.wrap.b32 	%r7247, %r7246, %r7245, 28;
	shf.r.wrap.b32 	%r7248, %r7245, %r7246, 28;
	mov.b64 	%rd1046, {%r7248, %r7247};
	shf.l.wrap.b32 	%r7249, %r7245, %r7246, 30;
	shf.l.wrap.b32 	%r7250, %r7246, %r7245, 30;
	mov.b64 	%rd1047, {%r7250, %r7249};
	xor.b64  	%rd1048, %rd1047, %rd1046;
	shf.l.wrap.b32 	%r7251, %r7245, %r7246, 25;
	shf.l.wrap.b32 	%r7252, %r7246, %r7245, 25;
	mov.b64 	%rd1049, {%r7252, %r7251};
	xor.b64  	%rd1050, %rd1048, %rd1049;
	xor.b64  	%rd1051, %rd1029, %rd975;
	xor.b64  	%rd1052, %rd1029, %rd1002;
	and.b64  	%rd1053, %rd1052, %rd1051;
	xor.b64  	%rd1054, %rd1053, %rd1029;
	add.s64 	%rd1055, %rd1044, %rd1054;
	add.s64 	%rd1056, %rd1055, %rd1050;
	add.s32 	%r7253, %r7394, 10;
	mul.wide.s32 	%rd1057, %r7253, 8;
	add.s64 	%rd1058, %rd787, %rd1057;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7254,%dummy}, %rd1045;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7255}, %rd1045;
	}
	shf.r.wrap.b32 	%r7256, %r7255, %r7254, 14;
	shf.r.wrap.b32 	%r7257, %r7254, %r7255, 14;
	mov.b64 	%rd1059, {%r7257, %r7256};
	shf.r.wrap.b32 	%r7258, %r7255, %r7254, 18;
	shf.r.wrap.b32 	%r7259, %r7254, %r7255, 18;
	mov.b64 	%rd1060, {%r7259, %r7258};
	xor.b64  	%rd1061, %rd1060, %rd1059;
	shf.l.wrap.b32 	%r7260, %r7254, %r7255, 23;
	shf.l.wrap.b32 	%r7261, %r7255, %r7254, 23;
	mov.b64 	%rd1062, {%r7261, %r7260};
	xor.b64  	%rd1063, %rd1061, %rd1062;
	xor.b64  	%rd1064, %rd1018, %rd991;
	and.b64  	%rd1065, %rd1045, %rd1064;
	xor.b64  	%rd1066, %rd1065, %rd991;
	add.s64 	%rd1067, %rd964, %rd1249;
	ld.const.u64 	%rd1068, [%rd1058];
	add.s64 	%rd1069, %rd1067, %rd1068;
	add.s64 	%rd1070, %rd1069, %rd1066;
	add.s64 	%rd1071, %rd1070, %rd1063;
	add.s64 	%rd1072, %rd1071, %rd975;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7262,%dummy}, %rd1056;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7263}, %rd1056;
	}
	shf.r.wrap.b32 	%r7264, %r7263, %r7262, 28;
	shf.r.wrap.b32 	%r7265, %r7262, %r7263, 28;
	mov.b64 	%rd1073, {%r7265, %r7264};
	shf.l.wrap.b32 	%r7266, %r7262, %r7263, 30;
	shf.l.wrap.b32 	%r7267, %r7263, %r7262, 30;
	mov.b64 	%rd1074, {%r7267, %r7266};
	xor.b64  	%rd1075, %rd1074, %rd1073;
	shf.l.wrap.b32 	%r7268, %r7262, %r7263, 25;
	shf.l.wrap.b32 	%r7269, %r7263, %r7262, 25;
	mov.b64 	%rd1076, {%r7269, %r7268};
	xor.b64  	%rd1077, %rd1075, %rd1076;
	xor.b64  	%rd1078, %rd1056, %rd1002;
	xor.b64  	%rd1079, %rd1056, %rd1029;
	and.b64  	%rd1080, %rd1079, %rd1078;
	xor.b64  	%rd1081, %rd1080, %rd1056;
	add.s64 	%rd1082, %rd1071, %rd1081;
	add.s64 	%rd1083, %rd1082, %rd1077;
	add.s32 	%r7270, %r7394, 11;
	mul.wide.s32 	%rd1084, %r7270, 8;
	add.s64 	%rd1085, %rd787, %rd1084;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7271,%dummy}, %rd1072;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7272}, %rd1072;
	}
	shf.r.wrap.b32 	%r7273, %r7272, %r7271, 14;
	shf.r.wrap.b32 	%r7274, %r7271, %r7272, 14;
	mov.b64 	%rd1086, {%r7274, %r7273};
	shf.r.wrap.b32 	%r7275, %r7272, %r7271, 18;
	shf.r.wrap.b32 	%r7276, %r7271, %r7272, 18;
	mov.b64 	%rd1087, {%r7276, %r7275};
	xor.b64  	%rd1088, %rd1087, %rd1086;
	shf.l.wrap.b32 	%r7277, %r7271, %r7272, 23;
	shf.l.wrap.b32 	%r7278, %r7272, %r7271, 23;
	mov.b64 	%rd1089, {%r7278, %r7277};
	xor.b64  	%rd1090, %rd1088, %rd1089;
	xor.b64  	%rd1091, %rd1045, %rd1018;
	and.b64  	%rd1092, %rd1072, %rd1091;
	xor.b64  	%rd1093, %rd1092, %rd1018;
	add.s64 	%rd1094, %rd991, %rd1248;
	ld.const.u64 	%rd1095, [%rd1085];
	add.s64 	%rd1096, %rd1094, %rd1095;
	add.s64 	%rd1097, %rd1096, %rd1093;
	add.s64 	%rd1098, %rd1097, %rd1090;
	add.s64 	%rd1099, %rd1098, %rd1002;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7279,%dummy}, %rd1083;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7280}, %rd1083;
	}
	shf.r.wrap.b32 	%r7281, %r7280, %r7279, 28;
	shf.r.wrap.b32 	%r7282, %r7279, %r7280, 28;
	mov.b64 	%rd1100, {%r7282, %r7281};
	shf.l.wrap.b32 	%r7283, %r7279, %r7280, 30;
	shf.l.wrap.b32 	%r7284, %r7280, %r7279, 30;
	mov.b64 	%rd1101, {%r7284, %r7283};
	xor.b64  	%rd1102, %rd1101, %rd1100;
	shf.l.wrap.b32 	%r7285, %r7279, %r7280, 25;
	shf.l.wrap.b32 	%r7286, %r7280, %r7279, 25;
	mov.b64 	%rd1103, {%r7286, %r7285};
	xor.b64  	%rd1104, %rd1102, %rd1103;
	xor.b64  	%rd1105, %rd1083, %rd1029;
	xor.b64  	%rd1106, %rd1083, %rd1056;
	and.b64  	%rd1107, %rd1106, %rd1105;
	xor.b64  	%rd1108, %rd1107, %rd1083;
	add.s64 	%rd1109, %rd1098, %rd1108;
	add.s64 	%rd1110, %rd1109, %rd1104;
	add.s32 	%r7287, %r7394, 12;
	mul.wide.s32 	%rd1111, %r7287, 8;
	add.s64 	%rd1112, %rd787, %rd1111;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7288,%dummy}, %rd1099;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7289}, %rd1099;
	}
	shf.r.wrap.b32 	%r7290, %r7289, %r7288, 14;
	shf.r.wrap.b32 	%r7291, %r7288, %r7289, 14;
	mov.b64 	%rd1113, {%r7291, %r7290};
	shf.r.wrap.b32 	%r7292, %r7289, %r7288, 18;
	shf.r.wrap.b32 	%r7293, %r7288, %r7289, 18;
	mov.b64 	%rd1114, {%r7293, %r7292};
	xor.b64  	%rd1115, %rd1114, %rd1113;
	shf.l.wrap.b32 	%r7294, %r7288, %r7289, 23;
	shf.l.wrap.b32 	%r7295, %r7289, %r7288, 23;
	mov.b64 	%rd1116, {%r7295, %r7294};
	xor.b64  	%rd1117, %rd1115, %rd1116;
	xor.b64  	%rd1118, %rd1072, %rd1045;
	and.b64  	%rd1119, %rd1099, %rd1118;
	xor.b64  	%rd1120, %rd1119, %rd1045;
	add.s64 	%rd1121, %rd1018, %rd1247;
	ld.const.u64 	%rd1122, [%rd1112];
	add.s64 	%rd1123, %rd1121, %rd1122;
	add.s64 	%rd1124, %rd1123, %rd1120;
	add.s64 	%rd1125, %rd1124, %rd1117;
	add.s64 	%rd1259, %rd1125, %rd1029;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7296,%dummy}, %rd1110;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7297}, %rd1110;
	}
	shf.r.wrap.b32 	%r7298, %r7297, %r7296, 28;
	shf.r.wrap.b32 	%r7299, %r7296, %r7297, 28;
	mov.b64 	%rd1126, {%r7299, %r7298};
	shf.l.wrap.b32 	%r7300, %r7296, %r7297, 30;
	shf.l.wrap.b32 	%r7301, %r7297, %r7296, 30;
	mov.b64 	%rd1127, {%r7301, %r7300};
	xor.b64  	%rd1128, %rd1127, %rd1126;
	shf.l.wrap.b32 	%r7302, %r7296, %r7297, 25;
	shf.l.wrap.b32 	%r7303, %r7297, %r7296, 25;
	mov.b64 	%rd1129, {%r7303, %r7302};
	xor.b64  	%rd1130, %rd1128, %rd1129;
	xor.b64  	%rd1131, %rd1110, %rd1056;
	xor.b64  	%rd1132, %rd1110, %rd1083;
	and.b64  	%rd1133, %rd1132, %rd1131;
	xor.b64  	%rd1134, %rd1133, %rd1110;
	add.s64 	%rd1135, %rd1125, %rd1134;
	add.s64 	%rd1255, %rd1135, %rd1130;
	add.s32 	%r7304, %r7394, 13;
	mul.wide.s32 	%rd1136, %r7304, 8;
	add.s64 	%rd1137, %rd787, %rd1136;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7305,%dummy}, %rd1259;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7306}, %rd1259;
	}
	shf.r.wrap.b32 	%r7307, %r7306, %r7305, 14;
	shf.r.wrap.b32 	%r7308, %r7305, %r7306, 14;
	mov.b64 	%rd1138, {%r7308, %r7307};
	shf.r.wrap.b32 	%r7309, %r7306, %r7305, 18;
	shf.r.wrap.b32 	%r7310, %r7305, %r7306, 18;
	mov.b64 	%rd1139, {%r7310, %r7309};
	xor.b64  	%rd1140, %rd1139, %rd1138;
	shf.l.wrap.b32 	%r7311, %r7305, %r7306, 23;
	shf.l.wrap.b32 	%r7312, %r7306, %r7305, 23;
	mov.b64 	%rd1141, {%r7312, %r7311};
	xor.b64  	%rd1142, %rd1140, %rd1141;
	xor.b64  	%rd1143, %rd1099, %rd1072;
	and.b64  	%rd1144, %rd1259, %rd1143;
	xor.b64  	%rd1145, %rd1144, %rd1072;
	add.s64 	%rd1146, %rd1045, %rd1246;
	ld.const.u64 	%rd1147, [%rd1137];
	add.s64 	%rd1148, %rd1146, %rd1147;
	add.s64 	%rd1149, %rd1148, %rd1145;
	add.s64 	%rd1150, %rd1149, %rd1142;
	add.s64 	%rd1258, %rd1150, %rd1056;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7313,%dummy}, %rd1255;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7314}, %rd1255;
	}
	shf.r.wrap.b32 	%r7315, %r7314, %r7313, 28;
	shf.r.wrap.b32 	%r7316, %r7313, %r7314, 28;
	mov.b64 	%rd1151, {%r7316, %r7315};
	shf.l.wrap.b32 	%r7317, %r7313, %r7314, 30;
	shf.l.wrap.b32 	%r7318, %r7314, %r7313, 30;
	mov.b64 	%rd1152, {%r7318, %r7317};
	xor.b64  	%rd1153, %rd1152, %rd1151;
	shf.l.wrap.b32 	%r7319, %r7313, %r7314, 25;
	shf.l.wrap.b32 	%r7320, %r7314, %r7313, 25;
	mov.b64 	%rd1154, {%r7320, %r7319};
	xor.b64  	%rd1155, %rd1153, %rd1154;
	xor.b64  	%rd1156, %rd1255, %rd1083;
	xor.b64  	%rd1157, %rd1255, %rd1110;
	and.b64  	%rd1158, %rd1157, %rd1156;
	xor.b64  	%rd1159, %rd1158, %rd1255;
	add.s64 	%rd1160, %rd1150, %rd1159;
	add.s64 	%rd1254, %rd1160, %rd1155;
	add.s32 	%r7321, %r7394, 14;
	mul.wide.s32 	%rd1161, %r7321, 8;
	add.s64 	%rd1162, %rd787, %rd1161;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7322,%dummy}, %rd1258;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7323}, %rd1258;
	}
	shf.r.wrap.b32 	%r7324, %r7323, %r7322, 14;
	shf.r.wrap.b32 	%r7325, %r7322, %r7323, 14;
	mov.b64 	%rd1163, {%r7325, %r7324};
	shf.r.wrap.b32 	%r7326, %r7323, %r7322, 18;
	shf.r.wrap.b32 	%r7327, %r7322, %r7323, 18;
	mov.b64 	%rd1164, {%r7327, %r7326};
	xor.b64  	%rd1165, %rd1164, %rd1163;
	shf.l.wrap.b32 	%r7328, %r7322, %r7323, 23;
	shf.l.wrap.b32 	%r7329, %r7323, %r7322, 23;
	mov.b64 	%rd1166, {%r7329, %r7328};
	xor.b64  	%rd1167, %rd1165, %rd1166;
	xor.b64  	%rd1168, %rd1259, %rd1099;
	and.b64  	%rd1169, %rd1258, %rd1168;
	xor.b64  	%rd1170, %rd1169, %rd1099;
	add.s64 	%rd1171, %rd1072, %rd1245;
	ld.const.u64 	%rd1172, [%rd1162];
	add.s64 	%rd1173, %rd1171, %rd1172;
	add.s64 	%rd1174, %rd1173, %rd1170;
	add.s64 	%rd1175, %rd1174, %rd1167;
	add.s64 	%rd1257, %rd1175, %rd1083;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7330,%dummy}, %rd1254;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7331}, %rd1254;
	}
	shf.r.wrap.b32 	%r7332, %r7331, %r7330, 28;
	shf.r.wrap.b32 	%r7333, %r7330, %r7331, 28;
	mov.b64 	%rd1176, {%r7333, %r7332};
	shf.l.wrap.b32 	%r7334, %r7330, %r7331, 30;
	shf.l.wrap.b32 	%r7335, %r7331, %r7330, 30;
	mov.b64 	%rd1177, {%r7335, %r7334};
	xor.b64  	%rd1178, %rd1177, %rd1176;
	shf.l.wrap.b32 	%r7336, %r7330, %r7331, 25;
	shf.l.wrap.b32 	%r7337, %r7331, %r7330, 25;
	mov.b64 	%rd1179, {%r7337, %r7336};
	xor.b64  	%rd1180, %rd1178, %rd1179;
	xor.b64  	%rd1181, %rd1254, %rd1110;
	xor.b64  	%rd1182, %rd1254, %rd1255;
	and.b64  	%rd1183, %rd1182, %rd1181;
	xor.b64  	%rd1184, %rd1183, %rd1254;
	add.s64 	%rd1185, %rd1175, %rd1184;
	add.s64 	%rd1253, %rd1185, %rd1180;
	add.s32 	%r7338, %r7394, 15;
	mul.wide.s32 	%rd1186, %r7338, 8;
	add.s64 	%rd1187, %rd787, %rd1186;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7339,%dummy}, %rd1257;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7340}, %rd1257;
	}
	shf.r.wrap.b32 	%r7341, %r7340, %r7339, 14;
	shf.r.wrap.b32 	%r7342, %r7339, %r7340, 14;
	mov.b64 	%rd1188, {%r7342, %r7341};
	shf.r.wrap.b32 	%r7343, %r7340, %r7339, 18;
	shf.r.wrap.b32 	%r7344, %r7339, %r7340, 18;
	mov.b64 	%rd1189, {%r7344, %r7343};
	xor.b64  	%rd1190, %rd1189, %rd1188;
	shf.l.wrap.b32 	%r7345, %r7339, %r7340, 23;
	shf.l.wrap.b32 	%r7346, %r7340, %r7339, 23;
	mov.b64 	%rd1191, {%r7346, %r7345};
	xor.b64  	%rd1192, %rd1190, %rd1191;
	xor.b64  	%rd1193, %rd1258, %rd1259;
	and.b64  	%rd1194, %rd1257, %rd1193;
	xor.b64  	%rd1195, %rd1194, %rd1259;
	add.s64 	%rd1196, %rd1099, %rd1244;
	ld.const.u64 	%rd1197, [%rd1187];
	add.s64 	%rd1198, %rd1196, %rd1197;
	add.s64 	%rd1199, %rd1198, %rd1195;
	add.s64 	%rd1200, %rd1199, %rd1192;
	add.s64 	%rd1256, %rd1200, %rd1110;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7347,%dummy}, %rd1253;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7348}, %rd1253;
	}
	shf.r.wrap.b32 	%r7349, %r7348, %r7347, 28;
	shf.r.wrap.b32 	%r7350, %r7347, %r7348, 28;
	mov.b64 	%rd1201, {%r7350, %r7349};
	shf.l.wrap.b32 	%r7351, %r7347, %r7348, 30;
	shf.l.wrap.b32 	%r7352, %r7348, %r7347, 30;
	mov.b64 	%rd1202, {%r7352, %r7351};
	xor.b64  	%rd1203, %rd1202, %rd1201;
	shf.l.wrap.b32 	%r7353, %r7347, %r7348, 25;
	shf.l.wrap.b32 	%r7354, %r7348, %r7347, 25;
	mov.b64 	%rd1204, {%r7354, %r7353};
	xor.b64  	%rd1205, %rd1203, %rd1204;
	xor.b64  	%rd1206, %rd1253, %rd1255;
	xor.b64  	%rd1207, %rd1253, %rd1254;
	and.b64  	%rd1208, %rd1207, %rd1206;
	xor.b64  	%rd1209, %rd1208, %rd1253;
	add.s64 	%rd1210, %rd1200, %rd1209;
	add.s64 	%rd1252, %rd1210, %rd1205;
	add.s32 	%r7394, %r7394, 16;
	setp.lt.s32	%p49, %r7394, 80;
	@%p49 bra 	BB3_90;
	bra.uni 	BB3_91;

BB3_50:
	setp.eq.s32	%p18, %r673, 23;
	mov.u32 	%r7363, %r7362;
	mov.u32 	%r7364, %r7362;
	mov.u32 	%r7365, %r7362;
	mov.u32 	%r7366, %r7362;
	mov.u32 	%r7367, %r7362;
	mov.u32 	%r7368, %r7362;
	mov.u32 	%r7369, %r7362;
	mov.u32 	%r7370, %r7362;
	mov.u32 	%r7371, %r7362;
	mov.u32 	%r7372, %r7362;
	mov.u32 	%r7373, %r7362;
	mov.u32 	%r7374, %r7362;
	mov.u32 	%r7375, %r7362;
	mov.u32 	%r7376, %r7362;
	mov.u32 	%r7377, %r7362;
	mov.u32 	%r7378, %r7362;
	mov.u32 	%r7379, %r7362;
	mov.u32 	%r7380, %r7362;
	mov.u32 	%r7381, %r7362;
	mov.u32 	%r7382, %r7362;
	mov.u32 	%r7383, %r7362;
	mov.u32 	%r7384, %r7362;
	mov.u32 	%r7385, %r7362;
	mov.u32 	%r7386, %r7362;
	mov.u32 	%r7387, %r7362;
	mov.u32 	%r7388, %r7362;
	mov.u32 	%r7389, %r7362;
	mov.u32 	%r7390, %r7362;
	mov.u32 	%r7391, %r7362;
	mov.u32 	%r7392, %r7362;
	mov.u32 	%r7393, %r7362;
	@%p18 bra 	BB3_51;
	bra.uni 	BB3_89;

BB3_51:
	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7382, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2178, %r2179}, [%rd8+8];
	// inline asm
	prmt.b32 %r7383, %r2179, %r2178, %r7;
	// inline asm
	ld.local.u32 	%r2045, [%rd8+8];
	ld.local.u32 	%r2046, [%rd8+4];
	// inline asm
	prmt.b32 %r7384, %r2045, %r2046, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2180, %r2181}, [%rd8];
	// inline asm
	prmt.b32 %r7385, %r2181, %r2180, %r7;
	// inline asm
	ld.local.u32 	%r2053, [%rd8];
	ld.local.u32 	%r2054, [%rd7+12];
	// inline asm
	prmt.b32 %r7378, %r2053, %r2054, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2182, %r2183}, [%rd7+8];
	// inline asm
	prmt.b32 %r7379, %r2183, %r2182, %r7;
	// inline asm
	ld.local.u32 	%r2061, [%rd7+8];
	ld.local.u32 	%r2062, [%rd7+4];
	// inline asm
	prmt.b32 %r7380, %r2061, %r2062, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2184, %r2185}, [%rd7];
	// inline asm
	prmt.b32 %r7381, %r2185, %r2184, %r7;
	// inline asm
	ld.local.u32 	%r2069, [%rd7];
	ld.local.u32 	%r2070, [%rd6+12];
	// inline asm
	prmt.b32 %r7374, %r2069, %r2070, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2186, %r2187}, [%rd6+8];
	// inline asm
	prmt.b32 %r7375, %r2187, %r2186, %r7;
	// inline asm
	ld.local.u32 	%r2077, [%rd6+8];
	ld.local.u32 	%r2078, [%rd6+4];
	// inline asm
	prmt.b32 %r7376, %r2077, %r2078, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2188, %r2189}, [%rd6];
	// inline asm
	prmt.b32 %r7377, %r2189, %r2188, %r7;
	// inline asm
	ld.local.u32 	%r2085, [%rd6];
	ld.local.u32 	%r2086, [%rd5+12];
	// inline asm
	prmt.b32 %r7370, %r2085, %r2086, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2190, %r2191}, [%rd5+8];
	// inline asm
	prmt.b32 %r7371, %r2191, %r2190, %r7;
	// inline asm
	ld.local.u32 	%r2093, [%rd5+8];
	ld.local.u32 	%r2094, [%rd5+4];
	// inline asm
	prmt.b32 %r7372, %r2093, %r2094, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2192, %r2193}, [%rd5];
	// inline asm
	prmt.b32 %r7373, %r2193, %r2192, %r7;
	// inline asm
	ld.local.u32 	%r2101, [%rd5];
	ld.local.u32 	%r2102, [%rd4+12];
	// inline asm
	prmt.b32 %r7366, %r2101, %r2102, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2194, %r2195}, [%rd4+8];
	// inline asm
	prmt.b32 %r7367, %r2195, %r2194, %r7;
	// inline asm
	ld.local.u32 	%r2109, [%rd4+8];
	ld.local.u32 	%r2110, [%rd4+4];
	// inline asm
	prmt.b32 %r7368, %r2109, %r2110, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2196, %r2197}, [%rd4];
	// inline asm
	prmt.b32 %r7369, %r2197, %r2196, %r7;
	// inline asm
	ld.local.u32 	%r2117, [%rd4];
	ld.local.u32 	%r2118, [%rd3+12];
	// inline asm
	prmt.b32 %r7362, %r2117, %r2118, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2198, %r2199}, [%rd3+8];
	// inline asm
	prmt.b32 %r7363, %r2199, %r2198, %r7;
	// inline asm
	ld.local.u32 	%r2125, [%rd3+8];
	ld.local.u32 	%r2126, [%rd3+4];
	// inline asm
	prmt.b32 %r7364, %r2125, %r2126, %r7;
	// inline asm
	ld.local.v2.u32 	{%r2200, %r2201}, [%rd3];
	// inline asm
	prmt.b32 %r7365, %r2201, %r2200, %r7;
	// inline asm
	ld.local.u32 	%r2133, [%rd3];
	ld.local.u32 	%r2134, [%rd2+12];
	// inline asm
	prmt.b32 %r2132, %r2133, %r2134, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r2132;
	ld.local.v2.u32 	{%r2202, %r2203}, [%rd2+8];
	// inline asm
	prmt.b32 %r2136, %r2203, %r2202, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r2136;
	ld.local.u32 	%r2141, [%rd2+8];
	ld.local.u32 	%r2142, [%rd2+4];
	// inline asm
	prmt.b32 %r2140, %r2141, %r2142, %r7;
	// inline asm
	st.local.u32 	[%rd8+4], %r2140;
	ld.local.v2.u32 	{%r2204, %r2205}, [%rd2];
	// inline asm
	prmt.b32 %r2144, %r2205, %r2204, %r7;
	// inline asm
	st.local.u32 	[%rd8], %r2144;
	ld.local.u32 	%r2149, [%rd2];
	ld.local.u32 	%r2150, [%rd1+12];
	// inline asm
	prmt.b32 %r2148, %r2149, %r2150, %r7;
	// inline asm
	st.local.u32 	[%rd7+12], %r2148;
	ld.local.v2.u32 	{%r2206, %r2207}, [%rd1+8];
	// inline asm
	prmt.b32 %r2152, %r2207, %r2206, %r7;
	// inline asm
	st.local.u32 	[%rd7+8], %r2152;
	ld.local.u32 	%r2157, [%rd1+8];
	ld.local.u32 	%r2158, [%rd1+4];
	// inline asm
	prmt.b32 %r2156, %r2157, %r2158, %r7;
	// inline asm
	st.local.u32 	[%rd7+4], %r2156;
	ld.local.v2.u32 	{%r2208, %r2209}, [%rd1];
	// inline asm
	prmt.b32 %r2160, %r2209, %r2208, %r7;
	// inline asm
	st.local.u32 	[%rd7], %r2160;
	ld.local.u32 	%r2165, [%rd1];
	// inline asm
	prmt.b32 %r2164, %r2165, %r7360, %r7;
	// inline asm
	st.local.v4.u32 	[%rd6], {%r7360, %r7360, %r7360, %r2164};
	st.local.v4.u32 	[%rd5], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd4], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd3], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd2], {%r7360, %r7360, %r7360, %r7360};
	st.local.v2.u32 	[%rd1+8], {%r7360, %r7360};
	mov.u64 	%rd196, 0;
	st.local.u64 	[%rd1], %rd196;
	mov.u32 	%r7361, %r7360;
	bra.uni 	BB3_85;

BB3_34:
	setp.eq.s32	%p30, %r673, 15;
	mov.u32 	%r7363, %r7362;
	mov.u32 	%r7364, %r7362;
	mov.u32 	%r7365, %r7362;
	mov.u32 	%r7366, %r7362;
	mov.u32 	%r7367, %r7362;
	mov.u32 	%r7368, %r7362;
	mov.u32 	%r7369, %r7362;
	mov.u32 	%r7370, %r7362;
	mov.u32 	%r7371, %r7362;
	mov.u32 	%r7372, %r7362;
	mov.u32 	%r7373, %r7362;
	mov.u32 	%r7374, %r7362;
	mov.u32 	%r7375, %r7362;
	mov.u32 	%r7376, %r7362;
	mov.u32 	%r7377, %r7362;
	mov.u32 	%r7378, %r7362;
	mov.u32 	%r7379, %r7362;
	mov.u32 	%r7380, %r7362;
	mov.u32 	%r7381, %r7362;
	mov.u32 	%r7382, %r7362;
	mov.u32 	%r7383, %r7362;
	mov.u32 	%r7384, %r7362;
	mov.u32 	%r7385, %r7362;
	mov.u32 	%r7386, %r7362;
	mov.u32 	%r7387, %r7362;
	mov.u32 	%r7388, %r7362;
	mov.u32 	%r7389, %r7362;
	mov.u32 	%r7390, %r7362;
	mov.u32 	%r7391, %r7362;
	mov.u32 	%r7392, %r7362;
	mov.u32 	%r7393, %r7362;
	@%p30 bra 	BB3_35;
	bra.uni 	BB3_89;

BB3_35:
	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7374, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3606, %r3607}, [%rd8+8];
	// inline asm
	prmt.b32 %r7375, %r3607, %r3606, %r7;
	// inline asm
	ld.local.u32 	%r3465, [%rd8+8];
	ld.local.u32 	%r3466, [%rd8+4];
	// inline asm
	prmt.b32 %r7376, %r3465, %r3466, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3608, %r3609}, [%rd8];
	// inline asm
	prmt.b32 %r7377, %r3609, %r3608, %r7;
	// inline asm
	ld.local.u32 	%r3473, [%rd8];
	ld.local.u32 	%r3474, [%rd7+12];
	// inline asm
	prmt.b32 %r7370, %r3473, %r3474, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3610, %r3611}, [%rd7+8];
	// inline asm
	prmt.b32 %r7371, %r3611, %r3610, %r7;
	// inline asm
	ld.local.u32 	%r3481, [%rd7+8];
	ld.local.u32 	%r3482, [%rd7+4];
	// inline asm
	prmt.b32 %r7372, %r3481, %r3482, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3612, %r3613}, [%rd7];
	// inline asm
	prmt.b32 %r7373, %r3613, %r3612, %r7;
	// inline asm
	ld.local.u32 	%r3489, [%rd7];
	ld.local.u32 	%r3490, [%rd6+12];
	// inline asm
	prmt.b32 %r7366, %r3489, %r3490, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3614, %r3615}, [%rd6+8];
	// inline asm
	prmt.b32 %r7367, %r3615, %r3614, %r7;
	// inline asm
	ld.local.u32 	%r3497, [%rd6+8];
	ld.local.u32 	%r3498, [%rd6+4];
	// inline asm
	prmt.b32 %r7368, %r3497, %r3498, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3616, %r3617}, [%rd6];
	// inline asm
	prmt.b32 %r7369, %r3617, %r3616, %r7;
	// inline asm
	ld.local.u32 	%r3505, [%rd6];
	ld.local.u32 	%r3506, [%rd5+12];
	// inline asm
	prmt.b32 %r7362, %r3505, %r3506, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3618, %r3619}, [%rd5+8];
	// inline asm
	prmt.b32 %r7363, %r3619, %r3618, %r7;
	// inline asm
	ld.local.u32 	%r3513, [%rd5+8];
	ld.local.u32 	%r3514, [%rd5+4];
	// inline asm
	prmt.b32 %r7364, %r3513, %r3514, %r7;
	// inline asm
	ld.local.v2.u32 	{%r3620, %r3621}, [%rd5];
	// inline asm
	prmt.b32 %r7365, %r3621, %r3620, %r7;
	// inline asm
	ld.local.u32 	%r3521, [%rd5];
	ld.local.u32 	%r3522, [%rd4+12];
	// inline asm
	prmt.b32 %r3520, %r3521, %r3522, %r7;
	// inline asm
	st.local.u32 	[%rd8+12], %r3520;
	ld.local.v2.u32 	{%r3622, %r3623}, [%rd4+8];
	// inline asm
	prmt.b32 %r3524, %r3623, %r3622, %r7;
	// inline asm
	st.local.u32 	[%rd8+8], %r3524;
	ld.local.u32 	%r3529, [%rd4+8];
	ld.local.u32 	%r3530, [%rd4+4];
	// inline asm
	prmt.b32 %r3528, %r3529, %r3530, %r7;
	// inline asm
	st.local.u32 	[%rd8+4], %r3528;
	ld.local.v2.u32 	{%r3624, %r3625}, [%rd4];
	// inline asm
	prmt.b32 %r3532, %r3625, %r3624, %r7;
	// inline asm
	st.local.u32 	[%rd8], %r3532;
	ld.local.u32 	%r3537, [%rd4];
	ld.local.u32 	%r3538, [%rd3+12];
	// inline asm
	prmt.b32 %r3536, %r3537, %r3538, %r7;
	// inline asm
	st.local.u32 	[%rd7+12], %r3536;
	ld.local.v2.u32 	{%r3626, %r3627}, [%rd3+8];
	// inline asm
	prmt.b32 %r3540, %r3627, %r3626, %r7;
	// inline asm
	st.local.u32 	[%rd7+8], %r3540;
	ld.local.u32 	%r3545, [%rd3+8];
	ld.local.u32 	%r3546, [%rd3+4];
	// inline asm
	prmt.b32 %r3544, %r3545, %r3546, %r7;
	// inline asm
	st.local.u32 	[%rd7+4], %r3544;
	ld.local.v2.u32 	{%r3628, %r3629}, [%rd3];
	// inline asm
	prmt.b32 %r3548, %r3629, %r3628, %r7;
	// inline asm
	st.local.u32 	[%rd7], %r3548;
	ld.local.u32 	%r3553, [%rd3];
	ld.local.u32 	%r3554, [%rd2+12];
	// inline asm
	prmt.b32 %r3552, %r3553, %r3554, %r7;
	// inline asm
	st.local.u32 	[%rd6+12], %r3552;
	ld.local.v2.u32 	{%r3630, %r3631}, [%rd2+8];
	// inline asm
	prmt.b32 %r3556, %r3631, %r3630, %r7;
	// inline asm
	st.local.u32 	[%rd6+8], %r3556;
	ld.local.u32 	%r3561, [%rd2+8];
	ld.local.u32 	%r3562, [%rd2+4];
	// inline asm
	prmt.b32 %r3560, %r3561, %r3562, %r7;
	// inline asm
	st.local.u32 	[%rd6+4], %r3560;
	ld.local.v2.u32 	{%r3632, %r3633}, [%rd2];
	// inline asm
	prmt.b32 %r3564, %r3633, %r3632, %r7;
	// inline asm
	st.local.u32 	[%rd6], %r3564;
	ld.local.u32 	%r3569, [%rd2];
	ld.local.u32 	%r3570, [%rd1+12];
	// inline asm
	prmt.b32 %r3568, %r3569, %r3570, %r7;
	// inline asm
	st.local.u32 	[%rd5+12], %r3568;
	ld.local.v2.u32 	{%r3634, %r3635}, [%rd1+8];
	// inline asm
	prmt.b32 %r3572, %r3635, %r3634, %r7;
	// inline asm
	st.local.u32 	[%rd5+8], %r3572;
	ld.local.u32 	%r3577, [%rd1+8];
	ld.local.u32 	%r3578, [%rd1+4];
	// inline asm
	prmt.b32 %r3576, %r3577, %r3578, %r7;
	// inline asm
	st.local.u32 	[%rd5+4], %r3576;
	ld.local.v2.u32 	{%r3636, %r3637}, [%rd1];
	// inline asm
	prmt.b32 %r3580, %r3637, %r3636, %r7;
	// inline asm
	st.local.u32 	[%rd5], %r3580;
	ld.local.u32 	%r3585, [%rd1];
	// inline asm
	prmt.b32 %r3584, %r3585, %r7360, %r7;
	// inline asm
	st.local.v4.u32 	[%rd4], {%r7360, %r7360, %r7360, %r3584};
	st.local.v4.u32 	[%rd3], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd2], {%r7360, %r7360, %r7360, %r7360};
	st.local.v2.u32 	[%rd1+8], {%r7360, %r7360};
	mov.u64 	%rd204, 0;
	st.local.u64 	[%rd1], %rd204;
	mov.u32 	%r7361, %r7360;
	bra.uni 	BB3_83;

BB3_65:
	setp.ne.s32	%p7, %r673, 31;
	mov.u32 	%r7363, %r7362;
	mov.u32 	%r7364, %r7362;
	mov.u32 	%r7365, %r7362;
	mov.u32 	%r7366, %r7362;
	mov.u32 	%r7367, %r7362;
	mov.u32 	%r7368, %r7362;
	mov.u32 	%r7369, %r7362;
	mov.u32 	%r7370, %r7362;
	mov.u32 	%r7371, %r7362;
	mov.u32 	%r7372, %r7362;
	mov.u32 	%r7373, %r7362;
	mov.u32 	%r7374, %r7362;
	mov.u32 	%r7375, %r7362;
	mov.u32 	%r7376, %r7362;
	mov.u32 	%r7377, %r7362;
	mov.u32 	%r7378, %r7362;
	mov.u32 	%r7379, %r7362;
	mov.u32 	%r7380, %r7362;
	mov.u32 	%r7381, %r7362;
	mov.u32 	%r7382, %r7362;
	mov.u32 	%r7383, %r7362;
	mov.u32 	%r7384, %r7362;
	mov.u32 	%r7385, %r7362;
	mov.u32 	%r7386, %r7362;
	mov.u32 	%r7387, %r7362;
	mov.u32 	%r7388, %r7362;
	mov.u32 	%r7389, %r7362;
	mov.u32 	%r7390, %r7362;
	mov.u32 	%r7391, %r7362;
	mov.u32 	%r7392, %r7362;
	mov.u32 	%r7393, %r7362;
	@%p7 bra 	BB3_89;

	mov.u32 	%r7360, 0;
	// inline asm
	prmt.b32 %r7390, %r7360, %r6, %r7;
	// inline asm
	ld.local.v2.u32 	{%r814, %r815}, [%rd8+8];
	// inline asm
	prmt.b32 %r7391, %r815, %r814, %r7;
	// inline asm
	ld.local.u32 	%r689, [%rd8+8];
	ld.local.u32 	%r690, [%rd8+4];
	// inline asm
	prmt.b32 %r7392, %r689, %r690, %r7;
	// inline asm
	ld.local.v2.u32 	{%r816, %r817}, [%rd8];
	// inline asm
	prmt.b32 %r7393, %r817, %r816, %r7;
	// inline asm
	ld.local.u32 	%r697, [%rd8];
	ld.local.u32 	%r698, [%rd7+12];
	// inline asm
	prmt.b32 %r7386, %r697, %r698, %r7;
	// inline asm
	ld.local.v2.u32 	{%r818, %r819}, [%rd7+8];
	// inline asm
	prmt.b32 %r7387, %r819, %r818, %r7;
	// inline asm
	ld.local.u32 	%r705, [%rd7+8];
	ld.local.u32 	%r706, [%rd7+4];
	// inline asm
	prmt.b32 %r7388, %r705, %r706, %r7;
	// inline asm
	ld.local.v2.u32 	{%r820, %r821}, [%rd7];
	// inline asm
	prmt.b32 %r7389, %r821, %r820, %r7;
	// inline asm
	ld.local.u32 	%r713, [%rd7];
	ld.local.u32 	%r714, [%rd6+12];
	// inline asm
	prmt.b32 %r7382, %r713, %r714, %r7;
	// inline asm
	ld.local.v2.u32 	{%r822, %r823}, [%rd6+8];
	// inline asm
	prmt.b32 %r7383, %r823, %r822, %r7;
	// inline asm
	ld.local.u32 	%r721, [%rd6+8];
	ld.local.u32 	%r722, [%rd6+4];
	// inline asm
	prmt.b32 %r7384, %r721, %r722, %r7;
	// inline asm
	ld.local.v2.u32 	{%r824, %r825}, [%rd6];
	// inline asm
	prmt.b32 %r7385, %r825, %r824, %r7;
	// inline asm
	ld.local.u32 	%r729, [%rd6];
	ld.local.u32 	%r730, [%rd5+12];
	// inline asm
	prmt.b32 %r7378, %r729, %r730, %r7;
	// inline asm
	ld.local.v2.u32 	{%r826, %r827}, [%rd5+8];
	// inline asm
	prmt.b32 %r7379, %r827, %r826, %r7;
	// inline asm
	ld.local.u32 	%r737, [%rd5+8];
	ld.local.u32 	%r738, [%rd5+4];
	// inline asm
	prmt.b32 %r7380, %r737, %r738, %r7;
	// inline asm
	ld.local.v2.u32 	{%r828, %r829}, [%rd5];
	// inline asm
	prmt.b32 %r7381, %r829, %r828, %r7;
	// inline asm
	ld.local.u32 	%r745, [%rd5];
	ld.local.u32 	%r746, [%rd4+12];
	// inline asm
	prmt.b32 %r7374, %r745, %r746, %r7;
	// inline asm
	ld.local.v2.u32 	{%r830, %r831}, [%rd4+8];
	// inline asm
	prmt.b32 %r7375, %r831, %r830, %r7;
	// inline asm
	ld.local.u32 	%r753, [%rd4+8];
	ld.local.u32 	%r754, [%rd4+4];
	// inline asm
	prmt.b32 %r7376, %r753, %r754, %r7;
	// inline asm
	ld.local.v2.u32 	{%r832, %r833}, [%rd4];
	// inline asm
	prmt.b32 %r7377, %r833, %r832, %r7;
	// inline asm
	ld.local.u32 	%r761, [%rd4];
	ld.local.u32 	%r762, [%rd3+12];
	// inline asm
	prmt.b32 %r7370, %r761, %r762, %r7;
	// inline asm
	ld.local.v2.u32 	{%r834, %r835}, [%rd3+8];
	// inline asm
	prmt.b32 %r7371, %r835, %r834, %r7;
	// inline asm
	ld.local.u32 	%r769, [%rd3+8];
	ld.local.u32 	%r770, [%rd3+4];
	// inline asm
	prmt.b32 %r7372, %r769, %r770, %r7;
	// inline asm
	ld.local.v2.u32 	{%r836, %r837}, [%rd3];
	// inline asm
	prmt.b32 %r7373, %r837, %r836, %r7;
	// inline asm
	ld.local.u32 	%r777, [%rd3];
	ld.local.u32 	%r778, [%rd2+12];
	// inline asm
	prmt.b32 %r7366, %r777, %r778, %r7;
	// inline asm
	ld.local.v2.u32 	{%r838, %r839}, [%rd2+8];
	// inline asm
	prmt.b32 %r7367, %r839, %r838, %r7;
	// inline asm
	ld.local.u32 	%r785, [%rd2+8];
	ld.local.u32 	%r786, [%rd2+4];
	// inline asm
	prmt.b32 %r7368, %r785, %r786, %r7;
	// inline asm
	ld.local.v2.u32 	{%r840, %r841}, [%rd2];
	// inline asm
	prmt.b32 %r7369, %r841, %r840, %r7;
	// inline asm
	ld.local.u32 	%r793, [%rd2];
	ld.local.u32 	%r794, [%rd1+12];
	// inline asm
	prmt.b32 %r7362, %r793, %r794, %r7;
	// inline asm
	ld.local.v2.u32 	{%r842, %r843}, [%rd1+8];
	// inline asm
	prmt.b32 %r7363, %r843, %r842, %r7;
	// inline asm
	ld.local.u32 	%r801, [%rd1+8];
	ld.local.u32 	%r802, [%rd1+4];
	// inline asm
	prmt.b32 %r7364, %r801, %r802, %r7;
	// inline asm
	ld.local.v2.u32 	{%r844, %r845}, [%rd1];
	// inline asm
	prmt.b32 %r7365, %r845, %r844, %r7;
	// inline asm
	ld.local.u32 	%r809, [%rd1];
	// inline asm
	prmt.b32 %r808, %r809, %r7360, %r7;
	// inline asm
	st.local.v4.u32 	[%rd8], {%r7360, %r7360, %r7360, %r808};
	st.local.v4.u32 	[%rd7], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd6], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd5], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd4], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd3], {%r7360, %r7360, %r7360, %r7360};
	st.local.v4.u32 	[%rd2], {%r7360, %r7360, %r7360, %r7360};
	st.local.v2.u32 	[%rd1+8], {%r7360, %r7360};
	mov.u64 	%rd188, 0;
	st.local.u64 	[%rd1], %rd188;
	mov.u32 	%r7361, %r7360;
	bra.uni 	BB3_89;

BB3_2:
	add.u64 	%rd1227, %SP, 112;
	add.u64 	%rd1226, %SP, 96;
	add.u64 	%rd1225, %SP, 80;
	add.u64 	%rd1224, %SP, 64;
	add.u64 	%rd1223, %SP, 48;
	add.u64 	%rd1222, %SP, 32;
	add.u64 	%rd1221, %SP, 16;
	add.u64 	%rd1220, %SP, 0;
	ld.param.u32 	%r7357, [sha512_update_global_param_2];
	sub.s32 	%r640, %r7357, %r7358;
	// Callseq Start 37
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd106;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd1220;
	.param .b64 param2;
	st.param.b64	[param2+0], %rd1221;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd1222;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd1223;
	.param .b64 param5;
	st.param.b64	[param5+0], %rd1224;
	.param .b64 param6;
	st.param.b64	[param6+0], %rd1225;
	.param .b64 param7;
	st.param.b64	[param7+0], %rd1226;
	.param .b64 param8;
	st.param.b64	[param8+0], %rd1227;
	.param .b32 param9;
	st.param.b32	[param9+0], %r640;
	call.uni 
	sha512_update_128, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7, 
	param8, 
	param9
	);
	
	//{
	}// Callseq End 37
	ret;
}

.func sha512_final(
	.param .b64 sha512_final_param_0
)
{
	.reg .pred 	%p<195>;
	.reg .b32 	%r<1831>;
	.reg .b64 	%rd<2298>;


	ld.param.u64 	%rd242, [sha512_final_param_0];
	ld.u32 	%r1, [%rd242+192];
	and.b32  	%r2, %r1, 127;
	add.s64 	%rd1, %rd242, 64;
	add.s64 	%rd2, %rd242, 80;
	add.s64 	%rd3, %rd242, 96;
	add.s64 	%rd4, %rd242, 112;
	add.s64 	%rd5, %rd242, 128;
	add.s64 	%rd6, %rd242, 144;
	add.s64 	%rd7, %rd242, 160;
	add.s64 	%rd8, %rd242, 176;
	xor.b32  	%r67, %r2, 3;
	setp.gt.s32	%p1, %r67, 63;
	@%p1 bra 	BB4_128;

	setp.gt.s32	%p97, %r67, 31;
	@%p97 bra 	BB4_65;

	setp.gt.s32	%p145, %r67, 15;
	@%p145 bra 	BB4_34;

	setp.gt.s32	%p169, %r67, 7;
	@%p169 bra 	BB4_19;

	setp.gt.s32	%p181, %r67, 3;
	@%p181 bra 	BB4_12;

	setp.gt.s32	%p187, %r67, 1;
	@%p187 bra 	BB4_9;

	setp.eq.s32	%p190, %r67, 0;
	@%p190 bra 	BB4_318;
	bra.uni 	BB4_7;

BB4_318:
	ld.u32 	%r322, [%rd1];
	or.b32  	%r323, %r322, 128;
	st.u32 	[%rd1], %r323;
	bra.uni 	BB4_319;

BB4_128:
	setp.gt.s32	%p2, %r67, 95;
	@%p2 bra 	BB4_192;

	setp.gt.s32	%p50, %r67, 79;
	@%p50 bra 	BB4_161;

	setp.gt.s32	%p74, %r67, 71;
	@%p74 bra 	BB4_146;

	setp.gt.s32	%p86, %r67, 67;
	@%p86 bra 	BB4_139;

	setp.gt.s32	%p92, %r67, 65;
	@%p92 bra 	BB4_136;

	setp.eq.s32	%p95, %r67, 64;
	@%p95 bra 	BB4_286;
	bra.uni 	BB4_134;

BB4_286:
	ld.u32 	%r194, [%rd5];
	or.b32  	%r195, %r194, 128;
	st.u32 	[%rd5], %r195;
	bra.uni 	BB4_319;

BB4_65:
	setp.gt.s32	%p98, %r67, 47;
	@%p98 bra 	BB4_97;

	setp.gt.s32	%p122, %r67, 39;
	@%p122 bra 	BB4_82;

	setp.gt.s32	%p134, %r67, 35;
	@%p134 bra 	BB4_75;

	setp.gt.s32	%p140, %r67, 33;
	@%p140 bra 	BB4_72;

	setp.eq.s32	%p143, %r67, 32;
	@%p143 bra 	BB4_302;
	bra.uni 	BB4_70;

BB4_302:
	ld.u32 	%r258, [%rd3];
	or.b32  	%r259, %r258, 128;
	st.u32 	[%rd3], %r259;
	bra.uni 	BB4_319;

BB4_192:
	setp.gt.s32	%p3, %r67, 111;
	@%p3 bra 	BB4_224;

	setp.gt.s32	%p27, %r67, 103;
	@%p27 bra 	BB4_209;

	setp.gt.s32	%p39, %r67, 99;
	@%p39 bra 	BB4_202;

	setp.gt.s32	%p45, %r67, 97;
	@%p45 bra 	BB4_199;

	setp.eq.s32	%p48, %r67, 96;
	@%p48 bra 	BB4_270;
	bra.uni 	BB4_197;

BB4_270:
	ld.u32 	%r130, [%rd7];
	or.b32  	%r131, %r130, 128;
	st.u32 	[%rd7], %r131;
	bra.uni 	BB4_319;

BB4_34:
	setp.gt.s32	%p146, %r67, 23;
	@%p146 bra 	BB4_50;

	setp.gt.s32	%p158, %r67, 19;
	@%p158 bra 	BB4_43;

	setp.gt.s32	%p164, %r67, 17;
	@%p164 bra 	BB4_40;

	setp.eq.s32	%p167, %r67, 16;
	@%p167 bra 	BB4_310;
	bra.uni 	BB4_38;

BB4_310:
	ld.u32 	%r290, [%rd2];
	or.b32  	%r291, %r290, 128;
	st.u32 	[%rd2], %r291;
	bra.uni 	BB4_319;

BB4_161:
	setp.gt.s32	%p51, %r67, 87;
	@%p51 bra 	BB4_177;

	setp.gt.s32	%p63, %r67, 83;
	@%p63 bra 	BB4_170;

	setp.gt.s32	%p69, %r67, 81;
	@%p69 bra 	BB4_167;

	setp.eq.s32	%p72, %r67, 80;
	@%p72 bra 	BB4_278;
	bra.uni 	BB4_165;

BB4_278:
	ld.u32 	%r162, [%rd6];
	or.b32  	%r163, %r162, 128;
	st.u32 	[%rd6], %r163;
	bra.uni 	BB4_319;

BB4_97:
	setp.gt.s32	%p99, %r67, 55;
	@%p99 bra 	BB4_113;

	setp.gt.s32	%p111, %r67, 51;
	@%p111 bra 	BB4_106;

	setp.gt.s32	%p117, %r67, 49;
	@%p117 bra 	BB4_103;

	setp.eq.s32	%p120, %r67, 48;
	@%p120 bra 	BB4_294;
	bra.uni 	BB4_101;

BB4_294:
	ld.u32 	%r226, [%rd4];
	or.b32  	%r227, %r226, 128;
	st.u32 	[%rd4], %r227;
	bra.uni 	BB4_319;

BB4_224:
	setp.gt.s32	%p4, %r67, 119;
	@%p4 bra 	BB4_240;

	setp.gt.s32	%p16, %r67, 115;
	@%p16 bra 	BB4_233;

	setp.gt.s32	%p22, %r67, 113;
	@%p22 bra 	BB4_230;

	setp.eq.s32	%p25, %r67, 112;
	@%p25 bra 	BB4_262;
	bra.uni 	BB4_228;

BB4_262:
	ld.u32 	%r98, [%rd8];
	or.b32  	%r99, %r98, 128;
	st.u32 	[%rd8], %r99;
	bra.uni 	BB4_319;

BB4_19:
	setp.gt.s32	%p170, %r67, 11;
	@%p170 bra 	BB4_27;

	setp.gt.s32	%p176, %r67, 9;
	@%p176 bra 	BB4_24;

	setp.eq.s32	%p179, %r67, 8;
	@%p179 bra 	BB4_314;
	bra.uni 	BB4_22;

BB4_314:
	ld.u32 	%r306, [%rd242+72];
	or.b32  	%r307, %r306, 128;
	st.u32 	[%rd242+72], %r307;
	bra.uni 	BB4_319;

BB4_146:
	setp.gt.s32	%p75, %r67, 75;
	@%p75 bra 	BB4_154;

	setp.gt.s32	%p81, %r67, 73;
	@%p81 bra 	BB4_151;

	setp.eq.s32	%p84, %r67, 72;
	@%p84 bra 	BB4_282;
	bra.uni 	BB4_149;

BB4_282:
	ld.u32 	%r178, [%rd242+136];
	or.b32  	%r179, %r178, 128;
	st.u32 	[%rd242+136], %r179;
	bra.uni 	BB4_319;

BB4_82:
	setp.gt.s32	%p123, %r67, 43;
	@%p123 bra 	BB4_90;

	setp.gt.s32	%p129, %r67, 41;
	@%p129 bra 	BB4_87;

	setp.eq.s32	%p132, %r67, 40;
	@%p132 bra 	BB4_298;
	bra.uni 	BB4_85;

BB4_298:
	ld.u32 	%r242, [%rd242+104];
	or.b32  	%r243, %r242, 128;
	st.u32 	[%rd242+104], %r243;
	bra.uni 	BB4_319;

BB4_209:
	setp.gt.s32	%p28, %r67, 107;
	@%p28 bra 	BB4_217;

	setp.gt.s32	%p34, %r67, 105;
	@%p34 bra 	BB4_214;

	setp.eq.s32	%p37, %r67, 104;
	@%p37 bra 	BB4_266;
	bra.uni 	BB4_212;

BB4_266:
	ld.u32 	%r114, [%rd242+168];
	or.b32  	%r115, %r114, 128;
	st.u32 	[%rd242+168], %r115;
	bra.uni 	BB4_319;

BB4_50:
	setp.gt.s32	%p147, %r67, 27;
	@%p147 bra 	BB4_58;

	setp.gt.s32	%p153, %r67, 25;
	@%p153 bra 	BB4_55;

	setp.eq.s32	%p156, %r67, 24;
	@%p156 bra 	BB4_306;
	bra.uni 	BB4_53;

BB4_306:
	ld.u32 	%r274, [%rd242+88];
	or.b32  	%r275, %r274, 128;
	st.u32 	[%rd242+88], %r275;
	bra.uni 	BB4_319;

BB4_177:
	setp.gt.s32	%p52, %r67, 91;
	@%p52 bra 	BB4_185;

	setp.gt.s32	%p58, %r67, 89;
	@%p58 bra 	BB4_182;

	setp.eq.s32	%p61, %r67, 88;
	@%p61 bra 	BB4_274;
	bra.uni 	BB4_180;

BB4_274:
	ld.u32 	%r146, [%rd242+152];
	or.b32  	%r147, %r146, 128;
	st.u32 	[%rd242+152], %r147;
	bra.uni 	BB4_319;

BB4_113:
	setp.gt.s32	%p100, %r67, 59;
	@%p100 bra 	BB4_121;

	setp.gt.s32	%p106, %r67, 57;
	@%p106 bra 	BB4_118;

	setp.eq.s32	%p109, %r67, 56;
	@%p109 bra 	BB4_290;
	bra.uni 	BB4_116;

BB4_290:
	ld.u32 	%r210, [%rd242+120];
	or.b32  	%r211, %r210, 128;
	st.u32 	[%rd242+120], %r211;
	bra.uni 	BB4_319;

BB4_240:
	setp.gt.s32	%p5, %r67, 123;
	@%p5 bra 	BB4_248;

	setp.gt.s32	%p11, %r67, 121;
	@%p11 bra 	BB4_245;

	setp.eq.s32	%p14, %r67, 120;
	@%p14 bra 	BB4_258;
	bra.uni 	BB4_243;

BB4_258:
	ld.u32 	%r82, [%rd242+184];
	or.b32  	%r83, %r82, 128;
	st.u32 	[%rd242+184], %r83;
	bra.uni 	BB4_319;

BB4_12:
	setp.gt.s32	%p182, %r67, 5;
	@%p182 bra 	BB4_16;

	setp.eq.s32	%p185, %r67, 4;
	@%p185 bra 	BB4_316;
	bra.uni 	BB4_14;

BB4_316:
	ld.u32 	%r314, [%rd242+68];
	or.b32  	%r315, %r314, 128;
	st.u32 	[%rd242+68], %r315;
	bra.uni 	BB4_319;

BB4_139:
	setp.gt.s32	%p87, %r67, 69;
	@%p87 bra 	BB4_143;

	setp.eq.s32	%p90, %r67, 68;
	@%p90 bra 	BB4_284;
	bra.uni 	BB4_141;

BB4_284:
	ld.u32 	%r186, [%rd242+132];
	or.b32  	%r187, %r186, 128;
	st.u32 	[%rd242+132], %r187;
	bra.uni 	BB4_319;

BB4_75:
	setp.gt.s32	%p135, %r67, 37;
	@%p135 bra 	BB4_79;

	setp.eq.s32	%p138, %r67, 36;
	@%p138 bra 	BB4_300;
	bra.uni 	BB4_77;

BB4_300:
	ld.u32 	%r250, [%rd242+100];
	or.b32  	%r251, %r250, 128;
	st.u32 	[%rd242+100], %r251;
	bra.uni 	BB4_319;

BB4_202:
	setp.gt.s32	%p40, %r67, 101;
	@%p40 bra 	BB4_206;

	setp.eq.s32	%p43, %r67, 100;
	@%p43 bra 	BB4_268;
	bra.uni 	BB4_204;

BB4_268:
	ld.u32 	%r122, [%rd242+164];
	or.b32  	%r123, %r122, 128;
	st.u32 	[%rd242+164], %r123;
	bra.uni 	BB4_319;

BB4_43:
	setp.gt.s32	%p159, %r67, 21;
	@%p159 bra 	BB4_47;

	setp.eq.s32	%p162, %r67, 20;
	@%p162 bra 	BB4_308;
	bra.uni 	BB4_45;

BB4_308:
	ld.u32 	%r282, [%rd242+84];
	or.b32  	%r283, %r282, 128;
	st.u32 	[%rd242+84], %r283;
	bra.uni 	BB4_319;

BB4_170:
	setp.gt.s32	%p64, %r67, 85;
	@%p64 bra 	BB4_174;

	setp.eq.s32	%p67, %r67, 84;
	@%p67 bra 	BB4_276;
	bra.uni 	BB4_172;

BB4_276:
	ld.u32 	%r154, [%rd242+148];
	or.b32  	%r155, %r154, 128;
	st.u32 	[%rd242+148], %r155;
	bra.uni 	BB4_319;

BB4_106:
	setp.gt.s32	%p112, %r67, 53;
	@%p112 bra 	BB4_110;

	setp.eq.s32	%p115, %r67, 52;
	@%p115 bra 	BB4_292;
	bra.uni 	BB4_108;

BB4_292:
	ld.u32 	%r218, [%rd242+116];
	or.b32  	%r219, %r218, 128;
	st.u32 	[%rd242+116], %r219;
	bra.uni 	BB4_319;

BB4_233:
	setp.gt.s32	%p17, %r67, 117;
	@%p17 bra 	BB4_237;

	setp.eq.s32	%p20, %r67, 116;
	@%p20 bra 	BB4_260;
	bra.uni 	BB4_235;

BB4_260:
	ld.u32 	%r90, [%rd242+180];
	or.b32  	%r91, %r90, 128;
	st.u32 	[%rd242+180], %r91;
	bra.uni 	BB4_319;

BB4_27:
	setp.gt.s32	%p171, %r67, 13;
	@%p171 bra 	BB4_31;

	setp.eq.s32	%p174, %r67, 12;
	@%p174 bra 	BB4_312;
	bra.uni 	BB4_29;

BB4_312:
	ld.u32 	%r298, [%rd242+76];
	or.b32  	%r299, %r298, 128;
	st.u32 	[%rd242+76], %r299;
	bra.uni 	BB4_319;

BB4_154:
	setp.gt.s32	%p76, %r67, 77;
	@%p76 bra 	BB4_158;

	setp.eq.s32	%p79, %r67, 76;
	@%p79 bra 	BB4_280;
	bra.uni 	BB4_156;

BB4_280:
	ld.u32 	%r170, [%rd242+140];
	or.b32  	%r171, %r170, 128;
	st.u32 	[%rd242+140], %r171;
	bra.uni 	BB4_319;

BB4_90:
	setp.gt.s32	%p124, %r67, 45;
	@%p124 bra 	BB4_94;

	setp.eq.s32	%p127, %r67, 44;
	@%p127 bra 	BB4_296;
	bra.uni 	BB4_92;

BB4_296:
	ld.u32 	%r234, [%rd242+108];
	or.b32  	%r235, %r234, 128;
	st.u32 	[%rd242+108], %r235;
	bra.uni 	BB4_319;

BB4_217:
	setp.gt.s32	%p29, %r67, 109;
	@%p29 bra 	BB4_221;

	setp.eq.s32	%p32, %r67, 108;
	@%p32 bra 	BB4_264;
	bra.uni 	BB4_219;

BB4_264:
	ld.u32 	%r106, [%rd242+172];
	or.b32  	%r107, %r106, 128;
	st.u32 	[%rd242+172], %r107;
	bra.uni 	BB4_319;

BB4_58:
	setp.gt.s32	%p148, %r67, 29;
	@%p148 bra 	BB4_62;

	setp.eq.s32	%p151, %r67, 28;
	@%p151 bra 	BB4_304;
	bra.uni 	BB4_60;

BB4_304:
	ld.u32 	%r266, [%rd242+92];
	or.b32  	%r267, %r266, 128;
	st.u32 	[%rd242+92], %r267;
	bra.uni 	BB4_319;

BB4_185:
	setp.gt.s32	%p53, %r67, 93;
	@%p53 bra 	BB4_189;

	setp.eq.s32	%p56, %r67, 92;
	@%p56 bra 	BB4_272;
	bra.uni 	BB4_187;

BB4_272:
	ld.u32 	%r138, [%rd242+156];
	or.b32  	%r139, %r138, 128;
	st.u32 	[%rd242+156], %r139;
	bra.uni 	BB4_319;

BB4_121:
	setp.gt.s32	%p101, %r67, 61;
	@%p101 bra 	BB4_125;

	setp.eq.s32	%p104, %r67, 60;
	@%p104 bra 	BB4_288;
	bra.uni 	BB4_123;

BB4_288:
	ld.u32 	%r202, [%rd242+124];
	or.b32  	%r203, %r202, 128;
	st.u32 	[%rd242+124], %r203;
	bra.uni 	BB4_319;

BB4_248:
	setp.gt.s32	%p6, %r67, 125;
	@%p6 bra 	BB4_252;

	setp.eq.s32	%p9, %r67, 124;
	@%p9 bra 	BB4_256;
	bra.uni 	BB4_250;

BB4_256:
	ld.u32 	%r74, [%rd242+188];
	or.b32  	%r75, %r74, 128;
	st.u32 	[%rd242+188], %r75;
	bra.uni 	BB4_319;

BB4_9:
	setp.eq.s32	%p188, %r67, 2;
	@%p188 bra 	BB4_317;
	bra.uni 	BB4_10;

BB4_317:
	ld.u32 	%r318, [%rd1];
	or.b32  	%r319, %r318, 8388608;
	st.u32 	[%rd1], %r319;
	bra.uni 	BB4_319;

BB4_136:
	setp.eq.s32	%p93, %r67, 66;
	@%p93 bra 	BB4_285;
	bra.uni 	BB4_137;

BB4_285:
	ld.u32 	%r190, [%rd5];
	or.b32  	%r191, %r190, 8388608;
	st.u32 	[%rd5], %r191;
	bra.uni 	BB4_319;

BB4_72:
	setp.eq.s32	%p141, %r67, 34;
	@%p141 bra 	BB4_301;
	bra.uni 	BB4_73;

BB4_301:
	ld.u32 	%r254, [%rd3];
	or.b32  	%r255, %r254, 8388608;
	st.u32 	[%rd3], %r255;
	bra.uni 	BB4_319;

BB4_199:
	setp.eq.s32	%p46, %r67, 98;
	@%p46 bra 	BB4_269;
	bra.uni 	BB4_200;

BB4_269:
	ld.u32 	%r126, [%rd7];
	or.b32  	%r127, %r126, 8388608;
	st.u32 	[%rd7], %r127;
	bra.uni 	BB4_319;

BB4_40:
	setp.eq.s32	%p165, %r67, 18;
	@%p165 bra 	BB4_309;
	bra.uni 	BB4_41;

BB4_309:
	ld.u32 	%r286, [%rd2];
	or.b32  	%r287, %r286, 8388608;
	st.u32 	[%rd2], %r287;
	bra.uni 	BB4_319;

BB4_167:
	setp.eq.s32	%p70, %r67, 82;
	@%p70 bra 	BB4_277;
	bra.uni 	BB4_168;

BB4_277:
	ld.u32 	%r158, [%rd6];
	or.b32  	%r159, %r158, 8388608;
	st.u32 	[%rd6], %r159;
	bra.uni 	BB4_319;

BB4_103:
	setp.eq.s32	%p118, %r67, 50;
	@%p118 bra 	BB4_293;
	bra.uni 	BB4_104;

BB4_293:
	ld.u32 	%r222, [%rd4];
	or.b32  	%r223, %r222, 8388608;
	st.u32 	[%rd4], %r223;
	bra.uni 	BB4_319;

BB4_230:
	setp.eq.s32	%p23, %r67, 114;
	@%p23 bra 	BB4_261;
	bra.uni 	BB4_231;

BB4_261:
	ld.u32 	%r94, [%rd8];
	or.b32  	%r95, %r94, 8388608;
	st.u32 	[%rd8], %r95;
	bra.uni 	BB4_319;

BB4_24:
	setp.eq.s32	%p177, %r67, 10;
	@%p177 bra 	BB4_313;
	bra.uni 	BB4_25;

BB4_313:
	ld.u32 	%r302, [%rd242+72];
	or.b32  	%r303, %r302, 8388608;
	st.u32 	[%rd242+72], %r303;
	bra.uni 	BB4_319;

BB4_151:
	setp.eq.s32	%p82, %r67, 74;
	@%p82 bra 	BB4_281;
	bra.uni 	BB4_152;

BB4_281:
	ld.u32 	%r174, [%rd242+136];
	or.b32  	%r175, %r174, 8388608;
	st.u32 	[%rd242+136], %r175;
	bra.uni 	BB4_319;

BB4_87:
	setp.eq.s32	%p130, %r67, 42;
	@%p130 bra 	BB4_297;
	bra.uni 	BB4_88;

BB4_297:
	ld.u32 	%r238, [%rd242+104];
	or.b32  	%r239, %r238, 8388608;
	st.u32 	[%rd242+104], %r239;
	bra.uni 	BB4_319;

BB4_214:
	setp.eq.s32	%p35, %r67, 106;
	@%p35 bra 	BB4_265;
	bra.uni 	BB4_215;

BB4_265:
	ld.u32 	%r110, [%rd242+168];
	or.b32  	%r111, %r110, 8388608;
	st.u32 	[%rd242+168], %r111;
	bra.uni 	BB4_319;

BB4_55:
	setp.eq.s32	%p154, %r67, 26;
	@%p154 bra 	BB4_305;
	bra.uni 	BB4_56;

BB4_305:
	ld.u32 	%r270, [%rd242+88];
	or.b32  	%r271, %r270, 8388608;
	st.u32 	[%rd242+88], %r271;
	bra.uni 	BB4_319;

BB4_182:
	setp.eq.s32	%p59, %r67, 90;
	@%p59 bra 	BB4_273;
	bra.uni 	BB4_183;

BB4_273:
	ld.u32 	%r142, [%rd242+152];
	or.b32  	%r143, %r142, 8388608;
	st.u32 	[%rd242+152], %r143;
	bra.uni 	BB4_319;

BB4_118:
	setp.eq.s32	%p107, %r67, 58;
	@%p107 bra 	BB4_289;
	bra.uni 	BB4_119;

BB4_289:
	ld.u32 	%r206, [%rd242+120];
	or.b32  	%r207, %r206, 8388608;
	st.u32 	[%rd242+120], %r207;
	bra.uni 	BB4_319;

BB4_245:
	setp.eq.s32	%p12, %r67, 122;
	@%p12 bra 	BB4_257;
	bra.uni 	BB4_246;

BB4_257:
	ld.u32 	%r78, [%rd242+184];
	or.b32  	%r79, %r78, 8388608;
	st.u32 	[%rd242+184], %r79;
	bra.uni 	BB4_319;

BB4_16:
	setp.eq.s32	%p183, %r67, 6;
	@%p183 bra 	BB4_315;
	bra.uni 	BB4_17;

BB4_315:
	ld.u32 	%r310, [%rd242+68];
	or.b32  	%r311, %r310, 8388608;
	st.u32 	[%rd242+68], %r311;
	bra.uni 	BB4_319;

BB4_143:
	setp.eq.s32	%p88, %r67, 70;
	@%p88 bra 	BB4_283;
	bra.uni 	BB4_144;

BB4_283:
	ld.u32 	%r182, [%rd242+132];
	or.b32  	%r183, %r182, 8388608;
	st.u32 	[%rd242+132], %r183;
	bra.uni 	BB4_319;

BB4_79:
	setp.eq.s32	%p136, %r67, 38;
	@%p136 bra 	BB4_299;
	bra.uni 	BB4_80;

BB4_299:
	ld.u32 	%r246, [%rd242+100];
	or.b32  	%r247, %r246, 8388608;
	st.u32 	[%rd242+100], %r247;
	bra.uni 	BB4_319;

BB4_206:
	setp.eq.s32	%p41, %r67, 102;
	@%p41 bra 	BB4_267;
	bra.uni 	BB4_207;

BB4_267:
	ld.u32 	%r118, [%rd242+164];
	or.b32  	%r119, %r118, 8388608;
	st.u32 	[%rd242+164], %r119;
	bra.uni 	BB4_319;

BB4_47:
	setp.eq.s32	%p160, %r67, 22;
	@%p160 bra 	BB4_307;
	bra.uni 	BB4_48;

BB4_307:
	ld.u32 	%r278, [%rd242+84];
	or.b32  	%r279, %r278, 8388608;
	st.u32 	[%rd242+84], %r279;
	bra.uni 	BB4_319;

BB4_174:
	setp.eq.s32	%p65, %r67, 86;
	@%p65 bra 	BB4_275;
	bra.uni 	BB4_175;

BB4_275:
	ld.u32 	%r150, [%rd242+148];
	or.b32  	%r151, %r150, 8388608;
	st.u32 	[%rd242+148], %r151;
	bra.uni 	BB4_319;

BB4_110:
	setp.eq.s32	%p113, %r67, 54;
	@%p113 bra 	BB4_291;
	bra.uni 	BB4_111;

BB4_291:
	ld.u32 	%r214, [%rd242+116];
	or.b32  	%r215, %r214, 8388608;
	st.u32 	[%rd242+116], %r215;
	bra.uni 	BB4_319;

BB4_237:
	setp.eq.s32	%p18, %r67, 118;
	@%p18 bra 	BB4_259;
	bra.uni 	BB4_238;

BB4_259:
	ld.u32 	%r86, [%rd242+180];
	or.b32  	%r87, %r86, 8388608;
	st.u32 	[%rd242+180], %r87;
	bra.uni 	BB4_319;

BB4_31:
	setp.eq.s32	%p172, %r67, 14;
	@%p172 bra 	BB4_311;
	bra.uni 	BB4_32;

BB4_311:
	ld.u32 	%r294, [%rd242+76];
	or.b32  	%r295, %r294, 8388608;
	st.u32 	[%rd242+76], %r295;
	bra.uni 	BB4_319;

BB4_158:
	setp.eq.s32	%p77, %r67, 78;
	@%p77 bra 	BB4_279;
	bra.uni 	BB4_159;

BB4_279:
	ld.u32 	%r166, [%rd242+140];
	or.b32  	%r167, %r166, 8388608;
	st.u32 	[%rd242+140], %r167;
	bra.uni 	BB4_319;

BB4_94:
	setp.eq.s32	%p125, %r67, 46;
	@%p125 bra 	BB4_295;
	bra.uni 	BB4_95;

BB4_295:
	ld.u32 	%r230, [%rd242+108];
	or.b32  	%r231, %r230, 8388608;
	st.u32 	[%rd242+108], %r231;
	bra.uni 	BB4_319;

BB4_221:
	setp.eq.s32	%p30, %r67, 110;
	@%p30 bra 	BB4_263;
	bra.uni 	BB4_222;

BB4_263:
	ld.u32 	%r102, [%rd242+172];
	or.b32  	%r103, %r102, 8388608;
	st.u32 	[%rd242+172], %r103;
	bra.uni 	BB4_319;

BB4_62:
	setp.eq.s32	%p149, %r67, 30;
	@%p149 bra 	BB4_303;
	bra.uni 	BB4_63;

BB4_303:
	ld.u32 	%r262, [%rd242+92];
	or.b32  	%r263, %r262, 8388608;
	st.u32 	[%rd242+92], %r263;
	bra.uni 	BB4_319;

BB4_189:
	setp.eq.s32	%p54, %r67, 94;
	@%p54 bra 	BB4_271;
	bra.uni 	BB4_190;

BB4_271:
	ld.u32 	%r134, [%rd242+156];
	or.b32  	%r135, %r134, 8388608;
	st.u32 	[%rd242+156], %r135;
	bra.uni 	BB4_319;

BB4_125:
	setp.eq.s32	%p102, %r67, 62;
	@%p102 bra 	BB4_287;
	bra.uni 	BB4_126;

BB4_287:
	ld.u32 	%r198, [%rd242+124];
	or.b32  	%r199, %r198, 8388608;
	st.u32 	[%rd242+124], %r199;
	bra.uni 	BB4_319;

BB4_252:
	setp.eq.s32	%p7, %r67, 126;
	@%p7 bra 	BB4_255;
	bra.uni 	BB4_253;

BB4_255:
	ld.u32 	%r70, [%rd242+188];
	or.b32  	%r71, %r70, 8388608;
	st.u32 	[%rd242+188], %r71;
	bra.uni 	BB4_319;

BB4_7:
	setp.eq.s32	%p191, %r67, 1;
	@%p191 bra 	BB4_8;
	bra.uni 	BB4_319;

BB4_8:
	ld.u32 	%r320, [%rd1];
	or.b32  	%r321, %r320, 32768;
	st.u32 	[%rd1], %r321;
	bra.uni 	BB4_319;

BB4_134:
	setp.eq.s32	%p96, %r67, 65;
	@%p96 bra 	BB4_135;
	bra.uni 	BB4_319;

BB4_135:
	ld.u32 	%r192, [%rd5];
	or.b32  	%r193, %r192, 32768;
	st.u32 	[%rd5], %r193;
	bra.uni 	BB4_319;

BB4_70:
	setp.eq.s32	%p144, %r67, 33;
	@%p144 bra 	BB4_71;
	bra.uni 	BB4_319;

BB4_71:
	ld.u32 	%r256, [%rd3];
	or.b32  	%r257, %r256, 32768;
	st.u32 	[%rd3], %r257;
	bra.uni 	BB4_319;

BB4_197:
	setp.eq.s32	%p49, %r67, 97;
	@%p49 bra 	BB4_198;
	bra.uni 	BB4_319;

BB4_198:
	ld.u32 	%r128, [%rd7];
	or.b32  	%r129, %r128, 32768;
	st.u32 	[%rd7], %r129;
	bra.uni 	BB4_319;

BB4_38:
	setp.eq.s32	%p168, %r67, 17;
	@%p168 bra 	BB4_39;
	bra.uni 	BB4_319;

BB4_39:
	ld.u32 	%r288, [%rd2];
	or.b32  	%r289, %r288, 32768;
	st.u32 	[%rd2], %r289;
	bra.uni 	BB4_319;

BB4_165:
	setp.eq.s32	%p73, %r67, 81;
	@%p73 bra 	BB4_166;
	bra.uni 	BB4_319;

BB4_166:
	ld.u32 	%r160, [%rd6];
	or.b32  	%r161, %r160, 32768;
	st.u32 	[%rd6], %r161;
	bra.uni 	BB4_319;

BB4_101:
	setp.eq.s32	%p121, %r67, 49;
	@%p121 bra 	BB4_102;
	bra.uni 	BB4_319;

BB4_102:
	ld.u32 	%r224, [%rd4];
	or.b32  	%r225, %r224, 32768;
	st.u32 	[%rd4], %r225;
	bra.uni 	BB4_319;

BB4_228:
	setp.eq.s32	%p26, %r67, 113;
	@%p26 bra 	BB4_229;
	bra.uni 	BB4_319;

BB4_229:
	ld.u32 	%r96, [%rd8];
	or.b32  	%r97, %r96, 32768;
	st.u32 	[%rd8], %r97;
	bra.uni 	BB4_319;

BB4_22:
	setp.eq.s32	%p180, %r67, 9;
	@%p180 bra 	BB4_23;
	bra.uni 	BB4_319;

BB4_23:
	ld.u32 	%r304, [%rd242+72];
	or.b32  	%r305, %r304, 32768;
	st.u32 	[%rd242+72], %r305;
	bra.uni 	BB4_319;

BB4_149:
	setp.eq.s32	%p85, %r67, 73;
	@%p85 bra 	BB4_150;
	bra.uni 	BB4_319;

BB4_150:
	ld.u32 	%r176, [%rd242+136];
	or.b32  	%r177, %r176, 32768;
	st.u32 	[%rd242+136], %r177;
	bra.uni 	BB4_319;

BB4_85:
	setp.eq.s32	%p133, %r67, 41;
	@%p133 bra 	BB4_86;
	bra.uni 	BB4_319;

BB4_86:
	ld.u32 	%r240, [%rd242+104];
	or.b32  	%r241, %r240, 32768;
	st.u32 	[%rd242+104], %r241;
	bra.uni 	BB4_319;

BB4_212:
	setp.eq.s32	%p38, %r67, 105;
	@%p38 bra 	BB4_213;
	bra.uni 	BB4_319;

BB4_213:
	ld.u32 	%r112, [%rd242+168];
	or.b32  	%r113, %r112, 32768;
	st.u32 	[%rd242+168], %r113;
	bra.uni 	BB4_319;

BB4_53:
	setp.eq.s32	%p157, %r67, 25;
	@%p157 bra 	BB4_54;
	bra.uni 	BB4_319;

BB4_54:
	ld.u32 	%r272, [%rd242+88];
	or.b32  	%r273, %r272, 32768;
	st.u32 	[%rd242+88], %r273;
	bra.uni 	BB4_319;

BB4_180:
	setp.eq.s32	%p62, %r67, 89;
	@%p62 bra 	BB4_181;
	bra.uni 	BB4_319;

BB4_181:
	ld.u32 	%r144, [%rd242+152];
	or.b32  	%r145, %r144, 32768;
	st.u32 	[%rd242+152], %r145;
	bra.uni 	BB4_319;

BB4_116:
	setp.eq.s32	%p110, %r67, 57;
	@%p110 bra 	BB4_117;
	bra.uni 	BB4_319;

BB4_117:
	ld.u32 	%r208, [%rd242+120];
	or.b32  	%r209, %r208, 32768;
	st.u32 	[%rd242+120], %r209;
	bra.uni 	BB4_319;

BB4_243:
	setp.eq.s32	%p15, %r67, 121;
	@%p15 bra 	BB4_244;
	bra.uni 	BB4_319;

BB4_244:
	ld.u32 	%r80, [%rd242+184];
	or.b32  	%r81, %r80, 32768;
	st.u32 	[%rd242+184], %r81;
	bra.uni 	BB4_319;

BB4_14:
	setp.eq.s32	%p186, %r67, 5;
	@%p186 bra 	BB4_15;
	bra.uni 	BB4_319;

BB4_15:
	ld.u32 	%r312, [%rd242+68];
	or.b32  	%r313, %r312, 32768;
	st.u32 	[%rd242+68], %r313;
	bra.uni 	BB4_319;

BB4_141:
	setp.eq.s32	%p91, %r67, 69;
	@%p91 bra 	BB4_142;
	bra.uni 	BB4_319;

BB4_142:
	ld.u32 	%r184, [%rd242+132];
	or.b32  	%r185, %r184, 32768;
	st.u32 	[%rd242+132], %r185;
	bra.uni 	BB4_319;

BB4_77:
	setp.eq.s32	%p139, %r67, 37;
	@%p139 bra 	BB4_78;
	bra.uni 	BB4_319;

BB4_78:
	ld.u32 	%r248, [%rd242+100];
	or.b32  	%r249, %r248, 32768;
	st.u32 	[%rd242+100], %r249;
	bra.uni 	BB4_319;

BB4_204:
	setp.eq.s32	%p44, %r67, 101;
	@%p44 bra 	BB4_205;
	bra.uni 	BB4_319;

BB4_205:
	ld.u32 	%r120, [%rd242+164];
	or.b32  	%r121, %r120, 32768;
	st.u32 	[%rd242+164], %r121;
	bra.uni 	BB4_319;

BB4_45:
	setp.eq.s32	%p163, %r67, 21;
	@%p163 bra 	BB4_46;
	bra.uni 	BB4_319;

BB4_46:
	ld.u32 	%r280, [%rd242+84];
	or.b32  	%r281, %r280, 32768;
	st.u32 	[%rd242+84], %r281;
	bra.uni 	BB4_319;

BB4_172:
	setp.eq.s32	%p68, %r67, 85;
	@%p68 bra 	BB4_173;
	bra.uni 	BB4_319;

BB4_173:
	ld.u32 	%r152, [%rd242+148];
	or.b32  	%r153, %r152, 32768;
	st.u32 	[%rd242+148], %r153;
	bra.uni 	BB4_319;

BB4_108:
	setp.eq.s32	%p116, %r67, 53;
	@%p116 bra 	BB4_109;
	bra.uni 	BB4_319;

BB4_109:
	ld.u32 	%r216, [%rd242+116];
	or.b32  	%r217, %r216, 32768;
	st.u32 	[%rd242+116], %r217;
	bra.uni 	BB4_319;

BB4_235:
	setp.eq.s32	%p21, %r67, 117;
	@%p21 bra 	BB4_236;
	bra.uni 	BB4_319;

BB4_236:
	ld.u32 	%r88, [%rd242+180];
	or.b32  	%r89, %r88, 32768;
	st.u32 	[%rd242+180], %r89;
	bra.uni 	BB4_319;

BB4_29:
	setp.eq.s32	%p175, %r67, 13;
	@%p175 bra 	BB4_30;
	bra.uni 	BB4_319;

BB4_30:
	ld.u32 	%r296, [%rd242+76];
	or.b32  	%r297, %r296, 32768;
	st.u32 	[%rd242+76], %r297;
	bra.uni 	BB4_319;

BB4_156:
	setp.eq.s32	%p80, %r67, 77;
	@%p80 bra 	BB4_157;
	bra.uni 	BB4_319;

BB4_157:
	ld.u32 	%r168, [%rd242+140];
	or.b32  	%r169, %r168, 32768;
	st.u32 	[%rd242+140], %r169;
	bra.uni 	BB4_319;

BB4_92:
	setp.eq.s32	%p128, %r67, 45;
	@%p128 bra 	BB4_93;
	bra.uni 	BB4_319;

BB4_93:
	ld.u32 	%r232, [%rd242+108];
	or.b32  	%r233, %r232, 32768;
	st.u32 	[%rd242+108], %r233;
	bra.uni 	BB4_319;

BB4_219:
	setp.eq.s32	%p33, %r67, 109;
	@%p33 bra 	BB4_220;
	bra.uni 	BB4_319;

BB4_220:
	ld.u32 	%r104, [%rd242+172];
	or.b32  	%r105, %r104, 32768;
	st.u32 	[%rd242+172], %r105;
	bra.uni 	BB4_319;

BB4_60:
	setp.eq.s32	%p152, %r67, 29;
	@%p152 bra 	BB4_61;
	bra.uni 	BB4_319;

BB4_61:
	ld.u32 	%r264, [%rd242+92];
	or.b32  	%r265, %r264, 32768;
	st.u32 	[%rd242+92], %r265;
	bra.uni 	BB4_319;

BB4_187:
	setp.eq.s32	%p57, %r67, 93;
	@%p57 bra 	BB4_188;
	bra.uni 	BB4_319;

BB4_188:
	ld.u32 	%r136, [%rd242+156];
	or.b32  	%r137, %r136, 32768;
	st.u32 	[%rd242+156], %r137;
	bra.uni 	BB4_319;

BB4_123:
	setp.eq.s32	%p105, %r67, 61;
	@%p105 bra 	BB4_124;
	bra.uni 	BB4_319;

BB4_124:
	ld.u32 	%r200, [%rd242+124];
	or.b32  	%r201, %r200, 32768;
	st.u32 	[%rd242+124], %r201;
	bra.uni 	BB4_319;

BB4_250:
	setp.eq.s32	%p10, %r67, 125;
	@%p10 bra 	BB4_251;
	bra.uni 	BB4_319;

BB4_251:
	ld.u32 	%r72, [%rd242+188];
	or.b32  	%r73, %r72, 32768;
	st.u32 	[%rd242+188], %r73;
	bra.uni 	BB4_319;

BB4_10:
	setp.eq.s32	%p189, %r67, 3;
	@%p189 bra 	BB4_11;
	bra.uni 	BB4_319;

BB4_11:
	ld.u32 	%r316, [%rd1];
	or.b32  	%r317, %r316, -2147483648;
	st.u32 	[%rd1], %r317;
	bra.uni 	BB4_319;

BB4_137:
	setp.eq.s32	%p94, %r67, 67;
	@%p94 bra 	BB4_138;
	bra.uni 	BB4_319;

BB4_138:
	ld.u32 	%r188, [%rd5];
	or.b32  	%r189, %r188, -2147483648;
	st.u32 	[%rd5], %r189;
	bra.uni 	BB4_319;

BB4_73:
	setp.eq.s32	%p142, %r67, 35;
	@%p142 bra 	BB4_74;
	bra.uni 	BB4_319;

BB4_74:
	ld.u32 	%r252, [%rd3];
	or.b32  	%r253, %r252, -2147483648;
	st.u32 	[%rd3], %r253;
	bra.uni 	BB4_319;

BB4_200:
	setp.eq.s32	%p47, %r67, 99;
	@%p47 bra 	BB4_201;
	bra.uni 	BB4_319;

BB4_201:
	ld.u32 	%r124, [%rd7];
	or.b32  	%r125, %r124, -2147483648;
	st.u32 	[%rd7], %r125;
	bra.uni 	BB4_319;

BB4_41:
	setp.eq.s32	%p166, %r67, 19;
	@%p166 bra 	BB4_42;
	bra.uni 	BB4_319;

BB4_42:
	ld.u32 	%r284, [%rd2];
	or.b32  	%r285, %r284, -2147483648;
	st.u32 	[%rd2], %r285;
	bra.uni 	BB4_319;

BB4_168:
	setp.eq.s32	%p71, %r67, 83;
	@%p71 bra 	BB4_169;
	bra.uni 	BB4_319;

BB4_169:
	ld.u32 	%r156, [%rd6];
	or.b32  	%r157, %r156, -2147483648;
	st.u32 	[%rd6], %r157;
	bra.uni 	BB4_319;

BB4_104:
	setp.eq.s32	%p119, %r67, 51;
	@%p119 bra 	BB4_105;
	bra.uni 	BB4_319;

BB4_105:
	ld.u32 	%r220, [%rd4];
	or.b32  	%r221, %r220, -2147483648;
	st.u32 	[%rd4], %r221;
	bra.uni 	BB4_319;

BB4_231:
	setp.eq.s32	%p24, %r67, 115;
	@%p24 bra 	BB4_232;
	bra.uni 	BB4_319;

BB4_232:
	ld.u32 	%r92, [%rd8];
	or.b32  	%r93, %r92, -2147483648;
	st.u32 	[%rd8], %r93;
	bra.uni 	BB4_319;

BB4_25:
	setp.eq.s32	%p178, %r67, 11;
	@%p178 bra 	BB4_26;
	bra.uni 	BB4_319;

BB4_26:
	ld.u32 	%r300, [%rd242+72];
	or.b32  	%r301, %r300, -2147483648;
	st.u32 	[%rd242+72], %r301;
	bra.uni 	BB4_319;

BB4_152:
	setp.eq.s32	%p83, %r67, 75;
	@%p83 bra 	BB4_153;
	bra.uni 	BB4_319;

BB4_153:
	ld.u32 	%r172, [%rd242+136];
	or.b32  	%r173, %r172, -2147483648;
	st.u32 	[%rd242+136], %r173;
	bra.uni 	BB4_319;

BB4_88:
	setp.eq.s32	%p131, %r67, 43;
	@%p131 bra 	BB4_89;
	bra.uni 	BB4_319;

BB4_89:
	ld.u32 	%r236, [%rd242+104];
	or.b32  	%r237, %r236, -2147483648;
	st.u32 	[%rd242+104], %r237;
	bra.uni 	BB4_319;

BB4_215:
	setp.eq.s32	%p36, %r67, 107;
	@%p36 bra 	BB4_216;
	bra.uni 	BB4_319;

BB4_216:
	ld.u32 	%r108, [%rd242+168];
	or.b32  	%r109, %r108, -2147483648;
	st.u32 	[%rd242+168], %r109;
	bra.uni 	BB4_319;

BB4_56:
	setp.eq.s32	%p155, %r67, 27;
	@%p155 bra 	BB4_57;
	bra.uni 	BB4_319;

BB4_57:
	ld.u32 	%r268, [%rd242+88];
	or.b32  	%r269, %r268, -2147483648;
	st.u32 	[%rd242+88], %r269;
	bra.uni 	BB4_319;

BB4_183:
	setp.eq.s32	%p60, %r67, 91;
	@%p60 bra 	BB4_184;
	bra.uni 	BB4_319;

BB4_184:
	ld.u32 	%r140, [%rd242+152];
	or.b32  	%r141, %r140, -2147483648;
	st.u32 	[%rd242+152], %r141;
	bra.uni 	BB4_319;

BB4_119:
	setp.eq.s32	%p108, %r67, 59;
	@%p108 bra 	BB4_120;
	bra.uni 	BB4_319;

BB4_120:
	ld.u32 	%r204, [%rd242+120];
	or.b32  	%r205, %r204, -2147483648;
	st.u32 	[%rd242+120], %r205;
	bra.uni 	BB4_319;

BB4_246:
	setp.eq.s32	%p13, %r67, 123;
	@%p13 bra 	BB4_247;
	bra.uni 	BB4_319;

BB4_247:
	ld.u32 	%r76, [%rd242+184];
	or.b32  	%r77, %r76, -2147483648;
	st.u32 	[%rd242+184], %r77;
	bra.uni 	BB4_319;

BB4_17:
	setp.eq.s32	%p184, %r67, 7;
	@%p184 bra 	BB4_18;
	bra.uni 	BB4_319;

BB4_18:
	ld.u32 	%r308, [%rd242+68];
	or.b32  	%r309, %r308, -2147483648;
	st.u32 	[%rd242+68], %r309;
	bra.uni 	BB4_319;

BB4_144:
	setp.eq.s32	%p89, %r67, 71;
	@%p89 bra 	BB4_145;
	bra.uni 	BB4_319;

BB4_145:
	ld.u32 	%r180, [%rd242+132];
	or.b32  	%r181, %r180, -2147483648;
	st.u32 	[%rd242+132], %r181;
	bra.uni 	BB4_319;

BB4_80:
	setp.eq.s32	%p137, %r67, 39;
	@%p137 bra 	BB4_81;
	bra.uni 	BB4_319;

BB4_81:
	ld.u32 	%r244, [%rd242+100];
	or.b32  	%r245, %r244, -2147483648;
	st.u32 	[%rd242+100], %r245;
	bra.uni 	BB4_319;

BB4_207:
	setp.eq.s32	%p42, %r67, 103;
	@%p42 bra 	BB4_208;
	bra.uni 	BB4_319;

BB4_208:
	ld.u32 	%r116, [%rd242+164];
	or.b32  	%r117, %r116, -2147483648;
	st.u32 	[%rd242+164], %r117;
	bra.uni 	BB4_319;

BB4_48:
	setp.eq.s32	%p161, %r67, 23;
	@%p161 bra 	BB4_49;
	bra.uni 	BB4_319;

BB4_49:
	ld.u32 	%r276, [%rd242+84];
	or.b32  	%r277, %r276, -2147483648;
	st.u32 	[%rd242+84], %r277;
	bra.uni 	BB4_319;

BB4_175:
	setp.eq.s32	%p66, %r67, 87;
	@%p66 bra 	BB4_176;
	bra.uni 	BB4_319;

BB4_176:
	ld.u32 	%r148, [%rd242+148];
	or.b32  	%r149, %r148, -2147483648;
	st.u32 	[%rd242+148], %r149;
	bra.uni 	BB4_319;

BB4_111:
	setp.eq.s32	%p114, %r67, 55;
	@%p114 bra 	BB4_112;
	bra.uni 	BB4_319;

BB4_112:
	ld.u32 	%r212, [%rd242+116];
	or.b32  	%r213, %r212, -2147483648;
	st.u32 	[%rd242+116], %r213;
	bra.uni 	BB4_319;

BB4_238:
	setp.eq.s32	%p19, %r67, 119;
	@%p19 bra 	BB4_239;
	bra.uni 	BB4_319;

BB4_239:
	ld.u32 	%r84, [%rd242+180];
	or.b32  	%r85, %r84, -2147483648;
	st.u32 	[%rd242+180], %r85;
	bra.uni 	BB4_319;

BB4_32:
	setp.eq.s32	%p173, %r67, 15;
	@%p173 bra 	BB4_33;
	bra.uni 	BB4_319;

BB4_33:
	ld.u32 	%r292, [%rd242+76];
	or.b32  	%r293, %r292, -2147483648;
	st.u32 	[%rd242+76], %r293;
	bra.uni 	BB4_319;

BB4_159:
	setp.eq.s32	%p78, %r67, 79;
	@%p78 bra 	BB4_160;
	bra.uni 	BB4_319;

BB4_160:
	ld.u32 	%r164, [%rd242+140];
	or.b32  	%r165, %r164, -2147483648;
	st.u32 	[%rd242+140], %r165;
	bra.uni 	BB4_319;

BB4_95:
	setp.eq.s32	%p126, %r67, 47;
	@%p126 bra 	BB4_96;
	bra.uni 	BB4_319;

BB4_96:
	ld.u32 	%r228, [%rd242+108];
	or.b32  	%r229, %r228, -2147483648;
	st.u32 	[%rd242+108], %r229;
	bra.uni 	BB4_319;

BB4_222:
	setp.eq.s32	%p31, %r67, 111;
	@%p31 bra 	BB4_223;
	bra.uni 	BB4_319;

BB4_223:
	ld.u32 	%r100, [%rd242+172];
	or.b32  	%r101, %r100, -2147483648;
	st.u32 	[%rd242+172], %r101;
	bra.uni 	BB4_319;

BB4_63:
	setp.eq.s32	%p150, %r67, 31;
	@%p150 bra 	BB4_64;
	bra.uni 	BB4_319;

BB4_64:
	ld.u32 	%r260, [%rd242+92];
	or.b32  	%r261, %r260, -2147483648;
	st.u32 	[%rd242+92], %r261;
	bra.uni 	BB4_319;

BB4_190:
	setp.eq.s32	%p55, %r67, 95;
	@%p55 bra 	BB4_191;
	bra.uni 	BB4_319;

BB4_191:
	ld.u32 	%r132, [%rd242+156];
	or.b32  	%r133, %r132, -2147483648;
	st.u32 	[%rd242+156], %r133;
	bra.uni 	BB4_319;

BB4_126:
	setp.eq.s32	%p103, %r67, 63;
	@%p103 bra 	BB4_127;
	bra.uni 	BB4_319;

BB4_127:
	ld.u32 	%r196, [%rd242+124];
	or.b32  	%r197, %r196, -2147483648;
	st.u32 	[%rd242+124], %r197;
	bra.uni 	BB4_319;

BB4_253:
	setp.ne.s32	%p8, %r67, 127;
	@%p8 bra 	BB4_319;

	ld.u32 	%r68, [%rd242+188];
	or.b32  	%r69, %r68, -2147483648;
	st.u32 	[%rd242+188], %r69;

BB4_319:
	setp.gt.u32	%p192, %r2, 111;
	add.s64 	%rd9, %rd242, 8;
	add.s64 	%rd10, %rd242, 72;
	add.s64 	%rd12, %rd242, 88;
	add.s64 	%rd14, %rd242, 104;
	add.s64 	%rd16, %rd242, 120;
	add.s64 	%rd18, %rd242, 136;
	add.s64 	%rd20, %rd242, 152;
	add.s64 	%rd22, %rd242, 168;
	ld.u64 	%rd2272, [%rd242];
	ld.u64 	%rd2271, [%rd242+8];
	ld.u64 	%rd2270, [%rd242+16];
	ld.u64 	%rd2269, [%rd242+24];
	ld.u64 	%rd2268, [%rd242+32];
	ld.u64 	%rd2267, [%rd242+40];
	ld.u64 	%rd2266, [%rd242+48];
	ld.u64 	%rd2265, [%rd242+56];
	ld.u32 	%r1829, [%rd1];
	ld.u32 	%r1828, [%rd242+68];
	@%p192 bra 	BB4_321;
	bra.uni 	BB4_320;

BB4_321:
	mov.b64	%rd2241, {%r1828, %r1829};
	ld.u32 	%r325, [%rd242+72];
	ld.u32 	%r326, [%rd10+4];
	mov.b64	%rd2242, {%r326, %r325};
	ld.u32 	%r327, [%rd242+80];
	ld.u32 	%r328, [%rd2+4];
	mov.b64	%rd2243, {%r328, %r327};
	ld.u32 	%r329, [%rd242+88];
	ld.u32 	%r330, [%rd12+4];
	mov.b64	%rd2244, {%r330, %r329};
	ld.u32 	%r331, [%rd242+96];
	ld.u32 	%r332, [%rd3+4];
	mov.b64	%rd2245, {%r332, %r331};
	ld.u32 	%r333, [%rd242+104];
	ld.u32 	%r334, [%rd14+4];
	mov.b64	%rd2246, {%r334, %r333};
	ld.u32 	%r335, [%rd242+112];
	ld.u32 	%r336, [%rd4+4];
	mov.b64	%rd2247, {%r336, %r335};
	ld.u32 	%r337, [%rd242+120];
	ld.u32 	%r338, [%rd16+4];
	mov.b64	%rd2248, {%r338, %r337};
	ld.u32 	%r339, [%rd242+128];
	ld.u32 	%r340, [%rd5+4];
	mov.b64	%rd2232, {%r340, %r339};
	ld.u32 	%r341, [%rd242+136];
	ld.u32 	%r342, [%rd18+4];
	mov.b64	%rd2231, {%r342, %r341};
	ld.u32 	%r343, [%rd242+144];
	ld.u32 	%r344, [%rd6+4];
	mov.b64	%rd2230, {%r344, %r343};
	ld.u32 	%r345, [%rd242+152];
	ld.u32 	%r346, [%rd20+4];
	mov.b64	%rd2229, {%r346, %r345};
	ld.u32 	%r347, [%rd242+160];
	ld.u32 	%r348, [%rd7+4];
	mov.b64	%rd2228, {%r348, %r347};
	ld.u32 	%r349, [%rd242+168];
	ld.u32 	%r350, [%rd22+4];
	mov.b64	%rd2227, {%r350, %r349};
	ld.u32 	%r351, [%rd8];
	ld.u32 	%r352, [%rd8+4];
	mov.b64	%rd2226, {%r352, %r351};
	ld.u32 	%r353, [%rd242+184];
	ld.u32 	%r354, [%rd9+180];
	mov.b64	%rd2225, {%r354, %r353};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r355,%dummy}, %rd2268;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r356}, %rd2268;
	}
	shf.r.wrap.b32 	%r357, %r356, %r355, 18;
	shf.r.wrap.b32 	%r358, %r355, %r356, 18;
	mov.b64 	%rd243, {%r358, %r357};
	shf.r.wrap.b32 	%r359, %r356, %r355, 14;
	shf.r.wrap.b32 	%r360, %r355, %r356, 14;
	mov.b64 	%rd244, {%r360, %r359};
	xor.b64  	%rd245, %rd243, %rd244;
	shf.l.wrap.b32 	%r361, %r355, %r356, 23;
	shf.l.wrap.b32 	%r362, %r356, %r355, 23;
	mov.b64 	%rd246, {%r362, %r361};
	xor.b64  	%rd247, %rd245, %rd246;
	xor.b64  	%rd248, %rd2266, %rd2267;
	and.b64  	%rd249, %rd248, %rd2268;
	xor.b64  	%rd250, %rd249, %rd2266;
	add.s64 	%rd251, %rd250, %rd2265;
	add.s64 	%rd252, %rd251, %rd2241;
	ld.const.u64 	%rd64, [k_sha512];
	add.s64 	%rd253, %rd252, %rd64;
	add.s64 	%rd254, %rd253, %rd247;
	add.s64 	%rd255, %rd254, %rd2269;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r363}, %rd2272;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r364,%dummy}, %rd2272;
	}
	shf.l.wrap.b32 	%r365, %r364, %r363, 30;
	shf.l.wrap.b32 	%r366, %r363, %r364, 30;
	mov.b64 	%rd256, {%r366, %r365};
	shf.r.wrap.b32 	%r367, %r363, %r364, 28;
	shf.r.wrap.b32 	%r368, %r364, %r363, 28;
	mov.b64 	%rd257, {%r368, %r367};
	xor.b64  	%rd258, %rd256, %rd257;
	shf.l.wrap.b32 	%r369, %r364, %r363, 25;
	shf.l.wrap.b32 	%r370, %r363, %r364, 25;
	mov.b64 	%rd259, {%r370, %r369};
	xor.b64  	%rd260, %rd258, %rd259;
	xor.b64  	%rd261, %rd2271, %rd2272;
	xor.b64  	%rd262, %rd2270, %rd2272;
	and.b64  	%rd263, %rd262, %rd261;
	xor.b64  	%rd264, %rd263, %rd2272;
	add.s64 	%rd265, %rd254, %rd264;
	add.s64 	%rd266, %rd265, %rd260;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r371,%dummy}, %rd255;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r372}, %rd255;
	}
	shf.r.wrap.b32 	%r373, %r372, %r371, 14;
	shf.r.wrap.b32 	%r374, %r371, %r372, 14;
	mov.b64 	%rd267, {%r374, %r373};
	shf.r.wrap.b32 	%r375, %r372, %r371, 18;
	shf.r.wrap.b32 	%r376, %r371, %r372, 18;
	mov.b64 	%rd268, {%r376, %r375};
	xor.b64  	%rd269, %rd268, %rd267;
	shf.l.wrap.b32 	%r377, %r371, %r372, 23;
	shf.l.wrap.b32 	%r378, %r372, %r371, 23;
	mov.b64 	%rd270, {%r378, %r377};
	xor.b64  	%rd271, %rd269, %rd270;
	xor.b64  	%rd272, %rd2267, %rd2268;
	and.b64  	%rd273, %rd255, %rd272;
	xor.b64  	%rd274, %rd273, %rd2267;
	add.s64 	%rd275, %rd2242, %rd2266;
	ld.const.u64 	%rd65, [k_sha512+8];
	add.s64 	%rd276, %rd275, %rd65;
	add.s64 	%rd277, %rd276, %rd274;
	add.s64 	%rd278, %rd277, %rd271;
	add.s64 	%rd279, %rd278, %rd2270;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r379,%dummy}, %rd266;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r380}, %rd266;
	}
	shf.r.wrap.b32 	%r381, %r380, %r379, 28;
	shf.r.wrap.b32 	%r382, %r379, %r380, 28;
	mov.b64 	%rd280, {%r382, %r381};
	shf.l.wrap.b32 	%r383, %r379, %r380, 30;
	shf.l.wrap.b32 	%r384, %r380, %r379, 30;
	mov.b64 	%rd281, {%r384, %r383};
	xor.b64  	%rd282, %rd281, %rd280;
	shf.l.wrap.b32 	%r385, %r379, %r380, 25;
	shf.l.wrap.b32 	%r386, %r380, %r379, 25;
	mov.b64 	%rd283, {%r386, %r385};
	xor.b64  	%rd284, %rd282, %rd283;
	xor.b64  	%rd285, %rd266, %rd2271;
	xor.b64  	%rd286, %rd266, %rd2272;
	and.b64  	%rd287, %rd286, %rd285;
	xor.b64  	%rd288, %rd287, %rd266;
	add.s64 	%rd289, %rd278, %rd288;
	add.s64 	%rd290, %rd289, %rd284;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r387,%dummy}, %rd279;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r388}, %rd279;
	}
	shf.r.wrap.b32 	%r389, %r388, %r387, 14;
	shf.r.wrap.b32 	%r390, %r387, %r388, 14;
	mov.b64 	%rd291, {%r390, %r389};
	shf.r.wrap.b32 	%r391, %r388, %r387, 18;
	shf.r.wrap.b32 	%r392, %r387, %r388, 18;
	mov.b64 	%rd292, {%r392, %r391};
	xor.b64  	%rd293, %rd292, %rd291;
	shf.l.wrap.b32 	%r393, %r387, %r388, 23;
	shf.l.wrap.b32 	%r394, %r388, %r387, 23;
	mov.b64 	%rd294, {%r394, %r393};
	xor.b64  	%rd295, %rd293, %rd294;
	xor.b64  	%rd296, %rd255, %rd2268;
	and.b64  	%rd297, %rd279, %rd296;
	xor.b64  	%rd298, %rd297, %rd2268;
	add.s64 	%rd299, %rd2243, %rd2267;
	ld.const.u64 	%rd66, [k_sha512+16];
	add.s64 	%rd300, %rd299, %rd66;
	add.s64 	%rd301, %rd300, %rd298;
	add.s64 	%rd302, %rd301, %rd295;
	add.s64 	%rd303, %rd302, %rd2271;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r395,%dummy}, %rd290;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r396}, %rd290;
	}
	shf.r.wrap.b32 	%r397, %r396, %r395, 28;
	shf.r.wrap.b32 	%r398, %r395, %r396, 28;
	mov.b64 	%rd304, {%r398, %r397};
	shf.l.wrap.b32 	%r399, %r395, %r396, 30;
	shf.l.wrap.b32 	%r400, %r396, %r395, 30;
	mov.b64 	%rd305, {%r400, %r399};
	xor.b64  	%rd306, %rd305, %rd304;
	shf.l.wrap.b32 	%r401, %r395, %r396, 25;
	shf.l.wrap.b32 	%r402, %r396, %r395, 25;
	mov.b64 	%rd307, {%r402, %r401};
	xor.b64  	%rd308, %rd306, %rd307;
	xor.b64  	%rd309, %rd290, %rd2272;
	xor.b64  	%rd310, %rd290, %rd266;
	and.b64  	%rd311, %rd310, %rd309;
	xor.b64  	%rd312, %rd311, %rd290;
	add.s64 	%rd313, %rd302, %rd312;
	add.s64 	%rd314, %rd313, %rd308;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r403,%dummy}, %rd303;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r404}, %rd303;
	}
	shf.r.wrap.b32 	%r405, %r404, %r403, 14;
	shf.r.wrap.b32 	%r406, %r403, %r404, 14;
	mov.b64 	%rd315, {%r406, %r405};
	shf.r.wrap.b32 	%r407, %r404, %r403, 18;
	shf.r.wrap.b32 	%r408, %r403, %r404, 18;
	mov.b64 	%rd316, {%r408, %r407};
	xor.b64  	%rd317, %rd316, %rd315;
	shf.l.wrap.b32 	%r409, %r403, %r404, 23;
	shf.l.wrap.b32 	%r410, %r404, %r403, 23;
	mov.b64 	%rd318, {%r410, %r409};
	xor.b64  	%rd319, %rd317, %rd318;
	xor.b64  	%rd320, %rd279, %rd255;
	and.b64  	%rd321, %rd303, %rd320;
	xor.b64  	%rd322, %rd321, %rd255;
	add.s64 	%rd323, %rd2244, %rd2268;
	ld.const.u64 	%rd67, [k_sha512+24];
	add.s64 	%rd324, %rd323, %rd67;
	add.s64 	%rd325, %rd324, %rd322;
	add.s64 	%rd326, %rd325, %rd319;
	add.s64 	%rd327, %rd326, %rd2272;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r411,%dummy}, %rd314;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r412}, %rd314;
	}
	shf.r.wrap.b32 	%r413, %r412, %r411, 28;
	shf.r.wrap.b32 	%r414, %r411, %r412, 28;
	mov.b64 	%rd328, {%r414, %r413};
	shf.l.wrap.b32 	%r415, %r411, %r412, 30;
	shf.l.wrap.b32 	%r416, %r412, %r411, 30;
	mov.b64 	%rd329, {%r416, %r415};
	xor.b64  	%rd330, %rd329, %rd328;
	shf.l.wrap.b32 	%r417, %r411, %r412, 25;
	shf.l.wrap.b32 	%r418, %r412, %r411, 25;
	mov.b64 	%rd331, {%r418, %r417};
	xor.b64  	%rd332, %rd330, %rd331;
	xor.b64  	%rd333, %rd314, %rd266;
	xor.b64  	%rd334, %rd314, %rd290;
	and.b64  	%rd335, %rd334, %rd333;
	xor.b64  	%rd336, %rd335, %rd314;
	add.s64 	%rd337, %rd326, %rd336;
	add.s64 	%rd338, %rd337, %rd332;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r419,%dummy}, %rd327;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r420}, %rd327;
	}
	shf.r.wrap.b32 	%r421, %r420, %r419, 14;
	shf.r.wrap.b32 	%r422, %r419, %r420, 14;
	mov.b64 	%rd339, {%r422, %r421};
	shf.r.wrap.b32 	%r423, %r420, %r419, 18;
	shf.r.wrap.b32 	%r424, %r419, %r420, 18;
	mov.b64 	%rd340, {%r424, %r423};
	xor.b64  	%rd341, %rd340, %rd339;
	shf.l.wrap.b32 	%r425, %r419, %r420, 23;
	shf.l.wrap.b32 	%r426, %r420, %r419, 23;
	mov.b64 	%rd342, {%r426, %r425};
	xor.b64  	%rd343, %rd341, %rd342;
	xor.b64  	%rd344, %rd303, %rd279;
	and.b64  	%rd345, %rd327, %rd344;
	xor.b64  	%rd346, %rd345, %rd279;
	add.s64 	%rd347, %rd255, %rd2245;
	ld.const.u64 	%rd68, [k_sha512+32];
	add.s64 	%rd348, %rd347, %rd68;
	add.s64 	%rd349, %rd348, %rd346;
	add.s64 	%rd350, %rd349, %rd343;
	add.s64 	%rd351, %rd350, %rd266;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r427,%dummy}, %rd338;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r428}, %rd338;
	}
	shf.r.wrap.b32 	%r429, %r428, %r427, 28;
	shf.r.wrap.b32 	%r430, %r427, %r428, 28;
	mov.b64 	%rd352, {%r430, %r429};
	shf.l.wrap.b32 	%r431, %r427, %r428, 30;
	shf.l.wrap.b32 	%r432, %r428, %r427, 30;
	mov.b64 	%rd353, {%r432, %r431};
	xor.b64  	%rd354, %rd353, %rd352;
	shf.l.wrap.b32 	%r433, %r427, %r428, 25;
	shf.l.wrap.b32 	%r434, %r428, %r427, 25;
	mov.b64 	%rd355, {%r434, %r433};
	xor.b64  	%rd356, %rd354, %rd355;
	xor.b64  	%rd357, %rd338, %rd290;
	xor.b64  	%rd358, %rd338, %rd314;
	and.b64  	%rd359, %rd358, %rd357;
	xor.b64  	%rd360, %rd359, %rd338;
	add.s64 	%rd361, %rd350, %rd360;
	add.s64 	%rd362, %rd361, %rd356;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r435,%dummy}, %rd351;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r436}, %rd351;
	}
	shf.r.wrap.b32 	%r437, %r436, %r435, 14;
	shf.r.wrap.b32 	%r438, %r435, %r436, 14;
	mov.b64 	%rd363, {%r438, %r437};
	shf.r.wrap.b32 	%r439, %r436, %r435, 18;
	shf.r.wrap.b32 	%r440, %r435, %r436, 18;
	mov.b64 	%rd364, {%r440, %r439};
	xor.b64  	%rd365, %rd364, %rd363;
	shf.l.wrap.b32 	%r441, %r435, %r436, 23;
	shf.l.wrap.b32 	%r442, %r436, %r435, 23;
	mov.b64 	%rd366, {%r442, %r441};
	xor.b64  	%rd367, %rd365, %rd366;
	xor.b64  	%rd368, %rd327, %rd303;
	and.b64  	%rd369, %rd351, %rd368;
	xor.b64  	%rd370, %rd369, %rd303;
	add.s64 	%rd371, %rd279, %rd2246;
	ld.const.u64 	%rd69, [k_sha512+40];
	add.s64 	%rd372, %rd371, %rd69;
	add.s64 	%rd373, %rd372, %rd370;
	add.s64 	%rd374, %rd373, %rd367;
	add.s64 	%rd375, %rd374, %rd290;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r443,%dummy}, %rd362;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r444}, %rd362;
	}
	shf.r.wrap.b32 	%r445, %r444, %r443, 28;
	shf.r.wrap.b32 	%r446, %r443, %r444, 28;
	mov.b64 	%rd376, {%r446, %r445};
	shf.l.wrap.b32 	%r447, %r443, %r444, 30;
	shf.l.wrap.b32 	%r448, %r444, %r443, 30;
	mov.b64 	%rd377, {%r448, %r447};
	xor.b64  	%rd378, %rd377, %rd376;
	shf.l.wrap.b32 	%r449, %r443, %r444, 25;
	shf.l.wrap.b32 	%r450, %r444, %r443, 25;
	mov.b64 	%rd379, {%r450, %r449};
	xor.b64  	%rd380, %rd378, %rd379;
	xor.b64  	%rd381, %rd362, %rd314;
	xor.b64  	%rd382, %rd362, %rd338;
	and.b64  	%rd383, %rd382, %rd381;
	xor.b64  	%rd384, %rd383, %rd362;
	add.s64 	%rd385, %rd374, %rd384;
	add.s64 	%rd386, %rd385, %rd380;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r451,%dummy}, %rd375;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r452}, %rd375;
	}
	shf.r.wrap.b32 	%r453, %r452, %r451, 14;
	shf.r.wrap.b32 	%r454, %r451, %r452, 14;
	mov.b64 	%rd387, {%r454, %r453};
	shf.r.wrap.b32 	%r455, %r452, %r451, 18;
	shf.r.wrap.b32 	%r456, %r451, %r452, 18;
	mov.b64 	%rd388, {%r456, %r455};
	xor.b64  	%rd389, %rd388, %rd387;
	shf.l.wrap.b32 	%r457, %r451, %r452, 23;
	shf.l.wrap.b32 	%r458, %r452, %r451, 23;
	mov.b64 	%rd390, {%r458, %r457};
	xor.b64  	%rd391, %rd389, %rd390;
	xor.b64  	%rd392, %rd351, %rd327;
	and.b64  	%rd393, %rd375, %rd392;
	xor.b64  	%rd394, %rd393, %rd327;
	add.s64 	%rd395, %rd303, %rd2247;
	ld.const.u64 	%rd70, [k_sha512+48];
	add.s64 	%rd396, %rd395, %rd70;
	add.s64 	%rd397, %rd396, %rd394;
	add.s64 	%rd398, %rd397, %rd391;
	add.s64 	%rd399, %rd398, %rd314;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r459,%dummy}, %rd386;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r460}, %rd386;
	}
	shf.r.wrap.b32 	%r461, %r460, %r459, 28;
	shf.r.wrap.b32 	%r462, %r459, %r460, 28;
	mov.b64 	%rd400, {%r462, %r461};
	shf.l.wrap.b32 	%r463, %r459, %r460, 30;
	shf.l.wrap.b32 	%r464, %r460, %r459, 30;
	mov.b64 	%rd401, {%r464, %r463};
	xor.b64  	%rd402, %rd401, %rd400;
	shf.l.wrap.b32 	%r465, %r459, %r460, 25;
	shf.l.wrap.b32 	%r466, %r460, %r459, 25;
	mov.b64 	%rd403, {%r466, %r465};
	xor.b64  	%rd404, %rd402, %rd403;
	xor.b64  	%rd405, %rd386, %rd338;
	xor.b64  	%rd406, %rd386, %rd362;
	and.b64  	%rd407, %rd406, %rd405;
	xor.b64  	%rd408, %rd407, %rd386;
	add.s64 	%rd409, %rd398, %rd408;
	add.s64 	%rd410, %rd409, %rd404;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r467,%dummy}, %rd399;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r468}, %rd399;
	}
	shf.r.wrap.b32 	%r469, %r468, %r467, 14;
	shf.r.wrap.b32 	%r470, %r467, %r468, 14;
	mov.b64 	%rd411, {%r470, %r469};
	shf.r.wrap.b32 	%r471, %r468, %r467, 18;
	shf.r.wrap.b32 	%r472, %r467, %r468, 18;
	mov.b64 	%rd412, {%r472, %r471};
	xor.b64  	%rd413, %rd412, %rd411;
	shf.l.wrap.b32 	%r473, %r467, %r468, 23;
	shf.l.wrap.b32 	%r474, %r468, %r467, 23;
	mov.b64 	%rd414, {%r474, %r473};
	xor.b64  	%rd415, %rd413, %rd414;
	xor.b64  	%rd416, %rd375, %rd351;
	and.b64  	%rd417, %rd399, %rd416;
	xor.b64  	%rd418, %rd417, %rd351;
	add.s64 	%rd419, %rd327, %rd2248;
	ld.const.u64 	%rd71, [k_sha512+56];
	add.s64 	%rd420, %rd419, %rd71;
	add.s64 	%rd421, %rd420, %rd418;
	add.s64 	%rd422, %rd421, %rd415;
	add.s64 	%rd423, %rd422, %rd338;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r475,%dummy}, %rd410;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r476}, %rd410;
	}
	shf.r.wrap.b32 	%r477, %r476, %r475, 28;
	shf.r.wrap.b32 	%r478, %r475, %r476, 28;
	mov.b64 	%rd424, {%r478, %r477};
	shf.l.wrap.b32 	%r479, %r475, %r476, 30;
	shf.l.wrap.b32 	%r480, %r476, %r475, 30;
	mov.b64 	%rd425, {%r480, %r479};
	xor.b64  	%rd426, %rd425, %rd424;
	shf.l.wrap.b32 	%r481, %r475, %r476, 25;
	shf.l.wrap.b32 	%r482, %r476, %r475, 25;
	mov.b64 	%rd427, {%r482, %r481};
	xor.b64  	%rd428, %rd426, %rd427;
	xor.b64  	%rd429, %rd410, %rd362;
	xor.b64  	%rd430, %rd410, %rd386;
	and.b64  	%rd431, %rd430, %rd429;
	xor.b64  	%rd432, %rd431, %rd410;
	add.s64 	%rd433, %rd422, %rd432;
	add.s64 	%rd434, %rd433, %rd428;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r483,%dummy}, %rd423;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r484}, %rd423;
	}
	shf.r.wrap.b32 	%r485, %r484, %r483, 14;
	shf.r.wrap.b32 	%r486, %r483, %r484, 14;
	mov.b64 	%rd435, {%r486, %r485};
	shf.r.wrap.b32 	%r487, %r484, %r483, 18;
	shf.r.wrap.b32 	%r488, %r483, %r484, 18;
	mov.b64 	%rd436, {%r488, %r487};
	xor.b64  	%rd437, %rd436, %rd435;
	shf.l.wrap.b32 	%r489, %r483, %r484, 23;
	shf.l.wrap.b32 	%r490, %r484, %r483, 23;
	mov.b64 	%rd438, {%r490, %r489};
	xor.b64  	%rd439, %rd437, %rd438;
	xor.b64  	%rd440, %rd399, %rd375;
	and.b64  	%rd441, %rd423, %rd440;
	xor.b64  	%rd442, %rd441, %rd375;
	add.s64 	%rd443, %rd351, %rd2232;
	ld.const.u64 	%rd72, [k_sha512+64];
	add.s64 	%rd444, %rd443, %rd72;
	add.s64 	%rd445, %rd444, %rd442;
	add.s64 	%rd446, %rd445, %rd439;
	add.s64 	%rd447, %rd446, %rd362;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r491,%dummy}, %rd434;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r492}, %rd434;
	}
	shf.r.wrap.b32 	%r493, %r492, %r491, 28;
	shf.r.wrap.b32 	%r494, %r491, %r492, 28;
	mov.b64 	%rd448, {%r494, %r493};
	shf.l.wrap.b32 	%r495, %r491, %r492, 30;
	shf.l.wrap.b32 	%r496, %r492, %r491, 30;
	mov.b64 	%rd449, {%r496, %r495};
	xor.b64  	%rd450, %rd449, %rd448;
	shf.l.wrap.b32 	%r497, %r491, %r492, 25;
	shf.l.wrap.b32 	%r498, %r492, %r491, 25;
	mov.b64 	%rd451, {%r498, %r497};
	xor.b64  	%rd452, %rd450, %rd451;
	xor.b64  	%rd453, %rd434, %rd386;
	xor.b64  	%rd454, %rd434, %rd410;
	and.b64  	%rd455, %rd454, %rd453;
	xor.b64  	%rd456, %rd455, %rd434;
	add.s64 	%rd457, %rd446, %rd456;
	add.s64 	%rd458, %rd457, %rd452;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r499,%dummy}, %rd447;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r500}, %rd447;
	}
	shf.r.wrap.b32 	%r501, %r500, %r499, 14;
	shf.r.wrap.b32 	%r502, %r499, %r500, 14;
	mov.b64 	%rd459, {%r502, %r501};
	shf.r.wrap.b32 	%r503, %r500, %r499, 18;
	shf.r.wrap.b32 	%r504, %r499, %r500, 18;
	mov.b64 	%rd460, {%r504, %r503};
	xor.b64  	%rd461, %rd460, %rd459;
	shf.l.wrap.b32 	%r505, %r499, %r500, 23;
	shf.l.wrap.b32 	%r506, %r500, %r499, 23;
	mov.b64 	%rd462, {%r506, %r505};
	xor.b64  	%rd463, %rd461, %rd462;
	xor.b64  	%rd464, %rd423, %rd399;
	and.b64  	%rd465, %rd447, %rd464;
	xor.b64  	%rd466, %rd465, %rd399;
	add.s64 	%rd467, %rd375, %rd2231;
	ld.const.u64 	%rd73, [k_sha512+72];
	add.s64 	%rd468, %rd467, %rd73;
	add.s64 	%rd469, %rd468, %rd466;
	add.s64 	%rd470, %rd469, %rd463;
	add.s64 	%rd471, %rd470, %rd386;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r507,%dummy}, %rd458;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r508}, %rd458;
	}
	shf.r.wrap.b32 	%r509, %r508, %r507, 28;
	shf.r.wrap.b32 	%r510, %r507, %r508, 28;
	mov.b64 	%rd472, {%r510, %r509};
	shf.l.wrap.b32 	%r511, %r507, %r508, 30;
	shf.l.wrap.b32 	%r512, %r508, %r507, 30;
	mov.b64 	%rd473, {%r512, %r511};
	xor.b64  	%rd474, %rd473, %rd472;
	shf.l.wrap.b32 	%r513, %r507, %r508, 25;
	shf.l.wrap.b32 	%r514, %r508, %r507, 25;
	mov.b64 	%rd475, {%r514, %r513};
	xor.b64  	%rd476, %rd474, %rd475;
	xor.b64  	%rd477, %rd458, %rd410;
	xor.b64  	%rd478, %rd458, %rd434;
	and.b64  	%rd479, %rd478, %rd477;
	xor.b64  	%rd480, %rd479, %rd458;
	add.s64 	%rd481, %rd470, %rd480;
	add.s64 	%rd482, %rd481, %rd476;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r515,%dummy}, %rd471;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r516}, %rd471;
	}
	shf.r.wrap.b32 	%r517, %r516, %r515, 14;
	shf.r.wrap.b32 	%r518, %r515, %r516, 14;
	mov.b64 	%rd483, {%r518, %r517};
	shf.r.wrap.b32 	%r519, %r516, %r515, 18;
	shf.r.wrap.b32 	%r520, %r515, %r516, 18;
	mov.b64 	%rd484, {%r520, %r519};
	xor.b64  	%rd485, %rd484, %rd483;
	shf.l.wrap.b32 	%r521, %r515, %r516, 23;
	shf.l.wrap.b32 	%r522, %r516, %r515, 23;
	mov.b64 	%rd486, {%r522, %r521};
	xor.b64  	%rd487, %rd485, %rd486;
	xor.b64  	%rd488, %rd447, %rd423;
	and.b64  	%rd489, %rd471, %rd488;
	xor.b64  	%rd490, %rd489, %rd423;
	add.s64 	%rd491, %rd399, %rd2230;
	ld.const.u64 	%rd74, [k_sha512+80];
	add.s64 	%rd492, %rd491, %rd74;
	add.s64 	%rd493, %rd492, %rd490;
	add.s64 	%rd494, %rd493, %rd487;
	add.s64 	%rd495, %rd494, %rd410;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r523,%dummy}, %rd482;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r524}, %rd482;
	}
	shf.r.wrap.b32 	%r525, %r524, %r523, 28;
	shf.r.wrap.b32 	%r526, %r523, %r524, 28;
	mov.b64 	%rd496, {%r526, %r525};
	shf.l.wrap.b32 	%r527, %r523, %r524, 30;
	shf.l.wrap.b32 	%r528, %r524, %r523, 30;
	mov.b64 	%rd497, {%r528, %r527};
	xor.b64  	%rd498, %rd497, %rd496;
	shf.l.wrap.b32 	%r529, %r523, %r524, 25;
	shf.l.wrap.b32 	%r530, %r524, %r523, 25;
	mov.b64 	%rd499, {%r530, %r529};
	xor.b64  	%rd500, %rd498, %rd499;
	xor.b64  	%rd501, %rd482, %rd434;
	xor.b64  	%rd502, %rd482, %rd458;
	and.b64  	%rd503, %rd502, %rd501;
	xor.b64  	%rd504, %rd503, %rd482;
	add.s64 	%rd505, %rd494, %rd504;
	add.s64 	%rd506, %rd505, %rd500;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r531,%dummy}, %rd495;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r532}, %rd495;
	}
	shf.r.wrap.b32 	%r533, %r532, %r531, 14;
	shf.r.wrap.b32 	%r534, %r531, %r532, 14;
	mov.b64 	%rd507, {%r534, %r533};
	shf.r.wrap.b32 	%r535, %r532, %r531, 18;
	shf.r.wrap.b32 	%r536, %r531, %r532, 18;
	mov.b64 	%rd508, {%r536, %r535};
	xor.b64  	%rd509, %rd508, %rd507;
	shf.l.wrap.b32 	%r537, %r531, %r532, 23;
	shf.l.wrap.b32 	%r538, %r532, %r531, 23;
	mov.b64 	%rd510, {%r538, %r537};
	xor.b64  	%rd511, %rd509, %rd510;
	xor.b64  	%rd512, %rd471, %rd447;
	and.b64  	%rd513, %rd495, %rd512;
	xor.b64  	%rd514, %rd513, %rd447;
	add.s64 	%rd515, %rd423, %rd2229;
	ld.const.u64 	%rd75, [k_sha512+88];
	add.s64 	%rd516, %rd515, %rd75;
	add.s64 	%rd517, %rd516, %rd514;
	add.s64 	%rd518, %rd517, %rd511;
	add.s64 	%rd519, %rd518, %rd434;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r539,%dummy}, %rd506;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r540}, %rd506;
	}
	shf.r.wrap.b32 	%r541, %r540, %r539, 28;
	shf.r.wrap.b32 	%r542, %r539, %r540, 28;
	mov.b64 	%rd520, {%r542, %r541};
	shf.l.wrap.b32 	%r543, %r539, %r540, 30;
	shf.l.wrap.b32 	%r544, %r540, %r539, 30;
	mov.b64 	%rd521, {%r544, %r543};
	xor.b64  	%rd522, %rd521, %rd520;
	shf.l.wrap.b32 	%r545, %r539, %r540, 25;
	shf.l.wrap.b32 	%r546, %r540, %r539, 25;
	mov.b64 	%rd523, {%r546, %r545};
	xor.b64  	%rd524, %rd522, %rd523;
	xor.b64  	%rd525, %rd506, %rd458;
	xor.b64  	%rd526, %rd506, %rd482;
	and.b64  	%rd527, %rd526, %rd525;
	xor.b64  	%rd528, %rd527, %rd506;
	add.s64 	%rd529, %rd518, %rd528;
	add.s64 	%rd530, %rd529, %rd524;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r547,%dummy}, %rd519;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r548}, %rd519;
	}
	shf.r.wrap.b32 	%r549, %r548, %r547, 14;
	shf.r.wrap.b32 	%r550, %r547, %r548, 14;
	mov.b64 	%rd531, {%r550, %r549};
	shf.r.wrap.b32 	%r551, %r548, %r547, 18;
	shf.r.wrap.b32 	%r552, %r547, %r548, 18;
	mov.b64 	%rd532, {%r552, %r551};
	xor.b64  	%rd533, %rd532, %rd531;
	shf.l.wrap.b32 	%r553, %r547, %r548, 23;
	shf.l.wrap.b32 	%r554, %r548, %r547, 23;
	mov.b64 	%rd534, {%r554, %r553};
	xor.b64  	%rd535, %rd533, %rd534;
	xor.b64  	%rd536, %rd495, %rd471;
	and.b64  	%rd537, %rd519, %rd536;
	xor.b64  	%rd538, %rd537, %rd471;
	add.s64 	%rd539, %rd447, %rd2228;
	ld.const.u64 	%rd76, [k_sha512+96];
	add.s64 	%rd540, %rd539, %rd76;
	add.s64 	%rd541, %rd540, %rd538;
	add.s64 	%rd542, %rd541, %rd535;
	add.s64 	%rd2240, %rd542, %rd458;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r555,%dummy}, %rd530;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r556}, %rd530;
	}
	shf.r.wrap.b32 	%r557, %r556, %r555, 28;
	shf.r.wrap.b32 	%r558, %r555, %r556, 28;
	mov.b64 	%rd543, {%r558, %r557};
	shf.l.wrap.b32 	%r559, %r555, %r556, 30;
	shf.l.wrap.b32 	%r560, %r556, %r555, 30;
	mov.b64 	%rd544, {%r560, %r559};
	xor.b64  	%rd545, %rd544, %rd543;
	shf.l.wrap.b32 	%r561, %r555, %r556, 25;
	shf.l.wrap.b32 	%r562, %r556, %r555, 25;
	mov.b64 	%rd546, {%r562, %r561};
	xor.b64  	%rd547, %rd545, %rd546;
	xor.b64  	%rd548, %rd530, %rd482;
	xor.b64  	%rd549, %rd530, %rd506;
	and.b64  	%rd550, %rd549, %rd548;
	xor.b64  	%rd551, %rd550, %rd530;
	add.s64 	%rd552, %rd542, %rd551;
	add.s64 	%rd2236, %rd552, %rd547;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r563,%dummy}, %rd2240;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r564}, %rd2240;
	}
	shf.r.wrap.b32 	%r565, %r564, %r563, 14;
	shf.r.wrap.b32 	%r566, %r563, %r564, 14;
	mov.b64 	%rd553, {%r566, %r565};
	shf.r.wrap.b32 	%r567, %r564, %r563, 18;
	shf.r.wrap.b32 	%r568, %r563, %r564, 18;
	mov.b64 	%rd554, {%r568, %r567};
	xor.b64  	%rd555, %rd554, %rd553;
	shf.l.wrap.b32 	%r569, %r563, %r564, 23;
	shf.l.wrap.b32 	%r570, %r564, %r563, 23;
	mov.b64 	%rd556, {%r570, %r569};
	xor.b64  	%rd557, %rd555, %rd556;
	xor.b64  	%rd558, %rd519, %rd495;
	and.b64  	%rd559, %rd2240, %rd558;
	xor.b64  	%rd560, %rd559, %rd495;
	add.s64 	%rd561, %rd471, %rd2227;
	ld.const.u64 	%rd79, [k_sha512+104];
	add.s64 	%rd562, %rd561, %rd79;
	add.s64 	%rd563, %rd562, %rd560;
	add.s64 	%rd564, %rd563, %rd557;
	add.s64 	%rd2239, %rd564, %rd482;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r571,%dummy}, %rd2236;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r572}, %rd2236;
	}
	shf.r.wrap.b32 	%r573, %r572, %r571, 28;
	shf.r.wrap.b32 	%r574, %r571, %r572, 28;
	mov.b64 	%rd565, {%r574, %r573};
	shf.l.wrap.b32 	%r575, %r571, %r572, 30;
	shf.l.wrap.b32 	%r576, %r572, %r571, 30;
	mov.b64 	%rd566, {%r576, %r575};
	xor.b64  	%rd567, %rd566, %rd565;
	shf.l.wrap.b32 	%r577, %r571, %r572, 25;
	shf.l.wrap.b32 	%r578, %r572, %r571, 25;
	mov.b64 	%rd568, {%r578, %r577};
	xor.b64  	%rd569, %rd567, %rd568;
	xor.b64  	%rd570, %rd2236, %rd506;
	xor.b64  	%rd571, %rd2236, %rd530;
	and.b64  	%rd572, %rd571, %rd570;
	xor.b64  	%rd573, %rd572, %rd2236;
	add.s64 	%rd574, %rd564, %rd573;
	add.s64 	%rd2235, %rd574, %rd569;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r579,%dummy}, %rd2239;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r580}, %rd2239;
	}
	shf.r.wrap.b32 	%r581, %r580, %r579, 14;
	shf.r.wrap.b32 	%r582, %r579, %r580, 14;
	mov.b64 	%rd575, {%r582, %r581};
	shf.r.wrap.b32 	%r583, %r580, %r579, 18;
	shf.r.wrap.b32 	%r584, %r579, %r580, 18;
	mov.b64 	%rd576, {%r584, %r583};
	xor.b64  	%rd577, %rd576, %rd575;
	shf.l.wrap.b32 	%r585, %r579, %r580, 23;
	shf.l.wrap.b32 	%r586, %r580, %r579, 23;
	mov.b64 	%rd578, {%r586, %r585};
	xor.b64  	%rd579, %rd577, %rd578;
	xor.b64  	%rd580, %rd2240, %rd519;
	and.b64  	%rd581, %rd2239, %rd580;
	xor.b64  	%rd582, %rd581, %rd519;
	add.s64 	%rd583, %rd495, %rd2226;
	ld.const.u64 	%rd82, [k_sha512+112];
	add.s64 	%rd584, %rd583, %rd82;
	add.s64 	%rd585, %rd584, %rd582;
	add.s64 	%rd586, %rd585, %rd579;
	add.s64 	%rd2238, %rd586, %rd506;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r587,%dummy}, %rd2235;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r588}, %rd2235;
	}
	shf.r.wrap.b32 	%r589, %r588, %r587, 28;
	shf.r.wrap.b32 	%r590, %r587, %r588, 28;
	mov.b64 	%rd587, {%r590, %r589};
	shf.l.wrap.b32 	%r591, %r587, %r588, 30;
	shf.l.wrap.b32 	%r592, %r588, %r587, 30;
	mov.b64 	%rd588, {%r592, %r591};
	xor.b64  	%rd589, %rd588, %rd587;
	shf.l.wrap.b32 	%r593, %r587, %r588, 25;
	shf.l.wrap.b32 	%r594, %r588, %r587, 25;
	mov.b64 	%rd590, {%r594, %r593};
	xor.b64  	%rd591, %rd589, %rd590;
	xor.b64  	%rd592, %rd2235, %rd530;
	xor.b64  	%rd593, %rd2235, %rd2236;
	and.b64  	%rd594, %rd593, %rd592;
	xor.b64  	%rd595, %rd594, %rd2235;
	add.s64 	%rd596, %rd586, %rd595;
	add.s64 	%rd2234, %rd596, %rd591;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r595,%dummy}, %rd2238;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r596}, %rd2238;
	}
	shf.r.wrap.b32 	%r597, %r596, %r595, 14;
	shf.r.wrap.b32 	%r598, %r595, %r596, 14;
	mov.b64 	%rd597, {%r598, %r597};
	shf.r.wrap.b32 	%r599, %r596, %r595, 18;
	shf.r.wrap.b32 	%r600, %r595, %r596, 18;
	mov.b64 	%rd598, {%r600, %r599};
	xor.b64  	%rd599, %rd598, %rd597;
	shf.l.wrap.b32 	%r601, %r595, %r596, 23;
	shf.l.wrap.b32 	%r602, %r596, %r595, 23;
	mov.b64 	%rd600, {%r602, %r601};
	xor.b64  	%rd601, %rd599, %rd600;
	xor.b64  	%rd602, %rd2239, %rd2240;
	and.b64  	%rd603, %rd2238, %rd602;
	xor.b64  	%rd604, %rd603, %rd2240;
	add.s64 	%rd605, %rd519, %rd2225;
	ld.const.u64 	%rd85, [k_sha512+120];
	add.s64 	%rd606, %rd605, %rd85;
	add.s64 	%rd607, %rd606, %rd604;
	add.s64 	%rd608, %rd607, %rd601;
	add.s64 	%rd2237, %rd608, %rd530;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r603,%dummy}, %rd2234;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r604}, %rd2234;
	}
	shf.r.wrap.b32 	%r605, %r604, %r603, 28;
	shf.r.wrap.b32 	%r606, %r603, %r604, 28;
	mov.b64 	%rd609, {%r606, %r605};
	shf.l.wrap.b32 	%r607, %r603, %r604, 30;
	shf.l.wrap.b32 	%r608, %r604, %r603, 30;
	mov.b64 	%rd610, {%r608, %r607};
	xor.b64  	%rd611, %rd610, %rd609;
	shf.l.wrap.b32 	%r609, %r603, %r604, 25;
	shf.l.wrap.b32 	%r610, %r604, %r603, 25;
	mov.b64 	%rd612, {%r610, %r609};
	xor.b64  	%rd613, %rd611, %rd612;
	xor.b64  	%rd614, %rd2234, %rd2236;
	xor.b64  	%rd615, %rd2234, %rd2235;
	and.b64  	%rd616, %rd615, %rd614;
	xor.b64  	%rd617, %rd616, %rd2234;
	add.s64 	%rd618, %rd608, %rd617;
	add.s64 	%rd2233, %rd618, %rd613;
	mov.u32 	%r1799, 16;

BB4_322:
	shr.u64 	%rd619, %rd2226, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r611,%dummy}, %rd2226;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r612}, %rd2226;
	}
	shf.r.wrap.b32 	%r613, %r612, %r611, 19;
	shf.r.wrap.b32 	%r614, %r611, %r612, 19;
	mov.b64 	%rd620, {%r614, %r613};
	xor.b64  	%rd621, %rd620, %rd619;
	shf.l.wrap.b32 	%r615, %r611, %r612, 3;
	shf.l.wrap.b32 	%r616, %r612, %r611, 3;
	mov.b64 	%rd622, {%r616, %r615};
	xor.b64  	%rd623, %rd621, %rd622;
	shr.u64 	%rd624, %rd2242, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r617,%dummy}, %rd2242;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r618}, %rd2242;
	}
	shf.r.wrap.b32 	%r619, %r618, %r617, 1;
	shf.r.wrap.b32 	%r620, %r617, %r618, 1;
	mov.b64 	%rd625, {%r620, %r619};
	xor.b64  	%rd626, %rd625, %rd624;
	shf.r.wrap.b32 	%r621, %r618, %r617, 8;
	shf.r.wrap.b32 	%r622, %r617, %r618, 8;
	mov.b64 	%rd627, {%r622, %r621};
	xor.b64  	%rd628, %rd626, %rd627;
	add.s64 	%rd629, %rd2231, %rd2241;
	add.s64 	%rd630, %rd629, %rd623;
	add.s64 	%rd2241, %rd630, %rd628;
	shr.u64 	%rd631, %rd2225, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r623,%dummy}, %rd2225;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r624}, %rd2225;
	}
	shf.r.wrap.b32 	%r625, %r624, %r623, 19;
	shf.r.wrap.b32 	%r626, %r623, %r624, 19;
	mov.b64 	%rd632, {%r626, %r625};
	xor.b64  	%rd633, %rd632, %rd631;
	shf.l.wrap.b32 	%r627, %r623, %r624, 3;
	shf.l.wrap.b32 	%r628, %r624, %r623, 3;
	mov.b64 	%rd634, {%r628, %r627};
	xor.b64  	%rd635, %rd633, %rd634;
	shr.u64 	%rd636, %rd2243, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r629,%dummy}, %rd2243;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r630}, %rd2243;
	}
	shf.r.wrap.b32 	%r631, %r630, %r629, 1;
	shf.r.wrap.b32 	%r632, %r629, %r630, 1;
	mov.b64 	%rd637, {%r632, %r631};
	xor.b64  	%rd638, %rd637, %rd636;
	shf.r.wrap.b32 	%r633, %r630, %r629, 8;
	shf.r.wrap.b32 	%r634, %r629, %r630, 8;
	mov.b64 	%rd639, {%r634, %r633};
	xor.b64  	%rd640, %rd638, %rd639;
	add.s64 	%rd641, %rd2230, %rd2242;
	add.s64 	%rd642, %rd641, %rd635;
	add.s64 	%rd2242, %rd642, %rd640;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r635,%dummy}, %rd2241;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r636}, %rd2241;
	}
	shf.r.wrap.b32 	%r637, %r636, %r635, 19;
	shf.r.wrap.b32 	%r638, %r635, %r636, 19;
	mov.b64 	%rd643, {%r638, %r637};
	shf.l.wrap.b32 	%r639, %r635, %r636, 3;
	shf.l.wrap.b32 	%r640, %r636, %r635, 3;
	mov.b64 	%rd644, {%r640, %r639};
	shr.u64 	%rd645, %rd2241, 6;
	xor.b64  	%rd646, %rd643, %rd645;
	xor.b64  	%rd647, %rd646, %rd644;
	shr.u64 	%rd648, %rd2244, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r641,%dummy}, %rd2244;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r642}, %rd2244;
	}
	shf.r.wrap.b32 	%r643, %r642, %r641, 1;
	shf.r.wrap.b32 	%r644, %r641, %r642, 1;
	mov.b64 	%rd649, {%r644, %r643};
	xor.b64  	%rd650, %rd649, %rd648;
	shf.r.wrap.b32 	%r645, %r642, %r641, 8;
	shf.r.wrap.b32 	%r646, %r641, %r642, 8;
	mov.b64 	%rd651, {%r646, %r645};
	xor.b64  	%rd652, %rd650, %rd651;
	add.s64 	%rd653, %rd2229, %rd2243;
	add.s64 	%rd654, %rd653, %rd647;
	add.s64 	%rd2243, %rd654, %rd652;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r647,%dummy}, %rd2242;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r648}, %rd2242;
	}
	shf.r.wrap.b32 	%r649, %r648, %r647, 19;
	shf.r.wrap.b32 	%r650, %r647, %r648, 19;
	mov.b64 	%rd655, {%r650, %r649};
	shf.l.wrap.b32 	%r651, %r647, %r648, 3;
	shf.l.wrap.b32 	%r652, %r648, %r647, 3;
	mov.b64 	%rd656, {%r652, %r651};
	shr.u64 	%rd657, %rd2242, 6;
	xor.b64  	%rd658, %rd655, %rd657;
	xor.b64  	%rd659, %rd658, %rd656;
	shr.u64 	%rd660, %rd2245, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r653,%dummy}, %rd2245;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r654}, %rd2245;
	}
	shf.r.wrap.b32 	%r655, %r654, %r653, 1;
	shf.r.wrap.b32 	%r656, %r653, %r654, 1;
	mov.b64 	%rd661, {%r656, %r655};
	xor.b64  	%rd662, %rd661, %rd660;
	shf.r.wrap.b32 	%r657, %r654, %r653, 8;
	shf.r.wrap.b32 	%r658, %r653, %r654, 8;
	mov.b64 	%rd663, {%r658, %r657};
	xor.b64  	%rd664, %rd662, %rd663;
	add.s64 	%rd665, %rd2228, %rd2244;
	add.s64 	%rd666, %rd665, %rd659;
	add.s64 	%rd2244, %rd666, %rd664;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r659,%dummy}, %rd2243;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r660}, %rd2243;
	}
	shf.r.wrap.b32 	%r661, %r660, %r659, 19;
	shf.r.wrap.b32 	%r662, %r659, %r660, 19;
	mov.b64 	%rd667, {%r662, %r661};
	shf.l.wrap.b32 	%r663, %r659, %r660, 3;
	shf.l.wrap.b32 	%r664, %r660, %r659, 3;
	mov.b64 	%rd668, {%r664, %r663};
	shr.u64 	%rd669, %rd2243, 6;
	xor.b64  	%rd670, %rd667, %rd669;
	xor.b64  	%rd671, %rd670, %rd668;
	shr.u64 	%rd672, %rd2246, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r665,%dummy}, %rd2246;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r666}, %rd2246;
	}
	shf.r.wrap.b32 	%r667, %r666, %r665, 1;
	shf.r.wrap.b32 	%r668, %r665, %r666, 1;
	mov.b64 	%rd673, {%r668, %r667};
	xor.b64  	%rd674, %rd673, %rd672;
	shf.r.wrap.b32 	%r669, %r666, %r665, 8;
	shf.r.wrap.b32 	%r670, %r665, %r666, 8;
	mov.b64 	%rd675, {%r670, %r669};
	xor.b64  	%rd676, %rd674, %rd675;
	add.s64 	%rd677, %rd2227, %rd2245;
	add.s64 	%rd678, %rd677, %rd671;
	add.s64 	%rd2245, %rd678, %rd676;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r671,%dummy}, %rd2244;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r672}, %rd2244;
	}
	shf.r.wrap.b32 	%r673, %r672, %r671, 19;
	shf.r.wrap.b32 	%r674, %r671, %r672, 19;
	mov.b64 	%rd679, {%r674, %r673};
	shf.l.wrap.b32 	%r675, %r671, %r672, 3;
	shf.l.wrap.b32 	%r676, %r672, %r671, 3;
	mov.b64 	%rd680, {%r676, %r675};
	shr.u64 	%rd681, %rd2244, 6;
	xor.b64  	%rd682, %rd679, %rd681;
	xor.b64  	%rd683, %rd682, %rd680;
	shr.u64 	%rd684, %rd2247, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r677,%dummy}, %rd2247;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r678}, %rd2247;
	}
	shf.r.wrap.b32 	%r679, %r678, %r677, 1;
	shf.r.wrap.b32 	%r680, %r677, %r678, 1;
	mov.b64 	%rd685, {%r680, %r679};
	xor.b64  	%rd686, %rd685, %rd684;
	shf.r.wrap.b32 	%r681, %r678, %r677, 8;
	shf.r.wrap.b32 	%r682, %r677, %r678, 8;
	mov.b64 	%rd687, {%r682, %r681};
	xor.b64  	%rd688, %rd686, %rd687;
	add.s64 	%rd689, %rd2226, %rd2246;
	add.s64 	%rd690, %rd689, %rd683;
	add.s64 	%rd2246, %rd690, %rd688;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r683,%dummy}, %rd2245;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r684}, %rd2245;
	}
	shf.r.wrap.b32 	%r685, %r684, %r683, 19;
	shf.r.wrap.b32 	%r686, %r683, %r684, 19;
	mov.b64 	%rd691, {%r686, %r685};
	shf.l.wrap.b32 	%r687, %r683, %r684, 3;
	shf.l.wrap.b32 	%r688, %r684, %r683, 3;
	mov.b64 	%rd692, {%r688, %r687};
	shr.u64 	%rd693, %rd2245, 6;
	xor.b64  	%rd694, %rd691, %rd693;
	xor.b64  	%rd695, %rd694, %rd692;
	shr.u64 	%rd696, %rd2248, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r689,%dummy}, %rd2248;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r690}, %rd2248;
	}
	shf.r.wrap.b32 	%r691, %r690, %r689, 1;
	shf.r.wrap.b32 	%r692, %r689, %r690, 1;
	mov.b64 	%rd697, {%r692, %r691};
	xor.b64  	%rd698, %rd697, %rd696;
	shf.r.wrap.b32 	%r693, %r690, %r689, 8;
	shf.r.wrap.b32 	%r694, %r689, %r690, 8;
	mov.b64 	%rd699, {%r694, %r693};
	xor.b64  	%rd700, %rd698, %rd699;
	add.s64 	%rd701, %rd2225, %rd2247;
	add.s64 	%rd702, %rd701, %rd695;
	add.s64 	%rd2247, %rd702, %rd700;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r695,%dummy}, %rd2246;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r696}, %rd2246;
	}
	shf.r.wrap.b32 	%r697, %r696, %r695, 19;
	shf.r.wrap.b32 	%r698, %r695, %r696, 19;
	mov.b64 	%rd703, {%r698, %r697};
	shf.l.wrap.b32 	%r699, %r695, %r696, 3;
	shf.l.wrap.b32 	%r700, %r696, %r695, 3;
	mov.b64 	%rd704, {%r700, %r699};
	shr.u64 	%rd705, %rd2246, 6;
	xor.b64  	%rd706, %rd703, %rd705;
	xor.b64  	%rd707, %rd706, %rd704;
	shr.u64 	%rd708, %rd2232, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r701,%dummy}, %rd2232;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r702}, %rd2232;
	}
	shf.r.wrap.b32 	%r703, %r702, %r701, 1;
	shf.r.wrap.b32 	%r704, %r701, %r702, 1;
	mov.b64 	%rd709, {%r704, %r703};
	xor.b64  	%rd710, %rd709, %rd708;
	shf.r.wrap.b32 	%r705, %r702, %r701, 8;
	shf.r.wrap.b32 	%r706, %r701, %r702, 8;
	mov.b64 	%rd711, {%r706, %r705};
	xor.b64  	%rd712, %rd710, %rd711;
	add.s64 	%rd713, %rd2241, %rd2248;
	add.s64 	%rd714, %rd713, %rd707;
	add.s64 	%rd2248, %rd714, %rd712;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r707,%dummy}, %rd2247;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r708}, %rd2247;
	}
	shf.r.wrap.b32 	%r709, %r708, %r707, 19;
	shf.r.wrap.b32 	%r710, %r707, %r708, 19;
	mov.b64 	%rd715, {%r710, %r709};
	shf.l.wrap.b32 	%r711, %r707, %r708, 3;
	shf.l.wrap.b32 	%r712, %r708, %r707, 3;
	mov.b64 	%rd716, {%r712, %r711};
	shr.u64 	%rd717, %rd2247, 6;
	xor.b64  	%rd718, %rd715, %rd717;
	xor.b64  	%rd719, %rd718, %rd716;
	shr.u64 	%rd720, %rd2231, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r713,%dummy}, %rd2231;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r714}, %rd2231;
	}
	shf.r.wrap.b32 	%r715, %r714, %r713, 1;
	shf.r.wrap.b32 	%r716, %r713, %r714, 1;
	mov.b64 	%rd721, {%r716, %r715};
	xor.b64  	%rd722, %rd721, %rd720;
	shf.r.wrap.b32 	%r717, %r714, %r713, 8;
	shf.r.wrap.b32 	%r718, %r713, %r714, 8;
	mov.b64 	%rd723, {%r718, %r717};
	xor.b64  	%rd724, %rd722, %rd723;
	add.s64 	%rd725, %rd2242, %rd2232;
	add.s64 	%rd726, %rd725, %rd719;
	add.s64 	%rd2232, %rd726, %rd724;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r719,%dummy}, %rd2248;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r720}, %rd2248;
	}
	shf.r.wrap.b32 	%r721, %r720, %r719, 19;
	shf.r.wrap.b32 	%r722, %r719, %r720, 19;
	mov.b64 	%rd727, {%r722, %r721};
	shf.l.wrap.b32 	%r723, %r719, %r720, 3;
	shf.l.wrap.b32 	%r724, %r720, %r719, 3;
	mov.b64 	%rd728, {%r724, %r723};
	shr.u64 	%rd729, %rd2248, 6;
	xor.b64  	%rd730, %rd727, %rd729;
	xor.b64  	%rd731, %rd730, %rd728;
	shr.u64 	%rd732, %rd2230, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r725,%dummy}, %rd2230;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r726}, %rd2230;
	}
	shf.r.wrap.b32 	%r727, %r726, %r725, 1;
	shf.r.wrap.b32 	%r728, %r725, %r726, 1;
	mov.b64 	%rd733, {%r728, %r727};
	xor.b64  	%rd734, %rd733, %rd732;
	shf.r.wrap.b32 	%r729, %r726, %r725, 8;
	shf.r.wrap.b32 	%r730, %r725, %r726, 8;
	mov.b64 	%rd735, {%r730, %r729};
	xor.b64  	%rd736, %rd734, %rd735;
	add.s64 	%rd737, %rd2243, %rd2231;
	add.s64 	%rd738, %rd737, %rd731;
	add.s64 	%rd2231, %rd738, %rd736;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r731,%dummy}, %rd2232;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r732}, %rd2232;
	}
	shf.r.wrap.b32 	%r733, %r732, %r731, 19;
	shf.r.wrap.b32 	%r734, %r731, %r732, 19;
	mov.b64 	%rd739, {%r734, %r733};
	shf.l.wrap.b32 	%r735, %r731, %r732, 3;
	shf.l.wrap.b32 	%r736, %r732, %r731, 3;
	mov.b64 	%rd740, {%r736, %r735};
	shr.u64 	%rd741, %rd2232, 6;
	xor.b64  	%rd742, %rd739, %rd741;
	xor.b64  	%rd743, %rd742, %rd740;
	shr.u64 	%rd744, %rd2229, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r737,%dummy}, %rd2229;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r738}, %rd2229;
	}
	shf.r.wrap.b32 	%r739, %r738, %r737, 1;
	shf.r.wrap.b32 	%r740, %r737, %r738, 1;
	mov.b64 	%rd745, {%r740, %r739};
	xor.b64  	%rd746, %rd745, %rd744;
	shf.r.wrap.b32 	%r741, %r738, %r737, 8;
	shf.r.wrap.b32 	%r742, %r737, %r738, 8;
	mov.b64 	%rd747, {%r742, %r741};
	xor.b64  	%rd748, %rd746, %rd747;
	add.s64 	%rd749, %rd2244, %rd2230;
	add.s64 	%rd750, %rd749, %rd743;
	add.s64 	%rd2230, %rd750, %rd748;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r743,%dummy}, %rd2231;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r744}, %rd2231;
	}
	shf.r.wrap.b32 	%r745, %r744, %r743, 19;
	shf.r.wrap.b32 	%r746, %r743, %r744, 19;
	mov.b64 	%rd751, {%r746, %r745};
	shf.l.wrap.b32 	%r747, %r743, %r744, 3;
	shf.l.wrap.b32 	%r748, %r744, %r743, 3;
	mov.b64 	%rd752, {%r748, %r747};
	shr.u64 	%rd753, %rd2231, 6;
	xor.b64  	%rd754, %rd751, %rd753;
	xor.b64  	%rd755, %rd754, %rd752;
	shr.u64 	%rd756, %rd2228, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r749,%dummy}, %rd2228;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r750}, %rd2228;
	}
	shf.r.wrap.b32 	%r751, %r750, %r749, 1;
	shf.r.wrap.b32 	%r752, %r749, %r750, 1;
	mov.b64 	%rd757, {%r752, %r751};
	xor.b64  	%rd758, %rd757, %rd756;
	shf.r.wrap.b32 	%r753, %r750, %r749, 8;
	shf.r.wrap.b32 	%r754, %r749, %r750, 8;
	mov.b64 	%rd759, {%r754, %r753};
	xor.b64  	%rd760, %rd758, %rd759;
	add.s64 	%rd761, %rd2245, %rd2229;
	add.s64 	%rd762, %rd761, %rd755;
	add.s64 	%rd2229, %rd762, %rd760;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r755,%dummy}, %rd2230;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r756}, %rd2230;
	}
	shf.r.wrap.b32 	%r757, %r756, %r755, 19;
	shf.r.wrap.b32 	%r758, %r755, %r756, 19;
	mov.b64 	%rd763, {%r758, %r757};
	shf.l.wrap.b32 	%r759, %r755, %r756, 3;
	shf.l.wrap.b32 	%r760, %r756, %r755, 3;
	mov.b64 	%rd764, {%r760, %r759};
	shr.u64 	%rd765, %rd2230, 6;
	xor.b64  	%rd766, %rd763, %rd765;
	xor.b64  	%rd767, %rd766, %rd764;
	shr.u64 	%rd768, %rd2227, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r761,%dummy}, %rd2227;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r762}, %rd2227;
	}
	shf.r.wrap.b32 	%r763, %r762, %r761, 1;
	shf.r.wrap.b32 	%r764, %r761, %r762, 1;
	mov.b64 	%rd769, {%r764, %r763};
	xor.b64  	%rd770, %rd769, %rd768;
	shf.r.wrap.b32 	%r765, %r762, %r761, 8;
	shf.r.wrap.b32 	%r766, %r761, %r762, 8;
	mov.b64 	%rd771, {%r766, %r765};
	xor.b64  	%rd772, %rd770, %rd771;
	add.s64 	%rd773, %rd2246, %rd2228;
	add.s64 	%rd774, %rd773, %rd767;
	add.s64 	%rd2228, %rd774, %rd772;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r767,%dummy}, %rd2229;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r768}, %rd2229;
	}
	shf.r.wrap.b32 	%r769, %r768, %r767, 19;
	shf.r.wrap.b32 	%r770, %r767, %r768, 19;
	mov.b64 	%rd775, {%r770, %r769};
	shf.l.wrap.b32 	%r771, %r767, %r768, 3;
	shf.l.wrap.b32 	%r772, %r768, %r767, 3;
	mov.b64 	%rd776, {%r772, %r771};
	shr.u64 	%rd777, %rd2229, 6;
	xor.b64  	%rd778, %rd775, %rd777;
	xor.b64  	%rd779, %rd778, %rd776;
	shr.u64 	%rd780, %rd2226, 7;
	shf.r.wrap.b32 	%r773, %r612, %r611, 1;
	shf.r.wrap.b32 	%r774, %r611, %r612, 1;
	mov.b64 	%rd781, {%r774, %r773};
	xor.b64  	%rd782, %rd781, %rd780;
	shf.r.wrap.b32 	%r775, %r612, %r611, 8;
	shf.r.wrap.b32 	%r776, %r611, %r612, 8;
	mov.b64 	%rd783, {%r776, %r775};
	xor.b64  	%rd784, %rd782, %rd783;
	add.s64 	%rd785, %rd2247, %rd2227;
	add.s64 	%rd786, %rd785, %rd779;
	add.s64 	%rd2227, %rd786, %rd784;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r777,%dummy}, %rd2228;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r778}, %rd2228;
	}
	shf.r.wrap.b32 	%r779, %r778, %r777, 19;
	shf.r.wrap.b32 	%r780, %r777, %r778, 19;
	mov.b64 	%rd787, {%r780, %r779};
	shf.l.wrap.b32 	%r781, %r777, %r778, 3;
	shf.l.wrap.b32 	%r782, %r778, %r777, 3;
	mov.b64 	%rd788, {%r782, %r781};
	shr.u64 	%rd789, %rd2228, 6;
	xor.b64  	%rd790, %rd787, %rd789;
	xor.b64  	%rd791, %rd790, %rd788;
	shr.u64 	%rd792, %rd2225, 7;
	shf.r.wrap.b32 	%r783, %r624, %r623, 1;
	shf.r.wrap.b32 	%r784, %r623, %r624, 1;
	mov.b64 	%rd793, {%r784, %r783};
	xor.b64  	%rd794, %rd793, %rd792;
	shf.r.wrap.b32 	%r785, %r624, %r623, 8;
	shf.r.wrap.b32 	%r786, %r623, %r624, 8;
	mov.b64 	%rd795, {%r786, %r785};
	xor.b64  	%rd796, %rd794, %rd795;
	add.s64 	%rd797, %rd2248, %rd2226;
	add.s64 	%rd798, %rd797, %rd791;
	add.s64 	%rd2226, %rd798, %rd796;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r787,%dummy}, %rd2227;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r788}, %rd2227;
	}
	shf.r.wrap.b32 	%r789, %r788, %r787, 19;
	shf.r.wrap.b32 	%r790, %r787, %r788, 19;
	mov.b64 	%rd799, {%r790, %r789};
	shf.l.wrap.b32 	%r791, %r787, %r788, 3;
	shf.l.wrap.b32 	%r792, %r788, %r787, 3;
	mov.b64 	%rd800, {%r792, %r791};
	shr.u64 	%rd801, %rd2227, 6;
	xor.b64  	%rd802, %rd799, %rd801;
	xor.b64  	%rd803, %rd802, %rd800;
	shf.r.wrap.b32 	%r793, %r636, %r635, 1;
	shf.r.wrap.b32 	%r794, %r635, %r636, 1;
	mov.b64 	%rd804, {%r794, %r793};
	shf.r.wrap.b32 	%r795, %r636, %r635, 8;
	shf.r.wrap.b32 	%r796, %r635, %r636, 8;
	mov.b64 	%rd805, {%r796, %r795};
	shr.u64 	%rd806, %rd2241, 7;
	xor.b64  	%rd807, %rd804, %rd806;
	xor.b64  	%rd808, %rd807, %rd805;
	add.s64 	%rd809, %rd2232, %rd2225;
	add.s64 	%rd810, %rd809, %rd803;
	add.s64 	%rd2225, %rd810, %rd808;
	mul.wide.s32 	%rd811, %r1799, 8;
	mov.u64 	%rd812, k_sha512;
	add.s64 	%rd813, %rd812, %rd811;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r797,%dummy}, %rd2237;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r798}, %rd2237;
	}
	shf.r.wrap.b32 	%r799, %r798, %r797, 18;
	shf.r.wrap.b32 	%r800, %r797, %r798, 18;
	mov.b64 	%rd814, {%r800, %r799};
	shf.r.wrap.b32 	%r801, %r798, %r797, 14;
	shf.r.wrap.b32 	%r802, %r797, %r798, 14;
	mov.b64 	%rd815, {%r802, %r801};
	xor.b64  	%rd816, %rd814, %rd815;
	shf.l.wrap.b32 	%r803, %r797, %r798, 23;
	shf.l.wrap.b32 	%r804, %r798, %r797, 23;
	mov.b64 	%rd817, {%r804, %r803};
	xor.b64  	%rd818, %rd816, %rd817;
	xor.b64  	%rd819, %rd2238, %rd2239;
	and.b64  	%rd820, %rd819, %rd2237;
	xor.b64  	%rd821, %rd820, %rd2239;
	add.s64 	%rd822, %rd821, %rd2240;
	add.s64 	%rd823, %rd822, %rd2241;
	ld.const.u64 	%rd824, [%rd813];
	add.s64 	%rd825, %rd823, %rd824;
	add.s64 	%rd826, %rd825, %rd818;
	add.s64 	%rd827, %rd826, %rd2236;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r805}, %rd2233;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r806,%dummy}, %rd2233;
	}
	shf.l.wrap.b32 	%r807, %r806, %r805, 30;
	shf.l.wrap.b32 	%r808, %r805, %r806, 30;
	mov.b64 	%rd828, {%r808, %r807};
	shf.r.wrap.b32 	%r809, %r805, %r806, 28;
	shf.r.wrap.b32 	%r810, %r806, %r805, 28;
	mov.b64 	%rd829, {%r810, %r809};
	xor.b64  	%rd830, %rd828, %rd829;
	shf.l.wrap.b32 	%r811, %r806, %r805, 25;
	shf.l.wrap.b32 	%r812, %r805, %r806, 25;
	mov.b64 	%rd831, {%r812, %r811};
	xor.b64  	%rd832, %rd830, %rd831;
	xor.b64  	%rd833, %rd2233, %rd2234;
	xor.b64  	%rd834, %rd2233, %rd2235;
	and.b64  	%rd835, %rd833, %rd834;
	xor.b64  	%rd836, %rd835, %rd2233;
	add.s64 	%rd837, %rd826, %rd836;
	add.s64 	%rd838, %rd837, %rd832;
	add.s32 	%r813, %r1799, 1;
	mul.wide.s32 	%rd839, %r813, 8;
	add.s64 	%rd840, %rd812, %rd839;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r814,%dummy}, %rd827;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r815}, %rd827;
	}
	shf.r.wrap.b32 	%r816, %r815, %r814, 14;
	shf.r.wrap.b32 	%r817, %r814, %r815, 14;
	mov.b64 	%rd841, {%r817, %r816};
	shf.r.wrap.b32 	%r818, %r815, %r814, 18;
	shf.r.wrap.b32 	%r819, %r814, %r815, 18;
	mov.b64 	%rd842, {%r819, %r818};
	xor.b64  	%rd843, %rd842, %rd841;
	shf.l.wrap.b32 	%r820, %r814, %r815, 23;
	shf.l.wrap.b32 	%r821, %r815, %r814, 23;
	mov.b64 	%rd844, {%r821, %r820};
	xor.b64  	%rd845, %rd843, %rd844;
	xor.b64  	%rd846, %rd2237, %rd2238;
	and.b64  	%rd847, %rd827, %rd846;
	xor.b64  	%rd848, %rd847, %rd2238;
	add.s64 	%rd849, %rd2242, %rd2239;
	ld.const.u64 	%rd850, [%rd840];
	add.s64 	%rd851, %rd849, %rd850;
	add.s64 	%rd852, %rd851, %rd848;
	add.s64 	%rd853, %rd852, %rd845;
	add.s64 	%rd854, %rd853, %rd2235;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r822,%dummy}, %rd838;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r823}, %rd838;
	}
	shf.r.wrap.b32 	%r824, %r823, %r822, 28;
	shf.r.wrap.b32 	%r825, %r822, %r823, 28;
	mov.b64 	%rd855, {%r825, %r824};
	shf.l.wrap.b32 	%r826, %r822, %r823, 30;
	shf.l.wrap.b32 	%r827, %r823, %r822, 30;
	mov.b64 	%rd856, {%r827, %r826};
	xor.b64  	%rd857, %rd856, %rd855;
	shf.l.wrap.b32 	%r828, %r822, %r823, 25;
	shf.l.wrap.b32 	%r829, %r823, %r822, 25;
	mov.b64 	%rd858, {%r829, %r828};
	xor.b64  	%rd859, %rd857, %rd858;
	xor.b64  	%rd860, %rd838, %rd2234;
	xor.b64  	%rd861, %rd838, %rd2233;
	and.b64  	%rd862, %rd861, %rd860;
	xor.b64  	%rd863, %rd862, %rd838;
	add.s64 	%rd864, %rd853, %rd863;
	add.s64 	%rd865, %rd864, %rd859;
	add.s32 	%r830, %r1799, 2;
	mul.wide.s32 	%rd866, %r830, 8;
	add.s64 	%rd867, %rd812, %rd866;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r831,%dummy}, %rd854;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r832}, %rd854;
	}
	shf.r.wrap.b32 	%r833, %r832, %r831, 14;
	shf.r.wrap.b32 	%r834, %r831, %r832, 14;
	mov.b64 	%rd868, {%r834, %r833};
	shf.r.wrap.b32 	%r835, %r832, %r831, 18;
	shf.r.wrap.b32 	%r836, %r831, %r832, 18;
	mov.b64 	%rd869, {%r836, %r835};
	xor.b64  	%rd870, %rd869, %rd868;
	shf.l.wrap.b32 	%r837, %r831, %r832, 23;
	shf.l.wrap.b32 	%r838, %r832, %r831, 23;
	mov.b64 	%rd871, {%r838, %r837};
	xor.b64  	%rd872, %rd870, %rd871;
	xor.b64  	%rd873, %rd827, %rd2237;
	and.b64  	%rd874, %rd854, %rd873;
	xor.b64  	%rd875, %rd874, %rd2237;
	add.s64 	%rd876, %rd2243, %rd2238;
	ld.const.u64 	%rd877, [%rd867];
	add.s64 	%rd878, %rd876, %rd877;
	add.s64 	%rd879, %rd878, %rd875;
	add.s64 	%rd880, %rd879, %rd872;
	add.s64 	%rd881, %rd880, %rd2234;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r839,%dummy}, %rd865;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r840}, %rd865;
	}
	shf.r.wrap.b32 	%r841, %r840, %r839, 28;
	shf.r.wrap.b32 	%r842, %r839, %r840, 28;
	mov.b64 	%rd882, {%r842, %r841};
	shf.l.wrap.b32 	%r843, %r839, %r840, 30;
	shf.l.wrap.b32 	%r844, %r840, %r839, 30;
	mov.b64 	%rd883, {%r844, %r843};
	xor.b64  	%rd884, %rd883, %rd882;
	shf.l.wrap.b32 	%r845, %r839, %r840, 25;
	shf.l.wrap.b32 	%r846, %r840, %r839, 25;
	mov.b64 	%rd885, {%r846, %r845};
	xor.b64  	%rd886, %rd884, %rd885;
	xor.b64  	%rd887, %rd865, %rd2233;
	xor.b64  	%rd888, %rd865, %rd838;
	and.b64  	%rd889, %rd888, %rd887;
	xor.b64  	%rd890, %rd889, %rd865;
	add.s64 	%rd891, %rd880, %rd890;
	add.s64 	%rd892, %rd891, %rd886;
	add.s32 	%r847, %r1799, 3;
	mul.wide.s32 	%rd893, %r847, 8;
	add.s64 	%rd894, %rd812, %rd893;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r848,%dummy}, %rd881;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r849}, %rd881;
	}
	shf.r.wrap.b32 	%r850, %r849, %r848, 14;
	shf.r.wrap.b32 	%r851, %r848, %r849, 14;
	mov.b64 	%rd895, {%r851, %r850};
	shf.r.wrap.b32 	%r852, %r849, %r848, 18;
	shf.r.wrap.b32 	%r853, %r848, %r849, 18;
	mov.b64 	%rd896, {%r853, %r852};
	xor.b64  	%rd897, %rd896, %rd895;
	shf.l.wrap.b32 	%r854, %r848, %r849, 23;
	shf.l.wrap.b32 	%r855, %r849, %r848, 23;
	mov.b64 	%rd898, {%r855, %r854};
	xor.b64  	%rd899, %rd897, %rd898;
	xor.b64  	%rd900, %rd854, %rd827;
	and.b64  	%rd901, %rd881, %rd900;
	xor.b64  	%rd902, %rd901, %rd827;
	add.s64 	%rd903, %rd2244, %rd2237;
	ld.const.u64 	%rd904, [%rd894];
	add.s64 	%rd905, %rd903, %rd904;
	add.s64 	%rd906, %rd905, %rd902;
	add.s64 	%rd907, %rd906, %rd899;
	add.s64 	%rd908, %rd907, %rd2233;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r856,%dummy}, %rd892;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r857}, %rd892;
	}
	shf.r.wrap.b32 	%r858, %r857, %r856, 28;
	shf.r.wrap.b32 	%r859, %r856, %r857, 28;
	mov.b64 	%rd909, {%r859, %r858};
	shf.l.wrap.b32 	%r860, %r856, %r857, 30;
	shf.l.wrap.b32 	%r861, %r857, %r856, 30;
	mov.b64 	%rd910, {%r861, %r860};
	xor.b64  	%rd911, %rd910, %rd909;
	shf.l.wrap.b32 	%r862, %r856, %r857, 25;
	shf.l.wrap.b32 	%r863, %r857, %r856, 25;
	mov.b64 	%rd912, {%r863, %r862};
	xor.b64  	%rd913, %rd911, %rd912;
	xor.b64  	%rd914, %rd892, %rd838;
	xor.b64  	%rd915, %rd892, %rd865;
	and.b64  	%rd916, %rd915, %rd914;
	xor.b64  	%rd917, %rd916, %rd892;
	add.s64 	%rd918, %rd907, %rd917;
	add.s64 	%rd919, %rd918, %rd913;
	add.s32 	%r864, %r1799, 4;
	mul.wide.s32 	%rd920, %r864, 8;
	add.s64 	%rd921, %rd812, %rd920;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r865,%dummy}, %rd908;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r866}, %rd908;
	}
	shf.r.wrap.b32 	%r867, %r866, %r865, 14;
	shf.r.wrap.b32 	%r868, %r865, %r866, 14;
	mov.b64 	%rd922, {%r868, %r867};
	shf.r.wrap.b32 	%r869, %r866, %r865, 18;
	shf.r.wrap.b32 	%r870, %r865, %r866, 18;
	mov.b64 	%rd923, {%r870, %r869};
	xor.b64  	%rd924, %rd923, %rd922;
	shf.l.wrap.b32 	%r871, %r865, %r866, 23;
	shf.l.wrap.b32 	%r872, %r866, %r865, 23;
	mov.b64 	%rd925, {%r872, %r871};
	xor.b64  	%rd926, %rd924, %rd925;
	xor.b64  	%rd927, %rd881, %rd854;
	and.b64  	%rd928, %rd908, %rd927;
	xor.b64  	%rd929, %rd928, %rd854;
	add.s64 	%rd930, %rd827, %rd2245;
	ld.const.u64 	%rd931, [%rd921];
	add.s64 	%rd932, %rd930, %rd931;
	add.s64 	%rd933, %rd932, %rd929;
	add.s64 	%rd934, %rd933, %rd926;
	add.s64 	%rd935, %rd934, %rd838;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r873,%dummy}, %rd919;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r874}, %rd919;
	}
	shf.r.wrap.b32 	%r875, %r874, %r873, 28;
	shf.r.wrap.b32 	%r876, %r873, %r874, 28;
	mov.b64 	%rd936, {%r876, %r875};
	shf.l.wrap.b32 	%r877, %r873, %r874, 30;
	shf.l.wrap.b32 	%r878, %r874, %r873, 30;
	mov.b64 	%rd937, {%r878, %r877};
	xor.b64  	%rd938, %rd937, %rd936;
	shf.l.wrap.b32 	%r879, %r873, %r874, 25;
	shf.l.wrap.b32 	%r880, %r874, %r873, 25;
	mov.b64 	%rd939, {%r880, %r879};
	xor.b64  	%rd940, %rd938, %rd939;
	xor.b64  	%rd941, %rd919, %rd865;
	xor.b64  	%rd942, %rd919, %rd892;
	and.b64  	%rd943, %rd942, %rd941;
	xor.b64  	%rd944, %rd943, %rd919;
	add.s64 	%rd945, %rd934, %rd944;
	add.s64 	%rd946, %rd945, %rd940;
	add.s32 	%r881, %r1799, 5;
	mul.wide.s32 	%rd947, %r881, 8;
	add.s64 	%rd948, %rd812, %rd947;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r882,%dummy}, %rd935;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r883}, %rd935;
	}
	shf.r.wrap.b32 	%r884, %r883, %r882, 14;
	shf.r.wrap.b32 	%r885, %r882, %r883, 14;
	mov.b64 	%rd949, {%r885, %r884};
	shf.r.wrap.b32 	%r886, %r883, %r882, 18;
	shf.r.wrap.b32 	%r887, %r882, %r883, 18;
	mov.b64 	%rd950, {%r887, %r886};
	xor.b64  	%rd951, %rd950, %rd949;
	shf.l.wrap.b32 	%r888, %r882, %r883, 23;
	shf.l.wrap.b32 	%r889, %r883, %r882, 23;
	mov.b64 	%rd952, {%r889, %r888};
	xor.b64  	%rd953, %rd951, %rd952;
	xor.b64  	%rd954, %rd908, %rd881;
	and.b64  	%rd955, %rd935, %rd954;
	xor.b64  	%rd956, %rd955, %rd881;
	add.s64 	%rd957, %rd854, %rd2246;
	ld.const.u64 	%rd958, [%rd948];
	add.s64 	%rd959, %rd957, %rd958;
	add.s64 	%rd960, %rd959, %rd956;
	add.s64 	%rd961, %rd960, %rd953;
	add.s64 	%rd962, %rd961, %rd865;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r890,%dummy}, %rd946;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r891}, %rd946;
	}
	shf.r.wrap.b32 	%r892, %r891, %r890, 28;
	shf.r.wrap.b32 	%r893, %r890, %r891, 28;
	mov.b64 	%rd963, {%r893, %r892};
	shf.l.wrap.b32 	%r894, %r890, %r891, 30;
	shf.l.wrap.b32 	%r895, %r891, %r890, 30;
	mov.b64 	%rd964, {%r895, %r894};
	xor.b64  	%rd965, %rd964, %rd963;
	shf.l.wrap.b32 	%r896, %r890, %r891, 25;
	shf.l.wrap.b32 	%r897, %r891, %r890, 25;
	mov.b64 	%rd966, {%r897, %r896};
	xor.b64  	%rd967, %rd965, %rd966;
	xor.b64  	%rd968, %rd946, %rd892;
	xor.b64  	%rd969, %rd946, %rd919;
	and.b64  	%rd970, %rd969, %rd968;
	xor.b64  	%rd971, %rd970, %rd946;
	add.s64 	%rd972, %rd961, %rd971;
	add.s64 	%rd973, %rd972, %rd967;
	add.s32 	%r898, %r1799, 6;
	mul.wide.s32 	%rd974, %r898, 8;
	add.s64 	%rd975, %rd812, %rd974;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r899,%dummy}, %rd962;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r900}, %rd962;
	}
	shf.r.wrap.b32 	%r901, %r900, %r899, 14;
	shf.r.wrap.b32 	%r902, %r899, %r900, 14;
	mov.b64 	%rd976, {%r902, %r901};
	shf.r.wrap.b32 	%r903, %r900, %r899, 18;
	shf.r.wrap.b32 	%r904, %r899, %r900, 18;
	mov.b64 	%rd977, {%r904, %r903};
	xor.b64  	%rd978, %rd977, %rd976;
	shf.l.wrap.b32 	%r905, %r899, %r900, 23;
	shf.l.wrap.b32 	%r906, %r900, %r899, 23;
	mov.b64 	%rd979, {%r906, %r905};
	xor.b64  	%rd980, %rd978, %rd979;
	xor.b64  	%rd981, %rd935, %rd908;
	and.b64  	%rd982, %rd962, %rd981;
	xor.b64  	%rd983, %rd982, %rd908;
	add.s64 	%rd984, %rd881, %rd2247;
	ld.const.u64 	%rd985, [%rd975];
	add.s64 	%rd986, %rd984, %rd985;
	add.s64 	%rd987, %rd986, %rd983;
	add.s64 	%rd988, %rd987, %rd980;
	add.s64 	%rd989, %rd988, %rd892;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r907,%dummy}, %rd973;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r908}, %rd973;
	}
	shf.r.wrap.b32 	%r909, %r908, %r907, 28;
	shf.r.wrap.b32 	%r910, %r907, %r908, 28;
	mov.b64 	%rd990, {%r910, %r909};
	shf.l.wrap.b32 	%r911, %r907, %r908, 30;
	shf.l.wrap.b32 	%r912, %r908, %r907, 30;
	mov.b64 	%rd991, {%r912, %r911};
	xor.b64  	%rd992, %rd991, %rd990;
	shf.l.wrap.b32 	%r913, %r907, %r908, 25;
	shf.l.wrap.b32 	%r914, %r908, %r907, 25;
	mov.b64 	%rd993, {%r914, %r913};
	xor.b64  	%rd994, %rd992, %rd993;
	xor.b64  	%rd995, %rd973, %rd919;
	xor.b64  	%rd996, %rd973, %rd946;
	and.b64  	%rd997, %rd996, %rd995;
	xor.b64  	%rd998, %rd997, %rd973;
	add.s64 	%rd999, %rd988, %rd998;
	add.s64 	%rd1000, %rd999, %rd994;
	add.s32 	%r915, %r1799, 7;
	mul.wide.s32 	%rd1001, %r915, 8;
	add.s64 	%rd1002, %rd812, %rd1001;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r916,%dummy}, %rd989;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r917}, %rd989;
	}
	shf.r.wrap.b32 	%r918, %r917, %r916, 14;
	shf.r.wrap.b32 	%r919, %r916, %r917, 14;
	mov.b64 	%rd1003, {%r919, %r918};
	shf.r.wrap.b32 	%r920, %r917, %r916, 18;
	shf.r.wrap.b32 	%r921, %r916, %r917, 18;
	mov.b64 	%rd1004, {%r921, %r920};
	xor.b64  	%rd1005, %rd1004, %rd1003;
	shf.l.wrap.b32 	%r922, %r916, %r917, 23;
	shf.l.wrap.b32 	%r923, %r917, %r916, 23;
	mov.b64 	%rd1006, {%r923, %r922};
	xor.b64  	%rd1007, %rd1005, %rd1006;
	xor.b64  	%rd1008, %rd962, %rd935;
	and.b64  	%rd1009, %rd989, %rd1008;
	xor.b64  	%rd1010, %rd1009, %rd935;
	add.s64 	%rd1011, %rd908, %rd2248;
	ld.const.u64 	%rd1012, [%rd1002];
	add.s64 	%rd1013, %rd1011, %rd1012;
	add.s64 	%rd1014, %rd1013, %rd1010;
	add.s64 	%rd1015, %rd1014, %rd1007;
	add.s64 	%rd1016, %rd1015, %rd919;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r924,%dummy}, %rd1000;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r925}, %rd1000;
	}
	shf.r.wrap.b32 	%r926, %r925, %r924, 28;
	shf.r.wrap.b32 	%r927, %r924, %r925, 28;
	mov.b64 	%rd1017, {%r927, %r926};
	shf.l.wrap.b32 	%r928, %r924, %r925, 30;
	shf.l.wrap.b32 	%r929, %r925, %r924, 30;
	mov.b64 	%rd1018, {%r929, %r928};
	xor.b64  	%rd1019, %rd1018, %rd1017;
	shf.l.wrap.b32 	%r930, %r924, %r925, 25;
	shf.l.wrap.b32 	%r931, %r925, %r924, 25;
	mov.b64 	%rd1020, {%r931, %r930};
	xor.b64  	%rd1021, %rd1019, %rd1020;
	xor.b64  	%rd1022, %rd1000, %rd946;
	xor.b64  	%rd1023, %rd1000, %rd973;
	and.b64  	%rd1024, %rd1023, %rd1022;
	xor.b64  	%rd1025, %rd1024, %rd1000;
	add.s64 	%rd1026, %rd1015, %rd1025;
	add.s64 	%rd1027, %rd1026, %rd1021;
	add.s32 	%r932, %r1799, 8;
	mul.wide.s32 	%rd1028, %r932, 8;
	add.s64 	%rd1029, %rd812, %rd1028;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r933,%dummy}, %rd1016;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r934}, %rd1016;
	}
	shf.r.wrap.b32 	%r935, %r934, %r933, 14;
	shf.r.wrap.b32 	%r936, %r933, %r934, 14;
	mov.b64 	%rd1030, {%r936, %r935};
	shf.r.wrap.b32 	%r937, %r934, %r933, 18;
	shf.r.wrap.b32 	%r938, %r933, %r934, 18;
	mov.b64 	%rd1031, {%r938, %r937};
	xor.b64  	%rd1032, %rd1031, %rd1030;
	shf.l.wrap.b32 	%r939, %r933, %r934, 23;
	shf.l.wrap.b32 	%r940, %r934, %r933, 23;
	mov.b64 	%rd1033, {%r940, %r939};
	xor.b64  	%rd1034, %rd1032, %rd1033;
	xor.b64  	%rd1035, %rd989, %rd962;
	and.b64  	%rd1036, %rd1016, %rd1035;
	xor.b64  	%rd1037, %rd1036, %rd962;
	add.s64 	%rd1038, %rd935, %rd2232;
	ld.const.u64 	%rd1039, [%rd1029];
	add.s64 	%rd1040, %rd1038, %rd1039;
	add.s64 	%rd1041, %rd1040, %rd1037;
	add.s64 	%rd1042, %rd1041, %rd1034;
	add.s64 	%rd1043, %rd1042, %rd946;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r941,%dummy}, %rd1027;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r942}, %rd1027;
	}
	shf.r.wrap.b32 	%r943, %r942, %r941, 28;
	shf.r.wrap.b32 	%r944, %r941, %r942, 28;
	mov.b64 	%rd1044, {%r944, %r943};
	shf.l.wrap.b32 	%r945, %r941, %r942, 30;
	shf.l.wrap.b32 	%r946, %r942, %r941, 30;
	mov.b64 	%rd1045, {%r946, %r945};
	xor.b64  	%rd1046, %rd1045, %rd1044;
	shf.l.wrap.b32 	%r947, %r941, %r942, 25;
	shf.l.wrap.b32 	%r948, %r942, %r941, 25;
	mov.b64 	%rd1047, {%r948, %r947};
	xor.b64  	%rd1048, %rd1046, %rd1047;
	xor.b64  	%rd1049, %rd1027, %rd973;
	xor.b64  	%rd1050, %rd1027, %rd1000;
	and.b64  	%rd1051, %rd1050, %rd1049;
	xor.b64  	%rd1052, %rd1051, %rd1027;
	add.s64 	%rd1053, %rd1042, %rd1052;
	add.s64 	%rd1054, %rd1053, %rd1048;
	add.s32 	%r949, %r1799, 9;
	mul.wide.s32 	%rd1055, %r949, 8;
	add.s64 	%rd1056, %rd812, %rd1055;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r950,%dummy}, %rd1043;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r951}, %rd1043;
	}
	shf.r.wrap.b32 	%r952, %r951, %r950, 14;
	shf.r.wrap.b32 	%r953, %r950, %r951, 14;
	mov.b64 	%rd1057, {%r953, %r952};
	shf.r.wrap.b32 	%r954, %r951, %r950, 18;
	shf.r.wrap.b32 	%r955, %r950, %r951, 18;
	mov.b64 	%rd1058, {%r955, %r954};
	xor.b64  	%rd1059, %rd1058, %rd1057;
	shf.l.wrap.b32 	%r956, %r950, %r951, 23;
	shf.l.wrap.b32 	%r957, %r951, %r950, 23;
	mov.b64 	%rd1060, {%r957, %r956};
	xor.b64  	%rd1061, %rd1059, %rd1060;
	xor.b64  	%rd1062, %rd1016, %rd989;
	and.b64  	%rd1063, %rd1043, %rd1062;
	xor.b64  	%rd1064, %rd1063, %rd989;
	add.s64 	%rd1065, %rd962, %rd2231;
	ld.const.u64 	%rd1066, [%rd1056];
	add.s64 	%rd1067, %rd1065, %rd1066;
	add.s64 	%rd1068, %rd1067, %rd1064;
	add.s64 	%rd1069, %rd1068, %rd1061;
	add.s64 	%rd1070, %rd1069, %rd973;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r958,%dummy}, %rd1054;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r959}, %rd1054;
	}
	shf.r.wrap.b32 	%r960, %r959, %r958, 28;
	shf.r.wrap.b32 	%r961, %r958, %r959, 28;
	mov.b64 	%rd1071, {%r961, %r960};
	shf.l.wrap.b32 	%r962, %r958, %r959, 30;
	shf.l.wrap.b32 	%r963, %r959, %r958, 30;
	mov.b64 	%rd1072, {%r963, %r962};
	xor.b64  	%rd1073, %rd1072, %rd1071;
	shf.l.wrap.b32 	%r964, %r958, %r959, 25;
	shf.l.wrap.b32 	%r965, %r959, %r958, 25;
	mov.b64 	%rd1074, {%r965, %r964};
	xor.b64  	%rd1075, %rd1073, %rd1074;
	xor.b64  	%rd1076, %rd1054, %rd1000;
	xor.b64  	%rd1077, %rd1054, %rd1027;
	and.b64  	%rd1078, %rd1077, %rd1076;
	xor.b64  	%rd1079, %rd1078, %rd1054;
	add.s64 	%rd1080, %rd1069, %rd1079;
	add.s64 	%rd1081, %rd1080, %rd1075;
	add.s32 	%r966, %r1799, 10;
	mul.wide.s32 	%rd1082, %r966, 8;
	add.s64 	%rd1083, %rd812, %rd1082;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r967,%dummy}, %rd1070;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r968}, %rd1070;
	}
	shf.r.wrap.b32 	%r969, %r968, %r967, 14;
	shf.r.wrap.b32 	%r970, %r967, %r968, 14;
	mov.b64 	%rd1084, {%r970, %r969};
	shf.r.wrap.b32 	%r971, %r968, %r967, 18;
	shf.r.wrap.b32 	%r972, %r967, %r968, 18;
	mov.b64 	%rd1085, {%r972, %r971};
	xor.b64  	%rd1086, %rd1085, %rd1084;
	shf.l.wrap.b32 	%r973, %r967, %r968, 23;
	shf.l.wrap.b32 	%r974, %r968, %r967, 23;
	mov.b64 	%rd1087, {%r974, %r973};
	xor.b64  	%rd1088, %rd1086, %rd1087;
	xor.b64  	%rd1089, %rd1043, %rd1016;
	and.b64  	%rd1090, %rd1070, %rd1089;
	xor.b64  	%rd1091, %rd1090, %rd1016;
	add.s64 	%rd1092, %rd989, %rd2230;
	ld.const.u64 	%rd1093, [%rd1083];
	add.s64 	%rd1094, %rd1092, %rd1093;
	add.s64 	%rd1095, %rd1094, %rd1091;
	add.s64 	%rd1096, %rd1095, %rd1088;
	add.s64 	%rd1097, %rd1096, %rd1000;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r975,%dummy}, %rd1081;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r976}, %rd1081;
	}
	shf.r.wrap.b32 	%r977, %r976, %r975, 28;
	shf.r.wrap.b32 	%r978, %r975, %r976, 28;
	mov.b64 	%rd1098, {%r978, %r977};
	shf.l.wrap.b32 	%r979, %r975, %r976, 30;
	shf.l.wrap.b32 	%r980, %r976, %r975, 30;
	mov.b64 	%rd1099, {%r980, %r979};
	xor.b64  	%rd1100, %rd1099, %rd1098;
	shf.l.wrap.b32 	%r981, %r975, %r976, 25;
	shf.l.wrap.b32 	%r982, %r976, %r975, 25;
	mov.b64 	%rd1101, {%r982, %r981};
	xor.b64  	%rd1102, %rd1100, %rd1101;
	xor.b64  	%rd1103, %rd1081, %rd1027;
	xor.b64  	%rd1104, %rd1081, %rd1054;
	and.b64  	%rd1105, %rd1104, %rd1103;
	xor.b64  	%rd1106, %rd1105, %rd1081;
	add.s64 	%rd1107, %rd1096, %rd1106;
	add.s64 	%rd1108, %rd1107, %rd1102;
	add.s32 	%r983, %r1799, 11;
	mul.wide.s32 	%rd1109, %r983, 8;
	add.s64 	%rd1110, %rd812, %rd1109;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r984,%dummy}, %rd1097;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r985}, %rd1097;
	}
	shf.r.wrap.b32 	%r986, %r985, %r984, 14;
	shf.r.wrap.b32 	%r987, %r984, %r985, 14;
	mov.b64 	%rd1111, {%r987, %r986};
	shf.r.wrap.b32 	%r988, %r985, %r984, 18;
	shf.r.wrap.b32 	%r989, %r984, %r985, 18;
	mov.b64 	%rd1112, {%r989, %r988};
	xor.b64  	%rd1113, %rd1112, %rd1111;
	shf.l.wrap.b32 	%r990, %r984, %r985, 23;
	shf.l.wrap.b32 	%r991, %r985, %r984, 23;
	mov.b64 	%rd1114, {%r991, %r990};
	xor.b64  	%rd1115, %rd1113, %rd1114;
	xor.b64  	%rd1116, %rd1070, %rd1043;
	and.b64  	%rd1117, %rd1097, %rd1116;
	xor.b64  	%rd1118, %rd1117, %rd1043;
	add.s64 	%rd1119, %rd1016, %rd2229;
	ld.const.u64 	%rd1120, [%rd1110];
	add.s64 	%rd1121, %rd1119, %rd1120;
	add.s64 	%rd1122, %rd1121, %rd1118;
	add.s64 	%rd1123, %rd1122, %rd1115;
	add.s64 	%rd1124, %rd1123, %rd1027;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r992,%dummy}, %rd1108;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r993}, %rd1108;
	}
	shf.r.wrap.b32 	%r994, %r993, %r992, 28;
	shf.r.wrap.b32 	%r995, %r992, %r993, 28;
	mov.b64 	%rd1125, {%r995, %r994};
	shf.l.wrap.b32 	%r996, %r992, %r993, 30;
	shf.l.wrap.b32 	%r997, %r993, %r992, 30;
	mov.b64 	%rd1126, {%r997, %r996};
	xor.b64  	%rd1127, %rd1126, %rd1125;
	shf.l.wrap.b32 	%r998, %r992, %r993, 25;
	shf.l.wrap.b32 	%r999, %r993, %r992, 25;
	mov.b64 	%rd1128, {%r999, %r998};
	xor.b64  	%rd1129, %rd1127, %rd1128;
	xor.b64  	%rd1130, %rd1108, %rd1054;
	xor.b64  	%rd1131, %rd1108, %rd1081;
	and.b64  	%rd1132, %rd1131, %rd1130;
	xor.b64  	%rd1133, %rd1132, %rd1108;
	add.s64 	%rd1134, %rd1123, %rd1133;
	add.s64 	%rd1135, %rd1134, %rd1129;
	add.s32 	%r1000, %r1799, 12;
	mul.wide.s32 	%rd1136, %r1000, 8;
	add.s64 	%rd1137, %rd812, %rd1136;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1001,%dummy}, %rd1124;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1002}, %rd1124;
	}
	shf.r.wrap.b32 	%r1003, %r1002, %r1001, 14;
	shf.r.wrap.b32 	%r1004, %r1001, %r1002, 14;
	mov.b64 	%rd1138, {%r1004, %r1003};
	shf.r.wrap.b32 	%r1005, %r1002, %r1001, 18;
	shf.r.wrap.b32 	%r1006, %r1001, %r1002, 18;
	mov.b64 	%rd1139, {%r1006, %r1005};
	xor.b64  	%rd1140, %rd1139, %rd1138;
	shf.l.wrap.b32 	%r1007, %r1001, %r1002, 23;
	shf.l.wrap.b32 	%r1008, %r1002, %r1001, 23;
	mov.b64 	%rd1141, {%r1008, %r1007};
	xor.b64  	%rd1142, %rd1140, %rd1141;
	xor.b64  	%rd1143, %rd1097, %rd1070;
	and.b64  	%rd1144, %rd1124, %rd1143;
	xor.b64  	%rd1145, %rd1144, %rd1070;
	add.s64 	%rd1146, %rd1043, %rd2228;
	ld.const.u64 	%rd1147, [%rd1137];
	add.s64 	%rd1148, %rd1146, %rd1147;
	add.s64 	%rd1149, %rd1148, %rd1145;
	add.s64 	%rd1150, %rd1149, %rd1142;
	add.s64 	%rd2240, %rd1150, %rd1054;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1009,%dummy}, %rd1135;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1010}, %rd1135;
	}
	shf.r.wrap.b32 	%r1011, %r1010, %r1009, 28;
	shf.r.wrap.b32 	%r1012, %r1009, %r1010, 28;
	mov.b64 	%rd1151, {%r1012, %r1011};
	shf.l.wrap.b32 	%r1013, %r1009, %r1010, 30;
	shf.l.wrap.b32 	%r1014, %r1010, %r1009, 30;
	mov.b64 	%rd1152, {%r1014, %r1013};
	xor.b64  	%rd1153, %rd1152, %rd1151;
	shf.l.wrap.b32 	%r1015, %r1009, %r1010, 25;
	shf.l.wrap.b32 	%r1016, %r1010, %r1009, 25;
	mov.b64 	%rd1154, {%r1016, %r1015};
	xor.b64  	%rd1155, %rd1153, %rd1154;
	xor.b64  	%rd1156, %rd1135, %rd1081;
	xor.b64  	%rd1157, %rd1135, %rd1108;
	and.b64  	%rd1158, %rd1157, %rd1156;
	xor.b64  	%rd1159, %rd1158, %rd1135;
	add.s64 	%rd1160, %rd1150, %rd1159;
	add.s64 	%rd2236, %rd1160, %rd1155;
	add.s32 	%r1017, %r1799, 13;
	mul.wide.s32 	%rd1161, %r1017, 8;
	add.s64 	%rd1162, %rd812, %rd1161;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1018,%dummy}, %rd2240;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1019}, %rd2240;
	}
	shf.r.wrap.b32 	%r1020, %r1019, %r1018, 14;
	shf.r.wrap.b32 	%r1021, %r1018, %r1019, 14;
	mov.b64 	%rd1163, {%r1021, %r1020};
	shf.r.wrap.b32 	%r1022, %r1019, %r1018, 18;
	shf.r.wrap.b32 	%r1023, %r1018, %r1019, 18;
	mov.b64 	%rd1164, {%r1023, %r1022};
	xor.b64  	%rd1165, %rd1164, %rd1163;
	shf.l.wrap.b32 	%r1024, %r1018, %r1019, 23;
	shf.l.wrap.b32 	%r1025, %r1019, %r1018, 23;
	mov.b64 	%rd1166, {%r1025, %r1024};
	xor.b64  	%rd1167, %rd1165, %rd1166;
	xor.b64  	%rd1168, %rd1124, %rd1097;
	and.b64  	%rd1169, %rd2240, %rd1168;
	xor.b64  	%rd1170, %rd1169, %rd1097;
	add.s64 	%rd1171, %rd1070, %rd2227;
	ld.const.u64 	%rd1172, [%rd1162];
	add.s64 	%rd1173, %rd1171, %rd1172;
	add.s64 	%rd1174, %rd1173, %rd1170;
	add.s64 	%rd1175, %rd1174, %rd1167;
	add.s64 	%rd2239, %rd1175, %rd1081;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1026,%dummy}, %rd2236;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1027}, %rd2236;
	}
	shf.r.wrap.b32 	%r1028, %r1027, %r1026, 28;
	shf.r.wrap.b32 	%r1029, %r1026, %r1027, 28;
	mov.b64 	%rd1176, {%r1029, %r1028};
	shf.l.wrap.b32 	%r1030, %r1026, %r1027, 30;
	shf.l.wrap.b32 	%r1031, %r1027, %r1026, 30;
	mov.b64 	%rd1177, {%r1031, %r1030};
	xor.b64  	%rd1178, %rd1177, %rd1176;
	shf.l.wrap.b32 	%r1032, %r1026, %r1027, 25;
	shf.l.wrap.b32 	%r1033, %r1027, %r1026, 25;
	mov.b64 	%rd1179, {%r1033, %r1032};
	xor.b64  	%rd1180, %rd1178, %rd1179;
	xor.b64  	%rd1181, %rd2236, %rd1108;
	xor.b64  	%rd1182, %rd2236, %rd1135;
	and.b64  	%rd1183, %rd1182, %rd1181;
	xor.b64  	%rd1184, %rd1183, %rd2236;
	add.s64 	%rd1185, %rd1175, %rd1184;
	add.s64 	%rd2235, %rd1185, %rd1180;
	add.s32 	%r1034, %r1799, 14;
	mul.wide.s32 	%rd1186, %r1034, 8;
	add.s64 	%rd1187, %rd812, %rd1186;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1035,%dummy}, %rd2239;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1036}, %rd2239;
	}
	shf.r.wrap.b32 	%r1037, %r1036, %r1035, 14;
	shf.r.wrap.b32 	%r1038, %r1035, %r1036, 14;
	mov.b64 	%rd1188, {%r1038, %r1037};
	shf.r.wrap.b32 	%r1039, %r1036, %r1035, 18;
	shf.r.wrap.b32 	%r1040, %r1035, %r1036, 18;
	mov.b64 	%rd1189, {%r1040, %r1039};
	xor.b64  	%rd1190, %rd1189, %rd1188;
	shf.l.wrap.b32 	%r1041, %r1035, %r1036, 23;
	shf.l.wrap.b32 	%r1042, %r1036, %r1035, 23;
	mov.b64 	%rd1191, {%r1042, %r1041};
	xor.b64  	%rd1192, %rd1190, %rd1191;
	xor.b64  	%rd1193, %rd2240, %rd1124;
	and.b64  	%rd1194, %rd2239, %rd1193;
	xor.b64  	%rd1195, %rd1194, %rd1124;
	add.s64 	%rd1196, %rd1097, %rd2226;
	ld.const.u64 	%rd1197, [%rd1187];
	add.s64 	%rd1198, %rd1196, %rd1197;
	add.s64 	%rd1199, %rd1198, %rd1195;
	add.s64 	%rd1200, %rd1199, %rd1192;
	add.s64 	%rd2238, %rd1200, %rd1108;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1043,%dummy}, %rd2235;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1044}, %rd2235;
	}
	shf.r.wrap.b32 	%r1045, %r1044, %r1043, 28;
	shf.r.wrap.b32 	%r1046, %r1043, %r1044, 28;
	mov.b64 	%rd1201, {%r1046, %r1045};
	shf.l.wrap.b32 	%r1047, %r1043, %r1044, 30;
	shf.l.wrap.b32 	%r1048, %r1044, %r1043, 30;
	mov.b64 	%rd1202, {%r1048, %r1047};
	xor.b64  	%rd1203, %rd1202, %rd1201;
	shf.l.wrap.b32 	%r1049, %r1043, %r1044, 25;
	shf.l.wrap.b32 	%r1050, %r1044, %r1043, 25;
	mov.b64 	%rd1204, {%r1050, %r1049};
	xor.b64  	%rd1205, %rd1203, %rd1204;
	xor.b64  	%rd1206, %rd2235, %rd1135;
	xor.b64  	%rd1207, %rd2235, %rd2236;
	and.b64  	%rd1208, %rd1207, %rd1206;
	xor.b64  	%rd1209, %rd1208, %rd2235;
	add.s64 	%rd1210, %rd1200, %rd1209;
	add.s64 	%rd2234, %rd1210, %rd1205;
	add.s32 	%r1051, %r1799, 15;
	mul.wide.s32 	%rd1211, %r1051, 8;
	add.s64 	%rd1212, %rd812, %rd1211;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1052,%dummy}, %rd2238;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1053}, %rd2238;
	}
	shf.r.wrap.b32 	%r1054, %r1053, %r1052, 14;
	shf.r.wrap.b32 	%r1055, %r1052, %r1053, 14;
	mov.b64 	%rd1213, {%r1055, %r1054};
	shf.r.wrap.b32 	%r1056, %r1053, %r1052, 18;
	shf.r.wrap.b32 	%r1057, %r1052, %r1053, 18;
	mov.b64 	%rd1214, {%r1057, %r1056};
	xor.b64  	%rd1215, %rd1214, %rd1213;
	shf.l.wrap.b32 	%r1058, %r1052, %r1053, 23;
	shf.l.wrap.b32 	%r1059, %r1053, %r1052, 23;
	mov.b64 	%rd1216, {%r1059, %r1058};
	xor.b64  	%rd1217, %rd1215, %rd1216;
	xor.b64  	%rd1218, %rd2239, %rd2240;
	and.b64  	%rd1219, %rd2238, %rd1218;
	xor.b64  	%rd1220, %rd1219, %rd2240;
	add.s64 	%rd1221, %rd1124, %rd2225;
	ld.const.u64 	%rd1222, [%rd1212];
	add.s64 	%rd1223, %rd1221, %rd1222;
	add.s64 	%rd1224, %rd1223, %rd1220;
	add.s64 	%rd1225, %rd1224, %rd1217;
	add.s64 	%rd2237, %rd1225, %rd1135;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1060,%dummy}, %rd2234;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1061}, %rd2234;
	}
	shf.r.wrap.b32 	%r1062, %r1061, %r1060, 28;
	shf.r.wrap.b32 	%r1063, %r1060, %r1061, 28;
	mov.b64 	%rd1226, {%r1063, %r1062};
	shf.l.wrap.b32 	%r1064, %r1060, %r1061, 30;
	shf.l.wrap.b32 	%r1065, %r1061, %r1060, 30;
	mov.b64 	%rd1227, {%r1065, %r1064};
	xor.b64  	%rd1228, %rd1227, %rd1226;
	shf.l.wrap.b32 	%r1066, %r1060, %r1061, 25;
	shf.l.wrap.b32 	%r1067, %r1061, %r1060, 25;
	mov.b64 	%rd1229, {%r1067, %r1066};
	xor.b64  	%rd1230, %rd1228, %rd1229;
	xor.b64  	%rd1231, %rd2234, %rd2236;
	xor.b64  	%rd1232, %rd2234, %rd2235;
	and.b64  	%rd1233, %rd1232, %rd1231;
	xor.b64  	%rd1234, %rd1233, %rd2234;
	add.s64 	%rd1235, %rd1225, %rd1234;
	add.s64 	%rd2233, %rd1235, %rd1230;
	add.s32 	%r1799, %r1799, 16;
	setp.lt.s32	%p193, %r1799, 80;
	@%p193 bra 	BB4_322;

	ld.param.u64 	%rd2223, [sha512_final_param_0];
	ld.const.u64 	%rd2264, [k_sha512];
	ld.const.u64 	%rd2263, [k_sha512+8];
	ld.const.u64 	%rd2262, [k_sha512+16];
	ld.const.u64 	%rd2261, [k_sha512+24];
	ld.const.u64 	%rd2260, [k_sha512+32];
	ld.const.u64 	%rd2259, [k_sha512+40];
	ld.const.u64 	%rd2258, [k_sha512+48];
	ld.const.u64 	%rd2257, [k_sha512+56];
	ld.const.u64 	%rd2256, [k_sha512+64];
	ld.const.u64 	%rd2255, [k_sha512+72];
	ld.const.u64 	%rd2254, [k_sha512+80];
	ld.const.u64 	%rd2253, [k_sha512+88];
	ld.const.u64 	%rd2252, [k_sha512+96];
	ld.const.u64 	%rd2251, [k_sha512+104];
	ld.const.u64 	%rd2250, [k_sha512+112];
	ld.const.u64 	%rd2249, [k_sha512+120];
	add.s64 	%rd2272, %rd2272, %rd2233;
	st.u64 	[%rd2223], %rd2272;
	add.s64 	%rd2271, %rd2271, %rd2234;
	st.u64 	[%rd2223+8], %rd2271;
	add.s64 	%rd2270, %rd2270, %rd2235;
	st.u64 	[%rd2223+16], %rd2270;
	add.s64 	%rd2269, %rd2269, %rd2236;
	st.u64 	[%rd2223+24], %rd2269;
	add.s64 	%rd2268, %rd2268, %rd2237;
	st.u64 	[%rd2223+32], %rd2268;
	add.s64 	%rd2267, %rd2267, %rd2238;
	st.u64 	[%rd2223+40], %rd2267;
	add.s64 	%rd2266, %rd2266, %rd2239;
	st.u64 	[%rd2223+48], %rd2266;
	add.s64 	%rd2265, %rd2265, %rd2240;
	st.u64 	[%rd2223+56], %rd2265;
	mov.u32 	%r1800, 0;
	mov.u64 	%rd1236, 0;
	st.u64 	[%rd2223+184], %rd1236;
	st.v2.u32 	[%rd2223+64], {%r1800, %r1800};
	st.v2.u32 	[%rd2223+72], {%r1800, %r1800};
	st.v2.u32 	[%rd2223+80], {%r1800, %r1800};
	st.v2.u32 	[%rd2223+88], {%r1800, %r1800};
	st.v2.u32 	[%rd2223+96], {%r1800, %r1800};
	st.v2.u32 	[%rd2223+104], {%r1800, %r1800};
	st.v2.u32 	[%rd2223+112], {%r1800, %r1800};
	st.v2.u32 	[%rd2223+120], {%r1800, %r1800};
	st.v2.u32 	[%rd2223+128], {%r1800, %r1800};
	st.v2.u32 	[%rd2223+136], {%r1800, %r1800};
	st.v2.u32 	[%rd2223+144], {%r1800, %r1800};
	st.v2.u32 	[%rd2223+152], {%r1800, %r1800};
	st.v2.u32 	[%rd2223+160], {%r1800, %r1800};
	st.v2.u32 	[%rd2223+168], {%r1800, %r1800};
	st.v2.u32 	[%rd2223+176], {%r1800, %r1800};
	mov.u32 	%r1801, %r1800;
	mov.u32 	%r1802, %r1800;
	mov.u32 	%r1803, %r1800;
	mov.u32 	%r1804, %r1800;
	mov.u32 	%r1805, %r1800;
	mov.u32 	%r1806, %r1800;
	mov.u32 	%r1807, %r1800;
	mov.u32 	%r1808, %r1800;
	mov.u32 	%r1809, %r1800;
	mov.u32 	%r1810, %r1800;
	mov.u32 	%r1811, %r1800;
	mov.u32 	%r1812, %r1800;
	mov.u32 	%r1813, %r1800;
	mov.u32 	%r1814, %r1800;
	mov.u32 	%r1815, %r1800;
	mov.u32 	%r1816, %r1800;
	mov.u32 	%r1817, %r1800;
	mov.u32 	%r1818, %r1800;
	mov.u32 	%r1819, %r1800;
	mov.u32 	%r1820, %r1800;
	mov.u32 	%r1821, %r1800;
	mov.u32 	%r1822, %r1800;
	mov.u32 	%r1823, %r1800;
	mov.u32 	%r1824, %r1800;
	mov.u32 	%r1825, %r1800;
	mov.u32 	%r1826, %r1800;
	mov.u32 	%r1827, %r1800;
	mov.u32 	%r1828, %r1800;
	mov.u32 	%r1829, %r1800;
	bra.uni 	BB4_324;

BB4_320:
	ld.u32 	%r1827, [%rd9+64];
	ld.u32 	%r1826, [%rd10+4];
	ld.u32 	%r1825, [%rd2];
	ld.u32 	%r1824, [%rd2+4];
	ld.u32 	%r1823, [%rd9+80];
	ld.u32 	%r1822, [%rd12+4];
	ld.u32 	%r1821, [%rd3];
	ld.u32 	%r1820, [%rd3+4];
	ld.u32 	%r1819, [%rd9+96];
	ld.u32 	%r1818, [%rd14+4];
	ld.u32 	%r1817, [%rd4];
	ld.u32 	%r1816, [%rd4+4];
	ld.u32 	%r1815, [%rd9+112];
	ld.u32 	%r1814, [%rd16+4];
	ld.u32 	%r1813, [%rd5];
	ld.u32 	%r1812, [%rd5+4];
	ld.u32 	%r1811, [%rd9+128];
	ld.u32 	%r1810, [%rd18+4];
	ld.u32 	%r1809, [%rd6];
	ld.u32 	%r1808, [%rd6+4];
	ld.u32 	%r1807, [%rd9+144];
	ld.u32 	%r1806, [%rd20+4];
	ld.u32 	%r1805, [%rd7];
	ld.u32 	%r1804, [%rd7+4];
	ld.u32 	%r1803, [%rd9+160];
	ld.u32 	%r1802, [%rd22+4];
	ld.u32 	%r1801, [%rd8];
	ld.u32 	%r1800, [%rd8+4];
	ld.const.u64 	%rd2264, [k_sha512];
	ld.const.u64 	%rd2263, [k_sha512+8];
	ld.const.u64 	%rd2262, [k_sha512+16];
	ld.const.u64 	%rd2261, [k_sha512+24];
	ld.const.u64 	%rd2260, [k_sha512+32];
	ld.const.u64 	%rd2259, [k_sha512+40];
	ld.const.u64 	%rd2258, [k_sha512+48];
	ld.const.u64 	%rd2257, [k_sha512+56];
	ld.const.u64 	%rd2256, [k_sha512+64];
	ld.const.u64 	%rd2255, [k_sha512+72];
	ld.const.u64 	%rd2254, [k_sha512+80];
	ld.const.u64 	%rd2253, [k_sha512+88];
	ld.const.u64 	%rd2252, [k_sha512+96];
	ld.const.u64 	%rd2251, [k_sha512+104];
	ld.const.u64 	%rd2250, [k_sha512+112];
	ld.const.u64 	%rd2249, [k_sha512+120];

BB4_324:
	ld.param.u64 	%rd2224, [sha512_final_param_0];
	mov.u32 	%r1099, 0;
	st.u32 	[%rd2224+184], %r1099;
	shl.b32 	%r1100, %r1, 3;
	st.u32 	[%rd2224+188], %r1100;
	mov.b64	%rd2290, {%r1828, %r1829};
	mov.b64	%rd2291, {%r1826, %r1827};
	mov.b64	%rd2292, {%r1824, %r1825};
	mov.b64	%rd2293, {%r1822, %r1823};
	mov.b64	%rd2294, {%r1820, %r1821};
	mov.b64	%rd2295, {%r1818, %r1819};
	mov.b64	%rd2296, {%r1816, %r1817};
	mov.b64	%rd2297, {%r1814, %r1815};
	mov.b64	%rd2281, {%r1812, %r1813};
	mov.b64	%rd2280, {%r1810, %r1811};
	mov.b64	%rd2279, {%r1808, %r1809};
	mov.b64	%rd2278, {%r1806, %r1807};
	mov.b64	%rd2277, {%r1804, %r1805};
	mov.b64	%rd2276, {%r1802, %r1803};
	mov.b64	%rd2275, {%r1800, %r1801};
	mov.b64	%rd2274, {%r1100, %r1099};
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1101,%dummy}, %rd2268;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1102}, %rd2268;
	}
	shf.r.wrap.b32 	%r1103, %r1102, %r1101, 18;
	shf.r.wrap.b32 	%r1104, %r1101, %r1102, 18;
	mov.b64 	%rd1238, {%r1104, %r1103};
	shf.r.wrap.b32 	%r1105, %r1102, %r1101, 14;
	shf.r.wrap.b32 	%r1106, %r1101, %r1102, 14;
	mov.b64 	%rd1239, {%r1106, %r1105};
	xor.b64  	%rd1240, %rd1238, %rd1239;
	shf.l.wrap.b32 	%r1107, %r1101, %r1102, 23;
	shf.l.wrap.b32 	%r1108, %r1102, %r1101, 23;
	mov.b64 	%rd1241, {%r1108, %r1107};
	xor.b64  	%rd1242, %rd1240, %rd1241;
	xor.b64  	%rd1243, %rd2266, %rd2267;
	and.b64  	%rd1244, %rd1243, %rd2268;
	xor.b64  	%rd1245, %rd1244, %rd2266;
	add.s64 	%rd1246, %rd1245, %rd2265;
	add.s64 	%rd1247, %rd1246, %rd2290;
	add.s64 	%rd1248, %rd1247, %rd2264;
	add.s64 	%rd1249, %rd1248, %rd1242;
	add.s64 	%rd1250, %rd1249, %rd2269;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1109}, %rd2272;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1110,%dummy}, %rd2272;
	}
	shf.l.wrap.b32 	%r1111, %r1110, %r1109, 30;
	shf.l.wrap.b32 	%r1112, %r1109, %r1110, 30;
	mov.b64 	%rd1251, {%r1112, %r1111};
	shf.r.wrap.b32 	%r1113, %r1109, %r1110, 28;
	shf.r.wrap.b32 	%r1114, %r1110, %r1109, 28;
	mov.b64 	%rd1252, {%r1114, %r1113};
	xor.b64  	%rd1253, %rd1251, %rd1252;
	shf.l.wrap.b32 	%r1115, %r1110, %r1109, 25;
	shf.l.wrap.b32 	%r1116, %r1109, %r1110, 25;
	mov.b64 	%rd1254, {%r1116, %r1115};
	xor.b64  	%rd1255, %rd1253, %rd1254;
	xor.b64  	%rd1256, %rd2271, %rd2272;
	xor.b64  	%rd1257, %rd2270, %rd2272;
	and.b64  	%rd1258, %rd1257, %rd1256;
	xor.b64  	%rd1259, %rd1258, %rd2272;
	add.s64 	%rd1260, %rd1249, %rd1259;
	add.s64 	%rd1261, %rd1260, %rd1255;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1117,%dummy}, %rd1250;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1118}, %rd1250;
	}
	shf.r.wrap.b32 	%r1119, %r1118, %r1117, 14;
	shf.r.wrap.b32 	%r1120, %r1117, %r1118, 14;
	mov.b64 	%rd1262, {%r1120, %r1119};
	shf.r.wrap.b32 	%r1121, %r1118, %r1117, 18;
	shf.r.wrap.b32 	%r1122, %r1117, %r1118, 18;
	mov.b64 	%rd1263, {%r1122, %r1121};
	xor.b64  	%rd1264, %rd1263, %rd1262;
	shf.l.wrap.b32 	%r1123, %r1117, %r1118, 23;
	shf.l.wrap.b32 	%r1124, %r1118, %r1117, 23;
	mov.b64 	%rd1265, {%r1124, %r1123};
	xor.b64  	%rd1266, %rd1264, %rd1265;
	xor.b64  	%rd1267, %rd2267, %rd2268;
	and.b64  	%rd1268, %rd1250, %rd1267;
	xor.b64  	%rd1269, %rd1268, %rd2267;
	add.s64 	%rd1270, %rd2291, %rd2266;
	add.s64 	%rd1271, %rd1270, %rd2263;
	add.s64 	%rd1272, %rd1271, %rd1269;
	add.s64 	%rd1273, %rd1272, %rd1266;
	add.s64 	%rd1274, %rd1273, %rd2270;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1125,%dummy}, %rd1261;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1126}, %rd1261;
	}
	shf.r.wrap.b32 	%r1127, %r1126, %r1125, 28;
	shf.r.wrap.b32 	%r1128, %r1125, %r1126, 28;
	mov.b64 	%rd1275, {%r1128, %r1127};
	shf.l.wrap.b32 	%r1129, %r1125, %r1126, 30;
	shf.l.wrap.b32 	%r1130, %r1126, %r1125, 30;
	mov.b64 	%rd1276, {%r1130, %r1129};
	xor.b64  	%rd1277, %rd1276, %rd1275;
	shf.l.wrap.b32 	%r1131, %r1125, %r1126, 25;
	shf.l.wrap.b32 	%r1132, %r1126, %r1125, 25;
	mov.b64 	%rd1278, {%r1132, %r1131};
	xor.b64  	%rd1279, %rd1277, %rd1278;
	xor.b64  	%rd1280, %rd1261, %rd2271;
	xor.b64  	%rd1281, %rd1261, %rd2272;
	and.b64  	%rd1282, %rd1281, %rd1280;
	xor.b64  	%rd1283, %rd1282, %rd1261;
	add.s64 	%rd1284, %rd1273, %rd1283;
	add.s64 	%rd1285, %rd1284, %rd1279;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1133,%dummy}, %rd1274;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1134}, %rd1274;
	}
	shf.r.wrap.b32 	%r1135, %r1134, %r1133, 14;
	shf.r.wrap.b32 	%r1136, %r1133, %r1134, 14;
	mov.b64 	%rd1286, {%r1136, %r1135};
	shf.r.wrap.b32 	%r1137, %r1134, %r1133, 18;
	shf.r.wrap.b32 	%r1138, %r1133, %r1134, 18;
	mov.b64 	%rd1287, {%r1138, %r1137};
	xor.b64  	%rd1288, %rd1287, %rd1286;
	shf.l.wrap.b32 	%r1139, %r1133, %r1134, 23;
	shf.l.wrap.b32 	%r1140, %r1134, %r1133, 23;
	mov.b64 	%rd1289, {%r1140, %r1139};
	xor.b64  	%rd1290, %rd1288, %rd1289;
	xor.b64  	%rd1291, %rd1250, %rd2268;
	and.b64  	%rd1292, %rd1274, %rd1291;
	xor.b64  	%rd1293, %rd1292, %rd2268;
	add.s64 	%rd1294, %rd2292, %rd2267;
	add.s64 	%rd1295, %rd1294, %rd2262;
	add.s64 	%rd1296, %rd1295, %rd1293;
	add.s64 	%rd1297, %rd1296, %rd1290;
	add.s64 	%rd1298, %rd1297, %rd2271;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1141,%dummy}, %rd1285;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1142}, %rd1285;
	}
	shf.r.wrap.b32 	%r1143, %r1142, %r1141, 28;
	shf.r.wrap.b32 	%r1144, %r1141, %r1142, 28;
	mov.b64 	%rd1299, {%r1144, %r1143};
	shf.l.wrap.b32 	%r1145, %r1141, %r1142, 30;
	shf.l.wrap.b32 	%r1146, %r1142, %r1141, 30;
	mov.b64 	%rd1300, {%r1146, %r1145};
	xor.b64  	%rd1301, %rd1300, %rd1299;
	shf.l.wrap.b32 	%r1147, %r1141, %r1142, 25;
	shf.l.wrap.b32 	%r1148, %r1142, %r1141, 25;
	mov.b64 	%rd1302, {%r1148, %r1147};
	xor.b64  	%rd1303, %rd1301, %rd1302;
	xor.b64  	%rd1304, %rd1285, %rd2272;
	xor.b64  	%rd1305, %rd1285, %rd1261;
	and.b64  	%rd1306, %rd1305, %rd1304;
	xor.b64  	%rd1307, %rd1306, %rd1285;
	add.s64 	%rd1308, %rd1297, %rd1307;
	add.s64 	%rd1309, %rd1308, %rd1303;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1149,%dummy}, %rd1298;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1150}, %rd1298;
	}
	shf.r.wrap.b32 	%r1151, %r1150, %r1149, 14;
	shf.r.wrap.b32 	%r1152, %r1149, %r1150, 14;
	mov.b64 	%rd1310, {%r1152, %r1151};
	shf.r.wrap.b32 	%r1153, %r1150, %r1149, 18;
	shf.r.wrap.b32 	%r1154, %r1149, %r1150, 18;
	mov.b64 	%rd1311, {%r1154, %r1153};
	xor.b64  	%rd1312, %rd1311, %rd1310;
	shf.l.wrap.b32 	%r1155, %r1149, %r1150, 23;
	shf.l.wrap.b32 	%r1156, %r1150, %r1149, 23;
	mov.b64 	%rd1313, {%r1156, %r1155};
	xor.b64  	%rd1314, %rd1312, %rd1313;
	xor.b64  	%rd1315, %rd1274, %rd1250;
	and.b64  	%rd1316, %rd1298, %rd1315;
	xor.b64  	%rd1317, %rd1316, %rd1250;
	add.s64 	%rd1318, %rd2293, %rd2268;
	add.s64 	%rd1319, %rd1318, %rd2261;
	add.s64 	%rd1320, %rd1319, %rd1317;
	add.s64 	%rd1321, %rd1320, %rd1314;
	add.s64 	%rd1322, %rd1321, %rd2272;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1157,%dummy}, %rd1309;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1158}, %rd1309;
	}
	shf.r.wrap.b32 	%r1159, %r1158, %r1157, 28;
	shf.r.wrap.b32 	%r1160, %r1157, %r1158, 28;
	mov.b64 	%rd1323, {%r1160, %r1159};
	shf.l.wrap.b32 	%r1161, %r1157, %r1158, 30;
	shf.l.wrap.b32 	%r1162, %r1158, %r1157, 30;
	mov.b64 	%rd1324, {%r1162, %r1161};
	xor.b64  	%rd1325, %rd1324, %rd1323;
	shf.l.wrap.b32 	%r1163, %r1157, %r1158, 25;
	shf.l.wrap.b32 	%r1164, %r1158, %r1157, 25;
	mov.b64 	%rd1326, {%r1164, %r1163};
	xor.b64  	%rd1327, %rd1325, %rd1326;
	xor.b64  	%rd1328, %rd1309, %rd1261;
	xor.b64  	%rd1329, %rd1309, %rd1285;
	and.b64  	%rd1330, %rd1329, %rd1328;
	xor.b64  	%rd1331, %rd1330, %rd1309;
	add.s64 	%rd1332, %rd1321, %rd1331;
	add.s64 	%rd1333, %rd1332, %rd1327;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1165,%dummy}, %rd1322;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1166}, %rd1322;
	}
	shf.r.wrap.b32 	%r1167, %r1166, %r1165, 14;
	shf.r.wrap.b32 	%r1168, %r1165, %r1166, 14;
	mov.b64 	%rd1334, {%r1168, %r1167};
	shf.r.wrap.b32 	%r1169, %r1166, %r1165, 18;
	shf.r.wrap.b32 	%r1170, %r1165, %r1166, 18;
	mov.b64 	%rd1335, {%r1170, %r1169};
	xor.b64  	%rd1336, %rd1335, %rd1334;
	shf.l.wrap.b32 	%r1171, %r1165, %r1166, 23;
	shf.l.wrap.b32 	%r1172, %r1166, %r1165, 23;
	mov.b64 	%rd1337, {%r1172, %r1171};
	xor.b64  	%rd1338, %rd1336, %rd1337;
	xor.b64  	%rd1339, %rd1298, %rd1274;
	and.b64  	%rd1340, %rd1322, %rd1339;
	xor.b64  	%rd1341, %rd1340, %rd1274;
	add.s64 	%rd1342, %rd1250, %rd2294;
	add.s64 	%rd1343, %rd1342, %rd2260;
	add.s64 	%rd1344, %rd1343, %rd1341;
	add.s64 	%rd1345, %rd1344, %rd1338;
	add.s64 	%rd1346, %rd1345, %rd1261;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1173,%dummy}, %rd1333;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1174}, %rd1333;
	}
	shf.r.wrap.b32 	%r1175, %r1174, %r1173, 28;
	shf.r.wrap.b32 	%r1176, %r1173, %r1174, 28;
	mov.b64 	%rd1347, {%r1176, %r1175};
	shf.l.wrap.b32 	%r1177, %r1173, %r1174, 30;
	shf.l.wrap.b32 	%r1178, %r1174, %r1173, 30;
	mov.b64 	%rd1348, {%r1178, %r1177};
	xor.b64  	%rd1349, %rd1348, %rd1347;
	shf.l.wrap.b32 	%r1179, %r1173, %r1174, 25;
	shf.l.wrap.b32 	%r1180, %r1174, %r1173, 25;
	mov.b64 	%rd1350, {%r1180, %r1179};
	xor.b64  	%rd1351, %rd1349, %rd1350;
	xor.b64  	%rd1352, %rd1333, %rd1285;
	xor.b64  	%rd1353, %rd1333, %rd1309;
	and.b64  	%rd1354, %rd1353, %rd1352;
	xor.b64  	%rd1355, %rd1354, %rd1333;
	add.s64 	%rd1356, %rd1345, %rd1355;
	add.s64 	%rd1357, %rd1356, %rd1351;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1181,%dummy}, %rd1346;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1182}, %rd1346;
	}
	shf.r.wrap.b32 	%r1183, %r1182, %r1181, 14;
	shf.r.wrap.b32 	%r1184, %r1181, %r1182, 14;
	mov.b64 	%rd1358, {%r1184, %r1183};
	shf.r.wrap.b32 	%r1185, %r1182, %r1181, 18;
	shf.r.wrap.b32 	%r1186, %r1181, %r1182, 18;
	mov.b64 	%rd1359, {%r1186, %r1185};
	xor.b64  	%rd1360, %rd1359, %rd1358;
	shf.l.wrap.b32 	%r1187, %r1181, %r1182, 23;
	shf.l.wrap.b32 	%r1188, %r1182, %r1181, 23;
	mov.b64 	%rd1361, {%r1188, %r1187};
	xor.b64  	%rd1362, %rd1360, %rd1361;
	xor.b64  	%rd1363, %rd1322, %rd1298;
	and.b64  	%rd1364, %rd1346, %rd1363;
	xor.b64  	%rd1365, %rd1364, %rd1298;
	add.s64 	%rd1366, %rd1274, %rd2295;
	add.s64 	%rd1367, %rd1366, %rd2259;
	add.s64 	%rd1368, %rd1367, %rd1365;
	add.s64 	%rd1369, %rd1368, %rd1362;
	add.s64 	%rd1370, %rd1369, %rd1285;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1189,%dummy}, %rd1357;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1190}, %rd1357;
	}
	shf.r.wrap.b32 	%r1191, %r1190, %r1189, 28;
	shf.r.wrap.b32 	%r1192, %r1189, %r1190, 28;
	mov.b64 	%rd1371, {%r1192, %r1191};
	shf.l.wrap.b32 	%r1193, %r1189, %r1190, 30;
	shf.l.wrap.b32 	%r1194, %r1190, %r1189, 30;
	mov.b64 	%rd1372, {%r1194, %r1193};
	xor.b64  	%rd1373, %rd1372, %rd1371;
	shf.l.wrap.b32 	%r1195, %r1189, %r1190, 25;
	shf.l.wrap.b32 	%r1196, %r1190, %r1189, 25;
	mov.b64 	%rd1374, {%r1196, %r1195};
	xor.b64  	%rd1375, %rd1373, %rd1374;
	xor.b64  	%rd1376, %rd1357, %rd1309;
	xor.b64  	%rd1377, %rd1357, %rd1333;
	and.b64  	%rd1378, %rd1377, %rd1376;
	xor.b64  	%rd1379, %rd1378, %rd1357;
	add.s64 	%rd1380, %rd1369, %rd1379;
	add.s64 	%rd1381, %rd1380, %rd1375;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1197,%dummy}, %rd1370;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1198}, %rd1370;
	}
	shf.r.wrap.b32 	%r1199, %r1198, %r1197, 14;
	shf.r.wrap.b32 	%r1200, %r1197, %r1198, 14;
	mov.b64 	%rd1382, {%r1200, %r1199};
	shf.r.wrap.b32 	%r1201, %r1198, %r1197, 18;
	shf.r.wrap.b32 	%r1202, %r1197, %r1198, 18;
	mov.b64 	%rd1383, {%r1202, %r1201};
	xor.b64  	%rd1384, %rd1383, %rd1382;
	shf.l.wrap.b32 	%r1203, %r1197, %r1198, 23;
	shf.l.wrap.b32 	%r1204, %r1198, %r1197, 23;
	mov.b64 	%rd1385, {%r1204, %r1203};
	xor.b64  	%rd1386, %rd1384, %rd1385;
	xor.b64  	%rd1387, %rd1346, %rd1322;
	and.b64  	%rd1388, %rd1370, %rd1387;
	xor.b64  	%rd1389, %rd1388, %rd1322;
	add.s64 	%rd1390, %rd1298, %rd2296;
	add.s64 	%rd1391, %rd1390, %rd2258;
	add.s64 	%rd1392, %rd1391, %rd1389;
	add.s64 	%rd1393, %rd1392, %rd1386;
	add.s64 	%rd1394, %rd1393, %rd1309;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1205,%dummy}, %rd1381;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1206}, %rd1381;
	}
	shf.r.wrap.b32 	%r1207, %r1206, %r1205, 28;
	shf.r.wrap.b32 	%r1208, %r1205, %r1206, 28;
	mov.b64 	%rd1395, {%r1208, %r1207};
	shf.l.wrap.b32 	%r1209, %r1205, %r1206, 30;
	shf.l.wrap.b32 	%r1210, %r1206, %r1205, 30;
	mov.b64 	%rd1396, {%r1210, %r1209};
	xor.b64  	%rd1397, %rd1396, %rd1395;
	shf.l.wrap.b32 	%r1211, %r1205, %r1206, 25;
	shf.l.wrap.b32 	%r1212, %r1206, %r1205, 25;
	mov.b64 	%rd1398, {%r1212, %r1211};
	xor.b64  	%rd1399, %rd1397, %rd1398;
	xor.b64  	%rd1400, %rd1381, %rd1333;
	xor.b64  	%rd1401, %rd1381, %rd1357;
	and.b64  	%rd1402, %rd1401, %rd1400;
	xor.b64  	%rd1403, %rd1402, %rd1381;
	add.s64 	%rd1404, %rd1393, %rd1403;
	add.s64 	%rd1405, %rd1404, %rd1399;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1213,%dummy}, %rd1394;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1214}, %rd1394;
	}
	shf.r.wrap.b32 	%r1215, %r1214, %r1213, 14;
	shf.r.wrap.b32 	%r1216, %r1213, %r1214, 14;
	mov.b64 	%rd1406, {%r1216, %r1215};
	shf.r.wrap.b32 	%r1217, %r1214, %r1213, 18;
	shf.r.wrap.b32 	%r1218, %r1213, %r1214, 18;
	mov.b64 	%rd1407, {%r1218, %r1217};
	xor.b64  	%rd1408, %rd1407, %rd1406;
	shf.l.wrap.b32 	%r1219, %r1213, %r1214, 23;
	shf.l.wrap.b32 	%r1220, %r1214, %r1213, 23;
	mov.b64 	%rd1409, {%r1220, %r1219};
	xor.b64  	%rd1410, %rd1408, %rd1409;
	xor.b64  	%rd1411, %rd1370, %rd1346;
	and.b64  	%rd1412, %rd1394, %rd1411;
	xor.b64  	%rd1413, %rd1412, %rd1346;
	add.s64 	%rd1414, %rd1322, %rd2297;
	add.s64 	%rd1415, %rd1414, %rd2257;
	add.s64 	%rd1416, %rd1415, %rd1413;
	add.s64 	%rd1417, %rd1416, %rd1410;
	add.s64 	%rd1418, %rd1417, %rd1333;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1221,%dummy}, %rd1405;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1222}, %rd1405;
	}
	shf.r.wrap.b32 	%r1223, %r1222, %r1221, 28;
	shf.r.wrap.b32 	%r1224, %r1221, %r1222, 28;
	mov.b64 	%rd1419, {%r1224, %r1223};
	shf.l.wrap.b32 	%r1225, %r1221, %r1222, 30;
	shf.l.wrap.b32 	%r1226, %r1222, %r1221, 30;
	mov.b64 	%rd1420, {%r1226, %r1225};
	xor.b64  	%rd1421, %rd1420, %rd1419;
	shf.l.wrap.b32 	%r1227, %r1221, %r1222, 25;
	shf.l.wrap.b32 	%r1228, %r1222, %r1221, 25;
	mov.b64 	%rd1422, {%r1228, %r1227};
	xor.b64  	%rd1423, %rd1421, %rd1422;
	xor.b64  	%rd1424, %rd1405, %rd1357;
	xor.b64  	%rd1425, %rd1405, %rd1381;
	and.b64  	%rd1426, %rd1425, %rd1424;
	xor.b64  	%rd1427, %rd1426, %rd1405;
	add.s64 	%rd1428, %rd1417, %rd1427;
	add.s64 	%rd1429, %rd1428, %rd1423;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1229,%dummy}, %rd1418;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1230}, %rd1418;
	}
	shf.r.wrap.b32 	%r1231, %r1230, %r1229, 14;
	shf.r.wrap.b32 	%r1232, %r1229, %r1230, 14;
	mov.b64 	%rd1430, {%r1232, %r1231};
	shf.r.wrap.b32 	%r1233, %r1230, %r1229, 18;
	shf.r.wrap.b32 	%r1234, %r1229, %r1230, 18;
	mov.b64 	%rd1431, {%r1234, %r1233};
	xor.b64  	%rd1432, %rd1431, %rd1430;
	shf.l.wrap.b32 	%r1235, %r1229, %r1230, 23;
	shf.l.wrap.b32 	%r1236, %r1230, %r1229, 23;
	mov.b64 	%rd1433, {%r1236, %r1235};
	xor.b64  	%rd1434, %rd1432, %rd1433;
	xor.b64  	%rd1435, %rd1394, %rd1370;
	and.b64  	%rd1436, %rd1418, %rd1435;
	xor.b64  	%rd1437, %rd1436, %rd1370;
	add.s64 	%rd1438, %rd1346, %rd2281;
	add.s64 	%rd1439, %rd1438, %rd2256;
	add.s64 	%rd1440, %rd1439, %rd1437;
	add.s64 	%rd1441, %rd1440, %rd1434;
	add.s64 	%rd1442, %rd1441, %rd1357;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1237,%dummy}, %rd1429;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1238}, %rd1429;
	}
	shf.r.wrap.b32 	%r1239, %r1238, %r1237, 28;
	shf.r.wrap.b32 	%r1240, %r1237, %r1238, 28;
	mov.b64 	%rd1443, {%r1240, %r1239};
	shf.l.wrap.b32 	%r1241, %r1237, %r1238, 30;
	shf.l.wrap.b32 	%r1242, %r1238, %r1237, 30;
	mov.b64 	%rd1444, {%r1242, %r1241};
	xor.b64  	%rd1445, %rd1444, %rd1443;
	shf.l.wrap.b32 	%r1243, %r1237, %r1238, 25;
	shf.l.wrap.b32 	%r1244, %r1238, %r1237, 25;
	mov.b64 	%rd1446, {%r1244, %r1243};
	xor.b64  	%rd1447, %rd1445, %rd1446;
	xor.b64  	%rd1448, %rd1429, %rd1381;
	xor.b64  	%rd1449, %rd1429, %rd1405;
	and.b64  	%rd1450, %rd1449, %rd1448;
	xor.b64  	%rd1451, %rd1450, %rd1429;
	add.s64 	%rd1452, %rd1441, %rd1451;
	add.s64 	%rd1453, %rd1452, %rd1447;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1245,%dummy}, %rd1442;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1246}, %rd1442;
	}
	shf.r.wrap.b32 	%r1247, %r1246, %r1245, 14;
	shf.r.wrap.b32 	%r1248, %r1245, %r1246, 14;
	mov.b64 	%rd1454, {%r1248, %r1247};
	shf.r.wrap.b32 	%r1249, %r1246, %r1245, 18;
	shf.r.wrap.b32 	%r1250, %r1245, %r1246, 18;
	mov.b64 	%rd1455, {%r1250, %r1249};
	xor.b64  	%rd1456, %rd1455, %rd1454;
	shf.l.wrap.b32 	%r1251, %r1245, %r1246, 23;
	shf.l.wrap.b32 	%r1252, %r1246, %r1245, 23;
	mov.b64 	%rd1457, {%r1252, %r1251};
	xor.b64  	%rd1458, %rd1456, %rd1457;
	xor.b64  	%rd1459, %rd1418, %rd1394;
	and.b64  	%rd1460, %rd1442, %rd1459;
	xor.b64  	%rd1461, %rd1460, %rd1394;
	add.s64 	%rd1462, %rd1370, %rd2280;
	add.s64 	%rd1463, %rd1462, %rd2255;
	add.s64 	%rd1464, %rd1463, %rd1461;
	add.s64 	%rd1465, %rd1464, %rd1458;
	add.s64 	%rd1466, %rd1465, %rd1381;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1253,%dummy}, %rd1453;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1254}, %rd1453;
	}
	shf.r.wrap.b32 	%r1255, %r1254, %r1253, 28;
	shf.r.wrap.b32 	%r1256, %r1253, %r1254, 28;
	mov.b64 	%rd1467, {%r1256, %r1255};
	shf.l.wrap.b32 	%r1257, %r1253, %r1254, 30;
	shf.l.wrap.b32 	%r1258, %r1254, %r1253, 30;
	mov.b64 	%rd1468, {%r1258, %r1257};
	xor.b64  	%rd1469, %rd1468, %rd1467;
	shf.l.wrap.b32 	%r1259, %r1253, %r1254, 25;
	shf.l.wrap.b32 	%r1260, %r1254, %r1253, 25;
	mov.b64 	%rd1470, {%r1260, %r1259};
	xor.b64  	%rd1471, %rd1469, %rd1470;
	xor.b64  	%rd1472, %rd1453, %rd1405;
	xor.b64  	%rd1473, %rd1453, %rd1429;
	and.b64  	%rd1474, %rd1473, %rd1472;
	xor.b64  	%rd1475, %rd1474, %rd1453;
	add.s64 	%rd1476, %rd1465, %rd1475;
	add.s64 	%rd1477, %rd1476, %rd1471;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1261,%dummy}, %rd1466;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1262}, %rd1466;
	}
	shf.r.wrap.b32 	%r1263, %r1262, %r1261, 14;
	shf.r.wrap.b32 	%r1264, %r1261, %r1262, 14;
	mov.b64 	%rd1478, {%r1264, %r1263};
	shf.r.wrap.b32 	%r1265, %r1262, %r1261, 18;
	shf.r.wrap.b32 	%r1266, %r1261, %r1262, 18;
	mov.b64 	%rd1479, {%r1266, %r1265};
	xor.b64  	%rd1480, %rd1479, %rd1478;
	shf.l.wrap.b32 	%r1267, %r1261, %r1262, 23;
	shf.l.wrap.b32 	%r1268, %r1262, %r1261, 23;
	mov.b64 	%rd1481, {%r1268, %r1267};
	xor.b64  	%rd1482, %rd1480, %rd1481;
	xor.b64  	%rd1483, %rd1442, %rd1418;
	and.b64  	%rd1484, %rd1466, %rd1483;
	xor.b64  	%rd1485, %rd1484, %rd1418;
	add.s64 	%rd1486, %rd1394, %rd2279;
	add.s64 	%rd1487, %rd1486, %rd2254;
	add.s64 	%rd1488, %rd1487, %rd1485;
	add.s64 	%rd1489, %rd1488, %rd1482;
	add.s64 	%rd1490, %rd1489, %rd1405;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1269,%dummy}, %rd1477;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1270}, %rd1477;
	}
	shf.r.wrap.b32 	%r1271, %r1270, %r1269, 28;
	shf.r.wrap.b32 	%r1272, %r1269, %r1270, 28;
	mov.b64 	%rd1491, {%r1272, %r1271};
	shf.l.wrap.b32 	%r1273, %r1269, %r1270, 30;
	shf.l.wrap.b32 	%r1274, %r1270, %r1269, 30;
	mov.b64 	%rd1492, {%r1274, %r1273};
	xor.b64  	%rd1493, %rd1492, %rd1491;
	shf.l.wrap.b32 	%r1275, %r1269, %r1270, 25;
	shf.l.wrap.b32 	%r1276, %r1270, %r1269, 25;
	mov.b64 	%rd1494, {%r1276, %r1275};
	xor.b64  	%rd1495, %rd1493, %rd1494;
	xor.b64  	%rd1496, %rd1477, %rd1429;
	xor.b64  	%rd1497, %rd1477, %rd1453;
	and.b64  	%rd1498, %rd1497, %rd1496;
	xor.b64  	%rd1499, %rd1498, %rd1477;
	add.s64 	%rd1500, %rd1489, %rd1499;
	add.s64 	%rd1501, %rd1500, %rd1495;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1277,%dummy}, %rd1490;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1278}, %rd1490;
	}
	shf.r.wrap.b32 	%r1279, %r1278, %r1277, 14;
	shf.r.wrap.b32 	%r1280, %r1277, %r1278, 14;
	mov.b64 	%rd1502, {%r1280, %r1279};
	shf.r.wrap.b32 	%r1281, %r1278, %r1277, 18;
	shf.r.wrap.b32 	%r1282, %r1277, %r1278, 18;
	mov.b64 	%rd1503, {%r1282, %r1281};
	xor.b64  	%rd1504, %rd1503, %rd1502;
	shf.l.wrap.b32 	%r1283, %r1277, %r1278, 23;
	shf.l.wrap.b32 	%r1284, %r1278, %r1277, 23;
	mov.b64 	%rd1505, {%r1284, %r1283};
	xor.b64  	%rd1506, %rd1504, %rd1505;
	xor.b64  	%rd1507, %rd1466, %rd1442;
	and.b64  	%rd1508, %rd1490, %rd1507;
	xor.b64  	%rd1509, %rd1508, %rd1442;
	add.s64 	%rd1510, %rd1418, %rd2278;
	add.s64 	%rd1511, %rd1510, %rd2253;
	add.s64 	%rd1512, %rd1511, %rd1509;
	add.s64 	%rd1513, %rd1512, %rd1506;
	add.s64 	%rd1514, %rd1513, %rd1429;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1285,%dummy}, %rd1501;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1286}, %rd1501;
	}
	shf.r.wrap.b32 	%r1287, %r1286, %r1285, 28;
	shf.r.wrap.b32 	%r1288, %r1285, %r1286, 28;
	mov.b64 	%rd1515, {%r1288, %r1287};
	shf.l.wrap.b32 	%r1289, %r1285, %r1286, 30;
	shf.l.wrap.b32 	%r1290, %r1286, %r1285, 30;
	mov.b64 	%rd1516, {%r1290, %r1289};
	xor.b64  	%rd1517, %rd1516, %rd1515;
	shf.l.wrap.b32 	%r1291, %r1285, %r1286, 25;
	shf.l.wrap.b32 	%r1292, %r1286, %r1285, 25;
	mov.b64 	%rd1518, {%r1292, %r1291};
	xor.b64  	%rd1519, %rd1517, %rd1518;
	xor.b64  	%rd1520, %rd1501, %rd1453;
	xor.b64  	%rd1521, %rd1501, %rd1477;
	and.b64  	%rd1522, %rd1521, %rd1520;
	xor.b64  	%rd1523, %rd1522, %rd1501;
	add.s64 	%rd1524, %rd1513, %rd1523;
	add.s64 	%rd1525, %rd1524, %rd1519;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1293,%dummy}, %rd1514;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1294}, %rd1514;
	}
	shf.r.wrap.b32 	%r1295, %r1294, %r1293, 14;
	shf.r.wrap.b32 	%r1296, %r1293, %r1294, 14;
	mov.b64 	%rd1526, {%r1296, %r1295};
	shf.r.wrap.b32 	%r1297, %r1294, %r1293, 18;
	shf.r.wrap.b32 	%r1298, %r1293, %r1294, 18;
	mov.b64 	%rd1527, {%r1298, %r1297};
	xor.b64  	%rd1528, %rd1527, %rd1526;
	shf.l.wrap.b32 	%r1299, %r1293, %r1294, 23;
	shf.l.wrap.b32 	%r1300, %r1294, %r1293, 23;
	mov.b64 	%rd1529, {%r1300, %r1299};
	xor.b64  	%rd1530, %rd1528, %rd1529;
	xor.b64  	%rd1531, %rd1490, %rd1466;
	and.b64  	%rd1532, %rd1514, %rd1531;
	xor.b64  	%rd1533, %rd1532, %rd1466;
	add.s64 	%rd1534, %rd1442, %rd2277;
	add.s64 	%rd1535, %rd1534, %rd2252;
	add.s64 	%rd1536, %rd1535, %rd1533;
	add.s64 	%rd1537, %rd1536, %rd1530;
	add.s64 	%rd2289, %rd1537, %rd1453;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1301,%dummy}, %rd1525;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1302}, %rd1525;
	}
	shf.r.wrap.b32 	%r1303, %r1302, %r1301, 28;
	shf.r.wrap.b32 	%r1304, %r1301, %r1302, 28;
	mov.b64 	%rd1538, {%r1304, %r1303};
	shf.l.wrap.b32 	%r1305, %r1301, %r1302, 30;
	shf.l.wrap.b32 	%r1306, %r1302, %r1301, 30;
	mov.b64 	%rd1539, {%r1306, %r1305};
	xor.b64  	%rd1540, %rd1539, %rd1538;
	shf.l.wrap.b32 	%r1307, %r1301, %r1302, 25;
	shf.l.wrap.b32 	%r1308, %r1302, %r1301, 25;
	mov.b64 	%rd1541, {%r1308, %r1307};
	xor.b64  	%rd1542, %rd1540, %rd1541;
	xor.b64  	%rd1543, %rd1525, %rd1477;
	xor.b64  	%rd1544, %rd1525, %rd1501;
	and.b64  	%rd1545, %rd1544, %rd1543;
	xor.b64  	%rd1546, %rd1545, %rd1525;
	add.s64 	%rd1547, %rd1537, %rd1546;
	add.s64 	%rd2285, %rd1547, %rd1542;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1309,%dummy}, %rd2289;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1310}, %rd2289;
	}
	shf.r.wrap.b32 	%r1311, %r1310, %r1309, 14;
	shf.r.wrap.b32 	%r1312, %r1309, %r1310, 14;
	mov.b64 	%rd1548, {%r1312, %r1311};
	shf.r.wrap.b32 	%r1313, %r1310, %r1309, 18;
	shf.r.wrap.b32 	%r1314, %r1309, %r1310, 18;
	mov.b64 	%rd1549, {%r1314, %r1313};
	xor.b64  	%rd1550, %rd1549, %rd1548;
	shf.l.wrap.b32 	%r1315, %r1309, %r1310, 23;
	shf.l.wrap.b32 	%r1316, %r1310, %r1309, 23;
	mov.b64 	%rd1551, {%r1316, %r1315};
	xor.b64  	%rd1552, %rd1550, %rd1551;
	xor.b64  	%rd1553, %rd1514, %rd1490;
	and.b64  	%rd1554, %rd2289, %rd1553;
	xor.b64  	%rd1555, %rd1554, %rd1490;
	add.s64 	%rd1556, %rd1466, %rd2276;
	add.s64 	%rd1557, %rd1556, %rd2251;
	add.s64 	%rd1558, %rd1557, %rd1555;
	add.s64 	%rd1559, %rd1558, %rd1552;
	add.s64 	%rd2288, %rd1559, %rd1477;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1317,%dummy}, %rd2285;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1318}, %rd2285;
	}
	shf.r.wrap.b32 	%r1319, %r1318, %r1317, 28;
	shf.r.wrap.b32 	%r1320, %r1317, %r1318, 28;
	mov.b64 	%rd1560, {%r1320, %r1319};
	shf.l.wrap.b32 	%r1321, %r1317, %r1318, 30;
	shf.l.wrap.b32 	%r1322, %r1318, %r1317, 30;
	mov.b64 	%rd1561, {%r1322, %r1321};
	xor.b64  	%rd1562, %rd1561, %rd1560;
	shf.l.wrap.b32 	%r1323, %r1317, %r1318, 25;
	shf.l.wrap.b32 	%r1324, %r1318, %r1317, 25;
	mov.b64 	%rd1563, {%r1324, %r1323};
	xor.b64  	%rd1564, %rd1562, %rd1563;
	xor.b64  	%rd1565, %rd2285, %rd1501;
	xor.b64  	%rd1566, %rd2285, %rd1525;
	and.b64  	%rd1567, %rd1566, %rd1565;
	xor.b64  	%rd1568, %rd1567, %rd2285;
	add.s64 	%rd1569, %rd1559, %rd1568;
	add.s64 	%rd2284, %rd1569, %rd1564;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1325,%dummy}, %rd2288;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1326}, %rd2288;
	}
	shf.r.wrap.b32 	%r1327, %r1326, %r1325, 14;
	shf.r.wrap.b32 	%r1328, %r1325, %r1326, 14;
	mov.b64 	%rd1570, {%r1328, %r1327};
	shf.r.wrap.b32 	%r1329, %r1326, %r1325, 18;
	shf.r.wrap.b32 	%r1330, %r1325, %r1326, 18;
	mov.b64 	%rd1571, {%r1330, %r1329};
	xor.b64  	%rd1572, %rd1571, %rd1570;
	shf.l.wrap.b32 	%r1331, %r1325, %r1326, 23;
	shf.l.wrap.b32 	%r1332, %r1326, %r1325, 23;
	mov.b64 	%rd1573, {%r1332, %r1331};
	xor.b64  	%rd1574, %rd1572, %rd1573;
	xor.b64  	%rd1575, %rd2289, %rd1514;
	and.b64  	%rd1576, %rd2288, %rd1575;
	xor.b64  	%rd1577, %rd1576, %rd1514;
	add.s64 	%rd1578, %rd1490, %rd2275;
	add.s64 	%rd1579, %rd1578, %rd2250;
	add.s64 	%rd1580, %rd1579, %rd1577;
	add.s64 	%rd1581, %rd1580, %rd1574;
	add.s64 	%rd2287, %rd1581, %rd1501;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1333,%dummy}, %rd2284;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1334}, %rd2284;
	}
	shf.r.wrap.b32 	%r1335, %r1334, %r1333, 28;
	shf.r.wrap.b32 	%r1336, %r1333, %r1334, 28;
	mov.b64 	%rd1582, {%r1336, %r1335};
	shf.l.wrap.b32 	%r1337, %r1333, %r1334, 30;
	shf.l.wrap.b32 	%r1338, %r1334, %r1333, 30;
	mov.b64 	%rd1583, {%r1338, %r1337};
	xor.b64  	%rd1584, %rd1583, %rd1582;
	shf.l.wrap.b32 	%r1339, %r1333, %r1334, 25;
	shf.l.wrap.b32 	%r1340, %r1334, %r1333, 25;
	mov.b64 	%rd1585, {%r1340, %r1339};
	xor.b64  	%rd1586, %rd1584, %rd1585;
	xor.b64  	%rd1587, %rd2284, %rd1525;
	xor.b64  	%rd1588, %rd2284, %rd2285;
	and.b64  	%rd1589, %rd1588, %rd1587;
	xor.b64  	%rd1590, %rd1589, %rd2284;
	add.s64 	%rd1591, %rd1581, %rd1590;
	add.s64 	%rd2283, %rd1591, %rd1586;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1341,%dummy}, %rd2287;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1342}, %rd2287;
	}
	shf.r.wrap.b32 	%r1343, %r1342, %r1341, 14;
	shf.r.wrap.b32 	%r1344, %r1341, %r1342, 14;
	mov.b64 	%rd1592, {%r1344, %r1343};
	shf.r.wrap.b32 	%r1345, %r1342, %r1341, 18;
	shf.r.wrap.b32 	%r1346, %r1341, %r1342, 18;
	mov.b64 	%rd1593, {%r1346, %r1345};
	xor.b64  	%rd1594, %rd1593, %rd1592;
	shf.l.wrap.b32 	%r1347, %r1341, %r1342, 23;
	shf.l.wrap.b32 	%r1348, %r1342, %r1341, 23;
	mov.b64 	%rd1595, {%r1348, %r1347};
	xor.b64  	%rd1596, %rd1594, %rd1595;
	xor.b64  	%rd1597, %rd2288, %rd2289;
	and.b64  	%rd1598, %rd2287, %rd1597;
	xor.b64  	%rd1599, %rd1598, %rd2289;
	add.s64 	%rd1600, %rd1514, %rd2274;
	add.s64 	%rd1601, %rd1600, %rd2249;
	add.s64 	%rd1602, %rd1601, %rd1599;
	add.s64 	%rd1603, %rd1602, %rd1596;
	add.s64 	%rd2286, %rd1603, %rd1525;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1349,%dummy}, %rd2283;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1350}, %rd2283;
	}
	shf.r.wrap.b32 	%r1351, %r1350, %r1349, 28;
	shf.r.wrap.b32 	%r1352, %r1349, %r1350, 28;
	mov.b64 	%rd1604, {%r1352, %r1351};
	shf.l.wrap.b32 	%r1353, %r1349, %r1350, 30;
	shf.l.wrap.b32 	%r1354, %r1350, %r1349, 30;
	mov.b64 	%rd1605, {%r1354, %r1353};
	xor.b64  	%rd1606, %rd1605, %rd1604;
	shf.l.wrap.b32 	%r1355, %r1349, %r1350, 25;
	shf.l.wrap.b32 	%r1356, %r1350, %r1349, 25;
	mov.b64 	%rd1607, {%r1356, %r1355};
	xor.b64  	%rd1608, %rd1606, %rd1607;
	xor.b64  	%rd1609, %rd2283, %rd2285;
	xor.b64  	%rd1610, %rd2283, %rd2284;
	and.b64  	%rd1611, %rd1610, %rd1609;
	xor.b64  	%rd1612, %rd1611, %rd2283;
	add.s64 	%rd1613, %rd1603, %rd1612;
	add.s64 	%rd2282, %rd1613, %rd1608;
	mov.u32 	%r1830, 16;
	mov.u64 	%rd2273, k_sha512;

BB4_325:
	shr.u64 	%rd1614, %rd2275, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1357,%dummy}, %rd2275;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1358}, %rd2275;
	}
	shf.r.wrap.b32 	%r1359, %r1358, %r1357, 19;
	shf.r.wrap.b32 	%r1360, %r1357, %r1358, 19;
	mov.b64 	%rd1615, {%r1360, %r1359};
	xor.b64  	%rd1616, %rd1615, %rd1614;
	shf.l.wrap.b32 	%r1361, %r1357, %r1358, 3;
	shf.l.wrap.b32 	%r1362, %r1358, %r1357, 3;
	mov.b64 	%rd1617, {%r1362, %r1361};
	xor.b64  	%rd1618, %rd1616, %rd1617;
	shr.u64 	%rd1619, %rd2291, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1363,%dummy}, %rd2291;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1364}, %rd2291;
	}
	shf.r.wrap.b32 	%r1365, %r1364, %r1363, 1;
	shf.r.wrap.b32 	%r1366, %r1363, %r1364, 1;
	mov.b64 	%rd1620, {%r1366, %r1365};
	xor.b64  	%rd1621, %rd1620, %rd1619;
	shf.r.wrap.b32 	%r1367, %r1364, %r1363, 8;
	shf.r.wrap.b32 	%r1368, %r1363, %r1364, 8;
	mov.b64 	%rd1622, {%r1368, %r1367};
	xor.b64  	%rd1623, %rd1621, %rd1622;
	add.s64 	%rd1624, %rd2280, %rd2290;
	add.s64 	%rd1625, %rd1624, %rd1618;
	add.s64 	%rd2290, %rd1625, %rd1623;
	shr.u64 	%rd1626, %rd2274, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1369,%dummy}, %rd2274;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1370}, %rd2274;
	}
	shf.r.wrap.b32 	%r1371, %r1370, %r1369, 19;
	shf.r.wrap.b32 	%r1372, %r1369, %r1370, 19;
	mov.b64 	%rd1627, {%r1372, %r1371};
	xor.b64  	%rd1628, %rd1627, %rd1626;
	shf.l.wrap.b32 	%r1373, %r1369, %r1370, 3;
	shf.l.wrap.b32 	%r1374, %r1370, %r1369, 3;
	mov.b64 	%rd1629, {%r1374, %r1373};
	xor.b64  	%rd1630, %rd1628, %rd1629;
	shr.u64 	%rd1631, %rd2292, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1375,%dummy}, %rd2292;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1376}, %rd2292;
	}
	shf.r.wrap.b32 	%r1377, %r1376, %r1375, 1;
	shf.r.wrap.b32 	%r1378, %r1375, %r1376, 1;
	mov.b64 	%rd1632, {%r1378, %r1377};
	xor.b64  	%rd1633, %rd1632, %rd1631;
	shf.r.wrap.b32 	%r1379, %r1376, %r1375, 8;
	shf.r.wrap.b32 	%r1380, %r1375, %r1376, 8;
	mov.b64 	%rd1634, {%r1380, %r1379};
	xor.b64  	%rd1635, %rd1633, %rd1634;
	add.s64 	%rd1636, %rd2279, %rd2291;
	add.s64 	%rd1637, %rd1636, %rd1630;
	add.s64 	%rd2291, %rd1637, %rd1635;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1381,%dummy}, %rd2290;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1382}, %rd2290;
	}
	shf.r.wrap.b32 	%r1383, %r1382, %r1381, 19;
	shf.r.wrap.b32 	%r1384, %r1381, %r1382, 19;
	mov.b64 	%rd1638, {%r1384, %r1383};
	shf.l.wrap.b32 	%r1385, %r1381, %r1382, 3;
	shf.l.wrap.b32 	%r1386, %r1382, %r1381, 3;
	mov.b64 	%rd1639, {%r1386, %r1385};
	shr.u64 	%rd1640, %rd2290, 6;
	xor.b64  	%rd1641, %rd1638, %rd1640;
	xor.b64  	%rd1642, %rd1641, %rd1639;
	shr.u64 	%rd1643, %rd2293, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1387,%dummy}, %rd2293;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1388}, %rd2293;
	}
	shf.r.wrap.b32 	%r1389, %r1388, %r1387, 1;
	shf.r.wrap.b32 	%r1390, %r1387, %r1388, 1;
	mov.b64 	%rd1644, {%r1390, %r1389};
	xor.b64  	%rd1645, %rd1644, %rd1643;
	shf.r.wrap.b32 	%r1391, %r1388, %r1387, 8;
	shf.r.wrap.b32 	%r1392, %r1387, %r1388, 8;
	mov.b64 	%rd1646, {%r1392, %r1391};
	xor.b64  	%rd1647, %rd1645, %rd1646;
	add.s64 	%rd1648, %rd2278, %rd2292;
	add.s64 	%rd1649, %rd1648, %rd1642;
	add.s64 	%rd2292, %rd1649, %rd1647;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1393,%dummy}, %rd2291;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1394}, %rd2291;
	}
	shf.r.wrap.b32 	%r1395, %r1394, %r1393, 19;
	shf.r.wrap.b32 	%r1396, %r1393, %r1394, 19;
	mov.b64 	%rd1650, {%r1396, %r1395};
	shf.l.wrap.b32 	%r1397, %r1393, %r1394, 3;
	shf.l.wrap.b32 	%r1398, %r1394, %r1393, 3;
	mov.b64 	%rd1651, {%r1398, %r1397};
	shr.u64 	%rd1652, %rd2291, 6;
	xor.b64  	%rd1653, %rd1650, %rd1652;
	xor.b64  	%rd1654, %rd1653, %rd1651;
	shr.u64 	%rd1655, %rd2294, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1399,%dummy}, %rd2294;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1400}, %rd2294;
	}
	shf.r.wrap.b32 	%r1401, %r1400, %r1399, 1;
	shf.r.wrap.b32 	%r1402, %r1399, %r1400, 1;
	mov.b64 	%rd1656, {%r1402, %r1401};
	xor.b64  	%rd1657, %rd1656, %rd1655;
	shf.r.wrap.b32 	%r1403, %r1400, %r1399, 8;
	shf.r.wrap.b32 	%r1404, %r1399, %r1400, 8;
	mov.b64 	%rd1658, {%r1404, %r1403};
	xor.b64  	%rd1659, %rd1657, %rd1658;
	add.s64 	%rd1660, %rd2277, %rd2293;
	add.s64 	%rd1661, %rd1660, %rd1654;
	add.s64 	%rd2293, %rd1661, %rd1659;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1405,%dummy}, %rd2292;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1406}, %rd2292;
	}
	shf.r.wrap.b32 	%r1407, %r1406, %r1405, 19;
	shf.r.wrap.b32 	%r1408, %r1405, %r1406, 19;
	mov.b64 	%rd1662, {%r1408, %r1407};
	shf.l.wrap.b32 	%r1409, %r1405, %r1406, 3;
	shf.l.wrap.b32 	%r1410, %r1406, %r1405, 3;
	mov.b64 	%rd1663, {%r1410, %r1409};
	shr.u64 	%rd1664, %rd2292, 6;
	xor.b64  	%rd1665, %rd1662, %rd1664;
	xor.b64  	%rd1666, %rd1665, %rd1663;
	shr.u64 	%rd1667, %rd2295, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1411,%dummy}, %rd2295;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1412}, %rd2295;
	}
	shf.r.wrap.b32 	%r1413, %r1412, %r1411, 1;
	shf.r.wrap.b32 	%r1414, %r1411, %r1412, 1;
	mov.b64 	%rd1668, {%r1414, %r1413};
	xor.b64  	%rd1669, %rd1668, %rd1667;
	shf.r.wrap.b32 	%r1415, %r1412, %r1411, 8;
	shf.r.wrap.b32 	%r1416, %r1411, %r1412, 8;
	mov.b64 	%rd1670, {%r1416, %r1415};
	xor.b64  	%rd1671, %rd1669, %rd1670;
	add.s64 	%rd1672, %rd2276, %rd2294;
	add.s64 	%rd1673, %rd1672, %rd1666;
	add.s64 	%rd2294, %rd1673, %rd1671;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1417,%dummy}, %rd2293;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1418}, %rd2293;
	}
	shf.r.wrap.b32 	%r1419, %r1418, %r1417, 19;
	shf.r.wrap.b32 	%r1420, %r1417, %r1418, 19;
	mov.b64 	%rd1674, {%r1420, %r1419};
	shf.l.wrap.b32 	%r1421, %r1417, %r1418, 3;
	shf.l.wrap.b32 	%r1422, %r1418, %r1417, 3;
	mov.b64 	%rd1675, {%r1422, %r1421};
	shr.u64 	%rd1676, %rd2293, 6;
	xor.b64  	%rd1677, %rd1674, %rd1676;
	xor.b64  	%rd1678, %rd1677, %rd1675;
	shr.u64 	%rd1679, %rd2296, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1423,%dummy}, %rd2296;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1424}, %rd2296;
	}
	shf.r.wrap.b32 	%r1425, %r1424, %r1423, 1;
	shf.r.wrap.b32 	%r1426, %r1423, %r1424, 1;
	mov.b64 	%rd1680, {%r1426, %r1425};
	xor.b64  	%rd1681, %rd1680, %rd1679;
	shf.r.wrap.b32 	%r1427, %r1424, %r1423, 8;
	shf.r.wrap.b32 	%r1428, %r1423, %r1424, 8;
	mov.b64 	%rd1682, {%r1428, %r1427};
	xor.b64  	%rd1683, %rd1681, %rd1682;
	add.s64 	%rd1684, %rd2275, %rd2295;
	add.s64 	%rd1685, %rd1684, %rd1678;
	add.s64 	%rd2295, %rd1685, %rd1683;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1429,%dummy}, %rd2294;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1430}, %rd2294;
	}
	shf.r.wrap.b32 	%r1431, %r1430, %r1429, 19;
	shf.r.wrap.b32 	%r1432, %r1429, %r1430, 19;
	mov.b64 	%rd1686, {%r1432, %r1431};
	shf.l.wrap.b32 	%r1433, %r1429, %r1430, 3;
	shf.l.wrap.b32 	%r1434, %r1430, %r1429, 3;
	mov.b64 	%rd1687, {%r1434, %r1433};
	shr.u64 	%rd1688, %rd2294, 6;
	xor.b64  	%rd1689, %rd1686, %rd1688;
	xor.b64  	%rd1690, %rd1689, %rd1687;
	shr.u64 	%rd1691, %rd2297, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1435,%dummy}, %rd2297;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1436}, %rd2297;
	}
	shf.r.wrap.b32 	%r1437, %r1436, %r1435, 1;
	shf.r.wrap.b32 	%r1438, %r1435, %r1436, 1;
	mov.b64 	%rd1692, {%r1438, %r1437};
	xor.b64  	%rd1693, %rd1692, %rd1691;
	shf.r.wrap.b32 	%r1439, %r1436, %r1435, 8;
	shf.r.wrap.b32 	%r1440, %r1435, %r1436, 8;
	mov.b64 	%rd1694, {%r1440, %r1439};
	xor.b64  	%rd1695, %rd1693, %rd1694;
	add.s64 	%rd1696, %rd2274, %rd2296;
	add.s64 	%rd1697, %rd1696, %rd1690;
	add.s64 	%rd2296, %rd1697, %rd1695;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1441,%dummy}, %rd2295;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1442}, %rd2295;
	}
	shf.r.wrap.b32 	%r1443, %r1442, %r1441, 19;
	shf.r.wrap.b32 	%r1444, %r1441, %r1442, 19;
	mov.b64 	%rd1698, {%r1444, %r1443};
	shf.l.wrap.b32 	%r1445, %r1441, %r1442, 3;
	shf.l.wrap.b32 	%r1446, %r1442, %r1441, 3;
	mov.b64 	%rd1699, {%r1446, %r1445};
	shr.u64 	%rd1700, %rd2295, 6;
	xor.b64  	%rd1701, %rd1698, %rd1700;
	xor.b64  	%rd1702, %rd1701, %rd1699;
	shr.u64 	%rd1703, %rd2281, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1447,%dummy}, %rd2281;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1448}, %rd2281;
	}
	shf.r.wrap.b32 	%r1449, %r1448, %r1447, 1;
	shf.r.wrap.b32 	%r1450, %r1447, %r1448, 1;
	mov.b64 	%rd1704, {%r1450, %r1449};
	xor.b64  	%rd1705, %rd1704, %rd1703;
	shf.r.wrap.b32 	%r1451, %r1448, %r1447, 8;
	shf.r.wrap.b32 	%r1452, %r1447, %r1448, 8;
	mov.b64 	%rd1706, {%r1452, %r1451};
	xor.b64  	%rd1707, %rd1705, %rd1706;
	add.s64 	%rd1708, %rd2290, %rd2297;
	add.s64 	%rd1709, %rd1708, %rd1702;
	add.s64 	%rd2297, %rd1709, %rd1707;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1453,%dummy}, %rd2296;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1454}, %rd2296;
	}
	shf.r.wrap.b32 	%r1455, %r1454, %r1453, 19;
	shf.r.wrap.b32 	%r1456, %r1453, %r1454, 19;
	mov.b64 	%rd1710, {%r1456, %r1455};
	shf.l.wrap.b32 	%r1457, %r1453, %r1454, 3;
	shf.l.wrap.b32 	%r1458, %r1454, %r1453, 3;
	mov.b64 	%rd1711, {%r1458, %r1457};
	shr.u64 	%rd1712, %rd2296, 6;
	xor.b64  	%rd1713, %rd1710, %rd1712;
	xor.b64  	%rd1714, %rd1713, %rd1711;
	shr.u64 	%rd1715, %rd2280, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1459,%dummy}, %rd2280;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1460}, %rd2280;
	}
	shf.r.wrap.b32 	%r1461, %r1460, %r1459, 1;
	shf.r.wrap.b32 	%r1462, %r1459, %r1460, 1;
	mov.b64 	%rd1716, {%r1462, %r1461};
	xor.b64  	%rd1717, %rd1716, %rd1715;
	shf.r.wrap.b32 	%r1463, %r1460, %r1459, 8;
	shf.r.wrap.b32 	%r1464, %r1459, %r1460, 8;
	mov.b64 	%rd1718, {%r1464, %r1463};
	xor.b64  	%rd1719, %rd1717, %rd1718;
	add.s64 	%rd1720, %rd2291, %rd2281;
	add.s64 	%rd1721, %rd1720, %rd1714;
	add.s64 	%rd2281, %rd1721, %rd1719;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1465,%dummy}, %rd2297;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1466}, %rd2297;
	}
	shf.r.wrap.b32 	%r1467, %r1466, %r1465, 19;
	shf.r.wrap.b32 	%r1468, %r1465, %r1466, 19;
	mov.b64 	%rd1722, {%r1468, %r1467};
	shf.l.wrap.b32 	%r1469, %r1465, %r1466, 3;
	shf.l.wrap.b32 	%r1470, %r1466, %r1465, 3;
	mov.b64 	%rd1723, {%r1470, %r1469};
	shr.u64 	%rd1724, %rd2297, 6;
	xor.b64  	%rd1725, %rd1722, %rd1724;
	xor.b64  	%rd1726, %rd1725, %rd1723;
	shr.u64 	%rd1727, %rd2279, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1471,%dummy}, %rd2279;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1472}, %rd2279;
	}
	shf.r.wrap.b32 	%r1473, %r1472, %r1471, 1;
	shf.r.wrap.b32 	%r1474, %r1471, %r1472, 1;
	mov.b64 	%rd1728, {%r1474, %r1473};
	xor.b64  	%rd1729, %rd1728, %rd1727;
	shf.r.wrap.b32 	%r1475, %r1472, %r1471, 8;
	shf.r.wrap.b32 	%r1476, %r1471, %r1472, 8;
	mov.b64 	%rd1730, {%r1476, %r1475};
	xor.b64  	%rd1731, %rd1729, %rd1730;
	add.s64 	%rd1732, %rd2292, %rd2280;
	add.s64 	%rd1733, %rd1732, %rd1726;
	add.s64 	%rd2280, %rd1733, %rd1731;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1477,%dummy}, %rd2281;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1478}, %rd2281;
	}
	shf.r.wrap.b32 	%r1479, %r1478, %r1477, 19;
	shf.r.wrap.b32 	%r1480, %r1477, %r1478, 19;
	mov.b64 	%rd1734, {%r1480, %r1479};
	shf.l.wrap.b32 	%r1481, %r1477, %r1478, 3;
	shf.l.wrap.b32 	%r1482, %r1478, %r1477, 3;
	mov.b64 	%rd1735, {%r1482, %r1481};
	shr.u64 	%rd1736, %rd2281, 6;
	xor.b64  	%rd1737, %rd1734, %rd1736;
	xor.b64  	%rd1738, %rd1737, %rd1735;
	shr.u64 	%rd1739, %rd2278, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1483,%dummy}, %rd2278;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1484}, %rd2278;
	}
	shf.r.wrap.b32 	%r1485, %r1484, %r1483, 1;
	shf.r.wrap.b32 	%r1486, %r1483, %r1484, 1;
	mov.b64 	%rd1740, {%r1486, %r1485};
	xor.b64  	%rd1741, %rd1740, %rd1739;
	shf.r.wrap.b32 	%r1487, %r1484, %r1483, 8;
	shf.r.wrap.b32 	%r1488, %r1483, %r1484, 8;
	mov.b64 	%rd1742, {%r1488, %r1487};
	xor.b64  	%rd1743, %rd1741, %rd1742;
	add.s64 	%rd1744, %rd2293, %rd2279;
	add.s64 	%rd1745, %rd1744, %rd1738;
	add.s64 	%rd2279, %rd1745, %rd1743;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1489,%dummy}, %rd2280;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1490}, %rd2280;
	}
	shf.r.wrap.b32 	%r1491, %r1490, %r1489, 19;
	shf.r.wrap.b32 	%r1492, %r1489, %r1490, 19;
	mov.b64 	%rd1746, {%r1492, %r1491};
	shf.l.wrap.b32 	%r1493, %r1489, %r1490, 3;
	shf.l.wrap.b32 	%r1494, %r1490, %r1489, 3;
	mov.b64 	%rd1747, {%r1494, %r1493};
	shr.u64 	%rd1748, %rd2280, 6;
	xor.b64  	%rd1749, %rd1746, %rd1748;
	xor.b64  	%rd1750, %rd1749, %rd1747;
	shr.u64 	%rd1751, %rd2277, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1495,%dummy}, %rd2277;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1496}, %rd2277;
	}
	shf.r.wrap.b32 	%r1497, %r1496, %r1495, 1;
	shf.r.wrap.b32 	%r1498, %r1495, %r1496, 1;
	mov.b64 	%rd1752, {%r1498, %r1497};
	xor.b64  	%rd1753, %rd1752, %rd1751;
	shf.r.wrap.b32 	%r1499, %r1496, %r1495, 8;
	shf.r.wrap.b32 	%r1500, %r1495, %r1496, 8;
	mov.b64 	%rd1754, {%r1500, %r1499};
	xor.b64  	%rd1755, %rd1753, %rd1754;
	add.s64 	%rd1756, %rd2294, %rd2278;
	add.s64 	%rd1757, %rd1756, %rd1750;
	add.s64 	%rd2278, %rd1757, %rd1755;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1501,%dummy}, %rd2279;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1502}, %rd2279;
	}
	shf.r.wrap.b32 	%r1503, %r1502, %r1501, 19;
	shf.r.wrap.b32 	%r1504, %r1501, %r1502, 19;
	mov.b64 	%rd1758, {%r1504, %r1503};
	shf.l.wrap.b32 	%r1505, %r1501, %r1502, 3;
	shf.l.wrap.b32 	%r1506, %r1502, %r1501, 3;
	mov.b64 	%rd1759, {%r1506, %r1505};
	shr.u64 	%rd1760, %rd2279, 6;
	xor.b64  	%rd1761, %rd1758, %rd1760;
	xor.b64  	%rd1762, %rd1761, %rd1759;
	shr.u64 	%rd1763, %rd2276, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1507,%dummy}, %rd2276;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1508}, %rd2276;
	}
	shf.r.wrap.b32 	%r1509, %r1508, %r1507, 1;
	shf.r.wrap.b32 	%r1510, %r1507, %r1508, 1;
	mov.b64 	%rd1764, {%r1510, %r1509};
	xor.b64  	%rd1765, %rd1764, %rd1763;
	shf.r.wrap.b32 	%r1511, %r1508, %r1507, 8;
	shf.r.wrap.b32 	%r1512, %r1507, %r1508, 8;
	mov.b64 	%rd1766, {%r1512, %r1511};
	xor.b64  	%rd1767, %rd1765, %rd1766;
	add.s64 	%rd1768, %rd2295, %rd2277;
	add.s64 	%rd1769, %rd1768, %rd1762;
	add.s64 	%rd2277, %rd1769, %rd1767;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1513,%dummy}, %rd2278;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1514}, %rd2278;
	}
	shf.r.wrap.b32 	%r1515, %r1514, %r1513, 19;
	shf.r.wrap.b32 	%r1516, %r1513, %r1514, 19;
	mov.b64 	%rd1770, {%r1516, %r1515};
	shf.l.wrap.b32 	%r1517, %r1513, %r1514, 3;
	shf.l.wrap.b32 	%r1518, %r1514, %r1513, 3;
	mov.b64 	%rd1771, {%r1518, %r1517};
	shr.u64 	%rd1772, %rd2278, 6;
	xor.b64  	%rd1773, %rd1770, %rd1772;
	xor.b64  	%rd1774, %rd1773, %rd1771;
	shr.u64 	%rd1775, %rd2275, 7;
	shf.r.wrap.b32 	%r1519, %r1358, %r1357, 1;
	shf.r.wrap.b32 	%r1520, %r1357, %r1358, 1;
	mov.b64 	%rd1776, {%r1520, %r1519};
	xor.b64  	%rd1777, %rd1776, %rd1775;
	shf.r.wrap.b32 	%r1521, %r1358, %r1357, 8;
	shf.r.wrap.b32 	%r1522, %r1357, %r1358, 8;
	mov.b64 	%rd1778, {%r1522, %r1521};
	xor.b64  	%rd1779, %rd1777, %rd1778;
	add.s64 	%rd1780, %rd2296, %rd2276;
	add.s64 	%rd1781, %rd1780, %rd1774;
	add.s64 	%rd2276, %rd1781, %rd1779;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1523,%dummy}, %rd2277;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1524}, %rd2277;
	}
	shf.r.wrap.b32 	%r1525, %r1524, %r1523, 19;
	shf.r.wrap.b32 	%r1526, %r1523, %r1524, 19;
	mov.b64 	%rd1782, {%r1526, %r1525};
	shf.l.wrap.b32 	%r1527, %r1523, %r1524, 3;
	shf.l.wrap.b32 	%r1528, %r1524, %r1523, 3;
	mov.b64 	%rd1783, {%r1528, %r1527};
	shr.u64 	%rd1784, %rd2277, 6;
	xor.b64  	%rd1785, %rd1782, %rd1784;
	xor.b64  	%rd1786, %rd1785, %rd1783;
	shr.u64 	%rd1787, %rd2274, 7;
	shf.r.wrap.b32 	%r1529, %r1370, %r1369, 1;
	shf.r.wrap.b32 	%r1530, %r1369, %r1370, 1;
	mov.b64 	%rd1788, {%r1530, %r1529};
	xor.b64  	%rd1789, %rd1788, %rd1787;
	shf.r.wrap.b32 	%r1531, %r1370, %r1369, 8;
	shf.r.wrap.b32 	%r1532, %r1369, %r1370, 8;
	mov.b64 	%rd1790, {%r1532, %r1531};
	xor.b64  	%rd1791, %rd1789, %rd1790;
	add.s64 	%rd1792, %rd2297, %rd2275;
	add.s64 	%rd1793, %rd1792, %rd1786;
	add.s64 	%rd2275, %rd1793, %rd1791;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1533,%dummy}, %rd2276;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1534}, %rd2276;
	}
	shf.r.wrap.b32 	%r1535, %r1534, %r1533, 19;
	shf.r.wrap.b32 	%r1536, %r1533, %r1534, 19;
	mov.b64 	%rd1794, {%r1536, %r1535};
	shf.l.wrap.b32 	%r1537, %r1533, %r1534, 3;
	shf.l.wrap.b32 	%r1538, %r1534, %r1533, 3;
	mov.b64 	%rd1795, {%r1538, %r1537};
	shr.u64 	%rd1796, %rd2276, 6;
	xor.b64  	%rd1797, %rd1794, %rd1796;
	xor.b64  	%rd1798, %rd1797, %rd1795;
	shf.r.wrap.b32 	%r1539, %r1382, %r1381, 1;
	shf.r.wrap.b32 	%r1540, %r1381, %r1382, 1;
	mov.b64 	%rd1799, {%r1540, %r1539};
	shf.r.wrap.b32 	%r1541, %r1382, %r1381, 8;
	shf.r.wrap.b32 	%r1542, %r1381, %r1382, 8;
	mov.b64 	%rd1800, {%r1542, %r1541};
	shr.u64 	%rd1801, %rd2290, 7;
	xor.b64  	%rd1802, %rd1799, %rd1801;
	xor.b64  	%rd1803, %rd1802, %rd1800;
	add.s64 	%rd1804, %rd2281, %rd2274;
	add.s64 	%rd1805, %rd1804, %rd1798;
	add.s64 	%rd2274, %rd1805, %rd1803;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1543,%dummy}, %rd2286;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1544}, %rd2286;
	}
	shf.r.wrap.b32 	%r1545, %r1544, %r1543, 18;
	shf.r.wrap.b32 	%r1546, %r1543, %r1544, 18;
	mov.b64 	%rd1806, {%r1546, %r1545};
	shf.r.wrap.b32 	%r1547, %r1544, %r1543, 14;
	shf.r.wrap.b32 	%r1548, %r1543, %r1544, 14;
	mov.b64 	%rd1807, {%r1548, %r1547};
	xor.b64  	%rd1808, %rd1806, %rd1807;
	shf.l.wrap.b32 	%r1549, %r1543, %r1544, 23;
	shf.l.wrap.b32 	%r1550, %r1544, %r1543, 23;
	mov.b64 	%rd1809, {%r1550, %r1549};
	xor.b64  	%rd1810, %rd1808, %rd1809;
	xor.b64  	%rd1811, %rd2287, %rd2288;
	and.b64  	%rd1812, %rd1811, %rd2286;
	xor.b64  	%rd1813, %rd1812, %rd2288;
	add.s64 	%rd1814, %rd1813, %rd2289;
	add.s64 	%rd1815, %rd1814, %rd2290;
	add.s64 	%rd241, %rd2273, 128;
	ld.const.u64 	%rd1816, [%rd2273+128];
	add.s64 	%rd1817, %rd1815, %rd1816;
	add.s64 	%rd1818, %rd1817, %rd1810;
	add.s64 	%rd1819, %rd1818, %rd2285;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1551}, %rd2282;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1552,%dummy}, %rd2282;
	}
	shf.l.wrap.b32 	%r1553, %r1552, %r1551, 30;
	shf.l.wrap.b32 	%r1554, %r1551, %r1552, 30;
	mov.b64 	%rd1820, {%r1554, %r1553};
	shf.r.wrap.b32 	%r1555, %r1551, %r1552, 28;
	shf.r.wrap.b32 	%r1556, %r1552, %r1551, 28;
	mov.b64 	%rd1821, {%r1556, %r1555};
	xor.b64  	%rd1822, %rd1820, %rd1821;
	shf.l.wrap.b32 	%r1557, %r1552, %r1551, 25;
	shf.l.wrap.b32 	%r1558, %r1551, %r1552, 25;
	mov.b64 	%rd1823, {%r1558, %r1557};
	xor.b64  	%rd1824, %rd1822, %rd1823;
	xor.b64  	%rd1825, %rd2282, %rd2283;
	xor.b64  	%rd1826, %rd2282, %rd2284;
	and.b64  	%rd1827, %rd1825, %rd1826;
	xor.b64  	%rd1828, %rd1827, %rd2282;
	add.s64 	%rd1829, %rd1818, %rd1828;
	add.s64 	%rd1830, %rd1829, %rd1824;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1559,%dummy}, %rd1819;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1560}, %rd1819;
	}
	shf.r.wrap.b32 	%r1561, %r1560, %r1559, 14;
	shf.r.wrap.b32 	%r1562, %r1559, %r1560, 14;
	mov.b64 	%rd1831, {%r1562, %r1561};
	shf.r.wrap.b32 	%r1563, %r1560, %r1559, 18;
	shf.r.wrap.b32 	%r1564, %r1559, %r1560, 18;
	mov.b64 	%rd1832, {%r1564, %r1563};
	xor.b64  	%rd1833, %rd1832, %rd1831;
	shf.l.wrap.b32 	%r1565, %r1559, %r1560, 23;
	shf.l.wrap.b32 	%r1566, %r1560, %r1559, 23;
	mov.b64 	%rd1834, {%r1566, %r1565};
	xor.b64  	%rd1835, %rd1833, %rd1834;
	xor.b64  	%rd1836, %rd2286, %rd2287;
	and.b64  	%rd1837, %rd1819, %rd1836;
	xor.b64  	%rd1838, %rd1837, %rd2287;
	add.s64 	%rd1839, %rd2291, %rd2288;
	ld.const.u64 	%rd1840, [%rd2273+136];
	add.s64 	%rd1841, %rd1839, %rd1840;
	add.s64 	%rd1842, %rd1841, %rd1838;
	add.s64 	%rd1843, %rd1842, %rd1835;
	add.s64 	%rd1844, %rd1843, %rd2284;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1567,%dummy}, %rd1830;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1568}, %rd1830;
	}
	shf.r.wrap.b32 	%r1569, %r1568, %r1567, 28;
	shf.r.wrap.b32 	%r1570, %r1567, %r1568, 28;
	mov.b64 	%rd1845, {%r1570, %r1569};
	shf.l.wrap.b32 	%r1571, %r1567, %r1568, 30;
	shf.l.wrap.b32 	%r1572, %r1568, %r1567, 30;
	mov.b64 	%rd1846, {%r1572, %r1571};
	xor.b64  	%rd1847, %rd1846, %rd1845;
	shf.l.wrap.b32 	%r1573, %r1567, %r1568, 25;
	shf.l.wrap.b32 	%r1574, %r1568, %r1567, 25;
	mov.b64 	%rd1848, {%r1574, %r1573};
	xor.b64  	%rd1849, %rd1847, %rd1848;
	xor.b64  	%rd1850, %rd1830, %rd2283;
	xor.b64  	%rd1851, %rd1830, %rd2282;
	and.b64  	%rd1852, %rd1851, %rd1850;
	xor.b64  	%rd1853, %rd1852, %rd1830;
	add.s64 	%rd1854, %rd1843, %rd1853;
	add.s64 	%rd1855, %rd1854, %rd1849;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1575,%dummy}, %rd1844;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1576}, %rd1844;
	}
	shf.r.wrap.b32 	%r1577, %r1576, %r1575, 14;
	shf.r.wrap.b32 	%r1578, %r1575, %r1576, 14;
	mov.b64 	%rd1856, {%r1578, %r1577};
	shf.r.wrap.b32 	%r1579, %r1576, %r1575, 18;
	shf.r.wrap.b32 	%r1580, %r1575, %r1576, 18;
	mov.b64 	%rd1857, {%r1580, %r1579};
	xor.b64  	%rd1858, %rd1857, %rd1856;
	shf.l.wrap.b32 	%r1581, %r1575, %r1576, 23;
	shf.l.wrap.b32 	%r1582, %r1576, %r1575, 23;
	mov.b64 	%rd1859, {%r1582, %r1581};
	xor.b64  	%rd1860, %rd1858, %rd1859;
	xor.b64  	%rd1861, %rd1819, %rd2286;
	and.b64  	%rd1862, %rd1844, %rd1861;
	xor.b64  	%rd1863, %rd1862, %rd2286;
	add.s64 	%rd1864, %rd2292, %rd2287;
	ld.const.u64 	%rd1865, [%rd2273+144];
	add.s64 	%rd1866, %rd1864, %rd1865;
	add.s64 	%rd1867, %rd1866, %rd1863;
	add.s64 	%rd1868, %rd1867, %rd1860;
	add.s64 	%rd1869, %rd1868, %rd2283;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1583,%dummy}, %rd1855;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1584}, %rd1855;
	}
	shf.r.wrap.b32 	%r1585, %r1584, %r1583, 28;
	shf.r.wrap.b32 	%r1586, %r1583, %r1584, 28;
	mov.b64 	%rd1870, {%r1586, %r1585};
	shf.l.wrap.b32 	%r1587, %r1583, %r1584, 30;
	shf.l.wrap.b32 	%r1588, %r1584, %r1583, 30;
	mov.b64 	%rd1871, {%r1588, %r1587};
	xor.b64  	%rd1872, %rd1871, %rd1870;
	shf.l.wrap.b32 	%r1589, %r1583, %r1584, 25;
	shf.l.wrap.b32 	%r1590, %r1584, %r1583, 25;
	mov.b64 	%rd1873, {%r1590, %r1589};
	xor.b64  	%rd1874, %rd1872, %rd1873;
	xor.b64  	%rd1875, %rd1855, %rd2282;
	xor.b64  	%rd1876, %rd1855, %rd1830;
	and.b64  	%rd1877, %rd1876, %rd1875;
	xor.b64  	%rd1878, %rd1877, %rd1855;
	add.s64 	%rd1879, %rd1868, %rd1878;
	add.s64 	%rd1880, %rd1879, %rd1874;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1591,%dummy}, %rd1869;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1592}, %rd1869;
	}
	shf.r.wrap.b32 	%r1593, %r1592, %r1591, 14;
	shf.r.wrap.b32 	%r1594, %r1591, %r1592, 14;
	mov.b64 	%rd1881, {%r1594, %r1593};
	shf.r.wrap.b32 	%r1595, %r1592, %r1591, 18;
	shf.r.wrap.b32 	%r1596, %r1591, %r1592, 18;
	mov.b64 	%rd1882, {%r1596, %r1595};
	xor.b64  	%rd1883, %rd1882, %rd1881;
	shf.l.wrap.b32 	%r1597, %r1591, %r1592, 23;
	shf.l.wrap.b32 	%r1598, %r1592, %r1591, 23;
	mov.b64 	%rd1884, {%r1598, %r1597};
	xor.b64  	%rd1885, %rd1883, %rd1884;
	xor.b64  	%rd1886, %rd1844, %rd1819;
	and.b64  	%rd1887, %rd1869, %rd1886;
	xor.b64  	%rd1888, %rd1887, %rd1819;
	add.s64 	%rd1889, %rd2293, %rd2286;
	ld.const.u64 	%rd1890, [%rd2273+152];
	add.s64 	%rd1891, %rd1889, %rd1890;
	add.s64 	%rd1892, %rd1891, %rd1888;
	add.s64 	%rd1893, %rd1892, %rd1885;
	add.s64 	%rd1894, %rd1893, %rd2282;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1599,%dummy}, %rd1880;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1600}, %rd1880;
	}
	shf.r.wrap.b32 	%r1601, %r1600, %r1599, 28;
	shf.r.wrap.b32 	%r1602, %r1599, %r1600, 28;
	mov.b64 	%rd1895, {%r1602, %r1601};
	shf.l.wrap.b32 	%r1603, %r1599, %r1600, 30;
	shf.l.wrap.b32 	%r1604, %r1600, %r1599, 30;
	mov.b64 	%rd1896, {%r1604, %r1603};
	xor.b64  	%rd1897, %rd1896, %rd1895;
	shf.l.wrap.b32 	%r1605, %r1599, %r1600, 25;
	shf.l.wrap.b32 	%r1606, %r1600, %r1599, 25;
	mov.b64 	%rd1898, {%r1606, %r1605};
	xor.b64  	%rd1899, %rd1897, %rd1898;
	xor.b64  	%rd1900, %rd1880, %rd1830;
	xor.b64  	%rd1901, %rd1880, %rd1855;
	and.b64  	%rd1902, %rd1901, %rd1900;
	xor.b64  	%rd1903, %rd1902, %rd1880;
	add.s64 	%rd1904, %rd1893, %rd1903;
	add.s64 	%rd1905, %rd1904, %rd1899;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1607,%dummy}, %rd1894;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1608}, %rd1894;
	}
	shf.r.wrap.b32 	%r1609, %r1608, %r1607, 14;
	shf.r.wrap.b32 	%r1610, %r1607, %r1608, 14;
	mov.b64 	%rd1906, {%r1610, %r1609};
	shf.r.wrap.b32 	%r1611, %r1608, %r1607, 18;
	shf.r.wrap.b32 	%r1612, %r1607, %r1608, 18;
	mov.b64 	%rd1907, {%r1612, %r1611};
	xor.b64  	%rd1908, %rd1907, %rd1906;
	shf.l.wrap.b32 	%r1613, %r1607, %r1608, 23;
	shf.l.wrap.b32 	%r1614, %r1608, %r1607, 23;
	mov.b64 	%rd1909, {%r1614, %r1613};
	xor.b64  	%rd1910, %rd1908, %rd1909;
	xor.b64  	%rd1911, %rd1869, %rd1844;
	and.b64  	%rd1912, %rd1894, %rd1911;
	xor.b64  	%rd1913, %rd1912, %rd1844;
	add.s64 	%rd1914, %rd1819, %rd2294;
	ld.const.u64 	%rd1915, [%rd2273+160];
	add.s64 	%rd1916, %rd1914, %rd1915;
	add.s64 	%rd1917, %rd1916, %rd1913;
	add.s64 	%rd1918, %rd1917, %rd1910;
	add.s64 	%rd1919, %rd1918, %rd1830;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1615,%dummy}, %rd1905;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1616}, %rd1905;
	}
	shf.r.wrap.b32 	%r1617, %r1616, %r1615, 28;
	shf.r.wrap.b32 	%r1618, %r1615, %r1616, 28;
	mov.b64 	%rd1920, {%r1618, %r1617};
	shf.l.wrap.b32 	%r1619, %r1615, %r1616, 30;
	shf.l.wrap.b32 	%r1620, %r1616, %r1615, 30;
	mov.b64 	%rd1921, {%r1620, %r1619};
	xor.b64  	%rd1922, %rd1921, %rd1920;
	shf.l.wrap.b32 	%r1621, %r1615, %r1616, 25;
	shf.l.wrap.b32 	%r1622, %r1616, %r1615, 25;
	mov.b64 	%rd1923, {%r1622, %r1621};
	xor.b64  	%rd1924, %rd1922, %rd1923;
	xor.b64  	%rd1925, %rd1905, %rd1855;
	xor.b64  	%rd1926, %rd1905, %rd1880;
	and.b64  	%rd1927, %rd1926, %rd1925;
	xor.b64  	%rd1928, %rd1927, %rd1905;
	add.s64 	%rd1929, %rd1918, %rd1928;
	add.s64 	%rd1930, %rd1929, %rd1924;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1623,%dummy}, %rd1919;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1624}, %rd1919;
	}
	shf.r.wrap.b32 	%r1625, %r1624, %r1623, 14;
	shf.r.wrap.b32 	%r1626, %r1623, %r1624, 14;
	mov.b64 	%rd1931, {%r1626, %r1625};
	shf.r.wrap.b32 	%r1627, %r1624, %r1623, 18;
	shf.r.wrap.b32 	%r1628, %r1623, %r1624, 18;
	mov.b64 	%rd1932, {%r1628, %r1627};
	xor.b64  	%rd1933, %rd1932, %rd1931;
	shf.l.wrap.b32 	%r1629, %r1623, %r1624, 23;
	shf.l.wrap.b32 	%r1630, %r1624, %r1623, 23;
	mov.b64 	%rd1934, {%r1630, %r1629};
	xor.b64  	%rd1935, %rd1933, %rd1934;
	xor.b64  	%rd1936, %rd1894, %rd1869;
	and.b64  	%rd1937, %rd1919, %rd1936;
	xor.b64  	%rd1938, %rd1937, %rd1869;
	add.s64 	%rd1939, %rd1844, %rd2295;
	ld.const.u64 	%rd1940, [%rd2273+168];
	add.s64 	%rd1941, %rd1939, %rd1940;
	add.s64 	%rd1942, %rd1941, %rd1938;
	add.s64 	%rd1943, %rd1942, %rd1935;
	add.s64 	%rd1944, %rd1943, %rd1855;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1631,%dummy}, %rd1930;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1632}, %rd1930;
	}
	shf.r.wrap.b32 	%r1633, %r1632, %r1631, 28;
	shf.r.wrap.b32 	%r1634, %r1631, %r1632, 28;
	mov.b64 	%rd1945, {%r1634, %r1633};
	shf.l.wrap.b32 	%r1635, %r1631, %r1632, 30;
	shf.l.wrap.b32 	%r1636, %r1632, %r1631, 30;
	mov.b64 	%rd1946, {%r1636, %r1635};
	xor.b64  	%rd1947, %rd1946, %rd1945;
	shf.l.wrap.b32 	%r1637, %r1631, %r1632, 25;
	shf.l.wrap.b32 	%r1638, %r1632, %r1631, 25;
	mov.b64 	%rd1948, {%r1638, %r1637};
	xor.b64  	%rd1949, %rd1947, %rd1948;
	xor.b64  	%rd1950, %rd1930, %rd1880;
	xor.b64  	%rd1951, %rd1930, %rd1905;
	and.b64  	%rd1952, %rd1951, %rd1950;
	xor.b64  	%rd1953, %rd1952, %rd1930;
	add.s64 	%rd1954, %rd1943, %rd1953;
	add.s64 	%rd1955, %rd1954, %rd1949;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1639,%dummy}, %rd1944;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1640}, %rd1944;
	}
	shf.r.wrap.b32 	%r1641, %r1640, %r1639, 14;
	shf.r.wrap.b32 	%r1642, %r1639, %r1640, 14;
	mov.b64 	%rd1956, {%r1642, %r1641};
	shf.r.wrap.b32 	%r1643, %r1640, %r1639, 18;
	shf.r.wrap.b32 	%r1644, %r1639, %r1640, 18;
	mov.b64 	%rd1957, {%r1644, %r1643};
	xor.b64  	%rd1958, %rd1957, %rd1956;
	shf.l.wrap.b32 	%r1645, %r1639, %r1640, 23;
	shf.l.wrap.b32 	%r1646, %r1640, %r1639, 23;
	mov.b64 	%rd1959, {%r1646, %r1645};
	xor.b64  	%rd1960, %rd1958, %rd1959;
	xor.b64  	%rd1961, %rd1919, %rd1894;
	and.b64  	%rd1962, %rd1944, %rd1961;
	xor.b64  	%rd1963, %rd1962, %rd1894;
	add.s64 	%rd1964, %rd1869, %rd2296;
	ld.const.u64 	%rd1965, [%rd2273+176];
	add.s64 	%rd1966, %rd1964, %rd1965;
	add.s64 	%rd1967, %rd1966, %rd1963;
	add.s64 	%rd1968, %rd1967, %rd1960;
	add.s64 	%rd1969, %rd1968, %rd1880;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1647,%dummy}, %rd1955;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1648}, %rd1955;
	}
	shf.r.wrap.b32 	%r1649, %r1648, %r1647, 28;
	shf.r.wrap.b32 	%r1650, %r1647, %r1648, 28;
	mov.b64 	%rd1970, {%r1650, %r1649};
	shf.l.wrap.b32 	%r1651, %r1647, %r1648, 30;
	shf.l.wrap.b32 	%r1652, %r1648, %r1647, 30;
	mov.b64 	%rd1971, {%r1652, %r1651};
	xor.b64  	%rd1972, %rd1971, %rd1970;
	shf.l.wrap.b32 	%r1653, %r1647, %r1648, 25;
	shf.l.wrap.b32 	%r1654, %r1648, %r1647, 25;
	mov.b64 	%rd1973, {%r1654, %r1653};
	xor.b64  	%rd1974, %rd1972, %rd1973;
	xor.b64  	%rd1975, %rd1955, %rd1905;
	xor.b64  	%rd1976, %rd1955, %rd1930;
	and.b64  	%rd1977, %rd1976, %rd1975;
	xor.b64  	%rd1978, %rd1977, %rd1955;
	add.s64 	%rd1979, %rd1968, %rd1978;
	add.s64 	%rd1980, %rd1979, %rd1974;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1655,%dummy}, %rd1969;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1656}, %rd1969;
	}
	shf.r.wrap.b32 	%r1657, %r1656, %r1655, 14;
	shf.r.wrap.b32 	%r1658, %r1655, %r1656, 14;
	mov.b64 	%rd1981, {%r1658, %r1657};
	shf.r.wrap.b32 	%r1659, %r1656, %r1655, 18;
	shf.r.wrap.b32 	%r1660, %r1655, %r1656, 18;
	mov.b64 	%rd1982, {%r1660, %r1659};
	xor.b64  	%rd1983, %rd1982, %rd1981;
	shf.l.wrap.b32 	%r1661, %r1655, %r1656, 23;
	shf.l.wrap.b32 	%r1662, %r1656, %r1655, 23;
	mov.b64 	%rd1984, {%r1662, %r1661};
	xor.b64  	%rd1985, %rd1983, %rd1984;
	xor.b64  	%rd1986, %rd1944, %rd1919;
	and.b64  	%rd1987, %rd1969, %rd1986;
	xor.b64  	%rd1988, %rd1987, %rd1919;
	add.s64 	%rd1989, %rd1894, %rd2297;
	ld.const.u64 	%rd1990, [%rd2273+184];
	add.s64 	%rd1991, %rd1989, %rd1990;
	add.s64 	%rd1992, %rd1991, %rd1988;
	add.s64 	%rd1993, %rd1992, %rd1985;
	add.s64 	%rd1994, %rd1993, %rd1905;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1663,%dummy}, %rd1980;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1664}, %rd1980;
	}
	shf.r.wrap.b32 	%r1665, %r1664, %r1663, 28;
	shf.r.wrap.b32 	%r1666, %r1663, %r1664, 28;
	mov.b64 	%rd1995, {%r1666, %r1665};
	shf.l.wrap.b32 	%r1667, %r1663, %r1664, 30;
	shf.l.wrap.b32 	%r1668, %r1664, %r1663, 30;
	mov.b64 	%rd1996, {%r1668, %r1667};
	xor.b64  	%rd1997, %rd1996, %rd1995;
	shf.l.wrap.b32 	%r1669, %r1663, %r1664, 25;
	shf.l.wrap.b32 	%r1670, %r1664, %r1663, 25;
	mov.b64 	%rd1998, {%r1670, %r1669};
	xor.b64  	%rd1999, %rd1997, %rd1998;
	xor.b64  	%rd2000, %rd1980, %rd1930;
	xor.b64  	%rd2001, %rd1980, %rd1955;
	and.b64  	%rd2002, %rd2001, %rd2000;
	xor.b64  	%rd2003, %rd2002, %rd1980;
	add.s64 	%rd2004, %rd1993, %rd2003;
	add.s64 	%rd2005, %rd2004, %rd1999;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1671,%dummy}, %rd1994;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1672}, %rd1994;
	}
	shf.r.wrap.b32 	%r1673, %r1672, %r1671, 14;
	shf.r.wrap.b32 	%r1674, %r1671, %r1672, 14;
	mov.b64 	%rd2006, {%r1674, %r1673};
	shf.r.wrap.b32 	%r1675, %r1672, %r1671, 18;
	shf.r.wrap.b32 	%r1676, %r1671, %r1672, 18;
	mov.b64 	%rd2007, {%r1676, %r1675};
	xor.b64  	%rd2008, %rd2007, %rd2006;
	shf.l.wrap.b32 	%r1677, %r1671, %r1672, 23;
	shf.l.wrap.b32 	%r1678, %r1672, %r1671, 23;
	mov.b64 	%rd2009, {%r1678, %r1677};
	xor.b64  	%rd2010, %rd2008, %rd2009;
	xor.b64  	%rd2011, %rd1969, %rd1944;
	and.b64  	%rd2012, %rd1994, %rd2011;
	xor.b64  	%rd2013, %rd2012, %rd1944;
	add.s64 	%rd2014, %rd1919, %rd2281;
	ld.const.u64 	%rd2015, [%rd2273+192];
	add.s64 	%rd2016, %rd2014, %rd2015;
	add.s64 	%rd2017, %rd2016, %rd2013;
	add.s64 	%rd2018, %rd2017, %rd2010;
	add.s64 	%rd2019, %rd2018, %rd1930;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1679,%dummy}, %rd2005;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1680}, %rd2005;
	}
	shf.r.wrap.b32 	%r1681, %r1680, %r1679, 28;
	shf.r.wrap.b32 	%r1682, %r1679, %r1680, 28;
	mov.b64 	%rd2020, {%r1682, %r1681};
	shf.l.wrap.b32 	%r1683, %r1679, %r1680, 30;
	shf.l.wrap.b32 	%r1684, %r1680, %r1679, 30;
	mov.b64 	%rd2021, {%r1684, %r1683};
	xor.b64  	%rd2022, %rd2021, %rd2020;
	shf.l.wrap.b32 	%r1685, %r1679, %r1680, 25;
	shf.l.wrap.b32 	%r1686, %r1680, %r1679, 25;
	mov.b64 	%rd2023, {%r1686, %r1685};
	xor.b64  	%rd2024, %rd2022, %rd2023;
	xor.b64  	%rd2025, %rd2005, %rd1955;
	xor.b64  	%rd2026, %rd2005, %rd1980;
	and.b64  	%rd2027, %rd2026, %rd2025;
	xor.b64  	%rd2028, %rd2027, %rd2005;
	add.s64 	%rd2029, %rd2018, %rd2028;
	add.s64 	%rd2030, %rd2029, %rd2024;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1687,%dummy}, %rd2019;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1688}, %rd2019;
	}
	shf.r.wrap.b32 	%r1689, %r1688, %r1687, 14;
	shf.r.wrap.b32 	%r1690, %r1687, %r1688, 14;
	mov.b64 	%rd2031, {%r1690, %r1689};
	shf.r.wrap.b32 	%r1691, %r1688, %r1687, 18;
	shf.r.wrap.b32 	%r1692, %r1687, %r1688, 18;
	mov.b64 	%rd2032, {%r1692, %r1691};
	xor.b64  	%rd2033, %rd2032, %rd2031;
	shf.l.wrap.b32 	%r1693, %r1687, %r1688, 23;
	shf.l.wrap.b32 	%r1694, %r1688, %r1687, 23;
	mov.b64 	%rd2034, {%r1694, %r1693};
	xor.b64  	%rd2035, %rd2033, %rd2034;
	xor.b64  	%rd2036, %rd1994, %rd1969;
	and.b64  	%rd2037, %rd2019, %rd2036;
	xor.b64  	%rd2038, %rd2037, %rd1969;
	add.s64 	%rd2039, %rd1944, %rd2280;
	ld.const.u64 	%rd2040, [%rd2273+200];
	add.s64 	%rd2041, %rd2039, %rd2040;
	add.s64 	%rd2042, %rd2041, %rd2038;
	add.s64 	%rd2043, %rd2042, %rd2035;
	add.s64 	%rd2044, %rd2043, %rd1955;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1695,%dummy}, %rd2030;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1696}, %rd2030;
	}
	shf.r.wrap.b32 	%r1697, %r1696, %r1695, 28;
	shf.r.wrap.b32 	%r1698, %r1695, %r1696, 28;
	mov.b64 	%rd2045, {%r1698, %r1697};
	shf.l.wrap.b32 	%r1699, %r1695, %r1696, 30;
	shf.l.wrap.b32 	%r1700, %r1696, %r1695, 30;
	mov.b64 	%rd2046, {%r1700, %r1699};
	xor.b64  	%rd2047, %rd2046, %rd2045;
	shf.l.wrap.b32 	%r1701, %r1695, %r1696, 25;
	shf.l.wrap.b32 	%r1702, %r1696, %r1695, 25;
	mov.b64 	%rd2048, {%r1702, %r1701};
	xor.b64  	%rd2049, %rd2047, %rd2048;
	xor.b64  	%rd2050, %rd2030, %rd1980;
	xor.b64  	%rd2051, %rd2030, %rd2005;
	and.b64  	%rd2052, %rd2051, %rd2050;
	xor.b64  	%rd2053, %rd2052, %rd2030;
	add.s64 	%rd2054, %rd2043, %rd2053;
	add.s64 	%rd2055, %rd2054, %rd2049;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1703,%dummy}, %rd2044;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1704}, %rd2044;
	}
	shf.r.wrap.b32 	%r1705, %r1704, %r1703, 14;
	shf.r.wrap.b32 	%r1706, %r1703, %r1704, 14;
	mov.b64 	%rd2056, {%r1706, %r1705};
	shf.r.wrap.b32 	%r1707, %r1704, %r1703, 18;
	shf.r.wrap.b32 	%r1708, %r1703, %r1704, 18;
	mov.b64 	%rd2057, {%r1708, %r1707};
	xor.b64  	%rd2058, %rd2057, %rd2056;
	shf.l.wrap.b32 	%r1709, %r1703, %r1704, 23;
	shf.l.wrap.b32 	%r1710, %r1704, %r1703, 23;
	mov.b64 	%rd2059, {%r1710, %r1709};
	xor.b64  	%rd2060, %rd2058, %rd2059;
	xor.b64  	%rd2061, %rd2019, %rd1994;
	and.b64  	%rd2062, %rd2044, %rd2061;
	xor.b64  	%rd2063, %rd2062, %rd1994;
	add.s64 	%rd2064, %rd1969, %rd2279;
	ld.const.u64 	%rd2065, [%rd2273+208];
	add.s64 	%rd2066, %rd2064, %rd2065;
	add.s64 	%rd2067, %rd2066, %rd2063;
	add.s64 	%rd2068, %rd2067, %rd2060;
	add.s64 	%rd2069, %rd2068, %rd1980;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1711,%dummy}, %rd2055;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1712}, %rd2055;
	}
	shf.r.wrap.b32 	%r1713, %r1712, %r1711, 28;
	shf.r.wrap.b32 	%r1714, %r1711, %r1712, 28;
	mov.b64 	%rd2070, {%r1714, %r1713};
	shf.l.wrap.b32 	%r1715, %r1711, %r1712, 30;
	shf.l.wrap.b32 	%r1716, %r1712, %r1711, 30;
	mov.b64 	%rd2071, {%r1716, %r1715};
	xor.b64  	%rd2072, %rd2071, %rd2070;
	shf.l.wrap.b32 	%r1717, %r1711, %r1712, 25;
	shf.l.wrap.b32 	%r1718, %r1712, %r1711, 25;
	mov.b64 	%rd2073, {%r1718, %r1717};
	xor.b64  	%rd2074, %rd2072, %rd2073;
	xor.b64  	%rd2075, %rd2055, %rd2005;
	xor.b64  	%rd2076, %rd2055, %rd2030;
	and.b64  	%rd2077, %rd2076, %rd2075;
	xor.b64  	%rd2078, %rd2077, %rd2055;
	add.s64 	%rd2079, %rd2068, %rd2078;
	add.s64 	%rd2080, %rd2079, %rd2074;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1719,%dummy}, %rd2069;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1720}, %rd2069;
	}
	shf.r.wrap.b32 	%r1721, %r1720, %r1719, 14;
	shf.r.wrap.b32 	%r1722, %r1719, %r1720, 14;
	mov.b64 	%rd2081, {%r1722, %r1721};
	shf.r.wrap.b32 	%r1723, %r1720, %r1719, 18;
	shf.r.wrap.b32 	%r1724, %r1719, %r1720, 18;
	mov.b64 	%rd2082, {%r1724, %r1723};
	xor.b64  	%rd2083, %rd2082, %rd2081;
	shf.l.wrap.b32 	%r1725, %r1719, %r1720, 23;
	shf.l.wrap.b32 	%r1726, %r1720, %r1719, 23;
	mov.b64 	%rd2084, {%r1726, %r1725};
	xor.b64  	%rd2085, %rd2083, %rd2084;
	xor.b64  	%rd2086, %rd2044, %rd2019;
	and.b64  	%rd2087, %rd2069, %rd2086;
	xor.b64  	%rd2088, %rd2087, %rd2019;
	add.s64 	%rd2089, %rd1994, %rd2278;
	ld.const.u64 	%rd2090, [%rd2273+216];
	add.s64 	%rd2091, %rd2089, %rd2090;
	add.s64 	%rd2092, %rd2091, %rd2088;
	add.s64 	%rd2093, %rd2092, %rd2085;
	add.s64 	%rd2094, %rd2093, %rd2005;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1727,%dummy}, %rd2080;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1728}, %rd2080;
	}
	shf.r.wrap.b32 	%r1729, %r1728, %r1727, 28;
	shf.r.wrap.b32 	%r1730, %r1727, %r1728, 28;
	mov.b64 	%rd2095, {%r1730, %r1729};
	shf.l.wrap.b32 	%r1731, %r1727, %r1728, 30;
	shf.l.wrap.b32 	%r1732, %r1728, %r1727, 30;
	mov.b64 	%rd2096, {%r1732, %r1731};
	xor.b64  	%rd2097, %rd2096, %rd2095;
	shf.l.wrap.b32 	%r1733, %r1727, %r1728, 25;
	shf.l.wrap.b32 	%r1734, %r1728, %r1727, 25;
	mov.b64 	%rd2098, {%r1734, %r1733};
	xor.b64  	%rd2099, %rd2097, %rd2098;
	xor.b64  	%rd2100, %rd2080, %rd2030;
	xor.b64  	%rd2101, %rd2080, %rd2055;
	and.b64  	%rd2102, %rd2101, %rd2100;
	xor.b64  	%rd2103, %rd2102, %rd2080;
	add.s64 	%rd2104, %rd2093, %rd2103;
	add.s64 	%rd2105, %rd2104, %rd2099;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1735,%dummy}, %rd2094;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1736}, %rd2094;
	}
	shf.r.wrap.b32 	%r1737, %r1736, %r1735, 14;
	shf.r.wrap.b32 	%r1738, %r1735, %r1736, 14;
	mov.b64 	%rd2106, {%r1738, %r1737};
	shf.r.wrap.b32 	%r1739, %r1736, %r1735, 18;
	shf.r.wrap.b32 	%r1740, %r1735, %r1736, 18;
	mov.b64 	%rd2107, {%r1740, %r1739};
	xor.b64  	%rd2108, %rd2107, %rd2106;
	shf.l.wrap.b32 	%r1741, %r1735, %r1736, 23;
	shf.l.wrap.b32 	%r1742, %r1736, %r1735, 23;
	mov.b64 	%rd2109, {%r1742, %r1741};
	xor.b64  	%rd2110, %rd2108, %rd2109;
	xor.b64  	%rd2111, %rd2069, %rd2044;
	and.b64  	%rd2112, %rd2094, %rd2111;
	xor.b64  	%rd2113, %rd2112, %rd2044;
	add.s64 	%rd2114, %rd2019, %rd2277;
	ld.const.u64 	%rd2115, [%rd2273+224];
	add.s64 	%rd2116, %rd2114, %rd2115;
	add.s64 	%rd2117, %rd2116, %rd2113;
	add.s64 	%rd2118, %rd2117, %rd2110;
	add.s64 	%rd2289, %rd2118, %rd2030;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1743,%dummy}, %rd2105;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1744}, %rd2105;
	}
	shf.r.wrap.b32 	%r1745, %r1744, %r1743, 28;
	shf.r.wrap.b32 	%r1746, %r1743, %r1744, 28;
	mov.b64 	%rd2119, {%r1746, %r1745};
	shf.l.wrap.b32 	%r1747, %r1743, %r1744, 30;
	shf.l.wrap.b32 	%r1748, %r1744, %r1743, 30;
	mov.b64 	%rd2120, {%r1748, %r1747};
	xor.b64  	%rd2121, %rd2120, %rd2119;
	shf.l.wrap.b32 	%r1749, %r1743, %r1744, 25;
	shf.l.wrap.b32 	%r1750, %r1744, %r1743, 25;
	mov.b64 	%rd2122, {%r1750, %r1749};
	xor.b64  	%rd2123, %rd2121, %rd2122;
	xor.b64  	%rd2124, %rd2105, %rd2055;
	xor.b64  	%rd2125, %rd2105, %rd2080;
	and.b64  	%rd2126, %rd2125, %rd2124;
	xor.b64  	%rd2127, %rd2126, %rd2105;
	add.s64 	%rd2128, %rd2118, %rd2127;
	add.s64 	%rd2285, %rd2128, %rd2123;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1751,%dummy}, %rd2289;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1752}, %rd2289;
	}
	shf.r.wrap.b32 	%r1753, %r1752, %r1751, 14;
	shf.r.wrap.b32 	%r1754, %r1751, %r1752, 14;
	mov.b64 	%rd2129, {%r1754, %r1753};
	shf.r.wrap.b32 	%r1755, %r1752, %r1751, 18;
	shf.r.wrap.b32 	%r1756, %r1751, %r1752, 18;
	mov.b64 	%rd2130, {%r1756, %r1755};
	xor.b64  	%rd2131, %rd2130, %rd2129;
	shf.l.wrap.b32 	%r1757, %r1751, %r1752, 23;
	shf.l.wrap.b32 	%r1758, %r1752, %r1751, 23;
	mov.b64 	%rd2132, {%r1758, %r1757};
	xor.b64  	%rd2133, %rd2131, %rd2132;
	xor.b64  	%rd2134, %rd2094, %rd2069;
	and.b64  	%rd2135, %rd2289, %rd2134;
	xor.b64  	%rd2136, %rd2135, %rd2069;
	add.s64 	%rd2137, %rd2044, %rd2276;
	ld.const.u64 	%rd2138, [%rd2273+232];
	add.s64 	%rd2139, %rd2137, %rd2138;
	add.s64 	%rd2140, %rd2139, %rd2136;
	add.s64 	%rd2141, %rd2140, %rd2133;
	add.s64 	%rd2288, %rd2141, %rd2055;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1759,%dummy}, %rd2285;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1760}, %rd2285;
	}
	shf.r.wrap.b32 	%r1761, %r1760, %r1759, 28;
	shf.r.wrap.b32 	%r1762, %r1759, %r1760, 28;
	mov.b64 	%rd2142, {%r1762, %r1761};
	shf.l.wrap.b32 	%r1763, %r1759, %r1760, 30;
	shf.l.wrap.b32 	%r1764, %r1760, %r1759, 30;
	mov.b64 	%rd2143, {%r1764, %r1763};
	xor.b64  	%rd2144, %rd2143, %rd2142;
	shf.l.wrap.b32 	%r1765, %r1759, %r1760, 25;
	shf.l.wrap.b32 	%r1766, %r1760, %r1759, 25;
	mov.b64 	%rd2145, {%r1766, %r1765};
	xor.b64  	%rd2146, %rd2144, %rd2145;
	xor.b64  	%rd2147, %rd2285, %rd2080;
	xor.b64  	%rd2148, %rd2285, %rd2105;
	and.b64  	%rd2149, %rd2148, %rd2147;
	xor.b64  	%rd2150, %rd2149, %rd2285;
	add.s64 	%rd2151, %rd2141, %rd2150;
	add.s64 	%rd2284, %rd2151, %rd2146;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1767,%dummy}, %rd2288;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1768}, %rd2288;
	}
	shf.r.wrap.b32 	%r1769, %r1768, %r1767, 14;
	shf.r.wrap.b32 	%r1770, %r1767, %r1768, 14;
	mov.b64 	%rd2152, {%r1770, %r1769};
	shf.r.wrap.b32 	%r1771, %r1768, %r1767, 18;
	shf.r.wrap.b32 	%r1772, %r1767, %r1768, 18;
	mov.b64 	%rd2153, {%r1772, %r1771};
	xor.b64  	%rd2154, %rd2153, %rd2152;
	shf.l.wrap.b32 	%r1773, %r1767, %r1768, 23;
	shf.l.wrap.b32 	%r1774, %r1768, %r1767, 23;
	mov.b64 	%rd2155, {%r1774, %r1773};
	xor.b64  	%rd2156, %rd2154, %rd2155;
	xor.b64  	%rd2157, %rd2289, %rd2094;
	and.b64  	%rd2158, %rd2288, %rd2157;
	xor.b64  	%rd2159, %rd2158, %rd2094;
	add.s64 	%rd2160, %rd2069, %rd2275;
	ld.const.u64 	%rd2161, [%rd2273+240];
	add.s64 	%rd2162, %rd2160, %rd2161;
	add.s64 	%rd2163, %rd2162, %rd2159;
	add.s64 	%rd2164, %rd2163, %rd2156;
	add.s64 	%rd2287, %rd2164, %rd2080;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1775,%dummy}, %rd2284;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1776}, %rd2284;
	}
	shf.r.wrap.b32 	%r1777, %r1776, %r1775, 28;
	shf.r.wrap.b32 	%r1778, %r1775, %r1776, 28;
	mov.b64 	%rd2165, {%r1778, %r1777};
	shf.l.wrap.b32 	%r1779, %r1775, %r1776, 30;
	shf.l.wrap.b32 	%r1780, %r1776, %r1775, 30;
	mov.b64 	%rd2166, {%r1780, %r1779};
	xor.b64  	%rd2167, %rd2166, %rd2165;
	shf.l.wrap.b32 	%r1781, %r1775, %r1776, 25;
	shf.l.wrap.b32 	%r1782, %r1776, %r1775, 25;
	mov.b64 	%rd2168, {%r1782, %r1781};
	xor.b64  	%rd2169, %rd2167, %rd2168;
	xor.b64  	%rd2170, %rd2284, %rd2105;
	xor.b64  	%rd2171, %rd2284, %rd2285;
	and.b64  	%rd2172, %rd2171, %rd2170;
	xor.b64  	%rd2173, %rd2172, %rd2284;
	add.s64 	%rd2174, %rd2164, %rd2173;
	add.s64 	%rd2283, %rd2174, %rd2169;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1783,%dummy}, %rd2287;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1784}, %rd2287;
	}
	shf.r.wrap.b32 	%r1785, %r1784, %r1783, 14;
	shf.r.wrap.b32 	%r1786, %r1783, %r1784, 14;
	mov.b64 	%rd2175, {%r1786, %r1785};
	shf.r.wrap.b32 	%r1787, %r1784, %r1783, 18;
	shf.r.wrap.b32 	%r1788, %r1783, %r1784, 18;
	mov.b64 	%rd2176, {%r1788, %r1787};
	xor.b64  	%rd2177, %rd2176, %rd2175;
	shf.l.wrap.b32 	%r1789, %r1783, %r1784, 23;
	shf.l.wrap.b32 	%r1790, %r1784, %r1783, 23;
	mov.b64 	%rd2178, {%r1790, %r1789};
	xor.b64  	%rd2179, %rd2177, %rd2178;
	xor.b64  	%rd2180, %rd2288, %rd2289;
	and.b64  	%rd2181, %rd2287, %rd2180;
	xor.b64  	%rd2182, %rd2181, %rd2289;
	add.s64 	%rd2183, %rd2094, %rd2274;
	ld.const.u64 	%rd2184, [%rd2273+248];
	add.s64 	%rd2185, %rd2183, %rd2184;
	add.s64 	%rd2186, %rd2185, %rd2182;
	add.s64 	%rd2187, %rd2186, %rd2179;
	add.s64 	%rd2286, %rd2187, %rd2105;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r1791,%dummy}, %rd2283;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r1792}, %rd2283;
	}
	shf.r.wrap.b32 	%r1793, %r1792, %r1791, 28;
	shf.r.wrap.b32 	%r1794, %r1791, %r1792, 28;
	mov.b64 	%rd2188, {%r1794, %r1793};
	shf.l.wrap.b32 	%r1795, %r1791, %r1792, 30;
	shf.l.wrap.b32 	%r1796, %r1792, %r1791, 30;
	mov.b64 	%rd2189, {%r1796, %r1795};
	xor.b64  	%rd2190, %rd2189, %rd2188;
	shf.l.wrap.b32 	%r1797, %r1791, %r1792, 25;
	shf.l.wrap.b32 	%r1798, %r1792, %r1791, 25;
	mov.b64 	%rd2191, {%r1798, %r1797};
	xor.b64  	%rd2192, %rd2190, %rd2191;
	xor.b64  	%rd2193, %rd2283, %rd2285;
	xor.b64  	%rd2194, %rd2283, %rd2284;
	and.b64  	%rd2195, %rd2194, %rd2193;
	xor.b64  	%rd2196, %rd2195, %rd2283;
	add.s64 	%rd2197, %rd2187, %rd2196;
	add.s64 	%rd2282, %rd2197, %rd2192;
	add.s32 	%r1830, %r1830, 16;
	setp.lt.s32	%p194, %r1830, 80;
	mov.u64 	%rd2273, %rd241;
	@%p194 bra 	BB4_325;

	ld.param.u64 	%rd2221, [sha512_final_param_0];
	add.s64 	%rd2198, %rd2272, %rd2282;
	st.u64 	[%rd2221], %rd2198;
	add.s64 	%rd2199, %rd2271, %rd2283;
	st.u64 	[%rd2221+8], %rd2199;
	add.s64 	%rd2200, %rd2270, %rd2284;
	st.u64 	[%rd2221+16], %rd2200;
	add.s64 	%rd2201, %rd2269, %rd2285;
	st.u64 	[%rd2221+24], %rd2201;
	add.s64 	%rd2202, %rd2268, %rd2286;
	st.u64 	[%rd2221+32], %rd2202;
	add.s64 	%rd2203, %rd2267, %rd2287;
	st.u64 	[%rd2221+40], %rd2203;
	add.s64 	%rd2204, %rd2266, %rd2288;
	st.u64 	[%rd2221+48], %rd2204;
	add.s64 	%rd2205, %rd2265, %rd2289;
	st.u64 	[%rd2221+56], %rd2205;
	ret;
}

	// .globl	m01800_init
.entry m01800_init(
	.param .u64 .ptr .global .align 4 m01800_init_param_0,
	.param .u64 .ptr .global .align 4 m01800_init_param_1,
	.param .u64 .ptr .global .align 4 m01800_init_param_2,
	.param .u64 .ptr .global .align 4 m01800_init_param_3,
	.param .u64 .ptr .global .align 8 m01800_init_param_4,
	.param .u64 .ptr .global .align 1 m01800_init_param_5,
	.param .u64 .ptr .global .align 4 m01800_init_param_6,
	.param .u64 .ptr .global .align 4 m01800_init_param_7,
	.param .u64 .ptr .global .align 4 m01800_init_param_8,
	.param .u64 .ptr .global .align 4 m01800_init_param_9,
	.param .u64 .ptr .global .align 4 m01800_init_param_10,
	.param .u64 .ptr .global .align 4 m01800_init_param_11,
	.param .u64 .ptr .global .align 4 m01800_init_param_12,
	.param .u64 .ptr .global .align 4 m01800_init_param_13,
	.param .u64 .ptr .global .align 4 m01800_init_param_14,
	.param .u64 .ptr .global .align 4 m01800_init_param_15,
	.param .u64 .ptr .global .align 4 m01800_init_param_16,
	.param .u64 .ptr .global .align 4 m01800_init_param_17,
	.param .u64 .ptr .global .align 1 m01800_init_param_18,
	.param .u64 .ptr .global .align 4 m01800_init_param_19,
	.param .u64 .ptr .global .align 4 m01800_init_param_20,
	.param .u64 .ptr .global .align 4 m01800_init_param_21,
	.param .u64 .ptr .global .align 4 m01800_init_param_22,
	.param .u64 .ptr .global .align 4 m01800_init_param_23,
	.param .u32 m01800_init_param_24,
	.param .u32 m01800_init_param_25,
	.param .u32 m01800_init_param_26,
	.param .u32 m01800_init_param_27,
	.param .u32 m01800_init_param_28,
	.param .u32 m01800_init_param_29,
	.param .u32 m01800_init_param_30,
	.param .u32 m01800_init_param_31,
	.param .u32 m01800_init_param_32,
	.param .u32 m01800_init_param_33,
	.param .u64 m01800_init_param_34
)
{
	.local .align 16 .b8 	__local_depot5[1616];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<453>;
	.reg .b32 	%r<16318>;
	.reg .b64 	%rd<3081>;


	mov.u64 	%rd3080, __local_depot5;
	cvta.local.u64 	%SP, %rd3080;
	ld.param.u64 	%rd282, [m01800_init_param_0];
	ld.param.u64 	%rd284, [m01800_init_param_17];
	ld.param.u32 	%r1418, [m01800_init_param_27];
	ld.param.u64 	%rd285, [m01800_init_param_34];
	add.u64 	%rd286, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd286;
	add.u64 	%rd287, %SP, 16;
	cvta.to.local.u64 	%rd2, %rd287;
	add.u64 	%rd288, %SP, 32;
	cvta.to.local.u64 	%rd3, %rd288;
	add.u64 	%rd289, %SP, 48;
	cvta.to.local.u64 	%rd4, %rd289;
	add.u64 	%rd290, %SP, 64;
	cvta.to.local.u64 	%rd5, %rd290;
	add.u64 	%rd291, %SP, 80;
	cvta.to.local.u64 	%rd6, %rd291;
	add.u64 	%rd292, %SP, 96;
	cvta.to.local.u64 	%rd7, %rd292;
	add.u64 	%rd293, %SP, 112;
	cvta.to.local.u64 	%rd8, %rd293;
	add.u64 	%rd294, %SP, 128;
	cvta.to.local.u64 	%rd9, %rd294;
	add.u64 	%rd295, %SP, 384;
	cvta.to.local.u64 	%rd10, %rd295;
	add.u64 	%rd296, %SP, 848;
	cvta.to.local.u64 	%rd11, %rd296;
	add.u64 	%rd297, %SP, 1104;
	cvta.to.local.u64 	%rd12, %rd297;
	add.u64 	%rd298, %SP, 1360;
	cvta.to.local.u64 	%rd13, %rd298;
	mov.u32 	%r1419, %ctaid.x;
	mov.u32 	%r1420, %ntid.x;
	mov.b32	%r1421, %envreg3;
	mad.lo.s32 	%r1422, %r1419, %r1420, %r1421;
	mov.u32 	%r1423, %tid.x;
	add.s32 	%r1, %r1422, %r1423;
	cvt.s64.s32	%rd299, %r1;
	setp.ge.u64	%p2, %rd299, %rd285;
	@%p2 bra 	BB5_607;

	mul.wide.s32 	%rd301, %r1, 260;
	add.s64 	%rd302, %rd282, %rd301;
	ld.global.u32 	%r144, [%rd302+256];
	mov.u64 	%rd3024, 0;
	mov.pred 	%p3, 0;
	@%p3 bra 	BB5_3;

BB5_2:
	shl.b64 	%rd304, %rd3024, 2;
	add.s64 	%rd305, %rd9, %rd304;
	mov.u32 	%r1424, 0;
	st.local.u32 	[%rd305], %r1424;
	add.s64 	%rd3024, %rd3024, 1;
	setp.lt.u64	%p4, %rd3024, 64;
	@%p4 bra 	BB5_2;

BB5_3:
	setp.eq.s32	%p5, %r144, 0;
	@%p5 bra 	BB5_12;

	add.s32 	%r1427, %r144, -1;
	shr.u32 	%r1428, %r1427, 2;
	add.s32 	%r3, %r1428, 1;
	and.b32  	%r4, %r3, 3;
	setp.eq.s32	%p6, %r4, 0;
	mov.u32 	%r16160, 0;
	mov.u32 	%r16161, %r16160;
	@%p6 bra 	BB5_10;

	setp.eq.s32	%p7, %r4, 1;
	mov.u32 	%r16156, 0;
	mov.u32 	%r16157, %r16156;
	@%p7 bra 	BB5_9;

	setp.eq.s32	%p8, %r4, 2;
	mov.u32 	%r16157, 4;
	mov.u32 	%r16154, 0;
	@%p8 bra 	BB5_8;

	ld.global.u32 	%r1435, [%rd302];
	st.local.u32 	[%rd9], %r1435;
	mov.u32 	%r16157, 8;
	mov.u32 	%r16154, 1;

BB5_8:
	mul.wide.u32 	%rd310, %r16154, 4;
	add.s64 	%rd311, %rd302, %rd310;
	ld.global.u32 	%r1436, [%rd311];
	add.s64 	%rd312, %rd9, %rd310;
	st.local.u32 	[%rd312], %r1436;
	add.s32 	%r16156, %r16154, 1;

BB5_9:
	mul.wide.s32 	%rd315, %r16156, 4;
	add.s64 	%rd316, %rd302, %rd315;
	ld.global.u32 	%r1437, [%rd316];
	add.s64 	%rd317, %rd9, %rd315;
	st.local.u32 	[%rd317], %r1437;
	add.s32 	%r16161, %r16157, 4;
	add.s32 	%r16160, %r16156, 1;

BB5_10:
	setp.lt.u32	%p9, %r3, 4;
	@%p9 bra 	BB5_12;

BB5_11:
	mul.wide.s32 	%rd320, %r16160, 4;
	add.s64 	%rd321, %rd302, %rd320;
	ld.global.u32 	%r1438, [%rd321];
	add.s64 	%rd322, %rd9, %rd320;
	st.local.u32 	[%rd322], %r1438;
	add.s32 	%r1439, %r16160, 1;
	mul.wide.s32 	%rd323, %r1439, 4;
	add.s64 	%rd324, %rd302, %rd323;
	ld.global.u32 	%r1440, [%rd324];
	add.s64 	%rd325, %rd9, %rd323;
	st.local.u32 	[%rd325], %r1440;
	add.s32 	%r1441, %r16160, 2;
	mul.wide.s32 	%rd326, %r1441, 4;
	add.s64 	%rd327, %rd302, %rd326;
	ld.global.u32 	%r1442, [%rd327];
	add.s64 	%rd328, %rd9, %rd326;
	st.local.u32 	[%rd328], %r1442;
	add.s32 	%r1443, %r16160, 3;
	mul.wide.s32 	%rd329, %r1443, 4;
	add.s64 	%rd330, %rd302, %rd329;
	ld.global.u32 	%r1444, [%rd330];
	add.s64 	%rd331, %rd9, %rd329;
	st.local.u32 	[%rd331], %r1444;
	add.s32 	%r16160, %r16160, 4;
	add.s32 	%r16161, %r16161, 16;
	setp.lt.u32	%p10, %r16161, %r144;
	@%p10 bra 	BB5_11;

BB5_12:
	@%p5 bra 	BB5_21;

	add.s32 	%r1447, %r144, -1;
	shr.u32 	%r1448, %r1447, 2;
	add.s32 	%r18, %r1448, 1;
	and.b32  	%r19, %r18, 3;
	setp.eq.s32	%p12, %r19, 0;
	mov.u32 	%r16168, 0;
	mov.u32 	%r16169, %r16168;
	@%p12 bra 	BB5_19;

	setp.eq.s32	%p13, %r19, 1;
	mov.u32 	%r16164, 0;
	mov.u32 	%r16165, %r16164;
	@%p13 bra 	BB5_18;

	setp.eq.s32	%p14, %r19, 2;
	mov.u32 	%r16165, 4;
	mov.u32 	%r16162, 0;
	@%p14 bra 	BB5_17;

	ld.local.u32 	%r1454, [%rd9];
	// inline asm
	prmt.b32 %r1453, %r1454, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd9], %r1453;
	mov.u32 	%r16165, 8;
	mov.u32 	%r16162, 1;

BB5_17:
	mul.wide.u32 	%rd332, %r16162, 4;
	add.s64 	%rd333, %rd9, %rd332;
	ld.local.u32 	%r1458, [%rd333];
	// inline asm
	prmt.b32 %r1457, %r1458, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd333], %r1457;
	add.s32 	%r16164, %r16162, 1;

BB5_18:
	mul.wide.s32 	%rd334, %r16164, 4;
	add.s64 	%rd335, %rd9, %rd334;
	ld.local.u32 	%r1460, [%rd335];
	// inline asm
	prmt.b32 %r1459, %r1460, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd335], %r1459;
	add.s32 	%r16169, %r16165, 4;
	add.s32 	%r16168, %r16164, 1;

BB5_19:
	setp.lt.u32	%p15, %r18, 4;
	@%p15 bra 	BB5_21;

BB5_20:
	mul.wide.s32 	%rd336, %r16168, 4;
	add.s64 	%rd337, %rd9, %rd336;
	ld.local.u32 	%r1462, [%rd337];
	// inline asm
	prmt.b32 %r1461, %r1462, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd337], %r1461;
	add.s32 	%r1469, %r16168, 1;
	mul.wide.s32 	%rd338, %r1469, 4;
	add.s64 	%rd339, %rd9, %rd338;
	ld.local.u32 	%r1464, [%rd339];
	// inline asm
	prmt.b32 %r1463, %r1464, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd339], %r1463;
	add.s32 	%r1470, %r16168, 2;
	mul.wide.s32 	%rd340, %r1470, 4;
	add.s64 	%rd341, %rd9, %rd340;
	ld.local.u32 	%r1466, [%rd341];
	// inline asm
	prmt.b32 %r1465, %r1466, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd341], %r1465;
	add.s32 	%r1471, %r16168, 3;
	mul.wide.s32 	%rd342, %r1471, 4;
	add.s64 	%rd343, %rd9, %rd342;
	ld.local.u32 	%r1468, [%rd343];
	// inline asm
	prmt.b32 %r1467, %r1468, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd343], %r1467;
	add.s32 	%r16168, %r16168, 4;
	add.s32 	%r16169, %r16169, 16;
	setp.lt.u32	%p16, %r16169, %r144;
	@%p16 bra 	BB5_20;

BB5_21:
	cvt.u64.u32	%rd17, %r1418;
	mul.wide.u32 	%rd345, %r1418, 564;
	add.s64 	%rd346, %rd284, %rd345;
	ld.global.u32 	%r229, [%rd346+512];
	mov.u64 	%rd3025, 0;
	@%p3 bra 	BB5_23;

BB5_22:
	shl.b64 	%rd348, %rd3025, 2;
	add.s64 	%rd349, %rd10, %rd348;
	mov.u32 	%r1472, 0;
	st.local.u32 	[%rd349], %r1472;
	add.s64 	%rd3025, %rd3025, 1;
	setp.lt.u64	%p18, %rd3025, 64;
	@%p18 bra 	BB5_22;

BB5_23:
	setp.eq.s32	%p19, %r229, 0;
	@%p19 bra 	BB5_44;

	add.s32 	%r1479, %r229, -1;
	shr.u32 	%r1480, %r1479, 2;
	add.s32 	%r34, %r1480, 1;
	and.b32  	%r35, %r34, 3;
	mov.u32 	%r16171, 4;
	mov.u32 	%r16170, 0;
	setp.eq.s32	%p20, %r35, 0;
	@%p20 bra 	BB5_25;

	setp.eq.s32	%p21, %r35, 1;
	@%p21 bra 	BB5_27;
	bra.uni 	BB5_28;

BB5_27:
	mov.u32 	%r16171, %r16170;
	bra.uni 	BB5_31;

BB5_25:
	mov.u32 	%r16177, %r16170;
	bra.uni 	BB5_32;

BB5_28:
	setp.eq.s32	%p22, %r35, 2;
	@%p22 bra 	BB5_30;

	mul.lo.s64 	%rd350, %rd17, 564;
	add.s64 	%rd351, %rd284, %rd350;
	ld.global.u32 	%r1483, [%rd351];
	st.local.u32 	[%rd10], %r1483;
	mov.u32 	%r16171, 8;
	mov.u32 	%r16170, 1;

BB5_30:
	mul.lo.s64 	%rd352, %rd17, 564;
	add.s64 	%rd353, %rd284, %rd352;
	mul.wide.u32 	%rd354, %r16170, 4;
	add.s64 	%rd355, %rd353, %rd354;
	ld.global.u32 	%r1484, [%rd355];
	add.s64 	%rd356, %rd10, %rd354;
	st.local.u32 	[%rd356], %r1484;
	add.s32 	%r16170, %r16170, 1;

BB5_31:
	mul.lo.s64 	%rd357, %rd17, 564;
	add.s64 	%rd358, %rd284, %rd357;
	mul.wide.s32 	%rd359, %r16170, 4;
	add.s64 	%rd360, %rd358, %rd359;
	ld.global.u32 	%r1485, [%rd360];
	add.s64 	%rd361, %rd10, %rd359;
	st.local.u32 	[%rd361], %r1485;
	add.s32 	%r16177, %r16171, 4;
	add.s32 	%r16170, %r16170, 1;

BB5_32:
	setp.lt.u32	%p23, %r34, 4;
	@%p23 bra 	BB5_34;

BB5_33:
	mul.lo.s64 	%rd362, %rd17, 564;
	add.s64 	%rd363, %rd284, %rd362;
	mul.wide.s32 	%rd364, %r16170, 4;
	add.s64 	%rd365, %rd363, %rd364;
	ld.global.u32 	%r1486, [%rd365];
	add.s64 	%rd366, %rd10, %rd364;
	st.local.u32 	[%rd366], %r1486;
	add.s32 	%r1487, %r16170, 1;
	mul.wide.s32 	%rd367, %r1487, 4;
	add.s64 	%rd368, %rd363, %rd367;
	ld.global.u32 	%r1488, [%rd368];
	add.s64 	%rd369, %rd10, %rd367;
	st.local.u32 	[%rd369], %r1488;
	add.s32 	%r1489, %r16170, 2;
	mul.wide.s32 	%rd370, %r1489, 4;
	add.s64 	%rd371, %rd363, %rd370;
	ld.global.u32 	%r1490, [%rd371];
	add.s64 	%rd372, %rd10, %rd370;
	st.local.u32 	[%rd372], %r1490;
	add.s32 	%r1491, %r16170, 3;
	mul.wide.s32 	%rd373, %r1491, 4;
	add.s64 	%rd374, %rd363, %rd373;
	ld.global.u32 	%r1492, [%rd374];
	add.s64 	%rd375, %rd10, %rd373;
	st.local.u32 	[%rd375], %r1492;
	add.s32 	%r16170, %r16170, 4;
	add.s32 	%r16177, %r16177, 16;
	setp.lt.u32	%p24, %r16177, %r229;
	@%p24 bra 	BB5_33;

BB5_34:
	mov.u32 	%r16179, 4;
	mov.u32 	%r16178, 0;
	@%p20 bra 	BB5_35;

	setp.eq.s32	%p26, %r35, 1;
	@%p26 bra 	BB5_37;
	bra.uni 	BB5_38;

BB5_37:
	mov.u32 	%r16179, %r16178;
	bra.uni 	BB5_41;

BB5_35:
	mov.u32 	%r16185, %r16178;
	bra.uni 	BB5_42;

BB5_38:
	setp.eq.s32	%p27, %r35, 2;
	@%p27 bra 	BB5_40;

	ld.local.u32 	%r1500, [%rd10];
	// inline asm
	prmt.b32 %r1499, %r1500, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd10], %r1499;
	mov.u32 	%r16179, 8;
	mov.u32 	%r16178, 1;

BB5_40:
	mul.wide.u32 	%rd376, %r16178, 4;
	add.s64 	%rd377, %rd10, %rd376;
	ld.local.u32 	%r1504, [%rd377];
	// inline asm
	prmt.b32 %r1503, %r1504, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd377], %r1503;
	add.s32 	%r16178, %r16178, 1;

BB5_41:
	mul.wide.s32 	%rd378, %r16178, 4;
	add.s64 	%rd379, %rd10, %rd378;
	ld.local.u32 	%r1506, [%rd379];
	// inline asm
	prmt.b32 %r1505, %r1506, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd379], %r1505;
	add.s32 	%r16185, %r16179, 4;
	add.s32 	%r16178, %r16178, 1;

BB5_42:
	@%p23 bra 	BB5_44;

BB5_43:
	mul.wide.s32 	%rd380, %r16178, 4;
	add.s64 	%rd381, %rd10, %rd380;
	ld.local.u32 	%r1508, [%rd381];
	// inline asm
	prmt.b32 %r1507, %r1508, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd381], %r1507;
	add.s32 	%r1515, %r16178, 1;
	mul.wide.s32 	%rd382, %r1515, 4;
	add.s64 	%rd383, %rd10, %rd382;
	ld.local.u32 	%r1510, [%rd383];
	// inline asm
	prmt.b32 %r1509, %r1510, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd383], %r1509;
	add.s32 	%r1516, %r16178, 2;
	mul.wide.s32 	%rd384, %r1516, 4;
	add.s64 	%rd385, %rd10, %rd384;
	ld.local.u32 	%r1512, [%rd385];
	// inline asm
	prmt.b32 %r1511, %r1512, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd385], %r1511;
	add.s32 	%r1517, %r16178, 3;
	mul.wide.s32 	%rd386, %r1517, 4;
	add.s64 	%rd387, %rd10, %rd386;
	ld.local.u32 	%r1514, [%rd387];
	// inline asm
	prmt.b32 %r1513, %r1514, 0, 0x0123;
	// inline asm
	st.local.u32 	[%rd387], %r1513;
	add.s32 	%r16178, %r16178, 4;
	add.s32 	%r16185, %r16185, 16;
	setp.lt.u32	%p29, %r16185, %r229;
	@%p29 bra 	BB5_43;

BB5_44:
	add.u64 	%rd388, %SP, 640;
	cvta.to.local.u64 	%rd389, %rd388;
	mov.u64 	%rd390, 7640891576956012808;
	st.local.u64 	[%rd389], %rd390;
	add.s64 	%rd21, %rd389, 8;
	mov.u64 	%rd391, -4942790177534073029;
	st.local.u64 	[%rd389+8], %rd391;
	add.s64 	%rd22, %rd389, 16;
	mov.u64 	%rd392, 4354685564936845355;
	st.local.u64 	[%rd389+16], %rd392;
	add.s64 	%rd23, %rd389, 24;
	mov.u64 	%rd393, -6534734903238641935;
	st.local.u64 	[%rd389+24], %rd393;
	add.s64 	%rd24, %rd389, 32;
	mov.u64 	%rd394, 5840696475078001361;
	st.local.u64 	[%rd389+32], %rd394;
	add.s64 	%rd25, %rd389, 40;
	mov.u64 	%rd395, -7276294671716946913;
	st.local.u64 	[%rd389+40], %rd395;
	add.s64 	%rd26, %rd389, 48;
	mov.u64 	%rd396, 2270897969802886507;
	st.local.u64 	[%rd389+48], %rd396;
	add.s64 	%rd27, %rd389, 56;
	mov.u64 	%rd397, 6620516959819538809;
	st.local.u64 	[%rd389+56], %rd397;
	add.s64 	%rd28, %rd389, 64;
	mov.u32 	%r16186, 0;
	add.s64 	%rd29, %rd389, 68;
	st.local.v2.u32 	[%rd389+64], {%r16186, %r16186};
	add.s64 	%rd30, %rd389, 72;
	st.local.v2.u32 	[%rd389+72], {%r16186, %r16186};
	st.local.v2.u32 	[%rd389+80], {%r16186, %r16186};
	st.local.v2.u32 	[%rd389+88], {%r16186, %r16186};
	st.local.v2.u32 	[%rd389+96], {%r16186, %r16186};
	add.s64 	%rd31, %rd389, 104;
	add.s64 	%rd32, %rd389, 108;
	st.local.v2.u32 	[%rd389+104], {%r16186, %r16186};
	add.s64 	%rd33, %rd389, 112;
	add.s64 	%rd34, %rd389, 116;
	st.local.v2.u32 	[%rd389+112], {%r16186, %r16186};
	add.s64 	%rd35, %rd389, 120;
	add.s64 	%rd36, %rd389, 124;
	st.local.v2.u32 	[%rd389+120], {%r16186, %r16186};
	add.s64 	%rd37, %rd389, 128;
	add.s64 	%rd38, %rd389, 132;
	st.local.v2.u32 	[%rd389+128], {%r16186, %r16186};
	add.s64 	%rd39, %rd389, 136;
	add.s64 	%rd40, %rd389, 140;
	st.local.v2.u32 	[%rd389+136], {%r16186, %r16186};
	add.s64 	%rd41, %rd389, 144;
	add.s64 	%rd42, %rd389, 148;
	st.local.v2.u32 	[%rd389+144], {%r16186, %r16186};
	add.s64 	%rd43, %rd389, 152;
	add.s64 	%rd44, %rd389, 156;
	st.local.v2.u32 	[%rd389+152], {%r16186, %r16186};
	add.s64 	%rd45, %rd389, 160;
	add.s64 	%rd46, %rd389, 164;
	st.local.v2.u32 	[%rd389+160], {%r16186, %r16186};
	add.s64 	%rd47, %rd389, 168;
	add.s64 	%rd48, %rd389, 172;
	st.local.v2.u32 	[%rd389+168], {%r16186, %r16186};
	add.s64 	%rd49, %rd389, 176;
	add.s64 	%rd50, %rd389, 180;
	st.local.v2.u32 	[%rd389+176], {%r16186, %r16186};
	add.s64 	%rd51, %rd389, 184;
	add.s64 	%rd52, %rd389, 188;
	st.local.v2.u32 	[%rd389+184], {%r16186, %r16186};
	st.local.u32 	[%rd389+192], %r16186;
	ld.const.u64 	%rd53, [k_sha512];
	ld.const.u64 	%rd54, [k_sha512+8];
	ld.const.u64 	%rd55, [k_sha512+16];
	ld.const.u64 	%rd56, [k_sha512+24];
	ld.const.u64 	%rd57, [k_sha512+32];
	ld.const.u64 	%rd58, [k_sha512+40];
	ld.const.u64 	%rd59, [k_sha512+48];
	ld.const.u64 	%rd60, [k_sha512+56];
	ld.const.u64 	%rd61, [k_sha512+64];
	ld.const.u64 	%rd62, [k_sha512+72];
	ld.const.u64 	%rd63, [k_sha512+80];
	ld.const.u64 	%rd64, [k_sha512+88];
	ld.const.u64 	%rd65, [k_sha512+96];
	ld.const.u64 	%rd66, [k_sha512+104];
	ld.const.u64 	%rd67, [k_sha512+112];
	ld.const.u64 	%rd68, [k_sha512+120];
	mov.u32 	%r16187, %r16186;
	bra.uni 	BB5_45;

BB5_785:
	add.s64 	%rd2975, %rd223, %rd3064;
	st.local.u64 	[%rd389], %rd2975;
	add.s64 	%rd2976, %rd225, %rd3065;
	st.local.u64 	[%rd21], %rd2976;
	add.s64 	%rd2977, %rd224, %rd3066;
	st.local.u64 	[%rd22], %rd2977;
	add.s64 	%rd2978, %rd222, %rd3067;
	st.local.u64 	[%rd23], %rd2978;
	add.s64 	%rd2979, %rd218, %rd3068;
	st.local.u64 	[%rd24], %rd2979;
	add.s64 	%rd2980, %rd220, %rd3069;
	st.local.u64 	[%rd25], %rd2980;
	add.s64 	%rd2981, %rd219, %rd3070;
	st.local.u64 	[%rd26], %rd2981;
	add.s64 	%rd2982, %rd221, %rd3071;
	st.local.u64 	[%rd27], %rd2982;
	st.local.u32 	[%rd28], %r16288;
	st.local.u32 	[%rd29], %r16287;
	st.local.u32 	[%rd30], %r16286;
	st.local.u32 	[%rd389+76], %r16285;
	st.local.v2.u32 	[%rd389+80], {%r16292, %r16291};
	st.local.v2.u32 	[%rd389+88], {%r16290, %r16289};
	st.local.v2.u32 	[%rd389+96], {%r16296, %r16295};
	st.local.u32 	[%rd31], %r16294;
	st.local.u32 	[%rd32], %r16293;
	st.local.u32 	[%rd33], %r16300;
	st.local.u32 	[%rd34], %r16299;
	st.local.u32 	[%rd35], %r16298;
	st.local.u32 	[%rd36], %r16297;
	st.local.u32 	[%rd37], %r16304;
	st.local.u32 	[%rd38], %r16303;
	st.local.u32 	[%rd39], %r16302;
	st.local.u32 	[%rd40], %r16301;
	st.local.u32 	[%rd41], %r16308;
	st.local.u32 	[%rd42], %r16307;
	st.local.u32 	[%rd43], %r16306;
	st.local.u32 	[%rd44], %r16305;
	st.local.u32 	[%rd45], %r16312;
	st.local.u32 	[%rd46], %r16311;
	st.local.u32 	[%rd47], %r16310;
	st.local.u32 	[%rd48], %r16309;
	st.local.u32 	[%rd49], %r16316;
	st.local.u32 	[%rd50], %r16315;
	st.local.u32 	[%rd51], %r16314;
	st.local.u32 	[%rd52], %r16313;
	add.s32 	%r16186, %r16186, 128;
	add.s32 	%r16187, %r16187, 32;

BB5_45:
	add.s32 	%r1520, %r144, -128;
	setp.lt.s32	%p30, %r16186, %r1520;
	mul.wide.s32 	%rd400, %r16187, 4;
	add.s64 	%rd401, %rd9, %rd400;
	ld.local.u32 	%r16284, [%rd401];
	st.local.u32 	[%rd1], %r16284;
	add.s32 	%r1521, %r16187, 1;
	mul.wide.s32 	%rd402, %r1521, 4;
	add.s64 	%rd403, %rd9, %rd402;
	ld.local.u32 	%r16283, [%rd403];
	st.local.u32 	[%rd1+4], %r16283;
	add.s32 	%r1522, %r16187, 2;
	mul.wide.s32 	%rd404, %r1522, 4;
	add.s64 	%rd405, %rd9, %rd404;
	ld.local.u32 	%r1523, [%rd405];
	st.local.u32 	[%rd1+8], %r1523;
	add.s32 	%r1524, %r16187, 3;
	mul.wide.s32 	%rd406, %r1524, 4;
	add.s64 	%rd407, %rd9, %rd406;
	ld.local.u32 	%r1525, [%rd407];
	st.local.u32 	[%rd1+12], %r1525;
	add.s32 	%r1526, %r16187, 4;
	mul.wide.s32 	%rd408, %r1526, 4;
	add.s64 	%rd409, %rd9, %rd408;
	ld.local.u32 	%r1527, [%rd409];
	st.local.u32 	[%rd2], %r1527;
	add.s32 	%r1528, %r16187, 5;
	mul.wide.s32 	%rd410, %r1528, 4;
	add.s64 	%rd411, %rd9, %rd410;
	ld.local.u32 	%r1529, [%rd411];
	st.local.u32 	[%rd2+4], %r1529;
	add.s32 	%r1530, %r16187, 6;
	mul.wide.s32 	%rd412, %r1530, 4;
	add.s64 	%rd413, %rd9, %rd412;
	ld.local.u32 	%r1531, [%rd413];
	st.local.u32 	[%rd2+8], %r1531;
	add.s32 	%r1532, %r16187, 7;
	mul.wide.s32 	%rd414, %r1532, 4;
	add.s64 	%rd415, %rd9, %rd414;
	ld.local.u32 	%r1533, [%rd415];
	st.local.u32 	[%rd2+12], %r1533;
	add.s32 	%r1534, %r16187, 8;
	mul.wide.s32 	%rd416, %r1534, 4;
	add.s64 	%rd417, %rd9, %rd416;
	ld.local.u32 	%r1535, [%rd417];
	st.local.u32 	[%rd3], %r1535;
	add.s32 	%r1536, %r16187, 9;
	mul.wide.s32 	%rd418, %r1536, 4;
	add.s64 	%rd419, %rd9, %rd418;
	ld.local.u32 	%r1537, [%rd419];
	st.local.u32 	[%rd3+4], %r1537;
	add.s32 	%r1538, %r16187, 10;
	mul.wide.s32 	%rd420, %r1538, 4;
	add.s64 	%rd421, %rd9, %rd420;
	ld.local.u32 	%r1539, [%rd421];
	st.local.u32 	[%rd3+8], %r1539;
	add.s32 	%r1540, %r16187, 11;
	mul.wide.s32 	%rd422, %r1540, 4;
	add.s64 	%rd423, %rd9, %rd422;
	ld.local.u32 	%r1541, [%rd423];
	st.local.u32 	[%rd3+12], %r1541;
	add.s32 	%r1542, %r16187, 12;
	mul.wide.s32 	%rd424, %r1542, 4;
	add.s64 	%rd425, %rd9, %rd424;
	ld.local.u32 	%r1543, [%rd425];
	st.local.u32 	[%rd4], %r1543;
	add.s32 	%r1544, %r16187, 13;
	mul.wide.s32 	%rd426, %r1544, 4;
	add.s64 	%rd427, %rd9, %rd426;
	ld.local.u32 	%r1545, [%rd427];
	st.local.u32 	[%rd4+4], %r1545;
	add.s32 	%r1546, %r16187, 14;
	mul.wide.s32 	%rd428, %r1546, 4;
	add.s64 	%rd429, %rd9, %rd428;
	ld.local.u32 	%r1547, [%rd429];
	st.local.u32 	[%rd4+8], %r1547;
	add.s32 	%r1548, %r16187, 15;
	mul.wide.s32 	%rd430, %r1548, 4;
	add.s64 	%rd431, %rd9, %rd430;
	ld.local.u32 	%r1549, [%rd431];
	st.local.u32 	[%rd4+12], %r1549;
	add.s32 	%r1550, %r16187, 16;
	mul.wide.s32 	%rd432, %r1550, 4;
	add.s64 	%rd433, %rd9, %rd432;
	ld.local.u32 	%r1551, [%rd433];
	st.local.u32 	[%rd5], %r1551;
	add.s32 	%r1552, %r16187, 17;
	mul.wide.s32 	%rd434, %r1552, 4;
	add.s64 	%rd435, %rd9, %rd434;
	ld.local.u32 	%r1553, [%rd435];
	st.local.u32 	[%rd5+4], %r1553;
	add.s32 	%r1554, %r16187, 18;
	mul.wide.s32 	%rd436, %r1554, 4;
	add.s64 	%rd437, %rd9, %rd436;
	ld.local.u32 	%r1555, [%rd437];
	st.local.u32 	[%rd5+8], %r1555;
	add.s32 	%r1556, %r16187, 19;
	mul.wide.s32 	%rd438, %r1556, 4;
	add.s64 	%rd439, %rd9, %rd438;
	ld.local.u32 	%r1557, [%rd439];
	st.local.u32 	[%rd5+12], %r1557;
	add.s32 	%r1558, %r16187, 20;
	mul.wide.s32 	%rd440, %r1558, 4;
	add.s64 	%rd441, %rd9, %rd440;
	ld.local.u32 	%r1559, [%rd441];
	st.local.u32 	[%rd6], %r1559;
	add.s32 	%r1560, %r16187, 21;
	mul.wide.s32 	%rd442, %r1560, 4;
	add.s64 	%rd443, %rd9, %rd442;
	ld.local.u32 	%r1561, [%rd443];
	st.local.u32 	[%rd6+4], %r1561;
	add.s32 	%r1562, %r16187, 22;
	mul.wide.s32 	%rd444, %r1562, 4;
	add.s64 	%rd445, %rd9, %rd444;
	ld.local.u32 	%r1563, [%rd445];
	st.local.u32 	[%rd6+8], %r1563;
	add.s32 	%r1564, %r16187, 23;
	mul.wide.s32 	%rd446, %r1564, 4;
	add.s64 	%rd447, %rd9, %rd446;
	ld.local.u32 	%r1565, [%rd447];
	st.local.u32 	[%rd6+12], %r1565;
	add.s32 	%r1566, %r16187, 24;
	mul.wide.s32 	%rd448, %r1566, 4;
	add.s64 	%rd449, %rd9, %rd448;
	ld.local.u32 	%r1567, [%rd449];
	st.local.u32 	[%rd7], %r1567;
	add.s32 	%r1568, %r16187, 25;
	mul.wide.s32 	%rd450, %r1568, 4;
	add.s64 	%rd451, %rd9, %rd450;
	ld.local.u32 	%r1569, [%rd451];
	st.local.u32 	[%rd7+4], %r1569;
	add.s32 	%r1570, %r16187, 26;
	mul.wide.s32 	%rd452, %r1570, 4;
	add.s64 	%rd453, %rd9, %rd452;
	ld.local.u32 	%r1571, [%rd453];
	st.local.u32 	[%rd7+8], %r1571;
	add.s32 	%r1572, %r16187, 27;
	mul.wide.s32 	%rd454, %r1572, 4;
	add.s64 	%rd455, %rd9, %rd454;
	ld.local.u32 	%r1573, [%rd455];
	st.local.u32 	[%rd7+12], %r1573;
	add.s32 	%r1574, %r16187, 28;
	mul.wide.s32 	%rd456, %r1574, 4;
	add.s64 	%rd457, %rd9, %rd456;
	ld.local.u32 	%r1575, [%rd457];
	st.local.u32 	[%rd8], %r1575;
	add.s32 	%r1576, %r16187, 29;
	mul.wide.s32 	%rd458, %r1576, 4;
	add.s64 	%rd459, %rd9, %rd458;
	ld.local.u32 	%r1577, [%rd459];
	st.local.u32 	[%rd8+4], %r1577;
	add.s32 	%r1578, %r16187, 30;
	mul.wide.s32 	%rd460, %r1578, 4;
	add.s64 	%rd461, %rd9, %rd460;
	ld.local.u32 	%r1579, [%rd461];
	st.local.u32 	[%rd8+8], %r1579;
	add.s32 	%r1580, %r16187, 31;
	mul.wide.s32 	%rd462, %r1580, 4;
	add.s64 	%rd463, %rd9, %rd462;
	ld.local.u32 	%r66, [%rd463];
	st.local.u32 	[%rd8+12], %r66;
	@%p30 bra 	BB5_697;
	bra.uni 	BB5_46;

BB5_697:
	ld.local.u32 	%r9493, [%rd389+192];
	add.s32 	%r9494, %r9493, 128;
	st.local.u32 	[%rd389+192], %r9494;
	bfe.u32 	%r9492, %r9493, 2, 5;
	and.b32  	%r9495, %r9493, 3;
	shl.b32 	%r9496, %r9495, 2;
	mov.u32 	%r9497, 1985229328;
	shr.u32 	%r9498, %r9497, %r9496;
	and.b32  	%r848, %r9498, 65535;
	mov.u32 	%r16285, 0;
	setp.gt.s32	%p400, %r9492, 15;
	@%p400 bra 	BB5_730;

	setp.gt.s32	%p424, %r9492, 7;
	@%p424 bra 	BB5_715;

	setp.gt.s32	%p436, %r9492, 3;
	@%p436 bra 	BB5_708;

	setp.gt.s32	%p442, %r9492, 1;
	@%p442 bra 	BB5_704;

	setp.eq.s32	%p445, %r9492, 0;
	@%p445 bra 	BB5_782;
	bra.uni 	BB5_702;

BB5_782:
	mov.u32 	%r16285, 0;
	// inline asm
	prmt.b32 %r16288, %r16285, %r66, %r848;
	// inline asm
	ld.local.v2.u32 	{%r15272, %r15273}, [%rd8+8];
	// inline asm
	prmt.b32 %r15113, %r15273, %r15272, %r848;
	// inline asm
	st.local.u32 	[%rd8+12], %r15113;
	ld.local.u32 	%r15118, [%rd8+8];
	ld.local.u32 	%r15119, [%rd8+4];
	// inline asm
	prmt.b32 %r15117, %r15118, %r15119, %r848;
	// inline asm
	st.local.u32 	[%rd8+8], %r15117;
	ld.local.v2.u32 	{%r15274, %r15275}, [%rd8];
	// inline asm
	prmt.b32 %r15121, %r15275, %r15274, %r848;
	// inline asm
	st.local.u32 	[%rd8+4], %r15121;
	ld.local.u32 	%r15126, [%rd8];
	ld.local.u32 	%r15127, [%rd7+12];
	// inline asm
	prmt.b32 %r15125, %r15126, %r15127, %r848;
	// inline asm
	st.local.u32 	[%rd8], %r15125;
	ld.local.v2.u32 	{%r15276, %r15277}, [%rd7+8];
	// inline asm
	prmt.b32 %r15129, %r15277, %r15276, %r848;
	// inline asm
	st.local.u32 	[%rd7+12], %r15129;
	ld.local.u32 	%r15134, [%rd7+8];
	ld.local.u32 	%r15135, [%rd7+4];
	// inline asm
	prmt.b32 %r15133, %r15134, %r15135, %r848;
	// inline asm
	st.local.u32 	[%rd7+8], %r15133;
	ld.local.v2.u32 	{%r15278, %r15279}, [%rd7];
	// inline asm
	prmt.b32 %r15137, %r15279, %r15278, %r848;
	// inline asm
	st.local.u32 	[%rd7+4], %r15137;
	ld.local.u32 	%r15142, [%rd7];
	ld.local.u32 	%r15143, [%rd6+12];
	// inline asm
	prmt.b32 %r15141, %r15142, %r15143, %r848;
	// inline asm
	st.local.u32 	[%rd7], %r15141;
	ld.local.v2.u32 	{%r15280, %r15281}, [%rd6+8];
	// inline asm
	prmt.b32 %r15145, %r15281, %r15280, %r848;
	// inline asm
	st.local.u32 	[%rd6+12], %r15145;
	ld.local.u32 	%r15150, [%rd6+8];
	ld.local.u32 	%r15151, [%rd6+4];
	// inline asm
	prmt.b32 %r15149, %r15150, %r15151, %r848;
	// inline asm
	st.local.u32 	[%rd6+8], %r15149;
	ld.local.v2.u32 	{%r15282, %r15283}, [%rd6];
	// inline asm
	prmt.b32 %r15153, %r15283, %r15282, %r848;
	// inline asm
	st.local.u32 	[%rd6+4], %r15153;
	ld.local.u32 	%r15158, [%rd6];
	ld.local.u32 	%r15159, [%rd5+12];
	// inline asm
	prmt.b32 %r15157, %r15158, %r15159, %r848;
	// inline asm
	st.local.u32 	[%rd6], %r15157;
	ld.local.v2.u32 	{%r15284, %r15285}, [%rd5+8];
	// inline asm
	prmt.b32 %r15161, %r15285, %r15284, %r848;
	// inline asm
	st.local.u32 	[%rd5+12], %r15161;
	ld.local.u32 	%r15166, [%rd5+8];
	ld.local.u32 	%r15167, [%rd5+4];
	// inline asm
	prmt.b32 %r15165, %r15166, %r15167, %r848;
	// inline asm
	st.local.u32 	[%rd5+8], %r15165;
	ld.local.v2.u32 	{%r15286, %r15287}, [%rd5];
	// inline asm
	prmt.b32 %r15169, %r15287, %r15286, %r848;
	// inline asm
	st.local.u32 	[%rd5+4], %r15169;
	ld.local.u32 	%r15174, [%rd5];
	ld.local.u32 	%r15175, [%rd4+12];
	// inline asm
	prmt.b32 %r15173, %r15174, %r15175, %r848;
	// inline asm
	st.local.u32 	[%rd5], %r15173;
	ld.local.v2.u32 	{%r15288, %r15289}, [%rd4+8];
	// inline asm
	prmt.b32 %r15177, %r15289, %r15288, %r848;
	// inline asm
	st.local.u32 	[%rd4+12], %r15177;
	ld.local.u32 	%r15182, [%rd4+8];
	ld.local.u32 	%r15183, [%rd4+4];
	// inline asm
	prmt.b32 %r15181, %r15182, %r15183, %r848;
	// inline asm
	st.local.u32 	[%rd4+8], %r15181;
	ld.local.v2.u32 	{%r15290, %r15291}, [%rd4];
	// inline asm
	prmt.b32 %r15185, %r15291, %r15290, %r848;
	// inline asm
	st.local.u32 	[%rd4+4], %r15185;
	ld.local.u32 	%r15190, [%rd4];
	ld.local.u32 	%r15191, [%rd3+12];
	// inline asm
	prmt.b32 %r15189, %r15190, %r15191, %r848;
	// inline asm
	st.local.u32 	[%rd4], %r15189;
	ld.local.v2.u32 	{%r15292, %r15293}, [%rd3+8];
	// inline asm
	prmt.b32 %r15193, %r15293, %r15292, %r848;
	// inline asm
	st.local.u32 	[%rd3+12], %r15193;
	ld.local.u32 	%r15198, [%rd3+8];
	ld.local.u32 	%r15199, [%rd3+4];
	// inline asm
	prmt.b32 %r15197, %r15198, %r15199, %r848;
	// inline asm
	st.local.u32 	[%rd3+8], %r15197;
	ld.local.v2.u32 	{%r15294, %r15295}, [%rd3];
	// inline asm
	prmt.b32 %r15201, %r15295, %r15294, %r848;
	// inline asm
	st.local.u32 	[%rd3+4], %r15201;
	ld.local.u32 	%r15206, [%rd3];
	ld.local.u32 	%r15207, [%rd2+12];
	// inline asm
	prmt.b32 %r15205, %r15206, %r15207, %r848;
	// inline asm
	st.local.u32 	[%rd3], %r15205;
	ld.local.v2.u32 	{%r15296, %r15297}, [%rd2+8];
	// inline asm
	prmt.b32 %r15209, %r15297, %r15296, %r848;
	// inline asm
	st.local.u32 	[%rd2+12], %r15209;
	ld.local.u32 	%r15214, [%rd2+8];
	ld.local.u32 	%r15215, [%rd2+4];
	// inline asm
	prmt.b32 %r15213, %r15214, %r15215, %r848;
	// inline asm
	st.local.u32 	[%rd2+8], %r15213;
	ld.local.v2.u32 	{%r15298, %r15299}, [%rd2];
	// inline asm
	prmt.b32 %r15217, %r15299, %r15298, %r848;
	// inline asm
	st.local.u32 	[%rd2+4], %r15217;
	ld.local.u32 	%r15222, [%rd2];
	ld.local.u32 	%r15223, [%rd1+12];
	// inline asm
	prmt.b32 %r15221, %r15222, %r15223, %r848;
	// inline asm
	st.local.u32 	[%rd2], %r15221;
	ld.local.v2.u32 	{%r15300, %r15301}, [%rd1+8];
	// inline asm
	prmt.b32 %r15225, %r15301, %r15300, %r848;
	// inline asm
	st.local.u32 	[%rd1+12], %r15225;
	ld.local.u32 	%r15230, [%rd1+8];
	ld.local.u32 	%r15231, [%rd1+4];
	// inline asm
	prmt.b32 %r15229, %r15230, %r15231, %r848;
	// inline asm
	st.local.u32 	[%rd1+8], %r15229;
	ld.local.v2.u32 	{%r15302, %r15303}, [%rd1];
	// inline asm
	prmt.b32 %r15233, %r15303, %r15302, %r848;
	// inline asm
	st.local.u32 	[%rd1+4], %r15233;
	ld.local.u32 	%r15238, [%rd1];
	// inline asm
	prmt.b32 %r16284, %r15238, %r16285, %r848;
	// inline asm
	st.local.u32 	[%rd1], %r16284;
	ld.local.u32 	%r16283, [%rd1+4];
	mov.u32 	%r16286, %r16285;
	mov.u32 	%r16287, %r16285;
	mov.u32 	%r16289, %r16285;
	mov.u32 	%r16290, %r16285;
	mov.u32 	%r16291, %r16285;
	mov.u32 	%r16292, %r16285;
	mov.u32 	%r16293, %r16285;
	mov.u32 	%r16294, %r16285;
	mov.u32 	%r16295, %r16285;
	mov.u32 	%r16296, %r16285;
	mov.u32 	%r16297, %r16285;
	mov.u32 	%r16298, %r16285;
	mov.u32 	%r16299, %r16285;
	mov.u32 	%r16300, %r16285;
	mov.u32 	%r16301, %r16285;
	mov.u32 	%r16302, %r16285;
	mov.u32 	%r16303, %r16285;
	mov.u32 	%r16304, %r16285;
	mov.u32 	%r16305, %r16285;
	mov.u32 	%r16306, %r16285;
	mov.u32 	%r16307, %r16285;
	mov.u32 	%r16308, %r16285;
	mov.u32 	%r16309, %r16285;
	mov.u32 	%r16310, %r16285;
	mov.u32 	%r16311, %r16285;
	mov.u32 	%r16312, %r16285;
	mov.u32 	%r16313, %r16285;
	mov.u32 	%r16314, %r16285;
	mov.u32 	%r16315, %r16285;
	mov.u32 	%r16316, %r16285;
	bra.uni 	BB5_783;

BB5_730:
	setp.gt.s32	%p401, %r9492, 23;
	@%p401 bra 	BB5_746;

	setp.gt.s32	%p413, %r9492, 19;
	@%p413 bra 	BB5_739;

	setp.gt.s32	%p419, %r9492, 17;
	@%p419 bra 	BB5_736;

	setp.eq.s32	%p422, %r9492, 16;
	@%p422 bra 	BB5_768;
	bra.uni 	BB5_734;

BB5_768:
	mov.u32 	%r16283, 0;
	// inline asm
	prmt.b32 %r16304, %r16283, %r66, %r848;
	// inline asm
	ld.local.v2.u32 	{%r12243, %r12244}, [%rd8+8];
	// inline asm
	prmt.b32 %r16297, %r12244, %r12243, %r848;
	// inline asm
	ld.local.u32 	%r12103, [%rd8+8];
	ld.local.u32 	%r12104, [%rd8+4];
	// inline asm
	prmt.b32 %r16298, %r12103, %r12104, %r848;
	// inline asm
	ld.local.v2.u32 	{%r12245, %r12246}, [%rd8];
	// inline asm
	prmt.b32 %r16299, %r12246, %r12245, %r848;
	// inline asm
	ld.local.u32 	%r12111, [%rd8];
	ld.local.u32 	%r12112, [%rd7+12];
	// inline asm
	prmt.b32 %r16300, %r12111, %r12112, %r848;
	// inline asm
	ld.local.v2.u32 	{%r12247, %r12248}, [%rd7+8];
	// inline asm
	prmt.b32 %r16293, %r12248, %r12247, %r848;
	// inline asm
	ld.local.u32 	%r12119, [%rd7+8];
	ld.local.u32 	%r12120, [%rd7+4];
	// inline asm
	prmt.b32 %r16294, %r12119, %r12120, %r848;
	// inline asm
	ld.local.v2.u32 	{%r12249, %r12250}, [%rd7];
	// inline asm
	prmt.b32 %r16295, %r12250, %r12249, %r848;
	// inline asm
	ld.local.u32 	%r12127, [%rd7];
	ld.local.u32 	%r12128, [%rd6+12];
	// inline asm
	prmt.b32 %r16296, %r12127, %r12128, %r848;
	// inline asm
	ld.local.v2.u32 	{%r12251, %r12252}, [%rd6+8];
	// inline asm
	prmt.b32 %r16289, %r12252, %r12251, %r848;
	// inline asm
	ld.local.u32 	%r12135, [%rd6+8];
	ld.local.u32 	%r12136, [%rd6+4];
	// inline asm
	prmt.b32 %r16290, %r12135, %r12136, %r848;
	// inline asm
	ld.local.v2.u32 	{%r12253, %r12254}, [%rd6];
	// inline asm
	prmt.b32 %r16291, %r12254, %r12253, %r848;
	// inline asm
	ld.local.u32 	%r12143, [%rd6];
	ld.local.u32 	%r12144, [%rd5+12];
	// inline asm
	prmt.b32 %r16292, %r12143, %r12144, %r848;
	// inline asm
	ld.local.v2.u32 	{%r12255, %r12256}, [%rd5+8];
	// inline asm
	prmt.b32 %r16285, %r12256, %r12255, %r848;
	// inline asm
	ld.local.u32 	%r12151, [%rd5+8];
	ld.local.u32 	%r12152, [%rd5+4];
	// inline asm
	prmt.b32 %r16286, %r12151, %r12152, %r848;
	// inline asm
	ld.local.v2.u32 	{%r12257, %r12258}, [%rd5];
	// inline asm
	prmt.b32 %r16287, %r12258, %r12257, %r848;
	// inline asm
	ld.local.u32 	%r12159, [%rd5];
	ld.local.u32 	%r12160, [%rd4+12];
	// inline asm
	prmt.b32 %r16288, %r12159, %r12160, %r848;
	// inline asm
	ld.local.v2.u32 	{%r12259, %r12260}, [%rd4+8];
	// inline asm
	prmt.b32 %r12162, %r12260, %r12259, %r848;
	// inline asm
	st.local.u32 	[%rd8+12], %r12162;
	ld.local.u32 	%r12167, [%rd4+8];
	ld.local.u32 	%r12168, [%rd4+4];
	// inline asm
	prmt.b32 %r12166, %r12167, %r12168, %r848;
	// inline asm
	st.local.u32 	[%rd8+8], %r12166;
	ld.local.v2.u32 	{%r12261, %r12262}, [%rd4];
	// inline asm
	prmt.b32 %r12170, %r12262, %r12261, %r848;
	// inline asm
	st.local.u32 	[%rd8+4], %r12170;
	ld.local.u32 	%r12175, [%rd4];
	ld.local.u32 	%r12176, [%rd3+12];
	// inline asm
	prmt.b32 %r12174, %r12175, %r12176, %r848;
	// inline asm
	st.local.u32 	[%rd8], %r12174;
	ld.local.v2.u32 	{%r12263, %r12264}, [%rd3+8];
	// inline asm
	prmt.b32 %r12178, %r12264, %r12263, %r848;
	// inline asm
	st.local.u32 	[%rd7+12], %r12178;
	ld.local.u32 	%r12183, [%rd3+8];
	ld.local.u32 	%r12184, [%rd3+4];
	// inline asm
	prmt.b32 %r12182, %r12183, %r12184, %r848;
	// inline asm
	st.local.u32 	[%rd7+8], %r12182;
	ld.local.v2.u32 	{%r12265, %r12266}, [%rd3];
	// inline asm
	prmt.b32 %r12186, %r12266, %r12265, %r848;
	// inline asm
	st.local.u32 	[%rd7+4], %r12186;
	ld.local.u32 	%r12191, [%rd3];
	ld.local.u32 	%r12192, [%rd2+12];
	// inline asm
	prmt.b32 %r12190, %r12191, %r12192, %r848;
	// inline asm
	st.local.u32 	[%rd7], %r12190;
	ld.local.v2.u32 	{%r12267, %r12268}, [%rd2+8];
	// inline asm
	prmt.b32 %r12194, %r12268, %r12267, %r848;
	// inline asm
	st.local.u32 	[%rd6+12], %r12194;
	ld.local.u32 	%r12199, [%rd2+8];
	ld.local.u32 	%r12200, [%rd2+4];
	// inline asm
	prmt.b32 %r12198, %r12199, %r12200, %r848;
	// inline asm
	st.local.u32 	[%rd6+8], %r12198;
	ld.local.v2.u32 	{%r12269, %r12270}, [%rd2];
	// inline asm
	prmt.b32 %r12202, %r12270, %r12269, %r848;
	// inline asm
	st.local.u32 	[%rd6+4], %r12202;
	ld.local.u32 	%r12207, [%rd2];
	ld.local.u32 	%r12208, [%rd1+12];
	// inline asm
	prmt.b32 %r12206, %r12207, %r12208, %r848;
	// inline asm
	st.local.u32 	[%rd6], %r12206;
	ld.local.v2.u32 	{%r12271, %r12272}, [%rd1+8];
	// inline asm
	prmt.b32 %r12210, %r12272, %r12271, %r848;
	// inline asm
	st.local.u32 	[%rd5+12], %r12210;
	ld.local.u32 	%r12215, [%rd1+8];
	ld.local.u32 	%r12216, [%rd1+4];
	// inline asm
	prmt.b32 %r12214, %r12215, %r12216, %r848;
	// inline asm
	st.local.u32 	[%rd5+8], %r12214;
	ld.local.v2.u32 	{%r12273, %r12274}, [%rd1];
	// inline asm
	prmt.b32 %r12218, %r12274, %r12273, %r848;
	// inline asm
	st.local.u32 	[%rd5+4], %r12218;
	ld.local.u32 	%r12223, [%rd1];
	// inline asm
	prmt.b32 %r12222, %r12223, %r16283, %r848;
	// inline asm
	st.local.u32 	[%rd5], %r12222;
	st.local.v4.u32 	[%rd4], {%r16283, %r16283, %r16283, %r16283};
	st.local.v4.u32 	[%rd3], {%r16283, %r16283, %r16283, %r16283};
	st.local.v4.u32 	[%rd2], {%r16283, %r16283, %r16283, %r16283};
	st.local.v2.u32 	[%rd1+8], {%r16283, %r16283};
	mov.u64 	%rd1963, 0;
	st.local.u64 	[%rd1], %rd1963;
	mov.u32 	%r16284, %r16283;
	mov.u32 	%r16301, %r16283;
	mov.u32 	%r16302, %r16283;
	mov.u32 	%r16303, %r16283;
	bra.uni 	BB5_778;

BB5_715:
	setp.gt.s32	%p425, %r9492, 11;
	@%p425 bra 	BB5_723;

	setp.gt.s32	%p431, %r9492, 9;
	@%p431 bra 	BB5_720;

	setp.eq.s32	%p434, %r9492, 8;
	@%p434 bra 	BB5_772;
	bra.uni 	BB5_718;

BB5_772:
	mov.u32 	%r16283, 0;
	// inline asm
	prmt.b32 %r16296, %r16283, %r66, %r848;
	// inline asm
	ld.local.v2.u32 	{%r13727, %r13728}, [%rd8+8];
	// inline asm
	prmt.b32 %r16289, %r13728, %r13727, %r848;
	// inline asm
	ld.local.u32 	%r13579, [%rd8+8];
	ld.local.u32 	%r13580, [%rd8+4];
	// inline asm
	prmt.b32 %r16290, %r13579, %r13580, %r848;
	// inline asm
	ld.local.v2.u32 	{%r13729, %r13730}, [%rd8];
	// inline asm
	prmt.b32 %r16291, %r13730, %r13729, %r848;
	// inline asm
	ld.local.u32 	%r13587, [%rd8];
	ld.local.u32 	%r13588, [%rd7+12];
	// inline asm
	prmt.b32 %r16292, %r13587, %r13588, %r848;
	// inline asm
	ld.local.v2.u32 	{%r13731, %r13732}, [%rd7+8];
	// inline asm
	prmt.b32 %r16285, %r13732, %r13731, %r848;
	// inline asm
	ld.local.u32 	%r13595, [%rd7+8];
	ld.local.u32 	%r13596, [%rd7+4];
	// inline asm
	prmt.b32 %r16286, %r13595, %r13596, %r848;
	// inline asm
	ld.local.v2.u32 	{%r13733, %r13734}, [%rd7];
	// inline asm
	prmt.b32 %r16287, %r13734, %r13733, %r848;
	// inline asm
	ld.local.u32 	%r13603, [%rd7];
	ld.local.u32 	%r13604, [%rd6+12];
	// inline asm
	prmt.b32 %r16288, %r13603, %r13604, %r848;
	// inline asm
	ld.local.v2.u32 	{%r13735, %r13736}, [%rd6+8];
	// inline asm
	prmt.b32 %r13606, %r13736, %r13735, %r848;
	// inline asm
	st.local.u32 	[%rd8+12], %r13606;
	ld.local.u32 	%r13611, [%rd6+8];
	ld.local.u32 	%r13612, [%rd6+4];
	// inline asm
	prmt.b32 %r13610, %r13611, %r13612, %r848;
	// inline asm
	st.local.u32 	[%rd8+8], %r13610;
	ld.local.v2.u32 	{%r13737, %r13738}, [%rd6];
	// inline asm
	prmt.b32 %r13614, %r13738, %r13737, %r848;
	// inline asm
	st.local.u32 	[%rd8+4], %r13614;
	ld.local.u32 	%r13619, [%rd6];
	ld.local.u32 	%r13620, [%rd5+12];
	// inline asm
	prmt.b32 %r13618, %r13619, %r13620, %r848;
	// inline asm
	st.local.u32 	[%rd8], %r13618;
	ld.local.v2.u32 	{%r13739, %r13740}, [%rd5+8];
	// inline asm
	prmt.b32 %r13622, %r13740, %r13739, %r848;
	// inline asm
	st.local.u32 	[%rd7+12], %r13622;
	ld.local.u32 	%r13627, [%rd5+8];
	ld.local.u32 	%r13628, [%rd5+4];
	// inline asm
	prmt.b32 %r13626, %r13627, %r13628, %r848;
	// inline asm
	st.local.u32 	[%rd7+8], %r13626;
	ld.local.v2.u32 	{%r13741, %r13742}, [%rd5];
	// inline asm
	prmt.b32 %r13630, %r13742, %r13741, %r848;
	// inline asm
	st.local.u32 	[%rd7+4], %r13630;
	ld.local.u32 	%r13635, [%rd5];
	ld.local.u32 	%r13636, [%rd4+12];
	// inline asm
	prmt.b32 %r13634, %r13635, %r13636, %r848;
	// inline asm
	st.local.u32 	[%rd7], %r13634;
	ld.local.v2.u32 	{%r13743, %r13744}, [%rd4+8];
	// inline asm
	prmt.b32 %r13638, %r13744, %r13743, %r848;
	// inline asm
	st.local.u32 	[%rd6+12], %r13638;
	ld.local.u32 	%r13643, [%rd4+8];
	ld.local.u32 	%r13644, [%rd4+4];
	// inline asm
	prmt.b32 %r13642, %r13643, %r13644, %r848;
	// inline asm
	st.local.u32 	[%rd6+8], %r13642;
	ld.local.v2.u32 	{%r13745, %r13746}, [%rd4];
	// inline asm
	prmt.b32 %r13646, %r13746, %r13745, %r848;
	// inline asm
	st.local.u32 	[%rd6+4], %r13646;
	ld.local.u32 	%r13651, [%rd4];
	ld.local.u32 	%r13652, [%rd3+12];
	// inline asm
	prmt.b32 %r13650, %r13651, %r13652, %r848;
	// inline asm
	st.local.u32 	[%rd6], %r13650;
	ld.local.v2.u32 	{%r13747, %r13748}, [%rd3+8];
	// inline asm
	prmt.b32 %r13654, %r13748, %r13747, %r848;
	// inline asm
	st.local.u32 	[%rd5+12], %r13654;
	ld.local.u32 	%r13659, [%rd3+8];
	ld.local.u32 	%r13660, [%rd3+4];
	// inline asm
	prmt.b32 %r13658, %r13659, %r13660, %r848;
	// inline asm
	st.local.u32 	[%rd5+8], %r13658;
	ld.local.v2.u32 	{%r13749, %r13750}, [%rd3];
	// inline asm
	prmt.b32 %r13662, %r13750, %r13749, %r848;
	// inline asm
	st.local.u32 	[%rd5+4], %r13662;
	ld.local.u32 	%r13667, [%rd3];
	ld.local.u32 	%r13668, [%rd2+12];
	// inline asm
	prmt.b32 %r13666, %r13667, %r13668, %r848;
	// inline asm
	st.local.u32 	[%rd5], %r13666;
	ld.local.v2.u32 	{%r13751, %r13752}, [%rd2+8];
	// inline asm
	prmt.b32 %r13670, %r13752, %r13751, %r848;
	// inline asm
	st.local.u32 	[%rd4+12], %r13670;
	ld.local.u32 	%r13675, [%rd2+8];
	ld.local.u32 	%r13676, [%rd2+4];
	// inline asm
	prmt.b32 %r13674, %r13675, %r13676, %r848;
	// inline asm
	st.local.u32 	[%rd4+8], %r13674;
	ld.local.v2.u32 	{%r13753, %r13754}, [%rd2];
	// inline asm
	prmt.b32 %r13678, %r13754, %r13753, %r848;
	// inline asm
	st.local.u32 	[%rd4+4], %r13678;
	ld.local.u32 	%r13683, [%rd2];
	ld.local.u32 	%r13684, [%rd1+12];
	// inline asm
	prmt.b32 %r13682, %r13683, %r13684, %r848;
	// inline asm
	st.local.u32 	[%rd4], %r13682;
	ld.local.v2.u32 	{%r13755, %r13756}, [%rd1+8];
	// inline asm
	prmt.b32 %r13686, %r13756, %r13755, %r848;
	// inline asm
	st.local.u32 	[%rd3+12], %r13686;
	ld.local.u32 	%r13691, [%rd1+8];
	ld.local.u32 	%r13692, [%rd1+4];
	// inline asm
	prmt.b32 %r13690, %r13691, %r13692, %r848;
	// inline asm
	st.local.u32 	[%rd3+8], %r13690;
	ld.local.v2.u32 	{%r13757, %r13758}, [%rd1];
	// inline asm
	prmt.b32 %r13694, %r13758, %r13757, %r848;
	// inline asm
	st.local.u32 	[%rd3+4], %r13694;
	ld.local.u32 	%r13699, [%rd1];
	// inline asm
	prmt.b32 %r13698, %r13699, %r16283, %r848;
	// inline asm
	st.local.u32 	[%rd3], %r13698;
	st.local.v4.u32 	[%rd2], {%r16283, %r16283, %r16283, %r16283};
	st.local.v2.u32 	[%rd1+8], {%r16283, %r16283};
	mov.u64 	%rd1971, 0;
	st.local.u64 	[%rd1], %rd1971;
	mov.u32 	%r16284, %r16283;
	mov.u32 	%r16293, %r16283;
	mov.u32 	%r16294, %r16283;
	mov.u32 	%r16295, %r16283;
	bra.uni 	BB5_776;

BB5_746:
	setp.gt.s32	%p402, %r9492, 27;
	@%p402 bra 	BB5_754;

	setp.gt.s32	%p408, %r9492, 25;
	@%p408 bra 	BB5_751;

	setp.eq.s32	%p411, %r9492, 24;
	@%p411 bra 	BB5_764;
	bra.uni 	BB5_749;

BB5_764:
	mov.u32 	%r16283, 0;
	// inline asm
	prmt.b32 %r16312, %r16283, %r66, %r848;
	// inline asm
	ld.local.v2.u32 	{%r10823, %r10824}, [%rd8+8];
	// inline asm
	prmt.b32 %r16305, %r10824, %r10823, %r848;
	// inline asm
	ld.local.u32 	%r10691, [%rd8+8];
	ld.local.u32 	%r10692, [%rd8+4];
	// inline asm
	prmt.b32 %r16306, %r10691, %r10692, %r848;
	// inline asm
	ld.local.v2.u32 	{%r10825, %r10826}, [%rd8];
	// inline asm
	prmt.b32 %r16307, %r10826, %r10825, %r848;
	// inline asm
	ld.local.u32 	%r10699, [%rd8];
	ld.local.u32 	%r10700, [%rd7+12];
	// inline asm
	prmt.b32 %r16308, %r10699, %r10700, %r848;
	// inline asm
	ld.local.v2.u32 	{%r10827, %r10828}, [%rd7+8];
	// inline asm
	prmt.b32 %r16301, %r10828, %r10827, %r848;
	// inline asm
	ld.local.u32 	%r10707, [%rd7+8];
	ld.local.u32 	%r10708, [%rd7+4];
	// inline asm
	prmt.b32 %r16302, %r10707, %r10708, %r848;
	// inline asm
	ld.local.v2.u32 	{%r10829, %r10830}, [%rd7];
	// inline asm
	prmt.b32 %r16303, %r10830, %r10829, %r848;
	// inline asm
	ld.local.u32 	%r10715, [%rd7];
	ld.local.u32 	%r10716, [%rd6+12];
	// inline asm
	prmt.b32 %r16304, %r10715, %r10716, %r848;
	// inline asm
	ld.local.v2.u32 	{%r10831, %r10832}, [%rd6+8];
	// inline asm
	prmt.b32 %r16297, %r10832, %r10831, %r848;
	// inline asm
	ld.local.u32 	%r10723, [%rd6+8];
	ld.local.u32 	%r10724, [%rd6+4];
	// inline asm
	prmt.b32 %r16298, %r10723, %r10724, %r848;
	// inline asm
	ld.local.v2.u32 	{%r10833, %r10834}, [%rd6];
	// inline asm
	prmt.b32 %r16299, %r10834, %r10833, %r848;
	// inline asm
	ld.local.u32 	%r10731, [%rd6];
	ld.local.u32 	%r10732, [%rd5+12];
	// inline asm
	prmt.b32 %r16300, %r10731, %r10732, %r848;
	// inline asm
	ld.local.v2.u32 	{%r10835, %r10836}, [%rd5+8];
	// inline asm
	prmt.b32 %r16293, %r10836, %r10835, %r848;
	// inline asm
	ld.local.u32 	%r10739, [%rd5+8];
	ld.local.u32 	%r10740, [%rd5+4];
	// inline asm
	prmt.b32 %r16294, %r10739, %r10740, %r848;
	// inline asm
	ld.local.v2.u32 	{%r10837, %r10838}, [%rd5];
	// inline asm
	prmt.b32 %r16295, %r10838, %r10837, %r848;
	// inline asm
	ld.local.u32 	%r10747, [%rd5];
	ld.local.u32 	%r10748, [%rd4+12];
	// inline asm
	prmt.b32 %r16296, %r10747, %r10748, %r848;
	// inline asm
	ld.local.v2.u32 	{%r10839, %r10840}, [%rd4+8];
	// inline asm
	prmt.b32 %r16289, %r10840, %r10839, %r848;
	// inline asm
	ld.local.u32 	%r10755, [%rd4+8];
	ld.local.u32 	%r10756, [%rd4+4];
	// inline asm
	prmt.b32 %r16290, %r10755, %r10756, %r848;
	// inline asm
	ld.local.v2.u32 	{%r10841, %r10842}, [%rd4];
	// inline asm
	prmt.b32 %r16291, %r10842, %r10841, %r848;
	// inline asm
	ld.local.u32 	%r10763, [%rd4];
	ld.local.u32 	%r10764, [%rd3+12];
	// inline asm
	prmt.b32 %r16292, %r10763, %r10764, %r848;
	// inline asm
	ld.local.v2.u32 	{%r10843, %r10844}, [%rd3+8];
	// inline asm
	prmt.b32 %r16285, %r10844, %r10843, %r848;
	// inline asm
	ld.local.u32 	%r10771, [%rd3+8];
	ld.local.u32 	%r10772, [%rd3+4];
	// inline asm
	prmt.b32 %r16286, %r10771, %r10772, %r848;
	// inline asm
	ld.local.v2.u32 	{%r10845, %r10846}, [%rd3];
	// inline asm
	prmt.b32 %r16287, %r10846, %r10845, %r848;
	// inline asm
	ld.local.u32 	%r10779, [%rd3];
	ld.local.u32 	%r10780, [%rd2+12];
	// inline asm
	prmt.b32 %r16288, %r10779, %r10780, %r848;
	// inline asm
	ld.local.v2.u32 	{%r10847, %r10848}, [%rd2+8];
	// inline asm
	prmt.b32 %r10782, %r10848, %r10847, %r848;
	// inline asm
	st.local.u32 	[%rd8+12], %r10782;
	ld.local.u32 	%r10787, [%rd2+8];
	ld.local.u32 	%r10788, [%rd2+4];
	// inline asm
	prmt.b32 %r10786, %r10787, %r10788, %r848;
	// inline asm
	st.local.u32 	[%rd8+8], %r10786;
	ld.local.v2.u32 	{%r10849, %r10850}, [%rd2];
	// inline asm
	prmt.b32 %r10790, %r10850, %r10849, %r848;
	// inline asm
	st.local.u32 	[%rd8+4], %r10790;
	ld.local.u32 	%r10795, [%rd2];
	ld.local.u32 	%r10796, [%rd1+12];
	// inline asm
	prmt.b32 %r10794, %r10795, %r10796, %r848;
	// inline asm
	st.local.u32 	[%rd8], %r10794;
	ld.local.v2.u32 	{%r10851, %r10852}, [%rd1+8];
	// inline asm
	prmt.b32 %r10798, %r10852, %r10851, %r848;
	// inline asm
	st.local.u32 	[%rd7+12], %r10798;
	ld.local.u32 	%r10803, [%rd1+8];
	ld.local.u32 	%r10804, [%rd1+4];
	// inline asm
	prmt.b32 %r10802, %r10803, %r10804, %r848;
	// inline asm
	st.local.u32 	[%rd7+8], %r10802;
	ld.local.v2.u32 	{%r10853, %r10854}, [%rd1];
	// inline asm
	prmt.b32 %r10806, %r10854, %r10853, %r848;
	// inline asm
	st.local.u32 	[%rd7+4], %r10806;
	ld.local.u32 	%r10811, [%rd1];
	// inline asm
	prmt.b32 %r10810, %r10811, %r16283, %r848;
	// inline asm
	st.local.u32 	[%rd7], %r10810;
	st.local.v4.u32 	[%rd6], {%r16283, %r16283, %r16283, %r16283};
	st.local.v4.u32 	[%rd5], {%r16283, %r16283, %r16283, %r16283};
	st.local.v4.u32 	[%rd4], {%r16283, %r16283, %r16283, %r16283};
	st.local.v4.u32 	[%rd3], {%r16283, %r16283, %r16283, %r16283};
	st.local.v4.u32 	[%rd2], {%r16283, %r16283, %r16283, %r16283};
	st.local.v2.u32 	[%rd1+8], {%r16283, %r16283};
	mov.u64 	%rd1955, 0;
	st.local.u64 	[%rd1], %rd1955;
	mov.u32 	%r16284, %r16283;
	mov.u32 	%r16309, %r16283;
	mov.u32 	%r16310, %r16283;
	mov.u32 	%r16311, %r16283;
	bra.uni 	BB5_780;

BB5_708:
	setp.gt.s32	%p437, %r9492, 5;
	@%p437 bra 	BB5_712;

	setp.eq.s32	%p440, %r9492, 4;
	@%p440 bra 	BB5_774;
	bra.uni 	BB5_710;

BB5_774:
	mov.u32 	%r16283, 0;
	// inline asm
	prmt.b32 %r16292, %r16283, %r66, %r848;
	// inline asm
	ld.local.v2.u32 	{%r14493, %r14494}, [%rd8+8];
	// inline asm
	prmt.b32 %r16285, %r14494, %r14493, %r848;
	// inline asm
	ld.local.u32 	%r14341, [%rd8+8];
	ld.local.u32 	%r14342, [%rd8+4];
	// inline asm
	prmt.b32 %r16286, %r14341, %r14342, %r848;
	// inline asm
	ld.local.v2.u32 	{%r14495, %r14496}, [%rd8];
	// inline asm
	prmt.b32 %r16287, %r14496, %r14495, %r848;
	// inline asm
	ld.local.u32 	%r14349, [%rd8];
	ld.local.u32 	%r14350, [%rd7+12];
	// inline asm
	prmt.b32 %r16288, %r14349, %r14350, %r848;
	// inline asm
	ld.local.v2.u32 	{%r14497, %r14498}, [%rd7+8];
	// inline asm
	prmt.b32 %r14352, %r14498, %r14497, %r848;
	// inline asm
	st.local.u32 	[%rd8+12], %r14352;
	ld.local.u32 	%r14357, [%rd7+8];
	ld.local.u32 	%r14358, [%rd7+4];
	// inline asm
	prmt.b32 %r14356, %r14357, %r14358, %r848;
	// inline asm
	st.local.u32 	[%rd8+8], %r14356;
	ld.local.v2.u32 	{%r14499, %r14500}, [%rd7];
	// inline asm
	prmt.b32 %r14360, %r14500, %r14499, %r848;
	// inline asm
	st.local.u32 	[%rd8+4], %r14360;
	ld.local.u32 	%r14365, [%rd7];
	ld.local.u32 	%r14366, [%rd6+12];
	// inline asm
	prmt.b32 %r14364, %r14365, %r14366, %r848;
	// inline asm
	st.local.u32 	[%rd8], %r14364;
	ld.local.v2.u32 	{%r14501, %r14502}, [%rd6+8];
	// inline asm
	prmt.b32 %r14368, %r14502, %r14501, %r848;
	// inline asm
	st.local.u32 	[%rd7+12], %r14368;
	ld.local.u32 	%r14373, [%rd6+8];
	ld.local.u32 	%r14374, [%rd6+4];
	// inline asm
	prmt.b32 %r14372, %r14373, %r14374, %r848;
	// inline asm
	st.local.u32 	[%rd7+8], %r14372;
	ld.local.v2.u32 	{%r14503, %r14504}, [%rd6];
	// inline asm
	prmt.b32 %r14376, %r14504, %r14503, %r848;
	// inline asm
	st.local.u32 	[%rd7+4], %r14376;
	ld.local.u32 	%r14381, [%rd6];
	ld.local.u32 	%r14382, [%rd5+12];
	// inline asm
	prmt.b32 %r14380, %r14381, %r14382, %r848;
	// inline asm
	st.local.u32 	[%rd7], %r14380;
	ld.local.v2.u32 	{%r14505, %r14506}, [%rd5+8];
	// inline asm
	prmt.b32 %r14384, %r14506, %r14505, %r848;
	// inline asm
	st.local.u32 	[%rd6+12], %r14384;
	ld.local.u32 	%r14389, [%rd5+8];
	ld.local.u32 	%r14390, [%rd5+4];
	// inline asm
	prmt.b32 %r14388, %r14389, %r14390, %r848;
	// inline asm
	st.local.u32 	[%rd6+8], %r14388;
	ld.local.v2.u32 	{%r14507, %r14508}, [%rd5];
	// inline asm
	prmt.b32 %r14392, %r14508, %r14507, %r848;
	// inline asm
	st.local.u32 	[%rd6+4], %r14392;
	ld.local.u32 	%r14397, [%rd5];
	ld.local.u32 	%r14398, [%rd4+12];
	// inline asm
	prmt.b32 %r14396, %r14397, %r14398, %r848;
	// inline asm
	st.local.u32 	[%rd6], %r14396;
	ld.local.v2.u32 	{%r14509, %r14510}, [%rd4+8];
	// inline asm
	prmt.b32 %r14400, %r14510, %r14509, %r848;
	// inline asm
	st.local.u32 	[%rd5+12], %r14400;
	ld.local.u32 	%r14405, [%rd4+8];
	ld.local.u32 	%r14406, [%rd4+4];
	// inline asm
	prmt.b32 %r14404, %r14405, %r14406, %r848;
	// inline asm
	st.local.u32 	[%rd5+8], %r14404;
	ld.local.v2.u32 	{%r14511, %r14512}, [%rd4];
	// inline asm
	prmt.b32 %r14408, %r14512, %r14511, %r848;
	// inline asm
	st.local.u32 	[%rd5+4], %r14408;
	ld.local.u32 	%r14413, [%rd4];
	ld.local.u32 	%r14414, [%rd3+12];
	// inline asm
	prmt.b32 %r14412, %r14413, %r14414, %r848;
	// inline asm
	st.local.u32 	[%rd5], %r14412;
	ld.local.v2.u32 	{%r14513, %r14514}, [%rd3+8];
	// inline asm
	prmt.b32 %r14416, %r14514, %r14513, %r848;
	// inline asm
	st.local.u32 	[%rd4+12], %r14416;
	ld.local.u32 	%r14421, [%rd3+8];
	ld.local.u32 	%r14422, [%rd3+4];
	// inline asm
	prmt.b32 %r14420, %r14421, %r14422, %r848;
	// inline asm
	st.local.u32 	[%rd4+8], %r14420;
	ld.local.v2.u32 	{%r14515, %r14516}, [%rd3];
	// inline asm
	prmt.b32 %r14424, %r14516, %r14515, %r848;
	// inline asm
	st.local.u32 	[%rd4+4], %r14424;
	ld.local.u32 	%r14429, [%rd3];
	ld.local.u32 	%r14430, [%rd2+12];
	// inline asm
	prmt.b32 %r14428, %r14429, %r14430, %r848;
	// inline asm
	st.local.u32 	[%rd4], %r14428;
	ld.local.v2.u32 	{%r14517, %r14518}, [%rd2+8];
	// inline asm
	prmt.b32 %r14432, %r14518, %r14517, %r848;
	// inline asm
	st.local.u32 	[%rd3+12], %r14432;
	ld.local.u32 	%r14437, [%rd2+8];
	ld.local.u32 	%r14438, [%rd2+4];
	// inline asm
	prmt.b32 %r14436, %r14437, %r14438, %r848;
	// inline asm
	st.local.u32 	[%rd3+8], %r14436;
	ld.local.v2.u32 	{%r14519, %r14520}, [%rd2];
	// inline asm
	prmt.b32 %r14440, %r14520, %r14519, %r848;
	// inline asm
	st.local.u32 	[%rd3+4], %r14440;
	ld.local.u32 	%r14445, [%rd2];
	ld.local.u32 	%r14446, [%rd1+12];
	// inline asm
	prmt.b32 %r14444, %r14445, %r14446, %r848;
	// inline asm
	st.local.u32 	[%rd3], %r14444;
	ld.local.v2.u32 	{%r14521, %r14522}, [%rd1+8];
	// inline asm
	prmt.b32 %r14448, %r14522, %r14521, %r848;
	// inline asm
	st.local.u32 	[%rd2+12], %r14448;
	ld.local.u32 	%r14453, [%rd1+8];
	ld.local.u32 	%r14454, [%rd1+4];
	// inline asm
	prmt.b32 %r14452, %r14453, %r14454, %r848;
	// inline asm
	st.local.u32 	[%rd2+8], %r14452;
	ld.local.v2.u32 	{%r14523, %r14524}, [%rd1];
	// inline asm
	prmt.b32 %r14456, %r14524, %r14523, %r848;
	// inline asm
	st.local.u32 	[%rd2+4], %r14456;
	ld.local.u32 	%r14461, [%rd1];
	// inline asm
	prmt.b32 %r14460, %r14461, %r16283, %r848;
	// inline asm
	st.local.u32 	[%rd2], %r14460;
	st.local.v2.u32 	[%rd1+8], {%r16283, %r16283};
	mov.u64 	%rd1975, 0;
	st.local.u64 	[%rd1], %rd1975;
	mov.u32 	%r16284, %r16283;
	mov.u32 	%r16289, %r16283;
	mov.u32 	%r16290, %r16283;
	mov.u32 	%r16291, %r16283;
	bra.uni 	BB5_775;

BB5_739:
	setp.gt.s32	%p414, %r9492, 21;
	@%p414 bra 	BB5_743;

	setp.eq.s32	%p417, %r9492, 20;
	@%p417 bra 	BB5_766;
	bra.uni 	BB5_741;

BB5_766:
	mov.u32 	%r16283, 0;
	// inline asm
	prmt.b32 %r16308, %r16283, %r66, %r848;
	// inline asm
	ld.local.v2.u32 	{%r11525, %r11526}, [%rd8+8];
	// inline asm
	prmt.b32 %r16301, %r11526, %r11525, %r848;
	// inline asm
	ld.local.u32 	%r11389, [%rd8+8];
	ld.local.u32 	%r11390, [%rd8+4];
	// inline asm
	prmt.b32 %r16302, %r11389, %r11390, %r848;
	// inline asm
	ld.local.v2.u32 	{%r11527, %r11528}, [%rd8];
	// inline asm
	prmt.b32 %r16303, %r11528, %r11527, %r848;
	// inline asm
	ld.local.u32 	%r11397, [%rd8];
	ld.local.u32 	%r11398, [%rd7+12];
	// inline asm
	prmt.b32 %r16304, %r11397, %r11398, %r848;
	// inline asm
	ld.local.v2.u32 	{%r11529, %r11530}, [%rd7+8];
	// inline asm
	prmt.b32 %r16297, %r11530, %r11529, %r848;
	// inline asm
	ld.local.u32 	%r11405, [%rd7+8];
	ld.local.u32 	%r11406, [%rd7+4];
	// inline asm
	prmt.b32 %r16298, %r11405, %r11406, %r848;
	// inline asm
	ld.local.v2.u32 	{%r11531, %r11532}, [%rd7];
	// inline asm
	prmt.b32 %r16299, %r11532, %r11531, %r848;
	// inline asm
	ld.local.u32 	%r11413, [%rd7];
	ld.local.u32 	%r11414, [%rd6+12];
	// inline asm
	prmt.b32 %r16300, %r11413, %r11414, %r848;
	// inline asm
	ld.local.v2.u32 	{%r11533, %r11534}, [%rd6+8];
	// inline asm
	prmt.b32 %r16293, %r11534, %r11533, %r848;
	// inline asm
	ld.local.u32 	%r11421, [%rd6+8];
	ld.local.u32 	%r11422, [%rd6+4];
	// inline asm
	prmt.b32 %r16294, %r11421, %r11422, %r848;
	// inline asm
	ld.local.v2.u32 	{%r11535, %r11536}, [%rd6];
	// inline asm
	prmt.b32 %r16295, %r11536, %r11535, %r848;
	// inline asm
	ld.local.u32 	%r11429, [%rd6];
	ld.local.u32 	%r11430, [%rd5+12];
	// inline asm
	prmt.b32 %r16296, %r11429, %r11430, %r848;
	// inline asm
	ld.local.v2.u32 	{%r11537, %r11538}, [%rd5+8];
	// inline asm
	prmt.b32 %r16289, %r11538, %r11537, %r848;
	// inline asm
	ld.local.u32 	%r11437, [%rd5+8];
	ld.local.u32 	%r11438, [%rd5+4];
	// inline asm
	prmt.b32 %r16290, %r11437, %r11438, %r848;
	// inline asm
	ld.local.v2.u32 	{%r11539, %r11540}, [%rd5];
	// inline asm
	prmt.b32 %r16291, %r11540, %r11539, %r848;
	// inline asm
	ld.local.u32 	%r11445, [%rd5];
	ld.local.u32 	%r11446, [%rd4+12];
	// inline asm
	prmt.b32 %r16292, %r11445, %r11446, %r848;
	// inline asm
	ld.local.v2.u32 	{%r11541, %r11542}, [%rd4+8];
	// inline asm
	prmt.b32 %r16285, %r11542, %r11541, %r848;
	// inline asm
	ld.local.u32 	%r11453, [%rd4+8];
	ld.local.u32 	%r11454, [%rd4+4];
	// inline asm
	prmt.b32 %r16286, %r11453, %r11454, %r848;
	// inline asm
	ld.local.v2.u32 	{%r11543, %r11544}, [%rd4];
	// inline asm
	prmt.b32 %r16287, %r11544, %r11543, %r848;
	// inline asm
	ld.local.u32 	%r11461, [%rd4];
	ld.local.u32 	%r11462, [%rd3+12];
	// inline asm
	prmt.b32 %r16288, %r11461, %r11462, %r848;
	// inline asm
	ld.local.v2.u32 	{%r11545, %r11546}, [%rd3+8];
	// inline asm
	prmt.b32 %r11464, %r11546, %r11545, %r848;
	// inline asm
	st.local.u32 	[%rd8+12], %r11464;
	ld.local.u32 	%r11469, [%rd3+8];
	ld.local.u32 	%r11470, [%rd3+4];
	// inline asm
	prmt.b32 %r11468, %r11469, %r11470, %r848;
	// inline asm
	st.local.u32 	[%rd8+8], %r11468;
	ld.local.v2.u32 	{%r11547, %r11548}, [%rd3];
	// inline asm
	prmt.b32 %r11472, %r11548, %r11547, %r848;
	// inline asm
	st.local.u32 	[%rd8+4], %r11472;
	ld.local.u32 	%r11477, [%rd3];
	ld.local.u32 	%r11478, [%rd2+12];
	// inline asm
	prmt.b32 %r11476, %r11477, %r11478, %r848;
	// inline asm
	st.local.u32 	[%rd8], %r11476;
	ld.local.v2.u32 	{%r11549, %r11550}, [%rd2+8];
	// inline asm
	prmt.b32 %r11480, %r11550, %r11549, %r848;
	// inline asm
	st.local.u32 	[%rd7+12], %r11480;
	ld.local.u32 	%r11485, [%rd2+8];
	ld.local.u32 	%r11486, [%rd2+4];
	// inline asm
	prmt.b32 %r11484, %r11485, %r11486, %r848;
	// inline asm
	st.local.u32 	[%rd7+8], %r11484;
	ld.local.v2.u32 	{%r11551, %r11552}, [%rd2];
	// inline asm
	prmt.b32 %r11488, %r11552, %r11551, %r848;
	// inline asm
	st.local.u32 	[%rd7+4], %r11488;
	ld.local.u32 	%r11493, [%rd2];
	ld.local.u32 	%r11494, [%rd1+12];
	// inline asm
	prmt.b32 %r11492, %r11493, %r11494, %r848;
	// inline asm
	st.local.u32 	[%rd7], %r11492;
	ld.local.v2.u32 	{%r11553, %r11554}, [%rd1+8];
	// inline asm
	prmt.b32 %r11496, %r11554, %r11553, %r848;
	// inline asm
	st.local.u32 	[%rd6+12], %r11496;
	ld.local.u32 	%r11501, [%rd1+8];
	ld.local.u32 	%r11502, [%rd1+4];
	// inline asm
	prmt.b32 %r11500, %r11501, %r11502, %r848;
	// inline asm
	st.local.u32 	[%rd6+8], %r11500;
	ld.local.v2.u32 	{%r11555, %r11556}, [%rd1];
	// inline asm
	prmt.b32 %r11504, %r11556, %r11555, %r848;
	// inline asm
	st.local.u32 	[%rd6+4], %r11504;
	ld.local.u32 	%r11509, [%rd1];
	// inline asm
	prmt.b32 %r11508, %r11509, %r16283, %r848;
	// inline asm
	st.local.u32 	[%rd6], %r11508;
	st.local.v4.u32 	[%rd5], {%r16283, %r16283, %r16283, %r16283};
	st.local.v4.u32 	[%rd4], {%r16283, %r16283, %r16283, %r16283};
	st.local.v4.u32 	[%rd3], {%r16283, %r16283, %r16283, %r16283};
	st.local.v4.u32 	[%rd2], {%r16283, %r16283, %r16283, %r16283};
	st.local.v2.u32 	[%rd1+8], {%r16283, %r16283};
	mov.u64 	%rd1959, 0;
	st.local.u64 	[%rd1], %rd1959;
	mov.u32 	%r16284, %r16283;
	mov.u32 	%r16305, %r16283;
	mov.u32 	%r16306, %r16283;
	mov.u32 	%r16307, %r16283;
	bra.uni 	BB5_779;

BB5_723:
	setp.gt.s32	%p426, %r9492, 13;
	@%p426 bra 	BB5_727;

	setp.eq.s32	%p429, %r9492, 12;
	@%p429 bra 	BB5_770;
	bra.uni 	BB5_725;

BB5_770:
	mov.u32 	%r16283, 0;
	// inline asm
	prmt.b32 %r16300, %r16283, %r66, %r848;
	// inline asm
	ld.local.v2.u32 	{%r12977, %r12978}, [%rd8+8];
	// inline asm
	prmt.b32 %r16293, %r12978, %r12977, %r848;
	// inline asm
	ld.local.u32 	%r12833, [%rd8+8];
	ld.local.u32 	%r12834, [%rd8+4];
	// inline asm
	prmt.b32 %r16294, %r12833, %r12834, %r848;
	// inline asm
	ld.local.v2.u32 	{%r12979, %r12980}, [%rd8];
	// inline asm
	prmt.b32 %r16295, %r12980, %r12979, %r848;
	// inline asm
	ld.local.u32 	%r12841, [%rd8];
	ld.local.u32 	%r12842, [%rd7+12];
	// inline asm
	prmt.b32 %r16296, %r12841, %r12842, %r848;
	// inline asm
	ld.local.v2.u32 	{%r12981, %r12982}, [%rd7+8];
	// inline asm
	prmt.b32 %r16289, %r12982, %r12981, %r848;
	// inline asm
	ld.local.u32 	%r12849, [%rd7+8];
	ld.local.u32 	%r12850, [%rd7+4];
	// inline asm
	prmt.b32 %r16290, %r12849, %r12850, %r848;
	// inline asm
	ld.local.v2.u32 	{%r12983, %r12984}, [%rd7];
	// inline asm
	prmt.b32 %r16291, %r12984, %r12983, %r848;
	// inline asm
	ld.local.u32 	%r12857, [%rd7];
	ld.local.u32 	%r12858, [%rd6+12];
	// inline asm
	prmt.b32 %r16292, %r12857, %r12858, %r848;
	// inline asm
	ld.local.v2.u32 	{%r12985, %r12986}, [%rd6+8];
	// inline asm
	prmt.b32 %r16285, %r12986, %r12985, %r848;
	// inline asm
	ld.local.u32 	%r12865, [%rd6+8];
	ld.local.u32 	%r12866, [%rd6+4];
	// inline asm
	prmt.b32 %r16286, %r12865, %r12866, %r848;
	// inline asm
	ld.local.v2.u32 	{%r12987, %r12988}, [%rd6];
	// inline asm
	prmt.b32 %r16287, %r12988, %r12987, %r848;
	// inline asm
	ld.local.u32 	%r12873, [%rd6];
	ld.local.u32 	%r12874, [%rd5+12];
	// inline asm
	prmt.b32 %r16288, %r12873, %r12874, %r848;
	// inline asm
	ld.local.v2.u32 	{%r12989, %r12990}, [%rd5+8];
	// inline asm
	prmt.b32 %r12876, %r12990, %r12989, %r848;
	// inline asm
	st.local.u32 	[%rd8+12], %r12876;
	ld.local.u32 	%r12881, [%rd5+8];
	ld.local.u32 	%r12882, [%rd5+4];
	// inline asm
	prmt.b32 %r12880, %r12881, %r12882, %r848;
	// inline asm
	st.local.u32 	[%rd8+8], %r12880;
	ld.local.v2.u32 	{%r12991, %r12992}, [%rd5];
	// inline asm
	prmt.b32 %r12884, %r12992, %r12991, %r848;
	// inline asm
	st.local.u32 	[%rd8+4], %r12884;
	ld.local.u32 	%r12889, [%rd5];
	ld.local.u32 	%r12890, [%rd4+12];
	// inline asm
	prmt.b32 %r12888, %r12889, %r12890, %r848;
	// inline asm
	st.local.u32 	[%rd8], %r12888;
	ld.local.v2.u32 	{%r12993, %r12994}, [%rd4+8];
	// inline asm
	prmt.b32 %r12892, %r12994, %r12993, %r848;
	// inline asm
	st.local.u32 	[%rd7+12], %r12892;
	ld.local.u32 	%r12897, [%rd4+8];
	ld.local.u32 	%r12898, [%rd4+4];
	// inline asm
	prmt.b32 %r12896, %r12897, %r12898, %r848;
	// inline asm
	st.local.u32 	[%rd7+8], %r12896;
	ld.local.v2.u32 	{%r12995, %r12996}, [%rd4];
	// inline asm
	prmt.b32 %r12900, %r12996, %r12995, %r848;
	// inline asm
	st.local.u32 	[%rd7+4], %r12900;
	ld.local.u32 	%r12905, [%rd4];
	ld.local.u32 	%r12906, [%rd3+12];
	// inline asm
	prmt.b32 %r12904, %r12905, %r12906, %r848;
	// inline asm
	st.local.u32 	[%rd7], %r12904;
	ld.local.v2.u32 	{%r12997, %r12998}, [%rd3+8];
	// inline asm
	prmt.b32 %r12908, %r12998, %r12997, %r848;
	// inline asm
	st.local.u32 	[%rd6+12], %r12908;
	ld.local.u32 	%r12913, [%rd3+8];
	ld.local.u32 	%r12914, [%rd3+4];
	// inline asm
	prmt.b32 %r12912, %r12913, %r12914, %r848;
	// inline asm
	st.local.u32 	[%rd6+8], %r12912;
	ld.local.v2.u32 	{%r12999, %r13000}, [%rd3];
	// inline asm
	prmt.b32 %r12916, %r13000, %r12999, %r848;
	// inline asm
	st.local.u32 	[%rd6+4], %r12916;
	ld.local.u32 	%r12921, [%rd3];
	ld.local.u32 	%r12922, [%rd2+12];
	// inline asm
	prmt.b32 %r12920, %r12921, %r12922, %r848;
	// inline asm
	st.local.u32 	[%rd6], %r12920;
	ld.local.v2.u32 	{%r13001, %r13002}, [%rd2+8];
	// inline asm
	prmt.b32 %r12924, %r13002, %r13001, %r848;
	// inline asm
	st.local.u32 	[%rd5+12], %r12924;
	ld.local.u32 	%r12929, [%rd2+8];
	ld.local.u32 	%r12930, [%rd2+4];
	// inline asm
	prmt.b32 %r12928, %r12929, %r12930, %r848;
	// inline asm
	st.local.u32 	[%rd5+8], %r12928;
	ld.local.v2.u32 	{%r13003, %r13004}, [%rd2];
	// inline asm
	prmt.b32 %r12932, %r13004, %r13003, %r848;
	// inline asm
	st.local.u32 	[%rd5+4], %r12932;
	ld.local.u32 	%r12937, [%rd2];
	ld.local.u32 	%r12938, [%rd1+12];
	// inline asm
	prmt.b32 %r12936, %r12937, %r12938, %r848;
	// inline asm
	st.local.u32 	[%rd5], %r12936;
	ld.local.v2.u32 	{%r13005, %r13006}, [%rd1+8];
	// inline asm
	prmt.b32 %r12940, %r13006, %r13005, %r848;
	// inline asm
	st.local.u32 	[%rd4+12], %r12940;
	ld.local.u32 	%r12945, [%rd1+8];
	ld.local.u32 	%r12946, [%rd1+4];
	// inline asm
	prmt.b32 %r12944, %r12945, %r12946, %r848;
	// inline asm
	st.local.u32 	[%rd4+8], %r12944;
	ld.local.v2.u32 	{%r13007, %r13008}, [%rd1];
	// inline asm
	prmt.b32 %r12948, %r13008, %r13007, %r848;
	// inline asm
	st.local.u32 	[%rd4+4], %r12948;
	ld.local.u32 	%r12953, [%rd1];
	// inline asm
	prmt.b32 %r12952, %r12953, %r16283, %r848;
	// inline asm
	st.local.u32 	[%rd4], %r12952;
	st.local.v4.u32 	[%rd3], {%r16283, %r16283, %r16283, %r16283};
	st.local.v4.u32 	[%rd2], {%r16283, %r16283, %r16283, %r16283};
	st.local.v2.u32 	[%rd1+8], {%r16283, %r16283};
	mov.u64 	%rd1967, 0;
	st.local.u64 	[%rd1], %rd1967;
	mov.u32 	%r16284, %r16283;
	mov.u32 	%r16297, %r16283;
	mov.u32 	%r16298, %r16283;
	mov.u32 	%r16299, %r16283;
	bra.uni 	BB5_777;

BB5_754:
	setp.gt.s32	%p403, %r9492, 29;
	@%p403 bra 	BB5_758;

	setp.eq.s32	%p406, %r9492, 28;
	@%p406 bra 	BB5_762;
	bra.uni 	BB5_756;

BB5_762:
	mov.u32 	%r16283, 0;
	// inline asm
	prmt.b32 %r16316, %r16283, %r66, %r848;
	// inline asm
	ld.local.v2.u32 	{%r10137, %r10138}, [%rd8+8];
	// inline asm
	prmt.b32 %r16309, %r10138, %r10137, %r848;
	// inline asm
	ld.local.u32 	%r10009, [%rd8+8];
	ld.local.u32 	%r10010, [%rd8+4];
	// inline asm
	prmt.b32 %r16310, %r10009, %r10010, %r848;
	// inline asm
	ld.local.v2.u32 	{%r10139, %r10140}, [%rd8];
	// inline asm
	prmt.b32 %r16311, %r10140, %r10139, %r848;
	// inline asm
	ld.local.u32 	%r10017, [%rd8];
	ld.local.u32 	%r10018, [%rd7+12];
	// inline asm
	prmt.b32 %r16312, %r10017, %r10018, %r848;
	// inline asm
	ld.local.v2.u32 	{%r10141, %r10142}, [%rd7+8];
	// inline asm
	prmt.b32 %r16305, %r10142, %r10141, %r848;
	// inline asm
	ld.local.u32 	%r10025, [%rd7+8];
	ld.local.u32 	%r10026, [%rd7+4];
	// inline asm
	prmt.b32 %r16306, %r10025, %r10026, %r848;
	// inline asm
	ld.local.v2.u32 	{%r10143, %r10144}, [%rd7];
	// inline asm
	prmt.b32 %r16307, %r10144, %r10143, %r848;
	// inline asm
	ld.local.u32 	%r10033, [%rd7];
	ld.local.u32 	%r10034, [%rd6+12];
	// inline asm
	prmt.b32 %r16308, %r10033, %r10034, %r848;
	// inline asm
	ld.local.v2.u32 	{%r10145, %r10146}, [%rd6+8];
	// inline asm
	prmt.b32 %r16301, %r10146, %r10145, %r848;
	// inline asm
	ld.local.u32 	%r10041, [%rd6+8];
	ld.local.u32 	%r10042, [%rd6+4];
	// inline asm
	prmt.b32 %r16302, %r10041, %r10042, %r848;
	// inline asm
	ld.local.v2.u32 	{%r10147, %r10148}, [%rd6];
	// inline asm
	prmt.b32 %r16303, %r10148, %r10147, %r848;
	// inline asm
	ld.local.u32 	%r10049, [%rd6];
	ld.local.u32 	%r10050, [%rd5+12];
	// inline asm
	prmt.b32 %r16304, %r10049, %r10050, %r848;
	// inline asm
	ld.local.v2.u32 	{%r10149, %r10150}, [%rd5+8];
	// inline asm
	prmt.b32 %r16297, %r10150, %r10149, %r848;
	// inline asm
	ld.local.u32 	%r10057, [%rd5+8];
	ld.local.u32 	%r10058, [%rd5+4];
	// inline asm
	prmt.b32 %r16298, %r10057, %r10058, %r848;
	// inline asm
	ld.local.v2.u32 	{%r10151, %r10152}, [%rd5];
	// inline asm
	prmt.b32 %r16299, %r10152, %r10151, %r848;
	// inline asm
	ld.local.u32 	%r10065, [%rd5];
	ld.local.u32 	%r10066, [%rd4+12];
	// inline asm
	prmt.b32 %r16300, %r10065, %r10066, %r848;
	// inline asm
	ld.local.v2.u32 	{%r10153, %r10154}, [%rd4+8];
	// inline asm
	prmt.b32 %r16293, %r10154, %r10153, %r848;
	// inline asm
	ld.local.u32 	%r10073, [%rd4+8];
	ld.local.u32 	%r10074, [%rd4+4];
	// inline asm
	prmt.b32 %r16294, %r10073, %r10074, %r848;
	// inline asm
	ld.local.v2.u32 	{%r10155, %r10156}, [%rd4];
	// inline asm
	prmt.b32 %r16295, %r10156, %r10155, %r848;
	// inline asm
	ld.local.u32 	%r10081, [%rd4];
	ld.local.u32 	%r10082, [%rd3+12];
	// inline asm
	prmt.b32 %r16296, %r10081, %r10082, %r848;
	// inline asm
	ld.local.v2.u32 	{%r10157, %r10158}, [%rd3+8];
	// inline asm
	prmt.b32 %r16289, %r10158, %r10157, %r848;
	// inline asm
	ld.local.u32 	%r10089, [%rd3+8];
	ld.local.u32 	%r10090, [%rd3+4];
	// inline asm
	prmt.b32 %r16290, %r10089, %r10090, %r848;
	// inline asm
	ld.local.v2.u32 	{%r10159, %r10160}, [%rd3];
	// inline asm
	prmt.b32 %r16291, %r10160, %r10159, %r848;
	// inline asm
	ld.local.u32 	%r10097, [%rd3];
	ld.local.u32 	%r10098, [%rd2+12];
	// inline asm
	prmt.b32 %r16292, %r10097, %r10098, %r848;
	// inline asm
	ld.local.v2.u32 	{%r10161, %r10162}, [%rd2+8];
	// inline asm
	prmt.b32 %r16285, %r10162, %r10161, %r848;
	// inline asm
	ld.local.u32 	%r10105, [%rd2+8];
	ld.local.u32 	%r10106, [%rd2+4];
	// inline asm
	prmt.b32 %r16286, %r10105, %r10106, %r848;
	// inline asm
	ld.local.v2.u32 	{%r10163, %r10164}, [%rd2];
	// inline asm
	prmt.b32 %r16287, %r10164, %r10163, %r848;
	// inline asm
	ld.local.u32 	%r10113, [%rd2];
	ld.local.u32 	%r10114, [%rd1+12];
	// inline asm
	prmt.b32 %r16288, %r10113, %r10114, %r848;
	// inline asm
	ld.local.v2.u32 	{%r10165, %r10166}, [%rd1+8];
	// inline asm
	prmt.b32 %r10116, %r10166, %r10165, %r848;
	// inline asm
	st.local.u32 	[%rd8+12], %r10116;
	ld.local.u32 	%r10121, [%rd1+8];
	ld.local.u32 	%r10122, [%rd1+4];
	// inline asm
	prmt.b32 %r10120, %r10121, %r10122, %r848;
	// inline asm
	st.local.u32 	[%rd8+8], %r10120;
	ld.local.v2.u32 	{%r10167, %r10168}, [%rd1];
	// inline asm
	prmt.b32 %r10124, %r10168, %r10167, %r848;
	// inline asm
	st.local.u32 	[%rd8+4], %r10124;
	ld.local.u32 	%r10129, [%rd1];
	// inline asm
	prmt.b32 %r10128, %r10129, %r16283, %r848;
	// inline asm
	st.local.u32 	[%rd8], %r10128;
	st.local.v4.u32 	[%rd7], {%r16283, %r16283, %r16283, %r16283};
	st.local.v4.u32 	[%rd6], {%r16283, %r16283, %r16283, %r16283};
	st.local.v4.u32 	[%rd5], {%r16283, %r16283, %r16283, %r16283};
	st.local.v4.u32 	[%rd4], {%r16283, %r16283, %r16283, %r16283};
	st.local.v4.u32 	[%rd3], {%r16283, %r16283, %r16283, %r16283};
	st.local.v4.u32 	[%rd2], {%r16283, %r16283, %r16283, %r16283};
	st.local.v2.u32 	[%rd1+8], {%r16283, %r16283};
	mov.u64 	%rd1951, 0;
	st.local.u64 	[%rd1], %rd1951;
	mov.u32 	%r16284, %r16283;
	mov.u32 	%r16313, %r16283;
	mov.u32 	%r16314, %r16283;
	mov.u32 	%r16315, %r16283;
	bra.uni 	BB5_783;

BB5_704:
	setp.eq.s32	%p443, %r9492, 2;
	@%p443 bra 	BB5_781;
	bra.uni 	BB5_705;

BB5_781:
	mov.u32 	%r16283, 0;
	// inline asm
	prmt.b32 %r16286, %r16283, %r66, %r848;
	// inline asm
	ld.local.v2.u32 	{%r14882, %r14883}, [%rd8+8];
	// inline asm
	prmt.b32 %r16287, %r14883, %r14882, %r848;
	// inline asm
	ld.local.u32 	%r14728, [%rd8+8];
	ld.local.u32 	%r14729, [%rd8+4];
	// inline asm
	prmt.b32 %r16288, %r14728, %r14729, %r848;
	// inline asm
	ld.local.v2.u32 	{%r14884, %r14885}, [%rd8];
	// inline asm
	prmt.b32 %r14731, %r14885, %r14884, %r848;
	// inline asm
	st.local.u32 	[%rd8+12], %r14731;
	ld.local.u32 	%r14736, [%rd8];
	ld.local.u32 	%r14737, [%rd7+12];
	// inline asm
	prmt.b32 %r14735, %r14736, %r14737, %r848;
	// inline asm
	st.local.u32 	[%rd8+8], %r14735;
	ld.local.v2.u32 	{%r14886, %r14887}, [%rd7+8];
	// inline asm
	prmt.b32 %r14739, %r14887, %r14886, %r848;
	// inline asm
	st.local.u32 	[%rd8+4], %r14739;
	ld.local.u32 	%r14744, [%rd7+8];
	ld.local.u32 	%r14745, [%rd7+4];
	// inline asm
	prmt.b32 %r14743, %r14744, %r14745, %r848;
	// inline asm
	st.local.u32 	[%rd8], %r14743;
	ld.local.v2.u32 	{%r14888, %r14889}, [%rd7];
	// inline asm
	prmt.b32 %r14747, %r14889, %r14888, %r848;
	// inline asm
	st.local.u32 	[%rd7+12], %r14747;
	ld.local.u32 	%r14752, [%rd7];
	ld.local.u32 	%r14753, [%rd6+12];
	// inline asm
	prmt.b32 %r14751, %r14752, %r14753, %r848;
	// inline asm
	st.local.u32 	[%rd7+8], %r14751;
	ld.local.v2.u32 	{%r14890, %r14891}, [%rd6+8];
	// inline asm
	prmt.b32 %r14755, %r14891, %r14890, %r848;
	// inline asm
	st.local.u32 	[%rd7+4], %r14755;
	ld.local.u32 	%r14760, [%rd6+8];
	ld.local.u32 	%r14761, [%rd6+4];
	// inline asm
	prmt.b32 %r14759, %r14760, %r14761, %r848;
	// inline asm
	st.local.u32 	[%rd7], %r14759;
	ld.local.v2.u32 	{%r14892, %r14893}, [%rd6];
	// inline asm
	prmt.b32 %r14763, %r14893, %r14892, %r848;
	// inline asm
	st.local.u32 	[%rd6+12], %r14763;
	ld.local.u32 	%r14768, [%rd6];
	ld.local.u32 	%r14769, [%rd5+12];
	// inline asm
	prmt.b32 %r14767, %r14768, %r14769, %r848;
	// inline asm
	st.local.u32 	[%rd6+8], %r14767;
	ld.local.v2.u32 	{%r14894, %r14895}, [%rd5+8];
	// inline asm
	prmt.b32 %r14771, %r14895, %r14894, %r848;
	// inline asm
	st.local.u32 	[%rd6+4], %r14771;
	ld.local.u32 	%r14776, [%rd5+8];
	ld.local.u32 	%r14777, [%rd5+4];
	// inline asm
	prmt.b32 %r14775, %r14776, %r14777, %r848;
	// inline asm
	st.local.u32 	[%rd6], %r14775;
	ld.local.v2.u32 	{%r14896, %r14897}, [%rd5];
	// inline asm
	prmt.b32 %r14779, %r14897, %r14896, %r848;
	// inline asm
	st.local.u32 	[%rd5+12], %r14779;
	ld.local.u32 	%r14784, [%rd5];
	ld.local.u32 	%r14785, [%rd4+12];
	// inline asm
	prmt.b32 %r14783, %r14784, %r14785, %r848;
	// inline asm
	st.local.u32 	[%rd5+8], %r14783;
	ld.local.v2.u32 	{%r14898, %r14899}, [%rd4+8];
	// inline asm
	prmt.b32 %r14787, %r14899, %r14898, %r848;
	// inline asm
	st.local.u32 	[%rd5+4], %r14787;
	ld.local.u32 	%r14792, [%rd4+8];
	ld.local.u32 	%r14793, [%rd4+4];
	// inline asm
	prmt.b32 %r14791, %r14792, %r14793, %r848;
	// inline asm
	st.local.u32 	[%rd5], %r14791;
	ld.local.v2.u32 	{%r14900, %r14901}, [%rd4];
	// inline asm
	prmt.b32 %r14795, %r14901, %r14900, %r848;
	// inline asm
	st.local.u32 	[%rd4+12], %r14795;
	ld.local.u32 	%r14800, [%rd4];
	ld.local.u32 	%r14801, [%rd3+12];
	// inline asm
	prmt.b32 %r14799, %r14800, %r14801, %r848;
	// inline asm
	st.local.u32 	[%rd4+8], %r14799;
	ld.local.v2.u32 	{%r14902, %r14903}, [%rd3+8];
	// inline asm
	prmt.b32 %r14803, %r14903, %r14902, %r848;
	// inline asm
	st.local.u32 	[%rd4+4], %r14803;
	ld.local.u32 	%r14808, [%rd3+8];
	ld.local.u32 	%r14809, [%rd3+4];
	// inline asm
	prmt.b32 %r14807, %r14808, %r14809, %r848;
	// inline asm
	st.local.u32 	[%rd4], %r14807;
	ld.local.v2.u32 	{%r14904, %r14905}, [%rd3];
	// inline asm
	prmt.b32 %r14811, %r14905, %r14904, %r848;
	// inline asm
	st.local.u32 	[%rd3+12], %r14811;
	ld.local.u32 	%r14816, [%rd3];
	ld.local.u32 	%r14817, [%rd2+12];
	// inline asm
	prmt.b32 %r14815, %r14816, %r14817, %r848;
	// inline asm
	st.local.u32 	[%rd3+8], %r14815;
	ld.local.v2.u32 	{%r14906, %r14907}, [%rd2+8];
	// inline asm
	prmt.b32 %r14819, %r14907, %r14906, %r848;
	// inline asm
	st.local.u32 	[%rd3+4], %r14819;
	ld.local.u32 	%r14824, [%rd2+8];
	ld.local.u32 	%r14825, [%rd2+4];
	// inline asm
	prmt.b32 %r14823, %r14824, %r14825, %r848;
	// inline asm
	st.local.u32 	[%rd3], %r14823;
	ld.local.v2.u32 	{%r14908, %r14909}, [%rd2];
	// inline asm
	prmt.b32 %r14827, %r14909, %r14908, %r848;
	// inline asm
	st.local.u32 	[%rd2+12], %r14827;
	ld.local.u32 	%r14832, [%rd2];
	ld.local.u32 	%r14833, [%rd1+12];
	// inline asm
	prmt.b32 %r14831, %r14832, %r14833, %r848;
	// inline asm
	st.local.u32 	[%rd2+8], %r14831;
	ld.local.v2.u32 	{%r14910, %r14911}, [%rd1+8];
	// inline asm
	prmt.b32 %r14835, %r14911, %r14910, %r848;
	// inline asm
	st.local.u32 	[%rd2+4], %r14835;
	ld.local.u32 	%r14840, [%rd1+8];
	ld.local.u32 	%r14841, [%rd1+4];
	// inline asm
	prmt.b32 %r14839, %r14840, %r14841, %r848;
	// inline asm
	st.local.u32 	[%rd2], %r14839;
	ld.local.v2.u32 	{%r14912, %r14913}, [%rd1];
	// inline asm
	prmt.b32 %r14843, %r14913, %r14912, %r848;
	// inline asm
	st.local.u32 	[%rd1+12], %r14843;
	ld.local.u32 	%r14848, [%rd1];
	// inline asm
	prmt.b32 %r14847, %r14848, %r16283, %r848;
	// inline asm
	st.local.u32 	[%rd1+8], %r14847;
	mov.u64 	%rd1977, 0;
	st.local.u64 	[%rd1], %rd1977;
	mov.u32 	%r16284, %r16283;
	mov.u32 	%r16285, %r16283;
	bra.uni 	BB5_707;

BB5_736:
	setp.eq.s32	%p420, %r9492, 18;
	@%p420 bra 	BB5_767;
	bra.uni 	BB5_737;

BB5_767:
	mov.u32 	%r16283, 0;
	// inline asm
	prmt.b32 %r16302, %r16283, %r66, %r848;
	// inline asm
	ld.local.v2.u32 	{%r11882, %r11883}, [%rd8+8];
	// inline asm
	prmt.b32 %r16303, %r11883, %r11882, %r848;
	// inline asm
	ld.local.u32 	%r11744, [%rd8+8];
	ld.local.u32 	%r11745, [%rd8+4];
	// inline asm
	prmt.b32 %r16304, %r11744, %r11745, %r848;
	// inline asm
	ld.local.v2.u32 	{%r11884, %r11885}, [%rd8];
	// inline asm
	prmt.b32 %r16297, %r11885, %r11884, %r848;
	// inline asm
	ld.local.u32 	%r11752, [%rd8];
	ld.local.u32 	%r11753, [%rd7+12];
	// inline asm
	prmt.b32 %r16298, %r11752, %r11753, %r848;
	// inline asm
	ld.local.v2.u32 	{%r11886, %r11887}, [%rd7+8];
	// inline asm
	prmt.b32 %r16299, %r11887, %r11886, %r848;
	// inline asm
	ld.local.u32 	%r11760, [%rd7+8];
	ld.local.u32 	%r11761, [%rd7+4];
	// inline asm
	prmt.b32 %r16300, %r11760, %r11761, %r848;
	// inline asm
	ld.local.v2.u32 	{%r11888, %r11889}, [%rd7];
	// inline asm
	prmt.b32 %r16293, %r11889, %r11888, %r848;
	// inline asm
	ld.local.u32 	%r11768, [%rd7];
	ld.local.u32 	%r11769, [%rd6+12];
	// inline asm
	prmt.b32 %r16294, %r11768, %r11769, %r848;
	// inline asm
	ld.local.v2.u32 	{%r11890, %r11891}, [%rd6+8];
	// inline asm
	prmt.b32 %r16295, %r11891, %r11890, %r848;
	// inline asm
	ld.local.u32 	%r11776, [%rd6+8];
	ld.local.u32 	%r11777, [%rd6+4];
	// inline asm
	prmt.b32 %r16296, %r11776, %r11777, %r848;
	// inline asm
	ld.local.v2.u32 	{%r11892, %r11893}, [%rd6];
	// inline asm
	prmt.b32 %r16289, %r11893, %r11892, %r848;
	// inline asm
	ld.local.u32 	%r11784, [%rd6];
	ld.local.u32 	%r11785, [%rd5+12];
	// inline asm
	prmt.b32 %r16290, %r11784, %r11785, %r848;
	// inline asm
	ld.local.v2.u32 	{%r11894, %r11895}, [%rd5+8];
	// inline asm
	prmt.b32 %r16291, %r11895, %r11894, %r848;
	// inline asm
	ld.local.u32 	%r11792, [%rd5+8];
	ld.local.u32 	%r11793, [%rd5+4];
	// inline asm
	prmt.b32 %r16292, %r11792, %r11793, %r848;
	// inline asm
	ld.local.v2.u32 	{%r11896, %r11897}, [%rd5];
	// inline asm
	prmt.b32 %r16285, %r11897, %r11896, %r848;
	// inline asm
	ld.local.u32 	%r11800, [%rd5];
	ld.local.u32 	%r11801, [%rd4+12];
	// inline asm
	prmt.b32 %r16286, %r11800, %r11801, %r848;
	// inline asm
	ld.local.v2.u32 	{%r11898, %r11899}, [%rd4+8];
	// inline asm
	prmt.b32 %r16287, %r11899, %r11898, %r848;
	// inline asm
	ld.local.u32 	%r11808, [%rd4+8];
	ld.local.u32 	%r11809, [%rd4+4];
	// inline asm
	prmt.b32 %r16288, %r11808, %r11809, %r848;
	// inline asm
	ld.local.v2.u32 	{%r11900, %r11901}, [%rd4];
	// inline asm
	prmt.b32 %r11811, %r11901, %r11900, %r848;
	// inline asm
	st.local.u32 	[%rd8+12], %r11811;
	ld.local.u32 	%r11816, [%rd4];
	ld.local.u32 	%r11817, [%rd3+12];
	// inline asm
	prmt.b32 %r11815, %r11816, %r11817, %r848;
	// inline asm
	st.local.u32 	[%rd8+8], %r11815;
	ld.local.v2.u32 	{%r11902, %r11903}, [%rd3+8];
	// inline asm
	prmt.b32 %r11819, %r11903, %r11902, %r848;
	// inline asm
	st.local.u32 	[%rd8+4], %r11819;
	ld.local.u32 	%r11824, [%rd3+8];
	ld.local.u32 	%r11825, [%rd3+4];
	// inline asm
	prmt.b32 %r11823, %r11824, %r11825, %r848;
	// inline asm
	st.local.u32 	[%rd8], %r11823;
	ld.local.v2.u32 	{%r11904, %r11905}, [%rd3];
	// inline asm
	prmt.b32 %r11827, %r11905, %r11904, %r848;
	// inline asm
	st.local.u32 	[%rd7+12], %r11827;
	ld.local.u32 	%r11832, [%rd3];
	ld.local.u32 	%r11833, [%rd2+12];
	// inline asm
	prmt.b32 %r11831, %r11832, %r11833, %r848;
	// inline asm
	st.local.u32 	[%rd7+8], %r11831;
	ld.local.v2.u32 	{%r11906, %r11907}, [%rd2+8];
	// inline asm
	prmt.b32 %r11835, %r11907, %r11906, %r848;
	// inline asm
	st.local.u32 	[%rd7+4], %r11835;
	ld.local.u32 	%r11840, [%rd2+8];
	ld.local.u32 	%r11841, [%rd2+4];
	// inline asm
	prmt.b32 %r11839, %r11840, %r11841, %r848;
	// inline asm
	st.local.u32 	[%rd7], %r11839;
	ld.local.v2.u32 	{%r11908, %r11909}, [%rd2];
	// inline asm
	prmt.b32 %r11843, %r11909, %r11908, %r848;
	// inline asm
	st.local.u32 	[%rd6+12], %r11843;
	ld.local.u32 	%r11848, [%rd2];
	ld.local.u32 	%r11849, [%rd1+12];
	// inline asm
	prmt.b32 %r11847, %r11848, %r11849, %r848;
	// inline asm
	st.local.u32 	[%rd6+8], %r11847;
	ld.local.v2.u32 	{%r11910, %r11911}, [%rd1+8];
	// inline asm
	prmt.b32 %r11851, %r11911, %r11910, %r848;
	// inline asm
	st.local.u32 	[%rd6+4], %r11851;
	ld.local.u32 	%r11856, [%rd1+8];
	ld.local.u32 	%r11857, [%rd1+4];
	// inline asm
	prmt.b32 %r11855, %r11856, %r11857, %r848;
	// inline asm
	st.local.u32 	[%rd6], %r11855;
	ld.local.v2.u32 	{%r11912, %r11913}, [%rd1];
	// inline asm
	prmt.b32 %r11859, %r11913, %r11912, %r848;
	// inline asm
	st.local.u32 	[%rd5+12], %r11859;
	ld.local.u32 	%r11864, [%rd1];
	// inline asm
	prmt.b32 %r11863, %r11864, %r16283, %r848;
	// inline asm
	st.local.u32 	[%rd5+8], %r11863;
	st.local.v2.u32 	[%rd5], {%r16283, %r16283};
	st.local.u32 	[%rd4+12], %r16283;
	st.local.u32 	[%rd4+8], %r16283;
	st.local.u32 	[%rd4+4], %r16283;
	st.local.u32 	[%rd4], %r16283;
	st.local.u32 	[%rd3+12], %r16283;
	st.local.u32 	[%rd3+8], %r16283;
	st.local.u32 	[%rd3+4], %r16283;
	st.local.u32 	[%rd3], %r16283;
	st.local.u32 	[%rd2+12], %r16283;
	st.local.u32 	[%rd2+8], %r16283;
	st.local.u32 	[%rd2+4], %r16283;
	st.local.u32 	[%rd2], %r16283;
	st.local.u32 	[%rd1+12], %r16283;
	st.local.u32 	[%rd1+8], %r16283;
	mov.u64 	%rd1961, 0;
	st.local.u32 	[%rd1+4], %rd1961;
	st.local.u32 	[%rd1], %rd1961;
	mov.u32 	%r16284, %r16283;
	mov.u32 	%r16301, %r16283;
	bra.uni 	BB5_778;

BB5_720:
	setp.eq.s32	%p432, %r9492, 10;
	@%p432 bra 	BB5_771;
	bra.uni 	BB5_721;

BB5_771:
	mov.u32 	%r16283, 0;
	// inline asm
	prmt.b32 %r16294, %r16283, %r66, %r848;
	// inline asm
	ld.local.v2.u32 	{%r13350, %r13351}, [%rd8+8];
	// inline asm
	prmt.b32 %r16295, %r13351, %r13350, %r848;
	// inline asm
	ld.local.u32 	%r13204, [%rd8+8];
	ld.local.u32 	%r13205, [%rd8+4];
	// inline asm
	prmt.b32 %r16296, %r13204, %r13205, %r848;
	// inline asm
	ld.local.v2.u32 	{%r13352, %r13353}, [%rd8];
	// inline asm
	prmt.b32 %r16289, %r13353, %r13352, %r848;
	// inline asm
	ld.local.u32 	%r13212, [%rd8];
	ld.local.u32 	%r13213, [%rd7+12];
	// inline asm
	prmt.b32 %r16290, %r13212, %r13213, %r848;
	// inline asm
	ld.local.v2.u32 	{%r13354, %r13355}, [%rd7+8];
	// inline asm
	prmt.b32 %r16291, %r13355, %r13354, %r848;
	// inline asm
	ld.local.u32 	%r13220, [%rd7+8];
	ld.local.u32 	%r13221, [%rd7+4];
	// inline asm
	prmt.b32 %r16292, %r13220, %r13221, %r848;
	// inline asm
	ld.local.v2.u32 	{%r13356, %r13357}, [%rd7];
	// inline asm
	prmt.b32 %r16285, %r13357, %r13356, %r848;
	// inline asm
	ld.local.u32 	%r13228, [%rd7];
	ld.local.u32 	%r13229, [%rd6+12];
	// inline asm
	prmt.b32 %r16286, %r13228, %r13229, %r848;
	// inline asm
	ld.local.v2.u32 	{%r13358, %r13359}, [%rd6+8];
	// inline asm
	prmt.b32 %r16287, %r13359, %r13358, %r848;
	// inline asm
	ld.local.u32 	%r13236, [%rd6+8];
	ld.local.u32 	%r13237, [%rd6+4];
	// inline asm
	prmt.b32 %r16288, %r13236, %r13237, %r848;
	// inline asm
	ld.local.v2.u32 	{%r13360, %r13361}, [%rd6];
	// inline asm
	prmt.b32 %r13239, %r13361, %r13360, %r848;
	// inline asm
	st.local.u32 	[%rd8+12], %r13239;
	ld.local.u32 	%r13244, [%rd6];
	ld.local.u32 	%r13245, [%rd5+12];
	// inline asm
	prmt.b32 %r13243, %r13244, %r13245, %r848;
	// inline asm
	st.local.u32 	[%rd8+8], %r13243;
	ld.local.v2.u32 	{%r13362, %r13363}, [%rd5+8];
	// inline asm
	prmt.b32 %r13247, %r13363, %r13362, %r848;
	// inline asm
	st.local.u32 	[%rd8+4], %r13247;
	ld.local.u32 	%r13252, [%rd5+8];
	ld.local.u32 	%r13253, [%rd5+4];
	// inline asm
	prmt.b32 %r13251, %r13252, %r13253, %r848;
	// inline asm
	st.local.u32 	[%rd8], %r13251;
	ld.local.v2.u32 	{%r13364, %r13365}, [%rd5];
	// inline asm
	prmt.b32 %r13255, %r13365, %r13364, %r848;
	// inline asm
	st.local.u32 	[%rd7+12], %r13255;
	ld.local.u32 	%r13260, [%rd5];
	ld.local.u32 	%r13261, [%rd4+12];
	// inline asm
	prmt.b32 %r13259, %r13260, %r13261, %r848;
	// inline asm
	st.local.u32 	[%rd7+8], %r13259;
	ld.local.v2.u32 	{%r13366, %r13367}, [%rd4+8];
	// inline asm
	prmt.b32 %r13263, %r13367, %r13366, %r848;
	// inline asm
	st.local.u32 	[%rd7+4], %r13263;
	ld.local.u32 	%r13268, [%rd4+8];
	ld.local.u32 	%r13269, [%rd4+4];
	// inline asm
	prmt.b32 %r13267, %r13268, %r13269, %r848;
	// inline asm
	st.local.u32 	[%rd7], %r13267;
	ld.local.v2.u32 	{%r13368, %r13369}, [%rd4];
	// inline asm
	prmt.b32 %r13271, %r13369, %r13368, %r848;
	// inline asm
	st.local.u32 	[%rd6+12], %r13271;
	ld.local.u32 	%r13276, [%rd4];
	ld.local.u32 	%r13277, [%rd3+12];
	// inline asm
	prmt.b32 %r13275, %r13276, %r13277, %r848;
	// inline asm
	st.local.u32 	[%rd6+8], %r13275;
	ld.local.v2.u32 	{%r13370, %r13371}, [%rd3+8];
	// inline asm
	prmt.b32 %r13279, %r13371, %r13370, %r848;
	// inline asm
	st.local.u32 	[%rd6+4], %r13279;
	ld.local.u32 	%r13284, [%rd3+8];
	ld.local.u32 	%r13285, [%rd3+4];
	// inline asm
	prmt.b32 %r13283, %r13284, %r13285, %r848;
	// inline asm
	st.local.u32 	[%rd6], %r13283;
	ld.local.v2.u32 	{%r13372, %r13373}, [%rd3];
	// inline asm
	prmt.b32 %r13287, %r13373, %r13372, %r848;
	// inline asm
	st.local.u32 	[%rd5+12], %r13287;
	ld.local.u32 	%r13292, [%rd3];
	ld.local.u32 	%r13293, [%rd2+12];
	// inline asm
	prmt.b32 %r13291, %r13292, %r13293, %r848;
	// inline asm
	st.local.u32 	[%rd5+8], %r13291;
	ld.local.v2.u32 	{%r13374, %r13375}, [%rd2+8];
	// inline asm
	prmt.b32 %r13295, %r13375, %r13374, %r848;
	// inline asm
	st.local.u32 	[%rd5+4], %r13295;
	ld.local.u32 	%r13300, [%rd2+8];
	ld.local.u32 	%r13301, [%rd2+4];
	// inline asm
	prmt.b32 %r13299, %r13300, %r13301, %r848;
	// inline asm
	st.local.u32 	[%rd5], %r13299;
	ld.local.v2.u32 	{%r13376, %r13377}, [%rd2];
	// inline asm
	prmt.b32 %r13303, %r13377, %r13376, %r848;
	// inline asm
	st.local.u32 	[%rd4+12], %r13303;
	ld.local.u32 	%r13308, [%rd2];
	ld.local.u32 	%r13309, [%rd1+12];
	// inline asm
	prmt.b32 %r13307, %r13308, %r13309, %r848;
	// inline asm
	st.local.u32 	[%rd4+8], %r13307;
	ld.local.v2.u32 	{%r13378, %r13379}, [%rd1+8];
	// inline asm
	prmt.b32 %r13311, %r13379, %r13378, %r848;
	// inline asm
	st.local.u32 	[%rd4+4], %r13311;
	ld.local.u32 	%r13316, [%rd1+8];
	ld.local.u32 	%r13317, [%rd1+4];
	// inline asm
	prmt.b32 %r13315, %r13316, %r13317, %r848;
	// inline asm
	st.local.u32 	[%rd4], %r13315;
	ld.local.v2.u32 	{%r13380, %r13381}, [%rd1];
	// inline asm
	prmt.b32 %r13319, %r13381, %r13380, %r848;
	// inline asm
	st.local.u32 	[%rd3+12], %r13319;
	ld.local.u32 	%r13324, [%rd1];
	// inline asm
	prmt.b32 %r13323, %r13324, %r16283, %r848;
	// inline asm
	st.local.u32 	[%rd3+8], %r13323;
	st.local.v2.u32 	[%rd3], {%r16283, %r16283};
	st.local.u32 	[%rd2+12], %r16283;
	st.local.u32 	[%rd2+8], %r16283;
	st.local.u32 	[%rd2+4], %r16283;
	st.local.u32 	[%rd2], %r16283;
	st.local.u32 	[%rd1+12], %r16283;
	st.local.u32 	[%rd1+8], %r16283;
	mov.u64 	%rd1969, 0;
	st.local.u32 	[%rd1+4], %rd1969;
	st.local.u32 	[%rd1], %rd1969;
	mov.u32 	%r16284, %r16283;
	mov.u32 	%r16293, %r16283;
	bra.uni 	BB5_776;

BB5_751:
	setp.eq.s32	%p409, %r9492, 26;
	@%p409 bra 	BB5_763;
	bra.uni 	BB5_752;

BB5_763:
	mov.u32 	%r16283, 0;
	// inline asm
	prmt.b32 %r16310, %r16283, %r66, %r848;
	// inline asm
	ld.local.v2.u32 	{%r10478, %r10479}, [%rd8+8];
	// inline asm
	prmt.b32 %r16311, %r10479, %r10478, %r848;
	// inline asm
	ld.local.u32 	%r10348, [%rd8+8];
	ld.local.u32 	%r10349, [%rd8+4];
	// inline asm
	prmt.b32 %r16312, %r10348, %r10349, %r848;
	// inline asm
	ld.local.v2.u32 	{%r10480, %r10481}, [%rd8];
	// inline asm
	prmt.b32 %r16305, %r10481, %r10480, %r848;
	// inline asm
	ld.local.u32 	%r10356, [%rd8];
	ld.local.u32 	%r10357, [%rd7+12];
	// inline asm
	prmt.b32 %r16306, %r10356, %r10357, %r848;
	// inline asm
	ld.local.v2.u32 	{%r10482, %r10483}, [%rd7+8];
	// inline asm
	prmt.b32 %r16307, %r10483, %r10482, %r848;
	// inline asm
	ld.local.u32 	%r10364, [%rd7+8];
	ld.local.u32 	%r10365, [%rd7+4];
	// inline asm
	prmt.b32 %r16308, %r10364, %r10365, %r848;
	// inline asm
	ld.local.v2.u32 	{%r10484, %r10485}, [%rd7];
	// inline asm
	prmt.b32 %r16301, %r10485, %r10484, %r848;
	// inline asm
	ld.local.u32 	%r10372, [%rd7];
	ld.local.u32 	%r10373, [%rd6+12];
	// inline asm
	prmt.b32 %r16302, %r10372, %r10373, %r848;
	// inline asm
	ld.local.v2.u32 	{%r10486, %r10487}, [%rd6+8];
	// inline asm
	prmt.b32 %r16303, %r10487, %r10486, %r848;
	// inline asm
	ld.local.u32 	%r10380, [%rd6+8];
	ld.local.u32 	%r10381, [%rd6+4];
	// inline asm
	prmt.b32 %r16304, %r10380, %r10381, %r848;
	// inline asm
	ld.local.v2.u32 	{%r10488, %r10489}, [%rd6];
	// inline asm
	prmt.b32 %r16297, %r10489, %r10488, %r848;
	// inline asm
	ld.local.u32 	%r10388, [%rd6];
	ld.local.u32 	%r10389, [%rd5+12];
	// inline asm
	prmt.b32 %r16298, %r10388, %r10389, %r848;
	// inline asm
	ld.local.v2.u32 	{%r10490, %r10491}, [%rd5+8];
	// inline asm
	prmt.b32 %r16299, %r10491, %r10490, %r848;
	// inline asm
	ld.local.u32 	%r10396, [%rd5+8];
	ld.local.u32 	%r10397, [%rd5+4];
	// inline asm
	prmt.b32 %r16300, %r10396, %r10397, %r848;
	// inline asm
	ld.local.v2.u32 	{%r10492, %r10493}, [%rd5];
	// inline asm
	prmt.b32 %r16293, %r10493, %r10492, %r848;
	// inline asm
	ld.local.u32 	%r10404, [%rd5];
	ld.local.u32 	%r10405, [%rd4+12];
	// inline asm
	prmt.b32 %r16294, %r10404, %r10405, %r848;
	// inline asm
	ld.local.v2.u32 	{%r10494, %r10495}, [%rd4+8];
	// inline asm
	prmt.b32 %r16295, %r10495, %r10494, %r848;
	// inline asm
	ld.local.u32 	%r10412, [%rd4+8];
	ld.local.u32 	%r10413, [%rd4+4];
	// inline asm
	prmt.b32 %r16296, %r10412, %r10413, %r848;
	// inline asm
	ld.local.v2.u32 	{%r10496, %r10497}, [%rd4];
	// inline asm
	prmt.b32 %r16289, %r10497, %r10496, %r848;
	// inline asm
	ld.local.u32 	%r10420, [%rd4];
	ld.local.u32 	%r10421, [%rd3+12];
	// inline asm
	prmt.b32 %r16290, %r10420, %r10421, %r848;
	// inline asm
	ld.local.v2.u32 	{%r10498, %r10499}, [%rd3+8];
	// inline asm
	prmt.b32 %r16291, %r10499, %r10498, %r848;
	// inline asm
	ld.local.u32 	%r10428, [%rd3+8];
	ld.local.u32 	%r10429, [%rd3+4];
	// inline asm
	prmt.b32 %r16292, %r10428, %r10429, %r848;
	// inline asm
	ld.local.v2.u32 	{%r10500, %r10501}, [%rd3];
	// inline asm
	prmt.b32 %r16285, %r10501, %r10500, %r848;
	// inline asm
	ld.local.u32 	%r10436, [%rd3];
	ld.local.u32 	%r10437, [%rd2+12];
	// inline asm
	prmt.b32 %r16286, %r10436, %r10437, %r848;
	// inline asm
	ld.local.v2.u32 	{%r10502, %r10503}, [%rd2+8];
	// inline asm
	prmt.b32 %r16287, %r10503, %r10502, %r848;
	// inline asm
	ld.local.u32 	%r10444, [%rd2+8];
	ld.local.u32 	%r10445, [%rd2+4];
	// inline asm
	prmt.b32 %r16288, %r10444, %r10445, %r848;
	// inline asm
	ld.local.v2.u32 	{%r10504, %r10505}, [%rd2];
	// inline asm
	prmt.b32 %r10447, %r10505, %r10504, %r848;
	// inline asm
	st.local.u32 	[%rd8+12], %r10447;
	ld.local.u32 	%r10452, [%rd2];
	ld.local.u32 	%r10453, [%rd1+12];
	// inline asm
	prmt.b32 %r10451, %r10452, %r10453, %r848;
	// inline asm
	st.local.u32 	[%rd8+8], %r10451;
	ld.local.v2.u32 	{%r10506, %r10507}, [%rd1+8];
	// inline asm
	prmt.b32 %r10455, %r10507, %r10506, %r848;
	// inline asm
	st.local.u32 	[%rd8+4], %r10455;
	ld.local.u32 	%r10460, [%rd1+8];
	ld.local.u32 	%r10461, [%rd1+4];
	// inline asm
	prmt.b32 %r10459, %r10460, %r10461, %r848;
	// inline asm
	st.local.u32 	[%rd8], %r10459;
	ld.local.v2.u32 	{%r10508, %r10509}, [%rd1];
	// inline asm
	prmt.b32 %r10463, %r10509, %r10508, %r848;
	// inline asm
	st.local.u32 	[%rd7+12], %r10463;
	ld.local.u32 	%r10468, [%rd1];
	// inline asm
	prmt.b32 %r10467, %r10468, %r16283, %r848;
	// inline asm
	st.local.u32 	[%rd7+8], %r10467;
	st.local.v2.u32 	[%rd7], {%r16283, %r16283};
	st.local.u32 	[%rd6+12], %r16283;
	st.local.u32 	[%rd6+8], %r16283;
	st.local.u32 	[%rd6+4], %r16283;
	st.local.u32 	[%rd6], %r16283;
	st.local.u32 	[%rd5+12], %r16283;
	st.local.u32 	[%rd5+8], %r16283;
	st.local.u32 	[%rd5+4], %r16283;
	st.local.u32 	[%rd5], %r16283;
	st.local.u32 	[%rd4+12], %r16283;
	st.local.u32 	[%rd4+8], %r16283;
	st.local.u32 	[%rd4+4], %r16283;
	st.local.u32 	[%rd4], %r16283;
	st.local.u32 	[%rd3+12], %r16283;
	st.local.u32 	[%rd3+8], %r16283;
	st.local.u32 	[%rd3+4], %r16283;
	st.local.u32 	[%rd3], %r16283;
	st.local.u32 	[%rd2+12], %r16283;
	st.local.u32 	[%rd2+8], %r16283;
	st.local.u32 	[%rd2+4], %r16283;
	st.local.u32 	[%rd2], %r16283;
	st.local.u32 	[%rd1+12], %r16283;
	st.local.u32 	[%rd1+8], %r16283;
	mov.u64 	%rd1953, 0;
	st.local.u32 	[%rd1+4], %rd1953;
	st.local.u32 	[%rd1], %rd1953;
	mov.u32 	%r16284, %r16283;
	mov.u32 	%r16309, %r16283;
	bra.uni 	BB5_780;

BB5_712:
	setp.eq.s32	%p438, %r9492, 6;
	@%p438 bra 	BB5_773;
	bra.uni 	BB5_713;

BB5_773:
	mov.u32 	%r16283, 0;
	// inline asm
	prmt.b32 %r16290, %r16283, %r66, %r848;
	// inline asm
	ld.local.v2.u32 	{%r14108, %r14109}, [%rd8+8];
	// inline asm
	prmt.b32 %r16291, %r14109, %r14108, %r848;
	// inline asm
	ld.local.u32 	%r13958, [%rd8+8];
	ld.local.u32 	%r13959, [%rd8+4];
	// inline asm
	prmt.b32 %r16292, %r13958, %r13959, %r848;
	// inline asm
	ld.local.v2.u32 	{%r14110, %r14111}, [%rd8];
	// inline asm
	prmt.b32 %r16285, %r14111, %r14110, %r848;
	// inline asm
	ld.local.u32 	%r13966, [%rd8];
	ld.local.u32 	%r13967, [%rd7+12];
	// inline asm
	prmt.b32 %r16286, %r13966, %r13967, %r848;
	// inline asm
	ld.local.v2.u32 	{%r14112, %r14113}, [%rd7+8];
	// inline asm
	prmt.b32 %r16287, %r14113, %r14112, %r848;
	// inline asm
	ld.local.u32 	%r13974, [%rd7+8];
	ld.local.u32 	%r13975, [%rd7+4];
	// inline asm
	prmt.b32 %r16288, %r13974, %r13975, %r848;
	// inline asm
	ld.local.v2.u32 	{%r14114, %r14115}, [%rd7];
	// inline asm
	prmt.b32 %r13977, %r14115, %r14114, %r848;
	// inline asm
	st.local.u32 	[%rd8+12], %r13977;
	ld.local.u32 	%r13982, [%rd7];
	ld.local.u32 	%r13983, [%rd6+12];
	// inline asm
	prmt.b32 %r13981, %r13982, %r13983, %r848;
	// inline asm
	st.local.u32 	[%rd8+8], %r13981;
	ld.local.v2.u32 	{%r14116, %r14117}, [%rd6+8];
	// inline asm
	prmt.b32 %r13985, %r14117, %r14116, %r848;
	// inline asm
	st.local.u32 	[%rd8+4], %r13985;
	ld.local.u32 	%r13990, [%rd6+8];
	ld.local.u32 	%r13991, [%rd6+4];
	// inline asm
	prmt.b32 %r13989, %r13990, %r13991, %r848;
	// inline asm
	st.local.u32 	[%rd8], %r13989;
	ld.local.v2.u32 	{%r14118, %r14119}, [%rd6];
	// inline asm
	prmt.b32 %r13993, %r14119, %r14118, %r848;
	// inline asm
	st.local.u32 	[%rd7+12], %r13993;
	ld.local.u32 	%r13998, [%rd6];
	ld.local.u32 	%r13999, [%rd5+12];
	// inline asm
	prmt.b32 %r13997, %r13998, %r13999, %r848;
	// inline asm
	st.local.u32 	[%rd7+8], %r13997;
	ld.local.v2.u32 	{%r14120, %r14121}, [%rd5+8];
	// inline asm
	prmt.b32 %r14001, %r14121, %r14120, %r848;
	// inline asm
	st.local.u32 	[%rd7+4], %r14001;
	ld.local.u32 	%r14006, [%rd5+8];
	ld.local.u32 	%r14007, [%rd5+4];
	// inline asm
	prmt.b32 %r14005, %r14006, %r14007, %r848;
	// inline asm
	st.local.u32 	[%rd7], %r14005;
	ld.local.v2.u32 	{%r14122, %r14123}, [%rd5];
	// inline asm
	prmt.b32 %r14009, %r14123, %r14122, %r848;
	// inline asm
	st.local.u32 	[%rd6+12], %r14009;
	ld.local.u32 	%r14014, [%rd5];
	ld.local.u32 	%r14015, [%rd4+12];
	// inline asm
	prmt.b32 %r14013, %r14014, %r14015, %r848;
	// inline asm
	st.local.u32 	[%rd6+8], %r14013;
	ld.local.v2.u32 	{%r14124, %r14125}, [%rd4+8];
	// inline asm
	prmt.b32 %r14017, %r14125, %r14124, %r848;
	// inline asm
	st.local.u32 	[%rd6+4], %r14017;
	ld.local.u32 	%r14022, [%rd4+8];
	ld.local.u32 	%r14023, [%rd4+4];
	// inline asm
	prmt.b32 %r14021, %r14022, %r14023, %r848;
	// inline asm
	st.local.u32 	[%rd6], %r14021;
	ld.local.v2.u32 	{%r14126, %r14127}, [%rd4];
	// inline asm
	prmt.b32 %r14025, %r14127, %r14126, %r848;
	// inline asm
	st.local.u32 	[%rd5+12], %r14025;
	ld.local.u32 	%r14030, [%rd4];
	ld.local.u32 	%r14031, [%rd3+12];
	// inline asm
	prmt.b32 %r14029, %r14030, %r14031, %r848;
	// inline asm
	st.local.u32 	[%rd5+8], %r14029;
	ld.local.v2.u32 	{%r14128, %r14129}, [%rd3+8];
	// inline asm
	prmt.b32 %r14033, %r14129, %r14128, %r848;
	// inline asm
	st.local.u32 	[%rd5+4], %r14033;
	ld.local.u32 	%r14038, [%rd3+8];
	ld.local.u32 	%r14039, [%rd3+4];
	// inline asm
	prmt.b32 %r14037, %r14038, %r14039, %r848;
	// inline asm
	st.local.u32 	[%rd5], %r14037;
	ld.local.v2.u32 	{%r14130, %r14131}, [%rd3];
	// inline asm
	prmt.b32 %r14041, %r14131, %r14130, %r848;
	// inline asm
	st.local.u32 	[%rd4+12], %r14041;
	ld.local.u32 	%r14046, [%rd3];
	ld.local.u32 	%r14047, [%rd2+12];
	// inline asm
	prmt.b32 %r14045, %r14046, %r14047, %r848;
	// inline asm
	st.local.u32 	[%rd4+8], %r14045;
	ld.local.v2.u32 	{%r14132, %r14133}, [%rd2+8];
	// inline asm
	prmt.b32 %r14049, %r14133, %r14132, %r848;
	// inline asm
	st.local.u32 	[%rd4+4], %r14049;
	ld.local.u32 	%r14054, [%rd2+8];
	ld.local.u32 	%r14055, [%rd2+4];
	// inline asm
	prmt.b32 %r14053, %r14054, %r14055, %r848;
	// inline asm
	st.local.u32 	[%rd4], %r14053;
	ld.local.v2.u32 	{%r14134, %r14135}, [%rd2];
	// inline asm
	prmt.b32 %r14057, %r14135, %r14134, %r848;
	// inline asm
	st.local.u32 	[%rd3+12], %r14057;
	ld.local.u32 	%r14062, [%rd2];
	ld.local.u32 	%r14063, [%rd1+12];
	// inline asm
	prmt.b32 %r14061, %r14062, %r14063, %r848;
	// inline asm
	st.local.u32 	[%rd3+8], %r14061;
	ld.local.v2.u32 	{%r14136, %r14137}, [%rd1+8];
	// inline asm
	prmt.b32 %r14065, %r14137, %r14136, %r848;
	// inline asm
	st.local.u32 	[%rd3+4], %r14065;
	ld.local.u32 	%r14070, [%rd1+8];
	ld.local.u32 	%r14071, [%rd1+4];
	// inline asm
	prmt.b32 %r14069, %r14070, %r14071, %r848;
	// inline asm
	st.local.u32 	[%rd3], %r14069;
	ld.local.v2.u32 	{%r14138, %r14139}, [%rd1];
	// inline asm
	prmt.b32 %r14073, %r14139, %r14138, %r848;
	// inline asm
	st.local.u32 	[%rd2+12], %r14073;
	ld.local.u32 	%r14078, [%rd1];
	// inline asm
	prmt.b32 %r14077, %r14078, %r16283, %r848;
	// inline asm
	st.local.u32 	[%rd2+8], %r14077;
	st.local.v2.u32 	[%rd2], {%r16283, %r16283};
	st.local.u32 	[%rd1+12], %r16283;
	st.local.u32 	[%rd1+8], %r16283;
	mov.u64 	%rd1973, 0;
	st.local.u32 	[%rd1+4], %rd1973;
	st.local.u32 	[%rd1], %rd1973;
	mov.u32 	%r16284, %r16283;
	mov.u32 	%r16289, %r16283;
	bra.uni 	BB5_775;

BB5_743:
	setp.eq.s32	%p415, %r9492, 22;
	@%p415 bra 	BB5_765;
	bra.uni 	BB5_744;

BB5_765:
	mov.u32 	%r16283, 0;
	// inline asm
	prmt.b32 %r16306, %r16283, %r66, %r848;
	// inline asm
	ld.local.v2.u32 	{%r11172, %r11173}, [%rd8+8];
	// inline asm
	prmt.b32 %r16307, %r11173, %r11172, %r848;
	// inline asm
	ld.local.u32 	%r11038, [%rd8+8];
	ld.local.u32 	%r11039, [%rd8+4];
	// inline asm
	prmt.b32 %r16308, %r11038, %r11039, %r848;
	// inline asm
	ld.local.v2.u32 	{%r11174, %r11175}, [%rd8];
	// inline asm
	prmt.b32 %r16301, %r11175, %r11174, %r848;
	// inline asm
	ld.local.u32 	%r11046, [%rd8];
	ld.local.u32 	%r11047, [%rd7+12];
	// inline asm
	prmt.b32 %r16302, %r11046, %r11047, %r848;
	// inline asm
	ld.local.v2.u32 	{%r11176, %r11177}, [%rd7+8];
	// inline asm
	prmt.b32 %r16303, %r11177, %r11176, %r848;
	// inline asm
	ld.local.u32 	%r11054, [%rd7+8];
	ld.local.u32 	%r11055, [%rd7+4];
	// inline asm
	prmt.b32 %r16304, %r11054, %r11055, %r848;
	// inline asm
	ld.local.v2.u32 	{%r11178, %r11179}, [%rd7];
	// inline asm
	prmt.b32 %r16297, %r11179, %r11178, %r848;
	// inline asm
	ld.local.u32 	%r11062, [%rd7];
	ld.local.u32 	%r11063, [%rd6+12];
	// inline asm
	prmt.b32 %r16298, %r11062, %r11063, %r848;
	// inline asm
	ld.local.v2.u32 	{%r11180, %r11181}, [%rd6+8];
	// inline asm
	prmt.b32 %r16299, %r11181, %r11180, %r848;
	// inline asm
	ld.local.u32 	%r11070, [%rd6+8];
	ld.local.u32 	%r11071, [%rd6+4];
	// inline asm
	prmt.b32 %r16300, %r11070, %r11071, %r848;
	// inline asm
	ld.local.v2.u32 	{%r11182, %r11183}, [%rd6];
	// inline asm
	prmt.b32 %r16293, %r11183, %r11182, %r848;
	// inline asm
	ld.local.u32 	%r11078, [%rd6];
	ld.local.u32 	%r11079, [%rd5+12];
	// inline asm
	prmt.b32 %r16294, %r11078, %r11079, %r848;
	// inline asm
	ld.local.v2.u32 	{%r11184, %r11185}, [%rd5+8];
	// inline asm
	prmt.b32 %r16295, %r11185, %r11184, %r848;
	// inline asm
	ld.local.u32 	%r11086, [%rd5+8];
	ld.local.u32 	%r11087, [%rd5+4];
	// inline asm
	prmt.b32 %r16296, %r11086, %r11087, %r848;
	// inline asm
	ld.local.v2.u32 	{%r11186, %r11187}, [%rd5];
	// inline asm
	prmt.b32 %r16289, %r11187, %r11186, %r848;
	// inline asm
	ld.local.u32 	%r11094, [%rd5];
	ld.local.u32 	%r11095, [%rd4+12];
	// inline asm
	prmt.b32 %r16290, %r11094, %r11095, %r848;
	// inline asm
	ld.local.v2.u32 	{%r11188, %r11189}, [%rd4+8];
	// inline asm
	prmt.b32 %r16291, %r11189, %r11188, %r848;
	// inline asm
	ld.local.u32 	%r11102, [%rd4+8];
	ld.local.u32 	%r11103, [%rd4+4];
	// inline asm
	prmt.b32 %r16292, %r11102, %r11103, %r848;
	// inline asm
	ld.local.v2.u32 	{%r11190, %r11191}, [%rd4];
	// inline asm
	prmt.b32 %r16285, %r11191, %r11190, %r848;
	// inline asm
	ld.local.u32 	%r11110, [%rd4];
	ld.local.u32 	%r11111, [%rd3+12];
	// inline asm
	prmt.b32 %r16286, %r11110, %r11111, %r848;
	// inline asm
	ld.local.v2.u32 	{%r11192, %r11193}, [%rd3+8];
	// inline asm
	prmt.b32 %r16287, %r11193, %r11192, %r848;
	// inline asm
	ld.local.u32 	%r11118, [%rd3+8];
	ld.local.u32 	%r11119, [%rd3+4];
	// inline asm
	prmt.b32 %r16288, %r11118, %r11119, %r848;
	// inline asm
	ld.local.v2.u32 	{%r11194, %r11195}, [%rd3];
	// inline asm
	prmt.b32 %r11121, %r11195, %r11194, %r848;
	// inline asm
	st.local.u32 	[%rd8+12], %r11121;
	ld.local.u32 	%r11126, [%rd3];
	ld.local.u32 	%r11127, [%rd2+12];
	// inline asm
	prmt.b32 %r11125, %r11126, %r11127, %r848;
	// inline asm
	st.local.u32 	[%rd8+8], %r11125;
	ld.local.v2.u32 	{%r11196, %r11197}, [%rd2+8];
	// inline asm
	prmt.b32 %r11129, %r11197, %r11196, %r848;
	// inline asm
	st.local.u32 	[%rd8+4], %r11129;
	ld.local.u32 	%r11134, [%rd2+8];
	ld.local.u32 	%r11135, [%rd2+4];
	// inline asm
	prmt.b32 %r11133, %r11134, %r11135, %r848;
	// inline asm
	st.local.u32 	[%rd8], %r11133;
	ld.local.v2.u32 	{%r11198, %r11199}, [%rd2];
	// inline asm
	prmt.b32 %r11137, %r11199, %r11198, %r848;
	// inline asm
	st.local.u32 	[%rd7+12], %r11137;
	ld.local.u32 	%r11142, [%rd2];
	ld.local.u32 	%r11143, [%rd1+12];
	// inline asm
	prmt.b32 %r11141, %r11142, %r11143, %r848;
	// inline asm
	st.local.u32 	[%rd7+8], %r11141;
	ld.local.v2.u32 	{%r11200, %r11201}, [%rd1+8];
	// inline asm
	prmt.b32 %r11145, %r11201, %r11200, %r848;
	// inline asm
	st.local.u32 	[%rd7+4], %r11145;
	ld.local.u32 	%r11150, [%rd1+8];
	ld.local.u32 	%r11151, [%rd1+4];
	// inline asm
	prmt.b32 %r11149, %r11150, %r11151, %r848;
	// inline asm
	st.local.u32 	[%rd7], %r11149;
	ld.local.v2.u32 	{%r11202, %r11203}, [%rd1];
	// inline asm
	prmt.b32 %r11153, %r11203, %r11202, %r848;
	// inline asm
	st.local.u32 	[%rd6+12], %r11153;
	ld.local.u32 	%r11158, [%rd1];
	// inline asm
	prmt.b32 %r11157, %r11158, %r16283, %r848;
	// inline asm
	st.local.u32 	[%rd6+8], %r11157;
	st.local.v2.u32 	[%rd6], {%r16283, %r16283};
	st.local.u32 	[%rd5+12], %r16283;
	st.local.u32 	[%rd5+8], %r16283;
	st.local.u32 	[%rd5+4], %r16283;
	st.local.u32 	[%rd5], %r16283;
	st.local.u32 	[%rd4+12], %r16283;
	st.local.u32 	[%rd4+8], %r16283;
	st.local.u32 	[%rd4+4], %r16283;
	st.local.u32 	[%rd4], %r16283;
	st.local.u32 	[%rd3+12], %r16283;
	st.local.u32 	[%rd3+8], %r16283;
	st.local.u32 	[%rd3+4], %r16283;
	st.local.u32 	[%rd3], %r16283;
	st.local.u32 	[%rd2+12], %r16283;
	st.local.u32 	[%rd2+8], %r16283;
	st.local.u32 	[%rd2+4], %r16283;
	st.local.u32 	[%rd2], %r16283;
	st.local.u32 	[%rd1+12], %r16283;
	st.local.u32 	[%rd1+8], %r16283;
	mov.u64 	%rd1957, 0;
	st.local.u32 	[%rd1+4], %rd1957;
	st.local.u32 	[%rd1], %rd1957;
	mov.u32 	%r16284, %r16283;
	mov.u32 	%r16305, %r16283;
	bra.uni 	BB5_779;

BB5_727:
	setp.eq.s32	%p427, %r9492, 14;
	@%p427 bra 	BB5_769;
	bra.uni 	BB5_728;

BB5_769:
	mov.u32 	%r16283, 0;
	// inline asm
	prmt.b32 %r16298, %r16283, %r66, %r848;
	// inline asm
	ld.local.v2.u32 	{%r12608, %r12609}, [%rd8+8];
	// inline asm
	prmt.b32 %r16299, %r12609, %r12608, %r848;
	// inline asm
	ld.local.u32 	%r12466, [%rd8+8];
	ld.local.u32 	%r12467, [%rd8+4];
	// inline asm
	prmt.b32 %r16300, %r12466, %r12467, %r848;
	// inline asm
	ld.local.v2.u32 	{%r12610, %r12611}, [%rd8];
	// inline asm
	prmt.b32 %r16293, %r12611, %r12610, %r848;
	// inline asm
	ld.local.u32 	%r12474, [%rd8];
	ld.local.u32 	%r12475, [%rd7+12];
	// inline asm
	prmt.b32 %r16294, %r12474, %r12475, %r848;
	// inline asm
	ld.local.v2.u32 	{%r12612, %r12613}, [%rd7+8];
	// inline asm
	prmt.b32 %r16295, %r12613, %r12612, %r848;
	// inline asm
	ld.local.u32 	%r12482, [%rd7+8];
	ld.local.u32 	%r12483, [%rd7+4];
	// inline asm
	prmt.b32 %r16296, %r12482, %r12483, %r848;
	// inline asm
	ld.local.v2.u32 	{%r12614, %r12615}, [%rd7];
	// inline asm
	prmt.b32 %r16289, %r12615, %r12614, %r848;
	// inline asm
	ld.local.u32 	%r12490, [%rd7];
	ld.local.u32 	%r12491, [%rd6+12];
	// inline asm
	prmt.b32 %r16290, %r12490, %r12491, %r848;
	// inline asm
	ld.local.v2.u32 	{%r12616, %r12617}, [%rd6+8];
	// inline asm
	prmt.b32 %r16291, %r12617, %r12616, %r848;
	// inline asm
	ld.local.u32 	%r12498, [%rd6+8];
	ld.local.u32 	%r12499, [%rd6+4];
	// inline asm
	prmt.b32 %r16292, %r12498, %r12499, %r848;
	// inline asm
	ld.local.v2.u32 	{%r12618, %r12619}, [%rd6];
	// inline asm
	prmt.b32 %r16285, %r12619, %r12618, %r848;
	// inline asm
	ld.local.u32 	%r12506, [%rd6];
	ld.local.u32 	%r12507, [%rd5+12];
	// inline asm
	prmt.b32 %r16286, %r12506, %r12507, %r848;
	// inline asm
	ld.local.v2.u32 	{%r12620, %r12621}, [%rd5+8];
	// inline asm
	prmt.b32 %r16287, %r12621, %r12620, %r848;
	// inline asm
	ld.local.u32 	%r12514, [%rd5+8];
	ld.local.u32 	%r12515, [%rd5+4];
	// inline asm
	prmt.b32 %r16288, %r12514, %r12515, %r848;
	// inline asm
	ld.local.v2.u32 	{%r12622, %r12623}, [%rd5];
	// inline asm
	prmt.b32 %r12517, %r12623, %r12622, %r848;
	// inline asm
	st.local.u32 	[%rd8+12], %r12517;
	ld.local.u32 	%r12522, [%rd5];
	ld.local.u32 	%r12523, [%rd4+12];
	// inline asm
	prmt.b32 %r12521, %r12522, %r12523, %r848;
	// inline asm
	st.local.u32 	[%rd8+8], %r12521;
	ld.local.v2.u32 	{%r12624, %r12625}, [%rd4+8];
	// inline asm
	prmt.b32 %r12525, %r12625, %r12624, %r848;
	// inline asm
	st.local.u32 	[%rd8+4], %r12525;
	ld.local.u32 	%r12530, [%rd4+8];
	ld.local.u32 	%r12531, [%rd4+4];
	// inline asm
	prmt.b32 %r12529, %r12530, %r12531, %r848;
	// inline asm
	st.local.u32 	[%rd8], %r12529;
	ld.local.v2.u32 	{%r12626, %r12627}, [%rd4];
	// inline asm
	prmt.b32 %r12533, %r12627, %r12626, %r848;
	// inline asm
	st.local.u32 	[%rd7+12], %r12533;
	ld.local.u32 	%r12538, [%rd4];
	ld.local.u32 	%r12539, [%rd3+12];
	// inline asm
	prmt.b32 %r12537, %r12538, %r12539, %r848;
	// inline asm
	st.local.u32 	[%rd7+8], %r12537;
	ld.local.v2.u32 	{%r12628, %r12629}, [%rd3+8];
	// inline asm
	prmt.b32 %r12541, %r12629, %r12628, %r848;
	// inline asm
	st.local.u32 	[%rd7+4], %r12541;
	ld.local.u32 	%r12546, [%rd3+8];
	ld.local.u32 	%r12547, [%rd3+4];
	// inline asm
	prmt.b32 %r12545, %r12546, %r12547, %r848;
	// inline asm
	st.local.u32 	[%rd7], %r12545;
	ld.local.v2.u32 	{%r12630, %r12631}, [%rd3];
	// inline asm
	prmt.b32 %r12549, %r12631, %r12630, %r848;
	// inline asm
	st.local.u32 	[%rd6+12], %r12549;
	ld.local.u32 	%r12554, [%rd3];
	ld.local.u32 	%r12555, [%rd2+12];
	// inline asm
	prmt.b32 %r12553, %r12554, %r12555, %r848;
	// inline asm
	st.local.u32 	[%rd6+8], %r12553;
	ld.local.v2.u32 	{%r12632, %r12633}, [%rd2+8];
	// inline asm
	prmt.b32 %r12557, %r12633, %r12632, %r848;
	// inline asm
	st.local.u32 	[%rd6+4], %r12557;
	ld.local.u32 	%r12562, [%rd2+8];
	ld.local.u32 	%r12563, [%rd2+4];
	// inline asm
	prmt.b32 %r12561, %r12562, %r12563, %r848;
	// inline asm
	st.local.u32 	[%rd6], %r12561;
	ld.local.v2.u32 	{%r12634, %r12635}, [%rd2];
	// inline asm
	prmt.b32 %r12565, %r12635, %r12634, %r848;
	// inline asm
	st.local.u32 	[%rd5+12], %r12565;
	ld.local.u32 	%r12570, [%rd2];
	ld.local.u32 	%r12571, [%rd1+12];
	// inline asm
	prmt.b32 %r12569, %r12570, %r12571, %r848;
	// inline asm
	st.local.u32 	[%rd5+8], %r12569;
	ld.local.v2.u32 	{%r12636, %r12637}, [%rd1+8];
	// inline asm
	prmt.b32 %r12573, %r12637, %r12636, %r848;
	// inline asm
	st.local.u32 	[%rd5+4], %r12573;
	ld.local.u32 	%r12578, [%rd1+8];
	ld.local.u32 	%r12579, [%rd1+4];
	// inline asm
	prmt.b32 %r12577, %r12578, %r12579, %r848;
	// inline asm
	st.local.u32 	[%rd5], %r12577;
	ld.local.v2.u32 	{%r12638, %r12639}, [%rd1];
	// inline asm
	prmt.b32 %r12581, %r12639, %r12638, %r848;
	// inline asm
	st.local.u32 	[%rd4+12], %r12581;
	ld.local.u32 	%r12586, [%rd1];
	// inline asm
	prmt.b32 %r12585, %r12586, %r16283, %r848;
	// inline asm
	st.local.u32 	[%rd4+8], %r12585;
	st.local.v2.u32 	[%rd4], {%r16283, %r16283};
	st.local.u32 	[%rd3+12], %r16283;
	st.local.u32 	[%rd3+8], %r16283;
	st.local.u32 	[%rd3+4], %r16283;
	st.local.u32 	[%rd3], %r16283;
	st.local.u32 	[%rd2+12], %r16283;
	st.local.u32 	[%rd2+8], %r16283;
	st.local.u32 	[%rd2+4], %r16283;
	st.local.u32 	[%rd2], %r16283;
	st.local.u32 	[%rd1+12], %r16283;
	st.local.u32 	[%rd1+8], %r16283;
	mov.u64 	%rd1965, 0;
	st.local.u32 	[%rd1+4], %rd1965;
	st.local.u32 	[%rd1], %rd1965;
	mov.u32 	%r16284, %r16283;
	mov.u32 	%r16297, %r16283;
	bra.uni 	BB5_777;

BB5_758:
	setp.eq.s32	%p404, %r9492, 30;
	@%p404 bra 	BB5_761;
	bra.uni 	BB5_759;

BB5_761:
	mov.u32 	%r16283, 0;
	// inline asm
	prmt.b32 %r16314, %r16283, %r66, %r848;
	// inline asm
	ld.local.v2.u32 	{%r9800, %r9801}, [%rd8+8];
	// inline asm
	prmt.b32 %r16315, %r9801, %r9800, %r848;
	// inline asm
	ld.local.u32 	%r9674, [%rd8+8];
	ld.local.u32 	%r9675, [%rd8+4];
	// inline asm
	prmt.b32 %r16316, %r9674, %r9675, %r848;
	// inline asm
	ld.local.v2.u32 	{%r9802, %r9803}, [%rd8];
	// inline asm
	prmt.b32 %r16309, %r9803, %r9802, %r848;
	// inline asm
	ld.local.u32 	%r9682, [%rd8];
	ld.local.u32 	%r9683, [%rd7+12];
	// inline asm
	prmt.b32 %r16310, %r9682, %r9683, %r848;
	// inline asm
	ld.local.v2.u32 	{%r9804, %r9805}, [%rd7+8];
	// inline asm
	prmt.b32 %r16311, %r9805, %r9804, %r848;
	// inline asm
	ld.local.u32 	%r9690, [%rd7+8];
	ld.local.u32 	%r9691, [%rd7+4];
	// inline asm
	prmt.b32 %r16312, %r9690, %r9691, %r848;
	// inline asm
	ld.local.v2.u32 	{%r9806, %r9807}, [%rd7];
	// inline asm
	prmt.b32 %r16305, %r9807, %r9806, %r848;
	// inline asm
	ld.local.u32 	%r9698, [%rd7];
	ld.local.u32 	%r9699, [%rd6+12];
	// inline asm
	prmt.b32 %r16306, %r9698, %r9699, %r848;
	// inline asm
	ld.local.v2.u32 	{%r9808, %r9809}, [%rd6+8];
	// inline asm
	prmt.b32 %r16307, %r9809, %r9808, %r848;
	// inline asm
	ld.local.u32 	%r9706, [%rd6+8];
	ld.local.u32 	%r9707, [%rd6+4];
	// inline asm
	prmt.b32 %r16308, %r9706, %r9707, %r848;
	// inline asm
	ld.local.v2.u32 	{%r9810, %r9811}, [%rd6];
	// inline asm
	prmt.b32 %r16301, %r9811, %r9810, %r848;
	// inline asm
	ld.local.u32 	%r9714, [%rd6];
	ld.local.u32 	%r9715, [%rd5+12];
	// inline asm
	prmt.b32 %r16302, %r9714, %r9715, %r848;
	// inline asm
	ld.local.v2.u32 	{%r9812, %r9813}, [%rd5+8];
	// inline asm
	prmt.b32 %r16303, %r9813, %r9812, %r848;
	// inline asm
	ld.local.u32 	%r9722, [%rd5+8];
	ld.local.u32 	%r9723, [%rd5+4];
	// inline asm
	prmt.b32 %r16304, %r9722, %r9723, %r848;
	// inline asm
	ld.local.v2.u32 	{%r9814, %r9815}, [%rd5];
	// inline asm
	prmt.b32 %r16297, %r9815, %r9814, %r848;
	// inline asm
	ld.local.u32 	%r9730, [%rd5];
	ld.local.u32 	%r9731, [%rd4+12];
	// inline asm
	prmt.b32 %r16298, %r9730, %r9731, %r848;
	// inline asm
	ld.local.v2.u32 	{%r9816, %r9817}, [%rd4+8];
	// inline asm
	prmt.b32 %r16299, %r9817, %r9816, %r848;
	// inline asm
	ld.local.u32 	%r9738, [%rd4+8];
	ld.local.u32 	%r9739, [%rd4+4];
	// inline asm
	prmt.b32 %r16300, %r9738, %r9739, %r848;
	// inline asm
	ld.local.v2.u32 	{%r9818, %r9819}, [%rd4];
	// inline asm
	prmt.b32 %r16293, %r9819, %r9818, %r848;
	// inline asm
	ld.local.u32 	%r9746, [%rd4];
	ld.local.u32 	%r9747, [%rd3+12];
	// inline asm
	prmt.b32 %r16294, %r9746, %r9747, %r848;
	// inline asm
	ld.local.v2.u32 	{%r9820, %r9821}, [%rd3+8];
	// inline asm
	prmt.b32 %r16295, %r9821, %r9820, %r848;
	// inline asm
	ld.local.u32 	%r9754, [%rd3+8];
	ld.local.u32 	%r9755, [%rd3+4];
	// inline asm
	prmt.b32 %r16296, %r9754, %r9755, %r848;
	// inline asm
	ld.local.v2.u32 	{%r9822, %r9823}, [%rd3];
	// inline asm
	prmt.b32 %r16289, %r9823, %r9822, %r848;
	// inline asm
	ld.local.u32 	%r9762, [%rd3];
	ld.local.u32 	%r9763, [%rd2+12];
	// inline asm
	prmt.b32 %r16290, %r9762, %r9763, %r848;
	// inline asm
	ld.local.v2.u32 	{%r9824, %r9825}, [%rd2+8];
	// inline asm
	prmt.b32 %r16291, %r9825, %r9824, %r848;
	// inline asm
	ld.local.u32 	%r9770, [%rd2+8];
	ld.local.u32 	%r9771, [%rd2+4];
	// inline asm
	prmt.b32 %r16292, %r9770, %r9771, %r848;
	// inline asm
	ld.local.v2.u32 	{%r9826, %r9827}, [%rd2];
	// inline asm
	prmt.b32 %r16285, %r9827, %r9826, %r848;
	// inline asm
	ld.local.u32 	%r9778, [%rd2];
	ld.local.u32 	%r9779, [%rd1+12];
	// inline asm
	prmt.b32 %r16286, %r9778, %r9779, %r848;
	// inline asm
	ld.local.v2.u32 	{%r9828, %r9829}, [%rd1+8];
	// inline asm
	prmt.b32 %r16287, %r9829, %r9828, %r848;
	// inline asm
	ld.local.u32 	%r9786, [%rd1+8];
	ld.local.u32 	%r9787, [%rd1+4];
	// inline asm
	prmt.b32 %r16288, %r9786, %r9787, %r848;
	// inline asm
	ld.local.v2.u32 	{%r9830, %r9831}, [%rd1];
	// inline asm
	prmt.b32 %r9789, %r9831, %r9830, %r848;
	// inline asm
	st.local.u32 	[%rd8+12], %r9789;
	ld.local.u32 	%r9794, [%rd1];
	// inline asm
	prmt.b32 %r9793, %r9794, %r16283, %r848;
	// inline asm
	st.local.u32 	[%rd8+8], %r9793;
	st.local.v2.u32 	[%rd8], {%r16283, %r16283};
	st.local.u32 	[%rd7+12], %r16283;
	st.local.u32 	[%rd7+8], %r16283;
	st.local.u32 	[%rd7+4], %r16283;
	st.local.u32 	[%rd7], %r16283;
	st.local.u32 	[%rd6+12], %r16283;
	st.local.u32 	[%rd6+8], %r16283;
	st.local.u32 	[%rd6+4], %r16283;
	st.local.u32 	[%rd6], %r16283;
	st.local.u32 	[%rd5+12], %r16283;
	st.local.u32 	[%rd5+8], %r16283;
	st.local.u32 	[%rd5+4], %r16283;
	st.local.u32 	[%rd5], %r16283;
	st.local.u32 	[%rd4+12], %r16283;
	st.local.u32 	[%rd4+8], %r16283;
	st.local.u32 	[%rd4+4], %r16283;
	st.local.u32 	[%rd4], %r16283;
	st.local.u32 	[%rd3+12], %r16283;
	st.local.u32 	[%rd3+8], %r16283;
	st.local.u32 	[%rd3+4], %r16283;
	st.local.u32 	[%rd3], %r16283;
	st.local.u32 	[%rd2+12], %r16283;
	st.local.u32 	[%rd2+8], %r16283;
	st.local.u32 	[%rd2+4], %r16283;
	st.local.u32 	[%rd2], %r16283;
	st.local.u32 	[%rd1+12], %r16283;
	st.local.u32 	[%rd1+8], %r16283;
	mov.u64 	%rd1949, 0;
	st.local.u32 	[%rd1+4], %rd1949;
	st.local.u32 	[%rd1], %rd1949;
	mov.u32 	%r16284, %r16283;
	mov.u32 	%r16313, %r16283;
	bra.uni 	BB5_783;

BB5_702:
	setp.eq.s32	%p446, %r9492, 1;
	mov.u32 	%r16286, %r16285;
	mov.u32 	%r16287, %r16285;
	mov.u32 	%r16288, %r16285;
	mov.u32 	%r16289, %r16285;
	mov.u32 	%r16290, %r16285;
	mov.u32 	%r16291, %r16285;
	mov.u32 	%r16292, %r16285;
	mov.u32 	%r16293, %r16285;
	mov.u32 	%r16294, %r16285;
	mov.u32 	%r16295, %r16285;
	mov.u32 	%r16296, %r16285;
	mov.u32 	%r16297, %r16285;
	mov.u32 	%r16298, %r16285;
	mov.u32 	%r16299, %r16285;
	mov.u32 	%r16300, %r16285;
	mov.u32 	%r16301, %r16285;
	mov.u32 	%r16302, %r16285;
	mov.u32 	%r16303, %r16285;
	mov.u32 	%r16304, %r16285;
	mov.u32 	%r16305, %r16285;
	mov.u32 	%r16306, %r16285;
	mov.u32 	%r16307, %r16285;
	mov.u32 	%r16308, %r16285;
	mov.u32 	%r16309, %r16285;
	mov.u32 	%r16310, %r16285;
	mov.u32 	%r16311, %r16285;
	mov.u32 	%r16312, %r16285;
	mov.u32 	%r16313, %r16285;
	mov.u32 	%r16314, %r16285;
	mov.u32 	%r16315, %r16285;
	mov.u32 	%r16316, %r16285;
	@%p446 bra 	BB5_703;
	bra.uni 	BB5_783;

BB5_703:
	mov.u32 	%r16284, 0;
	// inline asm
	prmt.b32 %r16287, %r16284, %r66, %r848;
	// inline asm
	ld.local.v2.u32 	{%r15077, %r15078}, [%rd8+8];
	// inline asm
	prmt.b32 %r16288, %r15078, %r15077, %r848;
	// inline asm
	ld.local.u32 	%r14923, [%rd8+8];
	ld.local.u32 	%r14924, [%rd8+4];
	// inline asm
	prmt.b32 %r14922, %r14923, %r14924, %r848;
	// inline asm
	st.local.u32 	[%rd8+12], %r14922;
	ld.local.v2.u32 	{%r15079, %r15080}, [%rd8];
	// inline asm
	prmt.b32 %r14926, %r15080, %r15079, %r848;
	// inline asm
	st.local.u32 	[%rd8+8], %r14926;
	ld.local.u32 	%r14931, [%rd8];
	ld.local.u32 	%r14932, [%rd7+12];
	// inline asm
	prmt.b32 %r14930, %r14931, %r14932, %r848;
	// inline asm
	st.local.u32 	[%rd8+4], %r14930;
	ld.local.v2.u32 	{%r15081, %r15082}, [%rd7+8];
	// inline asm
	prmt.b32 %r14934, %r15082, %r15081, %r848;
	// inline asm
	st.local.u32 	[%rd8], %r14934;
	ld.local.u32 	%r14939, [%rd7+8];
	ld.local.u32 	%r14940, [%rd7+4];
	// inline asm
	prmt.b32 %r14938, %r14939, %r14940, %r848;
	// inline asm
	st.local.u32 	[%rd7+12], %r14938;
	ld.local.v2.u32 	{%r15083, %r15084}, [%rd7];
	// inline asm
	prmt.b32 %r14942, %r15084, %r15083, %r848;
	// inline asm
	st.local.u32 	[%rd7+8], %r14942;
	ld.local.u32 	%r14947, [%rd7];
	ld.local.u32 	%r14948, [%rd6+12];
	// inline asm
	prmt.b32 %r14946, %r14947, %r14948, %r848;
	// inline asm
	st.local.u32 	[%rd7+4], %r14946;
	ld.local.v2.u32 	{%r15085, %r15086}, [%rd6+8];
	// inline asm
	prmt.b32 %r14950, %r15086, %r15085, %r848;
	// inline asm
	st.local.u32 	[%rd7], %r14950;
	ld.local.u32 	%r14955, [%rd6+8];
	ld.local.u32 	%r14956, [%rd6+4];
	// inline asm
	prmt.b32 %r14954, %r14955, %r14956, %r848;
	// inline asm
	st.local.u32 	[%rd6+12], %r14954;
	ld.local.v2.u32 	{%r15087, %r15088}, [%rd6];
	// inline asm
	prmt.b32 %r14958, %r15088, %r15087, %r848;
	// inline asm
	st.local.u32 	[%rd6+8], %r14958;
	ld.local.u32 	%r14963, [%rd6];
	ld.local.u32 	%r14964, [%rd5+12];
	// inline asm
	prmt.b32 %r14962, %r14963, %r14964, %r848;
	// inline asm
	st.local.u32 	[%rd6+4], %r14962;
	ld.local.v2.u32 	{%r15089, %r15090}, [%rd5+8];
	// inline asm
	prmt.b32 %r14966, %r15090, %r15089, %r848;
	// inline asm
	st.local.u32 	[%rd6], %r14966;
	ld.local.u32 	%r14971, [%rd5+8];
	ld.local.u32 	%r14972, [%rd5+4];
	// inline asm
	prmt.b32 %r14970, %r14971, %r14972, %r848;
	// inline asm
	st.local.u32 	[%rd5+12], %r14970;
	ld.local.v2.u32 	{%r15091, %r15092}, [%rd5];
	// inline asm
	prmt.b32 %r14974, %r15092, %r15091, %r848;
	// inline asm
	st.local.u32 	[%rd5+8], %r14974;
	ld.local.u32 	%r14979, [%rd5];
	ld.local.u32 	%r14980, [%rd4+12];
	// inline asm
	prmt.b32 %r14978, %r14979, %r14980, %r848;
	// inline asm
	st.local.u32 	[%rd5+4], %r14978;
	ld.local.v2.u32 	{%r15093, %r15094}, [%rd4+8];
	// inline asm
	prmt.b32 %r14982, %r15094, %r15093, %r848;
	// inline asm
	st.local.u32 	[%rd5], %r14982;
	ld.local.u32 	%r14987, [%rd4+8];
	ld.local.u32 	%r14988, [%rd4+4];
	// inline asm
	prmt.b32 %r14986, %r14987, %r14988, %r848;
	// inline asm
	st.local.u32 	[%rd4+12], %r14986;
	ld.local.v2.u32 	{%r15095, %r15096}, [%rd4];
	// inline asm
	prmt.b32 %r14990, %r15096, %r15095, %r848;
	// inline asm
	st.local.u32 	[%rd4+8], %r14990;
	ld.local.u32 	%r14995, [%rd4];
	ld.local.u32 	%r14996, [%rd3+12];
	// inline asm
	prmt.b32 %r14994, %r14995, %r14996, %r848;
	// inline asm
	st.local.u32 	[%rd4+4], %r14994;
	ld.local.v2.u32 	{%r15097, %r15098}, [%rd3+8];
	// inline asm
	prmt.b32 %r14998, %r15098, %r15097, %r848;
	// inline asm
	st.local.u32 	[%rd4], %r14998;
	ld.local.u32 	%r15003, [%rd3+8];
	ld.local.u32 	%r15004, [%rd3+4];
	// inline asm
	prmt.b32 %r15002, %r15003, %r15004, %r848;
	// inline asm
	st.local.u32 	[%rd3+12], %r15002;
	ld.local.v2.u32 	{%r15099, %r15100}, [%rd3];
	// inline asm
	prmt.b32 %r15006, %r15100, %r15099, %r848;
	// inline asm
	st.local.u32 	[%rd3+8], %r15006;
	ld.local.u32 	%r15011, [%rd3];
	ld.local.u32 	%r15012, [%rd2+12];
	// inline asm
	prmt.b32 %r15010, %r15011, %r15012, %r848;
	// inline asm
	st.local.u32 	[%rd3+4], %r15010;
	ld.local.v2.u32 	{%r15101, %r15102}, [%rd2+8];
	// inline asm
	prmt.b32 %r15014, %r15102, %r15101, %r848;
	// inline asm
	st.local.u32 	[%rd3], %r15014;
	ld.local.u32 	%r15019, [%rd2+8];
	ld.local.u32 	%r15020, [%rd2+4];
	// inline asm
	prmt.b32 %r15018, %r15019, %r15020, %r848;
	// inline asm
	st.local.u32 	[%rd2+12], %r15018;
	ld.local.v2.u32 	{%r15103, %r15104}, [%rd2];
	// inline asm
	prmt.b32 %r15022, %r15104, %r15103, %r848;
	// inline asm
	st.local.u32 	[%rd2+8], %r15022;
	ld.local.u32 	%r15027, [%rd2];
	ld.local.u32 	%r15028, [%rd1+12];
	// inline asm
	prmt.b32 %r15026, %r15027, %r15028, %r848;
	// inline asm
	st.local.u32 	[%rd2+4], %r15026;
	ld.local.v2.u32 	{%r15105, %r15106}, [%rd1+8];
	// inline asm
	prmt.b32 %r15030, %r15106, %r15105, %r848;
	// inline asm
	st.local.u32 	[%rd2], %r15030;
	ld.local.u32 	%r15035, [%rd1+8];
	ld.local.u32 	%r15036, [%rd1+4];
	// inline asm
	prmt.b32 %r15034, %r15035, %r15036, %r848;
	// inline asm
	st.local.u32 	[%rd1+12], %r15034;
	ld.local.v2.u32 	{%r15107, %r15108}, [%rd1];
	// inline asm
	prmt.b32 %r15038, %r15108, %r15107, %r848;
	// inline asm
	st.local.u32 	[%rd1+8], %r15038;
	ld.local.u32 	%r15043, [%rd1];
	// inline asm
	prmt.b32 %r16283, %r15043, %r16284, %r848;
	// inline asm
	st.local.v2.u32 	[%rd1], {%r16284, %r16283};
	mov.u32 	%r16285, %r16284;
	mov.u32 	%r16286, %r16284;
	mov.u32 	%r16289, %r16284;
	mov.u32 	%r16290, %r16284;
	mov.u32 	%r16291, %r16284;
	mov.u32 	%r16292, %r16284;
	mov.u32 	%r16293, %r16284;
	mov.u32 	%r16294, %r16284;
	mov.u32 	%r16295, %r16284;
	mov.u32 	%r16296, %r16284;
	mov.u32 	%r16297, %r16284;
	mov.u32 	%r16298, %r16284;
	mov.u32 	%r16299, %r16284;
	mov.u32 	%r16300, %r16284;
	mov.u32 	%r16301, %r16284;
	mov.u32 	%r16302, %r16284;
	mov.u32 	%r16303, %r16284;
	mov.u32 	%r16304, %r16284;
	mov.u32 	%r16305, %r16284;
	mov.u32 	%r16306, %r16284;
	mov.u32 	%r16307, %r16284;
	mov.u32 	%r16308, %r16284;
	mov.u32 	%r16309, %r16284;
	mov.u32 	%r16310, %r16284;
	mov.u32 	%r16311, %r16284;
	mov.u32 	%r16312, %r16284;
	mov.u32 	%r16313, %r16284;
	mov.u32 	%r16314, %r16284;
	mov.u32 	%r16315, %r16284;
	mov.u32 	%r16316, %r16284;
	bra.uni 	BB5_783;

BB5_734:
	setp.eq.s32	%p423, %r9492, 17;
	mov.u32 	%r16286, %r16285;
	mov.u32 	%r16287, %r16285;
	mov.u32 	%r16288, %r16285;
	mov.u32 	%r16289, %r16285;
	mov.u32 	%r16290, %r16285;
	mov.u32 	%r16291, %r16285;
	mov.u32 	%r16292, %r16285;
	mov.u32 	%r16293, %r16285;
	mov.u32 	%r16294, %r16285;
	mov.u32 	%r16295, %r16285;
	mov.u32 	%r16296, %r16285;
	mov.u32 	%r16297, %r16285;
	mov.u32 	%r16298, %r16285;
	mov.u32 	%r16299, %r16285;
	mov.u32 	%r16300, %r16285;
	mov.u32 	%r16301, %r16285;
	mov.u32 	%r16302, %r16285;
	mov.u32 	%r16303, %r16285;
	mov.u32 	%r16304, %r16285;
	mov.u32 	%r16305, %r16285;
	mov.u32 	%r16306, %r16285;
	mov.u32 	%r16307, %r16285;
	mov.u32 	%r16308, %r16285;
	mov.u32 	%r16309, %r16285;
	mov.u32 	%r16310, %r16285;
	mov.u32 	%r16311, %r16285;
	mov.u32 	%r16312, %r16285;
	mov.u32 	%r16313, %r16285;
	mov.u32 	%r16314, %r16285;
	mov.u32 	%r16315, %r16285;
	mov.u32 	%r16316, %r16285;
	@%p423 bra 	BB5_735;
	bra.uni 	BB5_783;

BB5_735:
	mov.u32 	%r16283, 0;
	// inline asm
	prmt.b32 %r16303, %r16283, %r66, %r848;
	// inline asm
	ld.local.v2.u32 	{%r12062, %r12063}, [%rd8+8];
	// inline asm
	prmt.b32 %r16304, %r12063, %r12062, %r848;
	// inline asm
	ld.local.u32 	%r11923, [%rd8+8];
	ld.local.u32 	%r11924, [%rd8+4];
	// inline asm
	prmt.b32 %r16297, %r11923, %r11924, %r848;
	// inline asm
	ld.local.v2.u32 	{%r12064, %r12065}, [%rd8];
	// inline asm
	prmt.b32 %r16298, %r12065, %r12064, %r848;
	// inline asm
	ld.local.u32 	%r11931, [%rd8];
	ld.local.u32 	%r11932, [%rd7+12];
	// inline asm
	prmt.b32 %r16299, %r11931, %r11932, %r848;
	// inline asm
	ld.local.v2.u32 	{%r12066, %r12067}, [%rd7+8];
	// inline asm
	prmt.b32 %r16300, %r12067, %r12066, %r848;
	// inline asm
	ld.local.u32 	%r11939, [%rd7+8];
	ld.local.u32 	%r11940, [%rd7+4];
	// inline asm
	prmt.b32 %r16293, %r11939, %r11940, %r848;
	// inline asm
	ld.local.v2.u32 	{%r12068, %r12069}, [%rd7];
	// inline asm
	prmt.b32 %r16294, %r12069, %r12068, %r848;
	// inline asm
	ld.local.u32 	%r11947, [%rd7];
	ld.local.u32 	%r11948, [%rd6+12];
	// inline asm
	prmt.b32 %r16295, %r11947, %r11948, %r848;
	// inline asm
	ld.local.v2.u32 	{%r12070, %r12071}, [%rd6+8];
	// inline asm
	prmt.b32 %r16296, %r12071, %r12070, %r848;
	// inline asm
	ld.local.u32 	%r11955, [%rd6+8];
	ld.local.u32 	%r11956, [%rd6+4];
	// inline asm
	prmt.b32 %r16289, %r11955, %r11956, %r848;
	// inline asm
	ld.local.v2.u32 	{%r12072, %r12073}, [%rd6];
	// inline asm
	prmt.b32 %r16290, %r12073, %r12072, %r848;
	// inline asm
	ld.local.u32 	%r11963, [%rd6];
	ld.local.u32 	%r11964, [%rd5+12];
	// inline asm
	prmt.b32 %r16291, %r11963, %r11964, %r848;
	// inline asm
	ld.local.v2.u32 	{%r12074, %r12075}, [%rd5+8];
	// inline asm
	prmt.b32 %r16292, %r12075, %r12074, %r848;
	// inline asm
	ld.local.u32 	%r11971, [%rd5+8];
	ld.local.u32 	%r11972, [%rd5+4];
	// inline asm
	prmt.b32 %r16285, %r11971, %r11972, %r848;
	// inline asm
	ld.local.v2.u32 	{%r12076, %r12077}, [%rd5];
	// inline asm
	prmt.b32 %r16286, %r12077, %r12076, %r848;
	// inline asm
	ld.local.u32 	%r11979, [%rd5];
	ld.local.u32 	%r11980, [%rd4+12];
	// inline asm
	prmt.b32 %r16287, %r11979, %r11980, %r848;
	// inline asm
	ld.local.v2.u32 	{%r12078, %r12079}, [%rd4+8];
	// inline asm
	prmt.b32 %r16288, %r12079, %r12078, %r848;
	// inline asm
	ld.local.u32 	%r11987, [%rd4+8];
	ld.local.u32 	%r11988, [%rd4+4];
	// inline asm
	prmt.b32 %r11986, %r11987, %r11988, %r848;
	// inline asm
	st.local.u32 	[%rd8+12], %r11986;
	ld.local.v2.u32 	{%r12080, %r12081}, [%rd4];
	// inline asm
	prmt.b32 %r11990, %r12081, %r12080, %r848;
	// inline asm
	st.local.u32 	[%rd8+8], %r11990;
	ld.local.u32 	%r11995, [%rd4];
	ld.local.u32 	%r11996, [%rd3+12];
	// inline asm
	prmt.b32 %r11994, %r11995, %r11996, %r848;
	// inline asm
	st.local.u32 	[%rd8+4], %r11994;
	ld.local.v2.u32 	{%r12082, %r12083}, [%rd3+8];
	// inline asm
	prmt.b32 %r11998, %r12083, %r12082, %r848;
	// inline asm
	st.local.u32 	[%rd8], %r11998;
	ld.local.u32 	%r12003, [%rd3+8];
	ld.local.u32 	%r12004, [%rd3+4];
	// inline asm
	prmt.b32 %r12002, %r12003, %r12004, %r848;
	// inline asm
	st.local.u32 	[%rd7+12], %r12002;
	ld.local.v2.u32 	{%r12084, %r12085}, [%rd3];
	// inline asm
	prmt.b32 %r12006, %r12085, %r12084, %r848;
	// inline asm
	st.local.u32 	[%rd7+8], %r12006;
	ld.local.u32 	%r12011, [%rd3];
	ld.local.u32 	%r12012, [%rd2+12];
	// inline asm
	prmt.b32 %r12010, %r12011, %r12012, %r848;
	// inline asm
	st.local.u32 	[%rd7+4], %r12010;
	ld.local.v2.u32 	{%r12086, %r12087}, [%rd2+8];
	// inline asm
	prmt.b32 %r12014, %r12087, %r12086, %r848;
	// inline asm
	st.local.u32 	[%rd7], %r12014;
	ld.local.u32 	%r12019, [%rd2+8];
	ld.local.u32 	%r12020, [%rd2+4];
	// inline asm
	prmt.b32 %r12018, %r12019, %r12020, %r848;
	// inline asm
	st.local.u32 	[%rd6+12], %r12018;
	ld.local.v2.u32 	{%r12088, %r12089}, [%rd2];
	// inline asm
	prmt.b32 %r12022, %r12089, %r12088, %r848;
	// inline asm
	st.local.u32 	[%rd6+8], %r12022;
	ld.local.u32 	%r12027, [%rd2];
	ld.local.u32 	%r12028, [%rd1+12];
	// inline asm
	prmt.b32 %r12026, %r12027, %r12028, %r848;
	// inline asm
	st.local.u32 	[%rd6+4], %r12026;
	ld.local.v2.u32 	{%r12090, %r12091}, [%rd1+8];
	// inline asm
	prmt.b32 %r12030, %r12091, %r12090, %r848;
	// inline asm
	st.local.u32 	[%rd6], %r12030;
	ld.local.u32 	%r12035, [%rd1+8];
	ld.local.u32 	%r12036, [%rd1+4];
	// inline asm
	prmt.b32 %r12034, %r12035, %r12036, %r848;
	// inline asm
	st.local.u32 	[%rd5+12], %r12034;
	ld.local.v2.u32 	{%r12092, %r12093}, [%rd1];
	// inline asm
	prmt.b32 %r12038, %r12093, %r12092, %r848;
	// inline asm
	st.local.u32 	[%rd5+8], %r12038;
	ld.local.u32 	%r12043, [%rd1];
	// inline asm
	prmt.b32 %r12042, %r12043, %r16283, %r848;
	// inline asm
	st.local.v2.u32 	[%rd5], {%r16283, %r12042};
	st.local.v4.u32 	[%rd4], {%r16283, %r16283, %r16283, %r16283};
	st.local.v4.u32 	[%rd3], {%r16283, %r16283, %r16283, %r16283};
	st.local.v4.u32 	[%rd2], {%r16283, %r16283, %r16283, %r16283};
	st.local.v2.u32 	[%rd1+8], {%r16283, %r16283};
	mov.u64 	%rd1962, 0;
	st.local.u64 	[%rd1], %rd1962;
	mov.u32 	%r16284, %r16283;
	mov.u32 	%r16301, %r16283;
	mov.u32 	%r16302, %r16283;
	bra.uni 	BB5_778;

BB5_718:
	setp.eq.s32	%p435, %r9492, 9;
	mov.u32 	%r16286, %r16285;
	mov.u32 	%r16287, %r16285;
	mov.u32 	%r16288, %r16285;
	mov.u32 	%r16289, %r16285;
	mov.u32 	%r16290, %r16285;
	mov.u32 	%r16291, %r16285;
	mov.u32 	%r16292, %r16285;
	mov.u32 	%r16293, %r16285;
	mov.u32 	%r16294, %r16285;
	mov.u32 	%r16295, %r16285;
	mov.u32 	%r16296, %r16285;
	mov.u32 	%r16297, %r16285;
	mov.u32 	%r16298, %r16285;
	mov.u32 	%r16299, %r16285;
	mov.u32 	%r16300, %r16285;
	mov.u32 	%r16301, %r16285;
	mov.u32 	%r16302, %r16285;
	mov.u32 	%r16303, %r16285;
	mov.u32 	%r16304, %r16285;
	mov.u32 	%r16305, %r16285;
	mov.u32 	%r16306, %r16285;
	mov.u32 	%r16307, %r16285;
	mov.u32 	%r16308, %r16285;
	mov.u32 	%r16309, %r16285;
	mov.u32 	%r16310, %r16285;
	mov.u32 	%r16311, %r16285;
	mov.u32 	%r16312, %r16285;
	mov.u32 	%r16313, %r16285;
	mov.u32 	%r16314, %r16285;
	mov.u32 	%r16315, %r16285;
	mov.u32 	%r16316, %r16285;
	@%p435 bra 	BB5_719;
	bra.uni 	BB5_783;

BB5_719:
	mov.u32 	%r16283, 0;
	// inline asm
	prmt.b32 %r16295, %r16283, %r66, %r848;
	// inline asm
	ld.local.v2.u32 	{%r13538, %r13539}, [%rd8+8];
	// inline asm
	prmt.b32 %r16296, %r13539, %r13538, %r848;
	// inline asm
	ld.local.u32 	%r13391, [%rd8+8];
	ld.local.u32 	%r13392, [%rd8+4];
	// inline asm
	prmt.b32 %r16289, %r13391, %r13392, %r848;
	// inline asm
	ld.local.v2.u32 	{%r13540, %r13541}, [%rd8];
	// inline asm
	prmt.b32 %r16290, %r13541, %r13540, %r848;
	// inline asm
	ld.local.u32 	%r13399, [%rd8];
	ld.local.u32 	%r13400, [%rd7+12];
	// inline asm
	prmt.b32 %r16291, %r13399, %r13400, %r848;
	// inline asm
	ld.local.v2.u32 	{%r13542, %r13543}, [%rd7+8];
	// inline asm
	prmt.b32 %r16292, %r13543, %r13542, %r848;
	// inline asm
	ld.local.u32 	%r13407, [%rd7+8];
	ld.local.u32 	%r13408, [%rd7+4];
	// inline asm
	prmt.b32 %r16285, %r13407, %r13408, %r848;
	// inline asm
	ld.local.v2.u32 	{%r13544, %r13545}, [%rd7];
	// inline asm
	prmt.b32 %r16286, %r13545, %r13544, %r848;
	// inline asm
	ld.local.u32 	%r13415, [%rd7];
	ld.local.u32 	%r13416, [%rd6+12];
	// inline asm
	prmt.b32 %r16287, %r13415, %r13416, %r848;
	// inline asm
	ld.local.v2.u32 	{%r13546, %r13547}, [%rd6+8];
	// inline asm
	prmt.b32 %r16288, %r13547, %r13546, %r848;
	// inline asm
	ld.local.u32 	%r13423, [%rd6+8];
	ld.local.u32 	%r13424, [%rd6+4];
	// inline asm
	prmt.b32 %r13422, %r13423, %r13424, %r848;
	// inline asm
	st.local.u32 	[%rd8+12], %r13422;
	ld.local.v2.u32 	{%r13548, %r13549}, [%rd6];
	// inline asm
	prmt.b32 %r13426, %r13549, %r13548, %r848;
	// inline asm
	st.local.u32 	[%rd8+8], %r13426;
	ld.local.u32 	%r13431, [%rd6];
	ld.local.u32 	%r13432, [%rd5+12];
	// inline asm
	prmt.b32 %r13430, %r13431, %r13432, %r848;
	// inline asm
	st.local.u32 	[%rd8+4], %r13430;
	ld.local.v2.u32 	{%r13550, %r13551}, [%rd5+8];
	// inline asm
	prmt.b32 %r13434, %r13551, %r13550, %r848;
	// inline asm
	st.local.u32 	[%rd8], %r13434;
	ld.local.u32 	%r13439, [%rd5+8];
	ld.local.u32 	%r13440, [%rd5+4];
	// inline asm
	prmt.b32 %r13438, %r13439, %r13440, %r848;
	// inline asm
	st.local.u32 	[%rd7+12], %r13438;
	ld.local.v2.u32 	{%r13552, %r13553}, [%rd5];
	// inline asm
	prmt.b32 %r13442, %r13553, %r13552, %r848;
	// inline asm
	st.local.u32 	[%rd7+8], %r13442;
	ld.local.u32 	%r13447, [%rd5];
	ld.local.u32 	%r13448, [%rd4+12];
	// inline asm
	prmt.b32 %r13446, %r13447, %r13448, %r848;
	// inline asm
	st.local.u32 	[%rd7+4], %r13446;
	ld.local.v2.u32 	{%r13554, %r13555}, [%rd4+8];
	// inline asm
	prmt.b32 %r13450, %r13555, %r13554, %r848;
	// inline asm
	st.local.u32 	[%rd7], %r13450;
	ld.local.u32 	%r13455, [%rd4+8];
	ld.local.u32 	%r13456, [%rd4+4];
	// inline asm
	prmt.b32 %r13454, %r13455, %r13456, %r848;
	// inline asm
	st.local.u32 	[%rd6+12], %r13454;
	ld.local.v2.u32 	{%r13556, %r13557}, [%rd4];
	// inline asm
	prmt.b32 %r13458, %r13557, %r13556, %r848;
	// inline asm
	st.local.u32 	[%rd6+8], %r13458;
	ld.local.u32 	%r13463, [%rd4];
	ld.local.u32 	%r13464, [%rd3+12];
	// inline asm
	prmt.b32 %r13462, %r13463, %r13464, %r848;
	// inline asm
	st.local.u32 	[%rd6+4], %r13462;
	ld.local.v2.u32 	{%r13558, %r13559}, [%rd3+8];
	// inline asm
	prmt.b32 %r13466, %r13559, %r13558, %r848;
	// inline asm
	st.local.u32 	[%rd6], %r13466;
	ld.local.u32 	%r13471, [%rd3+8];
	ld.local.u32 	%r13472, [%rd3+4];
	// inline asm
	prmt.b32 %r13470, %r13471, %r13472, %r848;
	// inline asm
	st.local.u32 	[%rd5+12], %r13470;
	ld.local.v2.u32 	{%r13560, %r13561}, [%rd3];
	// inline asm
	prmt.b32 %r13474, %r13561, %r13560, %r848;
	// inline asm
	st.local.u32 	[%rd5+8], %r13474;
	ld.local.u32 	%r13479, [%rd3];
	ld.local.u32 	%r13480, [%rd2+12];
	// inline asm
	prmt.b32 %r13478, %r13479, %r13480, %r848;
	// inline asm
	st.local.u32 	[%rd5+4], %r13478;
	ld.local.v2.u32 	{%r13562, %r13563}, [%rd2+8];
	// inline asm
	prmt.b32 %r13482, %r13563, %r13562, %r848;
	// inline asm
	st.local.u32 	[%rd5], %r13482;
	ld.local.u32 	%r13487, [%rd2+8];
	ld.local.u32 	%r13488, [%rd2+4];
	// inline asm
	prmt.b32 %r13486, %r13487, %r13488, %r848;
	// inline asm
	st.local.u32 	[%rd4+12], %r13486;
	ld.local.v2.u32 	{%r13564, %r13565}, [%rd2];
	// inline asm
	prmt.b32 %r13490, %r13565, %r13564, %r848;
	// inline asm
	st.local.u32 	[%rd4+8], %r13490;
	ld.local.u32 	%r13495, [%rd2];
	ld.local.u32 	%r13496, [%rd1+12];
	// inline asm
	prmt.b32 %r13494, %r13495, %r13496, %r848;
	// inline asm
	st.local.u32 	[%rd4+4], %r13494;
	ld.local.v2.u32 	{%r13566, %r13567}, [%rd1+8];
	// inline asm
	prmt.b32 %r13498, %r13567, %r13566, %r848;
	// inline asm
	st.local.u32 	[%rd4], %r13498;
	ld.local.u32 	%r13503, [%rd1+8];
	ld.local.u32 	%r13504, [%rd1+4];
	// inline asm
	prmt.b32 %r13502, %r13503, %r13504, %r848;
	// inline asm
	st.local.u32 	[%rd3+12], %r13502;
	ld.local.v2.u32 	{%r13568, %r13569}, [%rd1];
	// inline asm
	prmt.b32 %r13506, %r13569, %r13568, %r848;
	// inline asm
	st.local.u32 	[%rd3+8], %r13506;
	ld.local.u32 	%r13511, [%rd1];
	// inline asm
	prmt.b32 %r13510, %r13511, %r16283, %r848;
	// inline asm
	st.local.v2.u32 	[%rd3], {%r16283, %r13510};
	st.local.v4.u32 	[%rd2], {%r16283, %r16283, %r16283, %r16283};
	st.local.v2.u32 	[%rd1+8], {%r16283, %r16283};
	mov.u64 	%rd1970, 0;
	st.local.u64 	[%rd1], %rd1970;
	mov.u32 	%r16284, %r16283;
	mov.u32 	%r16293, %r16283;
	mov.u32 	%r16294, %r16283;
	bra.uni 	BB5_776;

BB5_749:
	setp.eq.s32	%p412, %r9492, 25;
	mov.u32 	%r16286, %r16285;
	mov.u32 	%r16287, %r16285;
	mov.u32 	%r16288, %r16285;
	mov.u32 	%r16289, %r16285;
	mov.u32 	%r16290, %r16285;
	mov.u32 	%r16291, %r16285;
	mov.u32 	%r16292, %r16285;
	mov.u32 	%r16293, %r16285;
	mov.u32 	%r16294, %r16285;
	mov.u32 	%r16295, %r16285;
	mov.u32 	%r16296, %r16285;
	mov.u32 	%r16297, %r16285;
	mov.u32 	%r16298, %r16285;
	mov.u32 	%r16299, %r16285;
	mov.u32 	%r16300, %r16285;
	mov.u32 	%r16301, %r16285;
	mov.u32 	%r16302, %r16285;
	mov.u32 	%r16303, %r16285;
	mov.u32 	%r16304, %r16285;
	mov.u32 	%r16305, %r16285;
	mov.u32 	%r16306, %r16285;
	mov.u32 	%r16307, %r16285;
	mov.u32 	%r16308, %r16285;
	mov.u32 	%r16309, %r16285;
	mov.u32 	%r16310, %r16285;
	mov.u32 	%r16311, %r16285;
	mov.u32 	%r16312, %r16285;
	mov.u32 	%r16313, %r16285;
	mov.u32 	%r16314, %r16285;
	mov.u32 	%r16315, %r16285;
	mov.u32 	%r16316, %r16285;
	@%p412 bra 	BB5_750;
	bra.uni 	BB5_783;

BB5_750:
	mov.u32 	%r16283, 0;
	// inline asm
	prmt.b32 %r16311, %r16283, %r66, %r848;
	// inline asm
	ld.local.v2.u32 	{%r10650, %r10651}, [%rd8+8];
	// inline asm
	prmt.b32 %r16312, %r10651, %r10650, %r848;
	// inline asm
	ld.local.u32 	%r10519, [%rd8+8];
	ld.local.u32 	%r10520, [%rd8+4];
	// inline asm
	prmt.b32 %r16305, %r10519, %r10520, %r848;
	// inline asm
	ld.local.v2.u32 	{%r10652, %r10653}, [%rd8];
	// inline asm
	prmt.b32 %r16306, %r10653, %r10652, %r848;
	// inline asm
	ld.local.u32 	%r10527, [%rd8];
	ld.local.u32 	%r10528, [%rd7+12];
	// inline asm
	prmt.b32 %r16307, %r10527, %r10528, %r848;
	// inline asm
	ld.local.v2.u32 	{%r10654, %r10655}, [%rd7+8];
	// inline asm
	prmt.b32 %r16308, %r10655, %r10654, %r848;
	// inline asm
	ld.local.u32 	%r10535, [%rd7+8];
	ld.local.u32 	%r10536, [%rd7+4];
	// inline asm
	prmt.b32 %r16301, %r10535, %r10536, %r848;
	// inline asm
	ld.local.v2.u32 	{%r10656, %r10657}, [%rd7];
	// inline asm
	prmt.b32 %r16302, %r10657, %r10656, %r848;
	// inline asm
	ld.local.u32 	%r10543, [%rd7];
	ld.local.u32 	%r10544, [%rd6+12];
	// inline asm
	prmt.b32 %r16303, %r10543, %r10544, %r848;
	// inline asm
	ld.local.v2.u32 	{%r10658, %r10659}, [%rd6+8];
	// inline asm
	prmt.b32 %r16304, %r10659, %r10658, %r848;
	// inline asm
	ld.local.u32 	%r10551, [%rd6+8];
	ld.local.u32 	%r10552, [%rd6+4];
	// inline asm
	prmt.b32 %r16297, %r10551, %r10552, %r848;
	// inline asm
	ld.local.v2.u32 	{%r10660, %r10661}, [%rd6];
	// inline asm
	prmt.b32 %r16298, %r10661, %r10660, %r848;
	// inline asm
	ld.local.u32 	%r10559, [%rd6];
	ld.local.u32 	%r10560, [%rd5+12];
	// inline asm
	prmt.b32 %r16299, %r10559, %r10560, %r848;
	// inline asm
	ld.local.v2.u32 	{%r10662, %r10663}, [%rd5+8];
	// inline asm
	prmt.b32 %r16300, %r10663, %r10662, %r848;
	// inline asm
	ld.local.u32 	%r10567, [%rd5+8];
	ld.local.u32 	%r10568, [%rd5+4];
	// inline asm
	prmt.b32 %r16293, %r10567, %r10568, %r848;
	// inline asm
	ld.local.v2.u32 	{%r10664, %r10665}, [%rd5];
	// inline asm
	prmt.b32 %r16294, %r10665, %r10664, %r848;
	// inline asm
	ld.local.u32 	%r10575, [%rd5];
	ld.local.u32 	%r10576, [%rd4+12];
	// inline asm
	prmt.b32 %r16295, %r10575, %r10576, %r848;
	// inline asm
	ld.local.v2.u32 	{%r10666, %r10667}, [%rd4+8];
	// inline asm
	prmt.b32 %r16296, %r10667, %r10666, %r848;
	// inline asm
	ld.local.u32 	%r10583, [%rd4+8];
	ld.local.u32 	%r10584, [%rd4+4];
	// inline asm
	prmt.b32 %r16289, %r10583, %r10584, %r848;
	// inline asm
	ld.local.v2.u32 	{%r10668, %r10669}, [%rd4];
	// inline asm
	prmt.b32 %r16290, %r10669, %r10668, %r848;
	// inline asm
	ld.local.u32 	%r10591, [%rd4];
	ld.local.u32 	%r10592, [%rd3+12];
	// inline asm
	prmt.b32 %r16291, %r10591, %r10592, %r848;
	// inline asm
	ld.local.v2.u32 	{%r10670, %r10671}, [%rd3+8];
	// inline asm
	prmt.b32 %r16292, %r10671, %r10670, %r848;
	// inline asm
	ld.local.u32 	%r10599, [%rd3+8];
	ld.local.u32 	%r10600, [%rd3+4];
	// inline asm
	prmt.b32 %r16285, %r10599, %r10600, %r848;
	// inline asm
	ld.local.v2.u32 	{%r10672, %r10673}, [%rd3];
	// inline asm
	prmt.b32 %r16286, %r10673, %r10672, %r848;
	// inline asm
	ld.local.u32 	%r10607, [%rd3];
	ld.local.u32 	%r10608, [%rd2+12];
	// inline asm
	prmt.b32 %r16287, %r10607, %r10608, %r848;
	// inline asm
	ld.local.v2.u32 	{%r10674, %r10675}, [%rd2+8];
	// inline asm
	prmt.b32 %r16288, %r10675, %r10674, %r848;
	// inline asm
	ld.local.u32 	%r10615, [%rd2+8];
	ld.local.u32 	%r10616, [%rd2+4];
	// inline asm
	prmt.b32 %r10614, %r10615, %r10616, %r848;
	// inline asm
	st.local.u32 	[%rd8+12], %r10614;
	ld.local.v2.u32 	{%r10676, %r10677}, [%rd2];
	// inline asm
	prmt.b32 %r10618, %r10677, %r10676, %r848;
	// inline asm
	st.local.u32 	[%rd8+8], %r10618;
	ld.local.u32 	%r10623, [%rd2];
	ld.local.u32 	%r10624, [%rd1+12];
	// inline asm
	prmt.b32 %r10622, %r10623, %r10624, %r848;
	// inline asm
	st.local.u32 	[%rd8+4], %r10622;
	ld.local.v2.u32 	{%r10678, %r10679}, [%rd1+8];
	// inline asm
	prmt.b32 %r10626, %r10679, %r10678, %r848;
	// inline asm
	st.local.u32 	[%rd8], %r10626;
	ld.local.u32 	%r10631, [%rd1+8];
	ld.local.u32 	%r10632, [%rd1+4];
	// inline asm
	prmt.b32 %r10630, %r10631, %r10632, %r848;
	// inline asm
	st.local.u32 	[%rd7+12], %r10630;
	ld.local.v2.u32 	{%r10680, %r10681}, [%rd1];
	// inline asm
	prmt.b32 %r10634, %r10681, %r10680, %r848;
	// inline asm
	st.local.u32 	[%rd7+8], %r10634;
	ld.local.u32 	%r10639, [%rd1];
	// inline asm
	prmt.b32 %r10638, %r10639, %r16283, %r848;
	// inline asm
	st.local.v2.u32 	[%rd7], {%r16283, %r10638};
	st.local.v4.u32 	[%rd6], {%r16283, %r16283, %r16283, %r16283};
	st.local.v4.u32 	[%rd5], {%r16283, %r16283, %r16283, %r16283};
	st.local.v4.u32 	[%rd4], {%r16283, %r16283, %r16283, %r16283};
	st.local.v4.u32 	[%rd3], {%r16283, %r16283, %r16283, %r16283};
	st.local.v4.u32 	[%rd2], {%r16283, %r16283, %r16283, %r16283};
	st.local.v2.u32 	[%rd1+8], {%r16283, %r16283};
	mov.u64 	%rd1954, 0;
	st.local.u64 	[%rd1], %rd1954;
	mov.u32 	%r16284, %r16283;
	mov.u32 	%r16309, %r16283;
	mov.u32 	%r16310, %r16283;
	bra.uni 	BB5_780;

BB5_710:
	setp.eq.s32	%p441, %r9492, 5;
	mov.u32 	%r16286, %r16285;
	mov.u32 	%r16287, %r16285;
	mov.u32 	%r16288, %r16285;
	mov.u32 	%r16289, %r16285;
	mov.u32 	%r16290, %r16285;
	mov.u32 	%r16291, %r16285;
	mov.u32 	%r16292, %r16285;
	mov.u32 	%r16293, %r16285;
	mov.u32 	%r16294, %r16285;
	mov.u32 	%r16295, %r16285;
	mov.u32 	%r16296, %r16285;
	mov.u32 	%r16297, %r16285;
	mov.u32 	%r16298, %r16285;
	mov.u32 	%r16299, %r16285;
	mov.u32 	%r16300, %r16285;
	mov.u32 	%r16301, %r16285;
	mov.u32 	%r16302, %r16285;
	mov.u32 	%r16303, %r16285;
	mov.u32 	%r16304, %r16285;
	mov.u32 	%r16305, %r16285;
	mov.u32 	%r16306, %r16285;
	mov.u32 	%r16307, %r16285;
	mov.u32 	%r16308, %r16285;
	mov.u32 	%r16309, %r16285;
	mov.u32 	%r16310, %r16285;
	mov.u32 	%r16311, %r16285;
	mov.u32 	%r16312, %r16285;
	mov.u32 	%r16313, %r16285;
	mov.u32 	%r16314, %r16285;
	mov.u32 	%r16315, %r16285;
	mov.u32 	%r16316, %r16285;
	@%p441 bra 	BB5_711;
	bra.uni 	BB5_783;

BB5_711:
	mov.u32 	%r16283, 0;
	// inline asm
	prmt.b32 %r16291, %r16283, %r66, %r848;
	// inline asm
	ld.local.v2.u32 	{%r14300, %r14301}, [%rd8+8];
	// inline asm
	prmt.b32 %r16292, %r14301, %r14300, %r848;
	// inline asm
	ld.local.u32 	%r14149, [%rd8+8];
	ld.local.u32 	%r14150, [%rd8+4];
	// inline asm
	prmt.b32 %r16285, %r14149, %r14150, %r848;
	// inline asm
	ld.local.v2.u32 	{%r14302, %r14303}, [%rd8];
	// inline asm
	prmt.b32 %r16286, %r14303, %r14302, %r848;
	// inline asm
	ld.local.u32 	%r14157, [%rd8];
	ld.local.u32 	%r14158, [%rd7+12];
	// inline asm
	prmt.b32 %r16287, %r14157, %r14158, %r848;
	// inline asm
	ld.local.v2.u32 	{%r14304, %r14305}, [%rd7+8];
	// inline asm
	prmt.b32 %r16288, %r14305, %r14304, %r848;
	// inline asm
	ld.local.u32 	%r14165, [%rd7+8];
	ld.local.u32 	%r14166, [%rd7+4];
	// inline asm
	prmt.b32 %r14164, %r14165, %r14166, %r848;
	// inline asm
	st.local.u32 	[%rd8+12], %r14164;
	ld.local.v2.u32 	{%r14306, %r14307}, [%rd7];
	// inline asm
	prmt.b32 %r14168, %r14307, %r14306, %r848;
	// inline asm
	st.local.u32 	[%rd8+8], %r14168;
	ld.local.u32 	%r14173, [%rd7];
	ld.local.u32 	%r14174, [%rd6+12];
	// inline asm
	prmt.b32 %r14172, %r14173, %r14174, %r848;
	// inline asm
	st.local.u32 	[%rd8+4], %r14172;
	ld.local.v2.u32 	{%r14308, %r14309}, [%rd6+8];
	// inline asm
	prmt.b32 %r14176, %r14309, %r14308, %r848;
	// inline asm
	st.local.u32 	[%rd8], %r14176;
	ld.local.u32 	%r14181, [%rd6+8];
	ld.local.u32 	%r14182, [%rd6+4];
	// inline asm
	prmt.b32 %r14180, %r14181, %r14182, %r848;
	// inline asm
	st.local.u32 	[%rd7+12], %r14180;
	ld.local.v2.u32 	{%r14310, %r14311}, [%rd6];
	// inline asm
	prmt.b32 %r14184, %r14311, %r14310, %r848;
	// inline asm
	st.local.u32 	[%rd7+8], %r14184;
	ld.local.u32 	%r14189, [%rd6];
	ld.local.u32 	%r14190, [%rd5+12];
	// inline asm
	prmt.b32 %r14188, %r14189, %r14190, %r848;
	// inline asm
	st.local.u32 	[%rd7+4], %r14188;
	ld.local.v2.u32 	{%r14312, %r14313}, [%rd5+8];
	// inline asm
	prmt.b32 %r14192, %r14313, %r14312, %r848;
	// inline asm
	st.local.u32 	[%rd7], %r14192;
	ld.local.u32 	%r14197, [%rd5+8];
	ld.local.u32 	%r14198, [%rd5+4];
	// inline asm
	prmt.b32 %r14196, %r14197, %r14198, %r848;
	// inline asm
	st.local.u32 	[%rd6+12], %r14196;
	ld.local.v2.u32 	{%r14314, %r14315}, [%rd5];
	// inline asm
	prmt.b32 %r14200, %r14315, %r14314, %r848;
	// inline asm
	st.local.u32 	[%rd6+8], %r14200;
	ld.local.u32 	%r14205, [%rd5];
	ld.local.u32 	%r14206, [%rd4+12];
	// inline asm
	prmt.b32 %r14204, %r14205, %r14206, %r848;
	// inline asm
	st.local.u32 	[%rd6+4], %r14204;
	ld.local.v2.u32 	{%r14316, %r14317}, [%rd4+8];
	// inline asm
	prmt.b32 %r14208, %r14317, %r14316, %r848;
	// inline asm
	st.local.u32 	[%rd6], %r14208;
	ld.local.u32 	%r14213, [%rd4+8];
	ld.local.u32 	%r14214, [%rd4+4];
	// inline asm
	prmt.b32 %r14212, %r14213, %r14214, %r848;
	// inline asm
	st.local.u32 	[%rd5+12], %r14212;
	ld.local.v2.u32 	{%r14318, %r14319}, [%rd4];
	// inline asm
	prmt.b32 %r14216, %r14319, %r14318, %r848;
	// inline asm
	st.local.u32 	[%rd5+8], %r14216;
	ld.local.u32 	%r14221, [%rd4];
	ld.local.u32 	%r14222, [%rd3+12];
	// inline asm
	prmt.b32 %r14220, %r14221, %r14222, %r848;
	// inline asm
	st.local.u32 	[%rd5+4], %r14220;
	ld.local.v2.u32 	{%r14320, %r14321}, [%rd3+8];
	// inline asm
	prmt.b32 %r14224, %r14321, %r14320, %r848;
	// inline asm
	st.local.u32 	[%rd5], %r14224;
	ld.local.u32 	%r14229, [%rd3+8];
	ld.local.u32 	%r14230, [%rd3+4];
	// inline asm
	prmt.b32 %r14228, %r14229, %r14230, %r848;
	// inline asm
	st.local.u32 	[%rd4+12], %r14228;
	ld.local.v2.u32 	{%r14322, %r14323}, [%rd3];
	// inline asm
	prmt.b32 %r14232, %r14323, %r14322, %r848;
	// inline asm
	st.local.u32 	[%rd4+8], %r14232;
	ld.local.u32 	%r14237, [%rd3];
	ld.local.u32 	%r14238, [%rd2+12];
	// inline asm
	prmt.b32 %r14236, %r14237, %r14238, %r848;
	// inline asm
	st.local.u32 	[%rd4+4], %r14236;
	ld.local.v2.u32 	{%r14324, %r14325}, [%rd2+8];
	// inline asm
	prmt.b32 %r14240, %r14325, %r14324, %r848;
	// inline asm
	st.local.u32 	[%rd4], %r14240;
	ld.local.u32 	%r14245, [%rd2+8];
	ld.local.u32 	%r14246, [%rd2+4];
	// inline asm
	prmt.b32 %r14244, %r14245, %r14246, %r848;
	// inline asm
	st.local.u32 	[%rd3+12], %r14244;
	ld.local.v2.u32 	{%r14326, %r14327}, [%rd2];
	// inline asm
	prmt.b32 %r14248, %r14327, %r14326, %r848;
	// inline asm
	st.local.u32 	[%rd3+8], %r14248;
	ld.local.u32 	%r14253, [%rd2];
	ld.local.u32 	%r14254, [%rd1+12];
	// inline asm
	prmt.b32 %r14252, %r14253, %r14254, %r848;
	// inline asm
	st.local.u32 	[%rd3+4], %r14252;
	ld.local.v2.u32 	{%r14328, %r14329}, [%rd1+8];
	// inline asm
	prmt.b32 %r14256, %r14329, %r14328, %r848;
	// inline asm
	st.local.u32 	[%rd3], %r14256;
	ld.local.u32 	%r14261, [%rd1+8];
	ld.local.u32 	%r14262, [%rd1+4];
	// inline asm
	prmt.b32 %r14260, %r14261, %r14262, %r848;
	// inline asm
	st.local.u32 	[%rd2+12], %r14260;
	ld.local.v2.u32 	{%r14330, %r14331}, [%rd1];
	// inline asm
	prmt.b32 %r14264, %r14331, %r14330, %r848;
	// inline asm
	st.local.u32 	[%rd2+8], %r14264;
	ld.local.u32 	%r14269, [%rd1];
	// inline asm
	prmt.b32 %r14268, %r14269, %r16283, %r848;
	// inline asm
	st.local.v2.u32 	[%rd2], {%r16283, %r14268};
	st.local.v2.u32 	[%rd1+8], {%r16283, %r16283};
	mov.u64 	%rd1974, 0;
	st.local.u64 	[%rd1], %rd1974;
	mov.u32 	%r16284, %r16283;
	mov.u32 	%r16289, %r16283;
	mov.u32 	%r16290, %r16283;
	bra.uni 	BB5_775;

BB5_741:
	setp.eq.s32	%p418, %r9492, 21;
	mov.u32 	%r16286, %r16285;
	mov.u32 	%r16287, %r16285;
	mov.u32 	%r16288, %r16285;
	mov.u32 	%r16289, %r16285;
	mov.u32 	%r16290, %r16285;
	mov.u32 	%r16291, %r16285;
	mov.u32 	%r16292, %r16285;
	mov.u32 	%r16293, %r16285;
	mov.u32 	%r16294, %r16285;
	mov.u32 	%r16295, %r16285;
	mov.u32 	%r16296, %r16285;
	mov.u32 	%r16297, %r16285;
	mov.u32 	%r16298, %r16285;
	mov.u32 	%r16299, %r16285;
	mov.u32 	%r16300, %r16285;
	mov.u32 	%r16301, %r16285;
	mov.u32 	%r16302, %r16285;
	mov.u32 	%r16303, %r16285;
	mov.u32 	%r16304, %r16285;
	mov.u32 	%r16305, %r16285;
	mov.u32 	%r16306, %r16285;
	mov.u32 	%r16307, %r16285;
	mov.u32 	%r16308, %r16285;
	mov.u32 	%r16309, %r16285;
	mov.u32 	%r16310, %r16285;
	mov.u32 	%r16311, %r16285;
	mov.u32 	%r16312, %r16285;
	mov.u32 	%r16313, %r16285;
	mov.u32 	%r16314, %r16285;
	mov.u32 	%r16315, %r16285;
	mov.u32 	%r16316, %r16285;
	@%p418 bra 	BB5_742;
	bra.uni 	BB5_783;

BB5_742:
	mov.u32 	%r16283, 0;
	// inline asm
	prmt.b32 %r16307, %r16283, %r66, %r848;
	// inline asm
	ld.local.v2.u32 	{%r11348, %r11349}, [%rd8+8];
	// inline asm
	prmt.b32 %r16308, %r11349, %r11348, %r848;
	// inline asm
	ld.local.u32 	%r11213, [%rd8+8];
	ld.local.u32 	%r11214, [%rd8+4];
	// inline asm
	prmt.b32 %r16301, %r11213, %r11214, %r848;
	// inline asm
	ld.local.v2.u32 	{%r11350, %r11351}, [%rd8];
	// inline asm
	prmt.b32 %r16302, %r11351, %r11350, %r848;
	// inline asm
	ld.local.u32 	%r11221, [%rd8];
	ld.local.u32 	%r11222, [%rd7+12];
	// inline asm
	prmt.b32 %r16303, %r11221, %r11222, %r848;
	// inline asm
	ld.local.v2.u32 	{%r11352, %r11353}, [%rd7+8];
	// inline asm
	prmt.b32 %r16304, %r11353, %r11352, %r848;
	// inline asm
	ld.local.u32 	%r11229, [%rd7+8];
	ld.local.u32 	%r11230, [%rd7+4];
	// inline asm
	prmt.b32 %r16297, %r11229, %r11230, %r848;
	// inline asm
	ld.local.v2.u32 	{%r11354, %r11355}, [%rd7];
	// inline asm
	prmt.b32 %r16298, %r11355, %r11354, %r848;
	// inline asm
	ld.local.u32 	%r11237, [%rd7];
	ld.local.u32 	%r11238, [%rd6+12];
	// inline asm
	prmt.b32 %r16299, %r11237, %r11238, %r848;
	// inline asm
	ld.local.v2.u32 	{%r11356, %r11357}, [%rd6+8];
	// inline asm
	prmt.b32 %r16300, %r11357, %r11356, %r848;
	// inline asm
	ld.local.u32 	%r11245, [%rd6+8];
	ld.local.u32 	%r11246, [%rd6+4];
	// inline asm
	prmt.b32 %r16293, %r11245, %r11246, %r848;
	// inline asm
	ld.local.v2.u32 	{%r11358, %r11359}, [%rd6];
	// inline asm
	prmt.b32 %r16294, %r11359, %r11358, %r848;
	// inline asm
	ld.local.u32 	%r11253, [%rd6];
	ld.local.u32 	%r11254, [%rd5+12];
	// inline asm
	prmt.b32 %r16295, %r11253, %r11254, %r848;
	// inline asm
	ld.local.v2.u32 	{%r11360, %r11361}, [%rd5+8];
	// inline asm
	prmt.b32 %r16296, %r11361, %r11360, %r848;
	// inline asm
	ld.local.u32 	%r11261, [%rd5+8];
	ld.local.u32 	%r11262, [%rd5+4];
	// inline asm
	prmt.b32 %r16289, %r11261, %r11262, %r848;
	// inline asm
	ld.local.v2.u32 	{%r11362, %r11363}, [%rd5];
	// inline asm
	prmt.b32 %r16290, %r11363, %r11362, %r848;
	// inline asm
	ld.local.u32 	%r11269, [%rd5];
	ld.local.u32 	%r11270, [%rd4+12];
	// inline asm
	prmt.b32 %r16291, %r11269, %r11270, %r848;
	// inline asm
	ld.local.v2.u32 	{%r11364, %r11365}, [%rd4+8];
	// inline asm
	prmt.b32 %r16292, %r11365, %r11364, %r848;
	// inline asm
	ld.local.u32 	%r11277, [%rd4+8];
	ld.local.u32 	%r11278, [%rd4+4];
	// inline asm
	prmt.b32 %r16285, %r11277, %r11278, %r848;
	// inline asm
	ld.local.v2.u32 	{%r11366, %r11367}, [%rd4];
	// inline asm
	prmt.b32 %r16286, %r11367, %r11366, %r848;
	// inline asm
	ld.local.u32 	%r11285, [%rd4];
	ld.local.u32 	%r11286, [%rd3+12];
	// inline asm
	prmt.b32 %r16287, %r11285, %r11286, %r848;
	// inline asm
	ld.local.v2.u32 	{%r11368, %r11369}, [%rd3+8];
	// inline asm
	prmt.b32 %r16288, %r11369, %r11368, %r848;
	// inline asm
	ld.local.u32 	%r11293, [%rd3+8];
	ld.local.u32 	%r11294, [%rd3+4];
	// inline asm
	prmt.b32 %r11292, %r11293, %r11294, %r848;
	// inline asm
	st.local.u32 	[%rd8+12], %r11292;
	ld.local.v2.u32 	{%r11370, %r11371}, [%rd3];
	// inline asm
	prmt.b32 %r11296, %r11371, %r11370, %r848;
	// inline asm
	st.local.u32 	[%rd8+8], %r11296;
	ld.local.u32 	%r11301, [%rd3];
	ld.local.u32 	%r11302, [%rd2+12];
	// inline asm
	prmt.b32 %r11300, %r11301, %r11302, %r848;
	// inline asm
	st.local.u32 	[%rd8+4], %r11300;
	ld.local.v2.u32 	{%r11372, %r11373}, [%rd2+8];
	// inline asm
	prmt.b32 %r11304, %r11373, %r11372, %r848;
	// inline asm
	st.local.u32 	[%rd8], %r11304;
	ld.local.u32 	%r11309, [%rd2+8];
	ld.local.u32 	%r11310, [%rd2+4];
	// inline asm
	prmt.b32 %r11308, %r11309, %r11310, %r848;
	// inline asm
	st.local.u32 	[%rd7+12], %r11308;
	ld.local.v2.u32 	{%r11374, %r11375}, [%rd2];
	// inline asm
	prmt.b32 %r11312, %r11375, %r11374, %r848;
	// inline asm
	st.local.u32 	[%rd7+8], %r11312;
	ld.local.u32 	%r11317, [%rd2];
	ld.local.u32 	%r11318, [%rd1+12];
	// inline asm
	prmt.b32 %r11316, %r11317, %r11318, %r848;
	// inline asm
	st.local.u32 	[%rd7+4], %r11316;
	ld.local.v2.u32 	{%r11376, %r11377}, [%rd1+8];
	// inline asm
	prmt.b32 %r11320, %r11377, %r11376, %r848;
	// inline asm
	st.local.u32 	[%rd7], %r11320;
	ld.local.u32 	%r11325, [%rd1+8];
	ld.local.u32 	%r11326, [%rd1+4];
	// inline asm
	prmt.b32 %r11324, %r11325, %r11326, %r848;
	// inline asm
	st.local.u32 	[%rd6+12], %r11324;
	ld.local.v2.u32 	{%r11378, %r11379}, [%rd1];
	// inline asm
	prmt.b32 %r11328, %r11379, %r11378, %r848;
	// inline asm
	st.local.u32 	[%rd6+8], %r11328;
	ld.local.u32 	%r11333, [%rd1];
	// inline asm
	prmt.b32 %r11332, %r11333, %r16283, %r848;
	// inline asm
	st.local.v2.u32 	[%rd6], {%r16283, %r11332};
	st.local.v4.u32 	[%rd5], {%r16283, %r16283, %r16283, %r16283};
	st.local.v4.u32 	[%rd4], {%r16283, %r16283, %r16283, %r16283};
	st.local.v4.u32 	[%rd3], {%r16283, %r16283, %r16283, %r16283};
	st.local.v4.u32 	[%rd2], {%r16283, %r16283, %r16283, %r16283};
	st.local.v2.u32 	[%rd1+8], {%r16283, %r16283};
	mov.u64 	%rd1958, 0;
	st.local.u64 	[%rd1], %rd1958;
	mov.u32 	%r16284, %r16283;
	mov.u32 	%r16305, %r16283;
	mov.u32 	%r16306, %r16283;
	bra.uni 	BB5_779;

BB5_725:
	setp.eq.s32	%p430, %r9492, 13;
	mov.u32 	%r16286, %r16285;
	mov.u32 	%r16287, %r16285;
	mov.u32 	%r16288, %r16285;
	mov.u32 	%r16289, %r16285;
	mov.u32 	%r16290, %r16285;
	mov.u32 	%r16291, %r16285;
	mov.u32 	%r16292, %r16285;
	mov.u32 	%r16293, %r16285;
	mov.u32 	%r16294, %r16285;
	mov.u32 	%r16295, %r16285;
	mov.u32 	%r16296, %r16285;
	mov.u32 	%r16297, %r16285;
	mov.u32 	%r16298, %r16285;
	mov.u32 	%r16299, %r16285;
	mov.u32 	%r16300, %r16285;
	mov.u32 	%r16301, %r16285;
	mov.u32 	%r16302, %r16285;
	mov.u32 	%r16303, %r16285;
	mov.u32 	%r16304, %r16285;
	mov.u32 	%r16305, %r16285;
	mov.u32 	%r16306, %r16285;
	mov.u32 	%r16307, %r16285;
	mov.u32 	%r16308, %r16285;
	mov.u32 	%r16309, %r16285;
	mov.u32 	%r16310, %r16285;
	mov.u32 	%r16311, %r16285;
	mov.u32 	%r16312, %r16285;
	mov.u32 	%r16313, %r16285;
	mov.u32 	%r16314, %r16285;
	mov.u32 	%r16315, %r16285;
	mov.u32 	%r16316, %r16285;
	@%p430 bra 	BB5_726;
	bra.uni 	BB5_783;

BB5_726:
	mov.u32 	%r16283, 0;
	// inline asm
	prmt.b32 %r16299, %r16283, %r66, %r848;
	// inline asm
	ld.local.v2.u32 	{%r12792, %r12793}, [%rd8+8];
	// inline asm
	prmt.b32 %r16300, %r12793, %r12792, %r848;
	// inline asm
	ld.local.u32 	%r12649, [%rd8+8];
	ld.local.u32 	%r12650, [%rd8+4];
	// inline asm
	prmt.b32 %r16293, %r12649, %r12650, %r848;
	// inline asm
	ld.local.v2.u32 	{%r12794, %r12795}, [%rd8];
	// inline asm
	prmt.b32 %r16294, %r12795, %r12794, %r848;
	// inline asm
	ld.local.u32 	%r12657, [%rd8];
	ld.local.u32 	%r12658, [%rd7+12];
	// inline asm
	prmt.b32 %r16295, %r12657, %r12658, %r848;
	// inline asm
	ld.local.v2.u32 	{%r12796, %r12797}, [%rd7+8];
	// inline asm
	prmt.b32 %r16296, %r12797, %r12796, %r848;
	// inline asm
	ld.local.u32 	%r12665, [%rd7+8];
	ld.local.u32 	%r12666, [%rd7+4];
	// inline asm
	prmt.b32 %r16289, %r12665, %r12666, %r848;
	// inline asm
	ld.local.v2.u32 	{%r12798, %r12799}, [%rd7];
	// inline asm
	prmt.b32 %r16290, %r12799, %r12798, %r848;
	// inline asm
	ld.local.u32 	%r12673, [%rd7];
	ld.local.u32 	%r12674, [%rd6+12];
	// inline asm
	prmt.b32 %r16291, %r12673, %r12674, %r848;
	// inline asm
	ld.local.v2.u32 	{%r12800, %r12801}, [%rd6+8];
	// inline asm
	prmt.b32 %r16292, %r12801, %r12800, %r848;
	// inline asm
	ld.local.u32 	%r12681, [%rd6+8];
	ld.local.u32 	%r12682, [%rd6+4];
	// inline asm
	prmt.b32 %r16285, %r12681, %r12682, %r848;
	// inline asm
	ld.local.v2.u32 	{%r12802, %r12803}, [%rd6];
	// inline asm
	prmt.b32 %r16286, %r12803, %r12802, %r848;
	// inline asm
	ld.local.u32 	%r12689, [%rd6];
	ld.local.u32 	%r12690, [%rd5+12];
	// inline asm
	prmt.b32 %r16287, %r12689, %r12690, %r848;
	// inline asm
	ld.local.v2.u32 	{%r12804, %r12805}, [%rd5+8];
	// inline asm
	prmt.b32 %r16288, %r12805, %r12804, %r848;
	// inline asm
	ld.local.u32 	%r12697, [%rd5+8];
	ld.local.u32 	%r12698, [%rd5+4];
	// inline asm
	prmt.b32 %r12696, %r12697, %r12698, %r848;
	// inline asm
	st.local.u32 	[%rd8+12], %r12696;
	ld.local.v2.u32 	{%r12806, %r12807}, [%rd5];
	// inline asm
	prmt.b32 %r12700, %r12807, %r12806, %r848;
	// inline asm
	st.local.u32 	[%rd8+8], %r12700;
	ld.local.u32 	%r12705, [%rd5];
	ld.local.u32 	%r12706, [%rd4+12];
	// inline asm
	prmt.b32 %r12704, %r12705, %r12706, %r848;
	// inline asm
	st.local.u32 	[%rd8+4], %r12704;
	ld.local.v2.u32 	{%r12808, %r12809}, [%rd4+8];
	// inline asm
	prmt.b32 %r12708, %r12809, %r12808, %r848;
	// inline asm
	st.local.u32 	[%rd8], %r12708;
	ld.local.u32 	%r12713, [%rd4+8];
	ld.local.u32 	%r12714, [%rd4+4];
	// inline asm
	prmt.b32 %r12712, %r12713, %r12714, %r848;
	// inline asm
	st.local.u32 	[%rd7+12], %r12712;
	ld.local.v2.u32 	{%r12810, %r12811}, [%rd4];
	// inline asm
	prmt.b32 %r12716, %r12811, %r12810, %r848;
	// inline asm
	st.local.u32 	[%rd7+8], %r12716;
	ld.local.u32 	%r12721, [%rd4];
	ld.local.u32 	%r12722, [%rd3+12];
	// inline asm
	prmt.b32 %r12720, %r12721, %r12722, %r848;
	// inline asm
	st.local.u32 	[%rd7+4], %r12720;
	ld.local.v2.u32 	{%r12812, %r12813}, [%rd3+8];
	// inline asm
	prmt.b32 %r12724, %r12813, %r12812, %r848;
	// inline asm
	st.local.u32 	[%rd7], %r12724;
	ld.local.u32 	%r12729, [%rd3+8];
	ld.local.u32 	%r12730, [%rd3+4];
	// inline asm
	prmt.b32 %r12728, %r12729, %r12730, %r848;
	// inline asm
	st.local.u32 	[%rd6+12], %r12728;
	ld.local.v2.u32 	{%r12814, %r12815}, [%rd3];
	// inline asm
	prmt.b32 %r12732, %r12815, %r12814, %r848;
	// inline asm
	st.local.u32 	[%rd6+8], %r12732;
	ld.local.u32 	%r12737, [%rd3];
	ld.local.u32 	%r12738, [%rd2+12];
	// inline asm
	prmt.b32 %r12736, %r12737, %r12738, %r848;
	// inline asm
	st.local.u32 	[%rd6+4], %r12736;
	ld.local.v2.u32 	{%r12816, %r12817}, [%rd2+8];
	// inline asm
	prmt.b32 %r12740, %r12817, %r12816, %r848;
	// inline asm
	st.local.u32 	[%rd6], %r12740;
	ld.local.u32 	%r12745, [%rd2+8];
	ld.local.u32 	%r12746, [%rd2+4];
	// inline asm
	prmt.b32 %r12744, %r12745, %r12746, %r848;
	// inline asm
	st.local.u32 	[%rd5+12], %r12744;
	ld.local.v2.u32 	{%r12818, %r12819}, [%rd2];
	// inline asm
	prmt.b32 %r12748, %r12819, %r12818, %r848;
	// inline asm
	st.local.u32 	[%rd5+8], %r12748;
	ld.local.u32 	%r12753, [%rd2];
	ld.local.u32 	%r12754, [%rd1+12];
	// inline asm
	prmt.b32 %r12752, %r12753, %r12754, %r848;
	// inline asm
	st.local.u32 	[%rd5+4], %r12752;
	ld.local.v2.u32 	{%r12820, %r12821}, [%rd1+8];
	// inline asm
	prmt.b32 %r12756, %r12821, %r12820, %r848;
	// inline asm
	st.local.u32 	[%rd5], %r12756;
	ld.local.u32 	%r12761, [%rd1+8];
	ld.local.u32 	%r12762, [%rd1+4];
	// inline asm
	prmt.b32 %r12760, %r12761, %r12762, %r848;
	// inline asm
	st.local.u32 	[%rd4+12], %r12760;
	ld.local.v2.u32 	{%r12822, %r12823}, [%rd1];
	// inline asm
	prmt.b32 %r12764, %r12823, %r12822, %r848;
	// inline asm
	st.local.u32 	[%rd4+8], %r12764;
	ld.local.u32 	%r12769, [%rd1];
	// inline asm
	prmt.b32 %r12768, %r12769, %r16283, %r848;
	// inline asm
	st.local.v2.u32 	[%rd4], {%r16283, %r12768};
	st.local.v4.u32 	[%rd3], {%r16283, %r16283, %r16283, %r16283};
	st.local.v4.u32 	[%rd2], {%r16283, %r16283, %r16283, %r16283};
	st.local.v2.u32 	[%rd1+8], {%r16283, %r16283};
	mov.u64 	%rd1966, 0;
	st.local.u64 	[%rd1], %rd1966;
	mov.u32 	%r16284, %r16283;
	mov.u32 	%r16297, %r16283;
	mov.u32 	%r16298, %r16283;
	bra.uni 	BB5_777;

BB5_756:
	setp.eq.s32	%p407, %r9492, 29;
	mov.u32 	%r16286, %r16285;
	mov.u32 	%r16287, %r16285;
	mov.u32 	%r16288, %r16285;
	mov.u32 	%r16289, %r16285;
	mov.u32 	%r16290, %r16285;
	mov.u32 	%r16291, %r16285;
	mov.u32 	%r16292, %r16285;
	mov.u32 	%r16293, %r16285;
	mov.u32 	%r16294, %r16285;
	mov.u32 	%r16295, %r16285;
	mov.u32 	%r16296, %r16285;
	mov.u32 	%r16297, %r16285;
	mov.u32 	%r16298, %r16285;
	mov.u32 	%r16299, %r16285;
	mov.u32 	%r16300, %r16285;
	mov.u32 	%r16301, %r16285;
	mov.u32 	%r16302, %r16285;
	mov.u32 	%r16303, %r16285;
	mov.u32 	%r16304, %r16285;
	mov.u32 	%r16305, %r16285;
	mov.u32 	%r16306, %r16285;
	mov.u32 	%r16307, %r16285;
	mov.u32 	%r16308, %r16285;
	mov.u32 	%r16309, %r16285;
	mov.u32 	%r16310, %r16285;
	mov.u32 	%r16311, %r16285;
	mov.u32 	%r16312, %r16285;
	mov.u32 	%r16313, %r16285;
	mov.u32 	%r16314, %r16285;
	mov.u32 	%r16315, %r16285;
	mov.u32 	%r16316, %r16285;
	@%p407 bra 	BB5_757;
	bra.uni 	BB5_783;

BB5_757:
	mov.u32 	%r16283, 0;
	// inline asm
	prmt.b32 %r16315, %r16283, %r66, %r848;
	// inline asm
	ld.local.v2.u32 	{%r9968, %r9969}, [%rd8+8];
	// inline asm
	prmt.b32 %r16316, %r9969, %r9968, %r848;
	// inline asm
	ld.local.u32 	%r9841, [%rd8+8];
	ld.local.u32 	%r9842, [%rd8+4];
	// inline asm
	prmt.b32 %r16309, %r9841, %r9842, %r848;
	// inline asm
	ld.local.v2.u32 	{%r9970, %r9971}, [%rd8];
	// inline asm
	prmt.b32 %r16310, %r9971, %r9970, %r848;
	// inline asm
	ld.local.u32 	%r9849, [%rd8];
	ld.local.u32 	%r9850, [%rd7+12];
	// inline asm
	prmt.b32 %r16311, %r9849, %r9850, %r848;
	// inline asm
	ld.local.v2.u32 	{%r9972, %r9973}, [%rd7+8];
	// inline asm
	prmt.b32 %r16312, %r9973, %r9972, %r848;
	// inline asm
	ld.local.u32 	%r9857, [%rd7+8];
	ld.local.u32 	%r9858, [%rd7+4];
	// inline asm
	prmt.b32 %r16305, %r9857, %r9858, %r848;
	// inline asm
	ld.local.v2.u32 	{%r9974, %r9975}, [%rd7];
	// inline asm
	prmt.b32 %r16306, %r9975, %r9974, %r848;
	// inline asm
	ld.local.u32 	%r9865, [%rd7];
	ld.local.u32 	%r9866, [%rd6+12];
	// inline asm
	prmt.b32 %r16307, %r9865, %r9866, %r848;
	// inline asm
	ld.local.v2.u32 	{%r9976, %r9977}, [%rd6+8];
	// inline asm
	prmt.b32 %r16308, %r9977, %r9976, %r848;
	// inline asm
	ld.local.u32 	%r9873, [%rd6+8];
	ld.local.u32 	%r9874, [%rd6+4];
	// inline asm
	prmt.b32 %r16301, %r9873, %r9874, %r848;
	// inline asm
	ld.local.v2.u32 	{%r9978, %r9979}, [%rd6];
	// inline asm
	prmt.b32 %r16302, %r9979, %r9978, %r848;
	// inline asm
	ld.local.u32 	%r9881, [%rd6];
	ld.local.u32 	%r9882, [%rd5+12];
	// inline asm
	prmt.b32 %r16303, %r9881, %r9882, %r848;
	// inline asm
	ld.local.v2.u32 	{%r9980, %r9981}, [%rd5+8];
	// inline asm
	prmt.b32 %r16304, %r9981, %r9980, %r848;
	// inline asm
	ld.local.u32 	%r9889, [%rd5+8];
	ld.local.u32 	%r9890, [%rd5+4];
	// inline asm
	prmt.b32 %r16297, %r9889, %r9890, %r848;
	// inline asm
	ld.local.v2.u32 	{%r9982, %r9983}, [%rd5];
	// inline asm
	prmt.b32 %r16298, %r9983, %r9982, %r848;
	// inline asm
	ld.local.u32 	%r9897, [%rd5];
	ld.local.u32 	%r9898, [%rd4+12];
	// inline asm
	prmt.b32 %r16299, %r9897, %r9898, %r848;
	// inline asm
	ld.local.v2.u32 	{%r9984, %r9985}, [%rd4+8];
	// inline asm
	prmt.b32 %r16300, %r9985, %r9984, %r848;
	// inline asm
	ld.local.u32 	%r9905, [%rd4+8];
	ld.local.u32 	%r9906, [%rd4+4];
	// inline asm
	prmt.b32 %r16293, %r9905, %r9906, %r848;
	// inline asm
	ld.local.v2.u32 	{%r9986, %r9987}, [%rd4];
	// inline asm
	prmt.b32 %r16294, %r9987, %r9986, %r848;
	// inline asm
	ld.local.u32 	%r9913, [%rd4];
	ld.local.u32 	%r9914, [%rd3+12];
	// inline asm
	prmt.b32 %r16295, %r9913, %r9914, %r848;
	// inline asm
	ld.local.v2.u32 	{%r9988, %r9989}, [%rd3+8];
	// inline asm
	prmt.b32 %r16296, %r9989, %r9988, %r848;
	// inline asm
	ld.local.u32 	%r9921, [%rd3+8];
	ld.local.u32 	%r9922, [%rd3+4];
	// inline asm
	prmt.b32 %r16289, %r9921, %r9922, %r848;
	// inline asm
	ld.local.v2.u32 	{%r9990, %r9991}, [%rd3];
	// inline asm
	prmt.b32 %r16290, %r9991, %r9990, %r848;
	// inline asm
	ld.local.u32 	%r9929, [%rd3];
	ld.local.u32 	%r9930, [%rd2+12];
	// inline asm
	prmt.b32 %r16291, %r9929, %r9930, %r848;
	// inline asm
	ld.local.v2.u32 	{%r9992, %r9993}, [%rd2+8];
	// inline asm
	prmt.b32 %r16292, %r9993, %r9992, %r848;
	// inline asm
	ld.local.u32 	%r9937, [%rd2+8];
	ld.local.u32 	%r9938, [%rd2+4];
	// inline asm
	prmt.b32 %r16285, %r9937, %r9938, %r848;
	// inline asm
	ld.local.v2.u32 	{%r9994, %r9995}, [%rd2];
	// inline asm
	prmt.b32 %r16286, %r9995, %r9994, %r848;
	// inline asm
	ld.local.u32 	%r9945, [%rd2];
	ld.local.u32 	%r9946, [%rd1+12];
	// inline asm
	prmt.b32 %r16287, %r9945, %r9946, %r848;
	// inline asm
	ld.local.v2.u32 	{%r9996, %r9997}, [%rd1+8];
	// inline asm
	prmt.b32 %r16288, %r9997, %r9996, %r848;
	// inline asm
	ld.local.u32 	%r9953, [%rd1+8];
	ld.local.u32 	%r9954, [%rd1+4];
	// inline asm
	prmt.b32 %r9952, %r9953, %r9954, %r848;
	// inline asm
	st.local.u32 	[%rd8+12], %r9952;
	ld.local.v2.u32 	{%r9998, %r9999}, [%rd1];
	// inline asm
	prmt.b32 %r9956, %r9999, %r9998, %r848;
	// inline asm
	st.local.u32 	[%rd8+8], %r9956;
	ld.local.u32 	%r9961, [%rd1];
	// inline asm
	prmt.b32 %r9960, %r9961, %r16283, %r848;
	// inline asm
	st.local.v2.u32 	[%rd8], {%r16283, %r9960};
	st.local.v4.u32 	[%rd7], {%r16283, %r16283, %r16283, %r16283};
	st.local.v4.u32 	[%rd6], {%r16283, %r16283, %r16283, %r16283};
	st.local.v4.u32 	[%rd5], {%r16283, %r16283, %r16283, %r16283};
	st.local.v4.u32 	[%rd4], {%r16283, %r16283, %r16283, %r16283};
	st.local.v4.u32 	[%rd3], {%r16283, %r16283, %r16283, %r16283};
	st.local.v4.u32 	[%rd2], {%r16283, %r16283, %r16283, %r16283};
	st.local.v2.u32 	[%rd1+8], {%r16283, %r16283};
	mov.u64 	%rd1950, 0;
	st.local.u64 	[%rd1], %rd1950;
	mov.u32 	%r16284, %r16283;
	mov.u32 	%r16313, %r16283;
	mov.u32 	%r16314, %r16283;
	bra.uni 	BB5_783;

BB5_705:
	setp.eq.s32	%p444, %r9492, 3;
	mov.u32 	%r16286, %r16285;
	mov.u32 	%r16287, %r16285;
	mov.u32 	%r16288, %r16285;
	mov.u32 	%r16289, %r16285;
	mov.u32 	%r16290, %r16285;
	mov.u32 	%r16291, %r16285;
	mov.u32 	%r16292, %r16285;
	mov.u32 	%r16293, %r16285;
	mov.u32 	%r16294, %r16285;
	mov.u32 	%r16295, %r16285;
	mov.u32 	%r16296, %r16285;
	mov.u32 	%r16297, %r16285;
	mov.u32 	%r16298, %r16285;
	mov.u32 	%r16299, %r16285;
	mov.u32 	%r16300, %r16285;
	mov.u32 	%r16301, %r16285;
	mov.u32 	%r16302, %r16285;
	mov.u32 	%r16303, %r16285;
	mov.u32 	%r16304, %r16285;
	mov.u32 	%r16305, %r16285;
	mov.u32 	%r16306, %r16285;
	mov.u32 	%r16307, %r16285;
	mov.u32 	%r16308, %r16285;
	mov.u32 	%r16309, %r16285;
	mov.u32 	%r16310, %r16285;
	mov.u32 	%r16311, %r16285;
	mov.u32 	%r16312, %r16285;
	mov.u32 	%r16313, %r16285;
	mov.u32 	%r16314, %r16285;
	mov.u32 	%r16315, %r16285;
	mov.u32 	%r16316, %r16285;
	@%p444 bra 	BB5_706;
	bra.uni 	BB5_783;

BB5_706:
	mov.u32 	%r16283, 0;
	// inline asm
	prmt.b32 %r16285, %r16283, %r66, %r848;
	// inline asm
	ld.local.v2.u32 	{%r14687, %r14688}, [%rd8+8];
	// inline asm
	prmt.b32 %r16286, %r14688, %r14687, %r848;
	// inline asm
	ld.local.u32 	%r14534, [%rd8+8];
	ld.local.u32 	%r14535, [%rd8+4];
	// inline asm
	prmt.b32 %r16287, %r14534, %r14535, %r848;
	// inline asm
	ld.local.v2.u32 	{%r14689, %r14690}, [%rd8];
	// inline asm
	prmt.b32 %r16288, %r14690, %r14689, %r848;
	// inline asm
	ld.local.u32 	%r14542, [%rd8];
	ld.local.u32 	%r14543, [%rd7+12];
	// inline asm
	prmt.b32 %r14541, %r14542, %r14543, %r848;
	// inline asm
	st.local.u32 	[%rd8+12], %r14541;
	ld.local.v2.u32 	{%r14691, %r14692}, [%rd7+8];
	// inline asm
	prmt.b32 %r14545, %r14692, %r14691, %r848;
	// inline asm
	st.local.u32 	[%rd8+8], %r14545;
	ld.local.u32 	%r14550, [%rd7+8];
	ld.local.u32 	%r14551, [%rd7+4];
	// inline asm
	prmt.b32 %r14549, %r14550, %r14551, %r848;
	// inline asm
	st.local.u32 	[%rd8+4], %r14549;
	ld.local.v2.u32 	{%r14693, %r14694}, [%rd7];
	// inline asm
	prmt.b32 %r14553, %r14694, %r14693, %r848;
	// inline asm
	st.local.u32 	[%rd8], %r14553;
	ld.local.u32 	%r14558, [%rd7];
	ld.local.u32 	%r14559, [%rd6+12];
	// inline asm
	prmt.b32 %r14557, %r14558, %r14559, %r848;
	// inline asm
	st.local.u32 	[%rd7+12], %r14557;
	ld.local.v2.u32 	{%r14695, %r14696}, [%rd6+8];
	// inline asm
	prmt.b32 %r14561, %r14696, %r14695, %r848;
	// inline asm
	st.local.u32 	[%rd7+8], %r14561;
	ld.local.u32 	%r14566, [%rd6+8];
	ld.local.u32 	%r14567, [%rd6+4];
	// inline asm
	prmt.b32 %r14565, %r14566, %r14567, %r848;
	// inline asm
	st.local.u32 	[%rd7+4], %r14565;
	ld.local.v2.u32 	{%r14697, %r14698}, [%rd6];
	// inline asm
	prmt.b32 %r14569, %r14698, %r14697, %r848;
	// inline asm
	st.local.u32 	[%rd7], %r14569;
	ld.local.u32 	%r14574, [%rd6];
	ld.local.u32 	%r14575, [%rd5+12];
	// inline asm
	prmt.b32 %r14573, %r14574, %r14575, %r848;
	// inline asm
	st.local.u32 	[%rd6+12], %r14573;
	ld.local.v2.u32 	{%r14699, %r14700}, [%rd5+8];
	// inline asm
	prmt.b32 %r14577, %r14700, %r14699, %r848;
	// inline asm
	st.local.u32 	[%rd6+8], %r14577;
	ld.local.u32 	%r14582, [%rd5+8];
	ld.local.u32 	%r14583, [%rd5+4];
	// inline asm
	prmt.b32 %r14581, %r14582, %r14583, %r848;
	// inline asm
	st.local.u32 	[%rd6+4], %r14581;
	ld.local.v2.u32 	{%r14701, %r14702}, [%rd5];
	// inline asm
	prmt.b32 %r14585, %r14702, %r14701, %r848;
	// inline asm
	st.local.u32 	[%rd6], %r14585;
	ld.local.u32 	%r14590, [%rd5];
	ld.local.u32 	%r14591, [%rd4+12];
	// inline asm
	prmt.b32 %r14589, %r14590, %r14591, %r848;
	// inline asm
	st.local.u32 	[%rd5+12], %r14589;
	ld.local.v2.u32 	{%r14703, %r14704}, [%rd4+8];
	// inline asm
	prmt.b32 %r14593, %r14704, %r14703, %r848;
	// inline asm
	st.local.u32 	[%rd5+8], %r14593;
	ld.local.u32 	%r14598, [%rd4+8];
	ld.local.u32 	%r14599, [%rd4+4];
	// inline asm
	prmt.b32 %r14597, %r14598, %r14599, %r848;
	// inline asm
	st.local.u32 	[%rd5+4], %r14597;
	ld.local.v2.u32 	{%r14705, %r14706}, [%rd4];
	// inline asm
	prmt.b32 %r14601, %r14706, %r14705, %r848;
	// inline asm
	st.local.u32 	[%rd5], %r14601;
	ld.local.u32 	%r14606, [%rd4];
	ld.local.u32 	%r14607, [%rd3+12];
	// inline asm
	prmt.b32 %r14605, %r14606, %r14607, %r848;
	// inline asm
	st.local.u32 	[%rd4+12], %r14605;
	ld.local.v2.u32 	{%r14707, %r14708}, [%rd3+8];
	// inline asm
	prmt.b32 %r14609, %r14708, %r14707, %r848;
	// inline asm
	st.local.u32 	[%rd4+8], %r14609;
	ld.local.u32 	%r14614, [%rd3+8];
	ld.local.u32 	%r14615, [%rd3+4];
	// inline asm
	prmt.b32 %r14613, %r14614, %r14615, %r848;
	// inline asm
	st.local.u32 	[%rd4+4], %r14613;
	ld.local.v2.u32 	{%r14709, %r14710}, [%rd3];
	// inline asm
	prmt.b32 %r14617, %r14710, %r14709, %r848;
	// inline asm
	st.local.u32 	[%rd4], %r14617;
	ld.local.u32 	%r14622, [%rd3];
	ld.local.u32 	%r14623, [%rd2+12];
	// inline asm
	prmt.b32 %r14621, %r14622, %r14623, %r848;
	// inline asm
	st.local.u32 	[%rd3+12], %r14621;
	ld.local.v2.u32 	{%r14711, %r14712}, [%rd2+8];
	// inline asm
	prmt.b32 %r14625, %r14712, %r14711, %r848;
	// inline asm
	st.local.u32 	[%rd3+8], %r14625;
	ld.local.u32 	%r14630, [%rd2+8];
	ld.local.u32 	%r14631, [%rd2+4];
	// inline asm
	prmt.b32 %r14629, %r14630, %r14631, %r848;
	// inline asm
	st.local.u32 	[%rd3+4], %r14629;
	ld.local.v2.u32 	{%r14713, %r14714}, [%rd2];
	// inline asm
	prmt.b32 %r14633, %r14714, %r14713, %r848;
	// inline asm
	st.local.u32 	[%rd3], %r14633;
	ld.local.u32 	%r14638, [%rd2];
	ld.local.u32 	%r14639, [%rd1+12];
	// inline asm
	prmt.b32 %r14637, %r14638, %r14639, %r848;
	// inline asm
	st.local.u32 	[%rd2+12], %r14637;
	ld.local.v2.u32 	{%r14715, %r14716}, [%rd1+8];
	// inline asm
	prmt.b32 %r14641, %r14716, %r14715, %r848;
	// inline asm
	st.local.u32 	[%rd2+8], %r14641;
	ld.local.u32 	%r14646, [%rd1+8];
	ld.local.u32 	%r14647, [%rd1+4];
	// inline asm
	prmt.b32 %r14645, %r14646, %r14647, %r848;
	// inline asm
	st.local.u32 	[%rd2+4], %r14645;
	ld.local.v2.u32 	{%r14717, %r14718}, [%rd1];
	// inline asm
	prmt.b32 %r14649, %r14718, %r14717, %r848;
	// inline asm
	st.local.u32 	[%rd2], %r14649;
	ld.local.u32 	%r14654, [%rd1];
	// inline asm
	prmt.b32 %r14653, %r14654, %r16283, %r848;
	// inline asm
	st.local.v2.u32 	[%rd1+8], {%r16283, %r14653};
	mov.u64 	%rd1976, 0;
	st.local.u64 	[%rd1], %rd1976;
	mov.u32 	%r16284, %r16283;

BB5_707:
	mov.u32 	%r16289, %r16283;
	mov.u32 	%r16290, %r16283;
	mov.u32 	%r16291, %r16283;
	mov.u32 	%r16292, %r16283;
	bra.uni 	BB5_775;

BB5_737:
	setp.eq.s32	%p421, %r9492, 19;
	mov.u32 	%r16286, %r16285;
	mov.u32 	%r16287, %r16285;
	mov.u32 	%r16288, %r16285;
	mov.u32 	%r16289, %r16285;
	mov.u32 	%r16290, %r16285;
	mov.u32 	%r16291, %r16285;
	mov.u32 	%r16292, %r16285;
	mov.u32 	%r16293, %r16285;
	mov.u32 	%r16294, %r16285;
	mov.u32 	%r16295, %r16285;
	mov.u32 	%r16296, %r16285;
	mov.u32 	%r16297, %r16285;
	mov.u32 	%r16298, %r16285;
	mov.u32 	%r16299, %r16285;
	mov.u32 	%r16300, %r16285;
	mov.u32 	%r16301, %r16285;
	mov.u32 	%r16302, %r16285;
	mov.u32 	%r16303, %r16285;
	mov.u32 	%r16304, %r16285;
	mov.u32 	%r16305, %r16285;
	mov.u32 	%r16306, %r16285;
	mov.u32 	%r16307, %r16285;
	mov.u32 	%r16308, %r16285;
	mov.u32 	%r16309, %r16285;
	mov.u32 	%r16310, %r16285;
	mov.u32 	%r16311, %r16285;
	mov.u32 	%r16312, %r16285;
	mov.u32 	%r16313, %r16285;
	mov.u32 	%r16314, %r16285;
	mov.u32 	%r16315, %r16285;
	mov.u32 	%r16316, %r16285;
	@%p421 bra 	BB5_738;
	bra.uni 	BB5_783;

BB5_738:
	mov.u32 	%r16283, 0;
	// inline asm
	prmt.b32 %r16301, %r16283, %r66, %r848;
	// inline asm
	ld.local.v2.u32 	{%r11703, %r11704}, [%rd8+8];
	// inline asm
	prmt.b32 %r16302, %r11704, %r11703, %r848;
	// inline asm
	ld.local.u32 	%r11566, [%rd8+8];
	ld.local.u32 	%r11567, [%rd8+4];
	// inline asm
	prmt.b32 %r16303, %r11566, %r11567, %r848;
	// inline asm
	ld.local.v2.u32 	{%r11705, %r11706}, [%rd8];
	// inline asm
	prmt.b32 %r16304, %r11706, %r11705, %r848;
	// inline asm
	ld.local.u32 	%r11574, [%rd8];
	ld.local.u32 	%r11575, [%rd7+12];
	// inline asm
	prmt.b32 %r16297, %r11574, %r11575, %r848;
	// inline asm
	ld.local.v2.u32 	{%r11707, %r11708}, [%rd7+8];
	// inline asm
	prmt.b32 %r16298, %r11708, %r11707, %r848;
	// inline asm
	ld.local.u32 	%r11582, [%rd7+8];
	ld.local.u32 	%r11583, [%rd7+4];
	// inline asm
	prmt.b32 %r16299, %r11582, %r11583, %r848;
	// inline asm
	ld.local.v2.u32 	{%r11709, %r11710}, [%rd7];
	// inline asm
	prmt.b32 %r16300, %r11710, %r11709, %r848;
	// inline asm
	ld.local.u32 	%r11590, [%rd7];
	ld.local.u32 	%r11591, [%rd6+12];
	// inline asm
	prmt.b32 %r16293, %r11590, %r11591, %r848;
	// inline asm
	ld.local.v2.u32 	{%r11711, %r11712}, [%rd6+8];
	// inline asm
	prmt.b32 %r16294, %r11712, %r11711, %r848;
	// inline asm
	ld.local.u32 	%r11598, [%rd6+8];
	ld.local.u32 	%r11599, [%rd6+4];
	// inline asm
	prmt.b32 %r16295, %r11598, %r11599, %r848;
	// inline asm
	ld.local.v2.u32 	{%r11713, %r11714}, [%rd6];
	// inline asm
	prmt.b32 %r16296, %r11714, %r11713, %r848;
	// inline asm
	ld.local.u32 	%r11606, [%rd6];
	ld.local.u32 	%r11607, [%rd5+12];
	// inline asm
	prmt.b32 %r16289, %r11606, %r11607, %r848;
	// inline asm
	ld.local.v2.u32 	{%r11715, %r11716}, [%rd5+8];
	// inline asm
	prmt.b32 %r16290, %r11716, %r11715, %r848;
	// inline asm
	ld.local.u32 	%r11614, [%rd5+8];
	ld.local.u32 	%r11615, [%rd5+4];
	// inline asm
	prmt.b32 %r16291, %r11614, %r11615, %r848;
	// inline asm
	ld.local.v2.u32 	{%r11717, %r11718}, [%rd5];
	// inline asm
	prmt.b32 %r16292, %r11718, %r11717, %r848;
	// inline asm
	ld.local.u32 	%r11622, [%rd5];
	ld.local.u32 	%r11623, [%rd4+12];
	// inline asm
	prmt.b32 %r16285, %r11622, %r11623, %r848;
	// inline asm
	ld.local.v2.u32 	{%r11719, %r11720}, [%rd4+8];
	// inline asm
	prmt.b32 %r16286, %r11720, %r11719, %r848;
	// inline asm
	ld.local.u32 	%r11630, [%rd4+8];
	ld.local.u32 	%r11631, [%rd4+4];
	// inline asm
	prmt.b32 %r16287, %r11630, %r11631, %r848;
	// inline asm
	ld.local.v2.u32 	{%r11721, %r11722}, [%rd4];
	// inline asm
	prmt.b32 %r16288, %r11722, %r11721, %r848;
	// inline asm
	ld.local.u32 	%r11638, [%rd4];
	ld.local.u32 	%r11639, [%rd3+12];
	// inline asm
	prmt.b32 %r11637, %r11638, %r11639, %r848;
	// inline asm
	st.local.u32 	[%rd8+12], %r11637;
	ld.local.v2.u32 	{%r11723, %r11724}, [%rd3+8];
	// inline asm
	prmt.b32 %r11641, %r11724, %r11723, %r848;
	// inline asm
	st.local.u32 	[%rd8+8], %r11641;
	ld.local.u32 	%r11646, [%rd3+8];
	ld.local.u32 	%r11647, [%rd3+4];
	// inline asm
	prmt.b32 %r11645, %r11646, %r11647, %r848;
	// inline asm
	st.local.u32 	[%rd8+4], %r11645;
	ld.local.v2.u32 	{%r11725, %r11726}, [%rd3];
	// inline asm
	prmt.b32 %r11649, %r11726, %r11725, %r848;
	// inline asm
	st.local.u32 	[%rd8], %r11649;
	ld.local.u32 	%r11654, [%rd3];
	ld.local.u32 	%r11655, [%rd2+12];
	// inline asm
	prmt.b32 %r11653, %r11654, %r11655, %r848;
	// inline asm
	st.local.u32 	[%rd7+12], %r11653;
	ld.local.v2.u32 	{%r11727, %r11728}, [%rd2+8];
	// inline asm
	prmt.b32 %r11657, %r11728, %r11727, %r848;
	// inline asm
	st.local.u32 	[%rd7+8], %r11657;
	ld.local.u32 	%r11662, [%rd2+8];
	ld.local.u32 	%r11663, [%rd2+4];
	// inline asm
	prmt.b32 %r11661, %r11662, %r11663, %r848;
	// inline asm
	st.local.u32 	[%rd7+4], %r11661;
	ld.local.v2.u32 	{%r11729, %r11730}, [%rd2];
	// inline asm
	prmt.b32 %r11665, %r11730, %r11729, %r848;
	// inline asm
	st.local.u32 	[%rd7], %r11665;
	ld.local.u32 	%r11670, [%rd2];
	ld.local.u32 	%r11671, [%rd1+12];
	// inline asm
	prmt.b32 %r11669, %r11670, %r11671, %r848;
	// inline asm
	st.local.u32 	[%rd6+12], %r11669;
	ld.local.v2.u32 	{%r11731, %r11732}, [%rd1+8];
	// inline asm
	prmt.b32 %r11673, %r11732, %r11731, %r848;
	// inline asm
	st.local.u32 	[%rd6+8], %r11673;
	ld.local.u32 	%r11678, [%rd1+8];
	ld.local.u32 	%r11679, [%rd1+4];
	// inline asm
	prmt.b32 %r11677, %r11678, %r11679, %r848;
	// inline asm
	st.local.u32 	[%rd6+4], %r11677;
	ld.local.v2.u32 	{%r11733, %r11734}, [%rd1];
	// inline asm
	prmt.b32 %r11681, %r11734, %r11733, %r848;
	// inline asm
	st.local.u32 	[%rd6], %r11681;
	ld.local.u32 	%r11686, [%rd1];
	// inline asm
	prmt.b32 %r11685, %r11686, %r16283, %r848;
	// inline asm
	st.local.v4.u32 	[%rd5], {%r16283, %r16283, %r16283, %r11685};
	st.local.v4.u32 	[%rd4], {%r16283, %r16283, %r16283, %r16283};
	st.local.v4.u32 	[%rd3], {%r16283, %r16283, %r16283, %r16283};
	st.local.v4.u32 	[%rd2], {%r16283, %r16283, %r16283, %r16283};
	st.local.v2.u32 	[%rd1+8], {%r16283, %r16283};
	mov.u64 	%rd1960, 0;
	st.local.u64 	[%rd1], %rd1960;
	mov.u32 	%r16284, %r16283;
	bra.uni 	BB5_778;

BB5_721:
	setp.eq.s32	%p433, %r9492, 11;
	mov.u32 	%r16286, %r16285;
	mov.u32 	%r16287, %r16285;
	mov.u32 	%r16288, %r16285;
	mov.u32 	%r16289, %r16285;
	mov.u32 	%r16290, %r16285;
	mov.u32 	%r16291, %r16285;
	mov.u32 	%r16292, %r16285;
	mov.u32 	%r16293, %r16285;
	mov.u32 	%r16294, %r16285;
	mov.u32 	%r16295, %r16285;
	mov.u32 	%r16296, %r16285;
	mov.u32 	%r16297, %r16285;
	mov.u32 	%r16298, %r16285;
	mov.u32 	%r16299, %r16285;
	mov.u32 	%r16300, %r16285;
	mov.u32 	%r16301, %r16285;
	mov.u32 	%r16302, %r16285;
	mov.u32 	%r16303, %r16285;
	mov.u32 	%r16304, %r16285;
	mov.u32 	%r16305, %r16285;
	mov.u32 	%r16306, %r16285;
	mov.u32 	%r16307, %r16285;
	mov.u32 	%r16308, %r16285;
	mov.u32 	%r16309, %r16285;
	mov.u32 	%r16310, %r16285;
	mov.u32 	%r16311, %r16285;
	mov.u32 	%r16312, %r16285;
	mov.u32 	%r16313, %r16285;
	mov.u32 	%r16314, %r16285;
	mov.u32 	%r16315, %r16285;
	mov.u32 	%r16316, %r16285;
	@%p433 bra 	BB5_722;
	bra.uni 	BB5_783;

BB5_722:
	mov.u32 	%r16283, 0;
	// inline asm
	prmt.b32 %r16293, %r16283, %r66, %r848;
	// inline asm
	ld.local.v2.u32 	{%r13163, %r13164}, [%rd8+8];
	// inline asm
	prmt.b32 %r16294, %r13164, %r13163, %r848;
	// inline asm
	ld.local.u32 	%r13018, [%rd8+8];
	ld.local.u32 	%r13019, [%rd8+4];
	// inline asm
	prmt.b32 %r16295, %r13018, %r13019, %r848;
	// inline asm
	ld.local.v2.u32 	{%r13165, %r13166}, [%rd8];
	// inline asm
	prmt.b32 %r16296, %r13166, %r13165, %r848;
	// inline asm
	ld.local.u32 	%r13026, [%rd8];
	ld.local.u32 	%r13027, [%rd7+12];
	// inline asm
	prmt.b32 %r16289, %r13026, %r13027, %r848;
	// inline asm
	ld.local.v2.u32 	{%r13167, %r13168}, [%rd7+8];
	// inline asm
	prmt.b32 %r16290, %r13168, %r13167, %r848;
	// inline asm
	ld.local.u32 	%r13034, [%rd7+8];
	ld.local.u32 	%r13035, [%rd7+4];
	// inline asm
	prmt.b32 %r16291, %r13034, %r13035, %r848;
	// inline asm
	ld.local.v2.u32 	{%r13169, %r13170}, [%rd7];
	// inline asm
	prmt.b32 %r16292, %r13170, %r13169, %r848;
	// inline asm
	ld.local.u32 	%r13042, [%rd7];
	ld.local.u32 	%r13043, [%rd6+12];
	// inline asm
	prmt.b32 %r16285, %r13042, %r13043, %r848;
	// inline asm
	ld.local.v2.u32 	{%r13171, %r13172}, [%rd6+8];
	// inline asm
	prmt.b32 %r16286, %r13172, %r13171, %r848;
	// inline asm
	ld.local.u32 	%r13050, [%rd6+8];
	ld.local.u32 	%r13051, [%rd6+4];
	// inline asm
	prmt.b32 %r16287, %r13050, %r13051, %r848;
	// inline asm
	ld.local.v2.u32 	{%r13173, %r13174}, [%rd6];
	// inline asm
	prmt.b32 %r16288, %r13174, %r13173, %r848;
	// inline asm
	ld.local.u32 	%r13058, [%rd6];
	ld.local.u32 	%r13059, [%rd5+12];
	// inline asm
	prmt.b32 %r13057, %r13058, %r13059, %r848;
	// inline asm
	st.local.u32 	[%rd8+12], %r13057;
	ld.local.v2.u32 	{%r13175, %r13176}, [%rd5+8];
	// inline asm
	prmt.b32 %r13061, %r13176, %r13175, %r848;
	// inline asm
	st.local.u32 	[%rd8+8], %r13061;
	ld.local.u32 	%r13066, [%rd5+8];
	ld.local.u32 	%r13067, [%rd5+4];
	// inline asm
	prmt.b32 %r13065, %r13066, %r13067, %r848;
	// inline asm
	st.local.u32 	[%rd8+4], %r13065;
	ld.local.v2.u32 	{%r13177, %r13178}, [%rd5];
	// inline asm
	prmt.b32 %r13069, %r13178, %r13177, %r848;
	// inline asm
	st.local.u32 	[%rd8], %r13069;
	ld.local.u32 	%r13074, [%rd5];
	ld.local.u32 	%r13075, [%rd4+12];
	// inline asm
	prmt.b32 %r13073, %r13074, %r13075, %r848;
	// inline asm
	st.local.u32 	[%rd7+12], %r13073;
	ld.local.v2.u32 	{%r13179, %r13180}, [%rd4+8];
	// inline asm
	prmt.b32 %r13077, %r13180, %r13179, %r848;
	// inline asm
	st.local.u32 	[%rd7+8], %r13077;
	ld.local.u32 	%r13082, [%rd4+8];
	ld.local.u32 	%r13083, [%rd4+4];
	// inline asm
	prmt.b32 %r13081, %r13082, %r13083, %r848;
	// inline asm
	st.local.u32 	[%rd7+4], %r13081;
	ld.local.v2.u32 	{%r13181, %r13182}, [%rd4];
	// inline asm
	prmt.b32 %r13085, %r13182, %r13181, %r848;
	// inline asm
	st.local.u32 	[%rd7], %r13085;
	ld.local.u32 	%r13090, [%rd4];
	ld.local.u32 	%r13091, [%rd3+12];
	// inline asm
	prmt.b32 %r13089, %r13090, %r13091, %r848;
	// inline asm
	st.local.u32 	[%rd6+12], %r13089;
	ld.local.v2.u32 	{%r13183, %r13184}, [%rd3+8];
	// inline asm
	prmt.b32 %r13093, %r13184, %r13183, %r848;
	// inline asm
	st.local.u32 	[%rd6+8], %r13093;
	ld.local.u32 	%r13098, [%rd3+8];
	ld.local.u32 	%r13099, [%rd3+4];
	// inline asm
	prmt.b32 %r13097, %r13098, %r13099, %r848;
	// inline asm
	st.local.u32 	[%rd6+4], %r13097;
	ld.local.v2.u32 	{%r13185, %r13186}, [%rd3];
	// inline asm
	prmt.b32 %r13101, %r13186, %r13185, %r848;
	// inline asm
	st.local.u32 	[%rd6], %r13101;
	ld.local.u32 	%r13106, [%rd3];
	ld.local.u32 	%r13107, [%rd2+12];
	// inline asm
	prmt.b32 %r13105, %r13106, %r13107, %r848;
	// inline asm
	st.local.u32 	[%rd5+12], %r13105;
	ld.local.v2.u32 	{%r13187, %r13188}, [%rd2+8];
	// inline asm
	prmt.b32 %r13109, %r13188, %r13187, %r848;
	// inline asm
	st.local.u32 	[%rd5+8], %r13109;
	ld.local.u32 	%r13114, [%rd2+8];
	ld.local.u32 	%r13115, [%rd2+4];
	// inline asm
	prmt.b32 %r13113, %r13114, %r13115, %r848;
	// inline asm
	st.local.u32 	[%rd5+4], %r13113;
	ld.local.v2.u32 	{%r13189, %r13190}, [%rd2];
	// inline asm
	prmt.b32 %r13117, %r13190, %r13189, %r848;
	// inline asm
	st.local.u32 	[%rd5], %r13117;
	ld.local.u32 	%r13122, [%rd2];
	ld.local.u32 	%r13123, [%rd1+12];
	// inline asm
	prmt.b32 %r13121, %r13122, %r13123, %r848;
	// inline asm
	st.local.u32 	[%rd4+12], %r13121;
	ld.local.v2.u32 	{%r13191, %r13192}, [%rd1+8];
	// inline asm
	prmt.b32 %r13125, %r13192, %r13191, %r848;
	// inline asm
	st.local.u32 	[%rd4+8], %r13125;
	ld.local.u32 	%r13130, [%rd1+8];
	ld.local.u32 	%r13131, [%rd1+4];
	// inline asm
	prmt.b32 %r13129, %r13130, %r13131, %r848;
	// inline asm
	st.local.u32 	[%rd4+4], %r13129;
	ld.local.v2.u32 	{%r13193, %r13194}, [%rd1];
	// inline asm
	prmt.b32 %r13133, %r13194, %r13193, %r848;
	// inline asm
	st.local.u32 	[%rd4], %r13133;
	ld.local.u32 	%r13138, [%rd1];
	// inline asm
	prmt.b32 %r13137, %r13138, %r16283, %r848;
	// inline asm
	st.local.v4.u32 	[%rd3], {%r16283, %r16283, %r16283, %r13137};
	st.local.v4.u32 	[%rd2], {%r16283, %r16283, %r16283, %r16283};
	st.local.v2.u32 	[%rd1+8], {%r16283, %r16283};
	mov.u64 	%rd1968, 0;
	st.local.u64 	[%rd1], %rd1968;
	mov.u32 	%r16284, %r16283;
	bra.uni 	BB5_776;

BB5_752:
	setp.eq.s32	%p410, %r9492, 27;
	mov.u32 	%r16286, %r16285;
	mov.u32 	%r16287, %r16285;
	mov.u32 	%r16288, %r16285;
	mov.u32 	%r16289, %r16285;
	mov.u32 	%r16290, %r16285;
	mov.u32 	%r16291, %r16285;
	mov.u32 	%r16292, %r16285;
	mov.u32 	%r16293, %r16285;
	mov.u32 	%r16294, %r16285;
	mov.u32 	%r16295, %r16285;
	mov.u32 	%r16296, %r16285;
	mov.u32 	%r16297, %r16285;
	mov.u32 	%r16298, %r16285;
	mov.u32 	%r16299, %r16285;
	mov.u32 	%r16300, %r16285;
	mov.u32 	%r16301, %r16285;
	mov.u32 	%r16302, %r16285;
	mov.u32 	%r16303, %r16285;
	mov.u32 	%r16304, %r16285;
	mov.u32 	%r16305, %r16285;
	mov.u32 	%r16306, %r16285;
	mov.u32 	%r16307, %r16285;
	mov.u32 	%r16308, %r16285;
	mov.u32 	%r16309, %r16285;
	mov.u32 	%r16310, %r16285;
	mov.u32 	%r16311, %r16285;
	mov.u32 	%r16312, %r16285;
	mov.u32 	%r16313, %r16285;
	mov.u32 	%r16314, %r16285;
	mov.u32 	%r16315, %r16285;
	mov.u32 	%r16316, %r16285;
	@%p410 bra 	BB5_753;
	bra.uni 	BB5_783;

BB5_753:
	mov.u32 	%r16283, 0;
	// inline asm
	prmt.b32 %r16309, %r16283, %r66, %r848;
	// inline asm
	ld.local.v2.u32 	{%r10307, %r10308}, [%rd8+8];
	// inline asm
	prmt.b32 %r16310, %r10308, %r10307, %r848;
	// inline asm
	ld.local.u32 	%r10178, [%rd8+8];
	ld.local.u32 	%r10179, [%rd8+4];
	// inline asm
	prmt.b32 %r16311, %r10178, %r10179, %r848;
	// inline asm
	ld.local.v2.u32 	{%r10309, %r10310}, [%rd8];
	// inline asm
	prmt.b32 %r16312, %r10310, %r10309, %r848;
	// inline asm
	ld.local.u32 	%r10186, [%rd8];
	ld.local.u32 	%r10187, [%rd7+12];
	// inline asm
	prmt.b32 %r16305, %r10186, %r10187, %r848;
	// inline asm
	ld.local.v2.u32 	{%r10311, %r10312}, [%rd7+8];
	// inline asm
	prmt.b32 %r16306, %r10312, %r10311, %r848;
	// inline asm
	ld.local.u32 	%r10194, [%rd7+8];
	ld.local.u32 	%r10195, [%rd7+4];
	// inline asm
	prmt.b32 %r16307, %r10194, %r10195, %r848;
	// inline asm
	ld.local.v2.u32 	{%r10313, %r10314}, [%rd7];
	// inline asm
	prmt.b32 %r16308, %r10314, %r10313, %r848;
	// inline asm
	ld.local.u32 	%r10202, [%rd7];
	ld.local.u32 	%r10203, [%rd6+12];
	// inline asm
	prmt.b32 %r16301, %r10202, %r10203, %r848;
	// inline asm
	ld.local.v2.u32 	{%r10315, %r10316}, [%rd6+8];
	// inline asm
	prmt.b32 %r16302, %r10316, %r10315, %r848;
	// inline asm
	ld.local.u32 	%r10210, [%rd6+8];
	ld.local.u32 	%r10211, [%rd6+4];
	// inline asm
	prmt.b32 %r16303, %r10210, %r10211, %r848;
	// inline asm
	ld.local.v2.u32 	{%r10317, %r10318}, [%rd6];
	// inline asm
	prmt.b32 %r16304, %r10318, %r10317, %r848;
	// inline asm
	ld.local.u32 	%r10218, [%rd6];
	ld.local.u32 	%r10219, [%rd5+12];
	// inline asm
	prmt.b32 %r16297, %r10218, %r10219, %r848;
	// inline asm
	ld.local.v2.u32 	{%r10319, %r10320}, [%rd5+8];
	// inline asm
	prmt.b32 %r16298, %r10320, %r10319, %r848;
	// inline asm
	ld.local.u32 	%r10226, [%rd5+8];
	ld.local.u32 	%r10227, [%rd5+4];
	// inline asm
	prmt.b32 %r16299, %r10226, %r10227, %r848;
	// inline asm
	ld.local.v2.u32 	{%r10321, %r10322}, [%rd5];
	// inline asm
	prmt.b32 %r16300, %r10322, %r10321, %r848;
	// inline asm
	ld.local.u32 	%r10234, [%rd5];
	ld.local.u32 	%r10235, [%rd4+12];
	// inline asm
	prmt.b32 %r16293, %r10234, %r10235, %r848;
	// inline asm
	ld.local.v2.u32 	{%r10323, %r10324}, [%rd4+8];
	// inline asm
	prmt.b32 %r16294, %r10324, %r10323, %r848;
	// inline asm
	ld.local.u32 	%r10242, [%rd4+8];
	ld.local.u32 	%r10243, [%rd4+4];
	// inline asm
	prmt.b32 %r16295, %r10242, %r10243, %r848;
	// inline asm
	ld.local.v2.u32 	{%r10325, %r10326}, [%rd4];
	// inline asm
	prmt.b32 %r16296, %r10326, %r10325, %r848;
	// inline asm
	ld.local.u32 	%r10250, [%rd4];
	ld.local.u32 	%r10251, [%rd3+12];
	// inline asm
	prmt.b32 %r16289, %r10250, %r10251, %r848;
	// inline asm
	ld.local.v2.u32 	{%r10327, %r10328}, [%rd3+8];
	// inline asm
	prmt.b32 %r16290, %r10328, %r10327, %r848;
	// inline asm
	ld.local.u32 	%r10258, [%rd3+8];
	ld.local.u32 	%r10259, [%rd3+4];
	// inline asm
	prmt.b32 %r16291, %r10258, %r10259, %r848;
	// inline asm
	ld.local.v2.u32 	{%r10329, %r10330}, [%rd3];
	// inline asm
	prmt.b32 %r16292, %r10330, %r10329, %r848;
	// inline asm
	ld.local.u32 	%r10266, [%rd3];
	ld.local.u32 	%r10267, [%rd2+12];
	// inline asm
	prmt.b32 %r16285, %r10266, %r10267, %r848;
	// inline asm
	ld.local.v2.u32 	{%r10331, %r10332}, [%rd2+8];
	// inline asm
	prmt.b32 %r16286, %r10332, %r10331, %r848;
	// inline asm
	ld.local.u32 	%r10274, [%rd2+8];
	ld.local.u32 	%r10275, [%rd2+4];
	// inline asm
	prmt.b32 %r16287, %r10274, %r10275, %r848;
	// inline asm
	ld.local.v2.u32 	{%r10333, %r10334}, [%rd2];
	// inline asm
	prmt.b32 %r16288, %r10334, %r10333, %r848;
	// inline asm
	ld.local.u32 	%r10282, [%rd2];
	ld.local.u32 	%r10283, [%rd1+12];
	// inline asm
	prmt.b32 %r10281, %r10282, %r10283, %r848;
	// inline asm
	st.local.u32 	[%rd8+12], %r10281;
	ld.local.v2.u32 	{%r10335, %r10336}, [%rd1+8];
	// inline asm
	prmt.b32 %r10285, %r10336, %r10335, %r848;
	// inline asm
	st.local.u32 	[%rd8+8], %r10285;
	ld.local.u32 	%r10290, [%rd1+8];
	ld.local.u32 	%r10291, [%rd1+4];
	// inline asm
	prmt.b32 %r10289, %r10290, %r10291, %r848;
	// inline asm
	st.local.u32 	[%rd8+4], %r10289;
	ld.local.v2.u32 	{%r10337, %r10338}, [%rd1];
	// inline asm
	prmt.b32 %r10293, %r10338, %r10337, %r848;
	// inline asm
	st.local.u32 	[%rd8], %r10293;
	ld.local.u32 	%r10298, [%rd1];
	// inline asm
	prmt.b32 %r10297, %r10298, %r16283, %r848;
	// inline asm
	st.local.v4.u32 	[%rd7], {%r16283, %r16283, %r16283, %r10297};
	st.local.v4.u32 	[%rd6], {%r16283, %r16283, %r16283, %r16283};
	st.local.v4.u32 	[%rd5], {%r16283, %r16283, %r16283, %r16283};
	st.local.v4.u32 	[%rd4], {%r16283, %r16283, %r16283, %r16283};
	st.local.v4.u32 	[%rd3], {%r16283, %r16283, %r16283, %r16283};
	st.local.v4.u32 	[%rd2], {%r16283, %r16283, %r16283, %r16283};
	st.local.v2.u32 	[%rd1+8], {%r16283, %r16283};
	mov.u64 	%rd1952, 0;
	st.local.u64 	[%rd1], %rd1952;
	mov.u32 	%r16284, %r16283;
	bra.uni 	BB5_780;

BB5_713:
	setp.eq.s32	%p439, %r9492, 7;
	mov.u32 	%r16286, %r16285;
	mov.u32 	%r16287, %r16285;
	mov.u32 	%r16288, %r16285;
	mov.u32 	%r16289, %r16285;
	mov.u32 	%r16290, %r16285;
	mov.u32 	%r16291, %r16285;
	mov.u32 	%r16292, %r16285;
	mov.u32 	%r16293, %r16285;
	mov.u32 	%r16294, %r16285;
	mov.u32 	%r16295, %r16285;
	mov.u32 	%r16296, %r16285;
	mov.u32 	%r16297, %r16285;
	mov.u32 	%r16298, %r16285;
	mov.u32 	%r16299, %r16285;
	mov.u32 	%r16300, %r16285;
	mov.u32 	%r16301, %r16285;
	mov.u32 	%r16302, %r16285;
	mov.u32 	%r16303, %r16285;
	mov.u32 	%r16304, %r16285;
	mov.u32 	%r16305, %r16285;
	mov.u32 	%r16306, %r16285;
	mov.u32 	%r16307, %r16285;
	mov.u32 	%r16308, %r16285;
	mov.u32 	%r16309, %r16285;
	mov.u32 	%r16310, %r16285;
	mov.u32 	%r16311, %r16285;
	mov.u32 	%r16312, %r16285;
	mov.u32 	%r16313, %r16285;
	mov.u32 	%r16314, %r16285;
	mov.u32 	%r16315, %r16285;
	mov.u32 	%r16316, %r16285;
	@%p439 bra 	BB5_714;
	bra.uni 	BB5_783;

BB5_714:
	mov.u32 	%r16283, 0;
	// inline asm
	prmt.b32 %r16289, %r16283, %r66, %r848;
	// inline asm
	ld.local.v2.u32 	{%r13917, %r13918}, [%rd8+8];
	// inline asm
	prmt.b32 %r16290, %r13918, %r13917, %r848;
	// inline asm
	ld.local.u32 	%r13768, [%rd8+8];
	ld.local.u32 	%r13769, [%rd8+4];
	// inline asm
	prmt.b32 %r16291, %r13768, %r13769, %r848;
	// inline asm
	ld.local.v2.u32 	{%r13919, %r13920}, [%rd8];
	// inline asm
	prmt.b32 %r16292, %r13920, %r13919, %r848;
	// inline asm
	ld.local.u32 	%r13776, [%rd8];
	ld.local.u32 	%r13777, [%rd7+12];
	// inline asm
	prmt.b32 %r16285, %r13776, %r13777, %r848;
	// inline asm
	ld.local.v2.u32 	{%r13921, %r13922}, [%rd7+8];
	// inline asm
	prmt.b32 %r16286, %r13922, %r13921, %r848;
	// inline asm
	ld.local.u32 	%r13784, [%rd7+8];
	ld.local.u32 	%r13785, [%rd7+4];
	// inline asm
	prmt.b32 %r16287, %r13784, %r13785, %r848;
	// inline asm
	ld.local.v2.u32 	{%r13923, %r13924}, [%rd7];
	// inline asm
	prmt.b32 %r16288, %r13924, %r13923, %r848;
	// inline asm
	ld.local.u32 	%r13792, [%rd7];
	ld.local.u32 	%r13793, [%rd6+12];
	// inline asm
	prmt.b32 %r13791, %r13792, %r13793, %r848;
	// inline asm
	st.local.u32 	[%rd8+12], %r13791;
	ld.local.v2.u32 	{%r13925, %r13926}, [%rd6+8];
	// inline asm
	prmt.b32 %r13795, %r13926, %r13925, %r848;
	// inline asm
	st.local.u32 	[%rd8+8], %r13795;
	ld.local.u32 	%r13800, [%rd6+8];
	ld.local.u32 	%r13801, [%rd6+4];
	// inline asm
	prmt.b32 %r13799, %r13800, %r13801, %r848;
	// inline asm
	st.local.u32 	[%rd8+4], %r13799;
	ld.local.v2.u32 	{%r13927, %r13928}, [%rd6];
	// inline asm
	prmt.b32 %r13803, %r13928, %r13927, %r848;
	// inline asm
	st.local.u32 	[%rd8], %r13803;
	ld.local.u32 	%r13808, [%rd6];
	ld.local.u32 	%r13809, [%rd5+12];
	// inline asm
	prmt.b32 %r13807, %r13808, %r13809, %r848;
	// inline asm
	st.local.u32 	[%rd7+12], %r13807;
	ld.local.v2.u32 	{%r13929, %r13930}, [%rd5+8];
	// inline asm
	prmt.b32 %r13811, %r13930, %r13929, %r848;
	// inline asm
	st.local.u32 	[%rd7+8], %r13811;
	ld.local.u32 	%r13816, [%rd5+8];
	ld.local.u32 	%r13817, [%rd5+4];
	// inline asm
	prmt.b32 %r13815, %r13816, %r13817, %r848;
	// inline asm
	st.local.u32 	[%rd7+4], %r13815;
	ld.local.v2.u32 	{%r13931, %r13932}, [%rd5];
	// inline asm
	prmt.b32 %r13819, %r13932, %r13931, %r848;
	// inline asm
	st.local.u32 	[%rd7], %r13819;
	ld.local.u32 	%r13824, [%rd5];
	ld.local.u32 	%r13825, [%rd4+12];
	// inline asm
	prmt.b32 %r13823, %r13824, %r13825, %r848;
	// inline asm
	st.local.u32 	[%rd6+12], %r13823;
	ld.local.v2.u32 	{%r13933, %r13934}, [%rd4+8];
	// inline asm
	prmt.b32 %r13827, %r13934, %r13933, %r848;
	// inline asm
	st.local.u32 	[%rd6+8], %r13827;
	ld.local.u32 	%r13832, [%rd4+8];
	ld.local.u32 	%r13833, [%rd4+4];
	// inline asm
	prmt.b32 %r13831, %r13832, %r13833, %r848;
	// inline asm
	st.local.u32 	[%rd6+4], %r13831;
	ld.local.v2.u32 	{%r13935, %r13936}, [%rd4];
	// inline asm
	prmt.b32 %r13835, %r13936, %r13935, %r848;
	// inline asm
	st.local.u32 	[%rd6], %r13835;
	ld.local.u32 	%r13840, [%rd4];
	ld.local.u32 	%r13841, [%rd3+12];
	// inline asm
	prmt.b32 %r13839, %r13840, %r13841, %r848;
	// inline asm
	st.local.u32 	[%rd5+12], %r13839;
	ld.local.v2.u32 	{%r13937, %r13938}, [%rd3+8];
	// inline asm
	prmt.b32 %r13843, %r13938, %r13937, %r848;
	// inline asm
	st.local.u32 	[%rd5+8], %r13843;
	ld.local.u32 	%r13848, [%rd3+8];
	ld.local.u32 	%r13849, [%rd3+4];
	// inline asm
	prmt.b32 %r13847, %r13848, %r13849, %r848;
	// inline asm
	st.local.u32 	[%rd5+4], %r13847;
	ld.local.v2.u32 	{%r13939, %r13940}, [%rd3];
	// inline asm
	prmt.b32 %r13851, %r13940, %r13939, %r848;
	// inline asm
	st.local.u32 	[%rd5], %r13851;
	ld.local.u32 	%r13856, [%rd3];
	ld.local.u32 	%r13857, [%rd2+12];
	// inline asm
	prmt.b32 %r13855, %r13856, %r13857, %r848;
	// inline asm
	st.local.u32 	[%rd4+12], %r13855;
	ld.local.v2.u32 	{%r13941, %r13942}, [%rd2+8];
	// inline asm
	prmt.b32 %r13859, %r13942, %r13941, %r848;
	// inline asm
	st.local.u32 	[%rd4+8], %r13859;
	ld.local.u32 	%r13864, [%rd2+8];
	ld.local.u32 	%r13865, [%rd2+4];
	// inline asm
	prmt.b32 %r13863, %r13864, %r13865, %r848;
	// inline asm
	st.local.u32 	[%rd4+4], %r13863;
	ld.local.v2.u32 	{%r13943, %r13944}, [%rd2];
	// inline asm
	prmt.b32 %r13867, %r13944, %r13943, %r848;
	// inline asm
	st.local.u32 	[%rd4], %r13867;
	ld.local.u32 	%r13872, [%rd2];
	ld.local.u32 	%r13873, [%rd1+12];
	// inline asm
	prmt.b32 %r13871, %r13872, %r13873, %r848;
	// inline asm
	st.local.u32 	[%rd3+12], %r13871;
	ld.local.v2.u32 	{%r13945, %r13946}, [%rd1+8];
	// inline asm
	prmt.b32 %r13875, %r13946, %r13945, %r848;
	// inline asm
	st.local.u32 	[%rd3+8], %r13875;
	ld.local.u32 	%r13880, [%rd1+8];
	ld.local.u32 	%r13881, [%rd1+4];
	// inline asm
	prmt.b32 %r13879, %r13880, %r13881, %r848;
	// inline asm
	st.local.u32 	[%rd3+4], %r13879;
	ld.local.v2.u32 	{%r13947, %r13948}, [%rd1];
	// inline asm
	prmt.b32 %r13883, %r13948, %r13947, %r848;
	// inline asm
	st.local.u32 	[%rd3], %r13883;
	ld.local.u32 	%r13888, [%rd1];
	// inline asm
	prmt.b32 %r13887, %r13888, %r16283, %r848;
	// inline asm
	st.local.v4.u32 	[%rd2], {%r16283, %r16283, %r16283, %r13887};
	st.local.v2.u32 	[%rd1+8], {%r16283, %r16283};
	mov.u64 	%rd1972, 0;
	st.local.u64 	[%rd1], %rd1972;
	mov.u32 	%r16284, %r16283;

BB5_775:
	mov.u32 	%r16293, %r16283;
	mov.u32 	%r16294, %r16283;
	mov.u32 	%r16295, %r16283;
	mov.u32 	%r16296, %r16283;

BB5_776:
	mov.u32 	%r16297, %r16283;
	mov.u32 	%r16298, %r16283;
	mov.u32 	%r16299, %r16283;
	mov.u32 	%r16300, %r16283;

BB5_777:
	mov.u32 	%r16301, %r16283;
	mov.u32 	%r16302, %r16283;
	mov.u32 	%r16303, %r16283;
	mov.u32 	%r16304, %r16283;

BB5_778:
	mov.u32 	%r16305, %r16283;
	mov.u32 	%r16306, %r16283;
	mov.u32 	%r16307, %r16283;
	mov.u32 	%r16308, %r16283;

BB5_779:
	mov.u32 	%r16309, %r16283;
	mov.u32 	%r16310, %r16283;
	mov.u32 	%r16311, %r16283;
	mov.u32 	%r16312, %r16283;

BB5_780:
	mov.u32 	%r16313, %r16283;
	mov.u32 	%r16314, %r16283;
	mov.u32 	%r16315, %r16283;
	mov.u32 	%r16316, %r16283;

BB5_783:
	ld.local.u32 	%r15305, [%rd28];
	or.b32  	%r15306, %r15305, %r16284;
	st.local.u32 	[%rd28], %r15306;
	ld.local.u32 	%r15307, [%rd29];
	or.b32  	%r15308, %r15307, %r16283;
	st.local.u32 	[%rd29], %r15308;
	ld.local.u32 	%r15309, [%rd30];
	ld.local.v2.u32 	{%r15310, %r15311}, [%rd1+8];
	or.b32  	%r15313, %r15309, %r15310;
	st.local.u32 	[%rd30], %r15313;
	ld.local.u32 	%r15314, [%rd389+76];
	ld.local.v2.u32 	{%r15316, %r15317}, [%rd389+80];
	ld.local.v2.u32 	{%r15318, %r15319}, [%rd389+88];
	ld.local.v2.u32 	{%r15320, %r15321}, [%rd389+96];
	or.b32  	%r15322, %r15314, %r15311;
	st.local.u32 	[%rd389+76], %r15322;
	ld.local.v4.u32 	{%r15323, %r15324, %r15325, %r15326}, [%rd2];
	or.b32  	%r15329, %r15317, %r15324;
	or.b32  	%r15332, %r15316, %r15323;
	st.local.v2.u32 	[%rd389+80], {%r15332, %r15329};
	or.b32  	%r15335, %r15319, %r15326;
	or.b32  	%r15338, %r15318, %r15325;
	st.local.v2.u32 	[%rd389+88], {%r15338, %r15335};
	ld.local.v4.u32 	{%r15339, %r15340, %r15341, %r15342}, [%rd3];
	or.b32  	%r15345, %r15321, %r15340;
	or.b32  	%r15348, %r15320, %r15339;
	st.local.v2.u32 	[%rd389+96], {%r15348, %r15345};
	ld.local.u32 	%r15349, [%rd31];
	or.b32  	%r15351, %r15349, %r15341;
	st.local.u32 	[%rd31], %r15351;
	ld.local.u32 	%r15353, [%rd32];
	or.b32  	%r15354, %r15353, %r15342;
	st.local.u32 	[%rd32], %r15354;
	ld.local.u32 	%r15355, [%rd33];
	ld.local.v4.u32 	{%r15356, %r15357, %r15358, %r15359}, [%rd4];
	or.b32  	%r15361, %r15355, %r15356;
	st.local.u32 	[%rd33], %r15361;
	ld.local.u32 	%r15362, [%rd34];
	or.b32  	%r15364, %r15362, %r15357;
	st.local.u32 	[%rd34], %r15364;
	ld.local.u32 	%r15365, [%rd35];
	or.b32  	%r15367, %r15365, %r15358;
	st.local.u32 	[%rd35], %r15367;
	ld.local.u32 	%r15369, [%rd36];
	or.b32  	%r15370, %r15369, %r15359;
	st.local.u32 	[%rd36], %r15370;
	ld.local.u32 	%r15371, [%rd37];
	ld.local.v4.u32 	{%r15372, %r15373, %r15374, %r15375}, [%rd5];
	or.b32  	%r15377, %r15371, %r15372;
	st.local.u32 	[%rd37], %r15377;
	ld.local.u32 	%r15378, [%rd38];
	or.b32  	%r15380, %r15378, %r15373;
	st.local.u32 	[%rd38], %r15380;
	ld.local.u32 	%r15381, [%rd39];
	or.b32  	%r15383, %r15381, %r15374;
	st.local.u32 	[%rd39], %r15383;
	ld.local.u32 	%r15385, [%rd40];
	or.b32  	%r15386, %r15385, %r15375;
	st.local.u32 	[%rd40], %r15386;
	ld.local.u32 	%r15387, [%rd41];
	ld.local.v4.u32 	{%r15388, %r15389, %r15390, %r15391}, [%rd6];
	or.b32  	%r15393, %r15387, %r15388;
	st.local.u32 	[%rd41], %r15393;
	ld.local.u32 	%r15394, [%rd42];
	or.b32  	%r15396, %r15394, %r15389;
	st.local.u32 	[%rd42], %r15396;
	ld.local.u32 	%r15397, [%rd43];
	or.b32  	%r15399, %r15397, %r15390;
	st.local.u32 	[%rd43], %r15399;
	ld.local.u32 	%r15401, [%rd44];
	or.b32  	%r15402, %r15401, %r15391;
	st.local.u32 	[%rd44], %r15402;
	ld.local.u32 	%r15403, [%rd45];
	ld.local.v4.u32 	{%r15404, %r15405, %r15406, %r15407}, [%rd7];
	or.b32  	%r15409, %r15403, %r15404;
	st.local.u32 	[%rd45], %r15409;
	ld.local.u32 	%r15410, [%rd46];
	or.b32  	%r15412, %r15410, %r15405;
	st.local.u32 	[%rd46], %r15412;
	ld.local.u32 	%r15413, [%rd47];
	or.b32  	%r15415, %r15413, %r15406;
	st.local.u32 	[%rd47], %r15415;
	ld.local.u32 	%r15417, [%rd48];
	or.b32  	%r15418, %r15417, %r15407;
	st.local.u32 	[%rd48], %r15418;
	ld.local.u32 	%r15419, [%rd49];
	ld.local.v4.u32 	{%r15420, %r15421, %r15422, %r15423}, [%rd8];
	or.b32  	%r15425, %r15419, %r15420;
	st.local.u32 	[%rd49], %r15425;
	ld.local.u32 	%r15426, [%rd50];
	or.b32  	%r15428, %r15426, %r15421;
	st.local.u32 	[%rd50], %r15428;
	ld.local.u32 	%r15429, [%rd51];
	or.b32  	%r15431, %r15429, %r15422;
	st.local.u32 	[%rd51], %r15431;
	ld.local.u32 	%r15433, [%rd52];
	or.b32  	%r15434, %r15433, %r15423;
	st.local.u32 	[%rd52], %r15434;
	mov.b64	%rd3072, {%r15308, %r15306};
	mov.b64	%rd3073, {%r15322, %r15313};
	mov.b64	%rd3074, {%r15329, %r15332};
	mov.b64	%rd3075, {%r15335, %r15338};
	mov.b64	%rd3076, {%r15345, %r15348};
	mov.b64	%rd3077, {%r15354, %r15351};
	mov.b64	%rd3078, {%r15364, %r15361};
	mov.b64	%rd3079, {%r15370, %r15367};
	mov.b64	%rd3063, {%r15380, %r15377};
	mov.b64	%rd3062, {%r15386, %r15383};
	mov.b64	%rd3061, {%r15396, %r15393};
	mov.b64	%rd3060, {%r15402, %r15399};
	mov.b64	%rd3059, {%r15412, %r15409};
	mov.b64	%rd3058, {%r15418, %r15415};
	mov.b64	%rd3057, {%r15428, %r15425};
	mov.b64	%rd3056, {%r15434, %r15431};
	ld.local.u64 	%rd218, [%rd24];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15435,%dummy}, %rd218;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15436}, %rd218;
	}
	shf.r.wrap.b32 	%r15437, %r15436, %r15435, 14;
	shf.r.wrap.b32 	%r15438, %r15435, %r15436, 14;
	mov.b64 	%rd1980, {%r15438, %r15437};
	shf.r.wrap.b32 	%r15439, %r15436, %r15435, 18;
	shf.r.wrap.b32 	%r15440, %r15435, %r15436, 18;
	mov.b64 	%rd1981, {%r15440, %r15439};
	xor.b64  	%rd1982, %rd1981, %rd1980;
	shf.l.wrap.b32 	%r15441, %r15435, %r15436, 23;
	shf.l.wrap.b32 	%r15442, %r15436, %r15435, 23;
	mov.b64 	%rd1983, {%r15442, %r15441};
	xor.b64  	%rd1984, %rd1982, %rd1983;
	ld.local.u64 	%rd219, [%rd26];
	ld.local.u64 	%rd220, [%rd25];
	xor.b64  	%rd1985, %rd219, %rd220;
	and.b64  	%rd1986, %rd1985, %rd218;
	xor.b64  	%rd1987, %rd1986, %rd219;
	ld.local.u64 	%rd221, [%rd27];
	add.s64 	%rd1988, %rd1987, %rd221;
	add.s64 	%rd1989, %rd1988, %rd3072;
	add.s64 	%rd1990, %rd1989, %rd53;
	add.s64 	%rd1991, %rd1990, %rd1984;
	ld.local.u64 	%rd222, [%rd23];
	add.s64 	%rd1992, %rd1991, %rd222;
	ld.local.u64 	%rd223, [%rd389];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15443,%dummy}, %rd223;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15444}, %rd223;
	}
	shf.r.wrap.b32 	%r15445, %r15444, %r15443, 28;
	shf.r.wrap.b32 	%r15446, %r15443, %r15444, 28;
	mov.b64 	%rd1993, {%r15446, %r15445};
	shf.l.wrap.b32 	%r15447, %r15443, %r15444, 30;
	shf.l.wrap.b32 	%r15448, %r15444, %r15443, 30;
	mov.b64 	%rd1994, {%r15448, %r15447};
	xor.b64  	%rd1995, %rd1994, %rd1993;
	shf.l.wrap.b32 	%r15449, %r15443, %r15444, 25;
	shf.l.wrap.b32 	%r15450, %r15444, %r15443, 25;
	mov.b64 	%rd1996, {%r15450, %r15449};
	xor.b64  	%rd1997, %rd1995, %rd1996;
	ld.local.u64 	%rd224, [%rd22];
	xor.b64  	%rd1998, %rd224, %rd223;
	ld.local.u64 	%rd225, [%rd21];
	xor.b64  	%rd1999, %rd225, %rd223;
	and.b64  	%rd2000, %rd1998, %rd1999;
	xor.b64  	%rd2001, %rd2000, %rd223;
	add.s64 	%rd2002, %rd1991, %rd2001;
	add.s64 	%rd2003, %rd2002, %rd1997;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15451,%dummy}, %rd1992;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15452}, %rd1992;
	}
	shf.r.wrap.b32 	%r15453, %r15452, %r15451, 14;
	shf.r.wrap.b32 	%r15454, %r15451, %r15452, 14;
	mov.b64 	%rd2004, {%r15454, %r15453};
	shf.r.wrap.b32 	%r15455, %r15452, %r15451, 18;
	shf.r.wrap.b32 	%r15456, %r15451, %r15452, 18;
	mov.b64 	%rd2005, {%r15456, %r15455};
	xor.b64  	%rd2006, %rd2005, %rd2004;
	shf.l.wrap.b32 	%r15457, %r15451, %r15452, 23;
	shf.l.wrap.b32 	%r15458, %r15452, %r15451, 23;
	mov.b64 	%rd2007, {%r15458, %r15457};
	xor.b64  	%rd2008, %rd2006, %rd2007;
	xor.b64  	%rd2009, %rd220, %rd218;
	and.b64  	%rd2010, %rd1992, %rd2009;
	xor.b64  	%rd2011, %rd2010, %rd220;
	add.s64 	%rd2012, %rd3073, %rd219;
	add.s64 	%rd2013, %rd2012, %rd54;
	add.s64 	%rd2014, %rd2013, %rd2011;
	add.s64 	%rd2015, %rd2014, %rd2008;
	add.s64 	%rd2016, %rd2015, %rd224;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15459,%dummy}, %rd2003;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15460}, %rd2003;
	}
	shf.r.wrap.b32 	%r15461, %r15460, %r15459, 28;
	shf.r.wrap.b32 	%r15462, %r15459, %r15460, 28;
	mov.b64 	%rd2017, {%r15462, %r15461};
	shf.l.wrap.b32 	%r15463, %r15459, %r15460, 30;
	shf.l.wrap.b32 	%r15464, %r15460, %r15459, 30;
	mov.b64 	%rd2018, {%r15464, %r15463};
	xor.b64  	%rd2019, %rd2018, %rd2017;
	shf.l.wrap.b32 	%r15465, %r15459, %r15460, 25;
	shf.l.wrap.b32 	%r15466, %r15460, %r15459, 25;
	mov.b64 	%rd2020, {%r15466, %r15465};
	xor.b64  	%rd2021, %rd2019, %rd2020;
	xor.b64  	%rd2022, %rd2003, %rd225;
	xor.b64  	%rd2023, %rd2003, %rd223;
	and.b64  	%rd2024, %rd2023, %rd2022;
	xor.b64  	%rd2025, %rd2024, %rd2003;
	add.s64 	%rd2026, %rd2015, %rd2025;
	add.s64 	%rd2027, %rd2026, %rd2021;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15467,%dummy}, %rd2016;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15468}, %rd2016;
	}
	shf.r.wrap.b32 	%r15469, %r15468, %r15467, 14;
	shf.r.wrap.b32 	%r15470, %r15467, %r15468, 14;
	mov.b64 	%rd2028, {%r15470, %r15469};
	shf.r.wrap.b32 	%r15471, %r15468, %r15467, 18;
	shf.r.wrap.b32 	%r15472, %r15467, %r15468, 18;
	mov.b64 	%rd2029, {%r15472, %r15471};
	xor.b64  	%rd2030, %rd2029, %rd2028;
	shf.l.wrap.b32 	%r15473, %r15467, %r15468, 23;
	shf.l.wrap.b32 	%r15474, %r15468, %r15467, 23;
	mov.b64 	%rd2031, {%r15474, %r15473};
	xor.b64  	%rd2032, %rd2030, %rd2031;
	xor.b64  	%rd2033, %rd1992, %rd218;
	and.b64  	%rd2034, %rd2016, %rd2033;
	xor.b64  	%rd2035, %rd2034, %rd218;
	add.s64 	%rd2036, %rd3074, %rd220;
	add.s64 	%rd2037, %rd2036, %rd55;
	add.s64 	%rd2038, %rd2037, %rd2035;
	add.s64 	%rd2039, %rd2038, %rd2032;
	add.s64 	%rd2040, %rd2039, %rd225;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15475,%dummy}, %rd2027;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15476}, %rd2027;
	}
	shf.r.wrap.b32 	%r15477, %r15476, %r15475, 28;
	shf.r.wrap.b32 	%r15478, %r15475, %r15476, 28;
	mov.b64 	%rd2041, {%r15478, %r15477};
	shf.l.wrap.b32 	%r15479, %r15475, %r15476, 30;
	shf.l.wrap.b32 	%r15480, %r15476, %r15475, 30;
	mov.b64 	%rd2042, {%r15480, %r15479};
	xor.b64  	%rd2043, %rd2042, %rd2041;
	shf.l.wrap.b32 	%r15481, %r15475, %r15476, 25;
	shf.l.wrap.b32 	%r15482, %r15476, %r15475, 25;
	mov.b64 	%rd2044, {%r15482, %r15481};
	xor.b64  	%rd2045, %rd2043, %rd2044;
	xor.b64  	%rd2046, %rd2027, %rd223;
	xor.b64  	%rd2047, %rd2027, %rd2003;
	and.b64  	%rd2048, %rd2047, %rd2046;
	xor.b64  	%rd2049, %rd2048, %rd2027;
	add.s64 	%rd2050, %rd2039, %rd2049;
	add.s64 	%rd2051, %rd2050, %rd2045;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15483,%dummy}, %rd2040;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15484}, %rd2040;
	}
	shf.r.wrap.b32 	%r15485, %r15484, %r15483, 14;
	shf.r.wrap.b32 	%r15486, %r15483, %r15484, 14;
	mov.b64 	%rd2052, {%r15486, %r15485};
	shf.r.wrap.b32 	%r15487, %r15484, %r15483, 18;
	shf.r.wrap.b32 	%r15488, %r15483, %r15484, 18;
	mov.b64 	%rd2053, {%r15488, %r15487};
	xor.b64  	%rd2054, %rd2053, %rd2052;
	shf.l.wrap.b32 	%r15489, %r15483, %r15484, 23;
	shf.l.wrap.b32 	%r15490, %r15484, %r15483, 23;
	mov.b64 	%rd2055, {%r15490, %r15489};
	xor.b64  	%rd2056, %rd2054, %rd2055;
	xor.b64  	%rd2057, %rd2016, %rd1992;
	and.b64  	%rd2058, %rd2040, %rd2057;
	xor.b64  	%rd2059, %rd2058, %rd1992;
	add.s64 	%rd2060, %rd3075, %rd218;
	add.s64 	%rd2061, %rd2060, %rd56;
	add.s64 	%rd2062, %rd2061, %rd2059;
	add.s64 	%rd2063, %rd2062, %rd2056;
	add.s64 	%rd2064, %rd2063, %rd223;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15491,%dummy}, %rd2051;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15492}, %rd2051;
	}
	shf.r.wrap.b32 	%r15493, %r15492, %r15491, 28;
	shf.r.wrap.b32 	%r15494, %r15491, %r15492, 28;
	mov.b64 	%rd2065, {%r15494, %r15493};
	shf.l.wrap.b32 	%r15495, %r15491, %r15492, 30;
	shf.l.wrap.b32 	%r15496, %r15492, %r15491, 30;
	mov.b64 	%rd2066, {%r15496, %r15495};
	xor.b64  	%rd2067, %rd2066, %rd2065;
	shf.l.wrap.b32 	%r15497, %r15491, %r15492, 25;
	shf.l.wrap.b32 	%r15498, %r15492, %r15491, 25;
	mov.b64 	%rd2068, {%r15498, %r15497};
	xor.b64  	%rd2069, %rd2067, %rd2068;
	xor.b64  	%rd2070, %rd2051, %rd2003;
	xor.b64  	%rd2071, %rd2051, %rd2027;
	and.b64  	%rd2072, %rd2071, %rd2070;
	xor.b64  	%rd2073, %rd2072, %rd2051;
	add.s64 	%rd2074, %rd2063, %rd2073;
	add.s64 	%rd2075, %rd2074, %rd2069;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15499,%dummy}, %rd2064;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15500}, %rd2064;
	}
	shf.r.wrap.b32 	%r15501, %r15500, %r15499, 14;
	shf.r.wrap.b32 	%r15502, %r15499, %r15500, 14;
	mov.b64 	%rd2076, {%r15502, %r15501};
	shf.r.wrap.b32 	%r15503, %r15500, %r15499, 18;
	shf.r.wrap.b32 	%r15504, %r15499, %r15500, 18;
	mov.b64 	%rd2077, {%r15504, %r15503};
	xor.b64  	%rd2078, %rd2077, %rd2076;
	shf.l.wrap.b32 	%r15505, %r15499, %r15500, 23;
	shf.l.wrap.b32 	%r15506, %r15500, %r15499, 23;
	mov.b64 	%rd2079, {%r15506, %r15505};
	xor.b64  	%rd2080, %rd2078, %rd2079;
	xor.b64  	%rd2081, %rd2040, %rd2016;
	and.b64  	%rd2082, %rd2064, %rd2081;
	xor.b64  	%rd2083, %rd2082, %rd2016;
	add.s64 	%rd2084, %rd1992, %rd3076;
	add.s64 	%rd2085, %rd2084, %rd57;
	add.s64 	%rd2086, %rd2085, %rd2083;
	add.s64 	%rd2087, %rd2086, %rd2080;
	add.s64 	%rd2088, %rd2087, %rd2003;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15507,%dummy}, %rd2075;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15508}, %rd2075;
	}
	shf.r.wrap.b32 	%r15509, %r15508, %r15507, 28;
	shf.r.wrap.b32 	%r15510, %r15507, %r15508, 28;
	mov.b64 	%rd2089, {%r15510, %r15509};
	shf.l.wrap.b32 	%r15511, %r15507, %r15508, 30;
	shf.l.wrap.b32 	%r15512, %r15508, %r15507, 30;
	mov.b64 	%rd2090, {%r15512, %r15511};
	xor.b64  	%rd2091, %rd2090, %rd2089;
	shf.l.wrap.b32 	%r15513, %r15507, %r15508, 25;
	shf.l.wrap.b32 	%r15514, %r15508, %r15507, 25;
	mov.b64 	%rd2092, {%r15514, %r15513};
	xor.b64  	%rd2093, %rd2091, %rd2092;
	xor.b64  	%rd2094, %rd2075, %rd2027;
	xor.b64  	%rd2095, %rd2075, %rd2051;
	and.b64  	%rd2096, %rd2095, %rd2094;
	xor.b64  	%rd2097, %rd2096, %rd2075;
	add.s64 	%rd2098, %rd2087, %rd2097;
	add.s64 	%rd2099, %rd2098, %rd2093;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15515,%dummy}, %rd2088;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15516}, %rd2088;
	}
	shf.r.wrap.b32 	%r15517, %r15516, %r15515, 14;
	shf.r.wrap.b32 	%r15518, %r15515, %r15516, 14;
	mov.b64 	%rd2100, {%r15518, %r15517};
	shf.r.wrap.b32 	%r15519, %r15516, %r15515, 18;
	shf.r.wrap.b32 	%r15520, %r15515, %r15516, 18;
	mov.b64 	%rd2101, {%r15520, %r15519};
	xor.b64  	%rd2102, %rd2101, %rd2100;
	shf.l.wrap.b32 	%r15521, %r15515, %r15516, 23;
	shf.l.wrap.b32 	%r15522, %r15516, %r15515, 23;
	mov.b64 	%rd2103, {%r15522, %r15521};
	xor.b64  	%rd2104, %rd2102, %rd2103;
	xor.b64  	%rd2105, %rd2064, %rd2040;
	and.b64  	%rd2106, %rd2088, %rd2105;
	xor.b64  	%rd2107, %rd2106, %rd2040;
	add.s64 	%rd2108, %rd2016, %rd3077;
	add.s64 	%rd2109, %rd2108, %rd58;
	add.s64 	%rd2110, %rd2109, %rd2107;
	add.s64 	%rd2111, %rd2110, %rd2104;
	add.s64 	%rd2112, %rd2111, %rd2027;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15523,%dummy}, %rd2099;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15524}, %rd2099;
	}
	shf.r.wrap.b32 	%r15525, %r15524, %r15523, 28;
	shf.r.wrap.b32 	%r15526, %r15523, %r15524, 28;
	mov.b64 	%rd2113, {%r15526, %r15525};
	shf.l.wrap.b32 	%r15527, %r15523, %r15524, 30;
	shf.l.wrap.b32 	%r15528, %r15524, %r15523, 30;
	mov.b64 	%rd2114, {%r15528, %r15527};
	xor.b64  	%rd2115, %rd2114, %rd2113;
	shf.l.wrap.b32 	%r15529, %r15523, %r15524, 25;
	shf.l.wrap.b32 	%r15530, %r15524, %r15523, 25;
	mov.b64 	%rd2116, {%r15530, %r15529};
	xor.b64  	%rd2117, %rd2115, %rd2116;
	xor.b64  	%rd2118, %rd2099, %rd2051;
	xor.b64  	%rd2119, %rd2099, %rd2075;
	and.b64  	%rd2120, %rd2119, %rd2118;
	xor.b64  	%rd2121, %rd2120, %rd2099;
	add.s64 	%rd2122, %rd2111, %rd2121;
	add.s64 	%rd2123, %rd2122, %rd2117;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15531,%dummy}, %rd2112;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15532}, %rd2112;
	}
	shf.r.wrap.b32 	%r15533, %r15532, %r15531, 14;
	shf.r.wrap.b32 	%r15534, %r15531, %r15532, 14;
	mov.b64 	%rd2124, {%r15534, %r15533};
	shf.r.wrap.b32 	%r15535, %r15532, %r15531, 18;
	shf.r.wrap.b32 	%r15536, %r15531, %r15532, 18;
	mov.b64 	%rd2125, {%r15536, %r15535};
	xor.b64  	%rd2126, %rd2125, %rd2124;
	shf.l.wrap.b32 	%r15537, %r15531, %r15532, 23;
	shf.l.wrap.b32 	%r15538, %r15532, %r15531, 23;
	mov.b64 	%rd2127, {%r15538, %r15537};
	xor.b64  	%rd2128, %rd2126, %rd2127;
	xor.b64  	%rd2129, %rd2088, %rd2064;
	and.b64  	%rd2130, %rd2112, %rd2129;
	xor.b64  	%rd2131, %rd2130, %rd2064;
	add.s64 	%rd2132, %rd2040, %rd3078;
	add.s64 	%rd2133, %rd2132, %rd59;
	add.s64 	%rd2134, %rd2133, %rd2131;
	add.s64 	%rd2135, %rd2134, %rd2128;
	add.s64 	%rd2136, %rd2135, %rd2051;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15539,%dummy}, %rd2123;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15540}, %rd2123;
	}
	shf.r.wrap.b32 	%r15541, %r15540, %r15539, 28;
	shf.r.wrap.b32 	%r15542, %r15539, %r15540, 28;
	mov.b64 	%rd2137, {%r15542, %r15541};
	shf.l.wrap.b32 	%r15543, %r15539, %r15540, 30;
	shf.l.wrap.b32 	%r15544, %r15540, %r15539, 30;
	mov.b64 	%rd2138, {%r15544, %r15543};
	xor.b64  	%rd2139, %rd2138, %rd2137;
	shf.l.wrap.b32 	%r15545, %r15539, %r15540, 25;
	shf.l.wrap.b32 	%r15546, %r15540, %r15539, 25;
	mov.b64 	%rd2140, {%r15546, %r15545};
	xor.b64  	%rd2141, %rd2139, %rd2140;
	xor.b64  	%rd2142, %rd2123, %rd2075;
	xor.b64  	%rd2143, %rd2123, %rd2099;
	and.b64  	%rd2144, %rd2143, %rd2142;
	xor.b64  	%rd2145, %rd2144, %rd2123;
	add.s64 	%rd2146, %rd2135, %rd2145;
	add.s64 	%rd2147, %rd2146, %rd2141;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15547,%dummy}, %rd2136;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15548}, %rd2136;
	}
	shf.r.wrap.b32 	%r15549, %r15548, %r15547, 14;
	shf.r.wrap.b32 	%r15550, %r15547, %r15548, 14;
	mov.b64 	%rd2148, {%r15550, %r15549};
	shf.r.wrap.b32 	%r15551, %r15548, %r15547, 18;
	shf.r.wrap.b32 	%r15552, %r15547, %r15548, 18;
	mov.b64 	%rd2149, {%r15552, %r15551};
	xor.b64  	%rd2150, %rd2149, %rd2148;
	shf.l.wrap.b32 	%r15553, %r15547, %r15548, 23;
	shf.l.wrap.b32 	%r15554, %r15548, %r15547, 23;
	mov.b64 	%rd2151, {%r15554, %r15553};
	xor.b64  	%rd2152, %rd2150, %rd2151;
	xor.b64  	%rd2153, %rd2112, %rd2088;
	and.b64  	%rd2154, %rd2136, %rd2153;
	xor.b64  	%rd2155, %rd2154, %rd2088;
	add.s64 	%rd2156, %rd2064, %rd3079;
	add.s64 	%rd2157, %rd2156, %rd60;
	add.s64 	%rd2158, %rd2157, %rd2155;
	add.s64 	%rd2159, %rd2158, %rd2152;
	add.s64 	%rd2160, %rd2159, %rd2075;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15555,%dummy}, %rd2147;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15556}, %rd2147;
	}
	shf.r.wrap.b32 	%r15557, %r15556, %r15555, 28;
	shf.r.wrap.b32 	%r15558, %r15555, %r15556, 28;
	mov.b64 	%rd2161, {%r15558, %r15557};
	shf.l.wrap.b32 	%r15559, %r15555, %r15556, 30;
	shf.l.wrap.b32 	%r15560, %r15556, %r15555, 30;
	mov.b64 	%rd2162, {%r15560, %r15559};
	xor.b64  	%rd2163, %rd2162, %rd2161;
	shf.l.wrap.b32 	%r15561, %r15555, %r15556, 25;
	shf.l.wrap.b32 	%r15562, %r15556, %r15555, 25;
	mov.b64 	%rd2164, {%r15562, %r15561};
	xor.b64  	%rd2165, %rd2163, %rd2164;
	xor.b64  	%rd2166, %rd2147, %rd2099;
	xor.b64  	%rd2167, %rd2147, %rd2123;
	and.b64  	%rd2168, %rd2167, %rd2166;
	xor.b64  	%rd2169, %rd2168, %rd2147;
	add.s64 	%rd2170, %rd2159, %rd2169;
	add.s64 	%rd2171, %rd2170, %rd2165;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15563,%dummy}, %rd2160;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15564}, %rd2160;
	}
	shf.r.wrap.b32 	%r15565, %r15564, %r15563, 14;
	shf.r.wrap.b32 	%r15566, %r15563, %r15564, 14;
	mov.b64 	%rd2172, {%r15566, %r15565};
	shf.r.wrap.b32 	%r15567, %r15564, %r15563, 18;
	shf.r.wrap.b32 	%r15568, %r15563, %r15564, 18;
	mov.b64 	%rd2173, {%r15568, %r15567};
	xor.b64  	%rd2174, %rd2173, %rd2172;
	shf.l.wrap.b32 	%r15569, %r15563, %r15564, 23;
	shf.l.wrap.b32 	%r15570, %r15564, %r15563, 23;
	mov.b64 	%rd2175, {%r15570, %r15569};
	xor.b64  	%rd2176, %rd2174, %rd2175;
	xor.b64  	%rd2177, %rd2136, %rd2112;
	and.b64  	%rd2178, %rd2160, %rd2177;
	xor.b64  	%rd2179, %rd2178, %rd2112;
	add.s64 	%rd2180, %rd2088, %rd3063;
	add.s64 	%rd2181, %rd2180, %rd61;
	add.s64 	%rd2182, %rd2181, %rd2179;
	add.s64 	%rd2183, %rd2182, %rd2176;
	add.s64 	%rd2184, %rd2183, %rd2099;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15571,%dummy}, %rd2171;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15572}, %rd2171;
	}
	shf.r.wrap.b32 	%r15573, %r15572, %r15571, 28;
	shf.r.wrap.b32 	%r15574, %r15571, %r15572, 28;
	mov.b64 	%rd2185, {%r15574, %r15573};
	shf.l.wrap.b32 	%r15575, %r15571, %r15572, 30;
	shf.l.wrap.b32 	%r15576, %r15572, %r15571, 30;
	mov.b64 	%rd2186, {%r15576, %r15575};
	xor.b64  	%rd2187, %rd2186, %rd2185;
	shf.l.wrap.b32 	%r15577, %r15571, %r15572, 25;
	shf.l.wrap.b32 	%r15578, %r15572, %r15571, 25;
	mov.b64 	%rd2188, {%r15578, %r15577};
	xor.b64  	%rd2189, %rd2187, %rd2188;
	xor.b64  	%rd2190, %rd2171, %rd2123;
	xor.b64  	%rd2191, %rd2171, %rd2147;
	and.b64  	%rd2192, %rd2191, %rd2190;
	xor.b64  	%rd2193, %rd2192, %rd2171;
	add.s64 	%rd2194, %rd2183, %rd2193;
	add.s64 	%rd2195, %rd2194, %rd2189;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15579,%dummy}, %rd2184;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15580}, %rd2184;
	}
	shf.r.wrap.b32 	%r15581, %r15580, %r15579, 14;
	shf.r.wrap.b32 	%r15582, %r15579, %r15580, 14;
	mov.b64 	%rd2196, {%r15582, %r15581};
	shf.r.wrap.b32 	%r15583, %r15580, %r15579, 18;
	shf.r.wrap.b32 	%r15584, %r15579, %r15580, 18;
	mov.b64 	%rd2197, {%r15584, %r15583};
	xor.b64  	%rd2198, %rd2197, %rd2196;
	shf.l.wrap.b32 	%r15585, %r15579, %r15580, 23;
	shf.l.wrap.b32 	%r15586, %r15580, %r15579, 23;
	mov.b64 	%rd2199, {%r15586, %r15585};
	xor.b64  	%rd2200, %rd2198, %rd2199;
	xor.b64  	%rd2201, %rd2160, %rd2136;
	and.b64  	%rd2202, %rd2184, %rd2201;
	xor.b64  	%rd2203, %rd2202, %rd2136;
	add.s64 	%rd2204, %rd2112, %rd3062;
	add.s64 	%rd2205, %rd2204, %rd62;
	add.s64 	%rd2206, %rd2205, %rd2203;
	add.s64 	%rd2207, %rd2206, %rd2200;
	add.s64 	%rd2208, %rd2207, %rd2123;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15587,%dummy}, %rd2195;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15588}, %rd2195;
	}
	shf.r.wrap.b32 	%r15589, %r15588, %r15587, 28;
	shf.r.wrap.b32 	%r15590, %r15587, %r15588, 28;
	mov.b64 	%rd2209, {%r15590, %r15589};
	shf.l.wrap.b32 	%r15591, %r15587, %r15588, 30;
	shf.l.wrap.b32 	%r15592, %r15588, %r15587, 30;
	mov.b64 	%rd2210, {%r15592, %r15591};
	xor.b64  	%rd2211, %rd2210, %rd2209;
	shf.l.wrap.b32 	%r15593, %r15587, %r15588, 25;
	shf.l.wrap.b32 	%r15594, %r15588, %r15587, 25;
	mov.b64 	%rd2212, {%r15594, %r15593};
	xor.b64  	%rd2213, %rd2211, %rd2212;
	xor.b64  	%rd2214, %rd2195, %rd2147;
	xor.b64  	%rd2215, %rd2195, %rd2171;
	and.b64  	%rd2216, %rd2215, %rd2214;
	xor.b64  	%rd2217, %rd2216, %rd2195;
	add.s64 	%rd2218, %rd2207, %rd2217;
	add.s64 	%rd2219, %rd2218, %rd2213;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15595,%dummy}, %rd2208;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15596}, %rd2208;
	}
	shf.r.wrap.b32 	%r15597, %r15596, %r15595, 14;
	shf.r.wrap.b32 	%r15598, %r15595, %r15596, 14;
	mov.b64 	%rd2220, {%r15598, %r15597};
	shf.r.wrap.b32 	%r15599, %r15596, %r15595, 18;
	shf.r.wrap.b32 	%r15600, %r15595, %r15596, 18;
	mov.b64 	%rd2221, {%r15600, %r15599};
	xor.b64  	%rd2222, %rd2221, %rd2220;
	shf.l.wrap.b32 	%r15601, %r15595, %r15596, 23;
	shf.l.wrap.b32 	%r15602, %r15596, %r15595, 23;
	mov.b64 	%rd2223, {%r15602, %r15601};
	xor.b64  	%rd2224, %rd2222, %rd2223;
	xor.b64  	%rd2225, %rd2184, %rd2160;
	and.b64  	%rd2226, %rd2208, %rd2225;
	xor.b64  	%rd2227, %rd2226, %rd2160;
	add.s64 	%rd2228, %rd2136, %rd3061;
	add.s64 	%rd2229, %rd2228, %rd63;
	add.s64 	%rd2230, %rd2229, %rd2227;
	add.s64 	%rd2231, %rd2230, %rd2224;
	add.s64 	%rd2232, %rd2231, %rd2147;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15603,%dummy}, %rd2219;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15604}, %rd2219;
	}
	shf.r.wrap.b32 	%r15605, %r15604, %r15603, 28;
	shf.r.wrap.b32 	%r15606, %r15603, %r15604, 28;
	mov.b64 	%rd2233, {%r15606, %r15605};
	shf.l.wrap.b32 	%r15607, %r15603, %r15604, 30;
	shf.l.wrap.b32 	%r15608, %r15604, %r15603, 30;
	mov.b64 	%rd2234, {%r15608, %r15607};
	xor.b64  	%rd2235, %rd2234, %rd2233;
	shf.l.wrap.b32 	%r15609, %r15603, %r15604, 25;
	shf.l.wrap.b32 	%r15610, %r15604, %r15603, 25;
	mov.b64 	%rd2236, {%r15610, %r15609};
	xor.b64  	%rd2237, %rd2235, %rd2236;
	xor.b64  	%rd2238, %rd2219, %rd2171;
	xor.b64  	%rd2239, %rd2219, %rd2195;
	and.b64  	%rd2240, %rd2239, %rd2238;
	xor.b64  	%rd2241, %rd2240, %rd2219;
	add.s64 	%rd2242, %rd2231, %rd2241;
	add.s64 	%rd2243, %rd2242, %rd2237;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15611,%dummy}, %rd2232;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15612}, %rd2232;
	}
	shf.r.wrap.b32 	%r15613, %r15612, %r15611, 14;
	shf.r.wrap.b32 	%r15614, %r15611, %r15612, 14;
	mov.b64 	%rd2244, {%r15614, %r15613};
	shf.r.wrap.b32 	%r15615, %r15612, %r15611, 18;
	shf.r.wrap.b32 	%r15616, %r15611, %r15612, 18;
	mov.b64 	%rd2245, {%r15616, %r15615};
	xor.b64  	%rd2246, %rd2245, %rd2244;
	shf.l.wrap.b32 	%r15617, %r15611, %r15612, 23;
	shf.l.wrap.b32 	%r15618, %r15612, %r15611, 23;
	mov.b64 	%rd2247, {%r15618, %r15617};
	xor.b64  	%rd2248, %rd2246, %rd2247;
	xor.b64  	%rd2249, %rd2208, %rd2184;
	and.b64  	%rd2250, %rd2232, %rd2249;
	xor.b64  	%rd2251, %rd2250, %rd2184;
	add.s64 	%rd2252, %rd2160, %rd3060;
	add.s64 	%rd2253, %rd2252, %rd64;
	add.s64 	%rd2254, %rd2253, %rd2251;
	add.s64 	%rd2255, %rd2254, %rd2248;
	add.s64 	%rd2256, %rd2255, %rd2171;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15619,%dummy}, %rd2243;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15620}, %rd2243;
	}
	shf.r.wrap.b32 	%r15621, %r15620, %r15619, 28;
	shf.r.wrap.b32 	%r15622, %r15619, %r15620, 28;
	mov.b64 	%rd2257, {%r15622, %r15621};
	shf.l.wrap.b32 	%r15623, %r15619, %r15620, 30;
	shf.l.wrap.b32 	%r15624, %r15620, %r15619, 30;
	mov.b64 	%rd2258, {%r15624, %r15623};
	xor.b64  	%rd2259, %rd2258, %rd2257;
	shf.l.wrap.b32 	%r15625, %r15619, %r15620, 25;
	shf.l.wrap.b32 	%r15626, %r15620, %r15619, 25;
	mov.b64 	%rd2260, {%r15626, %r15625};
	xor.b64  	%rd2261, %rd2259, %rd2260;
	xor.b64  	%rd2262, %rd2243, %rd2195;
	xor.b64  	%rd2263, %rd2243, %rd2219;
	and.b64  	%rd2264, %rd2263, %rd2262;
	xor.b64  	%rd2265, %rd2264, %rd2243;
	add.s64 	%rd2266, %rd2255, %rd2265;
	add.s64 	%rd2267, %rd2266, %rd2261;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15627,%dummy}, %rd2256;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15628}, %rd2256;
	}
	shf.r.wrap.b32 	%r15629, %r15628, %r15627, 14;
	shf.r.wrap.b32 	%r15630, %r15627, %r15628, 14;
	mov.b64 	%rd2268, {%r15630, %r15629};
	shf.r.wrap.b32 	%r15631, %r15628, %r15627, 18;
	shf.r.wrap.b32 	%r15632, %r15627, %r15628, 18;
	mov.b64 	%rd2269, {%r15632, %r15631};
	xor.b64  	%rd2270, %rd2269, %rd2268;
	shf.l.wrap.b32 	%r15633, %r15627, %r15628, 23;
	shf.l.wrap.b32 	%r15634, %r15628, %r15627, 23;
	mov.b64 	%rd2271, {%r15634, %r15633};
	xor.b64  	%rd2272, %rd2270, %rd2271;
	xor.b64  	%rd2273, %rd2232, %rd2208;
	and.b64  	%rd2274, %rd2256, %rd2273;
	xor.b64  	%rd2275, %rd2274, %rd2208;
	add.s64 	%rd2276, %rd2184, %rd3059;
	add.s64 	%rd2277, %rd2276, %rd65;
	add.s64 	%rd2278, %rd2277, %rd2275;
	add.s64 	%rd2279, %rd2278, %rd2272;
	add.s64 	%rd3071, %rd2279, %rd2195;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15635,%dummy}, %rd2267;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15636}, %rd2267;
	}
	shf.r.wrap.b32 	%r15637, %r15636, %r15635, 28;
	shf.r.wrap.b32 	%r15638, %r15635, %r15636, 28;
	mov.b64 	%rd2280, {%r15638, %r15637};
	shf.l.wrap.b32 	%r15639, %r15635, %r15636, 30;
	shf.l.wrap.b32 	%r15640, %r15636, %r15635, 30;
	mov.b64 	%rd2281, {%r15640, %r15639};
	xor.b64  	%rd2282, %rd2281, %rd2280;
	shf.l.wrap.b32 	%r15641, %r15635, %r15636, 25;
	shf.l.wrap.b32 	%r15642, %r15636, %r15635, 25;
	mov.b64 	%rd2283, {%r15642, %r15641};
	xor.b64  	%rd2284, %rd2282, %rd2283;
	xor.b64  	%rd2285, %rd2267, %rd2219;
	xor.b64  	%rd2286, %rd2267, %rd2243;
	and.b64  	%rd2287, %rd2286, %rd2285;
	xor.b64  	%rd2288, %rd2287, %rd2267;
	add.s64 	%rd2289, %rd2279, %rd2288;
	add.s64 	%rd3067, %rd2289, %rd2284;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15643,%dummy}, %rd3071;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15644}, %rd3071;
	}
	shf.r.wrap.b32 	%r15645, %r15644, %r15643, 14;
	shf.r.wrap.b32 	%r15646, %r15643, %r15644, 14;
	mov.b64 	%rd2290, {%r15646, %r15645};
	shf.r.wrap.b32 	%r15647, %r15644, %r15643, 18;
	shf.r.wrap.b32 	%r15648, %r15643, %r15644, 18;
	mov.b64 	%rd2291, {%r15648, %r15647};
	xor.b64  	%rd2292, %rd2291, %rd2290;
	shf.l.wrap.b32 	%r15649, %r15643, %r15644, 23;
	shf.l.wrap.b32 	%r15650, %r15644, %r15643, 23;
	mov.b64 	%rd2293, {%r15650, %r15649};
	xor.b64  	%rd2294, %rd2292, %rd2293;
	xor.b64  	%rd2295, %rd2256, %rd2232;
	and.b64  	%rd2296, %rd3071, %rd2295;
	xor.b64  	%rd2297, %rd2296, %rd2232;
	add.s64 	%rd2298, %rd2208, %rd3058;
	add.s64 	%rd2299, %rd2298, %rd66;
	add.s64 	%rd2300, %rd2299, %rd2297;
	add.s64 	%rd2301, %rd2300, %rd2294;
	add.s64 	%rd3070, %rd2301, %rd2219;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15651,%dummy}, %rd3067;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15652}, %rd3067;
	}
	shf.r.wrap.b32 	%r15653, %r15652, %r15651, 28;
	shf.r.wrap.b32 	%r15654, %r15651, %r15652, 28;
	mov.b64 	%rd2302, {%r15654, %r15653};
	shf.l.wrap.b32 	%r15655, %r15651, %r15652, 30;
	shf.l.wrap.b32 	%r15656, %r15652, %r15651, 30;
	mov.b64 	%rd2303, {%r15656, %r15655};
	xor.b64  	%rd2304, %rd2303, %rd2302;
	shf.l.wrap.b32 	%r15657, %r15651, %r15652, 25;
	shf.l.wrap.b32 	%r15658, %r15652, %r15651, 25;
	mov.b64 	%rd2305, {%r15658, %r15657};
	xor.b64  	%rd2306, %rd2304, %rd2305;
	xor.b64  	%rd2307, %rd3067, %rd2243;
	xor.b64  	%rd2308, %rd3067, %rd2267;
	and.b64  	%rd2309, %rd2308, %rd2307;
	xor.b64  	%rd2310, %rd2309, %rd3067;
	add.s64 	%rd2311, %rd2301, %rd2310;
	add.s64 	%rd3066, %rd2311, %rd2306;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15659,%dummy}, %rd3070;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15660}, %rd3070;
	}
	shf.r.wrap.b32 	%r15661, %r15660, %r15659, 14;
	shf.r.wrap.b32 	%r15662, %r15659, %r15660, 14;
	mov.b64 	%rd2312, {%r15662, %r15661};
	shf.r.wrap.b32 	%r15663, %r15660, %r15659, 18;
	shf.r.wrap.b32 	%r15664, %r15659, %r15660, 18;
	mov.b64 	%rd2313, {%r15664, %r15663};
	xor.b64  	%rd2314, %rd2313, %rd2312;
	shf.l.wrap.b32 	%r15665, %r15659, %r15660, 23;
	shf.l.wrap.b32 	%r15666, %r15660, %r15659, 23;
	mov.b64 	%rd2315, {%r15666, %r15665};
	xor.b64  	%rd2316, %rd2314, %rd2315;
	xor.b64  	%rd2317, %rd3071, %rd2256;
	and.b64  	%rd2318, %rd3070, %rd2317;
	xor.b64  	%rd2319, %rd2318, %rd2256;
	add.s64 	%rd2320, %rd2232, %rd3057;
	add.s64 	%rd2321, %rd2320, %rd67;
	add.s64 	%rd2322, %rd2321, %rd2319;
	add.s64 	%rd2323, %rd2322, %rd2316;
	add.s64 	%rd3069, %rd2323, %rd2243;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15667,%dummy}, %rd3066;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15668}, %rd3066;
	}
	shf.r.wrap.b32 	%r15669, %r15668, %r15667, 28;
	shf.r.wrap.b32 	%r15670, %r15667, %r15668, 28;
	mov.b64 	%rd2324, {%r15670, %r15669};
	shf.l.wrap.b32 	%r15671, %r15667, %r15668, 30;
	shf.l.wrap.b32 	%r15672, %r15668, %r15667, 30;
	mov.b64 	%rd2325, {%r15672, %r15671};
	xor.b64  	%rd2326, %rd2325, %rd2324;
	shf.l.wrap.b32 	%r15673, %r15667, %r15668, 25;
	shf.l.wrap.b32 	%r15674, %r15668, %r15667, 25;
	mov.b64 	%rd2327, {%r15674, %r15673};
	xor.b64  	%rd2328, %rd2326, %rd2327;
	xor.b64  	%rd2329, %rd3066, %rd2267;
	xor.b64  	%rd2330, %rd3066, %rd3067;
	and.b64  	%rd2331, %rd2330, %rd2329;
	xor.b64  	%rd2332, %rd2331, %rd3066;
	add.s64 	%rd2333, %rd2323, %rd2332;
	add.s64 	%rd3065, %rd2333, %rd2328;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15675,%dummy}, %rd3069;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15676}, %rd3069;
	}
	shf.r.wrap.b32 	%r15677, %r15676, %r15675, 14;
	shf.r.wrap.b32 	%r15678, %r15675, %r15676, 14;
	mov.b64 	%rd2334, {%r15678, %r15677};
	shf.r.wrap.b32 	%r15679, %r15676, %r15675, 18;
	shf.r.wrap.b32 	%r15680, %r15675, %r15676, 18;
	mov.b64 	%rd2335, {%r15680, %r15679};
	xor.b64  	%rd2336, %rd2335, %rd2334;
	shf.l.wrap.b32 	%r15681, %r15675, %r15676, 23;
	shf.l.wrap.b32 	%r15682, %r15676, %r15675, 23;
	mov.b64 	%rd2337, {%r15682, %r15681};
	xor.b64  	%rd2338, %rd2336, %rd2337;
	xor.b64  	%rd2339, %rd3070, %rd3071;
	and.b64  	%rd2340, %rd3069, %rd2339;
	xor.b64  	%rd2341, %rd2340, %rd3071;
	add.s64 	%rd2342, %rd2256, %rd3056;
	add.s64 	%rd2343, %rd2342, %rd68;
	add.s64 	%rd2344, %rd2343, %rd2341;
	add.s64 	%rd2345, %rd2344, %rd2338;
	add.s64 	%rd3068, %rd2345, %rd2267;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15683,%dummy}, %rd3065;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15684}, %rd3065;
	}
	shf.r.wrap.b32 	%r15685, %r15684, %r15683, 28;
	shf.r.wrap.b32 	%r15686, %r15683, %r15684, 28;
	mov.b64 	%rd2346, {%r15686, %r15685};
	shf.l.wrap.b32 	%r15687, %r15683, %r15684, 30;
	shf.l.wrap.b32 	%r15688, %r15684, %r15683, 30;
	mov.b64 	%rd2347, {%r15688, %r15687};
	xor.b64  	%rd2348, %rd2347, %rd2346;
	shf.l.wrap.b32 	%r15689, %r15683, %r15684, 25;
	shf.l.wrap.b32 	%r15690, %r15684, %r15683, 25;
	mov.b64 	%rd2349, {%r15690, %r15689};
	xor.b64  	%rd2350, %rd2348, %rd2349;
	xor.b64  	%rd2351, %rd3065, %rd3067;
	xor.b64  	%rd2352, %rd3065, %rd3066;
	and.b64  	%rd2353, %rd2352, %rd2351;
	xor.b64  	%rd2354, %rd2353, %rd3065;
	add.s64 	%rd2355, %rd2345, %rd2354;
	add.s64 	%rd3064, %rd2355, %rd2350;
	mov.u32 	%r16317, 16;

BB5_784:
	shr.u64 	%rd2356, %rd3057, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15691,%dummy}, %rd3057;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15692}, %rd3057;
	}
	shf.r.wrap.b32 	%r15693, %r15692, %r15691, 19;
	shf.r.wrap.b32 	%r15694, %r15691, %r15692, 19;
	mov.b64 	%rd2357, {%r15694, %r15693};
	xor.b64  	%rd2358, %rd2357, %rd2356;
	shf.l.wrap.b32 	%r15695, %r15691, %r15692, 3;
	shf.l.wrap.b32 	%r15696, %r15692, %r15691, 3;
	mov.b64 	%rd2359, {%r15696, %r15695};
	xor.b64  	%rd2360, %rd2358, %rd2359;
	shr.u64 	%rd2361, %rd3073, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15697,%dummy}, %rd3073;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15698}, %rd3073;
	}
	shf.r.wrap.b32 	%r15699, %r15698, %r15697, 1;
	shf.r.wrap.b32 	%r15700, %r15697, %r15698, 1;
	mov.b64 	%rd2362, {%r15700, %r15699};
	xor.b64  	%rd2363, %rd2362, %rd2361;
	shf.r.wrap.b32 	%r15701, %r15698, %r15697, 8;
	shf.r.wrap.b32 	%r15702, %r15697, %r15698, 8;
	mov.b64 	%rd2364, {%r15702, %r15701};
	xor.b64  	%rd2365, %rd2363, %rd2364;
	add.s64 	%rd2366, %rd3062, %rd3072;
	add.s64 	%rd2367, %rd2366, %rd2360;
	add.s64 	%rd3072, %rd2367, %rd2365;
	shr.u64 	%rd2368, %rd3056, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15703,%dummy}, %rd3056;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15704}, %rd3056;
	}
	shf.r.wrap.b32 	%r15705, %r15704, %r15703, 19;
	shf.r.wrap.b32 	%r15706, %r15703, %r15704, 19;
	mov.b64 	%rd2369, {%r15706, %r15705};
	xor.b64  	%rd2370, %rd2369, %rd2368;
	shf.l.wrap.b32 	%r15707, %r15703, %r15704, 3;
	shf.l.wrap.b32 	%r15708, %r15704, %r15703, 3;
	mov.b64 	%rd2371, {%r15708, %r15707};
	xor.b64  	%rd2372, %rd2370, %rd2371;
	shr.u64 	%rd2373, %rd3074, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15709,%dummy}, %rd3074;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15710}, %rd3074;
	}
	shf.r.wrap.b32 	%r15711, %r15710, %r15709, 1;
	shf.r.wrap.b32 	%r15712, %r15709, %r15710, 1;
	mov.b64 	%rd2374, {%r15712, %r15711};
	xor.b64  	%rd2375, %rd2374, %rd2373;
	shf.r.wrap.b32 	%r15713, %r15710, %r15709, 8;
	shf.r.wrap.b32 	%r15714, %r15709, %r15710, 8;
	mov.b64 	%rd2376, {%r15714, %r15713};
	xor.b64  	%rd2377, %rd2375, %rd2376;
	add.s64 	%rd2378, %rd3061, %rd3073;
	add.s64 	%rd2379, %rd2378, %rd2372;
	add.s64 	%rd3073, %rd2379, %rd2377;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15715,%dummy}, %rd3072;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15716}, %rd3072;
	}
	shf.r.wrap.b32 	%r15717, %r15716, %r15715, 19;
	shf.r.wrap.b32 	%r15718, %r15715, %r15716, 19;
	mov.b64 	%rd2380, {%r15718, %r15717};
	shf.l.wrap.b32 	%r15719, %r15715, %r15716, 3;
	shf.l.wrap.b32 	%r15720, %r15716, %r15715, 3;
	mov.b64 	%rd2381, {%r15720, %r15719};
	shr.u64 	%rd2382, %rd3072, 6;
	xor.b64  	%rd2383, %rd2380, %rd2382;
	xor.b64  	%rd2384, %rd2383, %rd2381;
	shr.u64 	%rd2385, %rd3075, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15721,%dummy}, %rd3075;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15722}, %rd3075;
	}
	shf.r.wrap.b32 	%r15723, %r15722, %r15721, 1;
	shf.r.wrap.b32 	%r15724, %r15721, %r15722, 1;
	mov.b64 	%rd2386, {%r15724, %r15723};
	xor.b64  	%rd2387, %rd2386, %rd2385;
	shf.r.wrap.b32 	%r15725, %r15722, %r15721, 8;
	shf.r.wrap.b32 	%r15726, %r15721, %r15722, 8;
	mov.b64 	%rd2388, {%r15726, %r15725};
	xor.b64  	%rd2389, %rd2387, %rd2388;
	add.s64 	%rd2390, %rd3060, %rd3074;
	add.s64 	%rd2391, %rd2390, %rd2384;
	add.s64 	%rd3074, %rd2391, %rd2389;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15727,%dummy}, %rd3073;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15728}, %rd3073;
	}
	shf.r.wrap.b32 	%r15729, %r15728, %r15727, 19;
	shf.r.wrap.b32 	%r15730, %r15727, %r15728, 19;
	mov.b64 	%rd2392, {%r15730, %r15729};
	shf.l.wrap.b32 	%r15731, %r15727, %r15728, 3;
	shf.l.wrap.b32 	%r15732, %r15728, %r15727, 3;
	mov.b64 	%rd2393, {%r15732, %r15731};
	shr.u64 	%rd2394, %rd3073, 6;
	xor.b64  	%rd2395, %rd2392, %rd2394;
	xor.b64  	%rd2396, %rd2395, %rd2393;
	shr.u64 	%rd2397, %rd3076, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15733,%dummy}, %rd3076;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15734}, %rd3076;
	}
	shf.r.wrap.b32 	%r15735, %r15734, %r15733, 1;
	shf.r.wrap.b32 	%r15736, %r15733, %r15734, 1;
	mov.b64 	%rd2398, {%r15736, %r15735};
	xor.b64  	%rd2399, %rd2398, %rd2397;
	shf.r.wrap.b32 	%r15737, %r15734, %r15733, 8;
	shf.r.wrap.b32 	%r15738, %r15733, %r15734, 8;
	mov.b64 	%rd2400, {%r15738, %r15737};
	xor.b64  	%rd2401, %rd2399, %rd2400;
	add.s64 	%rd2402, %rd3059, %rd3075;
	add.s64 	%rd2403, %rd2402, %rd2396;
	add.s64 	%rd3075, %rd2403, %rd2401;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15739,%dummy}, %rd3074;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15740}, %rd3074;
	}
	shf.r.wrap.b32 	%r15741, %r15740, %r15739, 19;
	shf.r.wrap.b32 	%r15742, %r15739, %r15740, 19;
	mov.b64 	%rd2404, {%r15742, %r15741};
	shf.l.wrap.b32 	%r15743, %r15739, %r15740, 3;
	shf.l.wrap.b32 	%r15744, %r15740, %r15739, 3;
	mov.b64 	%rd2405, {%r15744, %r15743};
	shr.u64 	%rd2406, %rd3074, 6;
	xor.b64  	%rd2407, %rd2404, %rd2406;
	xor.b64  	%rd2408, %rd2407, %rd2405;
	shr.u64 	%rd2409, %rd3077, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15745,%dummy}, %rd3077;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15746}, %rd3077;
	}
	shf.r.wrap.b32 	%r15747, %r15746, %r15745, 1;
	shf.r.wrap.b32 	%r15748, %r15745, %r15746, 1;
	mov.b64 	%rd2410, {%r15748, %r15747};
	xor.b64  	%rd2411, %rd2410, %rd2409;
	shf.r.wrap.b32 	%r15749, %r15746, %r15745, 8;
	shf.r.wrap.b32 	%r15750, %r15745, %r15746, 8;
	mov.b64 	%rd2412, {%r15750, %r15749};
	xor.b64  	%rd2413, %rd2411, %rd2412;
	add.s64 	%rd2414, %rd3058, %rd3076;
	add.s64 	%rd2415, %rd2414, %rd2408;
	add.s64 	%rd3076, %rd2415, %rd2413;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15751,%dummy}, %rd3075;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15752}, %rd3075;
	}
	shf.r.wrap.b32 	%r15753, %r15752, %r15751, 19;
	shf.r.wrap.b32 	%r15754, %r15751, %r15752, 19;
	mov.b64 	%rd2416, {%r15754, %r15753};
	shf.l.wrap.b32 	%r15755, %r15751, %r15752, 3;
	shf.l.wrap.b32 	%r15756, %r15752, %r15751, 3;
	mov.b64 	%rd2417, {%r15756, %r15755};
	shr.u64 	%rd2418, %rd3075, 6;
	xor.b64  	%rd2419, %rd2416, %rd2418;
	xor.b64  	%rd2420, %rd2419, %rd2417;
	shr.u64 	%rd2421, %rd3078, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15757,%dummy}, %rd3078;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15758}, %rd3078;
	}
	shf.r.wrap.b32 	%r15759, %r15758, %r15757, 1;
	shf.r.wrap.b32 	%r15760, %r15757, %r15758, 1;
	mov.b64 	%rd2422, {%r15760, %r15759};
	xor.b64  	%rd2423, %rd2422, %rd2421;
	shf.r.wrap.b32 	%r15761, %r15758, %r15757, 8;
	shf.r.wrap.b32 	%r15762, %r15757, %r15758, 8;
	mov.b64 	%rd2424, {%r15762, %r15761};
	xor.b64  	%rd2425, %rd2423, %rd2424;
	add.s64 	%rd2426, %rd3057, %rd3077;
	add.s64 	%rd2427, %rd2426, %rd2420;
	add.s64 	%rd3077, %rd2427, %rd2425;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15763,%dummy}, %rd3076;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15764}, %rd3076;
	}
	shf.r.wrap.b32 	%r15765, %r15764, %r15763, 19;
	shf.r.wrap.b32 	%r15766, %r15763, %r15764, 19;
	mov.b64 	%rd2428, {%r15766, %r15765};
	shf.l.wrap.b32 	%r15767, %r15763, %r15764, 3;
	shf.l.wrap.b32 	%r15768, %r15764, %r15763, 3;
	mov.b64 	%rd2429, {%r15768, %r15767};
	shr.u64 	%rd2430, %rd3076, 6;
	xor.b64  	%rd2431, %rd2428, %rd2430;
	xor.b64  	%rd2432, %rd2431, %rd2429;
	shr.u64 	%rd2433, %rd3079, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15769,%dummy}, %rd3079;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15770}, %rd3079;
	}
	shf.r.wrap.b32 	%r15771, %r15770, %r15769, 1;
	shf.r.wrap.b32 	%r15772, %r15769, %r15770, 1;
	mov.b64 	%rd2434, {%r15772, %r15771};
	xor.b64  	%rd2435, %rd2434, %rd2433;
	shf.r.wrap.b32 	%r15773, %r15770, %r15769, 8;
	shf.r.wrap.b32 	%r15774, %r15769, %r15770, 8;
	mov.b64 	%rd2436, {%r15774, %r15773};
	xor.b64  	%rd2437, %rd2435, %rd2436;
	add.s64 	%rd2438, %rd3056, %rd3078;
	add.s64 	%rd2439, %rd2438, %rd2432;
	add.s64 	%rd3078, %rd2439, %rd2437;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15775,%dummy}, %rd3077;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15776}, %rd3077;
	}
	shf.r.wrap.b32 	%r15777, %r15776, %r15775, 19;
	shf.r.wrap.b32 	%r15778, %r15775, %r15776, 19;
	mov.b64 	%rd2440, {%r15778, %r15777};
	shf.l.wrap.b32 	%r15779, %r15775, %r15776, 3;
	shf.l.wrap.b32 	%r15780, %r15776, %r15775, 3;
	mov.b64 	%rd2441, {%r15780, %r15779};
	shr.u64 	%rd2442, %rd3077, 6;
	xor.b64  	%rd2443, %rd2440, %rd2442;
	xor.b64  	%rd2444, %rd2443, %rd2441;
	shr.u64 	%rd2445, %rd3063, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15781,%dummy}, %rd3063;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15782}, %rd3063;
	}
	shf.r.wrap.b32 	%r15783, %r15782, %r15781, 1;
	shf.r.wrap.b32 	%r15784, %r15781, %r15782, 1;
	mov.b64 	%rd2446, {%r15784, %r15783};
	xor.b64  	%rd2447, %rd2446, %rd2445;
	shf.r.wrap.b32 	%r15785, %r15782, %r15781, 8;
	shf.r.wrap.b32 	%r15786, %r15781, %r15782, 8;
	mov.b64 	%rd2448, {%r15786, %r15785};
	xor.b64  	%rd2449, %rd2447, %rd2448;
	add.s64 	%rd2450, %rd3072, %rd3079;
	add.s64 	%rd2451, %rd2450, %rd2444;
	add.s64 	%rd3079, %rd2451, %rd2449;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15787,%dummy}, %rd3078;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15788}, %rd3078;
	}
	shf.r.wrap.b32 	%r15789, %r15788, %r15787, 19;
	shf.r.wrap.b32 	%r15790, %r15787, %r15788, 19;
	mov.b64 	%rd2452, {%r15790, %r15789};
	shf.l.wrap.b32 	%r15791, %r15787, %r15788, 3;
	shf.l.wrap.b32 	%r15792, %r15788, %r15787, 3;
	mov.b64 	%rd2453, {%r15792, %r15791};
	shr.u64 	%rd2454, %rd3078, 6;
	xor.b64  	%rd2455, %rd2452, %rd2454;
	xor.b64  	%rd2456, %rd2455, %rd2453;
	shr.u64 	%rd2457, %rd3062, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15793,%dummy}, %rd3062;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15794}, %rd3062;
	}
	shf.r.wrap.b32 	%r15795, %r15794, %r15793, 1;
	shf.r.wrap.b32 	%r15796, %r15793, %r15794, 1;
	mov.b64 	%rd2458, {%r15796, %r15795};
	xor.b64  	%rd2459, %rd2458, %rd2457;
	shf.r.wrap.b32 	%r15797, %r15794, %r15793, 8;
	shf.r.wrap.b32 	%r15798, %r15793, %r15794, 8;
	mov.b64 	%rd2460, {%r15798, %r15797};
	xor.b64  	%rd2461, %rd2459, %rd2460;
	add.s64 	%rd2462, %rd3073, %rd3063;
	add.s64 	%rd2463, %rd2462, %rd2456;
	add.s64 	%rd3063, %rd2463, %rd2461;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15799,%dummy}, %rd3079;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15800}, %rd3079;
	}
	shf.r.wrap.b32 	%r15801, %r15800, %r15799, 19;
	shf.r.wrap.b32 	%r15802, %r15799, %r15800, 19;
	mov.b64 	%rd2464, {%r15802, %r15801};
	shf.l.wrap.b32 	%r15803, %r15799, %r15800, 3;
	shf.l.wrap.b32 	%r15804, %r15800, %r15799, 3;
	mov.b64 	%rd2465, {%r15804, %r15803};
	shr.u64 	%rd2466, %rd3079, 6;
	xor.b64  	%rd2467, %rd2464, %rd2466;
	xor.b64  	%rd2468, %rd2467, %rd2465;
	shr.u64 	%rd2469, %rd3061, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15805,%dummy}, %rd3061;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15806}, %rd3061;
	}
	shf.r.wrap.b32 	%r15807, %r15806, %r15805, 1;
	shf.r.wrap.b32 	%r15808, %r15805, %r15806, 1;
	mov.b64 	%rd2470, {%r15808, %r15807};
	xor.b64  	%rd2471, %rd2470, %rd2469;
	shf.r.wrap.b32 	%r15809, %r15806, %r15805, 8;
	shf.r.wrap.b32 	%r15810, %r15805, %r15806, 8;
	mov.b64 	%rd2472, {%r15810, %r15809};
	xor.b64  	%rd2473, %rd2471, %rd2472;
	add.s64 	%rd2474, %rd3074, %rd3062;
	add.s64 	%rd2475, %rd2474, %rd2468;
	add.s64 	%rd3062, %rd2475, %rd2473;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15811,%dummy}, %rd3063;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15812}, %rd3063;
	}
	shf.r.wrap.b32 	%r15813, %r15812, %r15811, 19;
	shf.r.wrap.b32 	%r15814, %r15811, %r15812, 19;
	mov.b64 	%rd2476, {%r15814, %r15813};
	shf.l.wrap.b32 	%r15815, %r15811, %r15812, 3;
	shf.l.wrap.b32 	%r15816, %r15812, %r15811, 3;
	mov.b64 	%rd2477, {%r15816, %r15815};
	shr.u64 	%rd2478, %rd3063, 6;
	xor.b64  	%rd2479, %rd2476, %rd2478;
	xor.b64  	%rd2480, %rd2479, %rd2477;
	shr.u64 	%rd2481, %rd3060, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15817,%dummy}, %rd3060;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15818}, %rd3060;
	}
	shf.r.wrap.b32 	%r15819, %r15818, %r15817, 1;
	shf.r.wrap.b32 	%r15820, %r15817, %r15818, 1;
	mov.b64 	%rd2482, {%r15820, %r15819};
	xor.b64  	%rd2483, %rd2482, %rd2481;
	shf.r.wrap.b32 	%r15821, %r15818, %r15817, 8;
	shf.r.wrap.b32 	%r15822, %r15817, %r15818, 8;
	mov.b64 	%rd2484, {%r15822, %r15821};
	xor.b64  	%rd2485, %rd2483, %rd2484;
	add.s64 	%rd2486, %rd3075, %rd3061;
	add.s64 	%rd2487, %rd2486, %rd2480;
	add.s64 	%rd3061, %rd2487, %rd2485;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15823,%dummy}, %rd3062;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15824}, %rd3062;
	}
	shf.r.wrap.b32 	%r15825, %r15824, %r15823, 19;
	shf.r.wrap.b32 	%r15826, %r15823, %r15824, 19;
	mov.b64 	%rd2488, {%r15826, %r15825};
	shf.l.wrap.b32 	%r15827, %r15823, %r15824, 3;
	shf.l.wrap.b32 	%r15828, %r15824, %r15823, 3;
	mov.b64 	%rd2489, {%r15828, %r15827};
	shr.u64 	%rd2490, %rd3062, 6;
	xor.b64  	%rd2491, %rd2488, %rd2490;
	xor.b64  	%rd2492, %rd2491, %rd2489;
	shr.u64 	%rd2493, %rd3059, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15829,%dummy}, %rd3059;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15830}, %rd3059;
	}
	shf.r.wrap.b32 	%r15831, %r15830, %r15829, 1;
	shf.r.wrap.b32 	%r15832, %r15829, %r15830, 1;
	mov.b64 	%rd2494, {%r15832, %r15831};
	xor.b64  	%rd2495, %rd2494, %rd2493;
	shf.r.wrap.b32 	%r15833, %r15830, %r15829, 8;
	shf.r.wrap.b32 	%r15834, %r15829, %r15830, 8;
	mov.b64 	%rd2496, {%r15834, %r15833};
	xor.b64  	%rd2497, %rd2495, %rd2496;
	add.s64 	%rd2498, %rd3076, %rd3060;
	add.s64 	%rd2499, %rd2498, %rd2492;
	add.s64 	%rd3060, %rd2499, %rd2497;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15835,%dummy}, %rd3061;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15836}, %rd3061;
	}
	shf.r.wrap.b32 	%r15837, %r15836, %r15835, 19;
	shf.r.wrap.b32 	%r15838, %r15835, %r15836, 19;
	mov.b64 	%rd2500, {%r15838, %r15837};
	shf.l.wrap.b32 	%r15839, %r15835, %r15836, 3;
	shf.l.wrap.b32 	%r15840, %r15836, %r15835, 3;
	mov.b64 	%rd2501, {%r15840, %r15839};
	shr.u64 	%rd2502, %rd3061, 6;
	xor.b64  	%rd2503, %rd2500, %rd2502;
	xor.b64  	%rd2504, %rd2503, %rd2501;
	shr.u64 	%rd2505, %rd3058, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15841,%dummy}, %rd3058;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15842}, %rd3058;
	}
	shf.r.wrap.b32 	%r15843, %r15842, %r15841, 1;
	shf.r.wrap.b32 	%r15844, %r15841, %r15842, 1;
	mov.b64 	%rd2506, {%r15844, %r15843};
	xor.b64  	%rd2507, %rd2506, %rd2505;
	shf.r.wrap.b32 	%r15845, %r15842, %r15841, 8;
	shf.r.wrap.b32 	%r15846, %r15841, %r15842, 8;
	mov.b64 	%rd2508, {%r15846, %r15845};
	xor.b64  	%rd2509, %rd2507, %rd2508;
	add.s64 	%rd2510, %rd3077, %rd3059;
	add.s64 	%rd2511, %rd2510, %rd2504;
	add.s64 	%rd3059, %rd2511, %rd2509;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15847,%dummy}, %rd3060;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15848}, %rd3060;
	}
	shf.r.wrap.b32 	%r15849, %r15848, %r15847, 19;
	shf.r.wrap.b32 	%r15850, %r15847, %r15848, 19;
	mov.b64 	%rd2512, {%r15850, %r15849};
	shf.l.wrap.b32 	%r15851, %r15847, %r15848, 3;
	shf.l.wrap.b32 	%r15852, %r15848, %r15847, 3;
	mov.b64 	%rd2513, {%r15852, %r15851};
	shr.u64 	%rd2514, %rd3060, 6;
	xor.b64  	%rd2515, %rd2512, %rd2514;
	xor.b64  	%rd2516, %rd2515, %rd2513;
	shr.u64 	%rd2517, %rd3057, 7;
	shf.r.wrap.b32 	%r15853, %r15692, %r15691, 1;
	shf.r.wrap.b32 	%r15854, %r15691, %r15692, 1;
	mov.b64 	%rd2518, {%r15854, %r15853};
	xor.b64  	%rd2519, %rd2518, %rd2517;
	shf.r.wrap.b32 	%r15855, %r15692, %r15691, 8;
	shf.r.wrap.b32 	%r15856, %r15691, %r15692, 8;
	mov.b64 	%rd2520, {%r15856, %r15855};
	xor.b64  	%rd2521, %rd2519, %rd2520;
	add.s64 	%rd2522, %rd3078, %rd3058;
	add.s64 	%rd2523, %rd2522, %rd2516;
	add.s64 	%rd3058, %rd2523, %rd2521;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15857,%dummy}, %rd3059;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15858}, %rd3059;
	}
	shf.r.wrap.b32 	%r15859, %r15858, %r15857, 19;
	shf.r.wrap.b32 	%r15860, %r15857, %r15858, 19;
	mov.b64 	%rd2524, {%r15860, %r15859};
	shf.l.wrap.b32 	%r15861, %r15857, %r15858, 3;
	shf.l.wrap.b32 	%r15862, %r15858, %r15857, 3;
	mov.b64 	%rd2525, {%r15862, %r15861};
	shr.u64 	%rd2526, %rd3059, 6;
	xor.b64  	%rd2527, %rd2524, %rd2526;
	xor.b64  	%rd2528, %rd2527, %rd2525;
	shr.u64 	%rd2529, %rd3056, 7;
	shf.r.wrap.b32 	%r15863, %r15704, %r15703, 1;
	shf.r.wrap.b32 	%r15864, %r15703, %r15704, 1;
	mov.b64 	%rd2530, {%r15864, %r15863};
	xor.b64  	%rd2531, %rd2530, %rd2529;
	shf.r.wrap.b32 	%r15865, %r15704, %r15703, 8;
	shf.r.wrap.b32 	%r15866, %r15703, %r15704, 8;
	mov.b64 	%rd2532, {%r15866, %r15865};
	xor.b64  	%rd2533, %rd2531, %rd2532;
	add.s64 	%rd2534, %rd3079, %rd3057;
	add.s64 	%rd2535, %rd2534, %rd2528;
	add.s64 	%rd3057, %rd2535, %rd2533;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15867,%dummy}, %rd3058;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15868}, %rd3058;
	}
	shf.r.wrap.b32 	%r15869, %r15868, %r15867, 19;
	shf.r.wrap.b32 	%r15870, %r15867, %r15868, 19;
	mov.b64 	%rd2536, {%r15870, %r15869};
	shf.l.wrap.b32 	%r15871, %r15867, %r15868, 3;
	shf.l.wrap.b32 	%r15872, %r15868, %r15867, 3;
	mov.b64 	%rd2537, {%r15872, %r15871};
	shr.u64 	%rd2538, %rd3058, 6;
	xor.b64  	%rd2539, %rd2536, %rd2538;
	xor.b64  	%rd2540, %rd2539, %rd2537;
	shf.r.wrap.b32 	%r15873, %r15716, %r15715, 1;
	shf.r.wrap.b32 	%r15874, %r15715, %r15716, 1;
	mov.b64 	%rd2541, {%r15874, %r15873};
	shf.r.wrap.b32 	%r15875, %r15716, %r15715, 8;
	shf.r.wrap.b32 	%r15876, %r15715, %r15716, 8;
	mov.b64 	%rd2542, {%r15876, %r15875};
	shr.u64 	%rd2543, %rd3072, 7;
	xor.b64  	%rd2544, %rd2541, %rd2543;
	xor.b64  	%rd2545, %rd2544, %rd2542;
	add.s64 	%rd2546, %rd3063, %rd3056;
	add.s64 	%rd2547, %rd2546, %rd2540;
	add.s64 	%rd3056, %rd2547, %rd2545;
	mul.wide.s32 	%rd2548, %r16317, 8;
	mov.u64 	%rd2549, k_sha512;
	add.s64 	%rd2550, %rd2549, %rd2548;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15877,%dummy}, %rd3068;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15878}, %rd3068;
	}
	shf.r.wrap.b32 	%r15879, %r15878, %r15877, 18;
	shf.r.wrap.b32 	%r15880, %r15877, %r15878, 18;
	mov.b64 	%rd2551, {%r15880, %r15879};
	shf.r.wrap.b32 	%r15881, %r15878, %r15877, 14;
	shf.r.wrap.b32 	%r15882, %r15877, %r15878, 14;
	mov.b64 	%rd2552, {%r15882, %r15881};
	xor.b64  	%rd2553, %rd2551, %rd2552;
	shf.l.wrap.b32 	%r15883, %r15877, %r15878, 23;
	shf.l.wrap.b32 	%r15884, %r15878, %r15877, 23;
	mov.b64 	%rd2554, {%r15884, %r15883};
	xor.b64  	%rd2555, %rd2553, %rd2554;
	xor.b64  	%rd2556, %rd3069, %rd3070;
	and.b64  	%rd2557, %rd2556, %rd3068;
	xor.b64  	%rd2558, %rd2557, %rd3070;
	add.s64 	%rd2559, %rd2558, %rd3071;
	add.s64 	%rd2560, %rd2559, %rd3072;
	ld.const.u64 	%rd2561, [%rd2550];
	add.s64 	%rd2562, %rd2560, %rd2561;
	add.s64 	%rd2563, %rd2562, %rd2555;
	add.s64 	%rd2564, %rd2563, %rd3067;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15885}, %rd3064;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15886,%dummy}, %rd3064;
	}
	shf.l.wrap.b32 	%r15887, %r15886, %r15885, 30;
	shf.l.wrap.b32 	%r15888, %r15885, %r15886, 30;
	mov.b64 	%rd2565, {%r15888, %r15887};
	shf.r.wrap.b32 	%r15889, %r15885, %r15886, 28;
	shf.r.wrap.b32 	%r15890, %r15886, %r15885, 28;
	mov.b64 	%rd2566, {%r15890, %r15889};
	xor.b64  	%rd2567, %rd2565, %rd2566;
	shf.l.wrap.b32 	%r15891, %r15886, %r15885, 25;
	shf.l.wrap.b32 	%r15892, %r15885, %r15886, 25;
	mov.b64 	%rd2568, {%r15892, %r15891};
	xor.b64  	%rd2569, %rd2567, %rd2568;
	xor.b64  	%rd2570, %rd3064, %rd3065;
	xor.b64  	%rd2571, %rd3064, %rd3066;
	and.b64  	%rd2572, %rd2570, %rd2571;
	xor.b64  	%rd2573, %rd2572, %rd3064;
	add.s64 	%rd2574, %rd2563, %rd2573;
	add.s64 	%rd2575, %rd2574, %rd2569;
	add.s32 	%r15893, %r16317, 1;
	mul.wide.s32 	%rd2576, %r15893, 8;
	add.s64 	%rd2577, %rd2549, %rd2576;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15894,%dummy}, %rd2564;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15895}, %rd2564;
	}
	shf.r.wrap.b32 	%r15896, %r15895, %r15894, 14;
	shf.r.wrap.b32 	%r15897, %r15894, %r15895, 14;
	mov.b64 	%rd2578, {%r15897, %r15896};
	shf.r.wrap.b32 	%r15898, %r15895, %r15894, 18;
	shf.r.wrap.b32 	%r15899, %r15894, %r15895, 18;
	mov.b64 	%rd2579, {%r15899, %r15898};
	xor.b64  	%rd2580, %rd2579, %rd2578;
	shf.l.wrap.b32 	%r15900, %r15894, %r15895, 23;
	shf.l.wrap.b32 	%r15901, %r15895, %r15894, 23;
	mov.b64 	%rd2581, {%r15901, %r15900};
	xor.b64  	%rd2582, %rd2580, %rd2581;
	xor.b64  	%rd2583, %rd3068, %rd3069;
	and.b64  	%rd2584, %rd2564, %rd2583;
	xor.b64  	%rd2585, %rd2584, %rd3069;
	add.s64 	%rd2586, %rd3073, %rd3070;
	ld.const.u64 	%rd2587, [%rd2577];
	add.s64 	%rd2588, %rd2586, %rd2587;
	add.s64 	%rd2589, %rd2588, %rd2585;
	add.s64 	%rd2590, %rd2589, %rd2582;
	add.s64 	%rd2591, %rd2590, %rd3066;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15902,%dummy}, %rd2575;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15903}, %rd2575;
	}
	shf.r.wrap.b32 	%r15904, %r15903, %r15902, 28;
	shf.r.wrap.b32 	%r15905, %r15902, %r15903, 28;
	mov.b64 	%rd2592, {%r15905, %r15904};
	shf.l.wrap.b32 	%r15906, %r15902, %r15903, 30;
	shf.l.wrap.b32 	%r15907, %r15903, %r15902, 30;
	mov.b64 	%rd2593, {%r15907, %r15906};
	xor.b64  	%rd2594, %rd2593, %rd2592;
	shf.l.wrap.b32 	%r15908, %r15902, %r15903, 25;
	shf.l.wrap.b32 	%r15909, %r15903, %r15902, 25;
	mov.b64 	%rd2595, {%r15909, %r15908};
	xor.b64  	%rd2596, %rd2594, %rd2595;
	xor.b64  	%rd2597, %rd2575, %rd3065;
	xor.b64  	%rd2598, %rd2575, %rd3064;
	and.b64  	%rd2599, %rd2598, %rd2597;
	xor.b64  	%rd2600, %rd2599, %rd2575;
	add.s64 	%rd2601, %rd2590, %rd2600;
	add.s64 	%rd2602, %rd2601, %rd2596;
	add.s32 	%r15910, %r16317, 2;
	mul.wide.s32 	%rd2603, %r15910, 8;
	add.s64 	%rd2604, %rd2549, %rd2603;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15911,%dummy}, %rd2591;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15912}, %rd2591;
	}
	shf.r.wrap.b32 	%r15913, %r15912, %r15911, 14;
	shf.r.wrap.b32 	%r15914, %r15911, %r15912, 14;
	mov.b64 	%rd2605, {%r15914, %r15913};
	shf.r.wrap.b32 	%r15915, %r15912, %r15911, 18;
	shf.r.wrap.b32 	%r15916, %r15911, %r15912, 18;
	mov.b64 	%rd2606, {%r15916, %r15915};
	xor.b64  	%rd2607, %rd2606, %rd2605;
	shf.l.wrap.b32 	%r15917, %r15911, %r15912, 23;
	shf.l.wrap.b32 	%r15918, %r15912, %r15911, 23;
	mov.b64 	%rd2608, {%r15918, %r15917};
	xor.b64  	%rd2609, %rd2607, %rd2608;
	xor.b64  	%rd2610, %rd2564, %rd3068;
	and.b64  	%rd2611, %rd2591, %rd2610;
	xor.b64  	%rd2612, %rd2611, %rd3068;
	add.s64 	%rd2613, %rd3074, %rd3069;
	ld.const.u64 	%rd2614, [%rd2604];
	add.s64 	%rd2615, %rd2613, %rd2614;
	add.s64 	%rd2616, %rd2615, %rd2612;
	add.s64 	%rd2617, %rd2616, %rd2609;
	add.s64 	%rd2618, %rd2617, %rd3065;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15919,%dummy}, %rd2602;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15920}, %rd2602;
	}
	shf.r.wrap.b32 	%r15921, %r15920, %r15919, 28;
	shf.r.wrap.b32 	%r15922, %r15919, %r15920, 28;
	mov.b64 	%rd2619, {%r15922, %r15921};
	shf.l.wrap.b32 	%r15923, %r15919, %r15920, 30;
	shf.l.wrap.b32 	%r15924, %r15920, %r15919, 30;
	mov.b64 	%rd2620, {%r15924, %r15923};
	xor.b64  	%rd2621, %rd2620, %rd2619;
	shf.l.wrap.b32 	%r15925, %r15919, %r15920, 25;
	shf.l.wrap.b32 	%r15926, %r15920, %r15919, 25;
	mov.b64 	%rd2622, {%r15926, %r15925};
	xor.b64  	%rd2623, %rd2621, %rd2622;
	xor.b64  	%rd2624, %rd2602, %rd3064;
	xor.b64  	%rd2625, %rd2602, %rd2575;
	and.b64  	%rd2626, %rd2625, %rd2624;
	xor.b64  	%rd2627, %rd2626, %rd2602;
	add.s64 	%rd2628, %rd2617, %rd2627;
	add.s64 	%rd2629, %rd2628, %rd2623;
	add.s32 	%r15927, %r16317, 3;
	mul.wide.s32 	%rd2630, %r15927, 8;
	add.s64 	%rd2631, %rd2549, %rd2630;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15928,%dummy}, %rd2618;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15929}, %rd2618;
	}
	shf.r.wrap.b32 	%r15930, %r15929, %r15928, 14;
	shf.r.wrap.b32 	%r15931, %r15928, %r15929, 14;
	mov.b64 	%rd2632, {%r15931, %r15930};
	shf.r.wrap.b32 	%r15932, %r15929, %r15928, 18;
	shf.r.wrap.b32 	%r15933, %r15928, %r15929, 18;
	mov.b64 	%rd2633, {%r15933, %r15932};
	xor.b64  	%rd2634, %rd2633, %rd2632;
	shf.l.wrap.b32 	%r15934, %r15928, %r15929, 23;
	shf.l.wrap.b32 	%r15935, %r15929, %r15928, 23;
	mov.b64 	%rd2635, {%r15935, %r15934};
	xor.b64  	%rd2636, %rd2634, %rd2635;
	xor.b64  	%rd2637, %rd2591, %rd2564;
	and.b64  	%rd2638, %rd2618, %rd2637;
	xor.b64  	%rd2639, %rd2638, %rd2564;
	add.s64 	%rd2640, %rd3075, %rd3068;
	ld.const.u64 	%rd2641, [%rd2631];
	add.s64 	%rd2642, %rd2640, %rd2641;
	add.s64 	%rd2643, %rd2642, %rd2639;
	add.s64 	%rd2644, %rd2643, %rd2636;
	add.s64 	%rd2645, %rd2644, %rd3064;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15936,%dummy}, %rd2629;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15937}, %rd2629;
	}
	shf.r.wrap.b32 	%r15938, %r15937, %r15936, 28;
	shf.r.wrap.b32 	%r15939, %r15936, %r15937, 28;
	mov.b64 	%rd2646, {%r15939, %r15938};
	shf.l.wrap.b32 	%r15940, %r15936, %r15937, 30;
	shf.l.wrap.b32 	%r15941, %r15937, %r15936, 30;
	mov.b64 	%rd2647, {%r15941, %r15940};
	xor.b64  	%rd2648, %rd2647, %rd2646;
	shf.l.wrap.b32 	%r15942, %r15936, %r15937, 25;
	shf.l.wrap.b32 	%r15943, %r15937, %r15936, 25;
	mov.b64 	%rd2649, {%r15943, %r15942};
	xor.b64  	%rd2650, %rd2648, %rd2649;
	xor.b64  	%rd2651, %rd2629, %rd2575;
	xor.b64  	%rd2652, %rd2629, %rd2602;
	and.b64  	%rd2653, %rd2652, %rd2651;
	xor.b64  	%rd2654, %rd2653, %rd2629;
	add.s64 	%rd2655, %rd2644, %rd2654;
	add.s64 	%rd2656, %rd2655, %rd2650;
	add.s32 	%r15944, %r16317, 4;
	mul.wide.s32 	%rd2657, %r15944, 8;
	add.s64 	%rd2658, %rd2549, %rd2657;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15945,%dummy}, %rd2645;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15946}, %rd2645;
	}
	shf.r.wrap.b32 	%r15947, %r15946, %r15945, 14;
	shf.r.wrap.b32 	%r15948, %r15945, %r15946, 14;
	mov.b64 	%rd2659, {%r15948, %r15947};
	shf.r.wrap.b32 	%r15949, %r15946, %r15945, 18;
	shf.r.wrap.b32 	%r15950, %r15945, %r15946, 18;
	mov.b64 	%rd2660, {%r15950, %r15949};
	xor.b64  	%rd2661, %rd2660, %rd2659;
	shf.l.wrap.b32 	%r15951, %r15945, %r15946, 23;
	shf.l.wrap.b32 	%r15952, %r15946, %r15945, 23;
	mov.b64 	%rd2662, {%r15952, %r15951};
	xor.b64  	%rd2663, %rd2661, %rd2662;
	xor.b64  	%rd2664, %rd2618, %rd2591;
	and.b64  	%rd2665, %rd2645, %rd2664;
	xor.b64  	%rd2666, %rd2665, %rd2591;
	add.s64 	%rd2667, %rd2564, %rd3076;
	ld.const.u64 	%rd2668, [%rd2658];
	add.s64 	%rd2669, %rd2667, %rd2668;
	add.s64 	%rd2670, %rd2669, %rd2666;
	add.s64 	%rd2671, %rd2670, %rd2663;
	add.s64 	%rd2672, %rd2671, %rd2575;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15953,%dummy}, %rd2656;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15954}, %rd2656;
	}
	shf.r.wrap.b32 	%r15955, %r15954, %r15953, 28;
	shf.r.wrap.b32 	%r15956, %r15953, %r15954, 28;
	mov.b64 	%rd2673, {%r15956, %r15955};
	shf.l.wrap.b32 	%r15957, %r15953, %r15954, 30;
	shf.l.wrap.b32 	%r15958, %r15954, %r15953, 30;
	mov.b64 	%rd2674, {%r15958, %r15957};
	xor.b64  	%rd2675, %rd2674, %rd2673;
	shf.l.wrap.b32 	%r15959, %r15953, %r15954, 25;
	shf.l.wrap.b32 	%r15960, %r15954, %r15953, 25;
	mov.b64 	%rd2676, {%r15960, %r15959};
	xor.b64  	%rd2677, %rd2675, %rd2676;
	xor.b64  	%rd2678, %rd2656, %rd2602;
	xor.b64  	%rd2679, %rd2656, %rd2629;
	and.b64  	%rd2680, %rd2679, %rd2678;
	xor.b64  	%rd2681, %rd2680, %rd2656;
	add.s64 	%rd2682, %rd2671, %rd2681;
	add.s64 	%rd2683, %rd2682, %rd2677;
	add.s32 	%r15961, %r16317, 5;
	mul.wide.s32 	%rd2684, %r15961, 8;
	add.s64 	%rd2685, %rd2549, %rd2684;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15962,%dummy}, %rd2672;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15963}, %rd2672;
	}
	shf.r.wrap.b32 	%r15964, %r15963, %r15962, 14;
	shf.r.wrap.b32 	%r15965, %r15962, %r15963, 14;
	mov.b64 	%rd2686, {%r15965, %r15964};
	shf.r.wrap.b32 	%r15966, %r15963, %r15962, 18;
	shf.r.wrap.b32 	%r15967, %r15962, %r15963, 18;
	mov.b64 	%rd2687, {%r15967, %r15966};
	xor.b64  	%rd2688, %rd2687, %rd2686;
	shf.l.wrap.b32 	%r15968, %r15962, %r15963, 23;
	shf.l.wrap.b32 	%r15969, %r15963, %r15962, 23;
	mov.b64 	%rd2689, {%r15969, %r15968};
	xor.b64  	%rd2690, %rd2688, %rd2689;
	xor.b64  	%rd2691, %rd2645, %rd2618;
	and.b64  	%rd2692, %rd2672, %rd2691;
	xor.b64  	%rd2693, %rd2692, %rd2618;
	add.s64 	%rd2694, %rd2591, %rd3077;
	ld.const.u64 	%rd2695, [%rd2685];
	add.s64 	%rd2696, %rd2694, %rd2695;
	add.s64 	%rd2697, %rd2696, %rd2693;
	add.s64 	%rd2698, %rd2697, %rd2690;
	add.s64 	%rd2699, %rd2698, %rd2602;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15970,%dummy}, %rd2683;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15971}, %rd2683;
	}
	shf.r.wrap.b32 	%r15972, %r15971, %r15970, 28;
	shf.r.wrap.b32 	%r15973, %r15970, %r15971, 28;
	mov.b64 	%rd2700, {%r15973, %r15972};
	shf.l.wrap.b32 	%r15974, %r15970, %r15971, 30;
	shf.l.wrap.b32 	%r15975, %r15971, %r15970, 30;
	mov.b64 	%rd2701, {%r15975, %r15974};
	xor.b64  	%rd2702, %rd2701, %rd2700;
	shf.l.wrap.b32 	%r15976, %r15970, %r15971, 25;
	shf.l.wrap.b32 	%r15977, %r15971, %r15970, 25;
	mov.b64 	%rd2703, {%r15977, %r15976};
	xor.b64  	%rd2704, %rd2702, %rd2703;
	xor.b64  	%rd2705, %rd2683, %rd2629;
	xor.b64  	%rd2706, %rd2683, %rd2656;
	and.b64  	%rd2707, %rd2706, %rd2705;
	xor.b64  	%rd2708, %rd2707, %rd2683;
	add.s64 	%rd2709, %rd2698, %rd2708;
	add.s64 	%rd2710, %rd2709, %rd2704;
	add.s32 	%r15978, %r16317, 6;
	mul.wide.s32 	%rd2711, %r15978, 8;
	add.s64 	%rd2712, %rd2549, %rd2711;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15979,%dummy}, %rd2699;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15980}, %rd2699;
	}
	shf.r.wrap.b32 	%r15981, %r15980, %r15979, 14;
	shf.r.wrap.b32 	%r15982, %r15979, %r15980, 14;
	mov.b64 	%rd2713, {%r15982, %r15981};
	shf.r.wrap.b32 	%r15983, %r15980, %r15979, 18;
	shf.r.wrap.b32 	%r15984, %r15979, %r15980, 18;
	mov.b64 	%rd2714, {%r15984, %r15983};
	xor.b64  	%rd2715, %rd2714, %rd2713;
	shf.l.wrap.b32 	%r15985, %r15979, %r15980, 23;
	shf.l.wrap.b32 	%r15986, %r15980, %r15979, 23;
	mov.b64 	%rd2716, {%r15986, %r15985};
	xor.b64  	%rd2717, %rd2715, %rd2716;
	xor.b64  	%rd2718, %rd2672, %rd2645;
	and.b64  	%rd2719, %rd2699, %rd2718;
	xor.b64  	%rd2720, %rd2719, %rd2645;
	add.s64 	%rd2721, %rd2618, %rd3078;
	ld.const.u64 	%rd2722, [%rd2712];
	add.s64 	%rd2723, %rd2721, %rd2722;
	add.s64 	%rd2724, %rd2723, %rd2720;
	add.s64 	%rd2725, %rd2724, %rd2717;
	add.s64 	%rd2726, %rd2725, %rd2629;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15987,%dummy}, %rd2710;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15988}, %rd2710;
	}
	shf.r.wrap.b32 	%r15989, %r15988, %r15987, 28;
	shf.r.wrap.b32 	%r15990, %r15987, %r15988, 28;
	mov.b64 	%rd2727, {%r15990, %r15989};
	shf.l.wrap.b32 	%r15991, %r15987, %r15988, 30;
	shf.l.wrap.b32 	%r15992, %r15988, %r15987, 30;
	mov.b64 	%rd2728, {%r15992, %r15991};
	xor.b64  	%rd2729, %rd2728, %rd2727;
	shf.l.wrap.b32 	%r15993, %r15987, %r15988, 25;
	shf.l.wrap.b32 	%r15994, %r15988, %r15987, 25;
	mov.b64 	%rd2730, {%r15994, %r15993};
	xor.b64  	%rd2731, %rd2729, %rd2730;
	xor.b64  	%rd2732, %rd2710, %rd2656;
	xor.b64  	%rd2733, %rd2710, %rd2683;
	and.b64  	%rd2734, %rd2733, %rd2732;
	xor.b64  	%rd2735, %rd2734, %rd2710;
	add.s64 	%rd2736, %rd2725, %rd2735;
	add.s64 	%rd2737, %rd2736, %rd2731;
	add.s32 	%r15995, %r16317, 7;
	mul.wide.s32 	%rd2738, %r15995, 8;
	add.s64 	%rd2739, %rd2549, %rd2738;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r15996,%dummy}, %rd2726;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r15997}, %rd2726;
	}
	shf.r.wrap.b32 	%r15998, %r15997, %r15996, 14;
	shf.r.wrap.b32 	%r15999, %r15996, %r15997, 14;
	mov.b64 	%rd2740, {%r15999, %r15998};
	shf.r.wrap.b32 	%r16000, %r15997, %r15996, 18;
	shf.r.wrap.b32 	%r16001, %r15996, %r15997, 18;
	mov.b64 	%rd2741, {%r16001, %r16000};
	xor.b64  	%rd2742, %rd2741, %rd2740;
	shf.l.wrap.b32 	%r16002, %r15996, %r15997, 23;
	shf.l.wrap.b32 	%r16003, %r15997, %r15996, 23;
	mov.b64 	%rd2743, {%r16003, %r16002};
	xor.b64  	%rd2744, %rd2742, %rd2743;
	xor.b64  	%rd2745, %rd2699, %rd2672;
	and.b64  	%rd2746, %rd2726, %rd2745;
	xor.b64  	%rd2747, %rd2746, %rd2672;
	add.s64 	%rd2748, %rd2645, %rd3079;
	ld.const.u64 	%rd2749, [%rd2739];
	add.s64 	%rd2750, %rd2748, %rd2749;
	add.s64 	%rd2751, %rd2750, %rd2747;
	add.s64 	%rd2752, %rd2751, %rd2744;
	add.s64 	%rd2753, %rd2752, %rd2656;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16004,%dummy}, %rd2737;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16005}, %rd2737;
	}
	shf.r.wrap.b32 	%r16006, %r16005, %r16004, 28;
	shf.r.wrap.b32 	%r16007, %r16004, %r16005, 28;
	mov.b64 	%rd2754, {%r16007, %r16006};
	shf.l.wrap.b32 	%r16008, %r16004, %r16005, 30;
	shf.l.wrap.b32 	%r16009, %r16005, %r16004, 30;
	mov.b64 	%rd2755, {%r16009, %r16008};
	xor.b64  	%rd2756, %rd2755, %rd2754;
	shf.l.wrap.b32 	%r16010, %r16004, %r16005, 25;
	shf.l.wrap.b32 	%r16011, %r16005, %r16004, 25;
	mov.b64 	%rd2757, {%r16011, %r16010};
	xor.b64  	%rd2758, %rd2756, %rd2757;
	xor.b64  	%rd2759, %rd2737, %rd2683;
	xor.b64  	%rd2760, %rd2737, %rd2710;
	and.b64  	%rd2761, %rd2760, %rd2759;
	xor.b64  	%rd2762, %rd2761, %rd2737;
	add.s64 	%rd2763, %rd2752, %rd2762;
	add.s64 	%rd2764, %rd2763, %rd2758;
	add.s32 	%r16012, %r16317, 8;
	mul.wide.s32 	%rd2765, %r16012, 8;
	add.s64 	%rd2766, %rd2549, %rd2765;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16013,%dummy}, %rd2753;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16014}, %rd2753;
	}
	shf.r.wrap.b32 	%r16015, %r16014, %r16013, 14;
	shf.r.wrap.b32 	%r16016, %r16013, %r16014, 14;
	mov.b64 	%rd2767, {%r16016, %r16015};
	shf.r.wrap.b32 	%r16017, %r16014, %r16013, 18;
	shf.r.wrap.b32 	%r16018, %r16013, %r16014, 18;
	mov.b64 	%rd2768, {%r16018, %r16017};
	xor.b64  	%rd2769, %rd2768, %rd2767;
	shf.l.wrap.b32 	%r16019, %r16013, %r16014, 23;
	shf.l.wrap.b32 	%r16020, %r16014, %r16013, 23;
	mov.b64 	%rd2770, {%r16020, %r16019};
	xor.b64  	%rd2771, %rd2769, %rd2770;
	xor.b64  	%rd2772, %rd2726, %rd2699;
	and.b64  	%rd2773, %rd2753, %rd2772;
	xor.b64  	%rd2774, %rd2773, %rd2699;
	add.s64 	%rd2775, %rd2672, %rd3063;
	ld.const.u64 	%rd2776, [%rd2766];
	add.s64 	%rd2777, %rd2775, %rd2776;
	add.s64 	%rd2778, %rd2777, %rd2774;
	add.s64 	%rd2779, %rd2778, %rd2771;
	add.s64 	%rd2780, %rd2779, %rd2683;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16021,%dummy}, %rd2764;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16022}, %rd2764;
	}
	shf.r.wrap.b32 	%r16023, %r16022, %r16021, 28;
	shf.r.wrap.b32 	%r16024, %r16021, %r16022, 28;
	mov.b64 	%rd2781, {%r16024, %r16023};
	shf.l.wrap.b32 	%r16025, %r16021, %r16022, 30;
	shf.l.wrap.b32 	%r16026, %r16022, %r16021, 30;
	mov.b64 	%rd2782, {%r16026, %r16025};
	xor.b64  	%rd2783, %rd2782, %rd2781;
	shf.l.wrap.b32 	%r16027, %r16021, %r16022, 25;
	shf.l.wrap.b32 	%r16028, %r16022, %r16021, 25;
	mov.b64 	%rd2784, {%r16028, %r16027};
	xor.b64  	%rd2785, %rd2783, %rd2784;
	xor.b64  	%rd2786, %rd2764, %rd2710;
	xor.b64  	%rd2787, %rd2764, %rd2737;
	and.b64  	%rd2788, %rd2787, %rd2786;
	xor.b64  	%rd2789, %rd2788, %rd2764;
	add.s64 	%rd2790, %rd2779, %rd2789;
	add.s64 	%rd2791, %rd2790, %rd2785;
	add.s32 	%r16029, %r16317, 9;
	mul.wide.s32 	%rd2792, %r16029, 8;
	add.s64 	%rd2793, %rd2549, %rd2792;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16030,%dummy}, %rd2780;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16031}, %rd2780;
	}
	shf.r.wrap.b32 	%r16032, %r16031, %r16030, 14;
	shf.r.wrap.b32 	%r16033, %r16030, %r16031, 14;
	mov.b64 	%rd2794, {%r16033, %r16032};
	shf.r.wrap.b32 	%r16034, %r16031, %r16030, 18;
	shf.r.wrap.b32 	%r16035, %r16030, %r16031, 18;
	mov.b64 	%rd2795, {%r16035, %r16034};
	xor.b64  	%rd2796, %rd2795, %rd2794;
	shf.l.wrap.b32 	%r16036, %r16030, %r16031, 23;
	shf.l.wrap.b32 	%r16037, %r16031, %r16030, 23;
	mov.b64 	%rd2797, {%r16037, %r16036};
	xor.b64  	%rd2798, %rd2796, %rd2797;
	xor.b64  	%rd2799, %rd2753, %rd2726;
	and.b64  	%rd2800, %rd2780, %rd2799;
	xor.b64  	%rd2801, %rd2800, %rd2726;
	add.s64 	%rd2802, %rd2699, %rd3062;
	ld.const.u64 	%rd2803, [%rd2793];
	add.s64 	%rd2804, %rd2802, %rd2803;
	add.s64 	%rd2805, %rd2804, %rd2801;
	add.s64 	%rd2806, %rd2805, %rd2798;
	add.s64 	%rd2807, %rd2806, %rd2710;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16038,%dummy}, %rd2791;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16039}, %rd2791;
	}
	shf.r.wrap.b32 	%r16040, %r16039, %r16038, 28;
	shf.r.wrap.b32 	%r16041, %r16038, %r16039, 28;
	mov.b64 	%rd2808, {%r16041, %r16040};
	shf.l.wrap.b32 	%r16042, %r16038, %r16039, 30;
	shf.l.wrap.b32 	%r16043, %r16039, %r16038, 30;
	mov.b64 	%rd2809, {%r16043, %r16042};
	xor.b64  	%rd2810, %rd2809, %rd2808;
	shf.l.wrap.b32 	%r16044, %r16038, %r16039, 25;
	shf.l.wrap.b32 	%r16045, %r16039, %r16038, 25;
	mov.b64 	%rd2811, {%r16045, %r16044};
	xor.b64  	%rd2812, %rd2810, %rd2811;
	xor.b64  	%rd2813, %rd2791, %rd2737;
	xor.b64  	%rd2814, %rd2791, %rd2764;
	and.b64  	%rd2815, %rd2814, %rd2813;
	xor.b64  	%rd2816, %rd2815, %rd2791;
	add.s64 	%rd2817, %rd2806, %rd2816;
	add.s64 	%rd2818, %rd2817, %rd2812;
	add.s32 	%r16046, %r16317, 10;
	mul.wide.s32 	%rd2819, %r16046, 8;
	add.s64 	%rd2820, %rd2549, %rd2819;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16047,%dummy}, %rd2807;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16048}, %rd2807;
	}
	shf.r.wrap.b32 	%r16049, %r16048, %r16047, 14;
	shf.r.wrap.b32 	%r16050, %r16047, %r16048, 14;
	mov.b64 	%rd2821, {%r16050, %r16049};
	shf.r.wrap.b32 	%r16051, %r16048, %r16047, 18;
	shf.r.wrap.b32 	%r16052, %r16047, %r16048, 18;
	mov.b64 	%rd2822, {%r16052, %r16051};
	xor.b64  	%rd2823, %rd2822, %rd2821;
	shf.l.wrap.b32 	%r16053, %r16047, %r16048, 23;
	shf.l.wrap.b32 	%r16054, %r16048, %r16047, 23;
	mov.b64 	%rd2824, {%r16054, %r16053};
	xor.b64  	%rd2825, %rd2823, %rd2824;
	xor.b64  	%rd2826, %rd2780, %rd2753;
	and.b64  	%rd2827, %rd2807, %rd2826;
	xor.b64  	%rd2828, %rd2827, %rd2753;
	add.s64 	%rd2829, %rd2726, %rd3061;
	ld.const.u64 	%rd2830, [%rd2820];
	add.s64 	%rd2831, %rd2829, %rd2830;
	add.s64 	%rd2832, %rd2831, %rd2828;
	add.s64 	%rd2833, %rd2832, %rd2825;
	add.s64 	%rd2834, %rd2833, %rd2737;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16055,%dummy}, %rd2818;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16056}, %rd2818;
	}
	shf.r.wrap.b32 	%r16057, %r16056, %r16055, 28;
	shf.r.wrap.b32 	%r16058, %r16055, %r16056, 28;
	mov.b64 	%rd2835, {%r16058, %r16057};
	shf.l.wrap.b32 	%r16059, %r16055, %r16056, 30;
	shf.l.wrap.b32 	%r16060, %r16056, %r16055, 30;
	mov.b64 	%rd2836, {%r16060, %r16059};
	xor.b64  	%rd2837, %rd2836, %rd2835;
	shf.l.wrap.b32 	%r16061, %r16055, %r16056, 25;
	shf.l.wrap.b32 	%r16062, %r16056, %r16055, 25;
	mov.b64 	%rd2838, {%r16062, %r16061};
	xor.b64  	%rd2839, %rd2837, %rd2838;
	xor.b64  	%rd2840, %rd2818, %rd2764;
	xor.b64  	%rd2841, %rd2818, %rd2791;
	and.b64  	%rd2842, %rd2841, %rd2840;
	xor.b64  	%rd2843, %rd2842, %rd2818;
	add.s64 	%rd2844, %rd2833, %rd2843;
	add.s64 	%rd2845, %rd2844, %rd2839;
	add.s32 	%r16063, %r16317, 11;
	mul.wide.s32 	%rd2846, %r16063, 8;
	add.s64 	%rd2847, %rd2549, %rd2846;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16064,%dummy}, %rd2834;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16065}, %rd2834;
	}
	shf.r.wrap.b32 	%r16066, %r16065, %r16064, 14;
	shf.r.wrap.b32 	%r16067, %r16064, %r16065, 14;
	mov.b64 	%rd2848, {%r16067, %r16066};
	shf.r.wrap.b32 	%r16068, %r16065, %r16064, 18;
	shf.r.wrap.b32 	%r16069, %r16064, %r16065, 18;
	mov.b64 	%rd2849, {%r16069, %r16068};
	xor.b64  	%rd2850, %rd2849, %rd2848;
	shf.l.wrap.b32 	%r16070, %r16064, %r16065, 23;
	shf.l.wrap.b32 	%r16071, %r16065, %r16064, 23;
	mov.b64 	%rd2851, {%r16071, %r16070};
	xor.b64  	%rd2852, %rd2850, %rd2851;
	xor.b64  	%rd2853, %rd2807, %rd2780;
	and.b64  	%rd2854, %rd2834, %rd2853;
	xor.b64  	%rd2855, %rd2854, %rd2780;
	add.s64 	%rd2856, %rd2753, %rd3060;
	ld.const.u64 	%rd2857, [%rd2847];
	add.s64 	%rd2858, %rd2856, %rd2857;
	add.s64 	%rd2859, %rd2858, %rd2855;
	add.s64 	%rd2860, %rd2859, %rd2852;
	add.s64 	%rd2861, %rd2860, %rd2764;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16072,%dummy}, %rd2845;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16073}, %rd2845;
	}
	shf.r.wrap.b32 	%r16074, %r16073, %r16072, 28;
	shf.r.wrap.b32 	%r16075, %r16072, %r16073, 28;
	mov.b64 	%rd2862, {%r16075, %r16074};
	shf.l.wrap.b32 	%r16076, %r16072, %r16073, 30;
	shf.l.wrap.b32 	%r16077, %r16073, %r16072, 30;
	mov.b64 	%rd2863, {%r16077, %r16076};
	xor.b64  	%rd2864, %rd2863, %rd2862;
	shf.l.wrap.b32 	%r16078, %r16072, %r16073, 25;
	shf.l.wrap.b32 	%r16079, %r16073, %r16072, 25;
	mov.b64 	%rd2865, {%r16079, %r16078};
	xor.b64  	%rd2866, %rd2864, %rd2865;
	xor.b64  	%rd2867, %rd2845, %rd2791;
	xor.b64  	%rd2868, %rd2845, %rd2818;
	and.b64  	%rd2869, %rd2868, %rd2867;
	xor.b64  	%rd2870, %rd2869, %rd2845;
	add.s64 	%rd2871, %rd2860, %rd2870;
	add.s64 	%rd2872, %rd2871, %rd2866;
	add.s32 	%r16080, %r16317, 12;
	mul.wide.s32 	%rd2873, %r16080, 8;
	add.s64 	%rd2874, %rd2549, %rd2873;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16081,%dummy}, %rd2861;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16082}, %rd2861;
	}
	shf.r.wrap.b32 	%r16083, %r16082, %r16081, 14;
	shf.r.wrap.b32 	%r16084, %r16081, %r16082, 14;
	mov.b64 	%rd2875, {%r16084, %r16083};
	shf.r.wrap.b32 	%r16085, %r16082, %r16081, 18;
	shf.r.wrap.b32 	%r16086, %r16081, %r16082, 18;
	mov.b64 	%rd2876, {%r16086, %r16085};
	xor.b64  	%rd2877, %rd2876, %rd2875;
	shf.l.wrap.b32 	%r16087, %r16081, %r16082, 23;
	shf.l.wrap.b32 	%r16088, %r16082, %r16081, 23;
	mov.b64 	%rd2878, {%r16088, %r16087};
	xor.b64  	%rd2879, %rd2877, %rd2878;
	xor.b64  	%rd2880, %rd2834, %rd2807;
	and.b64  	%rd2881, %rd2861, %rd2880;
	xor.b64  	%rd2882, %rd2881, %rd2807;
	add.s64 	%rd2883, %rd2780, %rd3059;
	ld.const.u64 	%rd2884, [%rd2874];
	add.s64 	%rd2885, %rd2883, %rd2884;
	add.s64 	%rd2886, %rd2885, %rd2882;
	add.s64 	%rd2887, %rd2886, %rd2879;
	add.s64 	%rd3071, %rd2887, %rd2791;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16089,%dummy}, %rd2872;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16090}, %rd2872;
	}
	shf.r.wrap.b32 	%r16091, %r16090, %r16089, 28;
	shf.r.wrap.b32 	%r16092, %r16089, %r16090, 28;
	mov.b64 	%rd2888, {%r16092, %r16091};
	shf.l.wrap.b32 	%r16093, %r16089, %r16090, 30;
	shf.l.wrap.b32 	%r16094, %r16090, %r16089, 30;
	mov.b64 	%rd2889, {%r16094, %r16093};
	xor.b64  	%rd2890, %rd2889, %rd2888;
	shf.l.wrap.b32 	%r16095, %r16089, %r16090, 25;
	shf.l.wrap.b32 	%r16096, %r16090, %r16089, 25;
	mov.b64 	%rd2891, {%r16096, %r16095};
	xor.b64  	%rd2892, %rd2890, %rd2891;
	xor.b64  	%rd2893, %rd2872, %rd2818;
	xor.b64  	%rd2894, %rd2872, %rd2845;
	and.b64  	%rd2895, %rd2894, %rd2893;
	xor.b64  	%rd2896, %rd2895, %rd2872;
	add.s64 	%rd2897, %rd2887, %rd2896;
	add.s64 	%rd3067, %rd2897, %rd2892;
	add.s32 	%r16097, %r16317, 13;
	mul.wide.s32 	%rd2898, %r16097, 8;
	add.s64 	%rd2899, %rd2549, %rd2898;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16098,%dummy}, %rd3071;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16099}, %rd3071;
	}
	shf.r.wrap.b32 	%r16100, %r16099, %r16098, 14;
	shf.r.wrap.b32 	%r16101, %r16098, %r16099, 14;
	mov.b64 	%rd2900, {%r16101, %r16100};
	shf.r.wrap.b32 	%r16102, %r16099, %r16098, 18;
	shf.r.wrap.b32 	%r16103, %r16098, %r16099, 18;
	mov.b64 	%rd2901, {%r16103, %r16102};
	xor.b64  	%rd2902, %rd2901, %rd2900;
	shf.l.wrap.b32 	%r16104, %r16098, %r16099, 23;
	shf.l.wrap.b32 	%r16105, %r16099, %r16098, 23;
	mov.b64 	%rd2903, {%r16105, %r16104};
	xor.b64  	%rd2904, %rd2902, %rd2903;
	xor.b64  	%rd2905, %rd2861, %rd2834;
	and.b64  	%rd2906, %rd3071, %rd2905;
	xor.b64  	%rd2907, %rd2906, %rd2834;
	add.s64 	%rd2908, %rd2807, %rd3058;
	ld.const.u64 	%rd2909, [%rd2899];
	add.s64 	%rd2910, %rd2908, %rd2909;
	add.s64 	%rd2911, %rd2910, %rd2907;
	add.s64 	%rd2912, %rd2911, %rd2904;
	add.s64 	%rd3070, %rd2912, %rd2818;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16106,%dummy}, %rd3067;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16107}, %rd3067;
	}
	shf.r.wrap.b32 	%r16108, %r16107, %r16106, 28;
	shf.r.wrap.b32 	%r16109, %r16106, %r16107, 28;
	mov.b64 	%rd2913, {%r16109, %r16108};
	shf.l.wrap.b32 	%r16110, %r16106, %r16107, 30;
	shf.l.wrap.b32 	%r16111, %r16107, %r16106, 30;
	mov.b64 	%rd2914, {%r16111, %r16110};
	xor.b64  	%rd2915, %rd2914, %rd2913;
	shf.l.wrap.b32 	%r16112, %r16106, %r16107, 25;
	shf.l.wrap.b32 	%r16113, %r16107, %r16106, 25;
	mov.b64 	%rd2916, {%r16113, %r16112};
	xor.b64  	%rd2917, %rd2915, %rd2916;
	xor.b64  	%rd2918, %rd3067, %rd2845;
	xor.b64  	%rd2919, %rd3067, %rd2872;
	and.b64  	%rd2920, %rd2919, %rd2918;
	xor.b64  	%rd2921, %rd2920, %rd3067;
	add.s64 	%rd2922, %rd2912, %rd2921;
	add.s64 	%rd3066, %rd2922, %rd2917;
	add.s32 	%r16114, %r16317, 14;
	mul.wide.s32 	%rd2923, %r16114, 8;
	add.s64 	%rd2924, %rd2549, %rd2923;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16115,%dummy}, %rd3070;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16116}, %rd3070;
	}
	shf.r.wrap.b32 	%r16117, %r16116, %r16115, 14;
	shf.r.wrap.b32 	%r16118, %r16115, %r16116, 14;
	mov.b64 	%rd2925, {%r16118, %r16117};
	shf.r.wrap.b32 	%r16119, %r16116, %r16115, 18;
	shf.r.wrap.b32 	%r16120, %r16115, %r16116, 18;
	mov.b64 	%rd2926, {%r16120, %r16119};
	xor.b64  	%rd2927, %rd2926, %rd2925;
	shf.l.wrap.b32 	%r16121, %r16115, %r16116, 23;
	shf.l.wrap.b32 	%r16122, %r16116, %r16115, 23;
	mov.b64 	%rd2928, {%r16122, %r16121};
	xor.b64  	%rd2929, %rd2927, %rd2928;
	xor.b64  	%rd2930, %rd3071, %rd2861;
	and.b64  	%rd2931, %rd3070, %rd2930;
	xor.b64  	%rd2932, %rd2931, %rd2861;
	add.s64 	%rd2933, %rd2834, %rd3057;
	ld.const.u64 	%rd2934, [%rd2924];
	add.s64 	%rd2935, %rd2933, %rd2934;
	add.s64 	%rd2936, %rd2935, %rd2932;
	add.s64 	%rd2937, %rd2936, %rd2929;
	add.s64 	%rd3069, %rd2937, %rd2845;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16123,%dummy}, %rd3066;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16124}, %rd3066;
	}
	shf.r.wrap.b32 	%r16125, %r16124, %r16123, 28;
	shf.r.wrap.b32 	%r16126, %r16123, %r16124, 28;
	mov.b64 	%rd2938, {%r16126, %r16125};
	shf.l.wrap.b32 	%r16127, %r16123, %r16124, 30;
	shf.l.wrap.b32 	%r16128, %r16124, %r16123, 30;
	mov.b64 	%rd2939, {%r16128, %r16127};
	xor.b64  	%rd2940, %rd2939, %rd2938;
	shf.l.wrap.b32 	%r16129, %r16123, %r16124, 25;
	shf.l.wrap.b32 	%r16130, %r16124, %r16123, 25;
	mov.b64 	%rd2941, {%r16130, %r16129};
	xor.b64  	%rd2942, %rd2940, %rd2941;
	xor.b64  	%rd2943, %rd3066, %rd2872;
	xor.b64  	%rd2944, %rd3066, %rd3067;
	and.b64  	%rd2945, %rd2944, %rd2943;
	xor.b64  	%rd2946, %rd2945, %rd3066;
	add.s64 	%rd2947, %rd2937, %rd2946;
	add.s64 	%rd3065, %rd2947, %rd2942;
	add.s32 	%r16131, %r16317, 15;
	mul.wide.s32 	%rd2948, %r16131, 8;
	add.s64 	%rd2949, %rd2549, %rd2948;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16132,%dummy}, %rd3069;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16133}, %rd3069;
	}
	shf.r.wrap.b32 	%r16134, %r16133, %r16132, 14;
	shf.r.wrap.b32 	%r16135, %r16132, %r16133, 14;
	mov.b64 	%rd2950, {%r16135, %r16134};
	shf.r.wrap.b32 	%r16136, %r16133, %r16132, 18;
	shf.r.wrap.b32 	%r16137, %r16132, %r16133, 18;
	mov.b64 	%rd2951, {%r16137, %r16136};
	xor.b64  	%rd2952, %rd2951, %rd2950;
	shf.l.wrap.b32 	%r16138, %r16132, %r16133, 23;
	shf.l.wrap.b32 	%r16139, %r16133, %r16132, 23;
	mov.b64 	%rd2953, {%r16139, %r16138};
	xor.b64  	%rd2954, %rd2952, %rd2953;
	xor.b64  	%rd2955, %rd3070, %rd3071;
	and.b64  	%rd2956, %rd3069, %rd2955;
	xor.b64  	%rd2957, %rd2956, %rd3071;
	add.s64 	%rd2958, %rd2861, %rd3056;
	ld.const.u64 	%rd2959, [%rd2949];
	add.s64 	%rd2960, %rd2958, %rd2959;
	add.s64 	%rd2961, %rd2960, %rd2957;
	add.s64 	%rd2962, %rd2961, %rd2954;
	add.s64 	%rd3068, %rd2962, %rd2872;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r16140,%dummy}, %rd3065;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r16141}, %rd3065;
	}
	shf.r.wrap.b32 	%r16142, %r16141, %r16140, 28;
	shf.r.wrap.b32 	%r16143, %r16140, %r16141, 28;
	mov.b64 	%rd2963, {%r16143, %r16142};
	shf.l.wrap.b32 	%r16144, %r16140, %r16141, 30;
	shf.l.wrap.b32 	%r16145, %r16141, %r16140, 30;
	mov.b64 	%rd2964, {%r16145, %r16144};
	xor.b64  	%rd2965, %rd2964, %rd2963;
	shf.l.wrap.b32 	%r16146, %r16140, %r16141, 25;
	shf.l.wrap.b32 	%r16147, %r16141, %r16140, 25;
	mov.b64 	%rd2966, {%r16147, %r16146};
	xor.b64  	%rd2967, %rd2965, %rd2966;
	xor.b64  	%rd2968, %rd3065, %rd3067;
	xor.b64  	%rd2969, %rd3065, %rd3066;
	and.b64  	%rd2970, %rd2969, %rd2968;
	xor.b64  	%rd2971, %rd2970, %rd3065;
	add.s64 	%rd2972, %rd2962, %rd2971;
	add.s64 	%rd3064, %rd2972, %rd2967;
	add.s32 	%r16317, %r16317, 16;
	setp.lt.s32	%p447, %r16317, 80;
	@%p447 bra 	BB5_784;
	bra.uni 	BB5_785;

BB5_744:
	setp.eq.s32	%p416, %r9492, 23;
	mov.u32 	%r16286, %r16285;
	mov.u32 	%r16287, %r16285;
	mov.u32 	%r16288, %r16285;
	mov.u32 	%r16289, %r16285;
	mov.u32 	%r16290, %r16285;
	mov.u32 	%r16291, %r16285;
	mov.u32 	%r16292, %r16285;
	mov.u32 	%r16293, %r16285;
	mov.u32 	%r16294, %r16285;
	mov.u32 	%r16295, %r16285;
	mov.u32 	%r16296, %r16285;
	mov.u32 	%r16297, %r16285;
	mov.u32 	%r16298, %r16285;
	mov.u32 	%r16299, %r16285;
	mov.u32 	%r16300, %r16285;
	mov.u32 	%r16301, %r16285;
	mov.u32 	%r16302, %r16285;
	mov.u32 	%r16303, %r16285;
	mov.u32 	%r16304, %r16285;
	mov.u32 	%r16305, %r16285;
	mov.u32 	%r16306, %r16285;
	mov.u32 	%r16307, %r16285;
	mov.u32 	%r16308, %r16285;
	mov.u32 	%r16309, %r16285;
	mov.u32 	%r16310, %r16285;
	mov.u32 	%r16311, %r16285;
	mov.u32 	%r16312, %r16285;
	mov.u32 	%r16313, %r16285;
	mov.u32 	%r16314, %r16285;
	mov.u32 	%r16315, %r16285;
	mov.u32 	%r16316, %r16285;
	@%p416 bra 	BB5_745;
	bra.uni 	BB5_783;

BB5_745:
	mov.u32 	%r16283, 0;
	// inline asm
	prmt.b32 %r16305, %r16283, %r66, %r848;
	// inline asm
	ld.local.v2.u32 	{%r10997, %r10998}, [%rd8+8];
	// inline asm
	prmt.b32 %r16306, %r10998, %r10997, %r848;
	// inline asm
	ld.local.u32 	%r10864, [%rd8+8];
	ld.local.u32 	%r10865, [%rd8+4];
	// inline asm
	prmt.b32 %r16307, %r10864, %r10865, %r848;
	// inline asm
	ld.local.v2.u32 	{%r10999, %r11000}, [%rd8];
	// inline asm
	prmt.b32 %r16308, %r11000, %r10999, %r848;
	// inline asm
	ld.local.u32 	%r10872, [%rd8];
	ld.local.u32 	%r10873, [%rd7+12];
	// inline asm
	prmt.b32 %r16301, %r10872, %r10873, %r848;
	// inline asm
	ld.local.v2.u32 	{%r11001, %r11002}, [%rd7+8];
	// inline asm
	prmt.b32 %r16302, %r11002, %r11001, %r848;
	// inline asm
	ld.local.u32 	%r10880, [%rd7+8];
	ld.local.u32 	%r10881, [%rd7+4];
	// inline asm
	prmt.b32 %r16303, %r10880, %r10881, %r848;
	// inline asm
	ld.local.v2.u32 	{%r11003, %r11004}, [%rd7];
	// inline asm
	prmt.b32 %r16304, %r11004, %r11003, %r848;
	// inline asm
	ld.local.u32 	%r10888, [%rd7];
	ld.local.u32 	%r10889, [%rd6+12];
	// inline asm
	prmt.b32 %r16297, %r10888, %r10889, %r848;
	// inline asm
	ld.local.v2.u32 	{%r11005, %r11006}, [%rd6+8];
	// inline asm
	prmt.b32 %r16298, %r11006, %r11005, %r848;
	// inline asm
	ld.local.u32 	%r10896, [%rd6+8];
	ld.local.u32 	%r10897, [%rd6+4];
	// inline asm
	prmt.b32 %r16299, %r10896, %r10897, %r848;
	// inline asm
	ld.local.v2.u32 	{%r11007, %r11008}, [%rd6];
	// inline asm
	prmt.b32 %r16300, %r11008, %r11007, %r848;
	// inline asm
	ld.local.u32 	%r10904, [%rd6];
	ld.local.u32 	%r10905, [%rd5+12];
	// inline asm
	prmt.b32 %r16293, %r10904, %r10905, %r848;
	// inline asm
	ld.local.v2.u32 	{%r11009, %r11010}, [%rd5+8];
	// inline asm
	prmt.b32 %r16294, %r11010, %r11009, %r848;
	// inline asm
	ld.local.u32 	%r10912, [%rd5+8];
	ld.local.u32 	%r10913, [%rd5+4];
	// inline asm
	prmt.b32 %r16295, %r10912, %r10913, %r848;
	// inline asm
	ld.local.v2.u32 	{%r11011, %r11012}, [%rd5];
	// inline asm
	prmt.b32 %r16296, %r11012, %r11011, %r848;
	// inline asm
	ld.local.u32 	%r10920, [%rd5];
	ld.local.u32 	%r10921, [%rd4+12];
	// inline asm
	prmt.b32 %r16289, %r10920, %r10921, %r848;
	// inline asm
	ld.local.v2.u32 	{%r11013, %r11014}, [%rd4+8];
	// inline asm
	prmt.b32 %r16290, %r11014, %r11013, %r848;
	// inline asm
	ld.local.u32 	%r10928, [%rd4+8];
	ld.local.u32 	%r10929, [%rd4+4];
	// inline asm
	prmt.b32 %r16291, %r10928, %r10929, %r848;
	// inline asm
	ld.local.v2.u32 	{%r11015, %r11016}, [%rd4];
	// inline asm
	prmt.b32 %r16292, %r11016, %r11015, %r848;
	// inline asm
	ld.local.u32 	%r10936, [%rd4];
	ld.local.u32 	%r10937, [%rd3+12];
	// inline asm
	prmt.b32 %r16285, %r10936, %r10937, %r848;
	// inline asm
	ld.local.v2.u32 	{%r11017, %r11018}, [%rd3+8];
	// inline asm
	prmt.b32 %r16286, %r11018, %r11017, %r848;
	// inline asm
	ld.local.u32 	%r10944, [%rd3+8];
	ld.local.u32 	%r10945, [%rd3+4];
	// inline asm
	prmt.b32 %r16287, %r10944, %r10945, %r848;
	// inline asm
	ld.local.v2.u32 	{%r11019, %r11020}, [%rd3];
	// inline asm
	prmt.b32 %r16288, %r11020, %r11019, %r848;
	// inline asm
	ld.local.u32 	%r10952, [%rd3];
	ld.local.u32 	%r10953, [%rd2+12];
	// inline asm
	prmt.b32 %r10951, %r10952, %r10953, %r848;
	// inline asm
	st.local.u32 	[%rd8+12], %r10951;
	ld.local.v2.u32 	{%r11021, %r11022}, [%rd2+8];
	// inline asm
	prmt.b32 %r10955, %r11022, %r11021, %r848;
	// inline asm
	st.local.u32 	[%rd8+8], %r10955;
	ld.local.u32 	%r10960, [%rd2+8];
	ld.local.u32 	%r10961, [%rd2+4];
	// inline asm
	prmt.b32 %r10959, %r10960, %r10961, %r848;
	// inline asm
	st.local.u32 	[%rd8+4], %r10959;
	ld.local.v2.u32 	{%r11023, %r11024}, [%rd2];
	// inline asm
	prmt.b32 %r10963, %r11024, %r11023, %r848;
	// inline asm
	st.local.u32 	[%rd8], %r10963;
	ld.local.u32 	%r10968, [%rd2];
	ld.local.u32 	%r10969, [%rd1+12];
	// inline asm
	prmt.b32 %r10967, %r10968, %r10969, %r848;
	// inline asm
	st.local.u32 	[%rd7+12], %r10967;
	ld.local.v2.u32 	{%r11025, %r11026}, [%rd1+8];
	// inline asm
	prmt.b32 %r10971, %r11026, %r11025, %r848;
	// inline asm
	st.local.u32 	[%rd7+8], %r10971;
	ld.local.u32 	%r10976, [%rd1+8];
	ld.local.u32 	%r10977, [%rd1+4];
	// inline asm
	prmt.b32 %r10975, %r10976, %r10977, %r848;
	// inline asm
	st.local.u32 	[%rd7+4], %r10975;
	ld.local.v2.u32 	{%r11027, %r11028}, [%rd1];
	// inline asm
	prmt.b32 %r10979, %r11028, %r11027, %r848;
	// inline asm
	st.local.u32 	[%rd7], %r10979;
	ld.local.u32 	%r10984, [%rd1];
	// inline asm
	prmt.b32 %r10983, %r10984, %r16283, %r848;
	// inline asm
	st.local.v4.u32 	[%rd6], {%r16283, %r16283, %r16283, %r10983};
	st.local.v4.u32 	[%rd5], {%r16283, %r16283, %r16283, %r16283};
	st.local.v4.u32 	[%rd4], {%r16283, %r16283, %r16283, %r16283};
	st.local.v4.u32 	[%rd3], {%r16283, %r16283, %r16283, %r16283};
	st.local.v4.u32 	[%rd2], {%r16283, %r16283, %r16283, %r16283};
	st.local.v2.u32 	[%rd1+8], {%r16283, %r16283};
	mov.u64 	%rd1956, 0;
	st.local.u64 	[%rd1], %rd1956;
	mov.u32 	%r16284, %r16283;
	bra.uni 	BB5_779;

BB5_728:
	setp.eq.s32	%p428, %r9492, 15;
	mov.u32 	%r16286, %r16285;
	mov.u32 	%r16287, %r16285;
	mov.u32 	%r16288, %r16285;
	mov.u32 	%r16289, %r16285;
	mov.u32 	%r16290, %r16285;
	mov.u32 	%r16291, %r16285;
	mov.u32 	%r16292, %r16285;
	mov.u32 	%r16293, %r16285;
	mov.u32 	%r16294, %r16285;
	mov.u32 	%r16295, %r16285;
	mov.u32 	%r16296, %r16285;
	mov.u32 	%r16297, %r16285;
	mov.u32 	%r16298, %r16285;
	mov.u32 	%r16299, %r16285;
	mov.u32 	%r16300, %r16285;
	mov.u32 	%r16301, %r16285;
	mov.u32 	%r16302, %r16285;
	mov.u32 	%r16303, %r16285;
	mov.u32 	%r16304, %r16285;
	mov.u32 	%r16305, %r16285;
	mov.u32 	%r16306, %r16285;
	mov.u32 	%r16307, %r16285;
	mov.u32 	%r16308, %r16285;
	mov.u32 	%r16309, %r16285;
	mov.u32 	%r16310, %r16285;
	mov.u32 	%r16311, %r16285;
	mov.u32 	%r16312, %r16285;
	mov.u32 	%r16313, %r16285;
	mov.u32 	%r16314, %r16285;
	mov.u32 	%r16315, %r16285;
	mov.u32 	%r16316, %r16285;
	@%p428 bra 	BB5_729;
	bra.uni 	BB5_783;

BB5_729:
	mov.u32 	%r16283, 0;
	// inline asm
	prmt.b32 %r16297, %r16283, %r66, %r848;
	// inline asm
	ld.local.v2.u32 	{%r12425, %r12426}, [%rd8+8];
	// inline asm
	prmt.b32 %r16298, %r12426, %r12425, %r848;
	// inline asm
	ld.local.u32 	%r12284, [%rd8+8];
	ld.local.u32 	%r12285, [%rd8+4];
	// inline asm
	prmt.b32 %r16299, %r12284, %r12285, %r848;
	// inline asm
	ld.local.v2.u32 	{%r12427, %r12428}, [%rd8];
	// inline asm
	prmt.b32 %r16300, %r12428, %r12427, %r848;
	// inline asm
	ld.local.u32 	%r12292, [%rd8];
	ld.local.u32 	%r12293, [%rd7+12];
	// inline asm
	prmt.b32 %r16293, %r12292, %r12293, %r848;
	// inline asm
	ld.local.v2.u32 	{%r12429, %r12430}, [%rd7+8];
	// inline asm
	prmt.b32 %r16294, %r12430, %r12429, %r848;
	// inline asm
	ld.local.u32 	%r12300, [%rd7+8];
	ld.local.u32 	%r12301, [%rd7+4];
	// inline asm
	prmt.b32 %r16295, %r12300, %r12301, %r848;
	// inline asm
	ld.local.v2.u32 	{%r12431, %r12432}, [%rd7];
	// inline asm
	prmt.b32 %r16296, %r12432, %r12431, %r848;
	// inline asm
	ld.local.u32 	%r12308, [%rd7];
	ld.local.u32 	%r12309, [%rd6+12];
	// inline asm
	prmt.b32 %r16289, %r12308, %r12309, %r848;
	// inline asm
	ld.local.v2.u32 	{%r12433, %r12434}, [%rd6+8];
	// inline asm
	prmt.b32 %r16290, %r12434, %r12433, %r848;
	// inline asm
	ld.local.u32 	%r12316, [%rd6+8];
	ld.local.u32 	%r12317, [%rd6+4];
	// inline asm
	prmt.b32 %r16291, %r12316, %r12317, %r848;
	// inline asm
	ld.local.v2.u32 	{%r12435, %r12436}, [%rd6];
	// inline asm
	prmt.b32 %r16292, %r12436, %r12435, %r848;
	// inline asm
	ld.local.u32 	%r12324, [%rd6];
	ld.local.u32 	%r12325, [%rd5+12];
	// inline asm
	prmt.b32 %r16285, %r12324, %r12325, %r848;
	// inline asm
	ld.local.v2.u32 	{%r12437, %r12438}, [%rd5+8];
	// inline asm
	prmt.b32 %r16286, %r12438, %r12437, %r848;
	// inline asm
	ld.local.u32 	%r12332, [%rd5+8];
	ld.local.u32 	%r12333, [%rd5+4];
	// inline asm
	prmt.b32 %r16287, %r12332, %r12333, %r848;
	// inline asm
	ld.local.v2.u32 	{%r12439, %r12440}, [%rd5];
	// inline asm
	prmt.b32 %r16288, %r12440, %r12439, %r848;
	// inline asm
	ld.local.u32 	%r12340, [%rd5];
	ld.local.u32 	%r12341, [%rd4+12];
	// inline asm
	prmt.b32 %r12339, %r12340, %r12341, %r848;
	// inline asm
	st.local.u32 	[%rd8+12], %r12339;
	ld.local.v2.u32 	{%r12441, %r12442}, [%rd4+8];
	// inline asm
	prmt.b32 %r12343, %r12442, %r12441, %r848;
	// inline asm
	st.local.u32 	[%rd8+8], %r12343;
	ld.local.u32 	%r12348, [%rd4+8];
	ld.local.u32 	%r12349, [%rd4+4];
	// inline asm
	prmt.b32 %r12347, %r12348, %r12349, %r848;
	// inline asm
	st.local.u32 	[%rd8+4], %r12347;
	ld.local.v2.u32 	{%r12443, %r12444}, [%rd4];
	// inline asm
	prmt.b32 %r12351, %r12444, %r12443, %r848;
	// inline asm
	st.local.u32 	[%rd8], %r12351;
	ld.local.u32 	%r12356, [%rd4];
	ld.local.u32 	%r12357, [%rd3+12];
	// inline asm
	prmt.b32 %r12355, %r12356, %r12357, %r848;
	// inline asm
	st.local.u32 	[%rd7+12], %r12355;
	ld.local.v2.u32 	{%r12445, %r12446}, [%rd3+8];
	// inline asm
	prmt.b32 %r12359, %r12446, %r12445, %r848;
	// inline asm
	st.local.u32 	[%rd7+8], %r12359;
	ld.local.u32 	%r12364, [%rd3+8];
	ld.local.u32 	%r12365, [%rd3+4];
	// inline asm
	prmt.b32 %r12363, %r12364, %r12365, %r848;
	// inline asm
	st.local.u32 	[%rd7+4], %r12363;
	ld.local.v2.u32 	{%r12447, %r12448}, [%rd3];
	// inline asm
	prmt.b32 %r12367, %r12448, %r12447, %r848;
	// inline asm
	st.local.u32 	[%rd7], %r12367;
	ld.local.u32 	%r12372, [%rd3];
	ld.local.u32 	%r12373, [%rd2+12];
	// inline asm
	prmt.b32 %r12371, %r12372, %r12373, %r848;
	// inline asm
	st.local.u32 	[%rd6+12], %r12371;
	ld.local.v2.u32 	{%r12449, %r12450}, [%rd2+8];
	// inline asm
	prmt.b32 %r12375, %r12450, %r12449, %r848;
	// inline asm
	st.local.u32 	[%rd6+8], %r12375;
	ld.local.u32 	%r12380, [%rd2+8];
	ld.local.u32 	%r12381, [%rd2+4];
	// inline asm
	prmt.b32 %r12379, %r12380, %r12381, %r848;
	// inline asm
	st.local.u32 	[%rd6+4], %r12379;
	ld.local.v2.u32 	{%r12451, %r12452}, [%rd2];
	// inline asm
	prmt.b32 %r12383, %r12452, %r12451, %r848;
	// inline asm
	st.local.u32 	[%rd6], %r12383;
	ld.local.u32 	%r12388, [%rd2];
	ld.local.u32 	%r12389, [%rd1+12];
	// inline asm
	prmt.b32 %r12387, %r12388, %r12389, %r848;
	// inline asm
	st.local.u32 	[%rd5+12], %r12387;
	ld.local.v2.u32 	{%r12453, %r12454}, [%rd1+8];
	// inline asm
	prmt.b32 %r12391, %r12454, %r12453, %r848;
	// inline asm
	st.local.u32 	[%rd5+8], %r12391;
	ld.local.u32 	%r12396, [%rd1+8];
	ld.local.u32 	%r12397, [%rd1+4];
	// inline asm
	prmt.b32 %r12395, %r12396, %r12397, %r848;
	// inline asm
	st.local.u32 	[%rd5+4], %r12395;
	ld.local.v2.u32 	{%r12455, %r12456}, [%rd1];
	// inline asm
	prmt.b32 %r12399, %r12456, %r12455, %r848;
	// inline asm
	st.local.u32 	[%rd5], %r12399;
	ld.local.u32 	%r12404, [%rd1];
	// inline asm
	prmt.b32 %r12403, %r12404, %r16283, %r848;
	// inline asm
	st.local.v4.u32 	[%rd4], {%r16283, %r16283, %r16283, %r12403};
	st.local.v4.u32 	[%rd3], {%r16283, %r16283, %r16283, %r16283};
	st.local.v4.u32 	[%rd2], {%r16283, %r16283, %r16283, %r16283};
	st.local.v2.u32 	[%rd1+8], {%r16283, %r16283};
	mov.u64 	%rd1964, 0;
	st.local.u64 	[%rd1], %rd1964;
	mov.u32 	%r16284, %r16283;
	bra.uni 	BB5_777;

BB5_759:
	setp.ne.s32	%p405, %r9492, 31;
	mov.u32 	%r16286, %r16285;
	mov.u32 	%r16287, %r16285;
	mov.u32 	%r16288, %r16285;
	mov.u32 	%r16289, %r16285;
	mov.u32 	%r16290, %r16285;
	mov.u32 	%r16291, %r16285;
	mov.u32 	%r16292, %r16285;
	mov.u32 	%r16293, %r16285;
	mov.u32 	%r16294, %r16285;
	mov.u32 	%r16295, %r16285;
	mov.u32 	%r16296, %r16285;
	mov.u32 	%r16297, %r16285;
	mov.u32 	%r16298, %r16285;
	mov.u32 	%r16299, %r16285;
	mov.u32 	%r16300, %r16285;
	mov.u32 	%r16301, %r16285;
	mov.u32 	%r16302, %r16285;
	mov.u32 	%r16303, %r16285;
	mov.u32 	%r16304, %r16285;
	mov.u32 	%r16305, %r16285;
	mov.u32 	%r16306, %r16285;
	mov.u32 	%r16307, %r16285;
	mov.u32 	%r16308, %r16285;
	mov.u32 	%r16309, %r16285;
	mov.u32 	%r16310, %r16285;
	mov.u32 	%r16311, %r16285;
	mov.u32 	%r16312, %r16285;
	mov.u32 	%r16313, %r16285;
	mov.u32 	%r16314, %r16285;
	mov.u32 	%r16315, %r16285;
	mov.u32 	%r16316, %r16285;
	@%p405 bra 	BB5_783;

	mov.u32 	%r16283, 0;
	// inline asm
	prmt.b32 %r16313, %r16283, %r66, %r848;
	// inline asm
	ld.local.v2.u32 	{%r9633, %r9634}, [%rd8+8];
	// inline asm
	prmt.b32 %r16314, %r9634, %r9633, %r848;
	// inline asm
	ld.local.u32 	%r9508, [%rd8+8];
	ld.local.u32 	%r9509, [%rd8+4];
	// inline asm
	prmt.b32 %r16315, %r9508, %r9509, %r848;
	// inline asm
	ld.local.v2.u32 	{%r9635, %r9636}, [%rd8];
	// inline asm
	prmt.b32 %r16316, %r9636, %r9635, %r848;
	// inline asm
	ld.local.u32 	%r9516, [%rd8];
	ld.local.u32 	%r9517, [%rd7+12];
	// inline asm
	prmt.b32 %r16309, %r9516, %r9517, %r848;
	// inline asm
	ld.local.v2.u32 	{%r9637, %r9638}, [%rd7+8];
	// inline asm
	prmt.b32 %r16310, %r9638, %r9637, %r848;
	// inline asm
	ld.local.u32 	%r9524, [%rd7+8];
	ld.local.u32 	%r9525, [%rd7+4];
	// inline asm
	prmt.b32 %r16311, %r9524, %r9525, %r848;
	// inline asm
	ld.local.v2.u32 	{%r9639, %r9640}, [%rd7];
	// inline asm
	prmt.b32 %r16312, %r9640, %r9639, %r848;
	// inline asm
	ld.local.u32 	%r9532, [%rd7];
	ld.local.u32 	%r9533, [%rd6+12];
	// inline asm
	prmt.b32 %r16305, %r9532, %r9533, %r848;
	// inline asm
	ld.local.v2.u32 	{%r9641, %r9642}, [%rd6+8];
	// inline asm
	prmt.b32 %r16306, %r9642, %r9641, %r848;
	// inline asm
	ld.local.u32 	%r9540, [%rd6+8];
	ld.local.u32 	%r9541, [%rd6+4];
	// inline asm
	prmt.b32 %r16307, %r9540, %r9541, %r848;
	// inline asm
	ld.local.v2.u32 	{%r9643, %r9644}, [%rd6];
	// inline asm
	prmt.b32 %r16308, %r9644, %r9643, %r848;
	// inline asm
	ld.local.u32 	%r9548, [%rd6];
	ld.local.u32 	%r9549, [%rd5+12];
	// inline asm
	prmt.b32 %r16301, %r9548, %r9549, %r848;
	// inline asm
	ld.local.v2.u32 	{%r9645, %r9646}, [%rd5+8];
	// inline asm
	prmt.b32 %r16302, %r9646, %r9645, %r848;
	// inline asm
	ld.local.u32 	%r9556, [%rd5+8];
	ld.local.u32 	%r9557, [%rd5+4];
	// inline asm
	prmt.b32 %r16303, %r9556, %r9557, %r848;
	// inline asm
	ld.local.v2.u32 	{%r9647, %r9648}, [%rd5];
	// inline asm
	prmt.b32 %r16304, %r9648, %r9647, %r848;
	// inline asm
	ld.local.u32 	%r9564, [%rd5];
	ld.local.u32 	%r9565, [%rd4+12];
	// inline asm
	prmt.b32 %r16297, %r9564, %r9565, %r848;
	// inline asm
	ld.local.v2.u32 	{%r9649, %r9650}, [%rd4+8];
	// inline asm
	prmt.b32 %r16298, %r9650, %r9649, %r848;
	// inline asm
	ld.local.u32 	%r9572, [%rd4+8];
	ld.local.u32 	%r9573, [%rd4+4];
	// inline asm
	prmt.b32 %r16299, %r9572, %r9573, %r848;
	// inline asm
	ld.local.v2.u32 	{%r9651, %r9652}, [%rd4];
	// inline asm
	prmt.b32 %r16300, %r9652, %r9651, %r848;
	// inline asm
	ld.local.u32 	%r9580, [%rd4];
	ld.local.u32 	%r9581, [%rd3+12];
	// inline asm
	prmt.b32 %r16293, %r9580, %r9581, %r848;
	// inline asm
	ld.local.v2.u32 	{%r9653, %r9654}, [%rd3+8];
	// inline asm
	prmt.b32 %r16294, %r9654, %r9653, %r848;
	// inline asm
	ld.local.u32 	%r9588, [%rd3+8];
	ld.local.u32 	%r9589, [%rd3+4];
	// inline asm
	prmt.b32 %r16295, %r9588, %r9589, %r848;
	// inline asm
	ld.local.v2.u32 	{%r9655, %r9656}, [%rd3];
	// inline asm
	prmt.b32 %r16296, %r9656, %r9655, %r848;
	// inline asm
	ld.local.u32 	%r9596, [%rd3];
	ld.local.u32 	%r9597, [%rd2+12];
	// inline asm
	prmt.b32 %r16289, %r9596, %r9597, %r848;
	// inline asm
	ld.local.v2.u32 	{%r9657, %r9658}, [%rd2+8];
	// inline asm
	prmt.b32 %r16290, %r9658, %r9657, %r848;
	// inline asm
	ld.local.u32 	%r9604, [%rd2+8];
	ld.local.u32 	%r9605, [%rd2+4];
	// inline asm
	prmt.b32 %r16291, %r9604, %r9605, %r848;
	// inline asm
	ld.local.v2.u32 	{%r9659, %r9660}, [%rd2];
	// inline asm
	prmt.b32 %r16292, %r9660, %r9659, %r848;
	// inline asm
	ld.local.u32 	%r9612, [%rd2];
	ld.local.u32 	%r9613, [%rd1+12];
	// inline asm
	prmt.b32 %r16285, %r9612, %r9613, %r848;
	// inline asm
	ld.local.v2.u32 	{%r9661, %r9662}, [%rd1+8];
	// inline asm
	prmt.b32 %r16286, %r9662, %r9661, %r848;
	// inline asm
	ld.local.u32 	%r9620, [%rd1+8];
	ld.local.u32 	%r9621, [%rd1+4];
	// inline asm
	prmt.b32 %r16287, %r9620, %r9621, %r848;
	// inline asm
	ld.local.v2.u32 	{%r9663, %r9664}, [%rd1];
	// inline asm
	prmt.b32 %r16288, %r9664, %r9663, %r848;
	// inline asm
	ld.local.u32 	%r9628, [%rd1];
	// inline asm
	prmt.b32 %r9627, %r9628, %r16283, %r848;
	// inline asm
	st.local.v4.u32 	[%rd8], {%r16283, %r16283, %r16283, %r9627};
	st.local.v4.u32 	[%rd7], {%r16283, %r16283, %r16283, %r16283};
	st.local.v4.u32 	[%rd6], {%r16283, %r16283, %r16283, %r16283};
	st.local.v4.u32 	[%rd5], {%r16283, %r16283, %r16283, %r16283};
	st.local.v4.u32 	[%rd4], {%r16283, %r16283, %r16283, %r16283};
	st.local.v4.u32 	[%rd3], {%r16283, %r16283, %r16283, %r16283};
	st.local.v4.u32 	[%rd2], {%r16283, %r16283, %r16283, %r16283};
	st.local.v2.u32 	[%rd1+8], {%r16283, %r16283};
	mov.u64 	%rd1948, 0;
	st.local.u64 	[%rd1], %rd1948;
	mov.u32 	%r16284, %r16283;
	bra.uni 	BB5_783;

BB5_46:
	add.u64 	%rd2990, %SP, 112;
	add.u64 	%rd2989, %SP, 96;
	add.u64 	%rd2988, %SP, 80;
	add.u64 	%rd2987, %SP, 64;
	add.u64 	%rd2986, %SP, 48;
	add.u64 	%rd2985, %SP, 32;
	add.u64 	%rd2984, %SP, 16;
	add.u64 	%rd2983, %SP, 0;
	sub.s32 	%r1583, %r144, %r16186;
	// Callseq Start 38
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd388;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd2983;
	.param .b64 param2;
	st.param.b64	[param2+0], %rd2984;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd2985;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd2986;
	.param .b64 param5;
	st.param.b64	[param5+0], %rd2987;
	.param .b64 param6;
	st.param.b64	[param6+0], %rd2988;
	.param .b64 param7;
	st.param.b64	[param7+0], %rd2989;
	.param .b64 param8;
	st.param.b64	[param8+0], %rd2990;
	.param .b32 param9;
	st.param.b32	[param9+0], %r1583;
	call.uni 
	sha512_update_128, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7, 
	param8, 
	param9
	);
	
	//{
	}// Callseq End 38
	mov.u32 	%r16188, 0;
	mov.u32 	%r16189, %r16188;
	bra.uni 	BB5_47;

BB5_696:
	add.s64 	%rd1938, %rd143, %rd3040;
	st.local.u64 	[%rd389], %rd1938;
	add.s64 	%rd1939, %rd145, %rd3041;
	st.local.u64 	[%rd21], %rd1939;
	add.s64 	%rd1940, %rd144, %rd3042;
	st.local.u64 	[%rd22], %rd1940;
	add.s64 	%rd1941, %rd142, %rd3043;
	st.local.u64 	[%rd23], %rd1941;
	add.s64 	%rd1942, %rd138, %rd3044;
	st.local.u64 	[%rd24], %rd1942;
	add.s64 	%rd1943, %rd140, %rd3045;
	st.local.u64 	[%rd25], %rd1943;
	add.s64 	%rd1944, %rd139, %rd3046;
	st.local.u64 	[%rd26], %rd1944;
	add.s64 	%rd1945, %rd141, %rd3047;
	st.local.u64 	[%rd27], %rd1945;
	st.local.u32 	[%rd28], %r16253;
	st.local.u32 	[%rd29], %r16252;
	st.local.u32 	[%rd30], %r16251;
	st.local.u32 	[%rd389+76], %r16250;
	st.local.v2.u32 	[%rd389+80], {%r16257, %r16256};
	st.local.v2.u32 	[%rd389+88], {%r16255, %r16254};
	st.local.v2.u32 	[%rd389+96], {%r16261, %r16260};
	st.local.u32 	[%rd31], %r16259;
	st.local.u32 	[%rd32], %r16258;
	st.local.u32 	[%rd33], %r16265;
	st.local.u32 	[%rd34], %r16264;
	st.local.u32 	[%rd35], %r16263;
	st.local.u32 	[%rd36], %r16262;
	st.local.u32 	[%rd37], %r16269;
	st.local.u32 	[%rd38], %r16268;
	st.local.u32 	[%rd39], %r16267;
	st.local.u32 	[%rd40], %r16266;
	st.local.u32 	[%rd41], %r16273;
	st.local.u32 	[%rd42], %r16272;
	st.local.u32 	[%rd43], %r16271;
	st.local.u32 	[%rd44], %r16270;
	st.local.u32 	[%rd45], %r16277;
	st.local.u32 	[%rd46], %r16276;
	st.local.u32 	[%rd47], %r16275;
	st.local.u32 	[%rd48], %r16274;
	st.local.u32 	[%rd49], %r16281;
	st.local.u32 	[%rd50], %r16280;
	st.local.u32 	[%rd51], %r16279;
	st.local.u32 	[%rd52], %r16278;
	add.s32 	%r16188, %r16188, 128;
	add.s32 	%r16189, %r16189, 32;

BB5_47:
	add.s32 	%r1584, %r229, -128;
	setp.lt.s32	%p31, %r16188, %r1584;
	mul.wide.s32 	%rd488, %r16189, 4;
	add.s64 	%rd489, %rd10, %rd488;
	ld.local.u32 	%r16249, [%rd489];
	st.local.u32 	[%rd1], %r16249;
	add.s32 	%r1585, %r16189, 1;
	mul.wide.s32 	%rd490, %r1585, 4;
	add.s64 	%rd491, %rd10, %rd490;
	ld.local.u32 	%r16248, [%rd491];
	st.local.u32 	[%rd1+4], %r16248;
	add.s32 	%r1586, %r16189, 2;
	mul.wide.s32 	%rd492, %r1586, 4;
	add.s64 	%rd493, %rd10, %rd492;
	ld.local.u32 	%r1587, [%rd493];
	st.local.u32 	[%rd1+8], %r1587;
	add.s32 	%r1588, %r16189, 3;
	mul.wide.s32 	%rd494, %r1588, 4;
	add.s64 	%rd495, %rd10, %rd494;
	ld.local.u32 	%r1589, [%rd495];
	st.local.u32 	[%rd1+12], %r1589;
	add.s32 	%r1590, %r16189, 4;
	mul.wide.s32 	%rd496, %r1590, 4;
	add.s64 	%rd497, %rd10, %rd496;
	ld.local.u32 	%r1591, [%rd497];
	st.local.u32 	[%rd2], %r1591;
	add.s32 	%r1592, %r16189, 5;
	mul.wide.s32 	%rd498, %r1592, 4;
	add.s64 	%rd499, %rd10, %rd498;
	ld.local.u32 	%r1593, [%rd499];
	st.local.u32 	[%rd2+4], %r1593;
	add.s32 	%r1594, %r16189, 6;
	mul.wide.s32 	%rd500, %r1594, 4;
	add.s64 	%rd501, %rd10, %rd500;
	ld.local.u32 	%r1595, [%rd501];
	st.local.u32 	[%rd2+8], %r1595;
	add.s32 	%r1596, %r16189, 7;
	mul.wide.s32 	%rd502, %r1596, 4;
	add.s64 	%rd503, %rd10, %rd502;
	ld.local.u32 	%r1597, [%rd503];
	st.local.u32 	[%rd2+12], %r1597;
	add.s32 	%r1598, %r16189, 8;
	mul.wide.s32 	%rd504, %r1598, 4;
	add.s64 	%rd505, %rd10, %rd504;
	ld.local.u32 	%r1599, [%rd505];
	st.local.u32 	[%rd3], %r1599;
	add.s32 	%r1600, %r16189, 9;
	mul.wide.s32 	%rd506, %r1600, 4;
	add.s64 	%rd507, %rd10, %rd506;
	ld.local.u32 	%r1601, [%rd507];
	st.local.u32 	[%rd3+4], %r1601;
	add.s32 	%r1602, %r16189, 10;
	mul.wide.s32 	%rd508, %r1602, 4;
	add.s64 	%rd509, %rd10, %rd508;
	ld.local.u32 	%r1603, [%rd509];
	st.local.u32 	[%rd3+8], %r1603;
	add.s32 	%r1604, %r16189, 11;
	mul.wide.s32 	%rd510, %r1604, 4;
	add.s64 	%rd511, %rd10, %rd510;
	ld.local.u32 	%r1605, [%rd511];
	st.local.u32 	[%rd3+12], %r1605;
	add.s32 	%r1606, %r16189, 12;
	mul.wide.s32 	%rd512, %r1606, 4;
	add.s64 	%rd513, %rd10, %rd512;
	ld.local.u32 	%r1607, [%rd513];
	st.local.u32 	[%rd4], %r1607;
	add.s32 	%r1608, %r16189, 13;
	mul.wide.s32 	%rd514, %r1608, 4;
	add.s64 	%rd515, %rd10, %rd514;
	ld.local.u32 	%r1609, [%rd515];
	st.local.u32 	[%rd4+4], %r1609;
	add.s32 	%r1610, %r16189, 14;
	mul.wide.s32 	%rd516, %r1610, 4;
	add.s64 	%rd517, %rd10, %rd516;
	ld.local.u32 	%r1611, [%rd517];
	st.local.u32 	[%rd4+8], %r1611;
	add.s32 	%r1612, %r16189, 15;
	mul.wide.s32 	%rd518, %r1612, 4;
	add.s64 	%rd519, %rd10, %rd518;
	ld.local.u32 	%r1613, [%rd519];
	st.local.u32 	[%rd4+12], %r1613;
	add.s32 	%r1614, %r16189, 16;
	mul.wide.s32 	%rd520, %r1614, 4;
	add.s64 	%rd521, %rd10, %rd520;
	ld.local.u32 	%r1615, [%rd521];
	st.local.u32 	[%rd5], %r1615;
	add.s32 	%r1616, %r16189, 17;
	mul.wide.s32 	%rd522, %r1616, 4;
	add.s64 	%rd523, %rd10, %rd522;
	ld.local.u32 	%r1617, [%rd523];
	st.local.u32 	[%rd5+4], %r1617;
	add.s32 	%r1618, %r16189, 18;
	mul.wide.s32 	%rd524, %r1618, 4;
	add.s64 	%rd525, %rd10, %rd524;
	ld.local.u32 	%r1619, [%rd525];
	st.local.u32 	[%rd5+8], %r1619;
	add.s32 	%r1620, %r16189, 19;
	mul.wide.s32 	%rd526, %r1620, 4;
	add.s64 	%rd527, %rd10, %rd526;
	ld.local.u32 	%r1621, [%rd527];
	st.local.u32 	[%rd5+12], %r1621;
	add.s32 	%r1622, %r16189, 20;
	mul.wide.s32 	%rd528, %r1622, 4;
	add.s64 	%rd529, %rd10, %rd528;
	ld.local.u32 	%r1623, [%rd529];
	st.local.u32 	[%rd6], %r1623;
	add.s32 	%r1624, %r16189, 21;
	mul.wide.s32 	%rd530, %r1624, 4;
	add.s64 	%rd531, %rd10, %rd530;
	ld.local.u32 	%r1625, [%rd531];
	st.local.u32 	[%rd6+4], %r1625;
	add.s32 	%r1626, %r16189, 22;
	mul.wide.s32 	%rd532, %r1626, 4;
	add.s64 	%rd533, %rd10, %rd532;
	ld.local.u32 	%r1627, [%rd533];
	st.local.u32 	[%rd6+8], %r1627;
	add.s32 	%r1628, %r16189, 23;
	mul.wide.s32 	%rd534, %r1628, 4;
	add.s64 	%rd535, %rd10, %rd534;
	ld.local.u32 	%r1629, [%rd535];
	st.local.u32 	[%rd6+12], %r1629;
	add.s32 	%r1630, %r16189, 24;
	mul.wide.s32 	%rd536, %r1630, 4;
	add.s64 	%rd537, %rd10, %rd536;
	ld.local.u32 	%r1631, [%rd537];
	st.local.u32 	[%rd7], %r1631;
	add.s32 	%r1632, %r16189, 25;
	mul.wide.s32 	%rd538, %r1632, 4;
	add.s64 	%rd539, %rd10, %rd538;
	ld.local.u32 	%r1633, [%rd539];
	st.local.u32 	[%rd7+4], %r1633;
	add.s32 	%r1634, %r16189, 26;
	mul.wide.s32 	%rd540, %r1634, 4;
	add.s64 	%rd541, %rd10, %rd540;
	ld.local.u32 	%r1635, [%rd541];
	st.local.u32 	[%rd7+8], %r1635;
	add.s32 	%r1636, %r16189, 27;
	mul.wide.s32 	%rd542, %r1636, 4;
	add.s64 	%rd543, %rd10, %rd542;
	ld.local.u32 	%r1637, [%rd543];
	st.local.u32 	[%rd7+12], %r1637;
	add.s32 	%r1638, %r16189, 28;
	mul.wide.s32 	%rd544, %r1638, 4;
	add.s64 	%rd545, %rd10, %rd544;
	ld.local.u32 	%r1639, [%rd545];
	st.local.u32 	[%rd8], %r1639;
	add.s32 	%r1640, %r16189, 29;
	mul.wide.s32 	%rd546, %r1640, 4;
	add.s64 	%rd547, %rd10, %rd546;
	ld.local.u32 	%r1641, [%rd547];
	st.local.u32 	[%rd8+4], %r1641;
	add.s32 	%r1642, %r16189, 30;
	mul.wide.s32 	%rd548, %r1642, 4;
	add.s64 	%rd549, %rd10, %rd548;
	ld.local.u32 	%r1643, [%rd549];
	st.local.u32 	[%rd8+8], %r1643;
	add.s32 	%r1644, %r16189, 31;
	mul.wide.s32 	%rd550, %r1644, 4;
	add.s64 	%rd551, %rd10, %rd550;
	ld.local.u32 	%r71, [%rd551];
	st.local.u32 	[%rd8+12], %r71;
	@%p31 bra 	BB5_608;
	bra.uni 	BB5_48;

BB5_608:
	ld.local.u32 	%r2805, [%rd389+192];
	add.s32 	%r2806, %r2805, 128;
	st.local.u32 	[%rd389+192], %r2806;
	bfe.u32 	%r2804, %r2805, 2, 5;
	and.b32  	%r2807, %r2805, 3;
	shl.b32 	%r2808, %r2807, 2;
	mov.u32 	%r2809, 1985229328;
	shr.u32 	%r2810, %r2809, %r2808;
	and.b32  	%r278, %r2810, 65535;
	mov.u32 	%r16250, 0;
	setp.gt.s32	%p352, %r2804, 15;
	@%p352 bra 	BB5_641;

	setp.gt.s32	%p376, %r2804, 7;
	@%p376 bra 	BB5_626;

	setp.gt.s32	%p388, %r2804, 3;
	@%p388 bra 	BB5_619;

	setp.gt.s32	%p394, %r2804, 1;
	@%p394 bra 	BB5_615;

	setp.eq.s32	%p397, %r2804, 0;
	@%p397 bra 	BB5_693;
	bra.uni 	BB5_613;

BB5_693:
	mov.u32 	%r16250, 0;
	// inline asm
	prmt.b32 %r16253, %r16250, %r71, %r278;
	// inline asm
	ld.local.v2.u32 	{%r8584, %r8585}, [%rd8+8];
	// inline asm
	prmt.b32 %r8425, %r8585, %r8584, %r278;
	// inline asm
	st.local.u32 	[%rd8+12], %r8425;
	ld.local.u32 	%r8430, [%rd8+8];
	ld.local.u32 	%r8431, [%rd8+4];
	// inline asm
	prmt.b32 %r8429, %r8430, %r8431, %r278;
	// inline asm
	st.local.u32 	[%rd8+8], %r8429;
	ld.local.v2.u32 	{%r8586, %r8587}, [%rd8];
	// inline asm
	prmt.b32 %r8433, %r8587, %r8586, %r278;
	// inline asm
	st.local.u32 	[%rd8+4], %r8433;
	ld.local.u32 	%r8438, [%rd8];
	ld.local.u32 	%r8439, [%rd7+12];
	// inline asm
	prmt.b32 %r8437, %r8438, %r8439, %r278;
	// inline asm
	st.local.u32 	[%rd8], %r8437;
	ld.local.v2.u32 	{%r8588, %r8589}, [%rd7+8];
	// inline asm
	prmt.b32 %r8441, %r8589, %r8588, %r278;
	// inline asm
	st.local.u32 	[%rd7+12], %r8441;
	ld.local.u32 	%r8446, [%rd7+8];
	ld.local.u32 	%r8447, [%rd7+4];
	// inline asm
	prmt.b32 %r8445, %r8446, %r8447, %r278;
	// inline asm
	st.local.u32 	[%rd7+8], %r8445;
	ld.local.v2.u32 	{%r8590, %r8591}, [%rd7];
	// inline asm
	prmt.b32 %r8449, %r8591, %r8590, %r278;
	// inline asm
	st.local.u32 	[%rd7+4], %r8449;
	ld.local.u32 	%r8454, [%rd7];
	ld.local.u32 	%r8455, [%rd6+12];
	// inline asm
	prmt.b32 %r8453, %r8454, %r8455, %r278;
	// inline asm
	st.local.u32 	[%rd7], %r8453;
	ld.local.v2.u32 	{%r8592, %r8593}, [%rd6+8];
	// inline asm
	prmt.b32 %r8457, %r8593, %r8592, %r278;
	// inline asm
	st.local.u32 	[%rd6+12], %r8457;
	ld.local.u32 	%r8462, [%rd6+8];
	ld.local.u32 	%r8463, [%rd6+4];
	// inline asm
	prmt.b32 %r8461, %r8462, %r8463, %r278;
	// inline asm
	st.local.u32 	[%rd6+8], %r8461;
	ld.local.v2.u32 	{%r8594, %r8595}, [%rd6];
	// inline asm
	prmt.b32 %r8465, %r8595, %r8594, %r278;
	// inline asm
	st.local.u32 	[%rd6+4], %r8465;
	ld.local.u32 	%r8470, [%rd6];
	ld.local.u32 	%r8471, [%rd5+12];
	// inline asm
	prmt.b32 %r8469, %r8470, %r8471, %r278;
	// inline asm
	st.local.u32 	[%rd6], %r8469;
	ld.local.v2.u32 	{%r8596, %r8597}, [%rd5+8];
	// inline asm
	prmt.b32 %r8473, %r8597, %r8596, %r278;
	// inline asm
	st.local.u32 	[%rd5+12], %r8473;
	ld.local.u32 	%r8478, [%rd5+8];
	ld.local.u32 	%r8479, [%rd5+4];
	// inline asm
	prmt.b32 %r8477, %r8478, %r8479, %r278;
	// inline asm
	st.local.u32 	[%rd5+8], %r8477;
	ld.local.v2.u32 	{%r8598, %r8599}, [%rd5];
	// inline asm
	prmt.b32 %r8481, %r8599, %r8598, %r278;
	// inline asm
	st.local.u32 	[%rd5+4], %r8481;
	ld.local.u32 	%r8486, [%rd5];
	ld.local.u32 	%r8487, [%rd4+12];
	// inline asm
	prmt.b32 %r8485, %r8486, %r8487, %r278;
	// inline asm
	st.local.u32 	[%rd5], %r8485;
	ld.local.v2.u32 	{%r8600, %r8601}, [%rd4+8];
	// inline asm
	prmt.b32 %r8489, %r8601, %r8600, %r278;
	// inline asm
	st.local.u32 	[%rd4+12], %r8489;
	ld.local.u32 	%r8494, [%rd4+8];
	ld.local.u32 	%r8495, [%rd4+4];
	// inline asm
	prmt.b32 %r8493, %r8494, %r8495, %r278;
	// inline asm
	st.local.u32 	[%rd4+8], %r8493;
	ld.local.v2.u32 	{%r8602, %r8603}, [%rd4];
	// inline asm
	prmt.b32 %r8497, %r8603, %r8602, %r278;
	// inline asm
	st.local.u32 	[%rd4+4], %r8497;
	ld.local.u32 	%r8502, [%rd4];
	ld.local.u32 	%r8503, [%rd3+12];
	// inline asm
	prmt.b32 %r8501, %r8502, %r8503, %r278;
	// inline asm
	st.local.u32 	[%rd4], %r8501;
	ld.local.v2.u32 	{%r8604, %r8605}, [%rd3+8];
	// inline asm
	prmt.b32 %r8505, %r8605, %r8604, %r278;
	// inline asm
	st.local.u32 	[%rd3+12], %r8505;
	ld.local.u32 	%r8510, [%rd3+8];
	ld.local.u32 	%r8511, [%rd3+4];
	// inline asm
	prmt.b32 %r8509, %r8510, %r8511, %r278;
	// inline asm
	st.local.u32 	[%rd3+8], %r8509;
	ld.local.v2.u32 	{%r8606, %r8607}, [%rd3];
	// inline asm
	prmt.b32 %r8513, %r8607, %r8606, %r278;
	// inline asm
	st.local.u32 	[%rd3+4], %r8513;
	ld.local.u32 	%r8518, [%rd3];
	ld.local.u32 	%r8519, [%rd2+12];
	// inline asm
	prmt.b32 %r8517, %r8518, %r8519, %r278;
	// inline asm
	st.local.u32 	[%rd3], %r8517;
	ld.local.v2.u32 	{%r8608, %r8609}, [%rd2+8];
	// inline asm
	prmt.b32 %r8521, %r8609, %r8608, %r278;
	// inline asm
	st.local.u32 	[%rd2+12], %r8521;
	ld.local.u32 	%r8526, [%rd2+8];
	ld.local.u32 	%r8527, [%rd2+4];
	// inline asm
	prmt.b32 %r8525, %r8526, %r8527, %r278;
	// inline asm
	st.local.u32 	[%rd2+8], %r8525;
	ld.local.v2.u32 	{%r8610, %r8611}, [%rd2];
	// inline asm
	prmt.b32 %r8529, %r8611, %r8610, %r278;
	// inline asm
	st.local.u32 	[%rd2+4], %r8529;
	ld.local.u32 	%r8534, [%rd2];
	ld.local.u32 	%r8535, [%rd1+12];
	// inline asm
	prmt.b32 %r8533, %r8534, %r8535, %r278;
	// inline asm
	st.local.u32 	[%rd2], %r8533;
	ld.local.v2.u32 	{%r8612, %r8613}, [%rd1+8];
	// inline asm
	prmt.b32 %r8537, %r8613, %r8612, %r278;
	// inline asm
	st.local.u32 	[%rd1+12], %r8537;
	ld.local.u32 	%r8542, [%rd1+8];
	ld.local.u32 	%r8543, [%rd1+4];
	// inline asm
	prmt.b32 %r8541, %r8542, %r8543, %r278;
	// inline asm
	st.local.u32 	[%rd1+8], %r8541;
	ld.local.v2.u32 	{%r8614, %r8615}, [%rd1];
	// inline asm
	prmt.b32 %r8545, %r8615, %r8614, %r278;
	// inline asm
	st.local.u32 	[%rd1+4], %r8545;
	ld.local.u32 	%r8550, [%rd1];
	// inline asm
	prmt.b32 %r16249, %r8550, %r16250, %r278;
	// inline asm
	st.local.u32 	[%rd1], %r16249;
	ld.local.u32 	%r16248, [%rd1+4];
	mov.u32 	%r16251, %r16250;
	mov.u32 	%r16252, %r16250;
	mov.u32 	%r16254, %r16250;
	mov.u32 	%r16255, %r16250;
	mov.u32 	%r16256, %r16250;
	mov.u32 	%r16257, %r16250;
	mov.u32 	%r16258, %r16250;
	mov.u32 	%r16259, %r16250;
	mov.u32 	%r16260, %r16250;
	mov.u32 	%r16261, %r16250;
	mov.u32 	%r16262, %r16250;
	mov.u32 	%r16263, %r16250;
	mov.u32 	%r16264, %r16250;
	mov.u32 	%r16265, %r16250;
	mov.u32 	%r16266, %r16250;
	mov.u32 	%r16267, %r16250;
	mov.u32 	%r16268, %r16250;
	mov.u32 	%r16269, %r16250;
	mov.u32 	%r16270, %r16250;
	mov.u32 	%r16271, %r16250;
	mov.u32 	%r16272, %r16250;
	mov.u32 	%r16273, %r16250;
	mov.u32 	%r16274, %r16250;
	mov.u32 	%r16275, %r16250;
	mov.u32 	%r16276, %r16250;
	mov.u32 	%r16277, %r16250;
	mov.u32 	%r16278, %r16250;
	mov.u32 	%r16279, %r16250;
	mov.u32 	%r16280, %r16250;
	mov.u32 	%r16281, %r16250;
	bra.uni 	BB5_694;

BB5_641:
	setp.gt.s32	%p353, %r2804, 23;
	@%p353 bra 	BB5_657;

	setp.gt.s32	%p365, %r2804, 19;
	@%p365 bra 	BB5_650;

	setp.gt.s32	%p371, %r2804, 17;
	@%p371 bra 	BB5_647;

	setp.eq.s32	%p374, %r2804, 16;
	@%p374 bra 	BB5_679;
	bra.uni 	BB5_645;

BB5_679:
	mov.u32 	%r16248, 0;
	// inline asm
	prmt.b32 %r16269, %r16248, %r71, %r278;
	// inline asm
	ld.local.v2.u32 	{%r5555, %r5556}, [%rd8+8];
	// inline asm
	prmt.b32 %r16262, %r5556, %r5555, %r278;
	// inline asm
	ld.local.u32 	%r5415, [%rd8+8];
	ld.local.u32 	%r5416, [%rd8+4];
	// inline asm
	prmt.b32 %r16263, %r5415, %r5416, %r278;
	// inline asm
	ld.local.v2.u32 	{%r5557, %r5558}, [%rd8];
	// inline asm
	prmt.b32 %r16264, %r5558, %r5557, %r278;
	// inline asm
	ld.local.u32 	%r5423, [%rd8];
	ld.local.u32 	%r5424, [%rd7+12];
	// inline asm
	prmt.b32 %r16265, %r5423, %r5424, %r278;
	// inline asm
	ld.local.v2.u32 	{%r5559, %r5560}, [%rd7+8];
	// inline asm
	prmt.b32 %r16258, %r5560, %r5559, %r278;
	// inline asm
	ld.local.u32 	%r5431, [%rd7+8];
	ld.local.u32 	%r5432, [%rd7+4];
	// inline asm
	prmt.b32 %r16259, %r5431, %r5432, %r278;
	// inline asm
	ld.local.v2.u32 	{%r5561, %r5562}, [%rd7];
	// inline asm
	prmt.b32 %r16260, %r5562, %r5561, %r278;
	// inline asm
	ld.local.u32 	%r5439, [%rd7];
	ld.local.u32 	%r5440, [%rd6+12];
	// inline asm
	prmt.b32 %r16261, %r5439, %r5440, %r278;
	// inline asm
	ld.local.v2.u32 	{%r5563, %r5564}, [%rd6+8];
	// inline asm
	prmt.b32 %r16254, %r5564, %r5563, %r278;
	// inline asm
	ld.local.u32 	%r5447, [%rd6+8];
	ld.local.u32 	%r5448, [%rd6+4];
	// inline asm
	prmt.b32 %r16255, %r5447, %r5448, %r278;
	// inline asm
	ld.local.v2.u32 	{%r5565, %r5566}, [%rd6];
	// inline asm
	prmt.b32 %r16256, %r5566, %r5565, %r278;
	// inline asm
	ld.local.u32 	%r5455, [%rd6];
	ld.local.u32 	%r5456, [%rd5+12];
	// inline asm
	prmt.b32 %r16257, %r5455, %r5456, %r278;
	// inline asm
	ld.local.v2.u32 	{%r5567, %r5568}, [%rd5+8];
	// inline asm
	prmt.b32 %r16250, %r5568, %r5567, %r278;
	// inline asm
	ld.local.u32 	%r5463, [%rd5+8];
	ld.local.u32 	%r5464, [%rd5+4];
	// inline asm
	prmt.b32 %r16251, %r5463, %r5464, %r278;
	// inline asm
	ld.local.v2.u32 	{%r5569, %r5570}, [%rd5];
	// inline asm
	prmt.b32 %r16252, %r5570, %r5569, %r278;
	// inline asm
	ld.local.u32 	%r5471, [%rd5];
	ld.local.u32 	%r5472, [%rd4+12];
	// inline asm
	prmt.b32 %r16253, %r5471, %r5472, %r278;
	// inline asm
	ld.local.v2.u32 	{%r5571, %r5572}, [%rd4+8];
	// inline asm
	prmt.b32 %r5474, %r5572, %r5571, %r278;
	// inline asm
	st.local.u32 	[%rd8+12], %r5474;
	ld.local.u32 	%r5479, [%rd4+8];
	ld.local.u32 	%r5480, [%rd4+4];
	// inline asm
	prmt.b32 %r5478, %r5479, %r5480, %r278;
	// inline asm
	st.local.u32 	[%rd8+8], %r5478;
	ld.local.v2.u32 	{%r5573, %r5574}, [%rd4];
	// inline asm
	prmt.b32 %r5482, %r5574, %r5573, %r278;
	// inline asm
	st.local.u32 	[%rd8+4], %r5482;
	ld.local.u32 	%r5487, [%rd4];
	ld.local.u32 	%r5488, [%rd3+12];
	// inline asm
	prmt.b32 %r5486, %r5487, %r5488, %r278;
	// inline asm
	st.local.u32 	[%rd8], %r5486;
	ld.local.v2.u32 	{%r5575, %r5576}, [%rd3+8];
	// inline asm
	prmt.b32 %r5490, %r5576, %r5575, %r278;
	// inline asm
	st.local.u32 	[%rd7+12], %r5490;
	ld.local.u32 	%r5495, [%rd3+8];
	ld.local.u32 	%r5496, [%rd3+4];
	// inline asm
	prmt.b32 %r5494, %r5495, %r5496, %r278;
	// inline asm
	st.local.u32 	[%rd7+8], %r5494;
	ld.local.v2.u32 	{%r5577, %r5578}, [%rd3];
	// inline asm
	prmt.b32 %r5498, %r5578, %r5577, %r278;
	// inline asm
	st.local.u32 	[%rd7+4], %r5498;
	ld.local.u32 	%r5503, [%rd3];
	ld.local.u32 	%r5504, [%rd2+12];
	// inline asm
	prmt.b32 %r5502, %r5503, %r5504, %r278;
	// inline asm
	st.local.u32 	[%rd7], %r5502;
	ld.local.v2.u32 	{%r5579, %r5580}, [%rd2+8];
	// inline asm
	prmt.b32 %r5506, %r5580, %r5579, %r278;
	// inline asm
	st.local.u32 	[%rd6+12], %r5506;
	ld.local.u32 	%r5511, [%rd2+8];
	ld.local.u32 	%r5512, [%rd2+4];
	// inline asm
	prmt.b32 %r5510, %r5511, %r5512, %r278;
	// inline asm
	st.local.u32 	[%rd6+8], %r5510;
	ld.local.v2.u32 	{%r5581, %r5582}, [%rd2];
	// inline asm
	prmt.b32 %r5514, %r5582, %r5581, %r278;
	// inline asm
	st.local.u32 	[%rd6+4], %r5514;
	ld.local.u32 	%r5519, [%rd2];
	ld.local.u32 	%r5520, [%rd1+12];
	// inline asm
	prmt.b32 %r5518, %r5519, %r5520, %r278;
	// inline asm
	st.local.u32 	[%rd6], %r5518;
	ld.local.v2.u32 	{%r5583, %r5584}, [%rd1+8];
	// inline asm
	prmt.b32 %r5522, %r5584, %r5583, %r278;
	// inline asm
	st.local.u32 	[%rd5+12], %r5522;
	ld.local.u32 	%r5527, [%rd1+8];
	ld.local.u32 	%r5528, [%rd1+4];
	// inline asm
	prmt.b32 %r5526, %r5527, %r5528, %r278;
	// inline asm
	st.local.u32 	[%rd5+8], %r5526;
	ld.local.v2.u32 	{%r5585, %r5586}, [%rd1];
	// inline asm
	prmt.b32 %r5530, %r5586, %r5585, %r278;
	// inline asm
	st.local.u32 	[%rd5+4], %r5530;
	ld.local.u32 	%r5535, [%rd1];
	// inline asm
	prmt.b32 %r5534, %r5535, %r16248, %r278;
	// inline asm
	st.local.u32 	[%rd5], %r5534;
	st.local.v4.u32 	[%rd4], {%r16248, %r16248, %r16248, %r16248};
	st.local.v4.u32 	[%rd3], {%r16248, %r16248, %r16248, %r16248};
	st.local.v4.u32 	[%rd2], {%r16248, %r16248, %r16248, %r16248};
	st.local.v2.u32 	[%rd1+8], {%r16248, %r16248};
	mov.u64 	%rd926, 0;
	st.local.u64 	[%rd1], %rd926;
	mov.u32 	%r16249, %r16248;
	mov.u32 	%r16266, %r16248;
	mov.u32 	%r16267, %r16248;
	mov.u32 	%r16268, %r16248;
	bra.uni 	BB5_689;

BB5_626:
	setp.gt.s32	%p377, %r2804, 11;
	@%p377 bra 	BB5_634;

	setp.gt.s32	%p383, %r2804, 9;
	@%p383 bra 	BB5_631;

	setp.eq.s32	%p386, %r2804, 8;
	@%p386 bra 	BB5_683;
	bra.uni 	BB5_629;

BB5_683:
	mov.u32 	%r16248, 0;
	// inline asm
	prmt.b32 %r16261, %r16248, %r71, %r278;
	// inline asm
	ld.local.v2.u32 	{%r7039, %r7040}, [%rd8+8];
	// inline asm
	prmt.b32 %r16254, %r7040, %r7039, %r278;
	// inline asm
	ld.local.u32 	%r6891, [%rd8+8];
	ld.local.u32 	%r6892, [%rd8+4];
	// inline asm
	prmt.b32 %r16255, %r6891, %r6892, %r278;
	// inline asm
	ld.local.v2.u32 	{%r7041, %r7042}, [%rd8];
	// inline asm
	prmt.b32 %r16256, %r7042, %r7041, %r278;
	// inline asm
	ld.local.u32 	%r6899, [%rd8];
	ld.local.u32 	%r6900, [%rd7+12];
	// inline asm
	prmt.b32 %r16257, %r6899, %r6900, %r278;
	// inline asm
	ld.local.v2.u32 	{%r7043, %r7044}, [%rd7+8];
	// inline asm
	prmt.b32 %r16250, %r7044, %r7043, %r278;
	// inline asm
	ld.local.u32 	%r6907, [%rd7+8];
	ld.local.u32 	%r6908, [%rd7+4];
	// inline asm
	prmt.b32 %r16251, %r6907, %r6908, %r278;
	// inline asm
	ld.local.v2.u32 	{%r7045, %r7046}, [%rd7];
	// inline asm
	prmt.b32 %r16252, %r7046, %r7045, %r278;
	// inline asm
	ld.local.u32 	%r6915, [%rd7];
	ld.local.u32 	%r6916, [%rd6+12];
	// inline asm
	prmt.b32 %r16253, %r6915, %r6916, %r278;
	// inline asm
	ld.local.v2.u32 	{%r7047, %r7048}, [%rd6+8];
	// inline asm
	prmt.b32 %r6918, %r7048, %r7047, %r278;
	// inline asm
	st.local.u32 	[%rd8+12], %r6918;
	ld.local.u32 	%r6923, [%rd6+8];
	ld.local.u32 	%r6924, [%rd6+4];
	// inline asm
	prmt.b32 %r6922, %r6923, %r6924, %r278;
	// inline asm
	st.local.u32 	[%rd8+8], %r6922;
	ld.local.v2.u32 	{%r7049, %r7050}, [%rd6];
	// inline asm
	prmt.b32 %r6926, %r7050, %r7049, %r278;
	// inline asm
	st.local.u32 	[%rd8+4], %r6926;
	ld.local.u32 	%r6931, [%rd6];
	ld.local.u32 	%r6932, [%rd5+12];
	// inline asm
	prmt.b32 %r6930, %r6931, %r6932, %r278;
	// inline asm
	st.local.u32 	[%rd8], %r6930;
	ld.local.v2.u32 	{%r7051, %r7052}, [%rd5+8];
	// inline asm
	prmt.b32 %r6934, %r7052, %r7051, %r278;
	// inline asm
	st.local.u32 	[%rd7+12], %r6934;
	ld.local.u32 	%r6939, [%rd5+8];
	ld.local.u32 	%r6940, [%rd5+4];
	// inline asm
	prmt.b32 %r6938, %r6939, %r6940, %r278;
	// inline asm
	st.local.u32 	[%rd7+8], %r6938;
	ld.local.v2.u32 	{%r7053, %r7054}, [%rd5];
	// inline asm
	prmt.b32 %r6942, %r7054, %r7053, %r278;
	// inline asm
	st.local.u32 	[%rd7+4], %r6942;
	ld.local.u32 	%r6947, [%rd5];
	ld.local.u32 	%r6948, [%rd4+12];
	// inline asm
	prmt.b32 %r6946, %r6947, %r6948, %r278;
	// inline asm
	st.local.u32 	[%rd7], %r6946;
	ld.local.v2.u32 	{%r7055, %r7056}, [%rd4+8];
	// inline asm
	prmt.b32 %r6950, %r7056, %r7055, %r278;
	// inline asm
	st.local.u32 	[%rd6+12], %r6950;
	ld.local.u32 	%r6955, [%rd4+8];
	ld.local.u32 	%r6956, [%rd4+4];
	// inline asm
	prmt.b32 %r6954, %r6955, %r6956, %r278;
	// inline asm
	st.local.u32 	[%rd6+8], %r6954;
	ld.local.v2.u32 	{%r7057, %r7058}, [%rd4];
	// inline asm
	prmt.b32 %r6958, %r7058, %r7057, %r278;
	// inline asm
	st.local.u32 	[%rd6+4], %r6958;
	ld.local.u32 	%r6963, [%rd4];
	ld.local.u32 	%r6964, [%rd3+12];
	// inline asm
	prmt.b32 %r6962, %r6963, %r6964, %r278;
	// inline asm
	st.local.u32 	[%rd6], %r6962;
	ld.local.v2.u32 	{%r7059, %r7060}, [%rd3+8];
	// inline asm
	prmt.b32 %r6966, %r7060, %r7059, %r278;
	// inline asm
	st.local.u32 	[%rd5+12], %r6966;
	ld.local.u32 	%r6971, [%rd3+8];
	ld.local.u32 	%r6972, [%rd3+4];
	// inline asm
	prmt.b32 %r6970, %r6971, %r6972, %r278;
	// inline asm
	st.local.u32 	[%rd5+8], %r6970;
	ld.local.v2.u32 	{%r7061, %r7062}, [%rd3];
	// inline asm
	prmt.b32 %r6974, %r7062, %r7061, %r278;
	// inline asm
	st.local.u32 	[%rd5+4], %r6974;
	ld.local.u32 	%r6979, [%rd3];
	ld.local.u32 	%r6980, [%rd2+12];
	// inline asm
	prmt.b32 %r6978, %r6979, %r6980, %r278;
	// inline asm
	st.local.u32 	[%rd5], %r6978;
	ld.local.v2.u32 	{%r7063, %r7064}, [%rd2+8];
	// inline asm
	prmt.b32 %r6982, %r7064, %r7063, %r278;
	// inline asm
	st.local.u32 	[%rd4+12], %r6982;
	ld.local.u32 	%r6987, [%rd2+8];
	ld.local.u32 	%r6988, [%rd2+4];
	// inline asm
	prmt.b32 %r6986, %r6987, %r6988, %r278;
	// inline asm
	st.local.u32 	[%rd4+8], %r6986;
	ld.local.v2.u32 	{%r7065, %r7066}, [%rd2];
	// inline asm
	prmt.b32 %r6990, %r7066, %r7065, %r278;
	// inline asm
	st.local.u32 	[%rd4+4], %r6990;
	ld.local.u32 	%r6995, [%rd2];
	ld.local.u32 	%r6996, [%rd1+12];
	// inline asm
	prmt.b32 %r6994, %r6995, %r6996, %r278;
	// inline asm
	st.local.u32 	[%rd4], %r6994;
	ld.local.v2.u32 	{%r7067, %r7068}, [%rd1+8];
	// inline asm
	prmt.b32 %r6998, %r7068, %r7067, %r278;
	// inline asm
	st.local.u32 	[%rd3+12], %r6998;
	ld.local.u32 	%r7003, [%rd1+8];
	ld.local.u32 	%r7004, [%rd1+4];
	// inline asm
	prmt.b32 %r7002, %r7003, %r7004, %r278;
	// inline asm
	st.local.u32 	[%rd3+8], %r7002;
	ld.local.v2.u32 	{%r7069, %r7070}, [%rd1];
	// inline asm
	prmt.b32 %r7006, %r7070, %r7069, %r278;
	// inline asm
	st.local.u32 	[%rd3+4], %r7006;
	ld.local.u32 	%r7011, [%rd1];
	// inline asm
	prmt.b32 %r7010, %r7011, %r16248, %r278;
	// inline asm
	st.local.u32 	[%rd3], %r7010;
	st.local.v4.u32 	[%rd2], {%r16248, %r16248, %r16248, %r16248};
	st.local.v2.u32 	[%rd1+8], {%r16248, %r16248};
	mov.u64 	%rd934, 0;
	st.local.u64 	[%rd1], %rd934;
	mov.u32 	%r16249, %r16248;
	mov.u32 	%r16258, %r16248;
	mov.u32 	%r16259, %r16248;
	mov.u32 	%r16260, %r16248;
	bra.uni 	BB5_687;

BB5_657:
	setp.gt.s32	%p354, %r2804, 27;
	@%p354 bra 	BB5_665;

	setp.gt.s32	%p360, %r2804, 25;
	@%p360 bra 	BB5_662;

	setp.eq.s32	%p363, %r2804, 24;
	@%p363 bra 	BB5_675;
	bra.uni 	BB5_660;

BB5_675:
	mov.u32 	%r16248, 0;
	// inline asm
	prmt.b32 %r16277, %r16248, %r71, %r278;
	// inline asm
	ld.local.v2.u32 	{%r4135, %r4136}, [%rd8+8];
	// inline asm
	prmt.b32 %r16270, %r4136, %r4135, %r278;
	// inline asm
	ld.local.u32 	%r4003, [%rd8+8];
	ld.local.u32 	%r4004, [%rd8+4];
	// inline asm
	prmt.b32 %r16271, %r4003, %r4004, %r278;
	// inline asm
	ld.local.v2.u32 	{%r4137, %r4138}, [%rd8];
	// inline asm
	prmt.b32 %r16272, %r4138, %r4137, %r278;
	// inline asm
	ld.local.u32 	%r4011, [%rd8];
	ld.local.u32 	%r4012, [%rd7+12];
	// inline asm
	prmt.b32 %r16273, %r4011, %r4012, %r278;
	// inline asm
	ld.local.v2.u32 	{%r4139, %r4140}, [%rd7+8];
	// inline asm
	prmt.b32 %r16266, %r4140, %r4139, %r278;
	// inline asm
	ld.local.u32 	%r4019, [%rd7+8];
	ld.local.u32 	%r4020, [%rd7+4];
	// inline asm
	prmt.b32 %r16267, %r4019, %r4020, %r278;
	// inline asm
	ld.local.v2.u32 	{%r4141, %r4142}, [%rd7];
	// inline asm
	prmt.b32 %r16268, %r4142, %r4141, %r278;
	// inline asm
	ld.local.u32 	%r4027, [%rd7];
	ld.local.u32 	%r4028, [%rd6+12];
	// inline asm
	prmt.b32 %r16269, %r4027, %r4028, %r278;
	// inline asm
	ld.local.v2.u32 	{%r4143, %r4144}, [%rd6+8];
	// inline asm
	prmt.b32 %r16262, %r4144, %r4143, %r278;
	// inline asm
	ld.local.u32 	%r4035, [%rd6+8];
	ld.local.u32 	%r4036, [%rd6+4];
	// inline asm
	prmt.b32 %r16263, %r4035, %r4036, %r278;
	// inline asm
	ld.local.v2.u32 	{%r4145, %r4146}, [%rd6];
	// inline asm
	prmt.b32 %r16264, %r4146, %r4145, %r278;
	// inline asm
	ld.local.u32 	%r4043, [%rd6];
	ld.local.u32 	%r4044, [%rd5+12];
	// inline asm
	prmt.b32 %r16265, %r4043, %r4044, %r278;
	// inline asm
	ld.local.v2.u32 	{%r4147, %r4148}, [%rd5+8];
	// inline asm
	prmt.b32 %r16258, %r4148, %r4147, %r278;
	// inline asm
	ld.local.u32 	%r4051, [%rd5+8];
	ld.local.u32 	%r4052, [%rd5+4];
	// inline asm
	prmt.b32 %r16259, %r4051, %r4052, %r278;
	// inline asm
	ld.local.v2.u32 	{%r4149, %r4150}, [%rd5];
	// inline asm
	prmt.b32 %r16260, %r4150, %r4149, %r278;
	// inline asm
	ld.local.u32 	%r4059, [%rd5];
	ld.local.u32 	%r4060, [%rd4+12];
	// inline asm
	prmt.b32 %r16261, %r4059, %r4060, %r278;
	// inline asm
	ld.local.v2.u32 	{%r4151, %r4152}, [%rd4+8];
	// inline asm
	prmt.b32 %r16254, %r4152, %r4151, %r278;
	// inline asm
	ld.local.u32 	%r4067, [%rd4+8];
	ld.local.u32 	%r4068, [%rd4+4];
	// inline asm
	prmt.b32 %r16255, %r4067, %r4068, %r278;
	// inline asm
	ld.local.v2.u32 	{%r4153, %r4154}, [%rd4];
	// inline asm
	prmt.b32 %r16256, %r4154, %r4153, %r278;
	// inline asm
	ld.local.u32 	%r4075, [%rd4];
	ld.local.u32 	%r4076, [%rd3+12];
	// inline asm
	prmt.b32 %r16257, %r4075, %r4076, %r278;
	// inline asm
	ld.local.v2.u32 	{%r4155, %r4156}, [%rd3+8];
	// inline asm
	prmt.b32 %r16250, %r4156, %r4155, %r278;
	// inline asm
	ld.local.u32 	%r4083, [%rd3+8];
	ld.local.u32 	%r4084, [%rd3+4];
	// inline asm
	prmt.b32 %r16251, %r4083, %r4084, %r278;
	// inline asm
	ld.local.v2.u32 	{%r4157, %r4158}, [%rd3];
	// inline asm
	prmt.b32 %r16252, %r4158, %r4157, %r278;
	// inline asm
	ld.local.u32 	%r4091, [%rd3];
	ld.local.u32 	%r4092, [%rd2+12];
	// inline asm
	prmt.b32 %r16253, %r4091, %r4092, %r278;
	// inline asm
	ld.local.v2.u32 	{%r4159, %r4160}, [%rd2+8];
	// inline asm
	prmt.b32 %r4094, %r4160, %r4159, %r278;
	// inline asm
	st.local.u32 	[%rd8+12], %r4094;
	ld.local.u32 	%r4099, [%rd2+8];
	ld.local.u32 	%r4100, [%rd2+4];
	// inline asm
	prmt.b32 %r4098, %r4099, %r4100, %r278;
	// inline asm
	st.local.u32 	[%rd8+8], %r4098;
	ld.local.v2.u32 	{%r4161, %r4162}, [%rd2];
	// inline asm
	prmt.b32 %r4102, %r4162, %r4161, %r278;
	// inline asm
	st.local.u32 	[%rd8+4], %r4102;
	ld.local.u32 	%r4107, [%rd2];
	ld.local.u32 	%r4108, [%rd1+12];
	// inline asm
	prmt.b32 %r4106, %r4107, %r4108, %r278;
	// inline asm
	st.local.u32 	[%rd8], %r4106;
	ld.local.v2.u32 	{%r4163, %r4164}, [%rd1+8];
	// inline asm
	prmt.b32 %r4110, %r4164, %r4163, %r278;
	// inline asm
	st.local.u32 	[%rd7+12], %r4110;
	ld.local.u32 	%r4115, [%rd1+8];
	ld.local.u32 	%r4116, [%rd1+4];
	// inline asm
	prmt.b32 %r4114, %r4115, %r4116, %r278;
	// inline asm
	st.local.u32 	[%rd7+8], %r4114;
	ld.local.v2.u32 	{%r4165, %r4166}, [%rd1];
	// inline asm
	prmt.b32 %r4118, %r4166, %r4165, %r278;
	// inline asm
	st.local.u32 	[%rd7+4], %r4118;
	ld.local.u32 	%r4123, [%rd1];
	// inline asm
	prmt.b32 %r4122, %r4123, %r16248, %r278;
	// inline asm
	st.local.u32 	[%rd7], %r4122;
	st.local.v4.u32 	[%rd6], {%r16248, %r16248, %r16248, %r16248};
	st.local.v4.u32 	[%rd5], {%r16248, %r16248, %r16248, %r16248};
	st.local.v4.u32 	[%rd4], {%r16248, %r16248, %r16248, %r16248};
	st.local.v4.u32 	[%rd3], {%r16248, %r16248, %r16248, %r16248};
	st.local.v4.u32 	[%rd2], {%r16248, %r16248, %r16248, %r16248};
	st.local.v2.u32 	[%rd1+8], {%r16248, %r16248};
	mov.u64 	%rd918, 0;
	st.local.u64 	[%rd1], %rd918;
	mov.u32 	%r16249, %r16248;
	mov.u32 	%r16274, %r16248;
	mov.u32 	%r16275, %r16248;
	mov.u32 	%r16276, %r16248;
	bra.uni 	BB5_691;

BB5_619:
	setp.gt.s32	%p389, %r2804, 5;
	@%p389 bra 	BB5_623;

	setp.eq.s32	%p392, %r2804, 4;
	@%p392 bra 	BB5_685;
	bra.uni 	BB5_621;

BB5_685:
	mov.u32 	%r16248, 0;
	// inline asm
	prmt.b32 %r16257, %r16248, %r71, %r278;
	// inline asm
	ld.local.v2.u32 	{%r7805, %r7806}, [%rd8+8];
	// inline asm
	prmt.b32 %r16250, %r7806, %r7805, %r278;
	// inline asm
	ld.local.u32 	%r7653, [%rd8+8];
	ld.local.u32 	%r7654, [%rd8+4];
	// inline asm
	prmt.b32 %r16251, %r7653, %r7654, %r278;
	// inline asm
	ld.local.v2.u32 	{%r7807, %r7808}, [%rd8];
	// inline asm
	prmt.b32 %r16252, %r7808, %r7807, %r278;
	// inline asm
	ld.local.u32 	%r7661, [%rd8];
	ld.local.u32 	%r7662, [%rd7+12];
	// inline asm
	prmt.b32 %r16253, %r7661, %r7662, %r278;
	// inline asm
	ld.local.v2.u32 	{%r7809, %r7810}, [%rd7+8];
	// inline asm
	prmt.b32 %r7664, %r7810, %r7809, %r278;
	// inline asm
	st.local.u32 	[%rd8+12], %r7664;
	ld.local.u32 	%r7669, [%rd7+8];
	ld.local.u32 	%r7670, [%rd7+4];
	// inline asm
	prmt.b32 %r7668, %r7669, %r7670, %r278;
	// inline asm
	st.local.u32 	[%rd8+8], %r7668;
	ld.local.v2.u32 	{%r7811, %r7812}, [%rd7];
	// inline asm
	prmt.b32 %r7672, %r7812, %r7811, %r278;
	// inline asm
	st.local.u32 	[%rd8+4], %r7672;
	ld.local.u32 	%r7677, [%rd7];
	ld.local.u32 	%r7678, [%rd6+12];
	// inline asm
	prmt.b32 %r7676, %r7677, %r7678, %r278;
	// inline asm
	st.local.u32 	[%rd8], %r7676;
	ld.local.v2.u32 	{%r7813, %r7814}, [%rd6+8];
	// inline asm
	prmt.b32 %r7680, %r7814, %r7813, %r278;
	// inline asm
	st.local.u32 	[%rd7+12], %r7680;
	ld.local.u32 	%r7685, [%rd6+8];
	ld.local.u32 	%r7686, [%rd6+4];
	// inline asm
	prmt.b32 %r7684, %r7685, %r7686, %r278;
	// inline asm
	st.local.u32 	[%rd7+8], %r7684;
	ld.local.v2.u32 	{%r7815, %r7816}, [%rd6];
	// inline asm
	prmt.b32 %r7688, %r7816, %r7815, %r278;
	// inline asm
	st.local.u32 	[%rd7+4], %r7688;
	ld.local.u32 	%r7693, [%rd6];
	ld.local.u32 	%r7694, [%rd5+12];
	// inline asm
	prmt.b32 %r7692, %r7693, %r7694, %r278;
	// inline asm
	st.local.u32 	[%rd7], %r7692;
	ld.local.v2.u32 	{%r7817, %r7818}, [%rd5+8];
	// inline asm
	prmt.b32 %r7696, %r7818, %r7817, %r278;
	// inline asm
	st.local.u32 	[%rd6+12], %r7696;
	ld.local.u32 	%r7701, [%rd5+8];
	ld.local.u32 	%r7702, [%rd5+4];
	// inline asm
	prmt.b32 %r7700, %r7701, %r7702, %r278;
	// inline asm
	st.local.u32 	[%rd6+8], %r7700;
	ld.local.v2.u32 	{%r7819, %r7820}, [%rd5];
	// inline asm
	prmt.b32 %r7704, %r7820, %r7819, %r278;
	// inline asm
	st.local.u32 	[%rd6+4], %r7704;
	ld.local.u32 	%r7709, [%rd5];
	ld.local.u32 	%r7710, [%rd4+12];
	// inline asm
	prmt.b32 %r7708, %r7709, %r7710, %r278;
	// inline asm
	st.local.u32 	[%rd6], %r7708;
	ld.local.v2.u32 	{%r7821, %r7822}, [%rd4+8];
	// inline asm
	prmt.b32 %r7712, %r7822, %r7821, %r278;
	// inline asm
	st.local.u32 	[%rd5+12], %r7712;
	ld.local.u32 	%r7717, [%rd4+8];
	ld.local.u32 	%r7718, [%rd4+4];
	// inline asm
	prmt.b32 %r7716, %r7717, %r7718, %r278;
	// inline asm
	st.local.u32 	[%rd5+8], %r7716;
	ld.local.v2.u32 	{%r7823, %r7824}, [%rd4];
	// inline asm
	prmt.b32 %r7720, %r7824, %r7823, %r278;
	// inline asm
	st.local.u32 	[%rd5+4], %r7720;
	ld.local.u32 	%r7725, [%rd4];
	ld.local.u32 	%r7726, [%rd3+12];
	// inline asm
	prmt.b32 %r7724, %r7725, %r7726, %r278;
	// inline asm
	st.local.u32 	[%rd5], %r7724;
	ld.local.v2.u32 	{%r7825, %r7826}, [%rd3+8];
	// inline asm
	prmt.b32 %r7728, %r7826, %r7825, %r278;
	// inline asm
	st.local.u32 	[%rd4+12], %r7728;
	ld.local.u32 	%r7733, [%rd3+8];
	ld.local.u32 	%r7734, [%rd3+4];
	// inline asm
	prmt.b32 %r7732, %r7733, %r7734, %r278;
	// inline asm
	st.local.u32 	[%rd4+8], %r7732;
	ld.local.v2.u32 	{%r7827, %r7828}, [%rd3];
	// inline asm
	prmt.b32 %r7736, %r7828, %r7827, %r278;
	// inline asm
	st.local.u32 	[%rd4+4], %r7736;
	ld.local.u32 	%r7741, [%rd3];
	ld.local.u32 	%r7742, [%rd2+12];
	// inline asm
	prmt.b32 %r7740, %r7741, %r7742, %r278;
	// inline asm
	st.local.u32 	[%rd4], %r7740;
	ld.local.v2.u32 	{%r7829, %r7830}, [%rd2+8];
	// inline asm
	prmt.b32 %r7744, %r7830, %r7829, %r278;
	// inline asm
	st.local.u32 	[%rd3+12], %r7744;
	ld.local.u32 	%r7749, [%rd2+8];
	ld.local.u32 	%r7750, [%rd2+4];
	// inline asm
	prmt.b32 %r7748, %r7749, %r7750, %r278;
	// inline asm
	st.local.u32 	[%rd3+8], %r7748;
	ld.local.v2.u32 	{%r7831, %r7832}, [%rd2];
	// inline asm
	prmt.b32 %r7752, %r7832, %r7831, %r278;
	// inline asm
	st.local.u32 	[%rd3+4], %r7752;
	ld.local.u32 	%r7757, [%rd2];
	ld.local.u32 	%r7758, [%rd1+12];
	// inline asm
	prmt.b32 %r7756, %r7757, %r7758, %r278;
	// inline asm
	st.local.u32 	[%rd3], %r7756;
	ld.local.v2.u32 	{%r7833, %r7834}, [%rd1+8];
	// inline asm
	prmt.b32 %r7760, %r7834, %r7833, %r278;
	// inline asm
	st.local.u32 	[%rd2+12], %r7760;
	ld.local.u32 	%r7765, [%rd1+8];
	ld.local.u32 	%r7766, [%rd1+4];
	// inline asm
	prmt.b32 %r7764, %r7765, %r7766, %r278;
	// inline asm
	st.local.u32 	[%rd2+8], %r7764;
	ld.local.v2.u32 	{%r7835, %r7836}, [%rd1];
	// inline asm
	prmt.b32 %r7768, %r7836, %r7835, %r278;
	// inline asm
	st.local.u32 	[%rd2+4], %r7768;
	ld.local.u32 	%r7773, [%rd1];
	// inline asm
	prmt.b32 %r7772, %r7773, %r16248, %r278;
	// inline asm
	st.local.u32 	[%rd2], %r7772;
	st.local.v2.u32 	[%rd1+8], {%r16248, %r16248};
	mov.u64 	%rd938, 0;
	st.local.u64 	[%rd1], %rd938;
	mov.u32 	%r16249, %r16248;
	mov.u32 	%r16254, %r16248;
	mov.u32 	%r16255, %r16248;
	mov.u32 	%r16256, %r16248;
	bra.uni 	BB5_686;

BB5_650:
	setp.gt.s32	%p366, %r2804, 21;
	@%p366 bra 	BB5_654;

	setp.eq.s32	%p369, %r2804, 20;
	@%p369 bra 	BB5_677;
	bra.uni 	BB5_652;

BB5_677:
	mov.u32 	%r16248, 0;
	// inline asm
	prmt.b32 %r16273, %r16248, %r71, %r278;
	// inline asm
	ld.local.v2.u32 	{%r4837, %r4838}, [%rd8+8];
	// inline asm
	prmt.b32 %r16266, %r4838, %r4837, %r278;
	// inline asm
	ld.local.u32 	%r4701, [%rd8+8];
	ld.local.u32 	%r4702, [%rd8+4];
	// inline asm
	prmt.b32 %r16267, %r4701, %r4702, %r278;
	// inline asm
	ld.local.v2.u32 	{%r4839, %r4840}, [%rd8];
	// inline asm
	prmt.b32 %r16268, %r4840, %r4839, %r278;
	// inline asm
	ld.local.u32 	%r4709, [%rd8];
	ld.local.u32 	%r4710, [%rd7+12];
	// inline asm
	prmt.b32 %r16269, %r4709, %r4710, %r278;
	// inline asm
	ld.local.v2.u32 	{%r4841, %r4842}, [%rd7+8];
	// inline asm
	prmt.b32 %r16262, %r4842, %r4841, %r278;
	// inline asm
	ld.local.u32 	%r4717, [%rd7+8];
	ld.local.u32 	%r4718, [%rd7+4];
	// inline asm
	prmt.b32 %r16263, %r4717, %r4718, %r278;
	// inline asm
	ld.local.v2.u32 	{%r4843, %r4844}, [%rd7];
	// inline asm
	prmt.b32 %r16264, %r4844, %r4843, %r278;
	// inline asm
	ld.local.u32 	%r4725, [%rd7];
	ld.local.u32 	%r4726, [%rd6+12];
	// inline asm
	prmt.b32 %r16265, %r4725, %r4726, %r278;
	// inline asm
	ld.local.v2.u32 	{%r4845, %r4846}, [%rd6+8];
	// inline asm
	prmt.b32 %r16258, %r4846, %r4845, %r278;
	// inline asm
	ld.local.u32 	%r4733, [%rd6+8];
	ld.local.u32 	%r4734, [%rd6+4];
	// inline asm
	prmt.b32 %r16259, %r4733, %r4734, %r278;
	// inline asm
	ld.local.v2.u32 	{%r4847, %r4848}, [%rd6];
	// inline asm
	prmt.b32 %r16260, %r4848, %r4847, %r278;
	// inline asm
	ld.local.u32 	%r4741, [%rd6];
	ld.local.u32 	%r4742, [%rd5+12];
	// inline asm
	prmt.b32 %r16261, %r4741, %r4742, %r278;
	// inline asm
	ld.local.v2.u32 	{%r4849, %r4850}, [%rd5+8];
	// inline asm
	prmt.b32 %r16254, %r4850, %r4849, %r278;
	// inline asm
	ld.local.u32 	%r4749, [%rd5+8];
	ld.local.u32 	%r4750, [%rd5+4];
	// inline asm
	prmt.b32 %r16255, %r4749, %r4750, %r278;
	// inline asm
	ld.local.v2.u32 	{%r4851, %r4852}, [%rd5];
	// inline asm
	prmt.b32 %r16256, %r4852, %r4851, %r278;
	// inline asm
	ld.local.u32 	%r4757, [%rd5];
	ld.local.u32 	%r4758, [%rd4+12];
	// inline asm
	prmt.b32 %r16257, %r4757, %r4758, %r278;
	// inline asm
	ld.local.v2.u32 	{%r4853, %r4854}, [%rd4+8];
	// inline asm
	prmt.b32 %r16250, %r4854, %r4853, %r278;
	// inline asm
	ld.local.u32 	%r4765, [%rd4+8];
	ld.local.u32 	%r4766, [%rd4+4];
	// inline asm
	prmt.b32 %r16251, %r4765, %r4766, %r278;
	// inline asm
	ld.local.v2.u32 	{%r4855, %r4856}, [%rd4];
	// inline asm
	prmt.b32 %r16252, %r4856, %r4855, %r278;
	// inline asm
	ld.local.u32 	%r4773, [%rd4];
	ld.local.u32 	%r4774, [%rd3+12];
	// inline asm
	prmt.b32 %r16253, %r4773, %r4774, %r278;
	// inline asm
	ld.local.v2.u32 	{%r4857, %r4858}, [%rd3+8];
	// inline asm
	prmt.b32 %r4776, %r4858, %r4857, %r278;
	// inline asm
	st.local.u32 	[%rd8+12], %r4776;
	ld.local.u32 	%r4781, [%rd3+8];
	ld.local.u32 	%r4782, [%rd3+4];
	// inline asm
	prmt.b32 %r4780, %r4781, %r4782, %r278;
	// inline asm
	st.local.u32 	[%rd8+8], %r4780;
	ld.local.v2.u32 	{%r4859, %r4860}, [%rd3];
	// inline asm
	prmt.b32 %r4784, %r4860, %r4859, %r278;
	// inline asm
	st.local.u32 	[%rd8+4], %r4784;
	ld.local.u32 	%r4789, [%rd3];
	ld.local.u32 	%r4790, [%rd2+12];
	// inline asm
	prmt.b32 %r4788, %r4789, %r4790, %r278;
	// inline asm
	st.local.u32 	[%rd8], %r4788;
	ld.local.v2.u32 	{%r4861, %r4862}, [%rd2+8];
	// inline asm
	prmt.b32 %r4792, %r4862, %r4861, %r278;
	// inline asm
	st.local.u32 	[%rd7+12], %r4792;
	ld.local.u32 	%r4797, [%rd2+8];
	ld.local.u32 	%r4798, [%rd2+4];
	// inline asm
	prmt.b32 %r4796, %r4797, %r4798, %r278;
	// inline asm
	st.local.u32 	[%rd7+8], %r4796;
	ld.local.v2.u32 	{%r4863, %r4864}, [%rd2];
	// inline asm
	prmt.b32 %r4800, %r4864, %r4863, %r278;
	// inline asm
	st.local.u32 	[%rd7+4], %r4800;
	ld.local.u32 	%r4805, [%rd2];
	ld.local.u32 	%r4806, [%rd1+12];
	// inline asm
	prmt.b32 %r4804, %r4805, %r4806, %r278;
	// inline asm
	st.local.u32 	[%rd7], %r4804;
	ld.local.v2.u32 	{%r4865, %r4866}, [%rd1+8];
	// inline asm
	prmt.b32 %r4808, %r4866, %r4865, %r278;
	// inline asm
	st.local.u32 	[%rd6+12], %r4808;
	ld.local.u32 	%r4813, [%rd1+8];
	ld.local.u32 	%r4814, [%rd1+4];
	// inline asm
	prmt.b32 %r4812, %r4813, %r4814, %r278;
	// inline asm
	st.local.u32 	[%rd6+8], %r4812;
	ld.local.v2.u32 	{%r4867, %r4868}, [%rd1];
	// inline asm
	prmt.b32 %r4816, %r4868, %r4867, %r278;
	// inline asm
	st.local.u32 	[%rd6+4], %r4816;
	ld.local.u32 	%r4821, [%rd1];
	// inline asm
	prmt.b32 %r4820, %r4821, %r16248, %r278;
	// inline asm
	st.local.u32 	[%rd6], %r4820;
	st.local.v4.u32 	[%rd5], {%r16248, %r16248, %r16248, %r16248};
	st.local.v4.u32 	[%rd4], {%r16248, %r16248, %r16248, %r16248};
	st.local.v4.u32 	[%rd3], {%r16248, %r16248, %r16248, %r16248};
	st.local.v4.u32 	[%rd2], {%r16248, %r16248, %r16248, %r16248};
	st.local.v2.u32 	[%rd1+8], {%r16248, %r16248};
	mov.u64 	%rd922, 0;
	st.local.u64 	[%rd1], %rd922;
	mov.u32 	%r16249, %r16248;
	mov.u32 	%r16270, %r16248;
	mov.u32 	%r16271, %r16248;
	mov.u32 	%r16272, %r16248;
	bra.uni 	BB5_690;

BB5_634:
	setp.gt.s32	%p378, %r2804, 13;
	@%p378 bra 	BB5_638;

	setp.eq.s32	%p381, %r2804, 12;
	@%p381 bra 	BB5_681;
	bra.uni 	BB5_636;

BB5_681:
	mov.u32 	%r16248, 0;
	// inline asm
	prmt.b32 %r16265, %r16248, %r71, %r278;
	// inline asm
	ld.local.v2.u32 	{%r6289, %r6290}, [%rd8+8];
	// inline asm
	prmt.b32 %r16258, %r6290, %r6289, %r278;
	// inline asm
	ld.local.u32 	%r6145, [%rd8+8];
	ld.local.u32 	%r6146, [%rd8+4];
	// inline asm
	prmt.b32 %r16259, %r6145, %r6146, %r278;
	// inline asm
	ld.local.v2.u32 	{%r6291, %r6292}, [%rd8];
	// inline asm
	prmt.b32 %r16260, %r6292, %r6291, %r278;
	// inline asm
	ld.local.u32 	%r6153, [%rd8];
	ld.local.u32 	%r6154, [%rd7+12];
	// inline asm
	prmt.b32 %r16261, %r6153, %r6154, %r278;
	// inline asm
	ld.local.v2.u32 	{%r6293, %r6294}, [%rd7+8];
	// inline asm
	prmt.b32 %r16254, %r6294, %r6293, %r278;
	// inline asm
	ld.local.u32 	%r6161, [%rd7+8];
	ld.local.u32 	%r6162, [%rd7+4];
	// inline asm
	prmt.b32 %r16255, %r6161, %r6162, %r278;
	// inline asm
	ld.local.v2.u32 	{%r6295, %r6296}, [%rd7];
	// inline asm
	prmt.b32 %r16256, %r6296, %r6295, %r278;
	// inline asm
	ld.local.u32 	%r6169, [%rd7];
	ld.local.u32 	%r6170, [%rd6+12];
	// inline asm
	prmt.b32 %r16257, %r6169, %r6170, %r278;
	// inline asm
	ld.local.v2.u32 	{%r6297, %r6298}, [%rd6+8];
	// inline asm
	prmt.b32 %r16250, %r6298, %r6297, %r278;
	// inline asm
	ld.local.u32 	%r6177, [%rd6+8];
	ld.local.u32 	%r6178, [%rd6+4];
	// inline asm
	prmt.b32 %r16251, %r6177, %r6178, %r278;
	// inline asm
	ld.local.v2.u32 	{%r6299, %r6300}, [%rd6];
	// inline asm
	prmt.b32 %r16252, %r6300, %r6299, %r278;
	// inline asm
	ld.local.u32 	%r6185, [%rd6];
	ld.local.u32 	%r6186, [%rd5+12];
	// inline asm
	prmt.b32 %r16253, %r6185, %r6186, %r278;
	// inline asm
	ld.local.v2.u32 	{%r6301, %r6302}, [%rd5+8];
	// inline asm
	prmt.b32 %r6188, %r6302, %r6301, %r278;
	// inline asm
	st.local.u32 	[%rd8+12], %r6188;
	ld.local.u32 	%r6193, [%rd5+8];
	ld.local.u32 	%r6194, [%rd5+4];
	// inline asm
	prmt.b32 %r6192, %r6193, %r6194, %r278;
	// inline asm
	st.local.u32 	[%rd8+8], %r6192;
	ld.local.v2.u32 	{%r6303, %r6304}, [%rd5];
	// inline asm
	prmt.b32 %r6196, %r6304, %r6303, %r278;
	// inline asm
	st.local.u32 	[%rd8+4], %r6196;
	ld.local.u32 	%r6201, [%rd5];
	ld.local.u32 	%r6202, [%rd4+12];
	// inline asm
	prmt.b32 %r6200, %r6201, %r6202, %r278;
	// inline asm
	st.local.u32 	[%rd8], %r6200;
	ld.local.v2.u32 	{%r6305, %r6306}, [%rd4+8];
	// inline asm
	prmt.b32 %r6204, %r6306, %r6305, %r278;
	// inline asm
	st.local.u32 	[%rd7+12], %r6204;
	ld.local.u32 	%r6209, [%rd4+8];
	ld.local.u32 	%r6210, [%rd4+4];
	// inline asm
	prmt.b32 %r6208, %r6209, %r6210, %r278;
	// inline asm
	st.local.u32 	[%rd7+8], %r6208;
	ld.local.v2.u32 	{%r6307, %r6308}, [%rd4];
	// inline asm
	prmt.b32 %r6212, %r6308, %r6307, %r278;
	// inline asm
	st.local.u32 	[%rd7+4], %r6212;
	ld.local.u32 	%r6217, [%rd4];
	ld.local.u32 	%r6218, [%rd3+12];
	// inline asm
	prmt.b32 %r6216, %r6217, %r6218, %r278;
	// inline asm
	st.local.u32 	[%rd7], %r6216;
	ld.local.v2.u32 	{%r6309, %r6310}, [%rd3+8];
	// inline asm
	prmt.b32 %r6220, %r6310, %r6309, %r278;
	// inline asm
	st.local.u32 	[%rd6+12], %r6220;
	ld.local.u32 	%r6225, [%rd3+8];
	ld.local.u32 	%r6226, [%rd3+4];
	// inline asm
	prmt.b32 %r6224, %r6225, %r6226, %r278;
	// inline asm
	st.local.u32 	[%rd6+8], %r6224;
	ld.local.v2.u32 	{%r6311, %r6312}, [%rd3];
	// inline asm
	prmt.b32 %r6228, %r6312, %r6311, %r278;
	// inline asm
	st.local.u32 	[%rd6+4], %r6228;
	ld.local.u32 	%r6233, [%rd3];
	ld.local.u32 	%r6234, [%rd2+12];
	// inline asm
	prmt.b32 %r6232, %r6233, %r6234, %r278;
	// inline asm
	st.local.u32 	[%rd6], %r6232;
	ld.local.v2.u32 	{%r6313, %r6314}, [%rd2+8];
	// inline asm
	prmt.b32 %r6236, %r6314, %r6313, %r278;
	// inline asm
	st.local.u32 	[%rd5+12], %r6236;
	ld.local.u32 	%r6241, [%rd2+8];
	ld.local.u32 	%r6242, [%rd2+4];
	// inline asm
	prmt.b32 %r6240, %r6241, %r6242, %r278;
	// inline asm
	st.local.u32 	[%rd5+8], %r6240;
	ld.local.v2.u32 	{%r6315, %r6316}, [%rd2];
	// inline asm
	prmt.b32 %r6244, %r6316, %r6315, %r278;
	// inline asm
	st.local.u32 	[%rd5+4], %r6244;
	ld.local.u32 	%r6249, [%rd2];
	ld.local.u32 	%r6250, [%rd1+12];
	// inline asm
	prmt.b32 %r6248, %r6249, %r6250, %r278;
	// inline asm
	st.local.u32 	[%rd5], %r6248;
	ld.local.v2.u32 	{%r6317, %r6318}, [%rd1+8];
	// inline asm
	prmt.b32 %r6252, %r6318, %r6317, %r278;
	// inline asm
	st.local.u32 	[%rd4+12], %r6252;
	ld.local.u32 	%r6257, [%rd1+8];
	ld.local.u32 	%r6258, [%rd1+4];
	// inline asm
	prmt.b32 %r6256, %r6257, %r6258, %r278;
	// inline asm
	st.local.u32 	[%rd4+8], %r6256;
	ld.local.v2.u32 	{%r6319, %r6320}, [%rd1];
	// inline asm
	prmt.b32 %r6260, %r6320, %r6319, %r278;
	// inline asm
	st.local.u32 	[%rd4+4], %r6260;
	ld.local.u32 	%r6265, [%rd1];
	// inline asm
	prmt.b32 %r6264, %r6265, %r16248, %r278;
	// inline asm
	st.local.u32 	[%rd4], %r6264;
	st.local.v4.u32 	[%rd3], {%r16248, %r16248, %r16248, %r16248};
	st.local.v4.u32 	[%rd2], {%r16248, %r16248, %r16248, %r16248};
	st.local.v2.u32 	[%rd1+8], {%r16248, %r16248};
	mov.u64 	%rd930, 0;
	st.local.u64 	[%rd1], %rd930;
	mov.u32 	%r16249, %r16248;
	mov.u32 	%r16262, %r16248;
	mov.u32 	%r16263, %r16248;
	mov.u32 	%r16264, %r16248;
	bra.uni 	BB5_688;

BB5_665:
	setp.gt.s32	%p355, %r2804, 29;
	@%p355 bra 	BB5_669;

	setp.eq.s32	%p358, %r2804, 28;
	@%p358 bra 	BB5_673;
	bra.uni 	BB5_667;

BB5_673:
	mov.u32 	%r16248, 0;
	// inline asm
	prmt.b32 %r16281, %r16248, %r71, %r278;
	// inline asm
	ld.local.v2.u32 	{%r3449, %r3450}, [%rd8+8];
	// inline asm
	prmt.b32 %r16274, %r3450, %r3449, %r278;
	// inline asm
	ld.local.u32 	%r3321, [%rd8+8];
	ld.local.u32 	%r3322, [%rd8+4];
	// inline asm
	prmt.b32 %r16275, %r3321, %r3322, %r278;
	// inline asm
	ld.local.v2.u32 	{%r3451, %r3452}, [%rd8];
	// inline asm
	prmt.b32 %r16276, %r3452, %r3451, %r278;
	// inline asm
	ld.local.u32 	%r3329, [%rd8];
	ld.local.u32 	%r3330, [%rd7+12];
	// inline asm
	prmt.b32 %r16277, %r3329, %r3330, %r278;
	// inline asm
	ld.local.v2.u32 	{%r3453, %r3454}, [%rd7+8];
	// inline asm
	prmt.b32 %r16270, %r3454, %r3453, %r278;
	// inline asm
	ld.local.u32 	%r3337, [%rd7+8];
	ld.local.u32 	%r3338, [%rd7+4];
	// inline asm
	prmt.b32 %r16271, %r3337, %r3338, %r278;
	// inline asm
	ld.local.v2.u32 	{%r3455, %r3456}, [%rd7];
	// inline asm
	prmt.b32 %r16272, %r3456, %r3455, %r278;
	// inline asm
	ld.local.u32 	%r3345, [%rd7];
	ld.local.u32 	%r3346, [%rd6+12];
	// inline asm
	prmt.b32 %r16273, %r3345, %r3346, %r278;
	// inline asm
	ld.local.v2.u32 	{%r3457, %r3458}, [%rd6+8];
	// inline asm
	prmt.b32 %r16266, %r3458, %r3457, %r278;
	// inline asm
	ld.local.u32 	%r3353, [%rd6+8];
	ld.local.u32 	%r3354, [%rd6+4];
	// inline asm
	prmt.b32 %r16267, %r3353, %r3354, %r278;
	// inline asm
	ld.local.v2.u32 	{%r3459, %r3460}, [%rd6];
	// inline asm
	prmt.b32 %r16268, %r3460, %r3459, %r278;
	// inline asm
	ld.local.u32 	%r3361, [%rd6];
	ld.local.u32 	%r3362, [%rd5+12];
	// inline asm
	prmt.b32 %r16269, %r3361, %r3362, %r278;
	// inline asm
	ld.local.v2.u32 	{%r3461, %r3462}, [%rd5+8];
	// inline asm
	prmt.b32 %r16262, %r3462, %r3461, %r278;
	// inline asm
	ld.local.u32 	%r3369, [%rd5+8];
	ld.local.u32 	%r3370, [%rd5+4];
	// inline asm
	prmt.b32 %r16263, %r3369, %r3370, %r278;
	// inline asm
	ld.local.v2.u32 	{%r3463, %r3464}, [%rd5];
	// inline asm
	prmt.b32 %r16264, %r3464, %r3463, %r278;
	// inline asm
	ld.local.u32 	%r3377, [%rd5];
	ld.local.u32 	%r3378, [%rd4+12];
	// inline asm
	prmt.b32 %r16265, %r3377, %r3378, %r278;
	// inline asm
	ld.local.v2.u32 	{%r3465, %r3466}, [%rd4+8];
	// inline asm
	prmt.b32 %r16258, %r3466, %r3465, %r278;
	// inline asm
	ld.local.u32 	%r3385, [%rd4+8];
	ld.local.u32 	%r3386, [%rd4+4];
	// inline asm
	prmt.b32 %r16259, %r3385, %r3386, %r278;
	// inline asm
	ld.local.v2.u32 	{%r3467, %r3468}, [%rd4];
	// inline asm
	prmt.b32 %r16260, %r3468, %r3467, %r278;
	// inline asm
	ld.local.u32 	%r3393, [%rd4];
	ld.local.u32 	%r3394, [%rd3+12];
	// inline asm
	prmt.b32 %r16261, %r3393, %r3394, %r278;
	// inline asm
	ld.local.v2.u32 	{%r3469, %r3470}, [%rd3+8];
	// inline asm
	prmt.b32 %r16254, %r3470, %r3469, %r278;
	// inline asm
	ld.local.u32 	%r3401, [%rd3+8];
	ld.local.u32 	%r3402, [%rd3+4];
	// inline asm
	prmt.b32 %r16255, %r3401, %r3402, %r278;
	// inline asm
	ld.local.v2.u32 	{%r3471, %r3472}, [%rd3];
	// inline asm
	prmt.b32 %r16256, %r3472, %r3471, %r278;
	// inline asm
	ld.local.u32 	%r3409, [%rd3];
	ld.local.u32 	%r3410, [%rd2+12];
	// inline asm
	prmt.b32 %r16257, %r3409, %r3410, %r278;
	// inline asm
	ld.local.v2.u32 	{%r3473, %r3474}, [%rd2+8];
	// inline asm
	prmt.b32 %r16250, %r3474, %r3473, %r278;
	// inline asm
	ld.local.u32 	%r3417, [%rd2+8];
	ld.local.u32 	%r3418, [%rd2+4];
	// inline asm
	prmt.b32 %r16251, %r3417, %r3418, %r278;
	// inline asm
	ld.local.v2.u32 	{%r3475, %r3476}, [%rd2];
	// inline asm
	prmt.b32 %r16252, %r3476, %r3475, %r278;
	// inline asm
	ld.local.u32 	%r3425, [%rd2];
	ld.local.u32 	%r3426, [%rd1+12];
	// inline asm
	prmt.b32 %r16253, %r3425, %r3426, %r278;
	// inline asm
	ld.local.v2.u32 	{%r3477, %r3478}, [%rd1+8];
	// inline asm
	prmt.b32 %r3428, %r3478, %r3477, %r278;
	// inline asm
	st.local.u32 	[%rd8+12], %r3428;
	ld.local.u32 	%r3433, [%rd1+8];
	ld.local.u32 	%r3434, [%rd1+4];
	// inline asm
	prmt.b32 %r3432, %r3433, %r3434, %r278;
	// inline asm
	st.local.u32 	[%rd8+8], %r3432;
	ld.local.v2.u32 	{%r3479, %r3480}, [%rd1];
	// inline asm
	prmt.b32 %r3436, %r3480, %r3479, %r278;
	// inline asm
	st.local.u32 	[%rd8+4], %r3436;
	ld.local.u32 	%r3441, [%rd1];
	// inline asm
	prmt.b32 %r3440, %r3441, %r16248, %r278;
	// inline asm
	st.local.u32 	[%rd8], %r3440;
	st.local.v4.u32 	[%rd7], {%r16248, %r16248, %r16248, %r16248};
	st.local.v4.u32 	[%rd6], {%r16248, %r16248, %r16248, %r16248};
	st.local.v4.u32 	[%rd5], {%r16248, %r16248, %r16248, %r16248};
	st.local.v4.u32 	[%rd4], {%r16248, %r16248, %r16248, %r16248};
	st.local.v4.u32 	[%rd3], {%r16248, %r16248, %r16248, %r16248};
	st.local.v4.u32 	[%rd2], {%r16248, %r16248, %r16248, %r16248};
	st.local.v2.u32 	[%rd1+8], {%r16248, %r16248};
	mov.u64 	%rd914, 0;
	st.local.u64 	[%rd1], %rd914;
	mov.u32 	%r16249, %r16248;
	mov.u32 	%r16278, %r16248;
	mov.u32 	%r16279, %r16248;
	mov.u32 	%r16280, %r16248;
	bra.uni 	BB5_694;

BB5_615:
	setp.eq.s32	%p395, %r2804, 2;
	@%p395 bra 	BB5_692;
	bra.uni 	BB5_616;

BB5_692:
	mov.u32 	%r16248, 0;
	// inline asm
	prmt.b32 %r16251, %r16248, %r71, %r278;
	// inline asm
	ld.local.v2.u32 	{%r8194, %r8195}, [%rd8+8];
	// inline asm
	prmt.b32 %r16252, %r8195, %r8194, %r278;
	// inline asm
	ld.local.u32 	%r8040, [%rd8+8];
	ld.local.u32 	%r8041, [%rd8+4];
	// inline asm
	prmt.b32 %r16253, %r8040, %r8041, %r278;
	// inline asm
	ld.local.v2.u32 	{%r8196, %r8197}, [%rd8];
	// inline asm
	prmt.b32 %r8043, %r8197, %r8196, %r278;
	// inline asm
	st.local.u32 	[%rd8+12], %r8043;
	ld.local.u32 	%r8048, [%rd8];
	ld.local.u32 	%r8049, [%rd7+12];
	// inline asm
	prmt.b32 %r8047, %r8048, %r8049, %r278;
	// inline asm
	st.local.u32 	[%rd8+8], %r8047;
	ld.local.v2.u32 	{%r8198, %r8199}, [%rd7+8];
	// inline asm
	prmt.b32 %r8051, %r8199, %r8198, %r278;
	// inline asm
	st.local.u32 	[%rd8+4], %r8051;
	ld.local.u32 	%r8056, [%rd7+8];
	ld.local.u32 	%r8057, [%rd7+4];
	// inline asm
	prmt.b32 %r8055, %r8056, %r8057, %r278;
	// inline asm
	st.local.u32 	[%rd8], %r8055;
	ld.local.v2.u32 	{%r8200, %r8201}, [%rd7];
	// inline asm
	prmt.b32 %r8059, %r8201, %r8200, %r278;
	// inline asm
	st.local.u32 	[%rd7+12], %r8059;
	ld.local.u32 	%r8064, [%rd7];
	ld.local.u32 	%r8065, [%rd6+12];
	// inline asm
	prmt.b32 %r8063, %r8064, %r8065, %r278;
	// inline asm
	st.local.u32 	[%rd7+8], %r8063;
	ld.local.v2.u32 	{%r8202, %r8203}, [%rd6+8];
	// inline asm
	prmt.b32 %r8067, %r8203, %r8202, %r278;
	// inline asm
	st.local.u32 	[%rd7+4], %r8067;
	ld.local.u32 	%r8072, [%rd6+8];
	ld.local.u32 	%r8073, [%rd6+4];
	// inline asm
	prmt.b32 %r8071, %r8072, %r8073, %r278;
	// inline asm
	st.local.u32 	[%rd7], %r8071;
	ld.local.v2.u32 	{%r8204, %r8205}, [%rd6];
	// inline asm
	prmt.b32 %r8075, %r8205, %r8204, %r278;
	// inline asm
	st.local.u32 	[%rd6+12], %r8075;
	ld.local.u32 	%r8080, [%rd6];
	ld.local.u32 	%r8081, [%rd5+12];
	// inline asm
	prmt.b32 %r8079, %r8080, %r8081, %r278;
	// inline asm
	st.local.u32 	[%rd6+8], %r8079;
	ld.local.v2.u32 	{%r8206, %r8207}, [%rd5+8];
	// inline asm
	prmt.b32 %r8083, %r8207, %r8206, %r278;
	// inline asm
	st.local.u32 	[%rd6+4], %r8083;
	ld.local.u32 	%r8088, [%rd5+8];
	ld.local.u32 	%r8089, [%rd5+4];
	// inline asm
	prmt.b32 %r8087, %r8088, %r8089, %r278;
	// inline asm
	st.local.u32 	[%rd6], %r8087;
	ld.local.v2.u32 	{%r8208, %r8209}, [%rd5];
	// inline asm
	prmt.b32 %r8091, %r8209, %r8208, %r278;
	// inline asm
	st.local.u32 	[%rd5+12], %r8091;
	ld.local.u32 	%r8096, [%rd5];
	ld.local.u32 	%r8097, [%rd4+12];
	// inline asm
	prmt.b32 %r8095, %r8096, %r8097, %r278;
	// inline asm
	st.local.u32 	[%rd5+8], %r8095;
	ld.local.v2.u32 	{%r8210, %r8211}, [%rd4+8];
	// inline asm
	prmt.b32 %r8099, %r8211, %r8210, %r278;
	// inline asm
	st.local.u32 	[%rd5+4], %r8099;
	ld.local.u32 	%r8104, [%rd4+8];
	ld.local.u32 	%r8105, [%rd4+4];
	// inline asm
	prmt.b32 %r8103, %r8104, %r8105, %r278;
	// inline asm
	st.local.u32 	[%rd5], %r8103;
	ld.local.v2.u32 	{%r8212, %r8213}, [%rd4];
	// inline asm
	prmt.b32 %r8107, %r8213, %r8212, %r278;
	// inline asm
	st.local.u32 	[%rd4+12], %r8107;
	ld.local.u32 	%r8112, [%rd4];
	ld.local.u32 	%r8113, [%rd3+12];
	// inline asm
	prmt.b32 %r8111, %r8112, %r8113, %r278;
	// inline asm
	st.local.u32 	[%rd4+8], %r8111;
	ld.local.v2.u32 	{%r8214, %r8215}, [%rd3+8];
	// inline asm
	prmt.b32 %r8115, %r8215, %r8214, %r278;
	// inline asm
	st.local.u32 	[%rd4+4], %r8115;
	ld.local.u32 	%r8120, [%rd3+8];
	ld.local.u32 	%r8121, [%rd3+4];
	// inline asm
	prmt.b32 %r8119, %r8120, %r8121, %r278;
	// inline asm
	st.local.u32 	[%rd4], %r8119;
	ld.local.v2.u32 	{%r8216, %r8217}, [%rd3];
	// inline asm
	prmt.b32 %r8123, %r8217, %r8216, %r278;
	// inline asm
	st.local.u32 	[%rd3+12], %r8123;
	ld.local.u32 	%r8128, [%rd3];
	ld.local.u32 	%r8129, [%rd2+12];
	// inline asm
	prmt.b32 %r8127, %r8128, %r8129, %r278;
	// inline asm
	st.local.u32 	[%rd3+8], %r8127;
	ld.local.v2.u32 	{%r8218, %r8219}, [%rd2+8];
	// inline asm
	prmt.b32 %r8131, %r8219, %r8218, %r278;
	// inline asm
	st.local.u32 	[%rd3+4], %r8131;
	ld.local.u32 	%r8136, [%rd2+8];
	ld.local.u32 	%r8137, [%rd2+4];
	// inline asm
	prmt.b32 %r8135, %r8136, %r8137, %r278;
	// inline asm
	st.local.u32 	[%rd3], %r8135;
	ld.local.v2.u32 	{%r8220, %r8221}, [%rd2];
	// inline asm
	prmt.b32 %r8139, %r8221, %r8220, %r278;
	// inline asm
	st.local.u32 	[%rd2+12], %r8139;
	ld.local.u32 	%r8144, [%rd2];
	ld.local.u32 	%r8145, [%rd1+12];
	// inline asm
	prmt.b32 %r8143, %r8144, %r8145, %r278;
	// inline asm
	st.local.u32 	[%rd2+8], %r8143;
	ld.local.v2.u32 	{%r8222, %r8223}, [%rd1+8];
	// inline asm
	prmt.b32 %r8147, %r8223, %r8222, %r278;
	// inline asm
	st.local.u32 	[%rd2+4], %r8147;
	ld.local.u32 	%r8152, [%rd1+8];
	ld.local.u32 	%r8153, [%rd1+4];
	// inline asm
	prmt.b32 %r8151, %r8152, %r8153, %r278;
	// inline asm
	st.local.u32 	[%rd2], %r8151;
	ld.local.v2.u32 	{%r8224, %r8225}, [%rd1];
	// inline asm
	prmt.b32 %r8155, %r8225, %r8224, %r278;
	// inline asm
	st.local.u32 	[%rd1+12], %r8155;
	ld.local.u32 	%r8160, [%rd1];
	// inline asm
	prmt.b32 %r8159, %r8160, %r16248, %r278;
	// inline asm
	st.local.u32 	[%rd1+8], %r8159;
	mov.u64 	%rd940, 0;
	st.local.u64 	[%rd1], %rd940;
	mov.u32 	%r16249, %r16248;
	mov.u32 	%r16250, %r16248;
	bra.uni 	BB5_618;

BB5_647:
	setp.eq.s32	%p372, %r2804, 18;
	@%p372 bra 	BB5_678;
	bra.uni 	BB5_648;

BB5_678:
	mov.u32 	%r16248, 0;
	// inline asm
	prmt.b32 %r16267, %r16248, %r71, %r278;
	// inline asm
	ld.local.v2.u32 	{%r5194, %r5195}, [%rd8+8];
	// inline asm
	prmt.b32 %r16268, %r5195, %r5194, %r278;
	// inline asm
	ld.local.u32 	%r5056, [%rd8+8];
	ld.local.u32 	%r5057, [%rd8+4];
	// inline asm
	prmt.b32 %r16269, %r5056, %r5057, %r278;
	// inline asm
	ld.local.v2.u32 	{%r5196, %r5197}, [%rd8];
	// inline asm
	prmt.b32 %r16262, %r5197, %r5196, %r278;
	// inline asm
	ld.local.u32 	%r5064, [%rd8];
	ld.local.u32 	%r5065, [%rd7+12];
	// inline asm
	prmt.b32 %r16263, %r5064, %r5065, %r278;
	// inline asm
	ld.local.v2.u32 	{%r5198, %r5199}, [%rd7+8];
	// inline asm
	prmt.b32 %r16264, %r5199, %r5198, %r278;
	// inline asm
	ld.local.u32 	%r5072, [%rd7+8];
	ld.local.u32 	%r5073, [%rd7+4];
	// inline asm
	prmt.b32 %r16265, %r5072, %r5073, %r278;
	// inline asm
	ld.local.v2.u32 	{%r5200, %r5201}, [%rd7];
	// inline asm
	prmt.b32 %r16258, %r5201, %r5200, %r278;
	// inline asm
	ld.local.u32 	%r5080, [%rd7];
	ld.local.u32 	%r5081, [%rd6+12];
	// inline asm
	prmt.b32 %r16259, %r5080, %r5081, %r278;
	// inline asm
	ld.local.v2.u32 	{%r5202, %r5203}, [%rd6+8];
	// inline asm
	prmt.b32 %r16260, %r5203, %r5202, %r278;
	// inline asm
	ld.local.u32 	%r5088, [%rd6+8];
	ld.local.u32 	%r5089, [%rd6+4];
	// inline asm
	prmt.b32 %r16261, %r5088, %r5089, %r278;
	// inline asm
	ld.local.v2.u32 	{%r5204, %r5205}, [%rd6];
	// inline asm
	prmt.b32 %r16254, %r5205, %r5204, %r278;
	// inline asm
	ld.local.u32 	%r5096, [%rd6];
	ld.local.u32 	%r5097, [%rd5+12];
	// inline asm
	prmt.b32 %r16255, %r5096, %r5097, %r278;
	// inline asm
	ld.local.v2.u32 	{%r5206, %r5207}, [%rd5+8];
	// inline asm
	prmt.b32 %r16256, %r5207, %r5206, %r278;
	// inline asm
	ld.local.u32 	%r5104, [%rd5+8];
	ld.local.u32 	%r5105, [%rd5+4];
	// inline asm
	prmt.b32 %r16257, %r5104, %r5105, %r278;
	// inline asm
	ld.local.v2.u32 	{%r5208, %r5209}, [%rd5];
	// inline asm
	prmt.b32 %r16250, %r5209, %r5208, %r278;
	// inline asm
	ld.local.u32 	%r5112, [%rd5];
	ld.local.u32 	%r5113, [%rd4+12];
	// inline asm
	prmt.b32 %r16251, %r5112, %r5113, %r278;
	// inline asm
	ld.local.v2.u32 	{%r5210, %r5211}, [%rd4+8];
	// inline asm
	prmt.b32 %r16252, %r5211, %r5210, %r278;
	// inline asm
	ld.local.u32 	%r5120, [%rd4+8];
	ld.local.u32 	%r5121, [%rd4+4];
	// inline asm
	prmt.b32 %r16253, %r5120, %r5121, %r278;
	// inline asm
	ld.local.v2.u32 	{%r5212, %r5213}, [%rd4];
	// inline asm
	prmt.b32 %r5123, %r5213, %r5212, %r278;
	// inline asm
	st.local.u32 	[%rd8+12], %r5123;
	ld.local.u32 	%r5128, [%rd4];
	ld.local.u32 	%r5129, [%rd3+12];
	// inline asm
	prmt.b32 %r5127, %r5128, %r5129, %r278;
	// inline asm
	st.local.u32 	[%rd8+8], %r5127;
	ld.local.v2.u32 	{%r5214, %r5215}, [%rd3+8];
	// inline asm
	prmt.b32 %r5131, %r5215, %r5214, %r278;
	// inline asm
	st.local.u32 	[%rd8+4], %r5131;
	ld.local.u32 	%r5136, [%rd3+8];
	ld.local.u32 	%r5137, [%rd3+4];
	// inline asm
	prmt.b32 %r5135, %r5136, %r5137, %r278;
	// inline asm
	st.local.u32 	[%rd8], %r5135;
	ld.local.v2.u32 	{%r5216, %r5217}, [%rd3];
	// inline asm
	prmt.b32 %r5139, %r5217, %r5216, %r278;
	// inline asm
	st.local.u32 	[%rd7+12], %r5139;
	ld.local.u32 	%r5144, [%rd3];
	ld.local.u32 	%r5145, [%rd2+12];
	// inline asm
	prmt.b32 %r5143, %r5144, %r5145, %r278;
	// inline asm
	st.local.u32 	[%rd7+8], %r5143;
	ld.local.v2.u32 	{%r5218, %r5219}, [%rd2+8];
	// inline asm
	prmt.b32 %r5147, %r5219, %r5218, %r278;
	// inline asm
	st.local.u32 	[%rd7+4], %r5147;
	ld.local.u32 	%r5152, [%rd2+8];
	ld.local.u32 	%r5153, [%rd2+4];
	// inline asm
	prmt.b32 %r5151, %r5152, %r5153, %r278;
	// inline asm
	st.local.u32 	[%rd7], %r5151;
	ld.local.v2.u32 	{%r5220, %r5221}, [%rd2];
	// inline asm
	prmt.b32 %r5155, %r5221, %r5220, %r278;
	// inline asm
	st.local.u32 	[%rd6+12], %r5155;
	ld.local.u32 	%r5160, [%rd2];
	ld.local.u32 	%r5161, [%rd1+12];
	// inline asm
	prmt.b32 %r5159, %r5160, %r5161, %r278;
	// inline asm
	st.local.u32 	[%rd6+8], %r5159;
	ld.local.v2.u32 	{%r5222, %r5223}, [%rd1+8];
	// inline asm
	prmt.b32 %r5163, %r5223, %r5222, %r278;
	// inline asm
	st.local.u32 	[%rd6+4], %r5163;
	ld.local.u32 	%r5168, [%rd1+8];
	ld.local.u32 	%r5169, [%rd1+4];
	// inline asm
	prmt.b32 %r5167, %r5168, %r5169, %r278;
	// inline asm
	st.local.u32 	[%rd6], %r5167;
	ld.local.v2.u32 	{%r5224, %r5225}, [%rd1];
	// inline asm
	prmt.b32 %r5171, %r5225, %r5224, %r278;
	// inline asm
	st.local.u32 	[%rd5+12], %r5171;
	ld.local.u32 	%r5176, [%rd1];
	// inline asm
	prmt.b32 %r5175, %r5176, %r16248, %r278;
	// inline asm
	st.local.u32 	[%rd5+8], %r5175;
	st.local.v2.u32 	[%rd5], {%r16248, %r16248};
	st.local.u32 	[%rd4+12], %r16248;
	st.local.u32 	[%rd4+8], %r16248;
	st.local.u32 	[%rd4+4], %r16248;
	st.local.u32 	[%rd4], %r16248;
	st.local.u32 	[%rd3+12], %r16248;
	st.local.u32 	[%rd3+8], %r16248;
	st.local.u32 	[%rd3+4], %r16248;
	st.local.u32 	[%rd3], %r16248;
	st.local.u32 	[%rd2+12], %r16248;
	st.local.u32 	[%rd2+8], %r16248;
	st.local.u32 	[%rd2+4], %r16248;
	st.local.u32 	[%rd2], %r16248;
	st.local.u32 	[%rd1+12], %r16248;
	st.local.u32 	[%rd1+8], %r16248;
	mov.u64 	%rd924, 0;
	st.local.u32 	[%rd1+4], %rd924;
	st.local.u32 	[%rd1], %rd924;
	mov.u32 	%r16249, %r16248;
	mov.u32 	%r16266, %r16248;
	bra.uni 	BB5_689;

BB5_631:
	setp.eq.s32	%p384, %r2804, 10;
	@%p384 bra 	BB5_682;
	bra.uni 	BB5_632;

BB5_682:
	mov.u32 	%r16248, 0;
	// inline asm
	prmt.b32 %r16259, %r16248, %r71, %r278;
	// inline asm
	ld.local.v2.u32 	{%r6662, %r6663}, [%rd8+8];
	// inline asm
	prmt.b32 %r16260, %r6663, %r6662, %r278;
	// inline asm
	ld.local.u32 	%r6516, [%rd8+8];
	ld.local.u32 	%r6517, [%rd8+4];
	// inline asm
	prmt.b32 %r16261, %r6516, %r6517, %r278;
	// inline asm
	ld.local.v2.u32 	{%r6664, %r6665}, [%rd8];
	// inline asm
	prmt.b32 %r16254, %r6665, %r6664, %r278;
	// inline asm
	ld.local.u32 	%r6524, [%rd8];
	ld.local.u32 	%r6525, [%rd7+12];
	// inline asm
	prmt.b32 %r16255, %r6524, %r6525, %r278;
	// inline asm
	ld.local.v2.u32 	{%r6666, %r6667}, [%rd7+8];
	// inline asm
	prmt.b32 %r16256, %r6667, %r6666, %r278;
	// inline asm
	ld.local.u32 	%r6532, [%rd7+8];
	ld.local.u32 	%r6533, [%rd7+4];
	// inline asm
	prmt.b32 %r16257, %r6532, %r6533, %r278;
	// inline asm
	ld.local.v2.u32 	{%r6668, %r6669}, [%rd7];
	// inline asm
	prmt.b32 %r16250, %r6669, %r6668, %r278;
	// inline asm
	ld.local.u32 	%r6540, [%rd7];
	ld.local.u32 	%r6541, [%rd6+12];
	// inline asm
	prmt.b32 %r16251, %r6540, %r6541, %r278;
	// inline asm
	ld.local.v2.u32 	{%r6670, %r6671}, [%rd6+8];
	// inline asm
	prmt.b32 %r16252, %r6671, %r6670, %r278;
	// inline asm
	ld.local.u32 	%r6548, [%rd6+8];
	ld.local.u32 	%r6549, [%rd6+4];
	// inline asm
	prmt.b32 %r16253, %r6548, %r6549, %r278;
	// inline asm
	ld.local.v2.u32 	{%r6672, %r6673}, [%rd6];
	// inline asm
	prmt.b32 %r6551, %r6673, %r6672, %r278;
	// inline asm
	st.local.u32 	[%rd8+12], %r6551;
	ld.local.u32 	%r6556, [%rd6];
	ld.local.u32 	%r6557, [%rd5+12];
	// inline asm
	prmt.b32 %r6555, %r6556, %r6557, %r278;
	// inline asm
	st.local.u32 	[%rd8+8], %r6555;
	ld.local.v2.u32 	{%r6674, %r6675}, [%rd5+8];
	// inline asm
	prmt.b32 %r6559, %r6675, %r6674, %r278;
	// inline asm
	st.local.u32 	[%rd8+4], %r6559;
	ld.local.u32 	%r6564, [%rd5+8];
	ld.local.u32 	%r6565, [%rd5+4];
	// inline asm
	prmt.b32 %r6563, %r6564, %r6565, %r278;
	// inline asm
	st.local.u32 	[%rd8], %r6563;
	ld.local.v2.u32 	{%r6676, %r6677}, [%rd5];
	// inline asm
	prmt.b32 %r6567, %r6677, %r6676, %r278;
	// inline asm
	st.local.u32 	[%rd7+12], %r6567;
	ld.local.u32 	%r6572, [%rd5];
	ld.local.u32 	%r6573, [%rd4+12];
	// inline asm
	prmt.b32 %r6571, %r6572, %r6573, %r278;
	// inline asm
	st.local.u32 	[%rd7+8], %r6571;
	ld.local.v2.u32 	{%r6678, %r6679}, [%rd4+8];
	// inline asm
	prmt.b32 %r6575, %r6679, %r6678, %r278;
	// inline asm
	st.local.u32 	[%rd7+4], %r6575;
	ld.local.u32 	%r6580, [%rd4+8];
	ld.local.u32 	%r6581, [%rd4+4];
	// inline asm
	prmt.b32 %r6579, %r6580, %r6581, %r278;
	// inline asm
	st.local.u32 	[%rd7], %r6579;
	ld.local.v2.u32 	{%r6680, %r6681}, [%rd4];
	// inline asm
	prmt.b32 %r6583, %r6681, %r6680, %r278;
	// inline asm
	st.local.u32 	[%rd6+12], %r6583;
	ld.local.u32 	%r6588, [%rd4];
	ld.local.u32 	%r6589, [%rd3+12];
	// inline asm
	prmt.b32 %r6587, %r6588, %r6589, %r278;
	// inline asm
	st.local.u32 	[%rd6+8], %r6587;
	ld.local.v2.u32 	{%r6682, %r6683}, [%rd3+8];
	// inline asm
	prmt.b32 %r6591, %r6683, %r6682, %r278;
	// inline asm
	st.local.u32 	[%rd6+4], %r6591;
	ld.local.u32 	%r6596, [%rd3+8];
	ld.local.u32 	%r6597, [%rd3+4];
	// inline asm
	prmt.b32 %r6595, %r6596, %r6597, %r278;
	// inline asm
	st.local.u32 	[%rd6], %r6595;
	ld.local.v2.u32 	{%r6684, %r6685}, [%rd3];
	// inline asm
	prmt.b32 %r6599, %r6685, %r6684, %r278;
	// inline asm
	st.local.u32 	[%rd5+12], %r6599;
	ld.local.u32 	%r6604, [%rd3];
	ld.local.u32 	%r6605, [%rd2+12];
	// inline asm
	prmt.b32 %r6603, %r6604, %r6605, %r278;
	// inline asm
	st.local.u32 	[%rd5+8], %r6603;
	ld.local.v2.u32 	{%r6686, %r6687}, [%rd2+8];
	// inline asm
	prmt.b32 %r6607, %r6687, %r6686, %r278;
	// inline asm
	st.local.u32 	[%rd5+4], %r6607;
	ld.local.u32 	%r6612, [%rd2+8];
	ld.local.u32 	%r6613, [%rd2+4];
	// inline asm
	prmt.b32 %r6611, %r6612, %r6613, %r278;
	// inline asm
	st.local.u32 	[%rd5], %r6611;
	ld.local.v2.u32 	{%r6688, %r6689}, [%rd2];
	// inline asm
	prmt.b32 %r6615, %r6689, %r6688, %r278;
	// inline asm
	st.local.u32 	[%rd4+12], %r6615;
	ld.local.u32 	%r6620, [%rd2];
	ld.local.u32 	%r6621, [%rd1+12];
	// inline asm
	prmt.b32 %r6619, %r6620, %r6621, %r278;
	// inline asm
	st.local.u32 	[%rd4+8], %r6619;
	ld.local.v2.u32 	{%r6690, %r6691}, [%rd1+8];
	// inline asm
	prmt.b32 %r6623, %r6691, %r6690, %r278;
	// inline asm
	st.local.u32 	[%rd4+4], %r6623;
	ld.local.u32 	%r6628, [%rd1+8];
	ld.local.u32 	%r6629, [%rd1+4];
	// inline asm
	prmt.b32 %r6627, %r6628, %r6629, %r278;
	// inline asm
	st.local.u32 	[%rd4], %r6627;
	ld.local.v2.u32 	{%r6692, %r6693}, [%rd1];
	// inline asm
	prmt.b32 %r6631, %r6693, %r6692, %r278;
	// inline asm
	st.local.u32 	[%rd3+12], %r6631;
	ld.local.u32 	%r6636, [%rd1];
	// inline asm
	prmt.b32 %r6635, %r6636, %r16248, %r278;
	// inline asm
	st.local.u32 	[%rd3+8], %r6635;
	st.local.v2.u32 	[%rd3], {%r16248, %r16248};
	st.local.u32 	[%rd2+12], %r16248;
	st.local.u32 	[%rd2+8], %r16248;
	st.local.u32 	[%rd2+4], %r16248;
	st.local.u32 	[%rd2], %r16248;
	st.local.u32 	[%rd1+12], %r16248;
	st.local.u32 	[%rd1+8], %r16248;
	mov.u64 	%rd932, 0;
	st.local.u32 	[%rd1+4], %rd932;
	st.local.u32 	[%rd1], %rd932;
	mov.u32 	%r16249, %r16248;
	mov.u32 	%r16258, %r16248;
	bra.uni 	BB5_687;

BB5_662:
	setp.eq.s32	%p361, %r2804, 26;
	@%p361 bra 	BB5_674;
	bra.uni 	BB5_663;

BB5_674:
	mov.u32 	%r16248, 0;
	// inline asm
	prmt.b32 %r16275, %r16248, %r71, %r278;
	// inline asm
	ld.local.v2.u32 	{%r3790, %r3791}, [%rd8+8];
	// inline asm
	prmt.b32 %r16276, %r3791, %r3790, %r278;
	// inline asm
	ld.local.u32 	%r3660, [%rd8+8];
	ld.local.u32 	%r3661, [%rd8+4];
	// inline asm
	prmt.b32 %r16277, %r3660, %r3661, %r278;
	// inline asm
	ld.local.v2.u32 	{%r3792, %r3793}, [%rd8];
	// inline asm
	prmt.b32 %r16270, %r3793, %r3792, %r278;
	// inline asm
	ld.local.u32 	%r3668, [%rd8];
	ld.local.u32 	%r3669, [%rd7+12];
	// inline asm
	prmt.b32 %r16271, %r3668, %r3669, %r278;
	// inline asm
	ld.local.v2.u32 	{%r3794, %r3795}, [%rd7+8];
	// inline asm
	prmt.b32 %r16272, %r3795, %r3794, %r278;
	// inline asm
	ld.local.u32 	%r3676, [%rd7+8];
	ld.local.u32 	%r3677, [%rd7+4];
	// inline asm
	prmt.b32 %r16273, %r3676, %r3677, %r278;
	// inline asm
	ld.local.v2.u32 	{%r3796, %r3797}, [%rd7];
	// inline asm
	prmt.b32 %r16266, %r3797, %r3796, %r278;
	// inline asm
	ld.local.u32 	%r3684, [%rd7];
	ld.local.u32 	%r3685, [%rd6+12];
	// inline asm
	prmt.b32 %r16267, %r3684, %r3685, %r278;
	// inline asm
	ld.local.v2.u32 	{%r3798, %r3799}, [%rd6+8];
	// inline asm
	prmt.b32 %r16268, %r3799, %r3798, %r278;
	// inline asm
	ld.local.u32 	%r3692, [%rd6+8];
	ld.local.u32 	%r3693, [%rd6+4];
	// inline asm
	prmt.b32 %r16269, %r3692, %r3693, %r278;
	// inline asm
	ld.local.v2.u32 	{%r3800, %r3801}, [%rd6];
	// inline asm
	prmt.b32 %r16262, %r3801, %r3800, %r278;
	// inline asm
	ld.local.u32 	%r3700, [%rd6];
	ld.local.u32 	%r3701, [%rd5+12];
	// inline asm
	prmt.b32 %r16263, %r3700, %r3701, %r278;
	// inline asm
	ld.local.v2.u32 	{%r3802, %r3803}, [%rd5+8];
	// inline asm
	prmt.b32 %r16264, %r3803, %r3802, %r278;
	// inline asm
	ld.local.u32 	%r3708, [%rd5+8];
	ld.local.u32 	%r3709, [%rd5+4];
	// inline asm
	prmt.b32 %r16265, %r3708, %r3709, %r278;
	// inline asm
	ld.local.v2.u32 	{%r3804, %r3805}, [%rd5];
	// inline asm
	prmt.b32 %r16258, %r3805, %r3804, %r278;
	// inline asm
	ld.local.u32 	%r3716, [%rd5];
	ld.local.u32 	%r3717, [%rd4+12];
	// inline asm
	prmt.b32 %r16259, %r3716, %r3717, %r278;
	// inline asm
	ld.local.v2.u32 	{%r3806, %r3807}, [%rd4+8];
	// inline asm
	prmt.b32 %r16260, %r3807, %r3806, %r278;
	// inline asm
	ld.local.u32 	%r3724, [%rd4+8];
	ld.local.u32 	%r3725, [%rd4+4];
	// inline asm
	prmt.b32 %r16261, %r3724, %r3725, %r278;
	// inline asm
	ld.local.v2.u32 	{%r3808, %r3809}, [%rd4];
	// inline asm
	prmt.b32 %r16254, %r3809, %r3808, %r278;
	// inline asm
	ld.local.u32 	%r3732, [%rd4];
	ld.local.u32 	%r3733, [%rd3+12];
	// inline asm
	prmt.b32 %r16255, %r3732, %r3733, %r278;
	// inline asm
	ld.local.v2.u32 	{%r3810, %r3811}, [%rd3+8];
	// inline asm
	prmt.b32 %r16256, %r3811, %r3810, %r278;
	// inline asm
	ld.local.u32 	%r3740, [%rd3+8];
	ld.local.u32 	%r3741, [%rd3+4];
	// inline asm
	prmt.b32 %r16257, %r3740, %r3741, %r278;
	// inline asm
	ld.local.v2.u32 	{%r3812, %r3813}, [%rd3];
	// inline asm
	prmt.b32 %r16250, %r3813, %r3812, %r278;
	// inline asm
	ld.local.u32 	%r3748, [%rd3];
	ld.local.u32 	%r3749, [%rd2+12];
	// inline asm
	prmt.b32 %r16251, %r3748, %r3749, %r278;
	// inline asm
	ld.local.v2.u32 	{%r3814, %r3815}, [%rd2+8];
	// inline asm
	prmt.b32 %r16252, %r3815, %r3814, %r278;
	// inline asm
	ld.local.u32 	%r3756, [%rd2+8];
	ld.local.u32 	%r3757, [%rd2+4];
	// inline asm
	prmt.b32 %r16253, %r3756, %r3757, %r278;
	// inline asm
	ld.local.v2.u32 	{%r3816, %r3817}, [%rd2];
	// inline asm
	prmt.b32 %r3759, %r3817, %r3816, %r278;
	// inline asm
	st.local.u32 	[%rd8+12], %r3759;
	ld.local.u32 	%r3764, [%rd2];
	ld.local.u32 	%r3765, [%rd1+12];
	// inline asm
	prmt.b32 %r3763, %r3764, %r3765, %r278;
	// inline asm
	st.local.u32 	[%rd8+8], %r3763;
	ld.local.v2.u32 	{%r3818, %r3819}, [%rd1+8];
	// inline asm
	prmt.b32 %r3767, %r3819, %r3818, %r278;
	// inline asm
	st.local.u32 	[%rd8+4], %r3767;
	ld.local.u32 	%r3772, [%rd1+8];
	ld.local.u32 	%r3773, [%rd1+4];
	// inline asm
	prmt.b32 %r3771, %r3772, %r3773, %r278;
	// inline asm
	st.local.u32 	[%rd8], %r3771;
	ld.local.v2.u32 	{%r3820, %r3821}, [%rd1];
	// inline asm
	prmt.b32 %r3775, %r3821, %r3820, %r278;
	// inline asm
	st.local.u32 	[%rd7+12], %r3775;
	ld.local.u32 	%r3780, [%rd1];
	// inline asm
	prmt.b32 %r3779, %r3780, %r16248, %r278;
	// inline asm
	st.local.u32 	[%rd7+8], %r3779;
	st.local.v2.u32 	[%rd7], {%r16248, %r16248};
	st.local.u32 	[%rd6+12], %r16248;
	st.local.u32 	[%rd6+8], %r16248;
	st.local.u32 	[%rd6+4], %r16248;
	st.local.u32 	[%rd6], %r16248;
	st.local.u32 	[%rd5+12], %r16248;
	st.local.u32 	[%rd5+8], %r16248;
	st.local.u32 	[%rd5+4], %r16248;
	st.local.u32 	[%rd5], %r16248;
	st.local.u32 	[%rd4+12], %r16248;
	st.local.u32 	[%rd4+8], %r16248;
	st.local.u32 	[%rd4+4], %r16248;
	st.local.u32 	[%rd4], %r16248;
	st.local.u32 	[%rd3+12], %r16248;
	st.local.u32 	[%rd3+8], %r16248;
	st.local.u32 	[%rd3+4], %r16248;
	st.local.u32 	[%rd3], %r16248;
	st.local.u32 	[%rd2+12], %r16248;
	st.local.u32 	[%rd2+8], %r16248;
	st.local.u32 	[%rd2+4], %r16248;
	st.local.u32 	[%rd2], %r16248;
	st.local.u32 	[%rd1+12], %r16248;
	st.local.u32 	[%rd1+8], %r16248;
	mov.u64 	%rd916, 0;
	st.local.u32 	[%rd1+4], %rd916;
	st.local.u32 	[%rd1], %rd916;
	mov.u32 	%r16249, %r16248;
	mov.u32 	%r16274, %r16248;
	bra.uni 	BB5_691;

BB5_623:
	setp.eq.s32	%p390, %r2804, 6;
	@%p390 bra 	BB5_684;
	bra.uni 	BB5_624;

BB5_684:
	mov.u32 	%r16248, 0;
	// inline asm
	prmt.b32 %r16255, %r16248, %r71, %r278;
	// inline asm
	ld.local.v2.u32 	{%r7420, %r7421}, [%rd8+8];
	// inline asm
	prmt.b32 %r16256, %r7421, %r7420, %r278;
	// inline asm
	ld.local.u32 	%r7270, [%rd8+8];
	ld.local.u32 	%r7271, [%rd8+4];
	// inline asm
	prmt.b32 %r16257, %r7270, %r7271, %r278;
	// inline asm
	ld.local.v2.u32 	{%r7422, %r7423}, [%rd8];
	// inline asm
	prmt.b32 %r16250, %r7423, %r7422, %r278;
	// inline asm
	ld.local.u32 	%r7278, [%rd8];
	ld.local.u32 	%r7279, [%rd7+12];
	// inline asm
	prmt.b32 %r16251, %r7278, %r7279, %r278;
	// inline asm
	ld.local.v2.u32 	{%r7424, %r7425}, [%rd7+8];
	// inline asm
	prmt.b32 %r16252, %r7425, %r7424, %r278;
	// inline asm
	ld.local.u32 	%r7286, [%rd7+8];
	ld.local.u32 	%r7287, [%rd7+4];
	// inline asm
	prmt.b32 %r16253, %r7286, %r7287, %r278;
	// inline asm
	ld.local.v2.u32 	{%r7426, %r7427}, [%rd7];
	// inline asm
	prmt.b32 %r7289, %r7427, %r7426, %r278;
	// inline asm
	st.local.u32 	[%rd8+12], %r7289;
	ld.local.u32 	%r7294, [%rd7];
	ld.local.u32 	%r7295, [%rd6+12];
	// inline asm
	prmt.b32 %r7293, %r7294, %r7295, %r278;
	// inline asm
	st.local.u32 	[%rd8+8], %r7293;
	ld.local.v2.u32 	{%r7428, %r7429}, [%rd6+8];
	// inline asm
	prmt.b32 %r7297, %r7429, %r7428, %r278;
	// inline asm
	st.local.u32 	[%rd8+4], %r7297;
	ld.local.u32 	%r7302, [%rd6+8];
	ld.local.u32 	%r7303, [%rd6+4];
	// inline asm
	prmt.b32 %r7301, %r7302, %r7303, %r278;
	// inline asm
	st.local.u32 	[%rd8], %r7301;
	ld.local.v2.u32 	{%r7430, %r7431}, [%rd6];
	// inline asm
	prmt.b32 %r7305, %r7431, %r7430, %r278;
	// inline asm
	st.local.u32 	[%rd7+12], %r7305;
	ld.local.u32 	%r7310, [%rd6];
	ld.local.u32 	%r7311, [%rd5+12];
	// inline asm
	prmt.b32 %r7309, %r7310, %r7311, %r278;
	// inline asm
	st.local.u32 	[%rd7+8], %r7309;
	ld.local.v2.u32 	{%r7432, %r7433}, [%rd5+8];
	// inline asm
	prmt.b32 %r7313, %r7433, %r7432, %r278;
	// inline asm
	st.local.u32 	[%rd7+4], %r7313;
	ld.local.u32 	%r7318, [%rd5+8];
	ld.local.u32 	%r7319, [%rd5+4];
	// inline asm
	prmt.b32 %r7317, %r7318, %r7319, %r278;
	// inline asm
	st.local.u32 	[%rd7], %r7317;
	ld.local.v2.u32 	{%r7434, %r7435}, [%rd5];
	// inline asm
	prmt.b32 %r7321, %r7435, %r7434, %r278;
	// inline asm
	st.local.u32 	[%rd6+12], %r7321;
	ld.local.u32 	%r7326, [%rd5];
	ld.local.u32 	%r7327, [%rd4+12];
	// inline asm
	prmt.b32 %r7325, %r7326, %r7327, %r278;
	// inline asm
	st.local.u32 	[%rd6+8], %r7325;
	ld.local.v2.u32 	{%r7436, %r7437}, [%rd4+8];
	// inline asm
	prmt.b32 %r7329, %r7437, %r7436, %r278;
	// inline asm
	st.local.u32 	[%rd6+4], %r7329;
	ld.local.u32 	%r7334, [%rd4+8];
	ld.local.u32 	%r7335, [%rd4+4];
	// inline asm
	prmt.b32 %r7333, %r7334, %r7335, %r278;
	// inline asm
	st.local.u32 	[%rd6], %r7333;
	ld.local.v2.u32 	{%r7438, %r7439}, [%rd4];
	// inline asm
	prmt.b32 %r7337, %r7439, %r7438, %r278;
	// inline asm
	st.local.u32 	[%rd5+12], %r7337;
	ld.local.u32 	%r7342, [%rd4];
	ld.local.u32 	%r7343, [%rd3+12];
	// inline asm
	prmt.b32 %r7341, %r7342, %r7343, %r278;
	// inline asm
	st.local.u32 	[%rd5+8], %r7341;
	ld.local.v2.u32 	{%r7440, %r7441}, [%rd3+8];
	// inline asm
	prmt.b32 %r7345, %r7441, %r7440, %r278;
	// inline asm
	st.local.u32 	[%rd5+4], %r7345;
	ld.local.u32 	%r7350, [%rd3+8];
	ld.local.u32 	%r7351, [%rd3+4];
	// inline asm
	prmt.b32 %r7349, %r7350, %r7351, %r278;
	// inline asm
	st.local.u32 	[%rd5], %r7349;
	ld.local.v2.u32 	{%r7442, %r7443}, [%rd3];
	// inline asm
	prmt.b32 %r7353, %r7443, %r7442, %r278;
	// inline asm
	st.local.u32 	[%rd4+12], %r7353;
	ld.local.u32 	%r7358, [%rd3];
	ld.local.u32 	%r7359, [%rd2+12];
	// inline asm
	prmt.b32 %r7357, %r7358, %r7359, %r278;
	// inline asm
	st.local.u32 	[%rd4+8], %r7357;
	ld.local.v2.u32 	{%r7444, %r7445}, [%rd2+8];
	// inline asm
	prmt.b32 %r7361, %r7445, %r7444, %r278;
	// inline asm
	st.local.u32 	[%rd4+4], %r7361;
	ld.local.u32 	%r7366, [%rd2+8];
	ld.local.u32 	%r7367, [%rd2+4];
	// inline asm
	prmt.b32 %r7365, %r7366, %r7367, %r278;
	// inline asm
	st.local.u32 	[%rd4], %r7365;
	ld.local.v2.u32 	{%r7446, %r7447}, [%rd2];
	// inline asm
	prmt.b32 %r7369, %r7447, %r7446, %r278;
	// inline asm
	st.local.u32 	[%rd3+12], %r7369;
	ld.local.u32 	%r7374, [%rd2];
	ld.local.u32 	%r7375, [%rd1+12];
	// inline asm
	prmt.b32 %r7373, %r7374, %r7375, %r278;
	// inline asm
	st.local.u32 	[%rd3+8], %r7373;
	ld.local.v2.u32 	{%r7448, %r7449}, [%rd1+8];
	// inline asm
	prmt.b32 %r7377, %r7449, %r7448, %r278;
	// inline asm
	st.local.u32 	[%rd3+4], %r7377;
	ld.local.u32 	%r7382, [%rd1+8];
	ld.local.u32 	%r7383, [%rd1+4];
	// inline asm
	prmt.b32 %r7381, %r7382, %r7383, %r278;
	// inline asm
	st.local.u32 	[%rd3], %r7381;
	ld.local.v2.u32 	{%r7450, %r7451}, [%rd1];
	// inline asm
	prmt.b32 %r7385, %r7451, %r7450, %r278;
	// inline asm
	st.local.u32 	[%rd2+12], %r7385;
	ld.local.u32 	%r7390, [%rd1];
	// inline asm
	prmt.b32 %r7389, %r7390, %r16248, %r278;
	// inline asm
	st.local.u32 	[%rd2+8], %r7389;
	st.local.v2.u32 	[%rd2], {%r16248, %r16248};
	st.local.u32 	[%rd1+12], %r16248;
	st.local.u32 	[%rd1+8], %r16248;
	mov.u64 	%rd936, 0;
	st.local.u32 	[%rd1+4], %rd936;
	st.local.u32 	[%rd1], %rd936;
	mov.u32 	%r16249, %r16248;
	mov.u32 	%r16254, %r16248;
	bra.uni 	BB5_686;

BB5_654:
	setp.eq.s32	%p367, %r2804, 22;
	@%p367 bra 	BB5_676;
	bra.uni 	BB5_655;

BB5_676:
	mov.u32 	%r16248, 0;
	// inline asm
	prmt.b32 %r16271, %r16248, %r71, %r278;
	// inline asm
	ld.local.v2.u32 	{%r4484, %r4485}, [%rd8+8];
	// inline asm
	prmt.b32 %r16272, %r4485, %r4484, %r278;
	// inline asm
	ld.local.u32 	%r4350, [%rd8+8];
	ld.local.u32 	%r4351, [%rd8+4];
	// inline asm
	prmt.b32 %r16273, %r4350, %r4351, %r278;
	// inline asm
	ld.local.v2.u32 	{%r4486, %r4487}, [%rd8];
	// inline asm
	prmt.b32 %r16266, %r4487, %r4486, %r278;
	// inline asm
	ld.local.u32 	%r4358, [%rd8];
	ld.local.u32 	%r4359, [%rd7+12];
	// inline asm
	prmt.b32 %r16267, %r4358, %r4359, %r278;
	// inline asm
	ld.local.v2.u32 	{%r4488, %r4489}, [%rd7+8];
	// inline asm
	prmt.b32 %r16268, %r4489, %r4488, %r278;
	// inline asm
	ld.local.u32 	%r4366, [%rd7+8];
	ld.local.u32 	%r4367, [%rd7+4];
	// inline asm
	prmt.b32 %r16269, %r4366, %r4367, %r278;
	// inline asm
	ld.local.v2.u32 	{%r4490, %r4491}, [%rd7];
	// inline asm
	prmt.b32 %r16262, %r4491, %r4490, %r278;
	// inline asm
	ld.local.u32 	%r4374, [%rd7];
	ld.local.u32 	%r4375, [%rd6+12];
	// inline asm
	prmt.b32 %r16263, %r4374, %r4375, %r278;
	// inline asm
	ld.local.v2.u32 	{%r4492, %r4493}, [%rd6+8];
	// inline asm
	prmt.b32 %r16264, %r4493, %r4492, %r278;
	// inline asm
	ld.local.u32 	%r4382, [%rd6+8];
	ld.local.u32 	%r4383, [%rd6+4];
	// inline asm
	prmt.b32 %r16265, %r4382, %r4383, %r278;
	// inline asm
	ld.local.v2.u32 	{%r4494, %r4495}, [%rd6];
	// inline asm
	prmt.b32 %r16258, %r4495, %r4494, %r278;
	// inline asm
	ld.local.u32 	%r4390, [%rd6];
	ld.local.u32 	%r4391, [%rd5+12];
	// inline asm
	prmt.b32 %r16259, %r4390, %r4391, %r278;
	// inline asm
	ld.local.v2.u32 	{%r4496, %r4497}, [%rd5+8];
	// inline asm
	prmt.b32 %r16260, %r4497, %r4496, %r278;
	// inline asm
	ld.local.u32 	%r4398, [%rd5+8];
	ld.local.u32 	%r4399, [%rd5+4];
	// inline asm
	prmt.b32 %r16261, %r4398, %r4399, %r278;
	// inline asm
	ld.local.v2.u32 	{%r4498, %r4499}, [%rd5];
	// inline asm
	prmt.b32 %r16254, %r4499, %r4498, %r278;
	// inline asm
	ld.local.u32 	%r4406, [%rd5];
	ld.local.u32 	%r4407, [%rd4+12];
	// inline asm
	prmt.b32 %r16255, %r4406, %r4407, %r278;
	// inline asm
	ld.local.v2.u32 	{%r4500, %r4501}, [%rd4+8];
	// inline asm
	prmt.b32 %r16256, %r4501, %r4500, %r278;
	// inline asm
	ld.local.u32 	%r4414, [%rd4+8];
	ld.local.u32 	%r4415, [%rd4+4];
	// inline asm
	prmt.b32 %r16257, %r4414, %r4415, %r278;
	// inline asm
	ld.local.v2.u32 	{%r4502, %r4503}, [%rd4];
	// inline asm
	prmt.b32 %r16250, %r4503, %r4502, %r278;
	// inline asm
	ld.local.u32 	%r4422, [%rd4];
	ld.local.u32 	%r4423, [%rd3+12];
	// inline asm
	prmt.b32 %r16251, %r4422, %r4423, %r278;
	// inline asm
	ld.local.v2.u32 	{%r4504, %r4505}, [%rd3+8];
	// inline asm
	prmt.b32 %r16252, %r4505, %r4504, %r278;
	// inline asm
	ld.local.u32 	%r4430, [%rd3+8];
	ld.local.u32 	%r4431, [%rd3+4];
	// inline asm
	prmt.b32 %r16253, %r4430, %r4431, %r278;
	// inline asm
	ld.local.v2.u32 	{%r4506, %r4507}, [%rd3];
	// inline asm
	prmt.b32 %r4433, %r4507, %r4506, %r278;
	// inline asm
	st.local.u32 	[%rd8+12], %r4433;
	ld.local.u32 	%r4438, [%rd3];
	ld.local.u32 	%r4439, [%rd2+12];
	// inline asm
	prmt.b32 %r4437, %r4438, %r4439, %r278;
	// inline asm
	st.local.u32 	[%rd8+8], %r4437;
	ld.local.v2.u32 	{%r4508, %r4509}, [%rd2+8];
	// inline asm
	prmt.b32 %r4441, %r4509, %r4508, %r278;
	// inline asm
	st.local.u32 	[%rd8+4], %r4441;
	ld.local.u32 	%r4446, [%rd2+8];
	ld.local.u32 	%r4447, [%rd2+4];
	// inline asm
	prmt.b32 %r4445, %r4446, %r4447, %r278;
	// inline asm
	st.local.u32 	[%rd8], %r4445;
	ld.local.v2.u32 	{%r4510, %r4511}, [%rd2];
	// inline asm
	prmt.b32 %r4449, %r4511, %r4510, %r278;
	// inline asm
	st.local.u32 	[%rd7+12], %r4449;
	ld.local.u32 	%r4454, [%rd2];
	ld.local.u32 	%r4455, [%rd1+12];
	// inline asm
	prmt.b32 %r4453, %r4454, %r4455, %r278;
	// inline asm
	st.local.u32 	[%rd7+8], %r4453;
	ld.local.v2.u32 	{%r4512, %r4513}, [%rd1+8];
	// inline asm
	prmt.b32 %r4457, %r4513, %r4512, %r278;
	// inline asm
	st.local.u32 	[%rd7+4], %r4457;
	ld.local.u32 	%r4462, [%rd1+8];
	ld.local.u32 	%r4463, [%rd1+4];
	// inline asm
	prmt.b32 %r4461, %r4462, %r4463, %r278;
	// inline asm
	st.local.u32 	[%rd7], %r4461;
	ld.local.v2.u32 	{%r4514, %r4515}, [%rd1];
	// inline asm
	prmt.b32 %r4465, %r4515, %r4514, %r278;
	// inline asm
	st.local.u32 	[%rd6+12], %r4465;
	ld.local.u32 	%r4470, [%rd1];
	// inline asm
	prmt.b32 %r4469, %r4470, %r16248, %r278;
	// inline asm
	st.local.u32 	[%rd6+8], %r4469;
	st.local.v2.u32 	[%rd6], {%r16248, %r16248};
	st.local.u32 	[%rd5+12], %r16248;
	st.local.u32 	[%rd5+8], %r16248;
	st.local.u32 	[%rd5+4], %r16248;
	st.local.u32 	[%rd5], %r16248;
	st.local.u32 	[%rd4+12], %r16248;
	st.local.u32 	[%rd4+8], %r16248;
	st.local.u32 	[%rd4+4], %r16248;
	st.local.u32 	[%rd4], %r16248;
	st.local.u32 	[%rd3+12], %r16248;
	st.local.u32 	[%rd3+8], %r16248;
	st.local.u32 	[%rd3+4], %r16248;
	st.local.u32 	[%rd3], %r16248;
	st.local.u32 	[%rd2+12], %r16248;
	st.local.u32 	[%rd2+8], %r16248;
	st.local.u32 	[%rd2+4], %r16248;
	st.local.u32 	[%rd2], %r16248;
	st.local.u32 	[%rd1+12], %r16248;
	st.local.u32 	[%rd1+8], %r16248;
	mov.u64 	%rd920, 0;
	st.local.u32 	[%rd1+4], %rd920;
	st.local.u32 	[%rd1], %rd920;
	mov.u32 	%r16249, %r16248;
	mov.u32 	%r16270, %r16248;
	bra.uni 	BB5_690;

BB5_638:
	setp.eq.s32	%p379, %r2804, 14;
	@%p379 bra 	BB5_680;
	bra.uni 	BB5_639;

BB5_680:
	mov.u32 	%r16248, 0;
	// inline asm
	prmt.b32 %r16263, %r16248, %r71, %r278;
	// inline asm
	ld.local.v2.u32 	{%r5920, %r5921}, [%rd8+8];
	// inline asm
	prmt.b32 %r16264, %r5921, %r5920, %r278;
	// inline asm
	ld.local.u32 	%r5778, [%rd8+8];
	ld.local.u32 	%r5779, [%rd8+4];
	// inline asm
	prmt.b32 %r16265, %r5778, %r5779, %r278;
	// inline asm
	ld.local.v2.u32 	{%r5922, %r5923}, [%rd8];
	// inline asm
	prmt.b32 %r16258, %r5923, %r5922, %r278;
	// inline asm
	ld.local.u32 	%r5786, [%rd8];
	ld.local.u32 	%r5787, [%rd7+12];
	// inline asm
	prmt.b32 %r16259, %r5786, %r5787, %r278;
	// inline asm
	ld.local.v2.u32 	{%r5924, %r5925}, [%rd7+8];
	// inline asm
	prmt.b32 %r16260, %r5925, %r5924, %r278;
	// inline asm
	ld.local.u32 	%r5794, [%rd7+8];
	ld.local.u32 	%r5795, [%rd7+4];
	// inline asm
	prmt.b32 %r16261, %r5794, %r5795, %r278;
	// inline asm
	ld.local.v2.u32 	{%r5926, %r5927}, [%rd7];
	// inline asm
	prmt.b32 %r16254, %r5927, %r5926, %r278;
	// inline asm
	ld.local.u32 	%r5802, [%rd7];
	ld.local.u32 	%r5803, [%rd6+12];
	// inline asm
	prmt.b32 %r16255, %r5802, %r5803, %r278;
	// inline asm
	ld.local.v2.u32 	{%r5928, %r5929}, [%rd6+8];
	// inline asm
	prmt.b32 %r16256, %r5929, %r5928, %r278;
	// inline asm
	ld.local.u32 	%r5810, [%rd6+8];
	ld.local.u32 	%r5811, [%rd6+4];
	// inline asm
	prmt.b32 %r16257, %r5810, %r5811, %r278;
	// inline asm
	ld.local.v2.u32 	{%r5930, %r5931}, [%rd6];
	// inline asm
	prmt.b32 %r16250, %r5931, %r5930, %r278;
	// inline asm
	ld.local.u32 	%r5818, [%rd6];
	ld.local.u32 	%r5819, [%rd5+12];
	// inline asm
	prmt.b32 %r16251, %r5818, %r5819, %r278;
	// inline asm
	ld.local.v2.u32 	{%r5932, %r5933}, [%rd5+8];
	// inline asm
	prmt.b32 %r16252, %r5933, %r5932, %r278;
	// inline asm
	ld.local.u32 	%r5826, [%rd5+8];
	ld.local.u32 	%r5827, [%rd5+4];
	// inline asm
	prmt.b32 %r16253, %r5826, %r5827, %r278;
	// inline asm
	ld.local.v2.u32 	{%r5934, %r5935}, [%rd5];
	// inline asm
	prmt.b32 %r5829, %r5935, %r5934, %r278;
	// inline asm
	st.local.u32 	[%rd8+12], %r5829;
	ld.local.u32 	%r5834, [%rd5];
	ld.local.u32 	%r5835, [%rd4+12];
	// inline asm
	prmt.b32 %r5833, %r5834, %r5835, %r278;
	// inline asm
	st.local.u32 	[%rd8+8], %r5833;
	ld.local.v2.u32 	{%r5936, %r5937}, [%rd4+8];
	// inline asm
	prmt.b32 %r5837, %r5937, %r5936, %r278;
	// inline asm
	st.local.u32 	[%rd8+4], %r5837;
	ld.local.u32 	%r5842, [%rd4+8];
	ld.local.u32 	%r5843, [%rd4+4];
	// inline asm
	prmt.b32 %r5841, %r5842, %r5843, %r278;
	// inline asm
	st.local.u32 	[%rd8], %r5841;
	ld.local.v2.u32 	{%r5938, %r5939}, [%rd4];
	// inline asm
	prmt.b32 %r5845, %r5939, %r5938, %r278;
	// inline asm
	st.local.u32 	[%rd7+12], %r5845;
	ld.local.u32 	%r5850, [%rd4];
	ld.local.u32 	%r5851, [%rd3+12];
	// inline asm
	prmt.b32 %r5849, %r5850, %r5851, %r278;
	// inline asm
	st.local.u32 	[%rd7+8], %r5849;
	ld.local.v2.u32 	{%r5940, %r5941}, [%rd3+8];
	// inline asm
	prmt.b32 %r5853, %r5941, %r5940, %r278;
	// inline asm
	st.local.u32 	[%rd7+4], %r5853;
	ld.local.u32 	%r5858, [%rd3+8];
	ld.local.u32 	%r5859, [%rd3+4];
	// inline asm
	prmt.b32 %r5857, %r5858, %r5859, %r278;
	// inline asm
	st.local.u32 	[%rd7], %r5857;
	ld.local.v2.u32 	{%r5942, %r5943}, [%rd3];
	// inline asm
	prmt.b32 %r5861, %r5943, %r5942, %r278;
	// inline asm
	st.local.u32 	[%rd6+12], %r5861;
	ld.local.u32 	%r5866, [%rd3];
	ld.local.u32 	%r5867, [%rd2+12];
	// inline asm
	prmt.b32 %r5865, %r5866, %r5867, %r278;
	// inline asm
	st.local.u32 	[%rd6+8], %r5865;
	ld.local.v2.u32 	{%r5944, %r5945}, [%rd2+8];
	// inline asm
	prmt.b32 %r5869, %r5945, %r5944, %r278;
	// inline asm
	st.local.u32 	[%rd6+4], %r5869;
	ld.local.u32 	%r5874, [%rd2+8];
	ld.local.u32 	%r5875, [%rd2+4];
	// inline asm
	prmt.b32 %r5873, %r5874, %r5875, %r278;
	// inline asm
	st.local.u32 	[%rd6], %r5873;
	ld.local.v2.u32 	{%r5946, %r5947}, [%rd2];
	// inline asm
	prmt.b32 %r5877, %r5947, %r5946, %r278;
	// inline asm
	st.local.u32 	[%rd5+12], %r5877;
	ld.local.u32 	%r5882, [%rd2];
	ld.local.u32 	%r5883, [%rd1+12];
	// inline asm
	prmt.b32 %r5881, %r5882, %r5883, %r278;
	// inline asm
	st.local.u32 	[%rd5+8], %r5881;
	ld.local.v2.u32 	{%r5948, %r5949}, [%rd1+8];
	// inline asm
	prmt.b32 %r5885, %r5949, %r5948, %r278;
	// inline asm
	st.local.u32 	[%rd5+4], %r5885;
	ld.local.u32 	%r5890, [%rd1+8];
	ld.local.u32 	%r5891, [%rd1+4];
	// inline asm
	prmt.b32 %r5889, %r5890, %r5891, %r278;
	// inline asm
	st.local.u32 	[%rd5], %r5889;
	ld.local.v2.u32 	{%r5950, %r5951}, [%rd1];
	// inline asm
	prmt.b32 %r5893, %r5951, %r5950, %r278;
	// inline asm
	st.local.u32 	[%rd4+12], %r5893;
	ld.local.u32 	%r5898, [%rd1];
	// inline asm
	prmt.b32 %r5897, %r5898, %r16248, %r278;
	// inline asm
	st.local.u32 	[%rd4+8], %r5897;
	st.local.v2.u32 	[%rd4], {%r16248, %r16248};
	st.local.u32 	[%rd3+12], %r16248;
	st.local.u32 	[%rd3+8], %r16248;
	st.local.u32 	[%rd3+4], %r16248;
	st.local.u32 	[%rd3], %r16248;
	st.local.u32 	[%rd2+12], %r16248;
	st.local.u32 	[%rd2+8], %r16248;
	st.local.u32 	[%rd2+4], %r16248;
	st.local.u32 	[%rd2], %r16248;
	st.local.u32 	[%rd1+12], %r16248;
	st.local.u32 	[%rd1+8], %r16248;
	mov.u64 	%rd928, 0;
	st.local.u32 	[%rd1+4], %rd928;
	st.local.u32 	[%rd1], %rd928;
	mov.u32 	%r16249, %r16248;
	mov.u32 	%r16262, %r16248;
	bra.uni 	BB5_688;

BB5_669:
	setp.eq.s32	%p356, %r2804, 30;
	@%p356 bra 	BB5_672;
	bra.uni 	BB5_670;

BB5_672:
	mov.u32 	%r16248, 0;
	// inline asm
	prmt.b32 %r16279, %r16248, %r71, %r278;
	// inline asm
	ld.local.v2.u32 	{%r3112, %r3113}, [%rd8+8];
	// inline asm
	prmt.b32 %r16280, %r3113, %r3112, %r278;
	// inline asm
	ld.local.u32 	%r2986, [%rd8+8];
	ld.local.u32 	%r2987, [%rd8+4];
	// inline asm
	prmt.b32 %r16281, %r2986, %r2987, %r278;
	// inline asm
	ld.local.v2.u32 	{%r3114, %r3115}, [%rd8];
	// inline asm
	prmt.b32 %r16274, %r3115, %r3114, %r278;
	// inline asm
	ld.local.u32 	%r2994, [%rd8];
	ld.local.u32 	%r2995, [%rd7+12];
	// inline asm
	prmt.b32 %r16275, %r2994, %r2995, %r278;
	// inline asm
	ld.local.v2.u32 	{%r3116, %r3117}, [%rd7+8];
	// inline asm
	prmt.b32 %r16276, %r3117, %r3116, %r278;
	// inline asm
	ld.local.u32 	%r3002, [%rd7+8];
	ld.local.u32 	%r3003, [%rd7+4];
	// inline asm
	prmt.b32 %r16277, %r3002, %r3003, %r278;
	// inline asm
	ld.local.v2.u32 	{%r3118, %r3119}, [%rd7];
	// inline asm
	prmt.b32 %r16270, %r3119, %r3118, %r278;
	// inline asm
	ld.local.u32 	%r3010, [%rd7];
	ld.local.u32 	%r3011, [%rd6+12];
	// inline asm
	prmt.b32 %r16271, %r3010, %r3011, %r278;
	// inline asm
	ld.local.v2.u32 	{%r3120, %r3121}, [%rd6+8];
	// inline asm
	prmt.b32 %r16272, %r3121, %r3120, %r278;
	// inline asm
	ld.local.u32 	%r3018, [%rd6+8];
	ld.local.u32 	%r3019, [%rd6+4];
	// inline asm
	prmt.b32 %r16273, %r3018, %r3019, %r278;
	// inline asm
	ld.local.v2.u32 	{%r3122, %r3123}, [%rd6];
	// inline asm
	prmt.b32 %r16266, %r3123, %r3122, %r278;
	// inline asm
	ld.local.u32 	%r3026, [%rd6];
	ld.local.u32 	%r3027, [%rd5+12];
	// inline asm
	prmt.b32 %r16267, %r3026, %r3027, %r278;
	// inline asm
	ld.local.v2.u32 	{%r3124, %r3125}, [%rd5+8];
	// inline asm
	prmt.b32 %r16268, %r3125, %r3124, %r278;
	// inline asm
	ld.local.u32 	%r3034, [%rd5+8];
	ld.local.u32 	%r3035, [%rd5+4];
	// inline asm
	prmt.b32 %r16269, %r3034, %r3035, %r278;
	// inline asm
	ld.local.v2.u32 	{%r3126, %r3127}, [%rd5];
	// inline asm
	prmt.b32 %r16262, %r3127, %r3126, %r278;
	// inline asm
	ld.local.u32 	%r3042, [%rd5];
	ld.local.u32 	%r3043, [%rd4+12];
	// inline asm
	prmt.b32 %r16263, %r3042, %r3043, %r278;
	// inline asm
	ld.local.v2.u32 	{%r3128, %r3129}, [%rd4+8];
	// inline asm
	prmt.b32 %r16264, %r3129, %r3128, %r278;
	// inline asm
	ld.local.u32 	%r3050, [%rd4+8];
	ld.local.u32 	%r3051, [%rd4+4];
	// inline asm
	prmt.b32 %r16265, %r3050, %r3051, %r278;
	// inline asm
	ld.local.v2.u32 	{%r3130, %r3131}, [%rd4];
	// inline asm
	prmt.b32 %r16258, %r3131, %r3130, %r278;
	// inline asm
	ld.local.u32 	%r3058, [%rd4];
	ld.local.u32 	%r3059, [%rd3+12];
	// inline asm
	prmt.b32 %r16259, %r3058, %r3059, %r278;
	// inline asm
	ld.local.v2.u32 	{%r3132, %r3133}, [%rd3+8];
	// inline asm
	prmt.b32 %r16260, %r3133, %r3132, %r278;
	// inline asm
	ld.local.u32 	%r3066, [%rd3+8];
	ld.local.u32 	%r3067, [%rd3+4];
	// inline asm
	prmt.b32 %r16261, %r3066, %r3067, %r278;
	// inline asm
	ld.local.v2.u32 	{%r3134, %r3135}, [%rd3];
	// inline asm
	prmt.b32 %r16254, %r3135, %r3134, %r278;
	// inline asm
	ld.local.u32 	%r3074, [%rd3];
	ld.local.u32 	%r3075, [%rd2+12];
	// inline asm
	prmt.b32 %r16255, %r3074, %r3075, %r278;
	// inline asm
	ld.local.v2.u32 	{%r3136, %r3137}, [%rd2+8];
	// inline asm
	prmt.b32 %r16256, %r3137, %r3136, %r278;
	// inline asm
	ld.local.u32 	%r3082, [%rd2+8];
	ld.local.u32 	%r3083, [%rd2+4];
	// inline asm
	prmt.b32 %r16257, %r3082, %r3083, %r278;
	// inline asm
	ld.local.v2.u32 	{%r3138, %r3139}, [%rd2];
	// inline asm
	prmt.b32 %r16250, %r3139, %r3138, %r278;
	// inline asm
	ld.local.u32 	%r3090, [%rd2];
	ld.local.u32 	%r3091, [%rd1+12];
	// inline asm
	prmt.b32 %r16251, %r3090, %r3091, %r278;
	// inline asm
	ld.local.v2.u32 	{%r3140, %r3141}, [%rd1+8];
	// inline asm
	prmt.b32 %r16252, %r3141, %r3140, %r278;
	// inline asm
	ld.local.u32 	%r3098, [%rd1+8];
	ld.local.u32 	%r3099, [%rd1+4];
	// inline asm
	prmt.b32 %r16253, %r3098, %r3099, %r278;
	// inline asm
	ld.local.v2.u32 	{%r3142, %r3143}, [%rd1];
	// inline asm
	prmt.b32 %r3101, %r3143, %r3142, %r278;
	// inline asm
	st.local.u32 	[%rd8+12], %r3101;
	ld.local.u32 	%r3106, [%rd1];
	// inline asm
	prmt.b32 %r3105, %r3106, %r16248, %r278;
	// inline asm
	st.local.u32 	[%rd8+8], %r3105;
	st.local.v2.u32 	[%rd8], {%r16248, %r16248};
	st.local.u32 	[%rd7+12], %r16248;
	st.local.u32 	[%rd7+8], %r16248;
	st.local.u32 	[%rd7+4], %r16248;
	st.local.u32 	[%rd7], %r16248;
	st.local.u32 	[%rd6+12], %r16248;
	st.local.u32 	[%rd6+8], %r16248;
	st.local.u32 	[%rd6+4], %r16248;
	st.local.u32 	[%rd6], %r16248;
	st.local.u32 	[%rd5+12], %r16248;
	st.local.u32 	[%rd5+8], %r16248;
	st.local.u32 	[%rd5+4], %r16248;
	st.local.u32 	[%rd5], %r16248;
	st.local.u32 	[%rd4+12], %r16248;
	st.local.u32 	[%rd4+8], %r16248;
	st.local.u32 	[%rd4+4], %r16248;
	st.local.u32 	[%rd4], %r16248;
	st.local.u32 	[%rd3+12], %r16248;
	st.local.u32 	[%rd3+8], %r16248;
	st.local.u32 	[%rd3+4], %r16248;
	st.local.u32 	[%rd3], %r16248;
	st.local.u32 	[%rd2+12], %r16248;
	st.local.u32 	[%rd2+8], %r16248;
	st.local.u32 	[%rd2+4], %r16248;
	st.local.u32 	[%rd2], %r16248;
	st.local.u32 	[%rd1+12], %r16248;
	st.local.u32 	[%rd1+8], %r16248;
	mov.u64 	%rd912, 0;
	st.local.u32 	[%rd1+4], %rd912;
	st.local.u32 	[%rd1], %rd912;
	mov.u32 	%r16249, %r16248;
	mov.u32 	%r16278, %r16248;
	bra.uni 	BB5_694;

BB5_613:
	setp.eq.s32	%p398, %r2804, 1;
	mov.u32 	%r16251, %r16250;
	mov.u32 	%r16252, %r16250;
	mov.u32 	%r16253, %r16250;
	mov.u32 	%r16254, %r16250;
	mov.u32 	%r16255, %r16250;
	mov.u32 	%r16256, %r16250;
	mov.u32 	%r16257, %r16250;
	mov.u32 	%r16258, %r16250;
	mov.u32 	%r16259, %r16250;
	mov.u32 	%r16260, %r16250;
	mov.u32 	%r16261, %r16250;
	mov.u32 	%r16262, %r16250;
	mov.u32 	%r16263, %r16250;
	mov.u32 	%r16264, %r16250;
	mov.u32 	%r16265, %r16250;
	mov.u32 	%r16266, %r16250;
	mov.u32 	%r16267, %r16250;
	mov.u32 	%r16268, %r16250;
	mov.u32 	%r16269, %r16250;
	mov.u32 	%r16270, %r16250;
	mov.u32 	%r16271, %r16250;
	mov.u32 	%r16272, %r16250;
	mov.u32 	%r16273, %r16250;
	mov.u32 	%r16274, %r16250;
	mov.u32 	%r16275, %r16250;
	mov.u32 	%r16276, %r16250;
	mov.u32 	%r16277, %r16250;
	mov.u32 	%r16278, %r16250;
	mov.u32 	%r16279, %r16250;
	mov.u32 	%r16280, %r16250;
	mov.u32 	%r16281, %r16250;
	@%p398 bra 	BB5_614;
	bra.uni 	BB5_694;

BB5_614:
	mov.u32 	%r16249, 0;
	// inline asm
	prmt.b32 %r16252, %r16249, %r71, %r278;
	// inline asm
	ld.local.v2.u32 	{%r8389, %r8390}, [%rd8+8];
	// inline asm
	prmt.b32 %r16253, %r8390, %r8389, %r278;
	// inline asm
	ld.local.u32 	%r8235, [%rd8+8];
	ld.local.u32 	%r8236, [%rd8+4];
	// inline asm
	prmt.b32 %r8234, %r8235, %r8236, %r278;
	// inline asm
	st.local.u32 	[%rd8+12], %r8234;
	ld.local.v2.u32 	{%r8391, %r8392}, [%rd8];
	// inline asm
	prmt.b32 %r8238, %r8392, %r8391, %r278;
	// inline asm
	st.local.u32 	[%rd8+8], %r8238;
	ld.local.u32 	%r8243, [%rd8];
	ld.local.u32 	%r8244, [%rd7+12];
	// inline asm
	prmt.b32 %r8242, %r8243, %r8244, %r278;
	// inline asm
	st.local.u32 	[%rd8+4], %r8242;
	ld.local.v2.u32 	{%r8393, %r8394}, [%rd7+8];
	// inline asm
	prmt.b32 %r8246, %r8394, %r8393, %r278;
	// inline asm
	st.local.u32 	[%rd8], %r8246;
	ld.local.u32 	%r8251, [%rd7+8];
	ld.local.u32 	%r8252, [%rd7+4];
	// inline asm
	prmt.b32 %r8250, %r8251, %r8252, %r278;
	// inline asm
	st.local.u32 	[%rd7+12], %r8250;
	ld.local.v2.u32 	{%r8395, %r8396}, [%rd7];
	// inline asm
	prmt.b32 %r8254, %r8396, %r8395, %r278;
	// inline asm
	st.local.u32 	[%rd7+8], %r8254;
	ld.local.u32 	%r8259, [%rd7];
	ld.local.u32 	%r8260, [%rd6+12];
	// inline asm
	prmt.b32 %r8258, %r8259, %r8260, %r278;
	// inline asm
	st.local.u32 	[%rd7+4], %r8258;
	ld.local.v2.u32 	{%r8397, %r8398}, [%rd6+8];
	// inline asm
	prmt.b32 %r8262, %r8398, %r8397, %r278;
	// inline asm
	st.local.u32 	[%rd7], %r8262;
	ld.local.u32 	%r8267, [%rd6+8];
	ld.local.u32 	%r8268, [%rd6+4];
	// inline asm
	prmt.b32 %r8266, %r8267, %r8268, %r278;
	// inline asm
	st.local.u32 	[%rd6+12], %r8266;
	ld.local.v2.u32 	{%r8399, %r8400}, [%rd6];
	// inline asm
	prmt.b32 %r8270, %r8400, %r8399, %r278;
	// inline asm
	st.local.u32 	[%rd6+8], %r8270;
	ld.local.u32 	%r8275, [%rd6];
	ld.local.u32 	%r8276, [%rd5+12];
	// inline asm
	prmt.b32 %r8274, %r8275, %r8276, %r278;
	// inline asm
	st.local.u32 	[%rd6+4], %r8274;
	ld.local.v2.u32 	{%r8401, %r8402}, [%rd5+8];
	// inline asm
	prmt.b32 %r8278, %r8402, %r8401, %r278;
	// inline asm
	st.local.u32 	[%rd6], %r8278;
	ld.local.u32 	%r8283, [%rd5+8];
	ld.local.u32 	%r8284, [%rd5+4];
	// inline asm
	prmt.b32 %r8282, %r8283, %r8284, %r278;
	// inline asm
	st.local.u32 	[%rd5+12], %r8282;
	ld.local.v2.u32 	{%r8403, %r8404}, [%rd5];
	// inline asm
	prmt.b32 %r8286, %r8404, %r8403, %r278;
	// inline asm
	st.local.u32 	[%rd5+8], %r8286;
	ld.local.u32 	%r8291, [%rd5];
	ld.local.u32 	%r8292, [%rd4+12];
	// inline asm
	prmt.b32 %r8290, %r8291, %r8292, %r278;
	// inline asm
	st.local.u32 	[%rd5+4], %r8290;
	ld.local.v2.u32 	{%r8405, %r8406}, [%rd4+8];
	// inline asm
	prmt.b32 %r8294, %r8406, %r8405, %r278;
	// inline asm
	st.local.u32 	[%rd5], %r8294;
	ld.local.u32 	%r8299, [%rd4+8];
	ld.local.u32 	%r8300, [%rd4+4];
	// inline asm
	prmt.b32 %r8298, %r8299, %r8300, %r278;
	// inline asm
	st.local.u32 	[%rd4+12], %r8298;
	ld.local.v2.u32 	{%r8407, %r8408}, [%rd4];
	// inline asm
	prmt.b32 %r8302, %r8408, %r8407, %r278;
	// inline asm
	st.local.u32 	[%rd4+8], %r8302;
	ld.local.u32 	%r8307, [%rd4];
	ld.local.u32 	%r8308, [%rd3+12];
	// inline asm
	prmt.b32 %r8306, %r8307, %r8308, %r278;
	// inline asm
	st.local.u32 	[%rd4+4], %r8306;
	ld.local.v2.u32 	{%r8409, %r8410}, [%rd3+8];
	// inline asm
	prmt.b32 %r8310, %r8410, %r8409, %r278;
	// inline asm
	st.local.u32 	[%rd4], %r8310;
	ld.local.u32 	%r8315, [%rd3+8];
	ld.local.u32 	%r8316, [%rd3+4];
	// inline asm
	prmt.b32 %r8314, %r8315, %r8316, %r278;
	// inline asm
	st.local.u32 	[%rd3+12], %r8314;
	ld.local.v2.u32 	{%r8411, %r8412}, [%rd3];
	// inline asm
	prmt.b32 %r8318, %r8412, %r8411, %r278;
	// inline asm
	st.local.u32 	[%rd3+8], %r8318;
	ld.local.u32 	%r8323, [%rd3];
	ld.local.u32 	%r8324, [%rd2+12];
	// inline asm
	prmt.b32 %r8322, %r8323, %r8324, %r278;
	// inline asm
	st.local.u32 	[%rd3+4], %r8322;
	ld.local.v2.u32 	{%r8413, %r8414}, [%rd2+8];
	// inline asm
	prmt.b32 %r8326, %r8414, %r8413, %r278;
	// inline asm
	st.local.u32 	[%rd3], %r8326;
	ld.local.u32 	%r8331, [%rd2+8];
	ld.local.u32 	%r8332, [%rd2+4];
	// inline asm
	prmt.b32 %r8330, %r8331, %r8332, %r278;
	// inline asm
	st.local.u32 	[%rd2+12], %r8330;
	ld.local.v2.u32 	{%r8415, %r8416}, [%rd2];
	// inline asm
	prmt.b32 %r8334, %r8416, %r8415, %r278;
	// inline asm
	st.local.u32 	[%rd2+8], %r8334;
	ld.local.u32 	%r8339, [%rd2];
	ld.local.u32 	%r8340, [%rd1+12];
	// inline asm
	prmt.b32 %r8338, %r8339, %r8340, %r278;
	// inline asm
	st.local.u32 	[%rd2+4], %r8338;
	ld.local.v2.u32 	{%r8417, %r8418}, [%rd1+8];
	// inline asm
	prmt.b32 %r8342, %r8418, %r8417, %r278;
	// inline asm
	st.local.u32 	[%rd2], %r8342;
	ld.local.u32 	%r8347, [%rd1+8];
	ld.local.u32 	%r8348, [%rd1+4];
	// inline asm
	prmt.b32 %r8346, %r8347, %r8348, %r278;
	// inline asm
	st.local.u32 	[%rd1+12], %r8346;
	ld.local.v2.u32 	{%r8419, %r8420}, [%rd1];
	// inline asm
	prmt.b32 %r8350, %r8420, %r8419, %r278;
	// inline asm
	st.local.u32 	[%rd1+8], %r8350;
	ld.local.u32 	%r8355, [%rd1];
	// inline asm
	prmt.b32 %r16248, %r8355, %r16249, %r278;
	// inline asm
	st.local.v2.u32 	[%rd1], {%r16249, %r16248};
	mov.u32 	%r16250, %r16249;
	mov.u32 	%r16251, %r16249;
	mov.u32 	%r16254, %r16249;
	mov.u32 	%r16255, %r16249;
	mov.u32 	%r16256, %r16249;
	mov.u32 	%r16257, %r16249;
	mov.u32 	%r16258, %r16249;
	mov.u32 	%r16259, %r16249;
	mov.u32 	%r16260, %r16249;
	mov.u32 	%r16261, %r16249;
	mov.u32 	%r16262, %r16249;
	mov.u32 	%r16263, %r16249;
	mov.u32 	%r16264, %r16249;
	mov.u32 	%r16265, %r16249;
	mov.u32 	%r16266, %r16249;
	mov.u32 	%r16267, %r16249;
	mov.u32 	%r16268, %r16249;
	mov.u32 	%r16269, %r16249;
	mov.u32 	%r16270, %r16249;
	mov.u32 	%r16271, %r16249;
	mov.u32 	%r16272, %r16249;
	mov.u32 	%r16273, %r16249;
	mov.u32 	%r16274, %r16249;
	mov.u32 	%r16275, %r16249;
	mov.u32 	%r16276, %r16249;
	mov.u32 	%r16277, %r16249;
	mov.u32 	%r16278, %r16249;
	mov.u32 	%r16279, %r16249;
	mov.u32 	%r16280, %r16249;
	mov.u32 	%r16281, %r16249;
	bra.uni 	BB5_694;

BB5_645:
	setp.eq.s32	%p375, %r2804, 17;
	mov.u32 	%r16251, %r16250;
	mov.u32 	%r16252, %r16250;
	mov.u32 	%r16253, %r16250;
	mov.u32 	%r16254, %r16250;
	mov.u32 	%r16255, %r16250;
	mov.u32 	%r16256, %r16250;
	mov.u32 	%r16257, %r16250;
	mov.u32 	%r16258, %r16250;
	mov.u32 	%r16259, %r16250;
	mov.u32 	%r16260, %r16250;
	mov.u32 	%r16261, %r16250;
	mov.u32 	%r16262, %r16250;
	mov.u32 	%r16263, %r16250;
	mov.u32 	%r16264, %r16250;
	mov.u32 	%r16265, %r16250;
	mov.u32 	%r16266, %r16250;
	mov.u32 	%r16267, %r16250;
	mov.u32 	%r16268, %r16250;
	mov.u32 	%r16269, %r16250;
	mov.u32 	%r16270, %r16250;
	mov.u32 	%r16271, %r16250;
	mov.u32 	%r16272, %r16250;
	mov.u32 	%r16273, %r16250;
	mov.u32 	%r16274, %r16250;
	mov.u32 	%r16275, %r16250;
	mov.u32 	%r16276, %r16250;
	mov.u32 	%r16277, %r16250;
	mov.u32 	%r16278, %r16250;
	mov.u32 	%r16279, %r16250;
	mov.u32 	%r16280, %r16250;
	mov.u32 	%r16281, %r16250;
	@%p375 bra 	BB5_646;
	bra.uni 	BB5_694;

BB5_646:
	mov.u32 	%r16248, 0;
	// inline asm
	prmt.b32 %r16268, %r16248, %r71, %r278;
	// inline asm
	ld.local.v2.u32 	{%r5374, %r5375}, [%rd8+8];
	// inline asm
	prmt.b32 %r16269, %r5375, %r5374, %r278;
	// inline asm
	ld.local.u32 	%r5235, [%rd8+8];
	ld.local.u32 	%r5236, [%rd8+4];
	// inline asm
	prmt.b32 %r16262, %r5235, %r5236, %r278;
	// inline asm
	ld.local.v2.u32 	{%r5376, %r5377}, [%rd8];
	// inline asm
	prmt.b32 %r16263, %r5377, %r5376, %r278;
	// inline asm
	ld.local.u32 	%r5243, [%rd8];
	ld.local.u32 	%r5244, [%rd7+12];
	// inline asm
	prmt.b32 %r16264, %r5243, %r5244, %r278;
	// inline asm
	ld.local.v2.u32 	{%r5378, %r5379}, [%rd7+8];
	// inline asm
	prmt.b32 %r16265, %r5379, %r5378, %r278;
	// inline asm
	ld.local.u32 	%r5251, [%rd7+8];
	ld.local.u32 	%r5252, [%rd7+4];
	// inline asm
	prmt.b32 %r16258, %r5251, %r5252, %r278;
	// inline asm
	ld.local.v2.u32 	{%r5380, %r5381}, [%rd7];
	// inline asm
	prmt.b32 %r16259, %r5381, %r5380, %r278;
	// inline asm
	ld.local.u32 	%r5259, [%rd7];
	ld.local.u32 	%r5260, [%rd6+12];
	// inline asm
	prmt.b32 %r16260, %r5259, %r5260, %r278;
	// inline asm
	ld.local.v2.u32 	{%r5382, %r5383}, [%rd6+8];
	// inline asm
	prmt.b32 %r16261, %r5383, %r5382, %r278;
	// inline asm
	ld.local.u32 	%r5267, [%rd6+8];
	ld.local.u32 	%r5268, [%rd6+4];
	// inline asm
	prmt.b32 %r16254, %r5267, %r5268, %r278;
	// inline asm
	ld.local.v2.u32 	{%r5384, %r5385}, [%rd6];
	// inline asm
	prmt.b32 %r16255, %r5385, %r5384, %r278;
	// inline asm
	ld.local.u32 	%r5275, [%rd6];
	ld.local.u32 	%r5276, [%rd5+12];
	// inline asm
	prmt.b32 %r16256, %r5275, %r5276, %r278;
	// inline asm
	ld.local.v2.u32 	{%r5386, %r5387}, [%rd5+8];
	// inline asm
	prmt.b32 %r16257, %r5387, %r5386, %r278;
	// inline asm
	ld.local.u32 	%r5283, [%rd5+8];
	ld.local.u32 	%r5284, [%rd5+4];
	// inline asm
	prmt.b32 %r16250, %r5283, %r5284, %r278;
	// inline asm
	ld.local.v2.u32 	{%r5388, %r5389}, [%rd5];
	// inline asm
	prmt.b32 %r16251, %r5389, %r5388, %r278;
	// inline asm
	ld.local.u32 	%r5291, [%rd5];
	ld.local.u32 	%r5292, [%rd4+12];
	// inline asm
	prmt.b32 %r16252, %r5291, %r5292, %r278;
	// inline asm
	ld.local.v2.u32 	{%r5390, %r5391}, [%rd4+8];
	// inline asm
	prmt.b32 %r16253, %r5391, %r5390, %r278;
	// inline asm
	ld.local.u32 	%r5299, [%rd4+8];
	ld.local.u32 	%r5300, [%rd4+4];
	// inline asm
	prmt.b32 %r5298, %r5299, %r5300, %r278;
	// inline asm
	st.local.u32 	[%rd8+12], %r5298;
	ld.local.v2.u32 	{%r5392, %r5393}, [%rd4];
	// inline asm
	prmt.b32 %r5302, %r5393, %r5392, %r278;
	// inline asm
	st.local.u32 	[%rd8+8], %r5302;
	ld.local.u32 	%r5307, [%rd4];
	ld.local.u32 	%r5308, [%rd3+12];
	// inline asm
	prmt.b32 %r5306, %r5307, %r5308, %r278;
	// inline asm
	st.local.u32 	[%rd8+4], %r5306;
	ld.local.v2.u32 	{%r5394, %r5395}, [%rd3+8];
	// inline asm
	prmt.b32 %r5310, %r5395, %r5394, %r278;
	// inline asm
	st.local.u32 	[%rd8], %r5310;
	ld.local.u32 	%r5315, [%rd3+8];
	ld.local.u32 	%r5316, [%rd3+4];
	// inline asm
	prmt.b32 %r5314, %r5315, %r5316, %r278;
	// inline asm
	st.local.u32 	[%rd7+12], %r5314;
	ld.local.v2.u32 	{%r5396, %r5397}, [%rd3];
	// inline asm
	prmt.b32 %r5318, %r5397, %r5396, %r278;
	// inline asm
	st.local.u32 	[%rd7+8], %r5318;
	ld.local.u32 	%r5323, [%rd3];
	ld.local.u32 	%r5324, [%rd2+12];
	// inline asm
	prmt.b32 %r5322, %r5323, %r5324, %r278;
	// inline asm
	st.local.u32 	[%rd7+4], %r5322;
	ld.local.v2.u32 	{%r5398, %r5399}, [%rd2+8];
	// inline asm
	prmt.b32 %r5326, %r5399, %r5398, %r278;
	// inline asm
	st.local.u32 	[%rd7], %r5326;
	ld.local.u32 	%r5331, [%rd2+8];
	ld.local.u32 	%r5332, [%rd2+4];
	// inline asm
	prmt.b32 %r5330, %r5331, %r5332, %r278;
	// inline asm
	st.local.u32 	[%rd6+12], %r5330;
	ld.local.v2.u32 	{%r5400, %r5401}, [%rd2];
	// inline asm
	prmt.b32 %r5334, %r5401, %r5400, %r278;
	// inline asm
	st.local.u32 	[%rd6+8], %r5334;
	ld.local.u32 	%r5339, [%rd2];
	ld.local.u32 	%r5340, [%rd1+12];
	// inline asm
	prmt.b32 %r5338, %r5339, %r5340, %r278;
	// inline asm
	st.local.u32 	[%rd6+4], %r5338;
	ld.local.v2.u32 	{%r5402, %r5403}, [%rd1+8];
	// inline asm
	prmt.b32 %r5342, %r5403, %r5402, %r278;
	// inline asm
	st.local.u32 	[%rd6], %r5342;
	ld.local.u32 	%r5347, [%rd1+8];
	ld.local.u32 	%r5348, [%rd1+4];
	// inline asm
	prmt.b32 %r5346, %r5347, %r5348, %r278;
	// inline asm
	st.local.u32 	[%rd5+12], %r5346;
	ld.local.v2.u32 	{%r5404, %r5405}, [%rd1];
	// inline asm
	prmt.b32 %r5350, %r5405, %r5404, %r278;
	// inline asm
	st.local.u32 	[%rd5+8], %r5350;
	ld.local.u32 	%r5355, [%rd1];
	// inline asm
	prmt.b32 %r5354, %r5355, %r16248, %r278;
	// inline asm
	st.local.v2.u32 	[%rd5], {%r16248, %r5354};
	st.local.v4.u32 	[%rd4], {%r16248, %r16248, %r16248, %r16248};
	st.local.v4.u32 	[%rd3], {%r16248, %r16248, %r16248, %r16248};
	st.local.v4.u32 	[%rd2], {%r16248, %r16248, %r16248, %r16248};
	st.local.v2.u32 	[%rd1+8], {%r16248, %r16248};
	mov.u64 	%rd925, 0;
	st.local.u64 	[%rd1], %rd925;
	mov.u32 	%r16249, %r16248;
	mov.u32 	%r16266, %r16248;
	mov.u32 	%r16267, %r16248;
	bra.uni 	BB5_689;

BB5_629:
	setp.eq.s32	%p387, %r2804, 9;
	mov.u32 	%r16251, %r16250;
	mov.u32 	%r16252, %r16250;
	mov.u32 	%r16253, %r16250;
	mov.u32 	%r16254, %r16250;
	mov.u32 	%r16255, %r16250;
	mov.u32 	%r16256, %r16250;
	mov.u32 	%r16257, %r16250;
	mov.u32 	%r16258, %r16250;
	mov.u32 	%r16259, %r16250;
	mov.u32 	%r16260, %r16250;
	mov.u32 	%r16261, %r16250;
	mov.u32 	%r16262, %r16250;
	mov.u32 	%r16263, %r16250;
	mov.u32 	%r16264, %r16250;
	mov.u32 	%r16265, %r16250;
	mov.u32 	%r16266, %r16250;
	mov.u32 	%r16267, %r16250;
	mov.u32 	%r16268, %r16250;
	mov.u32 	%r16269, %r16250;
	mov.u32 	%r16270, %r16250;
	mov.u32 	%r16271, %r16250;
	mov.u32 	%r16272, %r16250;
	mov.u32 	%r16273, %r16250;
	mov.u32 	%r16274, %r16250;
	mov.u32 	%r16275, %r16250;
	mov.u32 	%r16276, %r16250;
	mov.u32 	%r16277, %r16250;
	mov.u32 	%r16278, %r16250;
	mov.u32 	%r16279, %r16250;
	mov.u32 	%r16280, %r16250;
	mov.u32 	%r16281, %r16250;
	@%p387 bra 	BB5_630;
	bra.uni 	BB5_694;

BB5_630:
	mov.u32 	%r16248, 0;
	// inline asm
	prmt.b32 %r16260, %r16248, %r71, %r278;
	// inline asm
	ld.local.v2.u32 	{%r6850, %r6851}, [%rd8+8];
	// inline asm
	prmt.b32 %r16261, %r6851, %r6850, %r278;
	// inline asm
	ld.local.u32 	%r6703, [%rd8+8];
	ld.local.u32 	%r6704, [%rd8+4];
	// inline asm
	prmt.b32 %r16254, %r6703, %r6704, %r278;
	// inline asm
	ld.local.v2.u32 	{%r6852, %r6853}, [%rd8];
	// inline asm
	prmt.b32 %r16255, %r6853, %r6852, %r278;
	// inline asm
	ld.local.u32 	%r6711, [%rd8];
	ld.local.u32 	%r6712, [%rd7+12];
	// inline asm
	prmt.b32 %r16256, %r6711, %r6712, %r278;
	// inline asm
	ld.local.v2.u32 	{%r6854, %r6855}, [%rd7+8];
	// inline asm
	prmt.b32 %r16257, %r6855, %r6854, %r278;
	// inline asm
	ld.local.u32 	%r6719, [%rd7+8];
	ld.local.u32 	%r6720, [%rd7+4];
	// inline asm
	prmt.b32 %r16250, %r6719, %r6720, %r278;
	// inline asm
	ld.local.v2.u32 	{%r6856, %r6857}, [%rd7];
	// inline asm
	prmt.b32 %r16251, %r6857, %r6856, %r278;
	// inline asm
	ld.local.u32 	%r6727, [%rd7];
	ld.local.u32 	%r6728, [%rd6+12];
	// inline asm
	prmt.b32 %r16252, %r6727, %r6728, %r278;
	// inline asm
	ld.local.v2.u32 	{%r6858, %r6859}, [%rd6+8];
	// inline asm
	prmt.b32 %r16253, %r6859, %r6858, %r278;
	// inline asm
	ld.local.u32 	%r6735, [%rd6+8];
	ld.local.u32 	%r6736, [%rd6+4];
	// inline asm
	prmt.b32 %r6734, %r6735, %r6736, %r278;
	// inline asm
	st.local.u32 	[%rd8+12], %r6734;
	ld.local.v2.u32 	{%r6860, %r6861}, [%rd6];
	// inline asm
	prmt.b32 %r6738, %r6861, %r6860, %r278;
	// inline asm
	st.local.u32 	[%rd8+8], %r6738;
	ld.local.u32 	%r6743, [%rd6];
	ld.local.u32 	%r6744, [%rd5+12];
	// inline asm
	prmt.b32 %r6742, %r6743, %r6744, %r278;
	// inline asm
	st.local.u32 	[%rd8+4], %r6742;
	ld.local.v2.u32 	{%r6862, %r6863}, [%rd5+8];
	// inline asm
	prmt.b32 %r6746, %r6863, %r6862, %r278;
	// inline asm
	st.local.u32 	[%rd8], %r6746;
	ld.local.u32 	%r6751, [%rd5+8];
	ld.local.u32 	%r6752, [%rd5+4];
	// inline asm
	prmt.b32 %r6750, %r6751, %r6752, %r278;
	// inline asm
	st.local.u32 	[%rd7+12], %r6750;
	ld.local.v2.u32 	{%r6864, %r6865}, [%rd5];
	// inline asm
	prmt.b32 %r6754, %r6865, %r6864, %r278;
	// inline asm
	st.local.u32 	[%rd7+8], %r6754;
	ld.local.u32 	%r6759, [%rd5];
	ld.local.u32 	%r6760, [%rd4+12];
	// inline asm
	prmt.b32 %r6758, %r6759, %r6760, %r278;
	// inline asm
	st.local.u32 	[%rd7+4], %r6758;
	ld.local.v2.u32 	{%r6866, %r6867}, [%rd4+8];
	// inline asm
	prmt.b32 %r6762, %r6867, %r6866, %r278;
	// inline asm
	st.local.u32 	[%rd7], %r6762;
	ld.local.u32 	%r6767, [%rd4+8];
	ld.local.u32 	%r6768, [%rd4+4];
	// inline asm
	prmt.b32 %r6766, %r6767, %r6768, %r278;
	// inline asm
	st.local.u32 	[%rd6+12], %r6766;
	ld.local.v2.u32 	{%r6868, %r6869}, [%rd4];
	// inline asm
	prmt.b32 %r6770, %r6869, %r6868, %r278;
	// inline asm
	st.local.u32 	[%rd6+8], %r6770;
	ld.local.u32 	%r6775, [%rd4];
	ld.local.u32 	%r6776, [%rd3+12];
	// inline asm
	prmt.b32 %r6774, %r6775, %r6776, %r278;
	// inline asm
	st.local.u32 	[%rd6+4], %r6774;
	ld.local.v2.u32 	{%r6870, %r6871}, [%rd3+8];
	// inline asm
	prmt.b32 %r6778, %r6871, %r6870, %r278;
	// inline asm
	st.local.u32 	[%rd6], %r6778;
	ld.local.u32 	%r6783, [%rd3+8];
	ld.local.u32 	%r6784, [%rd3+4];
	// inline asm
	prmt.b32 %r6782, %r6783, %r6784, %r278;
	// inline asm
	st.local.u32 	[%rd5+12], %r6782;
	ld.local.v2.u32 	{%r6872, %r6873}, [%rd3];
	// inline asm
	prmt.b32 %r6786, %r6873, %r6872, %r278;
	// inline asm
	st.local.u32 	[%rd5+8], %r6786;
	ld.local.u32 	%r6791, [%rd3];
	ld.local.u32 	%r6792, [%rd2+12];
	// inline asm
	prmt.b32 %r6790, %r6791, %r6792, %r278;
	// inline asm
	st.local.u32 	[%rd5+4], %r6790;
	ld.local.v2.u32 	{%r6874, %r6875}, [%rd2+8];
	// inline asm
	prmt.b32 %r6794, %r6875, %r6874, %r278;
	// inline asm
	st.local.u32 	[%rd5], %r6794;
	ld.local.u32 	%r6799, [%rd2+8];
	ld.local.u32 	%r6800, [%rd2+4];
	// inline asm
	prmt.b32 %r6798, %r6799, %r6800, %r278;
	// inline asm
	st.local.u32 	[%rd4+12], %r6798;
	ld.local.v2.u32 	{%r6876, %r6877}, [%rd2];
	// inline asm
	prmt.b32 %r6802, %r6877, %r6876, %r278;
	// inline asm
	st.local.u32 	[%rd4+8], %r6802;
	ld.local.u32 	%r6807, [%rd2];
	ld.local.u32 	%r6808, [%rd1+12];
	// inline asm
	prmt.b32 %r6806, %r6807, %r6808, %r278;
	// inline asm
	st.local.u32 	[%rd4+4], %r6806;
	ld.local.v2.u32 	{%r6878, %r6879}, [%rd1+8];
	// inline asm
	prmt.b32 %r6810, %r6879, %r6878, %r278;
	// inline asm
	st.local.u32 	[%rd4], %r6810;
	ld.local.u32 	%r6815, [%rd1+8];
	ld.local.u32 	%r6816, [%rd1+4];
	// inline asm
	prmt.b32 %r6814, %r6815, %r6816, %r278;
	// inline asm
	st.local.u32 	[%rd3+12], %r6814;
	ld.local.v2.u32 	{%r6880, %r6881}, [%rd1];
	// inline asm
	prmt.b32 %r6818, %r6881, %r6880, %r278;
	// inline asm
	st.local.u32 	[%rd3+8], %r6818;
	ld.local.u32 	%r6823, [%rd1];
	// inline asm
	prmt.b32 %r6822, %r6823, %r16248, %r278;
	// inline asm
	st.local.v2.u32 	[%rd3], {%r16248, %r6822};
	st.local.v4.u32 	[%rd2], {%r16248, %r16248, %r16248, %r16248};
	st.local.v2.u32 	[%rd1+8], {%r16248, %r16248};
	mov.u64 	%rd933, 0;
	st.local.u64 	[%rd1], %rd933;
	mov.u32 	%r16249, %r16248;
	mov.u32 	%r16258, %r16248;
	mov.u32 	%r16259, %r16248;
	bra.uni 	BB5_687;

BB5_660:
	setp.eq.s32	%p364, %r2804, 25;
	mov.u32 	%r16251, %r16250;
	mov.u32 	%r16252, %r16250;
	mov.u32 	%r16253, %r16250;
	mov.u32 	%r16254, %r16250;
	mov.u32 	%r16255, %r16250;
	mov.u32 	%r16256, %r16250;
	mov.u32 	%r16257, %r16250;
	mov.u32 	%r16258, %r16250;
	mov.u32 	%r16259, %r16250;
	mov.u32 	%r16260, %r16250;
	mov.u32 	%r16261, %r16250;
	mov.u32 	%r16262, %r16250;
	mov.u32 	%r16263, %r16250;
	mov.u32 	%r16264, %r16250;
	mov.u32 	%r16265, %r16250;
	mov.u32 	%r16266, %r16250;
	mov.u32 	%r16267, %r16250;
	mov.u32 	%r16268, %r16250;
	mov.u32 	%r16269, %r16250;
	mov.u32 	%r16270, %r16250;
	mov.u32 	%r16271, %r16250;
	mov.u32 	%r16272, %r16250;
	mov.u32 	%r16273, %r16250;
	mov.u32 	%r16274, %r16250;
	mov.u32 	%r16275, %r16250;
	mov.u32 	%r16276, %r16250;
	mov.u32 	%r16277, %r16250;
	mov.u32 	%r16278, %r16250;
	mov.u32 	%r16279, %r16250;
	mov.u32 	%r16280, %r16250;
	mov.u32 	%r16281, %r16250;
	@%p364 bra 	BB5_661;
	bra.uni 	BB5_694;

BB5_661:
	mov.u32 	%r16248, 0;
	// inline asm
	prmt.b32 %r16276, %r16248, %r71, %r278;
	// inline asm
	ld.local.v2.u32 	{%r3962, %r3963}, [%rd8+8];
	// inline asm
	prmt.b32 %r16277, %r3963, %r3962, %r278;
	// inline asm
	ld.local.u32 	%r3831, [%rd8+8];
	ld.local.u32 	%r3832, [%rd8+4];
	// inline asm
	prmt.b32 %r16270, %r3831, %r3832, %r278;
	// inline asm
	ld.local.v2.u32 	{%r3964, %r3965}, [%rd8];
	// inline asm
	prmt.b32 %r16271, %r3965, %r3964, %r278;
	// inline asm
	ld.local.u32 	%r3839, [%rd8];
	ld.local.u32 	%r3840, [%rd7+12];
	// inline asm
	prmt.b32 %r16272, %r3839, %r3840, %r278;
	// inline asm
	ld.local.v2.u32 	{%r3966, %r3967}, [%rd7+8];
	// inline asm
	prmt.b32 %r16273, %r3967, %r3966, %r278;
	// inline asm
	ld.local.u32 	%r3847, [%rd7+8];
	ld.local.u32 	%r3848, [%rd7+4];
	// inline asm
	prmt.b32 %r16266, %r3847, %r3848, %r278;
	// inline asm
	ld.local.v2.u32 	{%r3968, %r3969}, [%rd7];
	// inline asm
	prmt.b32 %r16267, %r3969, %r3968, %r278;
	// inline asm
	ld.local.u32 	%r3855, [%rd7];
	ld.local.u32 	%r3856, [%rd6+12];
	// inline asm
	prmt.b32 %r16268, %r3855, %r3856, %r278;
	// inline asm
	ld.local.v2.u32 	{%r3970, %r3971}, [%rd6+8];
	// inline asm
	prmt.b32 %r16269, %r3971, %r3970, %r278;
	// inline asm
	ld.local.u32 	%r3863, [%rd6+8];
	ld.local.u32 	%r3864, [%rd6+4];
	// inline asm
	prmt.b32 %r16262, %r3863, %r3864, %r278;
	// inline asm
	ld.local.v2.u32 	{%r3972, %r3973}, [%rd6];
	// inline asm
	prmt.b32 %r16263, %r3973, %r3972, %r278;
	// inline asm
	ld.local.u32 	%r3871, [%rd6];
	ld.local.u32 	%r3872, [%rd5+12];
	// inline asm
	prmt.b32 %r16264, %r3871, %r3872, %r278;
	// inline asm
	ld.local.v2.u32 	{%r3974, %r3975}, [%rd5+8];
	// inline asm
	prmt.b32 %r16265, %r3975, %r3974, %r278;
	// inline asm
	ld.local.u32 	%r3879, [%rd5+8];
	ld.local.u32 	%r3880, [%rd5+4];
	// inline asm
	prmt.b32 %r16258, %r3879, %r3880, %r278;
	// inline asm
	ld.local.v2.u32 	{%r3976, %r3977}, [%rd5];
	// inline asm
	prmt.b32 %r16259, %r3977, %r3976, %r278;
	// inline asm
	ld.local.u32 	%r3887, [%rd5];
	ld.local.u32 	%r3888, [%rd4+12];
	// inline asm
	prmt.b32 %r16260, %r3887, %r3888, %r278;
	// inline asm
	ld.local.v2.u32 	{%r3978, %r3979}, [%rd4+8];
	// inline asm
	prmt.b32 %r16261, %r3979, %r3978, %r278;
	// inline asm
	ld.local.u32 	%r3895, [%rd4+8];
	ld.local.u32 	%r3896, [%rd4+4];
	// inline asm
	prmt.b32 %r16254, %r3895, %r3896, %r278;
	// inline asm
	ld.local.v2.u32 	{%r3980, %r3981}, [%rd4];
	// inline asm
	prmt.b32 %r16255, %r3981, %r3980, %r278;
	// inline asm
	ld.local.u32 	%r3903, [%rd4];
	ld.local.u32 	%r3904, [%rd3+12];
	// inline asm
	prmt.b32 %r16256, %r3903, %r3904, %r278;
	// inline asm
	ld.local.v2.u32 	{%r3982, %r3983}, [%rd3+8];
	// inline asm
	prmt.b32 %r16257, %r3983, %r3982, %r278;
	// inline asm
	ld.local.u32 	%r3911, [%rd3+8];
	ld.local.u32 	%r3912, [%rd3+4];
	// inline asm
	prmt.b32 %r16250, %r3911, %r3912, %r278;
	// inline asm
	ld.local.v2.u32 	{%r3984, %r3985}, [%rd3];
	// inline asm
	prmt.b32 %r16251, %r3985, %r3984, %r278;
	// inline asm
	ld.local.u32 	%r3919, [%rd3];
	ld.local.u32 	%r3920, [%rd2+12];
	// inline asm
	prmt.b32 %r16252, %r3919, %r3920, %r278;
	// inline asm
	ld.local.v2.u32 	{%r3986, %r3987}, [%rd2+8];
	// inline asm
	prmt.b32 %r16253, %r3987, %r3986, %r278;
	// inline asm
	ld.local.u32 	%r3927, [%rd2+8];
	ld.local.u32 	%r3928, [%rd2+4];
	// inline asm
	prmt.b32 %r3926, %r3927, %r3928, %r278;
	// inline asm
	st.local.u32 	[%rd8+12], %r3926;
	ld.local.v2.u32 	{%r3988, %r3989}, [%rd2];
	// inline asm
	prmt.b32 %r3930, %r3989, %r3988, %r278;
	// inline asm
	st.local.u32 	[%rd8+8], %r3930;
	ld.local.u32 	%r3935, [%rd2];
	ld.local.u32 	%r3936, [%rd1+12];
	// inline asm
	prmt.b32 %r3934, %r3935, %r3936, %r278;
	// inline asm
	st.local.u32 	[%rd8+4], %r3934;
	ld.local.v2.u32 	{%r3990, %r3991}, [%rd1+8];
	// inline asm
	prmt.b32 %r3938, %r3991, %r3990, %r278;
	// inline asm
	st.local.u32 	[%rd8], %r3938;
	ld.local.u32 	%r3943, [%rd1+8];
	ld.local.u32 	%r3944, [%rd1+4];
	// inline asm
	prmt.b32 %r3942, %r3943, %r3944, %r278;
	// inline asm
	st.local.u32 	[%rd7+12], %r3942;
	ld.local.v2.u32 	{%r3992, %r3993}, [%rd1];
	// inline asm
	prmt.b32 %r3946, %r3993, %r3992, %r278;
	// inline asm
	st.local.u32 	[%rd7+8], %r3946;
	ld.local.u32 	%r3951, [%rd1];
	// inline asm
	prmt.b32 %r3950, %r3951, %r16248, %r278;
	// inline asm
	st.local.v2.u32 	[%rd7], {%r16248, %r3950};
	st.local.v4.u32 	[%rd6], {%r16248, %r16248, %r16248, %r16248};
	st.local.v4.u32 	[%rd5], {%r16248, %r16248, %r16248, %r16248};
	st.local.v4.u32 	[%rd4], {%r16248, %r16248, %r16248, %r16248};
	st.local.v4.u32 	[%rd3], {%r16248, %r16248, %r16248, %r16248};
	st.local.v4.u32 	[%rd2], {%r16248, %r16248, %r16248, %r16248};
	st.local.v2.u32 	[%rd1+8], {%r16248, %r16248};
	mov.u64 	%rd917, 0;
	st.local.u64 	[%rd1], %rd917;
	mov.u32 	%r16249, %r16248;
	mov.u32 	%r16274, %r16248;
	mov.u32 	%r16275, %r16248;
	bra.uni 	BB5_691;

BB5_621:
	setp.eq.s32	%p393, %r2804, 5;
	mov.u32 	%r16251, %r16250;
	mov.u32 	%r16252, %r16250;
	mov.u32 	%r16253, %r16250;
	mov.u32 	%r16254, %r16250;
	mov.u32 	%r16255, %r16250;
	mov.u32 	%r16256, %r16250;
	mov.u32 	%r16257, %r16250;
	mov.u32 	%r16258, %r16250;
	mov.u32 	%r16259, %r16250;
	mov.u32 	%r16260, %r16250;
	mov.u32 	%r16261, %r16250;
	mov.u32 	%r16262, %r16250;
	mov.u32 	%r16263, %r16250;
	mov.u32 	%r16264, %r16250;
	mov.u32 	%r16265, %r16250;
	mov.u32 	%r16266, %r16250;
	mov.u32 	%r16267, %r16250;
	mov.u32 	%r16268, %r16250;
	mov.u32 	%r16269, %r16250;
	mov.u32 	%r16270, %r16250;
	mov.u32 	%r16271, %r16250;
	mov.u32 	%r16272, %r16250;
	mov.u32 	%r16273, %r16250;
	mov.u32 	%r16274, %r16250;
	mov.u32 	%r16275, %r16250;
	mov.u32 	%r16276, %r16250;
	mov.u32 	%r16277, %r16250;
	mov.u32 	%r16278, %r16250;
	mov.u32 	%r16279, %r16250;
	mov.u32 	%r16280, %r16250;
	mov.u32 	%r16281, %r16250;
	@%p393 bra 	BB5_622;
	bra.uni 	BB5_694;

BB5_622:
	mov.u32 	%r16248, 0;
	// inline asm
	prmt.b32 %r16256, %r16248, %r71, %r278;
	// inline asm
	ld.local.v2.u32 	{%r7612, %r7613}, [%rd8+8];
	// inline asm
	prmt.b32 %r16257, %r7613, %r7612, %r278;
	// inline asm
	ld.local.u32 	%r7461, [%rd8+8];
	ld.local.u32 	%r7462, [%rd8+4];
	// inline asm
	prmt.b32 %r16250, %r7461, %r7462, %r278;
	// inline asm
	ld.local.v2.u32 	{%r7614, %r7615}, [%rd8];
	// inline asm
	prmt.b32 %r16251, %r7615, %r7614, %r278;
	// inline asm
	ld.local.u32 	%r7469, [%rd8];
	ld.local.u32 	%r7470, [%rd7+12];
	// inline asm
	prmt.b32 %r16252, %r7469, %r7470, %r278;
	// inline asm
	ld.local.v2.u32 	{%r7616, %r7617}, [%rd7+8];
	// inline asm
	prmt.b32 %r16253, %r7617, %r7616, %r278;
	// inline asm
	ld.local.u32 	%r7477, [%rd7+8];
	ld.local.u32 	%r7478, [%rd7+4];
	// inline asm
	prmt.b32 %r7476, %r7477, %r7478, %r278;
	// inline asm
	st.local.u32 	[%rd8+12], %r7476;
	ld.local.v2.u32 	{%r7618, %r7619}, [%rd7];
	// inline asm
	prmt.b32 %r7480, %r7619, %r7618, %r278;
	// inline asm
	st.local.u32 	[%rd8+8], %r7480;
	ld.local.u32 	%r7485, [%rd7];
	ld.local.u32 	%r7486, [%rd6+12];
	// inline asm
	prmt.b32 %r7484, %r7485, %r7486, %r278;
	// inline asm
	st.local.u32 	[%rd8+4], %r7484;
	ld.local.v2.u32 	{%r7620, %r7621}, [%rd6+8];
	// inline asm
	prmt.b32 %r7488, %r7621, %r7620, %r278;
	// inline asm
	st.local.u32 	[%rd8], %r7488;
	ld.local.u32 	%r7493, [%rd6+8];
	ld.local.u32 	%r7494, [%rd6+4];
	// inline asm
	prmt.b32 %r7492, %r7493, %r7494, %r278;
	// inline asm
	st.local.u32 	[%rd7+12], %r7492;
	ld.local.v2.u32 	{%r7622, %r7623}, [%rd6];
	// inline asm
	prmt.b32 %r7496, %r7623, %r7622, %r278;
	// inline asm
	st.local.u32 	[%rd7+8], %r7496;
	ld.local.u32 	%r7501, [%rd6];
	ld.local.u32 	%r7502, [%rd5+12];
	// inline asm
	prmt.b32 %r7500, %r7501, %r7502, %r278;
	// inline asm
	st.local.u32 	[%rd7+4], %r7500;
	ld.local.v2.u32 	{%r7624, %r7625}, [%rd5+8];
	// inline asm
	prmt.b32 %r7504, %r7625, %r7624, %r278;
	// inline asm
	st.local.u32 	[%rd7], %r7504;
	ld.local.u32 	%r7509, [%rd5+8];
	ld.local.u32 	%r7510, [%rd5+4];
	// inline asm
	prmt.b32 %r7508, %r7509, %r7510, %r278;
	// inline asm
	st.local.u32 	[%rd6+12], %r7508;
	ld.local.v2.u32 	{%r7626, %r7627}, [%rd5];
	// inline asm
	prmt.b32 %r7512, %r7627, %r7626, %r278;
	// inline asm
	st.local.u32 	[%rd6+8], %r7512;
	ld.local.u32 	%r7517, [%rd5];
	ld.local.u32 	%r7518, [%rd4+12];
	// inline asm
	prmt.b32 %r7516, %r7517, %r7518, %r278;
	// inline asm
	st.local.u32 	[%rd6+4], %r7516;
	ld.local.v2.u32 	{%r7628, %r7629}, [%rd4+8];
	// inline asm
	prmt.b32 %r7520, %r7629, %r7628, %r278;
	// inline asm
	st.local.u32 	[%rd6], %r7520;
	ld.local.u32 	%r7525, [%rd4+8];
	ld.local.u32 	%r7526, [%rd4+4];
	// inline asm
	prmt.b32 %r7524, %r7525, %r7526, %r278;
	// inline asm
	st.local.u32 	[%rd5+12], %r7524;
	ld.local.v2.u32 	{%r7630, %r7631}, [%rd4];
	// inline asm
	prmt.b32 %r7528, %r7631, %r7630, %r278;
	// inline asm
	st.local.u32 	[%rd5+8], %r7528;
	ld.local.u32 	%r7533, [%rd4];
	ld.local.u32 	%r7534, [%rd3+12];
	// inline asm
	prmt.b32 %r7532, %r7533, %r7534, %r278;
	// inline asm
	st.local.u32 	[%rd5+4], %r7532;
	ld.local.v2.u32 	{%r7632, %r7633}, [%rd3+8];
	// inline asm
	prmt.b32 %r7536, %r7633, %r7632, %r278;
	// inline asm
	st.local.u32 	[%rd5], %r7536;
	ld.local.u32 	%r7541, [%rd3+8];
	ld.local.u32 	%r7542, [%rd3+4];
	// inline asm
	prmt.b32 %r7540, %r7541, %r7542, %r278;
	// inline asm
	st.local.u32 	[%rd4+12], %r7540;
	ld.local.v2.u32 	{%r7634, %r7635}, [%rd3];
	// inline asm
	prmt.b32 %r7544, %r7635, %r7634, %r278;
	// inline asm
	st.local.u32 	[%rd4+8], %r7544;
	ld.local.u32 	%r7549, [%rd3];
	ld.local.u32 	%r7550, [%rd2+12];
	// inline asm
	prmt.b32 %r7548, %r7549, %r7550, %r278;
	// inline asm
	st.local.u32 	[%rd4+4], %r7548;
	ld.local.v2.u32 	{%r7636, %r7637}, [%rd2+8];
	// inline asm
	prmt.b32 %r7552, %r7637, %r7636, %r278;
	// inline asm
	st.local.u32 	[%rd4], %r7552;
	ld.local.u32 	%r7557, [%rd2+8];
	ld.local.u32 	%r7558, [%rd2+4];
	// inline asm
	prmt.b32 %r7556, %r7557, %r7558, %r278;
	// inline asm
	st.local.u32 	[%rd3+12], %r7556;
	ld.local.v2.u32 	{%r7638, %r7639}, [%rd2];
	// inline asm
	prmt.b32 %r7560, %r7639, %r7638, %r278;
	// inline asm
	st.local.u32 	[%rd3+8], %r7560;
	ld.local.u32 	%r7565, [%rd2];
	ld.local.u32 	%r7566, [%rd1+12];
	// inline asm
	prmt.b32 %r7564, %r7565, %r7566, %r278;
	// inline asm
	st.local.u32 	[%rd3+4], %r7564;
	ld.local.v2.u32 	{%r7640, %r7641}, [%rd1+8];
	// inline asm
	prmt.b32 %r7568, %r7641, %r7640, %r278;
	// inline asm
	st.local.u32 	[%rd3], %r7568;
	ld.local.u32 	%r7573, [%rd1+8];
	ld.local.u32 	%r7574, [%rd1+4];
	// inline asm
	prmt.b32 %r7572, %r7573, %r7574, %r278;
	// inline asm
	st.local.u32 	[%rd2+12], %r7572;
	ld.local.v2.u32 	{%r7642, %r7643}, [%rd1];
	// inline asm
	prmt.b32 %r7576, %r7643, %r7642, %r278;
	// inline asm
	st.local.u32 	[%rd2+8], %r7576;
	ld.local.u32 	%r7581, [%rd1];
	// inline asm
	prmt.b32 %r7580, %r7581, %r16248, %r278;
	// inline asm
	st.local.v2.u32 	[%rd2], {%r16248, %r7580};
	st.local.v2.u32 	[%rd1+8], {%r16248, %r16248};
	mov.u64 	%rd937, 0;
	st.local.u64 	[%rd1], %rd937;
	mov.u32 	%r16249, %r16248;
	mov.u32 	%r16254, %r16248;
	mov.u32 	%r16255, %r16248;
	bra.uni 	BB5_686;

BB5_652:
	setp.eq.s32	%p370, %r2804, 21;
	mov.u32 	%r16251, %r16250;
	mov.u32 	%r16252, %r16250;
	mov.u32 	%r16253, %r16250;
	mov.u32 	%r16254, %r16250;
	mov.u32 	%r16255, %r16250;
	mov.u32 	%r16256, %r16250;
	mov.u32 	%r16257, %r16250;
	mov.u32 	%r16258, %r16250;
	mov.u32 	%r16259, %r16250;
	mov.u32 	%r16260, %r16250;
	mov.u32 	%r16261, %r16250;
	mov.u32 	%r16262, %r16250;
	mov.u32 	%r16263, %r16250;
	mov.u32 	%r16264, %r16250;
	mov.u32 	%r16265, %r16250;
	mov.u32 	%r16266, %r16250;
	mov.u32 	%r16267, %r16250;
	mov.u32 	%r16268, %r16250;
	mov.u32 	%r16269, %r16250;
	mov.u32 	%r16270, %r16250;
	mov.u32 	%r16271, %r16250;
	mov.u32 	%r16272, %r16250;
	mov.u32 	%r16273, %r16250;
	mov.u32 	%r16274, %r16250;
	mov.u32 	%r16275, %r16250;
	mov.u32 	%r16276, %r16250;
	mov.u32 	%r16277, %r16250;
	mov.u32 	%r16278, %r16250;
	mov.u32 	%r16279, %r16250;
	mov.u32 	%r16280, %r16250;
	mov.u32 	%r16281, %r16250;
	@%p370 bra 	BB5_653;
	bra.uni 	BB5_694;

BB5_653:
	mov.u32 	%r16248, 0;
	// inline asm
	prmt.b32 %r16272, %r16248, %r71, %r278;
	// inline asm
	ld.local.v2.u32 	{%r4660, %r4661}, [%rd8+8];
	// inline asm
	prmt.b32 %r16273, %r4661, %r4660, %r278;
	// inline asm
	ld.local.u32 	%r4525, [%rd8+8];
	ld.local.u32 	%r4526, [%rd8+4];
	// inline asm
	prmt.b32 %r16266, %r4525, %r4526, %r278;
	// inline asm
	ld.local.v2.u32 	{%r4662, %r4663}, [%rd8];
	// inline asm
	prmt.b32 %r16267, %r4663, %r4662, %r278;
	// inline asm
	ld.local.u32 	%r4533, [%rd8];
	ld.local.u32 	%r4534, [%rd7+12];
	// inline asm
	prmt.b32 %r16268, %r4533, %r4534, %r278;
	// inline asm
	ld.local.v2.u32 	{%r4664, %r4665}, [%rd7+8];
	// inline asm
	prmt.b32 %r16269, %r4665, %r4664, %r278;
	// inline asm
	ld.local.u32 	%r4541, [%rd7+8];
	ld.local.u32 	%r4542, [%rd7+4];
	// inline asm
	prmt.b32 %r16262, %r4541, %r4542, %r278;
	// inline asm
	ld.local.v2.u32 	{%r4666, %r4667}, [%rd7];
	// inline asm
	prmt.b32 %r16263, %r4667, %r4666, %r278;
	// inline asm
	ld.local.u32 	%r4549, [%rd7];
	ld.local.u32 	%r4550, [%rd6+12];
	// inline asm
	prmt.b32 %r16264, %r4549, %r4550, %r278;
	// inline asm
	ld.local.v2.u32 	{%r4668, %r4669}, [%rd6+8];
	// inline asm
	prmt.b32 %r16265, %r4669, %r4668, %r278;
	// inline asm
	ld.local.u32 	%r4557, [%rd6+8];
	ld.local.u32 	%r4558, [%rd6+4];
	// inline asm
	prmt.b32 %r16258, %r4557, %r4558, %r278;
	// inline asm
	ld.local.v2.u32 	{%r4670, %r4671}, [%rd6];
	// inline asm
	prmt.b32 %r16259, %r4671, %r4670, %r278;
	// inline asm
	ld.local.u32 	%r4565, [%rd6];
	ld.local.u32 	%r4566, [%rd5+12];
	// inline asm
	prmt.b32 %r16260, %r4565, %r4566, %r278;
	// inline asm
	ld.local.v2.u32 	{%r4672, %r4673}, [%rd5+8];
	// inline asm
	prmt.b32 %r16261, %r4673, %r4672, %r278;
	// inline asm
	ld.local.u32 	%r4573, [%rd5+8];
	ld.local.u32 	%r4574, [%rd5+4];
	// inline asm
	prmt.b32 %r16254, %r4573, %r4574, %r278;
	// inline asm
	ld.local.v2.u32 	{%r4674, %r4675}, [%rd5];
	// inline asm
	prmt.b32 %r16255, %r4675, %r4674, %r278;
	// inline asm
	ld.local.u32 	%r4581, [%rd5];
	ld.local.u32 	%r4582, [%rd4+12];
	// inline asm
	prmt.b32 %r16256, %r4581, %r4582, %r278;
	// inline asm
	ld.local.v2.u32 	{%r4676, %r4677}, [%rd4+8];
	// inline asm
	prmt.b32 %r16257, %r4677, %r4676, %r278;
	// inline asm
	ld.local.u32 	%r4589, [%rd4+8];
	ld.local.u32 	%r4590, [%rd4+4];
	// inline asm
	prmt.b32 %r16250, %r4589, %r4590, %r278;
	// inline asm
	ld.local.v2.u32 	{%r4678, %r4679}, [%rd4];
	// inline asm
	prmt.b32 %r16251, %r4679, %r4678, %r278;
	// inline asm
	ld.local.u32 	%r4597, [%rd4];
	ld.local.u32 	%r4598, [%rd3+12];
	// inline asm
	prmt.b32 %r16252, %r4597, %r4598, %r278;
	// inline asm
	ld.local.v2.u32 	{%r4680, %r4681}, [%rd3+8];
	// inline asm
	prmt.b32 %r16253, %r4681, %r4680, %r278;
	// inline asm
	ld.local.u32 	%r4605, [%rd3+8];
	ld.local.u32 	%r4606, [%rd3+4];
	// inline asm
	prmt.b32 %r4604, %r4605, %r4606, %r278;
	// inline asm
	st.local.u32 	[%rd8+12], %r4604;
	ld.local.v2.u32 	{%r4682, %r4683}, [%rd3];
	// inline asm
	prmt.b32 %r4608, %r4683, %r4682, %r278;
	// inline asm
	st.local.u32 	[%rd8+8], %r4608;
	ld.local.u32 	%r4613, [%rd3];
	ld.local.u32 	%r4614, [%rd2+12];
	// inline asm
	prmt.b32 %r4612, %r4613, %r4614, %r278;
	// inline asm
	st.local.u32 	[%rd8+4], %r4612;
	ld.local.v2.u32 	{%r4684, %r4685}, [%rd2+8];
	// inline asm
	prmt.b32 %r4616, %r4685, %r4684, %r278;
	// inline asm
	st.local.u32 	[%rd8], %r4616;
	ld.local.u32 	%r4621, [%rd2+8];
	ld.local.u32 	%r4622, [%rd2+4];
	// inline asm
	prmt.b32 %r4620, %r4621, %r4622, %r278;
	// inline asm
	st.local.u32 	[%rd7+12], %r4620;
	ld.local.v2.u32 	{%r4686, %r4687}, [%rd2];
	// inline asm
	prmt.b32 %r4624, %r4687, %r4686, %r278;
	// inline asm
	st.local.u32 	[%rd7+8], %r4624;
	ld.local.u32 	%r4629, [%rd2];
	ld.local.u32 	%r4630, [%rd1+12];
	// inline asm
	prmt.b32 %r4628, %r4629, %r4630, %r278;
	// inline asm
	st.local.u32 	[%rd7+4], %r4628;
	ld.local.v2.u32 	{%r4688, %r4689}, [%rd1+8];
	// inline asm
	prmt.b32 %r4632, %r4689, %r4688, %r278;
	// inline asm
	st.local.u32 	[%rd7], %r4632;
	ld.local.u32 	%r4637, [%rd1+8];
	ld.local.u32 	%r4638, [%rd1+4];
	// inline asm
	prmt.b32 %r4636, %r4637, %r4638, %r278;
	// inline asm
	st.local.u32 	[%rd6+12], %r4636;
	ld.local.v2.u32 	{%r4690, %r4691}, [%rd1];
	// inline asm
	prmt.b32 %r4640, %r4691, %r4690, %r278;
	// inline asm
	st.local.u32 	[%rd6+8], %r4640;
	ld.local.u32 	%r4645, [%rd1];
	// inline asm
	prmt.b32 %r4644, %r4645, %r16248, %r278;
	// inline asm
	st.local.v2.u32 	[%rd6], {%r16248, %r4644};
	st.local.v4.u32 	[%rd5], {%r16248, %r16248, %r16248, %r16248};
	st.local.v4.u32 	[%rd4], {%r16248, %r16248, %r16248, %r16248};
	st.local.v4.u32 	[%rd3], {%r16248, %r16248, %r16248, %r16248};
	st.local.v4.u32 	[%rd2], {%r16248, %r16248, %r16248, %r16248};
	st.local.v2.u32 	[%rd1+8], {%r16248, %r16248};
	mov.u64 	%rd921, 0;
	st.local.u64 	[%rd1], %rd921;
	mov.u32 	%r16249, %r16248;
	mov.u32 	%r16270, %r16248;
	mov.u32 	%r16271, %r16248;
	bra.uni 	BB5_690;

BB5_636:
	setp.eq.s32	%p382, %r2804, 13;
	mov.u32 	%r16251, %r16250;
	mov.u32 	%r16252, %r16250;
	mov.u32 	%r16253, %r16250;
	mov.u32 	%r16254, %r16250;
	mov.u32 	%r16255, %r16250;
	mov.u32 	%r16256, %r16250;
	mov.u32 	%r16257, %r16250;
	mov.u32 	%r16258, %r16250;
	mov.u32 	%r16259, %r16250;
	mov.u32 	%r16260, %r16250;
	mov.u32 	%r16261, %r16250;
	mov.u32 	%r16262, %r16250;
	mov.u32 	%r16263, %r16250;
	mov.u32 	%r16264, %r16250;
	mov.u32 	%r16265, %r16250;
	mov.u32 	%r16266, %r16250;
	mov.u32 	%r16267, %r16250;
	mov.u32 	%r16268, %r16250;
	mov.u32 	%r16269, %r16250;
	mov.u32 	%r16270, %r16250;
	mov.u32 	%r16271, %r16250;
	mov.u32 	%r16272, %r16250;
	mov.u32 	%r16273, %r16250;
	mov.u32 	%r16274, %r16250;
	mov.u32 	%r16275, %r16250;
	mov.u32 	%r16276, %r16250;
	mov.u32 	%r16277, %r16250;
	mov.u32 	%r16278, %r16250;
	mov.u32 	%r16279, %r16250;
	mov.u32 	%r16280, %r16250;
	mov.u32 	%r16281, %r16250;
	@%p382 bra 	BB5_637;
	bra.uni 	BB5_694;

BB5_637:
	mov.u32 	%r16248, 0;
	// inline asm
	prmt.b32 %r16264, %r16248, %r71, %r278;
	// inline asm
	ld.local.v2.u32 	{%r6104, %r6105}, [%rd8+8];
	// inline asm
	prmt.b32 %r16265, %r6105, %r6104, %r278;
	// inline asm
	ld.local.u32 	%r5961, [%rd8+8];
	ld.local.u32 	%r5962, [%rd8+4];
	// inline asm
	prmt.b32 %r16258, %r5961, %r5962, %r278;
	// inline asm
	ld.local.v2.u32 	{%r6106, %r6107}, [%rd8];
	// inline asm
	prmt.b32 %r16259, %r6107, %r6106, %r278;
	// inline asm
	ld.local.u32 	%r5969, [%rd8];
	ld.local.u32 	%r5970, [%rd7+12];
	// inline asm
	prmt.b32 %r16260, %r5969, %r5970, %r278;
	// inline asm
	ld.local.v2.u32 	{%r6108, %r6109}, [%rd7+8];
	// inline asm
	prmt.b32 %r16261, %r6109, %r6108, %r278;
	// inline asm
	ld.local.u32 	%r5977, [%rd7+8];
	ld.local.u32 	%r5978, [%rd7+4];
	// inline asm
	prmt.b32 %r16254, %r5977, %r5978, %r278;
	// inline asm
	ld.local.v2.u32 	{%r6110, %r6111}, [%rd7];
	// inline asm
	prmt.b32 %r16255, %r6111, %r6110, %r278;
	// inline asm
	ld.local.u32 	%r5985, [%rd7];
	ld.local.u32 	%r5986, [%rd6+12];
	// inline asm
	prmt.b32 %r16256, %r5985, %r5986, %r278;
	// inline asm
	ld.local.v2.u32 	{%r6112, %r6113}, [%rd6+8];
	// inline asm
	prmt.b32 %r16257, %r6113, %r6112, %r278;
	// inline asm
	ld.local.u32 	%r5993, [%rd6+8];
	ld.local.u32 	%r5994, [%rd6+4];
	// inline asm
	prmt.b32 %r16250, %r5993, %r5994, %r278;
	// inline asm
	ld.local.v2.u32 	{%r6114, %r6115}, [%rd6];
	// inline asm
	prmt.b32 %r16251, %r6115, %r6114, %r278;
	// inline asm
	ld.local.u32 	%r6001, [%rd6];
	ld.local.u32 	%r6002, [%rd5+12];
	// inline asm
	prmt.b32 %r16252, %r6001, %r6002, %r278;
	// inline asm
	ld.local.v2.u32 	{%r6116, %r6117}, [%rd5+8];
	// inline asm
	prmt.b32 %r16253, %r6117, %r6116, %r278;
	// inline asm
	ld.local.u32 	%r6009, [%rd5+8];
	ld.local.u32 	%r6010, [%rd5+4];
	// inline asm
	prmt.b32 %r6008, %r6009, %r6010, %r278;
	// inline asm
	st.local.u32 	[%rd8+12], %r6008;
	ld.local.v2.u32 	{%r6118, %r6119}, [%rd5];
	// inline asm
	prmt.b32 %r6012, %r6119, %r6118, %r278;
	// inline asm
	st.local.u32 	[%rd8+8], %r6012;
	ld.local.u32 	%r6017, [%rd5];
	ld.local.u32 	%r6018, [%rd4+12];
	// inline asm
	prmt.b32 %r6016, %r6017, %r6018, %r278;
	// inline asm
	st.local.u32 	[%rd8+4], %r6016;
	ld.local.v2.u32 	{%r6120, %r6121}, [%rd4+8];
	// inline asm
	prmt.b32 %r6020, %r6121, %r6120, %r278;
	// inline asm
	st.local.u32 	[%rd8], %r6020;
	ld.local.u32 	%r6025, [%rd4+8];
	ld.local.u32 	%r6026, [%rd4+4];
	// inline asm
	prmt.b32 %r6024, %r6025, %r6026, %r278;
	// inline asm
	st.local.u32 	[%rd7+12], %r6024;
	ld.local.v2.u32 	{%r6122, %r6123}, [%rd4];
	// inline asm
	prmt.b32 %r6028, %r6123, %r6122, %r278;
	// inline asm
	st.local.u32 	[%rd7+8], %r6028;
	ld.local.u32 	%r6033, [%rd4];
	ld.local.u32 	%r6034, [%rd3+12];
	// inline asm
	prmt.b32 %r6032, %r6033, %r6034, %r278;
	// inline asm
	st.local.u32 	[%rd7+4], %r6032;
	ld.local.v2.u32 	{%r6124, %r6125}, [%rd3+8];
	// inline asm
	prmt.b32 %r6036, %r6125, %r6124, %r278;
	// inline asm
	st.local.u32 	[%rd7], %r6036;
	ld.local.u32 	%r6041, [%rd3+8];
	ld.local.u32 	%r6042, [%rd3+4];
	// inline asm
	prmt.b32 %r6040, %r6041, %r6042, %r278;
	// inline asm
	st.local.u32 	[%rd6+12], %r6040;
	ld.local.v2.u32 	{%r6126, %r6127}, [%rd3];
	// inline asm
	prmt.b32 %r6044, %r6127, %r6126, %r278;
	// inline asm
	st.local.u32 	[%rd6+8], %r6044;
	ld.local.u32 	%r6049, [%rd3];
	ld.local.u32 	%r6050, [%rd2+12];
	// inline asm
	prmt.b32 %r6048, %r6049, %r6050, %r278;
	// inline asm
	st.local.u32 	[%rd6+4], %r6048;
	ld.local.v2.u32 	{%r6128, %r6129}, [%rd2+8];
	// inline asm
	prmt.b32 %r6052, %r6129, %r6128, %r278;
	// inline asm
	st.local.u32 	[%rd6], %r6052;
	ld.local.u32 	%r6057, [%rd2+8];
	ld.local.u32 	%r6058, [%rd2+4];
	// inline asm
	prmt.b32 %r6056, %r6057, %r6058, %r278;
	// inline asm
	st.local.u32 	[%rd5+12], %r6056;
	ld.local.v2.u32 	{%r6130, %r6131}, [%rd2];
	// inline asm
	prmt.b32 %r6060, %r6131, %r6130, %r278;
	// inline asm
	st.local.u32 	[%rd5+8], %r6060;
	ld.local.u32 	%r6065, [%rd2];
	ld.local.u32 	%r6066, [%rd1+12];
	// inline asm
	prmt.b32 %r6064, %r6065, %r6066, %r278;
	// inline asm
	st.local.u32 	[%rd5+4], %r6064;
	ld.local.v2.u32 	{%r6132, %r6133}, [%rd1+8];
	// inline asm
	prmt.b32 %r6068, %r6133, %r6132, %r278;
	// inline asm
	st.local.u32 	[%rd5], %r6068;
	ld.local.u32 	%r6073, [%rd1+8];
	ld.local.u32 	%r6074, [%rd1+4];
	// inline asm
	prmt.b32 %r6072, %r6073, %r6074, %r278;
	// inline asm
	st.local.u32 	[%rd4+12], %r6072;
	ld.local.v2.u32 	{%r6134, %r6135}, [%rd1];
	// inline asm
	prmt.b32 %r6076, %r6135, %r6134, %r278;
	// inline asm
	st.local.u32 	[%rd4+8], %r6076;
	ld.local.u32 	%r6081, [%rd1];
	// inline asm
	prmt.b32 %r6080, %r6081, %r16248, %r278;
	// inline asm
	st.local.v2.u32 	[%rd4], {%r16248, %r6080};
	st.local.v4.u32 	[%rd3], {%r16248, %r16248, %r16248, %r16248};
	st.local.v4.u32 	[%rd2], {%r16248, %r16248, %r16248, %r16248};
	st.local.v2.u32 	[%rd1+8], {%r16248, %r16248};
	mov.u64 	%rd929, 0;
	st.local.u64 	[%rd1], %rd929;
	mov.u32 	%r16249, %r16248;
	mov.u32 	%r16262, %r16248;
	mov.u32 	%r16263, %r16248;
	bra.uni 	BB5_688;

BB5_667:
	setp.eq.s32	%p359, %r2804, 29;
	mov.u32 	%r16251, %r16250;
	mov.u32 	%r16252, %r16250;
	mov.u32 	%r16253, %r16250;
	mov.u32 	%r16254, %r16250;
	mov.u32 	%r16255, %r16250;
	mov.u32 	%r16256, %r16250;
	mov.u32 	%r16257, %r16250;
	mov.u32 	%r16258, %r16250;
	mov.u32 	%r16259, %r16250;
	mov.u32 	%r16260, %r16250;
	mov.u32 	%r16261, %r16250;
	mov.u32 	%r16262, %r16250;
	mov.u32 	%r16263, %r16250;
	mov.u32 	%r16264, %r16250;
	mov.u32 	%r16265, %r16250;
	mov.u32 	%r16266, %r16250;
	mov.u32 	%r16267, %r16250;
	mov.u32 	%r16268, %r16250;
	mov.u32 	%r16269, %r16250;
	mov.u32 	%r16270, %r16250;
	mov.u32 	%r16271, %r16250;
	mov.u32 	%r16272, %r16250;
	mov.u32 	%r16273, %r16250;
	mov.u32 	%r16274, %r16250;
	mov.u32 	%r16275, %r16250;
	mov.u32 	%r16276, %r16250;
	mov.u32 	%r16277, %r16250;
	mov.u32 	%r16278, %r16250;
	mov.u32 	%r16279, %r16250;
	mov.u32 	%r16280, %r16250;
	mov.u32 	%r16281, %r16250;
	@%p359 bra 	BB5_668;
	bra.uni 	BB5_694;

BB5_668:
	mov.u32 	%r16248, 0;
	// inline asm
	prmt.b32 %r16280, %r16248, %r71, %r278;
	// inline asm
	ld.local.v2.u32 	{%r3280, %r3281}, [%rd8+8];
	// inline asm
	prmt.b32 %r16281, %r3281, %r3280, %r278;
	// inline asm
	ld.local.u32 	%r3153, [%rd8+8];
	ld.local.u32 	%r3154, [%rd8+4];
	// inline asm
	prmt.b32 %r16274, %r3153, %r3154, %r278;
	// inline asm
	ld.local.v2.u32 	{%r3282, %r3283}, [%rd8];
	// inline asm
	prmt.b32 %r16275, %r3283, %r3282, %r278;
	// inline asm
	ld.local.u32 	%r3161, [%rd8];
	ld.local.u32 	%r3162, [%rd7+12];
	// inline asm
	prmt.b32 %r16276, %r3161, %r3162, %r278;
	// inline asm
	ld.local.v2.u32 	{%r3284, %r3285}, [%rd7+8];
	// inline asm
	prmt.b32 %r16277, %r3285, %r3284, %r278;
	// inline asm
	ld.local.u32 	%r3169, [%rd7+8];
	ld.local.u32 	%r3170, [%rd7+4];
	// inline asm
	prmt.b32 %r16270, %r3169, %r3170, %r278;
	// inline asm
	ld.local.v2.u32 	{%r3286, %r3287}, [%rd7];
	// inline asm
	prmt.b32 %r16271, %r3287, %r3286, %r278;
	// inline asm
	ld.local.u32 	%r3177, [%rd7];
	ld.local.u32 	%r3178, [%rd6+12];
	// inline asm
	prmt.b32 %r16272, %r3177, %r3178, %r278;
	// inline asm
	ld.local.v2.u32 	{%r3288, %r3289}, [%rd6+8];
	// inline asm
	prmt.b32 %r16273, %r3289, %r3288, %r278;
	// inline asm
	ld.local.u32 	%r3185, [%rd6+8];
	ld.local.u32 	%r3186, [%rd6+4];
	// inline asm
	prmt.b32 %r16266, %r3185, %r3186, %r278;
	// inline asm
	ld.local.v2.u32 	{%r3290, %r3291}, [%rd6];
	// inline asm
	prmt.b32 %r16267, %r3291, %r3290, %r278;
	// inline asm
	ld.local.u32 	%r3193, [%rd6];
	ld.local.u32 	%r3194, [%rd5+12];
	// inline asm
	prmt.b32 %r16268, %r3193, %r3194, %r278;
	// inline asm
	ld.local.v2.u32 	{%r3292, %r3293}, [%rd5+8];
	// inline asm
	prmt.b32 %r16269, %r3293, %r3292, %r278;
	// inline asm
	ld.local.u32 	%r3201, [%rd5+8];
	ld.local.u32 	%r3202, [%rd5+4];
	// inline asm
	prmt.b32 %r16262, %r3201, %r3202, %r278;
	// inline asm
	ld.local.v2.u32 	{%r3294, %r3295}, [%rd5];
	// inline asm
	prmt.b32 %r16263, %r3295, %r3294, %r278;
	// inline asm
	ld.local.u32 	%r3209, [%rd5];
	ld.local.u32 	%r3210, [%rd4+12];
	// inline asm
	prmt.b32 %r16264, %r3209, %r3210, %r278;
	// inline asm
	ld.local.v2.u32 	{%r3296, %r3297}, [%rd4+8];
	// inline asm
	prmt.b32 %r16265, %r3297, %r3296, %r278;
	// inline asm
	ld.local.u32 	%r3217, [%rd4+8];
	ld.local.u32 	%r3218, [%rd4+4];
	// inline asm
	prmt.b32 %r16258, %r3217, %r3218, %r278;
	// inline asm
	ld.local.v2.u32 	{%r3298, %r3299}, [%rd4];
	// inline asm
	prmt.b32 %r16259, %r3299, %r3298, %r278;
	// inline asm
	ld.local.u32 	%r3225, [%rd4];
	ld.local.u32 	%r3226, [%rd3+12];
	// inline asm
	prmt.b32 %r16260, %r3225, %r3226, %r278;
	// inline asm
	ld.local.v2.u32 	{%r3300, %r3301}, [%rd3+8];
	// inline asm
	prmt.b32 %r16261, %r3301, %r3300, %r278;
	// inline asm
	ld.local.u32 	%r3233, [%rd3+8];
	ld.local.u32 	%r3234, [%rd3+4];
	// inline asm
	prmt.b32 %r16254, %r3233, %r3234, %r278;
	// inline asm
	ld.local.v2.u32 	{%r3302, %r3303}, [%rd3];
	// inline asm
	prmt.b32 %r16255, %r3303, %r3302, %r278;
	// inline asm
	ld.local.u32 	%r3241, [%rd3];
	ld.local.u32 	%r3242, [%rd2+12];
	// inline asm
	prmt.b32 %r16256, %r3241, %r3242, %r278;
	// inline asm
	ld.local.v2.u32 	{%r3304, %r3305}, [%rd2+8];
	// inline asm
	prmt.b32 %r16257, %r3305, %r3304, %r278;
	// inline asm
	ld.local.u32 	%r3249, [%rd2+8];
	ld.local.u32 	%r3250, [%rd2+4];
	// inline asm
	prmt.b32 %r16250, %r3249, %r3250, %r278;
	// inline asm
	ld.local.v2.u32 	{%r3306, %r3307}, [%rd2];
	// inline asm
	prmt.b32 %r16251, %r3307, %r3306, %r278;
	// inline asm
	ld.local.u32 	%r3257, [%rd2];
	ld.local.u32 	%r3258, [%rd1+12];
	// inline asm
	prmt.b32 %r16252, %r3257, %r3258, %r278;
	// inline asm
	ld.local.v2.u32 	{%r3308, %r3309}, [%rd1+8];
	// inline asm
	prmt.b32 %r16253, %r3309, %r3308, %r278;
	// inline asm
	ld.local.u32 	%r3265, [%rd1+8];
	ld.local.u32 	%r3266, [%rd1+4];
	// inline asm
	prmt.b32 %r3264, %r3265, %r3266, %r278;
	// inline asm
	st.local.u32 	[%rd8+12], %r3264;
	ld.local.v2.u32 	{%r3310, %r3311}, [%rd1];
	// inline asm
	prmt.b32 %r3268, %r3311, %r3310, %r278;
	// inline asm
	st.local.u32 	[%rd8+8], %r3268;
	ld.local.u32 	%r3273, [%rd1];
	// inline asm
	prmt.b32 %r3272, %r3273, %r16248, %r278;
	// inline asm
	st.local.v2.u32 	[%rd8], {%r16248, %r3272};
	st.local.v4.u32 	[%rd7], {%r16248, %r16248, %r16248, %r16248};
	st.local.v4.u32 	[%rd6], {%r16248, %r16248, %r16248, %r16248};
	st.local.v4.u32 	[%rd5], {%r16248, %r16248, %r16248, %r16248};
	st.local.v4.u32 	[%rd4], {%r16248, %r16248, %r16248, %r16248};
	st.local.v4.u32 	[%rd3], {%r16248, %r16248, %r16248, %r16248};
	st.local.v4.u32 	[%rd2], {%r16248, %r16248, %r16248, %r16248};
	st.local.v2.u32 	[%rd1+8], {%r16248, %r16248};
	mov.u64 	%rd913, 0;
	st.local.u64 	[%rd1], %rd913;
	mov.u32 	%r16249, %r16248;
	mov.u32 	%r16278, %r16248;
	mov.u32 	%r16279, %r16248;
	bra.uni 	BB5_694;

BB5_616:
	setp.eq.s32	%p396, %r2804, 3;
	mov.u32 	%r16251, %r16250;
	mov.u32 	%r16252, %r16250;
	mov.u32 	%r16253, %r16250;
	mov.u32 	%r16254, %r16250;
	mov.u32 	%r16255, %r16250;
	mov.u32 	%r16256, %r16250;
	mov.u32 	%r16257, %r16250;
	mov.u32 	%r16258, %r16250;
	mov.u32 	%r16259, %r16250;
	mov.u32 	%r16260, %r16250;
	mov.u32 	%r16261, %r16250;
	mov.u32 	%r16262, %r16250;
	mov.u32 	%r16263, %r16250;
	mov.u32 	%r16264, %r16250;
	mov.u32 	%r16265, %r16250;
	mov.u32 	%r16266, %r16250;
	mov.u32 	%r16267, %r16250;
	mov.u32 	%r16268, %r16250;
	mov.u32 	%r16269, %r16250;
	mov.u32 	%r16270, %r16250;
	mov.u32 	%r16271, %r16250;
	mov.u32 	%r16272, %r16250;
	mov.u32 	%r16273, %r16250;
	mov.u32 	%r16274, %r16250;
	mov.u32 	%r16275, %r16250;
	mov.u32 	%r16276, %r16250;
	mov.u32 	%r16277, %r16250;
	mov.u32 	%r16278, %r16250;
	mov.u32 	%r16279, %r16250;
	mov.u32 	%r16280, %r16250;
	mov.u32 	%r16281, %r16250;
	@%p396 bra 	BB5_617;
	bra.uni 	BB5_694;

BB5_617:
	mov.u32 	%r16248, 0;
	// inline asm
	prmt.b32 %r16250, %r16248, %r71, %r278;
	// inline asm
	ld.local.v2.u32 	{%r7999, %r8000}, [%rd8+8];
	// inline asm
	prmt.b32 %r16251, %r8000, %r7999, %r278;
	// inline asm
	ld.local.u32 	%r7846, [%rd8+8];
	ld.local.u32 	%r7847, [%rd8+4];
	// inline asm
	prmt.b32 %r16252, %r7846, %r7847, %r278;
	// inline asm
	ld.local.v2.u32 	{%r8001, %r8002}, [%rd8];
	// inline asm
	prmt.b32 %r16253, %r8002, %r8001, %r278;
	// inline asm
	ld.local.u32 	%r7854, [%rd8];
	ld.local.u32 	%r7855, [%rd7+12];
	// inline asm
	prmt.b32 %r7853, %r7854, %r7855, %r278;
	// inline asm
	st.local.u32 	[%rd8+12], %r7853;
	ld.local.v2.u32 	{%r8003, %r8004}, [%rd7+8];
	// inline asm
	prmt.b32 %r7857, %r8004, %r8003, %r278;
	// inline asm
	st.local.u32 	[%rd8+8], %r7857;
	ld.local.u32 	%r7862, [%rd7+8];
	ld.local.u32 	%r7863, [%rd7+4];
	// inline asm
	prmt.b32 %r7861, %r7862, %r7863, %r278;
	// inline asm
	st.local.u32 	[%rd8+4], %r7861;
	ld.local.v2.u32 	{%r8005, %r8006}, [%rd7];
	// inline asm
	prmt.b32 %r7865, %r8006, %r8005, %r278;
	// inline asm
	st.local.u32 	[%rd8], %r7865;
	ld.local.u32 	%r7870, [%rd7];
	ld.local.u32 	%r7871, [%rd6+12];
	// inline asm
	prmt.b32 %r7869, %r7870, %r7871, %r278;
	// inline asm
	st.local.u32 	[%rd7+12], %r7869;
	ld.local.v2.u32 	{%r8007, %r8008}, [%rd6+8];
	// inline asm
	prmt.b32 %r7873, %r8008, %r8007, %r278;
	// inline asm
	st.local.u32 	[%rd7+8], %r7873;
	ld.local.u32 	%r7878, [%rd6+8];
	ld.local.u32 	%r7879, [%rd6+4];
	// inline asm
	prmt.b32 %r7877, %r7878, %r7879, %r278;
	// inline asm
	st.local.u32 	[%rd7+4], %r7877;
	ld.local.v2.u32 	{%r8009, %r8010}, [%rd6];
	// inline asm
	prmt.b32 %r7881, %r8010, %r8009, %r278;
	// inline asm
	st.local.u32 	[%rd7], %r7881;
	ld.local.u32 	%r7886, [%rd6];
	ld.local.u32 	%r7887, [%rd5+12];
	// inline asm
	prmt.b32 %r7885, %r7886, %r7887, %r278;
	// inline asm
	st.local.u32 	[%rd6+12], %r7885;
	ld.local.v2.u32 	{%r8011, %r8012}, [%rd5+8];
	// inline asm
	prmt.b32 %r7889, %r8012, %r8011, %r278;
	// inline asm
	st.local.u32 	[%rd6+8], %r7889;
	ld.local.u32 	%r7894, [%rd5+8];
	ld.local.u32 	%r7895, [%rd5+4];
	// inline asm
	prmt.b32 %r7893, %r7894, %r7895, %r278;
	// inline asm
	st.local.u32 	[%rd6+4], %r7893;
	ld.local.v2.u32 	{%r8013, %r8014}, [%rd5];
	// inline asm
	prmt.b32 %r7897, %r8014, %r8013, %r278;
	// inline asm
	st.local.u32 	[%rd6], %r7897;
	ld.local.u32 	%r7902, [%rd5];
	ld.local.u32 	%r7903, [%rd4+12];
	// inline asm
	prmt.b32 %r7901, %r7902, %r7903, %r278;
	// inline asm
	st.local.u32 	[%rd5+12], %r7901;
	ld.local.v2.u32 	{%r8015, %r8016}, [%rd4+8];
	// inline asm
	prmt.b32 %r7905, %r8016, %r8015, %r278;
	// inline asm
	st.local.u32 	[%rd5+8], %r7905;
	ld.local.u32 	%r7910, [%rd4+8];
	ld.local.u32 	%r7911, [%rd4+4];
	// inline asm
	prmt.b32 %r7909, %r7910, %r7911, %r278;
	// inline asm
	st.local.u32 	[%rd5+4], %r7909;
	ld.local.v2.u32 	{%r8017, %r8018}, [%rd4];
	// inline asm
	prmt.b32 %r7913, %r8018, %r8017, %r278;
	// inline asm
	st.local.u32 	[%rd5], %r7913;
	ld.local.u32 	%r7918, [%rd4];
	ld.local.u32 	%r7919, [%rd3+12];
	// inline asm
	prmt.b32 %r7917, %r7918, %r7919, %r278;
	// inline asm
	st.local.u32 	[%rd4+12], %r7917;
	ld.local.v2.u32 	{%r8019, %r8020}, [%rd3+8];
	// inline asm
	prmt.b32 %r7921, %r8020, %r8019, %r278;
	// inline asm
	st.local.u32 	[%rd4+8], %r7921;
	ld.local.u32 	%r7926, [%rd3+8];
	ld.local.u32 	%r7927, [%rd3+4];
	// inline asm
	prmt.b32 %r7925, %r7926, %r7927, %r278;
	// inline asm
	st.local.u32 	[%rd4+4], %r7925;
	ld.local.v2.u32 	{%r8021, %r8022}, [%rd3];
	// inline asm
	prmt.b32 %r7929, %r8022, %r8021, %r278;
	// inline asm
	st.local.u32 	[%rd4], %r7929;
	ld.local.u32 	%r7934, [%rd3];
	ld.local.u32 	%r7935, [%rd2+12];
	// inline asm
	prmt.b32 %r7933, %r7934, %r7935, %r278;
	// inline asm
	st.local.u32 	[%rd3+12], %r7933;
	ld.local.v2.u32 	{%r8023, %r8024}, [%rd2+8];
	// inline asm
	prmt.b32 %r7937, %r8024, %r8023, %r278;
	// inline asm
	st.local.u32 	[%rd3+8], %r7937;
	ld.local.u32 	%r7942, [%rd2+8];
	ld.local.u32 	%r7943, [%rd2+4];
	// inline asm
	prmt.b32 %r7941, %r7942, %r7943, %r278;
	// inline asm
	st.local.u32 	[%rd3+4], %r7941;
	ld.local.v2.u32 	{%r8025, %r8026}, [%rd2];
	// inline asm
	prmt.b32 %r7945, %r8026, %r8025, %r278;
	// inline asm
	st.local.u32 	[%rd3], %r7945;
	ld.local.u32 	%r7950, [%rd2];
	ld.local.u32 	%r7951, [%rd1+12];
	// inline asm
	prmt.b32 %r7949, %r7950, %r7951, %r278;
	// inline asm
	st.local.u32 	[%rd2+12], %r7949;
	ld.local.v2.u32 	{%r8027, %r8028}, [%rd1+8];
	// inline asm
	prmt.b32 %r7953, %r8028, %r8027, %r278;
	// inline asm
	st.local.u32 	[%rd2+8], %r7953;
	ld.local.u32 	%r7958, [%rd1+8];
	ld.local.u32 	%r7959, [%rd1+4];
	// inline asm
	prmt.b32 %r7957, %r7958, %r7959, %r278;
	// inline asm
	st.local.u32 	[%rd2+4], %r7957;
	ld.local.v2.u32 	{%r8029, %r8030}, [%rd1];
	// inline asm
	prmt.b32 %r7961, %r8030, %r8029, %r278;
	// inline asm
	st.local.u32 	[%rd2], %r7961;
	ld.local.u32 	%r7966, [%rd1];
	// inline asm
	prmt.b32 %r7965, %r7966, %r16248, %r278;
	// inline asm
	st.local.v2.u32 	[%rd1+8], {%r16248, %r7965};
	mov.u64 	%rd939, 0;
	st.local.u64 	[%rd1], %rd939;
	mov.u32 	%r16249, %r16248;

BB5_618:
	mov.u32 	%r16254, %r16248;
	mov.u32 	%r16255, %r16248;
	mov.u32 	%r16256, %r16248;
	mov.u32 	%r16257, %r16248;
	bra.uni 	BB5_686;

BB5_648:
	setp.eq.s32	%p373, %r2804, 19;
	mov.u32 	%r16251, %r16250;
	mov.u32 	%r16252, %r16250;
	mov.u32 	%r16253, %r16250;
	mov.u32 	%r16254, %r16250;
	mov.u32 	%r16255, %r16250;
	mov.u32 	%r16256, %r16250;
	mov.u32 	%r16257, %r16250;
	mov.u32 	%r16258, %r16250;
	mov.u32 	%r16259, %r16250;
	mov.u32 	%r16260, %r16250;
	mov.u32 	%r16261, %r16250;
	mov.u32 	%r16262, %r16250;
	mov.u32 	%r16263, %r16250;
	mov.u32 	%r16264, %r16250;
	mov.u32 	%r16265, %r16250;
	mov.u32 	%r16266, %r16250;
	mov.u32 	%r16267, %r16250;
	mov.u32 	%r16268, %r16250;
	mov.u32 	%r16269, %r16250;
	mov.u32 	%r16270, %r16250;
	mov.u32 	%r16271, %r16250;
	mov.u32 	%r16272, %r16250;
	mov.u32 	%r16273, %r16250;
	mov.u32 	%r16274, %r16250;
	mov.u32 	%r16275, %r16250;
	mov.u32 	%r16276, %r16250;
	mov.u32 	%r16277, %r16250;
	mov.u32 	%r16278, %r16250;
	mov.u32 	%r16279, %r16250;
	mov.u32 	%r16280, %r16250;
	mov.u32 	%r16281, %r16250;
	@%p373 bra 	BB5_649;
	bra.uni 	BB5_694;

BB5_649:
	mov.u32 	%r16248, 0;
	// inline asm
	prmt.b32 %r16266, %r16248, %r71, %r278;
	// inline asm
	ld.local.v2.u32 	{%r5015, %r5016}, [%rd8+8];
	// inline asm
	prmt.b32 %r16267, %r5016, %r5015, %r278;
	// inline asm
	ld.local.u32 	%r4878, [%rd8+8];
	ld.local.u32 	%r4879, [%rd8+4];
	// inline asm
	prmt.b32 %r16268, %r4878, %r4879, %r278;
	// inline asm
	ld.local.v2.u32 	{%r5017, %r5018}, [%rd8];
	// inline asm
	prmt.b32 %r16269, %r5018, %r5017, %r278;
	// inline asm
	ld.local.u32 	%r4886, [%rd8];
	ld.local.u32 	%r4887, [%rd7+12];
	// inline asm
	prmt.b32 %r16262, %r4886, %r4887, %r278;
	// inline asm
	ld.local.v2.u32 	{%r5019, %r5020}, [%rd7+8];
	// inline asm
	prmt.b32 %r16263, %r5020, %r5019, %r278;
	// inline asm
	ld.local.u32 	%r4894, [%rd7+8];
	ld.local.u32 	%r4895, [%rd7+4];
	// inline asm
	prmt.b32 %r16264, %r4894, %r4895, %r278;
	// inline asm
	ld.local.v2.u32 	{%r5021, %r5022}, [%rd7];
	// inline asm
	prmt.b32 %r16265, %r5022, %r5021, %r278;
	// inline asm
	ld.local.u32 	%r4902, [%rd7];
	ld.local.u32 	%r4903, [%rd6+12];
	// inline asm
	prmt.b32 %r16258, %r4902, %r4903, %r278;
	// inline asm
	ld.local.v2.u32 	{%r5023, %r5024}, [%rd6+8];
	// inline asm
	prmt.b32 %r16259, %r5024, %r5023, %r278;
	// inline asm
	ld.local.u32 	%r4910, [%rd6+8];
	ld.local.u32 	%r4911, [%rd6+4];
	// inline asm
	prmt.b32 %r16260, %r4910, %r4911, %r278;
	// inline asm
	ld.local.v2.u32 	{%r5025, %r5026}, [%rd6];
	// inline asm
	prmt.b32 %r16261, %r5026, %r5025, %r278;
	// inline asm
	ld.local.u32 	%r4918, [%rd6];
	ld.local.u32 	%r4919, [%rd5+12];
	// inline asm
	prmt.b32 %r16254, %r4918, %r4919, %r278;
	// inline asm
	ld.local.v2.u32 	{%r5027, %r5028}, [%rd5+8];
	// inline asm
	prmt.b32 %r16255, %r5028, %r5027, %r278;
	// inline asm
	ld.local.u32 	%r4926, [%rd5+8];
	ld.local.u32 	%r4927, [%rd5+4];
	// inline asm
	prmt.b32 %r16256, %r4926, %r4927, %r278;
	// inline asm
	ld.local.v2.u32 	{%r5029, %r5030}, [%rd5];
	// inline asm
	prmt.b32 %r16257, %r5030, %r5029, %r278;
	// inline asm
	ld.local.u32 	%r4934, [%rd5];
	ld.local.u32 	%r4935, [%rd4+12];
	// inline asm
	prmt.b32 %r16250, %r4934, %r4935, %r278;
	// inline asm
	ld.local.v2.u32 	{%r5031, %r5032}, [%rd4+8];
	// inline asm
	prmt.b32 %r16251, %r5032, %r5031, %r278;
	// inline asm
	ld.local.u32 	%r4942, [%rd4+8];
	ld.local.u32 	%r4943, [%rd4+4];
	// inline asm
	prmt.b32 %r16252, %r4942, %r4943, %r278;
	// inline asm
	ld.local.v2.u32 	{%r5033, %r5034}, [%rd4];
	// inline asm
	prmt.b32 %r16253, %r5034, %r5033, %r278;
	// inline asm
	ld.local.u32 	%r4950, [%rd4];
	ld.local.u32 	%r4951, [%rd3+12];
	// inline asm
	prmt.b32 %r4949, %r4950, %r4951, %r278;
	// inline asm
	st.local.u32 	[%rd8+12], %r4949;
	ld.local.v2.u32 	{%r5035, %r5036}, [%rd3+8];
	// inline asm
	prmt.b32 %r4953, %r5036, %r5035, %r278;
	// inline asm
	st.local.u32 	[%rd8+8], %r4953;
	ld.local.u32 	%r4958, [%rd3+8];
	ld.local.u32 	%r4959, [%rd3+4];
	// inline asm
	prmt.b32 %r4957, %r4958, %r4959, %r278;
	// inline asm
	st.local.u32 	[%rd8+4], %r4957;
	ld.local.v2.u32 	{%r5037, %r5038}, [%rd3];
	// inline asm
	prmt.b32 %r4961, %r5038, %r5037, %r278;
	// inline asm
	st.local.u32 	[%rd8], %r4961;
	ld.local.u32 	%r4966, [%rd3];
	ld.local.u32 	%r4967, [%rd2+12];
	// inline asm
	prmt.b32 %r4965, %r4966, %r4967, %r278;
	// inline asm
	st.local.u32 	[%rd7+12], %r4965;
	ld.local.v2.u32 	{%r5039, %r5040}, [%rd2+8];
	// inline asm
	prmt.b32 %r4969, %r5040, %r5039, %r278;
	// inline asm
	st.local.u32 	[%rd7+8], %r4969;
	ld.local.u32 	%r4974, [%rd2+8];
	ld.local.u32 	%r4975, [%rd2+4];
	// inline asm
	prmt.b32 %r4973, %r4974, %r4975, %r278;
	// inline asm
	st.local.u32 	[%rd7+4], %r4973;
	ld.local.v2.u32 	{%r5041, %r5042}, [%rd2];
	// inline asm
	prmt.b32 %r4977, %r5042, %r5041, %r278;
	// inline asm
	st.local.u32 	[%rd7], %r4977;
	ld.local.u32 	%r4982, [%rd2];
	ld.local.u32 	%r4983, [%rd1+12];
	// inline asm
	prmt.b32 %r4981, %r4982, %r4983, %r278;
	// inline asm
	st.local.u32 	[%rd6+12], %r4981;
	ld.local.v2.u32 	{%r5043, %r5044}, [%rd1+8];
	// inline asm
	prmt.b32 %r4985, %r5044, %r5043, %r278;
	// inline asm
	st.local.u32 	[%rd6+8], %r4985;
	ld.local.u32 	%r4990, [%rd1+8];
	ld.local.u32 	%r4991, [%rd1+4];
	// inline asm
	prmt.b32 %r4989, %r4990, %r4991, %r278;
	// inline asm
	st.local.u32 	[%rd6+4], %r4989;
	ld.local.v2.u32 	{%r5045, %r5046}, [%rd1];
	// inline asm
	prmt.b32 %r4993, %r5046, %r5045, %r278;
	// inline asm
	st.local.u32 	[%rd6], %r4993;
	ld.local.u32 	%r4998, [%rd1];
	// inline asm
	prmt.b32 %r4997, %r4998, %r16248, %r278;
	// inline asm
	st.local.v4.u32 	[%rd5], {%r16248, %r16248, %r16248, %r4997};
	st.local.v4.u32 	[%rd4], {%r16248, %r16248, %r16248, %r16248};
	st.local.v4.u32 	[%rd3], {%r16248, %r16248, %r16248, %r16248};
	st.local.v4.u32 	[%rd2], {%r16248, %r16248, %r16248, %r16248};
	st.local.v2.u32 	[%rd1+8], {%r16248, %r16248};
	mov.u64 	%rd923, 0;
	st.local.u64 	[%rd1], %rd923;
	mov.u32 	%r16249, %r16248;
	bra.uni 	BB5_689;

BB5_632:
	setp.eq.s32	%p385, %r2804, 11;
	mov.u32 	%r16251, %r16250;
	mov.u32 	%r16252, %r16250;
	mov.u32 	%r16253, %r16250;
	mov.u32 	%r16254, %r16250;
	mov.u32 	%r16255, %r16250;
	mov.u32 	%r16256, %r16250;
	mov.u32 	%r16257, %r16250;
	mov.u32 	%r16258, %r16250;
	mov.u32 	%r16259, %r16250;
	mov.u32 	%r16260, %r16250;
	mov.u32 	%r16261, %r16250;
	mov.u32 	%r16262, %r16250;
	mov.u32 	%r16263, %r16250;
	mov.u32 	%r16264, %r16250;
	mov.u32 	%r16265, %r16250;
	mov.u32 	%r16266, %r16250;
	mov.u32 	%r16267, %r16250;
	mov.u32 	%r16268, %r16250;
	mov.u32 	%r16269, %r16250;
	mov.u32 	%r16270, %r16250;
	mov.u32 	%r16271, %r16250;
	mov.u32 	%r16272, %r16250;
	mov.u32 	%r16273, %r16250;
	mov.u32 	%r16274, %r16250;
	mov.u32 	%r16275, %r16250;
	mov.u32 	%r16276, %r16250;
	mov.u32 	%r16277, %r16250;
	mov.u32 	%r16278, %r16250;
	mov.u32 	%r16279, %r16250;
	mov.u32 	%r16280, %r16250;
	mov.u32 	%r16281, %r16250;
	@%p385 bra 	BB5_633;
	bra.uni 	BB5_694;

BB5_633:
	mov.u32 	%r16248, 0;
	// inline asm
	prmt.b32 %r16258, %r16248, %r71, %r278;
	// inline asm
	ld.local.v2.u32 	{%r6475, %r6476}, [%rd8+8];
	// inline asm
	prmt.b32 %r16259, %r6476, %r6475, %r278;
	// inline asm
	ld.local.u32 	%r6330, [%rd8+8];
	ld.local.u32 	%r6331, [%rd8+4];
	// inline asm
	prmt.b32 %r16260, %r6330, %r6331, %r278;
	// inline asm
	ld.local.v2.u32 	{%r6477, %r6478}, [%rd8];
	// inline asm
	prmt.b32 %r16261, %r6478, %r6477, %r278;
	// inline asm
	ld.local.u32 	%r6338, [%rd8];
	ld.local.u32 	%r6339, [%rd7+12];
	// inline asm
	prmt.b32 %r16254, %r6338, %r6339, %r278;
	// inline asm
	ld.local.v2.u32 	{%r6479, %r6480}, [%rd7+8];
	// inline asm
	prmt.b32 %r16255, %r6480, %r6479, %r278;
	// inline asm
	ld.local.u32 	%r6346, [%rd7+8];
	ld.local.u32 	%r6347, [%rd7+4];
	// inline asm
	prmt.b32 %r16256, %r6346, %r6347, %r278;
	// inline asm
	ld.local.v2.u32 	{%r6481, %r6482}, [%rd7];
	// inline asm
	prmt.b32 %r16257, %r6482, %r6481, %r278;
	// inline asm
	ld.local.u32 	%r6354, [%rd7];
	ld.local.u32 	%r6355, [%rd6+12];
	// inline asm
	prmt.b32 %r16250, %r6354, %r6355, %r278;
	// inline asm
	ld.local.v2.u32 	{%r6483, %r6484}, [%rd6+8];
	// inline asm
	prmt.b32 %r16251, %r6484, %r6483, %r278;
	// inline asm
	ld.local.u32 	%r6362, [%rd6+8];
	ld.local.u32 	%r6363, [%rd6+4];
	// inline asm
	prmt.b32 %r16252, %r6362, %r6363, %r278;
	// inline asm
	ld.local.v2.u32 	{%r6485, %r6486}, [%rd6];
	// inline asm
	prmt.b32 %r16253, %r6486, %r6485, %r278;
	// inline asm
	ld.local.u32 	%r6370, [%rd6];
	ld.local.u32 	%r6371, [%rd5+12];
	// inline asm
	prmt.b32 %r6369, %r6370, %r6371, %r278;
	// inline asm
	st.local.u32 	[%rd8+12], %r6369;
	ld.local.v2.u32 	{%r6487, %r6488}, [%rd5+8];
	// inline asm
	prmt.b32 %r6373, %r6488, %r6487, %r278;
	// inline asm
	st.local.u32 	[%rd8+8], %r6373;
	ld.local.u32 	%r6378, [%rd5+8];
	ld.local.u32 	%r6379, [%rd5+4];
	// inline asm
	prmt.b32 %r6377, %r6378, %r6379, %r278;
	// inline asm
	st.local.u32 	[%rd8+4], %r6377;
	ld.local.v2.u32 	{%r6489, %r6490}, [%rd5];
	// inline asm
	prmt.b32 %r6381, %r6490, %r6489, %r278;
	// inline asm
	st.local.u32 	[%rd8], %r6381;
	ld.local.u32 	%r6386, [%rd5];
	ld.local.u32 	%r6387, [%rd4+12];
	// inline asm
	prmt.b32 %r6385, %r6386, %r6387, %r278;
	// inline asm
	st.local.u32 	[%rd7+12], %r6385;
	ld.local.v2.u32 	{%r6491, %r6492}, [%rd4+8];
	// inline asm
	prmt.b32 %r6389, %r6492, %r6491, %r278;
	// inline asm
	st.local.u32 	[%rd7+8], %r6389;
	ld.local.u32 	%r6394, [%rd4+8];
	ld.local.u32 	%r6395, [%rd4+4];
	// inline asm
	prmt.b32 %r6393, %r6394, %r6395, %r278;
	// inline asm
	st.local.u32 	[%rd7+4], %r6393;
	ld.local.v2.u32 	{%r6493, %r6494}, [%rd4];
	// inline asm
	prmt.b32 %r6397, %r6494, %r6493, %r278;
	// inline asm
	st.local.u32 	[%rd7], %r6397;
	ld.local.u32 	%r6402, [%rd4];
	ld.local.u32 	%r6403, [%rd3+12];
	// inline asm
	prmt.b32 %r6401, %r6402, %r6403, %r278;
	// inline asm
	st.local.u32 	[%rd6+12], %r6401;
	ld.local.v2.u32 	{%r6495, %r6496}, [%rd3+8];
	// inline asm
	prmt.b32 %r6405, %r6496, %r6495, %r278;
	// inline asm
	st.local.u32 	[%rd6+8], %r6405;
	ld.local.u32 	%r6410, [%rd3+8];
	ld.local.u32 	%r6411, [%rd3+4];
	// inline asm
	prmt.b32 %r6409, %r6410, %r6411, %r278;
	// inline asm
	st.local.u32 	[%rd6+4], %r6409;
	ld.local.v2.u32 	{%r6497, %r6498}, [%rd3];
	// inline asm
	prmt.b32 %r6413, %r6498, %r6497, %r278;
	// inline asm
	st.local.u32 	[%rd6], %r6413;
	ld.local.u32 	%r6418, [%rd3];
	ld.local.u32 	%r6419, [%rd2+12];
	// inline asm
	prmt.b32 %r6417, %r6418, %r6419, %r278;
	// inline asm
	st.local.u32 	[%rd5+12], %r6417;
	ld.local.v2.u32 	{%r6499, %r6500}, [%rd2+8];
	// inline asm
	prmt.b32 %r6421, %r6500, %r6499, %r278;
	// inline asm
	st.local.u32 	[%rd5+8], %r6421;
	ld.local.u32 	%r6426, [%rd2+8];
	ld.local.u32 	%r6427, [%rd2+4];
	// inline asm
	prmt.b32 %r6425, %r6426, %r6427, %r278;
	// inline asm
	st.local.u32 	[%rd5+4], %r6425;
	ld.local.v2.u32 	{%r6501, %r6502}, [%rd2];
	// inline asm
	prmt.b32 %r6429, %r6502, %r6501, %r278;
	// inline asm
	st.local.u32 	[%rd5], %r6429;
	ld.local.u32 	%r6434, [%rd2];
	ld.local.u32 	%r6435, [%rd1+12];
	// inline asm
	prmt.b32 %r6433, %r6434, %r6435, %r278;
	// inline asm
	st.local.u32 	[%rd4+12], %r6433;
	ld.local.v2.u32 	{%r6503, %r6504}, [%rd1+8];
	// inline asm
	prmt.b32 %r6437, %r6504, %r6503, %r278;
	// inline asm
	st.local.u32 	[%rd4+8], %r6437;
	ld.local.u32 	%r6442, [%rd1+8];
	ld.local.u32 	%r6443, [%rd1+4];
	// inline asm
	prmt.b32 %r6441, %r6442, %r6443, %r278;
	// inline asm
	st.local.u32 	[%rd4+4], %r6441;
	ld.local.v2.u32 	{%r6505, %r6506}, [%rd1];
	// inline asm
	prmt.b32 %r6445, %r6506, %r6505, %r278;
	// inline asm
	st.local.u32 	[%rd4], %r6445;
	ld.local.u32 	%r6450, [%rd1];
	// inline asm
	prmt.b32 %r6449, %r6450, %r16248, %r278;
	// inline asm
	st.local.v4.u32 	[%rd3], {%r16248, %r16248, %r16248, %r6449};
	st.local.v4.u32 	[%rd2], {%r16248, %r16248, %r16248, %r16248};
	st.local.v2.u32 	[%rd1+8], {%r16248, %r16248};
	mov.u64 	%rd931, 0;
	st.local.u64 	[%rd1], %rd931;
	mov.u32 	%r16249, %r16248;
	bra.uni 	BB5_687;

BB5_663:
	setp.eq.s32	%p362, %r2804, 27;
	mov.u32 	%r16251, %r16250;
	mov.u32 	%r16252, %r16250;
	mov.u32 	%r16253, %r16250;
	mov.u32 	%r16254, %r16250;
	mov.u32 	%r16255, %r16250;
	mov.u32 	%r16256, %r16250;
	mov.u32 	%r16257, %r16250;
	mov.u32 	%r16258, %r16250;
	mov.u32 	%r16259, %r16250;
	mov.u32 	%r16260, %r16250;
	mov.u32 	%r16261, %r16250;
	mov.u32 	%r16262, %r16250;
	mov.u32 	%r16263, %r16250;
	mov.u32 	%r16264, %r16250;
	mov.u32 	%r16265, %r16250;
	mov.u32 	%r16266, %r16250;
	mov.u32 	%r16267, %r16250;
	mov.u32 	%r16268, %r16250;
	mov.u32 	%r16269, %r16250;
	mov.u32 	%r16270, %r16250;
	mov.u32 	%r16271, %r16250;
	mov.u32 	%r16272, %r16250;
	mov.u32 	%r16273, %r16250;
	mov.u32 	%r16274, %r16250;
	mov.u32 	%r16275, %r16250;
	mov.u32 	%r16276, %r16250;
	mov.u32 	%r16277, %r16250;
	mov.u32 	%r16278, %r16250;
	mov.u32 	%r16279, %r16250;
	mov.u32 	%r16280, %r16250;
	mov.u32 	%r16281, %r16250;
	@%p362 bra 	BB5_664;
	bra.uni 	BB5_694;

BB5_664:
	mov.u32 	%r16248, 0;
	// inline asm
	prmt.b32 %r16274, %r16248, %r71, %r278;
	// inline asm
	ld.local.v2.u32 	{%r3619, %r3620}, [%rd8+8];
	// inline asm
	prmt.b32 %r16275, %r3620, %r3619, %r278;
	// inline asm
	ld.local.u32 	%r3490, [%rd8+8];
	ld.local.u32 	%r3491, [%rd8+4];
	// inline asm
	prmt.b32 %r16276, %r3490, %r3491, %r278;
	// inline asm
	ld.local.v2.u32 	{%r3621, %r3622}, [%rd8];
	// inline asm
	prmt.b32 %r16277, %r3622, %r3621, %r278;
	// inline asm
	ld.local.u32 	%r3498, [%rd8];
	ld.local.u32 	%r3499, [%rd7+12];
	// inline asm
	prmt.b32 %r16270, %r3498, %r3499, %r278;
	// inline asm
	ld.local.v2.u32 	{%r3623, %r3624}, [%rd7+8];
	// inline asm
	prmt.b32 %r16271, %r3624, %r3623, %r278;
	// inline asm
	ld.local.u32 	%r3506, [%rd7+8];
	ld.local.u32 	%r3507, [%rd7+4];
	// inline asm
	prmt.b32 %r16272, %r3506, %r3507, %r278;
	// inline asm
	ld.local.v2.u32 	{%r3625, %r3626}, [%rd7];
	// inline asm
	prmt.b32 %r16273, %r3626, %r3625, %r278;
	// inline asm
	ld.local.u32 	%r3514, [%rd7];
	ld.local.u32 	%r3515, [%rd6+12];
	// inline asm
	prmt.b32 %r16266, %r3514, %r3515, %r278;
	// inline asm
	ld.local.v2.u32 	{%r3627, %r3628}, [%rd6+8];
	// inline asm
	prmt.b32 %r16267, %r3628, %r3627, %r278;
	// inline asm
	ld.local.u32 	%r3522, [%rd6+8];
	ld.local.u32 	%r3523, [%rd6+4];
	// inline asm
	prmt.b32 %r16268, %r3522, %r3523, %r278;
	// inline asm
	ld.local.v2.u32 	{%r3629, %r3630}, [%rd6];
	// inline asm
	prmt.b32 %r16269, %r3630, %r3629, %r278;
	// inline asm
	ld.local.u32 	%r3530, [%rd6];
	ld.local.u32 	%r3531, [%rd5+12];
	// inline asm
	prmt.b32 %r16262, %r3530, %r3531, %r278;
	// inline asm
	ld.local.v2.u32 	{%r3631, %r3632}, [%rd5+8];
	// inline asm
	prmt.b32 %r16263, %r3632, %r3631, %r278;
	// inline asm
	ld.local.u32 	%r3538, [%rd5+8];
	ld.local.u32 	%r3539, [%rd5+4];
	// inline asm
	prmt.b32 %r16264, %r3538, %r3539, %r278;
	// inline asm
	ld.local.v2.u32 	{%r3633, %r3634}, [%rd5];
	// inline asm
	prmt.b32 %r16265, %r3634, %r3633, %r278;
	// inline asm
	ld.local.u32 	%r3546, [%rd5];
	ld.local.u32 	%r3547, [%rd4+12];
	// inline asm
	prmt.b32 %r16258, %r3546, %r3547, %r278;
	// inline asm
	ld.local.v2.u32 	{%r3635, %r3636}, [%rd4+8];
	// inline asm
	prmt.b32 %r16259, %r3636, %r3635, %r278;
	// inline asm
	ld.local.u32 	%r3554, [%rd4+8];
	ld.local.u32 	%r3555, [%rd4+4];
	// inline asm
	prmt.b32 %r16260, %r3554, %r3555, %r278;
	// inline asm
	ld.local.v2.u32 	{%r3637, %r3638}, [%rd4];
	// inline asm
	prmt.b32 %r16261, %r3638, %r3637, %r278;
	// inline asm
	ld.local.u32 	%r3562, [%rd4];
	ld.local.u32 	%r3563, [%rd3+12];
	// inline asm
	prmt.b32 %r16254, %r3562, %r3563, %r278;
	// inline asm
	ld.local.v2.u32 	{%r3639, %r3640}, [%rd3+8];
	// inline asm
	prmt.b32 %r16255, %r3640, %r3639, %r278;
	// inline asm
	ld.local.u32 	%r3570, [%rd3+8];
	ld.local.u32 	%r3571, [%rd3+4];
	// inline asm
	prmt.b32 %r16256, %r3570, %r3571, %r278;
	// inline asm
	ld.local.v2.u32 	{%r3641, %r3642}, [%rd3];
	// inline asm
	prmt.b32 %r16257, %r3642, %r3641, %r278;
	// inline asm
	ld.local.u32 	%r3578, [%rd3];
	ld.local.u32 	%r3579, [%rd2+12];
	// inline asm
	prmt.b32 %r16250, %r3578, %r3579, %r278;
	// inline asm
	ld.local.v2.u32 	{%r3643, %r3644}, [%rd2+8];
	// inline asm
	prmt.b32 %r16251, %r3644, %r3643, %r278;
	// inline asm
	ld.local.u32 	%r3586, [%rd2+8];
	ld.local.u32 	%r3587, [%rd2+4];
	// inline asm
	prmt.b32 %r16252, %r3586, %r3587, %r278;
	// inline asm
	ld.local.v2.u32 	{%r3645, %r3646}, [%rd2];
	// inline asm
	prmt.b32 %r16253, %r3646, %r3645, %r278;
	// inline asm
	ld.local.u32 	%r3594, [%rd2];
	ld.local.u32 	%r3595, [%rd1+12];
	// inline asm
	prmt.b32 %r3593, %r3594, %r3595, %r278;
	// inline asm
	st.local.u32 	[%rd8+12], %r3593;
	ld.local.v2.u32 	{%r3647, %r3648}, [%rd1+8];
	// inline asm
	prmt.b32 %r3597, %r3648, %r3647, %r278;
	// inline asm
	st.local.u32 	[%rd8+8], %r3597;
	ld.local.u32 	%r3602, [%rd1+8];
	ld.local.u32 	%r3603, [%rd1+4];
	// inline asm
	prmt.b32 %r3601, %r3602, %r3603, %r278;
	// inline asm
	st.local.u32 	[%rd8+4], %r3601;
	ld.local.v2.u32 	{%r3649, %r3650}, [%rd1];
	// inline asm
	prmt.b32 %r3605, %r3650, %r3649, %r278;
	// inline asm
	st.local.u32 	[%rd8], %r3605;
	ld.local.u32 	%r3610, [%rd1];
	// inline asm
	prmt.b32 %r3609, %r3610, %r16248, %r278;
	// inline asm
	st.local.v4.u32 	[%rd7], {%r16248, %r16248, %r16248, %r3609};
	st.local.v4.u32 	[%rd6], {%r16248, %r16248, %r16248, %r16248};
	st.local.v4.u32 	[%rd5], {%r16248, %r16248, %r16248, %r16248};
	st.local.v4.u32 	[%rd4], {%r16248, %r16248, %r16248, %r16248};
	st.local.v4.u32 	[%rd3], {%r16248, %r16248, %r16248, %r16248};
	st.local.v4.u32 	[%rd2], {%r16248, %r16248, %r16248, %r16248};
	st.local.v2.u32 	[%rd1+8], {%r16248, %r16248};
	mov.u64 	%rd915, 0;
	st.local.u64 	[%rd1], %rd915;
	mov.u32 	%r16249, %r16248;
	bra.uni 	BB5_691;

BB5_624:
	setp.eq.s32	%p391, %r2804, 7;
	mov.u32 	%r16251, %r16250;
	mov.u32 	%r16252, %r16250;
	mov.u32 	%r16253, %r16250;
	mov.u32 	%r16254, %r16250;
	mov.u32 	%r16255, %r16250;
	mov.u32 	%r16256, %r16250;
	mov.u32 	%r16257, %r16250;
	mov.u32 	%r16258, %r16250;
	mov.u32 	%r16259, %r16250;
	mov.u32 	%r16260, %r16250;
	mov.u32 	%r16261, %r16250;
	mov.u32 	%r16262, %r16250;
	mov.u32 	%r16263, %r16250;
	mov.u32 	%r16264, %r16250;
	mov.u32 	%r16265, %r16250;
	mov.u32 	%r16266, %r16250;
	mov.u32 	%r16267, %r16250;
	mov.u32 	%r16268, %r16250;
	mov.u32 	%r16269, %r16250;
	mov.u32 	%r16270, %r16250;
	mov.u32 	%r16271, %r16250;
	mov.u32 	%r16272, %r16250;
	mov.u32 	%r16273, %r16250;
	mov.u32 	%r16274, %r16250;
	mov.u32 	%r16275, %r16250;
	mov.u32 	%r16276, %r16250;
	mov.u32 	%r16277, %r16250;
	mov.u32 	%r16278, %r16250;
	mov.u32 	%r16279, %r16250;
	mov.u32 	%r16280, %r16250;
	mov.u32 	%r16281, %r16250;
	@%p391 bra 	BB5_625;
	bra.uni 	BB5_694;

BB5_625:
	mov.u32 	%r16248, 0;
	// inline asm
	prmt.b32 %r16254, %r16248, %r71, %r278;
	// inline asm
	ld.local.v2.u32 	{%r7229, %r7230}, [%rd8+8];
	// inline asm
	prmt.b32 %r16255, %r7230, %r7229, %r278;
	// inline asm
	ld.local.u32 	%r7080, [%rd8+8];
	ld.local.u32 	%r7081, [%rd8+4];
	// inline asm
	prmt.b32 %r16256, %r7080, %r7081, %r278;
	// inline asm
	ld.local.v2.u32 	{%r7231, %r7232}, [%rd8];
	// inline asm
	prmt.b32 %r16257, %r7232, %r7231, %r278;
	// inline asm
	ld.local.u32 	%r7088, [%rd8];
	ld.local.u32 	%r7089, [%rd7+12];
	// inline asm
	prmt.b32 %r16250, %r7088, %r7089, %r278;
	// inline asm
	ld.local.v2.u32 	{%r7233, %r7234}, [%rd7+8];
	// inline asm
	prmt.b32 %r16251, %r7234, %r7233, %r278;
	// inline asm
	ld.local.u32 	%r7096, [%rd7+8];
	ld.local.u32 	%r7097, [%rd7+4];
	// inline asm
	prmt.b32 %r16252, %r7096, %r7097, %r278;
	// inline asm
	ld.local.v2.u32 	{%r7235, %r7236}, [%rd7];
	// inline asm
	prmt.b32 %r16253, %r7236, %r7235, %r278;
	// inline asm
	ld.local.u32 	%r7104, [%rd7];
	ld.local.u32 	%r7105, [%rd6+12];
	// inline asm
	prmt.b32 %r7103, %r7104, %r7105, %r278;
	// inline asm
	st.local.u32 	[%rd8+12], %r7103;
	ld.local.v2.u32 	{%r7237, %r7238}, [%rd6+8];
	// inline asm
	prmt.b32 %r7107, %r7238, %r7237, %r278;
	// inline asm
	st.local.u32 	[%rd8+8], %r7107;
	ld.local.u32 	%r7112, [%rd6+8];
	ld.local.u32 	%r7113, [%rd6+4];
	// inline asm
	prmt.b32 %r7111, %r7112, %r7113, %r278;
	// inline asm
	st.local.u32 	[%rd8+4], %r7111;
	ld.local.v2.u32 	{%r7239, %r7240}, [%rd6];
	// inline asm
	prmt.b32 %r7115, %r7240, %r7239, %r278;
	// inline asm
	st.local.u32 	[%rd8], %r7115;
	ld.local.u32 	%r7120, [%rd6];
	ld.local.u32 	%r7121, [%rd5+12];
	// inline asm
	prmt.b32 %r7119, %r7120, %r7121, %r278;
	// inline asm
	st.local.u32 	[%rd7+12], %r7119;
	ld.local.v2.u32 	{%r7241, %r7242}, [%rd5+8];
	// inline asm
	prmt.b32 %r7123, %r7242, %r7241, %r278;
	// inline asm
	st.local.u32 	[%rd7+8], %r7123;
	ld.local.u32 	%r7128, [%rd5+8];
	ld.local.u32 	%r7129, [%rd5+4];
	// inline asm
	prmt.b32 %r7127, %r7128, %r7129, %r278;
	// inline asm
	st.local.u32 	[%rd7+4], %r7127;
	ld.local.v2.u32 	{%r7243, %r7244}, [%rd5];
	// inline asm
	prmt.b32 %r7131, %r7244, %r7243, %r278;
	// inline asm
	st.local.u32 	[%rd7], %r7131;
	ld.local.u32 	%r7136, [%rd5];
	ld.local.u32 	%r7137, [%rd4+12];
	// inline asm
	prmt.b32 %r7135, %r7136, %r7137, %r278;
	// inline asm
	st.local.u32 	[%rd6+12], %r7135;
	ld.local.v2.u32 	{%r7245, %r7246}, [%rd4+8];
	// inline asm
	prmt.b32 %r7139, %r7246, %r7245, %r278;
	// inline asm
	st.local.u32 	[%rd6+8], %r7139;
	ld.local.u32 	%r7144, [%rd4+8];
	ld.local.u32 	%r7145, [%rd4+4];
	// inline asm
	prmt.b32 %r7143, %r7144, %r7145, %r278;
	// inline asm
	st.local.u32 	[%rd6+4], %r7143;
	ld.local.v2.u32 	{%r7247, %r7248}, [%rd4];
	// inline asm
	prmt.b32 %r7147, %r7248, %r7247, %r278;
	// inline asm
	st.local.u32 	[%rd6], %r7147;
	ld.local.u32 	%r7152, [%rd4];
	ld.local.u32 	%r7153, [%rd3+12];
	// inline asm
	prmt.b32 %r7151, %r7152, %r7153, %r278;
	// inline asm
	st.local.u32 	[%rd5+12], %r7151;
	ld.local.v2.u32 	{%r7249, %r7250}, [%rd3+8];
	// inline asm
	prmt.b32 %r7155, %r7250, %r7249, %r278;
	// inline asm
	st.local.u32 	[%rd5+8], %r7155;
	ld.local.u32 	%r7160, [%rd3+8];
	ld.local.u32 	%r7161, [%rd3+4];
	// inline asm
	prmt.b32 %r7159, %r7160, %r7161, %r278;
	// inline asm
	st.local.u32 	[%rd5+4], %r7159;
	ld.local.v2.u32 	{%r7251, %r7252}, [%rd3];
	// inline asm
	prmt.b32 %r7163, %r7252, %r7251, %r278;
	// inline asm
	st.local.u32 	[%rd5], %r7163;
	ld.local.u32 	%r7168, [%rd3];
	ld.local.u32 	%r7169, [%rd2+12];
	// inline asm
	prmt.b32 %r7167, %r7168, %r7169, %r278;
	// inline asm
	st.local.u32 	[%rd4+12], %r7167;
	ld.local.v2.u32 	{%r7253, %r7254}, [%rd2+8];
	// inline asm
	prmt.b32 %r7171, %r7254, %r7253, %r278;
	// inline asm
	st.local.u32 	[%rd4+8], %r7171;
	ld.local.u32 	%r7176, [%rd2+8];
	ld.local.u32 	%r7177, [%rd2+4];
	// inline asm
	prmt.b32 %r7175, %r7176, %r7177, %r278;
	// inline asm
	st.local.u32 	[%rd4+4], %r7175;
	ld.local.v2.u32 	{%r7255, %r7256}, [%rd2];
	// inline asm
	prmt.b32 %r7179, %r7256, %r7255, %r278;
	// inline asm
	st.local.u32 	[%rd4], %r7179;
	ld.local.u32 	%r7184, [%rd2];
	ld.local.u32 	%r7185, [%rd1+12];
	// inline asm
	prmt.b32 %r7183, %r7184, %r7185, %r278;
	// inline asm
	st.local.u32 	[%rd3+12], %r7183;
	ld.local.v2.u32 	{%r7257, %r7258}, [%rd1+8];
	// inline asm
	prmt.b32 %r7187, %r7258, %r7257, %r278;
	// inline asm
	st.local.u32 	[%rd3+8], %r7187;
	ld.local.u32 	%r7192, [%rd1+8];
	ld.local.u32 	%r7193, [%rd1+4];
	// inline asm
	prmt.b32 %r7191, %r7192, %r7193, %r278;
	// inline asm
	st.local.u32 	[%rd3+4], %r7191;
	ld.local.v2.u32 	{%r7259, %r7260}, [%rd1];
	// inline asm
	prmt.b32 %r7195, %r7260, %r7259, %r278;
	// inline asm
	st.local.u32 	[%rd3], %r7195;
	ld.local.u32 	%r7200, [%rd1];
	// inline asm
	prmt.b32 %r7199, %r7200, %r16248, %r278;
	// inline asm
	st.local.v4.u32 	[%rd2], {%r16248, %r16248, %r16248, %r7199};
	st.local.v2.u32 	[%rd1+8], {%r16248, %r16248};
	mov.u64 	%rd935, 0;
	st.local.u64 	[%rd1], %rd935;
	mov.u32 	%r16249, %r16248;

BB5_686:
	mov.u32 	%r16258, %r16248;
	mov.u32 	%r16259, %r16248;
	mov.u32 	%r16260, %r16248;
	mov.u32 	%r16261, %r16248;

BB5_687:
	mov.u32 	%r16262, %r16248;
	mov.u32 	%r16263, %r16248;
	mov.u32 	%r16264, %r16248;
	mov.u32 	%r16265, %r16248;

BB5_688:
	mov.u32 	%r16266, %r16248;
	mov.u32 	%r16267, %r16248;
	mov.u32 	%r16268, %r16248;
	mov.u32 	%r16269, %r16248;

BB5_689:
	mov.u32 	%r16270, %r16248;
	mov.u32 	%r16271, %r16248;
	mov.u32 	%r16272, %r16248;
	mov.u32 	%r16273, %r16248;

BB5_690:
	mov.u32 	%r16274, %r16248;
	mov.u32 	%r16275, %r16248;
	mov.u32 	%r16276, %r16248;
	mov.u32 	%r16277, %r16248;

BB5_691:
	mov.u32 	%r16278, %r16248;
	mov.u32 	%r16279, %r16248;
	mov.u32 	%r16280, %r16248;
	mov.u32 	%r16281, %r16248;

BB5_694:
	ld.local.u32 	%r8617, [%rd28];
	or.b32  	%r8618, %r8617, %r16249;
	st.local.u32 	[%rd28], %r8618;
	ld.local.u32 	%r8619, [%rd29];
	or.b32  	%r8620, %r8619, %r16248;
	st.local.u32 	[%rd29], %r8620;
	ld.local.u32 	%r8621, [%rd30];
	ld.local.v2.u32 	{%r8622, %r8623}, [%rd1+8];
	or.b32  	%r8625, %r8621, %r8622;
	st.local.u32 	[%rd30], %r8625;
	ld.local.u32 	%r8626, [%rd389+76];
	ld.local.v2.u32 	{%r8628, %r8629}, [%rd389+80];
	ld.local.v2.u32 	{%r8630, %r8631}, [%rd389+88];
	ld.local.v2.u32 	{%r8632, %r8633}, [%rd389+96];
	or.b32  	%r8634, %r8626, %r8623;
	st.local.u32 	[%rd389+76], %r8634;
	ld.local.v4.u32 	{%r8635, %r8636, %r8637, %r8638}, [%rd2];
	or.b32  	%r8641, %r8629, %r8636;
	or.b32  	%r8644, %r8628, %r8635;
	st.local.v2.u32 	[%rd389+80], {%r8644, %r8641};
	or.b32  	%r8647, %r8631, %r8638;
	or.b32  	%r8650, %r8630, %r8637;
	st.local.v2.u32 	[%rd389+88], {%r8650, %r8647};
	ld.local.v4.u32 	{%r8651, %r8652, %r8653, %r8654}, [%rd3];
	or.b32  	%r8657, %r8633, %r8652;
	or.b32  	%r8660, %r8632, %r8651;
	st.local.v2.u32 	[%rd389+96], {%r8660, %r8657};
	ld.local.u32 	%r8661, [%rd31];
	or.b32  	%r8663, %r8661, %r8653;
	st.local.u32 	[%rd31], %r8663;
	ld.local.u32 	%r8665, [%rd32];
	or.b32  	%r8666, %r8665, %r8654;
	st.local.u32 	[%rd32], %r8666;
	ld.local.u32 	%r8667, [%rd33];
	ld.local.v4.u32 	{%r8668, %r8669, %r8670, %r8671}, [%rd4];
	or.b32  	%r8673, %r8667, %r8668;
	st.local.u32 	[%rd33], %r8673;
	ld.local.u32 	%r8674, [%rd34];
	or.b32  	%r8676, %r8674, %r8669;
	st.local.u32 	[%rd34], %r8676;
	ld.local.u32 	%r8677, [%rd35];
	or.b32  	%r8679, %r8677, %r8670;
	st.local.u32 	[%rd35], %r8679;
	ld.local.u32 	%r8681, [%rd36];
	or.b32  	%r8682, %r8681, %r8671;
	st.local.u32 	[%rd36], %r8682;
	ld.local.u32 	%r8683, [%rd37];
	ld.local.v4.u32 	{%r8684, %r8685, %r8686, %r8687}, [%rd5];
	or.b32  	%r8689, %r8683, %r8684;
	st.local.u32 	[%rd37], %r8689;
	ld.local.u32 	%r8690, [%rd38];
	or.b32  	%r8692, %r8690, %r8685;
	st.local.u32 	[%rd38], %r8692;
	ld.local.u32 	%r8693, [%rd39];
	or.b32  	%r8695, %r8693, %r8686;
	st.local.u32 	[%rd39], %r8695;
	ld.local.u32 	%r8697, [%rd40];
	or.b32  	%r8698, %r8697, %r8687;
	st.local.u32 	[%rd40], %r8698;
	ld.local.u32 	%r8699, [%rd41];
	ld.local.v4.u32 	{%r8700, %r8701, %r8702, %r8703}, [%rd6];
	or.b32  	%r8705, %r8699, %r8700;
	st.local.u32 	[%rd41], %r8705;
	ld.local.u32 	%r8706, [%rd42];
	or.b32  	%r8708, %r8706, %r8701;
	st.local.u32 	[%rd42], %r8708;
	ld.local.u32 	%r8709, [%rd43];
	or.b32  	%r8711, %r8709, %r8702;
	st.local.u32 	[%rd43], %r8711;
	ld.local.u32 	%r8713, [%rd44];
	or.b32  	%r8714, %r8713, %r8703;
	st.local.u32 	[%rd44], %r8714;
	ld.local.u32 	%r8715, [%rd45];
	ld.local.v4.u32 	{%r8716, %r8717, %r8718, %r8719}, [%rd7];
	or.b32  	%r8721, %r8715, %r8716;
	st.local.u32 	[%rd45], %r8721;
	ld.local.u32 	%r8722, [%rd46];
	or.b32  	%r8724, %r8722, %r8717;
	st.local.u32 	[%rd46], %r8724;
	ld.local.u32 	%r8725, [%rd47];
	or.b32  	%r8727, %r8725, %r8718;
	st.local.u32 	[%rd47], %r8727;
	ld.local.u32 	%r8729, [%rd48];
	or.b32  	%r8730, %r8729, %r8719;
	st.local.u32 	[%rd48], %r8730;
	ld.local.u32 	%r8731, [%rd49];
	ld.local.v4.u32 	{%r8732, %r8733, %r8734, %r8735}, [%rd8];
	or.b32  	%r8737, %r8731, %r8732;
	st.local.u32 	[%rd49], %r8737;
	ld.local.u32 	%r8738, [%rd50];
	or.b32  	%r8740, %r8738, %r8733;
	st.local.u32 	[%rd50], %r8740;
	ld.local.u32 	%r8741, [%rd51];
	or.b32  	%r8743, %r8741, %r8734;
	st.local.u32 	[%rd51], %r8743;
	ld.local.u32 	%r8745, [%rd52];
	or.b32  	%r8746, %r8745, %r8735;
	st.local.u32 	[%rd52], %r8746;
	mov.b64	%rd3048, {%r8620, %r8618};
	mov.b64	%rd3049, {%r8634, %r8625};
	mov.b64	%rd3050, {%r8641, %r8644};
	mov.b64	%rd3051, {%r8647, %r8650};
	mov.b64	%rd3052, {%r8657, %r8660};
	mov.b64	%rd3053, {%r8666, %r8663};
	mov.b64	%rd3054, {%r8676, %r8673};
	mov.b64	%rd3055, {%r8682, %r8679};
	mov.b64	%rd3039, {%r8692, %r8689};
	mov.b64	%rd3038, {%r8698, %r8695};
	mov.b64	%rd3037, {%r8708, %r8705};
	mov.b64	%rd3036, {%r8714, %r8711};
	mov.b64	%rd3035, {%r8724, %r8721};
	mov.b64	%rd3034, {%r8730, %r8727};
	mov.b64	%rd3033, {%r8740, %r8737};
	mov.b64	%rd3032, {%r8746, %r8743};
	ld.local.u64 	%rd138, [%rd24];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8747,%dummy}, %rd138;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8748}, %rd138;
	}
	shf.r.wrap.b32 	%r8749, %r8748, %r8747, 14;
	shf.r.wrap.b32 	%r8750, %r8747, %r8748, 14;
	mov.b64 	%rd943, {%r8750, %r8749};
	shf.r.wrap.b32 	%r8751, %r8748, %r8747, 18;
	shf.r.wrap.b32 	%r8752, %r8747, %r8748, 18;
	mov.b64 	%rd944, {%r8752, %r8751};
	xor.b64  	%rd945, %rd944, %rd943;
	shf.l.wrap.b32 	%r8753, %r8747, %r8748, 23;
	shf.l.wrap.b32 	%r8754, %r8748, %r8747, 23;
	mov.b64 	%rd946, {%r8754, %r8753};
	xor.b64  	%rd947, %rd945, %rd946;
	ld.local.u64 	%rd139, [%rd26];
	ld.local.u64 	%rd140, [%rd25];
	xor.b64  	%rd948, %rd139, %rd140;
	and.b64  	%rd949, %rd948, %rd138;
	xor.b64  	%rd950, %rd949, %rd139;
	ld.local.u64 	%rd141, [%rd27];
	add.s64 	%rd951, %rd950, %rd141;
	add.s64 	%rd952, %rd951, %rd3048;
	add.s64 	%rd953, %rd952, %rd53;
	add.s64 	%rd954, %rd953, %rd947;
	ld.local.u64 	%rd142, [%rd23];
	add.s64 	%rd955, %rd954, %rd142;
	ld.local.u64 	%rd143, [%rd389];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8755,%dummy}, %rd143;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8756}, %rd143;
	}
	shf.r.wrap.b32 	%r8757, %r8756, %r8755, 28;
	shf.r.wrap.b32 	%r8758, %r8755, %r8756, 28;
	mov.b64 	%rd956, {%r8758, %r8757};
	shf.l.wrap.b32 	%r8759, %r8755, %r8756, 30;
	shf.l.wrap.b32 	%r8760, %r8756, %r8755, 30;
	mov.b64 	%rd957, {%r8760, %r8759};
	xor.b64  	%rd958, %rd957, %rd956;
	shf.l.wrap.b32 	%r8761, %r8755, %r8756, 25;
	shf.l.wrap.b32 	%r8762, %r8756, %r8755, 25;
	mov.b64 	%rd959, {%r8762, %r8761};
	xor.b64  	%rd960, %rd958, %rd959;
	ld.local.u64 	%rd144, [%rd22];
	xor.b64  	%rd961, %rd144, %rd143;
	ld.local.u64 	%rd145, [%rd21];
	xor.b64  	%rd962, %rd145, %rd143;
	and.b64  	%rd963, %rd961, %rd962;
	xor.b64  	%rd964, %rd963, %rd143;
	add.s64 	%rd965, %rd954, %rd964;
	add.s64 	%rd966, %rd965, %rd960;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8763,%dummy}, %rd955;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8764}, %rd955;
	}
	shf.r.wrap.b32 	%r8765, %r8764, %r8763, 14;
	shf.r.wrap.b32 	%r8766, %r8763, %r8764, 14;
	mov.b64 	%rd967, {%r8766, %r8765};
	shf.r.wrap.b32 	%r8767, %r8764, %r8763, 18;
	shf.r.wrap.b32 	%r8768, %r8763, %r8764, 18;
	mov.b64 	%rd968, {%r8768, %r8767};
	xor.b64  	%rd969, %rd968, %rd967;
	shf.l.wrap.b32 	%r8769, %r8763, %r8764, 23;
	shf.l.wrap.b32 	%r8770, %r8764, %r8763, 23;
	mov.b64 	%rd970, {%r8770, %r8769};
	xor.b64  	%rd971, %rd969, %rd970;
	xor.b64  	%rd972, %rd140, %rd138;
	and.b64  	%rd973, %rd955, %rd972;
	xor.b64  	%rd974, %rd973, %rd140;
	add.s64 	%rd975, %rd3049, %rd139;
	add.s64 	%rd976, %rd975, %rd54;
	add.s64 	%rd977, %rd976, %rd974;
	add.s64 	%rd978, %rd977, %rd971;
	add.s64 	%rd979, %rd978, %rd144;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8771,%dummy}, %rd966;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8772}, %rd966;
	}
	shf.r.wrap.b32 	%r8773, %r8772, %r8771, 28;
	shf.r.wrap.b32 	%r8774, %r8771, %r8772, 28;
	mov.b64 	%rd980, {%r8774, %r8773};
	shf.l.wrap.b32 	%r8775, %r8771, %r8772, 30;
	shf.l.wrap.b32 	%r8776, %r8772, %r8771, 30;
	mov.b64 	%rd981, {%r8776, %r8775};
	xor.b64  	%rd982, %rd981, %rd980;
	shf.l.wrap.b32 	%r8777, %r8771, %r8772, 25;
	shf.l.wrap.b32 	%r8778, %r8772, %r8771, 25;
	mov.b64 	%rd983, {%r8778, %r8777};
	xor.b64  	%rd984, %rd982, %rd983;
	xor.b64  	%rd985, %rd966, %rd145;
	xor.b64  	%rd986, %rd966, %rd143;
	and.b64  	%rd987, %rd986, %rd985;
	xor.b64  	%rd988, %rd987, %rd966;
	add.s64 	%rd989, %rd978, %rd988;
	add.s64 	%rd990, %rd989, %rd984;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8779,%dummy}, %rd979;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8780}, %rd979;
	}
	shf.r.wrap.b32 	%r8781, %r8780, %r8779, 14;
	shf.r.wrap.b32 	%r8782, %r8779, %r8780, 14;
	mov.b64 	%rd991, {%r8782, %r8781};
	shf.r.wrap.b32 	%r8783, %r8780, %r8779, 18;
	shf.r.wrap.b32 	%r8784, %r8779, %r8780, 18;
	mov.b64 	%rd992, {%r8784, %r8783};
	xor.b64  	%rd993, %rd992, %rd991;
	shf.l.wrap.b32 	%r8785, %r8779, %r8780, 23;
	shf.l.wrap.b32 	%r8786, %r8780, %r8779, 23;
	mov.b64 	%rd994, {%r8786, %r8785};
	xor.b64  	%rd995, %rd993, %rd994;
	xor.b64  	%rd996, %rd955, %rd138;
	and.b64  	%rd997, %rd979, %rd996;
	xor.b64  	%rd998, %rd997, %rd138;
	add.s64 	%rd999, %rd3050, %rd140;
	add.s64 	%rd1000, %rd999, %rd55;
	add.s64 	%rd1001, %rd1000, %rd998;
	add.s64 	%rd1002, %rd1001, %rd995;
	add.s64 	%rd1003, %rd1002, %rd145;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8787,%dummy}, %rd990;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8788}, %rd990;
	}
	shf.r.wrap.b32 	%r8789, %r8788, %r8787, 28;
	shf.r.wrap.b32 	%r8790, %r8787, %r8788, 28;
	mov.b64 	%rd1004, {%r8790, %r8789};
	shf.l.wrap.b32 	%r8791, %r8787, %r8788, 30;
	shf.l.wrap.b32 	%r8792, %r8788, %r8787, 30;
	mov.b64 	%rd1005, {%r8792, %r8791};
	xor.b64  	%rd1006, %rd1005, %rd1004;
	shf.l.wrap.b32 	%r8793, %r8787, %r8788, 25;
	shf.l.wrap.b32 	%r8794, %r8788, %r8787, 25;
	mov.b64 	%rd1007, {%r8794, %r8793};
	xor.b64  	%rd1008, %rd1006, %rd1007;
	xor.b64  	%rd1009, %rd990, %rd143;
	xor.b64  	%rd1010, %rd990, %rd966;
	and.b64  	%rd1011, %rd1010, %rd1009;
	xor.b64  	%rd1012, %rd1011, %rd990;
	add.s64 	%rd1013, %rd1002, %rd1012;
	add.s64 	%rd1014, %rd1013, %rd1008;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8795,%dummy}, %rd1003;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8796}, %rd1003;
	}
	shf.r.wrap.b32 	%r8797, %r8796, %r8795, 14;
	shf.r.wrap.b32 	%r8798, %r8795, %r8796, 14;
	mov.b64 	%rd1015, {%r8798, %r8797};
	shf.r.wrap.b32 	%r8799, %r8796, %r8795, 18;
	shf.r.wrap.b32 	%r8800, %r8795, %r8796, 18;
	mov.b64 	%rd1016, {%r8800, %r8799};
	xor.b64  	%rd1017, %rd1016, %rd1015;
	shf.l.wrap.b32 	%r8801, %r8795, %r8796, 23;
	shf.l.wrap.b32 	%r8802, %r8796, %r8795, 23;
	mov.b64 	%rd1018, {%r8802, %r8801};
	xor.b64  	%rd1019, %rd1017, %rd1018;
	xor.b64  	%rd1020, %rd979, %rd955;
	and.b64  	%rd1021, %rd1003, %rd1020;
	xor.b64  	%rd1022, %rd1021, %rd955;
	add.s64 	%rd1023, %rd3051, %rd138;
	add.s64 	%rd1024, %rd1023, %rd56;
	add.s64 	%rd1025, %rd1024, %rd1022;
	add.s64 	%rd1026, %rd1025, %rd1019;
	add.s64 	%rd1027, %rd1026, %rd143;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8803,%dummy}, %rd1014;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8804}, %rd1014;
	}
	shf.r.wrap.b32 	%r8805, %r8804, %r8803, 28;
	shf.r.wrap.b32 	%r8806, %r8803, %r8804, 28;
	mov.b64 	%rd1028, {%r8806, %r8805};
	shf.l.wrap.b32 	%r8807, %r8803, %r8804, 30;
	shf.l.wrap.b32 	%r8808, %r8804, %r8803, 30;
	mov.b64 	%rd1029, {%r8808, %r8807};
	xor.b64  	%rd1030, %rd1029, %rd1028;
	shf.l.wrap.b32 	%r8809, %r8803, %r8804, 25;
	shf.l.wrap.b32 	%r8810, %r8804, %r8803, 25;
	mov.b64 	%rd1031, {%r8810, %r8809};
	xor.b64  	%rd1032, %rd1030, %rd1031;
	xor.b64  	%rd1033, %rd1014, %rd966;
	xor.b64  	%rd1034, %rd1014, %rd990;
	and.b64  	%rd1035, %rd1034, %rd1033;
	xor.b64  	%rd1036, %rd1035, %rd1014;
	add.s64 	%rd1037, %rd1026, %rd1036;
	add.s64 	%rd1038, %rd1037, %rd1032;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8811,%dummy}, %rd1027;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8812}, %rd1027;
	}
	shf.r.wrap.b32 	%r8813, %r8812, %r8811, 14;
	shf.r.wrap.b32 	%r8814, %r8811, %r8812, 14;
	mov.b64 	%rd1039, {%r8814, %r8813};
	shf.r.wrap.b32 	%r8815, %r8812, %r8811, 18;
	shf.r.wrap.b32 	%r8816, %r8811, %r8812, 18;
	mov.b64 	%rd1040, {%r8816, %r8815};
	xor.b64  	%rd1041, %rd1040, %rd1039;
	shf.l.wrap.b32 	%r8817, %r8811, %r8812, 23;
	shf.l.wrap.b32 	%r8818, %r8812, %r8811, 23;
	mov.b64 	%rd1042, {%r8818, %r8817};
	xor.b64  	%rd1043, %rd1041, %rd1042;
	xor.b64  	%rd1044, %rd1003, %rd979;
	and.b64  	%rd1045, %rd1027, %rd1044;
	xor.b64  	%rd1046, %rd1045, %rd979;
	add.s64 	%rd1047, %rd955, %rd3052;
	add.s64 	%rd1048, %rd1047, %rd57;
	add.s64 	%rd1049, %rd1048, %rd1046;
	add.s64 	%rd1050, %rd1049, %rd1043;
	add.s64 	%rd1051, %rd1050, %rd966;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8819,%dummy}, %rd1038;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8820}, %rd1038;
	}
	shf.r.wrap.b32 	%r8821, %r8820, %r8819, 28;
	shf.r.wrap.b32 	%r8822, %r8819, %r8820, 28;
	mov.b64 	%rd1052, {%r8822, %r8821};
	shf.l.wrap.b32 	%r8823, %r8819, %r8820, 30;
	shf.l.wrap.b32 	%r8824, %r8820, %r8819, 30;
	mov.b64 	%rd1053, {%r8824, %r8823};
	xor.b64  	%rd1054, %rd1053, %rd1052;
	shf.l.wrap.b32 	%r8825, %r8819, %r8820, 25;
	shf.l.wrap.b32 	%r8826, %r8820, %r8819, 25;
	mov.b64 	%rd1055, {%r8826, %r8825};
	xor.b64  	%rd1056, %rd1054, %rd1055;
	xor.b64  	%rd1057, %rd1038, %rd990;
	xor.b64  	%rd1058, %rd1038, %rd1014;
	and.b64  	%rd1059, %rd1058, %rd1057;
	xor.b64  	%rd1060, %rd1059, %rd1038;
	add.s64 	%rd1061, %rd1050, %rd1060;
	add.s64 	%rd1062, %rd1061, %rd1056;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8827,%dummy}, %rd1051;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8828}, %rd1051;
	}
	shf.r.wrap.b32 	%r8829, %r8828, %r8827, 14;
	shf.r.wrap.b32 	%r8830, %r8827, %r8828, 14;
	mov.b64 	%rd1063, {%r8830, %r8829};
	shf.r.wrap.b32 	%r8831, %r8828, %r8827, 18;
	shf.r.wrap.b32 	%r8832, %r8827, %r8828, 18;
	mov.b64 	%rd1064, {%r8832, %r8831};
	xor.b64  	%rd1065, %rd1064, %rd1063;
	shf.l.wrap.b32 	%r8833, %r8827, %r8828, 23;
	shf.l.wrap.b32 	%r8834, %r8828, %r8827, 23;
	mov.b64 	%rd1066, {%r8834, %r8833};
	xor.b64  	%rd1067, %rd1065, %rd1066;
	xor.b64  	%rd1068, %rd1027, %rd1003;
	and.b64  	%rd1069, %rd1051, %rd1068;
	xor.b64  	%rd1070, %rd1069, %rd1003;
	add.s64 	%rd1071, %rd979, %rd3053;
	add.s64 	%rd1072, %rd1071, %rd58;
	add.s64 	%rd1073, %rd1072, %rd1070;
	add.s64 	%rd1074, %rd1073, %rd1067;
	add.s64 	%rd1075, %rd1074, %rd990;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8835,%dummy}, %rd1062;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8836}, %rd1062;
	}
	shf.r.wrap.b32 	%r8837, %r8836, %r8835, 28;
	shf.r.wrap.b32 	%r8838, %r8835, %r8836, 28;
	mov.b64 	%rd1076, {%r8838, %r8837};
	shf.l.wrap.b32 	%r8839, %r8835, %r8836, 30;
	shf.l.wrap.b32 	%r8840, %r8836, %r8835, 30;
	mov.b64 	%rd1077, {%r8840, %r8839};
	xor.b64  	%rd1078, %rd1077, %rd1076;
	shf.l.wrap.b32 	%r8841, %r8835, %r8836, 25;
	shf.l.wrap.b32 	%r8842, %r8836, %r8835, 25;
	mov.b64 	%rd1079, {%r8842, %r8841};
	xor.b64  	%rd1080, %rd1078, %rd1079;
	xor.b64  	%rd1081, %rd1062, %rd1014;
	xor.b64  	%rd1082, %rd1062, %rd1038;
	and.b64  	%rd1083, %rd1082, %rd1081;
	xor.b64  	%rd1084, %rd1083, %rd1062;
	add.s64 	%rd1085, %rd1074, %rd1084;
	add.s64 	%rd1086, %rd1085, %rd1080;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8843,%dummy}, %rd1075;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8844}, %rd1075;
	}
	shf.r.wrap.b32 	%r8845, %r8844, %r8843, 14;
	shf.r.wrap.b32 	%r8846, %r8843, %r8844, 14;
	mov.b64 	%rd1087, {%r8846, %r8845};
	shf.r.wrap.b32 	%r8847, %r8844, %r8843, 18;
	shf.r.wrap.b32 	%r8848, %r8843, %r8844, 18;
	mov.b64 	%rd1088, {%r8848, %r8847};
	xor.b64  	%rd1089, %rd1088, %rd1087;
	shf.l.wrap.b32 	%r8849, %r8843, %r8844, 23;
	shf.l.wrap.b32 	%r8850, %r8844, %r8843, 23;
	mov.b64 	%rd1090, {%r8850, %r8849};
	xor.b64  	%rd1091, %rd1089, %rd1090;
	xor.b64  	%rd1092, %rd1051, %rd1027;
	and.b64  	%rd1093, %rd1075, %rd1092;
	xor.b64  	%rd1094, %rd1093, %rd1027;
	add.s64 	%rd1095, %rd1003, %rd3054;
	add.s64 	%rd1096, %rd1095, %rd59;
	add.s64 	%rd1097, %rd1096, %rd1094;
	add.s64 	%rd1098, %rd1097, %rd1091;
	add.s64 	%rd1099, %rd1098, %rd1014;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8851,%dummy}, %rd1086;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8852}, %rd1086;
	}
	shf.r.wrap.b32 	%r8853, %r8852, %r8851, 28;
	shf.r.wrap.b32 	%r8854, %r8851, %r8852, 28;
	mov.b64 	%rd1100, {%r8854, %r8853};
	shf.l.wrap.b32 	%r8855, %r8851, %r8852, 30;
	shf.l.wrap.b32 	%r8856, %r8852, %r8851, 30;
	mov.b64 	%rd1101, {%r8856, %r8855};
	xor.b64  	%rd1102, %rd1101, %rd1100;
	shf.l.wrap.b32 	%r8857, %r8851, %r8852, 25;
	shf.l.wrap.b32 	%r8858, %r8852, %r8851, 25;
	mov.b64 	%rd1103, {%r8858, %r8857};
	xor.b64  	%rd1104, %rd1102, %rd1103;
	xor.b64  	%rd1105, %rd1086, %rd1038;
	xor.b64  	%rd1106, %rd1086, %rd1062;
	and.b64  	%rd1107, %rd1106, %rd1105;
	xor.b64  	%rd1108, %rd1107, %rd1086;
	add.s64 	%rd1109, %rd1098, %rd1108;
	add.s64 	%rd1110, %rd1109, %rd1104;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8859,%dummy}, %rd1099;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8860}, %rd1099;
	}
	shf.r.wrap.b32 	%r8861, %r8860, %r8859, 14;
	shf.r.wrap.b32 	%r8862, %r8859, %r8860, 14;
	mov.b64 	%rd1111, {%r8862, %r8861};
	shf.r.wrap.b32 	%r8863, %r8860, %r8859, 18;
	shf.r.wrap.b32 	%r8864, %r8859, %r8860, 18;
	mov.b64 	%rd1112, {%r8864, %r8863};
	xor.b64  	%rd1113, %rd1112, %rd1111;
	shf.l.wrap.b32 	%r8865, %r8859, %r8860, 23;
	shf.l.wrap.b32 	%r8866, %r8860, %r8859, 23;
	mov.b64 	%rd1114, {%r8866, %r8865};
	xor.b64  	%rd1115, %rd1113, %rd1114;
	xor.b64  	%rd1116, %rd1075, %rd1051;
	and.b64  	%rd1117, %rd1099, %rd1116;
	xor.b64  	%rd1118, %rd1117, %rd1051;
	add.s64 	%rd1119, %rd1027, %rd3055;
	add.s64 	%rd1120, %rd1119, %rd60;
	add.s64 	%rd1121, %rd1120, %rd1118;
	add.s64 	%rd1122, %rd1121, %rd1115;
	add.s64 	%rd1123, %rd1122, %rd1038;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8867,%dummy}, %rd1110;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8868}, %rd1110;
	}
	shf.r.wrap.b32 	%r8869, %r8868, %r8867, 28;
	shf.r.wrap.b32 	%r8870, %r8867, %r8868, 28;
	mov.b64 	%rd1124, {%r8870, %r8869};
	shf.l.wrap.b32 	%r8871, %r8867, %r8868, 30;
	shf.l.wrap.b32 	%r8872, %r8868, %r8867, 30;
	mov.b64 	%rd1125, {%r8872, %r8871};
	xor.b64  	%rd1126, %rd1125, %rd1124;
	shf.l.wrap.b32 	%r8873, %r8867, %r8868, 25;
	shf.l.wrap.b32 	%r8874, %r8868, %r8867, 25;
	mov.b64 	%rd1127, {%r8874, %r8873};
	xor.b64  	%rd1128, %rd1126, %rd1127;
	xor.b64  	%rd1129, %rd1110, %rd1062;
	xor.b64  	%rd1130, %rd1110, %rd1086;
	and.b64  	%rd1131, %rd1130, %rd1129;
	xor.b64  	%rd1132, %rd1131, %rd1110;
	add.s64 	%rd1133, %rd1122, %rd1132;
	add.s64 	%rd1134, %rd1133, %rd1128;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8875,%dummy}, %rd1123;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8876}, %rd1123;
	}
	shf.r.wrap.b32 	%r8877, %r8876, %r8875, 14;
	shf.r.wrap.b32 	%r8878, %r8875, %r8876, 14;
	mov.b64 	%rd1135, {%r8878, %r8877};
	shf.r.wrap.b32 	%r8879, %r8876, %r8875, 18;
	shf.r.wrap.b32 	%r8880, %r8875, %r8876, 18;
	mov.b64 	%rd1136, {%r8880, %r8879};
	xor.b64  	%rd1137, %rd1136, %rd1135;
	shf.l.wrap.b32 	%r8881, %r8875, %r8876, 23;
	shf.l.wrap.b32 	%r8882, %r8876, %r8875, 23;
	mov.b64 	%rd1138, {%r8882, %r8881};
	xor.b64  	%rd1139, %rd1137, %rd1138;
	xor.b64  	%rd1140, %rd1099, %rd1075;
	and.b64  	%rd1141, %rd1123, %rd1140;
	xor.b64  	%rd1142, %rd1141, %rd1075;
	add.s64 	%rd1143, %rd1051, %rd3039;
	add.s64 	%rd1144, %rd1143, %rd61;
	add.s64 	%rd1145, %rd1144, %rd1142;
	add.s64 	%rd1146, %rd1145, %rd1139;
	add.s64 	%rd1147, %rd1146, %rd1062;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8883,%dummy}, %rd1134;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8884}, %rd1134;
	}
	shf.r.wrap.b32 	%r8885, %r8884, %r8883, 28;
	shf.r.wrap.b32 	%r8886, %r8883, %r8884, 28;
	mov.b64 	%rd1148, {%r8886, %r8885};
	shf.l.wrap.b32 	%r8887, %r8883, %r8884, 30;
	shf.l.wrap.b32 	%r8888, %r8884, %r8883, 30;
	mov.b64 	%rd1149, {%r8888, %r8887};
	xor.b64  	%rd1150, %rd1149, %rd1148;
	shf.l.wrap.b32 	%r8889, %r8883, %r8884, 25;
	shf.l.wrap.b32 	%r8890, %r8884, %r8883, 25;
	mov.b64 	%rd1151, {%r8890, %r8889};
	xor.b64  	%rd1152, %rd1150, %rd1151;
	xor.b64  	%rd1153, %rd1134, %rd1086;
	xor.b64  	%rd1154, %rd1134, %rd1110;
	and.b64  	%rd1155, %rd1154, %rd1153;
	xor.b64  	%rd1156, %rd1155, %rd1134;
	add.s64 	%rd1157, %rd1146, %rd1156;
	add.s64 	%rd1158, %rd1157, %rd1152;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8891,%dummy}, %rd1147;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8892}, %rd1147;
	}
	shf.r.wrap.b32 	%r8893, %r8892, %r8891, 14;
	shf.r.wrap.b32 	%r8894, %r8891, %r8892, 14;
	mov.b64 	%rd1159, {%r8894, %r8893};
	shf.r.wrap.b32 	%r8895, %r8892, %r8891, 18;
	shf.r.wrap.b32 	%r8896, %r8891, %r8892, 18;
	mov.b64 	%rd1160, {%r8896, %r8895};
	xor.b64  	%rd1161, %rd1160, %rd1159;
	shf.l.wrap.b32 	%r8897, %r8891, %r8892, 23;
	shf.l.wrap.b32 	%r8898, %r8892, %r8891, 23;
	mov.b64 	%rd1162, {%r8898, %r8897};
	xor.b64  	%rd1163, %rd1161, %rd1162;
	xor.b64  	%rd1164, %rd1123, %rd1099;
	and.b64  	%rd1165, %rd1147, %rd1164;
	xor.b64  	%rd1166, %rd1165, %rd1099;
	add.s64 	%rd1167, %rd1075, %rd3038;
	add.s64 	%rd1168, %rd1167, %rd62;
	add.s64 	%rd1169, %rd1168, %rd1166;
	add.s64 	%rd1170, %rd1169, %rd1163;
	add.s64 	%rd1171, %rd1170, %rd1086;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8899,%dummy}, %rd1158;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8900}, %rd1158;
	}
	shf.r.wrap.b32 	%r8901, %r8900, %r8899, 28;
	shf.r.wrap.b32 	%r8902, %r8899, %r8900, 28;
	mov.b64 	%rd1172, {%r8902, %r8901};
	shf.l.wrap.b32 	%r8903, %r8899, %r8900, 30;
	shf.l.wrap.b32 	%r8904, %r8900, %r8899, 30;
	mov.b64 	%rd1173, {%r8904, %r8903};
	xor.b64  	%rd1174, %rd1173, %rd1172;
	shf.l.wrap.b32 	%r8905, %r8899, %r8900, 25;
	shf.l.wrap.b32 	%r8906, %r8900, %r8899, 25;
	mov.b64 	%rd1175, {%r8906, %r8905};
	xor.b64  	%rd1176, %rd1174, %rd1175;
	xor.b64  	%rd1177, %rd1158, %rd1110;
	xor.b64  	%rd1178, %rd1158, %rd1134;
	and.b64  	%rd1179, %rd1178, %rd1177;
	xor.b64  	%rd1180, %rd1179, %rd1158;
	add.s64 	%rd1181, %rd1170, %rd1180;
	add.s64 	%rd1182, %rd1181, %rd1176;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8907,%dummy}, %rd1171;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8908}, %rd1171;
	}
	shf.r.wrap.b32 	%r8909, %r8908, %r8907, 14;
	shf.r.wrap.b32 	%r8910, %r8907, %r8908, 14;
	mov.b64 	%rd1183, {%r8910, %r8909};
	shf.r.wrap.b32 	%r8911, %r8908, %r8907, 18;
	shf.r.wrap.b32 	%r8912, %r8907, %r8908, 18;
	mov.b64 	%rd1184, {%r8912, %r8911};
	xor.b64  	%rd1185, %rd1184, %rd1183;
	shf.l.wrap.b32 	%r8913, %r8907, %r8908, 23;
	shf.l.wrap.b32 	%r8914, %r8908, %r8907, 23;
	mov.b64 	%rd1186, {%r8914, %r8913};
	xor.b64  	%rd1187, %rd1185, %rd1186;
	xor.b64  	%rd1188, %rd1147, %rd1123;
	and.b64  	%rd1189, %rd1171, %rd1188;
	xor.b64  	%rd1190, %rd1189, %rd1123;
	add.s64 	%rd1191, %rd1099, %rd3037;
	add.s64 	%rd1192, %rd1191, %rd63;
	add.s64 	%rd1193, %rd1192, %rd1190;
	add.s64 	%rd1194, %rd1193, %rd1187;
	add.s64 	%rd1195, %rd1194, %rd1110;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8915,%dummy}, %rd1182;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8916}, %rd1182;
	}
	shf.r.wrap.b32 	%r8917, %r8916, %r8915, 28;
	shf.r.wrap.b32 	%r8918, %r8915, %r8916, 28;
	mov.b64 	%rd1196, {%r8918, %r8917};
	shf.l.wrap.b32 	%r8919, %r8915, %r8916, 30;
	shf.l.wrap.b32 	%r8920, %r8916, %r8915, 30;
	mov.b64 	%rd1197, {%r8920, %r8919};
	xor.b64  	%rd1198, %rd1197, %rd1196;
	shf.l.wrap.b32 	%r8921, %r8915, %r8916, 25;
	shf.l.wrap.b32 	%r8922, %r8916, %r8915, 25;
	mov.b64 	%rd1199, {%r8922, %r8921};
	xor.b64  	%rd1200, %rd1198, %rd1199;
	xor.b64  	%rd1201, %rd1182, %rd1134;
	xor.b64  	%rd1202, %rd1182, %rd1158;
	and.b64  	%rd1203, %rd1202, %rd1201;
	xor.b64  	%rd1204, %rd1203, %rd1182;
	add.s64 	%rd1205, %rd1194, %rd1204;
	add.s64 	%rd1206, %rd1205, %rd1200;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8923,%dummy}, %rd1195;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8924}, %rd1195;
	}
	shf.r.wrap.b32 	%r8925, %r8924, %r8923, 14;
	shf.r.wrap.b32 	%r8926, %r8923, %r8924, 14;
	mov.b64 	%rd1207, {%r8926, %r8925};
	shf.r.wrap.b32 	%r8927, %r8924, %r8923, 18;
	shf.r.wrap.b32 	%r8928, %r8923, %r8924, 18;
	mov.b64 	%rd1208, {%r8928, %r8927};
	xor.b64  	%rd1209, %rd1208, %rd1207;
	shf.l.wrap.b32 	%r8929, %r8923, %r8924, 23;
	shf.l.wrap.b32 	%r8930, %r8924, %r8923, 23;
	mov.b64 	%rd1210, {%r8930, %r8929};
	xor.b64  	%rd1211, %rd1209, %rd1210;
	xor.b64  	%rd1212, %rd1171, %rd1147;
	and.b64  	%rd1213, %rd1195, %rd1212;
	xor.b64  	%rd1214, %rd1213, %rd1147;
	add.s64 	%rd1215, %rd1123, %rd3036;
	add.s64 	%rd1216, %rd1215, %rd64;
	add.s64 	%rd1217, %rd1216, %rd1214;
	add.s64 	%rd1218, %rd1217, %rd1211;
	add.s64 	%rd1219, %rd1218, %rd1134;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8931,%dummy}, %rd1206;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8932}, %rd1206;
	}
	shf.r.wrap.b32 	%r8933, %r8932, %r8931, 28;
	shf.r.wrap.b32 	%r8934, %r8931, %r8932, 28;
	mov.b64 	%rd1220, {%r8934, %r8933};
	shf.l.wrap.b32 	%r8935, %r8931, %r8932, 30;
	shf.l.wrap.b32 	%r8936, %r8932, %r8931, 30;
	mov.b64 	%rd1221, {%r8936, %r8935};
	xor.b64  	%rd1222, %rd1221, %rd1220;
	shf.l.wrap.b32 	%r8937, %r8931, %r8932, 25;
	shf.l.wrap.b32 	%r8938, %r8932, %r8931, 25;
	mov.b64 	%rd1223, {%r8938, %r8937};
	xor.b64  	%rd1224, %rd1222, %rd1223;
	xor.b64  	%rd1225, %rd1206, %rd1158;
	xor.b64  	%rd1226, %rd1206, %rd1182;
	and.b64  	%rd1227, %rd1226, %rd1225;
	xor.b64  	%rd1228, %rd1227, %rd1206;
	add.s64 	%rd1229, %rd1218, %rd1228;
	add.s64 	%rd1230, %rd1229, %rd1224;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8939,%dummy}, %rd1219;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8940}, %rd1219;
	}
	shf.r.wrap.b32 	%r8941, %r8940, %r8939, 14;
	shf.r.wrap.b32 	%r8942, %r8939, %r8940, 14;
	mov.b64 	%rd1231, {%r8942, %r8941};
	shf.r.wrap.b32 	%r8943, %r8940, %r8939, 18;
	shf.r.wrap.b32 	%r8944, %r8939, %r8940, 18;
	mov.b64 	%rd1232, {%r8944, %r8943};
	xor.b64  	%rd1233, %rd1232, %rd1231;
	shf.l.wrap.b32 	%r8945, %r8939, %r8940, 23;
	shf.l.wrap.b32 	%r8946, %r8940, %r8939, 23;
	mov.b64 	%rd1234, {%r8946, %r8945};
	xor.b64  	%rd1235, %rd1233, %rd1234;
	xor.b64  	%rd1236, %rd1195, %rd1171;
	and.b64  	%rd1237, %rd1219, %rd1236;
	xor.b64  	%rd1238, %rd1237, %rd1171;
	add.s64 	%rd1239, %rd1147, %rd3035;
	add.s64 	%rd1240, %rd1239, %rd65;
	add.s64 	%rd1241, %rd1240, %rd1238;
	add.s64 	%rd1242, %rd1241, %rd1235;
	add.s64 	%rd3047, %rd1242, %rd1158;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8947,%dummy}, %rd1230;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8948}, %rd1230;
	}
	shf.r.wrap.b32 	%r8949, %r8948, %r8947, 28;
	shf.r.wrap.b32 	%r8950, %r8947, %r8948, 28;
	mov.b64 	%rd1243, {%r8950, %r8949};
	shf.l.wrap.b32 	%r8951, %r8947, %r8948, 30;
	shf.l.wrap.b32 	%r8952, %r8948, %r8947, 30;
	mov.b64 	%rd1244, {%r8952, %r8951};
	xor.b64  	%rd1245, %rd1244, %rd1243;
	shf.l.wrap.b32 	%r8953, %r8947, %r8948, 25;
	shf.l.wrap.b32 	%r8954, %r8948, %r8947, 25;
	mov.b64 	%rd1246, {%r8954, %r8953};
	xor.b64  	%rd1247, %rd1245, %rd1246;
	xor.b64  	%rd1248, %rd1230, %rd1182;
	xor.b64  	%rd1249, %rd1230, %rd1206;
	and.b64  	%rd1250, %rd1249, %rd1248;
	xor.b64  	%rd1251, %rd1250, %rd1230;
	add.s64 	%rd1252, %rd1242, %rd1251;
	add.s64 	%rd3043, %rd1252, %rd1247;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8955,%dummy}, %rd3047;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8956}, %rd3047;
	}
	shf.r.wrap.b32 	%r8957, %r8956, %r8955, 14;
	shf.r.wrap.b32 	%r8958, %r8955, %r8956, 14;
	mov.b64 	%rd1253, {%r8958, %r8957};
	shf.r.wrap.b32 	%r8959, %r8956, %r8955, 18;
	shf.r.wrap.b32 	%r8960, %r8955, %r8956, 18;
	mov.b64 	%rd1254, {%r8960, %r8959};
	xor.b64  	%rd1255, %rd1254, %rd1253;
	shf.l.wrap.b32 	%r8961, %r8955, %r8956, 23;
	shf.l.wrap.b32 	%r8962, %r8956, %r8955, 23;
	mov.b64 	%rd1256, {%r8962, %r8961};
	xor.b64  	%rd1257, %rd1255, %rd1256;
	xor.b64  	%rd1258, %rd1219, %rd1195;
	and.b64  	%rd1259, %rd3047, %rd1258;
	xor.b64  	%rd1260, %rd1259, %rd1195;
	add.s64 	%rd1261, %rd1171, %rd3034;
	add.s64 	%rd1262, %rd1261, %rd66;
	add.s64 	%rd1263, %rd1262, %rd1260;
	add.s64 	%rd1264, %rd1263, %rd1257;
	add.s64 	%rd3046, %rd1264, %rd1182;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8963,%dummy}, %rd3043;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8964}, %rd3043;
	}
	shf.r.wrap.b32 	%r8965, %r8964, %r8963, 28;
	shf.r.wrap.b32 	%r8966, %r8963, %r8964, 28;
	mov.b64 	%rd1265, {%r8966, %r8965};
	shf.l.wrap.b32 	%r8967, %r8963, %r8964, 30;
	shf.l.wrap.b32 	%r8968, %r8964, %r8963, 30;
	mov.b64 	%rd1266, {%r8968, %r8967};
	xor.b64  	%rd1267, %rd1266, %rd1265;
	shf.l.wrap.b32 	%r8969, %r8963, %r8964, 25;
	shf.l.wrap.b32 	%r8970, %r8964, %r8963, 25;
	mov.b64 	%rd1268, {%r8970, %r8969};
	xor.b64  	%rd1269, %rd1267, %rd1268;
	xor.b64  	%rd1270, %rd3043, %rd1206;
	xor.b64  	%rd1271, %rd3043, %rd1230;
	and.b64  	%rd1272, %rd1271, %rd1270;
	xor.b64  	%rd1273, %rd1272, %rd3043;
	add.s64 	%rd1274, %rd1264, %rd1273;
	add.s64 	%rd3042, %rd1274, %rd1269;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8971,%dummy}, %rd3046;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8972}, %rd3046;
	}
	shf.r.wrap.b32 	%r8973, %r8972, %r8971, 14;
	shf.r.wrap.b32 	%r8974, %r8971, %r8972, 14;
	mov.b64 	%rd1275, {%r8974, %r8973};
	shf.r.wrap.b32 	%r8975, %r8972, %r8971, 18;
	shf.r.wrap.b32 	%r8976, %r8971, %r8972, 18;
	mov.b64 	%rd1276, {%r8976, %r8975};
	xor.b64  	%rd1277, %rd1276, %rd1275;
	shf.l.wrap.b32 	%r8977, %r8971, %r8972, 23;
	shf.l.wrap.b32 	%r8978, %r8972, %r8971, 23;
	mov.b64 	%rd1278, {%r8978, %r8977};
	xor.b64  	%rd1279, %rd1277, %rd1278;
	xor.b64  	%rd1280, %rd3047, %rd1219;
	and.b64  	%rd1281, %rd3046, %rd1280;
	xor.b64  	%rd1282, %rd1281, %rd1219;
	add.s64 	%rd1283, %rd1195, %rd3033;
	add.s64 	%rd1284, %rd1283, %rd67;
	add.s64 	%rd1285, %rd1284, %rd1282;
	add.s64 	%rd1286, %rd1285, %rd1279;
	add.s64 	%rd3045, %rd1286, %rd1206;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8979,%dummy}, %rd3042;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8980}, %rd3042;
	}
	shf.r.wrap.b32 	%r8981, %r8980, %r8979, 28;
	shf.r.wrap.b32 	%r8982, %r8979, %r8980, 28;
	mov.b64 	%rd1287, {%r8982, %r8981};
	shf.l.wrap.b32 	%r8983, %r8979, %r8980, 30;
	shf.l.wrap.b32 	%r8984, %r8980, %r8979, 30;
	mov.b64 	%rd1288, {%r8984, %r8983};
	xor.b64  	%rd1289, %rd1288, %rd1287;
	shf.l.wrap.b32 	%r8985, %r8979, %r8980, 25;
	shf.l.wrap.b32 	%r8986, %r8980, %r8979, 25;
	mov.b64 	%rd1290, {%r8986, %r8985};
	xor.b64  	%rd1291, %rd1289, %rd1290;
	xor.b64  	%rd1292, %rd3042, %rd1230;
	xor.b64  	%rd1293, %rd3042, %rd3043;
	and.b64  	%rd1294, %rd1293, %rd1292;
	xor.b64  	%rd1295, %rd1294, %rd3042;
	add.s64 	%rd1296, %rd1286, %rd1295;
	add.s64 	%rd3041, %rd1296, %rd1291;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8987,%dummy}, %rd3045;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8988}, %rd3045;
	}
	shf.r.wrap.b32 	%r8989, %r8988, %r8987, 14;
	shf.r.wrap.b32 	%r8990, %r8987, %r8988, 14;
	mov.b64 	%rd1297, {%r8990, %r8989};
	shf.r.wrap.b32 	%r8991, %r8988, %r8987, 18;
	shf.r.wrap.b32 	%r8992, %r8987, %r8988, 18;
	mov.b64 	%rd1298, {%r8992, %r8991};
	xor.b64  	%rd1299, %rd1298, %rd1297;
	shf.l.wrap.b32 	%r8993, %r8987, %r8988, 23;
	shf.l.wrap.b32 	%r8994, %r8988, %r8987, 23;
	mov.b64 	%rd1300, {%r8994, %r8993};
	xor.b64  	%rd1301, %rd1299, %rd1300;
	xor.b64  	%rd1302, %rd3046, %rd3047;
	and.b64  	%rd1303, %rd3045, %rd1302;
	xor.b64  	%rd1304, %rd1303, %rd3047;
	add.s64 	%rd1305, %rd1219, %rd3032;
	add.s64 	%rd1306, %rd1305, %rd68;
	add.s64 	%rd1307, %rd1306, %rd1304;
	add.s64 	%rd1308, %rd1307, %rd1301;
	add.s64 	%rd3044, %rd1308, %rd1230;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r8995,%dummy}, %rd3041;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r8996}, %rd3041;
	}
	shf.r.wrap.b32 	%r8997, %r8996, %r8995, 28;
	shf.r.wrap.b32 	%r8998, %r8995, %r8996, 28;
	mov.b64 	%rd1309, {%r8998, %r8997};
	shf.l.wrap.b32 	%r8999, %r8995, %r8996, 30;
	shf.l.wrap.b32 	%r9000, %r8996, %r8995, 30;
	mov.b64 	%rd1310, {%r9000, %r8999};
	xor.b64  	%rd1311, %rd1310, %rd1309;
	shf.l.wrap.b32 	%r9001, %r8995, %r8996, 25;
	shf.l.wrap.b32 	%r9002, %r8996, %r8995, 25;
	mov.b64 	%rd1312, {%r9002, %r9001};
	xor.b64  	%rd1313, %rd1311, %rd1312;
	xor.b64  	%rd1314, %rd3041, %rd3043;
	xor.b64  	%rd1315, %rd3041, %rd3042;
	and.b64  	%rd1316, %rd1315, %rd1314;
	xor.b64  	%rd1317, %rd1316, %rd3041;
	add.s64 	%rd1318, %rd1308, %rd1317;
	add.s64 	%rd3040, %rd1318, %rd1313;
	mov.u32 	%r16282, 16;

BB5_695:
	shr.u64 	%rd1319, %rd3033, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9003,%dummy}, %rd3033;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9004}, %rd3033;
	}
	shf.r.wrap.b32 	%r9005, %r9004, %r9003, 19;
	shf.r.wrap.b32 	%r9006, %r9003, %r9004, 19;
	mov.b64 	%rd1320, {%r9006, %r9005};
	xor.b64  	%rd1321, %rd1320, %rd1319;
	shf.l.wrap.b32 	%r9007, %r9003, %r9004, 3;
	shf.l.wrap.b32 	%r9008, %r9004, %r9003, 3;
	mov.b64 	%rd1322, {%r9008, %r9007};
	xor.b64  	%rd1323, %rd1321, %rd1322;
	shr.u64 	%rd1324, %rd3049, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9009,%dummy}, %rd3049;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9010}, %rd3049;
	}
	shf.r.wrap.b32 	%r9011, %r9010, %r9009, 1;
	shf.r.wrap.b32 	%r9012, %r9009, %r9010, 1;
	mov.b64 	%rd1325, {%r9012, %r9011};
	xor.b64  	%rd1326, %rd1325, %rd1324;
	shf.r.wrap.b32 	%r9013, %r9010, %r9009, 8;
	shf.r.wrap.b32 	%r9014, %r9009, %r9010, 8;
	mov.b64 	%rd1327, {%r9014, %r9013};
	xor.b64  	%rd1328, %rd1326, %rd1327;
	add.s64 	%rd1329, %rd3038, %rd3048;
	add.s64 	%rd1330, %rd1329, %rd1323;
	add.s64 	%rd3048, %rd1330, %rd1328;
	shr.u64 	%rd1331, %rd3032, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9015,%dummy}, %rd3032;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9016}, %rd3032;
	}
	shf.r.wrap.b32 	%r9017, %r9016, %r9015, 19;
	shf.r.wrap.b32 	%r9018, %r9015, %r9016, 19;
	mov.b64 	%rd1332, {%r9018, %r9017};
	xor.b64  	%rd1333, %rd1332, %rd1331;
	shf.l.wrap.b32 	%r9019, %r9015, %r9016, 3;
	shf.l.wrap.b32 	%r9020, %r9016, %r9015, 3;
	mov.b64 	%rd1334, {%r9020, %r9019};
	xor.b64  	%rd1335, %rd1333, %rd1334;
	shr.u64 	%rd1336, %rd3050, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9021,%dummy}, %rd3050;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9022}, %rd3050;
	}
	shf.r.wrap.b32 	%r9023, %r9022, %r9021, 1;
	shf.r.wrap.b32 	%r9024, %r9021, %r9022, 1;
	mov.b64 	%rd1337, {%r9024, %r9023};
	xor.b64  	%rd1338, %rd1337, %rd1336;
	shf.r.wrap.b32 	%r9025, %r9022, %r9021, 8;
	shf.r.wrap.b32 	%r9026, %r9021, %r9022, 8;
	mov.b64 	%rd1339, {%r9026, %r9025};
	xor.b64  	%rd1340, %rd1338, %rd1339;
	add.s64 	%rd1341, %rd3037, %rd3049;
	add.s64 	%rd1342, %rd1341, %rd1335;
	add.s64 	%rd3049, %rd1342, %rd1340;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9027,%dummy}, %rd3048;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9028}, %rd3048;
	}
	shf.r.wrap.b32 	%r9029, %r9028, %r9027, 19;
	shf.r.wrap.b32 	%r9030, %r9027, %r9028, 19;
	mov.b64 	%rd1343, {%r9030, %r9029};
	shf.l.wrap.b32 	%r9031, %r9027, %r9028, 3;
	shf.l.wrap.b32 	%r9032, %r9028, %r9027, 3;
	mov.b64 	%rd1344, {%r9032, %r9031};
	shr.u64 	%rd1345, %rd3048, 6;
	xor.b64  	%rd1346, %rd1343, %rd1345;
	xor.b64  	%rd1347, %rd1346, %rd1344;
	shr.u64 	%rd1348, %rd3051, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9033,%dummy}, %rd3051;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9034}, %rd3051;
	}
	shf.r.wrap.b32 	%r9035, %r9034, %r9033, 1;
	shf.r.wrap.b32 	%r9036, %r9033, %r9034, 1;
	mov.b64 	%rd1349, {%r9036, %r9035};
	xor.b64  	%rd1350, %rd1349, %rd1348;
	shf.r.wrap.b32 	%r9037, %r9034, %r9033, 8;
	shf.r.wrap.b32 	%r9038, %r9033, %r9034, 8;
	mov.b64 	%rd1351, {%r9038, %r9037};
	xor.b64  	%rd1352, %rd1350, %rd1351;
	add.s64 	%rd1353, %rd3036, %rd3050;
	add.s64 	%rd1354, %rd1353, %rd1347;
	add.s64 	%rd3050, %rd1354, %rd1352;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9039,%dummy}, %rd3049;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9040}, %rd3049;
	}
	shf.r.wrap.b32 	%r9041, %r9040, %r9039, 19;
	shf.r.wrap.b32 	%r9042, %r9039, %r9040, 19;
	mov.b64 	%rd1355, {%r9042, %r9041};
	shf.l.wrap.b32 	%r9043, %r9039, %r9040, 3;
	shf.l.wrap.b32 	%r9044, %r9040, %r9039, 3;
	mov.b64 	%rd1356, {%r9044, %r9043};
	shr.u64 	%rd1357, %rd3049, 6;
	xor.b64  	%rd1358, %rd1355, %rd1357;
	xor.b64  	%rd1359, %rd1358, %rd1356;
	shr.u64 	%rd1360, %rd3052, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9045,%dummy}, %rd3052;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9046}, %rd3052;
	}
	shf.r.wrap.b32 	%r9047, %r9046, %r9045, 1;
	shf.r.wrap.b32 	%r9048, %r9045, %r9046, 1;
	mov.b64 	%rd1361, {%r9048, %r9047};
	xor.b64  	%rd1362, %rd1361, %rd1360;
	shf.r.wrap.b32 	%r9049, %r9046, %r9045, 8;
	shf.r.wrap.b32 	%r9050, %r9045, %r9046, 8;
	mov.b64 	%rd1363, {%r9050, %r9049};
	xor.b64  	%rd1364, %rd1362, %rd1363;
	add.s64 	%rd1365, %rd3035, %rd3051;
	add.s64 	%rd1366, %rd1365, %rd1359;
	add.s64 	%rd3051, %rd1366, %rd1364;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9051,%dummy}, %rd3050;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9052}, %rd3050;
	}
	shf.r.wrap.b32 	%r9053, %r9052, %r9051, 19;
	shf.r.wrap.b32 	%r9054, %r9051, %r9052, 19;
	mov.b64 	%rd1367, {%r9054, %r9053};
	shf.l.wrap.b32 	%r9055, %r9051, %r9052, 3;
	shf.l.wrap.b32 	%r9056, %r9052, %r9051, 3;
	mov.b64 	%rd1368, {%r9056, %r9055};
	shr.u64 	%rd1369, %rd3050, 6;
	xor.b64  	%rd1370, %rd1367, %rd1369;
	xor.b64  	%rd1371, %rd1370, %rd1368;
	shr.u64 	%rd1372, %rd3053, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9057,%dummy}, %rd3053;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9058}, %rd3053;
	}
	shf.r.wrap.b32 	%r9059, %r9058, %r9057, 1;
	shf.r.wrap.b32 	%r9060, %r9057, %r9058, 1;
	mov.b64 	%rd1373, {%r9060, %r9059};
	xor.b64  	%rd1374, %rd1373, %rd1372;
	shf.r.wrap.b32 	%r9061, %r9058, %r9057, 8;
	shf.r.wrap.b32 	%r9062, %r9057, %r9058, 8;
	mov.b64 	%rd1375, {%r9062, %r9061};
	xor.b64  	%rd1376, %rd1374, %rd1375;
	add.s64 	%rd1377, %rd3034, %rd3052;
	add.s64 	%rd1378, %rd1377, %rd1371;
	add.s64 	%rd3052, %rd1378, %rd1376;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9063,%dummy}, %rd3051;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9064}, %rd3051;
	}
	shf.r.wrap.b32 	%r9065, %r9064, %r9063, 19;
	shf.r.wrap.b32 	%r9066, %r9063, %r9064, 19;
	mov.b64 	%rd1379, {%r9066, %r9065};
	shf.l.wrap.b32 	%r9067, %r9063, %r9064, 3;
	shf.l.wrap.b32 	%r9068, %r9064, %r9063, 3;
	mov.b64 	%rd1380, {%r9068, %r9067};
	shr.u64 	%rd1381, %rd3051, 6;
	xor.b64  	%rd1382, %rd1379, %rd1381;
	xor.b64  	%rd1383, %rd1382, %rd1380;
	shr.u64 	%rd1384, %rd3054, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9069,%dummy}, %rd3054;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9070}, %rd3054;
	}
	shf.r.wrap.b32 	%r9071, %r9070, %r9069, 1;
	shf.r.wrap.b32 	%r9072, %r9069, %r9070, 1;
	mov.b64 	%rd1385, {%r9072, %r9071};
	xor.b64  	%rd1386, %rd1385, %rd1384;
	shf.r.wrap.b32 	%r9073, %r9070, %r9069, 8;
	shf.r.wrap.b32 	%r9074, %r9069, %r9070, 8;
	mov.b64 	%rd1387, {%r9074, %r9073};
	xor.b64  	%rd1388, %rd1386, %rd1387;
	add.s64 	%rd1389, %rd3033, %rd3053;
	add.s64 	%rd1390, %rd1389, %rd1383;
	add.s64 	%rd3053, %rd1390, %rd1388;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9075,%dummy}, %rd3052;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9076}, %rd3052;
	}
	shf.r.wrap.b32 	%r9077, %r9076, %r9075, 19;
	shf.r.wrap.b32 	%r9078, %r9075, %r9076, 19;
	mov.b64 	%rd1391, {%r9078, %r9077};
	shf.l.wrap.b32 	%r9079, %r9075, %r9076, 3;
	shf.l.wrap.b32 	%r9080, %r9076, %r9075, 3;
	mov.b64 	%rd1392, {%r9080, %r9079};
	shr.u64 	%rd1393, %rd3052, 6;
	xor.b64  	%rd1394, %rd1391, %rd1393;
	xor.b64  	%rd1395, %rd1394, %rd1392;
	shr.u64 	%rd1396, %rd3055, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9081,%dummy}, %rd3055;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9082}, %rd3055;
	}
	shf.r.wrap.b32 	%r9083, %r9082, %r9081, 1;
	shf.r.wrap.b32 	%r9084, %r9081, %r9082, 1;
	mov.b64 	%rd1397, {%r9084, %r9083};
	xor.b64  	%rd1398, %rd1397, %rd1396;
	shf.r.wrap.b32 	%r9085, %r9082, %r9081, 8;
	shf.r.wrap.b32 	%r9086, %r9081, %r9082, 8;
	mov.b64 	%rd1399, {%r9086, %r9085};
	xor.b64  	%rd1400, %rd1398, %rd1399;
	add.s64 	%rd1401, %rd3032, %rd3054;
	add.s64 	%rd1402, %rd1401, %rd1395;
	add.s64 	%rd3054, %rd1402, %rd1400;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9087,%dummy}, %rd3053;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9088}, %rd3053;
	}
	shf.r.wrap.b32 	%r9089, %r9088, %r9087, 19;
	shf.r.wrap.b32 	%r9090, %r9087, %r9088, 19;
	mov.b64 	%rd1403, {%r9090, %r9089};
	shf.l.wrap.b32 	%r9091, %r9087, %r9088, 3;
	shf.l.wrap.b32 	%r9092, %r9088, %r9087, 3;
	mov.b64 	%rd1404, {%r9092, %r9091};
	shr.u64 	%rd1405, %rd3053, 6;
	xor.b64  	%rd1406, %rd1403, %rd1405;
	xor.b64  	%rd1407, %rd1406, %rd1404;
	shr.u64 	%rd1408, %rd3039, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9093,%dummy}, %rd3039;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9094}, %rd3039;
	}
	shf.r.wrap.b32 	%r9095, %r9094, %r9093, 1;
	shf.r.wrap.b32 	%r9096, %r9093, %r9094, 1;
	mov.b64 	%rd1409, {%r9096, %r9095};
	xor.b64  	%rd1410, %rd1409, %rd1408;
	shf.r.wrap.b32 	%r9097, %r9094, %r9093, 8;
	shf.r.wrap.b32 	%r9098, %r9093, %r9094, 8;
	mov.b64 	%rd1411, {%r9098, %r9097};
	xor.b64  	%rd1412, %rd1410, %rd1411;
	add.s64 	%rd1413, %rd3048, %rd3055;
	add.s64 	%rd1414, %rd1413, %rd1407;
	add.s64 	%rd3055, %rd1414, %rd1412;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9099,%dummy}, %rd3054;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9100}, %rd3054;
	}
	shf.r.wrap.b32 	%r9101, %r9100, %r9099, 19;
	shf.r.wrap.b32 	%r9102, %r9099, %r9100, 19;
	mov.b64 	%rd1415, {%r9102, %r9101};
	shf.l.wrap.b32 	%r9103, %r9099, %r9100, 3;
	shf.l.wrap.b32 	%r9104, %r9100, %r9099, 3;
	mov.b64 	%rd1416, {%r9104, %r9103};
	shr.u64 	%rd1417, %rd3054, 6;
	xor.b64  	%rd1418, %rd1415, %rd1417;
	xor.b64  	%rd1419, %rd1418, %rd1416;
	shr.u64 	%rd1420, %rd3038, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9105,%dummy}, %rd3038;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9106}, %rd3038;
	}
	shf.r.wrap.b32 	%r9107, %r9106, %r9105, 1;
	shf.r.wrap.b32 	%r9108, %r9105, %r9106, 1;
	mov.b64 	%rd1421, {%r9108, %r9107};
	xor.b64  	%rd1422, %rd1421, %rd1420;
	shf.r.wrap.b32 	%r9109, %r9106, %r9105, 8;
	shf.r.wrap.b32 	%r9110, %r9105, %r9106, 8;
	mov.b64 	%rd1423, {%r9110, %r9109};
	xor.b64  	%rd1424, %rd1422, %rd1423;
	add.s64 	%rd1425, %rd3049, %rd3039;
	add.s64 	%rd1426, %rd1425, %rd1419;
	add.s64 	%rd3039, %rd1426, %rd1424;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9111,%dummy}, %rd3055;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9112}, %rd3055;
	}
	shf.r.wrap.b32 	%r9113, %r9112, %r9111, 19;
	shf.r.wrap.b32 	%r9114, %r9111, %r9112, 19;
	mov.b64 	%rd1427, {%r9114, %r9113};
	shf.l.wrap.b32 	%r9115, %r9111, %r9112, 3;
	shf.l.wrap.b32 	%r9116, %r9112, %r9111, 3;
	mov.b64 	%rd1428, {%r9116, %r9115};
	shr.u64 	%rd1429, %rd3055, 6;
	xor.b64  	%rd1430, %rd1427, %rd1429;
	xor.b64  	%rd1431, %rd1430, %rd1428;
	shr.u64 	%rd1432, %rd3037, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9117,%dummy}, %rd3037;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9118}, %rd3037;
	}
	shf.r.wrap.b32 	%r9119, %r9118, %r9117, 1;
	shf.r.wrap.b32 	%r9120, %r9117, %r9118, 1;
	mov.b64 	%rd1433, {%r9120, %r9119};
	xor.b64  	%rd1434, %rd1433, %rd1432;
	shf.r.wrap.b32 	%r9121, %r9118, %r9117, 8;
	shf.r.wrap.b32 	%r9122, %r9117, %r9118, 8;
	mov.b64 	%rd1435, {%r9122, %r9121};
	xor.b64  	%rd1436, %rd1434, %rd1435;
	add.s64 	%rd1437, %rd3050, %rd3038;
	add.s64 	%rd1438, %rd1437, %rd1431;
	add.s64 	%rd3038, %rd1438, %rd1436;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9123,%dummy}, %rd3039;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9124}, %rd3039;
	}
	shf.r.wrap.b32 	%r9125, %r9124, %r9123, 19;
	shf.r.wrap.b32 	%r9126, %r9123, %r9124, 19;
	mov.b64 	%rd1439, {%r9126, %r9125};
	shf.l.wrap.b32 	%r9127, %r9123, %r9124, 3;
	shf.l.wrap.b32 	%r9128, %r9124, %r9123, 3;
	mov.b64 	%rd1440, {%r9128, %r9127};
	shr.u64 	%rd1441, %rd3039, 6;
	xor.b64  	%rd1442, %rd1439, %rd1441;
	xor.b64  	%rd1443, %rd1442, %rd1440;
	shr.u64 	%rd1444, %rd3036, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9129,%dummy}, %rd3036;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9130}, %rd3036;
	}
	shf.r.wrap.b32 	%r9131, %r9130, %r9129, 1;
	shf.r.wrap.b32 	%r9132, %r9129, %r9130, 1;
	mov.b64 	%rd1445, {%r9132, %r9131};
	xor.b64  	%rd1446, %rd1445, %rd1444;
	shf.r.wrap.b32 	%r9133, %r9130, %r9129, 8;
	shf.r.wrap.b32 	%r9134, %r9129, %r9130, 8;
	mov.b64 	%rd1447, {%r9134, %r9133};
	xor.b64  	%rd1448, %rd1446, %rd1447;
	add.s64 	%rd1449, %rd3051, %rd3037;
	add.s64 	%rd1450, %rd1449, %rd1443;
	add.s64 	%rd3037, %rd1450, %rd1448;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9135,%dummy}, %rd3038;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9136}, %rd3038;
	}
	shf.r.wrap.b32 	%r9137, %r9136, %r9135, 19;
	shf.r.wrap.b32 	%r9138, %r9135, %r9136, 19;
	mov.b64 	%rd1451, {%r9138, %r9137};
	shf.l.wrap.b32 	%r9139, %r9135, %r9136, 3;
	shf.l.wrap.b32 	%r9140, %r9136, %r9135, 3;
	mov.b64 	%rd1452, {%r9140, %r9139};
	shr.u64 	%rd1453, %rd3038, 6;
	xor.b64  	%rd1454, %rd1451, %rd1453;
	xor.b64  	%rd1455, %rd1454, %rd1452;
	shr.u64 	%rd1456, %rd3035, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9141,%dummy}, %rd3035;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9142}, %rd3035;
	}
	shf.r.wrap.b32 	%r9143, %r9142, %r9141, 1;
	shf.r.wrap.b32 	%r9144, %r9141, %r9142, 1;
	mov.b64 	%rd1457, {%r9144, %r9143};
	xor.b64  	%rd1458, %rd1457, %rd1456;
	shf.r.wrap.b32 	%r9145, %r9142, %r9141, 8;
	shf.r.wrap.b32 	%r9146, %r9141, %r9142, 8;
	mov.b64 	%rd1459, {%r9146, %r9145};
	xor.b64  	%rd1460, %rd1458, %rd1459;
	add.s64 	%rd1461, %rd3052, %rd3036;
	add.s64 	%rd1462, %rd1461, %rd1455;
	add.s64 	%rd3036, %rd1462, %rd1460;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9147,%dummy}, %rd3037;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9148}, %rd3037;
	}
	shf.r.wrap.b32 	%r9149, %r9148, %r9147, 19;
	shf.r.wrap.b32 	%r9150, %r9147, %r9148, 19;
	mov.b64 	%rd1463, {%r9150, %r9149};
	shf.l.wrap.b32 	%r9151, %r9147, %r9148, 3;
	shf.l.wrap.b32 	%r9152, %r9148, %r9147, 3;
	mov.b64 	%rd1464, {%r9152, %r9151};
	shr.u64 	%rd1465, %rd3037, 6;
	xor.b64  	%rd1466, %rd1463, %rd1465;
	xor.b64  	%rd1467, %rd1466, %rd1464;
	shr.u64 	%rd1468, %rd3034, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9153,%dummy}, %rd3034;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9154}, %rd3034;
	}
	shf.r.wrap.b32 	%r9155, %r9154, %r9153, 1;
	shf.r.wrap.b32 	%r9156, %r9153, %r9154, 1;
	mov.b64 	%rd1469, {%r9156, %r9155};
	xor.b64  	%rd1470, %rd1469, %rd1468;
	shf.r.wrap.b32 	%r9157, %r9154, %r9153, 8;
	shf.r.wrap.b32 	%r9158, %r9153, %r9154, 8;
	mov.b64 	%rd1471, {%r9158, %r9157};
	xor.b64  	%rd1472, %rd1470, %rd1471;
	add.s64 	%rd1473, %rd3053, %rd3035;
	add.s64 	%rd1474, %rd1473, %rd1467;
	add.s64 	%rd3035, %rd1474, %rd1472;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9159,%dummy}, %rd3036;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9160}, %rd3036;
	}
	shf.r.wrap.b32 	%r9161, %r9160, %r9159, 19;
	shf.r.wrap.b32 	%r9162, %r9159, %r9160, 19;
	mov.b64 	%rd1475, {%r9162, %r9161};
	shf.l.wrap.b32 	%r9163, %r9159, %r9160, 3;
	shf.l.wrap.b32 	%r9164, %r9160, %r9159, 3;
	mov.b64 	%rd1476, {%r9164, %r9163};
	shr.u64 	%rd1477, %rd3036, 6;
	xor.b64  	%rd1478, %rd1475, %rd1477;
	xor.b64  	%rd1479, %rd1478, %rd1476;
	shr.u64 	%rd1480, %rd3033, 7;
	shf.r.wrap.b32 	%r9165, %r9004, %r9003, 1;
	shf.r.wrap.b32 	%r9166, %r9003, %r9004, 1;
	mov.b64 	%rd1481, {%r9166, %r9165};
	xor.b64  	%rd1482, %rd1481, %rd1480;
	shf.r.wrap.b32 	%r9167, %r9004, %r9003, 8;
	shf.r.wrap.b32 	%r9168, %r9003, %r9004, 8;
	mov.b64 	%rd1483, {%r9168, %r9167};
	xor.b64  	%rd1484, %rd1482, %rd1483;
	add.s64 	%rd1485, %rd3054, %rd3034;
	add.s64 	%rd1486, %rd1485, %rd1479;
	add.s64 	%rd3034, %rd1486, %rd1484;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9169,%dummy}, %rd3035;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9170}, %rd3035;
	}
	shf.r.wrap.b32 	%r9171, %r9170, %r9169, 19;
	shf.r.wrap.b32 	%r9172, %r9169, %r9170, 19;
	mov.b64 	%rd1487, {%r9172, %r9171};
	shf.l.wrap.b32 	%r9173, %r9169, %r9170, 3;
	shf.l.wrap.b32 	%r9174, %r9170, %r9169, 3;
	mov.b64 	%rd1488, {%r9174, %r9173};
	shr.u64 	%rd1489, %rd3035, 6;
	xor.b64  	%rd1490, %rd1487, %rd1489;
	xor.b64  	%rd1491, %rd1490, %rd1488;
	shr.u64 	%rd1492, %rd3032, 7;
	shf.r.wrap.b32 	%r9175, %r9016, %r9015, 1;
	shf.r.wrap.b32 	%r9176, %r9015, %r9016, 1;
	mov.b64 	%rd1493, {%r9176, %r9175};
	xor.b64  	%rd1494, %rd1493, %rd1492;
	shf.r.wrap.b32 	%r9177, %r9016, %r9015, 8;
	shf.r.wrap.b32 	%r9178, %r9015, %r9016, 8;
	mov.b64 	%rd1495, {%r9178, %r9177};
	xor.b64  	%rd1496, %rd1494, %rd1495;
	add.s64 	%rd1497, %rd3055, %rd3033;
	add.s64 	%rd1498, %rd1497, %rd1491;
	add.s64 	%rd3033, %rd1498, %rd1496;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9179,%dummy}, %rd3034;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9180}, %rd3034;
	}
	shf.r.wrap.b32 	%r9181, %r9180, %r9179, 19;
	shf.r.wrap.b32 	%r9182, %r9179, %r9180, 19;
	mov.b64 	%rd1499, {%r9182, %r9181};
	shf.l.wrap.b32 	%r9183, %r9179, %r9180, 3;
	shf.l.wrap.b32 	%r9184, %r9180, %r9179, 3;
	mov.b64 	%rd1500, {%r9184, %r9183};
	shr.u64 	%rd1501, %rd3034, 6;
	xor.b64  	%rd1502, %rd1499, %rd1501;
	xor.b64  	%rd1503, %rd1502, %rd1500;
	shf.r.wrap.b32 	%r9185, %r9028, %r9027, 1;
	shf.r.wrap.b32 	%r9186, %r9027, %r9028, 1;
	mov.b64 	%rd1504, {%r9186, %r9185};
	shf.r.wrap.b32 	%r9187, %r9028, %r9027, 8;
	shf.r.wrap.b32 	%r9188, %r9027, %r9028, 8;
	mov.b64 	%rd1505, {%r9188, %r9187};
	shr.u64 	%rd1506, %rd3048, 7;
	xor.b64  	%rd1507, %rd1504, %rd1506;
	xor.b64  	%rd1508, %rd1507, %rd1505;
	add.s64 	%rd1509, %rd3039, %rd3032;
	add.s64 	%rd1510, %rd1509, %rd1503;
	add.s64 	%rd3032, %rd1510, %rd1508;
	mul.wide.s32 	%rd1511, %r16282, 8;
	mov.u64 	%rd1512, k_sha512;
	add.s64 	%rd1513, %rd1512, %rd1511;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9189,%dummy}, %rd3044;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9190}, %rd3044;
	}
	shf.r.wrap.b32 	%r9191, %r9190, %r9189, 18;
	shf.r.wrap.b32 	%r9192, %r9189, %r9190, 18;
	mov.b64 	%rd1514, {%r9192, %r9191};
	shf.r.wrap.b32 	%r9193, %r9190, %r9189, 14;
	shf.r.wrap.b32 	%r9194, %r9189, %r9190, 14;
	mov.b64 	%rd1515, {%r9194, %r9193};
	xor.b64  	%rd1516, %rd1514, %rd1515;
	shf.l.wrap.b32 	%r9195, %r9189, %r9190, 23;
	shf.l.wrap.b32 	%r9196, %r9190, %r9189, 23;
	mov.b64 	%rd1517, {%r9196, %r9195};
	xor.b64  	%rd1518, %rd1516, %rd1517;
	xor.b64  	%rd1519, %rd3045, %rd3046;
	and.b64  	%rd1520, %rd1519, %rd3044;
	xor.b64  	%rd1521, %rd1520, %rd3046;
	add.s64 	%rd1522, %rd1521, %rd3047;
	add.s64 	%rd1523, %rd1522, %rd3048;
	ld.const.u64 	%rd1524, [%rd1513];
	add.s64 	%rd1525, %rd1523, %rd1524;
	add.s64 	%rd1526, %rd1525, %rd1518;
	add.s64 	%rd1527, %rd1526, %rd3043;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9197}, %rd3040;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9198,%dummy}, %rd3040;
	}
	shf.l.wrap.b32 	%r9199, %r9198, %r9197, 30;
	shf.l.wrap.b32 	%r9200, %r9197, %r9198, 30;
	mov.b64 	%rd1528, {%r9200, %r9199};
	shf.r.wrap.b32 	%r9201, %r9197, %r9198, 28;
	shf.r.wrap.b32 	%r9202, %r9198, %r9197, 28;
	mov.b64 	%rd1529, {%r9202, %r9201};
	xor.b64  	%rd1530, %rd1528, %rd1529;
	shf.l.wrap.b32 	%r9203, %r9198, %r9197, 25;
	shf.l.wrap.b32 	%r9204, %r9197, %r9198, 25;
	mov.b64 	%rd1531, {%r9204, %r9203};
	xor.b64  	%rd1532, %rd1530, %rd1531;
	xor.b64  	%rd1533, %rd3040, %rd3041;
	xor.b64  	%rd1534, %rd3040, %rd3042;
	and.b64  	%rd1535, %rd1533, %rd1534;
	xor.b64  	%rd1536, %rd1535, %rd3040;
	add.s64 	%rd1537, %rd1526, %rd1536;
	add.s64 	%rd1538, %rd1537, %rd1532;
	add.s32 	%r9205, %r16282, 1;
	mul.wide.s32 	%rd1539, %r9205, 8;
	add.s64 	%rd1540, %rd1512, %rd1539;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9206,%dummy}, %rd1527;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9207}, %rd1527;
	}
	shf.r.wrap.b32 	%r9208, %r9207, %r9206, 14;
	shf.r.wrap.b32 	%r9209, %r9206, %r9207, 14;
	mov.b64 	%rd1541, {%r9209, %r9208};
	shf.r.wrap.b32 	%r9210, %r9207, %r9206, 18;
	shf.r.wrap.b32 	%r9211, %r9206, %r9207, 18;
	mov.b64 	%rd1542, {%r9211, %r9210};
	xor.b64  	%rd1543, %rd1542, %rd1541;
	shf.l.wrap.b32 	%r9212, %r9206, %r9207, 23;
	shf.l.wrap.b32 	%r9213, %r9207, %r9206, 23;
	mov.b64 	%rd1544, {%r9213, %r9212};
	xor.b64  	%rd1545, %rd1543, %rd1544;
	xor.b64  	%rd1546, %rd3044, %rd3045;
	and.b64  	%rd1547, %rd1527, %rd1546;
	xor.b64  	%rd1548, %rd1547, %rd3045;
	add.s64 	%rd1549, %rd3049, %rd3046;
	ld.const.u64 	%rd1550, [%rd1540];
	add.s64 	%rd1551, %rd1549, %rd1550;
	add.s64 	%rd1552, %rd1551, %rd1548;
	add.s64 	%rd1553, %rd1552, %rd1545;
	add.s64 	%rd1554, %rd1553, %rd3042;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9214,%dummy}, %rd1538;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9215}, %rd1538;
	}
	shf.r.wrap.b32 	%r9216, %r9215, %r9214, 28;
	shf.r.wrap.b32 	%r9217, %r9214, %r9215, 28;
	mov.b64 	%rd1555, {%r9217, %r9216};
	shf.l.wrap.b32 	%r9218, %r9214, %r9215, 30;
	shf.l.wrap.b32 	%r9219, %r9215, %r9214, 30;
	mov.b64 	%rd1556, {%r9219, %r9218};
	xor.b64  	%rd1557, %rd1556, %rd1555;
	shf.l.wrap.b32 	%r9220, %r9214, %r9215, 25;
	shf.l.wrap.b32 	%r9221, %r9215, %r9214, 25;
	mov.b64 	%rd1558, {%r9221, %r9220};
	xor.b64  	%rd1559, %rd1557, %rd1558;
	xor.b64  	%rd1560, %rd1538, %rd3041;
	xor.b64  	%rd1561, %rd1538, %rd3040;
	and.b64  	%rd1562, %rd1561, %rd1560;
	xor.b64  	%rd1563, %rd1562, %rd1538;
	add.s64 	%rd1564, %rd1553, %rd1563;
	add.s64 	%rd1565, %rd1564, %rd1559;
	add.s32 	%r9222, %r16282, 2;
	mul.wide.s32 	%rd1566, %r9222, 8;
	add.s64 	%rd1567, %rd1512, %rd1566;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9223,%dummy}, %rd1554;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9224}, %rd1554;
	}
	shf.r.wrap.b32 	%r9225, %r9224, %r9223, 14;
	shf.r.wrap.b32 	%r9226, %r9223, %r9224, 14;
	mov.b64 	%rd1568, {%r9226, %r9225};
	shf.r.wrap.b32 	%r9227, %r9224, %r9223, 18;
	shf.r.wrap.b32 	%r9228, %r9223, %r9224, 18;
	mov.b64 	%rd1569, {%r9228, %r9227};
	xor.b64  	%rd1570, %rd1569, %rd1568;
	shf.l.wrap.b32 	%r9229, %r9223, %r9224, 23;
	shf.l.wrap.b32 	%r9230, %r9224, %r9223, 23;
	mov.b64 	%rd1571, {%r9230, %r9229};
	xor.b64  	%rd1572, %rd1570, %rd1571;
	xor.b64  	%rd1573, %rd1527, %rd3044;
	and.b64  	%rd1574, %rd1554, %rd1573;
	xor.b64  	%rd1575, %rd1574, %rd3044;
	add.s64 	%rd1576, %rd3050, %rd3045;
	ld.const.u64 	%rd1577, [%rd1567];
	add.s64 	%rd1578, %rd1576, %rd1577;
	add.s64 	%rd1579, %rd1578, %rd1575;
	add.s64 	%rd1580, %rd1579, %rd1572;
	add.s64 	%rd1581, %rd1580, %rd3041;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9231,%dummy}, %rd1565;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9232}, %rd1565;
	}
	shf.r.wrap.b32 	%r9233, %r9232, %r9231, 28;
	shf.r.wrap.b32 	%r9234, %r9231, %r9232, 28;
	mov.b64 	%rd1582, {%r9234, %r9233};
	shf.l.wrap.b32 	%r9235, %r9231, %r9232, 30;
	shf.l.wrap.b32 	%r9236, %r9232, %r9231, 30;
	mov.b64 	%rd1583, {%r9236, %r9235};
	xor.b64  	%rd1584, %rd1583, %rd1582;
	shf.l.wrap.b32 	%r9237, %r9231, %r9232, 25;
	shf.l.wrap.b32 	%r9238, %r9232, %r9231, 25;
	mov.b64 	%rd1585, {%r9238, %r9237};
	xor.b64  	%rd1586, %rd1584, %rd1585;
	xor.b64  	%rd1587, %rd1565, %rd3040;
	xor.b64  	%rd1588, %rd1565, %rd1538;
	and.b64  	%rd1589, %rd1588, %rd1587;
	xor.b64  	%rd1590, %rd1589, %rd1565;
	add.s64 	%rd1591, %rd1580, %rd1590;
	add.s64 	%rd1592, %rd1591, %rd1586;
	add.s32 	%r9239, %r16282, 3;
	mul.wide.s32 	%rd1593, %r9239, 8;
	add.s64 	%rd1594, %rd1512, %rd1593;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9240,%dummy}, %rd1581;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9241}, %rd1581;
	}
	shf.r.wrap.b32 	%r9242, %r9241, %r9240, 14;
	shf.r.wrap.b32 	%r9243, %r9240, %r9241, 14;
	mov.b64 	%rd1595, {%r9243, %r9242};
	shf.r.wrap.b32 	%r9244, %r9241, %r9240, 18;
	shf.r.wrap.b32 	%r9245, %r9240, %r9241, 18;
	mov.b64 	%rd1596, {%r9245, %r9244};
	xor.b64  	%rd1597, %rd1596, %rd1595;
	shf.l.wrap.b32 	%r9246, %r9240, %r9241, 23;
	shf.l.wrap.b32 	%r9247, %r9241, %r9240, 23;
	mov.b64 	%rd1598, {%r9247, %r9246};
	xor.b64  	%rd1599, %rd1597, %rd1598;
	xor.b64  	%rd1600, %rd1554, %rd1527;
	and.b64  	%rd1601, %rd1581, %rd1600;
	xor.b64  	%rd1602, %rd1601, %rd1527;
	add.s64 	%rd1603, %rd3051, %rd3044;
	ld.const.u64 	%rd1604, [%rd1594];
	add.s64 	%rd1605, %rd1603, %rd1604;
	add.s64 	%rd1606, %rd1605, %rd1602;
	add.s64 	%rd1607, %rd1606, %rd1599;
	add.s64 	%rd1608, %rd1607, %rd3040;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9248,%dummy}, %rd1592;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9249}, %rd1592;
	}
	shf.r.wrap.b32 	%r9250, %r9249, %r9248, 28;
	shf.r.wrap.b32 	%r9251, %r9248, %r9249, 28;
	mov.b64 	%rd1609, {%r9251, %r9250};
	shf.l.wrap.b32 	%r9252, %r9248, %r9249, 30;
	shf.l.wrap.b32 	%r9253, %r9249, %r9248, 30;
	mov.b64 	%rd1610, {%r9253, %r9252};
	xor.b64  	%rd1611, %rd1610, %rd1609;
	shf.l.wrap.b32 	%r9254, %r9248, %r9249, 25;
	shf.l.wrap.b32 	%r9255, %r9249, %r9248, 25;
	mov.b64 	%rd1612, {%r9255, %r9254};
	xor.b64  	%rd1613, %rd1611, %rd1612;
	xor.b64  	%rd1614, %rd1592, %rd1538;
	xor.b64  	%rd1615, %rd1592, %rd1565;
	and.b64  	%rd1616, %rd1615, %rd1614;
	xor.b64  	%rd1617, %rd1616, %rd1592;
	add.s64 	%rd1618, %rd1607, %rd1617;
	add.s64 	%rd1619, %rd1618, %rd1613;
	add.s32 	%r9256, %r16282, 4;
	mul.wide.s32 	%rd1620, %r9256, 8;
	add.s64 	%rd1621, %rd1512, %rd1620;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9257,%dummy}, %rd1608;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9258}, %rd1608;
	}
	shf.r.wrap.b32 	%r9259, %r9258, %r9257, 14;
	shf.r.wrap.b32 	%r9260, %r9257, %r9258, 14;
	mov.b64 	%rd1622, {%r9260, %r9259};
	shf.r.wrap.b32 	%r9261, %r9258, %r9257, 18;
	shf.r.wrap.b32 	%r9262, %r9257, %r9258, 18;
	mov.b64 	%rd1623, {%r9262, %r9261};
	xor.b64  	%rd1624, %rd1623, %rd1622;
	shf.l.wrap.b32 	%r9263, %r9257, %r9258, 23;
	shf.l.wrap.b32 	%r9264, %r9258, %r9257, 23;
	mov.b64 	%rd1625, {%r9264, %r9263};
	xor.b64  	%rd1626, %rd1624, %rd1625;
	xor.b64  	%rd1627, %rd1581, %rd1554;
	and.b64  	%rd1628, %rd1608, %rd1627;
	xor.b64  	%rd1629, %rd1628, %rd1554;
	add.s64 	%rd1630, %rd1527, %rd3052;
	ld.const.u64 	%rd1631, [%rd1621];
	add.s64 	%rd1632, %rd1630, %rd1631;
	add.s64 	%rd1633, %rd1632, %rd1629;
	add.s64 	%rd1634, %rd1633, %rd1626;
	add.s64 	%rd1635, %rd1634, %rd1538;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9265,%dummy}, %rd1619;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9266}, %rd1619;
	}
	shf.r.wrap.b32 	%r9267, %r9266, %r9265, 28;
	shf.r.wrap.b32 	%r9268, %r9265, %r9266, 28;
	mov.b64 	%rd1636, {%r9268, %r9267};
	shf.l.wrap.b32 	%r9269, %r9265, %r9266, 30;
	shf.l.wrap.b32 	%r9270, %r9266, %r9265, 30;
	mov.b64 	%rd1637, {%r9270, %r9269};
	xor.b64  	%rd1638, %rd1637, %rd1636;
	shf.l.wrap.b32 	%r9271, %r9265, %r9266, 25;
	shf.l.wrap.b32 	%r9272, %r9266, %r9265, 25;
	mov.b64 	%rd1639, {%r9272, %r9271};
	xor.b64  	%rd1640, %rd1638, %rd1639;
	xor.b64  	%rd1641, %rd1619, %rd1565;
	xor.b64  	%rd1642, %rd1619, %rd1592;
	and.b64  	%rd1643, %rd1642, %rd1641;
	xor.b64  	%rd1644, %rd1643, %rd1619;
	add.s64 	%rd1645, %rd1634, %rd1644;
	add.s64 	%rd1646, %rd1645, %rd1640;
	add.s32 	%r9273, %r16282, 5;
	mul.wide.s32 	%rd1647, %r9273, 8;
	add.s64 	%rd1648, %rd1512, %rd1647;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9274,%dummy}, %rd1635;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9275}, %rd1635;
	}
	shf.r.wrap.b32 	%r9276, %r9275, %r9274, 14;
	shf.r.wrap.b32 	%r9277, %r9274, %r9275, 14;
	mov.b64 	%rd1649, {%r9277, %r9276};
	shf.r.wrap.b32 	%r9278, %r9275, %r9274, 18;
	shf.r.wrap.b32 	%r9279, %r9274, %r9275, 18;
	mov.b64 	%rd1650, {%r9279, %r9278};
	xor.b64  	%rd1651, %rd1650, %rd1649;
	shf.l.wrap.b32 	%r9280, %r9274, %r9275, 23;
	shf.l.wrap.b32 	%r9281, %r9275, %r9274, 23;
	mov.b64 	%rd1652, {%r9281, %r9280};
	xor.b64  	%rd1653, %rd1651, %rd1652;
	xor.b64  	%rd1654, %rd1608, %rd1581;
	and.b64  	%rd1655, %rd1635, %rd1654;
	xor.b64  	%rd1656, %rd1655, %rd1581;
	add.s64 	%rd1657, %rd1554, %rd3053;
	ld.const.u64 	%rd1658, [%rd1648];
	add.s64 	%rd1659, %rd1657, %rd1658;
	add.s64 	%rd1660, %rd1659, %rd1656;
	add.s64 	%rd1661, %rd1660, %rd1653;
	add.s64 	%rd1662, %rd1661, %rd1565;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9282,%dummy}, %rd1646;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9283}, %rd1646;
	}
	shf.r.wrap.b32 	%r9284, %r9283, %r9282, 28;
	shf.r.wrap.b32 	%r9285, %r9282, %r9283, 28;
	mov.b64 	%rd1663, {%r9285, %r9284};
	shf.l.wrap.b32 	%r9286, %r9282, %r9283, 30;
	shf.l.wrap.b32 	%r9287, %r9283, %r9282, 30;
	mov.b64 	%rd1664, {%r9287, %r9286};
	xor.b64  	%rd1665, %rd1664, %rd1663;
	shf.l.wrap.b32 	%r9288, %r9282, %r9283, 25;
	shf.l.wrap.b32 	%r9289, %r9283, %r9282, 25;
	mov.b64 	%rd1666, {%r9289, %r9288};
	xor.b64  	%rd1667, %rd1665, %rd1666;
	xor.b64  	%rd1668, %rd1646, %rd1592;
	xor.b64  	%rd1669, %rd1646, %rd1619;
	and.b64  	%rd1670, %rd1669, %rd1668;
	xor.b64  	%rd1671, %rd1670, %rd1646;
	add.s64 	%rd1672, %rd1661, %rd1671;
	add.s64 	%rd1673, %rd1672, %rd1667;
	add.s32 	%r9290, %r16282, 6;
	mul.wide.s32 	%rd1674, %r9290, 8;
	add.s64 	%rd1675, %rd1512, %rd1674;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9291,%dummy}, %rd1662;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9292}, %rd1662;
	}
	shf.r.wrap.b32 	%r9293, %r9292, %r9291, 14;
	shf.r.wrap.b32 	%r9294, %r9291, %r9292, 14;
	mov.b64 	%rd1676, {%r9294, %r9293};
	shf.r.wrap.b32 	%r9295, %r9292, %r9291, 18;
	shf.r.wrap.b32 	%r9296, %r9291, %r9292, 18;
	mov.b64 	%rd1677, {%r9296, %r9295};
	xor.b64  	%rd1678, %rd1677, %rd1676;
	shf.l.wrap.b32 	%r9297, %r9291, %r9292, 23;
	shf.l.wrap.b32 	%r9298, %r9292, %r9291, 23;
	mov.b64 	%rd1679, {%r9298, %r9297};
	xor.b64  	%rd1680, %rd1678, %rd1679;
	xor.b64  	%rd1681, %rd1635, %rd1608;
	and.b64  	%rd1682, %rd1662, %rd1681;
	xor.b64  	%rd1683, %rd1682, %rd1608;
	add.s64 	%rd1684, %rd1581, %rd3054;
	ld.const.u64 	%rd1685, [%rd1675];
	add.s64 	%rd1686, %rd1684, %rd1685;
	add.s64 	%rd1687, %rd1686, %rd1683;
	add.s64 	%rd1688, %rd1687, %rd1680;
	add.s64 	%rd1689, %rd1688, %rd1592;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9299,%dummy}, %rd1673;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9300}, %rd1673;
	}
	shf.r.wrap.b32 	%r9301, %r9300, %r9299, 28;
	shf.r.wrap.b32 	%r9302, %r9299, %r9300, 28;
	mov.b64 	%rd1690, {%r9302, %r9301};
	shf.l.wrap.b32 	%r9303, %r9299, %r9300, 30;
	shf.l.wrap.b32 	%r9304, %r9300, %r9299, 30;
	mov.b64 	%rd1691, {%r9304, %r9303};
	xor.b64  	%rd1692, %rd1691, %rd1690;
	shf.l.wrap.b32 	%r9305, %r9299, %r9300, 25;
	shf.l.wrap.b32 	%r9306, %r9300, %r9299, 25;
	mov.b64 	%rd1693, {%r9306, %r9305};
	xor.b64  	%rd1694, %rd1692, %rd1693;
	xor.b64  	%rd1695, %rd1673, %rd1619;
	xor.b64  	%rd1696, %rd1673, %rd1646;
	and.b64  	%rd1697, %rd1696, %rd1695;
	xor.b64  	%rd1698, %rd1697, %rd1673;
	add.s64 	%rd1699, %rd1688, %rd1698;
	add.s64 	%rd1700, %rd1699, %rd1694;
	add.s32 	%r9307, %r16282, 7;
	mul.wide.s32 	%rd1701, %r9307, 8;
	add.s64 	%rd1702, %rd1512, %rd1701;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9308,%dummy}, %rd1689;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9309}, %rd1689;
	}
	shf.r.wrap.b32 	%r9310, %r9309, %r9308, 14;
	shf.r.wrap.b32 	%r9311, %r9308, %r9309, 14;
	mov.b64 	%rd1703, {%r9311, %r9310};
	shf.r.wrap.b32 	%r9312, %r9309, %r9308, 18;
	shf.r.wrap.b32 	%r9313, %r9308, %r9309, 18;
	mov.b64 	%rd1704, {%r9313, %r9312};
	xor.b64  	%rd1705, %rd1704, %rd1703;
	shf.l.wrap.b32 	%r9314, %r9308, %r9309, 23;
	shf.l.wrap.b32 	%r9315, %r9309, %r9308, 23;
	mov.b64 	%rd1706, {%r9315, %r9314};
	xor.b64  	%rd1707, %rd1705, %rd1706;
	xor.b64  	%rd1708, %rd1662, %rd1635;
	and.b64  	%rd1709, %rd1689, %rd1708;
	xor.b64  	%rd1710, %rd1709, %rd1635;
	add.s64 	%rd1711, %rd1608, %rd3055;
	ld.const.u64 	%rd1712, [%rd1702];
	add.s64 	%rd1713, %rd1711, %rd1712;
	add.s64 	%rd1714, %rd1713, %rd1710;
	add.s64 	%rd1715, %rd1714, %rd1707;
	add.s64 	%rd1716, %rd1715, %rd1619;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9316,%dummy}, %rd1700;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9317}, %rd1700;
	}
	shf.r.wrap.b32 	%r9318, %r9317, %r9316, 28;
	shf.r.wrap.b32 	%r9319, %r9316, %r9317, 28;
	mov.b64 	%rd1717, {%r9319, %r9318};
	shf.l.wrap.b32 	%r9320, %r9316, %r9317, 30;
	shf.l.wrap.b32 	%r9321, %r9317, %r9316, 30;
	mov.b64 	%rd1718, {%r9321, %r9320};
	xor.b64  	%rd1719, %rd1718, %rd1717;
	shf.l.wrap.b32 	%r9322, %r9316, %r9317, 25;
	shf.l.wrap.b32 	%r9323, %r9317, %r9316, 25;
	mov.b64 	%rd1720, {%r9323, %r9322};
	xor.b64  	%rd1721, %rd1719, %rd1720;
	xor.b64  	%rd1722, %rd1700, %rd1646;
	xor.b64  	%rd1723, %rd1700, %rd1673;
	and.b64  	%rd1724, %rd1723, %rd1722;
	xor.b64  	%rd1725, %rd1724, %rd1700;
	add.s64 	%rd1726, %rd1715, %rd1725;
	add.s64 	%rd1727, %rd1726, %rd1721;
	add.s32 	%r9324, %r16282, 8;
	mul.wide.s32 	%rd1728, %r9324, 8;
	add.s64 	%rd1729, %rd1512, %rd1728;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9325,%dummy}, %rd1716;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9326}, %rd1716;
	}
	shf.r.wrap.b32 	%r9327, %r9326, %r9325, 14;
	shf.r.wrap.b32 	%r9328, %r9325, %r9326, 14;
	mov.b64 	%rd1730, {%r9328, %r9327};
	shf.r.wrap.b32 	%r9329, %r9326, %r9325, 18;
	shf.r.wrap.b32 	%r9330, %r9325, %r9326, 18;
	mov.b64 	%rd1731, {%r9330, %r9329};
	xor.b64  	%rd1732, %rd1731, %rd1730;
	shf.l.wrap.b32 	%r9331, %r9325, %r9326, 23;
	shf.l.wrap.b32 	%r9332, %r9326, %r9325, 23;
	mov.b64 	%rd1733, {%r9332, %r9331};
	xor.b64  	%rd1734, %rd1732, %rd1733;
	xor.b64  	%rd1735, %rd1689, %rd1662;
	and.b64  	%rd1736, %rd1716, %rd1735;
	xor.b64  	%rd1737, %rd1736, %rd1662;
	add.s64 	%rd1738, %rd1635, %rd3039;
	ld.const.u64 	%rd1739, [%rd1729];
	add.s64 	%rd1740, %rd1738, %rd1739;
	add.s64 	%rd1741, %rd1740, %rd1737;
	add.s64 	%rd1742, %rd1741, %rd1734;
	add.s64 	%rd1743, %rd1742, %rd1646;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9333,%dummy}, %rd1727;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9334}, %rd1727;
	}
	shf.r.wrap.b32 	%r9335, %r9334, %r9333, 28;
	shf.r.wrap.b32 	%r9336, %r9333, %r9334, 28;
	mov.b64 	%rd1744, {%r9336, %r9335};
	shf.l.wrap.b32 	%r9337, %r9333, %r9334, 30;
	shf.l.wrap.b32 	%r9338, %r9334, %r9333, 30;
	mov.b64 	%rd1745, {%r9338, %r9337};
	xor.b64  	%rd1746, %rd1745, %rd1744;
	shf.l.wrap.b32 	%r9339, %r9333, %r9334, 25;
	shf.l.wrap.b32 	%r9340, %r9334, %r9333, 25;
	mov.b64 	%rd1747, {%r9340, %r9339};
	xor.b64  	%rd1748, %rd1746, %rd1747;
	xor.b64  	%rd1749, %rd1727, %rd1673;
	xor.b64  	%rd1750, %rd1727, %rd1700;
	and.b64  	%rd1751, %rd1750, %rd1749;
	xor.b64  	%rd1752, %rd1751, %rd1727;
	add.s64 	%rd1753, %rd1742, %rd1752;
	add.s64 	%rd1754, %rd1753, %rd1748;
	add.s32 	%r9341, %r16282, 9;
	mul.wide.s32 	%rd1755, %r9341, 8;
	add.s64 	%rd1756, %rd1512, %rd1755;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9342,%dummy}, %rd1743;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9343}, %rd1743;
	}
	shf.r.wrap.b32 	%r9344, %r9343, %r9342, 14;
	shf.r.wrap.b32 	%r9345, %r9342, %r9343, 14;
	mov.b64 	%rd1757, {%r9345, %r9344};
	shf.r.wrap.b32 	%r9346, %r9343, %r9342, 18;
	shf.r.wrap.b32 	%r9347, %r9342, %r9343, 18;
	mov.b64 	%rd1758, {%r9347, %r9346};
	xor.b64  	%rd1759, %rd1758, %rd1757;
	shf.l.wrap.b32 	%r9348, %r9342, %r9343, 23;
	shf.l.wrap.b32 	%r9349, %r9343, %r9342, 23;
	mov.b64 	%rd1760, {%r9349, %r9348};
	xor.b64  	%rd1761, %rd1759, %rd1760;
	xor.b64  	%rd1762, %rd1716, %rd1689;
	and.b64  	%rd1763, %rd1743, %rd1762;
	xor.b64  	%rd1764, %rd1763, %rd1689;
	add.s64 	%rd1765, %rd1662, %rd3038;
	ld.const.u64 	%rd1766, [%rd1756];
	add.s64 	%rd1767, %rd1765, %rd1766;
	add.s64 	%rd1768, %rd1767, %rd1764;
	add.s64 	%rd1769, %rd1768, %rd1761;
	add.s64 	%rd1770, %rd1769, %rd1673;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9350,%dummy}, %rd1754;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9351}, %rd1754;
	}
	shf.r.wrap.b32 	%r9352, %r9351, %r9350, 28;
	shf.r.wrap.b32 	%r9353, %r9350, %r9351, 28;
	mov.b64 	%rd1771, {%r9353, %r9352};
	shf.l.wrap.b32 	%r9354, %r9350, %r9351, 30;
	shf.l.wrap.b32 	%r9355, %r9351, %r9350, 30;
	mov.b64 	%rd1772, {%r9355, %r9354};
	xor.b64  	%rd1773, %rd1772, %rd1771;
	shf.l.wrap.b32 	%r9356, %r9350, %r9351, 25;
	shf.l.wrap.b32 	%r9357, %r9351, %r9350, 25;
	mov.b64 	%rd1774, {%r9357, %r9356};
	xor.b64  	%rd1775, %rd1773, %rd1774;
	xor.b64  	%rd1776, %rd1754, %rd1700;
	xor.b64  	%rd1777, %rd1754, %rd1727;
	and.b64  	%rd1778, %rd1777, %rd1776;
	xor.b64  	%rd1779, %rd1778, %rd1754;
	add.s64 	%rd1780, %rd1769, %rd1779;
	add.s64 	%rd1781, %rd1780, %rd1775;
	add.s32 	%r9358, %r16282, 10;
	mul.wide.s32 	%rd1782, %r9358, 8;
	add.s64 	%rd1783, %rd1512, %rd1782;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9359,%dummy}, %rd1770;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9360}, %rd1770;
	}
	shf.r.wrap.b32 	%r9361, %r9360, %r9359, 14;
	shf.r.wrap.b32 	%r9362, %r9359, %r9360, 14;
	mov.b64 	%rd1784, {%r9362, %r9361};
	shf.r.wrap.b32 	%r9363, %r9360, %r9359, 18;
	shf.r.wrap.b32 	%r9364, %r9359, %r9360, 18;
	mov.b64 	%rd1785, {%r9364, %r9363};
	xor.b64  	%rd1786, %rd1785, %rd1784;
	shf.l.wrap.b32 	%r9365, %r9359, %r9360, 23;
	shf.l.wrap.b32 	%r9366, %r9360, %r9359, 23;
	mov.b64 	%rd1787, {%r9366, %r9365};
	xor.b64  	%rd1788, %rd1786, %rd1787;
	xor.b64  	%rd1789, %rd1743, %rd1716;
	and.b64  	%rd1790, %rd1770, %rd1789;
	xor.b64  	%rd1791, %rd1790, %rd1716;
	add.s64 	%rd1792, %rd1689, %rd3037;
	ld.const.u64 	%rd1793, [%rd1783];
	add.s64 	%rd1794, %rd1792, %rd1793;
	add.s64 	%rd1795, %rd1794, %rd1791;
	add.s64 	%rd1796, %rd1795, %rd1788;
	add.s64 	%rd1797, %rd1796, %rd1700;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9367,%dummy}, %rd1781;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9368}, %rd1781;
	}
	shf.r.wrap.b32 	%r9369, %r9368, %r9367, 28;
	shf.r.wrap.b32 	%r9370, %r9367, %r9368, 28;
	mov.b64 	%rd1798, {%r9370, %r9369};
	shf.l.wrap.b32 	%r9371, %r9367, %r9368, 30;
	shf.l.wrap.b32 	%r9372, %r9368, %r9367, 30;
	mov.b64 	%rd1799, {%r9372, %r9371};
	xor.b64  	%rd1800, %rd1799, %rd1798;
	shf.l.wrap.b32 	%r9373, %r9367, %r9368, 25;
	shf.l.wrap.b32 	%r9374, %r9368, %r9367, 25;
	mov.b64 	%rd1801, {%r9374, %r9373};
	xor.b64  	%rd1802, %rd1800, %rd1801;
	xor.b64  	%rd1803, %rd1781, %rd1727;
	xor.b64  	%rd1804, %rd1781, %rd1754;
	and.b64  	%rd1805, %rd1804, %rd1803;
	xor.b64  	%rd1806, %rd1805, %rd1781;
	add.s64 	%rd1807, %rd1796, %rd1806;
	add.s64 	%rd1808, %rd1807, %rd1802;
	add.s32 	%r9375, %r16282, 11;
	mul.wide.s32 	%rd1809, %r9375, 8;
	add.s64 	%rd1810, %rd1512, %rd1809;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9376,%dummy}, %rd1797;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9377}, %rd1797;
	}
	shf.r.wrap.b32 	%r9378, %r9377, %r9376, 14;
	shf.r.wrap.b32 	%r9379, %r9376, %r9377, 14;
	mov.b64 	%rd1811, {%r9379, %r9378};
	shf.r.wrap.b32 	%r9380, %r9377, %r9376, 18;
	shf.r.wrap.b32 	%r9381, %r9376, %r9377, 18;
	mov.b64 	%rd1812, {%r9381, %r9380};
	xor.b64  	%rd1813, %rd1812, %rd1811;
	shf.l.wrap.b32 	%r9382, %r9376, %r9377, 23;
	shf.l.wrap.b32 	%r9383, %r9377, %r9376, 23;
	mov.b64 	%rd1814, {%r9383, %r9382};
	xor.b64  	%rd1815, %rd1813, %rd1814;
	xor.b64  	%rd1816, %rd1770, %rd1743;
	and.b64  	%rd1817, %rd1797, %rd1816;
	xor.b64  	%rd1818, %rd1817, %rd1743;
	add.s64 	%rd1819, %rd1716, %rd3036;
	ld.const.u64 	%rd1820, [%rd1810];
	add.s64 	%rd1821, %rd1819, %rd1820;
	add.s64 	%rd1822, %rd1821, %rd1818;
	add.s64 	%rd1823, %rd1822, %rd1815;
	add.s64 	%rd1824, %rd1823, %rd1727;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9384,%dummy}, %rd1808;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9385}, %rd1808;
	}
	shf.r.wrap.b32 	%r9386, %r9385, %r9384, 28;
	shf.r.wrap.b32 	%r9387, %r9384, %r9385, 28;
	mov.b64 	%rd1825, {%r9387, %r9386};
	shf.l.wrap.b32 	%r9388, %r9384, %r9385, 30;
	shf.l.wrap.b32 	%r9389, %r9385, %r9384, 30;
	mov.b64 	%rd1826, {%r9389, %r9388};
	xor.b64  	%rd1827, %rd1826, %rd1825;
	shf.l.wrap.b32 	%r9390, %r9384, %r9385, 25;
	shf.l.wrap.b32 	%r9391, %r9385, %r9384, 25;
	mov.b64 	%rd1828, {%r9391, %r9390};
	xor.b64  	%rd1829, %rd1827, %rd1828;
	xor.b64  	%rd1830, %rd1808, %rd1754;
	xor.b64  	%rd1831, %rd1808, %rd1781;
	and.b64  	%rd1832, %rd1831, %rd1830;
	xor.b64  	%rd1833, %rd1832, %rd1808;
	add.s64 	%rd1834, %rd1823, %rd1833;
	add.s64 	%rd1835, %rd1834, %rd1829;
	add.s32 	%r9392, %r16282, 12;
	mul.wide.s32 	%rd1836, %r9392, 8;
	add.s64 	%rd1837, %rd1512, %rd1836;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9393,%dummy}, %rd1824;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9394}, %rd1824;
	}
	shf.r.wrap.b32 	%r9395, %r9394, %r9393, 14;
	shf.r.wrap.b32 	%r9396, %r9393, %r9394, 14;
	mov.b64 	%rd1838, {%r9396, %r9395};
	shf.r.wrap.b32 	%r9397, %r9394, %r9393, 18;
	shf.r.wrap.b32 	%r9398, %r9393, %r9394, 18;
	mov.b64 	%rd1839, {%r9398, %r9397};
	xor.b64  	%rd1840, %rd1839, %rd1838;
	shf.l.wrap.b32 	%r9399, %r9393, %r9394, 23;
	shf.l.wrap.b32 	%r9400, %r9394, %r9393, 23;
	mov.b64 	%rd1841, {%r9400, %r9399};
	xor.b64  	%rd1842, %rd1840, %rd1841;
	xor.b64  	%rd1843, %rd1797, %rd1770;
	and.b64  	%rd1844, %rd1824, %rd1843;
	xor.b64  	%rd1845, %rd1844, %rd1770;
	add.s64 	%rd1846, %rd1743, %rd3035;
	ld.const.u64 	%rd1847, [%rd1837];
	add.s64 	%rd1848, %rd1846, %rd1847;
	add.s64 	%rd1849, %rd1848, %rd1845;
	add.s64 	%rd1850, %rd1849, %rd1842;
	add.s64 	%rd3047, %rd1850, %rd1754;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9401,%dummy}, %rd1835;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9402}, %rd1835;
	}
	shf.r.wrap.b32 	%r9403, %r9402, %r9401, 28;
	shf.r.wrap.b32 	%r9404, %r9401, %r9402, 28;
	mov.b64 	%rd1851, {%r9404, %r9403};
	shf.l.wrap.b32 	%r9405, %r9401, %r9402, 30;
	shf.l.wrap.b32 	%r9406, %r9402, %r9401, 30;
	mov.b64 	%rd1852, {%r9406, %r9405};
	xor.b64  	%rd1853, %rd1852, %rd1851;
	shf.l.wrap.b32 	%r9407, %r9401, %r9402, 25;
	shf.l.wrap.b32 	%r9408, %r9402, %r9401, 25;
	mov.b64 	%rd1854, {%r9408, %r9407};
	xor.b64  	%rd1855, %rd1853, %rd1854;
	xor.b64  	%rd1856, %rd1835, %rd1781;
	xor.b64  	%rd1857, %rd1835, %rd1808;
	and.b64  	%rd1858, %rd1857, %rd1856;
	xor.b64  	%rd1859, %rd1858, %rd1835;
	add.s64 	%rd1860, %rd1850, %rd1859;
	add.s64 	%rd3043, %rd1860, %rd1855;
	add.s32 	%r9409, %r16282, 13;
	mul.wide.s32 	%rd1861, %r9409, 8;
	add.s64 	%rd1862, %rd1512, %rd1861;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9410,%dummy}, %rd3047;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9411}, %rd3047;
	}
	shf.r.wrap.b32 	%r9412, %r9411, %r9410, 14;
	shf.r.wrap.b32 	%r9413, %r9410, %r9411, 14;
	mov.b64 	%rd1863, {%r9413, %r9412};
	shf.r.wrap.b32 	%r9414, %r9411, %r9410, 18;
	shf.r.wrap.b32 	%r9415, %r9410, %r9411, 18;
	mov.b64 	%rd1864, {%r9415, %r9414};
	xor.b64  	%rd1865, %rd1864, %rd1863;
	shf.l.wrap.b32 	%r9416, %r9410, %r9411, 23;
	shf.l.wrap.b32 	%r9417, %r9411, %r9410, 23;
	mov.b64 	%rd1866, {%r9417, %r9416};
	xor.b64  	%rd1867, %rd1865, %rd1866;
	xor.b64  	%rd1868, %rd1824, %rd1797;
	and.b64  	%rd1869, %rd3047, %rd1868;
	xor.b64  	%rd1870, %rd1869, %rd1797;
	add.s64 	%rd1871, %rd1770, %rd3034;
	ld.const.u64 	%rd1872, [%rd1862];
	add.s64 	%rd1873, %rd1871, %rd1872;
	add.s64 	%rd1874, %rd1873, %rd1870;
	add.s64 	%rd1875, %rd1874, %rd1867;
	add.s64 	%rd3046, %rd1875, %rd1781;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9418,%dummy}, %rd3043;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9419}, %rd3043;
	}
	shf.r.wrap.b32 	%r9420, %r9419, %r9418, 28;
	shf.r.wrap.b32 	%r9421, %r9418, %r9419, 28;
	mov.b64 	%rd1876, {%r9421, %r9420};
	shf.l.wrap.b32 	%r9422, %r9418, %r9419, 30;
	shf.l.wrap.b32 	%r9423, %r9419, %r9418, 30;
	mov.b64 	%rd1877, {%r9423, %r9422};
	xor.b64  	%rd1878, %rd1877, %rd1876;
	shf.l.wrap.b32 	%r9424, %r9418, %r9419, 25;
	shf.l.wrap.b32 	%r9425, %r9419, %r9418, 25;
	mov.b64 	%rd1879, {%r9425, %r9424};
	xor.b64  	%rd1880, %rd1878, %rd1879;
	xor.b64  	%rd1881, %rd3043, %rd1808;
	xor.b64  	%rd1882, %rd3043, %rd1835;
	and.b64  	%rd1883, %rd1882, %rd1881;
	xor.b64  	%rd1884, %rd1883, %rd3043;
	add.s64 	%rd1885, %rd1875, %rd1884;
	add.s64 	%rd3042, %rd1885, %rd1880;
	add.s32 	%r9426, %r16282, 14;
	mul.wide.s32 	%rd1886, %r9426, 8;
	add.s64 	%rd1887, %rd1512, %rd1886;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9427,%dummy}, %rd3046;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9428}, %rd3046;
	}
	shf.r.wrap.b32 	%r9429, %r9428, %r9427, 14;
	shf.r.wrap.b32 	%r9430, %r9427, %r9428, 14;
	mov.b64 	%rd1888, {%r9430, %r9429};
	shf.r.wrap.b32 	%r9431, %r9428, %r9427, 18;
	shf.r.wrap.b32 	%r9432, %r9427, %r9428, 18;
	mov.b64 	%rd1889, {%r9432, %r9431};
	xor.b64  	%rd1890, %rd1889, %rd1888;
	shf.l.wrap.b32 	%r9433, %r9427, %r9428, 23;
	shf.l.wrap.b32 	%r9434, %r9428, %r9427, 23;
	mov.b64 	%rd1891, {%r9434, %r9433};
	xor.b64  	%rd1892, %rd1890, %rd1891;
	xor.b64  	%rd1893, %rd3047, %rd1824;
	and.b64  	%rd1894, %rd3046, %rd1893;
	xor.b64  	%rd1895, %rd1894, %rd1824;
	add.s64 	%rd1896, %rd1797, %rd3033;
	ld.const.u64 	%rd1897, [%rd1887];
	add.s64 	%rd1898, %rd1896, %rd1897;
	add.s64 	%rd1899, %rd1898, %rd1895;
	add.s64 	%rd1900, %rd1899, %rd1892;
	add.s64 	%rd3045, %rd1900, %rd1808;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9435,%dummy}, %rd3042;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9436}, %rd3042;
	}
	shf.r.wrap.b32 	%r9437, %r9436, %r9435, 28;
	shf.r.wrap.b32 	%r9438, %r9435, %r9436, 28;
	mov.b64 	%rd1901, {%r9438, %r9437};
	shf.l.wrap.b32 	%r9439, %r9435, %r9436, 30;
	shf.l.wrap.b32 	%r9440, %r9436, %r9435, 30;
	mov.b64 	%rd1902, {%r9440, %r9439};
	xor.b64  	%rd1903, %rd1902, %rd1901;
	shf.l.wrap.b32 	%r9441, %r9435, %r9436, 25;
	shf.l.wrap.b32 	%r9442, %r9436, %r9435, 25;
	mov.b64 	%rd1904, {%r9442, %r9441};
	xor.b64  	%rd1905, %rd1903, %rd1904;
	xor.b64  	%rd1906, %rd3042, %rd1835;
	xor.b64  	%rd1907, %rd3042, %rd3043;
	and.b64  	%rd1908, %rd1907, %rd1906;
	xor.b64  	%rd1909, %rd1908, %rd3042;
	add.s64 	%rd1910, %rd1900, %rd1909;
	add.s64 	%rd3041, %rd1910, %rd1905;
	add.s32 	%r9443, %r16282, 15;
	mul.wide.s32 	%rd1911, %r9443, 8;
	add.s64 	%rd1912, %rd1512, %rd1911;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9444,%dummy}, %rd3045;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9445}, %rd3045;
	}
	shf.r.wrap.b32 	%r9446, %r9445, %r9444, 14;
	shf.r.wrap.b32 	%r9447, %r9444, %r9445, 14;
	mov.b64 	%rd1913, {%r9447, %r9446};
	shf.r.wrap.b32 	%r9448, %r9445, %r9444, 18;
	shf.r.wrap.b32 	%r9449, %r9444, %r9445, 18;
	mov.b64 	%rd1914, {%r9449, %r9448};
	xor.b64  	%rd1915, %rd1914, %rd1913;
	shf.l.wrap.b32 	%r9450, %r9444, %r9445, 23;
	shf.l.wrap.b32 	%r9451, %r9445, %r9444, 23;
	mov.b64 	%rd1916, {%r9451, %r9450};
	xor.b64  	%rd1917, %rd1915, %rd1916;
	xor.b64  	%rd1918, %rd3046, %rd3047;
	and.b64  	%rd1919, %rd3045, %rd1918;
	xor.b64  	%rd1920, %rd1919, %rd3047;
	add.s64 	%rd1921, %rd1824, %rd3032;
	ld.const.u64 	%rd1922, [%rd1912];
	add.s64 	%rd1923, %rd1921, %rd1922;
	add.s64 	%rd1924, %rd1923, %rd1920;
	add.s64 	%rd1925, %rd1924, %rd1917;
	add.s64 	%rd3044, %rd1925, %rd1835;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r9452,%dummy}, %rd3041;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r9453}, %rd3041;
	}
	shf.r.wrap.b32 	%r9454, %r9453, %r9452, 28;
	shf.r.wrap.b32 	%r9455, %r9452, %r9453, 28;
	mov.b64 	%rd1926, {%r9455, %r9454};
	shf.l.wrap.b32 	%r9456, %r9452, %r9453, 30;
	shf.l.wrap.b32 	%r9457, %r9453, %r9452, 30;
	mov.b64 	%rd1927, {%r9457, %r9456};
	xor.b64  	%rd1928, %rd1927, %rd1926;
	shf.l.wrap.b32 	%r9458, %r9452, %r9453, 25;
	shf.l.wrap.b32 	%r9459, %r9453, %r9452, 25;
	mov.b64 	%rd1929, {%r9459, %r9458};
	xor.b64  	%rd1930, %rd1928, %rd1929;
	xor.b64  	%rd1931, %rd3041, %rd3043;
	xor.b64  	%rd1932, %rd3041, %rd3042;
	and.b64  	%rd1933, %rd1932, %rd1931;
	xor.b64  	%rd1934, %rd1933, %rd3041;
	add.s64 	%rd1935, %rd1925, %rd1934;
	add.s64 	%rd3040, %rd1935, %rd1930;
	add.s32 	%r16282, %r16282, 16;
	setp.lt.s32	%p399, %r16282, 80;
	@%p399 bra 	BB5_695;
	bra.uni 	BB5_696;

BB5_655:
	setp.eq.s32	%p368, %r2804, 23;
	mov.u32 	%r16251, %r16250;
	mov.u32 	%r16252, %r16250;
	mov.u32 	%r16253, %r16250;
	mov.u32 	%r16254, %r16250;
	mov.u32 	%r16255, %r16250;
	mov.u32 	%r16256, %r16250;
	mov.u32 	%r16257, %r16250;
	mov.u32 	%r16258, %r16250;
	mov.u32 	%r16259, %r16250;
	mov.u32 	%r16260, %r16250;
	mov.u32 	%r16261, %r16250;
	mov.u32 	%r16262, %r16250;
	mov.u32 	%r16263, %r16250;
	mov.u32 	%r16264, %r16250;
	mov.u32 	%r16265, %r16250;
	mov.u32 	%r16266, %r16250;
	mov.u32 	%r16267, %r16250;
	mov.u32 	%r16268, %r16250;
	mov.u32 	%r16269, %r16250;
	mov.u32 	%r16270, %r16250;
	mov.u32 	%r16271, %r16250;
	mov.u32 	%r16272, %r16250;
	mov.u32 	%r16273, %r16250;
	mov.u32 	%r16274, %r16250;
	mov.u32 	%r16275, %r16250;
	mov.u32 	%r16276, %r16250;
	mov.u32 	%r16277, %r16250;
	mov.u32 	%r16278, %r16250;
	mov.u32 	%r16279, %r16250;
	mov.u32 	%r16280, %r16250;
	mov.u32 	%r16281, %r16250;
	@%p368 bra 	BB5_656;
	bra.uni 	BB5_694;

BB5_656:
	mov.u32 	%r16248, 0;
	// inline asm
	prmt.b32 %r16270, %r16248, %r71, %r278;
	// inline asm
	ld.local.v2.u32 	{%r4309, %r4310}, [%rd8+8];
	// inline asm
	prmt.b32 %r16271, %r4310, %r4309, %r278;
	// inline asm
	ld.local.u32 	%r4176, [%rd8+8];
	ld.local.u32 	%r4177, [%rd8+4];
	// inline asm
	prmt.b32 %r16272, %r4176, %r4177, %r278;
	// inline asm
	ld.local.v2.u32 	{%r4311, %r4312}, [%rd8];
	// inline asm
	prmt.b32 %r16273, %r4312, %r4311, %r278;
	// inline asm
	ld.local.u32 	%r4184, [%rd8];
	ld.local.u32 	%r4185, [%rd7+12];
	// inline asm
	prmt.b32 %r16266, %r4184, %r4185, %r278;
	// inline asm
	ld.local.v2.u32 	{%r4313, %r4314}, [%rd7+8];
	// inline asm
	prmt.b32 %r16267, %r4314, %r4313, %r278;
	// inline asm
	ld.local.u32 	%r4192, [%rd7+8];
	ld.local.u32 	%r4193, [%rd7+4];
	// inline asm
	prmt.b32 %r16268, %r4192, %r4193, %r278;
	// inline asm
	ld.local.v2.u32 	{%r4315, %r4316}, [%rd7];
	// inline asm
	prmt.b32 %r16269, %r4316, %r4315, %r278;
	// inline asm
	ld.local.u32 	%r4200, [%rd7];
	ld.local.u32 	%r4201, [%rd6+12];
	// inline asm
	prmt.b32 %r16262, %r4200, %r4201, %r278;
	// inline asm
	ld.local.v2.u32 	{%r4317, %r4318}, [%rd6+8];
	// inline asm
	prmt.b32 %r16263, %r4318, %r4317, %r278;
	// inline asm
	ld.local.u32 	%r4208, [%rd6+8];
	ld.local.u32 	%r4209, [%rd6+4];
	// inline asm
	prmt.b32 %r16264, %r4208, %r4209, %r278;
	// inline asm
	ld.local.v2.u32 	{%r4319, %r4320}, [%rd6];
	// inline asm
	prmt.b32 %r16265, %r4320, %r4319, %r278;
	// inline asm
	ld.local.u32 	%r4216, [%rd6];
	ld.local.u32 	%r4217, [%rd5+12];
	// inline asm
	prmt.b32 %r16258, %r4216, %r4217, %r278;
	// inline asm
	ld.local.v2.u32 	{%r4321, %r4322}, [%rd5+8];
	// inline asm
	prmt.b32 %r16259, %r4322, %r4321, %r278;
	// inline asm
	ld.local.u32 	%r4224, [%rd5+8];
	ld.local.u32 	%r4225, [%rd5+4];
	// inline asm
	prmt.b32 %r16260, %r4224, %r4225, %r278;
	// inline asm
	ld.local.v2.u32 	{%r4323, %r4324}, [%rd5];
	// inline asm
	prmt.b32 %r16261, %r4324, %r4323, %r278;
	// inline asm
	ld.local.u32 	%r4232, [%rd5];
	ld.local.u32 	%r4233, [%rd4+12];
	// inline asm
	prmt.b32 %r16254, %r4232, %r4233, %r278;
	// inline asm
	ld.local.v2.u32 	{%r4325, %r4326}, [%rd4+8];
	// inline asm
	prmt.b32 %r16255, %r4326, %r4325, %r278;
	// inline asm
	ld.local.u32 	%r4240, [%rd4+8];
	ld.local.u32 	%r4241, [%rd4+4];
	// inline asm
	prmt.b32 %r16256, %r4240, %r4241, %r278;
	// inline asm
	ld.local.v2.u32 	{%r4327, %r4328}, [%rd4];
	// inline asm
	prmt.b32 %r16257, %r4328, %r4327, %r278;
	// inline asm
	ld.local.u32 	%r4248, [%rd4];
	ld.local.u32 	%r4249, [%rd3+12];
	// inline asm
	prmt.b32 %r16250, %r4248, %r4249, %r278;
	// inline asm
	ld.local.v2.u32 	{%r4329, %r4330}, [%rd3+8];
	// inline asm
	prmt.b32 %r16251, %r4330, %r4329, %r278;
	// inline asm
	ld.local.u32 	%r4256, [%rd3+8];
	ld.local.u32 	%r4257, [%rd3+4];
	// inline asm
	prmt.b32 %r16252, %r4256, %r4257, %r278;
	// inline asm
	ld.local.v2.u32 	{%r4331, %r4332}, [%rd3];
	// inline asm
	prmt.b32 %r16253, %r4332, %r4331, %r278;
	// inline asm
	ld.local.u32 	%r4264, [%rd3];
	ld.local.u32 	%r4265, [%rd2+12];
	// inline asm
	prmt.b32 %r4263, %r4264, %r4265, %r278;
	// inline asm
	st.local.u32 	[%rd8+12], %r4263;
	ld.local.v2.u32 	{%r4333, %r4334}, [%rd2+8];
	// inline asm
	prmt.b32 %r4267, %r4334, %r4333, %r278;
	// inline asm
	st.local.u32 	[%rd8+8], %r4267;
	ld.local.u32 	%r4272, [%rd2+8];
	ld.local.u32 	%r4273, [%rd2+4];
	// inline asm
	prmt.b32 %r4271, %r4272, %r4273, %r278;
	// inline asm
	st.local.u32 	[%rd8+4], %r4271;
	ld.local.v2.u32 	{%r4335, %r4336}, [%rd2];
	// inline asm
	prmt.b32 %r4275, %r4336, %r4335, %r278;
	// inline asm
	st.local.u32 	[%rd8], %r4275;
	ld.local.u32 	%r4280, [%rd2];
	ld.local.u32 	%r4281, [%rd1+12];
	// inline asm
	prmt.b32 %r4279, %r4280, %r4281, %r278;
	// inline asm
	st.local.u32 	[%rd7+12], %r4279;
	ld.local.v2.u32 	{%r4337, %r4338}, [%rd1+8];
	// inline asm
	prmt.b32 %r4283, %r4338, %r4337, %r278;
	// inline asm
	st.local.u32 	[%rd7+8], %r4283;
	ld.local.u32 	%r4288, [%rd1+8];
	ld.local.u32 	%r4289, [%rd1+4];
	// inline asm
	prmt.b32 %r4287, %r4288, %r4289, %r278;
	// inline asm
	st.local.u32 	[%rd7+4], %r4287;
	ld.local.v2.u32 	{%r4339, %r4340}, [%rd1];
	// inline asm
	prmt.b32 %r4291, %r4340, %r4339, %r278;
	// inline asm
	st.local.u32 	[%rd7], %r4291;
	ld.local.u32 	%r4296, [%rd1];
	// inline asm
	prmt.b32 %r4295, %r4296, %r16248, %r278;
	// inline asm
	st.local.v4.u32 	[%rd6], {%r16248, %r16248, %r16248, %r4295};
	st.local.v4.u32 	[%rd5], {%r16248, %r16248, %r16248, %r16248};
	st.local.v4.u32 	[%rd4], {%r16248, %r16248, %r16248, %r16248};
	st.local.v4.u32 	[%rd3], {%r16248, %r16248, %r16248, %r16248};
	st.local.v4.u32 	[%rd2], {%r16248, %r16248, %r16248, %r16248};
	st.local.v2.u32 	[%rd1+8], {%r16248, %r16248};
	mov.u64 	%rd919, 0;
	st.local.u64 	[%rd1], %rd919;
	mov.u32 	%r16249, %r16248;
	bra.uni 	BB5_690;

BB5_639:
	setp.eq.s32	%p380, %r2804, 15;
	mov.u32 	%r16251, %r16250;
	mov.u32 	%r16252, %r16250;
	mov.u32 	%r16253, %r16250;
	mov.u32 	%r16254, %r16250;
	mov.u32 	%r16255, %r16250;
	mov.u32 	%r16256, %r16250;
	mov.u32 	%r16257, %r16250;
	mov.u32 	%r16258, %r16250;
	mov.u32 	%r16259, %r16250;
	mov.u32 	%r16260, %r16250;
	mov.u32 	%r16261, %r16250;
	mov.u32 	%r16262, %r16250;
	mov.u32 	%r16263, %r16250;
	mov.u32 	%r16264, %r16250;
	mov.u32 	%r16265, %r16250;
	mov.u32 	%r16266, %r16250;
	mov.u32 	%r16267, %r16250;
	mov.u32 	%r16268, %r16250;
	mov.u32 	%r16269, %r16250;
	mov.u32 	%r16270, %r16250;
	mov.u32 	%r16271, %r16250;
	mov.u32 	%r16272, %r16250;
	mov.u32 	%r16273, %r16250;
	mov.u32 	%r16274, %r16250;
	mov.u32 	%r16275, %r16250;
	mov.u32 	%r16276, %r16250;
	mov.u32 	%r16277, %r16250;
	mov.u32 	%r16278, %r16250;
	mov.u32 	%r16279, %r16250;
	mov.u32 	%r16280, %r16250;
	mov.u32 	%r16281, %r16250;
	@%p380 bra 	BB5_640;
	bra.uni 	BB5_694;

BB5_640:
	mov.u32 	%r16248, 0;
	// inline asm
	prmt.b32 %r16262, %r16248, %r71, %r278;
	// inline asm
	ld.local.v2.u32 	{%r5737, %r5738}, [%rd8+8];
	// inline asm
	prmt.b32 %r16263, %r5738, %r5737, %r278;
	// inline asm
	ld.local.u32 	%r5596, [%rd8+8];
	ld.local.u32 	%r5597, [%rd8+4];
	// inline asm
	prmt.b32 %r16264, %r5596, %r5597, %r278;
	// inline asm
	ld.local.v2.u32 	{%r5739, %r5740}, [%rd8];
	// inline asm
	prmt.b32 %r16265, %r5740, %r5739, %r278;
	// inline asm
	ld.local.u32 	%r5604, [%rd8];
	ld.local.u32 	%r5605, [%rd7+12];
	// inline asm
	prmt.b32 %r16258, %r5604, %r5605, %r278;
	// inline asm
	ld.local.v2.u32 	{%r5741, %r5742}, [%rd7+8];
	// inline asm
	prmt.b32 %r16259, %r5742, %r5741, %r278;
	// inline asm
	ld.local.u32 	%r5612, [%rd7+8];
	ld.local.u32 	%r5613, [%rd7+4];
	// inline asm
	prmt.b32 %r16260, %r5612, %r5613, %r278;
	// inline asm
	ld.local.v2.u32 	{%r5743, %r5744}, [%rd7];
	// inline asm
	prmt.b32 %r16261, %r5744, %r5743, %r278;
	// inline asm
	ld.local.u32 	%r5620, [%rd7];
	ld.local.u32 	%r5621, [%rd6+12];
	// inline asm
	prmt.b32 %r16254, %r5620, %r5621, %r278;
	// inline asm
	ld.local.v2.u32 	{%r5745, %r5746}, [%rd6+8];
	// inline asm
	prmt.b32 %r16255, %r5746, %r5745, %r278;
	// inline asm
	ld.local.u32 	%r5628, [%rd6+8];
	ld.local.u32 	%r5629, [%rd6+4];
	// inline asm
	prmt.b32 %r16256, %r5628, %r5629, %r278;
	// inline asm
	ld.local.v2.u32 	{%r5747, %r5748}, [%rd6];
	// inline asm
	prmt.b32 %r16257, %r5748, %r5747, %r278;
	// inline asm
	ld.local.u32 	%r5636, [%rd6];
	ld.local.u32 	%r5637, [%rd5+12];
	// inline asm
	prmt.b32 %r16250, %r5636, %r5637, %r278;
	// inline asm
	ld.local.v2.u32 	{%r5749, %r5750}, [%rd5+8];
	// inline asm
	prmt.b32 %r16251, %r5750, %r5749, %r278;
	// inline asm
	ld.local.u32 	%r5644, [%rd5+8];
	ld.local.u32 	%r5645, [%rd5+4];
	// inline asm
	prmt.b32 %r16252, %r5644, %r5645, %r278;
	// inline asm
	ld.local.v2.u32 	{%r5751, %r5752}, [%rd5];
	// inline asm
	prmt.b32 %r16253, %r5752, %r5751, %r278;
	// inline asm
	ld.local.u32 	%r5652, [%rd5];
	ld.local.u32 	%r5653, [%rd4+12];
	// inline asm
	prmt.b32 %r5651, %r5652, %r5653, %r278;
	// inline asm
	st.local.u32 	[%rd8+12], %r5651;
	ld.local.v2.u32 	{%r5753, %r5754}, [%rd4+8];
	// inline asm
	prmt.b32 %r5655, %r5754, %r5753, %r278;
	// inline asm
	st.local.u32 	[%rd8+8], %r5655;
	ld.local.u32 	%r5660, [%rd4+8];
	ld.local.u32 	%r5661, [%rd4+4];
	// inline asm
	prmt.b32 %r5659, %r5660, %r5661, %r278;
	// inline asm
	st.local.u32 	[%rd8+4], %r5659;
	ld.local.v2.u32 	{%r5755, %r5756}, [%rd4];
	// inline asm
	prmt.b32 %r5663, %r5756, %r5755, %r278;
	// inline asm
	st.local.u32 	[%rd8], %r5663;
	ld.local.u32 	%r5668, [%rd4];
	ld.local.u32 	%r5669, [%rd3+12];
	// inline asm
	prmt.b32 %r5667, %r5668, %r5669, %r278;
	// inline asm
	st.local.u32 	[%rd7+12], %r5667;
	ld.local.v2.u32 	{%r5757, %r5758}, [%rd3+8];
	// inline asm
	prmt.b32 %r5671, %r5758, %r5757, %r278;
	// inline asm
	st.local.u32 	[%rd7+8], %r5671;
	ld.local.u32 	%r5676, [%rd3+8];
	ld.local.u32 	%r5677, [%rd3+4];
	// inline asm
	prmt.b32 %r5675, %r5676, %r5677, %r278;
	// inline asm
	st.local.u32 	[%rd7+4], %r5675;
	ld.local.v2.u32 	{%r5759, %r5760}, [%rd3];
	// inline asm
	prmt.b32 %r5679, %r5760, %r5759, %r278;
	// inline asm
	st.local.u32 	[%rd7], %r5679;
	ld.local.u32 	%r5684, [%rd3];
	ld.local.u32 	%r5685, [%rd2+12];
	// inline asm
	prmt.b32 %r5683, %r5684, %r5685, %r278;
	// inline asm
	st.local.u32 	[%rd6+12], %r5683;
	ld.local.v2.u32 	{%r5761, %r5762}, [%rd2+8];
	// inline asm
	prmt.b32 %r5687, %r5762, %r5761, %r278;
	// inline asm
	st.local.u32 	[%rd6+8], %r5687;
	ld.local.u32 	%r5692, [%rd2+8];
	ld.local.u32 	%r5693, [%rd2+4];
	// inline asm
	prmt.b32 %r5691, %r5692, %r5693, %r278;
	// inline asm
	st.local.u32 	[%rd6+4], %r5691;
	ld.local.v2.u32 	{%r5763, %r5764}, [%rd2];
	// inline asm
	prmt.b32 %r5695, %r5764, %r5763, %r278;
	// inline asm
	st.local.u32 	[%rd6], %r5695;
	ld.local.u32 	%r5700, [%rd2];
	ld.local.u32 	%r5701, [%rd1+12];
	// inline asm
	prmt.b32 %r5699, %r5700, %r5701, %r278;
	// inline asm
	st.local.u32 	[%rd5+12], %r5699;
	ld.local.v2.u32 	{%r5765, %r5766}, [%rd1+8];
	// inline asm
	prmt.b32 %r5703, %r5766, %r5765, %r278;
	// inline asm
	st.local.u32 	[%rd5+8], %r5703;
	ld.local.u32 	%r5708, [%rd1+8];
	ld.local.u32 	%r5709, [%rd1+4];
	// inline asm
	prmt.b32 %r5707, %r5708, %r5709, %r278;
	// inline asm
	st.local.u32 	[%rd5+4], %r5707;
	ld.local.v2.u32 	{%r5767, %r5768}, [%rd1];
	// inline asm
	prmt.b32 %r5711, %r5768, %r5767, %r278;
	// inline asm
	st.local.u32 	[%rd5], %r5711;
	ld.local.u32 	%r5716, [%rd1];
	// inline asm
	prmt.b32 %r5715, %r5716, %r16248, %r278;
	// inline asm
	st.local.v4.u32 	[%rd4], {%r16248, %r16248, %r16248, %r5715};
	st.local.v4.u32 	[%rd3], {%r16248, %r16248, %r16248, %r16248};
	st.local.v4.u32 	[%rd2], {%r16248, %r16248, %r16248, %r16248};
	st.local.v2.u32 	[%rd1+8], {%r16248, %r16248};
	mov.u64 	%rd927, 0;
	st.local.u64 	[%rd1], %rd927;
	mov.u32 	%r16249, %r16248;
	bra.uni 	BB5_688;

BB5_670:
	setp.ne.s32	%p357, %r2804, 31;
	mov.u32 	%r16251, %r16250;
	mov.u32 	%r16252, %r16250;
	mov.u32 	%r16253, %r16250;
	mov.u32 	%r16254, %r16250;
	mov.u32 	%r16255, %r16250;
	mov.u32 	%r16256, %r16250;
	mov.u32 	%r16257, %r16250;
	mov.u32 	%r16258, %r16250;
	mov.u32 	%r16259, %r16250;
	mov.u32 	%r16260, %r16250;
	mov.u32 	%r16261, %r16250;
	mov.u32 	%r16262, %r16250;
	mov.u32 	%r16263, %r16250;
	mov.u32 	%r16264, %r16250;
	mov.u32 	%r16265, %r16250;
	mov.u32 	%r16266, %r16250;
	mov.u32 	%r16267, %r16250;
	mov.u32 	%r16268, %r16250;
	mov.u32 	%r16269, %r16250;
	mov.u32 	%r16270, %r16250;
	mov.u32 	%r16271, %r16250;
	mov.u32 	%r16272, %r16250;
	mov.u32 	%r16273, %r16250;
	mov.u32 	%r16274, %r16250;
	mov.u32 	%r16275, %r16250;
	mov.u32 	%r16276, %r16250;
	mov.u32 	%r16277, %r16250;
	mov.u32 	%r16278, %r16250;
	mov.u32 	%r16279, %r16250;
	mov.u32 	%r16280, %r16250;
	mov.u32 	%r16281, %r16250;
	@%p357 bra 	BB5_694;

	mov.u32 	%r16248, 0;
	// inline asm
	prmt.b32 %r16278, %r16248, %r71, %r278;
	// inline asm
	ld.local.v2.u32 	{%r2945, %r2946}, [%rd8+8];
	// inline asm
	prmt.b32 %r16279, %r2946, %r2945, %r278;
	// inline asm
	ld.local.u32 	%r2820, [%rd8+8];
	ld.local.u32 	%r2821, [%rd8+4];
	// inline asm
	prmt.b32 %r16280, %r2820, %r2821, %r278;
	// inline asm
	ld.local.v2.u32 	{%r2947, %r2948}, [%rd8];
	// inline asm
	prmt.b32 %r16281, %r2948, %r2947, %r278;
	// inline asm
	ld.local.u32 	%r2828, [%rd8];
	ld.local.u32 	%r2829, [%rd7+12];
	// inline asm
	prmt.b32 %r16274, %r2828, %r2829, %r278;
	// inline asm
	ld.local.v2.u32 	{%r2949, %r2950}, [%rd7+8];
	// inline asm
	prmt.b32 %r16275, %r2950, %r2949, %r278;
	// inline asm
	ld.local.u32 	%r2836, [%rd7+8];
	ld.local.u32 	%r2837, [%rd7+4];
	// inline asm
	prmt.b32 %r16276, %r2836, %r2837, %r278;
	// inline asm
	ld.local.v2.u32 	{%r2951, %r2952}, [%rd7];
	// inline asm
	prmt.b32 %r16277, %r2952, %r2951, %r278;
	// inline asm
	ld.local.u32 	%r2844, [%rd7];
	ld.local.u32 	%r2845, [%rd6+12];
	// inline asm
	prmt.b32 %r16270, %r2844, %r2845, %r278;
	// inline asm
	ld.local.v2.u32 	{%r2953, %r2954}, [%rd6+8];
	// inline asm
	prmt.b32 %r16271, %r2954, %r2953, %r278;
	// inline asm
	ld.local.u32 	%r2852, [%rd6+8];
	ld.local.u32 	%r2853, [%rd6+4];
	// inline asm
	prmt.b32 %r16272, %r2852, %r2853, %r278;
	// inline asm
	ld.local.v2.u32 	{%r2955, %r2956}, [%rd6];
	// inline asm
	prmt.b32 %r16273, %r2956, %r2955, %r278;
	// inline asm
	ld.local.u32 	%r2860, [%rd6];
	ld.local.u32 	%r2861, [%rd5+12];
	// inline asm
	prmt.b32 %r16266, %r2860, %r2861, %r278;
	// inline asm
	ld.local.v2.u32 	{%r2957, %r2958}, [%rd5+8];
	// inline asm
	prmt.b32 %r16267, %r2958, %r2957, %r278;
	// inline asm
	ld.local.u32 	%r2868, [%rd5+8];
	ld.local.u32 	%r2869, [%rd5+4];
	// inline asm
	prmt.b32 %r16268, %r2868, %r2869, %r278;
	// inline asm
	ld.local.v2.u32 	{%r2959, %r2960}, [%rd5];
	// inline asm
	prmt.b32 %r16269, %r2960, %r2959, %r278;
	// inline asm
	ld.local.u32 	%r2876, [%rd5];
	ld.local.u32 	%r2877, [%rd4+12];
	// inline asm
	prmt.b32 %r16262, %r2876, %r2877, %r278;
	// inline asm
	ld.local.v2.u32 	{%r2961, %r2962}, [%rd4+8];
	// inline asm
	prmt.b32 %r16263, %r2962, %r2961, %r278;
	// inline asm
	ld.local.u32 	%r2884, [%rd4+8];
	ld.local.u32 	%r2885, [%rd4+4];
	// inline asm
	prmt.b32 %r16264, %r2884, %r2885, %r278;
	// inline asm
	ld.local.v2.u32 	{%r2963, %r2964}, [%rd4];
	// inline asm
	prmt.b32 %r16265, %r2964, %r2963, %r278;
	// inline asm
	ld.local.u32 	%r2892, [%rd4];
	ld.local.u32 	%r2893, [%rd3+12];
	// inline asm
	prmt.b32 %r16258, %r2892, %r2893, %r278;
	// inline asm
	ld.local.v2.u32 	{%r2965, %r2966}, [%rd3+8];
	// inline asm
	prmt.b32 %r16259, %r2966, %r2965, %r278;
	// inline asm
	ld.local.u32 	%r2900, [%rd3+8];
	ld.local.u32 	%r2901, [%rd3+4];
	// inline asm
	prmt.b32 %r16260, %r2900, %r2901, %r278;
	// inline asm
	ld.local.v2.u32 	{%r2967, %r2968}, [%rd3];
	// inline asm
	prmt.b32 %r16261, %r2968, %r2967, %r278;
	// inline asm
	ld.local.u32 	%r2908, [%rd3];
	ld.local.u32 	%r2909, [%rd2+12];
	// inline asm
	prmt.b32 %r16254, %r2908, %r2909, %r278;
	// inline asm
	ld.local.v2.u32 	{%r2969, %r2970}, [%rd2+8];
	// inline asm
	prmt.b32 %r16255, %r2970, %r2969, %r278;
	// inline asm
	ld.local.u32 	%r2916, [%rd2+8];
	ld.local.u32 	%r2917, [%rd2+4];
	// inline asm
	prmt.b32 %r16256, %r2916, %r2917, %r278;
	// inline asm
	ld.local.v2.u32 	{%r2971, %r2972}, [%rd2];
	// inline asm
	prmt.b32 %r16257, %r2972, %r2971, %r278;
	// inline asm
	ld.local.u32 	%r2924, [%rd2];
	ld.local.u32 	%r2925, [%rd1+12];
	// inline asm
	prmt.b32 %r16250, %r2924, %r2925, %r278;
	// inline asm
	ld.local.v2.u32 	{%r2973, %r2974}, [%rd1+8];
	// inline asm
	prmt.b32 %r16251, %r2974, %r2973, %r278;
	// inline asm
	ld.local.u32 	%r2932, [%rd1+8];
	ld.local.u32 	%r2933, [%rd1+4];
	// inline asm
	prmt.b32 %r16252, %r2932, %r2933, %r278;
	// inline asm
	ld.local.v2.u32 	{%r2975, %r2976}, [%rd1];
	// inline asm
	prmt.b32 %r16253, %r2976, %r2975, %r278;
	// inline asm
	ld.local.u32 	%r2940, [%rd1];
	// inline asm
	prmt.b32 %r2939, %r2940, %r16248, %r278;
	// inline asm
	st.local.v4.u32 	[%rd8], {%r16248, %r16248, %r16248, %r2939};
	st.local.v4.u32 	[%rd7], {%r16248, %r16248, %r16248, %r16248};
	st.local.v4.u32 	[%rd6], {%r16248, %r16248, %r16248, %r16248};
	st.local.v4.u32 	[%rd5], {%r16248, %r16248, %r16248, %r16248};
	st.local.v4.u32 	[%rd4], {%r16248, %r16248, %r16248, %r16248};
	st.local.v4.u32 	[%rd3], {%r16248, %r16248, %r16248, %r16248};
	st.local.v4.u32 	[%rd2], {%r16248, %r16248, %r16248, %r16248};
	st.local.v2.u32 	[%rd1+8], {%r16248, %r16248};
	mov.u64 	%rd911, 0;
	st.local.u64 	[%rd1], %rd911;
	mov.u32 	%r16249, %r16248;
	bra.uni 	BB5_694;

BB5_48:
	mov.pred 	%p448, 0;
	add.u64 	%rd2998, %SP, 112;
	add.u64 	%rd2997, %SP, 96;
	add.u64 	%rd2996, %SP, 80;
	add.u64 	%rd2995, %SP, 64;
	add.u64 	%rd2994, %SP, 48;
	add.u64 	%rd2993, %SP, 32;
	add.u64 	%rd2992, %SP, 16;
	add.u64 	%rd2991, %SP, 0;
	sub.s32 	%r1645, %r229, %r16188;
	// Callseq Start 39
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd388;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd2991;
	.param .b64 param2;
	st.param.b64	[param2+0], %rd2992;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd2993;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd2994;
	.param .b64 param5;
	st.param.b64	[param5+0], %rd2995;
	.param .b64 param6;
	st.param.b64	[param6+0], %rd2996;
	.param .b64 param7;
	st.param.b64	[param7+0], %rd2997;
	.param .b64 param8;
	st.param.b64	[param8+0], %rd2998;
	.param .b32 param9;
	st.param.b32	[param9+0], %r1645;
	call.uni 
	sha512_update_128, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7, 
	param8, 
	param9
	);
	
	//{
	}// Callseq End 39
	// Callseq Start 40
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd388;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd294;
	.param .b32 param2;
	st.param.b32	[param2+0], %r144;
	call.uni 
	sha512_update, 
	(
	param0, 
	param1, 
	param2
	);
	
	//{
	}// Callseq End 40
	// Callseq Start 41
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd388;
	call.uni 
	sha512_final, 
	(
	param0
	);
	
	//{
	}// Callseq End 41
	mov.u64 	%rd3026, 0;
	@%p448 bra 	BB5_50;

BB5_49:
	shl.b64 	%rd563, %rd3026, 2;
	add.s64 	%rd564, %rd11, %rd563;
	mov.u32 	%r1646, 0;
	st.local.u32 	[%rd564], %r1646;
	add.s64 	%rd3026, %rd3026, 1;
	setp.lt.u64	%p33, %rd3026, 32;
	@%p33 bra 	BB5_49;

BB5_50:
	mov.u64 	%rd3019, 6620516959819538809;
	mov.u64 	%rd3018, 2270897969802886507;
	mov.u64 	%rd3007, -7276294671716946913;
	mov.u64 	%rd3006, 5840696475078001361;
	mov.u64 	%rd3005, -6534734903238641935;
	mov.u64 	%rd3004, 4354685564936845355;
	mov.u64 	%rd3003, 7640891576956012808;
	mov.u64 	%rd2999, -4942790177534073029;
	ld.local.u64 	%rd565, [%rd389];
	shr.u64 	%rd566, %rd565, 32;
	cvt.u32.u64	%r1647, %rd565;
	cvt.u32.u64	%r1648, %rd566;
	add.s64 	%rd76, %rd11, 4;
	st.local.v2.u32 	[%rd11], {%r1648, %r1647};
	ld.local.u64 	%rd567, [%rd21];
	shr.u64 	%rd568, %rd567, 32;
	add.s64 	%rd77, %rd11, 8;
	cvt.u32.u64	%r1649, %rd567;
	cvt.u32.u64	%r1650, %rd568;
	add.s64 	%rd78, %rd11, 12;
	st.local.v2.u32 	[%rd11+8], {%r1650, %r1649};
	ld.local.u64 	%rd569, [%rd22];
	shr.u64 	%rd570, %rd569, 32;
	add.s64 	%rd79, %rd11, 16;
	cvt.u32.u64	%r1651, %rd569;
	cvt.u32.u64	%r1652, %rd570;
	add.s64 	%rd80, %rd11, 20;
	st.local.v2.u32 	[%rd11+16], {%r1652, %r1651};
	ld.local.u64 	%rd571, [%rd23];
	shr.u64 	%rd572, %rd571, 32;
	add.s64 	%rd81, %rd11, 24;
	cvt.u32.u64	%r1653, %rd571;
	cvt.u32.u64	%r1654, %rd572;
	add.s64 	%rd82, %rd11, 28;
	st.local.v2.u32 	[%rd11+24], {%r1654, %r1653};
	ld.local.u64 	%rd573, [%rd24];
	shr.u64 	%rd574, %rd573, 32;
	add.s64 	%rd83, %rd11, 32;
	cvt.u32.u64	%r1655, %rd573;
	cvt.u32.u64	%r1656, %rd574;
	add.s64 	%rd84, %rd11, 36;
	st.local.v2.u32 	[%rd11+32], {%r1656, %r1655};
	ld.local.u64 	%rd575, [%rd25];
	shr.u64 	%rd576, %rd575, 32;
	add.s64 	%rd85, %rd11, 40;
	cvt.u32.u64	%r1657, %rd575;
	cvt.u32.u64	%r1658, %rd576;
	add.s64 	%rd86, %rd11, 44;
	st.local.v2.u32 	[%rd11+40], {%r1658, %r1657};
	ld.local.u64 	%rd577, [%rd26];
	shr.u64 	%rd578, %rd577, 32;
	add.s64 	%rd87, %rd11, 48;
	cvt.u32.u64	%r1659, %rd577;
	cvt.u32.u64	%r1660, %rd578;
	add.s64 	%rd88, %rd11, 52;
	st.local.v2.u32 	[%rd11+48], {%r1660, %r1659};
	ld.local.u64 	%rd579, [%rd27];
	shr.u64 	%rd580, %rd579, 32;
	add.s64 	%rd89, %rd11, 56;
	cvt.u32.u64	%r1661, %rd579;
	cvt.u32.u64	%r1662, %rd580;
	add.s64 	%rd90, %rd11, 60;
	st.local.v2.u32 	[%rd11+56], {%r1662, %r1661};
	st.local.u64 	[%rd389], %rd3003;
	st.local.u64 	[%rd21], %rd2999;
	st.local.u64 	[%rd22], %rd3004;
	st.local.u64 	[%rd23], %rd3005;
	st.local.u64 	[%rd24], %rd3006;
	st.local.u64 	[%rd25], %rd3007;
	st.local.u64 	[%rd26], %rd3018;
	st.local.u64 	[%rd27], %rd3019;
	mov.u32 	%r16200, 0;
	st.local.u32 	[%rd28], %r16200;
	st.local.u32 	[%rd29], %r16200;
	st.local.u32 	[%rd30], %r16200;
	st.local.u32 	[%rd389+76], %r16200;
	st.local.v2.u32 	[%rd389+80], {%r16200, %r16200};
	st.local.v2.u32 	[%rd389+88], {%r16200, %r16200};
	st.local.v2.u32 	[%rd389+96], {%r16200, %r16200};
	st.local.u32 	[%rd389+192], %r16200;
	st.local.u32 	[%rd31], %r16200;
	st.local.u32 	[%rd32], %r16200;
	st.local.u32 	[%rd33], %r16200;
	st.local.u32 	[%rd34], %r16200;
	st.local.u32 	[%rd35], %r16200;
	st.local.u32 	[%rd36], %r16200;
	st.local.u32 	[%rd37], %r16200;
	st.local.u32 	[%rd38], %r16200;
	st.local.u32 	[%rd39], %r16200;
	st.local.u32 	[%rd40], %r16200;
	st.local.u32 	[%rd41], %r16200;
	st.local.u32 	[%rd42], %r16200;
	st.local.u32 	[%rd43], %r16200;
	st.local.u32 	[%rd44], %r16200;
	st.local.u32 	[%rd45], %r16200;
	st.local.u32 	[%rd46], %r16200;
	st.local.u32 	[%rd47], %r16200;
	st.local.u32 	[%rd48], %r16200;
	st.local.u32 	[%rd49], %r16200;
	st.local.u32 	[%rd50], %r16200;
	st.local.u32 	[%rd51], %r16200;
	st.local.u32 	[%rd52], %r16200;
	// Callseq Start 42
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd388;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd294;
	.param .b32 param2;
	st.param.b32	[param2+0], %r144;
	call.uni 
	sha512_update, 
	(
	param0, 
	param1, 
	param2
	);
	
	//{
	}// Callseq End 42
	// Callseq Start 43
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd388;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd295;
	.param .b32 param2;
	st.param.b32	[param2+0], %r229;
	call.uni 
	sha512_update, 
	(
	param0, 
	param1, 
	param2
	);
	
	//{
	}// Callseq End 43
	setp.lt.s32	%p34, %r144, 65;
	mov.u32 	%r16195, %r144;
	@%p34 bra 	BB5_60;

	add.s32 	%r1665, %r144, -65;
	shr.u32 	%r1666, %r1665, 6;
	add.s32 	%r72, %r1666, 1;
	and.b32  	%r73, %r72, 3;
	setp.eq.s32	%p35, %r73, 0;
	mov.u32 	%r16195, 0;
	mov.u32 	%r16192, %r144;
	@%p35 bra 	BB5_57;

	setp.eq.s32	%p36, %r73, 1;
	mov.u32 	%r16191, %r144;
	@%p36 bra 	BB5_56;

	setp.eq.s32	%p37, %r73, 2;
	mov.u32 	%r16190, %r144;
	@%p37 bra 	BB5_55;

	mov.u32 	%r1667, 64;
	// Callseq Start 44
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd388;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd296;
	.param .b32 param2;
	st.param.b32	[param2+0], %r1667;
	call.uni 
	sha512_update, 
	(
	param0, 
	param1, 
	param2
	);
	
	//{
	}// Callseq End 44
	add.s32 	%r16190, %r144, -64;

BB5_55:
	mov.u32 	%r1668, 64;
	// Callseq Start 45
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd388;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd296;
	.param .b32 param2;
	st.param.b32	[param2+0], %r1668;
	call.uni 
	sha512_update, 
	(
	param0, 
	param1, 
	param2
	);
	
	//{
	}// Callseq End 45
	add.s32 	%r16191, %r16190, -64;

BB5_56:
	mov.u32 	%r1669, 64;
	// Callseq Start 46
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd388;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd296;
	.param .b32 param2;
	st.param.b32	[param2+0], %r1669;
	call.uni 
	sha512_update, 
	(
	param0, 
	param1, 
	param2
	);
	
	//{
	}// Callseq End 46
	add.s32 	%r16192, %r16191, -64;
	mov.u32 	%r16195, %r16192;

BB5_57:
	setp.lt.u32	%p38, %r72, 4;
	@%p38 bra 	BB5_60;

	mov.u32 	%r16195, %r16192;

BB5_59:
	mov.u32 	%r1670, 64;
	// Callseq Start 47
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd388;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd296;
	.param .b32 param2;
	st.param.b32	[param2+0], %r1670;
	call.uni 
	sha512_update, 
	(
	param0, 
	param1, 
	param2
	);
	
	//{
	}// Callseq End 47
	// Callseq Start 48
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd388;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd296;
	.param .b32 param2;
	st.param.b32	[param2+0], %r1670;
	call.uni 
	sha512_update, 
	(
	param0, 
	param1, 
	param2
	);
	
	//{
	}// Callseq End 48
	// Callseq Start 49
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd388;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd296;
	.param .b32 param2;
	st.param.b32	[param2+0], %r1670;
	call.uni 
	sha512_update, 
	(
	param0, 
	param1, 
	param2
	);
	
	//{
	}// Callseq End 49
	// Callseq Start 50
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd388;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd296;
	.param .b32 param2;
	st.param.b32	[param2+0], %r1670;
	call.uni 
	sha512_update, 
	(
	param0, 
	param1, 
	param2
	);
	
	//{
	}// Callseq End 50
	add.s32 	%r16195, %r16195, -256;
	setp.gt.s32	%p39, %r16195, 64;
	@%p39 bra 	BB5_59;

BB5_60:
	mov.pred 	%p449, 0;
	add.u64 	%rd600, %SP, 976;
	cvta.to.local.u64 	%rd91, %rd600;
	mov.u64 	%rd3027, 0;
	@%p449 bra 	BB5_62;

BB5_61:
	shl.b64 	%rd601, %rd3027, 2;
	add.s64 	%rd602, %rd91, %rd601;
	st.local.u32 	[%rd602], %r16200;
	add.s64 	%rd3027, %rd3027, 1;
	setp.lt.u64	%p41, %rd3027, 32;
	@%p41 bra 	BB5_61;

BB5_62:
	ld.local.u32 	%r84, [%rd11];
	st.local.u32 	[%rd91], %r84;
	ld.local.u32 	%r85, [%rd76];
	add.s64 	%rd94, %rd91, 4;
	st.local.u32 	[%rd91+4], %r85;
	ld.local.u32 	%r86, [%rd77];
	add.s64 	%rd95, %rd91, 8;
	st.local.u32 	[%rd91+8], %r86;
	ld.local.u32 	%r87, [%rd78];
	add.s64 	%rd96, %rd91, 12;
	st.local.u32 	[%rd91+12], %r87;
	ld.local.u32 	%r88, [%rd79];
	add.s64 	%rd97, %rd91, 16;
	st.local.u32 	[%rd91+16], %r88;
	ld.local.u32 	%r89, [%rd80];
	add.s64 	%rd98, %rd91, 20;
	st.local.u32 	[%rd91+20], %r89;
	ld.local.u32 	%r90, [%rd81];
	add.s64 	%rd99, %rd91, 24;
	st.local.u32 	[%rd91+24], %r90;
	ld.local.u32 	%r91, [%rd82];
	add.s64 	%rd100, %rd91, 28;
	st.local.u32 	[%rd91+28], %r91;
	ld.local.u32 	%r92, [%rd83];
	add.s64 	%rd101, %rd91, 32;
	st.local.u32 	[%rd91+32], %r92;
	ld.local.u32 	%r93, [%rd84];
	add.s64 	%rd102, %rd91, 36;
	st.local.u32 	[%rd91+36], %r93;
	ld.local.u32 	%r94, [%rd85];
	add.s64 	%rd103, %rd91, 40;
	st.local.u32 	[%rd91+40], %r94;
	ld.local.u32 	%r95, [%rd86];
	add.s64 	%rd104, %rd91, 44;
	st.local.u32 	[%rd91+44], %r95;
	ld.local.u32 	%r96, [%rd87];
	add.s64 	%rd105, %rd91, 48;
	st.local.u32 	[%rd91+48], %r96;
	ld.local.u32 	%r97, [%rd88];
	add.s64 	%rd106, %rd91, 52;
	st.local.u32 	[%rd91+52], %r97;
	ld.local.u32 	%r98, [%rd89];
	add.s64 	%rd107, %rd91, 56;
	st.local.u32 	[%rd91+56], %r98;
	ld.local.u32 	%r99, [%rd90];
	add.s64 	%rd108, %rd91, 60;
	st.local.u32 	[%rd91+60], %r99;
	setp.gt.s32	%p42, %r16195, 31;
	@%p42 bra 	BB5_126;

	setp.gt.s32	%p90, %r16195, 15;
	@%p90 bra 	BB5_95;

	setp.gt.s32	%p114, %r16195, 7;
	@%p114 bra 	BB5_80;

	setp.gt.s32	%p126, %r16195, 3;
	@%p126 bra 	BB5_73;

	setp.gt.s32	%p132, %r16195, 1;
	@%p132 bra 	BB5_70;

	setp.eq.s32	%p135, %r16195, 0;
	@%p135 bra 	BB5_220;
	bra.uni 	BB5_68;

BB5_220:
	mov.u32 	%r1780, 0;
	st.local.u32 	[%rd91], %r1780;
	st.local.u32 	[%rd94], %r1780;
	st.local.u32 	[%rd95], %r1780;
	st.local.u32 	[%rd96], %r1780;
	st.local.u32 	[%rd97], %r1780;
	st.local.u32 	[%rd98], %r1780;
	st.local.u32 	[%rd99], %r1780;
	st.local.u32 	[%rd100], %r1780;
	st.local.u32 	[%rd101], %r1780;
	st.local.u32 	[%rd102], %r1780;
	st.local.u32 	[%rd103], %r1780;
	st.local.u32 	[%rd104], %r1780;
	st.local.u32 	[%rd105], %r1780;
	st.local.u32 	[%rd106], %r1780;
	st.local.u32 	[%rd107], %r1780;
	st.local.u32 	[%rd108], %r1780;
	bra.uni 	BB5_221;

BB5_126:
	setp.gt.s32	%p43, %r16195, 47;
	@%p43 bra 	BB5_158;

	setp.gt.s32	%p67, %r16195, 39;
	@%p67 bra 	BB5_143;

	setp.gt.s32	%p79, %r16195, 35;
	@%p79 bra 	BB5_136;

	setp.gt.s32	%p85, %r16195, 33;
	@%p85 bra 	BB5_133;

	setp.eq.s32	%p88, %r16195, 32;
	@%p88 bra 	BB5_204;
	bra.uni 	BB5_131;

BB5_204:
	st.local.u32 	[%rd101], %r16200;
	bra.uni 	BB5_202;

BB5_95:
	setp.gt.s32	%p91, %r16195, 23;
	@%p91 bra 	BB5_111;

	setp.gt.s32	%p103, %r16195, 19;
	@%p103 bra 	BB5_104;

	setp.gt.s32	%p109, %r16195, 17;
	@%p109 bra 	BB5_101;

	setp.eq.s32	%p112, %r16195, 16;
	@%p112 bra 	BB5_212;
	bra.uni 	BB5_99;

BB5_212:
	mov.u32 	%r1752, 0;
	st.local.u32 	[%rd97], %r1752;
	st.local.u32 	[%rd98], %r1752;
	st.local.u32 	[%rd99], %r1752;
	st.local.u32 	[%rd100], %r1752;
	st.local.u32 	[%rd101], %r1752;
	st.local.u32 	[%rd102], %r1752;
	st.local.u32 	[%rd103], %r1752;
	st.local.u32 	[%rd104], %r1752;
	st.local.u32 	[%rd105], %r1752;
	st.local.u32 	[%rd106], %r1752;
	st.local.u32 	[%rd107], %r1752;
	st.local.u32 	[%rd108], %r1752;
	bra.uni 	BB5_221;

BB5_158:
	setp.gt.s32	%p44, %r16195, 55;
	@%p44 bra 	BB5_174;

	setp.gt.s32	%p56, %r16195, 51;
	@%p56 bra 	BB5_167;

	setp.gt.s32	%p62, %r16195, 49;
	@%p62 bra 	BB5_164;

	setp.eq.s32	%p65, %r16195, 48;
	@%p65 bra 	BB5_199;

	setp.eq.s32	%p66, %r16195, 49;
	@%p66 bra 	BB5_163;
	bra.uni 	BB5_221;

BB5_163:
	and.b32  	%r1694, %r96, -16777216;
	st.local.u32 	[%rd105], %r1694;
	bra.uni 	BB5_194;

BB5_80:
	setp.gt.s32	%p115, %r16195, 11;
	@%p115 bra 	BB5_88;

	setp.gt.s32	%p121, %r16195, 9;
	@%p121 bra 	BB5_85;

	setp.eq.s32	%p124, %r16195, 8;
	@%p124 bra 	BB5_216;
	bra.uni 	BB5_83;

BB5_216:
	mov.u32 	%r1766, 0;
	st.local.u32 	[%rd95], %r1766;
	st.local.u32 	[%rd96], %r1766;
	st.local.u32 	[%rd97], %r1766;
	st.local.u32 	[%rd98], %r1766;
	st.local.u32 	[%rd99], %r1766;
	st.local.u32 	[%rd100], %r1766;
	st.local.u32 	[%rd101], %r1766;
	st.local.u32 	[%rd102], %r1766;
	st.local.u32 	[%rd103], %r1766;
	st.local.u32 	[%rd104], %r1766;
	st.local.u32 	[%rd105], %r1766;
	st.local.u32 	[%rd106], %r1766;
	st.local.u32 	[%rd107], %r1766;
	st.local.u32 	[%rd108], %r1766;
	bra.uni 	BB5_221;

BB5_143:
	setp.gt.s32	%p68, %r16195, 43;
	@%p68 bra 	BB5_151;

	setp.gt.s32	%p74, %r16195, 41;
	@%p74 bra 	BB5_148;

	setp.eq.s32	%p77, %r16195, 40;
	@%p77 bra 	BB5_203;

	setp.eq.s32	%p78, %r16195, 41;
	@%p78 bra 	BB5_147;
	bra.uni 	BB5_221;

BB5_147:
	and.b32  	%r1708, %r94, -16777216;
	st.local.u32 	[%rd103], %r1708;
	bra.uni 	BB5_198;

BB5_111:
	setp.gt.s32	%p92, %r16195, 27;
	@%p92 bra 	BB5_119;

	setp.gt.s32	%p98, %r16195, 25;
	@%p98 bra 	BB5_116;

	setp.eq.s32	%p101, %r16195, 24;
	@%p101 bra 	BB5_208;
	bra.uni 	BB5_114;

BB5_208:
	mov.u32 	%r1738, 0;
	st.local.u32 	[%rd99], %r1738;
	st.local.u32 	[%rd100], %r1738;
	st.local.u32 	[%rd101], %r1738;
	st.local.u32 	[%rd102], %r1738;
	st.local.u32 	[%rd103], %r1738;
	st.local.u32 	[%rd104], %r1738;
	st.local.u32 	[%rd105], %r1738;
	st.local.u32 	[%rd106], %r1738;
	st.local.u32 	[%rd107], %r1738;
	st.local.u32 	[%rd108], %r1738;
	bra.uni 	BB5_221;

BB5_174:
	setp.gt.s32	%p45, %r16195, 59;
	@%p45 bra 	BB5_182;

	setp.gt.s32	%p51, %r16195, 57;
	@%p51 bra 	BB5_179;

	setp.eq.s32	%p54, %r16195, 56;
	@%p54 bra 	BB5_195;

	setp.eq.s32	%p55, %r16195, 57;
	@%p55 bra 	BB5_178;
	bra.uni 	BB5_221;

BB5_178:
	and.b32  	%r1680, %r98, -16777216;
	st.local.u32 	[%rd107], %r1680;
	st.local.u32 	[%rd108], %r16200;
	bra.uni 	BB5_221;

BB5_73:
	setp.gt.s32	%p127, %r16195, 5;
	@%p127 bra 	BB5_77;

	setp.eq.s32	%p130, %r16195, 4;
	@%p130 bra 	BB5_218;
	bra.uni 	BB5_75;

BB5_218:
	mov.u32 	%r1773, 0;
	st.local.u32 	[%rd94], %r1773;
	st.local.u32 	[%rd95], %r1773;
	st.local.u32 	[%rd96], %r1773;
	st.local.u32 	[%rd97], %r1773;
	st.local.u32 	[%rd98], %r1773;
	st.local.u32 	[%rd99], %r1773;
	st.local.u32 	[%rd100], %r1773;
	st.local.u32 	[%rd101], %r1773;
	st.local.u32 	[%rd102], %r1773;
	st.local.u32 	[%rd103], %r1773;
	st.local.u32 	[%rd104], %r1773;
	st.local.u32 	[%rd105], %r1773;
	st.local.u32 	[%rd106], %r1773;
	st.local.u32 	[%rd107], %r1773;
	st.local.u32 	[%rd108], %r1773;
	bra.uni 	BB5_221;

BB5_136:
	setp.gt.s32	%p80, %r16195, 37;
	@%p80 bra 	BB5_140;

	setp.eq.s32	%p83, %r16195, 36;
	@%p83 bra 	BB5_202;

	setp.eq.s32	%p84, %r16195, 37;
	@%p84 bra 	BB5_139;
	bra.uni 	BB5_221;

BB5_139:
	and.b32  	%r1715, %r93, -16777216;
	st.local.u32 	[%rd102], %r1715;
	bra.uni 	BB5_203;

BB5_104:
	setp.gt.s32	%p104, %r16195, 21;
	@%p104 bra 	BB5_108;

	setp.eq.s32	%p107, %r16195, 20;
	@%p107 bra 	BB5_210;
	bra.uni 	BB5_106;

BB5_210:
	mov.u32 	%r1745, 0;
	st.local.u32 	[%rd98], %r1745;
	st.local.u32 	[%rd99], %r1745;
	st.local.u32 	[%rd100], %r1745;
	st.local.u32 	[%rd101], %r1745;
	st.local.u32 	[%rd102], %r1745;
	st.local.u32 	[%rd103], %r1745;
	st.local.u32 	[%rd104], %r1745;
	st.local.u32 	[%rd105], %r1745;
	st.local.u32 	[%rd106], %r1745;
	st.local.u32 	[%rd107], %r1745;
	st.local.u32 	[%rd108], %r1745;
	bra.uni 	BB5_221;

BB5_167:
	setp.gt.s32	%p57, %r16195, 53;
	@%p57 bra 	BB5_171;

	setp.eq.s32	%p60, %r16195, 52;
	@%p60 bra 	BB5_194;

	setp.eq.s32	%p61, %r16195, 53;
	@%p61 bra 	BB5_170;
	bra.uni 	BB5_221;

BB5_170:
	and.b32  	%r1687, %r97, -16777216;
	st.local.u32 	[%rd106], %r1687;
	bra.uni 	BB5_195;

BB5_88:
	setp.gt.s32	%p116, %r16195, 13;
	@%p116 bra 	BB5_92;

	setp.eq.s32	%p119, %r16195, 12;
	@%p119 bra 	BB5_214;
	bra.uni 	BB5_90;

BB5_214:
	mov.u32 	%r1759, 0;
	st.local.u32 	[%rd96], %r1759;
	st.local.u32 	[%rd97], %r1759;
	st.local.u32 	[%rd98], %r1759;
	st.local.u32 	[%rd99], %r1759;
	st.local.u32 	[%rd100], %r1759;
	st.local.u32 	[%rd101], %r1759;
	st.local.u32 	[%rd102], %r1759;
	st.local.u32 	[%rd103], %r1759;
	st.local.u32 	[%rd104], %r1759;
	st.local.u32 	[%rd105], %r1759;
	st.local.u32 	[%rd106], %r1759;
	st.local.u32 	[%rd107], %r1759;
	st.local.u32 	[%rd108], %r1759;
	bra.uni 	BB5_221;

BB5_151:
	setp.gt.s32	%p69, %r16195, 45;
	@%p69 bra 	BB5_155;

	setp.eq.s32	%p72, %r16195, 44;
	@%p72 bra 	BB5_198;

	setp.eq.s32	%p73, %r16195, 45;
	@%p73 bra 	BB5_154;
	bra.uni 	BB5_221;

BB5_154:
	and.b32  	%r1701, %r95, -16777216;
	st.local.u32 	[%rd104], %r1701;
	bra.uni 	BB5_199;

BB5_119:
	setp.gt.s32	%p93, %r16195, 29;
	@%p93 bra 	BB5_123;

	setp.eq.s32	%p96, %r16195, 28;
	@%p96 bra 	BB5_206;
	bra.uni 	BB5_121;

BB5_206:
	mov.u32 	%r1731, 0;
	st.local.u32 	[%rd100], %r1731;
	st.local.u32 	[%rd101], %r1731;
	st.local.u32 	[%rd102], %r1731;
	st.local.u32 	[%rd103], %r1731;
	st.local.u32 	[%rd104], %r1731;
	st.local.u32 	[%rd105], %r1731;
	st.local.u32 	[%rd106], %r1731;
	st.local.u32 	[%rd107], %r1731;
	st.local.u32 	[%rd108], %r1731;
	bra.uni 	BB5_221;

BB5_182:
	setp.gt.s32	%p46, %r16195, 61;
	@%p46 bra 	BB5_186;

	setp.eq.s32	%p49, %r16195, 60;
	@%p49 bra 	BB5_190;
	bra.uni 	BB5_184;

BB5_190:
	st.local.u32 	[%rd108], %r16200;
	bra.uni 	BB5_221;

BB5_70:
	setp.eq.s32	%p133, %r16195, 2;
	@%p133 bra 	BB5_219;
	bra.uni 	BB5_71;

BB5_219:
	and.b32  	%r1776, %r84, -65536;
	st.local.u32 	[%rd91], %r1776;
	mov.u32 	%r1777, 0;
	st.local.u32 	[%rd94], %r1777;
	st.local.u32 	[%rd95], %r1777;
	st.local.u32 	[%rd96], %r1777;
	st.local.u32 	[%rd97], %r1777;
	st.local.u32 	[%rd98], %r1777;
	st.local.u32 	[%rd99], %r1777;
	st.local.u32 	[%rd100], %r1777;
	st.local.u32 	[%rd101], %r1777;
	st.local.u32 	[%rd102], %r1777;
	st.local.u32 	[%rd103], %r1777;
	st.local.u32 	[%rd104], %r1777;
	st.local.u32 	[%rd105], %r1777;
	st.local.u32 	[%rd106], %r1777;
	st.local.u32 	[%rd107], %r1777;
	st.local.u32 	[%rd108], %r1777;
	bra.uni 	BB5_221;

BB5_133:
	setp.eq.s32	%p86, %r16195, 34;
	@%p86 bra 	BB5_201;
	bra.uni 	BB5_134;

BB5_201:
	and.b32  	%r1720, %r92, -65536;
	st.local.u32 	[%rd101], %r1720;
	bra.uni 	BB5_202;

BB5_101:
	setp.eq.s32	%p110, %r16195, 18;
	@%p110 bra 	BB5_211;
	bra.uni 	BB5_102;

BB5_211:
	and.b32  	%r1748, %r88, -65536;
	st.local.u32 	[%rd97], %r1748;
	mov.u32 	%r1749, 0;
	st.local.u32 	[%rd98], %r1749;
	st.local.u32 	[%rd99], %r1749;
	st.local.u32 	[%rd100], %r1749;
	st.local.u32 	[%rd101], %r1749;
	st.local.u32 	[%rd102], %r1749;
	st.local.u32 	[%rd103], %r1749;
	st.local.u32 	[%rd104], %r1749;
	st.local.u32 	[%rd105], %r1749;
	st.local.u32 	[%rd106], %r1749;
	st.local.u32 	[%rd107], %r1749;
	st.local.u32 	[%rd108], %r1749;
	bra.uni 	BB5_221;

BB5_164:
	setp.eq.s32	%p63, %r16195, 50;
	@%p63 bra 	BB5_193;
	bra.uni 	BB5_165;

BB5_193:
	and.b32  	%r1692, %r96, -65536;
	st.local.u32 	[%rd105], %r1692;
	bra.uni 	BB5_194;

BB5_85:
	setp.eq.s32	%p122, %r16195, 10;
	@%p122 bra 	BB5_215;
	bra.uni 	BB5_86;

BB5_215:
	and.b32  	%r1762, %r86, -65536;
	st.local.u32 	[%rd95], %r1762;
	mov.u32 	%r1763, 0;
	st.local.u32 	[%rd96], %r1763;
	st.local.u32 	[%rd97], %r1763;
	st.local.u32 	[%rd98], %r1763;
	st.local.u32 	[%rd99], %r1763;
	st.local.u32 	[%rd100], %r1763;
	st.local.u32 	[%rd101], %r1763;
	st.local.u32 	[%rd102], %r1763;
	st.local.u32 	[%rd103], %r1763;
	st.local.u32 	[%rd104], %r1763;
	st.local.u32 	[%rd105], %r1763;
	st.local.u32 	[%rd106], %r1763;
	st.local.u32 	[%rd107], %r1763;
	st.local.u32 	[%rd108], %r1763;
	bra.uni 	BB5_221;

BB5_148:
	setp.eq.s32	%p75, %r16195, 42;
	@%p75 bra 	BB5_197;
	bra.uni 	BB5_149;

BB5_197:
	and.b32  	%r1706, %r94, -65536;
	st.local.u32 	[%rd103], %r1706;
	bra.uni 	BB5_198;

BB5_116:
	setp.eq.s32	%p99, %r16195, 26;
	@%p99 bra 	BB5_207;
	bra.uni 	BB5_117;

BB5_207:
	and.b32  	%r1734, %r90, -65536;
	st.local.u32 	[%rd99], %r1734;
	mov.u32 	%r1735, 0;
	st.local.u32 	[%rd100], %r1735;
	st.local.u32 	[%rd101], %r1735;
	st.local.u32 	[%rd102], %r1735;
	st.local.u32 	[%rd103], %r1735;
	st.local.u32 	[%rd104], %r1735;
	st.local.u32 	[%rd105], %r1735;
	st.local.u32 	[%rd106], %r1735;
	st.local.u32 	[%rd107], %r1735;
	st.local.u32 	[%rd108], %r1735;
	bra.uni 	BB5_221;

BB5_179:
	setp.eq.s32	%p52, %r16195, 58;
	@%p52 bra 	BB5_191;
	bra.uni 	BB5_180;

BB5_191:
	and.b32  	%r1678, %r98, -65536;
	st.local.u32 	[%rd107], %r1678;
	st.local.u32 	[%rd108], %r16200;
	bra.uni 	BB5_221;

BB5_77:
	setp.eq.s32	%p128, %r16195, 6;
	@%p128 bra 	BB5_217;
	bra.uni 	BB5_78;

BB5_217:
	and.b32  	%r1769, %r85, -65536;
	st.local.u32 	[%rd94], %r1769;
	mov.u32 	%r1770, 0;
	st.local.u32 	[%rd95], %r1770;
	st.local.u32 	[%rd96], %r1770;
	st.local.u32 	[%rd97], %r1770;
	st.local.u32 	[%rd98], %r1770;
	st.local.u32 	[%rd99], %r1770;
	st.local.u32 	[%rd100], %r1770;
	st.local.u32 	[%rd101], %r1770;
	st.local.u32 	[%rd102], %r1770;
	st.local.u32 	[%rd103], %r1770;
	st.local.u32 	[%rd104], %r1770;
	st.local.u32 	[%rd105], %r1770;
	st.local.u32 	[%rd106], %r1770;
	st.local.u32 	[%rd107], %r1770;
	st.local.u32 	[%rd108], %r1770;
	bra.uni 	BB5_221;

BB5_140:
	setp.eq.s32	%p81, %r16195, 38;
	@%p81 bra 	BB5_200;
	bra.uni 	BB5_141;

BB5_200:
	and.b32  	%r1713, %r93, -65536;
	st.local.u32 	[%rd102], %r1713;
	bra.uni 	BB5_203;

BB5_108:
	setp.eq.s32	%p105, %r16195, 22;
	@%p105 bra 	BB5_209;
	bra.uni 	BB5_109;

BB5_209:
	and.b32  	%r1741, %r89, -65536;
	st.local.u32 	[%rd98], %r1741;
	mov.u32 	%r1742, 0;
	st.local.u32 	[%rd99], %r1742;
	st.local.u32 	[%rd100], %r1742;
	st.local.u32 	[%rd101], %r1742;
	st.local.u32 	[%rd102], %r1742;
	st.local.u32 	[%rd103], %r1742;
	st.local.u32 	[%rd104], %r1742;
	st.local.u32 	[%rd105], %r1742;
	st.local.u32 	[%rd106], %r1742;
	st.local.u32 	[%rd107], %r1742;
	st.local.u32 	[%rd108], %r1742;
	bra.uni 	BB5_221;

BB5_171:
	setp.eq.s32	%p58, %r16195, 54;
	@%p58 bra 	BB5_192;
	bra.uni 	BB5_172;

BB5_192:
	and.b32  	%r1685, %r97, -65536;
	st.local.u32 	[%rd106], %r1685;
	bra.uni 	BB5_195;

BB5_92:
	setp.eq.s32	%p117, %r16195, 14;
	@%p117 bra 	BB5_213;
	bra.uni 	BB5_93;

BB5_213:
	and.b32  	%r1755, %r87, -65536;
	st.local.u32 	[%rd96], %r1755;
	mov.u32 	%r1756, 0;
	st.local.u32 	[%rd97], %r1756;
	st.local.u32 	[%rd98], %r1756;
	st.local.u32 	[%rd99], %r1756;
	st.local.u32 	[%rd100], %r1756;
	st.local.u32 	[%rd101], %r1756;
	st.local.u32 	[%rd102], %r1756;
	st.local.u32 	[%rd103], %r1756;
	st.local.u32 	[%rd104], %r1756;
	st.local.u32 	[%rd105], %r1756;
	st.local.u32 	[%rd106], %r1756;
	st.local.u32 	[%rd107], %r1756;
	st.local.u32 	[%rd108], %r1756;
	bra.uni 	BB5_221;

BB5_155:
	setp.eq.s32	%p70, %r16195, 46;
	@%p70 bra 	BB5_196;
	bra.uni 	BB5_156;

BB5_196:
	and.b32  	%r1699, %r95, -65536;
	st.local.u32 	[%rd104], %r1699;
	bra.uni 	BB5_199;

BB5_123:
	setp.eq.s32	%p94, %r16195, 30;
	@%p94 bra 	BB5_205;
	bra.uni 	BB5_124;

BB5_205:
	and.b32  	%r1727, %r91, -65536;
	st.local.u32 	[%rd100], %r1727;
	mov.u32 	%r1728, 0;
	st.local.u32 	[%rd101], %r1728;
	st.local.u32 	[%rd102], %r1728;
	st.local.u32 	[%rd103], %r1728;
	st.local.u32 	[%rd104], %r1728;
	st.local.u32 	[%rd105], %r1728;
	st.local.u32 	[%rd106], %r1728;
	st.local.u32 	[%rd107], %r1728;
	st.local.u32 	[%rd108], %r1728;
	bra.uni 	BB5_221;

BB5_186:
	setp.eq.s32	%p47, %r16195, 62;
	@%p47 bra 	BB5_189;
	bra.uni 	BB5_187;

BB5_189:
	and.b32  	%r1673, %r99, -65536;
	st.local.u32 	[%rd108], %r1673;
	bra.uni 	BB5_221;

BB5_68:
	setp.eq.s32	%p136, %r16195, 1;
	@%p136 bra 	BB5_69;
	bra.uni 	BB5_221;

BB5_69:
	and.b32  	%r1778, %r84, -16777216;
	st.local.u32 	[%rd91], %r1778;
	mov.u32 	%r1779, 0;
	st.local.u32 	[%rd94], %r1779;
	st.local.u32 	[%rd95], %r1779;
	st.local.u32 	[%rd96], %r1779;
	st.local.u32 	[%rd97], %r1779;
	st.local.u32 	[%rd98], %r1779;
	st.local.u32 	[%rd99], %r1779;
	st.local.u32 	[%rd100], %r1779;
	st.local.u32 	[%rd101], %r1779;
	st.local.u32 	[%rd102], %r1779;
	st.local.u32 	[%rd103], %r1779;
	st.local.u32 	[%rd104], %r1779;
	st.local.u32 	[%rd105], %r1779;
	st.local.u32 	[%rd106], %r1779;
	st.local.u32 	[%rd107], %r1779;
	st.local.u32 	[%rd108], %r1779;
	bra.uni 	BB5_221;

BB5_131:
	setp.eq.s32	%p89, %r16195, 33;
	@%p89 bra 	BB5_132;
	bra.uni 	BB5_221;

BB5_132:
	and.b32  	%r1722, %r92, -16777216;
	st.local.u32 	[%rd101], %r1722;
	bra.uni 	BB5_202;

BB5_99:
	setp.eq.s32	%p113, %r16195, 17;
	@%p113 bra 	BB5_100;
	bra.uni 	BB5_221;

BB5_100:
	and.b32  	%r1750, %r88, -16777216;
	st.local.u32 	[%rd97], %r1750;
	mov.u32 	%r1751, 0;
	st.local.u32 	[%rd98], %r1751;
	st.local.u32 	[%rd99], %r1751;
	st.local.u32 	[%rd100], %r1751;
	st.local.u32 	[%rd101], %r1751;
	st.local.u32 	[%rd102], %r1751;
	st.local.u32 	[%rd103], %r1751;
	st.local.u32 	[%rd104], %r1751;
	st.local.u32 	[%rd105], %r1751;
	st.local.u32 	[%rd106], %r1751;
	st.local.u32 	[%rd107], %r1751;
	st.local.u32 	[%rd108], %r1751;
	bra.uni 	BB5_221;

BB5_83:
	setp.eq.s32	%p125, %r16195, 9;
	@%p125 bra 	BB5_84;
	bra.uni 	BB5_221;

BB5_84:
	and.b32  	%r1764, %r86, -16777216;
	st.local.u32 	[%rd95], %r1764;
	mov.u32 	%r1765, 0;
	st.local.u32 	[%rd96], %r1765;
	st.local.u32 	[%rd97], %r1765;
	st.local.u32 	[%rd98], %r1765;
	st.local.u32 	[%rd99], %r1765;
	st.local.u32 	[%rd100], %r1765;
	st.local.u32 	[%rd101], %r1765;
	st.local.u32 	[%rd102], %r1765;
	st.local.u32 	[%rd103], %r1765;
	st.local.u32 	[%rd104], %r1765;
	st.local.u32 	[%rd105], %r1765;
	st.local.u32 	[%rd106], %r1765;
	st.local.u32 	[%rd107], %r1765;
	st.local.u32 	[%rd108], %r1765;
	bra.uni 	BB5_221;

BB5_114:
	setp.eq.s32	%p102, %r16195, 25;
	@%p102 bra 	BB5_115;
	bra.uni 	BB5_221;

BB5_115:
	and.b32  	%r1736, %r90, -16777216;
	st.local.u32 	[%rd99], %r1736;
	mov.u32 	%r1737, 0;
	st.local.u32 	[%rd100], %r1737;
	st.local.u32 	[%rd101], %r1737;
	st.local.u32 	[%rd102], %r1737;
	st.local.u32 	[%rd103], %r1737;
	st.local.u32 	[%rd104], %r1737;
	st.local.u32 	[%rd105], %r1737;
	st.local.u32 	[%rd106], %r1737;
	st.local.u32 	[%rd107], %r1737;
	st.local.u32 	[%rd108], %r1737;
	bra.uni 	BB5_221;

BB5_75:
	setp.eq.s32	%p131, %r16195, 5;
	@%p131 bra 	BB5_76;
	bra.uni 	BB5_221;

BB5_76:
	and.b32  	%r1771, %r85, -16777216;
	st.local.u32 	[%rd94], %r1771;
	mov.u32 	%r1772, 0;
	st.local.u32 	[%rd95], %r1772;
	st.local.u32 	[%rd96], %r1772;
	st.local.u32 	[%rd97], %r1772;
	st.local.u32 	[%rd98], %r1772;
	st.local.u32 	[%rd99], %r1772;
	st.local.u32 	[%rd100], %r1772;
	st.local.u32 	[%rd101], %r1772;
	st.local.u32 	[%rd102], %r1772;
	st.local.u32 	[%rd103], %r1772;
	st.local.u32 	[%rd104], %r1772;
	st.local.u32 	[%rd105], %r1772;
	st.local.u32 	[%rd106], %r1772;
	st.local.u32 	[%rd107], %r1772;
	st.local.u32 	[%rd108], %r1772;
	bra.uni 	BB5_221;

BB5_106:
	setp.eq.s32	%p108, %r16195, 21;
	@%p108 bra 	BB5_107;
	bra.uni 	BB5_221;

BB5_107:
	and.b32  	%r1743, %r89, -16777216;
	st.local.u32 	[%rd98], %r1743;
	mov.u32 	%r1744, 0;
	st.local.u32 	[%rd99], %r1744;
	st.local.u32 	[%rd100], %r1744;
	st.local.u32 	[%rd101], %r1744;
	st.local.u32 	[%rd102], %r1744;
	st.local.u32 	[%rd103], %r1744;
	st.local.u32 	[%rd104], %r1744;
	st.local.u32 	[%rd105], %r1744;
	st.local.u32 	[%rd106], %r1744;
	st.local.u32 	[%rd107], %r1744;
	st.local.u32 	[%rd108], %r1744;
	bra.uni 	BB5_221;

BB5_90:
	setp.eq.s32	%p120, %r16195, 13;
	@%p120 bra 	BB5_91;
	bra.uni 	BB5_221;

BB5_91:
	and.b32  	%r1757, %r87, -16777216;
	st.local.u32 	[%rd96], %r1757;
	mov.u32 	%r1758, 0;
	st.local.u32 	[%rd97], %r1758;
	st.local.u32 	[%rd98], %r1758;
	st.local.u32 	[%rd99], %r1758;
	st.local.u32 	[%rd100], %r1758;
	st.local.u32 	[%rd101], %r1758;
	st.local.u32 	[%rd102], %r1758;
	st.local.u32 	[%rd103], %r1758;
	st.local.u32 	[%rd104], %r1758;
	st.local.u32 	[%rd105], %r1758;
	st.local.u32 	[%rd106], %r1758;
	st.local.u32 	[%rd107], %r1758;
	st.local.u32 	[%rd108], %r1758;
	bra.uni 	BB5_221;

BB5_121:
	setp.eq.s32	%p97, %r16195, 29;
	@%p97 bra 	BB5_122;
	bra.uni 	BB5_221;

BB5_122:
	and.b32  	%r1729, %r91, -16777216;
	st.local.u32 	[%rd100], %r1729;
	mov.u32 	%r1730, 0;
	st.local.u32 	[%rd101], %r1730;
	st.local.u32 	[%rd102], %r1730;
	st.local.u32 	[%rd103], %r1730;
	st.local.u32 	[%rd104], %r1730;
	st.local.u32 	[%rd105], %r1730;
	st.local.u32 	[%rd106], %r1730;
	st.local.u32 	[%rd107], %r1730;
	st.local.u32 	[%rd108], %r1730;
	bra.uni 	BB5_221;

BB5_184:
	setp.eq.s32	%p50, %r16195, 61;
	@%p50 bra 	BB5_185;
	bra.uni 	BB5_221;

BB5_185:
	and.b32  	%r1674, %r99, -16777216;
	st.local.u32 	[%rd108], %r1674;
	bra.uni 	BB5_221;

BB5_71:
	setp.eq.s32	%p134, %r16195, 3;
	@%p134 bra 	BB5_72;
	bra.uni 	BB5_221;

BB5_72:
	and.b32  	%r1774, %r84, -256;
	st.local.u32 	[%rd91], %r1774;
	mov.u32 	%r1775, 0;
	st.local.u32 	[%rd94], %r1775;
	st.local.u32 	[%rd95], %r1775;
	st.local.u32 	[%rd96], %r1775;
	st.local.u32 	[%rd97], %r1775;
	st.local.u32 	[%rd98], %r1775;
	st.local.u32 	[%rd99], %r1775;
	st.local.u32 	[%rd100], %r1775;
	st.local.u32 	[%rd101], %r1775;
	st.local.u32 	[%rd102], %r1775;
	st.local.u32 	[%rd103], %r1775;
	st.local.u32 	[%rd104], %r1775;
	st.local.u32 	[%rd105], %r1775;
	st.local.u32 	[%rd106], %r1775;
	st.local.u32 	[%rd107], %r1775;
	st.local.u32 	[%rd108], %r1775;
	bra.uni 	BB5_221;

BB5_134:
	setp.eq.s32	%p87, %r16195, 35;
	@%p87 bra 	BB5_135;
	bra.uni 	BB5_221;

BB5_135:
	and.b32  	%r1718, %r92, -256;
	st.local.u32 	[%rd101], %r1718;

BB5_202:
	st.local.u32 	[%rd102], %r16200;

BB5_203:
	st.local.u32 	[%rd103], %r16200;

BB5_198:
	st.local.u32 	[%rd104], %r16200;

BB5_199:
	st.local.u32 	[%rd105], %r16200;

BB5_194:
	st.local.u32 	[%rd106], %r16200;

BB5_195:
	st.local.u32 	[%rd107], %r16200;
	st.local.u32 	[%rd108], %r16200;

BB5_221:
	// Callseq Start 51
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd388;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd600;
	.param .b32 param2;
	st.param.b32	[param2+0], %r16195;
	call.uni 
	sha512_update, 
	(
	param0, 
	param1, 
	param2
	);
	
	//{
	}// Callseq End 51
	setp.lt.s32	%p137, %r144, 1;
	@%p137 bra 	BB5_227;

	mov.u32 	%r16196, %r144;

BB5_223:
	and.b32  	%r1781, %r16196, 1;
	setp.eq.b32	%p138, %r1781, 1;
	@!%p138 bra 	BB5_225;
	bra.uni 	BB5_224;

BB5_225:
	// Callseq Start 53
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd388;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd294;
	.param .b32 param2;
	st.param.b32	[param2+0], %r144;
	call.uni 
	sha512_update, 
	(
	param0, 
	param1, 
	param2
	);
	
	//{
	}// Callseq End 53
	bra.uni 	BB5_226;

BB5_224:
	mov.u32 	%r1782, 64;
	// Callseq Start 52
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd388;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd296;
	.param .b32 param2;
	st.param.b32	[param2+0], %r1782;
	call.uni 
	sha512_update, 
	(
	param0, 
	param1, 
	param2
	);
	
	//{
	}// Callseq End 52

BB5_226:
	shr.s32 	%r16196, %r16196, 1;
	setp.gt.s32	%p139, %r16196, 0;
	@%p139 bra 	BB5_223;

BB5_227:
	mov.b32	%r16153, %envreg3;
	mov.u32 	%r16152, %ntid.x;
	mov.u32 	%r16151, %ctaid.x;
	mov.u32 	%r16150, %tid.x;
	mad.lo.s32 	%r16149, %r16151, %r16152, %r16153;
	add.s32 	%r16148, %r16149, %r16150;
	setp.eq.s32	%p450, %r144, 0;
	mov.u64 	%rd3021, 6620516959819538809;
	mov.u64 	%rd3020, 2270897969802886507;
	mov.u64 	%rd3012, -7276294671716946913;
	mov.u64 	%rd3011, 5840696475078001361;
	mov.u64 	%rd3010, -6534734903238641935;
	mov.u64 	%rd3009, 4354685564936845355;
	mov.u64 	%rd3008, 7640891576956012808;
	ld.param.u64 	%rd3001, [m01800_init_param_4];
	mov.u64 	%rd3000, -4942790177534073029;
	// Callseq Start 54
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd388;
	call.uni 
	sha512_final, 
	(
	param0
	);
	
	//{
	}// Callseq End 54
	ld.local.u64 	%rd621, [%rd389];
	shr.u64 	%rd622, %rd621, 32;
	mul.wide.s32 	%rd623, %r16148, 672;
	add.s64 	%rd624, %rd3001, %rd623;
	add.s64 	%rd109, %rd624, 96;
	st.global.u32 	[%rd624+96], %rd622;
	st.global.u32 	[%rd624+100], %rd621;
	ld.local.u64 	%rd625, [%rd21];
	shr.u64 	%rd626, %rd625, 32;
	st.global.u32 	[%rd624+104], %rd626;
	st.global.u32 	[%rd624+108], %rd625;
	ld.local.u64 	%rd627, [%rd22];
	shr.u64 	%rd628, %rd627, 32;
	st.global.u32 	[%rd624+112], %rd628;
	st.global.u32 	[%rd624+116], %rd627;
	ld.local.u64 	%rd629, [%rd23];
	shr.u64 	%rd630, %rd629, 32;
	st.global.u32 	[%rd624+120], %rd630;
	st.global.u32 	[%rd624+124], %rd629;
	ld.local.u64 	%rd631, [%rd24];
	shr.u64 	%rd632, %rd631, 32;
	st.global.u32 	[%rd624+128], %rd632;
	st.global.u32 	[%rd624+132], %rd631;
	ld.local.u64 	%rd633, [%rd25];
	shr.u64 	%rd634, %rd633, 32;
	st.global.u32 	[%rd624+136], %rd634;
	st.global.u32 	[%rd624+140], %rd633;
	ld.local.u64 	%rd635, [%rd26];
	shr.u64 	%rd636, %rd635, 32;
	st.global.u32 	[%rd624+144], %rd636;
	st.global.u32 	[%rd624+148], %rd635;
	ld.local.u64 	%rd637, [%rd27];
	shr.u64 	%rd638, %rd637, 32;
	st.global.u32 	[%rd624+152], %rd638;
	st.global.u32 	[%rd624+156], %rd637;
	st.local.u64 	[%rd389], %rd3008;
	st.local.u64 	[%rd21], %rd3000;
	st.local.u64 	[%rd22], %rd3009;
	st.local.u64 	[%rd23], %rd3010;
	st.local.u64 	[%rd24], %rd3011;
	st.local.u64 	[%rd25], %rd3012;
	st.local.u64 	[%rd26], %rd3020;
	st.local.u64 	[%rd27], %rd3021;
	st.local.u32 	[%rd28], %r16200;
	st.local.u32 	[%rd29], %r16200;
	st.local.u32 	[%rd30], %r16200;
	st.local.u32 	[%rd389+76], %r16200;
	st.local.v2.u32 	[%rd389+80], {%r16200, %r16200};
	st.local.v2.u32 	[%rd389+88], {%r16200, %r16200};
	st.local.v2.u32 	[%rd389+96], {%r16200, %r16200};
	st.local.u32 	[%rd389+192], %r16200;
	st.local.u32 	[%rd31], %r16200;
	st.local.u32 	[%rd32], %r16200;
	st.local.u32 	[%rd33], %r16200;
	st.local.u32 	[%rd34], %r16200;
	st.local.u32 	[%rd35], %r16200;
	st.local.u32 	[%rd36], %r16200;
	st.local.u32 	[%rd37], %r16200;
	st.local.u32 	[%rd38], %r16200;
	st.local.u32 	[%rd39], %r16200;
	st.local.u32 	[%rd40], %r16200;
	st.local.u32 	[%rd41], %r16200;
	st.local.u32 	[%rd42], %r16200;
	st.local.u32 	[%rd43], %r16200;
	st.local.u32 	[%rd44], %r16200;
	st.local.u32 	[%rd45], %r16200;
	st.local.u32 	[%rd46], %r16200;
	st.local.u32 	[%rd47], %r16200;
	st.local.u32 	[%rd48], %r16200;
	st.local.u32 	[%rd49], %r16200;
	st.local.u32 	[%rd50], %r16200;
	st.local.u32 	[%rd51], %r16200;
	st.local.u32 	[%rd52], %r16200;
	@%p450 bra 	BB5_236;

	and.b32  	%r102, %r144, 3;
	setp.eq.s32	%p141, %r102, 0;
	@%p141 bra 	BB5_234;

	setp.eq.s32	%p142, %r102, 1;
	mov.u32 	%r16198, 0;
	@%p142 bra 	BB5_233;

	setp.eq.s32	%p143, %r102, 2;
	mov.u32 	%r16198, 1;
	@%p143 bra 	BB5_232;

	// Callseq Start 55
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd388;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd294;
	.param .b32 param2;
	st.param.b32	[param2+0], %r144;
	call.uni 
	sha512_update, 
	(
	param0, 
	param1, 
	param2
	);
	
	//{
	}// Callseq End 55
	mov.u32 	%r16198, 2;

BB5_232:
	// Callseq Start 56
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd388;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd294;
	.param .b32 param2;
	st.param.b32	[param2+0], %r144;
	call.uni 
	sha512_update, 
	(
	param0, 
	param1, 
	param2
	);
	
	//{
	}// Callseq End 56

BB5_233:
	// Callseq Start 57
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd388;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd294;
	.param .b32 param2;
	st.param.b32	[param2+0], %r144;
	call.uni 
	sha512_update, 
	(
	param0, 
	param1, 
	param2
	);
	
	//{
	}// Callseq End 57
	add.s32 	%r16200, %r16198, 1;

BB5_234:
	setp.lt.u32	%p144, %r144, 4;
	@%p144 bra 	BB5_236;

BB5_235:
	// Callseq Start 58
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd388;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd294;
	.param .b32 param2;
	st.param.b32	[param2+0], %r144;
	call.uni 
	sha512_update, 
	(
	param0, 
	param1, 
	param2
	);
	
	//{
	}// Callseq End 58
	// Callseq Start 59
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd388;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd294;
	.param .b32 param2;
	st.param.b32	[param2+0], %r144;
	call.uni 
	sha512_update, 
	(
	param0, 
	param1, 
	param2
	);
	
	//{
	}// Callseq End 59
	// Callseq Start 60
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd388;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd294;
	.param .b32 param2;
	st.param.b32	[param2+0], %r144;
	call.uni 
	sha512_update, 
	(
	param0, 
	param1, 
	param2
	);
	
	//{
	}// Callseq End 60
	// Callseq Start 61
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd388;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd294;
	.param .b32 param2;
	st.param.b32	[param2+0], %r144;
	call.uni 
	sha512_update, 
	(
	param0, 
	param1, 
	param2
	);
	
	//{
	}// Callseq End 61
	add.s32 	%r16200, %r16200, 4;
	setp.lt.u32	%p145, %r16200, %r144;
	@%p145 bra 	BB5_235;

BB5_236:
	mov.pred 	%p451, 0;
	setp.gt.s32	%p1, %r144, 64;
	// Callseq Start 62
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd388;
	call.uni 
	sha512_final, 
	(
	param0
	);
	
	//{
	}// Callseq End 62
	ld.local.u64 	%rd658, [%rd389];
	shr.u64 	%rd659, %rd658, 32;
	cvt.u32.u64	%r16223, %rd659;
	st.local.u32 	[%rd11], %r16223;
	cvt.u32.u64	%r16222, %rd658;
	st.local.u32 	[%rd76], %r16222;
	ld.local.u64 	%rd660, [%rd21];
	shr.u64 	%rd661, %rd660, 32;
	cvt.u32.u64	%r16221, %rd661;
	st.local.u32 	[%rd77], %r16221;
	cvt.u32.u64	%r16220, %rd660;
	st.local.u32 	[%rd78], %r16220;
	ld.local.u64 	%rd662, [%rd22];
	shr.u64 	%rd663, %rd662, 32;
	cvt.u32.u64	%r16219, %rd663;
	st.local.u32 	[%rd79], %r16219;
	cvt.u32.u64	%r16218, %rd662;
	st.local.u32 	[%rd80], %r16218;
	ld.local.u64 	%rd664, [%rd23];
	shr.u64 	%rd665, %rd664, 32;
	cvt.u32.u64	%r16217, %rd665;
	st.local.u32 	[%rd81], %r16217;
	cvt.u32.u64	%r16216, %rd664;
	st.local.u32 	[%rd82], %r16216;
	ld.local.u64 	%rd666, [%rd24];
	shr.u64 	%rd667, %rd666, 32;
	cvt.u32.u64	%r16215, %rd667;
	st.local.u32 	[%rd83], %r16215;
	cvt.u32.u64	%r16214, %rd666;
	st.local.u32 	[%rd84], %r16214;
	ld.local.u64 	%rd668, [%rd25];
	shr.u64 	%rd669, %rd668, 32;
	cvt.u32.u64	%r16213, %rd669;
	st.local.u32 	[%rd85], %r16213;
	cvt.u32.u64	%r16212, %rd668;
	st.local.u32 	[%rd86], %r16212;
	ld.local.u64 	%rd670, [%rd26];
	shr.u64 	%rd671, %rd670, 32;
	cvt.u32.u64	%r121, %rd671;
	st.local.u32 	[%rd87], %r121;
	cvt.u32.u64	%r122, %rd670;
	st.local.u32 	[%rd88], %r122;
	ld.local.u64 	%rd672, [%rd27];
	shr.u64 	%rd673, %rd672, 32;
	cvt.u32.u64	%r123, %rd673;
	st.local.u32 	[%rd89], %r123;
	cvt.u32.u64	%r124, %rd672;
	st.local.u32 	[%rd90], %r124;
	mov.u64 	%rd3028, 0;
	@%p451 bra 	BB5_238;

BB5_237:
	shl.b64 	%rd675, %rd3028, 2;
	add.s64 	%rd676, %rd12, %rd675;
	mov.u32 	%r1788, 0;
	st.local.u32 	[%rd676], %r1788;
	add.s64 	%rd3028, %rd3028, 1;
	setp.lt.u64	%p147, %rd3028, 64;
	@%p147 bra 	BB5_237;

BB5_238:
	mov.u32 	%r16210, 0;
	@!%p1 bra 	BB5_250;
	bra.uni 	BB5_239;

BB5_239:
	add.s32 	%r1792, %r144, -65;
	shr.u32 	%r1793, %r1792, 6;
	add.s32 	%r125, %r1793, 1;
	and.b32  	%r126, %r125, 3;
	setp.eq.s32	%p148, %r126, 0;
	mov.u32 	%r16210, 0;
	@%p148 bra 	BB5_240;

	setp.eq.s32	%p149, %r126, 1;
	mov.u32 	%r16203, 0;
	@%p149 bra 	BB5_245;

	setp.eq.s32	%p150, %r126, 2;
	mov.u32 	%r16201, 0;
	@%p150 bra 	BB5_244;

	st.local.v4.u32 	[%rd12], {%r16223, %r16222, %r16221, %r16220};
	st.local.v4.u32 	[%rd12+16], {%r16219, %r16218, %r16217, %r16216};
	st.local.v4.u32 	[%rd12+32], {%r16215, %r16214, %r16213, %r16212};
	st.local.v4.u32 	[%rd12+48], {%r121, %r122, %r123, %r124};
	add.s32 	%r144, %r144, -64;
	mov.u32 	%r16201, 16;

BB5_244:
	mul.wide.u32 	%rd677, %r16201, 4;
	add.s64 	%rd678, %rd12, %rd677;
	st.local.u32 	[%rd678], %r16223;
	add.s32 	%r1797, %r16201, 1;
	mul.wide.u32 	%rd679, %r1797, 4;
	add.s64 	%rd680, %rd12, %rd679;
	st.local.u32 	[%rd680], %r16222;
	add.s32 	%r1798, %r16201, 2;
	mul.wide.u32 	%rd681, %r1798, 4;
	add.s64 	%rd682, %rd12, %rd681;
	st.local.u32 	[%rd682], %r16221;
	add.s32 	%r1799, %r16201, 3;
	mul.wide.u32 	%rd683, %r1799, 4;
	add.s64 	%rd684, %rd12, %rd683;
	st.local.u32 	[%rd684], %r16220;
	add.s32 	%r1800, %r16201, 4;
	mul.wide.u32 	%rd685, %r1800, 4;
	add.s64 	%rd686, %rd12, %rd685;
	st.local.u32 	[%rd686], %r16219;
	add.s32 	%r1801, %r16201, 5;
	mul.wide.u32 	%rd687, %r1801, 4;
	add.s64 	%rd688, %rd12, %rd687;
	st.local.u32 	[%rd688], %r16218;
	add.s32 	%r1802, %r16201, 6;
	mul.wide.u32 	%rd689, %r1802, 4;
	add.s64 	%rd690, %rd12, %rd689;
	st.local.u32 	[%rd690], %r16217;
	add.s32 	%r1803, %r16201, 7;
	mul.wide.u32 	%rd691, %r1803, 4;
	add.s64 	%rd692, %rd12, %rd691;
	st.local.u32 	[%rd692], %r16216;
	add.s32 	%r1804, %r16201, 8;
	mul.wide.u32 	%rd693, %r1804, 4;
	add.s64 	%rd694, %rd12, %rd693;
	st.local.u32 	[%rd694], %r16215;
	add.s32 	%r1805, %r16201, 9;
	mul.wide.u32 	%rd695, %r1805, 4;
	add.s64 	%rd696, %rd12, %rd695;
	st.local.u32 	[%rd696], %r16214;
	add.s32 	%r1806, %r16201, 10;
	mul.wide.u32 	%rd697, %r1806, 4;
	add.s64 	%rd698, %rd12, %rd697;
	st.local.u32 	[%rd698], %r16213;
	add.s32 	%r1807, %r16201, 11;
	mul.wide.u32 	%rd699, %r1807, 4;
	add.s64 	%rd700, %rd12, %rd699;
	st.local.u32 	[%rd700], %r16212;
	add.s32 	%r1808, %r16201, 12;
	mul.wide.u32 	%rd701, %r1808, 4;
	add.s64 	%rd702, %rd12, %rd701;
	st.local.u32 	[%rd702], %r121;
	add.s32 	%r1809, %r16201, 13;
	mul.wide.u32 	%rd703, %r1809, 4;
	add.s64 	%rd704, %rd12, %rd703;
	st.local.u32 	[%rd704], %r122;
	add.s32 	%r1810, %r16201, 14;
	mul.wide.u32 	%rd705, %r1810, 4;
	add.s64 	%rd706, %rd12, %rd705;
	st.local.u32 	[%rd706], %r123;
	add.s32 	%r1811, %r16201, 15;
	mul.wide.u32 	%rd707, %r1811, 4;
	add.s64 	%rd708, %rd12, %rd707;
	st.local.u32 	[%rd708], %r124;
	add.s32 	%r144, %r144, -64;
	add.s32 	%r16203, %r16201, 16;

BB5_245:
	mul.wide.s32 	%rd709, %r16203, 4;
	add.s64 	%rd710, %rd12, %rd709;
	st.local.u32 	[%rd710], %r16223;
	add.s32 	%r1812, %r16203, 1;
	mul.wide.s32 	%rd711, %r1812, 4;
	add.s64 	%rd712, %rd12, %rd711;
	st.local.u32 	[%rd712], %r16222;
	add.s32 	%r1813, %r16203, 2;
	mul.wide.s32 	%rd713, %r1813, 4;
	add.s64 	%rd714, %rd12, %rd713;
	st.local.u32 	[%rd714], %r16221;
	add.s32 	%r1814, %r16203, 3;
	mul.wide.s32 	%rd715, %r1814, 4;
	add.s64 	%rd716, %rd12, %rd715;
	st.local.u32 	[%rd716], %r16220;
	add.s32 	%r1815, %r16203, 4;
	mul.wide.s32 	%rd717, %r1815, 4;
	add.s64 	%rd718, %rd12, %rd717;
	st.local.u32 	[%rd718], %r16219;
	add.s32 	%r1816, %r16203, 5;
	mul.wide.s32 	%rd719, %r1816, 4;
	add.s64 	%rd720, %rd12, %rd719;
	st.local.u32 	[%rd720], %r16218;
	add.s32 	%r1817, %r16203, 6;
	mul.wide.s32 	%rd721, %r1817, 4;
	add.s64 	%rd722, %rd12, %rd721;
	st.local.u32 	[%rd722], %r16217;
	add.s32 	%r1818, %r16203, 7;
	mul.wide.s32 	%rd723, %r1818, 4;
	add.s64 	%rd724, %rd12, %rd723;
	st.local.u32 	[%rd724], %r16216;
	add.s32 	%r1819, %r16203, 8;
	mul.wide.s32 	%rd725, %r1819, 4;
	add.s64 	%rd726, %rd12, %rd725;
	st.local.u32 	[%rd726], %r16215;
	add.s32 	%r1820, %r16203, 9;
	mul.wide.s32 	%rd727, %r1820, 4;
	add.s64 	%rd728, %rd12, %rd727;
	st.local.u32 	[%rd728], %r16214;
	add.s32 	%r1821, %r16203, 10;
	mul.wide.s32 	%rd729, %r1821, 4;
	add.s64 	%rd730, %rd12, %rd729;
	st.local.u32 	[%rd730], %r16213;
	add.s32 	%r1822, %r16203, 11;
	mul.wide.s32 	%rd731, %r1822, 4;
	add.s64 	%rd732, %rd12, %rd731;
	st.local.u32 	[%rd732], %r16212;
	add.s32 	%r1823, %r16203, 12;
	mul.wide.s32 	%rd733, %r1823, 4;
	add.s64 	%rd734, %rd12, %rd733;
	st.local.u32 	[%rd734], %r121;
	add.s32 	%r1824, %r16203, 13;
	mul.wide.s32 	%rd735, %r1824, 4;
	add.s64 	%rd736, %rd12, %rd735;
	st.local.u32 	[%rd736], %r122;
	add.s32 	%r1825, %r16203, 14;
	mul.wide.s32 	%rd737, %r1825, 4;
	add.s64 	%rd738, %rd12, %rd737;
	st.local.u32 	[%rd738], %r123;
	add.s32 	%r1826, %r16203, 15;
	mul.wide.s32 	%rd739, %r1826, 4;
	add.s64 	%rd740, %rd12, %rd739;
	st.local.u32 	[%rd740], %r124;
	add.s32 	%r144, %r144, -64;
	add.s32 	%r16210, %r16203, 16;
	mov.u32 	%r16207, %r144;
	bra.uni 	BB5_246;

BB5_240:
	mov.u32 	%r16207, %r16210;

BB5_246:
	setp.lt.u32	%p151, %r125, 4;
	@%p151 bra 	BB5_247;
	bra.uni 	BB5_248;

BB5_247:
	mov.u32 	%r144, %r16207;
	bra.uni 	BB5_250;

BB5_248:
	mul.wide.s32 	%rd741, %r16210, 4;
	add.s64 	%rd3029, %rd12, %rd741;

BB5_249:
	st.local.u32 	[%rd3029], %r16223;
	st.local.u32 	[%rd3029+4], %r16222;
	st.local.u32 	[%rd3029+8], %r16221;
	st.local.u32 	[%rd3029+12], %r16220;
	st.local.u32 	[%rd3029+16], %r16219;
	st.local.u32 	[%rd3029+20], %r16218;
	st.local.u32 	[%rd3029+24], %r16217;
	st.local.u32 	[%rd3029+28], %r16216;
	st.local.u32 	[%rd3029+32], %r16215;
	st.local.u32 	[%rd3029+36], %r16214;
	st.local.u32 	[%rd3029+40], %r16213;
	st.local.u32 	[%rd3029+44], %r16212;
	st.local.u32 	[%rd3029+48], %r121;
	st.local.u32 	[%rd3029+52], %r122;
	st.local.u32 	[%rd3029+56], %r123;
	st.local.u32 	[%rd3029+60], %r124;
	st.local.u32 	[%rd3029+64], %r16223;
	st.local.u32 	[%rd3029+68], %r16222;
	st.local.u32 	[%rd3029+72], %r16221;
	st.local.u32 	[%rd3029+76], %r16220;
	st.local.u32 	[%rd3029+80], %r16219;
	st.local.u32 	[%rd3029+84], %r16218;
	st.local.u32 	[%rd3029+88], %r16217;
	st.local.u32 	[%rd3029+92], %r16216;
	st.local.u32 	[%rd3029+96], %r16215;
	st.local.u32 	[%rd3029+100], %r16214;
	st.local.u32 	[%rd3029+104], %r16213;
	st.local.u32 	[%rd3029+108], %r16212;
	st.local.u32 	[%rd3029+112], %r121;
	st.local.u32 	[%rd3029+116], %r122;
	st.local.u32 	[%rd3029+120], %r123;
	st.local.u32 	[%rd3029+124], %r124;
	st.local.u32 	[%rd3029+128], %r16223;
	st.local.u32 	[%rd3029+132], %r16222;
	st.local.u32 	[%rd3029+136], %r16221;
	st.local.u32 	[%rd3029+140], %r16220;
	st.local.u32 	[%rd3029+144], %r16219;
	st.local.u32 	[%rd3029+148], %r16218;
	st.local.u32 	[%rd3029+152], %r16217;
	st.local.u32 	[%rd3029+156], %r16216;
	st.local.u32 	[%rd3029+160], %r16215;
	st.local.u32 	[%rd3029+164], %r16214;
	st.local.u32 	[%rd3029+168], %r16213;
	st.local.u32 	[%rd3029+172], %r16212;
	st.local.u32 	[%rd3029+176], %r121;
	st.local.u32 	[%rd3029+180], %r122;
	st.local.u32 	[%rd3029+184], %r123;
	st.local.u32 	[%rd3029+188], %r124;
	st.local.u32 	[%rd3029+192], %r16223;
	st.local.u32 	[%rd3029+196], %r16222;
	st.local.u32 	[%rd3029+200], %r16221;
	st.local.u32 	[%rd3029+204], %r16220;
	st.local.u32 	[%rd3029+208], %r16219;
	st.local.u32 	[%rd3029+212], %r16218;
	st.local.u32 	[%rd3029+216], %r16217;
	st.local.u32 	[%rd3029+220], %r16216;
	st.local.u32 	[%rd3029+224], %r16215;
	st.local.u32 	[%rd3029+228], %r16214;
	st.local.u32 	[%rd3029+232], %r16213;
	st.local.u32 	[%rd3029+236], %r16212;
	st.local.u32 	[%rd3029+240], %r121;
	st.local.u32 	[%rd3029+244], %r122;
	st.local.u32 	[%rd3029+248], %r123;
	st.local.u32 	[%rd3029+252], %r124;
	add.s32 	%r16210, %r16210, 64;
	add.s64 	%rd3029, %rd3029, 256;
	add.s32 	%r144, %r144, -256;
	setp.gt.s32	%p152, %r144, 64;
	@%p152 bra 	BB5_249;

BB5_250:
	setp.gt.s32	%p153, %r144, 31;
	@%p153 bra 	BB5_330;

	setp.gt.s32	%p201, %r144, 15;
	@%p201 bra 	BB5_291;

	setp.gt.s32	%p225, %r144, 7;
	@%p225 bra 	BB5_272;

	setp.gt.s32	%p237, %r144, 3;
	@%p237 bra 	BB5_263;

	setp.gt.s32	%p243, %r144, 1;
	@%p243 bra 	BB5_258;

	setp.eq.s32	%p246, %r144, 0;
	@%p246 bra 	BB5_419;
	bra.uni 	BB5_256;

BB5_419:
	mov.u32 	%r16212, 0;
	st.local.u32 	[%rd11], %r16212;
	st.local.u32 	[%rd76], %r16212;
	st.local.u32 	[%rd77], %r16212;
	st.local.u32 	[%rd78], %r16212;
	st.local.u32 	[%rd79], %r16212;
	st.local.u32 	[%rd80], %r16212;
	st.local.u32 	[%rd81], %r16212;
	st.local.u32 	[%rd82], %r16212;
	st.local.u32 	[%rd83], %r16212;
	st.local.u32 	[%rd84], %r16212;
	st.local.u32 	[%rd85], %r16212;
	st.local.u32 	[%rd86], %r16212;
	st.local.u32 	[%rd87], %r16212;
	st.local.u32 	[%rd88], %r16212;
	st.local.u32 	[%rd89], %r16212;
	st.local.u32 	[%rd90], %r16212;
	mov.u32 	%r16213, %r16212;
	mov.u32 	%r16214, %r16212;
	mov.u32 	%r16215, %r16212;
	mov.u32 	%r16216, %r16212;
	mov.u32 	%r16217, %r16212;
	mov.u32 	%r16218, %r16212;
	mov.u32 	%r16219, %r16212;
	mov.u32 	%r16220, %r16212;
	mov.u32 	%r16221, %r16212;
	mov.u32 	%r16222, %r16212;
	mov.u32 	%r16223, %r16212;
	bra.uni 	BB5_420;

BB5_330:
	setp.gt.s32	%p154, %r144, 47;
	@%p154 bra 	BB5_368;

	setp.gt.s32	%p178, %r144, 39;
	@%p178 bra 	BB5_351;

	setp.gt.s32	%p190, %r144, 35;
	@%p190 bra 	BB5_342;

	setp.gt.s32	%p196, %r144, 33;
	@%p196 bra 	BB5_337;

	setp.eq.s32	%p199, %r144, 32;
	@%p199 bra 	BB5_329;

	setp.eq.s32	%p200, %r144, 33;
	@%p200 bra 	BB5_336;
	bra.uni 	BB5_420;

BB5_336:
	and.b32  	%r16215, %r16215, -16777216;
	bra.uni 	BB5_340;

BB5_291:
	setp.gt.s32	%p202, %r144, 23;
	@%p202 bra 	BB5_311;

	setp.gt.s32	%p214, %r144, 19;
	@%p214 bra 	BB5_302;

	setp.gt.s32	%p220, %r144, 17;
	@%p220 bra 	BB5_297;

	setp.eq.s32	%p223, %r144, 16;
	@%p223 bra 	BB5_290;

	setp.eq.s32	%p224, %r144, 17;
	@%p224 bra 	BB5_296;
	bra.uni 	BB5_420;

BB5_296:
	and.b32  	%r16219, %r16219, -16777216;
	bra.uni 	BB5_300;

BB5_368:
	setp.gt.s32	%p155, %r144, 55;
	@%p155 bra 	BB5_384;

	setp.gt.s32	%p167, %r144, 51;
	@%p167 bra 	BB5_377;

	setp.gt.s32	%p173, %r144, 49;
	@%p173 bra 	BB5_374;

	setp.eq.s32	%p176, %r144, 48;
	@%p176 bra 	BB5_406;
	bra.uni 	BB5_372;

BB5_406:
	mov.u32 	%r1851, 0;
	st.local.u32 	[%rd87], %r1851;
	st.local.u32 	[%rd88], %r1851;
	st.local.u32 	[%rd89], %r1851;
	st.local.u32 	[%rd90], %r1851;
	bra.uni 	BB5_420;

BB5_272:
	setp.gt.s32	%p226, %r144, 11;
	@%p226 bra 	BB5_282;

	setp.gt.s32	%p232, %r144, 9;
	@%p232 bra 	BB5_277;

	setp.eq.s32	%p235, %r144, 8;
	@%p235 bra 	BB5_271;

	setp.eq.s32	%p236, %r144, 9;
	@%p236 bra 	BB5_276;
	bra.uni 	BB5_420;

BB5_276:
	and.b32  	%r16221, %r16221, -16777216;
	bra.uni 	BB5_280;

BB5_351:
	setp.gt.s32	%p179, %r144, 43;
	@%p179 bra 	BB5_361;

	setp.gt.s32	%p185, %r144, 41;
	@%p185 bra 	BB5_356;

	setp.eq.s32	%p188, %r144, 40;
	@%p188 bra 	BB5_350;

	setp.eq.s32	%p189, %r144, 41;
	@%p189 bra 	BB5_355;
	bra.uni 	BB5_420;

BB5_355:
	and.b32  	%r16213, %r16213, -16777216;
	bra.uni 	BB5_359;

BB5_311:
	setp.gt.s32	%p203, %r144, 27;
	@%p203 bra 	BB5_321;

	setp.gt.s32	%p209, %r144, 25;
	@%p209 bra 	BB5_316;

	setp.eq.s32	%p212, %r144, 24;
	@%p212 bra 	BB5_310;

	setp.eq.s32	%p213, %r144, 25;
	@%p213 bra 	BB5_315;
	bra.uni 	BB5_420;

BB5_315:
	and.b32  	%r16217, %r16217, -16777216;
	bra.uni 	BB5_319;

BB5_384:
	setp.gt.s32	%p156, %r144, 59;
	@%p156 bra 	BB5_392;

	setp.gt.s32	%p162, %r144, 57;
	@%p162 bra 	BB5_389;

	setp.eq.s32	%p165, %r144, 56;
	@%p165 bra 	BB5_402;
	bra.uni 	BB5_387;

BB5_402:
	mov.u32 	%r1837, 0;
	st.local.u32 	[%rd89], %r1837;
	st.local.u32 	[%rd90], %r1837;
	bra.uni 	BB5_420;

BB5_263:
	setp.gt.s32	%p238, %r144, 5;
	@%p238 bra 	BB5_267;

	setp.eq.s32	%p241, %r144, 4;
	@%p241 bra 	BB5_262;

	setp.eq.s32	%p242, %r144, 5;
	@%p242 bra 	BB5_266;
	bra.uni 	BB5_420;

BB5_266:
	and.b32  	%r16222, %r16222, -16777216;
	bra.uni 	BB5_270;

BB5_342:
	setp.gt.s32	%p191, %r144, 37;
	@%p191 bra 	BB5_346;

	setp.eq.s32	%p194, %r144, 36;
	@%p194 bra 	BB5_341;

	setp.eq.s32	%p195, %r144, 37;
	@%p195 bra 	BB5_345;
	bra.uni 	BB5_420;

BB5_345:
	and.b32  	%r16214, %r16214, -16777216;
	bra.uni 	BB5_349;

BB5_302:
	setp.gt.s32	%p215, %r144, 21;
	@%p215 bra 	BB5_306;

	setp.eq.s32	%p218, %r144, 20;
	@%p218 bra 	BB5_301;

	setp.eq.s32	%p219, %r144, 21;
	@%p219 bra 	BB5_305;
	bra.uni 	BB5_420;

BB5_305:
	and.b32  	%r16218, %r16218, -16777216;
	bra.uni 	BB5_309;

BB5_377:
	setp.gt.s32	%p168, %r144, 53;
	@%p168 bra 	BB5_381;

	setp.eq.s32	%p171, %r144, 52;
	@%p171 bra 	BB5_404;
	bra.uni 	BB5_379;

BB5_404:
	mov.u32 	%r1844, 0;
	st.local.u32 	[%rd88], %r1844;
	st.local.u32 	[%rd89], %r1844;
	st.local.u32 	[%rd90], %r1844;
	bra.uni 	BB5_420;

BB5_282:
	setp.gt.s32	%p227, %r144, 13;
	@%p227 bra 	BB5_286;

	setp.eq.s32	%p230, %r144, 12;
	@%p230 bra 	BB5_281;

	setp.eq.s32	%p231, %r144, 13;
	@%p231 bra 	BB5_285;
	bra.uni 	BB5_420;

BB5_285:
	and.b32  	%r16220, %r16220, -16777216;
	bra.uni 	BB5_289;

BB5_361:
	setp.gt.s32	%p180, %r144, 45;
	@%p180 bra 	BB5_365;

	setp.eq.s32	%p183, %r144, 44;
	@%p183 bra 	BB5_360;

	setp.eq.s32	%p184, %r144, 45;
	@%p184 bra 	BB5_364;
	bra.uni 	BB5_420;

BB5_364:
	and.b32  	%r16212, %r16212, -16777216;
	st.local.u32 	[%rd86], %r16212;
	mov.u32 	%r1854, 0;
	st.local.u32 	[%rd87], %r1854;
	st.local.u32 	[%rd88], %r1854;
	st.local.u32 	[%rd89], %r1854;
	st.local.u32 	[%rd90], %r1854;
	bra.uni 	BB5_420;

BB5_321:
	setp.gt.s32	%p204, %r144, 29;
	@%p204 bra 	BB5_325;

	setp.eq.s32	%p207, %r144, 28;
	@%p207 bra 	BB5_320;

	setp.eq.s32	%p208, %r144, 29;
	@%p208 bra 	BB5_324;
	bra.uni 	BB5_420;

BB5_324:
	and.b32  	%r16216, %r16216, -16777216;
	bra.uni 	BB5_328;

BB5_392:
	setp.gt.s32	%p157, %r144, 61;
	@%p157 bra 	BB5_396;

	setp.eq.s32	%p160, %r144, 60;
	@%p160 bra 	BB5_400;
	bra.uni 	BB5_394;

BB5_400:
	mov.u32 	%r1830, 0;
	st.local.u32 	[%rd90], %r1830;
	bra.uni 	BB5_420;

BB5_258:
	setp.eq.s32	%p244, %r144, 2;
	@%p244 bra 	BB5_418;
	bra.uni 	BB5_259;

BB5_418:
	and.b32  	%r16223, %r16223, -65536;
	bra.uni 	BB5_261;

BB5_337:
	setp.eq.s32	%p197, %r144, 34;
	@%p197 bra 	BB5_410;
	bra.uni 	BB5_338;

BB5_410:
	and.b32  	%r16215, %r16215, -65536;
	bra.uni 	BB5_340;

BB5_297:
	setp.eq.s32	%p221, %r144, 18;
	@%p221 bra 	BB5_414;
	bra.uni 	BB5_298;

BB5_414:
	and.b32  	%r16219, %r16219, -65536;
	bra.uni 	BB5_300;

BB5_374:
	setp.eq.s32	%p174, %r144, 50;
	@%p174 bra 	BB5_405;
	bra.uni 	BB5_375;

BB5_405:
	and.b32  	%r1847, %r121, -65536;
	st.local.u32 	[%rd87], %r1847;
	mov.u32 	%r1848, 0;
	st.local.u32 	[%rd88], %r1848;
	st.local.u32 	[%rd89], %r1848;
	st.local.u32 	[%rd90], %r1848;
	bra.uni 	BB5_420;

BB5_277:
	setp.eq.s32	%p233, %r144, 10;
	@%p233 bra 	BB5_416;
	bra.uni 	BB5_278;

BB5_416:
	and.b32  	%r16221, %r16221, -65536;
	bra.uni 	BB5_280;

BB5_356:
	setp.eq.s32	%p186, %r144, 42;
	@%p186 bra 	BB5_408;
	bra.uni 	BB5_357;

BB5_408:
	and.b32  	%r16213, %r16213, -65536;
	bra.uni 	BB5_359;

BB5_316:
	setp.eq.s32	%p210, %r144, 26;
	@%p210 bra 	BB5_412;
	bra.uni 	BB5_317;

BB5_412:
	and.b32  	%r16217, %r16217, -65536;
	bra.uni 	BB5_319;

BB5_389:
	setp.eq.s32	%p163, %r144, 58;
	@%p163 bra 	BB5_401;
	bra.uni 	BB5_390;

BB5_401:
	and.b32  	%r1833, %r123, -65536;
	st.local.u32 	[%rd89], %r1833;
	mov.u32 	%r1834, 0;
	st.local.u32 	[%rd90], %r1834;
	bra.uni 	BB5_420;

BB5_267:
	setp.eq.s32	%p239, %r144, 6;
	@%p239 bra 	BB5_417;
	bra.uni 	BB5_268;

BB5_417:
	and.b32  	%r16222, %r16222, -65536;
	bra.uni 	BB5_270;

BB5_346:
	setp.eq.s32	%p192, %r144, 38;
	@%p192 bra 	BB5_409;
	bra.uni 	BB5_347;

BB5_409:
	and.b32  	%r16214, %r16214, -65536;
	bra.uni 	BB5_349;

BB5_306:
	setp.eq.s32	%p216, %r144, 22;
	@%p216 bra 	BB5_413;
	bra.uni 	BB5_307;

BB5_413:
	and.b32  	%r16218, %r16218, -65536;
	bra.uni 	BB5_309;

BB5_381:
	setp.eq.s32	%p169, %r144, 54;
	@%p169 bra 	BB5_403;
	bra.uni 	BB5_382;

BB5_403:
	and.b32  	%r1840, %r122, -65536;
	st.local.u32 	[%rd88], %r1840;
	mov.u32 	%r1841, 0;
	st.local.u32 	[%rd89], %r1841;
	st.local.u32 	[%rd90], %r1841;
	bra.uni 	BB5_420;

BB5_286:
	setp.eq.s32	%p228, %r144, 14;
	@%p228 bra 	BB5_415;
	bra.uni 	BB5_287;

BB5_415:
	and.b32  	%r16220, %r16220, -65536;
	bra.uni 	BB5_289;

BB5_365:
	setp.eq.s32	%p181, %r144, 46;
	@%p181 bra 	BB5_407;
	bra.uni 	BB5_366;

BB5_407:
	and.b32  	%r16212, %r16212, -65536;
	st.local.u32 	[%rd86], %r16212;
	mov.u32 	%r1853, 0;
	st.local.u32 	[%rd87], %r1853;
	st.local.u32 	[%rd88], %r1853;
	st.local.u32 	[%rd89], %r1853;
	st.local.u32 	[%rd90], %r1853;
	bra.uni 	BB5_420;

BB5_325:
	setp.eq.s32	%p205, %r144, 30;
	@%p205 bra 	BB5_411;
	bra.uni 	BB5_326;

BB5_411:
	and.b32  	%r16216, %r16216, -65536;
	bra.uni 	BB5_328;

BB5_396:
	setp.eq.s32	%p158, %r144, 62;
	@%p158 bra 	BB5_399;
	bra.uni 	BB5_397;

BB5_399:
	and.b32  	%r1828, %r124, -65536;
	st.local.u32 	[%rd90], %r1828;
	bra.uni 	BB5_420;

BB5_102:
	setp.eq.s32	%p111, %r16195, 19;
	@%p111 bra 	BB5_103;
	bra.uni 	BB5_221;

BB5_103:
	and.b32  	%r1746, %r88, -256;
	st.local.u32 	[%rd97], %r1746;
	mov.u32 	%r1747, 0;
	st.local.u32 	[%rd98], %r1747;
	st.local.u32 	[%rd99], %r1747;
	st.local.u32 	[%rd100], %r1747;
	st.local.u32 	[%rd101], %r1747;
	st.local.u32 	[%rd102], %r1747;
	st.local.u32 	[%rd103], %r1747;
	st.local.u32 	[%rd104], %r1747;
	st.local.u32 	[%rd105], %r1747;
	st.local.u32 	[%rd106], %r1747;
	st.local.u32 	[%rd107], %r1747;
	st.local.u32 	[%rd108], %r1747;
	bra.uni 	BB5_221;

BB5_165:
	setp.eq.s32	%p64, %r16195, 51;
	@%p64 bra 	BB5_166;
	bra.uni 	BB5_221;

BB5_166:
	and.b32  	%r1690, %r96, -256;
	st.local.u32 	[%rd105], %r1690;
	bra.uni 	BB5_194;

BB5_86:
	setp.eq.s32	%p123, %r16195, 11;
	@%p123 bra 	BB5_87;
	bra.uni 	BB5_221;

BB5_87:
	and.b32  	%r1760, %r86, -256;
	st.local.u32 	[%rd95], %r1760;
	mov.u32 	%r1761, 0;
	st.local.u32 	[%rd96], %r1761;
	st.local.u32 	[%rd97], %r1761;
	st.local.u32 	[%rd98], %r1761;
	st.local.u32 	[%rd99], %r1761;
	st.local.u32 	[%rd100], %r1761;
	st.local.u32 	[%rd101], %r1761;
	st.local.u32 	[%rd102], %r1761;
	st.local.u32 	[%rd103], %r1761;
	st.local.u32 	[%rd104], %r1761;
	st.local.u32 	[%rd105], %r1761;
	st.local.u32 	[%rd106], %r1761;
	st.local.u32 	[%rd107], %r1761;
	st.local.u32 	[%rd108], %r1761;
	bra.uni 	BB5_221;

BB5_149:
	setp.eq.s32	%p76, %r16195, 43;
	@%p76 bra 	BB5_150;
	bra.uni 	BB5_221;

BB5_150:
	and.b32  	%r1704, %r94, -256;
	st.local.u32 	[%rd103], %r1704;
	bra.uni 	BB5_198;

BB5_117:
	setp.eq.s32	%p100, %r16195, 27;
	@%p100 bra 	BB5_118;
	bra.uni 	BB5_221;

BB5_118:
	and.b32  	%r1732, %r90, -256;
	st.local.u32 	[%rd99], %r1732;
	mov.u32 	%r1733, 0;
	st.local.u32 	[%rd100], %r1733;
	st.local.u32 	[%rd101], %r1733;
	st.local.u32 	[%rd102], %r1733;
	st.local.u32 	[%rd103], %r1733;
	st.local.u32 	[%rd104], %r1733;
	st.local.u32 	[%rd105], %r1733;
	st.local.u32 	[%rd106], %r1733;
	st.local.u32 	[%rd107], %r1733;
	st.local.u32 	[%rd108], %r1733;
	bra.uni 	BB5_221;

BB5_180:
	setp.eq.s32	%p53, %r16195, 59;
	@%p53 bra 	BB5_181;
	bra.uni 	BB5_221;

BB5_181:
	and.b32  	%r1676, %r98, -256;
	st.local.u32 	[%rd107], %r1676;
	st.local.u32 	[%rd108], %r16200;
	bra.uni 	BB5_221;

BB5_78:
	setp.eq.s32	%p129, %r16195, 7;
	@%p129 bra 	BB5_79;
	bra.uni 	BB5_221;

BB5_79:
	and.b32  	%r1767, %r85, -256;
	st.local.u32 	[%rd94], %r1767;
	mov.u32 	%r1768, 0;
	st.local.u32 	[%rd95], %r1768;
	st.local.u32 	[%rd96], %r1768;
	st.local.u32 	[%rd97], %r1768;
	st.local.u32 	[%rd98], %r1768;
	st.local.u32 	[%rd99], %r1768;
	st.local.u32 	[%rd100], %r1768;
	st.local.u32 	[%rd101], %r1768;
	st.local.u32 	[%rd102], %r1768;
	st.local.u32 	[%rd103], %r1768;
	st.local.u32 	[%rd104], %r1768;
	st.local.u32 	[%rd105], %r1768;
	st.local.u32 	[%rd106], %r1768;
	st.local.u32 	[%rd107], %r1768;
	st.local.u32 	[%rd108], %r1768;
	bra.uni 	BB5_221;

BB5_141:
	setp.eq.s32	%p82, %r16195, 39;
	@%p82 bra 	BB5_142;
	bra.uni 	BB5_221;

BB5_142:
	and.b32  	%r1711, %r93, -256;
	st.local.u32 	[%rd102], %r1711;
	bra.uni 	BB5_203;

BB5_109:
	setp.eq.s32	%p106, %r16195, 23;
	@%p106 bra 	BB5_110;
	bra.uni 	BB5_221;

BB5_110:
	and.b32  	%r1739, %r89, -256;
	st.local.u32 	[%rd98], %r1739;
	mov.u32 	%r1740, 0;
	st.local.u32 	[%rd99], %r1740;
	st.local.u32 	[%rd100], %r1740;
	st.local.u32 	[%rd101], %r1740;
	st.local.u32 	[%rd102], %r1740;
	st.local.u32 	[%rd103], %r1740;
	st.local.u32 	[%rd104], %r1740;
	st.local.u32 	[%rd105], %r1740;
	st.local.u32 	[%rd106], %r1740;
	st.local.u32 	[%rd107], %r1740;
	st.local.u32 	[%rd108], %r1740;
	bra.uni 	BB5_221;

BB5_172:
	setp.eq.s32	%p59, %r16195, 55;
	@%p59 bra 	BB5_173;
	bra.uni 	BB5_221;

BB5_173:
	and.b32  	%r1683, %r97, -256;
	st.local.u32 	[%rd106], %r1683;
	bra.uni 	BB5_195;

BB5_93:
	setp.eq.s32	%p118, %r16195, 15;
	@%p118 bra 	BB5_94;
	bra.uni 	BB5_221;

BB5_94:
	and.b32  	%r1753, %r87, -256;
	st.local.u32 	[%rd96], %r1753;
	mov.u32 	%r1754, 0;
	st.local.u32 	[%rd97], %r1754;
	st.local.u32 	[%rd98], %r1754;
	st.local.u32 	[%rd99], %r1754;
	st.local.u32 	[%rd100], %r1754;
	st.local.u32 	[%rd101], %r1754;
	st.local.u32 	[%rd102], %r1754;
	st.local.u32 	[%rd103], %r1754;
	st.local.u32 	[%rd104], %r1754;
	st.local.u32 	[%rd105], %r1754;
	st.local.u32 	[%rd106], %r1754;
	st.local.u32 	[%rd107], %r1754;
	st.local.u32 	[%rd108], %r1754;
	bra.uni 	BB5_221;

BB5_156:
	setp.eq.s32	%p71, %r16195, 47;
	@%p71 bra 	BB5_157;
	bra.uni 	BB5_221;

BB5_157:
	and.b32  	%r1697, %r95, -256;
	st.local.u32 	[%rd104], %r1697;
	bra.uni 	BB5_199;

BB5_124:
	setp.eq.s32	%p95, %r16195, 31;
	@%p95 bra 	BB5_125;
	bra.uni 	BB5_221;

BB5_125:
	and.b32  	%r1725, %r91, -256;
	st.local.u32 	[%rd100], %r1725;
	mov.u32 	%r1726, 0;
	st.local.u32 	[%rd101], %r1726;
	st.local.u32 	[%rd102], %r1726;
	st.local.u32 	[%rd103], %r1726;
	st.local.u32 	[%rd104], %r1726;
	st.local.u32 	[%rd105], %r1726;
	st.local.u32 	[%rd106], %r1726;
	st.local.u32 	[%rd107], %r1726;
	st.local.u32 	[%rd108], %r1726;
	bra.uni 	BB5_221;

BB5_187:
	setp.ne.s32	%p48, %r16195, 63;
	@%p48 bra 	BB5_221;

	and.b32  	%r1672, %r99, -256;
	st.local.u32 	[%rd108], %r1672;
	bra.uni 	BB5_221;

BB5_256:
	setp.eq.s32	%p247, %r144, 1;
	@%p247 bra 	BB5_257;
	bra.uni 	BB5_420;

BB5_257:
	and.b32  	%r16223, %r16223, -16777216;
	bra.uni 	BB5_261;

BB5_372:
	setp.eq.s32	%p177, %r144, 49;
	@%p177 bra 	BB5_373;
	bra.uni 	BB5_420;

BB5_373:
	and.b32  	%r1849, %r121, -16777216;
	st.local.u32 	[%rd87], %r1849;
	mov.u32 	%r1850, 0;
	st.local.u32 	[%rd88], %r1850;
	st.local.u32 	[%rd89], %r1850;
	st.local.u32 	[%rd90], %r1850;
	bra.uni 	BB5_420;

BB5_387:
	setp.eq.s32	%p166, %r144, 57;
	@%p166 bra 	BB5_388;
	bra.uni 	BB5_420;

BB5_388:
	and.b32  	%r1835, %r123, -16777216;
	st.local.u32 	[%rd89], %r1835;
	mov.u32 	%r1836, 0;
	st.local.u32 	[%rd90], %r1836;
	bra.uni 	BB5_420;

BB5_379:
	setp.eq.s32	%p172, %r144, 53;
	@%p172 bra 	BB5_380;
	bra.uni 	BB5_420;

BB5_380:
	and.b32  	%r1842, %r122, -16777216;
	st.local.u32 	[%rd88], %r1842;
	mov.u32 	%r1843, 0;
	st.local.u32 	[%rd89], %r1843;
	st.local.u32 	[%rd90], %r1843;
	bra.uni 	BB5_420;

BB5_394:
	setp.eq.s32	%p161, %r144, 61;
	@%p161 bra 	BB5_395;
	bra.uni 	BB5_420;

BB5_395:
	and.b32  	%r1829, %r124, -16777216;
	st.local.u32 	[%rd90], %r1829;
	bra.uni 	BB5_420;

BB5_259:
	setp.eq.s32	%p245, %r144, 3;
	@%p245 bra 	BB5_260;
	bra.uni 	BB5_420;

BB5_260:
	and.b32  	%r16223, %r16223, -256;

BB5_261:
	st.local.u32 	[%rd11], %r16223;

BB5_262:
	mov.u32 	%r16212, 0;
	st.local.u32 	[%rd76], %r16212;
	st.local.u32 	[%rd77], %r16212;
	st.local.u32 	[%rd78], %r16212;
	st.local.u32 	[%rd79], %r16212;
	st.local.u32 	[%rd80], %r16212;
	st.local.u32 	[%rd81], %r16212;
	st.local.u32 	[%rd82], %r16212;
	st.local.u32 	[%rd83], %r16212;
	st.local.u32 	[%rd84], %r16212;
	st.local.u32 	[%rd85], %r16212;
	st.local.u32 	[%rd86], %r16212;
	st.local.u32 	[%rd87], %r16212;
	st.local.u32 	[%rd88], %r16212;
	st.local.u32 	[%rd89], %r16212;
	st.local.u32 	[%rd90], %r16212;
	mov.u32 	%r16213, %r16212;
	mov.u32 	%r16214, %r16212;
	mov.u32 	%r16215, %r16212;
	mov.u32 	%r16216, %r16212;
	mov.u32 	%r16217, %r16212;
	mov.u32 	%r16218, %r16212;
	mov.u32 	%r16219, %r16212;
	mov.u32 	%r16220, %r16212;
	mov.u32 	%r16221, %r16212;
	mov.u32 	%r16222, %r16212;
	bra.uni 	BB5_420;

BB5_338:
	setp.eq.s32	%p198, %r144, 35;
	@%p198 bra 	BB5_339;
	bra.uni 	BB5_420;

BB5_339:
	and.b32  	%r16215, %r16215, -256;

BB5_340:
	st.local.u32 	[%rd83], %r16215;

BB5_341:
	mov.u32 	%r16212, 0;
	st.local.u32 	[%rd84], %r16212;
	st.local.u32 	[%rd85], %r16212;
	st.local.u32 	[%rd86], %r16212;
	st.local.u32 	[%rd87], %r16212;
	st.local.u32 	[%rd88], %r16212;
	st.local.u32 	[%rd89], %r16212;
	st.local.u32 	[%rd90], %r16212;
	mov.u32 	%r16213, %r16212;
	mov.u32 	%r16214, %r16212;
	bra.uni 	BB5_420;

BB5_298:
	setp.eq.s32	%p222, %r144, 19;
	@%p222 bra 	BB5_299;
	bra.uni 	BB5_420;

BB5_299:
	and.b32  	%r16219, %r16219, -256;

BB5_300:
	st.local.u32 	[%rd79], %r16219;

BB5_301:
	mov.u32 	%r16212, 0;
	st.local.u32 	[%rd80], %r16212;
	st.local.u32 	[%rd81], %r16212;
	st.local.u32 	[%rd82], %r16212;
	st.local.u32 	[%rd83], %r16212;
	st.local.u32 	[%rd84], %r16212;
	st.local.u32 	[%rd85], %r16212;
	st.local.u32 	[%rd86], %r16212;
	st.local.u32 	[%rd87], %r16212;
	st.local.u32 	[%rd88], %r16212;
	st.local.u32 	[%rd89], %r16212;
	st.local.u32 	[%rd90], %r16212;
	mov.u32 	%r16213, %r16212;
	mov.u32 	%r16214, %r16212;
	mov.u32 	%r16215, %r16212;
	mov.u32 	%r16216, %r16212;
	mov.u32 	%r16217, %r16212;
	mov.u32 	%r16218, %r16212;
	bra.uni 	BB5_420;

BB5_375:
	setp.eq.s32	%p175, %r144, 51;
	@%p175 bra 	BB5_376;
	bra.uni 	BB5_420;

BB5_376:
	and.b32  	%r1845, %r121, -256;
	st.local.u32 	[%rd87], %r1845;
	mov.u32 	%r1846, 0;
	st.local.u32 	[%rd88], %r1846;
	st.local.u32 	[%rd89], %r1846;
	st.local.u32 	[%rd90], %r1846;
	bra.uni 	BB5_420;

BB5_278:
	setp.eq.s32	%p234, %r144, 11;
	@%p234 bra 	BB5_279;
	bra.uni 	BB5_420;

BB5_279:
	and.b32  	%r16221, %r16221, -256;

BB5_280:
	st.local.u32 	[%rd77], %r16221;

BB5_281:
	mov.u32 	%r16212, 0;
	st.local.u32 	[%rd78], %r16212;
	st.local.u32 	[%rd79], %r16212;
	st.local.u32 	[%rd80], %r16212;
	st.local.u32 	[%rd81], %r16212;
	st.local.u32 	[%rd82], %r16212;
	st.local.u32 	[%rd83], %r16212;
	st.local.u32 	[%rd84], %r16212;
	st.local.u32 	[%rd85], %r16212;
	st.local.u32 	[%rd86], %r16212;
	st.local.u32 	[%rd87], %r16212;
	st.local.u32 	[%rd88], %r16212;
	st.local.u32 	[%rd89], %r16212;
	st.local.u32 	[%rd90], %r16212;
	mov.u32 	%r16213, %r16212;
	mov.u32 	%r16214, %r16212;
	mov.u32 	%r16215, %r16212;
	mov.u32 	%r16216, %r16212;
	mov.u32 	%r16217, %r16212;
	mov.u32 	%r16218, %r16212;
	mov.u32 	%r16219, %r16212;
	mov.u32 	%r16220, %r16212;
	bra.uni 	BB5_420;

BB5_357:
	setp.eq.s32	%p187, %r144, 43;
	@%p187 bra 	BB5_358;
	bra.uni 	BB5_420;

BB5_358:
	and.b32  	%r16213, %r16213, -256;

BB5_359:
	st.local.u32 	[%rd85], %r16213;

BB5_360:
	mov.u32 	%r16212, 0;
	st.local.u32 	[%rd86], %r16212;
	st.local.u32 	[%rd87], %r16212;
	st.local.u32 	[%rd88], %r16212;
	st.local.u32 	[%rd89], %r16212;
	st.local.u32 	[%rd90], %r16212;
	bra.uni 	BB5_420;

BB5_317:
	setp.eq.s32	%p211, %r144, 27;
	@%p211 bra 	BB5_318;
	bra.uni 	BB5_420;

BB5_318:
	and.b32  	%r16217, %r16217, -256;

BB5_319:
	st.local.u32 	[%rd81], %r16217;

BB5_320:
	mov.u32 	%r16212, 0;
	st.local.u32 	[%rd82], %r16212;
	st.local.u32 	[%rd83], %r16212;
	st.local.u32 	[%rd84], %r16212;
	st.local.u32 	[%rd85], %r16212;
	st.local.u32 	[%rd86], %r16212;
	st.local.u32 	[%rd87], %r16212;
	st.local.u32 	[%rd88], %r16212;
	st.local.u32 	[%rd89], %r16212;
	st.local.u32 	[%rd90], %r16212;
	mov.u32 	%r16213, %r16212;
	mov.u32 	%r16214, %r16212;
	mov.u32 	%r16215, %r16212;
	mov.u32 	%r16216, %r16212;
	bra.uni 	BB5_420;

BB5_390:
	setp.eq.s32	%p164, %r144, 59;
	@%p164 bra 	BB5_391;
	bra.uni 	BB5_420;

BB5_391:
	and.b32  	%r1831, %r123, -256;
	st.local.u32 	[%rd89], %r1831;
	mov.u32 	%r1832, 0;
	st.local.u32 	[%rd90], %r1832;
	bra.uni 	BB5_420;

BB5_268:
	setp.eq.s32	%p240, %r144, 7;
	@%p240 bra 	BB5_269;
	bra.uni 	BB5_420;

BB5_269:
	and.b32  	%r16222, %r16222, -256;

BB5_270:
	st.local.u32 	[%rd76], %r16222;

BB5_271:
	mov.u32 	%r16212, 0;
	st.local.u32 	[%rd77], %r16212;
	st.local.u32 	[%rd78], %r16212;
	st.local.u32 	[%rd79], %r16212;
	st.local.u32 	[%rd80], %r16212;
	st.local.u32 	[%rd81], %r16212;
	st.local.u32 	[%rd82], %r16212;
	st.local.u32 	[%rd83], %r16212;
	st.local.u32 	[%rd84], %r16212;
	st.local.u32 	[%rd85], %r16212;
	st.local.u32 	[%rd86], %r16212;
	st.local.u32 	[%rd87], %r16212;
	st.local.u32 	[%rd88], %r16212;
	st.local.u32 	[%rd89], %r16212;
	st.local.u32 	[%rd90], %r16212;
	mov.u32 	%r16213, %r16212;
	mov.u32 	%r16214, %r16212;
	mov.u32 	%r16215, %r16212;
	mov.u32 	%r16216, %r16212;
	mov.u32 	%r16217, %r16212;
	mov.u32 	%r16218, %r16212;
	mov.u32 	%r16219, %r16212;
	mov.u32 	%r16220, %r16212;
	mov.u32 	%r16221, %r16212;
	bra.uni 	BB5_420;

BB5_347:
	setp.eq.s32	%p193, %r144, 39;
	@%p193 bra 	BB5_348;
	bra.uni 	BB5_420;

BB5_348:
	and.b32  	%r16214, %r16214, -256;

BB5_349:
	st.local.u32 	[%rd84], %r16214;

BB5_350:
	mov.u32 	%r16212, 0;
	st.local.u32 	[%rd85], %r16212;
	st.local.u32 	[%rd86], %r16212;
	st.local.u32 	[%rd87], %r16212;
	st.local.u32 	[%rd88], %r16212;
	st.local.u32 	[%rd89], %r16212;
	st.local.u32 	[%rd90], %r16212;
	mov.u32 	%r16213, %r16212;
	bra.uni 	BB5_420;

BB5_307:
	setp.eq.s32	%p217, %r144, 23;
	@%p217 bra 	BB5_308;
	bra.uni 	BB5_420;

BB5_308:
	and.b32  	%r16218, %r16218, -256;

BB5_309:
	st.local.u32 	[%rd80], %r16218;

BB5_310:
	mov.u32 	%r16212, 0;
	st.local.u32 	[%rd81], %r16212;
	st.local.u32 	[%rd82], %r16212;
	st.local.u32 	[%rd83], %r16212;
	st.local.u32 	[%rd84], %r16212;
	st.local.u32 	[%rd85], %r16212;
	st.local.u32 	[%rd86], %r16212;
	st.local.u32 	[%rd87], %r16212;
	st.local.u32 	[%rd88], %r16212;
	st.local.u32 	[%rd89], %r16212;
	st.local.u32 	[%rd90], %r16212;
	mov.u32 	%r16213, %r16212;
	mov.u32 	%r16214, %r16212;
	mov.u32 	%r16215, %r16212;
	mov.u32 	%r16216, %r16212;
	mov.u32 	%r16217, %r16212;
	bra.uni 	BB5_420;

BB5_382:
	setp.eq.s32	%p170, %r144, 55;
	@%p170 bra 	BB5_383;
	bra.uni 	BB5_420;

BB5_383:
	and.b32  	%r1838, %r122, -256;
	st.local.u32 	[%rd88], %r1838;
	mov.u32 	%r1839, 0;
	st.local.u32 	[%rd89], %r1839;
	st.local.u32 	[%rd90], %r1839;
	bra.uni 	BB5_420;

BB5_287:
	setp.eq.s32	%p229, %r144, 15;
	@%p229 bra 	BB5_288;
	bra.uni 	BB5_420;

BB5_288:
	and.b32  	%r16220, %r16220, -256;

BB5_289:
	st.local.u32 	[%rd78], %r16220;

BB5_290:
	mov.u32 	%r16212, 0;
	st.local.u32 	[%rd79], %r16212;
	st.local.u32 	[%rd80], %r16212;
	st.local.u32 	[%rd81], %r16212;
	st.local.u32 	[%rd82], %r16212;
	st.local.u32 	[%rd83], %r16212;
	st.local.u32 	[%rd84], %r16212;
	st.local.u32 	[%rd85], %r16212;
	st.local.u32 	[%rd86], %r16212;
	st.local.u32 	[%rd87], %r16212;
	st.local.u32 	[%rd88], %r16212;
	st.local.u32 	[%rd89], %r16212;
	st.local.u32 	[%rd90], %r16212;
	mov.u32 	%r16213, %r16212;
	mov.u32 	%r16214, %r16212;
	mov.u32 	%r16215, %r16212;
	mov.u32 	%r16216, %r16212;
	mov.u32 	%r16217, %r16212;
	mov.u32 	%r16218, %r16212;
	mov.u32 	%r16219, %r16212;
	bra.uni 	BB5_420;

BB5_366:
	setp.eq.s32	%p182, %r144, 47;
	@%p182 bra 	BB5_367;
	bra.uni 	BB5_420;

BB5_367:
	and.b32  	%r16212, %r16212, -256;
	st.local.u32 	[%rd86], %r16212;
	mov.u32 	%r1852, 0;
	st.local.u32 	[%rd87], %r1852;
	st.local.u32 	[%rd88], %r1852;
	st.local.u32 	[%rd89], %r1852;
	st.local.u32 	[%rd90], %r1852;
	bra.uni 	BB5_420;

BB5_326:
	setp.eq.s32	%p206, %r144, 31;
	@%p206 bra 	BB5_327;
	bra.uni 	BB5_420;

BB5_327:
	and.b32  	%r16216, %r16216, -256;

BB5_328:
	st.local.u32 	[%rd82], %r16216;

BB5_329:
	mov.u32 	%r16212, 0;
	st.local.u32 	[%rd83], %r16212;
	st.local.u32 	[%rd84], %r16212;
	st.local.u32 	[%rd85], %r16212;
	st.local.u32 	[%rd86], %r16212;
	st.local.u32 	[%rd87], %r16212;
	st.local.u32 	[%rd88], %r16212;
	st.local.u32 	[%rd89], %r16212;
	st.local.u32 	[%rd90], %r16212;
	mov.u32 	%r16213, %r16212;
	mov.u32 	%r16214, %r16212;
	mov.u32 	%r16215, %r16212;

BB5_420:
	mov.u64 	%rd3023, 6620516959819538809;
	mov.u64 	%rd3022, 2270897969802886507;
	mov.u64 	%rd3017, -7276294671716946913;
	mov.u64 	%rd3016, 5840696475078001361;
	mov.u64 	%rd3015, -6534734903238641935;
	mov.u64 	%rd3014, 4354685564936845355;
	mov.u64 	%rd3013, 7640891576956012808;
	mov.u64 	%rd3002, -4942790177534073029;
	mul.wide.s32 	%rd744, %r16210, 4;
	add.s64 	%rd745, %rd12, %rd744;
	st.local.u32 	[%rd745], %r16223;
	add.s32 	%r2132, %r16210, 1;
	mul.wide.s32 	%rd746, %r2132, 4;
	add.s64 	%rd747, %rd12, %rd746;
	st.local.u32 	[%rd747], %r16222;
	add.s32 	%r2133, %r16210, 2;
	mul.wide.s32 	%rd748, %r2133, 4;
	add.s64 	%rd749, %rd12, %rd748;
	st.local.u32 	[%rd749], %r16221;
	add.s32 	%r2134, %r16210, 3;
	mul.wide.s32 	%rd750, %r2134, 4;
	add.s64 	%rd751, %rd12, %rd750;
	st.local.u32 	[%rd751], %r16220;
	add.s32 	%r2135, %r16210, 4;
	mul.wide.s32 	%rd752, %r2135, 4;
	add.s64 	%rd753, %rd12, %rd752;
	st.local.u32 	[%rd753], %r16219;
	add.s32 	%r2136, %r16210, 5;
	mul.wide.s32 	%rd754, %r2136, 4;
	add.s64 	%rd755, %rd12, %rd754;
	st.local.u32 	[%rd755], %r16218;
	add.s32 	%r2137, %r16210, 6;
	mul.wide.s32 	%rd756, %r2137, 4;
	add.s64 	%rd757, %rd12, %rd756;
	st.local.u32 	[%rd757], %r16217;
	add.s32 	%r2138, %r16210, 7;
	mul.wide.s32 	%rd758, %r2138, 4;
	add.s64 	%rd759, %rd12, %rd758;
	st.local.u32 	[%rd759], %r16216;
	add.s32 	%r2139, %r16210, 8;
	mul.wide.s32 	%rd760, %r2139, 4;
	add.s64 	%rd761, %rd12, %rd760;
	st.local.u32 	[%rd761], %r16215;
	add.s32 	%r2140, %r16210, 9;
	mul.wide.s32 	%rd762, %r2140, 4;
	add.s64 	%rd763, %rd12, %rd762;
	st.local.u32 	[%rd763], %r16214;
	add.s32 	%r2141, %r16210, 10;
	mul.wide.s32 	%rd764, %r2141, 4;
	add.s64 	%rd765, %rd12, %rd764;
	st.local.u32 	[%rd765], %r16213;
	add.s32 	%r2142, %r16210, 11;
	mul.wide.s32 	%rd766, %r2142, 4;
	add.s64 	%rd767, %rd12, %rd766;
	st.local.u32 	[%rd767], %r16212;
	ld.local.u32 	%r2143, [%rd87];
	add.s32 	%r2144, %r16210, 12;
	mul.wide.s32 	%rd768, %r2144, 4;
	add.s64 	%rd769, %rd12, %rd768;
	st.local.u32 	[%rd769], %r2143;
	ld.local.u32 	%r2145, [%rd88];
	add.s32 	%r2146, %r16210, 13;
	mul.wide.s32 	%rd770, %r2146, 4;
	add.s64 	%rd771, %rd12, %rd770;
	st.local.u32 	[%rd771], %r2145;
	ld.local.u32 	%r2147, [%rd89];
	add.s32 	%r2148, %r16210, 14;
	mul.wide.s32 	%rd772, %r2148, 4;
	add.s64 	%rd773, %rd12, %rd772;
	st.local.u32 	[%rd773], %r2147;
	ld.local.u32 	%r2149, [%rd90];
	add.s32 	%r2150, %r16210, 15;
	mul.wide.s32 	%rd774, %r2150, 4;
	add.s64 	%rd775, %rd12, %rd774;
	st.local.u32 	[%rd775], %r2149;
	ld.local.v4.u32 	{%r2151, %r2152, %r2153, %r2154}, [%rd12];
	ld.local.v4.u32 	{%r2156, %r2157, %r2158, %r2159}, [%rd12+16];
	ld.local.v4.u32 	{%r2160, %r2161, %r2162, %r2163}, [%rd12+32];
	ld.local.v4.u32 	{%r2164, %r2165, %r2166, %r2167}, [%rd12+48];
	ld.local.v4.u32 	{%r2168, %r2169, %r2170, %r2171}, [%rd12+64];
	ld.local.v4.u32 	{%r2172, %r2173, %r2174, %r2175}, [%rd12+80];
	ld.local.v4.u32 	{%r2176, %r2177, %r2178, %r2179}, [%rd12+96];
	ld.local.v4.u32 	{%r2180, %r2181, %r2182, %r2183}, [%rd12+112];
	ld.local.v4.u32 	{%r2184, %r2185, %r2186, %r2187}, [%rd12+128];
	ld.local.v4.u32 	{%r2188, %r2189, %r2190, %r2191}, [%rd12+144];
	ld.local.v4.u32 	{%r2192, %r2193, %r2194, %r2195}, [%rd12+160];
	ld.local.v4.u32 	{%r2196, %r2197, %r2198, %r2199}, [%rd12+176];
	ld.local.v4.u32 	{%r2200, %r2201, %r2202, %r2203}, [%rd12+192];
	ld.local.v4.u32 	{%r2204, %r2205, %r2206, %r2207}, [%rd12+208];
	ld.local.v4.u32 	{%r2208, %r2209, %r2210, %r2211}, [%rd12+224];
	ld.local.v4.u32 	{%r2212, %r2213, %r2214, %r2215}, [%rd12+240];
	st.global.u32 	[%rd624+160], %r2151;
	st.global.u32 	[%rd624+164], %r2152;
	st.global.u32 	[%rd624+168], %r2153;
	st.global.u32 	[%rd624+172], %r2154;
	st.global.u32 	[%rd624+176], %r2156;
	st.global.u32 	[%rd624+180], %r2157;
	st.global.u32 	[%rd624+184], %r2158;
	st.global.u32 	[%rd624+188], %r2159;
	st.global.u32 	[%rd624+192], %r2160;
	st.global.u32 	[%rd624+196], %r2161;
	st.global.u32 	[%rd624+200], %r2162;
	st.global.u32 	[%rd624+204], %r2163;
	st.global.u32 	[%rd624+208], %r2164;
	st.global.u32 	[%rd624+212], %r2165;
	st.global.u32 	[%rd624+216], %r2166;
	st.global.u32 	[%rd624+220], %r2167;
	st.global.u32 	[%rd624+224], %r2168;
	st.global.u32 	[%rd624+228], %r2169;
	st.global.u32 	[%rd624+232], %r2170;
	st.global.u32 	[%rd624+236], %r2171;
	st.global.u32 	[%rd624+240], %r2172;
	st.global.u32 	[%rd624+244], %r2173;
	st.global.u32 	[%rd624+248], %r2174;
	st.global.u32 	[%rd624+252], %r2175;
	st.global.u32 	[%rd624+256], %r2176;
	st.global.u32 	[%rd624+260], %r2177;
	st.global.u32 	[%rd624+264], %r2178;
	st.global.u32 	[%rd624+268], %r2179;
	st.global.u32 	[%rd624+272], %r2180;
	st.global.u32 	[%rd624+276], %r2181;
	st.global.u32 	[%rd624+280], %r2182;
	st.global.u32 	[%rd624+284], %r2183;
	st.global.u32 	[%rd624+288], %r2184;
	st.global.u32 	[%rd624+292], %r2185;
	st.global.u32 	[%rd624+296], %r2186;
	st.global.u32 	[%rd624+300], %r2187;
	st.global.u32 	[%rd624+304], %r2188;
	st.global.u32 	[%rd624+308], %r2189;
	st.global.u32 	[%rd624+312], %r2190;
	st.global.u32 	[%rd624+316], %r2191;
	st.global.u32 	[%rd624+320], %r2192;
	st.global.u32 	[%rd624+324], %r2193;
	st.global.u32 	[%rd624+328], %r2194;
	st.global.u32 	[%rd624+332], %r2195;
	st.global.u32 	[%rd624+336], %r2196;
	st.global.u32 	[%rd624+340], %r2197;
	st.global.u32 	[%rd624+344], %r2198;
	st.global.u32 	[%rd624+348], %r2199;
	st.global.u32 	[%rd624+352], %r2200;
	st.global.u32 	[%rd624+356], %r2201;
	st.global.u32 	[%rd624+360], %r2202;
	st.global.u32 	[%rd624+364], %r2203;
	st.global.u32 	[%rd624+368], %r2204;
	st.global.u32 	[%rd624+372], %r2205;
	st.global.u32 	[%rd624+376], %r2206;
	st.global.u32 	[%rd624+380], %r2207;
	st.global.u32 	[%rd624+384], %r2208;
	st.global.u32 	[%rd624+388], %r2209;
	st.global.u32 	[%rd624+392], %r2210;
	st.global.u32 	[%rd624+396], %r2211;
	st.global.u32 	[%rd624+400], %r2212;
	st.global.u32 	[%rd624+404], %r2213;
	st.global.u32 	[%rd624+408], %r2214;
	st.global.u32 	[%rd624+412], %r2215;
	st.local.u64 	[%rd389], %rd3013;
	st.local.u64 	[%rd21], %rd3002;
	st.local.u64 	[%rd22], %rd3014;
	st.local.u64 	[%rd23], %rd3015;
	st.local.u64 	[%rd24], %rd3016;
	st.local.u64 	[%rd25], %rd3017;
	st.local.u64 	[%rd26], %rd3022;
	st.local.u64 	[%rd27], %rd3023;
	mov.u32 	%r16224, 0;
	st.local.u32 	[%rd28], %r16224;
	st.local.u32 	[%rd29], %r16224;
	st.local.u32 	[%rd30], %r16224;
	st.local.u32 	[%rd389+76], %r16224;
	st.local.v2.u32 	[%rd389+80], {%r16224, %r16224};
	st.local.v2.u32 	[%rd389+88], {%r16224, %r16224};
	st.local.v2.u32 	[%rd389+96], {%r16224, %r16224};
	st.local.u32 	[%rd389+192], %r16224;
	st.local.u32 	[%rd31], %r16224;
	st.local.u32 	[%rd32], %r16224;
	st.local.u32 	[%rd33], %r16224;
	st.local.u32 	[%rd34], %r16224;
	st.local.u32 	[%rd35], %r16224;
	st.local.u32 	[%rd36], %r16224;
	st.local.u32 	[%rd37], %r16224;
	st.local.u32 	[%rd38], %r16224;
	st.local.u32 	[%rd39], %r16224;
	st.local.u32 	[%rd40], %r16224;
	st.local.u32 	[%rd41], %r16224;
	st.local.u32 	[%rd42], %r16224;
	st.local.u32 	[%rd43], %r16224;
	st.local.u32 	[%rd44], %r16224;
	st.local.u32 	[%rd45], %r16224;
	st.local.u32 	[%rd46], %r16224;
	st.local.u32 	[%rd47], %r16224;
	st.local.u32 	[%rd48], %r16224;
	st.local.u32 	[%rd49], %r16224;
	st.local.u32 	[%rd50], %r16224;
	st.local.u32 	[%rd51], %r16224;
	st.local.u32 	[%rd52], %r16224;

BB5_421:
	// Callseq Start 63
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd388;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd295;
	.param .b32 param2;
	st.param.b32	[param2+0], %r229;
	call.uni 
	sha512_update, 
	(
	param0, 
	param1, 
	param2
	);
	
	//{
	}// Callseq End 63
	ld.global.u8 	%r2279, [%rd109+3];
	add.s32 	%r2280, %r2279, 16;
	add.s32 	%r16224, %r16224, 1;
	setp.lt.u32	%p248, %r16224, %r2280;
	@%p248 bra 	BB5_421;

	mov.pred 	%p452, 0;
	// Callseq Start 64
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd388;
	call.uni 
	sha512_final, 
	(
	param0
	);
	
	//{
	}// Callseq End 64
	ld.local.u64 	%rd791, [%rd389];
	shr.u64 	%rd792, %rd791, 32;
	cvt.u32.u64	%r16247, %rd792;
	st.local.u32 	[%rd11], %r16247;
	cvt.u32.u64	%r16246, %rd791;
	st.local.u32 	[%rd76], %r16246;
	ld.local.u64 	%rd793, [%rd21];
	shr.u64 	%rd794, %rd793, 32;
	cvt.u32.u64	%r16245, %rd794;
	st.local.u32 	[%rd77], %r16245;
	cvt.u32.u64	%r16244, %rd793;
	st.local.u32 	[%rd78], %r16244;
	ld.local.u64 	%rd795, [%rd22];
	shr.u64 	%rd796, %rd795, 32;
	cvt.u32.u64	%r16243, %rd796;
	st.local.u32 	[%rd79], %r16243;
	cvt.u32.u64	%r16242, %rd795;
	st.local.u32 	[%rd80], %r16242;
	ld.local.u64 	%rd797, [%rd23];
	shr.u64 	%rd798, %rd797, 32;
	cvt.u32.u64	%r16241, %rd798;
	st.local.u32 	[%rd81], %r16241;
	cvt.u32.u64	%r16240, %rd797;
	st.local.u32 	[%rd82], %r16240;
	ld.local.u64 	%rd799, [%rd24];
	shr.u64 	%rd800, %rd799, 32;
	cvt.u32.u64	%r16239, %rd800;
	st.local.u32 	[%rd83], %r16239;
	cvt.u32.u64	%r16238, %rd799;
	st.local.u32 	[%rd84], %r16238;
	ld.local.u64 	%rd801, [%rd25];
	shr.u64 	%rd802, %rd801, 32;
	cvt.u32.u64	%r16237, %rd802;
	st.local.u32 	[%rd85], %r16237;
	cvt.u32.u64	%r16236, %rd801;
	st.local.u32 	[%rd86], %r16236;
	ld.local.u64 	%rd803, [%rd26];
	shr.u64 	%rd804, %rd803, 32;
	cvt.u32.u64	%r207, %rd804;
	st.local.u32 	[%rd87], %r207;
	cvt.u32.u64	%r208, %rd803;
	st.local.u32 	[%rd88], %r208;
	ld.local.u64 	%rd805, [%rd27];
	shr.u64 	%rd806, %rd805, 32;
	cvt.u32.u64	%r209, %rd806;
	st.local.u32 	[%rd89], %r209;
	cvt.u32.u64	%r210, %rd805;
	st.local.u32 	[%rd90], %r210;
	mov.u64 	%rd3030, 0;
	@%p452 bra 	BB5_424;

BB5_423:
	shl.b64 	%rd808, %rd3030, 2;
	add.s64 	%rd809, %rd13, %rd808;
	mov.u32 	%r2281, 0;
	st.local.u32 	[%rd809], %r2281;
	add.s64 	%rd3030, %rd3030, 1;
	setp.lt.u64	%p250, %rd3030, 64;
	@%p250 bra 	BB5_423;

BB5_424:
	mov.u32 	%r16234, 0;
	setp.lt.s32	%p251, %r229, 65;
	@%p251 bra 	BB5_436;

	add.s32 	%r2288, %r229, -65;
	shr.u32 	%r2289, %r2288, 6;
	add.s32 	%r211, %r2289, 1;
	and.b32  	%r2287, %r211, 3;
	mov.u32 	%r16234, 0;
	setp.eq.s32	%p252, %r2287, 0;
	@%p252 bra 	BB5_426;

	setp.eq.s32	%p253, %r2287, 1;
	@%p253 bra 	BB5_431;

	setp.eq.s32	%p254, %r2287, 2;
	@%p254 bra 	BB5_430;

	st.local.v4.u32 	[%rd13], {%r16247, %r16246, %r16245, %r16244};
	st.local.v4.u32 	[%rd13+16], {%r16243, %r16242, %r16241, %r16240};
	st.local.v4.u32 	[%rd13+32], {%r16239, %r16238, %r16237, %r16236};
	st.local.v4.u32 	[%rd13+48], {%r207, %r208, %r209, %r210};
	add.s32 	%r229, %r229, -64;
	mov.u32 	%r16234, 16;

BB5_430:
	mul.wide.u32 	%rd810, %r16234, 4;
	add.s64 	%rd811, %rd13, %rd810;
	st.local.u32 	[%rd811], %r16247;
	add.s32 	%r2291, %r16234, 1;
	mul.wide.u32 	%rd812, %r2291, 4;
	add.s64 	%rd813, %rd13, %rd812;
	st.local.u32 	[%rd813], %r16246;
	add.s32 	%r2292, %r16234, 2;
	mul.wide.u32 	%rd814, %r2292, 4;
	add.s64 	%rd815, %rd13, %rd814;
	st.local.u32 	[%rd815], %r16245;
	add.s32 	%r2293, %r16234, 3;
	mul.wide.u32 	%rd816, %r2293, 4;
	add.s64 	%rd817, %rd13, %rd816;
	st.local.u32 	[%rd817], %r16244;
	add.s32 	%r2294, %r16234, 4;
	mul.wide.u32 	%rd818, %r2294, 4;
	add.s64 	%rd819, %rd13, %rd818;
	st.local.u32 	[%rd819], %r16243;
	add.s32 	%r2295, %r16234, 5;
	mul.wide.u32 	%rd820, %r2295, 4;
	add.s64 	%rd821, %rd13, %rd820;
	st.local.u32 	[%rd821], %r16242;
	add.s32 	%r2296, %r16234, 6;
	mul.wide.u32 	%rd822, %r2296, 4;
	add.s64 	%rd823, %rd13, %rd822;
	st.local.u32 	[%rd823], %r16241;
	add.s32 	%r2297, %r16234, 7;
	mul.wide.u32 	%rd824, %r2297, 4;
	add.s64 	%rd825, %rd13, %rd824;
	st.local.u32 	[%rd825], %r16240;
	add.s32 	%r2298, %r16234, 8;
	mul.wide.u32 	%rd826, %r2298, 4;
	add.s64 	%rd827, %rd13, %rd826;
	st.local.u32 	[%rd827], %r16239;
	add.s32 	%r2299, %r16234, 9;
	mul.wide.u32 	%rd828, %r2299, 4;
	add.s64 	%rd829, %rd13, %rd828;
	st.local.u32 	[%rd829], %r16238;
	add.s32 	%r2300, %r16234, 10;
	mul.wide.u32 	%rd830, %r2300, 4;
	add.s64 	%rd831, %rd13, %rd830;
	st.local.u32 	[%rd831], %r16237;
	add.s32 	%r2301, %r16234, 11;
	mul.wide.u32 	%rd832, %r2301, 4;
	add.s64 	%rd833, %rd13, %rd832;
	st.local.u32 	[%rd833], %r16236;
	add.s32 	%r2302, %r16234, 12;
	mul.wide.u32 	%rd834, %r2302, 4;
	add.s64 	%rd835, %rd13, %rd834;
	st.local.u32 	[%rd835], %r207;
	add.s32 	%r2303, %r16234, 13;
	mul.wide.u32 	%rd836, %r2303, 4;
	add.s64 	%rd837, %rd13, %rd836;
	st.local.u32 	[%rd837], %r208;
	add.s32 	%r2304, %r16234, 14;
	mul.wide.u32 	%rd838, %r2304, 4;
	add.s64 	%rd839, %rd13, %rd838;
	st.local.u32 	[%rd839], %r209;
	add.s32 	%r2305, %r16234, 15;
	mul.wide.u32 	%rd840, %r2305, 4;
	add.s64 	%rd841, %rd13, %rd840;
	st.local.u32 	[%rd841], %r210;
	add.s32 	%r229, %r229, -64;
	add.s32 	%r16234, %r16234, 16;

BB5_431:
	mul.wide.s32 	%rd842, %r16234, 4;
	add.s64 	%rd843, %rd13, %rd842;
	st.local.u32 	[%rd843], %r16247;
	add.s32 	%r2306, %r16234, 1;
	mul.wide.s32 	%rd844, %r2306, 4;
	add.s64 	%rd845, %rd13, %rd844;
	st.local.u32 	[%rd845], %r16246;
	add.s32 	%r2307, %r16234, 2;
	mul.wide.s32 	%rd846, %r2307, 4;
	add.s64 	%rd847, %rd13, %rd846;
	st.local.u32 	[%rd847], %r16245;
	add.s32 	%r2308, %r16234, 3;
	mul.wide.s32 	%rd848, %r2308, 4;
	add.s64 	%rd849, %rd13, %rd848;
	st.local.u32 	[%rd849], %r16244;
	add.s32 	%r2309, %r16234, 4;
	mul.wide.s32 	%rd850, %r2309, 4;
	add.s64 	%rd851, %rd13, %rd850;
	st.local.u32 	[%rd851], %r16243;
	add.s32 	%r2310, %r16234, 5;
	mul.wide.s32 	%rd852, %r2310, 4;
	add.s64 	%rd853, %rd13, %rd852;
	st.local.u32 	[%rd853], %r16242;
	add.s32 	%r2311, %r16234, 6;
	mul.wide.s32 	%rd854, %r2311, 4;
	add.s64 	%rd855, %rd13, %rd854;
	st.local.u32 	[%rd855], %r16241;
	add.s32 	%r2312, %r16234, 7;
	mul.wide.s32 	%rd856, %r2312, 4;
	add.s64 	%rd857, %rd13, %rd856;
	st.local.u32 	[%rd857], %r16240;
	add.s32 	%r2313, %r16234, 8;
	mul.wide.s32 	%rd858, %r2313, 4;
	add.s64 	%rd859, %rd13, %rd858;
	st.local.u32 	[%rd859], %r16239;
	add.s32 	%r2314, %r16234, 9;
	mul.wide.s32 	%rd860, %r2314, 4;
	add.s64 	%rd861, %rd13, %rd860;
	st.local.u32 	[%rd861], %r16238;
	add.s32 	%r2315, %r16234, 10;
	mul.wide.s32 	%rd862, %r2315, 4;
	add.s64 	%rd863, %rd13, %rd862;
	st.local.u32 	[%rd863], %r16237;
	add.s32 	%r2316, %r16234, 11;
	mul.wide.s32 	%rd864, %r2316, 4;
	add.s64 	%rd865, %rd13, %rd864;
	st.local.u32 	[%rd865], %r16236;
	add.s32 	%r2317, %r16234, 12;
	mul.wide.s32 	%rd866, %r2317, 4;
	add.s64 	%rd867, %rd13, %rd866;
	st.local.u32 	[%rd867], %r207;
	add.s32 	%r2318, %r16234, 13;
	mul.wide.s32 	%rd868, %r2318, 4;
	add.s64 	%rd869, %rd13, %rd868;
	st.local.u32 	[%rd869], %r208;
	add.s32 	%r2319, %r16234, 14;
	mul.wide.s32 	%rd870, %r2319, 4;
	add.s64 	%rd871, %rd13, %rd870;
	st.local.u32 	[%rd871], %r209;
	add.s32 	%r2320, %r16234, 15;
	mul.wide.s32 	%rd872, %r2320, 4;
	add.s64 	%rd873, %rd13, %rd872;
	st.local.u32 	[%rd873], %r210;
	add.s32 	%r229, %r229, -64;
	add.s32 	%r16234, %r16234, 16;
	mov.u32 	%r16231, %r229;
	bra.uni 	BB5_432;

BB5_426:
	mov.u32 	%r16231, %r16234;

BB5_432:
	setp.lt.u32	%p255, %r211, 4;
	@%p255 bra 	BB5_433;
	bra.uni 	BB5_434;

BB5_433:
	mov.u32 	%r229, %r16231;
	bra.uni 	BB5_436;

BB5_434:
	mul.wide.s32 	%rd874, %r16234, 4;
	add.s64 	%rd3031, %rd13, %rd874;

BB5_435:
	st.local.u32 	[%rd3031], %r16247;
	st.local.u32 	[%rd3031+4], %r16246;
	st.local.u32 	[%rd3031+8], %r16245;
	st.local.u32 	[%rd3031+12], %r16244;
	st.local.u32 	[%rd3031+16], %r16243;
	st.local.u32 	[%rd3031+20], %r16242;
	st.local.u32 	[%rd3031+24], %r16241;
	st.local.u32 	[%rd3031+28], %r16240;
	st.local.u32 	[%rd3031+32], %r16239;
	st.local.u32 	[%rd3031+36], %r16238;
	st.local.u32 	[%rd3031+40], %r16237;
	st.local.u32 	[%rd3031+44], %r16236;
	st.local.u32 	[%rd3031+48], %r207;
	st.local.u32 	[%rd3031+52], %r208;
	st.local.u32 	[%rd3031+56], %r209;
	st.local.u32 	[%rd3031+60], %r210;
	st.local.u32 	[%rd3031+64], %r16247;
	st.local.u32 	[%rd3031+68], %r16246;
	st.local.u32 	[%rd3031+72], %r16245;
	st.local.u32 	[%rd3031+76], %r16244;
	st.local.u32 	[%rd3031+80], %r16243;
	st.local.u32 	[%rd3031+84], %r16242;
	st.local.u32 	[%rd3031+88], %r16241;
	st.local.u32 	[%rd3031+92], %r16240;
	st.local.u32 	[%rd3031+96], %r16239;
	st.local.u32 	[%rd3031+100], %r16238;
	st.local.u32 	[%rd3031+104], %r16237;
	st.local.u32 	[%rd3031+108], %r16236;
	st.local.u32 	[%rd3031+112], %r207;
	st.local.u32 	[%rd3031+116], %r208;
	st.local.u32 	[%rd3031+120], %r209;
	st.local.u32 	[%rd3031+124], %r210;
	st.local.u32 	[%rd3031+128], %r16247;
	st.local.u32 	[%rd3031+132], %r16246;
	st.local.u32 	[%rd3031+136], %r16245;
	st.local.u32 	[%rd3031+140], %r16244;
	st.local.u32 	[%rd3031+144], %r16243;
	st.local.u32 	[%rd3031+148], %r16242;
	st.local.u32 	[%rd3031+152], %r16241;
	st.local.u32 	[%rd3031+156], %r16240;
	st.local.u32 	[%rd3031+160], %r16239;
	st.local.u32 	[%rd3031+164], %r16238;
	st.local.u32 	[%rd3031+168], %r16237;
	st.local.u32 	[%rd3031+172], %r16236;
	st.local.u32 	[%rd3031+176], %r207;
	st.local.u32 	[%rd3031+180], %r208;
	st.local.u32 	[%rd3031+184], %r209;
	st.local.u32 	[%rd3031+188], %r210;
	st.local.u32 	[%rd3031+192], %r16247;
	st.local.u32 	[%rd3031+196], %r16246;
	st.local.u32 	[%rd3031+200], %r16245;
	st.local.u32 	[%rd3031+204], %r16244;
	st.local.u32 	[%rd3031+208], %r16243;
	st.local.u32 	[%rd3031+212], %r16242;
	st.local.u32 	[%rd3031+216], %r16241;
	st.local.u32 	[%rd3031+220], %r16240;
	st.local.u32 	[%rd3031+224], %r16239;
	st.local.u32 	[%rd3031+228], %r16238;
	st.local.u32 	[%rd3031+232], %r16237;
	st.local.u32 	[%rd3031+236], %r16236;
	st.local.u32 	[%rd3031+240], %r207;
	st.local.u32 	[%rd3031+244], %r208;
	st.local.u32 	[%rd3031+248], %r209;
	st.local.u32 	[%rd3031+252], %r210;
	add.s32 	%r16234, %r16234, 64;
	add.s64 	%rd3031, %rd3031, 256;
	add.s32 	%r229, %r229, -256;
	setp.gt.s32	%p256, %r229, 64;
	@%p256 bra 	BB5_435;

BB5_436:
	setp.gt.s32	%p257, %r229, 31;
	@%p257 bra 	BB5_516;

	setp.gt.s32	%p305, %r229, 15;
	@%p305 bra 	BB5_477;

	setp.gt.s32	%p329, %r229, 7;
	@%p329 bra 	BB5_458;

	setp.gt.s32	%p341, %r229, 3;
	@%p341 bra 	BB5_449;

	setp.gt.s32	%p347, %r229, 1;
	@%p347 bra 	BB5_444;

	setp.eq.s32	%p350, %r229, 0;
	@%p350 bra 	BB5_605;
	bra.uni 	BB5_442;

BB5_605:
	mov.u32 	%r16236, 0;
	st.local.u32 	[%rd11], %r16236;
	st.local.u32 	[%rd76], %r16236;
	st.local.u32 	[%rd77], %r16236;
	st.local.u32 	[%rd78], %r16236;
	st.local.u32 	[%rd79], %r16236;
	st.local.u32 	[%rd80], %r16236;
	st.local.u32 	[%rd81], %r16236;
	st.local.u32 	[%rd82], %r16236;
	st.local.u32 	[%rd83], %r16236;
	st.local.u32 	[%rd84], %r16236;
	st.local.u32 	[%rd85], %r16236;
	st.local.u32 	[%rd86], %r16236;
	st.local.u32 	[%rd87], %r16236;
	st.local.u32 	[%rd88], %r16236;
	st.local.u32 	[%rd89], %r16236;
	st.local.u32 	[%rd90], %r16236;
	mov.u32 	%r16237, %r16236;
	mov.u32 	%r16238, %r16236;
	mov.u32 	%r16239, %r16236;
	mov.u32 	%r16240, %r16236;
	mov.u32 	%r16241, %r16236;
	mov.u32 	%r16242, %r16236;
	mov.u32 	%r16243, %r16236;
	mov.u32 	%r16244, %r16236;
	mov.u32 	%r16245, %r16236;
	mov.u32 	%r16246, %r16236;
	mov.u32 	%r16247, %r16236;
	bra.uni 	BB5_606;

BB5_516:
	setp.gt.s32	%p258, %r229, 47;
	@%p258 bra 	BB5_554;

	setp.gt.s32	%p282, %r229, 39;
	@%p282 bra 	BB5_537;

	setp.gt.s32	%p294, %r229, 35;
	@%p294 bra 	BB5_528;

	setp.gt.s32	%p300, %r229, 33;
	@%p300 bra 	BB5_523;

	setp.eq.s32	%p303, %r229, 32;
	@%p303 bra 	BB5_515;

	setp.eq.s32	%p304, %r229, 33;
	@%p304 bra 	BB5_522;
	bra.uni 	BB5_606;

BB5_522:
	and.b32  	%r16239, %r16239, -16777216;
	bra.uni 	BB5_526;

BB5_477:
	setp.gt.s32	%p306, %r229, 23;
	@%p306 bra 	BB5_497;

	setp.gt.s32	%p318, %r229, 19;
	@%p318 bra 	BB5_488;

	setp.gt.s32	%p324, %r229, 17;
	@%p324 bra 	BB5_483;

	setp.eq.s32	%p327, %r229, 16;
	@%p327 bra 	BB5_476;

	setp.eq.s32	%p328, %r229, 17;
	@%p328 bra 	BB5_482;
	bra.uni 	BB5_606;

BB5_482:
	and.b32  	%r16243, %r16243, -16777216;
	bra.uni 	BB5_486;

BB5_554:
	setp.gt.s32	%p259, %r229, 55;
	@%p259 bra 	BB5_570;

	setp.gt.s32	%p271, %r229, 51;
	@%p271 bra 	BB5_563;

	setp.gt.s32	%p277, %r229, 49;
	@%p277 bra 	BB5_560;

	setp.eq.s32	%p280, %r229, 48;
	@%p280 bra 	BB5_592;
	bra.uni 	BB5_558;

BB5_592:
	mov.u32 	%r2345, 0;
	st.local.u32 	[%rd87], %r2345;
	st.local.u32 	[%rd88], %r2345;
	st.local.u32 	[%rd89], %r2345;
	st.local.u32 	[%rd90], %r2345;
	bra.uni 	BB5_606;

BB5_458:
	setp.gt.s32	%p330, %r229, 11;
	@%p330 bra 	BB5_468;

	setp.gt.s32	%p336, %r229, 9;
	@%p336 bra 	BB5_463;

	setp.eq.s32	%p339, %r229, 8;
	@%p339 bra 	BB5_457;

	setp.eq.s32	%p340, %r229, 9;
	@%p340 bra 	BB5_462;
	bra.uni 	BB5_606;

BB5_462:
	and.b32  	%r16245, %r16245, -16777216;
	bra.uni 	BB5_466;

BB5_537:
	setp.gt.s32	%p283, %r229, 43;
	@%p283 bra 	BB5_547;

	setp.gt.s32	%p289, %r229, 41;
	@%p289 bra 	BB5_542;

	setp.eq.s32	%p292, %r229, 40;
	@%p292 bra 	BB5_536;

	setp.eq.s32	%p293, %r229, 41;
	@%p293 bra 	BB5_541;
	bra.uni 	BB5_606;

BB5_541:
	and.b32  	%r16237, %r16237, -16777216;
	bra.uni 	BB5_545;

BB5_497:
	setp.gt.s32	%p307, %r229, 27;
	@%p307 bra 	BB5_507;

	setp.gt.s32	%p313, %r229, 25;
	@%p313 bra 	BB5_502;

	setp.eq.s32	%p316, %r229, 24;
	@%p316 bra 	BB5_496;

	setp.eq.s32	%p317, %r229, 25;
	@%p317 bra 	BB5_501;
	bra.uni 	BB5_606;

BB5_501:
	and.b32  	%r16241, %r16241, -16777216;
	bra.uni 	BB5_505;

BB5_570:
	setp.gt.s32	%p260, %r229, 59;
	@%p260 bra 	BB5_578;

	setp.gt.s32	%p266, %r229, 57;
	@%p266 bra 	BB5_575;

	setp.eq.s32	%p269, %r229, 56;
	@%p269 bra 	BB5_588;
	bra.uni 	BB5_573;

BB5_588:
	mov.u32 	%r2331, 0;
	st.local.u32 	[%rd89], %r2331;
	st.local.u32 	[%rd90], %r2331;
	bra.uni 	BB5_606;

BB5_449:
	setp.gt.s32	%p342, %r229, 5;
	@%p342 bra 	BB5_453;

	setp.eq.s32	%p345, %r229, 4;
	@%p345 bra 	BB5_448;

	setp.eq.s32	%p346, %r229, 5;
	@%p346 bra 	BB5_452;
	bra.uni 	BB5_606;

BB5_452:
	and.b32  	%r16246, %r16246, -16777216;
	bra.uni 	BB5_456;

BB5_528:
	setp.gt.s32	%p295, %r229, 37;
	@%p295 bra 	BB5_532;

	setp.eq.s32	%p298, %r229, 36;
	@%p298 bra 	BB5_527;

	setp.eq.s32	%p299, %r229, 37;
	@%p299 bra 	BB5_531;
	bra.uni 	BB5_606;

BB5_531:
	and.b32  	%r16238, %r16238, -16777216;
	bra.uni 	BB5_535;

BB5_488:
	setp.gt.s32	%p319, %r229, 21;
	@%p319 bra 	BB5_492;

	setp.eq.s32	%p322, %r229, 20;
	@%p322 bra 	BB5_487;

	setp.eq.s32	%p323, %r229, 21;
	@%p323 bra 	BB5_491;
	bra.uni 	BB5_606;

BB5_491:
	and.b32  	%r16242, %r16242, -16777216;
	bra.uni 	BB5_495;

BB5_563:
	setp.gt.s32	%p272, %r229, 53;
	@%p272 bra 	BB5_567;

	setp.eq.s32	%p275, %r229, 52;
	@%p275 bra 	BB5_590;
	bra.uni 	BB5_565;

BB5_590:
	mov.u32 	%r2338, 0;
	st.local.u32 	[%rd88], %r2338;
	st.local.u32 	[%rd89], %r2338;
	st.local.u32 	[%rd90], %r2338;
	bra.uni 	BB5_606;

BB5_468:
	setp.gt.s32	%p331, %r229, 13;
	@%p331 bra 	BB5_472;

	setp.eq.s32	%p334, %r229, 12;
	@%p334 bra 	BB5_467;

	setp.eq.s32	%p335, %r229, 13;
	@%p335 bra 	BB5_471;
	bra.uni 	BB5_606;

BB5_471:
	and.b32  	%r16244, %r16244, -16777216;
	bra.uni 	BB5_475;

BB5_547:
	setp.gt.s32	%p284, %r229, 45;
	@%p284 bra 	BB5_551;

	setp.eq.s32	%p287, %r229, 44;
	@%p287 bra 	BB5_546;

	setp.eq.s32	%p288, %r229, 45;
	@%p288 bra 	BB5_550;
	bra.uni 	BB5_606;

BB5_550:
	and.b32  	%r16236, %r16236, -16777216;
	st.local.u32 	[%rd86], %r16236;
	mov.u32 	%r2348, 0;
	st.local.u32 	[%rd87], %r2348;
	st.local.u32 	[%rd88], %r2348;
	st.local.u32 	[%rd89], %r2348;
	st.local.u32 	[%rd90], %r2348;
	bra.uni 	BB5_606;

BB5_507:
	setp.gt.s32	%p308, %r229, 29;
	@%p308 bra 	BB5_511;

	setp.eq.s32	%p311, %r229, 28;
	@%p311 bra 	BB5_506;

	setp.eq.s32	%p312, %r229, 29;
	@%p312 bra 	BB5_510;
	bra.uni 	BB5_606;

BB5_510:
	and.b32  	%r16240, %r16240, -16777216;
	bra.uni 	BB5_514;

BB5_578:
	setp.gt.s32	%p261, %r229, 61;
	@%p261 bra 	BB5_582;

	setp.eq.s32	%p264, %r229, 60;
	@%p264 bra 	BB5_586;
	bra.uni 	BB5_580;

BB5_586:
	mov.u32 	%r2324, 0;
	st.local.u32 	[%rd90], %r2324;
	bra.uni 	BB5_606;

BB5_444:
	setp.eq.s32	%p348, %r229, 2;
	@%p348 bra 	BB5_604;
	bra.uni 	BB5_445;

BB5_604:
	and.b32  	%r16247, %r16247, -65536;
	bra.uni 	BB5_447;

BB5_523:
	setp.eq.s32	%p301, %r229, 34;
	@%p301 bra 	BB5_596;
	bra.uni 	BB5_524;

BB5_596:
	and.b32  	%r16239, %r16239, -65536;
	bra.uni 	BB5_526;

BB5_483:
	setp.eq.s32	%p325, %r229, 18;
	@%p325 bra 	BB5_600;
	bra.uni 	BB5_484;

BB5_600:
	and.b32  	%r16243, %r16243, -65536;
	bra.uni 	BB5_486;

BB5_560:
	setp.eq.s32	%p278, %r229, 50;
	@%p278 bra 	BB5_591;
	bra.uni 	BB5_561;

BB5_591:
	and.b32  	%r2341, %r207, -65536;
	st.local.u32 	[%rd87], %r2341;
	mov.u32 	%r2342, 0;
	st.local.u32 	[%rd88], %r2342;
	st.local.u32 	[%rd89], %r2342;
	st.local.u32 	[%rd90], %r2342;
	bra.uni 	BB5_606;

BB5_463:
	setp.eq.s32	%p337, %r229, 10;
	@%p337 bra 	BB5_602;
	bra.uni 	BB5_464;

BB5_602:
	and.b32  	%r16245, %r16245, -65536;
	bra.uni 	BB5_466;

BB5_542:
	setp.eq.s32	%p290, %r229, 42;
	@%p290 bra 	BB5_594;
	bra.uni 	BB5_543;

BB5_594:
	and.b32  	%r16237, %r16237, -65536;
	bra.uni 	BB5_545;

BB5_502:
	setp.eq.s32	%p314, %r229, 26;
	@%p314 bra 	BB5_598;
	bra.uni 	BB5_503;

BB5_598:
	and.b32  	%r16241, %r16241, -65536;
	bra.uni 	BB5_505;

BB5_575:
	setp.eq.s32	%p267, %r229, 58;
	@%p267 bra 	BB5_587;
	bra.uni 	BB5_576;

BB5_587:
	and.b32  	%r2327, %r209, -65536;
	st.local.u32 	[%rd89], %r2327;
	mov.u32 	%r2328, 0;
	st.local.u32 	[%rd90], %r2328;
	bra.uni 	BB5_606;

BB5_453:
	setp.eq.s32	%p343, %r229, 6;
	@%p343 bra 	BB5_603;
	bra.uni 	BB5_454;

BB5_603:
	and.b32  	%r16246, %r16246, -65536;
	bra.uni 	BB5_456;

BB5_532:
	setp.eq.s32	%p296, %r229, 38;
	@%p296 bra 	BB5_595;
	bra.uni 	BB5_533;

BB5_595:
	and.b32  	%r16238, %r16238, -65536;
	bra.uni 	BB5_535;

BB5_492:
	setp.eq.s32	%p320, %r229, 22;
	@%p320 bra 	BB5_599;
	bra.uni 	BB5_493;

BB5_599:
	and.b32  	%r16242, %r16242, -65536;
	bra.uni 	BB5_495;

BB5_567:
	setp.eq.s32	%p273, %r229, 54;
	@%p273 bra 	BB5_589;
	bra.uni 	BB5_568;

BB5_589:
	and.b32  	%r2334, %r208, -65536;
	st.local.u32 	[%rd88], %r2334;
	mov.u32 	%r2335, 0;
	st.local.u32 	[%rd89], %r2335;
	st.local.u32 	[%rd90], %r2335;
	bra.uni 	BB5_606;

BB5_472:
	setp.eq.s32	%p332, %r229, 14;
	@%p332 bra 	BB5_601;
	bra.uni 	BB5_473;

BB5_601:
	and.b32  	%r16244, %r16244, -65536;
	bra.uni 	BB5_475;

BB5_551:
	setp.eq.s32	%p285, %r229, 46;
	@%p285 bra 	BB5_593;
	bra.uni 	BB5_552;

BB5_593:
	and.b32  	%r16236, %r16236, -65536;
	st.local.u32 	[%rd86], %r16236;
	mov.u32 	%r2347, 0;
	st.local.u32 	[%rd87], %r2347;
	st.local.u32 	[%rd88], %r2347;
	st.local.u32 	[%rd89], %r2347;
	st.local.u32 	[%rd90], %r2347;
	bra.uni 	BB5_606;

BB5_511:
	setp.eq.s32	%p309, %r229, 30;
	@%p309 bra 	BB5_597;
	bra.uni 	BB5_512;

BB5_597:
	and.b32  	%r16240, %r16240, -65536;
	bra.uni 	BB5_514;

BB5_582:
	setp.eq.s32	%p262, %r229, 62;
	@%p262 bra 	BB5_585;
	bra.uni 	BB5_583;

BB5_585:
	and.b32  	%r2322, %r210, -65536;
	st.local.u32 	[%rd90], %r2322;
	bra.uni 	BB5_606;

BB5_397:
	setp.ne.s32	%p159, %r144, 63;
	@%p159 bra 	BB5_420;

	and.b32  	%r1827, %r124, -256;
	st.local.u32 	[%rd90], %r1827;
	bra.uni 	BB5_420;

BB5_442:
	setp.eq.s32	%p351, %r229, 1;
	@%p351 bra 	BB5_443;
	bra.uni 	BB5_606;

BB5_443:
	and.b32  	%r16247, %r16247, -16777216;
	bra.uni 	BB5_447;

BB5_558:
	setp.eq.s32	%p281, %r229, 49;
	@%p281 bra 	BB5_559;
	bra.uni 	BB5_606;

BB5_559:
	and.b32  	%r2343, %r207, -16777216;
	st.local.u32 	[%rd87], %r2343;
	mov.u32 	%r2344, 0;
	st.local.u32 	[%rd88], %r2344;
	st.local.u32 	[%rd89], %r2344;
	st.local.u32 	[%rd90], %r2344;
	bra.uni 	BB5_606;

BB5_573:
	setp.eq.s32	%p270, %r229, 57;
	@%p270 bra 	BB5_574;
	bra.uni 	BB5_606;

BB5_574:
	and.b32  	%r2329, %r209, -16777216;
	st.local.u32 	[%rd89], %r2329;
	mov.u32 	%r2330, 0;
	st.local.u32 	[%rd90], %r2330;
	bra.uni 	BB5_606;

BB5_565:
	setp.eq.s32	%p276, %r229, 53;
	@%p276 bra 	BB5_566;
	bra.uni 	BB5_606;

BB5_566:
	and.b32  	%r2336, %r208, -16777216;
	st.local.u32 	[%rd88], %r2336;
	mov.u32 	%r2337, 0;
	st.local.u32 	[%rd89], %r2337;
	st.local.u32 	[%rd90], %r2337;
	bra.uni 	BB5_606;

BB5_580:
	setp.eq.s32	%p265, %r229, 61;
	@%p265 bra 	BB5_581;
	bra.uni 	BB5_606;

BB5_581:
	and.b32  	%r2323, %r210, -16777216;
	st.local.u32 	[%rd90], %r2323;
	bra.uni 	BB5_606;

BB5_445:
	setp.eq.s32	%p349, %r229, 3;
	@%p349 bra 	BB5_446;
	bra.uni 	BB5_606;

BB5_446:
	and.b32  	%r16247, %r16247, -256;

BB5_447:
	st.local.u32 	[%rd11], %r16247;

BB5_448:
	mov.u32 	%r16236, 0;
	st.local.u32 	[%rd76], %r16236;
	st.local.u32 	[%rd77], %r16236;
	st.local.u32 	[%rd78], %r16236;
	st.local.u32 	[%rd79], %r16236;
	st.local.u32 	[%rd80], %r16236;
	st.local.u32 	[%rd81], %r16236;
	st.local.u32 	[%rd82], %r16236;
	st.local.u32 	[%rd83], %r16236;
	st.local.u32 	[%rd84], %r16236;
	st.local.u32 	[%rd85], %r16236;
	st.local.u32 	[%rd86], %r16236;
	st.local.u32 	[%rd87], %r16236;
	st.local.u32 	[%rd88], %r16236;
	st.local.u32 	[%rd89], %r16236;
	st.local.u32 	[%rd90], %r16236;
	mov.u32 	%r16237, %r16236;
	mov.u32 	%r16238, %r16236;
	mov.u32 	%r16239, %r16236;
	mov.u32 	%r16240, %r16236;
	mov.u32 	%r16241, %r16236;
	mov.u32 	%r16242, %r16236;
	mov.u32 	%r16243, %r16236;
	mov.u32 	%r16244, %r16236;
	mov.u32 	%r16245, %r16236;
	mov.u32 	%r16246, %r16236;
	bra.uni 	BB5_606;

BB5_524:
	setp.eq.s32	%p302, %r229, 35;
	@%p302 bra 	BB5_525;
	bra.uni 	BB5_606;

BB5_525:
	and.b32  	%r16239, %r16239, -256;

BB5_526:
	st.local.u32 	[%rd83], %r16239;

BB5_527:
	mov.u32 	%r16236, 0;
	st.local.u32 	[%rd84], %r16236;
	st.local.u32 	[%rd85], %r16236;
	st.local.u32 	[%rd86], %r16236;
	st.local.u32 	[%rd87], %r16236;
	st.local.u32 	[%rd88], %r16236;
	st.local.u32 	[%rd89], %r16236;
	st.local.u32 	[%rd90], %r16236;
	mov.u32 	%r16237, %r16236;
	mov.u32 	%r16238, %r16236;
	bra.uni 	BB5_606;

BB5_484:
	setp.eq.s32	%p326, %r229, 19;
	@%p326 bra 	BB5_485;
	bra.uni 	BB5_606;

BB5_485:
	and.b32  	%r16243, %r16243, -256;

BB5_486:
	st.local.u32 	[%rd79], %r16243;

BB5_487:
	mov.u32 	%r16236, 0;
	st.local.u32 	[%rd80], %r16236;
	st.local.u32 	[%rd81], %r16236;
	st.local.u32 	[%rd82], %r16236;
	st.local.u32 	[%rd83], %r16236;
	st.local.u32 	[%rd84], %r16236;
	st.local.u32 	[%rd85], %r16236;
	st.local.u32 	[%rd86], %r16236;
	st.local.u32 	[%rd87], %r16236;
	st.local.u32 	[%rd88], %r16236;
	st.local.u32 	[%rd89], %r16236;
	st.local.u32 	[%rd90], %r16236;
	mov.u32 	%r16237, %r16236;
	mov.u32 	%r16238, %r16236;
	mov.u32 	%r16239, %r16236;
	mov.u32 	%r16240, %r16236;
	mov.u32 	%r16241, %r16236;
	mov.u32 	%r16242, %r16236;
	bra.uni 	BB5_606;

BB5_561:
	setp.eq.s32	%p279, %r229, 51;
	@%p279 bra 	BB5_562;
	bra.uni 	BB5_606;

BB5_562:
	and.b32  	%r2339, %r207, -256;
	st.local.u32 	[%rd87], %r2339;
	mov.u32 	%r2340, 0;
	st.local.u32 	[%rd88], %r2340;
	st.local.u32 	[%rd89], %r2340;
	st.local.u32 	[%rd90], %r2340;
	bra.uni 	BB5_606;

BB5_464:
	setp.eq.s32	%p338, %r229, 11;
	@%p338 bra 	BB5_465;
	bra.uni 	BB5_606;

BB5_465:
	and.b32  	%r16245, %r16245, -256;

BB5_466:
	st.local.u32 	[%rd77], %r16245;

BB5_467:
	mov.u32 	%r16236, 0;
	st.local.u32 	[%rd78], %r16236;
	st.local.u32 	[%rd79], %r16236;
	st.local.u32 	[%rd80], %r16236;
	st.local.u32 	[%rd81], %r16236;
	st.local.u32 	[%rd82], %r16236;
	st.local.u32 	[%rd83], %r16236;
	st.local.u32 	[%rd84], %r16236;
	st.local.u32 	[%rd85], %r16236;
	st.local.u32 	[%rd86], %r16236;
	st.local.u32 	[%rd87], %r16236;
	st.local.u32 	[%rd88], %r16236;
	st.local.u32 	[%rd89], %r16236;
	st.local.u32 	[%rd90], %r16236;
	mov.u32 	%r16237, %r16236;
	mov.u32 	%r16238, %r16236;
	mov.u32 	%r16239, %r16236;
	mov.u32 	%r16240, %r16236;
	mov.u32 	%r16241, %r16236;
	mov.u32 	%r16242, %r16236;
	mov.u32 	%r16243, %r16236;
	mov.u32 	%r16244, %r16236;
	bra.uni 	BB5_606;

BB5_543:
	setp.eq.s32	%p291, %r229, 43;
	@%p291 bra 	BB5_544;
	bra.uni 	BB5_606;

BB5_544:
	and.b32  	%r16237, %r16237, -256;

BB5_545:
	st.local.u32 	[%rd85], %r16237;

BB5_546:
	mov.u32 	%r16236, 0;
	st.local.u32 	[%rd86], %r16236;
	st.local.u32 	[%rd87], %r16236;
	st.local.u32 	[%rd88], %r16236;
	st.local.u32 	[%rd89], %r16236;
	st.local.u32 	[%rd90], %r16236;
	bra.uni 	BB5_606;

BB5_503:
	setp.eq.s32	%p315, %r229, 27;
	@%p315 bra 	BB5_504;
	bra.uni 	BB5_606;

BB5_504:
	and.b32  	%r16241, %r16241, -256;

BB5_505:
	st.local.u32 	[%rd81], %r16241;

BB5_506:
	mov.u32 	%r16236, 0;
	st.local.u32 	[%rd82], %r16236;
	st.local.u32 	[%rd83], %r16236;
	st.local.u32 	[%rd84], %r16236;
	st.local.u32 	[%rd85], %r16236;
	st.local.u32 	[%rd86], %r16236;
	st.local.u32 	[%rd87], %r16236;
	st.local.u32 	[%rd88], %r16236;
	st.local.u32 	[%rd89], %r16236;
	st.local.u32 	[%rd90], %r16236;
	mov.u32 	%r16237, %r16236;
	mov.u32 	%r16238, %r16236;
	mov.u32 	%r16239, %r16236;
	mov.u32 	%r16240, %r16236;
	bra.uni 	BB5_606;

BB5_576:
	setp.eq.s32	%p268, %r229, 59;
	@%p268 bra 	BB5_577;
	bra.uni 	BB5_606;

BB5_577:
	and.b32  	%r2325, %r209, -256;
	st.local.u32 	[%rd89], %r2325;
	mov.u32 	%r2326, 0;
	st.local.u32 	[%rd90], %r2326;
	bra.uni 	BB5_606;

BB5_454:
	setp.eq.s32	%p344, %r229, 7;
	@%p344 bra 	BB5_455;
	bra.uni 	BB5_606;

BB5_455:
	and.b32  	%r16246, %r16246, -256;

BB5_456:
	st.local.u32 	[%rd76], %r16246;

BB5_457:
	mov.u32 	%r16236, 0;
	st.local.u32 	[%rd77], %r16236;
	st.local.u32 	[%rd78], %r16236;
	st.local.u32 	[%rd79], %r16236;
	st.local.u32 	[%rd80], %r16236;
	st.local.u32 	[%rd81], %r16236;
	st.local.u32 	[%rd82], %r16236;
	st.local.u32 	[%rd83], %r16236;
	st.local.u32 	[%rd84], %r16236;
	st.local.u32 	[%rd85], %r16236;
	st.local.u32 	[%rd86], %r16236;
	st.local.u32 	[%rd87], %r16236;
	st.local.u32 	[%rd88], %r16236;
	st.local.u32 	[%rd89], %r16236;
	st.local.u32 	[%rd90], %r16236;
	mov.u32 	%r16237, %r16236;
	mov.u32 	%r16238, %r16236;
	mov.u32 	%r16239, %r16236;
	mov.u32 	%r16240, %r16236;
	mov.u32 	%r16241, %r16236;
	mov.u32 	%r16242, %r16236;
	mov.u32 	%r16243, %r16236;
	mov.u32 	%r16244, %r16236;
	mov.u32 	%r16245, %r16236;
	bra.uni 	BB5_606;

BB5_533:
	setp.eq.s32	%p297, %r229, 39;
	@%p297 bra 	BB5_534;
	bra.uni 	BB5_606;

BB5_534:
	and.b32  	%r16238, %r16238, -256;

BB5_535:
	st.local.u32 	[%rd84], %r16238;

BB5_536:
	mov.u32 	%r16236, 0;
	st.local.u32 	[%rd85], %r16236;
	st.local.u32 	[%rd86], %r16236;
	st.local.u32 	[%rd87], %r16236;
	st.local.u32 	[%rd88], %r16236;
	st.local.u32 	[%rd89], %r16236;
	st.local.u32 	[%rd90], %r16236;
	mov.u32 	%r16237, %r16236;
	bra.uni 	BB5_606;

BB5_493:
	setp.eq.s32	%p321, %r229, 23;
	@%p321 bra 	BB5_494;
	bra.uni 	BB5_606;

BB5_494:
	and.b32  	%r16242, %r16242, -256;

BB5_495:
	st.local.u32 	[%rd80], %r16242;

BB5_496:
	mov.u32 	%r16236, 0;
	st.local.u32 	[%rd81], %r16236;
	st.local.u32 	[%rd82], %r16236;
	st.local.u32 	[%rd83], %r16236;
	st.local.u32 	[%rd84], %r16236;
	st.local.u32 	[%rd85], %r16236;
	st.local.u32 	[%rd86], %r16236;
	st.local.u32 	[%rd87], %r16236;
	st.local.u32 	[%rd88], %r16236;
	st.local.u32 	[%rd89], %r16236;
	st.local.u32 	[%rd90], %r16236;
	mov.u32 	%r16237, %r16236;
	mov.u32 	%r16238, %r16236;
	mov.u32 	%r16239, %r16236;
	mov.u32 	%r16240, %r16236;
	mov.u32 	%r16241, %r16236;
	bra.uni 	BB5_606;

BB5_568:
	setp.eq.s32	%p274, %r229, 55;
	@%p274 bra 	BB5_569;
	bra.uni 	BB5_606;

BB5_569:
	and.b32  	%r2332, %r208, -256;
	st.local.u32 	[%rd88], %r2332;
	mov.u32 	%r2333, 0;
	st.local.u32 	[%rd89], %r2333;
	st.local.u32 	[%rd90], %r2333;
	bra.uni 	BB5_606;

BB5_473:
	setp.eq.s32	%p333, %r229, 15;
	@%p333 bra 	BB5_474;
	bra.uni 	BB5_606;

BB5_474:
	and.b32  	%r16244, %r16244, -256;

BB5_475:
	st.local.u32 	[%rd78], %r16244;

BB5_476:
	mov.u32 	%r16236, 0;
	st.local.u32 	[%rd79], %r16236;
	st.local.u32 	[%rd80], %r16236;
	st.local.u32 	[%rd81], %r16236;
	st.local.u32 	[%rd82], %r16236;
	st.local.u32 	[%rd83], %r16236;
	st.local.u32 	[%rd84], %r16236;
	st.local.u32 	[%rd85], %r16236;
	st.local.u32 	[%rd86], %r16236;
	st.local.u32 	[%rd87], %r16236;
	st.local.u32 	[%rd88], %r16236;
	st.local.u32 	[%rd89], %r16236;
	st.local.u32 	[%rd90], %r16236;
	mov.u32 	%r16237, %r16236;
	mov.u32 	%r16238, %r16236;
	mov.u32 	%r16239, %r16236;
	mov.u32 	%r16240, %r16236;
	mov.u32 	%r16241, %r16236;
	mov.u32 	%r16242, %r16236;
	mov.u32 	%r16243, %r16236;
	bra.uni 	BB5_606;

BB5_552:
	setp.eq.s32	%p286, %r229, 47;
	@%p286 bra 	BB5_553;
	bra.uni 	BB5_606;

BB5_553:
	and.b32  	%r16236, %r16236, -256;
	st.local.u32 	[%rd86], %r16236;
	mov.u32 	%r2346, 0;
	st.local.u32 	[%rd87], %r2346;
	st.local.u32 	[%rd88], %r2346;
	st.local.u32 	[%rd89], %r2346;
	st.local.u32 	[%rd90], %r2346;
	bra.uni 	BB5_606;

BB5_512:
	setp.eq.s32	%p310, %r229, 31;
	@%p310 bra 	BB5_513;
	bra.uni 	BB5_606;

BB5_513:
	and.b32  	%r16240, %r16240, -256;

BB5_514:
	st.local.u32 	[%rd82], %r16240;

BB5_515:
	mov.u32 	%r16236, 0;
	st.local.u32 	[%rd83], %r16236;
	st.local.u32 	[%rd84], %r16236;
	st.local.u32 	[%rd85], %r16236;
	st.local.u32 	[%rd86], %r16236;
	st.local.u32 	[%rd87], %r16236;
	st.local.u32 	[%rd88], %r16236;
	st.local.u32 	[%rd89], %r16236;
	st.local.u32 	[%rd90], %r16236;
	mov.u32 	%r16237, %r16236;
	mov.u32 	%r16238, %r16236;
	mov.u32 	%r16239, %r16236;

BB5_606:
	mul.wide.s32 	%rd875, %r16234, 4;
	add.s64 	%rd876, %rd13, %rd875;
	st.local.u32 	[%rd876], %r16247;
	add.s32 	%r2625, %r16234, 1;
	mul.wide.s32 	%rd877, %r2625, 4;
	add.s64 	%rd878, %rd13, %rd877;
	st.local.u32 	[%rd878], %r16246;
	add.s32 	%r2626, %r16234, 2;
	mul.wide.s32 	%rd879, %r2626, 4;
	add.s64 	%rd880, %rd13, %rd879;
	st.local.u32 	[%rd880], %r16245;
	add.s32 	%r2627, %r16234, 3;
	mul.wide.s32 	%rd881, %r2627, 4;
	add.s64 	%rd882, %rd13, %rd881;
	st.local.u32 	[%rd882], %r16244;
	add.s32 	%r2628, %r16234, 4;
	mul.wide.s32 	%rd883, %r2628, 4;
	add.s64 	%rd884, %rd13, %rd883;
	st.local.u32 	[%rd884], %r16243;
	add.s32 	%r2629, %r16234, 5;
	mul.wide.s32 	%rd885, %r2629, 4;
	add.s64 	%rd886, %rd13, %rd885;
	st.local.u32 	[%rd886], %r16242;
	add.s32 	%r2630, %r16234, 6;
	mul.wide.s32 	%rd887, %r2630, 4;
	add.s64 	%rd888, %rd13, %rd887;
	st.local.u32 	[%rd888], %r16241;
	add.s32 	%r2631, %r16234, 7;
	mul.wide.s32 	%rd889, %r2631, 4;
	add.s64 	%rd890, %rd13, %rd889;
	st.local.u32 	[%rd890], %r16240;
	add.s32 	%r2632, %r16234, 8;
	mul.wide.s32 	%rd891, %r2632, 4;
	add.s64 	%rd892, %rd13, %rd891;
	st.local.u32 	[%rd892], %r16239;
	add.s32 	%r2633, %r16234, 9;
	mul.wide.s32 	%rd893, %r2633, 4;
	add.s64 	%rd894, %rd13, %rd893;
	st.local.u32 	[%rd894], %r16238;
	add.s32 	%r2634, %r16234, 10;
	mul.wide.s32 	%rd895, %r2634, 4;
	add.s64 	%rd896, %rd13, %rd895;
	st.local.u32 	[%rd896], %r16237;
	add.s32 	%r2635, %r16234, 11;
	mul.wide.s32 	%rd897, %r2635, 4;
	add.s64 	%rd898, %rd13, %rd897;
	st.local.u32 	[%rd898], %r16236;
	ld.local.u32 	%r2636, [%rd87];
	add.s32 	%r2637, %r16234, 12;
	mul.wide.s32 	%rd899, %r2637, 4;
	add.s64 	%rd900, %rd13, %rd899;
	st.local.u32 	[%rd900], %r2636;
	ld.local.u32 	%r2638, [%rd88];
	add.s32 	%r2639, %r16234, 13;
	mul.wide.s32 	%rd901, %r2639, 4;
	add.s64 	%rd902, %rd13, %rd901;
	st.local.u32 	[%rd902], %r2638;
	ld.local.u32 	%r2640, [%rd89];
	add.s32 	%r2641, %r16234, 14;
	mul.wide.s32 	%rd903, %r2641, 4;
	add.s64 	%rd904, %rd13, %rd903;
	st.local.u32 	[%rd904], %r2640;
	ld.local.u32 	%r2642, [%rd90];
	add.s32 	%r2643, %r16234, 15;
	mul.wide.s32 	%rd905, %r2643, 4;
	add.s64 	%rd906, %rd13, %rd905;
	st.local.u32 	[%rd906], %r2642;
	ld.local.v4.u32 	{%r2644, %r2645, %r2646, %r2647}, [%rd13];
	ld.local.v4.u32 	{%r2649, %r2650, %r2651, %r2652}, [%rd13+16];
	ld.local.v4.u32 	{%r2653, %r2654, %r2655, %r2656}, [%rd13+32];
	ld.local.v4.u32 	{%r2657, %r2658, %r2659, %r2660}, [%rd13+48];
	ld.local.v4.u32 	{%r2661, %r2662, %r2663, %r2664}, [%rd13+64];
	ld.local.v4.u32 	{%r2665, %r2666, %r2667, %r2668}, [%rd13+80];
	ld.local.v4.u32 	{%r2669, %r2670, %r2671, %r2672}, [%rd13+96];
	ld.local.v4.u32 	{%r2673, %r2674, %r2675, %r2676}, [%rd13+112];
	ld.local.v4.u32 	{%r2677, %r2678, %r2679, %r2680}, [%rd13+128];
	ld.local.v4.u32 	{%r2681, %r2682, %r2683, %r2684}, [%rd13+144];
	ld.local.v4.u32 	{%r2685, %r2686, %r2687, %r2688}, [%rd13+160];
	ld.local.v4.u32 	{%r2689, %r2690, %r2691, %r2692}, [%rd13+176];
	ld.local.v4.u32 	{%r2693, %r2694, %r2695, %r2696}, [%rd13+192];
	ld.local.v4.u32 	{%r2697, %r2698, %r2699, %r2700}, [%rd13+208];
	ld.local.v4.u32 	{%r2701, %r2702, %r2703, %r2704}, [%rd13+224];
	ld.local.v4.u32 	{%r2705, %r2706, %r2707, %r2708}, [%rd13+240];
	st.global.u32 	[%rd624+416], %r2644;
	st.global.u32 	[%rd624+420], %r2645;
	st.global.u32 	[%rd624+424], %r2646;
	st.global.u32 	[%rd624+428], %r2647;
	st.global.u32 	[%rd624+432], %r2649;
	st.global.u32 	[%rd624+436], %r2650;
	st.global.u32 	[%rd624+440], %r2651;
	st.global.u32 	[%rd624+444], %r2652;
	st.global.u32 	[%rd624+448], %r2653;
	st.global.u32 	[%rd624+452], %r2654;
	st.global.u32 	[%rd624+456], %r2655;
	st.global.u32 	[%rd624+460], %r2656;
	st.global.u32 	[%rd624+464], %r2657;
	st.global.u32 	[%rd624+468], %r2658;
	st.global.u32 	[%rd624+472], %r2659;
	st.global.u32 	[%rd624+476], %r2660;
	st.global.u32 	[%rd624+480], %r2661;
	st.global.u32 	[%rd624+484], %r2662;
	st.global.u32 	[%rd624+488], %r2663;
	st.global.u32 	[%rd624+492], %r2664;
	st.global.u32 	[%rd624+496], %r2665;
	st.global.u32 	[%rd624+500], %r2666;
	st.global.u32 	[%rd624+504], %r2667;
	st.global.u32 	[%rd624+508], %r2668;
	st.global.u32 	[%rd624+512], %r2669;
	st.global.u32 	[%rd624+516], %r2670;
	st.global.u32 	[%rd624+520], %r2671;
	st.global.u32 	[%rd624+524], %r2672;
	st.global.u32 	[%rd624+528], %r2673;
	st.global.u32 	[%rd624+532], %r2674;
	st.global.u32 	[%rd624+536], %r2675;
	st.global.u32 	[%rd624+540], %r2676;
	st.global.u32 	[%rd624+544], %r2677;
	st.global.u32 	[%rd624+548], %r2678;
	st.global.u32 	[%rd624+552], %r2679;
	st.global.u32 	[%rd624+556], %r2680;
	st.global.u32 	[%rd624+560], %r2681;
	st.global.u32 	[%rd624+564], %r2682;
	st.global.u32 	[%rd624+568], %r2683;
	st.global.u32 	[%rd624+572], %r2684;
	st.global.u32 	[%rd624+576], %r2685;
	st.global.u32 	[%rd624+580], %r2686;
	st.global.u32 	[%rd624+584], %r2687;
	st.global.u32 	[%rd624+588], %r2688;
	st.global.u32 	[%rd624+592], %r2689;
	st.global.u32 	[%rd624+596], %r2690;
	st.global.u32 	[%rd624+600], %r2691;
	st.global.u32 	[%rd624+604], %r2692;
	st.global.u32 	[%rd624+608], %r2693;
	st.global.u32 	[%rd624+612], %r2694;
	st.global.u32 	[%rd624+616], %r2695;
	st.global.u32 	[%rd624+620], %r2696;
	st.global.u32 	[%rd624+624], %r2697;
	st.global.u32 	[%rd624+628], %r2698;
	st.global.u32 	[%rd624+632], %r2699;
	st.global.u32 	[%rd624+636], %r2700;
	st.global.u32 	[%rd624+640], %r2701;
	st.global.u32 	[%rd624+644], %r2702;
	st.global.u32 	[%rd624+648], %r2703;
	st.global.u32 	[%rd624+652], %r2704;
	st.global.u32 	[%rd624+656], %r2705;
	st.global.u32 	[%rd624+660], %r2706;
	st.global.u32 	[%rd624+664], %r2707;
	st.global.u32 	[%rd624+668], %r2708;

BB5_607:
	ret;

BB5_583:
	setp.ne.s32	%p263, %r229, 63;
	@%p263 bra 	BB5_606;

	and.b32  	%r2321, %r210, -256;
	st.local.u32 	[%rd90], %r2321;
	bra.uni 	BB5_606;
}

	// .globl	m01800_loop
.entry m01800_loop(
	.param .u64 .ptr .global .align 4 m01800_loop_param_0,
	.param .u64 .ptr .global .align 4 m01800_loop_param_1,
	.param .u64 .ptr .global .align 4 m01800_loop_param_2,
	.param .u64 .ptr .global .align 4 m01800_loop_param_3,
	.param .u64 .ptr .global .align 8 m01800_loop_param_4,
	.param .u64 .ptr .global .align 1 m01800_loop_param_5,
	.param .u64 .ptr .global .align 4 m01800_loop_param_6,
	.param .u64 .ptr .global .align 4 m01800_loop_param_7,
	.param .u64 .ptr .global .align 4 m01800_loop_param_8,
	.param .u64 .ptr .global .align 4 m01800_loop_param_9,
	.param .u64 .ptr .global .align 4 m01800_loop_param_10,
	.param .u64 .ptr .global .align 4 m01800_loop_param_11,
	.param .u64 .ptr .global .align 4 m01800_loop_param_12,
	.param .u64 .ptr .global .align 4 m01800_loop_param_13,
	.param .u64 .ptr .global .align 4 m01800_loop_param_14,
	.param .u64 .ptr .global .align 4 m01800_loop_param_15,
	.param .u64 .ptr .global .align 4 m01800_loop_param_16,
	.param .u64 .ptr .global .align 4 m01800_loop_param_17,
	.param .u64 .ptr .global .align 1 m01800_loop_param_18,
	.param .u64 .ptr .global .align 4 m01800_loop_param_19,
	.param .u64 .ptr .global .align 4 m01800_loop_param_20,
	.param .u64 .ptr .global .align 4 m01800_loop_param_21,
	.param .u64 .ptr .global .align 4 m01800_loop_param_22,
	.param .u64 .ptr .global .align 4 m01800_loop_param_23,
	.param .u32 m01800_loop_param_24,
	.param .u32 m01800_loop_param_25,
	.param .u32 m01800_loop_param_26,
	.param .u32 m01800_loop_param_27,
	.param .u32 m01800_loop_param_28,
	.param .u32 m01800_loop_param_29,
	.param .u32 m01800_loop_param_30,
	.param .u32 m01800_loop_param_31,
	.param .u32 m01800_loop_param_32,
	.param .u32 m01800_loop_param_33,
	.param .u64 m01800_loop_param_34
)
{
	.local .align 16 .b8 	__local_depot6[464];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<60>;
	.reg .b32 	%r<7463>;
	.reg .b64 	%rd<1384>;


	mov.u64 	%rd1383, __local_depot6;
	cvta.local.u64 	%SP, %rd1383;
	ld.param.u64 	%rd154, [m01800_loop_param_0];
	ld.param.u64 	%rd155, [m01800_loop_param_4];
	ld.param.u64 	%rd156, [m01800_loop_param_17];
	ld.param.u32 	%r649, [m01800_loop_param_27];
	ld.param.u32 	%r7408, [m01800_loop_param_28];
	ld.param.u32 	%r651, [m01800_loop_param_29];
	ld.param.u64 	%rd157, [m01800_loop_param_34];
	add.u64 	%rd158, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd158;
	add.u64 	%rd159, %SP, 16;
	cvta.to.local.u64 	%rd2, %rd159;
	add.u64 	%rd160, %SP, 32;
	cvta.to.local.u64 	%rd3, %rd160;
	add.u64 	%rd161, %SP, 48;
	cvta.to.local.u64 	%rd4, %rd161;
	add.u64 	%rd162, %SP, 64;
	cvta.to.local.u64 	%rd5, %rd162;
	add.u64 	%rd163, %SP, 80;
	cvta.to.local.u64 	%rd6, %rd163;
	add.u64 	%rd164, %SP, 96;
	cvta.to.local.u64 	%rd7, %rd164;
	add.u64 	%rd165, %SP, 112;
	cvta.to.local.u64 	%rd8, %rd165;
	add.u64 	%rd166, %SP, 128;
	cvta.to.local.u64 	%rd9, %rd166;
	add.u64 	%rd167, %SP, 256;
	cvta.to.local.u64 	%rd10, %rd167;
	mov.u32 	%r652, %ctaid.x;
	mov.u32 	%r653, %ntid.x;
	mov.b32	%r654, %envreg3;
	mad.lo.s32 	%r655, %r652, %r653, %r654;
	mov.u32 	%r656, %tid.x;
	add.s32 	%r1, %r655, %r656;
	cvt.s64.s32	%rd168, %r1;
	setp.ge.u64	%p1, %rd168, %rd157;
	@%p1 bra 	BB6_107;

	mul.wide.s32 	%rd170, %r1, 260;
	add.s64 	%rd171, %rd154, %rd170;
	ld.global.u32 	%r2, [%rd171+256];
	mov.u64 	%rd1358, 0;
	mov.pred 	%p2, 0;
	@%p2 bra 	BB6_3;

BB6_2:
	shl.b64 	%rd173, %rd1358, 2;
	add.s64 	%rd174, %rd9, %rd173;
	mov.u32 	%r657, 0;
	st.local.u32 	[%rd174], %r657;
	add.s64 	%rd1358, %rd1358, 1;
	setp.lt.u64	%p3, %rd1358, 32;
	@%p3 bra 	BB6_2;

BB6_3:
	mul.wide.s32 	%rd175, %r1, 672;
	add.s64 	%rd176, %rd155, %rd175;
	ld.global.u32 	%r7407, [%rd176+96];
	ld.global.u32 	%r7406, [%rd176+100];
	ld.global.u32 	%r7405, [%rd176+104];
	ld.global.u32 	%r7404, [%rd176+108];
	ld.global.u32 	%r7400, [%rd176+124];
	ld.global.u32 	%r7401, [%rd176+120];
	ld.global.u32 	%r7402, [%rd176+116];
	ld.global.u32 	%r7403, [%rd176+112];
	ld.global.u32 	%r7396, [%rd176+140];
	ld.global.u32 	%r7397, [%rd176+136];
	ld.global.u32 	%r7398, [%rd176+132];
	ld.global.u32 	%r7399, [%rd176+128];
	ld.global.u32 	%r7392, [%rd176+156];
	ld.global.u32 	%r7393, [%rd176+152];
	ld.global.u32 	%r7394, [%rd176+148];
	ld.global.u32 	%r7395, [%rd176+144];
	st.local.v4.u32 	[%rd9], {%r7407, %r7406, %r7405, %r7404};
	st.local.v4.u32 	[%rd9+16], {%r7403, %r7402, %r7401, %r7400};
	st.local.v4.u32 	[%rd9+32], {%r7399, %r7398, %r7397, %r7396};
	st.local.v4.u32 	[%rd9+48], {%r7395, %r7394, %r7393, %r7392};
	setp.eq.s32	%p4, %r651, 0;
	@%p4 bra 	BB6_106;

	mul.wide.u32 	%rd177, %r649, 564;
	add.s64 	%rd178, %rd156, %rd177;
	ld.global.u32 	%r19, [%rd178+512];
	add.s64 	%rd14, %rd10, 8;
	add.s64 	%rd15, %rd10, 16;
	add.s64 	%rd16, %rd10, 24;
	add.s64 	%rd17, %rd10, 32;
	add.s64 	%rd18, %rd10, 40;
	add.s64 	%rd19, %rd10, 48;
	add.s64 	%rd20, %rd10, 56;
	add.s64 	%rd21, %rd10, 64;
	add.s64 	%rd22, %rd10, 68;
	add.s64 	%rd23, %rd10, 72;
	add.s64 	%rd24, %rd10, 76;
	add.s64 	%rd25, %rd10, 80;
	add.s64 	%rd26, %rd10, 84;
	add.s64 	%rd27, %rd10, 88;
	add.s64 	%rd28, %rd10, 92;
	add.s64 	%rd29, %rd10, 96;
	add.s64 	%rd30, %rd10, 100;
	add.s64 	%rd31, %rd10, 104;
	add.s64 	%rd32, %rd10, 108;
	add.s64 	%rd33, %rd10, 112;
	add.s64 	%rd34, %rd10, 116;
	add.s64 	%rd35, %rd10, 120;
	add.s64 	%rd36, %rd10, 124;
	add.s64 	%rd37, %rd10, 128;
	add.s64 	%rd38, %rd10, 132;
	add.s64 	%rd39, %rd10, 136;
	add.s64 	%rd40, %rd10, 140;
	add.s64 	%rd41, %rd10, 144;
	add.s64 	%rd42, %rd10, 148;
	add.s64 	%rd43, %rd10, 152;
	add.s64 	%rd44, %rd10, 156;
	add.s64 	%rd45, %rd10, 160;
	add.s64 	%rd46, %rd10, 164;
	add.s64 	%rd47, %rd10, 168;
	add.s64 	%rd48, %rd10, 172;
	add.s64 	%rd49, %rd10, 176;
	add.s64 	%rd50, %rd10, 180;
	add.s64 	%rd51, %rd10, 184;
	add.s64 	%rd52, %rd10, 188;
	add.s64 	%rd53, %rd10, 192;
	add.s64 	%rd55, %rd8, 12;
	add.s64 	%rd56, %rd176, 160;
	add.s64 	%rd57, %rd176, 416;
	mov.u32 	%r7409, 0;

BB6_5:
	mov.u32 	%r7410, 0;
	mov.u64 	%rd181, 7640891576956012808;
	st.local.u64 	[%rd10], %rd181;
	mov.u64 	%rd182, -4942790177534073029;
	st.local.u64 	[%rd14], %rd182;
	mov.u64 	%rd183, 4354685564936845355;
	st.local.u64 	[%rd15], %rd183;
	mov.u64 	%rd184, -6534734903238641935;
	st.local.u64 	[%rd16], %rd184;
	mov.u64 	%rd185, 5840696475078001361;
	st.local.u64 	[%rd17], %rd185;
	mov.u64 	%rd186, -7276294671716946913;
	st.local.u64 	[%rd18], %rd186;
	mov.u64 	%rd187, 2270897969802886507;
	st.local.u64 	[%rd19], %rd187;
	mov.u64 	%rd188, 6620516959819538809;
	st.local.u64 	[%rd20], %rd188;
	st.local.u32 	[%rd21], %r7410;
	st.local.u32 	[%rd22], %r7410;
	st.local.u32 	[%rd23], %r7410;
	st.local.u32 	[%rd24], %r7410;
	st.local.u32 	[%rd25], %r7410;
	st.local.u32 	[%rd26], %r7410;
	st.local.u32 	[%rd27], %r7410;
	st.local.u32 	[%rd28], %r7410;
	st.local.u32 	[%rd29], %r7410;
	st.local.u32 	[%rd30], %r7410;
	st.local.u32 	[%rd31], %r7410;
	st.local.u32 	[%rd32], %r7410;
	st.local.u32 	[%rd33], %r7410;
	st.local.u32 	[%rd34], %r7410;
	st.local.u32 	[%rd35], %r7410;
	st.local.u32 	[%rd36], %r7410;
	st.local.u32 	[%rd37], %r7410;
	st.local.u32 	[%rd38], %r7410;
	st.local.u32 	[%rd39], %r7410;
	st.local.u32 	[%rd40], %r7410;
	st.local.u32 	[%rd41], %r7410;
	st.local.u32 	[%rd42], %r7410;
	st.local.u32 	[%rd43], %r7410;
	st.local.u32 	[%rd44], %r7410;
	st.local.u32 	[%rd45], %r7410;
	st.local.u32 	[%rd46], %r7410;
	st.local.u32 	[%rd47], %r7410;
	st.local.u32 	[%rd48], %r7410;
	st.local.u32 	[%rd49], %r7410;
	st.local.u32 	[%rd50], %r7410;
	st.local.u32 	[%rd51], %r7410;
	st.local.u32 	[%rd52], %r7410;
	st.local.u32 	[%rd53], %r7410;
	and.b32  	%r39, %r7408, 1;
	setp.eq.s32	%p5, %r39, 0;
	mov.u32 	%r7411, %r7410;
	@%p5 bra 	BB6_97;
	bra.uni 	BB6_6;

BB6_97:
	add.s64 	%rd1354, %rd9, 64;
	st.local.v4.u32 	[%rd1], {%r7407, %r7406, %r7405, %r7404};
	st.local.v4.u32 	[%rd2], {%r7403, %r7402, %r7401, %r7400};
	st.local.v4.u32 	[%rd3], {%r7399, %r7398, %r7397, %r7396};
	st.local.v4.u32 	[%rd4], {%r7395, %r7394, %r7393, %r7392};
	ld.local.u32 	%r7340, [%rd1354];
	st.local.u32 	[%rd5], %r7340;
	ld.local.u32 	%r7341, [%rd9+68];
	ld.local.v2.u32 	{%r7342, %r7343}, [%rd9+72];
	ld.local.v4.u32 	{%r7344, %r7345, %r7346, %r7347}, [%rd9+80];
	ld.local.v4.u32 	{%r7348, %r7349, %r7350, %r7351}, [%rd9+96];
	ld.local.v4.u32 	{%r7352, %r7353, %r7354, %r7355}, [%rd9+112];
	st.local.u32 	[%rd5+4], %r7341;
	st.local.v2.u32 	[%rd5+8], {%r7342, %r7343};
	st.local.v4.u32 	[%rd6], {%r7344, %r7345, %r7346, %r7347};
	st.local.v4.u32 	[%rd7], {%r7348, %r7349, %r7350, %r7351};
	st.local.v2.u32 	[%rd8], {%r7352, %r7353};
	st.local.u32 	[%rd8+8], %r7354;
	st.local.u32 	[%rd55], %r7355;
	mov.u32 	%r7370, 64;
	// Callseq Start 66
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd167;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd158;
	.param .b64 param2;
	st.param.b64	[param2+0], %rd159;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd160;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd161;
	.param .b64 param5;
	st.param.b64	[param5+0], %rd162;
	.param .b64 param6;
	st.param.b64	[param6+0], %rd163;
	.param .b64 param7;
	st.param.b64	[param7+0], %rd164;
	.param .b64 param8;
	st.param.b64	[param8+0], %rd165;
	.param .b32 param9;
	st.param.b32	[param9+0], %r7370;
	call.uni 
	sha512_update_128, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7, 
	param8, 
	param9
	);
	
	//{
	}// Callseq End 66
	bra.uni 	BB6_98;

BB6_96:
	add.s64 	%rd1288, %rd95, %rd1367;
	st.local.u64 	[%rd10], %rd1288;
	add.s64 	%rd1289, %rd97, %rd1368;
	st.local.u64 	[%rd14], %rd1289;
	add.s64 	%rd1290, %rd96, %rd1369;
	st.local.u64 	[%rd15], %rd1290;
	add.s64 	%rd1291, %rd94, %rd1370;
	st.local.u64 	[%rd16], %rd1291;
	add.s64 	%rd1292, %rd90, %rd1371;
	st.local.u64 	[%rd17], %rd1292;
	add.s64 	%rd1293, %rd92, %rd1372;
	st.local.u64 	[%rd18], %rd1293;
	add.s64 	%rd1294, %rd91, %rd1373;
	st.local.u64 	[%rd19], %rd1294;
	add.s64 	%rd1295, %rd93, %rd1374;
	st.local.u64 	[%rd20], %rd1295;
	st.local.u32 	[%rd21], %r7417;
	st.local.u32 	[%rd22], %r7416;
	st.local.u32 	[%rd23], %r7415;
	st.local.u32 	[%rd24], %r7414;
	st.local.u32 	[%rd25], %r7421;
	st.local.u32 	[%rd26], %r7420;
	st.local.u32 	[%rd27], %r7419;
	st.local.u32 	[%rd28], %r7418;
	st.local.u32 	[%rd29], %r7425;
	st.local.u32 	[%rd30], %r7424;
	st.local.u32 	[%rd31], %r7423;
	st.local.u32 	[%rd32], %r7422;
	st.local.u32 	[%rd33], %r7429;
	st.local.u32 	[%rd34], %r7428;
	st.local.u32 	[%rd35], %r7427;
	st.local.u32 	[%rd36], %r7426;
	st.local.u32 	[%rd37], %r7433;
	st.local.u32 	[%rd38], %r7432;
	st.local.u32 	[%rd39], %r7431;
	st.local.u32 	[%rd40], %r7430;
	st.local.u32 	[%rd41], %r7437;
	st.local.u32 	[%rd42], %r7436;
	st.local.u32 	[%rd43], %r7435;
	st.local.u32 	[%rd44], %r7434;
	st.local.u32 	[%rd45], %r7441;
	st.local.u32 	[%rd46], %r7440;
	st.local.u32 	[%rd47], %r7439;
	st.local.u32 	[%rd48], %r7438;
	st.local.u32 	[%rd49], %r7445;
	st.local.u32 	[%rd50], %r7444;
	st.local.u32 	[%rd51], %r7443;
	st.local.u32 	[%rd52], %r7442;
	add.s32 	%r7410, %r7410, 128;
	add.s32 	%r7411, %r7411, 32;

BB6_6:
	add.s32 	%r7382, %r2, -128;
	mul.wide.s32 	%rd192, %r7411, 4;
	add.s64 	%rd193, %rd56, %rd192;
	ld.global.u32 	%r7413, [%rd193];
	st.local.u32 	[%rd1], %r7413;
	add.s32 	%r661, %r7411, 1;
	mul.wide.s32 	%rd194, %r661, 4;
	add.s64 	%rd195, %rd56, %rd194;
	ld.global.u32 	%r7412, [%rd195];
	st.local.u32 	[%rd1+4], %r7412;
	add.s32 	%r662, %r7411, 2;
	mul.wide.s32 	%rd196, %r662, 4;
	add.s64 	%rd197, %rd56, %rd196;
	ld.global.u32 	%r663, [%rd197];
	st.local.u32 	[%rd1+8], %r663;
	add.s32 	%r664, %r7411, 3;
	mul.wide.s32 	%rd198, %r664, 4;
	add.s64 	%rd199, %rd56, %rd198;
	ld.global.u32 	%r665, [%rd199];
	st.local.u32 	[%rd1+12], %r665;
	add.s32 	%r666, %r7411, 4;
	mul.wide.s32 	%rd200, %r666, 4;
	add.s64 	%rd201, %rd56, %rd200;
	ld.global.u32 	%r667, [%rd201];
	st.local.u32 	[%rd2], %r667;
	add.s32 	%r668, %r7411, 5;
	mul.wide.s32 	%rd202, %r668, 4;
	add.s64 	%rd203, %rd56, %rd202;
	ld.global.u32 	%r669, [%rd203];
	st.local.u32 	[%rd2+4], %r669;
	add.s32 	%r670, %r7411, 6;
	mul.wide.s32 	%rd204, %r670, 4;
	add.s64 	%rd205, %rd56, %rd204;
	ld.global.u32 	%r671, [%rd205];
	st.local.u32 	[%rd2+8], %r671;
	add.s32 	%r672, %r7411, 7;
	mul.wide.s32 	%rd206, %r672, 4;
	add.s64 	%rd207, %rd56, %rd206;
	ld.global.u32 	%r673, [%rd207];
	st.local.u32 	[%rd2+12], %r673;
	add.s32 	%r674, %r7411, 8;
	mul.wide.s32 	%rd208, %r674, 4;
	add.s64 	%rd209, %rd56, %rd208;
	ld.global.u32 	%r675, [%rd209];
	st.local.u32 	[%rd3], %r675;
	add.s32 	%r676, %r7411, 9;
	mul.wide.s32 	%rd210, %r676, 4;
	add.s64 	%rd211, %rd56, %rd210;
	ld.global.u32 	%r677, [%rd211];
	st.local.u32 	[%rd3+4], %r677;
	add.s32 	%r678, %r7411, 10;
	mul.wide.s32 	%rd212, %r678, 4;
	add.s64 	%rd213, %rd56, %rd212;
	ld.global.u32 	%r679, [%rd213];
	st.local.u32 	[%rd3+8], %r679;
	add.s32 	%r680, %r7411, 11;
	mul.wide.s32 	%rd214, %r680, 4;
	add.s64 	%rd215, %rd56, %rd214;
	ld.global.u32 	%r681, [%rd215];
	st.local.u32 	[%rd3+12], %r681;
	add.s32 	%r682, %r7411, 12;
	mul.wide.s32 	%rd216, %r682, 4;
	add.s64 	%rd217, %rd56, %rd216;
	ld.global.u32 	%r683, [%rd217];
	st.local.u32 	[%rd4], %r683;
	add.s32 	%r684, %r7411, 13;
	mul.wide.s32 	%rd218, %r684, 4;
	add.s64 	%rd219, %rd56, %rd218;
	ld.global.u32 	%r685, [%rd219];
	st.local.u32 	[%rd4+4], %r685;
	add.s32 	%r686, %r7411, 14;
	mul.wide.s32 	%rd220, %r686, 4;
	add.s64 	%rd221, %rd56, %rd220;
	ld.global.u32 	%r687, [%rd221];
	st.local.u32 	[%rd4+8], %r687;
	add.s32 	%r688, %r7411, 15;
	mul.wide.s32 	%rd222, %r688, 4;
	add.s64 	%rd223, %rd56, %rd222;
	ld.global.u32 	%r689, [%rd223];
	st.local.u32 	[%rd4+12], %r689;
	add.s32 	%r690, %r7411, 16;
	mul.wide.s32 	%rd224, %r690, 4;
	add.s64 	%rd225, %rd56, %rd224;
	ld.global.u32 	%r691, [%rd225];
	st.local.u32 	[%rd5], %r691;
	add.s32 	%r692, %r7411, 17;
	mul.wide.s32 	%rd226, %r692, 4;
	add.s64 	%rd227, %rd56, %rd226;
	ld.global.u32 	%r693, [%rd227];
	st.local.u32 	[%rd5+4], %r693;
	add.s32 	%r694, %r7411, 18;
	mul.wide.s32 	%rd228, %r694, 4;
	add.s64 	%rd229, %rd56, %rd228;
	ld.global.u32 	%r695, [%rd229];
	st.local.u32 	[%rd5+8], %r695;
	add.s32 	%r696, %r7411, 19;
	mul.wide.s32 	%rd230, %r696, 4;
	add.s64 	%rd231, %rd56, %rd230;
	ld.global.u32 	%r697, [%rd231];
	st.local.u32 	[%rd5+12], %r697;
	add.s32 	%r698, %r7411, 20;
	mul.wide.s32 	%rd232, %r698, 4;
	add.s64 	%rd233, %rd56, %rd232;
	ld.global.u32 	%r699, [%rd233];
	st.local.u32 	[%rd6], %r699;
	add.s32 	%r700, %r7411, 21;
	mul.wide.s32 	%rd234, %r700, 4;
	add.s64 	%rd235, %rd56, %rd234;
	ld.global.u32 	%r701, [%rd235];
	st.local.u32 	[%rd6+4], %r701;
	add.s32 	%r702, %r7411, 22;
	mul.wide.s32 	%rd236, %r702, 4;
	add.s64 	%rd237, %rd56, %rd236;
	ld.global.u32 	%r703, [%rd237];
	st.local.u32 	[%rd6+8], %r703;
	add.s32 	%r704, %r7411, 23;
	mul.wide.s32 	%rd238, %r704, 4;
	add.s64 	%rd239, %rd56, %rd238;
	ld.global.u32 	%r705, [%rd239];
	st.local.u32 	[%rd6+12], %r705;
	add.s32 	%r706, %r7411, 24;
	mul.wide.s32 	%rd240, %r706, 4;
	add.s64 	%rd241, %rd56, %rd240;
	ld.global.u32 	%r707, [%rd241];
	st.local.u32 	[%rd7], %r707;
	add.s32 	%r708, %r7411, 25;
	mul.wide.s32 	%rd242, %r708, 4;
	add.s64 	%rd243, %rd56, %rd242;
	ld.global.u32 	%r709, [%rd243];
	st.local.u32 	[%rd7+4], %r709;
	add.s32 	%r710, %r7411, 26;
	mul.wide.s32 	%rd244, %r710, 4;
	add.s64 	%rd245, %rd56, %rd244;
	ld.global.u32 	%r711, [%rd245];
	st.local.u32 	[%rd7+8], %r711;
	add.s32 	%r712, %r7411, 27;
	mul.wide.s32 	%rd246, %r712, 4;
	add.s64 	%rd247, %rd56, %rd246;
	ld.global.u32 	%r713, [%rd247];
	st.local.u32 	[%rd7+12], %r713;
	add.s32 	%r714, %r7411, 28;
	mul.wide.s32 	%rd248, %r714, 4;
	add.s64 	%rd249, %rd56, %rd248;
	ld.global.u32 	%r715, [%rd249];
	st.local.u32 	[%rd8], %r715;
	add.s32 	%r716, %r7411, 29;
	mul.wide.s32 	%rd250, %r716, 4;
	add.s64 	%rd251, %rd56, %rd250;
	ld.global.u32 	%r717, [%rd251];
	st.local.u32 	[%rd8+4], %r717;
	add.s32 	%r718, %r7411, 30;
	mul.wide.s32 	%rd252, %r718, 4;
	add.s64 	%rd253, %rd56, %rd252;
	ld.global.u32 	%r719, [%rd253];
	st.local.u32 	[%rd8+8], %r719;
	add.s32 	%r720, %r7411, 31;
	mul.wide.s32 	%rd254, %r720, 4;
	add.s64 	%rd255, %rd56, %rd254;
	ld.global.u32 	%r44, [%rd255];
	st.local.u32 	[%rd55], %r44;
	setp.lt.s32	%p6, %r7410, %r7382;
	@%p6 bra 	BB6_8;
	bra.uni 	BB6_7;

BB6_8:
	ld.local.u32 	%r755, [%rd53];
	add.s32 	%r756, %r755, 128;
	st.local.u32 	[%rd53], %r756;
	bfe.u32 	%r754, %r755, 2, 5;
	and.b32  	%r757, %r755, 3;
	shl.b32 	%r758, %r757, 2;
	mov.u32 	%r759, 1985229328;
	shr.u32 	%r760, %r759, %r758;
	and.b32  	%r45, %r760, 65535;
	mov.u32 	%r7414, 0;
	setp.gt.s32	%p7, %r754, 15;
	@%p7 bra 	BB6_41;

	setp.gt.s32	%p31, %r754, 7;
	@%p31 bra 	BB6_26;

	setp.gt.s32	%p43, %r754, 3;
	@%p43 bra 	BB6_19;

	setp.gt.s32	%p49, %r754, 1;
	@%p49 bra 	BB6_15;

	setp.eq.s32	%p52, %r754, 0;
	@%p52 bra 	BB6_93;
	bra.uni 	BB6_13;

BB6_93:
	mov.u32 	%r7414, 0;
	// inline asm
	prmt.b32 %r7417, %r7414, %r44, %r45;
	// inline asm
	ld.local.u32 	%r6314, [%rd55];
	ld.local.u32 	%r6315, [%rd8+8];
	// inline asm
	prmt.b32 %r6313, %r6314, %r6315, %r45;
	// inline asm
	st.local.u32 	[%rd55], %r6313;
	ld.local.u32 	%r6318, [%rd8+8];
	ld.local.u32 	%r6319, [%rd8+4];
	// inline asm
	prmt.b32 %r6317, %r6318, %r6319, %r45;
	// inline asm
	st.local.u32 	[%rd8+8], %r6317;
	ld.local.v2.u32 	{%r6472, %r6473}, [%rd8];
	// inline asm
	prmt.b32 %r6321, %r6473, %r6472, %r45;
	// inline asm
	st.local.u32 	[%rd8+4], %r6321;
	ld.local.u32 	%r6326, [%rd8];
	ld.local.u32 	%r6327, [%rd7+12];
	// inline asm
	prmt.b32 %r6325, %r6326, %r6327, %r45;
	// inline asm
	st.local.u32 	[%rd8], %r6325;
	ld.local.v2.u32 	{%r6474, %r6475}, [%rd7+8];
	// inline asm
	prmt.b32 %r6329, %r6475, %r6474, %r45;
	// inline asm
	st.local.u32 	[%rd7+12], %r6329;
	ld.local.u32 	%r6334, [%rd7+8];
	ld.local.u32 	%r6335, [%rd7+4];
	// inline asm
	prmt.b32 %r6333, %r6334, %r6335, %r45;
	// inline asm
	st.local.u32 	[%rd7+8], %r6333;
	ld.local.v2.u32 	{%r6476, %r6477}, [%rd7];
	// inline asm
	prmt.b32 %r6337, %r6477, %r6476, %r45;
	// inline asm
	st.local.u32 	[%rd7+4], %r6337;
	ld.local.u32 	%r6342, [%rd7];
	ld.local.u32 	%r6343, [%rd6+12];
	// inline asm
	prmt.b32 %r6341, %r6342, %r6343, %r45;
	// inline asm
	st.local.u32 	[%rd7], %r6341;
	ld.local.v2.u32 	{%r6478, %r6479}, [%rd6+8];
	// inline asm
	prmt.b32 %r6345, %r6479, %r6478, %r45;
	// inline asm
	st.local.u32 	[%rd6+12], %r6345;
	ld.local.u32 	%r6350, [%rd6+8];
	ld.local.u32 	%r6351, [%rd6+4];
	// inline asm
	prmt.b32 %r6349, %r6350, %r6351, %r45;
	// inline asm
	st.local.u32 	[%rd6+8], %r6349;
	ld.local.v2.u32 	{%r6480, %r6481}, [%rd6];
	// inline asm
	prmt.b32 %r6353, %r6481, %r6480, %r45;
	// inline asm
	st.local.u32 	[%rd6+4], %r6353;
	ld.local.u32 	%r6358, [%rd6];
	ld.local.u32 	%r6359, [%rd5+12];
	// inline asm
	prmt.b32 %r6357, %r6358, %r6359, %r45;
	// inline asm
	st.local.u32 	[%rd6], %r6357;
	ld.local.v2.u32 	{%r6482, %r6483}, [%rd5+8];
	// inline asm
	prmt.b32 %r6361, %r6483, %r6482, %r45;
	// inline asm
	st.local.u32 	[%rd5+12], %r6361;
	ld.local.u32 	%r6366, [%rd5+8];
	ld.local.u32 	%r6367, [%rd5+4];
	// inline asm
	prmt.b32 %r6365, %r6366, %r6367, %r45;
	// inline asm
	st.local.u32 	[%rd5+8], %r6365;
	ld.local.v2.u32 	{%r6484, %r6485}, [%rd5];
	// inline asm
	prmt.b32 %r6369, %r6485, %r6484, %r45;
	// inline asm
	st.local.u32 	[%rd5+4], %r6369;
	ld.local.u32 	%r6374, [%rd5];
	ld.local.u32 	%r6375, [%rd4+12];
	// inline asm
	prmt.b32 %r6373, %r6374, %r6375, %r45;
	// inline asm
	st.local.u32 	[%rd5], %r6373;
	ld.local.v2.u32 	{%r6486, %r6487}, [%rd4+8];
	// inline asm
	prmt.b32 %r6377, %r6487, %r6486, %r45;
	// inline asm
	st.local.u32 	[%rd4+12], %r6377;
	ld.local.u32 	%r6382, [%rd4+8];
	ld.local.u32 	%r6383, [%rd4+4];
	// inline asm
	prmt.b32 %r6381, %r6382, %r6383, %r45;
	// inline asm
	st.local.u32 	[%rd4+8], %r6381;
	ld.local.v2.u32 	{%r6488, %r6489}, [%rd4];
	// inline asm
	prmt.b32 %r6385, %r6489, %r6488, %r45;
	// inline asm
	st.local.u32 	[%rd4+4], %r6385;
	ld.local.u32 	%r6390, [%rd4];
	ld.local.u32 	%r6391, [%rd3+12];
	// inline asm
	prmt.b32 %r6389, %r6390, %r6391, %r45;
	// inline asm
	st.local.u32 	[%rd4], %r6389;
	ld.local.v2.u32 	{%r6490, %r6491}, [%rd3+8];
	// inline asm
	prmt.b32 %r6393, %r6491, %r6490, %r45;
	// inline asm
	st.local.u32 	[%rd3+12], %r6393;
	ld.local.u32 	%r6398, [%rd3+8];
	ld.local.u32 	%r6399, [%rd3+4];
	// inline asm
	prmt.b32 %r6397, %r6398, %r6399, %r45;
	// inline asm
	st.local.u32 	[%rd3+8], %r6397;
	ld.local.v2.u32 	{%r6492, %r6493}, [%rd3];
	// inline asm
	prmt.b32 %r6401, %r6493, %r6492, %r45;
	// inline asm
	st.local.u32 	[%rd3+4], %r6401;
	ld.local.u32 	%r6406, [%rd3];
	ld.local.u32 	%r6407, [%rd2+12];
	// inline asm
	prmt.b32 %r6405, %r6406, %r6407, %r45;
	// inline asm
	st.local.u32 	[%rd3], %r6405;
	ld.local.v2.u32 	{%r6494, %r6495}, [%rd2+8];
	// inline asm
	prmt.b32 %r6409, %r6495, %r6494, %r45;
	// inline asm
	st.local.u32 	[%rd2+12], %r6409;
	ld.local.u32 	%r6414, [%rd2+8];
	ld.local.u32 	%r6415, [%rd2+4];
	// inline asm
	prmt.b32 %r6413, %r6414, %r6415, %r45;
	// inline asm
	st.local.u32 	[%rd2+8], %r6413;
	ld.local.v2.u32 	{%r6496, %r6497}, [%rd2];
	// inline asm
	prmt.b32 %r6417, %r6497, %r6496, %r45;
	// inline asm
	st.local.u32 	[%rd2+4], %r6417;
	ld.local.u32 	%r6422, [%rd2];
	ld.local.u32 	%r6423, [%rd1+12];
	// inline asm
	prmt.b32 %r6421, %r6422, %r6423, %r45;
	// inline asm
	st.local.u32 	[%rd2], %r6421;
	ld.local.v2.u32 	{%r6498, %r6499}, [%rd1+8];
	// inline asm
	prmt.b32 %r6425, %r6499, %r6498, %r45;
	// inline asm
	st.local.u32 	[%rd1+12], %r6425;
	ld.local.u32 	%r6430, [%rd1+8];
	ld.local.u32 	%r6431, [%rd1+4];
	// inline asm
	prmt.b32 %r6429, %r6430, %r6431, %r45;
	// inline asm
	st.local.u32 	[%rd1+8], %r6429;
	ld.local.v2.u32 	{%r6500, %r6501}, [%rd1];
	// inline asm
	prmt.b32 %r6433, %r6501, %r6500, %r45;
	// inline asm
	st.local.u32 	[%rd1+4], %r6433;
	ld.local.u32 	%r6438, [%rd1];
	// inline asm
	prmt.b32 %r7413, %r6438, %r7414, %r45;
	// inline asm
	st.local.u32 	[%rd1], %r7413;
	ld.local.u32 	%r7412, [%rd1+4];
	mov.u32 	%r7415, %r7414;
	mov.u32 	%r7416, %r7414;
	mov.u32 	%r7418, %r7414;
	mov.u32 	%r7419, %r7414;
	mov.u32 	%r7420, %r7414;
	mov.u32 	%r7421, %r7414;
	mov.u32 	%r7422, %r7414;
	mov.u32 	%r7423, %r7414;
	mov.u32 	%r7424, %r7414;
	mov.u32 	%r7425, %r7414;
	mov.u32 	%r7426, %r7414;
	mov.u32 	%r7427, %r7414;
	mov.u32 	%r7428, %r7414;
	mov.u32 	%r7429, %r7414;
	mov.u32 	%r7430, %r7414;
	mov.u32 	%r7431, %r7414;
	mov.u32 	%r7432, %r7414;
	mov.u32 	%r7433, %r7414;
	mov.u32 	%r7434, %r7414;
	mov.u32 	%r7435, %r7414;
	mov.u32 	%r7436, %r7414;
	mov.u32 	%r7437, %r7414;
	mov.u32 	%r7438, %r7414;
	mov.u32 	%r7439, %r7414;
	mov.u32 	%r7440, %r7414;
	mov.u32 	%r7441, %r7414;
	mov.u32 	%r7442, %r7414;
	mov.u32 	%r7443, %r7414;
	mov.u32 	%r7444, %r7414;
	mov.u32 	%r7445, %r7414;
	bra.uni 	BB6_94;

BB6_41:
	setp.gt.s32	%p8, %r754, 23;
	@%p8 bra 	BB6_57;

	setp.gt.s32	%p20, %r754, 19;
	@%p20 bra 	BB6_50;

	setp.gt.s32	%p26, %r754, 17;
	@%p26 bra 	BB6_47;

	setp.eq.s32	%p29, %r754, 16;
	@%p29 bra 	BB6_79;
	bra.uni 	BB6_45;

BB6_79:
	mov.u32 	%r7412, 0;
	// inline asm
	prmt.b32 %r7433, %r7412, %r44, %r45;
	// inline asm
	ld.local.u32 	%r3331, [%rd55];
	ld.local.u32 	%r3332, [%rd8+8];
	// inline asm
	prmt.b32 %r7426, %r3331, %r3332, %r45;
	// inline asm
	ld.local.u32 	%r3335, [%rd8+8];
	ld.local.u32 	%r3336, [%rd8+4];
	// inline asm
	prmt.b32 %r7427, %r3335, %r3336, %r45;
	// inline asm
	ld.local.v2.u32 	{%r3475, %r3476}, [%rd8];
	// inline asm
	prmt.b32 %r7428, %r3476, %r3475, %r45;
	// inline asm
	ld.local.u32 	%r3343, [%rd8];
	ld.local.u32 	%r3344, [%rd7+12];
	// inline asm
	prmt.b32 %r7429, %r3343, %r3344, %r45;
	// inline asm
	ld.local.v2.u32 	{%r3477, %r3478}, [%rd7+8];
	// inline asm
	prmt.b32 %r7422, %r3478, %r3477, %r45;
	// inline asm
	ld.local.u32 	%r3351, [%rd7+8];
	ld.local.u32 	%r3352, [%rd7+4];
	// inline asm
	prmt.b32 %r7423, %r3351, %r3352, %r45;
	// inline asm
	ld.local.v2.u32 	{%r3479, %r3480}, [%rd7];
	// inline asm
	prmt.b32 %r7424, %r3480, %r3479, %r45;
	// inline asm
	ld.local.u32 	%r3359, [%rd7];
	ld.local.u32 	%r3360, [%rd6+12];
	// inline asm
	prmt.b32 %r7425, %r3359, %r3360, %r45;
	// inline asm
	ld.local.v2.u32 	{%r3481, %r3482}, [%rd6+8];
	// inline asm
	prmt.b32 %r7418, %r3482, %r3481, %r45;
	// inline asm
	ld.local.u32 	%r3367, [%rd6+8];
	ld.local.u32 	%r3368, [%rd6+4];
	// inline asm
	prmt.b32 %r7419, %r3367, %r3368, %r45;
	// inline asm
	ld.local.v2.u32 	{%r3483, %r3484}, [%rd6];
	// inline asm
	prmt.b32 %r7420, %r3484, %r3483, %r45;
	// inline asm
	ld.local.u32 	%r3375, [%rd6];
	ld.local.u32 	%r3376, [%rd5+12];
	// inline asm
	prmt.b32 %r7421, %r3375, %r3376, %r45;
	// inline asm
	ld.local.v2.u32 	{%r3485, %r3486}, [%rd5+8];
	// inline asm
	prmt.b32 %r7414, %r3486, %r3485, %r45;
	// inline asm
	ld.local.u32 	%r3383, [%rd5+8];
	ld.local.u32 	%r3384, [%rd5+4];
	// inline asm
	prmt.b32 %r7415, %r3383, %r3384, %r45;
	// inline asm
	ld.local.v2.u32 	{%r3487, %r3488}, [%rd5];
	// inline asm
	prmt.b32 %r7416, %r3488, %r3487, %r45;
	// inline asm
	ld.local.u32 	%r3391, [%rd5];
	ld.local.u32 	%r3392, [%rd4+12];
	// inline asm
	prmt.b32 %r7417, %r3391, %r3392, %r45;
	// inline asm
	ld.local.v2.u32 	{%r3489, %r3490}, [%rd4+8];
	// inline asm
	prmt.b32 %r3394, %r3490, %r3489, %r45;
	// inline asm
	st.local.u32 	[%rd55], %r3394;
	ld.local.u32 	%r3399, [%rd4+8];
	ld.local.u32 	%r3400, [%rd4+4];
	// inline asm
	prmt.b32 %r3398, %r3399, %r3400, %r45;
	// inline asm
	st.local.u32 	[%rd8+8], %r3398;
	ld.local.v2.u32 	{%r3491, %r3492}, [%rd4];
	// inline asm
	prmt.b32 %r3402, %r3492, %r3491, %r45;
	// inline asm
	st.local.u32 	[%rd8+4], %r3402;
	ld.local.u32 	%r3407, [%rd4];
	ld.local.u32 	%r3408, [%rd3+12];
	// inline asm
	prmt.b32 %r3406, %r3407, %r3408, %r45;
	// inline asm
	st.local.u32 	[%rd8], %r3406;
	ld.local.v2.u32 	{%r3493, %r3494}, [%rd3+8];
	// inline asm
	prmt.b32 %r3410, %r3494, %r3493, %r45;
	// inline asm
	st.local.u32 	[%rd7+12], %r3410;
	ld.local.u32 	%r3415, [%rd3+8];
	ld.local.u32 	%r3416, [%rd3+4];
	// inline asm
	prmt.b32 %r3414, %r3415, %r3416, %r45;
	// inline asm
	st.local.u32 	[%rd7+8], %r3414;
	ld.local.v2.u32 	{%r3495, %r3496}, [%rd3];
	// inline asm
	prmt.b32 %r3418, %r3496, %r3495, %r45;
	// inline asm
	st.local.u32 	[%rd7+4], %r3418;
	ld.local.u32 	%r3423, [%rd3];
	ld.local.u32 	%r3424, [%rd2+12];
	// inline asm
	prmt.b32 %r3422, %r3423, %r3424, %r45;
	// inline asm
	st.local.u32 	[%rd7], %r3422;
	ld.local.v2.u32 	{%r3497, %r3498}, [%rd2+8];
	// inline asm
	prmt.b32 %r3426, %r3498, %r3497, %r45;
	// inline asm
	st.local.u32 	[%rd6+12], %r3426;
	ld.local.u32 	%r3431, [%rd2+8];
	ld.local.u32 	%r3432, [%rd2+4];
	// inline asm
	prmt.b32 %r3430, %r3431, %r3432, %r45;
	// inline asm
	st.local.u32 	[%rd6+8], %r3430;
	ld.local.v2.u32 	{%r3499, %r3500}, [%rd2];
	// inline asm
	prmt.b32 %r3434, %r3500, %r3499, %r45;
	// inline asm
	st.local.u32 	[%rd6+4], %r3434;
	ld.local.u32 	%r3439, [%rd2];
	ld.local.u32 	%r3440, [%rd1+12];
	// inline asm
	prmt.b32 %r3438, %r3439, %r3440, %r45;
	// inline asm
	st.local.u32 	[%rd6], %r3438;
	ld.local.v2.u32 	{%r3501, %r3502}, [%rd1+8];
	// inline asm
	prmt.b32 %r3442, %r3502, %r3501, %r45;
	// inline asm
	st.local.u32 	[%rd5+12], %r3442;
	ld.local.u32 	%r3447, [%rd1+8];
	ld.local.u32 	%r3448, [%rd1+4];
	// inline asm
	prmt.b32 %r3446, %r3447, %r3448, %r45;
	// inline asm
	st.local.u32 	[%rd5+8], %r3446;
	ld.local.v2.u32 	{%r3503, %r3504}, [%rd1];
	// inline asm
	prmt.b32 %r3450, %r3504, %r3503, %r45;
	// inline asm
	st.local.u32 	[%rd5+4], %r3450;
	ld.local.u32 	%r3455, [%rd1];
	// inline asm
	prmt.b32 %r3454, %r3455, %r7412, %r45;
	// inline asm
	st.local.u32 	[%rd5], %r3454;
	st.local.v4.u32 	[%rd4], {%r7412, %r7412, %r7412, %r7412};
	st.local.v4.u32 	[%rd3], {%r7412, %r7412, %r7412, %r7412};
	st.local.v4.u32 	[%rd2], {%r7412, %r7412, %r7412, %r7412};
	st.local.v2.u32 	[%rd1+8], {%r7412, %r7412};
	mov.u64 	%rd280, 0;
	st.local.u64 	[%rd1], %rd280;
	mov.u32 	%r7413, %r7412;
	mov.u32 	%r7430, %r7412;
	mov.u32 	%r7431, %r7412;
	mov.u32 	%r7432, %r7412;
	bra.uni 	BB6_89;

BB6_26:
	setp.gt.s32	%p32, %r754, 11;
	@%p32 bra 	BB6_34;

	setp.gt.s32	%p38, %r754, 9;
	@%p38 bra 	BB6_31;

	setp.eq.s32	%p41, %r754, 8;
	@%p41 bra 	BB6_83;
	bra.uni 	BB6_29;

BB6_83:
	mov.u32 	%r7412, 0;
	// inline asm
	prmt.b32 %r7425, %r7412, %r44, %r45;
	// inline asm
	ld.local.u32 	%r4791, [%rd55];
	ld.local.u32 	%r4792, [%rd8+8];
	// inline asm
	prmt.b32 %r7418, %r4791, %r4792, %r45;
	// inline asm
	ld.local.u32 	%r4795, [%rd8+8];
	ld.local.u32 	%r4796, [%rd8+4];
	// inline asm
	prmt.b32 %r7419, %r4795, %r4796, %r45;
	// inline asm
	ld.local.v2.u32 	{%r4943, %r4944}, [%rd8];
	// inline asm
	prmt.b32 %r7420, %r4944, %r4943, %r45;
	// inline asm
	ld.local.u32 	%r4803, [%rd8];
	ld.local.u32 	%r4804, [%rd7+12];
	// inline asm
	prmt.b32 %r7421, %r4803, %r4804, %r45;
	// inline asm
	ld.local.v2.u32 	{%r4945, %r4946}, [%rd7+8];
	// inline asm
	prmt.b32 %r7414, %r4946, %r4945, %r45;
	// inline asm
	ld.local.u32 	%r4811, [%rd7+8];
	ld.local.u32 	%r4812, [%rd7+4];
	// inline asm
	prmt.b32 %r7415, %r4811, %r4812, %r45;
	// inline asm
	ld.local.v2.u32 	{%r4947, %r4948}, [%rd7];
	// inline asm
	prmt.b32 %r7416, %r4948, %r4947, %r45;
	// inline asm
	ld.local.u32 	%r4819, [%rd7];
	ld.local.u32 	%r4820, [%rd6+12];
	// inline asm
	prmt.b32 %r7417, %r4819, %r4820, %r45;
	// inline asm
	ld.local.v2.u32 	{%r4949, %r4950}, [%rd6+8];
	// inline asm
	prmt.b32 %r4822, %r4950, %r4949, %r45;
	// inline asm
	st.local.u32 	[%rd55], %r4822;
	ld.local.u32 	%r4827, [%rd6+8];
	ld.local.u32 	%r4828, [%rd6+4];
	// inline asm
	prmt.b32 %r4826, %r4827, %r4828, %r45;
	// inline asm
	st.local.u32 	[%rd8+8], %r4826;
	ld.local.v2.u32 	{%r4951, %r4952}, [%rd6];
	// inline asm
	prmt.b32 %r4830, %r4952, %r4951, %r45;
	// inline asm
	st.local.u32 	[%rd8+4], %r4830;
	ld.local.u32 	%r4835, [%rd6];
	ld.local.u32 	%r4836, [%rd5+12];
	// inline asm
	prmt.b32 %r4834, %r4835, %r4836, %r45;
	// inline asm
	st.local.u32 	[%rd8], %r4834;
	ld.local.v2.u32 	{%r4953, %r4954}, [%rd5+8];
	// inline asm
	prmt.b32 %r4838, %r4954, %r4953, %r45;
	// inline asm
	st.local.u32 	[%rd7+12], %r4838;
	ld.local.u32 	%r4843, [%rd5+8];
	ld.local.u32 	%r4844, [%rd5+4];
	// inline asm
	prmt.b32 %r4842, %r4843, %r4844, %r45;
	// inline asm
	st.local.u32 	[%rd7+8], %r4842;
	ld.local.v2.u32 	{%r4955, %r4956}, [%rd5];
	// inline asm
	prmt.b32 %r4846, %r4956, %r4955, %r45;
	// inline asm
	st.local.u32 	[%rd7+4], %r4846;
	ld.local.u32 	%r4851, [%rd5];
	ld.local.u32 	%r4852, [%rd4+12];
	// inline asm
	prmt.b32 %r4850, %r4851, %r4852, %r45;
	// inline asm
	st.local.u32 	[%rd7], %r4850;
	ld.local.v2.u32 	{%r4957, %r4958}, [%rd4+8];
	// inline asm
	prmt.b32 %r4854, %r4958, %r4957, %r45;
	// inline asm
	st.local.u32 	[%rd6+12], %r4854;
	ld.local.u32 	%r4859, [%rd4+8];
	ld.local.u32 	%r4860, [%rd4+4];
	// inline asm
	prmt.b32 %r4858, %r4859, %r4860, %r45;
	// inline asm
	st.local.u32 	[%rd6+8], %r4858;
	ld.local.v2.u32 	{%r4959, %r4960}, [%rd4];
	// inline asm
	prmt.b32 %r4862, %r4960, %r4959, %r45;
	// inline asm
	st.local.u32 	[%rd6+4], %r4862;
	ld.local.u32 	%r4867, [%rd4];
	ld.local.u32 	%r4868, [%rd3+12];
	// inline asm
	prmt.b32 %r4866, %r4867, %r4868, %r45;
	// inline asm
	st.local.u32 	[%rd6], %r4866;
	ld.local.v2.u32 	{%r4961, %r4962}, [%rd3+8];
	// inline asm
	prmt.b32 %r4870, %r4962, %r4961, %r45;
	// inline asm
	st.local.u32 	[%rd5+12], %r4870;
	ld.local.u32 	%r4875, [%rd3+8];
	ld.local.u32 	%r4876, [%rd3+4];
	// inline asm
	prmt.b32 %r4874, %r4875, %r4876, %r45;
	// inline asm
	st.local.u32 	[%rd5+8], %r4874;
	ld.local.v2.u32 	{%r4963, %r4964}, [%rd3];
	// inline asm
	prmt.b32 %r4878, %r4964, %r4963, %r45;
	// inline asm
	st.local.u32 	[%rd5+4], %r4878;
	ld.local.u32 	%r4883, [%rd3];
	ld.local.u32 	%r4884, [%rd2+12];
	// inline asm
	prmt.b32 %r4882, %r4883, %r4884, %r45;
	// inline asm
	st.local.u32 	[%rd5], %r4882;
	ld.local.v2.u32 	{%r4965, %r4966}, [%rd2+8];
	// inline asm
	prmt.b32 %r4886, %r4966, %r4965, %r45;
	// inline asm
	st.local.u32 	[%rd4+12], %r4886;
	ld.local.u32 	%r4891, [%rd2+8];
	ld.local.u32 	%r4892, [%rd2+4];
	// inline asm
	prmt.b32 %r4890, %r4891, %r4892, %r45;
	// inline asm
	st.local.u32 	[%rd4+8], %r4890;
	ld.local.v2.u32 	{%r4967, %r4968}, [%rd2];
	// inline asm
	prmt.b32 %r4894, %r4968, %r4967, %r45;
	// inline asm
	st.local.u32 	[%rd4+4], %r4894;
	ld.local.u32 	%r4899, [%rd2];
	ld.local.u32 	%r4900, [%rd1+12];
	// inline asm
	prmt.b32 %r4898, %r4899, %r4900, %r45;
	// inline asm
	st.local.u32 	[%rd4], %r4898;
	ld.local.v2.u32 	{%r4969, %r4970}, [%rd1+8];
	// inline asm
	prmt.b32 %r4902, %r4970, %r4969, %r45;
	// inline asm
	st.local.u32 	[%rd3+12], %r4902;
	ld.local.u32 	%r4907, [%rd1+8];
	ld.local.u32 	%r4908, [%rd1+4];
	// inline asm
	prmt.b32 %r4906, %r4907, %r4908, %r45;
	// inline asm
	st.local.u32 	[%rd3+8], %r4906;
	ld.local.v2.u32 	{%r4971, %r4972}, [%rd1];
	// inline asm
	prmt.b32 %r4910, %r4972, %r4971, %r45;
	// inline asm
	st.local.u32 	[%rd3+4], %r4910;
	ld.local.u32 	%r4915, [%rd1];
	// inline asm
	prmt.b32 %r4914, %r4915, %r7412, %r45;
	// inline asm
	st.local.u32 	[%rd3], %r4914;
	st.local.v4.u32 	[%rd2], {%r7412, %r7412, %r7412, %r7412};
	st.local.v2.u32 	[%rd1+8], {%r7412, %r7412};
	mov.u64 	%rd288, 0;
	st.local.u64 	[%rd1], %rd288;
	mov.u32 	%r7413, %r7412;
	mov.u32 	%r7422, %r7412;
	mov.u32 	%r7423, %r7412;
	mov.u32 	%r7424, %r7412;
	bra.uni 	BB6_87;

BB6_57:
	setp.gt.s32	%p9, %r754, 27;
	@%p9 bra 	BB6_65;

	setp.gt.s32	%p15, %r754, 25;
	@%p15 bra 	BB6_62;

	setp.eq.s32	%p18, %r754, 24;
	@%p18 bra 	BB6_75;
	bra.uni 	BB6_60;

BB6_75:
	mov.u32 	%r7412, 0;
	// inline asm
	prmt.b32 %r7441, %r7412, %r44, %r45;
	// inline asm
	ld.local.u32 	%r1935, [%rd55];
	ld.local.u32 	%r1936, [%rd8+8];
	// inline asm
	prmt.b32 %r7434, %r1935, %r1936, %r45;
	// inline asm
	ld.local.u32 	%r1939, [%rd8+8];
	ld.local.u32 	%r1940, [%rd8+4];
	// inline asm
	prmt.b32 %r7435, %r1939, %r1940, %r45;
	// inline asm
	ld.local.v2.u32 	{%r2071, %r2072}, [%rd8];
	// inline asm
	prmt.b32 %r7436, %r2072, %r2071, %r45;
	// inline asm
	ld.local.u32 	%r1947, [%rd8];
	ld.local.u32 	%r1948, [%rd7+12];
	// inline asm
	prmt.b32 %r7437, %r1947, %r1948, %r45;
	// inline asm
	ld.local.v2.u32 	{%r2073, %r2074}, [%rd7+8];
	// inline asm
	prmt.b32 %r7430, %r2074, %r2073, %r45;
	// inline asm
	ld.local.u32 	%r1955, [%rd7+8];
	ld.local.u32 	%r1956, [%rd7+4];
	// inline asm
	prmt.b32 %r7431, %r1955, %r1956, %r45;
	// inline asm
	ld.local.v2.u32 	{%r2075, %r2076}, [%rd7];
	// inline asm
	prmt.b32 %r7432, %r2076, %r2075, %r45;
	// inline asm
	ld.local.u32 	%r1963, [%rd7];
	ld.local.u32 	%r1964, [%rd6+12];
	// inline asm
	prmt.b32 %r7433, %r1963, %r1964, %r45;
	// inline asm
	ld.local.v2.u32 	{%r2077, %r2078}, [%rd6+8];
	// inline asm
	prmt.b32 %r7426, %r2078, %r2077, %r45;
	// inline asm
	ld.local.u32 	%r1971, [%rd6+8];
	ld.local.u32 	%r1972, [%rd6+4];
	// inline asm
	prmt.b32 %r7427, %r1971, %r1972, %r45;
	// inline asm
	ld.local.v2.u32 	{%r2079, %r2080}, [%rd6];
	// inline asm
	prmt.b32 %r7428, %r2080, %r2079, %r45;
	// inline asm
	ld.local.u32 	%r1979, [%rd6];
	ld.local.u32 	%r1980, [%rd5+12];
	// inline asm
	prmt.b32 %r7429, %r1979, %r1980, %r45;
	// inline asm
	ld.local.v2.u32 	{%r2081, %r2082}, [%rd5+8];
	// inline asm
	prmt.b32 %r7422, %r2082, %r2081, %r45;
	// inline asm
	ld.local.u32 	%r1987, [%rd5+8];
	ld.local.u32 	%r1988, [%rd5+4];
	// inline asm
	prmt.b32 %r7423, %r1987, %r1988, %r45;
	// inline asm
	ld.local.v2.u32 	{%r2083, %r2084}, [%rd5];
	// inline asm
	prmt.b32 %r7424, %r2084, %r2083, %r45;
	// inline asm
	ld.local.u32 	%r1995, [%rd5];
	ld.local.u32 	%r1996, [%rd4+12];
	// inline asm
	prmt.b32 %r7425, %r1995, %r1996, %r45;
	// inline asm
	ld.local.v2.u32 	{%r2085, %r2086}, [%rd4+8];
	// inline asm
	prmt.b32 %r7418, %r2086, %r2085, %r45;
	// inline asm
	ld.local.u32 	%r2003, [%rd4+8];
	ld.local.u32 	%r2004, [%rd4+4];
	// inline asm
	prmt.b32 %r7419, %r2003, %r2004, %r45;
	// inline asm
	ld.local.v2.u32 	{%r2087, %r2088}, [%rd4];
	// inline asm
	prmt.b32 %r7420, %r2088, %r2087, %r45;
	// inline asm
	ld.local.u32 	%r2011, [%rd4];
	ld.local.u32 	%r2012, [%rd3+12];
	// inline asm
	prmt.b32 %r7421, %r2011, %r2012, %r45;
	// inline asm
	ld.local.v2.u32 	{%r2089, %r2090}, [%rd3+8];
	// inline asm
	prmt.b32 %r7414, %r2090, %r2089, %r45;
	// inline asm
	ld.local.u32 	%r2019, [%rd3+8];
	ld.local.u32 	%r2020, [%rd3+4];
	// inline asm
	prmt.b32 %r7415, %r2019, %r2020, %r45;
	// inline asm
	ld.local.v2.u32 	{%r2091, %r2092}, [%rd3];
	// inline asm
	prmt.b32 %r7416, %r2092, %r2091, %r45;
	// inline asm
	ld.local.u32 	%r2027, [%rd3];
	ld.local.u32 	%r2028, [%rd2+12];
	// inline asm
	prmt.b32 %r7417, %r2027, %r2028, %r45;
	// inline asm
	ld.local.v2.u32 	{%r2093, %r2094}, [%rd2+8];
	// inline asm
	prmt.b32 %r2030, %r2094, %r2093, %r45;
	// inline asm
	st.local.u32 	[%rd55], %r2030;
	ld.local.u32 	%r2035, [%rd2+8];
	ld.local.u32 	%r2036, [%rd2+4];
	// inline asm
	prmt.b32 %r2034, %r2035, %r2036, %r45;
	// inline asm
	st.local.u32 	[%rd8+8], %r2034;
	ld.local.v2.u32 	{%r2095, %r2096}, [%rd2];
	// inline asm
	prmt.b32 %r2038, %r2096, %r2095, %r45;
	// inline asm
	st.local.u32 	[%rd8+4], %r2038;
	ld.local.u32 	%r2043, [%rd2];
	ld.local.u32 	%r2044, [%rd1+12];
	// inline asm
	prmt.b32 %r2042, %r2043, %r2044, %r45;
	// inline asm
	st.local.u32 	[%rd8], %r2042;
	ld.local.v2.u32 	{%r2097, %r2098}, [%rd1+8];
	// inline asm
	prmt.b32 %r2046, %r2098, %r2097, %r45;
	// inline asm
	st.local.u32 	[%rd7+12], %r2046;
	ld.local.u32 	%r2051, [%rd1+8];
	ld.local.u32 	%r2052, [%rd1+4];
	// inline asm
	prmt.b32 %r2050, %r2051, %r2052, %r45;
	// inline asm
	st.local.u32 	[%rd7+8], %r2050;
	ld.local.v2.u32 	{%r2099, %r2100}, [%rd1];
	// inline asm
	prmt.b32 %r2054, %r2100, %r2099, %r45;
	// inline asm
	st.local.u32 	[%rd7+4], %r2054;
	ld.local.u32 	%r2059, [%rd1];
	// inline asm
	prmt.b32 %r2058, %r2059, %r7412, %r45;
	// inline asm
	st.local.u32 	[%rd7], %r2058;
	st.local.v4.u32 	[%rd6], {%r7412, %r7412, %r7412, %r7412};
	st.local.v4.u32 	[%rd5], {%r7412, %r7412, %r7412, %r7412};
	st.local.v4.u32 	[%rd4], {%r7412, %r7412, %r7412, %r7412};
	st.local.v4.u32 	[%rd3], {%r7412, %r7412, %r7412, %r7412};
	st.local.v4.u32 	[%rd2], {%r7412, %r7412, %r7412, %r7412};
	st.local.v2.u32 	[%rd1+8], {%r7412, %r7412};
	mov.u64 	%rd272, 0;
	st.local.u64 	[%rd1], %rd272;
	mov.u32 	%r7413, %r7412;
	mov.u32 	%r7438, %r7412;
	mov.u32 	%r7439, %r7412;
	mov.u32 	%r7440, %r7412;
	bra.uni 	BB6_91;

BB6_19:
	setp.gt.s32	%p44, %r754, 5;
	@%p44 bra 	BB6_23;

	setp.eq.s32	%p47, %r754, 4;
	@%p47 bra 	BB6_85;
	bra.uni 	BB6_21;

BB6_85:
	mov.u32 	%r7412, 0;
	// inline asm
	prmt.b32 %r7421, %r7412, %r44, %r45;
	// inline asm
	ld.local.u32 	%r5545, [%rd55];
	ld.local.u32 	%r5546, [%rd8+8];
	// inline asm
	prmt.b32 %r7414, %r5545, %r5546, %r45;
	// inline asm
	ld.local.u32 	%r5549, [%rd8+8];
	ld.local.u32 	%r5550, [%rd8+4];
	// inline asm
	prmt.b32 %r7415, %r5549, %r5550, %r45;
	// inline asm
	ld.local.v2.u32 	{%r5701, %r5702}, [%rd8];
	// inline asm
	prmt.b32 %r7416, %r5702, %r5701, %r45;
	// inline asm
	ld.local.u32 	%r5557, [%rd8];
	ld.local.u32 	%r5558, [%rd7+12];
	// inline asm
	prmt.b32 %r7417, %r5557, %r5558, %r45;
	// inline asm
	ld.local.v2.u32 	{%r5703, %r5704}, [%rd7+8];
	// inline asm
	prmt.b32 %r5560, %r5704, %r5703, %r45;
	// inline asm
	st.local.u32 	[%rd55], %r5560;
	ld.local.u32 	%r5565, [%rd7+8];
	ld.local.u32 	%r5566, [%rd7+4];
	// inline asm
	prmt.b32 %r5564, %r5565, %r5566, %r45;
	// inline asm
	st.local.u32 	[%rd8+8], %r5564;
	ld.local.v2.u32 	{%r5705, %r5706}, [%rd7];
	// inline asm
	prmt.b32 %r5568, %r5706, %r5705, %r45;
	// inline asm
	st.local.u32 	[%rd8+4], %r5568;
	ld.local.u32 	%r5573, [%rd7];
	ld.local.u32 	%r5574, [%rd6+12];
	// inline asm
	prmt.b32 %r5572, %r5573, %r5574, %r45;
	// inline asm
	st.local.u32 	[%rd8], %r5572;
	ld.local.v2.u32 	{%r5707, %r5708}, [%rd6+8];
	// inline asm
	prmt.b32 %r5576, %r5708, %r5707, %r45;
	// inline asm
	st.local.u32 	[%rd7+12], %r5576;
	ld.local.u32 	%r5581, [%rd6+8];
	ld.local.u32 	%r5582, [%rd6+4];
	// inline asm
	prmt.b32 %r5580, %r5581, %r5582, %r45;
	// inline asm
	st.local.u32 	[%rd7+8], %r5580;
	ld.local.v2.u32 	{%r5709, %r5710}, [%rd6];
	// inline asm
	prmt.b32 %r5584, %r5710, %r5709, %r45;
	// inline asm
	st.local.u32 	[%rd7+4], %r5584;
	ld.local.u32 	%r5589, [%rd6];
	ld.local.u32 	%r5590, [%rd5+12];
	// inline asm
	prmt.b32 %r5588, %r5589, %r5590, %r45;
	// inline asm
	st.local.u32 	[%rd7], %r5588;
	ld.local.v2.u32 	{%r5711, %r5712}, [%rd5+8];
	// inline asm
	prmt.b32 %r5592, %r5712, %r5711, %r45;
	// inline asm
	st.local.u32 	[%rd6+12], %r5592;
	ld.local.u32 	%r5597, [%rd5+8];
	ld.local.u32 	%r5598, [%rd5+4];
	// inline asm
	prmt.b32 %r5596, %r5597, %r5598, %r45;
	// inline asm
	st.local.u32 	[%rd6+8], %r5596;
	ld.local.v2.u32 	{%r5713, %r5714}, [%rd5];
	// inline asm
	prmt.b32 %r5600, %r5714, %r5713, %r45;
	// inline asm
	st.local.u32 	[%rd6+4], %r5600;
	ld.local.u32 	%r5605, [%rd5];
	ld.local.u32 	%r5606, [%rd4+12];
	// inline asm
	prmt.b32 %r5604, %r5605, %r5606, %r45;
	// inline asm
	st.local.u32 	[%rd6], %r5604;
	ld.local.v2.u32 	{%r5715, %r5716}, [%rd4+8];
	// inline asm
	prmt.b32 %r5608, %r5716, %r5715, %r45;
	// inline asm
	st.local.u32 	[%rd5+12], %r5608;
	ld.local.u32 	%r5613, [%rd4+8];
	ld.local.u32 	%r5614, [%rd4+4];
	// inline asm
	prmt.b32 %r5612, %r5613, %r5614, %r45;
	// inline asm
	st.local.u32 	[%rd5+8], %r5612;
	ld.local.v2.u32 	{%r5717, %r5718}, [%rd4];
	// inline asm
	prmt.b32 %r5616, %r5718, %r5717, %r45;
	// inline asm
	st.local.u32 	[%rd5+4], %r5616;
	ld.local.u32 	%r5621, [%rd4];
	ld.local.u32 	%r5622, [%rd3+12];
	// inline asm
	prmt.b32 %r5620, %r5621, %r5622, %r45;
	// inline asm
	st.local.u32 	[%rd5], %r5620;
	ld.local.v2.u32 	{%r5719, %r5720}, [%rd3+8];
	// inline asm
	prmt.b32 %r5624, %r5720, %r5719, %r45;
	// inline asm
	st.local.u32 	[%rd4+12], %r5624;
	ld.local.u32 	%r5629, [%rd3+8];
	ld.local.u32 	%r5630, [%rd3+4];
	// inline asm
	prmt.b32 %r5628, %r5629, %r5630, %r45;
	// inline asm
	st.local.u32 	[%rd4+8], %r5628;
	ld.local.v2.u32 	{%r5721, %r5722}, [%rd3];
	// inline asm
	prmt.b32 %r5632, %r5722, %r5721, %r45;
	// inline asm
	st.local.u32 	[%rd4+4], %r5632;
	ld.local.u32 	%r5637, [%rd3];
	ld.local.u32 	%r5638, [%rd2+12];
	// inline asm
	prmt.b32 %r5636, %r5637, %r5638, %r45;
	// inline asm
	st.local.u32 	[%rd4], %r5636;
	ld.local.v2.u32 	{%r5723, %r5724}, [%rd2+8];
	// inline asm
	prmt.b32 %r5640, %r5724, %r5723, %r45;
	// inline asm
	st.local.u32 	[%rd3+12], %r5640;
	ld.local.u32 	%r5645, [%rd2+8];
	ld.local.u32 	%r5646, [%rd2+4];
	// inline asm
	prmt.b32 %r5644, %r5645, %r5646, %r45;
	// inline asm
	st.local.u32 	[%rd3+8], %r5644;
	ld.local.v2.u32 	{%r5725, %r5726}, [%rd2];
	// inline asm
	prmt.b32 %r5648, %r5726, %r5725, %r45;
	// inline asm
	st.local.u32 	[%rd3+4], %r5648;
	ld.local.u32 	%r5653, [%rd2];
	ld.local.u32 	%r5654, [%rd1+12];
	// inline asm
	prmt.b32 %r5652, %r5653, %r5654, %r45;
	// inline asm
	st.local.u32 	[%rd3], %r5652;
	ld.local.v2.u32 	{%r5727, %r5728}, [%rd1+8];
	// inline asm
	prmt.b32 %r5656, %r5728, %r5727, %r45;
	// inline asm
	st.local.u32 	[%rd2+12], %r5656;
	ld.local.u32 	%r5661, [%rd1+8];
	ld.local.u32 	%r5662, [%rd1+4];
	// inline asm
	prmt.b32 %r5660, %r5661, %r5662, %r45;
	// inline asm
	st.local.u32 	[%rd2+8], %r5660;
	ld.local.v2.u32 	{%r5729, %r5730}, [%rd1];
	// inline asm
	prmt.b32 %r5664, %r5730, %r5729, %r45;
	// inline asm
	st.local.u32 	[%rd2+4], %r5664;
	ld.local.u32 	%r5669, [%rd1];
	// inline asm
	prmt.b32 %r5668, %r5669, %r7412, %r45;
	// inline asm
	st.local.u32 	[%rd2], %r5668;
	st.local.v2.u32 	[%rd1+8], {%r7412, %r7412};
	mov.u64 	%rd292, 0;
	st.local.u64 	[%rd1], %rd292;
	mov.u32 	%r7413, %r7412;
	mov.u32 	%r7418, %r7412;
	mov.u32 	%r7419, %r7412;
	mov.u32 	%r7420, %r7412;
	bra.uni 	BB6_86;

BB6_50:
	setp.gt.s32	%p21, %r754, 21;
	@%p21 bra 	BB6_54;

	setp.eq.s32	%p24, %r754, 20;
	@%p24 bra 	BB6_77;
	bra.uni 	BB6_52;

BB6_77:
	mov.u32 	%r7412, 0;
	// inline asm
	prmt.b32 %r7437, %r7412, %r44, %r45;
	// inline asm
	ld.local.u32 	%r2625, [%rd55];
	ld.local.u32 	%r2626, [%rd8+8];
	// inline asm
	prmt.b32 %r7430, %r2625, %r2626, %r45;
	// inline asm
	ld.local.u32 	%r2629, [%rd8+8];
	ld.local.u32 	%r2630, [%rd8+4];
	// inline asm
	prmt.b32 %r7431, %r2629, %r2630, %r45;
	// inline asm
	ld.local.v2.u32 	{%r2765, %r2766}, [%rd8];
	// inline asm
	prmt.b32 %r7432, %r2766, %r2765, %r45;
	// inline asm
	ld.local.u32 	%r2637, [%rd8];
	ld.local.u32 	%r2638, [%rd7+12];
	// inline asm
	prmt.b32 %r7433, %r2637, %r2638, %r45;
	// inline asm
	ld.local.v2.u32 	{%r2767, %r2768}, [%rd7+8];
	// inline asm
	prmt.b32 %r7426, %r2768, %r2767, %r45;
	// inline asm
	ld.local.u32 	%r2645, [%rd7+8];
	ld.local.u32 	%r2646, [%rd7+4];
	// inline asm
	prmt.b32 %r7427, %r2645, %r2646, %r45;
	// inline asm
	ld.local.v2.u32 	{%r2769, %r2770}, [%rd7];
	// inline asm
	prmt.b32 %r7428, %r2770, %r2769, %r45;
	// inline asm
	ld.local.u32 	%r2653, [%rd7];
	ld.local.u32 	%r2654, [%rd6+12];
	// inline asm
	prmt.b32 %r7429, %r2653, %r2654, %r45;
	// inline asm
	ld.local.v2.u32 	{%r2771, %r2772}, [%rd6+8];
	// inline asm
	prmt.b32 %r7422, %r2772, %r2771, %r45;
	// inline asm
	ld.local.u32 	%r2661, [%rd6+8];
	ld.local.u32 	%r2662, [%rd6+4];
	// inline asm
	prmt.b32 %r7423, %r2661, %r2662, %r45;
	// inline asm
	ld.local.v2.u32 	{%r2773, %r2774}, [%rd6];
	// inline asm
	prmt.b32 %r7424, %r2774, %r2773, %r45;
	// inline asm
	ld.local.u32 	%r2669, [%rd6];
	ld.local.u32 	%r2670, [%rd5+12];
	// inline asm
	prmt.b32 %r7425, %r2669, %r2670, %r45;
	// inline asm
	ld.local.v2.u32 	{%r2775, %r2776}, [%rd5+8];
	// inline asm
	prmt.b32 %r7418, %r2776, %r2775, %r45;
	// inline asm
	ld.local.u32 	%r2677, [%rd5+8];
	ld.local.u32 	%r2678, [%rd5+4];
	// inline asm
	prmt.b32 %r7419, %r2677, %r2678, %r45;
	// inline asm
	ld.local.v2.u32 	{%r2777, %r2778}, [%rd5];
	// inline asm
	prmt.b32 %r7420, %r2778, %r2777, %r45;
	// inline asm
	ld.local.u32 	%r2685, [%rd5];
	ld.local.u32 	%r2686, [%rd4+12];
	// inline asm
	prmt.b32 %r7421, %r2685, %r2686, %r45;
	// inline asm
	ld.local.v2.u32 	{%r2779, %r2780}, [%rd4+8];
	// inline asm
	prmt.b32 %r7414, %r2780, %r2779, %r45;
	// inline asm
	ld.local.u32 	%r2693, [%rd4+8];
	ld.local.u32 	%r2694, [%rd4+4];
	// inline asm
	prmt.b32 %r7415, %r2693, %r2694, %r45;
	// inline asm
	ld.local.v2.u32 	{%r2781, %r2782}, [%rd4];
	// inline asm
	prmt.b32 %r7416, %r2782, %r2781, %r45;
	// inline asm
	ld.local.u32 	%r2701, [%rd4];
	ld.local.u32 	%r2702, [%rd3+12];
	// inline asm
	prmt.b32 %r7417, %r2701, %r2702, %r45;
	// inline asm
	ld.local.v2.u32 	{%r2783, %r2784}, [%rd3+8];
	// inline asm
	prmt.b32 %r2704, %r2784, %r2783, %r45;
	// inline asm
	st.local.u32 	[%rd55], %r2704;
	ld.local.u32 	%r2709, [%rd3+8];
	ld.local.u32 	%r2710, [%rd3+4];
	// inline asm
	prmt.b32 %r2708, %r2709, %r2710, %r45;
	// inline asm
	st.local.u32 	[%rd8+8], %r2708;
	ld.local.v2.u32 	{%r2785, %r2786}, [%rd3];
	// inline asm
	prmt.b32 %r2712, %r2786, %r2785, %r45;
	// inline asm
	st.local.u32 	[%rd8+4], %r2712;
	ld.local.u32 	%r2717, [%rd3];
	ld.local.u32 	%r2718, [%rd2+12];
	// inline asm
	prmt.b32 %r2716, %r2717, %r2718, %r45;
	// inline asm
	st.local.u32 	[%rd8], %r2716;
	ld.local.v2.u32 	{%r2787, %r2788}, [%rd2+8];
	// inline asm
	prmt.b32 %r2720, %r2788, %r2787, %r45;
	// inline asm
	st.local.u32 	[%rd7+12], %r2720;
	ld.local.u32 	%r2725, [%rd2+8];
	ld.local.u32 	%r2726, [%rd2+4];
	// inline asm
	prmt.b32 %r2724, %r2725, %r2726, %r45;
	// inline asm
	st.local.u32 	[%rd7+8], %r2724;
	ld.local.v2.u32 	{%r2789, %r2790}, [%rd2];
	// inline asm
	prmt.b32 %r2728, %r2790, %r2789, %r45;
	// inline asm
	st.local.u32 	[%rd7+4], %r2728;
	ld.local.u32 	%r2733, [%rd2];
	ld.local.u32 	%r2734, [%rd1+12];
	// inline asm
	prmt.b32 %r2732, %r2733, %r2734, %r45;
	// inline asm
	st.local.u32 	[%rd7], %r2732;
	ld.local.v2.u32 	{%r2791, %r2792}, [%rd1+8];
	// inline asm
	prmt.b32 %r2736, %r2792, %r2791, %r45;
	// inline asm
	st.local.u32 	[%rd6+12], %r2736;
	ld.local.u32 	%r2741, [%rd1+8];
	ld.local.u32 	%r2742, [%rd1+4];
	// inline asm
	prmt.b32 %r2740, %r2741, %r2742, %r45;
	// inline asm
	st.local.u32 	[%rd6+8], %r2740;
	ld.local.v2.u32 	{%r2793, %r2794}, [%rd1];
	// inline asm
	prmt.b32 %r2744, %r2794, %r2793, %r45;
	// inline asm
	st.local.u32 	[%rd6+4], %r2744;
	ld.local.u32 	%r2749, [%rd1];
	// inline asm
	prmt.b32 %r2748, %r2749, %r7412, %r45;
	// inline asm
	st.local.u32 	[%rd6], %r2748;
	st.local.v4.u32 	[%rd5], {%r7412, %r7412, %r7412, %r7412};
	st.local.v4.u32 	[%rd4], {%r7412, %r7412, %r7412, %r7412};
	st.local.v4.u32 	[%rd3], {%r7412, %r7412, %r7412, %r7412};
	st.local.v4.u32 	[%rd2], {%r7412, %r7412, %r7412, %r7412};
	st.local.v2.u32 	[%rd1+8], {%r7412, %r7412};
	mov.u64 	%rd276, 0;
	st.local.u64 	[%rd1], %rd276;
	mov.u32 	%r7413, %r7412;
	mov.u32 	%r7434, %r7412;
	mov.u32 	%r7435, %r7412;
	mov.u32 	%r7436, %r7412;
	bra.uni 	BB6_90;

BB6_34:
	setp.gt.s32	%p33, %r754, 13;
	@%p33 bra 	BB6_38;

	setp.eq.s32	%p36, %r754, 12;
	@%p36 bra 	BB6_81;
	bra.uni 	BB6_36;

BB6_81:
	mov.u32 	%r7412, 0;
	// inline asm
	prmt.b32 %r7429, %r7412, %r44, %r45;
	// inline asm
	ld.local.u32 	%r4053, [%rd55];
	ld.local.u32 	%r4054, [%rd8+8];
	// inline asm
	prmt.b32 %r7422, %r4053, %r4054, %r45;
	// inline asm
	ld.local.u32 	%r4057, [%rd8+8];
	ld.local.u32 	%r4058, [%rd8+4];
	// inline asm
	prmt.b32 %r7423, %r4057, %r4058, %r45;
	// inline asm
	ld.local.v2.u32 	{%r4201, %r4202}, [%rd8];
	// inline asm
	prmt.b32 %r7424, %r4202, %r4201, %r45;
	// inline asm
	ld.local.u32 	%r4065, [%rd8];
	ld.local.u32 	%r4066, [%rd7+12];
	// inline asm
	prmt.b32 %r7425, %r4065, %r4066, %r45;
	// inline asm
	ld.local.v2.u32 	{%r4203, %r4204}, [%rd7+8];
	// inline asm
	prmt.b32 %r7418, %r4204, %r4203, %r45;
	// inline asm
	ld.local.u32 	%r4073, [%rd7+8];
	ld.local.u32 	%r4074, [%rd7+4];
	// inline asm
	prmt.b32 %r7419, %r4073, %r4074, %r45;
	// inline asm
	ld.local.v2.u32 	{%r4205, %r4206}, [%rd7];
	// inline asm
	prmt.b32 %r7420, %r4206, %r4205, %r45;
	// inline asm
	ld.local.u32 	%r4081, [%rd7];
	ld.local.u32 	%r4082, [%rd6+12];
	// inline asm
	prmt.b32 %r7421, %r4081, %r4082, %r45;
	// inline asm
	ld.local.v2.u32 	{%r4207, %r4208}, [%rd6+8];
	// inline asm
	prmt.b32 %r7414, %r4208, %r4207, %r45;
	// inline asm
	ld.local.u32 	%r4089, [%rd6+8];
	ld.local.u32 	%r4090, [%rd6+4];
	// inline asm
	prmt.b32 %r7415, %r4089, %r4090, %r45;
	// inline asm
	ld.local.v2.u32 	{%r4209, %r4210}, [%rd6];
	// inline asm
	prmt.b32 %r7416, %r4210, %r4209, %r45;
	// inline asm
	ld.local.u32 	%r4097, [%rd6];
	ld.local.u32 	%r4098, [%rd5+12];
	// inline asm
	prmt.b32 %r7417, %r4097, %r4098, %r45;
	// inline asm
	ld.local.v2.u32 	{%r4211, %r4212}, [%rd5+8];
	// inline asm
	prmt.b32 %r4100, %r4212, %r4211, %r45;
	// inline asm
	st.local.u32 	[%rd55], %r4100;
	ld.local.u32 	%r4105, [%rd5+8];
	ld.local.u32 	%r4106, [%rd5+4];
	// inline asm
	prmt.b32 %r4104, %r4105, %r4106, %r45;
	// inline asm
	st.local.u32 	[%rd8+8], %r4104;
	ld.local.v2.u32 	{%r4213, %r4214}, [%rd5];
	// inline asm
	prmt.b32 %r4108, %r4214, %r4213, %r45;
	// inline asm
	st.local.u32 	[%rd8+4], %r4108;
	ld.local.u32 	%r4113, [%rd5];
	ld.local.u32 	%r4114, [%rd4+12];
	// inline asm
	prmt.b32 %r4112, %r4113, %r4114, %r45;
	// inline asm
	st.local.u32 	[%rd8], %r4112;
	ld.local.v2.u32 	{%r4215, %r4216}, [%rd4+8];
	// inline asm
	prmt.b32 %r4116, %r4216, %r4215, %r45;
	// inline asm
	st.local.u32 	[%rd7+12], %r4116;
	ld.local.u32 	%r4121, [%rd4+8];
	ld.local.u32 	%r4122, [%rd4+4];
	// inline asm
	prmt.b32 %r4120, %r4121, %r4122, %r45;
	// inline asm
	st.local.u32 	[%rd7+8], %r4120;
	ld.local.v2.u32 	{%r4217, %r4218}, [%rd4];
	// inline asm
	prmt.b32 %r4124, %r4218, %r4217, %r45;
	// inline asm
	st.local.u32 	[%rd7+4], %r4124;
	ld.local.u32 	%r4129, [%rd4];
	ld.local.u32 	%r4130, [%rd3+12];
	// inline asm
	prmt.b32 %r4128, %r4129, %r4130, %r45;
	// inline asm
	st.local.u32 	[%rd7], %r4128;
	ld.local.v2.u32 	{%r4219, %r4220}, [%rd3+8];
	// inline asm
	prmt.b32 %r4132, %r4220, %r4219, %r45;
	// inline asm
	st.local.u32 	[%rd6+12], %r4132;
	ld.local.u32 	%r4137, [%rd3+8];
	ld.local.u32 	%r4138, [%rd3+4];
	// inline asm
	prmt.b32 %r4136, %r4137, %r4138, %r45;
	// inline asm
	st.local.u32 	[%rd6+8], %r4136;
	ld.local.v2.u32 	{%r4221, %r4222}, [%rd3];
	// inline asm
	prmt.b32 %r4140, %r4222, %r4221, %r45;
	// inline asm
	st.local.u32 	[%rd6+4], %r4140;
	ld.local.u32 	%r4145, [%rd3];
	ld.local.u32 	%r4146, [%rd2+12];
	// inline asm
	prmt.b32 %r4144, %r4145, %r4146, %r45;
	// inline asm
	st.local.u32 	[%rd6], %r4144;
	ld.local.v2.u32 	{%r4223, %r4224}, [%rd2+8];
	// inline asm
	prmt.b32 %r4148, %r4224, %r4223, %r45;
	// inline asm
	st.local.u32 	[%rd5+12], %r4148;
	ld.local.u32 	%r4153, [%rd2+8];
	ld.local.u32 	%r4154, [%rd2+4];
	// inline asm
	prmt.b32 %r4152, %r4153, %r4154, %r45;
	// inline asm
	st.local.u32 	[%rd5+8], %r4152;
	ld.local.v2.u32 	{%r4225, %r4226}, [%rd2];
	// inline asm
	prmt.b32 %r4156, %r4226, %r4225, %r45;
	// inline asm
	st.local.u32 	[%rd5+4], %r4156;
	ld.local.u32 	%r4161, [%rd2];
	ld.local.u32 	%r4162, [%rd1+12];
	// inline asm
	prmt.b32 %r4160, %r4161, %r4162, %r45;
	// inline asm
	st.local.u32 	[%rd5], %r4160;
	ld.local.v2.u32 	{%r4227, %r4228}, [%rd1+8];
	// inline asm
	prmt.b32 %r4164, %r4228, %r4227, %r45;
	// inline asm
	st.local.u32 	[%rd4+12], %r4164;
	ld.local.u32 	%r4169, [%rd1+8];
	ld.local.u32 	%r4170, [%rd1+4];
	// inline asm
	prmt.b32 %r4168, %r4169, %r4170, %r45;
	// inline asm
	st.local.u32 	[%rd4+8], %r4168;
	ld.local.v2.u32 	{%r4229, %r4230}, [%rd1];
	// inline asm
	prmt.b32 %r4172, %r4230, %r4229, %r45;
	// inline asm
	st.local.u32 	[%rd4+4], %r4172;
	ld.local.u32 	%r4177, [%rd1];
	// inline asm
	prmt.b32 %r4176, %r4177, %r7412, %r45;
	// inline asm
	st.local.u32 	[%rd4], %r4176;
	st.local.v4.u32 	[%rd3], {%r7412, %r7412, %r7412, %r7412};
	st.local.v4.u32 	[%rd2], {%r7412, %r7412, %r7412, %r7412};
	st.local.v2.u32 	[%rd1+8], {%r7412, %r7412};
	mov.u64 	%rd284, 0;
	st.local.u64 	[%rd1], %rd284;
	mov.u32 	%r7413, %r7412;
	mov.u32 	%r7426, %r7412;
	mov.u32 	%r7427, %r7412;
	mov.u32 	%r7428, %r7412;
	bra.uni 	BB6_88;

BB6_65:
	setp.gt.s32	%p10, %r754, 29;
	@%p10 bra 	BB6_69;

	setp.eq.s32	%p13, %r754, 28;
	@%p13 bra 	BB6_73;
	bra.uni 	BB6_67;

BB6_73:
	mov.u32 	%r7412, 0;
	// inline asm
	prmt.b32 %r7445, %r7412, %r44, %r45;
	// inline asm
	ld.local.u32 	%r1261, [%rd55];
	ld.local.u32 	%r1262, [%rd8+8];
	// inline asm
	prmt.b32 %r7438, %r1261, %r1262, %r45;
	// inline asm
	ld.local.u32 	%r1265, [%rd8+8];
	ld.local.u32 	%r1266, [%rd8+4];
	// inline asm
	prmt.b32 %r7439, %r1265, %r1266, %r45;
	// inline asm
	ld.local.v2.u32 	{%r1393, %r1394}, [%rd8];
	// inline asm
	prmt.b32 %r7440, %r1394, %r1393, %r45;
	// inline asm
	ld.local.u32 	%r1273, [%rd8];
	ld.local.u32 	%r1274, [%rd7+12];
	// inline asm
	prmt.b32 %r7441, %r1273, %r1274, %r45;
	// inline asm
	ld.local.v2.u32 	{%r1395, %r1396}, [%rd7+8];
	// inline asm
	prmt.b32 %r7434, %r1396, %r1395, %r45;
	// inline asm
	ld.local.u32 	%r1281, [%rd7+8];
	ld.local.u32 	%r1282, [%rd7+4];
	// inline asm
	prmt.b32 %r7435, %r1281, %r1282, %r45;
	// inline asm
	ld.local.v2.u32 	{%r1397, %r1398}, [%rd7];
	// inline asm
	prmt.b32 %r7436, %r1398, %r1397, %r45;
	// inline asm
	ld.local.u32 	%r1289, [%rd7];
	ld.local.u32 	%r1290, [%rd6+12];
	// inline asm
	prmt.b32 %r7437, %r1289, %r1290, %r45;
	// inline asm
	ld.local.v2.u32 	{%r1399, %r1400}, [%rd6+8];
	// inline asm
	prmt.b32 %r7430, %r1400, %r1399, %r45;
	// inline asm
	ld.local.u32 	%r1297, [%rd6+8];
	ld.local.u32 	%r1298, [%rd6+4];
	// inline asm
	prmt.b32 %r7431, %r1297, %r1298, %r45;
	// inline asm
	ld.local.v2.u32 	{%r1401, %r1402}, [%rd6];
	// inline asm
	prmt.b32 %r7432, %r1402, %r1401, %r45;
	// inline asm
	ld.local.u32 	%r1305, [%rd6];
	ld.local.u32 	%r1306, [%rd5+12];
	// inline asm
	prmt.b32 %r7433, %r1305, %r1306, %r45;
	// inline asm
	ld.local.v2.u32 	{%r1403, %r1404}, [%rd5+8];
	// inline asm
	prmt.b32 %r7426, %r1404, %r1403, %r45;
	// inline asm
	ld.local.u32 	%r1313, [%rd5+8];
	ld.local.u32 	%r1314, [%rd5+4];
	// inline asm
	prmt.b32 %r7427, %r1313, %r1314, %r45;
	// inline asm
	ld.local.v2.u32 	{%r1405, %r1406}, [%rd5];
	// inline asm
	prmt.b32 %r7428, %r1406, %r1405, %r45;
	// inline asm
	ld.local.u32 	%r1321, [%rd5];
	ld.local.u32 	%r1322, [%rd4+12];
	// inline asm
	prmt.b32 %r7429, %r1321, %r1322, %r45;
	// inline asm
	ld.local.v2.u32 	{%r1407, %r1408}, [%rd4+8];
	// inline asm
	prmt.b32 %r7422, %r1408, %r1407, %r45;
	// inline asm
	ld.local.u32 	%r1329, [%rd4+8];
	ld.local.u32 	%r1330, [%rd4+4];
	// inline asm
	prmt.b32 %r7423, %r1329, %r1330, %r45;
	// inline asm
	ld.local.v2.u32 	{%r1409, %r1410}, [%rd4];
	// inline asm
	prmt.b32 %r7424, %r1410, %r1409, %r45;
	// inline asm
	ld.local.u32 	%r1337, [%rd4];
	ld.local.u32 	%r1338, [%rd3+12];
	// inline asm
	prmt.b32 %r7425, %r1337, %r1338, %r45;
	// inline asm
	ld.local.v2.u32 	{%r1411, %r1412}, [%rd3+8];
	// inline asm
	prmt.b32 %r7418, %r1412, %r1411, %r45;
	// inline asm
	ld.local.u32 	%r1345, [%rd3+8];
	ld.local.u32 	%r1346, [%rd3+4];
	// inline asm
	prmt.b32 %r7419, %r1345, %r1346, %r45;
	// inline asm
	ld.local.v2.u32 	{%r1413, %r1414}, [%rd3];
	// inline asm
	prmt.b32 %r7420, %r1414, %r1413, %r45;
	// inline asm
	ld.local.u32 	%r1353, [%rd3];
	ld.local.u32 	%r1354, [%rd2+12];
	// inline asm
	prmt.b32 %r7421, %r1353, %r1354, %r45;
	// inline asm
	ld.local.v2.u32 	{%r1415, %r1416}, [%rd2+8];
	// inline asm
	prmt.b32 %r7414, %r1416, %r1415, %r45;
	// inline asm
	ld.local.u32 	%r1361, [%rd2+8];
	ld.local.u32 	%r1362, [%rd2+4];
	// inline asm
	prmt.b32 %r7415, %r1361, %r1362, %r45;
	// inline asm
	ld.local.v2.u32 	{%r1417, %r1418}, [%rd2];
	// inline asm
	prmt.b32 %r7416, %r1418, %r1417, %r45;
	// inline asm
	ld.local.u32 	%r1369, [%rd2];
	ld.local.u32 	%r1370, [%rd1+12];
	// inline asm
	prmt.b32 %r7417, %r1369, %r1370, %r45;
	// inline asm
	ld.local.v2.u32 	{%r1419, %r1420}, [%rd1+8];
	// inline asm
	prmt.b32 %r1372, %r1420, %r1419, %r45;
	// inline asm
	st.local.u32 	[%rd55], %r1372;
	ld.local.u32 	%r1377, [%rd1+8];
	ld.local.u32 	%r1378, [%rd1+4];
	// inline asm
	prmt.b32 %r1376, %r1377, %r1378, %r45;
	// inline asm
	st.local.u32 	[%rd8+8], %r1376;
	ld.local.v2.u32 	{%r1421, %r1422}, [%rd1];
	// inline asm
	prmt.b32 %r1380, %r1422, %r1421, %r45;
	// inline asm
	st.local.u32 	[%rd8+4], %r1380;
	ld.local.u32 	%r1385, [%rd1];
	// inline asm
	prmt.b32 %r1384, %r1385, %r7412, %r45;
	// inline asm
	st.local.u32 	[%rd8], %r1384;
	st.local.v4.u32 	[%rd7], {%r7412, %r7412, %r7412, %r7412};
	st.local.v4.u32 	[%rd6], {%r7412, %r7412, %r7412, %r7412};
	st.local.v4.u32 	[%rd5], {%r7412, %r7412, %r7412, %r7412};
	st.local.v4.u32 	[%rd4], {%r7412, %r7412, %r7412, %r7412};
	st.local.v4.u32 	[%rd3], {%r7412, %r7412, %r7412, %r7412};
	st.local.v4.u32 	[%rd2], {%r7412, %r7412, %r7412, %r7412};
	st.local.v2.u32 	[%rd1+8], {%r7412, %r7412};
	mov.u64 	%rd268, 0;
	st.local.u64 	[%rd1], %rd268;
	mov.u32 	%r7413, %r7412;
	mov.u32 	%r7442, %r7412;
	mov.u32 	%r7443, %r7412;
	mov.u32 	%r7444, %r7412;
	bra.uni 	BB6_94;

BB6_15:
	setp.eq.s32	%p50, %r754, 2;
	@%p50 bra 	BB6_92;
	bra.uni 	BB6_16;

BB6_92:
	mov.u32 	%r7412, 0;
	// inline asm
	prmt.b32 %r7415, %r7412, %r44, %r45;
	// inline asm
	ld.local.u32 	%r5928, [%rd55];
	ld.local.u32 	%r5929, [%rd8+8];
	// inline asm
	prmt.b32 %r7416, %r5928, %r5929, %r45;
	// inline asm
	ld.local.u32 	%r5932, [%rd8+8];
	ld.local.u32 	%r5933, [%rd8+4];
	// inline asm
	prmt.b32 %r7417, %r5932, %r5933, %r45;
	// inline asm
	ld.local.v2.u32 	{%r6086, %r6087}, [%rd8];
	// inline asm
	prmt.b32 %r5935, %r6087, %r6086, %r45;
	// inline asm
	st.local.u32 	[%rd55], %r5935;
	ld.local.u32 	%r5940, [%rd8];
	ld.local.u32 	%r5941, [%rd7+12];
	// inline asm
	prmt.b32 %r5939, %r5940, %r5941, %r45;
	// inline asm
	st.local.u32 	[%rd8+8], %r5939;
	ld.local.v2.u32 	{%r6088, %r6089}, [%rd7+8];
	// inline asm
	prmt.b32 %r5943, %r6089, %r6088, %r45;
	// inline asm
	st.local.u32 	[%rd8+4], %r5943;
	ld.local.u32 	%r5948, [%rd7+8];
	ld.local.u32 	%r5949, [%rd7+4];
	// inline asm
	prmt.b32 %r5947, %r5948, %r5949, %r45;
	// inline asm
	st.local.u32 	[%rd8], %r5947;
	ld.local.v2.u32 	{%r6090, %r6091}, [%rd7];
	// inline asm
	prmt.b32 %r5951, %r6091, %r6090, %r45;
	// inline asm
	st.local.u32 	[%rd7+12], %r5951;
	ld.local.u32 	%r5956, [%rd7];
	ld.local.u32 	%r5957, [%rd6+12];
	// inline asm
	prmt.b32 %r5955, %r5956, %r5957, %r45;
	// inline asm
	st.local.u32 	[%rd7+8], %r5955;
	ld.local.v2.u32 	{%r6092, %r6093}, [%rd6+8];
	// inline asm
	prmt.b32 %r5959, %r6093, %r6092, %r45;
	// inline asm
	st.local.u32 	[%rd7+4], %r5959;
	ld.local.u32 	%r5964, [%rd6+8];
	ld.local.u32 	%r5965, [%rd6+4];
	// inline asm
	prmt.b32 %r5963, %r5964, %r5965, %r45;
	// inline asm
	st.local.u32 	[%rd7], %r5963;
	ld.local.v2.u32 	{%r6094, %r6095}, [%rd6];
	// inline asm
	prmt.b32 %r5967, %r6095, %r6094, %r45;
	// inline asm
	st.local.u32 	[%rd6+12], %r5967;
	ld.local.u32 	%r5972, [%rd6];
	ld.local.u32 	%r5973, [%rd5+12];
	// inline asm
	prmt.b32 %r5971, %r5972, %r5973, %r45;
	// inline asm
	st.local.u32 	[%rd6+8], %r5971;
	ld.local.v2.u32 	{%r6096, %r6097}, [%rd5+8];
	// inline asm
	prmt.b32 %r5975, %r6097, %r6096, %r45;
	// inline asm
	st.local.u32 	[%rd6+4], %r5975;
	ld.local.u32 	%r5980, [%rd5+8];
	ld.local.u32 	%r5981, [%rd5+4];
	// inline asm
	prmt.b32 %r5979, %r5980, %r5981, %r45;
	// inline asm
	st.local.u32 	[%rd6], %r5979;
	ld.local.v2.u32 	{%r6098, %r6099}, [%rd5];
	// inline asm
	prmt.b32 %r5983, %r6099, %r6098, %r45;
	// inline asm
	st.local.u32 	[%rd5+12], %r5983;
	ld.local.u32 	%r5988, [%rd5];
	ld.local.u32 	%r5989, [%rd4+12];
	// inline asm
	prmt.b32 %r5987, %r5988, %r5989, %r45;
	// inline asm
	st.local.u32 	[%rd5+8], %r5987;
	ld.local.v2.u32 	{%r6100, %r6101}, [%rd4+8];
	// inline asm
	prmt.b32 %r5991, %r6101, %r6100, %r45;
	// inline asm
	st.local.u32 	[%rd5+4], %r5991;
	ld.local.u32 	%r5996, [%rd4+8];
	ld.local.u32 	%r5997, [%rd4+4];
	// inline asm
	prmt.b32 %r5995, %r5996, %r5997, %r45;
	// inline asm
	st.local.u32 	[%rd5], %r5995;
	ld.local.v2.u32 	{%r6102, %r6103}, [%rd4];
	// inline asm
	prmt.b32 %r5999, %r6103, %r6102, %r45;
	// inline asm
	st.local.u32 	[%rd4+12], %r5999;
	ld.local.u32 	%r6004, [%rd4];
	ld.local.u32 	%r6005, [%rd3+12];
	// inline asm
	prmt.b32 %r6003, %r6004, %r6005, %r45;
	// inline asm
	st.local.u32 	[%rd4+8], %r6003;
	ld.local.v2.u32 	{%r6104, %r6105}, [%rd3+8];
	// inline asm
	prmt.b32 %r6007, %r6105, %r6104, %r45;
	// inline asm
	st.local.u32 	[%rd4+4], %r6007;
	ld.local.u32 	%r6012, [%rd3+8];
	ld.local.u32 	%r6013, [%rd3+4];
	// inline asm
	prmt.b32 %r6011, %r6012, %r6013, %r45;
	// inline asm
	st.local.u32 	[%rd4], %r6011;
	ld.local.v2.u32 	{%r6106, %r6107}, [%rd3];
	// inline asm
	prmt.b32 %r6015, %r6107, %r6106, %r45;
	// inline asm
	st.local.u32 	[%rd3+12], %r6015;
	ld.local.u32 	%r6020, [%rd3];
	ld.local.u32 	%r6021, [%rd2+12];
	// inline asm
	prmt.b32 %r6019, %r6020, %r6021, %r45;
	// inline asm
	st.local.u32 	[%rd3+8], %r6019;
	ld.local.v2.u32 	{%r6108, %r6109}, [%rd2+8];
	// inline asm
	prmt.b32 %r6023, %r6109, %r6108, %r45;
	// inline asm
	st.local.u32 	[%rd3+4], %r6023;
	ld.local.u32 	%r6028, [%rd2+8];
	ld.local.u32 	%r6029, [%rd2+4];
	// inline asm
	prmt.b32 %r6027, %r6028, %r6029, %r45;
	// inline asm
	st.local.u32 	[%rd3], %r6027;
	ld.local.v2.u32 	{%r6110, %r6111}, [%rd2];
	// inline asm
	prmt.b32 %r6031, %r6111, %r6110, %r45;
	// inline asm
	st.local.u32 	[%rd2+12], %r6031;
	ld.local.u32 	%r6036, [%rd2];
	ld.local.u32 	%r6037, [%rd1+12];
	// inline asm
	prmt.b32 %r6035, %r6036, %r6037, %r45;
	// inline asm
	st.local.u32 	[%rd2+8], %r6035;
	ld.local.v2.u32 	{%r6112, %r6113}, [%rd1+8];
	// inline asm
	prmt.b32 %r6039, %r6113, %r6112, %r45;
	// inline asm
	st.local.u32 	[%rd2+4], %r6039;
	ld.local.u32 	%r6044, [%rd1+8];
	ld.local.u32 	%r6045, [%rd1+4];
	// inline asm
	prmt.b32 %r6043, %r6044, %r6045, %r45;
	// inline asm
	st.local.u32 	[%rd2], %r6043;
	ld.local.v2.u32 	{%r6114, %r6115}, [%rd1];
	// inline asm
	prmt.b32 %r6047, %r6115, %r6114, %r45;
	// inline asm
	st.local.u32 	[%rd1+12], %r6047;
	ld.local.u32 	%r6052, [%rd1];
	// inline asm
	prmt.b32 %r6051, %r6052, %r7412, %r45;
	// inline asm
	st.local.u32 	[%rd1+8], %r6051;
	mov.u64 	%rd294, 0;
	st.local.u64 	[%rd1], %rd294;
	mov.u32 	%r7413, %r7412;
	mov.u32 	%r7414, %r7412;
	bra.uni 	BB6_18;

BB6_47:
	setp.eq.s32	%p27, %r754, 18;
	@%p27 bra 	BB6_78;
	bra.uni 	BB6_48;

BB6_78:
	mov.u32 	%r7412, 0;
	// inline asm
	prmt.b32 %r7431, %r7412, %r44, %r45;
	// inline asm
	ld.local.u32 	%r2976, [%rd55];
	ld.local.u32 	%r2977, [%rd8+8];
	// inline asm
	prmt.b32 %r7432, %r2976, %r2977, %r45;
	// inline asm
	ld.local.u32 	%r2980, [%rd8+8];
	ld.local.u32 	%r2981, [%rd8+4];
	// inline asm
	prmt.b32 %r7433, %r2980, %r2981, %r45;
	// inline asm
	ld.local.v2.u32 	{%r3118, %r3119}, [%rd8];
	// inline asm
	prmt.b32 %r7426, %r3119, %r3118, %r45;
	// inline asm
	ld.local.u32 	%r2988, [%rd8];
	ld.local.u32 	%r2989, [%rd7+12];
	// inline asm
	prmt.b32 %r7427, %r2988, %r2989, %r45;
	// inline asm
	ld.local.v2.u32 	{%r3120, %r3121}, [%rd7+8];
	// inline asm
	prmt.b32 %r7428, %r3121, %r3120, %r45;
	// inline asm
	ld.local.u32 	%r2996, [%rd7+8];
	ld.local.u32 	%r2997, [%rd7+4];
	// inline asm
	prmt.b32 %r7429, %r2996, %r2997, %r45;
	// inline asm
	ld.local.v2.u32 	{%r3122, %r3123}, [%rd7];
	// inline asm
	prmt.b32 %r7422, %r3123, %r3122, %r45;
	// inline asm
	ld.local.u32 	%r3004, [%rd7];
	ld.local.u32 	%r3005, [%rd6+12];
	// inline asm
	prmt.b32 %r7423, %r3004, %r3005, %r45;
	// inline asm
	ld.local.v2.u32 	{%r3124, %r3125}, [%rd6+8];
	// inline asm
	prmt.b32 %r7424, %r3125, %r3124, %r45;
	// inline asm
	ld.local.u32 	%r3012, [%rd6+8];
	ld.local.u32 	%r3013, [%rd6+4];
	// inline asm
	prmt.b32 %r7425, %r3012, %r3013, %r45;
	// inline asm
	ld.local.v2.u32 	{%r3126, %r3127}, [%rd6];
	// inline asm
	prmt.b32 %r7418, %r3127, %r3126, %r45;
	// inline asm
	ld.local.u32 	%r3020, [%rd6];
	ld.local.u32 	%r3021, [%rd5+12];
	// inline asm
	prmt.b32 %r7419, %r3020, %r3021, %r45;
	// inline asm
	ld.local.v2.u32 	{%r3128, %r3129}, [%rd5+8];
	// inline asm
	prmt.b32 %r7420, %r3129, %r3128, %r45;
	// inline asm
	ld.local.u32 	%r3028, [%rd5+8];
	ld.local.u32 	%r3029, [%rd5+4];
	// inline asm
	prmt.b32 %r7421, %r3028, %r3029, %r45;
	// inline asm
	ld.local.v2.u32 	{%r3130, %r3131}, [%rd5];
	// inline asm
	prmt.b32 %r7414, %r3131, %r3130, %r45;
	// inline asm
	ld.local.u32 	%r3036, [%rd5];
	ld.local.u32 	%r3037, [%rd4+12];
	// inline asm
	prmt.b32 %r7415, %r3036, %r3037, %r45;
	// inline asm
	ld.local.v2.u32 	{%r3132, %r3133}, [%rd4+8];
	// inline asm
	prmt.b32 %r7416, %r3133, %r3132, %r45;
	// inline asm
	ld.local.u32 	%r3044, [%rd4+8];
	ld.local.u32 	%r3045, [%rd4+4];
	// inline asm
	prmt.b32 %r7417, %r3044, %r3045, %r45;
	// inline asm
	ld.local.v2.u32 	{%r3134, %r3135}, [%rd4];
	// inline asm
	prmt.b32 %r3047, %r3135, %r3134, %r45;
	// inline asm
	st.local.u32 	[%rd55], %r3047;
	ld.local.u32 	%r3052, [%rd4];
	ld.local.u32 	%r3053, [%rd3+12];
	// inline asm
	prmt.b32 %r3051, %r3052, %r3053, %r45;
	// inline asm
	st.local.u32 	[%rd8+8], %r3051;
	ld.local.v2.u32 	{%r3136, %r3137}, [%rd3+8];
	// inline asm
	prmt.b32 %r3055, %r3137, %r3136, %r45;
	// inline asm
	st.local.u32 	[%rd8+4], %r3055;
	ld.local.u32 	%r3060, [%rd3+8];
	ld.local.u32 	%r3061, [%rd3+4];
	// inline asm
	prmt.b32 %r3059, %r3060, %r3061, %r45;
	// inline asm
	st.local.u32 	[%rd8], %r3059;
	ld.local.v2.u32 	{%r3138, %r3139}, [%rd3];
	// inline asm
	prmt.b32 %r3063, %r3139, %r3138, %r45;
	// inline asm
	st.local.u32 	[%rd7+12], %r3063;
	ld.local.u32 	%r3068, [%rd3];
	ld.local.u32 	%r3069, [%rd2+12];
	// inline asm
	prmt.b32 %r3067, %r3068, %r3069, %r45;
	// inline asm
	st.local.u32 	[%rd7+8], %r3067;
	ld.local.v2.u32 	{%r3140, %r3141}, [%rd2+8];
	// inline asm
	prmt.b32 %r3071, %r3141, %r3140, %r45;
	// inline asm
	st.local.u32 	[%rd7+4], %r3071;
	ld.local.u32 	%r3076, [%rd2+8];
	ld.local.u32 	%r3077, [%rd2+4];
	// inline asm
	prmt.b32 %r3075, %r3076, %r3077, %r45;
	// inline asm
	st.local.u32 	[%rd7], %r3075;
	ld.local.v2.u32 	{%r3142, %r3143}, [%rd2];
	// inline asm
	prmt.b32 %r3079, %r3143, %r3142, %r45;
	// inline asm
	st.local.u32 	[%rd6+12], %r3079;
	ld.local.u32 	%r3084, [%rd2];
	ld.local.u32 	%r3085, [%rd1+12];
	// inline asm
	prmt.b32 %r3083, %r3084, %r3085, %r45;
	// inline asm
	st.local.u32 	[%rd6+8], %r3083;
	ld.local.v2.u32 	{%r3144, %r3145}, [%rd1+8];
	// inline asm
	prmt.b32 %r3087, %r3145, %r3144, %r45;
	// inline asm
	st.local.u32 	[%rd6+4], %r3087;
	ld.local.u32 	%r3092, [%rd1+8];
	ld.local.u32 	%r3093, [%rd1+4];
	// inline asm
	prmt.b32 %r3091, %r3092, %r3093, %r45;
	// inline asm
	st.local.u32 	[%rd6], %r3091;
	ld.local.v2.u32 	{%r3146, %r3147}, [%rd1];
	// inline asm
	prmt.b32 %r3095, %r3147, %r3146, %r45;
	// inline asm
	st.local.u32 	[%rd5+12], %r3095;
	ld.local.u32 	%r3100, [%rd1];
	// inline asm
	prmt.b32 %r3099, %r3100, %r7412, %r45;
	// inline asm
	st.local.u32 	[%rd5+8], %r3099;
	st.local.v2.u32 	[%rd5], {%r7412, %r7412};
	st.local.u32 	[%rd4+12], %r7412;
	st.local.u32 	[%rd4+8], %r7412;
	st.local.u32 	[%rd4+4], %r7412;
	st.local.u32 	[%rd4], %r7412;
	st.local.u32 	[%rd3+12], %r7412;
	st.local.u32 	[%rd3+8], %r7412;
	st.local.u32 	[%rd3+4], %r7412;
	st.local.u32 	[%rd3], %r7412;
	st.local.u32 	[%rd2+12], %r7412;
	st.local.u32 	[%rd2+8], %r7412;
	st.local.u32 	[%rd2+4], %r7412;
	st.local.u32 	[%rd2], %r7412;
	st.local.u32 	[%rd1+12], %r7412;
	st.local.u32 	[%rd1+8], %r7412;
	mov.u64 	%rd278, 0;
	st.local.u32 	[%rd1+4], %rd278;
	st.local.u32 	[%rd1], %rd278;
	mov.u32 	%r7413, %r7412;
	mov.u32 	%r7430, %r7412;
	bra.uni 	BB6_89;

BB6_31:
	setp.eq.s32	%p39, %r754, 10;
	@%p39 bra 	BB6_82;
	bra.uni 	BB6_32;

BB6_82:
	mov.u32 	%r7412, 0;
	// inline asm
	prmt.b32 %r7423, %r7412, %r44, %r45;
	// inline asm
	ld.local.u32 	%r4420, [%rd55];
	ld.local.u32 	%r4421, [%rd8+8];
	// inline asm
	prmt.b32 %r7424, %r4420, %r4421, %r45;
	// inline asm
	ld.local.u32 	%r4424, [%rd8+8];
	ld.local.u32 	%r4425, [%rd8+4];
	// inline asm
	prmt.b32 %r7425, %r4424, %r4425, %r45;
	// inline asm
	ld.local.v2.u32 	{%r4570, %r4571}, [%rd8];
	// inline asm
	prmt.b32 %r7418, %r4571, %r4570, %r45;
	// inline asm
	ld.local.u32 	%r4432, [%rd8];
	ld.local.u32 	%r4433, [%rd7+12];
	// inline asm
	prmt.b32 %r7419, %r4432, %r4433, %r45;
	// inline asm
	ld.local.v2.u32 	{%r4572, %r4573}, [%rd7+8];
	// inline asm
	prmt.b32 %r7420, %r4573, %r4572, %r45;
	// inline asm
	ld.local.u32 	%r4440, [%rd7+8];
	ld.local.u32 	%r4441, [%rd7+4];
	// inline asm
	prmt.b32 %r7421, %r4440, %r4441, %r45;
	// inline asm
	ld.local.v2.u32 	{%r4574, %r4575}, [%rd7];
	// inline asm
	prmt.b32 %r7414, %r4575, %r4574, %r45;
	// inline asm
	ld.local.u32 	%r4448, [%rd7];
	ld.local.u32 	%r4449, [%rd6+12];
	// inline asm
	prmt.b32 %r7415, %r4448, %r4449, %r45;
	// inline asm
	ld.local.v2.u32 	{%r4576, %r4577}, [%rd6+8];
	// inline asm
	prmt.b32 %r7416, %r4577, %r4576, %r45;
	// inline asm
	ld.local.u32 	%r4456, [%rd6+8];
	ld.local.u32 	%r4457, [%rd6+4];
	// inline asm
	prmt.b32 %r7417, %r4456, %r4457, %r45;
	// inline asm
	ld.local.v2.u32 	{%r4578, %r4579}, [%rd6];
	// inline asm
	prmt.b32 %r4459, %r4579, %r4578, %r45;
	// inline asm
	st.local.u32 	[%rd55], %r4459;
	ld.local.u32 	%r4464, [%rd6];
	ld.local.u32 	%r4465, [%rd5+12];
	// inline asm
	prmt.b32 %r4463, %r4464, %r4465, %r45;
	// inline asm
	st.local.u32 	[%rd8+8], %r4463;
	ld.local.v2.u32 	{%r4580, %r4581}, [%rd5+8];
	// inline asm
	prmt.b32 %r4467, %r4581, %r4580, %r45;
	// inline asm
	st.local.u32 	[%rd8+4], %r4467;
	ld.local.u32 	%r4472, [%rd5+8];
	ld.local.u32 	%r4473, [%rd5+4];
	// inline asm
	prmt.b32 %r4471, %r4472, %r4473, %r45;
	// inline asm
	st.local.u32 	[%rd8], %r4471;
	ld.local.v2.u32 	{%r4582, %r4583}, [%rd5];
	// inline asm
	prmt.b32 %r4475, %r4583, %r4582, %r45;
	// inline asm
	st.local.u32 	[%rd7+12], %r4475;
	ld.local.u32 	%r4480, [%rd5];
	ld.local.u32 	%r4481, [%rd4+12];
	// inline asm
	prmt.b32 %r4479, %r4480, %r4481, %r45;
	// inline asm
	st.local.u32 	[%rd7+8], %r4479;
	ld.local.v2.u32 	{%r4584, %r4585}, [%rd4+8];
	// inline asm
	prmt.b32 %r4483, %r4585, %r4584, %r45;
	// inline asm
	st.local.u32 	[%rd7+4], %r4483;
	ld.local.u32 	%r4488, [%rd4+8];
	ld.local.u32 	%r4489, [%rd4+4];
	// inline asm
	prmt.b32 %r4487, %r4488, %r4489, %r45;
	// inline asm
	st.local.u32 	[%rd7], %r4487;
	ld.local.v2.u32 	{%r4586, %r4587}, [%rd4];
	// inline asm
	prmt.b32 %r4491, %r4587, %r4586, %r45;
	// inline asm
	st.local.u32 	[%rd6+12], %r4491;
	ld.local.u32 	%r4496, [%rd4];
	ld.local.u32 	%r4497, [%rd3+12];
	// inline asm
	prmt.b32 %r4495, %r4496, %r4497, %r45;
	// inline asm
	st.local.u32 	[%rd6+8], %r4495;
	ld.local.v2.u32 	{%r4588, %r4589}, [%rd3+8];
	// inline asm
	prmt.b32 %r4499, %r4589, %r4588, %r45;
	// inline asm
	st.local.u32 	[%rd6+4], %r4499;
	ld.local.u32 	%r4504, [%rd3+8];
	ld.local.u32 	%r4505, [%rd3+4];
	// inline asm
	prmt.b32 %r4503, %r4504, %r4505, %r45;
	// inline asm
	st.local.u32 	[%rd6], %r4503;
	ld.local.v2.u32 	{%r4590, %r4591}, [%rd3];
	// inline asm
	prmt.b32 %r4507, %r4591, %r4590, %r45;
	// inline asm
	st.local.u32 	[%rd5+12], %r4507;
	ld.local.u32 	%r4512, [%rd3];
	ld.local.u32 	%r4513, [%rd2+12];
	// inline asm
	prmt.b32 %r4511, %r4512, %r4513, %r45;
	// inline asm
	st.local.u32 	[%rd5+8], %r4511;
	ld.local.v2.u32 	{%r4592, %r4593}, [%rd2+8];
	// inline asm
	prmt.b32 %r4515, %r4593, %r4592, %r45;
	// inline asm
	st.local.u32 	[%rd5+4], %r4515;
	ld.local.u32 	%r4520, [%rd2+8];
	ld.local.u32 	%r4521, [%rd2+4];
	// inline asm
	prmt.b32 %r4519, %r4520, %r4521, %r45;
	// inline asm
	st.local.u32 	[%rd5], %r4519;
	ld.local.v2.u32 	{%r4594, %r4595}, [%rd2];
	// inline asm
	prmt.b32 %r4523, %r4595, %r4594, %r45;
	// inline asm
	st.local.u32 	[%rd4+12], %r4523;
	ld.local.u32 	%r4528, [%rd2];
	ld.local.u32 	%r4529, [%rd1+12];
	// inline asm
	prmt.b32 %r4527, %r4528, %r4529, %r45;
	// inline asm
	st.local.u32 	[%rd4+8], %r4527;
	ld.local.v2.u32 	{%r4596, %r4597}, [%rd1+8];
	// inline asm
	prmt.b32 %r4531, %r4597, %r4596, %r45;
	// inline asm
	st.local.u32 	[%rd4+4], %r4531;
	ld.local.u32 	%r4536, [%rd1+8];
	ld.local.u32 	%r4537, [%rd1+4];
	// inline asm
	prmt.b32 %r4535, %r4536, %r4537, %r45;
	// inline asm
	st.local.u32 	[%rd4], %r4535;
	ld.local.v2.u32 	{%r4598, %r4599}, [%rd1];
	// inline asm
	prmt.b32 %r4539, %r4599, %r4598, %r45;
	// inline asm
	st.local.u32 	[%rd3+12], %r4539;
	ld.local.u32 	%r4544, [%rd1];
	// inline asm
	prmt.b32 %r4543, %r4544, %r7412, %r45;
	// inline asm
	st.local.u32 	[%rd3+8], %r4543;
	st.local.v2.u32 	[%rd3], {%r7412, %r7412};
	st.local.u32 	[%rd2+12], %r7412;
	st.local.u32 	[%rd2+8], %r7412;
	st.local.u32 	[%rd2+4], %r7412;
	st.local.u32 	[%rd2], %r7412;
	st.local.u32 	[%rd1+12], %r7412;
	st.local.u32 	[%rd1+8], %r7412;
	mov.u64 	%rd286, 0;
	st.local.u32 	[%rd1+4], %rd286;
	st.local.u32 	[%rd1], %rd286;
	mov.u32 	%r7413, %r7412;
	mov.u32 	%r7422, %r7412;
	bra.uni 	BB6_87;

BB6_62:
	setp.eq.s32	%p16, %r754, 26;
	@%p16 bra 	BB6_74;
	bra.uni 	BB6_63;

BB6_74:
	mov.u32 	%r7412, 0;
	// inline asm
	prmt.b32 %r7439, %r7412, %r44, %r45;
	// inline asm
	ld.local.u32 	%r1596, [%rd55];
	ld.local.u32 	%r1597, [%rd8+8];
	// inline asm
	prmt.b32 %r7440, %r1596, %r1597, %r45;
	// inline asm
	ld.local.u32 	%r1600, [%rd8+8];
	ld.local.u32 	%r1601, [%rd8+4];
	// inline asm
	prmt.b32 %r7441, %r1600, %r1601, %r45;
	// inline asm
	ld.local.v2.u32 	{%r1730, %r1731}, [%rd8];
	// inline asm
	prmt.b32 %r7434, %r1731, %r1730, %r45;
	// inline asm
	ld.local.u32 	%r1608, [%rd8];
	ld.local.u32 	%r1609, [%rd7+12];
	// inline asm
	prmt.b32 %r7435, %r1608, %r1609, %r45;
	// inline asm
	ld.local.v2.u32 	{%r1732, %r1733}, [%rd7+8];
	// inline asm
	prmt.b32 %r7436, %r1733, %r1732, %r45;
	// inline asm
	ld.local.u32 	%r1616, [%rd7+8];
	ld.local.u32 	%r1617, [%rd7+4];
	// inline asm
	prmt.b32 %r7437, %r1616, %r1617, %r45;
	// inline asm
	ld.local.v2.u32 	{%r1734, %r1735}, [%rd7];
	// inline asm
	prmt.b32 %r7430, %r1735, %r1734, %r45;
	// inline asm
	ld.local.u32 	%r1624, [%rd7];
	ld.local.u32 	%r1625, [%rd6+12];
	// inline asm
	prmt.b32 %r7431, %r1624, %r1625, %r45;
	// inline asm
	ld.local.v2.u32 	{%r1736, %r1737}, [%rd6+8];
	// inline asm
	prmt.b32 %r7432, %r1737, %r1736, %r45;
	// inline asm
	ld.local.u32 	%r1632, [%rd6+8];
	ld.local.u32 	%r1633, [%rd6+4];
	// inline asm
	prmt.b32 %r7433, %r1632, %r1633, %r45;
	// inline asm
	ld.local.v2.u32 	{%r1738, %r1739}, [%rd6];
	// inline asm
	prmt.b32 %r7426, %r1739, %r1738, %r45;
	// inline asm
	ld.local.u32 	%r1640, [%rd6];
	ld.local.u32 	%r1641, [%rd5+12];
	// inline asm
	prmt.b32 %r7427, %r1640, %r1641, %r45;
	// inline asm
	ld.local.v2.u32 	{%r1740, %r1741}, [%rd5+8];
	// inline asm
	prmt.b32 %r7428, %r1741, %r1740, %r45;
	// inline asm
	ld.local.u32 	%r1648, [%rd5+8];
	ld.local.u32 	%r1649, [%rd5+4];
	// inline asm
	prmt.b32 %r7429, %r1648, %r1649, %r45;
	// inline asm
	ld.local.v2.u32 	{%r1742, %r1743}, [%rd5];
	// inline asm
	prmt.b32 %r7422, %r1743, %r1742, %r45;
	// inline asm
	ld.local.u32 	%r1656, [%rd5];
	ld.local.u32 	%r1657, [%rd4+12];
	// inline asm
	prmt.b32 %r7423, %r1656, %r1657, %r45;
	// inline asm
	ld.local.v2.u32 	{%r1744, %r1745}, [%rd4+8];
	// inline asm
	prmt.b32 %r7424, %r1745, %r1744, %r45;
	// inline asm
	ld.local.u32 	%r1664, [%rd4+8];
	ld.local.u32 	%r1665, [%rd4+4];
	// inline asm
	prmt.b32 %r7425, %r1664, %r1665, %r45;
	// inline asm
	ld.local.v2.u32 	{%r1746, %r1747}, [%rd4];
	// inline asm
	prmt.b32 %r7418, %r1747, %r1746, %r45;
	// inline asm
	ld.local.u32 	%r1672, [%rd4];
	ld.local.u32 	%r1673, [%rd3+12];
	// inline asm
	prmt.b32 %r7419, %r1672, %r1673, %r45;
	// inline asm
	ld.local.v2.u32 	{%r1748, %r1749}, [%rd3+8];
	// inline asm
	prmt.b32 %r7420, %r1749, %r1748, %r45;
	// inline asm
	ld.local.u32 	%r1680, [%rd3+8];
	ld.local.u32 	%r1681, [%rd3+4];
	// inline asm
	prmt.b32 %r7421, %r1680, %r1681, %r45;
	// inline asm
	ld.local.v2.u32 	{%r1750, %r1751}, [%rd3];
	// inline asm
	prmt.b32 %r7414, %r1751, %r1750, %r45;
	// inline asm
	ld.local.u32 	%r1688, [%rd3];
	ld.local.u32 	%r1689, [%rd2+12];
	// inline asm
	prmt.b32 %r7415, %r1688, %r1689, %r45;
	// inline asm
	ld.local.v2.u32 	{%r1752, %r1753}, [%rd2+8];
	// inline asm
	prmt.b32 %r7416, %r1753, %r1752, %r45;
	// inline asm
	ld.local.u32 	%r1696, [%rd2+8];
	ld.local.u32 	%r1697, [%rd2+4];
	// inline asm
	prmt.b32 %r7417, %r1696, %r1697, %r45;
	// inline asm
	ld.local.v2.u32 	{%r1754, %r1755}, [%rd2];
	// inline asm
	prmt.b32 %r1699, %r1755, %r1754, %r45;
	// inline asm
	st.local.u32 	[%rd55], %r1699;
	ld.local.u32 	%r1704, [%rd2];
	ld.local.u32 	%r1705, [%rd1+12];
	// inline asm
	prmt.b32 %r1703, %r1704, %r1705, %r45;
	// inline asm
	st.local.u32 	[%rd8+8], %r1703;
	ld.local.v2.u32 	{%r1756, %r1757}, [%rd1+8];
	// inline asm
	prmt.b32 %r1707, %r1757, %r1756, %r45;
	// inline asm
	st.local.u32 	[%rd8+4], %r1707;
	ld.local.u32 	%r1712, [%rd1+8];
	ld.local.u32 	%r1713, [%rd1+4];
	// inline asm
	prmt.b32 %r1711, %r1712, %r1713, %r45;
	// inline asm
	st.local.u32 	[%rd8], %r1711;
	ld.local.v2.u32 	{%r1758, %r1759}, [%rd1];
	// inline asm
	prmt.b32 %r1715, %r1759, %r1758, %r45;
	// inline asm
	st.local.u32 	[%rd7+12], %r1715;
	ld.local.u32 	%r1720, [%rd1];
	// inline asm
	prmt.b32 %r1719, %r1720, %r7412, %r45;
	// inline asm
	st.local.u32 	[%rd7+8], %r1719;
	st.local.v2.u32 	[%rd7], {%r7412, %r7412};
	st.local.u32 	[%rd6+12], %r7412;
	st.local.u32 	[%rd6+8], %r7412;
	st.local.u32 	[%rd6+4], %r7412;
	st.local.u32 	[%rd6], %r7412;
	st.local.u32 	[%rd5+12], %r7412;
	st.local.u32 	[%rd5+8], %r7412;
	st.local.u32 	[%rd5+4], %r7412;
	st.local.u32 	[%rd5], %r7412;
	st.local.u32 	[%rd4+12], %r7412;
	st.local.u32 	[%rd4+8], %r7412;
	st.local.u32 	[%rd4+4], %r7412;
	st.local.u32 	[%rd4], %r7412;
	st.local.u32 	[%rd3+12], %r7412;
	st.local.u32 	[%rd3+8], %r7412;
	st.local.u32 	[%rd3+4], %r7412;
	st.local.u32 	[%rd3], %r7412;
	st.local.u32 	[%rd2+12], %r7412;
	st.local.u32 	[%rd2+8], %r7412;
	st.local.u32 	[%rd2+4], %r7412;
	st.local.u32 	[%rd2], %r7412;
	st.local.u32 	[%rd1+12], %r7412;
	st.local.u32 	[%rd1+8], %r7412;
	mov.u64 	%rd270, 0;
	st.local.u32 	[%rd1+4], %rd270;
	st.local.u32 	[%rd1], %rd270;
	mov.u32 	%r7413, %r7412;
	mov.u32 	%r7438, %r7412;
	bra.uni 	BB6_91;

BB6_23:
	setp.eq.s32	%p45, %r754, 6;
	@%p45 bra 	BB6_84;
	bra.uni 	BB6_24;

BB6_84:
	mov.u32 	%r7412, 0;
	// inline asm
	prmt.b32 %r7419, %r7412, %r44, %r45;
	// inline asm
	ld.local.u32 	%r5166, [%rd55];
	ld.local.u32 	%r5167, [%rd8+8];
	// inline asm
	prmt.b32 %r7420, %r5166, %r5167, %r45;
	// inline asm
	ld.local.u32 	%r5170, [%rd8+8];
	ld.local.u32 	%r5171, [%rd8+4];
	// inline asm
	prmt.b32 %r7421, %r5170, %r5171, %r45;
	// inline asm
	ld.local.v2.u32 	{%r5320, %r5321}, [%rd8];
	// inline asm
	prmt.b32 %r7414, %r5321, %r5320, %r45;
	// inline asm
	ld.local.u32 	%r5178, [%rd8];
	ld.local.u32 	%r5179, [%rd7+12];
	// inline asm
	prmt.b32 %r7415, %r5178, %r5179, %r45;
	// inline asm
	ld.local.v2.u32 	{%r5322, %r5323}, [%rd7+8];
	// inline asm
	prmt.b32 %r7416, %r5323, %r5322, %r45;
	// inline asm
	ld.local.u32 	%r5186, [%rd7+8];
	ld.local.u32 	%r5187, [%rd7+4];
	// inline asm
	prmt.b32 %r7417, %r5186, %r5187, %r45;
	// inline asm
	ld.local.v2.u32 	{%r5324, %r5325}, [%rd7];
	// inline asm
	prmt.b32 %r5189, %r5325, %r5324, %r45;
	// inline asm
	st.local.u32 	[%rd55], %r5189;
	ld.local.u32 	%r5194, [%rd7];
	ld.local.u32 	%r5195, [%rd6+12];
	// inline asm
	prmt.b32 %r5193, %r5194, %r5195, %r45;
	// inline asm
	st.local.u32 	[%rd8+8], %r5193;
	ld.local.v2.u32 	{%r5326, %r5327}, [%rd6+8];
	// inline asm
	prmt.b32 %r5197, %r5327, %r5326, %r45;
	// inline asm
	st.local.u32 	[%rd8+4], %r5197;
	ld.local.u32 	%r5202, [%rd6+8];
	ld.local.u32 	%r5203, [%rd6+4];
	// inline asm
	prmt.b32 %r5201, %r5202, %r5203, %r45;
	// inline asm
	st.local.u32 	[%rd8], %r5201;
	ld.local.v2.u32 	{%r5328, %r5329}, [%rd6];
	// inline asm
	prmt.b32 %r5205, %r5329, %r5328, %r45;
	// inline asm
	st.local.u32 	[%rd7+12], %r5205;
	ld.local.u32 	%r5210, [%rd6];
	ld.local.u32 	%r5211, [%rd5+12];
	// inline asm
	prmt.b32 %r5209, %r5210, %r5211, %r45;
	// inline asm
	st.local.u32 	[%rd7+8], %r5209;
	ld.local.v2.u32 	{%r5330, %r5331}, [%rd5+8];
	// inline asm
	prmt.b32 %r5213, %r5331, %r5330, %r45;
	// inline asm
	st.local.u32 	[%rd7+4], %r5213;
	ld.local.u32 	%r5218, [%rd5+8];
	ld.local.u32 	%r5219, [%rd5+4];
	// inline asm
	prmt.b32 %r5217, %r5218, %r5219, %r45;
	// inline asm
	st.local.u32 	[%rd7], %r5217;
	ld.local.v2.u32 	{%r5332, %r5333}, [%rd5];
	// inline asm
	prmt.b32 %r5221, %r5333, %r5332, %r45;
	// inline asm
	st.local.u32 	[%rd6+12], %r5221;
	ld.local.u32 	%r5226, [%rd5];
	ld.local.u32 	%r5227, [%rd4+12];
	// inline asm
	prmt.b32 %r5225, %r5226, %r5227, %r45;
	// inline asm
	st.local.u32 	[%rd6+8], %r5225;
	ld.local.v2.u32 	{%r5334, %r5335}, [%rd4+8];
	// inline asm
	prmt.b32 %r5229, %r5335, %r5334, %r45;
	// inline asm
	st.local.u32 	[%rd6+4], %r5229;
	ld.local.u32 	%r5234, [%rd4+8];
	ld.local.u32 	%r5235, [%rd4+4];
	// inline asm
	prmt.b32 %r5233, %r5234, %r5235, %r45;
	// inline asm
	st.local.u32 	[%rd6], %r5233;
	ld.local.v2.u32 	{%r5336, %r5337}, [%rd4];
	// inline asm
	prmt.b32 %r5237, %r5337, %r5336, %r45;
	// inline asm
	st.local.u32 	[%rd5+12], %r5237;
	ld.local.u32 	%r5242, [%rd4];
	ld.local.u32 	%r5243, [%rd3+12];
	// inline asm
	prmt.b32 %r5241, %r5242, %r5243, %r45;
	// inline asm
	st.local.u32 	[%rd5+8], %r5241;
	ld.local.v2.u32 	{%r5338, %r5339}, [%rd3+8];
	// inline asm
	prmt.b32 %r5245, %r5339, %r5338, %r45;
	// inline asm
	st.local.u32 	[%rd5+4], %r5245;
	ld.local.u32 	%r5250, [%rd3+8];
	ld.local.u32 	%r5251, [%rd3+4];
	// inline asm
	prmt.b32 %r5249, %r5250, %r5251, %r45;
	// inline asm
	st.local.u32 	[%rd5], %r5249;
	ld.local.v2.u32 	{%r5340, %r5341}, [%rd3];
	// inline asm
	prmt.b32 %r5253, %r5341, %r5340, %r45;
	// inline asm
	st.local.u32 	[%rd4+12], %r5253;
	ld.local.u32 	%r5258, [%rd3];
	ld.local.u32 	%r5259, [%rd2+12];
	// inline asm
	prmt.b32 %r5257, %r5258, %r5259, %r45;
	// inline asm
	st.local.u32 	[%rd4+8], %r5257;
	ld.local.v2.u32 	{%r5342, %r5343}, [%rd2+8];
	// inline asm
	prmt.b32 %r5261, %r5343, %r5342, %r45;
	// inline asm
	st.local.u32 	[%rd4+4], %r5261;
	ld.local.u32 	%r5266, [%rd2+8];
	ld.local.u32 	%r5267, [%rd2+4];
	// inline asm
	prmt.b32 %r5265, %r5266, %r5267, %r45;
	// inline asm
	st.local.u32 	[%rd4], %r5265;
	ld.local.v2.u32 	{%r5344, %r5345}, [%rd2];
	// inline asm
	prmt.b32 %r5269, %r5345, %r5344, %r45;
	// inline asm
	st.local.u32 	[%rd3+12], %r5269;
	ld.local.u32 	%r5274, [%rd2];
	ld.local.u32 	%r5275, [%rd1+12];
	// inline asm
	prmt.b32 %r5273, %r5274, %r5275, %r45;
	// inline asm
	st.local.u32 	[%rd3+8], %r5273;
	ld.local.v2.u32 	{%r5346, %r5347}, [%rd1+8];
	// inline asm
	prmt.b32 %r5277, %r5347, %r5346, %r45;
	// inline asm
	st.local.u32 	[%rd3+4], %r5277;
	ld.local.u32 	%r5282, [%rd1+8];
	ld.local.u32 	%r5283, [%rd1+4];
	// inline asm
	prmt.b32 %r5281, %r5282, %r5283, %r45;
	// inline asm
	st.local.u32 	[%rd3], %r5281;
	ld.local.v2.u32 	{%r5348, %r5349}, [%rd1];
	// inline asm
	prmt.b32 %r5285, %r5349, %r5348, %r45;
	// inline asm
	st.local.u32 	[%rd2+12], %r5285;
	ld.local.u32 	%r5290, [%rd1];
	// inline asm
	prmt.b32 %r5289, %r5290, %r7412, %r45;
	// inline asm
	st.local.u32 	[%rd2+8], %r5289;
	st.local.v2.u32 	[%rd2], {%r7412, %r7412};
	st.local.u32 	[%rd1+12], %r7412;
	st.local.u32 	[%rd1+8], %r7412;
	mov.u64 	%rd290, 0;
	st.local.u32 	[%rd1+4], %rd290;
	st.local.u32 	[%rd1], %rd290;
	mov.u32 	%r7413, %r7412;
	mov.u32 	%r7418, %r7412;
	bra.uni 	BB6_86;

BB6_54:
	setp.eq.s32	%p22, %r754, 22;
	@%p22 bra 	BB6_76;
	bra.uni 	BB6_55;

BB6_76:
	mov.u32 	%r7412, 0;
	// inline asm
	prmt.b32 %r7435, %r7412, %r44, %r45;
	// inline asm
	ld.local.u32 	%r2278, [%rd55];
	ld.local.u32 	%r2279, [%rd8+8];
	// inline asm
	prmt.b32 %r7436, %r2278, %r2279, %r45;
	// inline asm
	ld.local.u32 	%r2282, [%rd8+8];
	ld.local.u32 	%r2283, [%rd8+4];
	// inline asm
	prmt.b32 %r7437, %r2282, %r2283, %r45;
	// inline asm
	ld.local.v2.u32 	{%r2416, %r2417}, [%rd8];
	// inline asm
	prmt.b32 %r7430, %r2417, %r2416, %r45;
	// inline asm
	ld.local.u32 	%r2290, [%rd8];
	ld.local.u32 	%r2291, [%rd7+12];
	// inline asm
	prmt.b32 %r7431, %r2290, %r2291, %r45;
	// inline asm
	ld.local.v2.u32 	{%r2418, %r2419}, [%rd7+8];
	// inline asm
	prmt.b32 %r7432, %r2419, %r2418, %r45;
	// inline asm
	ld.local.u32 	%r2298, [%rd7+8];
	ld.local.u32 	%r2299, [%rd7+4];
	// inline asm
	prmt.b32 %r7433, %r2298, %r2299, %r45;
	// inline asm
	ld.local.v2.u32 	{%r2420, %r2421}, [%rd7];
	// inline asm
	prmt.b32 %r7426, %r2421, %r2420, %r45;
	// inline asm
	ld.local.u32 	%r2306, [%rd7];
	ld.local.u32 	%r2307, [%rd6+12];
	// inline asm
	prmt.b32 %r7427, %r2306, %r2307, %r45;
	// inline asm
	ld.local.v2.u32 	{%r2422, %r2423}, [%rd6+8];
	// inline asm
	prmt.b32 %r7428, %r2423, %r2422, %r45;
	// inline asm
	ld.local.u32 	%r2314, [%rd6+8];
	ld.local.u32 	%r2315, [%rd6+4];
	// inline asm
	prmt.b32 %r7429, %r2314, %r2315, %r45;
	// inline asm
	ld.local.v2.u32 	{%r2424, %r2425}, [%rd6];
	// inline asm
	prmt.b32 %r7422, %r2425, %r2424, %r45;
	// inline asm
	ld.local.u32 	%r2322, [%rd6];
	ld.local.u32 	%r2323, [%rd5+12];
	// inline asm
	prmt.b32 %r7423, %r2322, %r2323, %r45;
	// inline asm
	ld.local.v2.u32 	{%r2426, %r2427}, [%rd5+8];
	// inline asm
	prmt.b32 %r7424, %r2427, %r2426, %r45;
	// inline asm
	ld.local.u32 	%r2330, [%rd5+8];
	ld.local.u32 	%r2331, [%rd5+4];
	// inline asm
	prmt.b32 %r7425, %r2330, %r2331, %r45;
	// inline asm
	ld.local.v2.u32 	{%r2428, %r2429}, [%rd5];
	// inline asm
	prmt.b32 %r7418, %r2429, %r2428, %r45;
	// inline asm
	ld.local.u32 	%r2338, [%rd5];
	ld.local.u32 	%r2339, [%rd4+12];
	// inline asm
	prmt.b32 %r7419, %r2338, %r2339, %r45;
	// inline asm
	ld.local.v2.u32 	{%r2430, %r2431}, [%rd4+8];
	// inline asm
	prmt.b32 %r7420, %r2431, %r2430, %r45;
	// inline asm
	ld.local.u32 	%r2346, [%rd4+8];
	ld.local.u32 	%r2347, [%rd4+4];
	// inline asm
	prmt.b32 %r7421, %r2346, %r2347, %r45;
	// inline asm
	ld.local.v2.u32 	{%r2432, %r2433}, [%rd4];
	// inline asm
	prmt.b32 %r7414, %r2433, %r2432, %r45;
	// inline asm
	ld.local.u32 	%r2354, [%rd4];
	ld.local.u32 	%r2355, [%rd3+12];
	// inline asm
	prmt.b32 %r7415, %r2354, %r2355, %r45;
	// inline asm
	ld.local.v2.u32 	{%r2434, %r2435}, [%rd3+8];
	// inline asm
	prmt.b32 %r7416, %r2435, %r2434, %r45;
	// inline asm
	ld.local.u32 	%r2362, [%rd3+8];
	ld.local.u32 	%r2363, [%rd3+4];
	// inline asm
	prmt.b32 %r7417, %r2362, %r2363, %r45;
	// inline asm
	ld.local.v2.u32 	{%r2436, %r2437}, [%rd3];
	// inline asm
	prmt.b32 %r2365, %r2437, %r2436, %r45;
	// inline asm
	st.local.u32 	[%rd55], %r2365;
	ld.local.u32 	%r2370, [%rd3];
	ld.local.u32 	%r2371, [%rd2+12];
	// inline asm
	prmt.b32 %r2369, %r2370, %r2371, %r45;
	// inline asm
	st.local.u32 	[%rd8+8], %r2369;
	ld.local.v2.u32 	{%r2438, %r2439}, [%rd2+8];
	// inline asm
	prmt.b32 %r2373, %r2439, %r2438, %r45;
	// inline asm
	st.local.u32 	[%rd8+4], %r2373;
	ld.local.u32 	%r2378, [%rd2+8];
	ld.local.u32 	%r2379, [%rd2+4];
	// inline asm
	prmt.b32 %r2377, %r2378, %r2379, %r45;
	// inline asm
	st.local.u32 	[%rd8], %r2377;
	ld.local.v2.u32 	{%r2440, %r2441}, [%rd2];
	// inline asm
	prmt.b32 %r2381, %r2441, %r2440, %r45;
	// inline asm
	st.local.u32 	[%rd7+12], %r2381;
	ld.local.u32 	%r2386, [%rd2];
	ld.local.u32 	%r2387, [%rd1+12];
	// inline asm
	prmt.b32 %r2385, %r2386, %r2387, %r45;
	// inline asm
	st.local.u32 	[%rd7+8], %r2385;
	ld.local.v2.u32 	{%r2442, %r2443}, [%rd1+8];
	// inline asm
	prmt.b32 %r2389, %r2443, %r2442, %r45;
	// inline asm
	st.local.u32 	[%rd7+4], %r2389;
	ld.local.u32 	%r2394, [%rd1+8];
	ld.local.u32 	%r2395, [%rd1+4];
	// inline asm
	prmt.b32 %r2393, %r2394, %r2395, %r45;
	// inline asm
	st.local.u32 	[%rd7], %r2393;
	ld.local.v2.u32 	{%r2444, %r2445}, [%rd1];
	// inline asm
	prmt.b32 %r2397, %r2445, %r2444, %r45;
	// inline asm
	st.local.u32 	[%rd6+12], %r2397;
	ld.local.u32 	%r2402, [%rd1];
	// inline asm
	prmt.b32 %r2401, %r2402, %r7412, %r45;
	// inline asm
	st.local.u32 	[%rd6+8], %r2401;
	st.local.v2.u32 	[%rd6], {%r7412, %r7412};
	st.local.u32 	[%rd5+12], %r7412;
	st.local.u32 	[%rd5+8], %r7412;
	st.local.u32 	[%rd5+4], %r7412;
	st.local.u32 	[%rd5], %r7412;
	st.local.u32 	[%rd4+12], %r7412;
	st.local.u32 	[%rd4+8], %r7412;
	st.local.u32 	[%rd4+4], %r7412;
	st.local.u32 	[%rd4], %r7412;
	st.local.u32 	[%rd3+12], %r7412;
	st.local.u32 	[%rd3+8], %r7412;
	st.local.u32 	[%rd3+4], %r7412;
	st.local.u32 	[%rd3], %r7412;
	st.local.u32 	[%rd2+12], %r7412;
	st.local.u32 	[%rd2+8], %r7412;
	st.local.u32 	[%rd2+4], %r7412;
	st.local.u32 	[%rd2], %r7412;
	st.local.u32 	[%rd1+12], %r7412;
	st.local.u32 	[%rd1+8], %r7412;
	mov.u64 	%rd274, 0;
	st.local.u32 	[%rd1+4], %rd274;
	st.local.u32 	[%rd1], %rd274;
	mov.u32 	%r7413, %r7412;
	mov.u32 	%r7434, %r7412;
	bra.uni 	BB6_90;

BB6_38:
	setp.eq.s32	%p34, %r754, 14;
	@%p34 bra 	BB6_80;
	bra.uni 	BB6_39;

BB6_80:
	mov.u32 	%r7412, 0;
	// inline asm
	prmt.b32 %r7427, %r7412, %r44, %r45;
	// inline asm
	ld.local.u32 	%r3690, [%rd55];
	ld.local.u32 	%r3691, [%rd8+8];
	// inline asm
	prmt.b32 %r7428, %r3690, %r3691, %r45;
	// inline asm
	ld.local.u32 	%r3694, [%rd8+8];
	ld.local.u32 	%r3695, [%rd8+4];
	// inline asm
	prmt.b32 %r7429, %r3694, %r3695, %r45;
	// inline asm
	ld.local.v2.u32 	{%r3836, %r3837}, [%rd8];
	// inline asm
	prmt.b32 %r7422, %r3837, %r3836, %r45;
	// inline asm
	ld.local.u32 	%r3702, [%rd8];
	ld.local.u32 	%r3703, [%rd7+12];
	// inline asm
	prmt.b32 %r7423, %r3702, %r3703, %r45;
	// inline asm
	ld.local.v2.u32 	{%r3838, %r3839}, [%rd7+8];
	// inline asm
	prmt.b32 %r7424, %r3839, %r3838, %r45;
	// inline asm
	ld.local.u32 	%r3710, [%rd7+8];
	ld.local.u32 	%r3711, [%rd7+4];
	// inline asm
	prmt.b32 %r7425, %r3710, %r3711, %r45;
	// inline asm
	ld.local.v2.u32 	{%r3840, %r3841}, [%rd7];
	// inline asm
	prmt.b32 %r7418, %r3841, %r3840, %r45;
	// inline asm
	ld.local.u32 	%r3718, [%rd7];
	ld.local.u32 	%r3719, [%rd6+12];
	// inline asm
	prmt.b32 %r7419, %r3718, %r3719, %r45;
	// inline asm
	ld.local.v2.u32 	{%r3842, %r3843}, [%rd6+8];
	// inline asm
	prmt.b32 %r7420, %r3843, %r3842, %r45;
	// inline asm
	ld.local.u32 	%r3726, [%rd6+8];
	ld.local.u32 	%r3727, [%rd6+4];
	// inline asm
	prmt.b32 %r7421, %r3726, %r3727, %r45;
	// inline asm
	ld.local.v2.u32 	{%r3844, %r3845}, [%rd6];
	// inline asm
	prmt.b32 %r7414, %r3845, %r3844, %r45;
	// inline asm
	ld.local.u32 	%r3734, [%rd6];
	ld.local.u32 	%r3735, [%rd5+12];
	// inline asm
	prmt.b32 %r7415, %r3734, %r3735, %r45;
	// inline asm
	ld.local.v2.u32 	{%r3846, %r3847}, [%rd5+8];
	// inline asm
	prmt.b32 %r7416, %r3847, %r3846, %r45;
	// inline asm
	ld.local.u32 	%r3742, [%rd5+8];
	ld.local.u32 	%r3743, [%rd5+4];
	// inline asm
	prmt.b32 %r7417, %r3742, %r3743, %r45;
	// inline asm
	ld.local.v2.u32 	{%r3848, %r3849}, [%rd5];
	// inline asm
	prmt.b32 %r3745, %r3849, %r3848, %r45;
	// inline asm
	st.local.u32 	[%rd55], %r3745;
	ld.local.u32 	%r3750, [%rd5];
	ld.local.u32 	%r3751, [%rd4+12];
	// inline asm
	prmt.b32 %r3749, %r3750, %r3751, %r45;
	// inline asm
	st.local.u32 	[%rd8+8], %r3749;
	ld.local.v2.u32 	{%r3850, %r3851}, [%rd4+8];
	// inline asm
	prmt.b32 %r3753, %r3851, %r3850, %r45;
	// inline asm
	st.local.u32 	[%rd8+4], %r3753;
	ld.local.u32 	%r3758, [%rd4+8];
	ld.local.u32 	%r3759, [%rd4+4];
	// inline asm
	prmt.b32 %r3757, %r3758, %r3759, %r45;
	// inline asm
	st.local.u32 	[%rd8], %r3757;
	ld.local.v2.u32 	{%r3852, %r3853}, [%rd4];
	// inline asm
	prmt.b32 %r3761, %r3853, %r3852, %r45;
	// inline asm
	st.local.u32 	[%rd7+12], %r3761;
	ld.local.u32 	%r3766, [%rd4];
	ld.local.u32 	%r3767, [%rd3+12];
	// inline asm
	prmt.b32 %r3765, %r3766, %r3767, %r45;
	// inline asm
	st.local.u32 	[%rd7+8], %r3765;
	ld.local.v2.u32 	{%r3854, %r3855}, [%rd3+8];
	// inline asm
	prmt.b32 %r3769, %r3855, %r3854, %r45;
	// inline asm
	st.local.u32 	[%rd7+4], %r3769;
	ld.local.u32 	%r3774, [%rd3+8];
	ld.local.u32 	%r3775, [%rd3+4];
	// inline asm
	prmt.b32 %r3773, %r3774, %r3775, %r45;
	// inline asm
	st.local.u32 	[%rd7], %r3773;
	ld.local.v2.u32 	{%r3856, %r3857}, [%rd3];
	// inline asm
	prmt.b32 %r3777, %r3857, %r3856, %r45;
	// inline asm
	st.local.u32 	[%rd6+12], %r3777;
	ld.local.u32 	%r3782, [%rd3];
	ld.local.u32 	%r3783, [%rd2+12];
	// inline asm
	prmt.b32 %r3781, %r3782, %r3783, %r45;
	// inline asm
	st.local.u32 	[%rd6+8], %r3781;
	ld.local.v2.u32 	{%r3858, %r3859}, [%rd2+8];
	// inline asm
	prmt.b32 %r3785, %r3859, %r3858, %r45;
	// inline asm
	st.local.u32 	[%rd6+4], %r3785;
	ld.local.u32 	%r3790, [%rd2+8];
	ld.local.u32 	%r3791, [%rd2+4];
	// inline asm
	prmt.b32 %r3789, %r3790, %r3791, %r45;
	// inline asm
	st.local.u32 	[%rd6], %r3789;
	ld.local.v2.u32 	{%r3860, %r3861}, [%rd2];
	// inline asm
	prmt.b32 %r3793, %r3861, %r3860, %r45;
	// inline asm
	st.local.u32 	[%rd5+12], %r3793;
	ld.local.u32 	%r3798, [%rd2];
	ld.local.u32 	%r3799, [%rd1+12];
	// inline asm
	prmt.b32 %r3797, %r3798, %r3799, %r45;
	// inline asm
	st.local.u32 	[%rd5+8], %r3797;
	ld.local.v2.u32 	{%r3862, %r3863}, [%rd1+8];
	// inline asm
	prmt.b32 %r3801, %r3863, %r3862, %r45;
	// inline asm
	st.local.u32 	[%rd5+4], %r3801;
	ld.local.u32 	%r3806, [%rd1+8];
	ld.local.u32 	%r3807, [%rd1+4];
	// inline asm
	prmt.b32 %r3805, %r3806, %r3807, %r45;
	// inline asm
	st.local.u32 	[%rd5], %r3805;
	ld.local.v2.u32 	{%r3864, %r3865}, [%rd1];
	// inline asm
	prmt.b32 %r3809, %r3865, %r3864, %r45;
	// inline asm
	st.local.u32 	[%rd4+12], %r3809;
	ld.local.u32 	%r3814, [%rd1];
	// inline asm
	prmt.b32 %r3813, %r3814, %r7412, %r45;
	// inline asm
	st.local.u32 	[%rd4+8], %r3813;
	st.local.v2.u32 	[%rd4], {%r7412, %r7412};
	st.local.u32 	[%rd3+12], %r7412;
	st.local.u32 	[%rd3+8], %r7412;
	st.local.u32 	[%rd3+4], %r7412;
	st.local.u32 	[%rd3], %r7412;
	st.local.u32 	[%rd2+12], %r7412;
	st.local.u32 	[%rd2+8], %r7412;
	st.local.u32 	[%rd2+4], %r7412;
	st.local.u32 	[%rd2], %r7412;
	st.local.u32 	[%rd1+12], %r7412;
	st.local.u32 	[%rd1+8], %r7412;
	mov.u64 	%rd282, 0;
	st.local.u32 	[%rd1+4], %rd282;
	st.local.u32 	[%rd1], %rd282;
	mov.u32 	%r7413, %r7412;
	mov.u32 	%r7426, %r7412;
	bra.uni 	BB6_88;

BB6_69:
	setp.eq.s32	%p11, %r754, 30;
	@%p11 bra 	BB6_72;
	bra.uni 	BB6_70;

BB6_72:
	mov.u32 	%r7412, 0;
	// inline asm
	prmt.b32 %r7443, %r7412, %r44, %r45;
	// inline asm
	ld.local.u32 	%r930, [%rd55];
	ld.local.u32 	%r931, [%rd8+8];
	// inline asm
	prmt.b32 %r7444, %r930, %r931, %r45;
	// inline asm
	ld.local.u32 	%r934, [%rd8+8];
	ld.local.u32 	%r935, [%rd8+4];
	// inline asm
	prmt.b32 %r7445, %r934, %r935, %r45;
	// inline asm
	ld.local.v2.u32 	{%r1060, %r1061}, [%rd8];
	// inline asm
	prmt.b32 %r7438, %r1061, %r1060, %r45;
	// inline asm
	ld.local.u32 	%r942, [%rd8];
	ld.local.u32 	%r943, [%rd7+12];
	// inline asm
	prmt.b32 %r7439, %r942, %r943, %r45;
	// inline asm
	ld.local.v2.u32 	{%r1062, %r1063}, [%rd7+8];
	// inline asm
	prmt.b32 %r7440, %r1063, %r1062, %r45;
	// inline asm
	ld.local.u32 	%r950, [%rd7+8];
	ld.local.u32 	%r951, [%rd7+4];
	// inline asm
	prmt.b32 %r7441, %r950, %r951, %r45;
	// inline asm
	ld.local.v2.u32 	{%r1064, %r1065}, [%rd7];
	// inline asm
	prmt.b32 %r7434, %r1065, %r1064, %r45;
	// inline asm
	ld.local.u32 	%r958, [%rd7];
	ld.local.u32 	%r959, [%rd6+12];
	// inline asm
	prmt.b32 %r7435, %r958, %r959, %r45;
	// inline asm
	ld.local.v2.u32 	{%r1066, %r1067}, [%rd6+8];
	// inline asm
	prmt.b32 %r7436, %r1067, %r1066, %r45;
	// inline asm
	ld.local.u32 	%r966, [%rd6+8];
	ld.local.u32 	%r967, [%rd6+4];
	// inline asm
	prmt.b32 %r7437, %r966, %r967, %r45;
	// inline asm
	ld.local.v2.u32 	{%r1068, %r1069}, [%rd6];
	// inline asm
	prmt.b32 %r7430, %r1069, %r1068, %r45;
	// inline asm
	ld.local.u32 	%r974, [%rd6];
	ld.local.u32 	%r975, [%rd5+12];
	// inline asm
	prmt.b32 %r7431, %r974, %r975, %r45;
	// inline asm
	ld.local.v2.u32 	{%r1070, %r1071}, [%rd5+8];
	// inline asm
	prmt.b32 %r7432, %r1071, %r1070, %r45;
	// inline asm
	ld.local.u32 	%r982, [%rd5+8];
	ld.local.u32 	%r983, [%rd5+4];
	// inline asm
	prmt.b32 %r7433, %r982, %r983, %r45;
	// inline asm
	ld.local.v2.u32 	{%r1072, %r1073}, [%rd5];
	// inline asm
	prmt.b32 %r7426, %r1073, %r1072, %r45;
	// inline asm
	ld.local.u32 	%r990, [%rd5];
	ld.local.u32 	%r991, [%rd4+12];
	// inline asm
	prmt.b32 %r7427, %r990, %r991, %r45;
	// inline asm
	ld.local.v2.u32 	{%r1074, %r1075}, [%rd4+8];
	// inline asm
	prmt.b32 %r7428, %r1075, %r1074, %r45;
	// inline asm
	ld.local.u32 	%r998, [%rd4+8];
	ld.local.u32 	%r999, [%rd4+4];
	// inline asm
	prmt.b32 %r7429, %r998, %r999, %r45;
	// inline asm
	ld.local.v2.u32 	{%r1076, %r1077}, [%rd4];
	// inline asm
	prmt.b32 %r7422, %r1077, %r1076, %r45;
	// inline asm
	ld.local.u32 	%r1006, [%rd4];
	ld.local.u32 	%r1007, [%rd3+12];
	// inline asm
	prmt.b32 %r7423, %r1006, %r1007, %r45;
	// inline asm
	ld.local.v2.u32 	{%r1078, %r1079}, [%rd3+8];
	// inline asm
	prmt.b32 %r7424, %r1079, %r1078, %r45;
	// inline asm
	ld.local.u32 	%r1014, [%rd3+8];
	ld.local.u32 	%r1015, [%rd3+4];
	// inline asm
	prmt.b32 %r7425, %r1014, %r1015, %r45;
	// inline asm
	ld.local.v2.u32 	{%r1080, %r1081}, [%rd3];
	// inline asm
	prmt.b32 %r7418, %r1081, %r1080, %r45;
	// inline asm
	ld.local.u32 	%r1022, [%rd3];
	ld.local.u32 	%r1023, [%rd2+12];
	// inline asm
	prmt.b32 %r7419, %r1022, %r1023, %r45;
	// inline asm
	ld.local.v2.u32 	{%r1082, %r1083}, [%rd2+8];
	// inline asm
	prmt.b32 %r7420, %r1083, %r1082, %r45;
	// inline asm
	ld.local.u32 	%r1030, [%rd2+8];
	ld.local.u32 	%r1031, [%rd2+4];
	// inline asm
	prmt.b32 %r7421, %r1030, %r1031, %r45;
	// inline asm
	ld.local.v2.u32 	{%r1084, %r1085}, [%rd2];
	// inline asm
	prmt.b32 %r7414, %r1085, %r1084, %r45;
	// inline asm
	ld.local.u32 	%r1038, [%rd2];
	ld.local.u32 	%r1039, [%rd1+12];
	// inline asm
	prmt.b32 %r7415, %r1038, %r1039, %r45;
	// inline asm
	ld.local.v2.u32 	{%r1086, %r1087}, [%rd1+8];
	// inline asm
	prmt.b32 %r7416, %r1087, %r1086, %r45;
	// inline asm
	ld.local.u32 	%r1046, [%rd1+8];
	ld.local.u32 	%r1047, [%rd1+4];
	// inline asm
	prmt.b32 %r7417, %r1046, %r1047, %r45;
	// inline asm
	ld.local.v2.u32 	{%r1088, %r1089}, [%rd1];
	// inline asm
	prmt.b32 %r1049, %r1089, %r1088, %r45;
	// inline asm
	st.local.u32 	[%rd55], %r1049;
	ld.local.u32 	%r1054, [%rd1];
	// inline asm
	prmt.b32 %r1053, %r1054, %r7412, %r45;
	// inline asm
	st.local.u32 	[%rd8+8], %r1053;
	st.local.v2.u32 	[%rd8], {%r7412, %r7412};
	st.local.u32 	[%rd7+12], %r7412;
	st.local.u32 	[%rd7+8], %r7412;
	st.local.u32 	[%rd7+4], %r7412;
	st.local.u32 	[%rd7], %r7412;
	st.local.u32 	[%rd6+12], %r7412;
	st.local.u32 	[%rd6+8], %r7412;
	st.local.u32 	[%rd6+4], %r7412;
	st.local.u32 	[%rd6], %r7412;
	st.local.u32 	[%rd5+12], %r7412;
	st.local.u32 	[%rd5+8], %r7412;
	st.local.u32 	[%rd5+4], %r7412;
	st.local.u32 	[%rd5], %r7412;
	st.local.u32 	[%rd4+12], %r7412;
	st.local.u32 	[%rd4+8], %r7412;
	st.local.u32 	[%rd4+4], %r7412;
	st.local.u32 	[%rd4], %r7412;
	st.local.u32 	[%rd3+12], %r7412;
	st.local.u32 	[%rd3+8], %r7412;
	st.local.u32 	[%rd3+4], %r7412;
	st.local.u32 	[%rd3], %r7412;
	st.local.u32 	[%rd2+12], %r7412;
	st.local.u32 	[%rd2+8], %r7412;
	st.local.u32 	[%rd2+4], %r7412;
	st.local.u32 	[%rd2], %r7412;
	st.local.u32 	[%rd1+12], %r7412;
	st.local.u32 	[%rd1+8], %r7412;
	mov.u64 	%rd266, 0;
	st.local.u32 	[%rd1+4], %rd266;
	st.local.u32 	[%rd1], %rd266;
	mov.u32 	%r7413, %r7412;
	mov.u32 	%r7442, %r7412;
	bra.uni 	BB6_94;

BB6_13:
	setp.eq.s32	%p53, %r754, 1;
	mov.u32 	%r7415, %r7414;
	mov.u32 	%r7416, %r7414;
	mov.u32 	%r7417, %r7414;
	mov.u32 	%r7418, %r7414;
	mov.u32 	%r7419, %r7414;
	mov.u32 	%r7420, %r7414;
	mov.u32 	%r7421, %r7414;
	mov.u32 	%r7422, %r7414;
	mov.u32 	%r7423, %r7414;
	mov.u32 	%r7424, %r7414;
	mov.u32 	%r7425, %r7414;
	mov.u32 	%r7426, %r7414;
	mov.u32 	%r7427, %r7414;
	mov.u32 	%r7428, %r7414;
	mov.u32 	%r7429, %r7414;
	mov.u32 	%r7430, %r7414;
	mov.u32 	%r7431, %r7414;
	mov.u32 	%r7432, %r7414;
	mov.u32 	%r7433, %r7414;
	mov.u32 	%r7434, %r7414;
	mov.u32 	%r7435, %r7414;
	mov.u32 	%r7436, %r7414;
	mov.u32 	%r7437, %r7414;
	mov.u32 	%r7438, %r7414;
	mov.u32 	%r7439, %r7414;
	mov.u32 	%r7440, %r7414;
	mov.u32 	%r7441, %r7414;
	mov.u32 	%r7442, %r7414;
	mov.u32 	%r7443, %r7414;
	mov.u32 	%r7444, %r7414;
	mov.u32 	%r7445, %r7414;
	@%p53 bra 	BB6_14;
	bra.uni 	BB6_94;

BB6_14:
	mov.u32 	%r7413, 0;
	// inline asm
	prmt.b32 %r7416, %r7413, %r44, %r45;
	// inline asm
	ld.local.u32 	%r6121, [%rd55];
	ld.local.u32 	%r6122, [%rd8+8];
	// inline asm
	prmt.b32 %r7417, %r6121, %r6122, %r45;
	// inline asm
	ld.local.u32 	%r6125, [%rd8+8];
	ld.local.u32 	%r6126, [%rd8+4];
	// inline asm
	prmt.b32 %r6124, %r6125, %r6126, %r45;
	// inline asm
	st.local.u32 	[%rd55], %r6124;
	ld.local.v2.u32 	{%r6279, %r6280}, [%rd8];
	// inline asm
	prmt.b32 %r6128, %r6280, %r6279, %r45;
	// inline asm
	st.local.u32 	[%rd8+8], %r6128;
	ld.local.u32 	%r6133, [%rd8];
	ld.local.u32 	%r6134, [%rd7+12];
	// inline asm
	prmt.b32 %r6132, %r6133, %r6134, %r45;
	// inline asm
	st.local.u32 	[%rd8+4], %r6132;
	ld.local.v2.u32 	{%r6281, %r6282}, [%rd7+8];
	// inline asm
	prmt.b32 %r6136, %r6282, %r6281, %r45;
	// inline asm
	st.local.u32 	[%rd8], %r6136;
	ld.local.u32 	%r6141, [%rd7+8];
	ld.local.u32 	%r6142, [%rd7+4];
	// inline asm
	prmt.b32 %r6140, %r6141, %r6142, %r45;
	// inline asm
	st.local.u32 	[%rd7+12], %r6140;
	ld.local.v2.u32 	{%r6283, %r6284}, [%rd7];
	// inline asm
	prmt.b32 %r6144, %r6284, %r6283, %r45;
	// inline asm
	st.local.u32 	[%rd7+8], %r6144;
	ld.local.u32 	%r6149, [%rd7];
	ld.local.u32 	%r6150, [%rd6+12];
	// inline asm
	prmt.b32 %r6148, %r6149, %r6150, %r45;
	// inline asm
	st.local.u32 	[%rd7+4], %r6148;
	ld.local.v2.u32 	{%r6285, %r6286}, [%rd6+8];
	// inline asm
	prmt.b32 %r6152, %r6286, %r6285, %r45;
	// inline asm
	st.local.u32 	[%rd7], %r6152;
	ld.local.u32 	%r6157, [%rd6+8];
	ld.local.u32 	%r6158, [%rd6+4];
	// inline asm
	prmt.b32 %r6156, %r6157, %r6158, %r45;
	// inline asm
	st.local.u32 	[%rd6+12], %r6156;
	ld.local.v2.u32 	{%r6287, %r6288}, [%rd6];
	// inline asm
	prmt.b32 %r6160, %r6288, %r6287, %r45;
	// inline asm
	st.local.u32 	[%rd6+8], %r6160;
	ld.local.u32 	%r6165, [%rd6];
	ld.local.u32 	%r6166, [%rd5+12];
	// inline asm
	prmt.b32 %r6164, %r6165, %r6166, %r45;
	// inline asm
	st.local.u32 	[%rd6+4], %r6164;
	ld.local.v2.u32 	{%r6289, %r6290}, [%rd5+8];
	// inline asm
	prmt.b32 %r6168, %r6290, %r6289, %r45;
	// inline asm
	st.local.u32 	[%rd6], %r6168;
	ld.local.u32 	%r6173, [%rd5+8];
	ld.local.u32 	%r6174, [%rd5+4];
	// inline asm
	prmt.b32 %r6172, %r6173, %r6174, %r45;
	// inline asm
	st.local.u32 	[%rd5+12], %r6172;
	ld.local.v2.u32 	{%r6291, %r6292}, [%rd5];
	// inline asm
	prmt.b32 %r6176, %r6292, %r6291, %r45;
	// inline asm
	st.local.u32 	[%rd5+8], %r6176;
	ld.local.u32 	%r6181, [%rd5];
	ld.local.u32 	%r6182, [%rd4+12];
	// inline asm
	prmt.b32 %r6180, %r6181, %r6182, %r45;
	// inline asm
	st.local.u32 	[%rd5+4], %r6180;
	ld.local.v2.u32 	{%r6293, %r6294}, [%rd4+8];
	// inline asm
	prmt.b32 %r6184, %r6294, %r6293, %r45;
	// inline asm
	st.local.u32 	[%rd5], %r6184;
	ld.local.u32 	%r6189, [%rd4+8];
	ld.local.u32 	%r6190, [%rd4+4];
	// inline asm
	prmt.b32 %r6188, %r6189, %r6190, %r45;
	// inline asm
	st.local.u32 	[%rd4+12], %r6188;
	ld.local.v2.u32 	{%r6295, %r6296}, [%rd4];
	// inline asm
	prmt.b32 %r6192, %r6296, %r6295, %r45;
	// inline asm
	st.local.u32 	[%rd4+8], %r6192;
	ld.local.u32 	%r6197, [%rd4];
	ld.local.u32 	%r6198, [%rd3+12];
	// inline asm
	prmt.b32 %r6196, %r6197, %r6198, %r45;
	// inline asm
	st.local.u32 	[%rd4+4], %r6196;
	ld.local.v2.u32 	{%r6297, %r6298}, [%rd3+8];
	// inline asm
	prmt.b32 %r6200, %r6298, %r6297, %r45;
	// inline asm
	st.local.u32 	[%rd4], %r6200;
	ld.local.u32 	%r6205, [%rd3+8];
	ld.local.u32 	%r6206, [%rd3+4];
	// inline asm
	prmt.b32 %r6204, %r6205, %r6206, %r45;
	// inline asm
	st.local.u32 	[%rd3+12], %r6204;
	ld.local.v2.u32 	{%r6299, %r6300}, [%rd3];
	// inline asm
	prmt.b32 %r6208, %r6300, %r6299, %r45;
	// inline asm
	st.local.u32 	[%rd3+8], %r6208;
	ld.local.u32 	%r6213, [%rd3];
	ld.local.u32 	%r6214, [%rd2+12];
	// inline asm
	prmt.b32 %r6212, %r6213, %r6214, %r45;
	// inline asm
	st.local.u32 	[%rd3+4], %r6212;
	ld.local.v2.u32 	{%r6301, %r6302}, [%rd2+8];
	// inline asm
	prmt.b32 %r6216, %r6302, %r6301, %r45;
	// inline asm
	st.local.u32 	[%rd3], %r6216;
	ld.local.u32 	%r6221, [%rd2+8];
	ld.local.u32 	%r6222, [%rd2+4];
	// inline asm
	prmt.b32 %r6220, %r6221, %r6222, %r45;
	// inline asm
	st.local.u32 	[%rd2+12], %r6220;
	ld.local.v2.u32 	{%r6303, %r6304}, [%rd2];
	// inline asm
	prmt.b32 %r6224, %r6304, %r6303, %r45;
	// inline asm
	st.local.u32 	[%rd2+8], %r6224;
	ld.local.u32 	%r6229, [%rd2];
	ld.local.u32 	%r6230, [%rd1+12];
	// inline asm
	prmt.b32 %r6228, %r6229, %r6230, %r45;
	// inline asm
	st.local.u32 	[%rd2+4], %r6228;
	ld.local.v2.u32 	{%r6305, %r6306}, [%rd1+8];
	// inline asm
	prmt.b32 %r6232, %r6306, %r6305, %r45;
	// inline asm
	st.local.u32 	[%rd2], %r6232;
	ld.local.u32 	%r6237, [%rd1+8];
	ld.local.u32 	%r6238, [%rd1+4];
	// inline asm
	prmt.b32 %r6236, %r6237, %r6238, %r45;
	// inline asm
	st.local.u32 	[%rd1+12], %r6236;
	ld.local.v2.u32 	{%r6307, %r6308}, [%rd1];
	// inline asm
	prmt.b32 %r6240, %r6308, %r6307, %r45;
	// inline asm
	st.local.u32 	[%rd1+8], %r6240;
	ld.local.u32 	%r6245, [%rd1];
	// inline asm
	prmt.b32 %r7412, %r6245, %r7413, %r45;
	// inline asm
	st.local.v2.u32 	[%rd1], {%r7413, %r7412};
	mov.u32 	%r7414, %r7413;
	mov.u32 	%r7415, %r7413;
	mov.u32 	%r7418, %r7413;
	mov.u32 	%r7419, %r7413;
	mov.u32 	%r7420, %r7413;
	mov.u32 	%r7421, %r7413;
	mov.u32 	%r7422, %r7413;
	mov.u32 	%r7423, %r7413;
	mov.u32 	%r7424, %r7413;
	mov.u32 	%r7425, %r7413;
	mov.u32 	%r7426, %r7413;
	mov.u32 	%r7427, %r7413;
	mov.u32 	%r7428, %r7413;
	mov.u32 	%r7429, %r7413;
	mov.u32 	%r7430, %r7413;
	mov.u32 	%r7431, %r7413;
	mov.u32 	%r7432, %r7413;
	mov.u32 	%r7433, %r7413;
	mov.u32 	%r7434, %r7413;
	mov.u32 	%r7435, %r7413;
	mov.u32 	%r7436, %r7413;
	mov.u32 	%r7437, %r7413;
	mov.u32 	%r7438, %r7413;
	mov.u32 	%r7439, %r7413;
	mov.u32 	%r7440, %r7413;
	mov.u32 	%r7441, %r7413;
	mov.u32 	%r7442, %r7413;
	mov.u32 	%r7443, %r7413;
	mov.u32 	%r7444, %r7413;
	mov.u32 	%r7445, %r7413;
	bra.uni 	BB6_94;

BB6_45:
	setp.eq.s32	%p30, %r754, 17;
	mov.u32 	%r7415, %r7414;
	mov.u32 	%r7416, %r7414;
	mov.u32 	%r7417, %r7414;
	mov.u32 	%r7418, %r7414;
	mov.u32 	%r7419, %r7414;
	mov.u32 	%r7420, %r7414;
	mov.u32 	%r7421, %r7414;
	mov.u32 	%r7422, %r7414;
	mov.u32 	%r7423, %r7414;
	mov.u32 	%r7424, %r7414;
	mov.u32 	%r7425, %r7414;
	mov.u32 	%r7426, %r7414;
	mov.u32 	%r7427, %r7414;
	mov.u32 	%r7428, %r7414;
	mov.u32 	%r7429, %r7414;
	mov.u32 	%r7430, %r7414;
	mov.u32 	%r7431, %r7414;
	mov.u32 	%r7432, %r7414;
	mov.u32 	%r7433, %r7414;
	mov.u32 	%r7434, %r7414;
	mov.u32 	%r7435, %r7414;
	mov.u32 	%r7436, %r7414;
	mov.u32 	%r7437, %r7414;
	mov.u32 	%r7438, %r7414;
	mov.u32 	%r7439, %r7414;
	mov.u32 	%r7440, %r7414;
	mov.u32 	%r7441, %r7414;
	mov.u32 	%r7442, %r7414;
	mov.u32 	%r7443, %r7414;
	mov.u32 	%r7444, %r7414;
	mov.u32 	%r7445, %r7414;
	@%p30 bra 	BB6_46;
	bra.uni 	BB6_94;

BB6_46:
	mov.u32 	%r7412, 0;
	// inline asm
	prmt.b32 %r7432, %r7412, %r44, %r45;
	// inline asm
	ld.local.u32 	%r3153, [%rd55];
	ld.local.u32 	%r3154, [%rd8+8];
	// inline asm
	prmt.b32 %r7433, %r3153, %r3154, %r45;
	// inline asm
	ld.local.u32 	%r3157, [%rd8+8];
	ld.local.u32 	%r3158, [%rd8+4];
	// inline asm
	prmt.b32 %r7426, %r3157, %r3158, %r45;
	// inline asm
	ld.local.v2.u32 	{%r3296, %r3297}, [%rd8];
	// inline asm
	prmt.b32 %r7427, %r3297, %r3296, %r45;
	// inline asm
	ld.local.u32 	%r3165, [%rd8];
	ld.local.u32 	%r3166, [%rd7+12];
	// inline asm
	prmt.b32 %r7428, %r3165, %r3166, %r45;
	// inline asm
	ld.local.v2.u32 	{%r3298, %r3299}, [%rd7+8];
	// inline asm
	prmt.b32 %r7429, %r3299, %r3298, %r45;
	// inline asm
	ld.local.u32 	%r3173, [%rd7+8];
	ld.local.u32 	%r3174, [%rd7+4];
	// inline asm
	prmt.b32 %r7422, %r3173, %r3174, %r45;
	// inline asm
	ld.local.v2.u32 	{%r3300, %r3301}, [%rd7];
	// inline asm
	prmt.b32 %r7423, %r3301, %r3300, %r45;
	// inline asm
	ld.local.u32 	%r3181, [%rd7];
	ld.local.u32 	%r3182, [%rd6+12];
	// inline asm
	prmt.b32 %r7424, %r3181, %r3182, %r45;
	// inline asm
	ld.local.v2.u32 	{%r3302, %r3303}, [%rd6+8];
	// inline asm
	prmt.b32 %r7425, %r3303, %r3302, %r45;
	// inline asm
	ld.local.u32 	%r3189, [%rd6+8];
	ld.local.u32 	%r3190, [%rd6+4];
	// inline asm
	prmt.b32 %r7418, %r3189, %r3190, %r45;
	// inline asm
	ld.local.v2.u32 	{%r3304, %r3305}, [%rd6];
	// inline asm
	prmt.b32 %r7419, %r3305, %r3304, %r45;
	// inline asm
	ld.local.u32 	%r3197, [%rd6];
	ld.local.u32 	%r3198, [%rd5+12];
	// inline asm
	prmt.b32 %r7420, %r3197, %r3198, %r45;
	// inline asm
	ld.local.v2.u32 	{%r3306, %r3307}, [%rd5+8];
	// inline asm
	prmt.b32 %r7421, %r3307, %r3306, %r45;
	// inline asm
	ld.local.u32 	%r3205, [%rd5+8];
	ld.local.u32 	%r3206, [%rd5+4];
	// inline asm
	prmt.b32 %r7414, %r3205, %r3206, %r45;
	// inline asm
	ld.local.v2.u32 	{%r3308, %r3309}, [%rd5];
	// inline asm
	prmt.b32 %r7415, %r3309, %r3308, %r45;
	// inline asm
	ld.local.u32 	%r3213, [%rd5];
	ld.local.u32 	%r3214, [%rd4+12];
	// inline asm
	prmt.b32 %r7416, %r3213, %r3214, %r45;
	// inline asm
	ld.local.v2.u32 	{%r3310, %r3311}, [%rd4+8];
	// inline asm
	prmt.b32 %r7417, %r3311, %r3310, %r45;
	// inline asm
	ld.local.u32 	%r3221, [%rd4+8];
	ld.local.u32 	%r3222, [%rd4+4];
	// inline asm
	prmt.b32 %r3220, %r3221, %r3222, %r45;
	// inline asm
	st.local.u32 	[%rd55], %r3220;
	ld.local.v2.u32 	{%r3312, %r3313}, [%rd4];
	// inline asm
	prmt.b32 %r3224, %r3313, %r3312, %r45;
	// inline asm
	st.local.u32 	[%rd8+8], %r3224;
	ld.local.u32 	%r3229, [%rd4];
	ld.local.u32 	%r3230, [%rd3+12];
	// inline asm
	prmt.b32 %r3228, %r3229, %r3230, %r45;
	// inline asm
	st.local.u32 	[%rd8+4], %r3228;
	ld.local.v2.u32 	{%r3314, %r3315}, [%rd3+8];
	// inline asm
	prmt.b32 %r3232, %r3315, %r3314, %r45;
	// inline asm
	st.local.u32 	[%rd8], %r3232;
	ld.local.u32 	%r3237, [%rd3+8];
	ld.local.u32 	%r3238, [%rd3+4];
	// inline asm
	prmt.b32 %r3236, %r3237, %r3238, %r45;
	// inline asm
	st.local.u32 	[%rd7+12], %r3236;
	ld.local.v2.u32 	{%r3316, %r3317}, [%rd3];
	// inline asm
	prmt.b32 %r3240, %r3317, %r3316, %r45;
	// inline asm
	st.local.u32 	[%rd7+8], %r3240;
	ld.local.u32 	%r3245, [%rd3];
	ld.local.u32 	%r3246, [%rd2+12];
	// inline asm
	prmt.b32 %r3244, %r3245, %r3246, %r45;
	// inline asm
	st.local.u32 	[%rd7+4], %r3244;
	ld.local.v2.u32 	{%r3318, %r3319}, [%rd2+8];
	// inline asm
	prmt.b32 %r3248, %r3319, %r3318, %r45;
	// inline asm
	st.local.u32 	[%rd7], %r3248;
	ld.local.u32 	%r3253, [%rd2+8];
	ld.local.u32 	%r3254, [%rd2+4];
	// inline asm
	prmt.b32 %r3252, %r3253, %r3254, %r45;
	// inline asm
	st.local.u32 	[%rd6+12], %r3252;
	ld.local.v2.u32 	{%r3320, %r3321}, [%rd2];
	// inline asm
	prmt.b32 %r3256, %r3321, %r3320, %r45;
	// inline asm
	st.local.u32 	[%rd6+8], %r3256;
	ld.local.u32 	%r3261, [%rd2];
	ld.local.u32 	%r3262, [%rd1+12];
	// inline asm
	prmt.b32 %r3260, %r3261, %r3262, %r45;
	// inline asm
	st.local.u32 	[%rd6+4], %r3260;
	ld.local.v2.u32 	{%r3322, %r3323}, [%rd1+8];
	// inline asm
	prmt.b32 %r3264, %r3323, %r3322, %r45;
	// inline asm
	st.local.u32 	[%rd6], %r3264;
	ld.local.u32 	%r3269, [%rd1+8];
	ld.local.u32 	%r3270, [%rd1+4];
	// inline asm
	prmt.b32 %r3268, %r3269, %r3270, %r45;
	// inline asm
	st.local.u32 	[%rd5+12], %r3268;
	ld.local.v2.u32 	{%r3324, %r3325}, [%rd1];
	// inline asm
	prmt.b32 %r3272, %r3325, %r3324, %r45;
	// inline asm
	st.local.u32 	[%rd5+8], %r3272;
	ld.local.u32 	%r3277, [%rd1];
	// inline asm
	prmt.b32 %r3276, %r3277, %r7412, %r45;
	// inline asm
	st.local.v2.u32 	[%rd5], {%r7412, %r3276};
	st.local.v4.u32 	[%rd4], {%r7412, %r7412, %r7412, %r7412};
	st.local.v4.u32 	[%rd3], {%r7412, %r7412, %r7412, %r7412};
	st.local.v4.u32 	[%rd2], {%r7412, %r7412, %r7412, %r7412};
	st.local.v2.u32 	[%rd1+8], {%r7412, %r7412};
	mov.u64 	%rd279, 0;
	st.local.u64 	[%rd1], %rd279;
	mov.u32 	%r7413, %r7412;
	mov.u32 	%r7430, %r7412;
	mov.u32 	%r7431, %r7412;
	bra.uni 	BB6_89;

BB6_29:
	setp.eq.s32	%p42, %r754, 9;
	mov.u32 	%r7415, %r7414;
	mov.u32 	%r7416, %r7414;
	mov.u32 	%r7417, %r7414;
	mov.u32 	%r7418, %r7414;
	mov.u32 	%r7419, %r7414;
	mov.u32 	%r7420, %r7414;
	mov.u32 	%r7421, %r7414;
	mov.u32 	%r7422, %r7414;
	mov.u32 	%r7423, %r7414;
	mov.u32 	%r7424, %r7414;
	mov.u32 	%r7425, %r7414;
	mov.u32 	%r7426, %r7414;
	mov.u32 	%r7427, %r7414;
	mov.u32 	%r7428, %r7414;
	mov.u32 	%r7429, %r7414;
	mov.u32 	%r7430, %r7414;
	mov.u32 	%r7431, %r7414;
	mov.u32 	%r7432, %r7414;
	mov.u32 	%r7433, %r7414;
	mov.u32 	%r7434, %r7414;
	mov.u32 	%r7435, %r7414;
	mov.u32 	%r7436, %r7414;
	mov.u32 	%r7437, %r7414;
	mov.u32 	%r7438, %r7414;
	mov.u32 	%r7439, %r7414;
	mov.u32 	%r7440, %r7414;
	mov.u32 	%r7441, %r7414;
	mov.u32 	%r7442, %r7414;
	mov.u32 	%r7443, %r7414;
	mov.u32 	%r7444, %r7414;
	mov.u32 	%r7445, %r7414;
	@%p42 bra 	BB6_30;
	bra.uni 	BB6_94;

BB6_30:
	mov.u32 	%r7412, 0;
	// inline asm
	prmt.b32 %r7424, %r7412, %r44, %r45;
	// inline asm
	ld.local.u32 	%r4605, [%rd55];
	ld.local.u32 	%r4606, [%rd8+8];
	// inline asm
	prmt.b32 %r7425, %r4605, %r4606, %r45;
	// inline asm
	ld.local.u32 	%r4609, [%rd8+8];
	ld.local.u32 	%r4610, [%rd8+4];
	// inline asm
	prmt.b32 %r7418, %r4609, %r4610, %r45;
	// inline asm
	ld.local.v2.u32 	{%r4756, %r4757}, [%rd8];
	// inline asm
	prmt.b32 %r7419, %r4757, %r4756, %r45;
	// inline asm
	ld.local.u32 	%r4617, [%rd8];
	ld.local.u32 	%r4618, [%rd7+12];
	// inline asm
	prmt.b32 %r7420, %r4617, %r4618, %r45;
	// inline asm
	ld.local.v2.u32 	{%r4758, %r4759}, [%rd7+8];
	// inline asm
	prmt.b32 %r7421, %r4759, %r4758, %r45;
	// inline asm
	ld.local.u32 	%r4625, [%rd7+8];
	ld.local.u32 	%r4626, [%rd7+4];
	// inline asm
	prmt.b32 %r7414, %r4625, %r4626, %r45;
	// inline asm
	ld.local.v2.u32 	{%r4760, %r4761}, [%rd7];
	// inline asm
	prmt.b32 %r7415, %r4761, %r4760, %r45;
	// inline asm
	ld.local.u32 	%r4633, [%rd7];
	ld.local.u32 	%r4634, [%rd6+12];
	// inline asm
	prmt.b32 %r7416, %r4633, %r4634, %r45;
	// inline asm
	ld.local.v2.u32 	{%r4762, %r4763}, [%rd6+8];
	// inline asm
	prmt.b32 %r7417, %r4763, %r4762, %r45;
	// inline asm
	ld.local.u32 	%r4641, [%rd6+8];
	ld.local.u32 	%r4642, [%rd6+4];
	// inline asm
	prmt.b32 %r4640, %r4641, %r4642, %r45;
	// inline asm
	st.local.u32 	[%rd55], %r4640;
	ld.local.v2.u32 	{%r4764, %r4765}, [%rd6];
	// inline asm
	prmt.b32 %r4644, %r4765, %r4764, %r45;
	// inline asm
	st.local.u32 	[%rd8+8], %r4644;
	ld.local.u32 	%r4649, [%rd6];
	ld.local.u32 	%r4650, [%rd5+12];
	// inline asm
	prmt.b32 %r4648, %r4649, %r4650, %r45;
	// inline asm
	st.local.u32 	[%rd8+4], %r4648;
	ld.local.v2.u32 	{%r4766, %r4767}, [%rd5+8];
	// inline asm
	prmt.b32 %r4652, %r4767, %r4766, %r45;
	// inline asm
	st.local.u32 	[%rd8], %r4652;
	ld.local.u32 	%r4657, [%rd5+8];
	ld.local.u32 	%r4658, [%rd5+4];
	// inline asm
	prmt.b32 %r4656, %r4657, %r4658, %r45;
	// inline asm
	st.local.u32 	[%rd7+12], %r4656;
	ld.local.v2.u32 	{%r4768, %r4769}, [%rd5];
	// inline asm
	prmt.b32 %r4660, %r4769, %r4768, %r45;
	// inline asm
	st.local.u32 	[%rd7+8], %r4660;
	ld.local.u32 	%r4665, [%rd5];
	ld.local.u32 	%r4666, [%rd4+12];
	// inline asm
	prmt.b32 %r4664, %r4665, %r4666, %r45;
	// inline asm
	st.local.u32 	[%rd7+4], %r4664;
	ld.local.v2.u32 	{%r4770, %r4771}, [%rd4+8];
	// inline asm
	prmt.b32 %r4668, %r4771, %r4770, %r45;
	// inline asm
	st.local.u32 	[%rd7], %r4668;
	ld.local.u32 	%r4673, [%rd4+8];
	ld.local.u32 	%r4674, [%rd4+4];
	// inline asm
	prmt.b32 %r4672, %r4673, %r4674, %r45;
	// inline asm
	st.local.u32 	[%rd6+12], %r4672;
	ld.local.v2.u32 	{%r4772, %r4773}, [%rd4];
	// inline asm
	prmt.b32 %r4676, %r4773, %r4772, %r45;
	// inline asm
	st.local.u32 	[%rd6+8], %r4676;
	ld.local.u32 	%r4681, [%rd4];
	ld.local.u32 	%r4682, [%rd3+12];
	// inline asm
	prmt.b32 %r4680, %r4681, %r4682, %r45;
	// inline asm
	st.local.u32 	[%rd6+4], %r4680;
	ld.local.v2.u32 	{%r4774, %r4775}, [%rd3+8];
	// inline asm
	prmt.b32 %r4684, %r4775, %r4774, %r45;
	// inline asm
	st.local.u32 	[%rd6], %r4684;
	ld.local.u32 	%r4689, [%rd3+8];
	ld.local.u32 	%r4690, [%rd3+4];
	// inline asm
	prmt.b32 %r4688, %r4689, %r4690, %r45;
	// inline asm
	st.local.u32 	[%rd5+12], %r4688;
	ld.local.v2.u32 	{%r4776, %r4777}, [%rd3];
	// inline asm
	prmt.b32 %r4692, %r4777, %r4776, %r45;
	// inline asm
	st.local.u32 	[%rd5+8], %r4692;
	ld.local.u32 	%r4697, [%rd3];
	ld.local.u32 	%r4698, [%rd2+12];
	// inline asm
	prmt.b32 %r4696, %r4697, %r4698, %r45;
	// inline asm
	st.local.u32 	[%rd5+4], %r4696;
	ld.local.v2.u32 	{%r4778, %r4779}, [%rd2+8];
	// inline asm
	prmt.b32 %r4700, %r4779, %r4778, %r45;
	// inline asm
	st.local.u32 	[%rd5], %r4700;
	ld.local.u32 	%r4705, [%rd2+8];
	ld.local.u32 	%r4706, [%rd2+4];
	// inline asm
	prmt.b32 %r4704, %r4705, %r4706, %r45;
	// inline asm
	st.local.u32 	[%rd4+12], %r4704;
	ld.local.v2.u32 	{%r4780, %r4781}, [%rd2];
	// inline asm
	prmt.b32 %r4708, %r4781, %r4780, %r45;
	// inline asm
	st.local.u32 	[%rd4+8], %r4708;
	ld.local.u32 	%r4713, [%rd2];
	ld.local.u32 	%r4714, [%rd1+12];
	// inline asm
	prmt.b32 %r4712, %r4713, %r4714, %r45;
	// inline asm
	st.local.u32 	[%rd4+4], %r4712;
	ld.local.v2.u32 	{%r4782, %r4783}, [%rd1+8];
	// inline asm
	prmt.b32 %r4716, %r4783, %r4782, %r45;
	// inline asm
	st.local.u32 	[%rd4], %r4716;
	ld.local.u32 	%r4721, [%rd1+8];
	ld.local.u32 	%r4722, [%rd1+4];
	// inline asm
	prmt.b32 %r4720, %r4721, %r4722, %r45;
	// inline asm
	st.local.u32 	[%rd3+12], %r4720;
	ld.local.v2.u32 	{%r4784, %r4785}, [%rd1];
	// inline asm
	prmt.b32 %r4724, %r4785, %r4784, %r45;
	// inline asm
	st.local.u32 	[%rd3+8], %r4724;
	ld.local.u32 	%r4729, [%rd1];
	// inline asm
	prmt.b32 %r4728, %r4729, %r7412, %r45;
	// inline asm
	st.local.v2.u32 	[%rd3], {%r7412, %r4728};
	st.local.v4.u32 	[%rd2], {%r7412, %r7412, %r7412, %r7412};
	st.local.v2.u32 	[%rd1+8], {%r7412, %r7412};
	mov.u64 	%rd287, 0;
	st.local.u64 	[%rd1], %rd287;
	mov.u32 	%r7413, %r7412;
	mov.u32 	%r7422, %r7412;
	mov.u32 	%r7423, %r7412;
	bra.uni 	BB6_87;

BB6_60:
	setp.eq.s32	%p19, %r754, 25;
	mov.u32 	%r7415, %r7414;
	mov.u32 	%r7416, %r7414;
	mov.u32 	%r7417, %r7414;
	mov.u32 	%r7418, %r7414;
	mov.u32 	%r7419, %r7414;
	mov.u32 	%r7420, %r7414;
	mov.u32 	%r7421, %r7414;
	mov.u32 	%r7422, %r7414;
	mov.u32 	%r7423, %r7414;
	mov.u32 	%r7424, %r7414;
	mov.u32 	%r7425, %r7414;
	mov.u32 	%r7426, %r7414;
	mov.u32 	%r7427, %r7414;
	mov.u32 	%r7428, %r7414;
	mov.u32 	%r7429, %r7414;
	mov.u32 	%r7430, %r7414;
	mov.u32 	%r7431, %r7414;
	mov.u32 	%r7432, %r7414;
	mov.u32 	%r7433, %r7414;
	mov.u32 	%r7434, %r7414;
	mov.u32 	%r7435, %r7414;
	mov.u32 	%r7436, %r7414;
	mov.u32 	%r7437, %r7414;
	mov.u32 	%r7438, %r7414;
	mov.u32 	%r7439, %r7414;
	mov.u32 	%r7440, %r7414;
	mov.u32 	%r7441, %r7414;
	mov.u32 	%r7442, %r7414;
	mov.u32 	%r7443, %r7414;
	mov.u32 	%r7444, %r7414;
	mov.u32 	%r7445, %r7414;
	@%p19 bra 	BB6_61;
	bra.uni 	BB6_94;

BB6_61:
	mov.u32 	%r7412, 0;
	// inline asm
	prmt.b32 %r7440, %r7412, %r44, %r45;
	// inline asm
	ld.local.u32 	%r1765, [%rd55];
	ld.local.u32 	%r1766, [%rd8+8];
	// inline asm
	prmt.b32 %r7441, %r1765, %r1766, %r45;
	// inline asm
	ld.local.u32 	%r1769, [%rd8+8];
	ld.local.u32 	%r1770, [%rd8+4];
	// inline asm
	prmt.b32 %r7434, %r1769, %r1770, %r45;
	// inline asm
	ld.local.v2.u32 	{%r1900, %r1901}, [%rd8];
	// inline asm
	prmt.b32 %r7435, %r1901, %r1900, %r45;
	// inline asm
	ld.local.u32 	%r1777, [%rd8];
	ld.local.u32 	%r1778, [%rd7+12];
	// inline asm
	prmt.b32 %r7436, %r1777, %r1778, %r45;
	// inline asm
	ld.local.v2.u32 	{%r1902, %r1903}, [%rd7+8];
	// inline asm
	prmt.b32 %r7437, %r1903, %r1902, %r45;
	// inline asm
	ld.local.u32 	%r1785, [%rd7+8];
	ld.local.u32 	%r1786, [%rd7+4];
	// inline asm
	prmt.b32 %r7430, %r1785, %r1786, %r45;
	// inline asm
	ld.local.v2.u32 	{%r1904, %r1905}, [%rd7];
	// inline asm
	prmt.b32 %r7431, %r1905, %r1904, %r45;
	// inline asm
	ld.local.u32 	%r1793, [%rd7];
	ld.local.u32 	%r1794, [%rd6+12];
	// inline asm
	prmt.b32 %r7432, %r1793, %r1794, %r45;
	// inline asm
	ld.local.v2.u32 	{%r1906, %r1907}, [%rd6+8];
	// inline asm
	prmt.b32 %r7433, %r1907, %r1906, %r45;
	// inline asm
	ld.local.u32 	%r1801, [%rd6+8];
	ld.local.u32 	%r1802, [%rd6+4];
	// inline asm
	prmt.b32 %r7426, %r1801, %r1802, %r45;
	// inline asm
	ld.local.v2.u32 	{%r1908, %r1909}, [%rd6];
	// inline asm
	prmt.b32 %r7427, %r1909, %r1908, %r45;
	// inline asm
	ld.local.u32 	%r1809, [%rd6];
	ld.local.u32 	%r1810, [%rd5+12];
	// inline asm
	prmt.b32 %r7428, %r1809, %r1810, %r45;
	// inline asm
	ld.local.v2.u32 	{%r1910, %r1911}, [%rd5+8];
	// inline asm
	prmt.b32 %r7429, %r1911, %r1910, %r45;
	// inline asm
	ld.local.u32 	%r1817, [%rd5+8];
	ld.local.u32 	%r1818, [%rd5+4];
	// inline asm
	prmt.b32 %r7422, %r1817, %r1818, %r45;
	// inline asm
	ld.local.v2.u32 	{%r1912, %r1913}, [%rd5];
	// inline asm
	prmt.b32 %r7423, %r1913, %r1912, %r45;
	// inline asm
	ld.local.u32 	%r1825, [%rd5];
	ld.local.u32 	%r1826, [%rd4+12];
	// inline asm
	prmt.b32 %r7424, %r1825, %r1826, %r45;
	// inline asm
	ld.local.v2.u32 	{%r1914, %r1915}, [%rd4+8];
	// inline asm
	prmt.b32 %r7425, %r1915, %r1914, %r45;
	// inline asm
	ld.local.u32 	%r1833, [%rd4+8];
	ld.local.u32 	%r1834, [%rd4+4];
	// inline asm
	prmt.b32 %r7418, %r1833, %r1834, %r45;
	// inline asm
	ld.local.v2.u32 	{%r1916, %r1917}, [%rd4];
	// inline asm
	prmt.b32 %r7419, %r1917, %r1916, %r45;
	// inline asm
	ld.local.u32 	%r1841, [%rd4];
	ld.local.u32 	%r1842, [%rd3+12];
	// inline asm
	prmt.b32 %r7420, %r1841, %r1842, %r45;
	// inline asm
	ld.local.v2.u32 	{%r1918, %r1919}, [%rd3+8];
	// inline asm
	prmt.b32 %r7421, %r1919, %r1918, %r45;
	// inline asm
	ld.local.u32 	%r1849, [%rd3+8];
	ld.local.u32 	%r1850, [%rd3+4];
	// inline asm
	prmt.b32 %r7414, %r1849, %r1850, %r45;
	// inline asm
	ld.local.v2.u32 	{%r1920, %r1921}, [%rd3];
	// inline asm
	prmt.b32 %r7415, %r1921, %r1920, %r45;
	// inline asm
	ld.local.u32 	%r1857, [%rd3];
	ld.local.u32 	%r1858, [%rd2+12];
	// inline asm
	prmt.b32 %r7416, %r1857, %r1858, %r45;
	// inline asm
	ld.local.v2.u32 	{%r1922, %r1923}, [%rd2+8];
	// inline asm
	prmt.b32 %r7417, %r1923, %r1922, %r45;
	// inline asm
	ld.local.u32 	%r1865, [%rd2+8];
	ld.local.u32 	%r1866, [%rd2+4];
	// inline asm
	prmt.b32 %r1864, %r1865, %r1866, %r45;
	// inline asm
	st.local.u32 	[%rd55], %r1864;
	ld.local.v2.u32 	{%r1924, %r1925}, [%rd2];
	// inline asm
	prmt.b32 %r1868, %r1925, %r1924, %r45;
	// inline asm
	st.local.u32 	[%rd8+8], %r1868;
	ld.local.u32 	%r1873, [%rd2];
	ld.local.u32 	%r1874, [%rd1+12];
	// inline asm
	prmt.b32 %r1872, %r1873, %r1874, %r45;
	// inline asm
	st.local.u32 	[%rd8+4], %r1872;
	ld.local.v2.u32 	{%r1926, %r1927}, [%rd1+8];
	// inline asm
	prmt.b32 %r1876, %r1927, %r1926, %r45;
	// inline asm
	st.local.u32 	[%rd8], %r1876;
	ld.local.u32 	%r1881, [%rd1+8];
	ld.local.u32 	%r1882, [%rd1+4];
	// inline asm
	prmt.b32 %r1880, %r1881, %r1882, %r45;
	// inline asm
	st.local.u32 	[%rd7+12], %r1880;
	ld.local.v2.u32 	{%r1928, %r1929}, [%rd1];
	// inline asm
	prmt.b32 %r1884, %r1929, %r1928, %r45;
	// inline asm
	st.local.u32 	[%rd7+8], %r1884;
	ld.local.u32 	%r1889, [%rd1];
	// inline asm
	prmt.b32 %r1888, %r1889, %r7412, %r45;
	// inline asm
	st.local.v2.u32 	[%rd7], {%r7412, %r1888};
	st.local.v4.u32 	[%rd6], {%r7412, %r7412, %r7412, %r7412};
	st.local.v4.u32 	[%rd5], {%r7412, %r7412, %r7412, %r7412};
	st.local.v4.u32 	[%rd4], {%r7412, %r7412, %r7412, %r7412};
	st.local.v4.u32 	[%rd3], {%r7412, %r7412, %r7412, %r7412};
	st.local.v4.u32 	[%rd2], {%r7412, %r7412, %r7412, %r7412};
	st.local.v2.u32 	[%rd1+8], {%r7412, %r7412};
	mov.u64 	%rd271, 0;
	st.local.u64 	[%rd1], %rd271;
	mov.u32 	%r7413, %r7412;
	mov.u32 	%r7438, %r7412;
	mov.u32 	%r7439, %r7412;
	bra.uni 	BB6_91;

BB6_21:
	setp.eq.s32	%p48, %r754, 5;
	mov.u32 	%r7415, %r7414;
	mov.u32 	%r7416, %r7414;
	mov.u32 	%r7417, %r7414;
	mov.u32 	%r7418, %r7414;
	mov.u32 	%r7419, %r7414;
	mov.u32 	%r7420, %r7414;
	mov.u32 	%r7421, %r7414;
	mov.u32 	%r7422, %r7414;
	mov.u32 	%r7423, %r7414;
	mov.u32 	%r7424, %r7414;
	mov.u32 	%r7425, %r7414;
	mov.u32 	%r7426, %r7414;
	mov.u32 	%r7427, %r7414;
	mov.u32 	%r7428, %r7414;
	mov.u32 	%r7429, %r7414;
	mov.u32 	%r7430, %r7414;
	mov.u32 	%r7431, %r7414;
	mov.u32 	%r7432, %r7414;
	mov.u32 	%r7433, %r7414;
	mov.u32 	%r7434, %r7414;
	mov.u32 	%r7435, %r7414;
	mov.u32 	%r7436, %r7414;
	mov.u32 	%r7437, %r7414;
	mov.u32 	%r7438, %r7414;
	mov.u32 	%r7439, %r7414;
	mov.u32 	%r7440, %r7414;
	mov.u32 	%r7441, %r7414;
	mov.u32 	%r7442, %r7414;
	mov.u32 	%r7443, %r7414;
	mov.u32 	%r7444, %r7414;
	mov.u32 	%r7445, %r7414;
	@%p48 bra 	BB6_22;
	bra.uni 	BB6_94;

BB6_22:
	mov.u32 	%r7412, 0;
	// inline asm
	prmt.b32 %r7420, %r7412, %r44, %r45;
	// inline asm
	ld.local.u32 	%r5355, [%rd55];
	ld.local.u32 	%r5356, [%rd8+8];
	// inline asm
	prmt.b32 %r7421, %r5355, %r5356, %r45;
	// inline asm
	ld.local.u32 	%r5359, [%rd8+8];
	ld.local.u32 	%r5360, [%rd8+4];
	// inline asm
	prmt.b32 %r7414, %r5359, %r5360, %r45;
	// inline asm
	ld.local.v2.u32 	{%r5510, %r5511}, [%rd8];
	// inline asm
	prmt.b32 %r7415, %r5511, %r5510, %r45;
	// inline asm
	ld.local.u32 	%r5367, [%rd8];
	ld.local.u32 	%r5368, [%rd7+12];
	// inline asm
	prmt.b32 %r7416, %r5367, %r5368, %r45;
	// inline asm
	ld.local.v2.u32 	{%r5512, %r5513}, [%rd7+8];
	// inline asm
	prmt.b32 %r7417, %r5513, %r5512, %r45;
	// inline asm
	ld.local.u32 	%r5375, [%rd7+8];
	ld.local.u32 	%r5376, [%rd7+4];
	// inline asm
	prmt.b32 %r5374, %r5375, %r5376, %r45;
	// inline asm
	st.local.u32 	[%rd55], %r5374;
	ld.local.v2.u32 	{%r5514, %r5515}, [%rd7];
	// inline asm
	prmt.b32 %r5378, %r5515, %r5514, %r45;
	// inline asm
	st.local.u32 	[%rd8+8], %r5378;
	ld.local.u32 	%r5383, [%rd7];
	ld.local.u32 	%r5384, [%rd6+12];
	// inline asm
	prmt.b32 %r5382, %r5383, %r5384, %r45;
	// inline asm
	st.local.u32 	[%rd8+4], %r5382;
	ld.local.v2.u32 	{%r5516, %r5517}, [%rd6+8];
	// inline asm
	prmt.b32 %r5386, %r5517, %r5516, %r45;
	// inline asm
	st.local.u32 	[%rd8], %r5386;
	ld.local.u32 	%r5391, [%rd6+8];
	ld.local.u32 	%r5392, [%rd6+4];
	// inline asm
	prmt.b32 %r5390, %r5391, %r5392, %r45;
	// inline asm
	st.local.u32 	[%rd7+12], %r5390;
	ld.local.v2.u32 	{%r5518, %r5519}, [%rd6];
	// inline asm
	prmt.b32 %r5394, %r5519, %r5518, %r45;
	// inline asm
	st.local.u32 	[%rd7+8], %r5394;
	ld.local.u32 	%r5399, [%rd6];
	ld.local.u32 	%r5400, [%rd5+12];
	// inline asm
	prmt.b32 %r5398, %r5399, %r5400, %r45;
	// inline asm
	st.local.u32 	[%rd7+4], %r5398;
	ld.local.v2.u32 	{%r5520, %r5521}, [%rd5+8];
	// inline asm
	prmt.b32 %r5402, %r5521, %r5520, %r45;
	// inline asm
	st.local.u32 	[%rd7], %r5402;
	ld.local.u32 	%r5407, [%rd5+8];
	ld.local.u32 	%r5408, [%rd5+4];
	// inline asm
	prmt.b32 %r5406, %r5407, %r5408, %r45;
	// inline asm
	st.local.u32 	[%rd6+12], %r5406;
	ld.local.v2.u32 	{%r5522, %r5523}, [%rd5];
	// inline asm
	prmt.b32 %r5410, %r5523, %r5522, %r45;
	// inline asm
	st.local.u32 	[%rd6+8], %r5410;
	ld.local.u32 	%r5415, [%rd5];
	ld.local.u32 	%r5416, [%rd4+12];
	// inline asm
	prmt.b32 %r5414, %r5415, %r5416, %r45;
	// inline asm
	st.local.u32 	[%rd6+4], %r5414;
	ld.local.v2.u32 	{%r5524, %r5525}, [%rd4+8];
	// inline asm
	prmt.b32 %r5418, %r5525, %r5524, %r45;
	// inline asm
	st.local.u32 	[%rd6], %r5418;
	ld.local.u32 	%r5423, [%rd4+8];
	ld.local.u32 	%r5424, [%rd4+4];
	// inline asm
	prmt.b32 %r5422, %r5423, %r5424, %r45;
	// inline asm
	st.local.u32 	[%rd5+12], %r5422;
	ld.local.v2.u32 	{%r5526, %r5527}, [%rd4];
	// inline asm
	prmt.b32 %r5426, %r5527, %r5526, %r45;
	// inline asm
	st.local.u32 	[%rd5+8], %r5426;
	ld.local.u32 	%r5431, [%rd4];
	ld.local.u32 	%r5432, [%rd3+12];
	// inline asm
	prmt.b32 %r5430, %r5431, %r5432, %r45;
	// inline asm
	st.local.u32 	[%rd5+4], %r5430;
	ld.local.v2.u32 	{%r5528, %r5529}, [%rd3+8];
	// inline asm
	prmt.b32 %r5434, %r5529, %r5528, %r45;
	// inline asm
	st.local.u32 	[%rd5], %r5434;
	ld.local.u32 	%r5439, [%rd3+8];
	ld.local.u32 	%r5440, [%rd3+4];
	// inline asm
	prmt.b32 %r5438, %r5439, %r5440, %r45;
	// inline asm
	st.local.u32 	[%rd4+12], %r5438;
	ld.local.v2.u32 	{%r5530, %r5531}, [%rd3];
	// inline asm
	prmt.b32 %r5442, %r5531, %r5530, %r45;
	// inline asm
	st.local.u32 	[%rd4+8], %r5442;
	ld.local.u32 	%r5447, [%rd3];
	ld.local.u32 	%r5448, [%rd2+12];
	// inline asm
	prmt.b32 %r5446, %r5447, %r5448, %r45;
	// inline asm
	st.local.u32 	[%rd4+4], %r5446;
	ld.local.v2.u32 	{%r5532, %r5533}, [%rd2+8];
	// inline asm
	prmt.b32 %r5450, %r5533, %r5532, %r45;
	// inline asm
	st.local.u32 	[%rd4], %r5450;
	ld.local.u32 	%r5455, [%rd2+8];
	ld.local.u32 	%r5456, [%rd2+4];
	// inline asm
	prmt.b32 %r5454, %r5455, %r5456, %r45;
	// inline asm
	st.local.u32 	[%rd3+12], %r5454;
	ld.local.v2.u32 	{%r5534, %r5535}, [%rd2];
	// inline asm
	prmt.b32 %r5458, %r5535, %r5534, %r45;
	// inline asm
	st.local.u32 	[%rd3+8], %r5458;
	ld.local.u32 	%r5463, [%rd2];
	ld.local.u32 	%r5464, [%rd1+12];
	// inline asm
	prmt.b32 %r5462, %r5463, %r5464, %r45;
	// inline asm
	st.local.u32 	[%rd3+4], %r5462;
	ld.local.v2.u32 	{%r5536, %r5537}, [%rd1+8];
	// inline asm
	prmt.b32 %r5466, %r5537, %r5536, %r45;
	// inline asm
	st.local.u32 	[%rd3], %r5466;
	ld.local.u32 	%r5471, [%rd1+8];
	ld.local.u32 	%r5472, [%rd1+4];
	// inline asm
	prmt.b32 %r5470, %r5471, %r5472, %r45;
	// inline asm
	st.local.u32 	[%rd2+12], %r5470;
	ld.local.v2.u32 	{%r5538, %r5539}, [%rd1];
	// inline asm
	prmt.b32 %r5474, %r5539, %r5538, %r45;
	// inline asm
	st.local.u32 	[%rd2+8], %r5474;
	ld.local.u32 	%r5479, [%rd1];
	// inline asm
	prmt.b32 %r5478, %r5479, %r7412, %r45;
	// inline asm
	st.local.v2.u32 	[%rd2], {%r7412, %r5478};
	st.local.v2.u32 	[%rd1+8], {%r7412, %r7412};
	mov.u64 	%rd291, 0;
	st.local.u64 	[%rd1], %rd291;
	mov.u32 	%r7413, %r7412;
	mov.u32 	%r7418, %r7412;
	mov.u32 	%r7419, %r7412;
	bra.uni 	BB6_86;

BB6_52:
	setp.eq.s32	%p25, %r754, 21;
	mov.u32 	%r7415, %r7414;
	mov.u32 	%r7416, %r7414;
	mov.u32 	%r7417, %r7414;
	mov.u32 	%r7418, %r7414;
	mov.u32 	%r7419, %r7414;
	mov.u32 	%r7420, %r7414;
	mov.u32 	%r7421, %r7414;
	mov.u32 	%r7422, %r7414;
	mov.u32 	%r7423, %r7414;
	mov.u32 	%r7424, %r7414;
	mov.u32 	%r7425, %r7414;
	mov.u32 	%r7426, %r7414;
	mov.u32 	%r7427, %r7414;
	mov.u32 	%r7428, %r7414;
	mov.u32 	%r7429, %r7414;
	mov.u32 	%r7430, %r7414;
	mov.u32 	%r7431, %r7414;
	mov.u32 	%r7432, %r7414;
	mov.u32 	%r7433, %r7414;
	mov.u32 	%r7434, %r7414;
	mov.u32 	%r7435, %r7414;
	mov.u32 	%r7436, %r7414;
	mov.u32 	%r7437, %r7414;
	mov.u32 	%r7438, %r7414;
	mov.u32 	%r7439, %r7414;
	mov.u32 	%r7440, %r7414;
	mov.u32 	%r7441, %r7414;
	mov.u32 	%r7442, %r7414;
	mov.u32 	%r7443, %r7414;
	mov.u32 	%r7444, %r7414;
	mov.u32 	%r7445, %r7414;
	@%p25 bra 	BB6_53;
	bra.uni 	BB6_94;

BB6_53:
	mov.u32 	%r7412, 0;
	// inline asm
	prmt.b32 %r7436, %r7412, %r44, %r45;
	// inline asm
	ld.local.u32 	%r2451, [%rd55];
	ld.local.u32 	%r2452, [%rd8+8];
	// inline asm
	prmt.b32 %r7437, %r2451, %r2452, %r45;
	// inline asm
	ld.local.u32 	%r2455, [%rd8+8];
	ld.local.u32 	%r2456, [%rd8+4];
	// inline asm
	prmt.b32 %r7430, %r2455, %r2456, %r45;
	// inline asm
	ld.local.v2.u32 	{%r2590, %r2591}, [%rd8];
	// inline asm
	prmt.b32 %r7431, %r2591, %r2590, %r45;
	// inline asm
	ld.local.u32 	%r2463, [%rd8];
	ld.local.u32 	%r2464, [%rd7+12];
	// inline asm
	prmt.b32 %r7432, %r2463, %r2464, %r45;
	// inline asm
	ld.local.v2.u32 	{%r2592, %r2593}, [%rd7+8];
	// inline asm
	prmt.b32 %r7433, %r2593, %r2592, %r45;
	// inline asm
	ld.local.u32 	%r2471, [%rd7+8];
	ld.local.u32 	%r2472, [%rd7+4];
	// inline asm
	prmt.b32 %r7426, %r2471, %r2472, %r45;
	// inline asm
	ld.local.v2.u32 	{%r2594, %r2595}, [%rd7];
	// inline asm
	prmt.b32 %r7427, %r2595, %r2594, %r45;
	// inline asm
	ld.local.u32 	%r2479, [%rd7];
	ld.local.u32 	%r2480, [%rd6+12];
	// inline asm
	prmt.b32 %r7428, %r2479, %r2480, %r45;
	// inline asm
	ld.local.v2.u32 	{%r2596, %r2597}, [%rd6+8];
	// inline asm
	prmt.b32 %r7429, %r2597, %r2596, %r45;
	// inline asm
	ld.local.u32 	%r2487, [%rd6+8];
	ld.local.u32 	%r2488, [%rd6+4];
	// inline asm
	prmt.b32 %r7422, %r2487, %r2488, %r45;
	// inline asm
	ld.local.v2.u32 	{%r2598, %r2599}, [%rd6];
	// inline asm
	prmt.b32 %r7423, %r2599, %r2598, %r45;
	// inline asm
	ld.local.u32 	%r2495, [%rd6];
	ld.local.u32 	%r2496, [%rd5+12];
	// inline asm
	prmt.b32 %r7424, %r2495, %r2496, %r45;
	// inline asm
	ld.local.v2.u32 	{%r2600, %r2601}, [%rd5+8];
	// inline asm
	prmt.b32 %r7425, %r2601, %r2600, %r45;
	// inline asm
	ld.local.u32 	%r2503, [%rd5+8];
	ld.local.u32 	%r2504, [%rd5+4];
	// inline asm
	prmt.b32 %r7418, %r2503, %r2504, %r45;
	// inline asm
	ld.local.v2.u32 	{%r2602, %r2603}, [%rd5];
	// inline asm
	prmt.b32 %r7419, %r2603, %r2602, %r45;
	// inline asm
	ld.local.u32 	%r2511, [%rd5];
	ld.local.u32 	%r2512, [%rd4+12];
	// inline asm
	prmt.b32 %r7420, %r2511, %r2512, %r45;
	// inline asm
	ld.local.v2.u32 	{%r2604, %r2605}, [%rd4+8];
	// inline asm
	prmt.b32 %r7421, %r2605, %r2604, %r45;
	// inline asm
	ld.local.u32 	%r2519, [%rd4+8];
	ld.local.u32 	%r2520, [%rd4+4];
	// inline asm
	prmt.b32 %r7414, %r2519, %r2520, %r45;
	// inline asm
	ld.local.v2.u32 	{%r2606, %r2607}, [%rd4];
	// inline asm
	prmt.b32 %r7415, %r2607, %r2606, %r45;
	// inline asm
	ld.local.u32 	%r2527, [%rd4];
	ld.local.u32 	%r2528, [%rd3+12];
	// inline asm
	prmt.b32 %r7416, %r2527, %r2528, %r45;
	// inline asm
	ld.local.v2.u32 	{%r2608, %r2609}, [%rd3+8];
	// inline asm
	prmt.b32 %r7417, %r2609, %r2608, %r45;
	// inline asm
	ld.local.u32 	%r2535, [%rd3+8];
	ld.local.u32 	%r2536, [%rd3+4];
	// inline asm
	prmt.b32 %r2534, %r2535, %r2536, %r45;
	// inline asm
	st.local.u32 	[%rd55], %r2534;
	ld.local.v2.u32 	{%r2610, %r2611}, [%rd3];
	// inline asm
	prmt.b32 %r2538, %r2611, %r2610, %r45;
	// inline asm
	st.local.u32 	[%rd8+8], %r2538;
	ld.local.u32 	%r2543, [%rd3];
	ld.local.u32 	%r2544, [%rd2+12];
	// inline asm
	prmt.b32 %r2542, %r2543, %r2544, %r45;
	// inline asm
	st.local.u32 	[%rd8+4], %r2542;
	ld.local.v2.u32 	{%r2612, %r2613}, [%rd2+8];
	// inline asm
	prmt.b32 %r2546, %r2613, %r2612, %r45;
	// inline asm
	st.local.u32 	[%rd8], %r2546;
	ld.local.u32 	%r2551, [%rd2+8];
	ld.local.u32 	%r2552, [%rd2+4];
	// inline asm
	prmt.b32 %r2550, %r2551, %r2552, %r45;
	// inline asm
	st.local.u32 	[%rd7+12], %r2550;
	ld.local.v2.u32 	{%r2614, %r2615}, [%rd2];
	// inline asm
	prmt.b32 %r2554, %r2615, %r2614, %r45;
	// inline asm
	st.local.u32 	[%rd7+8], %r2554;
	ld.local.u32 	%r2559, [%rd2];
	ld.local.u32 	%r2560, [%rd1+12];
	// inline asm
	prmt.b32 %r2558, %r2559, %r2560, %r45;
	// inline asm
	st.local.u32 	[%rd7+4], %r2558;
	ld.local.v2.u32 	{%r2616, %r2617}, [%rd1+8];
	// inline asm
	prmt.b32 %r2562, %r2617, %r2616, %r45;
	// inline asm
	st.local.u32 	[%rd7], %r2562;
	ld.local.u32 	%r2567, [%rd1+8];
	ld.local.u32 	%r2568, [%rd1+4];
	// inline asm
	prmt.b32 %r2566, %r2567, %r2568, %r45;
	// inline asm
	st.local.u32 	[%rd6+12], %r2566;
	ld.local.v2.u32 	{%r2618, %r2619}, [%rd1];
	// inline asm
	prmt.b32 %r2570, %r2619, %r2618, %r45;
	// inline asm
	st.local.u32 	[%rd6+8], %r2570;
	ld.local.u32 	%r2575, [%rd1];
	// inline asm
	prmt.b32 %r2574, %r2575, %r7412, %r45;
	// inline asm
	st.local.v2.u32 	[%rd6], {%r7412, %r2574};
	st.local.v4.u32 	[%rd5], {%r7412, %r7412, %r7412, %r7412};
	st.local.v4.u32 	[%rd4], {%r7412, %r7412, %r7412, %r7412};
	st.local.v4.u32 	[%rd3], {%r7412, %r7412, %r7412, %r7412};
	st.local.v4.u32 	[%rd2], {%r7412, %r7412, %r7412, %r7412};
	st.local.v2.u32 	[%rd1+8], {%r7412, %r7412};
	mov.u64 	%rd275, 0;
	st.local.u64 	[%rd1], %rd275;
	mov.u32 	%r7413, %r7412;
	mov.u32 	%r7434, %r7412;
	mov.u32 	%r7435, %r7412;
	bra.uni 	BB6_90;

BB6_36:
	setp.eq.s32	%p37, %r754, 13;
	mov.u32 	%r7415, %r7414;
	mov.u32 	%r7416, %r7414;
	mov.u32 	%r7417, %r7414;
	mov.u32 	%r7418, %r7414;
	mov.u32 	%r7419, %r7414;
	mov.u32 	%r7420, %r7414;
	mov.u32 	%r7421, %r7414;
	mov.u32 	%r7422, %r7414;
	mov.u32 	%r7423, %r7414;
	mov.u32 	%r7424, %r7414;
	mov.u32 	%r7425, %r7414;
	mov.u32 	%r7426, %r7414;
	mov.u32 	%r7427, %r7414;
	mov.u32 	%r7428, %r7414;
	mov.u32 	%r7429, %r7414;
	mov.u32 	%r7430, %r7414;
	mov.u32 	%r7431, %r7414;
	mov.u32 	%r7432, %r7414;
	mov.u32 	%r7433, %r7414;
	mov.u32 	%r7434, %r7414;
	mov.u32 	%r7435, %r7414;
	mov.u32 	%r7436, %r7414;
	mov.u32 	%r7437, %r7414;
	mov.u32 	%r7438, %r7414;
	mov.u32 	%r7439, %r7414;
	mov.u32 	%r7440, %r7414;
	mov.u32 	%r7441, %r7414;
	mov.u32 	%r7442, %r7414;
	mov.u32 	%r7443, %r7414;
	mov.u32 	%r7444, %r7414;
	mov.u32 	%r7445, %r7414;
	@%p37 bra 	BB6_37;
	bra.uni 	BB6_94;

BB6_37:
	mov.u32 	%r7412, 0;
	// inline asm
	prmt.b32 %r7428, %r7412, %r44, %r45;
	// inline asm
	ld.local.u32 	%r3871, [%rd55];
	ld.local.u32 	%r3872, [%rd8+8];
	// inline asm
	prmt.b32 %r7429, %r3871, %r3872, %r45;
	// inline asm
	ld.local.u32 	%r3875, [%rd8+8];
	ld.local.u32 	%r3876, [%rd8+4];
	// inline asm
	prmt.b32 %r7422, %r3875, %r3876, %r45;
	// inline asm
	ld.local.v2.u32 	{%r4018, %r4019}, [%rd8];
	// inline asm
	prmt.b32 %r7423, %r4019, %r4018, %r45;
	// inline asm
	ld.local.u32 	%r3883, [%rd8];
	ld.local.u32 	%r3884, [%rd7+12];
	// inline asm
	prmt.b32 %r7424, %r3883, %r3884, %r45;
	// inline asm
	ld.local.v2.u32 	{%r4020, %r4021}, [%rd7+8];
	// inline asm
	prmt.b32 %r7425, %r4021, %r4020, %r45;
	// inline asm
	ld.local.u32 	%r3891, [%rd7+8];
	ld.local.u32 	%r3892, [%rd7+4];
	// inline asm
	prmt.b32 %r7418, %r3891, %r3892, %r45;
	// inline asm
	ld.local.v2.u32 	{%r4022, %r4023}, [%rd7];
	// inline asm
	prmt.b32 %r7419, %r4023, %r4022, %r45;
	// inline asm
	ld.local.u32 	%r3899, [%rd7];
	ld.local.u32 	%r3900, [%rd6+12];
	// inline asm
	prmt.b32 %r7420, %r3899, %r3900, %r45;
	// inline asm
	ld.local.v2.u32 	{%r4024, %r4025}, [%rd6+8];
	// inline asm
	prmt.b32 %r7421, %r4025, %r4024, %r45;
	// inline asm
	ld.local.u32 	%r3907, [%rd6+8];
	ld.local.u32 	%r3908, [%rd6+4];
	// inline asm
	prmt.b32 %r7414, %r3907, %r3908, %r45;
	// inline asm
	ld.local.v2.u32 	{%r4026, %r4027}, [%rd6];
	// inline asm
	prmt.b32 %r7415, %r4027, %r4026, %r45;
	// inline asm
	ld.local.u32 	%r3915, [%rd6];
	ld.local.u32 	%r3916, [%rd5+12];
	// inline asm
	prmt.b32 %r7416, %r3915, %r3916, %r45;
	// inline asm
	ld.local.v2.u32 	{%r4028, %r4029}, [%rd5+8];
	// inline asm
	prmt.b32 %r7417, %r4029, %r4028, %r45;
	// inline asm
	ld.local.u32 	%r3923, [%rd5+8];
	ld.local.u32 	%r3924, [%rd5+4];
	// inline asm
	prmt.b32 %r3922, %r3923, %r3924, %r45;
	// inline asm
	st.local.u32 	[%rd55], %r3922;
	ld.local.v2.u32 	{%r4030, %r4031}, [%rd5];
	// inline asm
	prmt.b32 %r3926, %r4031, %r4030, %r45;
	// inline asm
	st.local.u32 	[%rd8+8], %r3926;
	ld.local.u32 	%r3931, [%rd5];
	ld.local.u32 	%r3932, [%rd4+12];
	// inline asm
	prmt.b32 %r3930, %r3931, %r3932, %r45;
	// inline asm
	st.local.u32 	[%rd8+4], %r3930;
	ld.local.v2.u32 	{%r4032, %r4033}, [%rd4+8];
	// inline asm
	prmt.b32 %r3934, %r4033, %r4032, %r45;
	// inline asm
	st.local.u32 	[%rd8], %r3934;
	ld.local.u32 	%r3939, [%rd4+8];
	ld.local.u32 	%r3940, [%rd4+4];
	// inline asm
	prmt.b32 %r3938, %r3939, %r3940, %r45;
	// inline asm
	st.local.u32 	[%rd7+12], %r3938;
	ld.local.v2.u32 	{%r4034, %r4035}, [%rd4];
	// inline asm
	prmt.b32 %r3942, %r4035, %r4034, %r45;
	// inline asm
	st.local.u32 	[%rd7+8], %r3942;
	ld.local.u32 	%r3947, [%rd4];
	ld.local.u32 	%r3948, [%rd3+12];
	// inline asm
	prmt.b32 %r3946, %r3947, %r3948, %r45;
	// inline asm
	st.local.u32 	[%rd7+4], %r3946;
	ld.local.v2.u32 	{%r4036, %r4037}, [%rd3+8];
	// inline asm
	prmt.b32 %r3950, %r4037, %r4036, %r45;
	// inline asm
	st.local.u32 	[%rd7], %r3950;
	ld.local.u32 	%r3955, [%rd3+8];
	ld.local.u32 	%r3956, [%rd3+4];
	// inline asm
	prmt.b32 %r3954, %r3955, %r3956, %r45;
	// inline asm
	st.local.u32 	[%rd6+12], %r3954;
	ld.local.v2.u32 	{%r4038, %r4039}, [%rd3];
	// inline asm
	prmt.b32 %r3958, %r4039, %r4038, %r45;
	// inline asm
	st.local.u32 	[%rd6+8], %r3958;
	ld.local.u32 	%r3963, [%rd3];
	ld.local.u32 	%r3964, [%rd2+12];
	// inline asm
	prmt.b32 %r3962, %r3963, %r3964, %r45;
	// inline asm
	st.local.u32 	[%rd6+4], %r3962;
	ld.local.v2.u32 	{%r4040, %r4041}, [%rd2+8];
	// inline asm
	prmt.b32 %r3966, %r4041, %r4040, %r45;
	// inline asm
	st.local.u32 	[%rd6], %r3966;
	ld.local.u32 	%r3971, [%rd2+8];
	ld.local.u32 	%r3972, [%rd2+4];
	// inline asm
	prmt.b32 %r3970, %r3971, %r3972, %r45;
	// inline asm
	st.local.u32 	[%rd5+12], %r3970;
	ld.local.v2.u32 	{%r4042, %r4043}, [%rd2];
	// inline asm
	prmt.b32 %r3974, %r4043, %r4042, %r45;
	// inline asm
	st.local.u32 	[%rd5+8], %r3974;
	ld.local.u32 	%r3979, [%rd2];
	ld.local.u32 	%r3980, [%rd1+12];
	// inline asm
	prmt.b32 %r3978, %r3979, %r3980, %r45;
	// inline asm
	st.local.u32 	[%rd5+4], %r3978;
	ld.local.v2.u32 	{%r4044, %r4045}, [%rd1+8];
	// inline asm
	prmt.b32 %r3982, %r4045, %r4044, %r45;
	// inline asm
	st.local.u32 	[%rd5], %r3982;
	ld.local.u32 	%r3987, [%rd1+8];
	ld.local.u32 	%r3988, [%rd1+4];
	// inline asm
	prmt.b32 %r3986, %r3987, %r3988, %r45;
	// inline asm
	st.local.u32 	[%rd4+12], %r3986;
	ld.local.v2.u32 	{%r4046, %r4047}, [%rd1];
	// inline asm
	prmt.b32 %r3990, %r4047, %r4046, %r45;
	// inline asm
	st.local.u32 	[%rd4+8], %r3990;
	ld.local.u32 	%r3995, [%rd1];
	// inline asm
	prmt.b32 %r3994, %r3995, %r7412, %r45;
	// inline asm
	st.local.v2.u32 	[%rd4], {%r7412, %r3994};
	st.local.v4.u32 	[%rd3], {%r7412, %r7412, %r7412, %r7412};
	st.local.v4.u32 	[%rd2], {%r7412, %r7412, %r7412, %r7412};
	st.local.v2.u32 	[%rd1+8], {%r7412, %r7412};
	mov.u64 	%rd283, 0;
	st.local.u64 	[%rd1], %rd283;
	mov.u32 	%r7413, %r7412;
	mov.u32 	%r7426, %r7412;
	mov.u32 	%r7427, %r7412;
	bra.uni 	BB6_88;

BB6_67:
	setp.eq.s32	%p14, %r754, 29;
	mov.u32 	%r7415, %r7414;
	mov.u32 	%r7416, %r7414;
	mov.u32 	%r7417, %r7414;
	mov.u32 	%r7418, %r7414;
	mov.u32 	%r7419, %r7414;
	mov.u32 	%r7420, %r7414;
	mov.u32 	%r7421, %r7414;
	mov.u32 	%r7422, %r7414;
	mov.u32 	%r7423, %r7414;
	mov.u32 	%r7424, %r7414;
	mov.u32 	%r7425, %r7414;
	mov.u32 	%r7426, %r7414;
	mov.u32 	%r7427, %r7414;
	mov.u32 	%r7428, %r7414;
	mov.u32 	%r7429, %r7414;
	mov.u32 	%r7430, %r7414;
	mov.u32 	%r7431, %r7414;
	mov.u32 	%r7432, %r7414;
	mov.u32 	%r7433, %r7414;
	mov.u32 	%r7434, %r7414;
	mov.u32 	%r7435, %r7414;
	mov.u32 	%r7436, %r7414;
	mov.u32 	%r7437, %r7414;
	mov.u32 	%r7438, %r7414;
	mov.u32 	%r7439, %r7414;
	mov.u32 	%r7440, %r7414;
	mov.u32 	%r7441, %r7414;
	mov.u32 	%r7442, %r7414;
	mov.u32 	%r7443, %r7414;
	mov.u32 	%r7444, %r7414;
	mov.u32 	%r7445, %r7414;
	@%p14 bra 	BB6_68;
	bra.uni 	BB6_94;

BB6_68:
	mov.u32 	%r7412, 0;
	// inline asm
	prmt.b32 %r7444, %r7412, %r44, %r45;
	// inline asm
	ld.local.u32 	%r1095, [%rd55];
	ld.local.u32 	%r1096, [%rd8+8];
	// inline asm
	prmt.b32 %r7445, %r1095, %r1096, %r45;
	// inline asm
	ld.local.u32 	%r1099, [%rd8+8];
	ld.local.u32 	%r1100, [%rd8+4];
	// inline asm
	prmt.b32 %r7438, %r1099, %r1100, %r45;
	// inline asm
	ld.local.v2.u32 	{%r1226, %r1227}, [%rd8];
	// inline asm
	prmt.b32 %r7439, %r1227, %r1226, %r45;
	// inline asm
	ld.local.u32 	%r1107, [%rd8];
	ld.local.u32 	%r1108, [%rd7+12];
	// inline asm
	prmt.b32 %r7440, %r1107, %r1108, %r45;
	// inline asm
	ld.local.v2.u32 	{%r1228, %r1229}, [%rd7+8];
	// inline asm
	prmt.b32 %r7441, %r1229, %r1228, %r45;
	// inline asm
	ld.local.u32 	%r1115, [%rd7+8];
	ld.local.u32 	%r1116, [%rd7+4];
	// inline asm
	prmt.b32 %r7434, %r1115, %r1116, %r45;
	// inline asm
	ld.local.v2.u32 	{%r1230, %r1231}, [%rd7];
	// inline asm
	prmt.b32 %r7435, %r1231, %r1230, %r45;
	// inline asm
	ld.local.u32 	%r1123, [%rd7];
	ld.local.u32 	%r1124, [%rd6+12];
	// inline asm
	prmt.b32 %r7436, %r1123, %r1124, %r45;
	// inline asm
	ld.local.v2.u32 	{%r1232, %r1233}, [%rd6+8];
	// inline asm
	prmt.b32 %r7437, %r1233, %r1232, %r45;
	// inline asm
	ld.local.u32 	%r1131, [%rd6+8];
	ld.local.u32 	%r1132, [%rd6+4];
	// inline asm
	prmt.b32 %r7430, %r1131, %r1132, %r45;
	// inline asm
	ld.local.v2.u32 	{%r1234, %r1235}, [%rd6];
	// inline asm
	prmt.b32 %r7431, %r1235, %r1234, %r45;
	// inline asm
	ld.local.u32 	%r1139, [%rd6];
	ld.local.u32 	%r1140, [%rd5+12];
	// inline asm
	prmt.b32 %r7432, %r1139, %r1140, %r45;
	// inline asm
	ld.local.v2.u32 	{%r1236, %r1237}, [%rd5+8];
	// inline asm
	prmt.b32 %r7433, %r1237, %r1236, %r45;
	// inline asm
	ld.local.u32 	%r1147, [%rd5+8];
	ld.local.u32 	%r1148, [%rd5+4];
	// inline asm
	prmt.b32 %r7426, %r1147, %r1148, %r45;
	// inline asm
	ld.local.v2.u32 	{%r1238, %r1239}, [%rd5];
	// inline asm
	prmt.b32 %r7427, %r1239, %r1238, %r45;
	// inline asm
	ld.local.u32 	%r1155, [%rd5];
	ld.local.u32 	%r1156, [%rd4+12];
	// inline asm
	prmt.b32 %r7428, %r1155, %r1156, %r45;
	// inline asm
	ld.local.v2.u32 	{%r1240, %r1241}, [%rd4+8];
	// inline asm
	prmt.b32 %r7429, %r1241, %r1240, %r45;
	// inline asm
	ld.local.u32 	%r1163, [%rd4+8];
	ld.local.u32 	%r1164, [%rd4+4];
	// inline asm
	prmt.b32 %r7422, %r1163, %r1164, %r45;
	// inline asm
	ld.local.v2.u32 	{%r1242, %r1243}, [%rd4];
	// inline asm
	prmt.b32 %r7423, %r1243, %r1242, %r45;
	// inline asm
	ld.local.u32 	%r1171, [%rd4];
	ld.local.u32 	%r1172, [%rd3+12];
	// inline asm
	prmt.b32 %r7424, %r1171, %r1172, %r45;
	// inline asm
	ld.local.v2.u32 	{%r1244, %r1245}, [%rd3+8];
	// inline asm
	prmt.b32 %r7425, %r1245, %r1244, %r45;
	// inline asm
	ld.local.u32 	%r1179, [%rd3+8];
	ld.local.u32 	%r1180, [%rd3+4];
	// inline asm
	prmt.b32 %r7418, %r1179, %r1180, %r45;
	// inline asm
	ld.local.v2.u32 	{%r1246, %r1247}, [%rd3];
	// inline asm
	prmt.b32 %r7419, %r1247, %r1246, %r45;
	// inline asm
	ld.local.u32 	%r1187, [%rd3];
	ld.local.u32 	%r1188, [%rd2+12];
	// inline asm
	prmt.b32 %r7420, %r1187, %r1188, %r45;
	// inline asm
	ld.local.v2.u32 	{%r1248, %r1249}, [%rd2+8];
	// inline asm
	prmt.b32 %r7421, %r1249, %r1248, %r45;
	// inline asm
	ld.local.u32 	%r1195, [%rd2+8];
	ld.local.u32 	%r1196, [%rd2+4];
	// inline asm
	prmt.b32 %r7414, %r1195, %r1196, %r45;
	// inline asm
	ld.local.v2.u32 	{%r1250, %r1251}, [%rd2];
	// inline asm
	prmt.b32 %r7415, %r1251, %r1250, %r45;
	// inline asm
	ld.local.u32 	%r1203, [%rd2];
	ld.local.u32 	%r1204, [%rd1+12];
	// inline asm
	prmt.b32 %r7416, %r1203, %r1204, %r45;
	// inline asm
	ld.local.v2.u32 	{%r1252, %r1253}, [%rd1+8];
	// inline asm
	prmt.b32 %r7417, %r1253, %r1252, %r45;
	// inline asm
	ld.local.u32 	%r1211, [%rd1+8];
	ld.local.u32 	%r1212, [%rd1+4];
	// inline asm
	prmt.b32 %r1210, %r1211, %r1212, %r45;
	// inline asm
	st.local.u32 	[%rd55], %r1210;
	ld.local.v2.u32 	{%r1254, %r1255}, [%rd1];
	// inline asm
	prmt.b32 %r1214, %r1255, %r1254, %r45;
	// inline asm
	st.local.u32 	[%rd8+8], %r1214;
	ld.local.u32 	%r1219, [%rd1];
	// inline asm
	prmt.b32 %r1218, %r1219, %r7412, %r45;
	// inline asm
	st.local.v2.u32 	[%rd8], {%r7412, %r1218};
	st.local.v4.u32 	[%rd7], {%r7412, %r7412, %r7412, %r7412};
	st.local.v4.u32 	[%rd6], {%r7412, %r7412, %r7412, %r7412};
	st.local.v4.u32 	[%rd5], {%r7412, %r7412, %r7412, %r7412};
	st.local.v4.u32 	[%rd4], {%r7412, %r7412, %r7412, %r7412};
	st.local.v4.u32 	[%rd3], {%r7412, %r7412, %r7412, %r7412};
	st.local.v4.u32 	[%rd2], {%r7412, %r7412, %r7412, %r7412};
	st.local.v2.u32 	[%rd1+8], {%r7412, %r7412};
	mov.u64 	%rd267, 0;
	st.local.u64 	[%rd1], %rd267;
	mov.u32 	%r7413, %r7412;
	mov.u32 	%r7442, %r7412;
	mov.u32 	%r7443, %r7412;
	bra.uni 	BB6_94;

BB6_16:
	setp.eq.s32	%p51, %r754, 3;
	mov.u32 	%r7415, %r7414;
	mov.u32 	%r7416, %r7414;
	mov.u32 	%r7417, %r7414;
	mov.u32 	%r7418, %r7414;
	mov.u32 	%r7419, %r7414;
	mov.u32 	%r7420, %r7414;
	mov.u32 	%r7421, %r7414;
	mov.u32 	%r7422, %r7414;
	mov.u32 	%r7423, %r7414;
	mov.u32 	%r7424, %r7414;
	mov.u32 	%r7425, %r7414;
	mov.u32 	%r7426, %r7414;
	mov.u32 	%r7427, %r7414;
	mov.u32 	%r7428, %r7414;
	mov.u32 	%r7429, %r7414;
	mov.u32 	%r7430, %r7414;
	mov.u32 	%r7431, %r7414;
	mov.u32 	%r7432, %r7414;
	mov.u32 	%r7433, %r7414;
	mov.u32 	%r7434, %r7414;
	mov.u32 	%r7435, %r7414;
	mov.u32 	%r7436, %r7414;
	mov.u32 	%r7437, %r7414;
	mov.u32 	%r7438, %r7414;
	mov.u32 	%r7439, %r7414;
	mov.u32 	%r7440, %r7414;
	mov.u32 	%r7441, %r7414;
	mov.u32 	%r7442, %r7414;
	mov.u32 	%r7443, %r7414;
	mov.u32 	%r7444, %r7414;
	mov.u32 	%r7445, %r7414;
	@%p51 bra 	BB6_17;
	bra.uni 	BB6_94;

BB6_17:
	mov.u32 	%r7412, 0;
	// inline asm
	prmt.b32 %r7414, %r7412, %r44, %r45;
	// inline asm
	ld.local.u32 	%r5736, [%rd55];
	ld.local.u32 	%r5737, [%rd8+8];
	// inline asm
	prmt.b32 %r7415, %r5736, %r5737, %r45;
	// inline asm
	ld.local.u32 	%r5740, [%rd8+8];
	ld.local.u32 	%r5741, [%rd8+4];
	// inline asm
	prmt.b32 %r7416, %r5740, %r5741, %r45;
	// inline asm
	ld.local.v2.u32 	{%r5893, %r5894}, [%rd8];
	// inline asm
	prmt.b32 %r7417, %r5894, %r5893, %r45;
	// inline asm
	ld.local.u32 	%r5748, [%rd8];
	ld.local.u32 	%r5749, [%rd7+12];
	// inline asm
	prmt.b32 %r5747, %r5748, %r5749, %r45;
	// inline asm
	st.local.u32 	[%rd55], %r5747;
	ld.local.v2.u32 	{%r5895, %r5896}, [%rd7+8];
	// inline asm
	prmt.b32 %r5751, %r5896, %r5895, %r45;
	// inline asm
	st.local.u32 	[%rd8+8], %r5751;
	ld.local.u32 	%r5756, [%rd7+8];
	ld.local.u32 	%r5757, [%rd7+4];
	// inline asm
	prmt.b32 %r5755, %r5756, %r5757, %r45;
	// inline asm
	st.local.u32 	[%rd8+4], %r5755;
	ld.local.v2.u32 	{%r5897, %r5898}, [%rd7];
	// inline asm
	prmt.b32 %r5759, %r5898, %r5897, %r45;
	// inline asm
	st.local.u32 	[%rd8], %r5759;
	ld.local.u32 	%r5764, [%rd7];
	ld.local.u32 	%r5765, [%rd6+12];
	// inline asm
	prmt.b32 %r5763, %r5764, %r5765, %r45;
	// inline asm
	st.local.u32 	[%rd7+12], %r5763;
	ld.local.v2.u32 	{%r5899, %r5900}, [%rd6+8];
	// inline asm
	prmt.b32 %r5767, %r5900, %r5899, %r45;
	// inline asm
	st.local.u32 	[%rd7+8], %r5767;
	ld.local.u32 	%r5772, [%rd6+8];
	ld.local.u32 	%r5773, [%rd6+4];
	// inline asm
	prmt.b32 %r5771, %r5772, %r5773, %r45;
	// inline asm
	st.local.u32 	[%rd7+4], %r5771;
	ld.local.v2.u32 	{%r5901, %r5902}, [%rd6];
	// inline asm
	prmt.b32 %r5775, %r5902, %r5901, %r45;
	// inline asm
	st.local.u32 	[%rd7], %r5775;
	ld.local.u32 	%r5780, [%rd6];
	ld.local.u32 	%r5781, [%rd5+12];
	// inline asm
	prmt.b32 %r5779, %r5780, %r5781, %r45;
	// inline asm
	st.local.u32 	[%rd6+12], %r5779;
	ld.local.v2.u32 	{%r5903, %r5904}, [%rd5+8];
	// inline asm
	prmt.b32 %r5783, %r5904, %r5903, %r45;
	// inline asm
	st.local.u32 	[%rd6+8], %r5783;
	ld.local.u32 	%r5788, [%rd5+8];
	ld.local.u32 	%r5789, [%rd5+4];
	// inline asm
	prmt.b32 %r5787, %r5788, %r5789, %r45;
	// inline asm
	st.local.u32 	[%rd6+4], %r5787;
	ld.local.v2.u32 	{%r5905, %r5906}, [%rd5];
	// inline asm
	prmt.b32 %r5791, %r5906, %r5905, %r45;
	// inline asm
	st.local.u32 	[%rd6], %r5791;
	ld.local.u32 	%r5796, [%rd5];
	ld.local.u32 	%r5797, [%rd4+12];
	// inline asm
	prmt.b32 %r5795, %r5796, %r5797, %r45;
	// inline asm
	st.local.u32 	[%rd5+12], %r5795;
	ld.local.v2.u32 	{%r5907, %r5908}, [%rd4+8];
	// inline asm
	prmt.b32 %r5799, %r5908, %r5907, %r45;
	// inline asm
	st.local.u32 	[%rd5+8], %r5799;
	ld.local.u32 	%r5804, [%rd4+8];
	ld.local.u32 	%r5805, [%rd4+4];
	// inline asm
	prmt.b32 %r5803, %r5804, %r5805, %r45;
	// inline asm
	st.local.u32 	[%rd5+4], %r5803;
	ld.local.v2.u32 	{%r5909, %r5910}, [%rd4];
	// inline asm
	prmt.b32 %r5807, %r5910, %r5909, %r45;
	// inline asm
	st.local.u32 	[%rd5], %r5807;
	ld.local.u32 	%r5812, [%rd4];
	ld.local.u32 	%r5813, [%rd3+12];
	// inline asm
	prmt.b32 %r5811, %r5812, %r5813, %r45;
	// inline asm
	st.local.u32 	[%rd4+12], %r5811;
	ld.local.v2.u32 	{%r5911, %r5912}, [%rd3+8];
	// inline asm
	prmt.b32 %r5815, %r5912, %r5911, %r45;
	// inline asm
	st.local.u32 	[%rd4+8], %r5815;
	ld.local.u32 	%r5820, [%rd3+8];
	ld.local.u32 	%r5821, [%rd3+4];
	// inline asm
	prmt.b32 %r5819, %r5820, %r5821, %r45;
	// inline asm
	st.local.u32 	[%rd4+4], %r5819;
	ld.local.v2.u32 	{%r5913, %r5914}, [%rd3];
	// inline asm
	prmt.b32 %r5823, %r5914, %r5913, %r45;
	// inline asm
	st.local.u32 	[%rd4], %r5823;
	ld.local.u32 	%r5828, [%rd3];
	ld.local.u32 	%r5829, [%rd2+12];
	// inline asm
	prmt.b32 %r5827, %r5828, %r5829, %r45;
	// inline asm
	st.local.u32 	[%rd3+12], %r5827;
	ld.local.v2.u32 	{%r5915, %r5916}, [%rd2+8];
	// inline asm
	prmt.b32 %r5831, %r5916, %r5915, %r45;
	// inline asm
	st.local.u32 	[%rd3+8], %r5831;
	ld.local.u32 	%r5836, [%rd2+8];
	ld.local.u32 	%r5837, [%rd2+4];
	// inline asm
	prmt.b32 %r5835, %r5836, %r5837, %r45;
	// inline asm
	st.local.u32 	[%rd3+4], %r5835;
	ld.local.v2.u32 	{%r5917, %r5918}, [%rd2];
	// inline asm
	prmt.b32 %r5839, %r5918, %r5917, %r45;
	// inline asm
	st.local.u32 	[%rd3], %r5839;
	ld.local.u32 	%r5844, [%rd2];
	ld.local.u32 	%r5845, [%rd1+12];
	// inline asm
	prmt.b32 %r5843, %r5844, %r5845, %r45;
	// inline asm
	st.local.u32 	[%rd2+12], %r5843;
	ld.local.v2.u32 	{%r5919, %r5920}, [%rd1+8];
	// inline asm
	prmt.b32 %r5847, %r5920, %r5919, %r45;
	// inline asm
	st.local.u32 	[%rd2+8], %r5847;
	ld.local.u32 	%r5852, [%rd1+8];
	ld.local.u32 	%r5853, [%rd1+4];
	// inline asm
	prmt.b32 %r5851, %r5852, %r5853, %r45;
	// inline asm
	st.local.u32 	[%rd2+4], %r5851;
	ld.local.v2.u32 	{%r5921, %r5922}, [%rd1];
	// inline asm
	prmt.b32 %r5855, %r5922, %r5921, %r45;
	// inline asm
	st.local.u32 	[%rd2], %r5855;
	ld.local.u32 	%r5860, [%rd1];
	// inline asm
	prmt.b32 %r5859, %r5860, %r7412, %r45;
	// inline asm
	st.local.v2.u32 	[%rd1+8], {%r7412, %r5859};
	mov.u64 	%rd293, 0;
	st.local.u64 	[%rd1], %rd293;
	mov.u32 	%r7413, %r7412;

BB6_18:
	mov.u32 	%r7418, %r7412;
	mov.u32 	%r7419, %r7412;
	mov.u32 	%r7420, %r7412;
	mov.u32 	%r7421, %r7412;
	bra.uni 	BB6_86;

BB6_48:
	setp.eq.s32	%p28, %r754, 19;
	mov.u32 	%r7415, %r7414;
	mov.u32 	%r7416, %r7414;
	mov.u32 	%r7417, %r7414;
	mov.u32 	%r7418, %r7414;
	mov.u32 	%r7419, %r7414;
	mov.u32 	%r7420, %r7414;
	mov.u32 	%r7421, %r7414;
	mov.u32 	%r7422, %r7414;
	mov.u32 	%r7423, %r7414;
	mov.u32 	%r7424, %r7414;
	mov.u32 	%r7425, %r7414;
	mov.u32 	%r7426, %r7414;
	mov.u32 	%r7427, %r7414;
	mov.u32 	%r7428, %r7414;
	mov.u32 	%r7429, %r7414;
	mov.u32 	%r7430, %r7414;
	mov.u32 	%r7431, %r7414;
	mov.u32 	%r7432, %r7414;
	mov.u32 	%r7433, %r7414;
	mov.u32 	%r7434, %r7414;
	mov.u32 	%r7435, %r7414;
	mov.u32 	%r7436, %r7414;
	mov.u32 	%r7437, %r7414;
	mov.u32 	%r7438, %r7414;
	mov.u32 	%r7439, %r7414;
	mov.u32 	%r7440, %r7414;
	mov.u32 	%r7441, %r7414;
	mov.u32 	%r7442, %r7414;
	mov.u32 	%r7443, %r7414;
	mov.u32 	%r7444, %r7414;
	mov.u32 	%r7445, %r7414;
	@%p28 bra 	BB6_49;
	bra.uni 	BB6_94;

BB6_49:
	mov.u32 	%r7412, 0;
	// inline asm
	prmt.b32 %r7430, %r7412, %r44, %r45;
	// inline asm
	ld.local.u32 	%r2800, [%rd55];
	ld.local.u32 	%r2801, [%rd8+8];
	// inline asm
	prmt.b32 %r7431, %r2800, %r2801, %r45;
	// inline asm
	ld.local.u32 	%r2804, [%rd8+8];
	ld.local.u32 	%r2805, [%rd8+4];
	// inline asm
	prmt.b32 %r7432, %r2804, %r2805, %r45;
	// inline asm
	ld.local.v2.u32 	{%r2941, %r2942}, [%rd8];
	// inline asm
	prmt.b32 %r7433, %r2942, %r2941, %r45;
	// inline asm
	ld.local.u32 	%r2812, [%rd8];
	ld.local.u32 	%r2813, [%rd7+12];
	// inline asm
	prmt.b32 %r7426, %r2812, %r2813, %r45;
	// inline asm
	ld.local.v2.u32 	{%r2943, %r2944}, [%rd7+8];
	// inline asm
	prmt.b32 %r7427, %r2944, %r2943, %r45;
	// inline asm
	ld.local.u32 	%r2820, [%rd7+8];
	ld.local.u32 	%r2821, [%rd7+4];
	// inline asm
	prmt.b32 %r7428, %r2820, %r2821, %r45;
	// inline asm
	ld.local.v2.u32 	{%r2945, %r2946}, [%rd7];
	// inline asm
	prmt.b32 %r7429, %r2946, %r2945, %r45;
	// inline asm
	ld.local.u32 	%r2828, [%rd7];
	ld.local.u32 	%r2829, [%rd6+12];
	// inline asm
	prmt.b32 %r7422, %r2828, %r2829, %r45;
	// inline asm
	ld.local.v2.u32 	{%r2947, %r2948}, [%rd6+8];
	// inline asm
	prmt.b32 %r7423, %r2948, %r2947, %r45;
	// inline asm
	ld.local.u32 	%r2836, [%rd6+8];
	ld.local.u32 	%r2837, [%rd6+4];
	// inline asm
	prmt.b32 %r7424, %r2836, %r2837, %r45;
	// inline asm
	ld.local.v2.u32 	{%r2949, %r2950}, [%rd6];
	// inline asm
	prmt.b32 %r7425, %r2950, %r2949, %r45;
	// inline asm
	ld.local.u32 	%r2844, [%rd6];
	ld.local.u32 	%r2845, [%rd5+12];
	// inline asm
	prmt.b32 %r7418, %r2844, %r2845, %r45;
	// inline asm
	ld.local.v2.u32 	{%r2951, %r2952}, [%rd5+8];
	// inline asm
	prmt.b32 %r7419, %r2952, %r2951, %r45;
	// inline asm
	ld.local.u32 	%r2852, [%rd5+8];
	ld.local.u32 	%r2853, [%rd5+4];
	// inline asm
	prmt.b32 %r7420, %r2852, %r2853, %r45;
	// inline asm
	ld.local.v2.u32 	{%r2953, %r2954}, [%rd5];
	// inline asm
	prmt.b32 %r7421, %r2954, %r2953, %r45;
	// inline asm
	ld.local.u32 	%r2860, [%rd5];
	ld.local.u32 	%r2861, [%rd4+12];
	// inline asm
	prmt.b32 %r7414, %r2860, %r2861, %r45;
	// inline asm
	ld.local.v2.u32 	{%r2955, %r2956}, [%rd4+8];
	// inline asm
	prmt.b32 %r7415, %r2956, %r2955, %r45;
	// inline asm
	ld.local.u32 	%r2868, [%rd4+8];
	ld.local.u32 	%r2869, [%rd4+4];
	// inline asm
	prmt.b32 %r7416, %r2868, %r2869, %r45;
	// inline asm
	ld.local.v2.u32 	{%r2957, %r2958}, [%rd4];
	// inline asm
	prmt.b32 %r7417, %r2958, %r2957, %r45;
	// inline asm
	ld.local.u32 	%r2876, [%rd4];
	ld.local.u32 	%r2877, [%rd3+12];
	// inline asm
	prmt.b32 %r2875, %r2876, %r2877, %r45;
	// inline asm
	st.local.u32 	[%rd55], %r2875;
	ld.local.v2.u32 	{%r2959, %r2960}, [%rd3+8];
	// inline asm
	prmt.b32 %r2879, %r2960, %r2959, %r45;
	// inline asm
	st.local.u32 	[%rd8+8], %r2879;
	ld.local.u32 	%r2884, [%rd3+8];
	ld.local.u32 	%r2885, [%rd3+4];
	// inline asm
	prmt.b32 %r2883, %r2884, %r2885, %r45;
	// inline asm
	st.local.u32 	[%rd8+4], %r2883;
	ld.local.v2.u32 	{%r2961, %r2962}, [%rd3];
	// inline asm
	prmt.b32 %r2887, %r2962, %r2961, %r45;
	// inline asm
	st.local.u32 	[%rd8], %r2887;
	ld.local.u32 	%r2892, [%rd3];
	ld.local.u32 	%r2893, [%rd2+12];
	// inline asm
	prmt.b32 %r2891, %r2892, %r2893, %r45;
	// inline asm
	st.local.u32 	[%rd7+12], %r2891;
	ld.local.v2.u32 	{%r2963, %r2964}, [%rd2+8];
	// inline asm
	prmt.b32 %r2895, %r2964, %r2963, %r45;
	// inline asm
	st.local.u32 	[%rd7+8], %r2895;
	ld.local.u32 	%r2900, [%rd2+8];
	ld.local.u32 	%r2901, [%rd2+4];
	// inline asm
	prmt.b32 %r2899, %r2900, %r2901, %r45;
	// inline asm
	st.local.u32 	[%rd7+4], %r2899;
	ld.local.v2.u32 	{%r2965, %r2966}, [%rd2];
	// inline asm
	prmt.b32 %r2903, %r2966, %r2965, %r45;
	// inline asm
	st.local.u32 	[%rd7], %r2903;
	ld.local.u32 	%r2908, [%rd2];
	ld.local.u32 	%r2909, [%rd1+12];
	// inline asm
	prmt.b32 %r2907, %r2908, %r2909, %r45;
	// inline asm
	st.local.u32 	[%rd6+12], %r2907;
	ld.local.v2.u32 	{%r2967, %r2968}, [%rd1+8];
	// inline asm
	prmt.b32 %r2911, %r2968, %r2967, %r45;
	// inline asm
	st.local.u32 	[%rd6+8], %r2911;
	ld.local.u32 	%r2916, [%rd1+8];
	ld.local.u32 	%r2917, [%rd1+4];
	// inline asm
	prmt.b32 %r2915, %r2916, %r2917, %r45;
	// inline asm
	st.local.u32 	[%rd6+4], %r2915;
	ld.local.v2.u32 	{%r2969, %r2970}, [%rd1];
	// inline asm
	prmt.b32 %r2919, %r2970, %r2969, %r45;
	// inline asm
	st.local.u32 	[%rd6], %r2919;
	ld.local.u32 	%r2924, [%rd1];
	// inline asm
	prmt.b32 %r2923, %r2924, %r7412, %r45;
	// inline asm
	st.local.v4.u32 	[%rd5], {%r7412, %r7412, %r7412, %r2923};
	st.local.v4.u32 	[%rd4], {%r7412, %r7412, %r7412, %r7412};
	st.local.v4.u32 	[%rd3], {%r7412, %r7412, %r7412, %r7412};
	st.local.v4.u32 	[%rd2], {%r7412, %r7412, %r7412, %r7412};
	st.local.v2.u32 	[%rd1+8], {%r7412, %r7412};
	mov.u64 	%rd277, 0;
	st.local.u64 	[%rd1], %rd277;
	mov.u32 	%r7413, %r7412;
	bra.uni 	BB6_89;

BB6_32:
	setp.eq.s32	%p40, %r754, 11;
	mov.u32 	%r7415, %r7414;
	mov.u32 	%r7416, %r7414;
	mov.u32 	%r7417, %r7414;
	mov.u32 	%r7418, %r7414;
	mov.u32 	%r7419, %r7414;
	mov.u32 	%r7420, %r7414;
	mov.u32 	%r7421, %r7414;
	mov.u32 	%r7422, %r7414;
	mov.u32 	%r7423, %r7414;
	mov.u32 	%r7424, %r7414;
	mov.u32 	%r7425, %r7414;
	mov.u32 	%r7426, %r7414;
	mov.u32 	%r7427, %r7414;
	mov.u32 	%r7428, %r7414;
	mov.u32 	%r7429, %r7414;
	mov.u32 	%r7430, %r7414;
	mov.u32 	%r7431, %r7414;
	mov.u32 	%r7432, %r7414;
	mov.u32 	%r7433, %r7414;
	mov.u32 	%r7434, %r7414;
	mov.u32 	%r7435, %r7414;
	mov.u32 	%r7436, %r7414;
	mov.u32 	%r7437, %r7414;
	mov.u32 	%r7438, %r7414;
	mov.u32 	%r7439, %r7414;
	mov.u32 	%r7440, %r7414;
	mov.u32 	%r7441, %r7414;
	mov.u32 	%r7442, %r7414;
	mov.u32 	%r7443, %r7414;
	mov.u32 	%r7444, %r7414;
	mov.u32 	%r7445, %r7414;
	@%p40 bra 	BB6_33;
	bra.uni 	BB6_94;

BB6_33:
	mov.u32 	%r7412, 0;
	// inline asm
	prmt.b32 %r7422, %r7412, %r44, %r45;
	// inline asm
	ld.local.u32 	%r4236, [%rd55];
	ld.local.u32 	%r4237, [%rd8+8];
	// inline asm
	prmt.b32 %r7423, %r4236, %r4237, %r45;
	// inline asm
	ld.local.u32 	%r4240, [%rd8+8];
	ld.local.u32 	%r4241, [%rd8+4];
	// inline asm
	prmt.b32 %r7424, %r4240, %r4241, %r45;
	// inline asm
	ld.local.v2.u32 	{%r4385, %r4386}, [%rd8];
	// inline asm
	prmt.b32 %r7425, %r4386, %r4385, %r45;
	// inline asm
	ld.local.u32 	%r4248, [%rd8];
	ld.local.u32 	%r4249, [%rd7+12];
	// inline asm
	prmt.b32 %r7418, %r4248, %r4249, %r45;
	// inline asm
	ld.local.v2.u32 	{%r4387, %r4388}, [%rd7+8];
	// inline asm
	prmt.b32 %r7419, %r4388, %r4387, %r45;
	// inline asm
	ld.local.u32 	%r4256, [%rd7+8];
	ld.local.u32 	%r4257, [%rd7+4];
	// inline asm
	prmt.b32 %r7420, %r4256, %r4257, %r45;
	// inline asm
	ld.local.v2.u32 	{%r4389, %r4390}, [%rd7];
	// inline asm
	prmt.b32 %r7421, %r4390, %r4389, %r45;
	// inline asm
	ld.local.u32 	%r4264, [%rd7];
	ld.local.u32 	%r4265, [%rd6+12];
	// inline asm
	prmt.b32 %r7414, %r4264, %r4265, %r45;
	// inline asm
	ld.local.v2.u32 	{%r4391, %r4392}, [%rd6+8];
	// inline asm
	prmt.b32 %r7415, %r4392, %r4391, %r45;
	// inline asm
	ld.local.u32 	%r4272, [%rd6+8];
	ld.local.u32 	%r4273, [%rd6+4];
	// inline asm
	prmt.b32 %r7416, %r4272, %r4273, %r45;
	// inline asm
	ld.local.v2.u32 	{%r4393, %r4394}, [%rd6];
	// inline asm
	prmt.b32 %r7417, %r4394, %r4393, %r45;
	// inline asm
	ld.local.u32 	%r4280, [%rd6];
	ld.local.u32 	%r4281, [%rd5+12];
	// inline asm
	prmt.b32 %r4279, %r4280, %r4281, %r45;
	// inline asm
	st.local.u32 	[%rd55], %r4279;
	ld.local.v2.u32 	{%r4395, %r4396}, [%rd5+8];
	// inline asm
	prmt.b32 %r4283, %r4396, %r4395, %r45;
	// inline asm
	st.local.u32 	[%rd8+8], %r4283;
	ld.local.u32 	%r4288, [%rd5+8];
	ld.local.u32 	%r4289, [%rd5+4];
	// inline asm
	prmt.b32 %r4287, %r4288, %r4289, %r45;
	// inline asm
	st.local.u32 	[%rd8+4], %r4287;
	ld.local.v2.u32 	{%r4397, %r4398}, [%rd5];
	// inline asm
	prmt.b32 %r4291, %r4398, %r4397, %r45;
	// inline asm
	st.local.u32 	[%rd8], %r4291;
	ld.local.u32 	%r4296, [%rd5];
	ld.local.u32 	%r4297, [%rd4+12];
	// inline asm
	prmt.b32 %r4295, %r4296, %r4297, %r45;
	// inline asm
	st.local.u32 	[%rd7+12], %r4295;
	ld.local.v2.u32 	{%r4399, %r4400}, [%rd4+8];
	// inline asm
	prmt.b32 %r4299, %r4400, %r4399, %r45;
	// inline asm
	st.local.u32 	[%rd7+8], %r4299;
	ld.local.u32 	%r4304, [%rd4+8];
	ld.local.u32 	%r4305, [%rd4+4];
	// inline asm
	prmt.b32 %r4303, %r4304, %r4305, %r45;
	// inline asm
	st.local.u32 	[%rd7+4], %r4303;
	ld.local.v2.u32 	{%r4401, %r4402}, [%rd4];
	// inline asm
	prmt.b32 %r4307, %r4402, %r4401, %r45;
	// inline asm
	st.local.u32 	[%rd7], %r4307;
	ld.local.u32 	%r4312, [%rd4];
	ld.local.u32 	%r4313, [%rd3+12];
	// inline asm
	prmt.b32 %r4311, %r4312, %r4313, %r45;
	// inline asm
	st.local.u32 	[%rd6+12], %r4311;
	ld.local.v2.u32 	{%r4403, %r4404}, [%rd3+8];
	// inline asm
	prmt.b32 %r4315, %r4404, %r4403, %r45;
	// inline asm
	st.local.u32 	[%rd6+8], %r4315;
	ld.local.u32 	%r4320, [%rd3+8];
	ld.local.u32 	%r4321, [%rd3+4];
	// inline asm
	prmt.b32 %r4319, %r4320, %r4321, %r45;
	// inline asm
	st.local.u32 	[%rd6+4], %r4319;
	ld.local.v2.u32 	{%r4405, %r4406}, [%rd3];
	// inline asm
	prmt.b32 %r4323, %r4406, %r4405, %r45;
	// inline asm
	st.local.u32 	[%rd6], %r4323;
	ld.local.u32 	%r4328, [%rd3];
	ld.local.u32 	%r4329, [%rd2+12];
	// inline asm
	prmt.b32 %r4327, %r4328, %r4329, %r45;
	// inline asm
	st.local.u32 	[%rd5+12], %r4327;
	ld.local.v2.u32 	{%r4407, %r4408}, [%rd2+8];
	// inline asm
	prmt.b32 %r4331, %r4408, %r4407, %r45;
	// inline asm
	st.local.u32 	[%rd5+8], %r4331;
	ld.local.u32 	%r4336, [%rd2+8];
	ld.local.u32 	%r4337, [%rd2+4];
	// inline asm
	prmt.b32 %r4335, %r4336, %r4337, %r45;
	// inline asm
	st.local.u32 	[%rd5+4], %r4335;
	ld.local.v2.u32 	{%r4409, %r4410}, [%rd2];
	// inline asm
	prmt.b32 %r4339, %r4410, %r4409, %r45;
	// inline asm
	st.local.u32 	[%rd5], %r4339;
	ld.local.u32 	%r4344, [%rd2];
	ld.local.u32 	%r4345, [%rd1+12];
	// inline asm
	prmt.b32 %r4343, %r4344, %r4345, %r45;
	// inline asm
	st.local.u32 	[%rd4+12], %r4343;
	ld.local.v2.u32 	{%r4411, %r4412}, [%rd1+8];
	// inline asm
	prmt.b32 %r4347, %r4412, %r4411, %r45;
	// inline asm
	st.local.u32 	[%rd4+8], %r4347;
	ld.local.u32 	%r4352, [%rd1+8];
	ld.local.u32 	%r4353, [%rd1+4];
	// inline asm
	prmt.b32 %r4351, %r4352, %r4353, %r45;
	// inline asm
	st.local.u32 	[%rd4+4], %r4351;
	ld.local.v2.u32 	{%r4413, %r4414}, [%rd1];
	// inline asm
	prmt.b32 %r4355, %r4414, %r4413, %r45;
	// inline asm
	st.local.u32 	[%rd4], %r4355;
	ld.local.u32 	%r4360, [%rd1];
	// inline asm
	prmt.b32 %r4359, %r4360, %r7412, %r45;
	// inline asm
	st.local.v4.u32 	[%rd3], {%r7412, %r7412, %r7412, %r4359};
	st.local.v4.u32 	[%rd2], {%r7412, %r7412, %r7412, %r7412};
	st.local.v2.u32 	[%rd1+8], {%r7412, %r7412};
	mov.u64 	%rd285, 0;
	st.local.u64 	[%rd1], %rd285;
	mov.u32 	%r7413, %r7412;
	bra.uni 	BB6_87;

BB6_63:
	setp.eq.s32	%p17, %r754, 27;
	mov.u32 	%r7415, %r7414;
	mov.u32 	%r7416, %r7414;
	mov.u32 	%r7417, %r7414;
	mov.u32 	%r7418, %r7414;
	mov.u32 	%r7419, %r7414;
	mov.u32 	%r7420, %r7414;
	mov.u32 	%r7421, %r7414;
	mov.u32 	%r7422, %r7414;
	mov.u32 	%r7423, %r7414;
	mov.u32 	%r7424, %r7414;
	mov.u32 	%r7425, %r7414;
	mov.u32 	%r7426, %r7414;
	mov.u32 	%r7427, %r7414;
	mov.u32 	%r7428, %r7414;
	mov.u32 	%r7429, %r7414;
	mov.u32 	%r7430, %r7414;
	mov.u32 	%r7431, %r7414;
	mov.u32 	%r7432, %r7414;
	mov.u32 	%r7433, %r7414;
	mov.u32 	%r7434, %r7414;
	mov.u32 	%r7435, %r7414;
	mov.u32 	%r7436, %r7414;
	mov.u32 	%r7437, %r7414;
	mov.u32 	%r7438, %r7414;
	mov.u32 	%r7439, %r7414;
	mov.u32 	%r7440, %r7414;
	mov.u32 	%r7441, %r7414;
	mov.u32 	%r7442, %r7414;
	mov.u32 	%r7443, %r7414;
	mov.u32 	%r7444, %r7414;
	mov.u32 	%r7445, %r7414;
	@%p17 bra 	BB6_64;
	bra.uni 	BB6_94;

BB6_64:
	mov.u32 	%r7412, 0;
	// inline asm
	prmt.b32 %r7438, %r7412, %r44, %r45;
	// inline asm
	ld.local.u32 	%r1428, [%rd55];
	ld.local.u32 	%r1429, [%rd8+8];
	// inline asm
	prmt.b32 %r7439, %r1428, %r1429, %r45;
	// inline asm
	ld.local.u32 	%r1432, [%rd8+8];
	ld.local.u32 	%r1433, [%rd8+4];
	// inline asm
	prmt.b32 %r7440, %r1432, %r1433, %r45;
	// inline asm
	ld.local.v2.u32 	{%r1561, %r1562}, [%rd8];
	// inline asm
	prmt.b32 %r7441, %r1562, %r1561, %r45;
	// inline asm
	ld.local.u32 	%r1440, [%rd8];
	ld.local.u32 	%r1441, [%rd7+12];
	// inline asm
	prmt.b32 %r7434, %r1440, %r1441, %r45;
	// inline asm
	ld.local.v2.u32 	{%r1563, %r1564}, [%rd7+8];
	// inline asm
	prmt.b32 %r7435, %r1564, %r1563, %r45;
	// inline asm
	ld.local.u32 	%r1448, [%rd7+8];
	ld.local.u32 	%r1449, [%rd7+4];
	// inline asm
	prmt.b32 %r7436, %r1448, %r1449, %r45;
	// inline asm
	ld.local.v2.u32 	{%r1565, %r1566}, [%rd7];
	// inline asm
	prmt.b32 %r7437, %r1566, %r1565, %r45;
	// inline asm
	ld.local.u32 	%r1456, [%rd7];
	ld.local.u32 	%r1457, [%rd6+12];
	// inline asm
	prmt.b32 %r7430, %r1456, %r1457, %r45;
	// inline asm
	ld.local.v2.u32 	{%r1567, %r1568}, [%rd6+8];
	// inline asm
	prmt.b32 %r7431, %r1568, %r1567, %r45;
	// inline asm
	ld.local.u32 	%r1464, [%rd6+8];
	ld.local.u32 	%r1465, [%rd6+4];
	// inline asm
	prmt.b32 %r7432, %r1464, %r1465, %r45;
	// inline asm
	ld.local.v2.u32 	{%r1569, %r1570}, [%rd6];
	// inline asm
	prmt.b32 %r7433, %r1570, %r1569, %r45;
	// inline asm
	ld.local.u32 	%r1472, [%rd6];
	ld.local.u32 	%r1473, [%rd5+12];
	// inline asm
	prmt.b32 %r7426, %r1472, %r1473, %r45;
	// inline asm
	ld.local.v2.u32 	{%r1571, %r1572}, [%rd5+8];
	// inline asm
	prmt.b32 %r7427, %r1572, %r1571, %r45;
	// inline asm
	ld.local.u32 	%r1480, [%rd5+8];
	ld.local.u32 	%r1481, [%rd5+4];
	// inline asm
	prmt.b32 %r7428, %r1480, %r1481, %r45;
	// inline asm
	ld.local.v2.u32 	{%r1573, %r1574}, [%rd5];
	// inline asm
	prmt.b32 %r7429, %r1574, %r1573, %r45;
	// inline asm
	ld.local.u32 	%r1488, [%rd5];
	ld.local.u32 	%r1489, [%rd4+12];
	// inline asm
	prmt.b32 %r7422, %r1488, %r1489, %r45;
	// inline asm
	ld.local.v2.u32 	{%r1575, %r1576}, [%rd4+8];
	// inline asm
	prmt.b32 %r7423, %r1576, %r1575, %r45;
	// inline asm
	ld.local.u32 	%r1496, [%rd4+8];
	ld.local.u32 	%r1497, [%rd4+4];
	// inline asm
	prmt.b32 %r7424, %r1496, %r1497, %r45;
	// inline asm
	ld.local.v2.u32 	{%r1577, %r1578}, [%rd4];
	// inline asm
	prmt.b32 %r7425, %r1578, %r1577, %r45;
	// inline asm
	ld.local.u32 	%r1504, [%rd4];
	ld.local.u32 	%r1505, [%rd3+12];
	// inline asm
	prmt.b32 %r7418, %r1504, %r1505, %r45;
	// inline asm
	ld.local.v2.u32 	{%r1579, %r1580}, [%rd3+8];
	// inline asm
	prmt.b32 %r7419, %r1580, %r1579, %r45;
	// inline asm
	ld.local.u32 	%r1512, [%rd3+8];
	ld.local.u32 	%r1513, [%rd3+4];
	// inline asm
	prmt.b32 %r7420, %r1512, %r1513, %r45;
	// inline asm
	ld.local.v2.u32 	{%r1581, %r1582}, [%rd3];
	// inline asm
	prmt.b32 %r7421, %r1582, %r1581, %r45;
	// inline asm
	ld.local.u32 	%r1520, [%rd3];
	ld.local.u32 	%r1521, [%rd2+12];
	// inline asm
	prmt.b32 %r7414, %r1520, %r1521, %r45;
	// inline asm
	ld.local.v2.u32 	{%r1583, %r1584}, [%rd2+8];
	// inline asm
	prmt.b32 %r7415, %r1584, %r1583, %r45;
	// inline asm
	ld.local.u32 	%r1528, [%rd2+8];
	ld.local.u32 	%r1529, [%rd2+4];
	// inline asm
	prmt.b32 %r7416, %r1528, %r1529, %r45;
	// inline asm
	ld.local.v2.u32 	{%r1585, %r1586}, [%rd2];
	// inline asm
	prmt.b32 %r7417, %r1586, %r1585, %r45;
	// inline asm
	ld.local.u32 	%r1536, [%rd2];
	ld.local.u32 	%r1537, [%rd1+12];
	// inline asm
	prmt.b32 %r1535, %r1536, %r1537, %r45;
	// inline asm
	st.local.u32 	[%rd55], %r1535;
	ld.local.v2.u32 	{%r1587, %r1588}, [%rd1+8];
	// inline asm
	prmt.b32 %r1539, %r1588, %r1587, %r45;
	// inline asm
	st.local.u32 	[%rd8+8], %r1539;
	ld.local.u32 	%r1544, [%rd1+8];
	ld.local.u32 	%r1545, [%rd1+4];
	// inline asm
	prmt.b32 %r1543, %r1544, %r1545, %r45;
	// inline asm
	st.local.u32 	[%rd8+4], %r1543;
	ld.local.v2.u32 	{%r1589, %r1590}, [%rd1];
	// inline asm
	prmt.b32 %r1547, %r1590, %r1589, %r45;
	// inline asm
	st.local.u32 	[%rd8], %r1547;
	ld.local.u32 	%r1552, [%rd1];
	// inline asm
	prmt.b32 %r1551, %r1552, %r7412, %r45;
	// inline asm
	st.local.v4.u32 	[%rd7], {%r7412, %r7412, %r7412, %r1551};
	st.local.v4.u32 	[%rd6], {%r7412, %r7412, %r7412, %r7412};
	st.local.v4.u32 	[%rd5], {%r7412, %r7412, %r7412, %r7412};
	st.local.v4.u32 	[%rd4], {%r7412, %r7412, %r7412, %r7412};
	st.local.v4.u32 	[%rd3], {%r7412, %r7412, %r7412, %r7412};
	st.local.v4.u32 	[%rd2], {%r7412, %r7412, %r7412, %r7412};
	st.local.v2.u32 	[%rd1+8], {%r7412, %r7412};
	mov.u64 	%rd269, 0;
	st.local.u64 	[%rd1], %rd269;
	mov.u32 	%r7413, %r7412;
	bra.uni 	BB6_91;

BB6_24:
	setp.eq.s32	%p46, %r754, 7;
	mov.u32 	%r7415, %r7414;
	mov.u32 	%r7416, %r7414;
	mov.u32 	%r7417, %r7414;
	mov.u32 	%r7418, %r7414;
	mov.u32 	%r7419, %r7414;
	mov.u32 	%r7420, %r7414;
	mov.u32 	%r7421, %r7414;
	mov.u32 	%r7422, %r7414;
	mov.u32 	%r7423, %r7414;
	mov.u32 	%r7424, %r7414;
	mov.u32 	%r7425, %r7414;
	mov.u32 	%r7426, %r7414;
	mov.u32 	%r7427, %r7414;
	mov.u32 	%r7428, %r7414;
	mov.u32 	%r7429, %r7414;
	mov.u32 	%r7430, %r7414;
	mov.u32 	%r7431, %r7414;
	mov.u32 	%r7432, %r7414;
	mov.u32 	%r7433, %r7414;
	mov.u32 	%r7434, %r7414;
	mov.u32 	%r7435, %r7414;
	mov.u32 	%r7436, %r7414;
	mov.u32 	%r7437, %r7414;
	mov.u32 	%r7438, %r7414;
	mov.u32 	%r7439, %r7414;
	mov.u32 	%r7440, %r7414;
	mov.u32 	%r7441, %r7414;
	mov.u32 	%r7442, %r7414;
	mov.u32 	%r7443, %r7414;
	mov.u32 	%r7444, %r7414;
	mov.u32 	%r7445, %r7414;
	@%p46 bra 	BB6_25;
	bra.uni 	BB6_94;

BB6_25:
	mov.u32 	%r7412, 0;
	// inline asm
	prmt.b32 %r7418, %r7412, %r44, %r45;
	// inline asm
	ld.local.u32 	%r4978, [%rd55];
	ld.local.u32 	%r4979, [%rd8+8];
	// inline asm
	prmt.b32 %r7419, %r4978, %r4979, %r45;
	// inline asm
	ld.local.u32 	%r4982, [%rd8+8];
	ld.local.u32 	%r4983, [%rd8+4];
	// inline asm
	prmt.b32 %r7420, %r4982, %r4983, %r45;
	// inline asm
	ld.local.v2.u32 	{%r5131, %r5132}, [%rd8];
	// inline asm
	prmt.b32 %r7421, %r5132, %r5131, %r45;
	// inline asm
	ld.local.u32 	%r4990, [%rd8];
	ld.local.u32 	%r4991, [%rd7+12];
	// inline asm
	prmt.b32 %r7414, %r4990, %r4991, %r45;
	// inline asm
	ld.local.v2.u32 	{%r5133, %r5134}, [%rd7+8];
	// inline asm
	prmt.b32 %r7415, %r5134, %r5133, %r45;
	// inline asm
	ld.local.u32 	%r4998, [%rd7+8];
	ld.local.u32 	%r4999, [%rd7+4];
	// inline asm
	prmt.b32 %r7416, %r4998, %r4999, %r45;
	// inline asm
	ld.local.v2.u32 	{%r5135, %r5136}, [%rd7];
	// inline asm
	prmt.b32 %r7417, %r5136, %r5135, %r45;
	// inline asm
	ld.local.u32 	%r5006, [%rd7];
	ld.local.u32 	%r5007, [%rd6+12];
	// inline asm
	prmt.b32 %r5005, %r5006, %r5007, %r45;
	// inline asm
	st.local.u32 	[%rd55], %r5005;
	ld.local.v2.u32 	{%r5137, %r5138}, [%rd6+8];
	// inline asm
	prmt.b32 %r5009, %r5138, %r5137, %r45;
	// inline asm
	st.local.u32 	[%rd8+8], %r5009;
	ld.local.u32 	%r5014, [%rd6+8];
	ld.local.u32 	%r5015, [%rd6+4];
	// inline asm
	prmt.b32 %r5013, %r5014, %r5015, %r45;
	// inline asm
	st.local.u32 	[%rd8+4], %r5013;
	ld.local.v2.u32 	{%r5139, %r5140}, [%rd6];
	// inline asm
	prmt.b32 %r5017, %r5140, %r5139, %r45;
	// inline asm
	st.local.u32 	[%rd8], %r5017;
	ld.local.u32 	%r5022, [%rd6];
	ld.local.u32 	%r5023, [%rd5+12];
	// inline asm
	prmt.b32 %r5021, %r5022, %r5023, %r45;
	// inline asm
	st.local.u32 	[%rd7+12], %r5021;
	ld.local.v2.u32 	{%r5141, %r5142}, [%rd5+8];
	// inline asm
	prmt.b32 %r5025, %r5142, %r5141, %r45;
	// inline asm
	st.local.u32 	[%rd7+8], %r5025;
	ld.local.u32 	%r5030, [%rd5+8];
	ld.local.u32 	%r5031, [%rd5+4];
	// inline asm
	prmt.b32 %r5029, %r5030, %r5031, %r45;
	// inline asm
	st.local.u32 	[%rd7+4], %r5029;
	ld.local.v2.u32 	{%r5143, %r5144}, [%rd5];
	// inline asm
	prmt.b32 %r5033, %r5144, %r5143, %r45;
	// inline asm
	st.local.u32 	[%rd7], %r5033;
	ld.local.u32 	%r5038, [%rd5];
	ld.local.u32 	%r5039, [%rd4+12];
	// inline asm
	prmt.b32 %r5037, %r5038, %r5039, %r45;
	// inline asm
	st.local.u32 	[%rd6+12], %r5037;
	ld.local.v2.u32 	{%r5145, %r5146}, [%rd4+8];
	// inline asm
	prmt.b32 %r5041, %r5146, %r5145, %r45;
	// inline asm
	st.local.u32 	[%rd6+8], %r5041;
	ld.local.u32 	%r5046, [%rd4+8];
	ld.local.u32 	%r5047, [%rd4+4];
	// inline asm
	prmt.b32 %r5045, %r5046, %r5047, %r45;
	// inline asm
	st.local.u32 	[%rd6+4], %r5045;
	ld.local.v2.u32 	{%r5147, %r5148}, [%rd4];
	// inline asm
	prmt.b32 %r5049, %r5148, %r5147, %r45;
	// inline asm
	st.local.u32 	[%rd6], %r5049;
	ld.local.u32 	%r5054, [%rd4];
	ld.local.u32 	%r5055, [%rd3+12];
	// inline asm
	prmt.b32 %r5053, %r5054, %r5055, %r45;
	// inline asm
	st.local.u32 	[%rd5+12], %r5053;
	ld.local.v2.u32 	{%r5149, %r5150}, [%rd3+8];
	// inline asm
	prmt.b32 %r5057, %r5150, %r5149, %r45;
	// inline asm
	st.local.u32 	[%rd5+8], %r5057;
	ld.local.u32 	%r5062, [%rd3+8];
	ld.local.u32 	%r5063, [%rd3+4];
	// inline asm
	prmt.b32 %r5061, %r5062, %r5063, %r45;
	// inline asm
	st.local.u32 	[%rd5+4], %r5061;
	ld.local.v2.u32 	{%r5151, %r5152}, [%rd3];
	// inline asm
	prmt.b32 %r5065, %r5152, %r5151, %r45;
	// inline asm
	st.local.u32 	[%rd5], %r5065;
	ld.local.u32 	%r5070, [%rd3];
	ld.local.u32 	%r5071, [%rd2+12];
	// inline asm
	prmt.b32 %r5069, %r5070, %r5071, %r45;
	// inline asm
	st.local.u32 	[%rd4+12], %r5069;
	ld.local.v2.u32 	{%r5153, %r5154}, [%rd2+8];
	// inline asm
	prmt.b32 %r5073, %r5154, %r5153, %r45;
	// inline asm
	st.local.u32 	[%rd4+8], %r5073;
	ld.local.u32 	%r5078, [%rd2+8];
	ld.local.u32 	%r5079, [%rd2+4];
	// inline asm
	prmt.b32 %r5077, %r5078, %r5079, %r45;
	// inline asm
	st.local.u32 	[%rd4+4], %r5077;
	ld.local.v2.u32 	{%r5155, %r5156}, [%rd2];
	// inline asm
	prmt.b32 %r5081, %r5156, %r5155, %r45;
	// inline asm
	st.local.u32 	[%rd4], %r5081;
	ld.local.u32 	%r5086, [%rd2];
	ld.local.u32 	%r5087, [%rd1+12];
	// inline asm
	prmt.b32 %r5085, %r5086, %r5087, %r45;
	// inline asm
	st.local.u32 	[%rd3+12], %r5085;
	ld.local.v2.u32 	{%r5157, %r5158}, [%rd1+8];
	// inline asm
	prmt.b32 %r5089, %r5158, %r5157, %r45;
	// inline asm
	st.local.u32 	[%rd3+8], %r5089;
	ld.local.u32 	%r5094, [%rd1+8];
	ld.local.u32 	%r5095, [%rd1+4];
	// inline asm
	prmt.b32 %r5093, %r5094, %r5095, %r45;
	// inline asm
	st.local.u32 	[%rd3+4], %r5093;
	ld.local.v2.u32 	{%r5159, %r5160}, [%rd1];
	// inline asm
	prmt.b32 %r5097, %r5160, %r5159, %r45;
	// inline asm
	st.local.u32 	[%rd3], %r5097;
	ld.local.u32 	%r5102, [%rd1];
	// inline asm
	prmt.b32 %r5101, %r5102, %r7412, %r45;
	// inline asm
	st.local.v4.u32 	[%rd2], {%r7412, %r7412, %r7412, %r5101};
	st.local.v2.u32 	[%rd1+8], {%r7412, %r7412};
	mov.u64 	%rd289, 0;
	st.local.u64 	[%rd1], %rd289;
	mov.u32 	%r7413, %r7412;

BB6_86:
	mov.u32 	%r7422, %r7412;
	mov.u32 	%r7423, %r7412;
	mov.u32 	%r7424, %r7412;
	mov.u32 	%r7425, %r7412;

BB6_87:
	mov.u32 	%r7426, %r7412;
	mov.u32 	%r7427, %r7412;
	mov.u32 	%r7428, %r7412;
	mov.u32 	%r7429, %r7412;

BB6_88:
	mov.u32 	%r7430, %r7412;
	mov.u32 	%r7431, %r7412;
	mov.u32 	%r7432, %r7412;
	mov.u32 	%r7433, %r7412;

BB6_89:
	mov.u32 	%r7434, %r7412;
	mov.u32 	%r7435, %r7412;
	mov.u32 	%r7436, %r7412;
	mov.u32 	%r7437, %r7412;

BB6_90:
	mov.u32 	%r7438, %r7412;
	mov.u32 	%r7439, %r7412;
	mov.u32 	%r7440, %r7412;
	mov.u32 	%r7441, %r7412;

BB6_91:
	mov.u32 	%r7442, %r7412;
	mov.u32 	%r7443, %r7412;
	mov.u32 	%r7444, %r7412;
	mov.u32 	%r7445, %r7412;

BB6_94:
	ld.const.u64 	%rd1352, [k_sha512+120];
	ld.const.u64 	%rd1351, [k_sha512+112];
	ld.const.u64 	%rd1350, [k_sha512+104];
	ld.const.u64 	%rd1349, [k_sha512+96];
	ld.const.u64 	%rd1348, [k_sha512+88];
	ld.const.u64 	%rd1347, [k_sha512+80];
	ld.const.u64 	%rd1346, [k_sha512+72];
	ld.const.u64 	%rd1345, [k_sha512+64];
	ld.const.u64 	%rd1344, [k_sha512+56];
	ld.const.u64 	%rd1343, [k_sha512+48];
	ld.const.u64 	%rd1342, [k_sha512+40];
	ld.const.u64 	%rd1341, [k_sha512+32];
	ld.const.u64 	%rd1340, [k_sha512+24];
	ld.const.u64 	%rd1339, [k_sha512+16];
	ld.const.u64 	%rd1338, [k_sha512+8];
	ld.const.u64 	%rd1337, [k_sha512];
	ld.local.u32 	%r6503, [%rd21];
	or.b32  	%r6504, %r6503, %r7413;
	st.local.u32 	[%rd21], %r6504;
	ld.local.u32 	%r6505, [%rd22];
	or.b32  	%r6506, %r6505, %r7412;
	st.local.u32 	[%rd22], %r6506;
	ld.local.u32 	%r6507, [%rd23];
	ld.local.v2.u32 	{%r6508, %r6509}, [%rd1+8];
	or.b32  	%r6511, %r6507, %r6508;
	st.local.u32 	[%rd23], %r6511;
	ld.local.u32 	%r6513, [%rd24];
	or.b32  	%r6514, %r6513, %r6509;
	st.local.u32 	[%rd24], %r6514;
	ld.local.u32 	%r6515, [%rd25];
	ld.local.v4.u32 	{%r6516, %r6517, %r6518, %r6519}, [%rd2];
	or.b32  	%r6521, %r6515, %r6516;
	st.local.u32 	[%rd25], %r6521;
	ld.local.u32 	%r6522, [%rd26];
	or.b32  	%r6524, %r6522, %r6517;
	st.local.u32 	[%rd26], %r6524;
	ld.local.u32 	%r6525, [%rd27];
	or.b32  	%r6527, %r6525, %r6518;
	st.local.u32 	[%rd27], %r6527;
	ld.local.u32 	%r6529, [%rd28];
	or.b32  	%r6530, %r6529, %r6519;
	st.local.u32 	[%rd28], %r6530;
	ld.local.u32 	%r6531, [%rd29];
	ld.local.v4.u32 	{%r6532, %r6533, %r6534, %r6535}, [%rd3];
	or.b32  	%r6537, %r6531, %r6532;
	st.local.u32 	[%rd29], %r6537;
	ld.local.u32 	%r6538, [%rd30];
	or.b32  	%r6540, %r6538, %r6533;
	st.local.u32 	[%rd30], %r6540;
	ld.local.u32 	%r6541, [%rd31];
	or.b32  	%r6543, %r6541, %r6534;
	st.local.u32 	[%rd31], %r6543;
	ld.local.u32 	%r6545, [%rd32];
	or.b32  	%r6546, %r6545, %r6535;
	st.local.u32 	[%rd32], %r6546;
	ld.local.u32 	%r6547, [%rd33];
	ld.local.v4.u32 	{%r6548, %r6549, %r6550, %r6551}, [%rd4];
	or.b32  	%r6553, %r6547, %r6548;
	st.local.u32 	[%rd33], %r6553;
	ld.local.u32 	%r6554, [%rd34];
	or.b32  	%r6556, %r6554, %r6549;
	st.local.u32 	[%rd34], %r6556;
	ld.local.u32 	%r6557, [%rd35];
	or.b32  	%r6559, %r6557, %r6550;
	st.local.u32 	[%rd35], %r6559;
	ld.local.u32 	%r6561, [%rd36];
	or.b32  	%r6562, %r6561, %r6551;
	st.local.u32 	[%rd36], %r6562;
	ld.local.u32 	%r6563, [%rd37];
	ld.local.v4.u32 	{%r6564, %r6565, %r6566, %r6567}, [%rd5];
	or.b32  	%r6569, %r6563, %r6564;
	st.local.u32 	[%rd37], %r6569;
	ld.local.u32 	%r6570, [%rd38];
	or.b32  	%r6572, %r6570, %r6565;
	st.local.u32 	[%rd38], %r6572;
	ld.local.u32 	%r6573, [%rd39];
	or.b32  	%r6575, %r6573, %r6566;
	st.local.u32 	[%rd39], %r6575;
	ld.local.u32 	%r6577, [%rd40];
	or.b32  	%r6578, %r6577, %r6567;
	st.local.u32 	[%rd40], %r6578;
	ld.local.u32 	%r6579, [%rd41];
	ld.local.v4.u32 	{%r6580, %r6581, %r6582, %r6583}, [%rd6];
	or.b32  	%r6585, %r6579, %r6580;
	st.local.u32 	[%rd41], %r6585;
	ld.local.u32 	%r6586, [%rd42];
	or.b32  	%r6588, %r6586, %r6581;
	st.local.u32 	[%rd42], %r6588;
	ld.local.u32 	%r6589, [%rd43];
	or.b32  	%r6591, %r6589, %r6582;
	st.local.u32 	[%rd43], %r6591;
	ld.local.u32 	%r6593, [%rd44];
	or.b32  	%r6594, %r6593, %r6583;
	st.local.u32 	[%rd44], %r6594;
	ld.local.u32 	%r6595, [%rd45];
	ld.local.v4.u32 	{%r6596, %r6597, %r6598, %r6599}, [%rd7];
	or.b32  	%r6601, %r6595, %r6596;
	st.local.u32 	[%rd45], %r6601;
	ld.local.u32 	%r6602, [%rd46];
	or.b32  	%r6604, %r6602, %r6597;
	st.local.u32 	[%rd46], %r6604;
	ld.local.u32 	%r6605, [%rd47];
	or.b32  	%r6607, %r6605, %r6598;
	st.local.u32 	[%rd47], %r6607;
	ld.local.u32 	%r6609, [%rd48];
	or.b32  	%r6610, %r6609, %r6599;
	st.local.u32 	[%rd48], %r6610;
	ld.local.u32 	%r6611, [%rd49];
	ld.local.v4.u32 	{%r6612, %r6613, %r6614, %r6615}, [%rd8];
	or.b32  	%r6617, %r6611, %r6612;
	st.local.u32 	[%rd49], %r6617;
	ld.local.u32 	%r6618, [%rd50];
	or.b32  	%r6620, %r6618, %r6613;
	st.local.u32 	[%rd50], %r6620;
	ld.local.u32 	%r6622, [%rd51];
	or.b32  	%r6623, %r6622, %r6614;
	st.local.u32 	[%rd51], %r6623;
	ld.local.u32 	%r6624, [%rd52];
	ld.local.u32 	%r6625, [%rd55];
	or.b32  	%r6626, %r6624, %r6625;
	st.local.u32 	[%rd52], %r6626;
	mov.b64	%rd1375, {%r6506, %r6504};
	mov.b64	%rd1376, {%r6514, %r6511};
	mov.b64	%rd1377, {%r6524, %r6521};
	mov.b64	%rd1378, {%r6530, %r6527};
	mov.b64	%rd1379, {%r6540, %r6537};
	mov.b64	%rd1380, {%r6546, %r6543};
	mov.b64	%rd1381, {%r6556, %r6553};
	mov.b64	%rd1382, {%r6562, %r6559};
	mov.b64	%rd1366, {%r6572, %r6569};
	mov.b64	%rd1365, {%r6578, %r6575};
	mov.b64	%rd1364, {%r6588, %r6585};
	mov.b64	%rd1363, {%r6594, %r6591};
	mov.b64	%rd1362, {%r6604, %r6601};
	mov.b64	%rd1361, {%r6610, %r6607};
	mov.b64	%rd1360, {%r6620, %r6617};
	mov.b64	%rd1359, {%r6626, %r6623};
	ld.local.u64 	%rd90, [%rd17];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6627,%dummy}, %rd90;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6628}, %rd90;
	}
	shf.r.wrap.b32 	%r6629, %r6628, %r6627, 14;
	shf.r.wrap.b32 	%r6630, %r6627, %r6628, 14;
	mov.b64 	%rd295, {%r6630, %r6629};
	shf.r.wrap.b32 	%r6631, %r6628, %r6627, 18;
	shf.r.wrap.b32 	%r6632, %r6627, %r6628, 18;
	mov.b64 	%rd296, {%r6632, %r6631};
	xor.b64  	%rd297, %rd296, %rd295;
	shf.l.wrap.b32 	%r6633, %r6627, %r6628, 23;
	shf.l.wrap.b32 	%r6634, %r6628, %r6627, 23;
	mov.b64 	%rd298, {%r6634, %r6633};
	xor.b64  	%rd299, %rd297, %rd298;
	ld.local.u64 	%rd91, [%rd19];
	ld.local.u64 	%rd92, [%rd18];
	xor.b64  	%rd300, %rd91, %rd92;
	and.b64  	%rd301, %rd300, %rd90;
	xor.b64  	%rd302, %rd301, %rd91;
	ld.local.u64 	%rd93, [%rd20];
	add.s64 	%rd303, %rd302, %rd93;
	add.s64 	%rd304, %rd303, %rd1375;
	add.s64 	%rd305, %rd304, %rd1337;
	add.s64 	%rd306, %rd305, %rd299;
	ld.local.u64 	%rd94, [%rd16];
	add.s64 	%rd307, %rd306, %rd94;
	ld.local.u64 	%rd95, [%rd10];
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6635,%dummy}, %rd95;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6636}, %rd95;
	}
	shf.r.wrap.b32 	%r6637, %r6636, %r6635, 28;
	shf.r.wrap.b32 	%r6638, %r6635, %r6636, 28;
	mov.b64 	%rd308, {%r6638, %r6637};
	shf.l.wrap.b32 	%r6639, %r6635, %r6636, 30;
	shf.l.wrap.b32 	%r6640, %r6636, %r6635, 30;
	mov.b64 	%rd309, {%r6640, %r6639};
	xor.b64  	%rd310, %rd309, %rd308;
	shf.l.wrap.b32 	%r6641, %r6635, %r6636, 25;
	shf.l.wrap.b32 	%r6642, %r6636, %r6635, 25;
	mov.b64 	%rd311, {%r6642, %r6641};
	xor.b64  	%rd312, %rd310, %rd311;
	ld.local.u64 	%rd96, [%rd15];
	xor.b64  	%rd313, %rd96, %rd95;
	ld.local.u64 	%rd97, [%rd14];
	xor.b64  	%rd314, %rd97, %rd95;
	and.b64  	%rd315, %rd313, %rd314;
	xor.b64  	%rd316, %rd315, %rd95;
	add.s64 	%rd317, %rd306, %rd316;
	add.s64 	%rd318, %rd317, %rd312;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6643,%dummy}, %rd307;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6644}, %rd307;
	}
	shf.r.wrap.b32 	%r6645, %r6644, %r6643, 14;
	shf.r.wrap.b32 	%r6646, %r6643, %r6644, 14;
	mov.b64 	%rd319, {%r6646, %r6645};
	shf.r.wrap.b32 	%r6647, %r6644, %r6643, 18;
	shf.r.wrap.b32 	%r6648, %r6643, %r6644, 18;
	mov.b64 	%rd320, {%r6648, %r6647};
	xor.b64  	%rd321, %rd320, %rd319;
	shf.l.wrap.b32 	%r6649, %r6643, %r6644, 23;
	shf.l.wrap.b32 	%r6650, %r6644, %r6643, 23;
	mov.b64 	%rd322, {%r6650, %r6649};
	xor.b64  	%rd323, %rd321, %rd322;
	xor.b64  	%rd324, %rd92, %rd90;
	and.b64  	%rd325, %rd307, %rd324;
	xor.b64  	%rd326, %rd325, %rd92;
	add.s64 	%rd327, %rd1376, %rd91;
	add.s64 	%rd328, %rd327, %rd1338;
	add.s64 	%rd329, %rd328, %rd326;
	add.s64 	%rd330, %rd329, %rd323;
	add.s64 	%rd331, %rd330, %rd96;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6651,%dummy}, %rd318;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6652}, %rd318;
	}
	shf.r.wrap.b32 	%r6653, %r6652, %r6651, 28;
	shf.r.wrap.b32 	%r6654, %r6651, %r6652, 28;
	mov.b64 	%rd332, {%r6654, %r6653};
	shf.l.wrap.b32 	%r6655, %r6651, %r6652, 30;
	shf.l.wrap.b32 	%r6656, %r6652, %r6651, 30;
	mov.b64 	%rd333, {%r6656, %r6655};
	xor.b64  	%rd334, %rd333, %rd332;
	shf.l.wrap.b32 	%r6657, %r6651, %r6652, 25;
	shf.l.wrap.b32 	%r6658, %r6652, %r6651, 25;
	mov.b64 	%rd335, {%r6658, %r6657};
	xor.b64  	%rd336, %rd334, %rd335;
	xor.b64  	%rd337, %rd318, %rd97;
	xor.b64  	%rd338, %rd318, %rd95;
	and.b64  	%rd339, %rd338, %rd337;
	xor.b64  	%rd340, %rd339, %rd318;
	add.s64 	%rd341, %rd330, %rd340;
	add.s64 	%rd342, %rd341, %rd336;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6659,%dummy}, %rd331;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6660}, %rd331;
	}
	shf.r.wrap.b32 	%r6661, %r6660, %r6659, 14;
	shf.r.wrap.b32 	%r6662, %r6659, %r6660, 14;
	mov.b64 	%rd343, {%r6662, %r6661};
	shf.r.wrap.b32 	%r6663, %r6660, %r6659, 18;
	shf.r.wrap.b32 	%r6664, %r6659, %r6660, 18;
	mov.b64 	%rd344, {%r6664, %r6663};
	xor.b64  	%rd345, %rd344, %rd343;
	shf.l.wrap.b32 	%r6665, %r6659, %r6660, 23;
	shf.l.wrap.b32 	%r6666, %r6660, %r6659, 23;
	mov.b64 	%rd346, {%r6666, %r6665};
	xor.b64  	%rd347, %rd345, %rd346;
	xor.b64  	%rd348, %rd307, %rd90;
	and.b64  	%rd349, %rd331, %rd348;
	xor.b64  	%rd350, %rd349, %rd90;
	add.s64 	%rd351, %rd1377, %rd92;
	add.s64 	%rd352, %rd351, %rd1339;
	add.s64 	%rd353, %rd352, %rd350;
	add.s64 	%rd354, %rd353, %rd347;
	add.s64 	%rd355, %rd354, %rd97;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6667,%dummy}, %rd342;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6668}, %rd342;
	}
	shf.r.wrap.b32 	%r6669, %r6668, %r6667, 28;
	shf.r.wrap.b32 	%r6670, %r6667, %r6668, 28;
	mov.b64 	%rd356, {%r6670, %r6669};
	shf.l.wrap.b32 	%r6671, %r6667, %r6668, 30;
	shf.l.wrap.b32 	%r6672, %r6668, %r6667, 30;
	mov.b64 	%rd357, {%r6672, %r6671};
	xor.b64  	%rd358, %rd357, %rd356;
	shf.l.wrap.b32 	%r6673, %r6667, %r6668, 25;
	shf.l.wrap.b32 	%r6674, %r6668, %r6667, 25;
	mov.b64 	%rd359, {%r6674, %r6673};
	xor.b64  	%rd360, %rd358, %rd359;
	xor.b64  	%rd361, %rd342, %rd95;
	xor.b64  	%rd362, %rd342, %rd318;
	and.b64  	%rd363, %rd362, %rd361;
	xor.b64  	%rd364, %rd363, %rd342;
	add.s64 	%rd365, %rd354, %rd364;
	add.s64 	%rd366, %rd365, %rd360;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6675,%dummy}, %rd355;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6676}, %rd355;
	}
	shf.r.wrap.b32 	%r6677, %r6676, %r6675, 14;
	shf.r.wrap.b32 	%r6678, %r6675, %r6676, 14;
	mov.b64 	%rd367, {%r6678, %r6677};
	shf.r.wrap.b32 	%r6679, %r6676, %r6675, 18;
	shf.r.wrap.b32 	%r6680, %r6675, %r6676, 18;
	mov.b64 	%rd368, {%r6680, %r6679};
	xor.b64  	%rd369, %rd368, %rd367;
	shf.l.wrap.b32 	%r6681, %r6675, %r6676, 23;
	shf.l.wrap.b32 	%r6682, %r6676, %r6675, 23;
	mov.b64 	%rd370, {%r6682, %r6681};
	xor.b64  	%rd371, %rd369, %rd370;
	xor.b64  	%rd372, %rd331, %rd307;
	and.b64  	%rd373, %rd355, %rd372;
	xor.b64  	%rd374, %rd373, %rd307;
	add.s64 	%rd375, %rd1378, %rd90;
	add.s64 	%rd376, %rd375, %rd1340;
	add.s64 	%rd377, %rd376, %rd374;
	add.s64 	%rd378, %rd377, %rd371;
	add.s64 	%rd379, %rd378, %rd95;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6683,%dummy}, %rd366;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6684}, %rd366;
	}
	shf.r.wrap.b32 	%r6685, %r6684, %r6683, 28;
	shf.r.wrap.b32 	%r6686, %r6683, %r6684, 28;
	mov.b64 	%rd380, {%r6686, %r6685};
	shf.l.wrap.b32 	%r6687, %r6683, %r6684, 30;
	shf.l.wrap.b32 	%r6688, %r6684, %r6683, 30;
	mov.b64 	%rd381, {%r6688, %r6687};
	xor.b64  	%rd382, %rd381, %rd380;
	shf.l.wrap.b32 	%r6689, %r6683, %r6684, 25;
	shf.l.wrap.b32 	%r6690, %r6684, %r6683, 25;
	mov.b64 	%rd383, {%r6690, %r6689};
	xor.b64  	%rd384, %rd382, %rd383;
	xor.b64  	%rd385, %rd366, %rd318;
	xor.b64  	%rd386, %rd366, %rd342;
	and.b64  	%rd387, %rd386, %rd385;
	xor.b64  	%rd388, %rd387, %rd366;
	add.s64 	%rd389, %rd378, %rd388;
	add.s64 	%rd390, %rd389, %rd384;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6691,%dummy}, %rd379;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6692}, %rd379;
	}
	shf.r.wrap.b32 	%r6693, %r6692, %r6691, 14;
	shf.r.wrap.b32 	%r6694, %r6691, %r6692, 14;
	mov.b64 	%rd391, {%r6694, %r6693};
	shf.r.wrap.b32 	%r6695, %r6692, %r6691, 18;
	shf.r.wrap.b32 	%r6696, %r6691, %r6692, 18;
	mov.b64 	%rd392, {%r6696, %r6695};
	xor.b64  	%rd393, %rd392, %rd391;
	shf.l.wrap.b32 	%r6697, %r6691, %r6692, 23;
	shf.l.wrap.b32 	%r6698, %r6692, %r6691, 23;
	mov.b64 	%rd394, {%r6698, %r6697};
	xor.b64  	%rd395, %rd393, %rd394;
	xor.b64  	%rd396, %rd355, %rd331;
	and.b64  	%rd397, %rd379, %rd396;
	xor.b64  	%rd398, %rd397, %rd331;
	add.s64 	%rd399, %rd307, %rd1379;
	add.s64 	%rd400, %rd399, %rd1341;
	add.s64 	%rd401, %rd400, %rd398;
	add.s64 	%rd402, %rd401, %rd395;
	add.s64 	%rd403, %rd402, %rd318;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6699,%dummy}, %rd390;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6700}, %rd390;
	}
	shf.r.wrap.b32 	%r6701, %r6700, %r6699, 28;
	shf.r.wrap.b32 	%r6702, %r6699, %r6700, 28;
	mov.b64 	%rd404, {%r6702, %r6701};
	shf.l.wrap.b32 	%r6703, %r6699, %r6700, 30;
	shf.l.wrap.b32 	%r6704, %r6700, %r6699, 30;
	mov.b64 	%rd405, {%r6704, %r6703};
	xor.b64  	%rd406, %rd405, %rd404;
	shf.l.wrap.b32 	%r6705, %r6699, %r6700, 25;
	shf.l.wrap.b32 	%r6706, %r6700, %r6699, 25;
	mov.b64 	%rd407, {%r6706, %r6705};
	xor.b64  	%rd408, %rd406, %rd407;
	xor.b64  	%rd409, %rd390, %rd342;
	xor.b64  	%rd410, %rd390, %rd366;
	and.b64  	%rd411, %rd410, %rd409;
	xor.b64  	%rd412, %rd411, %rd390;
	add.s64 	%rd413, %rd402, %rd412;
	add.s64 	%rd414, %rd413, %rd408;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6707,%dummy}, %rd403;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6708}, %rd403;
	}
	shf.r.wrap.b32 	%r6709, %r6708, %r6707, 14;
	shf.r.wrap.b32 	%r6710, %r6707, %r6708, 14;
	mov.b64 	%rd415, {%r6710, %r6709};
	shf.r.wrap.b32 	%r6711, %r6708, %r6707, 18;
	shf.r.wrap.b32 	%r6712, %r6707, %r6708, 18;
	mov.b64 	%rd416, {%r6712, %r6711};
	xor.b64  	%rd417, %rd416, %rd415;
	shf.l.wrap.b32 	%r6713, %r6707, %r6708, 23;
	shf.l.wrap.b32 	%r6714, %r6708, %r6707, 23;
	mov.b64 	%rd418, {%r6714, %r6713};
	xor.b64  	%rd419, %rd417, %rd418;
	xor.b64  	%rd420, %rd379, %rd355;
	and.b64  	%rd421, %rd403, %rd420;
	xor.b64  	%rd422, %rd421, %rd355;
	add.s64 	%rd423, %rd331, %rd1380;
	add.s64 	%rd424, %rd423, %rd1342;
	add.s64 	%rd425, %rd424, %rd422;
	add.s64 	%rd426, %rd425, %rd419;
	add.s64 	%rd427, %rd426, %rd342;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6715,%dummy}, %rd414;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6716}, %rd414;
	}
	shf.r.wrap.b32 	%r6717, %r6716, %r6715, 28;
	shf.r.wrap.b32 	%r6718, %r6715, %r6716, 28;
	mov.b64 	%rd428, {%r6718, %r6717};
	shf.l.wrap.b32 	%r6719, %r6715, %r6716, 30;
	shf.l.wrap.b32 	%r6720, %r6716, %r6715, 30;
	mov.b64 	%rd429, {%r6720, %r6719};
	xor.b64  	%rd430, %rd429, %rd428;
	shf.l.wrap.b32 	%r6721, %r6715, %r6716, 25;
	shf.l.wrap.b32 	%r6722, %r6716, %r6715, 25;
	mov.b64 	%rd431, {%r6722, %r6721};
	xor.b64  	%rd432, %rd430, %rd431;
	xor.b64  	%rd433, %rd414, %rd366;
	xor.b64  	%rd434, %rd414, %rd390;
	and.b64  	%rd435, %rd434, %rd433;
	xor.b64  	%rd436, %rd435, %rd414;
	add.s64 	%rd437, %rd426, %rd436;
	add.s64 	%rd438, %rd437, %rd432;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6723,%dummy}, %rd427;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6724}, %rd427;
	}
	shf.r.wrap.b32 	%r6725, %r6724, %r6723, 14;
	shf.r.wrap.b32 	%r6726, %r6723, %r6724, 14;
	mov.b64 	%rd439, {%r6726, %r6725};
	shf.r.wrap.b32 	%r6727, %r6724, %r6723, 18;
	shf.r.wrap.b32 	%r6728, %r6723, %r6724, 18;
	mov.b64 	%rd440, {%r6728, %r6727};
	xor.b64  	%rd441, %rd440, %rd439;
	shf.l.wrap.b32 	%r6729, %r6723, %r6724, 23;
	shf.l.wrap.b32 	%r6730, %r6724, %r6723, 23;
	mov.b64 	%rd442, {%r6730, %r6729};
	xor.b64  	%rd443, %rd441, %rd442;
	xor.b64  	%rd444, %rd403, %rd379;
	and.b64  	%rd445, %rd427, %rd444;
	xor.b64  	%rd446, %rd445, %rd379;
	add.s64 	%rd447, %rd355, %rd1381;
	add.s64 	%rd448, %rd447, %rd1343;
	add.s64 	%rd449, %rd448, %rd446;
	add.s64 	%rd450, %rd449, %rd443;
	add.s64 	%rd451, %rd450, %rd366;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6731,%dummy}, %rd438;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6732}, %rd438;
	}
	shf.r.wrap.b32 	%r6733, %r6732, %r6731, 28;
	shf.r.wrap.b32 	%r6734, %r6731, %r6732, 28;
	mov.b64 	%rd452, {%r6734, %r6733};
	shf.l.wrap.b32 	%r6735, %r6731, %r6732, 30;
	shf.l.wrap.b32 	%r6736, %r6732, %r6731, 30;
	mov.b64 	%rd453, {%r6736, %r6735};
	xor.b64  	%rd454, %rd453, %rd452;
	shf.l.wrap.b32 	%r6737, %r6731, %r6732, 25;
	shf.l.wrap.b32 	%r6738, %r6732, %r6731, 25;
	mov.b64 	%rd455, {%r6738, %r6737};
	xor.b64  	%rd456, %rd454, %rd455;
	xor.b64  	%rd457, %rd438, %rd390;
	xor.b64  	%rd458, %rd438, %rd414;
	and.b64  	%rd459, %rd458, %rd457;
	xor.b64  	%rd460, %rd459, %rd438;
	add.s64 	%rd461, %rd450, %rd460;
	add.s64 	%rd462, %rd461, %rd456;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6739,%dummy}, %rd451;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6740}, %rd451;
	}
	shf.r.wrap.b32 	%r6741, %r6740, %r6739, 14;
	shf.r.wrap.b32 	%r6742, %r6739, %r6740, 14;
	mov.b64 	%rd463, {%r6742, %r6741};
	shf.r.wrap.b32 	%r6743, %r6740, %r6739, 18;
	shf.r.wrap.b32 	%r6744, %r6739, %r6740, 18;
	mov.b64 	%rd464, {%r6744, %r6743};
	xor.b64  	%rd465, %rd464, %rd463;
	shf.l.wrap.b32 	%r6745, %r6739, %r6740, 23;
	shf.l.wrap.b32 	%r6746, %r6740, %r6739, 23;
	mov.b64 	%rd466, {%r6746, %r6745};
	xor.b64  	%rd467, %rd465, %rd466;
	xor.b64  	%rd468, %rd427, %rd403;
	and.b64  	%rd469, %rd451, %rd468;
	xor.b64  	%rd470, %rd469, %rd403;
	add.s64 	%rd471, %rd379, %rd1382;
	add.s64 	%rd472, %rd471, %rd1344;
	add.s64 	%rd473, %rd472, %rd470;
	add.s64 	%rd474, %rd473, %rd467;
	add.s64 	%rd475, %rd474, %rd390;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6747,%dummy}, %rd462;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6748}, %rd462;
	}
	shf.r.wrap.b32 	%r6749, %r6748, %r6747, 28;
	shf.r.wrap.b32 	%r6750, %r6747, %r6748, 28;
	mov.b64 	%rd476, {%r6750, %r6749};
	shf.l.wrap.b32 	%r6751, %r6747, %r6748, 30;
	shf.l.wrap.b32 	%r6752, %r6748, %r6747, 30;
	mov.b64 	%rd477, {%r6752, %r6751};
	xor.b64  	%rd478, %rd477, %rd476;
	shf.l.wrap.b32 	%r6753, %r6747, %r6748, 25;
	shf.l.wrap.b32 	%r6754, %r6748, %r6747, 25;
	mov.b64 	%rd479, {%r6754, %r6753};
	xor.b64  	%rd480, %rd478, %rd479;
	xor.b64  	%rd481, %rd462, %rd414;
	xor.b64  	%rd482, %rd462, %rd438;
	and.b64  	%rd483, %rd482, %rd481;
	xor.b64  	%rd484, %rd483, %rd462;
	add.s64 	%rd485, %rd474, %rd484;
	add.s64 	%rd486, %rd485, %rd480;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6755,%dummy}, %rd475;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6756}, %rd475;
	}
	shf.r.wrap.b32 	%r6757, %r6756, %r6755, 14;
	shf.r.wrap.b32 	%r6758, %r6755, %r6756, 14;
	mov.b64 	%rd487, {%r6758, %r6757};
	shf.r.wrap.b32 	%r6759, %r6756, %r6755, 18;
	shf.r.wrap.b32 	%r6760, %r6755, %r6756, 18;
	mov.b64 	%rd488, {%r6760, %r6759};
	xor.b64  	%rd489, %rd488, %rd487;
	shf.l.wrap.b32 	%r6761, %r6755, %r6756, 23;
	shf.l.wrap.b32 	%r6762, %r6756, %r6755, 23;
	mov.b64 	%rd490, {%r6762, %r6761};
	xor.b64  	%rd491, %rd489, %rd490;
	xor.b64  	%rd492, %rd451, %rd427;
	and.b64  	%rd493, %rd475, %rd492;
	xor.b64  	%rd494, %rd493, %rd427;
	add.s64 	%rd495, %rd403, %rd1366;
	add.s64 	%rd496, %rd495, %rd1345;
	add.s64 	%rd497, %rd496, %rd494;
	add.s64 	%rd498, %rd497, %rd491;
	add.s64 	%rd499, %rd498, %rd414;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6763,%dummy}, %rd486;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6764}, %rd486;
	}
	shf.r.wrap.b32 	%r6765, %r6764, %r6763, 28;
	shf.r.wrap.b32 	%r6766, %r6763, %r6764, 28;
	mov.b64 	%rd500, {%r6766, %r6765};
	shf.l.wrap.b32 	%r6767, %r6763, %r6764, 30;
	shf.l.wrap.b32 	%r6768, %r6764, %r6763, 30;
	mov.b64 	%rd501, {%r6768, %r6767};
	xor.b64  	%rd502, %rd501, %rd500;
	shf.l.wrap.b32 	%r6769, %r6763, %r6764, 25;
	shf.l.wrap.b32 	%r6770, %r6764, %r6763, 25;
	mov.b64 	%rd503, {%r6770, %r6769};
	xor.b64  	%rd504, %rd502, %rd503;
	xor.b64  	%rd505, %rd486, %rd438;
	xor.b64  	%rd506, %rd486, %rd462;
	and.b64  	%rd507, %rd506, %rd505;
	xor.b64  	%rd508, %rd507, %rd486;
	add.s64 	%rd509, %rd498, %rd508;
	add.s64 	%rd510, %rd509, %rd504;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6771,%dummy}, %rd499;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6772}, %rd499;
	}
	shf.r.wrap.b32 	%r6773, %r6772, %r6771, 14;
	shf.r.wrap.b32 	%r6774, %r6771, %r6772, 14;
	mov.b64 	%rd511, {%r6774, %r6773};
	shf.r.wrap.b32 	%r6775, %r6772, %r6771, 18;
	shf.r.wrap.b32 	%r6776, %r6771, %r6772, 18;
	mov.b64 	%rd512, {%r6776, %r6775};
	xor.b64  	%rd513, %rd512, %rd511;
	shf.l.wrap.b32 	%r6777, %r6771, %r6772, 23;
	shf.l.wrap.b32 	%r6778, %r6772, %r6771, 23;
	mov.b64 	%rd514, {%r6778, %r6777};
	xor.b64  	%rd515, %rd513, %rd514;
	xor.b64  	%rd516, %rd475, %rd451;
	and.b64  	%rd517, %rd499, %rd516;
	xor.b64  	%rd518, %rd517, %rd451;
	add.s64 	%rd519, %rd427, %rd1365;
	add.s64 	%rd520, %rd519, %rd1346;
	add.s64 	%rd521, %rd520, %rd518;
	add.s64 	%rd522, %rd521, %rd515;
	add.s64 	%rd523, %rd522, %rd438;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6779,%dummy}, %rd510;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6780}, %rd510;
	}
	shf.r.wrap.b32 	%r6781, %r6780, %r6779, 28;
	shf.r.wrap.b32 	%r6782, %r6779, %r6780, 28;
	mov.b64 	%rd524, {%r6782, %r6781};
	shf.l.wrap.b32 	%r6783, %r6779, %r6780, 30;
	shf.l.wrap.b32 	%r6784, %r6780, %r6779, 30;
	mov.b64 	%rd525, {%r6784, %r6783};
	xor.b64  	%rd526, %rd525, %rd524;
	shf.l.wrap.b32 	%r6785, %r6779, %r6780, 25;
	shf.l.wrap.b32 	%r6786, %r6780, %r6779, 25;
	mov.b64 	%rd527, {%r6786, %r6785};
	xor.b64  	%rd528, %rd526, %rd527;
	xor.b64  	%rd529, %rd510, %rd462;
	xor.b64  	%rd530, %rd510, %rd486;
	and.b64  	%rd531, %rd530, %rd529;
	xor.b64  	%rd532, %rd531, %rd510;
	add.s64 	%rd533, %rd522, %rd532;
	add.s64 	%rd534, %rd533, %rd528;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6787,%dummy}, %rd523;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6788}, %rd523;
	}
	shf.r.wrap.b32 	%r6789, %r6788, %r6787, 14;
	shf.r.wrap.b32 	%r6790, %r6787, %r6788, 14;
	mov.b64 	%rd535, {%r6790, %r6789};
	shf.r.wrap.b32 	%r6791, %r6788, %r6787, 18;
	shf.r.wrap.b32 	%r6792, %r6787, %r6788, 18;
	mov.b64 	%rd536, {%r6792, %r6791};
	xor.b64  	%rd537, %rd536, %rd535;
	shf.l.wrap.b32 	%r6793, %r6787, %r6788, 23;
	shf.l.wrap.b32 	%r6794, %r6788, %r6787, 23;
	mov.b64 	%rd538, {%r6794, %r6793};
	xor.b64  	%rd539, %rd537, %rd538;
	xor.b64  	%rd540, %rd499, %rd475;
	and.b64  	%rd541, %rd523, %rd540;
	xor.b64  	%rd542, %rd541, %rd475;
	add.s64 	%rd543, %rd451, %rd1364;
	add.s64 	%rd544, %rd543, %rd1347;
	add.s64 	%rd545, %rd544, %rd542;
	add.s64 	%rd546, %rd545, %rd539;
	add.s64 	%rd547, %rd546, %rd462;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6795,%dummy}, %rd534;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6796}, %rd534;
	}
	shf.r.wrap.b32 	%r6797, %r6796, %r6795, 28;
	shf.r.wrap.b32 	%r6798, %r6795, %r6796, 28;
	mov.b64 	%rd548, {%r6798, %r6797};
	shf.l.wrap.b32 	%r6799, %r6795, %r6796, 30;
	shf.l.wrap.b32 	%r6800, %r6796, %r6795, 30;
	mov.b64 	%rd549, {%r6800, %r6799};
	xor.b64  	%rd550, %rd549, %rd548;
	shf.l.wrap.b32 	%r6801, %r6795, %r6796, 25;
	shf.l.wrap.b32 	%r6802, %r6796, %r6795, 25;
	mov.b64 	%rd551, {%r6802, %r6801};
	xor.b64  	%rd552, %rd550, %rd551;
	xor.b64  	%rd553, %rd534, %rd486;
	xor.b64  	%rd554, %rd534, %rd510;
	and.b64  	%rd555, %rd554, %rd553;
	xor.b64  	%rd556, %rd555, %rd534;
	add.s64 	%rd557, %rd546, %rd556;
	add.s64 	%rd558, %rd557, %rd552;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6803,%dummy}, %rd547;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6804}, %rd547;
	}
	shf.r.wrap.b32 	%r6805, %r6804, %r6803, 14;
	shf.r.wrap.b32 	%r6806, %r6803, %r6804, 14;
	mov.b64 	%rd559, {%r6806, %r6805};
	shf.r.wrap.b32 	%r6807, %r6804, %r6803, 18;
	shf.r.wrap.b32 	%r6808, %r6803, %r6804, 18;
	mov.b64 	%rd560, {%r6808, %r6807};
	xor.b64  	%rd561, %rd560, %rd559;
	shf.l.wrap.b32 	%r6809, %r6803, %r6804, 23;
	shf.l.wrap.b32 	%r6810, %r6804, %r6803, 23;
	mov.b64 	%rd562, {%r6810, %r6809};
	xor.b64  	%rd563, %rd561, %rd562;
	xor.b64  	%rd564, %rd523, %rd499;
	and.b64  	%rd565, %rd547, %rd564;
	xor.b64  	%rd566, %rd565, %rd499;
	add.s64 	%rd567, %rd475, %rd1363;
	add.s64 	%rd568, %rd567, %rd1348;
	add.s64 	%rd569, %rd568, %rd566;
	add.s64 	%rd570, %rd569, %rd563;
	add.s64 	%rd571, %rd570, %rd486;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6811,%dummy}, %rd558;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6812}, %rd558;
	}
	shf.r.wrap.b32 	%r6813, %r6812, %r6811, 28;
	shf.r.wrap.b32 	%r6814, %r6811, %r6812, 28;
	mov.b64 	%rd572, {%r6814, %r6813};
	shf.l.wrap.b32 	%r6815, %r6811, %r6812, 30;
	shf.l.wrap.b32 	%r6816, %r6812, %r6811, 30;
	mov.b64 	%rd573, {%r6816, %r6815};
	xor.b64  	%rd574, %rd573, %rd572;
	shf.l.wrap.b32 	%r6817, %r6811, %r6812, 25;
	shf.l.wrap.b32 	%r6818, %r6812, %r6811, 25;
	mov.b64 	%rd575, {%r6818, %r6817};
	xor.b64  	%rd576, %rd574, %rd575;
	xor.b64  	%rd577, %rd558, %rd510;
	xor.b64  	%rd578, %rd558, %rd534;
	and.b64  	%rd579, %rd578, %rd577;
	xor.b64  	%rd580, %rd579, %rd558;
	add.s64 	%rd581, %rd570, %rd580;
	add.s64 	%rd582, %rd581, %rd576;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6819,%dummy}, %rd571;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6820}, %rd571;
	}
	shf.r.wrap.b32 	%r6821, %r6820, %r6819, 14;
	shf.r.wrap.b32 	%r6822, %r6819, %r6820, 14;
	mov.b64 	%rd583, {%r6822, %r6821};
	shf.r.wrap.b32 	%r6823, %r6820, %r6819, 18;
	shf.r.wrap.b32 	%r6824, %r6819, %r6820, 18;
	mov.b64 	%rd584, {%r6824, %r6823};
	xor.b64  	%rd585, %rd584, %rd583;
	shf.l.wrap.b32 	%r6825, %r6819, %r6820, 23;
	shf.l.wrap.b32 	%r6826, %r6820, %r6819, 23;
	mov.b64 	%rd586, {%r6826, %r6825};
	xor.b64  	%rd587, %rd585, %rd586;
	xor.b64  	%rd588, %rd547, %rd523;
	and.b64  	%rd589, %rd571, %rd588;
	xor.b64  	%rd590, %rd589, %rd523;
	add.s64 	%rd591, %rd499, %rd1362;
	add.s64 	%rd592, %rd591, %rd1349;
	add.s64 	%rd593, %rd592, %rd590;
	add.s64 	%rd594, %rd593, %rd587;
	add.s64 	%rd1374, %rd594, %rd510;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6827,%dummy}, %rd582;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6828}, %rd582;
	}
	shf.r.wrap.b32 	%r6829, %r6828, %r6827, 28;
	shf.r.wrap.b32 	%r6830, %r6827, %r6828, 28;
	mov.b64 	%rd595, {%r6830, %r6829};
	shf.l.wrap.b32 	%r6831, %r6827, %r6828, 30;
	shf.l.wrap.b32 	%r6832, %r6828, %r6827, 30;
	mov.b64 	%rd596, {%r6832, %r6831};
	xor.b64  	%rd597, %rd596, %rd595;
	shf.l.wrap.b32 	%r6833, %r6827, %r6828, 25;
	shf.l.wrap.b32 	%r6834, %r6828, %r6827, 25;
	mov.b64 	%rd598, {%r6834, %r6833};
	xor.b64  	%rd599, %rd597, %rd598;
	xor.b64  	%rd600, %rd582, %rd534;
	xor.b64  	%rd601, %rd582, %rd558;
	and.b64  	%rd602, %rd601, %rd600;
	xor.b64  	%rd603, %rd602, %rd582;
	add.s64 	%rd604, %rd594, %rd603;
	add.s64 	%rd1370, %rd604, %rd599;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6835,%dummy}, %rd1374;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6836}, %rd1374;
	}
	shf.r.wrap.b32 	%r6837, %r6836, %r6835, 14;
	shf.r.wrap.b32 	%r6838, %r6835, %r6836, 14;
	mov.b64 	%rd605, {%r6838, %r6837};
	shf.r.wrap.b32 	%r6839, %r6836, %r6835, 18;
	shf.r.wrap.b32 	%r6840, %r6835, %r6836, 18;
	mov.b64 	%rd606, {%r6840, %r6839};
	xor.b64  	%rd607, %rd606, %rd605;
	shf.l.wrap.b32 	%r6841, %r6835, %r6836, 23;
	shf.l.wrap.b32 	%r6842, %r6836, %r6835, 23;
	mov.b64 	%rd608, {%r6842, %r6841};
	xor.b64  	%rd609, %rd607, %rd608;
	xor.b64  	%rd610, %rd571, %rd547;
	and.b64  	%rd611, %rd1374, %rd610;
	xor.b64  	%rd612, %rd611, %rd547;
	add.s64 	%rd613, %rd523, %rd1361;
	add.s64 	%rd614, %rd613, %rd1350;
	add.s64 	%rd615, %rd614, %rd612;
	add.s64 	%rd616, %rd615, %rd609;
	add.s64 	%rd1373, %rd616, %rd534;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6843,%dummy}, %rd1370;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6844}, %rd1370;
	}
	shf.r.wrap.b32 	%r6845, %r6844, %r6843, 28;
	shf.r.wrap.b32 	%r6846, %r6843, %r6844, 28;
	mov.b64 	%rd617, {%r6846, %r6845};
	shf.l.wrap.b32 	%r6847, %r6843, %r6844, 30;
	shf.l.wrap.b32 	%r6848, %r6844, %r6843, 30;
	mov.b64 	%rd618, {%r6848, %r6847};
	xor.b64  	%rd619, %rd618, %rd617;
	shf.l.wrap.b32 	%r6849, %r6843, %r6844, 25;
	shf.l.wrap.b32 	%r6850, %r6844, %r6843, 25;
	mov.b64 	%rd620, {%r6850, %r6849};
	xor.b64  	%rd621, %rd619, %rd620;
	xor.b64  	%rd622, %rd1370, %rd558;
	xor.b64  	%rd623, %rd1370, %rd582;
	and.b64  	%rd624, %rd623, %rd622;
	xor.b64  	%rd625, %rd624, %rd1370;
	add.s64 	%rd626, %rd616, %rd625;
	add.s64 	%rd1369, %rd626, %rd621;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6851,%dummy}, %rd1373;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6852}, %rd1373;
	}
	shf.r.wrap.b32 	%r6853, %r6852, %r6851, 14;
	shf.r.wrap.b32 	%r6854, %r6851, %r6852, 14;
	mov.b64 	%rd627, {%r6854, %r6853};
	shf.r.wrap.b32 	%r6855, %r6852, %r6851, 18;
	shf.r.wrap.b32 	%r6856, %r6851, %r6852, 18;
	mov.b64 	%rd628, {%r6856, %r6855};
	xor.b64  	%rd629, %rd628, %rd627;
	shf.l.wrap.b32 	%r6857, %r6851, %r6852, 23;
	shf.l.wrap.b32 	%r6858, %r6852, %r6851, 23;
	mov.b64 	%rd630, {%r6858, %r6857};
	xor.b64  	%rd631, %rd629, %rd630;
	xor.b64  	%rd632, %rd1374, %rd571;
	and.b64  	%rd633, %rd1373, %rd632;
	xor.b64  	%rd634, %rd633, %rd571;
	add.s64 	%rd635, %rd547, %rd1360;
	add.s64 	%rd636, %rd635, %rd1351;
	add.s64 	%rd637, %rd636, %rd634;
	add.s64 	%rd638, %rd637, %rd631;
	add.s64 	%rd1372, %rd638, %rd558;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6859,%dummy}, %rd1369;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6860}, %rd1369;
	}
	shf.r.wrap.b32 	%r6861, %r6860, %r6859, 28;
	shf.r.wrap.b32 	%r6862, %r6859, %r6860, 28;
	mov.b64 	%rd639, {%r6862, %r6861};
	shf.l.wrap.b32 	%r6863, %r6859, %r6860, 30;
	shf.l.wrap.b32 	%r6864, %r6860, %r6859, 30;
	mov.b64 	%rd640, {%r6864, %r6863};
	xor.b64  	%rd641, %rd640, %rd639;
	shf.l.wrap.b32 	%r6865, %r6859, %r6860, 25;
	shf.l.wrap.b32 	%r6866, %r6860, %r6859, 25;
	mov.b64 	%rd642, {%r6866, %r6865};
	xor.b64  	%rd643, %rd641, %rd642;
	xor.b64  	%rd644, %rd1369, %rd582;
	xor.b64  	%rd645, %rd1369, %rd1370;
	and.b64  	%rd646, %rd645, %rd644;
	xor.b64  	%rd647, %rd646, %rd1369;
	add.s64 	%rd648, %rd638, %rd647;
	add.s64 	%rd1368, %rd648, %rd643;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6867,%dummy}, %rd1372;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6868}, %rd1372;
	}
	shf.r.wrap.b32 	%r6869, %r6868, %r6867, 14;
	shf.r.wrap.b32 	%r6870, %r6867, %r6868, 14;
	mov.b64 	%rd649, {%r6870, %r6869};
	shf.r.wrap.b32 	%r6871, %r6868, %r6867, 18;
	shf.r.wrap.b32 	%r6872, %r6867, %r6868, 18;
	mov.b64 	%rd650, {%r6872, %r6871};
	xor.b64  	%rd651, %rd650, %rd649;
	shf.l.wrap.b32 	%r6873, %r6867, %r6868, 23;
	shf.l.wrap.b32 	%r6874, %r6868, %r6867, 23;
	mov.b64 	%rd652, {%r6874, %r6873};
	xor.b64  	%rd653, %rd651, %rd652;
	xor.b64  	%rd654, %rd1373, %rd1374;
	and.b64  	%rd655, %rd1372, %rd654;
	xor.b64  	%rd656, %rd655, %rd1374;
	add.s64 	%rd657, %rd571, %rd1359;
	add.s64 	%rd658, %rd657, %rd1352;
	add.s64 	%rd659, %rd658, %rd656;
	add.s64 	%rd660, %rd659, %rd653;
	add.s64 	%rd1371, %rd660, %rd582;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6875,%dummy}, %rd1368;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6876}, %rd1368;
	}
	shf.r.wrap.b32 	%r6877, %r6876, %r6875, 28;
	shf.r.wrap.b32 	%r6878, %r6875, %r6876, 28;
	mov.b64 	%rd661, {%r6878, %r6877};
	shf.l.wrap.b32 	%r6879, %r6875, %r6876, 30;
	shf.l.wrap.b32 	%r6880, %r6876, %r6875, 30;
	mov.b64 	%rd662, {%r6880, %r6879};
	xor.b64  	%rd663, %rd662, %rd661;
	shf.l.wrap.b32 	%r6881, %r6875, %r6876, 25;
	shf.l.wrap.b32 	%r6882, %r6876, %r6875, 25;
	mov.b64 	%rd664, {%r6882, %r6881};
	xor.b64  	%rd665, %rd663, %rd664;
	xor.b64  	%rd666, %rd1368, %rd1370;
	xor.b64  	%rd667, %rd1368, %rd1369;
	and.b64  	%rd668, %rd667, %rd666;
	xor.b64  	%rd669, %rd668, %rd1368;
	add.s64 	%rd670, %rd660, %rd669;
	add.s64 	%rd1367, %rd670, %rd665;
	mov.u32 	%r7446, 16;

BB6_95:
	shr.u64 	%rd671, %rd1360, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6883,%dummy}, %rd1360;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6884}, %rd1360;
	}
	shf.r.wrap.b32 	%r6885, %r6884, %r6883, 19;
	shf.r.wrap.b32 	%r6886, %r6883, %r6884, 19;
	mov.b64 	%rd672, {%r6886, %r6885};
	xor.b64  	%rd673, %rd672, %rd671;
	shf.l.wrap.b32 	%r6887, %r6883, %r6884, 3;
	shf.l.wrap.b32 	%r6888, %r6884, %r6883, 3;
	mov.b64 	%rd674, {%r6888, %r6887};
	xor.b64  	%rd675, %rd673, %rd674;
	shr.u64 	%rd676, %rd1376, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6889,%dummy}, %rd1376;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6890}, %rd1376;
	}
	shf.r.wrap.b32 	%r6891, %r6890, %r6889, 1;
	shf.r.wrap.b32 	%r6892, %r6889, %r6890, 1;
	mov.b64 	%rd677, {%r6892, %r6891};
	xor.b64  	%rd678, %rd677, %rd676;
	shf.r.wrap.b32 	%r6893, %r6890, %r6889, 8;
	shf.r.wrap.b32 	%r6894, %r6889, %r6890, 8;
	mov.b64 	%rd679, {%r6894, %r6893};
	xor.b64  	%rd680, %rd678, %rd679;
	add.s64 	%rd681, %rd1365, %rd1375;
	add.s64 	%rd682, %rd681, %rd675;
	add.s64 	%rd1375, %rd682, %rd680;
	shr.u64 	%rd683, %rd1359, 6;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6895,%dummy}, %rd1359;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6896}, %rd1359;
	}
	shf.r.wrap.b32 	%r6897, %r6896, %r6895, 19;
	shf.r.wrap.b32 	%r6898, %r6895, %r6896, 19;
	mov.b64 	%rd684, {%r6898, %r6897};
	xor.b64  	%rd685, %rd684, %rd683;
	shf.l.wrap.b32 	%r6899, %r6895, %r6896, 3;
	shf.l.wrap.b32 	%r6900, %r6896, %r6895, 3;
	mov.b64 	%rd686, {%r6900, %r6899};
	xor.b64  	%rd687, %rd685, %rd686;
	shr.u64 	%rd688, %rd1377, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6901,%dummy}, %rd1377;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6902}, %rd1377;
	}
	shf.r.wrap.b32 	%r6903, %r6902, %r6901, 1;
	shf.r.wrap.b32 	%r6904, %r6901, %r6902, 1;
	mov.b64 	%rd689, {%r6904, %r6903};
	xor.b64  	%rd690, %rd689, %rd688;
	shf.r.wrap.b32 	%r6905, %r6902, %r6901, 8;
	shf.r.wrap.b32 	%r6906, %r6901, %r6902, 8;
	mov.b64 	%rd691, {%r6906, %r6905};
	xor.b64  	%rd692, %rd690, %rd691;
	add.s64 	%rd693, %rd1364, %rd1376;
	add.s64 	%rd694, %rd693, %rd687;
	add.s64 	%rd1376, %rd694, %rd692;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6907,%dummy}, %rd1375;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6908}, %rd1375;
	}
	shf.r.wrap.b32 	%r6909, %r6908, %r6907, 19;
	shf.r.wrap.b32 	%r6910, %r6907, %r6908, 19;
	mov.b64 	%rd695, {%r6910, %r6909};
	shf.l.wrap.b32 	%r6911, %r6907, %r6908, 3;
	shf.l.wrap.b32 	%r6912, %r6908, %r6907, 3;
	mov.b64 	%rd696, {%r6912, %r6911};
	shr.u64 	%rd697, %rd1375, 6;
	xor.b64  	%rd698, %rd695, %rd697;
	xor.b64  	%rd699, %rd698, %rd696;
	shr.u64 	%rd700, %rd1378, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6913,%dummy}, %rd1378;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6914}, %rd1378;
	}
	shf.r.wrap.b32 	%r6915, %r6914, %r6913, 1;
	shf.r.wrap.b32 	%r6916, %r6913, %r6914, 1;
	mov.b64 	%rd701, {%r6916, %r6915};
	xor.b64  	%rd702, %rd701, %rd700;
	shf.r.wrap.b32 	%r6917, %r6914, %r6913, 8;
	shf.r.wrap.b32 	%r6918, %r6913, %r6914, 8;
	mov.b64 	%rd703, {%r6918, %r6917};
	xor.b64  	%rd704, %rd702, %rd703;
	add.s64 	%rd705, %rd1363, %rd1377;
	add.s64 	%rd706, %rd705, %rd699;
	add.s64 	%rd1377, %rd706, %rd704;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6919,%dummy}, %rd1376;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6920}, %rd1376;
	}
	shf.r.wrap.b32 	%r6921, %r6920, %r6919, 19;
	shf.r.wrap.b32 	%r6922, %r6919, %r6920, 19;
	mov.b64 	%rd707, {%r6922, %r6921};
	shf.l.wrap.b32 	%r6923, %r6919, %r6920, 3;
	shf.l.wrap.b32 	%r6924, %r6920, %r6919, 3;
	mov.b64 	%rd708, {%r6924, %r6923};
	shr.u64 	%rd709, %rd1376, 6;
	xor.b64  	%rd710, %rd707, %rd709;
	xor.b64  	%rd711, %rd710, %rd708;
	shr.u64 	%rd712, %rd1379, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6925,%dummy}, %rd1379;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6926}, %rd1379;
	}
	shf.r.wrap.b32 	%r6927, %r6926, %r6925, 1;
	shf.r.wrap.b32 	%r6928, %r6925, %r6926, 1;
	mov.b64 	%rd713, {%r6928, %r6927};
	xor.b64  	%rd714, %rd713, %rd712;
	shf.r.wrap.b32 	%r6929, %r6926, %r6925, 8;
	shf.r.wrap.b32 	%r6930, %r6925, %r6926, 8;
	mov.b64 	%rd715, {%r6930, %r6929};
	xor.b64  	%rd716, %rd714, %rd715;
	add.s64 	%rd717, %rd1362, %rd1378;
	add.s64 	%rd718, %rd717, %rd711;
	add.s64 	%rd1378, %rd718, %rd716;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6931,%dummy}, %rd1377;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6932}, %rd1377;
	}
	shf.r.wrap.b32 	%r6933, %r6932, %r6931, 19;
	shf.r.wrap.b32 	%r6934, %r6931, %r6932, 19;
	mov.b64 	%rd719, {%r6934, %r6933};
	shf.l.wrap.b32 	%r6935, %r6931, %r6932, 3;
	shf.l.wrap.b32 	%r6936, %r6932, %r6931, 3;
	mov.b64 	%rd720, {%r6936, %r6935};
	shr.u64 	%rd721, %rd1377, 6;
	xor.b64  	%rd722, %rd719, %rd721;
	xor.b64  	%rd723, %rd722, %rd720;
	shr.u64 	%rd724, %rd1380, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6937,%dummy}, %rd1380;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6938}, %rd1380;
	}
	shf.r.wrap.b32 	%r6939, %r6938, %r6937, 1;
	shf.r.wrap.b32 	%r6940, %r6937, %r6938, 1;
	mov.b64 	%rd725, {%r6940, %r6939};
	xor.b64  	%rd726, %rd725, %rd724;
	shf.r.wrap.b32 	%r6941, %r6938, %r6937, 8;
	shf.r.wrap.b32 	%r6942, %r6937, %r6938, 8;
	mov.b64 	%rd727, {%r6942, %r6941};
	xor.b64  	%rd728, %rd726, %rd727;
	add.s64 	%rd729, %rd1361, %rd1379;
	add.s64 	%rd730, %rd729, %rd723;
	add.s64 	%rd1379, %rd730, %rd728;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6943,%dummy}, %rd1378;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6944}, %rd1378;
	}
	shf.r.wrap.b32 	%r6945, %r6944, %r6943, 19;
	shf.r.wrap.b32 	%r6946, %r6943, %r6944, 19;
	mov.b64 	%rd731, {%r6946, %r6945};
	shf.l.wrap.b32 	%r6947, %r6943, %r6944, 3;
	shf.l.wrap.b32 	%r6948, %r6944, %r6943, 3;
	mov.b64 	%rd732, {%r6948, %r6947};
	shr.u64 	%rd733, %rd1378, 6;
	xor.b64  	%rd734, %rd731, %rd733;
	xor.b64  	%rd735, %rd734, %rd732;
	shr.u64 	%rd736, %rd1381, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6949,%dummy}, %rd1381;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6950}, %rd1381;
	}
	shf.r.wrap.b32 	%r6951, %r6950, %r6949, 1;
	shf.r.wrap.b32 	%r6952, %r6949, %r6950, 1;
	mov.b64 	%rd737, {%r6952, %r6951};
	xor.b64  	%rd738, %rd737, %rd736;
	shf.r.wrap.b32 	%r6953, %r6950, %r6949, 8;
	shf.r.wrap.b32 	%r6954, %r6949, %r6950, 8;
	mov.b64 	%rd739, {%r6954, %r6953};
	xor.b64  	%rd740, %rd738, %rd739;
	add.s64 	%rd741, %rd1360, %rd1380;
	add.s64 	%rd742, %rd741, %rd735;
	add.s64 	%rd1380, %rd742, %rd740;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6955,%dummy}, %rd1379;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6956}, %rd1379;
	}
	shf.r.wrap.b32 	%r6957, %r6956, %r6955, 19;
	shf.r.wrap.b32 	%r6958, %r6955, %r6956, 19;
	mov.b64 	%rd743, {%r6958, %r6957};
	shf.l.wrap.b32 	%r6959, %r6955, %r6956, 3;
	shf.l.wrap.b32 	%r6960, %r6956, %r6955, 3;
	mov.b64 	%rd744, {%r6960, %r6959};
	shr.u64 	%rd745, %rd1379, 6;
	xor.b64  	%rd746, %rd743, %rd745;
	xor.b64  	%rd747, %rd746, %rd744;
	shr.u64 	%rd748, %rd1382, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6961,%dummy}, %rd1382;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6962}, %rd1382;
	}
	shf.r.wrap.b32 	%r6963, %r6962, %r6961, 1;
	shf.r.wrap.b32 	%r6964, %r6961, %r6962, 1;
	mov.b64 	%rd749, {%r6964, %r6963};
	xor.b64  	%rd750, %rd749, %rd748;
	shf.r.wrap.b32 	%r6965, %r6962, %r6961, 8;
	shf.r.wrap.b32 	%r6966, %r6961, %r6962, 8;
	mov.b64 	%rd751, {%r6966, %r6965};
	xor.b64  	%rd752, %rd750, %rd751;
	add.s64 	%rd753, %rd1359, %rd1381;
	add.s64 	%rd754, %rd753, %rd747;
	add.s64 	%rd1381, %rd754, %rd752;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6967,%dummy}, %rd1380;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6968}, %rd1380;
	}
	shf.r.wrap.b32 	%r6969, %r6968, %r6967, 19;
	shf.r.wrap.b32 	%r6970, %r6967, %r6968, 19;
	mov.b64 	%rd755, {%r6970, %r6969};
	shf.l.wrap.b32 	%r6971, %r6967, %r6968, 3;
	shf.l.wrap.b32 	%r6972, %r6968, %r6967, 3;
	mov.b64 	%rd756, {%r6972, %r6971};
	shr.u64 	%rd757, %rd1380, 6;
	xor.b64  	%rd758, %rd755, %rd757;
	xor.b64  	%rd759, %rd758, %rd756;
	shr.u64 	%rd760, %rd1366, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6973,%dummy}, %rd1366;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6974}, %rd1366;
	}
	shf.r.wrap.b32 	%r6975, %r6974, %r6973, 1;
	shf.r.wrap.b32 	%r6976, %r6973, %r6974, 1;
	mov.b64 	%rd761, {%r6976, %r6975};
	xor.b64  	%rd762, %rd761, %rd760;
	shf.r.wrap.b32 	%r6977, %r6974, %r6973, 8;
	shf.r.wrap.b32 	%r6978, %r6973, %r6974, 8;
	mov.b64 	%rd763, {%r6978, %r6977};
	xor.b64  	%rd764, %rd762, %rd763;
	add.s64 	%rd765, %rd1375, %rd1382;
	add.s64 	%rd766, %rd765, %rd759;
	add.s64 	%rd1382, %rd766, %rd764;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6979,%dummy}, %rd1381;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6980}, %rd1381;
	}
	shf.r.wrap.b32 	%r6981, %r6980, %r6979, 19;
	shf.r.wrap.b32 	%r6982, %r6979, %r6980, 19;
	mov.b64 	%rd767, {%r6982, %r6981};
	shf.l.wrap.b32 	%r6983, %r6979, %r6980, 3;
	shf.l.wrap.b32 	%r6984, %r6980, %r6979, 3;
	mov.b64 	%rd768, {%r6984, %r6983};
	shr.u64 	%rd769, %rd1381, 6;
	xor.b64  	%rd770, %rd767, %rd769;
	xor.b64  	%rd771, %rd770, %rd768;
	shr.u64 	%rd772, %rd1365, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6985,%dummy}, %rd1365;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6986}, %rd1365;
	}
	shf.r.wrap.b32 	%r6987, %r6986, %r6985, 1;
	shf.r.wrap.b32 	%r6988, %r6985, %r6986, 1;
	mov.b64 	%rd773, {%r6988, %r6987};
	xor.b64  	%rd774, %rd773, %rd772;
	shf.r.wrap.b32 	%r6989, %r6986, %r6985, 8;
	shf.r.wrap.b32 	%r6990, %r6985, %r6986, 8;
	mov.b64 	%rd775, {%r6990, %r6989};
	xor.b64  	%rd776, %rd774, %rd775;
	add.s64 	%rd777, %rd1376, %rd1366;
	add.s64 	%rd778, %rd777, %rd771;
	add.s64 	%rd1366, %rd778, %rd776;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6991,%dummy}, %rd1382;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6992}, %rd1382;
	}
	shf.r.wrap.b32 	%r6993, %r6992, %r6991, 19;
	shf.r.wrap.b32 	%r6994, %r6991, %r6992, 19;
	mov.b64 	%rd779, {%r6994, %r6993};
	shf.l.wrap.b32 	%r6995, %r6991, %r6992, 3;
	shf.l.wrap.b32 	%r6996, %r6992, %r6991, 3;
	mov.b64 	%rd780, {%r6996, %r6995};
	shr.u64 	%rd781, %rd1382, 6;
	xor.b64  	%rd782, %rd779, %rd781;
	xor.b64  	%rd783, %rd782, %rd780;
	shr.u64 	%rd784, %rd1364, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r6997,%dummy}, %rd1364;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r6998}, %rd1364;
	}
	shf.r.wrap.b32 	%r6999, %r6998, %r6997, 1;
	shf.r.wrap.b32 	%r7000, %r6997, %r6998, 1;
	mov.b64 	%rd785, {%r7000, %r6999};
	xor.b64  	%rd786, %rd785, %rd784;
	shf.r.wrap.b32 	%r7001, %r6998, %r6997, 8;
	shf.r.wrap.b32 	%r7002, %r6997, %r6998, 8;
	mov.b64 	%rd787, {%r7002, %r7001};
	xor.b64  	%rd788, %rd786, %rd787;
	add.s64 	%rd789, %rd1377, %rd1365;
	add.s64 	%rd790, %rd789, %rd783;
	add.s64 	%rd1365, %rd790, %rd788;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7003,%dummy}, %rd1366;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7004}, %rd1366;
	}
	shf.r.wrap.b32 	%r7005, %r7004, %r7003, 19;
	shf.r.wrap.b32 	%r7006, %r7003, %r7004, 19;
	mov.b64 	%rd791, {%r7006, %r7005};
	shf.l.wrap.b32 	%r7007, %r7003, %r7004, 3;
	shf.l.wrap.b32 	%r7008, %r7004, %r7003, 3;
	mov.b64 	%rd792, {%r7008, %r7007};
	shr.u64 	%rd793, %rd1366, 6;
	xor.b64  	%rd794, %rd791, %rd793;
	xor.b64  	%rd795, %rd794, %rd792;
	shr.u64 	%rd796, %rd1363, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7009,%dummy}, %rd1363;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7010}, %rd1363;
	}
	shf.r.wrap.b32 	%r7011, %r7010, %r7009, 1;
	shf.r.wrap.b32 	%r7012, %r7009, %r7010, 1;
	mov.b64 	%rd797, {%r7012, %r7011};
	xor.b64  	%rd798, %rd797, %rd796;
	shf.r.wrap.b32 	%r7013, %r7010, %r7009, 8;
	shf.r.wrap.b32 	%r7014, %r7009, %r7010, 8;
	mov.b64 	%rd799, {%r7014, %r7013};
	xor.b64  	%rd800, %rd798, %rd799;
	add.s64 	%rd801, %rd1378, %rd1364;
	add.s64 	%rd802, %rd801, %rd795;
	add.s64 	%rd1364, %rd802, %rd800;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7015,%dummy}, %rd1365;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7016}, %rd1365;
	}
	shf.r.wrap.b32 	%r7017, %r7016, %r7015, 19;
	shf.r.wrap.b32 	%r7018, %r7015, %r7016, 19;
	mov.b64 	%rd803, {%r7018, %r7017};
	shf.l.wrap.b32 	%r7019, %r7015, %r7016, 3;
	shf.l.wrap.b32 	%r7020, %r7016, %r7015, 3;
	mov.b64 	%rd804, {%r7020, %r7019};
	shr.u64 	%rd805, %rd1365, 6;
	xor.b64  	%rd806, %rd803, %rd805;
	xor.b64  	%rd807, %rd806, %rd804;
	shr.u64 	%rd808, %rd1362, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7021,%dummy}, %rd1362;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7022}, %rd1362;
	}
	shf.r.wrap.b32 	%r7023, %r7022, %r7021, 1;
	shf.r.wrap.b32 	%r7024, %r7021, %r7022, 1;
	mov.b64 	%rd809, {%r7024, %r7023};
	xor.b64  	%rd810, %rd809, %rd808;
	shf.r.wrap.b32 	%r7025, %r7022, %r7021, 8;
	shf.r.wrap.b32 	%r7026, %r7021, %r7022, 8;
	mov.b64 	%rd811, {%r7026, %r7025};
	xor.b64  	%rd812, %rd810, %rd811;
	add.s64 	%rd813, %rd1379, %rd1363;
	add.s64 	%rd814, %rd813, %rd807;
	add.s64 	%rd1363, %rd814, %rd812;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7027,%dummy}, %rd1364;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7028}, %rd1364;
	}
	shf.r.wrap.b32 	%r7029, %r7028, %r7027, 19;
	shf.r.wrap.b32 	%r7030, %r7027, %r7028, 19;
	mov.b64 	%rd815, {%r7030, %r7029};
	shf.l.wrap.b32 	%r7031, %r7027, %r7028, 3;
	shf.l.wrap.b32 	%r7032, %r7028, %r7027, 3;
	mov.b64 	%rd816, {%r7032, %r7031};
	shr.u64 	%rd817, %rd1364, 6;
	xor.b64  	%rd818, %rd815, %rd817;
	xor.b64  	%rd819, %rd818, %rd816;
	shr.u64 	%rd820, %rd1361, 7;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7033,%dummy}, %rd1361;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7034}, %rd1361;
	}
	shf.r.wrap.b32 	%r7035, %r7034, %r7033, 1;
	shf.r.wrap.b32 	%r7036, %r7033, %r7034, 1;
	mov.b64 	%rd821, {%r7036, %r7035};
	xor.b64  	%rd822, %rd821, %rd820;
	shf.r.wrap.b32 	%r7037, %r7034, %r7033, 8;
	shf.r.wrap.b32 	%r7038, %r7033, %r7034, 8;
	mov.b64 	%rd823, {%r7038, %r7037};
	xor.b64  	%rd824, %rd822, %rd823;
	add.s64 	%rd825, %rd1380, %rd1362;
	add.s64 	%rd826, %rd825, %rd819;
	add.s64 	%rd1362, %rd826, %rd824;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7039,%dummy}, %rd1363;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7040}, %rd1363;
	}
	shf.r.wrap.b32 	%r7041, %r7040, %r7039, 19;
	shf.r.wrap.b32 	%r7042, %r7039, %r7040, 19;
	mov.b64 	%rd827, {%r7042, %r7041};
	shf.l.wrap.b32 	%r7043, %r7039, %r7040, 3;
	shf.l.wrap.b32 	%r7044, %r7040, %r7039, 3;
	mov.b64 	%rd828, {%r7044, %r7043};
	shr.u64 	%rd829, %rd1363, 6;
	xor.b64  	%rd830, %rd827, %rd829;
	xor.b64  	%rd831, %rd830, %rd828;
	shr.u64 	%rd832, %rd1360, 7;
	shf.r.wrap.b32 	%r7045, %r6884, %r6883, 1;
	shf.r.wrap.b32 	%r7046, %r6883, %r6884, 1;
	mov.b64 	%rd833, {%r7046, %r7045};
	xor.b64  	%rd834, %rd833, %rd832;
	shf.r.wrap.b32 	%r7047, %r6884, %r6883, 8;
	shf.r.wrap.b32 	%r7048, %r6883, %r6884, 8;
	mov.b64 	%rd835, {%r7048, %r7047};
	xor.b64  	%rd836, %rd834, %rd835;
	add.s64 	%rd837, %rd1381, %rd1361;
	add.s64 	%rd838, %rd837, %rd831;
	add.s64 	%rd1361, %rd838, %rd836;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7049,%dummy}, %rd1362;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7050}, %rd1362;
	}
	shf.r.wrap.b32 	%r7051, %r7050, %r7049, 19;
	shf.r.wrap.b32 	%r7052, %r7049, %r7050, 19;
	mov.b64 	%rd839, {%r7052, %r7051};
	shf.l.wrap.b32 	%r7053, %r7049, %r7050, 3;
	shf.l.wrap.b32 	%r7054, %r7050, %r7049, 3;
	mov.b64 	%rd840, {%r7054, %r7053};
	shr.u64 	%rd841, %rd1362, 6;
	xor.b64  	%rd842, %rd839, %rd841;
	xor.b64  	%rd843, %rd842, %rd840;
	shr.u64 	%rd844, %rd1359, 7;
	shf.r.wrap.b32 	%r7055, %r6896, %r6895, 1;
	shf.r.wrap.b32 	%r7056, %r6895, %r6896, 1;
	mov.b64 	%rd845, {%r7056, %r7055};
	xor.b64  	%rd846, %rd845, %rd844;
	shf.r.wrap.b32 	%r7057, %r6896, %r6895, 8;
	shf.r.wrap.b32 	%r7058, %r6895, %r6896, 8;
	mov.b64 	%rd847, {%r7058, %r7057};
	xor.b64  	%rd848, %rd846, %rd847;
	add.s64 	%rd849, %rd1382, %rd1360;
	add.s64 	%rd850, %rd849, %rd843;
	add.s64 	%rd1360, %rd850, %rd848;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7059,%dummy}, %rd1361;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7060}, %rd1361;
	}
	shf.r.wrap.b32 	%r7061, %r7060, %r7059, 19;
	shf.r.wrap.b32 	%r7062, %r7059, %r7060, 19;
	mov.b64 	%rd851, {%r7062, %r7061};
	shf.l.wrap.b32 	%r7063, %r7059, %r7060, 3;
	shf.l.wrap.b32 	%r7064, %r7060, %r7059, 3;
	mov.b64 	%rd852, {%r7064, %r7063};
	shr.u64 	%rd853, %rd1361, 6;
	xor.b64  	%rd854, %rd851, %rd853;
	xor.b64  	%rd855, %rd854, %rd852;
	shf.r.wrap.b32 	%r7065, %r6908, %r6907, 1;
	shf.r.wrap.b32 	%r7066, %r6907, %r6908, 1;
	mov.b64 	%rd856, {%r7066, %r7065};
	shf.r.wrap.b32 	%r7067, %r6908, %r6907, 8;
	shf.r.wrap.b32 	%r7068, %r6907, %r6908, 8;
	mov.b64 	%rd857, {%r7068, %r7067};
	shr.u64 	%rd858, %rd1375, 7;
	xor.b64  	%rd859, %rd856, %rd858;
	xor.b64  	%rd860, %rd859, %rd857;
	add.s64 	%rd861, %rd1366, %rd1359;
	add.s64 	%rd862, %rd861, %rd855;
	add.s64 	%rd1359, %rd862, %rd860;
	mul.wide.s32 	%rd863, %r7446, 8;
	mov.u64 	%rd864, k_sha512;
	add.s64 	%rd865, %rd864, %rd863;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7069,%dummy}, %rd1371;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7070}, %rd1371;
	}
	shf.r.wrap.b32 	%r7071, %r7070, %r7069, 18;
	shf.r.wrap.b32 	%r7072, %r7069, %r7070, 18;
	mov.b64 	%rd866, {%r7072, %r7071};
	shf.r.wrap.b32 	%r7073, %r7070, %r7069, 14;
	shf.r.wrap.b32 	%r7074, %r7069, %r7070, 14;
	mov.b64 	%rd867, {%r7074, %r7073};
	xor.b64  	%rd868, %rd866, %rd867;
	shf.l.wrap.b32 	%r7075, %r7069, %r7070, 23;
	shf.l.wrap.b32 	%r7076, %r7070, %r7069, 23;
	mov.b64 	%rd869, {%r7076, %r7075};
	xor.b64  	%rd870, %rd868, %rd869;
	xor.b64  	%rd871, %rd1372, %rd1373;
	and.b64  	%rd872, %rd871, %rd1371;
	xor.b64  	%rd873, %rd872, %rd1373;
	add.s64 	%rd874, %rd873, %rd1374;
	add.s64 	%rd875, %rd874, %rd1375;
	ld.const.u64 	%rd876, [%rd865];
	add.s64 	%rd877, %rd875, %rd876;
	add.s64 	%rd878, %rd877, %rd870;
	add.s64 	%rd879, %rd878, %rd1370;
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7077}, %rd1367;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7078,%dummy}, %rd1367;
	}
	shf.l.wrap.b32 	%r7079, %r7078, %r7077, 30;
	shf.l.wrap.b32 	%r7080, %r7077, %r7078, 30;
	mov.b64 	%rd880, {%r7080, %r7079};
	shf.r.wrap.b32 	%r7081, %r7077, %r7078, 28;
	shf.r.wrap.b32 	%r7082, %r7078, %r7077, 28;
	mov.b64 	%rd881, {%r7082, %r7081};
	xor.b64  	%rd882, %rd880, %rd881;
	shf.l.wrap.b32 	%r7083, %r7078, %r7077, 25;
	shf.l.wrap.b32 	%r7084, %r7077, %r7078, 25;
	mov.b64 	%rd883, {%r7084, %r7083};
	xor.b64  	%rd884, %rd882, %rd883;
	xor.b64  	%rd885, %rd1367, %rd1368;
	xor.b64  	%rd886, %rd1367, %rd1369;
	and.b64  	%rd887, %rd885, %rd886;
	xor.b64  	%rd888, %rd887, %rd1367;
	add.s64 	%rd889, %rd878, %rd888;
	add.s64 	%rd890, %rd889, %rd884;
	add.s32 	%r7085, %r7446, 1;
	mul.wide.s32 	%rd891, %r7085, 8;
	add.s64 	%rd892, %rd864, %rd891;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7086,%dummy}, %rd879;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7087}, %rd879;
	}
	shf.r.wrap.b32 	%r7088, %r7087, %r7086, 14;
	shf.r.wrap.b32 	%r7089, %r7086, %r7087, 14;
	mov.b64 	%rd893, {%r7089, %r7088};
	shf.r.wrap.b32 	%r7090, %r7087, %r7086, 18;
	shf.r.wrap.b32 	%r7091, %r7086, %r7087, 18;
	mov.b64 	%rd894, {%r7091, %r7090};
	xor.b64  	%rd895, %rd894, %rd893;
	shf.l.wrap.b32 	%r7092, %r7086, %r7087, 23;
	shf.l.wrap.b32 	%r7093, %r7087, %r7086, 23;
	mov.b64 	%rd896, {%r7093, %r7092};
	xor.b64  	%rd897, %rd895, %rd896;
	xor.b64  	%rd898, %rd1371, %rd1372;
	and.b64  	%rd899, %rd879, %rd898;
	xor.b64  	%rd900, %rd899, %rd1372;
	add.s64 	%rd901, %rd1376, %rd1373;
	ld.const.u64 	%rd902, [%rd892];
	add.s64 	%rd903, %rd901, %rd902;
	add.s64 	%rd904, %rd903, %rd900;
	add.s64 	%rd905, %rd904, %rd897;
	add.s64 	%rd906, %rd905, %rd1369;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7094,%dummy}, %rd890;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7095}, %rd890;
	}
	shf.r.wrap.b32 	%r7096, %r7095, %r7094, 28;
	shf.r.wrap.b32 	%r7097, %r7094, %r7095, 28;
	mov.b64 	%rd907, {%r7097, %r7096};
	shf.l.wrap.b32 	%r7098, %r7094, %r7095, 30;
	shf.l.wrap.b32 	%r7099, %r7095, %r7094, 30;
	mov.b64 	%rd908, {%r7099, %r7098};
	xor.b64  	%rd909, %rd908, %rd907;
	shf.l.wrap.b32 	%r7100, %r7094, %r7095, 25;
	shf.l.wrap.b32 	%r7101, %r7095, %r7094, 25;
	mov.b64 	%rd910, {%r7101, %r7100};
	xor.b64  	%rd911, %rd909, %rd910;
	xor.b64  	%rd912, %rd890, %rd1368;
	xor.b64  	%rd913, %rd890, %rd1367;
	and.b64  	%rd914, %rd913, %rd912;
	xor.b64  	%rd915, %rd914, %rd890;
	add.s64 	%rd916, %rd905, %rd915;
	add.s64 	%rd917, %rd916, %rd911;
	add.s32 	%r7102, %r7446, 2;
	mul.wide.s32 	%rd918, %r7102, 8;
	add.s64 	%rd919, %rd864, %rd918;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7103,%dummy}, %rd906;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7104}, %rd906;
	}
	shf.r.wrap.b32 	%r7105, %r7104, %r7103, 14;
	shf.r.wrap.b32 	%r7106, %r7103, %r7104, 14;
	mov.b64 	%rd920, {%r7106, %r7105};
	shf.r.wrap.b32 	%r7107, %r7104, %r7103, 18;
	shf.r.wrap.b32 	%r7108, %r7103, %r7104, 18;
	mov.b64 	%rd921, {%r7108, %r7107};
	xor.b64  	%rd922, %rd921, %rd920;
	shf.l.wrap.b32 	%r7109, %r7103, %r7104, 23;
	shf.l.wrap.b32 	%r7110, %r7104, %r7103, 23;
	mov.b64 	%rd923, {%r7110, %r7109};
	xor.b64  	%rd924, %rd922, %rd923;
	xor.b64  	%rd925, %rd879, %rd1371;
	and.b64  	%rd926, %rd906, %rd925;
	xor.b64  	%rd927, %rd926, %rd1371;
	add.s64 	%rd928, %rd1377, %rd1372;
	ld.const.u64 	%rd929, [%rd919];
	add.s64 	%rd930, %rd928, %rd929;
	add.s64 	%rd931, %rd930, %rd927;
	add.s64 	%rd932, %rd931, %rd924;
	add.s64 	%rd933, %rd932, %rd1368;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7111,%dummy}, %rd917;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7112}, %rd917;
	}
	shf.r.wrap.b32 	%r7113, %r7112, %r7111, 28;
	shf.r.wrap.b32 	%r7114, %r7111, %r7112, 28;
	mov.b64 	%rd934, {%r7114, %r7113};
	shf.l.wrap.b32 	%r7115, %r7111, %r7112, 30;
	shf.l.wrap.b32 	%r7116, %r7112, %r7111, 30;
	mov.b64 	%rd935, {%r7116, %r7115};
	xor.b64  	%rd936, %rd935, %rd934;
	shf.l.wrap.b32 	%r7117, %r7111, %r7112, 25;
	shf.l.wrap.b32 	%r7118, %r7112, %r7111, 25;
	mov.b64 	%rd937, {%r7118, %r7117};
	xor.b64  	%rd938, %rd936, %rd937;
	xor.b64  	%rd939, %rd917, %rd1367;
	xor.b64  	%rd940, %rd917, %rd890;
	and.b64  	%rd941, %rd940, %rd939;
	xor.b64  	%rd942, %rd941, %rd917;
	add.s64 	%rd943, %rd932, %rd942;
	add.s64 	%rd944, %rd943, %rd938;
	add.s32 	%r7119, %r7446, 3;
	mul.wide.s32 	%rd945, %r7119, 8;
	add.s64 	%rd946, %rd864, %rd945;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7120,%dummy}, %rd933;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7121}, %rd933;
	}
	shf.r.wrap.b32 	%r7122, %r7121, %r7120, 14;
	shf.r.wrap.b32 	%r7123, %r7120, %r7121, 14;
	mov.b64 	%rd947, {%r7123, %r7122};
	shf.r.wrap.b32 	%r7124, %r7121, %r7120, 18;
	shf.r.wrap.b32 	%r7125, %r7120, %r7121, 18;
	mov.b64 	%rd948, {%r7125, %r7124};
	xor.b64  	%rd949, %rd948, %rd947;
	shf.l.wrap.b32 	%r7126, %r7120, %r7121, 23;
	shf.l.wrap.b32 	%r7127, %r7121, %r7120, 23;
	mov.b64 	%rd950, {%r7127, %r7126};
	xor.b64  	%rd951, %rd949, %rd950;
	xor.b64  	%rd952, %rd906, %rd879;
	and.b64  	%rd953, %rd933, %rd952;
	xor.b64  	%rd954, %rd953, %rd879;
	add.s64 	%rd955, %rd1378, %rd1371;
	ld.const.u64 	%rd956, [%rd946];
	add.s64 	%rd957, %rd955, %rd956;
	add.s64 	%rd958, %rd957, %rd954;
	add.s64 	%rd959, %rd958, %rd951;
	add.s64 	%rd960, %rd959, %rd1367;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7128,%dummy}, %rd944;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7129}, %rd944;
	}
	shf.r.wrap.b32 	%r7130, %r7129, %r7128, 28;
	shf.r.wrap.b32 	%r7131, %r7128, %r7129, 28;
	mov.b64 	%rd961, {%r7131, %r7130};
	shf.l.wrap.b32 	%r7132, %r7128, %r7129, 30;
	shf.l.wrap.b32 	%r7133, %r7129, %r7128, 30;
	mov.b64 	%rd962, {%r7133, %r7132};
	xor.b64  	%rd963, %rd962, %rd961;
	shf.l.wrap.b32 	%r7134, %r7128, %r7129, 25;
	shf.l.wrap.b32 	%r7135, %r7129, %r7128, 25;
	mov.b64 	%rd964, {%r7135, %r7134};
	xor.b64  	%rd965, %rd963, %rd964;
	xor.b64  	%rd966, %rd944, %rd890;
	xor.b64  	%rd967, %rd944, %rd917;
	and.b64  	%rd968, %rd967, %rd966;
	xor.b64  	%rd969, %rd968, %rd944;
	add.s64 	%rd970, %rd959, %rd969;
	add.s64 	%rd971, %rd970, %rd965;
	add.s32 	%r7136, %r7446, 4;
	mul.wide.s32 	%rd972, %r7136, 8;
	add.s64 	%rd973, %rd864, %rd972;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7137,%dummy}, %rd960;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7138}, %rd960;
	}
	shf.r.wrap.b32 	%r7139, %r7138, %r7137, 14;
	shf.r.wrap.b32 	%r7140, %r7137, %r7138, 14;
	mov.b64 	%rd974, {%r7140, %r7139};
	shf.r.wrap.b32 	%r7141, %r7138, %r7137, 18;
	shf.r.wrap.b32 	%r7142, %r7137, %r7138, 18;
	mov.b64 	%rd975, {%r7142, %r7141};
	xor.b64  	%rd976, %rd975, %rd974;
	shf.l.wrap.b32 	%r7143, %r7137, %r7138, 23;
	shf.l.wrap.b32 	%r7144, %r7138, %r7137, 23;
	mov.b64 	%rd977, {%r7144, %r7143};
	xor.b64  	%rd978, %rd976, %rd977;
	xor.b64  	%rd979, %rd933, %rd906;
	and.b64  	%rd980, %rd960, %rd979;
	xor.b64  	%rd981, %rd980, %rd906;
	add.s64 	%rd982, %rd879, %rd1379;
	ld.const.u64 	%rd983, [%rd973];
	add.s64 	%rd984, %rd982, %rd983;
	add.s64 	%rd985, %rd984, %rd981;
	add.s64 	%rd986, %rd985, %rd978;
	add.s64 	%rd987, %rd986, %rd890;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7145,%dummy}, %rd971;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7146}, %rd971;
	}
	shf.r.wrap.b32 	%r7147, %r7146, %r7145, 28;
	shf.r.wrap.b32 	%r7148, %r7145, %r7146, 28;
	mov.b64 	%rd988, {%r7148, %r7147};
	shf.l.wrap.b32 	%r7149, %r7145, %r7146, 30;
	shf.l.wrap.b32 	%r7150, %r7146, %r7145, 30;
	mov.b64 	%rd989, {%r7150, %r7149};
	xor.b64  	%rd990, %rd989, %rd988;
	shf.l.wrap.b32 	%r7151, %r7145, %r7146, 25;
	shf.l.wrap.b32 	%r7152, %r7146, %r7145, 25;
	mov.b64 	%rd991, {%r7152, %r7151};
	xor.b64  	%rd992, %rd990, %rd991;
	xor.b64  	%rd993, %rd971, %rd917;
	xor.b64  	%rd994, %rd971, %rd944;
	and.b64  	%rd995, %rd994, %rd993;
	xor.b64  	%rd996, %rd995, %rd971;
	add.s64 	%rd997, %rd986, %rd996;
	add.s64 	%rd998, %rd997, %rd992;
	add.s32 	%r7153, %r7446, 5;
	mul.wide.s32 	%rd999, %r7153, 8;
	add.s64 	%rd1000, %rd864, %rd999;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7154,%dummy}, %rd987;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7155}, %rd987;
	}
	shf.r.wrap.b32 	%r7156, %r7155, %r7154, 14;
	shf.r.wrap.b32 	%r7157, %r7154, %r7155, 14;
	mov.b64 	%rd1001, {%r7157, %r7156};
	shf.r.wrap.b32 	%r7158, %r7155, %r7154, 18;
	shf.r.wrap.b32 	%r7159, %r7154, %r7155, 18;
	mov.b64 	%rd1002, {%r7159, %r7158};
	xor.b64  	%rd1003, %rd1002, %rd1001;
	shf.l.wrap.b32 	%r7160, %r7154, %r7155, 23;
	shf.l.wrap.b32 	%r7161, %r7155, %r7154, 23;
	mov.b64 	%rd1004, {%r7161, %r7160};
	xor.b64  	%rd1005, %rd1003, %rd1004;
	xor.b64  	%rd1006, %rd960, %rd933;
	and.b64  	%rd1007, %rd987, %rd1006;
	xor.b64  	%rd1008, %rd1007, %rd933;
	add.s64 	%rd1009, %rd906, %rd1380;
	ld.const.u64 	%rd1010, [%rd1000];
	add.s64 	%rd1011, %rd1009, %rd1010;
	add.s64 	%rd1012, %rd1011, %rd1008;
	add.s64 	%rd1013, %rd1012, %rd1005;
	add.s64 	%rd1014, %rd1013, %rd917;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7162,%dummy}, %rd998;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7163}, %rd998;
	}
	shf.r.wrap.b32 	%r7164, %r7163, %r7162, 28;
	shf.r.wrap.b32 	%r7165, %r7162, %r7163, 28;
	mov.b64 	%rd1015, {%r7165, %r7164};
	shf.l.wrap.b32 	%r7166, %r7162, %r7163, 30;
	shf.l.wrap.b32 	%r7167, %r7163, %r7162, 30;
	mov.b64 	%rd1016, {%r7167, %r7166};
	xor.b64  	%rd1017, %rd1016, %rd1015;
	shf.l.wrap.b32 	%r7168, %r7162, %r7163, 25;
	shf.l.wrap.b32 	%r7169, %r7163, %r7162, 25;
	mov.b64 	%rd1018, {%r7169, %r7168};
	xor.b64  	%rd1019, %rd1017, %rd1018;
	xor.b64  	%rd1020, %rd998, %rd944;
	xor.b64  	%rd1021, %rd998, %rd971;
	and.b64  	%rd1022, %rd1021, %rd1020;
	xor.b64  	%rd1023, %rd1022, %rd998;
	add.s64 	%rd1024, %rd1013, %rd1023;
	add.s64 	%rd1025, %rd1024, %rd1019;
	add.s32 	%r7170, %r7446, 6;
	mul.wide.s32 	%rd1026, %r7170, 8;
	add.s64 	%rd1027, %rd864, %rd1026;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7171,%dummy}, %rd1014;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7172}, %rd1014;
	}
	shf.r.wrap.b32 	%r7173, %r7172, %r7171, 14;
	shf.r.wrap.b32 	%r7174, %r7171, %r7172, 14;
	mov.b64 	%rd1028, {%r7174, %r7173};
	shf.r.wrap.b32 	%r7175, %r7172, %r7171, 18;
	shf.r.wrap.b32 	%r7176, %r7171, %r7172, 18;
	mov.b64 	%rd1029, {%r7176, %r7175};
	xor.b64  	%rd1030, %rd1029, %rd1028;
	shf.l.wrap.b32 	%r7177, %r7171, %r7172, 23;
	shf.l.wrap.b32 	%r7178, %r7172, %r7171, 23;
	mov.b64 	%rd1031, {%r7178, %r7177};
	xor.b64  	%rd1032, %rd1030, %rd1031;
	xor.b64  	%rd1033, %rd987, %rd960;
	and.b64  	%rd1034, %rd1014, %rd1033;
	xor.b64  	%rd1035, %rd1034, %rd960;
	add.s64 	%rd1036, %rd933, %rd1381;
	ld.const.u64 	%rd1037, [%rd1027];
	add.s64 	%rd1038, %rd1036, %rd1037;
	add.s64 	%rd1039, %rd1038, %rd1035;
	add.s64 	%rd1040, %rd1039, %rd1032;
	add.s64 	%rd1041, %rd1040, %rd944;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7179,%dummy}, %rd1025;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7180}, %rd1025;
	}
	shf.r.wrap.b32 	%r7181, %r7180, %r7179, 28;
	shf.r.wrap.b32 	%r7182, %r7179, %r7180, 28;
	mov.b64 	%rd1042, {%r7182, %r7181};
	shf.l.wrap.b32 	%r7183, %r7179, %r7180, 30;
	shf.l.wrap.b32 	%r7184, %r7180, %r7179, 30;
	mov.b64 	%rd1043, {%r7184, %r7183};
	xor.b64  	%rd1044, %rd1043, %rd1042;
	shf.l.wrap.b32 	%r7185, %r7179, %r7180, 25;
	shf.l.wrap.b32 	%r7186, %r7180, %r7179, 25;
	mov.b64 	%rd1045, {%r7186, %r7185};
	xor.b64  	%rd1046, %rd1044, %rd1045;
	xor.b64  	%rd1047, %rd1025, %rd971;
	xor.b64  	%rd1048, %rd1025, %rd998;
	and.b64  	%rd1049, %rd1048, %rd1047;
	xor.b64  	%rd1050, %rd1049, %rd1025;
	add.s64 	%rd1051, %rd1040, %rd1050;
	add.s64 	%rd1052, %rd1051, %rd1046;
	add.s32 	%r7187, %r7446, 7;
	mul.wide.s32 	%rd1053, %r7187, 8;
	add.s64 	%rd1054, %rd864, %rd1053;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7188,%dummy}, %rd1041;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7189}, %rd1041;
	}
	shf.r.wrap.b32 	%r7190, %r7189, %r7188, 14;
	shf.r.wrap.b32 	%r7191, %r7188, %r7189, 14;
	mov.b64 	%rd1055, {%r7191, %r7190};
	shf.r.wrap.b32 	%r7192, %r7189, %r7188, 18;
	shf.r.wrap.b32 	%r7193, %r7188, %r7189, 18;
	mov.b64 	%rd1056, {%r7193, %r7192};
	xor.b64  	%rd1057, %rd1056, %rd1055;
	shf.l.wrap.b32 	%r7194, %r7188, %r7189, 23;
	shf.l.wrap.b32 	%r7195, %r7189, %r7188, 23;
	mov.b64 	%rd1058, {%r7195, %r7194};
	xor.b64  	%rd1059, %rd1057, %rd1058;
	xor.b64  	%rd1060, %rd1014, %rd987;
	and.b64  	%rd1061, %rd1041, %rd1060;
	xor.b64  	%rd1062, %rd1061, %rd987;
	add.s64 	%rd1063, %rd960, %rd1382;
	ld.const.u64 	%rd1064, [%rd1054];
	add.s64 	%rd1065, %rd1063, %rd1064;
	add.s64 	%rd1066, %rd1065, %rd1062;
	add.s64 	%rd1067, %rd1066, %rd1059;
	add.s64 	%rd1068, %rd1067, %rd971;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7196,%dummy}, %rd1052;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7197}, %rd1052;
	}
	shf.r.wrap.b32 	%r7198, %r7197, %r7196, 28;
	shf.r.wrap.b32 	%r7199, %r7196, %r7197, 28;
	mov.b64 	%rd1069, {%r7199, %r7198};
	shf.l.wrap.b32 	%r7200, %r7196, %r7197, 30;
	shf.l.wrap.b32 	%r7201, %r7197, %r7196, 30;
	mov.b64 	%rd1070, {%r7201, %r7200};
	xor.b64  	%rd1071, %rd1070, %rd1069;
	shf.l.wrap.b32 	%r7202, %r7196, %r7197, 25;
	shf.l.wrap.b32 	%r7203, %r7197, %r7196, 25;
	mov.b64 	%rd1072, {%r7203, %r7202};
	xor.b64  	%rd1073, %rd1071, %rd1072;
	xor.b64  	%rd1074, %rd1052, %rd998;
	xor.b64  	%rd1075, %rd1052, %rd1025;
	and.b64  	%rd1076, %rd1075, %rd1074;
	xor.b64  	%rd1077, %rd1076, %rd1052;
	add.s64 	%rd1078, %rd1067, %rd1077;
	add.s64 	%rd1079, %rd1078, %rd1073;
	add.s32 	%r7204, %r7446, 8;
	mul.wide.s32 	%rd1080, %r7204, 8;
	add.s64 	%rd1081, %rd864, %rd1080;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7205,%dummy}, %rd1068;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7206}, %rd1068;
	}
	shf.r.wrap.b32 	%r7207, %r7206, %r7205, 14;
	shf.r.wrap.b32 	%r7208, %r7205, %r7206, 14;
	mov.b64 	%rd1082, {%r7208, %r7207};
	shf.r.wrap.b32 	%r7209, %r7206, %r7205, 18;
	shf.r.wrap.b32 	%r7210, %r7205, %r7206, 18;
	mov.b64 	%rd1083, {%r7210, %r7209};
	xor.b64  	%rd1084, %rd1083, %rd1082;
	shf.l.wrap.b32 	%r7211, %r7205, %r7206, 23;
	shf.l.wrap.b32 	%r7212, %r7206, %r7205, 23;
	mov.b64 	%rd1085, {%r7212, %r7211};
	xor.b64  	%rd1086, %rd1084, %rd1085;
	xor.b64  	%rd1087, %rd1041, %rd1014;
	and.b64  	%rd1088, %rd1068, %rd1087;
	xor.b64  	%rd1089, %rd1088, %rd1014;
	add.s64 	%rd1090, %rd987, %rd1366;
	ld.const.u64 	%rd1091, [%rd1081];
	add.s64 	%rd1092, %rd1090, %rd1091;
	add.s64 	%rd1093, %rd1092, %rd1089;
	add.s64 	%rd1094, %rd1093, %rd1086;
	add.s64 	%rd1095, %rd1094, %rd998;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7213,%dummy}, %rd1079;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7214}, %rd1079;
	}
	shf.r.wrap.b32 	%r7215, %r7214, %r7213, 28;
	shf.r.wrap.b32 	%r7216, %r7213, %r7214, 28;
	mov.b64 	%rd1096, {%r7216, %r7215};
	shf.l.wrap.b32 	%r7217, %r7213, %r7214, 30;
	shf.l.wrap.b32 	%r7218, %r7214, %r7213, 30;
	mov.b64 	%rd1097, {%r7218, %r7217};
	xor.b64  	%rd1098, %rd1097, %rd1096;
	shf.l.wrap.b32 	%r7219, %r7213, %r7214, 25;
	shf.l.wrap.b32 	%r7220, %r7214, %r7213, 25;
	mov.b64 	%rd1099, {%r7220, %r7219};
	xor.b64  	%rd1100, %rd1098, %rd1099;
	xor.b64  	%rd1101, %rd1079, %rd1025;
	xor.b64  	%rd1102, %rd1079, %rd1052;
	and.b64  	%rd1103, %rd1102, %rd1101;
	xor.b64  	%rd1104, %rd1103, %rd1079;
	add.s64 	%rd1105, %rd1094, %rd1104;
	add.s64 	%rd1106, %rd1105, %rd1100;
	add.s32 	%r7221, %r7446, 9;
	mul.wide.s32 	%rd1107, %r7221, 8;
	add.s64 	%rd1108, %rd864, %rd1107;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7222,%dummy}, %rd1095;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7223}, %rd1095;
	}
	shf.r.wrap.b32 	%r7224, %r7223, %r7222, 14;
	shf.r.wrap.b32 	%r7225, %r7222, %r7223, 14;
	mov.b64 	%rd1109, {%r7225, %r7224};
	shf.r.wrap.b32 	%r7226, %r7223, %r7222, 18;
	shf.r.wrap.b32 	%r7227, %r7222, %r7223, 18;
	mov.b64 	%rd1110, {%r7227, %r7226};
	xor.b64  	%rd1111, %rd1110, %rd1109;
	shf.l.wrap.b32 	%r7228, %r7222, %r7223, 23;
	shf.l.wrap.b32 	%r7229, %r7223, %r7222, 23;
	mov.b64 	%rd1112, {%r7229, %r7228};
	xor.b64  	%rd1113, %rd1111, %rd1112;
	xor.b64  	%rd1114, %rd1068, %rd1041;
	and.b64  	%rd1115, %rd1095, %rd1114;
	xor.b64  	%rd1116, %rd1115, %rd1041;
	add.s64 	%rd1117, %rd1014, %rd1365;
	ld.const.u64 	%rd1118, [%rd1108];
	add.s64 	%rd1119, %rd1117, %rd1118;
	add.s64 	%rd1120, %rd1119, %rd1116;
	add.s64 	%rd1121, %rd1120, %rd1113;
	add.s64 	%rd1122, %rd1121, %rd1025;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7230,%dummy}, %rd1106;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7231}, %rd1106;
	}
	shf.r.wrap.b32 	%r7232, %r7231, %r7230, 28;
	shf.r.wrap.b32 	%r7233, %r7230, %r7231, 28;
	mov.b64 	%rd1123, {%r7233, %r7232};
	shf.l.wrap.b32 	%r7234, %r7230, %r7231, 30;
	shf.l.wrap.b32 	%r7235, %r7231, %r7230, 30;
	mov.b64 	%rd1124, {%r7235, %r7234};
	xor.b64  	%rd1125, %rd1124, %rd1123;
	shf.l.wrap.b32 	%r7236, %r7230, %r7231, 25;
	shf.l.wrap.b32 	%r7237, %r7231, %r7230, 25;
	mov.b64 	%rd1126, {%r7237, %r7236};
	xor.b64  	%rd1127, %rd1125, %rd1126;
	xor.b64  	%rd1128, %rd1106, %rd1052;
	xor.b64  	%rd1129, %rd1106, %rd1079;
	and.b64  	%rd1130, %rd1129, %rd1128;
	xor.b64  	%rd1131, %rd1130, %rd1106;
	add.s64 	%rd1132, %rd1121, %rd1131;
	add.s64 	%rd1133, %rd1132, %rd1127;
	add.s32 	%r7238, %r7446, 10;
	mul.wide.s32 	%rd1134, %r7238, 8;
	add.s64 	%rd1135, %rd864, %rd1134;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7239,%dummy}, %rd1122;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7240}, %rd1122;
	}
	shf.r.wrap.b32 	%r7241, %r7240, %r7239, 14;
	shf.r.wrap.b32 	%r7242, %r7239, %r7240, 14;
	mov.b64 	%rd1136, {%r7242, %r7241};
	shf.r.wrap.b32 	%r7243, %r7240, %r7239, 18;
	shf.r.wrap.b32 	%r7244, %r7239, %r7240, 18;
	mov.b64 	%rd1137, {%r7244, %r7243};
	xor.b64  	%rd1138, %rd1137, %rd1136;
	shf.l.wrap.b32 	%r7245, %r7239, %r7240, 23;
	shf.l.wrap.b32 	%r7246, %r7240, %r7239, 23;
	mov.b64 	%rd1139, {%r7246, %r7245};
	xor.b64  	%rd1140, %rd1138, %rd1139;
	xor.b64  	%rd1141, %rd1095, %rd1068;
	and.b64  	%rd1142, %rd1122, %rd1141;
	xor.b64  	%rd1143, %rd1142, %rd1068;
	add.s64 	%rd1144, %rd1041, %rd1364;
	ld.const.u64 	%rd1145, [%rd1135];
	add.s64 	%rd1146, %rd1144, %rd1145;
	add.s64 	%rd1147, %rd1146, %rd1143;
	add.s64 	%rd1148, %rd1147, %rd1140;
	add.s64 	%rd1149, %rd1148, %rd1052;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7247,%dummy}, %rd1133;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7248}, %rd1133;
	}
	shf.r.wrap.b32 	%r7249, %r7248, %r7247, 28;
	shf.r.wrap.b32 	%r7250, %r7247, %r7248, 28;
	mov.b64 	%rd1150, {%r7250, %r7249};
	shf.l.wrap.b32 	%r7251, %r7247, %r7248, 30;
	shf.l.wrap.b32 	%r7252, %r7248, %r7247, 30;
	mov.b64 	%rd1151, {%r7252, %r7251};
	xor.b64  	%rd1152, %rd1151, %rd1150;
	shf.l.wrap.b32 	%r7253, %r7247, %r7248, 25;
	shf.l.wrap.b32 	%r7254, %r7248, %r7247, 25;
	mov.b64 	%rd1153, {%r7254, %r7253};
	xor.b64  	%rd1154, %rd1152, %rd1153;
	xor.b64  	%rd1155, %rd1133, %rd1079;
	xor.b64  	%rd1156, %rd1133, %rd1106;
	and.b64  	%rd1157, %rd1156, %rd1155;
	xor.b64  	%rd1158, %rd1157, %rd1133;
	add.s64 	%rd1159, %rd1148, %rd1158;
	add.s64 	%rd1160, %rd1159, %rd1154;
	add.s32 	%r7255, %r7446, 11;
	mul.wide.s32 	%rd1161, %r7255, 8;
	add.s64 	%rd1162, %rd864, %rd1161;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7256,%dummy}, %rd1149;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7257}, %rd1149;
	}
	shf.r.wrap.b32 	%r7258, %r7257, %r7256, 14;
	shf.r.wrap.b32 	%r7259, %r7256, %r7257, 14;
	mov.b64 	%rd1163, {%r7259, %r7258};
	shf.r.wrap.b32 	%r7260, %r7257, %r7256, 18;
	shf.r.wrap.b32 	%r7261, %r7256, %r7257, 18;
	mov.b64 	%rd1164, {%r7261, %r7260};
	xor.b64  	%rd1165, %rd1164, %rd1163;
	shf.l.wrap.b32 	%r7262, %r7256, %r7257, 23;
	shf.l.wrap.b32 	%r7263, %r7257, %r7256, 23;
	mov.b64 	%rd1166, {%r7263, %r7262};
	xor.b64  	%rd1167, %rd1165, %rd1166;
	xor.b64  	%rd1168, %rd1122, %rd1095;
	and.b64  	%rd1169, %rd1149, %rd1168;
	xor.b64  	%rd1170, %rd1169, %rd1095;
	add.s64 	%rd1171, %rd1068, %rd1363;
	ld.const.u64 	%rd1172, [%rd1162];
	add.s64 	%rd1173, %rd1171, %rd1172;
	add.s64 	%rd1174, %rd1173, %rd1170;
	add.s64 	%rd1175, %rd1174, %rd1167;
	add.s64 	%rd1176, %rd1175, %rd1079;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7264,%dummy}, %rd1160;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7265}, %rd1160;
	}
	shf.r.wrap.b32 	%r7266, %r7265, %r7264, 28;
	shf.r.wrap.b32 	%r7267, %r7264, %r7265, 28;
	mov.b64 	%rd1177, {%r7267, %r7266};
	shf.l.wrap.b32 	%r7268, %r7264, %r7265, 30;
	shf.l.wrap.b32 	%r7269, %r7265, %r7264, 30;
	mov.b64 	%rd1178, {%r7269, %r7268};
	xor.b64  	%rd1179, %rd1178, %rd1177;
	shf.l.wrap.b32 	%r7270, %r7264, %r7265, 25;
	shf.l.wrap.b32 	%r7271, %r7265, %r7264, 25;
	mov.b64 	%rd1180, {%r7271, %r7270};
	xor.b64  	%rd1181, %rd1179, %rd1180;
	xor.b64  	%rd1182, %rd1160, %rd1106;
	xor.b64  	%rd1183, %rd1160, %rd1133;
	and.b64  	%rd1184, %rd1183, %rd1182;
	xor.b64  	%rd1185, %rd1184, %rd1160;
	add.s64 	%rd1186, %rd1175, %rd1185;
	add.s64 	%rd1187, %rd1186, %rd1181;
	add.s32 	%r7272, %r7446, 12;
	mul.wide.s32 	%rd1188, %r7272, 8;
	add.s64 	%rd1189, %rd864, %rd1188;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7273,%dummy}, %rd1176;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7274}, %rd1176;
	}
	shf.r.wrap.b32 	%r7275, %r7274, %r7273, 14;
	shf.r.wrap.b32 	%r7276, %r7273, %r7274, 14;
	mov.b64 	%rd1190, {%r7276, %r7275};
	shf.r.wrap.b32 	%r7277, %r7274, %r7273, 18;
	shf.r.wrap.b32 	%r7278, %r7273, %r7274, 18;
	mov.b64 	%rd1191, {%r7278, %r7277};
	xor.b64  	%rd1192, %rd1191, %rd1190;
	shf.l.wrap.b32 	%r7279, %r7273, %r7274, 23;
	shf.l.wrap.b32 	%r7280, %r7274, %r7273, 23;
	mov.b64 	%rd1193, {%r7280, %r7279};
	xor.b64  	%rd1194, %rd1192, %rd1193;
	xor.b64  	%rd1195, %rd1149, %rd1122;
	and.b64  	%rd1196, %rd1176, %rd1195;
	xor.b64  	%rd1197, %rd1196, %rd1122;
	add.s64 	%rd1198, %rd1095, %rd1362;
	ld.const.u64 	%rd1199, [%rd1189];
	add.s64 	%rd1200, %rd1198, %rd1199;
	add.s64 	%rd1201, %rd1200, %rd1197;
	add.s64 	%rd1202, %rd1201, %rd1194;
	add.s64 	%rd1374, %rd1202, %rd1106;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7281,%dummy}, %rd1187;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7282}, %rd1187;
	}
	shf.r.wrap.b32 	%r7283, %r7282, %r7281, 28;
	shf.r.wrap.b32 	%r7284, %r7281, %r7282, 28;
	mov.b64 	%rd1203, {%r7284, %r7283};
	shf.l.wrap.b32 	%r7285, %r7281, %r7282, 30;
	shf.l.wrap.b32 	%r7286, %r7282, %r7281, 30;
	mov.b64 	%rd1204, {%r7286, %r7285};
	xor.b64  	%rd1205, %rd1204, %rd1203;
	shf.l.wrap.b32 	%r7287, %r7281, %r7282, 25;
	shf.l.wrap.b32 	%r7288, %r7282, %r7281, 25;
	mov.b64 	%rd1206, {%r7288, %r7287};
	xor.b64  	%rd1207, %rd1205, %rd1206;
	xor.b64  	%rd1208, %rd1187, %rd1133;
	xor.b64  	%rd1209, %rd1187, %rd1160;
	and.b64  	%rd1210, %rd1209, %rd1208;
	xor.b64  	%rd1211, %rd1210, %rd1187;
	add.s64 	%rd1212, %rd1202, %rd1211;
	add.s64 	%rd1370, %rd1212, %rd1207;
	add.s32 	%r7289, %r7446, 13;
	mul.wide.s32 	%rd1213, %r7289, 8;
	add.s64 	%rd1214, %rd864, %rd1213;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7290,%dummy}, %rd1374;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7291}, %rd1374;
	}
	shf.r.wrap.b32 	%r7292, %r7291, %r7290, 14;
	shf.r.wrap.b32 	%r7293, %r7290, %r7291, 14;
	mov.b64 	%rd1215, {%r7293, %r7292};
	shf.r.wrap.b32 	%r7294, %r7291, %r7290, 18;
	shf.r.wrap.b32 	%r7295, %r7290, %r7291, 18;
	mov.b64 	%rd1216, {%r7295, %r7294};
	xor.b64  	%rd1217, %rd1216, %rd1215;
	shf.l.wrap.b32 	%r7296, %r7290, %r7291, 23;
	shf.l.wrap.b32 	%r7297, %r7291, %r7290, 23;
	mov.b64 	%rd1218, {%r7297, %r7296};
	xor.b64  	%rd1219, %rd1217, %rd1218;
	xor.b64  	%rd1220, %rd1176, %rd1149;
	and.b64  	%rd1221, %rd1374, %rd1220;
	xor.b64  	%rd1222, %rd1221, %rd1149;
	add.s64 	%rd1223, %rd1122, %rd1361;
	ld.const.u64 	%rd1224, [%rd1214];
	add.s64 	%rd1225, %rd1223, %rd1224;
	add.s64 	%rd1226, %rd1225, %rd1222;
	add.s64 	%rd1227, %rd1226, %rd1219;
	add.s64 	%rd1373, %rd1227, %rd1133;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7298,%dummy}, %rd1370;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7299}, %rd1370;
	}
	shf.r.wrap.b32 	%r7300, %r7299, %r7298, 28;
	shf.r.wrap.b32 	%r7301, %r7298, %r7299, 28;
	mov.b64 	%rd1228, {%r7301, %r7300};
	shf.l.wrap.b32 	%r7302, %r7298, %r7299, 30;
	shf.l.wrap.b32 	%r7303, %r7299, %r7298, 30;
	mov.b64 	%rd1229, {%r7303, %r7302};
	xor.b64  	%rd1230, %rd1229, %rd1228;
	shf.l.wrap.b32 	%r7304, %r7298, %r7299, 25;
	shf.l.wrap.b32 	%r7305, %r7299, %r7298, 25;
	mov.b64 	%rd1231, {%r7305, %r7304};
	xor.b64  	%rd1232, %rd1230, %rd1231;
	xor.b64  	%rd1233, %rd1370, %rd1160;
	xor.b64  	%rd1234, %rd1370, %rd1187;
	and.b64  	%rd1235, %rd1234, %rd1233;
	xor.b64  	%rd1236, %rd1235, %rd1370;
	add.s64 	%rd1237, %rd1227, %rd1236;
	add.s64 	%rd1369, %rd1237, %rd1232;
	add.s32 	%r7306, %r7446, 14;
	mul.wide.s32 	%rd1238, %r7306, 8;
	add.s64 	%rd1239, %rd864, %rd1238;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7307,%dummy}, %rd1373;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7308}, %rd1373;
	}
	shf.r.wrap.b32 	%r7309, %r7308, %r7307, 14;
	shf.r.wrap.b32 	%r7310, %r7307, %r7308, 14;
	mov.b64 	%rd1240, {%r7310, %r7309};
	shf.r.wrap.b32 	%r7311, %r7308, %r7307, 18;
	shf.r.wrap.b32 	%r7312, %r7307, %r7308, 18;
	mov.b64 	%rd1241, {%r7312, %r7311};
	xor.b64  	%rd1242, %rd1241, %rd1240;
	shf.l.wrap.b32 	%r7313, %r7307, %r7308, 23;
	shf.l.wrap.b32 	%r7314, %r7308, %r7307, 23;
	mov.b64 	%rd1243, {%r7314, %r7313};
	xor.b64  	%rd1244, %rd1242, %rd1243;
	xor.b64  	%rd1245, %rd1374, %rd1176;
	and.b64  	%rd1246, %rd1373, %rd1245;
	xor.b64  	%rd1247, %rd1246, %rd1176;
	add.s64 	%rd1248, %rd1149, %rd1360;
	ld.const.u64 	%rd1249, [%rd1239];
	add.s64 	%rd1250, %rd1248, %rd1249;
	add.s64 	%rd1251, %rd1250, %rd1247;
	add.s64 	%rd1252, %rd1251, %rd1244;
	add.s64 	%rd1372, %rd1252, %rd1160;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7315,%dummy}, %rd1369;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7316}, %rd1369;
	}
	shf.r.wrap.b32 	%r7317, %r7316, %r7315, 28;
	shf.r.wrap.b32 	%r7318, %r7315, %r7316, 28;
	mov.b64 	%rd1253, {%r7318, %r7317};
	shf.l.wrap.b32 	%r7319, %r7315, %r7316, 30;
	shf.l.wrap.b32 	%r7320, %r7316, %r7315, 30;
	mov.b64 	%rd1254, {%r7320, %r7319};
	xor.b64  	%rd1255, %rd1254, %rd1253;
	shf.l.wrap.b32 	%r7321, %r7315, %r7316, 25;
	shf.l.wrap.b32 	%r7322, %r7316, %r7315, 25;
	mov.b64 	%rd1256, {%r7322, %r7321};
	xor.b64  	%rd1257, %rd1255, %rd1256;
	xor.b64  	%rd1258, %rd1369, %rd1187;
	xor.b64  	%rd1259, %rd1369, %rd1370;
	and.b64  	%rd1260, %rd1259, %rd1258;
	xor.b64  	%rd1261, %rd1260, %rd1369;
	add.s64 	%rd1262, %rd1252, %rd1261;
	add.s64 	%rd1368, %rd1262, %rd1257;
	add.s32 	%r7323, %r7446, 15;
	mul.wide.s32 	%rd1263, %r7323, 8;
	add.s64 	%rd1264, %rd864, %rd1263;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7324,%dummy}, %rd1372;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7325}, %rd1372;
	}
	shf.r.wrap.b32 	%r7326, %r7325, %r7324, 14;
	shf.r.wrap.b32 	%r7327, %r7324, %r7325, 14;
	mov.b64 	%rd1265, {%r7327, %r7326};
	shf.r.wrap.b32 	%r7328, %r7325, %r7324, 18;
	shf.r.wrap.b32 	%r7329, %r7324, %r7325, 18;
	mov.b64 	%rd1266, {%r7329, %r7328};
	xor.b64  	%rd1267, %rd1266, %rd1265;
	shf.l.wrap.b32 	%r7330, %r7324, %r7325, 23;
	shf.l.wrap.b32 	%r7331, %r7325, %r7324, 23;
	mov.b64 	%rd1268, {%r7331, %r7330};
	xor.b64  	%rd1269, %rd1267, %rd1268;
	xor.b64  	%rd1270, %rd1373, %rd1374;
	and.b64  	%rd1271, %rd1372, %rd1270;
	xor.b64  	%rd1272, %rd1271, %rd1374;
	add.s64 	%rd1273, %rd1176, %rd1359;
	ld.const.u64 	%rd1274, [%rd1264];
	add.s64 	%rd1275, %rd1273, %rd1274;
	add.s64 	%rd1276, %rd1275, %rd1272;
	add.s64 	%rd1277, %rd1276, %rd1269;
	add.s64 	%rd1371, %rd1277, %rd1187;
	{
	.reg .b32 %dummy;
	mov.b64 	{%r7332,%dummy}, %rd1368;
	}
	{
	.reg .b32 %dummy;
	mov.b64 	{%dummy,%r7333}, %rd1368;
	}
	shf.r.wrap.b32 	%r7334, %r7333, %r7332, 28;
	shf.r.wrap.b32 	%r7335, %r7332, %r7333, 28;
	mov.b64 	%rd1278, {%r7335, %r7334};
	shf.l.wrap.b32 	%r7336, %r7332, %r7333, 30;
	shf.l.wrap.b32 	%r7337, %r7333, %r7332, 30;
	mov.b64 	%rd1279, {%r7337, %r7336};
	xor.b64  	%rd1280, %rd1279, %rd1278;
	shf.l.wrap.b32 	%r7338, %r7332, %r7333, 25;
	shf.l.wrap.b32 	%r7339, %r7333, %r7332, 25;
	mov.b64 	%rd1281, {%r7339, %r7338};
	xor.b64  	%rd1282, %rd1280, %rd1281;
	xor.b64  	%rd1283, %rd1368, %rd1370;
	xor.b64  	%rd1284, %rd1368, %rd1369;
	and.b64  	%rd1285, %rd1284, %rd1283;
	xor.b64  	%rd1286, %rd1285, %rd1368;
	add.s64 	%rd1287, %rd1277, %rd1286;
	add.s64 	%rd1367, %rd1287, %rd1282;
	add.s32 	%r7446, %r7446, 16;
	setp.lt.s32	%p54, %r7446, 80;
	@%p54 bra 	BB6_95;
	bra.uni 	BB6_96;

BB6_55:
	setp.eq.s32	%p23, %r754, 23;
	mov.u32 	%r7415, %r7414;
	mov.u32 	%r7416, %r7414;
	mov.u32 	%r7417, %r7414;
	mov.u32 	%r7418, %r7414;
	mov.u32 	%r7419, %r7414;
	mov.u32 	%r7420, %r7414;
	mov.u32 	%r7421, %r7414;
	mov.u32 	%r7422, %r7414;
	mov.u32 	%r7423, %r7414;
	mov.u32 	%r7424, %r7414;
	mov.u32 	%r7425, %r7414;
	mov.u32 	%r7426, %r7414;
	mov.u32 	%r7427, %r7414;
	mov.u32 	%r7428, %r7414;
	mov.u32 	%r7429, %r7414;
	mov.u32 	%r7430, %r7414;
	mov.u32 	%r7431, %r7414;
	mov.u32 	%r7432, %r7414;
	mov.u32 	%r7433, %r7414;
	mov.u32 	%r7434, %r7414;
	mov.u32 	%r7435, %r7414;
	mov.u32 	%r7436, %r7414;
	mov.u32 	%r7437, %r7414;
	mov.u32 	%r7438, %r7414;
	mov.u32 	%r7439, %r7414;
	mov.u32 	%r7440, %r7414;
	mov.u32 	%r7441, %r7414;
	mov.u32 	%r7442, %r7414;
	mov.u32 	%r7443, %r7414;
	mov.u32 	%r7444, %r7414;
	mov.u32 	%r7445, %r7414;
	@%p23 bra 	BB6_56;
	bra.uni 	BB6_94;

BB6_56:
	mov.u32 	%r7412, 0;
	// inline asm
	prmt.b32 %r7434, %r7412, %r44, %r45;
	// inline asm
	ld.local.u32 	%r2106, [%rd55];
	ld.local.u32 	%r2107, [%rd8+8];
	// inline asm
	prmt.b32 %r7435, %r2106, %r2107, %r45;
	// inline asm
	ld.local.u32 	%r2110, [%rd8+8];
	ld.local.u32 	%r2111, [%rd8+4];
	// inline asm
	prmt.b32 %r7436, %r2110, %r2111, %r45;
	// inline asm
	ld.local.v2.u32 	{%r2243, %r2244}, [%rd8];
	// inline asm
	prmt.b32 %r7437, %r2244, %r2243, %r45;
	// inline asm
	ld.local.u32 	%r2118, [%rd8];
	ld.local.u32 	%r2119, [%rd7+12];
	// inline asm
	prmt.b32 %r7430, %r2118, %r2119, %r45;
	// inline asm
	ld.local.v2.u32 	{%r2245, %r2246}, [%rd7+8];
	// inline asm
	prmt.b32 %r7431, %r2246, %r2245, %r45;
	// inline asm
	ld.local.u32 	%r2126, [%rd7+8];
	ld.local.u32 	%r2127, [%rd7+4];
	// inline asm
	prmt.b32 %r7432, %r2126, %r2127, %r45;
	// inline asm
	ld.local.v2.u32 	{%r2247, %r2248}, [%rd7];
	// inline asm
	prmt.b32 %r7433, %r2248, %r2247, %r45;
	// inline asm
	ld.local.u32 	%r2134, [%rd7];
	ld.local.u32 	%r2135, [%rd6+12];
	// inline asm
	prmt.b32 %r7426, %r2134, %r2135, %r45;
	// inline asm
	ld.local.v2.u32 	{%r2249, %r2250}, [%rd6+8];
	// inline asm
	prmt.b32 %r7427, %r2250, %r2249, %r45;
	// inline asm
	ld.local.u32 	%r2142, [%rd6+8];
	ld.local.u32 	%r2143, [%rd6+4];
	// inline asm
	prmt.b32 %r7428, %r2142, %r2143, %r45;
	// inline asm
	ld.local.v2.u32 	{%r2251, %r2252}, [%rd6];
	// inline asm
	prmt.b32 %r7429, %r2252, %r2251, %r45;
	// inline asm
	ld.local.u32 	%r2150, [%rd6];
	ld.local.u32 	%r2151, [%rd5+12];
	// inline asm
	prmt.b32 %r7422, %r2150, %r2151, %r45;
	// inline asm
	ld.local.v2.u32 	{%r2253, %r2254}, [%rd5+8];
	// inline asm
	prmt.b32 %r7423, %r2254, %r2253, %r45;
	// inline asm
	ld.local.u32 	%r2158, [%rd5+8];
	ld.local.u32 	%r2159, [%rd5+4];
	// inline asm
	prmt.b32 %r7424, %r2158, %r2159, %r45;
	// inline asm
	ld.local.v2.u32 	{%r2255, %r2256}, [%rd5];
	// inline asm
	prmt.b32 %r7425, %r2256, %r2255, %r45;
	// inline asm
	ld.local.u32 	%r2166, [%rd5];
	ld.local.u32 	%r2167, [%rd4+12];
	// inline asm
	prmt.b32 %r7418, %r2166, %r2167, %r45;
	// inline asm
	ld.local.v2.u32 	{%r2257, %r2258}, [%rd4+8];
	// inline asm
	prmt.b32 %r7419, %r2258, %r2257, %r45;
	// inline asm
	ld.local.u32 	%r2174, [%rd4+8];
	ld.local.u32 	%r2175, [%rd4+4];
	// inline asm
	prmt.b32 %r7420, %r2174, %r2175, %r45;
	// inline asm
	ld.local.v2.u32 	{%r2259, %r2260}, [%rd4];
	// inline asm
	prmt.b32 %r7421, %r2260, %r2259, %r45;
	// inline asm
	ld.local.u32 	%r2182, [%rd4];
	ld.local.u32 	%r2183, [%rd3+12];
	// inline asm
	prmt.b32 %r7414, %r2182, %r2183, %r45;
	// inline asm
	ld.local.v2.u32 	{%r2261, %r2262}, [%rd3+8];
	// inline asm
	prmt.b32 %r7415, %r2262, %r2261, %r45;
	// inline asm
	ld.local.u32 	%r2190, [%rd3+8];
	ld.local.u32 	%r2191, [%rd3+4];
	// inline asm
	prmt.b32 %r7416, %r2190, %r2191, %r45;
	// inline asm
	ld.local.v2.u32 	{%r2263, %r2264}, [%rd3];
	// inline asm
	prmt.b32 %r7417, %r2264, %r2263, %r45;
	// inline asm
	ld.local.u32 	%r2198, [%rd3];
	ld.local.u32 	%r2199, [%rd2+12];
	// inline asm
	prmt.b32 %r2197, %r2198, %r2199, %r45;
	// inline asm
	st.local.u32 	[%rd55], %r2197;
	ld.local.v2.u32 	{%r2265, %r2266}, [%rd2+8];
	// inline asm
	prmt.b32 %r2201, %r2266, %r2265, %r45;
	// inline asm
	st.local.u32 	[%rd8+8], %r2201;
	ld.local.u32 	%r2206, [%rd2+8];
	ld.local.u32 	%r2207, [%rd2+4];
	// inline asm
	prmt.b32 %r2205, %r2206, %r2207, %r45;
	// inline asm
	st.local.u32 	[%rd8+4], %r2205;
	ld.local.v2.u32 	{%r2267, %r2268}, [%rd2];
	// inline asm
	prmt.b32 %r2209, %r2268, %r2267, %r45;
	// inline asm
	st.local.u32 	[%rd8], %r2209;
	ld.local.u32 	%r2214, [%rd2];
	ld.local.u32 	%r2215, [%rd1+12];
	// inline asm
	prmt.b32 %r2213, %r2214, %r2215, %r45;
	// inline asm
	st.local.u32 	[%rd7+12], %r2213;
	ld.local.v2.u32 	{%r2269, %r2270}, [%rd1+8];
	// inline asm
	prmt.b32 %r2217, %r2270, %r2269, %r45;
	// inline asm
	st.local.u32 	[%rd7+8], %r2217;
	ld.local.u32 	%r2222, [%rd1+8];
	ld.local.u32 	%r2223, [%rd1+4];
	// inline asm
	prmt.b32 %r2221, %r2222, %r2223, %r45;
	// inline asm
	st.local.u32 	[%rd7+4], %r2221;
	ld.local.v2.u32 	{%r2271, %r2272}, [%rd1];
	// inline asm
	prmt.b32 %r2225, %r2272, %r2271, %r45;
	// inline asm
	st.local.u32 	[%rd7], %r2225;
	ld.local.u32 	%r2230, [%rd1];
	// inline asm
	prmt.b32 %r2229, %r2230, %r7412, %r45;
	// inline asm
	st.local.v4.u32 	[%rd6], {%r7412, %r7412, %r7412, %r2229};
	st.local.v4.u32 	[%rd5], {%r7412, %r7412, %r7412, %r7412};
	st.local.v4.u32 	[%rd4], {%r7412, %r7412, %r7412, %r7412};
	st.local.v4.u32 	[%rd3], {%r7412, %r7412, %r7412, %r7412};
	st.local.v4.u32 	[%rd2], {%r7412, %r7412, %r7412, %r7412};
	st.local.v2.u32 	[%rd1+8], {%r7412, %r7412};
	mov.u64 	%rd273, 0;
	st.local.u64 	[%rd1], %rd273;
	mov.u32 	%r7413, %r7412;
	bra.uni 	BB6_90;

BB6_39:
	setp.eq.s32	%p35, %r754, 15;
	mov.u32 	%r7415, %r7414;
	mov.u32 	%r7416, %r7414;
	mov.u32 	%r7417, %r7414;
	mov.u32 	%r7418, %r7414;
	mov.u32 	%r7419, %r7414;
	mov.u32 	%r7420, %r7414;
	mov.u32 	%r7421, %r7414;
	mov.u32 	%r7422, %r7414;
	mov.u32 	%r7423, %r7414;
	mov.u32 	%r7424, %r7414;
	mov.u32 	%r7425, %r7414;
	mov.u32 	%r7426, %r7414;
	mov.u32 	%r7427, %r7414;
	mov.u32 	%r7428, %r7414;
	mov.u32 	%r7429, %r7414;
	mov.u32 	%r7430, %r7414;
	mov.u32 	%r7431, %r7414;
	mov.u32 	%r7432, %r7414;
	mov.u32 	%r7433, %r7414;
	mov.u32 	%r7434, %r7414;
	mov.u32 	%r7435, %r7414;
	mov.u32 	%r7436, %r7414;
	mov.u32 	%r7437, %r7414;
	mov.u32 	%r7438, %r7414;
	mov.u32 	%r7439, %r7414;
	mov.u32 	%r7440, %r7414;
	mov.u32 	%r7441, %r7414;
	mov.u32 	%r7442, %r7414;
	mov.u32 	%r7443, %r7414;
	mov.u32 	%r7444, %r7414;
	mov.u32 	%r7445, %r7414;
	@%p35 bra 	BB6_40;
	bra.uni 	BB6_94;

BB6_40:
	mov.u32 	%r7412, 0;
	// inline asm
	prmt.b32 %r7426, %r7412, %r44, %r45;
	// inline asm
	ld.local.u32 	%r3510, [%rd55];
	ld.local.u32 	%r3511, [%rd8+8];
	// inline asm
	prmt.b32 %r7427, %r3510, %r3511, %r45;
	// inline asm
	ld.local.u32 	%r3514, [%rd8+8];
	ld.local.u32 	%r3515, [%rd8+4];
	// inline asm
	prmt.b32 %r7428, %r3514, %r3515, %r45;
	// inline asm
	ld.local.v2.u32 	{%r3655, %r3656}, [%rd8];
	// inline asm
	prmt.b32 %r7429, %r3656, %r3655, %r45;
	// inline asm
	ld.local.u32 	%r3522, [%rd8];
	ld.local.u32 	%r3523, [%rd7+12];
	// inline asm
	prmt.b32 %r7422, %r3522, %r3523, %r45;
	// inline asm
	ld.local.v2.u32 	{%r3657, %r3658}, [%rd7+8];
	// inline asm
	prmt.b32 %r7423, %r3658, %r3657, %r45;
	// inline asm
	ld.local.u32 	%r3530, [%rd7+8];
	ld.local.u32 	%r3531, [%rd7+4];
	// inline asm
	prmt.b32 %r7424, %r3530, %r3531, %r45;
	// inline asm
	ld.local.v2.u32 	{%r3659, %r3660}, [%rd7];
	// inline asm
	prmt.b32 %r7425, %r3660, %r3659, %r45;
	// inline asm
	ld.local.u32 	%r3538, [%rd7];
	ld.local.u32 	%r3539, [%rd6+12];
	// inline asm
	prmt.b32 %r7418, %r3538, %r3539, %r45;
	// inline asm
	ld.local.v2.u32 	{%r3661, %r3662}, [%rd6+8];
	// inline asm
	prmt.b32 %r7419, %r3662, %r3661, %r45;
	// inline asm
	ld.local.u32 	%r3546, [%rd6+8];
	ld.local.u32 	%r3547, [%rd6+4];
	// inline asm
	prmt.b32 %r7420, %r3546, %r3547, %r45;
	// inline asm
	ld.local.v2.u32 	{%r3663, %r3664}, [%rd6];
	// inline asm
	prmt.b32 %r7421, %r3664, %r3663, %r45;
	// inline asm
	ld.local.u32 	%r3554, [%rd6];
	ld.local.u32 	%r3555, [%rd5+12];
	// inline asm
	prmt.b32 %r7414, %r3554, %r3555, %r45;
	// inline asm
	ld.local.v2.u32 	{%r3665, %r3666}, [%rd5+8];
	// inline asm
	prmt.b32 %r7415, %r3666, %r3665, %r45;
	// inline asm
	ld.local.u32 	%r3562, [%rd5+8];
	ld.local.u32 	%r3563, [%rd5+4];
	// inline asm
	prmt.b32 %r7416, %r3562, %r3563, %r45;
	// inline asm
	ld.local.v2.u32 	{%r3667, %r3668}, [%rd5];
	// inline asm
	prmt.b32 %r7417, %r3668, %r3667, %r45;
	// inline asm
	ld.local.u32 	%r3570, [%rd5];
	ld.local.u32 	%r3571, [%rd4+12];
	// inline asm
	prmt.b32 %r3569, %r3570, %r3571, %r45;
	// inline asm
	st.local.u32 	[%rd55], %r3569;
	ld.local.v2.u32 	{%r3669, %r3670}, [%rd4+8];
	// inline asm
	prmt.b32 %r3573, %r3670, %r3669, %r45;
	// inline asm
	st.local.u32 	[%rd8+8], %r3573;
	ld.local.u32 	%r3578, [%rd4+8];
	ld.local.u32 	%r3579, [%rd4+4];
	// inline asm
	prmt.b32 %r3577, %r3578, %r3579, %r45;
	// inline asm
	st.local.u32 	[%rd8+4], %r3577;
	ld.local.v2.u32 	{%r3671, %r3672}, [%rd4];
	// inline asm
	prmt.b32 %r3581, %r3672, %r3671, %r45;
	// inline asm
	st.local.u32 	[%rd8], %r3581;
	ld.local.u32 	%r3586, [%rd4];
	ld.local.u32 	%r3587, [%rd3+12];
	// inline asm
	prmt.b32 %r3585, %r3586, %r3587, %r45;
	// inline asm
	st.local.u32 	[%rd7+12], %r3585;
	ld.local.v2.u32 	{%r3673, %r3674}, [%rd3+8];
	// inline asm
	prmt.b32 %r3589, %r3674, %r3673, %r45;
	// inline asm
	st.local.u32 	[%rd7+8], %r3589;
	ld.local.u32 	%r3594, [%rd3+8];
	ld.local.u32 	%r3595, [%rd3+4];
	// inline asm
	prmt.b32 %r3593, %r3594, %r3595, %r45;
	// inline asm
	st.local.u32 	[%rd7+4], %r3593;
	ld.local.v2.u32 	{%r3675, %r3676}, [%rd3];
	// inline asm
	prmt.b32 %r3597, %r3676, %r3675, %r45;
	// inline asm
	st.local.u32 	[%rd7], %r3597;
	ld.local.u32 	%r3602, [%rd3];
	ld.local.u32 	%r3603, [%rd2+12];
	// inline asm
	prmt.b32 %r3601, %r3602, %r3603, %r45;
	// inline asm
	st.local.u32 	[%rd6+12], %r3601;
	ld.local.v2.u32 	{%r3677, %r3678}, [%rd2+8];
	// inline asm
	prmt.b32 %r3605, %r3678, %r3677, %r45;
	// inline asm
	st.local.u32 	[%rd6+8], %r3605;
	ld.local.u32 	%r3610, [%rd2+8];
	ld.local.u32 	%r3611, [%rd2+4];
	// inline asm
	prmt.b32 %r3609, %r3610, %r3611, %r45;
	// inline asm
	st.local.u32 	[%rd6+4], %r3609;
	ld.local.v2.u32 	{%r3679, %r3680}, [%rd2];
	// inline asm
	prmt.b32 %r3613, %r3680, %r3679, %r45;
	// inline asm
	st.local.u32 	[%rd6], %r3613;
	ld.local.u32 	%r3618, [%rd2];
	ld.local.u32 	%r3619, [%rd1+12];
	// inline asm
	prmt.b32 %r3617, %r3618, %r3619, %r45;
	// inline asm
	st.local.u32 	[%rd5+12], %r3617;
	ld.local.v2.u32 	{%r3681, %r3682}, [%rd1+8];
	// inline asm
	prmt.b32 %r3621, %r3682, %r3681, %r45;
	// inline asm
	st.local.u32 	[%rd5+8], %r3621;
	ld.local.u32 	%r3626, [%rd1+8];
	ld.local.u32 	%r3627, [%rd1+4];
	// inline asm
	prmt.b32 %r3625, %r3626, %r3627, %r45;
	// inline asm
	st.local.u32 	[%rd5+4], %r3625;
	ld.local.v2.u32 	{%r3683, %r3684}, [%rd1];
	// inline asm
	prmt.b32 %r3629, %r3684, %r3683, %r45;
	// inline asm
	st.local.u32 	[%rd5], %r3629;
	ld.local.u32 	%r3634, [%rd1];
	// inline asm
	prmt.b32 %r3633, %r3634, %r7412, %r45;
	// inline asm
	st.local.v4.u32 	[%rd4], {%r7412, %r7412, %r7412, %r3633};
	st.local.v4.u32 	[%rd3], {%r7412, %r7412, %r7412, %r7412};
	st.local.v4.u32 	[%rd2], {%r7412, %r7412, %r7412, %r7412};
	st.local.v2.u32 	[%rd1+8], {%r7412, %r7412};
	mov.u64 	%rd281, 0;
	st.local.u64 	[%rd1], %rd281;
	mov.u32 	%r7413, %r7412;
	bra.uni 	BB6_88;

BB6_70:
	setp.ne.s32	%p12, %r754, 31;
	mov.u32 	%r7415, %r7414;
	mov.u32 	%r7416, %r7414;
	mov.u32 	%r7417, %r7414;
	mov.u32 	%r7418, %r7414;
	mov.u32 	%r7419, %r7414;
	mov.u32 	%r7420, %r7414;
	mov.u32 	%r7421, %r7414;
	mov.u32 	%r7422, %r7414;
	mov.u32 	%r7423, %r7414;
	mov.u32 	%r7424, %r7414;
	mov.u32 	%r7425, %r7414;
	mov.u32 	%r7426, %r7414;
	mov.u32 	%r7427, %r7414;
	mov.u32 	%r7428, %r7414;
	mov.u32 	%r7429, %r7414;
	mov.u32 	%r7430, %r7414;
	mov.u32 	%r7431, %r7414;
	mov.u32 	%r7432, %r7414;
	mov.u32 	%r7433, %r7414;
	mov.u32 	%r7434, %r7414;
	mov.u32 	%r7435, %r7414;
	mov.u32 	%r7436, %r7414;
	mov.u32 	%r7437, %r7414;
	mov.u32 	%r7438, %r7414;
	mov.u32 	%r7439, %r7414;
	mov.u32 	%r7440, %r7414;
	mov.u32 	%r7441, %r7414;
	mov.u32 	%r7442, %r7414;
	mov.u32 	%r7443, %r7414;
	mov.u32 	%r7444, %r7414;
	mov.u32 	%r7445, %r7414;
	@%p12 bra 	BB6_94;

	mov.u32 	%r7412, 0;
	// inline asm
	prmt.b32 %r7442, %r7412, %r44, %r45;
	// inline asm
	ld.local.u32 	%r766, [%rd55];
	ld.local.u32 	%r767, [%rd8+8];
	// inline asm
	prmt.b32 %r7443, %r766, %r767, %r45;
	// inline asm
	ld.local.u32 	%r770, [%rd8+8];
	ld.local.u32 	%r771, [%rd8+4];
	// inline asm
	prmt.b32 %r7444, %r770, %r771, %r45;
	// inline asm
	ld.local.v2.u32 	{%r895, %r896}, [%rd8];
	// inline asm
	prmt.b32 %r7445, %r896, %r895, %r45;
	// inline asm
	ld.local.u32 	%r778, [%rd8];
	ld.local.u32 	%r779, [%rd7+12];
	// inline asm
	prmt.b32 %r7438, %r778, %r779, %r45;
	// inline asm
	ld.local.v2.u32 	{%r897, %r898}, [%rd7+8];
	// inline asm
	prmt.b32 %r7439, %r898, %r897, %r45;
	// inline asm
	ld.local.u32 	%r786, [%rd7+8];
	ld.local.u32 	%r787, [%rd7+4];
	// inline asm
	prmt.b32 %r7440, %r786, %r787, %r45;
	// inline asm
	ld.local.v2.u32 	{%r899, %r900}, [%rd7];
	// inline asm
	prmt.b32 %r7441, %r900, %r899, %r45;
	// inline asm
	ld.local.u32 	%r794, [%rd7];
	ld.local.u32 	%r795, [%rd6+12];
	// inline asm
	prmt.b32 %r7434, %r794, %r795, %r45;
	// inline asm
	ld.local.v2.u32 	{%r901, %r902}, [%rd6+8];
	// inline asm
	prmt.b32 %r7435, %r902, %r901, %r45;
	// inline asm
	ld.local.u32 	%r802, [%rd6+8];
	ld.local.u32 	%r803, [%rd6+4];
	// inline asm
	prmt.b32 %r7436, %r802, %r803, %r45;
	// inline asm
	ld.local.v2.u32 	{%r903, %r904}, [%rd6];
	// inline asm
	prmt.b32 %r7437, %r904, %r903, %r45;
	// inline asm
	ld.local.u32 	%r810, [%rd6];
	ld.local.u32 	%r811, [%rd5+12];
	// inline asm
	prmt.b32 %r7430, %r810, %r811, %r45;
	// inline asm
	ld.local.v2.u32 	{%r905, %r906}, [%rd5+8];
	// inline asm
	prmt.b32 %r7431, %r906, %r905, %r45;
	// inline asm
	ld.local.u32 	%r818, [%rd5+8];
	ld.local.u32 	%r819, [%rd5+4];
	// inline asm
	prmt.b32 %r7432, %r818, %r819, %r45;
	// inline asm
	ld.local.v2.u32 	{%r907, %r908}, [%rd5];
	// inline asm
	prmt.b32 %r7433, %r908, %r907, %r45;
	// inline asm
	ld.local.u32 	%r826, [%rd5];
	ld.local.u32 	%r827, [%rd4+12];
	// inline asm
	prmt.b32 %r7426, %r826, %r827, %r45;
	// inline asm
	ld.local.v2.u32 	{%r909, %r910}, [%rd4+8];
	// inline asm
	prmt.b32 %r7427, %r910, %r909, %r45;
	// inline asm
	ld.local.u32 	%r834, [%rd4+8];
	ld.local.u32 	%r835, [%rd4+4];
	// inline asm
	prmt.b32 %r7428, %r834, %r835, %r45;
	// inline asm
	ld.local.v2.u32 	{%r911, %r912}, [%rd4];
	// inline asm
	prmt.b32 %r7429, %r912, %r911, %r45;
	// inline asm
	ld.local.u32 	%r842, [%rd4];
	ld.local.u32 	%r843, [%rd3+12];
	// inline asm
	prmt.b32 %r7422, %r842, %r843, %r45;
	// inline asm
	ld.local.v2.u32 	{%r913, %r914}, [%rd3+8];
	// inline asm
	prmt.b32 %r7423, %r914, %r913, %r45;
	// inline asm
	ld.local.u32 	%r850, [%rd3+8];
	ld.local.u32 	%r851, [%rd3+4];
	// inline asm
	prmt.b32 %r7424, %r850, %r851, %r45;
	// inline asm
	ld.local.v2.u32 	{%r915, %r916}, [%rd3];
	// inline asm
	prmt.b32 %r7425, %r916, %r915, %r45;
	// inline asm
	ld.local.u32 	%r858, [%rd3];
	ld.local.u32 	%r859, [%rd2+12];
	// inline asm
	prmt.b32 %r7418, %r858, %r859, %r45;
	// inline asm
	ld.local.v2.u32 	{%r917, %r918}, [%rd2+8];
	// inline asm
	prmt.b32 %r7419, %r918, %r917, %r45;
	// inline asm
	ld.local.u32 	%r866, [%rd2+8];
	ld.local.u32 	%r867, [%rd2+4];
	// inline asm
	prmt.b32 %r7420, %r866, %r867, %r45;
	// inline asm
	ld.local.v2.u32 	{%r919, %r920}, [%rd2];
	// inline asm
	prmt.b32 %r7421, %r920, %r919, %r45;
	// inline asm
	ld.local.u32 	%r874, [%rd2];
	ld.local.u32 	%r875, [%rd1+12];
	// inline asm
	prmt.b32 %r7414, %r874, %r875, %r45;
	// inline asm
	ld.local.v2.u32 	{%r921, %r922}, [%rd1+8];
	// inline asm
	prmt.b32 %r7415, %r922, %r921, %r45;
	// inline asm
	ld.local.u32 	%r882, [%rd1+8];
	ld.local.u32 	%r883, [%rd1+4];
	// inline asm
	prmt.b32 %r7416, %r882, %r883, %r45;
	// inline asm
	ld.local.v2.u32 	{%r923, %r924}, [%rd1];
	// inline asm
	prmt.b32 %r7417, %r924, %r923, %r45;
	// inline asm
	ld.local.u32 	%r890, [%rd1];
	// inline asm
	prmt.b32 %r889, %r890, %r7412, %r45;
	// inline asm
	st.local.u32 	[%rd55], %r889;
	st.local.u32 	[%rd8+8], %r7412;
	st.local.v2.u32 	[%rd8], {%r7412, %r7412};
	st.local.u32 	[%rd7+12], %r7412;
	st.local.u32 	[%rd7+8], %r7412;
	st.local.u32 	[%rd7+4], %r7412;
	st.local.u32 	[%rd7], %r7412;
	st.local.u32 	[%rd6+12], %r7412;
	st.local.u32 	[%rd6+8], %r7412;
	st.local.u32 	[%rd6+4], %r7412;
	st.local.u32 	[%rd6], %r7412;
	st.local.u32 	[%rd5+12], %r7412;
	st.local.u32 	[%rd5+8], %r7412;
	st.local.u32 	[%rd5+4], %r7412;
	st.local.u32 	[%rd5], %r7412;
	st.local.u32 	[%rd4+12], %r7412;
	st.local.u32 	[%rd4+8], %r7412;
	st.local.u32 	[%rd4+4], %r7412;
	st.local.u32 	[%rd4], %r7412;
	st.local.u32 	[%rd3+12], %r7412;
	st.local.u32 	[%rd3+8], %r7412;
	st.local.u32 	[%rd3+4], %r7412;
	st.local.u32 	[%rd3], %r7412;
	st.local.u32 	[%rd2+12], %r7412;
	st.local.u32 	[%rd2+8], %r7412;
	st.local.u32 	[%rd2+4], %r7412;
	st.local.u32 	[%rd2], %r7412;
	st.local.u32 	[%rd1+12], %r7412;
	st.local.u32 	[%rd1+8], %r7412;
	mov.u64 	%rd265, 0;
	st.local.u32 	[%rd1+4], %rd265;
	st.local.u32 	[%rd1], %rd265;
	mov.u32 	%r7413, %r7412;
	bra.uni 	BB6_94;

BB6_7:
	sub.s32 	%r721, %r2, %r7410;
	// Callseq Start 65
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd167;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd158;
	.param .b64 param2;
	st.param.b64	[param2+0], %rd159;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd160;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd161;
	.param .b64 param5;
	st.param.b64	[param5+0], %rd162;
	.param .b64 param6;
	st.param.b64	[param6+0], %rd163;
	.param .b64 param7;
	st.param.b64	[param7+0], %rd164;
	.param .b64 param8;
	st.param.b64	[param8+0], %rd165;
	.param .b32 param9;
	st.param.b32	[param9+0], %r721;
	call.uni 
	sha512_update_128, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7, 
	param8, 
	param9
	);
	
	//{
	}// Callseq End 65

BB6_98:
	mul.wide.u32 	%rd1307, %r7408, -1431655765;
	shr.u64 	%rd1308, %rd1307, 33;
	cvt.u32.u64	%r7371, %rd1308;
	mul.lo.s32 	%r7372, %r7371, 3;
	sub.s32 	%r7373, %r7408, %r7372;
	setp.eq.s32	%p55, %r7373, 0;
	@%p55 bra 	BB6_100;

	// Callseq Start 67
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd167;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd57;
	.param .b32 param2;
	st.param.b32	[param2+0], %r19;
	call.uni 
	sha512_update_global, 
	(
	param0, 
	param1, 
	param2
	);
	
	//{
	}// Callseq End 67

BB6_100:
	mul.wide.u32 	%rd1310, %r7408, 613566757;
	shr.u64 	%rd1311, %rd1310, 32;
	cvt.u32.u64	%r7374, %rd1311;
	sub.s32 	%r7375, %r7408, %r7374;
	shr.u32 	%r7376, %r7375, 1;
	add.s32 	%r7377, %r7376, %r7374;
	shr.u32 	%r7378, %r7377, 2;
	mul.lo.s32 	%r7379, %r7378, 7;
	sub.s32 	%r7380, %r7408, %r7379;
	setp.eq.s32	%p56, %r7380, 0;
	@%p56 bra 	BB6_102;

	// Callseq Start 68
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd167;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd56;
	.param .b32 param2;
	st.param.b32	[param2+0], %r2;
	call.uni 
	sha512_update_global, 
	(
	param0, 
	param1, 
	param2
	);
	
	//{
	}// Callseq End 68

BB6_102:
	and.b32  	%r7385, %r7408, 1;
	setp.eq.s32	%p59, %r7385, 0;
	@%p59 bra 	BB6_104;
	bra.uni 	BB6_103;

BB6_104:
	// Callseq Start 70
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd167;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd56;
	.param .b32 param2;
	st.param.b32	[param2+0], %r2;
	call.uni 
	sha512_update_global, 
	(
	param0, 
	param1, 
	param2
	);
	
	//{
	}// Callseq End 70
	bra.uni 	BB6_105;

BB6_103:
	add.u64 	%rd1353, %SP, 128;
	mov.u32 	%r7381, 64;
	// Callseq Start 69
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd167;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd1353;
	.param .b32 param2;
	st.param.b32	[param2+0], %r7381;
	call.uni 
	sha512_update, 
	(
	param0, 
	param1, 
	param2
	);
	
	//{
	}// Callseq End 69

BB6_105:
	ld.param.u32 	%r7383, [m01800_loop_param_29];
	// Callseq Start 71
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd167;
	call.uni 
	sha512_final, 
	(
	param0
	);
	
	//{
	}// Callseq End 71
	ld.local.u64 	%rd1319, [%rd10];
	shr.u64 	%rd1320, %rd1319, 32;
	cvt.u32.u64	%r7407, %rd1320;
	cvt.u32.u64	%r7406, %rd1319;
	st.local.v2.u32 	[%rd9], {%r7407, %r7406};
	ld.local.u64 	%rd1321, [%rd14];
	shr.u64 	%rd1322, %rd1321, 32;
	cvt.u32.u64	%r7405, %rd1322;
	cvt.u32.u64	%r7404, %rd1321;
	st.local.v2.u32 	[%rd9+8], {%r7405, %r7404};
	ld.local.u64 	%rd1323, [%rd15];
	shr.u64 	%rd1324, %rd1323, 32;
	cvt.u32.u64	%r7403, %rd1324;
	cvt.u32.u64	%r7402, %rd1323;
	st.local.v2.u32 	[%rd9+16], {%r7403, %r7402};
	ld.local.u64 	%rd1325, [%rd16];
	shr.u64 	%rd1326, %rd1325, 32;
	cvt.u32.u64	%r7401, %rd1326;
	cvt.u32.u64	%r7400, %rd1325;
	st.local.v2.u32 	[%rd9+24], {%r7401, %r7400};
	ld.local.u64 	%rd1327, [%rd17];
	shr.u64 	%rd1328, %rd1327, 32;
	cvt.u32.u64	%r7399, %rd1328;
	cvt.u32.u64	%r7398, %rd1327;
	st.local.v2.u32 	[%rd9+32], {%r7399, %r7398};
	ld.local.u64 	%rd1329, [%rd18];
	shr.u64 	%rd1330, %rd1329, 32;
	cvt.u32.u64	%r7397, %rd1330;
	cvt.u32.u64	%r7396, %rd1329;
	st.local.v2.u32 	[%rd9+40], {%r7397, %r7396};
	ld.local.u64 	%rd1331, [%rd19];
	shr.u64 	%rd1332, %rd1331, 32;
	cvt.u32.u64	%r7395, %rd1332;
	cvt.u32.u64	%r7394, %rd1331;
	st.local.v2.u32 	[%rd9+48], {%r7395, %r7394};
	ld.local.u64 	%rd1333, [%rd20];
	shr.u64 	%rd1334, %rd1333, 32;
	cvt.u32.u64	%r7393, %rd1334;
	cvt.u32.u64	%r7392, %rd1333;
	st.local.v2.u32 	[%rd9+56], {%r7393, %r7392};
	add.s32 	%r7408, %r7408, 1;
	add.s32 	%r7409, %r7409, 1;
	setp.lt.u32	%p58, %r7409, %r7383;
	@%p58 bra 	BB6_5;

BB6_106:
	mov.b32	%r7391, %envreg3;
	mov.u32 	%r7390, %ntid.x;
	mov.u32 	%r7389, %ctaid.x;
	mov.u32 	%r7388, %tid.x;
	mad.lo.s32 	%r7387, %r7389, %r7390, %r7391;
	add.s32 	%r7386, %r7387, %r7388;
	mul.wide.s32 	%rd1357, %r7386, 672;
	ld.param.u64 	%rd1356, [m01800_loop_param_4];
	add.s64 	%rd1355, %rd1356, %rd1357;
	st.global.u32 	[%rd1355+96], %r7407;
	st.global.u32 	[%rd1355+100], %r7406;
	st.global.u32 	[%rd1355+104], %r7405;
	st.global.u32 	[%rd1355+108], %r7404;
	st.global.u32 	[%rd1355+112], %r7403;
	st.global.u32 	[%rd1355+116], %r7402;
	st.global.u32 	[%rd1355+120], %r7401;
	st.global.u32 	[%rd1355+124], %r7400;
	st.global.u32 	[%rd1355+128], %r7399;
	st.global.u32 	[%rd1355+132], %r7398;
	st.global.u32 	[%rd1355+136], %r7397;
	st.global.u32 	[%rd1355+140], %r7396;
	st.global.u32 	[%rd1355+144], %r7395;
	st.global.u32 	[%rd1355+148], %r7394;
	st.global.u32 	[%rd1355+152], %r7393;
	st.global.u32 	[%rd1355+156], %r7392;

BB6_107:
	ret;
}

	// .globl	m01800_comp
.entry m01800_comp(
	.param .u64 .ptr .global .align 4 m01800_comp_param_0,
	.param .u64 .ptr .global .align 4 m01800_comp_param_1,
	.param .u64 .ptr .global .align 4 m01800_comp_param_2,
	.param .u64 .ptr .global .align 4 m01800_comp_param_3,
	.param .u64 .ptr .global .align 8 m01800_comp_param_4,
	.param .u64 .ptr .global .align 1 m01800_comp_param_5,
	.param .u64 .ptr .global .align 4 m01800_comp_param_6,
	.param .u64 .ptr .global .align 4 m01800_comp_param_7,
	.param .u64 .ptr .global .align 4 m01800_comp_param_8,
	.param .u64 .ptr .global .align 4 m01800_comp_param_9,
	.param .u64 .ptr .global .align 4 m01800_comp_param_10,
	.param .u64 .ptr .global .align 4 m01800_comp_param_11,
	.param .u64 .ptr .global .align 4 m01800_comp_param_12,
	.param .u64 .ptr .global .align 4 m01800_comp_param_13,
	.param .u64 .ptr .global .align 4 m01800_comp_param_14,
	.param .u64 .ptr .global .align 4 m01800_comp_param_15,
	.param .u64 .ptr .global .align 4 m01800_comp_param_16,
	.param .u64 .ptr .global .align 4 m01800_comp_param_17,
	.param .u64 .ptr .global .align 1 m01800_comp_param_18,
	.param .u64 .ptr .global .align 4 m01800_comp_param_19,
	.param .u64 .ptr .global .align 4 m01800_comp_param_20,
	.param .u64 .ptr .global .align 4 m01800_comp_param_21,
	.param .u64 .ptr .global .align 4 m01800_comp_param_22,
	.param .u64 .ptr .global .align 4 m01800_comp_param_23,
	.param .u32 m01800_comp_param_24,
	.param .u32 m01800_comp_param_25,
	.param .u32 m01800_comp_param_26,
	.param .u32 m01800_comp_param_27,
	.param .u32 m01800_comp_param_28,
	.param .u32 m01800_comp_param_29,
	.param .u32 m01800_comp_param_30,
	.param .u32 m01800_comp_param_31,
	.param .u32 m01800_comp_param_32,
	.param .u32 m01800_comp_param_33,
	.param .u64 m01800_comp_param_34
)
{
	.reg .pred 	%p<25>;
	.reg .b32 	%r<107>;
	.reg .b64 	%rd<47>;


	ld.param.u64 	%rd3, [m01800_comp_param_4];
	ld.param.u64 	%rd4, [m01800_comp_param_6];
	ld.param.u64 	%rd5, [m01800_comp_param_7];
	ld.param.u64 	%rd6, [m01800_comp_param_8];
	ld.param.u64 	%rd7, [m01800_comp_param_9];
	ld.param.u64 	%rd8, [m01800_comp_param_10];
	ld.param.u64 	%rd9, [m01800_comp_param_11];
	ld.param.u64 	%rd10, [m01800_comp_param_12];
	ld.param.u64 	%rd11, [m01800_comp_param_13];
	ld.param.u64 	%rd12, [m01800_comp_param_14];
	ld.param.u64 	%rd13, [m01800_comp_param_15];
	ld.param.u64 	%rd14, [m01800_comp_param_16];
	ld.param.u64 	%rd15, [m01800_comp_param_19];
	ld.param.u32 	%r27, [m01800_comp_param_24];
	ld.param.u32 	%r28, [m01800_comp_param_25];
	ld.param.u32 	%r29, [m01800_comp_param_26];
	ld.param.u32 	%r30, [m01800_comp_param_27];
	ld.param.u32 	%r31, [m01800_comp_param_31];
	ld.param.u32 	%r32, [m01800_comp_param_32];
	ld.param.u64 	%rd16, [m01800_comp_param_34];
	mov.b32	%r33, %envreg3;
	mov.u32 	%r34, %ctaid.x;
	mov.u32 	%r35, %ntid.x;
	mad.lo.s32 	%r36, %r34, %r35, %r33;
	mov.u32 	%r37, %tid.x;
	add.s32 	%r1, %r36, %r37;
	cvt.s64.s32	%rd17, %r1;
	setp.ge.u64	%p1, %rd17, %rd16;
	@%p1 bra 	BB7_29;

	mul.wide.s32 	%rd18, %r1, 672;
	add.s64 	%rd19, %rd3, %rd18;
	ld.global.u32 	%r39, [%rd19+96];
	// inline asm
	prmt.b32 %r38, %r39, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r41, [%rd19+100];
	// inline asm
	prmt.b32 %r40, %r41, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r43, [%rd19+104];
	// inline asm
	prmt.b32 %r42, %r43, 0, 0x0123;
	// inline asm
	ld.global.u32 	%r45, [%rd19+108];
	// inline asm
	prmt.b32 %r44, %r45, 0, 0x0123;
	// inline asm
	and.b32  	%r6, %r28, 31;
	shr.u32 	%r46, %r38, %r6;
	and.b32  	%r47, %r46, %r27;
	mul.wide.u32 	%rd20, %r47, 4;
	add.s64 	%rd21, %rd4, %rd20;
	and.b32  	%r48, %r38, 31;
	mov.u32 	%r49, 1;
	shl.b32 	%r7, %r49, %r48;
	ld.global.u32 	%r50, [%rd21];
	and.b32  	%r51, %r50, %r7;
	setp.eq.s32	%p2, %r51, 0;
	@%p2 bra 	BB7_29;

	shr.u32 	%r52, %r40, %r6;
	and.b32  	%r53, %r52, %r27;
	mul.wide.u32 	%rd22, %r53, 4;
	add.s64 	%rd23, %rd5, %rd22;
	and.b32  	%r54, %r40, 31;
	shl.b32 	%r8, %r49, %r54;
	ld.global.u32 	%r56, [%rd23];
	and.b32  	%r57, %r56, %r8;
	setp.eq.s32	%p3, %r57, 0;
	@%p3 bra 	BB7_29;

	shr.u32 	%r58, %r42, %r6;
	and.b32  	%r59, %r58, %r27;
	mul.wide.u32 	%rd24, %r59, 4;
	add.s64 	%rd25, %rd6, %rd24;
	and.b32  	%r60, %r42, 31;
	shl.b32 	%r9, %r49, %r60;
	ld.global.u32 	%r62, [%rd25];
	and.b32  	%r63, %r62, %r9;
	setp.eq.s32	%p4, %r63, 0;
	@%p4 bra 	BB7_29;

	shr.u32 	%r64, %r44, %r6;
	and.b32  	%r65, %r64, %r27;
	mul.wide.u32 	%rd26, %r65, 4;
	add.s64 	%rd27, %rd7, %rd26;
	and.b32  	%r66, %r44, 31;
	shl.b32 	%r10, %r49, %r66;
	ld.global.u32 	%r68, [%rd27];
	and.b32  	%r69, %r68, %r10;
	setp.eq.s32	%p5, %r69, 0;
	@%p5 bra 	BB7_29;

	and.b32  	%r11, %r29, 31;
	shr.u32 	%r70, %r38, %r11;
	and.b32  	%r71, %r70, %r27;
	mul.wide.u32 	%rd28, %r71, 4;
	add.s64 	%rd29, %rd8, %rd28;
	ld.global.u32 	%r72, [%rd29];
	and.b32  	%r73, %r72, %r7;
	setp.eq.s32	%p6, %r73, 0;
	@%p6 bra 	BB7_29;

	shr.u32 	%r74, %r40, %r11;
	and.b32  	%r75, %r74, %r27;
	mul.wide.u32 	%rd30, %r75, 4;
	add.s64 	%rd31, %rd9, %rd30;
	ld.global.u32 	%r76, [%rd31];
	and.b32  	%r77, %r76, %r8;
	setp.eq.s32	%p7, %r77, 0;
	@%p7 bra 	BB7_29;

	shr.u32 	%r78, %r42, %r11;
	and.b32  	%r79, %r78, %r27;
	mul.wide.u32 	%rd32, %r79, 4;
	add.s64 	%rd33, %rd10, %rd32;
	ld.global.u32 	%r80, [%rd33];
	and.b32  	%r81, %r80, %r9;
	setp.eq.s32	%p8, %r81, 0;
	@%p8 bra 	BB7_29;

	shr.u32 	%r82, %r44, %r11;
	and.b32  	%r83, %r82, %r27;
	mul.wide.u32 	%rd34, %r83, 4;
	add.s64 	%rd35, %rd11, %rd34;
	ld.global.u32 	%r84, [%rd35];
	and.b32  	%r85, %r84, %r10;
	setp.eq.s32	%p9, %r85, 0;
	@%p9 bra 	BB7_29;

	setp.eq.s32	%p10, %r31, 0;
	mov.u32 	%r104, 0;
	mov.u32 	%r86, -1;
	@%p10 bra 	BB7_23;

	mov.u32 	%r103, %r31;

BB7_11:
	shr.u32 	%r14, %r103, 1;
	add.s32 	%r106, %r14, %r104;
	cvt.u64.u32	%rd36, %r106;
	cvt.u64.u32	%rd37, %r32;
	add.s64 	%rd1, %rd36, %rd37;
	shl.b64 	%rd38, %rd1, 6;
	add.s64 	%rd2, %rd13, %rd38;
	ld.global.u32 	%r16, [%rd2+12];
	setp.gt.u32	%p11, %r44, %r16;
	mov.u32 	%r105, %r49;
	@%p11 bra 	BB7_21;

	setp.lt.u32	%p12, %r44, %r16;
	mov.u32 	%r89, -1;
	@%p12 bra 	BB7_13;
	bra.uni 	BB7_14;

BB7_13:
	mov.u32 	%r105, %r89;
	bra.uni 	BB7_21;

BB7_14:
	ld.global.u32 	%r17, [%rd2+8];
	setp.gt.u32	%p13, %r42, %r17;
	mov.u32 	%r105, %r49;
	@%p13 bra 	BB7_21;

	setp.lt.u32	%p14, %r42, %r17;
	@%p14 bra 	BB7_16;
	bra.uni 	BB7_17;

BB7_16:
	mov.u32 	%r105, %r89;
	bra.uni 	BB7_21;

BB7_17:
	ld.global.u32 	%r18, [%rd2+4];
	setp.gt.u32	%p15, %r40, %r18;
	mov.u32 	%r105, %r49;
	@%p15 bra 	BB7_21;

	setp.lt.u32	%p16, %r40, %r18;
	mov.u32 	%r105, %r89;
	@%p16 bra 	BB7_21;

	ld.global.u32 	%r19, [%rd2];
	setp.gt.u32	%p17, %r38, %r19;
	mov.u32 	%r105, %r49;
	@%p17 bra 	BB7_21;

	setp.lt.u32	%p18, %r38, %r19;
	selp.b32	%r105, -1, 0, %p18;

BB7_21:
	add.s32 	%r95, %r14, 1;
	setp.gt.s32	%p19, %r105, 0;
	selp.b32	%r96, %r95, 0, %p19;
	add.s32 	%r104, %r96, %r104;
	selp.b32	%r97, -1, 0, %p19;
	add.s32 	%r98, %r97, %r103;
	shr.u32 	%r103, %r98, 1;
	setp.eq.s32	%p20, %r105, 0;
	@%p20 bra 	BB7_24;

	setp.ne.s32	%p21, %r103, 0;
	@%p21 bra 	BB7_11;

BB7_23:
	mov.u32 	%r106, %r86;

BB7_24:
	setp.eq.s32	%p22, %r106, -1;
	@%p22 bra 	BB7_29;

	add.s32 	%r25, %r106, %r32;
	mul.wide.u32 	%rd43, %r25, 4;
	add.s64 	%rd44, %rd14, %rd43;
	atom.global.add.u32 	%r100, [%rd44], 1;
	setp.ne.s32	%p23, %r100, 0;
	@%p23 bra 	BB7_29;

	atom.global.add.u32 	%r26, [%rd15], 1;
	setp.lt.u32	%p24, %r26, %r31;
	@%p24 bra 	BB7_28;
	bra.uni 	BB7_27;

BB7_28:
	mul.wide.u32 	%rd45, %r26, 20;
	add.s64 	%rd46, %rd12, %rd45;
	st.global.u32 	[%rd46], %r30;
	st.global.u32 	[%rd46+4], %r106;
	st.global.u32 	[%rd46+8], %r25;
	st.global.u32 	[%rd46+12], %r1;
	mov.u32 	%r102, 0;
	st.global.u32 	[%rd46+16], %r102;
	bra.uni 	BB7_29;

BB7_27:
	atom.global.add.u32 	%r101, [%rd15], -1;

BB7_29:
	ret;
}


  